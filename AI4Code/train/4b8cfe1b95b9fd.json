{"cell_type":{"a63d645c":"code","d30bc2b9":"code","cb704178":"code","9292f778":"code","efd5c7f2":"code","fad93a65":"code","12d4560d":"code","3f00410b":"code","a065b68c":"code","6f40a64b":"code","5d2c62ec":"code","db89e287":"code","f356fd03":"code","ff418e9c":"code","97b7daa1":"code","62dffa8d":"code","6b8b6fc7":"markdown"},"source":{"a63d645c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d30bc2b9":"from tensorflow.keras.layers import Input,Lambda,Dense,Flatten\nfrom tensorflow.keras.models import Model,Sequential\nfrom tensorflow.keras.preprocessing import image \nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator,load_img\nimport numpy as np\nfrom glob import glob\nfrom tensorflow.keras.applications.resnet50 import ResNet50\nfrom keras.applications.vgg16 import VGG16\nfrom tensorflow.keras.applications.resnet50 import preprocess_input\n","cb704178":"IMAGE_SIZE = [224, 224]\n\ntrain_path = '\/kaggle\/input\/brain-tumor-classification-mri\/Training\/'\nvalid_path = '\/kaggle\/input\/brain-tumor-classification-mri\/Testing\/'","9292f778":"resnet = VGG16(input_shape=IMAGE_SIZE + [3], weights='imagenet', include_top=False)","efd5c7f2":"for layer in resnet.layers:\n    layer.trainable = False","fad93a65":"folders = glob(train_path)","12d4560d":"len(folders)","3f00410b":"x = Flatten()(resnet.output)","a065b68c":"prediction = Dense(4, activation='softmax')(x)\n\nmodel = Model(inputs=resnet.input, outputs=prediction)","6f40a64b":"model.summary()","5d2c62ec":"model.compile(\n  loss='categorical_crossentropy',\n  optimizer='adam',\n  metrics=['accuracy']\n)","db89e287":"\n# Use the Image Data Generator to import the images from the dataset\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n\ntrain_datagen = ImageDataGenerator(rescale = 1.\/255,\n                                   shear_range = 0.2,\n                                   zoom_range = 0.2,\n                                   horizontal_flip = True)\n\ntest_datagen = ImageDataGenerator(rescale = 1.\/255)","f356fd03":"\n# Make sure you provide the same target size as initialied for the image size\ntraining_set = train_datagen.flow_from_directory(train_path,\n                                                 target_size = (224, 224),\n                                                 batch_size = 20,\n                                                 class_mode = 'categorical')","ff418e9c":"\ntest_set = test_datagen.flow_from_directory(valid_path,\n                                            target_size = (224, 224),\n                                            batch_size = 20,\n                                            class_mode = 'categorical')","97b7daa1":"r = model.fit_generator(\n  training_set,\n  validation_data=test_set,\n  epochs=40,\n  steps_per_epoch=len(training_set),\n  validation_steps=len(test_set)\n)","62dffa8d":"model.save(\"vgg16tumour.h5\")","6b8b6fc7":"# Brain tumor classification using vgg16 with 99% accuracy\n## Please upvote this kernel \n### Thanks!!!"}}