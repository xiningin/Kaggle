{"cell_type":{"08f72bdb":"code","6044b0d5":"code","8d6e837f":"code","9d344b5a":"code","257f3cad":"code","868d2fce":"code","6dad6cf1":"code","137a5dc5":"code","0d6cecbc":"code","230f161c":"code","0ce17512":"code","1616dae0":"code","2c3bdfce":"code","8c5fb28f":"code","778f49cd":"code","35e281d7":"code","f1d521b8":"code","04b563d8":"code","10449eed":"code","934469b0":"code","4d7e9da5":"code","3f210381":"markdown","40b5dd77":"markdown"},"source":{"08f72bdb":"import gc, os\nimport numpy as np\nimport pandas as pd\nfrom sklearn import preprocessing\n\nfrom catboost import CatBoostClassifier, Pool","6044b0d5":"train_df = pd.read_csv(\"\/kaggle\/input\/av-healthcare-analytics-ii\/healthcare\/train_data.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/av-healthcare-analytics-ii\/healthcare\/test_data.csv\")\nsample_submission = pd.read_csv(\"\/kaggle\/input\/av-healthcare-analytics-ii\/healthcare\/sample_sub.csv\")","8d6e837f":"train_df.info()","9d344b5a":"train_df.isna().sum()","257f3cad":"train_df","868d2fce":"for col in train_df.columns:\n    print(f\"{col}: {train_df[col].unique()}\")","6dad6cf1":"label_features = [\"Hospital_type_code\", \"Hospital_region_code\", \"Department\", \"Ward_Type\", \"Ward_Facility_Code\",\n                 \"Type of Admission\", \"Severity of Illness\", \"Age\"]","137a5dc5":"label_encoders = dict()\nfor label_feature in label_features+[\"Stay\"]:\n    le = preprocessing.LabelEncoder()\n    le.fit(train_df[label_feature].unique())\n    label_encoders[label_feature] = le\n    \n    del le\n    gc.collect()","0d6cecbc":"def label_encode(df:pd.DataFrame, label_features:list, encoders:dict):\n    \n    for i, feature_ in enumerate(label_features):\n        print(feature_)\n        df[label_features[i]+\"_encoded\"]=label_encoders[label_features[i]].transform(df[label_features[i]].values)","230f161c":"label_encode(train_df, label_features+[\"Stay\"], label_encoders)\nlabel_encode(test_df, label_features, label_encoders)","0ce17512":"train_df.isna().sum()","1616dae0":"features = [f for f in train_df.columns if f not in[\"case_id\", \"Stay\", \"Stay_encoded\", \"patientid\", \"City_Code_Patient\", \"Bed Grade\"]+label_features]\ntarget = [\"Stay_encoded\"]","2c3bdfce":"eval_split = train_df.groupby([\"Stay_encoded\"]).sample(frac=.2)\ntrain_split = train_df.drop(eval_split.index, axis=0)","8c5fb28f":"params = {\n    \"iterations\":1000,\n    \"task_type\":\"GPU\",\n}\nclf = CatBoostClassifier(**params)","778f49cd":"train_set = Pool(\n    data=train_split[features],\n    label=train_split[target],\n)\n\neval_set = Pool(\n    data=eval_split[features],\n    label=eval_split[target]\n)","35e281d7":"clf.fit(train_set,\n       eval_set=eval_set)","f1d521b8":"preds = clf.predict(test_df[features]).reshape(-1, )","04b563d8":"test_stay = label_encoders[\"Stay\"].inverse_transform(preds)","10449eed":"submission_df = pd.DataFrame({\"case_id\":test_df[\"case_id\"], \"Stay\":test_stay})","934469b0":"submission_df","4d7e9da5":"submission_df.to_csv(\"submission.csv\")","3f210381":"Next Step:\n    \n    Use CatBoost's internal handeling of Textual data","40b5dd77":"checking for the categrical and continuous features.\n\nAlthough,we can use CatBoost's textual handelling, but I want this to be used with other methods too!"}}