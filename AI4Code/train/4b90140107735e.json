{"cell_type":{"702a0226":"code","253aaad1":"code","49f2f7ac":"code","d716c0a0":"code","f545dfaf":"code","2f38f728":"code","0d8d570d":"code","d142c87e":"code","f6933b37":"code","a12a7a76":"code","196e8ff3":"code","742e0de5":"code","302276cc":"code","10342254":"code","2ad7b090":"code","f24e79a5":"code","61f5f961":"markdown","6f38427b":"markdown","0ef3977a":"markdown","deab545e":"markdown","6c31f36d":"markdown"},"source":{"702a0226":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib as plt\nimport plotly.offline as py\nimport plotly.graph_objs as go\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","253aaad1":"df = pd.read_csv('..\/input\/supermarket-sales\/supermarket_sales - Sheet1.csv')","49f2f7ac":"df.head()","d716c0a0":"df.info()","f545dfaf":"df.describe()","2f38f728":"df.isnull().sum()","0d8d570d":"# Convertendo a data em datetime\ndf['Date'] = pd.to_datetime(df['Date'])","d142c87e":"df.head()","f6933b37":"df_produtos = df[['Product line', 'Gender', 'Quantity']]\ndf_produtos = df_produtos.groupby(['Product line', 'Gender'], as_index = False).sum()\ndf_produtos","a12a7a76":"px.bar(df_produtos, x = 'Product line', y = 'Quantity', color = 'Gender', title='Quantidade de produtos por g\u00eanero')","196e8ff3":"df_lucro = df[['Product line', 'gross income']].groupby(['Product line'], as_index = False).sum()\ndf_lucro","742e0de5":"px.bar(df_lucro, x = 'Product line', y = 'gross income', title='Lucro bruto por tipo de produto')","302276cc":"df_data = df.sort_values('Date')\npx.line(df_data, x='Date', y='gross income', color='Product line', title='Lucro di\u00e1rio por tipo de produto')","10342254":"df['Month'] = df['Date'].dt.month\ndf['Month'] = df['Month'].replace({1:'Janeiro', 2:'Fevereiro', 3:'Mar\u00e7o'})\ndf.head()","2ad7b090":"df_lucro_mensal = df[['Month', 'gross income']]\ndf_lucro_mensal = df_lucro_mensal.groupby('Month', as_index=False).sum()\ndf_lucro_mensal","f24e79a5":"px.bar(df_lucro_mensal, x='Month', y='gross income', title='Lucro por m\u00eas')","61f5f961":"**Analisando os dados**","6f38427b":"2 - Qual o lucro de cada tipo de produto?","0ef3977a":"Invoice ID = C\u00f3digo do produto  \nBranch = Filail (A, B, C)  \nCity = Cidade  \nGender = G\u00eanero do comprador  \nProduct Line = Linha do produto  \nUnit Price = Pre\u00e7o unit\u00e1rio  \nQuantity = Quantidade  \nTax 5% = Taxa de 5% na compra  \nTotal = Total da compra  \nDate = Data da compra  \nTime = Hor\u00e1rio da compra  \nPayment = Tipo do pagamento  \nCogs = Custo bruto no valor total da venda  \nGross margin percentage = Porcentagem em cima do valor da venda   \nGross income = Lucro Bruta  \nRating = Nota do cliente em rela\u00e7\u00e3o a compra (1 at\u00e9 10)  ","deab545e":"**Verificando o dataset e suas informa\u00e7\u00f5es**","6c31f36d":"Pergunta 1 - Qual g\u00eanero compra determinado tipo de produto?"}}