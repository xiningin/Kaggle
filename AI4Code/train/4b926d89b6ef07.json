{"cell_type":{"d8682072":"code","ef898e6a":"code","df981d86":"code","53dfb58b":"code","b5ce2893":"code","c95c6234":"code","cb8aac94":"code","89995fe9":"code","22d52b77":"code","587426eb":"code","453caef5":"code","ddc24893":"code","d1bbb662":"code","62b973d9":"code","bebb2eee":"code","e782f2a8":"code","0e36af5b":"code","55de582f":"code","560080e1":"code","26c77bbe":"code","af3afd79":"code","6dbffc2f":"code","af7e2387":"code","73c41349":"markdown","107f536a":"markdown","42c39605":"markdown","2bc222ba":"markdown","8fe63815":"markdown","4cb10aed":"markdown","7a1dcbee":"markdown","b28c6362":"markdown","07221fe6":"markdown","4fbfe1f4":"markdown","a9d4fdd9":"markdown","48911d8c":"markdown","bd17753b":"markdown","9770798b":"markdown","912de56b":"markdown","b2d32495":"markdown","f892b6e6":"markdown","6701e19d":"markdown","8ef6b476":"markdown","e6a6ab57":"markdown","4a9a8c7d":"markdown","e41304d4":"markdown","c9c71459":"markdown","5e84411d":"markdown","1f854b34":"markdown","ac844a8b":"markdown","8bcb7fab":"markdown","e31e26b5":"markdown","883eca64":"markdown"},"source":{"d8682072":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ef898e6a":"import pandas as pd \nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\n\nsns.set_style('whitegrid')","df981d86":"df=pd.read_csv(\"..\/input\/heart-failure-prediction\/heart.csv\")     #load dataset\ndf.head()","53dfb58b":"df.shape","b5ce2893":"df.duplicated().sum()","c95c6234":"df.corr()","cb8aac94":"df.info","89995fe9":"df.describe()","22d52b77":"df.isnull().sum()","587426eb":"age_mid=df.Age.median()\nage_mean=df.Age.mean()\nage_std=df.Age.std()\nprint(\"the standard deviation of age is\",age_std)\ngroup=df.groupby(by=\"HeartDisease\")\ngroup1=group.get_group(1)\ngroup0=group.get_group(0)\nage1=group1[\"Age\"]\nage0=group0[\"Age\"]\nmean_age1=age1.mean()\nmean_age0=age0.mean()\nprint(\"the mean of age with heart disease is\",mean_age1)\nprint(\"the mean of age without heart disease is\",mean_age0)\n\n#plot\nplt.figure(figsize=(15,5))\nplt.hist(df.Age)\nplt.vlines(age_mid, ymin=0, ymax=220, color='#D3E4CD',ls='--', lw=2.5, label='Median')\nplt.vlines(age_mean, ymin=0, ymax=220,color='#D3E4CD', lw=2.5, label='Mean')\nplt.xlabel(\"Age\")\nplt.ylabel(\"Frequency\")\nplt.title(\"Age_hist\")\n\n#subplot\nfig, axs=plt.subplots(nrows=1, ncols=2, figsize=(15, 4))\nax1=age1.plot(kind='hist',ax=axs[0])\nax1.vlines(mean_age1,ymin=0, ymax=220,color='#D3E4CD', lw=2.5, label='Mean_age1')\nax1.set_title(\"With Heart Disease\")\nax2=age0.plot(kind='hist',ax=axs[1])\nax2.vlines(mean_age0, ymin=0, ymax=220,color='#D3E4CD', lw=2.5, label='Mean_age0')\nax2.set_title(\"Without Heart Disease\")\n\n\nfig.suptitle('Distribution of Ages by Heart Disease', size=16, c='#000')\nplt.show()","453caef5":"import plotly.express as px\nfig = px.pie(df['Sex'].value_counts().reset_index(), values = 'Sex', names = 'index', width = 500, height = 500)\nfig.update_traces(textposition = 'inside', \n                  textinfo = 'percent + label', \n                  hole = 0.8, \n                  marker = dict(colors = ['#dd4124','#009473', '#336b87', '#b4b4b4'], line = dict(color = 'white', width = 2)),\n                  hovertemplate = 'Clients: %{value}')\n\nfig.update_layout(annotations = [dict(text = 'Proportion of different gender', \n                                      x = 0.5, y = 0.5, font_size = 15, showarrow = False, \n                                      font_family = 'monospace',\n                                      font_color = 'black')],\n                  showlegend = False)\nfig.show()","ddc24893":"fig = px.pie(group1['Sex'].value_counts().reset_index(), values = 'Sex', names = 'index', width = 500, height = 500)\nfig.update_traces(textposition = 'inside', \n                  textinfo = 'percent + label', \n                  hole = 0.8, \n                  marker = dict(colors = ['#dd4124','#009473', '#336b87', '#b4b4b4'], line = dict(color = 'white', width = 2)),\n                  hovertemplate = 'Clients: %{value}')\n\nfig.update_layout(annotations = [dict(text = 'Proportion of different gender with disease', \n                                      x = 0.5, y = 0.5, font_size = 12, showarrow = False, \n                                      font_family = 'monospace',\n                                      font_color = 'black')],\n                  showlegend = False)\nfig.show()","d1bbb662":"plt.figure(figsize=(15,5))\nax=sns.countplot(x=\"ChestPainType\", hue=\"HeartDisease\", data=df)","62b973d9":"RestingBP_mid=df.Age.median()\nRestingBP_mean=df.Age.mean()\nRestingBP_std=df.Age.std()\nprint(\"the standard deviation of RestingBP is\",RestingBP_std)\nRestingBP1=group1[\"RestingBP\"]\nRestingBP0=group0[\"RestingBP\"]\nmean_RestingBP1=RestingBP1.mean()\nmean_RestingBP0=RestingBP0.mean()\nprint(\"the mean of age with heart disease is\",mean_RestingBP1)\nprint(\"the mean of age without heart disease is\",mean_RestingBP0)\n\n#plot\nplt.figure(figsize=(15,5))\nplt.hist(df.Age)\nplt.vlines(RestingBP_mid, ymin=0, ymax=220, color='#D3E4CD',ls='--', lw=2.5, label='Median')\nplt.vlines(RestingBP_mean, ymin=0, ymax=220,color='#D3E4CD', lw=2.5, label='Mean')\nplt.xlabel(\"RestingBP\")\nplt.ylabel(\"Frequency\")\nplt.title(\"RestingBP_hist\")\n\n#subplot\nfig, axs=plt.subplots(nrows=1, ncols=2, figsize=(15, 4))\nax1=RestingBP1.plot(kind='hist',ax=axs[0])\nax1.vlines(mean_RestingBP1,ymin=0, ymax=220,color='#D3E4CD', lw=2.5, label='Mean_RestingBP1')\nax1.set_title(\"With Heart Disease\")\nax2=RestingBP0.plot(kind='hist',ax=axs[1])\nax2.vlines(mean_RestingBP0, ymin=0, ymax=220,color='#D3E4CD', lw=2.5, label='Mean_RestingBP0')\nax2.set_title(\"Without Heart Disease\")\n\n\nfig.suptitle('Distribution of RestingBP by Heart Disease', size=16, c='#000')\nplt.show()","bebb2eee":"plt.figure(figsize=(15, 5))\nsns.histplot(data=df, x=\"Cholesterol\", hue=\"HeartDisease\")","e782f2a8":"plt.figure(figsize=(15, 5))\nsns.countplot(data=df, x=\"FastingBS\", hue=\"HeartDisease\")","0e36af5b":"plt.figure(figsize=(15, 5))\nsns.countplot(data=df, x=\"RestingECG\", hue=\"HeartDisease\");","55de582f":"MaxHR_mid=df.MaxHR.median()\nMaxHR_mean=df.MaxHR.mean()\nMaxHR_std=df.MaxHR.std()\nprint(\"the standard deviation of MaxHR is\",MaxHR_std)\ngroup=df.groupby(by=\"HeartDisease\")\ngroup1=group.get_group(1)\ngroup0=group.get_group(0)\nMaxHR1=group1[\"MaxHR\"]\nMaxHR0=group0[\"MaxHR\"]\nmean_MaxHR1=MaxHR1.mean()\nmean_MaxHR0=MaxHR0.mean()\nprint(\"the mean of MaxHR with heart disease is\",mean_MaxHR1)\nprint(\"the mean of MaxHR without heart disease is\",mean_MaxHR0)\n\n\n#plot\nplt.figure(figsize=(15,5))\nplt.hist(df.MaxHR)\nplt.vlines(MaxHR_mid, ymin=0, ymax=220, color='#D3E4CD',ls='--', lw=2.5, label='Median')\nplt.vlines(MaxHR_mean, ymin=0, ymax=220,color='#D3E4CD', lw=2.5, label='Mean')\nplt.xlabel(\"MaxHR\")\nplt.ylabel(\"Frequency\")\nplt.title(\"MaxHR_hist\")\n\n\n#subplot\nfig, axs=plt.subplots(nrows=1, ncols=2, figsize=(15, 4))\nax1=MaxHR1.plot(kind='hist',ax=axs[0])\nax1.vlines(mean_MaxHR1,ymin=0, ymax=220,color='#D3E4CD', lw=2.5, label='Mean_MaxHR1')\nax1.set_title(\"With Heart Disease\")\nax2=MaxHR0.plot(kind='hist',ax=axs[1])\nax2.vlines(mean_MaxHR0, ymin=0, ymax=220,color='#D3E4CD', lw=2.5, label='Mean_MaxHR0')\nax2.set_title(\"Without Heart Disease\")\n\n\nfig.suptitle('Distribution of MaxHR by Heart Disease', size=16, c='#000')\nplt.show()","560080e1":"plt.figure(figsize=(15, 5))\nsns.countplot(data=df, x=\"ExerciseAngina\", hue=\"HeartDisease\");","26c77bbe":"Oldpeak_mid=df.Oldpeak.median()\nOldpeak_mean=df.Oldpeak.mean()\nOldpeak_std=df.Oldpeak.std()\nprint(\"the standard deviation of Oldpeak is\",Oldpeak_std)\ngroup=df.groupby(by=\"HeartDisease\")\ngroup1=group.get_group(1)\ngroup0=group.get_group(0)\nOldpeak1=group1[\"Oldpeak\"]\nOldpeak0=group0[\"Oldpeak\"]\nmean_Oldpeak1=Oldpeak1.mean()\nmean_Oldpeak0=Oldpeak0.mean()\nprint(\"the mean of Oldpeak with heart disease is\",mean_Oldpeak1)\nprint(\"the mean of Oldpeak without heart disease is\",mean_Oldpeak0)\n\n\n#plot\nplt.figure(figsize=(15,5))\nplt.hist(df.Oldpeak)\nplt.vlines(Oldpeak_mid, ymin=0, ymax=400, color='#D3E4CD',ls='--', lw=2.5, label='Median')\nplt.vlines(Oldpeak_mean, ymin=0, ymax=400,color='#D3E4CD', lw=2.5, label='Mean')\nplt.xlabel(\"Oldpeak\")\nplt.ylabel(\"Frequency\")\nplt.title(\"Oldpeak_hist\")\n\n\n#subplot\nfig, axs=plt.subplots(nrows=1, ncols=2, figsize=(15, 4))\nax1=Oldpeak1.plot(kind='hist',ax=axs[0])\nax1.vlines(mean_Oldpeak1,ymin=0, ymax=400,color='#D3E4CD', lw=2.5, label='Mean_Oldpeak1')\nax1.set_title(\"With Heart Disease\")\nax2=Oldpeak0.plot(kind='hist',ax=axs[1])\nax2.vlines(mean_Oldpeak0, ymin=0, ymax=400,color='#D3E4CD', lw=2.5, label='Mean_Oldpeak0')\nax2.set_title(\"Without Heart Disease\")\n\n\nfig.suptitle('Distribution of Oldpeak by Heart Disease', size=16, c='#000')\nplt.show()","af3afd79":"plt.figure(figsize=(15, 5))\nsns.countplot(data=df, x=\"ST_Slope\", hue=\"HeartDisease\");","6dbffc2f":"cor=df.drop('HeartDisease', axis=1).corr()\nplt.figure(figsize=(15,5))\nsns.heatmap(cor, annot=True, cmap=\"Set3\");","af7e2387":"from sklearn.ensemble import RandomForestClassifier","73c41349":"7 RestingECG","107f536a":"Heat Map","42c39605":"**Analysis**:From the heat map, we can find ","2bc222ba":"4 RestingBP","8fe63815":"2 Sex","4cb10aed":"**Analysis**:For all kinds of resting ECG, patients with heart disease is higher, especially for ST.","7a1dcbee":"**Analysis**:the mean value for the people who have Heart Disease is a little higher than the poeple who don't. We can assume people with heart disease have higher resting blood presure.","b28c6362":"**Analysis**:People with fasting blood sugar higher than 120 mg\/dl mostly have heart disease","07221fe6":"## **Missing Value**","4fbfe1f4":"## **Features Description**\n* **Age** : age of the patient [years]\n* **Sex** : sex of the patient [M: Male, F: Female]\n* **ChestPainType** : chest pain type\n\n    - TA: Typical Angina, \n    - ATA: Atypical Angina, \n    - NAP: Non-Anginal Pain, \n    - ASY: Asymptomatic\n    \n* **RestingBP** : resting blood pressure [mm Hg]\n* **Cholesterol**: serum cholesterol [mm\/dl]\n* **FastingBS** : fasting blood sugar [1: if FastingBS > 120 mg\/dl, 0: otherwise]\n* **RestingECG** : resting electrocardiogram results \n     - Normal: Normal, \n     - ST: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV), \n     - LVH: showing probable or definite left ventricular hypertrophy by Estes' criteria\n     \n* **MaxHR** : maximum heart rate achieved [Numeric value between 60 and 202]\n* **ExerciseAngina** : exercise-induced angina [Y: Yes, N: No]\n* **Oldpeak** : oldpeak = ST [Numeric value measured in depression]\n* **ST_Slope** : the slope of the peak exercise ST segment [Up: upsloping, Flat: flat, Down: downsloping]\n* **HeartDisease** : output class [1: heart disease, 0: Normal]","a9d4fdd9":"## **Feature Analysis**","48911d8c":"3 ChestPainType","bd17753b":"**Analysis**:when the slope of the peak exercise ST segment is flat ,the people is more likely to have heart disease","9770798b":"6 FastingBS","912de56b":"11 ST_Slope","b2d32495":"**Analysis**:According to the histogram, the patients with one particular chest pain type,named ASY, have more probability to have heart disease. And for some pain types, there is no evidence to show that ChestPainType has connection to heart disease. ","f892b6e6":"10 Oldpeak","6701e19d":"**Analysis**:According to the histograms, Age distribution is approximatly Gaussian.The median and mean approximatly equal. After we divided the data set using HeartDisease. The destribution seems do not change much. So we assume that \"Age\" feature does not contribute too much on HeartDisease. ","8ef6b476":"**Analysis**:It is obviously that people with heart disease are more likely to have a exercise induced angina than people without heart disease","e6a6ab57":"**Analysis**:the patients' ST are vary from -2 to 4,but for the normal people, the ST are concerntrate on 0","4a9a8c7d":"## **Import important packages**","e41304d4":"Description","c9c71459":"**Analysis**:Most heart disease patients have a abnormally low cholesterol.","5e84411d":"8 MaxHR","1f854b34":"1 Age","ac844a8b":"**Analysis**:the mean value of max heart rate for heart disease is lower. And the histogram is left skewed, that means most patients have low max heart rate","8bcb7fab":"9 ExerciseAngina","e31e26b5":"5 Cholesterol","883eca64":"**Analysis**:From the bar graphic, we find the Male are more likely to get heartdisease which approximately consist 90%. This might be an important feature for classification."}}