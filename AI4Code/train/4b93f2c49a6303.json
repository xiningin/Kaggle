{"cell_type":{"a87f22fc":"code","a048a0e0":"code","019d50bc":"code","044ff607":"code","5fe850ca":"code","de4527a4":"code","5de92686":"code","491c8324":"code","a9e44a77":"code","d63eaa03":"code","edf60823":"code","0608c50b":"code","367741ac":"code","2e405bb5":"code","b999cb6a":"code","17edd7e5":"code","c6486ab2":"code","1b430d74":"code","df93742a":"code","aaf96a96":"code","5d4c6425":"code","b86650c1":"code","4d4d569c":"code","0a0effb2":"code","5a7d8c46":"code","e2209102":"code","ab615199":"code","62fd007c":"code","ff036707":"code","8611083a":"code","a16326c8":"code","8ce584ea":"code","4b94c8a3":"markdown","608ea68c":"markdown","783d1650":"markdown"},"source":{"a87f22fc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","a048a0e0":"train=pd.read_csv('..\/input\/train.csv')\ntrain.head(5)","019d50bc":"test=pd.read_csv('..\/input\/test.csv')\ntest.head(5)","044ff607":"train.Sex=train.Sex.astype('category').cat.codes\ntest.Sex=test.Sex.astype('category').cat.codes","5fe850ca":"train.isnull().sum()","de4527a4":"train.describe()","5de92686":"train_df=train.copy()\ntest_df=test.copy()\ntrain_df = pd.get_dummies(train_df, columns=['Embarked', 'Pclass'], drop_first=True)\ntest_df = pd.get_dummies(test_df, columns=['Embarked', 'Pclass'], drop_first=True)","491c8324":"test.isnull().sum()","a9e44a77":"train_df.info()\nprint(test_df.head(5))","d63eaa03":"age_mean=train_df.Age.mean()\n#train_df.Age=train_df.Age.fillna()","edf60823":"#train_df['Age'].fillna(age_mean,inplace=True)\ntrain_df['Age'].fillna(train_df['Age'].median(),inplace=True)","0608c50b":"train_df.info()","367741ac":"age_mean_test=test_df['Age'].mean()\nprint(age_mean_test)\n#test_df['Age'].fillna(age_mean_test,inplace=True)\ntest_df['Age'].fillna(test_df['Age'].median(),inplace=True)","2e405bb5":"test_df['Fare'].fillna(test_df['Fare'].mean(),inplace=True)","b999cb6a":"test_df.Cabin.unique()","17edd7e5":"test_df.drop(columns=['Cabin','Name','Ticket'],axis=1,inplace=True)","c6486ab2":"train_df.drop(columns=['Cabin','Name','Ticket'],axis=1,inplace=True)","1b430d74":"corr=train_df.corr(method='pearson')","df93742a":"import seaborn as sns\nsns.set(context='paper', style='whitegrid', palette='muted', font='sans-serif', font_scale=1, color_codes=True, rc=None)\nsns.heatmap(corr,linewidths=.5)","aaf96a96":"sns.barplot(x=corr.Survived,y=corr.columns)","5d4c6425":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.ensemble import AdaBoostClassifier\nlogReg=LogisticRegression(solver='liblinear')\nsgdcls=SGDClassifier()\nnbcls=GaussianNB()\nknn=KNeighborsClassifier()\ndesclr=DecisionTreeClassifier()\nsvc=SVC()\nada=AdaBoostClassifier()\n#cvs=cross_val_score()\n#confusion_matrix=confusion_matrix()","b86650c1":"# train_X=train_df.drop('Survived',axis=1)\n# train_y=train_df['Survived']\n# test_X=test_df\nX=train_df.drop('Survived',axis=1)\ny=train_df['Survived']\nfrom sklearn.model_selection import train_test_split\nX_train, X_df_test, y_train, y_df_test = train_test_split(X, y, test_size=0.20, random_state=42)","4d4d569c":"logReg.fit(X_train,y_train)\nprediction=logReg.predict(X_df_test)\n#pred_train=logReg.predict(train_y)\nscore=cross_val_score(logReg,X_train,y_train,cv=5)\nprint(\"Score:\",score)\n#print(\"Confusion_matrix:\",confusion_matrix(train_y,pred_train))\nacc_log = round(logReg.score(X_train,y_train) * 100, 2)\nacc_log","0a0effb2":"#SGDClassifier\nsgdcls.fit(X_train,y_train)\nprediction_sgdcls=sgdcls.predict(X_df_test)\n#pred_train=logReg.predict(train_y)\nscore=cross_val_score(sgdcls,X_train,y_train,cv=5)\nprint(\"Score:\",score)\n#print(\"Confusion_matrix:\",confusion_matrix(train_y,pred_train))\nacc_log_sgdcls = round(sgdcls.score(X_train,y_train) * 100, 2)\nacc_log_sgdcls","5a7d8c46":"nbcls.fit(X_train,y_train)\nprediction_nbcls=nbcls.predict(X_df_test)\n#pred_train=logReg.predict(train_y)\nscore=cross_val_score(nbcls,X_train,y_train,cv=5)\nprint(\"Score:\",score)\n#print(\"Confusion_matrix:\",confusion_matrix(train_y,pred_train))\nacc_log_nbcls = round(nbcls.score(X_train,y_train) * 100, 2)\nacc_log_nbcls","e2209102":"knn.fit(X_train,y_train)\nprediction_knn=knn.predict(X_df_test)\n#pred_train=logReg.predict(train_y)\nscore=cross_val_score(knn,X_train,y_train,cv=5)\nprint(\"Score:\",score)\n#print(\"Confusion_matrix:\",confusion_matrix(train_y,pred_train))\nacc_log_knn = round(knn.score(X_train,y_train) * 100, 2)\nacc_log_knn","ab615199":"#DecisionTreeClassifier\ndesclr.fit(X_train,y_train)\nprediction_desclr=desclr.predict(X_df_test)\n#pred_train=logReg.predict(train_y)\nscore=cross_val_score(desclr,X_train,y_train,cv=5)\nprint(\"Score:\",score)\n#print(\"Confusion_matrix:\",confusion_matrix(train_y,pred_train))\nacc_log_desclr = round(desclr.score(X_train,y_train) * 100, 2)\nacc_log_desclr","62fd007c":"svc.fit(X_train,y_train)\nprediction_svc=svc.predict(X_df_test)\n#pred_train=logReg.predict(train_y)\nscore=cross_val_score(svc,X_train,y_train,cv=5)\nprint(\"Score:\",score)\n#print(\"Confusion_matrix:\",confusion_matrix(train_y,pred_train))\nacc_log_svc = round(svc.score(X_train,y_train) * 100, 2)\nacc_log_svc","ff036707":"ada.fit(X_train,y_train)\nprediction_svc=ada.predict(X_df_test)\n#pred_train=logReg.predict(train_y)\nscore=cross_val_score(ada,X_train,y_train,cv=5)\nprint(\"Score:\",score)\n#print(\"Confusion_matrix:\",confusion_matrix(train_y,pred_train))\nacc_log_ada = round(ada.score(X_train,y_train) * 100, 2)\nacc_log_ada","8611083a":"prediction_test=logReg.predict(test_df)","a16326c8":"submission = pd.DataFrame({\n        \"PassengerId\": test_df[\"PassengerId\"],\n        \"Survived\": prediction_test\n    })","8ce584ea":"submission.to_csv('submission.csv',index=False)","4b94c8a3":"**computing mean age for both the test and train dataset and imputing the mean age wherever NaN value exists**","608ea68c":"**encoding object data types to category and further into int data types**","783d1650":"**hot encoding category variables here**"}}