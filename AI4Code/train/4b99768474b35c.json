{"cell_type":{"b8df8304":"code","883a2174":"code","1b2bf49c":"code","776e511e":"code","7125c55d":"code","26559528":"code","08e5c8d6":"code","ea467d88":"code","e496e8a4":"code","1ed0bc36":"code","7b1b4669":"code","339bc16d":"code","ef93275a":"code","63424eed":"code","a782f3b9":"code","e3c4661d":"code","3632dfcc":"code","12972bfc":"code","a59b277c":"code","83245101":"code","b1658736":"code","dea31150":"markdown","36f411a4":"markdown","5bc935e8":"markdown","57ad15b3":"markdown","b16e8acd":"markdown","610be5f0":"markdown"},"source":{"b8df8304":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","883a2174":"import matplotlib.pyplot as plt\nimport seaborn as sns","1b2bf49c":"df = pd.read_csv('\/kaggle\/input\/imdb-indonesian-movies\/indonesian_movies.csv')","776e511e":"df.shape","7125c55d":"df.info()","26559528":"df = df[df['year']>=2000]\ndf.info()","08e5c8d6":"df.head()","ea467d88":"sns.set_style('whitegrid')\nfig,ax = plt.subplots(figsize=(10,5))\nsns.countplot(x='year',data=df,color='b',ax=ax)\nplt.title(\"Produksi Film Indonesia Tiap Tahun\")\nplt.xticks(rotation=45)\nplt.savefig(\"produksi film tiap tahun.png\")\nplt.show()","e496e8a4":"fig,ax = plt.subplots(figsize=(10,5))\nsns.distplot(x=df['users_rating'],color='b',ax=ax)\nsns.despine(left=True)\n    \nax.axvline(x=df['users_rating'].median(), color='m', label='Median', linestyle='--', linewidth=2)\nax.axvline(x=df['users_rating'].mean(), color='b', label='Mean', linestyle='-', linewidth=2)\nax.set(xlabel='Rating',title=\"Distribution of Users Rating\")\n\nax.legend()\nplt.savefig(\"distribusi rating.png\")\nplt.show()\nprint(\"The average rating of Indonesian Movies is {:.2f}\".format(df['users_rating'].mean()))\nprint(\"The median rating of Indonesian Movies is {:.2f}\".format(df['users_rating'].median()))","1ed0bc36":"print(\"Rating maksimal {} dan minimum {}\".format(df['users_rating'].max(),df['users_rating'].min()))","7b1b4669":"g = sns.catplot(x=\"users_rating\",y=\"genre\",data=df,kind=\"box\",order=['Horror','Drama','Comedy'])\ng.fig.set_size_inches(12,7)\ng.set(title=\"Distribusi User Rating 3 Genre Populer\")\nplt.savefig(\"distribusi rating genre.png\")\nplt.show()","339bc16d":"fig,ax = plt.subplots(figsize=(10,5))\nsns.regplot(x='year',y='users_rating',data=df,order=2,color='b',x_estimator=np.mean,ax=ax)\nplt.title(\"Tren Rata-Rata Users Rating Tiap Tahun\")\nplt.savefig(\"tren user rating.png\")\nplt.show()","ef93275a":"fig,ax = plt.subplots(figsize=(10,5))\ndf_crosstab = pd.crosstab(df[\"genre\"],df[\"year\"])\nsns.heatmap(df_crosstab,annot=True,linewidths=1,fmt='d',ax=ax,cmap = sns.cm.rocket_r)\nax.set(title='Heatmap Genre Film Tiap Tahun')\nplt.savefig(\"heatmap genre film.png\")\nplt.show()","63424eed":"#df.groupby('genre')['genre'].count()\nfig,ax = plt.subplots(figsize=(10,5))\nsns.countplot(data=df,x='genre',color='b',ax=ax)\nax.set(title='Jumlah Film Berdasar Genre')\nplt.xticks(rotation=45)\nplt.show()","a782f3b9":"#Cleaning data actors column and make new dataframe to store actors appereance data\ndf['actors'] = df['actors'].str.replace(r'[\\[\\]\\'\\\"]','')\ndf['actors'] = df['actors'].str.replace(', ',',')\n\ndict_actor = {}\nfor actors in df['actors'].values:\n    actors = list(actors.split(\",\"))\n    for actor in actors:\n        if actor in dict_actor.keys():\n            dict_actor[actor] = dict_actor[actor] + 1\n        else:\n            dict_actor[actor] = 1\n\ndf_actor = pd.DataFrame.from_dict(dict_actor,orient='index',columns=['Film'])","e3c4661d":"top_actor = df_actor.sort_values(by='Film',ascending=False)[1:6]\ntop_actor","3632dfcc":"fig, ax = plt.subplots()\nax.bar(top_actor.index, top_actor[\"Film\"],color='b')\nplt.xticks(rotation=10)\nplt.title(\"Aktor dengan Jumlah Film Terbanyak\")\nplt.savefig(\"aktor.png\")\nplt.show()","12972bfc":"top_director = df['directors'].value_counts()[0:5]\ntop_director","a59b277c":"top_director.plot.bar(color='b')\nplt.xticks(rotation=10)\nplt.title(\"Sutradara dengan Film Terbanyak\")\nplt.savefig(\"sutradara.png\")\nplt.show()","83245101":"experienced_dir = df['directors'].value_counts() >= 10 #have directed equal or more than 10 films\nprint(experienced_dir)","b1658736":"top_rated_director = df.groupby('directors')['users_rating'].mean()\ntop_rated_director[experienced_dir].sort_values(ascending=False)[0:5].plot.bar(color='b')\nplt.xticks(rotation=10)\nplt.title(\"Sutradara dengan Skor IMDb Tertinggi\")\nplt.savefig(\"skor sutradara.png\")\nplt.show()","dea31150":"# Importing dataset","36f411a4":"# Users Rating","5bc935e8":" # Dicky Muhammad Rizal\n # 19\/440306\/TK\/48633","57ad15b3":"# Genre","b16e8acd":"# Get only films after 2000","610be5f0":"# Aktor - Sutradara"}}