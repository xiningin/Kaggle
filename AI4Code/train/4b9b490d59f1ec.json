{"cell_type":{"12c19ff9":"code","a1941a20":"code","d1043ada":"code","46a60974":"code","b0db1e7f":"code","a672ac42":"code","ca5c4e18":"code","39de45d6":"code","b32daf11":"code","2c9ffbd7":"markdown","e2b46b5f":"markdown","f69a7e6a":"markdown","04c24657":"markdown","90c64c38":"markdown","a398684e":"markdown"},"source":{"12c19ff9":"import os\nimport gc\nimport cv2\n\nimport numpy as np\nimport pandas as pd\nfrom joblib import delayed, Parallel\nfrom tqdm.notebook import tqdm, trange","a1941a20":"N = 16\nH = 512\nW = 512\nC = cv2.COLOR_BGR2RGB","d1043ada":"TEST_IMG_PATH = '..\/input\/siim-isic-melanoma-classification\/jpeg\/test\/'\nTRAIN_IMG_PATH = '..\/input\/siim-isic-melanoma-classification\/jpeg\/train\/'","46a60974":"test_df = pd.read_csv('..\/input\/siim-isic-melanoma-classification\/test.csv')\ntrain_df = pd.read_csv('..\/input\/siim-isic-melanoma-classification\/train.csv')","b0db1e7f":"def save_to_zip(out_path):\n    # ZIP & rm -rf (remove) folder\n\n    if 'test' in out_path:\n        !zip -r test.zip test\n        !rm -rf test\n\n    if 'train_1' in out_path:\n        !zip -r train_1.zip train_1\n        !rm -rf train_1\n\n    if 'train_2' in out_path:\n        !zip -r train_2.zip train_2\n        !rm -rf train_2","a672ac42":"def save(ids, in_path, out_path):\n    # Resize images to (512, 512) and save\n\n    ids = tqdm(ids)\n\n    for idx, image_name in enumerate(ids):\n        input_read_path = in_path + image_name\n        image = cv2.imread(input_read_path + '.jpg')\n        image = cv2.resize(cv2.cvtColor(image, C), (H, W))\n        output_write_path = out_path + image_name + '.jpg'\n        cv2.imwrite(output_write_path, image); del image; gc.collect()","ca5c4e18":"# Create directories and image ID lists\n\n!mkdir test\n!mkdir train_1\n!mkdir train_2\n\nlength = int(0.5*len(train_df))\ntest_ids = np.array_split(np.array(test_df.image_name), N)\ntrain_ids_1 = np.array_split(np.array(train_df.image_name[:length]), N)\ntrain_ids_2 = np.array_split(np.array(train_df.image_name[length:]), N)","39de45d6":"# Save resized test images to folders with multi-threading\n\npath = \"test\/\"\nparallel = Parallel(n_jobs=N, backend=\"threading\")\nparallel(delayed(save)(ids, TEST_IMG_PATH, path) for ids in test_ids)\n\n# Save resized train images to folders files with multi-threading\n\npath = \"train_1\/\"\nparallel = Parallel(n_jobs=N, backend=\"threading\")\nparallel(delayed(save)(ids, TRAIN_IMG_PATH, path) for ids in train_ids_1)\n\npath = \"train_2\/\"\nparallel = Parallel(n_jobs=N, backend=\"threading\")\nparallel(delayed(save)(ids, TRAIN_IMG_PATH, path) for ids in train_ids_2)","b32daf11":"# Save test images to ZIP\n\nsave_to_zip(\"test\")\n\n# Save train images to ZIP\n\nsave_to_zip(\"train_1\")\nsave_to_zip(\"train_2\")","2c9ffbd7":"## Thank you :D","e2b46b5f":"In this kernel, I will resize all the train images to (512, 512) because I\/O with this dataset is not great.","f69a7e6a":"<center><img src=\"https:\/\/i.imgur.com\/2rGzuN5.jpg\" width=\"750px\" style=\"border:1px solid black\"><\/center>","04c24657":"## Define paths and load .csv files","90c64c38":"## Resize images to (512, 512) and save (with multi-threading)","a398684e":"## Import necessary libraries"}}