{"cell_type":{"5296ead3":"code","d2d7080e":"code","d64c1b96":"code","4c206a3e":"code","05a3cc87":"code","c9861eae":"code","66b27b3f":"code","cf360d70":"code","faadd284":"code","c0f63fe0":"code","41bf2ad2":"code","822a9899":"code","f8512ba7":"code","3c1114a8":"code","ee21ef57":"code","95758bf5":"code","6209f232":"code","4e0b51c9":"code","73dc198e":"code","e6c37704":"markdown","7fddc288":"markdown","fc769199":"markdown","757e61b1":"markdown","cc442636":"markdown"},"source":{"5296ead3":"#Importing packages\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.cluster import DBSCAN\n%matplotlib inline\n\nimport warnings\nwarnings.simplefilter(action='ignore')","d2d7080e":"def num_return (x):\n    vals = x.unique()\n    for val in range(len(vals)):\n        x.replace(to_replace=vals[val], value=val, inplace=True)\n        \n    return (x)","d64c1b96":"input_df = pd.read_csv('..\/input\/ibm-hr-analytics-attrition-dataset\/WA_Fn-UseC_-HR-Employee-Attrition.csv')","4c206a3e":"input_df.info()","05a3cc87":"input_df.head()","c9861eae":"f,ax=plt.subplots(figsize=(15,4))\npal=\"viridis\"\nsns.lineplot(x = input_df['Age'], y=input_df['YearsAtCompany'], hue=input_df['Attrition'],palette=pal )","66b27b3f":"f,ax=plt.subplots(figsize=(15,4))\nplt.hist(input_df[input_df['Attrition']=='Yes']['YearsAtCompany'],bins=20)\nplt.xlabel(\"Years At Company\")","cf360d70":"f,ax=plt.subplots(figsize=(15,4))\nsns.scatterplot(x=input_df['YearsAtCompany'],y=input_df['DailyRate'],hue=input_df['Attrition'],size=input_df['WorkLifeBalance']**10,palette=pal)\n\nplt.xlabel(\"Years At Company\")","faadd284":"jobrole=pd.DataFrame(input_df.groupby(\"JobRole\")[\"PercentSalaryHike\",\"YearsAtCompany\",\"TotalWorkingYears\",\"YearsInCurrentRole\",\"WorkLifeBalance\"].mean())\nf,ax = plt.subplots(figsize = (9,4))\nsns.barplot(x=jobrole.PercentSalaryHike,y=jobrole.index,color='green',alpha = 0.5,label='Percent Salary Hike' )\nsns.barplot(x=jobrole.TotalWorkingYears,y=jobrole.index,color='blue',alpha = 0.7,label='Average Working Years')\nsns.barplot(x=jobrole.YearsAtCompany,y=jobrole.index,color='cyan',alpha = 0.6,label='Years At Company')\nsns.barplot(x=jobrole.YearsInCurrentRole,y=jobrole.index,color='yellow',alpha = 0.6,label='Years In Current Role')\nsns.barplot(x=jobrole.WorkLifeBalance,y=jobrole.index,color='red',alpha = 0.6,label='Work-Life Balance')\n\nax.legend(loc='lower right',frameon = True)     \nax.set(xlabel='Values', ylabel='Job Roles',title = \"Job Roles with Different Features\")\nplt.show()","c0f63fe0":"f,ax=plt.subplots(figsize=(15,4))\ndata = input_df.groupby('Gender').mean().reset_index()\nsns.barplot(data=data, x=\"Gender\", y=\"MonthlyIncome\",palette=pal)","41bf2ad2":"f,ax=plt.subplots(figsize=(15,4))\ndata = input_df.groupby('Department').mean().reset_index()\nsns.barplot(data=data, x=\"Department\", y=\"MonthlyIncome\",palette=pal)","822a9899":"data.columns","f8512ba7":"# f,ax=plt.subplots(figsize=(15,10))\ndata = input_df\ng = sns.relplot(data=data, x=\"DistanceFromHome\", y=\"MonthlyIncome\",hue='WorkLifeBalance',size='TotalWorkingYears',palette=pal)\ng.fig.set_size_inches(15,4)","3c1114a8":"#Taking only relevant values\ninput_df = input_df[['Age','Attrition','BusinessTravel','DailyRate','DistanceFromHome','Education',\n                     'EnvironmentSatisfaction','Gender','MaritalStatus','NumCompaniesWorked',\n                     'OverTime','PercentSalaryHike','PerformanceRating','RelationshipSatisfaction',\n                     'StockOptionLevel','TotalWorkingYears','TrainingTimesLastYear','WorkLifeBalance',\n                     'YearsAtCompany','YearsInCurrentRole','YearsSinceLastPromotion','YearsWithCurrManager']]\ninput_df[['Attrition','BusinessTravel','OverTime','Gender','MaritalStatus']]=input_df[[\n    'Attrition','BusinessTravel','OverTime','Gender','MaritalStatus']].apply(num_return)","ee21ef57":"f,ax=plt.subplots(figsize=(18,18))\nsns.heatmap(input_df.corr(),annot=True,linewidths=0.5,linecolor=\"green\",fmt=\".1f\",ax=ax)","95758bf5":"#Testing\nfrom scipy import stats\n\nt2, p2=stats.ttest_ind(input_df[input_df['Attrition']==1],input_df[input_df['Attrition']==0])\nprint(\"p-value = \" + str(p2.mean()))","6209f232":"from sklearn.feature_selection import RFE\nX = input_df.drop('Attrition',axis=1)\ny = input_df['Attrition']\nmodel = LogisticRegression()\nrfe = RFE(model, 10)\nrfe = rfe.fit(X, y)\nprint('Selected features: %s' % list(X.columns[rfe.support_]))\nSelected_features = list(X.columns[rfe.support_])","4e0b51c9":"\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.metrics import accuracy_score, classification_report, precision_score, recall_score \nfrom sklearn.metrics import confusion_matrix, precision_recall_curve, roc_curve, auc, log_loss","73dc198e":"X = input_df[Selected_features]\ny = input_df['Attrition']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=2)\n\n# check classification scores of logistic regression\nlogreg = LogisticRegression()\nlogreg.fit(X_train, y_train)\ny_pred = logreg.predict(X_test)\ny_pred_proba = logreg.predict_proba(X_test)[:, 1]\n[fpr, tpr, thr] = roc_curve(y_test, y_pred_proba)\nprint('Train\/Test split results:')\nprint(logreg.__class__.__name__+\" accuracy is %2.3f\" % accuracy_score(y_test, y_pred))\nprint(logreg.__class__.__name__+\" log_loss is %2.3f\" % log_loss(y_test, y_pred_proba)) #Refer not -> log likelyhood\nprint(logreg.__class__.__name__+\" auc is %2.3f\" % auc(fpr, tpr))\n\nidx = np.min(np.where(tpr > 0.95)) # index of the first threshold for which the sensibility > 0.95\nf,ax=plt.subplots(figsize=(15,4))\n# plt.figure()\nplt.plot(fpr, tpr, color='coral', label='ROC curve (area = %0.3f)' % auc(fpr, tpr))\nplt.plot([0, 1], [0, 1], 'k--')\nplt.plot([0,fpr[idx]], [tpr[idx],tpr[idx]], 'k--', color='blue')\nplt.plot([fpr[idx],fpr[idx]], [0,tpr[idx]], 'k--', color='blue')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('False Positive Rate (1 - specificity)', fontsize=14)\nplt.ylabel('True Positive Rate (recall)', fontsize=14)\nplt.legend(loc=\"lower right\")\nplt.show()\n\nprint(\"Using a threshold of %.3f \" % thr[idx] + \"guarantees a sensitivity of %.3f \" % tpr[idx] +  \n      \"and a specificity of %.3f\" % (1-fpr[idx]) + \n      \", i.e. a false positive rate of %.2f%%.\" % (np.array(fpr[idx])*100))","e6c37704":"For all visualiztions and inspiration, please chekout the below kaggle notebook (Also present in github repo): https:\/\/www.kaggle.com\/gulsahdemiryurek\/seaborn-exercise, https:\/\/www.kaggle.com\/mnassrib\/titanic-logistic-regression-with-python & https:\/\/www.kaggle.com\/gianzlupko\/predicting-employee-churn-proposing-intervention\/data\n###### Key Observations :","7fddc288":"### Exploratory Analysis and Visualization","fc769199":"## Index:\n1. Exploratory Analysis and Visualization\n2. Observations & Hypothesis\n3. Linear regression: Training and Testing\n4. Conclusion ","757e61b1":"# Car Price Prediction\n\n##### Hi, \n###### Welcome to this jupyter notebook. The objective of this notebook is to best understand logistic regression with the help of the example of employee attrition predictions.  \n###### https:\/\/www.kaggle.com\/HRAnalyticRepository\/employee-attrition-data\n\n## Prologue\n\n\n### About project Mechanic of Machine Learning:\nI am a mechanical engineer by educaion. Now, I want to deep dive in the world of Machine Learning, hence the name, mechanic of ML :D. I have taken up this project to understand the in-depth mathematics involved in regularly used ML algorithms. Under this project, I will be sharing useful material and links as I explore this domain.The objective is to learn and spread the same. Stay tuned to my github for updates!\n\n### Business Case: \nThe goal of this notebook is to develop a risk model that forecasts the likelihood of employee attrition in a business based on historic data. \n### Notebook objectives:\n\n* To understand and implement logistic regression \n* To visualize and understand the data\n* To select features which can best predict costs based on attribute-value pair. \n* To derive conclusions from the data and suggest solutions for business.\n\n### References:\n* Logistic Regression: https:\/\/www.youtube.com\/watch?v=yIYKR4sgzI8\n*                      https:\/\/www.youtube.com\/watch?v=nk2CQITm_eo&t=265s\n*                      https:\/\/www.youtube.com\/watch?v=het9HFqo1TQ\n* Likelyhood: https:\/\/www.youtube.com\/watch?v=pYxNSUDSFH4\n* https:\/\/www.kaggle.com\/gulsahdemiryurek\/seaborn-exercise\n* https:\/\/www.kaggle.com\/mnassrib\/titanic-logistic-regression-with-python\n* https:\/\/www.kaggle.com\/gianzlupko\/predicting-employee-churn-proposing-intervention\/data\n","cc442636":"## Observations & Assumptions:\n\n1. The attrition rate is unrelated to age.\n2. HR review parameters are higly corelated to attrition.(Check linked notebook for clarification)\n3. Employee attrition is high at after 5 years of service\n4. The p value between the datasets of attrition and non attrition is very low, indicating change in behaviour of data.  \n5. Lets progress considering attrition is department independent. "}}