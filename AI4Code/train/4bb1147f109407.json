{"cell_type":{"a81757c2":"code","472ca4e2":"code","8433c418":"code","91c8d388":"code","547b9e1a":"code","47fe85c9":"code","0bac813e":"code","793281b5":"code","e5e99d46":"code","cfb87d91":"code","db8fbedc":"code","12310e9f":"code","9c137315":"code","c6c969a8":"code","24ec0d55":"code","554f25bd":"code","760d4ee5":"code","0a2608c2":"code","c55af914":"code","70e9ae81":"code","e0447533":"code","69f9f9cd":"code","acfe0985":"markdown","b89a3c82":"markdown","1eada967":"markdown","f9566b80":"markdown","231fffb0":"markdown","1397e7ec":"markdown","8d07ea58":"markdown","6b37b079":"markdown","ea0ecaf2":"markdown","d1fa1813":"markdown","6d4ff3cf":"markdown","f848746e":"markdown","ef52d05a":"markdown","cffb9592":"markdown","38e27c34":"markdown","1f7892d6":"markdown"},"source":{"a81757c2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","472ca4e2":"import matplotlib.pyplot as plt\nimport seaborn as sns\n","8433c418":"a=pd.read_csv('\/kaggle\/input\/mercedes-used-car-listing\/merc.csv')\na","91c8d388":"df=pd.DataFrame(a)\ndf","547b9e1a":"df=df.rename(columns={'model':'Model','year':'Year','price':'Price','transmission':'Transmission','mileage':'Mileage','fuelType':'FuelType','tax':'Tax','mpg':'Miles_per_gallon','engineSize':'Engine_Size'})","47fe85c9":"model_price_Analysis_df=df[['Model','Price']]\nmodel_price_Analysis_df","0bac813e":"plt.figure(figsize=(20,8),dpi=80)\nax=plt.axes()\nax.set_facecolor('Black')\nplt.bar(model_price_Analysis_df['Model'],model_price_Analysis_df['Price'],color='white')\nplt.scatter(model_price_Analysis_df['Model'],model_price_Analysis_df['Price'],s=100,color='red')\n\nplt.title('Comparison with Model and Price in the given Dataset',color='blue',fontsize=25)\nplt.xticks(rotation=50,color='blue')\nplt.yticks(color='blue')\nplt.xlabel('Name of the Model',color='blue',fontsize=20)\nplt.ylabel('Price of the Specific Model',color='blue',fontsize=20)\nplt.show()","793281b5":"df[['Model','Year']]","e5e99d46":"a=df['Year'].value_counts()\nb=pd.DataFrame(a)\nb","cfb87d91":"plt.figure(figsize=(16,8),dpi=80)\nax=plt.axes()\nax.set_facecolor('Black')\nplt.bar(b.index,b['Year'],color='white')\nplt.scatter(b.index,b['Year'],s=100,color='red')\nplt.title('Analysis of Year with No of Cars Released in various models in the particular Year',color='blue',fontsize=25)\nplt.xlabel('Year Range',color='blue',fontsize=20)\nplt.ylabel('No of Cars Released in various models',color='blue',fontsize=20)\nplt.xticks(color='blue',fontsize=20)\nplt.yticks(color='blue',fontsize=20)\nplt.show()","db8fbedc":"df[['Model','Price']]","12310e9f":"plt.figure(figsize=(16,8),dpi=80)\nax=plt.axes()\nax.set_facecolor('black')\nplt.bar(df['Model'],df['Price'],color='white',width=0.3)\nplt.xticks(rotation=50,color='blue')\nplt.yticks(color='blue')\nplt.title('Model vs Price',color='blue',fontsize=25)\nplt.xlabel('Model',color='blue',fontsize=20)\nplt.ylabel('Price',color='blue',fontsize=20)\n\nplt.show()","9c137315":"df[['Model','Price','Transmission']]","c6c969a8":"df['Transmission'].value_counts()","24ec0d55":"print(df['Transmission'].value_counts())\nprint(df['Price'].min())\nprint(df['Price'].max())","554f25bd":"plt.figure(figsize=(16,8),dpi=80)\naa=pd.DataFrame({'Semi-Auto':6848,'Automatic':4825,'Manual':1444,'Other':2},index=[0]).T\nplt.pie(x=aa[0],explode=(0.1,0.1,0.1,0.1),autopct='%1.1f%%',shadow=True,startangle=360)\nplt.title('Exploration on percentage of Cars of various Transmission',fontsize=25,color='blue')\nplt.show()","760d4ee5":"plt.figure(figsize=(16,8),dpi=80)\nax=plt.axes()\nax.set_facecolor('black')\nplt.bar(aa.index,aa[0],color='white',width=0.01)\nplt.plot(aa.index,aa[0],color='white')\nplt.scatter(aa.index,aa[0],color='red',s=100)\nplt.xlabel('Transmission Models',fontsize=20)\nplt.ylabel('Number of units Released',fontsize=20)\nplt.title('Transmission Models vs Number of units Released',fontsize=25)\nplt.show()","0a2608c2":"Total_Number_of_units_manufactured=13119\nSemi_Auto=6848\n\nAutomatic=4825\n\nManual=1444\n\nOther=2\nprint('Percentage of Semi-Automatic Mercedes Cars is:',(Semi_Auto\/Total_Number_of_units_manufactured)*100)\nprint()\nprint('Percentage of Automatic Mercedes Cars is:',(Automatic\/Total_Number_of_units_manufactured)*100)\nprint()\nprint('Percentage of Manual Mercedes Cars is:',(Manual\/Total_Number_of_units_manufactured)*100)\nprint()\nprint('Percentage of Other Mercedes Cars is:',(Other\/Total_Number_of_units_manufactured)*100)","c55af914":"df[(df['Price'] == 159999) | (df['Price']==650)]\ng=159999-650\nprint('Price of difference between A-class car and G-class car',g)\nprint()\nprint ('The percentage of difference in the amount is:',(g\/159999)*100)","70e9ae81":"sns.heatmap(corrMatrix, annot=True)","e0447533":"Semi_Auto_df=df[df['Transmission']=='Semi-Auto']\nAutomatic_df=df[df['Transmission']=='Automatic']\nManual_df=df[df['Transmission']=='Manual']\nOther=df[df['Transmission']=='Other']\nprint(Semi_Auto_df[['Transmission','Mileage']])\n\nprint(Automatic_df[['Transmission','Mileage']])\nprint(Manual_df[['Transmission','Mileage']])\nprint(Other[['Transmission','Mileage']])","69f9f9cd":"print('Average Mileage of Cars with Semi-Auto Transmission',np.mean(Semi_Auto_df['Mileage']))\nprint('Min Mileage of Semi_Auto Transmission Cars',Semi_Auto_df['Mileage'].min())\nprint('Max Mileage of Semi_Auto Transmission Cars',Semi_Auto_df['Mileage'].max())\nprint('*******')\nprint()\nprint('Average Mileage of Cars with Automatic Transmission',np.mean(Automatic_df['Mileage']))\nprint('Min Mileage of Automatic Transmission Cars',Automatic_df['Mileage'].min())\nprint('Max Mileage of Automatic Transmission Cars',Automatic_df['Mileage'].max())\nprint('*******')\nprint()\nprint('Average Mileage of Cars with Manual Transmission',np.mean(Manual_df['Mileage']))\nprint('Min Mileage of Manual Transmission Cars',Manual_df['Mileage'].min())\nprint('Max Mileage of Manual Transmission Cars',Manual_df['Mileage'].max())\nprint('*******')\nprint()\nprint('Average Mileage of Cars with Other types Transmission',np.mean(Other['Mileage']))\nprint('Min Mileage of Other types Transmission Cars',Other['Mileage'].min())\nprint('Max Mileage of Other types Transmission Cars',Other['Mileage'].max())\nprint('*******')","acfe0985":"# Analysis using Price","b89a3c82":"**Mecedes Cars have manufactured highest number of Semi-Automatic Cars and testing cases of other transmission models of 2 units and least of which manual cars are launched.**\n\n**From this it is clear that Mecedes Cars are of innovation creators of transmission models and they are highly focussed on their transmission upgradation.**","1eada967":"# **Analysis of Model with Price**","f9566b80":"# **Transforming the csv file to DataFrame**","231fffb0":"# **Correlation Map Identififer of important features**","1397e7ec":"**Reading the csv file**","8d07ea58":"# Analysis Using the Year","6b37b079":"Number of Good Correlation are as below:\n1) Year with Price, Year with tax\n\n2) Price with Engine_size, Price with Tax\n\n3) Mileage with Miles_per_gallon, Mileage with Engine_size","ea0ecaf2":"**Difference between the Minimum Price car and Maximum Price Car**\n\nMost Important Features are\n\n-->Model Name: A Class     ********* -->Model Name: G Class\n\n-->Price of the Car: 650   ********* -->Price of the Car: 159999\n\n-->Engine Size: 1.4    ********* -->Miles_per_gallon: 4.0\n\n-->Transmission: Manual    ********* -->Transmission: Semi-Auto\n\n-->Miles_per_gallon: 40    ********* -->Miles_per_gallon: Manual\n\n-->Mileage: 109090    ********* -->Mileage: 1350\n\n-->Fuel Type: Petrol    ********* -->Fuel Type: Manual\n\n-->Tax: 235    ********* -->Tax: Manual\n\n-->Year of Release: 2003   ********* -->Year of Release: 2020\n\nOn Analysis with Price it is suggested to buy a A class Car rather than spending on G class car as the price difference percentage of the car is ~99.50% higher than A Class car\n","d1fa1813":"# **Conclusion**","6d4ff3cf":"# **Analysis with Transmission**","f848746e":"# **Analysis with Transmissions and Mileage**","ef52d05a":"The highest number of cars which are manufactured by Mecedes are Semi-Automatic and Least are Manual. Other is omitted because it has only 2 units manufactured as this can be considered as a test case.\n\nSemi-Auto-->6848 units\n\nAutomatic-->4825 units\n\nManual-->1444 units\n\nOther-->2 units","cffb9592":"# Thank you\n\n**If it is useful please could you click ^ button beside (Upvote for the notebook)**","38e27c34":"**Percentage of Semi-Automatic Mercedes Cars is: 52.19910054119978 %**\n\n**Percentage of Automatic Mercedes Cars is: 36.77871789008309 %**\n\n**Percentage of Manual Mercedes Cars is: 11.00693650430673 %**\n\n**Percentage of Other Mercedes Cars is: 0.015245064410397136 %**","1f7892d6":"**From the above bar graph, it shows the various releases of Mercedes Cars on the particular year.**\n\n**Years of Least Releases are: 1970, 1997, 1999 with each 1 unit.**\n\n**Highest Number of Releases are in 2019 with 4553 units respectively.**\n"}}