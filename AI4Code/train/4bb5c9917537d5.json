{"cell_type":{"693b7ec6":"code","7f8410d4":"code","68c29d3a":"code","00ae4f11":"code","a1cfe3d6":"code","48c420c9":"code","7956eeae":"code","b7157adf":"code","890ca3d7":"code","47b230ae":"code","34e1dbdb":"code","88c11f3b":"code","976d1ec3":"code","86c3b3c2":"code","6c2a97f3":"code","1afbcfb4":"code","2c141cbc":"code","52f273a7":"code","6ae72ee3":"code","528b9081":"code","de75b32a":"code","47d8a91a":"code","391bfc90":"code","782691e5":"code","df36097d":"code","59fbf925":"code","8b0df64f":"code","de3a4c27":"code","ccb0c982":"code","2a9093ef":"code","312bd1fb":"code","a56f1a05":"code","66a2c735":"code","3af4920a":"code","4feeace3":"code","4f8b8c38":"code","6602084b":"code","3ba0a35e":"code","b048524b":"code","beb6efd0":"code","66661127":"code","f9d600c1":"code","30cfd0b3":"code","cea1846a":"code","a86502d3":"code","9dfa8a71":"code","9f5a895f":"code","eb82ec2c":"code","9004407a":"code","87e96983":"code","47baac1e":"code","c577f8ef":"code","d86e51d3":"code","845769c4":"code","9af7fa09":"code","bc484af0":"code","0ea77dfc":"code","d25ad21c":"code","14b8e333":"code","3222e4dd":"code","1b0245c6":"code","3e2fa533":"code","2eca33d1":"code","fa7daeb5":"code","e073950a":"code","95e85c5f":"markdown","503545f4":"markdown","4f1d7528":"markdown","06ae3998":"markdown","9c154343":"markdown","67745307":"markdown","d6242ee2":"markdown","c9a9031a":"markdown","c4609a30":"markdown","d5ba9634":"markdown","cf454aae":"markdown","b3473e38":"markdown","8d04f6bf":"markdown","97a6be70":"markdown","5286c489":"markdown","1d19320c":"markdown","06466bd2":"markdown","575aadbd":"markdown","35b47d4a":"markdown","ab1930ed":"markdown","3fbe3455":"markdown","03c9b842":"markdown","6d52a1b9":"markdown"},"source":{"693b7ec6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n# data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7f8410d4":"df=pd.read_csv('\/kaggle\/input\/google-play-store-apps\/googleplaystore.csv')","68c29d3a":"df.head(10)","00ae4f11":"df.shape","a1cfe3d6":"df.describe()","48c420c9":"df.boxplot()","7956eeae":"df.hist()","b7157adf":"df.info()","890ca3d7":"df.isnull().sum()","47b230ae":"df[df.Rating>5]","34e1dbdb":"df.drop([10472],inplace=True)","88c11f3b":"df.boxplot()","976d1ec3":"df.hist()","86c3b3c2":"thresh=len(df)*0.1\nthresh","6c2a97f3":"df.dropna(thresh=thresh,axis=1,inplace=True)","1afbcfb4":"df.isnull().sum()","2c141cbc":"def impute_median(series):\n    return series.fillna(series.median())","52f273a7":"df.Rating=df['Rating'].transform(impute_median)","6ae72ee3":"df.isnull().sum()","528b9081":"df['Type'].fillna(str(df['Type'].mode().values[0]),inplace=True)\ndf['Current Ver'].fillna(str(df['Current Ver'].mode().values[0]),inplace=True)\ndf['Android Ver'].fillna(str(df['Android Ver'].mode().values[0]),inplace=True)","de75b32a":"df.isnull().sum()","47d8a91a":"df['Price']=df['Price'].apply(lambda x:float(str(x).replace('$','')))\ndf['Reviews']=pd.to_numeric(df['Reviews'],errors='coerce')","391bfc90":"df['Installs'] = df['Installs'].apply(lambda x: str(x).replace('+', '') if '+' in str(x) else str(x))\ndf['Installs'] = df['Installs'].apply(lambda x: str(x).replace(',', '') if ',' in str(x) else str(x))\ndf['Installs'] = df['Installs'].apply(lambda x: float(x))","782691e5":"df.head(10)","df36097d":"df.describe()","59fbf925":"df.shape","8b0df64f":"plt.figure(figsize=(12,9))\nsns.kdeplot(df.Rating,color='Red',shade=True)\nplt.xlabel('Rating')\nplt.ylabel('Frequency')\nplt.title('Distribution of Rating')","de3a4c27":"df['Category'].describe()","ccb0c982":"df['Category'].unique()","2a9093ef":"plt.figure(figsize=(12,10))\nsns.countplot(x='Category',data=df)\nplt.xticks(rotation=80)\nplt.ylabel('Count')\nplt.title('Count of apps in each category')","312bd1fb":"plt.figure(figsize=(12,10))\nsns.boxplot(x='Category',y='Rating',data=df)\nplt.xticks(rotation=90)\nplt.ylabel('Rating')\nplt.title('Boxplot of Rating vs Category')","a56f1a05":"plt.figure(figsize=(12,9))\nsns.kdeplot(df.Reviews,color='Red',shade=True)\nplt.xlabel('Reviews')\nplt.ylabel('Frequency')\nplt.title('Distribution of Reviews')","66a2c735":"df[df.Reviews>500000]","3af4920a":"plt.figure(figsize=(10,10))\nsns.jointplot(x='Reviews',y='Rating',data=df,color='green',size=9)","4feeace3":"plt.figure(figsize=(12,12))\nsns.regplot(x='Reviews',y='Rating',data=df[df.Reviews<1000000],color='orange')\nplt.title('Rating vs Reviews')","4f8b8c38":"df['Size'].replace('Varies with device', np.nan, inplace = True )","6602084b":"df.Size = (df.Size.replace(r'[kM]+$', '', regex=True).astype(float) * \\\n             df.Size.str.extract(r'[\\d\\.]+([KM]+)', expand=False)\n            .fillna(1)\n            .replace(['k','M'], [10**3, 10**6]).astype(int))","3ba0a35e":"df['Size'].fillna(df.groupby('Category')['Size'].transform('mean'),inplace = True)\n","b048524b":"plt.figure(figsize=(10,10))\nsns.jointplot(x='Size',y='Rating',data=df,color='green',size=10)","beb6efd0":"Sorted_value = sorted(list(df['Installs'].unique()))\n","66661127":"df['Installs'].replace(Sorted_value,range(0,len(Sorted_value),1), inplace = True )","f9d600c1":"df.Installs\n","30cfd0b3":"plt.figure(figsize = (12,10))\nsns.regplot(x=\"Installs\", y=\"Rating\", color = 'teal',data=df);\nplt.title('Rating VS Installs')","cea1846a":"plt.figure(figsize=(10,10))\nplt.pie(x=df['Type'].value_counts(),labels=df['Type'].value_counts().index,explode=(0.1,0.1),autopct='%1.1f%%', shadow=True, startangle=270)\nplt.title('Percentage of free app in store',size=15)","a86502d3":"df['Free'] = df['Type'].map(lambda s :1  if s =='Free' else 0)\ndf.drop(['Type'], axis=1, inplace=True)","9dfa8a71":"df.Free.head()","9f5a895f":"plt.figure(figsize = (10,10))\nsns.regplot(x=\"Price\", y=\"Rating\", color = 'teal',data=df[df['Reviews']<1000000]);\nplt.title('Scatter plot Rating VS Price',size = 15)","eb82ec2c":"df.loc[ df['Price'] == 0, 'PriceBand'] = '0 Free'\ndf.loc[(df['Price'] > 0) & (df['Price'] <= 0.99), 'PriceBand'] = '1 cheap'\ndf.loc[(df['Price'] > 0.99) & (df['Price'] <= 2.99), 'PriceBand']   = '2 not cheap'\ndf.loc[(df['Price'] > 2.99) & (df['Price'] <= 4.99), 'PriceBand']   = '3 normal'\ndf.loc[(df['Price'] > 4.99) & (df['Price'] <= 14.99), 'PriceBand']   = '4 expensive'\ndf.loc[(df['Price'] > 14.99) & (df['Price'] <= 29.99), 'PriceBand']   = '5 too expensive'\ndf.loc[(df['Price'] > 29.99), 'PriceBand']  = '6 Very Very expensive'","9004407a":"df[['PriceBand', 'Rating']].groupby(['PriceBand'], as_index=False).mean()\n","87e96983":"sns.catplot(x=\"PriceBand\",y=\"Rating\",data=df, kind=\"boxen\",size=10)\nplt.xticks(rotation=90)\nplt.ylabel(\"Rating\")\nplt.title('Boxen plot Rating VS PriceBand',size = 20)","47baac1e":"sns.catplot(x=\"Content Rating\",y=\"Rating\",data=df, kind=\"box\", height = 10 )\nplt.xticks(rotation=90)\nplt.ylabel(\"Rating\")\nplt.title('Box plot Rating VS Content Rating',size = 20)","c577f8ef":"df = df[df['Content Rating'] != 'Unrated']\n","d86e51d3":"df = pd.get_dummies(df, columns= [\"Content Rating\"])\n","845769c4":"df['Genres'].describe()","9af7fa09":"df.Genres.unique()","bc484af0":"df.Genres.value_counts()","0ea77dfc":"df['Genres']=df['Genres'].str.split(';').str[0]","d25ad21c":"df.Genres.describe()","14b8e333":"df.Genres.unique()","3222e4dd":"df.Genres.value_counts().tail()","1b0245c6":"df['Genres'].replace('Music & Audio', 'Music',inplace = True)\n","3e2fa533":"df[['Genres', 'Rating']].groupby(['Genres'], as_index=False).mean().describe()\n","2eca33d1":"df[['Genres', 'Rating']].groupby(['Genres'], as_index=False).mean().sort_values('Rating',ascending=False).head(1)\n","fa7daeb5":"df[['Genres', 'Rating']].groupby(['Genres'], as_index=False).mean().sort_values('Rating',ascending=False).tail(1)\n","e073950a":"sns.catplot(x='Genres',y='Rating',data=df,kind='boxen',height=11)\nplt.xticks(rotation=90)\nplt.ylabel('Rating')\nplt.title('Boxplot of Rating vs Genres')","95e85c5f":"# Data Visualization","503545f4":"**Game and Family are the two categories that are most famous .**","4f1d7528":"Getting brief information about datatypes.","06ae3998":"# Loading the packages","9c154343":"**Reading the data**","67745307":"**It shows that well known applications get better ratings.**","d6242ee2":"Checking for missing values.","c9a9031a":"**Famous apps have more reviews.**","c4609a30":"**From the above plot we get to know that the average rating is around 4.**","d5ba9634":"The size values having 'Varies with device' have been replaced by their mean size in each category.","cf454aae":"# Now we convert Non-numerical values in Numeric data","b3473e38":"Taking a look at the first few rows of data","8d04f6bf":"**Remove Columns that are 90% empty.**","97a6be70":"**On an average lowest rating is of the dating apps whereas the highest rating is of word apps.**","5286c489":"Trying to detect any anomaly in the data","1d19320c":"# Data Manipulation","06466bd2":"**Check how many ratings are more than 5 - Outliers**","575aadbd":"**Content Rating does not effect the rating too much.**","35b47d4a":"**Number of install affect the rating.**","ab1930ed":"Thanks for reading my notebook .\n\nIf you found this notebook helpful .. **Please do upvote** and **Follow me**!!!","3fbe3455":"**Higher price application may make customer disappointed, if they are not good enough.**","03c9b842":"**Majority application the playstore are free.**","6d52a1b9":"**Rating of all genres of application are more or less similar.**"}}