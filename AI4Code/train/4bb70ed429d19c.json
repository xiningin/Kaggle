{"cell_type":{"b44be5bc":"code","1e5016fc":"code","2a07dd9d":"code","1b53c7e5":"code","529012ba":"code","0a47c77e":"code","2de3975c":"code","d7d311a1":"markdown","e4d15925":"markdown","afce570d":"markdown","28565a59":"markdown","853191cd":"markdown","8cfa978e":"markdown","b0152f10":"markdown","a64ab0c6":"markdown","3ed63e44":"markdown"},"source":{"b44be5bc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1e5016fc":"data = pd.read_csv('\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')","2a07dd9d":"data = pd.read_csv('\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\n\n## Step 1: Determine how many individuals can be included in the question... \ncoding_experience = pd.DataFrame({'count' : data[1:].groupby( [ 'Q6'] ).size()}).reset_index()\n\nplt.figure(figsize = (6,3))\nsns.barplot(x='Q6', y='count',data=coding_experience.sort_values(by=['count'], ascending=False), palette=\"Blues\",  linewidth=1, edgecolor='k')\nplt.title(\"Coder vs. Non-Coder \\n \\n Q6.For how many years have you been writing code and\/or programming? \\n\",fontsize=16)\nplt.xlabel('Coding Experience',fontsize=12)\nplt.ylabel('# of Occurences')\nplt.xticks(rotation=45 , ha='right')\nplt.show()\n\noccupation = pd.DataFrame({'count' : data[1:].groupby( [ 'Q5'] ).size()}).reset_index()\nplt.figure(figsize = (6,3))\nsns.barplot(x='Q5', y='count',data=occupation.sort_values(by=['count'], ascending=False), palette=\"Greys_r\",  linewidth=1, edgecolor='k')\nplt.title(\"Occupation\\n  \\n Q5.Select the title most similar to your current role (or most recent title if retired)\\n\",fontsize=16)\nplt.xlabel('Occupation',fontsize=12)\nplt.ylabel('# of Occurences')\nplt.xticks(rotation=45 , ha='right')\nplt.show()\n","1b53c7e5":"occupation_coders = data[(data['Q6'] != 'I have never written code') & \n                         (data['Q5'] != 'Student') & \n                         (data['Q5'] != 'Currently not employed')][['Q5','Q6']][1:]\n\noccupation_coders_experience = pd.DataFrame({'count' : occupation_coders.groupby( [ 'Q6'] ).size()}).reset_index()\nplt.figure(figsize = (6,3))\nsns.barplot(x='Q6', y='count',data=occupation_coders_experience.sort_values(by=['count'], ascending=False), palette=\"Blues\",  linewidth=1, edgecolor='k')\nplt.title(\"Occupation of Coders\\n  \\n For how many years have you been writing code and\/or programming?\\n\",fontsize=16)\nplt.xlabel('Years of Experience',fontsize=12)\nplt.ylabel('# of Occurences')\nplt.xticks(rotation=45 , ha='right')\nplt.show()\n\n\noccupation_coders_count = pd.DataFrame({'count' : occupation_coders.groupby( [ 'Q5'] ).size()}).reset_index()\nplt.figure(figsize = (6,3))\nsns.barplot(x='Q5', y='count',data=occupation_coders_count.sort_values(by=['count'], ascending=False), palette=\"Greys_r\",  linewidth=1, edgecolor='k')\nplt.title(\"Occupation of Coders\\n  \\n Q5.Select the title most similar to your current role (or most recent title if retired)\\n\",fontsize=16)\nplt.xlabel('Occupation',fontsize=12)\nplt.ylabel('# of Occurences')\nplt.xticks(rotation=45 , ha='right')\nplt.show()\n","529012ba":"subset = data[(data['Q6'] != 'I have never written code') & \n              (data['Q5'] != 'Student') & \n              (data['Q5'] != 'Currently not employed')][['Q1','Q5','Q6']][1:]\n\n\n#creating a pivot table for the heatmap (age by num of languages)\npivot = pd.pivot_table(subset, index=['Q5'], columns= ['Q6'], aggfunc='count',fill_value =0)\ncols = list(pivot.columns.get_level_values(level=1))\nindex = list(pivot.index.get_level_values(level=0))\n\noutput = pd.DataFrame(pivot.values, index=index, columns=cols)\n\noutput = output.reindex(columns=['< 1 years', '1-2 years', '3-5 years', '5-10 years','10-20 years', '20+ years'])\n\n## Occupation by Years of Experience\n\nplt.figure(figsize = (10,6))\nsns.heatmap(output,cmap=\"Reds\", linewidths=0.5, annot=False, annot_kws={\"fontsize\":8})\nplt.yticks(rotation=0)\nplt.title('Occupation by Years of Coding Experience\\n \\n By # of responses',fontsize=16)\nplt.ylabel('Occupation')\nplt.xlabel('Years of Experience')\nplt.show()","0a47c77e":"## need to find the percentage by row \n\noutput['responses'] = list(output.sum(axis=1))\n#output.head()\n\nfor col in output.columns:\n    if col != \"responses\":\n        col_name = \"perc_\" + col\n        output[col_name] = (output[col] \/ output['responses']) * 100\n\n","2de3975c":"category_names = ['< 1 years', '1-2 years', '3-5 years', '5-10 years','10-20 years', '20+ years']\n\nresults = {\n    'Business Analyst': list(output.iloc[0,7:13].values),\n    'DBA\/Database Engineer': list(output.iloc[1,7:13].values),\n    'Data Analyst': list(output.iloc[2,7:13].values),\n    'Data Engineer': list(output.iloc[3,7:13].values),\n    'Data Scientist': list(output.iloc[4,7:13].values),\n    'Machine Learning Engineer': list(output.iloc[5,7:13].values),\n    'Other':list(output.iloc[6,7:13].values),\n    'Product\/Project Manager':list(output.iloc[7,7:13].values),\n    'Research Scientist':list(output.iloc[8,7:13].values),\n    'Software Engineer':list(output.iloc[9,7:13].values),\n    'Statistician': list(output.iloc[10,7:13].values)\n    \n}\n## REFERENCE: https:\/\/matplotlib.org\/3.1.1\/gallery\/lines_bars_and_markers\/horizontal_barchart_distribution.html#sphx-glr-gallery-lines-bars-and-markers-horizontal-barchart-distribution-py\ndef survey(results, category_names):\n    \"\"\"\n    Parameters\n    ----------\n    results : dict\n        A mapping from question labels to a list of answers per category.\n        It is assumed all lists contain the same number of entries and that\n        it matches the length of *category_names*.\n    category_names : list of str\n        The category labels.\n    \"\"\"\n    labels = list(results.keys())\n    data = np.array(list(results.values()))\n    data_cum = data.cumsum(axis=1)\n    category_colors = plt.get_cmap('RdYlGn')(\n        np.linspace(0.15, 0.85, data.shape[1]))\n\n    fig, ax = plt.subplots(figsize=(9.2, 5))\n    ax.invert_yaxis()\n    ax.xaxis.set_visible(False)\n    ax.set_xlim(0, np.sum(data, axis=1).max())\n\n    for i, (colname, color) in enumerate(zip(category_names, category_colors)):\n        widths = data[:, i]\n        starts = data_cum[:, i] - widths\n        ax.barh(labels, widths, left=starts, height=0.5,\n                label=colname, color=color)\n        xcenters = starts + widths \/ 2\n\n        r, g, b, _ = color\n        text_color = 'white' if r * g * b < 0.5 else 'darkgrey'\n        for y, (x, c) in enumerate(zip(xcenters, widths)):\n            ax.text(x, y, str(int(c)), ha='center', va='center',\n                    color=text_color)\n    ax.legend(ncol=len(category_names), bbox_to_anchor=(0, 1),\n              loc='lower left', fontsize='small')\n\n    return fig, ax\n\n#plt.title(\"% of Years of Experience By Occupation\")\n\nsurvey(results, category_names)\nplt.show()","d7d311a1":"To continue my analysis, I want to determine the years of experience by occupation and then break it down every further. \n","e4d15925":"### Finding the % of Coding Experience By Occupation","afce570d":"<a id=\"start\"> Brainstorming Session <\/a>\n\nThis task seemed daunting due to the sheer amount of what could be defined  as the ultimate data sciene and ML skills. \n\nFor me, it means what skills are used today. ie languages, data viz, BI tools, and to wrap it all up, what are they planning to learn in the future. \n\n","28565a59":"## Starting Point\n\nI wanted to know more about the respondents of the Kaggle survey. From the intro page, I found out that there were 20,036 responses to work with. \n\n#### Step 1: \n- Who responded to the survey?  \n- What are the respondents coding experience?\n- What are the respondents' occupations?","853191cd":"Narrowing down the field to my target respondents:\n - non-students\n - employed  \n - respondents who have written a line of code. \n \n Below is the updated visuals. ","8cfa978e":"# To Be Continued.... \n\n# Feel free to leave comments and feedback :) ","b0152f10":"Steps Taken:\n\n1. [The Start](#start)\n<!--- 2. [Spice it up](#spicy) \n3.[Not making the cut so far... work in progress](#cut) *\/ -->\n\n\n\nTo answer this question, there were a couple of ways to ","a64ab0c6":"<a id=\"start\">","3ed63e44":"\n# Hello and Welcome to my Notebook\n\nOn holidays for a little while and figured I might as well try to do some analysis... Hope y'all enjoy! \n\n   #### *Setting the scene*\n\nCome along for the journey at the end of 2020 to discover the pot of gold at the end of the rainbow, the unicorn of all unicorns, or simply just \n#### *THE ultimate skills to have in the ML and data science field. * \n\n### Buckle up and I hope you enjoy the ride! \n\n"}}