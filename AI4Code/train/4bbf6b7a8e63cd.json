{"cell_type":{"725d2e9a":"code","e2667895":"code","9103a676":"code","3f26572e":"code","98818339":"code","a750923b":"code","25122991":"code","719c4241":"code","6b6450fa":"code","9e928abf":"code","fc45d6d2":"code","ccf7d924":"code","1f7dca3a":"code","97c759ff":"code","09f1c3c3":"code","a28bc089":"code","55142e24":"code","72fd908a":"code","7850d67e":"code","9ed2bf31":"code","be6f4232":"code","cdb1fb10":"markdown"},"source":{"725d2e9a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\ndf=pd.ExcelFile('..\/input\/examresult\/quiz1-1.xlsx')  #sheet_names metodunu kullanmak icin ilk okuma ExcelFile metodu ile yapildi\n\nsheet_df = []                       #dosya icindeki sheetlerin isimlerinin tutuldugu liste\nsheet_df_y = []                     #data frame haline gelecek sheet_df listesindeki isimlerin tekrar kullanilabilmesi icin\ntotal_sheetname_df = []             #sheet_df icindeki elemanlarin dataframe hallerinin guncellenmis hali\n\n[sheet_df.append(i) for i in df.sheet_names]    #dosyadaki sheet isimlerini bulur listeye kaydeder\n[sheet_df_y.append(i) for i in sheet_df]        #sheet isimlerini yedekler\n\nfor i in range(len(sheet_df)):                                              #sheetleri data frame haline guncelleyerek degistirir\n    sheet_df[i] = pd.read_excel(\"..\/input\/examresult\/quiz1-1.xlsx\", sheet_name=str(sheet_df[i]))\n    sheet_df[i]['sinif'] = [sheet_df_y[i] for j in range(len(sheet_df[i]))]  #sheetler data frame haline gelirken sinif adli bir sutunda ekleniyor\n    total_sheetname_df.append(sheet_df[i])\n\nall_df=pd.concat([i for i in total_sheetname_df],sort=False)               #tum sheetleri tek dataframe haline getirir                            \nall_df.index=np.arange(1,len(all_df)+1)             #all_df frame sabit index atanmasi yapildi\nall_df.columns=['isim','dogru','yanlis','bos','sinif']      #dataframe sutun isimleri degistirildi\nall_df.replace(to_replace='girmedi',value=0,inplace=True)   #'girmedi' kolonlari 0 ile degistirildi\nall_df=all_df.fillna(0)                                     #'nan' kolonlari 0 ile degistirildi\nprint(all_df)","e2667895":"#sinava katilan ogrenci sayisi\ncount=0\nfor i in range(len(all_df)):                       #dogrusu olmayan ogrencini yanlis ve bosuda yok ise sinava katilmadigi varsayildi\n    if all_df.iloc[i]['dogru']==0:\n        if  all_df.iloc[i]['yanlis']==0:\n            if all_df.iloc[i]['bos']==0:\n                count+=1\nsinava_katilan= len(all_df)-count           \nprint('tum siniflardan sinava katilan=',sinava_katilan)\n\n#py_sense sinava katilan py_sense_SK\ncount=0\nfor i in range(len(all_df[all_df[\"sinif\"]==\"py_sense\"])):\n    if all_df[all_df[\"sinif\"]==\"py_sense\"].iloc[i]['dogru']==0:\n        if  all_df[all_df[\"sinif\"]==\"py_sense\"].iloc[i]['yanlis']==0:\n            if all_df[all_df[\"sinif\"]==\"py_sense\"].iloc[i]['bos']==0:\n                count+=1\npy_sense_SK=len(all_df[all_df[\"sinif\"]==\"py_sense\"])-count\nprint('py_sense sinava katilan=',py_sense_SK)\n\n#py_science sinava katilan\ncount=0\nfor i in range(len(all_df[all_df[\"sinif\"]==\"py_science\"])):\n    if all_df[all_df[\"sinif\"]==\"py_science\"].iloc[i]['dogru']==0:\n        if  all_df[all_df[\"sinif\"]==\"py_science\"].iloc[i]['yanlis']==0:\n            if all_df[all_df[\"sinif\"]==\"py_science\"].iloc[i]['bos']==0:\n                count+=1\npy_science_SK=len(all_df[all_df[\"sinif\"]==\"py_science\"])-count\nprint('py_science sinava katilan=',py_science_SK)\n\n#py_opinion sinava katilan\ncount=0\nfor i in range(len(all_df[all_df[\"sinif\"]==\"py_opinion\"])):\n    if all_df[all_df[\"sinif\"]==\"py_opinion\"].iloc[i]['dogru']==0:\n        if  all_df[all_df[\"sinif\"]==\"py_opinion\"].iloc[i]['yanlis']==0:\n            if all_df[all_df[\"sinif\"]==\"py_opinion\"].iloc[i]['bos']==0:\n                count+=1\npy_opinion_SK=len(all_df[all_df[\"sinif\"]==\"py_opinion\"])-count\nprint('py_opinion sinava katilan=',py_opinion_SK)\n\n#py_mind sinava katilan\ncount=0\nfor i in range(len(all_df[all_df[\"sinif\"]==\"py_mind\"])):\n    if all_df[all_df[\"sinif\"]==\"py_mind\"].iloc[i]['dogru']==0:\n        if  all_df[all_df[\"sinif\"]==\"py_mind\"].iloc[i]['yanlis']==0:\n            if all_df[all_df[\"sinif\"]==\"py_mind\"].iloc[i]['bos']==0:\n                count+=1\npy_mind_SK=len(all_df[all_df[\"sinif\"]==\"py_mind\"])-count\nprint('py_mind sinava katilan=',py_mind_SK)","9103a676":"#sinavdaki dogru ortalamasi\nprint('tum siniflarin dogru ortalamasi',all_df.dogru.sum()\/sinava_katilan)\n\n#sinif bazinda dogru ortalamalari\npy_sense_DO=(all_df[all_df[\"sinif\"]==\"py_sense\"].dogru.sum())\/py_sense_SK\npy_science_DO=(all_df[all_df[\"sinif\"]==\"py_science\"].dogru.sum())\/py_science_SK\npy_opinion_DO=(all_df[all_df[\"sinif\"]==\"py_opinion\"].dogru.sum())\/py_opinion_SK\npy_mind_DO=(all_df[all_df[\"sinif\"]==\"py_mind\"].dogru.sum())\/py_mind_SK\nprint('py_sense sinifi dogru ortalama=',py_sense_DO)\nprint('py_science sinifi dogru ortalama=',py_science_DO)\nprint('py_opinion sinifi dogru ortalama=',py_opinion_DO)\nprint('py_mind sinifi dogru ortalama=',py_mind_DO)","3f26572e":"#en basarili sinif\nif py_mind_DO>py_sense_DO:\n    print('sinavdaki en basarili sinif=py_mind')\nelif py_opinion_DO>py_mind_DO:\n    print('sinavdaki en basarili sinif=py_opinion')\nelif py_science_DO>py_opinion_DO:\n    print('sinavdaki en basarili sinif=py_science')\nelse:\n    print('sinavdaki en basarili sinif=py_sense')","98818339":"#butun siniflar icinde en basarili 3 kisi\nprint(all_df.sort_values(\"dogru\", ascending=False).nlargest(3, \"dogru\"))","a750923b":"#sinif bazinda en basarili kisiler\nprint('py_sense sinifi en basarili kisisi=\\n',all_df[all_df[\"sinif\"]==\"py_sense\"].sort_values(\"dogru\", ascending=False).nlargest(1, \"dogru\"))\nprint('py_science sinifi en basarili kisisi=\\n',all_df[all_df[\"sinif\"]==\"py_science\"].sort_values(\"dogru\", ascending=False).nlargest(1, \"dogru\"))\nprint('py_opinion sinifi en basarili kisisi=\\n',all_df[all_df[\"sinif\"]==\"py_opinion\"].sort_values(\"dogru\", ascending=False).nlargest(1, \"dogru\"))\nprint('py_mind sinifi en basarili kisisi=\\n',all_df[all_df[\"sinif\"]==\"py_mind\"].sort_values(\"dogru\", ascending=False).nlargest(1, \"dogru\"))","25122991":"#siniflarin dogru cevap dagilimlarina gore plot grafigini verir\"\npy_sense=all_df[all_df.sinif==\"py_sense\"]\npy_science=all_df[all_df.sinif==\"py_science\"]\npy_opinion=all_df[all_df.sinif==\"py_opinion\"]\npy_mind=all_df[all_df.sinif==\"py_mind\"]\nplt.plot(py_sense.sinif,py_sense.dogru,color=\"red\",label= \"py_sense\")\nplt.plot(py_science.sinif,py_science.dogru,color=\"red\",label= \"py_science\")\nplt.plot(py_opinion.sinif,py_opinion.dogru,color=\"red\",label= \"py_opinion\")\nplt.plot(py_mind.sinif,py_mind.dogru,color=\"red\",label= \"py_mind\")\nplt.show()","719c4241":"#siniflarin yanlis cevap dagilimlarina gore scatter grafigini verir\nplt.scatter(py_sense.sinif, py_sense.yanlis, color=\"red\", label=\"py_sense\")\nplt.scatter(py_opinion.sinif, py_opinion.yanlis, color=\"blue\", label=\"py_opinion\")\nplt.scatter(py_science.sinif, py_science.yanlis, color=\"black\", label=\"py_science\")\nplt.scatter(py_mind.sinif, py_mind.yanlis, color=\"yellow\", label=\"py_mind\")\nplt.show()","6b6450fa":"#siniflarin bos cevap dagilimlarina gore histogram grafiklerini verir\nplt.hist(py_sense.bos, bins=70)\nplt.xlabel(\"py_sense bos dagilimlar\")\nplt.ylabel(\"frekans\")\nplt.title(\"hist\")\nplt.show()\nplt.hist(py_opinion.bos, bins=70)\nplt.xlabel(\"py_opinion bos dagilimlar\")\nplt.ylabel(\"frekans\")\nplt.title(\"hist\")\nplt.show()\nplt.hist(py_science.bos, bins=70)\nplt.xlabel(\"py_science bos dagilimlar\")\nplt.ylabel(\"frekans\")\nplt.title(\"hist\")\nplt.show()\nplt.hist(py_mind.bos, bins=70)\nplt.xlabel(\"py_mind bos dagilimlar\")\nplt.ylabel(\"frekans\")\nplt.title(\"hist\")\nplt.show()\n","9e928abf":"#siniflarin dogru yanlis cevap dagilimlarina gore bar grafiklerini verir\nplt.bar(py_sense.dogru,py_sense.yanlis)\nplt.xlabel(\"py_sense dogru dagilimlar\")\nplt.ylabel(\"py_sense yanlis dagilimlar\")\nplt.title(\"bar\")\nplt.show()\nplt.bar(py_opinion.dogru, py_opinion.yanlis)\nplt.xlabel(\"py_opinion dogru dagilimlar\")\nplt.ylabel(\"py_opinion yanlis  dagilimlar\")\nplt.title(\"bar\")\nplt.show()\nplt.bar(py_science.dogru, py_science.yanlis)\nplt.xlabel(\"py_science dogru dagilimlar\")\nplt.ylabel(\"py_science yanlis  dagilimlar\")\nplt.title(\"bar\")\nplt.show()\nplt.bar(py_mind.dogru, py_mind.yanlis)\nplt.xlabel(\"py_mind dogru dagilimlar\")\nplt.ylabel(\"py_mind yanlis  dagilimlar\")\nplt.title(\"bar\")\nplt.show()","fc45d6d2":"xls_py_mind = pd.ExcelFile('\/kaggle\/input\/examresult\/py_mind.xlsx')\nxls_py_science = pd.ExcelFile('\/kaggle\/input\/examresult\/py_science.xlsx')\nxls_py_sense = pd.ExcelFile('\/kaggle\/input\/examresult\/py_sense.xlsx')\nxls_py_opinion = pd.ExcelFile('\/kaggle\/input\/examresult\/py_opinion.xlsx')","ccf7d924":"outerIndex_sinif_ismi=[\"py_mind\", \"py_mind\", \"py_mind\", \"py_mind\",\"py_mind\", \"py_mind\",\"py_mind\", \"py_mind\",\"py_mind\", \"py_mind\",\\\n                       \"py_opinion\",\"py_opinion\",\"py_opinion\",\"py_opinion\",\"py_opinion\",\"py_opinion\",\"py_opinion\",\"py_opinion\",\"py_opinion\",\"py_opinion\",\\\n                       \"py_science\",\"py_science\",\"py_science\",\"py_science\",\"py_science\",\"py_science\",\"py_science\",\"py_science\",\\\n                       \"py_sense\",\"py_sense\",\"py_sense\",\"py_sense\",\"py_sense\",\"py_sense\",\"py_sense\",\"py_sense\",\"py_sense\",\"py_sense\",\"cevap_A.\"]","1f7dca3a":"sheet_to_df_map = {}\nfor sheet_name in xls_py_mind.sheet_names:\n    sheet_to_df_map[sheet_name] = xls_py_mind.parse(sheet_name)\nfor sheet_name in xls_py_opinion.sheet_names:\n        sheet_to_df_map[sheet_name] = xls_py_opinion.parse(sheet_name)\nfor sheet_name in xls_py_science.sheet_names:\n        sheet_to_df_map[sheet_name] = xls_py_science.parse(sheet_name)\nfor sheet_name in xls_py_sense.sheet_names:\n        sheet_to_df_map[sheet_name] = xls_py_sense.parse(sheet_name)\ndegerler=list(sheet_to_df_map.values())","97c759ff":"InnerIndex_isimler=list(sheet_to_df_map.keys())\nInnerIndex_isimler.append(\"Cevap A.\")\nInnerIndex_isimler.remove(\"Blad9\")\nInnerIndex_isimler.remove(\"Blad11\")\nhierarch1=list(zip(outerIndex_sinif_ismi,InnerIndex_isimler))\nhierarch1=pd.MultiIndex.from_tuples(hierarch1)","09f1c3c3":"sinavsonuclari=[]\nkolonlar=[]\nfor i in range(len(degerler)):\n    kolonlar.append(degerler[i].columns)\ncevap_anahtari=[]\nfor i in range(len(degerler)):\n        if len(kolonlar[i])==3:\n            sinavsonuclari.append( list(degerler[i][kolonlar[0][2]])[:20])\n            cevap_anahtari.append( list(degerler[i][kolonlar[0][1]])[:20])\n            print(list(degerler[i][kolonlar[0][2]])[:20])\n        elif len(kolonlar[i])==2 :\n            sinavsonuclari.append( list(degerler[i][kolonlar[i][1]])[:20])\nsinavsonuclari.append(cevap_anahtari[0])\ndf1=pd.DataFrame(sinavsonuclari,hierarch1,columns=[i for i in range(20)])","a28bc089":"correct=[]\nblank=[]\nwrong=[]\nfor i in  range(len(degerler)-1):\n    countc=0\n    countb=0\n    countw=0\n    for j in range(20):\n        if str(df1.iloc[i,j])==str(\"nan\"):\n            countb +=1\n        elif df1.iloc[i,j]==df1.xs(\"cevap_A.\")[j][0]:\n            countc+=1\n        elif df1.iloc[i,j]!=df1.xs(\"cevap_A.\")[j][0]:\n            countw+=1\n    correct.append(countc)\n    blank.append(countb)\n    wrong.append(countw)\ndf1[\"True\"]=correct\ndf1[\"Wrong\"]=wrong\ndf1[\"Blank\"]=blank\n\nprint(df1)","55142e24":"print(\"The number of people Who attend the second Quiz:{}\".format(len(InnerIndex_isimler)-1))","72fd908a":"print(\"The most 3 succesful students according to their True answer numbers\\n\",df1.sort_values(\"True\",ascending=False).nlargest(4,\"True\")[\"True\"][1:4])","7850d67e":"means={}\nmeans[\"py_mind\"]=df1.loc[\"py_mind\"].mean()\nmeans[\"Py_opinion\"]=df1.loc[\"py_opinion\"].mean()\nmeans[\"py_science\"]=df1.loc[\"py_science\"].mean()\nmeans[\"Py_sense\"]=(df1.loc[\"py_sense\"].mean())\nprint(\"Mean of the Classes\\n\",pd.DataFrame(means))","9ed2bf31":"print(\"the most succesfull class according to their true answers\\n\",pd.DataFrame(means).T.sort_values(\"True\",ascending=False).nlargest(1,\"True\"))","be6f4232":"print(\"the most succesful student of the every class\\n\")\nprint(\"Py Mind:\",df1.loc[\"py_mind\"].sort_values(\"True\",ascending=False).nlargest(1, \"True\")[\"True\"])\nprint(\"Py Opinion:\",df1.loc[\"py_opinion\"].sort_values(\"True\",ascending=False).nlargest(1, \"True\")[\"True\"])\nprint(\"Py science:\",df1.loc[\"py_science\"].sort_values(\"True\",ascending=False).nlargest(1, \"True\")[\"True\"])\nprint(\"Py sense:\",df1.loc[\"py_sense\"].sort_values(\"True\",ascending=False).nlargest(1, \"True\")[\"True\"])","cdb1fb10":"eylul ayi ilk odevi, derte vermis oldugum odevi burdan fork ederek yaparsaniz sonuclari kontrol edebiliyorum. odevleri unutmayin bu hafta aldigimiz kararlarida. lutfen bu odev 07.09.2019 saat 24:00 a kadar bitirilsin. iyi calismalar. odevle ilgili yapilmasi gerekenler resim olarak gruba gonderilmistir, Datalari kendiniz ekleyebilir veya sorun yasarsaniz, datalari local calistirabilirisiniz. iyi calismalar"}}