{"cell_type":{"e9484f79":"code","a69b79f2":"code","b0d1e97b":"code","f1693d20":"code","bef4cc79":"code","b3a715cd":"code","2b4d2daa":"code","b81a2391":"code","8c8c3ff1":"markdown","d5939677":"markdown"},"source":{"e9484f79":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a69b79f2":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import GradientBoostingClassifier,RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.feature_selection import SelectKBest,chi2,mutual_info_classif","b0d1e97b":"train=pd.read_csv('\/kaggle\/input\/health-care-data-set-on-heart-attack-possibility\/heart.csv')","f1693d20":"train.describe()","bef4cc79":"train.hist(figsize=(15,10))","b3a715cd":"plt.figure(figsize=(15,10))\nsns.heatmap(train.corr('spearman'),annot=True)","2b4d2daa":"scale=StandardScaler()\ntrain.loc[:,['age','trestbps','chol','thalach']]=pd.DataFrame(scale.fit_transform(train[['age','trestbps','chol','thalach']]),columns=['age','trestbps','chol','thalach'])","b81a2391":"\nselect=SelectKBest(score_func=mutual_info_classif,k=12)\nx=train.drop('target',axis=1)\ny=train['target']\nselect.fit(x,y)\nx=select.transform(x)\nscore=cross_val_score(model,x,y,cv=9,scoring='accuracy')\nprint(np.mean(score))","8c8c3ff1":"# 1.EDA","d5939677":"# 2.Data Manupulation"}}