{"cell_type":{"f2b57457":"code","1892cd7d":"code","aa25c519":"code","39fbd31a":"code","b3280db8":"code","6b2235e0":"code","19c3e18e":"code","2d861f88":"code","1d838d33":"code","ff01b249":"code","ad6a126b":"code","d96edc9c":"code","126bf8dd":"code","68c6a12a":"code","051331d6":"code","fefea3a7":"code","2837d2b8":"code","e0d2c96a":"code","9e400ff6":"code","c6e1949f":"code","92b26db8":"code","a3fa6d90":"code","4f2a5253":"code","4a0fef17":"markdown","20e2ef4c":"markdown","b2e0913f":"markdown","53235dae":"markdown","8d1bac23":"markdown","ff0e20f5":"markdown","19703441":"markdown","782b82e8":"markdown","6cecb00a":"markdown","bb42f1f5":"markdown","ad95b07c":"markdown","be240019":"markdown","26b6729a":"markdown","8cac3615":"markdown","0a29a225":"markdown","8b899420":"markdown","ffa331bc":"markdown","7741588c":"markdown"},"source":{"f2b57457":"from IPython.display import HTML\n\nHTML('''\n<script>\ncode_show=true; \nfunction code_toggle() {\n if (code_show){\n $('div.input').hide();\n } else {\n $('div.input').show();\n }\n code_show = !code_show\n} \n$( document ).ready(code_toggle);\n<\/script>\n<form action=\"javascript:code_toggle()\"><input type=\"submit\" value=\"Click here to toggle on\/off the raw code.\"><\/form>\n''')\n","1892cd7d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load \nimport matplotlib.pyplot as plt                   #For graphics\nimport seaborn as sns #For better looking graphics\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","aa25c519":"# Reading the Train data\ntrain = pd.read_csv('..\/input\/train.csv')","39fbd31a":"train.head()","b3280db8":"# Total number of unique customers\ntrain.card_id.nunique()","6b2235e0":"# Getting the right format of date\ntrain['first_active_month'] = pd.to_datetime(train['first_active_month'],format='%Y%m',infer_datetime_format=True)","19c3e18e":"# Checking the data type\ntrain.info()","2d861f88":"# Converting features to String type\ntrain['feature_1'] = train['feature_1'].apply(lambda x:str(x))\ntrain['feature_2'] = train['feature_2'].apply(lambda x:str(x))\ntrain['feature_3'] = train['feature_3'].apply(lambda x:str(x))","1d838d33":"temp_series = train[['first_active_month','card_id']].groupby('first_active_month').aggregate({'card_id':'count'}).reset_index()\nplt.plot(temp_series['first_active_month'],temp_series['card_id'])\nplt.xlabel(('Time'))\nplt.ylabel(('Count of Customers'))\nplt.title('Popularity over time for ELO products')\nplt.show()","ff01b249":"temp_series1 = train[['first_active_month','target']].groupby('first_active_month').aggregate({'target':'sum'}).reset_index()\nplt.plot(temp_series1['first_active_month'],temp_series1['target'])\nplt.xlabel('Time')\nplt.ylabel('customers loyalty score')\nplt.title('Outlook of ELO Products')\nplt.show()","ad6a126b":"temp_series4 = train[['feature_3','card_id']].groupby('feature_3').aggregate({'card_id':'count'}).reset_index()\ntemp_series4 = temp_series4.sort_values('card_id',ascending=False)\nplt.bar(temp_series4['feature_3'],temp_series4['card_id'])\nplt.xlabel(('Economy Card    &     Premium Card'))\nplt.ylabel(('Count of unique card id'))\nplt.title('Two type in Feature 3')\nplt.show()","d96edc9c":"temp_series2 = train[['feature_1','card_id']].groupby('feature_1').aggregate({'card_id':'count'}).reset_index()\ntemp_series2 = temp_series2.sort_values('card_id',ascending=False)\nplt.bar(temp_series2['feature_1'],temp_series2['card_id'])\nplt.xlabel(('Type of Feature 1'))\nplt.ylabel(('count of card id'))\nplt.title('Distribution of Feature 1')\nplt.show()","126bf8dd":"# Where feature 3 is Economy what is feature 1\ntrain[train['feature_3']=='1'].feature_1.unique()","68c6a12a":"## And lets check Premium card for Feature 1 labels \ntrain[train['feature_3']=='0'].feature_1.unique()","051331d6":"# Frequncy of each feature 1 in Premium Cards\ntrain[train['feature_3']=='0'].feature_1.value_counts()","fefea3a7":"temp_series3 = train[['feature_2','card_id']].groupby('feature_2').aggregate({'card_id':'count'}).reset_index()\ntemp_series3 = temp_series3.sort_values('card_id',ascending=False)\nplt.bar(temp_series3['feature_2'],temp_series3['card_id'])\nplt.xlabel('Silver      Gold       Platinum')\nplt.ylabel('Count of card id')\nplt.title('Premium Card Type in Feature 1')\nplt.show()","2837d2b8":"# Frequncy of each feature 2 in Economy Cards\neco_fe2 = train[train['feature_3']=='1'].feature_2.value_counts().reset_index().rename(columns={'feature_2':'Economy'})\n# Frequncy of each feature 2 in Premium Cards\nprem_fe2 = train[train['feature_3']=='0'].feature_2.value_counts().reset_index().rename(columns={'feature_2':'Premium'})","e0d2c96a":"#merge the two\neco_prem = pd.merge(eco_fe2,prem_fe2,on='index',how='inner')","9e400ff6":"ind = eco_prem.index.tolist()  # the x locations for the groups\n\nfig = plt.figure(figsize=(12,8))\nax = fig.add_subplot(111)\n\nyvals = eco_prem.Economy.tolist()\nrects1 = ax.bar(ind, yvals, width= 0.25, color='r')\nzvals = eco_prem.Premium.tolist()\nrects2 = ax.bar(ind, zvals, width=0.25, color='g')\n\nax.set_ylabel('Frequency')\nax.set_xlabel('Feature_2')\nax.set_xticks(ind)\nax.set_xticklabels( ('1', '2', '3') )\nax.set_title('Feature 2 type distribution in Economy and Premium Card')\nax.legend(('Economy', 'Premium') )","c6e1949f":"train['year'] = train['first_active_month'].dt.year\ntarin_back = train\ntrain = train[train['year']!=2018]\n# Loyalty Card behaviour by Students, Working Professionals and Entreprenuers\nwork_pro = train[train['feature_1']=='1'][['year','target']].groupby('year').aggregate({'target':'sum'}).reset_index()\n\nstud = train[train['feature_1']=='2'][['year','target']].groupby('year').aggregate({'target':'sum'}).reset_index()\nentre = train[train['feature_1']=='3'][['year','target']].groupby('year').aggregate({'target':'sum'}).reset_index()","92b26db8":"entre = entre.rename(columns={'target':'entrepreneur'})\nwork_pro = work_pro.rename(columns={'target':'working professional'})\nstud = stud.rename(columns={'target':'student'})\nentre_work = pd.merge(entre,work_pro,on='year',how='outer')\nentre_work_stud = pd.merge(entre_work,stud,on='year',how='outer')\nentre_work_stud.head()","a3fa6d90":"entre_work_stud.set_index('year',inplace=True)","4f2a5253":"plt.figure(figsize=(15,7))\nplt.xlabel('Target for New Joins by Feature 2')\n\nax1 = entre_work_stud['working professional'].plot(color='blue', grid=True, label='Working Professional')\nax2 = entre_work_stud['student'].plot(color='red', grid=True, secondary_y=True, label='Student')\nax3 = entre_work_stud['entrepreneur'].plot(color='green', grid=True, secondary_y=True, label='Entrepreneur')\n\nh1, l1 = ax1.get_legend_handles_labels()\nh2, l2 = ax2.get_legend_handles_labels()\nh3, l3 = ax3.get_legend_handles_labels()\n\nplt.legend(h1+h2, l1+l2, loc=2)\nplt.show()","4a0fef17":"## Two type of Feature 3 cards \n***To make things easy to relate to, I like to name stuff<br\/>\nSo from now on we will use following terminology<br\/>\nFeature 3 - Label 1 is our Economy Card<br\/>\nFeature 3 - Label 0 is our Premium Card<br\/>***","20e2ef4c":"### The number of customers have grown exponentially since the loyalty program started in the end of 2011\n#### 2018 hardly has any data, for now it maybe a good idea to drop it completely, we can come back it later.","b2e0913f":"## How has been the popularity of ELO across the years?","53235dae":"### Data Types","8d1bac23":"## For Economy vs Premium Card \n## Let's visualize how the distribution has been for feature 2","ff0e20f5":"# INTRODUCTION \n@ Team winner_winner_chicken_dinner <br\/>\n[Smitha_Acha](https:\/\/www.kaggle.com\/smithaachar)r and [Arjun_Singh ](https:\/\/www.kaggle.com\/arjunsinghyadav2)\n## ELO Is trying to predict the Customer Loyalty Score\n## We will analyze the data here and try to come up with a strategy to use. ","19703441":"### Feature 2 has 3 type of labels 1 is most popular type","782b82e8":"## Card feature 1 is of 5 category where 3 being the most popular label\n## I wonder if feature 1 category are related to feature 3 in some way","6cecb00a":"## So Economy card has two categories\n***Feature 1 - Label 5 - Copper<br\/>\nFeature 1 - Label 3 - Bronze***","bb42f1f5":"### We can see that it has been fairly negative, the uplift in 2018 is almost a false flag as this could be totally due to small sample with mostly positive score.","ad95b07c":"## Feature two seems to be the only one common across all cutomers \nSo it has to be something related to the personality or difference in the consumer age<br\/>\nGiven label 3 in lowest frequecy:<br\/>\n***Lets say Label - 3 is Entreprenuers <br\/>\nLabel- 2 is Students <br\/>\nLabel -1 is Working Professionals***","be240019":"## How has the outlook of all new customers been towards ELO products?","26b6729a":"### The Working Professionals have been quite negative about ELO service compared to Student and Entrepreneurs, Ideally we should treat them in two seperate groups and build seperate models.","8cac3615":"### Total unique Customers","0a29a225":"# Training data overview","8b899420":"# Type of Cards\n### The train and test data has three loyalty card features\n\n### Feature 1 | Feature 2 | Feature 3\n### The feature are annonamized but they need to be infered in oder to understand loyalty programs","ffa331bc":"### Finally lets look at the outlook of these three customer bases differently throughout the history of ELO","7741588c":"## Premium Card has 3 Features\n*** Feature 1 - Label 1 - Platinum<br\/> \nFeature 1 - Label 2 - Silver<br\/>\nFeature 1 - Label 3 - Gold***"}}