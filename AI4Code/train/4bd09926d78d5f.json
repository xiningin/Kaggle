{"cell_type":{"2231ba7c":"code","a362546f":"code","99b2ca2f":"code","e7ff0e25":"code","0a25ef4b":"code","ed32279c":"code","574fdef6":"code","668802c3":"code","b08f5b4e":"code","24808140":"code","4699a3ed":"code","9aa4a638":"code","5f475656":"code","714b5ef3":"code","c779b84d":"code","f1dd8ee0":"code","ad10637f":"code","7260353c":"code","cd6100d0":"code","259220b3":"code","388964b9":"code","e871d1e5":"code","b723c129":"code","f89e403c":"code","12cfc537":"code","d5a07433":"code","6289cca5":"code","c4780219":"code","a8065ec7":"code","6a2ccb13":"code","aefb92c0":"code","81871306":"code","4cb7877f":"markdown","7c4c089e":"markdown","9b019795":"markdown","43376280":"markdown","4fd29e6a":"markdown","0d6b87e5":"markdown","d679f947":"markdown","3442ac97":"markdown","c8dfe7a0":"markdown","bd29c6a9":"markdown","6cc05ed5":"markdown","6df686b1":"markdown","f8343eec":"markdown","5ae7c16d":"markdown","7baa265b":"markdown","5af6da5c":"markdown","520703d0":"markdown","d599f42f":"markdown","e4b29eb8":"markdown","3b7616ed":"markdown","db3583cc":"markdown","0fae9fe9":"markdown","303be81b":"markdown","c92692b0":"markdown","1bb3cf03":"markdown","cf401e61":"markdown","d290fee7":"markdown","b80e09c2":"markdown","1ae4849c":"markdown"},"source":{"2231ba7c":"import pandas as pd\n\nimport seaborn as sns ## These Three lines are necessary for Seaborn to work   \nimport matplotlib.pyplot as plt \nsns.set(color_codes=True)\n\n%matplotlib inline \n\n\nimport plotly_express as px ##Plotly Express need only one line to load the libraries","a362546f":"auto = pd.read_csv('..\/input\/auto-data-set-with-automotive-information\/Auto.csv')## Loading the data set ","99b2ca2f":"auto.head()## Let's take look on the data set","e7ff0e25":"sns.boxplot(auto['number_of_doors'], auto['horsepower']);","0a25ef4b":"fig = px.box(auto, x=\"number_of_doors\", y=\"horsepower\")\nfig.show()","ed32279c":"sns.set(font=\"Verdana\") ## Global font type , this will apply for all seaborn plots\nplt.figure(figsize=(9,6)) ## Changing the Figure Size \nbox=sns.boxplot(auto['number_of_doors'], auto['horsepower']) # Define the plot with variables \nbox.axes.set_title(\"Seaborn Box Plot\",fontsize=20) # Set the Tittle for the defined plot\nbox.set_xlabel(\"No of Doors\",fontsize=16) # Set the x-axis Label and fornt size\nbox.set_ylabel(\"Horsepower\",fontsize=16); # Set the y-axis Label and fornt size","574fdef6":"# Defining the plot with Size and Title text \nfig = px.box(auto, x=\"number_of_doors\", y=\"horsepower\",width=700, height=500,title='Plotly Express Box Plot',labels={\"horsepower\": \"Horsepower\",  \"number_of_doors\": \"No of Doors\"}) \nfig.update_layout(font_family=\"Courier New\", # Changing Styling of the plot \n    font_color=\"black\",\n    font_size=16,              \n    title_font_family=\"Times New Roman\",\n    title_font_color=\"green\",\n    title_font_size=26,              \n    title={'y':0.9,'x':0.5}) # Change the Title Alignment\nfig.show()","668802c3":"fig, axs = plt.subplots(ncols = 2, figsize = (30, 7))\nsns.distplot(auto['highway_mpg'],ax=axs[0],kde=False);\nsns.distplot(auto['highway_mpg'],ax=axs[1]);","b08f5b4e":"fig = px.histogram(auto, x=\"highway_mpg\",histnorm='probability density',width=600, height=400)\nfig.show()","24808140":"import plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\n\nfig = make_subplots(rows=1, cols=2,subplot_titles=(\"Histograp with count\", \"histogram with probability density\"))\n\ntrace0 = go.Histogram(x=auto['highway_mpg'])\ntrace1 = go.Histogram(x=auto['highway_mpg'],histnorm='probability density')\n\nfig.append_trace(trace0, 1, 1,)\nfig.append_trace(trace1, 1, 2)\n\nfig.show()","4699a3ed":"sns.jointplot(auto['engine_size'], auto['horsepower']);","9aa4a638":"fig = px.scatter(auto, x=\"engine_size\", y=\"horsepower\",marginal_y=\"histogram\",marginal_x=\"histogram\",width=600, height=600)\nfig.show()","5f475656":"fig = px.scatter(auto, x=\"engine_size\", y=\"horsepower\",color=\"drive_wheels\",size='price',hover_data=['number_of_doors'],width=900, height=500)\nfig.show()","714b5ef3":"sns.jointplot(auto['engine_size'], auto['horsepower'], kind=\"kde\");","c779b84d":"fig = go.Figure(go.Histogram2dContour(\n        x = auto['engine_size'],\n        y = auto['horsepower'],\n        colorscale = 'Blues'\n))\nfig.update_layout(width=500, height=500)\nfig.show()","f1dd8ee0":"sns.pairplot(auto[['normalized_losses', 'engine_size', 'horsepower']]);","ad10637f":"fig = px.scatter_matrix(auto, dimensions=auto[['normalized_losses', 'engine_size', 'horsepower']],width=700, height=700)\nfig.show()","7260353c":"fig = px.scatter_matrix(auto, dimensions=auto[['normalized_losses', 'engine_size', 'horsepower']],color=\"fuel_type\",width=700, height=700)\nfig.show()","cd6100d0":"sns.stripplot(auto['fuel_type'], auto['horsepower'], jitter=True);","259220b3":"fig = px.strip(auto, x=\"fuel_type\", y=\"horsepower\",width=600, height=400)\nfig.show()","388964b9":"sns.boxplot(auto['number_of_doors'], auto['horsepower']);","e871d1e5":"fig = px.box(auto, x=\"number_of_doors\", y=\"horsepower\",width=600, height=400)\nfig.show()","b723c129":"plt.figure(figsize=(10,6))\nsns.boxplot(auto['number_of_doors'], auto['horsepower'], hue=auto['fuel_type']);","f89e403c":"fig = px.box(auto, x=\"number_of_doors\", y=\"horsepower\", color=\"fuel_type\",width=800, height=500)\nfig.show()","12cfc537":"plt.figure(figsize=(10,6))\nsns.violinplot(y=auto[\"horsepower\"], x=auto[\"number_of_doors\"], hue=auto[\"fuel_type\"]);","d5a07433":"fig = px.violin(auto, y=\"horsepower\", x=\"number_of_doors\", color=\"fuel_type\", box=True, points=\"all\",width=800, height=500)\nfig.show()","6289cca5":"sns.barplot(auto['body_style'], auto['horsepower'], hue=auto['fuel_type']);","c4780219":"sns.countplot(auto['body_style'],hue=auto['fuel_type']);","a8065ec7":"fig = px.bar(auto, x=\"body_style\", y=\"horsepower\", color='fuel_type',barmode='group',width=600, height=400)\nfig.show()","6a2ccb13":"plt.figure(figsize=(8,8))\nsns.heatmap(auto.corr())\nplt.show()","aefb92c0":"fig = px.imshow(auto.corr(),x=list(auto.corr().columns),y=list(auto.corr().columns),width=600, height=600)\nfig.show()","81871306":"fig = px.scatter_3d(auto, x='normalized_losses', y='engine_size', z='horsepower', color='fuel_type')\nfig.show()","4cb7877f":"in Seaborn , a special case for the bar plot is when you want to show the number of observations in each category rather than computing the mean of a second variable. This is similar to a histogram over a categorical, rather than quantitative, variable. In seaborn, it\u2019s easy to do so with the countplot() function:","7c4c089e":"### Box plot Comparison\n\nThis kind of plot shows the three quartile values of the distribution along with extreme values. The \u201cwhiskers\u201d extend to points that lie within 1.5 IQRs of the lower and upper quartile, and then observations that fall outside this range are displayed independently. \n\n#### Seaborn:","9b019795":"**Plotly Express is a better option for your EDA than Seaborn. Each Library has its own advantages, But Plotly is a clear winner when it's come to interactive grapgs which allow you to dig in to deeper insights during your EDA. **","43376280":"Plotly offered barplot option is different than Seaborn notation. There is no countplot option necessary in plotly as it can be realized by pandas dataframe functions and plotting in plotly express bar plot. Please refer to the documentation where you can find lots of sample codes.\n\nhttps:\/\/plotly.com\/python\/bar-charts\/","4fd29e6a":"Subplot option in Plotly is as below. Here Plotly graph object and Plotly subplots option is used for subplots. This is the most convenient way to do it in Plotly.","0d6b87e5":"#### Plotly:\nhttps:\/\/plotly.com\/python\/2d-histogram-contour\/","d679f947":"## Plotting bivariate distributions\n\nIt can also be useful to visualize a relationship between two variables. The easiest way to do this in seaborn is to use the jointplot() function, which creates a scatterplot of the two variables along with the histograms of each next to the appropriate axes.\n\n#### Seaborn:\n","3442ac97":"#### Plotly:\nIn Plotly , It is easy to format the histogram , but there is no KDE option. As Plotly is interactive graphs, bin details can be analyzed better than Seaborn.\n\nhttps:\/\/plotly.com\/python\/histograms\/","c8dfe7a0":"Scatter plot option in Plotly is very good way to visualize different dimensions of variability in the dataset. Below example is using variability of five variables:\nX Axis: Engine Size, Y Axis: horsepower , drive_wheels in different colors , price in different size of the bubble. Fifth variable (umber_of_doors) is visible when you move mouse pointer on a bubble.","bd29c6a9":"##  **Seaborn vs Plotly Express**\n\nMost beginners and professions are using Seaborn as visualization tool for EDA. Choice is simple as Seaborn make visualization lot easier and nicer than any other visualization tool. That was the understanding I had until I work through Ploty Express lately. Plotly Express provide same good looking graphs with few code lines and interactive on the other hand. Another good aspect in Plotly Express is that formatting the graphs is lot more easily than Seaborn with in same number of code lines. Let me explain what I just said with an example. Let\u2019s look at a code block of Seaborn and Plotly Express to style a graph. Let me load all necessary Libraries.\n\nInstall Plotly : **pip install plotly**","6cc05ed5":"#### **Seaborn Box Plot**\n\nThis box plot is using to visualize bivariate distribution between numerical variable and categorical variable from the data set. It is a single line code in Seaborn.","6df686b1":"## Plotting with categorical data\n\nCategorical variables and numerical variables drill down can be done easily with strip plot, box plot ,  violin plot which offered by both libraries. Both of them offers great looking plots, but Plotly will allow you to analyze variability in comprehensive way with interactivity. Below Examples will work you through a great comparison.\n\nhttps:\/\/plotly.com\/python\/box-plots\/\n\nhttps:\/\/plotly.com\/python\/violin\/\n\n\n\n### strip plot Comparison\n\n#### Seaborn:","f8343eec":"### Kernel Density Estimation\n\nWe can make a 2D estimation of the density also using Seaborn and Plotly Express , KDE option is not available in Plotly Express directly, But can be added if requred with many more code lines. Example is explained in Documantation. \n\n#### Seaborn","5ae7c16d":"### Violin plots\nViolin plots are one of the best way to visualize lots of information in one plot and widely used as well.\n\n#### Seaborn:","7baa265b":"### Bar plots\n\nWe can plot the mean of a a dataset, separated in categories using the barplot() function in Seaborn. When there are multiple observations in each category, it uses bootstrapping to compute a confidence interval around the estimate and plots that using error bars:\n\nBar plots start at 0, which can sometimes be practical if zero is a number you want to compare to.","5af6da5c":"#### Plotly:\nPlotly offer same option with scatter_matrix . Outputs are similar in both plots other than seaborn doesn\u2019t have interactivity.\n\nhttps:\/\/plotly.com\/python\/splom\/","520703d0":"#### Plotly:\nhttps:\/\/plotly.com\/python\/box-plots\/\n","d599f42f":"Pretty good ha!! Which plot do you prefer more? Here are few comparison points.\nSeaboarn formatting is not well documented and difficult to find, still I was not able to find how to change Font colors easily. On the other hand Plotly Express documentation very rich in samples and there are many ways to do the same formatting. Each way has its own befits and you can style each element in the plot after few search. No of code lines has no big difference and Plotly provide the greatest advantage of interactivity. Just Move your Mouse pointer to the plot and enjoy the Intractive grapgs!\n","e4b29eb8":"Now if we look at this basic two box plots from Seaboen and Plotly Express, I found below comparison points:\n\nSeaborn: default plot is too small (not interactive).\n\nPlotly Express: default plot is too big (interactive). \n\nLet\u2019s resize both plots and add some styling and then let\u2019s see how many extra code lines added by each library.","3b7616ed":"#### Plotly:\nhttps:\/\/plotly.com\/python\/strip-charts\/","db3583cc":"## Plotting univariate distributions\n### Histogram Plot Comparison\n\nThe most convenient way to take a quick look at a univariate distribution in seaborn is the distplot() function. By default, this will draw a histogram and fit a kernel density estimate (KDE). Here subplot option of matplotlib has used to plot two graphs in same row.   \n\n#### Seaborn:","0fae9fe9":"On the other hand Plotly Express can extend more drill down using various colors to another variable as below. Seaborn doesn\u2019t support it.","303be81b":"### What's more in Plotly Express\n\nBellow visualizations are very powerfull and not offered by seaborn yet. Plotly Express is rich in many other such visalizations and can be easily adopt to your EDA as documetation is very easy to follow. \n\nhttps:\/\/plotly.com\/python\/plotly-express\/\n\n### 3D Scatter plot","c92692b0":"### Heat Map \n\nBoth Libraries are offering heatmap plot which is very useful visualization for many cases. Below are the sample codes from each libraries.\n\nhttps:\/\/plotly.com\/python\/imshow\/","1bb3cf03":"#### Plotly Express Box Plot\n\nThis box plot is using same visualize as above seaborn box plot and its need two lines of codes.","cf401e61":"#### Plotly:\nPlotly Express offers same graphs of jointplot but in scatter plot option. Outputs is similar but interactive.\n\nhttps:\/\/plotly.com\/python\/line-and-scatter\/","d290fee7":"#### Plotly:\nhttps:\/\/plotly.com\/python\/violin\/","b80e09c2":"Let's try to plot simple box plot of Seaborn and Plotly Express and then Style it till we get good looking professional graph. After comparison of styling of graphs, I will explin most typically used visualizations in EDA to compare Plotly Express and Seaborn.","1ae4849c":"## Visualizing pairwise relationships in a dataset\n\nTo plot multiple pairwise scatterplots in a dataset, you can use the pairplot() function in Seaborn. This creates a matrix of axes and shows the relationship for each pair of columns in a DataFrame, it also draws the histogram of each variable on the diagonal Axes:\n\n#### Seaborn:"}}