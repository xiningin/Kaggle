{"cell_type":{"6ede6931":"code","b0012d30":"code","da97b0c8":"code","0a27aea8":"code","cbf2ecd2":"code","cb16c8f4":"code","654cc053":"code","5ee72847":"code","dfaa278c":"code","bb883c15":"code","180db055":"code","2a9ecd10":"code","7e2d4578":"markdown"},"source":{"6ede6931":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Flatten\nfrom keras.applications import ResNet50\nfrom sklearn.model_selection import train_test_split\nimport os","b0012d30":"print(os.listdir(\"..\/input\"))","da97b0c8":"train_df = pd.read_csv(\"..\/input\/train_labels.csv\")\ntrain,valid = train_test_split(train_df, test_size=0.3)","0a27aea8":"num_classes = 2\nresnet_weights_path = '..\/input\/resnet50\/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5'","cbf2ecd2":"model = Sequential()\nmodel.add(ResNet50(include_top=False, pooling='avg', weights=\"imagenet\"))\nmodel.add(Dense(num_classes, activation='softmax'))\nmodel.layers[0].trainable = False","cb16c8f4":"model.compile(optimizer='sgd', loss='categorical_crossentropy', metrics=['accuracy'])","654cc053":"from tensorflow.python.keras.applications.resnet50 import preprocess_input\nfrom tensorflow.python.keras.preprocessing.image import ImageDataGenerator\n\nimage_size = 224\ntrain_datagen = ImageDataGenerator(preprocess_input)\nvalidation_datagen = ImageDataGenerator(preprocess_input)","5ee72847":"train_generator = train_datagen.flow_from_dataframe(\n    dataframe=train,\n    directory='..\/input\/train\/',\n    x_col='id',\n    y_col='label',\n    has_ext=False,\n    shuffle=True\n    )","dfaa278c":"validation_generator = validation_datagen.flow_from_dataframe(\n    dataframe=valid,\n    directory='..\/input\/train\/',\n    x_col='id',\n    y_col='label',\n    has_ext=False,\n    shuffle=False\n)","bb883c15":"model.fit_generator(train_generator,\n                    steps_per_epoch=10,\n                    validation_data=validation_generator,\n                    validation_steps=10,\n                    epochs=13)","180db055":"from glob import glob\nfrom skimage.io import imread\n\nbase_test_dir = '..\/input\/test\/'\ntest_files = glob(os.path.join(base_test_dir,'*.tif'))\nsubmission = pd.DataFrame()\nfile_batch = 5000\nmax_idx = len(test_files)\nfor idx in range(0, max_idx, file_batch):\n    print(\"Indexes: %i - %i\"%(idx, idx+file_batch))\n    test_df = pd.DataFrame({'path': test_files[idx:idx+file_batch]})\n    test_df['id'] = test_df.path.map(lambda x: x.split('\/')[3].split(\".\")[0])\n    test_df['image'] = test_df['path'].map(imread)\n    K_test = np.stack(test_df[\"image\"].values)\n    K_test = (K_test - K_test.mean()) \/ K_test.std()\n    predictions = model.predict(K_test)\n    test_df['label'] = predictions[:,1]\n    submission = pd.concat([submission, test_df[[\"id\", \"label\"]]])\nsubmission.head()\n\nsubmission.to_csv(\"submission.csv\", index = False, header = True)\n","2a9ecd10":"predictions","7e2d4578":"Stolen from fadhli and fmarazzi"}}