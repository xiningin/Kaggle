{"cell_type":{"9b2efd52":"code","577c70ac":"code","ad406c46":"code","fbb6eef7":"code","a48d74df":"code","4046246d":"code","a83327df":"code","7ceb95e0":"code","4edff39c":"code","193755d9":"code","537a523a":"code","d9c31475":"markdown","8753de69":"markdown","5fed8ffc":"markdown"},"source":{"9b2efd52":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","577c70ac":"import nltk\n\nfrom nltk.corpus import brown","ad406c46":"brown.words(categories='fiction')","fbb6eef7":"from sklearn.feature_extraction.text import TfidfVectorizer","a48d74df":"# Read the data from the Brown corpus\ndata = ' '.join(brown.words()[:10000])","4046246d":"TextCorpus = ['Ozma of Oz',\n'Adventures with Dorothy', \n'the Yellow Hen, the Scarecrow, the Tin Woodman', \n'Other Good People', \n'too Numerous to Mention', \n'Faithfully Recorded Herein']\n\ntext_tokens = [sent.split() for sent in TextCorpus]\nprint(text_tokens)","a83327df":"from sklearn.feature_extraction.text import TfidfVectorizer","7ceb95e0":"transformer = TfidfVectorizer()\ntfidf = transformer.fit_transform(TextCorpus)","4edff39c":"print(tfidf)\n# (document number, term number)","193755d9":"from sklearn.decomposition import TruncatedSVD\nsvd = TruncatedSVD(n_components = 3)\nlsa = svd.fit_transform(tfidf)","537a523a":"lsa","d9c31475":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcTdR6Nfaz8ImlK7_5hpQp2avYUW1MaAYL2t5Q&usqp=CAU)slideshare.net","8753de69":"#Codes by Dheeraj Gupta https:\/\/www.kaggle.com\/dhgupta\/lsa-in-python\/comments#1195801","5fed8ffc":"#Latent Semantic Analysis (LSA)\n\nLatent Semantic Analysis (LSA), also known as Latent Semantic Indexing (LSI) literally means \nanalyzing documents to find the underlying meaning or concepts of those documents. If each word only meant one concept, and each concept was only described by one word, then LSA would be easy since there is a simple mapping from words to concepts.\n\nhttps:\/\/technowiki.wordpress.com\/2011\/08\/27\/latent-semantic-analysis-lsa-tutorial\/"}}