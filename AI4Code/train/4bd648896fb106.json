{"cell_type":{"33fc83a5":"code","f2eedfd1":"code","ccadeeeb":"code","0eadf336":"code","e85ad17a":"code","125a7906":"code","9400b886":"code","68018e43":"code","50f5fed7":"code","21649bb0":"code","1516ae37":"code","247ed553":"code","0a39ba2a":"code","51c6d191":"code","7e6bd95f":"code","d4427392":"code","de775243":"code","3d9f0566":"code","9b81ac1b":"code","d074e774":"code","dc77a066":"code","2536f011":"code","d5f12c37":"code","80feab34":"code","f87b0d79":"code","953ad2c7":"code","9144579a":"code","b4d93acd":"code","2519fb0c":"code","1442e8e3":"code","79c28f8a":"code","49767773":"code","ec665bed":"markdown","64f360b5":"markdown","f76d3148":"markdown","6441db48":"markdown","17e36a1e":"markdown","d48d6c5f":"markdown"},"source":{"33fc83a5":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as msno\n\n%matplotlib inline ","f2eedfd1":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ccadeeeb":"data = pd.read_csv(\"..\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv\")\ndata","0eadf336":"data.describe()","e85ad17a":"data.info()","125a7906":"data.isnull().sum()","9400b886":"msno.matrix(df=data, figsize=(10, 8))\nplt.show()","68018e43":"data[[\"neighbourhood_group\", \"price\"]].groupby([\"neighbourhood_group\"], as_index = True).count()","50f5fed7":"data[[\"neighbourhood_group\", \"price\"]].groupby([\"neighbourhood_group\"], as_index = True).mean()","21649bb0":"f, ax = plt.subplots(1, 2, figsize = (20, 8))\ndata[[\"neighbourhood_group\", \"price\"]].groupby([\"neighbourhood_group\"], as_index = True).mean().plot.bar(rot=0, ax = ax[0])\nax[0].set_title(\"Average price by neighbourhood_group\", fontsize = 15, y = 1.02)\ndata[[\"neighbourhood_group\", \"price\"]].groupby([\"neighbourhood_group\"], as_index = True).count().plot.bar(rot=0, ax = ax[1])\nax[1].set_title(\"Count of neighbourhood_group\", fontsize = 15, y = 1.02)\nplt.show()","1516ae37":"# \uac00\uaca9 500 \uc774\uc0c1\uc778 \uc774\uc0c1\uce58 \uc81c\uac70\ndata_p = data[data['price'] < 500]\n\nplt.figure(figsize = (20, 10))\nsns.violinplot(\"neighbourhood_group\", \"price\", scale = \"area\", data=data_p)\nplt.title(\"Distribution of prices by neighberhood_group\", fontsize = 20, y = 1.02)\nplt.xticks(fontsize = 15)\nplt.show()","247ed553":"print(\"Maximum price :\", data[\"price\"].max())\nprint(\"Minimum price :\", data[\"price\"].min())\nprint(\"Mean price : \", data[\"price\"].mean())","0a39ba2a":"plt.figure(figsize=(15, 10))\nplt.title(\"Data Correlation Info.\", y = 1.02)\nsns.heatmap(data = data.corr(), annot=True, annot_kws = {'size' : 14}, fmt = '.2f', cmap='GnBu')\nplt.show()","51c6d191":"print(\"\ucd5c\ub300 \uacbd\ub3c4 : \", data[\"longitude\"].max())\nprint(\"\ucd5c\uc18c \uacbd\ub3c4 : \", data[\"longitude\"].mean())\nprint(\"\ud3c9\uade0 \uacbd\ub3c4 : \", data[\"longitude\"].min())\nprint(\"\uacbd\ub3c4\uc758 \ud45c\uc900\ud3b8\ucc28 : \", data[\"longitude\"].std())","7e6bd95f":"f, ax = plt.subplots(1, 2, figsize = (20, 8))\nsns.scatterplot(data[\"longitude\"], data[\"latitude\"], hue = data[\"neighbourhood_group\"], ax=ax[0])\nax[0].set_xlabel(\"longitude\", fontsize = 15)\nax[0].set_ylabel(\"latitude\", fontsize = 15)\nax[0].legend(loc = \"best\", fontsize = 12)\n\nsns.scatterplot(data[\"longitude\"], data[\"latitude\"], hue = data[data[\"price\"] < 500][\"price\"], ax=ax[1])\nax[1].set_xlabel(\"longitude\", fontsize = 15)\nax[1].set_ylabel(\"latitude\", fontsize = 15)\nax[1].legend(loc = \"upper left\", fontsize = 12)\nplt.show()","d4427392":"from nltk.corpus import stopwords \nfrom nltk.tokenize import word_tokenize \nimport re","de775243":"data[\"name\"]","3d9f0566":"to_string = \"\".join(str(i) for i in data[\"name\"])","9b81ac1b":"# \ud1a0\ud070\ud654\ud558\uae30\ntokenized = word_tokenize(to_string)","d074e774":"# \uc18c\ubb38\uc790\ub85c \ubcc0\ud658\ud558\uae30\nno_capitals = str(tokenized).lower().split()","dc77a066":"# \uc815\uaddc\ud45c\ud604\uc2dd\uc744 \uc774\uc6a9\ud558\uc5ec \uc601\ubb38\ud0a4\uc6cc\ub4dc \ucd94\ucd9c\nonly_english = re.sub('[^a-zA-Z]', ' ', str(no_capitals)).split()","2536f011":"# \uc758\ubbf8\uac00 \uc801\uc740 \ubd88\uc6a9\uc5b4 \uc81c\uac70\ud558\uae30\nstop_words = set(stopwords.words('english'))\n\nresult = []\nfor token in only_english: \n    if token not in stop_words: \n        result.append(token) ","d5f12c37":"# \ube48\ub3c4 \uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 20\uac1c \ucd94\ucd9c\nwords = pd.Series(result)\nmost_used_words = words.value_counts()[:20]\nmost_used_words","80feab34":"f, ax = plt.subplots(1, 1, figsize=(40, 10))\nsns.barplot(most_used_words.index, most_used_words.values, ax = ax)\nax.set_title(\"Counts of the top 20 used words in 'name'\", fontsize = 30, y=1.02)\nax.set_xticklabels(most_used_words.index, fontsize = 22)\nplt.setp(ax.get_yticklabels(), fontsize=20)\nplt.show() ","f87b0d79":"high_price = data[data['price'] > 500]\nhigh_price.count()","953ad2c7":"high_price_to_string = \"\".join(str(i) for i in high_price[\"name\"])","9144579a":"# \ud1a0\ud070\ud654\ud558\uae30\nhigh_price_tokenized = word_tokenize(high_price_to_string)","b4d93acd":"# \uc18c\ubb38\uc790\ub85c \ubcc0\ud658\ud558\uae30\nhigh_price_no_capitals = str(high_price_tokenized).lower().split()","2519fb0c":"# \uc815\uaddc\ud45c\ud604\uc2dd\uc744 \uc774\uc6a9\ud558\uc5ec \uc601\ubb38\ud0a4\uc6cc\ub4dc \ucd94\ucd9c\nhigh_price_only_english = re.sub('[^a-zA-Z]', ' ', str(high_price_no_capitals)).split()","1442e8e3":"# \uc758\ubbf8\uac00 \uc801\uc740 \ubd88\uc6a9\uc5b4 \uc81c\uac70\ud558\uae30\nstop_words = set(stopwords.words('english'))\n\nhigh_price_result = []\nfor token in high_price_only_english: \n    if token not in stop_words: \n        high_price_result.append(token) ","79c28f8a":"# \ube48\ub3c4 \uc218\uac00 \uac00\uc7a5 \ub192\uc740 \uc0c1\uc704 20\uac1c \ucd94\ucd9c\nhigh_price_words = pd.Series(high_price_result)\nhigh_price_most_used_words = high_price_words.value_counts()[:20]\nhigh_price_most_used_words","49767773":"f, ax = plt.subplots(1, 1, figsize=(40, 10))\nsns.barplot(high_price_most_used_words.index, high_price_most_used_words.values, ax = ax)\nax.set_title(\"Counts of the top 20 most used words in high price Airbnb 'name'\", fontsize = 30, y=1.02)\nax.set_xticklabels(high_price_most_used_words.index, fontsize = 22)\nplt.setp(ax.get_yticklabels(), fontsize=20)\nplt.show() ","ec665bed":"Host descriptors:\n* host_id: host ID\n* host_name: name of the host\n* calculated_host_listings_count: amount of listing per host\n\nListing descriptors:\n* id: listing ID\n* name: name of the listing\n* room_type: listing space type\n* minimum_nights: amount of nights minimum\n* availability_365: number of days when listing is available for booking\n* price: price in dollars\n\nReview descriptors:\n* number_of_reviews: number of reviews\n* last_review: latest review\n* reviews_per_month: number of reviews per month\n\nLocation descriptors:\n* neighbourhood_group: location\n* neighbourhood: area\n* latitude: latitude coordinates\n* longitude: longitude coordinates","64f360b5":"## \uac00\uaca9\uc774 \ub192\uc740 \uc219\uc18c \ubd84\uc11d ","f76d3148":"# EDA - neighbourhood_group","6441db48":"## \uc804\uccb4 \uc219\uc18c \ubd84\uc11d","17e36a1e":"# EDA - price, longitude, latitude","d48d6c5f":"# NTLK\ub97c \ud65c\uc6a9\ud558\uc5ec name \uc18d\uc131\uc758 \ub2e8\uc5b4 \ube48\ub3c4\uc218 \ubd84\uc11d"}}