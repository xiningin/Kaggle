{"cell_type":{"ae10fb08":"code","5cc6b6a2":"code","c6754507":"code","6d9b53c5":"code","54071568":"code","aa800b5f":"code","adc32c90":"code","b6c5077a":"code","af2cc2ad":"code","b570d083":"code","8c1bb8cd":"code","ac80cb61":"code","26fb2ca3":"code","9d5c97d0":"code","366fda70":"code","f524f618":"code","b3c9bff6":"code","d00d3512":"code","c987c012":"code","6cc6956f":"code","60e222be":"code","70c7d0bd":"code","a3de2024":"code","43d2f7a2":"code","86911c3d":"code","b5e70923":"code","2e6711e3":"code","f3a13a90":"code","31169f7e":"code","77fda16e":"code","01f2bba6":"code","859cea1d":"code","9975621e":"code","97c574e1":"code","a8ab2ff3":"code","7696ebf5":"code","4f615dc7":"code","47bb3f70":"code","e7ea0bda":"code","ae659c52":"markdown","949109f2":"markdown","7f889f24":"markdown","493e4379":"markdown","55f11877":"markdown","32b11255":"markdown","19777248":"markdown","1dfde1bd":"markdown","575d67a9":"markdown","48fe8609":"markdown","ce8e6618":"markdown","f001cc38":"markdown","fa53801a":"markdown","23e9b1de":"markdown","d5021b94":"markdown","acd795a7":"markdown","5443cb16":"markdown","12ff090c":"markdown","ebea2c20":"markdown","37d83168":"markdown","c009fee7":"markdown","654a4571":"markdown","2aa4d5ce":"markdown","bd70f2cf":"markdown","b1ea1cfb":"markdown"},"source":{"ae10fb08":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib.style as style\nfrom sklearn.feature_extraction import text\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nstyle.use('ggplot')","5cc6b6a2":"df=pd.read_csv('\/kaggle\/input\/ted-talks\/ted_main.csv')","c6754507":"df.columns","6d9b53c5":"df.head()","54071568":"import datetime\ndf['film_date'] = df['film_date'].apply(lambda x: datetime.datetime.fromtimestamp( int(x)).strftime('%d-%m-%Y'))\ndf['published_date'] = df['published_date'].apply(lambda x: datetime.datetime.fromtimestamp( int(x)).strftime('%d-%m-%Y'))","aa800b5f":"df['duration_hr']=df['duration']\/(60*60)\ndf['duration_hr']=df['duration_hr'].astype(float)\ndf['duration_hr']=df['duration_hr'].round(decimals=2)","adc32c90":"df.head()","b6c5077a":"df.isnull().sum()","af2cc2ad":"def get_top10(feature):\n    popular_talks = df[['title', 'main_speaker', 'views','comments','film_date', 'published_date','duration','duration_hr']].sort_values(by=feature,ascending=False).set_index(feature).reset_index().head(10)\n    return popular_talks","b570d083":"get_top10('views')","8c1bb8cd":"get_top10('comments')","ac80cb61":"get_top10('duration')","26fb2ca3":"def get_graph(feature):\n    df_top10 = df[['title', 'main_speaker', 'views','comments', 'published_date','duration','duration_hr']].sort_values(feature, ascending=False).head(10)\n    x_labels=df_top10['title'].to_list()\n    plt.figure(figsize=(12,8))\n    ax=sns.barplot(x='title',y=feature,data=df_top10)\n    ax.set_title('TOP 10 TED Talks by '+str(feature).upper())\n    ax.set_xlabel('TITLE')\n    ax.set_ylabel(feature)\n    ax.set_xticklabels(x_labels,rotation='vertical')\n    \n    rects=ax.patches\n\n    \n    labels=df_top10[feature].to_list()\n    \n    for rect,label in zip(rects,labels):\n        height=rect.get_height()\n        ax.text(rect.get_x()+rect.get_width()\/2,height,label,ha='center',va='bottom')\n    \n    ","9d5c97d0":"get_graph('views')","366fda70":"get_graph('comments')","f524f618":"get_graph('duration')","b3c9bff6":"g=sns.pairplot(data=df)\ng.map_upper(sns.scatterplot,color='blue')\ng.map_lower(sns.scatterplot, color='green')\ng.map_diag(plt.hist)","d00d3512":"sns.scatterplot(x='duration_hr',y='comments',data=df,color='blue')","c987c012":"df[df['comments']==df['comments'].max()]","6cc6956f":"df.corr()","60e222be":"month_order = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']","70c7d0bd":"df['month'] = df['film_date'].apply(lambda x: month_order[int(x.split('-')[1]) - 1])\n\ndf_month = pd.DataFrame(df['month'].value_counts()).reset_index()\ndf_month.columns = ['month', 'talks']","a3de2024":"plt.figure(figsize=(19,8))\nsns.barplot(x='month', y='talks', data=df_month, order=month_order)","43d2f7a2":"df['year'] = df['film_date'].apply(lambda x: x.split('-')[2])\ndf_year = pd.DataFrame(df['year'].value_counts().reset_index())\ndf_year.columns = ['year', 'talks']","86911c3d":"plt.figure(figsize=(19,8))\nsns.countplot(x='year',data=df)","b5e70923":"df_rec=df[['title','description']]\ndf_rec","2e6711e3":"df_rec.columns","f3a13a90":"import re\nfrom nltk.stem import WordNetLemmatizer\nfrom nltk.stem import PorterStemmer\nfrom nltk.corpus import stopwords\nfrom sklearn.feature_extraction.text import TfidfVectorizer","31169f7e":"def remove_tags(string):\n    result = re.sub('<.*?>','',string)\n    return result","77fda16e":"df_rec['description']=df_rec['description'].apply(lambda cw : remove_tags(cw))","01f2bba6":"df_rec['description']=df['description'].str.lower()\ndf_rec['title']=df['title'].str.lower()","859cea1d":"df_rec","9975621e":"Text=df_rec['description'].tolist()\ntfidf=text.TfidfVectorizer(input=Text,stop_words=\"english\")\nmatrix=tfidf.fit_transform(Text)\nprint(matrix.shape)","97c574e1":"from yellowbrick.text import TSNEVisualizer","a8ab2ff3":"tsne = TSNEVisualizer()\ntsne.fit(matrix)","7696ebf5":"### Get Similarity Scores using cosine similarity\nfrom sklearn.metrics.pairwise import cosine_similarity","4f615dc7":"cosine_sim=cosine_similarity(matrix)\nprint(cosine_sim)","47bb3f70":"indices = pd.Series(df_rec['title'])\ndef recommend_talks(name):\n    talks=[]\n    idx = indices[indices == name].index[0]\n    sort_index = pd.Series(cosine_sim[idx]).sort_values(ascending = False)\n    top_10 = sort_index.iloc[1:11]\n    for i in top_10.index:\n        talks.append(indices[i])\n    print(*talks, sep='\\n')","e7ea0bda":"def rec():\n    try:\n        i = 1\n        while(i > 0):\n            name = input(\"\\n Enter The title of the TED Talk : \")\n            if name.lower() == 'quit':\n                break\n            else:\n                print(\"\\n\",recommend_talks(name))\n\n    except KeyboardInterrupt:\n        print(\"The TED Talk does not exist\\n\")\n        rec()\n\n    except IndexError:\n        print(\"The TED Talk does not exist\\n\")\n        rec()\n        \n\nprint(\"To exit Enter \\\"quit\\\" \\n\")\nrec()","ae659c52":"### reading the csv file","949109f2":"* The **published_date** and **film_date** column are not in proper format so let's change it to standard datetime format.","7f889f24":"Lets check for any missing values in the dataset","493e4379":"* Do schools kill creativity? by Ken Robinson is the most viewed talk with 47.2 Million views and 4553 comments.\n* Militant atheism by  Richard Dawkins has the most comments i.e 6404.\n* Parrots, the universe and everything by Douglas Adams has the maximum duration with 1.46hr","55f11877":"## Importing Necessary Packages for Analysis","32b11255":"* No Missing values in the whole DataSet","19777248":"* We will use t-sne (t-distributed stochastic neighbor embedding) for reducing the dimention of vectors so we can see them in 2-D","1dfde1bd":"## Some Insights:\n* The Correlation between comments and views is 0.53 which suggests a medium correlation between the two quantities.\n* Also, The Correlation between duration and views is 0.048 which is quite less and suggests very low correlation between the two quantities.","575d67a9":"## Observations:","48fe8609":"* Here we will remove HTML tags (if present) from the text.","ce8e6618":"## Building Recomendation System","f001cc38":"* The below function **get_top10()** will give top 10 items in dataframe with respect to the mentioned feature.\n* The **get_graph()** function will give a bar plot with respect to the mentioned feature","fa53801a":"### Doing some Text Preprocessing:","23e9b1de":"## About the DataSet features:\n* comments: The Number of comments of the talk\n* description: A summary of what the talk was about\n* duration: The Duration of the talk in seconds\n* event: The Event where the talk took place\n* film_date: The Date on which the talk was filmed\/recorded.\n* languages: The number of languages in which the TED talk is available.\n* main_speaker: The main speaker of the talk\n* name: Includes Title and name of the speaker.\n* num_speaker: Number of speakers in the talk\n* published_date: Date when the TED Talk was published\n* ratings: A Dictionary of various ratings given like Courageous, Inspiring, etc\n* related_talks: A list of talks recomended to watch next\n* speaker_occupation: Occupation of the speaker\n* tags: Different themes related to talk\n* title: Title of the TED Talk\n* url: The URL of the TED Talk\n* views:Number of views on the TED Talk","d5021b94":"### Lets visualise our vectors","acd795a7":"## Observations:\n* There is a slight increase in the TED Talks from the year 1998.\n* From the year 2009 there is a steep increase in the number of TED Talks.\n* The is a little drop in the year 2017.\n","5443cb16":"## Observations:","12ff090c":"* The **get_graph** funbction below will give us a barplot with 'Title' on the x-axis and mentioned feature on the y-axis.","ebea2c20":"fgsg","37d83168":"* This recomendation system will use the description of the talks to recomend the TED talks.\n* We will use **tf-idf** technique to convert the description to vectors first.\n* We will use **cosine similarity** to determne which talks are more close to each other.\n \n","c009fee7":"### The system is recomending related talks.","654a4571":"* TED Talks with duration less than 2000 have more comments.\n* Maximum value of comments is around 64000.\n* The TED Talk with maximum comments is Militant atheism by Richard Dawkins","2aa4d5ce":"### Changing the 'description' column to lower case.","bd70f2cf":"## Observations:\n* In the bar plot we can see that the month of february has the most talks filmed.\n* January and August has the least amount of talks filmed.","b1ea1cfb":"## Finding Top 10 Talks by a particular feature"}}