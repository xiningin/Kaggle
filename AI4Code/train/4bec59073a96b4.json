{"cell_type":{"de861025":"code","5d38f6c5":"code","84d27118":"code","00264e6c":"code","275b7d13":"code","4ffa7561":"code","4193cf77":"code","d16967d7":"code","f560936c":"code","2cebb865":"code","8764ee8f":"code","29586611":"code","bbf80d86":"code","ea8530ba":"code","fdaf70b1":"code","660a8167":"code","8399e4d9":"code","be8032d8":"markdown","bc850a1e":"markdown","9605d5fb":"markdown","9bb45af4":"markdown","7196d9ca":"markdown"},"source":{"de861025":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","5d38f6c5":"data=pd.read_csv(\"..\/input\/iris\/Iris.csv\")","84d27118":"data.head()","00264e6c":"data.info()","275b7d13":"data=data.iloc[:,1:6]","4ffa7561":"data.head()","4193cf77":"scatterplot = data[data.Species=='Iris-setosa'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='red', label='Setosa')\ndata[data.Species=='Iris-versicolor'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='blue', label='versicolor',ax=scatterplot)\ndata[data.Species=='Iris-virginica'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='green', label='virginica', ax=scatterplot)\nscatterplot.set_xlabel(\"Sepal Length\")\nscatterplot.set_ylabel(\"Sepal Width\")\nscatterplot.set_title(\"Sepal Length VS Petal Width\")\nscatterplot=plt.gcf()\nscatterplot.set_size_inches(10,6)\nplt.show()","d16967d7":"scatterplot = data[data.Species=='Iris-setosa'].plot(kind='scatter',x='PetalLengthCm',y='PetalWidthCm',color='red', label='Setosa')\ndata[data.Species=='Iris-versicolor'].plot(kind='scatter',x='PetalLengthCm',y='PetalWidthCm',color='blue', label='versicolor',ax=scatterplot)\ndata[data.Species=='Iris-virginica'].plot(kind='scatter',x='PetalLengthCm',y='PetalWidthCm',color='green', label='virginica', ax=scatterplot)\nscatterplot.set_xlabel(\"Petal Length\")\nscatterplot.set_ylabel(\"Petal Width\")\nscatterplot.set_title(\"Petal Length VS Petal Width\")\nscatterplot=plt.gcf()\nscatterplot.set_size_inches(10,6)\nplt.show()","f560936c":"data.plot()","2cebb865":"petallength=data.iloc[:,2:3].values\npetalwidth=data.iloc[:,3:4].values\n\nsepallength=data.iloc[:,0:1].values\nsepalwidth=data.iloc[:,1:2].values\n\nclasses=data.iloc[:,4].values","8764ee8f":"from sklearn import metrics\nfrom sklearn.metrics import confusion_matrix","29586611":"from sklearn.model_selection import train_test_split\n\nx_train,x_test,y_train,y_test=train_test_split(petallength,classes,test_size=0.3,random_state=0)\nX_train,X_test,Y_train,Y_test=train_test_split(petalwidth,classes,test_size=0.3,random_state=0)\n\nx_train2,x_test2,y_train2,y_test2=train_test_split(sepallength,classes,test_size=0.3,random_state=0)\nX_train2,X_test2,Y_train2,Y_test2=train_test_split(sepalwidth,classes,test_size=0.3,random_state=0)","bbf80d86":"from sklearn.linear_model import LogisticRegression\n\nlogr=LogisticRegression()\n\nlogr.fit(x_train,y_train)\ny_pred=logr.predict(x_test)\n\nlogr.fit(X_train,Y_train)\nY_pred=logr.predict(X_test)\n\nlogr.fit(x_train2,y_train2)\ny_pred2=logr.predict(x_test2)\n\nlogr.fit(X_train2,Y_train2)\nY_pred2=logr.predict(X_test2)\n\nprint(\"The Accuracy values for Petal VS Sepal..\\n\")\n\nprint(\"The Accuracy of the LogisticRegression for PetalLength Feature:\",metrics.accuracy_score(y_pred,y_test))\nprint(\"The Accuracy of the LogisticRegression for PetalWidth Feature:\",metrics.accuracy_score(Y_pred,Y_test))\n\nprint(\"The Accuracy of the LogisticRegression for SepalLength Feature:\",metrics.accuracy_score(y_pred2,y_test2))\nprint(\"The Accuracy of the LogisticRegression for SepalWidth Feature:\",metrics.accuracy_score(Y_pred2,Y_test2))\n\n","ea8530ba":"from sklearn.neighbors import KNeighborsClassifier\nknn=KNeighborsClassifier(n_neighbors=5,metric='minkowski')\n\nknn.fit(x_train,y_train)\ny_pred=knn.predict(x_test)\n\nknn.fit(X_train,Y_train)\nY_pred=knn.predict(X_test)\n\nknn.fit(x_train2,y_train2)\ny_pred2=knn.predict(x_test2)\n\nknn.fit(X_train2,Y_train2)\nY_pred2=knn.predict(X_test2)\n\nprint(\"The Accuracy values for Petal VS Sepal..\\n\")\n\nprint(\"The Accuracy of the KNN for PetalLength Feature:\",metrics.accuracy_score(y_pred,y_test))\nprint(\"The Accuracy of the KNN for PetalWidth Feature:\",metrics.accuracy_score(Y_pred,Y_test))\n\nprint(\"The Accuracy of the KNN for SepalLength Feature:\",metrics.accuracy_score(y_pred2,y_test2))\nprint(\"The Accuracy of the KNN for SepalWidth Feature:\",metrics.accuracy_score(Y_pred2,Y_test2))\n\n","fdaf70b1":"from sklearn.svm import SVC\nsvc=SVC(kernel='linear')\n\nsvc.fit(x_train,y_train)\ny_pred=svc.predict(x_test)\n\nsvc.fit(X_train,Y_train)\nY_pred=svc.predict(X_test)\n\nsvc.fit(x_train2,y_train2)\ny_pred2=svc.predict(x_test2)\n\nsvc.fit(X_train2,Y_train2)\nY_pred2=svc.predict(X_test2)\n\nprint(\"The Accuracy values for Petal VS Sepal..\\n\")\n\nprint(\"The Accuracy of the SVM for PetalLength Feature:\",metrics.accuracy_score(y_pred,y_test))\nprint(\"The Accuracy of the SVM for PetalWidth Feature:\",metrics.accuracy_score(Y_pred,Y_test))\n\nprint(\"The Accuracy of the SVM for SepalLength Feature:\",metrics.accuracy_score(y_pred2,y_test2))\nprint(\"The Accuracy of the SVM for SepalWidth Feature:\",metrics.accuracy_score(Y_pred2,Y_test2))\n\n","660a8167":"from sklearn.tree import DecisionTreeClassifier\n\ndtc=DecisionTreeClassifier(criterion='entropy')\n\ndtc.fit(x_train,y_train)\ny_pred=dtc.predict(x_test)\n\ndtc.fit(X_train,Y_train)\nY_pred=dtc.predict(X_test)\n\ndtc.fit(x_train2,y_train2)\ny_pred2=dtc.predict(x_test2)\n\ndtc.fit(X_train2,Y_train2)\nY_pred2=dtc.predict(X_test2)\n\nprint(\"The Accuracy values for Petal VS Sepal..\\n\")\n\nprint(\"The Accuracy of the DecisionTree for PetalLength Feature:\",metrics.accuracy_score(y_pred,y_test))\nprint(\"The Accuracy of the DecisionTree for PetalWidth Feature:\",metrics.accuracy_score(Y_pred,Y_test))\n\nprint(\"The Accuracy of the DecisionTree for SepalLength Feature:\",metrics.accuracy_score(y_pred2,y_test2))\nprint(\"The Accuracy of the DecisionTree for SepalWidth Feature:\",metrics.accuracy_score(Y_pred2,Y_test2))","8399e4d9":"from sklearn.ensemble import RandomForestClassifier\n\nrfc=RandomForestClassifier(n_estimators=10,criterion='entropy')\n\nrfc.fit(x_train,y_train)\ny_pred=rfc.predict(x_test)\n\nrfc.fit(X_train,Y_train)\nY_pred=rfc.predict(X_test)\n\nrfc.fit(x_train2,y_train2)\ny_pred2=rfc.predict(x_test2)\n\nrfc.fit(X_train2,Y_train2)\nY_pred2=rfc.predict(X_test2)\n\nprint(\"The Accuracy values for Petal VS Sepal..\\n\")\n\nprint(\"The Accuracy of the RandomForest for PetalLength Feature:\",metrics.accuracy_score(y_pred,y_test))\nprint(\"The Accuracy of the RandomForest for PetalWidth Feature:\",metrics.accuracy_score(Y_pred,Y_test))\n\n\nprint(\"The Accuracy of the RandomForest for SepalLength Feature:\",metrics.accuracy_score(y_pred2,y_test2))\nprint(\"The Accuracy of the RandomForest for SepalWidth Feature:\",metrics.accuracy_score(Y_pred2,Y_test2))\n","be8032d8":"as you see petal features classification is better easy to the sepal features..","bc850a1e":"The breakpoint is large in green and red plot.So classification should be made with petals data for high accuracy value..","9605d5fb":"id column is removed from data dataframe.Because it is unneded column for this data analysis..","9bb45af4":"we looked the first 5 row in data dataset..","7196d9ca":"we separated data into training and testing.."}}