{"cell_type":{"0cbd287a":"code","f14190be":"code","984d3bea":"code","0cdcd8a3":"code","f3defc2d":"code","c94a9feb":"code","4c8f74e1":"code","c82b57c8":"code","b6553732":"code","ac750808":"markdown","ad84ebb1":"markdown","9069ddf5":"markdown","1ebdb232":"markdown","81c35a73":"markdown","460d2100":"markdown","5e716d25":"markdown","eba959c4":"markdown","ef102281":"markdown","850db4d3":"markdown"},"source":{"0cbd287a":"# Import Libraries\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# This is to supress the warning messages (if any) generated in our code\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Comment this if the data visualisations doesn't work on your side\n%matplotlib inline\n\n# We are using whitegrid style for our seaborn plots. This is like the most basic one\nsns.set_style(style = 'whitegrid')","f14190be":"dataset = pd.read_csv('..\/input\/train.csv')","984d3bea":"nrow, ncol = dataset.shape\nnrow, ncol","0cdcd8a3":"ds_cat = dataset.select_dtypes(include = 'object').copy()\nds_cat.head(2)","f3defc2d":"ds_cat_stats = pd.DataFrame(columns = ['column', 'values', 'values_count_incna', 'values_count_nona', \n                                       'num_miss', 'pct_miss'])\ntmp = pd.DataFrame()\n\nfor c in ds_cat.columns:\n    tmp['column'] = [c]\n    tmp['values'] = [ds_cat[c].unique()]\n    tmp['values_count_incna'] = len(list(ds_cat[c].unique()))\n    tmp['values_count_nona'] = int(ds_cat[c].nunique())\n    tmp['num_miss'] = ds_cat[c].isnull().sum()\n    tmp['pct_miss'] = (ds_cat[c].isnull().sum()\/ len(ds_cat)).round(3)*100\n    ds_cat_stats = ds_cat_stats.append(tmp)\n    \nds_cat_stats","c94a9feb":"# Let's do an Ascending sort on the Numboer of Distinct Categories for each categorical Variables\nds_cat_stats.sort_values(by = 'values_count_incna', inplace = True, ascending = True)\n\n# And set the index to Column Names\nds_cat_stats.set_index('column', inplace = True)\nds_cat_stats","4c8f74e1":"ds_cat_stats.sort_values(by = 'pct_miss', ascending = False).head(5)","c82b57c8":"ds_cat['SalePrice'] = dataset.loc[ds_cat.index, 'SalePrice'].copy()","b6553732":"ix = 1\nfig = plt.figure(figsize = (15,10))\nfor c in list(ds_cat.columns):\n    if ix <= 3:\n        if c != 'SalePrice':\n            ax1 = fig.add_subplot(2,3,ix)\n            sns.countplot(data = ds_cat, x=c, ax = ax1)\n            ax2 = fig.add_subplot(2,3,ix+3)\n            sns.boxplot(data=ds_cat, x=c, y='SalePrice', ax=ax2)\n            #sns.violinplot(data=ds_cat, x=c, y='SalePrice', ax=ax2)\n            #sns.swarmplot(data = ds_cat, x=c, y ='SalePrice', color = 'k', alpha = 0.4, ax=ax2)\n            \n    ix = ix +1\n    if ix == 4: \n        fig = plt.figure(figsize = (15,10))\n        ix =1","ac750808":"<a id='s1' >\n## 1. Basic Statistics<\/a>","ad84ebb1":"# Exploratory Data Analysis (EDA) for Categorical Variables - 2 functions is all you need","9069ddf5":"## Notebook Content\n\n1. [Basic Statistics](#s1) <br>\n\n2. [Frequency Distribution](#s2) <br>\n\n3. [Conclusion](#s3) <br>","1ebdb232":"[In previous Kernel](https:\/\/www.kaggle.com\/nextbigwhat\/eda-for-categorical-variables-a-beginner-s-way) we looked at step by step how to perform very basic 2 EDAs which are essential to get your hands on the data and to know just enough when you are starting off with the competition. \n\n1. Basic Statistics <br>\n2. Distribution Plots <br>\n 2.1 Frequency distribution for each Independent Variable <br>\n 2.2 Relationship between the Dependent Variable & Inependent Variables\n \n In this kernel we will put all the individual components together \n","81c35a73":"---\n<a id = 's2'>\n## 2. Frequency Distribution <\/a>\nHere again we will start with one variable (MSZoning) as we did in part 1 to build our code and then subsequently we will put everything together \n\n#### Since we are working on a supervised ML problem we should also look at the relationshipt between the dependent variable and independent variable. In order to do that let's add our dependent variable to this dataset.","460d2100":"**Observations**\n\n1. Since Exterior1st, Exterior2nd, Neighborhood have lot more distinct categories, we need to look at them separately\n2. Some of the variables with binary categories are heavily skewed, for ex look at the variable Street, Utilities, Central Air\n3. Variables that have more than 2 categories also show skewed patterns, for ex look at the variables Condition1, Condition2, BldgType, BldgCond etc\n4. Observe the variables GarageQual, GarageCond heavily skewed again. We don't know what TA means we will refer to the Data Dictionary\n\nRemember: These are for mental notes and we are not deeply investigating any of these variables yet\n\nNext step is to do Data Processing of these categorical variables. Which we will go into later\n\nAlso, We will look at the EDA for Numerical Variables in a separate Kernel","5e716d25":"The idea here is to familiarize ourself with data just enough. And also to make mental notes\n\n**Quick Observations**\n1. look at the Variable 'Alley' -- distinct categories are 3 but without nans it is 2. [Mental Note :  label encoding or one-hot encoding]\n2. Last 3 variables - Exteriror1st, Exteriror2nd, Neighborhood have more than 10 categories. [Mental Note : We should keep this in mind while doing the dummy variable coding]\n3. 5 variables have more than 47% missing values. ","eba959c4":"Our Data has 1460 Rows and 81 Columns","ef102281":"<a id = 's3' >\n## Conclusion<\/a>\n\nThat's it for this kernel. \n\nIdea of this kernel is just to combine our learnings from previous kernel and show in a short and clear way how effectively you can do EDA for categorical variables\n\nWe definitely don't need to put too much weight on the insights that can be gained from an EDA like this. At most we get 2-dimensional relationships, which can be misleading. We will rather focus more on Machine Learning driven EDA.\n\nBut the quest is not over yet! \n\nOn the basis of the feedbacks\/suggestions that I recieve for the kernel, I would add them and convert into a different Kernel so that we can see the progression for our learnings.","850db4d3":"# EDA for Categorical Variables \n\n#### Create a separate dataframe which has only Categorical Variables"}}