{"cell_type":{"bf00c6f2":"code","e6c79ffa":"markdown","3b96c960":"markdown"},"source":{"bf00c6f2":"from learntools.core import binder; binder.bind(globals())\nfrom learntools.python.ex3 import q7 as blackjack\n\ndef should_hit(player_total, dealer_total, player_aces):\n    \"\"\"Return True if the player should hit (request another card) given the current game\n    state, or False if the player should stay. player_aces is the number of aces the player has.\n    \"\"\"\n    if player_total <=11 and dealer_total >0 and player_aces>0:\n        return True\n    elif player_total <=0 and dealer_total >0 and player_aces==1:\n        return True\n    elif player_total <= 14 and (dealer_total < 3 or dealer_total > 7):\n        return True\n    else:\n        return False\n\nblackjack.simulate(n_games=1000000)\n    ","e6c79ffa":"**This is my try to the blackack challenge proposed in the learn pyhton course**\n\n![image.png](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQD-t878iKbW0m90Shc5N_YzVLZ6lrbV8F_aK6WeRW5QHty_htO)\n\n**The final result and the win rate are over 1,000,000 games(so we have pretty solid conclusions).\nThe fact that the dealer wins a higher percentage of the games shows us that, even playing close to the statistic perfection, the casino will always win.**","3b96c960":"**Please vote up the kernel and comment your tries at this challenge =)**"}}