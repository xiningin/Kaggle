{"cell_type":{"c55ff2f8":"code","de245382":"code","b14e7713":"code","b732ea3e":"code","0696427a":"code","f46d31af":"code","6e2c5166":"code","7a07e73c":"code","24e3e7a1":"code","1480e1ad":"code","baa38046":"code","a99ce920":"code","e14f0bad":"code","bc1c3fa0":"code","bf73621b":"code","f2c2b166":"code","a3be15ff":"markdown","0f23ef7b":"markdown","26d26ff3":"markdown","ab68e36b":"markdown","6de7f834":"markdown","25ca1e1d":"markdown","d441bd88":"markdown","ea55a338":"markdown","5a19dfca":"markdown"},"source":{"c55ff2f8":"!pip install -q pandarallel\n!pip install -q spacy \n!pip install -q spacy_cld\n!pip install -q pyspellchecker\n!python -m spacy download xx_ent_wiki_sm > \/dev\/null","de245382":"import numpy as np\nimport pandas as pd\n\nimport os\nimport gc\n\nimport spacy\nfrom spacy_cld import LanguageDetector\nimport xx_ent_wiki_sm\n\nfrom spellchecker import SpellChecker\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport time\nimport random\nfrom tqdm.notebook import tqdm\ntqdm.pandas()\n\nimport re\nimport nltk\n\nfrom pandarallel import pandarallel\npandarallel.initialize(progress_bar=True)","b14e7713":"nlp = xx_ent_wiki_sm.load()\nlanguage_detector = LanguageDetector()\nnlp.add_pipe(language_detector)","b732ea3e":"def get_lang_score(text, lang):\n    try:\n        doc = nlp(str(text))\n        language_scores = doc._.language_scores\n        return language_scores.get(lang, 0)\n    except Exception:\n        return 0","0696427a":"# Loading data\n\ntrain1 = pd.read_csv(\"\/kaggle\/input\/jigsaw-multilingual-toxic-comment-classification\/jigsaw-toxic-comment-train.csv\")\ntrain1['lang'] = 'en'\n\ntrain_es = pd.read_csv('\/kaggle\/input\/jigsaw-train-multilingual-coments-google-api\/jigsaw-toxic-comment-train-google-es-cleaned.csv')\ntrain_es['lang'] = 'es'\n\ntrain_fr = pd.read_csv('\/kaggle\/input\/jigsaw-train-multilingual-coments-google-api\/jigsaw-toxic-comment-train-google-fr-cleaned.csv')\ntrain_fr['lang'] = 'fr'\n\ntrain_pt = pd.read_csv('\/kaggle\/input\/jigsaw-train-multilingual-coments-google-api\/jigsaw-toxic-comment-train-google-pt-cleaned.csv')\ntrain_pt['lang'] = 'pt'\n\ntrain_ru = pd.read_csv('\/kaggle\/input\/jigsaw-train-multilingual-coments-google-api\/jigsaw-toxic-comment-train-google-ru-cleaned.csv')\ntrain_ru['lang'] = 'ru'\n\ntrain_it = pd.read_csv('\/kaggle\/input\/jigsaw-train-multilingual-coments-google-api\/jigsaw-toxic-comment-train-google-it-cleaned.csv')\ntrain_it['lang'] = 'it'\n\ntrain_tr = pd.read_csv('\/kaggle\/input\/jigsaw-train-multilingual-coments-google-api\/jigsaw-toxic-comment-train-google-tr-cleaned.csv')\ntrain_tr['lang'] = 'tr'\n\ntrain2 = pd.read_csv(\"\/kaggle\/input\/jigsaw-multilingual-toxic-comment-classification\/jigsaw-unintended-bias-train.csv\")\ntrain2.toxic = train2.toxic.round().astype(int)\ntrain2['lang'] = 'en'\n\ntrain = pd.concat([\n    \n    train1[['comment_text', 'lang', 'toxic']],\n    train_es[['comment_text', 'lang', 'toxic']],\n    train_tr[['comment_text', 'lang', 'toxic']],\n    train_fr[['comment_text', 'lang', 'toxic']],\n    train_pt[['comment_text', 'lang', 'toxic']],\n    train_ru[['comment_text', 'lang', 'toxic']],\n    train_it[['comment_text', 'lang', 'toxic']],\n    train2[['comment_text', 'lang', 'toxic']]\n    \n]).sample(n=20000).reset_index(drop=True)\n\ndel train1, train_es, train_fr, train_pt, train_ru, train_it, train_tr, train2\ngc.collect()","f46d31af":"train['lang_score'] = train.progress_apply(lambda x: get_lang_score(x['comment_text'], x['lang']), axis=1)","6e2c5166":"sns.distplot(train['lang_score'])","7a07e73c":"train = train[train['lang_score'] > 0.8]","24e3e7a1":"spell = SpellChecker()\n\n# A quick example\nmisspelled = spell.unknown(['something', 'somegting', 'helo', 'fack', 'here', 'bijour'])","1480e1ad":"# Counting the number of spelling errors\n\ntrain['mispell_count'] = train['comment_text'].progress_apply(lambda x: len(spell.unknown(x.split())))","baa38046":"train[train['mispell_count'] < 100]['mispell_count'].hist(bins=100)","a99ce920":"sns.countplot(train['lang'])","e14f0bad":"sns.countplot(train[train['mispell_count'] < 20]['lang'])","bc1c3fa0":"train = train[train['mispell_count'] < 20]","bf73621b":"train['comment_text'] = train['comment_text'].apply(lambda x: x.replace('\\n', ' '))","f2c2b166":"train.head()","a3be15ff":"# Cleaning and removing misspells from texts","0f23ef7b":"## Correct misspellings","26d26ff3":"As you know, to enhance the performance of a model you need to make sure you feed it with high-quality data.\n\n**What does 'high-quality' mean? \n\nWell, it means that you don't have misspelling errors, that your text is not polluted by artifacts or other errors.\n\nIn this short notebook, I show you two ways of cleaning your data.\n\n**Feel free to share your thoughts on my work ;)**\n\nSources:  \n- https:\/\/www.kaggle.com\/shonenkov\/hack-with-parallel-corpus\n- https:\/\/www.kaggle.com\/c\/jigsaw-multilingual-toxic-comment-classification\/discussion\/147417 (Dave Lorenz's message)","ab68e36b":"We are done for this quick notebook. Hope it helped you clean your dataset. If so, don't hesitate to upvote the notebook ;)","6de7f834":"As expected, Russian sentences might be a bit more discarded since Spellcheck might not be able to correctly evaluate Russian sentences.\n**Tips: Always remember to check your data distribution before doing any transformation ;)**","25ca1e1d":"## Importing dependencies","d441bd88":"## Language score","ea55a338":"Since we have a lot of data, we can remove sentences with more than 20 mispells. But before that, let's have a look at the language distribution to make sure we don't remove too many sentences of the same language. Remember that SpellChecker is trained on some languages including Portuguese, Spanish, English, French.","5a19dfca":"Finally, we can quickly replace the small artifacts \\n by nothing."}}