{"cell_type":{"5a5e0401":"code","734ee2e1":"code","992b4eb5":"code","866c1f56":"code","dc1838d0":"code","8b2ee1f1":"code","5fa37874":"code","77983a40":"code","156fb882":"code","32ff62f9":"code","8b1f623e":"code","312d7491":"code","7a176c49":"code","996dc052":"code","9ccba938":"code","54b26e5c":"code","eb788ca0":"markdown"},"source":{"5a5e0401":"\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n\n\n# plotly\nimport plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\n# word cloud library\nfrom wordcloud import WordCloud\n\n# matplotlib\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.\n# Any results you write to the current directory are saved as output.","734ee2e1":"data = pd.read_csv('..\/input\/gun-violence-data_01-2013_03-2018.csv')","992b4eb5":"data.info()","866c1f56":"x=data.date","dc1838d0":"x.str.partition('-')","8b2ee1f1":"y=x.str.split('-')","5fa37874":"year=[row[0] for row in y]","77983a40":"data['year'] = year","156fb882":"data1=data.iloc[:278,:]","32ff62f9":"# import graph objects as \"go\"\nimport plotly.graph_objs as go\ndf=data1\n# Creating trace1\ntrace1 = go.Scatter(\n                    x = df.date,\n                    y = df.n_killed,\n                    mode = \"lines\",\n                    name = \"n_killed\",\n                    marker = dict(color = 'rgba(16, 112, 2, 0.8)'),\n                    text= df.state)\n# Creating trace2\ntrace2 = go.Scatter(\n                    x = df.date,\n                    y = df.n_injured,\n                    mode = \"lines+markers\",\n                    name = \"n_injured\",\n                    marker = dict(color = 'rgba(80, 26, 80, 0.8)'),\n                    text= df.city_or_county)\ndata = [trace1, trace2]\nlayout = dict(title = 'Killed and \u0130njuired People in 2013',\n              xaxis= dict(title= 'Date',ticklen= 4,zeroline= False)\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","8b1f623e":"# prepare data frames\n\n# import graph objects as \"go\"\nimport plotly.graph_objs as go\n# creating trace1\ntrace1 =go.Scatter(\n                    x = df.date,\n                    y = df.n_killed,\n                    mode = \"markers\",\n                    name = \"n_killed\",\n                    marker = dict(color = 'rgba(255, 128, 255, 0.8)'),\n                    text= df.state)\n# creating trace2\ntrace2 =go.Scatter(\n                    x = df.date,\n                    y = df.n_injured,\n                    mode = \"markers\",\n                    name = \"n_injured\",\n                    marker = dict(color = 'rgba(255, 128, 2, 0.8)'),\n                    text= df.city_or_county)\n\n\ndata = [trace1, trace2]\nlayout = dict(title = 'Killed and \u0130njuired People in 2013',\n              xaxis= dict(title= 'Date',ticklen= 5,zeroline= False),\n              yaxis= dict(title= 'Number Of People',ticklen= 5,zeroline= False)\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","312d7491":"# import graph objects as \"go\"\nimport plotly.graph_objs as go\n# create trace1 \ntrace1 = go.Bar(\n                x = df.date,\n                y = df.n_killed,\n                name = \"n_killed\",\n                marker = dict(color = 'rgba(255, 174, 255, 0.5)',\n                             line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = df.state)\n# create trace2 \ntrace2 = go.Bar(\n                x = df.date,\n                y = df.n_injured,\n                name = \"n_injured\",\n                marker = dict(color = 'rgba(255, 255, 128, 0.5)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = df.city_or_county)\ndata = [trace1, trace2]\nlayout = go.Layout(barmode = \"group\")\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","7a176c49":"# data prepararion\nx2011 = data1.state\nplt.subplots(figsize=(8,8))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=512,\n                          height=384\n                         ).generate(\" \".join(x2011))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\n\nplt.show()","996dc052":"# import figure factory\nimport plotly.figure_factory as ff\n# prepare data\ndataframe = data1\ndata2015 = dataframe.loc[:,[\"n_killed\",\"n_injured\", \"date\"]]\ndata2015[\"index\"] = np.arange(1,len(data2015)+1)\n# scatter matrix\nfig = ff.create_scatterplotmatrix(data2015, diag='box', index='index',colormap='Portland',\n                                  colormap_type='cat',\n                                  height=700, width=700)\niplot(fig)","9ccba938":"# create trace 1 that is 3d scatter\ntrace1 = go.Scatter3d(\n    x=data1.date,\n    y=data1.n_killed,\n    z=data1.n_injured,\n    mode='markers',\n    marker=dict(\n        size=10,\n        color='rgb(255,0,0)',                # set color to an array\/list of desired values      \n    )\n)\n\ndata = [trace1]\nlayout = go.Layout(\n    margin=dict(\n        l=0,\n        r=0,\n        b=0,\n        t=0  \n    )\n    \n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","54b26e5c":"trace1 = go.Scatter(\n    x=data1.date,\n    y=data1.n_killed,\n    name = \"killed\"\n)\ntrace2 = go.Scatter(\n    x=data1.date,\n    y=data1.n_injured,\n    xaxis='x2',\n    yaxis='y2',\n    name = \"injuired\"\n)\ntrace3 = go.Scatter(\n    x=data1.date,\n    y=data1.city_or_county,\n    xaxis='x3',\n    yaxis='y3',\n    name = \"city or county\"\n)\ntrace4 = go.Scatter(\n    x=data1.date,\n    y=data1.state,\n    xaxis='x4',\n    yaxis='y4',\n    name = \"state\"\n)\ndata = [trace1, trace2, trace3, trace4]\nlayout = go.Layout(\n    xaxis=dict(\n        domain=[0, 0.45]\n    ),\n    yaxis=dict(\n        domain=[0, 0.45]\n    ),\n    xaxis2=dict(\n        domain=[0.55, 1]\n    ),\n    xaxis3=dict(\n        domain=[0, 0.45],\n        anchor='y3'\n    ),\n    xaxis4=dict(\n        domain=[0.55, 1],\n        anchor='y4'\n    ),\n    yaxis2=dict(\n        domain=[0, 0.45],\n        anchor='x2'\n    ),\n    yaxis3=dict(\n        domain=[0.55, 1]\n    ),\n    yaxis4=dict(\n        domain=[0.55, 1],\n        anchor='x4'\n    ),\n    title = 'Killed And Injuired People in 2013 Acording to date And Location'\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","eb788ca0":"We will analyse Gun Violance Data in 2013 Using Plotly\n1. We will import Libaries We Need \n2. We Analyze and Prepare our Data \n3. Visualize our Data Using Line Chart in Plotly\n4. Visualize our Data Using Scatter Chart in Plotly\n5. Visualize our Data Using Bar Chart in Plotly\n6. Visualize our Data Using Word Chart in Plotly (According to the people killed in States)\n7. We Can use Scater Plot Matrix to analyse our data much more efficient.\n8.We Can use 3D Scatter Plot with Colorscaling Plot to analyse our data much more efficient. \n9.We Can use Multiple Subplots to analyse our data much more efficient. \n"}}