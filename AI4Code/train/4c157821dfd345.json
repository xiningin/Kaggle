{"cell_type":{"653a3d43":"code","9ebd2c5e":"code","59065690":"code","d3809b72":"code","0f715115":"code","eb1e0db9":"code","d2bec131":"code","0c02427f":"code","235b508e":"code","aa6b9917":"code","b573d20b":"code","f6585c09":"code","7cbde9bb":"code","9a465693":"markdown","1728abfc":"markdown","e6d5b57a":"markdown","7ba98aa4":"markdown","22411c26":"markdown","5be287c9":"markdown","0aceb7bf":"markdown","636d6fc0":"markdown"},"source":{"653a3d43":"#Importing required packages.\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.preprocessing import StandardScaler, LabelEncoder\nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\n%matplotlib inline\n\nimport os\nprint(os.listdir(\"..\/input\"))","9ebd2c5e":"#Loading dataset\nnba_df = pd.read_csv(\"..\/input\/playoff_shots.csv\")\nnba_df.head()","59065690":"#define correlation of statistics\ncorr = nba_df.corr()\n#create heatmap\nplt.subplots(figsize=(15,10))\nax = plt.axes()\nax.set_title(\"Correlation Heatmap\")\nsns.heatmap(corr, \n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values)","d3809b72":"#In order to better understand the factors around made shots, we need to better visualize the Data\n\nnba_shot_halfcourt_df = nba_df.query('LOC_Y<400')\n#Filter shot data within the halfcourt, anything over 400 is an outlier\n\nsns.lmplot('LOC_X', # Horizontal coordinate of shot\n           'LOC_Y', # Vertical coordinate of shot\n           col=\"TEAM_NAME\", col_wrap= 4, #Display plot by team\n           data=nba_shot_halfcourt_df, # Data source\n           fit_reg=False, # Don't fix a regression line\n           hue='EVENT_TYPE', legend=True,\n           scatter_kws={\"s\": 12}) # S marker size","0f715115":"#Drop non-numerical data fields that statistically irrelevant or covered in another column\nnba_df.drop(['GRID_TYPE', 'PLAYER_NAME', 'TEAM_NAME', 'SHOT_ATTEMPTED_FLAG', 'SHOT_MADE_FLAG', 'HTM', 'VTM'], inplace=True, axis=1)\nnba_df.head()","eb1e0db9":"#check for missing values\nprint(pd.isnull(nba_df).sum())","d2bec131":"#Quantify Shot_Type\nshot_type_mapping = {'3PT Field Goal': 3, '2PT Field Goal': 2}\nnba_df['SHOT_TYPE'] = nba_df['SHOT_TYPE'].map(shot_type_mapping)\nnba_df['SHOT_TYPE'].head(5)","0c02427f":"#Quantify Shot Zone Range\nshot_zone_range_mapping = {'24+ ft.': 24, 'Less Than 8 ft.': 7, '16-24 ft.': 16, '8-16 ft.': 8, 'Back Court Shot': 50}\nnba_df['SHOT_ZONE_RANGE'] = nba_df['SHOT_ZONE_RANGE'].map(shot_zone_range_mapping)\nnba_df['SHOT_ZONE_RANGE'].head(5)","235b508e":"#Quantify Shot Zone Area\nshot_zone_area_mapping = {'Back Court(BC)': 0, 'Left Side(L)': 1, 'Left Side Center(LC)': 2, 'Center(C)': 3, 'Right Side Center(RC)': 4, 'Right Side(R)': 5}\nnba_df['SHOT_ZONE_AREA'] = nba_df['SHOT_ZONE_AREA'].map(shot_zone_area_mapping)\nnba_df['SHOT_ZONE_AREA'].head(5)","aa6b9917":"#Quantify Shot Zone Basic\nshot_zone_basic_mapping = {'Backcourt': 0, 'Left Corner 3': 1,'Right Corner 3': 2, 'Above the Break 3': 3, 'Mid-Range': 4, 'In The Paint (Non-RA)': 5, 'Restricted Area': 6}\nnba_df['SHOT_ZONE_BASIC'] = nba_df['SHOT_ZONE_BASIC'].map(shot_zone_basic_mapping)\nnba_df['SHOT_ZONE_BASIC'].head(5)","b573d20b":"#Create dummy variable for shotype\nshot_dummy = pd.get_dummies(nba_df['ACTION_TYPE'])\nnba_df = pd.concat([nba_df,shot_dummy], axis = 1)\nnba_df.drop(['ACTION_TYPE'], inplace=True, axis=1)\nnba_df.head()","f6585c09":"#Split data to predict if the shot was made or missed\nX = nba_df.drop('EVENT_TYPE', axis = 1)\ny = nba_df['EVENT_TYPE']\n\n#Train and Test splitting of data \nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 42)","7cbde9bb":"#Predict through Random Forest Classifier\nrfc = RandomForestClassifier(n_estimators=350)\nrfc.fit(X_train, y_train)\npred_rfc = rfc.predict(X_test)\n# Check results\nprint(classification_report(y_test, pred_rfc))","9a465693":"# **Clean the Data**","1728abfc":"# **Conclusion**\n\nUsing a simple Random Forest, we are able to predict whether a shot would be made at **over 60%**.\n\nWhile this figure is not extremely high, it could serve as an elementary block for NBA analytics.\n\nAnother interesting insight was to see that the model had a much **higher recall rate** (aka True positive Rate) for a **missed shot over a made shot**. This means that a made shot prediction had a **high number of false negatives** (shots that were predicted to miss but actually went in). This might mean that NBA players in the playoffs make shots with low probabilities. ","e6d5b57a":"# **Model**","7ba98aa4":"# **Ingest**","22411c26":"With these shot plots, we can generally see where teams generally shoot. also that teams that played more games\n\nAlso we can see that teams that have played more games (won more playoff series) have more shot data","5be287c9":"# **EDA**","0aceb7bf":"This heatmap map shows very l**ittle correlation and insight**, but this is not suprising given the context of the data.\n\nThe most telling insight is that **shot distance is negatively correlated with the % of being made** (shot_made_flag)","636d6fc0":"# **Introduction**\n\nHi Guys,\n\nThis notebook is a simple machine learning model to predict the outcome of a shot in the playoffs based on a number of factors in the dataset (Player, Location, Shot Type, etc.). The approach is fairly simple, but it shows the power of machine learning and a random forest classifier to predict very dynamic events. Any feedback or comment is appreciate it! "}}