{"cell_type":{"f6148986":"code","22bcef08":"code","fec50b1a":"code","efa584b4":"code","1228039f":"code","25f5bc4c":"code","3d4d8196":"code","8da0a5f3":"code","e89a5009":"code","79a3debf":"code","4621c4e0":"code","82e36b3f":"code","8259dabe":"code","39b01ff3":"code","f60734e9":"code","d259a6fc":"code","7de42b37":"markdown","d53adbb2":"markdown","6aa754a6":"markdown","d90f324f":"markdown","06628222":"markdown","df1f4772":"markdown","fdd7e638":"markdown","6d069178":"markdown","50edadf5":"markdown","de7bf739":"markdown","768f2d62":"markdown","fc910369":"markdown","b530b639":"markdown","0077f8fc":"markdown"},"source":{"f6148986":"from sklearn.datasets import load_breast_cancer","22bcef08":"df = load_breast_cancer()","fec50b1a":"df.feature_names","efa584b4":"print(\"This are values of the First row:\\n\")\nfor i, j in zip(df.feature_names, df.data[0]):\n    print(i, \": \", j)","1228039f":"df.target_names","25f5bc4c":"print('Shape of feature names: ', df.data.shape, '\\nShape of Target Names: ', df.target.shape)","3d4d8196":"from sklearn.preprocessing import StandardScaler\n\nX = StandardScaler().fit_transform(df.data)","8da0a5f3":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, df.target, test_size=0.2, shuffle=False)","e89a5009":"from sklearn.linear_model import LogisticRegression\n\nlogit_reg = LogisticRegression()\nlogit_reg.fit(X_train, y_train)","79a3debf":"rr = X_train[34].reshape(-1, 1).T # rr means random row\nprediction = logit_reg.predict(rr)\npred_probability = logit_reg.predict_proba(rr)\npred_log_proba = logit_reg.predict_log_proba(rr)\n\nprint(\"Prediction: \", prediction)\nprint(\"Prediction probability: \", pred_probability)\nprint(\"Prediction Log Probability: \", pred_log_proba)","4621c4e0":"y_pred = logit_reg.predict(X_test)","82e36b3f":"print(\"Prediction: \\n\", y_pred)\nprint(\"\\nActual Values: \\n\", y_test)","8259dabe":"from sklearn.metrics import confusion_matrix\n\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)","39b01ff3":"print(\"Model Score: \", logit_reg.score(X_test, y_test))","f60734e9":"import matplotlib.pyplot as plt\nimport numpy as np\nimport itertools\n\ndef plot_confusion_matrix(cm, classes,\n                        normalize=False,\n                        title='Confusion matrix',\n                        cmap=plt.cm.Blues):\n    \"\"\"\n    This function prints and plots the confusion matrix.\n    Normalization can be applied by setting `normalize=True`.\n    \"\"\"\n    plt.imshow(cm, interpolation='nearest', cmap=cmap)\n    plt.title(title)\n    plt.colorbar()\n    tick_marks = np.arange(len(classes))\n    plt.xticks(tick_marks, classes, rotation=45)\n    plt.yticks(tick_marks, classes)\n\n    if normalize:\n        cm = cm.astype('float') \/ cm.sum(axis=1)[:, np.newaxis]\n        print(\"Normalized confusion matrix\")\n    else:\n        print('Confusion matrix, without normalization')\n\n    print(cm)\n\n    thresh = cm.max() \/ 2.\n    for i, j in itertools.product(range(cm.shape[0]), range(cm.shape[1])):\n        plt.text(j, i, cm[i, j],\n            horizontalalignment=\"center\",\n            color=\"white\" if cm[i, j] > thresh else \"black\")\n\n    plt.tight_layout()\n    plt.ylabel('True label')\n    plt.xlabel('Predicted label')\n    plt.show()","d259a6fc":"plot_confusion_matrix(cm, df.target_names)","7de42b37":"Our model has predicted 2 Benign tumor as Malignant tumor and else all correctly!","d53adbb2":"Congratulations! We have achieved accuracy of 98%","6aa754a6":"### Making Model with Logistic Regression:","d90f324f":"#### Step 1: Fitting Data","06628222":"All the column as Continuous Data and has no Null values","df1f4772":"#### Step 3: Prediction on Test Set","fdd7e638":"## Data Preprocessing","6d069178":"#### Step 2: Prediction","50edadf5":"#### Step 1: Standard Scaling","de7bf739":"This are all the Feature names or 'X' values","768f2d62":"## Project: Predicting a Tumor is malignant or Benign\n\n### Importing data and seeing the insights:","fc910369":"#### Step 2: Train Test & Split","b530b639":"#### Step 4: Visualizing Prediction with Confusion Matrix & Accuracy","0077f8fc":"Therefore, in target names 0 means the Tumor is malignant whereas 1 means it is Benign\n\nIn case you don't know, Malignant tumor is a disease in which abnormal cells divide uncontrollably and destroy body tissue. It causes cancer of Breast, Postrate, Skin, etc\n\nA benign tumor is a mass of cells (tumor) that lacks the ability to either invade neighboring tissue or metastasize (spread throughout the body). When removed, benign tumors usually do not grow back, whereas malignant tumors sometimes do. This tumor does not cause Cancer\n\n(Source: Google)"}}