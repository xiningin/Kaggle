{"cell_type":{"68beb3f6":"code","382d7e29":"code","6e007379":"code","bf67411f":"code","40786bae":"code","da2e5146":"code","1b5493f7":"code","88c2e6f6":"code","2b8b6b0d":"code","afc96711":"code","81bf58be":"code","6954ac67":"code","4e85247d":"markdown","69202697":"markdown","28fd03bf":"markdown"},"source":{"68beb3f6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","382d7e29":"#Importing data\ndata = pd.read_csv(\"..\/input\/Pokemon.csv\")","6e007379":"#Basic info about the data\ndata.info()\ndata.columns","bf67411f":"#A bir more complicated information about the numerical data\ndata.describe()","40786bae":"#The first N data (here N = 10)\ndata.head(10)","da2e5146":"#The corrolation between the data\ndata.corr()","1b5493f7":" #Line plot showing the attack and defense values of pokemons\ndata.Attack.plot(kind = \"line\", label = \"attack\", color = \"red\", figsize = (15, 15), linestyle = \":\", linewidth = 1.5, grid = True)\ndata.Defense.plot(kind = \"line\", label = \"defense\", color = \"blue\", figsize = (15, 15), linestyle = \"-\", linewidth = 1.5, alpha = 0.5, grid = True)\nplt.legend(loc = \"upper left\")\nplt.xlabel(\"index\")\nplt.ylabel(\"y label\")\nplt.show()","88c2e6f6":"#Scatter plot showing how attack correlates with special attack \ndata.plot(kind = \"scatter\", x = \"Attack\", y = \"Sp. Atk\", color = \"blue\", figsize = (14, 14), grid = True)\nplt.show()","2b8b6b0d":"#Histogram showing the frequency of health values\ndata.HP.plot(kind = \"hist\", bins = 75, figsize = (15, 15))\nplt.xlabel(\"HP\")\nplt.show()","afc96711":"#Create a data frame\ndf = data[[\"HP\"]]\n#Set a filter\nx = data[\"HP\"] < 40\n#Print the filtered data\n#If your write df[x] instead you will only see the hp values\ndata[x]","81bf58be":"#Filtering using logical_and\ndata[np.logical_and(data[\"HP\"] > 100, data[\"Attack\"] > 100)]","6954ac67":"#Another way of using \"and\"\ndata[(data[\"HP\"] > 100) & (data[\"Attack\"] > 100)]","4e85247d":"**FILTERING**","69202697":"**PLOTS USING MATPLOTLIB**","28fd03bf":"**INTRO TO PYTHON**"}}