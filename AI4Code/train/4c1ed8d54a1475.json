{"cell_type":{"affbe2a7":"code","f1f25079":"code","0ac61dad":"code","3179b06f":"code","b1396495":"code","736cfbaa":"code","9095ed32":"code","c5229b5d":"code","8a9ce093":"code","e6f2070e":"code","bb95f09b":"code","cbaabae6":"code","92432515":"code","51ec868c":"code","b66b107f":"code","c2515752":"code","60b71c52":"code","3fd7c647":"code","0062e92b":"code","8501f53f":"code","4e52d93e":"code","002c608f":"code","a560d0ba":"code","fdd0d872":"code","8e8f9f01":"code","17045f38":"code","77bcc987":"code","9c1f9585":"code","385ea5f0":"code","f1f0e918":"code","a40f984c":"code","32b69659":"code","1c5b52c4":"code","5ca9e728":"markdown","7ba5424c":"markdown","e15e84b0":"markdown","18973c26":"markdown","b186be80":"markdown"},"source":{"affbe2a7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f1f25079":"df=pd.read_csv(r'\/kaggle\/input\/fall-guys-metacritic-reviews\/fall_guys_metacritic_reviews.csv')","0ac61dad":"df.head()","3179b06f":"df.shape","b1396495":"df.isnull().sum()","736cfbaa":"df['review_type'].unique()","9095ed32":"df.drop(columns=['review_type','published_date','published_date'],inplace=True)","c5229b5d":"df.head()","8a9ce093":"df['score'].unique()","e6f2070e":"df.shape","bb95f09b":"df.isnull().any()","cbaabae6":"## we have to predict the score based on the text give so we dont need other columns\ndf.drop(columns=['username','votes','profile_url','platform'],inplace=True)","92432515":"df.head()","51ec868c":"df.describe()","b66b107f":"df['score'].value_counts()","c2515752":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","60b71c52":"df['score'].value_counts().plot(kind='bar',color='r')","3fd7c647":"train_qs = pd.Series(df['review_text'].tolist()).astype(str)","0062e92b":"from wordcloud import WordCloud\ncloud = WordCloud(width=1440, height=1080).generate(\" \".join(train_qs.astype(str)))\nplt.figure(figsize=(20, 15))\nplt.imshow(cloud)\nplt.axis('off')","8501f53f":"import nltk\nfrom nltk.corpus import stopwords\nimport re","4e52d93e":"df.head(56)","002c608f":"from sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn import naive_bayes\nfrom sklearn.metrics import roc_auc_score,classification_report\nimport matplotlib.pyplot as plt\n%matplotlib inline","a560d0ba":"stopset=set(stopwords.words('english'))\nvector=TfidfVectorizer(use_idf=True,lowercase=True,strip_accents='ascii',stop_words=stopset)","fdd0d872":"df.dropna(inplace=True)","8e8f9f01":"vector.fit(df)","17045f38":"y=df.score\nx=vector.fit_transform(df.review_text)","77bcc987":"x.shape","9c1f9585":"from sklearn.tree import DecisionTreeClassifier\ntr= DecisionTreeClassifier()","385ea5f0":"tr.fit(x,y)","f1f0e918":"pr=tr.predict(x)\npr","a40f984c":"print(classification_report(y,pr))","32b69659":"from sklearn.metrics import confusion_matrix","1c5b52c4":"print(confusion_matrix(y,pr))","5ca9e728":"# feature extraction","7ba5424c":"# visualization","e15e84b0":"### if we observe the above classification report and confusion matrix our model is predicting pretty good with good accuracy and f1_score","18973c26":"# model creation","b186be80":"# data cleaning"}}