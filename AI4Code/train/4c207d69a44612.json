{"cell_type":{"d2298c60":"code","3cd04c8e":"code","5c6c75df":"code","59a42243":"code","6980121d":"code","71ad83e8":"code","1c658237":"code","15b0be7d":"code","bfd8a8cc":"code","f28b0204":"code","86b11e27":"code","8b1fc824":"code","ea0423af":"code","10b06d8a":"code","dff4e649":"code","8313e1da":"code","2e004a55":"code","a49ee24e":"code","17bc2fe8":"code","e5ec75f2":"markdown","7f160284":"markdown","96dd105f":"markdown","b8eb5542":"markdown","0029cd00":"markdown","6e07de77":"markdown"},"source":{"d2298c60":"import numpy as np\nimport pandas as pd\nimport statsmodels.api as sm\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport math","3cd04c8e":"data = pd.read_csv(\"..\/input\/home-data-for-ml-course\/train.csv\")","5c6c75df":"data.head()","59a42243":"endog = data['SalePrice']\nexog = sm.add_constant(data[['OverallQual','YearBuilt','YearRemodAdd','TotalBsmtSF','1stFlrSF','GrLivArea','FullBath','TotRmsAbvGrd','GarageCars','GarageArea']])\nprint(exog)","6980121d":"X = exog.to_numpy()\nY = endog.to_numpy()\nprint(X)","71ad83e8":"from numpy import array\nfrom numpy import mean\nfrom numpy import cov\nfrom numpy.linalg import eig","1c658237":"M = mean(X.T, axis=1)\nprint(M)\n","15b0be7d":"C= X-M\nprint(C)","bfd8a8cc":"V = cov(C.T)\nprint(V)","f28b0204":"values, vectors = eig(V)\nprint(vectors)\n","86b11e27":"print(values)","8b1fc824":"\nP = vectors.T.dot(C.T)\nprint(P.T)","ea0423af":"from sklearn.decomposition import PCA\npca = PCA(n_components=1)\nprincipalComponents = pca.fit_transform(X)\nprincipalDf = pd.DataFrame(data = principalComponents\n             , columns = ['principal component 1'])","10b06d8a":"exog1 = sm.add_constant(principalDf[['principal component 1']])\nprint(exog1)\n","dff4e649":"from sklearn import linear_model\nlm = linear_model.LinearRegression()\nmodel = lm.fit(exog1,endog)\nlm.coef_","8313e1da":"lm.intercept_","2e004a55":"def RSE(y_true, y_predicted):\n   \n    y_true = np.array(y_true)\n    y_predicted = np.array(y_predicted)\n    RSS = np.sum(np.square(y_true - y_predicted))\n\n    rse = math.sqrt(RSS \/ (len(y_true) - 2))\n    return rse","a49ee24e":"ypred =lm.predict(exog1)","17bc2fe8":"re = RSE(endog,ypred)\nprint(re)","e5ec75f2":"# Principle Component Analysis","7f160284":"### I hope you liked my Notebook","96dd105f":"### Importing Libraries","b8eb5542":"### Loading Data","0029cd00":"### Input and Output Vectors","6e07de77":"### Project Data"}}