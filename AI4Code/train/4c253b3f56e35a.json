{"cell_type":{"56277878":"code","109b8207":"code","c60a0acd":"code","63586018":"code","e7c1b0cf":"code","f7b386ab":"code","aed4077f":"code","74a95d77":"code","91d610d8":"code","6357c3a6":"code","d588733b":"code","5564b7b7":"code","3a152d59":"code","728e02fc":"code","9e81ddba":"code","63e4d51a":"code","f5bfc3a3":"code","a997694f":"code","c472c81c":"code","cae8e4c5":"code","008fd377":"code","18a64b55":"code","0e85a48d":"code","5429d78e":"code","e73e1bd2":"code","9d210278":"code","7ae2b1cf":"code","269cbb6b":"code","dd927f37":"code","2fa37f37":"code","9d8b456e":"code","293073eb":"code","edaace57":"code","978f87c0":"code","0449c5c8":"code","91c06aac":"code","c1ca8556":"code","50d15c0a":"code","0c950eae":"code","7bcf52d9":"code","2d1ca918":"code","3d39f24c":"code","0eff1f51":"code","6c9b9749":"code","7548021a":"code","c4812640":"code","8f4050b3":"code","258098ae":"code","113eed8a":"code","a9489d86":"code","eeeccfd5":"code","e81dcd32":"code","b9f007d0":"code","847541d6":"code","b96c5a9d":"markdown","b117da19":"markdown","13b3dff7":"markdown","7e049830":"markdown","6879007d":"markdown","81fc8fab":"markdown","479e732c":"markdown","c376628a":"markdown","e086ed31":"markdown","3be2b6ec":"markdown"},"source":{"56277878":"#Importing Libraries\nimport glob\nimport warnings\nimport numpy as np \nfrom numpy import float64\nimport pandas as pd\nimport missingno as msno\nimport plotly as py\nimport seaborn as sns\nimport string as str\nimport math\nimport statistics as stat\nimport plotly.express as px\nimport plotly.graph_objs as go\nwarnings.filterwarnings(\"ignore\")\npd.set_option('display.max_columns', None)\nfrom plotly.offline import init_notebook_mode\ninit_notebook_mode(connected = True)\nimport matplotlib.pyplot as plt\n%matplotlib inline","109b8207":"#Reading the districts_info.csv\ndistricts = pd.read_csv('..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv')","c60a0acd":"#Display the districts_info.csv\ndistricts.head(10)","63586018":"#Check the number of null values in districts_info.csv\ndistricts.isna().sum()","e7c1b0cf":"districts_nan = (districts.isnull().sum() \/ districts.shape[0]) * 100\ndistricts_nan[districts_nan > 0]","f7b386ab":"#Reading the products_info.csv\nproduct = pd.read_csv('..\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv')","aed4077f":"#Display the products data\nproduct.head(10)","74a95d77":"#Check the number of null values in products_info.csv\nproduct.isna().sum()","91d610d8":"#Check the percentage of null values in product file\nproducts_nan = (product.isnull().sum() \/ product.shape[0]) * 100\nproducts_nan[products_nan > 0]","6357c3a6":"path = \"\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data\"\nengagement_data = glob.glob(path + \"\/*.csv\")\n\nli = []\nfor filename in engagement_data:\n    df = pd.read_csv(filename, index_col=None, header=0)\n    li.append(df)\n    \nengagement_df = pd.concat(li, axis=0, ignore_index=True)","d588733b":"print('\\033[1m'\"Shape of the Engagement File \"'\\033[0m',engagement_df.shape )\nprint('\\033[1m'\"Shape of the District file\"'\\033[0m', districts.shape)\nprint('\\033[1m'\"Shape of the Product File\"'\\033[0m',product.shape)","5564b7b7":"engagement_df","3a152d59":"print('\\033[1m'\"Data types of each column in district data file\\n\"'\\033[0m',districts.dtypes)\nprint('\\033[1m'\"Data types of each column in product data file\\n\"'\\033[0m',product.dtypes)\nprint('\\033[1m'\"Data types of each column in engagement data file\\n\"'\\033[0m',engagement_df.dtypes)","728e02fc":"#Missing value count  \nprint('\\033[1m'\"Missing value count in each column of district data file\\n\"'\\033[0m',districts.isna().sum())\nprint('\\033[1m'\"Missing value count in each column of product data file\\n\"'\\033[0m',product.isna().sum())\nprint('\\033[1m'\"Missing value count in each column of engagement data file\\n\"'\\033[0m',engagement_df.isna().sum())","9e81ddba":"msno.bar(districts,color='Green', sort=\"ascending\", figsize=(10,5), fontsize=12)\nplt.show()","63e4d51a":"msno.bar(product,color='Yellow', sort=\"ascending\", figsize=(10,5), fontsize=12)\nplt.show()","f5bfc3a3":"msno.bar(engagement_df,color='Pink', sort=\"ascending\", figsize=(10,5), fontsize=12)\nplt.show()","a997694f":"# Dropping the  Nan values from the states column which is less than 30%\ndistricts = districts[districts['state'].notna()].reset_index(drop=True)","c472c81c":"# Count of each states in the dataframe\nplt.figure(figsize=(10,12))\nsns.countplot(y ='state',data = districts,order=districts['state'].value_counts().index)\nplt.show()","cae8e4c5":"#Replace the NaN values with -1\n#Attribute pct_free\/reduced,county_connections_ratio and pp_total_raw\n#Replace the NaN pct_free\/reduced, county_connections_ratio and pp_total_raw with 0\ndistricts['pct_free\/reduced']  = districts['pct_free\/reduced'].fillna('-1,-1')\ndistricts['county_connections_ratio'] = districts['county_connections_ratio'].fillna('-1,-1')\ndistricts['pp_total_raw'] = districts['pp_total_raw'].fillna('-1,-1')\n\n#After replacing with -1\ndistricts","008fd377":"#After replacing the NaN values with 0, we calculate the mean values of which were previously given in a range\n#Adding columns with mean values for pct_black\/hispanic, pct_free\/reduced, county_connections_ratio and pp_total_raw\ndef splitValues(column):\n    mean_val = []\n    for val in column:\n        value_1 = pd.to_numeric(val.strip('[]').split(',')[0],errors='coerce')\n        value_2 = pd.to_numeric(val.strip('[]').split(',')[0],errors='coerce')\n        mean_val.append((value_1 + value_2)\/2)\n    return mean_val\n\ndistricts['black\/hisp_pct_mean'] = splitValues(districts['pct_black\/hispanic'])\ndistricts['free\/red_pct_mean'] = splitValues(districts['pct_free\/reduced'])\ndistricts['county_connec_ratio_mean'] = splitValues(districts['county_connections_ratio'])\ndistricts['pp_total_raw_mean'] = splitValues(districts['pp_total_raw'])\n\n#After adding mean columns\ndistricts","18a64b55":"# Rechecking the no of missing values in the district column\n\ndistricts.isna().sum()","0e85a48d":"# Count of each locale in the dataframe\nplt.figure(figsize=(10,12))\nsns.countplot(x ='locale',data = districts,order=districts['locale'].value_counts().index)\nplt.show()","5429d78e":"#Plotting Graph\nfig = px.pie(districts['locale'].value_counts().reset_index().rename(columns = {'locale': 'count'}), values = 'count', names = 'index', width = 700, height = 700)\n\nfig.update_traces(textposition = 'inside', \n                  textinfo = 'percent + label', \n                  hole = 0.7, \n                  marker = dict(colors = ['Blue','Green','Red','Orange'], line = dict(color = 'white', width = 2)))\n\nfig.update_layout(annotations = [dict(text = ' The total count of <br>districts in different <br> areas', \n                                      x = 0.5, y = 0.5, font_size = 26, showarrow = False, \n                                      font_family = 'monospace',\n                                      font_color = 'black')],\n                  showlegend = False)\n                  \nfig.show()","e73e1bd2":"#Number of missing values in product_info.csv\nprint('\\033[1m'\"Missing value count in each column of product data file\\n\"'\\033[0m',product.isna().sum())","9d210278":"plt.figure(figsize=(16, 10))\nsns.countplot(y='Provider\/Company Name', data=product, order=product[\"Provider\/Company Name\"].value_counts().index[:10],palette = 'cool')\nplt.title(\"Top 10 Provider\/Company Names\",font=\"Serif\", size=20)\nplt.show()","7ae2b1cf":"product['Provider\/Company Name']  = product['Provider\/Company Name'].fillna('Google LLC')\nproduct","269cbb6b":"plt.figure(figsize=(16, 10))\nsns.countplot(y='Sector(s)', data=product, order=product[\"Sector(s)\"].value_counts().index[:10],palette = 'cool')\nplt.title(\"Top 10 Sector(s)\",font=\"Serif\", size=20)\nplt.show()","dd927f37":"product['Sector(s)']  = product['Sector(s)'].fillna('PreK-12')\nproduct","2fa37f37":"plt.figure(figsize=(16, 10))\nsns.countplot(y='Primary Essential Function', data=product, order=product[\"Primary Essential Function\"].value_counts().index[:10],palette = 'cool')\nplt.title(\"Top 10 Primary Essential Function\",font=\"Serif\", size=20)\nplt.show()","9d8b456e":"product['Primary Essential Function']  = product['Primary Essential Function'].fillna('LC-Digital Learning Platforms')\nproduct","293073eb":"#Number of missing values in product_info.csv\nprint('\\033[1m'\"Missing value count in each column of product data file\\n\"'\\033[0m',product.isna().sum())","edaace57":"#plotting graph\nfig = px.pie(product['Sector(s)'].value_counts().reset_index().rename(columns = {'Sector(s)': 'count'}).head(15), values = 'count', names = 'index', width = 700, height = 700)\n\nfig.update_traces(textposition = 'inside', \n                  textinfo = 'percent + label', \n                  hole = 0.7, \n                  marker = dict(colors = ['Red','Blue','Green','orange', 'yellow'], line = dict(color = 'white', width = 2)))\n\nfig.update_layout(annotations = [dict(text = 'Sector of education <br>where the product is used', \n                                      x = 0.5, y = 0.5, font_size = 26, showarrow = False, \n                                      font_family = 'monospace',\n                                      font_color = 'black')],\n                  showlegend = False)\n                  \nfig.show()","978f87c0":"plt.figure(figsize=(10,10))\nplt.title('Pct_black\/Hispanic',fontsize=40)\nplt.xlabel('Pct_black\/hispanic', fontsize=20)\nplt.ylabel('Count', fontsize=20)\nsns.countplot(y=districts['pct_black\/hispanic'],order=districts['pct_black\/hispanic'].value_counts().index[:],palette=sns.cubehelix_palette(8, start=.75, rot=-.150))","0449c5c8":"plt.figure(figsize=(10,10))\nplt.title('pct_free\/reduced',fontsize=40)\nplt.xlabel('pct_free\/reduced', fontsize=20)\nplt.ylabel('Count', fontsize=20)\nsns.countplot(y=districts['pct_free\/reduced'],order=districts['pct_free\/reduced'].value_counts().index[:],palette=sns.light_palette(\"Orange\"))","91c06aac":"plt.figure(figsize=(10,10))\nplt.title('pp_total_raw',fontsize=40)\nplt.xlabel('pp_total_raw', fontsize=20)\nplt.ylabel('Count', fontsize=20)\nsns.countplot(y=districts['pp_total_raw'],order=districts['pp_total_raw'].value_counts().index[:])","c1ca8556":"#Missing value count for merged Engagement_data\nprint('\\033[1m'\"Missing value count in each column of engagement data file\\n\"'\\033[0m',engagement_df.isna().sum())","50d15c0a":"engagement_df['lp_id']  = engagement_df['lp_id'].fillna('-1')\nengagement_df['pct_access'] = engagement_df['pct_access'].fillna('-1')\nengagement_df['engagement_index'] = engagement_df['engagement_index'].fillna('-1')\n\n#After replacing with -1\nengagement_df","0c950eae":"districts1=districts[['district_id']]\ndistricts.head(10)","7bcf52d9":"product['LP ID'] = product['LP ID'].astype(float64)\nproduct.info()","2d1ca918":"engagement_df['lp_id'] = engagement_df['lp_id'].astype(float64)\nengagement_df.info()\n","3d39f24c":"#merge engagement_data and products file\nengagement_product = pd.merge(engagement_df, product, left_on='lp_id', right_on='LP ID' )\nengagement_product","0eff1f51":"districts1=districts[['district_id']]\ndistricts1.head(10)","6c9b9749":"\nproduct1=product[['LP ID']]\nproduct1.head(10)","7548021a":"frames = [districts1, product1]","c4812640":"d1 = pd.concat([districts1, product1], axis = 1).T.drop_duplicates().T","8f4050b3":"print(d1)","258098ae":"DP = pd.merge(engagement_product, d1, left_on='lp_id', right_on='LP ID' )\nprint(DP)","113eed8a":"engagement_district_products = pd.merge(DP, districts, on=\"district_id\")\nprint(engagement_district_products)","a9489d86":"engagement_district_products","eeeccfd5":"result_df=engagement_district_products.drop('LP ID_y',axis=1)","e81dcd32":"result_df","b9f007d0":"#What is the picture of digital connectivity and engagement in 2020 ?\nGraph1= result_df[['lp_id','district_id','time', 'pct_access', 'engagement_index']]\nGraph1.head(5)","847541d6":"year = []\nmonth = []\nday = []\nfor t in Graph1[\"time\"]:\n    z = t.split(\"-\")\n    year.append(z[0])\n    month.append(z[1])\n    day.append(z[2])\nGraph1[\"year\"] = year\nGraph1[\"month\"] = month\nGraph1[\"day\"] = day\nGraph1.head()","b96c5a9d":"**Name : Engagement_data**\n\ntime : date in \"YYYY-MM-DD\"\n\nlp_id : The unique identifier of the product.\n\npct_access\tPercentage of students in the district have at least one page-load event of a given product and on a given day.\n\nengagement_index\tTotal page-load events per one thousand students of a given product and on a given day.","b117da19":"**Products_info**","13b3dff7":"**Data Preprocessing**","7e049830":"**Name : Products_info.csv**\n\nLP ID : The unique identifier of the product.\n\nURL : Web Link to the specific product.\n\nProduct Name : Name of the specific product.\n\nProvider\/Company Name : Name of the product provider.\n\nSector(s) : Sector of education where the product is used.\n\nPrimary Essential Function : The basic function of the product. There are two layers of labels here. Products are first labeled as one of these three categories: LC = Learning & Curriculum, CM = Classroom Management, and SDO = School & District Operations. Each of these categories have multiple sub-categories with which the products were labeled","6879007d":"                                          5DMACP03\n                            Impact of Covid-19 on Student Learning","81fc8fab":"**Engagement_data**","479e732c":"**Name : Districts_info.csv**\n\ndistrict_id : The unique identifier of the school district.\n\nstate : The state where the district resides in.\n\nlocale : NCES locale classification that categorizes U.S. territory into four types of areas: City, Suburban, Town, and Rural.\n\npct_black\/hispanic : Percentage of students in the districts identified as Black or Hispanic based on 2018-19 NCES data.\n\npct_free\/reduced : Percentage of students in the districts eligible for free or reduced-price lunch based on 2018-19 NCES data.\n\ncounty_connections_ratio : ratio (residential fixed high-speed connections over 200 kbps in at least one direction\/households).\n\npp_total_raw :Per-pupil total expenditure (sum of local and federal expenditure) from Edunomics Lab's National Education Resource Database on Schools (NERD$) project.","c376628a":"**Problem Statement** \n\n  The COVID-19 Pandemic has disrupted learning for more than 56 million students in the United States. In the Spring of 2020, most states and local governments across the U.S. closed educational institutions to stop the spread of the virus. In response, schools and teachers have attempted to reach students remotely through distance learning tools and digital platforms. Until today, concerns of the exacaberting digital divide and long-term learning loss among America\u2019s most vulnerable learners continue to grow.","e086ed31":"                      Name                                USN                      Roll Number\n                Annapurneshwari S. Kattishettar       01FE20BCS420                     467\n                Dhanalakshmi R Hiremath               01FE20BCS421                     466\n                Swathi S                              01FE20BCS412                     463\n                Pradyumn P Gurlhosur                  01FE20BCS407                     461\n","3be2b6ec":"                                           Team 10\n                                        5th SEM, D Division\n                                    Department of Computer Science"}}