{"cell_type":{"a38fc8e3":"code","8a49ab1f":"code","e36a147c":"code","a6c74025":"code","263f8a8f":"code","0827f944":"code","57d01536":"code","671e49cb":"code","93d3179b":"markdown","6b607464":"markdown","6c5dac10":"markdown","b739c93a":"markdown"},"source":{"a38fc8e3":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n#Tesseract Library\nimport pytesseract\n\nimport cv2\nimport matplotlib.pyplot as plt\nfrom PIL import Image\nimport os\n\nimport random\n\nimport warnings\nwarnings.filterwarnings(action='ignore') \n","8a49ab1f":"train = pd.read_csv('\/kaggle\/input\/shopee-product-matching\/train.csv')","e36a147c":"train.head()","a6c74025":"sample_images = '..\/input\/shopee-product-matching\/train_images\/'","263f8a8f":"image_id = random.choice(train['image'].values)\n\nimg_path = os.path.join('..\/input\/shopee-product-matching\/train_images\/', image_id)\n\nimage = cv2.imread(img_path)\nimage = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n\nplt.figure(figsize=(5, 5))\n\nplt.imshow(image)\nplt.title(image_id)","0827f944":"print(' OCR result : ' + pytesseract.image_to_string(Image.open(img_path), timeout=10))\nprint('======================')\nprint(' GT title column is : ' + train[train['image'] == image_id]['title'].values)","57d01536":"def plot_images(group):\n    \n    plot_list = train[train['label_group'] == group]\n    plot_list = plot_list['image'].tolist()\n    images_number = len(plot_list)\n    size = np.sqrt(images_number)\n    if int(size)*int(size) < images_number:\n        size = int(size) + 1\n        \n    plt.figure(figsize=(20, 20))\n    \n    ind=0\n    for image_id in plot_list:\n        plt.subplot(size, size, ind + 1)\n        \n        img_path = os.path.join('..\/input\/shopee-product-matching\/train_images\/', image_id)\n        \n        image = cv2.imread(os.path.join(img_path))\n        image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n\n        plt.imshow(image)\n        plt.title(image_id, fontsize=9)\n        plt.axis(\"off\")\n        ind+=1\n        \n        print(pytesseract.image_to_string(Image.open(img_path), timeout=5))\n        print(train[train['image'] == image_id]['title'].values[0])\n        \n        print('============================================')\n        \n        \n    plt.show()","671e49cb":"image_id = random.choice(train['image'].values)\n\nplot_images(train[train['image'] == image_id]['label_group'].values[0])","93d3179b":"### **We will extract text information from the image via OCR.**\nFind the similarity of text.","6b607464":"### Image group","6c5dac10":"by tesseract (https:\/\/github.com\/tesseract-ocr\/tesseract)","b739c93a":"# OCR   \n  \n\u3000Optical character recognition or optical character reader (OCR) is the electronic or mechanical conversion of images of typed, handwritten or printed text into machine-encoded text, whether from a scanned document, a photo of a document, a scene-photo (for example the text on signs and billboards in a landscape photo) or from subtitle text superimposed on an image (for example: from a television broadcast)\nfrom https:\/\/en.wikipedia.org\/\n"}}