{"cell_type":{"9835be3b":"code","b0237346":"code","b9da3544":"code","ab8f6825":"code","13a7c3fa":"code","d2cf42d8":"code","5269a4ea":"code","d70d409d":"markdown","252eab84":"markdown","7b0f6298":"markdown","5166cd5b":"markdown","cb27bc13":"markdown","c4ff3cfa":"markdown","7c59c517":"markdown"},"source":{"9835be3b":"import json\n\nprint(\"NOT THE MODEL FILENAME ITSELF, ONLY THE NAME YOU HAD GIVEN IT WHEN IMPORTING AS DATA INTO KAGGLE\")\ndataset_model_name = input(\"What is the name of the name you had assigned your TACOTRON2 MODEL within your KAGGLE ACCOUNT?: \")\nmodel_name = input(\"What is the name of your Tacotron 2 model?: \")\ndataset_name = input(\"What is the name of your dataset?: \")\ntranscription_name = input(\"What is the name of your transcription file? (Include file extension, e.g '.txt'): \")\nCHARACTERNAME = input(\"What is the name of your character? (No spaces, use only '-' or '_' or '.'): \")\nBATCH_SIZE_INP = -1\nwhile BATCH_SIZE_INP <= -1:\n    BATCH_SIZE_INP = int(input(\"What batch size would you like to use (recommended: 16): \"))\n\nwhile \" \" in CHARACTERNAME:\n    CHARACTERNAME = input(\"What is the name of your character? (No spaces, use only '-' or '_' or '.'): \")\n\ntacotron_model = f\"\/kaggle\/input\/{dataset_model_name}\/{model_name}\"\ntacotron_dataset = f\"\/kaggle\/input\/{dataset_name}\/wavs\"\ntrain_filelist = f\"\/kaggle\/input\/{dataset_name}\/{transcription_name}\"\nval_filelist = f\"\/kaggle\/input\/{dataset_name}\/{transcription_name}\"\noutput_dir = f\"\/kaggle\/working\/hifimodels\/{CHARACTERNAME}\"\nprint(\"Settings saved\")","b0237346":"print(\"Downloading and Intalling Tacotron 2 and HiFi-GAN...\")\n!pip install tensorflow==1.15.2\nimport os\n!git clone -q https:\/\/github.com\/SortAnon\/tacotron2.git\nos.chdir('\/kaggle\/working\/tacotron2')\n!pip install inflect\n!git submodule init\n!git submodule update\n!apt-get install pv\n!apt-get install jq\n!pip install gdown\nos.chdir('\/kaggle\/working')\n!git clone -q https:\/\/github.com\/SortAnon\/hifi-gan.git\n!pip install -q unidecode tensorboardX","b9da3544":"import json\n\nos.chdir(\"\/kaggle\/working\/hifi-gan\")\n\nwith open('config_v1b.json') as f:\n  json_config = json.load(f)\n  json_config[\"batch_size\"] = BATCH_SIZE_INP\n\nwith open('config_v1b.json', 'w') as JSON_FILE:\n  json.dump(json_config, JSON_FILE)","ab8f6825":"import os\nimport shutil\nos.chdir('\/kaggle\/working\/tacotron2')\nif os.path.exists(\"\/kaggle\/working\/tacotron2\/wavs\"):\n    shutil.rmtree(\"\/kaggle\/working\/tacotron2\/wavs\")\nos.mkdir(\"wavs\")\nos.chdir(\"wavs\")\n    \nos.system(f'cp -a ..\/..\/..\/input\/{dataset_name}\/wavs ..\/')\n    \nif os.path.exists(\"\/kaggle\/working\/tacotron2\/wavs\/wavs\"):\n    shutil.move(\"\/kaggle\/working\/tacotron2\/wavs\/wavs\", \"\/kaggle\/working\/tacotron2\/tempwavs\")\n    shutil.rmtree(\"\/kaggle\/working\/tacotron2\/wavs\")\n    shutil.move(\"\/kaggle\/working\/tacotron2\/tempwavs\", \"\/kaggle\/working\/tacotron2\/wavs\")\n\nos.chdir('\/kaggle\/working\/tacotron2')\nshutil.copyfile(tacotron_model, \"\/kaggle\/working\/tacotron2\/tacomodel\")\nseen_files = []\nwith open(train_filelist) as f:\n    taco_filelist = f.readlines()\nwith open(val_filelist) as f:\n    taco_filelist.extend(f.readlines())\nwith open(\"\/kaggle\/working\/tacotron2\/filelists\/ljs_audio_text_train_filelist.txt\", \"w\") as f:\n    for x in taco_filelist:\n        if x.split(\"|\")[0] not in seen_files:\n            seen_files.append(x.split(\"|\")[0])\n            f.write(x)\nif os.path.exists(\"\/kaggle\/working\/tacotron2\/GTAOutput\"):\n    shutil.rmtree(\"\/kaggle\/working\/tacotron2\/GTAOutput\")\nos.mkdir(\"GTAOutput\")\n!python GTA.py -c tacomodel -o GTAOutput","13a7c3fa":"CONTINUEQ = input(\"Are you continuing to train your model? [Y\/N]: \").upper()\nwhile CONTINUEQ not in (\"Y\",\"N\"):\n    CONTINUEQ = input(\"Please only enter Y or N\\nAre you continuing to train your model? [Y\/N]: \")\n\nif CONTINUEQ == \"Y\":\n    os.makedirs(f'..\/hifimodels\/{CHARACTERNAME}')\n    print(\"NOT THE MODEL FILENAME ITSELF, ONLY THE NAME YOU HAD GIVEN IT WHEN IMPORTING AS DATA INTO KAGGLE\")\n    MODELDATA_FILENAME = input(\"What is the name of the name you had assigned your HiFi-GAN model folder within your KAGGLE ACCOUNT?: \")\n    os.system(f'cp -a ..\/..\/input\/{MODELDATA_FILENAME}\/{CHARACTERNAME} ..\/hifimodels\/')\nelse:\n    print(\"Ok\")","d2cf42d8":"checkpoint_interval = int(input(\"Please input the checkpoint interval for your model to be saved at (Default: 250): \"))\nif checkpoint_interval == None:\n    checkpoint_interval = 250\n\nd = 'https:\/\/drive.google.com\/uc?id='\n\nos.chdir(\"\/kaggle\/working\/hifi-gan\")\nif os.path.exists(\"\/kaggle\/working\/hifi-gan\/ft_dataset\"):\n    shutil.rmtree(\"\/kaggle\/working\/hifi-gan\/ft_dataset\")\nshutil.copytree(\"\/kaggle\/working\/tacotron2\/GTAOutput\/mels\/\", \"\/kaggle\/working\/hifi-gan\/ft_dataset\/wavs\/\")\nif os.path.exists(\"\/kaggle\/working\/hifi-gan\/wavs\"):\n    shutil.rmtree(\"\/kaggle\/working\/hifi-gan\/wavs\")\nshutil.copytree(\"\/kaggle\/working\/tacotron2\/wavs\/\", \"\/kaggle\/working\/hifi-gan\/wavs\/\")\nshutil.copyfile(train_filelist, \"\/kaggle\/working\/hifi-gan\/training.txt\")\nshutil.copyfile(val_filelist, \"\/kaggle\/working\/hifi-gan\/validation.txt\")\n\nif not os.path.exists(output_dir):\n    os.makedirs(output_dir)\nif not os.path.exists(os.path.join(output_dir, \"do_00000000\")):\n    print(\"Downloading universal model...\")\n    os.system(f\"gdown {d}1O63eHZR9t1haCdRHQcEgMfMNxiOciSru -O {os.path.join(output_dir, 'do_00000000')}\")\n    os.system(f\"gdown {d}1qpgI41wNXFcH-iKq1Y42JlBC9j0je8PW -O {os.path.join(output_dir, 'g_00000000')}\")\n    start_from_universal = \"--warm_start True \"\nelse:\n    start_from_universal = \"\"\n\n!python train.py --fine_tuning True --config config_v1b.json \\\n{start_from_universal}\\\n--checkpoint_interval {checkpoint_interval} --checkpoint_path \"{output_dir}\" \\\n--input_training_file \"\/kaggle\/working\/hifi-gan\/training.txt\" \\\n--input_validation_file \"\/kaggle\/working\/hifi-gan\/validation.txt\" \\\n--input_wavs_dir \"\" --input_mels_dir \"ft_dataset\"","5269a4ea":"!zip -r ..\/HiFi-GAN_Model.zip ..\/hifimodels\/","d70d409d":"---\n# 4 Train HiFI-GAN for 5000+ steps (recommended) but if your tacotron 2 model sounds a little too rough you should train \nStop the cell to finish the training","252eab84":"---\n# 3 Assign batch size and generate ground truth-aligned spectrograms. This will help HiFi-GAN learn what your Tacotron model sounds like","7b0f6298":"# 1 Apply Settings via user input","5166cd5b":"---\n# **(CONTINUING TO TRAIN?)** 3.5 Transfer Model into the working directory","cb27bc13":"\n# **HiFi-GAN Fine Tuning (Kaggle Notebook)**\n---\n<a href=\"https:\/\/github.com\/jik876\/hifi-gan\"> HiFi-GAN <\/a> | **Created by ColdFir3#9543 (Michael)**\n\nThis notebook will require: **A tacotron 2 trained model(22050hz), the dataset (same dataset and transcription file used to make the model)**\n\nThe dataset should look like this: \n\n```\nKaggle Dataset\/\n          \u251c\u2500\u2500wavs\/\n          \u2502    \u251c\u2500\u25001.wav\n          \u2502    \u251c\u2500\u25002.wav\n          \u2502    \u251c\u2500\u25003.wav\n          \u2502    \u2514\u2500\u2500etc\n          \u2514\u2500\u2500transcription.txt\n```\n\n**You can train a tacotron 2 model <a href=\"https:\/\/www.kaggle.com\/coldfir4\/tacotron-2-training-kaggle-notebook\"> HERE <\/a>**\n\n**MAKE SURE 'GPU' HAS BEEN SELECTED AS THE ACCELERATOR IN THE NOTEBOOK SETTINGS**\n\n*UPDATED 15\/10\/21 VERSION 3: Added continuation for training the HiFi-GAN model*\n\n*UPDATED 22\/10\/21 VERSION 4: Added the ability to change batch size IF NEEDED*\n\n*UPDATED 22\/10\/21 VERSION 5: Fixed bugs*\n\n*UPDATED 23\/10\/21 VERSION 6: Fixed bugs*\n\n---\n# TRAINING INSTRUCTIONS\n* **Make sure to make your own version of this notebook for each new model**\n* **Import your dataset and your tacotron 2 model (22050hz) in the top right corner of the screen**\n* **RUN ALL**\n* **Fill in required inputs**\n* **Follow though all steps**\n---\n# CONTINUING TO TRAIN?\n* If returning back to continue training your model **MAKE SURE TO RUN ALL AND ENTER REQUIRED DATA**\n\n* Import your Model as a \"dataset\" **SEPERATELY** from the other datasets previously added\n\n* The \"dataset\" should contain the name of your character with all files within them\n\n* **DON'T MAKE ANY OF THE SETTINGS DIFFERENT FROM YOUR PREVIOUS TRAINING**\n\n* Recommended to name your \"input\" for your AI Model to be the same name as the model itself **(WILL SAVE LOTS OF TROUBLE AT STEP 3.5)**\n\n* ***(VERY IMPORTANT)*** Once your model has been trained **DO NOT FORGET TO SAVE VERSION USING 'QUICK SAVE' AS THE OPTION AND GO TO 'ADVANCED' AND CHECK 'ALWAYS SAVE OUTPUT'** so you do NOT LOSE progress\n---","c4ff3cfa":"---\n# 2 Download HiFi-GAN and Tacotron 2","7c59c517":"---\n# 5 Zip up output folder and download (The ```g_00000000``` file is the file you'd need for synthesising)\n\nRun the code cell below to zip up your files then **ONLY** click ```Download here``` once all files have been successfully zipped up\n\n<a href=\"HiFi-GAN_Model.zip\/\"> Download here <\/a>"}}