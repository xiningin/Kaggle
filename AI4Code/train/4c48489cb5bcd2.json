{"cell_type":{"3fbbac54":"code","53d4c59a":"code","8cd53643":"code","8ef73460":"code","597a366f":"code","fc10fd94":"code","f7c33746":"code","efccc412":"code","92abd4e4":"code","952b3ce4":"code","4f330643":"code","99cfe5a3":"code","1e7c5217":"markdown","8321d7bc":"markdown","69d558f4":"markdown","54998fad":"markdown","e3a98c4e":"markdown","05c84594":"markdown","1719074a":"markdown"},"source":{"3fbbac54":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","53d4c59a":"df=pd.read_csv('..\/input\/real-estate-price-prediction\/Real estate.csv')","8cd53643":"df.head()","8ef73460":"df.info()","597a366f":"df.columns","fc10fd94":"sns.pairplot(df)","f7c33746":"X=df.drop('Y house price of unit area',axis=1)\ny=df['Y house price of unit area']","efccc412":"from sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics\ntrain_RSME_list=[]\ntest_RSME_list=[]\nfor d in range (1,10):\n    \n    polynomial_converter= PolynomialFeatures(degree=d, include_bias=False)\n    poly_features= polynomial_converter.fit_transform(X)\n    X_train, X_test, y_train, y_test = train_test_split(poly_features, y, test_size=0.3, random_state=101)\n    polymodel=LinearRegression()\n    polymodel.fit(X_train, y_train)\n\n    y_train_pred=polymodel.predict(X_train)\n    y_test_pred=polymodel.predict(X_test)\n    \n    train_RMSE=np.sqrt(metrics.mean_squared_error(y_train, y_train_pred))\n    \n    test_RMSE=np.sqrt(metrics.mean_squared_error(y_test, y_test_pred))\n    \n\n    train_RSME_list.append(train_RMSE)\n    test_RSME_list.append(test_RMSE)\n    \n","92abd4e4":"train_RSME_list","952b3ce4":"test_RSME_list","4f330643":"plt.plot(range(1,5), train_RSME_list[:4],label='Train RMSE',color='b')\nplt.plot(range(1,5), test_RSME_list[:4],label='Test RMSE',color='r')\n\nplt.xlabel('Polynomial Degree')\nplt.ylabel('RMSE')\nplt.legend()","99cfe5a3":"Final_polynomial_converter= PolynomialFeatures(degree=2, include_bias=False)\n\nFinal_poly_features= Final_polynomial_converter.fit_transform(X)\n\nX_train, X_test, y_train, y_test = train_test_split(Final_poly_features, y, test_size=0.3, random_state=101)\n\n\nFinal_PolyModel=LinearRegression()\nFinal_PolyModel.fit(X_train, y_train)","1e7c5217":"**Step6: Adjusting Model Parameters**","8321d7bc":"**Step4: EDA**","69d558f4":"**Step2: Import the Dataset**","54998fad":"**Step3: Data Overview**","e3a98c4e":"> **Step1: Import all necessary Libraries**","05c84594":"**Step5: Determine the Features and Target Variable**","1719074a":"**step 7: Finalizing The Model**"}}