{"cell_type":{"c86e4f55":"code","da520ba6":"code","2d7fbc3d":"code","30336e12":"code","696019bd":"code","74523c88":"code","3e3f3e4b":"code","dd0590f9":"code","97e1a19c":"code","f711e90a":"markdown","81f83037":"markdown","aa24c7d6":"markdown","66ed6fbe":"markdown"},"source":{"c86e4f55":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","da520ba6":"pip install openpyxl","2d7fbc3d":"df = pd.read_excel(\"\/kaggle\/input\/tashkent-real-estate-2019\/uybor.xlsx\")\ndf.head()","30336e12":"df.describe()","696019bd":"df.info()","74523c88":"import seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.datasets import make_blobs\nfrom sklearn.covariance import EllipticEnvelope\nsns.set_style(\"darkgrid\")\n\nelpenv = EllipticEnvelope(contamination=0.025, random_state=43)","3e3f3e4b":"[df.index.values, df.price.values]","dd0590f9":"# X = df['price'].array.reshape(-1, 1)\nX = df[['size','price']].to_numpy()\n\n\n# Returns 1 of inliers, -1 for outliers\npred = elpenv.fit_predict(X)\n\n# Extract outliers\noutlier_index = np.where(pred==-1)\noutlier_values = X[outlier_index]\n\n# Number of outliers\nprint(f\"Number of outliers: {len(outlier_index[0])}\")\nprint(f\"Ratio of outliers\/dataset: {len(outlier_index[0])\/len(df)} or {len(outlier_index[0])\/len(df)*100}%\")","97e1a19c":"# Plot the data\nsns.scatterplot(x=X[:,0], y=X[:,1])\nsns.scatterplot(x=outlier_values[:,0], \n                y=outlier_values[:,1], color='r')\nplt.title(\"Elliptic Envelope Outlier Detection\", fontsize=15, pad=15)\nplt.savefig(\"Elliptic Envelope Detection.png\", dpi=80)","f711e90a":"Detect outliers based on `size` and `price`","81f83037":"Install `openpyxl` to read excel files \/ `openpyxl` pakertini o'rnatamiz","aa24c7d6":"## Read the dataset \/ Datasetni o'qiymiz","66ed6fbe":"## Outlier detection \/ Noodatiy qiymatlarni topish\nWe will use the Elliptic Envelope Algorithm method decribed in [\"4 Machine learning techniques for outlier detection in Python\"](https:\/\/towardsdatascience.com\/4-machine-learning-techniques-for-outlier-detection-in-python-21e9cfacb81d)"}}