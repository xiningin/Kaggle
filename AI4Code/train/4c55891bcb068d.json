{"cell_type":{"5a0dda1e":"code","93d02ad2":"code","4de19b20":"code","c7568e12":"code","7fd0b558":"code","93880a20":"code","6de337f0":"code","9db401a8":"code","230dff2b":"code","9ef9944d":"code","4431c7b8":"markdown","f54969f6":"markdown","8ed8c096":"markdown","e7fe1a5b":"markdown","aff742b1":"markdown"},"source":{"5a0dda1e":"filename_train = '..\/input\/digit-recognizer\/train.csv'\nfilename_test  = '..\/input\/digit-recognizer\/test.csv'","93d02ad2":"import pandas as pd\n\ndf_train = pd.read_csv(filename_train)\ndf_test  = pd.read_csv(filename_test )","4de19b20":"import tensorflow as tf\n\n# training data\nX_train = df_train.values[:, 1:].reshape((-1, 28, 28, 1)) \/ 255.\ny_train = tf.keras.utils.to_categorical(df_train.values[:, 0], 10)\n# test data\nX_test = df_test.values.reshape((-1, 28, 28, 1)) \/ 255.","c7568e12":"input = tf.keras.layers.Input(shape=(28, 28, 1))\n\nx = input\nx = tf.keras.layers.Conv2D(32, 3, padding='same', activation='relu')(x)\nx = tf.keras.layers.MaxPool2D()(x)\nx = tf.keras.layers.Conv2D(64, 3, padding='same', activation='relu')(x)\nx = tf.keras.layers.MaxPool2D()(x)\nx = tf.keras.layers.Conv2D(64, 3, padding='same', activation='relu')(x)\nx = tf.keras.layers.MaxPool2D()(x)\nx = tf.keras.layers.Dropout(0.2)(x)\n\nx = tf.keras.layers.Flatten()(x)\nx = tf.keras.layers.Dense(64, activation='relu')(x)\n\noutput = tf.keras.layers.Dense(10, activation='softmax')(x)\n\nmodel = tf.keras.models.Model(input, output)\nmodel.summary()","7fd0b558":"model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['acc'])","93880a20":"image_data_generator = tf.keras.preprocessing.image.ImageDataGenerator(\n    rotation_range=30,\n    width_shift_range=0.2,\n    height_shift_range=0.2,\n    shear_range=0.2,\n    zoom_range=0.2,\n    validation_split=0.1)\nimage_data_generator.fit(X_train)","6de337f0":"epochs = 100\nbatch_size = 32\n\n# \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u5b9a\u7fa9\ncallbacks = [\n    tf.keras.callbacks.EarlyStopping(patience=10, restore_best_weights=True)\n]\n\ntrain_generator = image_data_generator.flow(X_train, y_train, batch_size=batch_size, subset='training')\nvalid_generator = image_data_generator.flow(X_train, y_train, batch_size=batch_size, subset='validation')\n\nhistory = model.fit(train_generator,\n                    steps_per_epoch=train_generator.n \/\/ batch_size, \n                    validation_data=valid_generator,\n                    validation_steps=valid_generator.n \/\/ batch_size,\n                    epochs=epochs,\n                    callbacks=callbacks)","9db401a8":"y_pred = model.predict(X_test).argmax(axis=-1)","230dff2b":"import numpy as np\n\ny_test = pd.DataFrame([np.arange(1, len(y_pred) + 1), y_pred], index=['ImageId', 'Label']).T\ny_test","9ef9944d":"filename_output = '.\/submission.csv'\ny_test.to_csv(filename_output, index=False)","4431c7b8":"# Modeling","f54969f6":"# Reshape data","8ed8c096":"# Learning","e7fe1a5b":"# Prediction","aff742b1":"# Load files"}}