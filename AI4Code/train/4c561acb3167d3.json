{"cell_type":{"55e3ceaf":"code","6d4f8df4":"code","f6424a79":"code","c835cc14":"code","15c62686":"code","441c24e1":"code","68922178":"code","9c16a197":"code","f98d9c1c":"code","d593a0e7":"code","7123f2cd":"code","c521ec9e":"code","c8917dd1":"code","5a4d2811":"code","1095f9f1":"code","29fd8ec3":"markdown","7229f8bd":"markdown","520e0ff5":"markdown","a0a0ecd2":"markdown","4e3899fa":"markdown","88dc0d17":"markdown","4801a417":"markdown","5f7b17a5":"markdown","4e063e4f":"markdown","565aa589":"markdown","2ca09a0b":"markdown","eaa2d7d9":"markdown"},"source":{"55e3ceaf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import preprocessing \nlabel_encoder = preprocessing.LabelEncoder() \n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6d4f8df4":"train =pd.read_csv(\"\/kaggle\/input\/practice-house-prices\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/practice-house-prices\/test.csv\")\ndf_samp=pd.read_csv(r'\/kaggle\/input\/practice-house-prices\/sample_submission.csv')\n","f6424a79":"li_col=train.columns.to_list()\nli_cat=[]\n# print(li_col)\nfor i in range(len(li_col)):\n    if train[li_col[i]].dtypes=='O':\n        li_cat.append(li_col[i])\n        \nprint(li_cat)        \n        ","c835cc14":"for i in range(len(li_cat)):\n    train[li_cat[i]]=train[li_cat[i]].astype(str)\n    train[li_cat[i]]=label_encoder.fit_transform(train[li_cat[i]]) ","15c62686":"train = train.fillna(train.mean())\n","441c24e1":"y=train[['SalePrice']]\nX=train\nX=X.drop(columns=['SalePrice'])","68922178":"reg = LinearRegression().fit(X, y)","9c16a197":"reg.score(X, y)","f98d9c1c":"import statsmodels.api as sm\nmodel0 = sm.OLS(y, X).fit()\nmodel0.summary()","d593a0e7":"for i in range(len(li_cat)):\n    test[li_cat[i]]=test[li_cat[i]].astype(str)\n    test[li_cat[i]]=label_encoder.fit_transform(test[li_cat[i]]) ","7123f2cd":"test = test.fillna(test.mean())\n","c521ec9e":"output=reg.predict(test)\noutput","c8917dd1":"df=pd.DataFrame(output,columns=['SalePrice'])\ndf","5a4d2811":"df_final=df_samp[['Id']]\ndf_final=pd.concat([df_final,df],axis=1)\ndf_final","1095f9f1":"# df_final.to_csv('simp_reg.csv',index=False)","29fd8ec3":"# Data Preprocessing","7229f8bd":"## Handling Categorical Value: One Hot Encoding","520e0ff5":"### Competetion: https:\/\/www.kaggle.com\/c\/house-prices-advanced-regression-techniques","a0a0ecd2":"# Modelling","4e3899fa":"# Prediction","88dc0d17":"## Source: https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.linear_model.LinearRegression.html?highlight=linear%20regression#sklearn.linear_model.LinearRegression","4801a417":"### X,y - Dependent & Independent variable Split","5f7b17a5":"### Preparing the test data for One Hot Encoding and Missing Value","4e063e4f":"## Filling the Missing values by Mean method","565aa589":"### Saving the output","2ca09a0b":"### Accuracy Score","eaa2d7d9":"### Final Output Preparation for the Competetion"}}