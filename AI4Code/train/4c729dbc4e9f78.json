{"cell_type":{"27270452":"code","8dd6282c":"code","4dc1979a":"code","e45e3263":"code","a5729179":"code","4f3fe7c5":"code","c63d97c3":"code","ea87c888":"code","646c7348":"code","6dfb2803":"code","7f3521d3":"code","195fd6f3":"code","0f7eeda6":"code","7edb5097":"code","c9854036":"code","73486d39":"code","0ca5b86e":"code","0d969ce9":"code","15916e67":"code","b8effd29":"code","92a32220":"code","2540feba":"code","a6da5da2":"code","92fb6dce":"code","f7417e81":"code","a70139f0":"code","eff8a052":"code","6ce4b331":"code","0e4f8959":"code","c0e19012":"code","388444c6":"code","63006d2d":"code","78e14402":"code","25ebb599":"code","59375f83":"code","219ad969":"code","e6a545d0":"code","3cc3aa18":"code","056504b1":"code","e3813230":"code","81805c06":"code","105f0310":"code","9df1f84d":"code","dc2da366":"code","fc51204d":"code","bd89b154":"code","dbc56fba":"code","040aa979":"code","ac772720":"code","1f202d73":"code","97024a17":"code","127b2922":"code","a92c4a5f":"code","086b29e9":"code","62c3f7d5":"code","3ef54ae6":"code","21fcd988":"code","0cde1e0a":"code","35b94707":"code","0ce224b5":"code","86ef990e":"code","f916fef1":"code","26b10209":"code","0daa688a":"code","0d6a9481":"code","1bacb70a":"code","3f7c7461":"code","b392b336":"code","28513d7c":"code","f65ebf07":"code","3ab668de":"code","81653d5a":"code","356043df":"code","35698977":"code","daaa28c4":"code","b32d4a5b":"code","047b59ff":"code","a84c74ee":"code","c6e169ae":"code","335af33f":"code","8008b9db":"code","fe2bfeb9":"code","cf5b3206":"markdown","12ddf853":"markdown","1a9aadbd":"markdown","144a7507":"markdown","da4b9b6c":"markdown","42cc1baf":"markdown","78f81612":"markdown","9976d39b":"markdown","027649e7":"markdown","3ac53e55":"markdown","d56566cb":"markdown"},"source":{"27270452":"2","8dd6282c":"type(2) # You can look type of value with type() function","4dc1979a":"assigning= 10 # You can asssign a value to a variable ","e45e3263":"assigning","a5729179":"type(assigning)","4f3fe7c5":"2.3","c63d97c3":"type(2.3)","ea87c888":"fl=4.5","646c7348":"type(fl)","6dfb2803":"fl+3","7f3521d3":"fl+fl","195fd6f3":"type(fl+fl)","0f7eeda6":"int(fl+fl)# You can convert it to integer by using int() function","7edb5097":"type(int(fl+fl))","c9854036":"\"Hello World\"","73486d39":"type(\"Hello World\") #str means string","0ca5b86e":"string= \"Berkay's Code\"\nstring","0d969ce9":"type(string)","15916e67":"\"Berkay's\"+\" World\"","b8effd29":"a=\"Berkay's\"\nb= \" World\"","92a32220":"a+b","2540feba":"type(a+b)","a6da5da2":"\"a\"*5","92fb6dce":"a=\"2\"\nb=\"3\"\na+b","f7417e81":"value=\"Introduction to Python\"","a70139f0":"value[:5]","eff8a052":"value[2:9]","6ce4b331":"value[3:12:3]","0e4f8959":"value[-2:-5]","c0e19012":"value[:]","388444c6":"value[::-1] # We can reverse a string with -1","63006d2d":"len(value) # We can look lenght of a string with len() function","78e14402":"value.upper() # We can get upper type of a string with upper() function","25ebb599":"value.lower() # We can get lower type of a string with upper() function","59375f83":"value_2= \"berkay's code\"","219ad969":"value_2.isupper() # We can whether a variable is all upper with upper() function","e6a545d0":"value_2.islower() # We can whether a variable is all lower with lower() function","3cc3aa18":"True","056504b1":"False","e3813230":"type(True)","81805c06":"True+False","105f0310":"int(True)","9df1f84d":"int(False)","dc2da366":"print(\"Hello World\") #We can print a value with print() function","fc51204d":"a=\"Hello World\"","bd89b154":"print(a)","dbc56fba":"print(a,a,sep=\" divide \") #print twive by using a seperator","040aa979":"len(\"Hello Malatya, What's happening there?\") # We can look lenght of a value with len() function","ac772720":"type(2) # You can look type of value with type() function","1f202d73":"a = \"Str\u0130ng SizE Converting\"","97024a17":"a.upper() # We can get upper type of a string with upper() function","127b2922":"a.lower() # We can get lower type of a string with lower() function","a92c4a5f":"a.replace(\"S\",\"C\") # We can replace a letter in a variable with replace() function - Change S with C","086b29e9":"a_replaced= a.replace(\"S\",\"C\") # We can assign the new variable\na_replaced","62c3f7d5":"b = \"   we will see strip method       \"","3ef54ae6":"b.strip() # Strip() crops the variables in front and end - this is blank example","21fcd988":"c = \"***We will see strip method************\"","0cde1e0a":"c.strip(\"*\") # Strip() crops the variables in front and end - this is variable example, you can change it inside function","35b94707":"d = \"make a title\"","0ce224b5":"d.capitalize() # capitalize() makes the first letter bigger","86ef990e":"d.title() # title() makes the first letter of all words bigger","f916fef1":"string=\"Look at the tabel\"","26b10209":"dir(string) # dir() shows all applicable methods in a variable","0daa688a":"dir(int)","0d6a9481":"sub = \"How are you?\"","1bacb70a":"sub[0] # Indexes starts with 0","3f7c7461":"sub[4]","b392b336":"sub[4:7]","28513d7c":"sub[6:]","f65ebf07":"sub[:4]","3ab668de":"sub[-1] # Last value","81653d5a":"len(sub) # If we write it bigger then lenght, in will give IndexError","356043df":"num = 1000","35698977":"type(num)","daaa28c4":"float(num)","b32d4a5b":"type(float(num))","047b59ff":"integer=1000\nfloat_num = 5.4","a84c74ee":"integer+float_num","c6e169ae":"type(integer+float_num)","335af33f":"string= \"4\"","8008b9db":"string= int(string) #String to Integer","fe2bfeb9":"type(string)","cf5b3206":"## Main Data Types\n\n- Integer\n- Float\n- String\n- Boolean","12ddf853":"### Integers","1a9aadbd":"## Content\n\n- Main Data Types\n- Built-in Method-Functions\n- Exploring Available Methods\n- Substrings\n- Type Converting","144a7507":"## Substrings","da4b9b6c":"## Built-in Method-Functions\n\n- print()\n- len()\n- type()\n- upper()\n- lower()\n- replace()\n- strip()\n- capitalize()\n- title()","42cc1baf":"## Type Converting","78f81612":"### Float","9976d39b":"**Created by Berkay Alan**\n\n**Python Introduction**\n\n**14 of November, 2020**\n\n**For more tutorials: https:\/\/github.com\/berkayalan**","027649e7":"### String","3ac53e55":"## Exploring Available Methods","d56566cb":"### Boolean"}}