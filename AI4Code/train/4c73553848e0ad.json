{"cell_type":{"cc17f183":"code","6d7a588d":"code","e7c9140b":"code","557f7710":"code","6e00eaf0":"code","c51cd44e":"code","6949d1a6":"code","336323b0":"code","2e6e0217":"markdown"},"source":{"cc17f183":"# importing required libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nimport matplotlib.animation as animation\nimport datetime\nfrom datetime import timedelta\nfrom IPython.display import HTML","6d7a588d":"# import raw data\ndf = pd.read_csv(\"..\/input\/viz-covid\/owid-covid-data.csv\")\ndf.head()","e7c9140b":"dff = df[-df['continent'].isnull()]\n\ndff.loc[:,['total_cases']].fillna(0.0).astype(int)\ndff['total_cases'] = dff.loc[:,['total_cases']].fillna(0.0).astype(int)\n\ndff['date'] = pd.to_datetime(dff['date'], format='%Y-%m-%d')","557f7710":"current_date = \"2021-02-01\"\ncurrent_date = pd.to_datetime(current_date, format='%Y-%m-%d')\n\ndfff = dff[dff['date'].eq(current_date)].sort_values(by=\"total_cases\",ascending=False).head(10)\ndfff","6e00eaf0":"fig, ax = plt.subplots(figsize=(15,8))\nax.barh(dfff['location'], dfff['total_cases'])\ncolors = dict(zip(\n    ['Asia', 'Europe', 'Africa', 'North America', 'South America',\n       'Oceania'],\n    ['#adb0ff', '#ffb3ff', '#90d595', '#e48381', '#aafbff', '#f7bb5f']\n))\ngroup_lk = df.set_index('location')['continent'].to_dict()","c51cd44e":"fig, ax = plt.subplots(figsize=(15,8))\ndfff = dfff[::-1] # flip values from top to bottom\n# color\nax.barh(dfff['location'], \n        dfff['total_cases'], \n        color=[colors[group_lk[x]] for x in dfff['location']])\n# iterate over the values to plot labels and values (United State, North America, XXXXX)\nfor i, (value, name) in enumerate(zip(dfff['total_cases'], dfff['location'])):\n    ax.text(value, i, name, ha='right') # United State\n    #ax.text(value, i-0.25, group_lk[name], ha='right') # North America\n    ax.text(value, i, value, ha='left') # XXXXXX\n# Add year right middle portion of canvas\nax.text(1, 0.4, current_date.date(), transform=ax.transAxes, size=46, ha='right')","6949d1a6":"fig, ax = plt.subplots(figsize=(15, 16))\n\ndef date_str_to_int(date):\n    return int(date[0:3])*100000+int(date[5:7])*100+int(date[8:])\n\ndef int_to_date(date):\n    date_str = str(date)\n    date_str_format = date_str[0:4]+\"-\"+date_str[4:6]+\"-\"+date_str[6:]\n    return pd.to_datetime(date_str_format, format='%Y-%m-%d')\n\ndef draw_barchart(days_diff, begin):\n    day = int_to_date(begin) + timedelta(days = days_diff)\n    dfff = dff[dff['date'].eq(day)].sort_values(by=\"total_cases\",ascending=False).head(10)\n    ax.clear()\n    group_lk = dfff.set_index('location')['continent'].to_dict()\n    dfff = dfff[::-1]\n    ax.barh(dfff['location'], \n            dfff['total_cases'], \n            color=[colors[group_lk[x]] for x in dfff['location']])\n    group_lk = df.set_index('location')['continent'].to_dict()\n    dx = dfff['total_cases'].max()\/200\n    for i, (value, name) in enumerate(zip(dfff['total_cases'], dfff['location'])):\n        ax.text(value, i, name, ha='right', va='center',size=18, weight=500) # United State\n        #ax.text(value, i-0.25, group_lk[name], ha='right') # North America\n        ax.text(value+dx*2, i, f'{value:,.0f}', ha='left', va='center',size=16) # XXXXXX\n    # Add year right middle portion of canvas\n    #ax.text(1, 0.4, day.date(), transform=ax.transAxes, size=46, ha='right')\n    \n    # polished styles\n    ax.text(1, 0.4, day.date(), transform=ax.transAxes, color='#777777', size=46, ha='right', weight=500) #day\n    ax.text(0, 1.06, 'Confirmed Cases', transform=ax.transAxes, size=12, color='#777777') #confirmed cases\n    ax.xaxis.set_major_formatter(ticker.StrMethodFormatter('{x:,.0f}'))\n    ax.xaxis.set_ticks_position('top')\n    ax.tick_params(axis='x', colors='#777777', labelsize=12)\n    ax.set_yticks([])\n    ax.margins(0, 0.02)\n    ax.grid(which='major', axis='x', linestyle='-')\n    ax.set_axisbelow(True)\n    ax.text(0, 1.12, 'Confirmed Covid-19 Cases Over Time',\n            transform=ax.transAxes, size=24, weight=600, ha='left')\n    ax.text(1, 0, 'by Ernest Liu', transform=ax.transAxes, ha='right',\n            color='#777777', bbox=dict(facecolor='white', alpha=0.8, edgecolor='white'))\n    plt.box(False)\n    \nstart_date = '2020-01-22'\nstart_date_pd = pd.to_datetime(start_date, format='%Y-%m-%d')\nend_date = '2021-02-01'\nend_date_pd = pd.to_datetime(end_date, format='%Y-%m-%d')\nstart_date_int = date_str_to_int(start_date)\nend_date_int = date_str_to_int(end_date)\n\ndays = (end_date_pd - start_date_pd).days + 1 #inclusive of beginning and end date\n\ndraw_barchart(days, start_date_int)","336323b0":"import matplotlib.animation as animation\nimport matplotlib\nfrom IPython.display import HTML\n\nmatplotlib.rcParams['animation.embed_limit'] = 2**128\n\nfig, ax = plt.subplots(figsize=(15, 16))\n\nstart_date = '2020-01-22'\nstart_date_pd = pd.to_datetime(start_date, format='%Y-%m-%d')\nend_date = '2021-02-01'\nend_date_pd = pd.to_datetime(end_date, format='%Y-%m-%d')\nstart_date_int = date_str_to_int(start_date)\n#end_date_int = date_str_to_int(end_date)\n\ndays = (end_date_pd - start_date_pd).days + 1 #inclusive of beginning and end date\n\nanimator = animation.FuncAnimation(fig, draw_barchart,\n                                   frames= days, fargs = (start_date_int,)) # as iI found out, FuncAnimation is not allowed to have a input other than integer, so I build two functions to get arouund of the limit\n\nHTML(animator.to_jshtml())","2e6e0217":"## Bar Chart Race with Matplotlib Library\nThis notebook creates a bar chart race with Matplotlib library. The idea of bar chart race is from [YouTube](https:\/\/www.youtube.com\/watch?v=-oiwrIAuTs8). It is a bar chart race of army size comparison by DataComparison. Then, I started to learn how to build a chart race using python. I mainly learn from a [Kaggle project](https:\/\/www.kaggle.com\/caniban\/bar-chart-race-with-matplotlib) created by Can Iban. As we are using two different datasets, I tried to take the pros in the code and use some of my knowledge for better visualization\n\nAs covid-19 is spreading worldwide, I am interested in doing a chart race on the confirmed cases about it. \n\nDATA: CSV file contains the data about covid from 2020-01-22 to 2021-02-01. This file is extracted from [Our World in Data](https:\/\/ourworldindata.org\/coronavirus-source-data).\n\nCOMMENTS: any contribution, comments, and discussion are welcome to make this better and more straightforward. As the data contain more than just confirmed cases, other visualization projects on the same dataset are currently under development."}}