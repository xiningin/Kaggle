{"cell_type":{"a8570e23":"code","bd1c7f10":"code","07a73178":"code","b1dd2ff3":"code","89c50887":"code","0711e9aa":"code","a3d7b13a":"code","c09eeabc":"code","3fe7d398":"code","25e7420b":"code","263cded8":"code","8591a9dc":"code","f0043c92":"code","a441d454":"code","22e1a7d3":"code","4d881bf1":"code","28c8d316":"code","5ffa8a7b":"code","676daa94":"code","cbe2dc57":"code","fa349a1b":"code","fc46be11":"code","a6b6b14e":"code","fc1b069d":"code","aafa2e03":"code","1baf3ae6":"code","0dee5c32":"code","ccf9f165":"code","0157b819":"code","04722219":"code","c251254d":"code","744f4202":"code","9a31327e":"code","c2ce3eef":"code","55876dde":"code","6a9babb5":"code","b05d2e2b":"code","f8d0533c":"code","b7cb5dee":"code","723d758d":"code","b69a9f9a":"code","135246b1":"code","ce0dfc1d":"code","a176654b":"code","64197ec9":"code","22ed83b9":"code","f9d62a87":"code","7493867a":"code","6161316e":"code","f384e9cb":"code","416caf88":"code","88ebc328":"code","5b169a57":"code","dfdadcbc":"code","47f4eea8":"code","050cc779":"code","c9ac4594":"code","6e20a674":"code","12d7a0a8":"code","fa6f5e01":"code","cfe9bb0b":"code","0fe9f62e":"code","6028459e":"code","68f5c058":"code","7cf1b9b6":"code","8db1beeb":"code","8171d969":"code","2374d797":"code","fdeb315a":"markdown","9ce248ed":"markdown","d2524add":"markdown","93e73e0a":"markdown","47466e19":"markdown","831c2780":"markdown","9b4d77af":"markdown","7d773dea":"markdown","be52d400":"markdown","1a57e856":"markdown","d0b2a057":"markdown","3931586c":"markdown","cd260852":"markdown","9d355720":"markdown","a7047615":"markdown","e536385f":"markdown","f11aa79e":"markdown","349a59e7":"markdown","2cfc041c":"markdown","b9893735":"markdown","c9d7258f":"markdown","3ebb5c9b":"markdown","85c8d1eb":"markdown","671e4f83":"markdown","e2abc0d4":"markdown","eac29615":"markdown","433cdc56":"markdown","ce6f427e":"markdown","aa8c4750":"markdown","fa94fd74":"markdown","382a72bc":"markdown","96ccef51":"markdown","9be0b8a4":"markdown","9b6ec75a":"markdown"},"source":{"a8570e23":"import sqlite3\nimport pandas as pd\nimport numpy as np \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline","bd1c7f10":"plt.rcParams['figure.figsize'] = (15,6)\nplt.style.use('seaborn-whitegrid')","07a73178":"con = sqlite3.connect('..\/input\/soccer\/database.sqlite')\ndf_country = pd.read_sql_query(\"SELECT * FROM Country\", con)\ndf_league = pd.read_sql_query(\"SELECT * FROM League\", con)\ndf_match = pd.read_sql_query(\"SELECT * FROM Match\", con)\ndf_player = pd.read_sql_query(\"SELECT * FROM Player\", con)\ndf_player_attr = pd.read_sql_query(\"SELECT * FROM Player_Attributes\", con)\ndf_team = pd.read_sql_query(\"SELECT * FROM Team\", con)\ndf_team_attr = pd.read_sql_query(\"SELECT * FROM Team_Attributes\", con)","b1dd2ff3":"df_country.head()","89c50887":"df_country.info()","0711e9aa":"df_country['name']","a3d7b13a":"df_league.head()","c09eeabc":"df_league.info()","3fe7d398":"df_league['name'].value_counts()","25e7420b":"df_league['country_id'].duplicated().sum()","263cded8":"df_match.head()","8591a9dc":"df_match.info()","f0043c92":"type(df_match['season'][0])","a441d454":"df_match.isnull().sum()","22e1a7d3":"def test(name, id):\n    name = name.split()[0]\n    return id, name \n\nleague_id_name = df_league[['id', 'name']].apply(lambda x: test(x['name'], x['id']), axis=1)\n\ndict(league_id_name.values)","4d881bf1":"df_match['league_name'] = df_match['league_id'].map(dict(league_id_name.values))","28c8d316":"df_match['league_name'].value_counts()","5ffa8a7b":"df_match['season'].value_counts()","676daa94":"df_match['away_team_goal'].value_counts()","cbe2dc57":"df_match.columns.values","fa349a1b":"df_match['home_player_1'].value_counts()","fc46be11":"df_player.head()","a6b6b14e":"df_player.info()","fc1b069d":"df_player['birthday'] = pd.to_datetime(df_player['birthday'])","aafa2e03":"df_player['birthday'].dt.year.value_counts()","1baf3ae6":"df_player['age'] = (2016 - df_player['birthday'].dt.year)","0dee5c32":"df_player['age'].value_counts()","ccf9f165":"df_player['age'].min(),df_player['age'].max(), ","0157b819":"df_player['age'].mean()","04722219":"bin_edges = [16, 23, 30, 35, 40, 49] # Fill in this list with five values you just found\nbin_names = ['17:23', '23:30', '30:35', '35:40', '40:49'] # Name each acidity level category\n\ndf_player['player_age_stage'] = pd.cut(df_player['age'], bin_edges, labels=bin_names, right=True)\n","c251254d":"df_player['player_age_stage'].value_counts()","744f4202":"df_player_attr.head()","9a31327e":"df_player_attr.info()","c2ce3eef":"df_player_attr['date'] = pd.to_datetime(df_player_attr['date'])","55876dde":"df_player_attr['season'] = df_player_attr['date'].dt.year","6a9babb5":"df_player_attr.head()","b05d2e2b":"player_name_id = dict(df_player[['player_api_id', 'player_name']].values)\ndf_player_attr['player_name'] = df_player_attr['player_api_id'].map(player_name_id)\n","f8d0533c":"df_team.head()","b7cb5dee":"df_team_attr.head(2)","723d758d":"df_team_attr.info()","b69a9f9a":"team_short_name = dict(df_team[['team_api_id', 'team_long_name']].values)","135246b1":"df_team_attr['team_long_name'] = df_team_attr['team_api_id'].map(team_short_name)","ce0dfc1d":"df_team_attr['team_long_name'].value_counts()","a176654b":"df_team_attr['season'] = pd.to_datetime(df_team_attr['date']).dt.year","64197ec9":"team_group = df_team_attr.groupby(['season', 'team_long_name'])","22ed83b9":"base_color = sns.color_palette()[0]\ncat_order = df_match['league_name'].value_counts().index\nsns.countplot(data=df_match, x='league_name', order=cat_order, color=base_color)\nplt.xlabel(\"League\")\nplt.ylabel(\"Count\")\nplt.title(\"Number of matches in Leagues\")\nplt.show()","f9d62a87":"base_color = sns.color_palette()[3]\ncat_order = df_match['season'].value_counts().index\nsns.countplot(data=df_match, x='season', order = cat_order, color=base_color)\nplt.xlabel(\"Season\")\nplt.ylabel(\"Count\")\nplt.title(\"Number of Matchs in Seasons \")\nplt.show()","7493867a":"df_match.head(2)","6161316e":"melted = pd.melt(frame=df_match,id_vars='league_name',\n                 value_vars=['away_team_goal', 'home_team_goal'])\nmelted","f384e9cb":"palette = sns.color_palette('Set1')\nsns.countplot(data=melted, x='value', hue='variable', palette=palette)\nplt.xlabel('Goals')\nplt.ylabel('Count')\nplt.title('Away Vs Home Team Goals')\nplt.legend(['Away Team Goal', 'Home Team Goal'])\nplt.yticks(np.arange(500, 10000, 1000))\nplt.show()","416caf88":"def estimator(x):\n    return np.rint(np.mean(x))\n","88ebc328":"palette = sns.color_palette('Set1')\nsns.pointplot(data=melted, y='value', x='league_name', hue='variable', palette=palette,\n             estimator=estimator, linestyles='')\n\nplt.xlabel('League Name')\nplt.ylabel('Avg Goal')\nplt.title('Average of Home vs Away team goals in leagues')\nplt.show()","5b169a57":"base_color = sns.color_palette()[0]\n\nsns.countplot(data=df_player, x='player_age_stage', color=base_color)\nplt.xlabel('Player age stage')\nplt.ylabel('Count')\nplt.title('Player age stage')\nplt.show()","dfdadcbc":"plt.figure(figsize=(20,8))\n\nplt.subplot(1,2,1)\nbin_edges = np.arange(df_player['age'].min(), df_player['age'].max()+5, 3)\n\nsns.histplot(df_player['age'], bins=bin_edges)\nplt.xticks(bin_edges)\n\nplt.subplot(1,2,2)\nsns.boxplot(data=df_player, y='age', color='#E74C3C')\n\nplt.suptitle('Age Distribution', size=15)\n\nplt.tight_layout()\nplt.show()\n\n","47f4eea8":"plt.figure(figsize=(20,8))\n\nplt.subplot(2,2,1)\nsns.histplot(data=df_player, x='weight', bins=25,kde=True);\n\nplt.subplot(2,2,3)\nsns.histplot(data=df_player, x='height', bins=15, kde=True);\n\nplt.subplot(2,2,2)\nsns.boxplot(data=df_player, x='weight', color='#E74C3C');\n\nplt.subplot(2,2,4)\nsns.boxplot(data=df_player, x='height', color='#E74C3C');\n\nplt.suptitle('Weight and Height Distribution', size=15)\nplt.tight_layout()\n\nplt.show()","050cc779":"plt.figure(figsize=(20,8))\n\nplt.subplot(1,2,1)\nsns.ecdfplot(df_player['weight'], color='#76448A');\n\nplt.subplot(1,2,2)\nsns.ecdfplot(df_player['height'], color='#76448A');\n\nplt.suptitle('Weight and Height Percentile', size=20)\nplt.tight_layout()\nplt.show()","c9ac4594":"g = sns.JointGrid(data = df_player, y = 'weight', x = 'height', ratio=15, space=.05, height=8,\n                 )\ng.plot_joint(sns.scatterplot, color='red')\ng.plot_marginals(sns.histplot, bins=25, color='blue')\nplt.title('Relation between Height and Weight');","6e20a674":"plt.figure(figsize=(20,8))\nplt.style.use('ggplot')\n\nplt.subplot(1,2,1)\nsns.regplot(data=df_player, y='weight', x='height')\n\nplt.subplot(1,2,2)\nsns.regplot(data=df_player, y='weight', x='height', x_estimator=np.mean)\n\nplt.tight_layout()\nplt.suptitle('Predict Weight according to Height', size=20)\nplt.show()","12d7a0a8":"group = df_player_attr.groupby(['season', 'player_name'])","fa6f5e01":"overall_rating = group['overall_rating'].mean()\nplt.figure(figsize=(20,10))\nplt.style.use('seaborn-pastel')\nseasons = sorted(df_player_attr['season'].unique())\ni = 1\nfor season in seasons:\n    plt.subplot(5,2,i)\n    x = overall_rating[(overall_rating.index.get_level_values(0) == season)].sort_values(ascending=False).iloc[:3]\n    sns.pointplot(x=x.index.get_level_values(1), y=x.values, linestyles='')\n    plt.xlabel('Player Name')\n    plt.ylabel('Avg Rating')\n    plt.title(f'Top Player in {season}')\n    i+=1\n    \n    \n# plt.tight_layout()\nplt.subplots_adjust(top = 0.99, bottom=0.01, hspace=1.5, wspace=0.3)\n","cfe9bb0b":"penalties = group['penalties'].mean()\nplt.figure(figsize=(20,10))\nplt.style.use('seaborn-pastel')\nseasons = sorted(df_player_attr['season'].unique())\ni = 1\nfor season in seasons:\n    plt.subplot(5,2,i)\n    x = penalties[(penalties.index.get_level_values(0) == season)].sort_values(ascending=False).iloc[:3]\n    sns.pointplot(x=x.index.get_level_values(1), y=x.values, linestyles='')\n    plt.xlabel('Player Name')\n    plt.ylabel('Avg Penalties')\n    plt.title(f'Top Player in {season}')\n    i+=1\n    \n    \n# plt.tight_layout()\nplt.subplots_adjust(top = 0.99, bottom=0.01, hspace=1.5, wspace=0.3)\n","0fe9f62e":"finishing = group['finishing'].mean()\nplt.figure(figsize=(20,10))\nplt.style.use('seaborn-pastel')\nseasons = sorted(df_player_attr['season'].unique())\ni = 1\nfor season in seasons:\n    plt.subplot(5,2,i)\n    x = finishing[(finishing.index.get_level_values(0) == season)].sort_values(ascending=False).iloc[:3]\n    sns.pointplot(x=x.index.get_level_values(1), y=x.values, linestyles='')\n    plt.xlabel('Player Name')\n    plt.ylabel('Avg finishing')\n    plt.title(f'Top Player in {season}')\n    i+=1\n    \n    \n# plt.tight_layout()\nplt.subplots_adjust(top = 0.99, bottom=0.01, hspace=1.5, wspace=0.3)\n","6028459e":"shot_power = group['shot_power'].mean()\nplt.figure(figsize=(20,10))\nplt.style.use('seaborn-pastel')\nseasons = sorted(df_player_attr['season'].unique())\ni = 1\nfor season in seasons:\n    plt.subplot(5,2,i)\n    x = shot_power[(shot_power.index.get_level_values(0) == season)].sort_values(ascending=False).iloc[:3]\n    sns.pointplot(x=x.index.get_level_values(1), y=x.values, linestyles='')\n    plt.xlabel('Player Name')\n    plt.ylabel('Avg shot_power')\n    plt.title(f'Top Player in {season}')\n    i+=1\n    \n    \n# plt.tight_layout()\nplt.subplots_adjust(top = 0.99, bottom=0.01, hspace=1.5, wspace=0.3)","68f5c058":"jumping = group['jumping'].mean()\nplt.figure(figsize=(20,10))\nplt.style.use('seaborn-pastel')\nseasons = sorted(df_player_attr['season'].unique())\ni = 1\nfor season in seasons:\n    plt.subplot(5,2,i)\n    x = jumping[(jumping.index.get_level_values(0) == season)].sort_values(ascending=False).iloc[:3]\n    sns.pointplot(x=x.index.get_level_values(1), y=x.values, linestyles='')\n    plt.xlabel('Player Name')\n    plt.ylabel('Avg jumping')\n    plt.title(f'Top Player in {season}')\n    i+=1\n    \n    \n# plt.tight_layout()\nplt.subplots_adjust(top = 0.99, bottom=0.01, hspace=1.5, wspace=0.3)","7cf1b9b6":"ball_control = group['ball_control'].mean()\nplt.figure(figsize=(20,10))\nplt.style.use('seaborn-pastel')\nseasons = sorted(df_player_attr['season'].unique())\ni = 1\nfor season in seasons:\n    plt.subplot(5,2,i)\n    x = ball_control[(ball_control.index.get_level_values(0) == season)].sort_values(ascending=False).iloc[:3]\n    sns.pointplot(x=x.index.get_level_values(1), y=x.values, linestyles='')\n    plt.xlabel('Player Name')\n    plt.ylabel('Avg ball_control')\n    plt.title(f'Top Player in {season}')\n    i+=1\n    \n    \n# plt.tight_layout()\nplt.subplots_adjust(top = 0.99, bottom=0.01, hspace=1.5, wspace=0.3)","8db1beeb":"crossing = group['crossing'].mean()\nplt.figure(figsize=(20,10))\nplt.style.use('seaborn-pastel')\nseasons = sorted(df_player_attr['season'].unique())\ni = 1\nfor season in seasons:\n    plt.subplot(5,2,i)\n    x = crossing[(crossing.index.get_level_values(0) == season)].sort_values(ascending=False).iloc[:3]\n    sns.pointplot(x=x.index.get_level_values(1), y=x.values, linestyles='')\n    plt.xlabel('Player Name')\n    plt.ylabel('Avg ball_control')\n    plt.title(f'Top Player in {season}')\n    i+=1\n    \n    \n# plt.tight_layout()\nplt.subplots_adjust(top = 0.99, bottom=0.01, hspace=1.5, wspace=0.3)","8171d969":"team_group['buildUpPlaySpeed'].min().sort_values(ascending=False)\n\nbuildUpPlaySpeed = team_group['buildUpPlaySpeed'].mean()\nplt.figure(figsize=(20,10))\nplt.style.use('seaborn-pastel')\nseasons = sorted(df_team_attr['season'].unique())\ni = 1\nfor season in seasons:\n    plt.subplot(3,2,i)\n    x = buildUpPlaySpeed[(buildUpPlaySpeed.index.get_level_values(0) == season)].sort_values(ascending=False).iloc[:3]\n    sns.pointplot(x=x.index.get_level_values(1), y=x.values, linestyles='')\n    plt.xlabel('Team Short Name')\n    plt.ylabel('Avg buildUpPlaySpeed')\n    plt.title(f'Top team in {season}')\n    i+=1\n    \n    \n# plt.tight_layout()\nplt.subplots_adjust(top = 0.99, bottom=0.01, hspace=1.5, wspace=0.3)\n","2374d797":"team_group['chanceCreationShooting'].min().sort_values(ascending=False)\n\nchanceCreationShooting = team_group['chanceCreationShooting'].mean()\nplt.figure(figsize=(20,10))\nplt.style.use('seaborn-pastel')\nseasons = sorted(df_team_attr['season'].unique())\ni = 1\nfor season in seasons:\n    plt.subplot(3,2,i)\n    x = chanceCreationShooting[(chanceCreationShooting.index.get_level_values(0) == season)].sort_values(ascending=False).iloc[:3]\n    sns.pointplot(x=x.index.get_level_values(1), y=x.values, linestyles='')\n    plt.xlabel('Team Short Name')\n    plt.ylabel('Avg chanceCreationShooting')\n    plt.title(f'Top team in {season}')\n    i+=1\n    \n    \n# plt.tight_layout()\nplt.subplots_adjust(top = 0.99, bottom=0.01, hspace=1.5, wspace=0.3)\n","fdeb315a":"### Team-Dataset","9ce248ed":"- #### What is the distribution for both weight and height?","d2524add":"- #### Who is the top three players in finishing from 2007 to 2016","93e73e0a":"- #### Who is the top three players in ball_control from 2007 to 2016","47466e19":"- #### Who is the team that scores most the Away team or the Home team?","831c2780":"# Project: Investigate a Dataset (European Soccer Database)\n","9b4d77af":"### Team_attr-Dataset","7d773dea":"1. we can see that there are linear relationship between weight and height\n2. we can see that the top 4 league (English, spain, italy and france) plays matches then other leagues\n3. the season 2013\/2014 has less matches then other seasons\n4. The home Team score goals then Away team\n5. 80% of player's weight below 180 pound\n6. 80% of player's height below 185 c\/m\n7. most of player's age between 23 to 30","be52d400":"## Exploratory-Data-Analysis\n","1a57e856":"- #### What is the percentile for both weight and height?","d0b2a057":"### Player-Dataset","3931586c":"### Country-Dataset","cd260852":"**The ultimate Soccer database**\n\n- +25,000 matches\n- +10,000 players\n- 11 European Countries with their lead championship\n- Seasons 2008 to 2016\n- Players and Teams' attributes* sourced from EA Sports' FIFA video game series, including the weekly updates\n- Team line up with squad formation (X, Y coordinates)\n- Betting odds from up to 10 providers\n- Detailed match events (goal types, possession, corner, cross, fouls, cards etc\u2026) for +10,000 matches","9d355720":"- #### Who is the top three players in crossing from 2007 to 2016","a7047615":"- #### Who is the top three teams in chanceCreationShooting from 2007 to 2016","e536385f":"- #### Who is the top three players in jumping from 2007 to 2016","f11aa79e":"## Assessing-&-Cleaning","349a59e7":"- #### Who is the top three players in penalties from 2007 to 2016","2cfc041c":"- #### What is the count of age stages ?","b9893735":"- #### Who is the top three players from 2007 to 2016","c9d7258f":"### Player_attr-Dataset","3ebb5c9b":"## Table of Contents\n- <a href='#Introduction'>Introduction<\/a>\n- <a href='#Assessing-&-Cleaning'>Assessing and Cleaning<\/a>\n    - <a href='#Country-Dataset'> Country Dataset <\/a>\n    - <a href='#League-Dataset'> League Dataset <\/a>\n    - <a href='#Match-Dataset'> Match Dataset <\/a>\n    - <a href='#Player-Dataset'> Player Dataset <\/a>\n    - <a href='#Player_attr-Dataset'> Player_attr Dataset <\/a>\n    - <a href='#Team-Dataset'> Team Dataset <\/a>\n    - <a href='#Team_attr-Dataset'> Team_attr Dataset <\/a>\n- <a href='#Exploratory-Data-Analysis'>Exploratory Data Analysis<\/a>","85c8d1eb":"### Match-Dataset","671e4f83":"## Conclusions","e2abc0d4":"- #### Which leagues have the highest games ?","eac29615":"- #### What is the average of goals for both home and away team in every league?","433cdc56":"- #### What is the age distribution?","ce6f427e":"### Limitation\n1. mising the position of the players or in other way the role of its player in the game.\n2. Not knowing whom player belongs to which team is another big limitation in this dataset.","aa8c4750":"## League Dataset","fa94fd74":"## Introduction","382a72bc":"- #### Which season have the highest games ?","96ccef51":"- #### Who is the top three players in shot_power from 2007 to 2016","9be0b8a4":"- #### if there are in relationship between height and weight?","9b6ec75a":"- #### Who is the top three teams in buildUpPlaySpeed from 2007 to 2016"}}