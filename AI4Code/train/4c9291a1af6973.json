{"cell_type":{"b2d5e3bf":"code","ab214720":"code","3d7c47a4":"code","05c0035e":"code","e9271dd0":"code","500e328b":"code","73f9efbd":"code","2402e6da":"code","f2b0f05e":"code","8e9b772d":"code","f1c2e1ca":"code","3e61437d":"code","a4c0b6bd":"code","9f61e24b":"code","d2ee9976":"code","8057a06f":"code","17dc4a74":"code","8deee637":"code","262c9da4":"code","d126867b":"code","0cee2933":"code","bd696915":"code","0761f994":"code","4d02c38a":"code","c413acef":"code","4b13b71a":"code","c7d69ad9":"code","ba71c1d1":"code","f69b65fa":"code","7cf908be":"code","c51d0df8":"code","16493880":"code","572b3cde":"code","a5ba1847":"code","55d2f47a":"markdown","5a136f7a":"markdown","146d9598":"markdown","9bdf56f7":"markdown","a3210c63":"markdown","eb0f2881":"markdown","374b54f7":"markdown","3cd3ac78":"markdown","f25c2efa":"markdown","6ba0bc57":"markdown","ef409672":"markdown","b10b8981":"markdown","195919d1":"markdown","0e2ce748":"markdown","e93811b5":"markdown"},"source":{"b2d5e3bf":"import numpy as np\nimport pandas as pd\nimport sklearn\nimport keras\nimport matplotlib.pyplot as plt\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout\nfrom sklearn.model_selection import train_test_split\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom sklearn.metrics import r2_score\n\n%matplotlib inline","ab214720":"df = pd.read_csv('..\/input\/insurance\/insurance.csv')\ndf.head()","3d7c47a4":"print('Size of our data: ', df.shape)\ndf.info()","05c0035e":"print('Columns with null values: ', df.columns[df.isnull().any()])\ndf.isnull().sum()","e9271dd0":"plt.figure(figsize = (8,8))\nsns.set(style = 'whitegrid')\nsns.heatmap(df.corr(), annot = True, cmap = 'Blues')","500e328b":"plt.figure(figsize = (10,8))\nplt.title('mean charges for each sex')\nsns.barplot(x = 'sex', y = 'charges', data = df)","73f9efbd":"plt.figure(figsize = (8,8))\nsns.countplot(x = 'sex', data = df)","2402e6da":"sns.catplot(x = 'sex', data = df, kind = 'count', hue = 'smoker')","f2b0f05e":"sns.catplot(x = 'region', data = df, kind = 'count', hue = 'sex')","8e9b772d":"plt.figure(figsize = (9,6))\nplt.title('Density of age groups')\nsns.distplot(df['age'], bins = 40)","f1c2e1ca":"sns.jointplot(x = 'age', y = 'charges', kind = 'kde', data = df)","3e61437d":"sns.pairplot(df, hue = 'sex', palette = 'Accent')","a4c0b6bd":"df.loc[df['sex'] == 'male', 'sex'] = 1 #sets males to 1\ndf.loc[df['sex'] == 'female', 'sex'] = 0 # sets females to 0\n\ndf.loc[df['smoker'] == 'yes', 'smoker'] = 1 #sets smokers to 1\ndf.loc[df['smoker'] == 'no', 'smoker'] = 0 # sets non-smokers to 0","9f61e24b":"dummy = pd.get_dummies(df['region'])\ndf = pd.concat([df, dummy], axis = 1)\ndf.head(10)","d2ee9976":"data = df.drop(['region'], axis = 1)\nprint('Shape of our data: ', data.shape)\ndata.head()\ndata.info()","8057a06f":"data['sex'] = np.asarray(data['sex']).astype('float32')\ndata['smoker'] = np.asarray(data['smoker']).astype('float32')\n\ndata.info()","17dc4a74":"\ndf_male = data[data['sex'] == 1]\ndf_female = data[data['sex'] == 0]","8deee637":"df_male.head()","262c9da4":"df_female.head()","d126867b":"Xm = df_male.drop(['charges', 'sex'], axis = 1)\nym = df_male['charges']\n\nprint('Male data shape: ', Xm.shape)\nXm.head()","0cee2933":"Xf = df_female.drop(['charges', 'sex'], axis = 1)\nyf = df_female['charges']\n\nprint('Female data shape: ', Xf.shape)\nXf.head()\n","bd696915":"Xm_train, Xm_test, ym_train, ym_test = train_test_split(Xm, ym, test_size = 0.2, random_state = 10)\nXf_train, Xf_test, yf_train, yf_test = train_test_split(Xf, yf, test_size = 0.2, random_state = 10)","0761f994":"def nn():\n    model = Sequential()\n    model.add(Dense(64, input_dim = 8, activation = 'relu'))\n    model.add(Dropout(0.15))\n    model.add(Dense(64, activation = 'relu'))\n    model.add(Dropout(0.2))\n    model.add(Dense(40, activation = 'relu'))\n    model.add(Dropout(0.15))\n    model.add(Dense(54, activation = 'relu'))\n    model.add(Dropout(0.18))\n    model.add(Dense(1))\n    \n    model.compile(optimizer = 'adam', loss = 'mean_squared_error', metrics = ['mse', 'mae'])\n    \n    return model","4d02c38a":"model_male = nn()\nmodel_female = nn()\n\nhistory_male = model_male.fit(Xm_train, ym_train, validation_split = 0.1, batch_size = 3, epochs = 55, verbose = 0)\nhistory_female = model_female.fit(Xf_train, yf_train, validation_split = 0.1, batch_size = 3, epochs = 55, verbose = 0)","c413acef":"plt.plot(history_male.history['mse'])\nplt.plot(history_male.history['val_mse'])\nplt.title('Mean_Squared_Error for Males')\nplt.xlabel('epochs')\nplt.ylabel('MSE')\nplt.legend(['Training', 'Validation'], loc = 'upper right')\nplt.show()","4b13b71a":"plt.plot(history_female.history['mse'])\nplt.plot(history_female.history['val_mse'])\nplt.title('Mean_Squared_Error for Females')\nplt.xlabel('epochs')\nplt.ylabel('MSE')\nplt.legend(['Training', 'Validation'], loc = 'upper right')\nplt.show()","c7d69ad9":"plt.plot(history_male.history['mae'])\nplt.plot(history_male.history['val_mae'])\nplt.title('Mean Absolute Error for Males')\nplt.xlabel('Epochs')\nplt.ylabel('MAE')\nplt.legend(['Training', 'Validation'], loc = 'upper right')\nplt.show()","ba71c1d1":"plt.plot(history_female.history['mae'])\nplt.plot(history_female.history['val_mae'])\nplt.title('Mean Absolute Error for Females')\nplt.xlabel('Epochs')\nplt.ylabel('MAE')\nplt.legend(['Training', 'Validation'], loc = 'upper right')\nplt.show()","f69b65fa":"scores = model_male.evaluate(Xm_test, ym_test, verbose = 0)\nscores2 = model_female.evaluate(Xf_test, yf_test, verbose = 0)\n\nprint('Mean Squared Error of male model: ', scores[1])\nprint('Mean Squared Error of female model: ', scores2[1])","7cf908be":"print('Mean Absolute Error of male model: ', scores[2])\nprint('Mean Absolute Error of female model: ', scores2[2])","c51d0df8":"ym_pred = model_male.predict(Xm_test).flatten()\nyf_pred = model_female.predict(Xf_test).flatten()\n\nerror_male = ym_pred - ym_test\nerror_female = yf_pred - yf_test","16493880":"plt.figure(figsize = (8,6))\nplt.title('Distribution of error for male model')\nsns.distplot(error_male, kde = True, bins = 50)","572b3cde":"plt.figure(figsize = (8,6))\nplt.title('Distribution of Error for female model')\nsns.distplot(error_female, kde = True, bins = 50)","a5ba1847":"print('r2 score for male model: ', r2_score(ym_test, ym_pred))\nprint('r2 score for female model: ', r2_score(yf_test, yf_pred))","55d2f47a":"Males pay more on average than women when on insurance.","5a136f7a":"Awesome! our data looks very clean and really easy to work with. The only thing we have to do to our data is to try to change the Dtype of the objects into something more usable.","146d9598":"Looks like we have a relatively small amount of variables and some objects, lets take a deeper look at what we have to work with","9bdf56f7":"We also have around the same amount of contractors being male and female","a3210c63":"Looks like we have3 objects being the Sex, Smoking status, and region of the contractor. Next, we check for any null values that may me detrimental to our model","eb0f2881":"After creating our model and looking at the history and seeing the result, we can now say that our model is great as it has a r2_score of >0.69. This and the high density around the error being 0, our model is can now be usable for the real world. The model can be greatly increased in accuracy if we added more neurons, layers, and a higher percentage in our dropout layer. We can also incorporate normalization but I chose to not go too in depth with a dataset that small. Thank you, and I hope y'all enjoy this kernel! - Michael Ramirez","374b54f7":"hmmm, when it comes to our correlation map, we see that age has a higher correlation that the other numerical varibales while bmi is a close second and the amount of children looks irrelevant to the charges.","3cd3ac78":"Looks like a lot of people pay less than 20k in charges for most age groups but the average payment gets higher for older folks which would make sense.","f25c2efa":"We also have a balanced amount of male and females in each region. So far, our data looks very balanced and does not have an overflow or underflow of data.","6ba0bc57":"we also have relatively the same amount of smokers and non-smokers.","ef409672":"We have now visualized a lot of our data and will try to seperate the dataset into male and females and model their predictions. Before that, we will need to do some data pre-processing and change our objects into usable data. We do this by converting the categories into integers and using dummy variables as we are in a regression problem.","b10b8981":"Perfect! Now that our data looks good to go when it comes to putting it into our model, lets start to visualize what the importance of our data correlates to the charges.","195919d1":"nice! We have successfully grabbed our opposite sets for our model. Lets start splitting our data so we can plug it into the model","0e2ce748":"We have 2 objects that we need to convert into floats","e93811b5":"Download needed libraries and read in the csv file to see what we have to work with"}}