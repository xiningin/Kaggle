{"cell_type":{"902886b8":"code","bb63ddcf":"code","3f1828da":"code","c2ccca49":"code","da08db4f":"code","3e7aae3a":"code","59ebe123":"code","6a9b2b6c":"code","7266e2a0":"code","f605622e":"code","f3a066e2":"code","a8e734a7":"code","b66f3fe8":"code","abd05ad1":"code","b2dad7f6":"code","ece13eef":"code","9d956b2a":"code","f199314f":"code","b70e1274":"code","39526c39":"code","59f1443c":"code","5e9752a5":"code","307321b0":"code","ee6d156b":"code","e158229d":"code","eb6bbaf6":"code","efee0808":"code","81580e77":"code","e2273f7e":"code","8b684e16":"code","e4e79e45":"code","43c48b1f":"code","17b82052":"code","2ddd41e8":"code","cf541ce0":"code","77064f96":"code","439563a0":"code","900bfd64":"code","5a3c8d2a":"markdown","e849a894":"markdown","49622b25":"markdown","89b5e1c3":"markdown","6520e94a":"markdown","0bae7bb7":"markdown","dfed06d6":"markdown","067a2797":"markdown","fea84a4c":"markdown","61cc3fad":"markdown","35ccab34":"markdown","38dae32f":"markdown","c39f03a9":"markdown","037660e1":"markdown","ad093d0c":"markdown","2172ee86":"markdown","0e9ed7b6":"markdown","1e05162c":"markdown","7a38ada7":"markdown","361464a6":"markdown","7479b7dd":"markdown","3c314015":"markdown","ab2d75ee":"markdown","1bc7b0bc":"markdown","370da809":"markdown","4482918f":"markdown","a8f3954f":"markdown","8bead533":"markdown","3476422b":"markdown","ce1cbc23":"markdown","d818af8b":"markdown","e92062ff":"markdown","e60f8465":"markdown","cdc5d232":"markdown","88796707":"markdown","e7c8417b":"markdown","10b3c83b":"markdown","a7d172c2":"markdown","04bab9f0":"markdown","f403ffdf":"markdown","8271ebc1":"markdown","0e7f4935":"markdown","df726bf8":"markdown"},"source":{"902886b8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# plotly\n# import plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.tools as tls\n\nimport missingno as msno\n# word cloud library\nfrom wordcloud import WordCloud\n\n# matplotlib\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","bb63ddcf":"# Load data that we will use.\ndf2015 = pd.read_csv(\"..\/input\/world-happiness\/2015.csv\")\ndf2016 = pd.read_csv(\"..\/input\/world-happiness\/2016.csv\")\ndf2017 = pd.read_csv(\"..\/input\/world-happiness\/2017.csv\")\ndf2018 = pd.read_csv(\"..\/input\/world-happiness\/2018.csv\")\ndf2019 = pd.read_csv(\"..\/input\/world-happiness\/2019.csv\")","3f1828da":"df2015.columns","c2ccca49":"df2015.rename(columns = {'Country':'country','Happiness Rank':'rank','Happiness Score':'score', 'Economy (GDP per Capita)':'economy','Health (Life Expectancy)':'health','Freedom':'freedom','Trust (Government Corruption)':'trust','Generosity':'generosity'},inplace =True)","da08db4f":"df2016.rename(columns = {'Country':'country','Happiness Rank':'rank','Happiness Score':'score', 'Economy (GDP per Capita)':'economy','Health (Life Expectancy)':'health','Freedom':'freedom','Trust (Government Corruption)':'trust','Generosity':'generosity'},inplace =True)\n","3e7aae3a":"df2017.rename(columns = {'Country':'country','Happiness.Rank':'rank','Happiness.Score':'score', 'Economy..GDP.per.Capita.':'economy','Health..Life.Expectancy.':'health','Freedom':'freedom','Trust..Government.Corruption.':'trust','Generosity':'generosity'},inplace =True)\n","59ebe123":"df2018.rename(columns = {'Country or region':'country','Overall rank':'rank','Score':'score', 'GDP per capita':'economy','Healthy life expectancy':'health','Freedom to make life choices':'freedom','Perceptions of corruption':'trust','Generosity':'generosity'},inplace =True)\n","6a9b2b6c":"df2019.rename(columns = {'Country or region':'country','Overall rank':'rank','Score':'score', 'GDP per capita':'economy','Healthy life expectancy':'health','Freedom to make life choices':'freedom','Perceptions of corruption':'trust','Generosity':'generosity'},inplace =True)\n","7266e2a0":"#First add column each data set as a year\ndf2015[\"year\"] = '2015' #this is Broadcasting, we add a column name as year and we filled the column with 2015\ndf2016[\"year\"] = '2016'\ndf2017[\"year\"] = '2017'\ndf2018[\"year\"] = '2018'\ndf2019[\"year\"] = '2019'","f605622e":"df2019.columns","f3a066e2":"# let concanate all data set as df\ndf = pd.concat([df2015,df2016,df2017,df2018,df2019],axis=0,ignore_index=True,sort=True)","a8e734a7":"df.head()","b66f3fe8":"df.drop(['Dystopia Residual', 'Dystopia.Residual', 'Family'], axis=1,inplace=True)","abd05ad1":"df.drop(['Lower Confidence Interval', 'Region', 'Social support','Standard Error','Upper Confidence Interval','Whisker.high','Whisker.low'], axis=1,inplace=True)","b2dad7f6":"#our main data set we will use\ndf.head()","ece13eef":"msno.bar(df)\nplt.show()","9d956b2a":"# prepare data frame\ndf2 = df.iloc[:158,:]\n\n# import graph objects as \"go\"\nimport plotly.graph_objs as go\n\n# Creating trace1\ntrace1 = go.Scatter(\n                    x = df2['rank'],\n                    y = df2['economy'],\n                    mode = \"lines\",\n                    name = \"economy\",\n                    marker = dict(color = 'rgba(255, 148, 120, 1)'),\n                    text= df2.country)\n# Creating trace2\ntrace2 = go.Scatter(\n                    x = df2['rank'],\n                    y = df2['freedom'],\n                    mode = \"lines\",\n                    name = \"freedom\",\n                    marker = dict(color = 'rgba(219, 10, 91, 1)'),\n                    text= df2.country)\ntrace3 = go.Scatter(\n                    x = df2['rank'],\n                    y = df2['generosity'],\n                    mode = \"lines\",\n                    name = \"generosity\",\n                    marker = dict(color = 'rgba(242, 38, 19, 1)'),\n                    text= df2.country)\ntrace4 = go.Scatter(\n                    x = df2['rank'],\n                    y = df2['health'],\n                    mode = \"lines\",\n                    name = \"health\",\n                    marker = dict(color = 'rgba(238, 238, 0, 1)'),\n                    text= df2.country)\ntrace5 = go.Scatter(\n                    x = df2['rank'],\n                    y = df2['trust'],\n                    mode = \"lines\",\n                    name = \"trust\",\n                    marker = dict(color = 'rgba(30, 130, 76, 1)'),\n                    text= df2.country)\ndata = [trace1, trace2, trace3, trace4, trace5]\nlayout = dict(title = '2015 Countries World Rank vs Features',\n              xaxis= dict(title= 'World Rank',ticklen= 5, zeroline= False)\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","f199314f":"import plotly.express as px\n\n\nfig = px.scatter(df, x=\"rank\", y= 'economy', color= 'year',\n                 size= 'economy', hover_data=['country'])\nfig.show()","b70e1274":"import plotly.express as px\n\n\nfig = px.scatter(df, x=\"rank\", y= 'health', color= 'year',\n                 size= 'health', hover_data=['country'])\nfig.show()","39526c39":"df.head()","59f1443c":"\ndf_2019 = df[df.year == '2019'].iloc[:5,:]\n# import graph objects as \"go\"\nimport plotly.graph_objs as go\n# create trace1 \ntrace1 = go.Bar(\n                x = df_2019['country'],\n                y = df_2019['economy'],\n                name = \"Economy\",\n                marker = dict(color = 'rgba(255, 0, 0, 1)',\n                             line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = df_2019['country'])\n# create trace2 \ntrace3 = go.Bar(\n                x = df_2019['country'],\n                y = df_2019['freedom'],\n                name = \"Freedom\",\n                marker = dict(color = 'rgba(255, 0, 0, 0.6)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = df_2019['country'])\ntrace5 = go.Bar(\n                x = df_2019['country'],\n                y = df_2019['generosity'],\n                name = \"Generosity\",\n                marker = dict(color = 'rgba(255, 0, 0, 0.2)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = df_2019['country'])\ntrace2 = go.Bar(\n                x = df_2019['country'],\n                y = df_2019['health'],\n                name = \"Health\",\n                marker = dict(color = 'rgba(255, 0, 0, 0.8)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = df_2019['country'])\ntrace4 = go.Bar(\n                x = df_2019['country'],\n                y = df_2019['trust'],\n                name = \"Trust\",\n                marker = dict(color = 'rgba(255, 0, 0, 0.4)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = df_2019['country'])\ndata = [trace1, trace2, trace3, trace4, trace5]\nlayout = go.Layout(barmode = \"group\")\nlayout = dict(title = 'Five Factors in 2019 for first five countries',\n              xaxis= dict(title= 'Countries',ticklen= 5,zeroline= False),\n             )\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","5e9752a5":"# prepare data frames\ndf_2019 = df[df.year == '2019'].iloc[:10,:]\n# import graph objects as \"go\"\nimport plotly.graph_objs as go\n\nx = df_2019.country\n\ntrace1 = {\n  'x': x,\n  'y': df_2019['trust'],\n  'name': 'trust',\n  'type': 'bar'\n};\ntrace2 = {\n  'x': x,\n  'y': df_2019['freedom'],\n  'name': 'freedom',\n  'type': 'bar'\n};\ndata = [trace1, trace2];\nlayout = {\n  'xaxis': {'title': '2019 Top 10 countries'},\n  'barmode': 'relative',\n  'title': 'Freedom and Trust of top 10 countries in 2019'\n};\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","307321b0":"# import graph objects as \"go\" and import tools\nimport plotly.graph_objs as go\nfrom plotly import tools\nimport matplotlib.pyplot as plt\n# prepare data frames\ndf_2016 = df[df.year == '2016'].iloc[147:160,:]\n\ny_saving = [each for each in df_2016.trust]\ny_net_worth  = [float(each) for each in df_2016.economy]\nx_saving = [each for each in df_2016.country]\nx_net_worth  = [each for each in df_2016.country]\ntrace0 = go.Bar(\n                x=y_saving,\n                y=x_saving,\n                marker=dict(color='rgba(171, 50, 96, 0.6)',line=dict(color='rgba(171, 50, 96, 1.0)',width=1)),\n                name='trust',\n                orientation='h',\n)\ntrace1 = go.Scatter(\n                x=y_net_worth,\n                y=x_net_worth,\n                mode='lines+markers',\n                line=dict(color='rgb(63, 72, 204)'),\n                name='economy',\n)\nlayout = dict(\n                title='Trust and Economy 2016 for last ten countries',\n                yaxis=dict(showticklabels=True,domain=[0, 0.85]),\n                yaxis2=dict(showline=True,showticklabels=False,linecolor='rgba(102, 102, 102, 0.8)',linewidth=2,domain=[0, 0.85]),\n                xaxis=dict(zeroline=False,showline=False,showticklabels=True,showgrid=True,domain=[0, 0.42]),\n                xaxis2=dict(zeroline=False,showline=False,showticklabels=True,showgrid=True,domain=[0.47, 1],side='top',dtick=25),\n                legend=dict(x=0.029,y=1.038,font=dict(size=10) ),\n                margin=dict(l=200, r=20,t=70,b=70),\n                paper_bgcolor='rgb(248, 248, 255)',\n                plot_bgcolor='rgb(248, 248, 255)',\n)\nannotations = []\ny_s = np.round(y_saving, decimals=2)\ny_nw = np.rint(y_net_worth)\n# Adding labels\nfor ydn, yd, xd in zip(y_nw, y_s, x_saving):\n    # labeling the scatter savings\n    annotations.append(dict(xref='x2', yref='y2', y=xd, x=ydn - 4,text='{:,}'.format(ydn),font=dict(family='Arial', size=12,color='rgb(63, 72, 204)'),showarrow=False))\n    # labeling the bar net worth\n    annotations.append(dict(xref='x1', yref='y1', y=xd, x=yd + 3,text=str(yd),font=dict(family='Arial', size=12,color='rgb(171, 50, 96)'),showarrow=False))\n\nlayout['annotations'] = annotations\n\n# Creating two subplots\nfig = tools.make_subplots(rows=1, cols=2, specs=[[{}, {}]], shared_xaxes=True,\n                          shared_yaxes=False, vertical_spacing=0.001)\n\nfig.append_trace(trace0, 1, 1)\nfig.append_trace(trace1, 1, 2)\n\nfig['layout'].update(layout)\niplot(fig)","ee6d156b":"# data preparation\ndf_2017 = df[df.year == '2017'].iloc[:7,:]\npie1 = df_2017.score\n\nlabels = df_2017.country\n# figure\nfig = {\n  \"data\": [\n    {\n      \"values\": pie1,\n      \"labels\": labels,\n      \"domain\": {\"x\": [0, .5]},\n      \"name\": \"Score\",\n      \"hoverinfo\":\"label+percent+name\",\n      \"hole\": .5,\n      \"type\": \"pie\"\n    },],\n  \"layout\": {\n        \"title\":\"2017 first 7 Countries Happiness Scores\",\n        \"annotations\": [\n            { \"font\": { \"size\": 20},\n              \"showarrow\": False,\n              \"text\":'',\n                \"x\": 0.20,\n                \"y\": 1\n            },\n        ]\n    }\n}\niplot(fig)","e158229d":"df.head()","eb6bbaf6":"import plotly.express as px\n\ndf_2019 = df[df.year == '2019']\nfig = px.scatter(df_2019, x=\"economy\", y=\"health\",\n\t         size=\"trust\", color=\"rank\",\n                 hover_name=\"country\", log_x=True, size_max=60)\nfig.show()","efee0808":"# prepare data\nx2015 = df.economy[df.year == '2015']\nx2016 = df.economy[df.year == '2016']\nx2017 = df.economy[df.year == '2017']\nx2018 = df.economy[df.year == '2018']\nx2019 = df.economy[df.year == '2019']\n\ntrace1 = go.Histogram(\n    x=x2015,\n    opacity=0.75,\n    name = \"2015\",\n    marker=dict(color='rgba(255, 0, 0, 0.2)'))\ntrace2 = go.Histogram(\n    x=x2016,\n    opacity=0.75,\n    name = \"2016\",\n    marker=dict(color='rgba(255, 0, 0, 0.4)'))\ntrace3 = go.Histogram(\n    x=x2017,\n    opacity=0.75,\n    name = \"2017\",\n    marker=dict(color='rgba(255, 0, 0, 0.6)'))\ntrace4 = go.Histogram(\n    x=x2018,\n    opacity=0.75,\n    name = \"2018\",\n    marker=dict(color='rgba(255, 0, 0, 0.8)'))\ntrace5 = go.Histogram(\n    x=x2019,\n    opacity=0.75,\n    name = \"2019\",\n    marker=dict(color='rgba(255, 0, 0, 1.0)'))\n\ndata = [trace1, trace2, trace3, trace4, trace5]\nlayout = go.Layout(barmode='overlay',\n                   title='Economy in 2015 to 2019',\n                   xaxis=dict(title='economy'),\n                   yaxis=dict( title='Count'),\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","81580e77":"# data prepararion\nx2015 = df.country[df.year == '2015']\nplt.subplots(figsize=(10,10))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=512,\n                          height=384\n                         ).generate(\" \".join(x2015))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\n\nplt.show()","e2273f7e":"df.head()","8b684e16":"# data preparation\nx2019 = df[df.year == '2019']\n\n\ntrace1 = go.Box(\n    y=x2019.economy,\n    name = 'economy scores of countries in 2019',\n    marker = dict(\n        color = 'rgba(255, 0, 0, 0.2)',\n    )\n)\ntrace2 = go.Box(\n    y=x2019.health,\n    name = 'health scores of countries in 2019',\n    marker = dict(\n        color = 'rgba(255, 0, 0, 0.4)',\n    )\n)\ntrace3 = go.Box(\n    y=x2019.trust,\n    name = 'trust scores of countries in 2019',\n    marker = dict(\n        color = 'rgba(255, 0, 0, 0.6)',\n    )\n)\ntrace4 = go.Box(\n    y=x2019.freedom,\n    name = 'freedom scores of countries in 2019',\n    marker = dict(\n        color = 'rgba(255, 0, 0, 0.8)',\n    )\n)\ntrace5 = go.Box(\n    y=x2019.generosity,\n    name = 'generosity scores of countries in 2015',\n    marker = dict(\n        color = 'rgba(255, 0, 0, 1.0)',\n    )\n)\ndata = [trace1, trace2, trace3, trace4, trace5]\niplot(data)","e4e79e45":"df.head()","43c48b1f":"# import figure factory\nimport plotly.figure_factory as ff\n# prepare data\ndataframe = df[df.year == '2015']\ndata2015 = dataframe.loc[:,[\"economy\",'freedom', \"generosity\", 'health', \"score\", 'trust']]\ndata2015[\"index\"] = np.arange(1,len(data2015)+1)\n# scatter matrix\nfig = ff.create_scatterplotmatrix(data2015, diag='box', index='index',colormap='Portland',\n                                  colormap_type='cat',\n                                  height=700, width=700)\niplot(fig)","17b82052":"\n# first line plot\ntrace1 = go.Scatter(\n    x=df2019['rank'],\n    y=df2019['health'],\n    name = \"health\",\n    marker = dict(color = 'rgba(16, 112, 2, 0.8)'),\n)\n# second line plot\ntrace2 = go.Scatter(\n    x=df2019['rank'],\n    y=df2019['economy'],\n    xaxis='x2',\n    yaxis='y2',\n    name = \"economy\",\n    marker = dict(color = 'rgba(160, 112, 20, 0.8)'),\n)\ndata = [trace1, trace2]\nlayout = go.Layout(\n    xaxis2=dict(\n        domain=[0.6, 0.95],\n        anchor='y2',        \n    ),\n    yaxis2=dict(\n        domain=[0.6, 0.95],\n        anchor='x2',\n    ),\n    title = '2019 Economy and Health vs World Rank of Countries'\n\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","2ddd41e8":"# create trace 1 that is 3d scatter\ntrace1 = go.Scatter3d(\n    x=df2019['rank'],\n    y=df2019['economy'],\n    z=df2019['health'],\n    mode='markers',\n    marker=dict(\n        size=df2019['trust']*100,\n        color=df2019['score'],                # set color to an array\/list of desired values      \n    )\n)\n\ndata = [trace1]\nlayout = go.Layout(\n    margin=dict(\n        l=0,\n        r=0,\n        b=0,\n        t=0  \n    )\n    \n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","cf541ce0":"trace1 = go.Scatter(\n    x=df2018['rank'],\n    y=df2018['freedom'],\n    name = \"freedom\"\n)\ntrace2 = go.Scatter(\n    x=df2018['rank'],\n    y=df2018['generosity'],\n    xaxis='x2',\n    yaxis='y2',\n    name = \"generosity\"\n)\ntrace3 = go.Scatter(\n   x=df2018['rank'],\n    y=df2018['health'],\n    xaxis='x3',\n    yaxis='y3',\n    name = \"health\"\n)\ntrace4 = go.Scatter(\n    x=df2018['rank'],\n    y=df2018['score'],\n    xaxis='x4',\n    yaxis='y4',\n    name = \"total_score\"\n)\ndata = [trace1, trace2, trace3, trace4]\nlayout = go.Layout(\n    xaxis=dict(\n        domain=[0, 0.45]\n    ),\n    yaxis=dict(\n        domain=[0, 0.45]\n    ),\n    xaxis2=dict(\n        domain=[0.55, 1]\n    ),\n    xaxis3=dict(\n        domain=[0, 0.45],\n        anchor='y3'\n    ),\n    xaxis4=dict(\n        domain=[0.55, 1],\n        anchor='y4'\n    ),\n    yaxis2=dict(\n        domain=[0, 0.45],\n        anchor='x2'\n    ),\n    yaxis3=dict(\n        domain=[0.55, 1]\n    ),\n    yaxis4=dict(\n        domain=[0.55, 1],\n        anchor='x4'\n    ),\n    title = '2018 Freedom, generosity, health and total score VS World Rank of Countries'\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","77064f96":"\nimport plotly.express as px\n\n\n#Find out more at https:\/\/plot.ly\/python\/choropleth-maps\/\ndata = [ dict(\n        type = 'choropleth',\n        locations = df2015['country'],\n        locationmode = 'country names',\n        z = df2015['rank'],\n        text = df2015['country'],\n        \n        color_continuous_scale=px.colors.sequential.Viridis, \n        autocolorscale = False,\n        reversescale = True,\n        marker = dict(\n            line = dict (\n                color = 'rgb(180,180,180)',\n                width = 0.5\n            ) ),\n        colorbar = dict(\n            autotick = False,\n            tickprefix = '',\n            title = 'Happiness Rank 2015'),\n      ) ]\n\nlayout = dict(\n    title = 'Happiness Rank 2015 by Country',\n    geo = dict(\n        showframe = False,\n        showcoastlines = True,\n        projection = dict(\n            type = 'Mercator'\n        )\n    )\n)\n\nfig = dict( data=data, layout=layout )\npy.iplot( fig, validate=False, filename='happinessrank-world-map')","439563a0":"fig = px.choropleth(df, locations=\"country\", locationmode='country names', color=\"rank\", \n                    hover_name=\"country\", animation_frame=df[\"year\"],\n                    title='Cases over time',  color_continuous_scale=\"Viridis\")\nfig.update_geos(fitbounds=\"locations\", visible=False)\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.show()","900bfd64":"import plotly.express as px\n\npx.scatter(df, x=\"rank\", y=\"score\", animation_frame=\"country\", animation_group=\"year\",\n           size=\"score\", color=\"year\", hover_name=\"country\", range_x=[1,160], range_y=[0,10])","5a3c8d2a":"This graph shows variables of trust and economy at the same time. As we expected, last ten countries have low rate for both variable, even if Rwanda has remarkable trust rate, its economy rate is very low.","e849a894":"we will drop the columns we donot need for visualization","49622b25":"Happiness scores for first countries are very close each other.","89b5e1c3":"<a id = \"15\"><\/a><br>\n<font color='pink'>\n## Inset Plot","6520e94a":"Most of the bubbles of 2019 are above the graph especially for the happiest countries, we can say that health(life expectancy) is increased over the years.","0bae7bb7":"<a id = \"13\"><\/a><br>\n<font color='pink'>\n## Box Plot","dfed06d6":"This histogram shows us how change of economy rates over the years. It seems that 2019 has the highest average economy rates.","067a2797":"1. [What countries rank the highest in overall happiness and each of the six factors contributing to happiness? ](#8)\n\n1. [How did country ranks or scores change between the 2015 and 2016 as well as the 2016 and 2017 reports? ](#20)\n\n1. [Did any country experience a significant increase or decrease in happiness?](#21)\n","fea84a4c":"<a id = \"20\"><\/a><br>\n<font color='pink'>\n### Map Plot Animation ","61cc3fad":"This bubble chart provides us to visualize four different variables at the same time. It is clearly while economy and health rates increase, happiness rank also increases. And bubbles size shows us trust rate, and trust rate seems to be changable so it means that it has low relation with happiness score.","35ccab34":"<a id = \"11\"><\/a><br>\n<font color='pink'>\n## Histogram","38dae32f":"It seems that trust rate has lots of outlier, while in the bubble chart, we  had realized that trust rate also has no relation between happiness score. I think that trust rate can be meaninigless for this analyse, but we need further statistical analyses.","c39f03a9":"<a id = \"7\"><\/a><br>\n<font color='peach'>\n## Scatter Chart","037660e1":"As you can see, column names too long to use with codes and I will try to make it simple and same for all data sets.","ad093d0c":"<a id = \"17\"><\/a><br>\n<font color='pink'>\n## Multiple Subplots","2172ee86":"As you can see, we do not have any missing values, all columns have 782 data.","0e9ed7b6":"As clearly seen that there is no significant differences among first five countries according to rate of economy and health. This shows that the other variables more affect rank of these countries.","1e05162c":"Economy and Health seems to be the most important factors for happiness rank, the third effective factor is freedom. On the other hand, trust and generosity are close each other and the differences between high rank countries and low rank countries relatively small. So I will analyse these two variable more closely.","7a38ada7":"<a id = \"1\"><\/a><br>\n<font color='Peach'>\n   ## Load necessary dictionaries\n    ","361464a6":"<a id = \"14\"><\/a><br>\n<font color='pink'>\n## Scatter Plot Matrix","7479b7dd":"<a id = \"5\"><\/a><br>\n<font color='Peach'>\n## Check missing data: Bar Plot (MISSINGNO)","3c314015":"It seems that freedom and trust were more effective than health and economy for rank of first ten countries in 2019.","ab2d75ee":"<a id = \"10\"><\/a><br>\n<font color='pink'>\n## Bubble Chart","1bc7b0bc":"<a id = \"3\"><\/a><br>\n<font color='pink'>\n### Explanation of Features\n<font color='black'>\n* HAPPINESS DATA includes 9 features that are:\n    <br>\n   1. **country :** Name of the country\n   1. **economy :**(GDP per Capita)The extent to which GDP contributes to the calculation of the Happiness Score.\n   1. **freedom :**The extent to which Freedom contributed to the calculation of the Happiness Score.\n   1. **generosity:** The extent to which Generosity contributed to the calculation of the Happiness Score.\n   1. **health:** (Life Expectancy)The extent to which Life expectancy contributed to the calculation of the Happiness Score\n   1. **rank:**Rank of the country based on the Happiness Score.\n   1. **score:**A metric measured in 2015 by asking the sampled people the question: \"How would you rate your happiness on a scale of 0 to 10 where 10 is the happiest.\"\n   1. **trust:**(Government Corruption)The extent to which Perception of Corruption contributes to Happiness Score.\n   1. **year: **2015,2016,2017,2018,2019","370da809":"As we can see clearly, economy and health variables have same trend.","4482918f":"we can analyse relation between variables detaily with this graph. It has clearly seen that economy, health and score have positive relation, the other variables have low relation.","a8f3954f":"<a id = \"16\"><\/a><br>\n<font color='pink'>\n## 3D Scatter Plot with Colorscaling","8bead533":"in this 3D graph<br>\n* x shows rank of countries,\n* y shows economy rate of countries,\n* z shows health rate of countries,\n* colors of bubbles show that score of countries,\n* size of bubbles shows that trust rate of countries in 2019","3476422b":"As you can see clearly, health and score tend to decrease while tend increases, generosity and freedom have not specific trend.","ce1cbc23":"<a id = \"9\"><\/a><br>\n<font color='pink'>\n## Pie Chart","d818af8b":"All data set has some similiar columns and some different columns, for visiluaziation I will add new column as year, and concanate all years data set, so some columns have not defined some years, I will delete this columns to get full data set.<br>\nlets begin","e92062ff":"<a id = \"18\"><\/a><br>\n<font color='pink'>\n## Map Plot","e60f8465":"\nIn this chart I prepared play button according to countries, because we can see easily how changes the ranks of each countries over the years. Remarkably, while rate of Venezuala, Malaysia and Algeria drop back, Cyprus, Kosova and Benin have an upward tendency.","cdc5d232":"<a id = \"4\"><\/a><br>\n<font color='Peach'>\n# Data Visualization","88796707":"<a id = \"19\"><\/a><br>\n<font color='pink'>\n## Animation Plots","e7c8417b":"<a id = \"12\"><\/a><br>\n<font color='pink'>\n## Word Cloud","10b3c83b":"<a id = \"8\"><\/a><br>\n<font color='pink'>\n## Bar Chart","a7d172c2":"<a id = \"2\"><\/a><br>\n<font color='pink'>\n   ## Load and Prepare Data ","04bab9f0":"<a id = \"6\"><\/a><br>\n<font color='Peach'>\n## Line Chart\n    We have five same variables for each of years, in this line, our aim find the change of each variable according to h","f403ffdf":"<a id = \"21\"><\/a><br>\n<font color='pink'>\n### Bubble Plot Animation ","8271ebc1":"Because Economy seems to the most important factor, I want to look at change of economy in years. As you can see clearly, economy and happiness rank positive relation and top ten countries have similar economy ranks among years.","0e7f4935":"<a id = \"22\"><\/a><br>\n<font color='pink'>\n# Conclusion","df726bf8":"<font color='black'>\n# INTRODUCTION\n    Data Set Explanation:\nThe happiness scores and rankings use data from the Gallup World Poll. The scores are based on answers to the main life evaluation question asked in the poll. This question, known as the Cantril ladder, asks respondents to think of a ladder with the best possible life for them being a 10 and the worst possible life being a 0 and to rate their own current lives on that scale. The scores are from nationally representative samples for the years 2013-2016 and use the Gallup weights to make the estimates representative. The columns following the happiness score estimate the extent to which each of six factors \u2013 economic production, social support, life expectancy, freedom, absence of corruption, and generosity \u2013 contribute to making life evaluations higher in each country than they are in Dystopia, a hypothetical country that has values equal to the world\u2019s lowest national averages for each of the six factors. They have no impact on the total score reported for each country, but they do explain why some countries rank higher than others.<br>\n    Our aim on this data set is using Plotly dictionary to visualize data to answer some questions.\n   <br>\n <br>\nSome questions, we will try to find answers    \n* What countries rank the highest in overall happiness and each of the six factors contributing to happiness? \n* How did country ranks or scores change between the 2015 and 2016 as well as the 2016 and 2017 reports? \n* Did any country experience a significant increase or decrease in happiness?\n\n<font color='Peach'>\n## Content:\n1. [Load necessary dictionaries](#1)\n1. [Load and Prepare Data](#2)\n    1. [Explanation of Features](#3)\n1. [Data Visualization](#4)\n    1. [Check missing data: Bar Plot (MISSINGNO)](#5)\n    1. [Line Chart](#6)\n    1. [Scatter Plot](#7)\n    1. [Bar Chart](#8)\n    1. [Pie Charts](#9)\n    1. [Bubble Charts](#10)\n    1. [Histogram](#11)\n    1. [Word Cloud](#12)\n    1. [Box Plot](#13)\n    1. [Scatter Plot Matrix](#14)\n    1. [Inset Plots](#15)\n    1. [3D Scatter Plot with Colorscaling](#16)\n    1. [Multiple Subplots](#17)\n    1. [Map Plot](#18)\n    1. [Animation Plots](#19)\n        1. [Map](#20)\n        1. [Bubble](#21)\n1. [Conclusion](#22)\n    \n    \n\n "}}