{"cell_type":{"d150f013":"code","b4db5aa5":"code","1c509f9a":"code","70db98b0":"code","2fe3a065":"code","8b1a502e":"code","2e657769":"code","97d3e030":"code","59842b3f":"code","ac713d91":"code","324e25cf":"code","9853d8e6":"code","39abf3bb":"code","130cfc11":"code","d9c05b7d":"code","8c77a871":"code","021cb49f":"code","7afef45c":"code","791da038":"code","bf40faf3":"code","12716605":"code","b4a3c92f":"markdown","bc48b95f":"markdown","683d7dff":"markdown","97318a47":"markdown","f879800e":"markdown","7819344e":"markdown","d6e74cb7":"markdown","3a36c532":"markdown","9d27c5fd":"markdown","2ba19d36":"markdown"},"source":{"d150f013":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\/Suicides Rates Overview 1985 to 2016\/master.csv\"))\n\n# Any results you write to the current directory are saved as output.","b4db5aa5":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns","1c509f9a":"dataset = pd.read_csv('..\/input\/master.csv')","70db98b0":"dataset.head()","2fe3a065":"dataset.tail()","8b1a502e":"dataset.info()","2e657769":"dataset.describe()","97d3e030":"dataset.shape","59842b3f":"dataset.columns","ac713d91":"del dataset['country-year']","324e25cf":"del dataset['HDI for year']","9853d8e6":"dataset.rename(columns={'gdp_for_year ($) ' : 'gdp_for_year'},inplace = True)","39abf3bb":"dataset.rename(columns={'gdp_per_capita ($)':'gdp_per_capita'},inplace = True)","130cfc11":"dataset.corr()","d9c05b7d":"plt.figure(figsize= (10,7))\nsns.heatmap(dataset.corr(),annot=True)","8c77a871":"years = dataset.year.unique()\nyears = sorted(years)","021cb49f":"population = []\nfor year in years:\n    population.append([dataset[dataset['year']==year]['population'].sum()])\n\nplt.plot(years, population,'-o')\nplt.ylabel('Population -->')\nplt.xlabel('Years --> ')\nplt.show()","7afef45c":"suicides = []\nfor year in years:\n    suicides.append([dataset[dataset['year']==year]['suicides_no'].sum()])\nplt.plot(years, suicides,'-o')\nplt.ylabel('Suicides -->')\nplt.xlabel('Years --> ')\nplt.show()","791da038":"plt.figure(figsize=(10,7))\nsns.barplot(x='age',y='suicides_no',hue='sex',data=dataset)\nplt.show()","bf40faf3":"generation = pd.unique(dataset['generation'])\ngen_pos = np.arange(len(generation))\n\ng_suic=[dataset[dataset['generation']==gen]['suicides_no'].sum() for gen in generation]\n    \nplt.barh(generation,g_suic)\nplt.yticks(gen_pos,generation)","12716605":"plt.figure(figsize=(10,25))\nsns.countplot(y='country',data=dataset,alpha=0.7)","b4a3c92f":"Step 2: Data Cleaning","bc48b95f":"Step 3: Data visualisation\n1. Data correlation to each other\n2. Basic plots of some relevant and important columns\n3. comparison of the information.","683d7dff":"Thanks. Will be updated whenever some interesting insights be found.","97318a47":"* **No. of suicides vs population**","f879800e":"Hello and Welcome all to my very first kernel. \nTopic : Suicide Rates Overview 1985 to 2016","7819344e":"Step 1: Information related to dataset","d6e74cb7":"* ** population vs Years**","3a36c532":"Dividing on the basis of Generation","9d27c5fd":"Dividing on the basis of gender","2ba19d36":"> **Upvote if you like**"}}