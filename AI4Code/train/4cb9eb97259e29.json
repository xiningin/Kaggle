{"cell_type":{"1524e795":"code","311bc133":"code","06da2850":"code","e2cebb36":"code","dc719fd7":"code","bfb4a631":"code","f635ee2a":"code","d03dba62":"code","38405916":"code","1f937a31":"code","eae96906":"code","9516c233":"code","aa45850c":"code","091017f7":"code","6bac5219":"code","2d2525d9":"code","b634ec32":"code","34d09ecc":"code","8ce98789":"code","d30d9d96":"code","2fb90655":"code","55dbf706":"code","61985344":"code","f4dfb915":"code","aa0539da":"code","cd0f3b28":"markdown","596f146b":"markdown","d1aa861b":"markdown","c5fd39a4":"markdown","eeb47a12":"markdown","193a1935":"markdown","8fbf57b9":"markdown","212e38bb":"markdown","6d9e2fe1":"markdown"},"source":{"1524e795":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","311bc133":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","06da2850":"data=pd.read_csv(\"..\/input\/gender-classification-dataset\/gender_classification_v7.csv\")","e2cebb36":"data.head()","dc719fd7":"data.isnull().sum()    # Checking of null value","bfb4a631":"data","f635ee2a":"from sklearn.preprocessing import LabelEncoder\nlabelencoder = LabelEncoder()\n# Assigning numerical values and storing in another column\ndata['gender'] = labelencoder.fit_transform(data['gender'])\ndata","d03dba62":"data","38405916":"sns.pairplot(data)","1f937a31":"sns.lineplot(data['forehead_width_cm'],data['forehead_height_cm'], hue=data[\"gender\"])","eae96906":"sns.lineplot(data['nose_long'],data['nose_wide'], hue=data[\"gender\"])","9516c233":"X=data.drop(['gender'],axis=1)\nX","aa45850c":"y=data['gender']","091017f7":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state= 5)","6bac5219":"X_train","2d2525d9":"X_test","b634ec32":"y_train","34d09ecc":"y_test","8ce98789":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train_sc = sc.fit_transform(X_train)\nX_test_sc = sc.transform(X_test)","d30d9d96":"print(X_train_sc)","2fb90655":"X_test_sc","55dbf706":"from sklearn.metrics import confusion_matrix, classification_report, accuracy_score","61985344":"# Random Forest Classifier\nfrom sklearn.ensemble import RandomForestClassifier\nrf_classifier = RandomForestClassifier(n_estimators = 20, criterion = 'entropy', random_state = 51)\nrf_classifier.fit(X_train, y_train)\ny_pred_rf = rf_classifier.predict(X_test)\naccuracy_score(y_test, y_pred_rf)","f4dfb915":"cm = confusion_matrix(y_test, y_pred_rf)\nplt.title('Heatmap of Confusion Matrix', fontsize = 70)\nsns.heatmap(cm, annot = True)\nplt.show()","aa0539da":"print(classification_report(y_test, y_pred_rf))","cd0f3b28":"# Data Visualization","596f146b":"# Confusion Matrix","d1aa861b":"# Train Test Split","c5fd39a4":"# Data gathering","eeb47a12":"# Classification Report","193a1935":"# Data Cleaning","8fbf57b9":"# Machine Learning Algorithm","212e38bb":"# Import Library","6d9e2fe1":"# Feature Scalling"}}