{"cell_type":{"5fd6caed":"code","93c8e4f4":"code","d2f8c056":"code","2c60644b":"code","8f2a9619":"code","89351659":"code","f8332231":"code","58772b28":"code","7cbe4624":"code","c38f055c":"code","f0858051":"code","ebba1977":"code","d9f3736d":"code","04ca9047":"code","10021c55":"code","afb2d2e1":"code","01eaa74b":"code","239262b0":"code","5918fcc2":"code","564b5461":"code","73c06b9b":"code","c34f7be4":"code","2262fc8c":"code","2c532b2b":"code","267986e2":"code","b3e43806":"code","56184035":"code","cb864526":"code","49cf71e4":"code","b34b9c6a":"code","71220023":"code","0c2d3968":"code","bcdbc87f":"code","ff42aeac":"code","dcef0fec":"code","e9957c6c":"code","ac6e95f5":"code","fc427a78":"code","bd793657":"code","504e754d":"code","c7406e6d":"code","875a495c":"code","2329db35":"code","8ba1bae6":"code","cb7feb80":"code","b29f5052":"code","b434669a":"code","c1e7c1ce":"code","174946ea":"code","8ad1d3f6":"code","a1650e04":"code","a7d359ff":"code","8181cefc":"code","ed86c04c":"code","a6afd500":"code","49c56516":"code","7596e03f":"code","687ec7bf":"code","01f576b7":"code","8b39f7dc":"code","bcbcbaa8":"code","b33460eb":"code","2e51a33a":"code","7872b975":"code","c92d9a9b":"code","771a4972":"code","147cf62f":"code","a07af37e":"code","96acb889":"markdown","28e73e08":"markdown","5530db19":"markdown","1e785163":"markdown","b9a9f4ec":"markdown","67cddc42":"markdown","447c56a4":"markdown","1cd34987":"markdown","f9882f60":"markdown","51ce1ea1":"markdown","76a9d80d":"markdown","49a21de3":"markdown","5ffa0d5c":"markdown","5e364d8c":"markdown","2f7d5b9a":"markdown","edf968c9":"markdown","8469965c":"markdown","5c6c270d":"markdown","fd153f5d":"markdown","93c310a2":"markdown","e36b30ab":"markdown","0c621c0f":"markdown","dcaabcfd":"markdown","396b6734":"markdown","7a101671":"markdown","e5de5dfb":"markdown","95862aa2":"markdown","06387b7f":"markdown","5f42ab75":"markdown","624e7483":"markdown","1dc092be":"markdown","b8e464a4":"markdown","36329125":"markdown","7678c246":"markdown","f79aaac5":"markdown","1a5e19d3":"markdown","57fca2fc":"markdown","35e7720f":"markdown","ff241d7a":"markdown"},"source":{"5fd6caed":"# Importing Required Library\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom numpy import math\n\nfrom sklearn.preprocessing import MinMaxScaler\nfrom scipy.stats import zscore\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn import metrics\nimport warnings\nwarnings.filterwarnings('ignore')","93c8e4f4":"# using pandas library and 'read_csv' function to read YesBank_StockPrices csv file\ndataset = pd.read_csv('..\/input\/yes-bank-stock\/data_YesBank_StockPrices.csv')\ndataset.head()","d2f8c056":"dataset.tail()","2c60644b":"#information of the dataset \ndataset.info()","8f2a9619":"#number of rows and columns \ndataset.shape","89351659":"numerical_col = dataset.describe().columns","f8332231":"for i in numerical_col[:]:\n  fig = plt.figure(figsize=(15,8))\n  ax = fig.gca()\n  features = dataset[i]\n  label = dataset['Close']\n  features.hist(bins = 50,ax = ax,color = 'blue')\n  ax.axvline(features.mean(),color = 'magenta',linestyle = 'dashed',linewidth = 2)\n  ax.axvline(features.median(),color = 'cyan',linestyle = 'dashed',linewidth = 2)\n  ax.set_title(i)","58772b28":"from datetime import datetime\ndataset['Date'] = pd.to_datetime(dataset['Date'].apply(lambda x: datetime.strptime(x,'%b-%y')))","7cbe4624":"#Decription of dataset \ndataset.describe(include='all')","c38f055c":"# Identify Numerical Columns\nnumerical_col = dataset.describe().columns\nnumerical_col","f0858051":"# Line Plot\nplt.figure(figsize=(15,8))\nplt.plot(dataset['Close'])\nplt.plot(dataset['Open'])\nplt.plot(dataset['High'])\nplt.legend(['Close','Open','High'])\nplt.grid()","ebba1977":"# Checking Null Values\ndataset.isnull().sum()","d9f3736d":"# checking duplicate values\nlen(dataset[dataset.duplicated()])","04ca9047":"plt.figure(figsize=(15,8))\ndataset.boxplot('Open')\nplt.show()","10021c55":"plt.figure(figsize=(15,8))\nsns.distplot(dataset['Close'],color='blue')\nplt.show()","afb2d2e1":"# For normal Distribution \nplt.figure(figsize=(15,8))\nsns.distplot(np.log10(dataset['Close']),color='blue')\nplt.show()\n","01eaa74b":"# Independent variables\nplt.figure(figsize=(15,8))\nsns.distplot(dataset['Open'], color='blue')\n\nplt.figure(figsize=(15,8))\nsns.distplot(dataset['High'], color='blue')\n\nplt.figure(figsize=(15,8))\nsns.distplot(dataset['Low'], color='blue')","239262b0":"plt.figure(figsize=(15,8))\nsns.distplot(np.log10(dataset['Open']), color='blue')\n\nplt.figure(figsize=(15,8))\nsns.distplot(np.log10(dataset['High']), color='blue')\n\nplt.figure(figsize=(15,8))\nsns.distplot(np.log10(dataset['Low']), color='blue')","5918fcc2":"# Correaltion Between the Variables\ncorr = dataset.corr()\nplt.figure(figsize = (15,8))\nsns.heatmap(abs(corr),annot = True,cmap = 'coolwarm')","564b5461":"for col in numerical_col[:]:\n  fig = plt.figure(figsize = (15,8))\n  ax = fig.gca()\n  features = dataset[col]\n  label = dataset['Close']\n  correlation = features.corr(label)\n  plt.scatter(x = features,y = label)\n  plt.xlabel(col)\n  plt.ylabel('Close')\n  plt.title('Price Vs  ' + col + '_ correlation:' + str(correlation))\n  z = np.polyfit(dataset[col],dataset['Close'],1)\n  y_hat = np.poly1d(z)(dataset[col])\n  plt.plot(dataset[col] , y_hat, \"r--\",lw = 2)\nplt.show()","73c06b9b":"from statsmodels.stats.outliers_influence import variance_inflation_factor\n\ndef cal_vif(X):\n  vif = pd.DataFrame()\n  vif[\"variables\"] = X.columns\n  vif[\"VIF\"] = [variance_inflation_factor(X.values,i) for i in range(X.shape[1])]\n\n  return(vif)","c34f7be4":"cal_vif(dataset[[i for i in dataset.describe().columns if i not in ['Close','Date']]])","2262fc8c":"plt.figure(figsize=(15,8))\ndataset[['Close','Open']].tail(30).plot(kind='bar',figsize=(15,8))","2c532b2b":"# Splitting our data into Dependent and Independent Variables\nX = dataset.drop(columns=['Close','Date']).apply(zscore)\ny = np.log10(dataset['Close'])","267986e2":"# Creating Testing and Training Datasets\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.20,random_state = 1)","b3e43806":"print(X_train.shape)\nprint(X_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","56184035":"reg = LinearRegression()\nreg_model = reg.fit(X_train,y_train)","cb864526":"reg.score(X_train,y_train)","49cf71e4":"y_test_pred = reg.predict(X_test)\ny_train_pred = reg.predict(X_train)","b34b9c6a":"reg.intercept_","71220023":"reg.coef_","0c2d3968":"# Test Performance\nprint(\"MSE :\",mean_squared_error(y_test, y_test_pred))\nprint(\"RMSE :\",math.sqrt(mean_squared_error(y_test, y_test_pred)))\nprint(\"MAE :\",mean_absolute_error(y_test, y_test_pred))\nprint(\"R2 :\",r2_score(y_test, y_test_pred))","bcdbc87f":"# Train Performance\nprint(\"MSE :\",mean_squared_error(y_train, y_train_pred))\nprint(\"RMSE :\",math.sqrt(mean_squared_error(y_train, y_train_pred)))\nprint(\"MAE :\",mean_absolute_error(y_train, y_train_pred))\nprint(\"R2 :\",r2_score(y_train, y_train_pred))","ff42aeac":"# Linear Regression Plotting\nplt.figure(figsize=(15,8))\nplt.plot(10**(np.array(y_test)))\nplt.plot(10**(y_test_pred))\nplt.legend(['Actual','Predicted'])\nplt.grid()\nplt.show()","dcef0fec":"from sklearn.linear_model import Lasso\nlasso = Lasso(alpha=0.005,max_iter=3000)\nlasso_model = lasso.fit(X_train,y_train)","e9957c6c":"lasso.score(X_train,y_train)","ac6e95f5":"y_lasso_pred = lasso.predict(X_test)","fc427a78":"# Test Performance\nprint(\"MSE :\",mean_squared_error(y_test,y_lasso_pred))\nprint(\"RMSE :\",math.sqrt(mean_squared_error(y_test, y_lasso_pred)))\nprint(\"MAE :\",mean_absolute_error(y_test, y_lasso_pred))\nprint(\"R2 :\",r2_score(y_test, y_lasso_pred))","bd793657":"plt.figure(figsize=(15,8))\nplt.plot(y_lasso_pred)\nplt.plot(np.array(y_test))\nplt.legend([\"Predicted\",\"Actual\"])\nplt.xlabel('No of Test Data')\nplt.grid()\nplt.show()","504e754d":"from sklearn.model_selection import GridSearchCV","c7406e6d":"# Hyper-parameter Tuning\n\nlasso_cv = Lasso()\nparameters = {'alpha':[1e-15,1e-13,1e-10,1e-8,1e-5,1e-4,1e-3,1e-2,1e-1,1,5,10,20,30,40,45,50,55,60,100,0.0014]}\nlasso_model = GridSearchCV(lasso_cv,parameters,scoring = 'neg_mean_squared_error',cv = 3)","875a495c":"lasso_model.fit(X_train,y_train)","2329db35":"print(\"The best fit alpha value is found out to be :\" ,lasso_model.best_params_)\nprint(\"\\nUsing \",lasso_model.best_params_, \" the negative mean squared error is: \", lasso_model.best_score_)","8ba1bae6":"y_pred_lasso = lasso_model.predict(X_test)","cb7feb80":"# Test Performance\nprint(\"MSE :\",mean_squared_error(y_test, y_pred_lasso))\nprint(\"RMSE :\",math.sqrt(mean_squared_error(y_test, y_pred_lasso)))\nprint(\"MAE :\",mean_absolute_error(y_test, y_pred_lasso))\nprint(\"R2 :\",r2_score(y_test, y_pred_lasso))","b29f5052":"# Lasso plotting\nplt.figure(figsize=(15,8))\nplt.plot(10**(np.array(y_test)))\nplt.plot(10**(y_pred_lasso))\nplt.legend(['Actual','Predicted'])\nplt.grid()\nplt.show()","b434669a":"from sklearn.linear_model import Ridge","c1e7c1ce":"ridge  = Ridge(alpha=0.1)\nridge.fit(X_train,y_train)","174946ea":"ridge.score(X_train, y_train)","8ad1d3f6":"y_ridge_pred = ridge.predict(X_test)","a1650e04":"# Test performance\n\nprint(\"MSE :\",mean_squared_error(y_test, y_ridge_pred))\nprint(\"RMSE :\",math.sqrt(mean_squared_error(y_test, y_ridge_pred)))\nprint(\"MAE :\",mean_absolute_error(y_test, y_ridge_pred))\nprint(\"R2 :\",r2_score(y_test, y_ridge_pred))","a7d359ff":"plt.figure(figsize=(15,8))\nplt.plot(y_ridge_pred)\nplt.plot(np.array(y_test))\nplt.legend([\"Predicted\",\"Actual\"])\nplt.xlabel('No of Test Data')\nplt.grid()\nplt.show()","8181cefc":"# Hyper-parameter Tuning\nridge_cv = Ridge()\nparameters = {'alpha':[1e-15,1e-13,1e-10,1e-8,1e-5,1e-4,1e-3,1e-2,1e-1,1,5,10,20,30,40,45,50,55,60,100]}\nridge_model = GridSearchCV(ridge_cv,parameters,scoring='neg_mean_squared_error',cv=3)\nridge_model.fit(X_train,y_train)","ed86c04c":"print(\"The best fit alpha value is found out to be :\" ,ridge_model.best_params_)\nprint(\"\\nUsing \",ridge_model.best_params_, \" the negative mean squared error is: \", ridge_model.best_score_)","a6afd500":"# Model Predication\ny_pred_ridge  = ridge_model.predict(X_test)","49c56516":"# Test Performance\nprint(\"MSE :\",mean_squared_error(y_test, y_pred_ridge))\nprint(\"RMSE :\",math.sqrt(mean_squared_error(y_test, y_pred_ridge)))\nprint(\"MAE :\",mean_absolute_error(y_test, y_pred_ridge))\nprint(\"R2 :\",r2_score(y_test, y_pred_ridge))","7596e03f":"plt.figure(figsize=(15,8))\nplt.plot(y_pred_ridge)\nplt.plot(np.array(y_test))\nplt.legend([\"Predicted\",\"Actual\"])\nplt.xlabel('No of Test Data')\nplt.grid()\nplt.show()","687ec7bf":"from sklearn.linear_model import ElasticNet","01f576b7":"elastic = ElasticNet(alpha=0.1,l1_ratio=0.5)\nelastic.fit(X_train,y_train)","8b39f7dc":"y_elastic_pred = elastic.predict(X_test)","bcbcbaa8":"# Test Performance\nprint(\"MSE :\",mean_squared_error(y_test, y_elastic_pred))\nprint(\"RMSE :\",math.sqrt(mean_squared_error(y_test, y_elastic_pred)))\nprint(\"MAE :\",mean_absolute_error(y_test, y_elastic_pred))\nprint(\"R2 :\",r2_score(y_test, y_elastic_pred))","b33460eb":"plt.figure(figsize=(15,8))\nplt.plot(y_elastic_pred)\nplt.plot(np.array(y_test))\nplt.legend([\"Predicted\",\"Actual\"])\nplt.xlabel('No of Test Data')\nplt.grid()\nplt.show()","2e51a33a":"from sklearn.model_selection import GridSearchCV","7872b975":"elastic_cv = ElasticNet()\nparameters = {'alpha':[1e-15,1e-13,1e-10,1e-8,1e-5,1e-4,1e-3,1e-2,1e-1,1,5,10,20,30,40,45,50,55,60,100],'l1_ratio':[0.3,0.4,0.5,0.6,0.7,0.8,1,2]}\nelastic_model = GridSearchCV(elastic_cv,parameters,scoring='neg_mean_squared_error',cv=3)\nelastic_model.fit(X_train,y_train)","c92d9a9b":"print(\"The best fit alpha value is found out to be :\" ,elastic_model.best_params_)\nprint(\"\\nUsing \",elastic_model.best_params_, \" the negative mean squared error is: \", elastic_model.best_score_)","771a4972":"y_elastic_pred = elastic_model.predict(X_test)","147cf62f":"# Test Performance\nprint(\"MSE :\",mean_squared_error(y_test, y_elastic_pred))\nprint(\"RMSE :\",math.sqrt(mean_squared_error(y_test,y_elastic_pred )))\nprint(\"MAE :\",mean_absolute_error(y_test, y_elastic_pred))\nprint(\"R2 :\",r2_score(y_test, y_elastic_pred))","a07af37e":"plt.figure(figsize=(15,8))\nplt.plot(10**(np.array(y_test)))\nplt.plot(10**(y_elastic_pred))\nplt.legend(['Actual','Predicted'])\nplt.grid()\nplt.show()","96acb889":"## **Lasso Regression**","28e73e08":"**Finding Correlation Between Variables**","5530db19":"**ElasticNet Predication vs Actual**","1e785163":"**Linear Regression Predication vs Actual**","b9a9f4ec":"## **Checking for NuN values and Outliers**","67cddc42":"**Evaluation Matrics**","447c56a4":"**Dependent Variable**","1cd34987":"**Data Distribution and mean and median of each single Indpendent variable**","f9882f60":"**Evaluation Matrics**","51ce1ea1":"**Evaluation Matrics**","76a9d80d":"**Lasso Predication vs Actual**","49a21de3":"**Ridge Predication vs Actual**","5ffa0d5c":"Problem Statement - Yes Bank is a well-known bank in the Indian financial domain. Since 2018, it has been in the news because of the fraud case involving Rana Kapoor. Owing to this fact, it was interesting to see how that impacted the stock prices of the company and whether Time series models or any other predictive models can do justice to such situations. This dataset has monthly stock prices of the bank since its inception and includes closing, starting, highest, and lowest stock prices of every month. The main objective is to predict the stock\u2019s closing price of the month.","5e364d8c":"# **Linear Regression Model**","2f7d5b9a":"**Normalization**","edf968c9":"# **Yes Bank Stock Predication**\n\n\n\n\n","8469965c":"## **Ridge Linear Regression**","5c6c270d":"# **Exploratory Data Analysis**","fd153f5d":"**Evaluation Matrics**","93c310a2":"**Independent Variable**","e36b30ab":"### **Cross Validification**","0c621c0f":"**Evaluation Matrics**","dcaabcfd":"**Let's Get to know what is stock?**\n\nA Stock or share (also known as a company\u2019s 'equity') is a financial instrument that represents ownership in a company. Units of stock are called \"shares.\" Stocks are bought and sold predominantly on stock exchanges, though there can be private sales as well, and are the foundation of many individual investors' portfolios.","396b6734":"### **Cross Validification**","7a101671":"### **Cross Validification**","e5de5dfb":"**Train Test Split**","95862aa2":"**Ridge Predication vs Actual (After Validification)**","06387b7f":"**Evaluation Matrics**","5f42ab75":"# **Variable Identification and Understanding Data**","624e7483":"# **Data Exploration**","1dc092be":"This dataset has 185 observations in it with 5 columns(features)","b8e464a4":"## **Elastic Net Linear Regression**","36329125":"With the help of describe we can conclude that data is not normally distributed as mean is higher than median in all features","7678c246":"**Multicollinearity**","f79aaac5":"## **Linear Regrassion**","1a5e19d3":"# **Importing and Loading data**","57fca2fc":"**Lasso Predication vs Actual (After Validification)**","35e7720f":"**Evaluation Matrics**","ff241d7a":"**ElasticNet Predication vs Actual (After Validification)**"}}