{"cell_type":{"bafa1f23":"code","cbc3a639":"code","96b31d29":"code","0ef6f654":"code","eba1ffec":"code","e07d106e":"code","5dfd039e":"code","0448cf37":"code","fc4d71e8":"code","84a891b4":"code","7bedd473":"code","26961eb8":"code","951ec580":"code","a90ed4a5":"code","3be6998a":"markdown"},"source":{"bafa1f23":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt \nfrom sklearn.cluster import KMeans\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","cbc3a639":"data=pd.read_csv(\"..\/input\/customer-clustering\/segmentation data.csv\")\ndata.head()","96b31d29":"data.dtypes","0ef6f654":"data.shape","eba1ffec":"data.isnull().any()","e07d106e":"data['ID'].unique()\nlen(data['ID'].unique())","5dfd039e":"plt.scatter(data['Age'],data['Income'])\nplt.xlabel('Age')\nplt.ylabel('Income')\nplt.show()","0448cf37":"x=data[['Age','Income']]\nx.head()","fc4d71e8":"from sklearn.preprocessing import StandardScaler\nms=StandardScaler()\nstand=ms.fit_transform(x)","84a891b4":"wt=[]\nfor i in range(1, 10):\n    kmeans=KMeans(n_clusters=i,init= 'k-means++', max_iter=300, n_init=10, random_state=0)\n    kmeans.fit(stand)\n    wt.append(kmeans.inertia_)\nplt.plot(range(1, 10),wt)    \nplt.title(\"Elbow method\")\nplt.xlabel(\"No of Clusters\")\nplt.ylabel(\"wt\")\nplt.show()","7bedd473":"kmeans=KMeans(n_clusters=5,random_state=0)\nkmeans.fit(stand)","26961eb8":"prediction=kmeans.fit_predict(stand)\nprediction","951ec580":"new_data=data.copy()\nnew_data['cluster']=prediction\nnew_data.head()","a90ed4a5":"plt.scatter(new_data['Age'],new_data[\"Income\"],c=new_data['cluster'],cmap='rainbow')\nplt.xlabel('Age')\nplt.ylabel('Income')\nplt.show()","3be6998a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session"}}