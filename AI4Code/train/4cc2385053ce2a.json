{"cell_type":{"c0c933ed":"code","0669d764":"code","82c99908":"code","aa185cbb":"code","9bbf959d":"code","640b0cc9":"code","35dfaab6":"code","eaa5a8d5":"code","f6d95123":"code","e3f3a3f0":"code","a2b34126":"code","3757890f":"code","9ac40565":"code","1b949b13":"code","014e7277":"code","fcffc97a":"code","d3194099":"code","cc5de647":"code","8915f2d8":"code","5061f0ae":"code","b017830c":"code","e7ddf5e7":"code","1347ee7b":"code","45edac5d":"code","351492de":"code","027d7d72":"code","53a7ff7c":"code","25a2ef0e":"code","97709ce1":"code","84afc180":"code","2b0c3f87":"code","8961f98f":"code","b6d7d722":"code","56d240dc":"code","f23aeecd":"code","10d1f4e3":"code","5ed9c93c":"code","f3e9ff9f":"code","ddb69c98":"code","1aced03f":"code","073ec93d":"code","920f34de":"code","199daef2":"code","e4925f72":"code","9fb3008b":"code","5d63405e":"code","975c2aac":"code","24c63838":"code","3198b27c":"code","89e4e191":"code","c526c4b0":"code","310bc1cc":"code","f2728b8b":"code","c182e016":"code","591e7dea":"code","9b53a40a":"code","7034c75f":"code","08ed941f":"code","cc49cdcf":"code","fdc22097":"code","3d2d6fd4":"code","b3b531f9":"code","60b1917b":"code","f3321cc3":"code","3f92beee":"code","479f08c7":"code","9a0c0c3b":"code","13d6b44d":"code","e1da3794":"code","c4e1d20f":"code","f1f28acc":"code","02a82ffc":"code","34cf0348":"code","6daa2edd":"code","2ae65d10":"code","54fa38d5":"code","07957b2e":"code","e77eb139":"code","e8df3f7d":"code","1ea9cce4":"code","95382709":"code","c4a8ac56":"code","1a139a2f":"code","bf8c2f17":"code","42f6c0fd":"code","97d3da74":"code","b73eac0f":"code","94def9eb":"code","d899bdd7":"code","ff5b7597":"markdown","ffd43b7e":"markdown","4398322c":"markdown","0f440f5f":"markdown","a4ff94b0":"markdown","e566ba01":"markdown","05176440":"markdown","1a85e8db":"markdown","4db4063a":"markdown","0c12c7db":"markdown","394c4f1d":"markdown","d5854313":"markdown","ce535a80":"markdown","a4b52f8e":"markdown","25e30382":"markdown","b9294761":"markdown","28cd809f":"markdown","3401ffb2":"markdown","126df70b":"markdown","cba731dc":"markdown","822be7f3":"markdown","2d28d38d":"markdown"},"source":{"c0c933ed":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt","0669d764":"titanic_train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntitanic_test = pd.read_csv(\"..\/input\/titanic\/test.csv\")","82c99908":"titanic_train.tail()","aa185cbb":"titanic_test.tail()","9bbf959d":"titanic_train.info()","640b0cc9":"titanic_test.info()","35dfaab6":"titanic_train.describe().transpose()","eaa5a8d5":"titanic_train[titanic_train[\"Fare\"]>500]","f6d95123":"titanic_train[\"Fare\"].hist()","e3f3a3f0":"titanic_train.hist(figsize=(15, 10))","a2b34126":"sns.countplot(x=\"Survived\", data=titanic_train, palette=\"cool\")","3757890f":"survived = titanic_train[titanic_train[\"Survived\"] == 1]\nnot_survived = titanic_train[titanic_train[\"Survived\"] == 0]\n\nsurvived_percentage = len(survived) \/ len(titanic_train) * 100.0\nnot_survived_percentage = len(not_survived) \/ len(titanic_train) * 100.0\n\nprint(\"Verstorben: %i (%.1f%%)\"%(len(not_survived), not_survived_percentage))\nprint(\"\u00dcberlebt: %i (%.1f%%)\"%(len(survived), survived_percentage))","9ac40565":"sns.countplot(x=\"Sex\", data=titanic_train, palette=\"cool\")","1b949b13":"titanic_train[\"Sex\"].value_counts()","014e7277":"titanic_train.groupby(\"Sex\")[\"Survived\"].value_counts()","fcffc97a":"titanic_train.groupby(\"Sex\")[\"Survived\"].mean()","d3194099":"sns.barplot(x=\"Sex\", y=\"Survived\", data=titanic_train, palette=\"cool\")","cc5de647":"sns.countplot(x=\"Pclass\", data=titanic_train, palette=\"cool\")","8915f2d8":"titanic_train[\"Pclass\"].value_counts()","5061f0ae":"titanic_train.groupby(\"Pclass\")[\"Survived\"].value_counts()","b017830c":"titanic_train.groupby(\"Pclass\")[\"Survived\"].mean()","e7ddf5e7":"sns.barplot(x=\"Pclass\", y=\"Survived\", data=titanic_train, palette=\"cool\")","1347ee7b":"tabelle = pd.crosstab(titanic_train[\"Pclass\"], titanic_train[\"Sex\"])\nprint(tabelle)\n\ntabelle.div(tabelle.sum(1).astype(float), axis=0).plot(kind=\"bar\", stacked=True)\nplt.xlabel(\"Klasse\")\nplt.ylabel(\"Verteilung in %\")","45edac5d":"sns.catplot(x=\"Sex\", y=\"Survived\", hue=\"Pclass\", data=titanic_train, height=4, aspect=2, ci=False, kind=\"point\")","351492de":"sns.countplot(x=\"Embarked\", data=titanic_train, palette=\"cool\")","027d7d72":"titanic_train[\"Embarked\"].value_counts()","53a7ff7c":"titanic_train.groupby(\"Embarked\")[\"Survived\"].value_counts()","25a2ef0e":"titanic_train.groupby(\"Embarked\")[\"Survived\"].mean()","97709ce1":"sns.barplot(x=\"Embarked\", y=\"Survived\", data=titanic_train, palette=\"cool\", ci=False)","84afc180":"titanic_train.groupby(\"Embarked\")[\"Sex\"].value_counts()","2b0c3f87":"pd.crosstab(titanic_train[\"Embarked\"], titanic_train[\"Sex\"])","8961f98f":"titanic_train.groupby(\"Embarked\")[\"Age\"].mean()","b6d7d722":"titanic_train.groupby(\"Embarked\")[\"Fare\"].mean()","56d240dc":"titanic_train.groupby(\"Embarked\")[\"Pclass\"].value_counts()","f23aeecd":"titanic_train[\"Parch\"].value_counts()","10d1f4e3":"titanic_train.groupby(\"Parch\")[\"Survived\"].value_counts()","5ed9c93c":"titanic_train.groupby(\"Parch\")[\"Survived\"].mean()","f3e9ff9f":"sns.barplot(x=\"Parch\", y=\"Survived\", data=titanic_train, palette=\"cool\", ci=False)","ddb69c98":"titanic_train[\"SibSp\"].value_counts()","1aced03f":"titanic_train.groupby(\"SibSp\")[\"Survived\"].value_counts()","073ec93d":"titanic_train.groupby(\"SibSp\")[\"Survived\"].mean()","920f34de":"sns.barplot(x=\"SibSp\", y=\"Survived\", data=titanic_train, palette=\"cool\", ci=False)","199daef2":"sns.histplot(x=\"Age\", data=titanic_train)","e4925f72":"sns.histplot(x=\"Age\", hue=\"Pclass\", data=titanic_train)","9fb3008b":"sns.histplot(x=\"Age\", hue=\"Survived\", bins=30, data=titanic_train)","5d63405e":"sns.histplot(x=\"Age\", hue=\"Survived\", bins=30, data=titanic_train, cumulative=True)","975c2aac":"titanic_temp = titanic_train[titanic_train[\"Fare\"]<150]","24c63838":"sns.histplot(x=\"Fare\", bins=25, data=titanic_temp)","3198b27c":"sns.histplot(x=\"Fare\", bins=25, hue=\"Pclass\", data=titanic_temp)","89e4e191":"sns.histplot(x=\"Fare\", bins=25, hue=\"Sex\", data=titanic_temp)","c526c4b0":"sns.histplot(x=\"Fare\", bins=25, hue=\"Survived\", data=titanic_temp)","310bc1cc":"sns.histplot(x=\"Fare\", bins=25, hue=\"Survived\", data=titanic_temp, cumulative=True, kde=True)","f2728b8b":"titanic_train.drop(\"PassengerId\", axis=1).corr()","c182e016":"plt.figure(figsize=(10,7))\nsns.heatmap(titanic_train.drop(\"PassengerId\", axis=1).corr(), annot=True)","591e7dea":"titanic_train[titanic_train[\"Age\"].isnull()]","9b53a40a":"mean_age_class1 = titanic_train.Age[titanic_train[\"Pclass\"]==1].mean()\nmean_age_class2 = titanic_train.Age[titanic_train[\"Pclass\"]==2].mean()\nmean_age_class3 = titanic_train.Age[titanic_train[\"Pclass\"]==3].mean()\n\ntitanic_train.loc[(titanic_train[\"Age\"].isnull()) & (titanic_train[\"Pclass\"]==1), \"Age\"] = mean_age_class1\ntitanic_train.loc[(titanic_train[\"Age\"].isnull()) & (titanic_train[\"Pclass\"]==2), \"Age\"] = mean_age_class2\ntitanic_train.loc[(titanic_train[\"Age\"].isnull()) & (titanic_train[\"Pclass\"]==3), \"Age\"] = mean_age_class3\n\ntitanic_test.loc[(titanic_test[\"Age\"].isnull()) & (titanic_test[\"Pclass\"]==1), \"Age\"] = mean_age_class1\ntitanic_test.loc[(titanic_test[\"Age\"].isnull()) & (titanic_test[\"Pclass\"]==2), \"Age\"] = mean_age_class2\ntitanic_test.loc[(titanic_test[\"Age\"].isnull()) & (titanic_test[\"Pclass\"]==3), \"Age\"] = mean_age_class3","7034c75f":"mean_fare_class1 = titanic_train.Fare[titanic_train[\"Pclass\"]==1].mean()\nmean_fare_class2 = titanic_train.Fare[titanic_train[\"Pclass\"]==2].mean()\nmean_fare_class3 = titanic_train.Fare[titanic_train[\"Pclass\"]==3].mean()\n\ntitanic_train.loc[(titanic_train[\"Fare\"].isnull()) & (titanic_train[\"Pclass\"]==1), \"Fare\"] = mean_fare_class1\ntitanic_train.loc[(titanic_train[\"Fare\"].isnull()) & (titanic_train[\"Pclass\"]==2), \"Fare\"] = mean_fare_class2\ntitanic_train.loc[(titanic_train[\"Fare\"].isnull()) & (titanic_train[\"Pclass\"]==3), \"Fare\"] = mean_fare_class3\n\ntitanic_test.loc[(titanic_test[\"Fare\"].isnull()) & (titanic_test[\"Pclass\"]==1), \"Fare\"] = mean_fare_class1\ntitanic_test.loc[(titanic_test[\"Fare\"].isnull()) & (titanic_test[\"Pclass\"]==2), \"Fare\"] = mean_fare_class2\ntitanic_test.loc[(titanic_test[\"Fare\"].isnull()) & (titanic_test[\"Pclass\"]==3), \"Fare\"] = mean_fare_class3","08ed941f":"titanic_train.isnull().sum()","cc49cdcf":"titanic_test.isnull().sum()","fdc22097":"# male -> 0\n# female -> 1\n\nmapping = {\n    \"male\": 0,\n    \"female\": 1\n}\n\ntitanic_train[\"Sex_encoded\"] = titanic_train[\"Sex\"].map(mapping).astype(int)\ntitanic_test[\"Sex_encoded\"] = titanic_test[\"Sex\"].map(mapping).astype(int)","3d2d6fd4":"titanic_train.info()","b3b531f9":"titanic_train.head()","60b1917b":"titanic_train[\"deck\"] = titanic_train[\"Cabin\"].str.replace(\"[0-9]\", \"\").str.split(\" \", expand=True)[0]\ntitanic_test[\"deck\"] = titanic_test[\"Cabin\"].str.replace(\"[0-9]\", \"\").str.split(\" \", expand=True)[0]","f3321cc3":"titanic_train[\"deck\"]","3f92beee":"titanic_train.groupby(\"Pclass\")[\"deck\"].value_counts()","479f08c7":"titanic_train.groupby(\"deck\")[\"Survived\"].mean()","9a0c0c3b":"mapping_cabin = {\n    \"A\": 1,\n    \"B\": 1,\n    \"C\": 2,\n    \"D\": 2,\n    \"E\": 2,\n    \"F\": 3,\n    \"G\": 3,\n    \"T\": 1,\n    \"M\": 0\n}\n\ntitanic_train.loc[titanic_train[\"deck\"].isnull(), \"deck\"] = \"M\"\ntitanic_test.loc[titanic_test[\"deck\"].isnull(), \"deck\"] = \"M\"\n\ntitanic_train[\"deck_encoded\"] = titanic_train[\"deck\"].map(mapping_cabin).astype(int)\ntitanic_test[\"deck_encoded\"] = titanic_test[\"deck\"].map(mapping_cabin).astype(int)","13d6b44d":"titanic_train.groupby(\"deck_encoded\")[\"Survived\"].mean()","e1da3794":"titanic_train[\"family\"] = titanic_train[\"Parch\"] + titanic_train[\"SibSp\"] + 1\ntitanic_test[\"family\"] = titanic_test[\"Parch\"] + titanic_test[\"SibSp\"] + 1","c4e1d20f":"titanic_train[\"isAlone\"] = 0\ntitanic_train.loc[titanic_train[\"family\"] == 1, \"isAlone\"] = 1\n\ntitanic_test[\"isAlone\"] = 0\ntitanic_test.loc[titanic_test[\"family\"] == 1, \"isAlone\"] = 1","f1f28acc":"titanic_train.groupby(\"isAlone\")[\"Survived\"].mean()","02a82ffc":"plt.figure(figsize=(10,7))\nsns.heatmap(titanic_train.drop(\"PassengerId\", axis=1).corr(), annot=True)","34cf0348":"features = [\"Pclass\", \"Age\", \"Fare\", \"deck_encoded\", \"Sex_encoded\", \"isAlone\"]","6daa2edd":"X_train = titanic_train[features]\ny_train = titanic_train[\"Survived\"].copy()","2ae65d10":"from sklearn.model_selection import cross_val_score, cross_val_predict","54fa38d5":"from sklearn.linear_model import LogisticRegression\n\nlog_clf = LogisticRegression()\ncross_val_score(log_clf, X_train, y_train, cv=4, scoring=\"accuracy\")","07957b2e":"from sklearn.svm import SVC\n\nsvc_clf = SVC(random_state=42)\ncross_val_score(svc_clf, X_train, y_train, cv=4, scoring=\"accuracy\")","e77eb139":"from sklearn.ensemble import RandomForestClassifier\n\nrf_clf = RandomForestClassifier(random_state=42)\ncross_val_score(rf_clf, X_train, y_train, cv=4, scoring=\"accuracy\")","e8df3f7d":"y_pred = cross_val_predict(rf_clf, X_train, y_train, cv=4)\nprint(y_pred[:15].tolist())\nprint(y_train[:15].tolist())","1ea9cce4":"from sklearn.metrics import confusion_matrix\n\ndef plot_cf_matrix(predictions, actuals):\n    df_cm= pd.DataFrame(confusion_matrix(predictions, actuals), \n                        columns=np.unique(actuals),\n                        index=np.unique(actuals))\n    \n    df_cm.index.name = \"Actual\/Tats\u00e4chlicher Wert\"\n    df_cm.columns.name = \"Predicted\/Vorhergesagter Wert\"\n    \n    sns.heatmap(df_cm, cmap=\"Blues\", annot=True)","95382709":"plot_cf_matrix(y_pred, y_train)","c4a8ac56":"from sklearn.model_selection import GridSearchCV\n\nparam_grid = [{\n    \"n_estimators\": [250, 500, 750],\n    \"criterion\": [\"gini\", \"entropy\"],\n    \"max_depth\": [5, 10, 15, 20]\n}]\n\ngrid_search = GridSearchCV(rf_clf, \n                           param_grid, \n                           cv=5, \n                           scoring=\"accuracy\", \n                           return_train_score=True)\n\ngrid_search.fit(X_train, y_train)","1a139a2f":"grid_search.best_params_","bf8c2f17":"cvres = grid_search.cv_results_\n\nfor mean_score, params in zip(cvres[\"mean_test_score\"], cvres[\"params\"]):\n    print(mean_score, params)","42f6c0fd":"final_model = grid_search.best_estimator_","97d3da74":"titanic_test.isnull().sum()","b73eac0f":"titanic = titanic_test[features]\ntitanic","94def9eb":"final_predictions = final_model.predict(titanic)\n\ntitanic_test[\"Survived\"] = final_predictions\ntitanic_test.head()","d899bdd7":"# | PassengerID | Survived |\n\ntitanic_test[[\"PassengerId\", \"Survived\"]].to_csv(\"submission.csv\", index=False)","ff5b7597":"## Fare","ffd43b7e":"# Ticketpreis & \u00dcberleben","4398322c":"# Zusammenh\u00e4nge","0f440f5f":"### Info zu fehlenden Werten\nIn den Trainingsdaten fehlen Eintr\u00e4ge zu\n* Alter\n* Kabine\n* Zustiegshafen\n\nIn den Testdaten fehlen Eintr\u00e4ge zu\n* Alter\n* Kabine\n* Ticketpreis\n\nWichtig: **Alter** & **Ticketpreis**\n\n# Erste Analysen","a4ff94b0":"# Daten vorbereiten\n1. Fehlende Werte bereinigen (Fare, Age)\n1. Text\/Kategorien (Ordinal, Nominal) -> Zahlen\n\n## Alter","e566ba01":"# Geschlecht & \u00dcberlebenschance\nHaben mehr Frauen \u00fcberlebt?","05176440":"Dass der Zustiegshafen einen Unterschied mach erscheint *unlogisch*.\nWir \u00fcberpr\u00fcfen deshalb\n* in welche Klasse sind die Personen in den einzelnen H\u00e4fen zugestiegen\n* wie viel haben Sie f\u00fcr ihr Ticket bezahlt\n* wie alt waren sie\n* sind mehr M\u00e4nner oder Frauen eingestiegen","1a85e8db":"# Laden der Daten\n\nWir laden die Trainings und Testdaten in jeweils eigene Variablen.","4db4063a":"# Hyperparameter Tuning","0c12c7db":"## Modellauswahl","394c4f1d":"# Klasse & \u00dcberlebenschance\nHaben Personen aus der 1. Klasse bessere Chancen als Personen aus der 3. Klasse?","d5854313":"## SibSp","ce535a80":"# Finale Vorhersage","a4b52f8e":"# Modell\n\nOptimiert f\u00fcr *Accuracy*.\n\n## Feature Selection","25e30382":"## Family","b9294761":"# Alter & \u00dcberlebenschance\nKinder zuerst?","28cd809f":"# Feature Engineering\n* Cabin -> Deck Number\n* SibSp + Parch -> family\n* family <= 1 -> isAlone\n* name -> title\n\n## Cabin","3401ffb2":"# Zustiegshafen & \u00dcberlebenschancen","126df70b":"# Zusammenh\u00e4nge II","cba731dc":"# Klasse - Geschlecht & \u00dcberlebenschance","822be7f3":"Zugestiegene Personen aus **C** reisen teurer und in der ersten Klasse -> h\u00f6here \u00dcberlebenschance\n\n# Familien\n## Parch","2d28d38d":"## Geschlecht"}}