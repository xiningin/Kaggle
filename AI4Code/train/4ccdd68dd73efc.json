{"cell_type":{"24b79cfc":"code","46331b1d":"code","f3e8aa7d":"code","f82ac81e":"code","b8f00c87":"code","0b8f652b":"code","e8648d79":"code","60615cb9":"code","e150e03b":"code","1a86123e":"code","bf70ba4f":"code","f0d32bde":"code","cf2a4f9a":"code","1cc23890":"code","8536808b":"code","77b52601":"code","96b13edc":"code","1161f7b9":"code","408c94fc":"code","2a9e395e":"code","ea5f6a69":"code","f35fd696":"code","acb87456":"code","374ef06e":"code","3cbd1aab":"code","23f68986":"code","891bee5d":"code","24801159":"code","756347bf":"code","db48ccac":"code","2fc5008c":"code","b574eda8":"code","e3eda87b":"markdown","544cbb48":"markdown","561f2af4":"markdown","6cc3fefa":"markdown","9a8bc58b":"markdown","49230818":"markdown","912627cd":"markdown","a90921d0":"markdown","dee76780":"markdown","d556abaa":"markdown","0c3e8261":"markdown","4e534027":"markdown","6c5a09b0":"markdown","a193322e":"markdown","a0cd814a":"markdown","4a06ce94":"markdown","3b2c3207":"markdown","4fe3e340":"markdown","7495bb98":"markdown","d3ca414c":"markdown","e3232095":"markdown","c66fd088":"markdown","1e8f60d8":"markdown"},"source":{"24b79cfc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport math\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn import preprocessing\nfrom plotly import tools\nfrom IPython.core import display as ICD\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","46331b1d":"multichoice_data = pd.read_csv(\"..\/input\/multipleChoiceResponses.csv\")","f3e8aa7d":"multichoice_data.head()","f82ac81e":"print(multichoice_data.shape)\ntotal_count  = 23859\nquestions = multichoice_data.iloc[0]\nmultichoice_data_df = multichoice_data[1:]\n","b8f00c87":"multichoice_data_df['Q1'].value_counts()\/total_count*100","0b8f652b":"import plotly.offline as pyo\nimport plotly.graph_objs as go\n\nlabels = ['Male','Female','Prefer not to say','Prefer to self-describe']\nvalues = [ 81.436774,16.807075,1.425039,0.331112]\n\ntrace = go.Pie(labels=labels, values=values)\n\niplot([trace], filename='basic_pie_chart')\n","e8648d79":"multichoice_data_df['Q2'].value_counts()\n","60615cb9":"trace = go.Bar(\n    x=multichoice_data_df['Q2'].value_counts().index,\n    y=multichoice_data_df['Q2'].value_counts()\/total_count*100,\n    marker=dict(\n        color = np.random.randn(500), \n        colorscale='Viridis',\n        showscale=True\n    ),\n)\nlayout = go.Layout(\n    title='# of Respondents per Age Group'\n)\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"Age Group\")","e150e03b":"import colorlover as cl\nage = multichoice_data_df.groupby(['Q2','Q1']).size().reset_index()\ndata = []\ncolor_list = cl.scales['4']['div']['Spectral']\nn = 0\nfor x in ['Male','Female','Prefer not to say','Prefer to self-describe']:\n    tracen = go.Bar(\n    x=age[age['Q1']==x]['Q2'].values,\n    y=np.round(age[age['Q1']==x][0].values*100\/len(multichoice_data_df),2),\n    name=x,\n    marker=dict(color=color_list[n])\n)\n    n = n+1\n    data.append(tracen)\n\nlayout = go.Layout(\n    barmode='group',\n    title='Age Range ',\n            yaxis=dict(title='% of DDS'),\n            xaxis=dict(title = 'Age Range'),\n      )\n\nfig = go.Figure(data=data, layout=layout)\npy.offline.iplot(fig, filename='grouped-bar')","1a86123e":"print ('We have respondents from',len(set(multichoice_data_df['Q3'])), 'countries')\n\nlocation = (pd.DataFrame(pd.value_counts(multichoice_data_df.Q3)))\ndata = [ dict(\n        type = 'choropleth',\n        locations = location.index,\n        locationmode = 'country names',\n        z = np.round(location['Q3'].values*100\/len(multichoice_data_df),2),\n        text = location.index,\n        colorscale = 'Virdis',\n        autocolorscale = False,\n        reversescale = True,\n        marker = dict(\n            line = dict (\n                color = 'rgb(180,180,180)',\n                width = 0.5\n            ) ),\n        colorbar = dict(\n            autotick = False,\n            ticksuffix = '%',\n            title = '% of DDS'),\n      ) ]\n\nlayout = dict(\n    title = 'Kaggle 2018 Survey - DefinitelyDataScientists',\n    geo = dict(\n        showframe = False,\n        showcoastlines = False,\n        projection = dict(\n            type = 'Mercator'\n        )\n    ),\n    autosize=True\n)\n\nfig = dict( data=data, layout=layout )\npy.offline.iplot(fig, validate=False)\n\n","bf70ba4f":"multichoice_data_df['Q3'].value_counts()\/total_count*100","f0d32bde":"x = multichoice_data_df['Q3'].value_counts().index\ny = multichoice_data_df['Q3'].value_counts()\/total_count*100\ndf3 = pd.DataFrame(list(zip(x,y)),columns=['Countries', '% Users'])\ndf3 = df3.replace({'United States of America':'USA','United Kingdom of Great Britain and Northern Ireland': 'UK & Ireland', 'Iran, Islamic Republic of...':'Iran','Hong Kong (S.A.R.)':'Hong Kong'})\ndf3 = df3.drop(12)\n\nsns.barplot(x = df3['Countries'], y = df3['% Users'])\nplt.xlabel('Countries', fontsize=25)\nplt.ylabel('% Users', fontsize=25)\nplt.title('# of Respondents per Country')\nplt.xticks(rotation=90)\nsns.set(rc={'figure.figsize':(20,12)})\nsns.set(font_scale=2)  \n#pylab.rcParams['ytick.major.pad']='10'\nax.xaxis.labelpad = 15\nax.yaxis.labelpad = 15","cf2a4f9a":"multichoice_data_df['Q4'].value_counts()\/total_count*100","1cc23890":"trace = go.Bar(\n    x= multichoice_data_df['Q4'].value_counts().index,\n    y= multichoice_data_df['Q4'].value_counts()\/total_count*100,\n    marker=dict(\n        color = np.random.randn(150), \n        colorscale='Jet',\n        showscale=True\n    ),\n)\n\nlayout = go.Layout(\n    title='# of Respondents per Education Level'\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"Education level\")","8536808b":"import plotly.offline as pyo\nimport plotly.graph_objs as go\n\ndata = [go.Bar(\n            x = multichoice_data_df['Q5'].value_counts().index,\n            y = multichoice_data_df['Q5'].value_counts()\/total_count*100,\n            marker=dict(\n                color='rgb(58,200,225)',\n                line=dict(\n                    color='rgb(8,48,107)',\n                    width=1.5),\n            )\n    )]\n\n\nlayout = go.Layout(\n    title='# of Respondents per Undergraduate Major',\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename='basic-bar')\n","77b52601":"import plotly.offline as pyo\nimport plotly.graph_objs as go\n\ndata = [go.Bar(            \n            x = multichoice_data_df['Q6'].value_counts().index,\n            y = multichoice_data_df['Q6'].value_counts()\/total_count*100,\n            marker=dict(\n                color='rgb(49,100,100)',\n                line=dict(\n                    color='rgb(8,48,107)',\n                    width=1.5),\n            )\n    )]\nlayout = go.Layout(\n    title='# of Respondents per Job Title',\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename='basic-bar')","96b13edc":"import plotly.offline as pyo\nimport plotly.graph_objs as go\n\ndata = [go.Bar(            \n            x = multichoice_data_df['Q7'].value_counts().index,\n            y = multichoice_data_df['Q7'].value_counts()\/total_count*100,\n            marker=dict(\n                color='rgb(189,100,100)',\n                line=dict(\n                    color='rgb(8,48,107)',\n                    width=1.5),\n            )\n    )]\nlayout = go.Layout(\n    title='# of Respondents per Industry',\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename='basic-bar')","1161f7b9":"import plotly.offline as pyo\nimport plotly.graph_objs as go\n\ndata = [go.Bar(            \n            x = multichoice_data_df['Q8'].value_counts().index,\n            y = multichoice_data_df['Q8'].value_counts()\/total_count*100,\n            marker=dict(\n                color='rgb(150,180,150)',\n                line=dict(\n                    color='rgb(8,48,107)',\n                    width=1.5),\n            )\n    )]\nlayout = go.Layout(\n    title='# of Respondents per Years Job Experience',\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename='basic-bar')","408c94fc":"import plotly.offline as pyo\nimport plotly.graph_objs as go\n\ndata = [go.Bar(            \n            x = multichoice_data_df['Q9'].value_counts().index,\n            y = multichoice_data_df['Q9'].value_counts()\/total_count*100,\n            marker=dict(\n                color='rgb(44,144,154)',\n                line=dict(\n                    color='rgb(8,48,107)',\n                    width=1.5),\n            )\n    )]\nlayout = go.Layout(\n    title='# of Respondents per Salary Range',\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename='basic-bar')\n","2a9e395e":"import plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.tools as tls\n\ntrace = go.Scatter(\n    x= multichoice_data_df['Q10'].value_counts().index,\n    y=multichoice_data_df['Q10'].value_counts()\/total_count*100,\n    mode='markers',\n    marker=dict(\n        sizemode = 'diameter',\n        sizeref = 1,\n        size = 50,\n        color = np.random.randn(500), \n        colorscale='Portland',\n        showscale=True\n    ),\n)\n\nlayout = go.Layout(\n    title='# of Respondents per Employer ML Adoption Level'\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"ML Adoption Level\")\n\n","ea5f6a69":"multichoice_data_dft = multichoice_data_df.transpose()\nq11 = []\nfor i in range(14,21):\n    q11.append(multichoice_data_dft.iloc[i].count()\/total_count*100)\n\n   \ndf11 = pd.DataFrame(list(zip(Ind,q11)),columns=['Work Role', '% Users'])\ndf11 = df11.sort_values('% Users',ascending=False)\ntrace = go.Scatter(\n    x= df11['Work Role'],\n    y= df11['% Users'],\n    mode='markers',\n    marker=dict(\n        symbol = 'hexagon',\n        sizemode = 'diameter',\n        sizeref = 1,\n        size = 50,\n        color = np.random.randn(500), \n        colorscale='Cividis',\n        showscale=True\n    ),\n)\n\nlayout = go.Layout(\n    title='# of Respondents per Job Responsibility'\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"Analytics Tool\")","f35fd696":"trace = go.Scatter(\n    x= multichoice_data_df['Q17'].value_counts().index,\n    y= multichoice_data_df['Q17'].value_counts()\/total_count*100,\n    mode='markers',\n    marker=dict(\n        symbol = 'circle',\n        sizemode = 'diameter',\n        sizeref = 1,\n        size = 50,\n        color = np.random.randn(500), \n        colorscale='Electric',\n        showscale=True\n    ),\n)\n\nlayout = go.Layout(\n    title='# of Respondents per Most Commonly Used Programming Language'\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"Analytics Tool\")\n","acb87456":"import plotly.offline as pyo\nimport plotly.graph_objs as go\n\ndata = [go.Bar(            \n            x = multichoice_data_df['Q18'].value_counts().index,\n            y = multichoice_data_df['Q18'].value_counts()\/total_count*100,\n            marker=dict(\n                color='rgb(188,148,154)',\n                line=dict(\n                    color='rgb(12,48,100)',\n                    width=1.5),\n            )\n    )]\nlayout = go.Layout(\n    title='# of Respondents per Recommended Language to Learn First'\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename='basic-bar')\n\n","374ef06e":"trace = go.Scatter(\n    x= multichoice_data_df['Q20'].value_counts().index,\n    y= multichoice_data_df['Q20'].value_counts()\/total_count*100,\n    mode='markers',\n    marker=dict(\n        symbol = 'diamond',\n        sizemode = 'diameter',\n        sizeref = 1,\n        size = 30,\n        color = np.random.randn(50), \n        colorscale='Hot',\n        showscale=True\n    ),\n)\n\nlayout = go.Layout(\n    title='# of Respondents per Most Commonly Used Programming Language'\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"Analytics Tool\")","3cbd1aab":"trace = go.Bar(\n   x= multichoice_data_df['Q22'].value_counts().index,\n    y= multichoice_data_df['Q22'].value_counts()\/total_count*100,\n    marker=dict(\n        color=np.random.randn(50), \n        colorscale = 'Blackbody',\n        reversescale = True\n    ),\n)\n\nlayout = go.Layout(\n    title='# of Respondents per Most Commonly Used Data Visualization Library'\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"WorkDataVisualizations\")","23f68986":"multichoice_data_df['Q22'].value_counts()\/total_count*100","891bee5d":"import plotly.offline as pyo\nimport plotly.graph_objs as go\n\nlabels = ['Matplotlib','ggplot2','Seaborn','Plotly','D3','Shiny','Other','Bokeh','Leaflet','Lattice','Altair','Geoplotlib']\nvalues = [28.110985,12.058343,5.591182,2.263297,1.018484,0.834067,0.461042,0.322729 ,0.163460,0.138313,0.067061,0.037722]\n\ntrace = go.Pie(labels=labels, values=values)\nlayout = go.Layout(\n    title='# of Respondents per Time Spent Coding'\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"WorkDataVisualizations\")","24801159":"trace = go.Bar(\n   x= multichoice_data_df['Q24'].value_counts().index,\n   y= multichoice_data_df['Q24'].value_counts(),\n    marker=dict(\n        color=np.random.randn(50), \n        colorscale = 'Jet',\n        reversescale = True\n    ),\n)\nlayout = dict(\n    title='# of Respondents per Years Writing Code to Analyze Data'\n    )\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"TimeSpentStudying\")","756347bf":"trace = go.Scatter(\n    x= multichoice_data_df['Q25'].value_counts().index,\n    y= multichoice_data_df['Q25'].value_counts()\/total_count*100,\n    mode='markers',\n    marker=dict(\n        sizemode = 'diameter',\n        sizeref = 1,\n        size = 50,\n        color = np.random.randn(50), \n        colorscale='Picnic',\n        showscale=True\n    ),\n)\n\nlayout = go.Layout(\n    title='# of Respondents per Years Using Machine Learning Methods'\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"Analytics Tool\")","db48ccac":"multichoice_data_df['Q26'].value_counts()\/total_count*100","2fc5008c":"import plotly.offline as pyo\nimport plotly.graph_objs as go\n\nlabels = ['Probably yes','Definitely yes','Maybe','Probably not','Definitely not']\nvalues = [20.507984,19.632005,17.536359,13.252861,6.525839]\n\ntrace = go.Pie(labels=labels, values=values)\nlayout = go.Layout(\n    title='# of Respondents per --Do you consider yourself to be a data scientist'\n)\n\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"WorkDataVisualizations\")","b574eda8":"To Be cont..","e3eda87b":"**Q8 : How many years of experience do you have in your current role?**","544cbb48":"** Q3 : In which country do you currently reside?**","561f2af4":"\n**Q24 : How long have you been writing code to analyze data?\n**","6cc3fefa":"**Exploring Kaggle's 2018 ML and DS Survey! \nAs many of you may have noticed, Kaggle launched a large scale online survey. They have been so kind to release the results as a public dataset. In this kernel I try to get interesting insights from this survey and explain these insights to you to the best of my ability.\n**\n\nBasic Info\nThis section was copied from the overview section of \"2018 Kaggle ML & DS Survey Challenge\".\n\nKaggle statement\nThe survey was live for one week in October, and after cleaning the data we finished with 23,859 responses, a 49% increase over last year!There's a lot to explore here. The results include raw numbers about who is working with data, what\u2019s happening with machine learning in different industries, and the best ways for new data scientists to break into the field. We've published the data in as raw a format as possible without compromising anonymization, which makes it an unusual example of a survey dataset.\n\nSurvey Methodology\nThis survey received 23,859 usable respondents from 147 countries and territories. If a country or territory received less than 50 respondents, we grouped them into a group named \u201cOther\u201d for anonymity.\nMost of our respondents were found primarily through Kaggle channels, like our email list, discussion forums and social media channels.The survey was live from October 22nd to October 29th. We allowed respondents to complete the survey at any time during that window. The median response time for those who participated in the survey was 15-20 minutes.Not every question was shown to every respondent. You can learn more about the different segments we used in the schema.csv file.To protect the respondents\u2019 identity, the answers to multiple choice questions have been separated into a separate data file from the open-ended responses. We do not provide a key to match up the multiple choice and free form responses. Further, the free form responses have been randomized column-wise such that the responses that appear on the same row did not necessarily come from the same survey-taker.\n","9a8bc58b":"**Q10 : Does your current employer incorporate machine learning methods into their business?**","49230818":"**Q12_MULTIPLE_CHOICE : What is the primary tool that you use at work or school to analyze data? (include text response) - Selected Choice**","912627cd":"** Q22 : Of the choices that you selected in the previous question, which specific data visualization library or tool have you used the most? - Selected Choice**","a90921d0":"**Q2 : What is your age (# years)?**","dee76780":"**Q25 : For how many years have you used machine learning methods (at work or in school)?**","d556abaa":"**Q18 : What programming language would you recommend an aspiring data scientist to learn first? - Selected Choice**","0c3e8261":"**Q5 : Which best describes your undergraduate major? - Selected Choice**","4e534027":"**Q11 : Select any activities that make up an important part of your role at work: (Select all that apply) - Selected Choice - Analyze and understand data to influence product or business decisions**","6c5a09b0":"**Q9 : What is your current yearly compensation (approximate $USD)?**","a193322e":"**Q26 : Do you consider yourself to be a data scientist?**","a0cd814a":"**Q7 : In what industry is your current employer\/contract (or your most recent employer if retired)? - Selected Choice**","4a06ce94":"**Q1 : What is your gender? - Selected Choice**","3b2c3207":"** Q20 : Of the choices that you selected in the previous question, which ML library have you used the most? - Selected Choice**","4fe3e340":"**Q32 : What is the type of data that you currently interact with most often at work or school? - Selected Choice**","7495bb98":"**Q17 : What specific programming language do you use most often? - Selected Choice**","d3ca414c":"**Q6 : Select the title most similar to your current role (or most recent title if retired): - Selected Choice**","e3232095":"**Q13 : Which of the following integrated development environments (IDE's) have you used at work or school in the last 5 years? (Select all that apply) - Selected Choice - Jupyter\/IPython**","c66fd088":"**Q23 : Approximately what percent of your time at work or school is spent actively coding?**","1e8f60d8":"**Q4 : What is the highest level of formal education that you have attained or plan to attain within the next 2 years?**"}}