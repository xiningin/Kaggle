{"cell_type":{"e8c97356":"code","a7d3f22c":"code","061d2a03":"code","cd002b99":"code","7d1c5ee3":"code","f78a2a4f":"code","5c73494a":"code","acb5cb03":"code","4f61e6a8":"code","0aeeafb9":"code","3841c5c9":"code","6a9c1fa5":"code","92135068":"code","e24e03f5":"code","4de53871":"code","fea197e8":"code","981aa944":"code","abfb6fcc":"markdown","d4fd57c0":"markdown","d04efe96":"markdown","b751f9e3":"markdown","cb72e527":"markdown","52779012":"markdown","7797fe8b":"markdown","de2d75b9":"markdown","2a2597f8":"markdown","c1d90f72":"markdown","6d0fae1c":"markdown","8dba6bee":"markdown"},"source":{"e8c97356":"import warnings\nwarnings.filterwarnings('ignore')\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","a7d3f22c":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","061d2a03":"df_ = pd.read_csv(\"..\/input\/persona-data\/persona.csv\")\ndf = df_.copy()","cd002b99":"def check_df(dataframe, head=5, tail=3):\n    print(\"######################## Shape ########################\\n\")\n    print(dataframe.shape)\n    print(\"######################## Types ########################\\n\")\n    print(dataframe.dtypes)\n    print(\"######################## Head ########################\\n\")\n    print(dataframe.head(head))\n    print(\"######################## Tail ########################\\n\")\n    print(dataframe.tail(tail))\n    print(\"######################## NA ########################\\n\")\n    print(dataframe.isnull().sum())\n    print(\"\\n\\n######################## Quantiles ########################\\n\")\n    print(dataframe.quantile([0, 0.05, 0.50, 0.95, 0.99, 1]).T)\n\ncheck_df(df)","7d1c5ee3":"df.groupby([\"COUNTRY\",\"SOURCE\", \"SEX\", \"AGE\"])[\"PRICE\"].mean().sort_values(ascending = False)","f78a2a4f":"agg_df = df.groupby([\"COUNTRY\",\"SOURCE\", \"SEX\", \"AGE\"])[\"PRICE\"].mean().sort_values(ascending = False)\nagg_df = agg_df.reset_index()\nagg_df.head()","5c73494a":"agg_df[\"AGE\"].value_counts().sort_values(ascending=False).head(20)","acb5cb03":"def age_cat(age):\n    if age < 19:\n        return \"0_18\"\n    elif 19 <= age < 27:\n        return \"19_26\"\n    elif 27 <= age < 39:\n        return \"27_38\"\n    elif 39 <= age < 51:\n        return \"39_50\"\n    elif 51 <= age < 67:\n        return \"51_66\"\n    else:\n        return print(\"Age can be written just between 0 and 66.\")\n\nagg_df[\"AGE_CAT\"] = agg_df[\"AGE\"].apply(age_cat)","4f61e6a8":"sns.countplot(x=agg_df[\"AGE_CAT\"], data=agg_df);\nplt.show()","0aeeafb9":"agg_df[\"LEVEL_BASED_CUSTOMERS\"] = [(row[0].upper() + \"_\" + row[1].upper() + \"_\" + row[2].upper() + \"_\" + row[5]) for row in agg_df.values]","3841c5c9":"agg_df_clb = agg_df.groupby(\"LEVEL_BASED_CUSTOMERS\")[\"PRICE\"].mean()\nagg_df_clb = agg_df_clb.reset_index()\nagg_df_clb.head()","6a9c1fa5":"agg_df_clb[\"SEGMENT\"] = pd.qcut(agg_df_clb[\"PRICE\"], 4, labels = [\"D\", \"C\", \"B\", \"A\"])","92135068":"agg_df_clb.head()","e24e03f5":"agg_df_clb.groupby([\"SEGMENT\"])[\"PRICE\"].agg([\"min\", \"max\", \"mean\", \"sum\"])","4de53871":"def new_user():\n    user = []\n    COUNTRY = input(\"Plase type first 3 letter of your country.\")\n    user.append(COUNTRY)\n    PROCCESSOR = input(\"What is your proccessor? ANDROID \/ IOS ?\")\n    user.append(PROCCESSOR)\n    SEX = input(\"What is your gender? FEMALE \/ MALE ?\")\n    user.append(SEX)\n    AGE = int(input(\"How old are you?\"))\n    AGE_RANGE = age_cat(AGE)\n    user.append(AGE_RANGE)\n    user_print = (user[0].upper() + \"_\" + user[1].upper() + \"_\" + user[2].upper() + \"_\" + user[3])\n    agg_df_new_user = agg_df_clb.loc[agg_df_clb[\"LEVEL_BASED_CUSTOMERS\"] == user_print, [\"PRICE\",\"SEGMENT\"]][0:1]\n    print(\"\\n######################################################\")\n    print(\"User: \" + user_print)\n    print(\"\\n######################################################\")\n    print(\"Segment of user: \" + agg_df_new_user.iloc[0,1])\n    print(\"\\n######################################################\")\n    print(\"Mean price prediction of user: \" + str(f'{agg_df_new_user.iloc[0,0]:.2f}'))","fea197e8":"# new_user()\n\n#Inputs:\n\n#Plase type first 3 letter of your country. bra\n#What is your proccessor? ANDROID \/ IOS ? ios\n#What is your gender? FEMALE \/ MALE ? male\n#How old are you? 32\n\n#Outputs:\n\n######################################################\n#User: BRA_IOS_MALE_27_38\n\n######################################################\n#Segment of user: D\n\n######################################################\n#Mean price prediction of user: 31.57","981aa944":"# new_user()\n\n#Inputs:\n\n#Plase type first 3 letter of your country. can\n#What is your proccessor? ANDROID \/ IOS ? ANDROID\n#What is your gender? FEMALE \/ MALE ? female\n#How old are you? 19\n\n#Outputs:\n    \n######################################################\n#User: CAN_ANDROID_FEMALE_19_26\n\n######################################################\n#Segment of user: C\n\n######################################################\n#Mean price prediction of user: 32.01","abfb6fcc":"#### Add new column for the standardization of customers and get the mean price of age-segments.","d4fd57c0":"#### And create four Segments that we can easily organize the customers","d04efe96":"#### Prediction","b751f9e3":"#### *Description:*\n\n#### *There is a dataset from a game company, that contains the customers age, country, sex and their processors. Besides that I also have access to the price, that customer already paid for game apps.*\n\n#### *Trying a customer segmentation is an aim. And also at the end of the segmentation, we can try a price prediction with an user-input function.*","cb72e527":"#### See how the ages distributed and make new 5 kategories of ages.","52779012":"#### Some examples...","7797fe8b":"#### Let's check the mean price by country, source, sex, age breakdown.","de2d75b9":"#### Let's check quickly the segments and see what the difference is.\n#### We can say the Segment A is the most important customer group.\n#### B and C are very similar. It could be also one group here.","2a2597f8":"#### Import libraries","c1d90f72":"#### Reset index and check the new df.","6d0fae1c":"#### Get the dataset and check what there is... ","8dba6bee":"#### *Conclusion:*\n#### *Now we have standardized customers with their mean prices related with age-kategory and also segments.*\n#### *If we want to know, how much the new customer can pay when he\/she comes to the market, then we should create a some prediction funktion.*\n#### *We need here just our standardized informations, like country, proccessor, gender and age as an input.*"}}