{"cell_type":{"677a305a":"code","571bf980":"code","d7d4907f":"code","70afdd03":"code","5dc130bf":"code","8877d547":"code","976fcdf8":"code","f900073c":"code","ce889a74":"code","20f519f3":"code","3168ba7d":"code","68ae6927":"code","f7066345":"code","d110f649":"code","9a56d582":"code","f9fbb2b9":"code","39adaced":"code","d0c4337c":"code","f29b574d":"code","b74adb86":"code","61b68d45":"code","1388b4e4":"code","33d8a198":"code","6811c217":"code","029dcc2d":"code","58415213":"code","036aae5b":"code","9078cbff":"code","c9f47cca":"code","677d3028":"code","daa7657c":"code","c616b5e8":"code","65e89ea7":"code","80efb667":"code","c7e1e1a5":"code","4da29500":"code","010648b0":"code","9552d986":"markdown","ab60578c":"markdown","df23783c":"markdown","3f45cf6a":"markdown","d25a60cb":"markdown","8c9bce33":"markdown","2f1184de":"markdown","3b8c4e67":"markdown","39636008":"markdown","94d513a8":"markdown","f6543039":"markdown","2453aada":"markdown","6d2be7f2":"markdown","b76d12c6":"markdown","20b976bf":"markdown","c8c1c521":"markdown","05b6e6f4":"markdown","3e274f47":"markdown","16afb74f":"markdown","f2324f39":"markdown","1e9315f1":"markdown","a821caaa":"markdown","5e25cad5":"markdown","884283c0":"markdown","46d27488":"markdown","2b437f85":"markdown","629f72bb":"markdown","66354652":"markdown","fcf578a3":"markdown","11e957c7":"markdown","2641e165":"markdown","d9a62c0b":"markdown","bcc7c4d8":"markdown","f604a692":"markdown","81c9ec8d":"markdown","dfb916e5":"markdown"},"source":{"677a305a":"# Import libraries\nimport string\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nimport seaborn as sns \nfrom datetime import datetime, date\nimport scipy.stats as stats\nimport statistics as st\n\n# Define graphics style\nplt.style.use('seaborn-whitegrid')\n\n# Ignore warnings\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n              \n# Set precision to two decimals\npd.set_option(\"display.precision\", 2)","571bf980":"# Define functions to handle finishing times\n# Test data\n# HH:MM:SS  seconds\n# 01:00:01  3601\n# 00:00:35  35\n# 00:10:5   605  \n\n# Function to calculate the number of seconds from HH:MM:SS\n# This function is applied on the raw data for creating column TIME_ss\n# Returns the number of seconds as a number\ndef time_in_seconds(row):\n  if row['TIME'] == 'no time': \n    sec = np.NaN\n  else:\n    HH, MM, SS = str.split(row['TIME'], sep=':')\n    hh = int(HH)\n    mm = int(MM)\n    ss = int(SS)\n    sec = ss + 60 * mm + 3600 * hh\n  return sec\n\n# Function to calculate the number of seconds from HH:MM:SS\n# This function is applied on the results data for creating column TIME_ss\n# Returns the number of seconds as a number\ndef time_in_seconds_2(row, col):\n  HH, MM, SS = str.split(row[col], sep=':')\n  hh = int(HH)\n  mm = int(MM)\n  ss = int(SS)\n  sec = ss + 60 * mm + 3600 * hh\n  return sec  \n\n# Function to calculate the time as HH:MM:SS from the number of seconds\n# Returns HH:MM:SS as a string\ndef time_in_HHMMSS(ss):\n  hours, remainder = divmod(ss, 3600)\n  minutes, seconds = divmod(remainder, 60)\n  hours = int(hours)\n  minutes = int(minutes)\n  seconds = int(seconds)\n  if seconds < 10:\n    SS = '0' + str(seconds) \n  else:\n    SS = str(seconds)\n  if minutes < 10:\n    MM = '0' + str(minutes) \n  else:\n    MM = str(minutes)\n  if hours < 10:\n    HH = '0' + str(hours)\n  else:\n    HH = str(hours)\n  res = HH + ':' + MM +':' + SS\n  return res ","d7d4907f":"# Read data files\ndatapath = \"..\/input\/berlin-marathons-data\/\"\nfile1 = \"Berlin_Marathon_data_1974_2019.csv\"\nfile2 = \"Berlin_Marathon_weather_data_since_1974.csv\"\nmarathon_df = pd.read_csv(datapath + file1, sep=',')\nweather_df = pd.read_csv(datapath + file2, sep=',')","70afdd03":"marathon_df.sample(5)","5dc130bf":"marathon_df.info()","8877d547":"# Drop COUNTRY column\nmarathon_df.drop(columns='COUNTRY', inplace=True)\n\n# List unique values and nulls\nfor x in marathon_df.columns:\n  print(x)\n  print('Unique values :', marathon_df[x].unique())\n  print('Nbr of nulls: ', marathon_df[x].isnull().sum())\n  print()","976fcdf8":"# Harmonize types in AGE column\nmarathon_df['AGE'] = pd.to_numeric(marathon_df['AGE'], errors='coerce').astype(object)\n\n# Drop rows with NaN values in the AGE column\nmarathon_df = marathon_df[marathon_df['AGE'].isnull()==False]\n\n# Re-encode AGE column as integer\nmarathon_df['AGE'] = marathon_df['AGE'].astype(int)","f900073c":"# Create new column TIME_ss with the finish time in seconds\nmarathon_df['TIME_ss'] = marathon_df.apply(time_in_seconds, axis=1)\n\n# Remove nulls\nmarathon_df = marathon_df[marathon_df['TIME_ss'].isnull()==False]","ce889a74":"marathon_df.sample(5)","20f519f3":"marathon_df.info()","3168ba7d":"# Breakdown of male\/female records\nprint(\"Breakdown of males \/ females\")\nprint(marathon_df['GENDER'].value_counts())","68ae6927":"# Show the number of records (finishers) per age group\nprint(\"Number of finishers by age group\")\nprint(marathon_df['AGE'].value_counts())","f7066345":"# Time evolution of the number of finishers by gender\nfemale_finishers_by_year = marathon_df[marathon_df['GENDER']=='female'].groupby(by=['YEAR']).count()\nmale_finishers_by_year = marathon_df[marathon_df['GENDER']=='male'].groupby(by=['YEAR']).count()\nf, ax = plt.subplots(1,1, figsize=(12,3))\nplt.suptitle(\"Evolution of the number of finishers by gender\", fontsize=15)\nax.plot(female_finishers_by_year.index, \n        female_finishers_by_year['GENDER'], \n        label='female', \n        color='violet')\nax.plot(male_finishers_by_year.index, \n        male_finishers_by_year['GENDER'], \n        label='male',  \n        color='skyblue')\nax.set_xlabel('Year', fontsize='large')\nax.set_ylabel('Nbr of runners', fontsize='large')\nax.legend(loc='upper left', fontsize='large')\nplt.show()","d110f649":"# Frequency distribution of marathon finish times (in seconds) by gender\nf, ax = plt.subplots(1,2, figsize=(12, 3))\nplt.suptitle(\"Frequency distribution of marathon finish times (in seconds) by gender\", fontsize=15)\nax[0].hist(marathon_df[marathon_df['GENDER']=='female']['TIME_ss'], bins=100, label='female', color='violet', alpha=0.75)\nax[0].set_xlabel('Time in seconds', fontsize='large')\nax[0].set_ylabel('Frequency', fontsize='large')\nax[0].legend(loc='upper right', fontsize='large')\nax[1].hist(marathon_df[marathon_df['GENDER']=='male']['TIME_ss'], bins=100, label='male',  color='skyblue', alpha=0.75)\nax[1].set_xlabel('Time in seconds', fontsize='large')\nax[1].set_ylabel('Frequency', fontsize='large')\nax[1].legend(loc='upper right', fontsize='large')\nplt.show()","9a56d582":"# Distribution of finish times (in seconds) by age group and gender\nplt.figure(figsize=(16,6))\nplt.suptitle(\"Distribution of marathon finish times (in seconds) by age group and gender\", fontsize=18)\nsns.boxplot(x = \"AGE\", \n            y = \"TIME_ss\", \n            hue='GENDER', \n            data=marathon_df, \n            palette=['skyblue', 'violet'], \n            showfliers=False);\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=13)\nplt.xlabel('AGE GROUP', fontsize=14);\nplt.ylabel('TIME (seconds)', fontsize=14);","f9fbb2b9":"# Reorder columns\nweather_df = weather_df[['YEAR', 'AVG_TEMP_C', 'MAX_TEMP_C', 'MIN_TEMP_C', 'PRECIP_mm', 'ATMOS_PRESS_mbar', 'SUNSHINE_hrs', 'CLOUD_hrs']]\n\n# Show sample\nweather_df.sample(5)","39adaced":"weather_df.info()","d0c4337c":"# List unique values\nfor x in weather_df.columns:\n  print(x)\n  print('Unique values :', weather_df[x].unique())\n  print()","f29b574d":"# Statistical info of the weather data\nweather_df[['AVG_TEMP_C', 'MAX_TEMP_C', 'MIN_TEMP_C', 'PRECIP_mm', 'ATMOS_PRESS_mbar', 'SUNSHINE_hrs', 'CLOUD_hrs']].describe()","b74adb86":"# Time profile of weather variables\nweather_df.set_index('YEAR').plot(figsize=(12,12), subplots=True);","61b68d45":"# Correlation between weather variables\nsns.pairplot(weather_df.set_index('YEAR'), diag_kind='kde', size=1.4, corner=False);","1388b4e4":"# Merge and show processed marathon and weather data files\nmain_df = pd.merge(left=marathon_df, right=weather_df, how='left', on='YEAR')\nmain_df","33d8a198":"main_df.info()","6811c217":"# Analysis of correlation between weather variables and finishing time\nfig, ax = plt.subplots(figsize=(12,10))\nsns.heatmap(main_df.corr(method='pearson'), annot=True, cmap='coolwarm');","029dcc2d":"# Temperature bins and ranges\ntemp_bin_edges = [0,8,15,30]\ntemp_bin_labels = ['0-8','8-15','15-30']\n# Pressure bins and ranges\npress_bin_edges = [900,1013,1030]\npress_bin_labels = ['900-1013','1013-1030']\n# Precipitation bins and ranges\nprecip_bin_edges = [0,10,20,50]\nprecip_bin_labels = ['0-10','10-20','20-50']\n\n# Create categorical variable for weather conditions\nmain_df['MAX TEMP RANGE'] = pd.cut(x=main_df['MAX_TEMP_C'], bins=temp_bin_edges, labels=temp_bin_labels, include_lowest=True)\nmain_df['ATMOS PRESS RANGE'] = pd.cut(x=main_df['ATMOS_PRESS_mbar'], bins=press_bin_edges, labels=press_bin_labels, include_lowest=True)\nmain_df['PRECIPITATION RANGE'] = pd.cut(x=main_df['PRECIP_mm'], bins=precip_bin_edges, labels=precip_bin_labels, include_lowest=True)\n\n\nmain_df.sample(5)","58415213":"# Kolmogorov-Smirnov two-sample test (Null hypothesis: male and female finish times subpopulations belong to the same probability distribution)\nstats.ks_2samp(main_df[main_df['GENDER']=='female']['TIME_ss'], \n               main_df[main_df['GENDER']=='male']['TIME_ss'])","036aae5b":"time_columns = [('Marathon finish time', 'mean'),\n                ('Marathon finish time',  'std'),\n                ('Marathon finish time',  'min'),\n                ('Marathon finish time',  'max')]","9078cbff":"# Group by GENDER, AGE and MAX TEMP RANGE\nweather_effect_by_max_temp_range = main_df[['GENDER', 'AGE', 'TIME_ss', 'MAX TEMP RANGE']].groupby(by=['GENDER', 'AGE', 'MAX TEMP RANGE']).describe()\nweather_effect_by_max_temp_range.drop(columns=[('TIME_ss',   '25%'), ('TIME_ss',   '50%'),  ('TIME_ss',   '75%')], inplace=True)\nweather_effect_by_max_temp_range.fillna(value=0, inplace=True)\nweather_effect_by_max_temp_range = weather_effect_by_max_temp_range.rename(columns={'TIME_ss' : 'Marathon finish time', 'count' : 'n'}).astype(int)\nfor col in time_columns:\n  weather_effect_by_max_temp_range[col] = weather_effect_by_max_temp_range[col].apply(time_in_HHMMSS) \n  \n# Reformat female\/male side by side\nweather_effect_by_max_temp_range_females = weather_effect_by_max_temp_range.loc['female']\nweather_effect_by_max_temp_range_females.rename(columns={'Marathon finish time' : 'Marathon finish time (FEMALES)'}, inplace=True)\nweather_effect_by_max_temp_range_males = weather_effect_by_max_temp_range.loc['male']\nweather_effect_by_max_temp_range_males.rename(columns={'Marathon finish time' : 'Marathon finish time (MALES)'}, inplace=True)\nsummary_table_times_by_max_temp_range = pd.concat([weather_effect_by_max_temp_range_females, weather_effect_by_max_temp_range_males], axis=1)\n#summary_table_times_by_max_temp_range","c9f47cca":"# Group by GENDER, AGE and ATMOS PRESS RANGE\nweather_effect_by_atmos_press_range = main_df[['GENDER', 'AGE', 'TIME_ss', 'ATMOS PRESS RANGE']].groupby(by=['GENDER', 'AGE', 'ATMOS PRESS RANGE']).describe()\nweather_effect_by_atmos_press_range.drop(columns=[('TIME_ss',   '25%'), ('TIME_ss',   '50%'),  ('TIME_ss',   '75%')], inplace=True)\nweather_effect_by_atmos_press_range.fillna(value=0, inplace=True)\nweather_effect_by_atmos_press_range = weather_effect_by_atmos_press_range.rename(columns={'TIME_ss' : 'Marathon finish time', 'count' : 'n'}).astype(int)\nfor col in time_columns:\n  weather_effect_by_atmos_press_range[col] = weather_effect_by_atmos_press_range[col].apply(time_in_HHMMSS) \n  \n# Reformat female\/male side by side\nweather_effect_by_atmos_press_range_females = weather_effect_by_atmos_press_range.loc['female']\nweather_effect_by_atmos_press_range_females.rename(columns={'Marathon finish time' : 'Marathon finish time (FEMALES)'}, inplace=True)\nweather_effect_by_atmos_press_range_males = weather_effect_by_atmos_press_range.loc['male']\nweather_effect_by_atmos_press_range_males.rename(columns={'Marathon finish time' : 'Marathon finish time (MALES)'}, inplace=True)\nsummary_table_times_by_atmos_press_range = pd.concat([weather_effect_by_atmos_press_range_females, weather_effect_by_atmos_press_range_males], axis=1)\n#summary_table_times_by_atmos_press_range","677d3028":"# Group by GENDER, AGE and PRECIPITATION RANGE\nweather_effect_by_precipitation_range = main_df[['GENDER', 'AGE', 'TIME_ss', 'PRECIPITATION RANGE']].groupby(by=['GENDER', 'AGE', 'PRECIPITATION RANGE']).describe()\nweather_effect_by_precipitation_range.drop(columns=[('TIME_ss',   '25%'), ('TIME_ss',   '50%'),  ('TIME_ss',   '75%')], inplace=True)\nweather_effect_by_precipitation_range.fillna(value=0, inplace=True)\nweather_effect_by_precipitation_range = weather_effect_by_precipitation_range.rename(columns={'TIME_ss' : 'Marathon finish time', 'count' : 'n'}).astype(int)\nfor col in time_columns:\n  weather_effect_by_precipitation_range[col] = weather_effect_by_precipitation_range[col].apply(time_in_HHMMSS) \n  \n# Reformat female\/male side by side\nweather_effect_by_precipitation_range_females = weather_effect_by_precipitation_range.loc['female']\nweather_effect_by_precipitation_range_females.rename(columns={'Marathon finish time' : 'Marathon finish time (FEMALES)'}, inplace=True)\nweather_effect_by_precipitation_range_males = weather_effect_by_precipitation_range.loc['male']\nweather_effect_by_precipitation_range_males.rename(columns={'Marathon finish time' : 'Marathon finish time (MALES)'}, inplace=True)\nsummary_table_times_by_precipitation_range = pd.concat([weather_effect_by_precipitation_range_females, weather_effect_by_precipitation_range_males], axis=1)\n#summary_table_times_by_precipitation_range","daa7657c":"# Reconvert the results tables in HH:MM:SS values to seconds for charting\n\nfemale_col_list = [('Marathon finish time (FEMALES)', 'mean'),\n                   ('Marathon finish time (FEMALES)', 'min'),\n                   ('Marathon finish time (FEMALES)', 'max')]\n\nfor c in female_col_list: \n  weather_effect_by_max_temp_range_females[c] = weather_effect_by_max_temp_range_females.apply(time_in_seconds_2, args=[c], axis=1)\n  weather_effect_by_atmos_press_range_females[c] = weather_effect_by_atmos_press_range_females.apply(time_in_seconds_2, args=[c], axis=1)\n  weather_effect_by_precipitation_range_females[c] = weather_effect_by_precipitation_range_females.apply(time_in_seconds_2, args=[c], axis=1)\n\nmale_col_list = [('Marathon finish time (MALES)', 'mean'),\n                 ('Marathon finish time (MALES)', 'max'), \n                 ('Marathon finish time (MALES)', 'min')]\n\nfor c in male_col_list:\n  weather_effect_by_max_temp_range_males[c] = weather_effect_by_max_temp_range_males.apply(time_in_seconds_2, args=[c], axis=1)\n  weather_effect_by_atmos_press_range_males[c] = weather_effect_by_atmos_press_range_males.apply(time_in_seconds_2, args=[c], axis=1)\n  weather_effect_by_precipitation_range_males[c] = weather_effect_by_precipitation_range_males.apply(time_in_seconds_2, args=[c], axis=1)","c616b5e8":"summary_table_times_by_max_temp_range","65e89ea7":"# Charts of finish time by age group, gender and maximum temperature ranges\nfig, ax = plt.subplots(2, 3, figsize=(24,10))\n\n# FEMALES\nweather_effect_by_max_temp_range_females[('Marathon finish time (FEMALES)', 'mean')].unstack(level=1).plot(kind='line', \n                                                                                                          title='Average finish time by age group (FEMALES)', \n                                                                                                          ax=ax[0,0], \n                                                                                                          color=['violet', 'purple'])\nweather_effect_by_max_temp_range_females[('Marathon finish time (FEMALES)', 'max')].unstack(level=1).plot(kind='line', \n                                                                                                          title='Maximum finish time by age group (FEMALES)', \n                                                                                                          ax=ax[0,1], \n                                                                                                          color=['violet', 'purple'])\nweather_effect_by_max_temp_range_females[('Marathon finish time (FEMALES)', 'min')].unstack(level=1).plot(kind='line', \n                                                                                                          title='Minimum finish time by age group (FEMALES)', \n                                                                                                          ax=ax[0,2], \n                                                                                                          color=['violet', 'purple'])\n# MALES\nweather_effect_by_max_temp_range_males[('Marathon finish time (MALES)', 'mean')].unstack(level=1).plot(kind='line',\n                                                                                                       title='Average finish time by age group (MALES)', \n                                                                                                      ax=ax[1,0], \n                                                                                                      color=['skyblue', 'blue'])\nweather_effect_by_max_temp_range_males[('Marathon finish time (MALES)', 'max')].unstack(level=1).plot(kind='line', \n                                                                                                      title='Maximum finish time by age group (MALES)', \n                                                                                                      ax=ax[1,1], \n                                                                                                      color=['skyblue', 'blue'])\nweather_effect_by_max_temp_range_males[('Marathon finish time (MALES)', 'min')].unstack(level=1).plot(kind='line', \n                                                                                                      title='Minimum finish time by age group (MALES)', \n                                                                                                      ax=ax[1,2], \n                                                                                                      color=['skyblue', 'blue'])\nplt.show()","80efb667":"summary_table_times_by_atmos_press_range","c7e1e1a5":"# Charts of finish time by age group, gender and atmospheric pressure ranges\nfig, ax = plt.subplots(2, 3, figsize=(24,10))\n\n# FEMALES\nweather_effect_by_atmos_press_range_females[('Marathon finish time (FEMALES)', 'mean')].unstack(level=1).plot(kind='line', \n                                                                                                          title='Average finish time by age group (FEMALES)', \n                                                                                                          ax=ax[0,0], \n                                                                                                          color=['violet', 'purple'])\nweather_effect_by_atmos_press_range_females[('Marathon finish time (FEMALES)', 'max')].unstack(level=1).plot(kind='line', \n                                                                                                          title='Maximum finish time by age group (FEMALES)', \n                                                                                                          ax=ax[0,1], \n                                                                                                          color=['violet', 'purple'])\nweather_effect_by_atmos_press_range_females[('Marathon finish time (FEMALES)', 'min')].unstack(level=1).plot(kind='line', \n                                                                                                          title='Minimum finish time by age group (FEMALES)', \n                                                                                                          ax=ax[0,2], \n                                                                                                          color=['violet', 'purple'])\n# MALES\nweather_effect_by_atmos_press_range_males[('Marathon finish time (MALES)', 'mean')].unstack(level=1).plot(kind='line',\n                                                                                                       title='Average finish time by age group (MALES)', \n                                                                                                      ax=ax[1,0], \n                                                                                                      color=['skyblue', 'blue'])\nweather_effect_by_atmos_press_range_males[('Marathon finish time (MALES)', 'max')].unstack(level=1).plot(kind='line', \n                                                                                                      title='Maximum finish time by age group (MALES)', \n                                                                                                      ax=ax[1,1], \n                                                                                                      color=['skyblue', 'blue'])\nweather_effect_by_atmos_press_range_males[('Marathon finish time (MALES)', 'min')].unstack(level=1).plot(kind='line', \n                                                                                                      title='Minimum finish time by age group (MALES)', \n                                                                                                      ax=ax[1,2], \n                                                                                                      color=['skyblue', 'blue'])\n\nplt.show()","4da29500":"summary_table_times_by_precipitation_range","010648b0":"# Charts of finish time by age group, gender and precipitation ranges\nfig, ax = plt.subplots(2, 3, figsize=(24,10))\n\n# FEMALES\nweather_effect_by_precipitation_range_females[('Marathon finish time (FEMALES)', 'mean')].unstack(level=1).plot(kind='line', \n                                                                                                          title='Average finish time by age group (FEMALES)', \n                                                                                                          ax=ax[0,0], \n                                                                                                          color=['violet', 'purple'])\nweather_effect_by_precipitation_range_females[('Marathon finish time (FEMALES)', 'max')].unstack(level=1).plot(kind='line', \n                                                                                                          title='Maximum finish time by age group (FEMALES)', \n                                                                                                          ax=ax[0,1], \n                                                                                                          color=['violet', 'purple'])\nweather_effect_by_precipitation_range_females[('Marathon finish time (FEMALES)', 'min')].unstack(level=1).plot(kind='line', \n                                                                                                          title='Minimum finish time by age group (FEMALES)', \n                                                                                                          ax=ax[0,2], \n                                                                                                          color=['violet', 'purple'])\n# MALES\nweather_effect_by_precipitation_range_males[('Marathon finish time (MALES)', 'mean')].unstack(level=1).plot(kind='line',\n                                                                                                       title='Average finish time by age group (MALES)', \n                                                                                                      ax=ax[1,0], \n                                                                                                      color=['skyblue', 'blue', 'navy'])\nweather_effect_by_precipitation_range_males[('Marathon finish time (MALES)', 'max')].unstack(level=1).plot(kind='line', \n                                                                                                      title='Maximum finish time by age group (MALES)', \n                                                                                                      ax=ax[1,1], \n                                                                                                      color=['skyblue', 'blue', 'navy'])\nweather_effect_by_precipitation_range_males[('Marathon finish time (MALES)', 'min')].unstack(level=1).plot(kind='line', \n                                                                                                      title='Minimum finish time by age group (MALES)', \n                                                                                                      ax=ax[1,2], \n                                                                                                      color=['skyblue', 'blue', 'navy'])\n\nplt.show()","9552d986":"## Data pre-processing\n---","ab60578c":"The above boxplot chart shows the distribution of finish times by gender and age group based on five key data values: \n\n- minimum\n- first quartile (Q1)\n- median (mean value)\n- third quartile (Q3)\n- maximum.\n\nNote that outlier points have been removed for clarity.\n\nWe can see that **the optimal age of marathoin runners (attending to their performance) seems to be between 30 and 40 years of age.**\n\n\nFor additional details on how to interpret this chart you can have a look at the following URL:\n\nhttps:\/\/towardsdatascience.com\/understanding-boxplots-5e2df7bcbd51","df23783c":"The basic statistical parameters of the weather data and their time profile are shown in the next two output cells.","3f45cf6a":"Again in the context of the negliglible correlation of finish times with the precipitation, I still see some relevant findings here:\n\n- curves on the left column (average finish times) stay pretty close together, so the levels of rain do not seem to affect the average finish times.\n- curves on the right column (minimum - or best - finish times) show a widening gap from age 20 for males and age 30 for females, suggesting that higher precipitation levels were matched by a generalized worse performance across age levels above the aforementioned.\n\n","d25a60cb":"### Results of the analysis by precipitation levels","8c9bce33":"## Inspection and processing of the weather data\n---\n\nI will now inspect and process the weather data in a similar manner, Let\u00b4s start having a look at a sample of the the weather data file and a summary of its contents (number of entries and data types).","2f1184de":"### Libraries imports and general settings","3b8c4e67":"The histograms above show that the finish times have a bell-like shape that I will assume sufficient to accept the hypothesis of normality of the data.","39636008":"I need to do some further processing on the AGE and TIME columns.\n\n**AGE** \n\nThe AGE column contains a variety of formats and encodings. So for instance there is 40 (as integer) and 40.0 (as float). There are also a number of alphanumeric entries ('L3', 'D1', etc.) which will be discarded as their mapping to actual age values is not possible (unkonwn meaning).\n\nIt is worth noting here that the AGE column actually represents age ranges, as follows:\n\n    AGE    Age range\n    18        < 20\n    20      20 - 29\n    30      30 - 34\n    35      35 - 39\n    40      40 - 44\n    45      45 - 49\n    50      50 - 54\n    55      55 - 59\n    60      60 - 64\n    65      65 - 69\n    70      70 - 74\n    75      75 - 79  \n    80        > 80 \n\nSummarizing: I will harmonize the AGE column data types and will also assign unmapped values to NaN for later deletion.","94d513a8":"## Introduction\n---\n\nThe present notebook is a sample of the research work done on the Berlin marathon data for a non-profit organization associated to a top European university. The actual research consisted of three separate pieces, resulting in three articles being published in specialized literature. Due to confidentiality reasons, the full work can not be posted here, however I took the time to extract some parts of it to illustrate what was done.\n\nTwo data files were used in this research work: \n\n* An anonymized register of Berlin marathon runner\u2019s finishing times between 1974 and 2019, including the runner\u2019s finish time in the format HH:MM:SS, along with their sex and age, and the year of the marathon.\n\n* A register of the weather conditions during the days of the marathons, including temperature values (average, maximum and minimum), average atmospheric pressure and precipitation levels, along with the hours of sunshine and cloud cover.\n\nThe main aim of this work was to investigate the potential influence of environmental conditions such as temperature, precipitation, sunshine or atmospheric pressure on marathon race times in the \u2018Berlin Marathon\u2019 since its first edition in 1974 and until 2019.","f6543039":"In the context of the negligible correlation of the finish times with the atmospheric pressure:\n\n- the curves on the left charts (average finish times) stay very close together across all age ranges, particularly for male runners, re-inforcing the idea that the influence is minimum or non-existent; for female runners the dark curve (higher pressure) shows a sharp step between age groups 65 and 70..... which I am unsure what might mean!\n\n- once again, the central charts are not too meaningful as they represent maximum finish times, and given no outliers have been removed, they include excess finish times of runners whose only objective was to finish the race - you can see in the tables values of 7, 8 and even 9 hours finish times.\n\n- finally on the far right set of charts (minimum orr elite finish times) we see curves stay pretty close for males (with the exception of thee low pressure drop in age group 55) and a potential preference of higher pressure by males in age groups 50 to 70.","2453aada":"After all this pre-processing, the marathon data file contents summary and a random sample, are shown in the next cells.","6d2be7f2":"### Statistical significance","b76d12c6":"## Inspection and processing of marathon data\n---","20b976bf":"Since we get a p-value of 0.0 (which does not mean necessarily it is zero, but veeeeery small), smaller than 0.05, we reject the null hypothesis and accept that male and female finish times have different prrobabilistic distributions.\n\nAnd all that tongue twister just to prove what we already knew ;-)\n\nWell, getting this result here is not a surprise. However, this type of statistical significance test is of paramount importance in clinical studies and the like. When a group of researchers have data of an old treatment and collect data of a new treatment, they need to know that the differences observed are due to the statistical difference between thetreatments and not a result of chance. Only then can they decide if the new treatment will be more effective than the old one. So, yes, even if it looks unnecessary in this example, it is important in many other cases.","c8c1c521":"In the next cell, I show the output of the useful **sns pairplot** method, which shows the relationship between the different weather variables, with each individual variable density distribution plotted in the diagonal. Some obvious conclusions such as the positive correlations between the temperatures (MAX, MIN, AVG) and, conversely, the negative correlation between hours of SUNSHINE and CLOUD COVER, can easily bee recognized.  ","05b6e6f4":"Let\u00b4s have a look at **some general insights on the marathon data**.","3e274f47":"**TIME**\n\nNow, the TIME column is encoded in the form HH:MM:SS. Whilst this is appropiate for displaying the marathon finish times, these values need to be converted into seconds for processing. I will create a new TIME_ss column with that end.\n\nThere is also a number of missing (null) entries encoded as \"no time\" which I will remove.","16afb74f":"Before I continue with the actual analysis, I think it is neccessary to explain the requirement of the **statistical significance**.\n\nWhen researchers do this type of work, they are not only interested in the **descriptive statistics**. In fact, they are most often thinking in terms of **statistical inference**, that is, they expect to be able to draw conclusions from the analyzed sample that they can generalize or extrapolate to the full population (or let\u00b4s say future data). \n\nIn the case I will expose, I will be comparing the effect of three variables (the maximum temperature, the average level of precipitation and the average atmospheric pressure) on males and females running performance. \n\nSo the very first thing to do here is to prove that the differences we can observe between males and females performance are not a result of chance, or in other words, that there is a reason for those differences to exist, or as mathematicians like to say, those differences are statistically significant. Of course, intuition tells us this must be the case (at the end of the day, men and women are not exactly the same thing). But to prove such hypothesis, we need to run a **hypothesis test**.\n\nIn this case, I chose the **Kolmogorov-Smirnov two-sample (KS2) test** that allows to check if two sub-populations (males a females finish times) drawn from a data population (the full file of finish times) follow the same probabilistic distribution. Earlier I had already checked that the finish times for males and females both had a normal (Gaussian) distribution. However, this is not a requirement of this test, in fact, this test is particularly helpful as it can be used when the distribution of the samples being compared is unkonwn. However, accepting they are sufficiently Gaullsian (normal), I can also say that if the male and female sub-populations have the same distribution, then they must have the same mean and standard deviation parameters. And this will be the **null hypothesis** for the KS2 test.  \n\nThe test works in such way that we should reject the null hypothesis (in favour of the alternative one) when the **p-value** resulting of the test is less than the chosen significance level. The usual (default) significance level is usually 0.05, meaning we will reject the null hypothesis (that is, that male and female finishing times share the same statitical distribution) when our p-value is less than that, or in other words, that there is at least a 95% confidence that from the analyzed data the distributions must be different.\n\nSo let's see this at work.","f2324f39":"(end of notebook)","1e9315f1":"## Merge of marathon and weather data\n---\n\n\nNow, in order to perform more complex analysis on the potential influence of the weather conditions on the runners\u00b4performance, I need a single dataframe where each finisher's record holds the corresponding weather data. \n\nI can accomplish this by merging both datasets using the common key (that is the YEAR column).\n\nThe result is shown below.","a821caaa":"### Results of the analysis by atmospheric pressure","5e25cad5":"And that is all for this notebook.\n\nThe actual research was quite more comprehensive, with many more insights and cconclusions extracted... and we even managed to identify (to the extent possible) the ideal weather conditions for world record performance, but I had to leave some relevant stuff for the official publications.\n\nIf anyone would like to have a read at those articles, please send me a private message and I will point you in the right direction.\n\nI hope you enjoyed the analysis, please upvote me if you did. And if you ever need a data analyst... well, you know where to find me.","884283c0":"Below there is a random sample of the marathon data file, followed by a summary view of its contents.","46d27488":"## Analysis of the effect of the weather conditions on marathon runner\u00b4s performance by gender and age \n---\n\nAs said at the beginning, the main objective of this research work was to assess the influence of the weather conditions on the marathon runner's performance, which actually translates into any influence on the marathon finish time TIME_ss. However, it is even more interesting to conduct such analysis differentiating by gender. \n\nThe variables I will analyze here are the top temperatue (MAX_TEMP_C), the level of rain (PRECIP_mm) and the atmospheric pressure (ATMOS_PRESS_mbar).\n\nThese variables are continous in nature, but for this analysis I will create categorical variables (ranges) and map each record to its corresponding range. The ranges used are as follows: \n\n1. MAX TEMP RANGE with three segments (0 - 8, 8 - 15 and 15 - 30 degrees Celsius)\n2. PRECIPITATION RANGE with three segments (0 - 10, 10 - 20, 20 - 50 mm) \n3. ATMOS PRESS RANGE with two segments (900 - 1013 and 1013 - 1030 mbar)\n\nA sample of the resulting base dataset with the new categorical variables can be seen in the next cell.","2b437f85":"There are naturally 46 rows in the file, one for each year between 1974 and 2019. \n\nThe next cell shows the unique values in each column. ","629f72bb":"There are a few insights we can observe here:\n\n- from the two charts on the left (average finish times) we can see the higher temperature curves are over the lower temp curves, indicating worst times when temperatures were higher.\n- the max finish time charts (in the middle) seem to re-inforce the earlier observation.... although I believe the erratic shape of the curves show the \"popular\" character of the marathon where people without any sporting expectations beyond completing the race have massively participated - it was in fact a bit surprising to see older age groups performing better than younger groups.\n- finally, the two charts on the right side represent the minimum (best) finish times; unlike the two earlier groups, the darker curves (higher temps) stay below the light-coloured curves for all age ranges and genders. This seems to indicate those runners who achieved best finish times did so when the maximum temperature during the race were higher - in contrast with the average finish times, more influenced by runners of all performance tiers.\n- also in the far right charts (min finish times), there seems to be a growing gap between the curves from AGE = 35 (age group 35-40), so the temperature difference does not seem to have an influence in younger groups in the same way.","66354652":"### Methods definition","fcf578a3":"There are a few insights that can be observed here:\n\n- Not surprisignly, the finish time (TIME_ss) shows an statistically weak (r=0.17) but positive correlation with the age group (AGE). This is an expected result that we could observe already in the earlier boxplot chart.\n\n- Other noticeable (but weaker) correlation coefficients of the race finish times in our sample are with SUNSHINE_hrs (r=0.11) and MAX_TEMP_C (r=0.12), variables which are strongly correlated among them (r=0.66). Similarly, all temperature variables show a high correlation among them.\n\n- Interesting to note also is the fact that the variable YEAR shows weak but positive correlations with AGE (r=0.2) and TIME_ss (r=0.25) indicating that, as years went by, more older participants have chosen to participate in Berlin marathons (and consequently average finish times have also increased with the years.... whilst best times have kept decreasing!).\n\n- Similarly, YEAR shows a correlation with MAX_TEMP (r=0.13) and SUNSHINE (r=0.23) that suggests that the weather has been increasingly warmer and nicer with years (but I would not take this as far as to blame global warming, given the weak correlation - in fact, if you look carefully at the time profiles, this slight increase seems to have occurred in the first 20 years of the series, that is in the 70\u00b4s and 80\u00b4s, having leveled off from that point).\n\nRelevant results can be drawn by performing additonal analysis of correlation by gender and age groups, however I will omit these to keep things simple. At the end of the day, data analysis can get as complex as you would like, it all depends on what you want to dig out.","11e957c7":"## Correlation analysis\n---\n\nA basic correlation analysis can be easily conducted by displaying the base datafile correlation matrix (using the useful **sns heatmap** method).","2641e165":"And this will be the **base dataset** for further analysis work, containing **a total of 869474 records**. ","d9a62c0b":"### Results of the analysis by maximum temperature","bcc7c4d8":"### Data loading","f604a692":"Next cell shows all unique values in each column. The COUNTRY column will be discarded as it is mostly empty.","81c9ec8d":"In the following cells, I will do the slicing, grouping and re-formatting neccessary to display summary tables with the results of the analysis of the potential effects of these weather variables on the marathon finish time by age group and gender.\n\nThe values of the marathon finish times will be presented in terms of their **average value (mean)** and **standard deviation (std)** for each category within the weather variable considered. **Max** and **min** values in each category are also shown. The column named as \"n\" represents the number of samples in each category.","dfb916e5":"### Processing of the weather variables by age group and gender"}}