{"cell_type":{"4c735a96":"code","beb6fbb6":"code","9be9f75a":"code","63823db1":"code","7c60c798":"code","4b286917":"code","37754df3":"code","9258961a":"code","04a54a7b":"code","ba9fb642":"code","c070f5ac":"code","edbe8d18":"code","bcdb5465":"code","2eee57ac":"code","ed257967":"code","c5dc07ce":"code","357a20db":"code","ec5b9000":"code","b8aa24c5":"code","a9460254":"code","11bb40d8":"code","860f0a2f":"code","0892fc60":"code","5c1340b8":"code","e57feb48":"code","4894ae26":"code","f57f9181":"code","fb9fea5c":"code","79a534eb":"code","49d3a889":"code","02eb2436":"code","c788da45":"code","576079b9":"markdown","218ead2b":"markdown","e2aef5a3":"markdown","4486f5f3":"markdown","693885f9":"markdown","502bbd97":"markdown","ddf15e00":"markdown","846cd1f3":"markdown","126f984d":"markdown","dba9e9c9":"markdown","80fde0a5":"markdown","d833f92a":"markdown","728397ca":"markdown","432e3f58":"markdown","28581ed2":"markdown","64f31a0c":"markdown","77e8e3c3":"markdown","38b97ded":"markdown","c29cc3f9":"markdown","009a7957":"markdown","73757280":"markdown","48024b40":"markdown","848421b3":"markdown","3e5ccf28":"markdown","c1f12b8c":"markdown","0b07e33e":"markdown","89f94c6b":"markdown","d4c9ceb2":"markdown","3ff6a354":"markdown"},"source":{"4c735a96":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas_profiling","beb6fbb6":"data = pd.read_csv('..\/input\/diabetes.csv')\ndata.head()","9be9f75a":"pandas_profiling.ProfileReport(data)","63823db1":"data.shape","7c60c798":"data.isnull().sum()","4b286917":"# O1 = Q1-1.5(IQR) -> 0.082-(1.5*3.6)\n# O2 = Q3+1.5(IQR) -> 3.67+(1.5*3.6) =9\ndata2=data.copy()\ndel data2['Outcome']\nfor i in range(8):\n    col=data2.columns[i]\n    q3, q1 = np.percentile(data2[col], [75,25])\n    iqr = q3 - q1\n    o1=q1-1.5*iqr\n    o2=q3+1.5*iqr\n    lis=[]\n    for j in range(768):\n        if data2['{}'.format(col)][j]<=o2 and data['{}'.format(col)][j]>=o1:\n            lis.append(data2[col][j])\n    print(\"Outliers {} ->\".format(col),768-len(lis))","37754df3":"plt.figure(figsize=(8,8))\nsns.heatmap(data.corr(),annot=True,cmap='magma')","9258961a":"sns.countplot('Outcome',data=data)","04a54a7b":"data.describe()","ba9fb642":"data.info()","c070f5ac":"sns.boxplot('Outcome','Glucose',data=data)","edbe8d18":"sns.catplot('Glucose','Insulin',data=data,hue='Outcome')","bcdb5465":"# O1 = Q1-1.5(IQR) -> 0.082-(1.5*3.6)\n# O2 = Q3+1.5(IQR) -> 3.67+(1.5*3.6) =9\ndata3=data[['Glucose']]\nfor i in range(1):\n    col=data3.columns[i]\n    q3, q1 = np.percentile(data3[col], [75,25])\n    iqr = q3 - q1\n    o1=q1-1.5*iqr\n    o2=q3+1.5*iqr\n    lis=[]\n    mean=np.mean(data[col])\n    for j in range(506):\n        if data3['{}'.format(col)][j]>o2 or data3['{}'.format(col)][j]<o1:\n            data[col][j]=mean","2eee57ac":"sns.boxplot('Outcome','BloodPressure',data=data)","ed257967":"sns.jointplot('BloodPressure','Insulin',data=data,kind='kde',color='red')","c5dc07ce":"g=sns.catplot('BloodPressure','SkinThickness',data=data,kind='strip',hue='Outcome',legend_out=False)\ng.fig.set_size_inches(15,6)","357a20db":"sns.regplot('BloodPressure','SkinThickness',data=data,marker='*',color='red')","ec5b9000":"g=sns.catplot('BloodPressure','Age',data=data,hue='Outcome',kind='point',legend_out=False)\ng.fig.set_size_inches(15,6)","b8aa24c5":"g=sns.relplot('SkinThickness','Insulin',data=data,kind='line',hue='Outcome')\ng.fig.set_size_inches(15,6)","a9460254":"sns.boxenplot('Outcome','SkinThickness',data=data)","11bb40d8":"g=sns.relplot('Insulin','DiabetesPedigreeFunction',data=data,kind='scatter',hue='Outcome')\ng.fig.set_size_inches(15,6)","860f0a2f":"sns.jointplot('Insulin','DiabetesPedigreeFunction',kind='kde',color='y',data=data)","0892fc60":"sns.violinplot('Outcome','BMI',data=data,bw='scott',scale='area',split=False,inner='quartile')","5c1340b8":"data.head()","e57feb48":"data['BloodPressure'] = np.where(data['BloodPressure']==0, data['BloodPressure'].mean(), data['BloodPressure'])\ndata['BMI'] = np.where(data['BMI']==0, data['BMI'].mean(), data['BMI'])\ndata['Insulin'] = np.where(data['Insulin']==0, data['Insulin'].mean(), data['Insulin'])\ndata['SkinThickness'] = np.where(data['SkinThickness']==0, data['SkinThickness'].mean(), data['SkinThickness'])","4894ae26":"X=data.iloc[:,:-1].values\ny=data.iloc[:,-1].values","f57f9181":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test= train_test_split(X,y,test_size=0.2,random_state=0)","fb9fea5c":"'''from xgboost import XGBClassifier\nfrom sklearn.model_selection import cross_val_score,GridSearchCV\nparams = {\n     'learning_rate': [0.05,0.06],\n     'n_estimators': [1000,1100],\n     'max_depth':[7,8],\n     'reg_alpha':[0.3,0.4,0.5]\n    }\n \n# Initializing the XGBoost Regressor\nxgb_model = XGBClassifier()\n \n# Gridsearch initializaation\ngsearch = GridSearchCV(xgb_model, params,\n                    verbose=True,\n                    cv=10,\n                    n_jobs=-1)\ngsearch.fit(X,y) \n#Printing the best chosen params\nprint(gsearch.best_params_)'''","79a534eb":"import xgboost\nfrom xgboost import XGBClassifier\nrfc= XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n              colsample_bynode=1, colsample_bytree=1, gamma=0,\n              learning_rate=0.06, max_delta_step=0, max_depth=8,\n              min_child_weight=1, missing=None, n_estimators=1000, n_jobs=1,\n              nthread=None, objective='binary:logistic', random_state=0,\n              reg_alpha=0.5, reg_lambda=1, scale_pos_weight=1, seed=None,\n              silent=None, subsample=1, verbosity=1)\nrfc.fit(X_train,y_train)\ny_pred= rfc.predict(X_test)\ny_pred_prob=rfc.predict_proba(X_test)","49d3a889":"y_pred_prob=y_pred_prob[:,1]","02eb2436":"from sklearn.metrics import accuracy_score,classification_report,confusion_matrix\nprint(confusion_matrix(y_test,y_pred))\nprint(classification_report(y_test,y_pred))\nprint(accuracy_score(y_test,y_pred))","c788da45":"from sklearn.metrics import roc_curve\nfpr,tpr,thresholds=roc_curve(y_test,y_pred_prob)\nplt.plot(fpr,tpr)\nplt.xlim([0.0,1.0])\nplt.ylim([0.0,1.0])\nplt.title('ROC Curve')\nplt.xlabel('FalsePositiveRate')\nplt.ylabel('TruePositiveRate')\nplt.grid(True)\n","576079b9":"**More** skinthickness, will also be leading to **Diabetes**","218ead2b":"**Having 5 Outliers**","e2aef5a3":"### BMI","4486f5f3":"Transparent graph is showing the Variance in the Outcome, related to both of above mentioned variables...","693885f9":"* **1 Introduction**\n* **2 Load and check data**\n    * 2.1 load data\n    * 2.2 check for null and missing values\n    * 2.3 Outlier detection\n* **3 Feature analysis**\n    * 3.1 Numerical values\n    * 3.2 Categorical values\n* **4 Filling missing Values**\n* **5 Modeling**","502bbd97":"From SME, we came to know that, If insulin is low, and patient is Diabetic --> BP will be **HIGH**\n<br>No other relation exist between, Insulin and BP...","ddf15e00":"Linear trend!!! But nothing surprising about it...","846cd1f3":"# Load and Check Data","126f984d":"### SkinThickness","dba9e9c9":"### Removing Zeros...","80fde0a5":"We have got our data!!!","d833f92a":"# Introduction","728397ca":"No NULL values exist! Thats a good news...","432e3f58":"Hello all! In this kernel, we will be going through Exploratory Data Analysis of different features of the dataset, and Predict whether the particular person will be having a **Diabetes** or not!\n\nBeing a beginner in building an interactive Kernels, please if you get doubt in any code, raise a question in the comments box below...","28581ed2":"### Insulin","64f31a0c":"Low DPF, Low Insulin(not zero) --> Outcome-0 (most probably)<br>\nHigh DPF, Low Insulin --> Outcome-1 (most probably)<br>\nLow DPF, High Insulin --> Outcome-1 (most probably)<br>\nHigh DPF, High Insulin --> Outcome-0 (most probably)","77e8e3c3":"### Null\/Missing values","38b97ded":"You can check that, Now there is no **Outliers** left for 'Glucose' column!","c29cc3f9":"*People having same BP, but of greater age, are More prone to Diabetes*","009a7957":"> Clearly, we can see that, a person with High level of Glucose, but having a approximate 0 insulin level, will be a Diabetic patient (most probably)","73757280":"# Feature Analysis","48024b40":"### Blood Pressure","848421b3":"## Machine Learning","3e5ccf28":"![image.png](attachment:image.png)","c1f12b8c":"Higher BP, no matter what the skinthickness is, Most probably patient will be a diabetic one...","0b07e33e":"## Numerical Data","89f94c6b":"### Outlier Detection","d4c9ceb2":"### Glucose","3ff6a354":"### UPVOTE, if you like :)"}}