{"cell_type":{"9256f560":"code","cb48308e":"code","7298be0e":"code","5cfe94ea":"code","6ba3fb8b":"code","d6a4ec3b":"code","67fac6e3":"code","64a7e9d8":"code","a606795a":"code","7a42765a":"code","be3bd7cf":"code","fc9ecced":"code","38f89b6a":"code","eb50e975":"code","0393239c":"code","8a55c996":"code","30e129ba":"code","eb74a364":"code","092f0de3":"code","4ec78371":"code","31f7da3e":"code","428dd57b":"code","27f205e7":"code","cbd466d2":"markdown","9bc6ba21":"markdown","f3f9458b":"markdown","8ab224eb":"markdown","f717da08":"markdown","2f706ae3":"markdown","b6fecffd":"markdown","972a49e3":"markdown","93f5b475":"markdown","0d4fcaab":"markdown","3fc12610":"markdown","3cfbc85d":"markdown"},"source":{"9256f560":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\n%matplotlib inline\n","cb48308e":"df=pd.read_csv('..\/input\/real-estate-price-prediction\/Real estate.csv')","7298be0e":"df.shape","5cfe94ea":"df.head()","6ba3fb8b":"df.info()","d6a4ec3b":"sns.pairplot(df)","67fac6e3":"X=df.drop('Y house price of unit area', axis=1) \ny=df['Y house price of unit area']","64a7e9d8":"from sklearn.preprocessing import PolynomialFeatures\npolynomial_converter= PolynomialFeatures(degree=2, include_bias=False)\npoly_features=polynomial_converter.fit_transform(X)\npoly_features.shape","a606795a":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(poly_features, y, test_size=0.3, random_state=101)","7a42765a":"from sklearn.preprocessing import StandardScaler\nscaler= StandardScaler()\nscaler.fit(X_train)\nX_train= scaler.transform(X_train)\nX_test= scaler.transform(X_test)\n","be3bd7cf":"from sklearn.linear_model import Ridge\nridge_model= Ridge(alpha=0.5)\nridge_model.fit(X_train, y_train)","fc9ecced":"#predicting y_test after training the model\ny_pred= ridge_model.predict(X_test)","38f89b6a":"#considering fitness metrics\n\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error\nMAE= mean_absolute_error(y_test, y_pred)\nMSE= mean_squared_error(y_test, y_pred)\nRMSE= np.sqrt(MSE)\npd.DataFrame([MAE, MSE, RMSE], index=['MAE', 'MSE', 'RMSE'], columns=['metrics for Ridge alpha=0.5'])","eb50e975":"from sklearn.linear_model import RidgeCV\nridge_cv_model=RidgeCV(alphas=(0.1, 1.0, 10.0), scoring='neg_mean_absolute_error')\nridge_cv_model.fit(X_train, y_train)\nridge_cv_model.alpha_","0393239c":"#predicting y_test after training the model and considering fitness metrics\n\ny_pred_ridge= ridge_cv_model.predict(X_test)\nMAE_ridge= mean_absolute_error(y_test, y_pred_ridge)\nMSE_ridge= mean_squared_error(y_test, y_pred_ridge)\nRMSE_ridge= np.sqrt(MSE_ridge)\npd.DataFrame([MAE_ridge,MSE_ridge,RMSE_ridge], index=['MAE', 'MSE', 'RMSE'], columns=['metrics for Ridge alpha=10'])","8a55c996":"# considering coefficient\nridge_cv_model.coef_","30e129ba":"from sklearn.linear_model import LassoCV\nlasso_cv_model= LassoCV(eps=0.01, n_alphas=100, cv=5,max_iter=10000, tol=0.0001)\nlasso_cv_model.fit(X_train, y_train)\nlasso_cv_model.alpha_","eb74a364":"#predicting y_test after training the model and considering fitness metrics\n\ny_pred_lasso= lasso_cv_model.predict(X_test)\nMAE_Lasso_cv= mean_absolute_error(y_test, y_pred_lasso)\nMSE_Lasso_cv= mean_squared_error(y_test, y_pred_lasso)\nRMSE_Lasso_cv= np.sqrt(MSE_Lasso_cv)\npd.DataFrame([MAE_Lasso_cv,MSE_Lasso_cv,RMSE_Lasso_cv], index=['MAE', 'MSE', 'RMSE'], columns=['metrics for LassoCV alpha=0.12'])","092f0de3":"lasso_cv_model.coef_","4ec78371":"from sklearn.linear_model import ElasticNetCV\nelastic_model= ElasticNetCV(l1_ratio=[0.1, 0.5, 0.7, 0.9, 0.95, 0.99, 1],cv=5, max_iter=100000)\nelastic_model.fit(X_train, y_train)\nelastic_model.l1_ratio_\n","31f7da3e":"y_pred_elastic=elastic_model.predict(X_test)","428dd57b":"MAE_Elastic= mean_absolute_error(y_test, y_pred_elastic)\nMSE_Elastic= mean_squared_error(y_test, y_pred_elastic)\nRMSE_Elastic= np.sqrt(MSE_Elastic)\npd.DataFrame([MAE_Elastic,MSE_Elastic,RMSE_Elastic], index=['MAE', 'MSE', 'RMSE'], columns=['metrics for ElasticCV l1=0.99'])","27f205e7":"data = {'Metrics': [MAE_ridge,MSE_ridge,RMSE_ridge,MAE_Lasso_cv,MSE_Lasso_cv,RMSE_Lasso_cv,MAE_Elastic,MSE_Elastic, RMSE_Elastic], 'Model': ['RidgeCV','RidgeCV','RidgeCV','LassoCV','LassoCV','LassoCV','ElasticNetCV','ElasticNetCV','ElasticNetCV']}\n\npd.DataFrame(data, index=['MAE', 'MSE', 'RMSE','MAE', 'MSE', 'RMSE','MAE', 'MSE', 'RMSE'])","cbd466d2":"# Dividing Dataset into train and test rows ","9bc6ba21":"# Overview of Dataset","f3f9458b":"# Choosing Best Alpha through *cross validation*(cv)(k_fold)\n\nIn order to decreasing of **data leakage**, Cross validation methode would be helpful. (dividing data to **K fold** and iterate the **train_test** method more and more to find best result)\n\n![cross_validation.png](attachment:37305c56-eb1e-4d73-b882-df0bd618e7c2.png)","8ab224eb":"# ElasticNet\nHybrid of **Ridge** and **Lasso** \n![ElasticNet.png](attachment:c4c1e795-2c06-4791-a515-b68f6e709943.png)","f717da08":"# Ridge regression","2f706ae3":"# Standardization\nBefore **Regularization** process, we must **standard the scale** of our features. WHY?\n\n **Ridge methode** is going to add penalty on sum of coefficients square in cost function (RMSE), so it is necesserry that all coefficients have **same scale**.\n \n   features are rescaled to standard distribution with **Mean=0**,**std=1**.\n ![standard.jpeg](attachment:40bd9de8-1078-4ef4-9b09-7648a2b82378.jpeg)\n","b6fecffd":"# Generating Polyfeatures","972a49e3":"# Importing necessary libraries","93f5b475":"**Overview**\n\nAccording to #Realestate Dataset which has been attached here, there are 6 features including:\" transcation date, house age,distance to nearest MRT station, number of convenient stores, latitude and longtitude\" beside having \"house price of unit area\" as a target variable . \nIn Plain Linear regression is more likely we are facing  **overfitting** and **collinearity** that cause decreasing of accuracy in our model. With increasing model complexity and features, it is more possible overfitting will happen.Morever the accuracy and fitness of the model would be evaluated by sklearn metrics(MAE,MSE,RMSE).\n\n![b1ceb55e-b755-4910-9be2-8b4bd567cfdd.png](attachment:5a2e0288-66cb-42e3-959f-2520efcedbe4.png)\n\nIn this case that complexity and numbers of features are high,we will deal with such a situation through \n* Ridge regression\n* Lasso regression\n* ElasticNet(Hybrid of lasso and ridge)\n\nwhich base of all of them are on **adding penalty** to cost function**(MSE,RMSE)**.","0d4fcaab":"# Identifying features and target variable","3fc12610":"# Lasso_CV regression","3cfbc85d":"# Pairplot\nwe examin all **mutual relationship** between variables."}}