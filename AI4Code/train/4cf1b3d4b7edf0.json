{"cell_type":{"7237a1dc":"code","cb9bab65":"code","8d907741":"code","beaad5da":"code","460b4694":"code","2afc1469":"code","a7d34764":"code","c6ef0b2f":"code","6de9de87":"code","27fe3a4c":"code","71a126ed":"code","515536f1":"code","3bf428c3":"code","00bb6084":"code","57b1c624":"code","3543dd9f":"code","ddb4a026":"code","2678d42a":"code","df53da40":"code","8ca3f77b":"code","bb577dc3":"code","b9010472":"code","d19dcd2f":"code","f08ef46f":"code","3f2b8661":"code","8611bbd4":"code","79718ccc":"code","db3ad566":"code","3e1a181b":"code","3efa43a8":"code","5b56d155":"code","309f11cb":"code","7284fb6c":"code","8d5c74c6":"code","fc40c7f5":"code","ce313076":"code","ef3654bb":"code","73e9f4a9":"code","973bf1ea":"code","d802819a":"code","578c55f7":"code","155b0b18":"markdown","44b66ec2":"markdown","c0ef53e4":"markdown","ca67eeaa":"markdown","eaf2cd0d":"markdown","1b96cb04":"markdown","8f5afa59":"markdown","e0af977f":"markdown","f7d59fd1":"markdown","d69358b7":"markdown","032d725c":"markdown","f1855c1f":"markdown","b67784d2":"markdown","45954068":"markdown","bdec0e97":"markdown","bcb0613d":"markdown"},"source":{"7237a1dc":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom sklearn.ensemble import ExtraTreesRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import RandomizedSearchCV\nimport pickle\n","cb9bab65":"df = pd.read_csv('..\/input\/car-price-prediction\/car data.csv')","8d907741":"df.shape\n","beaad5da":"df.head()","460b4694":"print(df['Seller_Type'].unique())","2afc1469":"df.columns\n","a7d34764":"df.isnull().sum()","c6ef0b2f":"df.describe()","6de9de87":"final_dataset = df[['Year', 'Selling_Price', 'Present_Price', 'Kms_Driven',\n       'Fuel_Type', 'Seller_Type', 'Transmission', 'Owner']]\n      ","27fe3a4c":"final_dataset.head()","71a126ed":"final_dataset['Current_year']=2021","515536f1":"final_dataset.head()","3bf428c3":"final_dataset['No_year']=final_dataset['Current_year']-final_dataset['Year']","00bb6084":"final_dataset.head()","57b1c624":"### Delete Year column","3543dd9f":"final_dataset.drop(['Year'],axis=1,inplace=True) ","ddb4a026":"final_dataset.head()","2678d42a":"### Delete Current_Year column","df53da40":"final_dataset.drop(['Current_year'],axis=1,inplace=True)\nfinal_dataset.head()","8ca3f77b":"final_dataset=pd.get_dummies(final_dataset,drop_first=True)\nfinal_dataset.head()","bb577dc3":"final_dataset.corr()","b9010472":"# from seaborn library\nsns.pairplot(final_dataset)","d19dcd2f":"# from matplotlib library\n\ncorrmat=final_dataset.corr()\ntop_corr_features=corrmat.index\nplt.figure(figsize=(20,10))\n\n#plot heatmap\n\ng=sns.heatmap(final_dataset[top_corr_features].corr(),annot=True,cmap=\"RdYlGn\")","f08ef46f":"final_dataset.head()","3f2b8661":"# Independent and dependent features:\nX = final_dataset.iloc[:,1:]\n\nY = final_dataset.iloc[:,0]","8611bbd4":"X.head()","79718ccc":"Y.head()","db3ad566":"### feature Importance\n# from sklearn.ensemble import ExtraTreesRegressor\nmodel=ExtraTreesRegressor()\nmodel.fit(X,Y)","3e1a181b":"print(model.feature_importances_)","3efa43a8":"feat_importances=pd.Series(model.feature_importances_, index=X.columns)\nfeat_importances.nlargest(5).plot(kind='barh')\nplt.show()","5b56d155":"from sklearn.model_selection import train_test_split\n\nX_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2)","309f11cb":"X_train.shape","7284fb6c":"from sklearn.ensemble import RandomForestRegressor\nrf_Random=RandomForestRegressor()","8d5c74c6":"### Hypoparameters","fc40c7f5":"n_estimators=[int(x) for x in np.linspace(start = 100,stop=1200,num=12)]\nprint(n_estimators)","ce313076":"### Randomized Search cv","ef3654bb":"# No of trees in random forest\nn_estimators=[int(x) for x in np.linspace(start = 100, stop=1200, num=12)]\n\n# no of features to consider at every split\nmax_features=['auto','sqrt']\n\n#Max no of level in trees\nmax_depth=[int(x) for x in np.linspace(5,30, num=6)]\n\n# maxDepth.appends(None)\n# minimum no of samples req to split a node\n\nmin_samples_split=[2,5,10,100]\n\n# minimum no of samples req at each leaf node\nmin_samples_leaf = [1,2,5,10]","73e9f4a9":"random_grid = {'n_estimators':n_estimators,\n                \"max_features\":max_features,\n                \"max_depth\":max_depth,\n                \"min_samples_split\":min_samples_split,\n                'min_samples_leaf':min_samples_leaf}\nprint(random_grid)","973bf1ea":"rf = RandomForestRegressor()","d802819a":"rf_Random = RandomizedSearchCV(estimator=rf, param_distributions =random_grid,scoring='neg_mean_squared_error',n_iter=10,cv=5,verbose=2,random_state=42,n_jobs=1)","578c55f7":"rf_Random.fit(X_train,Y_train)","155b0b18":"### check missing and null values","44b66ec2":"### Plot graph of feature importances for better visualization\n","c0ef53e4":"### Looking for summary","ca67eeaa":"### Shape of Data","eaf2cd0d":"import numpy as np\nfrom sklearn.ensemble import RandomForestRegressor","1b96cb04":"### Add Number of year column=Current_year - Year","8f5afa59":"### from sklearn.model_selection import RandomizedSearchCV\n### Create the random grid\n","e0af977f":"### Prediction","f7d59fd1":"### Import all libraries\n","d69358b7":"# Car_Price_prediction","032d725c":"### Loading Data","f1855c1f":"## Data Exploration","b67784d2":"### Add Current_year = 2021 column","45954068":"### Perform data visualization ","bdec0e97":"### Use the random grid to search for best hyperparameters\n### First create the base model to tune","bcb0613d":"### Workflow:\n* Import all libraries\n* Load dataset\n* Ckeck missing and null  values\n* Data Exploration\n* Perform data visualization\n* Model fitting\n* Feature extraction\n"}}