{"cell_type":{"c4acb213":"code","ba3058fc":"code","7e204a0e":"code","b63fa9e4":"code","4252e808":"code","6c92eed3":"code","765da5bf":"code","7a0d88dc":"code","76c9f404":"code","58adce05":"code","45074897":"code","b1a3fc23":"code","a17a3799":"code","f5d73e1a":"code","22be48c9":"code","e063a8f2":"code","b0683af9":"code","b5d4ed62":"code","b5a12319":"code","6bd15ca7":"code","4d0d9d32":"code","3589586c":"code","957c0ca4":"code","0a4baaf4":"code","d9bc2e01":"code","ae5548f8":"code","9721117e":"code","c7c22a3c":"code","b58ebc91":"code","5da5909c":"code","0bc60620":"code","dcd43041":"code","ce7b85e5":"code","c1c895ad":"code","0888964c":"code","f5a992cf":"code","3ab8c0a7":"code","b79cd57f":"code","7fa56150":"code","4fdbb78b":"markdown","fbb83476":"markdown","57eed8f0":"markdown","992bf87e":"markdown","2066718d":"markdown","bce259c1":"markdown","f9bd047f":"markdown","b0db5445":"markdown","5f4db5f8":"markdown","4d387558":"markdown","4678f417":"markdown","91962f84":"markdown","4b23464b":"markdown","cbd7e1ee":"markdown","b1f24887":"markdown","5266beed":"markdown","f2595dd5":"markdown"},"source":{"c4acb213":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport plotly.express as px\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\n\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\nimport pandas as pd\n\ndf = pd.read_csv('https:\/\/query.data.world\/s\/nv37tt3clzpnfv46s4evkzzrvthapu')","ba3058fc":"df = pd.read_csv('https:\/\/query.data.world\/s\/nv37tt3clzpnfv46s4evkzzrvthapu')\ndf","7e204a0e":"# Check the total number of rows and columns\ndf.shape","b63fa9e4":"# Check data type for each column and count the null data\ndf.info()","4252e808":"# Summarize the data \ndf.describe()","6c92eed3":"# Show the data from head(n=5) \ndf.head()","765da5bf":"# Show the data from tail(n=5)\ndf.tail()","7a0d88dc":"# For non-numeric, we should check the unique data \ndf['Disease'].unique()","76c9f404":"df['Sex'].unique()","58adce05":"df['County'].unique()","45074897":"# The original data should be copied into new variable to avoid modified the original data\npre_df = df.copy()","b1a3fc23":"# Replace - value to 0 \npre_df[['Rate']] = pre_df[['Rate']].replace('\\-', 0, regex=True)\n\n# Removing * \npre_df[['Rate']] = pre_df[['Rate']].replace('\\*', '', regex=True)\n\n# Removing SC string. \npre_df[['Rate']] = pre_df[['Rate']].replace('\\SC', 0, regex=True)\n\n# Replacing NaN value to mean\npre_df[['Rate']] = pre_df[['Rate']].fillna(pre_df[['Rate']].mean())\n\n# Convert to float type\npre_df[['Rate']] = pre_df[['Rate']].astype(float)","a17a3799":"pre_df[['Cases', 'Lower 95% CI', 'Upper 95% CI']] = pre_df[['Cases', 'Lower 95% CI', 'Upper 95% CI']].fillna(pre_df[['Cases', 'Lower 95% CI', 'Upper 95% CI']].mean())","f5d73e1a":"pre_df = pre_df[pre_df.Sex != 'TOTAL']","22be48c9":"pre_df.describe()","e063a8f2":"pre_df['Sex'].unique()","b0683af9":"pre_df.info()","b5d4ed62":"pre_df.head()","b5a12319":"le = LabelEncoder()","6bd15ca7":"X = pre_df.copy()\ny = df['Sex']\n\ncateg = ['Sex']\nX[categ] = df[categ].apply(le.fit_transform)","4d0d9d32":"s = X.iloc[:, 2:9]\ns","3589586c":"s.info()","957c0ca4":"s.head()","0a4baaf4":"X.columns","d9bc2e01":"X.plot.scatter(\"Cases\", \"Rate\")","ae5548f8":"# cols = s.columns\n# cols","9721117e":"# ms = MinMaxScaler()\n# s = ms.fit_transform(s)","c7c22a3c":"# scale_df = pd.DataFrame(s, columns=[cols])","b58ebc91":"# scale_df.plot.scatter('Cases', 'Rate')","5da5909c":"Sum_of_squared_distances = []\nK = range(1,15)\nfor k in K:\n    km = KMeans(n_clusters=k, max_iter = 300, n_init = 10)\n    km = km.fit(s)\n    Sum_of_squared_distances.append(km.inertia_)\n    \nplt.plot(K, Sum_of_squared_distances, 'bx-')\nplt.xlabel('k')\nplt.ylabel('Sum_of_squared_distances')\nplt.title('Elbow Method For Optimal k')\nplt.show()","0bc60620":"kmeans = KMeans(n_clusters=2, random_state=0) \nkmeans.fit(s)\n\nlabel_y_kmeans = kmeans.fit_predict(s)","dcd43041":"kmeans.cluster_centers_","ce7b85e5":"label = kmeans.labels_","c1c895ad":"s","0888964c":"s['cluster_id'] = label","f5a992cf":"s.head()","3ab8c0a7":"s['cluster_id'] = s['cluster_id'].astype(int)\ns.plot.scatter(x='Rate', y='Cases', c='cluster_id', colormap='Spectral')","b79cd57f":"print(f'Silhouette Score(n=4): {silhouette_score(s, label_y_kmeans)}')","7fa56150":"labels = kmeans.labels_","4fdbb78b":"## Importing the Data\nPada section ini, data diimport dari 'https:\/\/query.data.world\/s\/nv37tt3clzpnfv46s4evkzzrvthapu'","fbb83476":"# Preprocessing Result\nHasil setelah dilakukan preprocessing","57eed8f0":"## Using K=2 as best methods","992bf87e":"## Rate \nPada kolom ini, sebelum dilakukan konversi tipe data, semua data perlu dilakukan normalisasi, seperti mereplace nilai - ke nilai mean atau 0. \n\n* Mereplace nilai - ke nilai 0\n* Mereplace karakter string SC ke nilai 0 \n* Menghapus karakter * (asteristik)\n* Mereplace nilai NaN value ke nilai Mean\n* Mengconversi kolom ke float64","2066718d":"## Mapping area","bce259c1":"# EDA\nEDA atau Exploratory Data Analysis bertujuan untuk menginvestigasi data sebelum di proses, melakukan pengecekan terhadap jumlah data, tipe data, dan keanomalian sebuah data. \n\n* Melihat jumlah row dan kolom\n* Melihat tipe data, jumlah data, dan data null pada setiap kolom\n* Melihat jumlah data apakah terdapat data yang memiliki nilai outliers\n* Melihat contoh data dengan mengambil sample dari atas dan bawah (n=5)","f9bd047f":"### Copy the data as X and  Y[Disease]","b0db5445":"# Introduction\n## Analysis Project Kelompok 3 - Infectious Disease in California\n\n1. Yosua Septian ()\n2. Selvia Candra (41517110019)\n3. Cynthia Lourenza (41520110007)\n4. Ade Firman Fauzi (41517110172)","5f4db5f8":"## Case, Lower95%, dan Upper95%\nKolom ini hanya memerlukan penghapuan NaN value","4d387558":"## Label Encoder\nSebelum dilakukan pengclusteran, data kategorical diconvert menjadi integer","4678f417":"## En - Description \nThese data contain case counts and rates for selected communicable diseases\u2014listed in the data dictionary\u2014that met the surveillance case definition for that disease and was reported for California residents, by disease, county, year, and sex. The data represent cases with an estimated illness onset date from 2001 through the last year indicated from California Confidential Morbidity Reports and\/or Laboratory Reports. Data captured represent reportable case counts as of the date indicated in the \u201cTemporal Coverage\u201d section below, so the data presented may differ from previous publications due to delays inherent to case reporting, laboratory reporting, and epidemiologic investigation.\n\nSource: https:\/\/www.cdph.ca.gov\/Programs\/CID\/DCDC\/Pages\/IDB.aspx <br>\nLast updated at https:\/\/data.chhs.ca.gov : 2020-01-10 <br>\nLicense: https:\/\/data.chhs.ca.gov\/pages\/terms\n\n## Id - Deskripsi\nData ini berisi tentang jumlah kasus serta rata-rata terhadap penyakit menular yang dilaporkan di daerah California berdasarkan penyakit, wilayah, tahun, dan jenis kelamin. \n\nSumber: https:\/\/www.cdph.ca.gov\/Programs\/CID\/DCDC\/Pages\/IDB.aspx <br>\nTerakhir diupdate: https:\/\/data.chhs.ca.gov : 2020-01-10 <br>\nLicense: https:\/\/data.chhs.ca.gov\/pages\/terms <br>\n\n","91962f84":"## SEX\nMenghapus nilai \"TOTAL\"","4b23464b":"# Preprocessing\nSetelah melihat data-data diatas terdapat beberapa anomali data yakni \n* Kolom rate masih menggunakan tipe data object, seharusnya data rate ini perlu kita konversikan kedalam bentuk tipe data float64 dan masih memiliki nilai - . Nilai - ini akan kita conversikan ke 0 atau menggantinya dengan nilai Mean. Terdapat karakter * (asteristik) dimana karakter ini perlu dihapus\n* Kolom Case, Lower95%, dan Upper95% memiliki jumlah data yang tidak sesuai dengan total keseluruhan data, kemungkinan terdapat nilai NULL\n* Pada kolom SEX terdapat nilai \"TOTAL\" dimana nilai ini tidak memiliki korelasi dengan jenis kelamin.\n","cbd7e1ee":"## Feature Scaling","b1f24887":"## Find best K-n by using Inertia method graph","5266beed":"# Cluster","f2595dd5":"# Data Collection"}}