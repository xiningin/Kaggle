{"cell_type":{"62236a78":"code","5cacef09":"code","8b3e3c8c":"code","82d71d41":"code","834b1722":"code","0e023d8e":"code","e703d57c":"code","69d3d264":"code","5a1a2e77":"code","5973dee3":"code","f50d4434":"code","669f9138":"code","8030fdec":"code","8746e0c8":"code","1c29796f":"code","2443d8d7":"code","f0c90bcd":"code","11682c9b":"code","4c2e3d9d":"code","5f93c1bf":"code","2354f2f4":"code","fb6fd901":"code","0aefa088":"code","277a4b44":"code","cce70243":"code","7d596298":"code","4a9dfde9":"code","576edf40":"code","acb2b43a":"code","04be66fc":"code","a0e9fa54":"code","4d3eee6a":"code","126796cb":"markdown","f81c21ff":"markdown","41513bfc":"markdown","46812d03":"markdown","de60df92":"markdown","1986a88e":"markdown","0247bb00":"markdown","4b3a642f":"markdown","c5344670":"markdown","3b515dad":"markdown","9530a9c0":"markdown","13c51fcd":"markdown","c27f64c0":"markdown","5c5c472c":"markdown"},"source":{"62236a78":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(action=\"ignore\")\nplt.style.use(['seaborn-bright','dark_background'])","5cacef09":"data  = pd.read_csv('\/kaggle\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')\ndata.head()","8b3e3c8c":"data = data.rename(columns ={'CustomerID':'customer_id','Gender':'gender','Age':'age',\n                    'Annual Income (k$)':'annual_income_in_$','Spending Score (1-100)':'spending_score'})","82d71d41":"data.head()","834b1722":"data.info()","0e023d8e":"data.describe()","e703d57c":"data = data.drop(columns = 'customer_id')","69d3d264":"plt.figure(figsize=(15,8))\nsns.histplot(data = data,x = data['age'],hue='gender',palette='hsv',kde=True)\nplt.xlabel(\"Age\",fontsize=20)\nplt.ylabel(\"Count\",fontsize=15)\nplt.show()","5a1a2e77":"plt.figure(figsize=(15,8))\nsns.histplot(data = data,x = data['annual_income_in_$'],hue='gender',palette='PuOr',kde=True)\nplt.xlabel(\"Annual Income\",fontsize=20)\nplt.ylabel(\"Count\",fontsize=15)\nplt.show()","5973dee3":"plt.figure(figsize=(15,8))\nsns.histplot(data = data,x = data['spending_score'],hue='gender',palette='ocean',kde=True)\nplt.xlabel(\"Spending Score\",fontsize=20)\nplt.ylabel(\"Count\",fontsize=15)\nplt.show()","f50d4434":"plt.figure(figsize=(20,7))\nsns.countplot(data['age'])\nplt.xlabel(\"Age\",fontsize=20)\nplt.ylabel(\"Count\",fontsize=15)\nplt.show()","669f9138":"plt.figure(figsize=(24,7))\nsns.countplot(data['annual_income_in_$'])\nplt.xlabel(\"Annual Income\",fontsize=20)\nplt.ylabel(\"Count\",fontsize=15)\nplt.show()","8030fdec":"plt.figure(figsize=(23,7))\nsns.countplot(data['spending_score'])\nplt.xlabel(\"Spending Score\",fontsize=20)\nplt.ylabel(\"Count\",fontsize=15)\nplt.show()","8746e0c8":"plt.figure(figsize=(8,4))\nsns.countplot(data['gender'],palette=['red','cyan'])\nplt.show()","1c29796f":"data = pd.get_dummies(data = data, columns=['gender'],drop_first=True)","2443d8d7":"data.head()","f0c90bcd":"plt.figure(figsize=(15,8))\nsns.heatmap(data.corr(),annot=True)\nplt.show()","11682c9b":"X = data","4c2e3d9d":"from sklearn.cluster import KMeans\nmodel = KMeans(n_clusters=2)\nmodel.fit(X)\npred = model.predict(X)","5f93c1bf":"model.inertia_","2354f2f4":"model.score(X)","fb6fd901":"sse = []\nfor cluster in range(1,10):\n    km = KMeans(n_clusters=cluster)\n    km.fit(X)\n    sse.append(km.inertia_)","0aefa088":"frame = pd.DataFrame({'Cluster':range(1,10),'SSE':sse})","277a4b44":"plt.figure(figsize = (13,6))\nplt.plot(frame['Cluster'],frame['SSE'],color = 'lime' ,linestyle = '--',marker='o')\nplt.title(\"Elbow Method\",fontsize=20,color='r')\nplt.xlabel('No Of Clusters',fontsize=20,color='lime')\nplt.ylabel('Inertia',fontsize=15,color='lime')\nplt.show()","cce70243":"km = KMeans(n_clusters=5)\nkm.fit(X)\npred = km.predict(X)","7d596298":"print(pred)","4a9dfde9":"X['cluster'] = pred","576edf40":"def seg(str_x,str_y,clusters):\n    x = []\n    y = []\n    for i in range(clusters):\n        x.append(X[str_x][X['cluster']==i])\n        y.append(X[str_y][X['cluster']==i])\n    \n    return x,y","acb2b43a":"def plot(str_x,str_y,clusters):\n    plt.figure(figsize = (7,5),dpi = 120)\n    \n    x,y = seg(str_x,str_y,clusters)\n    for i in range(clusters):\n        plt.scatter(x[i], y[i], label = 'cluster {}'.format(i+1))\n    plt.xlabel(str_x)\n    plt.ylabel(str_y)\n    plt.title(str(str_x+\" VS \"+str_y))\n    plt.legend()\n    plt.show()","04be66fc":"plot('annual_income_in_$','age',5)","a0e9fa54":"plot('spending_score','age',5)","4d3eee6a":"plot('annual_income_in_$','spending_score',5)","126796cb":"#### Checking for missing values.","f81c21ff":"### Plotting clusters for spending score and age. ","41513bfc":"### Plotting clusters for annual income and age.","46812d03":"#### Checking for outliers.","de60df92":"### Plotting clusters for annual income and spending score.","1986a88e":"#### Comparing the feature gender.","0247bb00":"#### Getting dummies of categorical features.","4b3a642f":"#### Ploting the histogram according to the feature gender.","c5344670":"#### Visualizing the countplot for cheching count of data for corresponding values in age, annual income and spending score.","3b515dad":"#### Ploting correlation heatmap.","9530a9c0":"#### Renaming the columns of the dataframe.","13c51fcd":"#### Ploting plot for taking sutaible number of clusters using elbow method.","c27f64c0":"## Importing libraries and the dataset.","5c5c472c":"#### Droping the unwanted columns."}}