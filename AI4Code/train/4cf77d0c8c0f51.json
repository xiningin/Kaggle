{"cell_type":{"94d19c4b":"code","f4ad2a69":"code","9d41864b":"code","7f7a02ac":"code","ebc3f32c":"code","9e51e9bc":"code","e90f37d7":"code","083fa5c4":"code","be511d28":"code","92855122":"code","f497a195":"code","8f0e24b3":"code","8b3140a6":"code","480cea19":"code","603a76da":"code","c69469cc":"markdown","39a0b960":"markdown","8b0a96a8":"markdown","d9a77ab6":"markdown","46efff68":"markdown","2b2b52b1":"markdown","1a3de1db":"markdown","93938ab9":"markdown","ce826fac":"markdown","32bb4a8e":"markdown","354d40a6":"markdown","66646a7d":"markdown"},"source":{"94d19c4b":"import numpy as np \nimport pandas as pd\npd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nprint(\"Setup Complete\")","f4ad2a69":"#Path of the file to read\nphones_filepath = \"..\/input\/ukrainian-market-mobile-phones-data\/phones_data.csv\"\n#Load the Data\nphones_data = pd.read_csv(phones_filepath)\n#Let's take a closer look at the data set: \n#Missing data query, variable names, structural information of the data set\nphones_data.info() #Structural expressions of the data set\nphones_data.dtypes #Access only the structural information of the variables in the data set\n","9d41864b":"phones_data.shape #We arrive at the (variable, observation) number\nphones_data.describe().T #Function describe () ignores missing data and excludes categorical variables.\nphones_data.columns #Count names\nphones_data.head(10)\n\n","7f7a02ac":"#Missing value query\nphones_data.isnull().values.any() \n#any () = returns TRUE if there is even one missing value","ebc3f32c":"#How many missing values are in which variable?\nphones_data.isnull().sum()\n#sum() = Returns the total number of missing values in all variables","9e51e9bc":"#If we want, we can substitute the value 0 for all missing values.\n#phones_data[\"lowest_price\"].fillna(0, inplace= True)\n#phones_data.isnull().sum()\n","e90f37d7":"#When we want to assign an average value instead of all missing values in the data set\n#phones_data.fillna(phones_data.mean() , inplace=True)\n#phones_data.isnull().sum()","083fa5c4":"phones_data.iloc [:,  np . r_ [ 0 : 3 , 5 : 6, 7, 8 ]]","be511d28":"#Plot the Data\nplt.figure(figsize=(16,6))\nsns.lineplot(data=phones_data)","92855122":"#We will begin by printing the names of all columns\nlist(phones_data.columns)\n#We plot the lines corresponding to the first two columns in the dataset.\nplt.figure(figsize=(14,6))\nplt.title(\"Battery power by products\")\n#Line chart shows battery power for the each products\nsns.lineplot(data=phones_data['battery_size'], label=\"Battery Size\")\n#Line chart shows best price for the each powers\nsns.lineplot(data=phones_data['best_price'], label= \"Best price\")","f497a195":"#Set the width and height of the figure\nplt.figure(figsize=(10,6))\n#Add title\nplt.title(\"Average battery power by phone brands\")\n#Bar chart showing average battery power by phone brands\nsns.barplot(x=phones_data.index, y=phones_data['battery_size'])\n#Add label for vertical axis\nplt.ylabel(\"battery_size \")","8f0e24b3":"import seaborn as sns\nsns.scatterplot(x=phones_data['sellers_amount'],\n               y=phones_data['battery_size'])","8b3140a6":"sns.regplot(x=phones_data['sellers_amount'],\n               y=phones_data['best_price'])","480cea19":"sns.scatterplot(x=phones_data['sellers_amount'],\n               y=phones_data['best_price'], hue = phones_data['popularity'])","603a76da":"#sns.lmplot(x=\"sellers_amount\",\n#               y=\"best_price\", hue =\"popularity\", data=phones_data)","c69469cc":"# Scatter Plots\n**In a scatter plot, the values of 2 variables are plotted as points on a 2-dimensional grid. Additonally, you can also use a third variable to determine the size or color of the points.**","39a0b960":"# Missing data \n***-Are there any missing values in the data set?***\n","8b0a96a8":"# Color-Coded scatter plots\n**We can use  scatter plots to display the relationship between three variables. One way of doing this is by color_coding the points.**\n","d9a77ab6":"***Use the filepath to load the contents of the dataset into the notebook.***","46efff68":"**I am currently learning data visualization. I just finished Kaggle's data visualization course, I tried the information I learned from that course on this data set. Please let me know if there is something wrong or missing in what I did.**\n\nhttps:\/\/www.kaggle.com\/learn\/data-visualization","2b2b52b1":"# Setup\n**Let's start by uploading the data set**","1a3de1db":"# Bar Chart\n**Bar graphs are used to compare things between different groups or to track changes over time. However, when trying to measure change over time, bar graphs are best when the changes are larger.**","93938ab9":"# Data Visualization","ce826fac":"**To double-check the strength of this relationship, you might like to add a regression line, or the line best fits the data. We do this by changing the command to sns.regplot**","32bb4a8e":"# describe()= The describe () method returns statistical values of columns with numeric data such as max, min, std ... ","354d40a6":"# Line Chart\n**Line graphs are used to track changes over short and long periods of time. When smaller changes exist, line graphs are better to use than bar graphs. Line graphs can also be used to compare changes over the same period of time for more than one group**","66646a7d":" #                                        Hello World\n**- The dataset contains data on mobile phones that have been released in the last 4 years and can be purchased from Ukraine. The data set includes many features of the phone. It also includes the financial features of the phones. We will reach some results by analyzing and visualizing this data. So I wanted to write this notebook. I hope it helps. And thanks Artem Pozdniakov for sharing the dataset with us :)**"}}