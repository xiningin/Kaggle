{"cell_type":{"f52c8a14":"code","044c89a0":"code","c72b634b":"code","553b6e34":"code","a82a2d8f":"code","7b3c72d2":"code","f26deb96":"code","c7703b02":"code","43ed3083":"code","ac9b8c72":"code","7f750c37":"code","1fe3deec":"code","f13edd92":"code","c4a9c77c":"code","9563d74e":"code","a1e94f73":"code","2187df87":"code","9bb96231":"code","03675d28":"code","443dcb11":"code","1773f9c0":"code","a11949fe":"code","5397071e":"code","664e438b":"code","edc0c7f3":"code","d8447b93":"markdown","a7da8a52":"markdown","24fe0a00":"markdown","4f6cd5f0":"markdown"},"source":{"f52c8a14":"import numpy as np \nimport pandas as pd\n\nimport os\nprint(os.listdir(\"..\/input\"))\n","044c89a0":"data = pd.read_csv('..\/input\/zomato.csv')\ndata.tail(30)","c72b634b":"data['name'].nunique()","553b6e34":"data.isnull().sum()","a82a2d8f":"data.drop(columns = ['phone','location'],inplace = True)","7b3c72d2":"data['rate'].value_counts()","f26deb96":"data['rate'] = data['rate'].replace('NEW',np.NaN)\ndata['rate'] = data['rate'].replace('-',np.NaN)\ndata.dropna(how = 'any', inplace = True)","c7703b02":"data['rate'] = data.loc[:,'rate'].replace('[ ]','',regex = True)\ndata['rate'] = data['rate'].astype(str)\ndata['rate'] = data['rate'].apply(lambda r: r.replace('\/5',''))\ndata['rate'] = data['rate'].apply(lambda r: float(r))","43ed3083":"print(\"Unique ratings : {}\".format(data['rate'].nunique()))\nprint(\"Unique value counts : \\n{}\".format(data['rate'].value_counts()))","ac9b8c72":"data.isnull().sum()","7f750c37":"data.dtypes","1fe3deec":"data.rename(columns = {'listed_in(type)':'service_type','listed_in(city)': 'location', 'approx_cost(for two people)':'cost_for_two'}, inplace = True)","f13edd92":"data['cost_for_two'] = data['cost_for_two'].str.replace(',','')\ndata['cost_for_two'] = data['cost_for_two'].astype(int)","c4a9c77c":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()","9563d74e":"data['online_order'].value_counts().plot(kind = 'bar', figsize = (10,6), color = ['r','b'], title = 'Online orders')","a1e94f73":"print(\"Unique restaurant type: {}\".format(data['rest_type'].nunique()))\nprint(\"Top 5 restaurant types: \\n{}\".format(data['rest_type'].value_counts().sort_values(ascending = False).head()))","2187df87":"data['cuisines'].value_counts().head()","9bb96231":"data.head()","03675d28":"data['service_type'].value_counts().plot(kind = 'bar', figsize = (12,6),\n                                         color = ['r','b','g','c','y'],\n                                         title = 'Number of restaurants by service type')","443dcb11":"data['location'].value_counts().plot(kind = 'barh', figsize = (12,12), title = 'Number of restaurants by location')","1773f9c0":"data['cost_for_two'].value_counts().plot(kind = 'hist', figsize = (10,5))","a11949fe":"data_1 = data.loc[(data.book_table == 'Yes') & (data.rate > 4.0), ['name', 'rate','cost_for_two', 'address']]\ndata_1.head()","5397071e":"data_1.groupby(['rate'])['cost_for_two'].agg(['mean','median']).plot(kind = 'bar',\n                                                                                figsize = (12,6),\n                                                                                color = ['r','g'],\n                                                                                title = 'Mean and median cost for two for top rated restaurants')","664e438b":"top_rated_cheap = data_1.loc[(data_1.rate > 4.5) & (data_1.cost_for_two < 1000), ['name','rate', 'cost_for_two']]\ntop_rated_cheap","edc0c7f3":"top_rated_cheap.name.unique()","d8447b93":"**Data Wrangling and Cleaning**","a7da8a52":"**Exploratory Data Analysis (EDA)**","24fe0a00":"This was an introductory kernel that would help one find cheaper and high rated restaurants in Bangalore. \nAny comments or suggestions regarding the analysis and code is welcome.\nPlease do upvote if you like the kernel.\nHappy Learning!","4f6cd5f0":"**Onesta**,** Baar Union** and **Zamindar** are the three top rated (rating > 4.5) and cheapest resaturants (cost for two people  of 600,850 and 800)"}}