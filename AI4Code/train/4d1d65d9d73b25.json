{"cell_type":{"af593202":"code","e7627d3b":"code","a4e28ef0":"code","6ac4c979":"code","4232a9a6":"code","93143994":"code","68c2462f":"code","31634620":"code","ba0f7b9b":"code","11f9708c":"code","413abfd1":"code","3468e286":"code","0e2ea59a":"code","8a655b7c":"code","acabb7e9":"code","b90cda6c":"code","e6692078":"code","b3fde0ef":"code","c74cae88":"code","0690ef8e":"code","1663eb79":"code","32d4ceac":"code","95db0956":"code","8cc5b6ef":"code","f1fe5fd6":"code","835878d1":"code","c1753df2":"code","51670324":"code","c11ec897":"code","7e4aff69":"code","c555eb62":"code","6c00ef2f":"code","5735ffec":"markdown","994066b7":"markdown","b7a91b14":"markdown","45be6573":"markdown"},"source":{"af593202":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e7627d3b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics","a4e28ef0":"train = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')","6ac4c979":"train.head()","4232a9a6":"train.isna().sum()","93143994":"train.describe()","68c2462f":"from sklearn.preprocessing import LabelEncoder","31634620":"cat_columns = train[['MSZoning','Street','LotShape','LandContour','LotConfig','Foundation']]","ba0f7b9b":"train = train.drop(columns=['MSZoning','Street','LotShape','LandContour','LotConfig','Foundation'],axis=1)","11f9708c":"encoder = LabelEncoder()\nfor col in cat_columns:\n    cat_columns[col] = encoder.fit_transform(cat_columns[col])","413abfd1":"cat_columns","3468e286":"train_dataset = pd.concat([train,cat_columns],axis=1)","0e2ea59a":"X = train_dataset[['MSSubClass','MSZoning','LotArea','Street','LotShape','LandContour','LotConfig','OverallQual','OverallCond','HalfBath','ScreenPorch','YearBuilt','YearRemodAdd','Foundation', '1stFlrSF', '2ndFlrSF', 'LowQualFinSF', 'GrLivArea', 'FullBath', 'BedroomAbvGr', 'KitchenAbvGr', 'TotRmsAbvGrd', 'WoodDeckSF', 'OpenPorchSF', '3SsnPorch', 'PoolArea', 'MoSold', 'YrSold','Fireplaces']]","8a655b7c":"Y = train_dataset['SalePrice']","acabb7e9":"print(X)\nprint(Y)","b90cda6c":"from sklearn.linear_model import Ridge\nridge = Ridge()","e6692078":"ridge.fit(X,Y)","b3fde0ef":"test = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')","c74cae88":"test.head()","0690ef8e":"test.isna().sum()","1663eb79":"test['MSZoning'] = test['MSZoning'].fillna(method='ffill')","32d4ceac":"cat_columns = test[['MSZoning','Street','LotShape','LandContour','LotConfig','Foundation']]","95db0956":"test = test.drop(columns=['MSZoning','Street','LotShape','LandContour','LotConfig','Foundation'],axis=1)","8cc5b6ef":"for col in cat_columns:\n    cat_columns[col] = encoder.fit_transform(cat_columns[col])","f1fe5fd6":"cat_columns","835878d1":"test_dataset = pd.concat([test,cat_columns],axis=1)","c1753df2":"test_final = test_dataset[['MSSubClass','MSZoning','LotArea','Street','LotShape','LandContour','LotConfig','OverallQual','OverallCond','HalfBath','ScreenPorch','YearBuilt','YearRemodAdd','Foundation', '1stFlrSF', '2ndFlrSF', 'LowQualFinSF', 'GrLivArea', 'FullBath', 'BedroomAbvGr', 'KitchenAbvGr', 'TotRmsAbvGrd', 'WoodDeckSF', 'OpenPorchSF', '3SsnPorch', 'PoolArea', 'MoSold', 'YrSold','Fireplaces']]","51670324":"pred = ridge.predict(test_final)","c11ec897":"sub = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv')","7e4aff69":"sub['SalePrice'] = pred","c555eb62":"sub","6c00ef2f":"sub.to_csv('RigdeRegression.csv', index=False)","5735ffec":"**Final Score: 0.34051**","994066b7":"Test Dataset","b7a91b14":"Train Dataset","45be6573":"**Rigde Regression**"}}