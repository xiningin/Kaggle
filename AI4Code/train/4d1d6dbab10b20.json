{"cell_type":{"813660df":"code","92de3e2d":"code","43b325e7":"code","9ef4e1c9":"code","19da0452":"code","ae6c688a":"code","17990d3e":"code","786ac090":"code","eec502a8":"code","220ea1cf":"code","8bf01eb5":"code","24f0a680":"code","3b1d4769":"code","6e09d168":"code","14247881":"markdown","c58f9862":"markdown","d7d87d50":"markdown","50db14d0":"markdown"},"source":{"813660df":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport statsmodels.api as sm\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","92de3e2d":"df = pd.read_csv(\"\/kaggle\/input\/housesalesprediction\/kc_house_data.csv\")\ndf","43b325e7":"df.info()","9ef4e1c9":"import statsmodels.formula.api as smf","19da0452":"#checking if there is any null values\ndf['sqft_living'].isnull().sum()","ae6c688a":"df['sqft_lot'].isnull().sum()","17990d3e":"df['yr_built'].isnull().sum()","786ac090":"\nest = smf.ols(formula='price ~ sqft_living + sqft_lot + yr_built', data=df).fit()\nest.summary()","eec502a8":"y_fitt = est.fittedvalues","220ea1cf":"residual = df['price'] - y_fitt ","8bf01eb5":"X = df[['sqft_living', 'sqft_lot', 'yr_built']]   # independent variables\ny = df['price']   # dependent variables\n\n# to get intercept -- this is optional\nX = sm.add_constant(X)\n\n# fit the regression model\nreg = sm.OLS(y, X).fit()\nreg.summary()\n# output","24f0a680":"df[['yhat']]=pd.DataFrame(reg.predict(X)) \ndf['res']=pd.DataFrame(reg.resid)\ndf['std_res']=reg.get_influence().resid_studentized_internal\ndf.head(2)","3b1d4769":"sns.residplot(x = \"yhat\",\n              y = \"res\",\n              data = df,\n              lowess = True)","6e09d168":"#Quantile-quantile (QQ) plot: This plot used to check the data normality assumption\n\nsm.qqplot(df['std_res'], line='45')\nplt.xlabel(\"Theoretical Quantiles\")\nplt.ylabel(\"Standardized Residuals\")\nplt.show()","14247881":" let me know if you guys have any suggestion that can be done this dataset.i'm still exploring and experimenting ciao.","c58f9862":"this dataset contains the information abt home characterstics of UK.\n\nid - Unique ID for each home sold\n\ndate - Date of the home sale\n\nprice - Price of each home sold\n\nbedrooms - Number of bedrooms\n\nbathrooms - Number of bathrooms, where .5 accounts for a room with a toilet but no shower\n\nsqft_living - Square footage of the apartments interior living space\n\nsqft_lot - Square footage of the land space\n\nfloors - Number of floors\n\nwaterfront - A dummy variable for whether the apartment was overlooking the waterfront or not\n\nview - An index from 0 to 4 of how good the view of the property was\n\n\ncondition - An index from 1 to 5 on the condition of the apartment,\n\ngrade - An index from 1 to 13, where 1-3 falls short of building construction and design, 7 has an average level \nof construction and design, and 11-13 have a high quality level of construction and design.\n\nsqft_above - The square footage of the interior housing space that is above ground level\n\nsqft_basement - The square footage of the interior housing space that is below ground level\n\nyr_built - The year the house was initially built\n\nyr_renovated - The year of the house\u2019s last renovation\n\nzipcode - What zipcode area the house is in\n\nlat - Lattitude\n\nlong - Longitude\n\n\nsqft_living15 - The square footage of interior housing living space for the nearest 15 neighbors\n\nsqft_lot15 - The square footage of the land lots of the nearest 15 neighbors\n","d7d87d50":"The goal of this whole dataset is to create a model which can predict the prices of the house.","50db14d0":"we have lot of target varible. lets take 2 variable and fit multiple linear regression."}}