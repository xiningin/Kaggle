{"cell_type":{"2fe8b72b":"code","75cceecd":"code","8fe14d6e":"code","def95d08":"code","35dc95a6":"code","5a5bccc6":"code","6b7bfc47":"code","fae28900":"code","25131be6":"code","b583ea74":"code","72cc4b19":"markdown","9879baa4":"markdown","bd59ff08":"markdown","a550225d":"markdown","7587fe0c":"markdown","840c1f16":"markdown","3e783d8e":"markdown","2396c54e":"markdown","a8d32251":"markdown","b2c9e41c":"markdown","14ed3f92":"markdown","b721e950":"markdown","f8571ba8":"markdown"},"source":{"2fe8b72b":"from __future__ import print_function\nimport tensorflow as tf\nfrom tensorflow.keras.datasets import cifar10\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout, Activation, Flatten\nfrom tensorflow.keras.layers import BatchNormalization\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D\nfrom tensorflow.keras.regularizers import l2\nimport numpy as np\nimport os\nimport matplotlib.pyplot as plt\nplt.rcParams['axes.unicode_minus'] = False\nplt.style.use('fivethirtyeight')\n%matplotlib inline\n\n# Defining the parameters\nbatch_size = 32\nnum_classes = 10\nepochs = 50","75cceecd":"# Splitting the data between train and test\nimport ssl\nssl._create_default_https_context = ssl._create_unverified_context\n\n(x_train, y_train), (x_test, y_test) = cifar10.load_data()\nprint('x_train shape:', x_train.shape)\nprint(x_train.shape[0], 'train samples')\nprint(x_test.shape[0], 'test samples')","8fe14d6e":"# plotting some random 10 images\n\nclass_names = ['airplane','automobile','bird','cat','deer',\n               'dog','frog','horse','ship','truck']\n\nfig = plt.figure(figsize=(10,5))\nfor i in range(num_classes):\n    ax = fig.add_subplot(2, 5, 1 + i, xticks=[], yticks=[])\n    idx = np.where(y_train[:]==i)[0]\n    features_idx = x_train[idx,::]\n    img_num = np.random.randint(features_idx.shape[0])\n    im = (features_idx[img_num,::])\n    ax.set_title(class_names[i])\n    plt.imshow(im)\nplt.show()","def95d08":"# Convert class vectors to binary class matrices.\ny_train = tf.keras.utils.to_categorical(y_train, num_classes)\ny_test = tf.keras.utils.to_categorical(y_test, num_classes)","35dc95a6":"# Building the CNN Model (Hidden Output)\n\nmodel = Sequential()\nmodel.add(Conv2D(64, (3, 3), padding='same',\n                 input_shape=x_train.shape[1:]))\nmodel.add(Activation('relu'))\nmodel.add(BatchNormalization())\nmodel.add(Conv2D(64, (3, 3)))\nmodel.add(Activation('relu'))\nmodel.add(BatchNormalization())\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(Dropout(0.25))\n\nmodel.add(Conv2D(128, (3, 3), padding='same'))\nmodel.add(Activation('relu'))\nmodel.add(BatchNormalization())\nmodel.add(Conv2D(128, (3, 3)))\nmodel.add(Activation('relu'))\nmodel.add(BatchNormalization())\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(Dropout(0.25))\n\nmodel.add(Flatten())\nmodel.add(Dense(512,kernel_regularizer=l2(0.01)))\nmodel.add(Activation('relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(num_classes))\nmodel.add(Activation('softmax'))","5a5bccc6":"# Visualizing our model (Hidden Input)\nimport visualkeras\nvisualkeras.layered_view(model, scale_xy=10, legend=True)","6b7bfc47":"# summary of the model (Hidden Input)\nprint(model.summary())","fae28900":"# compile (Hidden Output)\nmodel.compile(loss='categorical_crossentropy',\n              optimizer='sgd',\n              metrics=['accuracy'])\n\nx_train = x_train.astype('float32')\nx_test = x_test.astype('float32')\n\n# Normalizing the input image\nx_train \/= 255\nx_test \/= 255\n\nepochs=50\n\n# Training the model\nhistory = model.fit(x_train, y_train,\n              batch_size=batch_size,\n              epochs=epochs,\n              validation_data=(x_test, y_test),\n              shuffle=True)","25131be6":"# Plotting the Model Accuracy & Model Loss vs Epochs (Hidden Input)\nplt.figure(figsize=[20,8])\n\n# summarize history for accuracy\nplt.subplot(1,2,1)\nplt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('Model Accuracy', size=25, pad=20)\nplt.ylabel('Accuracy', size=15)\nplt.xlabel('Epoch', size=15)\nplt.legend(['train', 'test'], loc='upper left')\n# summarize history for loss\n\nplt.subplot(1,2,2)\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('Model Loss', size=25, pad=20)\nplt.ylabel('Loss', size=15)\nplt.xlabel('Epoch', size=15)\nplt.legend(['train', 'test'], loc='upper left')\nplt.show()","b583ea74":"# Checking the predictions! (Hidden Input)\npredictions = model.predict(x_test)\n\nplt.figure(figsize=[10,10])\n\nclass_names = ['airplane','automobile','bird','cat','deer','dog','frog','horse','ship','truck']\n\nplt.subplot(2,2,1)\nn = 3\nplt.imshow(x_test[n].reshape(32, 32, -1), cmap=plt.cm.binary)\nplt.title(\"Predicted value: \" + str(class_names[np.argmax(predictions[n], axis=0)]), size=20)\nplt.grid(False)\n\nplt.subplot(2,2,2)\nn = 4\nplt.imshow(x_test[n].reshape(32, 32, -1), cmap=plt.cm.binary)\nplt.title(\"Predicted value: \" + str(class_names[np.argmax(predictions[n], axis=0)]), size=20)\nplt.grid(False)\n\nplt.subplot(2,2,3)\nn = 8\nplt.imshow(x_test[n].reshape(32, 32, -1), cmap=plt.cm.binary)\nplt.title(\"Predicted value: \" + str(class_names[np.argmax(predictions[n], axis=0)]), size=20)\nplt.grid(False)\n\nplt.subplot(2,2,4)\nn = 6\nplt.imshow(x_test[n].reshape(32, 32, -1), cmap=plt.cm.binary)\nplt.title(\"Predicted value: \" + str(class_names[np.argmax(predictions[n], axis=0)]), size=20)\nplt.grid(False)\n\nplt.suptitle(\"Predictions of CIFAR-10 Data\", size=30, color=\"#6166B3\")\n\nplt.show()","72cc4b19":"<h1 style=\"font-size:50px;color:#6166B3\"><strong>Predictions <\/strong><strong style=\"color:black\">Using The CNN Model:<\/strong><\/h1>","9879baa4":"<h1 style=\"font-size:50px;color:#6166B3\"><strong>About <\/strong><strong style=\"color:black\">CIFAR-10 Data:<\/strong><\/h1>\n\n<p style=\"font-size:120%\">The CIFAR-10 dataset consists of 60000 32x32 colour images in 10 classes, with 6000 images per class. There are 50000 training images and 10000 test images.<\/p>\n\n![image.png](attachment:dc18722a-7377-434d-b32a-22158cb4aaa7.png)\n\n<p style=\"font-size:120%\">The CIFAR-10 and CIFAR-100 are labeled subsets of the 80 million tiny images dataset. They were collected by Alex Krizhevsky, Vinod Nair, and Geoffrey Hinton.<\/p>\n\n<p style=\"font-size:120%\"><mark>The dataset is divided into five training batches and one test batch, each with 10000 images.<\/mark> The test batch contains exactly 1000 randomly-selected images from each class. The training batches contain the remaining images in random order, but some training batches may contain more images from one class than another. Between them, the training batches contain exactly 5000 images from each class.<\/p>\n\n<img src=\"https:\/\/miro.medium.com\/max\/1400\/0*Ra55_QqeYjDWH0ZR.gif\" style=\"width:80%\"><\/img>\n\n<p style=\"font-size:120%\">We are going to perform a Classification task as shown in the GIF using CNN.<\/p>","bd59ff08":"<h1 style=\"font-size:50px;color:#6166B3\"><strong>Summary Of <\/strong><strong style=\"color:black\">The Convolution Neural Network:<\/strong><\/h1>","a550225d":"<h1 style=\"font-size:50px;color:#6166B3\"><strong>Designing <\/strong><strong style=\"color:black\">The Convolution Neural Network:<\/strong><\/h1>","7587fe0c":"<h1 style=\"font-size:50px;color:#6166B3\"><strong>Pre-Processing <\/strong><strong style=\"color:black\">The Data:<\/strong><\/h1>","840c1f16":"<h1 style=\"font-size:50px;color:#6166B3\"><strong>Compiling & Training <\/strong><strong style=\"color:black\">The Model:<\/strong><\/h1>","3e783d8e":"<h1 style=\"font-size:50px;color:#6166B3\"><strong>Importing <\/strong><strong style=\"color:black\">CIFAR-10 Data:<\/strong><\/h1>","2396c54e":"<h1 style=\"font-size:50px;color:#6166B3\"><strong>Visualizing <\/strong><strong style=\"color:black\">The Convolution Neural Network:<\/strong><\/h1>","a8d32251":"<h1 style=\"font-size:50px;color:#6166B3\"><strong>Evaluating <\/strong><strong style=\"color:black\">The Model:<\/strong><\/h1>","b2c9e41c":"<h1 style=\"font-size:80px;color:#6166B3;text-align:center\"><strong>Very Basic<\/strong> <strong style=\"color:black\">Deep Learning on CIFAR-10 Data CNN<\/strong><\/h1>","14ed3f92":"<h1 style=\"font-size:50px;color:#6166B3;text-align:center\"><strong style=\"color:black\">Leave an Upvote\ud83d\udc4d if you Like\/Fork my work. It will help me Grow<\/strong><\/h1>","b721e950":"<h1 style=\"font-size:50px;color:#6166B3\"><strong>Visualizing <\/strong><strong style=\"color:black\">CIFAR-10 Data:<\/strong><\/h1>","f8571ba8":"<h1 style=\"font-size:50px;color:#6166B3\"><strong>Importing <\/strong><strong style=\"color:black\">Necessary Libraries:<\/strong><\/h1>"}}