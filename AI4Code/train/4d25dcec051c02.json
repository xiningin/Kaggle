{"cell_type":{"3aee6d8a":"code","50622cb3":"code","184b0147":"code","201ddb69":"code","bef247cc":"code","05880700":"code","171f2d17":"code","1e742505":"code","2dde6721":"code","d926f2e0":"code","b8fb5579":"code","f990219a":"code","69268643":"code","4ed3ea43":"code","34e35208":"code","d20b8757":"code","69d58d2a":"code","e86300b7":"code","d77fdaec":"code","2a690aac":"code","167a1b7f":"markdown","9c6f03be":"markdown","a238915e":"markdown","b5247d48":"markdown","eea1e677":"markdown","d28649b7":"markdown","97a4515b":"markdown","cca586e9":"markdown"},"source":{"3aee6d8a":"import gc\nimport os\nfrom pathlib import Path\nimport random\nimport sys\n\nimport tqdm\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom IPython.core.display import display, HTML\n\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import KFold\nimport lightgbm as lgb\nimport xgboost as xgb\nimport catboost as cb\n\n# --- plotly ---\nfrom plotly import tools, subplots\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.express as px\nimport plotly.figure_factory as ff","50622cb3":"%%time\nroot = Path('\/kaggle\/input\/ashrae-feather-format-for-fast-loading')\n\n\ntrain_df = pd.read_feather(root\/'train.feather')\ntest_df = pd.read_feather(root\/'test.feather')\nweather_train_df = pd.read_feather(root\/'weather_train.feather')\nweather_test_df = pd.read_feather(root\/'weather_test.feather')\nbuilding_meta_df = pd.read_feather(root\/'building_metadata.feather')\n#sample_submission = pd.read_feather(root\/'sample_submission.feather')","184b0147":"print('train_df', train_df.shape)\nprint('test_df', test_df.shape)","201ddb69":"debug = False\nif debug:\n    train_df = train_df.iloc[:10000]","bef247cc":"meter_type_list = [\"Electricity\", \"ChilledWater\", \"Steam\", \"HotWater\"]\ncnt_srs = train_df[\"meter\"].value_counts()\ncnt_srs_df = cnt_srs.to_frame()\n\n# cnt_srs_df['meter_type'] = cnt_srs_df.index\ncnt_srs_df['meter_type'] = meter_type_list\ncnt_srs_df","05880700":"fig = px.bar(cnt_srs_df, x='meter_type', y='meter', title='Number of rows for each meter type')\n# fig.update_layout(showlegend=True)\nfig.show()","171f2d17":"train_df['meter_reading_log1p'] = np.log1p(train_df['meter_reading'])","1e742505":"sampled_train_df = train_df.sample(10000)","2dde6721":"# It takes long time for whole train_df, so use...\n\nfig = px.histogram(sampled_train_df, x=\"meter_reading_log1p\", color=\"meter\", cumulative=False, opacity=0.4)\nfig.show()","d926f2e0":"fig = ff.create_distplot([sampled_train_df[sampled_train_df['meter'] == i]['meter_reading_log1p'] for i in range(4)],\n                         meter_type_list, bin_size=0.2, histnorm='probability')\nfig.show()","b8fb5579":"# target_building_id = 184\ntarget_building_id = 1298\ntemp_df = train_df[train_df[\"building_id\"]==target_building_id].reset_index(drop=True)\n\nfig = px.line(temp_df, x='timestamp', y='meter_reading_log1p', color='meter')\nfig.show()","f990219a":"weather_train_df.describe()","69268643":"temp_weather_train_df = weather_train_df[(weather_train_df['site_id'] == 0) | (weather_train_df['site_id'] == 1) | (weather_train_df['site_id'] == 2)]","4ed3ea43":"fig = px.line(temp_weather_train_df, x='timestamp', y='air_temperature', color='site_id')\nfig.show()","34e35208":"fig = px.line(temp_weather_train_df, x='timestamp', y='cloud_coverage', color='site_id')\nfig.show()","d20b8757":"fig = px.line(temp_weather_train_df, x='timestamp', y='dew_temperature', color='site_id')\nfig.show()","69d58d2a":"fig = px.line(temp_weather_train_df, x='timestamp', y='precip_depth_1_hr', color='site_id')\nfig.show()","e86300b7":"fig = px.line(temp_weather_train_df, x='timestamp', y='sea_level_pressure', color='site_id')\nfig.show()","d77fdaec":"fig = px.line(temp_weather_train_df, x='timestamp', y='wind_direction', color='site_id')\nfig.show()","2a690aac":"weather_train_df.head()","167a1b7f":"## weather","9c6f03be":"## meter_reading over time","a238915e":"`cloud_coverage` value ranges from 0 to 9?\n\nThere are many nan values, so how to handle it?\nInterpolating value is an idea that may improve performance.","b5247d48":"# time series","eea1e677":"# ASHRAE: interactive data visualization with plotly\n\nInfluecned by this awesome [notebook](https:\/\/www.kaggle.com\/sudalairajkumar\/simple-exploration-notebook-ashrae) by @sudalairajkumar,\nI tried to use plotly for data visualization to understand this ASHRAE competition!\n","d28649b7":"`dew_temperature`: considered high humid when dew temperature is high.","97a4515b":"# meter","cca586e9":"# meter_reading distribution"}}