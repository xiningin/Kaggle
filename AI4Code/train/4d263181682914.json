{"cell_type":{"a4bd1465":"code","561e85f5":"code","e017c4ad":"code","dd846580":"code","97b79e44":"code","fb6ae606":"code","12015372":"code","2bbc1626":"code","f9fd2fb9":"code","d090a517":"code","54f34546":"code","7df7f166":"code","0e00046e":"code","e870be5e":"code","98300696":"code","4e3cbcd6":"code","4f7bbfb4":"code","4284bd1f":"code","ff0fb3a5":"code","041dac8f":"code","275934ff":"code","ac339570":"code","0678ec4f":"code","4f0ca9c3":"code","d8c7e066":"code","ce5ed72a":"code","260110a8":"code","5a34f7a3":"code","be3a1bc2":"code","2c77f2eb":"code","f3ae1850":"code","b2de3126":"code","a93b4748":"code","312568fd":"markdown","0968c2a1":"markdown","f801d58b":"markdown","89748558":"markdown","276eaf56":"markdown","720f5b61":"markdown","03cc5576":"markdown","cfde7b7f":"markdown","b03586e9":"markdown","d6d9c1ad":"markdown","46339bfa":"markdown","9856c15a":"markdown","55a824e6":"markdown","f7bc89f7":"markdown","c8a8211d":"markdown","317666ea":"markdown","74e7cd8b":"markdown","aee2aa5e":"markdown","e6b8cdbd":"markdown","c4fc52c3":"markdown","4df14f94":"markdown","24e4ca7e":"markdown","dac3f949":"markdown","bb68b4c2":"markdown","2a7a2cb0":"markdown","e6af3793":"markdown","2b6c57de":"markdown","6d2d7257":"markdown","35d91bde":"markdown","0f07e6f7":"markdown","0f9b07c6":"markdown","b9230e04":"markdown","69b07906":"markdown","43771f22":"markdown","dde6d706":"markdown","69978085":"markdown"},"source":{"a4bd1465":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n\npd.set_option('mode.chained_assignment',  None)\npd.set_option('display.max_columns', None)","561e85f5":"profile = pd.read_csv('\/kaggle\/input\/starbucks-customer-data\/profile.csv', index_col=0)\nportfolio = pd.read_csv('\/kaggle\/input\/starbucks-customer-data\/portfolio.csv', index_col=0)\ntranscript = pd.read_csv('\/kaggle\/input\/starbucks-customer-data\/transcript.csv', index_col=0)\n","e017c4ad":"profile.head()","dd846580":"profile.isna().sum()","97b79e44":"sns.histplot(data=profile, x='age')\nplt.show()","fb6ae606":"profile['age'].describe()","12015372":"profile = profile.dropna()\nprofile.head()","2bbc1626":"sns.barplot(x=profile['gender'].value_counts().index, y=profile['gender'].value_counts(normalize=True))\nplt.title('Gender Distribution')\nplt.xlabel('Gender')\nplt.ylabel('Proportion')\nplt.show()","f9fd2fb9":"profile['log_income'] = profile['income'].apply(np.log10)","d090a517":"fig, axes = plt.subplots(1, 2, figsize=(15, 5))\n\nfor i, col in enumerate(['income', 'log_income']):\n    sns.histplot(ax=axes[i], data=profile, x=col, kde=True)\n\naxes[0].set_title('Income Distribution')\naxes[1].set_title('Log-Income Distribution')\nplt.show()","54f34546":"print('Average income is: {}'.format(round(profile['income'].mean(), 3)))\nprint('Median income is: {}'.format(profile['income'].median()))","7df7f166":"profile.dtypes","0e00046e":"profile.loc[:, 'became_member_on'] = pd.to_datetime(arg=profile['became_member_on'], format='%Y%m%d')\nprofile.head()","e870be5e":"profile['year'] = pd.DatetimeIndex(profile['became_member_on']).year\nprofile['month'] = pd.DatetimeIndex(profile['became_member_on']).month","98300696":"fig, axes = plt.subplots(1, 2, figsize=(20, 5))\n\nfor i, col in enumerate(['year', 'month']):\n    sns.lineplot(ax=axes[i], x=profile[col].unique(), y=profile[col].value_counts(), label='New members')\n    axes[i].set_title(f'The number of new members by {col}')\n    axes[i].set_xlabel(f'{col}')\n    axes[i].set_ylabel('Number of new members')\nplt.show()","4e3cbcd6":"profile_transcript = profile.merge(right=transcript, how='left', left_on='id', right_on='person')\nprofile_transcript.head()","4f7bbfb4":"transaction = profile_transcript.loc[profile_transcript['event'] == 'transaction']\noffer = profile_transcript.loc[profile_transcript['event'] != 'transaction']","4284bd1f":"import re\n\npattern = re.compile('[\\d]+.[\\d]+')\ntransaction['value'] = transaction['value'].apply(pattern.findall).str.get(0)\ntransaction.rename(columns={'value': 'amount'}, inplace=True)\ntransaction = transaction.astype(dtype={'amount': 'float'})\ntransaction.head()","ff0fb3a5":"mean_amount_by_id = pd.pivot_table(data=transaction, values='amount', index='id', aggfunc='mean').reset_index()\nmean_amount_by_id","041dac8f":"mean_amount_by_id = mean_amount_by_id.merge(right=profile, how='left', on='id')\nmean_amount_by_id.head()","275934ff":"def to_generation(age):\n    if age < 20:\n        return 'teenager'\n    elif age < 40:\n        return 'youth'\n    elif age < 60:\n        return 'middle'\n    elif age < 80:\n        return 'older'\n    else:\n        return 'senior'\n\nmean_amount_by_id['generation'] = mean_amount_by_id['age'].apply(to_generation)\nmean_amount_by_id.head()","ac339570":"gby_gender = mean_amount_by_id.groupby(by='gender').mean()['amount']\n\nsns.barplot(x=gby_gender.index, y=gby_gender)\nplt.title('Amount spent by gender')\nplt.xlabel('Gender')\nplt.ylabel('Amount spent')\nplt.show()","0678ec4f":"gby_generation = mean_amount_by_id.groupby(by='generation').mean()['amount']\n\nsns.barplot(x=gby_generation.index, y=gby_generation, order=['teenager', 'youth', 'middle', 'older', 'senior'])\nplt.title('Amount spent by generation')\nplt.xlabel('Generation')\nplt.ylabel('Amount spent')\nplt.show()","4f0ca9c3":"offer = profile_transcript.loc[profile_transcript['event'] == 'offer completed']\n\nID_LENGTH = 32\n\noffer['offer_id'] = offer['value'].str.slice(start=14, stop=(14 + ID_LENGTH))\noffer = offer.drop(labels='value', axis=1)\noffer.head()","d8c7e066":"cleaned_transcript = pd.concat(objs=[transaction, offer]).sort_index()\ncleaned_transcript.head()","ce5ed72a":"cleaned_transcript['generation'] = cleaned_transcript['age'].apply(to_generation)","260110a8":"history = cleaned_transcript.merge(right=portfolio, how='left', left_on='offer_id', right_on='id')","5a34f7a3":"history = history.drop(labels=['id_y'], axis=1)\nhistory.rename(columns={'id_x': 'id'}, inplace=True)\nhistory.head()","be3a1bc2":"history['amount'] = history['amount'].fillna(method='ffill')\nhistory = history.drop_duplicates(subset=['id', 'time'], keep='last')\nhistory.head()","2c77f2eb":"offer_completed = history.loc[history['event'] == 'offer completed']\n\nsns.countplot(data=offer_completed, x='offer_type')\nplt.title('Promotion engagement')\nplt.xlabel('Promotion type')\nplt.show()","f3ae1850":"gby_offer_type = offer_completed.groupby(by='offer_type').mean()['amount']\n\nsns.barplot(x=gby_offer_type.index, y=gby_offer_type)\nplt.title('Mean purchase amount: bogo vs. discount')\nplt.ylabel('Purchase amount')\nplt.show()","b2de3126":"bogo = offer_completed.loc[offer_completed['offer_type'] == 'bogo']\ndiscount = offer_completed.loc[offer_completed['offer_type'] == 'discount']\n\nfig, axes = plt.subplots(1, 2, figsize=(10, 5))\nsns.countplot(ax=axes[0], data=bogo, x='reward')\nsns.countplot(ax=axes[1], data=discount, x='reward')\nplt.suptitle('Promotion engagement by promotion type and reward')\naxes[0].set_title('bogo')\naxes[1].set_title('discount')\nplt.show()","a93b4748":"history_non_offer = history.loc[history['event'] == 'transaction']\nhistory_offer = history.loc[history['event'] == 'offer completed']\n\nsns.barplot(x=['non_offer', 'offer'], y=[history_non_offer['amount'].mean(), history_offer['amount'].mean()])\nplt.title('Mean purchase amount: non_offer vs. offer')\nplt.ylabel('Purchase amount')\nplt.show()","312568fd":"Also there are some suspicious aged people in the 'profile'.","0968c2a1":"We can answer this question by using 'became_member_on' column in the 'profile'.","f801d58b":"## 2.3. Does it make sense to offer certain rewards?","89748558":"## 2.1. Do people react to different promotions differently?","276eaf56":"Make the type of 'became_member_on' column as datetime.","720f5b61":"Interestingly, customers engaged more the discount promotion than the bogo promotion.  \nThe 'difficulty'(a.k.a. the minimum required spend) might affect the promotioin engagement.","03cc5576":"## 1.3. When do people typically become a member?","cfde7b7f":"## 1.1. What is gender distribution?","b03586e9":"## 3.1. How many clusters should Starbucks use? : To be updated.","d6d9c1ad":"There are some null values in the 'generation' columns.  \nApply 'to_generation'.","46339bfa":"Create new columns 'year' and 'month' from the 'became_member_on'.","9856c15a":"'offer completed' in 'event' indicates that the customer has engaged the promotion.","55a824e6":"To investigate the effect of promotions we have to merge the 'profile_transcript' with the 'portfolio' by using 'value' on the 'profile_transcript' and 'id' on the 'portfolio'.  \nSince 'value' contains 'offer id', we have to extract that information.","f7bc89f7":"From the variable description, some entries contain 'O' for other rather than 'M' or 'F'.  \nThe gender distirbution is like above, the customers consists of about 57% of male, 40% of female and 3% of the 3rd sex.m","c8a8211d":"Create a generatoin column for a better interpretation.","317666ea":"The purchase information is in the 'transcript -> value whose event == transaction -> amount'","74e7cd8b":"## 2.2. Does the reward of the promotion make people react differently?","aee2aa5e":"The number of new memebers higly increase after 2016.","e6b8cdbd":"It looks like that there are some null values in the 'profile'.","c4fc52c3":"Import data.","4df14f94":"We can plot the histogram by using 'income' column in the 'profile'.  \nBefore investigate the income distribution, create a 'log_income' column for a comparison.","24e4ca7e":"The lower reward, the more engagements regardless of the promotion type.  \nIn the same mannar, the 'difficulty' might affect to the result.","dac3f949":"Extract the amount paid using regular expression module.","bb68b4c2":"The suspicious age is 118.  \nAnd the people who have suspicious age also have the null value of 'gender' and 'income'.  \nIt is natural to remove them from the original 'profile' for the future works.  \nAnd the cleaned 'profile' is like this.  ","2a7a2cb0":"## 1.4. What is the average purchase distribtuion?","e6af3793":"There are about $7.5 of mean purcahse amount difference between 'non_offer' and 'offer'.  \nAlthough engaging the promotions needs the minimum required purchase amount(a.k.a. 'difficulty' in our dataset), the difference is pretty significant.","2b6c57de":"Female customers averagely spend more than $5 than male customers.","6d2d7257":"## 1.2. What is the income distribution?","35d91bde":"We can find out the gender distribution from the column 'gender' in the 'profile'.","0f07e6f7":"Create a pivot table that contains mean purchase amount by each member.","0f9b07c6":"In spite of little less engagement, bogo shows little higher mean purchase amount than discount.  \nIt might be the effect of the 'difficulty'.","b9230e04":"With cleaned prfile let's do the given tasks.","69b07906":"Over the middle-aged customers spend more money than the teenagers and the youth customers.","43771f22":"## 0. Data Filtering","dde6d706":"To add each member's demographic information merge the pivot_table with the 'profile'.","69978085":"To answer the question we have to merge the 'profile' and the 'transcript'."}}