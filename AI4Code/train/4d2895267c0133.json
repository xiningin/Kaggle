{"cell_type":{"c749adcc":"code","46d2be8b":"code","5f309be1":"code","555b6eb7":"code","6d17d9a4":"code","f4dd6f71":"code","618b001d":"code","6cb5bd5e":"code","189a03ff":"code","fcdbe45a":"code","a7652712":"code","97dd22f1":"code","83bff1a2":"code","8e05287d":"code","69e41b34":"code","6b098104":"code","9547c14f":"code","990950c3":"code","c2a6b156":"code","40f5ecab":"code","83c5501c":"code","82ad21b4":"code","bcd06784":"code","eb834d5a":"code","6fc49ea9":"code","6c170fd1":"code","f2a2ddfa":"code","815ff4ca":"code","a6db8120":"code","3ebd008b":"code","dc323033":"code","47bee6b7":"code","d3156f3f":"code","86eab31f":"code","3fbaadb0":"code","02d2616b":"code","229622e1":"code","9b099d21":"code","f32bfef2":"code","c17145ed":"code","e79968f0":"code","e5d1bd39":"code","04133467":"code","0128fc43":"code","f3ad48d0":"code","f2891569":"code","65e4d722":"code","7002d873":"code","e044238e":"markdown"},"source":{"c749adcc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","46d2be8b":"data=pd.read_csv(\"\/kaggle\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv\")\ndata.head()","5f309be1":"import seaborn as sns\nfrom sklearn.compose import make_column_transformer\nfrom sklearn.preprocessing import LabelEncoder,OneHotEncoder,OrdinalEncoder,StandardScaler\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn import set_config\nfrom sklearn.model_selection import train_test_split,cross_val_score\nfrom sklearn.metrics import accuracy_score,plot_confusion_matrix\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC","555b6eb7":"data.columns","6d17d9a4":"data.stroke.count()\n","f4dd6f71":"data.stroke.value_counts()","618b001d":"data.isnull().sum()","6cb5bd5e":"data['bmi']=data.bmi.fillna(data.bmi.mean())","189a03ff":"data.isnull().sum()","fcdbe45a":"sns.distplot(data.age)","a7652712":"data['Residence_type'].value_counts()","97dd22f1":"#sns.pairplot(data,hue=\"stroke\")","83bff1a2":"sns.heatmap(data.corr(),annot=True)","8e05287d":"num_cols=data.select_dtypes(include=['int','float'])\nnum_cols","69e41b34":"data.select_dtypes(exclude=['int','float'])","6b098104":"sns.boxplot(data.heart_disease)","9547c14f":"x=data.drop(columns=['stroke'])\n","990950c3":"x=data.drop(columns=['id','Residence_type'])","c2a6b156":"y=data[['stroke']]","40f5ecab":"x.head()","83c5501c":"y.head()","82ad21b4":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3)","bcd06784":"y.head()","eb834d5a":"x.head()","6fc49ea9":"y.head()","6c170fd1":"x.head()","f2a2ddfa":"nom_col=[0,5,8]\nord_col=[4]\nsc_col=[6]","815ff4ca":"x_train.iloc[:,6]","a6db8120":"trans_data=make_column_transformer((OneHotEncoder(sparse=False),nom_col),\n                                  (OrdinalEncoder(),ord_col),\n                                  (StandardScaler(),sc_col),remainder='passthrough')","3ebd008b":"from sklearn.neighbors import KNeighborsClassifier\nmodel=LogisticRegression(solver='liblinear')\nmodel2=KNeighborsClassifier(n_neighbors=5)","dc323033":"set_config(display='diagram')\npipe=make_pipeline(trans_data,model)\npipe","47bee6b7":"pipe.fit(x_train,y_train)","d3156f3f":"pred=pipe.predict(x_test)","86eab31f":"accuracy_score(pred,y_test)*100","3fbaadb0":"plot_confusion_matrix(model,trans_data.fit_transform(x),y)","02d2616b":"sns.countplot(data.stroke)","229622e1":"data.stroke.value_counts()","9b099d21":"from imblearn.over_sampling import RandomOverSampler,SMOTE\nfrom imblearn.under_sampling import RandomUnderSampler","f32bfef2":"under= RandomUnderSampler()\n\nx_under,y_under = under.fit_resample(x,y)\n\ny_under.stroke.value_counts()","c17145ed":"sns.countplot(y_under.stroke)","e79968f0":"x","e5d1bd39":"x.gender.unique()","04133467":"pipe","0128fc43":"from sklearn.model_selection import StratifiedKFold\nnp.mean(cross_val_score(pipe,trans_data.fit_transform(x),y,cv = StratifiedKFold(n_splits=2),scoring='accuracy'))*100","f3ad48d0":"x.head()","f2891569":"from imblearn.pipeline import make_pipeline\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nsmote=SMOTE()\nknn_model=KNeighborsClassifier(n_neighbors=5)\nsvc_model=SVC(kernel='poly')\nlr=LogisticRegression(solver='liblinear')\n\nnew_pipe_knn=make_pipeline(trans_data,smote,knn_model)\nnew_pipe_svc=make_pipeline(trans_data,smote,svc_model)\nnew_pipe_lr=make_pipeline(trans_data,smote,lr)\n\n","65e4d722":"pred=pipe.predict(pd.DataFrame(np.array([\"Female\",79.0,1,0,\"Yes\",\"Self-employed\",174.12,24,\"never smoked\",1]).reshape(1,10)))","7002d873":"pred","e044238e":"over = RandomOverSampler()\n\nx_over,y_over = over.fit_resample(x,y)\n\ny_over.stroke.value_counts()"}}