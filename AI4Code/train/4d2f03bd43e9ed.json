{"cell_type":{"4c9f4d24":"code","0a9c6a88":"code","6b998c7e":"code","dc9c9bb1":"code","bfc8e6a7":"code","cee32787":"code","98ba6d77":"code","b557f0c5":"code","ed585be4":"code","5b3a0449":"code","d904b71f":"code","28116563":"code","89e22af6":"code","642d7f1b":"code","90b2d599":"code","ca746afb":"code","f63ea589":"code","c2dabaf2":"code","9f6b3499":"code","26e7a2e0":"code","340832d3":"code","2b73ce65":"code","343137be":"code","7fe0b490":"code","afdcea83":"code","84840cfb":"code","ffe9925d":"code","a5cae04a":"code","1147a317":"code","f7751ba4":"code","14973244":"code","5251d3f8":"code","1ddc2101":"code","cecaf44a":"code","92aa2cc8":"code","b78f8849":"code","88b8dfd0":"code","26cf6195":"code","6c4fa586":"code","8b026fc8":"markdown","5caf3369":"markdown","8672d8ea":"markdown","fc2aca7a":"markdown","92d86cc2":"markdown","a38d6214":"markdown","89d58940":"markdown"},"source":{"4c9f4d24":"import numpy as np\nimport pandas as pd\nfrom matplotlib import pyplot as plt","0a9c6a88":"df = pd.read_csv('..\/input\/bank-customer-churn-modeling\/Churn_Modelling.csv')\ndf.head()","6b998c7e":"df = df.drop(['RowNumber','CustomerId','Surname'], axis=1)","dc9c9bb1":"df.head()","bfc8e6a7":"tenure_churn_no = df[df['Exited']==0]['Tenure']\ntenure_churn_yes = df[df['Exited']==1]['Tenure']\n\nplt.xlabel('Tenure')\nplt.ylabel('Number of customers')\nplt.title('Tenure vs Number of customers')\n\nplt.hist([tenure_churn_no, tenure_churn_yes], color=['green','red'], label=['Churn=No','Churn=Yes'])\nplt.legend()","cee32787":"age_churn_no = df[df['Exited']==0]['Age']\nage_churn_yes = df[df['Exited']==1]['Age']\n\nplt.xlabel('Age')\nplt.ylabel('Number of customers')\nplt.title('Age vs Number of customers')\n\nplt.hist([age_churn_no, age_churn_yes], color=['green','red'], label=['Churn=No','Churn=Yes'])\nplt.legend()","98ba6d77":"balance_churn_no = df[df['Exited']==0]['Balance']\nbalance_churn_yes = df[df['Exited']==1]['Balance']\n\nplt.xlabel('Balance')\nplt.ylabel('Number of customers')\nplt.title('Balance vs Number of customers')\n\nplt.hist([balance_churn_no, balance_churn_yes], color=['green','red'], label=['Churn=No','Churn=Yes'])\nplt.legend()","b557f0c5":"salary_churn_no = df[df['Exited']==0]['EstimatedSalary']\nsalary_churn_yes = df[df['Exited']==1]['EstimatedSalary']\n\nplt.xlabel('EstimatedSalary')\nplt.ylabel('Number of customers')\nplt.title('EstimatedSalary vs Number of customers')\n\nplt.hist([salary_churn_no, salary_churn_yes], color=['green','red'], label=['Churn=No','Churn=Yes'])\nplt.legend()","ed585be4":"df.info()","5b3a0449":"df = pd.get_dummies(df, columns=['Geography','Gender'])","d904b71f":"cols_to_scale = ['CreditScore','Age','Tenure','Balance','EstimatedSalary']\nfrom sklearn.preprocessing import MinMaxScaler\nmx = MinMaxScaler()\ndf[cols_to_scale] = mx.fit_transform(df[cols_to_scale])","28116563":"df.head()","89e22af6":"df.info()","642d7f1b":"df.describe()","90b2d599":"X = df.drop('Exited', axis=1)\nY = df['Exited']","ca746afb":"from sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test = train_test_split(X,Y,test_size=0.2,random_state=5)","f63ea589":"import tensorflow as tf\nfrom tensorflow import keras","c2dabaf2":"X_train.shape","9f6b3499":"model = keras.Sequential([\n                          keras.layers.Dense(20, input_dim=13, activation='relu'),\n                          keras.layers.Dense(10, activation='relu'),\n                          keras.layers.Dense(1, activation='sigmoid')\n])\n\nmodel.compile(optimizer='adam',\n              loss='binary_crossentropy',\n              metrics=['accuracy'])\n\nmodel.fit(X_train, Y_train, epochs=100)","26e7a2e0":"model.evaluate(X_test, Y_test)","340832d3":"y_pred = model.predict(X_test).reshape(-1)","2b73ce65":"y_pred = np.round(y_pred)","343137be":"y_pred[:10]","7fe0b490":"Y_test[:10]","afdcea83":"from sklearn.metrics import classification_report, confusion_matrix\nprint(classification_report(Y_test, y_pred))","84840cfb":"import seaborn as sns\ncm = tf.math.confusion_matrix(labels=Y_test, predictions=y_pred)\nsns.heatmap(cm, annot=True, fmt='d')\nplt.xlabel('Predictions')\nplt.ylabel('Truth')","ffe9925d":"df['Exited'].value_counts()","a5cae04a":"count_of_majority,count_of_minority = df['Exited'].value_counts()","1147a317":"df_class_0 = df[df['Exited']==0]\ndf_class_1 = df[df['Exited']==1]","f7751ba4":"df_class_1_over = df_class_1.sample(count_of_majority, replace=True)","14973244":"df_class_1_over.shape","5251d3f8":"df_test = pd.concat([df_class_0,df_class_1_over], axis=0)","1ddc2101":"df_test.shape","cecaf44a":"X = df_test.drop('Exited',axis=1)\nY = df_test['Exited']\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test = train_test_split(X,Y,test_size=0.2,random_state=5, stratify=Y)","92aa2cc8":"model = keras.Sequential([\n                          keras.layers.Dense(20, input_dim=13, activation='relu'),\n                          keras.layers.Dense(10, activation='relu'),\n                          keras.layers.Dense(1, activation='sigmoid')\n])\n\nmodel.compile(optimizer='adam',\n              loss='binary_crossentropy',\n              metrics=['accuracy'])\n\nmodel.fit(X_train, Y_train, epochs=100)","b78f8849":"model.evaluate(X_test, Y_test)","88b8dfd0":"Y_pred = model.predict(X_test)\nY_pred = np.round(Y_pred)","26cf6195":"print(classification_report(Y_test,Y_pred))","6c4fa586":"cm = tf.math.confusion_matrix(labels=Y_test, predictions=Y_pred)\nsns.heatmap(cm, annot=True, fmt='d')\nplt.xlabel('Predictions')\nplt.ylabel('Truth')","8b026fc8":"Churn rate is low when tenure is high","5caf3369":"Accuracy for class 1 has gone from 56% to 80%","8672d8ea":"There doesn't seem to be impact of Estimated Salary on Churn","fc2aca7a":"Accurracy of 1 is less because of imbalanced dataset","92d86cc2":"<a href=\"https:\/\/colab.research.google.com\/github\/harithaselvakumaran\/Customer_Churn_Prediction\/blob\/main\/Bank_Churn_Modelling.ipynb\" target=\"_parent\"><img src=\"https:\/\/colab.research.google.com\/assets\/colab-badge.svg\" alt=\"Open In Colab\"\/><\/a>","a38d6214":"Churn Rate is very low between ages 30-50 as compared to the number of customers","89d58940":"There seems to be outliers near to 0"}}