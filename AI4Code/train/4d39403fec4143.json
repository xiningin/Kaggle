{"cell_type":{"2f47b874":"code","fe95da46":"code","20c5075a":"code","0df98d1b":"code","bfd85a3f":"code","bfaeedaf":"code","a17dbfb2":"code","6a5bde8a":"code","c4c028a3":"code","3c3c5ef7":"code","7daed65a":"code","e76b3ecd":"code","0c0adc65":"code","636c6bcc":"code","921f8962":"code","e479671a":"code","e604d988":"code","a8155cab":"code","51824061":"code","d4ecc595":"code","a8de8dbb":"code","789eaef3":"code","33c7181b":"code","89dcfb9e":"code","b82be9c0":"code","425e3124":"code","40c993f2":"code","d95de4a4":"code","cb178f2f":"code","c26aea2c":"code","050b590b":"code","6db3ad66":"code","b2018d6c":"code","07256ab8":"code","706d3b88":"code","326b15fe":"code","bb83c32a":"code","177ae26d":"code","8cf46d56":"code","4152af79":"code","c63575e3":"code","f03db7de":"code","1c612f55":"markdown","becf5a29":"markdown","b8daf64b":"markdown","fd08de32":"markdown","6a10162c":"markdown","483627d2":"markdown","30c35fbc":"markdown","fa6b990c":"markdown","bf196706":"markdown","97170870":"markdown","2c905fc9":"markdown","e5464043":"markdown","5651939c":"markdown","b42bee3e":"markdown","5312270e":"markdown","67fa662b":"markdown"},"source":{"2f47b874":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nimport warnings\nwarnings.filterwarnings('ignore')\n","fe95da46":"%pip install feature_engine","20c5075a":"df = pd.read_csv('..\/input\/titanic\/train.csv')\ndf_copy = df.copy()\ntest = pd.read_csv('..\/input\/titanic\/test.csv')\ntest_copy = test.copy()\nsubmission3 = pd.read_csv('..\/input\/titanic\/gender_submission.csv')","0df98d1b":"df.head()","bfd85a3f":"df.drop(columns=['Name'],inplace=True)\ndf.drop(columns=['Ticket'],inplace=True)\ndf.drop(columns=['PassengerId'],inplace=True)\n\n\ntest.drop(columns=['PassengerId','Ticket','Name'],inplace=True)","bfaeedaf":"df.info()","a17dbfb2":"df['Pclass'] = df['Pclass'].astype('object')\n\ntest['Pclass'] = test['Pclass'].astype('object')","6a5bde8a":"categoricals = [var for var in df.columns if df[var].dtype == 'object' and var != 'Survived']\ndiscreate = [var for var in df.columns if df[var].dtype != 'object' and var != 'Survived' and len(df[var].unique()) < 10]\ncontinuous = [var for var in df.columns if df[var].dtype != 'object' and var != 'Survived'and var not in discreate]","c4c028a3":"categoricals","3c3c5ef7":"discreate","7daed65a":"continuous","e76b3ecd":"pd.DataFrame(df[categoricals].nunique(),columns=['unique']).T","0c0adc65":"missing = {var:np.round(df[var].isnull().mean(),2) for var in df.columns if df[var].isnull().mean() > 0.05}\nmissing","636c6bcc":"{var:np.round(df[var].isnull().mean(),2) for var in df.columns if df[var].isnull().mean() < 0.05}\n","921f8962":"df.isnull().mean().plot.bar(figsize = (10,5))\n\nsns.despine(bottom=True,left=True);","e479671a":"from scipy.stats import norm\n\ni = 1\nfor col in continuous:\n    \n\n    plt.figure(figsize = (10,5))\n    plt.figure(i)\n    \n    sns.distplot(df[col].dropna(),fit=norm)\n    \n    sns.despine(bottom=True,left=True);\n    \n    i += 1","e604d988":"plt.figure(figsize = (12,6))\nsns.distplot(np.log(1+df['Fare'].dropna()),fit=norm)\nsns.despine(bottom=True,left=True);","a8155cab":"for var in continuous:\n    df[var].fillna(df[var].mean(),inplace = True)\n    test[var].fillna(test[var].mean(),inplace = True)","51824061":"df.isnull().mean()","d4ecc595":"df['Cabin'] = df['Cabin'].str[0]\ntest['Cabin'] = test['Cabin'].str[0]","a8de8dbb":"for var in categoricals:\n    df[var].fillna('Missing',inplace = True)\n    test[var].fillna('Missing',inplace = True)","789eaef3":"df['family_size'] = df['SibSp'] + df['Parch']\n\ntest['family_size'] = test['SibSp'] + test['Parch']","33c7181b":"import missingno as msno\nmsno.bar(df);","89dcfb9e":"msno.bar(test);","b82be9c0":"from sklearn.model_selection import train_test_split\nX = df.drop('Survived',axis = 1)\ny = df['Survived']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)\nX_train.shape, X_test.shape","425e3124":"def rare_laebl(df):\n    i = 1\n    for col in categoricals:\n        plt.figure(i)\n        (df[col].value_counts() \/ len(df)).plot.bar(figsize=(8,4));\n        plt.axhline(0.05,c = 'red',ls = '--')\n        plt.title(f'Labels in {col}')\n        sns.despine(bottom=True,left=True);\n        i += 1\n        \n        \nrare_laebl(X_train)","40c993f2":"pd.DataFrame(X_train[categoricals].nunique(),columns=['unique']).T","d95de4a4":"from sklearn.preprocessing import KBinsDiscretizer","cb178f2f":"kb = KBinsDiscretizer(n_bins=5, encode='ordinal', strategy='kmeans')","c26aea2c":"kb.fit(X_train[['Age','Fare']])","050b590b":"X_train[['Age','Fare']] = kb.transform(X_train[['Age','Fare']])\nX_test[['Age','Fare']] = kb.transform(X_test[['Age','Fare']])\n\ntest[['Age','Fare']] = kb.transform(test[['Age','Fare']])","6db3ad66":"X_train['Pclass'] = X_train['Pclass'].astype('object')\nX_test['Pclass'] = X_test['Pclass'].astype('object')\n\ntest['Pclass'] = test['Pclass'].astype('object')","b2018d6c":"display(X_train.head(),test.head())","07256ab8":"from feature_engine.categorical_encoders import MeanCategoricalEncoder\nfre_encoder = MeanCategoricalEncoder(variables=['Embarked','Sex','Pclass','Cabin'])\nfre_encoder.fit(X_train,y_train)","706d3b88":"X_train = fre_encoder.transform(X_train)\nX_test = fre_encoder.transform(X_test)\n\ntest = fre_encoder.transform(test)","326b15fe":"from sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.svm import SVC\n\nrf = RandomForestClassifier(n_jobs=4)","bb83c32a":"rf.fit(X_train,y_train)","177ae26d":"prediction = rf.predict(X_test)","8cf46d56":"from sklearn.metrics import confusion_matrix,classification_report,roc_auc_score\nprint(classification_report(y_test,prediction))","4152af79":"print(confusion_matrix(y_test,prediction))\nroc_auc_score(y_test,prediction)","c63575e3":"print('Roc_acu on the train: ',roc_auc_score(y_train,rf.predict(X_train)))\nprint('Roc_acu on the test: ',roc_auc_score(y_test,prediction))","f03db7de":"# submission = rf.predict(test)\n# submission\n# submission = pd.DataFrame({'Survived':submission,'PassengerId':test_copy['PassengerId'].values})\n# submission.set_index('PassengerId',inplace=True)\n# submission.to_csv('Tiniancc_kaggle1.csv')","1c612f55":"> **Discretisation(K means) for all continuous varibales**","becf5a29":"> **Check the caridinity for categorical varibales**","b8daf64b":"> **Trying to make it normal distribution**","fd08de32":"> **Check missingess less than 5% which we can delete directly**","6a10162c":"> **Check the rare label for categorical varibles**","483627d2":"> **Classify the varibles **","30c35fbc":"> **Import the file**","fa6b990c":"> **Delete the data we dont need**","bf196706":"> **Check for each category **","97170870":"Submission part","2c905fc9":"> **Check the distribution of continuous varibales**","e5464043":"> **Mean encoding for categorical varibales**","5651939c":"> **Check overall**","b42bee3e":"> **check the data **","5312270e":"> **Delete the columns we dont need **","67fa662b":"> **Explore new feature**"}}