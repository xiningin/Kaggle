{"cell_type":{"0b74a3ff":"code","a888ed28":"code","36b1d432":"code","9cd0190f":"code","6c20a453":"code","50258eb6":"code","2f8d3f1e":"code","101fffad":"code","6a66f9fb":"code","45ea4fdf":"code","d7bb38ea":"code","8cdd342d":"code","4a7478fd":"code","f62b7a78":"code","787f9551":"code","e8629e4d":"code","310b3af3":"code","d216c653":"code","aede669f":"code","1bf4825c":"code","a2bc276f":"code","4095cc0e":"code","64336907":"code","4ae7e3d5":"code","7de50e5b":"markdown","84aba049":"markdown","8e086fca":"markdown","0fe6a836":"markdown","1a6bebc5":"markdown"},"source":{"0b74a3ff":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a888ed28":"# Pandas : librairie de manipulation de donn\u00e9es\n# NumPy : librairie de calcul scientifique\n# MatPlotLib : librairie de visualisation et graphiques\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\nfrom sklearn import metrics\nfrom sklearn import preprocessing\nfrom sklearn import model_selection\nfrom sklearn.metrics import classification_report, confusion_matrix, roc_curve, roc_auc_score,auc, accuracy_score\n\nfrom sklearn.linear_model import LogisticRegression\n\nfrom sklearn.model_selection import train_test_split\n\nfrom IPython.core.display import HTML # permet d'afficher du code html dans jupyter","36b1d432":"df = pd.read_csv(\"..\/input\/creditcardfraud\/creditcard.csv\")","9cd0190f":"df.head()\n","6c20a453":"df.count()","50258eb6":"df.info()","2f8d3f1e":"df.describe()","101fffad":"df.columns","6a66f9fb":"columns = df.columns\ncolumns = columns.drop(['Time'])","45ea4fdf":"from sklearn.model_selection import train_test_split\n\nX = df.drop(['Class'], axis=1)\ny = df.Class\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=1)","d7bb38ea":"from sklearn import ensemble\n\nrf = ensemble.RandomForestClassifier()\nrf.fit(X_train, y_train)\ny_rf = rf.predict(X_test)","8cdd342d":"print(classification_report(y_test, y_rf))","4a7478fd":"cm = confusion_matrix(y_test, y_rf)\nprint(cm)","f62b7a78":"for col in columns :\n    plt.figure(figsize=[10,5])\n    sns.kdeplot(df[col])","787f9551":"df.Class.value_counts()","e8629e4d":"from imblearn.under_sampling import RandomUnderSampler \n\nrus = RandomUnderSampler()\nX_train, y_train = rus.fit_resample(X_train, y_train)","310b3af3":"y_train.value_counts()","d216c653":"rf = ensemble.RandomForestClassifier()\nrf.fit(X_train, y_train)\ny_rf = rf.predict(X_test)\n\nprint(classification_report(y_test, y_rf))","aede669f":"cm = confusion_matrix(y_test, y_rf)\nprint(cm)","1bf4825c":"X = df.drop(['Class'], axis=1)\ny = df.Class\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)","a2bc276f":"df.Class.value_counts()","4095cc0e":"from xgboost import XGBClassifier\nxgb = XGBClassifier(scale_pos_weight=2278\/388)\n# xgb = XGBClassifier()\nxgb.fit(X_train,y_train)\ny_xgb = xgb.predict(X_test)","64336907":"print(classification_report(y_test, y_xgb))","4ae7e3d5":"cm = confusion_matrix(y_test, y_xgb)\nprint(cm)","7de50e5b":"# Downsampling","84aba049":"# XGBoost pond\u00e9r\u00e9","8e086fca":"# Machine Learning","0fe6a836":"# Visualisation","1a6bebc5":"# Random Forest"}}