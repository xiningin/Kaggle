{"cell_type":{"b2968d02":"code","a2ca7c2c":"code","a1e7084d":"code","a29b63ea":"code","6601f6f4":"code","07a2a2c3":"code","a151c755":"code","256e9833":"code","0378ab8c":"code","ba531e9d":"code","36cd2ba6":"code","8d71204d":"code","c68ecc3c":"code","ba3cf534":"code","5d55d55e":"code","9dc6728b":"code","35cec497":"code","d58f8dfa":"code","f78c1ee5":"code","711db57e":"code","59beec24":"code","31317d4e":"code","664f1ffc":"code","832d91c8":"code","a6992f97":"code","76e965d3":"code","b2c6fe79":"code","901a4cab":"code","3afca358":"code","27213b3b":"code","a49dd52c":"code","67076ed8":"code","d57bf5da":"code","8d12c57e":"code","fc8fe878":"code","23f2d159":"code","796ba53b":"code","7541c637":"code","2ceafe00":"code","db9a33d1":"code","0d39a592":"code","9a1ae788":"code","b279e770":"markdown","71ab7aef":"markdown"},"source":{"b2968d02":"import warnings                                  # `do not disturbe` mode\nwarnings.filterwarnings('ignore')\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pylab as plt\n%matplotlib inline\nfrom matplotlib.pylab import rcParams\nrcParams['figure.figsize']=(10,4)","a2ca7c2c":"df=pd.read_csv('..\/input\/covid19-data-keraa\/covid3.csv')\ndf.head()\n#df.columns","a1e7084d":"df2=df[['Date','Confirmed']]\ndf2.head()","a29b63ea":"#making date as index\ndf2['Date']=pd.to_datetime(df['Date'],infer_datetime_format=True)\nind=df2.set_index(['Date'])\nind.tail()","6601f6f4":"#coverting into daily covid numbers\nind2=ind.diff(axis = 0, periods = 1)\nind2.tail()","07a2a2c3":"dfn=ind2.tail(50)\ndfn","a151c755":"ind2.dropna(inplace=True)\nind2.head()","256e9833":"plt.xlabel(\"Date\")\nplt.ylabel(\"Confirmed\")\nplt.title(\"DailyCases\")\nplt.plot(ind2)","0378ab8c":"# determining rolling mean statistics\nrolmean=ind2.rolling(window=12).mean()\nrolstd=ind2.rolling(window=12).std()\nprint(rolmean,rolstd)","ba531e9d":"orig=plt.plot(ind2,color='blue',label='Original')\nmean=plt.plot(rolmean,color='red',label='Rolling mean')\nstd=plt.plot(rolstd,color='green',label='Roling std')\nplt.legend(loc='best')\nplt.title(\"rolling mean and std\")\nplt.show(block=False)","36cd2ba6":"# To check stationarity\n\ndef test_stationarity(tseries):\n    # determining rolling mean statistics\n    rolmean=tseries.rolling(window=12).mean()\n    rolstd=tseries.rolling(window=12).std()\n    \n    \n    #pllotting rolling statistics\n    orig=plt.plot(tseries,color='blue',label='Original')\n    mean=plt.plot(rolmean,color='red',label='Rolling mean')\n    std=plt.plot(rolstd,color='green',label='Roling std')\n    plt.legend(loc='best')\n    plt.title(\"rolling mean and std\")\n    plt.show(block=False)\n    \n    from statsmodels.tsa.stattools import adfuller\n    print('Result of ADf test')\n    dftest=adfuller(tseries['Confirmed'],autolag='AIC')\n    dfoutput=pd.Series(dftest[0:4],index=['test statistic','p-value','#lag used','Number of observations used'])\n    for key,value in dftest[4].items():\n        dfoutput['critical valur(%s)'%key]=value\n    print(dfoutput)\n    \n    ","8d71204d":"test_stationarity(ind2)","c68ecc3c":"movingAvg=ind2.rolling(window=12).mean()\nindMA=ind2-movingAvg\nindMA.head(12)","ba3cf534":"movingAvg=movingAvg.dropna()\nmovingAvg","5d55d55e":"indMA.dropna(inplace=True)\nindMA.head()","9dc6728b":"test_stationarity(indMA)# testing stationarity and now the data ia stationary","35cec497":"#USING indMEA\n\nfrom statsmodels.tsa.stattools import arma_order_select_ic\nfrom statsmodels.tsa.arima_model import ARIMA","d58f8dfa":"arma_order_select_ic(indMA)# checking the laags to use in ARIMA model","f78c1ee5":"model=ARIMA(indMA,order=(4,0,2))\nresults_arima=model.fit(disp=1)\nplt.plot(indMA)\nplt.plot(results_arima.fittedvalues,color='red')\nplt.title('RSS: %4f'%sum(results_arima.fittedvalues-indMA['Confirmed']))\nplt.show()","711db57e":"model_fit=model.fit()","59beec24":"predictMA=pd.Series(results_arima.fittedvalues,copy=True)\npredictMA","31317d4e":"predMA=predictMA.to_frame()\npredMA.head()","664f1ffc":"#converting to original form by adding moving averages\nmodelvalues=predMA[0]+movingAvg['Confirmed']\nmodelvalues.tail()","832d91c8":"plt.plot(ind2)\nplt.plot(modelvalues,color='red')\nplt.show()","a6992f97":"ss=results_arima.forecast(20)\nss\n","76e965d3":"forcast,std,ci=ss","b2c6fe79":"type(results_arima)","901a4cab":"forcast","3afca358":"std","27213b3b":"ci","a49dd52c":"ind2.tail(12)","67076ed8":"sumof11=ind2.iloc[-11:].sum()","d57bf5da":"sumof11","8d12c57e":"ind3=ind2.tail(12)\nind3\n","fc8fe878":"for i in forcast:\n    s=ind3.iloc[-6:].sum()\n    val=((7*i)+s)\/6\n    ind3=ind3.append(val,ignore_index=True)\nind3","23f2d159":"date=pd.date_range(start='05\/2\/2021', end='06\/02\/2021')","796ba53b":"date","7541c637":"final= pd.DataFrame()\nfinal[\"date\"]=date","2ceafe00":"final['Predicted']=ind3['Confirmed']","db9a33d1":"flast","0d39a592":"flast['date']=pd.to_datetime(flast['date'],infer_datetime_format=True)\nfn=flast.set_index(['date'])\nfn","9a1ae788":"orig=plt.plot(dfn,color='blue',label='Original')\npredicted=plt.plot(fn,color='red',label='Predicted')\n\nplt.legend(loc='best')\nplt.title(\"original vs prediction\")\nplt.show(block=True)","b279e770":"# ARIMA MODEL","71ab7aef":"# Diffrencing simple moving average for stationaeizing"}}