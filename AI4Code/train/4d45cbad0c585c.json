{"cell_type":{"919239a6":"code","d94e3e5a":"code","efe0ba64":"code","e7de1f72":"code","65e47bd1":"code","eddb6e9d":"code","67ffe636":"code","33768657":"code","2687b215":"code","8b2acc33":"code","1bba61b9":"code","36b64437":"code","4976ef4a":"code","9a95ee9b":"code","1bd74890":"markdown","fc3a935e":"markdown","82c73e13":"markdown"},"source":{"919239a6":"#Check for presence of GPU\n!nvidia-smi","d94e3e5a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport glob\nfrom fastai.vision.all import *\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","efe0ba64":"#Check for shape of training data\ntrain = pd.read_csv('\/kaggle\/input\/cassava-leaf-disease-classification\/train.csv')\ntrain.shape","e7de1f72":"#Let's see how the training data looks\ntrain.head()","65e47bd1":"# Check if there is class imbalance\ntrain['label'].value_counts().plot(kind='bar')","eddb6e9d":"#Validate if training images directory contain all the files\ntrain_fns = glob.glob('\/kaggle\/input\/cassava-leaf-disease-classification\/train_images\/*.*')\nlen(train_fns)","67ffe636":"#Check sample submission file\nss = pd.read_csv('\/kaggle\/input\/cassava-leaf-disease-classification\/sample_submission.csv')\nss.head()","33768657":"img2lbl = dict()\nfor k,v in zip(train.image_id.values,train.label.values):\n    img2lbl[k] = v  ","2687b215":"def get_items(_):\n    return train.image_id.values","8b2acc33":"def get_x(fn):\n    img = Image.open('\/kaggle\/input\/cassava-leaf-disease-classification\/train_images\/' + fn)\n    return np.array(img)","1bba61b9":"def get_y(fn):\n    return img2lbl[fn]","36b64437":"db = DataBlock(blocks = (ImageBlock, CategoryBlock),\n               get_items = get_items,\n               get_x = get_x,\n               get_y     = get_y,\n               splitter  = RandomSplitter(),\n               item_tfms = Resize(224),\n               batch_tfms= [Normalize.from_stats(*imagenet_stats),*aug_transforms(size=224)]\n              )\n\ndls = db.dataloaders('',bs=64)\ndls.show_batch()","4976ef4a":"learn = cnn_learner(dls,resnet34,CrossEntropyLossFlat,metrics=[accuracy]).to_fp16()","9a95ee9b":"learn.fine_tune(5)","1bd74890":"# This is a baseline model showing FastAI library to solve the leaf disease classification problem","fc3a935e":"# **Fastai dataloaders**","82c73e13":"# Creating a learner using Resnet34 model and train"}}