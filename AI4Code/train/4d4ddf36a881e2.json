{"cell_type":{"9ec70746":"code","96cc810b":"code","6ecad8a1":"code","a396ed99":"code","1ed98899":"code","eec424ee":"code","77eef72f":"code","0ee0f965":"code","59cd2cfc":"code","f6b51193":"code","d60ccda6":"code","45500250":"code","272c34cd":"code","448cf05d":"code","ba052582":"code","5218606f":"code","4deff37f":"code","657fcde1":"markdown","09f1c5b5":"markdown","510c3255":"markdown","311cab77":"markdown","0ac1c592":"markdown","98798e52":"markdown","b37a7c94":"markdown","c16d9c1a":"markdown","eb325f82":"markdown","e895568a":"markdown","ed7241da":"markdown","db251fac":"markdown","cec0118f":"markdown","e907e18b":"markdown","6cd35348":"markdown","d7da701e":"markdown","fcaa9412":"markdown","55c86d4c":"markdown","ccc6ecc4":"markdown","cd325619":"markdown","6a8d09fd":"markdown","70725d98":"markdown","1484a3c3":"markdown","2236c300":"markdown","68d09e1e":"markdown"},"source":{"9ec70746":"# data analysis, wrangling and preprocessing\nimport numpy as np \nimport pandas as pd\n\n# deal with datetime object\nimport datetime\n\n# data visualization\nimport matplotlib.pyplot as plt\nfrom matplotlib.patches import Rectangle\nimport seaborn as sns","96cc810b":"summary = pd.read_csv('\/kaggle\/input\/us-historical-stock-prices-with-earnings-data\/dataset_summary.csv', parse_dates=['stock_from_date','stock_to_date','earnings_from_date','earnings_to_date'])","6ecad8a1":"unique_symbol = len(summary['symbol'].unique())\nprint(f'The unique number of stocks in the summary dataset is {unique_symbol}')","a396ed99":"summary.info()","1ed98899":"summary['stock_from_year'] = summary.apply(lambda row: row['stock_from_date'].year, axis=1)\ndf = summary['stock_from_year'].value_counts().rename_axis('year').reset_index(name='counts')\ndf.set_index('year').sort_values(by=['year']).plot(kind='bar', legend=None)\nplt.xlabel('Year')\nplt.ylabel('frequency')\nplt.title('Histogram of stock_from_date column')\nplt.xticks(rotation=45)","eec424ee":"summary['stock_from_quarter'] = summary.apply(lambda row: row['stock_from_date'].quarter, axis=1)\ndf = summary['stock_from_quarter'].value_counts().rename_axis('quarter').reset_index(name='counts')\ndf.set_index('quarter').sort_values(by=['quarter']).plot(kind='bar', legend=None)\nplt.xlabel('quarter')\nplt.ylabel('frequency')\nplt.title('Histogram of stock_from_date column group by quarter')\nplt.xticks(rotation=45)","77eef72f":"summary_ = summary[summary['stock_from_year'] != 1998]\ndf = summary_['stock_from_quarter'].value_counts().rename_axis('quarter').reset_index(name='counts')\ndf.set_index('quarter').sort_values(by=['quarter']).plot(kind='bar', legend=None)\nplt.xlabel('quarter')\nplt.ylabel('frequency')\nplt.title('Histogram of stock_from_date column group by quarter')\nplt.xticks(rotation=45)","0ee0f965":"summary['earnings_from_date'].min()","59cd2cfc":"# Create a new dataframe, containing the actual IPOs in a year since 2009\n# Sources: https:\/\/stockanalysis.com\/ipos\/statistics\/\nyear_range = np.arange(2009,2021,1)\nipos = [79,190,171,157,251,304,206,133,217,255,233,480]\nipo = pd.DataFrame({'year' : year_range, 'ipos':ipos})","f6b51193":"summary['earnings_from_year'] = summary.apply(lambda row: row['earnings_from_date'].year, axis=1)\ndf = summary['earnings_from_year'].value_counts().rename_axis('year').reset_index(name='counts')\ndf['year'] = df['year'].astype(int)\ndf = df.set_index('year').sort_values(by=['year'])","d60ccda6":"comp = pd.merge(ipo, df, on=\"year\")\ncomp['diff'] = comp['ipos'] - comp['counts']\ncomp = comp[['year','diff']]\ncomp = comp.set_index('year')\ncomp = comp.iloc[1:,:]\ncomp.plot(kind='bar', legend=None)\nplt.xticks(rotation=45)\nplt.ylabel('number of IPOs reported')\nplt.title('Difference in Number of IPOs')\nplt.axhline(y=0, linewidth=0.5, color='black')","45500250":"summary['earnings_from_weekday'] = summary.apply(lambda row: row['earnings_from_date'].weekday(), axis=1)\ndf = summary['earnings_from_weekday'].value_counts().rename_axis('weekday').reset_index(name='counts')\ndf = df.set_index('weekday').sort_values(by=['weekday'])\ndf.rename(index={0.0:'Monday',1.0:'Tuesday',2.0:'Wednesday',3.0:'Thursday',4.0:'Friday',5.0:'Saturday',6.0:'Sunday'},inplace=True)\ndf.plot(kind='bar', legend=None)\nplt.xticks(rotation=45)","272c34cd":"summary['earnings_from_year'] = summary.apply(lambda row: row['earnings_from_date'].year, axis=1)\nsummary_ = summary[summary['earnings_from_year'] != 2009]\ndf = summary_['earnings_from_weekday'].value_counts().rename_axis('weekday').reset_index(name='counts')\ndf = df.set_index('weekday').sort_values(by=['weekday'])\ndf.rename(index={0.0:'Monday',1.0:'Tuesday',2.0:'Wednesday',3.0:'Thursday',4.0:'Friday',5.0:'Saturday',6.0:'Sunday'},inplace=True)\ndf.plot(kind='bar', legend=None)\nplt.xticks(rotation=45)","448cf05d":"summary['total_prices'].hist()\nplt.xlabel('total_prices')\nplt.ylabel('frequency')\nplt.title('Histogram of total_prices column')","ba052582":"summary['total_earnings'].hist()\nplt.xlabel('total_earnings')\nplt.ylabel('frequency')\nplt.title('Histogram of total_earnings column')","5218606f":"summary['earnings_years'] = datetime.datetime.now() - summary['earnings_from_date']\nsummary['earnings_years'] = summary.apply(lambda row: row['earnings_years'].days \/ 365, axis=1)\nsummary['stock_years'] = datetime.datetime.now() - summary['stock_from_date']\nsummary['stock_years'] = summary.apply(lambda row: row['stock_years'].days \/ 365, axis=1)\nsns.jointplot(data=summary,x='stock_years',y='earnings_years', kind='kde')","4deff37f":"g = sns.jointplot(data=summary,x='total_prices',y='total_earnings',kind='hex')\nax = g.ax_joint\nax.add_patch(Rectangle((4500, 35), 1500, 15, fill=False, edgecolor='red', lw=1))\nax.add_patch(Rectangle((0, 0), 1500, 8, fill=False, edgecolor='red', lw=1))\nax.add_patch(Rectangle((200, 10), 1800, 25, fill=False, edgecolor='red', lw=1))\nax.text(1700, 2, \"Group 1\", horizontalalignment='left', size='medium', color='black', weight='semibold')\nax.text(2300, 13, \"Group 2\", horizontalalignment='left', size='medium', color='black', weight='semibold')\nax.text(4300, 38, \"Group 3\", horizontalalignment='right', size='medium', color='black', weight='semibold')","657fcde1":"One thing to note before going into the takeaways from this plot is that the contour plot goes\ninto the negative territory for a specific region. This is one of the limitations of the kde plot\nbecause of the concentration of data points in that region. \n\nThere are several takeaways from this joint plot:\n* It's been around 12 years since most of the earnings are started to be reported \n* It's been around 25 years since most of the prices are started to be reported in these datasets. \n* The discrepancy in the two bullet points above means that we don't necessarily have \nearnings and price data for a period of time. \n* For our analysis, we need both earnings and price data of a particular stock to measure the \nprice leading up to the earnings announcement and the reaction of the stock prices after the \nearnings announcement. ","09f1c5b5":"There are a number of takeaways from this chart:\n\n* `total_prices` is bimodal, with concentrations at 0 and 5500.\n* The mode at 0 is due to the fact these stocks do not have price data.\n* The mode at 5500 is due to the fact that our dataset begins in 1998, \nso securities that have price data before that are censored.\n\nWe identified the `total_price` column to be right-censored.\nThe censoring of the data is a potential issue because the observed value of the \n`total_prices` is partially known. In this case, we don't know the price of stocks before 1998. ","510c3255":"## Summary table\n\nThese are the following fields in the `summary` dataset.\n\n* `symbol`: This is the ticker of the stock.\n\n* `total_prices`: This is the number of records this particular ticker has in the stock prices dataset. \n\n* `stock_from_date`: The earliest date a price is available for this ticker in the price dataset. \n\n* `stock_to_date`: The latest date a price is available for this ticker in the price dataset.\n\n* `total_earnings`: The number of records corresponding to this particular ticker in the earnings dataset.\n\n* `earnings_from_date`: The earliest date earnings are available for this ticker in the earnings data.\n\n* `earnings_from_date`: The latest date earnings are available for this ticker in the earnings data.","311cab77":"There are a number of takeaways from this chart:\n* `total_earnings` is bimodal with two concentrations at 0 and 45. \n* The peak at 45 represents the number of companies that we have all of their earnings data\nin the time slot of the dataset\n* The peak at 0 says that there are a lot of companies that have very limited number of\nearnings available for our analysis. \n\nWe consider a cut-off point where we can obtain companies with enough earnings for analysis. ","0ac1c592":"## Loading Data\nWe start by loading the datasets into Pandas DataFrames.","98798e52":"Based on the distribution of `earnings_from_date` across weekdays, \nwe can see that most of the companies in our datasets report their **first** earnings on a Thursday.\nStarting with Monday, more and more companies report their earnings throughout the week. \nWe have also notice that fewer companies reported their earnings on a Friday in the time \nframe of this dataset. \nAnd almost no companies reported their earnings on weekends except few companies on Saturday, \nwhich we may have to look into why they reported their earnings on a Saturday.\n\nSince companies from 2009 may have a huge weight in this plot, \nwe are going to eliminate those companies and see how the distribution look like:","b37a7c94":"As you can see in the histograms on the top and on the side of the joint distribution, \nthere are a large number of companies that have zero `total_prices` when the `total_earnings` \nis zero (Group 1). These records won't be helpful for our model.\n\nWhile we exclude the records where the `total_earnings` is not zero, `total_prices` caps at \naround 5500. This will useful because we can set a range where we only investigate stocks with \nmore than a certain threshold of `total_prices`. We can filter out record below that threshold \nbecause they lack necessary information.\n\nAccording to the joint distribution, `total_prices` and `total_earnings` are not normally \ndistributed, we can see distinct clusters at the bottom left (Group 1) and top right corners \n(Group 3). \n`total_earnings` has a bimodal distribution with two peaks at 0 and 45. \n`total_prices` has a bimodal distribution with two peaks at 0 and 5500. \n\nMost of the data fill into the Group 3 as we annotated on the plot, which we expect. \nThis is because most of the companies have reported their earnings consistently. \nHowever, the cluster in the left corner is the abnormality we discovered from this plot. \nThose hex boxes don't have enough earnings nor prices available for analysis. \n\nAn interesting trend can be seen from the plot where the `total_earnings` increase as \nthe `total_earnings` increase (Group 2). \nA plausible explanation for this is that those companies went public later than 1998 and \nare on their way to join the majority of companies that have sound records. \nAs time goes on, we expect the cluster at the right upper corner to move further and \nfurther away diagonally.\n\nIn order to get the necessary data with enough records for analysis, \nwe need to filter our data based on total_prices and total_earnings to get the companies that \nlocate at the right upper corner of our joint distribution because they have enough \n`total_earnings` and `total_prices` for further analysis.\n","c16d9c1a":"#### Investigate further into the distribution of `earnings_from_date` across weekdays:\nWe want to see if there is a general trend of `earnings_from_date` across different time granularity, such as \nweekdays. It's more likely for companies to continue announcing their earnings on a specific \nweekday after making the first announcement on that weekday.","eb325f82":"### Examine the distribution of `earnings_from_date` across year:\nWe want to see if there is any irregularities in the distribution of `earnings_from_date` across\ndifferent years.","e895568a":"According to the bar chart above, the first quarter seems to have twice as many total_prices as other quarters, which is irregular in the datasets. Our explanation for this to happen is that `stock_from_year` equals to 1998 has a major impact on the distribution of `total_prices` across different quarters.\n\nWe will try to validate this by filtering out the `total_prices` that are in 1998 and see how the bar chart looks without them:","ed7241da":"We have the correct data type for each column. \n\nSince we have 7786 entries and there are only 5150 non-null entries in the `earnings_from_date`\nand `earnings_to_date`, these two columns have missing data. \nIt's important to deal with them before our analysis because they will raise errors \nduring the process of combining `summary` dataset with `earnings` dataset later on.\n\nSince `total_prices` and `total_earnings` from the summary table don't have any missing values. \nWe can start our analysis. ","db251fac":"### Examine joint distribution of `total_prices` and `total_earnings`\nTo find out the distribution for earnings and prices at the same time, \nwe decided to use the joint distribution to plot earnings and prices on the same plot. \nWe decided to use hex plot just because there might be some misunderstanding for negative \nvalues in the previous contour plot.\n\nWe expect a positive relationship between `total_prices` and `total_earnings` for this 20-year period. \nThat is, a company with more `total_earnings` will have more `total_prices`. ","cec0118f":"# Summary dataset analysis\nThe goal of this analysis is to explore the summary dataset, detect abnormalities within this dataset, and filter for relevant data for the later analysis. \n\nThe `summary` dataframe is one of several in the Kaggle Stock Earnings dataset. It contains aggregate data based on the contents of the `earnings` and `prices` files.\n* `earnings` table provides ticker symbol along with the `date` and `release_time` \nwhen `eps_est` (earnings per share estimate) and `eps` (actual earnings per share) being released\n* `prices` table provides information about the stock prices, including columns such as \n`date` , `open`, `high`, `low`, `close`, `close_adjusted`, `volume`, and `split_coefficient`.\n\nA better understanding of this table will facilitate the process of combining those datasets for analysis and modeling.\n\nThis notebook presents the process of exploring the summary dataset and key insights discovered along the way.","e907e18b":"### Examine the joint distribution of `earnings_from_date` and `stock_from_date`\nSince we can't make joint distribution from datetime objects, we will transform these two columns into `earnings_years` and `stock_years`, which corresponding to the number of days since.","6cd35348":"The limitation of the dataset from the `summary` dataset is that it only contains earnings \nfor stocks since 2009. That is the earliest time available for analysis was in 2009 compared \nto 1998 (the earliest time for `stock_from_year` in the previous analysis).","d7da701e":"Without the interferencing from `total_prices` in 1998, we can see `total_prices` are evenly distributed in different quarters. If we want to use `total_prices` from 1998, we might have to sample some of them to make sure that `total_prices` from 1998 don't weight too much in our analysis.","fcaa9412":"## Exploratory Data Analysis\nWe use exploratory data analysis (EDA) to identify trends, anomalies, patterns, and possible relationships within the given data, using plots. It will help us determine if there are columns that don't have enough records and identify possible features we could put into our models or use as keys when we try to combine datasets later on. \n\n* We start off with **univariate analysis**, aiming to understand the distribution of underlying variable. \nThrough this process, we can identify which one of the distributions the variable most closely represents, \nwhich helps with the model selection process later on. \n* Univariate analysis also helps us discover possible outliers that could have a large impact on the \noverall distribution. \n* Since we have multiple datetime obejects, we also have to consider **univariate time series analysis**. \nIn this analysis, we will look at the change of a variable across a time period and their volitility \nand underlying distribution across different granularity of time. \n\n* Then, we can proceed to **bivariate analysis**, where we plan to explore the potentail relationship between two variables. Similiarly, we will look at bivariate analysis across a time period. ","55c86d4c":"We don't see much change in the distribution of `total_earnings` across weekdays change\nmuch after we filter out companies with `total_earnings` from 2009.\n\nSince `earnings_from_date` column only provides the first earnings release date for\na specific company, we have to use `earnings` dataset to see if there is a pattern in the \nweekday when companies release their earnings.","ccc6ecc4":"### Examine the distribution of `total_earnings` column\nWe want to understand the distribution of `total_earnings` to see if there are any irregularities\nwe have to address.","cd325619":"### Examine the number of stocks in this dataset with unique `symbol`\n\nLet's first examine how many unique stocks are in this dataset.","6a8d09fd":"#### Investigate further into the distribution of `stock_from_date` across different quarter:\nWe want to see if seasonality plays a part in the number of IPOs across time. We selected 'quarter' \nas the granularity of time. ","70725d98":"In order to check the completeness of the summary dataset, we crossed check the\ndata provided with another online source: https:\/\/stockanalysis.com\/ipos\/statistics\/.\n\nThe bar chart above shows the different in the number of IPOs the summary data provides and \nthe number of actual IPOs the alternative source provides.\n\nWe filtered out data from 2009 because the data before 2009 is censored. \nWe notice that the data from the `summary` dataset has some inconsistencies with the actual number\nof IPOs throughout the years. \n\nWe have to note that the `summary` dataset is not the complete representation of stocks throughout\nthe years. It's an open question to anyone who are interested in this dataset to investigate this further.","1484a3c3":"### Examine the distribution of `stock_from_date` across different years:\n\nWe want to find if there is a pattern in the distribution of `stock_from_date` across different years \nand check if there is some abnomalities for this distribution. ","2236c300":"Based on the plot: \n* A major outlier occurs in 1998. \nThis could be explained by the limitation of the dataset in which it contains stocks around \nthe 20-year period. \n`stock_from_date` column of stocks that were listed before 1998 is censored. \n* The trend of the number of companies being listed on the market across different years. \nIt has a general upward trend until declining in 2019 and 2020. \n* The global financial crisis was the major factor that contribute to the drop-off in the number of IPOs \nin 2008 and 2009. \n* The global pandanmic was the major reason to the drop-off in the number of IPOs in 2019 and 2020.\n","68d09e1e":"### Examine the distribution of `total_prices` column\nWe want to understand the distribution of `total_prices` to see if there are any irregularities\nwe have to address."}}