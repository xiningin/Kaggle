{"cell_type":{"f0bf6d64":"code","5405f722":"code","858962f8":"code","dc2000ce":"code","6697e5d5":"code","15f61888":"code","b9639413":"code","4ffedaea":"code","688f20af":"code","85f90802":"code","29ed3fbe":"code","77a971da":"code","b425a3b5":"code","8c352013":"code","f4d99002":"markdown","7caf0ab8":"markdown"},"source":{"f0bf6d64":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","5405f722":"data = pd.read_csv( \n'https:\/\/archive.ics.uci.edu\/ml\/machine-learning-'+\n'databases\/balance-scale\/balance-scale.data', \n    sep= ',', header = None) ","858962f8":"len(data)","dc2000ce":"data.shape","6697e5d5":"data.head()","15f61888":"from sklearn.metrics import confusion_matrix \nfrom sklearn.model_selection import train_test_split \nfrom sklearn.tree import DecisionTreeClassifier \nfrom sklearn.metrics import accuracy_score \nfrom sklearn.metrics import classification_report ","b9639413":"# Separating the target variable \nX = data.values[:, 1:5] \nY = data.values[:, 0] \n  \n# Splitting the dataset into train and test \nX_train, X_test, y_train, y_test = train_test_split(  \nX, Y, test_size = 0.3, random_state = 100) \n","4ffedaea":"#perform training with giniIndex.\nclf_gini = DecisionTreeClassifier(criterion = \"gini\",random_state = 100,max_depth=3, min_samples_leaf=5) \n  \n    # Performing training \nclf_gini.fit(X_train, y_train) ","688f20af":"#perform training with entropy\nclf_entropy = DecisionTreeClassifier(criterion = \"entropy\", random_state = 100,max_depth = 3, min_samples_leaf = 5) \n  \n    # Performing training \nclf_entropy.fit(X_train, y_train) ","85f90802":"y_pred = clf_gini.predict(X_test) \nprint(\"Predicted values:\") \nprint(y_pred) ","29ed3fbe":"print(\"Confusion Matrix: \", \nconfusion_matrix(y_test, y_pred)) \n      \nprint (\"Accuracy : \", \naccuracy_score(y_test,y_pred)*100) \n      \nprint(\"Report : \", \nclassification_report(y_test, y_pred)) ","77a971da":"import matplotlib.pyplot as plt\nplt.plot(y_test,y_pred)","b425a3b5":"plt.plot(y_test)","8c352013":"plt.plot(y_pred)","f4d99002":"# DECISSION TREE\n\nWhile implementing the decision tree we will go through the following two phases:\n\n* --------->Building Phase<-------------\n* Preprocess the dataset.\n* Split the dataset from train and test using Python sklearn package.\n* Train the classifier.\n* --------->Operational Phase<----------\n* Make predictions.\n* Calculate the accuracy.","7caf0ab8":"Decision Tree is one of the most powerful and popular algorithm. Decision-tree algorithm falls under the category of supervised learning algorithms. It works for both continuous as well as categorical output variables."}}