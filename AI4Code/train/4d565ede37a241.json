{"cell_type":{"9d71324d":"code","e9bd066f":"code","03e30a31":"code","0200dfa9":"code","d9333874":"code","5760b772":"code","25a9c9cc":"code","da8088d1":"code","42913c6b":"code","568d5e05":"code","03d5d379":"code","c1df43bc":"code","198984e5":"code","29f3020c":"markdown","639da548":"markdown","aa5271de":"markdown","9267bbca":"markdown","1e668417":"markdown","69ebc744":"markdown","29ebc5dc":"markdown","e6ad5d61":"markdown","31d89633":"markdown","c7aa78d6":"markdown","afbce25b":"markdown","ef20b0c9":"markdown","6d6381ae":"markdown"},"source":{"9d71324d":"from pandas import read_csv, Grouper, DataFrame, concat\nimport matplotlib.pyplot as plt\nfrom statsmodels.tsa.stattools import adfuller\nimport statsmodels.tsa.api as smt\nimport numpy as np\nfrom sklearn.metrics import mean_squared_error\nimport seaborn as sns\nfrom datetime import datetime\nfrom pandas_profiling import ProfileReport\nfrom sklearn.preprocessing import MinMaxScaler\nfrom keras.preprocessing import sequence \nfrom keras.models import Sequential \nfrom keras.layers import Dense, Embedding ,Dropout\nfrom keras.layers import LSTM \nfrom plotly.offline import plot, iplot, init_notebook_mode\nimport plotly.graph_objs as go\nimport pandas as pd\nimport plotly.express as px\nimport plotly.figure_factory as ff\nimport datetime\nfrom statsmodels.tsa.api import ExponentialSmoothing, SimpleExpSmoothing, Holt\nfrom plotly.offline import init_notebook_mode, iplot\nfrom urllib.request import urlopen\nimport json\n\ninit_notebook_mode(connected=True)  ","e9bd066f":"ds=pd.read_csv(\"..\/input\/us-counties-covid-19-dataset\/us-counties.csv\")\nraw=ds.copy()","03e30a31":"\nwith urlopen('https:\/\/raw.githubusercontent.com\/plotly\/datasets\/master\/geojson-counties-fips.json') as response:\n    counties = json.load(response)\n\n\nfig = px.choropleth_mapbox(ds, geojson=counties, locations='fips', color='cases',\n                           color_continuous_scale=\"Viridis\",\n                           range_color=(0, 20000),\n                           mapbox_style=\"carto-positron\",\n                           hover_name =\"county\",\n                           zoom=3, center = {\"lat\": 37.0902, \"lon\": -95.7129},\n                           opacity=0.5\n                          )\n\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.show()","0200dfa9":"ds['date']= pd.to_datetime(ds['date'])\nds.Timestamp=ds[\"date\"]\nds.index = ds.Timestamp \ndf = ds.resample('D').sum()","d9333874":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(\n    x=df.index,\n    y=df.cases,\n    name=\"Cases in USA\"     \n))\n\n\n\n\nfig.update_layout(\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=18,\n        color=\"RebeccaPurple\"\n    )\n)\n\nfig.show()","5760b772":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(\n    x=df.index,\n    y=df.deaths,\n    name=\"Cases in USA\"     \n))\n\n\n\n\nfig.update_layout(\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=18,\n        color=\"RebeccaPurple\"\n    )\n)\n\nfig.show()","25a9c9cc":"case=df.cases\ncase=list(case)\npopulation=case","da8088d1":"growth_rate=[]\n\ndef growth():\n    for pop in range(1, len(population)):\n        gnumbers = (population[pop] \/ population[pop-1])\/ population[pop-1]\n        growth_rate.append(gnumbers)\n\ngrowth()\ndef Average(growth_rate): \n    return sum(growth_rate) \/ len(growth_rate) \n  \naverage = Average(growth_rate) \n\nprint(\"Now we have the Average growth factor of USA\\n\\n Growth factor value :\",average)","42913c6b":"val=df.iloc[-1]\nval1=val[\"cases\"]\nave='{0:.40f}'.format(average).rstrip(\"0\") \nave=float(ave)\n\nresult=val1*ave*60","568d5e05":"print(\"Last day count is\",val1,\"\\n\\nGrowth factor is \",ave,\"\\n\\n X is \",60,\"\\n\")\nprint(\"After 60days case count wil be \\n\\n\",result)\n","03d5d379":"start = datetime.datetime.strptime(\"2020-08-15\", \"%Y-%m-%d\")\nend = datetime.datetime.strptime(\"2020-10-14\", \"%Y-%m-%d\")\ndate_generated = [start + datetime.timedelta(days=x) for x in range(0, (end-start).days)]\n\ndt=[]\n\nfor date in date_generated:\n    dt.append(date.strftime(\"%Y-%m-%d\"))\ndtd=pd.DataFrame()\ndtd[\"Date\"]=dt","c1df43bc":"fit1 = ExponentialSmoothing(np.asarray(df['cases']) ,seasonal_periods=7 ,trend='add', seasonal='add',).fit()\npred = fit1.forecast(60)\npred=pred.astype(int)\ndtd[\"Holt\"]=pred\ndtd.Timestamp=dtd[\"Date\"]\ndtd.index = dtd.Timestamp ","198984e5":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(\n    x=df.index,\n    y=df.cases,\n    name=\"Confirmed Cases\"     \n))\n\nfig.add_trace(go.Scatter(\n    x=dtd.index,\n    y=dtd.Holt,\n    name=\"Future Prediction\"     \n))\n\n\n\nfig.update_layout(\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=18,\n        color=\"RebeccaPurple\"\n    )\n)\n\nfig.show()","29f3020c":"# \ud83d\udcce Holt-Winters seasonal method \ud83d\udccf \n\n![](https:\/\/cdn.analyticsvidhya.com\/wp-content\/uploads\/2018\/01\/eq.png)\n\n### When to Use Holt-Winters\nBefore you select any prediction method, you need to evaluate the characteristics of your dataset. To determine whether your time series data is a good candidate for Holt-Winters or not, you need to make sure that your data:\n\nIsn\u2019t stochastic. If it is random, then it\u2019s actually a good candidate for Single Exponential Smoothing.\nHas a trend.\nHas seasonality. In other words, your data has patterns at regular intervals. For example, if you were monitoring traffic data, you would see a spike in the middle of the day and a decrease in activity during the night. In this case, your seasonal period might be one day.\n\n### How Single Exponential Smoothing Works\nBefore we dive into Holt-Winters or Triple Exponential Smoothing, I\u2019ll explain how Single Exponential Smoothing works. Single Exponential Smoothing (SES) is the simplest exponential smoothing method. Exponential smoothing is just a technique for smoothing time-series data where exponentially decreasing weights are assigned to past observations. It is built upon the Na\u00efve Method. With this method, the forecasted value is equal to the last observed value,\n\nHard to believe that Na\u00efve would want to be credited with such a simple model, but it turns out it\u2019s quite good at predicting financial data. Also, taking the percent difference between the actual and predicted values can be a good way to uncover seasonality.","639da548":"### Predicting for the next 60 days cases in USA","aa5271de":"### So , By the Growth Rate after 60 days case count will be 13.15848M (October 13th)","9267bbca":"### Would Continue...","1e668417":"# \ud83d\udcce Growth Rate \ud83d\udcc8\n\n growth rate calculation can be remarkably simple. Basic growth rates are simply expressed as the difference between two values in time in terms of a percentage of the first value.\n \n### 1. Calculating Basic Growth Rates\n![](https:\/\/www.wikihow.com\/images\/thumb\/d\/d9\/Calculate-Growth-Rate-Step-2-Version-5.jpg\/aid734329-v4-728px-Calculate-Growth-Rate-Step-2-Version-5.jpg)\n","69ebc744":"### \ud83d\udccc\n* Upto Aug 14th-  168.018k deaths\n\n#### Comparing to the Confirmed cases , death cases are looking too low , that is a good one. but Afer 3month it can be worst.","29ebc5dc":"# Confirmed Cases in USA (Jan - Aug) \ud83d\udcc5","e6ad5d61":"# 2. After 60days case count by Exponential Growth\n\n![](https:\/\/nicoletalgebra.weebly.com\/uploads\/2\/4\/7\/9\/24793402\/9316745.jpg?195)\n\nwhere ,  \n\n a- Last day count \n \n b- Growth Factor (we have calculated)\n \n X - Time period\n ","31d89633":"### For this dataset Growth Rate has been calculated","c7aa78d6":"# Death Cases in USA (Jan - Aug) \ud83d\udcc5","afbce25b":"### \ud83d\udccc\n* By prediction on October 13th -  8.88M cases\n* based on the growth rate and Holt winter , we can see that it increases more than 8M after 6months \n\n##### It can be also get down if their is any change in the vaccine or lockdown get much strict means.\n\n","ef20b0c9":"### \ud83d\udccc\n* Jan 22th -  1     case\n* Aug 14th - 5.32M  cases \n\n The count is exponentially growing. ","6d6381ae":"# US counties COVID 19 dataset\n![Corona Virus](https:\/\/highereducationplus.com\/wp-content\/uploads\/2020\/03\/covid-higher-education-plus.jpg)\n \n \nCoronaviruses are large group of viruses that cause illness in humans and animals. Rarely, animal coronaviruses can evolve and infect people and then spread between people such as has been seen with MERS and SARS.\n\n* Although most human coronavirus infections are mild, the epidemics of the severe acute respiratory syndrome coronavirus (SARS-CoV) and Middle East respiratory syndrome coronavirus (MERS-CoV), have caused more than 10,000 cumulative cases in the past two decades, with mortality rates of 10% for SARS-CoV.\n\n* The seven-day average of new cases topped the 14-day average in nine states and Washington, D.C., for Aug. 11, according to a Wall Street Journal analysis of Johns Hopkins University data, suggesting that cases were rising in those areas. A month earlier, the seven-day new case average topped the 14-day new case average in 42 states and D.C.\n\n## Upvote My kernal If you like it\n\n# Map View"}}