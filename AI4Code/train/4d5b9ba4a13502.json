{"cell_type":{"486b644c":"code","39dce826":"code","7cf98b45":"code","1532434d":"code","ea8bb3ab":"code","5fb5dcd5":"code","7a601c6a":"code","aeca314a":"code","a03ea872":"code","56f8e5f3":"code","f663e59f":"code","9aaf4e87":"code","4bb52119":"code","299fca88":"code","dd99c012":"code","4b825ffe":"code","11c740af":"code","e3ca8bdb":"code","805aae9b":"code","cd8b3116":"code","305d9e4b":"code","9217b442":"code","9883e870":"code","ff970d94":"code","6e5de2a6":"code","b7aaf9e7":"code","53713e58":"code","b8844f49":"code","ff5dad45":"code","7f173212":"code","5abfc920":"code","3e8ae3e4":"code","fdb9093a":"code","b16e607c":"code","e83a4281":"code","a6359c3b":"code","afefd84c":"markdown","30522f5a":"markdown","9c4159fd":"markdown","27f653e3":"markdown","fc15278a":"markdown","87e65835":"markdown","94727fe1":"markdown"},"source":{"486b644c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","39dce826":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\ndf = pd.read_csv(\"..\/input\/homeprices\/homeprices.csv\")\ndf","7cf98b45":"dummies = pd.get_dummies(df.town)\ndummies","1532434d":"Merge two datasets into one ","ea8bb3ab":"merged = pd.concat([df,dummies],axis='columns')\nmerged","5fb5dcd5":"final = merged.drop(['town'], axis='columns')\nfinal","7a601c6a":"final = final.drop(['west windsor'], axis='columns')\nfinal","aeca314a":"X = final.drop('price', axis='columns')\nX","a03ea872":"y = final.price\ny","56f8e5f3":"from sklearn.linear_model import LinearRegression\nmodel = LinearRegression()","f663e59f":"model.fit(X,y)","9aaf4e87":"model.predict(X)","4bb52119":"model.score(X,y)","299fca88":"model.predict([[3400,0,0]]) # 3400 sqr ft home in west windsor","dd99c012":"model.predict([[2800,0,1]]) # 2800 sqr ft home in robbinsville","4b825ffe":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()","11c740af":"dfle = df\ndfle.town = le.fit_transform(dfle.town)\ndfle","e3ca8bdb":"X = dfle[['town','area']].values\nX","805aae9b":"y = dfle.price.values\ny","cd8b3116":"from sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nct = ColumnTransformer([('town', OneHotEncoder(), [0])], remainder = 'passthrough')","305d9e4b":"X = ct.fit_transform(X)\nX","9217b442":"X = X[:,1:]\nX","9883e870":"model.fit(X,y)","ff970d94":"model.predict([[0,1,3400]]) # 3400 sqr ft home in west windsor","6e5de2a6":"model.predict([[1,0,2800]]) # 2800 sqr ft home in robbinsville","b7aaf9e7":"data = pd.read_csv(\"..\/input\/carpricing\/carprices.csv\")\ndata","53713e58":"dummy = pd.get_dummies(data['Model'])\ndummy","b8844f49":"merged = pd.concat([data,dummy],axis='columns')\nmerged","ff5dad45":"finaled = merged.drop([\"Model\",\"Mercedez Benz C class\"],axis='columns')\nfinaled","7f173212":"X = finaled.drop('Sell Price($)', axis='columns')\nX","5abfc920":"y = finaled['Sell Price($)']\ny","3e8ae3e4":"from sklearn.linear_model import LinearRegression\nmodeling = LinearRegression()","fdb9093a":"modeling.fit(X,y)","b16e607c":"modeling.score(X,y)","e83a4281":"modeling.predict([[46000,4,0,1]])","a6359c3b":"modeling.predict([[67000,6,0,0]])","afefd84c":"Create Dummies Binary Encoding of Town","30522f5a":"1. Convert the relevant columns to factors(binary data, 0 or 1), for example a house has swimming pool, 0 means no, 1 means yes \n2. A column has many variables such as product type: car, bus, tractor. Perform one hot encoding on them \n3. Principal component analysis: study about it, what is it? Why is it done? \n4. Look for linear combos\n5. Look for zero variance variables \n6. Look for high correlated variables\n","9c4159fd":"Import Python Libraries And Retrieving Data Home Prices \n","27f653e3":"Drop a Single Column Town","fc15278a":"\nExercise\nAt the same level as this notebook on github, there is an Exercise folder that contains carprices.csv. This file has car sell prices for 3 different models. First plot data points on a scatter plot chart to see if linear regression model can be applied. If yes, then build a model that can answer following questions,\n\n1) Predict price of a mercedez benz that is 4 yr old with mileage 45000\n\n2) Predict price of a BMW X5 that is 7 yr old with mileage 86000\n\n3) Tell me the score (accuracy) of your model. (Hint: use LinearRegression().score())","87e65835":"Using sklearn OneHotEncoder\nFirst step is to use label encoder to convert town names into numbers","94727fe1":"Now use one hot encoder to create dummy variables for each of the town\n"}}