{"cell_type":{"b8596f1a":"code","b983d7b2":"code","7eff3556":"code","cb41768b":"code","311fc65f":"code","15081da4":"code","9775769f":"markdown","2fbdb136":"markdown","38a7b581":"markdown","cb38508e":"markdown","814ef328":"markdown","aa96e3a4":"markdown","927f86e7":"markdown","eb0e3e06":"markdown"},"source":{"b8596f1a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom collections import defaultdict\nfrom datetime import datetime\nplt.rcParams['figure.figsize'] = [15, 10]\n","b983d7b2":"cases = pd.read_csv('\/kaggle\/input\/uncover\/UNCOVER\/johns_hopkins_csse\/johns-hopkins-covid-19-daily-dashboard-cases-over-time.csv')\nrestrictions = pd.read_csv('\/kaggle\/input\/uncover\/UNCOVER\/HDE_update\/acaps-covid-19-government-measures-dataset.csv')","7eff3556":"#print(cases)\nm = 7\nkernel = np.arange(0, 1, 1\/m)\nkernel = kernel \/ np.sum(kernel)\nkernel = np.reshape(kernel, (-1, 1))\nkernel = np.flipud(kernel)\nkernel = kernel[:, 0]\n\nt = np.arange(0, 2*np.pi+1, np.pi\/20)\nr1, r2 = 2000, 200\ncircle = (np.cos(t), np.sin(t))","cb41768b":"country = 'countryName'\ncountryMap = defaultdict(lambda :country)\ncountryMap['US'] = 'United States of America'","311fc65f":"categoryMap = defaultdict(lambda: 'k')\ncategoryMap['Public health measures'] = 'g'\ncategoryMap['Social distancing'] = 'y'\ncategoryMap['Movement restrictions'] = 'b'\ncategoryMap['Governance and socio-economic measures'] = 'c'\ncategoryMap['Lockdown'] = 'r'","15081da4":"countries = cases.groupby('country_region').max().sort_values('confirmed', ascending=False).index\nlegendMap = {}\n\nfor country in countries[0:10]:\n    countryData = cases[cases['country_region']==country]\n    \n    confirmed = countryData['confirmed'].values\n    delta_confirmed = countryData['delta_confirmed'].values\n    deaths = countryData['deaths'].values\n    dates = list(map(lambda x: datetime.strptime(x, '%Y-%m-%d'), countryData['last_update'].values))\n    \n    smooth_delta = np.convolve(delta_confirmed, kernel, mode='valid')\n    smooth_delta = np.concatenate(([0]*(m-1), smooth_delta))\n    \n    legendMap[country] = plt.plot(confirmed, smooth_delta, 'x-')[0]\n\n    \n    thisRestrictions = restrictions[restrictions['country'] == countryMap[country]]\n    lastTimeIndex = 0\n    timeIndex = 0\n    n = 1\n    for i, row in thisRestrictions.iterrows():\n        if type(row['date_implemented']) is str:            \n            d = datetime.strptime(row['date_implemented'], '%Y-%m-%d')\n            lastTimeIndex = timeIndex\n            try:\n                timeIndex = dates.index(d)\n            except:\n                pass\n                #print(d)\n        else:\n            continue\n        xp, yp = confirmed[timeIndex], smooth_delta[timeIndex]\n        #print(xp, yp)\n        if (lastTimeIndex != timeIndex):\n            n = 1\n        n = n+.1\n        plt.plot(xp+circle[0]*(r1*n), yp+circle[1]*(r2*n), categoryMap[row['category']])\n\n\n        \nfirst_legend = plt.legend(legendMap.values(), legendMap.keys(), bbox_to_anchor=(0.2,.4))\nplt.gca().add_artist(first_legend)\n        \nfrom matplotlib.lines import Line2D\ncustom_lines = []    \nnames = []\nfor (n, c) in categoryMap.items():\n    custom_lines.append(Line2D([0], [0], color=c, lw=2))\n    names.append(n)\nplt.legend(custom_lines, names);\nplt.xlabel('cases');\nplt.ylabel('average growth');","9775769f":"Compensating the naming convention differences with a dictionary:","2fbdb136":"# Some analysis\nWe can see that on this plot, germany is followin italy's path very closely and they are both in better conditions than spain.\n","38a7b581":"Now based on maximum number of cases we sort the countries and plot the smoothed growth of cases vs. total cases.\nWe also mark every government measure by a circle around that point.","cb38508e":"\n# Introduction\n\nIn this notebook I discuss how the dynamics of the infections can change in response to goverment measures. I am using data from two different sources and combine them into one graph.\n\n# Rational\n\nThis work demonstrates the number of cases vs. average growth in recent past. I assume that like any dynamic system every derivation is an independent variable, but since difference is unstable, I introduce a leaky moving average to compensate this unstability. This can be interpreted as results of some tests might be delayed to the next days to smooth the average new cases.\nPlease note that this work is influenced by https:\/\/aatishb.com\/covidtrends\/.","814ef328":"Different coloring schemes for different categories:","aa96e3a4":"and read the data:","927f86e7":"We import the required libraries:","eb0e3e06":"Some prepairation including definition of moving average and circle:"}}