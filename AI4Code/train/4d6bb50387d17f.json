{"cell_type":{"6ad6bb72":"code","0f585c56":"code","04169b9e":"code","feb9ee78":"code","616f24f1":"code","794452ce":"code","d18801b6":"code","e423d58e":"code","ef4cc0db":"code","90d45d86":"code","e22715c3":"code","f1d6dfb6":"code","766dc5d2":"code","5c98302d":"code","dad9be9e":"code","45dd80de":"code","ca30fc7e":"code","06b2466d":"code","460c2ab6":"code","aeec2a6c":"code","b4269d83":"code","288d6da5":"code","d075b9d7":"code","2930fb26":"code","01dd597e":"code","52352905":"code","e77ca014":"markdown","edbf7e7c":"markdown","5ab080ad":"markdown","ecd37a5e":"markdown","944c44a0":"markdown","90b78635":"markdown","4ff43b3a":"markdown","b4a7e6f0":"markdown","6f162660":"markdown","1708838f":"markdown","ce24088f":"markdown","adcbee2f":"markdown","fa7f68b3":"markdown","77ef7934":"markdown","f7819768":"markdown","b74ac650":"markdown","aaf955be":"markdown","4421b78a":"markdown","82526e69":"markdown","024ad832":"markdown","e3c3f384":"markdown","11731225":"markdown","290e6338":"markdown","4460b2d4":"markdown","2f5f1041":"markdown","428fd2e7":"markdown","d7a73d6c":"markdown","8f50301a":"markdown","8efef07e":"markdown","bcd2c2c2":"markdown","f2f458e4":"markdown"},"source":{"6ad6bb72":"# Import modules\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport pydot\nimport graphviz\nfrom matplotlib import pyplot as plt\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.tree import export_graphviz\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\n\n# Load data\ndrugdf = pd.read_csv(\"..\/input\/drugs-a-b-c-x-y-for-decision-trees\/drug200.csv\")\nalabs = drugdf.Drug.unique()\ndrugdf.tail()","0f585c56":"# Descriptive Statistics\ndrugdf.describe(include=\"all\")","04169b9e":"# Histograms\n# Age\n%matplotlib inline\nplt.hist(drugdf[\"Age\"], bins=15, alpha=0.85)\nplt.xlabel(\"Patient Age\")\nplt.ylabel(\"Count\")\nplt.title(\"Histogram of Patient Age\")\nplt.grid(True)\nplt.show()\n\n# Na_to_K\nplt.hist(drugdf[\"Na_to_K\"], bins=15, alpha=0.85)\nplt.xlabel(\"Patient Na:K Ratio\")\nplt.ylabel(\"Count\")\nplt.title(\"Histogram of Patient Na:K Ratio\")\nplt.grid(True)\nplt.show()","feb9ee78":"# Pie Charts\n# Sex\nfig1, ax1 = plt.subplots()\nax1.pie(drugdf[\"Sex\"].value_counts(), labels=drugdf[\"Sex\"].unique(), autopct=\"%1.1f%%\")\nax1.axis(\"equal\")\nax1.set_title(\"Patient Sex Breakdown\")\n\n# BP\nfig1, ax1 = plt.subplots()\nax1.pie(drugdf[\"BP\"].value_counts(), labels=drugdf[\"BP\"].unique(), autopct=\"%1.1f%%\")\nax1.axis(\"equal\")\nax1.set_title(\"Patient Blood Pressure Breakdown\")\n\n# Cholesterol\nfig1, ax1 = plt.subplots()\nax1.pie(drugdf[\"Cholesterol\"].value_counts(), labels=drugdf[\"Cholesterol\"].unique(), autopct=\"%1.1f%%\")\nax1.axis(\"equal\")\nax1.set_title(\"Patient Cholesterol Breakdown\")\n\n# Drug\nfig1, ax1 = plt.subplots()\nax1.pie(drugdf[\"Drug\"].value_counts(), labels=drugdf[\"Drug\"].unique(), autopct=\"%1.1f%%\")\nax1.axis(\"equal\")\nax1.set_title(\"Drug Perscription Rate\")\nplt.show()","616f24f1":"# Avg Age\ndsa = pd.crosstab(drugdf.Drug, drugdf.Sex, values=drugdf.Age, aggfunc=\"mean\")\ndsa","794452ce":"# Avg NaK\ndsnak = pd.crosstab(drugdf.Drug, drugdf.Sex, values=drugdf.Na_to_K, aggfunc=\"mean\")\ndsnak","d18801b6":"# Create preprocessed df\nle = LabelEncoder()\ndrug_pp = drugdf\ndrug_pp[\"Sex\"] = le.fit_transform(drug_pp[\"Sex\"])\ndrug_pp[\"BP\"] = le.fit_transform(drug_pp[\"BP\"])\ndrug_pp[\"Cholesterol\"] = le.fit_transform(drug_pp[\"Cholesterol\"])\ndrug_pp[\"Drug\"] = le.fit_transform(drug_pp[\"Drug\"])\ndrug_pp.head()","e423d58e":"# Create and display corr matrix\n%matplotlib inline\ncor_mat = drug_pp.corr()\nsns.heatmap(cor_mat, annot=True)\nplt.title(\"Correlation Matrix\")\nplt.show()","ef4cc0db":"# Separate target\nx = drug_pp.iloc[:, :-1].values\ny = drug_pp.iloc[:, -1].values\n\n# Create test and train sets\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 1)","90d45d86":"# Create model\nlgr = LogisticRegression(random_state=0, max_iter=2000).fit(x_train, y_train)\n\n# Predict with test set\nlgr_pred = lgr.predict(x_test)\nprint(\"Accuracy Score = {}%\".format(round(accuracy_score(y_test, lgr_pred)*100,2)))","e22715c3":"# Confusion Matrix\n%matplotlib inline\ncmat = confusion_matrix(y_test, lgr_pred)\nfig, ax = plt.subplots()\nsns.heatmap(cmat, annot=True, cmap=\"BuPu\")\nax.set_xticklabels(alabs)\nax.set_yticklabels(alabs)\nplt.title(\"Logistic Regression Confusion Matrix\")\nplt.show()","f1d6dfb6":"# Print classification report\nprint(\"Classification Report:\"+\"\\n\",classification_report(y_test, lgr_pred), sep=\"\\n\")","766dc5d2":"# Create list to store scores\ncv_scores = []\nks = list(range(1,51,1))\n\n# Perform CV\nfor k in ks:\n    knn = KNeighborsClassifier(n_neighbors=k)\n    cscore = cross_val_score(knn, x_train, y_train, cv=10, scoring='accuracy')\n    cv_scores.append(cscore.mean())\n\n# changing to misclassification error\nMSE = [1 - x for x in cv_scores]\n\nplt.figure()\nplt.figure(figsize=(15,10))\nplt.title(\"Optimal number of neighbors\", fontsize=20, fontweight='bold')\nplt.xlabel(\"K\", fontsize=15)\nplt.ylabel(\"Misclassification Error\", fontsize=15)\nplt.plot(ks, MSE)\n\nplt.show()","5c98302d":"# KNN (K=3)\n# Create model\nknn_3 = KNeighborsClassifier(n_neighbors=3).fit(x_train, y_train)\n\n# Predict with test set\nknn_3_pred = knn_3.predict(x_test)\nprint(\"Accuracy Score = {}%\".format(round(accuracy_score(y_test, knn_3_pred)*100,2)))","dad9be9e":"# Confusion Matrix\n%matplotlib inline\ncmat = confusion_matrix(y_test, knn_3_pred)\nfig, ax = plt.subplots()\nsns.heatmap(cmat, annot=True, cmap=\"BuPu\")\nax.set_xticklabels(alabs)\nax.set_yticklabels(alabs)\nplt.title(\"KNN (K=3) Confusion Matrix\")\nplt.show()","45dd80de":"# Print classification report\nprint(\"Classification Report:\"+\"\\n\",classification_report(y_test, knn_3_pred), sep=\"\\n\")","ca30fc7e":"# KNN (K=4)\n# Create model\nknn_4 = KNeighborsClassifier(n_neighbors=4).fit(x_train, y_train)\n\n# Predict with test set\nknn_4_pred = knn_4.predict(x_test)\nprint(\"Accuracy Score = {}%\".format(round(accuracy_score(y_test, knn_4_pred)*100,2)))","06b2466d":"# Confusion Matrix\n%matplotlib inline\ncmat = confusion_matrix(y_test, knn_4_pred)\nfig, ax = plt.subplots()\nsns.heatmap(cmat, annot=True, cmap=\"BuPu\")\nax.set_xticklabels(alabs)\nax.set_yticklabels(alabs)\nplt.title(\"KNN (K=4) Confusion Matrix\")\nplt.show()","460c2ab6":"# Print classification report\nprint(\"Classification Report:\"+\"\\n\",classification_report(y_test, knn_4_pred), sep=\"\\n\")","aeec2a6c":"# Create model\ngnb = GaussianNB().fit(x_train, y_train)\n\n# Predict with test set\ngnb_pred = gnb.predict(x_test)\nprint(\"Accuracy Score = {}%\".format(round(accuracy_score(y_test, gnb_pred)*100,2)))","b4269d83":"# Confusion Matrix\n%matplotlib inline\ncmat = confusion_matrix(y_test, gnb_pred)\nfig, ax = plt.subplots()\nsns.heatmap(cmat, annot=True, cmap=\"BuPu\")\nax.set_xticklabels(alabs)\nax.set_yticklabels(alabs)\nplt.title(\"Naive-Bayes Confusion Matrix\")\nplt.show()","288d6da5":"# Print classification report\nprint(\"Classification Report:\"+\"\\n\",classification_report(y_test, gnb_pred), sep=\"\\n\")","d075b9d7":"# Create model\ndtree = DecisionTreeClassifier().fit(x_train, y_train)\n\n# Predict with test set\ndtree_pred = dtree.predict(x_test)\nprint(\"Accuracy Score = {}%\".format(round(accuracy_score(y_test, dtree_pred)*100,2)))","2930fb26":"# Confusion Matrix\n%matplotlib inline\ncmat = confusion_matrix(y_test, dtree_pred)\nfig, ax = plt.subplots()\nsns.heatmap(cmat, annot=True, cmap=\"BuPu\")\nax.set_xticklabels(alabs)\nax.set_yticklabels(alabs)\nplt.title(\"Decision Tree Confusion Matrix\")\nplt.show()","01dd597e":"# Print classification report\nprint(\"Classification Report:\"+\"\\n\",classification_report(y_test, dtree_pred), sep=\"\\n\")","52352905":"# Export decision tree to file\nexport_graphviz(dtree, out_file=\"decis_tree.dot\", feature_names=drugdf.columns[:-1], class_names=alabs)\n\n# Create png of decision tree\n(graph,) = pydot.graph_from_dot_file(\"decis_tree.dot\")\ngraph.write_png(\"DecisTree.png\")\n\n# Show decision tree\nwith open(\"decis_tree.dot\") as f:\n    dot_graph = f.read()\ngraphviz.Source(dot_graph)","e77ca014":"## 3.2 Cross-Tab Tables <a id=\"CTabs\"><\/a>\n***\nCross tabulation tables (cross-tab tables) provide another method to uncover relationships in the data set. ","edbf7e7c":"## 4.4 Decision Tree <a id=\"Tree\"><\/a>\n***","5ab080ad":"### KNN with K = 4\n***","ecd37a5e":"# 6. References <a id=\"REF\"><\/a>\n***\n\n[1] \tW. L. Donald, \"New Prescription Drugs: A Major Health Risk With Few Offsetting Advantages,\" 27 June 2014. [Online]. Available: https:\/\/ethics.harvard.edu\/blog\/new-prescription-drugs-major-health-risk-few-offsetting-advantages. [Accessed 27 June 2021].      \n[2] \tD. Weatherby, \"Know Your Biomarkers: Sodium Potassium Ratio,\" OptimalDX, 20 may 2019. [Online]. Available: https:\/\/www.optimaldx.com\/blog\/sodium-potassium-ratio\/. [Accessed 27 June 2021].\n\n","944c44a0":"## 4.1 Logisitic Regression <a id=\"Logistic\"><\/a>\n***","90b78635":"### KNN with K = 3\n***","4ff43b3a":"### Average Age by Drug and Sex","b4a7e6f0":"The table above shows an interesting realationship between the age and the prescribed drug. It would appear that drugA is prescribed to younger patients on average. DrugC, X, and Y are prescribed to middle-aged patients, and drugB is prescribed to more senior patients, on average. It would be interesting to see what other medication the patients are prescribed, as medications can interact and cause serious side effects. It's quite possible that drugB is assigned to pateints taking another type of drug to avoid said serious side effects. ","6f162660":"# Drug Classification\n### Zaquin - 27 Jun 2021","1708838f":"## 3.3 Correlation Matrix <a id=\"Corr\"><\/a>\n***\nPrior to creating the correlation matrix, the categorical variables must be converted to numeric. This will serve as the preprocessing for the classification models as well.","ce24088f":"# 4. Classification Models <a id=\"Classification\"><\/a>\n***\nThe data will be split into a training and test set using scikit-learn's train_test_split function. The training and test sets will be used to build each model in this analysis. ","adcbee2f":"The range of the patient age is 15-74, with over half the patients being male. Over 1\/3 of the patients have high blood pressure, and over half have high cholesterol. The sodium potassium ratio's average is below optimal, which is between 30-35. The sodium potassium ratio is an indicator of cardiovascular disease, and a low sodium potassium ratio can indicate chronic stress. Chronic stress causes increased cortisol production, which is a hormone responsible for cell and tissue decomposition. Low sodium potassium ratios could indicate catabolism, where the body breaks down tissues faster than it regenerates them [2]. It would be interesting to see how blood pressure and cholesterol affect the sodium potassium ratio, as high blood pressure and cholesterol are often associated with high stress levels. It seems that drugY has the highest prescription frequency of 91 (45.5%). ","fa7f68b3":"# 2. Environment Setup <a id=\"Setup\"><\/a>\n***","77ef7934":"The age variable has a relatively uniform distribution, with a few spikes. The sodium potassium ratio distribution is positively skewed.","f7819768":"DrugY, on average, is precribed to patients with a higher sodium potassium ratio. The patients prescibed to drugY have an average sodium potassium ratio closest to the nominal range, while the patients prescribed to the other drugs have a much lower average ratio.","b74ac650":"The patients are roughly evenly split between male and female, with a slight female majority. Over 2\/3 of the patients have abnormal blood pressure and nearly 40% of the patients have high blood pressure. Over half of the patients have high cholesterol as well. DrugY is the most commonly prescribed to the patients.","aaf955be":"# 3. Exploratory Data Analysis <a id=\"ExploratoryDataAnalysis\"><\/a>\n***","4421b78a":"The decision tree model was able to 100% correctly classify the test set. Below is a visualization of the decision tree.","82526e69":"## 4.2 K-Nearest Neighbors <a id=\"KNN\"><\/a>\n***\n10-fold cross validation will be performed to determine the optimal value for K. To perform the cross validation, models will be generated with K=1 to K=50. 10-fold cross validation will be performed for each model, and the average accuracy score of all 10 folds will be recorded. The average misclassification error (1 - accuracy) will be plotted vs the K values. The K value(s) with the lowest misclassification error will be created, and the model with the highest accuracy will be selected as the KNN model.","024ad832":"## 4.3 Naive-Bayes <a id=\"NB\"><\/a>\n***","e3c3f384":"This analysis will build a classification model to prescribe patients with the correct pharmaceutical. The data set was retrieved from https:\/\/www.kaggle.com\/pablomgomez21\/drugs-a-b-c-x-y-for-decision-trees.","11731225":"# 1. Introduction <a id=\"Introduction\"><\/a>\n***\nAs technology advances, scientists are able to discover new pharmacetucals to help treat or cure diseases that previosuly were thought to be fatal. But with the rise in new treatments raises another challenge; which treatment is the best for the patient? Most drugs have side effects, or unintended reactions which could occur after taking the drug. These side effects, depending on the patient's health and medical history, could cause serious health concerns in the patient. The doctor needs to consider these factors when prescribing a drug to a patient, however doctors are people too, meaning they are subject to human error. In fact, according to a 2014 Harvard study, newly approved prescription medication has a 20% chance to cause serious side effects [1].\n\nThis analysis will explore various classification models in order to accurately prescribe patients with the correct pharmaceutical. Each model created will be analyzed for accuracy by using a confusion matrix. The types of classification models are as follows: \n\n1. Logistic Regression   \n2. K-Nearest Neighbors (KNN)   \n3. Naive-Bayes   \n4. Decision Tree   \n\nGaussian Naive-Bayes classification will be used to build the Naive-Bayes model. Each classification model's accuracy and confusion matrix will be compared, and the best performing model based on these criteria will be selected. \n\nExploratory data analysis will be performed prior to building the classification models. Various plots will be generated to understand the attribute distributions and relationships. Data cleaning and preprocessing will be performed as part of exploratory data analysis.","290e6338":"# 5. Results <a id=\"Results\"><\/a>\n***\n\nComparing each of the models, the decision tree was the best performing classifier, with an accuracy of 100%. Logisitc regression was a close second with an accuracy of 95% percent. The KNN model and the logisitc regression model had misclassification errors when classifying drugX. This might be due to the fact that patients prescirbed to drugX had a very similar average sodium potassium ratio and age compared to other patients prescribed to drugC. The Naive-Bayes model struggled to classify drugB, which could be due to the fact that the patients prescribed to drugs A, B, C, and X all had similar average sodium potassium ratios.\n\nIt would be interesting to get additional data about the patients and the drugs themselves. As stated previously, drugs can interact with each other and cause serious side effects. Other medications the patients are taking could drastically affect the model results. Also, the medical history of the patients, such as cardiovascualr issues, cancer diagnoses, and kidney or liver problems, will affect physician's decisions on which medication to prescribe to their patients. This additional information could help fine tune the models to ensure patient safety. Information about the side effects of each drug will also help to fine tune the models. ","4460b2d4":"# Contents\n***\n<ol>\n    <li><a href=\"#Introduction\"> Introduction <\/a><\/li>\n    <li><a href=\"#Setup\"> Environment Setup <\/a><\/li>   \n    <li><a href=\"#ExploratoryDataAnalysis\"> Exploratory Data Analysis <\/a><\/li>\n    <ul style=\"list-style-type:circle;\">\n        <li><a href=\"#Plots\"> Exploratory Plots <\/a><\/li>\n        <li><a href=\"#CTabs\"> Cross-Tab Tables <\/a><\/li>\n        <li><a href=\"#Corr\"> Correlation Matrix <\/a><\/li><\/ul>\n    <li><a href=\"#Classification\"> Classification Models <\/a><\/li>\n    <ul style=\"list-style-type:circle;\">\n        <li><a href=\"#Logistic\"> Logistic Regression <\/a><\/li>\n        <li><a href=\"#KNN\"> K-Nearest Neighbors <\/a><\/li>\n        <li><a href=\"#NB\"> Naive-Bayes <\/a><\/li>\n        <li><a href=\"#Tree\"> Decision Tree <\/a><\/li><\/ul>\n    <li><a href=\"#Results\"> Results <\/a><\/li>\n    <li><a href=\"#REF\"> References <\/a><\/li>\n<\/ol>","2f5f1041":"The KNN model, with K=3, had a higher accuracy score than the K=4 model, thus the selected KNN model is the model with K=3. The K=3 model is not the best. The accuracy score is only 67.5%. DrugX was not correctly categorized in either KNN model, and DrugA had the most incorrect classifications in both models. ","428fd2e7":"## 3.1 Exploratory Plots <a id=\"Plots\"><\/a>\n***","d7a73d6c":"The correlation matrix shows that the sodium potassium ratio and blood pressure have the strongest impact on the prescribed drug.","8f50301a":"The logisitic regression model performed very well overall, with an accruacy score of 95%. The logisitc regression model miscategorized 2 instances of drugC as drugX. This is shown in the classification report. The precision for row 1 (drugC) is 50%, while the recall for row 2 (durgX) is also 50%, indicating that the model miscategorized 2 instaces of drugX as drugC.","8efef07e":"The Naive-Bayes classification model had some issues classifying drugB. The accuracy of the model is 87.5%.","bcd2c2c2":"Based on the cross validation results, K = 3 and K = 4 yield the lowest average misclassification error. A model with 3 and 4 neighbors will be generated, with the model with the highest accuracy being selected as the KNN model.","f2f458e4":"### Average Sodium Potassium Ratio by Drug and Sex"}}