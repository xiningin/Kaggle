{"cell_type":{"9214d3f6":"code","354cbd40":"code","69315b3c":"code","9c3e8d0b":"code","a7a36955":"code","fa73dc11":"code","4fb20e7d":"code","0d14c462":"code","534d5b34":"code","d8c021f5":"code","08703f13":"code","f1e735b9":"code","5c95ecfc":"code","83035514":"code","ec5798e9":"code","eecbdecc":"code","bd3c4fc4":"code","6ebdba92":"code","2dde9df4":"code","d152dc15":"code","899e8cb9":"code","da7888be":"code","ea57e1fa":"code","91921b1c":"code","75cd8446":"code","ebf24d56":"code","ea92f17c":"code","7c1f3c13":"code","8344de01":"code","5fa9c4ab":"code","df3d08ac":"code","126008bb":"code","29fe6716":"code","526cebd6":"code","995d8f56":"code","1fada66a":"markdown","3818b68e":"markdown","93272c3f":"markdown","868ab11f":"markdown","63c7ae83":"markdown","8c3fa25b":"markdown","93e451a5":"markdown","cebc8312":"markdown","c6e123c9":"markdown","be36fff0":"markdown"},"source":{"9214d3f6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","354cbd40":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","69315b3c":"df = pd.read_csv('..\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv')","9c3e8d0b":"df.head()","a7a36955":"df.info()","fa73dc11":"df.isnull().sum()","4fb20e7d":"import missingno as msno \nmsno.matrix(df)\n","0d14c462":"#distribution of males and females in different exams categories and streams\nsns.catplot(x=\"ssc_b\",hue=\"gender\",data=df, kind=\"count\",)\nplt.ylabel(\"No_of_students\")\nplt.xlabel(\"senior_secondary\")\nsns.catplot(x=\"hsc_b\",hue=\"gender\",data=df, kind=\"count\")\nplt.ylabel(\"No_of_students\")\nplt.xlabel(\"higher_senior_secondary\")\nsns.catplot(x=\"hsc_s\",hue=\"gender\",data=df, kind=\"count\")\nplt.ylabel(\"No_of_students\")\nplt.xlabel(\"stream\")","534d5b34":"sns.countplot(x='workex', hue='hsc_s', data=df)","d8c021f5":"sns.countplot(x='workex', hue='hsc_b', data=df)","08703f13":"sns.countplot(x='workex', hue='ssc_b', data=df)","f1e735b9":"sns.kdeplot(df[\"salary\"])\nplt.show()","5c95ecfc":"from sklearn.preprocessing import LabelEncoder\nnumber = LabelEncoder()","83035514":"df['gender'] = number.fit_transform(df['gender'].astype('str'))\ndf['degree_t'] = number.fit_transform(df['degree_t'].astype('str'))\ndf['specialisation'] =  number.fit_transform(df['specialisation'].astype('str'))\ndf['workex'] = number.fit_transform(df['workex'].astype('str'))","ec5798e9":"df.drop(['ssc_b'], axis = 1, inplace=True) \ndf.drop(['hsc_s'], axis = 1, inplace=True) \ndf.drop(['hsc_b'], axis = 1, inplace=True) \ndf.drop(['sl_no'], axis = 1, inplace=True) ","eecbdecc":"df1 = df.copy()","bd3c4fc4":"df.head()","6ebdba92":"df1.head()","2dde9df4":"df = df[df[\"salary\"]<350000.0]\ndf","d152dc15":"sns.kdeplot(df[\"salary\"])\nplt.show()","899e8cb9":"df.drop(['status'], axis = 1, inplace =True) \n","da7888be":"X1 = df.iloc[:, :9].values\ny1 = df.iloc[:, 9].values\n","ea57e1fa":"# Splitting the dataset into the Training set and Test set\nfrom sklearn.model_selection import train_test_split\nX_train1, X_test1, y_train1, y_test1 = train_test_split(X1, y1, test_size = 0.25, random_state = 0)","91921b1c":"# Fitting Simple Linear Regression to the Training set\nfrom sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(X_train1, y_train1)","75cd8446":"# Predicting the Test set results\ny_pred1 = regressor.predict(X_test1)","ebf24d56":"from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error\nfrom math import sqrt\n\nMAE = mean_absolute_error(y_test1, y_pred1)\nprint(MAE)\n","ea92f17c":"df1['status'] = df1['status'].map({'Not Placed':0,'Placed':1})","7c1f3c13":"df1.head()","8344de01":"df1.drop(['salary'], axis = 1, inplace =True) \n","5fa9c4ab":"X = df1.iloc[:, :9].values\ny = df1.iloc[:, 9].values","df3d08ac":"# Splitting the dataset into the Training set and Test set\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)\n","126008bb":"# Feature Scaling\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)\n","29fe6716":"# Fitting Logistic Regression to the Training set\nfrom sklearn.linear_model import LogisticRegression\nclassifier = LogisticRegression(random_state = 0)\nclassifier.fit(X_train, y_train)","526cebd6":"# Predicting the Test set results\ny_pred = classifier.predict(X_test)\n","995d8f56":"from sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)\naccuracy = accuracy_score(y_test, y_pred)*100\nprint(accuracy)","1fada66a":" **CLASSIFICATION MODEL**","3818b68e":"**EXPLORING THE WORK EXPERIENCE OF THE STUDENTS FROM DIFFERENT BOARD EXAMINATIONS AND STREAMS**","93272c3f":"**REGRESSION MODEL IMPLEMENTATION**","868ab11f":"visualise the distributaion of males and females in different examination boards","63c7ae83":"**EXPLORATORY DATA ANALYSIS**\n","8c3fa25b":"*FINDING THE ACCURACY OF CLASSIFICATION MODEL*","93e451a5":"**IMPORTING LIBRARIES**","cebc8312":"**DATA PRE_PROCESSING**\n","c6e123c9":"**IMPORT THE DATA**","be36fff0":"**CHECK IF THE DATA IS MISSING**"}}