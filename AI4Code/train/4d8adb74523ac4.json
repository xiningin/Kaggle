{"cell_type":{"f3ad528a":"code","b49b48a1":"code","86c4d211":"code","737b4f60":"code","a7bdddd4":"code","33cd0211":"code","58f69333":"code","67e0b67b":"code","12fd0c05":"code","bf017642":"code","260e2507":"code","1eb70793":"code","e08665f4":"code","17f1dea2":"code","3b56fa28":"code","e8d12b23":"code","ccfa2c51":"code","3eb974f9":"code","849ed2c3":"code","98ce6616":"code","d3710142":"code","53072b37":"code","a4167c27":"code","a19a529b":"code","b4734183":"code","b9976e3a":"code","94c584fe":"code","417ddbd9":"markdown","2654c8e0":"markdown","ef58937a":"markdown","99ffb0b7":"markdown","4e135802":"markdown","4373978f":"markdown","808b24e4":"markdown","22dace8a":"markdown","8014588a":"markdown","4907c8e8":"markdown","5f7881a5":"markdown","b90c9310":"markdown","d2f0e836":"markdown","bfa4240a":"markdown","dadfc5ff":"markdown"},"source":{"f3ad528a":"#Modules for EDA\nimport numpy as np \nimport pandas as pd\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\n\n#Modules for ML\nfrom tensorflow import keras\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import r2_score,mean_squared_error\n%matplotlib inline","b49b48a1":"df = pd.read_csv('..\/input\/body-fat-prediction-dataset\/bodyfat.csv')\ndf.shape","86c4d211":"df.info()","737b4f60":"df.head()","a7bdddd4":"plt.figure(figsize=(7,7))\nsns.pairplot(df)\nplt.show()","33cd0211":"df.describe()","58f69333":"columns = df.columns","67e0b67b":"for column in columns:\n    plt.figure(figsize=(7,7))\n    sns.histplot(data=df[[column]],x=column,element='poly')\n    plt.title(f\"{column}'s Histogram.\")\n    plt.show()","12fd0c05":"scale = MinMaxScaler()\nscalled = scale.fit_transform(df)","bf017642":"i = 0\nfor col in columns:\n    df[col] = scalled[:,i]\n    i += 1","260e2507":"df.head()","1eb70793":"x, y = df.drop('BodyFat',axis=1), df['BodyFat']","e08665f4":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3)\nx_train.shape, x_test.shape, y_train.shape, y_test.shape","17f1dea2":"model = keras.Sequential([\n    keras.layers.Dense(14,input_shape=(14,),activation='linear'),\n    keras.layers.Dense(10,activation='linear'),\n    keras.layers.Dense(7,activation='linear'),\n    keras.layers.Dense(3,activation='linear'),\n    keras.layers.Dense(1,activation='linear'),\n    \n])\n\nmodel.compile(\n    optimizer='adam',\n    loss='mean_squared_error'\n)","3b56fa28":"model.fit(x_train,y_train,epochs=150)","e8d12b23":"model.evaluate(x_test,y_test)","ccfa2c51":"def predict(model,x):\n    pred = model.predict(x).flatten()\n    return pred\n\ndef plot_actual_vs_predicted(y_true,y_pred,title=None):\n    plt.figure(figsize=(7,7))\n    plt.scatter(y_true,y_pred)\n    \n    #Labelling\n    plt.xlabel(\"Actual\")\n    plt.ylabel(\"Predicted\")\n    plt.title(title)\n    plt.show()","3eb974f9":"y_test_predict = predict(model, x_test)\nplot_actual_vs_predicted(y_test, y_test_predict,'Test Data Predictions.')","849ed2c3":"test_rmse = mean_squared_error(y_test,y_test_predict) ** (1\/2)\ntest_rmse","98ce6616":"test_data = pd.DataFrame({'Test Actual':y_test,'Test Predicted':y_test_predict})\ntest_data.corr()","d3710142":"test_data.sample(10)","53072b37":"r2_score(y_test,y_test_predict)","a4167c27":"y_train_predict = predict(model, x_train)\nplot_actual_vs_predicted(y_train, y_train_predict,'Train Data Predictions.')","a19a529b":"train_rmse = mean_squared_error(y_train,y_train_predict) ** (1\/2)\ntrain_rmse","b4734183":"train_data = pd.DataFrame({'Train Actual':y_train,'Train Predicted':y_train_predict})\ntrain_data.corr()","b9976e3a":"train_data.sample(10)","94c584fe":"r2_score(y_train,y_train_predict)","417ddbd9":"# **Test Data Predictions**","2654c8e0":"# **Load Data**","ef58937a":"# **Data Stats**","99ffb0b7":"# **Root Mean Squared Error**","4e135802":"# **R^2 Score**","4373978f":"# **Model Building**","808b24e4":"# **R^2 Score**","22dace8a":"# **Predictions**","8014588a":"# **Test Data Correlation**","4907c8e8":"# **Feature Scaling**","5f7881a5":"# **Train Data Correlation**","b90c9310":"# **Root Mean Squared Error**","d2f0e836":"# **Splitting and Training data**","bfa4240a":"# **Histograms**","dadfc5ff":"# **Train Data Predictions**"}}