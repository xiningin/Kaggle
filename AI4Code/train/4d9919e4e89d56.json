{"cell_type":{"d64abf52":"code","949dabc3":"code","14ee2e8e":"code","479212ab":"code","17dcbc33":"code","304e2c35":"code","ce08e76f":"code","5fa298f6":"code","50e160dd":"code","89d0e241":"code","fec8b8dc":"code","b9089670":"code","9f846ebf":"code","c9cc439d":"code","9e17f974":"code","2cc02bbe":"code","a88a24a1":"code","3d96ffbb":"code","c2b7afa8":"code","e34f8759":"code","f374ea5c":"code","8d9b364b":"code","3d156bf7":"code","e79870c0":"code","422f7271":"code","db576820":"code","f00bf412":"code","00b648a4":"code","478f2185":"code","57f09211":"code","7bcb6c6d":"code","8d0e7ec8":"code","e97e1da6":"code","9e1bd51a":"code","8d6cf069":"code","8609ec66":"code","c61b7567":"code","c3ee136a":"code","85df8be1":"code","3b05f478":"code","b3ed429b":"code","7039b483":"code","8eaf659d":"code","e3b3b9aa":"code","c93f0c7b":"code","0cc08cb0":"code","54cdaba3":"code","1ff5d03a":"code","21640808":"code","27416f8d":"code","b60e6a81":"code","46cf2c52":"code","1b2002d9":"code","f83583c0":"code","20029950":"code","dceb6d74":"code","bbde5d2b":"code","22b72ae2":"code","d4f9175f":"code","123c6ab6":"code","bc76a665":"code","f5cc2bb8":"code","770d8f28":"code","dbf8a520":"code","a3c477c0":"code","3def7804":"code","d5522713":"code","1086c880":"code","aed19914":"code","7b322661":"markdown","cdccfa2a":"markdown","469ded29":"markdown","96d0b092":"markdown","eb2713ea":"markdown"},"source":{"d64abf52":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder,StandardScaler\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import OneHotEncoder \n  \n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nRANDOM_SEED = 101\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","949dabc3":"train = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ntrain.head()","14ee2e8e":"test_file = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv\")\ntest_file.head()","479212ab":"submission = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv\")\nsubmission.head()","17dcbc33":"train.columns","304e2c35":"train.info()","ce08e76f":"train.describe()\n","5fa298f6":"target = 'SalePrice'\nfig = plt.figure(figsize=(10,6))\nsns.kdeplot(train['SalePrice'])","50e160dd":"train['YearBuilt'].value_counts()","89d0e241":"sns.distplot(train['YearBuilt'])\nsns.set(font_scale=1)","fec8b8dc":"missing_data = pd.DataFrame(train.isna().sum().sort_values(ascending=False))\nmissing_data.head(20)\nmissing_data[0]","b9089670":"train[\"Neighborhood\"].value_counts()","9f846ebf":"plt.figure(figsize=(10,5))\ntrain['MSZoning'].value_counts().plot.bar()\n","c9cc439d":"train['LandContour'].value_counts().plot.bar()","9e17f974":"train['OverallQual'].value_counts().plot.bar()\n","2cc02bbe":"sns.countplot(x='OverallQual',data=train)","a88a24a1":"sns.countplot(x='OverallCond',data=train)","3d96ffbb":"sns.countplot(x=\"Foundation\",data=train)","c2b7afa8":"sns.kdeplot(train[\"TotalBsmtSF\"],shade=True)","e34f8759":"plt.figure(figsize=(15,6))\nsns.scatterplot(x='TotalBsmtSF',y='SalePrice',data=train)","f374ea5c":"sns.scatterplot(x=\"GrLivArea\",y=\"SalePrice\",data=train)","8d9b364b":"sns.boxplot(x='OverallQual',y='SalePrice',data=train)","3d156bf7":"plt.figure(figsize=(10,8))\nsns.scatterplot(x='YearBuilt',y=\"SalePrice\",data=train)","e79870c0":"plt.figure(figsize=(20,8))\nsns.boxplot(x=\"Neighborhood\",y=\"SalePrice\",data=train)","422f7271":"sns.countplot(train[\"RoofStyle\"])","db576820":"sns.boxplot(x=\"RoofStyle\",y='SalePrice',data=train)","f00bf412":"sns.countplot(train['BsmtCond'])","00b648a4":"sns.scatterplot(x=\"GarageArea\",y=\"SalePrice\",data=train)","478f2185":"sns.distplot(train['TotRmsAbvGrd'])","57f09211":"sns.boxplot(x=\"TotRmsAbvGrd\",y=\"SalePrice\",data=train)","7bcb6c6d":"train['TotRmsAbvGrd'].value_counts().plot.bar()","8d0e7ec8":"train['FullBath'].unique()","e97e1da6":"train['FullBath'].value_counts().plot.bar()","9e1bd51a":"sns.boxplot(x=\"FullBath\",y=\"SalePrice\",data=train)","8d6cf069":"rel = pd.crosstab(train['TotRmsAbvGrd'],train['FullBath'])\nprint(rel)","8609ec66":"train[\"HalfBath\"].value_counts()","c61b7567":"train[\"FullBath\"].value_counts()","c3ee136a":"sns.kdeplot(train['GarageArea'])","85df8be1":"train['GarageArea'].describe()","3b05f478":"sns.scatterplot(x=\"GarageArea\",y=\"SalePrice\",data=train)","b3ed429b":"sns.countplot(train[\"GarageCars\"])","7039b483":"sns.boxplot(x=\"GarageCars\",y=\"SalePrice\",data=train)","8eaf659d":"sns.boxplot(x=\"GarageCars\",y=\"GarageArea\",data=train)","e3b3b9aa":"sns.boxplot(x=\"MSSubClass\",y=\"SalePrice\",data=train)","c93f0c7b":"train['MSSubClass'].value_counts().plot.bar()","0cc08cb0":"sns.lineplot(x=\"YearRemodAdd\",y=\"SalePrice\",data=train)","54cdaba3":"train['HouseStyle'].value_counts().plot.bar()","1ff5d03a":"sns.boxplot(x='HouseStyle',y='SalePrice',data=train)","21640808":"cor = train.corr()['SalePrice']\ncor.sort_values(ascending=False)\n\n","27416f8d":"null_values = train.isnull().sum()\/train.shape[0]*100\nnull_values[(null_values>=30)]","b60e6a81":"null_values = train.isnull().sum()\/train.shape[0]*100\nnull_values[(null_values>0) & (null_values<30)]\n","46cf2c52":"train.loc[:,['MasVnrType','Electrical']] = train[['MasVnrType','Electrical']].fillna(train[['MasVnrType','Electrical']].mode().iloc[0])\ntrain['GarageYrBlt'] = train['GarageYrBlt'].fillna(train.YearBuilt)\ntrain.GarageYrBlt.isna().sum()","1b2002d9":"train[['LotFrontage','MasVnrArea']] = train[['LotFrontage','MasVnrArea']].fillna(train[['LotFrontage','MasVnrArea']].mean().iloc[0])","f83583c0":"impute_none = train[['Alley','FireplaceQu','PoolQC','Fence','MiscFeature','BsmtQual','BsmtCond','BsmtExposure','BsmtFinType1','BsmtFinType2','GarageFinish','GarageQual','GarageCond','GarageType']]\ntrain.update(impute_none.fillna(\"None\"))\ntrain","20029950":"train.drop(['GarageArea','1stFlrSF','TotRmsAbvGrd'],axis=1,inplace=True)\n","dceb6d74":"num_cols = [\"TotalBsmtSF\",\"GarageArea\",\"YearRemodAdd\",\"YearBuilt\",\"GrLivArea\",\"1stFlrSF\"]\ncat_cols = [\"TotRmsAbvGrd\",\"GarageCars\",\"OverallQual\",\"FullBath\",'HouseStyle']","bbde5d2b":"j=1\nfig = plt.figure(figsize=(25,6))\nfor col in num_cols:\n    axs = fig.add_subplot(1,len(num_cols),j)\n    axs = sns.distplot(train[col],label=\"Skewness: .%2f\"%(train[col].skew()))\n    axs.set_xlabel(col)\n    axs.set_ylabel(\"frequency\")\n    axs.legend(loc='best')\n    j+=1","22b72ae2":"fig = plt.figure(figsize=(50,15))\nj = 1\nfor cat in cat_cols:\n    ax = fig.add_subplot(1,len(cat_cols),j)\n    ax = sns.countplot(x = cat, data=train)\n    ax.set_xlabel(cat,fontsize=30)\n    ax.set_ylabel(\"Frequency count\",fontsize=30)\n    plt.xticks(fontsize=30,rotation=90)\n    plt.yticks(fontsize=30)\n    j += 1  ","d4f9175f":"fig = plt.figure(figsize=(10,5))\nsns.pairplot(train[num_cols])","123c6ab6":"fig = plt.figure(figsize=(50,20))\nj = 1\nfor col in num_cols:\n    ax = fig.add_subplot(1,len(num_cols),j)\n    ax = sns.scatterplot(train[col],train['SalePrice'])\n    ax.set_xlabel(col,fontsize=30)\n    ax.set_ylabel('SalePrice',fontsize=30)\n    plt.xticks(fontsize=30,rotation=90)\n    plt.yticks(fontsize=30,rotation=90)\n    j += 1","bc76a665":"for num_col in num_cols:\n    fig = plt.figure(figsize = (30,10))\n    j = 1\n    for cat_col in cat_cols:\n        ax = fig.add_subplot(1,len(cat_cols),j)\n        sns.boxplot(y = train[num_col],\n                    x = train[cat_col], \n                    data = train, \n                    ax = ax)\n        ax.set_xlabel(cat_col,size=15)\n        ax.set_ylabel(num_col,size=15)\n        plt.xticks(fontsize=20,rotation=90)\n        plt.yticks(fontsize=20,rotation=90)\n        j = j + 1","f5cc2bb8":"j=1\nfig = plt.figure(figsize=(30,6))\nfor cat in cat_cols:\n    ax = fig.add_subplot(1,len(cat_cols),j)\n    sns.boxplot(train[cat],train['SalePrice'],data=train)\n    ax.set_xlabel(cat)\n    ax.set_ylabel('Sale Price')\n    j+=1","770d8f28":"train.isna().mean().sort_values(ascending=False)\ntrain_cp = train\np = pd.concat(objs=[train_cp.drop(columns='SalePrice'),test_file],axis=0)\np.isna().mean().sort_values(ascending=False)","dbf8a520":"l = []\nfor i in train.columns:\n    if train[i].dtypes == np.object:\n        l.append(i)\nl\n\n\n        \n","a3c477c0":"fig = plt.figure(figsize=(300,200))\nfor j in range(1,len(l)):\n    ax = plt.subplot(16,3,j)\n    sns.countplot(l[j],data=train)\n    ax.set_xlabel(l[j],fontsize=50)\n    ax.set_ylabel('Frequency',fontsize=50)\n    plt.xticks(fontsize=50,rotation=90)\n    plt.yticks(fontsize=50,rotation=90)\n    \n","3def7804":"for i in l:\n    print(train[i].value_counts().sort_values())","d5522713":"\nfor i in l:\n    df = pd.DataFrame()\n    df[i + '_train']= train[i].value_counts()\n    df[i + '_test'] = test_file[i].value_counts()\n    print(df.head(15))\n","1086c880":"l2 = []\n\nfor i in train.columns:\n    if train.dtypes[i] == np.int64:\n        l2.append(i)\nl2\nlen(l2)\n","aed19914":"for i in l2:\n    df = pd.DataFrame()\n    if(len(list(train[i].unique()))<20):\n        df[i + '_train']= train[i].value_counts()\n        df[i + '_test'] = test_file[i].value_counts()\n    print(df.head(20))","7b322661":"<h1>EXPLORATORY DATA ANALYSIS<\/h1>\n\n<h3>UNIVARIATE ANALYSIS<\/h3>","cdccfa2a":"***Cetegorical features***\n'MSZoning','Street','Alley','LotShape','LandContour','Utilities','LotConfig','LandSlope','Neighborhood','Condition','Condition2','BldgType','HouseStyle','RoofStyle','RoofMatl','Exterior1st','Exterior2nd','MasVnrType','ExterQual','ExterCond','Foundation','BsmtQual','BsmtCond','BsmtExposure','BsmtFinType1','BsmtFinType2','Heating','HeatingQC','CentralAir','Electrical','KitchenQual','Functional','FireplaceQu','GarageType','GarageFinish','GarageQual','GarageCon','PavedDrive','PoolQC','Fence','MiscFeature','SaleType','SaleCondition'\n\n\n\n\n\n","469ded29":"MSSubClass,OverallQual,OverallCond,BsmtFullBath,BsmtHalfBath, FullBath,HalfBath,BedroomAbvGr,KitchenAbvGr,TotRmsAbvGrd,Fireplaces,GarageCars,PoolArea,MoSold,YrSold,","96d0b092":"   ****FEATURES TO BE DISCARDED****\n   \n1. Alley\n2. Utilities\n3. Condition2\n4. RoofMtl\n5. Exterior2nd\n6. PoolQC\n7. MiscFeature\n8. PoolArea\n9. 2ndFlrSF\n\n    ****FEATURE ENGINEERING ON THIS FEATURES CAN BE DONE!!****\n    \n1. HouseStyle\n2. RoofStyle\n3. Exterior1st\n4. Heating\n5. Electrical\n6. GarageQual\n7. BedroomAbvGr\n8. KitchenAbvGr \n9. TotRmsAbvGrd","eb2713ea":"important features\n1. TotalBsmtSF(int)\n2. GarageArea(int)\n3. YearRemodAdd(int)\n4. YearBuilt(int)\n5. GrLivArea (int)\n6. 1stFlrSF(int)\n7. TotRmsAbvGrd(cetegory)\n8. GarageCars(cetegory\n9. OverallQual(cetegory)\n10. FullBath(cetegory)\n"}}