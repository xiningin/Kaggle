{"cell_type":{"2802135b":"code","8271cdbe":"code","4d2a67bb":"code","85898aba":"code","2e6db259":"code","060211f5":"code","d3fb5980":"code","b72b3836":"code","faee49dd":"code","531a965c":"code","38335ca9":"code","fb715e3f":"code","1d7817dd":"code","91e2ef26":"code","7a817a4c":"code","0b4ae01f":"code","4f2665a4":"code","57e1a6fb":"code","8ad555f0":"code","bc8e58fe":"code","083376ec":"code","77c18fc8":"code","61730b3b":"code","f555f852":"code","caff8289":"code","40a3a2f5":"code","7f0989f3":"code","e4d1607e":"code","a723768f":"code","a2a121d4":"code","72fff438":"code","7562639f":"code","213933f8":"markdown","caa49513":"markdown"},"source":{"2802135b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8271cdbe":"!pip install mlxtend","4d2a67bb":"df = pd.read_csv(\"..\/input\/supermarket\/GroceryStoreDataSet.csv\")","85898aba":"\n\ndf.head()","2e6db259":"df.info()","060211f5":"df.shape","d3fb5980":"df.columns.size","b72b3836":"# unique column c\u0131kartma operasyonu\nunique_row_items = []\nfor index, row in df.iterrows():\n    items_series = list(row.str.split(','))\n    for item_serie in items_series:\n        for item in item_serie:\n            if item not in unique_row_items:\n                unique_row_items.append(item)\n    \n\n\nunique_row_items","faee49dd":"df_apriori = pd.DataFrame(columns=unique_row_items)\n#df_apriori.at[0,'JAM'] = 1\n#df_apriori.at[1,'JAM'] = 1\ndf_apriori","531a965c":"#eldeki data'lar\u0131 e\u015fle\u015ftirip onehotencoding'e d\u00f6n\u00fc\u015ft\u00fcr ve dataframe'e ekle\nfor index, row in df.iterrows():\n    items = str(row[0]).split(',')\n    #print(items)\n    one_hot_encoding = np.zeros(len(unique_row_items),dtype=int)\n    for it in items:\n        for i,column in enumerate(df_apriori.columns):\n            #print(i,column,it)\n            if it == column:\n                one_hot_encoding[i] = 1\n    df_apriori.at[index] = one_hot_encoding\n    #print(one_hot_encoding)\n","38335ca9":"df_apriori","fb715e3f":"df_apriori.info()","1d7817dd":"df_apriori=df_apriori.astype('int')","91e2ef26":"from mlxtend.frequent_patterns import apriori, association_rules","7a817a4c":"freq_items = apriori(df_apriori, min_support = 0.2, use_colnames = True, verbose = 1)","0b4ae01f":"freq_items","4f2665a4":"freq_items.head()","57e1a6fb":"df_association_rules = association_rules(freq_items, metric = \"confidence\", min_threshold = 0.2)\ndf_association_rules","8ad555f0":"df_association_rules.sort_values(\"confidence\",ascending=False)","bc8e58fe":"df_association_rules","083376ec":"df_association_rules[\"antecedents\"].apply(lambda x: str(x))","77c18fc8":"cols = ['antecedents','consequents']\ndf_association_rules[cols] = df_association_rules[cols].applymap(lambda x: tuple(x))\nprint (df_association_rules)","61730b3b":"df_association_rules = (df_association_rules.explode('antecedents')\n         .reset_index(drop=True)\n         .explode('consequents')\n         .reset_index(drop=True))","f555f852":"df_association_rules","caff8289":"df_association_rules[\"product_group\"] = df_association_rules[\"antecedents\"].apply(lambda x: str(x)) + \",\" + df_association_rules[\"consequents\"].apply(lambda x: str(x))","40a3a2f5":"df_association_rules","7f0989f3":"df1 = df_association_rules.loc[:,[\"product_group\",\"confidence\",\"lift\"]].sort_values(\"confidence\",ascending=False)","e4d1607e":"import seaborn as sns\nsns.set(font_scale=0.4) \nsns.set(rc={'figure.figsize':(21.7,5.27)})\nsns.barplot(x=\"product_group\",y=\"confidence\",data=df1);","a723768f":"import seaborn as sns\nsns.set(font_scale=0.4) \nsns.set(rc={'figure.figsize':(21.7,5.27)})\nsns.barplot(x=\"product_group\",y=\"confidence\",hue=\"lift\",data=df1);","a2a121d4":"import seaborn as sns\nsns.set(font_scale=0.4) \nsns.set(rc={'figure.figsize':(21.7,5.27)})\nsns.barplot(x=\"product_group\",y=\"confidence\",hue=\"lift\",data=df1);","72fff438":"df1.plot.bar()","7562639f":"sns.barplot(x=\"Pclass\",y=\"survived_grouped_count\",hue=\"AgeGroup\",data=df[df.Survived == 1]);","213933f8":"* MAGGI (Haz\u0131r \u00e7orba imi\u015f) alan m\u00fc\u015fterilerin %80'i \u00e7ayda almaktad\u0131r.\n* \u00c7AY ve MAGGI \u00fcr\u00fcnleri kar\u015f\u0131l\u0131kl\u0131\u0131 olarak sat\u0131\u015flar\u0131n\u0131 2.17 kat artt\u0131rmaktad\u0131rlar\n* \u015eEKER alan m\u00fc\u015fterilerin % 66's\u0131da ekmekte almaktad\u0131rlar.\n* KAHVE alan m\u00fc\u015fterilerin %42'si \u015feker ve CORNFLAKES almaktad\u0131rlar. Ayn\u0131 zamanda bu sat\u0131\u015flar\u0131n %33'\u00fcnde ekmekte bulunmaktad\u0131r.\n","caa49513":"# yorumlar"}}