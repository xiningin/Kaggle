{"cell_type":{"31a5882a":"code","8b364847":"code","525de18a":"code","bb8b665a":"code","6ca7c674":"code","3de340f6":"code","99123427":"code","df884bae":"code","de9f34a8":"code","a7496a99":"code","4f9bcaa2":"code","b7bd62ea":"code","7165a5df":"code","40a3e164":"code","03b2422d":"code","7890068c":"code","f3d84ef5":"code","51f130ad":"code","c8e3f4c6":"code","393d3a44":"code","ebca7044":"code","d7c7ae2e":"code","1f75624a":"code","209a22fe":"code","b57f4407":"code","3cfd639b":"code","572b7043":"markdown","67f0050a":"markdown","f0fed7c4":"markdown","63125edb":"markdown","016dfa76":"markdown","0625bfbf":"markdown","820ca45d":"markdown","bcfbcee9":"markdown","b4ce317d":"markdown","2e1ee941":"markdown","cdb7db04":"markdown","75cbb573":"markdown","a42c6376":"markdown"},"source":{"31a5882a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import f1_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn import metrics\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8b364847":"df_titanic = pd.read_csv(\"\/kaggle\/input\/titanic\/train_and_test2.csv\")[[ 'Age', 'Fare', 'Sex', 'sibsp','Parch','Pclass','Embarked','2urvived']]","525de18a":"df_titanic.isnull().sum()","bb8b665a":"df_titanic[(df_titanic['Embarked'].isnull()) ==True]","6ca7c674":"df_titanic.dropna(inplace = True)","3de340f6":"def FindUnique (col_list):\n    for col in  col_list :\n        print(\"Unique values in :\" + col)\n        print(df_titanic[col].unique())        \n    \n        ","99123427":"FindUnique(['Sex','sibsp','Parch','Pclass','Embarked']) ","df884bae":"df_titanic['Embarked'] = df_titanic['Embarked'].astype(int)\ndf_titanic.dtypes","de9f34a8":"Survived = df_titanic[df_titanic['2urvived'] == 1]\nNot_survived = df_titanic[df_titanic['2urvived'] == 0]\nprint(\"Total number of people onboarded the ship : \" +str(df_titanic['2urvived'].count()))\nprint(\"Only \" + str(round((Survived['2urvived'].count()\/df_titanic['2urvived'].count())*100)) + \"%\" + \" of people survived\")\nprint(str(round((Not_survived['2urvived'].count()\/df_titanic['2urvived'].count())*100)) + \"%\" + \" of people didn't survived\")","a7496a99":"fig = plt.figure(figsize = (10,8))\nax= fig.add_subplot(111)\ndf_titanic[['2urvived']].plot(kind = \"hist\",ax= ax)\nax.set_xticks([0,1])\nax.set_xticklabels([\"Didn't survived\",\"Survived\"])\nax.set_ylabel(\"Number of people\",)\nax.legend([\"Number of people\"])\nplt.show()","4f9bcaa2":"str(round((df_titanic[df_titanic['Age']<30]['Age'].count()\/df_titanic['2urvived'].count())*100)) + \"%\"","b7bd62ea":"str(round(df_titanic[(df_titanic['sibsp']!= 1) & (df_titanic['Parch']!= 1)]['2urvived'].count()\/df_titanic['2urvived'].count()*100))+\"%\"","7165a5df":"fe_per =round((df_titanic[(df_titanic['2urvived']==1) & (df_titanic['Sex'] == 1)]['2urvived'].count()\/df_titanic[(df_titanic['Sex'] == 1)]['2urvived'].count())*100)\nprint(str(fe_per) +\"%\" +\" of the female passengers survived\")","40a3e164":"ma_per = round((df_titanic[(df_titanic['2urvived']==1) & (df_titanic['Sex'] == 0)]['2urvived'].count()\/df_titanic[(df_titanic['Sex'] == 0)]['2urvived'].count())*100)\nprint(str(ma_per) +\"%\" +\" of the male passengers survived\")","03b2422d":"df_titanic.head()","7890068c":"df_titanic['Age'] = df_titanic['Age']\/df_titanic['Age'].max()\n\ndf_titanic['Fare'] = df_titanic['Fare']\/df_titanic['Fare'].max()","f3d84ef5":"df_titanic.head().columns","51f130ad":"Lets transform few variables to categorical variables to removes any bias towards any variable having large values. ","c8e3f4c6":"df_titanic = pd.get_dummies(data = df_titanic,columns =['Sex', 'sibsp', 'Parch', 'Pclass', 'Embarked'])","393d3a44":"fig = plt.figure(figsize = (20,8))\nax= fig.add_subplot(111)\nsns.heatmap(df_titanic.corr(),ax=ax,annot= True)\n","ebca7044":"X = df_titanic[['Age', 'Fare',  'Sex_0', 'Sex_1', 'sibsp_0', 'sibsp_1',\n       'sibsp_2', 'sibsp_3', 'sibsp_4', 'sibsp_5', 'sibsp_8', 'Parch_0',\n       'Parch_1', 'Parch_2', 'Parch_3', 'Parch_4', 'Parch_5', 'Parch_6',\n       'Parch_9', 'Pclass_1', 'Pclass_2', 'Pclass_3', 'Embarked_0',\n       'Embarked_1', 'Embarked_2']]\ny = df_titanic['2urvived']","d7c7ae2e":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","1f75624a":"clf = LogisticRegression().fit(X_train,y_train)\ny_hat = clf.predict(X_test)\nf1_score(y_test,y_hat)","209a22fe":"cnf_matrix =confusion_matrix(y_test,y_hat)","b57f4407":"import numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nclass_names=[0,1] # name  of classes\nfig, ax = plt.subplots()\ntick_marks = np.arange(len(class_names))\nplt.xticks(tick_marks, class_names)\nplt.yticks(tick_marks, class_names)\n# create heatmap\nsns.heatmap(pd.DataFrame(cnf_matrix), annot=True, cmap=\"YlGnBu\" ,fmt='g')\nax.xaxis.set_label_position(\"top\")\nplt.tight_layout()\nplt.title('Confusion matrix', y=1.1)\nplt.ylabel('Actual label')\nplt.xlabel('Predicted label')","3cfd639b":"print(\"Accuracy:\",metrics.accuracy_score(y_test,y_hat))\nprint(\"Precision:\",metrics.precision_score(y_test,y_hat))\nprint(\"Recall:\",metrics.recall_score(y_test,y_hat))","572b7043":"**Synopsis**\n*  Titanic was a British passenger liner that sank in 1912 after colliding with an iceberg. Only 31% of passengers survived in this disaster. The goal of this project is to complete the analysis of what sorts of people were likely to survive.","67f0050a":"Form the above numbers both young and single people onboarded the ship was high.This concludes that there was high probability that \nRose and Jack would meet. ha ha ha ha !","f0fed7c4":"Lets consider people having age less 30 as Young people. Most of the passengers were younger only.","63125edb":"**Accurcy of the model is pretty much average only.It is not performing well for prediction of if a surviving of a passenger.\nBut it doing great on prediction of not survivig of a passenger**","016dfa76":"# Let try to fit a logistic regression model on the dataset","0625bfbf":"**Data description:**\n1. Survival - Survival (0 = No; 1 = Yes)\n2. Pclass - Passenger Class (1 = 1st; 2 = 2nd; 3 = 3rd)\n3. Sex - Sex (male = 0 ; female =1)\n4. Age - Age\n5. Sibsp - Number of Siblings\/Spouses Aboard\n6. Parch - Number of Parents\/Children Aboard\n7. Fare - Passenger Fare\n8. Embarked - Port of Embarkation ","820ca45d":"# Thank You For Your Time. \n# If You find my notebook useful please give an UPVOTE.","bcfbcee9":"but, first lets perform a basic standardisation on thr Age and Fare varibales.","b4ce317d":"This number is the percetage of passengers who oboarded the ship alone.Which is very high.","2e1ee941":"It seems that only a few male passengers survived.","cdb7db04":"#  **Let's start the data visualization !**","75cbb573":"Lets see which passengers belonging to which gender survived most !","a42c6376":"Lets see if we can fins any strong coorelation between target variable 2urvvied and any dependent variables."}}