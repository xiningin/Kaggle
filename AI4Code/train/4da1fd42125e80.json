{"cell_type":{"3e29db0c":"code","26460b6b":"code","738596eb":"code","02208b9e":"code","4ff2fb1c":"code","c3e6a7cd":"code","fe1e69c1":"code","bdc8e680":"code","1ecf0b1f":"code","8e3db04e":"code","2d376da5":"code","6ccc5108":"code","dce204a1":"code","a533fd39":"code","52c61348":"code","88c2ad64":"code","76ff73ff":"code","bd277138":"code","a7b30ef1":"markdown","eb7d815e":"markdown","bab4ad62":"markdown","563287d7":"markdown","c68c606a":"markdown","7150d702":"markdown"},"source":{"3e29db0c":"import pandas as pd\nimport numpy as np\nimport plotly.express as px\npd.options.plotting.backend = \"plotly\"","26460b6b":"df = pd.read_csv('..\/input\/jiomart-products-dataset\/ProductsDB - JioMart.csv')","738596eb":"df.head()","02208b9e":"df.shape","4ff2fb1c":"df['Savings'] = df['price'] - df['discountedPrice']","c3e6a7cd":"df.head()","fe1e69c1":"df.drop('filename',axis = 1,inplace = True)","bdc8e680":"indexNames = df[df['type'] == '\"'].index\n\n# Delete these row indexes from dataFrame\ndf.drop(indexNames , inplace=True)","1ecf0b1f":"df['subType'].value_counts().plot(template = 'plotly_dark',title = 'Count Distribution of Sub-Categories')\n","8e3db04e":"df['type'].value_counts().plot(template = 'plotly_dark',title = 'Count Distribution of Sub-Categories')\n","2d376da5":"sumsavings = (df.groupby('subType')['Savings'].sum())","6ccc5108":"y = sumsavings\nx = 'subType'\ndframe = df\nfig = px.bar(x = [i for i in dframe[x].unique()],y = [i for i in sumsavings],color=[i for i in dframe[x].unique()])\nfig.update_layout(xaxis_title = x,yaxis_title = 'Total Savings on each Sub Categorized Products (Rs\/-)',title = f'Distribution based on Sub Categories & Total Savings',height = 700,width = 1200,template = 'plotly_white')\nfig.show()","dce204a1":"typesavings = df.groupby('type')['Savings'].sum()","a533fd39":"y = typesavings\nx = 'type'\ndframe = df\nfig = px.bar(x = [i for i in dframe[x].unique()],y = [i for i in typesavings],color=[i for i in dframe[x].unique()])\nfig.update_layout(xaxis_title = x,yaxis_title = 'Total Savings on each Category (Rs\/-)',title = f'Distribution based on Categories & Total Savings',height = 500,width = 800,template = 'plotly_white')\nfig.show()","52c61348":"totprice = df.groupby('type')['price'].sum()\ntotdprice = df.groupby('type')['discountedPrice'].sum()\nsavingss = df.groupby('type')['Savings'].sum()","88c2ad64":"df.plot(x = [i for i in df['type'].unique()],y = [totprice,totdprice,savingss],template = 'plotly_dark',title = '(Blue - Total Price || Red - Discounted Price || Green - Total Savings)')\n","76ff73ff":"totprice1 = df.groupby('subType')['price'].sum()\ntotdprice1 = df.groupby('subType')['discountedPrice'].sum()\nsavingss1 = df.groupby('subType')['Savings'].sum()","bd277138":"df.plot(x = [i for i in df['subType'].unique()],y = [totprice1,totdprice1,savingss1],template = 'plotly_dark',title = '(Blue - Total Price || Red - Discounted Price || Green - Total Savings)',height = 700,width = 1100)\n","a7b30ef1":"## Total Savings & Type","eb7d815e":"## EDA","bab4ad62":"### If this notebook helped you in getting meaningful insights, Support by Upvoting. Thank You!","563287d7":"## Total Savings & Sub Type","c68c606a":"## Relation b\/w Total Price and Discounted Price & Savings","7150d702":"\n## Sub-Categories"}}