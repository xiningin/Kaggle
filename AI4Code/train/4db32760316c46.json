{"cell_type":{"b13e1e32":"code","76e4a899":"code","7d514db7":"code","46a11ac6":"code","433e5658":"code","7830fe51":"code","ba5d0676":"code","ab1fd22a":"code","fcba4091":"code","1ac41537":"code","6ab47864":"code","6ae8d50f":"code","5b6376fe":"code","b8425dc6":"code","6b366c3b":"code","8943f51a":"code","f71ffb0c":"code","62cb5579":"code","25b5d42e":"code","a22fdfdf":"code","2b828618":"code","19a28c77":"code","fd03c04e":"code","8998d3ca":"code","6d580178":"code","b0ae0357":"code","9157ad30":"code","5331b07c":"code","079e863b":"code","638210cf":"markdown","7f3fca04":"markdown","125951d3":"markdown"},"source":{"b13e1e32":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","76e4a899":"lyrics_data = pd.read_csv('\/kaggle\/input\/scrapped-lyrics-from-6-genres\/lyrics-data.csv')\nlyrics_data.rename(columns={\"ALink\": \"Link\"}, inplace=True)","7d514db7":"artist_data = pd.read_csv('\/kaggle\/input\/scrapped-lyrics-from-6-genres\/artists-data.csv')\nmerged_dfs = lyrics_data.merge(artist_data, how='inner', on='Link')\nmerged_dfs.head()","46a11ac6":"eng_artists = merged_dfs.loc[merged_dfs['Idiom'] == 'ENGLISH', ['Artist', 'SName', 'Lyric', 'Genre']].drop_duplicates(subset=['SName'])\neng_artists.reset_index(inplace=True, drop=True)\neng_artists.head()","433e5658":"drake = eng_artists.loc[eng_artists['Artist'] == 'Drake'].reset_index(drop=True)\ndrake.head()","7830fe51":"drake_line = drake.loc[0, 'Lyric'][:198]\ndrake_line","ba5d0676":"drake_lyrics = drake['Lyric']\ntype(drake_lyrics)","ab1fd22a":"from fastai.text.all import *","fcba4091":"spacy = WordTokenizer()\ntkn = Tokenizer(spacy)\ndrake_tokens = drake_lyrics.map(tkn)\n\nprint(drake_tokens[0][:10])","1ac41537":"num = Numericalize()\nnum.setup(drake_tokens)\nnum.vocab[:50]","6ab47864":"nums = num(tkn(drake_line))[:20]\nnums","6ae8d50f":"\" \".join(num.vocab[o] for o in nums)","5b6376fe":"drake_numericalized = drake_tokens.map(num)\ndrake_dl = LMDataLoader(drake_numericalized)\n\nx, y = first(drake_dl)\nx.shape, y.shape, type(drake_dl)","b8425dc6":"\" \".join(num.vocab[i] for i in x[0])","6b366c3b":"\" \".join(num.vocab[i] for i in y[0])","8943f51a":"drake_block = DataBlock(\n    blocks=TextBlock.from_df('drake', seq_len=72, is_lm=True),\n    get_items=ColReader('Lyric')\n)\ndrake_block","f71ffb0c":"path = Path()\npath","62cb5579":"dls_lm = drake_block.dataloaders(drake, bs=128, seq_len=80)\ndls_lm.show_batch(max_n=2)","25b5d42e":"learn = language_model_learner(dls_lm, AWD_LSTM, drop_mult=0.3, metrics=accuracy)\nlearn.loss_func","a22fdfdf":"learn.lr_find()","2b828618":"# fit the model frozenfor one epoch using found lr\nlearn.fit_one_cycle(1, 0.05)","19a28c77":"# consider saving the model here","fd03c04e":"# fit the new layer for a few more epochs on same lr\nlearn.fit_one_cycle(4, 0.005)","8998d3ca":"# unfreeze the model and \nlearn.unfreeze()\nlearn.lr_find()","6d580178":"1e-3","b0ae0357":"# train for 20 more epochs on the new lr\nlearn.fit_one_cycle(20, lr_max=slice(1e-5, 1e-3))","9157ad30":"# save the model now\nlearn.save('drake_model')","5331b07c":"start_text = \"I walked in the crib\"\nwords = 100\nsentences = 3\npreds = [learn.predict(start_text, words, temperature=0.75)\n         for sentence in range(sentences)]","079e863b":"print(\"\\n\".join(preds))","638210cf":"## DLS are ready\n- Create a drake model","7f3fca04":"##### ","125951d3":"## Generate Predictions\n- Using the trained model, generate song lyrics drake-esque"}}