{"cell_type":{"58584ea1":"code","8d82649d":"code","0371ec49":"code","e0564928":"code","0dab25fa":"code","e0ce7999":"code","7a269ab0":"code","94dc83aa":"code","d74538d6":"code","5cd60201":"code","c56b4862":"code","e7ae577b":"code","3b56dfba":"code","2c92f4a3":"code","1de2b470":"code","7a1f2115":"code","43c1620d":"code","39439cc7":"code","d34de783":"code","d407b403":"code","edad293b":"markdown","5bbe547a":"markdown","15b9c0d3":"markdown","5e9f532f":"markdown","14e275bb":"markdown","9abb8cb2":"markdown","4cd1797d":"markdown","326a2b4a":"markdown","f48dcc03":"markdown","2b2253a9":"markdown","4046fd48":"markdown","a1838aa7":"markdown","b9b4a2fe":"markdown","3a8f70f4":"markdown","16579ba6":"markdown","b0deefe4":"markdown","95302e65":"markdown","dcd460b1":"markdown","17bf62f2":"markdown","c4fc592b":"markdown"},"source":{"58584ea1":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nplt.style.use('fivethirtyeight')\nsns.set_style('darkgrid')\nplt.rcParams['font.sans-serif'] = \"Arial\"\nplt.rcParams['font.family'] = \"sans-serif\"\nplt.rcParams.update({'font.size': 10})","8d82649d":"df_agegroup = pd.read_csv('\/kaggle\/input\/covid19-in-india\/AgeGroupDetails.csv')\ndf_dailycases = pd.read_csv('\/kaggle\/input\/covid19-in-india\/covid_19_india.csv')\ndf_hospbeds = pd.read_csv('\/kaggle\/input\/covid19-in-india\/HospitalBedsIndia.csv')\ndf_dailytests = pd.read_csv('\/kaggle\/input\/covid19-in-india\/ICMRTestingDetails.csv')\ndf_indiv = pd.read_csv('\/kaggle\/input\/covid19-in-india\/IndividualDetails.csv')\ndf_popstate = pd.read_csv('\/kaggle\/input\/covid19-in-india\/population_india_census2011.csv')","0371ec49":"df_agegroup","e0564928":"colors = [\"indianred\"]\nfig = px.bar(df_agegroup[df_agegroup['AgeGroup']!='Missing'],x='AgeGroup',y='TotalCases',color_discrete_sequence=colors,template='plotly_dark',\n             width=800)\nfig.update_layout(\n    title='Total Cases per Age Group',\n    font=dict(\n        family=\"Arial\",\n        size=12,\n        color=\"#7f7f7f\")\n    )","0dab25fa":"df_dailycases.sample(10)","e0ce7999":"# Convert date format from dd\/mm\/yy to mm\/dd\/yy\ndf_dailycases['Date'] = df_dailycases['Date'].apply(lambda x: '\/'.join([x.split('\/')[1],x.split('\/')[0],x.split('\/')[2]]))\n\n# Clean state names\ndf_dailycases['State\/UnionTerritory'] = df_dailycases['State\/UnionTerritory'].apply(lambda x: 'Chhattisgarh' if x=='Chattisgarh' else x)\ndf_dailycases['State\/UnionTerritory'] = df_dailycases['State\/UnionTerritory'].apply(lambda x: 'Puducherry' if x=='Pondicherry' else x)","7a269ab0":"# Group by date\ndf_dailycases_date = df_dailycases.groupby('Date').sum()\ndf_dailycases_date.drop('Sno',axis=1,inplace=True)\ndf_dailycases_date.reset_index(inplace=True)\ndf_dailycases_date.sample(10)","94dc83aa":"# Start from March 5th 2020\nstart_range = int(df_dailycases_date[df_dailycases_date['Date']=='03\/05\/20'].index.values)\ndaily_growth = []\nfor i in range(start_range,len(df_dailycases_date)):\n    diff = (df_dailycases_date['Confirmed'].loc[i]\/df_dailycases_date['Confirmed'].loc[i-1])\n    daily_growth.append(diff)\navg_daily_growth = round(sum(daily_growth)\/len(daily_growth),2)\nprint('Average Daily Growth:', avg_daily_growth)","d74538d6":"# Add 15 days to the current dataframe\npredict_dates = ['04\/03\/20','04\/04\/20','04\/05\/20','04\/06\/20','04\/07\/20','04\/08\/20','04\/09\/20','04\/10\/20','04\/11\/20','04\/12\/20','04\/13\/20','04\/14\/20','04\/15\/20','04\/16\/20','04\/17\/20']\ndf_dailycases_date['Predicted_Cases'] = df_dailycases_date['Confirmed']\ncols = df_dailycases_date.columns\ndf_dailycases_date = pd.concat([df_dailycases_date,pd.DataFrame(predict_dates,columns=['Date'])],axis=0)\ndf_dailycases_date = df_dailycases_date.reset_index(drop=True)\ndf_dailycases_date = df_dailycases_date[cols]\n\n# Predicted cases based on average daily growth\nfor i in range(start_range,len(df_dailycases_date)):\n    df_dailycases_date['Predicted_Cases'].loc[i] = df_dailycases_date['Predicted_Cases'].loc[i-1]*avg_daily_growth\ndf_dailycases_date['Predicted_Cases'] = df_dailycases_date['Predicted_Cases'].apply(lambda x: round(x))\ndf_dailycases_date.sample(10)","5cd60201":"fig = px.line(df_dailycases_date.loc[start_range:],x='Date',y='Confirmed',template='plotly_dark',color_discrete_sequence=['yellow'],labels={'Date':'Date(mm\/dd\/yy)','Confirmed':'Number of Cases'},\n             width=800,height=600)\nfig.add_trace(px.scatter(df_dailycases_date.loc[start_range:],x='Date',y='Predicted_Cases',template='plotly_dark',color_discrete_sequence=['lightgreen'],labels={'Date':'Date(mm\/dd\/yy)'}).data[0])\nfig.update_layout(\n    title='Confirmed Cases in India (Actual vs Predicted)',\n    font=dict(\n        family=\"Arial\",\n        size=12,\n        color=\"#7f7f7f\"),\n    showlegend=True\n    )\nfig.update_traces(marker=dict(size=8,\n                              line=dict(width=2,\n                                        color='DarkSlateGrey'))\n                 )\nfig.show()","c56b4862":"# Group by State\/Union Territory\ndf_dailycases_state = df_dailycases.groupby('State\/UnionTerritory').max()\ndf_dailycases_state.drop('Sno',axis=1,inplace=True)\ndf_dailycases_state.reset_index(inplace=True)\ndf_dailycases_state.sample(10)","e7ae577b":"fig = px.scatter(df_dailycases_state[df_dailycases_state['State\/UnionTerritory']!='Unassigned'],y='State\/UnionTerritory',x='Confirmed',color='State\/UnionTerritory',\n                 color_discrete_sequence=px.colors.qualitative.Pastel,template='plotly_dark',labels={'Date':'Date(mm\/dd\/yy)'},\n                 width=800,height=800)\nfig.update_layout(\n    title='Total Confirmed Cases Per State\/Union Territory',\n    font=dict(\n        family=\"Arial\",\n        size=12,\n        color=\"#7f7f7f\"),\n    showlegend=False\n    )\nfig.update_traces(marker=dict(size=12,\n                              line=dict(width=2,\n                                        color='DarkSlateGrey')),\n                 marker_symbol = 'diamond')","3b56dfba":"fig = px.line(df_dailycases,x='Date',y='Confirmed',template='plotly_dark',color_discrete_sequence=px.colors.qualitative.Plotly_r,labels={'Date':'Date(mm\/dd\/yy)'},color='State\/UnionTerritory',\n             width=800,height=600)\nfig.update_layout(\n    title='Total Confirmed Cases Per State\/Union Territory',\n    font=dict(\n        family=\"Arial\",\n        size=12,\n        color=\"#7f7f7f\"),\n        showlegend=True\n)\nfig.update_traces(mode='lines+markers',\n                  marker=dict(size=8,\n                              line=dict(width=2,\n                                        color='DarkSlateGrey'))\n)","2c92f4a3":"df_indiv.sample(10)","1de2b470":"df_indiv_district = df_indiv[(df_indiv['detected_district'].notnull()) & (df_indiv['detected_state'].notnull())]\ndf_indiv_district.sample(5)","7a1f2115":"colors_list = ['coral','teal']\nstates = df_indiv_district['detected_state'].unique()\nif len(states)%2==0:\n    n_rows = int(len(states)\/2)\nelse:\n    n_rows = int((len(states)+1)\/2)    \nplt.figure(figsize=(14,60))\nfor idx,state in enumerate(states):    \n    plt.subplot(n_rows,2,idx+1)\n    y_order = df_indiv_district[df_indiv_district['detected_state']==state]['detected_district'].value_counts().index\n    g = sns.countplot(data=df_indiv_district[df_indiv_district['detected_state']==state],y='detected_district',orient='v',color=colors_list[idx%2],order=y_order)\n    plt.xlabel('Number of Cases')\n    plt.ylabel('')\n    plt.title(state)\n    plt.ylim(14,-1)\nplt.tight_layout()\nplt.show()","43c1620d":"df_indiv_gender = df_indiv[df_indiv['gender'].notnull()]\ndf_indiv_gender['gender'] = df_indiv_gender['gender'].apply(lambda gender: 'Female' if gender=='F' else 'Male')\ndf_indiv_gender.sample(10)","39439cc7":"fig = px.pie(df_indiv_gender['gender'].value_counts(),values=df_indiv_gender['gender'].value_counts().values,names=df_indiv_gender['gender'].value_counts().index,\n       width=800,height=500,color_discrete_sequence=px.colors.qualitative.Pastel1,labels={'value':'Total Cases'})\nfig.update_layout(\n    title='Total Confirmed Cases Per Gender',\n    font=dict(\n        family=\"Arial\",\n        size=12,\n        color=\"#7f7f7f\")\n)","d34de783":"# Parse df_popstate and add state population to df_dailycases_state and create a new column that gives cases per capita\n# Function to map population for each state\ndef map_population_by_state(state):\n    pop = df_popstate[df_popstate['State \/ Union Territory']==state]['Population'].values\n    if len(pop)>0:\n        return float(pop\/100000)\n    else:\n        return ''\n\n# Add state_pop to df_dailycases_state\ndf_dailycases_state['State_Pop_inLakhs'] = 0\ndf_dailycases_state['State_Pop_inLakhs'] = df_dailycases_state['State\/UnionTerritory'].apply(map_population_by_state)\n\n# Find cases_per_capita\ndf_dailycases_state['Cases_Per_Capita'] = 0\ndf_dailycases_state['Cases_Per_Capita'] = df_dailycases_state[df_dailycases_state['State\/UnionTerritory']!='Unassigned'][['Confirmed','State_Pop_inLakhs']].apply(lambda row: row.Confirmed\/row.State_Pop_inLakhs,axis=1)\n\n# View cases per capita\ndf_dailycases_state.drop(['Date','Time'],axis=1)","d407b403":"px.bar(df_dailycases_state[df_dailycases_state['State\/UnionTerritory']!='Unassigned'].sort_values(by=['Cases_Per_Capita'],ascending=False),\n       x='State\/UnionTerritory',\n       y='Cases_Per_Capita',\n       template='plotly_dark',\n       width=800,\n       labels={'Cases_Per_Capita':'Cases Per Lakh of People'})","edad293b":"* Remove observations with missing values in gender","5bbe547a":"### View the individual details of patients","15b9c0d3":"**This kernel is not complete. I will continue the analysis in the coming days. Please upvote if you like. Thanks**","5e9f532f":"### View the cases by age group","14e275bb":"* Predict the next 15 days","9abb8cb2":"### View the daily case count","4cd1797d":"### Group the cases by date and visualize the running total of confirmed cases","326a2b4a":"# Data Analysis and Data Visualization","f48dcc03":"### Visualize cases by districts of each state\/union territory","2b2253a9":"### Group the cases by states\/union territories and visualize the confirmed cases per state","4046fd48":"# Introduction\n\nThis kernel explores COVID-19 cases in India. It is mainly about visualizing the data and gaining insights into the current COVID-19 situation in India.","a1838aa7":"### Import Libraries","b9b4a2fe":"### Visualize the cases by age group","3a8f70f4":"### Visualize cases by gender","16579ba6":"* What is the average daily growth?","b0deefe4":"* Age group 20-29 is the highest affected group\n* Ages below 20 and above 70 are among the lowest affected\n* Is there a reason for the above trend? \n* What are the main causes of spread?","95302e65":"### Import Datasets","dcd460b1":"* Remove the observations with missing values in either detected district or detected state","17bf62f2":"### View cases per capita of state popupation","c4fc592b":"### Visualize the actual confirmed cases vs predicted cases (predict for next 15 days)"}}