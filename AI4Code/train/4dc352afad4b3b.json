{"cell_type":{"b80643bf":"code","3ae824cc":"code","1f812c51":"code","b26e4173":"code","a2caf19d":"code","dccb8406":"code","69e6850f":"code","60d57ffb":"code","7fd6f2c7":"code","c0cff001":"code","2017779d":"code","ec482a08":"code","0fd2eaf6":"code","7ee5c50f":"code","6f9fecc1":"code","d8815509":"code","b1ff5d1a":"code","2b8598f8":"code","1ce1655a":"code","36a2d17d":"code","d8e43a1a":"code","c42b4cf9":"code","543d26ce":"code","9f2aed60":"code","674fa6fa":"code","8b978c8f":"code","cc25ac48":"code","625d2477":"code","eeaf54ab":"code","06fa3d66":"code","f16c7a4d":"code","04f6ae73":"markdown","51dd3f49":"markdown","b054ffda":"markdown","c099e199":"markdown","9cf50125":"markdown","5cfe5278":"markdown","5298d5d0":"markdown","a15b525d":"markdown","86764dda":"markdown","0c1708d9":"markdown","8bbb63ef":"markdown","ebb5ec7e":"markdown"},"source":{"b80643bf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3ae824cc":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set_style ('whitegrid')","1f812c51":"df= pd.read_csv('\/kaggle\/input\/montcoalert\/911.csv')\ndf.dataframe = '911.csv'\ndf.head()","b26e4173":"# lat : String variable, Latitude\n# lng: String variable, Longitude\n# desc: String variable, Description of the Emergency Call\n# zip: String variable, Zipcode\n# title: String variable, Title\n# timeStamp: String variable, YYYY-MM-DD HH:MM:SS\n# twp: String variable, Township\n# addr: String variable, Address\n# e: String variable, Dummy variable","a2caf19d":"df.info()","dccb8406":"df.isnull","69e6850f":"df['zip'].value_counts().head(10)","60d57ffb":"df['twp'].value_counts().head(10)","7fd6f2c7":"df['title'].nunique()","c0cff001":"# New column \"Reason\" contains string values (EMS|Fire|Traffic)\ndf['Reason'] =df['title'].apply(lambda title: title.split (':')[0])\ndf.head(3)","2017779d":"df.Reason.value_counts()","ec482a08":"sns.countplot(x ='Reason', data = df, palette = 'viridis')","0fd2eaf6":"type(df['timeStamp'].iloc[0])","7ee5c50f":"df['timeStamp'] = pd.to_datetime(df['timeStamp'])","6f9fecc1":"time= df['timeStamp'].iloc[0]\ntime.hour","d8815509":"df['Hour'] = df['timeStamp'].apply(lambda time: time.hour)\ndf['Month'] = df['timeStamp'].apply(lambda time: time.month)\ndf['Day of Week'] = df['timeStamp'].apply(lambda time: time.dayofweek)\ndf['Year'] = df['timeStamp'].apply(lambda time: time.year)","b1ff5d1a":"dmap={0:'Mon', 1:'Tue', 2:'Wed',3:'Thu', 4:'Fri', 5:'Sat', 6:'Sun'}","2b8598f8":"df['Day of Week'] = df['Day of Week'].map(dmap)","1ce1655a":"sns.countplot(x ='Day of Week', data=df, hue ='Reason', palette = 'deep')\nplt.legend(bbox_to_anchor = (1.05, 1), loc =2, borderaxespad =0.)","36a2d17d":"sns.countplot(x ='Month', data=df, hue ='Reason', palette = 'deep')\nplt.legend(bbox_to_anchor = (1.05, 1), loc =2, borderaxespad =0.)","d8e43a1a":"sns.countplot(x ='Year', data=df, hue ='Reason', palette = 'deep')\nplt.legend(bbox_to_anchor = (1.05, 1), loc =2, borderaxespad =0.)","c42b4cf9":"byyear= df.groupby('Year').count()\nbyyear.head(12)","543d26ce":"bymonth=df.groupby('Month').count()\nbymonth.head(12)","9f2aed60":"bymonth['twp'].plot(figsize =(10,8))","674fa6fa":"sns.lmplot(x='Month',y='twp',data=bymonth.reset_index())","8b978c8f":"df['Date']= df.timeStamp.dt.date\ndf.Date","cc25ac48":"byDate= df.groupby('Date').count()\nbyDate.head()","625d2477":"byDate.twp.plot(figsize=(15,8))","eeaf54ab":"plt.figure(figsize=(15, 8))\n\ndf[df['Reason']=='EMS'].groupby('Date').count()['twp'].plot()\nplt.title('EMS')\nplt.tight_layout()","06fa3d66":"plt.figure(figsize=(15, 8))\n\ndf[df['Reason']=='Fire'].groupby('Date').count()['twp'].plot()\nplt.title('Fire')\nplt.tight_layout()","f16c7a4d":"plt.figure(figsize=(15, 8))\n\ndf[df['Reason']=='Traffic'].groupby('Date').count()['twp'].plot()\nplt.title('Traffic')\nplt.tight_layout()","04f6ae73":"# Year","51dd3f49":"# What are the top ten zipcodes for 911 calls?","b054ffda":"# Month","c099e199":"# Countplot of 911 calls by Reason","9cf50125":"# Unique 'title' in the dataset","5cfe5278":"# What are the top 10 townships (twp) for 911 calls? ","5298d5d0":"# Day of Week","a15b525d":"# Add a column that shows simple moving average(SMA)","86764dda":"# count of calls per month","0c1708d9":"# Create a new column called \"Date\"","8bbb63ef":"df['Date']=df['timeStamp'].apply(lambda t: t.date())","ebb5ec7e":"## Creating new features"}}