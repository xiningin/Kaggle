{"cell_type":{"2acf0f85":"code","d7bca56b":"code","60212c76":"code","1bec7089":"code","13b457f8":"code","648966b4":"code","be43955d":"code","84c2885d":"code","5e8099eb":"code","64af9179":"code","230160dc":"code","82b36dcf":"code","cb497512":"code","1e10be0b":"code","4083444f":"code","81c3b070":"code","fb2d68ea":"code","01dc43a3":"code","b4288087":"code","a943be37":"code","22e5fff6":"code","d99dc38f":"code","e7a308c1":"code","771d9d73":"code","e6928613":"code","8d2b5f29":"code","e84ec381":"code","445973db":"code","4e9e117b":"markdown","97e3a36d":"markdown","3120505f":"markdown","8ffed3a7":"markdown","2ccc7d2c":"markdown","af2611d3":"markdown","d2db590d":"markdown","b7d7c9a1":"markdown","40c43dd2":"markdown","00c7fb79":"markdown","6ba3e2c4":"markdown","a9be4c0d":"markdown","26639204":"markdown","723e95fb":"markdown","1ddac866":"markdown","84f682a7":"markdown","bdac18a4":"markdown","63113992":"markdown","3e65c59c":"markdown","bb0a4c7c":"markdown","1ad7b42e":"markdown"},"source":{"2acf0f85":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d7bca56b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nimport math\nfrom scipy.stats.mstats import winsorize\nfrom scipy import stats","60212c76":"df=pd.read_csv('\/kaggle\/input\/life-expectancy-who\/Life Expectancy Data.csv')\ndf.head()","1bec7089":"df.shape","13b457f8":"df.columns","648966b4":"df.rename(columns=lambda x: x.strip(), inplace=True)","be43955d":"df.info()","84c2885d":"df.describe()","5e8099eb":"def null_Zero_count(data):\n    for column in data.columns.to_list():\n        print('*****',column,'*****')\n        print(\" Number of Null values : \",data[column].isnull().sum())\n        print(\" Number of zeros : \",(data[column]==0).sum(axis=0))\nnull_Zero_count(df)","64af9179":"df.mean()","230160dc":"def null_zero_replace_mean(data):\n    for column in list(data.select_dtypes(include='float64' or 'int64').columns):\n        print('*****',column,'*****')\n        print(\"*Original Count*\")\n        print(\"Zero Values: \", (data[column]==0).sum())\n        print(\"Null Values: \", data[column].isnull().sum())\n        data[column] = np.where(data[column]==0, data[column].mean(), data[column])\n        data[column] = data[column].fillna(data[column].mean())\n        print(\"*Cleaned Count*\")\n        print(\"Zero Values: \", (data[column]==0).sum())\n        print(\"Null Values: \", data[column].isnull().sum())\n    return data\nnull_zero_replace_mean(df)","82b36dcf":"df.isnull().sum()","cb497512":"colNames = df.columns.tolist()\nfor column in colNames:\n    if df[column].dtype == \"object\": \n        continue\n    plt.figure(figsize=(18,6))\n    plt.subplot(1,2,1)\n    plt.boxplot(df[column])\n    plt.title(column)\n    plt.ylabel(column)\n    plt.xlabel('Bins')\n    \n    plt.subplot(1,2,2)\n    plt.hist(df[column])\n    plt.title(column)\n    plt.ylabel(column)\n    plt.xlabel('Bins')","1e10be0b":"for col in list(df.columns):\n    if df[col].dtype == \"object\": \n            continue\n    \n    plt.figure(figsize=(18,6))\n\n    plt.subplot(1,2,1)\n    plt.boxplot(df[col])\n    plt.title(col)\n\n    plt.subplot(1,2,2)\n    winsorized_data = winsorize(df[col],(0.01,0.01),inplace=True)\n    plt.boxplot(winsorized_data)\n    plt.title(\"winsorized \"+col )\n\n    plt.show()","4083444f":"print(\"****| Range |****\")\nprint(df.select_dtypes(include='float64' or 'int64').max() -\n      df.select_dtypes(include='float64' or 'int64').min())\n\n#variance\nprint(\"****| Variance |****\")\nprint(df.var())\n\n#standard deviation\nprint(\"****| Standard Deviation |****\")\nprint(df.std())","81c3b070":"plt.figure(figsize=(16, 6))\nsns.heatmap(df.corr(), annot= True)","fb2d68ea":"sns.pairplot(df)","01dc43a3":"life_expectancy_per_country = df.groupby('Country')['Life expectancy'].mean().sort_values(ascending=True)\nlife_expectancy_per_country.plot(kind='bar', figsize=(50,10), fontsize=12)\nplt.title(\"Life expectancy mean per Country from 2000 to 2015\",fontsize=30)\nplt.xlabel(\"Country\",fontsize=15)\nplt.ylabel(\"Life expectancy\",fontsize=15)\nplt.show()","b4288087":"plt.figure(figsize=(10,10))\nplt.bar(df.groupby('Status')['Status'].count().index,df.groupby('Status')['Life expectancy'].mean())\nplt.xlabel(\"Status\",fontsize=15)\nplt.ylabel(\"Life expectancy\",fontsize=15)\nplt.title(\"Life expectancy for developed and developing country\",fontsize=20)\nplt.show()","a943be37":"india = df.loc[df['Country'] == \"India\"]\nindia","22e5fff6":"sns.scatterplot(x=india[\"GDP\"],y=india[\"Life expectancy\"])\nsns.lineplot(x=india[\"GDP\"],y=india[\"Life expectancy\"])","d99dc38f":"sns.scatterplot(x=india[\"Year\"],y=india[\"Life expectancy\"])\nsns.lineplot(x=india[\"Year\"],y=india[\"Life expectancy\"])","e7a308c1":"X=india['Year'].values\nY=india['Life expectancy'].values","771d9d73":"mean_x =np.mean(X)\nmean_y =np.mean(Y)\nl=len(X)\nn=0\nd=0\nfor i in range(l):\n    n+=(X[i]-mean_x)*(Y[i]-mean_y)\n    d+=(X[i]-mean_x)**2\nb1=n\/d\nb0=mean_y-(b1*mean_x)\nprint(b1,b0)","e6928613":"max_x=np.max(X)+10\nmin_x=np.min(X)\nx=np.linspace(min_x,max_x)\ny=b0+b1*x\n\nsns.lineplot(x,y)\nsns.scatterplot(x=india[\"Year\"],y=india[\"Life expectancy\"])","8d2b5f29":"ss_t=0\nss_r=0\nfor i in range(l):\n    y_predict=b0+b1*X[i]\n    ss_t +=(Y[i]-mean_y)**2\n    ss_r +=(Y[i]-y_predict)**2\nr2=1-(ss_r\/ss_t)\nprint(r2)","e84ec381":"print(b0+b1*2021)","445973db":"from sklearn import linear_model\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error, r2_score\nX=india[['Year','GDP']]\nY=india['Life expectancy']\nX_train, X_test, y_train, y_test = train_test_split(X,Y)\nregr = linear_model.LinearRegression()\nregr.fit(X_train, y_train)\ny_pred = regr.predict(X_test)\nprint('Mean squared error: ', mean_squared_error(y_test, y_pred))\nprint('Coefficient of determination:',r2_score(y_test, y_pred))\nprint(\"Life Expectancy - \",regr.predict([[2021, 2870]]))","4e9e117b":"# Modeling  Year vs Life expectancy","97e3a36d":"# SUMMARY STATISTICS OF DATA SET","3120505f":"# Modeling GDP vs Life expectancy\u00b6\nMULTIPLE LINEAR REGRESSION","8ffed3a7":"# Columns Present in the data set","2ccc7d2c":"# COUNT OF NULL AND ZERO VALUES","af2611d3":"# Average life expectancy from 2000 to 2015 for different countries","d2db590d":"# We can see that some columns have space before and after the text, so we apply .strip to remove those spaces.","b7d7c9a1":"# Structure of data set","40c43dd2":"# Predicting life expectancy of current year","00c7fb79":"# IMPORTING REQUIRED LIBRARIES","6ba3e2c4":"# Replacing null and zero values by mean","a9be4c0d":"# Removing outlier using winsorization","26639204":"# Calculating r square","723e95fb":"First a boxplot and histogram will be created for each continuous variable in order to visually see if outliers exist.\n","1ddac866":"# Dealing with outliers","84f682a7":"# The range, variance and standard deviation","bdac18a4":"# Difference beetween life expecatancy of  developed and developing countries","63113992":"# life expectancy is 70.3 years in india.","3e65c59c":"# Life Expectancy in India","bb0a4c7c":"# CORRELATION ","1ad7b42e":"# SHAPE OF DATA SET"}}