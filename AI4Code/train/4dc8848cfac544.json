{"cell_type":{"82cf9fcf":"code","55a8b24c":"code","b8b05c9e":"code","95caec7b":"code","102c0cae":"code","89a7a552":"code","70252633":"code","6d2483eb":"code","fa455bdb":"code","93469029":"code","a39a9114":"code","c16a1404":"code","7ec3a8a2":"code","6481f659":"code","be3f2e17":"code","44ba0c76":"code","55a98e30":"code","334f8726":"code","58d237bc":"code","a5946f82":"code","09d88b53":"code","89b754d4":"markdown","48480905":"markdown","4397b312":"markdown","79d41542":"markdown","732b40a4":"markdown","d9b33521":"markdown","e0bc3752":"markdown","e25fdd59":"markdown","2de781cb":"markdown"},"source":{"82cf9fcf":"import numpy as np\nimport matplotlib.pyplot as plt \nimport pandas as pd  \nimport seaborn as sns \nfrom sklearn.datasets import load_boston\nimport warnings\nwarnings.filterwarnings('ignore')\nplt.style.use('ggplot')","55a8b24c":"train = pd.read_csv('..\/input\/tabular-playground-series-jul-2021\/train.csv')\ntest = pd.read_csv('..\/input\/tabular-playground-series-jul-2021\/test.csv')\nprint('train shape:',train.shape)\nprint('test shape:',test.shape)","b8b05c9e":"# found that one of the test data is in the train set and removed it\n# Dropping the last row which is 2011-01-01 00:00:00\ntrain=train.loc[~(train['date_time']=='2011-01-01 00:00:00')].reset_index(drop=True)","95caec7b":"print('train shape:',train.shape)","102c0cae":"all_data = pd.concat([train, test])\n# convert to datatime format\nall_data['date_time'] = pd.to_datetime(all_data['date_time'])\nall_data.head()","89a7a552":"fig,ax=plt.subplots(4,2,figsize=(20,15))\nfor i,col in enumerate(train.columns[1:9]):\n    ax[i%4][i\/\/4].hist(train[col],bins=40,color='darkblue',label=f'{col}')\n    ax[i%4][i\/\/4].set_title(f'Distribution of {col}',fontsize=15)\n    ax[i%4][i\/\/4].set_xlabel(f'{col}')\n    ax[i%4][i\/\/4].set_ylabel('Dist')\n    plt.subplots_adjust(hspace=0.45)","70252633":"fig,ax=plt.subplots(3,1,figsize=(8,10))\nfor i,col in enumerate(train.columns[9:12]):\n    ax[i%3].hist(train[col],bins=40,color='darkblue',label=f'{col}')\n    ax[i%3].set_title(f'Distribution of {col}',fontsize=15)\n    ax[i%3].set_xlabel(f'{col}')\n    ax[i%3].set_ylabel('Dist')\n    plt.subplots_adjust(hspace=0.45)","6d2483eb":"# \u5b57\u4e32\u8f49\u63db\u65e5\u671f\u683c\u5f0f\ntrain['date_time']=pd.to_datetime(train['date_time'],format='%Y-%m-%d %H:%M:%S')\ntest['date_time']=pd.to_datetime(test['date_time'],format='%Y-%m-%d %H:%M:%S')\n# Following code is inspired from - https:\/\/www.kaggle.com\/nroman\/eda-for-ashrae\nfig,ax=plt.subplots(1,1,figsize=(12,6))\ntrain[['date_time','deg_C']].set_index('date_time').resample('D').mean()['deg_C'].plot(ax=ax,label='by hour(train)',alpha=1,color='blue').set_ylabel('deg C',fontsize=10)\nax.set_title('Trend of Mean deg_C by Day',fontsize=12)\nax.set_xlabel('')","fa455bdb":"fig,ax=plt.subplots(1,1,figsize=(12,6))\ntest[['date_time','deg_C']].set_index('date_time').resample('D').mean()['deg_C'].plot(ax=ax,label='by hour(train)',alpha=1,color='blue').set_ylabel('deg C',fontsize=10)\nax.set_title('Trend of Mean deg_C by Day',fontsize=12)\nax.set_xlabel('')","93469029":"all_data.isnull().sum()","a39a9114":"# all_data['hr'] = all_data.date_time.dt.hour*60+all_data.date_time.dt.minute\n# all_data['day'] =all_data.date_time.dt.weekday\/\/5\n# all_data['satday'] = all_data.date_time.dt.weekday==5\n# all_data['hr1'] = all_data.date_time.dt.hour*60+all_data.date_time.dt.minute","c16a1404":"# all_data['year'] = all_data['date_time'].dt.year\n# all_data['month'] = all_data['date_time'].dt.month\n# all_data['week'] = all_data['date_time'].dt.week\n# all_data['day'] = all_data['date_time'].dt.day\n# all_data['dayofweek'] = all_data['date_time'].dt.dayofweek\n# all_data['hour'] = all_data['date_time'].dt.hour\n# # convert datetime to timestamp(s)\n# all_data['time'] = all_data['date_time'].astype(np.int64)\/\/10**9\n# all_data.drop(columns = 'date_time', inplace = True)\n# print('all_data shape:', all_data.shape)\n# all_data.head()","7ec3a8a2":"## New idea\nall_data[\"hour\"] = all_data[\"date_time\"].dt.hour\nall_data[\"working_hours\"] =  all_data[\"hour\"].isin(np.arange(8, 21, 1)).astype(\"int\")\nall_data[\"is_weekend\"] = (all_data[\"date_time\"].dt.dayofweek >= 5).astype(\"int\")\nall_data.drop(columns = 'hour', inplace = True)\n# convert datetime to timestamp(s)\nall_data['time'] = all_data['date_time'].astype(np.int64)\/\/10**9\nall_data.drop(columns = 'date_time', inplace = True)","6481f659":"X=all_data[:len(train)].drop(columns = ['target_carbon_monoxide', 'target_benzene', 'target_nitrogen_oxides'])\ny=all_data[:len(train)][['target_carbon_monoxide', 'target_benzene', 'target_nitrogen_oxides']]\ny_log=np.log1p(y)\nX_test=all_data[len(train):].drop(columns = ['target_carbon_monoxide', 'target_benzene', 'target_nitrogen_oxides'])\nprint('X_train shape:', X.shape)\nprint('y_train shape:', y.shape)\nprint('X_test shape:', X_test.shape)","be3f2e17":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler().fit(X)\nX_scaled = scaler.transform(X)\nX_test_scaled = scaler.transform(X_test)","44ba0c76":"fig,ax=plt.subplots(4,2,figsize=(20,15))\nfor i in range(8):\n    col=train.columns[1:9][i]\n    ax[i%4][i\/\/4].hist(X_test_scaled[:,i],bins=40,color='darkblue',label=f'{col}')\n    ax[i%4][i\/\/4].set_title(f'Distribution of {col}',fontsize=15)\n    ax[i%4][i\/\/4].set_xlabel(f'{col}')\n    ax[i%4][i\/\/4].set_ylabel('Dist')\n    plt.subplots_adjust(hspace=0.45)","55a98e30":"fig,ax=plt.subplots(3,1,figsize=(8,10))\nfor i in range(3):\n    col=train.columns[9:12][i]\n    ax[i%3].hist(y_log[:][col],bins=40,color='darkblue',label=f'{col}')\n    ax[i%3].set_title(f'Distribution of {col}',fontsize=15)\n    ax[i%3].set_xlabel(f'{col}')\n    ax[i%3].set_ylabel('Dist')\n    plt.subplots_adjust(hspace=0.45)","334f8726":"import xgboost as xgb\nfrom sklearn.multioutput import MultiOutputRegressor\n\n# \u5efa\u7acbxgbrModel\u6a21\u578b\nxgbrModel=xgb.XGBRegressor(n_estimators=100)\n# \u4f7f\u7528\u8a13\u7df4\u8cc7\u6599\u8a13\u7df4\u6a21\u578b\nmodel = MultiOutputRegressor(xgbrModel).fit(X_scaled,y_log)","58d237bc":"from sklearn import metrics\n# \u4f7f\u7528\u8a13\u7df4\u8cc7\u6599\u9810\u6e2c\ny_pred=model.predict(X_scaled)\nprint(\"\u8a13\u7df4\u96c6\")\nprint('R2 score: ', model.score(X_scaled,y_log))\nmse = metrics.mean_squared_error(y_log, y_pred)\nprint('MSE score: ', mse)","a5946f82":"sub = pd.read_csv('..\/input\/tabular-playground-series-jul-2021\/sample_submission.csv')\ny_pred=model.predict(X_test_scaled)\ny_pred=np.expm1(y_pred)\nsub['target_carbon_monoxide'] = y_pred[:,0]\nsub['target_benzene'] = y_pred[:,1]\nsub['target_nitrogen_oxides'] = y_pred[:,2]\nsub.head()","09d88b53":"sub.to_csv('submission.csv', index=False)","89b754d4":"For the test set, if we try to compare between March month of train, we could see the temperatures have started from approx 3 deg and increased above 15 deg.","48480905":"## predicting the values of air pollution (Regression)","4397b312":"## EDA\n- The distribution of deg_C shows peaks between 20 to 30 deg.\n- There is a dip in relative humidity at 40% and there are two peaks at 30% and 45% approx.\n- The absolute humidity value shows peaks at 0.25g\/m3(i have assumed it to be g\/m3.Data info did not explicitly mention any units).\n- The distribution of sensor_1,2,3 & 5 appears to be left skewed whereas sensor-4 is normal with outliers at 500.","79d41542":"## \u9810\u6e2c\u8f38\u51fa\n\u8f38\u51fa Y log1p()\u5c0d\u6578\u53bb\u504f - \u4f7f\u7528\u81ea\u7136\u5c0d\u6578\u53bb\u9664\u504f\u614b\uff0c\u5148\u52a01\u518d\u53d6\u5c0d\u6578\uff0c\u9084\u539f\u6642\u5148\u53d6\u6307\u6578\u5f8c\u518d\u6e1b1\u3002\u5c0d\u65bc\u53ef\u80fd\u51fa\u73fe\u7b49\u65bc\u96f6\u7684\u8cc7\u6599\u4f7f\u7528\u3002","732b40a4":"## \u8cc7\u6599\u524d\u8655\u7406\n\u9032\u4e00\u6b65\u8655\u7406\u4e4b\u524d\u5148\u78ba\u8a8d\u662f\u5426\u6709\u7f3a\u5931\u503c\uff1a","d9b33521":"## XGBoost(\u56de\u6b78\u5668)\nBoosting \u5247\u662f\u5e0c\u671b\u80fd\u5920\u7531\u5f8c\u9762\u751f\u6210\u7684\u6a39\uff0c\u4f86\u4fee\u6b63\u524d\u9762\u6a39\u5b78\u7684\u4e0d\u597d\u7684\u5730\u65b9\u3002\n\nParameters:\n- n_estimators: \u7e3d\u5171\u8fed\u4ee3\u7684\u6b21\u6578\uff0c\u5373\u6c7a\u7b56\u6a39\u7684\u500b\u6578\u3002\u9810\u8a2d\u503c\u70ba100\u3002\n- max_depth: \u6a39\u7684\u6700\u5927\u6df1\u5ea6\uff0c\u9ed8\u8a8d\u503c\u70ba6\u3002\n- booster: gbtree \u6a39\u6a21\u578b(\u9810\u8a2d) \/ gbliner \u7dda\u6027\u6a21\u578b\n- learning_rate: \u5b78\u7fd2\u901f\u7387\uff0c\u9810\u8a2d0.3\u3002\n- gamma: \u61f2\u7f70\u9805\u4fc2\u6578\uff0c\u6307\u5b9a\u7bc0\u9ede\u5206\u88c2\u6240\u9700\u7684\u6700\u5c0f\u640d\u5931\u51fd\u6578\u4e0b\u964d\u503c\u3002\n\nAttributes:\n- feature_importances_: \u67e5\u8a62\u6a21\u578b\u7279\u5fb5\u7684\u91cd\u8981\u7a0b\u5ea6\u3002\n\nMethods:\n- fit: \u653e\u5165X\u3001y\u9032\u884c\u6a21\u578b\u64ec\u5408\u3002\n- predict: \u9810\u6e2c\u4e26\u56de\u50b3\u9810\u6e2c\u985e\u5225\u3002\n- score: \u9810\u6e2c\u6210\u529f\u7684\u6bd4\u4f8b\u3002\n- predict_proba: \u9810\u6e2c\u6bcf\u500b\u985e\u5225\u7684\u6a5f\u7387\u503c\u3002","e0bc3752":"### \u5206\u6790\u6bcf\u5929\u7684\u8cc7\u8a0a\nLooking at the day wise trend,we see that there has been sudden peak and dips for certain days over the month.While the temperatures have been above 20 deg after late may, there is a dip in temperature less than 15 dec after Nov but there is a sudden increase in mid december.","e25fdd59":"### \u6a21\u578b\u8a55\u4f30\nscikit-learn \u6c7a\u7b56\u6a39\u8ff4\u6b78\u6a21\u578b\u7684score\u51fd\u5f0f\u662fR2 score\uff0c\u53ef\u4f5c\u70ba\u6a21\u578b\u8a55\u4f30\u4f9d\u64da\uff0c\u5176\u6578\u503c\u8d8a\u63a5\u8fd1\u65bc1\u4ee3\u8868\u6a21\u578b\u8d8a\u4f73\u3002\n\u9664\u4e86R2 score\u9084\u6709\u5176\u4ed6\u8a31\u591a\u56de\u6b78\u6a21\u578b\u7684\u8a55\u4f30\u65b9\u6cd5\uff0c\u4f8b\u5982\uff1a MSE\u3001MAE\u3001RMSE\u3002","2de781cb":"### Standardization \u5e73\u5747&\u8b8a\u7570\u6578\u6a19\u6e96\u5316\n\u5c07\u6240\u6709\u7279\u5fb5\u6a19\u6e96\u5316\uff0c\u4e5f\u5c31\u662f\u9ad8\u65af\u5206\u4f48\u3002\u4f7f\u5f97\u6578\u64da\u7684\u5e73\u5747\u503c\u70ba0\uff0c\u65b9\u5dee\u70ba1\u3002\n\u9069\u5408\u7684\u4f7f\u7528\u6642\u6a5f\u65bc\u7576\u6709\u4e9b\u7279\u5fb5\u7684\u65b9\u5dee\u904e\u5927\u6642\uff0c\u4f7f\u7528\u6a19\u6e96\u5316\u80fd\u5920\u6709\u6548\u5730\u8b93\u6a21\u578b\u5feb\u901f\u6536\u6582\u3002"}}