{"cell_type":{"de6e0bd2":"code","9612f517":"code","ea2ebc36":"code","e6c8cba8":"code","47d7574f":"code","ff6826df":"code","82b49b5d":"code","d3b9f521":"code","a324ec27":"code","05aabad7":"code","0c94268c":"code","95a9b1fb":"code","8e183dbb":"code","3ff3a545":"code","7d962d25":"code","69aa7304":"code","6fd57f75":"code","bb981eb8":"code","16f27878":"code","fd840581":"code","00b56702":"code","5b1750a3":"code","e1fe1e8b":"code","38368cf4":"code","b6af0396":"code","e8a88aff":"code","f85cbd50":"code","e8e0fb59":"code","0d8578e0":"code","b3a60fa6":"code","855b968c":"code","24725326":"code","d099d450":"code","21b20d3f":"code","e377a585":"code","257153de":"code","858622b5":"code","7109f5d2":"code","cd2bc0ac":"code","41af95a5":"code","d19b39c1":"code","9c84566f":"code","c5b384ea":"code","a626bedb":"code","84d3e9bd":"code","4e7b58a0":"code","866db74b":"code","696c0eab":"code","bf8c7a4e":"code","7cd26254":"code","9957f7d6":"code","9cc236f6":"code","2d509072":"code","663c9999":"code","66b544f8":"code","036536b2":"code","e2d32c7d":"code","f553186e":"code","2f8907e4":"code","96aebff7":"code","190953a2":"code","4f951912":"code","ed3b1cdd":"code","1ca3afdd":"code","cc100c6c":"code","965e7435":"code","ee29989b":"code","59543de1":"code","420fbe48":"code","57297675":"code","96eeeb93":"code","02a66353":"code","1e7bef94":"code","b321e50b":"code","f12dafc1":"code","7ff21173":"code","ab1da8e4":"code","8acac711":"code","ad2890ae":"code","a4f38a72":"code","d5e399c1":"code","6fbedc8e":"code","58c084f4":"code","6691caf2":"code","9d67891c":"code","8d7e4266":"code","aed697c4":"code","37c2be19":"code","b3d85fe4":"code","6d5129b7":"code","5350ade6":"code","6f37e00e":"code","06c14ba9":"code","a37db165":"code","b4c4f14c":"code","aee15aab":"code","af246428":"code","a2a25d13":"code","1c5a861f":"code","41936178":"code","4d745064":"code","4dca5e6e":"code","74cadf46":"code","9192b294":"code","1afc339d":"code","18b3aeeb":"code","98101134":"code","a3379246":"code","e736fc3e":"code","075a77dc":"code","702b1519":"code","c240e3e2":"code","72f770de":"code","49b91034":"code","b56e977e":"code","8c8dec65":"code","3fc62fdc":"code","40936485":"code","b89c62e5":"code","ede6e4f2":"code","7f64c739":"code","b7c68ae2":"code","288e0682":"code","1b7ae517":"code","99e5dd86":"code","a9c8b31f":"code","9914c03b":"code","a93066d7":"code","c21898fc":"code","d7529dd2":"code","35f06de3":"code","03726025":"code","2a14d08c":"code","8864930b":"code","af30d49c":"code","7a0cbc35":"code","fbc60598":"code","d0755f1e":"code","0446e53e":"code","875ef4ff":"code","ac3696d8":"code","954e4e67":"code","a7dbc66d":"code","aea9ff51":"code","8ebe9e31":"code","84cb6c5c":"code","e90876b2":"code","80e993e2":"code","83a6bf5a":"code","c35dc754":"code","3a97b76b":"code","8ce9bcc9":"code","6900efbc":"code","4f28b342":"code","022f6e3b":"code","632b03d7":"code","706455e4":"code","4c33e219":"code","805705d3":"code","666add74":"code","d8ef668c":"code","cd352794":"code","13b5e53b":"code","d00c014a":"code","4e21f057":"code","4cd73b70":"code","fde68c4d":"code","e8006b38":"code","4a545143":"code","44538ed2":"code","499d865d":"code","30f62427":"code","b95d8104":"code","a510e93b":"code","65f9c9aa":"code","56960bb6":"code","ff3c9fbe":"code","4e7b9629":"code","2014c0a6":"code","bba4d234":"code","8bc37fe1":"code","569ce895":"code","42c9d488":"code","fcf6848d":"code","39b0d906":"code","9a85e54d":"code","185984dc":"code","a0e8cac9":"code","36d3ae7d":"code","12cb4ba9":"code","7f5d3aca":"code","e9a3ba52":"code","976d8483":"code","b215410d":"code","c46686e2":"code","fb91818c":"code","68d1b254":"code","c54c5796":"code","ce04da7c":"code","0f783a94":"markdown","c7f22d0f":"markdown","3e89d802":"markdown","8f6e6f5e":"markdown","30e6711a":"markdown","e588211e":"markdown","e2275926":"markdown","2245db9c":"markdown","ff8d7d77":"markdown","4c07ea3e":"markdown","fd501f4f":"markdown","78f7533a":"markdown","8bbab164":"markdown","41429f8d":"markdown","c362824f":"markdown","4c3788ac":"markdown","c78c82b7":"markdown","5f4542d0":"markdown","ebf3f2d8":"markdown","02d58f38":"markdown","bf360aaa":"markdown","0a689994":"markdown","61c8abea":"markdown","8eba3f45":"markdown","99d2fbd7":"markdown","7097e5a9":"markdown"},"source":{"de6e0bd2":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.preprocessing import normalize,MinMaxScaler,StandardScaler\nfrom sklearn.decomposition import PCA, randomized_svd\nfrom sklearn import random_projection\n\nfrom sklearn.random_projection import GaussianRandomProjection,SparseRandomProjection\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeRegressor, ExtraTreeRegressor\nfrom lightgbm import LGBMRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.ensemble import GradientBoostingRegressor,VotingRegressor,BaggingRegressor, RandomForestRegressor\nfrom xgboost import XGBRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.linear_model import LinearRegression, LassoCV, RidgeCV\nfrom catboost import CatBoostRegressor\n\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\nfrom sklearn.model_selection import GridSearchCV\n\nimport matplotlib.pyplot as plt\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n%matplotlib inline","9612f517":"training_set = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ntesting_set = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv\")\nsample_submission = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv\")","ea2ebc36":"print(\"Training Set: \",training_set.shape)\nprint(\"Testing Set \",testing_set.shape)","e6c8cba8":"with open(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/data_description.txt\",\"r\") as data_desc:\n    for line in data_desc.readlines()[:10]:\n        print(line)","47d7574f":"y = training_set[\"SalePrice\"]","ff6826df":"def check_null(df,col):\n    return print(col,\" \",df[col].isnull().sum())","82b49b5d":"def categorical_saleprice(df,col):\n    return df.groupby(col)[\"SalePrice\"].mean()","d3b9f521":"columns_impute_train = training_set.columns[(training_set.isnull().sum() > 0) & (training_set.isnull().sum() < 100)]\ncolumns_impute_test = testing_set.columns[(testing_set.isnull().sum() > 0) & (testing_set.isnull().sum() < 100)]","a324ec27":"#Numeric Columns\nnum_cols = training_set._get_numeric_data().columns","05aabad7":"#training_set[columns_impute_train[0]].fillna(training_set[columns_impute_train[0]].mode()[0],inplace=True)","0c94268c":"print(columns_impute_train)\nprint(columns_impute_test)","95a9b1fb":"check_null(training_set,columns_impute_train[0])\ncategorical_saleprice(training_set,columns_impute_train[0])","8e183dbb":"MasVnrType = list(training_set.groupby(columns_impute_train[0])[\"SalePrice\"].mean().index)\nsale_price = list(training_set.groupby(columns_impute_train[0])[\"SalePrice\"].mean().values)","3ff3a545":"#plt.bar(MasVnrType,sale_price)","7d962d25":"training_set[training_set[columns_impute_train[0]].isnull()]","69aa7304":"training_set.loc[training_set['Id']==235,'MasVnrType'] = \"BrkFace\"\ntraining_set.loc[training_set['Id']==530,'MasVnrType'] = \"BrkFace\"\ntraining_set.loc[training_set['Id']==651,'MasVnrType'] = \"BrkFace\"\ntraining_set.loc[training_set['Id']==937,'MasVnrType'] = \"None\"\ntraining_set.loc[training_set['Id']==974,'MasVnrType'] = \"None\"\ntraining_set.loc[training_set['Id']==978,'MasVnrType'] = \"BrkFace\"\ntraining_set.loc[training_set['Id']==1244,'MasVnrType'] = \"Stone\"\ntraining_set.loc[training_set['Id']==1279,'MasVnrType'] = \"Stone\"","6fd57f75":"print(training_set.groupby(columns_impute_train[1])[\"SalePrice\"].mean())\nprint(training_set.groupby(columns_impute_train[0])[\"MasVnrArea\"].value_counts())\nprint(training_set[(training_set[\"MasVnrType\"]==\"Stone\") & (training_set[\"SalePrice\"] >= 230000)][[\"MasVnrArea\",\"SalePrice\"]].mean())","bb981eb8":"training_set[(training_set[\"MasVnrType\"]==\"BrkFace\") & (training_set[\"SalePrice\"] >= 200000)][[\"MasVnrArea\",\"SalePrice\"]].mean()","16f27878":"training_set[training_set[columns_impute_train[1]].isnull()][[\"MasVnrType\",\"SalePrice\"]]","fd840581":"training_set.loc[training_set['Id']==937,'MasVnrArea'] = 0.0\ntraining_set.loc[training_set['Id']==974,'MasVnrArea'] = 0.0\ntraining_set.loc[training_set['Id']==978,'MasVnrArea'] = 332.00\ntraining_set.loc[training_set['Id']==1244,'MasVnrArea'] = 280.3\ntraining_set.loc[training_set['Id']==1279,'MasVnrArea'] = 280.3\ntraining_set.loc[training_set['Id']==235,'MasVnrArea'] = 332.00\ntraining_set.loc[training_set['Id']==530,'MasVnrArea'] = 332.00\ntraining_set.loc[training_set['Id']==651,'MasVnrArea'] = 332.00","00b56702":"training_set[columns_impute_train[2]].value_counts()","5b1750a3":"training_set[training_set[columns_impute_train[2]].isnull()].head()","e1fe1e8b":"print(training_set.groupby(columns_impute_train[2])[\"SalePrice\"].mean())","38368cf4":"print(training_set[(training_set[\"BsmtQual\"]==\"Ex\") ][[\"SalePrice\"]].mean())\nprint(training_set[(training_set[\"BsmtQual\"]==\"TA\") ][[\"SalePrice\"]].mean())\nprint(training_set[(training_set[\"BsmtQual\"]==\"Fa\") ][[\"SalePrice\"]].mean())","b6af0396":"def impute_BsmtQual_train(df,column):\n    df.loc[(df[column].isnull()) & (df[\"SalePrice\"] < 120000.00),column] = \"Fa\"\n    df.loc[(df[column].isnull()) & (df[\"SalePrice\"] >= 120000.00) & (df[\"SalePrice\"] < 180000.00),column] = \"TA\"\n    df.loc[(df[column].isnull()) & (df[\"SalePrice\"] >= 180000.00),column] = \"TA\"\n    return \"Basement Quality's missing value is imputed\"","e8a88aff":"impute_BsmtQual_train(training_set,\"BsmtQual\")","f85cbd50":"training_set[columns_impute_train[3]].value_counts()","e8e0fb59":"training_set[training_set[columns_impute_train[3]].isnull()].head()","0d8578e0":"#print(training_set[(training_set[\"BsmtCond\"]==\"Ex\") ][[\"SalePrice\"]].mean())\nprint(training_set[(training_set[\"BsmtCond\"]==\"TA\") ][[\"SalePrice\"]].mean())\nprint(training_set[(training_set[\"BsmtCond\"]==\"Fa\") ][[\"SalePrice\"]].mean())\nprint(training_set[(training_set[\"BsmtCond\"]==\"Po\") ][[\"SalePrice\"]].mean())\nprint(training_set[(training_set[\"BsmtCond\"]==\"Gd\") ][[\"SalePrice\"]].mean())","b3a60fa6":"print(training_set.groupby(columns_impute_train[3])[\"SalePrice\"].mean())","855b968c":"training_set.loc[(training_set[columns_impute_train[3]].isnull()) & (training_set[\"SalePrice\"] < 75000.00),\"BsmtCond\"] = \"Po\"\ntraining_set.loc[(training_set[columns_impute_train[3]].isnull()) & (training_set[\"SalePrice\"] >= 75000.00) & (training_set[\"SalePrice\"] < 140000.00),\"BsmtCond\"] = \"Fa\"\ntraining_set.loc[(training_set[columns_impute_train[3]].isnull()) & (training_set[\"SalePrice\"] >= 140000.00) & (training_set[\"SalePrice\"] < 190000.00),\"BsmtCond\"] = \"TA\"\ntraining_set.loc[(training_set[columns_impute_train[3]].isnull()) & (training_set[\"SalePrice\"] >= 190000.00),\"BsmtCond\"] = \"Gd\"","24725326":"training_set[columns_impute_train[4]].value_counts()","d099d450":"training_set[training_set[columns_impute_train[4]].isnull()].shape","21b20d3f":"print(training_set.groupby(columns_impute_train[4])[\"SalePrice\"].mean())","e377a585":"training_set.loc[(training_set[columns_impute_train[4]].isnull()) & (training_set[\"SalePrice\"] < 150000.00),\"BsmtExposure\"] = \"No\"\ntraining_set.loc[(training_set[columns_impute_train[4]].isnull()) & (training_set[\"SalePrice\"] >= 150000.00) & (training_set[\"SalePrice\"] < 200000.00),\"BsmtExposure\"] = \"Mn\"\ntraining_set.loc[(training_set[columns_impute_train[4]].isnull()) & (training_set[\"SalePrice\"] >= 200000.00) & (training_set[\"SalePrice\"] < 230000.00),\"BsmtExposure\"] = \"Av\"\ntraining_set.loc[(training_set[columns_impute_train[4]].isnull()) & (training_set[\"SalePrice\"] >= 210000.00),\"BsmtExposure\"] = \"Gd\"","257153de":"training_set[columns_impute_train[5]].value_counts()","858622b5":"training_set[training_set[columns_impute_train[5]].isnull()].shape","7109f5d2":"print(training_set.groupby(columns_impute_train[5])[\"SalePrice\"].mean())","cd2bc0ac":"training_set[training_set[columns_impute_train[5]].isnull()][[\"BsmtCond\",\"BsmtExposure\",\"BsmtFinType1\",\"BsmtQual\"]].head()","41af95a5":"training_set.loc[(training_set[columns_impute_train[5]].isnull()) & (training_set[\"BsmtQual\"] == \"Fa\"),\"BsmtFinType1\"] = \"Unf\"\ntraining_set.loc[(training_set[columns_impute_train[5]].isnull()) & (training_set[\"BsmtQual\"] == \"TA\"),\"BsmtFinType1\"] = \"LwQ\"\ntraining_set.loc[(training_set[columns_impute_train[5]].isnull()) & (training_set[\"BsmtQual\"] == \"Gd\"),\"BsmtFinType1\"] = \"GLQ\"","d19b39c1":"training_set[columns_impute_train[6]].value_counts()","9c84566f":"training_set[training_set[columns_impute_train[6]].isnull()].shape","c5b384ea":"print(training_set.groupby(columns_impute_train[6])[\"SalePrice\"].mean())","a626bedb":"training_set[training_set[\"BsmtQual\"]==\"Ex\"][\"BsmtFinType2\"].value_counts()","84d3e9bd":"training_set.loc[training_set[columns_impute_train[6]].isnull(),\"BsmtFinType2\"] = \"Unf\"","4e7b58a0":"training_set[columns_impute_train[7]].value_counts()","866db74b":"training_set[columns_impute_train[7]].fillna(value=\"SBrkr\",inplace=True)","696c0eab":"training_set[columns_impute_train[8]].value_counts()","bf8c7a4e":"training_set[training_set[columns_impute_train[8]].isnull()]","7cd26254":"print(training_set.groupby(columns_impute_train[8])[\"SalePrice\"].mean())","9957f7d6":"training_set.loc[(training_set[columns_impute_train[8]].isnull()) & (training_set[\"SalePrice\"] < 110000.00),\"GarageType\"] = \"CarPort\"\ntraining_set.loc[(training_set[columns_impute_train[8]].isnull()) & (training_set[\"SalePrice\"] >= 110000.00) & (training_set[\"SalePrice\"] < 140000.00),\"GarageType\"] = \"Detchd\"\ntraining_set.loc[(training_set[columns_impute_train[8]].isnull()) & (training_set[\"SalePrice\"] >= 140000.00) & (training_set[\"SalePrice\"] < 210000.00),\"GarageType\"] = \"Attchd\"\ntraining_set.loc[(training_set[columns_impute_train[8]].isnull()) & (training_set[\"SalePrice\"] >= 210000.00),\"GarageType\"] = \"BuiltIn\"","9cc236f6":"#training_set[columns_impute_train[9]].value_counts()","2d509072":"#training_set[training_set[columns_impute_train[9]].isnull()].shape","663c9999":"#print(training_set.groupby(columns_impute_train[9])[\"SalePrice\"].mean())","66b544f8":"#pd.crosstab(training_set[\"GarageYrBlt\"],training_set[\"GarageType\"]).ipynb_checkpoints\/","036536b2":"#training_set[training_set[\"GarageYrBlt\"].isnull()][\"GarageType\"].value_counts()","e2d32c7d":"#training_set[training_set[\"GarageType\"]==\"Detchd\"][\"GarageYrBlt\"].value_counts()","f553186e":"columns_impute_train.drop(columns_impute_train[9])","2f8907e4":"training_set[columns_impute_train[10]].value_counts()","96aebff7":"training_set[training_set[columns_impute_train[10]].isnull()]","190953a2":"print(training_set.groupby(columns_impute_train[10])[\"SalePrice\"].mean())","4f951912":"pd.crosstab(training_set[\"SalePrice\"],training_set[\"GarageFinish\"])","ed3b1cdd":"training_set.loc[(training_set[columns_impute_train[10]].isnull()) & (training_set[\"SalePrice\"] < 160000.00),\"GarageFinish\"] = \"Unf\"\ntraining_set.loc[(training_set[columns_impute_train[10]].isnull()) & (training_set[\"SalePrice\"] >= 160000.00) & (training_set[\"SalePrice\"] < 220000.00),\"GarageFinish\"] = \"RFn\"\ntraining_set.loc[(training_set[columns_impute_train[10]].isnull()) & (training_set[\"SalePrice\"] >= 220000.00),\"GarageFinish\"] = \"Fin\"","1ca3afdd":"training_set[columns_impute_train[11]].value_counts()","cc100c6c":"training_set[training_set[columns_impute_train[11]].isnull()].head()","965e7435":"print(training_set.groupby(columns_impute_train[11])[\"SalePrice\"].mean())","ee29989b":"training_set.loc[(training_set[columns_impute_train[11]].isnull()) & (training_set[\"SalePrice\"] < 100000.00),\"GarageQual\"] = \"Po\"\ntraining_set.loc[(training_set[columns_impute_train[11]].isnull()) & (training_set[\"SalePrice\"] >= 100000.00) & (training_set[\"SalePrice\"] < 140000.00),\"GarageQual\"] = \"Fa\"\ntraining_set.loc[(training_set[columns_impute_train[11]].isnull()) & (training_set[\"SalePrice\"] >= 140000.00) & (training_set[\"SalePrice\"] < 220000.00),\"GarageQual\"] = \"Ta\"\ntraining_set.loc[(training_set[columns_impute_train[11]].isnull()) & (training_set[\"SalePrice\"] >= 220000.00),\"GarageQual\"] = \"Ex\"","59543de1":"training_set[columns_impute_train[12]].value_counts()","420fbe48":"training_set[training_set[columns_impute_train[12]].isnull()].shape","57297675":"print(training_set.groupby(columns_impute_train[12])[\"SalePrice\"].mean())","96eeeb93":"training_set[columns_impute_train[12]].fillna(value=\"TA\",inplace=True)","02a66353":"columns_too_many_missing = list(training_set.columns[training_set.isnull().any()])","1e7bef94":"list(training_set.columns[training_set.isnull().any()])","b321e50b":"training_set.drop(columns=columns_too_many_missing,inplace=True)","f12dafc1":"testing_set.drop(columns=columns_too_many_missing,inplace=True)","7ff21173":"training_set.select_dtypes(include='object').columns\ncol_to_encode = ['MSZoning', 'Street', 'LotShape', 'LandContour',\n       'LotConfig', 'LandSlope', 'Neighborhood', 'Condition1', 'Condition2',\n       'BldgType', 'HouseStyle', 'RoofStyle', 'RoofMatl', 'Exterior1st',\n       'Exterior2nd', 'MasVnrType', 'ExterQual', 'ExterCond', 'Foundation',\n       'BsmtQual', 'BsmtCond', 'BsmtExposure', 'BsmtFinType1', 'BsmtFinType2',\n       'Heating', 'HeatingQC', 'CentralAir', 'Electrical', 'KitchenQual',\n       'Functional', 'GarageType', 'GarageFinish', 'GarageQual', 'GarageCond',\n       'PavedDrive', 'SaleType', 'SaleCondition']","ab1da8e4":"encoded_categorical_df = pd.get_dummies(training_set, columns = col_to_encode, drop_first = True)","8acac711":"col_drop = list(training_set.select_dtypes(include='object').columns)\ncol_drop.append(\"Id\")\ntraining_set.drop(columns=col_drop,inplace=True)","ad2890ae":"encoded_categorical_df.drop(columns=[\"Id\",\"Utilities\"],inplace = True)","a4f38a72":"min_max_scaler = MinMaxScaler()\nstandard_scaler = StandardScaler()\ncol_to_normalize = ['MSSubClass', 'LotArea', 'MasVnrArea', 'BsmtFinSF1',\n       'BsmtFinSF2', 'BsmtUnfSF', 'TotalBsmtSF', '1stFlrSF', '2ndFlrSF','LowQualFinSF', 'GrLivArea'\n        ,'GarageArea', 'WoodDeckSF', 'OpenPorchSF', 'EnclosedPorch', '3SsnPorch', 'ScreenPorch']\nencoded_categorical_df[col_to_normalize] = min_max_scaler.fit_transform(encoded_categorical_df[col_to_normalize])\n#encoded_categorical_df[col_to_normalize] = standard_scaler.fit_transform(encoded_categorical_df[col_to_normalize])\n#encoded_categorical_df[col_to_normalize] = normalize(encoded_categorical_df[col_to_normalize])","d5e399c1":"encoded_categorical_df[['MSSubClass', 'LotArea', 'MasVnrArea', 'BsmtFinSF1',\n       'BsmtFinSF2', 'BsmtUnfSF', 'TotalBsmtSF', '1stFlrSF', '2ndFlrSF','LowQualFinSF', 'GrLivArea'\n        ,'GarageArea', 'WoodDeckSF', 'OpenPorchSF', 'EnclosedPorch', '3SsnPorch', 'ScreenPorch']]","6fbedc8e":"#encoded_categorical_df.drop(columns=col_to_normalize,inplace=True)","58c084f4":"encoded_categorical_df.drop(columns=[\"SalePrice\"],inplace=True)","6691caf2":"columns_impute_test","9d67891c":"testing_set[\"MSZoning\"].value_counts()","8d7e4266":"testing_set[\"MSSubClass\"].value_counts()","aed697c4":"testing_set[testing_set[columns_impute_test[0]].isnull()]","37c2be19":"testing_set[testing_set[columns_impute_test[0]].isnull()][[\"MSSubClass\",\"MSZoning\"]]","b3d85fe4":"pd.crosstab(testing_set[\"MSSubClass\"],testing_set[\"MSZoning\"])","6d5129b7":"testing_set.loc[(testing_set[columns_impute_test[0]].isnull()) & (testing_set[\"MSSubClass\"] == 20),\"MSZoning\"] = \"RL\"\ntesting_set.loc[(testing_set[columns_impute_test[0]].isnull()) & (testing_set[\"MSSubClass\"] == 30),\"MSZoning\"] = \"RM\"\ntesting_set.loc[(testing_set[columns_impute_test[0]].isnull()) & (testing_set[\"MSSubClass\"] == 70),\"MSZoning\"] = \"RM\"\n","5350ade6":"testing_set[columns_impute_test[1]].value_counts()","6f37e00e":"testing_set[testing_set[columns_impute_test[1]].isnull()]","06c14ba9":"testing_set[columns_impute_test[1]].fillna(value=\"AllPub\",inplace=True)","a37db165":"testing_set[columns_impute_test[2]].value_counts()","b4c4f14c":"testing_set[testing_set[columns_impute_test[2]].isnull()]","aee15aab":"testing_set[columns_impute_test[2]].fillna(value=\"VinylSd\",inplace=True)","af246428":"testing_set[columns_impute_test[3]].value_counts()","a2a25d13":"testing_set[testing_set[columns_impute_test[3]].isnull()]","1c5a861f":"testing_set[columns_impute_test[3]].fillna(value=\"VinylSd\",inplace=True)","41936178":"testing_set[columns_impute_test[4]].value_counts()","4d745064":"testing_set[testing_set[columns_impute_test[4]].isnull()][[\"MasVnrType\",\"ExterCond\",\"ExterQual\"]]","4dca5e6e":"testing_set[testing_set[\"ExterQual\"]==\"Gd\"][\"MasVnrType\"].value_counts()","74cadf46":"pd.crosstab(testing_set[\"MasVnrType\"],testing_set[\"ExterCond\"])","9192b294":"testing_set[\"MasVnrType\"].fillna(value=\"None\",inplace=True)","1afc339d":"testing_set[columns_impute_test[5]].value_counts()","18b3aeeb":"testing_set[testing_set[columns_impute_test[5]].isnull()]","98101134":"testing_set[columns_impute_test[5]].fillna(value=0.0,inplace=True)","a3379246":"testing_set[columns_impute_test[6]].value_counts()","e736fc3e":"testing_set[testing_set[columns_impute_test[6]].isnull()].head()","075a77dc":"pd.crosstab(testing_set[\"BsmtQual\"],testing_set[\"GarageQual\"])","702b1519":"testing_set[testing_set[columns_impute_test[6]].isnull()][[\"BsmtQual\",\"GarageQual\"]].head()","c240e3e2":"testing_set.loc[(testing_set[columns_impute_test[6]].isnull()) & (testing_set[\"GarageQual\"] == \"Ta\"),\"BsmtQual\"] = \"Gd\"\ntesting_set[columns_impute_test[6]].fillna(value=\"TA\",inplace=True)","72f770de":"testing_set[columns_impute_test[7]].value_counts()","49b91034":"testing_set[columns_impute_test[7]].fillna(value=\"TA\",inplace=True)","b56e977e":"testing_set[columns_impute_test[8]].value_counts()","8c8dec65":"testing_set[testing_set[columns_impute_test[8]].isnull()][[\"BsmtExposure\",\"GarageQual\"]].head()","3fc62fdc":"testing_set[testing_set[\"GarageQual\"]==\"TA\"][\"BsmtExposure\"].value_counts()","40936485":"testing_set[columns_impute_test[8]].fillna(value=\"No\",inplace=True)","b89c62e5":"testing_set[columns_impute_test[9]].value_counts()","ede6e4f2":"testing_set[testing_set[columns_impute_test[9]].isnull()].head()","7f64c739":"testing_set[testing_set[columns_impute_test[9]].isnull()][[\"BsmtFinType1\",\"GarageCond\",\"GarageQual\",\"BldgType\"]].head()","b7c68ae2":"testing_set[testing_set[\"BldgType\"]==\"1Fam\"][\"BsmtFinType1\"].value_counts()","288e0682":"testing_set.loc[(testing_set[columns_impute_test[9]].isnull()) & (testing_set[\"BldgType\"] == \"1Fam\"),\"BsmtFinType1\"] = \"Unf\"\ntesting_set.loc[(testing_set[columns_impute_test[9]].isnull()) & (testing_set[\"BldgType\"] == \"Duplex\"),\"BsmtFinType1\"] = \"GLQ\"\n","1b7ae517":"testing_set.columns","99e5dd86":"testing_set[columns_impute_test[10]].value_counts()","a9c8b31f":"testing_set[testing_set[columns_impute_test[10]].isnull()]","9914c03b":"testing_set[testing_set[\"SaleCondition\"]==\"Abnorml\"][columns_impute_test[10]].value_counts().head()","a93066d7":"testing_set[columns_impute_test[10]].fillna(value=0.0,inplace=True)","c21898fc":"testing_set[columns_impute_test[11]].value_counts()","d7529dd2":"testing_set[testing_set[columns_impute_test[11]].isnull()].head()","35f06de3":"testing_set[testing_set[\"SaleCondition\"]==\"AdjLand\"][columns_impute_test[11]].value_counts()","03726025":"testing_set[columns_impute_test[11]].fillna(value=\"Unf\",inplace=True)\n","2a14d08c":"testing_set[columns_impute_test[12]].fillna(value=0.0,inplace=True)","8864930b":"testing_set[columns_impute_test[13]].value_counts()","af30d49c":"testing_set[testing_set[columns_impute_test[13]].isnull()][[\"BsmtFinType1\",\"GarageCond\",\"GarageQual\",\"BldgType\"]]","7a0cbc35":"testing_set[columns_impute_test[13]].fillna(value=0.0,inplace=True)","fbc60598":"testing_set[columns_impute_test[14]].value_counts()","d0755f1e":"testing_set[testing_set[columns_impute_test[14]].isnull()][[\"BsmtFinType1\",\"GarageCond\",\"GarageQual\",\"BldgType\"]]","0446e53e":"testing_set[columns_impute_test[14]].fillna(value=0.0,inplace=True)","875ef4ff":"testing_set[columns_impute_test[15]].value_counts()","ac3696d8":"testing_set[testing_set[columns_impute_test[15]].isnull()][[\"BsmtFinType1\",\"GarageCond\",\"GarageQual\",\"BldgType\"]]","954e4e67":"testing_set[columns_impute_test[15]].fillna(value=0.0,inplace=True)","a7dbc66d":"testing_set[columns_impute_test[16]].value_counts()","aea9ff51":"testing_set[columns_impute_test[16]].fillna(value=0.0,inplace=True)","8ebe9e31":"testing_set[columns_impute_test[17]].value_counts()","84cb6c5c":"testing_set[testing_set[columns_impute_test[17]].isnull()][[\"BsmtFinType1\",\"GarageCond\",\"GarageQual\",\"BldgType\"]]","e90876b2":"testing_set[columns_impute_test[17]].fillna(value=\"Fa\",inplace=True)","80e993e2":"testing_set[columns_impute_test[18]].value_counts()","83a6bf5a":"testing_set[testing_set[columns_impute_test[18]].isnull()][[\"BsmtFinType1\",\"GarageCond\",\"GarageQual\",\"BldgType\"]]","c35dc754":"testing_set[columns_impute_test[18]].fillna(value=\"Fa\",inplace=True)","3a97b76b":"testing_set[columns_impute_test[19]].value_counts()","8ce9bcc9":"testing_set[testing_set[columns_impute_test[19]].isnull()][[\"BldgType\",\"GarageType\"]]","6900efbc":"testing_set[testing_set[\"BldgType\"]==\"TwnhsE\"][columns_impute_test[19]].value_counts()","4f28b342":"testing_set.loc[(testing_set[columns_impute_test[19]].isnull()) & (testing_set[\"BldgType\"] == \"1Fam\"),\"GarageType\"] = \"Attchd\"\ntesting_set.loc[(testing_set[columns_impute_test[19]].isnull()) & (testing_set[\"BldgType\"] == \"Duplex\"),\"GarageType\"] = \"Detchd\"\ntesting_set.loc[(testing_set[columns_impute_test[19]].isnull()) & (testing_set[\"BldgType\"] == \"2fmCon\"),\"GarageType\"] = \"Detchd\"\ntesting_set.loc[(testing_set[columns_impute_test[19]].isnull()) & (testing_set[\"BldgType\"] == \"Twnhs\"),\"GarageType\"] = \"Detchd\"\ntesting_set.loc[(testing_set[columns_impute_test[19]].isnull()) & (testing_set[\"BldgType\"] == \"TwnhsE\"),\"GarageType\"] = \"Attchd\"","022f6e3b":"testing_set[columns_impute_test[21]].value_counts()","632b03d7":"testing_set[testing_set[columns_impute_test[21]].isnull()].head()","706455e4":"testing_set[testing_set[columns_impute_test[21]].isnull()][\"BldgType\"].value_counts()","4c33e219":"testing_set.loc[(testing_set[columns_impute_test[21]].isnull()) & (testing_set[\"BldgType\"] == \"TwnhsE\"),\"GarageFinish\"] = \"Fin\"\ntesting_set[columns_impute_test[21]].fillna(value=\"Unf\",inplace=True)","805705d3":"testing_set[columns_impute_test[22]].value_counts()","666add74":"testing_set[testing_set[columns_impute_test[22]].isnull()]","d8ef668c":"testing_set[testing_set[\"SaleCondition\"]==\"Alloca\"][columns_impute_test[22]].value_counts()","cd352794":"testing_set[columns_impute_test[22]].fillna(value=2.0,inplace=True)","13b5e53b":"testing_set[columns_impute_test[23]].value_counts()","d00c014a":"testing_set[testing_set[columns_impute_test[23]].isnull()]","4e21f057":"testing_set[testing_set[\"SaleCondition\"]==\"Alloca\"][columns_impute_test[23]].mean()","4cd73b70":"testing_set[columns_impute_test[23]].fillna(value=499.09,inplace=True)","fde68c4d":"testing_set[columns_impute_test[24]].value_counts()","e8006b38":"testing_set[testing_set[columns_impute_test[24]].isnull()].head()","4a545143":"testing_set[columns_impute_test[24]].fillna(value=\"TA\",inplace=True)","44538ed2":"testing_set[columns_impute_test[25]].value_counts()","499d865d":"testing_set[columns_impute_test[25]].fillna(value=\"TA\",inplace=True)","30f62427":"testing_set[columns_impute_test[26]].value_counts()","b95d8104":"testing_set[testing_set[columns_impute_test[26]].isnull()]","a510e93b":"testing_set[testing_set[\"SaleCondition\"]==\"Normal\"][columns_impute_test[26]].value_counts()","65f9c9aa":"testing_set[columns_impute_test[26]].fillna(value=\"WD\",inplace=True)","56960bb6":"testing_set.columns[(testing_set.isnull().sum() > 0) & (testing_set.isnull().sum() < 100)]","ff3c9fbe":"testing_set.drop(columns=[\"Id\"],inplace=True)\ntesting_set.drop(columns=[\"Utilities\"],inplace=True)","4e7b9629":"col_for_dummies = [\"MSZoning\",\"Street\",\"LotShape\",\"LandContour\",\"LotConfig\",\"LandSlope\",\"Neighborhood\",\"Condition1\",\"Condition2\",\"BldgType\",\n                  \"HouseStyle\",\"RoofStyle\",'RoofMatl', 'Exterior1st', 'Exterior2nd', 'MasVnrType', 'ExterQual', 'ExterCond', 'Foundation',\n                   'BsmtQual', 'BsmtCond', 'BsmtExposure', 'BsmtFinType1', 'BsmtFinType2', 'Heating', 'HeatingQC', 'CentralAir', 'Electrical',\n                   'KitchenQual', 'Functional', 'GarageType', 'GarageFinish', 'GarageQual', 'GarageCond', 'PavedDrive', 'SaleType', 'SaleCondition']","2014c0a6":"testing_encoding_categorical = pd.get_dummies(testing_set, columns = col_for_dummies, drop_first = True)","bba4d234":"#min_max_scaler = MinMaxScaler()\nnum_cols_test = testing_set._get_numeric_data().columns\nnum_cols_test","8bc37fe1":"col_to_normalize = [\"MSSubClass\",\"LotArea\",\"MasVnrArea\",\"BsmtFinSF1\",\"BsmtFinSF2\",\"BsmtUnfSF\",\"TotalBsmtSF\",\"1stFlrSF\",\"2ndFlrSF\",\"LowQualFinSF\",\n                   \"GrLivArea\",\"GarageArea\",\"WoodDeckSF\",\"OpenPorchSF\",\"EnclosedPorch\",\"3SsnPorch\",\"ScreenPorch\"]\ntesting_encoding_categorical[col_to_normalize] = min_max_scaler.transform(testing_encoding_categorical[col_to_normalize])\n#testing_encoding_categorical[col_to_normalize] = standard_scaler.transform(testing_encoding_categorical[col_to_normalize])\n#testing_encoding_categorical[col_to_normalize] = normalize(testing_encoding_categorical[col_to_normalize])","569ce895":"#testing_encoding_categorical.drop(columns=col_to_normalize,inplace=True)","42c9d488":"features_to_delete_test = []\nfor col in testing_encoding_categorical.columns:\n    if col not in encoded_categorical_df.columns:\n        features_to_delete_test.append(col)","fcf6848d":"features_to_delete_train = []\nfor col in encoded_categorical_df.columns:\n    if col not in testing_encoding_categorical.columns:\n        features_to_delete_train.append(col)","39b0d906":"print(encoded_categorical_df.shape)\nprint(testing_encoding_categorical.shape)","9a85e54d":"#features_to_delete_train.remove(\"SalePrice\")","185984dc":"encoded_categorical_df.drop(columns=features_to_delete_train,inplace=True)","a0e8cac9":"testing_encoding_categorical.drop(columns=features_to_delete_test,inplace=True)","36d3ae7d":"features_to_delete_train","12cb4ba9":"#grp = PCA(n_components=)\n#X = grp.fit_transform(encoded_categorical_df)\n#print(type(X))\n#print(type(y))","7f5d3aca":"#grp = random_projection.johnson_lindenstrauss_min_dim(encoded_categorical_df,eps=0.3)","e9a3ba52":"X_train, X_valid, y_train, y_valid  = train_test_split(encoded_categorical_df,y,test_size=0.25)","976d8483":"cbr = CatBoostRegressor(logging_level='Silent')\ncbr.fit(X_train,y_train)\ny_pred = cbr.predict(X_valid)\nprint(\"Mean Squared Error\",mean_squared_error(y_valid, y_pred))\nprint(\"Mean Absolute Error\",mean_absolute_error(y_valid, y_pred))\nprint(\"R2 Score\",r2_score(y_valid, y_pred))","b215410d":"# param_grid = {'learning_rate':[0.1],\"n_estimators\":[150],'min_samples_leaf':[5],'min_samples_split':[20],\"max_depth\":[10],'loss': ['lad'],\"max_features\":[\"auto\"]}\n# gbccv = GridSearchCV(GradientBoostingRegressor(),param_grid)\n# gbccv.fit(X_train,y_train)\n# y_pred = gbccv.predict(X_valid)\n# print(\"Mean Squared Error\",mean_squared_error(y_valid, y_pred))\n# print(\"Mean Absolute Error\",mean_absolute_error(y_valid, y_pred))\n# print(\"R2 Score\",r2_score(y_valid, y_pred))","c46686e2":"# param_grid = {'learning_rate':[0.1],\"n_estimators\":[100],\"min_split_gain\":[0.1],\"min_child_samples\":[15]}\n# lgbm = GridSearchCV(LGBMRegressor(),param_grid)\n# lgbm.fit(X_train,y_train)\n# y_pred = lgbm.predict(X_valid)\n# print(lgbm.best_params_)\n# print(lgbm.best_score_)\n# print(\"Mean Squared Error\",mean_squared_error(y_valid, y_pred))\n# print(\"Mean Absolute Error\",mean_absolute_error(y_valid, y_pred))\n# print(\"R2 Score\",r2_score(y_valid, y_pred))","fb91818c":"# reg1 = GradientBoostingRegressor()\n# reg2 = LGBMRegressor()\n# reg3 = CatBoostRegressor()\n# voting_regressor = VotingRegressor(estimators=[('gbr', reg1), ('lgbm', reg2),('catboost',reg3)])\n# voting_regressor.fit(X_train,y_train)\n# y_pred = voting_regressor.predict(X_valid)\n# print(\"Mean Squared Error\",mean_squared_error(y_valid, y_pred))\n# print(\"Mean Absolute Error\",mean_absolute_error(y_valid, y_pred))\n# print(\"R2 Score\",r2_score(y_valid, y_pred))","68d1b254":"# las_reg = RidgeCV(cv=10).fit(X_train,y_train)\n# y_pred = las_reg.predict(X_valid)\n# print(\"Mean Squared Error\",mean_squared_error(y_valid, y_pred))\n# print(\"Mean Absolute Error\",mean_absolute_error(y_valid, y_pred))\n# print(\"R2 Score\",r2_score(y_valid, y_pred))","c54c5796":"#testing_encoding_categorical_pca = pca.transform(testing_encoding_categorical)","ce04da7c":"Id = sample_submission[\"Id\"]\npredicted_test = []\n#X_test = random_projection.johnson_lindenstrauss_min_dim(testing_encoding_categorical,eps=0.3)\nfor x in cbr.predict(testing_encoding_categorical):\n    predicted_test.append(x)\npredicted_test_value = pd.DataFrame({ 'Id': Id,\n                        'SalePrice': predicted_test })\npredicted_test_value.to_csv(\"PredictedTestScore.csv\", index=False)","0f783a94":"**Garage Finish, missing value is imputed based on Sale Price**","c7f22d0f":"**Impute Value for MasVnrType based on SalePrice.**\n* Mason Veneer Type - https:\/\/www.angieslist.com\/articles\/how-much-does-brick-veneer-cost.htm. \n* The link above lets us know, that stone MasVnr is costlier than brick. Always verify!","3e89d802":"**BsmtFinType1: Rating of basement finished area, the  missing value is imputed based on the basement quality.**\n","8f6e6f5e":"**BsmtFinType2: Rating of basement finished area (if multiple types), the  missing value is imputed based on the mode value.**\n","30e6711a":"### Dataset Description\n\n* Load the text to read about the dataset's feature and target variable. It will given an eventual idea about whether the feature is categorical or numeric. ","e588211e":"**GarageType, the missing value is imputed based on Sale Price**","e2275926":"**First thing first, keep aside the target variable as y, don't drop the target from train before analysis. Since the problem statement is Sales Price of a House, the material cost both in quality and quantity, or size of the area will highly correlate with sale price.**","2245db9c":"**Electrical, the missing value is imputed based on the mode of the column.**","ff8d7d77":"**Garage Quality, missing value is based on Sale Price**","4c07ea3e":"**Impute the Basement quality based on Sale Price**","fd501f4f":"### Records where MasVnrType is null.","78f7533a":"**Impute Value for MasVnrArea based on MasVnrType and Frequency count.**","8bbab164":"### Imputing value for test data\n\n**Since we could see, how an independent variable is affected by the sale price in training data. We need different analysis for imputing value.**\n\n**MSZoning, the missing value is imputed based on the MSSubclass**","41429f8d":"### Loading Packages ","c362824f":"### Find the no. of null value in a feature.","4c3788ac":"### Find mean sale price of a feature. It works well on categorical data, where limited options are available.","c78c82b7":"**Based on correlation between MasVnr with sale price, we can impute MasVnr type value.** \n   > For instance, Id=1244, the sales price is 465000, which is very high compared to other records, while above we have seen that MasVnrType Stone has average of saleprice of 265583.625000.\n","5f4542d0":"**For MasVnrArea, we can impute value based on whats the average sales price based on MasVnrType.**","ebf3f2d8":"### Dependent and Independent Variable\n\n* The data is split equally between train and test. There are 80 features (Independent) in the dataset with one target (Dependent) continous variable.","02d58f38":"**Basement Exposure value is imposed based on Sale Price.**","bf360aaa":"**Checking for correlation between **\n    * MasVnrType vs MasVnrArea \n    * MasVnrArea vs SalePrice\n **Not a surprising correlation here because as the area increases the sale price is increased.**","0a689994":"**Normalization\/Standard Scalar**","61c8abea":"**Identify the Numeric Columns in the dataset**","8eba3f45":"**Basement Condition is imputed based on Sale Price.**","99d2fbd7":"### Loading Data","7097e5a9":"**Identify columns both in training and testing set, where columns with less than 100 missing values are present and impute values in each accordingly.**"}}