{"cell_type":{"db677e6c":"code","3059aa3b":"code","489de4d5":"code","56a4a118":"code","94a71817":"code","23d220c8":"code","c94f0a66":"code","6785eca4":"code","a23f5444":"code","6b40f6aa":"code","b44bb323":"code","ddfa8a68":"code","f15409c7":"code","f932c8ca":"markdown","cb0c6358":"markdown","8130fd10":"markdown","fe4eabf3":"markdown"},"source":{"db677e6c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \nimport seaborn as sns \n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3059aa3b":"# Loading the dataset using pandas \ndf = pd.read_csv('\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv')\ndf.head()","489de4d5":"# Accessing the insightful information of the dataset \ndf.info()","56a4a118":"# Accessing statistical data related to the dataset \ndf.describe()","94a71817":"# Getting the Rows * Columns Shape.\nprint(f'No of rows are {df.shape[0]} and No of Columns are {df.shape[1]} in the dataset.')","23d220c8":"# Checking for NaN\/null values \ndf.isnull().sum()","c94f0a66":"# Seperating the categorical and numerical columns for encoding the categorical columns.\ns = (df.dtypes == 'object')\nobject_cols = s[s].index \n\ni = (df.dtypes == 'int64')\nint_cols = i[i].index \n\nprint(f'Object Variables : {object_cols}')\nprint(f'Integer Variables: {int_cols}')","6785eca4":"# Checking unique values of categorical variables.\n\nfor column in object_cols : \n    print(f'{column} : {df[column].unique()}')","a23f5444":"# Creating a new column total score \ndf['total score'] = df['math score'] + df['reading score'] + df['writing score']\ndf.head()","6b40f6aa":"# Checking gender vs total score using barplot \nplt.figure(figsize = (10,6))\nsns.barplot(x = 'gender' , y = 'total score' , data = df)","b44bb323":"plt.figure(figsize = (10,6))\nsns.barplot(x = 'parental level of education' , y = 'total score' ,hue = 'gender' ,  data = df)","ddfa8a68":"plt.figure(figsize = (10,6))\nsns.barplot(x = 'race\/ethnicity' , y = 'total score' ,hue = 'gender' ,  data = df)","f15409c7":"plt.figure(figsize = (10,6))\nsns.barplot(x = 'test preparation course' , y = 'total score' , hue = 'gender' , data = df)","f932c8ca":"<h4>Above charts gives us the insight that the students who have completed test preparation course score more marks than the other students and the female students as usual scored more than male students.<\/h4>","cb0c6358":"<h4>Above charts gives us the insight that female students scores more than male students regardless of the education level of there parents and the highest scores are of the students who's parents has either a bachelor's degree or a master's degree<\/h4>","8130fd10":"<h4>Above charts gives us the insight that female students scored a little bit more marks than male students.<\/h4>","fe4eabf3":"<h4>Above charts gives us the insight that students who are from group D and E ethnicity or race scores a little bit more marks than students of other three groups.<\/h4>"}}