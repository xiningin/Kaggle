{"cell_type":{"24658eb5":"code","b2d2b333":"code","283a21a0":"code","7fe11dd9":"code","c7d15f69":"code","2674fea8":"code","1a7c8594":"code","d8f5908f":"code","68ae80b7":"code","fe736d6c":"code","ac83c669":"code","d735d9b8":"code","2e9f0e4f":"code","1bf5349d":"code","429a15b8":"code","a028dce4":"code","5d2f92ca":"code","81633a04":"code","33bfd763":"code","2587d6a5":"code","c22e9337":"code","286e812f":"code","eb60411c":"code","5e54804c":"code","89550a5d":"code","61ad2636":"code","573b2f11":"code","e1a22fe6":"code","d7681009":"code","ac466c40":"code","4cc7090d":"code","2f1a007d":"code","51caaea4":"code","87858e53":"code","81a24ef6":"code","ac71df61":"code","f03d6f1b":"code","7d1e5365":"code","568dddc7":"code","40ad28b7":"code","510dc6a0":"code","e342f2b1":"code","4105b680":"code","f545722e":"code","78ac027f":"code","0ff93ef6":"code","506e83fb":"code","203b242c":"code","fda4e479":"code","91756315":"code","41256f0f":"code","d6268ab9":"code","04b1b18f":"code","f52c1cfa":"code","9946f257":"code","7c7d465d":"code","d80bcb08":"code","655db72b":"code","cb6926f4":"code","def90c91":"code","7011e5b7":"code","f953a1dc":"code","b24e59d2":"code","7ef3b6c3":"code","3f8b09b7":"code","8ab9b03b":"code","34515192":"code","a6abe7f4":"code","b9356ba2":"code","bdef2d31":"code","85704097":"code","6bbfdb09":"code","f114b268":"code","b7e8e912":"code","68712691":"code","9c6d1151":"code","b3154ca9":"code","2f0277ee":"code","7ba22b4d":"code","434a4420":"code","7cf48348":"code","336e00a7":"code","a96cf600":"code","5337c6fd":"code","77659879":"code","00fe3ccb":"code","d2c8a645":"code","db5de106":"code","9b412ca3":"code","05a66092":"code","f1c39d8a":"code","54b6f9c3":"code","0216a328":"code","174439d7":"code","30f2e395":"code","4ae19ceb":"code","6f7325dd":"markdown","7fbd9ab4":"markdown","493cbd01":"markdown","bde2db14":"markdown","7fa19ebc":"markdown","4ee01db0":"markdown","28b37418":"markdown","ec3a7cbb":"markdown","c60a1dad":"markdown","ba1d3f2e":"markdown","66669df2":"markdown","8e33a416":"markdown","32f3c318":"markdown","2fb15890":"markdown","9d608e35":"markdown","ccef322c":"markdown","9d147e64":"markdown","064da2f1":"markdown","c70e84d4":"markdown","0c2edc35":"markdown","d7f01fd3":"markdown","e1a37141":"markdown","4580258d":"markdown","9aa7d8f7":"markdown","5dd5f9ef":"markdown","263ceeee":"markdown","419ef75f":"markdown","21314cd8":"markdown","2db4331c":"markdown","713cae23":"markdown","e4bbe78f":"markdown","7ae4bba9":"markdown","99293781":"markdown","f8c5d28e":"markdown","60f6d4ae":"markdown","30afc103":"markdown","04709bcd":"markdown","b96d60ba":"markdown","6592aa86":"markdown","2fbc4dbf":"markdown","752b7bce":"markdown","41085a58":"markdown","2f587c76":"markdown","3c376807":"markdown","91937c3c":"markdown","f98486be":"markdown","10f24f31":"markdown","18989e94":"markdown","6276fab6":"markdown","9d386774":"markdown","2abc1b54":"markdown","bb7034ee":"markdown","0c8bed88":"markdown","f44a995c":"markdown","076ddd09":"markdown","7686f7e9":"markdown","82fce46b":"markdown","9ba49fe8":"markdown","fadc9934":"markdown","f7a2887c":"markdown","9395a07f":"markdown","bc27f5d0":"markdown","132ad7f2":"markdown","9137b8bc":"markdown","bc2df281":"markdown","cefaa92c":"markdown","6353fc60":"markdown","9dda8a97":"markdown","da0e7cf8":"markdown","5390ebe5":"markdown","e20e273a":"markdown","92e2351c":"markdown","2acc1ab0":"markdown","8ed14078":"markdown","f9e2e4aa":"markdown","4935235b":"markdown","8f638be6":"markdown","afcd0e06":"markdown","73b8e8ea":"markdown","11f67dd5":"markdown","138d5d55":"markdown","b11fe1ed":"markdown","6ea99526":"markdown","603fcb42":"markdown","3ee0c432":"markdown","dcc8348c":"markdown","34253b65":"markdown","1911480b":"markdown","06bd9aad":"markdown","628925dc":"markdown","86393e86":"markdown","245003c3":"markdown","ea765b0b":"markdown","f259ecfa":"markdown","47eba3dc":"markdown","10ba5b8e":"markdown","c697280c":"markdown","eab06b38":"markdown","7309078f":"markdown","a1f7888b":"markdown","088263cc":"markdown","ee413e1c":"markdown","40635e5f":"markdown","fb3241d0":"markdown","005efc89":"markdown","99dc3df1":"markdown","e4c3ad48":"markdown","949c07c7":"markdown","d9c1193c":"markdown"},"source":{"24658eb5":"!pip install sklearn_pandas","b2d2b333":"!pip install --user yellowbrick","283a21a0":"import numpy as np\n\nimport pandas as pd\n\nfrom matplotlib import pyplot as plt\n\nimport seaborn as sns\n\nimport plotly.express as px\n\nfrom sklearn.preprocessing import PowerTransformer\nfrom sklearn.decomposition import PCA\nfrom sklearn.cluster import KMeans\nfrom yellowbrick.cluster import SilhouetteVisualizer\n\nfrom sklearn_pandas import DataFrameMapper, gen_features\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n%matplotlib inline\nsns.set_theme()","7fe11dd9":"PALETTE = sns.color_palette(\"Set2\")","c7d15f69":"sns.set_context(\"paper\", rc={\"font.size\":12, \n                             \"figure.titlesize\":18, \n                             \"axes.titlesize\":15, \n                             \"axes.labelsize\":13, \n                             \"xtick.labelsize\": 13,\n                             \"ytick.labelsize\": 13,\n                             \"legend.fontsize\": 9,\n                             \"legend.title_fontsize\": 11}) ","2674fea8":"data = pd.read_csv('..\/input\/customer-personality-analysis\/marketing_campaign.csv', sep='\\t', \n                   index_col='ID', \n                   parse_dates=['Dt_Customer'])","1a7c8594":"data.head(10)","d8f5908f":"data.info()","68ae80b7":"data['Z_Revenue'].value_counts()","fe736d6c":"data['Z_CostContact'].value_counts()","ac83c669":"data.drop(columns=['Z_Revenue', 'Z_CostContact'], inplace=True)","d735d9b8":"data[data.duplicated(keep=False)].sort_values(by='Income')","2e9f0e4f":"data[data.duplicated(keep='first')]","1bf5349d":"data.drop_duplicates(inplace=True)","429a15b8":"print('The last day a client was enrolled is ', data['Dt_Customer'].dt.date.max())","a028dce4":"data.insert(1, 'Age', 2016 - data['Year_Birth'])\ndata.insert(2, 'CustomerFor', (np.datetime64('2016-12-07') - data['Dt_Customer']).dt.days)","5d2f92ca":"data.drop(columns=['Dt_Customer', 'Year_Birth'], inplace=True)","81633a04":"plt.figure(figsize=(24, 6))\nplt.title('Clients age distribution')\nax = sns.histplot(data['Age'].sort_values(), bins=26)\nsns.rugplot(data=data['Age'], height=.05)\nplt.xticks(np.linspace(data['Age'].min(), data['Age'].max(), 26, dtype=int, endpoint = True))\nplt.show()","33bfd763":"data.query('Age > 110')","2587d6a5":"plt.figure(figsize=(16,5))\nplt.title(f'Customers income boxplot')\nax = sns.boxplot(data['Income'], palette=PALETTE)\nplt.show()","c22e9337":"data.query('Income > 140000')","286e812f":"plt.figure(figsize=(24, 6))\nplt.title('Customers yearly household income distribution')\nax = sns.distplot(data.query('Income < 150000')['Income'], rug=True)\n\nplt.show()","eb60411c":"print(f'There are {data[\"Income\"].isna().sum()} missing Income values')","5e54804c":"data['Income'].fillna(data['Income'].median(), inplace=True)","89550a5d":"data['Education'].value_counts()","61ad2636":"data['Education'].replace(['2n Cycle', 'Graduation'], \n                          ['Master', 'Bachelor'], inplace=True)","573b2f11":"sizes = dict(data['Education'].value_counts())\n\nplt.figure(figsize=(12, 8))\nplt.title(\"Education degrees proportion\")\nplt.pie(sizes.values(), labels=sizes.keys(), autopct=\"%.1f%%\", pctdistance=0.85, shadow=True, colors=PALETTE)\nplt.legend(title=\"Client's eduation\", labels=sizes.keys(), bbox_to_anchor=(1, 1))\n\n# add a circle at the center to transform it in a donut chart\nmy_circle=plt.Circle( (0,0), 0.7, color='white')\np=plt.gcf()\np.gca().add_artist(my_circle)\n\nplt.show()","e1a22fe6":"plt.figure(figsize=(18, 6))\nsns.boxplot(data=data.query('Income < 500000'), x='Education', y='Income', palette=PALETTE, showfliers=False,)\nplt.title('Customers income by education degree')\n\nplt.show()","d7681009":"data['Marital_Status'].value_counts()","ac466c40":"data['Marital_Status'].replace(['YOLO', 'Absurd', 'Alone'], 'Single', inplace=True)","4cc7090d":"sizes = dict(data['Marital_Status'].value_counts())\n\nplt.figure(figsize=(12, 8))\nplt.title(\"Marital statuses proportion\")\nplt.pie(sizes.values(), labels=sizes.keys(), autopct=\"%.1f%%\", pctdistance=0.85, shadow=True, colors=PALETTE)\nplt.legend(title=\"Client's marital status\", labels=sizes.keys(), bbox_to_anchor=(1, 1))\n\n# add a circle at the center to transform it in a donut chart\nmy_circle=plt.Circle( (0,0), 0.7, color='white')\np=plt.gcf()\np.gca().add_artist(my_circle)\n\nplt.show()","2f1a007d":"data['HasPartner'] = data[\"Marital_Status\"].replace({'Single': 'No', \n                                                      'Widow': 'No',\n                                                      'Divorced': 'No',\n                                                      'Together': 'Yes',\n                                                      'Married': 'Yes'})","51caaea4":"sizes = dict(data['HasPartner'].value_counts())\n\nplt.figure(figsize=(12, 8))\nplt.title(\"Does the customer has a partner\")\nplt.pie(sizes.values(), labels=sizes.keys(), autopct=\"%.1f%%\", pctdistance=0.85, shadow=True, colors=PALETTE)\n\nplt.show()","87858e53":"data['Kidhome'].value_counts()","81a24ef6":"data['Teenhome'].value_counts()","ac71df61":"data['NumChildren'] = data['Kidhome'] + data['Teenhome']\ndata['HasChildren'] = (data['NumChildren'] >= 1).astype('int64')","f03d6f1b":"sizes = dict(data['NumChildren'].value_counts())\n\nplt.figure(figsize=(12, 8))\nplt.title(\"Number of children in customers households\")\nplt.pie(sizes.values(), labels=sizes.keys(), autopct=\"%.1f%%\", pctdistance=0.85, shadow=True, colors=PALETTE)\nplt.legend(title=\"Number of children\", labels=sizes.keys(), bbox_to_anchor=(1, 1))\n\n# add a circle at the center to transform it in a donut chart\nmy_circle=plt.Circle( (0,0), 0.7, color='white')\np=plt.gcf()\np.gca().add_artist(my_circle)\n\nplt.show()","7d1e5365":"plt.figure(figsize=(18, 6))\nax = sns.boxplot(data=data.query('Income < 500000'), x='HasChildren', y='Income', palette=PALETTE, showfliers=False)\nplt.title('Customers income depending on having children')\nax.set_xticklabels(['No', 'Yes'])\nax.set_xlabel('Does the customer has children')\n\nplt.show()","568dddc7":"plt.figure(figsize=(18, 6))\nax = sns.boxplot(data=data.query('Income < 500000'), x='HasPartner', y='Income', palette=PALETTE, showfliers=False)\nplt.title('Customers income depending on having a partner')\nax.set_xticklabels(['No', 'Yes'])\nax.set_xlabel('Does the customer has partner')\n\nplt.show()","40ad28b7":"mnt = data.filter(like='Mnt').apply(lambda x: sum(x), axis=0)","510dc6a0":"sizes = dict(mnt)\n\nplt.figure(figsize=(12, 8))\nplt.title(\"Amount spent on different types of products\")\nplt.pie(sizes.values(), labels=['Wine', 'Fruits', 'Meat',\n                                'Fish', 'Sweets', 'Gold'], autopct=\"%.1f%%\", pctdistance=0.85, shadow=True, colors=PALETTE)\nplt.legend(title=\"Product type\", labels=['Wine', 'Fruits', 'Meat',\n                                         'Fish', 'Sweets', 'Gold'], bbox_to_anchor=(1, 1))\n\n# add a circle at the center to transform it in a donut chart\nmy_circle=plt.Circle( (0,0), 0.7, color='white')\np=plt.gcf()\np.gca().add_artist(my_circle)\n\nplt.show()","e342f2b1":"data['MntTotal'] = data.filter(like='Mnt').sum(axis=1)","4105b680":"data = data.assign(\n        percentWines=lambda x: x['MntWines'] \/ x['MntTotal'] * 100,\n        percentMeat=lambda x: x['MntMeatProducts'] \/ x['MntTotal'] * 100,\n        percentFruits=lambda x: x['MntFruits'] \/ x['MntTotal'] * 100,\n        percentFish=lambda x: x['MntFishProducts'] \/ x['MntTotal'] * 100,\n        percentSweets=lambda x: x['MntSweetProducts'] \/ x['MntTotal'] * 100,\n        percentGold=lambda x: x['MntGoldProds'] \/ x['MntTotal'] * 100,\n)","f545722e":"fig, axes = plt.subplots(4, 6, figsize=(16, 15), sharey=True)\nfig.suptitle('Percent of amount spent on each product type from total amount spent by education', fontsize=20)\n\nfor i, value in enumerate(data['Education'].unique()):\n    sns.boxplot(data=data.query(f'Education == \"{value}\"'), y='percentWines', showfliers=False, color=PALETTE[i], ax=axes[i, 0])\n    axes[i, 0].set_ylim(0, 100)\n    axes[i, 0].set_xlabel('Wine')\n    axes[i, 0].set_ylabel('')\n    \n    sns.boxplot(data=data.query(f'Education == \"{value}\"'), y='percentMeat', showfliers=False, color=PALETTE[i], ax=axes[i, 1])\n    axes[i, 1].set_xlabel('Meat')\n    axes[i, 1].set_ylabel('')\n    \n    sns.boxplot(data=data.query(f'Education == \"{value}\"'), y='percentFruits', showfliers=False, color=PALETTE[i], ax=axes[i, 2])\n    axes[i, 2].set_xlabel('Fruits')\n    axes[i, 2].set_ylabel('')\n    axes[i, 2].set_title(f'{value}', x=1)\n    \n    sns.boxplot(data=data.query(f'Education == \"{value}\"'), y='percentFish', showfliers=False, color=PALETTE[i], ax=axes[i, 3])\n    axes[i, 3].set_xlabel('Fish')\n    axes[i, 3].set_ylabel('')\n    \n    sns.boxplot(data=data.query(f'Education == \"{value}\"'), y='percentSweets', showfliers=False, color=PALETTE[i], ax=axes[i, 4])\n    axes[i, 4].set_xlabel('Sweets')\n    axes[i, 4].set_ylabel('')\n    \n    sns.boxplot(data=data.query(f'Education == \"{value}\"'), y='percentGold', showfliers=False, color=PALETTE[i], ax=axes[i, 5])\n    axes[i, 5].set_xlabel('Gold')\n    axes[i, 5].set_ylabel('')\n    \nplt.tight_layout()","78ac027f":"plt.figure(figsize=(18, 6))\nax = sns.boxplot(data=data, x='Education', y='MntTotal', palette=PALETTE)\nplt.title('Customers amount spent depending on an education degree')\n\nplt.show()","0ff93ef6":"plt.figure(figsize=(18, 6))\nax = sns.boxplot(data=data, x='HasChildren', y='MntTotal', palette=PALETTE)\nplt.title('Customers amount spent depending on having children')\nax.set_xticklabels(['No', 'Yes'])\nax.set_xlabel('Does the customer has children')\n\nplt.show()","506e83fb":"num = data.filter(regex='Num[^Deals].+Purchases').sum(axis=0)","203b242c":"sizes = dict(num)\n\nplt.figure(figsize=(12, 8))\nplt.title(\"Shopping types proportions\")\nplt.pie(sizes.values(), labels=['Website', 'Catalog', 'Store'], autopct=\"%.1f%%\", pctdistance=0.85, shadow=True, colors=PALETTE)\nplt.legend(title=\"Purchased at\", labels=['Website', 'Catalog', 'Store'], bbox_to_anchor=(1, 1))\n\nplt.show()","fda4e479":"fig, axes= plt.subplots(2, 1, figsize=(18, 13))\n\nsns.boxplot(data=data, x='Education', y='NumWebVisitsMonth', palette=PALETTE, showfliers=False, ax=axes[0])\naxes[0].set_title('Number of website visits per month depending on education degree')\naxes[0].set_xlabel('')\n\nsns.boxplot(data=data, x='Education', y='NumWebPurchases', palette=PALETTE, showfliers=False, ax=axes[1])\naxes[1].set_title('Number of web purchases depending on education degree')\naxes[1].set_xlabel('')\n\nplt.show()","91756315":"fig, axes= plt.subplots(2, 1, figsize=(18, 12))\n\nsns.boxplot(data=data, x='HasChildren', y='NumWebVisitsMonth', palette=PALETTE, showfliers=False, ax=axes[0])\naxes[0].set_title('Number of website visits per month depending on having children')\naxes[0].set_xlabel('')\naxes[0].set_xticklabels(['No children', 'One or more chidren'])\n\nsns.boxplot(data=data, x='HasChildren', y='NumWebPurchases', palette=PALETTE, showfliers=False, ax=axes[1])\naxes[1].set_title('Number of web purchases depending on having children')\naxes[1].set_xlabel('')\naxes[1].set_xticklabels(['No children', 'One or more chidren'])\n\nplt.show()","41256f0f":"data['NumTotalPurchases'] = data.filter(regex='Num[^Deals].+Purchases').sum(axis=1)","d6268ab9":"data.loc[(data['NumTotalPurchases'] == 0) & (data['MntTotal'] != 0)]","04b1b18f":"data.drop(data.loc[(data['NumTotalPurchases'] == 0) & (data['MntTotal'] != 0)].index, inplace=True)","f52c1cfa":"plt.figure(figsize=(16, 6))\nplt.title('Customer for vs number of purchases')\nsns.scatterplot(data=data, x='CustomerFor', y='NumTotalPurchases', alpha=0.5)\nplt.xlabel('Customer for (days)')\nplt.ylabel('Total number of purchases')\nplt.show()","9946f257":"data['AvgCheck'] = data['MntTotal'] \/ data['NumTotalPurchases']","7c7d465d":"plt.figure(figsize=(16,5))\nplt.title(f'Customers purchase frequency boxplot (days)')\nax = sns.boxplot(data.query('AvgCheck < 1600')['AvgCheck'], palette=PALETTE)\nplt.xticks(np.linspace(0, 250, 11, dtype=int))\nplt.show()","d80bcb08":"data.query('AvgCheck > 1500')","655db72b":"data['AcceptedTotal'] = data.filter(regex='Accepted|Response').sum(axis=1)","cb6926f4":"plt.figure(figsize=(18, 6))\n\nax = sns.countplot(data['AcceptedTotal'], palette=PALETTE)\n\nplt.title('Number of accepted campaigns by customers')\nplt.xlabel('Accepted total')\n\n# annotating the bars\nfor p in ax.patches:\n    ax.annotate(f'{p.get_height()}', (p.get_x()+0.30, p.get_height()+3))","def90c91":"total = data.groupby('AcceptedTotal').sum().reset_index()","7011e5b7":"total","f953a1dc":"plt.figure(figsize=(10, 10))\n\naccepted_data = pd.Series({i: 0 for i in range(6)})\ntmp_data = accepted_data\nfor i, value in enumerate(data['Education'].unique()):\n    tmp_data += accepted_data\n    accepted_data = (data.query(f'Education == \"{value}\"')['AcceptedTotal'].value_counts()\n                                                                           .divide(data['AcceptedTotal'].value_counts())\n                                                                           .multiply(100))\n    ax = accepted_data.plot(kind='bar', bottom=tmp_data, color=PALETTE[i], label=f'{value}')\n\ndel tmp_data\n\nax.set_xticklabels(ax.get_xticklabels(), rotation=0)\nplt.title('Number of accepted campaigns proportion by education degree', y=1.05)\nplt.xlabel('Number of accepted campaigns')\nplt.ylabel('%')\nplt.legend(bbox_to_anchor=(1,1))\n\nplt.show()","b24e59d2":"plt.figure(figsize=(10, 10))\n\naccepted_data = pd.Series({i: 0 for i in range(6)})\ntmp_data = accepted_data\nfor i, value in enumerate(data['HasChildren'].unique()):\n    tmp_data += accepted_data\n    accepted_data = (data.query(f'HasChildren == {value}')['AcceptedTotal'].value_counts()\n                                                                           .divide(data['AcceptedTotal'].value_counts())\n                                                                           .multiply(100))\n    ax = accepted_data.plot(kind='bar', bottom=tmp_data, color=PALETTE[i], label=f'{value}')\n\ndel tmp_data\n\nax.set_xticklabels(ax.get_xticklabels(), rotation=0)\nplt.title('Number of accepted campaigns proportion by having children', y=1.05)\nplt.xlabel('Number of accepted campaigns')\nplt.ylabel('%')\nplt.legend(['Customers without children', 'Customers with one or more children'], bbox_to_anchor=(1,1))\n\nplt.show()","7ef3b6c3":"data_cleaned = data.drop(data[(data['Income'] > 140000) |\n                              (data['Age'] > 100) |\n                              (data['AvgCheck'] > 150)].index)","3f8b09b7":"data_cleaned","8ab9b03b":"NUMERICAL_FEATURES = ['Age', 'Income', 'NumChildren', 'CustomerFor', \n                      'Recency', 'MntWines', 'MntTotal', \n                      'NumTotalPurchases', 'AcceptedTotal', 'AvgCheck']","34515192":"sns.pairplot(data=data_cleaned[NUMERICAL_FEATURES], \n             kind='scatter', plot_kws={'alpha':0.3})\nplt.show()","a6abe7f4":"corr_matr = data_cleaned[NUMERICAL_FEATURES].corr(method='pearson')\nplt.figure(figsize=(10,10))\nsns.heatmap(corr_matr, annot=True, cmap='coolwarm', square=True)\nplt.title(\"Pearson's correlation heatmap\")\nplt.show()","b9356ba2":"data.info()","bdef2d31":"SELECTED_FEATURES = ['AvgCheck', 'Income', 'NumTotalPurchases', 'MntTotal']","85704097":"scaler = gen_features(\n    columns = [[c] for c in SELECTED_FEATURES],\n    classes=[{'class': PowerTransformer, 'method': 'box-cox'}]\n)","6bbfdb09":"scaling_mapper = DataFrameMapper(scaler, default=None, df_out=True)\ndata_cleaned_scaled = scaling_mapper.fit_transform(data_cleaned)\ndata_scaled = scaling_mapper.transform(data)","f114b268":"data_cleaned_scaled","b7e8e912":"g = sns.pairplot(data=data_cleaned_scaled[SELECTED_FEATURES], \n             kind='scatter')\ng.fig.suptitle('Selected features after scaling')\n\nplt.tight_layout()","68712691":"options = range(2,9)\ninertias = []\n\nfor n_clusters in options:\n    model = KMeans(n_clusters, random_state=42, init='k-means++').fit(data_cleaned_scaled[SELECTED_FEATURES])\n    inertias.append(model.inertia_)\n\nplt.figure(figsize=(20,10))    \nplt.title(\"The elbow rule visualisation\")\nplt.plot(options, inertias, '-o')\nplt.xlabel('Number of clusters (k)')\nplt.ylabel('Inertia');","9c6d1151":"k_range = range(2, 6)\nfig, axes = plt.subplots(4, 1, figsize=(10, 18))\n\nfor i in k_range:   \n    model = KMeans(i, init='k-means++', n_init=100, random_state=42)\n    visualizer = SilhouetteVisualizer(model, colors='yellowbrick', ax=axes[i-2])\n    visualizer.fit(data_cleaned_scaled[SELECTED_FEATURES])\n    visualizer.finalize()\n    axes[i-2].set_xlim(-0.1, 1)\n    \nplt.tight_layout()\n","b3154ca9":"kmeans = KMeans(n_clusters=4, init='k-means++', random_state=42)\nkmeans.fit(data_cleaned_scaled[SELECTED_FEATURES])\n\npred = kmeans.predict(data_cleaned_scaled[SELECTED_FEATURES])\n\ndata_cleaned_clustered = data_cleaned.copy()\ndata_cleaned_clustered['Cluster'] = pred + 1","2f0277ee":"fig = px.scatter_3d(data_cleaned_clustered, x=\"Income\", y=\"AvgCheck\", z=\"MntTotal\", color='Cluster', width=800, height=800)\nfig.show()\n","7ba22b4d":"pca = PCA(n_components=2)\npca_data = pca.fit_transform(data_cleaned_scaled[SELECTED_FEATURES])\npca_df = pd.DataFrame.from_records(data=pca_data, columns=[\"x1\",\"x2\"])\npca_df[\"Cluster\"] = pred + 1","434a4420":"fig = px.scatter(pca_df, x=\"x1\", y=\"x2\", color='Cluster', width=800, height=800)\nfig.show()","7cf48348":"pca.explained_variance_ratio_","336e00a7":"pca.explained_variance_ratio_.sum()","a96cf600":"full_preds = kmeans.predict(data_scaled[SELECTED_FEATURES])\ndata_clustered = data.copy()\ndata_clustered['Cluster'] = full_preds + 1","5337c6fd":"data_clustered","77659879":"sizes = dict(data_clustered['Cluster'].value_counts())\n\nplt.figure(figsize=(12, 8))\nplt.title(\"Clusters proportions\")\nplt.pie(sizes.values(), labels=sorted(sizes.keys()), autopct=\"%.1f%%\", pctdistance=0.85, shadow=True, colors=PALETTE)\nplt.legend(title=\"Customer's cluster\", labels=sorted(sizes.keys()), bbox_to_anchor=(1, 1))\n\n# add a circle at the center to transform it in a donut chart\nmy_circle=plt.Circle( (0,0), 0.7, color='white')\np=plt.gcf()\np.gca().add_artist(my_circle)\n\nplt.show()","00fe3ccb":"plt.figure(figsize=(16,5))\nplt.title(f'Customers income by cluster')\nax = sns.boxplot(data=data_clustered, x='Cluster', y='Income', palette=PALETTE, showfliers=False)\nplt.show()","d2c8a645":"data_clustered.query('Income > 140000')","db5de106":"plt.figure(figsize=(16,5))\nplt.title(f'Customers amount spent by clusters')\nax = sns.boxplot(data=data_clustered, x='Cluster', y='AvgCheck', palette=PALETTE, showfliers=False)\nplt.show()","9b412ca3":"plt.figure(figsize=(16,5))\nplt.title(f'Customers amount spent by clusters')\nax = sns.boxplot(data=data_clustered, x='Cluster', y='NumTotalPurchases', palette=PALETTE, showfliers=False)\nplt.show()","05a66092":"plt.figure(figsize=(16,5))\nplt.title(f'Countplot of education degrees by clusters')\nsns.countplot(data=data_clustered, x='Education', hue='Cluster', palette=PALETTE)\nplt.show()","f1c39d8a":"fig, axes = plt.subplots(2, 2, figsize=(16, 10))   \nk = 0\nfor i in range(0, 2):\n    for j in range(0, 2):\n        k += 1\n        sizes = dict(data_clustered.query(f'Cluster == {k}')['HasChildren'].value_counts().sort_index(ascending=False))\n        axes[i, j].set_title(f\"Cluster {k}\")\n        axes[i, j].pie(sizes.values(), labels=['Yes', 'No'], autopct=\"%.1f%%\", pctdistance=0.75, shadow=True, colors=PALETTE)\n\nfig.suptitle('Having children in different clusters')\nfig.legend(title=\"Does the customer have children\", labels=['Yes', 'No'], bbox_to_anchor=(1, 1)) \nfig.show()","54b6f9c3":"fig, axes = plt.subplots(2, 2, figsize=(16, 10))   \nk = 0\nfor i in range(0, 2):\n    for j in range(0, 2):\n        k += 1\n        num = data_clustered.query(f'Cluster == {k}').filter(regex='Num[^Deals|Total].+Purchases').sum(axis=0)\n        sizes = dict(num)\n        axes[i, j].set_title(f\"Cluster {k}\")\n        axes[i, j].pie(sizes.values(), labels=['Website', 'Catalog', 'Store'], autopct=\"%.1f%%\", pctdistance=0.75, shadow=True, colors=PALETTE)\n\nfig.suptitle('Shopping types proportions for each cluster')\nfig.legend(title=\"Shopping type\", labels=['Website', 'Catalog', 'Store'], bbox_to_anchor=(1, 1)) \nfig.show()","0216a328":"plt.figure(figsize=(16,5))\nplt.title(f'Number of web visits per month by clusters')\nax = sns.boxplot(data=data_clustered, x='Cluster', y='NumWebVisitsMonth', palette=PALETTE, showfliers=False)\nplt.show()","174439d7":"fig, axes = plt.subplots(4, 6, figsize=(16, 15), sharey=True)\nfig.suptitle('Percent of amount spent on each product type from total amount spent by education', fontsize=20)\n\nfor i, value in enumerate(sorted(data_clustered['Cluster'].unique())):\n    sns.boxplot(data=data_clustered.query(f'Cluster == {value}'), y='percentWines', showfliers=False, color=PALETTE[i], ax=axes[i, 0])\n    axes[i, 0].set_ylim(0, 100)\n    axes[i, 0].set_xlabel('Wine')\n    axes[i, 0].set_ylabel('')\n    \n    sns.boxplot(data=data_clustered.query(f'Cluster == {value}'), y='percentMeat', showfliers=False, color=PALETTE[i], ax=axes[i, 1])\n    axes[i, 1].set_xlabel('Meat')\n    axes[i, 1].set_ylabel('')\n    \n    sns.boxplot(data=data_clustered.query(f'Cluster == {value}'), y='percentFruits', showfliers=False, color=PALETTE[i], ax=axes[i, 2])\n    axes[i, 2].set_xlabel('Fruits')\n    axes[i, 2].set_ylabel('')\n    axes[i, 2].set_title(f'Cluster {value}', x=1)\n    \n    sns.boxplot(data=data_clustered.query(f'Cluster == {value}'), y='percentFish', showfliers=False, color=PALETTE[i], ax=axes[i, 3])\n    axes[i, 3].set_xlabel('Fish')\n    axes[i, 3].set_ylabel('')\n    \n    sns.boxplot(data=data_clustered.query(f'Cluster == {value}'), y='percentSweets', showfliers=False, color=PALETTE[i], ax=axes[i, 4])\n    axes[i, 4].set_xlabel('Sweets')\n    axes[i, 4].set_ylabel('')\n    \n    sns.boxplot(data=data_clustered.query(f'Cluster == {value}'), y='percentGold', showfliers=False, color=PALETTE[i], ax=axes[i, 5])\n    axes[i, 5].set_xlabel('Gold')\n    axes[i, 5].set_ylabel('')\n    \nplt.tight_layout()","30f2e395":"fig, axes = plt.subplots(4, 1, figsize=(16, 20))\n\nfor i in range(1, 5):\n    ax = (data_clustered.query(f'Cluster == {i}')[['AcceptedCmp1', 'AcceptedCmp2', 'AcceptedCmp3', 'AcceptedCmp4', 'AcceptedCmp5', 'Response']]\n          .sum() \n          .divide(data_clustered.query(f'Cluster == {i}').shape[0]).multiply(100)\n          .plot(kind='bar', figsize=(18,15), title=f'% of customers from Cluster {i} accepted different campaigns', ax=axes[i-1], color=PALETTE[i-1]))\n    ax.set_xticklabels(['Campaign 1', 'Campaign 2', 'Campaign 3', 'Campaign 4', 'Campaign 5', 'Last campaign'], rotation=0)\n    \nplt.tight_layout()","4ae19ceb":"complains_by_cluster = (data_clustered.groupby(by='Cluster')['Complain'].sum()\n                                      .divide(data_clustered['Cluster'].value_counts())\n                                      .multiply(100))\n\nax = complains_by_cluster.plot(kind='bar', figsize=(18, 8), color=PALETTE[:4], \n                               title='Percent of complained customers for the last 2 years in different clusters',\n                               ylabel='%', xlabel='Cluster')\nax.set_xticklabels(ax.get_xticklabels(), rotation=0)\n\nplt.show()","6f7325dd":"The feature selected are correlated, but i guess this is not really a problem in k means clustering ([source](https:\/\/www.quora.com\/What-happens-when-you-pass-correlated-variables-to-a-k-means-clustering-Also-is-there-a-way-by-which-clustering-can-be-used-to-group-similar-pattern-observed-for-a-variable-over-time)). In addition to that, all other uncorrelated features are not really interesting to cluster by","7fbd9ab4":"Bachelor, PhD and Master degrees Income is around the same, but the Basic degree Income is definetly lower than others","493cbd01":"__Silver customers:__\n- Medium income\n- Medium average check\n- Medium frequency buyers\n- Mostly parents\n- Mostly buy from: store and website\n- The most successful campaigns: 3, the last\n- The least successful campaigns: 1, 2, 5 (0 acceptance in 2 and 5 campaigns)","bde2db14":"__Bronze customers:__\n- Low income\n- Low average check\n- Low frequency buyers\n- Mostly parents\n- There some undergraduates in this cluster\n- Mostly buy from: store and website\n- Visit the site the most\n- The most successful campaigns: 3, the last\n- The least successful campaigns: 1, 2, 4, 5 (0 acceptance in 2 and 5 campaigns)\n- Complain the most","7fa19ebc":"sns.set_context(\"paper\", rc={\"font.size\":12, \n                             \"figure.titlesize\":18, \n                             \"axes.titlesize\":15, \n                             \"axes.labelsize\":13, \n                             \"xtick.labelsize\": 13,\n                             \"ytick.labelsize\": 13,\n                             \"legend.fontsize\": 9,\n                             \"legend.title_fontsize\": 11}) # EDA","4ee01db0":"There are really old customers ._.\n\nI think they are missclicked or something while entering year of birth. Everything else looks okay, so i will drop them out while training the model, but will include them in the dataset to predict","28b37418":"__Platinum customers:__\n- Very high income\n- Very high average check\n- Frequent buyers\n- Mostly single\n- Mostly buy from: store and catalog, but the website is also good\n- The most successful campaigns: 1, 5, the last\n- The least successful campaigns: 2\n- Rarely visit the site","ec3a7cbb":"The feature `NumTotalPurchases` is the sum of all purchases made by a customer","c60a1dad":"# Data preprocessing","ba1d3f2e":"There are mostly parents in 1, 2, 4 clusters. And customers in 3rd clusters are mostly single","66669df2":"We can see different areas of objects on some scatterplots. `MntTotal` and `NumTotalPurchases`, for instance, or `AvgCheck` and `Age`\n\nThat happens, because `NumTotalPurchases` has multimodal distribution. And `AvgCheck` calculates depending on `NumTotalPurchases` ","8e33a416":"## Number of purchases","32f3c318":"## Feature scaling","2fb15890":"1st and 4th clusters visits the website the most","9d608e35":"Customers without children have bigger income","ccef322c":"## Accepted campaigns","9d147e64":"Customers with PhD, Bachelor and Master degree mostly spend on Wine and Meat products. Also have to notice, that more than a half of PhD's spendings are Wine produts (in median)\n\nAnd Basic degree customers spend more on Gold, Fish, Sweets","064da2f1":"We can merge `Alone` to `Single` category, but `YOLO` and `Absurd` are not clear.","c70e84d4":"`AvgCheck` is the average check of the customers purchases","0c2edc35":"Seems like there is no correlation between `CustomerFor` and `NumTotalPurchases`. So i assume that information about number of purchases is also collected in the last 2 years, and we can evaluate customer's activity with `NumTotalPurchases`","d7f01fd3":"And now let's predict cluster labels on full dataset with outliers","e1a37141":"There is also one outlier with 1679 average check","4580258d":"Customers from 2nd and 3rd clusters buy from catalog more than from 1 and 4 clusters. Maybe catalog products are new products and they are pretty expensive","9aa7d8f7":"## Accepted Campaigns","5dd5f9ef":"`Wines` and `Meat` products are the most spent on","263ceeee":"## Children","419ef75f":"Let's look on the correlation between `CustomerFor` and `NumTotalPurchases`","21314cd8":"Let's introduce `MntTotal` feature, which is the total amount spent by customer in the last 2 years","2db4331c":"# Clusters analysis","713cae23":"All correlations are clear and explainable","e4bbe78f":"## Kidhome and Teenhome","7ae4bba9":"I think 4 is the optimal number of clusters. \n\nAccording to the elbow rule plot, 4 or 5 clusters could be optimal\n\nLooking on the silhouette coefficient visualisation, 4 clusters provides relatively high silhouette scores for each cluster. ","99293781":"I can assume that `YOLO` category refers to people who do not have a permanent partner, so i will merge it to `Single`","f8c5d28e":"> All countries conveyed their national systems to a two cycle structure consisting of a first (undergraduate) and a second (graduate) cycle. _Source:_ [EHEA](http:\/\/www.ehea.info\/page-three-cycle-system) ","60f6d4ae":"As long as there are only one values in both columns, i can delete them","30afc103":"There are two columns that are not mentioned in dataset decription: `Z_CostCount` and `Z_Revenue`","04709bcd":"There is no reason to consider this data invalid. But while using clutering methods, outliers can negatively affect. I'll also drop these rows while training","b96d60ba":"## First look","6592aa86":"I would rate clusters as follow:\n- Cluster 1 -> __Bronze__ customers\n- Cluster 4 -> __Silver__ customers\n- Cluster 2 -> __Gold__ customers\n- Cluster 3 -> __Platinum__ customers","2fbc4dbf":"## Context\n__Problem Statement__\n\nCustomer Personality Analysis is a detailed analysis of a company\u2019s ideal customers. It helps a business to better understand its customers and makes it easier for them to modify products according to the specific needs, behaviors and concerns of different types of customers.\n\nCustomer personality analysis helps a business to modify its product based on its target customers from different types of customer segments. For example, instead of spending money to market a new product to every customer in the company\u2019s database, a company can analyze which customer segment is most likely to buy the product and then market the product only on that particular segment.\n\n## Content\n__Attributes__\n\nPeople\n\n- ID: Customer's unique identifier\n- Year_Birth: Customer's birth year\n- Education: Customer's education level\n- Marital_Status: Customer's marital status\n- Income: Customer's yearly household income\n- Kidhome: Number of children in customer's household\n- Teenhome: Number of teenagers in customer's household\n- Dt_Customer: Date of customer's enrollment with the company\n- Recency: Number of days since customer's last purchase\n- Complain: 1 if customer complained in the last 2 years, 0 otherwise\n\nProducts\n\n- MntWines: Amount spent on wine in last 2 years\n- MntFruits: Amount spent on fruits in last 2 years\n- MntMeatProducts: Amount spent on meat in last 2 years\n- MntFishProducts: Amount spent on fish in last 2 years\n- MntSweetProducts: Amount spent on sweets in last 2 years\n- MntGoldProds: Amount spent on gold in last 2 years\n\nPromotion\n\n- NumDealsPurchases: Number of purchases made with a discount\n- AcceptedCmp1: 1 if customer accepted the offer in the 1st campaign, 0 otherwise\n- AcceptedCmp2: 1 if customer accepted the offer in the 2nd campaign, 0 otherwise\n- AcceptedCmp3: 1 if customer accepted the offer in the 3rd campaign, 0 otherwise\n- AcceptedCmp4: 1 if customer accepted the offer in the 4th campaign, 0 otherwise\n- AcceptedCmp5: 1 if customer accepted the offer in the 5th campaign, 0 otherwise\n- Response: 1 if customer accepted the offer in the last campaign, 0 otherwise\n\nPlace\n\n- NumWebPurchases: Number of purchases made through the company\u2019s web site\n- NumCatalogPurchases: Number of purchases made using a catalogue\n- NumStorePurchases: Number of purchases made directly in stores\n- NumWebVisitsMonth: Number of visits to company\u2019s web site in the last month\n\nTarget\n\n- Need to perform clustering to summarize customer segments.","752b7bce":"The features and scaling method was chosen by iterative process of evaluating different combinations with silhouette score\n\nBy the way, $Box-Cox$ transformation:\n\n![image.png](attachment:78f0f6d0-d1dc-455d-b0cf-07918192337d.png)\n\nPowerTransformer automatically select lambda by estimating through maximum likelihood.","41085a58":"And the amount spent by parents and not parents differs a lot","2f587c76":"# Clustering","3c376807":"`Graduation` and `2n Cycle` are not clear values. ","91937c3c":"The Basic degree is presented mostly in 1st cluster","f98486be":"Let's see how the Income varies across different education degrees","10f24f31":"## Income","18989e94":"Cluster 1 is the biggets cluster, around 1\/3 of all customers. Clusters 2, 3 and 4 are around same sizes","6276fab6":"__Absurd__","9d386774":"## Amount spent","2abc1b54":"PCA's eigenvectors explained variance:","bb7034ee":"And the income outliers are distributed in 3rd cluster","0c8bed88":"Let's impute this NaN's with median","f44a995c":"## Duplicates","076ddd09":"# EDA","7686f7e9":"I have no idea in which year this dataset was collected, because the dataset creator doesn't provide us with this information\n\nSo let's assume that the dataset was collected on the __next day of the last customer enrollment + 2 years__, because most of the features are aggregated for last 2 years.","82fce46b":"Now let's look on the marital statuses proportions ","9ba49fe8":"There is interesting insight that customers with `Basic` education degree have more website visits per month than others:","fadc9934":"> In philosophy, \"the Absurd\" refers to the conflict between the human tendency to seek inherent value and meaning in life, and the human inability to find these with any certainty.","f7a2887c":"__Filling nulls__","9395a07f":"## Multivariate analysis","bc27f5d0":"Average check corresponds to income of clusters, but the gap between 3rd cluster and others is huge","132ad7f2":"> YOLO (You only live once) accords to the lifestyle or trend that many young people have adopted as a way to better enjoy life, and not to think about saving up for the future. ","9137b8bc":"This graph illustrates us that the more campaigns was accepted by customers, the more likely it would be customer without children","bc2df281":"## K Means ","cefaa92c":"As we see, popular products types are the same in all clusters: wine and meat. But cluster 3 buys Meat more than others. Cluster 1 buy Gold products in addition to Wine and Meat","6353fc60":"# Import required libraries","9dda8a97":"Cluster 1 purchases less, but complains more, thats interesting","da0e7cf8":"The majority of customers didn't accepted any campaign","5390ebe5":"## Average check","e20e273a":"There are some outliers. Let's look on them.","92e2351c":"# Results","2acc1ab0":"## Marital status","8ed14078":"The model confuses cluster 2 and 3 a little, but that is not a big deal in general","f9e2e4aa":"We see that:\n\n- The biggest interest in campaign 1 showed Cluster 2 and 3\n- Campaign 2 acceptance in relatively low in any cluster\n- The biggest interest in campaign 3 showed Cluster 1\n- Campaign 4 was relatively successful in all clusters besides Cluster 1\n- The biggest interest in campaign 5 showed Cluster 3\n- The last campaign was succesfull in all clusters","4935235b":"__YOLO__","8f638be6":"## Complains","afcd0e06":"## Data related features","73b8e8ea":"__PCA visualisation__","11f67dd5":"__Gold customers:__\n- High income\n- High average check\n- Frequent buyers\n- 80% are parents\n- Mostly buy from: store and website\n- The most successful campaigns: 4, the last\n- The least successful campaigns: 2, 5","138d5d55":"Cluster 2 and 3 customers are the most active and frequent buyers, cluster 4 have medium frequency, and cluster 1 has low frequency of purchases","b11fe1ed":"The most purchases are from store","6ea99526":"# Dataset description","603fcb42":"There are 6 customers with 0 purchases, but total amount spent is not 0. Seems like incorrectly collected data, let's delete these rows.","3ee0c432":"__Age distribution__","dcc8348c":"## Income","34253b65":"Now let's check the total amount spent depending on education degrees and number of children","1911480b":"Despite that, they do not buy more on the websites. The might just monitoring the deals. So the store could publish more deals on the site to force them buy more","06bd9aad":"Cluster 1: low income\n\nCluster 2: high income\n\nCluster 3: very high income\n\nCluster 4: medium income","628925dc":"I have an idea to combine the statuses [`Single`, `Widow`, `Divorced` ] and [`Together`, `Married`], because the client, as a consumer, is better described not by a specific status, but by the presence of a partner","86393e86":"__Choosing the number of clusters__\n\nI will use the elbow rule and silhouette score visualizasion for choosing the optimal number of clusters (k)","245003c3":"We see that the most customers have 1 child","ea765b0b":"Let's analyze this features in terms of education","f259ecfa":"There are time-connected features: `Year_Birth` and `Dt_Customer`. I will transform `Year_Birth` into `Age` feature by substracting year of birth from 2016. And it also nice to transform datetime feature `Dt_Customer` into integer `CustomerFor`, which is the amount of days since customer enrollment","47eba3dc":"One eigenvector explains around 90% of variance, and that is occured because of correlated variables","10ba5b8e":"Let's add `AcceptedTotal` feature which is the number of accepted campaigns by customer","c697280c":"There are no Basic degree customers, who accepted more than 2 campaigns","eab06b38":"## Education","7309078f":"There are 358 duplicates and only 358-182 = 176 unique occurances, so there are even duplucates with 3 or more copies. I guess they are not valid, because i don't think that it could be possible to have absolutely equal customers. Equal amount spent on different types of products, number of pruchases, number of website visits in last month and all other features... Without dataset author i can't be sure in their validity or invalidity, but i will drop them","a1f7888b":"According to three Cycle System from the European Higher Education Area, `2n Cycle` refers to `Master` degree. And `Graduation` means that the person is on the second - graduate cycle, so in fact he finished the first - undergraduate cycle (in many countries named `Bachelor`)\n\nSo the changes are as follow:\n- `2n Cycle` -> `Master`\n- `Graduation` -> `Bachelor`","088263cc":"Customers with PhD degree spent the most amount in last 2 years, customers with Basic degree - the least amount. That corresponds to the `Income` distribution","ee413e1c":"So the most customers are in relationships","40635e5f":"I would also merge `Absurd` to `Single`","fb3241d0":"## Data Cleaning","005efc89":"Let's consider all children in the household with `NumChildren` feature\n\nI would also introduce feature `HasChildren` which equals 1, if customer has one or more children, and equals 0 if customer doesn't have children","99dc3df1":"And i will calculate the percent of amount spent on each product type from total amount spent for each customer","e4c3ad48":"## Education","949c07c7":"Same thing with customers, that have children:","d9c1193c":"Now let's look on number of website visits by clusters"}}