{"cell_type":{"a333dd01":"code","3b30c9fc":"code","6c517610":"code","e7ea1bcf":"code","5b5937bd":"code","df6a7897":"code","e5b71396":"code","1e0c43b6":"code","3f6bc112":"code","224d4169":"code","0099d96e":"code","c40d7ea2":"code","b941b5a3":"code","32eca7b5":"code","61c85848":"code","d427729a":"code","017d73c8":"code","88f8e055":"code","3e9dd98d":"code","52f7c116":"code","aabfc426":"code","992ed825":"code","800f1b83":"code","1fd1336f":"code","45771ad5":"code","85f30b48":"code","dccc0c4e":"code","eb88c214":"code","4f4b8f71":"code","1f1b2b22":"code","5e5f2766":"markdown","a3a60740":"markdown","60cfa817":"markdown","a1380a68":"markdown","8589eaae":"markdown","3ea62e78":"markdown","cb3ecb1c":"markdown","c7857161":"markdown","7f71c6ea":"markdown","3bc37d64":"markdown","3ebbbfea":"markdown"},"source":{"a333dd01":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3b30c9fc":"from sklearn.tree import DecisionTreeClassifier, export_graphviz\nfrom graphviz import Source","6c517610":"df = pd.read_csv(\"\/kaggle\/input\/it-employees-data-for-project-allocation\/Employee_Skills_Datset.csv\",\n                  engine=\"python\", sep=\",\")\npd.set_option('display.max_columns', None)\ndf.head()","e7ea1bcf":"df1 = pd.read_csv(\"\/kaggle\/input\/it-employees-data-for-project-allocation\/Final_Employees_Data.csv\",\n                  engine=\"python\", sep=\",\")\npd.set_option('display.max_columns', None)\ndf1.head()","5b5937bd":"df2 = pd.read_csv(\"\/kaggle\/input\/it-employees-data-for-project-allocation\/final_data_for_clustering_without_scaling.csv\",\n                  engine=\"python\", sep=\",\")\npd.set_option('display.max_columns', None)\ndf2.head()","df6a7897":"df3 = pd.read_csv(\"\/kaggle\/input\/it-employees-data-for-project-allocation\/final_data_for_clustering.csv\",\n                  engine=\"python\", sep=\",\")\npd.set_option('display.max_columns', None)\ndf3.head()","e5b71396":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df1.Area_of_Interest_3)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Pastel1', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","1e0c43b6":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df1.Language2)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set2', background_color=\"white\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","3f6bc112":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df1.Language3)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Dark2_r', background_color=\"salmon\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","224d4169":"df[\"Python\"].value_counts()","0099d96e":"df[\"Machine Learning\"].value_counts()","c40d7ea2":"df[\"Deep Learning\"].value_counts()","b941b5a3":"df[\"NLP\"].value_counts()","32eca7b5":"df[\"C#\"].value_counts()","61c85848":"import seaborn as sbn\n\ncorrelation=df.corr()\nplt.figure(figsize=(15,15))\nsbn.heatmap(correlation,annot=True,cmap=plt.cm.Greens)","d427729a":"x = df.drop(['Deep Learning', 'Data Analysis'], axis=1)\nx.fillna(999999, inplace=True)\ny = df['Data Analysis']","017d73c8":"dt = DecisionTreeClassifier(max_depth=3)","88f8e055":"dt.fit(x, y)","3e9dd98d":"dt_feat = pd.DataFrame(dt.feature_importances_, index=x.columns, columns=['feat_importance'])\ndt_feat.sort_values('feat_importance').tail(8).plot.barh(figsize=(14, 6), color='orange')\nplt.show()","52f7c116":"from IPython.display import SVG\nos.environ[\"PATH\"] += os.pathsep + 'C:\/Program Files (x86)\/Graphviz2.38\/bin\/'\n\ngraph = Source(export_graphviz(dt, out_file=None, feature_names=x.columns, filled = True))\ndisplay(SVG(graph.pipe(format='svg')))","aabfc426":"x2 = df.drop(['Python', 'Machine Learning'], axis=1)\nx2.fillna(999999, inplace=True)\ny2 = df['Machine Learning']","992ed825":"dt2 = DecisionTreeClassifier(max_depth=3)","800f1b83":"dt2.fit(x2, y2)","1fd1336f":"dt_feat2 = pd.DataFrame(dt.feature_importances_, index=x2.columns, columns=['feat_importance'])\ndt_feat2.sort_values('feat_importance').tail(8).plot.barh(figsize=(14, 6), color='green')\nplt.show()","45771ad5":"from IPython.display import SVG\nos.environ[\"PATH\"] += os.pathsep + 'C:\/Program Files (x86)\/Graphviz2.38\/bin\/'\n\ngraph = Source(export_graphviz(dt, out_file=None, feature_names=x2.columns, filled = True))\ndisplay(SVG(graph.pipe(format='svg')))","85f30b48":"x1 = df2.drop(['Experience', 'AI_project_count'], axis=1)\nx1.fillna(999999, inplace=True)\ny1 = df2['AI_project_count']","dccc0c4e":"dt1 = DecisionTreeClassifier(max_depth=3)","eb88c214":"dt1.fit(x1, y1)","4f4b8f71":"dt_feat1 = pd.DataFrame(dt1.feature_importances_, index=x1.columns, columns=['feat_importance'])\ndt_feat1.sort_values('feat_importance').tail(8).plot.barh(figsize=(14, 6), color='purple')\nplt.show()","1f1b2b22":"from IPython.display import SVG\nos.environ[\"PATH\"] += os.pathsep + 'C:\/Program Files (x86)\/Graphviz2.38\/bin\/'\n\ngraph = Source(export_graphviz(dt1, out_file=None, feature_names=x1.columns, filled = True))\ndisplay(SVG(graph.pipe(format='svg')))","5e5f2766":"#I don't know what represents 1, 2, 3, 4 for any of the columns. There are no explantions on the Dataset till now.","a3a60740":"#Same results for ML and DL.","60cfa817":"![](https:\/\/media4.giphy.com\/media\/SZUnyVdIDAEQU\/giphy.gif?cid=ecf05e47z6ksjae6nkgiym1dnj5tbg8sskqmgr1o115cisme&rid=giphy.gif)","a1380a68":"![](https:\/\/media4.giphy.com\/media\/2zoFg7OGkcS82CPK44\/200w.webp)","8589eaae":"#Other languages spoken by IT employees. First language is English. WordClouds for language 2 and 3 respectively.   ","3ea62e78":"#My knowledge is almost like Jen's skills.","cb3ecb1c":"![](https:\/\/media4.giphy.com\/media\/24FyBsBDh2x1dfTTlM\/giphy.webp)","c7857161":"#The IT Crowd\n\nThe IT Crowd is a British sitcom originally broadcast by Channel 4, written by Graham Linehan, produced by Ash Atalla and starring Chris O'Dowd, Richard Ayoade, Katherine Parkinson, and Matt Berry. Set in the offices of the fictional Reynholm Industries in London, the series revolves around the three staff members of its IT (information technology) department: computer programmer Maurice Moss (Richard Ayoade), work-shy Roy Trenneman (Chris O'Dowd), and Jen Barber (Katherine Parkinson), the department head\/relationship manager who knows nothing about IT. The show also focuses on the bosses of Reynholm Industries: Denholm Reynholm (Chris Morris) and later, his son Douglas (Matt Berry). Goth IT technician Richmond Avenal (Noel Fielding), who resides in the dark server room, also features in a number of episodes.\n\nhttps:\/\/en.wikipedia.org\/wiki\/The_IT_Crowd","7f71c6ea":"#Or maybe Not. Since the IT is already crowd. ","3bc37d64":"#Instead of making more Decision Trees with different attributes, let's see what Richard Ayoade think about my \"work\".","3ebbbfea":"![](https:\/\/i.redd.it\/8gzvvm1exeh11.jpg)reddit.com"}}