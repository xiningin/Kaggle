{"cell_type":{"0fb93120":"code","7963290b":"code","68391828":"code","a553017e":"code","298afba4":"code","11f799a4":"code","e545eea8":"code","d8386194":"code","a4a56767":"code","7d237ce8":"code","61243581":"code","e97aa877":"code","fa589a9a":"code","d58b1aa3":"markdown","1b41556b":"markdown","7a497cea":"markdown","488f0beb":"markdown","f26d77f0":"markdown","e742832b":"markdown","1b7b4564":"markdown"},"source":{"0fb93120":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns #visuliasion tool\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7963290b":"data = pd.read_csv(\"..\/input\/pokemon-challenge\/pokemon.csv\") # data seti path'i string olarak yaz\u0131lmal\u0131 \"\" i\u00e7inde\ndata.head()","68391828":"data.info()","a553017e":"data.corr()","298afba4":"#correlation map (features aras\u0131 ili\u015fkiler)\nf,ax = plt.subplots(figsize=(10,10)) #figure buy\u00fckl\u00fc\u011f\u00fc\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt ='.1f',ax=ax) #\nplt.show()","11f799a4":"data.head(10)","e545eea8":"data.columns","d8386194":"# Line Plot\n# color = color, label = label, linewidth = width of line, alpha = opacity, grid = grid, linestyle = sytle of line\ndata.Speed.plot(kind = 'line', color = 'g',label = 'Speed',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\ndata.Defense.plot(color = 'r',label = 'Defense',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right') #legend=outs label into plot\nplt.xlabel(\"x axis\")          #label =name of label\nplt.ylabel(\"y axis\")\nplt.title(\"Line plot\")        #title = name of plot      \nplt.show()\n","a4a56767":"#Scatter Plot\n#x=attack y=defense\ndata.plot(kind='scatter', x='Attack',y='Defense',alpha=0.5,color='red')\n#plt.scatter(data.Attcak,data.Defense,color='red',alpha=0.5) \/\/different method same result\nplt.xlabel=('Attack')\nplt.ylabel=('Defense')\nplt.title=('Attack - Defense Scatter Plot')","7d237ce8":"#Histogram\n# bins=number of ba figure\ndata.Speed.plot(kind ='hist',bins=50,figsize=(12,12))\nplt.show()","61243581":"# create a dictionary and look keys and values\ndictionary={'spain' : 'madrid','usa':'vegas'}\nprint(dictionary.keys())\nprint(dictionary.values())","e97aa877":"#keys have to be immutable object like string, boolean, integer or tubles\n#list is not immutable\n#keys are unique\ndictionary['spain']='barcelona' #update existing entry\nprint(dictionary)\ndictionary['france']='paris'  #add new entry\nprint(dictionary)\ndel dictionary['spain']     #remove enrtry with key spain\nprint(dictionary)\nprint('france' in dictionary)#check include or not\nprint('italy' in dictionary)\ndictionary.clear()             #remove all entries\nprint(dictionary)\n","fa589a9a":"#in order run all code you need to take comment this line\n#del dictionary  #delete entire dictionary\n#print(dictionary) #it gives error because dictionary is deleted","d58b1aa3":"# Matplotlib (video 12)","1b41556b":"Scatter Plot:","7a497cea":"**Pandas**","488f0beb":"Histogram:","f26d77f0":"# Import and First Look Data (Video11)","e742832b":"Line Plot:","1b7b4564":"# Dictionary, Pandas and Logic Control (Video13)"}}