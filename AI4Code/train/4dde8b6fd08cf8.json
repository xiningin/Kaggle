{"cell_type":{"f1e944a7":"code","28691a55":"code","1cd07b6f":"code","746b2b3c":"code","e876e234":"code","8cdfdd26":"code","8a037f6b":"code","a768fa68":"code","f47d6ede":"code","3fdf407e":"code","eb3da91e":"code","cd7b958e":"code","c744b684":"code","0b5862fe":"code","79248749":"code","a72fbb18":"markdown","4b224117":"markdown","0f88550d":"markdown","bdf40f06":"markdown","12b523da":"markdown","4dff5f8c":"markdown","f79ff4b9":"markdown","3f91001e":"markdown","6877774a":"markdown","7ba1e413":"markdown"},"source":{"f1e944a7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","28691a55":"print(os.listdir('..\/input\/nse-listed-1384-companies-data\/'))","1cd07b6f":"df = pd.read_csv('..\/input\/nse-listed-1384-companies-data\/MARUTI_data.csv')","746b2b3c":"df.head(5)","e876e234":"import seaborn as sns\nsns.heatmap(df.corr())","8cdfdd26":"df.isnull().sum()","8a037f6b":"X = df.iloc[:,[1,2,3]]\ny = df.iloc[:,[4]]\nX.fillna(X.mean(), inplace=True)\ny.fillna(y.mean(), inplace=True)","a768fa68":"sns.pairplot(x_vars=['open','high','low'], y_vars='close', data=df, height=7, aspect=0.7)","f47d6ede":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=3)","3fdf407e":"from sklearn import linear_model\nreg = linear_model.LinearRegression()\nreg.fit(X_train,y_train)\nprint(f\"score = {(reg.score(X_test, y_test))*100}\")","eb3da91e":"from sklearn.metrics import median_absolute_error, mean_absolute_error, r2_score\ny_pred = reg.predict(X_test)\nprint(f'{median_absolute_error(y_test,y_pred)},{mean_absolute_error(y_test,y_pred)}, {r2_score(y_test,y_pred)}')","cd7b958e":"reg.fit(X, y)\ny_know = reg.predict([[7033,7014,6895],[6977,7156,6940],[7081,7450,7062]])\ny_true =[[6975],[7124],[7302]]\nr2_score(y_true,y_know)","c744b684":"reg.predict([[7333,7392,7277]])","0b5862fe":"def any_stock(stock_name, today_value=None):\n    '''function to predict any stock values\n    stock_name == str; today_value= list,[open,high,low]\n    '''\n    df = pd.read_csv('..\/input\/nse-listed-1384-companies-data\/historical_data\/HISTORICAL_DATA\/'+ stock_name)\n    df.fillna(df.mean(),inplace=True)\n    X = df.iloc[:,[1,2,3]]\n    y = df.iloc[:,[4]]\n    sns.pairplot(x_vars=['open','high','low'], y_vars='close', data=df, height=7, aspect=0.7)\n    X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=3)\n    reg = linear_model.LinearRegression()\n    reg.fit(X_train,y_train)\n    print(f\"score = {(reg.score(X_test, y_test))*100}\")\n    y_pred = reg.predict(X_test)\n    print(f'median_absolute_error ====== {median_absolute_error(y_test,y_pred)}')\n    print(f'mean absoulte error ======= {mean_absolute_error(y_test,y_pred)}')\n    print(f'r2 score ========== {r2_score(y_test,y_pred)}')\n    if today_value != None:\n        y_today = reg.predict([today_value])\n        print(f\"predicted closing price is = {y_today}\")","79248749":"today = [0.20,0.20,0.15]\nany_stock('KGL_data.csv', today)","a72fbb18":"this page contains EDA of dataset and predicting multiple stocks\nwebapp an be found out on https:\/\/github.com\/yedu-YK\/nsedjango","4b224117":"ploting using seaborn to find realation between features","0f88550d":"finding null values and filling it","bdf40f06":"checking scores","12b523da":"splitting data to into train and test","4dff5f8c":"function to predict any stock","f79ff4b9":"this is my first kaggle programme.I am open for your valuable suggestions.....","3f91001e":"model fitting","6877774a":"fitting full dataset and predicting using real time dataset from 16 oct to 18 oct 2019","7ba1e413":"reading csv file "}}