{"cell_type":{"9a207a5f":"code","653b8fef":"code","53bb2508":"code","49e88775":"code","5a2534be":"code","5b6db51f":"code","67eb63e7":"code","eded7fd0":"code","64b2d095":"code","220a1a29":"code","a06968ea":"code","2f050d73":"code","1d8e8241":"code","1d951337":"code","6ab4a87a":"code","2722c25c":"code","3b9ce222":"code","5703a1e5":"code","b48b6a0c":"code","d8112afb":"code","3ddb3515":"code","2379d3af":"markdown"},"source":{"9a207a5f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom collections import Counter\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","653b8fef":"# read data\ndata=pd.read_csv('..\/input\/student-alcohol-consumption\/student-mat.csv')","53bb2508":"# first period grade avarage of each school\nschool_list=list(data['school'].unique())\nmean_school_grades=[]\n\nfor i in school_list:\n    x=data[data['school']==i]\n    avarage_school_grades=sum(x.G1)\/len(x)\n    mean_school_grades.append(avarage_school_grades)\ndf=pd.DataFrame({'school_list':school_list,'mean_school_grades':mean_school_grades})\nnew_index=(df['mean_school_grades'].sort_values(ascending=False)).index.values\nsorted_data=df.reindex(new_index)\n\n# visualization(Barplot)\n\nplt.figure(figsize=(10,10))\nsns.barplot(x=sorted_data['school_list'],y=sorted_data['mean_school_grades'])\nplt.xticks(rotation=90)\nplt.xlabel('school list')\nplt.ylabel('first period school grades avarage')\nplt.title('first period grade avarage of each school')  \nplt.show()","49e88775":"#   second period  grade avarage of each school\n\nschool_list=list(data['school'].unique())\nmean_school_grades=[]\n\nfor i in school_list:\n    x=data[data['school']==i]\n    avarage_school_grades=sum(x.G2)\/len(x)\n    mean_school_grades.append(avarage_school_grades)\ndf=pd.DataFrame({'school_list':school_list,'mean_school_grades':mean_school_grades})\nnew_index=(df['mean_school_grades'].sort_values(ascending=False)).index.values\nsorted_data=df.reindex(new_index)\n\n# visualization(Barplot)\n\nplt.figure(figsize=(10,10))\nsns.barplot(x=sorted_data['school_list'],y=sorted_data['mean_school_grades'])\nplt.xticks(rotation=90)\nplt.xlabel('school list')\nplt.ylabel(' second period school grades avarage')\nplt.title('second period grade avarage of each school')    \nplt.show()","5a2534be":"#   third period grade avarage of each school\n\nschool_list=list(data['school'].unique())\nmean_school_grades=[]\n\nfor i in school_list:\n    x=data[data['school']==i]\n    avarage_school_grades=sum(x.G3)\/len(x)\n    mean_school_grades.append(avarage_school_grades)\ndf=pd.DataFrame({'school_list':school_list,'mean_school_grades':mean_school_grades})\nnew_index=(df['mean_school_grades'].sort_values(ascending=False)).index.values\nsorted_data=df.reindex(new_index)\n\n# visualization(Barplot)\n\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data['school_list'],y=sorted_data['mean_school_grades'])\nplt.xticks(rotation=90)\nplt.xlabel('school list')\nplt.ylabel('third period school grades avarage')\nplt.title('third period grade avarage of each school')  \nplt.show()","5b6db51f":"# daily alcohol consumption by Pstatus( parent's cohabitation status (binary: 'T' - living together or 'A' - apart))\nPstatus_list=list(data['Pstatus'].unique())\nalcohol_consumptions=[]\nfor i in Pstatus_list:\n    x=data[data['Pstatus']==i]\n    avarage_alcohol_consumption=sum(x.Dalc)\/len(x)\n    alcohol_consumptions.append(avarage_alcohol_consumption)\ndf=pd.DataFrame({'Pstatus_list':Pstatus_list,'alcohol_consumption':alcohol_consumptions})\n\n# visualization(Barplot)\n\nplt.figure(figsize=(10,10))\nsns.barplot(x=df['Pstatus_list'],y=df['alcohol_consumption'])\nplt.xticks(rotation=90)\nplt.xlabel('Pstatus_list')\nplt.ylabel(' daily Alcohol Consumptions')\nplt.title('daily  Alcohol consumption by Pstatus')\nplt.show()","67eb63e7":"#  weekly alcohol consumption by Pstatus( parent's cohabitation status (binary: 'T' - living together or 'A' - apart))\nPstatus_list=list(data['Pstatus'].unique())\nalcohol_consumptions=[]\nfor i in Pstatus_list:\n    x=data[data['Pstatus']==i]\n    avarage_alcohol_consumption=sum(x.Walc)\/len(x)\n    alcohol_consumptions.append(avarage_alcohol_consumption)\ndf=pd.DataFrame({'Pstatus_list':Pstatus_list,'alcohol_consumption':alcohol_consumptions})\n\n# visualization(Barplot)\n\nplt.figure(figsize=(10,10))\nsns.barplot(x=df['Pstatus_list'],y=df['alcohol_consumption'])\nplt.xticks(rotation=90)\nplt.xlabel('Pstatus_list')\nplt.ylabel(' weekly Alcohol Consumptions')\nplt.title('weekly  Alcohol consumption by Pstatus')\nplt.show()","eded7fd0":"# Most common 5 age of Students\n\nage_count=Counter(data.age)\nmost_common_ages=age_count.most_common(5)\nx,y=zip(*most_common_ages)\nx,y=list(x),list(y)\n\n# visualization(barplot)\nplt.figure(figsize=(10,10))\nax=sns.barplot(x=x,y=y,palette=sns.cubehelix_palette(len(x)))\nplt.xlabel('Ages')\nplt.ylabel('Frequency')\nplt.title('Most Common 5 age of Students')\nplt.show()","64b2d095":"#   Daily alcohol consumption vs First grade of each age\n\n\n# first grade avarage of each age\nage_list=list(data['age'].unique())\nfirst_grades_avarage=[]\nfor i in age_list:\n    x=data[data['age']==i]\n    first_grade_mean=sum(x.G1)\/len(x)\n    first_grades_avarage.append(first_grade_mean)\ndf=pd.DataFrame({'age_list':age_list,'first_grades_avarage':first_grades_avarage})\nnew_index=(df['first_grades_avarage'].sort_values(ascending=False)).index.values\nsorted_data2=df.reindex(new_index)\n\n# alcohol consumptions avarage of each age\nage_list=list(data['age'].unique())\nalcohol_consumptions=[]\nfor i in age_list:\n    x=data[data['age']==i]\n    avarage_alcohol_consumptions=sum(x.Dalc)\/len(x)\n    alcohol_consumptions.append(avarage_alcohol_consumptions)\ndf=pd.DataFrame({'age_list':age_list,'alcohol_consumptions':alcohol_consumptions})\nnew_index=(df['alcohol_consumptions'].sort_values(ascending=False)).index.values\nsorted_data3=df.reindex(new_index)\n\n# Daily alcohol cunsumptions vs First Grade of  each age\n\nsorted_data2['first_grades_avarage']=sorted_data2['first_grades_avarage']\/max(sorted_data2['first_grades_avarage'])\nsorted_data3['alcohol_consumptions']=sorted_data3['alcohol_consumptions']\/max(sorted_data3['alcohol_consumptions'])\ndata=pd.concat([sorted_data2,sorted_data3['alcohol_consumptions']],axis=1)\n\n# visualization(Point Plot)\nf,ax=plt.subplots(figsize=(20,10))\nsns.pointplot(x='age_list',y='alcohol_consumptions',data=data,color='lime',alpha=0.8)\nsns.pointplot(x='age_list',y='first_grades_avarage',data=data,color='red',alpha=0.8)\nplt.text(6,0.6,'alcohol consumptions',color='red',fontsize=17,style='italic')\nplt.text(6,0.55,'first grades avarage',color='lime',fontsize=18,style='italic')\nplt.xlabel('Ages',fontsize=15,color='blue')\nplt.ylabel('Values',fontsize=15,color='blue')\nplt.title('Daily alcohol consumptions vs first Grade of each age ',fontsize=20,color='blue')\nplt.grid()\n","220a1a29":"# Visualization of Daily alcohol cunsumptions vs First Grade of each ages with different style of  Seaborn code\n\n# visualization(joint plot)\ng=sns.jointplot(data.first_grades_avarage,data.alcohol_consumptions,kind='kde',height=7)\nplt.savefig('graph.png')\nplt.show()","a06968ea":"# Visualization of Daily alcohol cunsumptions vs First Grade of each ages with different style of  Seaborn code\ng=sns.jointplot('first_grades_avarage','alcohol_consumptions',data=data,height=5,ratio=3,color='r')","2f050d73":"# Health rates according in data\nlabels=data.health.value_counts().index\ncolors=['grey','blue','red','yellow','green']\nexplode=[0,0,0,0,0]\nsizes=data.health.value_counts().values\n\n# visualization(Pie plot)\nplt.figure(figsize=(7,7))\nplt.pie(sizes,explode=explode,labels=labels,colors=colors,autopct='%1.1f%%')\nplt.title('Health Rates According in data',color='blue',fontsize=15)\nplt.show()","1d8e8241":"# Visualization of Daily alcohol cunsumptions vs First Grade of each ages with different style of  Seaborn code\n\n# visualization(lm-plot)\nsns.lmplot(x='first_grades_avarage',y='alcohol_consumptions',data=data)\nplt.show()","1d951337":"# Visualization of Daily alcohol cunsumptions vs First Grade of each ages with different style of  Seaborn code\n\n# visualization(kdeplot)\nsns.kdeplot(data.first_grades_avarage,data.alcohol_consumptions,shade=True,cut=5)\nplt.show()","6ab4a87a":"# Visualization of Daily alcohol cunsumptions vs First Grade of each ages with different style of  Seaborn code\n\n# visualization(Seaborn-Heatmap)\n\nf,ax=plt.subplots(figsize=(5,5))\nsns.heatmap(data.corr(),annot=True,linewidths=.5,linecolor='r',fmt='.1f',ax=ax)\nplt.show()","2722c25c":"# Box plot\n\n# sex\n# first grade\n# reason\nsns.boxplot(x='sex',y='G1',hue='reason',data=data,palette='PRGn')\nplt.show()","3b9ce222":"# Swarm plot \n\n# sex \n# G1\n# Pstatus\n\n# visualization(Seaborn-Swarm plot)\nsns.swarmplot(x='sex',y='G1',hue='Pstatus',data=data)\nplt.show()","5703a1e5":"# Visualization of Daily alcohol cunsumptions vs First Grade of each ages with different style of  Seaborn code\n\n# Visualization(Seaborn-Pair Plot)\ndata.drop(['age_list'],axis=1,inplace=True)\nsns.pairplot(data)\nplt.show()","b48b6a0c":"# Count plot \n\n# sex\nsns.countplot(data.age)\nplt.title('age',color='blue',fontsize=15)\nplt.show()\n# school \nsns.countplot(data.school)\nplt.title('school',color='blue',fontsize=15)\nplt.show()\n","d8112afb":"# addrees\nsns.countplot(data.address)\nplt.title('address',color='blue',fontsize=15)\nplt.show()\n# family size \nsns.countplot(data.famsize)\nplt.title('famsize',color='blue',fontsize=15)\nplt.show()","3ddb3515":"# reason\nsns.countplot(data.reason)\nplt.title('reason',color='blue',fontsize=15)\nplt.show()\n# romantic\nsns.countplot(data.romantic)\nplt.title('romantic',color='blue',fontsize=15)\nplt.show()","2379d3af":"# The data were obtained in a survey of students math courses in secondary school.It contains a lot of interesting social, gender and study information about students.\n# It is prepared by Eren Kirmizioglu\n# Columns:\n1. school - student's school (binary: 'GP' - Gabriel Pereira or 'MS' - Mousinho da Silveira)\n1. sex - student's sex (binary: 'F' - female or 'M' - male)\n1. age - student's age (numeric: from 15 to 22)\n1. address - student's home address type (binary: 'U' - urban or 'R' - rural)\n1. famsize - family size (binary: 'LE3' - less or equal to 3 or 'GT3' - greater than 3)\n1. Pstatus - parent's cohabitation status (binary: 'T' - living together or 'A' - apart)\n1. Medu - mother's education (numeric: 0 - none, 1 - primary education (4th grade), 2 \u2013 5th to 9th grade, 3 \u2013 secondary education or 4 \u2013 higher education)\n1. Fedu - father's education (numeric: 0 - none, 1 - primary education (4th grade), 2 \u2013 5th to 9th grade, 3 \u2013 secondary education or 4 \u2013 higher education)\n1. Mjob - mother's job (nominal: 'teacher', 'health' care related, civil 'services' (e.g. administrative or police), 'at_home' or 'other')\n1. Fjob - father's job (nominal: 'teacher', 'health' care related, civil 'services' (e.g. administrative or police), 'at_home' or 'other')\n1. reason - reason to choose this school (nominal: close to 'home', school 'reputation', 'course' preference or 'other')\n1. guardian - student's guardian (nominal: 'mother', 'father' or 'other')\n1. traveltime - home to school travel time (numeric: 1 - 1 hour)\n1. studytime - weekly study time (numeric: 1 - 10 hours)\n1. failures - number of past class failures (numeric: n if 1<=n<3, else 4)\n1. schoolsup - extra educational support (binary: yes or no)\n1. famsup - family educational support (binary: yes or no)\n1. paid - extra paid classes within the course subject (Math or Portuguese) (binary: yes or no)\n1. activities - extra-curricular activities (binary: yes or no)\n1. nursery - attended nursery school (binary: yes or no)\n1. higher - wants to take higher education (binary: yes or no)\n1. internet - Internet access at home (binary: yes or no)\n1. romantic - with a romantic relationship (binary: yes or no)\n1. famrel - quality of family relationships (numeric: from 1 - very bad to 5 - excellent)\n1. freetime - free time after school (numeric: from 1 - very low to 5 - very high)\n1. goout - going out with friends (numeric: from 1 - very low to 5 - very high)\n1. Dalc - workday alcohol consumption (numeric: from 1 - very low to 5 - very high)\n1. Walc - weekend alcohol consumption (numeric: from 1 - very low to 5 - very high)\n1. health - current health status (numeric: from 1 - very bad to 5 - very good)\n1. absences - number of school absences (numeric: from 0 to 93)\n1. These grades are related with the course subject, Math or Portuguese:\n1. \n1. G1 - first period grade (numeric: from 0 to 20)\n1. G2 - second period grade (numeric: from 0 to 20)\n1. G3 - final grade (numeric: from 0 to 20, output target)\n"}}