{"cell_type":{"8c420d0c":"code","72907d52":"code","a0521a03":"code","2647fd89":"code","ecbf825a":"code","ec3a3641":"code","d7cdcdf3":"code","a772ea1d":"code","79bd2f0e":"code","32689ea0":"code","3256f2b8":"code","6f424e41":"code","e781c0e9":"code","223ff2b2":"code","9db95a73":"code","6680f20f":"code","3b040216":"code","b0f5cf24":"code","641729c7":"markdown","e57dd7b8":"markdown"},"source":{"8c420d0c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport warnings as ws\nws.filterwarnings(\"ignore\")","72907d52":"data = pd.read_csv(\"..\/input\/ipl2020-tweets\/IPL2020_Tweets.csv\")","a0521a03":"data.head()","2647fd89":"shape = data.shape\nprint(\"data shape\",shape)","ecbf825a":"check_na = ((data.isna().sum() \/ data.shape[0])* 100).reset_index().rename(columns = {\"index\": \"Columns\", 0: \"missing value percentage\"})","ec3a3641":"plot = px.bar(check_na, y= 'missing value percentage', x='Columns', text='missing value percentage', title = \"Percent of missing values in the columns\")\nplot.update_traces(texttemplate='%{text:.2s}',textposition='outside')\nplot.show()","d7cdcdf3":"sns.set()\nplt.figure(figsize =(10,4))\nsns.barplot(data = data.user_location.value_counts()[:5].reset_index(),y='user_location',x='index',palette=\"Spectral\")\nplt.ylabel(\"count of peoples\")\nplt.xlabel(\"Top Location in the data\")\nplt.title(\"Top user location in the data \", size = 10)\nplt.show()","a772ea1d":"##For the purpose of eda i will replace null values with india\ndata.user_location.fillna(\"india\",inplace=True)","79bd2f0e":"data.hashtags.fillna('[IPL2020]',inplace=True)","32689ea0":"data.isna().sum()","3256f2b8":"# estimate of verified user\ntemp = data.user_verified.replace({True: \"Verified\", False: \"Non-verfied\"}).value_counts().reset_index()\nfig = px.pie(temp, values='user_verified', names='index', color_discrete_sequence=px.colors.sequential.RdBu, title = \"User Status\")\nfig.show()","6f424e41":"fig = px.scatter(data_frame=data, y=\"user_favourites\", x=\"user_followers\", size = \"user_favourites\", color = \"user_verified\",log_x=True, size_max=20)\nfig.show()","e781c0e9":"temp = data.is_retweet.value_counts().reset_index().replace({False: \"Not Retweeted\", True : \"ReTweeted\"})\nfig = px.pie(temp, values='is_retweet', names='index', color_discrete_sequence=px.colors.sequential.RdBu, title = \"Retweeted or not\")\nfig.show()","223ff2b2":"import missingno as mno\nmno.matrix(data)","9db95a73":"ds = data['user_location'].value_counts().reset_index()\nds.columns = ['user_location', 'count']\nds = ds[ds['user_location']!='NA']\nds = ds.sort_values(['count'],ascending=False)\n\nfig = sns.barplot(\n    \n    x=ds.head(20)[\"count\"], \n    y=ds.head(20)[\"user_location\"], \n    orientation='horizontal'\n).set_title('Top 20 user locations by number of tweets')","6680f20f":"data['tweet_date']=pd.to_datetime(data['date']).dt.date\ntweet_date=data['tweet_date'].value_counts().to_frame().reset_index().rename(columns={'index':'date','tweet_date':'count'})\ntweet_date['date']=pd.to_datetime(tweet_date['date'])\ntweet_date=tweet_date.sort_values('date',ascending=False)","3b040216":"fig=go.Figure(go.Scatter(x=tweet_date['date'],\n                                y=tweet_date['count'],\n                               mode='markers+lines',\n                               name=\"Submissions\",\n                               marker_color='dodgerblue'))\n","b0f5cf24":"fig.update_layout(\n    title_text='Tweets per Day : ({} - {})'.format(data['tweet_date'].sort_values()[0].strftime(\"%d\/%m\/%Y\"),\n                                                       data['tweet_date'].sort_values().iloc[-1].strftime(\"%d\/%m\/%Y\")),template=\"plotly_dark\",\n    title_x=0.5)\n\nfig.show()\n","641729c7":"All NaN values filled except user description which i prefereed not to fill","e57dd7b8":"# # Dealing with missing values****"}}