{"cell_type":{"eae24def":"code","f712e782":"code","f5cd68c3":"code","1190d598":"code","6fa265d5":"code","fc9eb3ef":"code","1c1caca9":"code","0f07cd0f":"markdown","ee67b76e":"markdown","13a38595":"markdown","f8316e21":"markdown"},"source":{"eae24def":"import pandas as pd\nimport numpy as np\n\n#Lendo o Dataset\ndf = pd.read_csv('..\/input\/BR_eleitorado_2016_municipio.csv', delimiter=',')\n\n#Criando o DataFrame com dados para classifica\u00e7\u00e3o por Regi\u00e3o (analise incremental)\nregiao = [[\"Norte\",\"AM\"],[\"Norte\",\"RR\"],[\"Norte\",\"AP\"],[\"Norte\",\"PA\"],[\"Norte\",\"TO\"],[\"Norte\",\"RO\"],[\"Norte\",\"AC\"],[\"Nordeste\",\"MA\"],\n[\"Nordeste\",\"PI\"],[\"Nordeste\",\"CE\"],[\"Nordeste\",\"RN\"],[\"Nordeste\",\"PE\"],[\"Nordeste\",\"PB\"],[\"Nordeste\",\"SE\"],[\"Nordeste\",\"AL\"],\n[\"Nordeste\",\"BA\"],[\"Centro-Oeste\",\"MT\"],[\"Centro-Oeste\",\"MS\"],[\"Centro-Oeste\",\"GO\"],[\"Sudeste\",\"SP\"],[\"Sudeste\",\"RJ\"],[\"Sudeste\",\"ES\"],\n[\"Sudeste\",\"MG\"],[\"Sul\",\"PR\"],[\"Sul\",\"RS\"],[\"Sul\",\"SC\"]]\ndf_reg = pd.DataFrame(regiao, columns=[\"regiao\", \"uf\"])\n\n#Criando o Dataset\ndf = pd.merge(df, df_reg, on='uf')\n\n#Retirando os campos que n\u00e3o ser\u00e3o utilizados\ndf.drop('cod_municipio_tse', axis=1, inplace=True)\ndf.drop('total_eleitores', axis=1, inplace=True)\ndf.drop('nome_municipio', axis=1, inplace=True)\n\n#Transformando as colunas do dataset para formata\u00e7\u00e3o da analise\ndf = pd.melt(df, id_vars=['uf', 'regiao', 'gen_masculino', 'gen_feminino', 'gen_nao_informado'], var_name='faixa_etaria', value_name='valor')\ndf = pd.melt(df, id_vars=['uf', 'regiao', 'faixa_etaria','valor'], var_name='genero', value_name='valor_gen')\n\n#Criando os dataframes\ndf = pd.DataFrame(df[['uf','regiao','faixa_etaria','valor','genero','valor_gen']].groupby(by=['uf','regiao','faixa_etaria','genero','valor_gen'], as_index=False).sum())\ndf = pd.DataFrame(df[['uf','regiao','faixa_etaria','valor','genero','valor_gen']].groupby(by=['uf','regiao','faixa_etaria','valor','genero'], as_index=False).sum())\n\n#Classificando as variaveis\nresposta = [[\"uf\", \"Categorica Nominal\"],[\"regiao\", \"Categorica Nominal\"],[\"faixa_etaria\", \"Categorica Ordinal\"],[\"valor\", \"Numerica Discreta\"],[\"genero\", \"Categorica Nominal\"],[\"valor_gen\", \"Numerica Discreta\"]]\n\n#Criando o dataframe de classifica\u00e7\u00e3o\nresposta = pd.DataFrame(resposta, columns=[\"Variavel\", \"Classifica\u00e7\u00e3o\"])\nresposta","f712e782":"#Regiao | Frequencia absoluta\nreg_qtd = [df['regiao'].value_counts()]\nreg_qtd = pd.DataFrame(reg_qtd).unstack().reset_index(name='Freq')\nreg_qtd.drop('level_1', axis=1, inplace=True)\nreg_qtd.columns = ['Regiao', 'Freq']\n\n#Regiao | Frequencia relativa\nreg_per = [round(df['regiao'].value_counts()\/df.shape[0]*100,2)]\nreg_per = pd.DataFrame(reg_per).unstack().reset_index(name='Freq')\nreg_per.drop('level_1', axis=1, inplace=True)\nreg_per.columns = ['Regiao', '%']\n\npd.merge(reg_qtd, reg_per, on='Regiao')","f5cd68c3":"#Estado | Frequencia absoluta\nuf_qtd = [df['uf'].value_counts()]\nuf_qtd = pd.DataFrame(uf_qtd).unstack().reset_index(name='Freq')\nuf_qtd.drop('level_1', axis=1, inplace=True)\nuf_qtd.columns = ['uf', 'Freq']\n\n#Estado | Frequencia relativa\nuf_per = [round(df['uf'].value_counts()\/df.shape[0]*100,2)]\nuf_per = pd.DataFrame(uf_per).unstack().reset_index(name='Freq')\nuf_per.drop('level_1', axis=1, inplace=True)\nuf_per.columns = ['uf', '%']\n\npd.merge(uf_qtd, uf_per, on='uf')","1190d598":"#Faixa Etaria | Frequencia absoluta\nfx_qtd = [df['faixa_etaria'].value_counts()]\nfx_qtd = pd.DataFrame(fx_qtd).unstack().reset_index(name='Freq')\nfx_qtd.drop('level_1', axis=1, inplace=True)\nfx_qtd.columns = ['fx', 'Freq']\n\n#Faixa Etaria | Frequencia relativa\nfx_per = [round(df['faixa_etaria'].value_counts()\/df.shape[0]*100,2)]\nfx_per = pd.DataFrame(fx_per).unstack().reset_index(name='Freq')\nfx_per.drop('level_1', axis=1, inplace=True)\nfx_per.columns = ['fx', '%']\n\npd.merge(fx_qtd, fx_per, on='fx')","6fa265d5":"#Genero | Frequencia absoluta\ngen_qtd = [df['genero'].value_counts()]\ngen_qtd = pd.DataFrame(gen_qtd).unstack().reset_index(name='Freq')\ngen_qtd.drop('level_1', axis=1, inplace=True)\ngen_qtd.columns = ['gen', 'Freq']\n\n#Genero | Frequencia relativa\ngen_per = [round(df['genero'].value_counts()\/df.shape[0]*100,2)]\ngen_per = pd.DataFrame(gen_per).unstack().reset_index(name='Freq')\ngen_per.drop('level_1', axis=1, inplace=True)\ngen_per.columns = ['gen', '%']\n\npd.merge(gen_qtd, gen_per, on='gen')","fc9eb3ef":"import matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom matplotlib.backends.backend_agg import FigureCanvas\nfrom matplotlib.figure import Figure","1c1caca9":"#Defini\u00e7\u00e3o do Grid para plotagem dos graficos\ngridsize = (3, 3) #3 rows, 3 columns\nfig = plt.figure(figsize=(12, 12))\n\ngen = plt.subplot2grid(gridsize, (0, 0), colspan=1)\nreg = plt.subplot2grid(gridsize, (0, 1), colspan=2)\nuf = plt.subplot2grid(gridsize, (1, 0), colspan=3)\nfaixa = plt.subplot2grid(gridsize, (2, 0), colspan=3)\n\n\n#Comparativo eleitores por Genero\nx, y = sorted(df['genero'].unique(), key=None), df.groupby(by=['genero'])['valor_gen'].sum()\/(df['valor_gen'].sum())*100\ngen.set_title('(%) Eleitores por Genero')\ngen.pie(y, labels = round(y,1), shadow = True)\n#gen.legend(x)\ngen.legend(['Fem','Masc', 'NI'], loc=\"best\")\n\n\n#Comparativo eleitores por Regiao\nx, y = sorted(df['regiao'].unique(), key=None), df.groupby(by=['regiao'])['valor_gen'].sum()\nreg.set_title('Eleitores por Regi\u00e3o')\nreg.bar(x, y, color = 'b')\n\n\n#Comparativo eleitores por Estado\nx, y = sorted(df['uf'].unique(), key=None), df.groupby(by=['uf'])['valor_gen'].sum()\nuf.set_title('Eleitores por Estado')\nuf.bar(x, y, color = 'b')                                  \n\n\n#Comparativo eleitores por Faixa Etaria\nx, y = sorted(df['faixa_etaria'].unique(), key=None), df.groupby(by=['faixa_etaria'])['valor'].sum()\nfaixa.set_title('Eleitores por Faixa Etaria')\nfaixa.bar(x, y, color = 'b')","0f07cd0f":"## Quest\u00e3o 1\n**Enunciado:**  Este notebook est\u00e1 associado ao *Kaggle Dataset* chamado \"Aula1 | Exerc\u00edcio1\". Este *Kaggle Dataset* possui dois arquivos em formato CSV (anv.csv e BR_eleitorado_2016_municipio ). Escolha um dos datasets dispon\u00edveis e j\u00e1 conhecidos, a seu crit\u00e9rio. Uma vez definido o csv, escolha no m\u00ednimo 7 e no m\u00e1ximo 12 vari\u00e1veis (colunas) que voc\u00ea avalia como sendo relevantes. Para cada uma das suas vari\u00e1veis escolhidas, forne\u00e7a:\n\n\n### Quest\u00e3o 1 - Item A - Classifica\u00e7\u00e3o das vari\u00e1veis\n\nClassifique todas as vari\u00e1veis escolhidas, e construa um dataframe com sua resposta.\nExemplo:","ee67b76e":"# Especializa\u00e7\u00e3o em Ci\u00eancia de Dados - Turma 2018.1 - Facens\n## Aula1 | Exerc\u00edcio 1 (valendo nota)\n\n* **Data de entrega:** 06\/nov\/2018 07:59\n* **Professor:**  Matheus Mota\n* **Aluno:** Wagner Luciano Buzzo\n* **RA:** 183274","13a38595":"### Quest\u00e3o 1 - Item C - Representa\u00e7\u00e3o Gr\u00e1fica\nPara cada uma das vari\u00e1veis, produza um ou mais gr\u00e1ficos, usando matplotlib, que descreva seu comportamento \/ caracteristica. Lembre-se que estes gr\u00e1ficos precisam ser compat\u00edveis com a classifica\u00e7\u00e3o da vari\u00e1vel. ","f8316e21":"### Quest\u00e3o 1 - Item B - Tabela de frequ\u00eancia\n\nConstrua uma tabela de frequ\u00eancia para cada uma das **vari\u00e1veis qualitativas** que voc\u00ea escolheu (caso n\u00e3o tenha escolhido nenhuma, deixe esta quest\u00e3o em branco). Uma dica: a fun\u00e7\u00e3o *value_counts()* do Pandas pode ser muito \u00fatil. =)\n"}}