{"cell_type":{"3456dbea":"code","b0eba56c":"code","25d34cd1":"code","bf921962":"code","901fd115":"code","411cae66":"code","bd230f07":"code","e456646a":"code","2b46ae58":"code","964b5dc2":"code","3d1ebad9":"code","a2ed1d94":"code","a66945b9":"code","67213f32":"code","d960e8fd":"code","4d8918f8":"code","78ad1fbf":"code","995e13c8":"code","e7962d22":"code","6d4a5180":"code","bc13507f":"code","c65adf13":"code","a1ec03aa":"code","485d97f6":"code","5faa266e":"code","9c3102a9":"code","5ca057ee":"code","1772ad6a":"code","5cf7b437":"code","eb38aac4":"code","ceaffa79":"code","f01f2d9d":"code","8892856e":"code","5f2783f7":"code","ba34be79":"code","2aea6adc":"code","b29cb93a":"code","9993e270":"code","12369bdf":"code","5a2f2816":"code","b2317918":"code","5c236433":"code","b5a507b0":"code","4e511888":"code","c40099b8":"code","21d82d65":"code","e11e2565":"code","9f40b03b":"code","160d2420":"code","9b1ea5a4":"code","e7b2b950":"markdown","cfa45277":"markdown","29b9560e":"markdown","e652676b":"markdown","5ba652a1":"markdown","0534861f":"markdown","ff238694":"markdown","14eb99e7":"markdown","c4c2d1c1":"markdown","76c363d1":"markdown","e9196c04":"markdown","6a4af625":"markdown","9f1e49f1":"markdown","83323130":"markdown","4a84def5":"markdown","4469c9f5":"markdown","27af2df5":"markdown","cf7d8e74":"markdown"},"source":{"3456dbea":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b0eba56c":"from matplotlib import pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')","25d34cd1":"pd.set_option('display.max_rows', 10000)\npd.set_option('display.max_colwidth', 150)\nmedia = pd.read_csv('\/kaggle\/input\/covid19-containment-and-mitigation-measures\/COVID 19 Containment measures data.csv')\ncovid19 = pd.read_csv('\/kaggle\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')","bf921962":"media.head(2)","901fd115":"policy = media[['Country','Date Start','Description of measure implemented']]\\\n.sort_values('Date Start',ascending=True)","411cae66":"policy.head(3)","bd230f07":"# we see different country\npolicy.Country.unique()","e456646a":"covid19.head(3)","2b46ae58":"covid19 = covid19.groupby(['Country\/Region', 'ObservationDate'])[['Confirmed', 'Deaths', 'Recovered']].agg('sum')\ncovid19.head()","964b5dc2":"country = covid19.reset_index()\ncountry.info()","3d1ebad9":"country.head(3)","a2ed1d94":"country.loc[:, 'ObservationDate'] = pd.to_datetime(country.loc[:, 'ObservationDate'])\ncountry.loc[:, 'Confirmed'] = pd.to_numeric(country.loc[:, 'Confirmed'], errors='coerce')\ncountry.loc[:,'Recovered'] = pd.to_numeric(country.loc[:,'Recovered'], errors='coerce')\ncountry.loc[:,'Deaths'] = pd.to_numeric(country.loc[:,'Deaths'], errors='coerce')\npolicy.loc[:, 'Date Start'] = pd.to_datetime(policy.loc[:, 'Date Start'])","a66945b9":"country['Country\/Region'].unique()","67213f32":"def growth_rate(data=None):\n    x = []\n    x.append(0)\n    for i in range(data.shape[0]-1):\n        a = data.iloc[i+1]-data.iloc[i]\n        if data.iloc[i] == 0:\n            v = 0.0\n        else:\n            v = a\/data.iloc[i]\n        v=v*100\n        x.append(v)\n        \n    return np.array(x)","d960e8fd":"def compute_growth_rate(data=None):\n    \"\"\"\n        :params data\n        \n    \"\"\"\n    for c in ['Confirmed', 'Recovered', 'Deaths']:\n        r = 'growth_rate_{}(%)'.format(c)\n        data.loc[:,r] = growth_rate(data.loc[:,c])\n        \n    return data.copy()","4d8918f8":"china = policy[policy.Country == 'China'].sort_values(by=['Date Start'])\nmainland_china = country[country['Country\/Region'] == 'Mainland China']","78ad1fbf":"# to see date that policy has started at China\nchina['Date Start'].unique()","995e13c8":"china[china['Date Start'] < '2020-02-22'].style.set_properties(**{'background-color': 'black',\n                            'color': 'white',\n                            'border-color': 'lawngreen'})","e7962d22":"gr_china = compute_growth_rate(mainland_china)","6d4a5180":"cols = list(set(gr_china.columns) - set(['Confirmed', 'Deaths', 'Recovered','Country\/Region']))\nicols = ['ObservationDate', 'Confirmed', 'Recovered', 'Deaths']","bc13507f":"china[china['Date Start'] >= '2020-02-22'].style.set_properties(**{'background-color': 'black',\n                            'color': 'lawngreen',\n                            'border-color':'white'})","c65adf13":"mainland_china[cols].plot(x='ObservationDate', figsize=(15,5))\nplt.title('The effect of containment and mitigation mesures on growth rate confirmed, recovered,\\\ndeaths in China ')\nplt.ylabel('growth rate (%)')","a1ec03aa":"mainland_china[['ObservationDate','Confirmed','Recovered', 'Deaths']].plot(x='ObservationDate', figsize=(15,5))\nplt.title('Control disease state in China')","485d97f6":"italy = policy[policy['Country'] == 'Italy'].sort_values(by=['Date Start'])\nc_italy = country[country['Country\/Region'] == 'Italy']","5faa266e":"italy[italy['Date Start'] < '2020-02-24'].style.set_properties(**{'background-color': 'black',\n                            'color': 'white',\n                            'border-color': 'lawngreen'})","9c3102a9":"gr_italo = compute_growth_rate(c_italy)","5ca057ee":"italy[italy['Date Start'] >= '2020-02-24'].style.set_properties(**{'background-color': 'black',\n                            'color': 'lawngreen',\n                            'border-color': 'white'})","1772ad6a":"gr_italo[cols].plot(x='ObservationDate', figsize=(15,5))\nplt.title('The effect of containment and mitigation mesures on growth rate confirmed,\\\nRecovered and death in Italy')\nplt.ylabel('growth rate (%)')","5cf7b437":"fig = plt.figure(figsize=(15,5))\nfig.subplots_adjust(hspace=0.4, wspace=0.1)\nax1 = fig.add_subplot(1,2,1)\nax2 = fig.add_subplot(1,2,2)\nc_italy.plot(x='ObservationDate', y = 'Confirmed', ax=ax1)\nax1.set_title('Increasing confirmed in Italy')\nc_italy[['ObservationDate','Deaths', 'Recovered']].plot(x='ObservationDate', ax=ax2)\nax2.set_title('Increasing recovered and deaths in Italy')","eb38aac4":"german = policy[policy['Country'] == 'Germany'].sort_values(by=['Date Start'])\ngermany = country[country['Country\/Region'] == 'Germany']","ceaffa79":"german[german['Date Start'] <= '2020-02-28'].style.set_properties(**{'background-color': 'black',\n                            'color': 'white',\n                            'border-color': 'lawngreen'})","f01f2d9d":"gr_german = compute_growth_rate(germany)","8892856e":"german[german['Date Start'] > '2020-02-28'].style.set_properties(**{'background-color': 'black',\n                            'color': 'lawngreen',\n                            'border-color': 'white'})","5f2783f7":"gr_german[cols].plot(x='ObservationDate', figsize=(15,5))\nplt.title('The effect of containment and mitigation mesures on growth rate confirmed, recovered,\\\ndeaths in Germany')\nplt.ylabel('growth rate (%)')","ba34be79":"fig = plt.figure(figsize=(15,5))\nfig.subplots_adjust(hspace=0.4, wspace=0.1)\nax1 = fig.add_subplot(1,2,1)\nax2 = fig.add_subplot(1,2,2)\ngermany.plot(x='ObservationDate', y = 'Confirmed', ax=ax1)\nax1.set_title('Increasing confirmed in Germany')\ngermany[['ObservationDate','Deaths', 'Recovered']].plot(x='ObservationDate', ax=ax2)\nax2.set_title('Increasing recovered and deaths in Germany')","2aea6adc":"french = policy[policy['Country'] == 'France'].sort_values(by=['Date Start'])\nfrance = country[country['Country\/Region'] == 'France']","b29cb93a":"french.style.set_properties(**{'background-color': 'black',\n                            'color': 'lawngreen',\n                            'border-color': 'white'})","9993e270":"gr_france = compute_growth_rate(france)","12369bdf":"gr_france[cols].plot(x='ObservationDate', figsize=(15,5))\nplt.title('The effect of containment and mitigation mesures on growth rate confirmed, recovered,\\\ndeaths in France')","5a2f2816":"fig = plt.figure(figsize=(15,5))\nfig.subplots_adjust(hspace=0.4, wspace=0.1)\nax1 = fig.add_subplot(1,2,1)\nax2 = fig.add_subplot(1,2,2)\nfrance.plot(x='ObservationDate', y = 'Confirmed', ax=ax1)\nax1.set_title('Increasing confirmed in France')\nfrance[['ObservationDate','Deaths', 'Recovered']].plot(x='ObservationDate', ax=ax2)\nax2.set_title('Increasing recovered and deaths in France')","b2317918":"tehran = policy[policy['Country'] == 'Iran'].sort_values(by=['Date Start'])\niran = country[country['Country\/Region'] == 'Iran']","5c236433":"tehran.style.set_properties(**{'background-color': 'black',\n                            'color': 'lawngreen',\n                            'border-color': 'white'})","b5a507b0":"gr_iran = compute_growth_rate(iran)","4e511888":"gr_iran[cols].plot(x='ObservationDate',figsize=(15,5))\nplt.title('The effect of containment and mitigation mesures on growth rate confirmed, recovered, death in Iran')\nplt.ylabel('growth rate (%)')","c40099b8":"iran[icols].plot(x='ObservationDate', figsize=(15,5))\nplt.title('The fight against disease controlled by Iran')","21d82d65":"cairo = policy[policy.Country == 'Egypt']\negypt = country[country['Country\/Region'] == 'Egypt']","e11e2565":"cairo.style.set_properties(**{'background-color': 'black',\n                            'color': 'lawngreen',\n                            'border-color': 'white'})","9f40b03b":"gr_egypt = compute_growth_rate(egypt)","160d2420":"gr_egypt[cols].plot(x='ObservationDate', figsize=(15,5))\nplt.title('The effect of containment and mitigation mesure on growth rate confirmed,\\\nrecovered and deaths in Egypt')\nplt.ylabel('growth rate (%)')","9b1ea5a4":"egypt[icols].plot(x='ObservationDate', figsize=(15,5))\nplt.title('The fight against disease controlled by Egypt')","e7b2b950":"# Germany containment and mitigation mesures","cfa45277":"# Iran","29b9560e":"## After","e652676b":"# Egypt containment and mitigation mesures","5ba652a1":"# China containment and mitigation mesures","0534861f":"# Relation between growth rate, containment and mitigation measures.\n\nIn this notebook, I show how there is a correlation between mitigation mesures, containment and growth rates.\nTo do this, we will observe the strategy of each country(China, US, Germany,South Korea, italy, France...) to fight against covid19 and the impact of this strategy on the growth rate. We will need three growth rates.\n\n> ** growth rate positive cases**\n\n> ** growth rate recovered**\n\n> ** growth rate death**\n\nAnd the end of this work, I give some conclusion. Let's start.","ff238694":"## Before","14eb99e7":"## After ","c4c2d1c1":"**To continuous with Italy see** https:\/\/www.kaggle.com\/lumierebatalong\/italy-space-time-spreading-of-covid19","76c363d1":"**You can see the relationship between growth rate and containment, mitigation measures very well.\nwe notice that this mitigation measures can be efficient if government and population fight together against this disease. (e.g. China, ..)**","e9196c04":"# Italy Containment and Mitigation mesures","6a4af625":"# France ","9f1e49f1":"## UpNext","83323130":"# Prepare data","4a84def5":"## Before","4469c9f5":"## before","27af2df5":"### Growth rate","cf7d8e74":"# After"}}