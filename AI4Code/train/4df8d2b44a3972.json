{"cell_type":{"4b0e3240":"code","c7677145":"code","16cde427":"code","97c45094":"code","feb09142":"code","23f4ef03":"code","9360c98c":"code","d8d156be":"code","1db31243":"code","3f115503":"markdown"},"source":{"4b0e3240":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c7677145":"from sklearn import tree\nimport matplotlib.pyplot as plt\nfn=X_train.columns\ncn= 'action'\nfig, axes = plt.subplots(nrows = 1,ncols = 1,figsize = (4,4), dpi=800)\ntree.plot_tree(rfclf.estimators_[0],\n               feature_names = fn, \n               class_names=cn,\n               filled = True);\nfig.savefig('rf_individualtree.png')","16cde427":"train = pd.read_csv('\/kaggle\/input\/jane-street-market-prediction\/train.csv',nrows=30000)","97c45094":"features = [col for col in list(train.columns) if 'feature' in col]\ntrain = train[train['weight'] != 0]\ntrain['action'] = (train['resp'].values > 0).astype(int)\nf_mean = train.mean()\ntrain = train.fillna(f_mean)\nX = train.loc[:, features]\ny = train.loc[:, 'action']\ndel train","feb09142":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.25)","23f4ef03":"from sklearn.metrics import classification_report\nfrom sklearn.ensemble import RandomForestClassifier\nrfclf = RandomForestClassifier()\nrfclf.fit(X_train,y_train)\nrf_pred = rfclf.predict(X_test)\nprint(classification_report(y_test,rf_pred))","9360c98c":"test = pd.read_csv('\/kaggle\/input\/jane-street-market-prediction\/example_test.csv')","d8d156be":"features = [col for col in list(test.columns) if 'feature' in col]\nf_mean = test.mean()\ntest = test.fillna(f_mean)\ntest_df = test.loc[:, features]","1db31243":"predict = rfclf.predict(test_df)","3f115503":"# Random Forest"}}