{"cell_type":{"e4473335":"code","1281e2a5":"code","e25195e5":"code","4b53b323":"code","207bb48e":"code","0b59eea3":"code","dbda68ef":"code","e81c6cfc":"code","8e317cb3":"code","0e61d580":"code","8916ec83":"code","576973d2":"markdown","5e3448e3":"markdown","a45a0959":"markdown","04619309":"markdown","798bd9c0":"markdown","f909dcdd":"markdown","235b4c8f":"markdown","690bc41f":"markdown","d9ec68d6":"markdown","8c99e3f7":"markdown","73098a07":"markdown","fcc56911":"markdown","7e94dd3b":"markdown","b6b4ad3f":"markdown"},"source":{"e4473335":"import numpy as np\nimport pandas as pd\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\nimport warnings\nimport sklearn.linear_model\nimport sklearn.neighbors\nimport sklearn.tree\nimport xgboost\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import cross_validate\nimport shap\nimport matplotlib.pyplot as plt\nimport random\n\nwarnings.filterwarnings('ignore') # Removing warnings","1281e2a5":"# print(f'You choose :')\n# comp = input()\n\ncomp = random.choice(['bmw', 'audi', 'ford', 'hyundi', 'skoda', 'toyota', 'merc']) # for now\ncomp","e25195e5":"df = pd.read_csv(f\"..\/input\/used-car-dataset-ford-and-mercedes\/{comp}.csv\")\ndf.head()","4b53b323":"df = df[[ col for col in df.columns if col not in ['price','model']] + ['price']]\ndf.head()","207bb48e":"class Preprocessing(LabelEncoder):\n    def __init__(self):\n        self.params = {}\n\n    def fit_transform(self, y):\n        for column in y.columns:\n            if y[column].dtype == 'O':\n                self.params[column] = sorted(y[column].unique())\n                y[column] = super().fit_transform(y[column])\n                \n        y = StandardScaler().fit_transform(y)\n        return y\n    \n    def get_param(self, column):\n        return self.params[column]","0b59eea3":"prepross = Preprocessing()\ny = df.iloc[:, -1]\ndf =  prepross.fit_transform(df.iloc[:,:-1])","dbda68ef":"clf_lr = sklearn.linear_model.LinearRegression()\nclf_ridge = sklearn.linear_model.Ridge(alpha=.5)\nclf_svr = sklearn.svm.SVR()\nclf_sgd = sklearn.linear_model.SGDRegressor()\nclf_knn = sklearn.neighbors.KNeighborsRegressor()\nclf_dt = sklearn.tree.DecisionTreeRegressor()\nclf_xg = xgboost.XGBRegressor(verbosity=0)","e81c6cfc":"for clf in [clf_lr, clf_ridge, clf_sgd, clf_svr, clf_knn, clf_dt, clf_xg]:\n    if not isinstance(clf, type(xgboost.XGBRegressor())):\n        print('\\33[35m'+str(clf))\n        scores = cross_validate(clf, df, y, cv=5)\n        print('\\33[32m'+str(scores['test_score'].sum()\/0.05))\n        print('\\33[31m'+'-'*20)\n    else :\n        print('\\33[5m'+'\\33[35m'+str(clf))\n        scores = cross_validate(clf, df, y, cv=5)\n        print('\\33[32m'+str(scores['test_score'].sum()\/0.05))\n        print('\\33[31m'+'-'*20)","8e317cb3":"parameters = {'n_estimators':[58],\n             'booster':['gbtree', 'gblinear', 'dart'], 'random_state': [0]}\n\nclf = GridSearchCV(clf_xg, parameters)\nclf.fit(df, y)\nclf.best_params_","0e61d580":"scores = cross_validate(clf.best_estimator_, df, y, cv=5)\nprint(str(scores['test_score'].sum()\/\/0.05))","8916ec83":"plt.figure(figsize=(20, 20))\nxgboost.plot_importance(clf.best_estimator_)\nplt.show()","576973d2":"# MODELs To Try","5e3448e3":"# Pre-Processing class","a45a0959":"<img alt=\"Ensemble Methods: Tuning a XGBoost model with Scikit-Learn | by Silvan  Miranda | Medium\" class=\"n3VNCb\" src=\"https:\/\/miro.medium.com\/max\/789\/1*GliTGx-qIeW6JFJ4j8ZSBA.png\" data-noaft=\"1\" jsname=\"HiaYvf\" jsaction=\"load:XAeZkd;\" style=\"width: 832px; height: 275.224px; margin: 0px;\">","04619309":"<p style=\"color:black;font-size:15px;\">After plotting importance graph, it is visible that:<\/p> \n\n- **FuelType**\n- **Mileage**\n\n<p style=\"color:black;font-size:15px;\">are quantities responsible for their prices<\/p> \n","798bd9c0":"<p style=\"color:black;font-size:18px;\">Year Transmission Mileage FuelType Tax Mpg EngineSize<\/p> \n\n\n","f909dcdd":"- <p style=\"color:black;font-size:20px;\"><b>XGBOOST<\/b> is best in almost all the cases.<\/p> \n<p style=\"color:black;font-size:15px;\">Using GridSearchCV to find the best parameters:<\/p>\n<p style=\"color:black;font-size:15px;\">Ran on 0 to 150 n_estimators, <b>58<\/b> was the best<\/p> ","235b4c8f":"## Placing Price Column At Last","690bc41f":"<img class=\"rg_i Q4LuWd\" src=\"data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxASEhMTEhIQEhUTGRUWFxYVFRUVFxYWGBkWGBUWFRUYHSogGBolGxcXITEhJSkrLi4uFx8zODMyNygtMCsBCgoKDg0OGxAQGy4lICYwLTUvMisrLTYtLy8wLS0tMC0tLS0rLS8tLysvLS8vLS0tLS0tLS0tLS0tLS0tLS0tLf\/AABEIAI0BZQMBIgACEQEDEQH\/xAAcAAEAAQUBAQAAAAAAAAAAAAAABQIEBgcIAwH\/xABQEAABAwIDAgcMBQkFBwUAAAABAAIDBBEFEiExUQYHE0FUkdIVFxgiMlJhcYGTlNMjM0JyoQgUJGJzsbPB0XSCkrLCNUNFU4TE8DRjovHy\/8QAGwEBAAIDAQEAAAAAAAAAAAAAAAMEAQIFBgf\/xAA9EQABAwEEBggFAgQHAQAAAAABAAIRAwQhMVESQWFxgZEFExRSobHS8BUiMsHhM2JCcsLRIzRDRIKi8ST\/2gAMAwEAAhEDEQA\/AN4ouaeE3GVjMFbWRRVZEcdROxoMUD8rWyOa0AuYTYABR3fax7ph+HpvlIsLqdFyx32se6Yfh6b5Sd9rHumH4em+Uiyup0XLHfax7ph+HpvlJ32se6Yfh6b5SIup0XLHfax7ph+HpvlJ32se6Yfh6b5SIup0XLHfax7ph+HpvlJ32se6Yfh6b5SIup0XLHfax7ph+HpvlJ32se6Yfh6b5SIup0XLHfax7ph+HpvlJ32se6Yfh6b5SIup0XLHfax7ph+HpvlJ32se6Yfh6b5SIup0XLHfax7ph+HpvlJ32se6Yfh6b5SIup0XLHfax7ph+HpvlJ32se6Yfh6b5SIup0XLHfax7ph+HpvlJ32se6Yfh6b5SIup0XLHfax7ph+HpvlJ32se6Yfh6b5SIup0XLHfax7ph+HpvlJ32se6Yfh6b5SIup0XLHfax7ph+HpvlL532se6Yfh6b5SIuqEXLHfax7ph+HpvlJ32se6Yfh6b5SIup0XLHfax7ph+HpvlJ32se6Yfh6b5SIup1HY5jEFHC+ed4jjYLknaTzNaOdx2ALmnvtY90w\/D03ylC8JeGWIV7WNq5zK2MlzRycbLEixP0bRfTeiLI+F3GriNbI5sEklLDm8RkRLZCNLZ5G630vYEDXnUD3dxi1\/zzEPiZr\/5lkPFZwfgq52RSE5Sx7zlsCSLeLc7Nv4LcGI8AsPMbo2QNjLh4rg55c08xu4lRBz3ToxxV80LNR0RXLiSAflAgA7Tidy15xU8az43CkxCV743n6OokcXOjcT5MrnalhJ8o+Tz+L5O\/GuB1Gq5I4Y8HJKWZ7XNs5lr21DmkXD2ndbVV4PxjYtSxNhgqiyNl8rTHC+1yT5T2E8+9bMeHBV7RZ3UHQbwbwRgRmP7al1si544BcbGKPraeCokjqI55Y4jmjZG5md2XMx0bRrqDYg3tbS910Ot1AiIiIiIiIiIiIucOFrj+fVep+vn\/iOURmO8qU4XH9Pq\/wBvN\/Ecoi65jsSvc0ierbfqCrzHeUzHeVRdLrCkk5qvMd5TMd5VF0uiSc1XmO8pmO8qi6XRJOarzHeUzHeVRdLoknNV5jvKZjvKoul0STmq8x3lMx3lUXS6JJzVeY7ymY7yqLpdEk5qvMd5TMd5VF0uiSc1XmO8pmO8qi6XRJOarzHeUzHeVRdLoknNV5jvKZjvKoul0STmq8x3lMx3lUXS6JJzVeY7ynKHeVRdLoknNV5jvKZjvKoul0STmq8x3lMx3lUXS6JJzVeY7yobhLFdrH+acp9Slrrwros8bm7x+PMt6Z0XAqva6ZrUXMzF28XjyVPADFjT1ET\/ABvopIyQ06uZmGZu22o03arqWVtwuOsHeRK0edcfhddVcBcQdPQU8jg4Oy5TmNySw5c1ztva6usue4Z3rzFoHWWWnU7stPmPNQnGBwaFVC57G\/TRAlu9zRcuj9utvSubsTpeTfpsOo\/mF17KdSubuMvDORqJmhgYGvLmACwyO2WA5tnUj\/leHZ3FZs566zPpO\/g+ZuwT8w8uKhOL7\/adB\/aaf+I1dhrjzi+\/2nQf2mn\/AIjV2GpFQREUfiOMU1OAZ6iCEE5QZJGMBO213Ea2BRFIItd4jxx4RDI6MSTTZbguijzMuCQQ1ziM2zaLg3FiVknBzhbh9eCaSoZIWmzm2cx40BvybwHW18oC1766FEWQIiIi5p4Wn9Oq\/wBvP\/EcsfrK9kVs2Y3802U9wvP6dWft5\/4j1h3CLaz1H+SoMaHPg7V6601nUbL1jcQG48AruDGA97WiPyja7j\/JSV1iuEj6VnrWUXSswNMBadG2ipXpl1Q6\/sFVdLqOrsUbGcoGZ34NVq3HTfWMW9BsVgUnkSApalvs9N+g51+4mOQU3dLrwZUtczODoAf\/AKUScePMwe0rDabnYBbVrZQowXuxwiT5Kdul1E02NNcQHty+kaj2hfa\/FDG5zMgOzXMs9U+Yha9vs\/V9ZpXYYHFSt0urDuh9Dythfd\/eyryocVMj2tyAbdc25Y6t0E5LbtlHSa2b3AEXHXgpS6XUVV4y1pIaMxHP9nqXlDjuvjMsP1SthReRMLR3SNma7RL\/ADjmpq6XVDJA4Ag3Dl9uoldxVV1YTYmGzBmmXY47nHn9X9V611VybC7n2D7yxUm+1T0aQdJK5PSVudQLWMxxO7Lj5b1mhS6jMGrM7chPjN\/+TdykbqJzS0wV0aNZtamHtwPuOCquo+fGI2Ets8kacyvgVidf9bJ94qSiwPJlU+krTUs9MOZrOWxZFh+Icrm8UNy5ee981\/6L2rZixj3CxI3qM4OjSQ+lv81IVrmiNxcLi2o36hYe0CpGq77LezVX1LJpuN8Ov4nLgo6mxqR72tyxi5Hnf1XvVYyGOc3ISWm3lWVrTVkOdgbDY5tDmOisMT+tk+8VMKbS+NGLvuuY+2VqdDSbUDjpRIH7Zi9oWUU02djXWtcXte69LqIOICKOIWzEtuea2quqCt5UHxC0Dnuq7mECYuXXpWqm4imXfPA1bJyhXt0uompxpoNmDNbnOg9gVMOOAmz2ZRvbrZZ6l8TC0PSNmDtHT8454KYul1SCCLjUFLqNXVVdeVXLljcdwKruozHpbRhvnH8G\/wDgWzBpOAUFpqdXRc\/IH+yjsEbeUegE\/gV1lwWpeRo6dnmxt577RfaPWua+LrDfziqjYdkkjGHaPFzAusRsNrrqad2hV5l73HcF5av8llpMzl39I8pVoStJ8dcFqgu86Fh6rj+S3WtS8dkGaSHmzxOHta93aCV\/pnaPNZ6Lvr6ObXD\/AKlap4I1scFbSTSkiOKaKR5AJs1r2lxsNToFt7hFx8MDbUNMXOufHqNGWBFi1jHZnXF9pbbTatS0fBqaQ2YC623Ixzz+GxZvgnFFVy6ujbGNNZnEXB5w1oN\/wWOtafpv3J8Pqs\/VIZ\/MRPISfBRWI8bGMz5micRguLrQsa0ga+KHanKL85J0GqxQ0NRK4ufmJdqXPJLid5J1K33hfFHTRg8rK555gxrYgPXqbrJcP4NUUGrIIgbWzEZif8V9Vn\/EOQ8U\/wDjp4uc\/cNEczJXPNPwJqXNzcjUuBF7tifl33vl2KGImpJWSRucxzTmY9psQRzhdaBaH45KeJtTLlDRdsbiG20eRrcDYTt9q1IcwgzMlSMdRtLXNFMMIaSCCdWIM4zndC3Pxb8LG4nSCazmyMIjlBtblA0ElpHMQQfRe3Mviw\/8nD\/0FR\/aD\/DiRTLnLAeGB\/Tqz9vP\/EesP4Q7Y\/Uf9Ky7hgf0+s\/bz\/xHrEeEH2P7\/wDpVKl+rzXqLf8A5Dg3zCtsGH0rf737ip2aqa0Hxm3AJDb63A3LE170YBewHYSAfVfVT1KQcdIrl2K3mizqmtEk4k5wMI+\/BIAHPaHGwJ1P717VQjc4Nhad20kn+i8qmBzHFp6969aavdG2zWtBP2udbmTe3zuVWnotmlV+W+8xLrtQy369dykGQtgjdyhJz6ZR6N39VZtrothgbb0ON+tUVE7pGMJuclwT67WVcdcwR5eTBNrXuetRhhiTed6uutDC4NpuDWBt0t0idZF4OuRlIKjipXGmaRO3tF1EqfxeO8IPm5ez\/RbPMPbxVeyM07PW2Bp5ElWHKfo+X9f8Lf1X2hJbHM8cwa3\/ABEXVhdTlBTXgLfPN+z+5YeQwbyt7IH2iqNHFrCBvggeJ8FGUTGF3jmzRqfT6FU5gkfaJpA9Jv7TuVvKwtJBFiOZXLMQc1uVga39YbStyDiPwq9J1ONCrcBeYHzH9t\/0+G1TtDTcmwtuXc\/\/AOV7q1oqnOwO59jvX6F54pUljNNrvF9VtpVGHOfBxXqRVpUrOHt+gCRuUXitVnfYeS3QeneVRFTgxueXAEWygkXO\/RWYUiMHl\/U\/xBXTDABMLzLOttNR1TQ0yctU3Dlq3KzhmLHBw2hZRTzh7Q4c\/wCB3LFpWFpIO0aKSwYvB8lxa7aeYelaV2AtlWei7Q6lV6ogwfA5\/Y8FNgrF8Q+tk+8Vkt1jWIfWyfeKis31FXumv0m7\/sVK4BpG425\/5K4r5mujkAc02b9k3+0FjKvaH6uf7o\/zBSPpX6c6wqln6QmkLOG\/wuvn9pOEbF5UP1jPWFVif1sn3ivmH\/Wx+sJif1sn3ipf9Th91R\/2f\/P+leUshdt9XsCm6y0dOA07bC4+1fVxUZWU+UMcNjwD7edXNE10kTo7GwOZp5r7lG+CA7UCrNma5lSpSI+dzTB4T4yL84VrQsjLiZDZoF7DnO5fWw8q8iNpA9JvYekq2c0g2IsQrx2JvDQ1gDAN3P61IQ6Zb+FVpPolujVuAyHzHZJwj3ep2khyMDbk23r1uvClnztDtl1VJK1u0taueZm\/Feuplgpgt+mLt2rHYvW6gMbnzPt5ot7Vey4vGNmZx6lFUkZkkAP2jr\/NWKLC2XOuXI6StLawbQomS46vDx8luHiJwYco6YgfRsNr7c8nON1m3HtW6ZmXCxbixwY09EwuFny\/Skc4B0YD\/dAPt9CyxWaQIbfrvXGtz2urEN+lsNG5t3iZPGdat20+8qwxfg1SVRYZ4uVMd8t3OFs1r+Q4X2DapdFIQDcVWY9zDpMJBzBIPgvCkooohaONkY\/UaG\/uXuiItUKsSr1zbiysnCxRFaYq6YQyGBrXSgeIHnxSfT7L6c5suZ+Gsk7pSZw4SFzzIHAgh24jmO1dRLSfHXyX5wctr8kzPbz7ki\/py5FDVuLXbcF0bC7SZUoxi0mdY0b4P7TEHaVln5PMsBoJmtd9IJiZAS0+U1oY5rdoaQ21ztLXbkUD+Td\/xD\/pf+4RSKisZ4Yn9PrP28\/8R6gaimZJbNfTcbKc4Yn9PrP7RP8AxHqGuuaSQ6QvasY19FrXCRA8gvBuHwj7APrc5eraeP8A5bT7FVdLoXuOJWzaFJn0tA4BfZWNcLOAPrXh+Ywj\/dt63n\/Uva6XWA4jArLqVN5lzQTtAPmqsotazbeb9nqXi2kiBuGN6yfwXpdLoCQsupsdBcAYwuCoNJFe+Rtz6XL1kYHDKRcHmVN0uknNBTYJgC\/G4X715Cii8xvW5XDQALAZQFRdLoSTijabGfSANwCSwsf5TWn\/AM3rzbRxD7Detzv8y9LpdA4gQFg0qbjpFonOBPPFVhfbrzul1hSLyfRREg5cp2+LorglUXS6ySTitG02NJLQBOML46BhdmLWuO8r1Ll53S6xK2DQJgYqu6tZMPjc4uIcSdfKXvdLrIcRgtKlJlQQ8A7wvEUMQ\/3bfbnK9TAwgjKyx228W\/8AhX26XTSOaCjTaIDRyCojpY2m4a24Xx9HGSSW3J27V6XS6aRzTqacRoiNwR0LCAC1pA2N5lXf1qh8lgTuUBLUSSO5zfY0fyUjKZeq1qtbLNA0ZccAOX4A5BS9ZLB9vK4+0nrarB9bCPIhHrJJ\/Ar5HhMh22b6yr2PCYxtLn+zKOtSTTZiSVRLLdaHaQptZtIE8zJ8FGzYjK7TNb0BI6GZ5vlPrdp+9T0cLG7Gtaqlr2iLmiFMOhy86VeoXHZ+Z8goqLBvOd\/h1WdcXXAoVc97ObEyxe\/fuY07z+A9ixpbe4nMUzRSQEtux2cDnLXeWTvs6w9oSm41Hw43La2UKdjs5qUGjSGvEidYnXktlxsDQGjQAAD1DQKpEV9eTRERERERERWUhuSr0hWcrLFEVtW8pyb+Sy8plOTNo3NbS53XXNXDSKpD3\/nAcJc95M23N\/T8LLptaZ46qiI1FgBdsQDyDqSScrTuI8X2EKCsMHZFdPo52kKlGPqab9YgeR17VN\/k7VVP+bVTOT+mbIx0j7XztcHcmL7dMr9PTfnKKM\/Ju\/4h\/wBL\/wBwilXPWG8M8Qi\/P627xcVFQNjv+Y\/9VQ3dCLzx1O7K3PjHEjDUVE85rJWmeSSUtETSGl7i6wObW11Z+D\/B06X3Te0oOzs2++C6remK7WgQ27YfUtSd0IvPHU7sp3Qi88dTuytt+D\/B06X3Te0ng\/wdOl903tJ2dm33wWfjNfut5H1LUndCLzx1O7Kd0IvPHU7srbfg\/wAHTpfdN7SeD\/B06X3Te0nZ2bffBPjNfut5H1LUndCLzx1O7Kd0IvPHU7srbfg\/wdOl903tJ4P8HTpfdN7SdnZt98E+M1+63kfUtSd0IvPHU7sp3Qi88dTuytt+D\/B06X3Te0ng\/wAHTpfdN7SdnZt98E+M1+63kfUtSd0IvPHU7sp3Qi88dTuytt+D\/B06X3Te0ng\/wdOl903tJ2dm33wT4zX7reR9S1J3Qi88dTuyndCLzx1O7K234P8AB06X3Te0ng\/wdOl903tJ2dm33wT4zX7reR9S1J3Qi88dTuyndCLzx1O7K234P8HTpfdN7SeD\/B06X3Te0nZ2bffBPjNfut5H1LUndCLzx1O7Kd0IvPHU7srbfg\/wdOl903tJ4P8AB06X3Te0nZ2bffBPjNfut5H1LUndCLzx1O7Kd0IvPHU7srbfg\/wdOl903tJ4P8HTpfdN7SdnZt98E+M1+63kfUtSd0IvPHU7sp3Qi88dTuytt+D\/AAdOl903tJ4P8HTpfdN7SdnZt98E+M1+63kfUtSd0IvPHU7sp3Qi88dTuytt+D\/B06X3Te0ng\/wdOl903tJ2dm33wT4zX7reR9S1J3Qi88dTuyndCLzx1O7K234P8HTpfdN7SeD\/AAdOl903tJ2dm33wT4zX7reR9S1FLWxFpGcai2x3ZUfhc2WRu2x0K3b4P8HTpfdN7S1xxl8CjhU8UbZHSskZnbI4BvjBxDmgAnZ4pv8ArLYUmhpaNar1ekKlSoyoQJbhE+N5Xgi8qSbOxruv7y9VzyIMFeyY4PaHNwKIiLC2RZfxYYlyNc1pLQ2UOjJPpylljvuGLEFcUVQ6ORkjbXa5rhfZdpuL+hbNdokFRWiiK1J1M6x\/54rqGM3AVSs8Jqmyxte0hweA4EG4NxzFXi6y+f360REREREREVpO65V2raoZY+tEVpVh5Y8RkB5a7ITsDreKT6LrnDhzhlTC94qGu5QnOSSDcEnxgRtBsV0qtNcc+KMfNybcp5COziNuZ58k+oW9pKgrjB2RXU6McSalKLnNMnWABjunVtnUrbiU4Y4bQRVLat3JPkfG4PyyPztAcA2zGm2U3Nzt5T0ItZYfhNRUZuQgmny2zcmx78t72zZQbXseoopVzl2oiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIsC458CFVhkzgLyUw5dmoFgz63b\/7eY23gLPVRIwOBB2EEH1FEXHGBzbWf3h7Nv4KUVtwqwg4diE0HjZYn+KXCxdG7Vp126HbsNldbdVRtDYdOa9X0NaOsodWcW+Rw5XjgF8REVdddERERby4qMT5Wja0kF0Tiy3OGEBzL9bupZytKcUGJZKh8JIAlDi0c5c3VoB+7m6luppuunQdpMC8T0nS6q1OGo3jj+ZX1EVlX4xSwfWzwRm1wHyNa4jeGk3PsUpMKgBJgK9RYLinGlQxaRCSbQ6gZGg8181isGx3jiqTpEY4dNcoDyb7CC4aKI1m4C\/crrejq8aTxoDNxj8+C3hNM1gLnOa0AXJJAAA2nVYnjfD7D4iQJeVc0XyxAuv6A7yb+1c+YpwwqZzd8krza15Hvdp6iVZU0FdUn6KKolJubRRudcDabMGwLGlUOAjf+Fv1Vkp\/W8v\/AJRA5m\/kFtjHONk2c2FjIgRYOf4zweewGi1LiVe+ofZoc4vd6S57ydtt5J2LOcH4kcUlymYwUzSTfM\/lHiwNjlZdpubfaW0uAXFbR4c5sznGoqANHuADWEgAmNnMdup1sUDL5cZWH2oBhp0mBgON5JO8nVsEJxR8C3YfSEzty1FQQ+QXvlaLiNhtbUAknbq46otgopFTREREREREREREREREREREREREREREREREREREREREREREREREREREREREWjfyiODr7w17SC0BsD2hhuDd7myFw0IN8utrHLtvprDC5s0Y3s8Xr8ldQ8OMC\/PqGop7Xc9hLL\/8xvjM5x9oDabLlLDHOjlMbgWm5aQdocOY\/iFDXbpM3LpdFV+qtAnB139vGFLoiLnr2CzPi74PU9U6Z8wfI2INPJtOXNmJFy4agD0KO4b4FHR1GSN7i1zWvAcQXMuNWvsAL3vzDRQ1DXSwuzRSOjdszMe5jretpuqKqoe9xfI4uc7Uue4ucfSXHUrfSGjEX5qqKVUVzUL\/AJI+nI+9aU1Q+NwexzmuF7OaSCLixsR6CqpeGNVE\/wCvqMw5xI7n05yo6XEY28+b7v8AVRmV9TM1sTS58haxjdLlx0A10Gqlo0iT80wqHSVtpsb\/AIZaXTkDd7zWXVfGXWvZlNTO4EWIBy6EWIuBdYvU47M83uQd5JcesreVDxFUDXNdJPVPH2mXY25t5zRcWOvsWb4LwJwykymCkga9puJHMD5AbAXEjruboOYganerIot1371xD0hXwZDP5QB4i\/xXNeE8CMVrQ10dNM5ji2z3+IyzrEPBda7bG9xdZ5gvELO7K6qq2ReSSyJhkdb7bc5IDTbYbOGuzTXfaKUCMFScS4ybysFwXipwimseQM7wLZp3F99bglmjARYC4aNPas0ggYxoaxrWNF7BoDQL6mwHpXsiLCIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiLlzjnwM0uKSuaCGVH07T41szieVGY7TnzOsNmcBdRrEeMXghTYjTOEoyyRBzopQLuYecelptq39xsURc4irYQHFzRc7lbSYtGPJDnevQKwwWh5eohgzZOVkZHmtfLmcG3tcXte9rrfOD8RVAzk3Tz1E51zAZY2O0NrAXc22n2uZVxZmDFdh\/TdciGgDbj5rRMuKynZZn3R\/VZBgfF7i1dlc2nkax2okm+jbYtzAjN4zgRaxAI1XTeD8G6OlDRT08MWUEBzWDPYm5Bf5RufSpZTNY1uAXNrWmrW\/UcTvw5YLReA8QziQa2qs2wJZAPGzEajO8EaG2uU3stkcFuL7DcPIfBDeUADlZTnk5xcE6MJDjfKBfRZYi2UKIiIiIiIiIiIiIiIiIiIi\/\/Z\" data-deferred=\"1\" jsname=\"Q4LuWd\" width=\"500\" height=\"142\" data-index=\"0\" alt=\"Download Video Materials - Leave A Like Png PNG Image with No Background -  PNGkey.com\" data-iml=\"1457.3249999957625\" data-atf=\"true\">","d9ec68d6":"# Importing Libraries","8c99e3f7":"# Thank You.","73098a07":"# Reading Data","fcc56911":"<p style=\"color:red;font-size:18px;\">Using best estimator and calculating score.<\/p> \n","7e94dd3b":"## Picking Best Model\n- Using [CROSS_VALIDATE](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.model_selection.cross_validate.html#sklearn.model_selection.cross_validate) to test data on various models","b6b4ad3f":"> Can work on:\n* Audi \n* Ford\n* Bmw \n* Hyundi\n* Merc\n* Skoda\n* Toyota"}}