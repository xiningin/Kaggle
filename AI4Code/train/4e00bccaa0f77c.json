{"cell_type":{"fe259ffa":"code","b4724db1":"code","3c06ded1":"code","bdf26a15":"code","4e3ab562":"code","15015b8a":"code","414d756f":"code","b48340a2":"code","f53876be":"code","0f5c1536":"code","5c0b3934":"code","2555713b":"code","961723df":"code","bf0da8d6":"code","894c47ba":"code","73ef839f":"code","6a7918fc":"code","23f360e7":"code","edd74715":"code","2651d49e":"code","e2a1a92a":"code","f9ee7930":"code","f9feead8":"code","1a07d680":"code","2ee34785":"code","5de52727":"code","cf2648dc":"code","31430968":"code","ba1da7f6":"code","1fdedee0":"code","d2f1ce6b":"code","e74dac4b":"code","78a7cdb1":"code","ddd08212":"markdown","d5b733df":"markdown","13441dcf":"markdown","bce16a68":"markdown","6401fb14":"markdown","09bb0c15":"markdown","d83789ea":"markdown","13f3d8f0":"markdown","d95f417c":"markdown","6792e794":"markdown","562a3ed7":"markdown","4399f5ea":"markdown","760800c8":"markdown","aef47fa3":"markdown","4b927446":"markdown","1468663b":"markdown","bd6a68a2":"markdown","6b9cdfa4":"markdown","e62833a0":"markdown","dd280e6c":"markdown","ade13d1b":"markdown","22b30462":"markdown","b0f3935f":"markdown","c9a684e6":"markdown","bcdc5eb0":"markdown","aa9c8f7e":"markdown","3387d672":"markdown","4dbf8b2a":"markdown","93aac812":"markdown","a3056538":"markdown","31653c4f":"markdown","443f5565":"markdown","a7d41376":"markdown"},"source":{"fe259ffa":"import pandas as pd\nimport numpy as np\nfrom decimal import Decimal\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sn\nimport os\nimport plotly.graph_objs as go\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\npd.options.mode.chained_assignment = None\npd.options.display.max_columns = 9999\npd.options.display.float_format = '{:20,.2f}'.format\nimport colorsys","b4724db1":"DataSetGender = pd.read_csv('..\/input\/gender_submission.csv')","3c06ded1":"DataSetGender.shape","bdf26a15":"DataSetGender.isnull().sum()","4e3ab562":"TotalDataSetGender = len(DataSetGender)\nprint(\"Total Number of Data Count :\", TotalDataSetGender)","15015b8a":"DataSetGender.fillna(0)","414d756f":"DataSetGender.head(10)","b48340a2":"DataSetTest = pd.read_csv('..\/input\/test.csv')","f53876be":"DataSetTest.shape","0f5c1536":"DataSetTest.isnull().sum()","5c0b3934":"TotalDataSetTest = len(DataSetTest)\nprint(\"Total Number of Data Count :\", TotalDataSetTest)","2555713b":"DataSetTest.fillna(0)","961723df":"DataSetTest.head(10)","bf0da8d6":"DataSetTrain = pd.read_csv('..\/input\/train.csv')","894c47ba":"DataSetTrain.shape","73ef839f":"DataSetTrain.isnull().sum()","6a7918fc":"TotalDataSetGender = len(DataSetGender)\nprint(\"Total Number of Data Count :\", TotalDataSetGender)","23f360e7":"DataSetTrain.fillna(0)","edd74715":"DataSetTrain.head(10)","2651d49e":"SexCount = DataSetTrain['Sex'].value_counts()\nprint(SexCount)\npivot = DataSetTrain[\"Sex\"].value_counts().nlargest(10)\npivot.plot.bar()\nplt.show()","e2a1a92a":"palette = 'cividis'\nplt.figure(figsize=(8,5))\nsn.heatmap(DataSetTrain.drop('Survived', axis=1).corr(), annot=True, cmap=palette+'_r')","f9ee7930":"DataSetTrain[[\"Sex\", \"Survived\"]].groupby(['Sex'], as_index=False).mean().sort_values(by='Survived', ascending=False)","f9feead8":"DataSetTrain.groupby(['Embarked','Survived', 'Pclass'])['Survived'].count()","1a07d680":"sn.set(font_scale=1)\ng = sn.factorplot(x=\"Sex\", y=\"Survived\", col=\"Pclass\",\n                    data=DataSetTrain, saturation=.5,\n                    kind=\"bar\", ci=None, aspect=.6)\n(g.set_axis_labels(\"\", \"Survival Rate\")\n    .set_xticklabels([\"Men\", \"Women\"])\n    .set_titles(\"{col_name} {col_var}\")\n    .set(ylim=(0, 1))\n    .despine(left=True))  \nplt.subplots_adjust(top=0.9)\ng.fig.suptitle('How Passengers Survived by Class');","2ee34785":"SurvivedCount = DataSetTrain[\"Survived\"].value_counts().nlargest(10)\nprint(\"Survived Count \\n\")\nprint(SurvivedCount)\npivot = DataSetTrain[\"Survived\"].value_counts().nlargest(10)\npivot.plot.bar()\nplt.show()","5de52727":"DataSetTrain[DataSetTrain[\"Survived\"]==1][[\"Name\", \"Sex\" , \"Age\", \"Pclass\", \"Cabin\"]]","cf2648dc":"DataSetTrain[DataSetTrain[\"Survived\"]==0][[\"Name\", \"Sex\" , \"Age\", \"Pclass\", \"Cabin\"]]","31430968":"f, ax = plt.subplots()\nsn.countplot('Sex', hue='Survived', data=DataSetTrain, ax=ax)\nax.set_title('Survived and Dead with Sex')\nplt.show()","ba1da7f6":"UniqueCabin = DataSetTrain['Cabin'].unique()\nprint(\"All Unique Cabin Name \\n\")\nprint(UniqueCabin)","1fdedee0":"TotalSurvived = DataSetTrain.groupby(['Survived'])['Fare'].sum().nlargest(15)\nprint(\"Total Fare for Survived and Not Survived\\n\")\nprint(TotalSurvived)","d2f1ce6b":"FareMax = DataSetTrain['Fare'].max()\nprint (\"Max Fare Mode is :\", round(FareMax,2))\nFareMin = DataSetTrain['Fare'].min()\nprint (\"Min Fare Mode is :\", round(FareMin,2))\nFareMean = DataSetTrain['Fare'].mean()\nprint (\"Mean Fare Mode is :\", round(FareMean,2))","e74dac4b":"SurvivedFareData=DataSetTrain[DataSetTrain['Survived']==1]\nSurvivedFareMax = SurvivedFareData['Fare'].max()\nprint (\"Survived Max Fare Mode is :\", round(SurvivedFareMax,2))\nSurvivedFareMin = SurvivedFareData['Fare'].min()\nprint (\"Survived Min Fare Mode is :\", round(SurvivedFareMin,2))\nSurvivedFareMean = SurvivedFareData['Fare'].mean()\nprint (\"Survived Mean Medal Mode is :\", round(SurvivedFareMean,2))","78a7cdb1":"NotSurvivedFareData=DataSetTrain[DataSetTrain['Survived']==0]\nNotSurvivedFareMax = NotSurvivedFareData['Fare'].max()\nprint (\"Not Survived Max Fare Mode is :\", round(NotSurvivedFareMax,2))\nNotSurvivedFareMin = NotSurvivedFareData['Fare'].min()\nprint (\"Not Survived Min Fare Mode is :\", round(NotSurvivedFareMin,2))\nNotSurvivedFareMean = NotSurvivedFareData['Fare'].mean()\nprint (\"Not Survived Mean Medal Mode is :\", round(NotSurvivedFareMean,2))","ddd08212":"# Import Gender CSV","d5b733df":"# DataSetTest Shape","13441dcf":"# Passengers Survived by Class","bce16a68":"# Sex wise Mean Total Survived","6401fb14":"# Total Survived Count","09bb0c15":"# List of All Survived Passenders","d83789ea":"# DataSetTrain Shape","13f3d8f0":"# DataSetTrain Top 10 Records","d95f417c":"# Fill Null value with 0 in DataSetTrain","6792e794":"# Total Number of Data Count for TotalDataSetTest","562a3ed7":"# Survived and Dead with Sex","4399f5ea":"# Import Test CSV","760800c8":"# List of All Not Survived Passenders","aef47fa3":"# DataSetTest Top 10 Records","4b927446":"# Total Null Value for DataSetTest","1468663b":"# Not Survived Fare Max, Min and Mode Details","bd6a68a2":"# Survived Graph","6b9cdfa4":"# DataSetGender Top 10 Records","e62833a0":"# Find All Unique Cabin Names","dd280e6c":"# Sex wise total with Graph","ade13d1b":"# All Fare Max, Min and Mode Details","22b30462":"# Total Number of Data Count for TotalDataSetGender","b0f3935f":"# DataSetGender Shape","c9a684e6":"# Fill Null value with 0 in DataSetGender","bcdc5eb0":"# Import Train CSV","aa9c8f7e":"# Total Number of Data Count for TotalDataSetGender","3387d672":"# Total Null Value for DataSetTrain","4dbf8b2a":"# Total Survived Fare","93aac812":"# Embarked, Survived, Pclass wise count","a3056538":"# Survived Fare Max, Min and Mode Details","31653c4f":"# Total Null Value for DataSetGender","443f5565":"# Import Packages","a7d41376":"# Fill Null value with 0 in DatSetTest"}}