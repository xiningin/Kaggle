{"cell_type":{"09a5d123":"code","1cfd7d96":"code","1f6cb14a":"code","5997282d":"code","e19ab4f8":"code","e8bd6399":"code","43f5b84d":"code","ef2016cc":"code","5f9b48fa":"code","8ff05906":"code","ad730ddb":"code","2bac4212":"code","69df963c":"code","fc946e69":"code","c948c8e9":"code","7f419ac3":"code","b7c8c051":"code","a086fad2":"code","55cc09b3":"code","31522c32":"code","833bdcc1":"code","1db83327":"code","11be6291":"code","97a8c0f2":"code","e2af2a35":"code","a9bab6c4":"code","82a60501":"code","1b35f950":"code","f0b57b0a":"code","17155e6e":"code","91bbc318":"code","0843633a":"code","4ea9ddf2":"code","b0ad68a6":"code","f30bb375":"code","5a213a40":"code","b13cea02":"code","0fe99237":"code","2eca3a0d":"code","eee174b0":"code","699007ed":"code","0770d3ee":"code","fd243acc":"code","fd450057":"code","b638cf49":"code","b2f94921":"code","014ca0a0":"code","85e82827":"code","381701c4":"code","a6a38b82":"code","a557e609":"code","247b6d2b":"code","61e05aa9":"code","059948d4":"code","00640547":"code","73c8afbc":"markdown","972e27c9":"markdown","4fff2519":"markdown","bd7deeb3":"markdown"},"source":{"09a5d123":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly as py\nimport plotly.graph_objs as go\nimport plotly.express as px\nfrom plotly.offline import init_notebook_mode, iplot, plot\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1cfd7d96":"covid=pd.read_csv(\"\/kaggle\/input\/covid19-datasetoctober\/owid-covid-data.csv\")","1f6cb14a":"covid.head()","5997282d":"covid.info()","e19ab4f8":"covid_india=covid[covid[\"location\"]==\"India\"]","e8bd6399":"covid_india.info()","43f5b84d":"covid_india.isnull().sum()","ef2016cc":"covid_india.head()","5f9b48fa":"covid_india=pd.DataFrame(covid_india)","8ff05906":"covid_india[\"date\"]=pd.to_datetime(covid_india[\"date\"],infer_datetime_format=True)","ad730ddb":"covid_india=covid_india.set_index(['date'])","2bac4212":"covid_india.head()","69df963c":"covid_india.drop([\"iso_code\",\"continent\",\"location\"],axis=1,inplace=True)","fc946e69":"covid_india.head()","c948c8e9":"def plo(j,m,k):\n            fig = px.line(j,y=m)\n            fig.update_layout(\n            title={'text':k,'x':0.5},title_font_color=\"black\")\n            fig.update_xaxes(rangeslider_visible=True)\n            fig.show()","7f419ac3":"plo(covid_india[\"new_cases\"],\"new_cases\",\"New Cases in India\")","b7c8c051":"plo(covid_india[\"total_cases\"],\"total_cases\",\"total cases in India\")","a086fad2":"plo(covid_india[\"new_cases_smoothed\"],\"new_cases_smoothed\",\"new_cases_smoothed\")","55cc09b3":"plo(covid_india[\"total_deaths\"],\"total_deaths\",\"Total_Deaths\")","31522c32":"plo(covid_india[\"new_deaths\"],\"new_deaths\",\"Daily_Deaths\")","833bdcc1":"plo(covid_india[\"total_cases_per_million\"],\"total_cases_per_million\",\"Total_Cases_Per_Million\")","1db83327":"plo(covid_india[\"total_deaths_per_million\"],\"total_deaths_per_million\",\"Total Deaths Per Million\")","11be6291":"plo(covid_india[\"gdp_per_capita\"],\"gdp_per_capita\",\"Gdp_Per_Capita\")","97a8c0f2":"covid.head()","e2af2a35":"rolmean=covid_india[\"total_cases\"].rolling(window=7).mean()","a9bab6c4":"def rolme(j,k,l,b):\n             rolmean=j.rolling(window=7).mean()\n             fig = px.line(x=covid_india.index, y=[j,rolmean])\n             fig.update_layout(\n             title={'text':k,'x':0.5},title_font_color=\"black\")\n             fig.update_xaxes(rangeslider_visible=True)\n             fig.show()","82a60501":"rolme(covid_india[\"new_cases\"],\"New Case vs Rolling Mean for last 7 days\",\"new_cases\",\"rol_mean for window size of 7\")","1b35f950":"rolme(covid_india[\"new_deaths\"],\"New Deaths vs Rolling Mean for last 7 days\",\"new_deaths\",\"rol_mean for window size of 7\")","f0b57b0a":"covid.head()","17155e6e":"t=(covid[covid[\"date\"]==\"2020-10-14\"].index.values)","91bbc318":"locat=[]\ncases=[]\ndef cov(th,thh):\n    for i in th:\n        if covid[\"total_cases\"].iloc[i]>thh:\n                                 tt=covid[\"total_cases\"].iloc[i]\n                                 ttt=covid[\"location\"].iloc[i]\n                                 cases.append(tt)\n                                 locat.append(ttt)\n              ","0843633a":"cov(t,500000)","4ea9ddf2":"locat","b0ad68a6":"locat.pop()\ncases.pop()\nfig = px.bar(x=cases, y=locat, orientation='h',title=\"Top 13 Covid Countries\")\nfig.show()","f30bb375":"locat=[]\ncases=[]\ncov(t,0)\nlocat.pop()\nlocat.pop()\ncases.pop()\ncases.pop()\nfig = px.pie(values=cases, names=locat, title='Country Shares in Covid cases')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","5a213a40":"covid_usa=covid[covid[\"location\"]==\"United States\"]\ncovid_brazil=covid[covid[\"location\"]==\"Brazil\"]","b13cea02":"def ivso(i,k):\n    r1=covid_usa[i].rolling(window=7).mean()\n    r2=covid_brazil[i].rolling(window=7).mean()\n    r3=covid_india[i].rolling(window=7).mean()\n    fig = px.line(x=covid_india.index, y=[r1,r2,r3])\n    fig.update_layout(\n    title={'text':k,'x':0.5},title_font_color=\"black\")\n    fig.update_xaxes(rangeslider_visible=True)\n    fig.show()","0fe99237":"ivso(\"new_cases\",\"Moving Average of New_Cases of top 4 Covid Countries\")","2eca3a0d":"ivso(\"total_cases\",\"MA of Total_Cases of top 3 Covid Nations\")","eee174b0":"ivso(\"total_deaths\",\"MA of total_deaths of top 3 covid Nations\")","699007ed":"ivso(\"new_deaths\",\"MA of New_Deaths in top 3 Covid Nations\")","0770d3ee":"ivso(\"total_cases_per_million\",\"MA of total_cases_per_million in top 3 covid nations\")","fd243acc":"ivso(\"new_cases_per_million\",\"MA of new_cases_per_million in top 3 covid Nations\")","fd450057":"a=[]\nfor i in range(50512):\n      if covid[\"location\"].iloc[i]=='World':\n                       a.append(i)","b638cf49":"covid.drop(a,inplace=True)","b2f94921":"len(covid)","014ca0a0":"covid[\"date\"]=pd.to_datetime(covid[\"date\"])","85e82827":"covid=covid.sort_values(by='date')","381701c4":"coc=covid.copy()","a6a38b82":"coc.to_csv(\"coca.csv\")","a557e609":"coca=pd.read_csv(\"coca.csv\")","247b6d2b":"coca.head()","61e05aa9":"coca.drop(\"Unnamed: 0\",axis=1,inplace=True)","059948d4":"len(coca)","00640547":"fig=px.choropleth(coca,locations=\"iso_code\",color=\"total_cases\",hover_name=\"location\",animation_frame=coca[\"date\"],color_continuous_scale=px.colors.sequential.Plasma)\nfig.update_layout(transition={'duration':1000})\nfig.show()","73c8afbc":"# India and Other Top 2 covid countries","972e27c9":"Blue=USA,Red=Brazil,LightGreen=India","4fff2519":"# India and Rest of the world","bd7deeb3":"#  It is the whole story of Covid19 from Beginning to Month of October"}}