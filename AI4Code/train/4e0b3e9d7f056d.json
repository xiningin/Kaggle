{"cell_type":{"e9094a34":"code","977e2f30":"code","ae1f6477":"code","835c9726":"code","4349c06c":"code","90e1415c":"code","f63fb0e4":"code","f02d64e9":"code","fd1ee971":"code","ac9e5f03":"code","d7d0f91d":"code","1c19f9bf":"code","04938b5e":"code","91c9b3d2":"code","de6537d8":"code","3d597d80":"code","839ea760":"code","8e40f145":"code","251f9edc":"code","3b3719a8":"code","d9746f3e":"code","ceeaf433":"code","6e8f81b3":"code","e662f55e":"code","38504c9d":"code","5a959737":"code","367ef06d":"code","dc2ec935":"code","184d140f":"code","c2643e23":"code","45d5a8ef":"code","b447bb3b":"code","56f959a5":"code","fdf75e4a":"code","4893e1e2":"code","5b071317":"code","296c53fe":"code","00e19ed1":"code","99ff10d1":"code","e7c0edaf":"markdown","410e476e":"markdown","f7f16209":"markdown","dc6166c0":"markdown","abf43644":"markdown","846caa10":"markdown","ea380821":"markdown","9d10cfea":"markdown","9d9200bb":"markdown","eb382be9":"markdown","fecdebd0":"markdown","1a83d39a":"markdown","fd007ec3":"markdown","56575143":"markdown","553c632a":"markdown","04f080a7":"markdown","e65d87c5":"markdown","4074e889":"markdown","9fdbfed1":"markdown"},"source":{"e9094a34":"! pip install -q dabl","977e2f30":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pandas_profiling import ProfileReport\nimport dabl\nimport warnings\n\nfrom collections import Counter\n\nwarnings.simplefilter(\"ignore\")","ae1f6477":"data = pd.read_csv(\"..\/input\/videogamesales\/vgsales.csv\")\ndata.head()","835c9726":"data[[\"Year\", \"NA_Sales\", \"EU_Sales\", \"JP_Sales\", \"Other_Sales\", \"Global_Sales\"]].describe()","4349c06c":"# Before we start, let's drop all the Null values\ndata = data.dropna()","90e1415c":"data['Platform'].value_counts()","f63fb0e4":"# Make a Bar plot of 15 most common Platforms\nplatform = Counter(data['Platform'].tolist()).most_common(15)\nnames = [x[0] for x in platform]\ncounts = [x[1] for x in platform]\n\nplt.style.use(\"ggplot\")\nsns.barplot(x=names, y=counts)\nplt.title(\"Top 15 Platforms by Count\")\nplt.xlabel(\"Platform Name\")\nplt.ylabel(\"Count\")\nplt.xticks(rotation=90)\nplt.show()","f02d64e9":"data[\"Genre\"].value_counts()","fd1ee971":"# Make a barplot out of this too, so that we can see it better\ngenre = Counter(data[\"Genre\"].tolist()).most_common(12)\nnames, values = [x[0] for x in genre], [x[1] for x in genre]\n\nplt.style.use(\"classic\")\nsns.barplot(x=names, y=values)\nplt.title(\"Video Game Genres\")\nplt.xlabel(\"Genre Name\")\nplt.ylabel(\"Count\")\nplt.xticks(rotation=90)\nplt.show()","ac9e5f03":"data[\"Publisher\"].value_counts()","d7d0f91d":"# Make a Bar plot of 10 most common Platforms\npublisher = Counter(data['Publisher'].tolist()).most_common(15)\nnames = [x[0] for x in publisher]\ncounts = [x[1] for x in publisher]\n\nplt.style.use(\"fivethirtyeight\")\nsns.barplot(x=names, y=counts)\nplt.title(\"Top 10 Publishers by Count\")\nplt.xlabel(\"Publisher Name\")\nplt.ylabel(\"Count\")\nplt.xticks(rotation=90)\nplt.show()","1c19f9bf":"print(f\"Average Year: {data['Year'].mean():.0f}\")\nprint(f\"75th Quantile of Column Year: {np.quantile(data['Year'], 0.75):.0f}\")\nprint(f\"99th Quantile of Column Year: {np.quantile(data['Year'], 0.99):.0f}\")","04938b5e":"# Let's make a barplot of Yearly sales\nyear_sales = data[['Year']].stack().value_counts().tolist()\nyear_list = [int(x) for x in dict(data[['Year']].stack().value_counts()).keys()]\n\nplt.style.use(\"ggplot\")\nsns.barplot(x=year_list, y=year_sales, palette='Accent_r')\nplt.xticks(rotation=55, fontsize=8)\nplt.xlabel(\"Years\")\nplt.ylabel(\"Video Game Sales\")\nplt.title(\"Video Game Sales over the Years\")\nplt.show()","91c9b3d2":"# Make a dataframe with Publishers arranged by Sales values\npublisher_list = data['Publisher'].unique()\nna_rev, eu_rev, jp_rev, ot_rev, gb_rev = [], [], [], [], []\n\nfor pub in publisher_list:\n    na_rev.append(data[data['Publisher'] == pub]['NA_Sales'].sum())\n    eu_rev.append(data[data['Publisher'] == pub]['EU_Sales'].sum())\n    jp_rev.append(data[data['Publisher'] == pub]['JP_Sales'].sum())\n    ot_rev.append(data[data['Publisher'] == pub]['Other_Sales'].sum())\n    gb_rev.append(data[data['Publisher'] == pub]['Global_Sales'].sum())\n    \npublisher_rev = pd.DataFrame({\n    'pub': publisher_list,\n    'na': na_rev,\n    'eu': eu_rev,\n    'jp': jp_rev,\n    'ot': ot_rev,\n    'gb': gb_rev\n})\n\npublisher_rev.head()","de6537d8":"# Make a dataframe with Genre arranged by Sales values\ngenre_list = data['Genre'].unique()\nna_rev, eu_rev, jp_rev, ot_rev, gb_rev = [], [], [], [], []\n\nfor gen in genre_list:\n    na_rev.append(data[data['Genre'] == gen]['NA_Sales'].sum())\n    eu_rev.append(data[data['Genre'] == gen]['EU_Sales'].sum())\n    jp_rev.append(data[data['Genre'] == gen]['JP_Sales'].sum())\n    ot_rev.append(data[data['Genre'] == gen]['Other_Sales'].sum())\n    gb_rev.append(data[data['Genre'] == gen]['Global_Sales'].sum())\n    \ngenre_rev = pd.DataFrame({\n    'genre': genre_list,\n    'na': na_rev,\n    'eu': eu_rev,\n    'jp': jp_rev,\n    'ot': ot_rev,\n    'gb': gb_rev\n})\n\ngenre_rev.head()","3d597d80":"# Make a dataframe with Platforms arranged by Sales values\nplt_list = data['Platform'].unique()\nna_rev, eu_rev, jp_rev, ot_rev, gb_rev = [], [], [], [], []\n\nfor pl in plt_list:\n    na_rev.append(data[data['Platform'] == pl]['NA_Sales'].sum())\n    eu_rev.append(data[data['Platform'] == pl]['EU_Sales'].sum())\n    jp_rev.append(data[data['Platform'] == pl]['JP_Sales'].sum())\n    ot_rev.append(data[data['Platform'] == pl]['Other_Sales'].sum())\n    gb_rev.append(data[data['Platform'] == pl]['Global_Sales'].sum())\n    \nplt_rev = pd.DataFrame({\n    'platform': plt_list,\n    'na': na_rev,\n    'eu': eu_rev,\n    'jp': jp_rev,\n    'ot': ot_rev,\n    'gb': gb_rev\n})\n\nplt_rev.head()","839ea760":"print(f\"Average Year: {data['NA_Sales'].mean():.2f} Million\")\nprint(f\"75th Quantile of Column Year: {np.quantile(data['NA_Sales'], 0.75):.2f} Million\")\nprint(f\"99th Quantile of Column Year: {np.quantile(data['NA_Sales'], 0.99):.2f} Million\")","8e40f145":"# Let's make a barplot of Top-10 Publishers by NA Sales \nplt.style.use(\"classic\")\nsns.barplot(data=publisher_rev[:10], x='pub', y='na')\nplt.xticks(rotation=90, fontsize=10)\nplt.xlabel(\"Publishers\")\nplt.ylabel(\"Number of North American Sales\")\nplt.title(\"Top-10 North American Sales by Publishers\")\nplt.show()","251f9edc":"# Let's make a barplot of Top-10 Genre by NA Sales \nplt.style.use(\"ggplot\")\nsns.barplot(data=genre_rev[:10], x='genre', y='na', palette='Accent_r')\nplt.xticks(rotation=90, fontsize=10)\nplt.xlabel(\"Genre\")\nplt.ylabel(\"Number of North American Sales\")\nplt.title(\"Top-10 North American Sales by Genre\")\nplt.show()","3b3719a8":"# Let's make a barplot of Top-10 Platforms by NA Sales \nplt.style.use(\"fivethirtyeight\")\nsns.barplot(data=plt_rev[:10], x='platform', y='na', palette='bone')\nplt.xticks(fontsize=12)\nplt.xlabel(\"Platform\")\nplt.ylabel(\"Number of North American Sales\")\nplt.title(\"Top-10 North American Sales by Platform\")\nplt.show()","d9746f3e":"print(f\"Average Year: {data['EU_Sales'].mean():.2f} Million\")\nprint(f\"75th Quantile of Column Year: {np.quantile(data['EU_Sales'], 0.75):.2f} Million\")\nprint(f\"99th Quantile of Column Year: {np.quantile(data['EU_Sales'], 0.99):.2f} Million\")","ceeaf433":"# Let's make a barplot of Top-10 Publishers by EU Sales \nplt.style.use(\"ggplot\")\nsns.barplot(data=publisher_rev[:10], x='pub', y='eu')\nplt.xticks(rotation=90, fontsize=10)\nplt.xlabel(\"Publishers\")\nplt.ylabel(\"Number of EU Sales\")\nplt.title(\"Top-10 EU Sales by Publishers\")\nplt.show()","6e8f81b3":"# Let's make a barplot of Top-10 Genre by EU Sales \nplt.style.use(\"classic\")\nsns.barplot(data=genre_rev[:10], x='genre', y='eu', palette='plasma')\nplt.xticks(rotation=90, fontsize=10)\nplt.xlabel(\"Genre\")\nplt.ylabel(\"Number of EU Sales\")\nplt.title(\"Top-10 EU Sales by Genre\")\nplt.show()","e662f55e":"# Let's make a barplot of Top-10 Platforms by EU Sales \nplt.style.use(\"fivethirtyeight\")\nsns.barplot(data=plt_rev[:10], x='platform', y='eu')\nplt.xticks(fontsize=12)\nplt.xlabel(\"Platform\")\nplt.ylabel(\"Number of EU Sales\")\nplt.title(\"Top-10 EU Sales by Platform\")\nplt.show()","38504c9d":"print(f\"Average Year: {data['Global_Sales'].mean():.2f} Million\")\nprint(f\"75th Quantile of Column Year: {np.quantile(data['Global_Sales'], 0.75):.2f} Million\")\nprint(f\"99th Quantile of Column Year: {np.quantile(data['Global_Sales'], 0.99):.2f} Million\")","5a959737":"# Let's make a barplot of Top-10 Publishers by Global Sales\nplt.style.use(\"classic\")\nsns.barplot(data=publisher_rev[:10], x='pub', y='gb', palette='Wistia')\nplt.xticks(rotation=90, fontsize=10)\nplt.xlabel(\"Publishers\")\nplt.ylabel(\"Number of Global Sales\")\nplt.title(\"Top-10 Global Sales by Publishers\")\nplt.show()","367ef06d":"# Let's make a barplot of Top-10 Genre by Global Sales \nplt.style.use(\"fivethirtyeight\")\nsns.barplot(data=genre_rev[:10], x='genre', y='gb', palette='rainbow')\nplt.xticks(rotation=90, fontsize=10)\nplt.xlabel(\"Genre\")\nplt.ylabel(\"Number of Global Sales\")\nplt.title(\"Top-10 Global Sales by Genre\")\nplt.show()","dc2ec935":"# Let's make a barplot of Top-10 Platforms by EU Sales \nplt.style.use(\"ggplot\")\nsns.barplot(data=plt_rev[:10], x='platform', y='gb')\nplt.xticks(fontsize=12)\nplt.xlabel(\"Platform\")\nplt.ylabel(\"Number of Global Sales\")\nplt.title(\"Top-10 Global Sales by Platform\")\nplt.show()","184d140f":"# Make a list of Top-10 Games by revenue\ntop10gb = data['Global_Sales'][:10]\ntop10gamesgb = []\nfor pr in top10gb:\n    top10gamesgb.append(data[data['Global_Sales'] == pr]['Name'].tolist()[0])\n\nprint(f\"Top-10 Games by Global Sales are:\\n{top10gamesgb}\")","c2643e23":"# Let's Plot the top 10 games in world by revenue\n\nplt.style.use(\"fivethirtyeight\")\nsns.barplot(x=top10gb, y=top10gamesgb)\nplt.title(\"Top 10 Games in World by Revenue\")\nplt.xlabel(\"Global Sales (in millions)\")\nplt.ylabel(\"Games\")\nplt.show()","45d5a8ef":"# Make a list of Top-10 Games by revenue in North America\ntop10na = data['NA_Sales'][:10]\ntop10gamesna = []\nfor pr in top10na:\n    top10gamesna.append(data[data['NA_Sales'] == pr]['Name'].tolist()[0])\n\nprint(f\"Top-10 Games by North American Sales are:\\n{top10gamesna}\")","b447bb3b":"# Let's Plot the top 10 games in NA by revenue\n\nplt.style.use(\"classic\")\nsns.barplot(x=top10na, y=top10gamesna)\nplt.title(\"Top 10 Games in North America by Revenue\")\nplt.xlabel(\"NA Sales (in millions)\")\nplt.ylabel(\"Games\")\nplt.show()","56f959a5":"# Make a list of Top-10 Games by revenue in European Union\ntop10eu = data['EU_Sales'][:10]\ntop10gameseu = []\nfor pr in top10eu:\n    top10gameseu.append(data[data['EU_Sales'] == pr]['Name'].tolist()[0])\n\nprint(f\"Top-10 Games by European Union Sales are:\\n{top10gameseu}\")","fdf75e4a":"# Let's Plot the top 10 games in EU by revenue\n\nplt.style.use(\"ggplot\")\nsns.barplot(x=top10eu, y=top10gameseu)\nplt.title(\"Top 10 Games in European Union by Revenue\")\nplt.xlabel(\"EU Sales (in millions)\")\nplt.ylabel(\"Games\")\nplt.show()","4893e1e2":"# Pairplot with raw data\nplt.figure(figsize=(16, 9))\nsns.pairplot(data=data)\nplt.show()","5b071317":"# Pairplot with correlation\nplt.figure(figsize=(16, 9))\nsns.pairplot(data=data.corr())\nplt.show()","296c53fe":"# Correlation Heatmap\nsns.heatmap(data.corr(), annot=True)","00e19ed1":"dabl.plot(data, target_col='Global_Sales')","99ff10d1":"profile = ProfileReport(df=data, title=\"Video Game Data Profile Report\")\nprofile.to_notebook_iframe()","e7c0edaf":"### Sales in European Union\nLet's now look at the Sales in European Union","410e476e":"## Pairplot and Correlation Heatmap\nLet' now see a pairplot along with a Correlation Heatmap to better understand the effect of features on one another.","f7f16209":"### Platform\nLet's look at the platforms of different video games","dc6166c0":"## Sales\nLet's now look at the sales columns in the dataset and compare it's effect on others.\n\n**Note: These 4 Sales Columns (`NA_Sales`, `EU_Sales`, `JP_Sales`, `Other_Sales`, `Global_Sales`) are in millions.**","abf43644":"### Publishers\nLet's look at the top Publishers of Video Game titles","846caa10":"## Data Profile Report\nFinally, let's look at the profile report of the dataset","ea380821":"# EDA\nLet's start with EDA","9d10cfea":"### Genre\nNow let's look at the game genre","9d9200bb":"Befor EDA, let us get some descriptive statistics about the data","eb382be9":"We can observe that:\n- 75% of the Game Titles were released before 2010, and 50% before 2007","fecdebd0":"## DABL Plot\nLet's see a DABL plot to get more hidden insights on data","1a83d39a":"### Sales in North America\nLet's start by lookingpublisher_rev at the sales of video game titles in North America","fd007ec3":"# Thank you!\n\nPlease correct me if I\u2019ve made any mistakes in EDA, modelling or maybe explaining some concept since I am a beginner and prone to making mistakes.","56575143":"### Global Sales\nLet's skip directly to Global Sales and look more into it.","553c632a":"# Imports","04f080a7":"### Year\nLet's look at the year of video game being published","e65d87c5":"We can notice a something from the above correlation plot: Global Sales and North American Sales have a correlation of `0.94`, while Global and EU Sales have a correlation of `0.9`. However, Global and Japanese Sales have a correlation of `0.61`.\nThis means that, **Global Sales are least influenced by Japanese sales, while being mostly influenced by North American and European Union Sales**.","4074e889":"## Video Games\nLet's take a look at Most Common Video Games in different markets","9fdbfed1":"**Please Consider giving an upvote\/comment if you like this notebook!**"}}