{"cell_type":{"c60f9ece":"code","6da879fb":"code","49f175b9":"code","7a34a73a":"code","89347ca2":"code","6f1e9ef3":"code","dc0af6e2":"code","675490c7":"code","025c65c9":"code","e204f0be":"code","d26e623b":"code","63107e42":"code","ff8adb34":"code","e6f869ee":"code","27a0a2d0":"code","69306254":"code","69c1a7ee":"code","ee8d228e":"markdown","6fb46b3e":"markdown","a387410a":"markdown","b4d77369":"markdown","08e69762":"markdown","6ccc188d":"markdown","0f044bde":"markdown","47f07765":"markdown","490e6a9d":"markdown","f3d89351":"markdown","84ea8844":"markdown","a5116f8f":"markdown","eee40907":"markdown","a20551e4":"markdown"},"source":{"c60f9ece":"\nimport os\n\nimport numpy as np\nimport pandas as pd\nfrom os import walk\nfor (dirpath, dirnames, filenames) in walk(\"..\/input\"):\n    print(\"Directory path: \", dirpath)\n    print(\"Folder name: \", dirnames)\n    print(\"File name: \", filenames)","6da879fb":"data = pd.read_csv(\"..\/input\/df-cov\/df_COV.csv\")\ndata.head()","49f175b9":"%matplotlib inline\nimport scattertext as st #the main library used for corpous exploration\nfrom pprint import pprint\nimport pandas as pd\nimport numpy as np\nfrom scipy.stats import rankdata, hmean, norm\nimport spacy\nimport os, pkgutil, json, urllib\nfrom urllib.request import urlopen\nfrom IPython.display import IFrame\nfrom IPython.core.display import display, HTML\nfrom scattertext import CorpusFromPandas, produce_scattertext_explorer\nfrom collections import OrderedDict\nfrom spacy import displacy\nfrom spacy.lang.en.stop_words import STOP_WORDS\nfrom spacy.lang.en import English\nfrom spacy.matcher import Matcher\nfrom gensim.models import word2vec\nimport re, io, itertools\nimport os, pkgutil, json, urllib\nfrom urllib.request import urlopen\nfrom IPython.display import IFrame\nfrom IPython.core.display import display, HTML\n\nnlp = spacy.load('en_core_web_sm')\ndisplay(HTML(\"<style>.container { width:98% !important; }<\/style>\"))","7a34a73a":"data = data.dropna(subset=['abstract_x'])","89347ca2":"data = data.loc[data['year'] >= 2019]","6f1e9ef3":"data['parsed_text'] = data.text.apply(nlp)","dc0af6e2":"data.head()","675490c7":"corpus = (st.CorpusFromParsedDocuments(data, category_col='Category', parsed_col='parsed_text')\n          .build()\n          .get_unigram_corpus())","025c65c9":"model = word2vec.Word2Vec(size=100, window=5, min_count=10, workers=4)\nmodel = st.Word2VecFromParsedCorpus(corpus, model).train(epochs=10000)","e204f0be":"model.wv.most_similar('hypercoagulable'),model.wv.most_similar('hypercoagulability'), model.wv.most_similar('clots')","d26e623b":"hypercoagulable = ['hypercoagulable','hyperinflammatory', 'hypercoagulability', 'clots','coagulopathy', 'microcirculation','hypertrophy', 'vasoconstriction','stasis', 'vessel',  'transfusions']\n","63107e42":"model.wv.most_similar('efficacy'), model.wv.most_similar('therapeutics'), model.wv.most_similar('treatment'), model.wv.most_similar('inhibitor')","ff8adb34":"therapeutic = ['immunogenicity','potency', 'potent','pharmacokinetics', 'antivirals', 'therapies','vaccines', 'drugs','therapeutic','repurposing','treatments','immunotherapy','adjuvants','countermeasures','prophylaxis','cure','oseltamivir','inhibitors','analog', 'protease','camostat','pikfyve', 'mesylate', 'rapamycin', 'adenosine' ]\n","e6f869ee":"temp=data.text.fillna(\"0\")\n\ndata['Category'] = pd.np.where(temp.str.contains('|'.join(therapeutic)), \"therapeutic\",\n                       pd.np.where(temp.str.contains('|'.join(hypercoagulable)), \"hypercoagulable\",\"other\"))\n\ndata['Category'].value_counts()","27a0a2d0":"corpus = st.CorpusFromParsedDocuments(data, category_col='Category', parsed_col='parsed_text').build()","69306254":"target_term = 'coagulation'\n\nhtml = st.word_similarity_explorer_gensim(corpus,\n                                          category='therapeutic',\n                                          category_name='therapeutic',\n                                          not_category_name='hypercoagulable',\n                                          target_term=target_term,\n                                          minimum_term_frequency=200,\n                                          width_in_pixels=1000,\n                                          word2vec=model,\n                                          metadata=data['title_x'])\nfile_name = 'COVID19_DEMO_similarity_gensim.html'\n#open(file_name, 'wb').write(html.encode('utf-8'))\n#IFrame(src=file_name, width = 1200, height=700)","69c1a7ee":"Final_submission = pd.read_csv(\"..\/input\/final-submission\/final_doc.csv\")\nFinal_submission","ee8d228e":"# 4. Pipeline\n\n### a. Word2Vec \n### b. Categorize\n### c. TF-IDF, Gensim using Scattertext \n### d. Recommender with Cosine Similarities ","6fb46b3e":"## What is the best method to combat the hypercoagulable state seen in COVID-19?\n","a387410a":"# 5. Results\n#### A total of 94 relevant research papers were collected using the steps explained above, the results will be updated continuously and the output data table will be improved to match the required formatting.","b4d77369":"****","08e69762":"# 2. Approach\n### Applying unsepervised techniques will not ensure the relevance of search\/cluser results:\n#### We apply Word2Vec (Word Embeddings) to explore\/find out the relevant medical vocabulary\/terms, the purpose is to use the similar\/relevant words in a semi-supervised clustering.\n","6ccc188d":"# 1. Objective\n### InstantLibrarian is an enhanced approach to search which applies Word2Vec, TF-IDF, Scattertext, and Cosine Similarity to deliver highly relevant search results with minimal words in the search query.\n\n\n\n","0f044bde":"### [d. Recommender](https:\/\/agile-basin-38883.herokuapp.com\/)\n#### Using a simple Cosine Similarity model, a recommender is used to further mine all relevant articles to the specific questions above (about therapeutics or hypercoagulable state), feel free to explore using the hyperlink in the title.\n\n","47f07765":"### b. Categorization\n#### Using the keywords collected from the previous step (word2vec), we create more specific\/relevant categories","490e6a9d":"### [Answering the questions using a Word2Vec Model](https:\/\/fast-spire-21519.herokuapp.com\/)\n#### An application of a simple Word2Vec model, built on the corpus of medical papers, feel free to explore using the hyperlink in the title above.","f3d89351":"## a. Word2Vec for Medical Terminology Exploration & Clustering\n### In order to gain a good understanding of the different possible expressions in the medical literature which are relevent to the query\/task questions, we first train a word2vec model on the corpus to learn more about all the medical vocabulary.","84ea8844":"### [c. TF-IDF, Gensim using Scattertext](https:\/\/emazika.github.io\/Scatter-html\/)\n#### Using Scattertext, to explore first hand the content of the corpus in terms of the relevant questions regarding therapeutics and hypercoagulable state. Feel free to explore using the hyperlink in the title.","a5116f8f":"# 3. Method\n### The data used is a clean csv. version of the bioRxiv collection, papers with complete (non NaN) abstracts only were kept, as the text exploration with Scattertext will be done on abstracts only. We get a quick look at the data: ","eee40907":"**The Above dataset is the merge result of bioRxiv json documents and the metadata file on paper id or sha, an extra column of publication year and month was added **","a20551e4":"## What is the efficacy of novel therapeutics being tested currently?\n\n"}}