{"cell_type":{"4dab6a95":"code","e15439fc":"code","3b000309":"code","e3ab1381":"code","761d8564":"code","72de3a34":"code","0a2fe1b7":"code","c45cb482":"code","2ae8085d":"markdown"},"source":{"4dab6a95":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e15439fc":"covid_tracker_data = pd.read_csv('\/kaggle\/input\/covid-world-vaccination-progress\/country_vaccinations.csv',encoding = 'utf-8')","3b000309":"covid_tracker_data.head(5)","e3ab1381":"unique = covid_tracker_data.nunique()\nunique","761d8564":"covid_tracker_data['country'].unique()","72de3a34":"#name of the vaccines administered\nvacine_names = covid_tracker_data['vaccines'].unique()\nvacine_names","0a2fe1b7":"vacine_per_hundred = covid_tracker_data['people_fully_vaccinated_per_hundred'].isnull().sum()\nprint(vacine_per_hundred)\ncovid_tracker_data.shape\n","c45cb482":"#vacine_in_country = covid_tracker_data.loc[['country','vaccines']]\nvaccine_in_countries = covid_tracker_data[['country','vaccines']]\nvaccine_in_countries\ncountry_wise = vaccine_in_countries.groupby('country')\ncountry_wise.describe()\n","2ae8085d":"* **Which vaccine used in which country**"}}