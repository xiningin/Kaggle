{"cell_type":{"9142e44d":"code","fc2d5fc5":"code","45638a16":"code","76565376":"code","53617216":"code","aabd30c8":"code","cdb3e8d5":"code","8796144f":"code","45b9e2c1":"code","4a2f5eec":"code","12101b55":"code","6b392d6a":"code","a9a10ba5":"code","d91fe516":"code","0f1ab97b":"code","37085fea":"code","5099b5f1":"code","54b0edda":"code","f8c3f1be":"code","a3e30421":"code","8ceee439":"code","5099eb3b":"code","a7defea8":"code","c9dcd59c":"markdown","9c69e8ee":"markdown","6125573e":"markdown","6a00afbd":"markdown","70df7c98":"markdown"},"source":{"9142e44d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fc2d5fc5":"import matplotlib.pyplot as plt","45638a16":"X=pd.read_excel('..\/input\/hard-work-pays-off-for-beginers\/X_train.xlsx')\ny=pd.read_excel('..\/input\/hard-work-pays-off-for-beginers\/Y_train.xlsx')","76565376":"X.head()","53617216":"y.head()","aabd30c8":"print(X.shape,y.shape)","cdb3e8d5":"X.info()","8796144f":"X.describe()","45b9e2c1":"X=X.values\ny=y.values","4a2f5eec":"X","12101b55":"plt.scatter(X,y)","6b392d6a":"from sklearn.model_selection import train_test_split","a9a10ba5":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","d91fe516":"from sklearn.linear_model import LinearRegression","0f1ab97b":"lr=LinearRegression()","37085fea":"lr.fit(X_train,y_train)","5099b5f1":"print(lr.intercept_,lr.coef_)","54b0edda":"y_pred=lr.predict(X_test)","f8c3f1be":"from sklearn.metrics import r2_score","a3e30421":"r2_score(y_test,y_pred)","8ceee439":"x2=np.array([[-5],[5]])","5099eb3b":"y2=lr.predict(x2)","a7defea8":"plt.scatter(X,y)\nplt.plot(x2,y2,c='black')","c9dcd59c":"### Getting R2 score of 97.25% seems Good\ud83d\ude09","9c69e8ee":"### here we can see that it is a linear trend in X and y, so will use linear regression for creating a regression model","6125573e":"### Learned intercept and coefficients are-","6a00afbd":"### we have a model giving r2 score of 97.25% on test data.","70df7c98":"### Let's plot best fit line"}}