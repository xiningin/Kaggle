{"cell_type":{"a0ff1781":"code","aa528ac9":"code","2784dbb7":"code","d2582041":"code","2a1f7399":"code","7ca75955":"code","a6cbfe6d":"code","49269e8c":"code","b4e28db2":"code","6f80e114":"code","2fab4e8b":"code","ac038cca":"code","479d9a25":"code","64fd04cc":"code","0250f8ec":"code","e40c3e11":"markdown","ebda6c8b":"markdown","69e7cdfa":"markdown","f2da04b0":"markdown","ef3e3d7f":"markdown","82a1770b":"markdown","63b1b4ce":"markdown","3bb1c201":"markdown","9005d8a5":"markdown","07dc4087":"markdown","e00e80cb":"markdown","68287b7e":"markdown","c426f87b":"markdown","a40e719f":"markdown","76581c88":"markdown","f2a5706e":"markdown","d4fe6ed2":"markdown","ba27816e":"markdown","d42428f2":"markdown"},"source":{"a0ff1781":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom collections import Counter\nimport itertools\nfrom string import punctuation\nimport string\n\nfrom wordcloud import WordCloud\nfrom nltk.tokenize import word_tokenize\nfrom nltk.corpus import stopwords\nfrom nltk import ngrams\n\nsns.set(style='darkgrid')\nsns.set(palette=\"Set2\")","aa528ac9":"df_train = pd.read_csv(\"\/kaggle\/input\/commonlitreadabilityprize\/train.csv\")\nprint (df_train.shape)\ndf_train.head()","2784dbb7":"df_test = pd.read_csv(\"\/kaggle\/input\/commonlitreadabilityprize\/test.csv\")\nprint (df_test.shape)\ndf_test.head()","d2582041":"list_stopwords = set(stopwords.words('english') + list(punctuation))\ndef pre_prcoessing (df):\n    df['processed_excerpt'] = df['excerpt'].str.lower()\n    df['processed_excerpt'] = df['processed_excerpt'].apply(word_tokenize)\n    df['processed_excerpt'] = df['processed_excerpt'].apply(lambda x: [word for word in x if word not in list_stopwords])\n    df['processed_excerpt'] = df['processed_excerpt'].apply(lambda x : [word.translate(str.maketrans('', '', string.punctuation)) for word in x])\n    df['processed_excerpt'] = df['processed_excerpt'].apply(lambda x : [word for word in x if len(word) > 1])\n    return (df)","2a1f7399":"df_train = pre_prcoessing(df_train)\ndf_test = pre_prcoessing(df_test)","7ca75955":"plt.figure(figsize=(12,8))\nsns.histplot(data=df_train, x='target', kde=True, stat='density')\nplt.xlabel('Target')\nplt.ylabel('Density')\nplt.show()","a6cbfe6d":"plt.figure(figsize=(12,8))\nsns.histplot(data=df_train, x='standard_error', kde=True, stat='density')\nplt.xlabel('Standard Error')\nplt.ylabel('Density')\nplt.show()","49269e8c":"df_train['character_count'] = df_train['excerpt'].str.len()\ndf_train['processed_character_count'] = df_train['processed_excerpt'].str.join(' ').str.len()\n\nplt.figure(figsize=(12,8))\nsns.histplot(data=df_train, x='character_count', kde=True, stat='density', color='red', label='Excerpt')\nsns.histplot(data=df_train, x='processed_character_count', kde=True, stat='density', color='blue', label='Processed Excerpt')\nplt.xlabel('Number of Characters')\nplt.ylabel('Density')\nplt.legend()\nplt.show()","b4e28db2":"df_train['word_count'] = df_train['excerpt'].apply(lambda x: len(x.split(' ')))\ndf_train['processed_word_count'] = df_train['processed_excerpt'].str.join(' ').apply(lambda x: len(x.split(' ')))\n\nplt.figure(figsize=(12,8))\nsns.histplot(data=df_train, x='word_count', kde=True, stat='density', color='red', label='Excerpt')\nsns.histplot(data=df_train, x='processed_word_count', kde=True, stat='density', color='blue', label='Processed Excerpt')\nplt.xlabel('Number of Words')\nplt.ylabel('Density')\nplt.legend()\nplt.show()","6f80e114":"df_train['unique_word_count'] = df_train['excerpt'].apply(lambda x: len(set(x.split(' '))))\ndf_train['processed_unique_word_count'] = df_train['processed_excerpt'].str.join(' ').apply(lambda x: len(set(x.split(' '))))\n\nplt.figure(figsize=(12,8))\nsns.histplot(data=df_train, x='unique_word_count', kde=True, stat='density', color='red', label='Excerpt')\nsns.histplot(data=df_train, x='processed_unique_word_count', kde=True, stat='density', color='blue', label='Processed Excerpt')\nplt.xlabel('Number of Unique Words')\nplt.ylabel('Density')\nplt.legend()\nplt.show()","2fab4e8b":"list_text = df_train['processed_excerpt'].tolist()\nlist_text = list(itertools.chain(*list_text))\n\nplt.figure(figsize=(16,12))\nwordcloud = WordCloud(background_color=\"black\", width=800, height=500, max_font_size=80, max_words=100, collocations = False, colormap='Set2').generate(' '.join(list_text))\nplt.imshow(wordcloud,interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","ac038cca":"def ngram (list_text, n):\n    bigrams = ngrams(list_text, n)\n    temp_ = Counter(bigrams).most_common()[:20]\n    list_key = [' '.join(temp_[i][0]) for i in range(len(temp_))]\n    list_value = [temp_[i][1] for i in range(len(temp_))]\n    return (list_key, list_value)","479d9a25":"plt.figure(figsize=(12,8))\nlist_key, list_value = ngram(list_text, 1)\nsns.barplot(y = list_key, x = list_value)\nplt.xlabel('Frequency')\nplt.ylabel('UniGram')\nplt.show()","64fd04cc":"plt.figure(figsize=(12,8))\nlist_key, list_value = ngram(list_text, 2)\nsns.barplot(y = list_key, x = list_value)\nplt.xlabel('Frequency')\nplt.ylabel('BiGram')\nplt.show()","0250f8ec":"plt.figure(figsize=(12,8))\nlist_key, list_value = ngram(list_text, 3)\nsns.barplot(y = list_key, x = list_value)\nplt.xlabel('Frequency')\nplt.ylabel('TriGram')\nplt.show()","e40c3e11":"## **BiGram**","ebda6c8b":"## **Column Distribution - Target**","69e7cdfa":"## **Frequency Distribution - Number of Unique Words in each excerpt**","f2da04b0":"# **Import Libraries \ud83d\udcda**","ef3e3d7f":"## **TriGram**","82a1770b":"## **WordCloud**","63b1b4ce":"## **Train Data**","3bb1c201":"# **Load the Data \ud83d\udcdd**","9005d8a5":"* Build algorithm(s) to rate the complexity of reading passages for grade 3-12 classroom use\n\n* Given the training data, train Machine Learning model(s) that can predict the relationship between \"excerpt\" and \"target\"\n\n* It can be formulated as a Regression problem","07dc4087":"# **Task to be Accomplished \ud83c\udfaf**","e00e80cb":"# **Pre-processing excerpt \u2702\ufe0f**","68287b7e":"## **UniGram**","c426f87b":"# **EDA \ud83d\udcca**","a40e719f":"# **Feel free to <span style=\"color:red\">UPVOTE <\/span> and provide <span style=\"color:blue\">FEEDBACK <\/span> \ud83c\udf89**","76581c88":"## **Frequency Distribution - Length\/ Number of Charcters in each excerpt**","f2a5706e":"## **Test Data**","d4fe6ed2":"## **Top 20 NGrams**","ba27816e":"## **Frequency Distribution - Number of Words in each excerpt**","d42428f2":"## **Column Distribution - Standard Error**"}}