{"cell_type":{"36c2bc30":"code","81efe944":"code","5404dc09":"code","a4b2483e":"code","a7fba37d":"code","27ba037b":"code","a09f7f67":"code","a40d2e99":"code","e5afcd62":"code","f0b4a284":"code","3c19f0ed":"code","02068cff":"code","6d498038":"code","d7d6b04a":"code","91c1f590":"code","57a0aec6":"code","5c8f66cc":"code","664f0468":"code","a2975d37":"code","9fa2a2af":"markdown","9c3f0aa3":"markdown","93c54804":"markdown","9e849302":"markdown","6254d019":"markdown","3eced359":"markdown","ed8c3c8f":"markdown","41db32f9":"markdown","c5abe486":"markdown","ef4e0b30":"markdown","7faf950d":"markdown","9123ea5b":"markdown","ba00476b":"markdown","4fcae26e":"markdown","23413093":"markdown","58fa3ee9":"markdown","2e633f26":"markdown"},"source":{"36c2bc30":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\nfrom sklearn.model_selection import train_test_split, cross_validate\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.neighbors import KNeighborsClassifier \nfrom sklearn import metrics\n\nimport matplotlib.pyplot as plt\nfrom pandas_profiling import ProfileReport\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","81efe944":"df = pd.read_csv('..\/input\/us-police-shootings\/shootings.csv')\nprint('Rows {} columns {} in data'.format(df.shape[0], df.shape[1]))","5404dc09":"df.head()","a4b2483e":"df.isnull().sum()","a7fba37d":"df.isna().sum()","27ba037b":"df.info()","a09f7f67":"df.describe()","a40d2e99":"ProfileReport(df)","e5afcd62":"plt.figure(figsize=(10,5))\nsns.heatmap(df.corr(), annot=True, cmap=plt.cm.plasma)","f0b4a284":"labels = ['Males', 'Females']\nvalues = df['gender'].value_counts().values\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values)])\nfig.show()","3c19f0ed":"sns.distplot(df['age'],kde=True,color='b')","02068cff":"males = df[df['gender']=='M']['age'].values\nfemales = df[df['gender']=='F']['age'].values\n\nsns.distplot(males, hist=False, label='Males')\nsns.distplot(females, hist=False, label='Females')\nplt.xlabel('Age')\nplt.ylabel('Distribution Frequency')","6d498038":"data=df['race'].value_counts().reset_index().rename(columns={'index':'race','race':'count'})\n\nfig = go.Figure(go.Bar(\n    x=data['race'],y=data['count'],\n    marker={'color': data['count'], \n    'colorscale': 'Viridis'},  \n))\nfig.update_layout(title_text='frequency of different race',xaxis_title=\"race\",yaxis_title=\"count\",height=500,width=500)\nfig.show()","d7d6b04a":"labels = df['manner_of_death'].value_counts().index\nvalues = df['manner_of_death'].value_counts().values\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values)])\nfig.show()","91c1f590":"labels = df['armed'].value_counts().index\nvalues = df['armed'].value_counts().values\n\nfig = go.Figure(data=[go.Pie(labels=labels, textinfo='value', values=values)])\nfig.show()","57a0aec6":"black = df[df['race']=='black']['state'].value_counts().to_frame().reset_index().rename(columns={'index':'state','state':'count'})","5c8f66cc":"fig = go.Figure(go.Choropleth(\n    locations=black['state'],\n    z=black['count'].astype(float),\n    locationmode='USA-states',\n    colorscale='Reds',\n    autocolorscale=False,\n    text=black['state'], # hover text\n    marker_line_color='white', # line markers between states\n    colorbar_title=\"Millions USD\",showscale = False,\n))\nfig.update_layout(\n    title_text='US Police shooting cases of black people',\n    title_x=0.5,\n    geo = dict(\n        scope='usa',\n        projection=go.layout.geo.Projection(type = 'albers usa'),\n        showlakes=True, # lakes\n        lakecolor='rgb(255, 255, 255)'))\nfig.update_layout(\n    template=\"plotly_dark\")\nfig.show()\n","664f0468":"df['year']=pd.to_datetime(df['date']).dt.year","a2975d37":"year_shoot=df['year'].value_counts().to_frame().reset_index().rename(columns={'index':'year','year':'count'}).sort_values(by=\"year\")\nfig = go.Figure(data=go.Scatter(\n    x= year_shoot['year'],\n    y= year_shoot['count'],\n    mode='lines+markers',\n    marker_color=\"red\"\n))\nfig.update_xaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_yaxes(showline=True, linewidth=2, linecolor='black', mirror=True)\nfig.update_layout(title_text='Deaths - All Years',xaxis_title='Years',\n                 yaxis_title='Total number of kills', title_x=0.5)\n\nfig.show()","9fa2a2af":"# Missing Values?","9c3f0aa3":"# Loading Dataset","93c54804":"# Pandas profiling\n**Generating a concise report of the dataset**","9e849302":"# Age and Gender Distrbution","6254d019":"# Manner of Death","3eced359":"**No NaN values so good for model developement now!!**","ed8c3c8f":"# Age Distribution","41db32f9":"# Loading Libraries","c5abe486":"# Correlation Plot","ef4e0b30":"# Weapons Used","7faf950d":"# Race Distrbution","9123ea5b":"# Year wise Fatalities","ba00476b":"# Statistical Exploration of Data","4fcae26e":"# Gender based Distribution","23413093":"**WORK IN PROGRESS**","58fa3ee9":"**No missing values**","2e633f26":"# Black People Fatalities State wise"}}