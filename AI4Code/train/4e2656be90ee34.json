{"cell_type":{"f39941be":"code","03a3563d":"code","07c6320c":"code","44786b04":"code","4420cb55":"code","b8519588":"code","ed57297c":"code","1f6e4e0a":"code","d3265eea":"code","a7c9c1c0":"code","44f0283f":"code","e79a8b31":"code","95968292":"code","e7ea6f04":"code","f6f3c581":"markdown"},"source":{"f39941be":"import pandas as pd\nimport numpy as np\nfrom xgboost import XGBClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix,accuracy_score,precision_score,recall_score,precision_recall_curve,precision_recall_fscore_support","03a3563d":"data = pd.read_csv('..\/input\/churn-predictions-personal\/Churn_Predictions.csv')","07c6320c":"data.head()","44786b04":"data.isnull().sum()","4420cb55":"# remove unwanted cols\ndata.drop(columns=['RowNumber','CustomerId','Surname'],inplace=True)\ndata = data.sample(frac=1)","b8519588":"# As data is imbalance - Balancing it\nExit_case = np.sum(data.Exited)\nnon_exit_indices = []\nnon_exit_ini = 0\n\nfor i in range(len(data)):\n    if data['Exited'][i]==0:\n        non_exit_indices.append(i)\n        non_exit_ini += 1\n        if non_exit_ini==Exit_case:\n            break","ed57297c":"# Merge Exit and non Exit\nexit_case_df = data[data['Exited']==1]\nnon_exit_df = data.iloc[non_exit_indices,:]\ndata = exit_case_df.append(non_exit_df)","1f6e4e0a":"data = pd.get_dummies(data,columns=['Geography','Gender'],drop_first=True)","d3265eea":"data.reset_index(drop=True)\ndata = data.sample(frac=1)","a7c9c1c0":"X,y = data.iloc[:,[ 0,  1,  2,  3,  4,  5,  6,  7,  9, 10, 11]],data.Exited","44f0283f":"# Train-Test Split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2)","e79a8b31":"# Modelling\nclf = XGBClassifier()\nclf.fit(X_train,y_train)\ny_pred = clf.predict(X_test)","95968292":"confusion_matrix(y_test,y_pred)","e7ea6f04":"recall_score(y_test,y_pred),precision_score(y_test,y_pred),accuracy_score(y_test,y_pred)","f6f3c581":"For an ML Accuracy, Recall and Precision should be in same range, which we can observe here"}}