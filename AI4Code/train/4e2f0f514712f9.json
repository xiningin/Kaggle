{"cell_type":{"c1c8e049":"code","6f4dd5f4":"code","b89f2ff4":"code","9ee06e23":"code","f42b5e2d":"code","fc20fa6b":"code","28001ed2":"code","c89892a2":"code","ca3103f9":"code","caffe972":"code","d4e49576":"code","31ace550":"code","5078d254":"code","47688a4d":"code","50be2552":"code","a9886136":"code","0498a63d":"code","f7c809fb":"code","62a60d24":"code","14933977":"code","dd3b9a8a":"code","86eaae60":"code","8bf4a4bc":"code","443dc255":"code","47f86953":"code","abc81d64":"code","09f2c109":"code","36e72891":"code","69aca2cc":"code","90abc140":"code","c081efd9":"code","d0948067":"code","148ed5ea":"code","91f86899":"code","deef5745":"code","126a87b4":"code","87b0d38d":"code","6434a258":"code","8afecd70":"code","dae6b847":"code","997f9711":"code","379de61b":"code","67184c2c":"code","51111dd1":"code","2d99ae79":"code","89bee38b":"code","815c7c7d":"code","a40be993":"code","38898a5e":"code","f948580c":"code","3fa489c8":"code","7c434c1b":"code","ec72cfc0":"code","8fb0e165":"code","8edbdd44":"code","9e84b9e6":"code","d1d336fd":"code","0b8ad7df":"code","fa0242cc":"code","4502b57a":"code","1ff8925e":"code","bb588640":"code","660c6a68":"markdown","5e5bc30c":"markdown","752dc939":"markdown","1ba85938":"markdown","0dbdf09c":"markdown","dd6505ba":"markdown","6a26436a":"markdown","2ba308b7":"markdown","81cc5ba4":"markdown","a925d4e2":"markdown","682a54f2":"markdown","0fd212e9":"markdown","14515482":"markdown","a6b2e390":"markdown","e84b1cf4":"markdown","4abfc44e":"markdown","28a7c54e":"markdown","1381b3f8":"markdown","4b4e32b9":"markdown","9eae59fe":"markdown","a9f441bf":"markdown","1fa2ed31":"markdown","847e22d5":"markdown","4257f0b4":"markdown","24c9d943":"markdown","8c3cacbf":"markdown","747d5b7b":"markdown","c672d9a9":"markdown","e90d38cf":"markdown","6d43a8ca":"markdown","01788512":"markdown","9af27f92":"markdown","7d585db9":"markdown","a34f6104":"markdown","34d2b193":"markdown","b2c14e55":"markdown","198d37b3":"markdown","57acba09":"markdown","ee8fe247":"markdown","30f3a073":"markdown","9f0f918b":"markdown","755a6ac3":"markdown","f60900c6":"markdown","237a5abe":"markdown","9d4a4421":"markdown","b57c6efe":"markdown","f37384ca":"markdown","2354170e":"markdown","ef7e9a1b":"markdown","2fd540a1":"markdown","45ac819b":"markdown","220c8a09":"markdown","b2e562db":"markdown","1d56fd0c":"markdown","ec6ebc2f":"markdown","a8395cdc":"markdown"},"source":{"c1c8e049":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn import metrics","6f4dd5f4":"df = pd.read_csv(r'diabetes_binary_5050split_health_indicators_BRFSS2015.csv')","b89f2ff4":"df.shape","9ee06e23":"df.info()","f42b5e2d":"df.describe()","fc20fa6b":"df.head()","28001ed2":"df.isna().sum()","c89892a2":"df.isnull().sum()","ca3103f9":"df_new = df.drop_duplicates()","caffe972":"len(df)-len(df_new)","d4e49576":"df_new","31ace550":"df_new.corr().sort_values('Diabetes_binary')","5078d254":"plt.figure(figsize = (20,10))\nsns.heatmap(df_new.corr(), cmap=\"RdBu\", annot=True)\nplt.title(\"Correlation between features\")\nplt.show()","47688a4d":"column_details = {}\nfor column in df.columns:\n    if column != \"Diabetes_binary\":\n        column_details[column] = df.groupby([column]).count()[\"Diabetes_binary\"].shape[0]\nprint(column_details)","50be2552":"fig, ax = plt.subplots(11,2,figsize = (30,50))\ni=0\nfor column in df.columns:\n    if column != \"Diabetes_binary\":\n        r = i \/\/ 2\n        c = i % 2\n        if column_details[column] > 2:\n            sns.scatterplot(df[\"Diabetes_binary\"], df[column], ax=ax[r][c])\n        if column_details[column] <= 2 :\n            sns.barplot(df[\"Diabetes_binary\"], df[column], ax=ax[r][c])\n        i=i+1\n            \nplt.show()","a9886136":"X = df_new.drop('Diabetes_binary', axis = 1)\nY = df_new['Diabetes_binary']\nprint(X.shape)\nprint(Y.shape)","0498a63d":"x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 0.3, random_state = 42)\nprint(x_train.shape)\nprint(x_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","f7c809fb":"random_forest = RandomForestClassifier(random_state = 0, verbose = 1)\nrandom_forest.fit(x_train, y_train)\nrandom_forest.score(x_test, y_test)","62a60d24":"random_forest = RandomForestClassifier(random_state = 0, verbose = 1, n_estimators=500)\nrandom_forest.fit(x_train, y_train)\nrandom_forest.score(x_test, y_test)","14933977":"random_forest = RandomForestClassifier(random_state = 0, verbose = 1, n_estimators=500, criterion=\"entropy\")\nrandom_forest.fit(x_train, y_train)\nrandom_forest.score(x_test, y_test)","dd3b9a8a":"random_forest = RandomForestClassifier(random_state = 0, verbose = 1, n_estimators=500, criterion=\"entropy\", max_features=\"log2\")\nrandom_forest.fit(x_train, y_train)\nrandom_forest.score(x_test, y_test)","86eaae60":"random_forest = RandomForestClassifier(random_state = 0, verbose = 1, n_estimators=500, criterion=\"entropy\", max_features=\"log2\", bootstrap=False)\nrandom_forest.fit(x_train, y_train)\nrandom_forest.score(x_test, y_test)","8bf4a4bc":"random_forest = RandomForestClassifier(random_state = 0, verbose = 1, n_estimators=1000, max_depth=10)\nrandom_forest.fit(x_train, y_train)\nrandom_forest.score(x_test, y_test)","443dc255":"predictions_rf = random_forest.predict(x_test)","47f86953":"confusion_matrix_rf = metrics.confusion_matrix(y_test, predictions_rf)\nprint(confusion_matrix_rf)","abc81d64":"plt.figure(figsize = (8,6))\nsns.heatmap(confusion_matrix_rf, annot = True, fmt = \".0f\", cmap = 'RdBu')\nplt.title(\"Confusion Matrix for Random Forest\")\nplt.xlabel(\"Prediction\")\nplt.ylabel(\"Actual\")\nplt.show()","09f2c109":"report_rf = metrics.classification_report(y_test, predictions_rf)\nprint(report_rf)","36e72891":"desicion_tree = DecisionTreeClassifier(random_state = 0)\ndesicion_tree.fit(x_train, y_train)\ndesicion_tree.score(x_test, y_test)","69aca2cc":"desicion_tree = DecisionTreeClassifier(random_state = 0, criterion=\"entropy\")\ndesicion_tree.fit(x_train, y_train)\ndesicion_tree.score(x_test, y_test)","90abc140":"desicion_tree = DecisionTreeClassifier(random_state = 0, criterion=\"entropy\", splitter=\"random\")\ndesicion_tree.fit(x_train, y_train)\ndesicion_tree.score(x_test, y_test)","c081efd9":"predictions_dt = desicion_tree.predict(x_test)","d0948067":"confusion_matrix_dt = metrics.confusion_matrix(y_test, predictions_dt)\nprint(confusion_matrix_dt)","148ed5ea":"plt.figure(figsize = (8,6))\nsns.heatmap(confusion_matrix_dt, annot = True, fmt = \".0f\", cmap = 'Greens')\nplt.title(\"Confusion Matrix for Decision Tree\")\nplt.xlabel(\"Prediction\")\nplt.ylabel(\"Actual\")\nplt.show()","91f86899":"report_dt = metrics.classification_report(y_test, predictions_dt)\nprint(report_dt)","deef5745":"gradient_boosting = GradientBoostingClassifier(random_state = 0)\ngradient_boosting.fit(x_train, y_train)\ngradient_boosting.score(x_test, y_test)","126a87b4":"gradient_boosting = GradientBoostingClassifier(random_state = 0, n_estimators = 300)\ngradient_boosting.fit(x_train, y_train)\ngradient_boosting.score(x_test, y_test)","87b0d38d":"gradient_boosting = GradientBoostingClassifier(random_state = 0, n_estimators = 300, learning_rate = 0.15)\ngradient_boosting.fit(x_train, y_train)\ngradient_boosting.score(x_test, y_test)","6434a258":"gradient_boosting = GradientBoostingClassifier(random_state = 0, n_estimators = 300, criterion='mse')\ngradient_boosting.fit(x_train, y_train)\ngradient_boosting.score(x_test, y_test)","8afecd70":"gradient_boosting = GradientBoostingClassifier(random_state = 0, n_estimators = 300, max_depth = 10)\ngradient_boosting.fit(x_train, y_train)\ngradient_boosting.score(x_test, y_test)","dae6b847":"gradient_boosting = GradientBoostingClassifier(random_state = 0, n_estimators = 300, subsample = 0.8)\ngradient_boosting.fit(x_train, y_train)\ngradient_boosting.score(x_test, y_test)","997f9711":"predictions_gb = gradient_boosting.predict(x_test)","379de61b":"confusion_matrix_gb = metrics.confusion_matrix(y_test, predictions_gb)\nprint(confusion_matrix_gb)","67184c2c":"plt.figure(figsize = (8,6))\nsns.heatmap(confusion_matrix_gb, annot = True, fmt = \".0f\", cmap = 'viridis')\nplt.title(\"Confusion Matrix for Gradient Boosted Model\")\nplt.xlabel(\"Prediction\")\nplt.ylabel(\"Actual\")\nplt.show()","51111dd1":"report_gb = metrics.classification_report(y_test, predictions_gb)\nprint(report_gb)","2d99ae79":"naive_bayes = GaussianNB()\nnaive_bayes.fit(x_train, y_train)\nnaive_bayes.score(x_test, y_test)","89bee38b":"predictions_nb = naive_bayes.predict(x_test)","815c7c7d":"confusion_matrix_nb = metrics.confusion_matrix(y_test, predictions_nb)\nprint(confusion_matrix_nb)","a40be993":"plt.figure(figsize = (8,6))\nsns.heatmap(confusion_matrix_nb, annot = True, fmt = \".0f\", cmap = 'Blues')\nplt.title(\"Confusion Matrix for Naive Bayes\")\nplt.xlabel(\"Prediction\")\nplt.ylabel(\"Actual\")\nplt.show()","38898a5e":"report_nb = metrics.classification_report(y_test, predictions_nb)\nprint(report_nb)","f948580c":"train_columns = x_train.columns\nfeatures_rf = pd.Series(random_forest.feature_importances_, index = train_columns)\nprint(features_rf.sort_values(ascending = False))","3fa489c8":"train_columns = x_train.columns\nfeatures_dt = pd.Series(desicion_tree.feature_importances_, index = train_columns)\nprint(features_dt.sort_values(ascending = False))","7c434c1b":"train_columns = x_train.columns\nfeatures_gb = pd.Series(gradient_boosting.feature_importances_, index = train_columns)\nprint(features_gb.sort_values(ascending = False))","ec72cfc0":"plt.figure(figsize = (15,8))\nsns.barplot(x = features_rf, y = features_rf.index)\nplt.title(\"Feature Importance for Random Forest\")\nplt.xlabel('Score')\nplt.ylabel('Features')\nplt.show()","8fb0e165":"plt.figure(figsize = (15,8))\nsns.barplot(x = features_dt, y = features_dt.index)\nplt.title(\"Feature Importance for Decision Tree\")\nplt.xlabel('Score')\nplt.ylabel('Features')\nplt.show()","8edbdd44":"plt.figure(figsize = (15,8))\nsns.barplot(x = features_gb, y = features_gb.index)\nplt.title(\"Feature Importance for Gradient Boosting\")\nplt.xlabel('Score')\nplt.ylabel('Features')\nplt.show()","9e84b9e6":"X_new = df_new.drop('Diabetes_binary', axis = 1)\nX_new = X_new[['HighBP', 'HighChol', 'CholCheck', 'BMI', 'Smoker', 'Stroke', 'PhysHlth', 'HeartDiseaseorAttack', 'GenHlth', 'Age']]\nY_new = df_new['Diabetes_binary']\nprint(X_new.shape)\nprint(Y_new.shape)","d1d336fd":"X_new.head()","0b8ad7df":"x_train_new, x_test_new, y_train_new, y_test_new = train_test_split(X_new, Y_new, test_size = 0.3, random_state = 42)\nprint(x_train_new.shape)\nprint(x_test_new.shape)\nprint(y_train_new.shape)\nprint(y_test_new.shape)","fa0242cc":"random_forest_new = RandomForestClassifier(random_state = 0, verbose = 1, n_estimators=1000, max_depth=10)\nrandom_forest_new.fit(x_train_new, y_train_new)\nrandom_forest_new.score(x_test_new, y_test_new)","4502b57a":"desicion_tree_new = DecisionTreeClassifier(random_state = 0, criterion=\"entropy\", splitter=\"random\")\ndesicion_tree_new.fit(x_train_new, y_train_new)\ndesicion_tree_new.score(x_test_new, y_test_new)","1ff8925e":"gradient_boosting_new = GradientBoostingClassifier(random_state = 0, n_estimators = 300)\ngradient_boosting_new.fit(x_train_new, y_train_new)\ngradient_boosting_new.score(x_test_new, y_test_new)","bb588640":"naive_bayes_new = GaussianNB()\nnaive_bayes_new.fit(x_train_new, y_train_new)\nnaive_bayes_new.score(x_test_new, y_test_new)","660c6a68":"**Note:** Increased models","5e5bc30c":"### Splitting Data","752dc939":"**Note:** Changed Max Features to Log2 (no changes)","1ba85938":"**Note:** It Shows all the unique values in each column","0dbdf09c":"Previously, the accuracy achieved by this model was 75.61%","dd6505ba":"On the basis of observations, we have concluded that the following features seems to have more importance than others; Therefore, we are selecting these features and training our models again with these features only.<br><br>\n**'HighBP', 'HighChol', 'CholCheck', 'BMI', 'Smoker', 'Stroke', 'PhysHlth', 'HeartDiseaseorAttack', 'GenHlth', 'Age'**","6a26436a":"    **Note: Since Naive Bayes don't have an attribute 'feature_importances_', we can't calculate the importance of each feature in this case**","2ba308b7":"#### Gradient Boosting","81cc5ba4":"**Most important features are on top of the list**","a925d4e2":"**Note:** 1635 rows discarded due to duplicates","682a54f2":"#### Random Forest","0fd212e9":"### Inspecting Data","14515482":"#### Decision Tree","a6b2e390":"**Note:** Changed criteria to Entropy","e84b1cf4":"#### Naive Bayes","4abfc44e":"Previously, the accuracy achieved by this model was 75.41%","28a7c54e":"#### Decision Tree","1381b3f8":"**Note:** Seems like accuracy increased in this case","4b4e32b9":"#### Naive Bayes","9eae59fe":"**Note:** Increased Models","a9f441bf":"**Note:** Default settings","1fa2ed31":"Previously, the accuracy achieved by this model was 65.64%","847e22d5":"#### Confusion Matrix and Classification Report","4257f0b4":"#### Random Forest","24c9d943":"#### Confusion Matrix and Classification Report","8c3cacbf":"*Let's visualize these to get a better understanding*","747d5b7b":"**Note:** Hence no null or NA values in the dataset","c672d9a9":"**Note:** Default Settings","e90d38cf":"**Note:** Seems like accuracy increased in this case","6d43a8ca":"#### Decision Tree","01788512":"#### Gradient Boosting","9af27f92":"**Note:** Seems like accuracy decreased a bit in this case","7d585db9":"### Modeling (with all features)","a34f6104":"#### Naive Bayes","34d2b193":"### Data Preprocessing","b2c14e55":"**Note:** Changed splitter to random","198d37b3":"**Note:** Seems like accuracy decreased a bit in this case","57acba09":"**Note:** Changed Bootstrap to False, Accuracy decreased","ee8fe247":"**Note:** Changed criteria to Entropy","30f3a073":"#### Confusion Matrix and Classification Report","9f0f918b":"#### Random Forest","755a6ac3":"### Modeling with Feature Selection","f60900c6":"#### Confusion Matrix and Classification Report","237a5abe":"**Note:** Changed subsample to 80%","9d4a4421":"#### Gradient Boosting","b57c6efe":"**Note:** Changed learning rate to 0.15","f37384ca":"**Note:** Changed criteria to Mean Squared Error","2354170e":"### Loading Data","ef7e9a1b":"### Importing Libraries","2fd540a1":"### Evaluating Feature Importance Acc. to Each Algorithm","45ac819b":"**Note:** Default Settings","220c8a09":"**Note:** Changed max depth to 10","b2e562db":"Now, since we have an updated dataset, let's train the models again and observe their accuracy","1d56fd0c":"### Understanding Data using Visualizations \/ EDA","ec6ebc2f":"**Note:** Increased models with max depth 10, Accuracy increased","a8395cdc":"Previously, the accuracy achieved by this model was 71.8%"}}