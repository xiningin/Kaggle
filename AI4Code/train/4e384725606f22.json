{"cell_type":{"1d13e963":"code","d8afea9c":"code","ba1e7a50":"code","5489c782":"code","8ab1dd71":"code","a12dd5e1":"code","b85b328d":"code","c8e697f5":"code","a089bf75":"code","bd0b101d":"code","00203e25":"code","478e16f3":"code","48bc0050":"code","4e24058b":"code","ef41075e":"code","27b8dc49":"code","6e65bd08":"code","2716217c":"code","40e403b5":"code","9fa8b73a":"code","44353ac2":"code","93ac88ae":"code","13787de9":"code","c85d366f":"code","ed1655ec":"code","2c1994f0":"code","21ccb4c5":"code","cf930ae1":"code","81605fb0":"code","8aa19aa7":"code","527ed460":"code","ec5ee941":"code","4583595c":"code","fe1e64ed":"code","b16090b9":"code","ba4c5058":"code","55e54239":"code","371c78eb":"code","651728d7":"code","55f09744":"code","690301d8":"code","5ef7150b":"code","688983c9":"code","182140a3":"code","2685b95e":"code","701cb0c2":"code","da8db45b":"code","64eeecd7":"code","fb8ff3af":"code","fcd572a0":"code","29d402d7":"code","8c0b7239":"code","ca5a7fd0":"code","6be801f5":"code","730db83f":"code","d792af9a":"code","39e07963":"code","943e9432":"code","5a753ee8":"code","e29f58a6":"code","d02a2825":"code","c3257e04":"code","9d2932f3":"code","0b16496b":"code","d2a76749":"code","0b53588e":"code","18bae766":"code","1f6d8384":"code","ce8888cc":"code","6a5df20d":"code","99da285e":"code","26002db6":"code","7912a0a4":"code","96c3c126":"code","4cff4963":"code","c22d6873":"code","60d0e425":"code","122d21e8":"code","a37b5886":"code","c44883d6":"code","c908870f":"code","ddd9accd":"code","1220c7b3":"code","e1ad8c10":"code","c9972b72":"code","62c690b1":"code","ce8c7252":"code","d6d7bd5c":"code","d257c9af":"code","e76c3258":"code","3259ff39":"code","251f00fb":"code","9cd0e3fa":"code","78a4d3ad":"code","db40d95e":"code","ba53683a":"code","42214556":"code","f008610b":"code","7fe731bd":"code","9f9e89d6":"code","b764d76f":"code","74cb58b9":"code","ef0adcd6":"code","911a56b6":"code","e71472c7":"code","c03dd770":"code","18bc5ec2":"code","ec76ab74":"code","9209fe5c":"code","e8289d5f":"code","e2c08aa8":"code","392dd257":"code","035cbe9d":"code","74d779c9":"code","eec32f65":"code","dd3241f8":"code","4de43017":"code","4183d996":"code","f14c3317":"code","3fc0ec61":"code","af5b8a2a":"code","05efef74":"code","2a32e792":"code","a4ef9ff6":"code","373485cc":"code","a359c269":"code","e0a65b6d":"code","0785f07e":"code","1036990d":"code","275dec20":"code","53345b83":"code","e3ef2461":"code","96cc8a25":"code","e7d67cc0":"code","c679868c":"code","2c0f2e5d":"code","2c5193b2":"code","dc9cf499":"code","3dea18e9":"code","d2c4bd82":"code","c40271e8":"code","659b65c1":"code","2fd2d2f8":"code","b7b5be4e":"code","ae2a920c":"code","ba98b7e4":"code","1fcd3873":"code","7d8270b7":"code","2caae175":"code","161bb58f":"code","ce455133":"code","0ebf4c15":"code","f2de0ee2":"code","443069fb":"code","ec08046f":"code","50ba6937":"code","77b09946":"code","ccc26954":"code","d55e54a1":"code","b0fe98ed":"code","2f20cdc2":"code","76f0b3c1":"code","6216df3e":"code","a1a29478":"code","c380b98f":"code","83b7b496":"code","6a1f6882":"code","c5fffad2":"code","6643a756":"code","ccbe9ba9":"code","439dc78f":"code","ae307019":"code","5ad7fd3b":"code","432ffa4d":"code","3bbac7e9":"code","b276ce81":"code","d316addf":"code","e7244996":"code","a07337af":"code","e8843659":"code","f47e9ecb":"code","5a3af4bb":"code","4fda8783":"code","841c797f":"code","9b81f2f2":"code","614f4d2f":"code","8efe151c":"code","922fb9ad":"code","36d7ffa8":"code","d040675c":"code","d710d45d":"code","7423f097":"code","e94323fe":"code","76326217":"code","75c6ad9c":"code","ed424ea3":"code","1a0c428b":"code","de1af640":"code","1f1edc18":"code","87da3f37":"code","59b614a3":"code","6bdb0a76":"code","49c93ea6":"code","a747d42f":"code","3f978c94":"code","b06664be":"code","ce38e657":"code","60905ecd":"code","6aa8a83f":"code","2d03a093":"code","20fec48d":"code","c9bc9f0e":"code","26055846":"code","ccb323f9":"code","aa8a82b7":"code","b416822f":"code","79ab60c7":"code","8506f658":"code","707039a0":"code","bf37064e":"code","cbbe836e":"code","d7a567fc":"code","dfd4f564":"code","6eaa273d":"code","c4cb45c9":"code","18611fcb":"code","afb282f1":"code","27916c85":"code","bd3567c0":"code","0ef425e3":"code","c7c163e6":"code","b288f4c0":"code","b5fd5be1":"code","837ae94b":"code","4ac6fe3b":"markdown","fd2fffa1":"markdown","d2d88b3a":"markdown","de3dbc53":"markdown","c8b4a6e7":"markdown","b03a3a15":"markdown","e4ff9925":"markdown","e88b4f9f":"markdown","2b9f850d":"markdown","64f6c351":"markdown","0915b628":"markdown","ae527e0b":"markdown","0fb2a8e2":"markdown","00e748ac":"markdown","c88df68a":"markdown","580e4969":"markdown","be3f6ca7":"markdown","b9e73c60":"markdown","9f58e713":"markdown","0ebbc405":"markdown","05d65051":"markdown","97dab7a6":"markdown","d0940be6":"markdown","94616676":"markdown","3db999fb":"markdown","a9b4417e":"markdown","7a1dcb57":"markdown","7bf15dcf":"markdown","48a018ab":"markdown","4f04990b":"markdown","d42b45c1":"markdown","00dd7e0d":"markdown","bd27b93a":"markdown","49796ffd":"markdown"},"source":{"1d13e963":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n%matplotlib inline\nimport os\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom numpy import percentile\nfrom datetime import datetime\nfrom scipy.stats import pearsonr\nprint(os.listdir(\"..\/input\"))","d8afea9c":"print(os.listdir(\"..\/input\/elo-cards-basic-eda-exposes-data-skewness\"))","ba1e7a50":"# Read historical transactions data\nhist_df = pd.read_csv(\"..\/input\/elo-merchant-category-recommendation\/historical_transactions.csv\")\nhist_df.head()","5489c782":"print(len(hist_df))","8ab1dd71":"hist_df['pur_date']=pd.to_datetime(hist_df['purchase_date'])","a12dd5e1":"hist_df['pur_date'].max()","b85b328d":"hist_df['pur_date'].min()","c8e697f5":"#Lets take last 3 months historical data\n\ndate1 = datetime.strptime('2017-12-01', '%Y-%m-%d')\ndate2 = datetime.strptime('2018-02-28', '%Y-%m-%d')","a089bf75":"hist_df_reduced = hist_df.loc[(hist_df['pur_date']>date1) & (hist_df['pur_date']<date2)]","bd0b101d":"hist_df_reduced.to_csv('hist_DecFeb18.csv')","00203e25":"print(len(hist_df_reduced))","478e16f3":"date1 = datetime.strptime('2017-09-01', '%Y-%m-%d')\ndate2 = datetime.strptime('2017-11-30', '%Y-%m-%d')\nhist_df_reduced_SepNov = hist_df.loc[(hist_df['pur_date']>date1) & (hist_df['pur_date']<date2)]\nhist_df_reduced_SepNov.to_csv('hist_SepNov.csv')","48bc0050":"date1 = datetime.strptime('2017-06-01', '%Y-%m-%d')\ndate2 = datetime.strptime('2017-08-31', '%Y-%m-%d')\nhist_df_reduced_JunAug = hist_df.loc[(hist_df['pur_date']>date1) & (hist_df['pur_date']<date2)]\nhist_df_reduced_JunAug.to_csv('hist_JunAug.csv')","4e24058b":"date1 = datetime.strptime('2017-03-01', '%Y-%m-%d')\ndate2 = datetime.strptime('2017-05-31', '%Y-%m-%d')\nhist_df_reduced_MarMay = hist_df.loc[(hist_df['pur_date']>date1) & (hist_df['pur_date']<date2)]\nhist_df_reduced_MarMay.to_csv('hist_MarMay.csv')","ef41075e":"hist_df_reduced_MarMay.head()","27b8dc49":"date1 = datetime.strptime('2017-01-01', '%Y-%m-%d')\ndate2 = datetime.strptime('2017-02-28', '%Y-%m-%d')\nhist_df_reduced_JanFeb = hist_df.loc[(hist_df['pur_date']>date1) & (hist_df['pur_date']<date2)]\nhist_df_reduced_JanFeb.to_csv('hist_JanFeb.csv')","6e65bd08":"hist_df_reduced['month']=hist_df_reduced['pur_date'].dt.to_period('M')","2716217c":"#Lets see the trans vol by month and week\n#hist_df_red_by_month=hist_df_reduced.groupby(['month']).size()","40e403b5":"#hist_df_red_by_month.head()","9fa8b73a":"#hist_df_reduced['week']=hist_df_reduced['pur_date'].dt.to_period('W')","44353ac2":"#hist_df_red_by_wk=hist_df_reduced.groupby(['week']).size()","93ac88ae":"#ax = hist_df_red_by_month.plot(kind='bar',figsize=(14,8),fontsize=14)\n#ax.set_title(\"Historical Card Trans Volume By Month\",fontsize=28,fontweight='bold')\n#ax.set_xlabel(\"Month\",fontsize=14,fontweight='bold')\n#ax.set_ylabel(\"Volume of Trans\", fontsize=\"14\",fontweight=\"bold\")\n#ax.tick_params(axis='both',which='major',labelsize=18)\n#ax.tick_params(axis='both',which='minor',labelsize=18)","13787de9":"#Lets look at the transactions by Merchant Category\nTrans_by_MerchantCat = pd.DataFrame(hist_df_reduced.groupby(['merchant_category_id']).size())","c85d366f":"Trans_by_MerchantCat = Trans_by_MerchantCat.rename(columns={0: 'TransCt'})","ed1655ec":"print(\"Max of Count of Trans by Merch Cat ID:\"+str(Trans_by_MerchantCat['TransCt'].max().round(2)))\nprint(\"Median of Count of Trans by Merch Cat ID:\"+str(round(Trans_by_MerchantCat['TransCt'].median(),2)))\nprint(\"Mean of Count of Trans by Merch Cat ID:\"+str(round(Trans_by_MerchantCat['TransCt'].mean(),2)))\nprint(\"Min of Count of Trans by Merch Cat ID:\"+str(round(Trans_by_MerchantCat['TransCt'].min(),2)))","2c1994f0":"Trans_by_MerchantCat.sort_values(by='TransCt',ascending=False).head()","21ccb4c5":"axarr = Trans_by_MerchantCat['TransCt'].sort_values().plot(kind='bar',figsize=(60,40))\naxarr.set_title(\"Bar chart of count of Trans by Merch Cat Id\",fontsize=72,fontweight='bold')\naxarr.set_xlabel(\"Merch Cat Id\",fontsize=36)\n#axarr[0][0].set_xlim((0,100))\naxarr.set_ylabel(\"Frequency\",fontsize=36)\naxarr.tick_params(axis='both',which='major',labelsize=36)\naxarr.tick_params(axis='both',which='minor',labelsize=36)","cf930ae1":"TransAmt_by_MerchantCat = pd.DataFrame(hist_df_reduced.groupby(['merchant_category_id'])['purchase_amount'].sum())","81605fb0":"TransAmt_by_MerchantCat.head()","8aa19aa7":"print(round(TransAmt_by_MerchantCat['purchase_amount'].max(),2))\nprint(round(TransAmt_by_MerchantCat['purchase_amount'].min(),2))\nprint(round(TransAmt_by_MerchantCat['purchase_amount'].median(),2))","527ed460":"axarr = TransAmt_by_MerchantCat['purchase_amount'].sort_values().plot(kind='bar',figsize=(40,40))\naxarr.set_title(\"Bar chart of Amount of Trans by Merch Cat Id\",fontsize=72,fontweight='bold')\naxarr.set_xlabel(\"Merch Cat Id\",fontsize=36)\n#axarr[0][0].set_xlim((0,100))\naxarr.set_ylabel(\"Frequency\",fontsize=36)\naxarr.tick_params(axis='both',which='major',labelsize=36)\naxarr.tick_params(axis='both',which='minor',labelsize=36)","ec5ee941":"TransAmt_by_Card = pd.DataFrame(hist_df_reduced.groupby(['card_id'])['purchase_amount'].sum())","4583595c":"ax=plt.hist(TransAmt_by_Card['purchase_amount'],bins=5)\nplt.xlim(-2000,150000)\nplt.show()","fe1e64ed":"print(\"Max amt by Card:\"+str(TransAmt_by_Card.max().round(2)))\nprint(\"Min amt by Card:\"+str(TransAmt_by_Card.min().round(2)))\nprint(\"Median amt by Card:\"+str(TransAmt_by_Card.median().round(2)))","b16090b9":"data = TransAmt_by_Card['purchase_amount']\npercentiles = percentile(data,[10,25,30,50,75,90, 95, 98, 99, 99.95])\nprint(percentiles.round(2))","ba4c5058":"print(len(TransAmt_by_Card))","55e54239":"TransAmt_by_Card.sort_values(by='purchase_amount',ascending=False)[:50]","371c78eb":"TransAmt_by_Card.sort_values(by='purchase_amount',ascending=False)[27000:27100]","651728d7":"TransAmt_by_Card_red = TransAmt_by_Card.loc[(TransAmt_by_Card['purchase_amount']>=100)]","55f09744":"print(len(TransAmt_by_Card_red))","690301d8":"ax=plt.hist(TransAmt_by_Card_red['purchase_amount'],bins=100)\nplt.xlim(-2000,25000)\nplt.show()","5ef7150b":"TransAmt_by_CardbyMerch = pd.DataFrame(hist_df_reduced.groupby(['card_id','merchant_id'])['purchase_amount'].sum())","688983c9":"data = TransAmt_by_CardbyMerch['purchase_amount']\npercentiles = percentile(data,[10,25,30,50,75,90, 95, 98, 99, 99.95])\nprint(percentiles.round(2))","182140a3":"TransVol_by_CardbyMerch = pd.DataFrame(hist_df_reduced.groupby(['card_id','merchant_id']).size())","2685b95e":"data = TransVol_by_CardbyMerch\npercentiles = percentile(data,[10,25,30,50,75,90, 95, 98, 99, 99.95])\nprint(percentiles)","701cb0c2":"print(len(TransVol_by_CardbyMerch))","da8db45b":"data = Trans_by_MerchantCat['TransCt']\npercentiles = percentile(data,[10,25,30,50,75,90])\nprint(percentiles.round())","64eeecd7":"Trans_by_MerchantCat_gt25k=Trans_by_MerchantCat['TransCt'].loc[(Trans_by_MerchantCat['TransCt'] > 25000)]","fb8ff3af":"len(Trans_by_MerchantCat)","fcd572a0":"len(Trans_by_MerchantCat_gt25k)","29d402d7":"axarr = Trans_by_MerchantCat_gt25k.sort_values().plot(kind='bar',figsize=(60,40))\naxarr.set_title(\"Bar chart of count of Trans by Merch Cat Id (>25k)\",fontsize=72,fontweight='bold')\naxarr.set_xlabel(\"Merch Cat Id\",fontsize=36)\n#axarr[0][0].set_xlim((0,100))\naxarr.set_ylabel(\"Frequency\",fontsize=36)\naxarr.tick_params(axis='both',which='major',labelsize=36)\naxarr.tick_params(axis='both',which='minor',labelsize=36)","8c0b7239":"HighVolMerchCat = Trans_by_MerchantCat_gt25k.index","ca5a7fd0":"HighVolMerchCat","6be801f5":"#read train df\ntrain_df=pd.read_csv('..\/input\/elo-merchant-category-recommendation\/train.csv')","730db83f":"train_df.head()","d792af9a":"print(len(train_df))","39e07963":"train_df['first_active_month']=pd.to_datetime(train_df['first_active_month'])","943e9432":"train_df['first_active_month'].min()","5a753ee8":"train_df['first_active_month'].max()","e29f58a6":"print(len(train_df['card_id'].unique()))","d02a2825":"train_df['month']=train_df['first_active_month'].dt.to_period('M')","c3257e04":"train_df_by_month=train_df.groupby(['month']).size()","9d2932f3":"ax = train_df_by_month.plot(kind='bar',figsize=(14,8),fontsize=14)\nax.set_title(\"Training dataset - Card Trans Volume By First Active Month\",fontsize=28,fontweight='bold')\nax.set_xlabel(\"First Active Month\",fontsize=14,fontweight='bold')\nax.set_ylabel(\"Volume of Trans\", fontsize=\"14\",fontweight=\"bold\")\nax.tick_params(axis='both',which='major',labelsize=18)\nax.tick_params(axis='both',which='minor',labelsize=18)","0b16496b":"print(len(train_df['month'].unique()))","d2a76749":"#train_df_by_month_mod = train_df_by_month.loc[train_df_by_month > 250]","0b53588e":"#first_act_mth_list = train_df_by_month_mod.index","18bae766":"#first_act_mth_list","1f6d8384":"#train_df_red = train_df.loc[train_df.month.isin(first_act_mth_list)]","ce8888cc":"#print(len(train_df_red))","6a5df20d":"#train_df_red.head()","99da285e":"new_merch_df = pd.read_csv(\"..\/input\/elo-merchant-category-recommendation\/new_merchant_transactions.csv\")\nnew_merch_df.head()","26002db6":"new_merch_df['pur_date']=pd.to_datetime(new_merch_df['purchase_date'])","7912a0a4":"new_merch_df['pur_date'].max()","96c3c126":"new_merch_df['pur_date'].min()","4cff4963":"new_merch_df['month']=new_merch_df['pur_date'].dt.to_period('M')","c22d6873":"#new_merch_df['wk']=new_merch_df['pur_date'].dt.to_period('W')","60d0e425":"new_merch_df_by_month = new_merch_df.groupby(['month']).size()","122d21e8":"#new_merch_df_by_wk = new_merch_df.groupby(['wk']).size()","a37b5886":"ax = new_merch_df_by_month.plot(kind='bar',figsize=(14,8),fontsize=14)\nax.set_title(\"New Merchant Card Trans Volume By Month\",fontsize=28,fontweight='bold')\nax.set_xlabel(\"Month\",fontsize=14,fontweight='bold')\nax.set_ylabel(\"Volume of Trans\", fontsize=\"14\",fontweight=\"bold\")\nax.tick_params(axis='both',which='major',labelsize=18)\nax.tick_params(axis='both',which='minor',labelsize=18)","c44883d6":"#Group by Merchant Category Id\nTrans_by_MerchantCat_new = pd.DataFrame(new_merch_df.groupby(['merchant_category_id']).size())","c908870f":"Trans_by_MerchantCat_new = Trans_by_MerchantCat_new.rename(columns={0: 'TransCt'})","ddd9accd":"axarr = Trans_by_MerchantCat_new['TransCt'].sort_values().plot(kind='bar',figsize=(60,40))\naxarr.set_title(\"New Merchant Count of Trans by Merch Cat Id\",fontsize=72,fontweight='bold')\naxarr.set_xlabel(\"Merch Cat Id\",fontsize=36)\n#axarr[0][0].set_xlim((0,100))\naxarr.set_ylabel(\"Frequency\",fontsize=36)\naxarr.tick_params(axis='both',which='major',labelsize=36)\naxarr.tick_params(axis='both',which='minor',labelsize=36)","1220c7b3":"data = Trans_by_MerchantCat_new['TransCt']\npercentiles = percentile(data,[25,30,50,75,90])\nprint(percentiles)","e1ad8c10":"Trans_by_MerchantCat_new_gt5k=Trans_by_MerchantCat_new['TransCt'].loc[(Trans_by_MerchantCat_new['TransCt'] > 5000)]","c9972b72":"HighVolMerchCat_new = Trans_by_MerchantCat_new_gt5k.index","62c690b1":"HighVolMerchCat_new","ce8c7252":"c = set(HighVolMerchCat) & set(HighVolMerchCat_new)  #  & calculates the intersection.\nprint(len(c))","d6d7bd5c":"HighVolMerchComb = set(HighVolMerchCat) | set(HighVolMerchCat_new)","d257c9af":"print(len(HighVolMerchComb))","e76c3258":"#new_merch_df_red = new_merch_df.loc[(new_merch_df.merchant_category_id.isin(HighVolMerchCat_new))]","3259ff39":"#print(len(new_merch_df_red))","251f00fb":"print(len(new_merch_df['card_id'].unique()))","9cd0e3fa":"TransAmt_by_CardnewMerch = pd.DataFrame(new_merch_df.groupby(['card_id','merchant_id'])['purchase_amount'].sum())","78a4d3ad":"#TransAmt_by_CardnewMerch.hist()\nax=plt.hist(TransAmt_by_CardnewMerch['purchase_amount'],bins=50)\nplt.xlim(-5,25)\nplt.show()","db40d95e":"data = TransAmt_by_CardnewMerch['purchase_amount']\npercentiles = percentile(data,[10,25,30,50,75,90, 95, 98, 99, 99.95])\nprint(TransAmt_by_CardnewMerch['purchase_amount'].min())\nprint(TransAmt_by_CardnewMerch['purchase_amount'].max())\nprint(percentiles)","ba53683a":"TransVol_by_CardnewMerch = pd.DataFrame(new_merch_df.groupby(['card_id','merchant_id']).size())","42214556":"TransVol_by_CardnewMerch = TransVol_by_CardnewMerch.rename(columns={0: 'TransCt'})","f008610b":"TransVol_by_CardnewMerch.sort_values(by='TransCt',ascending=False).head()","7fe731bd":"TransVol_by_CardnewMerch = TransVol_by_CardnewMerch.reset_index()","9f9e89d6":"TransVol_by_CardnewMerch.head()","b764d76f":"data = TransVol_by_CardnewMerch['TransCt']\npercentiles = percentile(data,[10,25,30,50,75,90, 95, 98, 99, 99.95,99.98])\nprint(TransVol_by_CardnewMerch['TransCt'][0].min())\nprint(TransVol_by_CardnewMerch['TransCt'][0].max())\nprint(percentiles)","74cb58b9":"merchant_df = pd.read_csv('..\/input\/elo-merchant-category-recommendation\/merchants.csv')","ef0adcd6":"len(merchant_df)","911a56b6":"len(merchant_df['merchant_id'].unique())","e71472c7":"merchantList=merchant_df['merchant_id'].unique()","c03dd770":"merchant_df=merchant_df.drop_duplicates(subset=['merchant_id'])","18bc5ec2":"len(merchant_df)","ec76ab74":"len(merchant_df['merchant_id'].unique())","9209fe5c":"merchant_df= merchant_df.reset_index(drop=True)","e8289d5f":"TransVol_by_CardnewMerch = pd.merge(TransVol_by_CardnewMerch, merchant_df, how = 'inner', left_on = ['merchant_id'], right_on=['merchant_id'])","e2c08aa8":"TransVol_by_CardnewMerch.head()","392dd257":"TransVol_by_CardnewMerchHighVol = TransVol_by_CardnewMerch.loc[(TransVol_by_CardnewMerch.merchant_category_id.isin(HighVolMerchCat_new))]","035cbe9d":"len(TransVol_by_CardnewMerch)","74d779c9":"len(TransVol_by_CardnewMerchHighVol)","eec32f65":"TransVol_by_CardnewHighVolMerch=TransVol_by_CardnewMerchHighVol.groupby(['card_id']).size()","dd3241f8":"TransVol_by_CardnewHighVolMerch.head()","4de43017":"TransVol_by_CardnewHighVolMerch=pd.DataFrame(TransVol_by_CardnewHighVolMerch)\nTransVol_by_CardnewHighVolMerch = TransVol_by_CardnewHighVolMerch.reset_index()\nTransVol_by_CardnewHighVolMerch.head()","4183d996":"TransVol_by_CardnewHighVolMerch = TransVol_by_CardnewHighVolMerch.rename(columns={0: 'TransCt'})","f14c3317":"TransVol_by_CardnewHighVolMerch.sort_values(by='TransCt',ascending=False).head()","3fc0ec61":"TransVol_by_CardnewHighVolMerch = TransVol_by_CardnewHighVolMerch.rename(columns={'TransCt': 'NewHighVolMerchTransCt'})","af5b8a2a":"TransVol_by_CardnewHighVolMerch.sort_values(by='NewHighVolMerchTransCt',ascending=False).head()","05efef74":"TransVol_by_CardnewMerchCt=TransVol_by_CardnewMerch.groupby(['card_id']).size()","2a32e792":"TransVol_by_CardnewMerchCt.sort_values(ascending=False).head()","a4ef9ff6":"print(TransVol_by_CardnewMerchCt.min())\nprint(TransVol_by_CardnewMerchCt.median())\nprint(TransVol_by_CardnewMerchCt.max())","373485cc":"TransVol_by_CardnewMerchCt = TransVol_by_CardnewMerchCt.reset_index()","a359c269":"TransVol_by_CardnewMerchCt = TransVol_by_CardnewMerchCt.rename(columns={0: 'NewMerchTransCt'})","e0a65b6d":"TransVol_by_CardnewMerchCt.head()","0785f07e":"#hist_df_reduced_merch = hist_df_reduced.loc[(hist_df_reduced.merchant_category_id.isin(HighVolMerchCat))]","1036990d":"#print(len(hist_df_reduced_merch))","275dec20":"#print(len(hist_df_reduced_merch['card_id'].unique()))","53345b83":"#hist_df_reduced_merch.head()","e3ef2461":"print(len(hist_df_reduced['city_id'].unique()))","96cc8a25":"#Lets group transactions by city\nhist_df_by_city = hist_df_reduced.groupby(['city_id']).size()","e7d67cc0":"print(hist_df_by_city.max())\nprint(hist_df_by_city.min())\nprint(hist_df_by_city.median())","c679868c":"axarr = hist_df_by_city.sort_values().plot(kind='bar',figsize=(60,40))\naxarr.set_title(\"Bar chart of count of Trans by City Id\",fontsize=72,fontweight='bold')\naxarr.set_xlabel(\"City Id\",fontsize=36)\n#axarr[0][0].set_xlim((0,100))\naxarr.set_ylabel(\"Frequency\",fontsize=36)\naxarr.tick_params(axis='both',which='major',labelsize=36)\naxarr.tick_params(axis='both',which='minor',labelsize=36)","2c0f2e5d":"data = hist_df_by_city\npercentiles = percentile(data, [10,25,30,40, 50, 60, 75, 90])","2c5193b2":"print(percentiles)","dc9cf499":"#hist_df_by_city=hist_df_by_city.loc[(hist_df_by_city>15000)]","3dea18e9":"#city_list = hist_df_by_city.index","d2c4bd82":"#hist_df_reduced_merch_city = hist_df_reduced_merch.loc[hist_df_reduced_merch.city_id.isin(city_list)]","c40271e8":"#print(len(hist_df_reduced_merch_city))","659b65c1":"new_merch_df_city = new_merch_df.groupby(['city_id']).size()","2fd2d2f8":"data = new_merch_df_city\npercentiles = percentile(data, [10,25,30,40, 50, 60, 75, 90])","b7b5be4e":"print(percentiles)","ae2a920c":"axarr = new_merch_df_city.sort_values().plot(kind='bar',figsize=(60,40))\naxarr.set_title(\"Bar chart of count of Trans by City Id, New Merch\",fontsize=72,fontweight='bold')\naxarr.set_xlabel(\"City Id\",fontsize=36)\n#axarr[0][0].set_xlim((0,100))\naxarr.set_ylabel(\"Frequency\",fontsize=36)\naxarr.tick_params(axis='both',which='major',labelsize=36)\naxarr.tick_params(axis='both',which='minor',labelsize=36)","ba98b7e4":"#new_merch_df_city=new_merch_df_city.loc[(new_merch_df_city>5000)]","1fcd3873":"#city_list_new = new_merch_df_city.index","7d8270b7":"#new_merch_df_city = new_merch_df_red.loc[new_merch_df_red.city_id.isin(city_list_new)]","2caae175":"#new_merch_df_city.head()","161bb58f":"#en(new_merch_df_city)","ce455133":"new_merch_trans_sum_bycard = new_merch_df.groupby(['card_id'])['purchase_amount'].sum()\nnew_merch_trans_max_bycard = new_merch_df.groupby(['card_id'])['purchase_amount'].max()\nnew_merch_trans_median_bycard = new_merch_df.groupby(['card_id'])['purchase_amount'].median()\nnew_merch_trans_std_bycard = new_merch_df.groupby(['card_id'])['purchase_amount'].std()","0ebf4c15":"new_merch_trans_sum_bycard.sort_values(ascending=False).head()","f2de0ee2":"hist_trans_sum_bycard = hist_df_reduced.groupby(['card_id'])['purchase_amount'].sum()\nhist_trans_max_bycard = hist_df_reduced.groupby(['card_id'])['purchase_amount'].max()\nhist_trans_median_bycard = hist_df_reduced.groupby(['card_id'])['purchase_amount'].median()\nhist_trans_std_bycard = hist_df_reduced.groupby(['card_id'])['purchase_amount'].std()","443069fb":"hist_trans_sum_bycard.sort_values(ascending=False).head()","ec08046f":"Card_union = set(new_merch_trans_sum_bycard.index) | set(hist_trans_sum_bycard.index)","50ba6937":"len(Card_union)","77b09946":"Card_intersection = set(new_merch_trans_sum_bycard.index) & set(hist_trans_sum_bycard.index)","ccc26954":"len(Card_intersection)","d55e54a1":"#new_merch_df_city.to_csv('new_merch_red.csv')","b0fe98ed":"#hist_df_reduced_merch_city.to_csv('hist_trans_red.csv')","2f20cdc2":"#train_df_red.to_csv('train_red.csv')","76f0b3c1":"hist_df_reduced.head()","6216df3e":"hist_df_auth_ct_bycard=hist_df_reduced.groupby('card_id')['authorized_flag'].apply(lambda x: (x=='Y').sum()).reset_index(name='Auth_count')","a1a29478":"hist_df_auth_ct_bycard.head()","c380b98f":"hist_df_ref_ct_bycard=hist_df_reduced.groupby('card_id')['authorized_flag'].apply(lambda x: (x=='N').sum()).reset_index(name='Ref_count')","83b7b496":"hist_df_ref_ct_bycard.head()","6a1f6882":"print(len(hist_trans_sum_bycard.index))","c5fffad2":"print(len(new_merch_trans_sum_bycard.index))","6643a756":"#df_card_all = pd.concat([new_merch_trans_sum_bycard, hist_trans_sum_bycard])\\\n#       .groupby('card_id').sum().reset_index()\n","ccbe9ba9":"#df_card_all.head()","439dc78f":"#print(len(df_card_all))","ae307019":"new_merch_trans_max_bycard = pd.DataFrame(new_merch_trans_max_bycard)\nnew_merch_trans_median_bycard = pd.DataFrame(new_merch_trans_median_bycard)\nnew_merch_trans_std_bycard = pd.DataFrame(new_merch_trans_std_bycard)\n#new_merch_trans_max_bycard.head()","5ad7fd3b":"hist_trans_max_bycard = pd.DataFrame(hist_trans_max_bycard)\nhist_trans_median_bycard = pd.DataFrame(hist_trans_median_bycard)\nhist_trans_std_bycard = pd.DataFrame(hist_trans_std_bycard)","432ffa4d":"new_merch_trans_max_bycard = new_merch_trans_max_bycard.rename(columns={'purchase_amount': 'NewMerch_Max_Amt'})\nnew_merch_trans_median_bycard = new_merch_trans_median_bycard.rename(columns={'purchase_amount': 'NewMerch_Median_Amt'})\nnew_merch_trans_std_bycard = new_merch_trans_std_bycard.rename(columns={'purchase_amount': 'NewMerch_StdDev_Amt'})","3bbac7e9":"hist_trans_max_bycard = hist_trans_max_bycard.rename(columns={'purchase_amount': 'HistMerch_Max_Amt'})\nhist_trans_median_bycard = hist_trans_median_bycard.rename(columns={'purchase_amount': 'HistMerch_Median_Amt'})\nhist_trans_std_bycard = hist_trans_std_bycard.rename(columns={'purchase_amount': 'HistMerch_StdDev_Amt'})","b276ce81":"#hist_instalment_by_card = hist_df_reduced.groupby(['card_id'])['installments'].sum()","d316addf":"#new_instalment_by_card = new_merch_df.groupby(['card_id'])['installments'].sum()","e7244996":"#df_card_all_instalment = pd.concat([hist_instalment_by_card, new_instalment_by_card])\\\n#       .groupby('card_id').sum().reset_index()","a07337af":"#df_card_all_instalment.head()","e8843659":"#train_df_merged = pd.merge(train_df,df_card_all, how = 'inner', left_on = ['card_id'], right_on=['card_id'])","f47e9ecb":"#train_df_merged = pd.merge(train_df_merged,df_card_all_instalment, how = 'inner', left_on = ['card_id'], right_on=['card_id'])","5a3af4bb":"train_df_merged = pd.merge(train_df,new_merch_trans_max_bycard, how = 'inner', left_on = ['card_id'], right_on = ['card_id'])\n","4fda8783":"train_df_merged = pd.merge(train_df_merged,TransVol_by_CardnewHighVolMerch, how = 'inner', left_on = ['card_id'], right_on = ['card_id'])","841c797f":"train_df_merged = pd.merge(train_df_merged,TransVol_by_CardnewMerchCt, how = 'inner', left_on = ['card_id'], right_on = ['card_id'])","9b81f2f2":"#train_df_merged = pd.merge(train_df_merged,new_merch_trans_median_bycard, how = 'inner', left_on = ['card_id'], right_on = ['card_id'])\n#train_df_merged = pd.merge(train_df_merged,new_merch_trans_std_bycard, how = 'inner', left_on = ['card_id'], right_on = ['card_id'])","614f4d2f":"train_df_merged.head()","8efe151c":"#train_df_merged = pd.merge(train_df_merged,hist_trans_max_bycard, how = 'inner', left_on = ['card_id'], right_on = ['card_id'])\n#train_df_merged = pd.merge(train_df_merged,hist_trans_median_bycard, how = 'inner', left_on = ['card_id'], right_on = ['card_id'])\n#train_df_merged = pd.merge(train_df_merged,hist_trans_std_bycard, how = 'inner', left_on = ['card_id'], right_on = ['card_id'])","922fb9ad":"train_df_merged.head()","36d7ffa8":"#train_df_merged = pd.merge(train_df_merged,TransVol_by_CardMerchm, how = 'inner', left_on = ['card_id'], right_on = ['card_id'])","d040675c":"train_df_merged = pd.merge(train_df_merged,hist_df_auth_ct_bycard, how = 'inner', left_on = ['card_id'], right_on = ['card_id'])\n","d710d45d":"train_df_merged = pd.merge(train_df_merged,hist_df_ref_ct_bycard, how = 'inner', left_on = ['card_id'], right_on = ['card_id'])","7423f097":"train_df_merged.head()","e94323fe":"#train_df_merged.to_csv('train_df_merged.csv')","76326217":"#do some data cleansing to make sure the correlation analysis runs without any error\n#m=train_df_merged[\"NewMerch_StdDev_Amt\"].isnull().any()\n#print(m[m])\n#m=train_df_merged[\"HistMerch_StdDev_Amt\"].isnull().any()\n#print(m[m])\n","75c6ad9c":"#train_df_merged[\"NewMerch_StdDev_Amt\"].fillna(train_df_merged[\"NewMerch_StdDev_Amt\"].mean())\n#train_df_merged[\"NewMerch_StdDev_Amt\"] = train_df_merged[\"NewMerch_StdDev_Amt\"].apply(lambda x: x if not pd.isnull(x) else train_df_merged[\"NewMerch_StdDev_Amt\"].mean())\n#m=train_df_merged[\"NewMerch_StdDev_Amt\"].isnull().any()\n#print(m[m])\n#train_df_merged[\"HistMerch_StdDev_Amt\"].fillna(train_df_merged[\"HistMerch_StdDev_Amt\"].mean())\n#train_df_merged[\"HistMerch_StdDev_Amt\"] = train_df_merged[\"HistMerch_StdDev_Amt\"].apply(lambda x: x if not pd.isnull(x) else train_df_merged[\"NewMerch_StdDev_Amt\"].mean())\n#m=train_df_merged[\"HistMerch_StdDev_Amt\"].isnull().any()\n#print(m[m])","ed424ea3":"#\n#corr, _ = pearsonr(train_df_merged['target'],train_df_merged['installments'])\n#print('Pearsons correlation betweeen target and installments: %.3f' % corr)","1a0c428b":"#corr, _ = pearsonr(train_df_merged['target'],train_df_merged['purchase_amount'])\n#print('Pearsons correlation betweeen target and sum purchase amount by card id: %.3f' % corr)","de1af640":"corr, _ = pearsonr(train_df_merged['target'],train_df_merged['NewMerch_Max_Amt'])\nprint('Pearsons correlation betweeen target and New Merch Max puch amt: %.3f' % corr)","1f1edc18":"corr, _ = pearsonr(train_df_merged['target'],train_df_merged['NewMerchTransCt'])\nprint('Pearsons correlation betweeen target and New Merch Count: %.3f' % corr)","87da3f37":"corr, _ = pearsonr(train_df_merged['target'],train_df_merged['NewHighVolMerchTransCt'])\nprint('Pearsons correlation betweeen target and New Merch Count: %.3f' % corr)","59b614a3":"corr, _ = pearsonr(train_df_merged['target'],train_df_merged['Auth_count'])\nprint('Pearsons correlation betweeen target and Authorised Trans Count: %.3f' % corr)","6bdb0a76":"corr, _ = pearsonr(train_df_merged['target'],train_df_merged['Ref_count'])\nprint('Pearsons correlation betweeen target and Refused Trans Count: %.3f' % corr)","49c93ea6":"train_df_merged['feature_1'].value_counts().sort_values().plot(kind='bar')","a747d42f":"train_df_merged['feature_2'].value_counts().sort_values().plot(kind='bar')","3f978c94":"train_df_merged['feature_3'].value_counts().sort_values().plot(kind='bar')","b06664be":"train_df_corr = train_df_merged[['NewMerch_Max_Amt','NewMerchTransCt','NewHighVolMerchTransCt','Auth_count','Ref_count','target']]\n","ce38e657":"corr=train_df_corr.corr()","60905ecd":"corr","6aa8a83f":"# Generate a mask for the upper triangle\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(11, 9))\n# Generate a custom diverging colormap\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, mask=mask, cmap=cmap, vmax=1, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})\nplt.show()","2d03a093":"import seaborn as sns\nsns.set(style=\"ticks\")\nsns.pairplot(train_df_merged[['target','feature_1']])","20fec48d":"import seaborn as sns\nsns.set(style=\"ticks\")\nsns.pairplot(train_df_merged[['target','feature_2']])","c9bc9f0e":"import seaborn as sns\nsns.set(style=\"ticks\")\nsns.pairplot(train_df_merged[['target','feature_3']])","26055846":"train_df_merged['target'].hist()","ccb323f9":"ax=plt.hist(train_df_merged['target'],bins=100)\nplt.xlim(-7.5,7.5)\nplt.show()","aa8a82b7":"print(len(train_df_merged.loc[(train_df_merged['target'] < -7)]))","b416822f":"print(len(train_df_merged.loc[(train_df_merged['target'] > 7)]))","79ab60c7":"print(len(train_df_merged))","8506f658":"train_df_merged = train_df_merged.loc[(train_df_merged['target'] >= -7)]","707039a0":"print(len(train_df_merged))","bf37064e":"train_df_merged = train_df_merged.loc[(train_df_merged['target'] <= 7)]","cbbe836e":"train_df_merged.to_csv('train_df_merged.csv')","d7a567fc":"print(len(train_df_merged))","dfd4f564":"train_df_corr = train_df_merged[['NewMerch_Max_Amt','NewMerchTransCt','NewHighVolMerchTransCt','Auth_count','Ref_count','target']]\n","6eaa273d":"corr=train_df_corr.corr()\ncorr","c4cb45c9":"# Generate a mask for the upper triangle\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(11, 9))\n# Generate a custom diverging colormap\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, mask=mask, cmap=cmap, vmax=1, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})\nplt.show()","18611fcb":"#merchant_df = pd.read_csv('..\/input\/merchants.csv')","afb282f1":"merchant_df.head()","27916c85":"print(len(merchant_df['merchant_id'].unique()))","bd3567c0":"print(len(merchant_df['merchant_group_id'].unique()))","0ef425e3":"print(len(merchant_df['merchant_category_id'].unique()))","c7c163e6":"merchant_df['subsector_id'].value_counts()","b288f4c0":"merchant_df['category_1'].value_counts()","b5fd5be1":"merchant_df['most_recent_purchases_range'].value_counts()","837ae94b":"merchant_df['most_recent_sales_range'].value_counts()","4ac6fe3b":"**Since the length of unique card ids = length of dataset, we conclude train_df has one row per card id, and hence the loyalty score is per card id**","fd2fffa1":"**Added NewMerchTransCt and NewHighVolMerchTransCt as two features**","d2d88b3a":"****The above is a verification that the operation is ok since the count matches the set union value above****","de3dbc53":"**Lets group the transactions by card_id and sum the purchase_amounts**","c8b4a6e7":"**This is strange, merchant csv is supposed to be by merchant_id, but there are few duplicates, lets remove the duplicates and take unique values since diff is small**","b03a3a15":"**We explore the feature 1 , feature 2 and feature 3 values using bar charts**","e4ff9925":"**Shows target has a slight negative correlation with NewMerch_Max_ Amt and NewMerchTransCt**","e88b4f9f":"**The above shows a strange result. For 90 percentile of the card-Merch combination have vol <=4, and 75 percentile of card-Merch has 2 or less transactions**","2b9f850d":"**Lets create Trans Vol grouped by Card Id and Merchant Id, ie for each card, the number of transactions done at same Merchant**","64f6c351":"****We ignore sum of installments by card as prev iteration showed no correlation**","0915b628":"**Hard to believe but true,  99 percentile of the data is 11 USD or below, above 99.5 percentile mark we get values like 3500 USD going all the way upto max 134755 USD**","ae527e0b":"**The above shows Outliers in target value, few values at -30, should be ignored**","0fb2a8e2":"**Lets group the transactions by Card summing up the purchase amounts, and getting max, median, std dev also, however we will not use all this in correlation analysis as in prev study we found correlation only with New Merch Max Trans Amt by Card**","00e748ac":"**Lets remove the extreme Outliers from target value, keeping it between -7 and +7 and explore the Correlation matrix again**","c88df68a":"**This is a strange result, 99 percentile of Card-Merch combination is having purch value <= USD 1.77**","580e4969":"**This means only 405 cards have made total transactions worth USD 100 or more in last 3 months!!**","be3f6ca7":"**Lets read New Merchant Transactions and do similar study as in case of Historical Transactions**","b9e73c60":"**Again its skewed data with some city having 1.6M transactions in past 3 months, whereas some city having only 20 transactions**","9f58e713":"**Lets group Trans Volume by Card for New Merchants with number of Merchants at which transaction done for each Card**","0ebbc405":"**Lets look at number of transactions by Card id and Merchant id**","05d65051":"**We see this is highly skewed and is a wide variation between the vol of Trans for diff Merch Categories, there are Merchant category with 1.5M transactions in last 3 months, as well as some Merchant category with 1 trans. lets explore this a bit further**","97dab7a6":"**This is a strange result, the 10 percentile value is -46 and 90 percentile value is -1, but max is 134755.**","d0940be6":"**We merge the train dataset with the historical and new merchant transactions data to add purchase amount and installments**","94616676":"**Lets find out how many count of Transactions are done at High Vol Merch Categories**","3db999fb":"**Read train.csv to be combined with Historical and New Merch transactions**","a9b4417e":"**Lets explore Trans amount by Merchant Id for a Card id**","7a1dcb57":"**Shows there are few outliers in target (-30), but these occur for all values of feature_1**","7bf15dcf":"**Feature 2 also does not show much correlation with target**","48a018ab":"**We ignore the payment amounts now, as correlation analysis in previous iteration didnt give any result**","4f04990b":"**Feature 2 does not show any correlation with target, the value 3 starts slightly higher, but this can be ignored as there is a huge spread in target value for all three values**","d42b45c1":"**Lets explore volume of Transactions by City**","00dd7e0d":"**The data shows highly spread out dist by Merch Cat, median is -185 USD, min is -763206 USD**","bd27b93a":"**We notice these are categorical variables. We now explore correlation between target and the purchase amount and installments**","49796ffd":"**The above shows that the Trans Amt is Negative for half of the Merchant categories. What does this mean, does it mean for these Merchant categories, the Users made payment to the Card, but never purchased !! Need to be explored from merchants.csv**"}}