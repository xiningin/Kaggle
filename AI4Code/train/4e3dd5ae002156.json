{"cell_type":{"fe3e90bf":"code","5e5ee26e":"code","97f2fc2c":"code","09dca162":"code","51dbdd46":"code","0075a25f":"code","7ebe813f":"code","42c3a3d3":"code","933eabaf":"code","d8cd4dc3":"code","2c04b5b6":"code","7e992240":"code","e001bbaf":"code","750d6acb":"code","109eb506":"code","7e580091":"code","6ebdbf23":"code","45f7f5e4":"code","dad6d652":"code","51934468":"code","f760b76e":"markdown","ac885eb5":"markdown","7d21918d":"markdown","538e5ad9":"markdown","67d18c67":"markdown","87f94a91":"markdown","c1481dd8":"markdown","a5a1669a":"markdown","4d4349e3":"markdown","1d775f56":"markdown","02ac3dd3":"markdown","08d5df6e":"markdown"},"source":{"fe3e90bf":"import pandas as pd\nimport numpy as np\nimport sklearn as skl\nimport sklearn.datasets\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n","5e5ee26e":"iris_data = sklearn.datasets.load_iris()","97f2fc2c":"#let`s see what`s inside iris dataset\ndir(iris_data) #dir() returns the list of attributes in the iris_data","09dca162":"#let`s look at all the attributes\niris_data.data","51dbdd46":"iris_data.feature_names","0075a25f":"iris_data.filename","7ebe813f":"iris_data.target","42c3a3d3":"iris_data.target_names","933eabaf":"df = pd.DataFrame(iris_data.data,columns=iris_data.feature_names)\ndf.head()","d8cd4dc3":"df[\"target\"] = iris_data.target","2c04b5b6":"df.head()","7e992240":"df0 = df[df[\"target\"]==0] # setosa dataframe\ndf1 = df[df[\"target\"]==1] # versicolor dataframe\ndf2 = df[df[\"target\"]==2] # virginica dataframe","e001bbaf":"plt.xlabel(\"sepal length\")\nplt.ylabel(\"sepal width\")\nplt.scatter(df0[\"sepal length (cm)\"],df0[\"sepal width (cm)\"], color=\"blue\", marker=\"+\")\nplt.scatter(df1[\"sepal length (cm)\"],df1[\"sepal width (cm)\"],color=\"red\", marker=\".\")\nplt.scatter(df2[\"sepal length (cm)\"],df2[\"sepal width (cm)\"],color=\"green\", marker=\"d\")","750d6acb":"plt.xlabel(\"petal length\")\nplt.ylabel(\"petal width\")\nplt.scatter(df0[\"petal length (cm)\"],df0[\"petal width (cm)\"], color=\"blue\", marker=\"+\")\nplt.scatter(df1[\"petal length (cm)\"],df1[\"petal width (cm)\"],color=\"red\", marker=\".\")\nplt.scatter(df2[\"petal length (cm)\"],df2[\"petal width (cm)\"],color=\"green\", marker=\"d\")\n","109eb506":"X = df.drop(\"target\", axis=1)\nY = df[\"target\"]","7e580091":"# train_test_split returns 4 parameters x_train,x_test,y_train,y_test \n# and we are splitting the dataset as 80% for training and 20% for testing\n# and we are using random_state which means every time we run the model same parameters are used for train and test purpose\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(X,Y,test_size=0.2,random_state = 42) ","6ebdbf23":"#let`s see the shape of the x_train and x_test\nprint(\"shape of training set: \",x_train.shape)\nprint(\"shape of testing set: \",x_test.shape)","45f7f5e4":"from sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression()\nmodel.fit(x_train,y_train)\nmodel.score(x_test,y_test)","dad6d652":"from sklearn.svm import SVC\nmodel = SVC()\nmodel.fit(x_train,y_train)\nmodel.score(x_test,y_test)","51934468":"from sklearn.metrics import confusion_matrix\ny_predicted = model.predict(x_test)\ncm = confusion_matrix(y_test,y_predicted)\nsns.heatmap(cm,annot=True)","f760b76e":"before using Train-Test Split let`s seperate the features and target from the dataframe","ac885eb5":"1. Seperated all the classes 'setosa', 'versicolor', 'virginica'","7d21918d":"From the above graph we can see that the setosa and versicolor classes are easily seperable but virginica and versicolor are bit difficult to seperate. ","538e5ad9":"# Model Building","67d18c67":"# Load and Read the dataset","87f94a91":"# Train-Test Split","c1481dd8":"# Confusion Matrix","a5a1669a":"# Creating DataFrame","4d4349e3":"# Logistic Regression","1d775f56":"# Exploratory Data Analysis","02ac3dd3":"# Import Necessary Libraries","08d5df6e":"1. Load the iris dataset from sklearn.datasets\n2. Read all the attributes within the dataset\n    *   data : contains 4 columns \n    *   feature_names : contains the name of the features (Sepal Length, Sepal Width, Petal Length and Petal Width) \n    * filename : contains the path of the file     \n    * target : contains the classes from which the flower belongs 0,1,2 \n    * target_names : contains the name of the classes 'setosa', 'versicolor', 'virginica'"}}