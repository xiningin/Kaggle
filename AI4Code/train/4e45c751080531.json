{"cell_type":{"26c32bb2":"code","e774c29f":"code","bf5fd29e":"code","ec0714d3":"code","f0ad7adf":"code","b60f0d6b":"code","3a6510a2":"code","81358279":"code","422892a1":"code","de803c7a":"code","c2fbe117":"code","11509939":"code","264e5f7f":"code","aec04d5d":"code","2639a698":"code","33679fb9":"code","947b71fe":"code","7a0656d6":"code","1d78008d":"code","480c47db":"code","408104ef":"code","d9253c85":"code","dc7ecf29":"code","03551bd2":"markdown","a082cc38":"markdown","9e2f3591":"markdown","3ba0b847":"markdown","83d476b7":"markdown","2acd2882":"markdown","8089dc9d":"markdown","f65acd0d":"markdown","42aeba44":"markdown"},"source":{"26c32bb2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e774c29f":"import matplotlib.pyplot as plt","bf5fd29e":"df=pd.read_csv('\/kaggle\/input\/phd-stipends\/csv')\ndf","ec0714d3":"df.dtypes","f0ad7adf":"df.isna().sum()","b60f0d6b":"df1=df[pd.notnull(df['Overall Pay'])]\ndf1","3a6510a2":"df1['Overall Pay'].isna().any()","81358279":"df1['Overall Pay'] = df1['Overall Pay'].str.replace('$','').str.replace(',','').astype(float)","422892a1":"df1['Overall Pay']","de803c7a":"df1","c2fbe117":"df2=df1[pd.notnull(df1['University'])]\n","11509939":"h_u=df2.sort_values(by = ['Overall Pay'],ascending=False)\nh_u","264e5f7f":"h_u=h_u.head(10)\nh_u","aec04d5d":"plt.bar(h_u['University'],h_u['Overall Pay'],color='green')\nplt.xlabel('Universities')\nplt.ylabel('Overall Pay')\nplt.xticks(rotation=90)\nplt.title('Top 10 Highest Paying Universities')","2639a698":"plt.bar(h_u['Department'],h_u['Overall Pay'],color='yellow')\nplt.xlabel('Departments')\nplt.ylabel('Overall Pay')\nplt.xticks(rotation=90)\nplt.title('Top 10 Highest Paying Departments')","33679fb9":"l_u=df2.sort_values(by=['Overall Pay'])\nl_u=l_u.head(10)\nl_u","947b71fe":"l_u=l_u[['University','Department','Overall Pay']]\nl_u['University']","7a0656d6":"l_u['Department']","1d78008d":"h_u['University'].reset_index(drop=True,inplace=True)\nh_u['University'].name='Highest_Paying_Uni'\nh_u['University']","480c47db":"h_u['Department'].reset_index(drop=True,inplace=True)\nh_u['Department'].name='Highest_Paying_Dept'\nh_u['Department']","408104ef":"l_u['University'].reset_index(drop=True,inplace=True)\nl_u['University'].name='Lowest_Paying_Uni'\nl_u['University']","d9253c85":"l_u['Department'].reset_index(drop=True,inplace=True)\nl_u['Department'].name='Lowest_Paying_Dept'\nl_u['Department']","dc7ecf29":"final_df=pd.concat([h_u['University'],h_u['Department'],l_u['University'],l_u['Department']],axis=1)\nfinal_df","03551bd2":"# Top 10 Highest Paying Universities","a082cc38":"# Finding top 10 lowest paying universities","9e2f3591":"#  Removing  dollar and comma from the Overall Pay column and converting it into float type to do analysis","3ba0b847":"# Top 10 Lowest paying Departments","83d476b7":"# CONCLUSION","2acd2882":"# Removing all the rows where value of Overall Pay is null","8089dc9d":"# Checking whether there are any null values in our column of intereset- Overall Pay","f65acd0d":"#  Top 10 Lowest Paying University","42aeba44":"# Top 10 highest paying departments"}}