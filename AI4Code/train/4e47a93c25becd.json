{"cell_type":{"cd62bb41":"code","7c2aec53":"code","fdad2274":"code","0f697375":"code","35b385fd":"code","4fe9cfa3":"code","49624f24":"code","dad3f019":"code","05135c7f":"code","7aa6966e":"code","ce86e833":"code","de7ca0fc":"code","0cbfffd4":"code","e2a6c783":"code","0f8ecb1e":"code","9b76cbbc":"code","8fddd9d2":"code","b5ea2588":"code","535f0eea":"code","f260a414":"code","cd42995b":"code","235d1abb":"markdown","9d08d9ff":"markdown","60b65737":"markdown","47646c85":"markdown","0bf4a62f":"markdown","ab01f93d":"markdown","c52ee648":"markdown","52895b1c":"markdown","63d468a2":"markdown","20215da1":"markdown","503534c7":"markdown","fbf72f1f":"markdown","506b2048":"markdown","83fb3024":"markdown","f63a2c33":"markdown","7907cfb4":"markdown","15ff23ef":"markdown","35384038":"markdown","f9bee51e":"markdown"},"source":{"cd62bb41":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n\n        \ndf = pd.read_csv('\/kaggle\/input\/hr-analytics\/HR_comma_sep.csv')\ndf.head()\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7c2aec53":"df.shape","fdad2274":"df.isnull().values.any()","0f697375":"Employee_left = df[df['left'] == 1]\nEmployee_left.shape","35b385fd":"Employee_retained = df[df['left'] == 0]\nEmployee_retained.shape","4fe9cfa3":"df.groupby('left').mean()","49624f24":"import matplotlib.pyplot as plt\n\npd.crosstab(df['salary'], df['left'])","dad3f019":"pd.crosstab(df['salary'], df['left']).plot(kind='bar')\nplt.show()","05135c7f":"import seaborn as sns\n\nsns.barplot(x = 'left',\n            y = 'salary',\n            hue = 'salary',\n            data = df)","7aa6966e":"pd.crosstab(df.Department,df.left)","ce86e833":"pd.crosstab(df.Department,df.left).plot(kind='bar')\nplt.show()","de7ca0fc":"pd.crosstab(df.promotion_last_5years,df.left)","0cbfffd4":"pd.crosstab(df.promotion_last_5years,df.left).plot(kind='bar')\nplt.show()","e2a6c783":"pd.crosstab(df.satisfaction_level,df.left).mean()","0f8ecb1e":"Req_Col = df[['satisfaction_level','average_montly_hours','promotion_last_5years','salary']]\nReq_Col.head()","9b76cbbc":"dummy = pd.get_dummies(Req_Col.salary,prefix='salary')\n\n# Now we attach that dummy to the final df\n\nfinal = pd.concat([Req_Col,dummy],axis='columns')\n\n#Now we can drop the salary attribute as we've created dummies for them\nfinal.drop('salary',axis = 'columns',inplace = True)\nfinal.head(3)","8fddd9d2":"X = final\ny = df.left\nX.head()","b5ea2588":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X,y,train_size=0.40,random_state = 1)","535f0eea":"from sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression()\n\nmodel.fit(X_train, y_train)","f260a414":"model.predict(X_test)","cd42995b":"model.score(X_test,y_test)","235d1abb":"**From this we can plot the graph and do EDA so that we can know which attribute has impact on our result later.**\n","9d08d9ff":"# Investigating the attributes in dataset by dividing it into people who left and retained.","60b65737":"The employee who left the company had less satisfaction level whereas the one wich high is retained","47646c85":"# Shape of the dataset","0bf4a62f":"# How many employees left?\n1 indicates left employees and 0 indicates retained empolyees","ab01f93d":"# ** We got 78.5 percent accuracy**","c52ee648":"# **Now, our dataset is all set to perform operations.**\n\n **Here we'll be using logistic regression to classify**","52895b1c":"Now,we'll plot department against employee's position.","63d468a2":"Now,we'll plot promotion of the employee against employee's position.","20215da1":"# Now we're fitting the model","503534c7":"Now,we'll see employee's satisfaction level against employee's position.","fbf72f1f":"#3571 employees left and 11428 employees are retained","506b2048":"**Now,we create dummies for high,low and medium salary.**","83fb3024":"Here we're giving 40 percentage of our data to test and 60 to train ","f63a2c33":"First we'll plot salary against employee's position.\n","7907cfb4":"**Now,we'll choose our required attributes from dataset to work with.**","15ff23ef":"# Now,we're assigning x and y","35384038":"# Is there any missing value?\n","f9bee51e":"From this we can see that the employee who left the company were payed less"}}