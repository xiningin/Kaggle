{"cell_type":{"32d342fd":"code","41a500e0":"code","c8a9a135":"code","01af3720":"code","53f7b298":"code","4d992a7c":"code","7d2731f9":"code","fefd8d11":"code","126f01f1":"code","fc195b3f":"code","504160cb":"code","e73f3bbf":"code","e2221a66":"code","a87a761c":"code","712117f9":"code","e5c9d0da":"code","7d479647":"code","a08dcfbf":"markdown","4d5875f4":"markdown","a0bb5de5":"markdown","2542e15c":"markdown","10ab2710":"markdown","913aba36":"markdown","8cbf856c":"markdown","4073525e":"markdown"},"source":{"32d342fd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","41a500e0":"file_2017 = '..\/input\/world-happiness\/2017.csv'\ndata_2017 = pd.read_csv(file_2017)","c8a9a135":"data_2017.columns","01af3720":"data_2017.info()\n","53f7b298":"data_2017.head(10)","4d992a7c":"data_2017.corr()","7d2731f9":"#Corelation Map\nf,ax = plt.subplots(figsize=(15,15))\nsns.heatmap(data_2017.corr(),annot = True,linewidths = 5,fmt='.1f',ax=ax)\nplt.show()","fefd8d11":"#Column name edit \ndata_2017= data_2017.rename(columns={'Happiness.Rank': 'Happiness_Rank','Happiness.Score':'Happiness_Score','Whisker.high':'Whisker_high','Whisker.low':'Whisker_low','Economy..GDP.per.Capita.':'Economy_GDP_per_Capita','Health..Life.Expectancy.':'Health_Life_Expectancy','Trust..Government.Corruption.':'Trust_Government_Corruption','Dystopia.Residual':'Dystopia_Residual'})\n","126f01f1":"print(data_2017.Country.unique())","fc195b3f":"plt.plot(data_2017.Happiness_Score,data_2017.Freedom,color='b',label='Happiness_Score',linewidth=1.3,alpha=0.7,linestyle=':')\nplt.xlabel('Happiness Score')\nplt.ylabel('Freedom Score')\nplt.title('Happiness-Freedom-2017')","504160cb":"data_2017.plot(kind='scatter',x='Happiness_Score',y='Trust_Government_Corruption',alpha=0.5,color='r')\nplt.xlabel('Happiness_Score')\nplt.ylabel('Trust_Government_Corruption')\nplt.title('Happiness Score - Trust Government Corruption - 2017')","e73f3bbf":"\ndata_2017.Generosity.plot(kind='hist',bins=50,figsize = (15,15))\nplt.show()","e2221a66":"data_2017.describe()","a87a761c":"\ngood_score = data_2017['Happiness_Score'] > 5.354019\ndata_2017[good_score]\n","712117f9":"data_2017[np.logical_and(data_2017['Happiness_Score'] > 5.354019 ,data_2017['Freedom'] < 0.408786)]","e5c9d0da":"x = data_2017.iloc[:,-1]\nprint(x)","7d479647":"y = data_2017.iloc[0:51,8:9]\nprint(y)","a08dcfbf":"Let's examine the relationship between **Freedom** and **Happiness Score**","4d5875f4":"**We'll edit the column name because it's not appropriate.**","a0bb5de5":"**Let's read our data now.**","2542e15c":"Generosity with histogram graphic.","10ab2710":"Let's see countries...","913aba36":"**Let's see some information about the data.Columns etc.**","8cbf856c":"Let's examine the relationship between **Trust Government Corruption** and **Happiness Score**.","4073525e":"Let's put some conditions.."}}