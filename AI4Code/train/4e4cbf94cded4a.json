{"cell_type":{"7ce5794b":"code","e3b69fae":"code","033a2ec2":"code","aca6be8a":"code","1f2f89b0":"code","51f60326":"code","c5405f98":"code","42c2e37f":"code","b5af9365":"code","5497beda":"code","5d74e408":"code","b3227f51":"code","c484fd80":"code","90219efd":"code","ab071b9a":"code","9dc25b50":"code","f16b1fc3":"code","b5039554":"code","7f92153f":"code","8481811d":"code","1de94976":"code","71275f05":"code","26b1d155":"code","436f9979":"code","592a791f":"code","ccae305e":"code","ca88824b":"code","a0e876fa":"code","97ebe535":"code","4bcd7ab0":"code","c9a41f0f":"code","889a37b4":"code","c28287f0":"code","fc1fd466":"code","8a0559f9":"code","a080e1f5":"code","cd31c771":"markdown","3ba5e7cc":"markdown","0a241e99":"markdown","a77ac0c4":"markdown","71313786":"markdown","442a7a88":"markdown","21bb6ee1":"markdown","4515252f":"markdown","4584442e":"markdown","247a50df":"markdown","f289d110":"markdown","1434639d":"markdown","80aad2a8":"markdown","731d0923":"markdown","05b44abc":"markdown","984f1026":"markdown","94272b7d":"markdown","6a4c4db5":"markdown","16bff698":"markdown","a2266c3a":"markdown","9f8f3885":"markdown","d2009cf1":"markdown","9f4cc90a":"markdown","456db62f":"markdown","4c7ae636":"markdown","b0c618d0":"markdown","ccf836bb":"markdown","758c7228":"markdown","f1c2c32a":"markdown","16896409":"markdown"},"source":{"7ce5794b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os","e3b69fae":"import folium","033a2ec2":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error \nfrom sklearn.linear_model import Lasso, LinearRegression, Ridge, RANSACRegressor, SGDRegressor\nfrom sklearn.ensemble import AdaBoostRegressor\nfrom sklearn.svm import SVR","aca6be8a":"df = pd.read_csv('..\/input\/housing.csv')\ndf.head()","1f2f89b0":"df.shape","51f60326":"df.info()","c5405f98":"df.describe()","42c2e37f":"df.ocean_proximity.value_counts()","b5af9365":"df.duplicated().sum()","5497beda":"df.isnull().sum()","5d74e408":"print(f'percentage of missing values: {df.total_bedrooms.isnull().sum() \/ df.shape[0] * 100 :.2f}%')","b3227f51":"df = df.fillna(df.median())\ndf.isnull().sum()","c484fd80":"sns.scatterplot(df.longitude, df.latitude)","90219efd":"sns.relplot(x=\"longitude\", y=\"latitude\", hue=\"median_house_value\", size=\"population\", alpha=.5,\\\n            sizes=(50, 700), data=df, height=8)\nplt.show()","ab071b9a":"# Create a map with folium centered at the mean latitude and longitude\ncali_map = folium.Map(location=[35.6, -117], zoom_start=6)\n\n# Display the map\ndisplay(cali_map)","9dc25b50":"# Add markers for each rows\nfor i in range(df.shape[0]):\n    folium.Marker((float(df.iloc[i, 1]), float(df.iloc[i, 0]))).add_to(cali_map) \n    \n# Display the map\ndisplay(cali_map)","f16b1fc3":"plt.figure(figsize=(10, 4))\nsns.distplot(df.median_house_value)\nplt.show()","b5039554":"df.ocean_proximity.unique()","7f92153f":"plt.figure(figsize=(10, 4))\nfor prox in df.ocean_proximity.unique():\n    sns.kdeplot(data=df[df.ocean_proximity == prox].median_house_value)\n    plt.legend(prox)\nplt.show()","8481811d":"sns.pairplot(df)\nplt.show()","1de94976":"df.hist(figsize=(8, 8))\nplt.show()","71275f05":"corr = df.corr()\ncorr","26b1d155":"# Generate a mask for the upper triangle\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\n\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(8, 6))\n\n# Generate a custom diverging colormap\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5}, annot=True)","436f9979":"df = pd.get_dummies(data=df, columns=['ocean_proximity'], drop_first=False)\ndf.head()","592a791f":"feat_removed = ['median_house_value']\n\n# removed \n#['longitude', 'latitude', 'housing_median_age', 'total_rooms', 'total_bedrooms', 'population', 'households', 'median_income',\n#'median_house_value', 'ocean_proximity']","ccae305e":"y = df.median_house_value\nX = df.drop(columns=feat_removed)\nX.shape, y.shape","ca88824b":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)","a0e876fa":"def calculate_rmse(model, model_name):\n    model.fit(X_train, y_train)\n    y_pred, y_pred_train = model.predict(X_test), model.predict(X_train)\n    rmse_test, rmse_train = np.sqrt(mean_squared_error(y_test, y_pred)), np.sqrt(mean_squared_error(y_train, y_pred_train))\n    print(model_name, f' RMSE on train: {rmse_train:.0f}, on test: {rmse_test:.0f}')\n    return rmse_test","97ebe535":"lr = LinearRegression()\nlr_err = calculate_rmse(lr, 'Linear Reg')","4bcd7ab0":"ra = RANSACRegressor()\nra_err = calculate_rmse(ra, 'RANSAC Reg')","c9a41f0f":"la = Lasso()\nla_err = calculate_rmse(la, 'Lasso Reg')","889a37b4":"sg = SGDRegressor()\nsg_err = calculate_rmse(sg, 'SGD Reg')","c28287f0":"ri = SGDRegressor()\nri_err = calculate_rmse(ri, 'Ridge')","fc1fd466":"ad = AdaBoostRegressor()\nad_err = calculate_rmse(ad, 'AdaBoostRegressor')","8a0559f9":"sv = SVR()\nsv_err = calculate_rmse(sv, 'SVR')","a080e1f5":"df_score = pd.DataFrame({'Model':['Linear Reg', 'RANSAC Reg', 'Lasso Reg', 'AdaBoost', 'SVR'], \n                         'RMSE':[lr_err, ra_err, la_err, ad_err, sv_err]})\nax = df_score.plot.barh(y='RMSE', x='Model')","cd31c771":"## SGD Regressor","3ba5e7cc":"## Lasso","0a241e99":"## RANSAC Regressor","a77ac0c4":"## Cleaning data","71313786":"# California Housing Prices\nMedian house prices for California districts derived from the 1990 census.","442a7a88":"# Exploratory Data Analysis","21bb6ee1":"## Target analysis","4515252f":"## Linear Regression","4584442e":"---","247a50df":"## Dealing with geospatial infos\nVisualization of the data in a scatter plot in a \"geographic way\"","f289d110":"* lat and log are highly positively correlated\n* total_bedrooms, population and householdsare highly positively correlated too\n* median_income and median_house_value are also positively correlated\n\nwhich make sense.","1434639d":"# Models training and predictions","80aad2a8":"Same plot but this time with a varying size of the data points based on `population` variable and a different color depending of the real estate price (`median_house_value`)","731d0923":"## Other analysis","05b44abc":"## AdaBoostRegressor","984f1026":"## Correlations","94272b7d":"___","6a4c4db5":"There are few missing value int the 'total_bedrooms' column. Now let's see the basic stats for the numerical columns:","16bff698":"<img src=\".\/input\/fig.jpg\" style=\"height:400px\">","a2266c3a":"## Metric RMSE root mean squared error","9f8f3885":"Lasso and the Linear Reg are the winners ! Surprisingly the RSME is a little lower for the best models when we keep features such as lat\/long and 'total_bedrooms', 'population'.","d2009cf1":"Variations depending on the proximity with ocean","9f4cc90a":"## Results comparison","456db62f":"## Ridge","4c7ae636":"## Content\nThe data pertains to the houses found in a given California district and some summary stats about them based on the 1990 census data. Be warned the data aren't cleaned so there are some preprocessing steps required! The columns are as follows, their names are pretty self explanitory:\n* longitude\n* latitude\n* housing_median_age\n* total_rooms\n* total_bedrooms\n* population\n* households\n* median_income\n* median_house_value\n* ocean_proximity","b0c618d0":"## SVR","ccf836bb":"## Context\nThis is the dataset used in the second chapter of Aur\u00e9lien G\u00e9ron's recent book 'Hands-On Machine learning with Scikit-Learn and TensorFlow'. It serves as an excellent introduction to implementing machine learning algorithms because it requires rudimentary data cleaning, has an easily understandable list of variables and sits at an optimal size between being to toyish and too cumbersome.\n\nThe data contains information from the 1990 California census. So although it may not help you with predicting current housing prices like the Zillow Zestimate dataset, it does provide an accessible introductory dataset for teaching people about the basics of machine learning.\n\n\n## Acknowledgements\nPlease refer to the [Kaggle challenge web page](https:\/\/www.kaggle.com\/camnugent\/california-housing-prices)\n\n## Inspiration\npredict a real estate price","758c7228":"Root Mean Square Error (RMSE) is the standard deviation of the residuals (prediction errors). Residuals are a measure of how far from the regression line data points are; RMSE is a measure of how spread out these residuals are. In other words, it tells you how concentrated the data is around the line of best fit. Root mean square error is commonly used in climatology, forecasting, and regression analysis to verify experimental results.","f1c2c32a":"Label encoding of categorical feature (ocean proximity)","16896409":"## Data preparation"}}