{"cell_type":{"2ba02cb2":"code","1f4c4f13":"code","cf3a9f78":"code","4b6661ec":"code","90ee172c":"code","3cb9285b":"code","7e752d8b":"code","ea4595db":"code","66773f4c":"code","50d07353":"markdown","d81f3fa3":"markdown","005e8149":"markdown","b4add622":"markdown","0395d242":"markdown"},"source":{"2ba02cb2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1f4c4f13":"!pip install -U turicreate","cf3a9f78":"import turicreate as tc","4b6661ec":"dir = \"\/kaggle\/input\/animal-crossing-new-horizons-nookplaza-dataset\/\"\nvillagers = pd.read_csv(dir+'villagers.csv')","90ee172c":"pref = []\nfor index, row in villagers.iterrows():\n    for item in row['Furniture List'].split(';'):\n        pref.append({\"user_id\": row['Name'],\"item_id\": item})\ndf = pd.DataFrame(pref)","3cb9285b":"fields = ['user_id','Species',\n 'Gender',\n 'Personality',\n 'Hobby',\n 'Birthday',\n 'Catchphrase',\n 'Favorite Song',\n 'Style 1',\n 'Style 2',\n 'Color 1',\n 'Color 2']\nvillagers['user_id'] = villagers['Name']\nuser_data = tc.SFrame(villagers[fields])","7e752d8b":"item_data = tc.SFrame.read_csv(dir + 'housewares.csv', header=True, delimiter=',')\nitem_data = item_data.rename({'Internal ID': 'item_id'})\nitem_data = item_data.dropna()","ea4595db":"data =  tc.SFrame(df)\nm = tc.item_similarity_recommender.create(data,user_data=user_data,item_data=item_data)\n\nrecommendations = m.recommend()","66773f4c":"m.recommend(users=['Anchovy'])","50d07353":"The item 4144 (dinner neon clock) has the highest score for the villager - Anchovy.  That become the recommendation.","d81f3fa3":"Build a user preference table from the villagers.csv.  Assume that all furnitures in the columns \"furiture list\" are the villager's existing preference.  Use this user-item table as the input for the standard recommandation system.","005e8149":"Using recommendation system in the package [Turi Create](https:\/\/apple.github.io\/turicreate\/docs\/userguide\/recommender\/using-trained-models.html) to create recommendation for the user-item table we built previously.","b4add622":"Submit side information for each user.","0395d242":"Submit side information for each furniture (item)."}}