{"cell_type":{"a4858434":"code","f8462cb7":"code","457a8d73":"code","e8b5a67b":"code","fdbba7bb":"code","8670596a":"code","61852c65":"code","6a97c3e4":"code","cf4c55ed":"code","e3ada81c":"code","69d457c5":"code","ad020397":"code","1346aafa":"code","8f40d46d":"code","1c4cb913":"code","b1778176":"code","2de4b476":"code","dc475674":"code","4fa4e051":"code","fcd26be1":"code","bbf0afcc":"code","963e1128":"code","4703f8cf":"code","df468c05":"code","8941c8d5":"markdown","74e3c0cf":"markdown","0d12f4f5":"markdown","e618f0c3":"markdown","3bf9ee1d":"markdown","04298ef7":"markdown","f3a0cf8e":"markdown","6a2fcc44":"markdown"},"source":{"a4858434":"# warnings\u3092\u7121\u8996\u3059\u308b\nimport warnings\nwarnings.filterwarnings('ignore')","f8462cb7":"import numpy as np\nimport pandas as pd","457a8d73":"df_train = pd.read_csv('..\/input\/train.csv')\ndf_test = pd.read_csv('..\/input\/test.csv')\n#df_train = pd.read_csv(\".\/titanic_csv\/train.csv\")\n#df_test = pd.read_csv(\".\/titanic_csv\/test.csv\")","e8b5a67b":"import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns","fdbba7bb":"df_train['Age'].mean() # \u5e74\u9f62\u306e\u5e73\u5747\u5024\u3092\u7b97\u51fa","8670596a":"# 'Age'\u306e\u6b20\u640d\u5024\u306b30\u3092\u4ee3\u5165\u3059\u308b\u3002\ndf_train['Age'] = df_train['Age'].fillna(30)\ndf_test['Age'] = df_test['Age'].fillna(30)","61852c65":"# df_train\u3067Embarked\u304c\u6b20\u640d\u306e\u30c7\u30fc\u30bf\u3092\u8868\u793a\ndf_train[df_train['Embarked'].isnull()]","6a97c3e4":"df_train[df_train['Ticket'] == '113572'] ","cf4c55ed":"df_test[df_test['Ticket'] == '113572']","e3ada81c":"# \u6b20\u640d\u5024\u3092'C'\u3067\u57cb\u3081\u3001\u8868\u793a\u3057\u3066\u78ba\u8a8d\ndf_train.loc[df_train['PassengerId'].isin([62, 830]), 'Embarked'] = 'C'\ndf_train.loc[df_train['PassengerId'].isin([62, 830])]","69d457c5":"# Pclass\u3054\u3068\u306bFare\u306e\u5e73\u5747\u5024\u3092\u8868\u793a\ndf_train[['Pclass','Fare']].groupby('Pclass').mean()","ad020397":"# \u6b20\u640d\u5024\u304c\u3042\u308b\u30ec\u30b3\u30fc\u30c9\u3092\u78ba\u8a8d\ndf_test[df_test['Fare'].isnull()]","1346aafa":"df_test.loc[df_test['PassengerId'] == 1044, 'Fare'] = 13.675550\ndf_test[df_test['PassengerId'] == 1044]","8f40d46d":"print('--df_train\u306e\u6b20\u640d\u5024--')\nprint(df_train.isnull().sum()) # df_train\u306e\u6b20\u640d\u5024\u3092\u8868\u793a\nprint('-'*10 )\nprint('--df_test\u306e\u6b20\u640d\u5024--')\nprint(df_test.isnull().sum()) # df_test\u306e\u6b20\u640d\u5024\u3092\u8868\u793a","1c4cb913":"genders = {'male': 0, 'female': 1} # \u8f9e\u66f8\u3092\u4f5c\u6210\u2028\n# Sex\u3092genders\u3092\u7528\u3044\u3066\u5909\u63db\ndf_train['Sex'] = df_train['Sex'].map(genders)\ndf_test['Sex'] = df_test['Sex'].map(genders)","b1778176":"# \u30c0\u30df\u30fc\u5909\u6570\u5316\ndf_train = pd.get_dummies(df_train, columns=['Embarked'])\ndf_test = pd.get_dummies(df_test, columns = ['Embarked'])","2de4b476":"df_train.head()","dc475674":"df_train.drop(['Name', 'Cabin', 'Ticket'], axis=1, inplace=True)\ndf_test.drop(['Name', 'Cabin', 'Ticket'], axis=1, inplace=True)","4fa4e051":"df_train.head()","fcd26be1":"X_train = df_train.drop([\"PassengerId\", \"Survived\"], axis=1) # \u4e0d\u8981\u306a\u5217\u3092\u524a\u9664\nY_train = df_train['Survived'] # Y_train\u306f\u3001df_train\u306eSurvived\u5217\nX_test  = df_test.drop('PassengerId', axis=1).copy()","bbf0afcc":"from sklearn.ensemble import RandomForestClassifier\n\n# \u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\nforest = RandomForestClassifier(random_state=1)\n\n# X_train\u304b\u3089Y_train\u3092\u4e88\u6e2c\u3059\u308b\u3088\u3046\u306b\u5b66\u7fd2\nforest.fit(X_train,Y_train)\n\n# \u6b63\u89e3\u7387\u3092\u8868\u793a\nacc_log = round(forest.score(X_train, Y_train) * 100, 2)\nprint(round(acc_log,2,), '%')","963e1128":"from sklearn.model_selection import StratifiedKFold\nfrom sklearn.metrics import accuracy_score","4703f8cf":"# 3\u5206\u5272\u4ea4\u5dee\u691c\u8a3c\u3092\u6307\u5b9a\u3057\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\nskf = StratifiedKFold(n_splits=3)\n\n# skf.split(X_train.Ytrain)\u3067\u3001X_train\u3068Y_train\u30923\u5206\u5272\u3057\u3001\u4ea4\u5dee\u691c\u8a3c\u3092\u3059\u308b\nfor train_index, test_index in skf.split(X_train, Y_train):\n    X_cv_train = X_train.iloc[train_index]\n    X_cv_test = X_train.iloc[test_index]\n    y_cv_train = Y_train.iloc[train_index]\n    y_cv_test = Y_train.iloc[test_index]\n    forest = RandomForestClassifier(random_state=1)\n    forest.fit(X_cv_train, y_cv_train) # \u5b66\u7fd2\n    predictions = forest.predict(X_cv_test) # \u4e88\u6e2c\n    # acuuracy\u3092\u8868\u793a\n    print(round(accuracy_score(y_cv_test,forest.predict(X_cv_test))*100,2))","df468c05":"# \u5b66\u7fd2\u3068\u4e88\u6e2c\u3092\u884c\u3046\nforest = RandomForestClassifier(random_state=1)\nforest.fit(X_train, Y_train)\nY_prediction = forest.predict(X_test)\nsubmission = pd.DataFrame({\n        'PassengerId': df_test['PassengerId'],\n        'Survived': Y_prediction\n    })\nsubmission.to_csv('submission.csv', index=False)\n","8941c8d5":"## 5.1.2.2 Embarked (\u4e57\u8239\u3057\u305f\u6e2f)\u306e\u5909\u63db","74e3c0cf":"# 5.1.1 \u6b20\u640d\u5024\u306e\u51e6\u7406","0d12f4f5":"## 5.1.1.3 \u904b\u8cc3 (Fare)\u306e\u88dc\u5b8c","e618f0c3":"# 5.1.2 \u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3078\u306e\u5909\u63db","3bf9ee1d":"## 5.1.2.1 Sex (\u6027\u5225)\u306e\u5909\u63db","04298ef7":"# 5.2\u8b58\u5225\u5668\u306b\u5b66\u7fd2\u3055\u305b\u3066\u4e88\u6e2c","f3a0cf8e":"## 5.1.1.1 \u5e74\u9f62 (Age)\u306e\u88dc\u5b8c","6a2fcc44":"# 5.1.3 \u4e0d\u8981\u306a\u5217\u306e\u524a\u9664"}}