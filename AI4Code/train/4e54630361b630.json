{"cell_type":{"92bc1d6e":"code","b1c39ab7":"code","39348180":"code","4bd7bb7d":"code","e2ab8127":"code","3eb956dd":"code","59f8f819":"code","b7bf1ff0":"code","c5fba172":"code","40e509fb":"code","a4902f80":"code","b7f03b41":"code","3b34ec87":"code","5fbb56c8":"code","c62ac403":"code","8b264865":"code","ca0705e1":"code","744cb2c8":"code","5e72c899":"code","637d76d2":"code","81187783":"code","ab5d26b7":"code","bd899c4d":"code","ab33e100":"code","fa278333":"code","88dd73df":"code","b8d93a06":"code","40297766":"code","0aca4863":"code","24c26da6":"code","d1a6075f":"markdown","ede4dc22":"markdown","f230e9d1":"markdown","4ffeba62":"markdown","17ffe940":"markdown","f35fac19":"markdown","ecfe2d92":"markdown","fe9e54e5":"markdown","c440c0f5":"markdown","19df178d":"markdown"},"source":{"92bc1d6e":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom plotly.offline import iplot\nimport plotly.graph_objects as go\nsns.set(rc={'figure.figsize':(10,6)})\nsns.set(font_scale=1.3)\n\nimport string \nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.ensemble import GradientBoostingClassifier, AdaBoostClassifier, ExtraTreesClassifier\nfrom sklearn.ensemble import BaggingClassifier, RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier, ExtraTreeClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.model_selection import ShuffleSplit, GridSearchCV, cross_validate\nfrom sklearn.metrics import accuracy_score, confusion_matrix\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","b1c39ab7":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')\nsub = pd.read_csv('..\/input\/titanic\/gender_submission.csv')","39348180":"train.head()","4bd7bb7d":"train.info()","e2ab8127":"train.describe()","3eb956dd":"(train.isnull().sum()\/len(train))*100","59f8f819":"train.drop(columns=['Cabin'], inplace=True)","b7bf1ff0":"train['Age'].fillna(train['Age'].median(), inplace=True)\ntrain['Embarked'].fillna(method='ffill', inplace=True)","c5fba172":"(train.isnull().sum()\/len(train))*100","40e509fb":"values=train[\"Survived\"].value_counts().values\nfig = go.Figure(data=[go.Pie(labels=['Not Survived','Survived'],values=values,textinfo='label+percent')])\nfig.update_layout(title={'text': \"Titanic Survived\",'y':0.9,'x':0.45,'xanchor': 'center','yanchor': 'top'},\n                  font=dict(size=18, color='black', family=\"Courier New, monospace\"))","a4902f80":"values=train[\"Pclass\"].value_counts().values\nfig = go.Figure(data=[go.Pie(labels=['3\u00ba Class','2\u00b0 Class','1\u00b0 Class'],values=values,textinfo='label+percent')])\nfig.update_layout(title={'text': \"Class of Ship\",'y':0.9,'x':0.45,'xanchor': 'center','yanchor': 'top'},\n                  font=dict(size=18, color='black', family=\"Courier New, monospace\"))\nfig.show()","b7f03b41":"values=train[\"Sex\"].value_counts().values\nfig = go.Figure(data=[go.Pie(labels=['Male','Female'],values=values,textinfo='label+percent')])\nfig.update_layout(title={'text': \"Sex\",'y':0.9,'x':0.47,'xanchor': 'center','yanchor': 'top'},\n                  font=dict(size=18, color='black', family=\"Courier New, monospace\"))\nfig.show()","3b34ec87":"survived = train[train['Survived']==1]\nvalues=survived[\"Sex\"].value_counts().values\nfig = go.Figure(data=[go.Pie(labels=['Male','Female'],values=values,textinfo='label+percent')])\nfig.update_layout(title={'text': \"Survivor by Sex\",'y':0.9,'x':0.47,'xanchor': 'center','yanchor': 'top'},\n                  font=dict(size=18, color='black', family=\"Courier New, monospace\"))\nfig.show()","5fbb56c8":"g = sns.FacetGrid(train, col='Survived', height=6)\ng.map(plt.hist, 'Age', bins=20);","c62ac403":"g = sns.FacetGrid(train, col='Survived', row='Pclass', size=2.8, aspect=1.6)\ng.map(plt.hist, 'Age', bins=20);","8b264865":"g = sns.FacetGrid(train, row='Embarked', size=2.4, aspect=2.6)\ng.map(sns.pointplot, 'Pclass', 'Survived', 'Sex', palette='deep')\ng.add_legend();","ca0705e1":"g = sns.FacetGrid(train, row='Embarked', col='Survived', size=2.2, aspect=2.4)\ng.map(sns.barplot, 'Sex', 'Fare')\ng.add_legend();","744cb2c8":"corr = train.corr()\nplt.figure(figsize=(16,8))\nsns.heatmap(data=corr, annot=True);","5e72c899":"def encoder(data):\n    le = LabelEncoder()\n    for col in data.select_dtypes('object'):\n        data[col] = le.fit_transform(data[col])\n    return(data)","637d76d2":"train['Title'] = train['Name'].str.extract(' ([A-Za-z]+)\\.', expand=False)\ntrain['Title'] = train['Title'].replace(['Lady', 'Countess','Capt', 'Col', \n                                             'Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer', 'Dona'], 'Rare')\ntrain['Title'] = train['Title'].replace('Mlle', 'Miss')\ntrain['Title'] = train['Title'].replace('Ms', 'Miss')\ntrain['Title'] = train['Title'].replace('Mme', 'Mrs')","81187783":"train.loc[ train['Age'] <= 16, 'Age'] = 0\ntrain.loc[(train['Age'] > 16) & (train['Age'] <= 32), 'Age'] = 1\ntrain.loc[(train['Age'] > 32) & (train['Age'] <= 48), 'Age'] = 2\ntrain.loc[(train['Age'] > 48) & (train['Age'] <= 64), 'Age'] = 3\ntrain.loc[ train['Age'] > 64, 'Age']","ab5d26b7":"train.head()","bd899c4d":"train.drop(columns=['Name','PassengerId','Ticket'], inplace=True)","ab33e100":"train = encoder(train)\ntrain.head()","fa278333":"x = train.drop(['Survived'], axis=1)\ny = train.iloc[:,0]\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, stratify=y)","88dd73df":"colunas = ['Modelo','Acuracy']\nresultado = pd.DataFrame(columns=colunas)","b8d93a06":"models = []\n\nmodels.append(('GradientBoostingClassifier', GradientBoostingClassifier()))\nmodels.append(('AdaBoostClassifier', AdaBoostClassifier()))\nmodels.append(('ExtraTreesClassifier', ExtraTreesClassifier()))\nmodels.append(('BaggingClassifier', BaggingClassifier()))\nmodels.append(('RandomForestClassifier', RandomForestClassifier()))\nmodels.append(('DecisionTreeClassifier', DecisionTreeClassifier()))\nmodels.append(('ExtraTreeClassifier', ExtraTreeClassifier()))\nmodels.append((\"XGBClassifier\", XGBClassifier()))\n\nfor name, model in models:\n    model.fit(x_train,y_train)\n    y_pred=model.predict(x_test)\n    acc = accuracy_score(y_test, y_pred)\n    resultado = resultado.append(pd.DataFrame([[name, acc]], columns=colunas))\n    \nresultado.sort_values(by=['Acuracy'], ascending=False, inplace=True)\nresultado","40297766":"test.drop(columns=['Cabin'], inplace=True)\n\ntest['Age'].fillna(test['Age'].median(), inplace=True)\ntest['Fare'].fillna(test['Fare'].median(), inplace=True)\n\ntest['Title'] = test['Name'].str.extract(' ([A-Za-z]+)\\.', expand=False)\ntest['Title'] = test['Title'].replace(['Lady', 'Countess','Capt', 'Col', \n                                             'Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer', 'Dona'], 'Rare')\ntest['Title'] = test['Title'].replace('Mlle', 'Miss')\ntest['Title'] = test['Title'].replace('Ms', 'Miss')\ntest['Title'] = test['Title'].replace('Mme', 'Mrs')\n\ntest.loc[ test['Age'] <= 16, 'Age'] = 0\ntest.loc[(test['Age'] > 16) & (train['Age'] <= 32), 'Age'] = 1\ntest.loc[(test['Age'] > 32) & (train['Age'] <= 48), 'Age'] = 2\ntest.loc[(test['Age'] > 48) & (train['Age'] <= 64), 'Age'] = 3\ntest.loc[ test['Age'] > 64, 'Age']\n\ntest = encoder(test)\n\ntest.drop(columns=['Name','PassengerId','Ticket'], inplace=True)","0aca4863":"model = GradientBoostingClassifier()\nmodel.fit(x_train,y_train)\npred = model.predict(x_test)\nacc = accuracy_score(y_test, pred)\nacc","24c26da6":"sub['Survived'] =  model.predict(test)\nsub.to_csv('submission.csv', index=False)","d1a6075f":"<div style=\"color:black; background-color:#f5f7b0; border-radius:10px; padding:20px;\">\n<b>Observation<\/b><br\/>\n- A class was created with the passengers title<br\/>\n- A class was created with age<br\/>\n- Some columns have been deleted<br\/>\n- The object type of the columns has been transformed<br\/>\n<\/div>","ede4dc22":"# <p style=\"background-color:#80ccff; font-family:newtimeroman; font-size:150%; text-align:center; border-radius:  80px 5px; padding-top:8px; padding-bottom:8px;\">Model<\/p>","f230e9d1":"<div style=\"color:black; background-color:#f5f7b0; border-radius:10px; padding:20px;\">\n<b>Observation<\/b><br\/>\nThe Age columns has 19.86% of missing values theses values have been replaced by the average.<br\/>\nThe Cabin columns has 77.10% of missing values. There are many missing values, so I deleted it.\n<\/div>","4ffeba62":"# <p style=\"background-color:#80ccff; font-family:newtimeroman; font-size:150%; text-align:center; border-radius:  80px 5px; padding-top:8px; padding-bottom:8px;\">Preprocessing<\/p>","17ffe940":"<div style=\"color:black; background-color:#f5f7b0; border-radius:10px; padding:20px;\">\n<b>Observation<\/b><br\/>\n- 61.6% dit not survive<br\/>\n- 55.1% was 3rd class<br\/>\n- 64.8% were male<br\/>\n- The median age of the survivors was 29 years<br\/>\n- The majority of the survivors were in the 3rd class (the 3rd class was the majority on the ship<br\/>\n<\/div>","f35fac19":"# <p style=\"background-color:#80ccff; font-family:newtimeroman; font-size:150%; text-align:center; border-radius:  80px 5px; padding-top:8px; padding-bottom:8px;\">Feature Engineering<\/p>","ecfe2d92":"# <p style=\"background-color:#80ccff; font-family:newtimeroman; font-size:150%; text-align:center; border-radius:  80px 5px; padding-top:8px; padding-bottom:8px;\">Import<\/p>","fe9e54e5":"# Missing Value","c440c0f5":"# <p style=\"background-color:#80ccff; font-family:newtimeroman; font-size:150%; text-align:center; border-radius:  80px 5px; padding-top:8px; padding-bottom:8px;\">Input<\/p>","19df178d":"# <p style=\"background-color:#80ccff; font-family:newtimeroman; font-size:150%; text-align:center; border-radius:  80px 5px; padding-top:8px; padding-bottom:8px;\">Plots<\/p>"}}