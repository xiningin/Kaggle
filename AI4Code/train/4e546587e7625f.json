{"cell_type":{"260fa0bc":"code","e244cb86":"code","37fd1c77":"code","d0a00aa4":"code","2f3b3826":"code","a0438b2d":"code","23c48b86":"code","3d239022":"code","0f2cd762":"code","46577788":"code","f678acea":"code","3093806e":"code","fa95bde6":"code","d83b829e":"code","c899eef3":"markdown","11de8a48":"markdown","2363c0f6":"markdown","8ee62706":"markdown","702124ce":"markdown","cfbff4c2":"markdown","45a042e1":"markdown","ff651317":"markdown","c71a6441":"markdown","ed53ef9a":"markdown","4de1891a":"markdown","9cb49e0d":"markdown","4c05b34d":"markdown","db72f969":"markdown","bb1a8830":"markdown","6a35a81d":"markdown","7527d73e":"markdown","ef2edda1":"markdown","95a2a9d2":"markdown","cd11f2ff":"markdown","97b9c342":"markdown"},"source":{"260fa0bc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e244cb86":"import matplotlib.pyplot as plt","37fd1c77":"games = pd.read_csv(\"..\/input\/nfl-big-data-bowl-2021\/games.csv\")\ngames","d0a00aa4":"games.info()","2f3b3826":"# let's take a sample date to gain an inference\nsample_date = \"09\/09\/2018\"\ngames[games['gameDate']==sample_date]","a0438b2d":"per_date_games = games['gameDate'].value_counts().reset_index()\nper_date_games.columns = ['date', 'count']\n\n\nplt.rcdefaults()\nfig, ax = plt.subplots(figsize=(16, 10))\n\n\nax.barh(np.arange(len(per_date_games)), per_date_games['count'].values, align='center')\nax.set_yticks(np.arange(len(per_date_games)))\nax.set_yticklabels(per_date_games['date'].tolist())\nax.invert_yaxis()  # labels read top-to-bottom\nax.set_xlabel('Games count --->')\nax.set_title('Number of games on every date --->')\n\nplt.show()","23c48b86":"plt.figure(figsize=(16, 8))\nwegdes, texts, autotexts = plt.pie(per_date_games[\"count\"], \n        startangle=45, \n        wedgeprops={\"linewidth\":1, \"edgecolor\":\"black\"}, \n        autopct='%1.f%%', \n        shadow=True,\n        textprops= dict(color=\"black\"))\nplt.legend(wegdes, per_date_games[\"date\"],\n          title=\"song type\",\n          loc=\"center\",\n          bbox_to_anchor=(1, 0, 0, 0))\nplt.setp(autotexts, size=14, weight=\"bold\")\nplt.title(\"Song types distribution for True positives\")\nplt.show()","3d239022":"per_time_games = games['gameTimeEastern'].value_counts().reset_index()\nper_time_games.columns = ['Time', 'count']\n\n\nplt.rcdefaults()\nfig, ax = plt.subplots(figsize=(16, 10))\n\n\nax.barh(np.arange(len(per_time_games)), per_time_games['count'].values, align='center')\nax.set_yticks(np.arange(len(per_time_games)))\nax.set_yticklabels(per_time_games['Time'].tolist())\nax.invert_yaxis()  # labels read top-to-bottom\nax.set_xlabel('Times count --->')\nax.set_title('Number of games on every duration\/Time --->')\n\nplt.show()","0f2cd762":"players = pd.read_csv(\"..\/input\/nfl-big-data-bowl-2021\/players.csv\")\nplayers","46577788":"players.info()","f678acea":"players['weight'].hist(bins=25)\nplt.show()","3093806e":"plays = pd.read_csv(\"..\/input\/nfl-big-data-bowl-2021\/plays.csv\")\nplays","fa95bde6":"plays.info()","d83b829e":"is_nan_plays = pd.DataFrame()\nis_nan_plays['Attrs'] = plays.isna().sum().index\nis_nan_plays['count'] = plays.isna().sum().values\nis_nan_plays = is_nan_plays.sort_values(by=['count'], ascending=False).reset_index(drop=True)\n\nplt.rcdefaults()\nfig, ax = plt.subplots(figsize=(16, 10))\n\n\nax.barh(np.arange(len(is_nan_plays)), is_nan_plays['count'].values, align='center')\nax.set_yticks(np.arange(len(is_nan_plays)))\nax.set_yticklabels(is_nan_plays['Attrs'].tolist())\nax.invert_yaxis()  # labels read top-to-bottom\nax.set_xlabel('Times count --->')\nax.set_title('Number of games on every duration\/Time --->')\n\nplt.show()","c899eef3":"Well, I can see some Nan values are there, let's see how many?","11de8a48":"<h2 style=\"color:skyblue; font-size:24px\">Description<\/h2>\n\n- Attributes:\n    * `nflId`: Player identification number, unique across players (numeric)\n\n    * `height`: Player height (text)\n\n    * `weight`: Player weight (numeric)\n\n    * `birthDate`: Date of birth (YYYY-MM-DD)\n\n    * `collegeName`: Player college (text)\n\n    * `position`: Player position (text)\n\n    * `displayName`: Player name (text)","2363c0f6":"<h1 style=\"color:red\">If you have read so far and liked this kernel, consider upvoting it, that will motivate me to produce more such kernels. Leave your suggestions in the comment section for improvemnet.<\/h1>","8ee62706":"<h2 style=\"color:skyblue; font-size:24px\">Description<\/h2>\n\n* `gameId`: Game identifier, unique (numeric)\n\n* `playId`: Play identifier, not unique across games (numeric)\n\n* `playDescription`: Description of play (text)\n\n* `quarter`: Game quarter (numeric)\n\n* `down`: Down (numeric)\n\n* `yardsToGo`: Distance needed for a first down (numeric)\n\n* `possessionTeam`: Team on offense (text)\n\n* `playType`: Outcome of dropback: sack or pass (text)\n\n* `yardlineSide`: 3-letter team code corresponding to line-of-scrimmage (text)\n\n* `yardlineNumber`: Yard line at line-of-scrimmage (numeric)\n\n* `offenseFormation`: Formation used by possession team (text)\n\n* `personnelO`: Personnel used by offensive team (text)\n\n* `defendersInTheBox`: Number of defenders in close proximity to line-of-scrimmage (numeric)\n\n* `numberOfPassRushers`: Number of pass rushers (numeric)\n\n* `personnelD`: Personnel used by defensive team (text)\n\n* `typeDropback`: Dropback categorization of quarterback (text)\n\n* `preSnapHomeScore`: Home score prior to the play (numeric)\n\n* `preSnapVisitorScore`: Visiting team score prior to the play (numeric)\n\n* `gameClock`: Time on clock of play (MM:SS)\n\n* `absoluteYardlineNumber`: Distance from end zone for possession team (numeric)\n\n* `penaltyCodes`: NFL categorization of the penalties that ocurred on the play. For purposes of this contest, the most important penalties are Defensive Pass Interference (DPI), Offensive Pass Interference (OPI), Illegal Contact (ICT), and Defensive Holding (DH). Multiple penalties on a play are separated by a ; (text)\n\n* `penaltyJerseyNumber`: Jersey number and team code of the player commiting each penalty. Multiple penalties on a play are separated by a ; (text)\n\n* `passResult`: Outcome of the passing play (C: Complete pass, I: Incomplete pass, S: Quarterback sack, IN: Intercepted pass, text)\n\n* `offensePlayResult`: Yards gained by the offense, excluding penalty yardage (numeric)\n\n* `playResult`: Net yards gained by the offense, including penalty yardage (numeric)\n\n* `epa`: Expected points added on the play, relative to the offensive team. Expected points is a metric that estimates the average of every next scoring outcome given the play's down, distance, yardline, and time remaining (numeric)\n\n* `isDefensivePI`: An indicator variable for whether or not a DPI penalty ocurred on a given play (TRUE\/FALSE)","702124ce":"Okay, why not we plot and see how many games are being played on which day, later on we might think of considering the season or which part of the year.","cfbff4c2":"<h2 style=\"color:skyblue; font-size:24px\">Description<\/h2>\n\n- Attributes\n    - `gameId`: int, first 8 digits consists of the date in the format `yyyymmdd` + `unique_id_per_match` which can be used to obtain the numbers of matches played on a single date.\n    - `gameDate`: Date of the match\n    - `gameTimeEastern`: Eastern time of the match in the format HH:MM:SS\n    - `homeTeamAbbr`: object, Three letter abbreviation of the team\n    - `visitorTeam`: object, Three letter abbreviation of the team that visited the venue\n    - `week`: int, Week (Don't know whether the ith week of the year or what? Please clarify in the comment section.)","45a042e1":"<h3 style=\"color:red\"><center>Defense wins championships.<\/center><\/h3>","ff651317":"After initial exploration, we will try to answer the questions above :)","c71a6441":"<h1 style=\"color:orange\">Analytics Key points to consider<\/h1>\n\n* What an NFL defense does once a quarterback drops back to pass? This includes coverage schemes (typically man versus zone).\n* How players (often termed \u201csecondary\u201d defenders) disrupt and prevent the offense from completing passes?\n* how, once the ball is in the air, the defense works to ensure that a pass falls incomplete?\n* What are coverage schemes (man, zone, etc) that the defense employs? What coverage options tend to be better performing?\n* Which players are the best at closely tracking receivers as they try to get open?\n* Which players are the best at closing on receivers when the ball is in the air?\n* Which players are the best at defending pass plays when the ball arrives?\n* Is there any way to use player tracking data to predict whether or not certain penalties \u2013 for example, defensive pass interference \u2013 will be called?\n* Who are the NFL\u2019s best players against the pass?\n* How does a defense react to certain types of offensive plays?\n* Is there anything about a player \u2013 for example, their height, weight, experience, speed, or position \u2013 that can be used to predict their performance on defense?\n* metrics for analyzing quarterbacks, running backs, and wide receivers\n* techniques for analyzing the defensive part of the game trail and lag behind. \n* Identifying player, team, or strategic advantages on the defensive side of the ball","ed53ef9a":"<h1 style=\"color:orange\">Introduction<\/h1>\n<ul>\n    <li style=\"font-size:24px\">Goal<\/li>\n    <ul><li style=\"font-size:16px\">Use Data science to better understand the schemes and players that make for a successful defense against passing plays.<\/li><\/ul>\n    <ul><li style=\"font-size:16px\">Generate actionable, practical, and novel insights from player tracking data that corresponds to defensive backs.<\/li><\/ul>\n<\/ul>","4de1891a":"<h1 style=\"background:lime; color:black\"><center>2. Players Data<\/center><\/h1>","9cb49e0d":"<h1 style=\"background:lime; color:black\"><center>4. Tracking Data<\/center><\/h1>","4c05b34d":"<h1 style=\"background:lime; color:black\"><center>1. Game Data<\/center><\/h1>","db72f969":"<a id=\"1\"><\/a>\n<h2 style=\"background:lightskyblue; border=2; color:black\"><center>Welcome to NFL BIG Data Bowl!!!<\/center><\/h2>","bb1a8830":"<h1 style=\"background:lime; color:black\"><center>3. Plays Data<\/center><\/h1>","6a35a81d":"<h1 style=\"color:orange\">Given Data<\/h1>\n<div>\n<ul>\n    <li> games.csv <\/li>\n    <li> players.csv <\/li>\n    <li> plays.csv <\/li>\n    <li> week1[-17].csv <\/li>\n<\/ul>\n<\/div>\n\nWe will analyse and asnwer the questions one by one. Let's start with `games.csv`.","7527d73e":"**Maximum number of games were played on `30th Dec, 2018` and the count is `16`.**\n**And minimus is `1` which happened on `58%` of the matches.**","ef2edda1":"<h2 style=\"color:skyblue; font-size:24px\">Description<\/h2>\n\n<p style=\"color:orange\">Each of the 17 week.csv files contain player tracking data from all passing plays during Week `week` of the 2018 regular season. Nearly all plays from each `gameId` are included; certain plays or games with insufficient data are dropped. Each team and player plays no more than 1 game in a given week.<\/p>\n\n- Attributes:\n\n    * `time`: Time stamp of play (time, yyyy-mm-dd, hh:mm:ss)\n\n    * `x`: Player position along the long axis of the field, 0 - 120 yards. See Figure 1 below. (numeric)\n\n    * `y`: Player position along the short axis of the field, 0 - 53.3 yards. See Figure 1 below. (numeric)\n\n    * `s`: Speed in yards\/second (numeric)\n\n    * `a`: Acceleration in yards\/second^2 (numeric)\n\n    * `dis`: Distance traveled from prior time point, in yards (numeric)\n\n    * `o`: Player orientation (deg), 0 - 360 degrees (numeric)\n\n    * `dir`: Angle of player motion (deg), 0 - 360 degrees (numeric)\n\n    * `event`: Tagged play details, including moment of ball snap, pass release, pass catch, tackle, etc (text)\n\n    * `nflId`: Player identification number, unique across players (numeric)\n\n    * `displayName`: Player name (text)\n\n    * `jerseyNumber`: Jersey number of player (numeric)\n\n    * `position`: Player position group (text)\n\n    * `team`: Team (away or home) of corresponding player (text)\n\n    * `frameId`: Frame identifier for each play, starting at 1 (numeric)\n\n    * `gameId`: Game identifier, unique (numeric)\n\n    * `playId`: Play identifier, not unique across games (numeric)\n\n    * `playDirection`: Direction that the offense is moving (text, left or right)\n\n    * `route`: Route ran by offensive player (text)","95a2a9d2":"- <h2>Evaluation<\/h2>\n\n    - Innovation:\n\n        - Are the proposed findings actionable?\n        - Is this a way of looking at tracking data that is novel?\n        - Is this project creative?  \n    - Accuracy:\n        - Is the work correct?\n        - Are claims backed up by data?\n        - Are the statistical models appropriate given the data?  \n    - Relevance:\n        - Would NFL teams (or the league office) be able to use these results on a week-to-week basis?\n        - Does the analysis account for variables that make football data complex?  \n    - Clarity:\n        - Evaluate the writing with respect to how clear the writer(s) make findings.  \n    - Data visualization\/tables:\n        - Are the charts and tables provided accessible, interesting, visually appealing, and accurate?","cd11f2ff":"**Maximum number of matches are played at `13:00:00`.**","97b9c342":"<center><img src=\"https:\/\/storage.googleapis.com\/kaggle-competitions\/kaggle\/15696\/logos\/thumb76_76.png?t=2019-10-04-16-17-46\"><\/center>"}}