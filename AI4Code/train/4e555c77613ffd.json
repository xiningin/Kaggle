{"cell_type":{"dc5bc2ff":"code","f3369fc1":"code","af018fbe":"code","4b0e3c4b":"code","09b5bc27":"code","7aa2748e":"code","ac0067c6":"code","ca84df28":"code","d8fdf99a":"code","7eda3fc1":"code","90f4838d":"code","b85c0bae":"code","4fdb40cf":"code","04b5a3a2":"code","e064e4b4":"code","d9148c75":"code","d5782368":"markdown","34cd50f8":"markdown","f200898c":"markdown","bc940788":"markdown","71462b61":"markdown","6dd450f1":"markdown","dd1c8e84":"markdown","7aa6a8f8":"markdown","1f697660":"markdown","7ac9d2eb":"markdown","9d72168b":"markdown","48ac3da8":"markdown","b5604ca3":"markdown","b747e6eb":"markdown","2d7ecf04":"markdown","655f3bb1":"markdown","e04d1656":"markdown","883b2c27":"markdown","ada81d46":"markdown","057779c3":"markdown"},"source":{"dc5bc2ff":"#import the various libraries we require for the analysis \nimport numpy as np\nimport pandas as pd\nfrom numpy import array\nimport matplotlib as mpl\n\n#import the tools we need to plot\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.basemap import Basemap\nfrom matplotlib import cm #cm is a tool that allows us to gain access to a predefined set of colours in matplotlib","f3369fc1":"cities = pd.read_csv(\"..\/input\/top-500-indian-cities\/cities_r2.csv\")","af018fbe":"#print the data for the first five cities in the data set\ncities.head()","4b0e3c4b":"#prints an overview of each columns with the number of entries in each column and the data type\ncities.info()","09b5bc27":"#gives an even more detailed view into each column\ncities.describe()","7aa2748e":"#we shall now set the size of the figure we are plotting\nfig = plt.figure(figsize=(20,20))\n\n#sorting the states in ascending order of the number of times a city from that state is present in the data set\nstates = cities.groupby('state_name')['name_of_city'].count().sort_values(ascending=True) \n\n#mention the sort of graph we want\nstates.plot(kind='barh', fontsize=18)\nplt.grid(b=True, which='both', color='black', linestyle='-')\nplt.xlabel('No of cities taken for analysis', fontsize=20)","ac0067c6":"#We split the data in location using the delimiter ',' and since the first index i.e., [0] is the latitude coordinate,\n#we store and we did the same for longitude\ncities['latitude']=cities['location'].apply(lambda x:x.split(',')[0])\ncities['longitude']=cities['location'].apply(lambda x:x.split(',')[1])","ca84df28":"#sort the cities according to population\ntop_pop_cities=cities.sort_values(by='population_total',ascending=False)\n\n#store the top 10 cities under a separate name\ntop10_pop_cities=top_pop_cities.head(10)\ntop10_pop_cities","d8fdf99a":"#specify the size of the figure\nfig=plt.figure(figsize=(20,15))\n\n#setting up Basemap\n#width and height are self-explanatory, projection is the type of map we want\n#resolution can be low or high\n#llcrnrlon is lower left corner longitude and urcrnrlon is upper right corner longitude\n#lat_0 is the central latitude of the map\nmap = Basemap(width=1200000,height=900000,projection='lcc',resolution='l',llcrnrlon=67,llcrnrlat=5,urcrnrlon=99,urcrnrlat=37,lat_0=22,lon_0=78)\n\n#draws the map boundaries, the countries, and the coastlines\nmap.drawmapboundary()\nmap.drawcountries()\nmap.drawcoastlines()\n\n#storing all the longitudes in a numpy array\nlg=array(top10_pop_cities['longitude'])\n\n#storing all the latitudes in a numpy array\nlt=array(top10_pop_cities['latitude'])\n\n#storing the population of each of the top 10 cities in a numpy array\npt=array(top10_pop_cities['population_total'])\n\n#storing the names of the top 10 cities in a numpy array\nnc=array(top10_pop_cities['name_of_city'])\n\nx,y=map(lg,lt)\n\n#choosing the size of the circle that will be plotted on the map, corresponding to the population\npopulation_size=top10_pop_cities['population_total'].apply(lambda x:int(x\/5000))\n\n#s=number of entries, c=value for the population which determines the color, cmap=pre-existing color map, aplha=opacity\nmap.scatter(x, y, s=population_size, c=population_size, marker=\"o\", cmap=cm.Dark2, alpha=0.7)\n\n#printing the name of each city\nfor ncs,xpt,ypt in zip(nc,x,y):\n    plt.text(xpt+60000,ypt+30000,ncs,fontsize=12, fontweight='bold')\n\n#title of the map\nplt.title(\"Top 10 most populous cities in India\",fontsize=18)","7eda3fc1":"#since it is tedious to write the code for drawing a map every single time, let us go ahead and write a function that draws a map\n#we can then call this function every single time we require a map\n\ndef plot_map(sizes, colorbarValue):\n    plt.figure(figsize=(19,20))\n    f, ax = plt.subplots(figsize=(19,20))\n    map = Basemap(width=5000000,height=3500000,projection='lcc',resolution='l',llcrnrlon=67,llcrnrlat=5,urcrnrlon=99,urcrnrlat=37,lat_0=22,lon_0=78,ax=ax)\n    map.drawmapboundary()\n    map.drawcountries()\n    map.drawcoastlines()\n\n    x, y = map(array(cities['longitude']),array(cities['latitude']))\n    cs = map.scatter(x, y, s=sizes, c=sizes, marker=\"o\", cmap=cm.get_cmap('Dark2'),alpha=0.8)\n\n    #setting up a colorbar which acts as a legend\n    cbar = map.colorbar(cs, location='right',pad=\"2%\")\n    cbar.ax.set_yticklabels(colorbarValue)\n","90f4838d":"population_sizes=cities[\"population_total\"].apply(lambda x:int(x\/5000))\n\n#setting the lowest and highest value on the colorbar\ncolorbarValue=np.linspace(cities['population_total'].min(),cities['population_total'].max())\n\n#converting the value on the legend from float to int\ncolorbarValue=colorbarValue.astype(int)\n\nplot_map(population_sizes,colorbarValue)","b85c0bae":"#specifying the size of the figure\nfig=plt.figure(figsize=(20,20))\n\n#grouping states according to the total number of literates in that state\nstates=cities.groupby('state_name')['literates_total'].sum().sort_values(ascending=True)\n\n#specifying the type of graph\nstates.plot(kind=\"barh\", fontsize = 20)\n\n#b = to show the grid lines\nplt.grid(b=True, which='both', color='Black',linestyle='-')\n\n#label the x-axis\nplt.xlabel('Total literacy rate of states', fontsize = 20)","4fdb40cf":"#ranking the cities according to the total literates in the city\ntop_literate_cities = cities.sort_values(by='literates_total',ascending=False)\n\n#separating the top 10 cities with the highest number of literates\ntop10_literate_cities=top_literate_cities.head(10)\ntop10_literate_cities","04b5a3a2":"\nplt.subplots(figsize=(20, 15))\nmap = Basemap(width=1200000,height=900000,projection='lcc',resolution='l',\n                    llcrnrlon=67,llcrnrlat=5,urcrnrlon=99,urcrnrlat=37,lat_0=28,lon_0=77)\n\nmap.drawmapboundary ()\nmap.drawcountries ()\nmap.drawcoastlines ()\n\nlg=array(top10_literate_cities['longitude'])\nlt=array(top10_literate_cities['latitude'])\npt=array(top10_literate_cities['literates_total'])\nnc=array(top10_literate_cities['name_of_city'])\n\nx, y = map(lg, lt)\npopulation_sizes_literates_total = top10_literate_cities[\"literates_total\"].apply(lambda x: int(x \/ 5000))\nplt.scatter(x, y, s=population_sizes_literates_total, marker=\"o\", c=population_sizes_literates_total, cmap=cm.Dark2, alpha=0.7)\n\n\nfor ncs, xpt, ypt in zip(nc, x, y):\n    plt.text(xpt+60000, ypt+30000, ncs, fontsize=10, fontweight='bold')\n\nplt.title('Top 10 Cities with the most literates in India',fontsize=20)","e064e4b4":"population_sizes = cities[\"literates_total\"].apply(lambda x: int(x \/ 5000))\ncolorbarValue = np.linspace(cities[\"literates_total\"].min(), cities[\"literates_total\"].max())\ncolorbarValue = colorbarValue.astype(int)\n\nplot_map(population_sizes, colorbarValue)","d9148c75":"#grouping the states according to the aggregate of the average effective literacy rate, average male literacy rate, average female literacy rate\nstate_literacy_effective = cities[[\"state_name\",\"effective_literacy_rate_total\",\"effective_literacy_rate_male\",\"effective_literacy_rate_female\"]].groupby(\"state_name\").agg({\"effective_literacy_rate_total\":np.average,\n                                                                                                \"effective_literacy_rate_male\":np.average,\n                                                                                                \"effective_literacy_rate_female\":np.average})\n\n#specifying the type and details of the graph\nstate_literacy_effective.sort_values(\"effective_literacy_rate_total\", ascending=True).plot(kind=\"barh\",\n                      grid=True,\n                      figsize=(16,15),\n                      alpha = 0.6,\n                      width=0.6,\n                      stacked = False,\n                      edgecolor=\"g\",\n                      fontsize = 20)\nplt.grid(b=True, which='both', color='black',linestyle='-')","d5782368":"We see Maharashtra, UP, and West Bengal have the highest literacy rate, which corresponds with the population. But Bihar, on the other hand, has quite a low literacy rate, corresponding to its population.","34cd50f8":"Now let us find the top 10 most populated cities in India from the data set","f200898c":"Let us now plot the top 10 cities with the highest number of literates","bc940788":"If we want to plot this, we can call the plot function again or just code the map again. ","71462b61":"Let us now view the data and get an idea as to what it is that we're dealing with","6dd450f1":"Let us now plot a bar graph to get an idea as to how many cities have been taken for analysis from the various states","dd1c8e84":"It is fascinating to see how the states that are often considered as rural have a higher effective literacy rate than states like UP or West Bengal.","7aa6a8f8":"Our aim is to explore the dataset we have and use it for visual representation on the Indian map to help us have a visual aid in order to understand and analyze the data. The three main tools we will be using for this notebook are numpy, pandas, matplotlib, and a toolkit within matplotlib called basemap (which lets us do the fun stuff)","1f697660":"Reading all the data into the notebook and storing it","7ac9d2eb":"Let us now find the effective literacy amongst states","9d72168b":"Let us plot the data for literacy across the country","48ac3da8":"To understand and to put this into context, India is the second most populated country in the world, hence we expect the population density of India to be quite an interesting visual. \nSo let us go ahead and plot the entire population of India on the map","b5604ca3":"Incidentally, this is the same as the top 10 most populous cities in India","b747e6eb":"Now on to the fun part.\nIt is useful to have the data but it would be quite tedious to explain it to someone using just the data set. A visual representation would be much more appropriate and helpful.\nSo let us plot this data on a map of India","2d7ecf04":"Let us now analyze the literacy rate of various states","655f3bb1":"Let us now find and plot the top 10 most literate cities in India","e04d1656":"As we can see, most of the cities in the data set have been taken from the states of Uttar Pradesh and West Bengal (each over 60), which is a little surprising because even though Uttar Pradesh is the most populous state in India, Maharashtra comes next","883b2c27":"Let us now use the created function to plot the population density of India","ada81d46":"As we see, major metropolitan cities again show high population of literate people","057779c3":"Since we want to plot the data on an Indian map, we need the latitude and longitude of each city. If we go back and view the data set, we notice that the latitude and longitude is stored together under location. So to make our job much easier, we can split that into latitude and longitude"}}