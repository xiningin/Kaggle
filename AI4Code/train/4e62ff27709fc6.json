{"cell_type":{"db687428":"code","95da9f00":"code","1e80eeb4":"code","3a77315f":"code","1a420fe8":"code","f12476fd":"code","b6a81344":"code","d98c584d":"code","55be651d":"code","94638935":"code","d873f6ea":"code","6012f1d3":"code","7675011d":"code","c12a93b8":"code","bbd578eb":"code","60a3b662":"code","89ea8be5":"code","41ae6050":"code","eb25d568":"code","b70c1afa":"code","f00d98b9":"code","f1a2671d":"code","6ff7892f":"code","b4bdd236":"code","03d3ae86":"code","7f2b1e92":"code","b58b7cb9":"code","05d87078":"code","228152e0":"code","4cc9e86a":"code","b579a286":"code","b463ed0c":"code","9f26b01c":"code","1b35f8e7":"code","19ac67fc":"code","5c2b242a":"code","03014c00":"code","19b24213":"code","cf4c21cd":"code","c2e55665":"code","4402ad7c":"code","63823899":"markdown"},"source":{"db687428":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","95da9f00":"from fastai import *\nfrom fastai.vision import *\nimport csv\nfrom PIL import Image","1e80eeb4":"bs = 64","3a77315f":"mkdir '\/kaggle\/working\/train'","1a420fe8":"mkdir '\/kaggle\/working\/test'","f12476fd":"csv_path = Path('..\/input\/digit-recognizer')\ncsv_path.ls()","b6a81344":"img_path = Path('\/kaggle\/working\/')\nimg_path.ls()","d98c584d":"def convert_pixels_to_image(pixels):\n    pixels = np.array(pixels, dtype='uint8')\n    pixels = pixels.reshape((28, 28))\n    image = Image.fromarray(pixels)\n    \n    return image","55be651d":"counter = dict()\n\nwith open(csv_path\/'train.csv') as csv_file:\n    csv_reader = csv.reader(csv_file)\n    next(csv_reader)\n\n    for row in csv_reader:\n        pixels = row[1:]\n        image = convert_pixels_to_image(pixels)\n\n        label = row[0]\n\n        if label not in counter:\n            counter[label] = 0\n        counter[label] += 1\n\n        filename = '{}_{}.jpg'.format(label, counter[label])\n        image.save(img_path\/'train'\/filename)","94638935":"counter = 0\n\nwith open(csv_path\/'test.csv') as csv_file:\n    csv_reader = csv.reader(csv_file)\n    next(csv_reader)\n\n    for row in csv_reader:\n        pixels = row\n        image = convert_pixels_to_image(pixels)\n        counter += 1\n\n        filename = '{}.jpg'.format(counter)\n        image.save(img_path\/'test'\/filename)","d873f6ea":"fnames = get_image_files(img_path\/'train')","6012f1d3":"pat = re.compile(r'\/([^\/]+)_\\d+.jpg$')","7675011d":"np.random.seed(2)\ndata = ImageDataBunch.from_name_re(img_path, fnames, pat, ds_tfms=get_transforms(), size=14, bs=bs, num_workers=0\n                                  ).normalize(imagenet_stats)","c12a93b8":"data.show_batch(rows=3, figsize=(7,6))","bbd578eb":"data.classes, data.c, len(data.train_ds), len(data.valid_ds)","60a3b662":"learn = cnn_learner(data, models.resnet50, metrics=error_rate)","89ea8be5":"lr = 0.01","41ae6050":"learn.fit_one_cycle(5, slice(lr))","eb25d568":"learn.save('stage-1')","b70c1afa":"learn.lr_find()\nlearn.recorder.plot()","f00d98b9":"learn.fit_one_cycle(5, max_lr=slice(1e-4,1e-3))","f1a2671d":"learn.save('stage-2')","6ff7892f":"learn.unfreeze()","b4bdd236":"learn.fit_one_cycle(5, max_lr=slice(1e-4,1e-3))","03d3ae86":"learn.save('stage-3')","7f2b1e92":"np.random.seed(2)\ndata = ImageDataBunch.from_name_re(img_path, fnames, pat, ds_tfms=get_transforms(), size=28, bs=bs, num_workers=0\n                                  ).normalize(imagenet_stats)","b58b7cb9":"learn.data = data","05d87078":"learn.freeze()","228152e0":"learn.fit_one_cycle(5, slice(lr))","4cc9e86a":"learn.save('stage-4')","b579a286":"learn.lr_find()\nlearn.recorder.plot()","b463ed0c":"learn.fit_one_cycle(5, max_lr=slice(1e-4,1e-3))","9f26b01c":"learn.save('stage-5')","1b35f8e7":"learn.unfreeze()","19ac67fc":"learn.fit_one_cycle(5, max_lr=slice(1e-4,1e-3))","5c2b242a":"learn.save('stage-6')","03014c00":"learn.export()","19b24213":"learn = load_learner(img_path)","cf4c21cd":"img = open_image(img_path\/'test'\/'1.jpg')\nimg","c2e55665":"pred_class,pred_idx,outputs = learn.predict(img)\nprint(pred_class)","4402ad7c":"test = os.listdir(img_path\/'test')\ntest.sort(key=lambda f: int(re.sub('\\D', '', f)))\n\nwith open(img_path\/'submission.csv', 'w', newline='') as file:\n    writer = csv.writer(file)\n    writer.writerow(['ImageId', 'Label'])\n    \n    for image_file in test:\n        image = os.path.join(img_path\/'test', image_file) \n        image_id = Path(image).stem\n\n        img = open_image(image)\n        pred_class,pred_idx,outputs = learn.predict(img)\n        label = str(pred_class)\n        \n        writer.writerow([image_id, label])","63823899":"# DIGIT RECOGNIZER\n\nThis is my solution to the [digit recognizer](https:\/\/www.kaggle.com\/c\/digit-recognizer) competition using ResNet34."}}