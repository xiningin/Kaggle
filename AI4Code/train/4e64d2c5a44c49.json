{"cell_type":{"c48e531a":"code","02213f7d":"code","d4b47c3d":"code","cfe48c0c":"code","ae2bc9c0":"code","d9fa71a3":"code","db53e05d":"code","b6caf323":"code","a5b47540":"code","588596a2":"code","77dbec6d":"code","2d30870d":"code","c89eb290":"code","52f4a01f":"code","20d1f588":"code","22fd7612":"code","887b555d":"code","1d84a45d":"code","694c5f62":"code","c5fe2673":"code","7ef732dd":"code","6d8dcc5a":"code","a58a32c9":"code","df20fee4":"code","640992c5":"code","2309a6ac":"code","6061b405":"code","645b2b8b":"code","0fcfcdf5":"code","37c3c0e1":"code","43bfeca9":"code","f199e7ab":"code","8e00da9c":"code","56052e85":"code","ba972b28":"code","5f96ab9f":"code","c1cb5c49":"code","3a92a2db":"code","a6c1dfd0":"markdown","c4599101":"markdown","92636ae8":"markdown","73f60b2d":"markdown","c7193a09":"markdown","4b7f1436":"markdown","729f399c":"markdown","40e9de2f":"markdown","cdaecbf0":"markdown","f645c8f0":"markdown","688dda94":"markdown","f685ee70":"markdown","8b6b09b6":"markdown","73d93c56":"markdown","6cc80843":"markdown","34d67e7b":"markdown","454ae98a":"markdown","38dd75e5":"markdown","81116cd9":"markdown","1b0a07db":"markdown","14d57d8d":"markdown","8d163d4b":"markdown","275d9548":"markdown","11981e48":"markdown","4a66a2a9":"markdown","0ae95e2a":"markdown","a7b2b81e":"markdown","b38cc763":"markdown","e0a65dad":"markdown","a8da7836":"markdown","d40f78ce":"markdown","c30b935e":"markdown","ef5816a2":"markdown","3ae3ec60":"markdown"},"source":{"c48e531a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","02213f7d":"# Displaying the dataset using Pandas\ndata = pd.read_csv(\"\/kaggle\/input\/volcanic-eruptions\/database.csv\")\nprint(data)","d4b47c3d":"# Dropping the Number Column\ndata = data.drop(columns = [\"Number\"])\nprint(data)","cfe48c0c":"# Checking the presence of Null values\ndata.isnull().sum()","ae2bc9c0":"# Dropping the rows which contain Null values\ndata = data.dropna()\ndata = data[data.Type != 'Unknown']\ndata = data[data[\"Last Known Eruption\"] != 'Unknown']\ndata = data[data[\"Dominant Rock Type\"] != 'No Data']\nprint(data)","d9fa71a3":"# Data Preparation - \"Type\" Column\ndata[\"Type\"] = data[\"Type\"].str.replace('[(,),?]', '') \ndata[\"Type\"] = data[\"Type\"].replace(to_replace=[\"Calderas\",\"Complexes\",\"Fissure vents\",\"Lava cones\", \"Maars\", \"Lava domes\", \"Pyroclastic cones\",\"Shields\", \"Stratovolcanoes\",\n                              \"Submarinees\", \"Tuff cones\", \"Volcanic fields\"], \n                  value=[\"Caldera\", \"Complex\",\"Fissure vent\",\"Lava cone\", \"Maar\", \"Lava dome\",\"Pyroclastic cone\",\"Shield\", \"Stratovolcano\",\n                        \"Submarine\", \"Tuff cone\", \"Volcanic field\"])\nprint(data[\"Type\"])","db53e05d":"# Counting the duplicates in Country column\ndup = data.pivot_table(index = ['Country'], aggfunc ='size') \ndup = dup.reset_index()\ndup.columns= [\"Country\", \"Counts\"]\nprint(dup)","b6caf323":"# Displaying Countries having volcanoes from highest to the lowest \nlar = dup.nlargest(80, [\"Counts\"])\nprint(lar)","a5b47540":"# Displaying first set of top 20 Countries having higher number of volcanoes\na = lar[0:20]\nprint(a)","588596a2":"# Importing Matplotlib Library\nfrom matplotlib import pyplot as plt \n\n# Creating Pie Chart\nfig = plt.figure(figsize =(15, 70)) \nplt.pie(a[\"Counts\"], labels = a[\"Country\"])\nplt.legend(a[\"Counts\"], fontsize=10)\nplt.title(\"TOP 20 COUNTRIES HAVING HIGHER NUMBER OF VOLCANOES\", fontsize=25)\n\n# Displaying Pie Chart \nplt.show() ","77dbec6d":"# Displaying second set of 20 Countries having higher number of volcanoes next to first set\nb = lar[20:40]\nprint(b)","2d30870d":"# Creating Stack Plot\nfig = plt.figure(figsize =(20, 10)) \nplt.stackplot(b[\"Counts\"], b[\"Country\"], color=\"red\") \nplt.xlabel(\"COUNTS\", fontsize=20) \nplt.ylabel(\"COUNTRY\", fontsize=20) \nplt.title(\"SECOND SET OF 20 COUNTRIES HAVING HIGHER NUMBER OF VOLCANOES\", fontsize=25)\n\n# Displaying Stack Plot\nplt.show() ","c89eb290":"# Displaying third set of 20 Countries having higher number of volcanoes next to second set\nc = lar[40:60]\nprint(c)","52f4a01f":"# Creating Linear Plot with Customizations\nfig = plt.figure(figsize =(15, 10)) \nplt.plot(c[\"Counts\"], c[\"Country\"], color='orange', linestyle='dashed', linewidth = 3, marker='o', markerfacecolor='blue', markersize=12)\nplt.xlabel(\"COUNTS\", fontsize=20) \nplt.xticks(fontsize=15)\nplt.ylabel(\"COUNTRY\", fontsize=20) \nplt.yticks(fontsize=15)\nplt.title(\"THIRD SET OF 20 COUNTRIES HAVING HIGHER NUMBER OF VOLCANOES\", fontsize=25)\n\n# Displaying Linear Plot with Customizations\nplt.show() ","20d1f588":"# Displaying set of 20 Countries having least number of volcanoes\nd = lar[60:]\nprint(d)","22fd7612":"# Creating Donut Plot\nfig = plt.figure(figsize =(15, 15)) \ncircle = plt.Circle( (0,0), 0.5, color='white')\nplt.pie(d[\"Counts\"], labels=d[\"Country\"])\np=plt.gcf()\np.gca().add_artist(circle)\nplt.legend(d[\"Counts\"])\nplt.title(\"COUNTRIES HAVING LEAST NUMBER OF VOLCANOES\", fontsize=25)\n\n# Displaying Donut Plot\nplt.show() ","887b555d":"# Counting the duplicates in Region column\nreg = data.pivot_table(index = ['Region'], aggfunc ='size') \nreg = reg.reset_index()\nreg.columns= [\"Region\", \"Counts\"]\nprint(reg)","1d84a45d":"# Displaying Regions having volcanoes from highest to the lowest \nlac = reg.nlargest(19, [\"Counts\"])\nprint(lac)","694c5f62":"# Creating Donut Plot\nfig = plt.figure(figsize =(15, 15)) \ncircle = plt.Circle( (0,0), 0.5, color='white')\nplt.pie(lac[\"Counts\"], labels=lac[\"Region\"])\np=plt.gcf()\np.gca().add_artist(circle)\nplt.legend(lac[\"Counts\"], fontsize=8)\nplt.title(\"REGIONS WITH VOLCANOES RANGING FROM HIGHEST TO LOWEST\",fontsize=25)\n\n# Displaying Donut Plot\nplt.show() ","c5fe2673":"# Counting the duplicates in Type column\ntpe = data.pivot_table(index = [\"Type\"], aggfunc = 'size') \ntpe = tpe.reset_index()\ntpe.columns= [\"Type\", \"Counts\"]\nprint(tpe)","7ef732dd":"# Displaying different types of volcanoes and their occurrence from highest to the lowest \ntpes = tpe.nlargest(18, [\"Counts\"])\nprint(tpes)","6d8dcc5a":"# Creating Bar Chart\nfig = plt.figure(figsize =(40, 15)) \nplt.bar(tpes[\"Type\"], tpes[\"Counts\"]) \nplt.xlabel(\"VOLCANO TYPE\", fontsize=25) \nplt.xticks(fontsize=15)\nplt.ylabel(\"COUNTS\", fontsize=25) \nplt.yticks(fontsize=15)\nplt.title(\"DIFFERENT TYPES OF VOLCANOES AND THEIR COUNTS\", fontsize=30)\n\n# Displaying Bar Chart \nplt.show() ","a58a32c9":"# Creating Scatter Plot\nfig = plt.figure(figsize =(45, 45)) \nplt.scatter(data[\"Type\"], data[\"Country\"], marker=\"o\", s=100, color=\"red\") \nplt.xlabel(\"VOLCANO TYPE\", fontsize=50) \nplt.xticks(fontsize=17)\nplt.ylabel(\"COUNTRY\", fontsize=75) \nplt.yticks(fontsize=20)\nplt.title(\"DIFFERENT TYPES OF VOLCANOES IN DIFFERENT COUNTRIES\", fontsize=55)\n\n# Displaying Scatter Plot\nplt.show() ","df20fee4":"# Creating Scatter Plot\nfig = plt.figure(figsize =(40, 20)) \nplt.scatter(data[\"Type\"], data[\"Region\"], marker=\"^\", s=100) \nplt.xlabel(\"VOLCANO TYPE\", fontsize=35) \nplt.xticks(fontsize=15)\nplt.ylabel(\"REGIONS\", fontsize=35) \nplt.yticks(fontsize=20)\nplt.title(\"DIFFERENT TYPES OF VOLCANOES IN DIFFERENT REGIONS\", fontsize=45)\n\n# Displaying Scatter Plot\nplt.show() ","640992c5":"# Creating Scatter Plot\nimport plotly.express as px\nfig = px.scatter(data, x='Region', y='Country', color='Type', title=\"DIFFERENT TYPES OF VOLCANOES IN DIFFERENT COUNTRIES AND REGIONS\")\n\n# Displaying Scatter Plot\nfig.show()","2309a6ac":"# Counting the duplicates in Activity Evidence column\nae = data.pivot_table(index = [\"Activity Evidence\"], aggfunc = 'size') \nae = ae.reset_index()\nae.columns= [\"Activity Evidence\", \"Counts\"]\nprint(ae)","6061b405":"# Creating Donut Plot\nfig = plt.figure(figsize =(15, 15)) \ncircle = plt.Circle( (0,0), 0.5, color='white')\nplt.pie(ae[\"Counts\"], labels=ae[\"Counts\"])\np=plt.gcf()\np.gca().add_artist(circle)\nplt.legend(ae[\"Activity Evidence\"])\nplt.title(\"ACTIVITY EVIDENCE OF VOLCANOES\",fontsize=25)\n\n# Displaying Donut Plot\nplt.show() ","645b2b8b":"# Creating and Displaying World map\nimport plotly.express as px\nimport geopandas as gpd\nfig = px.scatter_geo(data, lat=data.Latitude, lon=data.Longitude, hover_name=\"Name\", color=\"Region\")\nfig.show()","0fcfcdf5":"# Counting the duplicates in Dominant Rock Type column\n\ndrt = data.pivot_table(index = [\"Dominant Rock Type\"], aggfunc = 'size') \ndrt = drt.reset_index()\ndrt.columns= [\"Dominant Rock Type\", \"Counts\"]\nprint(drt)","37c3c0e1":"# Creating Bar Chart\nfig = plt.figure(figsize =(50, 15)) \nplt.barh(drt[\"Dominant Rock Type\"], drt[\"Counts\"]) \nplt.ylabel(\"DOMINANT ROCK TYPE\", fontsize=25) \nplt.xticks(fontsize=15)\nplt.xlabel(\"COUNTS\", fontsize=25) \nplt.yticks(fontsize=15)\nplt.title(\"DOMINANT ROCK TYPES AND THEIR COUNTS\", fontsize=30)\n\n# Displaying Bar Chart \nplt.show() ","43bfeca9":"# Counting the duplicates in Tectonic Setting columN\n\nts = data.pivot_table(index = [\"Tectonic Setting\"], aggfunc = 'size') \nts = ts.reset_index()\nts.columns= [\"Tectonic Setting\", \"Counts\"]\nprint(ts)","f199e7ab":"# Creating Donut Plot\nfig = plt.figure(figsize =(15, 15)) \ncircle = plt.Circle( (0,0), 0.5, color='white')\nplt.pie(ts[\"Counts\"], labels=ts[\"Tectonic Setting\"])\np=plt.gcf()\np.gca().add_artist(circle)\nplt.legend(ts[\"Counts\"], fontsize=20)\nplt.title(\"TECTONIC SETTINGS AND THEIR COUNTS\",fontsize=25)\n\n# Displaying Donut Plot\nplt.show() ","8e00da9c":"#Input Features\nx = data.drop(columns=[\"Name\", \"Type\", \"Last Known Eruption\"])\nprint(x)","56052e85":"#Output features\ny = data[[\"Type\"]]\nprint(y)","ba972b28":"#Input Features - Label Encoding\nfrom sklearn.preprocessing import LabelEncoder \nle = LabelEncoder() \nx = x.apply(le.fit_transform)\nprint(x)","5f96ab9f":"#Output Features - Label Encoding\ny = le.fit_transform(y) \nprint(y)","c1cb5c49":"#train-test split\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.1, random_state=42)","3a92a2db":"#Training ML model and Finding its accuracy\nfrom sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier(random_state=0, n_estimators=100, criterion='gini')\nrfc.fit(x_train, y_train)\ny_rfc = rfc.predict(x_test)\nfrom sklearn.metrics import accuracy_score\nprint(accuracy_score(y_test, y_rfc))","a6c1dfd0":"# TRAINING ML MODEL AND FINDING ITS ACCURACY","c4599101":"# SPLITTING INPUT AND TARGET FEATURES","92636ae8":"# VISUALIZATION OF TOP 20 COUNTRIES HAVING HIGHER NUMBER OF VOLCANOES USING PIE CHART","73f60b2d":"# VISUALIZATION OF REGIONS HAVING HIGHER NUMBER OF VOLCANOES TO THE LOWEST BY DONUT PLOT","c7193a09":"# DISPLAYING COUNTRIES HAVING VOLCANOES FROM HIGHEST TO THE LOWEST","4b7f1436":"# VISUALIZING DIFFERENT TYPES OF VOLCANOES IN DIFFERENT REGIONS AND COUNTRIES","729f399c":"# DISPLAYING SECOND SET OF 20 COUNTRIES HAVING HIGHER NUMBER OF VOLCANOES","40e9de2f":"# VISUALIZING A SET OF 20 COUNTRIES HAVING LEAST NUMBER OF VOLCANOES USING DONUT PLOT ","cdaecbf0":"# VISUALIZATION OF THIRD SET OF 20 COUNTRIES USING LINEAR PLOT WITH CUSTOMIZATIONS","f645c8f0":"# CHECKING THE PRESENCE OF NULL VALUES","688dda94":"# VISUALIZATION OF TECTONIC SETTING BY USING DONUT PLOT","f685ee70":"# VISUALIZING DIFFERENT TYPES OF VOLCANOES IN DIFFERENT REGIONS","8b6b09b6":"# DISPLAYING THIRD SET OF 20 COUNTRIES HAVING HIGHER NUMBER OF VOLCANOES","73d93c56":"# COUNTING THE DUPLICATES IN TECTONIC SETTING COLUMN","6cc80843":"# COUNTING THE DUPLICATES IN REGION COLUMN","34d67e7b":"# VISUALIZING DIFFERENT TYPES OF VOLCANOES IN DIFFERENT COUNTRIES","454ae98a":"# DISPLAYING DIFFERENT TYPES OF VOLCANOES AND THEIR COUNTS","38dd75e5":"# LABEL ENCODING","81116cd9":"# DATA PREPARATION - \"TYPE\" COLUMN","1b0a07db":"# DROPPING THE ROWS WHICH CONTAIN NULL VALUES","14d57d8d":"# VISUALIZATION OF VOLCANOES WITH RESPECT TO COUNTRIES, REGIONS, LATITUDE AND LONGITUDE","8d163d4b":"# VISUALIZING DIFFERENT TYPES OF VOLCANOES AND THEIR COUNTS USING BAR CHART","275d9548":"# DISPLAYING SET OF 20 COUNTRIES HAVING LEAST NUMBER OF VOLCANOES","11981e48":"# COUNTING THE DUPLICATES IN COUNTRY COLUMN","4a66a2a9":"# DISPLAYING THE DATASET USING PANDAS","0ae95e2a":"# DROPPING THE NUMBER COLUMN","a7b2b81e":"# COUNTING THE DUPLICATES IN TYPE COLUMN","b38cc763":"# DISPLAYING REGIONS HAVING HIGHER NUMBER OF VOLCANOES TO THE LOWEST","e0a65dad":"# COUNTING THE DUPLICATES IN DOMINANT ROCK TYPE COLUMN","a8da7836":"# COUNTING THE DUPLICATES IN ACTIVITY EVIDENCE COLUMN","d40f78ce":"# TRAIN-TEST SPLIT","c30b935e":"# VISUALIZING DIFFERENT DOMINANT ROCK TYPES AND THEIR COUNTS USING HORIZONTAL BAR CHART","ef5816a2":"# DISPLAYING TOP 20 COUNTRIES HAVING HIGHER NUMBER OF VOLCANOES","3ae3ec60":"# VISUALIZATION OF SECOND SET OF 20 COUNTRIES USING STACK PLOT"}}