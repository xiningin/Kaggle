{"cell_type":{"7db4a2f0":"code","8ddaa425":"code","e232ca11":"code","ca59e5c0":"code","936ec4ba":"code","40bdde10":"code","a3203aa2":"code","b738e9d3":"code","ff8ab915":"code","14cd0f8b":"code","08be2d48":"code","e8ca075b":"code","1e633ab7":"code","ee3368fb":"code","ec162aac":"code","750afc65":"code","fbeab0de":"code","840213d8":"code","869cb28d":"code","3a53957d":"code","d4b781e9":"code","3489981c":"code","451aa591":"code","52047a1b":"code","a6874564":"code","a57dae53":"markdown","fbd63097":"markdown"},"source":{"7db4a2f0":"import numpy as np\nimport os\nimport pandas as pd\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sn; sn.set(font_scale=1.4)\nfrom sklearn.utils import shuffle\nimport matplotlib.pyplot as plt           \nimport cv2\nimport tensorflow as tf                \nfrom tqdm import tqdm\nfrom IPython.display import FileLink\nfrom sklearn.utils import class_weight","8ddaa425":"train_dir = '..\/input\/chest-xray-pneumonia\/chest_xray\/train'\ntest_dir = '..\/input\/chest-xray-pneumonia\/chest_xray\/test'\nval_dir = '..\/input\/chest-xray-pneumonia\/chest_xray\/val'","e232ca11":"img = cv2.imread(train_dir + '\/' + 'NORMAL\/' + 'IM-0128-0001.jpeg')\nimg.shape","ca59e5c0":"normal_train_images = len(os.listdir(os.path.join(train_dir, os.listdir(train_dir)[1])))\nnormal_train_images","936ec4ba":"pneumonia_train_images = len(os.listdir(os.path.join(train_dir, os.listdir(train_dir)[0])))\npneumonia_train_images","40bdde10":"class_name = ['NORMAL', 'PNEUMONIA']\nactual_numbers = [normal_train_images, pneumonia_train_images]\nplt.figure(figsize = (10,6))\nplt.bar(class_name, actual_numbers)","a3203aa2":"pneumonia_test_images = len(os.listdir(os.path.join(test_dir, os.listdir(test_dir)[1])))\npneumonia_test_images","b738e9d3":"labels = ['NORMAL', 'PNEUMONIA']","ff8ab915":"batch_size = 32\nimg_height = 400\nimg_width = 400","14cd0f8b":"train_ds = tf.keras.preprocessing.image_dataset_from_directory(\n  train_dir,\n  validation_split=0.2,\n  subset=\"training\",\n  seed=123,\n  image_size=(img_height, img_width),\n  batch_size=batch_size)","08be2d48":"val_ds = tf.keras.preprocessing.image_dataset_from_directory(\n  test_dir,\n  seed=123,\n  image_size=(img_height, img_width),\n  batch_size=batch_size)","e8ca075b":"class_names = train_ds.class_names\nclass_names","1e633ab7":"label_names = {'NORMAL': 0, 'PNEUMONIA': 1}","ee3368fb":"class_weight = {label_names['NORMAL'] : 3, label_names['PNEUMONIA'] : 1}","ec162aac":"import matplotlib.pyplot as plt\n\nplt.figure(figsize=(12, 10))\nfor images, labels in train_ds.take(1):\n  for i in range(16):\n    ax = plt.subplot(4, 4, i + 1)\n    plt.imshow(images[i].numpy().astype(\"uint8\"))\n    plt.title(class_names[labels[i]])\n    plt.axis(\"off\")","750afc65":"normalization_layer = tf.keras.layers.experimental.preprocessing.Rescaling(1.\/255)","fbeab0de":"normalized_ds = train_ds.map(lambda x, y: (normalization_layer(x), y))\nimage_batch, labels_batch = next(iter(normalized_ds))\nfirst_image = image_batch[0]\n# Notice the pixels values are now in `[0,1]`.\nprint(np.min(first_image), np.max(first_image))","840213d8":"# AUTOTUNE = tf.data.AUTOTUNE\n\n# train_ds = train_ds.cache().prefetch(buffer_size=AUTOTUNE)\n# val_ds = val_ds.cache().prefetch(buffer_size=AUTOTUNE)","869cb28d":"data_augmentation = tf.keras.Sequential(\n  [\n    tf.keras.layers.experimental.preprocessing.RandomFlip(\"horizontal\", \n                                                 input_shape=(img_height, \n                                                              img_width,\n                                                              3)),\n    tf.keras.layers.experimental.preprocessing.RandomRotation(0.1),\n    tf.keras.layers.experimental.preprocessing.RandomZoom(0.1),\n  ]\n)","3a53957d":"model = tf.keras.Sequential([\n  data_augmentation,\n  tf.keras.layers.experimental.preprocessing.Rescaling(1.\/255),\n  tf.keras.layers.Conv2D(16, 3, activation='relu'),\n  tf.keras.layers.MaxPooling2D(),\n  tf.keras.layers.Conv2D(16, 3, activation='relu'),\n  tf.keras.layers.MaxPooling2D(),\n  tf.keras.layers.Flatten(),\n  tf.keras.layers.Dense(64, activation='relu'),\n  tf.keras.layers.Dropout(0.5),\n  tf.keras.layers.Dense(1, activation = 'sigmoid')\n])","d4b781e9":"model.compile(\n  optimizer='adam',\n  loss = 'binary_crossentropy',\n  metrics=['accuracy'])","3489981c":"history = model.fit(train_ds,validation_data=val_ds,epochs=30, class_weight = class_weight)","451aa591":"def plotLearningCurve(history,epochs):\n  epochRange = range(1,epochs+1)\n  plt.figure(figsize = (12,6))\n  plt.plot(epochRange,history.history['accuracy'])\n  plt.plot(epochRange,history.history['val_accuracy'])\n  plt.title('Model Accuracy')\n  plt.xlabel('Epoch')\n  plt.ylabel('Accuracy')\n  plt.legend(['Train','Validation'],loc='upper left')\n  plt.show()\n\n  plt.figure(figsize = (12,6))\n  plt.plot(epochRange,history.history['loss'])\n  plt.plot(epochRange,history.history['val_loss'])\n  plt.title('Model Loss')\n  plt.xlabel('Epoch')\n  plt.ylabel('Loss')\n  plt.legend(['Train','Validation'],loc='upper left')\n  plt.show()","52047a1b":"plotLearningCurve(history, 30)","a6874564":"model.save('pneumonia_model_new.h5')\n\nFileLink(r'pneumonia_model_new.h5')","a57dae53":"## No of normal images in train folder","fbd63097":"## No of images with pneumonia in train folder"}}