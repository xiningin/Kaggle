{"cell_type":{"91525a6d":"code","e053bbc4":"code","1cf891a4":"code","1791857d":"code","c55b3cfb":"code","43970868":"code","af19ab3c":"code","3a96de88":"code","d7d34003":"code","6dd3eaf9":"code","1517d79b":"code","df966880":"code","e120d731":"code","d18ce88e":"code","4cb83968":"code","4c165a81":"code","3ad064e4":"code","43415165":"markdown","af6b77d4":"markdown","f864f2a7":"markdown","7ff7b10e":"markdown"},"source":{"91525a6d":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n%matplotlib notebook","e053bbc4":"df = pd.read_csv('..\/input\/campeonato-brasileiro-de-futebol\/campeonato-brasileiro-full.csv')\ndf.head()","1cf891a4":"df['Mandante'].unique()","1791857d":"df['Mandante'] = df['Mandante'].str.title()\ndf['Visitante'] = df['Visitante'].str.title()\ndf['Vencedor'] = df['Vencedor'].str.title()\n\ndf['Mandante'].unique()","c55b3cfb":"replacements = {'Atl\u00e9tico-Mg': 'Atl\u00e9tico-MG',\n                'Am\u00e9rica-Mg': 'Am\u00e9rica-MG',\n                'Athl\u00e9tico-Pr': 'Athletico-PR',\n                'Botafogo-Rj': 'Botafogo-RJ',\n                'Botafogo-Sp': 'Botafogo-SP',\n                'Am\u00e9rica-Rn': 'Am\u00e9rica-RN',\n                'Atl\u00e9tico-Go': 'Atl\u00e9tico-GO',\n                'Csa': 'CSA'}\n\ndf['Mandante'] = df['Mandante'].replace(replacements)\ndf['Visitante'] = df['Visitante'].replace(replacements)\ndf['Vencedor'] = df['Vencedor'].replace(replacements)\ndf['Mandante'].unique()","43970868":"df.head()","af19ab3c":"df['Data'] = df['Data'].astype('datetime64')\ndf = df[df['Data'] > '2003']\ndf.head()","3a96de88":"cp = pd.DataFrame({'Ano': [year for year in range(2003, 2021)],\n                  'Partidas': 0,\n                  'Vit\u00f3rias do mandante': 0,\n                  'Vit\u00f3rias do visitante': 0,\n                  'Empates': 0,\n                  'Gols do Mandante': 0,\n                  'Gols do Visitante': 0})\ncp = cp.set_index('Ano')\n\nfor index, row in df.iterrows():\n    year = row['Data'].year\n    if year == 2021:\n        year = 2020\n    home_goal = row['Mandante Placar']\n    away_goal = row['Visitante Placar']\n    cp.loc[year]['Partidas'] += 1\n    cp.loc[year]['Gols do Mandante'] += home_goal\n    cp.loc[year]['Gols do Visitante'] += away_goal\n    if home_goal == away_goal:\n        cp.loc[year]['Empates'] += 1\n    elif home_goal > away_goal:\n        cp.loc[year]['Vit\u00f3rias do mandante'] += 1\n    else:\n        cp.loc[year]['Vit\u00f3rias do visitante'] += 1\n        \ncp","d7d34003":"for col in list(cp.columns)[1:]:\n    cp[col] = cp[col]\/cp['Partidas']\n    \ncp","6dd3eaf9":"cp['Aprov. mandante'] = (3*cp['Vit\u00f3rias do mandante'] + cp['Empates'])\/3\ncp['Aprov. visitante'] = (3*cp['Vit\u00f3rias do visitante'] + cp['Empates'])\/3\ncp['M\/V'] = cp['Aprov. visitante']\/cp['Aprov. mandante']","1517d79b":"cp","df966880":"plt.figure(figsize=(9,6))\n\nplt.plot(np.arange(len(cp.index)), cp['Vit\u00f3rias do mandante'], 'o-', label='Vit\u00f3rias do mandante', markersize=4);\nplt.plot(np.arange(len(cp.index)), cp['Vit\u00f3rias do visitante'], 'o-', label='Vit\u00f3rias do visitante', markersize=4);\nplt.plot(np.arange(len(cp.index)), cp['Empates'], 'o-', label='Empates', markersize=4);\nplt.plot(np.arange(len(cp.index)), cp['M\/V'], 'o-', label='Aproveitamento m\u00e9dio Visitante\/Mandante', markersize=4);\n\nplt.xticks(np.arange(len(cp.index)), cp.index, rotation=45);\n\nax = plt.gca()\n\nax.tick_params(labelright = True, right = True, left = True, bottom = True);\nplt.gca().set_yticklabels(['{:.0f}%'.format(x*100) for x in plt.gca().get_yticks()]);\n\nplt.legend(frameon=False);\nplt.title('Desempenho de mandantes e visitantes na S\u00e9rie A do Campeonato Brasileiro');\n\nplt.savefig('plot.png')","e120d731":"plt.figure(figsize=(9,6))\n\nplt.plot(np.arange(len(cp.index)), cp['Vit\u00f3rias do mandante'], 'o-', label='Home team win', markersize=4);\nplt.plot(np.arange(len(cp.index)), cp['Vit\u00f3rias do visitante'], 'o-', label='Away team win', markersize=4);\nplt.plot(np.arange(len(cp.index)), cp['Empates'], 'o-', label='Draw', markersize=4);\nplt.plot(np.arange(len(cp.index)), cp['M\/V'], 'o-', label='Average success rate away\/home', markersize=4);\n\nplt.xticks(np.arange(len(cp.index)), cp.index, rotation=45);\n\nax = plt.gca()\n\nax.tick_params(labelright = True, right = True, left = True, bottom = True);\nplt.gca().set_yticklabels(['{:.0f}%'.format(x*100) for x in plt.gca().get_yticks()]);\n\nplt.legend(frameon=False);\nplt.title('Performance of home and away teams in Campeonato Brasileiro S\u00e9rie A');\n\nplt.savefig('assignment4.png')","d18ce88e":"import matplotlib.ticker as mtick\n\n\nfig, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(9, 12))\n\nax1.plot(np.arange(len(cp.index)), \n         cp['Vit\u00f3rias do mandante'], 'o-', \n         label='Home team win', \n         markersize=4);\n\nax2.plot(np.arange(len(cp.index)), \n         cp['Vit\u00f3rias do visitante'], 'o-', \n         label='Away team win', \n         markersize=4, \n         color='#ff7f0e');\n\nax3.plot(np.arange(len(cp.index)), \n         cp['Empates'], 'o-', \n         label='Draw', \n         markersize=4, \n         color='#2ca02c');\n\nax4.plot(np.arange(len(cp.index)), \n         cp['M\/V'], 'o-', \n         label='Average success rate away\/home', \n         markersize=4, \n         color='#d62728');\n\nfor ax in [ax1, ax2, ax3, ax4]:\n    ax.tick_params(left = True, right = True, labelright = True, bottom = True);\n    ax.yaxis.set_major_formatter(mtick.PercentFormatter(1.0, decimals=False))\n    ax.set_xticks([]);\n    ax.legend(frameon=False, loc='upper left');\n    ax.margins(y=0.15)\n\ntitle = \"Performance of home and away teams in Campeonato Brasileiro S\u00e9rie A\"\nax1.set_title(title);\nax4.set_xlabel('year');\nax4.set_xticks(np.arange(len(cp.index)));\nax4.set_xticklabels(cp.index, rotation=45);\n\nwhere = cp['Vit\u00f3rias do mandante']>=cp.loc[2020]['Vit\u00f3rias do mandante']\nax1.fill_between(np.arange(len(cp.index)), \n                 cp.loc[2020]['Vit\u00f3rias do mandante'], \n                 cp['Vit\u00f3rias do mandante'], \n                 alpha=0.25, \n                 where=where, \n                 interpolate=True);\n\nwhere = cp['Vit\u00f3rias do visitante']<=cp.loc[2020]['Vit\u00f3rias do visitante']\nax2.fill_between(np.arange(len(cp.index)), \n                 cp.loc[2020]['Vit\u00f3rias do visitante'], \n                 cp['Vit\u00f3rias do visitante'], \n                 alpha=0.25, \n                 color='#ff7f0e', \n                 where=where, \n                 interpolate=True)\n\nwhere = cp['Empates']<=cp.loc[2020]['Empates']\nax3.fill_between(np.arange(len(cp.index)), \n                 cp.loc[2020]['Empates'], \n                 cp['Empates'], \n                 alpha=0.25, \n                 color='#2ca02c', \n                 where=where, \n                 interpolate=True)\n\nwhere = cp['M\/V']<=cp.loc[2020]['M\/V']\nax4.fill_between(np.arange(len(cp.index)), \n                 cp.loc[2020]['M\/V'], \n                 cp['M\/V'], \n                 alpha=0.25, \n                 color='#d62728', \n                 where=where, \n                 interpolate=True)\n\nplt.tight_layout();\nplt.savefig(\"assignment-4\");","4cb83968":"fig, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(9, 12))\n\nax1.plot(np.arange(len(cp.index)), \n         cp['Vit\u00f3rias do mandante'], 'o-', \n         label='Vit\u00f3rias do mandante', \n         markersize=4);\n\nax2.plot(np.arange(len(cp.index)), \n         cp['Vit\u00f3rias do visitante'], 'o-', \n         label='Vit\u00f3rias do visitante', \n         markersize=4, \n         color='#ff7f0e');\n\nax3.plot(np.arange(len(cp.index)), \n         cp['Empates'], 'o-', \n         label='Empates', \n         markersize=4, \n         color='#2ca02c');\n\nax4.plot(np.arange(len(cp.index)), \n         cp['M\/V'], 'o-', \n         label='Aproveitamento m\u00e9dio visitante\/mandante', \n         markersize=4, \n         color='#d62728');\n\nfor ax in [ax1, ax2, ax3, ax4]:\n    ax.tick_params(left = True, right = True, labelright = True, bottom = True);\n    ax.yaxis.set_major_formatter(mtick.PercentFormatter(1.0, decimals=False))\n    ax.set_xticks([]);\n    ax.legend(frameon=False, loc='upper left');\n    ax.margins(y=0.15)\n\ntitle = \"Performance de times mandantes e visitantes no Campeonato Brasileiro S\u00e9rie A\"\nax1.set_title(title);\nax4.set_xlabel('ano');\nax4.set_xticks(np.arange(len(cp.index)));\nax4.set_xticklabels(cp.index, rotation=45);\n\nwhere = cp['Vit\u00f3rias do mandante']>=cp.loc[2020]['Vit\u00f3rias do mandante']\nax1.fill_between(np.arange(len(cp.index)), \n                 cp.loc[2020]['Vit\u00f3rias do mandante'], \n                 cp['Vit\u00f3rias do mandante'], \n                 alpha=0.25, \n                 where=where, \n                 interpolate=True);\n\nwhere = cp['Vit\u00f3rias do visitante']<=cp.loc[2020]['Vit\u00f3rias do visitante']\nax2.fill_between(np.arange(len(cp.index)), \n                 cp.loc[2020]['Vit\u00f3rias do visitante'], \n                 cp['Vit\u00f3rias do visitante'], \n                 alpha=0.25, \n                 color='#ff7f0e', \n                 where=where, \n                 interpolate=True)\n\nwhere = cp['Empates']<=cp.loc[2020]['Empates']\nax3.fill_between(np.arange(len(cp.index)), \n                 cp.loc[2020]['Empates'], \n                 cp['Empates'], \n                 alpha=0.25, \n                 color='#2ca02c', \n                 where=where, \n                 interpolate=True)\n\nwhere = cp['M\/V']<=cp.loc[2020]['M\/V']\nax4.fill_between(np.arange(len(cp.index)), \n                 cp.loc[2020]['M\/V'], \n                 cp['M\/V'], \n                 alpha=0.25, \n                 color='#d62728', \n                 where=where, \n                 interpolate=True)\n\nplt.tight_layout();\nplt.savefig(\"brasileirao.png\");","4c165a81":"clubes = pd.DataFrame(columns = ['Clube', 'P', 'VM', 'VV', 'EM', 'EV']).set_index('Clube')\n\nfor index, row in df.iterrows():\n    home = row['Mandante'] + ' ' + str(row['Data'].year)\n    away = row['Visitante'] + ' ' + str(row['Data'].year)\n    if home not in clubes.index:\n        clubes.loc[home] = [0]*5\n    if away not in clubes.index:\n        clubes.loc[away] = [0]*5\n    home_goal = row['Mandante Placar']\n    away_goal = row['Visitante Placar']\n    clubes.loc[home]['P'] += 1\n    clubes.loc[away]['P'] += 1\n    if home_goal == away_goal:\n        clubes.loc[home]['EM'] += 1\n        clubes.loc[away]['EV'] += 1\n    elif home_goal > away_goal:\n        clubes.loc[home]['VM'] += 1\n    else:\n        clubes.loc[away]['VV'] += 1\n        \nclubes['AM'] = 2*(3*clubes['VM'] + clubes['EM'])\/(3*clubes['P'])\nclubes['AV'] = 2*(3*clubes['VV'] + clubes['EV'])\/(3*clubes['P'])\nclubes['AP'] = (clubes['AM'] + clubes['AV'])\/2\n\nclubes.head()","3ad064e4":"clubes","43415165":"# Impacto da falta de torcida nos resultados do Campeonato Brasileiro de Futebol 2020\n\nNesse trabalho em curso (aguardando o final do campeonato para an\u00e1lise mais confi\u00e1vel), espero estimar o impacto da falta de torcida nas v\u00edt\u00f3rias de times mandantes e visitantes. O campeonato sem torcida \u00e9 uma oportunidade para isolar a vari\u00e1vel torcida na vantagem do time mandante.","af6b77d4":"## Sugest\u00e3o de trabalhos futuros\n\nFuturamente, seria poss\u00edvel realizar an\u00e1lises mais elaboradas, utilizando a torcida como par\u00e2metro mas avaliando tamb\u00e9m os fatores de tempo de viagem e familiaridade com o campo, e tamb\u00e9m analisando uma gama maior de ligas.\n\nPoderia ser feita, por exemplo, uma compara\u00e7\u00e3o entre ligas de pa\u00edses com dimens\u00f5es continentais (como Brasil e EUA) com ligas de pa\u00edses menores (como Alemanha e Espanha), no intuito de averiguar-se o fator viagem.","f864f2a7":"## Resultados preliminares\n\nInicialmente, pude notar que o campeonato de 2017 foi bastante fora da curva, j\u00e1 que apresentou uma vantagem do time mandante bem inferior \u00e0 m\u00e9dia. Ainda n\u00e3o encontrei a explica\u00e7\u00e3o para esse fato, no entanto deve haver alguma, j\u00e1 que os anos seguintes n\u00e3o seguiram o mesmo padr\u00e3o. O ano de 2020 tamb\u00e9m se destaca, o que se explica pelo fator torcida.","7ff7b10e":"### Disclaimer\n\nEsse \u00e9 meu primeiro projeto pessoal de Data Science, e o desenvolvi como parte de um curso, portanto meu c\u00f3digo com certeza tem muito a melhorar."}}