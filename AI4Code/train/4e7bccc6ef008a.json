{"cell_type":{"41d3a58f":"code","25017bdd":"code","0b61cbe1":"code","70992cab":"code","2b6d6d64":"code","671143b3":"code","30f164e7":"code","9c030324":"code","11953467":"code","026f6e9c":"code","2c639c9c":"code","47f449f2":"code","65542b5d":"code","c0287744":"code","932bf5e0":"code","1f40a867":"code","bc8304dc":"code","34f9890e":"code","5e5d590a":"code","90c6fbed":"markdown","382b76f1":"markdown","640e7d0d":"markdown","2e78bdcb":"markdown","9de2846b":"markdown","1f9cffe3":"markdown","01765cee":"markdown","70372503":"markdown"},"source":{"41d3a58f":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport matplotlib.pyplot as plt\nprint(os.listdir(\"..\/input\"))","25017bdd":"country = pd.read_csv('..\/input\/who_suicide_statistics.csv')","0b61cbe1":"country.head()","70992cab":"# drop NaNs\ncountry.dropna(axis=0,inplace =True)\ncountry.isnull().sum()","2b6d6d64":"# finding duplicates\nDub = country.duplicated()\nnp.unique(Dub)","671143b3":"# Labeling by using LabelEncoder\nfrom sklearn import preprocessing\n\nle = preprocessing.LabelEncoder()\ncountry.sex = le.fit_transform(country.sex) # female:0 , male:1\ncountry.age = le.fit_transform(country.age) # 15-24: 0, 25-34:1, 35-54:2 , 5-14:3, 55-74:4, 75+:5\n\ncountry.head()","30f164e7":"bins = [3, 0, 1, 2, 4, 5]\nn = len(bins)\nagedata = [country[country['age']==bins[i]]['suicides_no'].values.sum() for i in range(n)]\n\nAge_df = pd.DataFrame(agedata)\nAge_df.index = ('5-14 years','15-24 years','25-34 years','35-54 years','55-74 years','75+ years')\nAge_df.columns = ['Sum of suicides_no']\nAge_df","9c030324":"Age_df.max()","11953467":"n = np.arange(6)\nplt.bar(n, Age_df['Sum of suicides_no'] , 0.5)\n\nplt.ylabel('Suicides')\nplt.xlabel('Year groups')\nplt.xticks(n, Age_df.index)\nplt.title('Suicides based on age groups')\nplt.yticks([500000,1000000,1500000,2000000,2500000,3000000],\n           ['0.5M','1M','1.5M','2M','2.5M','3M'])\nplt.autoscale(enable=True, axis='x', tight=True)\nplt.show()","026f6e9c":"bins = [3, 0, 1, 2, 4, 5]\nn = len(bins)\nFemale = country[country['sex']==0]\nfemaledata = [Female[Female['age']==bins[i]]['suicides_no'].values.sum() for i in range(n)]\n\nMale = country[country['sex']==1]\nmaledata = [Male[Male['age']==bins[i]]['suicides_no'].values.sum() for i in range(n)]","2c639c9c":"Female_df = pd.DataFrame(femaledata)\nFemale_df.index = ('5-14 years','15-24 years','25-34 years','35-54 years','55-74 years','75+ years')\nFemale_df.columns = ['Sum of female suicides_no']\n\nMale_df = pd.DataFrame(maledata)\nMale_df.index = Female_df.index\nMale_df.columns = ['Sum of male suicides_no']\n\nSex_concat = pd.concat([Male_df, Female_df], axis = 1)\nSex_concat","47f449f2":"fig, ax = plt.subplots()\nn = np.arange(6)\nbar_width = 0.35\nopacity = 0.8\nrects1 = plt.bar(n, Female_df['Sum of female suicides_no'], bar_width,\n                 alpha=opacity,\n                 color='red',\n                 label='Female')\n \nrects2 = plt.bar(n + bar_width, Male_df['Sum of male suicides_no'], bar_width,\n                 alpha=opacity,\n                 color='blue',\n                 label='Male')\n\nax.set_ylabel('Suicides')\nax.set_title('Suicides based on gender and age')\nax.set_xticks(n)\nax.set_xticklabels(Sex_concat.index)\nplt.yticks([500000,1000000,1500000,2000000,2500000],\n              ['0.5M','1M','1.5M','2M','2.5M'])\nplt.autoscale(enable=True, axis='x', tight=True)\nax.legend()\nplt.show()","65542b5d":"US = country[country['country']=='United States of America']\nyears = np.unique(US.year)\n\na = []\ndict = {}\nfor i in years:\n    sum = US[US['year']==i]['suicides_no'].values.sum()\n    dict[i] = sum \na.append(dict)\n\nUSyear_df = pd.DataFrame(a)\nUSyear_df = np.transpose(USyear_df)\nUSyear_df.columns = ['Suicides'] \n\nplt.plot(USyear_df)\nplt.title('Suicides in United States over years')\nplt.xlabel('years')\nplt.ylabel('Suicides')\nplt.yticks([27000,30000,33000,36000,39000,42000,45000],\n           ['27K','30K','33K','36K','39K','42K','45K'])\nplt.show()","c0287744":"RUSSIA = country[country['country']=='Russian Federation']\nyears = np.unique(RUSSIA.year)\n\na = []\ndict = {}\nfor i in years:\n    sum = RUSSIA[RUSSIA['year']==i]['suicides_no'].values.sum()\n    dict[i] = sum \na.append(dict)\nRUSyear_df = pd.DataFrame(a)\nRUSyear_df = np.transpose(RUSyear_df)\nRUSyear_df.columns = ['Suicides'] \n\nplt.plot(RUSyear_df)\nplt.title('Suicides in Russia over years')\nplt.xlabel('years')\nplt.ylabel('Suicides')\nplt.yticks([10000,20000,30000,40000,50000,60000],\n           ['10K','20K','30K','40K','50K','60K'])\nplt.show()","932bf5e0":"plt.plot(USyear_df , ls = '-', lw = 2)\nplt.plot(RUSyear_df , ls = '--', lw = 2)\nplt.title('Suicides over years- RUSSIA VS US')\nplt.xlabel('years')\nplt.ylabel('Suicides')\nplt.yticks([10000,20000,30000,40000,50000,60000],\n           ['10K','20K','30K','40K','50K','60K'])\nplt.legend(['US','RUSSIA'] , loc ='best')\nplt.grid()\nplt.show()","1f40a867":"# Linear regression for US\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn.model_selection import train_test_split\n\n# Use only one feature: year\nUS_data = US.values\nyear = US_data[:,1]\nx = np.unique(year).reshape(-1,1)\ny = USyear_df.Suicides.values\n\nx_train, x_test, y_train, y_test = train_test_split(x,y, test_size =0.3, random_state=42)","bc8304dc":"reg = LinearRegression()\nreg.fit(x_train, y_train)\ny_pred = reg.predict(x_test)","34f9890e":"# Plot outputs\nplt.scatter(x_test, y_test,  color='black')\nplt.plot(x_test, y_pred, color='blue', linewidth=3)\nplt.xlabel('Years')\nplt.ylabel('No of Suicides')\nplt.yticks([25000,30000,35000,40000,45000],['25K','30K','35K','40K','45K'])\nplt.show()","5e5d590a":"# The coefficients\nprint('Coefficients: \\n', reg.coef_)\n# Explained variance score: 1 is perfect prediction\nprint('Variance score: %.2f' % r2_score(y_test, y_pred))","90c6fbed":"## PREPROCESSING","382b76f1":"## VISUALIZATION","640e7d0d":"SUICIDES IN US:","2e78bdcb":"SUICIDES IN RUSSIA:","9de2846b":"RUSSIA VS US:","1f9cffe3":"## LINEAR REGRESSION","01765cee":"SUICIDES BASED ON AGE GROUPS:","70372503":"SUICIDES BASED ON GENDER AND AGE:"}}