{"cell_type":{"c6dc21dd":"code","52373f3c":"code","7dfc07f4":"code","459a630f":"code","918e5e8d":"code","829522c1":"code","df9aaa24":"code","da339536":"code","48a447fd":"code","9a9b2e86":"code","94e72d4e":"code","a5523109":"code","ccb23780":"code","df76a986":"code","9891f67d":"code","43db0f55":"code","126ef0a8":"code","c27e759d":"code","5496b807":"code","c1036098":"code","0becd5d7":"code","e3385f6f":"code","bb286661":"code","8f42faba":"code","3d9dff19":"code","b7423ae8":"code","ad9efe1e":"code","e8841d7b":"code","fa4e41bb":"code","3e525eb4":"code","bb2ff035":"code","f4902c3a":"code","d63003c5":"code","4ce0124b":"code","b5b765ef":"code","7aecbe5a":"code","3514133b":"code","0204e4ab":"code","09a0c494":"code","02ba19d1":"code","ed25f6f3":"code","64854f21":"code","b9494c62":"code","085beb92":"code","fd19c9b4":"code","fd295c2f":"code","3748ea04":"code","70a930cd":"code","62ab2873":"code","5dbeea6f":"code","566443ac":"code","499a272f":"code","cd129597":"code","6f3e57f5":"code","b820bb7a":"code","96263bf8":"code","2216c736":"code","384ce3bd":"code","c8e6879a":"code","b693a42a":"code","07cae066":"code","3181acc2":"code","e5a92db5":"code","203a62e6":"code","73a183b0":"code","9ba2e753":"code","8db659b4":"code","742a40ea":"code","0ecf284f":"code","a65d5e9c":"code","6303a09c":"code","236b079f":"code","592c936e":"code","d5729014":"code","db137fc6":"code","cb55e3f6":"code","b97a7f98":"code","19216d44":"code","a5d67435":"code","8cbaf935":"code","f6f7817d":"code","6fb16e3a":"code","402f036b":"code","745bcc8c":"code","85de639c":"code","e2ada212":"code","87ce9e86":"code","9063d77d":"code","e634c043":"code","6a855aff":"code","8276add9":"code","3a546de1":"code","45ee4287":"code","121f71f6":"code","2c342c6b":"code","5d3099ce":"code","9adcbc33":"code","172fdf68":"code","35510403":"code","a5f5d9a1":"code","1bc71af9":"code","e470fa58":"code","13a6ed50":"code","46d29f02":"code","4ad79533":"code","7c4bc6ca":"code","08c1e97f":"code","92645d17":"code","3722cc04":"code","88348929":"code","fec78559":"code","2146b060":"code","ffc656c8":"code","dc002081":"code","a32fa8a7":"code","a93812b8":"code","97b4fd30":"code","14ad0054":"code","e762798f":"code","14bc28cb":"code","59dee63e":"code","ccc8daf7":"code","32834027":"code","93845442":"code","b2d7cd8a":"code","e6556b68":"code","a2dabb8e":"code","2c354737":"code","bfdd8ae5":"code","93f913c6":"code","a08fdd3f":"code","90055a24":"code","50c765c9":"code","6b7964ac":"code","9733e94f":"code","88b89655":"code","ee847994":"code","3d6ccee0":"code","051d36f7":"code","b8549772":"code","1f3d2a36":"code","0c604ee3":"markdown","c9b26173":"markdown","5b410d25":"markdown","d80a3448":"markdown","01f44ca0":"markdown","1d5e5fb5":"markdown","c5b6f0c8":"markdown","bb8b2c8b":"markdown","1ee28ee6":"markdown","b7fa0077":"markdown","5573cea3":"markdown","0b35162e":"markdown","89137ca3":"markdown","ccaae101":"markdown","ea4b2507":"markdown","7c0e4dde":"markdown","5ddf332a":"markdown","81752264":"markdown","e556d781":"markdown","c2fb023c":"markdown","2c7875c3":"markdown","17201549":"markdown","507f914a":"markdown","6d1356ca":"markdown","97c468bd":"markdown","ae1ea24a":"markdown","9538e299":"markdown","ca6acc8a":"markdown","4c794d52":"markdown","99860881":"markdown","13f53a86":"markdown","7c4303ee":"markdown","4ef112a8":"markdown","cf5f0fbc":"markdown","5a6786e2":"markdown"},"source":{"c6dc21dd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport statsmodels.api  as sm\nimport seaborn as sns\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.linear_model import Ridge , Lasso ,LinearRegression\nfrom sklearn.metrics import mean_squared_error, r2_score , confusion_matrix ,accuracy_score ,roc_auc_score ,roc_curve, classification_report\nfrom sklearn.model_selection import train_test_split , cross_val_score\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.preprocessing import scale,StandardScaler\nfrom sklearn.tree import DecisionTreeClassifier \nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neural_network import MLPRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn import neighbors\nfrom sklearn.svm import SVR\nfrom sklearn.svm import SVC\nfrom sklearn.linear_model import LogisticRegression\n\n\n\n\nfrom sklearn import model_selection\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import RidgeCV,LassoCV\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","52373f3c":"df = pd.read_csv(\"..\/input\/diabetes.csv\")\n","7dfc07f4":"df.head()\n","459a630f":"### MODEL VE TAHM\u0130N","918e5e8d":"#\u015eeker Hastas\u0131 =1 , Hasta Degil=0 Bunlar\u0131n say\u0131lar\u0131na bakal\u0131m\ndf['Outcome'].value_counts()","829522c1":"df.describe().T","df9aaa24":"\n\ny = df[\"Outcome\"]\nx= df.drop([\"Outcome\"], axis=1)","da339536":"x.head() ","48a447fd":"y.head()","9a9b2e86":"loj_model = LogisticRegression(solver='liblinear').fit(x,y)","94e72d4e":"## katsayimiz\nloj_model.intercept_","a5523109":"##bag\u0131ms\u0131z degi\u015fken kat say\u0131\nloj_model.coef_","ccb23780":"loj_model.predict(x)[0:10]","df76a986":"y[0:10]","9891f67d":"y_pred=loj_model.predict(x)\nconfusion_matrix(y,y_pred)","43db0f55":"#dogruluk oran\u0131m\u0131z\naccuracy_score(y,y_pred)","126ef0a8":"print(classification_report(y,y_pred))","c27e759d":"x_train,x_test , y_train ,y_test = train_test_split(x\n                                                    ,y\n                                                    ,test_size=0.30\n                                                    ,random_state=42)","5496b807":"loj_modeltuning = LogisticRegression(solver='liblinear').fit(x_train,y_train)","c1036098":"loj_model_pred=loj_modeltuning.predict(x_test)","0becd5d7":"print(accuracy_score(y_test,loj_model_pred))","e3385f6f":"cross_val_score(loj_modeltuning,x_test,y_test,cv=10).mean()","bb286661":"df.head()","8f42faba":"\n\ny = df[\"Outcome\"]\nx= df.drop([\"Outcome\"], axis=1)\nx_train, x_test , y_train ,y_test = train_test_split(x\n                                                    ,y\n                                                    ,test_size=0.30\n                                                    ,random_state=42)","3d9dff19":"knn_model = KNeighborsClassifier().fit(x_train,y_train)","b7423ae8":"knn_pred=knn_model.predict(x_test)","ad9efe1e":"knn_pred","e8841d7b":"accuracy_score(y_test,knn_pred)","fa4e41bb":"cross_val_score(knn_model,x_test,y_test,cv=100).mean()","3e525eb4":"print(classification_report(y_test,knn_pred))","bb2ff035":"from sklearn.neighbors import KNeighborsClassifier","f4902c3a":"knn = KNeighborsClassifier().fit(x_train,y_train)","d63003c5":"dir(knn)","4ce0124b":"a=np.arange(1,50)","b5b765ef":"knn_params = {\"n_neighbors\":[1,2,3,4,5,6,7,8,9,19,11,12,13,14,15,16,17],\"leaf_size\":[40,50]}\n","7aecbe5a":"knn_cv_model=GridSearchCV(knn, knn_params ,cv=10,n_jobs=-1,verbose=2).fit(x_train,y_train)","3514133b":"knn_cv_model.best_params_","0204e4ab":"knn_model_final= KNeighborsClassifier(leaf_size = 40,n_neighbors=11).fit(x_train,y_train)","09a0c494":"knn_model_pred=knn_model_final.predict(x_test)","02ba19d1":"accuracy_score(y_test,knn_model_pred)","ed25f6f3":"knn_model_final.score(x_test,y_test)","64854f21":"df.head()","b9494c62":"\n\ny = df[\"Outcome\"]\nx= df.drop([\"Outcome\"], axis=1)\nx_train, x_test , y_train ,y_test = train_test_split(x\n                                                    ,y\n                                                    ,test_size=0.30\n                                                    ,random_state=42)","085beb92":"svm_model=SVC(kernel='linear').fit(x_train,y_train)","fd19c9b4":"svm_model","fd295c2f":"svm_model_pred=svm_model.predict(x_test)","3748ea04":"#ilkel test hatam\u0131z\naccuracy_score(y_test,svm_model_pred)","70a930cd":"svm_params = {\"C\":np.arange(1,10),\"kernel\":[\"linear\",\"rbf\"] }","62ab2873":"svm_model_free = SVC()","5dbeea6f":"svm_cv_model = GridSearchCV(svm_model_free,svm_params,cv=10,n_jobs=-1,verbose=2).fit(x_train,y_train)","566443ac":"svm_cv_model.best_params_","499a272f":"svc_model_final=SVC(C=5,kernel='linear').fit(x_train,y_train)","cd129597":"svc_model_final_pred=svc_model_final.predict(x_test)","6f3e57f5":"accuracy_score(y_test,svc_model_final_pred)","b820bb7a":"df.head()","96263bf8":"\n\ny = df[\"Outcome\"]\nx= df.drop([\"Outcome\"], axis=1)\nx_train, x_test , y_train ,y_test = train_test_split(x\n                                                    ,y\n                                                    ,test_size=0.30\n                                                    ,random_state=42)","2216c736":"mlpc_model = MLPClassifier().fit(x_train,y_train)","384ce3bd":"mlpc_model.coefs_\n# Bu \u00e7\u0131kt\u0131lar sinir ag\u0131n\u0131n farkl\u0131 katmanlardaki farkl\u0131 h\u00fccrelerin birbirleriyle ili\u015fkisi ve benzer durumlar\u0131n\u0131 belirten katsay\u0131lar","c8e6879a":"?mlpc_model","b693a42a":"mlpc_pred=mlpc_model.predict(x_test)","07cae066":"accuracy_score(y_test,mlpc_pred)","3181acc2":"mlpc_params = {\"alpha\": [1,2,3,4,0.01,0.001,0.03,0.00005],\n              \"hidden_layer_sizes\" : [(10,10),(100,100,100),(100,100)]}\n#hidden_layer_sizes yapay sinri aglar\u0131n\u0131n katmanlar\u0131 \n#10,10 2 katmandan olu\u015fssun 1 katmanda 10 diger katmanda 10\n#100,100,100 3 katmandan olu\u015fssun her katmanda 100 ","e5a92db5":"mlpc_model2 = MLPClassifier(solver=\"lbfgs\")","203a62e6":"mlpc_cv_model=GridSearchCV(mlpc_model2,mlpc_params,cv=10,n_jobs=-1,verbose=2).fit(x_train,y_train)","73a183b0":"mlpc_cv_model.best_params_","9ba2e753":"mlpc_final_model = MLPClassifier(solver=\"lbfgs\",alpha=2,hidden_layer_sizes=(10,10)).fit(x_train,y_train)","8db659b4":"mlpc_final_pred=mlpc_final_model.predict(x_test)","742a40ea":"accuracy_score(y_test,mlpc_final_pred)","0ecf284f":"df.head()","a65d5e9c":"\n\ny = df[\"Outcome\"]\nx= df.drop([\"Outcome\"], axis=1)\nx_train, x_test , y_train ,y_test = train_test_split(x\n                                                    ,y\n                                                    ,test_size=0.30\n                                                    ,random_state=42)","6303a09c":"cart_model = DecisionTreeClassifier().fit(x_train,y_train)","236b079f":"cart_model","592c936e":"car_pred=cart_model.predict(x_test)","d5729014":"accuracy_score(y_test,car_pred)","db137fc6":"cart_model_tuning = DecisionTreeClassifier()","cb55e3f6":"cart_params = {\"max_depth\":[1,3,5,6,7,8],\n              \"min_samples_split\":[1,3,5,10,20,50]}","b97a7f98":"cart_model_cv=GridSearchCV(cart_model_tuning,cart_params,cv=10,n_jobs=-1,verbose=2).fit(x_train,y_train)","19216d44":"cart_model_cv.best_params_","a5d67435":"cart_model_tuning_final = DecisionTreeClassifier(max_depth=5,min_samples_split=20).fit(x_train,y_train)","8cbaf935":"cart_pred2=cart_model_tuning_final.predict(x_test)","f6f7817d":"accuracy_score(y_test,cart_pred2)","6fb16e3a":"df.head()","402f036b":"\n\ny = df[\"Outcome\"]\nx= df.drop([\"Outcome\"], axis=1)\nx_train, x_test , y_train ,y_test = train_test_split(x\n                                                    ,y\n                                                    ,test_size=0.30\n                                                    ,random_state=42)","745bcc8c":"rand_model=RandomForestClassifier().fit(x_train,y_train)","85de639c":"rand_model","e2ada212":"rand_pred = rand_model.predict(x_test)\naccuracy_score(y_test,rand_pred)","87ce9e86":"rand_model_tuning=RandomForestClassifier()","9063d77d":"rand_params = {\"n_estimators\": [100,200] , \"max_features\":[3,5,7],\"min_samples_split\":[2,5,10,20]}","e634c043":"rand_model_cv = GridSearchCV(rand_model_tuning,rand_params,cv=10,n_jobs=-1,verbose=2).fit(x_train,y_train)","6a855aff":"rand_model_cv.best_params_","8276add9":"rand_modeltuning_final = RandomForestClassifier(max_features=5,min_samples_split=5,n_estimators=200).fit(x_train,y_train)","3a546de1":"rand_pred=rand_modeltuning_final.predict(x_test)","45ee4287":"accuracy_score(y_test,rand_pred)","121f71f6":"feature_imp = pd.Series(rand_modeltuning_final.feature_importances_,index=x_train.columns).sort_values(ascending=False)\nsns.barplot(x=feature_imp , y=feature_imp.index)\nplt.xlabel('Degi\u015fken \u00f6nem skorlar\u0131')\nplt.ylabel('deig\u015fkenler')\nplt.title(\"degi\u015fken \u00f6nem d\u00fczeyleri\")\nplt.show()","2c342c6b":"\n\ny = df[\"Outcome\"]\nx= df.drop([\"Outcome\"], axis=1)\nx_train, x_test , y_train ,y_test = train_test_split(x\n                                                    ,y\n                                                    ,test_size=0.30\n                                                    ,random_state=42)","5d3099ce":"gbm_model =GradientBoostingClassifier().fit(x_train,y_train)","9adcbc33":"gbm_pred=gbm_model.predict(x_test)","172fdf68":"accuracy_score(y_test,gbm_pred)","35510403":"gmb_params ={\"learning_rate\": [0.1,0.001,0.05,0.002],\n           \"n_estimators\":[40,20,80],\n           \"max_depth\":[2,3,5,6,7]}","a5f5d9a1":"gbm_model_secon=GradientBoostingClassifier()","1bc71af9":"gbm_model_cv = GridSearchCV(gbm_model_secon,gmb_params,cv=10,n_jobs=-1,verbose=2).fit(x_train,y_train)","e470fa58":"gbm_model_cv.best_params_","13a6ed50":"gbm_model_final=GradientBoostingClassifier(learning_rate=0.05,max_depth=5,n_estimators=8).fit(x_train,y_train)","46d29f02":"gbm_final_pred=gbm_model_final.predict(x_test)\naccuracy_score(y_test,gbm_final_pred)","4ad79533":"feature_imp = pd.Series(gbm_model_final.feature_importances_,index=x_train.columns).sort_values(ascending=False)\nsns.barplot(x=feature_imp , y=feature_imp.index)\nplt.xlabel('Degi\u015fken \u00f6nem skorlar\u0131')\nplt.ylabel('deig\u015fkenler')\nplt.title(\"degi\u015fken \u00f6nem d\u00fczeyleri\")\nplt.show()","7c4bc6ca":"from xgboost import XGBClassifier\n","08c1e97f":"\n\ny = df[\"Outcome\"]\nx= df.drop([\"Outcome\"], axis=1)\nx_train, x_test , y_train ,y_test = train_test_split(x\n                                                    ,y\n                                                    ,test_size=0.30\n                                                    ,random_state=42)","92645d17":"xgb_model= XGBClassifier().fit(x_train,y_train)","3722cc04":"xgb_pred=xgb_model.predict(x_test)\naccuracy_score(y_test,xgb_pred)","88348929":"xgb_model_final= XGBClassifier()","fec78559":"xgb_params = {\"n_estimators\": [100,200,300],\n             \"subsample \": [0.6,0.9],\n             \"max_depth\": [3,6,9],\n             \"learning_rate\": [0.1,0.001,0.000001]}","2146b060":"xgb_cv_model=GridSearchCV(xgb_model_final,xgb_params,cv=10,n_jobs=-1,verbose=2).fit(x_train,y_train)","ffc656c8":"xgb_cv_model.best_params_","dc002081":"xgb_final_mod = XGBClassifier(learning_rate= 0.001,\n max_depth=9,\n n_estimators= 200,\n subsample= 0.6).fit(x_train,y_train)","a32fa8a7":"xgb_pred_final=xgb_final_mod.predict(x_test)\naccuracy_score(y_test,xgb_pred_final)","a93812b8":"feature_imp = pd.Series(xgb_final_mod.feature_importances_,index=x_train.columns).sort_values(ascending=False)\nsns.barplot(x=feature_imp , y=feature_imp.index)\nplt.xlabel('Degi\u015fken \u00f6nem skorlar\u0131')\nplt.ylabel('deig\u015fkenler')\nplt.title(\"degi\u015fken \u00f6nem d\u00fczeyleri\")\nplt.show()","97b4fd30":"\n\ny = df[\"Outcome\"]\nx= df.drop([\"Outcome\"], axis=1)\nx_train, x_test , y_train ,y_test = train_test_split(x\n                                                    ,y\n                                                    ,test_size=0.30\n                                                    ,random_state=42)","14ad0054":"from lightgbm import LGBMClassifier","e762798f":"lgbm_model = LGBMClassifier().fit(x_train,y_train)\n","14bc28cb":"lgbm_pred_first=lgbm_model.predict(x_test)\n","59dee63e":"accuracy_score(y_test,lgbm_pred_first)","ccc8daf7":"lgbm=LGBMClassifier()","32834027":"lgbm_params = {\"n_estimators\": [100,200,300],\n             \n             \"max_depth\": [3,6,9],\n             \"learning_rate\": [0.1,0.001,0.000001]}","93845442":"lgbm_cv_model = GridSearchCV(lgbm,lgbm_params,cv=10,verbose=2,n_jobs=-1).fit(x_train,y_train)","b2d7cd8a":"lgbm_cv_model.best_params_","e6556b68":"lgbm_final_mod=LGBMClassifier(learning_rate= 0.1, max_dept= 3, n_estimators= 100).fit(x_train,y_train)","a2dabb8e":"lgbm_final_pred=lgbm_final_mod.predict(x_test)","2c354737":"accuracy_score(y_test,lgbm_final_pred)","bfdd8ae5":"feature_imp = pd.Series(lgbm_final_mod.feature_importances_,index=x_train.columns).sort_values(ascending=False)\nsns.barplot(x=feature_imp , y=feature_imp.index)\nplt.xlabel('Degi\u015fken \u00f6nem skorlar\u0131')\nplt.ylabel('deig\u015fkenler')\nplt.title(\"degi\u015fken \u00f6nem d\u00fczeyleri\")\nplt.show()","93f913c6":"from catboost import CatBoostClassifier","a08fdd3f":"catbo_model= CatBoostClassifier().fit(x_train,y_train,verbose=False)","90055a24":"catbo_pred=catbo_model.predict(x_test)","50c765c9":"accuracy_score(y_test,catbo_pred)","6b7964ac":"catb=CatBoostClassifier()","9733e94f":"catbo_params={\"iterations\": [200,500,100],\"learning_rate\":[0.001,0.01,0.01],\n             \"depth\":[4,5,6]}","88b89655":"catbo_cv_model = GridSearchCV(catb,catbo_params,cv=10,n_jobs=-1,verbose=2).fit(x_train,y_train)","ee847994":"catbo_cv_model.best_params_","3d6ccee0":"catb_final=CatBoostClassifier(iterations= 500,learning_rate=0.01 , depth=5).fit(x_train,y_train)","051d36f7":"catb_pred=catb_final.predict(x_test)","b8549772":"accuracy_score(y_test,catb_pred)","1f3d2a36":"feature_imp = pd.Series(catb_final.feature_importances_,index=x_train.columns).sort_values(ascending=False)\nsns.barplot(x=feature_imp , y=feature_imp.index)\nplt.xlabel('Degi\u015fken \u00f6nem skorlar\u0131')\nplt.ylabel('deig\u015fkenler')\nplt.title(\"degi\u015fken \u00f6nem d\u00fczeyleri\")\nplt.show()","0c604ee3":"### XGBoost ","c9b26173":"Amac\u0131m\u0131z burada g\u00f6r\u00fclen 2 s\u0131n\u0131f\u0131 ay\u0131rmaya \u00e7al\u0131\u015fmak ay\u0131rma i\u015flemini SVM ile yaparkan max olucak \u015fekilde ger\u00e7ekle\u015fmele \u00e7al\u0131\u015fmak\n2 s\u0131n\u0131f\u0131 ay\u0131r\u0131cak i\u015flem hiper d\u00fczlem hiper d\u00fczlem nedir ? \n2 yada 3  boyutlu 1 dogru olarak d\u00fc\u015f\u00fcn\u00fclebilir.\n","5b410d25":"### degi\u015fken \u00f6nem d\u00fczeyleri","d80a3448":"### MODEL TUN\u0130NG","01f44ca0":"## LOJ\u0130ST\u0130K REGRESYON(LOG\u0130ST\u0130C REGRESS\u0130ON)","1d5e5fb5":"* HIZLIDIR\n\u00d6L\u00c7EKLENEB\u0130L\u0130R\nTAHM\u0130N BA\u015eARISI Y\u00dcKSEKT\u0130R\n","c5b6f0c8":"#  CATBOOST","bb8b2c8b":"###  LOG\u0130ST\u0130C REGRESS\u0130ON MODEL TUN\u0130NG","1ee28ee6":"###  ART\u0130F\u0130CAL NEURAL NETWORK ( YAPAY S\u0130N\u0130R AGLARI)\n\u0130nsan beyninin bilgi i\u015fleme \u015feklini referans alan s\u0131n\u0131fland\u0131rma ve regresyon problemleri i\u00e7in kullan\u0131labilen kuvvetli makine \u00f6\u011frenmesi algoritmalar\u0131ndan biridir.\nAma\u00e7 en k\u00fc\u00e7\u00fck hata ile tahmin yap\u0131lacak katsay\u0131lara eri\u015fmek\n![](https:\/\/miro.medium.com\/max\/1000\/1*xETxsA2yQbIA3GClN5R_tQ.png)","b7fa0077":"GBM ' in h\u0131z ve tahmin performas\u0131n\u0131 artt\u0131rmak \u00fczerine optimize edilmi\u015f \u00f6l\u00e7eklenebilir farkl\u0131 platformlara entegre edilebilir halidir\n![](https:\/\/miro.medium.com\/proxy\/1*QJZ6W-Pck_W7RlIDwUIN9Q.jpeg)","5573cea3":"### SVM MODEL TAHM\u0130N \n","0b35162e":"### MODEL TUN\u0130NG","89137ca3":"# MODEL TAHM\u0130N","ccaae101":"![](https:\/\/miro.medium.com\/max\/592\/1*i0o8mjFfCn-uD79-F1Cqkw.png)**","ea4b2507":"# GRAD\u0130ENT BOOST\u0130NG MACH\u0130NES (GBM)\nAdaBoostun s\u0131n\u0131fland\u0131rma ve regresyon problemlerine kolayca uyarlanabilen genelle\u015ftirilmi\u015f versiyondur.\nArt\u0131klar \u00fczerine tek bir tahminsel model formunda modeller serisi kurulur\nOlu\u015fturulan aga\u00e7alar\u0131n \u00fcrettigi sonu\u00e7lar \u00fczerinden yeni aga\u00e7lar olu\u015fturuluyor\nZay\u0131f s\u0131n\u0131fland\u0131r\u0131c\u0131lar bir araya gelerek g\u00fc\u00e7l\u00fc bir s\u0131n\u0131fland\u0131rma arac\u0131 olu\u015fturumas\u0131\nTek bir tahminsel model formunda olan modeller serisi olu\u015fturur.\nSeri i\u00e7ersindeki bir model serideki bir \u00f6nceki modelin tahmin art\u0131klar\u0131n\u0131n \u00fczerine kurulu bir (Fit) o\u015futurur.\nBoosting+Gradient Descent\n\n![](https:\/\/i.ytimg.com\/vi\/KFsnZKMKNAE\/maxresdefault.jpg)","7c0e4dde":"### MODEL VE TAHM\u0130N ","5ddf332a":"# \u015eEKER HASTALIGI TAHM\u0130N\u0130","81752264":"### CART (Classification And Regression Tree)\nAma\u00e7 veri site i\u00e7erisndeki karma\u015f\u0131k yap\u0131lar\u0131 basit karar yap\u0131lar\u0131na d\u00f6n\u00fc\u015ft\u00fcrmektir.\nHeterojen veri setlerini belirlenmi\u015f bir hedef degi\u015fkene g\u00f6re homojen alt gruplara ayr\u0131l\u0131r\nBelirlenen hedef degi\u015fkene g\u00f6re elimdeki degi\u015fkenlerin \u00fczerinden b\u00f6l\u00fcnme i\u015flemleriyle en yaprakda en dipte degi\u015fkenin m\u00fcmk\u00fcn oldugu kadar daha homojen olmas\u0131 saglanmaya \u00e7al\u0131\u015f\u0131yor o degi\u015fken bag\u0131ml\u0131 degi\u015fkenimiz.","e556d781":"![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/f\/f3\/CART_tree_titanic_survivors.png)","c2fb023c":"### K-Nearest Neighbors(K EN YAKIN KOM\u015eU)","2c7875c3":"### MODEL TUN\u0130NG KNN","17201549":"# MODEL TAHM\u0130N","507f914a":"## MODEL TUN\u0130NG","6d1356ca":"### MODEL TUN\u0130NG\n","97c468bd":"* XGBosstun egitim s\u00fcresi performas\u0131n\u0131 geli\u015ftrmek i\u00e7in\n* Daha performanslar\u0131\n* c++ ile yaz\u0131lm\u0131\u015f olmas\u0131na ragmen egitim s\u00fcresi daha fazla s\u00fcr\u00fcyor\n* Daha performas \u00e7\u0131kt\u0131s\u0131 sagl\u0131yor\n","ae1ea24a":"### MODEL TUN\u0130NG","9538e299":"# RANDOM FOREST \nTemeli birden \u00e7ok karar agac\u0131n\u0131n \u00fcrettigi tahminlerin bir araya getirilmesine dayan\u0131r.\n","ca6acc8a":"* * Kategorik degi\u015fkenler ile otomatik olarak m\u00fccadele edebilen h\u0131zl\u0131 ba\u015far\u0131l\u0131 bir diger GBM t\u00fcrevi\n* * kategorik degi\u015fken destegi sagl\u0131yor\n* * h\u0131zl\u0131 ve \u00f6l\u00e7eklenebilir gpu destegi\n* daha ba\u015far\u0131l\u0131 tahminler\n* h\u0131zl\u0131 train ve h\u0131zl\u0131 tahmin","4c794d52":"![](https:\/\/rohitgr7.github.io\/content\/images\/2019\/03\/Screenshot-from-2019-03-27-23-09-47-1.png)","99860881":"### L\u0130GHT GBM ","13f53a86":"### knn model tuning","7c4303ee":"### MODEL TUN\u0130NG","4ef112a8":"### LGBM MODEL TUN\u0130NG","cf5f0fbc":"### Model Tahmin","5a6786e2":" ### SUPPOR VEKTOR MACH\u0130NES (SVM)\n Ama\u00e7 iki s\u0131n\u0131f aras\u0131ndaki ayr\u0131m\u0131n optimum olmas\u0131n\u0131 saglayacak hiper d\u00fczelmi bulmak\n \u00d6nce s\u0131n\u0131fland\u0131rmak i\u00e7in bulunmu\u015f sonra regresyon problemlerine g\u00f6re ayarlanm\u0131\u015ft\u0131r.\n![](https:\/\/software.intel.com\/sites\/default\/files\/managed\/51\/03\/iot-improving-performance-of-support-vector-machine-figure-4.png) \n"}}