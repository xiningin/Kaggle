{"cell_type":{"7756624a":"code","5bc51df5":"code","554d7c3c":"code","7ad596a7":"code","ef21b201":"code","b084e71e":"code","13878fa6":"code","2959f973":"code","413b3583":"code","20e8d898":"code","133d86fc":"code","103b21a0":"code","c77d301c":"code","8974b9bb":"code","1ed0078e":"code","497ff097":"code","92d4673f":"code","0db473bc":"code","57a4d720":"code","290bf234":"code","97120803":"code","842480af":"code","0bb1710e":"code","b2e65003":"code","9a30b55b":"code","9d5ab71a":"code","e5055065":"code","3b1dcf42":"code","df9cf0ac":"code","39a27b9a":"code","6db29075":"code","63232c3c":"code","7fd7f900":"code","b52fa2d3":"code","bd229520":"code","8912495d":"code","1ff4e587":"code","e8a81dfc":"code","5013b5bb":"code","47133054":"code","f11e9f0b":"code","b5d8c804":"code","84631570":"code","b2e2080d":"code","323a8ed9":"code","77b39eb0":"code","87e9be9a":"code","671d3054":"code","222a9bee":"code","94e89c0b":"code","98232e5e":"code","4c99b2aa":"code","f4644d00":"code","59e75411":"code","07fc1590":"code","8e7e757d":"code","212d77a9":"code","c6142f89":"code","32c1ecc0":"code","74806ed2":"code","76e6c5a0":"code","48083474":"code","09aacf7d":"code","a350ec24":"markdown","9e6cefab":"markdown"},"source":{"7756624a":"import numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","5bc51df5":"import pandas as pd\ncars93 = pd.read_csv(\"..\/input\/cars93\/Cars93.csv\")","554d7c3c":"cars93.head()","7ad596a7":"print(list(cars93.columns))","ef21b201":"cars93reduced = cars93[[\"Type\",\"AirBags\",\"DriveTrain\",\"Cylinders\",\n                        \"EngineSize\",\"MPG.city\",\"Horsepower\",\"RPM\",\"Rev.per.mile\",\n                        \"Fuel.tank.capacity\",\"Length\",\"Wheelbase\",\"Width\",\n                        \"Turn.circle\",\"Weight\"]]\nselcols = [\"Type\",\"AirBags\",\"DriveTrain\",\"Cylinders\",\n                        \"EngineSize\",\"Horsepower\",\"RPM\",\"Rev.per.mile\",\n                        \"Fuel.tank.capacity\",\"Length\",\"Wheelbase\",\"Width\",\n                        \"Turn.circle\",\"Weight\"]\n\n# cars93reduced[selcols]","b084e71e":"# x=3\n# for i in cars93reduced:\n# #     plt.subplots(111)\n#     plt.figure()\n#     plt.scatter(cars93[\"MPG.city\"],cars93reduced[i])\nfig, ax = plt.subplots(4, 3,squeeze=False,figsize=(15,15))\n# fig.figure()\ncount=0\nfor i in range(4):\n    for j in range(3):\n        ax[i, j].scatter(cars93reduced[selcols[count]],cars93[\"MPG.city\"],label=selcols[count])\n        ax[i, j].legend()\n        count+=1\n# fig","13878fa6":"columns = [\"MPG.city\",\"EngineSize\",\"Horsepower\",\"RPM\",\"Length\",\"Wheelbase\",\"Turn.circle\",\"DriveTrain\",\"Type\",\"AirBags\"]\ncars93reduced[columns].head(10)","2959f973":"sns.pairplot(cars93reduced, vars=[\"Horsepower\",\"RPM\",\"Wheelbase\",\"MPG.city\"])","413b3583":"sns.pairplot(cars93reduced, vars=[\"Horsepower\",\"RPM\",\"EngineSize\",\"MPG.city\"])","20e8d898":"sns.pairplot(cars93reduced,diag_kind=\"kde\", vars=[\"Length\",\"Wheelbase\",\"Turn.circle\"])","133d86fc":"cars93[\"MPG.city\"].mean()","103b21a0":"cars93[\"EngineSize\"].mean()","c77d301c":"sum((cars93[\"MPG.city\"] - (cars93[\"MPG.city\"].mean())) * (cars93[\"EngineSize\"] - (cars93[\"EngineSize\"].mean()))\/(cars93.shape[0]-1))","8974b9bb":"cars93[\"EngineSize\"].cov(cars93[\"MPG.city\"])","1ed0078e":"cars93[\"Horsepower\"].cov(cars93[\"MPG.city\"])","497ff097":"cars93[\"RPM\"].cov(cars93[\"MPG.city\"])","92d4673f":"cars93[\"EngineSize\"].cov(cars93[\"Horsepower\"])","0db473bc":"cars93[\"Length\"].cov(cars93[\"Wheelbase\"])","57a4d720":"cars93[\"Length\"].cov(cars93[\"Turn.circle\"])","290bf234":"cars93[\"Wheelbase\"].cov(cars93[\"Turn.circle\"])","97120803":"cars93[[\"MPG.city\",\"EngineSize\",\"Horsepower\",\"RPM\"]].cov()","842480af":"from scipy.stats import shapiro","0bb1710e":"shapiro(cars93[\"Turn.circle\"])","b2e65003":"shapiro(cars93[\"Length\"])","9a30b55b":"shapiro(cars93[\"Wheelbase\"])","9d5ab71a":"cars93[\"Length\"].corr(cars93[\"Turn.circle\"],method=\"pearson\")","e5055065":"cars93[\"RPM\"].corr(cars93[\"MPG.city\"],method=\"pearson\")","3b1dcf42":"cars93[\"Wheelbase\"].corr(cars93[\"Turn.circle\"],method=\"pearson\")","df9cf0ac":"cars93[\"Length\"].corr(cars93[\"Turn.circle\"],method=\"pearson\")","39a27b9a":"cars93[\"Horsepower\"].corr(cars93[\"MPG.city\"],method=\"spearman\")","6db29075":"cars93[\"RPM\"].corr(cars93[\"MPG.city\"],method=\"spearman\")","63232c3c":"cars93[\"EngineSize\"].corr(cars93[\"MPG.city\"],method=\"spearman\")","7fd7f900":"shapiro(cars93[\"Horsepower\"])","b52fa2d3":"shapiro(cars93[\"RPM\"])","bd229520":"shapiro(cars93[\"EngineSize\"])","8912495d":"shapiro(cars93[\"MPG.city\"])","1ff4e587":"first10hp = cars93[\"Horsepower\"].head(10)\nfirst10hp = first10hp.sort_values(ascending=False)\nrankfirst10hp = first10hp.rank()\nprint(list(rankfirst10hp))","e8a81dfc":"# cars93 = cars93[\"RPM\"].sort_values(ascending=False)\nfirst25rpm = np.array(cars93[\"RPM\"].head(25).rank())\nfirst25mpg = np.array(cars93[\"MPG.city\"].head(25).rank())\npd.DataFrame(first25rpm,first25mpg)","5013b5bb":"two_way_table = pd.crosstab(index=cars93[\"DriveTrain\"], \n                           columns=cars93[\"Type\"])\ntwo_way_table.index = [\"4WD\",\"Front\",\"Rear\"]\ntwo_way_table","47133054":"from scipy.stats import chi2_contingency,chi2\nchi2.ppf(1-0.05,10)\nchi2_contingency(two_way_table)","f11e9f0b":"cars93[[\"Man.trans.avail\",\"Origin\"]].head(10)","b5d8c804":"origin_trans = cars93[[\"Man.trans.avail\",\"Origin\"]]","84631570":"origin_trans = pd.crosstab(index=cars93[\"Man.trans.avail\"], \n                           columns=cars93[\"Origin\"])\norigin_trans.index = [\"No\",\"Yes\"]\norigin_trans[\"Sum\"] = origin_trans.sum(axis=1)\nother = origin_trans.sum(axis=0)\nother = pd.DataFrame({\"Sum\":list(other)})\nother.index=[\"USA\",\"non-USA\",\"Sum\"]\ntransposed_other = other.T\norigin_trans.append(transposed_other,sort=False)","b2e2080d":"origin_trans\norigin_trans.sum(axis=0)","323a8ed9":"man_vec = cars93[\"Man.trans.avail\"].apply(lambda x: 1 if x==\"Yes\" else 0)\norigin_vec = cars93[\"Origin\"].apply(lambda x: 1 if x==\"USA\" else 0)","77b39eb0":"man_vec.corr(origin_vec, method=\"pearson\")","87e9be9a":"# from mlxtend.frequent_patterns import apriori\n# import pandas as pd\n# products_train = pd.read_csv(\"..\/input\/instacart-market-basket-analysis\/orders.csv\")","671d3054":"# frequent_itemsets = apriori(products_train, min_support=0.07, use_colnames=True)","222a9bee":"cars93[[\"MPG.city\",\"EngineSize\",\"Horsepower\",\"RPM\"]].corr()","94e89c0b":"import numpy as np\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm\nsm.qqplot(cars93[\"Turn.circle\"])\nplt.legend([\"Turn.circle\"])\nplt.figure(figsize=(7,7))\nplt.show()\nsm.qqplot(cars93[\"Length\"])\nplt.legend([\"Length\"])\nplt.show()\nsm.qqplot(cars93[\"Wheelbase\"])\nplt.legend([\"Wheelbase\"])\nplt.show()","98232e5e":"from mlxtend.frequent_patterns import apriori \nfrom mlxtend.preprocessing import TransactionEncoder\nimport pandas as pd","4c99b2aa":"file = open(\"..\/input\/groceries-sparse-matrix\/Groceries.csv\",'r')","f4644d00":"strings = []\nfor i in file.readlines():\n    strings.append(i.strip().split(\"\\n\"))\nstrings","59e75411":"dataset = []\nfor i in strings:\n    dataset.append(i[0].split(\",\"))\ndataset","07fc1590":"# df = pd.read_csv(\"..\/input\/groceries\/Groceries.csv\")","8e7e757d":"# df.head()","212d77a9":"# df = df.drop(\"Unnamed: 0\",axis=1)","c6142f89":"# df.replace(to_replace=False, value = 0)","32c1ecc0":"# df","74806ed2":"te = TransactionEncoder()\nte_ary = te.fit(dataset).transform(dataset)\n# print(te_ary)\ndf = pd.DataFrame(te_ary, columns=te.columns_)\n# df.head()\n# df.boxplot()\nfrequent_itemsets = apriori(df, min_support=0.01, use_colnames=True)\nfrequent_itemsets","76e6c5a0":"from mlxtend.frequent_patterns import association_rules\n\nassociation_rules(frequent_itemsets, metric=\"confidence\", min_threshold=0.1).head","48083474":"rules = association_rules(frequent_itemsets, metric=\"lift\", min_threshold=0.1)\nrules.head(15)","09aacf7d":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\ndf = pd.read_excel(\"..\/input\/car-accessories\/market basket - car accessories.xlsx\")\ndf = df.replace(float(\"nan\"), 0)\ndf = df.replace(\"y\", 1)\ndf = pd.DataFrame({\"Items\":list(df.columns),\n                   \"Count\":list(df.sum(axis=0))\n                  })\nbar = sns.barplot(data = df,y=\"Items\",x=\"Count\")","a350ec24":"**Apriori**","9e6cefab":"**Two Way Tables**"}}