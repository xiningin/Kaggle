{"cell_type":{"c91dfe14":"code","90e1bc04":"code","4dc80add":"code","03ae8485":"code","4dd45e1f":"code","6e9e2a77":"code","1f135c23":"code","76ac9a23":"code","b2a4ecd3":"code","7f0bb827":"code","24e45f70":"markdown","3282e8d1":"markdown","fee3d457":"markdown","9b346ace":"markdown","4df00b45":"markdown","07d8e6c2":"markdown","54376659":"markdown","da34810b":"markdown"},"source":{"c91dfe14":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","90e1bc04":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","4dc80add":"gas = pd.read_csv(\"\/kaggle\/input\/matplot-tutorial-real-world-examples\/gas_prices.csv\")\ngas","03ae8485":"plt.figure(figsize=(5, 3), dpi=300)\nplt.title(\"Gas Prices over the years in USD\")\n\nplt.plot(gas.Year, gas.USA, 'b.-', label=\"United States\")\nplt.plot(gas.Year, gas.Canada, 'r.-', label=\"Canada\")\nplt.plot(gas.Year, gas.Australia, 'g.-', label=\"Australia\")\nplt.plot(gas.Year, gas[\"South Korea\"], 'y.-', label=\"South Korea\")\n\n# If you want to plot all the countries from gas\n# for country in gas:\n#     if country != \"Year\":\n#         plt.plot(gas.Year, gas[country], marker=\".\", label=country)\n\n\nplt.xticks(gas.Year[::3].tolist()+[2011])\nplt.xlabel(\"Year\")\nplt.ylabel(\"US Dollars\")\nplt.legend(bbox_to_anchor=(1.04,1), loc=\"upper left\")\n\n# plt.savefig(\"gas_prices_line_graph.png\", dpi=300)\nplt.show()","4dd45e1f":"fifa = pd.read_csv(\"\/kaggle\/input\/matplot-tutorial-real-world-examples\/fifa_data.csv\")\nfifa.head(5)","6e9e2a77":"bins = [40, 50, 60 ,70, 80,90,100]\nplt.figure(figsize=(5, 3), dpi=100)\n# PLotting the histogram\nplt.hist(fifa.Overall, bins=bins, color=\"red\")\n\nplt.xticks(bins)\nplt.ylabel(\"Number of Players\")\nplt.xlabel(\"Skill level\")\nplt.title(\"Distribution of Player skills in FIFA 2018\")\nplt.show()","1f135c23":"left = fifa.loc[fifa_data[\"Preferred Foot\"] == \"Left\"].count()[0]\nright = fifa.loc[fifa_data[\"Preferred Foot\"] == \"Right\"].count()[0]\nplt.figure(figsize=(5,3), dpi=300)\nplt.style.use('ggplot')\nlabels = [\"Left\", \"Right\"]\n# colors = [\"Blue\", \"Red\"]\nplt.pie([left, right], labels=labels, autopct=\"%.2f %%\")\n\nplt.title(\"Foot preferrence of football players\")\nplt.show()","76ac9a23":"fifa.Weight","b2a4ecd3":"# Removing the lbs from the string data \nfifa.Weight = [int(x.strip('lbs')) if type(x)==str else x for x in fifa.Weight]\nlight = fifa.loc[fifa.Weight < 125].count()[0]\nlight_medium = fifa[(fifa.Weight >= 125) & (fifa.Weight < 150)].count()[0]\nmedium = fifa[(fifa.Weight >= 150) & (fifa.Weight < 175)].count()[0]\nmedium_heavy = fifa[(fifa.Weight >= 175) & (fifa.Weight < 200)].count()[0]\nheavy = fifa[fifa.Weight >= 200].count()[0]\n\nweights = [light,light_medium, medium, medium_heavy, heavy]\nlabel = ['under 125', '125-150', '150-175', '175-200', 'over 200']\nexplode = (.4,.2,0,0,.4)\nplt.figure(figsize=(5,3), dpi=300)\nplt.style.use('ggplot')\nplt.title('Weight of Professional Soccer Players (lbs)')\n\nplt.pie(weights, labels=label, explode=explode, pctdistance=0.8,autopct='%.2f %%')\nplt.show()","7f0bb827":"plt.figure(figsize=(5,8), dpi=100)\n\nplt.style.use('default')\n\nbarcelona = fifa.loc[fifa.Club == \"FC Barcelona\"]['Overall']\nmadrid = fifa.loc[fifa.Club == \"Real Madrid\"]['Overall']\nrevs = fifa.loc[fifa.Club == \"New England Revolution\"]['Overall']\nmanchester_united = fifa.loc[fifa.Club == 'Manchester United']['Overall']\n\n#bp = plt.boxplot([barcelona, madrid, revs], labels=['a','b','c'], boxprops=dict(facecolor='red'))\nbp = plt.boxplot([barcelona, madrid, revs, manchester_united], labels=['FC Barcelona','Real Madrid','NE Revolution', 'Manchester United'], patch_artist=True, medianprops={'linewidth': 2})\n\nplt.title('Professional Soccer Team Comparison')\nplt.ylabel('FIFA Overall Rating')\n\nfor box in bp['boxes']:\n    # change outline color\n    box.set(color='#4286f4', linewidth=2)\n    # change fill color\n    box.set(facecolor = '#e0e0e0' )\n    # change hatch\n    #box.set(hatch = '\/')\n    \nplt.show()","24e45f70":"# Pie Charts\n#### Determining how many players are left footers and right footers","3282e8d1":"# Gas Data","fee3d457":"# Line Graph","9b346ace":"# Importing the libraries","4df00b45":"# Histogram","07d8e6c2":"# Fifa data","54376659":"# BoxPlot and Whisker Chart","da34810b":"# Breakdown of weights of fifa players"}}