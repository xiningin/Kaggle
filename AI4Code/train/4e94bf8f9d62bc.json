{"cell_type":{"73a9cc9c":"code","2f38a0b4":"code","c5b107ae":"code","00583882":"code","f0b03e4d":"code","4892b62a":"code","3da0b3aa":"code","74865c35":"code","ecb0becf":"code","fbdce225":"code","9df36380":"code","6be40b7a":"code","463a1ff5":"code","3ec75bfb":"code","6c08b3f1":"code","402b5a67":"code","1c98ca5a":"code","09b9f668":"code","e83d3f35":"code","f5f93f16":"markdown","70c2cf8e":"markdown","f56400ad":"markdown","341b213b":"markdown"},"source":{"73a9cc9c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler, LabelEncoder, OneHotEncoder\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.linear_model import LinearRegression\n\nfrom tqdm.auto import tqdm\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\npd.set_option('display.max_rows', None)\npd.set_option('display.max_columns', None)\nplt.style.use('ggplot')","2f38a0b4":"from sklearn import set_config\n\nset_config(display='diagram')","c5b107ae":"train = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\n\ntrain.head()","00583882":"test.describe()","f0b03e4d":"correlation_matrix = train.corr().round(2)\nsns.set(rc={'figure.figsize':(12,8)})\nsns.heatmap(train.corr())","4892b62a":"df=pd.concat((train, test)).reset_index(drop=True)","3da0b3aa":"df.isnull().sum().sort_values(ascending=False)","74865c35":"df = df.drop(['PoolQC','MiscFeature','Alley','Fence','FireplaceQu','LotFrontage'],1)\n","ecb0becf":"df.isnull().sum().sort_values(ascending=False).head(10)","fbdce225":"def nan_executor(df):\n    nan_columns=df.columns[df.isnull().any()]\n    for i in nan_columns:\n        if(df[i].dtypes==\"object\"):\n            df[i]=df[i].fillna(df[i].mode()[0])\n        else:\n            df[i]=df[i].fillna(df[i].mean())\n    return df.head(10)","9df36380":"nan_executor(df)\n","6be40b7a":"df.isnull().sum().sort_values(ascending=False)\n","463a1ff5":"str_columns = (df.dtypes == \"object\")\nstr_columns_list = list(str_columns[str_columns].index)\nprint(str_columns_list)","3ec75bfb":"def encoder():\n    for i in str_columns_list:\n        encode=LabelEncoder()\n        df[i]=encode.fit_transform(df[i])\nencoder()","6c08b3f1":"train=df[:1460]\ntest=df[1460:]\n\ntest=test.drop(['SalePrice'],1)\n","402b5a67":"X = train.drop(['SalePrice'],1)\ny = train['SalePrice']","1c98ca5a":"model = GradientBoostingRegressor(random_state=42,n_estimators=400,loss='huber',max_depth=4,max_features=25)","09b9f668":"model.fit(X, y)\n","e83d3f35":"preds = model.predict(test)\n\nsubmission = pd.DataFrame({\n    'Id': test.Id,\n    'SalePrice': preds \n})\nsubmission.to_csv('.\/baseline_submission.csv', index=False)","f5f93f16":"### \u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0440\u0435\u0448\u0435\u043d\u0438\u044f","70c2cf8e":"\u0427\u0438\u0442\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435:","f56400ad":"# \u0417\u0430\u0434\u0430\u043d\u0438\u0435 1. House Prices","341b213b":"\u041c\u043e\u0434\u0435\u043b\u044c:"}}