{"cell_type":{"9916d99a":"code","599c0033":"code","9ec6eac8":"code","54dde863":"code","e5916575":"code","400faec7":"code","6d282494":"code","6d62ce6f":"code","637224ba":"code","c03636b3":"code","abd39055":"code","788a1249":"code","a5071346":"code","3c078e27":"code","741a27a9":"code","9e077549":"code","bfebc3ef":"code","dbfead04":"code","66798b9b":"code","f7ffc903":"code","0d2f9bdb":"code","3290ece8":"code","bc646b75":"code","bf6891c8":"code","7f8f6ed9":"code","e2e244b9":"markdown","ebe0170b":"markdown","2f0696ba":"markdown","12b88652":"markdown","fd702282":"markdown","eeb9a39e":"markdown","7a515699":"markdown"},"source":{"9916d99a":"import numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\n\n#encoding\nfrom category_encoders.ordinal import OrdinalEncoder\nfrom sklearn.preprocessing import OneHotEncoder, LabelEncoder\n\n#model\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import RandomForestClassifier\n\nfrom sklearn.metrics import f1_score","599c0033":"train = pd.read_csv('..\/input\/kakr-4th-competition\/train.csv')\ntest = pd.read_csv('..\/input\/kakr-4th-competition\/test.csv')\nsample_submission = pd.read_csv('..\/input\/kakr-4th-competition\/sample_submission.csv')","9ec6eac8":"train","54dde863":"target = (train['income'] != '<=50K').astype(int)","e5916575":"target","400faec7":"train.drop(['income'], axis = 1, inplace = True)","6d282494":"train.head()","6d62ce6f":"LE_encoder = OrdinalEncoder(list(train.columns))\ntrain_le = LE_encoder.fit_transform(train, target)\ntest_le = LE_encoder.transform(test)","637224ba":"train_le.head()","c03636b3":"train.head()","abd39055":"train.drop(['id'], axis = 1, inplace=True)\ntest.drop(['id'], axis = 1, inplace=True)","788a1249":"X_train, X_valid, y_train, y_valid = train_test_split(train_le, target, \n                                                          test_size=0.3,\n                                                          random_state=202,\n                                                          shuffle=True,\n                                                          stratify=target)","a5071346":"X_train","3c078e27":"X_valid","741a27a9":"dc_tree = DecisionTreeClassifier()\ndc_tree.fit(X_train, y_train)","9e077549":"sample_submission['prediction'] = rf.predict(test_le).astype(int)\nsample_submission.to_csv('submission.csv', index = False)","bfebc3ef":"dc_tree = DecisionTreeClassifier(random_state = 0)\ndc_tree.fit(X_train, y_train)\ny_pred = dc_tree.predict(X_valid)\nprint(\"Decision Tree accuracy : %.4f\"%np.mean(y_pred==y_valid))","dbfead04":"rf = RandomForestClassifier(max_depth = 16)\nrf.fit(X_train, y_train)\ny_pred = rf.predict(X_valid)\nprint(\"Random Forest accuracy : %.4f\"%np.mean(y_pred==y_valid))","66798b9b":"sample_submission['prediction'] = rf.predict(test_le).astype(int)\nsample_submission.to_csv('submission.csv', index = False)","f7ffc903":"svc = SVC()\nsvc.fit(X_train, y_train)\ny_pred = svc.predict(X_valid)\nprint(\"SVC accuracy : %.4f\"%np.mean(y_pred == y_valid))","0d2f9bdb":"LE_encoder.cols","3290ece8":"train.info()","bc646b75":"for col in train.columns:\n    if train[col].dtype == object:\n        values = train[col].unique()\n        print('==', col, len(values), '==')\n        #print(train[i].drop_duplicates())\n        print('\\n'.join(values))\n        #print(train[col].value_counts())\n        print()","bf6891c8":"for i in train['education'].drop_duplicates():\n    print(i)","7f8f6ed9":"for i in train['education_num'].drop_duplicates(), train['education'].drop_duplicates():\n    print(i)","e2e244b9":"## Support Vector Machine","ebe0170b":"## Random Forest","2f0696ba":"## other encoding","12b88652":"[ordinal encoder](https:\/\/www.google.com\/search?sxsrf=ALeKk03xy0_8s9b2nTVCmrIpuHX8sTut2w:1606278488553&q=ordinalencoder&spell=1&sa=X&ved=2ahUKEwiBtOHV7ZztAhUBE4gKHUo5DmgQBSgAegQIBRA0&biw=755&bih=660&dpr=1.25)","fd702282":"# feature engineering","eeb9a39e":"# Base Line","7a515699":"## Decision Tree"}}