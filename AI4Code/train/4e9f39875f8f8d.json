{"cell_type":{"715b4605":"code","82b86779":"code","f20d6341":"code","e3749b26":"code","8e8c14c7":"code","9fc22143":"code","373ce764":"code","1860ac02":"code","8bb1b48b":"code","45b330fe":"code","9bf4a5f9":"code","2dfe7313":"code","74f739bc":"code","fe1d83e6":"code","4077c094":"code","43fcf99a":"code","1a4670c3":"code","1b0346d0":"code","2f833588":"code","ab7a3d31":"code","7c331695":"code","bc0cebbc":"code","03e845f7":"code","70f5307d":"code","e39ae9c8":"code","906f74de":"code","cdb6a5ee":"code","38930943":"code","47a05069":"code","0658a9ab":"code","cde962de":"code","01827187":"code","96560212":"code","16cc901d":"code","74775695":"code","7e2c2c83":"code","80cea246":"code","9741735d":"code","062d5813":"code","5fc7b651":"code","0542bcae":"code","bd2458e7":"code","ac33d265":"code","b130d5f5":"code","2819864b":"code","0a22e188":"code","1aeff91d":"code","9bbd4efa":"code","d3421389":"code","70edd007":"code","b2fac288":"code","6ba7238c":"code","c78b78e7":"code","bae130b5":"code","39749819":"code","d1eb99b5":"code","1f0bc0b9":"code","7a643efc":"code","189d393c":"code","875ecbfa":"code","5f11cd0d":"code","3f2cea46":"code","f13b57b1":"code","51166995":"code","a14f36c1":"code","d6bae3d8":"code","be745230":"code","24a60a6f":"code","eccc1437":"code","73dd4c3a":"code","4572bb2d":"code","ee4caf1f":"code","85f63b10":"code","5bf23f9b":"code","4d8c298f":"code","b0771aca":"code","865dd3bc":"code","eab492a2":"code","581bffd9":"code","07b742ff":"code","646b4885":"code","4c8490a4":"code","aeecf327":"code","64fbb8cd":"code","c32a62be":"code","1bb7fdfd":"code","34ca9666":"code","d92c71b7":"code","2a55d646":"code","47ff1266":"code","669dfe5a":"code","bff47d28":"code","34fc7e9a":"code","264cfb6b":"code","205ea8fc":"code","23015378":"code","9c33fae5":"code","67997ecb":"code","bf25f1b6":"code","6936334f":"code","a5442fc6":"code","dd24fcc8":"code","66502a96":"code","d86265d2":"code","9893a5cd":"code","7bc77e55":"code","cd13faf8":"code","1d69fcd2":"code","4d0c93d9":"code","7f500c79":"code","9f4bb000":"code","ce1822cf":"code","c4ae2126":"code","51342b55":"code","e43cbd72":"code","fc8882c5":"code","8bba5b56":"code","be67bf42":"code","ea0f2117":"code","83f6faaf":"code","1f76327b":"code","e2c18bed":"code","58c9c46e":"code","2a3fbd08":"code","aa2421b7":"markdown","e68e15dd":"markdown","b95cdf88":"markdown","fa00e2a6":"markdown","a6e15f2e":"markdown","b2e98854":"markdown","443ad2b7":"markdown","c38e4935":"markdown","692712bd":"markdown","019bb8d8":"markdown","baa1ef59":"markdown","7293bbb1":"markdown","dcd72372":"markdown","1272d69c":"markdown","824be87a":"markdown","5508197d":"markdown","da791ed7":"markdown","40a20e7c":"markdown","037796c4":"markdown"},"source":{"715b4605":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","82b86779":"import seaborn as sns\nfrom sklearn.preprocessing import OneHotEncoder","f20d6341":"path = \"\/kaggle\/input\/facebooklive\/Live-Facebook.csv\"\ndataset = pd.read_csv(path)\ndataset.head()","e3749b26":"One_hot_status_type = pd.Series(np.where(dataset[\"status_type\"] == 'video', 1, 0),\n          dataset.index)\nOne_hot_status_type","8e8c14c7":"dataset[\"status_type\"] = One_hot_status_type\ndataset.head()","9fc22143":"dataset.columns","373ce764":"Live_dataset = dataset[[\"status_published\",\"num_reactions\",\"num_comments\",\"num_shares\",\"num_likes\",\"num_loves\",\"num_wows\",\"num_hahas\",\"num_sads\",\"num_angrys\",\"status_type\"]]\nLive_dataset.head()","1860ac02":"Live_facebook_data = dataset[[\"status_published\",\"num_reactions\",\"num_comments\",\"num_shares\",\"num_likes\",\"num_loves\",\"num_wows\",\"num_hahas\",\"num_sads\",\"num_angrys\"]]\nLive_facebook_data.head()","8bb1b48b":"Live_dataset.dtypes","45b330fe":"print(\"----------------------------\")\nprint(Live_dataset.mean())\nprint(\"----------------------------\")","9bf4a5f9":"video = 0\nphoto = 0","2dfe7313":"video_data = []\nphoto_data = []","74f739bc":"Live_dataset.shape","fe1d83e6":"Live_dataset.columns","4077c094":"Live_dataset","43fcf99a":"Live_dataset.loc[2]","1a4670c3":"(Live_facebook_data[\"status_published\"])[0].split(' ')[1]\n","1b0346d0":"#date\nvideo_data_d = []\nphoto_data_d = []\n#time\nvideo_data_t = []\nphoto_data_t = []","2f833588":"#date\ndata_d = []\n#time\ndata_t = []","ab7a3d31":"for index,value in enumerate(Live_dataset[\"status_type\"]):\n    if value == 1:\n        data_d.append(Live_facebook_data[\"status_published\"][index].split(' ')[0])\n        data_t.append(Live_facebook_data[\"status_published\"][index].split(' ')[1])\n        video_data_t.append(Live_facebook_data[\"status_published\"][index].split(' ')[1])\n    else:\n        data_d.append(Live_facebook_data[\"status_published\"][index].split(' ')[0])\n        data_t.append(Live_facebook_data[\"status_published\"][index].split(' ')[1])\n        photo_data_t.append(Live_facebook_data[\"status_published\"][index].split(' ')[1])","7c331695":"data_t[:5]","bc0cebbc":"data_d[:5]","03e845f7":"Live_facebook_data[\"date\"] = data_d\nLive_facebook_data","70f5307d":"Live_facebook_data[\"time\"] = data_t\nLive_facebook_data.head()","e39ae9c8":"for index,value in enumerate(Live_dataset[\"status_type\"]):\n    if value == 1:\n        video_data.append(Live_facebook_data.loc[index].values)\n    else:\n        photo_data.append(Live_facebook_data.loc[index].values)","906f74de":"video_data[:3]","cdb6a5ee":"photo_data[:3]","38930943":"import pandas as pd ","47a05069":"df_photo = pd.DataFrame(photo_data,columns=[\"status_published\",'num_reactions', 'num_comments', 'num_shares', 'num_likes', 'num_loves',\n       'num_wows', 'num_hahas', 'num_sads', 'num_angrys',\"date\",\"time\"])","0658a9ab":"photo_data[:3]","cde962de":"print(\"----------------------------\")\nprint(df_photo.mean())\nprint(\"----------------------------\")","01827187":"df_video = pd.DataFrame(video_data,columns=[\"status_published\",'num_reactions', 'num_comments', 'num_shares', 'num_likes', 'num_loves',\n       'num_wows', 'num_hahas', 'num_sads', 'num_angrys',\"date\",\"time\"])","96560212":"df_video.head()","16cc901d":"print(\"----------------------------\")\nprint(df_video.mean())\nprint(\"----------------------------\")","74775695":"#test\nphoto_data_t[:3]","7e2c2c83":"#test\nvideo_data_t[:3]","80cea246":"hrs_v = []\nmins_v = []\nindex_v = []\nfor index in range(len(video_data_t)):\n    hr_v, minn_v = video_data_t[index].split(\":\")\n    if float(minn_v) > 30:\n        hrs_v.append(int(hr_v)+1)\n    else:\n        hrs_v.append(int(hr_v))\n    mins_v.append(int(minn_v))","9741735d":"video_data[:3]","062d5813":"hrs_p = []\nmins_p = []\nfor index in range(len(photo_data_t)):\n    hr_p, minn_p = photo_data_t[index].split(\":\")\n    if float(minn_p) > 30:\n        hrs_p.append(int(hr_p)+1)\n    else:\n        hrs_p.append(int(hr_p))\n    mins_p.append(int(minn_p))","5fc7b651":"from scipy.stats import mode","0542bcae":"ModeResult_v, count_v = mode(hrs_v)\nprint(\"\u0e40\u0e27\u0e25\u0e32:%d \u0e19\u0e32\u0e2c\u0e34\u0e01\u0e32\\n\"%ModeResult_v)\nprint(\"\u0e08\u0e33\u0e19\u0e27\u0e19:%d\\n\"%count_v)","bd2458e7":"df_video.head()","ac33d265":"df_video[\"hours\"] = hrs_v","b130d5f5":"video_reactions = []\nvideo_sub_reactions_good = []\nvideo_sub_reactions_bad = []","2819864b":"for index in range(len(df_video)):\n    if(df_video[\"hours\"][index] == ModeResult_v):\n        video_reactions.append(df_video[[\"num_reactions\",\"num_comments\",\"num_shares\"]].values[index])\n        video_sub_reactions_good.append(df_video[[\"num_likes\",\"num_loves\",\"num_wows\",\"num_hahas\"]].values[index])\n        video_sub_reactions_bad.append(df_video[[\"num_sads\",\"num_angrys\"]].values[index])","0a22e188":"dataframe_video_reactions = pd.DataFrame(video_reactions,columns=[\"num_reactions\",\"num_comments\",\"num_shares\"])\ndataframe_video_sub_reactions_good = pd.DataFrame(video_sub_reactions_good,columns=[\"num_likes\",\"num_loves\",\"num_wows\",\"num_hahas\"])\ndataframe_video_sub_reactions_bad = pd.DataFrame(video_sub_reactions_bad,columns=[\"num_sads\",\"num_angrys\"])","1aeff91d":"dataframe_video_reactions = dataframe_video_reactions.iloc[::-1]\ndataframe_video_reactions[\"index\"] = range(len(dataframe_video_reactions))\ndataframe_video_reactions.head()","9bbd4efa":"print(\"\u0e01\u0e32\u0e23\u0e15\u0e2d\u0e1a\u0e2a\u0e19\u0e2d\u0e07 : %d\"%dataframe_video_reactions.iloc[:,0].sum())\nprint(\"\u0e04\u0e2d\u0e21\u0e40\u0e21\u0e19\u0e15\u0e4c : %d\"%dataframe_video_reactions.iloc[:,1].sum())\nprint(\"\u0e41\u0e0a\u0e23\u0e4c : %d\"%dataframe_video_reactions.iloc[:,2].sum())","d3421389":"dataframe_video_reactions.mean()","70edd007":"import os\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport sys\n# Plot the data\nx_comments = dataframe_video_reactions.iloc[:, 3] #index\ny_comments = dataframe_video_reactions.iloc[:, 0] #reactions\n\nx_reactions = dataframe_video_reactions.iloc[:, 3] #index\ny_reactions = dataframe_video_reactions.iloc[:, 1] #shares\n\nx_shares = dataframe_video_reactions.iloc[:, 3] #index\ny_shares = dataframe_video_reactions.iloc[:, 2] #comments","b2fac288":"plt.scatter(x_comments, y_comments, c='red', alpha=0.3)\nplt.scatter(x_reactions, y_reactions, c='green', alpha=0.3)\nplt.scatter(x_shares, y_shares, c='blue', alpha=0.3)\nplt.title('Scatter plot of reactions comments shares data')\nplt.xlabel('index')\nplt.ylabel('reactions comments shares data shares')\nplt.show()","6ba7238c":"def plot_grahp(x,y,titile,xl,yl,color):\n    plt.scatter(x, y, c=color, alpha=0.3)\n    plt.title(titile)\n    plt.xlabel(xl)\n    plt.ylabel(yl)\n    plt.show()","c78b78e7":"def compute_error_for_line_given_points(b, m, points):\n    totalError = 0\n    for i in range(0, len(points)):\n        x = points[i, 0] #get the x value\n        y = points[i, 1] #get the y value\n        #get sum squared error\n        totalError += (y - (m * x + b)) ** 2\n    return totalError \/ float(len(points)) #get the average or MSE","bae130b5":"def gradient_descent_runner(points, starting_b, starting_m, learning_rate, num_iterations):\n    #starting b and m\n    b = starting_b\n    m = starting_m\n    \n    #gradient descent\n    for i in range(num_iterations):\n        #update b and m with new more accurate b and m using gradient step\n        b, m = step_gradient(b, m, np.array(points), learning_rate)\n    return [b, m]","39749819":"def step_gradient(b_current, m_current, points, learningRate):\n   \n    #starting point for gradients\n    b_gradient = 0\n    m_gradient = 0\n    \n    N = float(len(points))\n    for i in range(0, len(points)):\n        x = points[i, 0]\n        y = points[i, 1]\n        #direction with respect to b and m\n        #computing partial derivatives of cost function\n        b_gradient += -(2\/N) * (y - ((m_current * x) + b_current))\n        m_gradient += -(2\/N) * x * (y - ((m_current * x) + b_current))\n    \n    #update the b and m values using the partial derivatives\n    new_b = b_current - (learningRate * b_gradient)\n    new_m = m_current - (learningRate * m_gradient)\n    return [new_b, new_m]","d1eb99b5":"plot_grahp(x_reactions,y_reactions,'Scatter plot of reactions data','index','reactions','red')","1f0bc0b9":"from sklearn import datasets, linear_model\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error, r2_score\nimport math","7a643efc":"def linear_model(x,y,color,line):\n    #machine learing handle arrays not dataframes (convert 1D to 2D array)\n    x = np.array(x).reshape(-1,1)\n    y = np.array(y).reshape(-1,1)\n\n    #we use Linear Regression + fit() is the training\n    model = LinearRegression()\n    model.fit(x, y)\n\n    #MSE and R value\n    regression_model_mse = mean_squared_error(x, y)\n    print(\"MSE: \", math.sqrt(regression_model_mse))\n    print(\"R squared value:\", model.score(x,y))\n\n    #y=mx+b\n    #we can get the m and b values after the model fit\n    #this is the m\n    print(\"coef: \",model.coef_[0])\n    #this is b in our model\n    print(\"intercept: \",model.intercept_[0])\n    #visualize the dataset with the fitted model\n    plt.scatter(x, y, color= color, alpha=0.3)\n    plt.plot(x, model.predict(x), color = line)\n    plt.title (\"Linear Regression\")\n    plt.xlabel(\"Size\")\n    plt.ylabel(\"Price\")\n    plt.show()\n    #print(\"Prediction by the model:\" , model.predict([[370]]))","189d393c":"linear_model(x_reactions,y_reactions,'red','black')","875ecbfa":"plot_grahp(x_comments,y_comments,'Scatter plot of comments data','index','comments','green')","5f11cd0d":"linear_model(x_comments,y_comments,'green','black')","3f2cea46":"plot_grahp(x_shares,y_shares,'Scatter plot of shares data','index','shares','blue')","f13b57b1":"linear_model(x_shares,y_shares,'blue','black')","51166995":"dataframe_video_sub_reactions_good = dataframe_video_sub_reactions_good.iloc[::-1]\ndataframe_video_sub_reactions_good[\"index\"] = range(len(dataframe_video_sub_reactions_good))\ndataframe_video_sub_reactions_good.head()","a14f36c1":"print(\"\u0e0a\u0e2d\u0e1a(like) : %d\"%dataframe_video_sub_reactions_good.iloc[:,0].sum())\nprint(\"\u0e23\u0e31\u0e01(love) : %d\"%dataframe_video_sub_reactions_good.iloc[:,1].sum())\nprint(\"\u0e27\u0e49\u0e32\u0e27(wow) : %d\"%dataframe_video_sub_reactions_good.iloc[:,2].sum())\nprint(\"\u0e2e\u0e48\u0e32\u0e46(haha) : %d\"%dataframe_video_sub_reactions_good.iloc[:,3].sum())","d6bae3d8":"dataframe_video_sub_reactions_good.mean()","be745230":"# Plot the data\nx_likes = dataframe_video_sub_reactions_good.iloc[:, 4] #index\ny_likes = dataframe_video_sub_reactions_good.iloc[:, 0] #likes\n\nx_loves = dataframe_video_sub_reactions_good.iloc[:, 4] #index\ny_loves = dataframe_video_sub_reactions_good.iloc[:, 1] #loves\n\nx_wows = dataframe_video_sub_reactions_good.iloc[:, 4] #index\ny_wows = dataframe_video_sub_reactions_good.iloc[:, 2] #wows\n\nx_hahas = dataframe_video_sub_reactions_good.iloc[:, 4] #index\ny_hahas = dataframe_video_sub_reactions_good.iloc[:, 3] #hahas","24a60a6f":"plt.scatter(x_likes, y_likes, c='red', alpha=0.3)\nplt.scatter(x_loves, y_loves, c='green', alpha=0.3)\nplt.scatter(x_wows, y_wows, c='blue', alpha=0.3)\nplt.scatter(x_hahas, y_hahas, c='orange', alpha=0.3)\nplt.title('Scatter plot of likes loves wows hahas data')\nplt.xlabel('index')\nplt.ylabel('likes loves wows hahas data')\nplt.show()","eccc1437":"plot_grahp(x_likes,y_likes,'Scatter plot of likes data','index','likes','red')","73dd4c3a":"linear_model(x_likes,y_likes,'red','black')","4572bb2d":"plot_grahp(x_loves,y_loves,'Scatter plot of loves data','index','loves','green')","ee4caf1f":"linear_model(x_loves,y_loves,'green','black')","85f63b10":"plot_grahp(x_wows,y_wows,'Scatter plot of wows data','index','wows','blue')","5bf23f9b":"linear_model(x_wows,y_wows,'blue','black')","4d8c298f":"plot_grahp(x_hahas,y_hahas,'Scatter plot of hahas data','index','hahas','orange')","b0771aca":"linear_model(x_hahas,y_hahas,'orange','black')","865dd3bc":"dataframe_video_sub_reactions_bad = dataframe_video_sub_reactions_bad.iloc[::-1]\ndataframe_video_sub_reactions_bad[\"index\"] = range(len(dataframe_video_sub_reactions_bad))\ndataframe_video_sub_reactions_bad.head()","eab492a2":"print(\"\u0e40\u0e2a\u0e35\u0e22\u0e43\u0e08 : %d\"%dataframe_video_sub_reactions_bad.iloc[:,0].sum())\nprint(\"\u0e42\u0e01\u0e23\u0e18 : %d\"%dataframe_video_sub_reactions_bad.iloc[:,1].sum())","581bffd9":"dataframe_video_sub_reactions_bad.mean()","07b742ff":"# Plot the data\nx_sads = dataframe_video_sub_reactions_bad.iloc[:, 2] #index\ny_sads = dataframe_video_sub_reactions_bad.iloc[:, 0] #sads\n\nx_angrys = dataframe_video_sub_reactions_bad.iloc[:, 2] #index\ny_angrys = dataframe_video_sub_reactions_bad.iloc[:, 1] #angrys","646b4885":"plt.scatter(x_sads, y_sads, c='blue', alpha=0.3)\nplt.scatter(x_angrys, y_angrys, c='red', alpha=0.3)\nplt.title('Scatter plot of sads angrys data')\nplt.xlabel('index')\nplt.ylabel('sads angrys data shares')\nplt.show()","4c8490a4":"plot_grahp(x_sads,y_sads,'Scatter plot of sads data','index','sads','blue')","aeecf327":"linear_model(x_sads,y_sads,'blue','black')","64fbb8cd":"plot_grahp(x_angrys, y_angrys,'Scatter plot of angrys data','index','angrys','red')","c32a62be":"linear_model(x_angrys,y_angrys,'red','black')","1bb7fdfd":"ModeResult_p, count_p = mode(hrs_p)\nprint(\"\u0e40\u0e27\u0e25\u0e32:%d \u0e19\u0e32\u0e2c\u0e34\u0e01\u0e32\\n\"%ModeResult_p)\nprint(\"\u0e08\u0e33\u0e19\u0e27\u0e19:%d\\n\"%count_p)","34ca9666":"df_photo[\"hours\"] = hrs_p\ndf_photo.head()","d92c71b7":"photo_reactions = []\nphoto_sub_reactions_good = []\nphoto_sub_reactions_bad = []","2a55d646":"for index in range(len(df_photo)):\n    if(df_photo[\"hours\"][index] == ModeResult_p):\n        photo_reactions.append(df_photo[[\"num_reactions\",\"num_comments\",\"num_shares\"]].values[index])\n        photo_sub_reactions_good.append(df_photo[[\"num_likes\",\"num_loves\",\"num_wows\",\"num_hahas\"]].values[index])\n        photo_sub_reactions_bad.append(df_photo[[\"num_sads\",\"num_angrys\"]].values[index])","47ff1266":"dataframe_photo_reactions = pd.DataFrame(photo_reactions,columns=[\"num_reactions\",\"num_comments\",\"num_shares\"])\ndataframe_photo_sub_reactions_good = pd.DataFrame(photo_sub_reactions_good,columns=[\"num_likes\",\"num_loves\",\"num_wows\",\"num_hahas\"])\ndataframe_photo_sub_reactions_bad = pd.DataFrame(photo_sub_reactions_bad,columns=[\"num_sads\",\"num_angrys\"])","669dfe5a":"dataframe_photo_reactions = dataframe_photo_reactions.iloc[::-1]\ndataframe_photo_reactions[\"index\"] = range(len(dataframe_photo_reactions))\ndataframe_photo_reactions.head()","bff47d28":"print(\"\u0e01\u0e32\u0e23\u0e15\u0e2d\u0e1a\u0e2a\u0e19\u0e2d\u0e07 : %d\"%dataframe_photo_reactions.iloc[:,0].sum())\nprint(\"\u0e04\u0e2d\u0e21\u0e40\u0e21\u0e19\u0e15\u0e4c : %d\"%dataframe_photo_reactions.iloc[:,1].sum())\nprint(\"\u0e41\u0e0a\u0e23\u0e4c : %d\"%dataframe_photo_reactions.iloc[:,2].sum())","34fc7e9a":"# Plot the data\nx_comments = dataframe_photo_reactions.iloc[:, 3] #index\ny_comments = dataframe_photo_reactions.iloc[:, 0] #reactions\n\nx_reactions = dataframe_photo_reactions.iloc[:, 3] #index\ny_reactions = dataframe_photo_reactions.iloc[:, 1] #shares\n\nx_shares = dataframe_photo_reactions.iloc[:, 3] #index\ny_shares = dataframe_photo_reactions.iloc[:, 2] #comments","264cfb6b":"plt.scatter(x_reactions, y_reactions, c='red', alpha=0.3)\nplt.scatter(x_comments, y_comments, c='green', alpha=0.3)\nplt.scatter(x_shares, y_shares, c='blue', alpha=0.3)\nplt.title('Scatter plot of reactions comments shares data')\nplt.xlabel('index')\nplt.ylabel('reactions comments shares data')\nplt.show()","205ea8fc":"plot_grahp(x_reactions,y_reactions,'Scatter plot of reactions data','index','reactions','red')","23015378":"linear_model(x_reactions,y_reactions,'red','black')","9c33fae5":"plot_grahp(x_comments,y_comments,'Scatter plot of comments data','index','comments','green')","67997ecb":"linear_model(x_comments,y_comments,'green','black')","bf25f1b6":"plot_grahp(x_shares,y_shares,'Scatter plot of shares data','index','shares','blue')","6936334f":"linear_model(x_shares,y_shares,'blue','red')","a5442fc6":"dataframe_photo_sub_reactions_good = dataframe_photo_sub_reactions_good.iloc[::-1]\ndataframe_photo_sub_reactions_good[\"index\"] = range(len(dataframe_photo_sub_reactions_good))\ndataframe_photo_sub_reactions_good.head()","dd24fcc8":"print(\"\u0e0a\u0e2d\u0e1a(like) : %d\"%dataframe_photo_sub_reactions_good.iloc[:,0].sum())\nprint(\"\u0e23\u0e31\u0e01(love) : %d\"%dataframe_photo_sub_reactions_good.iloc[:,1].sum())\nprint(\"\u0e27\u0e49\u0e32\u0e27(wow) : %d\"%dataframe_photo_sub_reactions_good.iloc[:,2].sum())\nprint(\"\u0e2e\u0e48\u0e32\u0e46(haha) : %d\"%dataframe_photo_sub_reactions_good.iloc[:,3].sum())","66502a96":"# Plot the data\nx_likes = dataframe_photo_sub_reactions_good.iloc[:, 4] #index\ny_likes = dataframe_photo_sub_reactions_good.iloc[:, 0] #likes\n\nx_loves = dataframe_photo_sub_reactions_good.iloc[:, 4] #index\ny_loves = dataframe_photo_sub_reactions_good.iloc[:, 1] #loves\n\nx_wows = dataframe_photo_sub_reactions_good.iloc[:, 4] #index\ny_wows = dataframe_photo_sub_reactions_good.iloc[:, 2] #wows\n\nx_hahas = dataframe_photo_sub_reactions_good.iloc[:, 4] #index\ny_hahas = dataframe_photo_sub_reactions_good.iloc[:, 3] #hahas","d86265d2":"plt.scatter(x_likes, y_likes, c='red', alpha=0.3)\nplt.scatter(x_loves, y_loves, c='green', alpha=0.3)\nplt.scatter(x_wows, y_wows, c='blue', alpha=0.3)\nplt.scatter(x_hahas, y_hahas, c='orange', alpha=0.3)\nplt.title('Scatter plot of likes loves wows hahas data')\nplt.xlabel('index')\nplt.ylabel('likes loves wows hahas data')\nplt.show()","9893a5cd":"plot_grahp(x_likes,y_likes,'Scatter plot of likes data','index','likes','red')","7bc77e55":"linear_model(x_likes,y_likes,'red','black')","cd13faf8":"plot_grahp(x_loves,y_loves,'Scatter plot of loves data','index','loves','green')","1d69fcd2":"linear_model(x_loves,y_loves,'green','black')","4d0c93d9":"plot_grahp(x_wows,y_wows,'Scatter plot of wows data','index','wows','blue')","7f500c79":"linear_model(x_wows,y_wows,'blue','black')","9f4bb000":"plot_grahp(x_hahas,y_hahas,'Scatter plot of hahas data','index','hahas','orange')","ce1822cf":"linear_model(x_hahas,y_hahas,'orange','black')","c4ae2126":"dataframe_photo_sub_reactions_bad = dataframe_photo_sub_reactions_bad.iloc[::-1]\ndataframe_photo_sub_reactions_bad[\"index\"] = range(len(dataframe_photo_sub_reactions_bad))\ndataframe_photo_sub_reactions_bad.head()","51342b55":"print(\"\u0e40\u0e2a\u0e35\u0e22\u0e43\u0e08 : %d\"%dataframe_photo_sub_reactions_bad.iloc[:,0].sum())\nprint(\"\u0e42\u0e01\u0e23\u0e18 : %d\"%dataframe_photo_sub_reactions_bad.iloc[:,1].sum())","e43cbd72":"# Plot the data\nx_sads = dataframe_photo_sub_reactions_bad.iloc[:, 2] #index\ny_sads = dataframe_photo_sub_reactions_bad.iloc[:, 0] #sads\n\nx_angrys = dataframe_photo_sub_reactions_bad.iloc[:, 2] #index\ny_angrys = dataframe_photo_sub_reactions_bad.iloc[:, 1] #angrys","fc8882c5":"plt.scatter(x_sads, y_sads, c='red', alpha=0.3)\nplt.scatter(x_angrys, y_angrys, c='blue', alpha=0.3)\nplt.title('Scatter plot of sads angrys data')\nplt.xlabel('index')\nplt.ylabel('sads angrys data shares')\nplt.show()","8bba5b56":"plot_grahp(x_sads,y_sads,'Scatter plot of sads data','index','sads','red')","be67bf42":"linear_model(x_sads,y_sads,'red','black')","ea0f2117":"plot_grahp(x_angrys,y_angrys,'Scatter plot of angrys data','index','angrys','blue')","83f6faaf":"linear_model(x_angrys,y_angrys,'blue','red')","1f76327b":"import seaborn as sns\nfrom sklearn.cluster import KMeans","e2c18bed":"dataframe_photo_sub_reactions_good.head()","58c9c46e":"sns.scatterplot(data=dataframe_photo_sub_reactions_good[['num_likes', 'num_loves', 'num_wows','num_hahas']])","2a3fbd08":"sns.scatterplot(data=dataframe_photo_sub_reactions_good[['num_likes', 'num_loves', 'num_wows','num_hahas']],x='num_likes',y='num_wows')","aa2421b7":"# initail values array","e68e15dd":"# Show columns","b95cdf88":"# \u0e2a\u0e48\u0e27\u0e19\u0e43\u0e2b\u0e0d\u0e48\u0e41\u0e25\u0e49\u0e27\u0e42\u0e1e\u0e2a\u0e1a\u0e19 Facebook (\u0e27\u0e35\u0e14\u0e35\u0e42\u0e2d)\u0e40\u0e27\u0e25\u0e32\u0e44\u0e2b\u0e19\u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14","fa00e2a6":"**\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e0a\u0e31\u0e48\u0e27\u0e42\u0e21\u0e07\u0e17\u0e35\u0e48\u0e15\u0e31\u0e14\u0e21\u0e32\u0e41\u0e25\u0e49\u0e27**","a6e15f2e":"\u0e14\u0e49\u0e32\u0e19\u0e25\u0e48\u0e32\u0e07\u0e19\u0e35\u0e49\u0e44\u0e21\u0e48\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27","b2e98854":"# Show types","443ad2b7":"# Show columns","c38e4935":"# \u0e04\u0e37\u0e19\u0e19\u0e35\u0e49","692712bd":"# Read Facebook data for analyst","019bb8d8":"# \u0e2a\u0e48\u0e27\u0e19\u0e43\u0e2b\u0e0d\u0e48\u0e41\u0e25\u0e49\u0e27\u0e42\u0e1e\u0e2a\u0e1a\u0e19 Facebook(\u0e23\u0e39\u0e1b\u0e20\u0e32\u0e1e)\u0e40\u0e27\u0e25\u0e32\u0e44\u0e2b\u0e19\u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14","baa1ef59":"# Linear Regression video_reactions_good","7293bbb1":"# Linear Regression video_reactions_bad","dcd72372":"# Show shape","1272d69c":"# Linear Regression video_reactions","824be87a":"**K-means**","5508197d":"# Print mean of Live_dataset","da791ed7":"**Cut Column1\/2\/3\/4**\nVideo = 1\nphoto = 0","40a20e7c":"# initail values","037796c4":"**\u0e14\u0e39 data \u0e42\u0e14\u0e22\u0e23\u0e27\u0e21**"}}