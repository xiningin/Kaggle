{"cell_type":{"f09f5202":"code","ab2a37b1":"code","b25e5ca2":"code","444eda6a":"code","39e76571":"code","a38b0286":"code","704edeea":"code","10f2df38":"code","b9c8778e":"code","82a1d7a1":"code","d4acaa79":"code","912bf45f":"code","82bb06ac":"code","6988f14b":"code","6a1b76f1":"code","86efab6d":"code","7267b32b":"code","5e4cd963":"code","916154a2":"code","3150c652":"code","fd60746a":"code","158d7446":"markdown","b718076b":"markdown","95460a0a":"markdown","8b053c83":"markdown"},"source":{"f09f5202":"import os \nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport zipfile\nimport tensorflow as tf\nfrom tensorflow.keras.optimizers import RMSprop, Adam\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras import datasets,layers,models,Model","ab2a37b1":"#load data\n(X_train,y_train),(X_test,y_test)=datasets.cifar10.load_data()","b25e5ca2":"X_train.shape","444eda6a":"X_test.shape","39e76571":"print(X_train[0])","a38b0286":"# Reshape converting 2D to 1D\ny_train = y_train.reshape(-1,)\ny_test = y_test.reshape(-1,)","704edeea":"y_train[:5]","10f2df38":"y_train = y_train.reshape(-1,)\ny_train[:5]","b9c8778e":"classes = [\"airplane\",\"automobile\",\"bird\",\"cat\",\"deer\",\"dog\",\"frog\",\"horse\",\"ship\",\"truck\"]","82a1d7a1":"classes[5]","d4acaa79":"plt.figure(figsize= (12,12))\nfor i in range(256):\n  plt.subplot(16,16,i+1)\n  plt.axis('off')\n  plt.imshow(X_train[i])","912bf45f":"# This code normalazation\nX_train = X_train \/ 255\nX_test = X_test \/ 255\nX_train[:1]","82bb06ac":"model_ann = models.Sequential([\n        layers.Flatten(input_shape=(32,32,3)),\n        layers.Dense(3000, activation='relu'),\n        layers.Dense(2000, activation='relu'),\n        layers.Dense(1000, activation='relu'),\n        layers.Dense(10, activation='softmax')    \n    ])\n\nmodel_ann.compile(optimizer='Adam',\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])\n\nMODEL_1 = model_ann.fit(\n    X_train, y_train, epochs=10\n)","6988f14b":"from sklearn.metrics import confusion_matrix , classification_report\nimport numpy as np\ny_pred = model_ann.predict(X_test)\ny_pred_classes = [np.argmax(element) for element in y_pred]\n\nprint(\"Classification Report: \\n\", classification_report(y_test, y_pred_classes))","6a1b76f1":"model_cnn = models.Sequential([\n        layers.Conv2D(filters=32,kernel_size=(3,3),activation='relu',input_shape=(32,32,3)),\n        layers.MaxPooling2D((2,2)),\n        \n        layers.Conv2D(filters=64,kernel_size=(3,3),activation='relu'),\n        layers.MaxPooling2D((2,2)),\n        layers.Dropout(0.5),\n    \n        layers.Conv2D(filters=128,kernel_size=(3,3),activation='relu'),\n        layers.MaxPooling2D((2,2)),\n        layers.Dropout(0.5),\n        \n        layers.Flatten(),\n        layers.Dense(512, activation='relu'),\n        layers.Dense(10, activation='softmax')    \n    ])","86efab6d":"model_cnn.compile(\n                loss = 'sparse_categorical_crossentropy',\n               optimizer = 'Adam',\n               metrics = ['accuracy'])\n\n\nMODEL_2=model_cnn.fit(X_train,y_train,\n                        epochs=20,\n                      verbose=1)","7267b32b":"model_cnn.evaluate(X_test,y_test)","5e4cd963":"y_pred = model_cnn.predict(X_test)\ny_pred[:5]","916154a2":"y_pred = model_cnn.predict(X_test)\n\ny_classes = [np.argmax(element) for element in y_pred]\ny_classes[:5]","3150c652":"y_test[:5]","fd60746a":"classes[y_classes[5]]","158d7446":"## **Accuracy of cNN model is = 0.7406**","b718076b":"## **Accuracy of ANN model is = 0.48**","95460a0a":"# **ANN Model :-**","8b053c83":"# **CNN Model:-**"}}