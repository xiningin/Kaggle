{"cell_type":{"f0985cc6":"code","6cbfdc70":"code","22957c88":"code","9f492a4b":"code","94fe0d8e":"code","00256cbd":"code","60124791":"code","70302818":"code","a4d8d6ed":"code","f516eae2":"code","21c729b1":"code","950e6f3d":"code","132f0b49":"code","f1e2a35a":"code","64df3f34":"code","1b7f207d":"code","6e1430ec":"code","b212ffe7":"code","6b8f284d":"code","8b482185":"code","497a9fa3":"code","f1314c81":"code","cee00709":"code","7845d4ed":"code","9f117492":"code","d2440b16":"code","55dcc133":"code","5d385722":"code","f0ac79ad":"code","bdcfee66":"code","3e1f2c72":"markdown","ccb4b222":"markdown"},"source":{"f0985cc6":"import pandas as pd\nwater=pd.read_csv('..\/input\/water-potability\/water_potability.csv')\nwater.head()","6cbfdc70":"water.info()","22957c88":"water.describe()","9f492a4b":"Potability_0=water[water.Potability==0]\nPotability_0.head()","94fe0d8e":"round(Potability_0.isnull().sum()*100\/len(Potability_0),2).sort_values(ascending=False)","00256cbd":"Potability_0.describe()","60124791":"Potability_0.fillna(Potability_0.median(), inplace=True)\nPotability_0.describe()","70302818":"Potability_1=water[water.Potability==1]\nPotability_1.head()","a4d8d6ed":"round(Potability_1.isnull().sum()*100\/len(Potability_1),2).sort_values(ascending=False)","f516eae2":"Potability_1.fillna(Potability_1.median(), inplace=True)\nPotability_1.describe()","21c729b1":"import numpy as np\nwater=pd.concat([Potability_1, Potability_0], axis=0)\nwater = water.iloc[np.random.permutation(len(water))]\nwater=water.reset_index(drop=True)\nwater.head()","950e6f3d":"water.nunique()","132f0b49":"round(water.Potability.value_counts()*100\/len(water),2)","f1e2a35a":"data = water.sample(frac=0.8, random_state=42)\ndata_unseen = water.drop(data.index)\ndata.reset_index(inplace=True, drop=True)\ndata_unseen.reset_index(inplace=True, drop=True)\nprint('Data for Modeling: ' + str(data.shape))","64df3f34":"print('Unseen Data For Predictions: ' + str(data_unseen.shape))","1b7f207d":"round(data.Potability.value_counts()*100\/len(data),2)","6e1430ec":"!pip install pycaret","b212ffe7":"from pycaret.classification import *","6b8f284d":"water_test= setup(data = data, target = 'Potability', session_id=42,\n                  normalize = True, \n                  transformation = True, \n                  log_experiment = True,\n                  handle_unknown_categorical = True, \n                  unknown_categorical_method = 'most_frequent',\n                  remove_multicollinearity = True, #rop one of the two features that are highly correlated with each other\n                  ignore_low_variance = True,#all categorical features with statistically insignificant variances are removed from the dataset.\n                  combine_rare_levels = True,\n                  fix_imbalance = True\n                 )","8b482185":"gbc = create_model('gbc')","497a9fa3":"print(gbc)","f1314c81":"tuned_gbc = tune_model(gbc,optimize = 'F1')","cee00709":"plot_model(tuned_gbc, plot = 'auc')","7845d4ed":"plot_model(tuned_gbc, plot = 'pr')","9f117492":"plot_model(tuned_gbc, plot='feature')","d2440b16":"plot_model(tuned_gbc, plot = 'confusion_matrix')","55dcc133":"evaluate_model(tuned_gbc)","5d385722":"predict_model(tuned_gbc)","f0ac79ad":"unseen_predictions = predict_model(tuned_gbc, data=data_unseen)\nunseen_predictions.head()","bdcfee66":"print(\"Confidence Score :   {}\".format(round(unseen_predictions.Score.mean(),2)))#Confidence Score","3e1f2c72":"#### Treating Missing value for Potability_0 records","ccb4b222":"#### Treating Missing value for Potability_1 records"}}