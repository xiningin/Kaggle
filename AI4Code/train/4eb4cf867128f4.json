{"cell_type":{"a8c72ead":"code","511e6e1b":"code","5645f31c":"code","5fce1215":"code","8d8b4beb":"code","ea44de4a":"code","37b325e7":"code","5336b1cf":"code","0c95827b":"code","bd6dc4f1":"code","acbe1f2c":"code","e87938b5":"code","d22f10af":"code","1344c507":"code","5c09b0c8":"code","7bae8831":"code","997dfa58":"code","ee4cd542":"code","71496713":"code","13b6b1eb":"code","4cd8599a":"code","2c445be6":"markdown","d151c2d8":"markdown","c8022a13":"markdown","5ca4119d":"markdown","7d9b2148":"markdown","0d133338":"markdown","c5edb9ac":"markdown","6533d249":"markdown","6f0ee1ed":"markdown","b68968f7":"markdown","1bbd40b1":"markdown","87a40593":"markdown","8d1cd2a5":"markdown","554be2e0":"markdown","622eca43":"markdown","71e63985":"markdown"},"source":{"a8c72ead":"import numpy as numpyInstance\nimport pandas as pandasInstance\nimport matplotlib.pyplot as matplotlibInstance\nimport seaborn as seabornInstance","511e6e1b":"%matplotlib inline","5645f31c":"breastCancerData = pandasInstance.read_csv('..\/input\/data.csv')","5fce1215":"breastCancerData.head()","8d8b4beb":"breastCancerData.info()","ea44de4a":"from sklearn.preprocessing import StandardScaler","37b325e7":"scaler = StandardScaler()\nbreastCancerData.columns","5336b1cf":"scaler.fit(breastCancerData[['radius_mean', 'texture_mean', 'perimeter_mean',\n       'area_mean', 'smoothness_mean', 'compactness_mean', 'concavity_mean',\n       'concave points_mean', 'symmetry_mean', 'fractal_dimension_mean',\n       'radius_se', 'texture_se', 'perimeter_se', 'area_se', 'smoothness_se',\n       'compactness_se', 'concavity_se', 'concave points_se', 'symmetry_se',\n       'fractal_dimension_se', 'radius_worst', 'texture_worst',\n       'perimeter_worst', 'area_worst', 'smoothness_worst',\n       'compactness_worst', 'concavity_worst', 'concave points_worst',\n       'symmetry_worst', 'fractal_dimension_worst']])","0c95827b":"transformed = scaler.transform(breastCancerData[['radius_mean', 'texture_mean', 'perimeter_mean',\n       'area_mean', 'smoothness_mean', 'compactness_mean', 'concavity_mean',\n       'concave points_mean', 'symmetry_mean', 'fractal_dimension_mean',\n       'radius_se', 'texture_se', 'perimeter_se', 'area_se', 'smoothness_se',\n       'compactness_se', 'concavity_se', 'concave points_se', 'symmetry_se',\n       'fractal_dimension_se', 'radius_worst', 'texture_worst',\n       'perimeter_worst', 'area_worst', 'smoothness_worst',\n       'compactness_worst', 'concavity_worst', 'concave points_worst',\n       'symmetry_worst', 'fractal_dimension_worst']])","bd6dc4f1":"toMakeNewDataFrame = breastCancerData[['radius_mean', 'texture_mean', 'perimeter_mean',\n       'area_mean', 'smoothness_mean', 'compactness_mean', 'concavity_mean',\n       'concave points_mean', 'symmetry_mean', 'fractal_dimension_mean',\n       'radius_se', 'texture_se', 'perimeter_se', 'area_se', 'smoothness_se',\n       'compactness_se', 'concavity_se', 'concave points_se', 'symmetry_se',\n       'fractal_dimension_se', 'radius_worst', 'texture_worst',\n       'perimeter_worst', 'area_worst', 'smoothness_worst',\n       'compactness_worst', 'concavity_worst', 'concave points_worst',\n       'symmetry_worst', 'fractal_dimension_worst']]","acbe1f2c":"newDataFrameWithFeatures = pandasInstance.DataFrame(transformed,columns=toMakeNewDataFrame.columns)","e87938b5":"from sklearn.model_selection import train_test_split","d22f10af":"X_train, X_test, y_train, y_test = train_test_split(newDataFrameWithFeatures, breastCancerData['diagnosis'], test_size=0.33, random_state=42)","1344c507":"from sklearn.neighbors import KNeighborsClassifier","5c09b0c8":"knModel = KNeighborsClassifier(n_neighbors=1)","7bae8831":"knModel.fit(X_train,y_train)","997dfa58":"predictions = knModel.predict(X_test)","ee4cd542":"from sklearn.metrics import classification_report","71496713":"print(classification_report(predictions,y_test))","13b6b1eb":"#Here we are Calculating predictions for each Value of K from 1 to 40 and Calculating the Average Error Value and Storing it in ERROR.\nerrors = []\nfor number in range(1,50):\n    anOtherModel = KNeighborsClassifier(n_neighbors=number)\n    anOtherModel.fit(X_train,y_train)\n    anOtherpredictions = anOtherModel.predict(X_test)\n    errors.append(numpyInstance.mean(predictions!=y_test))","4cd8599a":"matplotlibInstance.figure(figsize=(10,6))\nmatplotlibInstance.plot(range(1,50),errors,color='green', linestyle='dashed', marker='o')\nmatplotlibInstance.title('Error Rate vs. K Value')\nmatplotlibInstance.xlabel('K')\nmatplotlibInstance.ylabel('Error Rate')","2c445be6":"Now Checking the Info of the columns.","d151c2d8":"## This Means that we are already at the Best Accuracy so Value of K=1 is already perfect.","c8022a13":"Now let's Try to Make it Even More Accurate.","5ca4119d":"Now Importing the Data of Breast Cancer.","7d9b2148":"Importing all the Required Libraries for data analysis and data visualization.","0d133338":"Now Setting Inline Data Visualization Settings.","c5edb9ac":"Now Training the KNN Model.","6533d249":"Checking the Header of the Data.","6f0ee1ed":"# Breast Cancer Diagnostic Classification.Breast Cancer Diagnostic Classification of Malignant or Benign","b68968f7":"Now let's make predictions.","1bbd40b1":"Now Let's Check the Accuracy of the K = 1.","87a40593":"Now Making The Test and Train Data.","8d1cd2a5":"Now Let's Check Where we have the Least Error.","554be2e0":"Now Transforming it into more understandable form.","622eca43":"Now Let's Standarize the Data for the Convinent Use of The KNN Algorithm.","71e63985":"This NoteBook is the Practice for the K Nearest Neighbors Classifications Algorithm."}}