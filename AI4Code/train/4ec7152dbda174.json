{"cell_type":{"4a513add":"code","e4bb5444":"code","d66fcdc0":"code","f02a45a1":"code","f8ac673a":"code","af6e5997":"code","62632e61":"code","f991bcb4":"code","2aaa39c1":"code","bc11c6bb":"code","a7e9633f":"code","65881d7e":"code","90043ce0":"code","a37f490a":"code","69e37b01":"code","a8497a86":"code","fb7e81d8":"code","8eaf8c81":"code","debf69c4":"code","1194281b":"code","3cf1c96f":"code","1d4066cb":"code","18ac81ef":"code","60034c75":"code","b59bd0bf":"code","43e7e28c":"markdown","0830e38b":"markdown","1d4a688c":"markdown","7936e0e2":"markdown","f05eb0ff":"markdown","7b7a22fb":"markdown","c28bcd2f":"markdown","021eea24":"markdown","4434d99a":"markdown","001e0f3e":"markdown","4e823d14":"markdown","4f798c8d":"markdown","4595fb50":"markdown","2d1f16a1":"markdown","3eeff1fa":"markdown","a19889d5":"markdown","67c4eaa0":"markdown","94c226b6":"markdown","f1310afe":"markdown","8df9826d":"markdown","ade2f39f":"markdown","d2a58018":"markdown","18242efe":"markdown","e84961e5":"markdown","0eceab8b":"markdown","0033c008":"markdown","0735aac9":"markdown","579524ee":"markdown","3dbd7dbd":"markdown"},"source":{"4a513add":"!pip install chart-studio","e4bb5444":"from IPython.display import Image\nimport chart_studio.plotly as py\n\nImage(\"..\/input\/covid-19-image\/COVID19.jpg\")","d66fcdc0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport plotly.graph_objects as go\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport chart_studio.plotly as py\nfrom plotly.graph_objs import *\nfrom IPython.display import Image\npd.set_option('display.max_rows', None)\n\nimport plotly.graph_objs as go\nfrom plotly import tools\nfrom plotly.offline import iplot, init_notebook_mode\ninit_notebook_mode()\n\n# For Density plots\nfrom plotly.tools import FigureFactory as FF\n\nimport datetime\nimport matplotlib\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n%matplotlib inline\nsns.set()\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f02a45a1":"COVID19_line_list_data = pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/COVID19_line_list_data.csv\")\nCOVID19_open_line_list = pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/COVID19_open_line_list.csv\")\ncovid_19_data = pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv\")\ntime_series_covid_19_confirmed = pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_confirmed.csv\")\ntime_series_covid_19_deaths = pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_deaths.csv\")\ntime_series_covid_19_recovered = pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_recovered.csv\")","f8ac673a":"covid_19_data.head()","af6e5997":"time_series_covid_19_confirmed.head()","62632e61":"time_series_covid_19_deaths.head()","f991bcb4":"time_series_covid_19_recovered.head()","2aaa39c1":"def group_covid(data,country):\n    cases = data.groupby(country).size()\n    cases = np.log(cases)\n    cases = cases.sort_values()\n    \n    # Visualize the results\n    fig=plt.figure(figsize=(35,7))\n    plt.yticks(fontsize=8)\n    cases.plot(kind='bar',fontsize=12,color='orange')\n    plt.xlabel('')\n    plt.ylabel('Number of cases',fontsize=10)\n\ngroup_covid(covid_19_data,'Country\/Region')","bc11c6bb":"cases = covid_19_data.groupby(['Country\/Region']).size()\ncases = cases.sort_values()\n\ngrouped_df = pd.DataFrame(cases)\n\ngrouped_df['Count'] = pd.Series(cases).values\ngrouped_df['Country\/Region'] = grouped_df.index\ngrouped_df['Log Count'] = np.log(grouped_df['Count'])\ngrouped_df.head()","a7e9633f":"fig = go.Figure(go.Scatter(\n    x = grouped_df['Country\/Region'],\n    y = grouped_df['Count'],\n    text=['Line Chart with lines and markers'],\n    name='Country\/Region',\n    mode='lines+markers',\n    marker_color='#56B870'\n))\n\nfig.update_layout(\n    height=800,\n    title_text='COVID-19 cases across nations using line chart',\n    showlegend=True\n)\n\nfig.show()","65881d7e":"fig = go.Figure(go.Scatter(\n    x = grouped_df['Country\/Region'],\n    y = grouped_df['Log Count'],\n    text=['Line Chart with lines and markers'],\n    name='Country\/Region',\n    mode='lines+markers',\n    marker_color='#56B870'\n))\n\nfig.update_layout(\n    height=800,\n    title_text='COVID-19 cases across nations using line chart (Log scale)',\n    showlegend=True\n)\n\nfig.show()","90043ce0":"fig = go.Figure(go.Bar(\n    x = grouped_df['Country\/Region'],\n    y = grouped_df['Log Count'],\n    text=['Bar Chart'],\n    name='Countries',\n    marker_color=grouped_df['Count']\n))\n\nfig.update_layout(\n    height=800,\n    title_text='COVID-19 cases across nations using bar chart (Log scale)',\n    showlegend=True\n)\n\nfig.show()","a37f490a":"fig = go.Figure(go.Bar(\n    x = grouped_df['Country\/Region'],\n    y = grouped_df['Log Count'],\n    text=['Bar Chart'],\n    name='Countries',\n    marker_color=grouped_df['Log Count']\n))\n\nfig.update_layout(\n    height=800,\n    title_text='COVID-19 cases across nations using bar chart (Log scale)',\n    showlegend=True\n)\n\nfig.show()","69e37b01":"grouped_df.head()","a8497a86":"covid_countries = covid_19_data.groupby('Country\/Region')['ObservationDate'].value_counts().reset_index(name='t')\ncovid_countries['Count'] = covid_19_data.groupby('Country\/Region')['ObservationDate'].transform('size')\n\ncovid_countries.head()","fb7e81d8":"# Create traces\nfig = go.Figure()\n\nfig.add_trace(go.Scatter(\n    x = covid_countries['ObservationDate'],\n    y = covid_countries['Country\/Region'],\n    text=['Line Chart with lines and markers'],\n    name='Countries',\n    mode='markers',\n    \n))\n\nfig.update_layout(\n    height=800,\n    title_text='COVID-19 case occurences across nations',\n    showlegend=True\n)\n\nfig.show()","8eaf8c81":"fig = go.Figure()\nfig.add_trace(go.Bar(x = covid_countries['ObservationDate'],\n                y = covid_countries['Country\/Region'],\n                name='Country\/Region',\n                marker_color=covid_countries['Count']\n                ))\n\nfig.update_layout(\n    height=800,\n    title_text='COVID-19 cases visualized over time across nations',\n    \n    showlegend=True\n)\n\nfig.show()","debf69c4":"\nconfirmed_df = covid_19_data.groupby('Confirmed')['Country\/Region'].value_counts().reset_index(name='Conf')\nconfirmed_df['Conf'] = covid_19_data.groupby('Confirmed')['Country\/Region'].transform('size')\n\nconfirmed_df.head()","1194281b":"fig = px.pie(confirmed_df, values='Conf', names='Country\/Region')\nfig.show()","3cf1c96f":"deaths_df = covid_19_data.groupby('Deaths')['Country\/Region'].value_counts().reset_index(name='Death')\ndeaths_df['Death'] = covid_19_data.groupby('Deaths')['Country\/Region'].transform('size')\n\ndeaths_df.head()","1d4066cb":"fig = px.pie(deaths_df, values='Death', names='Country\/Region')\nfig.show()","18ac81ef":"recover_df = covid_19_data.groupby('Recovered')['Country\/Region'].value_counts().reset_index(name='Recover')\nrecover_df['Recover'] = covid_19_data.groupby('Recovered')['Country\/Region'].transform('size')\n\nrecover_df.head()","60034c75":"fig = px.pie(recover_df, values='Recover', names='Country\/Region')\nfig.show()","b59bd0bf":"sns.color_palette(\"cubehelix\", 8)\nsns.set_style(\"whitegrid\", {'axes.grid' : False})\n\nsns.color_palette(\"cubehelix\", 8)\nsns.distplot(confirmed_df['Conf'],bins=100,hist=False,   label=\"Confirmed Cases\");\n# sns.distplot(deaths_df['Death'],bins=100,hist=False,   label=\"Deaths\");\n# sns.distplot(recover_df['Recover'],bins=100,hist=False,   label=\"Recovered Cases\");\n\n\nplt.legend();","43e7e28c":"### Get 'Confirmed' cases for each country","0830e38b":"# COVID-19: EDA & Time Series Analysis\nFeaturing Time Series, Line Charts, Bar Charts, Pie Charts interactive visualizations in Plotly using Johns Hopkins Dataset\n\nCOVID 19 has been in the news and on all of the social media platforms out there. Here's the EDA and Time Series analysis using pie charts, bar graphs, scatter plots and line charts.<br>\n\nThis dataset is managed by the Johns Hopkins University Center for Systems Science and Engineering (JHU CSSE) which is supported by ESRI Living Atlas Team and the Johns Hopkins University Applied Physics Lab (JHU APL).","1d4a688c":"Group by cases across countries to visualize the data over 'ObservationDate'","7936e0e2":"Visualize the results by sorting the cases in ascending order and plotting them on line chart to observe the data distribution","f05eb0ff":"# Observe the cases over time","7b7a22fb":"### Observe the data","c28bcd2f":"### Get 'Deaths' cases for each country","021eea24":"We perform logarithmic scaling over the 'Cases' column and then sort the values so that \nwe can have the bars arranged alphabetically","4434d99a":"### Read the dataset files","001e0f3e":"### Visualize 'Deaths' for each country","4e823d14":"Observe the cases across the countries with the help of line charts with markers\nGet the actual values for the group by result","4f798c8d":"Since we are dealing with enormous COVID-19 data, we need to scale the data so that it fits the visualization\nColors of the bar charts are based on the logarithmic value of the cases for each country","4595fb50":"# Line Chart with Markers","2d1f16a1":"### Get 'Recovered' cases for each country","3eeff1fa":"# Perform Time Series Analysis","a19889d5":"Visualize the cases aross countries in by normalizing the values using log scale","67c4eaa0":"### Visualize the data points using line charts","94c226b6":"Ploty has deprecated plotly.plot package. We wil install chart-studio to replace plotly.plot package.","f1310afe":"# Visualize the composition of the cases","8df9826d":"Read the contents of each CSV using df.head() to get insights into the fields of the dataframes and understand data represented by each dataframe","ade2f39f":"# Density Graphs","d2a58018":"The data points represent the fact that a case was recorded for a given nation on a particular date","18242efe":"Group by 'covid_19_data' over 'Country\/Region' columns to visualize the total number of cases across countries","e84961e5":"Read the contents of grouped_df to comprehend the data and the fields in the dataframe","0eceab8b":"# Bar chart","0033c008":"### Observe the spread of Covid across different nations across times","0735aac9":"### Visualize 'Recovered' cases over Pie Chart","579524ee":"### Observe the spread across the countries","3dbd7dbd":"### Visualize Confirmed cases over Pie Chart"}}