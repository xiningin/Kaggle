{"cell_type":{"d92100b2":"code","b425c3e3":"code","595c20e9":"code","fab44115":"code","218ecb97":"code","a3acc7f9":"code","736fdad3":"code","90dba4e6":"code","2b539181":"code","3c034489":"code","4f2fb0a2":"code","23fdc648":"code","9542c386":"code","91661843":"code","ccee15a9":"code","c30628f0":"code","ac4d4057":"code","387d5e5b":"code","3f36413d":"code","509472e9":"code","9b7d3dc2":"code","d3ebbb96":"code","c1f69b73":"code","5107aef2":"code","f1f50b02":"code","1a2536ad":"code","eb4a851d":"code","dc931d0f":"code","49bc217c":"code","7937fa73":"code","9e39b34f":"code","40df2b68":"code","79ec0478":"code","099f1ee9":"code","ce4ea836":"code","c69f7b1f":"code","d0395793":"code","573f09cf":"code","671cff28":"code","40ad5f02":"markdown","40c8ef75":"markdown","2e119b2e":"markdown","a4b7da81":"markdown","41d5fcb6":"markdown","80c041aa":"markdown","4244b468":"markdown","d73c682c":"markdown","4cccef86":"markdown","ca9a122d":"markdown","da030940":"markdown","8d48a827":"markdown","bc94d87b":"markdown","387718c6":"markdown","a5fe1f03":"markdown"},"source":{"d92100b2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b425c3e3":"import seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set_palette(sns.color_palette([\"#f46036\",\"#2E294E\",\"#1b998b\",\"#e71d36\",\"#c5d86d\"]))\npal=sns.color_palette([\"#f46036\",\"#2E294E\",\"#1b998b\",\"#e71d36\",\"#c5d86d\"])\nsns.palplot([\"#f46036\",\"#2E294E\",\"#1b998b\",\"#e71d36\",\"#c5d86d\"])\n","595c20e9":"df =pd.read_csv('..\/input\/telecom-users-dataset\/telecom_users.csv')","fab44115":"df.head()","218ecb97":"# column Unnamed: 0 & customerID doesn't seems to have valide details. so dropping from the dataframe\ndf.drop(['Unnamed: 0', 'customerID'], axis=1, inplace=True)\n","a3acc7f9":"df.info()","736fdad3":"fig, ax = plt.subplots(ncols=2, nrows=2, figsize=(12,10))\ncolors=[\"#f46036\",\"#2E294E\",\"#1b998b\",\"#e71d36\",\"#c5d86d\"]\nax[0,0].pie(df['gender'].value_counts(), autopct='%.2f%%', labels=df['gender'].unique(), colors=colors)\nax[0,0].set_title('Telecom users by Gender')\nax[0,1].pie(df['SeniorCitizen'].value_counts(), autopct='%.2f%%', labels=['Non-Senior Citizen','Senior Citizer'], colors=colors)\nax[0,1].set_title('Telecom users by Gender')\nax[1,1].pie(df[df['SeniorCitizen']==1]['gender'].value_counts(), autopct='%.2f%%', labels=['Male','Female'],colors=colors)\nax[1,1].set_title('Out of Senior Citizer how many are Male & Female')\nax[1,0].pie(df[df['SeniorCitizen']==0]['gender'].value_counts(), autopct='%.2f%%', labels=['Male','Female'],colors=colors)\nax[1,0].set_title('Out of Non-Senior Citizer how many are Male & Female')\nplt.show()\n","90dba4e6":"#ternetService - client's Internet service provider (DSL, Fiber optic, No) -(2,1,0)\nfig, ax=plt.subplots(ncols=3,nrows=1, figsize=(12,10))\nj=0\nfig.suptitle('Gender usage of Intenet types')\nfor i in df['InternetService'].unique():\n    ax[j].pie(df[df['InternetService']==i]['gender'].value_counts(), colors=colors, labels=['Male','Female'], autopct='%.2f%%');\n    ax[j].set_title(i)\n    j=j+1\n#fig.show()","2b539181":"\nsns.countplot(x=df['InternetService'], hue=df['Churn'])","3c034489":"\nsns.countplot(x=df['PhoneService'], hue=df['Churn'])","4f2fb0a2":"\nsns.countplot(x=df['StreamingMovies'], hue=df['Churn'])","23fdc648":"\nsns.countplot(x=df['StreamingTV'], hue=df['Churn'])","9542c386":"df['TotalCharges']=pd.to_numeric(df['TotalCharges'],errors='coerce')\ndf.dropna(axis=0,inplace=True)","91661843":"sns.scatterplot(data=df, x='MonthlyCharges', y='TotalCharges', hue='Churn', alpha=0.5)","ccee15a9":"sns.boxplot(data=df, x='MonthlyCharges', y='Churn')","c30628f0":"sns.jointplot(data=df,x='MonthlyCharges',y='TotalCharges', kind='kde', hue='Churn')","ac4d4057":"df=df.replace('Yes',1)\ndf=df.replace('No',0)\ndf=df.replace('No internet service',0)\ndf=df.replace('No phone service',0)\ndf=df.replace('Fiber optic',2)\ndf=df.replace('DSL',1)","387d5e5b":"df=df.replace('Male',1)\ndf=df.replace('Female',0)","3f36413d":"df.info()","509472e9":"df1=pd.get_dummies(data=df, columns=['Contract','PaymentMethod'], drop_first=True)","9b7d3dc2":"df.isna().sum()","d3ebbb96":"df1.columns[abs(df1.corr()['Churn'])>0.1]","c1f69b73":"plt.figure(figsize=(12,10))\nsns.heatmap(df.drop('Churn',axis=1).corr(), annot=True)","5107aef2":"X=df1.drop('Churn',axis=1)\ny=df1['Churn']","f1f50b02":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42, shuffle=True)","1a2536ad":"from sklearn.preprocessing import StandardScaler\nscaler= StandardScaler().fit(X_train)\nX_train=scaler.transform(X_train)\nX_test=scaler.transform(X_test)","eb4a851d":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import roc_auc_score, plot_roc_curve, confusion_matrix, classification_report, accuracy_score\n\nmodel_set=[LogisticRegression(), DecisionTreeClassifier(),KNeighborsClassifier(n_neighbors=10)]\n       \nfor model in model_set:\n    model.fit(X_train,y_train)\n    model.score(X_train,y_train)\n    pred = model.predict(X_test)\n    print(\"Accuracy scoe of {} is {:.2f}%\\n\".format(model, accuracy_score(y_test, pred)*100))","dc931d0f":"accuracy_score(y_test, pred)","49bc217c":"sns.heatmap(confusion_matrix(y_test, pred), annot=True)","7937fa73":"print(classification_report(y_test,pred))","9e39b34f":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout\n\nmodel=Sequential()\nmodel.add(Dense(X_train.shape[1], activation='relu'))\n#model.add(Dropout(0.2))\nmodel.add(Dense(32,activation='relu'))\n#model.add(Dropout(0.2))\nmodel.add(Dense(16,activation='relu'))\nmodel.add(Dense(8,activation='relu'))\nmodel.add(Dense(3,activation='relu'))\nmodel.add(Dense(1, activation='sigmoid'))","40df2b68":"from tensorflow.keras.callbacks import EarlyStopping\nfrom tensorflow.keras.optimizers import Adam, SGD\ncallback=EarlyStopping(monitor='val_loss',patience=3)\nmodel.compile(optimizer=Adam(learning_rate=0.0001), loss='binary_crossentropy',metrics=['accuracy'])\nmodel.fit(X_train,y_train, validation_data=(X_test,y_test), verbose=1, epochs=100, callbacks=[callback])","79ec0478":"report =pd.DataFrame(model.history.history)","099f1ee9":"plt.plot(report[['loss','val_loss']], color='b');","ce4ea836":"plt.plot(report[['accuracy','val_accuracy']])","c69f7b1f":"pred = np.argmax(model.predict(X_test), axis=1)","d0395793":"accuracy_score(y_test,pred)","573f09cf":"from sklearn.decomposition import PCA\nmodel = PCA(n_components=1)\nmodel.fit(X_train,y_train)\nx_val=model.transform(X_train)","671cff28":"x_val","40ad5f02":"# Read Data","40c8ef75":"Conver the Categorical values to Numeric using get_dummies","2e119b2e":"# Metrics","a4b7da81":"# Train test split","41d5fcb6":"# Logistic regression with 80% accuracy","80c041aa":"# Conclusion\nin both Machinelearning model and Neural network model, the accuracy is around 73 to 80%","4244b468":"# Data cleaning\nThere are lot of Yes\/No values, let us replace it with 1 or 0. assumption in **bold**\n1. PhoneService - is the telephone service connected (Yes, No) - **(1,0)**\n2. MultipleLines - are multiple phone lines connected (Yes, No, No phone service) - **(1,0,0)**\n3. InternetService - client's Internet service provider (DSL, Fiber optic, No) -**(2,1,0)**\n4. OnlineSecurity - is the online security service connected (Yes, No, No internet service)-**(1,0,0)**\n5. OnlineBackup - is the online backup service activated (Yes, No, No internet service)-**(1,0,0)**\n6. DeviceProtection - does the client have equipment insurance (Yes, No, No internet service)-**(1,0,0)**\n7. TechSupport - is the technical support service connected (Yes, No, No internet service)-**(1,0,0)**\n8. StreamingTV - is the streaming TV service connected (Yes, No, No internet service)-**(1,0,0)**\n9. StreamingMovies - is the streaming cinema service activated (Yes, No, No internet service)-**(1,0,0)**\n10. Contract - type of customer contract (Month-to-month, One year, Two year) - **(month-to-month - 1, One Year - 12, Two Year = 24)**\n11. PaperlessBilling - whether the client uses paperless billing (Yes, No) - **(1,0)**\n12. PaymentMethod - payment method (Electronic check, Mailed check, Bank transfer (automatic), Credit card (automatic))\n13. MonthlyCharges - current monthly payment\n14. TotalCharges - the total amount that the client paid for the services for the entire time\n15. Churn - whether there was a churn (Yes or No) - **(0,1)**","d73c682c":"Chrun starts when the Monthly charges are above 60","4cccef86":"Based on Internet servcie type, There was high number of Churns compared to No Internet or people using DSL.","ca9a122d":"Check for Null\/Na value","da030940":"# Neural Network Model","8d48a827":"# Column Description\n1. customerID - customer id\n2. gender - client gender (male \/ female)\n3. SeniorCitizen - is the client retired (1, 0)\n4. Partner - is the client married (Yes, No)\n5. tenure - how many months a person has been a client of the company\n6. PhoneService - is the telephone service connected (Yes, No)\n7. MultipleLines - are multiple phone lines connected (Yes, No, No phone service)\n8. InternetService - client's Internet service provider (DSL, Fiber optic, No)\n9. OnlineSecurity - is the online security service connected (Yes, No, No internet service)\n10. OnlineBackup - is the online backup service activated (Yes, No, No internet service)\n11. DeviceProtection - does the client have equipment insurance (Yes, No, No internet service)\n12. TechSupport - is the technical support service connected (Yes, No, No internet service)\n13. StreamingTV - is the streaming TV service connected (Yes, No, No internet service)\n14. StreamingMovies - is the streaming cinema service activated (Yes, No, No internet service)\n15. Contract - type of customer contract (Month-to-month, One year, Two year)\n16. PaperlessBilling - whether the client uses paperless billing (Yes, No)\n17. PaymentMethod - payment method (Electronic check, Mailed check, Bank transfer (automatic), Credit card (automatic))\n18. MonthlyCharges - current monthly payment\n19. TotalCharges - the total amount that the client paid for the services for the entire time\n20. Churn - whether there was a churn (Yes or No)","bc94d87b":"# Create Machine learning Model","387718c6":"There are 21 features includeing Target Features, most features are Categorical values, we need to idenfiy and replace it with appropriate integer value","a5fe1f03":"# Exploratory Data Analysis"}}