{"cell_type":{"7d472135":"code","9e1caa59":"code","23d1d75e":"code","846c9682":"code","457660f7":"code","4b4e5c73":"code","8787d498":"code","3fdbf949":"code","c9b31681":"code","b7c52818":"code","3b0beca3":"code","bb5b5a4d":"code","6c191ef3":"code","e9a96f00":"code","efbba708":"code","ee7dee01":"code","624b5bf7":"code","78796c30":"code","98e3e855":"code","909943e6":"markdown","894e6c55":"markdown","f0c88457":"markdown","6e629b9d":"markdown","5698276f":"markdown","ec7c5e0c":"markdown","1857b76d":"markdown","728b80be":"markdown","cc53f665":"markdown"},"source":{"7d472135":"import pandas as pd\nimport numpy as np\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import Lasso\nfrom sklearn.linear_model import Ridge\n\nfrom sklearn.metrics import r2_score,mean_squared_error","9e1caa59":"data = pd.read_csv(\"..\/input\/used-car-dataset-ford-and-mercedes\/bmw.csv\")\ndata.head()","23d1d75e":"data.isnull().sum()","846c9682":"data.columns","457660f7":"data.describe","4b4e5c73":"data.shape","8787d498":"data.columns","3fdbf949":"data.dtypes","c9b31681":"encoder = LabelEncoder()\ndata['model'] = encoder.fit_transform(data['model'])\nmodel_mapping = {index : label for index, label in enumerate(encoder.classes_)}\nmodel_mapping","b7c52818":"data['transmission'] = encoder.fit_transform(data['transmission'])\ntransmission_mapping = {index : label for index, label in enumerate(encoder.classes_)}\ntransmission_mapping","3b0beca3":"data['fuelType'] = encoder.fit_transform(data['fuelType'])\nfuelType_mapping = {index : label for index, label in enumerate(encoder.classes_)}\nfuelType_mapping","bb5b5a4d":"x = data.drop('price', axis=1)\ny = data['price']","6c191ef3":"x_train,x_test, y_train, y_test =train_test_split(x, y, test_size=30, random_state=0)","e9a96f00":"lin_model = LinearRegression()\nlin_model.fit(x_train, y_train)\n\ny_lin_model = lin_model.predict(x_test)\n","efbba708":"l1_model = Lasso()\nl1_model.fit(x_train,y_train)\n\ny_l1_model = l1_model.predict(x_test)","ee7dee01":"l2_model = Ridge()\nl2_model.fit(x_train,y_train)\n\ny_l2_model = l2_model.predict(x_test)\n","624b5bf7":"print(f'Linear score={lin_model.score(x_train, y_train)}')\nprint(f'Lasso score={l1_model.score(x_train, y_train)}')\nprint(f'Ridge score={l2_model.score(x_train, y_train)}')","78796c30":"print(f'R2_Linear = {r2_score(y_test,y_lin_model)}')\nprint(f'R2_Lasso = {r2_score(y_test,y_l1_model)}')\nprint(f'R2_Ridge = {r2_score(y_test,y_l2_model)}')","98e3e855":"print(f'RMSE_Linear = {np.sqrt(mean_squared_error(y_test,y_lin_model))}')\nprint(f'RMSE_Lasso = {np.sqrt(mean_squared_error(y_test,y_l1_model))}')\nprint(f'RMSE_Ridge = {np.sqrt(mean_squared_error(y_test,y_l2_model))}')","909943e6":"# **Finding R^2 for all Models**","894e6c55":"# **Lasso**","f0c88457":"# **Splitting the data**","6e629b9d":"# **LinearRegression**","5698276f":"# **Ridge**","ec7c5e0c":"# **Importing the Libaries**","1857b76d":"# **Finding RMS for all Models**","728b80be":"# **Finding Score for all Models**","cc53f665":"# **Encoding the data**"}}