{"cell_type":{"9eb84927":"code","cca6eb4a":"code","7beae14d":"code","14aca625":"code","99b54490":"code","0e254739":"code","a91f9a0b":"code","9b63ee1f":"code","b389acc9":"code","98a4442c":"code","b2c27c1a":"code","f2dae196":"code","8665a0eb":"code","ce58c400":"code","79aa2b86":"code","29544e7c":"code","f404412c":"code","1a9c2a50":"code","032b1bbe":"code","0f714e71":"code","b11d6855":"code","30c58da5":"code","69691d6b":"code","f38cad34":"code","632306e5":"code","8d1215b4":"code","499c07ce":"code","ef0f7cde":"code","727ba3ae":"code","30d2ff1b":"code","860855a9":"code","c0211dd5":"code","90bd610a":"code","9e617cb1":"code","2f690aa5":"code","b7095bd4":"code","9a266529":"code","1a7ef815":"code","b06d9e2e":"markdown","af79a184":"markdown","7fe37754":"markdown","23439c24":"markdown","7f5a546c":"markdown","5ddd26b9":"markdown","7e4ae400":"markdown","72fe4b17":"markdown","445f401c":"markdown","9406ba26":"markdown","2bbf04b8":"markdown","36315404":"markdown","f06389ad":"markdown","9dc80c5b":"markdown","57180b37":"markdown","c000de69":"markdown","6eb7902f":"markdown","e2207adc":"markdown","7e1eda66":"markdown","264f207d":"markdown","9f363994":"markdown","67246f95":"markdown","d38a5cf6":"markdown","961dae53":"markdown","fdf1a225":"markdown","96a25639":"markdown"},"source":{"9eb84927":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cca6eb4a":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\nplt.rcParams['figure.figsize'] = 10,8\n\nimport warnings\nwarnings.filterwarnings('ignore')","7beae14d":"df = pd.read_csv('..\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv')\ndf.head()","14aca625":"df.shape","99b54490":"df.info()","0e254739":"df.drop('sl_no',axis=1,inplace=True)\ndf.head()","a91f9a0b":"df.describe()","9b63ee1f":"df.isnull().sum()","b389acc9":"missing_percentage = (df['salary'].isnull().sum()\/len(df))*100\nprint(round(missing_percentage,2),'%')","98a4442c":"df.fillna(0,inplace=True)\n\ndf['salary'].isnull().sum()","b2c27c1a":"df['status'].value_counts()","f2dae196":"print(\"SSC Boards: \",df['ssc_b'].unique())\n\nprint(\"HSC Boards: \",df['hsc_b'].unique())","8665a0eb":"mean_ssc_p = df.groupby('gender')['ssc_p'].mean()\nmean_ssc_p","ce58c400":"mean_hsc_p = df.groupby('gender')['hsc_p'].mean()\nmean_hsc_p","79aa2b86":"sns.set_style('darkgrid')\nsns.set_context(\"talk\",font_scale=0.8)\nax = sns.countplot(x='gender',hue='ssc_b',data=df)\nax.set_title(\"Students from SSC Boards\\n\",color='magenta',size=25)\nax.set_xlabel(\"Gender\",color='b',size=20)\nax.set_ylabel(\"No. of Students\",color='b',size=20)\n\nfor p in ax.patches:\n    ax.text(p.get_x()+0.17, p.get_height()+1.15,int(p.get_height()))","29544e7c":"sns.set_style('darkgrid')\nsns.set_context(\"talk\",font_scale=0.8)\nax = sns.countplot(x='gender',hue='hsc_b',data=df)\nax.set_title(\"Students from HSC Boards\\n\",color = 'magenta',size=25)\nax.set_xlabel(\"Gender\",color='b',size=20)\nax.set_ylabel(\"No. of Students\",color='b',size=20)\n\nfor p in ax.patches:\n    ax.annotate(int(p.get_height()), (p.get_x()+0.17, p.get_height()+0.30), va='bottom',\n                    color= 'black')","f404412c":"sns.set_style('ticks')\nsns.set_context(\"poster\",font_scale=0.8)\nax = sns.countplot(x='gender',hue='hsc_s',data=df)\nax.set_title(\"Number of Students from different Streams\\n\",color = 'magenta',size=25)\nax.set_xlabel(\"Gender\",color='b',size=20)\nax.set_ylabel(\"No. of Students\",color='b',size=20)\n\n\nfor p in ax.patches:\n    ax.annotate(int(p.get_height()), (p.get_x()+0.10, p.get_height()+0.02), va='bottom',\n                    color= 'black')","1a9c2a50":"mean_degree_p = df.groupby('gender')['degree_p'].mean()\nmean_degree_p","032b1bbe":"print(\"Degree Streams: \",df['degree_t'].unique())","0f714e71":"sns.set_context(\"talk\",font_scale=0.8)\nax = sns.countplot(x='gender',hue='degree_t',data=df)\nax.set_title(\"Degree Streams\\n\",color = 'magenta',size=25)\nax.set_xlabel(\"Gender\",color = 'b',size=20)\nax.set_ylabel(\"No. of Students\",color='b',size=20)\n\nfor p in ax.patches:\n    ax.annotate(int(p.get_height()), (p.get_x()+0.10, p.get_height()+0.30), va='bottom',\n                    color= 'black')","b11d6855":"sns.set_context(\"talk\",font_scale=0.8)\nax = sns.countplot(x='degree_t',hue='specialisation',data=df)\nax.set_title(\"Job Category Vs Degree\\n\",color = 'magenta',size=25)\nax.set_xlabel(\"Degree\",size=20,color = 'b')\nax.set_ylabel(\"No. of Students\",size=20,color = 'b')\n\nfor p in ax.patches:\n    ax.annotate(int(p.get_height()), (p.get_x()+0.15, p.get_height()+0.30), va='bottom',\n                    color= 'black')","30c58da5":"sns.set_style(\"darkgrid\")\nsns.set_context('notebook',font_scale=1.4)\nax = sns.violinplot(y='degree_p',x='degree_t',data=df)\nax.set_title(\"Percentage based upon Degree\\n\",color = 'magenta',size=25)\nax.set_xlabel(\"Degree\",size=20,color = 'b')\nax.set_ylabel(\"Degree %\",size=20,color = 'b')","69691d6b":"sns.set_style('whitegrid')\nax = sns.barplot(x='specialisation',y='salary',data=df,ci=None)\nax.set_xlabel(\"Job Category\",color = 'red',size=20)\nax.set_ylabel(\"Annum Salary (Rs)\",color='r',size=20)\nax.set_title(\"Highest Paid Job\\n\",color='magenta',size=25)\n\nfor p in ax.patches:\n    ax.text(p.get_x()+0.20,p.get_height()+1.20,int(p.get_height()),size='x-large')","f38cad34":"df.boxplot()","632306e5":"df.drop(['gender','ssc_b','hsc_b','hsc_s','mba_p'],axis=1,inplace=True)\ndf","8d1215b4":"degree_n = {'Sci&Tech':0,'Comm&Mgmt':1,'Others':2}\nworkex_n = {'No':0,'Yes':1}\nspecialisation_n = {'Mkt&HR':0,'Mkt&Fin':1}\nstatus_n = {'Not Placed':0,\"Placed\":1}\n\ndf['degree_t'] = df['degree_t'].map(degree_n)\ndf['workex'] = df['workex'].map(workex_n)\ndf['specialisation'] = df['specialisation'].map(specialisation_n)\ndf['status'] = df['status'].map(status_n)\ndf","499c07ce":"X = df.drop('status',axis=1)\ny = df['status']","ef0f7cde":"from sklearn.model_selection import train_test_split\n\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=10)","727ba3ae":"print(\"X_train: \",X_train.shape)\nprint(\"X_test: \",X_test.shape)\nprint(\"y_train: \",y_train.shape)\nprint(\"y_test: \",y_test.shape)","30d2ff1b":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\n\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","860855a9":"sns.heatmap(round(df.corr(),2),annot=True)","c0211dd5":"df.corr()['status'].sort_values(ascending=False)","90bd610a":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import classification_report,confusion_matrix,f1_score","9e617cb1":"lr = LogisticRegression()\nlr.fit(X_train,y_train)\nprint(\"\\nLogisticRegression: \",lr.score(X_test,y_test)\/0.01)\nprint(30*'-')\n\ny1_pred = lr.predict(X_test)\n\nprint(\"\\nConfusion Metrics:\\n\",confusion_matrix(y_test,y1_pred))\nprint(\"\\n\\nClassification Report: \",classification_report(y_test,y1_pred))\nprint(\"\\n\\nF1-Score: \",f1_score(y_test,y1_pred))","2f690aa5":"dt = DecisionTreeClassifier(min_samples_split=0.8,max_features=1,random_state=0)\ndt.fit(X_train,y_train)\nprint(\"\\nDecisionTreeClassifier: \",dt.score(X_test,y_test)\/0.01)\nprint(30*'-')\n\ny2_pred = dt.predict(X_test)\n\nprint(\"\\nConfusion Metrics:\\n\",confusion_matrix(y_test,y2_pred))\nprint(\"\\n\\nClassification Report: \",classification_report(y_test,y2_pred))\nprint(\"\\n\\nF1-Score: \",f1_score(y_test,y2_pred))","b7095bd4":"rf = RandomForestClassifier(n_estimators=200,criterion='gini',\n max_depth= 4 ,\n max_features= 'auto',random_state=42)\nrf.fit(X_train,y_train)\nprint(\"\\nRandomForestClassifier: \",rf.score(X_test,y_test)\/0.01)\nprint(30*'-')\n\ny3_pred = rf.predict(X_test)\n\nprint(\"\\nConfusion Metrics:\\n\",confusion_matrix(y_test,y3_pred))\nprint(\"\\n\\nClassification Report: \",classification_report(y_test,y3_pred))\nprint(\"\\n\\nF1-Score: \",f1_score(y_test,y3_pred))","9a266529":"svc = SVC()\nsvc.fit(X_train,y_train)\nprint(\"\\nSVC: \",svc.score(X_test,y_test)\/0.01)\nprint(30*'-')\n\ny4_pred = svc.predict(X_test)\n\nprint(\"\\nConfusion Metrics:\\n\",confusion_matrix(y_test,y4_pred))\nprint(\"\\n\\nClassification Report: \",classification_report(y_test,y4_pred))\nprint(\"\\n\\nF1-Score: \",f1_score(y_test,y4_pred))","1a7ef815":"ax = sns.heatmap(confusion_matrix(y_test,y4_pred),annot=True)\nax.set_xlabel('Predicted',color='b',size=20)\nax.set_ylabel('Truth',color='b',size=20)","b06d9e2e":"**Most Students have preferred Commerce over Science as they likely to go in Marketing and Finance field.Whereas,Arts has least interest.**","af79a184":"**From the above data its clearly shows that salary feature is the highly correlated with status.**","7fe37754":"**As we see above graph that Commerce & Mgmt is the popular streams in all students, sci & tech comes second and all others streams shows less attractions among students.**","23439c24":"# **Campus Recruitment**","7f5a546c":"**There is no need for column(\"sl_no\") in our prediction so,we can remove it.**","5ddd26b9":"**As we can see that in SSC no. of students are higher in Central board compared to state boards.**","7e4ae400":"**Converting all Object Data-types into int Data-types.**","72fe4b17":"# **SupportVectorClassifier gives 100% accuracy.**","445f401c":"![business-2584717_1920.jpg](attachment:business-2584717_1920.jpg)","9406ba26":"**Mrkt & Finance offers a good salary while Mrkt & HR gives decent money to candidate.**","2bbf04b8":"# **Splitting Data:-**","36315404":"**Sci&Tech and Comm&Mgmt have almost simillar percentage**\n\n**Now,let see which job market offers high annual income to candidate?**","f06389ad":"**Now,checking how many null values are present in the data-set and how much weighted it contains.**","9dc80c5b":"**Load Data-set:-**","57180b37":"# **Standardizing Data:-**","c000de69":"**Now, Let's See Which Streams have a higher percentage in getting Job.**","6eb7902f":"# **Model Building:-**","e2207adc":"**Importing Required Libraries:-**","7e1eda66":"> **Looks Like there is no outliers present in the data-set.**\n\n> **Dropping unnecessary Columns from the Data.**","264f207d":"**Whereas,in HSC there are state boards popular than Central board.**","9f363994":"**Now, check which streams are popular among the students in Higher Education.**","67246f95":"# Outliers detection:-","d38a5cf6":"**If you like my work then Please Upvote it.**\n\n**Thank you for spending your precious time.**","961dae53":"**Let's check whether the data-set is Balanced or not?**","fdf1a225":"**We can call it as slighlty Imbalanced.**","96a25639":"# Data Visualisation:-"}}