{"cell_type":{"77cd1949":"code","274fd3c2":"code","2b174126":"code","555dbf07":"code","05add681":"code","5ec7f76a":"code","ba748fd4":"code","065cca32":"code","f68f03b7":"code","5af09e61":"code","92f133cc":"code","a35d5339":"code","202609c3":"code","6ed26c1c":"code","53330909":"code","b88d4c05":"code","48aa1e18":"code","33dc5379":"code","5d5ef834":"code","5b6f3292":"code","094fd0e0":"code","9ffd9ebf":"code","2fc11788":"code","ee2bde34":"code","806f00eb":"code","37b13245":"code","2b1c769b":"code","1a2ce077":"code","79dbf9a2":"code","d5c406f2":"code","a923154a":"code","ff340fdc":"code","5cf3d09a":"code","b8f59959":"code","d741bb1f":"code","f9ed888e":"code","0bae06e9":"code","d82d3907":"code","149c9238":"code","411c123c":"code","15ccc4dc":"code","5dad4d7f":"code","8fe1b1c7":"code","6d106b81":"markdown","4e0e391b":"markdown","f2c97071":"markdown","364b98c8":"markdown","ff1045b4":"markdown","a9a9f89f":"markdown","c8b93127":"markdown","0789c312":"markdown","9e0a0883":"markdown","97c4edfe":"markdown","51beb581":"markdown","fe731d05":"markdown","75d622ea":"markdown","a2ebc3ab":"markdown"},"source":{"77cd1949":"#Import Libiraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib as plt","274fd3c2":"df = pd.read_csv('..\/input\/years-of-experience-and-salary-dataset\/Salary_Data.csv')","2b174126":"#check shape of data\ndf.shape","555dbf07":"#View the first five row from the data\ndf.head()","05add681":"#View the last five row from data\ndf.tail()","5ec7f76a":"#view one sample from data\ndf.sample()","ba748fd4":"#view 10 random sample form data\ndf.sample(10)","065cca32":"#view mean\ndf.mean()","f68f03b7":"#some statistic from dataset\ndf.describe()","5af09e61":"#check the datatype of features\ndf.dtypes","92f133cc":"#information about dataframe\ndf.info()","a35d5339":"df.info","202609c3":"df.shape","6ed26c1c":"df=df.drop_duplicates()","53330909":"df.shape","b88d4c05":"#Check the Null Values\ndf.isnull().sum()","48aa1e18":"#Create Dependant (y) and Independant (x) values\ntarget_feature = 'Salary'\n#separate object of target feature\nY = df[target_feature]\n#separate object of Dependant feature X\nX=df.drop(target_feature , axis=1)","33dc5379":"df.shape","5d5ef834":"#Dependant feature\nX.head()","5b6f3292":"#Target\nY.head()","094fd0e0":"Y.shape","9ffd9ebf":"import matplotlib.pyplot as plt\nplt.scatter(X,Y)\nplt.xlabel('YearExperience')\nplt.ylabel('Salary')\nplt.grid()\nplt.show()","2fc11788":"from sklearn.model_selection import train_test_split","ee2bde34":"#test_size= 0.3\n#train data is 70%\n#test data is 30% from all Data\nx_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=0.3,random_state=0)","806f00eb":"x_train.shape , y_train.shape","37b13245":"x_test.shape , y_test.shape","2b1c769b":"from sklearn.linear_model import LinearRegression","1a2ce077":"reg= LinearRegression()","79dbf9a2":"reg.fit(x_train , y_train)","d5c406f2":"#y = m x + b\n# b is intercept parameter\n# m is coefficient (slope)\ninter = reg.intercept_\ncoe = reg.coef_\nprint('Intercept (b) is : ' ,inter )\nprint('coefficien (m) is : ' , coe)","a923154a":"y_pred = reg.predict(x_test)","ff340fdc":"y_pred.shape","5cf3d09a":"df1 = pd.DataFrame({'Actual':y_test , 'Predict':y_pred})\ndf1","b8f59959":"df2=pd.DataFrame({'Actual':y_test , 'Predict': y_pred , 'Variance' : y_test-y_pred})\n","d741bb1f":"df2","f9ed888e":"df","0bae06e9":"#predicting the result os 1.5 Years Experence\npred = np.array([1.5]).reshape(-1,1)","d82d3907":"reg.predict(pred)","149c9238":"#y=m*x+b\ny=9360.26128619*1.5+26777.391341197632\nprint(y)","411c123c":"#Visualizing our training model\nplt.scatter(x_train,y_train,color='red')\nplt.plot(x_train , reg.predict(x_train) , color='blue')\nplt.title('Salary VS Experience (Training Set)')\nplt.xlabel('Year of Experiance')\nplt.ylabel('Salary')\nplt.grid()\nplt.show()","15ccc4dc":"#Visualizing our testing model\nplt.scatter(x_test,y_test,color='red')\nplt.plot(x_test , reg.predict(x_test) , color='blue')\nplt.title('Salary VS Experience (Testing Set)')\nplt.xlabel('Year of Experiance')\nplt.ylabel('Salary')\nplt.grid()\nplt.show()","5dad4d7f":"from sklearn.metrics import r2_score\nScore = r2_score(y_test ,y_pred)*100\nprint('Score is : ' , Score)","8fe1b1c7":"\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import mean_squared_error\n\nprint('Mean Absolute Error : ' ,mean_absolute_error(y_test,y_pred) )\nprint('Mean Squared Error : ' ,mean_squared_error(y_test,y_pred))\nprint('Root Mean Squared Error : ' ,np.sqrt(mean_squared_error(y_test,y_pred)))\n\n","6d106b81":"# Split DataSet to Train and Test","4e0e391b":"# Visualization","f2c97071":"**Drop the Duplicates**","364b98c8":"# **Basic Information about DataFrame**","ff1045b4":"# Evaluation Matrics of Regrission Algorithms","a9a9f89f":"# **Data Cleaning**","c8b93127":"# Prediction","0789c312":"# Data Visualization before train the Model","9e0a0883":"# Get the Parameters","97c4edfe":"# To Compare The Actual values and the Predict values","51beb581":"**30 Row And 2 Column**","fe731d05":"# **Load the DataSet**","75d622ea":"# Apply the Model on test dataset to get the predict the values","a2ebc3ab":"# Apply Linear Regration on Train DataSet"}}