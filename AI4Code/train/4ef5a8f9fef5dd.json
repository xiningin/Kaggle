{"cell_type":{"79a37b3b":"code","7c335415":"code","59a50be6":"code","67eef741":"code","68274969":"code","f2f097ef":"code","aa3cc019":"code","e373ab25":"code","e14bd821":"code","94e75ec6":"code","bbcc4c83":"markdown"},"source":{"79a37b3b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7c335415":"items = pd.read_csv(\"\/kaggle\/input\/competitive-data-science-predict-future-sales\/items.csv\")\nitems.head()","59a50be6":"sales_train = pd.read_csv(\"\/kaggle\/input\/competitive-data-science-predict-future-sales\/sales_train.csv\")\nsales_train.head()","67eef741":"shops = pd.read_csv(\"\/kaggle\/input\/competitive-data-science-predict-future-sales\/shops.csv\")\nshops.head()","68274969":"item_categories = pd.read_csv(\"\/kaggle\/input\/competitive-data-science-predict-future-sales\/item_categories.csv\")\nitem_categories.head()","f2f097ef":"import featuretools as ft# Create new entityset\nes = ft.EntitySet(id = 'sales')","aa3cc019":"es = es.entity_from_dataframe(entity_id = 'shops', dataframe = shops, index = 'shop_id')\n\nes = es.entity_from_dataframe(entity_id = 'item_categories', dataframe = item_categories, index = 'item_category_id')\n\nes = es.entity_from_dataframe(entity_id = 'sales_train', dataframe = sales_train, index = 'id',make_index=True)\n\nes = es.entity_from_dataframe(entity_id = 'items', dataframe = items, index = 'item_id')\n","e373ab25":"# define relations\nshopid = ft.Relationship(es['shops']['shop_id'],\n                                    es['sales_train']['shop_id'])\n# define relations\nitid = ft.Relationship(es['items']['item_id'],\n                                    es['sales_train']['item_id'],\n                     )\nes = es.add_relationship(shopid)\nes = es.add_relationship(itid)\n#itcatid = ft.Relationship(es['items']['item_category_id'],\n#                                    es['item_categories']['item_category_id'])","e14bd821":"es","94e75ec6":"# Perform deep feature synthesis without specifying primitives\nfeatures, feature_names = ft.dfs(entityset=es, target_entity='sales_train', \n                                 max_depth = 2)\n\nfeatures.head()","bbcc4c83":"# featuretools automatic feature engineering\n\n"}}