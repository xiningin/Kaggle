{"cell_type":{"36bc851a":"code","bcc9aa90":"code","022b8caa":"code","c0e859be":"code","97f19d3a":"code","c0e04d72":"code","49f1dbe2":"code","62067415":"code","781a1f89":"code","cba52475":"code","8ec50288":"code","259c17ea":"code","4457cedb":"code","cff5504b":"code","e6b16a15":"code","737ff08b":"code","d83ddc6c":"code","89355162":"code","4a037a3d":"code","9c3cdabd":"code","7540c420":"code","3c51b467":"code","16b3b19a":"code","4316624a":"code","86d46fed":"code","233a096a":"code","e3c17d97":"code","0577ea49":"code","8e378b67":"code","65b5dac0":"code","10aa176a":"code","5885c73f":"code","45518491":"code","b4fea563":"code","362be88d":"code","c28159a8":"code","6c9d38a2":"code","d109d171":"code","2ab1184e":"code","8bc68417":"code","ed182a42":"code","4145dd7b":"code","9a13380f":"code","69283d16":"code","aff82152":"code","f98524c7":"code","780c6a5a":"code","652ba971":"code","9c81ce2d":"markdown","d4d24290":"markdown","7f26db49":"markdown","2ef051e6":"markdown","f36f2cc0":"markdown","3eda64b1":"markdown","e300f070":"markdown","a010b447":"markdown","9af2ceb1":"markdown","87d856fe":"markdown","3dcea230":"markdown","55d163bf":"markdown","8b23a87a":"markdown","b2438bc1":"markdown","185c343e":"markdown","267d0cd1":"markdown","7a434114":"markdown","2f3cf4be":"markdown","1961673b":"markdown","b2ae41c2":"markdown","7a3eb601":"markdown","9ac4690c":"markdown","0727c555":"markdown","e110c0da":"markdown","4af69825":"markdown","06a9994a":"markdown","35078e3f":"markdown","eaf906ac":"markdown","dd74d8e1":"markdown"},"source":{"36bc851a":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport plotly.express as px\n%matplotlib inline\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport plotly.figure_factory as ff\n\n# Make Plotly work in your Jupyter Notebook\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot \ninit_notebook_mode(connected = True)\n\nimport cufflinks as cf\n\n# Use Plotly locally\ncf.go_offline()","bcc9aa90":"df= pd.read_csv(\"\/kaggle\/input\/stock-exchange-data\/indexProcessed.csv\")\ndf.head()","022b8caa":"df_info = pd.read_csv(\"\/kaggle\/input\/stock-exchange-data\/indexInfo.csv\")\ndf_info","c0e859be":"df_merge = df.merge(df_info, on = \"Index\", how = \"inner\" )\ndf_merge","97f19d3a":"df_merge.info()","c0e04d72":"df_merge['Date'] = pd.to_datetime(df_merge['Date'])  \n","49f1dbe2":"df.Index.value_counts()","62067415":"options = [\"Europe\", \"Switzerland\"]\ndf_se = df_merge[df_merge[\"Region\"].isin(options)]\ndf_se.head()","781a1f89":"df_se.Index.value_counts()","cba52475":"fig = px.line(df_se, x='Date', y=\"Open\", color = \"Region\", \n             labels = {\"Index\":\"Region\"}, color_discrete_map={\n                \"Europe\":\"#4363d8\",\n                \"Switzerland\":\"#e6194B\",\n             })\n# Add figure title\nfig.update_layout(\n    plot_bgcolor = \"white\",\n    title_text=\"Open stock price for Swiss and Europe Exchange\"\n)\n\nfig.update_yaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\")\nfig.update_xaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\")\n\niplot(fig)","8ec50288":"fig = px.line(df_se, x='Date', y=\"Close\", color = \"Region\", \n             labels = {\"Index\":\"Region\"}, color_discrete_map={\n                \"Europe\":\"#4363d8\",\n                \"Switzerland\":\"#e6194B\",\n             })\nfig.update_layout(\n    plot_bgcolor = \"white\",\n    title_text=\"Close stock price for Swiss and Europe Exchange\"\n)\n\nfig.update_yaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\")\nfig.update_xaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\")\n\niplot(fig)","259c17ea":"fig = make_subplots(specs=[[{\"secondary_y\": True}]])\n\nfig.add_trace(\n    go.Scatter(x=df_se[df_se[\"Region\"] == \"Switzerland\"][\"Date\"], \n               y=df_se[df_se[\"Region\"] == \"Switzerland\"][\"Open\"],\n               name=\"Open\"),\n    secondary_y=False,\n)\n\nfig.add_trace(\n    go.Scatter(x=df_se[df_se[\"Region\"] == \"Switzerland\"][\"Date\"], \n               y=df_se[df_se[\"Region\"] == \"Switzerland\"][\"Close\"], \n               name=\"Close\", opacity=.3,\n              line = dict(color='red', width=4)),\n    secondary_y=True,\n)\n\nfig.update_layout(\n    plot_bgcolor = \"white\",\n    title_text=\"Open and Close stock price for Swiss Exchange\"\n)\n\nfig.update_xaxes()\n\nfig.update_yaxes(title_text=\"<b>Open Stock Prices<\/b>\", secondary_y=False)\nfig.update_yaxes(title_text=\"<b>Close Stock Prices<\/b>\", secondary_y=True)\nfig.update_yaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\")\nfig.update_xaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\", title_text=\"Date\")\n\n\niplot(fig)","4457cedb":"\nfig = make_subplots(specs=[[{\"secondary_y\": True}]])\n\n\nfig.add_trace(\n    go.Scatter(x=df_se[df_se[\"Region\"] == \"Europe\"][\"Date\"], \n               y=df_se[df_se[\"Region\"] == \"Europe\"][\"Open\"],\n               name=\"Open\"),\n    secondary_y=False,\n)\n\nfig.add_trace(\n    go.Scatter(x=df_se[df_se[\"Region\"] == \"Europe\"][\"Date\"], \n               y=df_se[df_se[\"Region\"] == \"Europe\"][\"Close\"], \n               name=\"Close\", opacity=.3,\n              line = dict(color='red', width=4)),\n    secondary_y=True,\n)\n\nfig.update_layout(\n    plot_bgcolor = \"white\",\n    title_text=\"Open and Close stock price for Europe Exchange\"\n)\n\nfig.update_yaxes(title_text=\"<b>Open Stock Prices<\/b>\", secondary_y=False)\nfig.update_yaxes(title_text=\"<b>Close Stock Prices<\/b>\", secondary_y=True)\nfig.update_yaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\")\nfig.update_xaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\", \n                 title_text=\"<b>Date<\/b>\")\n\n\niplot(fig)","cff5504b":"fig = px.line(df_se, x='Date', y=\"Volume\", color = \"Region\", \n             labels = {\"Index\":\"Region\"}, color_discrete_map={\n                \"Europe\":\"#4363d8\",\n                \"Switzerland\":\"#e6194B\",\n             })\nfig.update_layout(\n    plot_bgcolor = \"white\",\n    title_text=\"Volume Traded in Swiss and Europe Exchange\"\n)\n\nfig.update_yaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\",\n                title_text=\"<b>Volume<\/b>\")\nfig.update_xaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\", \n                 title_text=\"<b>Date<\/b>\")\n\niplot(fig)","e6b16a15":"df_2020 = df_se.loc[df_se[\"Date\"]>=\"2020-01-01\"]","737ff08b":"fig = make_subplots(specs=[[{\"secondary_y\": True}]])\n\nfig.add_trace(\n    go.Scatter(x=df_2020[df_2020[\"Region\"] == \"Europe\"][\"Date\"], \n               y=df_2020[df_2020[\"Region\"] == \"Europe\"][\"Open\"],\n               name=\"Open\"),\n    secondary_y=False,\n)\n\nfig.add_trace(\n    go.Scatter(x=df_2020[df_2020[\"Region\"] == \"Europe\"][\"Date\"], \n               y=df_2020[df_2020[\"Region\"] == \"Europe\"][\"Volume\"], \n               name=\"Volume\", opacity=.3,\n              line = dict(color='red', width=4)),\n    secondary_y=True,\n)\n\nfig.update_layout(\n    plot_bgcolor = \"white\",\n    title_text=\"Open price and Volume traded for Europe Exchange\"\n)\n\n\nfig.update_yaxes(title_text=\"<b>Open Stock Prices<\/b>\", secondary_y=False)\nfig.update_yaxes(title_text=\"<b>Volume Traded<\/b>\", secondary_y=True)\nfig.update_yaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\")\nfig.update_xaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\", \n                 title_text=\"<b>Date<\/b>\")\n\niplot(fig)","d83ddc6c":"fig = make_subplots(specs=[[{\"secondary_y\": True}]])\n\nfig.add_trace(\n    go.Scatter(x=df_2020[df_2020[\"Region\"] == \"Switzerland\"][\"Date\"], \n               y=df_2020[df_2020[\"Region\"] == \"Switzerland\"][\"Open\"],\n               name=\"Open\"),\n    secondary_y=False,\n)\n\nfig.add_trace(\n    go.Scatter(x=df_2020[df_2020[\"Region\"] == \"Switzerland\"][\"Date\"], \n               y=df_2020[df_2020[\"Region\"] == \"Switzerland\"][\"Volume\"], \n               name=\"Volume\", opacity=.3,\n              line = dict(color='red', width=4)),\n    secondary_y=True,\n)\n\nfig.update_layout(\n    plot_bgcolor = \"white\",\n    title_text=\"Open price and Volume traded for Swiss Exchange\"\n)\n\n\n# Set y-axes titles\nfig.update_yaxes(title_text=\"<b>Open Stock Prices<\/b>\", secondary_y=False)\nfig.update_yaxes(title_text=\"<b>Volume Traded<\/b>\", secondary_y=True)\n\nfig.update_yaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\")\nfig.update_xaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\", \n                 title_text=\"<b>Date<\/b>\")\n\n\niplot(fig)","89355162":"df_se[\"Total Traded\"] = df_se[\"Open\"] * df_se[\"Volume\"]","4a037a3d":"fig = px.line(df_se, x = \"Date\", y = \"Total Traded\",color = \"Region\", \n             labels = {\"Index\":\"Region\"}, color_discrete_map={\n                \"Europe\":\"#4363d8\",\n                \"Switzerland\":\"#e6194B\",\n             })\nfig.update_layout(\n    plot_bgcolor = \"white\",\n    title_text=\"Total Volume Traded Swiss and Europe Exchange\"\n)\n\nfig.update_yaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\",\n                title_text=\"<b>Total Traded<\/b>\")\nfig.update_xaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\", \n                 title_text=\"<b>Date<\/b>\")\n\niplot(fig)","9c3cdabd":"df_se['MA50'] = df_se.Open.rolling(50).mean()\ndf_se['MA100'] = df_se.Open.rolling(100).mean()\ndf_se['MA200'] = df_se.Open.rolling(200).mean()","7540c420":"fig = go.Figure(data=[go.Scatter(x=df_se[df_se[\"Region\"] == \"Europe\"][\"Date\"],\n                                 y=df_se[df_se[\"Region\"] == \"Europe\"][\"Open\"], \n                                 line = dict(color = \"blue\"), name=\"Open\"), \n                      go.Scatter(x=df_se[df_se[\"Region\"] == \"Europe\"][\"Date\"],\n                                 y=df_se[df_se[\"Region\"] == \"Europe\"][\"MA50\"], \n                                 line=dict(color='orange', width=2), name=\"MA50\"),\n                      go.Scatter(x=df_se[df_se[\"Region\"] == \"Europe\"][\"Date\"],\n                                 y=df_se[df_se[\"Region\"] == \"Europe\"][\"MA100\"], \n                                 line=dict(color='green', width=2), name=\"MA100\"),\n                     go.Scatter(x=df_se[df_se[\"Region\"] == \"Europe\"][\"Date\"],\n                                 y=df_se[df_se[\"Region\"] == \"Europe\"][\"MA200\"], \n                                 line=dict(color='magenta', width=2), name=\"MA200\")])\n\nfig.update_layout(\n    plot_bgcolor = \"white\",\n    title_text=\"Open Price and its moving average for Europe Exchange\"\n)\n\nfig.update_yaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\",\n                title_text=\"<b>Open and Moving Average<\/b>\")\nfig.update_xaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\", \n                 title_text=\"<b>Date<\/b>\")\n\n\n\niplot(fig)","3c51b467":"fig = go.Figure(data=[go.Scatter(x=df_se[df_se[\"Region\"] == \"Switzerland\"][\"Date\"],\n                                 y=df_se[df_se[\"Region\"] == \"Switzerland\"][\"Open\"], \n                                 line = dict(color = \"blue\"), name=\"Open\"), \n                      go.Scatter(x=df_se[df_se[\"Region\"] == \"Switzerland\"][\"Date\"],\n                                 y=df_se[df_se[\"Region\"] == \"Switzerland\"][\"MA50\"], \n                                 line=dict(color='orange', width=2), name=\"MA50\"),\n                      go.Scatter(x=df_se[df_se[\"Region\"] == \"Switzerland\"][\"Date\"],\n                                 y=df_se[df_se[\"Region\"] == \"Switzerland\"][\"MA100\"], \n                                 line=dict(color='green', width=2), name=\"MA100\"),\n                     go.Scatter(x=df_se[df_se[\"Region\"] == \"Switzerland\"][\"Date\"],\n                                 y=df_se[df_se[\"Region\"] == \"Switzerland\"][\"MA200\"], \n                                 line=dict(color='magenta', width=2), name=\"MA200\")])\n\nfig.update_layout(\n    plot_bgcolor = \"white\",\n    title_text=\"Open Price and its moving average for Swiss Exchange\"\n)\n\nfig.update_yaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\",\n                title_text=\"<b>Open Price and its Moving Average<\/b>\")\nfig.update_xaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\", \n                 title_text=\"<b>Date<\/b>\")\n\n\n\niplot(fig)","16b3b19a":"fig = go.Figure(data=[go.Ohlc(x=df_se[df_se[\"Region\"] == \"Switzerland\"].Date,\n                                     open=df_se[df_se[\"Region\"] == \"Switzerland\"].Open,\n                                high=df_se[df_se[\"Region\"] == \"Switzerland\"].High,\n                                     low=df_se[df_se[\"Region\"] == \"Switzerland\"].Low,\n                                     close=df_se[df_se[\"Region\"] == \"Switzerland\"].Close)])\n\nfig.update_layout(\n    plot_bgcolor = \"white\",\n    title_text=\"Stock price OHLC chart of Swiss Exchange\"\n)\n\nfig.update_yaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\",\n                title_text=\"<b>Prices<\/b>\")\nfig.update_xaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\", \n                 title_text=\"<b>Date<\/b>\")\n\nfig.update(layout_xaxis_rangeslider_visible=False)\n\niplot(fig)","4316624a":"fig = go.Figure(data=[go.Ohlc(x=df_se[df_se[\"Region\"] == \"Europe\"].Date,\n                                     open=df_se[df_se[\"Region\"] == \"Europe\"].Open,\n                                high=df_se[df_se[\"Region\"] == \"Europe\"].High,\n                                     low=df_se[df_se[\"Region\"] == \"Europe\"].Low,\n                                     close=df_se[df_se[\"Region\"] == \"Europe\"].Close)])\n\nfig.update_layout(\n    plot_bgcolor = \"white\",\n    title_text=\"Stock price OHLC chart of Europe Exchange\"\n)\n\nfig.update_yaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\",\n                title_text=\"<b>Prices<\/b>\")\nfig.update_xaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\", \n                 title_text=\"<b>Date<\/b>\")\n\nfig.update(layout_xaxis_rangeslider_visible=False)\n\niplot(fig)","86d46fed":"df_se[\"Return\"] = (df_se[\"Close\"]\/df_se[\"Close\"].shift(1)) - 1","233a096a":"fig = px.histogram(df_se, x = \"Return\", color = \"Region\",color_discrete_map={\n                \"Europe\":\"#4363d8\",\n                \"Switzerland\":\"#e6194B\",\n             })\n\nfig.update_layout(\n    plot_bgcolor = \"white\",\n    title_text=\"Stock Volatility of Swiss and EuropeExchange\"\n)\n\nfig.update_yaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\",\n                title_text=\"<b>Value<\/b>\")\nfig.update_xaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\", \n                 title_text=\"<b>Return<\/b>\")\niplot(fig)","e3c17d97":"x2 = df_se[df_se[\"Region\"] == \"Europe\"][\"Return\"]\n\nx2_new = []\nfor x in x2:\n    if not pd.isna(x):\n        x2_new.append(x)\nx2_new = pd.Series(x2_new)        ","0577ea49":"x1 = df_se[df_se[\"Region\"] == \"Switzerland\"][\"Return\"] \n\nx2 = df_se[df_se[\"Region\"] == \"Europe\"][\"Return\"]\nx2 = x2_new\n\nhist_data = [x1, x2]\n\ngroup_labels = ['Switzerland', 'Europe']\ncolors = [\"#e6194B\", '#4363d8']\n\nfig = ff.create_distplot(hist_data, group_labels, show_hist=False, colors=colors)\n\nfig.update_layout(\n    plot_bgcolor = \"white\",\n    title_text=\"Stock Volatility of Swiss and EuropeExchange\"\n)\n\nfig.update_yaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\")\nfig.update_xaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\", \n                 title_text=\"<b>Return<\/b>\")\n\niplot(fig)","8e378b67":"fig = px.box(df_se, y = \"Return\", color = \"Region\",color_discrete_map={\n                \"Europe\":\"#4363d8\",\n                \"Switzerland\":\"#e6194B\",\n             })\nfig.update_layout(\n    plot_bgcolor = \"white\",\n    title_text=\"Outliers in Swiss and EuropeExchange\"\n)\n\nfig.update_yaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\",\n                title_text=\"<b>Return<\/b>\")\nfig.update_xaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\", \n                )\niplot(fig)","65b5dac0":"df_se[\"Cumulative Return\"] = (1 + df_se[\"Return\"]).cumprod()","10aa176a":"fig = px.line(df_se, x = \"Date\", y = \"Cumulative Return\", color = \"Region\",color_discrete_map={\n                \"Europe\":\"#4363d8\",\n                \"Switzerland\":\"#e6194B\",\n             })\nfig.update_layout(\n    plot_bgcolor = \"white\",\n    title_text=\"Cumulative Return in Swiss and Europe Exchange\"\n)\n\nfig.update_yaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\",\n                title_text=\"<b>Cumulative Return<\/b>\")\nfig.update_xaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\", \n                title_text = \"<b>Date<\/b>\")\niplot(fig)","5885c73f":"df_cum = df_se[[\"Date\", \"Region\", \"Cumulative Return\"]]","45518491":"df_cum_m = df_cum.pivot(index = \"Date\", columns='Region', values='Cumulative Return')","b4fea563":"fig = px.density_heatmap(df_cum_m, x=\"Switzerland\", y=\"Europe\", marginal_x=\"histogram\", marginal_y=\"histogram\")\nfig.update_layout(\n    plot_bgcolor = \"white\",\n    title_text=\"Cumulative Return in Swiss and Europe Exchange\"\n)\niplot(fig)","362be88d":"import plotly.figure_factory as ff\nfig = ff.create_scatterplotmatrix(df_cum_m, diag='histogram', \n                                  height=800, width=800)\n\nfig.update_layout(\n    plot_bgcolor = \"white\",\n    title_text=\"Cumulative Return in Swiss and Europe Exchange\"\n)\n\niplot(fig)","c28159a8":"df_se[\"Percentage Change\"] = df_se.High.div(df_se.High.shift())","6c9d38a2":"fig = px.line(df_se, x = \"Date\", y = \"Percentage Change\", color = \"Region\")\nfig.update_layout(\n    plot_bgcolor = \"white\",\n    title_text=\"Percentange change in High Price\"\n)\n\nfig.update_yaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\",\n                title_text=\"<b>Percentage Change<\/b>\")\nfig.update_xaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\", \n                 title_text=\"<b>Date<\/b>\")\n\niplot(fig)","d109d171":"df_se[\"Stock Return\"] = df_se[\"Percentage Change\"].sub(1).mul(100)\n","2ab1184e":"fig = px.line(df_se, x = \"Date\", y = \"Stock Return\", color = \"Region\")\nfig.update_layout(\n    plot_bgcolor = \"white\",\n    title_text=\"Stock Return for High Price\"\n)\n\nfig.update_yaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\",\n                title_text=\"<b>Stock Return<\/b>\")\nfig.update_xaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\", \n                 title_text=\"<b>Date<\/b>\")\n\niplot(fig)","8bc68417":"df_se.head(1)","ed182a42":"df_se[\"Absolute Change\"] = df_se.High.diff()","4145dd7b":"fig = px.line(df_se, x = \"Date\", y = \"Absolute Change\", color = \"Region\")\n\nfig.update_layout(\n    plot_bgcolor = \"white\",\n    title_text=\"Absolute change in High Price\"\n)\n\nfig.update_yaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\",\n                title_text=\"<b>Absolute Change<\/b>\")\nfig.update_xaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\", \n                 title_text=\"<b>Date<\/b>\")\n\niplot(fig)","9a13380f":"df_swiss = df_se.loc[(df_se[\"Region\"] == \"Switzerland\") & (df_se[\"Date\"] >= \"2010-01-01\")]\ndf_eu = df_se.loc[(df_se[\"Region\"] == \"Europe\") & (df_se[\"Date\"] >= \"2010-01-01\")]","69283d16":"y1 = df_swiss[\"High\"]\ny2 = df_swiss[\"Percentage Change\"]\ny3 = df_swiss[\"Volume\"]\nx = df_swiss[\"Date\"]\n\ny_e1 = df_eu[\"High\"]\ny_e2 = df_eu[\"Percentage Change\"]\ny_e3 = df_eu[\"Volume\"]\n\n\n\n\ncolors = ['#7D3C98', '#FFC300', '#49BCB9']\n\nfig = make_subplots(subplot_titles=(\"SIX Swiss Exchange\", \"Euronext\"),\n    rows=3, cols=2,\n    column_widths=[0.55, 0.45],\n    row_heights=[1., 1., 1.],\n    specs=[[{\"type\": \"scatter\"}, {\"type\": \"scatter\"}],\n           [{\"type\": \"scatter\"}, {\"type\": \"scatter\"}],\n           [{\"type\": \"scatter\"}, {\"type\": \"scatter\"}]])\n\nfig.add_trace(\n    go.Scatter(x = x, \n                y = y1,\n                hoverinfo = 'x+y',\n                mode='lines',\n                line=dict(color='#7D3C98',\n                width=1),\n                showlegend=True,\n               name=\"High Price\" \n                ),\n    row=1, col=1\n)\n\nfig.add_trace(\n    go.Scatter(x = x, \n                y = y2,\n                hoverinfo = 'x+y',\n                mode='lines',\n                line=dict(color='#FFC300',\n                width=1),\n                showlegend=True,\n               name=\"Percentage Change\" \n                ),\n    row=2, col=1\n)\n\nfig.add_trace(\n    go.Scatter(x = x, \n                y = y3,\n                hoverinfo = 'x+y',\n                mode='lines',\n                line=dict(color='#49BCB9',\n                width=1),\n                showlegend=True,\n               name=\"Volume Traded\" \n                ),\n    row=3, col=1\n)\n\nfig.add_trace(\n    go.Scatter(x = x, \n                y = y_e1,\n                hoverinfo = 'x+y',\n                mode='lines',\n                line=dict(color='#7D3C98',\n                width=1),\n                showlegend=False,\n                ),\n    row=1, col=2\n)\n\nfig.add_trace(\n    go.Scatter(x = x, \n                y = y_e2,\n                hoverinfo = 'x+y',\n                mode='lines',\n                line=dict(color='#FFC300',\n                width=1),\n                showlegend=False,\n                ),\n    row=2, col=2\n)\n\nfig.add_trace(\n    go.Scatter(x = x, \n                y = y_e3,\n                hoverinfo = 'x+y',\n                mode='lines',\n                line=dict(color='#49BCB9',\n                width=1),\n                showlegend=False,\n                ),\n    row=3, col=2\n)\n\n    \n    \n\nfig.update_layout(\n    plot_bgcolor = \"white\",\n    title_text=\"Stock Trends from 2010\"\n)\n             \n\niplot(fig)","aff82152":"df_swiss[\"Month\"] = df_swiss[\"Date\"].dt.month\ndf_swiss[\"Year\"] = df_swiss[\"Date\"].dt.year","f98524c7":"df_s_m = df_swiss[df_swiss[\"Year\"] == 2020].groupby(\"Month\").agg({\n    \"High\":\"sum\",\n    \"Volume\":\"sum\"\n}).reset_index()","780c6a5a":"df_year = df_swiss.groupby(\"Year\").agg({\n    \"High\":\"sum\"\n}).reset_index()","652ba971":"from plotly.subplots import make_subplots\nimport plotly.graph_objects as go\n\nfig = make_subplots(\n    subplot_titles=(\"\",\"Variation of High Prices\",\"\", \"Variation of High Prices 2020\"),\n    rows=5, cols=3,\n    specs=[[{\"type\": \"indicator\"}, {\"rowspan\": 2, \"colspan\": 2}, None],\n           [{\"type\": \"indicator\"}, None, None],\n           [None, None, None],\n           [{\"secondary_y\": True, \"rowspan\": 2, \"colspan\": 3}, None, None],\n           [None, None, None],\n           ])\n\n# Indicators\nmax_y = df_s_m[\"High\"][0]\nmax_v = df_s_m.loc[df_s_m['High'].idxmax()]\nmin_v = df_s_m.loc[df_s_m['High'].idxmin()]\n\ntrace1 = go.Indicator(mode=\"number+delta\",    value=max_v.High,    domain={'row' : 1, 'column' : 1}, \n                      title = {\"text\": \"Sum of High Price (2020)<br><span color:gray'>% Increase<\/span><br><span style='color:gray'>Compared to first month<\/span>\"},\n                    delta = { 'reference': max_y,'relative': True, 'position' : \"top\"},\n                      number={\"font\":{\"size\":30}}\n                     \n                     )\ntrace2 = go.Indicator(mode=\"number+delta\",    value=min_v.High,    domain={'row' : 2, 'column' : 1}, \n                      title = {\"text\": \"<span style='color:gray'>% Desrease<\/span><br><span style='color:gray'>Compared to highest value<\/span>\"},\n                         delta = {'reference': max_v.High, 'relative': True},\n                      number={\"font\":{\"size\":30}}\n\n                     )\n\ntrace3 = go.Scatter(x=df_year[\"Year\"], y=df_year[\"High\"], name=\"High\")\n\nfig.append_trace(trace1, row=1, col=1)\nfig.append_trace(trace2, row=2, col=1)\nfig.append_trace(trace3, row = 1, col = 2)\n\n\nfig.add_trace(go.Bar(x=df_s_m[\"Month\"], \n               y=df_s_m[\"Volume\"], \n               name=\"Volume\"),   row = 4, col = 1, secondary_y=False)\n\nfig.add_trace(\n    go.Scatter(x=df_s_m[\"Month\"], \n               y=df_s_m[\"High\"],\n               name=\"High\"),\n      row = 4, col = 1, secondary_y=True\n)\n\nfig.update_layout(\n    grid = {'rows': 2, 'columns': 2, 'pattern': \"independent\"},\n    plot_bgcolor = \"white\",\n    title_text=\"<b>High Price Trends in Swiss Stock Exchange<\/b>\"\n)\n\n# Update xaxis properties\nfig.update_xaxes(title_text=\"Years\",  row=1, col=2)\nfig.update_xaxes(title_text=\"Months\",  row=4, col=1)\n\n# Update yaxis properties\nfig.update_yaxes(title_text=\"High Price\", row=1, col=2)\nfig.update_yaxes(title_text=\"Volume Traded\", row=4, col=1, secondary_y=False)\nfig.update_yaxes(title_text=\"High Price\", row=4, col=1, secondary_y=True)\n\nfig.update_yaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\")\nfig.update_xaxes(showticklabels = True, showline = True, linewidth = 2, linecolor = \"black\")\n    \niplot(fig)","9c81ce2d":"Daily percentage return of Switzerland is slightly better than that of Europe. This stability is also shown in the kde plot above.","d4d24290":"From above two graph it is noted that open and close price follow each other closely.","7f26db49":"# Selecting Region","2ef051e6":"# Volume Traded","f36f2cc0":"# Open and close price for European exchange","3eda64b1":"# Close Stock Price","e300f070":"# Open Stock Price","a010b447":"# Stock Volatilitiy","9af2ceb1":"So now we can see that if two stocks are positivley correlated with each other a linear relationship bewteen its cumulative return values should occur.","87d856fe":"# Stock trend after Jan 2020","3dcea230":"# Find Outliers","55d163bf":"# Moving Average","8b23a87a":"Moving average is done to bring out smoothness in the curve. Howevere if moving average is more than it will miss the dips as seen in the case of MA200. So while calculating moving average it should be kept in mind that the value must not be too large.","b2438bc1":"If looked closely then volume graph shows reverse trends compared to open and close price of the stock exchange. The spikes is due to the price fall in the share price of both exchange. As we can see that europe share has more spikes compared to swiss share this means that swiss exchage has shown more stability than that of europe exchange.","185c343e":"Please let me know your views to make this article more informative in the comments. Also if you like it please upvote!","267d0cd1":"# Open and close price for Swiss exchange","7a434114":"Open price of swiss and europe shows huge disparity however the total traded amount still shows the swiss domination but not by that extend. From the above we can see that a huge amount of money is traded in swiss exchange in Jan 2015.","2f3cf4be":"After a dip in March 2020 there is a steady increase in the open and close price of the stock price except a small dip in end of October 2020.","1961673b":"# Total traded volume","b2ae41c2":"# Coorelation between both exchange","7a3eb601":"# Vizualization In Short ","9ac4690c":"The density of both the exchange curve is nearly the same showing that they have nearly same stability.","0727c555":"To understand the above concept more clearly let us plot the stock prices after Jan 2020.","e110c0da":"# Stock Return","4af69825":"# OHLC","06a9994a":"# Percentage Change","35078e3f":"<h1><center><font size=\"6\">Stock Market Analysis<\/font><\/center><\/h1>\n\n\n<center><img src=\"https:\/\/images.unsplash.com\/photo-1563986768711-b3bde3dc821e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2548&q=80\"><\/img><\/center>\n\n\nPhoto by <a href=\"https:\/\/unsplash.com\/@austindistel?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Austin Distel<\/a> on <a href=\"https:\/\/unsplash.com\/s\/photos\/stock-exchange?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash<\/a>\n  ","eaf906ac":"# Absolute change in successive rows","dd74d8e1":"# Cumulative Return"}}