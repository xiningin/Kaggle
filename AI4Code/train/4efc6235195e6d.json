{"cell_type":{"ab7c8ab1":"code","3711709c":"code","84cf5e51":"code","303b2018":"code","1810ce1a":"code","5686628f":"code","f09886a9":"code","7390f5b9":"code","67a62d3a":"code","fce02677":"code","483743da":"code","500d7248":"code","e3b3fbbc":"code","7fe7aba4":"code","df46ff6b":"code","deab005c":"code","c3c6cb28":"markdown","cc7d9bf2":"markdown","32191bf2":"markdown","d98e2d34":"markdown","61c885a3":"markdown","a7aa6e4f":"markdown","56368cc6":"markdown","a68bda8e":"markdown","d2e10a63":"markdown","fb9c8525":"markdown","6913e2e2":"markdown"},"source":{"ab7c8ab1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3711709c":"#loading dataset\nimport pandas as pd\nimport numpy as np\n#visualisation\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n#EDA\nfrom collections import Counter\nimport pandas_profiling as pp\n# data preprocessing\nfrom sklearn.preprocessing import StandardScaler\n# data splitting\nfrom sklearn.model_selection import train_test_split\n# data modeling\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import confusion_matrix,accuracy_score,roc_curve,classification_report\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom xgboost import XGBClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\n#ensembling\nfrom mlxtend.classifier import StackingCVClassifier","84cf5e51":"df = pd.read_csv(\"\/kaggle\/input\/graduate-admissions\/Admission_Predict_Ver1.1.csv\")\ndf.head()","303b2018":"df.info()","1810ce1a":"df.isnull().sum()","5686628f":"pp.ProfileReport(df)","f09886a9":"df= df.drop('Serial No.', axis=1)\ndf","7390f5b9":"df['ChanceAdmit'] = df['Chance of Admit '].map(lambda x : 1 if x>0.80 else 0)","67a62d3a":"df.groupby(['ChanceAdmit'])['ChanceAdmit'].count().plot.pie(autopct='%.f%%' , shadow=True)\nplt.title('% of Students admitted')\nplt.legend(['Not Admitted','Admitted'])\nplt.show()","fce02677":"fig,ax = plt.subplots(1,3,figsize=(20,10))\nsns.scatterplot(df['GRE Score'] , df['Chance of Admit ']  , hue=df['ChanceAdmit'], ax=ax[0])\nsns.scatterplot(df['TOEFL Score'] , df['Chance of Admit '] ,hue=df['ChanceAdmit'] , ax=ax[1])\nsns.scatterplot(df['CGPA'] , df['Chance of Admit '] ,hue=df['ChanceAdmit'] , ax=ax[2])\nax[0].set_title('GRE Score vs Chance of Admit')\nax[1].set_title('TOEFL Score vs Chance of Admit')\nax[2].set_title('CGPA vs Chance of Admit')\nplt.show()","483743da":"fig,ax = plt.subplots(1,2,figsize=(10,5))\nsns.barplot(df['Research'] , df['GRE Score'] ,ax=ax[0])\nsns.barplot(df['Research'] , df['GRE Score'] , ax=ax[1])\nax[0].set_title('GRE Score vs Research experience')\nax[1].set_title('TOEFL Score vs Research experience')\nplt.show()","500d7248":"fig,ax = plt.subplots(1,2,figsize=(10,5))\ndf.groupby(['Research'])['Research'].count().plot.pie(autopct='%.f%%' ,ax=ax[0] ,shadow=True )\nax[0].set_title('% of students having Research experience')\ndf.groupby(['University Rating'])['University Rating'].count().plot.pie(autopct='%.f%%' , ax=ax[1],shadow=True)\nax[1].set_title('University Rating of students')\nplt.show()","e3b3fbbc":"X = df.drop([\"Chance of Admit \"], axis=1)\ny = df[\"Chance of Admit \"]","7fe7aba4":"X_train, X_test, y_train, y_test = train_test_split(X, y)\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","df46ff6b":"lr = LinearRegression()\nmodel = lr.fit(X_train,y_train)\n\ndef get_cv_scores(model):\n    scores = cross_val_score(model,\n                             X_train,\n                             y_train,\n                             cv=5,\n                             scoring='r2')\n    \n    print('CV Mean: ', np.mean(scores))\n    print('STD: ', np.std(scores))\n    print('\\n')\n\n# get cross val scores\nget_cv_scores(model)","deab005c":"score1 = model.score(X_test, y_test)\nprint(\"Accuracy of Logistic Regression:\",score1*100,'\\n')","c3c6cb28":"56% did Research.\n\nbut only 15% have highly rated University\nSo, Research papers influence the University Ranking","cc7d9bf2":"Mapping the \"Chance of Admit\" \n as 1 if greater than 0.8\n    0 if less than 0.8","32191bf2":"This scatterplot defines the relationship between chance of admit and\n 1. Gre score \n 2. TOFL score\n 3. CGPA\n \nFrom this we can say, all three influence the chance of admit very much","d98e2d34":"Getting to know the data","61c885a3":"Determing the chances of getting into the college\/","a7aa6e4f":"Importing the necessary libraries","56368cc6":"Dropping the un related column(s)","a68bda8e":"Importing the data","d2e10a63":"Finding wheather research is needed to score better in exams.\nBut through this graph below, Research paper does not play a role in GRE or TOFL scores","fb9c8525":"Pandas Report for better understanding","6913e2e2":"How important are Research papers?"}}