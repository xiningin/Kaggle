{"cell_type":{"04562a22":"code","7d7753fa":"code","2fc75c9c":"code","78660e2c":"code","7054759e":"code","b11a5326":"code","c0fc5bdd":"code","16d71fc4":"code","e5e1e7bf":"code","b9b9a094":"code","020d2e01":"code","b03416f9":"markdown","9e179b94":"markdown","8712465a":"markdown","5fe9449a":"markdown","ab1b2ef3":"markdown","dcbd7c19":"markdown","753e5cc0":"markdown","966fcfda":"markdown"},"source":{"04562a22":"%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.rcParams[\"figure.figsize\"] = (15, 10)\nplt.rcParams[\"figure.dpi\"] = 300\nplt.rcParams[\"font.size\"] = 14\nplt.rcParams['font.family'] = ['sans-serif']\nplt.rcParams['font.sans-serif'] = ['DejaVu Sans']\nplt.style.use('ggplot')\nsns.set_style(\"whitegrid\", {'axes.grid': False})\nplt.rcParams['image.cmap'] = 'gray' # grayscale looks better\nfrom itertools import cycle\nprop_cycle = plt.rcParams['axes.prop_cycle']\ncolors = prop_cycle.by_key()['color']","7d7753fa":"from pathlib import Path\nimport numpy as np\nimport pandas as pd\nimport os\nfrom skimage.io import imread as imread\nfrom skimage.util import montage\nmontage_rgb = lambda x: np.stack([montage(x[:, :, :, i]) for i in range(x.shape[3])], -1)\nfrom skimage.color import label2rgb","2fc75c9c":"base_dir = Path('..\/input\/cartoon-set')\ncartoon_df = pd.DataFrame({'path': list(base_dir.glob('*\/*.*'))})\ncartoon_df['dataset'] = cartoon_df['path'].map(lambda x: x.parent.stem)\ncartoon_df['image_id'] = cartoon_df['path'].map(lambda x: x.stem)\ncartoon_df['suffix'] = cartoon_df['path'].map(lambda x: x.suffix[1:])\nflat_cartoon_df = cartoon_df.pivot_table(index=['dataset', 'image_id'], columns='suffix', values='path', aggfunc='first').reset_index().dropna()\nflat_cartoon_df.sample(3)","78660e2c":"def parse_csv(in_url):\n    return {c_row[0]: c_row[1] # we don't care about total variants\n            for c_row in pd.read_csv(in_url, header=None).to_dict('records')}\nparse_csv(flat_cartoon_df.iloc[1]['csv'])","7054759e":"flat_cartoon_df['char_dict'] = flat_cartoon_df['csv'].map(parse_csv)\nflat_cartoon_df.sample(3)","b11a5326":"char_name_list = list(parse_csv(flat_cartoon_df.iloc[0]['csv']).keys())\nfor k in char_name_list:\n    flat_cartoon_df[k] = flat_cartoon_df['char_dict'].map(lambda x: x[k])\nflat_cartoon_df.drop(['csv', 'char_dict', 'image_id'], axis=1).to_csv('clean_char_features.csv', index=False)\nflat_cartoon_df.sample(3)","c0fc5bdd":"sns.pairplot(flat_cartoon_df[char_name_list])","16d71fc4":"c_img = imread(flat_cartoon_df.iloc[1]['png'])\nplt.imshow(c_img)","e5e1e7bf":"lin_steps = np.linspace(0, flat_cartoon_df.shape[0]-1, 6).astype(int)\nfig, m_axs = plt.subplots(len(char_name_list), len(lin_steps), figsize=(12, 35))\nfor c_axs, c_name in zip(m_axs, char_name_list):\n    c_paths = flat_cartoon_df.sort_values(c_name)['png'].values[lin_steps]\n    c_axs[0].set_title(c_name)\n    for c_ax, c_path in zip(c_axs, c_paths):\n        c_ax.imshow(imread(c_path))\n        c_ax.axis('off')","b9b9a094":"from PIL import Image\nfrom tqdm import tqdm_notebook\nimport h5py\nOUT_SIZE = (128, 128)\nwith h5py.File('out_cartoons.h5', 'w') as h:\n    c_df = flat_cartoon_df.sort_values('image_id').reset_index(drop=True)\n    for c_name in char_name_list:\n        h.create_dataset(c_name, data=c_df[c_name].values, dtype='int16', compression='gzip')\n    image_ds = h.create_dataset('image', shape=(c_df.shape[0],)+OUT_SIZE+(3,), dtype='uint8')\n    for i, (_, c_row) in enumerate(tqdm_notebook(list(c_df.iterrows()))):\n        image_ds[i] = np.array(Image.open(c_row['png']).resize(OUT_SIZE).convert('RGB'))\n","020d2e01":"with h5py.File('out_cartoons.h5', 'r') as h:\n    for k in h.keys():\n        print(k, h[k].shape, h[k].dtype)","b03416f9":"## Turn CSV into features","9e179b94":"## Load Images","8712465a":"#### Make sure everything is still in the file","5fe9449a":"### Convert each characteristic into a new column","ab1b2ef3":"# Export Everything\nWe put everything in a single giant file to make it easier to go through later","dcbd7c19":"### Show a rough relationship between all of the characteristics","753e5cc0":"# Show the range for each parameter","966fcfda":"# Load and Organize Data"}}