{"cell_type":{"caab90af":"code","4dfd52e4":"code","6b56b303":"code","1ba38272":"code","837aa210":"code","a0f927f3":"code","91daf50b":"code","8fafec17":"code","c88523bd":"code","ccf16ce8":"code","dc6392c2":"code","fb407006":"code","a95d282e":"code","ac285aed":"code","00e29942":"code","b017ebd4":"code","0e7e2c21":"code","34ea46e6":"markdown","0a113055":"markdown","64948892":"markdown","eedc33eb":"markdown","2da05faa":"markdown","4ec54862":"markdown","83093de1":"markdown","bb96dd39":"markdown","94e0047e":"markdown","71cc0bb0":"markdown","2427e6e7":"markdown","ac6d45c3":"markdown","e09894b6":"markdown","10adb606":"markdown","52ddd36e":"markdown","f3dbe2a5":"markdown","f533f615":"markdown"},"source":{"caab90af":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4dfd52e4":"from IPython.display import HTML\nHTML('<iframe src=https:\/\/www.docdroid.net\/2yEjqhk\/kaggle-survey-2020-answer-choices-pdf width=700 height=350><\/iframe>')","6b56b303":"import numpy as np \n\nimport pandas as pd \npd.set_option('display.max_columns', None)\n\nimport seaborn as sns\n\nimport matplotlib.pyplot as plt\n\n\nimport warnings\nwarnings.simplefilter(action='ignore')","1ba38272":"Kaggle2020=pd.read_csv(\"..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv\")\nKaggle2020.drop([0],axis=0,inplace=True)\nKaggle2020['time'] = Kaggle2020['Time from Start to Finish (seconds)'].astype(int)\nKaggle2020.drop(\"Time from Start to Finish (seconds)\",axis=1,inplace=True)\nKaggle2020['time'] = pd.to_datetime(Kaggle2020['time'], unit='s').dt.time\nfirst_col=Kaggle2020.pop('time')\nKaggle2020.insert(0, 'time', first_col)\nKaggle2020.set_index('time',inplace=True)\nKaggle2020[\"Year\"]=\"2020\"\nKaggle2020.head(3)\n\n","837aa210":"Kaggle2020S = Kaggle2020[Kaggle2020['Q5']=='Student']\nKaggle2020DE = Kaggle2020[Kaggle2020['Q5']=='Data Engineer']\nKaggle2020SE = Kaggle2020[Kaggle2020['Q5']=='Software Engineer']\nKaggle2020DA = Kaggle2020[Kaggle2020['Q5']=='Data Analyst']\nKaggle2020BA = Kaggle2020[Kaggle2020['Q5']=='Business Analyst']\nKaggle2020DS = Kaggle2020[Kaggle2020['Q5']=='Data Scientist']\nKaggle2020DBA =  Kaggle2020[Kaggle2020['Q5']=='DBA\/Database Engineer']\nKaggle2020MLE = Kaggle2020[Kaggle2020['Q5']=='Machine Learning Engineer']\nKaggle2020PM = Kaggle2020[Kaggle2020['Q5']=='Product\/Project Manager']\n\nKaggle2020RS = Kaggle2020[Kaggle2020['Q5']=='Research Scientist']\n\nKaggle2020St = Kaggle2020[Kaggle2020['Q5']=='Statistician']\nKaggle2020N = Kaggle2020[Kaggle2020['Q5']=='Currently not employed']\nKaggle2020O = Kaggle2020[Kaggle2020['Q5']=='Other']\n\n\nimport plotly.graph_objects as go\n\n\nfig = go.Figure(go.Pie(\n    values = [len(Kaggle2020S), len(Kaggle2020DE), len(Kaggle2020SE), len(Kaggle2020DA),len(Kaggle2020BA),len(Kaggle2020DS),len(Kaggle2020DBA),len(Kaggle2020MLE),len(Kaggle2020PM),len(Kaggle2020RS),len(Kaggle2020St),len(Kaggle2020N),len(Kaggle2020O)],\n    labels = [\"Student\", \"Data Engineer\", \"Software Engineer\", \"Data Analyst\",\"Business Analyst\",\"Data Scientist\",\"DBA\/Database Engineer\",\"Machine Learning Engineer\",\"Product\/Project Manager\",\"Research Scientist\",\"Statistician\",\"Currently not employed\",\"others\"],\n    texttemplate = \"%{label}: %{value:,s} <br>(%{percent})\",\n    textposition = \"inside\", hole=.3))\n\n#fig.show()\n\nKaggle2020['noPeople'] = [m for m in range(len(Kaggle2020))]\nimport plotly.express as px\n#df = px.data.gapminder().query(\"year == 2007\").query(\"continent == 'Europe'\")\n#df.loc[df['pop'] < 2.e6, 'country'] = 'Other countries' # Represent only large countries\nfig = px.pie(Kaggle2020, values='noPeople', names='Q5', title='Kagglers vs jobs',\n    hole=.3)\nfig.show()\n\n\n\n","a0f927f3":"Kaggle2020['noPeople'] = [m for m in range(len(Kaggle2020))]\n\n\nimport plotly.express as px\ndf = px.data.tips()\nfig = px.bar(Kaggle2020, x=\"noPeople\", y=\"Q5\",\n             color='Q2', barmode='group',\n             height=800)\n#fig.update_layout(barmode='stack')\nfig.update_traces(marker_line_width=0)\nfig.show()","91daf50b":"import plotly.graph_objects as go\n\n\nfig = go.Figure(go.Pie(\n    values = [len(Kaggle2020S)+len(Kaggle2020SE)+len(Kaggle2020DBA)+len(Kaggle2020PM)+len(Kaggle2020RS)+len(Kaggle2020N)+len(Kaggle2020O), len(Kaggle2020DE)+len(Kaggle2020DA)+len(Kaggle2020BA)+len(Kaggle2020DS)+len(Kaggle2020MLE)+len(Kaggle2020St)],\n    labels = [\"Data Scence Related Jobs\", \"Data Scence non Related Jobs\"],\n    texttemplate = \"%{label}: %{value:,s} <br>(%{percent})\",\n    textposition = \"inside\", hole=.3))\n\nfig.show()","8fafec17":"#here we make a treemap using squarify library\nimport squarify\nimport seaborn as sb\n# Prepare Data\nyears_order =  ['I have never written code', '< 1 years', '1-2 years', '3-5 years', '5-10 years', '10-20 years', '20+ years']\nexp_yrs_df = Kaggle2020['Q6'].value_counts()[years_order]\nperc = [str('{:5.1f}%'.format(i\/exp_yrs_df.values.sum()*100)) for i in exp_yrs_df.values]\nlabels = [el[0] + \" \\n \" + el[1] for el in zip(exp_yrs_df.index, perc)]\nsizes = exp_yrs_df.values.tolist()\n\n# Draw Plot\nplt.figure(figsize=(12,8), dpi= 80)\nsquarify.plot(sizes=sizes, label=labels, color=sb.color_palette('viridis'), alpha=.8,  text_kwargs={'fontsize':12,'linespacing':2})\n\n# Decorate\nplt.axis('off')\nplt.title('Experience Years',fontsize=15,weight='bold')\nplt.show();","c88523bd":"import plotly.express as px\n\nKaggle2020['Q5'] = Kaggle2020['Q5'].fillna(\"Others\")\n\nKaggle2020['Q4'] = Kaggle2020['Q4'].fillna(\"I prefer not to answer\")\n\n\nKaggle2020['noPeople'] = [m for m in range(len(Kaggle2020))]\nfig = px.bar(Kaggle2020, x=\"Q5\", y=\"noPeople\", color=\"Q4\", title=\"job vs Education\")\nfig.update_layout(barmode='stack')\nfig.update_traces(marker_line_width=0)\nfig.show()","ccf16ce8":"\n\n#Kaggle2020['Q5'] = Kaggle2020['Q5'].fillna(\"others\"),\n\n\n\nKaggle2020['jobtype'] = Kaggle2020['Q5'].apply(lambda x: 'Data Scence non Related Jobs' if x in ['Currently not employed','others','Product\/Project Manager','DBA\/Database Engineer','Student','Software Engineer','Research Scientist'] else 'Data Scence Related Jobs')\nfig = px.bar(Kaggle2020, x=\"jobtype\", y=\"noPeople\", color=\"Q4\", title=\"jobtype vs Education\")\nfig.update_layout(barmode='stack')\nfig.update_traces(marker_line_width=0)\nfig.show()","dc6392c2":"\nKaggle2020 = Kaggle2020.fillna('Other')\nKaggle2020ds = Kaggle2020[Kaggle2020['jobtype']=='Data Scence Related Jobs']\ndef exp(x):\n    if x == 'I have never written code':\n        return 0\n    elif x == '< 1 years':\n        return 1\n    elif x =='1-2 years':\n        return 2\n    elif x == '3-5 years':\n        return 5\n    elif x == '5-10 years':\n        return 10\n    elif x == '10-20 years':\n        return 20\n    elif x == '20+ years':\n        return 20\n    else:\n        return 0\n\n    \ndef langUsers(x):\n    if x == 'Python':\n        return len(Kaggle2020ds[Kaggle2020ds['Q8']==\"Python\"])\n    if x == 'Java':\n        return len(Kaggle2020ds[Kaggle2020ds['Q8']==\"Java\"])\n    if x == 'MATLAB':\n        return len(Kaggle2020ds[Kaggle2020ds['Q8']==\"MATLAB\"])\n    if x == 'R':\n        return len(Kaggle2020ds[Kaggle2020ds['Q8']==\"R\"])\n    if x == 'C':\n        return len(Kaggle2020ds[Kaggle2020ds['Q8']==\"C\"])\n    if x == 'Other':\n        return len(Kaggle2020ds[Kaggle2020ds['Q8']==\"Other\"])\n    if x == 'Javascript':\n        return len(Kaggle2020ds[Kaggle2020ds['Q8']==\"Javascript\"])\n    if x == 'C++':\n        return len(Kaggle2020ds[Kaggle2020ds['Q8']==\"C++\"])\n    if x == 'Julia':\n        return len(Kaggle2020ds[Kaggle2020ds['Q8']==\"Julia\"])\n    if x == 'None':\n        return len(Kaggle2020ds[Kaggle2020ds['Q8']==\"None\"])\n    if x == 'Bash':\n        return len(Kaggle2020ds[Kaggle2020ds['Q8']==\"Bash\"])\n    if x == 'Swift':\n        return len(Kaggle2020ds[Kaggle2020ds['Q8']==\"Swift\"])\n    \nKaggle2020ds['codeExp'] = Kaggle2020ds['Q6'].apply(lambda x: exp(x))\nKaggle2020ds['langUsers'] = Kaggle2020ds['Q8'].apply(lambda x: exp(x))\nimport plotly.express as px \n  \n  \ndf = px.data.tips() \nfig = px.scatter(Kaggle2020ds, x='noPeople', y='Q8', size='codeExp',color='Q4') \n  \nfig.show()\n","fb407006":"import plotly.graph_objects as go\n\nKaggle2020S = Kaggle2020[Kaggle2020['Q5']=='Student']\nKaggle2020DE = Kaggle2020[Kaggle2020['Q5']=='Data Engineer']\nKaggle2020SE = Kaggle2020[Kaggle2020['Q5']=='Software Engineer']\nKaggle2020DA = Kaggle2020[Kaggle2020['Q5']=='Data Analyst']\nKaggle2020BA = Kaggle2020[Kaggle2020['Q5']=='Business Analyst']\nKaggle2020DS = Kaggle2020[Kaggle2020['Q5']=='Data Scientist']\nKaggle2020DBA =  Kaggle2020[Kaggle2020['Q5']=='DBA\/Database Engineer']\nKaggle2020MLE = Kaggle2020[Kaggle2020['Q5']=='Machine Learning Engineer']\nKaggle2020PM = Kaggle2020[Kaggle2020['Q5']=='Product\/Project Manager']\n\nKaggle2020RS = Kaggle2020[Kaggle2020['Q5']=='Research Scientist']\n\nKaggle2020St = Kaggle2020[Kaggle2020['Q5']=='Statistician']\nKaggle2020N = Kaggle2020[Kaggle2020['Q5']=='Currently not employed']\nKaggle2020O = Kaggle2020[Kaggle2020['Q5']=='Other']\n\n\n\n\ntheta=['PyCharm',\n           'JupyterLab',\n           'RStudio',\n           'Visual Studio',\n           'VSCode',\n           'Spyder',\n          'Notepad++',\n          'Sublime Text',\n          'Vim, Emacs, or similar',\n          'MATLAB',\n          'None of the these']\n\nr1 = [sum(Kaggle2020DE['Q9_Part_5'].str.count('PyCharm')),\n       sum(Kaggle2020DE['Q9_Part_1'].str.count('JupyterLab')),\n       sum(Kaggle2020DE['Q9_Part_2'].str.count('RStudio')),\n       sum(Kaggle2020DE['Q9_Part_3'].str.count('Visual Studio')),\n       sum(Kaggle2020DE['Q9_Part_4'].str.count('VSCode')),\n       sum(Kaggle2020DE['Q9_Part_6'].str.count('Spyder')),\n      sum(Kaggle2020DE['Q9_Part_7'].str.count('Notepad')),\n      sum(Kaggle2020DE['Q9_Part_8'].str.count('Sublime Text')),\n      sum(Kaggle2020DE['Q9_Part_9'].str.count('Vim')),\n      sum(Kaggle2020DE['Q9_Part_10'].str.count('MATLAB')),\n      sum(Kaggle2020DE['Q9_Part_11'].str.count('None') )]\n\nr2 = [sum(Kaggle2020DA['Q9_Part_5'].str.count('PyCharm')),\n       sum(Kaggle2020DA['Q9_Part_1'].str.count('JupyterLab')),\n       sum(Kaggle2020DA['Q9_Part_2'].str.count('RStudio')),\n       sum(Kaggle2020DA['Q9_Part_3'].str.count('Visual Studio')),\n       sum(Kaggle2020DA['Q9_Part_4'].str.count('VSCode')),\n       sum(Kaggle2020DA['Q9_Part_6'].str.count('Spyder')),\n      sum(Kaggle2020DA['Q9_Part_7'].str.count('Notepad')),\n      sum(Kaggle2020DA['Q9_Part_8'].str.count('Sublime Text')),\n      sum(Kaggle2020DA['Q9_Part_9'].str.count('Vim')),\n      sum(Kaggle2020DA['Q9_Part_10'].str.count('MATLAB')),\n      sum(Kaggle2020DA['Q9_Part_11'].str.count('None') )]\n\nr3 = [sum(Kaggle2020BA['Q9_Part_5'].str.count('PyCharm')),\n       sum(Kaggle2020BA['Q9_Part_1'].str.count('JupyterLab')),\n       sum(Kaggle2020BA['Q9_Part_2'].str.count('RStudio')),\n       sum(Kaggle2020BA['Q9_Part_3'].str.count('Visual Studio')),\n       sum(Kaggle2020BA['Q9_Part_4'].str.count('VSCode')),\n       sum(Kaggle2020BA['Q9_Part_6'].str.count('Spyder')),\n      sum(Kaggle2020BA['Q9_Part_7'].str.count('Notepad')),\n      sum(Kaggle2020BA['Q9_Part_8'].str.count('Sublime Text')),\n      sum(Kaggle2020BA['Q9_Part_9'].str.count('Vim')),\n      sum(Kaggle2020BA['Q9_Part_10'].str.count('MATLAB')),\n      sum(Kaggle2020BA['Q9_Part_11'].str.count('None') )]\n\nr4 = [sum(Kaggle2020DS['Q9_Part_5'].str.count('PyCharm')),\n       sum(Kaggle2020DS['Q9_Part_1'].str.count('JupyterLab')),\n       sum(Kaggle2020DS['Q9_Part_2'].str.count('RStudio')),\n       sum(Kaggle2020DS['Q9_Part_3'].str.count('Visual Studio')),\n       sum(Kaggle2020DS['Q9_Part_4'].str.count('VSCode')),\n       sum(Kaggle2020DS['Q9_Part_6'].str.count('Spyder')),\n      sum(Kaggle2020DS['Q9_Part_7'].str.count('Notepad')),\n      sum(Kaggle2020DS['Q9_Part_8'].str.count('Sublime Text')),\n      sum(Kaggle2020DS['Q9_Part_9'].str.count('Vim')),\n      sum(Kaggle2020DS['Q9_Part_10'].str.count('MATLAB')),\n      sum(Kaggle2020DS['Q9_Part_11'].str.count('None') )]\n\nr5 = [sum(Kaggle2020MLE['Q9_Part_5'].str.count('PyCharm')),\n       sum(Kaggle2020MLE['Q9_Part_1'].str.count('JupyterLab')),\n       sum(Kaggle2020MLE['Q9_Part_2'].str.count('RStudio')),\n       sum(Kaggle2020MLE['Q9_Part_3'].str.count('Visual Studio')),\n       sum(Kaggle2020MLE['Q9_Part_4'].str.count('VSCode')),\n       sum(Kaggle2020MLE['Q9_Part_6'].str.count('Spyder')),\n      sum(Kaggle2020MLE['Q9_Part_7'].str.count('Notepad')),\n      sum(Kaggle2020MLE['Q9_Part_8'].str.count('Sublime Text')),\n      sum(Kaggle2020MLE['Q9_Part_9'].str.count('Vim')),\n      sum(Kaggle2020MLE['Q9_Part_10'].str.count('MATLAB')),\n      sum(Kaggle2020MLE['Q9_Part_11'].str.count('None') )]\n\nr6 = [sum(Kaggle2020St['Q9_Part_5'].str.count('PyCharm')),\n       sum(Kaggle2020St['Q9_Part_1'].str.count('JupyterLab')),\n       sum(Kaggle2020St['Q9_Part_2'].str.count('RStudio')),\n       sum(Kaggle2020St['Q9_Part_3'].str.count('Visual Studio')),\n       sum(Kaggle2020St['Q9_Part_4'].str.count('VSCode')),\n       sum(Kaggle2020St['Q9_Part_6'].str.count('Spyder')),\n      sum(Kaggle2020St['Q9_Part_7'].str.count('Notepad')),\n      sum(Kaggle2020St['Q9_Part_8'].str.count('Sublime Text')),\n      sum(Kaggle2020St['Q9_Part_9'].str.count('Vim')),\n      sum(Kaggle2020St['Q9_Part_10'].str.count('MATLAB')),\n      sum(Kaggle2020St['Q9_Part_11'].str.count('None') )]\n\nfig = go.Figure()\n\nfig.add_trace(go.Scatterpolar(\n      r=r1,\n      theta=theta,\n      fill='toself',\n      name='Data Engineer'\n))\nfig.add_trace(go.Scatterpolar(\n      r=r2,\n      theta=theta,\n      fill='toself',\n      name='Data Analyst'\n))\nfig.add_trace(go.Scatterpolar(\n      r=r3,\n      theta=theta,\n      fill='toself',\n      name='Business Analyst'\n))\nfig.add_trace(go.Scatterpolar(\n      r=r4,\n      theta=theta,\n      fill='toself',\n      name='Data Scientist'\n))\nfig.add_trace(go.Scatterpolar(\n      r=r5,\n      theta=theta,\n      fill='toself',\n      name='Machine Learning Engineer'\n))\nfig.add_trace(go.Scatterpolar(\n      r=r6,\n      theta=theta,\n      fill='toself',\n      name='Statistician'\n))\n\nfig.show()","a95d282e":"import plotly.express as px\ndf = px.data.tips()\nfig = px.histogram(Kaggle2020ds, x=\"Q11\")\nfig.show()\n","ac285aed":"from wordcloud import WordCloud\n\n\nKaggle2020ds['libs'] = Kaggle2020ds['Q14_Part_1']+\" \"+Kaggle2020ds['Q14_Part_2']+\" \"+Kaggle2020ds['Q14_Part_3']+\" \"+Kaggle2020ds['Q14_Part_4']+\" \"+Kaggle2020ds['Q14_Part_5']+\" \"+Kaggle2020ds['Q14_Part_6']+\" \"+Kaggle2020ds['Q14_Part_7']+\" \"+Kaggle2020ds['Q14_Part_8']+\" \"+Kaggle2020ds['Q14_Part_9']+\" \"+Kaggle2020ds['Q14_Part_10']+\" \"+Kaggle2020ds['Q14_Part_11']+\" \"+Kaggle2020ds['Q16_Part_1']+\" \"+Kaggle2020ds['Q16_Part_2']+\" \"+Kaggle2020ds['Q16_Part_3']+\" \"+Kaggle2020ds['Q16_Part_4']+\" \"+Kaggle2020ds['Q16_Part_5']+\" \"+Kaggle2020ds['Q16_Part_6']+\" \"+Kaggle2020ds['Q16_Part_7']+\" \"+Kaggle2020ds['Q16_Part_8']+\" \"+Kaggle2020ds['Q16_Part_9']+\" \"+Kaggle2020ds['Q16_Part_10']+\" \"+Kaggle2020ds['Q16_Part_11']+\" \"+Kaggle2020ds['Q16_Part_12']+\" \"+Kaggle2020ds['Q16_Part_13']+\" \"+Kaggle2020ds['Q16_Part_14']+ \"\"+Kaggle2020ds['Q16_Part_15']\n\ncomment_words = ' '.join([str(elem) for elem in Kaggle2020ds['libs'].to_list()]) \ncomment_words = comment_words.replace('Other','')\nwordcloud = WordCloud(width = 3000, height = 2000, random_state=1, background_color='white', colormap='Set2',\n                min_font_size = 10).generate(comment_words) \n\nfig = px.imshow(wordcloud)\nfig.show()","00e29942":"def salary(x):\n    if x == '$0 ($USD)':\n        return 0\n    if x =='$1-$99':\n        return 99\n    if x== '$100-$999':\n        return 999\n    if x=='$1000-$9,999':\n        return 9999\n    if x=='$10,000-$99,999':\n        return 99999\n    if x== '$100,000 or more ($USD)':\n        return 100000\n\ndf = pd.read_csv('https:\/\/raw.githubusercontent.com\/plotly\/datasets\/master\/2014_world_gdp_with_codes.csv')\ncode_list = []\n\nKaggle2020ds['Q3'] = Kaggle2020ds['Q3'].str.replace('United States of America','United States')\nKaggle2020ds['Q3'] = Kaggle2020ds['Q3'].replace('United Kingdom of Great Britain and Northern Ireland','United Kingdom')\nKaggle2020ds['Q3'] = Kaggle2020ds['Q3'].replace('South Korea',\"Korea, South\")\nKaggle2020ds['Q3'] = Kaggle2020ds['Q3'].replace('Republic of Korea','Korea, North')\nKaggle2020ds['Q3'] = Kaggle2020ds['Q3'].replace('Viet Nam','Vietnam')\nKaggle2020ds['Q3'] = Kaggle2020ds['Q3'].replace('Iran, Islamic Republic of...','Iran')\n\n\nKaggle2020ds['salary'] = Kaggle2020ds['Q25'].apply(lambda x: salary(x))\n\nmapdata = Kaggle2020ds.groupby('Q3').mean()\n#mapdata\nfor country in mapdata.index:\n    try:\n        code_list.append(df[df['COUNTRY']==country]['CODE'].values[0])\n    except:\n        #print(country)\n        code_list.append(country)\nmapdata['Code'] = code_list\n\nmapdata['Avg_Code_Exp'] = mapdata['codeExp']\ndf = px.data.gapminder().query(\"year==2007\")\nfig = px.choropleth(mapdata, locations=\"Code\",\n                    color=\"salary\", \n                    hover_name=\"Code\",\n                    color_continuous_scale=px.colors.sequential.Plasma)\nfig.show()","b017ebd4":"def salary(x):\n    if x == '$0 ($USD)':\n        return 0\n    if x =='$1-$99':\n        return 99\n    if x== '$100-$999':\n        return 999\n    if x=='$1000-$9,999':\n        return 9999\n    if x=='$10,000-$99,999':\n        return 99999\n    if x== '$100,000 or more ($USD)':\n        return 100000\n\ndf = pd.read_csv('https:\/\/raw.githubusercontent.com\/plotly\/datasets\/master\/2014_world_gdp_with_codes.csv')\ncode_list = []\n\nKaggle2020ds['Q3'] = Kaggle2020ds['Q3'].str.replace('United States of America','United States')\nKaggle2020ds['Q3'] = Kaggle2020ds['Q3'].replace('United Kingdom of Great Britain and Northern Ireland','United Kingdom')\nKaggle2020ds['Q3'] = Kaggle2020ds['Q3'].replace('South Korea',\"Korea, South\")\nKaggle2020ds['Q3'] = Kaggle2020ds['Q3'].replace('Republic of Korea','Korea, North')\nKaggle2020ds['Q3'] = Kaggle2020ds['Q3'].replace('Viet Nam','Vietnam')\nKaggle2020ds['Q3'] = Kaggle2020ds['Q3'].replace('Iran, Islamic Republic of...','Iran')\n\n\nKaggle2020ds['salary'] = Kaggle2020ds['Q25'].apply(lambda x: salary(x))\n\nmapdata = Kaggle2020ds.groupby('Q3').mean()\n#mapdata\nfor country in mapdata.index:\n    try:\n        code_list.append(df[df['COUNTRY']==country]['CODE'].values[0])\n    except:\n        #print(country)\n        code_list.append(country)\nmapdata['Code'] = code_list\n\nmapdata['Avg_Code_Exp'] = mapdata['codeExp']\ndf = px.data.gapminder().query(\"year==2007\")\nfig = px.choropleth(mapdata, locations=\"Code\",\n                    color=\"noPeople\", \n                    hover_name=\"Code\",\n                    color_continuous_scale=px.colors.sequential.Plasma)\nfig.show()","0e7e2c21":"jobdata = Kaggle2020ds.groupby('Q5').mean()\n#fig.show()\n\nKaggle2020['noPeople'] = [m for m in range(len(Kaggle2020))]\nimport plotly.express as px\n#df = px.data.gapminder().query(\"year == 2007\").query(\"continent == 'Europe'\")\n#df.loc[df['pop'] < 2.e6, 'country'] = 'Other countries' # Represent only large countries\nfig = px.pie(jobdata, values='salary', names=jobdata.index, title='Salary vs DS Jobs',\n    hole=.3)\nfig.show()\n\n","34ea46e6":"# How many years of experiance I need for a DS job?\nThis may seem counter intuitive but exepriance is a major criteria to get a job, so if you get an oppertunity to workin a company dont miss it!!","0a113055":"# Load and clean the data\n\n\n\nFirst thing first I need to look at data and description, so I went through all the documentation all the datasets. I even looked at other people's notebooks and got some Ideas of my own. So lets load all the data and do some cleaning.\n\n\n## Kaggle 2020\n\nAter reading the pdf loaded above we can understand that there are alot of relevent questions that we should consider important, for example formal education education?, how many years into coding? etc. We need to take these features saparate and find the hidden pattern in the data","64948892":"# Job distribution among kaggers","eedc33eb":"### How much does a DS earn?\n\nThis is a big question!, it varies demographically alot. As we can See salary for an average DS in US is 3 times more than salary of an average DS in India, this is due to finantial and geopolitical reasons more than skillset or experiance. If you are a DS planning to move to forgin country use this map and choose wisely!!","2da05faa":"### What is the best IDE to work as a DS?\nThis is a question that even i often ponder, my ideal mix is pycharm\/Jupyter Notebook for pure Python work and VSCode for integrated work, As we can see below DS prefers JupyterLab\/Jupyter Notebook more thatn anyother IDE. It makes perfect sense,it helps in doing amazing visualizations and IDE also keeps the document andd the code in smae page reducing the complexity of code, Ideal for tutoiral and code demos!!","4ec54862":"# Lets catagorise the jobs\n\nFrom the above data we can see that few jobs like Data Analyst or MAchine Learning Engineer come under Data Science or related fileds so lets group them and see how many data scence related v\/s data sceince non related job\n\n\n#### Data Scence Related Jobs\n    1. Data Science\n    2. Data Engineer\n    3. Data Analyst\n    4. Business Analyst\n    5. Machine Learning Engineer\n    6. Statistician\n    \n#### Data Scence non Related Jobs\n    1. Currently not employed\n    2. others\n    3. Product\/Project Manager\n    4. DBA\/Database Engineer\n    5. Student\n    6. Software Engineer\n    7. Research Scientist\n    \nAs we can see 35% jobs are not related to data science, lets concentrate into 65% people who successfully got a job in Data Science with following questions,","83093de1":"# Will a university digree help you to land a DS job?\n\nAs we can see in the below charts Most of the DS related and non related jobs require some form of formal education to land a successfull job, As we can see past high school attending university will increase the chance alot and finishing the Bachlors digree will defenitly increase the chance. For jobs like MLE \/ Software Engineers Masters digree dosnt provide much boost in carrer but for Data Scientist adn Reaserch Scientist it sure does!!. To be noted that not only digree but the university you attend, projects you work and skillset you carry are very relevent !!. you will see them in upcoming visualizations.","bb96dd39":"# Which country has the most DS?","94e0047e":"### What are the language generally recomended by DS and how many of programming experiance they have?\n\nAs expected for data scientist highly recomended are Python, R, SQL, Also we can see he need versatile language skills. For A DS it should not matter if the data is in SQL or nonSQL, it should not matter if the production software is in C++ or java. Even though Python and R can be used as core model development language when it comes to real world for he must tunee\/change it to adapt the existing suit of the companies software. So Go on and grab some skill from the below chart if you havent already!!","71cc0bb0":"# Gender vs Jobs\nSince participents in this survey are not uniform we need plot the percentile distribution of jobs with respect to gender.","2427e6e7":"<h1 style=\"background-color:powderblue;\">upcoming updates<\/h1>\n1. Personalised quiz to find which skill you are missing\n2. More and More EDA\n\nNote: If you have any request for any EDA contact me in the chat\n\n<h3 style=\"background-color:red;\">Work in progress: Upvote and support<\/h3>","ac6d45c3":"### What are the libraries highly used by DS?\nFrom the data we fet to know that Scikit learn is the highly sed library, libarires are just tools to reach your goal. My advice is know all master one in each catagory, my favourate pic will by plotly to plot, tensorflow\/pytorch for model development in DL and Scikit for ML and OpenCV for Image processing!!","e09894b6":"### Does job type effect salary?\nFor a beginner in corparte ladder this is a main question, How much my salary hike be? is it a good sum or bad?? Lets look into that data and understand, As expected Data Scientistt, DAta Engineer and MLE has highet paying job comparing to anyother jobs","10adb606":"### What kind of coding platform DS use?\nThis is an important question for a DS, beacause availibility of GPU and other omputational resource will limit perfomance of your model also limit the visualization of huge data, contrary to popular beleaf the data suggests that they use their personal computer\/ laptop more that cloud resources, But always remeber that having a on demand cloud computing platform mmight give you that 1% push you need in leaderboard!!","52ddd36e":"# Questions asked 2020\n\nWe have a file *kaggle_survey_2020_answer_choices.pdf* which contains the details of all the files\n\n","f3dbe2a5":"# Conclusion\n\n![](https:\/\/images2.minutemediacdn.com\/image\/upload\/c_fill,g_auto,h_1248,w_2220\/f_auto,q_auto,w_1100\/v1555360464\/shape\/mentalfloss\/istock_000067177343_small.jpg)\n\n\nGetting a job in covid 19 period might be hard! but dont give up, As you do use ML to solve your job issues. Find and use the Data which course is effective for you, what skill you are missing. Always Data tells a better story than people. All the best!!","f533f615":"<h1 style=\"background-color:powderblue;\"><center>Introduction<\/center><\/h1>\n\nto all DS job aspirants,\n\nThis kaggle notebook is dedicated to people who are looking to either start a carrer in DS or to switch to DS (including me!). As we know the world and the internet is moving data centric and companies need intuitive people to understand and build a DS models. Due to sudden attention drawn to DS field there are alot of prople who are attracted to this and wants to get a good stable job in this field. In this note book we will be analysing howmany peple in kaggle have a DS job and how did they land it!!, so that it will be guide light to your carrer. So lets start"}}