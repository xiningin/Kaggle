{"cell_type":{"32226613":"code","a639adf8":"code","07be59bc":"code","9e37e8bb":"code","bfe02090":"code","eeb2ef5e":"code","17c8f922":"code","5dfb3297":"code","656f7da9":"code","097bcab0":"code","883d4dfc":"code","e32848bc":"code","915f404b":"code","f8e9b479":"code","cbf90ab8":"code","7bcf28cd":"markdown","c04373aa":"markdown","5e189b56":"markdown","4550307b":"markdown","98a467ec":"markdown","c6d5e5e2":"markdown"},"source":{"32226613":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom math import sqrt\nfrom sklearn.metrics import mean_squared_error as mse\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a639adf8":"#Import dataset\ndataset = pd.read_csv('..\/input\/insurance\/insurance.csv')","07be59bc":"#Visualising top 10 records\ndataset.head()","9e37e8bb":"# Basic info of columnsabs\ndataset.info()","bfe02090":"dataset.describe()","eeb2ef5e":"x = dataset.drop(['charges'],axis =1)\ny = dataset.charges.values","17c8f922":"from sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder","5dfb3297":"ct = ColumnTransformer(transformers=[('encoder',OneHotEncoder(),[1,4,5])],remainder='passthrough')\nx = np.array(ct.fit_transform(x)) # train test model accept array data so we have converted our data into array form using numpy","656f7da9":"from sklearn.model_selection import train_test_split","097bcab0":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=0)","883d4dfc":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nx_train = sc.fit_transform(x_train)\nx_test = sc.transform(x_test)","e32848bc":"from sklearn.ensemble import RandomForestRegressor\nregressor = RandomForestRegressor(n_estimators = 10, random_state = 0)\nregressor.fit(x_train, y_train)","915f404b":"y_pred = regressor.predict(x_test)\nnp.set_printoptions(precision=2)\nprint(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))","f8e9b479":"print('Accuracy {:.2f}%'.format(regressor.score(x_test,y_test)*100))","cbf90ab8":"print(\"RMSE valuse for # Random Forest Regression:\", sqrt(mse(y_test, y_pred)))\n","7bcf28cd":"# Random Forest Regression\n","c04373aa":"## Feature Scaling","5e189b56":"## Encoding Categorical Data\n\nChanging the similer string values into numberical values for higher accuracy","4550307b":"## Training Model on training set","98a467ec":"## Model Predictions","c6d5e5e2":"## Accuracy"}}