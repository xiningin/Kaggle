{"cell_type":{"a6dd14fa":"code","6cc696c6":"code","853456ce":"code","ede108ff":"code","27269655":"code","517f1d50":"code","b3028102":"code","9a5c8f05":"code","2e7af7ac":"code","a49d175c":"code","7f8f71f3":"code","ecc320af":"code","0b3b7957":"code","cc521b81":"code","cb556a00":"code","7b3be8e2":"code","389580cf":"code","950ff2cf":"code","2879fbd5":"code","8eaf7d24":"code","237fcaa8":"code","93c9367e":"code","c6c35551":"code","2fab3a5d":"code","2fd5d154":"code","bb1d1cae":"code","8c1d6483":"code","48b2cc92":"code","1bea2c19":"code","09387df7":"code","50dd7e0a":"code","7713a186":"code","85e812ff":"code","f23cfd5f":"code","0b82446e":"code","02706530":"code","edeeb92d":"code","6bd0dbd7":"code","1512262d":"code","958110e1":"code","a6c3fcf2":"code","a17a8009":"code","584124c1":"code","75b084a6":"code","72101a59":"code","20841ec6":"code","52d48ffd":"code","285af63b":"code","7210b4bd":"code","5a1f111e":"code","a2e519f4":"code","a00db162":"code","ded0c19a":"code","e4b7033f":"markdown","427114ba":"markdown","5b5a7ff7":"markdown","062aa260":"markdown","3559df5d":"markdown","1a66015d":"markdown","f1305c1a":"markdown","5df13d75":"markdown","fd6bd555":"markdown","33f4a646":"markdown","543ecd22":"markdown","91caf1b7":"markdown","a52d8ebd":"markdown","b753c525":"markdown","8687e77f":"markdown","7fc386a0":"markdown","39b40039":"markdown","25fa1eb7":"markdown","d365d64f":"markdown","6fd9ba40":"markdown","d6ffecaa":"markdown","3f2f4b3e":"markdown","722bc188":"markdown","97cbd566":"markdown","7f32ec9e":"markdown","17d163de":"markdown"},"source":{"a6dd14fa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# data visulation \nimport matplotlib.pyplot as plt \nimport seaborn as sns\nsns.set_style(\"whitegrid\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\n# Use world map \nimport plotly.express as px \nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\nplt.style.use(\"seaborn-notebook\")\n\n# \u0130gnore code warnings\nimport warnings\nwarnings.filterwarnings(\"ignore\")","6cc696c6":"data_before_2021 = pd.read_csv(\"\/kaggle\/input\/world-happiness-report-2021\/world-happiness-report.csv\") # data before 2021\ndata_2021 = pd.read_csv(\"\/kaggle\/input\/world-happiness-report-2021\/world-happiness-report-2021.csv\") # 2021 data","853456ce":"data_before_2021.head().style.background_gradient()","ede108ff":"data_2021.head().style.background_gradient()","27269655":"def above_zero(val):\n    color = 'green' if val > 0 else 'red'\n    return 'color: %s' % color\ndata_before_2021.describe().style.applymap(above_zero)","517f1d50":"data_2021.describe().style.applymap(above_zero)","b3028102":"data_before_2021.info() # Info about data before 2021","9a5c8f05":"data_2021.info() # Info about data in 2021","2e7af7ac":"data_2021[\"Country name\"].unique()","a49d175c":"sns.countplot(data_2021[\"Regional indicator\"])\nplt.xticks(rotation = 75)\nplt.show()","7f8f71f3":"# Distribution features list 1\nlist_features = [\"Social support\", \"Freedom to make life choices\", \"Generosity\", \"Perceptions of corruption\"]\nsns.boxplot(data = data_2021.loc[:, list_features], orient = \"h\", palette = \"Set3\")\nplt.show()","ecc320af":"# distribution of feature set 2\nlist_features = [\"Ladder score\", \"Logged GDP per capita\"]\nsns.boxplot(data = data_2021.loc[:, list_features], orient = \"h\", palette = \"Set1\")\nplt.show()","0b3b7957":"# distribution of feature set 3\nlist_features = [\"Healthy life expectancy\"]\nsns.boxplot(data = data_2021.loc[:, list_features], orient = \"h\", palette = \"Set2\")\nplt.show()","cc521b81":"print(\"Unhappiest Countries Score\",data_2021[\"Ladder score\"].min())\nprint(\"Happinest Countries Score\",data_2021[\"Ladder score\"].max())\nprint(\"Overage Happienes Score\",data_2021[\"Ladder score\"].mean())","cb556a00":"overage_countries_score = data_2021[\"Ladder score\"].mean()\ndata_2021_happinest = data_2021[data_2021.loc[:,\"Ladder score\"]>overage_countries_score][:5]\nsns.barplot(x=\"Ladder score\",y=\"Country name\",data=data_2021_happinest,palette=\"rocket\")\nsns.cubehelix_palette(start=.5, rot=-.75, as_cmap=True)\nplt.title(\"Happinest Countries\")\nplt.xlabel(\"Happiness Score\")\nplt.ylabel(\"Country\")\nplt.show()","7b3be8e2":"overage_countries_score = data_2021[\"Ladder score\"].mean()\ndata_2021_happinest = data_2021[data_2021.loc[:,\"Ladder score\"]<overage_countries_score].sort_values(by=\"Ladder score\",ascending=True)[:5][::-1]\nsns.barplot(x=\"Ladder score\",y=\"Country name\",data=data_2021_happinest,palette=\"mako\")\nsns.cubehelix_palette(start=.5, rot=-.75, as_cmap=True)\nplt.title(\"Unhappinest Countries\")\nplt.xlabel(\"Happiness Score\")\nplt.ylabel(\"Country\")\nplt.show()","389580cf":"plt.figure(figsize = (15,8))\nsns.kdeplot(data_2021[\"Ladder score\"], hue = data_2021[\"Regional indicator\"], fill = True, linewidth = 2)\nplt.axvline(data_2021[\"Ladder score\"].mean(), c = \"black\")\nplt.title(\"Ladder Score Distribution by Regional Indicator\")\nplt.show()","950ff2cf":"# Happinest three regions\nj=1\nfor i in data_2021[\"Regional indicator\"].sort_values(ascending=False).unique()[:3]:\n    print(str(j)+\".region=\"+i)\n    j = j + 1 ","2879fbd5":"# Unhappinest three regions\nj=1\nfor i in data_2021[\"Regional indicator\"].sort_values(ascending=True).unique()[:3][::-1]:\n    print(str(j)+\".region=\"+i)\n    j = j + 1 ","8eaf7d24":"compared_countries_before_2021 = data_before_2021.select_dtypes(include = [\"float64\", \"int64\"])\nsns.pairplot(compared_countries_before_2021);","237fcaa8":"compared_countries_2021 = data_2021.select_dtypes(include = [\"float64\", \"int64\"])\nsns.pairplot(compared_countries_2021);","93c9367e":"#  The Most life ladder countries year by year \ndata_before_2021.groupby(\"year\")[[\"Country name\",\"Life Ladder\"]].max()","c6c35551":"#  The Less life ladder countries year by year\ndata_before_2021.groupby(\"year\")[[\"Country name\",\"Life Ladder\"]].min()","2fab3a5d":"fig = px.choropleth(data_before_2021.sort_values(\"year\"),\n                    locations = \"Country name\",\n                    color = \"Life Ladder\",\n                    locationmode = \"country names\",\n                    animation_frame = \"year\")\nfig.update_layout(title = \"Life Ladder Comparison by Countries\")\nfig.show()","2fd5d154":"df2021_g = data_2021[(data_2021.loc[:, \"Generosity\"] > 0.4) | (data_2021.loc[:, \"Generosity\"] < -0.2)]\nsns.barplot(x = \"Generosity\", y = \"Country name\", data = df2021_g, palette = \"coolwarm\")\nplt.title(\"Most Generous and Most Ungenerous Countries in 2021\")\nplt.show()","bb1d1cae":"print(data_2021.loc[:, \"Generosity\"].mean()) # Average Country score\nprint(data_2021.loc[:, \"Generosity\"].max()) # Most Country score\nprint(data_2021.loc[:, \"Generosity\"].min()) # Less Country score","8c1d6483":"data_2021[data_2021.loc[:, \"Generosity\"]>0.5][\"Country name\"].max() # Most Generous Country","48b2cc92":"data_2021[data_2021.loc[:, \"Generosity\"]<0.5][\"Country name\"].min() # Less Generous Country","1bea2c19":"fig = px.choropleth(data_before_2021.sort_values(\"year\"),\n                   locations = \"Country name\",\n                   color = \"Generosity\",\n                   locationmode = \"country names\",\n                   animation_frame = \"year\")\nfig.update_layout(title = \"Generosity Comparison by Countries\")\nfig.show()","09387df7":"# The less generosity year by year\ndata_before_2021.groupby(\"year\")[[\"Country name\",\"Generosity\",\"year\"]].min().head()","50dd7e0a":"# The most generosity year by year\ndata_before_2021.groupby(\"year\")[[\"Country name\",\"Generosity\",\"year\"]].max().head()","7713a186":"sns.swarmplot(x=\"Regional indicator\",y=\"Generosity\",data=data_2021)\nplt.xticks(rotation = 75)\nplt.title(\"The Generous distribution in 2021 according to Regional Indicator\")\nplt.show()","85e812ff":"# The less Generosity Countries by Regional indicator\ndata_2021[[\"Regional indicator\",\"Generosity\"]].sort_values(by=\"Generosity\",ascending=False)[:10]","f23cfd5f":"# The most Generosity Countries by Regional indicator\ndata_2021[[\"Regional indicator\",\"Generosity\"]].sort_values(by=\"Generosity\",ascending=True)[:10]","0b82446e":"# With another data we add to data so as to population count\npop = pd.read_csv(\"\/kaggle\/input\/world-population-19602018\/population_total_long.csv\")\npop.head()","02706530":"# Split up prior to 2021 and 2021 data \ncountry_continent = dict()\nfor i in range(len(data_2021)):\n     country_continent[data_2021[\"Country name\"][i]] = data_2021[\"Regional indicator\"][i]\nall_countries = data_before_2021[\"Country name\"].value_counts().reset_index()[\"index\"].to_list()\nall_countries_2021 = data_2021[\"Country name\"].value_counts().reset_index()[\"index\"].to_list()\nall_countries_not_2021 = [i for i in all_countries if i not in all_countries_2021]","edeeb92d":"# 15 Country add to data \nregion = []\nfor i in range(len(data_before_2021)):\n    if data_before_2021['Country name'][i] == 'Angola':\n        region.append(\"Sub-Saharan Africa\")\n    elif data_before_2021['Country name'][i] == 'Belize':\n        region.append(\"Latin America and Caribbean\")\n    elif data_before_2021['Country name'][i] == 'Congo (Kinshasa)':\n        region.append(\"Sub-Saharan Africa\")\n    elif data_before_2021['Country name'][i] == 'Syria':\n        region.append(\"Middle East and North Africa\")\n    elif data_before_2021['Country name'][i] == 'Trinidad and Tobago':\n        region.append(\"Latin America and Caribbean\")\n    elif data_before_2021['Country name'][i] == 'Cuba':\n        region.append(\"Latin America and Caribbean\")\n    elif data_before_2021['Country name'][i] == 'Qatar':\n        region.append(\"Middle East and North Africa\")\n    elif data_before_2021['Country name'][i] == 'Sudan':\n        region.append(\"Middle East and North Africa\")\n    elif data_before_2021['Country name'][i] == 'Central African Republic':\n        region.append(\"Sub-Saharan Africa\")\n    elif data_before_2021['Country name'][i] == 'Djibouti':\n        region.append(\"Sub-Saharan Africa\")\n    elif data_before_2021['Country name'][i] == 'Somaliland region':\n        region.append(\"Sub-Saharan Africa\")\n    elif data_before_2021['Country name'][i] == 'South Sudan':\n        region.append(\"Middle East and North Africa\")\n    elif data_before_2021['Country name'][i] == 'Somalia':\n        region.append(\"Sub-Saharan Africa\")\n    elif data_before_2021['Country name'][i] == 'Oman':\n        region.append(\"Middle East and North Africa\")\n    elif data_before_2021['Country name'][i] == 'Guyana':\n        region.append(\"Latin America and Caribbean\")\n    elif data_before_2021['Country name'][i] == 'Guyana':\n        region.append(\"Latin America and Caribbean\")\n    elif data_before_2021['Country name'][i] == 'Bhutan':\n        region.append(\"South Asia\")\n    elif data_before_2021['Country name'][i] == 'Suriname':\n        region.append(\"Latin America and Caribbean\")\n    else:\n        region.append(country_continent[data_before_2021['Country name'][i]])\n        \ndata_before_2021[\"region\"] = region\ndata_before_2021.head()","6bd0dbd7":"all_countries = data_before_2021[\"Country name\"].value_counts().reset_index()[\"index\"].tolist()\nall_countries_pop = pop[\"Country Name\"].value_counts().reset_index()[\"index\"].tolist()\n\ndel_cou = []\nfor x in all_countries:\n    if x not in all_countries_pop:\n        del_cou.append(x)\ndel_cou","1512262d":"# Before 2021 data learn attributes \ndata_before_2021.columns","958110e1":"# Population attributes take in order to compared Log GDP per capita\npop_df = data_before_2021[['Log GDP per capita', 'Life Ladder', 'Country name', 'year', 'Social support', 'Healthy life expectancy at birth',\n       'Freedom to make life choices', 'Generosity',\"region\",'Perceptions of corruption']].copy()\npop_df.head()","a6c3fcf2":"pop_df = pop_df[~pop_df[\"Country name\"].isin(del_cou)]\npop_df = pop_df[~pop_df.year.isin([2006,2005,2007,2018,2019,2020,2021])]\npop_dict = {x:{} for x in range(2008,2018)}\nfor i in range(len(pop)):\n    if(pop[\"Year\"][i] in range(2008,2018)):\n        pop_dict[pop[\"Year\"][i]][pop[\"Country Name\"][i]] = pop[\"Count\"][i]","a17a8009":"population = []\nfor i in pop_df.index:\n    population.append(pop_dict[pop_df[\"year\"][i]][pop_df[\"Country name\"][i]])\npop_df[\"population\"] = population\npop_df.head()","584124c1":"# Population Life Ladder and Log GDP per capita Comparison by Countries via Regions for each Year\nfig = px.scatter(pop_df, \n                 x = \"Log GDP per capita\",\n                 y = \"Life Ladder\",\n                 animation_frame = \"year\",\n                 animation_group = \"Country name\",\n                 size = \"population\",\n                 template = \"plotly_white\",\n                 color = \"region\", \n                 hover_name = \"Country name\", \n                 size_max = 60)\nfig.update_layout(title = \"Life Ladder and Log GDP per capita Comparison by Countries via Regions for each Year\")\nfig.show()","75b084a6":"# As increasing Population,it is decreasing effect on Life Ladder \n# China have most population\npop_df.groupby(\"population\")[[\"Country name\",\"Life Ladder\",\"year\"]].max().sort_values(by=\"population\",ascending=False).head()","72101a59":"# As decreasing Population,it is increasing effect on Life Ladder \n# Iceland have most population\npop_df.groupby(\"population\")[[\"Country name\",\"Life Ladder\",\"year\"]].min().sort_values(by=\"population\",ascending=True).head()","20841ec6":"# The Countries decribes freedom affect on happiness \nfig = px.scatter(pop_df, \n                 x = \"Freedom to make life choices\",\n                 y = \"Life Ladder\",\n                 animation_frame = \"year\",\n                 animation_group = \"Country name\",\n                 size = \"population\",\n                 template = \"plotly_dark\",\n                 color = \"region\", \n                 hover_name = \"Country name\", \n                 size_max = 60)\nfig.update_layout(title = \"Life Ladder and Freedom Comparison by Countries via Regions for each Year\")\nfig.show()","52d48ffd":"pop_df.groupby(by=\"Freedom to make life choices\").max().sort_values(by=\"Freedom to make life choices\",ascending=False)[[\"Life Ladder\",\"year\",\"Country name\",\"population\"]].head(15)","285af63b":"pop_df.groupby(by=\"Freedom to make life choices\").max().sort_values(by=\"Freedom to make life choices\",ascending=True)[[\"Life Ladder\",\"year\",\"Country name\",\"population\"]].head(15)","7210b4bd":"fig = px.scatter(pop_df, \n                 x = \"Perceptions of corruption\",\n                 y = \"Life Ladder\",\n                 animation_frame = \"year\",\n                 animation_group = \"Country name\",\n                 size = \"population\",\n                 color = \"region\", \n                 hover_name = \"Country name\", \n                 size_max = 60)\nfig.update_layout(title = \"Life Ladder and Corruption Comparison by Countries via Regions for each Year\")\nfig.show()","5a1f111e":"# As incresing rate of corruption, Life Ladder rate is decreasing \npop_df.groupby(by=\"Perceptions of corruption\").max().sort_values(by=\"Perceptions of corruption\",ascending=False)[[\"Life Ladder\",\"year\",\"Country name\",\"population\"]].head(15)","a2e519f4":"pop_df.groupby(by=\"Perceptions of corruption\").max().sort_values(by=\"Perceptions of corruption\",ascending=True)[[\"Life Ladder\",\"year\",\"Country name\",\"population\"]].head(15)","a00db162":"# Rigth proportion Log DGP per capita with Life Ladder\n# Rigth proportion Helhtly with Life Ladder\n# Rigth proportion Social support with Life Ladder\nsns.heatmap(data_before_2021.corr(),annot=True,fmt=\".2f\",linewidth=.7)\nplt.title(\"Relationship Between Features \")\nplt.show()","ded0c19a":"sns.clustermap(data_before_2021.corr(), center = 0, cmap = \"vlag\", dendrogram_ratio = (0.1, 0.2), annot = True, linewidths = .7, figsize=(10,10))\nplt.show()","e4b7033f":"<a id=\"seven\"><\/a>\n## Ladder Score Compared by Countries","427114ba":"<a id=\"2021-1\"><\/a>\n### Unique Countries","5b5a7ff7":"<a id=\"two\"><\/a>\n## Data Content\n* The happiness scores and rankings use data from the Gallup World Poll.\n    * Gallup World Poll: In 2005, Gallup began its World Poll, which continually surveys citizens in 160 countries, representing more than 98% of the world's adult population. The Gallup World Poll consists of more than 100 global questions as well as region-specific items.\n* The columns following the happiness score estimate the extent to which each of six factors \u2013 economic production, social support, life expectancy, freedom, absence of corruption, and generosity \u2013 contribute to making life evaluations higher in each country than they are in Dystopia, a hypothetical country that has values equal to the world\u2019s lowest national averages for each of the six factors.\n* **Ladder score**: Happiness score or subjective well-being. This is the national average response to the question of life evaluations.\n* **Logged GDP per capita**: The GDP-per-capita time series from 2019 to 2020 using countryspecific forecasts of real GDP growth in 2020.\n* **Social support**: Social support refers to assistance or support provided by members of social networks to an individual.\n* **Healthy life expectancy**: Healthy life expectancy is the average life in good health - that is to say without irreversible limitation of activity in daily life or incapacities - of a fictitious generation subject to the conditions of mortality and morbidity prevailing that year.\n* **Freedom to make life choices**: Freedom to make life choices is the national average of binary responses to the GWP question \u201cAre you satisfied or dissatisfied with your freedom to choose what you do with your life?\u201d ... It is defined as the average of laughter and enjoyment for other waves where the happiness question was not asked\n* **Generosity**: Generosity is the residual of regressing national average of response to the GWP question \u201cHave you donated money to a charity in the past month?\u201d on GDP per capita.\n* **Perceptions of corruption**: The measure is the national average of the survey responses to two questions in the GWP: \u201cIs corruption widespread throughout the government or not\u201d and \u201cIs corruption widespread within businesses or not?\u201d\n* **Ladder score in Dystopia**: It has values equal to the world\u2019s lowest national averages.\n* **Perceptions of corruption**: The measure is the national average of the survey responses to two questions in the GWP: \u201cIs corruption widespread throughout the government or not\u201d and \u201cIs corruption widespread within businesses or not?\u201d\n* **Ladder score in Dystopia**: It has values equal to the world\u2019s lowest national averages. Dystopia as a benchmark against which to compare contributions from each of the six factors. Dystopia is an imaginary country that has the world's least-happy people. ... Since life would be very unpleasant in a country with the world's lowest incomes, lowest life expectancy, lowest generosity, most corruption, least freedom, and least social support, it is referred to as \u201cDystopia,\u201d in contrast to Utopia\n* World Happiness Report Official Website: [Click to Website](https:\/\/worldhappiness.report\/)","062aa260":"<a id=\"five\"><\/a>\n## Happiest and Unhappiest Countries in 2021","3559df5d":"<a id=\"twelve\"><\/a>\n## Relationship between Happiness and Freedom","1a66015d":"## Explain of details data","f1305c1a":"<a id=\"six\"><\/a>\n## Regional Happiness Distribution","5df13d75":"<a id=\"eleven\"><\/a>\n## Relationship between Happiness and Income","fd6bd555":"<a id=\"ten\"><\/a>\n## The Generous distribution in 2021 according to Regional Indicator","33f4a646":"<a id=\"eight\"><\/a>\n## Most Generous and Less Generous Countries","543ecd22":"# Make Data Analysis on World Happiness","91caf1b7":"<a id=\"one\"><\/a>\n## Python Libraries\n* In this section, we import used libraries during this kernel.","a52d8ebd":"### Read data","b753c525":"<a id=\"nine\"><\/a>\n## The Generous distribution by using map view","8687e77f":"<a id=\"four\"><\/a>\n## Report distribution in 2021\n* [Unique Countries](#2021-1)\n* [Count Regional Indicator](#2021-2)\n* [Distribution of Remaining Features](#2021-3)","7fc386a0":"<a id=\"2021-2\"><\/a>\n### Count Regional Indicator","39b40039":"<a id=\"thirteen\"><\/a>\n## Relationship Between Happiness and Corruption","25fa1eb7":"#### West Europe Country happiness more than East Country","d365d64f":"<a id=\"fourteen\"><\/a>\n## Relationship Between Features","6fd9ba40":"<a id=\"2021-3\"><\/a>\n### Distribution of Remaining Features","d6ffecaa":"### Show Data","3f2f4b3e":"<a id=\"three\"><\/a>\n## Analysis Data","722bc188":"<a id=\"fifteen\"><\/a>\n# Conclusions\n1. The Happinest County is Finland.\n2. The Unhappinest Country is Afghanistan\n3. The happinest region is West Europe\n4. The unhappinest region is East Asia\n5. There is no relationship between healthy and generosity\n6. Rigth proportion Log DGP per capita with Life Ladder\n7. Rigth proportion Helhtly with Life Ladder\n8. Rigth proportion Social support with Life Ladder\n9. As increasing Population,it is decreasing effect on Life Ladder\n10. As incresing rate of corruption, Life Ladder rate is decreasing ","97cbd566":"## Introduction\n* The World Happiness Report is a landmark survey of the state of global happiness.\n* The report continues to gain global recognition as governments, organizations and civil society increasingly use happiness indicators to inform their policy-making decisions.\n* Leading experts across fields \u2013 economics, psychology, survey analysis, national statistics, health, public policy and more \u2013 describe how measurements of well-being can be used effectively to assess the progress of nations.\n* The reports review the state of happiness in the world today and show how the new science of happiness explains personal and national variations in happiness.\n\n![mutluluk raporu](https:\/\/ichef.bbci.co.uk\/news\/800\/cpsprodpb\/1344B\/production\/_117632987_mediaitem117632986.jpg)","7f32ec9e":"## Info about of data","17d163de":"# Analysis Context \n1. [Python Libraries](#one)\n2. [Data Content](#two)\n3. [Analysis Data](#three)\n4. [Report distribution in 2021](#four)\n5. [Happiest and Unhappiest Countries in 2021](#five)\n6. [Regional Happiness Distribution](#six)\n7. [Ladder Score Compared by Countries](#seven)\n8. [Most Generous and Less Generous Countries](#eight)\n9. [The Generous distribution by using map view](#nine)\n10. [The Generous distribution in 2021 according to Regional Indicator](#ten)\n11. [Relationship between Happiness and Income](#eleven)\n12. [Relationship between Happiness and Freedom](#twelve)\n13. [Relationship Between Happiness and Corruption](#thirteen)\n14. [Relationship Between Features](#fourteen)\n15. [Conclusions](#fifteen)"}}