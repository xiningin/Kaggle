{"cell_type":{"32aa7c40":"code","e6dfa7bd":"code","f4529c38":"code","3e3988bd":"code","be26ca36":"code","98c13911":"code","e80f059b":"code","55e063cb":"code","ad37b2c6":"code","191e3694":"code","4dca18da":"code","b49cf4c4":"code","7ee20845":"code","7dae7c08":"markdown","8bceb6f7":"markdown","a8c432a9":"markdown"},"source":{"32aa7c40":"import pandas as pd\nimport numpy as np\nimport missingno\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder\nfrom catboost import CatBoostClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error, mean_squared_log_error\nfrom sklearn.model_selection import train_test_split,KFold, GroupKFold, StratifiedKFold\nimport warnings\n\nwarnings.filterwarnings(\"ignore\")","e6dfa7bd":"df = pd.read_csv(\"..\/input\/tabular-playground-series-may-2021\/train.csv\")\ntest = pd.read_csv(\"..\/input\/tabular-playground-series-may-2021\/test.csv\")","f4529c38":"df.head()","3e3988bd":"df['target'].value_counts()","be26ca36":"le = LabelEncoder()\ndf['target'] = le.fit_transform(df['target'])","98c13911":"df.info()","e80f059b":"df.describe()","55e063cb":"df.columns","ad37b2c6":"cols = list(df.columns)\ncols.remove(\"target\")","191e3694":"test_preds = None\ntrain_rmse = 0\nval_rmse = 0\nn_splits = 10\n\nkf = KFold(n_splits = n_splits , shuffle = True , random_state = 42)\nfor fold, (tr_index , val_index) in enumerate(kf.split(df[cols].values , df['target'].values)):\n    \n    print(\"-\" * 50)\n    print(f\"Fold {fold + 1}\")\n    \n    x_train,x_val = df[cols].values[tr_index] , df[cols].values[val_index]\n    y_train,y_val = df['target'].values[tr_index] , df['target'].values[val_index]\n        \n    eval_set = [(x_val, y_val)]\n    \n    model = CatBoostClassifier(depth=4,\n            max_ctr_complexity=15,\n            iterations=10000,\n            od_wait=1000, od_type='Iter',\n            learning_rate=0.01,\n            min_data_in_leaf=1,\n            use_best_model=True,\n            loss_function='MultiClass')\n    model.fit(x_train, y_train, eval_set = eval_set, verbose = 1000)\n    \n    train_preds = model.predict(x_train)\n    train_rmse += mean_squared_error(y_train ,train_preds , squared = False)\n    print(\"Training RMSE : \" , mean_squared_error(y_train ,train_preds , squared = False))\n    \n    val_preds = model.predict(x_val)\n    val_rmse += mean_squared_error(y_val , val_preds , squared = False)\n    print(\"Validation RMSE : \" , mean_squared_error(y_val , val_preds , squared = False))\n    \n    if test_preds is None:\n        test_preds = model.predict_proba(test[cols].values)\n    else:\n        test_preds += model.predict_proba(test[cols].values)\n\nprint(\"-\" * 50)\nprint(\"Average Training RMSE : \" , train_rmse \/ n_splits)\nprint(\"Average Validation RMSE : \" , val_rmse \/ n_splits)\n\ntest_preds \/= n_splits","4dca18da":"test_preds","b49cf4c4":"sub = pd.read_csv(\"..\/input\/tabular-playground-series-may-2021\/sample_submission.csv\")\nsub['Class_1']=test_preds[:,0]\nsub['Class_2']=test_preds[:,1]\nsub['Class_3']=test_preds[:,2]\nsub['Class_4']=test_preds[:,3]\nsub.head()","7ee20845":"sub.to_csv(\"CatBoost.csv\",index=False)","7dae7c08":"# Importing Data","8bceb6f7":"# Training","a8c432a9":"# Importing Packages"}}