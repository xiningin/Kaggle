{"cell_type":{"aabf46a9":"code","a059e924":"code","2f1b1d49":"code","1924d273":"code","619b9d8e":"code","e6bfc5fa":"code","1b38bad7":"code","47945eba":"code","d59fb90f":"code","97cae81b":"markdown","171bbc5c":"markdown","49f447bb":"markdown","56118c09":"markdown","1a72e89a":"markdown","ce7b0f81":"markdown","511fa8b9":"markdown","f10f6cdf":"markdown","28efcd1e":"markdown"},"source":{"aabf46a9":"import pandas as pd\n\nfrom learntools.advanced_pandas.renaming_and_combining import *\n\npd.set_option('max_rows', 5)\nreviews = pd.read_csv(\"..\/input\/wine-reviews\/winemag-data-130k-v2.csv\", index_col=0)","a059e924":"check_q1(pd.DataFrame())","2f1b1d49":"reviews.head()","1924d273":"# Your code here\ndf = reviews.rename(columns={'region_1': 'region', 'region_2': 'locale'})\nprint(df)\nprint(check_q1(df))","619b9d8e":"# Your code here\ndf = reviews.rename_axis(\"wines\", axis=\"rows\")\nprint(df)\nprint(check_q2(df))","e6bfc5fa":"gaming_products = pd.read_csv(\"..\/input\/things-on-reddit\/top-things\/top-things\/reddits\/g\/gaming.csv\")\ngaming_products['subreddit'] = \"r\/gaming\"\nmovie_products = pd.read_csv(\"..\/input\/things-on-reddit\/top-things\/top-things\/reddits\/m\/movies.csv\")\nmovie_products['subreddit'] = \"r\/movies\"","1b38bad7":"# Your code here\ndf = pd.concat([gaming_products, movie_products])\nprint(df)\nprint(check_q3(df))","47945eba":"powerlifting_meets = pd.read_csv(\"..\/input\/powerlifting-database\/meets.csv\")\npowerlifting_competitors = pd.read_csv(\"..\/input\/powerlifting-database\/openpowerlifting.csv\")","d59fb90f":"# Your code here\ndf = powerlifting_meets.set_index(\"MeetID\").join(powerlifting_competitors.set_index(\"MeetID\"))\nprint(df)\nprint(check_q4(df))","97cae81b":"If you get stuck, **use the `answer_qN` function to see the code with the correct answer.**\n\nFor the first set of questions, running the `check_qN` on the correct answer returns `True`.\n\nFor the second set of questions, using this function to check a correct answer will present an informative graph!","171bbc5c":"# Exercises\n\nLook at your data by running the cell below:","49f447bb":"# Keep going\n[**Continue to the method chaining workbook**](https:\/\/www.kaggle.com\/kernels\/fork\/605139).","56118c09":"**Exercise 1**: `region_1` and `region_2` are pretty uninformative names for locale columns in the dataset. Rename these columns to `region` and `locale`.","1a72e89a":"**Exercise 3**: The [Things on Reddit](https:\/\/www.kaggle.com\/residentmario\/things-on-reddit\/data) dataset includes product links from a selection of top-ranked forums (\"subreddits\") on Reddit.com. Create a `DataFrame` of products mentioned on *either* subreddit. Use the following data:","ce7b0f81":"# Checking Answers\n\n**Check your answers in each exercise using the  `check_qN` function** (replacing `N` with the number of the exercise). For example here's how you would check an incorrect answer to exercise 1:","511fa8b9":"**Exercise 2**: Set the index name in the dataset to `wines`.","f10f6cdf":"# Renaming and combining workbook\n\n## Introduction\n\nThis is the worbook part of the \"Renaming and combining\" section of the Advanced Pandas tutorial. For the reference section, click [here](https:\/\/www.kaggle.com\/residentmario\/renaming-and-combining-reference).\n\nRenaming is covered in its own section in the [\"Essential Basic Functionality\"](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/basics.html#renaming-mapping-labels) section of the extensive official documentation. Combining is covered by the [\"Merge, join, concatenate\"](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/merging.html) section there.","28efcd1e":"**Exercise 4**: The [Powerlifting Database](https:\/\/www.kaggle.com\/open-powerlifting\/powerlifting-database) dataset on Kaggle includes one CSV table for powerlifting meets and a separate one for powerlifting competitors. Both tables include references to a `MeetID`, a unique key for each meet (competition) included in the database. Using this, generate a dataset combining the two tables into one. Use the following data:"}}