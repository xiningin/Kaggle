{"cell_type":{"538186d4":"code","56625111":"code","21521b19":"code","63ea8324":"code","0592ff1b":"code","9b228da4":"code","85ffda61":"code","e9365ccd":"code","5ec56d75":"code","5aabd7b6":"code","4854e2b3":"code","81a28101":"code","a05edd55":"code","be079a2c":"code","ef0e698c":"code","22e02c7e":"code","34a84f8e":"code","8faac0ba":"code","41376acd":"markdown","fdb446f5":"markdown","710c1e6d":"markdown","add6bb43":"markdown","77915b07":"markdown","91d026ea":"markdown","b608172d":"markdown","1709343b":"markdown","f78a9f6b":"markdown","43438fe7":"markdown","2b707e6d":"markdown","b29815f2":"markdown","742b504b":"markdown","7823ed69":"markdown","1088ae09":"markdown","619aa362":"markdown","d9e0d4c0":"markdown","f5316746":"markdown","1bcba549":"markdown","3031216d":"markdown","bced33d5":"markdown","69296f86":"markdown","5eb7b69f":"markdown","8316384b":"markdown","6ecd12d9":"markdown","4661793e":"markdown","677b470a":"markdown","bb750e10":"markdown","459a9c10":"markdown","1b86f452":"markdown","e70fdad7":"markdown","d7822acc":"markdown","4d35bb3b":"markdown","c95f3155":"markdown","acf58c82":"markdown","d17d8048":"markdown","0d6a8428":"markdown","1fc01c0a":"markdown","d91c6e7a":"markdown","cf75bf6e":"markdown","cfeca808":"markdown"},"source":{"538186d4":"import tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers","56625111":"# 3\uac1c \uce35\uc758 Sequential \ubaa8\ub378\uc744 \uc815\uc758\ud569\ub2c8\ub2e4\nmodel = keras.Sequential(\n    [\n        layers.Dense(2, activation=\"relu\", name=\"layer1\"),\n        layers.Dense(3, activation=\"relu\", name=\"layer2\"),\n        layers.Dense(4, name=\"layer3\"),\n    ]\n)\n# \ud3c9\uac00 \uc785\ub825 \uc704\uc5d0\uc11c \ubaa8\ub378\uc744 \ud638\ucd9c\ud569\ub2c8\ub2e4\nx = tf.ones((3, 3))\ny = model(x)","21521b19":"# 3\uac1c \uce35\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4\nlayer1 = layers.Dense(2, activation=\"relu\", name=\"layer1\")\nlayer2 = layers.Dense(3, activation=\"relu\", name=\"layer2\")\nlayer3 = layers.Dense(4, name=\"layer3\")\n\n# \ud3c9\uac00 \uc785\ub825 \uc704\uc5d0\uc11c \ubaa8\ub378\uc744 \ud638\ucd9c\ud569\ub2c8\ub2e4\nx = tf.ones((3, 3))\ny = layer3(layer2(layer1(x)))","63ea8324":"model = keras.Sequential(\n    [\n        layers.Dense(2, activation=\"relu\"),\n        layers.Dense(3, activation=\"relu\"),\n        layers.Dense(4),\n    ]\n)","0592ff1b":"model.layers","9b228da4":"model = keras.Sequential()\nmodel.add(layers.Dense(2, activation=\"relu\"))\nmodel.add(layers.Dense(3, activation=\"relu\"))\nmodel.add(layers.Dense(4))","85ffda61":"model.pop()\nprint(len(model.layers)) # 2","e9365ccd":"model = keras.Sequential(name=\"my_sequential\")\nmodel.add(layers.Dense(2, activation=\"relu\", name=\"layer1\"))\nmodel.add(layers.Dense(3, activation=\"relu\", name=\"layer2\"))\nmodel.add(layers.Dense(4, name=\"layer3\"))","5ec56d75":"layer = layers.Dense(3)\nlayer.weights # \ube44\uc5b4\uc788\uc2b5\ub2c8\ub2e4","5aabd7b6":"# \ud3c9\uac00 \uc785\ub825 \uc704\uc5d0\uc11c \uce35\uc744 \ud638\ucd9c\ud569\ub2c8\ub2e4\nx = tf.ones((1, 4))\ny = layer(x)\nlayer.weights # \uc774\uc81c (4, 3)\uacfc (3,) \ubaa8\uc591\uc758 \uac00\uc911\uce58\ub97c \uac00\uc9d1\ub2c8\ub2e4","4854e2b3":"model = keras.Sequential(\n    [\n        layers.Dense(2, activation=\"relu\"),\n        layers.Dense(3, activation=\"relu\"),\n        layers.Dense(4),\n    ]\n) # \uc774 \ub2e8\uacc4\uc5d0\uc11c\ub294 \uac00\uc911\uce58\uac00 \uc5c6\uc2b5\ub2c8\ub2e4!\n\n# \uc774 \uc2dc\uc810\uc5d0, \uc774\uac83\uc740 \uc548\ub429\ub2c8\ub2e4:\n# model.weights\n\n# \uc774\uac83 \ub610\ud55c \uc548\ub429\ub2c8\ub2e4:\n# model.summary()\n\n# \ud3c9\uac00 \uc785\ub825 \uc704\uc5d0\uc11c \ubaa8\ub378\uc744 \ud638\ucd9c\ud569\ub2c8\ub2e4\nx = tf.ones((1, 4))\ny = model(x)\nprint(\"Number of weights after calling the model:\", len(model.weights)) # 6","81a28101":"model.summary()","a05edd55":"model = keras.Sequential()\nmodel.add(keras.Input(shape=(4,)))\nmodel.add(layers.Dense(2, activation=\"relu\"))\n\nmodel.summary()","be079a2c":"model.layers","ef0e698c":"model = keras.Sequential()\nmodel.add(layers.Dense(2, activation=\"relu\", input_shape=(4,)))\n\nmodel.summary()","22e02c7e":"model = keras.Sequential()\nmodel.add(keras.Input(shape=(250, 250, 3))) # 250x250 RGB \uc774\ubbf8\uc9c0\ub4e4\nmodel.add(layers.Conv2D(32, 5, strides=2, activation=\"relu\"))\nmodel.add(layers.Conv2D(32, 3, activation=\"relu\"))\nmodel.add(layers.MaxPooling2D(3))\n\n# \uc774 \uc2dc\uc810\uc5d0\uc11c \ud604\uc7ac \ucd9c\ub825 \ubaa8\uc591\uc744 \ucd94\uce21\ud560 \uc218 \uc788\uaca0\uc2b5\ub2c8\uae4c? \uc544\ub9c8 \uc544\ub2d0 \uac81\ub2c8\ub2e4.\n# \uadf8\ub0e5 \ucd9c\ub825\ud574\ubd05\uc2dc\ub2e4:\nmodel.summary()\n\n# \uc815\ub2f5\uc740: (40, 40, 32), \uadf8\ub798\uc11c \uc6b0\ub9ac\ub294 \ub2e4\uc6b4\uc0d8\ud50c\ub9c1\uc744 \uc720\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4...\n\nmodel.add(layers.Conv2D(32, 3, activation=\"relu\"))\nmodel.add(layers.Conv2D(32, 3, activation=\"relu\"))\nmodel.add(layers.MaxPooling2D(3))\nmodel.add(layers.Conv2D(32, 3, activation=\"relu\"))\nmodel.add(layers.Conv2D(32, 3, activation=\"relu\"))\nmodel.add(layers.MaxPooling2D(2))\n\n# \uadf8\ub9ac\uace0 \uc9c0\uae08\uc740?\nmodel.summary()\n\n# \uc774\uc81c 4x4 \ud2b9\uc9d5 \ub300\uc751\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4, \uc804\uc5ed\uc801\uc778 max pooling\uc744 \uc801\uc6a9\ud560 \uc2dc\uac04\uc785\ub2c8\ub2e4.\nmodel.add(layers.GlobalMaxPooling2D())\n\n# \ub9c8\uc9c0\ub9c9\uc73c\ub85c, \ubd84\ub958 \uce35\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4.\nmodel.add(layers.Dense(10))","34a84f8e":"initial_model = keras.Sequential(\n    [\n        keras.Input(shape=(250, 250, 3)),\n        layers.Conv2D(32, 5, strides=2, activation=\"relu\"),\n        layers.Conv2D(32, 3, activation=\"relu\"),\n        layers.Conv2D(32, 3, activation=\"relu\"),\n    ]\n)\nfeature_extractor = keras.Model(\n    inputs=initial_model.inputs,\n    outputs=[layer.output for layer in initial_model.layers],\n)\n\n# \ud3c9\uac00 \uc785\ub825 \uc704\uc5d0\uc11c \ud2b9\uc9d5 \ucd94\ucd9c\uae30\ub97c \ud638\ucd9c\ud569\ub2c8\ub2e4.\nx = tf.ones((1, 250, 250, 3))\nfeatures = feature_extractor(x)","8faac0ba":"initial_model = keras.Sequential(\n    [\n        keras.Input(shape=(250, 250, 3)),\n        layers.Conv2D(32, 5, strides=2, activation=\"relu\"),\n        layers.Conv2D(32, 3, activation=\"relu\", name=\"my_intermediate_layer\"),\n        layers.Conv2D(32, 3, activation=\"relu\"),\n    ]\n)\nfeature_extractor = keras.Model(\n    inputs=initial_model.inputs,\n    outputs=initial_model.get_layer(name=\"my_intermediate_layer\").output,\n)\n# \ud3c9\uac00 \uc785\ub825 \uc704\uc5d0\uc11c \ud2b9\uc9d5 \ucd94\ucd9c\uae30\ub97c \ud638\ucd9c\ud569\ub2c8\ub2e4.\nx = tf.ones((1, 250, 250, 3))\nfeatures = feature_extractor(x)","41376acd":"Sequential \ubaa8\ub378\uc740 \ub2e4\uc74c\uacfc \uac19\uc740 \uacbd\uc6b0\uc5d0 **\uc801\ud569\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4**:\n* \ubaa8\ub378\uc774 \uc5ec\ub7ec\uac1c\uc758 \uc785\ub825\uc774\ub098 \uc5ec\ub7ec\uac1c\uc758 \ucd9c\ub825\uc744 \uac00\uc9d1\ub2c8\ub2e4\n* \uce35\ub4e4 \uc911\uc5d0 \ud558\ub098\ub77c\ub3c4 \uc5ec\ub7ec\uac1c\uc758 \uc785\ub825\uc774\ub098 \uc5ec\ub7ec\uac1c\uc758 \ucd9c\ub825\uc744 \uac00\uc9d1\ub2c8\ub2e4\n* \uce35 \uacf5\uc720\ub97c \ud574\uc57c \ud569\ub2c8\ub2e4.\n* \ube44\uc120\ud615 \uc704\uc0c1 \ubc30\uce58(\uc608, \uc794\uc5ec \uc5f0\uacb0, \ub2e4\uc911 \uac00\uc9c0 \ubaa8\ub378)\ub97c \uc6d0\ud569\ub2c8\ub2e4","fdb446f5":"\uc5ec\uae30 \ud558\ub098\uc758 \uce35\uc5d0\uc11c\ub9cc \ud2b9\uc9d5\uc744 \ucd94\ucd9c\ud558\ub294 \ube44\uc2b7\ud55c \uc608\uc81c\uac00 \uc788\uc2b5\ub2c8\ub2e4:","710c1e6d":"\ubaa8\ub378 \uad6c\uc131\uc774 \uc900\ube44\uac00 \ub418\uc5c8\uc73c\uba74, \ub2e4\uc74c\uc744 \ud558\uace0 \uc2f6\uc744 \uac83\uc785\ub2c8\ub2e4:\n* \ubaa8\ub378\uc744 \ud559\uc2b5\uc2dc\ud0a4\uace0, \ud3c9\uac00\ud558\uace0, \ucd94\ub860\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4. [\uc0ac\uc804 \uc81c\uc791\ub41c \ubc18\ubcf5\ubb38\uc73c\ub85c \ud559\uc2b5 & \ud3c9\uac00 \uac00\uc774\ub4dc](https:\/\/www.tensorflow.org\/guide\/keras\/train_and_evaluate\/)\ub97c \ubcf4\uc138\uc694.\n* \ubaa8\ub378\uc744 \ub514\uc2a4\ud06c\uc5d0 \uc800\uc7a5\ud558\uace0 \ubcf5\uc6d0\ud558\uc138\uc694. [\uc9c1\ub82c\ud654 & \uc800\uc7a5 \uac00\uc774\ub4dc](https:\/\/www.tensorflow.org\/guide\/keras\/save_and_serialize\/)\ub97c \ubcf4\uc138\uc694.\n* \uc5ec\ub7ec \uac1c\uc758 GPU\ub4e4\uc744 \uc0ac\uc6a9\ud568\uc73c\ub85c\uc368 \ubaa8\ub378 \ud559\uc2b5\uc744 \uac00\uc18d\ud558\uc138\uc694. [\ub2e4\uc911 GPU\uc640 \ubd84\uc0b0 \ud559\uc2b5 \uac00\uc774\ub4dc](https:\/\/www.tensorflow.org\/guide\/keras\/distributed_training)\ub97c \ubcf4\uc138\uc694.","add6bb43":"\uce35\ub4e4\uc758 \ubaa9\ub85d\uc744 Sequential \uc0dd\uc131\uc790\uc5d0 \ub118\uaca8\uc90c\uc73c\ub85c\uc368 \uc21c\ucc28\uc801 \ubaa8\ub378\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:","77915b07":"## Sequential \ubaa8\ub378\uc744 \uc774\uc6a9\ud55c \uc804\uc774 \ud559\uc2b5","91d026ea":"\ub300\uc751\ud558\ub294 `pop()` \uba54\uc18c\ub4dc \ub610\ud55c \uce35\ub4e4\uc744 \uc81c\uac70\ud558\uae30 \uc704\ud574 \uc788\ub2e4\ub294 \uac83\uc744 \uae30\uc5b5\ud558\uc138\uc694: Sequential \ubaa8\ub378\uc740 \uce35\ub4e4\uc758 \ubc30\uc5f4\uacfc \uad49\uc7a5\ud788 \ub9ce\uc774 \uc720\uc0ac\ud558\uac8c \ud589\ub3d9\ud569\ub2c8\ub2e4.","b608172d":"## \uc0ac\uc804\uc5d0 \uc785\ub825 \ubaa8\uc591 \ud2b9\uc815","1709343b":"\uc804\uc774 \ud559\uc2b5\uc744 \ud558\uba74, \uc774 \ub450\uac00\uc9c0 \uc591\uc2dd\ub4e4\uc744 \uc790\uc8fc \uc0ac\uc6a9\ud558\uace0 \uc788\ub294 \uac83\uc744 \ubcf4\uac8c \ub420 \uac83\uc785\ub2c8\ub2e4.","f78a9f6b":"\uc774\uac83\uc774 Sequential \ubaa8\ub378\uc5d0 \ub300\ud574 \uc54c\uc544\uc57c \ud560 \ubaa8\ub4e0 \uac83\uc785\ub2c8\ub2e4!","43438fe7":"\uc790\uc5f0\uc2a4\ub7fd\uac8c, \uc774\uac83\uc740 Sequential \ubaa8\ub378\ub4e4\uc5d0\ub3c4 \uc801\uc6a9\ub429\ub2c8\ub2e4. \uc785\ub825 \ubaa8\uc591 \uc5c6\uc774 Sequential \ubaa8\ub378\uc758 \uac1d\uccb4\ub97c \ub9cc\ub4e4 \ub54c, \"\uc0dd\uc131\ub418\uc9c0\" \uc54a\uc2b5\ub2c8\ub2e4: \uac00\uc911\uce58\ub97c \uac00\uc9c0\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4(\uadf8\ub9ac\uace0 `model.weights`\ub97c \ud638\ucd9c\ud558\ub294 \uac83\uc740 \uc774\uac83\ucc98\ub7fc \uc5d0\ub7ec\uac00 \ub098\uac8c \ub429\ub2c8\ub2e4). \uac00\uc911\uce58\ub4e4\uc740 \ubaa8\ub378\uc774 \ucc98\uc74c\uc73c\ub85c \uc785\ub825 \ub370\uc774\ud130\ub97c \ubcf4\uac8c \ub420 \ub54c \uc0dd\uc131\ub429\ub2c8\ub2e4:","2b707e6d":"\uc804\uc774 \ud559\uc2b5\uc740 \ubaa8\ub378 \uc548\uc758 \ubc14\ub2e5 \uce35\ub4e4\uc744 \ub3d9\uacb0\ud558\uace0 \uc624\uc9c1 \uaf2d\ub300\uae30 \uce35\ub4e4\uc744 \ud559\uc2b5\uc2dc\ud0a4\ub294 \uac83\uc73c\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. \uc774\uac83\uc5d0 \uc775\uc219\ud558\uc9c0 \uc54a\ub2e4\uba74, [\uc804\uc774 \ud559\uc2b5 \uac00\uc774\ub4dc](https:\/\/www.tensorflow.org\/guide\/keras\/transfer_learning\/)\ub97c \ubc18\ub4dc\uc2dc \uc77d\uc5b4\ubcf4\uc138\uc694.","b29815f2":"\uc774 \ud568\uc218\uc640 \ub3d9\uc77c\ud569\ub2c8\ub2e4:","742b504b":"\ub9e4\uc6b0 \uc2e4\uc6a9\uc801\uc785\ub2c8\ub2e4, \uadf8\ub807\uc8e0?","7823ed69":"\uc0c8\ub85c\uc6b4 Sequential \uad6c\uc131\uc744 \ub9cc\ub4e4 \ub54c\uc5d0\ub294, `add()`\ub85c \uc99d\uac00\uc801\uc73c\ub85c \uce35\ub4e4\uc744 \uc313\ub294 \uac83\uacfc \uc790\uc8fc \ubaa8\ub378 \uc694\uc57d\uc744 \ucd9c\ub825\ud558\ub294 \uac83\uc774 \uc720\uc6a9\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc774\uac83\uc740 `Conv2D`\uc640 `MaxPooling2D` \uce35\ub4e4\uc758 \ub354\ubbf8\uac00 \uc5b4\ub5bb\uac8c \uc774\ubbf8\uc9c0 \ud2b9\uc9d5 \ub300\uc751\uc744 \ub2e4\uc6b4\uc0d8\ud50c\ub9c1 \ud558\ub294\uc9c0 \uc9c0\ucf1c\ubcfc \uc218 \uc788\uac8c \ud574\uc90d\ub2c8\ub2e4:","1088ae09":"\uc77c\ubc18\uc801\uc73c\ub85c Keras\uc758 \ubaa8\ub4e0 \uce35\ub4e4\uc740 \uac00\uc911\uce58\ub4e4\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uac8c \ud558\uae30 \uc704\ud558\uc5ec \uc785\ub825\uc758 \ubaa8\uc591\uc744 \uc54c\uc544\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub798\uc11c \uc774\ub807\uac8c \uce35\uc744 \uc0dd\uc131\ud560 \ub54c\uc5d0\ub294, \ucd08\uae30\uc5d0, \uac00\uc911\uce58\uac00 \uc5c6\uc2b5\ub2c8\ub2e4:","619aa362":"\ubaa8\ub378\uc774 \ud55c\ubc88 \"\ub9cc\ub4e4\uc5b4\uc9c0\uba74\", \uc774\uac83\uc758 `summary()` \uba54\uc18c\ub4dc\ub97c \ud638\ucd9c\ud574 \uadf8 \ub0b4\uc6a9\uc744 \ud45c\uc2dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:","d9e0d4c0":"Sequential \ubaa8\ub378\uc774 \ud55c\ubc88 \ub9cc\ub4e4\uc5b4\uc9c0\uace0 \ub098\uba74, [Functional API \ubaa8\ub378](https:\/\/www.tensorflow.org\/guide\/keras\/functional\/)\uacfc \uac19\uc774 \ub3d9\uc791\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 \ubaa8\ub4e0 \uce35\uc774 `input`\uacfc `output` \uc18d\uc131\uc744 \uac00\uc9c4\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774 \uc18d\uc131\ub4e4\uc740 \ube60\ub974\uac8c Sequential \ubaa8\ub378 \uc548\uc758 \ubaa8\ub4e0 \uc911\uac04 \uce35\ub4e4\uc758 \ucd9c\ub825\ub4e4\uc744 \ucd94\ucd9c\ud558\ub294 \ubaa8\ub378\uc744 \uc0dd\uc131\ud558\ub294 \uac83\uacfc \uac19\uc740 \ub6f0\uc5b4\ub09c \uac83\ub4e4\uc744 \ud558\ub294\ub370 \uc0ac\uc6a9\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4:","f5316746":"\uccab\ubc88\uc9f8\ub85c, Sequential \ubaa8\ub378\uc744 \uac00\uc9c0\uace0 \uc788\uace0, \ub9c8\uc9c0\ub9c9\uc744 \uc81c\uc678\ud55c \ubaa8\ub4e0 \uce35\ub4e4\uc744 \ub3d9\uacb0\uc2dc\ud0a4\uace0 \uc2f6\ub2e4\uace0 \ud569\uc2dc\ub2e4. \uc774 \uacbd\uc6b0\uc5d0\ub294, `model.layers` \uc704\uc5d0\uc11c \uac04\ub2e8\ud558\uac8c \ubc18\ubcf5\ud558\uba70 \ub9c8\uc9c0\ub9c9 \uce35\uc744 \uc81c\uc678\ud558\uace0 `layer.trainable = False`\ub97c \uac01 \uce35\uc5d0 \ub300\ud574 \uc124\uc815\ud569\ub2c8\ub2e4. \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4:","1bcba549":"## \ubaa8\ub378\uc744 \uac00\uc84c\uc744 \ub54c\uc5d0 \ud560 \uc77c","3031216d":"## \ud754\ud55c \ub514\ubc84\uae45 \uc791\uc5c5 \ud750\ub984: add() + summary()","bced33d5":"## Sequential \ubaa8\ub378\ub85c \ud2b9\uc9d5 \ucd94\ucd9c","69296f86":"\ub2e4\ub978 \ud754\ud55c \uccad\uc0ac\uc9c4\uc740 \uc0ac\uc804 \ud559\uc2b5\ub41c \ubaa8\ub378\uacfc \uba87 \uac1c\uc758 \uc0c8\ub86d\uac8c \ucd08\uae30\ud654\ub41c \ubd84\ub958 \uce35\ub4e4\uc744 \uc313\uc544 Sequential \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4:","5eb7b69f":"\uc5ec\uae30 Sequential \ubaa8\ub378\uc744 \ud3ec\ud568\ud558\ub294 \ub450\uac00\uc9c0 \ud754\ud55c \uc804\uc774 \ud559\uc2b5 \uccad\uc0ac\uc9c4\uc785\ub2c8\ub2e4.","8316384b":"## \uc124\uc815","6ecd12d9":"## Sequential \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud558\ub294 \ub54c","4661793e":"Keras\uc5d0\uc11c \ubaa8\ub378\uc744 \ub9cc\ub4dc\ub294 \uac83\uc5d0 \ub300\ud574 \ub354 \ucc3e\uc544\ubcf4\uace0 \uc2f6\ub2e4\uba74, \uc544\ub798\ub97c \ubcf4\uc138\uc694:\n* [Functional API \uac00\uc774\ub4dc](https:\/\/www.tensorflow.org\/guide\/keras\/functional\/)\n* [\uc0c1\uc18d\uc744 \ud1b5\ud55c \uc0c8\ub85c\uc6b4 \uce35 & \ubaa8\ub378 \ub9cc\ub4e4\uae30 \uac00\uc774\ub4dc](https:\/\/www.tensorflow.org\/guide\/keras\/custom_layers_and_models\/)","677b470a":"\uc77c\ubc18\uc801\uc73c\ub85c, \uc544\ub294 \uacbd\uc6b0\uc5d0\ub294 Sequential \ubaa8\ub378\uc758 \uc785\ub825 \ubaa8\uc591\uc744 \uc0ac\uc804\uc5d0 \ud56d\uc0c1 \ud2b9\uc815\ud558\ub294 \uac83\uc774 \ucd94\ucc9c\ub418\ub294 \uac00\uc7a5 \uc88b\uc740 \uc5f0\uc2b5\uc785\ub2c8\ub2e4.","bb750e10":"\uac00\uc911\uce58\uc758 \ubaa8\uc591\uc740 \uc785\ub825\uc758 \ubaa8\uc591\uc5d0 \uc758\uc874\ud558\uae30 \ub54c\ubb38\uc5d0, \uc785\ub825 \uc704\uc5d0\uc11c \ud638\ucd9c\ub418\ub294 \ucd5c\ucd08\uc5d0 \uac00\uc911\uce58\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4:","459a9c10":"# Sequential \ubaa8\ub378","1b86f452":"\uc774\uac83\ucc98\ub7fc \ubbf8\ub9ac \uc815\uc758\ub41c \uc785\ub825 \ubaa8\uc591\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc9c4 \ubaa8\ub378\ub4e4\uc740 \ud56d\uc0c1 \uac00\uc911\uce58\ub4e4\uc744 \uac00\uc9c0\uace0 \uc788\uace0 (\ub370\uc774\ud130\ub97c \ubcf4\uae30 \uc804\uc774\ub77c\ub3c4) \ud56d\uc0c1 \uc815\uc758\ub41c \ucd9c\ub825 \ubaa8\uc591\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4.","e70fdad7":"Sequential \uc0dd\uc131\uc790\uac00 Keras\uc758 \ub2e4\ub978 \uce35\uc774\ub098 \ubaa8\ub378\ucc98\ub7fc `name` \uc778\uc790\ub97c \uc218\uc6a9\ud55c\ub2e4\ub294 \uac83 \ub610\ud55c \uc54c\uc544\ub450\uc138\uc694. TensorBoard \uadf8\ub798\ud504\uc5d0 \uc758\ubbf8\uc0c1 \uc720\uc758\ubbf8\ud55c \uc774\ub984\ub4e4\ub85c \ub098\ud0c0\ub0b4\ub294\ub370 \uc720\uc6a9\ud569\ub2c8\ub2e4.","d7822acc":"```python\nmodel = keras.Sequential([\n    keras.Input(shape=(784)),\n    layers.Dense(32, activation='relu'),\n    layers.Dense(32, activation='relu'),\n    layers.Dense(32, activation='relu'),\n    layers.Dense(10),\n])\n\n# \uc544\ub9c8 \uc0ac\uc804 \ud559\uc2b5\ub41c \uac00\uc911\uce58\ub4e4\uc744 \uba3c\uc800 \ubd88\ub7ec\uc624\uace0 \uc2f6\uc744 \uac83\uc785\ub2c8\ub2e4.\nmodel.load_weights(...)\n\n# \ub9c8\uc9c0\ub9c9\uc744 \uc81c\uc678\ud558\uace0 \ubaa8\ub4e0 \uce35\ub4e4\uc744 \ub3d9\uacb0\uc2dc\ud0b5\ub2c8\ub2e4.\nfor layer in model.layers[:-1]:\n    layer.trainable = False\n\n# \uc7ac\ucef4\ud30c\uc77c\ud558\uace0 \ud559\uc2b5\ud569\ub2c8\ub2e4(\uc774\uac83\uc740 \ub9c8\uc9c0\ub9c9 \uce35\uc758 \uac00\uc911\uce58\ub4e4\ub9cc \uac31\uc2e0\ud560 \uac83\uc785\ub2c8\ub2e4).\nmodel.compile(...)\nmodel.fit(...)\n```","4d35bb3b":"`Sequential` \ubaa8\ub378\uc740 \uac01 \uce35\uc774 **\uc815\ud655\ud788 \ud558\ub098\uc758 \uc785\ub825 \ud150\uc11c\uc640 \ud558\ub098\uc758 \ucd9c\ub825 \ud150\uc11c**\ub97c \uac00\uc9c0\uace0 \uc788\ub294 \uacbd\uc6b0\uc5d0 **\uce35\ub4e4\uc758 \ub2e8\uc21c\ud55c \ub354\ubbf8**\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4.","c95f3155":"`Input` \uac1d\uccb4\ub294 \uce35\uc774 \uc544\ub2c8\uae30 \ub54c\ubb38\uc5d0, `model.layers`\uc758 \ubd80\ubd84\uc73c\ub85c \ud45c\uc2dc\ub418\uc9c0 \uc54a\ub294\ub2e4\ub294 \uac83\uc744 \uc8fc\ubaa9\ud558\uc138\uc694:","acf58c82":"\uac04\ub2e8\ud55c \ub2e4\ub978 \ubc29\ubc95\uc740 \uccab \uce35\uc5d0 `input_shape` \uc778\uc790\ub97c \ub118\uaca8\uc8fc\ub294 \uac83\uc785\ub2c8\ub2e4:","d17d8048":"```python\n# \uc0ac\uc804 \ud559\uc2b5\ub41c \uac00\uc911\uce58\ub4e4\uc744 \uac00\uc9c0\ub294 \ud569\uc131\uacf1 \uae30\ubc18\uc744 \ubd88\ub7ec\uc635\ub2c8\ub2e4\nbase_model = keras.applications.Xception(\n    weights='imagenet',\n    include_top=False,\n    pooling='avg')\n\n# \uae30\ubc18 \ubaa8\ub378\uc744 \ub3d9\uacb0\ud569\ub2c8\ub2e4\nbase_model.trainable = False\n\n# \uc704\uc5d0 \ud559\uc2b5 \uac00\ub2a5\ud55c \ubd84\ub958\uae30\ub97c \ucd94\uac00\ud558\uae30 \uc704\ud574 Sequential \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4\nmodel = keras.Sequential([\n    base_model,\n    layers.Dense(1000),\n])\n\n# \ucef4\ud30c\uc77c & \ud559\uc2b5\ud569\ub2c8\ub2e4\nmodel.compile(...)\nmodel.fit(...)\n```","0d6a8428":"\uadf8\ub7ec\ub098, Sequential \ubaa8\ub378\uc744 \uc99d\uac00\uc801\uc73c\ub85c \ub9cc\ub4e4 \ub54c \ud604\uc7ac \ucd9c\ub825 \ubaa8\uc591\uc744 \ud3ec\ud568\ud55c \ubaa8\ub378\uc758 \uc694\uc57d\uc744 \ud45c\uc2dc\ud560 \uc218 \uc788\uac8c \ud558\ub294 \ub370\uc5d0 \ub9e4\uc6b0 \uc720\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0\uc5d0\ub294, \uc2dc\uc791\uc73c\ub85c\ubd80\ud130 \uc785\ub825 \ubaa8\uc591\uc744 \uc54c \uc218 \uc788\uac8c \ud558\uae30 \uc704\ud574 `Input` \uac1d\uccb4\ub97c \ubaa8\ub378\uc5d0 \ub118\uaca8\uc90c\uc73c\ub85c\uc368 \ubaa8\ub378\uc744 \uc2dc\uc791\ud574\uc57c \ud569\ub2c8\ub2e4:","1fc01c0a":"\uc774\uac83\uc758 \uce35\ub4e4\uc740 `layers` \uc18d\uc131\uc744 \ud1b5\ud574 \uc811\uadfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:","d91c6e7a":"\uac1c\ub7b5\uc801\uc73c\ub85c, \uc544\ub798\uc758 `Sequential` \ubaa8\ub378\uc740:","cf75bf6e":"## Sequential \ubaa8\ub378 \uc0dd\uc131","cfeca808":"`add()` \uba54\uc18c\ub4dc\ub97c \ud1b5\ud574 Sequential \ubaa8\ub378\uc744 \uc99d\uac00\uc2dc\ud0a4\uba70 \uc0dd\uc131\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4:"}}