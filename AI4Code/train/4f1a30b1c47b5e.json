{"cell_type":{"236d39ab":"code","982c02a2":"code","597f0933":"code","9a8ec04f":"code","1e2ed8da":"code","49a23998":"code","9a5679c5":"code","49f2eb6f":"code","60c1f6aa":"markdown","d9e8f1b4":"markdown","5e1e4eba":"markdown","c678ac27":"markdown","37883f06":"markdown","b59c27fe":"markdown","733871ba":"markdown","2893cc57":"markdown","a727dcb2":"markdown","44873ec2":"markdown"},"source":{"236d39ab":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","982c02a2":"#lets read dataset\ndf=pd.read_csv(\"\/kaggle\/input\/alphabet-inc-stockprice-history-dataset\/GOOG.csv\")\ndf","597f0933":"import matplotlib.pyplot as plt\nx=df[\"Date\"]\ny=df[\"Close\"]\nplt.plot(x,y)\nplt.xlabel('Date')\nplt.ylabel('Close Stock Values')\nplt.show()","9a8ec04f":"df.describe()","1e2ed8da":"#making dataset using those two columns\ndata=df[[\"Date\",\"Close\"]]\n#lets rename columns\ndata=data.rename(columns={\"Date\":\"ds\",\"Close\":\"y\"})\ndata.head(5)","49a23998":"from fbprophet import Prophet\nmodel=Prophet(daily_seasonality=True)\nmodel.fit(data)","9a5679c5":"future=model.make_future_dataframe(periods=365) #specifying number of days for future\nprediction=model.predict(future)\nmodel.plot(prediction)\n\n#plot predictions now\nplt.title(\"prediction of Googl's future stock price using prophet\")\nplt.xlabel(\"Date\")\nplt.ylabel(\"Close Stock Price\")\nplt.show()","49f2eb6f":"model.plot_components(prediction)\nplt.show()","60c1f6aa":"**Lets plot dataset to observe close values agains dates**","d9e8f1b4":"**Now lets print some stastical variables such as mean, median,min, max , std using dataset's columns**","5e1e4eba":"**Now build the model. we will use \"dates\" and \"close\" prices are as features for our model**","c678ac27":"# # # # Lets plot predictions.\n# # 1.We will ask model to predict future prices\n# # 2.Then it will visualize the predictions","37883f06":"**we will not split dataset into tain and test, instead we feed all data  to fit the model and ask the model to predict future stock price for 2021.\nLets import \"prophet\" model and build**","b59c27fe":"**> it shows that google's stock price is going to be higher than before. but did u notice huge drop from 2020-02 to 2020-05, its due to corona pandemic.**","733871ba":"# Now lets plot the forecast components- trend, weekly, seasonality and daily components","2893cc57":"**In this notebook, i am going to show  how to predict future stock prices using a time series forcasting model \"Facebook Prophet\"**","a727dcb2":"based on estimated trends,we can see that stock price is maximum on wednesdays","44873ec2":"# in above plot, black dots represent the traing period and blue line represents prediction confidence for future stock prices from aug-2020 to may-2021"}}