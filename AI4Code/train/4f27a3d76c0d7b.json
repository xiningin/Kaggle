{"cell_type":{"4979eee5":"code","71ecadde":"code","a27ca929":"code","480e5837":"code","6c30704d":"code","e1138ee0":"code","403ce6e8":"code","794e19e0":"code","47f32075":"code","a823f8d4":"code","a31f513a":"code","d98d2fb9":"code","422a1260":"code","de8bcaab":"code","533d0ca4":"code","4d967308":"code","57400fb2":"code","e66999bd":"code","ea46cb62":"code","084a5800":"code","6ffe5192":"code","8c3779c7":"code","7bb8ba66":"code","678f0d47":"code","8fa848ee":"code","860c5be7":"code","7adf882c":"code","22ca28c1":"code","0eff2c57":"code","ac52fa09":"code","d44f974d":"code","923eb51e":"code","5cba73b7":"code","987fd359":"code","14e089ab":"code","50538637":"code","9da99d03":"code","de88d81a":"code","47fa24b0":"code","049bb59a":"code","6d275290":"code","6c36da9d":"code","9c33fc68":"code","436810a6":"code","753eb63b":"code","ec3d8d3e":"code","cdaabc9b":"code","5723a005":"code","58026dd9":"code","ec9fa1b4":"code","4aff3f93":"code","d971e7e0":"code","cba5fc28":"code","26a99a5b":"code","9b6453fa":"code","8d22b718":"code","68cdc9fc":"code","36eeb25e":"code","eeaceef4":"code","5b6c6a9d":"code","80d32911":"code","604cdf23":"code","da126b74":"code","da78d2d3":"code","ea92c234":"code","aac87a7f":"code","ca3e8e98":"code","3ee3f548":"code","b94a743c":"code","5b9a5a60":"code","e20348b7":"code","315f663c":"code","821eaebb":"code","23541730":"code","9ddd047f":"code","f5c58d56":"code","671a309b":"code","380d828e":"code","468c6d8a":"code","1eda8b00":"code","a9d888a3":"code","9b5b8b36":"code","ffefb728":"code","c545e349":"code","4b7de28f":"code","e6137188":"code","af42e10f":"code","45ad6b85":"code","daaebe29":"code","9058362a":"code","a4f38781":"code","0372d82f":"code","4b866119":"code","c888b3a6":"code","a3d68cd7":"code","6ed87ff2":"code","da090351":"code","fbb0c710":"code","2e39fac2":"code","1b06a437":"code","de90ca6b":"code","c7f9e694":"code","ed6c67c5":"code","bd002f80":"code","64284ddf":"code","afa20d16":"code","7b7feead":"code","c9d64cec":"code","88dbb0c3":"code","5089ebe8":"code","03cbb54b":"code","c94aa1b6":"code","60cdb23b":"code","b1b2d492":"code","d588aa82":"code","d3a78899":"code","bd7338c6":"code","ed3107d8":"code","070c9e8c":"code","1a02ade8":"code","b5aa7e52":"code","303dcf10":"markdown","9f312383":"markdown","d65aeaed":"markdown","0eab2822":"markdown","5dffd976":"markdown","00fad688":"markdown","509fd4e7":"markdown","6e1d3e87":"markdown","e0a85897":"markdown","ef7c8e9d":"markdown","611f938b":"markdown","c284a5c8":"markdown","33eeae87":"markdown","5a4370b7":"markdown","e706f67b":"markdown","70003e89":"markdown","8bf0c9b0":"markdown","a7867278":"markdown","76ecb9c8":"markdown","25bf2c58":"markdown","6c55f44e":"markdown","fd6843b9":"markdown","11b996a5":"markdown","fd1dc98a":"markdown","2633ad77":"markdown","4598c1ba":"markdown","8bfd21c9":"markdown","e8ea3520":"markdown","1d7555db":"markdown","53b5d38b":"markdown","73e5c904":"markdown","133f4f98":"markdown","4fcede3c":"markdown","ffbd4c8d":"markdown"},"source":{"4979eee5":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","71ecadde":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a27ca929":"df_heart = pd.read_csv('\/kaggle\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')\ndf_heart.name = 'Heart DF'\ndf_heart.head()","480e5837":"df_heart.info()","6c30704d":"df_heart.describe().T","e1138ee0":"def get_shape(df):\n    df_name = df.name\n    print('Shape of {} is {}'.format(df_name,df.shape))","403ce6e8":"get_shape(df_heart)","794e19e0":"df_o2Saturation = pd.read_csv('\/kaggle\/input\/heart-attack-analysis-prediction-dataset\/o2Saturation.csv')\ndf_o2Saturation.name = 'o2Saturation DF'\ndf_o2Saturation.head()","47f32075":"get_shape(df_o2Saturation)","a823f8d4":"# def get_column_dtype(df):\n#     dataTypeSeries = df.dtypes\n#     print('Data type of each column of Dataframe :\\n',dataTypeSeries)\n# get_column_dtype(df_heart)","a31f513a":"df_heart.dtypes","d98d2fb9":"df_heart['sex'].value_counts()","422a1260":"df_heart['sex'] = df_heart['sex'].astype('object', copy=False)","de8bcaab":"df_heart['cp'].unique()","533d0ca4":"df_heart['cp'] = df_heart['cp'].astype('object', copy=False)","4d967308":"df_heart['fbs'].value_counts()","57400fb2":"df_heart['fbs'] = df_heart['fbs'].astype('object', copy=False)","e66999bd":"df_heart['restecg'].value_counts()","ea46cb62":"df_heart['restecg'] = df_heart['restecg'].astype('object', copy=False)","084a5800":"df_heart['exng'].value_counts()","6ffe5192":"df_heart['exng'] = df_heart['exng'].astype('object', copy=False)","8c3779c7":"df_heart['slp'].value_counts()","7bb8ba66":"df_heart['slp'] = df_heart['slp'].astype('object', copy=False)","678f0d47":"df_heart['caa'].value_counts()","8fa848ee":"df_heart['caa'] = df_heart['caa'].astype('object', copy=False)","860c5be7":"df_heart['thall'].value_counts()","7adf882c":"df_heart['thall'] = df_heart['thall'].astype('object', copy=False)","22ca28c1":"df_heart['output'].value_counts()","0eff2c57":"df_heart['output'] = df_heart['output'].astype('object', copy=False)","ac52fa09":"df_heart.dtypes","d44f974d":"# categorical columns\ncategorical_columns = df_heart.dtypes[df_heart.dtypes == np.object]\ncategorical_columns","923eb51e":"numerical_columns = df_heart.dtypes[df_heart.dtypes != np.object]\nnumerical_columns","5cba73b7":"import scipy.stats as stats\nimport pylab","987fd359":"def plot_qq(df,feature):\n    plt.figure(figsize = (10,6))\n    plt.subplot(1,2,1)\n    df[feature].hist()\n    plt.subplot(1,2,2)\n    stats.probplot(df[feature], dist= 'norm', plot=pylab)\n    plt.show()","14e089ab":"plot_qq(df_heart,'age')","50538637":"plot_qq(df_heart,'trtbps')","9da99d03":"plot_qq(df_heart,'chol')","de88d81a":"plot_qq(df_heart,'thalachh')","47fa24b0":"plot_qq(df_heart,'oldpeak')","049bb59a":"#df_heart['oldpeak_log'] = np.log(df_heart['oldpeak'])","6d275290":"#plot_qq(df_heart,'oldpeak_log')","6c36da9d":"df_heart[df_heart['oldpeak'] == 0].count()[0]","9c33fc68":"df_heart_oldpeak = df_heart['oldpeak'].copy()","436810a6":"df_heart_oldpeak.describe()","753eb63b":"df_heart_oldpeak_new = df_heart_oldpeak[df_heart_oldpeak.values != 0]","ec3d8d3e":"df_heart_oldpeak_new.describe()","cdaabc9b":"def fillNaN_with_unifrand(df,df_new):\n    a = df.values\n    # m = np.isnan(a) # mask of NaNs\n    m = (df == 0) # mask of zero values\n    mu, sigma = df_new.mean(), df_new.std()\n    df[m] = np.random.normal(mu, sigma, size=m.sum())\n    return df","5723a005":"fillNaN_with_unifrand(df_heart_oldpeak,df_heart_oldpeak_new)","58026dd9":"df_heart['oldpeak_imputed'] = df_heart_oldpeak","ec9fa1b4":"plot_qq(df_heart,'oldpeak_imputed')","4aff3f93":"df_heart['oldpeak_zero'] = 0","d971e7e0":"df_heart.oldpeak_zero[df_heart['oldpeak'] == 0] = 1","cba5fc28":"df_heart.drop('oldpeak', axis = 1, inplace = True)","26a99a5b":"sns.set_theme(style=\"white\")\nsns.despine()","9b6453fa":"categorical_columns","8d22b718":"# sns.countplot(y='sex', data=df_heart, hue='output',palette=\"Set3\")\n# sns.despine()","68cdc9fc":"sns.catplot(y=\"cp\", hue=\"sex\", data=df_heart, col = 'output',\n            kind = 'count',palette=\"Set3\",\n            height=4, aspect= 0.9\n           )","36eeb25e":"sns.catplot(y=\"fbs\", hue=\"sex\", data=df_heart, col = 'output',\n            kind = 'count',palette=\"Set3\",\n            height=4, aspect= 0.9\n           )","eeaceef4":"sns.catplot(y=\"restecg\", hue=\"sex\", data=df_heart, col = 'output',\n            kind = 'count',palette=\"Set3\",\n            height=4, aspect= 0.9\n           )","5b6c6a9d":"sns.catplot(y=\"exng\", hue=\"sex\", data=df_heart, col = 'output',\n            kind = 'count',palette=\"Set3\",\n            height=4, aspect= 0.9\n           )","80d32911":"sns.catplot(y=\"slp\", hue=\"sex\", data=df_heart, col = 'output',\n            kind = 'count',palette=\"Set3\",\n            height=4, aspect= 0.9\n           )","604cdf23":"sns.catplot(y=\"caa\", hue=\"sex\", data=df_heart, col = 'output',\n            kind = 'count',palette=\"Set3\",\n            height=4, aspect= 0.9\n           )","da126b74":"sns.catplot(y=\"thall\", hue=\"sex\", data=df_heart, col = 'output',\n            kind = 'count',palette=\"Set3\",\n            height=4, aspect= 0.9\n           )","da78d2d3":"numerical_columns","ea92c234":"sns.violinplot(data=df_heart['age'])","aac87a7f":"sns.distplot(a=df_heart['age'])","ca3e8e98":"sns.violinplot(data=df_heart['thalachh'], palette=\"deep\")","3ee3f548":"sns.distplot(a=df_heart['thalachh'])","b94a743c":"sns.violinplot(data=df_heart['chol'], palette=\"deep\")","5b9a5a60":"sns.distplot(a=df_heart['chol'])","e20348b7":"sns.violinplot(data=df_heart['trtbps'], palette=\"deep\")","315f663c":"sns.distplot(a=df_heart['trtbps'])","821eaebb":"sns.violinplot(data=df_heart['oldpeak_imputed'], palette=\"deep\")","23541730":"sns.distplot(a=df_heart['oldpeak_imputed'])","9ddd047f":"df_heart['output'] = df_heart['output'].astype('int')","f5c58d56":"sns.heatmap(df_heart.iloc[:, lambda df_heart: df_heart.columns.str.contains('age|trtbps|chol|thalachh|oldpeak_imputed|output',\n                                              case=False)].corr(),\n            center=0,annot=True, cbar = True\n           ) ","671a309b":"df_heart['thalachh'].describe()","380d828e":"#df_heart['output'] = df_heart['output'].astype('object')\ndf_heart['output'] = df_heart['output'].astype('int')","468c6d8a":"categorical_columns","1eda8b00":"from sklearn.preprocessing import OneHotEncoder","a9d888a3":"enc = OneHotEncoder(handle_unknown='ignore')","9b5b8b36":"df_heart_onehotencoded = pd.get_dummies(df_heart, columns=['cp', 'restecg', 'slp', 'caa', 'thall'], drop_first = True)","ffefb728":"df_heart_onehotencoded.head()","c545e349":"from sklearn.preprocessing import MinMaxScaler","4b7de28f":"from sklearn.model_selection import train_test_split","e6137188":"X = df_heart_onehotencoded.loc[:,df_heart_onehotencoded.columns != 'output']\ny = df_heart_onehotencoded['output']","af42e10f":"X.head()","45ad6b85":"y = pd.DataFrame(y)","daaebe29":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","9058362a":"min_max_scaler = MinMaxScaler()","a4f38781":"X_train_scaled = min_max_scaler.fit_transform(X_train)","0372d82f":"X_test_scaled = min_max_scaler.transform(X_test)","4b866119":"X_train_scaled = pd.DataFrame(X_train_scaled)","c888b3a6":"X_test_scaled = pd.DataFrame(X_test_scaled)","a3d68cd7":"X_train_scaled.head()","6ed87ff2":"from sklearn.model_selection import cross_val_predict\nfrom sklearn.model_selection import cross_val_score","da090351":"from sklearn.metrics import confusion_matrix","fbb0c710":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import RandomizedSearchCV","2e39fac2":"log_reg = LogisticRegression()","1b06a437":"score = cross_val_score(log_reg,X_train_scaled,y=y_train, \n                        cv=3, n_jobs=None, scoring = 'accuracy',\n                        verbose=0)","de90ca6b":"score.mean()","c7f9e694":"rf = RandomForestClassifier()","ed6c67c5":"score = cross_val_score(rf,X_train_scaled,y=y_train, \n                        cv=3, n_jobs=None, scoring = 'accuracy',\n                        verbose=0)","bd002f80":"score.mean()","64284ddf":"from sklearn.ensemble import GradientBoostingClassifier","afa20d16":"xgboost = GradientBoostingClassifier()","7b7feead":"score = cross_val_score(xgboost,X_train_scaled,y=y_train, \n                        cv=3, n_jobs=None, scoring = 'accuracy',\n                        verbose=0)","c9d64cec":"score.mean()","88dbb0c3":"svc = SVC()","5089ebe8":"score = cross_val_score(svc,X_train_scaled,y=y_train, \n                        cv=3, n_jobs=None, scoring = 'accuracy',\n                        verbose=0)","03cbb54b":"score.mean()","c94aa1b6":"xgboost.fit(X_train_scaled, y_train)","60cdb23b":"pred = xgboost.predict(X_test_scaled)","b1b2d492":"confusion_matrix(y_test, pred)","d588aa82":"from sklearn.metrics import accuracy_score","d3a78899":"accuracy_score(y_test, pred, normalize=False)","bd7338c6":"from sklearn.metrics import precision_recall_curve","ed3107d8":"precision, recall, thresholds = precision_recall_curve(y_test, pred)","070c9e8c":"precision[1]","1a02ade8":"recall[1]","b5aa7e52":"thresholds[1]","303dcf10":"total 99 rows which is a bigchunk of data; almost one third! meh.","9f312383":"# EDA","d65aeaed":"### Normalization","0eab2822":"# Read Data","5dffd976":"#### All models are relatively close with XgBoost as lowest so we will go ahead with this.","00fad688":"It is a little left skweed but for now not doing anything as it does not vary form normal dist that much and we are applying normalization anyway","509fd4e7":"#### We have outliers in chol, oldpeak_imputed and trtbps\nFor now we are not making any changes we will move on to feature engineering","6e1d3e87":"## Find Data type of each column","e0a85897":"I think we should take mean and std of the column without the 0 values because 0 clearly is an error during data collection as oldmeak min value is 0.1 (while ignoring zero values)","ef7c8e9d":"### One hot encoding","611f938b":"### Observations\nage and thalachh are negatively correlated but only 40%\n\noutput is very much goverened by thalachh and not by chol as we assumed initially\n\nInteresting lets look into thalachh more","c284a5c8":"## Model Building","33eeae87":"Also it has lots if zero values which in not possible so we are going to correct them","5a4370b7":"As you can see mean and std are very different","e706f67b":"## Some Observations","70003e89":"### QQ plot\n\n#### if QQ is  inconcusive h then use Kolmogorov Smirnov test\n#### Use Lilliefors test if mean and variance is not pre defined by the user\n#### Shapiro Wilk test is most powerful test you can use","8bf0c9b0":"#### Lets check correlation via heat map","a7867278":"Values for feature caa class 4 is very low; number of major vessels (0-3)\n\nValues for feature thall class 0 is very low;\n\nValues for feature restecg class 0 is very low;\n\n    rest_ecg : resting electrocardiographic results\n\n        Value 0: normal\n\n        Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV)\n\n        Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria","76ecb9c8":"NOW it is normally distributed","25bf2c58":"### Random Forest Classifier","6c55f44e":"### Numerical Data","fd6843b9":"Now dropping old column and also adding an additional column where oldpeak value was zero","11b996a5":"### Imports","fd1dc98a":"### Must Split test data to avoid data leakage","2633ad77":"## Check Distribution of Data","4598c1ba":"### Here we did one mistake thats is DATA LEAKAGE\ndue to taking mean and std of whole data in oldpeak column\nwe should have split the data first then try to impute the zero values\n#### OOPS!!!","8bfd21c9":"### Not NORMALLY Distributed","e8ea3520":"### Xgboost","1d7555db":"## Feature Engineering","53b5d38b":"### SVC","73e5c904":"### These columsn should not be int but categorical\nSex, cp, fbs, restecg, slp, caa, thall, output","133f4f98":"### Hypertuning Model","4fcede3c":"### Logistic Regression","ffbd4c8d":"### Count Plots"}}