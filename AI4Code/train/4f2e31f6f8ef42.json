{"cell_type":{"75cd3a4a":"code","a4c94d1f":"code","2b60546c":"code","0e02082b":"markdown"},"source":{"75cd3a4a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport math\nfrom decimal import *\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a4c94d1f":"derivative = lambda x: Decimal(-math.sin(x)) - Decimal(1)\nfunction = lambda x: Decimal(math.cos(x)) - x\ndef newton_method(input_x, derivative, function, counter, recursions):\n    f = function(input_x)\n    d = derivative(input_x)\n    x = (-f)\/d + input_x\n    counter += 1\n    #print(x)\n    if function(x) == 0:\n        return x\n    return newton_method(x, derivative, function, counter, recursions)","2b60546c":"#Set accuracy\ngetcontext().prec = 100\n\n#Run and print result from function\nvar = newton_method(Decimal(1.23), derivative, function, 0, 100)\nprint('Final answer at {} decimal precision:'.format(getcontext().prec), var)","0e02082b":"Below is a simple recursion to calculate the zeros of a function using the function and derivative. Recursion is not the most efficient way to solve this problem, but it works in this case to ensure the equation always obtains the required accuracy."}}