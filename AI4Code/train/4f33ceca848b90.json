{"cell_type":{"379ea8a1":"code","d54e368e":"code","317ce79b":"code","0b2b6982":"code","fc7fe50c":"code","35698b31":"code","b912e100":"code","f020349b":"code","9381acf1":"code","8e9775c8":"code","3fdcc621":"code","d095c407":"code","10b02c16":"code","f30134aa":"code","e2972ada":"code","b7d397bb":"code","421aee1e":"code","e156e236":"code","7b35fa0b":"code","43a91fbe":"code","b40a4832":"code","575c8706":"code","c023a22a":"code","5df27272":"code","601d09fa":"code","9126b18a":"code","2259b1f3":"code","e1b5d65a":"code","0d70d60b":"code","16c077f4":"code","62900ee6":"code","2776cbdf":"code","8315353d":"code","330d9328":"code","dc144ead":"code","cb473980":"code","e25d4fe4":"code","8e380697":"code","30afc0c2":"code","445b137e":"code","b5139442":"code","d5157ca4":"code","91985954":"code","e4c8167b":"code","70fe31ae":"code","ed7069b4":"code","09242691":"code","3cdf2ca8":"code","c5026bd4":"markdown","58b83815":"markdown","40ad3293":"markdown","501514fe":"markdown","08638b30":"markdown","bb25f7f3":"markdown","6fc34944":"markdown","fbddca1f":"markdown","f1c7d7e9":"markdown","1e984b5c":"markdown","b685a53d":"markdown","a6d70beb":"markdown","16e4450b":"markdown","dc1bec7f":"markdown","03feb23c":"markdown"},"source":{"379ea8a1":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","d54e368e":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","317ce79b":"df = pd.read_csv('\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv')\ndf.head()","0b2b6982":"df.info()","fc7fe50c":"# Checking for missing value\ndf.isna().sum()","35698b31":"df.describe()","b912e100":"df.columns","f020349b":"df['gender'].value_counts()","9381acf1":"plt.figure(figsize=(15,8))\ndf['gender'].value_counts().plot.pie(y='gender',autopct=\"%1.1f%%\",startangle=90,\n                                    cmap='Set3_r',fontsize=13,explode=[0.05]*2,shadow=True)\nplt.ylabel(\"\")\nplt.title(\"Gender Distribution\",fontsize=14,bbox={'facecolor':'blue','alpha':0.2})\nplt.show()","8e9775c8":"df['race\/ethnicity'].value_counts()","3fdcc621":"plt.figure(figsize=(12,8))\nsns.countplot(data=df, x='race\/ethnicity',order=df['race\/ethnicity'].value_counts().index,palette='Pastel1_r')\nplt.show()","d095c407":"plt.figure(figsize=(15,8))\ndf['race\/ethnicity'].value_counts().plot.pie(y='race\/ethnicity',autopct=\"%1.1f%%\",startangle=90,\n                                    cmap='Set2_r',fontsize=13,explode=[0.05]*5,shadow=True)\nplt.ylabel(\"\")\nplt.title(\"Race\/Ethnicity Distribution\",fontsize=14,bbox={'facecolor':'blue','alpha':0.2})\nplt.show()","10b02c16":"df['parental level of education'].value_counts()","f30134aa":"plt.figure(figsize=(12,8))\nsns.countplot(data=df, x='parental level of education',order=df['parental level of education'].value_counts().index,\n              palette='Pastel2_r')\nplt.show()","e2972ada":"df['lunch'].value_counts()","b7d397bb":"plt.figure(figsize=(15,8))\ndf['lunch'].value_counts().plot.pie(y='lunch',autopct=\"%1.1f%%\",\n                                                      cmap='Set3',startangle=90,fontsize=13,\n                                                     explode=[0.05]*2,shadow=True)\nplt.ylabel(\"\")\nplt.title(\"Standard VS. Free\/Reduced Lunch Price\",fontsize=14,bbox={'facecolor':'blue','alpha':0.2})\nplt.show()","421aee1e":"# 'test preparation course', 'math score', 'reading score','writing score'\ndf['test preparation course'].value_counts()","e156e236":"# Percentage Distribution\nplt.figure(figsize=(15,8))\ndf['test preparation course'].value_counts().plot.pie(y='test preparation course',autopct=\"%1.1f%%\",\n                                                      cmap='Pastel2',startangle=90,fontsize=13,\n                                                     explode=[0.05]*2,shadow=True)\nplt.title(\"Complete Test preparation course distribution\",fontsize=14,bbox={'facecolor':'blue','alpha':0.2})\nplt.ylabel(\"\")\nplt.show()","7b35fa0b":"# Taken test preparation course, seperated by gender\nplt.figure(figsize=(12,8))\nsns.countplot(data=df, x='test preparation course',hue='gender',order=df['test preparation course'].value_counts().index,\n              palette='Pastel1')\nplt.show()","43a91fbe":"plt.figure(figsize=(15,8))\nsns.boxplot(x=\"variable\", y=\"value\", data=pd.melt(df[['math score', 'reading score','writing score']]),\n           palette='viridis')\nplt.xticks(fontsize=13)\nplt.xlabel(\"\")\nplt.yticks(fontsize=13)\nplt.ylabel(\"Test Score\",fontsize=14)\nplt.show()","b40a4832":"# If I were to remove Outlier...\ndef removeOutlier(feature,new_df):\n    p25 = new_df[feature].quantile(0.25)\n    p75 = new_df[feature].quantile(0.75)\n    iqr = p75 - p25\n    \n    upper_limit = p75 + 1.5 * iqr\n    lower_limit = p25 - 1.5 * iqr\n    \n    new_df = new_df[(new_df[feature] > lower_limit) & (new_df[feature] < upper_limit)]\n    return new_df\n\nmath_df = removeOutlier('math score',df)\n\nreading_df = removeOutlier('reading score',df)\n\nwriting_df = removeOutlier('writing score',df)\n\nfig , (axm,axr,axw) = plt.subplots(3,1,sharex='col',figsize=(12,8))\nsns.boxplot(data=math_df,x='math score',ax=axm,color='pink')\nsns.boxplot(data=reading_df,x='reading score',ax=axr,color='darkturquoise')\nsns.boxplot(data=writing_df,x='writing score',ax=axw,color='tomato')\n\nfor ax,label in zip([axm,axr,axw],['Math Score','Reading Score','Writing Score']):\n    ax.set_xlabel(\"\")\n    ax.set_ylabel(label,fontsize=14)\n\nplt.xticks(fontsize=13)\nplt.tight_layout()\nplt.show()","575c8706":"# Correlation bewteen differnet test score\ndf[['math score', 'reading score','writing score']].corr()","c023a22a":"# Correlation - Heatmap\nplt.figure(dpi=100)\nsns.heatmap(df.corr(),mask=np.triu(df.corr()),annot=True,linewidth=3,linecolor='white',cmap=\"YlGnBu\")\nplt.yticks(rotation=0)\nplt.show()","5df27272":"# Score and Gender\nplt.figure(figsize=(15,8))\nsns.pairplot(df,hue='gender',diag_kind=\"hist\",markers=[\"o\",\"D\"],palette='Set1')\nplt.show()","601d09fa":"# Score and Test preparaction course\nplt.figure(figsize=(15,8))\nsns.pairplot(df,hue='test preparation course',diag_kind=\"hist\",markers=[\"o\",\"D\"],palette='Set2_r')\nplt.show()","9126b18a":"# Test preparation course and Score\nfig , (axm,axr,axw) = plt.subplots(3,1,sharex='col',figsize=(15,8))\nsns.histplot(data=df,x='math score',hue='test preparation course',alpha=0.5,\n             palette='viridis_r',multiple='dodge',ax=axm)\naxm.title.set_text('Math Score')\n\n\nsns.histplot(data=df,x='reading score',hue='test preparation course',alpha=0.5,\n             palette='inferno',multiple='dodge',ax=axr)\naxr.title.set_text('Reading Score')\n\n\nsns.histplot(data=df,x='writing score',hue='test preparation course',\n             palette='PRGn_r',alpha=0.5,multiple='dodge',ax=axw)\naxw.title.set_text('Writing Score')\n\nplt.tight_layout()\nplt.show()","2259b1f3":"df['parental level of education'].value_counts()","e1b5d65a":"# Three complete education levels and Score\nthree_education = df[df['parental level of education'].isin([\"master's degree\",\"high school\",\"bachelor's degree\"])]\n\nfig , (axm,axr,axw) = plt.subplots(3,1,sharex='col',figsize=(15,8))\nsns.kdeplot(data=three_education,x='math score',hue='parental level of education',\n            linewidth=0,fill=True,palette='bright',alpha=0.5,ax=axm)\naxm.title.set_text('Math Score')\n\nsns.kdeplot(data=three_education,x='reading score',hue='parental level of education',\n            linewidth=0,fill=True,palette='Set2',alpha=0.5,ax=axr)\naxr.title.set_text('Reading Score')\n\nsns.kdeplot(data=three_education,x='writing score',hue='parental level of education',\n            linewidth=0,fill=True,palette='Paired',alpha=0.5,ax=axw)\naxw.title.set_text('Writing Score')\n\nplt.xlabel(\"\")\nplt.tight_layout()\nplt.show()","0d70d60b":"# Three incomplete education levels and Score\nthree_education = df[df['parental level of education'].isin([\"some college\",\"associate's degree\",\"some high school\"])]\n\nfig , (axm,axr,axw) = plt.subplots(3,1,sharex='col',figsize=(15,8))\nsns.kdeplot(data=three_education,x='math score',hue='parental level of education',\n            linewidth=0,fill=True,palette='bright',alpha=0.5,ax=axm)\naxm.title.set_text('Math Score')\n\nsns.kdeplot(data=three_education,x='reading score',hue='parental level of education',\n            linewidth=0,fill=True,palette='Set2',alpha=0.5,ax=axr)\naxr.title.set_text('Reading Score')\n\nsns.kdeplot(data=three_education,x='writing score',hue='parental level of education',\n            linewidth=0,fill=True,palette='hls',alpha=0.5,ax=axw)\naxw.title.set_text('Writing Score')\n\nplt.xlabel(\"\")\nplt.tight_layout()\nplt.show()","16c077f4":"# Gender and Score\nfig , (axm,axr,axw) = plt.subplots(3,1,sharex='col',figsize=(15,8))\nsns.kdeplot(data=df, x='math score',hue='gender',fill=True,\n           common_norm=False,palette='crest',alpha=0.5,linewidth=0,ax=axm)\naxm.title.set_text('Math Score')\n\nsns.kdeplot(data=df, x='reading score',hue='gender',fill=True,\n           common_norm=False,palette='magma',alpha=0.5,linewidth=0,ax=axr)\naxr.title.set_text('Reading Score')\n\nsns.kdeplot(data=df, x='writing score',hue='gender',fill=True,\n           common_norm=False,palette='YlGn_r',alpha=0.5,linewidth=0,ax=axw)\naxw.title.set_text('Writing Score')\n\nplt.xlabel(\"\")\nplt.tight_layout()\nplt.show()","62900ee6":"# Average Score by Parental level education - Approach 1\nprint(\"Average Score by Parental Level Education\\n\")\nfor education_level in df['parental level of education'].value_counts().index:\n    print(education_level.capitalize(),\": \")\n    print('Math score: ',round(df[df['parental level of education'] == education_level]['math score'].mean(),2))\n    print('Reading score: ',round(df[df['parental level of education'] == education_level]['reading score'].mean(),2))\n    print('Writing score: ',round(df[df['parental level of education'] == education_level]['writing score'].mean(),2))\n    print()","2776cbdf":"# Average Score by Parental level education - Approach 2\navr_score_edu = df[['math score','reading score','writing score']].groupby(df['parental level of education']).mean()\navr_score_edu","8315353d":"avr_score_edu.sort_values(by='math score',ascending = False)['math score']","330d9328":"avr_score_edu.sort_values(by='reading score',ascending = False)['reading score']","dc144ead":"avr_score_edu.sort_values(by='writing score',ascending = False)['writing score']","cb473980":"avr_score_edu.plot(kind='bar',cmap='viridis',figsize=(15,8))\nplt.ylabel(\"Average Score\")\nplt.show()","e25d4fe4":"master_df = df[df['parental level of education'] == \"master's degree\"]\nmaster_df.head()","8e380697":"# Gender Distribution (Parents have Master's degree)\nplt.figure(figsize=(15,8))\nmaster_df['gender'].value_counts().plot.pie(y='gender',autopct=\"%1.1f%%\",startangle=90,\n                                    cmap='icefire',fontsize=13,explode=[0.05]*2,shadow=True)\nplt.ylabel(\"\")\nplt.title(\"Gender Distribution (Parents have Master's degree)\",fontsize=14,bbox={'facecolor':'blue','alpha':0.2})\nplt.show()","30afc0c2":"plt.figure(figsize=(15,8))\nmaster_df['race\/ethnicity'].value_counts().plot.pie(y='race\/ethnicity',autopct=\"%1.1f%%\",startangle=90,\n                                    cmap='Set2_r',fontsize=13,explode=[0.08]*5,shadow=True)\nplt.ylabel(\"\")\nplt.title(\"Race\/Ethnicity Distribution (Parents have Master's degree)\",fontsize=14,bbox={'facecolor':'blue','alpha':0.2})\nplt.show()","445b137e":"# Preparation for the test (Parents have Master's degree)\nplt.figure(figsize=(15,8))\nmaster_df['test preparation course'].value_counts().plot.pie(y='test preparation course',autopct=\"%1.1f%%\",startangle=90,\n                                    cmap='Pastel2',fontsize=13,explode=[0.05]*2,shadow=True)\nplt.ylabel(\"\")\nplt.title(\"Test Preparation Course (Parents have Master's degree)\",fontsize=14,bbox={'facecolor':'blue','alpha':0.2})\nplt.show()","b5139442":"# Race\/Ethnicity and Test Preparation Course\nplt.figure(figsize=(15,8))\nax = sns.countplot(data=master_df,x='race\/ethnicity',hue='test preparation course',palette='Set2_r')\n\nfor p in ax.patches:\n        ax.annotate('{:.0f}'.format(p.get_height()),\n                    (p.get_x()+0.15, p.get_height()+0.2), fontsize=12)\n\nplt.show()","d5157ca4":"math_race = master_df['math score'].groupby(master_df['race\/ethnicity']).mean().to_frame()\nreading_race = master_df['reading score'].groupby(master_df['race\/ethnicity']).mean().to_frame()\nwriting_race = master_df['writing score'].groupby(master_df['race\/ethnicity']).mean().to_frame()\n\nfig, (axm,axr,axw) = plt.subplots(3,1,figsize=(15,12))\n\nsns.barplot(data=math_race,y=math_race.index,x='math score',palette='Set2',ax=axm)\n\nsns.barplot(data=reading_race,y=reading_race.index,x='reading score',palette='magma',ax=axr)\n\nsns.barplot(data=writing_race,y=writing_race.index,x='writing score',palette='Pastel2_r',ax=axw)\n\nplt.tight_layout()\nplt.show()","91985954":"new_df = df.copy()\n\n# Creating new column to store average total score for each students\nnew_df['Average Total Score'] = (new_df['math score'] + new_df['reading score'] + new_df['writing score'])\/3\n\n# Grading Scale I got from the internet\ndef letterGrade(score):\n    if 80 <= score: \n        return 'A'\n    elif 65 <= score: \n        return 'B'\n    elif 55 <= score: \n        return 'C'\n    elif 50 <= score: \n        return 'D'\n    else: \n        return 'F'\n\n# Apply the letterGrade function to get letter grade for each students\nnew_df['Letter Grade'] = new_df['Average Total Score'].apply(lambda score: letterGrade(score))\nnew_df.head()","e4c8167b":"# Letter Grade and Test Preparation Course\nplt.figure(figsize=(15,8))\nax = sns.countplot(data=new_df,x='Letter Grade',hue='test preparation course',palette='Set3_r',\n             order = ['A','B','C','D','F'])\n\nfor p in ax.patches:\n        ax.annotate('{:.0f}'.format(p.get_height()),\n                    (p.get_x()+0.15, p.get_height()+0.5), fontsize=12)\n\nplt.show()","70fe31ae":"# Letter Grade and Gender\nplt.figure(figsize=(15,8))\nax = sns.countplot(data=new_df,x='Letter Grade',hue='gender',palette='coolwarm',\n             order = ['A','B','C','D','F'])\n\nfor p in ax.patches:\n        ax.annotate('{:.0f}'.format(p.get_height()),\n                    (p.get_x()+0.15, p.get_height()+0.5), fontsize=12)\n\nplt.show()","ed7069b4":"# Letter Grade and Parental level of education\nplt.figure(figsize=(15,8))\nax = sns.countplot(data=new_df,x='Letter Grade',hue='parental level of education',palette='rainbow_r',\n             order = ['A','B','C','D','F'])\n\nfor p in ax.patches:\n        ax.annotate('{:.0f}'.format(p.get_height()),\n                    (p.get_x()+0.02, p.get_height()+0.5), fontsize=12)\n\nplt.show()","09242691":"# Letter Grade and Race\/Ethnicity\nplt.figure(figsize=(15,8))\nax = sns.countplot(data=new_df,x='Letter Grade',hue='race\/ethnicity',palette='gist_ncar_r',\n             order = ['A','B','C','D','F'])\n\nfor p in ax.patches:\n        ax.annotate('{:.0f}'.format(p.get_height()),\n                    (p.get_x()+0.02, p.get_height()+0.5), fontsize=12)\n\nplt.show()","3cdf2ca8":"# Letter Grade and lunch\nplt.figure(figsize=(15,8))\nax = sns.countplot(data=new_df,x='Letter Grade',hue='lunch',palette='viridis_r',\n             order = ['A','B','C','D','F'])\n\nfor p in ax.patches:\n        ax.annotate('{:.0f}'.format(p.get_height()),\n                    (p.get_x()+0.15, p.get_height()+1), fontsize=12)\n\nplt.show()","c5026bd4":"### Gender","58b83815":"### Test Preparation Course and Test Score","40ad3293":"### Race\/Ethnicity","501514fe":"# All Test Score","08638b30":"### Lunch","bb25f7f3":"### Test Preparation Course","6fc34944":"# Evaluate Students \"Letter\" Grade","fbddca1f":"### Parental Level Education and Average Test Score","f1c7d7e9":"### Score Correlation","1e984b5c":"### Parental level of education","b685a53d":"### Parental Level of Education (Master's degree)","a6d70beb":"### Gender and Score","16e4450b":"# Thank you for checking out my notebook!","dc1bec7f":"# Students Perfromance in Exams Visualization","03feb23c":"### Parental Level of Education and Test Score "}}