{"cell_type":{"2e91cd0e":"code","3544c6c5":"code","f0bbb14d":"code","71e8b2b3":"code","8cfbcc1f":"code","58f324a6":"code","ae7840aa":"code","d98d3d58":"code","4f28ea40":"code","75221e1c":"code","9f656279":"code","2558ac76":"code","dbae3bb0":"code","a44a8fbd":"code","00909329":"code","230325c7":"code","16f0d6a5":"code","627db744":"code","44856aa7":"code","d35e4266":"code","4c9525a6":"code","78cf6382":"code","7ffca891":"code","b13ad500":"code","cbfa850b":"code","4a37479e":"code","804db75f":"code","c0848ed4":"code","229b688d":"code","1d73c4e3":"markdown","37b9ba4f":"markdown","d4927ccd":"markdown","547ae085":"markdown","bbea5ae9":"markdown","0c9bbad2":"markdown","a6a92bbb":"markdown","b329a10b":"markdown","0911a1b1":"markdown","49a87f26":"markdown","387a76c1":"markdown","e1ad8fc1":"markdown"},"source":{"2e91cd0e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport sklearn\nfrom sklearn import metrics\n\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import cross_val_score\n\nfrom sklearn.neighbors import KNeighborsClassifier\n\nfrom sklearn.naive_bayes import GaussianNB, BernoulliNB\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.naive_bayes import GaussianNB\n","3544c6c5":"from sklearn.model_selection import train_test_split\ndata = pd.read_csv('..\/input\/caravan-insurance-challenge\/caravan-insurance-challenge.csv')\ndata","f0bbb14d":"data_check = data.isnull().sum()\nprint(data_check)","71e8b2b3":"data_val = data[data['ORIGIN']=='test']\ndata_val.head(10)","8cfbcc1f":"data_t = data[data['ORIGIN']=='train']\ndata_t.head(10)\ndata_t1 = data_t[data_t['CARAVAN']==1]\ndata_t0 = data_t[data_t['CARAVAN']==0]","58f324a6":"X=data_t.drop(['ORIGIN','CARAVAN'], axis=1)\nY=data_t['CARAVAN']\n\nX_val =data_val.drop(['ORIGIN','CARAVAN'], axis=1)\nY_val= data_val['CARAVAN']\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, target_train, target_test = train_test_split(X,Y,test_size=0.2,random_state=123)","ae7840aa":"fig, ax=plt.subplots()\nax.spines['top'].set_visible(False)  \nax.spines['right'].set_visible(False)\nplt.hist(data_t['MOPLHOOG'],bins=19,color='#41a7de')\nplt.grid(color='#95a5a6',linestyle='--', linewidth=1,axis='y',alpha=0.4)\nplt.title(\"Histogram of High level education\")\nplt.xlabel(\"Precentage level of High level education\")\nplt.ylabel(\"Frequency\")\nplt.show()","d98d3d58":"fig, ax=plt.subplots()\nax.spines['top'].set_visible(False)  \nax.spines['right'].set_visible(False)\nplt.hist(data_t['MAANTHUI'],bins=19,color='#41a7de')\nplt.grid(color='#95a5a6',linestyle='--', linewidth=1,axis='y',alpha=0.4)\nplt.title(\"Histogram of Number of houses\")\nplt.xlabel(\"Number of houses\")\nplt.ylabel(\"Frequency\")\nplt.show()","4f28ea40":"a=data_t.pivot(columns = 'CARAVAN',values = 'MOPLHOOG').plot.hist(color=['#AAA8A8','#ED7014'],stacked = True,bins=19)\nplt.grid(color='#95a5a6',linestyle='--', linewidth=1,axis='y',alpha=0.4)\nplt.grid(color='#95a5a6',linestyle='--', linewidth=1,axis='x',alpha=0)\nplt.xlabel('Percentage level of High level education')\nplt.ylabel(\"count\")\nplt.title(\"High level education\")","75221e1c":"a=data_t.pivot(columns = 'CARAVAN',values = 'MAANTHUI').plot.hist(color=['#95a5a6','#ED7014'],stacked = True,bins=19)\n#a.set_axis_bgcolor('w')\nplt.grid(color='#95a5a6',linestyle='--', linewidth=1,axis='y',alpha=0.4)\nplt.grid(color='#95a5a6',linestyle='--', linewidth=1,axis='x',alpha=0)\nplt.xlabel('Number of houses')\nplt.ylabel(\"count\")\nplt.title(\"Number of houses\")","9f656279":"data_t.corr()\nplt.figure(figsize=(6, 5))\nsns.heatmap(data_t.corr())","2558ac76":"f,axs=plt.subplots(1,2,figsize=(12,6))\nsns.heatmap(data_t.iloc[:,1:44].corr(),ax=axs[0],vmin=-2, vmax=2,cbar=None)\nsns.heatmap(data_t.iloc[:,44:-1].corr(),ax=axs[1],vmin=-2, vmax=2,cbar=None)","dbae3bb0":"clf_DT = DecisionTreeClassifier(max_depth = 4)\nclf_DT.fit(X_train, target_train)","a44a8fbd":"cross_val_score(clf_DT, X_train, target_train, cv=10)","00909329":"clf_DT.score(X_train,target_train)","230325c7":"clf_DT.score(X_test,target_test)","16f0d6a5":"clf_DT.score(X_val,Y_val)","627db744":"clf_knn = KNeighborsClassifier(n_neighbors=3)\nclf_knn.fit(X_train, target_train)\n","44856aa7":"clf_knn.score(X_train, target_train)","d35e4266":"clf_knn.score(X_test, target_test)","4c9525a6":"clf_knn.score(X_val, Y_val)","78cf6382":"clf_Gauss = GaussianNB()\nclf_Gauss.fit(X_train, target_train)","7ffca891":"clf_Gauss.score(X_train, target_train)","b13ad500":"clf_Gauss.score(X_test, target_test)","cbfa850b":"clf_Gauss.score(X_val, Y_val)","4a37479e":"clf_Bernoulli = BernoulliNB()\nclf_Bernoulli.fit(X_train, target_train)","804db75f":"clf_Bernoulli.score(X_train, target_train)","c0848ed4":"clf_Bernoulli.score(X_test, target_test)","229b688d":"clf_Bernoulli.score(X_val, Y_val)","1d73c4e3":"# **K NEIGHBORS NEAREST**","37b9ba4f":"# IMPORT PACKAGES","d4927ccd":"# **Naive Bayes**","547ae085":"**Histogram**","bbea5ae9":"**Gaussian**","0c9bbad2":"**Heatmap**","a6a92bbb":"# **DECISION TREE**","b329a10b":"# Data Visualization","0911a1b1":"# Preprocessing","49a87f26":"# READ THE DATA","387a76c1":"# Handling Missing Data","e1ad8fc1":"**Bernoulli**"}}