{"cell_type":{"c3850404":"code","10646523":"code","56881cab":"code","dae07633":"code","c079e297":"code","f2d9039e":"code","cff7091b":"code","f99bc0f6":"code","819b564e":"code","ce8bc76b":"code","31458c72":"code","a39c2e02":"code","60273890":"code","9c3cff8c":"code","3eeff8ce":"code","096cf827":"code","8cbe1d14":"code","59f5f09b":"code","e1e30c91":"code","b2d2b49c":"code","60fcdbcd":"code","5fc12d9c":"code","b2899470":"code","fe6186a3":"code","a931783d":"code","40cad98f":"code","6fc20d3f":"code","ef2a2609":"code","0ea1944e":"code","20e37705":"code","afa8bafe":"code","6acb33ec":"code","147121d0":"code","6db01205":"code","b72bc45e":"code","d88320b8":"code","29230013":"code","941f08f8":"code","2bd0aeb7":"code","520af99e":"code","1e5e74d9":"code","642a4ca6":"code","a656217e":"code","31832cfa":"code","db9aff9f":"code","2f5ad5ec":"code","9758ef2a":"code","e7213bae":"code","978b3544":"code","4b68008c":"code","a6263bbc":"code","d8b93b91":"code","63ba9691":"code","5ee41f0b":"code","afadf259":"code","db66db7c":"code","6f68893a":"code","fa7f3375":"code","d5d77dd1":"code","f0553013":"code","2f9fcf0e":"code","20e1d8a8":"code","b2e2b139":"code","984f6af6":"code","04792846":"code","599a6769":"code","20459902":"code","edd909fb":"code","04e3fa40":"code","95bb8ad4":"code","012fd4c2":"code","651b0282":"code","50f25b79":"code","102ee0b4":"code","274dc008":"code","f9e71f39":"code","0b99693c":"code","bfbd160c":"code","a213a07d":"code","cd448a06":"code","325d55c4":"code","d443ce4e":"code","7054bcde":"code","48448b95":"code","411e530f":"code","eeeb2547":"code","5683a880":"code","29254327":"code","6a69e286":"code","4f778697":"code","cf1d989f":"code","a1106e7d":"code","f418e9a2":"code","c7604a29":"code","d2b86f36":"code","dcfabd53":"code","0e4e3f66":"code","18952203":"code","c911286b":"code","f9cb547b":"code","55934f61":"code","bdfcd9fc":"code","46fc575b":"code","ed2dc39a":"code","b0090855":"code","43cc4053":"code","80c0e792":"code","5341c4e6":"code","1b864495":"code","55fa49c4":"code","1957e45f":"code","d5657106":"code","1a6ede10":"code","cf785156":"markdown","30da1c54":"markdown","91fc69b9":"markdown","303c11dd":"markdown","cfeb4ff4":"markdown","ec68211b":"markdown","c94a3d64":"markdown","e1f1372f":"markdown","0c07b1ed":"markdown","1fdb9c08":"markdown","054091c3":"markdown","21e4a4d1":"markdown","ed5a0f86":"markdown","959e38d8":"markdown","64557fda":"markdown","1750a9ae":"markdown","c126fb99":"markdown","7ea64476":"markdown","8dcebcfa":"markdown","69a6a50b":"markdown","82fbfb80":"markdown","84dddd80":"markdown","d729c2fa":"markdown","d237bc30":"markdown","807b1485":"markdown","ad8f0cd1":"markdown","8cdfbf63":"markdown","d2ab5a6d":"markdown","a6b91c72":"markdown","0c3ef348":"markdown","26f5417f":"markdown"},"source":{"c3850404":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt           \nimport plotly.express as px\nimport matplotlib.pyplot as plt","10646523":"data_base = pd.read_csv('..\/input\/heart-failure-prediction\/heart.csv')","56881cab":"data_base","dae07633":"sns.heatmap(data_base.isnull());","c079e297":"data_base.info()","f2d9039e":"fig=px.histogram(data_base,x='ChestPainType',color='HeartDisease',template='plotly_dark')\nfig.show()","cff7091b":"fig=px.histogram(data_base,x='Age',color='HeartDisease',template='plotly_dark')\nfig.show()","f99bc0f6":"fig=px.histogram(data_base,x='Sex',color='HeartDisease',template='plotly_dark')\nfig.show()","819b564e":"fig=px.histogram(data_base,x='Sex',color='ExerciseAngina',template='plotly_dark')\nfig.show()","ce8bc76b":"from sklearn.preprocessing import LabelEncoder\n\nlabel=LabelEncoder()\n\ndata_base['Sex']=label.fit_transform(data_base['Sex'])\ndata_base['RestingECG']=label.fit_transform(data_base['RestingECG'])\ndata_base['ChestPainType']=label.fit_transform(data_base['ChestPainType'])\ndata_base['ExerciseAngina']=label.fit_transform(data_base['ExerciseAngina'])\ndata_base['ST_Slope']=label.fit_transform(data_base['ST_Slope'])\n\ndata_base.head()\n","31458c72":"data_base.ChestPainType.unique()","a39c2e02":"correlations = data_base.corr()\nf, ax = plt.subplots(figsize = (20,20))\nsns.heatmap(correlations, annot=True)\ncorrelations.round(2);","60273890":"X_base = data_base.iloc[:, 0:11]","9c3cff8c":"y_base = data_base.iloc[:, 11]\nprint(y_base)","3eeff8ce":"df_X = list(X_base.columns)\nprint(df_X)","096cf827":"X_base = X_base.values\ny_base = y_base.values","8cbe1d14":"X_base","59f5f09b":"y_base","e1e30c91":"from sklearn.preprocessing import StandardScaler  \nscaler_base = StandardScaler()\n\nX_base = scaler_base.fit_transform(X_base) ","b2d2b49c":"from sklearn.model_selection import train_test_split","60fcdbcd":"X_base_treinamento, X_base_teste, y_base_treinamento, y_base_teste = train_test_split(X_base, y_base, test_size = 0.25, random_state = 0)","5fc12d9c":"X_base_teste.shape ","b2899470":"X_base_treinamento.shape ","fe6186a3":"y_base_treinamento.shape","a931783d":"X_base_teste.shape, y_base_teste.shape","40cad98f":"from sklearn.tree import DecisionTreeClassifier","6fc20d3f":"arvore_base = DecisionTreeClassifier(criterion='entropy', random_state = 0)\narvore_base.fit(X_base_treinamento, y_base_treinamento)","ef2a2609":"previsoes = arvore_base.predict(X_base_teste)\nprevisoes","0ea1944e":"y_base_teste","20e37705":"from sklearn.metrics import accuracy_score, classification_report","afa8bafe":"accuracy_score(y_base_teste, previsoes)","6acb33ec":"from yellowbrick.classifier import ConfusionMatrix\ncm = ConfusionMatrix(arvore_base)\ncm.fit(X_base_treinamento, y_base_treinamento)\ncm.score(X_base_teste, y_base_teste)","147121d0":"print(classification_report(y_base_teste, previsoes))","6db01205":"from sklearn.ensemble import RandomForestClassifier    ","b72bc45e":"random_forest_base = RandomForestClassifier(n_estimators=40, criterion='entropy', random_state = 0)\nrandom_forest_base.fit(X_base_treinamento, y_base_treinamento)","d88320b8":"previsoes = random_forest_base.predict(X_base_teste)     \nprevisoes","29230013":"y_base_teste ","941f08f8":"accuracy_score(y_base_teste, previsoes)","2bd0aeb7":"from yellowbrick.classifier import ConfusionMatrix\ncm = ConfusionMatrix(random_forest_base)\ncm.fit(X_base_treinamento, y_base_treinamento)\ncm.score(X_base_teste, y_base_teste)                    ","520af99e":"print(classification_report(y_base_teste, previsoes))","1e5e74d9":"from sklearn.neighbors import KNeighborsClassifier","642a4ca6":"X_base_treinamento.shape, y_base_treinamento.shape","a656217e":"X_base_teste.shape, y_base_teste.shape","31832cfa":"knn_base = KNeighborsClassifier(n_neighbors=5, metric='minkowski', p = 2)\nknn_base.fit(X_base_treinamento, y_base_treinamento)  ","db9aff9f":"previsoes = knn_base.predict(X_base_teste)\nprevisoes","2f5ad5ec":"y_base_teste","9758ef2a":"\naccuracy_score(y_base_teste, previsoes) ","e7213bae":"cm = ConfusionMatrix(knn_base)\ncm.fit(X_base_treinamento, y_base_treinamento)\ncm.score(X_base_teste, y_base_teste)","978b3544":"print(classification_report(y_base_teste, previsoes))","4b68008c":"from sklearn.linear_model import LogisticRegression","a6263bbc":"logistic_base = LogisticRegression(random_state=1)\nlogistic_base.fit(X_base_treinamento, y_base_treinamento)","d8b93b91":"logistic_base.intercept_","63ba9691":"logistic_base.coef_","5ee41f0b":"previsoes = logistic_base.predict(X_base_teste)\nprevisoes","afadf259":"y_base_teste","db66db7c":"accuracy_score(y_base_teste, previsoes)","6f68893a":"cm = ConfusionMatrix(logistic_base)\ncm.fit(X_base_treinamento, y_base_treinamento)\ncm.score(X_base_teste, y_base_teste)","fa7f3375":"print(classification_report(y_base_teste, previsoes))","d5d77dd1":"from sklearn.svm import SVC","f0553013":"svm_base = SVC(kernel='rbf', random_state=1, C = 2.0)              \nsvm_base.fit(X_base_treinamento, y_base_treinamento)","2f9fcf0e":"previsoes = svm_base.predict(X_base_teste)\nprevisoes","20e1d8a8":"y_base_teste","b2e2b139":"\naccuracy_score(y_base_teste, previsoes)","984f6af6":"cm = ConfusionMatrix(svm_base)\ncm.fit(X_base_treinamento, y_base_treinamento)\ncm.score(X_base_teste, y_base_teste)","04792846":"print(classification_report(y_base_teste, previsoes))","599a6769":"from sklearn.neural_network import MLPClassifier","20459902":"X_base_treinamento.shape, y_base_treinamento.shape","edd909fb":"X_base_teste.shape, y_base_teste.shape","04e3fa40":"rede_neural_base = MLPClassifier(max_iter=1200, verbose=True, tol=0.000100, \n                                   solver = 'adam', activation = 'relu',\n                                    hidden_layer_sizes = (20,20)) \nrede_neural_base.fit(X_base_treinamento, y_base_treinamento)","95bb8ad4":"previsoes = rede_neural_base.predict(X_base_teste)\nprevisoes","012fd4c2":"y_base_teste","651b0282":"\naccuracy_score(y_base_teste, previsoes)","50f25b79":"cm = ConfusionMatrix(rede_neural_base)\ncm.fit(X_base_treinamento, y_base_treinamento)\ncm.score(X_base_teste, y_base_teste)","102ee0b4":"print(classification_report(y_base_teste, previsoes))","274dc008":"from sklearn.model_selection import GridSearchCV          \n\n","f9e71f39":"X_base = np.concatenate((X_base_treinamento, X_base_teste), axis = 0) \nX_base.shape","0b99693c":"y_base = np.concatenate((y_base_treinamento, y_base_teste), axis = 0)\ny_base.shape","bfbd160c":"class color:\n   BLUE = '\\033[94m'\n   END = '\\033[0m'","a213a07d":"parametros = {'criterion': ['gini', 'entropy'],\n              'splitter': ['best', 'random'],\n              'min_samples_split': [2, 5, 10],   \n              'min_samples_leaf': [1, 5, 10]}","cd448a06":"grid_search = GridSearchCV(estimator=DecisionTreeClassifier(), param_grid=parametros)\ngrid_search.fit(X_base, y_base)\nmelhores_parametros = grid_search.best_params_\nmelhor_resultado = grid_search.best_score_\nprint(melhores_parametros)\nprint(color.BLUE + 'Melhores Resultados \/ Better results = ',(melhor_resultado * 100),'%' + color.END)","325d55c4":"parametros = {'criterion': ['gini', 'entropy'],      \n              'n_estimators': [10, 40, 100, 150],    \n              'min_samples_split': [2, 5, 10],\n              'min_samples_leaf': [1, 5, 10]}","d443ce4e":"grid_search = GridSearchCV(estimator=RandomForestClassifier(), param_grid=parametros)\ngrid_search.fit(X_base, y_base)\nmelhores_parametros = grid_search.best_params_\nmelhor_resultado = grid_search.best_score_\nprint(melhores_parametros)\nprint(color.BLUE + 'Melhores Resultados \/ Better results = ',(melhor_resultado * 100),'%' + color.END)","7054bcde":"parametros = {'n_neighbors': [3, 5, 10, 20],      \n              'p': [1, 2]}","48448b95":"grid_search = GridSearchCV(estimator=KNeighborsClassifier(), param_grid=parametros)\ngrid_search.fit(X_base, y_base)\nmelhores_parametros = grid_search.best_params_\nmelhor_resultado = grid_search.best_score_\nprint(melhores_parametros)\nprint(color.BLUE + 'Melhores Resultados \/ Better results = ',(melhor_resultado * 100),'%' + color.END)","411e530f":"parametros = {'tol': [0.0001, 0.00001, 0.000001],\n              'C': [1.0, 1.5, 2.0],\n              'solver': ['lbfgs', 'sag', 'saga']}","eeeb2547":"grid_search = GridSearchCV(estimator=LogisticRegression(), param_grid=parametros)\ngrid_search.fit(X_base, y_base)\nmelhores_parametros = grid_search.best_params_\nmelhor_resultado = grid_search.best_score_\nprint(melhores_parametros)\nprint(color.BLUE + 'Melhores Resultados \/ Better results = ',(melhor_resultado * 100),'%' + color.END)","5683a880":"parametros = {'tol': [0.001, 0.0001, 0.00001],\n              'C': [1.0, 1.5, 2.0],\n              'kernel': ['rbf', 'linear', 'poly', 'sigmoid']}","29254327":"grid_search = GridSearchCV(estimator=SVC(), param_grid=parametros)\ngrid_search.fit(X_base, y_base)\nmelhores_parametros = grid_search.best_params_\nmelhor_resultado = grid_search.best_score_\nprint(melhores_parametros)\nprint(color.BLUE + 'Melhores Resultados \/ Better results = ',(melhor_resultado * 100),'%' + color.END)","6a69e286":"parametros = {'activation': ['relu', 'logistic', 'tahn'],\n              'solver': ['adam', 'sgd'],\n              'batch_size': [10, 56]}","4f778697":"grid_search = GridSearchCV(estimator=MLPClassifier(), param_grid=parametros)\ngrid_search.fit(X_base, y_base)\nmelhores_parametros = grid_search.best_params_\nmelhor_resultado = grid_search.best_score_","cf1d989f":"print(melhores_parametros)\nprint(color.BLUE + 'Melhores Resultados \/ Better results = ',(melhor_resultado * 100),'%' + color.END)","a1106e7d":"from sklearn.model_selection import cross_val_score, KFold\n","f418e9a2":"resultados_arvore = []\nresultados_random_forest = []\nresultados_knn = []\nresultados_logistica = []\nresultados_svm = []\nresultados_rede_neural = []\n\nfor i in range(30):\n  kfold = KFold(n_splits=10, shuffle=True, random_state=i)\n  arvore = DecisionTreeClassifier(criterion='entropy', min_samples_leaf=1, min_samples_split=5, splitter='best')\n  scores = cross_val_score(arvore, X_base, y_base, cv = kfold)                                  \n  resultados_arvore.append(scores.mean()) \n\n  random_forest = RandomForestClassifier(criterion = 'entropy', min_samples_leaf = 1, min_samples_split=5, n_estimators = 10)\n  scores = cross_val_score(random_forest, X_base, y_base, cv = kfold)\n  resultados_random_forest.append(scores.mean())\n\n  knn = KNeighborsClassifier()\n  scores = cross_val_score(knn, X_base, y_base, cv = kfold)\n  resultados_knn.append(scores.mean())\n\n  logistica = LogisticRegression(C = 1.0, solver = 'lbfgs', tol = 0.0001)\n  scores = cross_val_score(logistica, X_base, y_base, cv = kfold)\n  resultados_logistica.append(scores.mean())\n\n  svm = SVC(kernel = 'rbf', C = 2.0)\n  scores = cross_val_score(svm, X_base, y_base, cv = kfold)\n  resultados_svm.append(scores.mean())\n\n  rede_neural = MLPClassifier(activation = 'relu', batch_size = 56, solver = 'adam')\n  scores = cross_val_score(rede_neural, X_base, y_base, cv = kfold)\n  resultados_rede_neural.append(scores.mean())\n\n\n","c7604a29":"resultados = pd.DataFrame({'Arvore': resultados_arvore, 'Random forest': resultados_random_forest,                 \n                           'KNN': resultados_knn, 'Logistica': resultados_logistica,\n                           'SVM': resultados_svm, 'Rede neural': resultados_rede_neural})\nresultados","d2b86f36":"resultados.describe()","dcfabd53":"from scipy.stats import shapiro ","0e4e3f66":"shapiro(resultados_arvore), shapiro(resultados_random_forest), shapiro(resultados_knn), shapiro(resultados_logistica), shapiro(resultados_svm), shapiro(resultados_rede_neural)","18952203":"sns.displot(resultados_arvore, kind = 'kde');","c911286b":"sns.displot(resultados_random_forest, kind = 'kde');","f9cb547b":"sns.displot(resultados_knn, kind = 'kde');","55934f61":"sns.displot(resultados_logistica, kind = 'kde');","bdfcd9fc":"sns.displot(resultados_svm, kind = 'kde');","46fc575b":"sns.displot(resultados_rede_neural, kind = 'kde');","ed2dc39a":"from scipy.stats import f_oneway","b0090855":"_, p = f_oneway(resultados_arvore, resultados_random_forest, resultados_knn, resultados_logistica, resultados_svm, resultados_rede_neural)","43cc4053":"alpha = 0.05 \nif p <= alpha:\n  print('Hip\u00f3tese nula rejeitada. Dados s\u00e3o diferentes')\nelse:\n  print('Hip\u00f3tese alternativa rejeitada. Resultados s\u00e3o iguais')","80c0e792":"resultados_algoritmos = {'accuracy': np.concatenate([resultados_arvore, resultados_random_forest, resultados_knn, resultados_logistica, resultados_svm, resultados_rede_neural]),\n                             'algoritmo':['arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore','arvore', \n    'random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest','random_forest',\n                              'knn','knn','knn','knn','knn','knn','knn','knn','knn','knn','knn','knn','knn','knn','knn','knn','knn','knn','knn','knn','knn','knn','knn','knn','knn','knn','knn','knn','knn','knn',                              'logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica','logistica',\n                              'svm','svm','svm','svm','svm','svm','svm','svm','svm','svm','svm','svm','svm','svm','svm','svm','svm','svm','svm','svm','svm','svm','svm','svm','svm','svm','svm','svm','svm','svm',                              'rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural','rede_neural']}","5341c4e6":"resultados_df = pd.DataFrame(resultados_algoritmos)\nresultados_df","1b864495":"from statsmodels.stats.multicomp import MultiComparison","55fa49c4":"compara_algoritmos = MultiComparison(resultados_df['accuracy'], resultados_df['algoritmo'])","1957e45f":"teste_estatistico = compara_algoritmos.tukeyhsd()\nprint(color.BLUE + 'Melhores Resultados \/ Better results = ',(teste_estatistico),'%' + color.END)","d5657106":"resultados.mean() * 100","1a6ede10":"teste_estatistico.plot_simultaneous();","cf785156":"# **Decision tree**\n# **\u00c1vore de Decis\u00e3o**","30da1c54":"# **Random Forest**","91fc69b9":"In SVM we had better results, being the supervised machine learning algorithm and classification more suitable for this case study, as it is a small dataset.\n\nNo SVM tivemos melhores resultados, sendo o algoritimo de aprendizagem de m\u00e1quina supervisionado e classifica\u00e7\u00e3o mais indicado para este caso de estudo, pois \u00e9 um conjunto de dados pequeno.\n\n","303c11dd":"We have a result of 86%;\n\nTivermos um resultado de 86%;","cfeb4ff4":"Our goal in the results is the last attribute, heart disease.\n\nNosso objetivo nos resultados \u00e9 o \u00faltimo atributo, doen\u00e7a card\u00edaca.","ec68211b":"# **Decision tree**\n\n# **\u00c1rvore de Decis\u00e3o**","c94a3d64":"# **Class division and pre-processing**\n\n# **Divis\u00e3o de classes e pr\u00e9-processamento**","e1f1372f":"# **Normality test in results \/ Normalization \/ Static test**\n\nThis type of test is used to compare 3 or more groups when there are independent samples, when a set of values is independent of the other values;\n\nWe can use a quantitative variable and one or more categorical variables;\n\nData must be in the normal distribution;\n\nThe objective is to buy the variation within the value group itself and then compare the variation with the other groups;\n\n# **Teste de hip\u00f3tese com a ANOVA e Tukey  \/Comparativo de Resultados**\n\nEsse tipo de teste utilizamos para o comparativo entre 3 ou mais grupos quando se tem amostras independentes, quando um conjunto de valores \u00e9 independente dos outros valores;\n\nPodemos utilizar uma variavel quantitativa e um ou mais v\u00e1riavel categ\u00f3ricas;\n\nOs dados devem estar na distribui\u00e7\u00e3o normal;\n\nO objetivo \u00e9 comprar a varia\u00e7\u00e3o dentro do pr\u00f3prio grupo de valores e depois comparar a varia\u00e7\u00e3o com os outros grupos;","0c07b1ed":"# ***Introdu\u00e7\u00e3o***\n\nEm meus casos de estudo procuro manter a escrita no idioma ingl\u00eas por ser utilizado no Kaggle, mas mantenho em portugu\u00eas devido ao fato da minha l\u00edngua nativa ser o portugu\u00eas brasileiro, assim podemos compartilhar mais conhecimento e experi\u00eancias no Kaggle com nossos colegas brasileiros.\n\nVamos desenvolver e analisar os algoritimos  com a melhor capacidade e identificar os problemas no cora\u00e7\u00e3o e ao final iremos realizar um comparativo entre eles.\n\nDescri\u00e7\u00e3o\n\nContexto\n\nAs doen\u00e7as cardiovasculares (DCVs) s\u00e3o a causa n\u00famero 1 de morte em todo o mundo, levando cerca de 17,9 milh\u00f5es de vidas a cada ano, o que representa 31% de todas as mortes em todo o mundo. Quatro em cada 5 mortes por DCV s\u00e3o devido a ataques card\u00edacos e derrames, e um ter\u00e7o dessas mortes ocorrem prematuramente em pessoas com menos de 70 anos de idade. A insufici\u00eancia card\u00edaca \u00e9 um evento comum causado por DCVs e este conjunto de dados cont\u00e9m 11 recursos que podem ser usados \u200b\u200bpara prever uma poss\u00edvel doen\u00e7a card\u00edaca.\n\nPessoas com doen\u00e7as cardiovasculares ou que apresentam alto risco cardiovascular (devido \u00e0 presen\u00e7a de um ou mais fatores de risco, como hipertens\u00e3o, diabetes, hiperlipidemia ou doen\u00e7a j\u00e1 estabelecida) precisam de detec\u00e7\u00e3o e gerenciamento precoces, em que um modelo de aprendizado de m\u00e1quina pode ser de grande ajuda.\n\n\nInforma\u00e7\u00e3o de Atributo\n\n1 -Idade: idade do paciente [anos]\n\n2 - Sexo: sexo do paciente [M: Masculino, F: Feminino]\n\n3 - Tipo de dor tor\u00e1cica: tipo de dor tor\u00e1cica [TA: angina t\u00edpica, ATA: angina at\u00edpica, NAP: dor n\u00e3o anginosa, ASY: assintom\u00e1tica]\n\n4 - BP em repouso: press\u00e3o arterial em repouso [mm Hg]\n\n5 - Colesterol: colesterol s\u00e9rico [mm \/ dl]\n\n6 - SB em jejum: a\u00e7\u00facar no sangue em jejum [1: se SB em jejum> 120 mg \/ dl, 0: caso contr\u00e1rio]\n\n7 - ECG em repouso: resultados de eletrocardiograma em repouso [Normal: Normal, ST: tendo anormalidade da onda ST-T (invers\u00f5es da onda T e \/ ou eleva\u00e7\u00e3o ou depress\u00e3o de ST> 0,05 mV), HVE: mostrando hipertrofia ventricular esquerda prov\u00e1vel ou definitiva pelos crit\u00e9rios de Estes]\n\n8 - MaxHR: freq\u00fc\u00eancia card\u00edaca m\u00e1xima alcan\u00e7ada [valor num\u00e9rico entre 60 e 202]\n\n9 - ExerciseAngina: angina induzida por exerc\u00edcio [S: Sim, N: N\u00e3o]\n\n10 - Oldpeak: oldpeak = ST [valor num\u00e9rico medido na depress\u00e3o]\n\n11 - ST_lope: a inclina\u00e7\u00e3o do pico do segmento ST do exerc\u00edcio [Up: uploping, Flat: flat, Down: downsloping]\n\n12 - HeartDisease: classe de d\u00e9bito [1: doen\u00e7a card\u00edaca, 0: Normal]\n\nFonte\nEste conjunto de dados foi criado combinando diferentes conjuntos de dados j\u00e1 dispon\u00edveis de forma independente, mas n\u00e3o combinados antes. Neste conjunto de dados, 5 conjuntos de dados card\u00edacos s\u00e3o combinados em 11 caracter\u00edsticas comuns, o que o torna o maior conjunto de dados de doen\u00e7as card\u00edacas dispon\u00edvel at\u00e9 agora para fins de pesquisa. Os cinco conjuntos de dados usados \u200b\u200bpara sua curadoria s\u00e3o:\n\nCleveland: 303 observa\u00e7\u00f5es\nH\u00fangaro: 294 observa\u00e7\u00f5es\nSu\u00ed\u00e7a: 123 observa\u00e7\u00f5es\nLong Beach VA: 200 observa\u00e7\u00f5es\nConjunto de dados Stalog (cora\u00e7\u00e3o): 270 observa\u00e7\u00f5es\nTotal: 1190 observa\u00e7\u00f5es\nDuplicado: 272 observa\u00e7\u00f5es\n\nConjunto de dados final: 918 observa\u00e7\u00f5es\n\nCada conjunto de dados usado pode ser encontrado no \u00cdndice de conjuntos de dados de doen\u00e7as card\u00edacas do UCI Machine Learning Repository no seguinte link: https:\/\/archive.ics.uci.edu\/ml\/machine-learning-databases\/heart-disease\/\n\nCita\u00e7\u00e3o\nfedesoriano. (Setembro de 2021). Conjunto de dados de previs\u00e3o de insufici\u00eancia card\u00edaca. Obtido [Data obtida] em https:\/\/www.kaggle.com\/fedesoriano\/heart-failure-prediction.\n\nReconhecimentos\nCriadores:\n\nInstituto H\u00fangaro de Cardiologia. Budapeste: Andras Janosi, M.D.\nHospital Universit\u00e1rio, Zurique, Su\u00ed\u00e7a: William Steinbrunn, M.D.\nHospital Universit\u00e1rio, Basel, Su\u00ed\u00e7a: Matthias Pfisterer, M.D.\nV.A. Medical Center, Long Beach e Cleveland Clinic Foundation: Robert Detrano, M.D., Ph.D.\nDoador:\nDavid W. Aha (aha '@' ics.uci.edu) (714) 856-8779","1fdb9c08":"# **Cross Validation \/ Comparing Results**\n\n# **Valida\u00e7\u00e3o Cruzada \/ Comparando os Resultados**","054091c3":"# If you find this notebook useful, support with an upvote \ud83d\udc4d","21e4a4d1":"We have a result of 86%;\n\nTivermos um resultado de 86%;","ed5a0f86":"I'm particularly a fan of this chart, it always shows us the connection between attributes, in this chart it's interesting how physical activity influences heart health and makes me particularly think how important it is.\n\nEu particularmente sou f\u00e3 deste gr\u00e1fico ele sempre nos mostra a liga\u00e7\u00e3o entre os atributos, neste gr\u00e1fico \u00e9 interessante como a atividade fisica influ\u00eancia na sa\u00fade do cora\u00e7\u00e3o e faz eu particularmente pensar o quanto \u00e9 importante.","959e38d8":"# **LOGISTICAL REGRESSION**\n\n# REGRESS\u00c3O LOGISTICA","64557fda":"We have a result of 84%;\n\nTivermos um resultado de 84%;","1750a9ae":"# **KNN**","c126fb99":"# **SVM**","7ea64476":"# ***Introduction***\n\nIn my case studies I keep writing in English because it is used in Kaggle and I also keep them in Portuguese because my native language is Brazilian Portuguese, so we can share more knowledge and experiences in Kaggle with our Brazilian colleagues.\n\nWe will develop and analyze the algorithms with the best capacity and identify the problems in the heart and at the end we will make a comparison between them.\n\nDescription\n\nContext\n\n\nCardiovascular diseases (CVDs) are the number 1 cause of death globally, taking an estimated 17.9 million lives each year, which accounts for 31% of all deaths worldwide. Four out of 5CVD deaths are due to heart attacks and strokes, and one-third of these deaths occur prematurely in people under 70 years of age. Heart failure is a common event caused by CVDs and this dataset contains 11 features that can be used to predict a possible heart disease.\n\nPeople with cardiovascular disease or who are at high cardiovascular risk (due to the presence of one or more risk factors such as hypertension, diabetes, hyperlipidaemia or already established disease) need early detection and management wherein a machine learning model can be of great help.\n\n\nAttribute Information\n\n1. Age: age of the patient [years]\n\n2. Sex: sex of the patient [M: Male, F: Female]\n\n3. ChestPainType: chest pain type [TA: Typical Angina, ATA: Atypical Angina, NAP: Non-Anginal Pain, ASY: Asymptomatic]\n\n4. RestingBP: resting blood pressure [mm Hg]\n\n5. Cholesterol: serum cholesterol [mm\/dl]\n\n6. FastingBS: fasting blood sugar [1: if FastingBS > 120 mg\/dl, 0: otherwise]\n\n7. RestingECG: resting electrocardiogram results [Normal: Normal, ST: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV), LVH: showing probable or definite left ventricular hypertrophy by Estes' criteria]\n\n8. MaxHR: maximum heart rate achieved [Numeric value between 60 and 202]\n\n9. ExerciseAngina: exercise-induced angina [Y: Yes, N: No]\n\n10. Oldpeak: oldpeak = ST [Numeric value measured in depression]\n\n11. ST_Slope: the slope of the peak exercise ST segment [Up: upsloping, Flat: flat, Down: downsloping]\n\n12. HeartDisease: output class [1: heart disease, 0: Normal]\n\nSource\n\n\nThis dataset was created by combining different datasets already available independently but not combined before. In this dataset, 5 heart datasets are combined over 11 common features which makes it the largest heart disease dataset available so far for research purposes. The five datasets used for its curation are:\n\n- Cleveland: 303 observations\n- Hungarian: 294 observations\n- Switzerland: 123 observations\n- Long Beach VA: 200 observations\n- Stalog (Heart) Data Set: 270 observations\nTotal: 1190 observations\nDuplicated: 272 observations\n\nFinal dataset: 918 observations\n\nEvery dataset used can be found under the Index of heart disease datasets from UCI Machine Learning Repository on the following link: https:\/\/archive.ics.uci.edu\/ml\/machine-learning-databases\/heart-disease\/\n\nCitation\n\n\nfedesoriano. (September 2021). Heart Failure Prediction Dataset. Retrieved [Date Retrieved] from https:\/\/www.kaggle.com\/fedesoriano\/heart-failure-prediction.\n\nAcknowledgements\n\n\nCreators:\n\n1. Hungarian Institute of Cardiology. Budapest: Andras Janosi, M.D.\n2. University Hospital, Zurich, Switzerland: William Steinbrunn, M.D.\n3. University Hospital, Basel, Switzerland: Matthias Pfisterer, M.D.\n4. V.A. Medical Center, Long Beach and Cleveland Clinic Foundation: Robert Detrano, M.D., Ph.D.\nDonor:\nDavid W. Aha (aha '@' ics.uci.edu) (714) 856-8779","8dcebcfa":"# **LOGISTICAL REGRESSION**\n\n# **REGRESS\u00c3O LOGISTICA**","69a6a50b":"# **CONCLUSION**\n\nWe could use more algorithms to do more tests, like Deep Learning (one of my favorites), which would take more time.\n\nFor tests, we could also use the clusters in this case if we wanted to make a grouping and study the characteristics of the risk groups, which would also be interesting for analyzing the results.\n\nThere are several possibilities in data science that we can use for testing.\n\nIt will depend a lot on what your objective in the case study is, what results you are looking for, only data (graphs), identifying whether a person has a pretension to heart disease (Dummy variable), creating risk groups (clusters), these would just be some suggestions, of course there are many more algorithms that can be used in testing, but of course we can't forget that the algorithm should be plausible in the case under study, in this case I particularly don't think it would be interesting to use Prophet.\n\n\nIf you liked you have any suggestions leave a comment!\n\nThank you!!\n\n\n# **CONSLUS\u00c3O**\n\nPoderiamos utilizar mais algoritimos para fazermos mais testes, como a Deep Learning (um dos meus prferidos), o que demandaria mais tempo.\n\nPara testes tamb\u00e9m poder\u00edamos tamb\u00e9m utilizar os clusters neste caso se quisessemos fazer um agrupamento e estudarmos as caracter\u00edsticas dos grupos de riscos, que tamb\u00e9m seria interessante para an\u00e1lise dos resultados.\n\nH\u00e1 disversas possibilidades na ci\u00eancia de dados que podemos utilizar para testes.\n\nVai depender muito de qual \u00e9 o seu objetivo no caso de estudo, quais os resultados que se busca, apenas dados (gr\u00e1ficos), identificar se uma pessoa tem pretens\u00e3o a doen\u00e7as cardiacas (Dummy variable), cria\u00e7\u00e3o de grupos de riscos (clusters), essas seriam apenas algumas sugest\u00f5es, \u00e9 claro h\u00e1 muito mais algoritimos que podem ser utilizados nos testes, mas \u00e9 claro n\u00e3o podemos esquecer que o algoritimo deve ser plausivel no caso em estudo, neste caso eu particularmente n\u00e3o acho que seria interessante utilizar o Prophet.\n\n\nSe gostou tiver alguma sugest\u00e3o deixe um coment\u00e1rio!\n\nMuito Obrigado!!","82fbfb80":"# **Normality test in results \/ Normalization \/ Static test**\n\n# Teste de normalidade nos resultados \/ Normaliza\u00e7\u00e3o \/ Teste est\u00e1stisco****","84dddd80":"# ** KNN**\nIn this model it will not be necessary to carry out the training, as it does not generate a method model based on instances, it basically calculates the distance between records.\n\nNesse modelo n\u00e3o ser\u00e1 necess\u00e1rio realizarmos o treinamento, pois ele n\u00e3o gera um modelo m\u00e9todo baseado em inst\u00e2ncias, ele b\u00e1sicamente faz o c\u00e1culo da dist\u00e2ncia entre os registros.\n","d729c2fa":"# **NEURAL NETWORKS**\n\n# **REDES NEURAIS**","d237bc30":"We have a result of 82%;\n\nTivermos um resultado de 82%;","807b1485":"# **Parameter tuning with GridSearch**\n\n# **Tuning dos par\u00e2metros com GridSearch**","ad8f0cd1":"We have a result of 83%;\n\nTivermos um resultado de 83%;","8cdfbf63":"In the results of the table above, we can see that the results of knn are not superior to those of neural networks, being practically the same value in the results.\n\nNos resultados da tabela acima podemos observar que os resultados do knn n\u00e3o \u00e9 superior ao das redes neurais, sendo praticamente o mesmo valor nos resultados.","d2ab5a6d":"We have a result of 86%;\n\nTivermos um resultado de 86%;","a6b91c72":"# **NEURAL NETWORK**\n\n# REDE NEURAL","0c3ef348":"# **RANDOM FOREST**","26f5417f":"# **SVM**"}}