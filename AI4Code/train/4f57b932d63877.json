{"cell_type":{"36e08a36":"code","0d13ed12":"code","8aa557f4":"code","d5e400fc":"code","2bde10e7":"code","99fe9744":"code","be33913b":"code","5b2af4c1":"code","da44d2f0":"code","d6e3e462":"code","0003fb9b":"code","5648932b":"code","eacc90e9":"code","41682acb":"code","26b764d2":"code","33bf06fa":"code","363b0191":"code","10baf812":"code","497e4d59":"code","0d5d87dd":"code","b6d58daa":"code","8261f6d9":"code","62f1a528":"code","804e2bdf":"markdown","7227f872":"markdown","fa3c6320":"markdown","26430972":"markdown","5e84f656":"markdown","fdf0034f":"markdown","add678e7":"markdown","b76708bb":"markdown","32e6ddfd":"markdown","f50e95a7":"markdown","2e3a536d":"markdown","585a3f06":"markdown","499a6a3f":"markdown"},"source":{"36e08a36":"import numpy as np\nimport pandas as pd\npd.set_option('display.max_columns', None)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('darkgrid')\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom sklearn.metrics import r2_score","0d13ed12":"dataset = pd.read_csv('..\/input\/vehicle-dataset-from-cardekho\/car data.csv')\ndataset.head()","8aa557f4":"dataset.info()","d5e400fc":"dataset.isnull().sum()","2bde10e7":"dataset = dataset.set_index('Year')\ndataset = dataset.sort_index()\ndataset.head()","99fe9744":"cat = [i for i in dataset.columns if dataset[i].dtypes == 'O']\ncat","be33913b":"dataset['Car_Name'].value_counts()","5b2af4c1":"plt.figure(figsize=(18,5))\nsns.countplot(dataset['Car_Name'], palette='cool')\nplt.xticks(rotation=45)\nplt.show()","da44d2f0":"sns.countplot(dataset['Seller_Type'], palette='cool')","d6e3e462":"sns.countplot(dataset['Transmission'], palette='cool')","0003fb9b":"fuel = pd.get_dummies(dataset['Fuel_Type'])\nseller = pd.get_dummies(dataset['Seller_Type'])\ntrans = pd.get_dummies(dataset['Transmission'])","5648932b":"train_data = pd.concat([dataset, fuel, seller, trans], axis=1)\ntrain_data.head(3)","eacc90e9":"train_data.drop(['Fuel_Type', 'Seller_Type', 'Transmission'], axis=1, inplace=True)\ntrain_data.head(2)","41682acb":"train_data.dtypes","26b764d2":"from sklearn.preprocessing import LabelEncoder\nencode = LabelEncoder()\ntrain_data['Car_Name'] = encode.fit_transform(train_data['Car_Name'])","33bf06fa":"train_data.head()","363b0191":"for i in ['Selling_Price', 'Kms_Driven']:\n    plt.figure(figsize=(8,5))\n    sns.scatterplot(data=train_data, x=i, y='Present_Price', hue='Dealer', palette='cool_r')","10baf812":"def sel_price(s):\n    if s > 30:\n        return train_data['Selling_Price'].mean()\n    else:\n        return s\n    \ntrain_data['Selling_Price'] = train_data['Selling_Price'].apply(sel_price)\n\nplt.figure(figsize=(8,5))\nsns.scatterplot(x='Selling_Price', y='Present_Price', data=train_data)","497e4d59":"X = train_data.drop('Present_Price', axis=1)\ny = train_data['Present_Price']","0d5d87dd":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\nX_train.shape, X_test.shape","b6d58daa":"from sklearn.linear_model import LinearRegression\nlin = LinearRegression()\nmodel = lin.fit(X_train, y_train)\nprint(model.score(X_train, y_train)*100)","8261f6d9":"y_pred = model.predict(X_test)","62f1a528":"score = r2_score(y_pred, y_test)\nscore*100","804e2bdf":"## Importing Required Libraries","7227f872":"## Prediction","fa3c6320":"![](https:\/\/i.pinimg.com\/originals\/e1\/99\/1b\/e1991b5d40980d18c584474d3c20c0ba.jpg)","26430972":"## CAR PRICE PREDICTION","5e84f656":"## Data Visualization","fdf0034f":"## Expolatory Data Analysis","add678e7":"## Seperating Dependent and Independent Variables","b76708bb":"## One Hot Encoding","32e6ddfd":"## Working with Categorical Data","f50e95a7":"## Working with Outliers","2e3a536d":"## Label Encoding","585a3f06":"## Spliting of Train and Test Data","499a6a3f":"## Model Training"}}