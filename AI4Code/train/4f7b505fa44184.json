{"cell_type":{"f00a1e82":"code","afd1b218":"code","312092ec":"code","04b98ffe":"code","ef4d6727":"code","ee6e54d3":"code","9309a678":"code","5cd96372":"code","6e568e91":"code","1cb4fe4c":"code","a74b18dc":"code","a4fa5e53":"code","3f183a6a":"code","ebcd9d42":"markdown"},"source":{"f00a1e82":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","afd1b218":"import pandas as pd\ndf=pd.read_csv('..\/input\/creditcardfraud\/creditcard.csv')\ndf.head()","312092ec":"df.columns","04b98ffe":"#fraud data\nfraud_df=df[df['Class']==1]\nfraud_df.head()","ef4d6727":"#visualizing fraud data\nimport matplotlib.pyplot as plt\n%matplotlib inline\nplt.scatter(fraud_df['Time'],fraud_df['Amount'])\nplt.xlabel('Time')\nplt.ylabel('Amount')\nplt.show()","ee6e54d3":"print('Total number of frauds:',len(fraud_df))","9309a678":"df.fillna(df.mean())","5cd96372":"x=df.drop(['Time','Class'],axis=1)\nx","6e568e91":"y=df['Class']\ny","1cb4fe4c":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=4)\n","a74b18dc":"from sklearn import svm\nclf=svm.SVC(kernel='linear')\nclf.fit(x_train,y_train)\ny_pred=clf.predict(x_test)\ny_pred","a4fa5e53":"from sklearn.metrics import accuracy_score\nprint(accuracy_score(y_test,y_pred))","3f183a6a":"from sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_test,y_pred)\ncm","ebcd9d42":"df.describe()"}}