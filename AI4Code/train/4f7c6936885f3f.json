{"cell_type":{"bdae5449":"code","71282c93":"code","99badb5f":"code","83120764":"code","86dd5e59":"code","a5e2a548":"code","d955987f":"code","36435dd7":"code","54e31190":"code","93881657":"code","577fe254":"code","92499853":"code","ce80dde0":"code","a7074304":"code","d3f11232":"code","d135dd0d":"code","64b4132c":"code","a078e408":"code","33553c9b":"code","2f73f482":"code","c636bc91":"code","794d70b7":"code","82828277":"code","b1f67a40":"code","45cdd051":"code","8fc9fdb8":"code","f4987957":"code","645e8b5c":"code","025f7564":"code","33e75176":"code","5713fc6e":"code","0b8b1fe8":"code","8db09d20":"code","480b397d":"code","ca611304":"code","7a412813":"code","5a856396":"code","0a49e83a":"code","7cbbd016":"code","6d6a785c":"code","c6f35dec":"code","2199812a":"code","f3199485":"code","971101b7":"code","a13e1e44":"code","1b04ae7f":"code","360a0501":"code","45660d44":"code","f1f5c1ff":"code","5a80d56e":"markdown","e38c7b5d":"markdown","f31ab783":"markdown","0fcc4865":"markdown","d10dcc43":"markdown","7c2334e8":"markdown","e5e063fa":"markdown","682dbfdd":"markdown","35ea0394":"markdown","92fb0073":"markdown","2b8d6fdb":"markdown","1a58ddb1":"markdown","7f7fff4e":"markdown"},"source":{"bdae5449":"# Supress Warnings\n\nimport warnings\nwarnings.filterwarnings('ignore')","71282c93":"import numpy as np\nimport pandas as pd","99badb5f":"housing = pd.read_csv(r'\/kaggle\/input\/housing-simple-regression\/Housing.csv')","83120764":"# Check the head of the dataset\nhousing.head()","86dd5e59":"housing.shape","a5e2a548":"housing.info()","d955987f":"housing.describe()","36435dd7":"import matplotlib.pyplot as plt\nimport seaborn as sns","54e31190":"sns.pairplot(housing)\nplt.show()","93881657":"plt.figure(figsize=(20, 12))\nplt.subplot(2,3,1)\nsns.violinplot(x = 'mainroad', y = 'price', data = housing)\nplt.subplot(2,3,2)\nsns.violinplot(x = 'guestroom', y = 'price', data = housing)\nplt.subplot(2,3,3)\nsns.violinplot(x = 'basement', y = 'price', data = housing)\nplt.subplot(2,3,4)\nsns.violinplot(x = 'hotwaterheating', y = 'price', data = housing)\nplt.subplot(2,3,5)\nsns.violinplot(x = 'airconditioning', y = 'price', data = housing)\nplt.subplot(2,3,6)\nsns.violinplot(x = 'furnishingstatus', y = 'price', data = housing)\nplt.show()","577fe254":"plt.figure(figsize = (10, 5))\nsns.violinplot(x = 'furnishingstatus', y = 'price', hue = 'airconditioning', data = housing)\nplt.show()","92499853":"# List of variables to map\n\nvarlist =  ['mainroad', 'guestroom', 'basement', 'hotwaterheating', 'airconditioning', 'prefarea']\n\n# Defining the map function\ndef binary_map(x):\n    return x.map({'yes': 1, \"no\": 0})\n\n# Applying the function to the housing list\nhousing[varlist] = housing[varlist].apply(binary_map)","ce80dde0":"# Check the housing dataframe now\n\nhousing.head()","a7074304":"# Get the dummy variables for the feature 'furnishingstatus' and store it in a new variable - 'status'\nstatus = pd.get_dummies(housing['furnishingstatus'])","d3f11232":"# Check what the dataset 'status' looks like\nstatus.head()","d135dd0d":"# Let's drop the first column from status df using 'drop_first = True'\n\nstatus = pd.get_dummies(housing['furnishingstatus'], drop_first = True)","64b4132c":"# Add the results to the original housing dataframe\n\nhousing = pd.concat([housing, status], axis = 1)","a078e408":"# Now let's see the head of our dataframe.\n\nhousing.head()","33553c9b":"# Drop 'furnishingstatus' as we have created the dummies for it\n\nhousing.drop(['furnishingstatus'], axis = 1, inplace = True)","2f73f482":"housing.head()","c636bc91":"from sklearn.model_selection import train_test_split\n\n# We specify this so that the train and test data set always have the same rows, respectively\nnp.random.seed(0)\ndf_train, df_test = train_test_split(housing, train_size = 0.75, random_state = 100)","794d70b7":"from sklearn.tree import DecisionTreeRegressor","82828277":"dt = DecisionTreeRegressor(random_state=42)","b1f67a40":"df_train.shape","45cdd051":" df_test.shape","8fc9fdb8":"df_test.head()","f4987957":"y_train = df_train.pop(\"price\")\nX_train = df_train\nX_train.shape","645e8b5c":"y_test = df_test.pop(\"price\")\nX_test = df_test\nX_test.shape","025f7564":"dt.fit(X_train, y_train)","33e75176":"from sklearn import tree\nfig = plt.figure(figsize=(25,20))\n_ = tree.plot_tree(dt,\n                   feature_names=X_train.columns,\n                   filled=True)","5713fc6e":"from sklearn.metrics import r2_score","0b8b1fe8":"r2_score_dt_train=round(r2_score(y_train, dt.predict(X_train)),2)\nprint(\"R-squared Train:\",r2_score_dt_train)","8db09d20":"r2_score_dt_test=round(r2_score(y_test, dt.predict(X_test)),2)\nprint(\"R-squared Test:\",r2_score_dt_test)","480b397d":"dt.feature_importances_","ca611304":"imp_df = pd.DataFrame({\n    \"Varname\": X_train.columns,\n    \"Imp\": dt.feature_importances_})","7a412813":"imp_df.sort_values(by=\"Imp\", ascending=False)","5a856396":"from sklearn.model_selection import GridSearchCV","0a49e83a":"params = {\n    \"max_depth\": [2,3,5,10,20],\n    \"min_samples_leaf\": [5,10,20,50,100,500]\n}","7cbbd016":"grid_search = GridSearchCV(estimator=dt,\n                           param_grid=params,\n                           cv=4,\n                           n_jobs=-1, verbose=1)","6d6a785c":"%%time\ngrid_search.fit(X_train, y_train)","c6f35dec":"grid_search.best_score_","2199812a":"dt_best = grid_search.best_estimator_\ndt_best","f3199485":"from sklearn import tree\nfig = plt.figure(figsize=(25,20))\n_ = tree.plot_tree(dt_best,\n                   feature_names=X_train.columns,\n                   filled=True)","971101b7":"r2_score_dt_train=round(r2_score(y_train,dt_best.predict(X_train)),2)\nprint(\"R-squared Train:\",r2_score_dt_train)","a13e1e44":"r2_score_dt_test=round(r2_score(y_test, dt_best.predict(X_test)),2)\nprint(\"R-squared Test:\",r2_score_dt_test)","1b04ae7f":"dt_best.feature_importances_","360a0501":"imp_df = pd.DataFrame({\n    \"Varname\": X_train.columns,\n    \"Imp\": dt_best.feature_importances_})","45660d44":"imp_df.sort_values(by=\"Imp\", ascending=False)","f1f5c1ff":"imp_df.loc[imp_df['Imp'] != 0].sort_values(by=\"Imp\", ascending=False)","5a80d56e":"Inspect the various aspects of the housing dataframe","e38c7b5d":"Now, you don't need three columns. You can drop the `furnished` column, as the type of furnishing can be identified with just the last two columns where \u2014 \n- `00` will correspond to `furnished`\n- `01` will correspond to `unfurnished`\n- `10` will correspond to `semi-furnished`","f31ab783":"#### Visualising Categorical Variables\n\nAs you might have noticed, there are a few categorical variables as well. Let's make a boxplot for some of these variables.","0fcc4865":"## Step 3: Data Preparation","d10dcc43":"## Step 2: Visualising the Data\n\nLet's now spend some time doing what is arguably the most important step - **understanding the data**.\n- If there is some obvious multicollinearity going on, this is the first place to catch it\n- Here's where you'll also identify if some predictors directly have a strong association with the outcome variable\n\nWe'll visualise our data using `matplotlib` and `seaborn`.","7c2334e8":"- You can see that your dataset has many columns with values as 'Yes' or 'No'.\n\n- But in order to fit a regression line, we would need numerical values and not string. Hence, we need to convert them to 1s and 0s, where 1 is a 'Yes' and 0 is a 'No'.","e5e063fa":"## Step 1: Reading and Understanding the Data\n\nLet us first import NumPy and Pandas and read the housing dataset","682dbfdd":"#### Visualising Numeric Variables\n\nLet's make a pairplot of all the numeric variables","35ea0394":"We can also visualise some of these categorical features parallely by using the `hue` argument. Below is the plot for `furnishingstatus` with `airconditioning` as the hue.","92fb0073":"## Step 4: Splitting the Data into Training and Testing Sets\n\nAs you know, the first basic step for regression is performing a train-test split.","2b8d6fdb":"Following Features which can be used focus to predict Housing Price keeping best R2 values for test & train:\n- area\n- bathrooms\n- airconditioning\n- parking\n- stories\n","1a58ddb1":"### Dummy Variables","7f7fff4e":"The variable `furnishingstatus` has three levels. We need to convert these levels into integer as well. \n\nFor this, we will use something called `dummy variables`."}}