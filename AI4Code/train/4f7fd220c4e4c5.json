{"cell_type":{"28f0485f":"code","7e57807e":"code","bbfe23da":"code","d5953b79":"code","53eea9ae":"code","d102aa4b":"code","3c7fadb2":"code","a8e72bf9":"code","43521f4f":"code","69549fc6":"code","f572333e":"code","23b49165":"code","c30b6e19":"code","d9c0f0aa":"code","9fac462b":"code","230a04ad":"code","3c35b0e2":"code","a2936895":"code","61f15ff5":"code","ab0161ab":"code","72813db3":"code","8d0d4b1a":"code","3e72376f":"code","f7e46eeb":"code","485a0312":"code","9e33059c":"code","569eb6fb":"code","37920e6e":"code","e225a37e":"code","8ae141a4":"code","d05be0d6":"code","eaaade19":"code","5c833cdf":"code","624c1417":"code","7add15c5":"code","3afbba0b":"code","bb83da3c":"code","bdaea0f8":"code","43fc2290":"code","12d06046":"code","208f3b41":"code","966af946":"code","b155861e":"code","692e05d6":"code","9db0ac1d":"code","0d0de580":"code","bf036269":"code","c7805c62":"code","66d4a44e":"code","f33b4831":"code","c75f86c2":"code","59c227e0":"code","4b0e2d74":"code","84836a10":"code","54f6a54f":"code","03ccf6a8":"code","976e7b28":"code","38687d64":"code","635ee08f":"code","06187a81":"code","28e481cb":"code","285f939e":"code","a9241600":"code","c7e7b264":"code","53ea8cf2":"code","9d96eb50":"code","0180665d":"code","ba9276fd":"code","dd5e26af":"code","25de138d":"code","830372e1":"code","5bb0056f":"code","cb4acc67":"code","d1f7ddeb":"code","d81e0e64":"code","4e514e27":"code","d8624de2":"code","f0ab5db1":"code","001f8c74":"code","afecd22f":"code","410a9d99":"code","895e389a":"code","0515a8b1":"code","5cf9e11a":"code","87ebc419":"code","94b478f0":"code","6b40fbc5":"code","4f3118a7":"code","3c04ab89":"code","73f49f1c":"code","6b3293f4":"code","7e4a7f62":"code","f7858f11":"code","2396e4c9":"code","8585df76":"code","82796cd4":"code","bab088c1":"code","0406f782":"code","acca467c":"code","76cf1d97":"code","e2c9865d":"code","f8e5dad6":"code","e48c3f8e":"code","f5e20d2f":"code","f43347fc":"code","fdc7b7cd":"markdown","34ba0416":"markdown","38b28eee":"markdown","27aac0a5":"markdown","a38df5d8":"markdown","2b4df10e":"markdown","21c74276":"markdown","285500f2":"markdown","dae2ef4e":"markdown","6ac4cec1":"markdown","48cd2d87":"markdown","197ec52b":"markdown","0802283c":"markdown","7e455bf4":"markdown","d5602732":"markdown","c5b82a13":"markdown","10864453":"markdown","19aa6d0f":"markdown","f6b260f0":"markdown","34994aed":"markdown","f06eeec3":"markdown","1c6bf862":"markdown","a3e2e31e":"markdown","65ccdee0":"markdown","80c0b995":"markdown","ba1889d0":"markdown","0a717b66":"markdown","cee784c2":"markdown","eebd09db":"markdown","ed43f55c":"markdown","b1edbe62":"markdown","c4c53575":"markdown","f8e37eae":"markdown","7279b570":"markdown","8118a3b3":"markdown","5cedeadc":"markdown","1044cfd6":"markdown","68649269":"markdown","3c603ac6":"markdown"},"source":{"28f0485f":"import requests\nfrom bs4 import BeautifulSoup\nimport pandas as pd","7e57807e":"\n\ntemp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/26228-syracuse-university\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\nr= pd.DataFrame(temp)","bbfe23da":"r.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)","d5953b79":"r","53eea9ae":"df=r.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\ndf","d102aa4b":"df = df[df.Name != 'Welcome to Yocket']","3c7fadb2":"p=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)","a8e72bf9":"p.head()","43521f4f":"columns = ['GRE', 'Undergrad']\ndf.drop(columns, inplace=True, axis=1)","69549fc6":"df","f572333e":"df.to_csv(\"Syracuse1.csv\")","23b49165":"pd.read_csv(\"Syracuse1.csv\")","c30b6e19":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/95-university-of-maryland-college-park\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)","d9c0f0aa":"p.head()","9fac462b":"p.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)","230a04ad":"p","3c35b0e2":"p = p[p.Name != 'Welcome to Yocket']\np","a2936895":"columns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)","61f15ff5":"p.to_csv(\"Umcp.csv\")","ab0161ab":"pd.read_csv(\"Umcp.csv\")","72813db3":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/310-university-of-illinois-at-chicago\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)","8d0d4b1a":"p.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)","3e72376f":"p = p[p.Name != 'Welcome to Yocket']","f7e46eeb":"p.head()","485a0312":"p.to_csv(\"Uic1.csv\")","9e33059c":"pd.read_csv(\"Uic1.csv\")","569eb6fb":"#14-carnegie-mellon-university\ntemp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/46196-carnegie-mellon-university\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)","37920e6e":"p.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)","e225a37e":"p = p[p.Name != 'Welcome to Yocket']","8ae141a4":"p.head()","d05be0d6":"p=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)","eaaade19":"p.head()","5c833cdf":"columns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)","624c1417":"p.to_csv(\"CMU.csv\")","7add15c5":"pd.read_csv(\"CMU.csv\")","3afbba0b":"#14-carnegie-mellon-university\ntemp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/14-carnegie-mellon-university\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)","bb83da3c":"p.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)","bdaea0f8":"p = p[p.Name != 'Welcome to Yocket']","43fc2290":"p.head()","12d06046":"p=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)","208f3b41":"columns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)","966af946":"p.to_csv(\"CMU2.csv\")","b155861e":"\ntemp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/46121-university-of-washington\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)","692e05d6":"p.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)","9db0ac1d":"p = p[p.Name != 'Welcome to Yocket']","0d0de580":"p=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)","bf036269":"columns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)","c7805c62":"p.to_csv(\"UWash.csv\")","66d4a44e":"\ntemp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/46140-university-of-washington\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)","f33b4831":"p.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)","c75f86c2":"p = p[p.Name != 'Welcome to Yocket']","59c227e0":"p=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)","4b0e2d74":"columns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)","84836a10":"p.to_csv(\"Uwash2.csv\")","54f6a54f":"\ntemp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/49-texas-a-and-m-university-college-station\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)","03ccf6a8":"p.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)","976e7b28":"p = p[p.Name != 'Welcome to Yocket']","38687d64":"p=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)","635ee08f":"columns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)","06187a81":"p.to_csv(\"TAMU.csv\")","28e481cb":"\ntemp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/368-indiana-university-bloomington\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)","285f939e":"p.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)","a9241600":"\np = p[p.Name != 'Welcome to Yocket']","c7e7b264":"\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)","53ea8cf2":"columns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)","9d96eb50":"p.to_csv(\"kelley.csv\")","0180665d":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/158-university-of-cincinnati\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)","ba9276fd":"p.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)","dd5e26af":"p.to_csv(\"UCinn.csv\")","25de138d":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/26891-university-of-texas-dallas\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n","830372e1":"\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"UTD.csv\")","5bb0056f":"\ntemp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/913-northeastern-university\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)","cb4acc67":"p.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"NEU.csv\")","d1f7ddeb":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/26239-university-of-arizona\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"Eller.csv\")\n","d81e0e64":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/1417-rutgers-university-new-brunswick\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"Rutgers1.csv\")\n","4e514e27":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/358-rutgers-university-newark\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"Rutgers2.csv\")\n","d8624de2":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/423-university-of-minnesota-twin-cities\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"minnesota.csv\")\n","f0ab5db1":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/545-georgia-state-university\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"Rutgers2.csv\")\n","001f8c74":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/358-rutgers-university-newark\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"Rutgers2.csv\")\n","afecd22f":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/358-rutgers-university-newark\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"gsu.csv\")\n","410a9d99":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/816-worcester-polytechnic-institute\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"wpi.csv\")\n","895e389a":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/461-rensselaer-polytechnic-institute\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"RPI.csv\")\n","0515a8b1":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/358-rutgers-university-newark\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"Rutgers2.csv\")\n","5cf9e11a":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/6-boston-university\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"BU.csv\")\n","87ebc419":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/1043-university-of-california-irvine\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"UCI.csv\")\n","94b478f0":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/128-state-university-of-new-york-at-buffalo\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"SunyB.csv\")\n","6b40fbc5":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/318-northwestern-university\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"northwestern.csv\")\n","4f3118a7":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/253-arizona-state-university\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"asu.csv\")\n","3c04ab89":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/77-university-of-florida\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"Uflorida.csv\")\n","73f49f1c":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/363-university-of-north-carolina-at-charlotte\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"Uncc.csv\")\n","6b3293f4":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/1451-stevens-institute-of-technology\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"Stevens.csv\")\n","7e4a7f62":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/1249-university-of-iowa\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"UIowa.csv\")\n","f7858f11":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/179-rochester-institute-of-technology\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"RIT.csv\")\n","2396e4c9":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/349-university-of-texas-arlington\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"UT_arlington.csv\")\n","8585df76":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/622-santa-clara-university\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"SantaClara.csv\")\n","82796cd4":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/414-illinois-institute-of-technology\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"IIT.csv\")\n","bab088c1":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/402-university-of-delaware\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"delaware.csv\")\n","0406f782":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/26240-university-of-utah\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"UUtah.csv\")\n","acca467c":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/1272-drexel-university\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"drexel.csv\")\n","76cf1d97":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/104-university-of-texas-austin\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"UT_Austin.csv\")\n","e2c9865d":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/589-new-york-university\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"NYU.csv\")\n","f8e5dad6":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/1063-pennsylvania-state-university\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"Penn_State.csv\")\n","e48c3f8e":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/278-university-of-pennsylvania\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"UPenn.csv\")\n","f5e20d2f":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/326-iowa-state-university\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"Iowa_State.csv\")\n","f43347fc":"temp=[]\n\n\nfor i in range(1,20):\n    page = requests.get(\"https:\/\/yocket.in\/applications-admits-rejects\/57-university-of-california-los-angeles\/{}\".format(i))\n\n    soup = BeautifulSoup(page.content, 'html.parser')\n\n\n\n    name_containers = soup.find_all('div', class_ = 'col-sm-6')\n    for i in name_containers:\n        k =(i.div.text)\n        t=[i for i in k.strip().split(\"\\n\") if len(i) is not 0]\n        temp.append(t)\n\n\n\np= pd.DataFrame(temp)\n\n\np.rename(columns={0: 'Name', 'newName2': 'University', 1: 'University', 2: 'Year', 3: 'Status',4: 'GRE',5: 'GRE_SCORE',6: 'Eng_test',7:'Test_score',8: 'Undergrad',9: 'Undergrad_score',11: 'work_ex'}, inplace=True)\n\np = p[p.Name != 'Welcome to Yocket']\n\np=p.drop([10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ], axis=1)\n\ncolumns = ['GRE', 'Undergrad']\np.drop(columns, inplace=True, axis=1)\n\np.to_csv(\"UCLA.csv\")\n","fdc7b7cd":"# CMU 2","34ba0416":"# UIC ","38b28eee":"# worcester ","27aac0a5":"# RIT","a38df5d8":"# U CINN MIS","2b4df10e":"# ITT","21c74276":"# drexel-university","285500f2":"# U WASH 2 (IM)","dae2ef4e":"# UTD ITM","6ac4cec1":"# Stevens","48cd2d87":"# UNCC","197ec52b":"# university-of-pennsylvania","0802283c":"# UC Irvine","7e455bf4":"# university-of-california-los-angeles","d5602732":"# U Wash","c5b82a13":"# TAMU MIS","10864453":"# pennsylvania-state-university","19aa6d0f":"# university-of-delaware","f6b260f0":"# U florida","34994aed":"# NEU MIS","f06eeec3":"# U Iowa","1c6bf862":"# georgia state uni\n","a3e2e31e":"# CMU","65ccdee0":"# Rutgers newark","80c0b995":"# new-york-university","ba1889d0":"# northwestern","0a717b66":"# university-of-utah","cee784c2":"# Kelley -Indiana MIS","eebd09db":"# minnesota Twin cities","ed43f55c":"# Suny B","b1edbe62":"# iowa-state-university","c4c53575":"# ASU","f8e37eae":"# rensselaer-polytechnic-institute","7279b570":"# Boston","8118a3b3":"# santa clara","5cedeadc":"# Eller mis","1044cfd6":"# ut Arlington","68649269":"# Rutgers Mis","3c603ac6":"# university-of-texas-austin"}}