{"cell_type":{"196db865":"code","241d8600":"code","9d175c68":"code","f6626463":"code","058e47b5":"code","81afe7f7":"code","ee19109e":"code","ab34e476":"code","de0831bc":"code","02edbb3f":"code","19358b4c":"code","c94c16a9":"code","783f4eea":"markdown","bc46c2e3":"markdown","08f3e9dc":"markdown","37f36f16":"markdown","f2ac27f0":"markdown","c1ab2405":"markdown","998beada":"markdown","d5c235c9":"markdown","f9c45842":"markdown","416b824b":"markdown","13c7e09d":"markdown","a294894c":"markdown"},"source":{"196db865":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","241d8600":"df = pd.read_csv('\/kaggle\/input\/github-programming-languages-data\/prs.csv')\ndf.head()","9d175c68":"df.info()","f6626463":"df.describe()","058e47b5":"languages = df['name'].unique()\nprint(f'There are {len(languages)} unique languages in the data set.')\nlanguages","81afe7f7":"name_and_year = df.groupby(['name','year'])\nsum_counts = name_and_year['count'].sum().reset_index().sort_values('count', ascending=False)\nsum_counts.head(25)","ee19109e":"import matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\nimport seaborn as sns\nsns.set()","ab34e476":"sns.lineplot(data=sum_counts.head(50), x='year',y='count',hue='name')","de0831bc":"plot = sns.lineplot(data=sum_counts.head(50), x='year',y='count',hue='name')\n\n# Set labels of x and y axis\nplot.set_xlabel('Year',fontsize=20)\nplot.set_ylabel('Pull Requests (million)',fontsize=15)\n\n# Put the legend out of the figure\n# Reference - https:\/\/stackoverflow.com\/a\/34579525\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.,shadow=True,title='Programming Language')\n","02edbb3f":"# We'll handle styling in the same code snippet this time\nbefore_13 = sum_counts.query('year <= 2013').head(14)\nplot_before_13 = sns.lineplot(data=before_13, x='year',y='count',hue='name')\n\n# Set labels of x and y axis\nplot_before_13.set_xlabel('Year',fontsize=20)\nplot_before_13.set_ylabel('Pull Requests (million)',fontsize=15)\n\n# Put the legend out of the figure\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.,shadow=True,title='Programming Language')","19358b4c":"pr_by_year = df.groupby(['year'])['count'].sum().reset_index().sort_values('count', ascending=False)\npr_by_year.head(10)","c94c16a9":"# Excluded 2011 and 2022 due to lack of data\nplot_annual_pr = sns.barplot(data=pr_by_year.query('year < 2022 & year > 2011'),x='year',y='count')\nplot_annual_pr.set_ylabel('Pull Requests (100K)')\nplot_annual_pr.set_xlabel('Year')","783f4eea":"## Make some assumptions and determine how to find the truth in the data ##\n\nWe can see in the chart above that JavaScript is consistently the most used programming language for Pull Requests on GitHub as far back as 2016. The close runner ups are Python and Java. Interestingly, we don't have any contenders from the years before JavaScript and Python became popularized among developers. I believe this might be due to the fact that as time passed overall Pull Requests increased significantly. If we look farther back in time we might see a different set of languages that were popular before JavaScript and Python reigned supreme. I can confirm these assumptions and get more info by visualizing the following data\n\n- Top 8 Programming Languages by # of GitHub Pull Requests\n- Top 8 Programming Languages by # of GitHub Pull Requests before 2013\n- Number of Pull Requests per year","bc46c2e3":"## ","08f3e9dc":"## Plot the data ##\n### Top 8 Programming Languages by # of GitHub Pull Requests before 2013 ###","37f36f16":"## Conclusion ##\nWe found that Ruby was indeed more popular than Python and JavaScript up until about mid 2012.\nOur hypothesis about pull requests continually increasing over time was wrong. There seems to be a peak in 2016 & 2018 and a sudden drop in 2018 that hasn't quite picked back up yet. \n\n### The most important insight gained ###\nThe increase in Pull Requests from 2019 to 2020 is clearly a result of [Joe Biden telling Coal Miners that they should learn how to code](https:\/\/www.youtube.com\/watch?v=VDRK0MyuuIM) ","f2ac27f0":"## Plot the data ##\n### Top 8 Programming Languages by # of GitHub Pull Requests ###","c1ab2405":"## Load Data ##","998beada":"It looks like our hypothesis might be wrong. Let's plot it!","d5c235c9":"## Clean up the plot ##\n### Top 8 Programming Languages by # of GitHub Pull Requests ### ","f9c45842":"## Analyze Data Set ##","416b824b":"## Import Visualization Packages ##","13c7e09d":"## Group data based on Programming Language name and year ##","a294894c":"## Gather and Plot the data ##\n### Pull Requests by year ###"}}