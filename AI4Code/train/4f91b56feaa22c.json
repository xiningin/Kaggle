{"cell_type":{"110af137":"code","6cc55455":"code","50a40bbb":"code","052ee02a":"code","08d26459":"code","5b99ad8e":"code","fb610140":"code","22c12778":"code","981b2893":"code","160be746":"code","541cb5e9":"code","ab0e2682":"code","19a23231":"code","1508099c":"code","bb08dbe3":"code","99daa387":"code","6a182405":"code","9e6b0853":"code","9a02c1fd":"code","5db1618f":"code","5b9f75f2":"code","801ef1b5":"code","093c9a32":"code","c20e3457":"code","fa4afd3d":"code","74f24369":"code","0dad3048":"code","3d504142":"code","9d38018d":"code","1710da4c":"code","a790e04d":"code","2e1539f1":"code","d219e0b6":"code","a113a725":"code","590f65c8":"code","ff6fc226":"code","770b8070":"code","0c23620b":"code","2521da25":"code","13ec1e4c":"code","0fb90e67":"code","a5c0276c":"code","0acd80aa":"code","65107151":"code","7f3de3c0":"code","c328f87a":"code","cf2594ba":"code","5e10c839":"code","1989756e":"code","44e32501":"code","db053a19":"code","c3df8ddc":"code","24d049d8":"code","a6a6ed0b":"code","cfbae251":"code","6e380d51":"code","0d14ddde":"code","7e35308a":"code","8169c960":"code","0f08bcfc":"code","17742401":"code","47552c59":"code","e6e123b3":"code","7fcc3bc9":"code","f944ee75":"code","d0bf92a4":"code","bf13572a":"code","a7f1da4c":"code","f06592ac":"code","828c45fc":"code","e269de5a":"code","591e3d85":"code","975f2f40":"code","a755f2e0":"code","209204d0":"code","68e86668":"code","d466a876":"code","add63fae":"code","c3fbf1d9":"code","921fe0c5":"markdown","761d33ef":"markdown","1be113e2":"markdown","fd1c5c38":"markdown","d2fc8643":"markdown","6dfc8eb9":"markdown","fa30c9ad":"markdown","7d10b27f":"markdown","3a978491":"markdown","fea324cf":"markdown","35861650":"markdown","5a80047d":"markdown","ab16378e":"markdown","9cc4438e":"markdown","cb32c688":"markdown","5d596fd6":"markdown","e792362e":"markdown","766814d8":"markdown","f4f260c5":"markdown","3efa0d86":"markdown"},"source":{"110af137":"#importing libraries\nimport pandas as pd \nimport numpy as np \nimport seaborn as sns \nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\nimport warnings\nwarnings.filterwarnings('ignore')","6cc55455":"# importing dataset\nglobal_temp = pd.read_csv('\/kaggle\/input\/climate-change-earth-surface-temperature-data\/GlobalTemperatures.csv')\nglobal_temp.head()","50a40bbb":"#datatypes of data\nglobal_temp.dtypes","052ee02a":"global_temp.shape","08d26459":"#information about the dataset\nglobal_temp.info()","5b99ad8e":"#description about the dataset\nglobal_temp.describe()","fb610140":"global_temp.isnull().sum()","22c12778":"import missingno as msno\nmsno.bar(global_temp)","981b2893":"global_temp['dt'][0].split('-')[0]","160be746":"def fetch_year(date):\n    return date.split('-')[0]","541cb5e9":"global_temp['years']=global_temp['dt'].apply(fetch_year)","ab0e2682":"global_temp.head()","19a23231":"data=global_temp.groupby('years').agg({'LandAverageTemperature':'mean','LandAverageTemperatureUncertainty':'mean'}).reset_index()","1508099c":"data.head()","bb08dbe3":"data['Uncertainity_top']= data['LandAverageTemperature'] + data['LandAverageTemperatureUncertainty']\ndata['Uncertainity_bottom']= data['LandAverageTemperature'] - data['LandAverageTemperatureUncertainty']","99daa387":"data.head()","6a182405":"data.columns","9e6b0853":"fig = px.line(data,x='years',y=['LandAverageTemperature','Uncertainity_top', 'Uncertainity_bottom'],title='Average land temperature in World')\nfig.show()","9a02c1fd":"global_temp['dt']=pd.to_datetime(global_temp['dt'])","5db1618f":"global_temp.dtypes","5b9f75f2":"global_temp['month']=global_temp['dt'].dt.month","801ef1b5":"global_temp.head()","093c9a32":"def get_season(month):\n    if month>=3 and month<=5:\n        return 'spring'\n    elif month>=6 and month<=8:\n        return 'summer'\n    elif month>=9 and month<=11:\n        return 'autumn'\n    else:\n        return 'winter'","c20e3457":"global_temp['season']=global_temp['month'].apply(get_season)","fa4afd3d":"global_temp.head()","74f24369":"years=global_temp['years'].unique()","0dad3048":"spring_temp = []\nsummer_temp = []\nautumn_temp = []\nwinter_temp = []\nfor year in years:\n    current_df=global_temp[global_temp['years'] == year]\n    spring_temp.append(current_df[current_df['season'] == 'spring']['LandAverageTemperature'].mean())\n    summer_temp.append(current_df[current_df['season'] == 'summer']['LandAverageTemperature'].mean())\n    autumn_temp.append(current_df[current_df['season'] == 'autumn']['LandAverageTemperature'].mean())\n    winter_temp.append(current_df[current_df['season'] == 'winter']['LandAverageTemperature'].mean())\n    ","3d504142":"season = pd.DataFrame()","9d38018d":"season['year'] = years\nseason['spring_temp'] = spring_temp\nseason['summer_temp'] = summer_temp\nseason['autumn_temp'] = autumn_temp\nseason['winter_temp'] = winter_temp","1710da4c":"season.head()","a790e04d":"fig=px.line(season,y=['spring_temp','summer_temp','autumn_temp','winter_temp'],title='Avg.temperature in each season')\nfig.show()","2e1539f1":"df=pd.read_csv('\/kaggle\/input\/climate-change-earth-surface-temperature-data\/GlobalLandTemperaturesByCity.csv')","d219e0b6":"df.head()","a113a725":"usa=df[df['Country']=='United States']","590f65c8":"data=['New York','Los Angeles','San Francisco']","ff6fc226":"data2=usa[usa['City'].isin(data)]\ndata2.head()","770b8070":"data2=data2[['dt','AverageTemperature']]\ndata2.head()","0c23620b":"data2.columns=['Date','Temp']\ndata2.head()","2521da25":"data2['Date']=pd.to_datetime(data2['Date'])","13ec1e4c":"data2.isnull().sum()","0fb90e67":"data2.dropna(inplace=True)","a5c0276c":"data2.shape","0acd80aa":"data2.set_index('Date',inplace=True)","65107151":"sns.lineplot(x=data2.index,y=data2['Temp'])","7f3de3c0":"pip install statsmodels","c328f87a":"from statsmodels.tsa.stattools import adfuller\ntest_result=adfuller(data2['Temp'])","cf2594ba":"def adfuller_test(temp):\n    result=adfuller(temp)\n    labels = ['ADF Test Statistic','p-value','#Lags Used','Number of Observations Used']\n    for value,label in zip(result,labels):\n        print(label+' : '+str(value) )\n    if result[1] <= 0.05:\n        print(\"strong evidence against the null hypothesis(Ho), reject the null hypothesis. Data has no unit root and is stationary\")\n    else:\n        print(\"weak evidence against null hypothesis, time series has a unit root, indicating it is non-stationary \")","5e10c839":"adfuller_test(data2['Temp'])","1989756e":"df=data2.copy()","44e32501":"df.head()","db053a19":"df['First_temp_diff']=df['Temp']-df['Temp'].shift(12)","c3df8ddc":"df.head()","24d049d8":"adfuller_test(df['First_temp_diff'].dropna())","a6a6ed0b":"df[['First_temp_diff']].plot(figsize=(30,15))","cfbae251":"data2['month']=data2.index.month","6e380d51":"data2['year']=data2.index.year","0d14ddde":"data2.head()","7e35308a":"pivot = data2.pivot_table(values='Temp',index='month',columns='year')","8169c960":"pivot","0f08bcfc":"pivot.plot(figsize=(20,6))\nplt.legend().remove()\nplt.xlabel('Months')\nplt.ylabel('Temperature')","17742401":"monthly_seasonality=pivot.mean(axis=1)\nmonthly_seasonality.plot(figsize=(20,6))","47552c59":"df.head()","e6e123b3":"df=df[['First_temp_diff']]\ndf.dropna(inplace=True)","7fcc3bc9":"df.head()","f944ee75":"df['First_temp_diff'].rolling(window=5).mean()","d0bf92a4":"value=pd.DataFrame(df['First_temp_diff'])","bf13572a":"temp_df=pd.concat([value,df['First_temp_diff'].rolling(window=5).mean()],axis=1)","a7f1da4c":"temp_df.columns=['actual_temp','forecast_temp']\ntemp_df.head()","f06592ac":"from sklearn.metrics import mean_squared_error,mean_absolute_percentage_error\nnp.sqrt(mean_squared_error(temp_df['forecast_temp'][4:],temp_df['actual_temp'][4:]))","828c45fc":"from statsmodels.graphics.tsaplots import plot_acf,plot_pacf","e269de5a":"plot_acf(df['First_temp_diff'].dropna())","591e3d85":"plot_pacf(df['First_temp_diff'].dropna())","975f2f40":"df.isna().sum()","a755f2e0":"#training data\ntraining_data=df[0:6000]\ntest_data = df[6000:]","209204d0":"from statsmodels.tsa.arima_model import ARIMA","68e86668":"arima = ARIMA(training_data,order=(2,1,3))","d466a876":"#fit the model\nmodel= arima.fit()","add63fae":"#predictions \npredictions=model.forecast(steps=len(test_data))[0]\npredictions","c3fbf1d9":"np.sqrt(mean_squared_error(test_data,predictions))","921fe0c5":"#### ARIMA stands for Autoregressive Integrated Moving Average. It is a combination of two models which are autoregressive and moving average.\n#### ARIMA Model has three parameters:\n#####  p: it is the number of autoregressive lags.\n#####  d: it is the order of differencing required to make the series stationary.\n#####  q: it is the number of moving average lags.","761d33ef":"## Using moving average","1be113e2":"# Build time series \n\n","fd1c5c38":"### From this we conclude,Global warming increases in the last decades,as average temperature is more .","d2fc8643":"### Examine if there is a seasonality factor in data or not?","6dfc8eb9":"# Data Preprocessing\n","fa30c9ad":"### Checking the null values","7d10b27f":"So,We get a very less error in our prediction.","3a978491":"## Using ARIMA\n\n\n","fea324cf":"### finding the season","35861650":"We group the data by years to get more meaningful insights.","5a80047d":"#### We found some kind of seasonality in the data.","ab16378e":"\n### Is there any global warming wrt year?","9cc4438e":"### Season wise it's get warmer.","cb32c688":"### To check we use:\n1.Rolling Statistics: Rolling statistics is a visualization technique, in which you plot the moving average to see if it varies over time.\n\n2.ADCF Test: ADCF stands for Augmented Dickey-Fuller test which is a statistical unit root test. It gives us various values which can help us   identifying stationarity. It comprises Test Statistics & some critical values for some confidence levels. If the Test statistics is less than the critical values, we can reject the null hypothesis & say that the series is stationary. The Null hypothesis says that time series is non-stationary.\nTHE ADCF test also gives us a p-value. According to the null hypothesis, lower values of p is better.","5d596fd6":"### Explore average temperature in each season","e792362e":"<p style = \"font-size : 50px; color : #532e1c ; font-family : 'Comic Sans MS'; text-align : center; background-color : #bedcfa; border-radius: 5px 5px;\"><strong>Time Series Analysis<\/strong><\/p>\n\n\n![image.png](attachment:dd7bd098-c64a-4c34-b2cf-c81451c58ced.png)","766814d8":"# Exploratory Data Analysis","f4f260c5":"### Whether it is stationary or not:\n## Conditions:\n### 1.Time series should have a constant mean.\n### 2.Time series should have a constant standard deviation.\n### 3.Time series\u2019s auto-covariance should not depend on time.\n\n","3efa0d86":"Firstly,we seprate the year from the date column"}}