{"cell_type":{"29c890d4":"code","b03ebb41":"code","ee35838f":"code","7d1a6fbe":"code","ac37504b":"code","0041cad9":"code","708d8508":"code","1b5aeb17":"code","912284a8":"code","ee535843":"code","7d47d2a8":"code","169b3125":"code","de15c038":"code","3608bb16":"code","2b8e18e4":"code","3d46f075":"code","a9e5e92e":"code","bd6729e6":"code","b1af0eb4":"code","4c7436f6":"code","bf99f419":"code","96da1b19":"code","720b4ffe":"code","182e6b7d":"code","141df29c":"code","8ccb719d":"code","053c4d75":"code","4d9439f0":"code","8096f511":"code","70319093":"code","c358ee6e":"code","c56fdf4e":"code","411ecfa9":"code","79151ee3":"code","c709bbcc":"code","bb32a52f":"code","d25a6885":"code","7f50f571":"code","844dbb5b":"code","bcf6b100":"code","36d2b528":"code","2b71500a":"code","ca6d7ab2":"code","fcaf5808":"code","086878a2":"code","98bee5f8":"code","3933b831":"code","5b289cb6":"code","60041670":"code","3cf8731f":"code","0234c94b":"code","08ac4859":"code","1281d05b":"code","a589c6cc":"code","f72c5e57":"code","2d73c25c":"code","30d42831":"code","b079b158":"code","146080d4":"code","802bf06c":"code","5c1d8de3":"markdown","2ed67039":"markdown","1b09c38f":"markdown","51576045":"markdown","ea081921":"markdown","3f5d871a":"markdown","6878ef71":"markdown","4ebb7044":"markdown","997ac06e":"markdown","abccd473":"markdown","8871b19f":"markdown","3081e698":"markdown"},"source":{"29c890d4":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom scipy import stats\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression, Lasso, Ridge\nprint(\"Imported\")","b03ebb41":"sns.set_theme()","ee35838f":"Accidents = pd.read_csv('..\/input\/dft-accident-data\/Accidents0515.csv',index_col='Accident_Index')\nCasualities = pd.read_csv('..\/input\/dft-accident-data\/Casualties0515.csv',error_bad_lines=False,index_col='Accident_Index',warn_bad_lines=False)\nVehicles = pd.read_csv('..\/input\/dft-accident-data\/Vehicles0515.csv',error_bad_lines=False,index_col='Accident_Index',warn_bad_lines=False)\nprint('Datasets Imported')","7d1a6fbe":"Accidents.head()","ac37504b":"print(\"Number of rows present in a dataset    :{}\".format(Accidents.shape[0]))\nprint(\"Number of columns present in a dataset :{}\".format(Accidents.shape[1]))","0041cad9":"Accidents.info()","708d8508":"Accidents[\"Date\"] = Accidents[\"Date\"].astype(\"datetime64[ns]\")\nAccidents[\"Day\"] = Accidents[\"Date\"].dt.day\nAccidents[\"Month\"] = Accidents[\"Date\"].dt.month\nAccidents[\"Year\"] = Accidents[\"Date\"].dt.year","1b5aeb17":"Accidents[\"Time\"] = Accidents[\"Time\"].astype(\"datetime64[ns]\")","912284a8":"Accidents.columns","ee535843":"Accidents.isnull().sum()","7d47d2a8":"Accidents[Accidents.isna().any(axis=1)]","169b3125":"Accidents.drop(\"LSOA_of_Accident_Location\",axis=1,inplace = True)\nAccidents.dropna(inplace=True)","de15c038":"Accidents.duplicated().sum()","3608bb16":"Accidents.drop_duplicates(inplace=True)","2b8e18e4":"Accidents.info()","3d46f075":"Accidents.isnull().sum()","a9e5e92e":"Accidents.duplicated().sum()","bd6729e6":"Accidents.hist(bins = 50, figsize = (20,15))\nplt.show()","b1af0eb4":"print(\"Number of rows present in a dataset after preprocessing     :{}\".format(Accidents.shape[0]))\nprint(\"Number of columns present in a dataset after preprocessing  :{}\".format(Accidents.shape[1]))","4c7436f6":"Accidents.corr()","bf99f419":"plt.figure(figsize = (50,50))\nsns.heatmap(data = Accidents.corr(),annot = True, cmap = \"YlGnBu\")\nplt.show()","96da1b19":"Casualities.head()","720b4ffe":"print(\"Number of rows present in a dataset    :{}\".format(Casualities.shape[0]))\nprint(\"Number of columns present in a dataset :{}\".format(Casualities.shape[1]))","182e6b7d":"Casualities.info()","141df29c":"Casualities.isnull().sum()","8ccb719d":"Casualities.duplicated().sum()","053c4d75":"Casualities.drop_duplicates(inplace=True)","4d9439f0":"Casualities.describe()","8096f511":"Casualities.hist(bins = 50, figsize = (20,15))\nplt.show()","70319093":"print(\"Number of rows present in a dataset after preprocessing     :{}\".format(Casualities.shape[0]))\nprint(\"Number of columns present in a dataset after preprocessing  :{}\".format(Casualities.shape[1]))","c358ee6e":"Casualities.corr()","c56fdf4e":"plt.figure(figsize = (15,15))\nsns.heatmap(data = Casualities.corr(),annot = True, cmap = \"YlGnBu\")\nplt.show()","411ecfa9":"Vehicles.head()","79151ee3":"print(\"Number of rows present in a dataset    :{}\".format(Vehicles.shape[0]))\nprint(\"Number of columns present in a dataset :{}\".format(Vehicles.shape[1]))","c709bbcc":"list(Vehicles.columns)","bb32a52f":"Vehicles.info()","d25a6885":"Vehicles.isnull().sum()","7f50f571":"Vehicles.duplicated().sum()","844dbb5b":"Vehicles.drop_duplicates(inplace = True)","bcf6b100":"Vehicles.describe()","36d2b528":"Vehicles.hist(bins = 50, figsize = (20,15))\nplt.show()","2b71500a":"print(\"Number of rows present in a dataset after preprocessing     :{}\".format(Vehicles.shape[0]))\nprint(\"Number of columns present in a dataset after preprocessing  :{}\".format(Vehicles.shape[1]))","ca6d7ab2":"Vehicles.corr()","fcaf5808":"plt.figure(figsize = (20,15))\nsns.heatmap(data = Vehicles.corr(),annot = True, cmap = \"YlGnBu\")\nplt.show()","086878a2":"Vehicles[\"Vehicle_Reference\"].sort_values(ascending=True)","98bee5f8":"Casualities[\"Vehicle_Reference\"].sort_values(ascending = True)","3933b831":"#cas_veh_merge = pd.merge(Casualities, Vehicles, how = \"outer\", on = \"Vehicle_Reference\")","5b289cb6":"plt.figure(figsize = (20,10))\nplt.subplot(1,2,1)\nsns.scatterplot(data=Accidents, x = \"Longitude\", y = \"Latitude\", color = \"crimson\", alpha = 0.2)\n\nplt.subplot(1,2,2)\nsns.scatterplot(data=Accidents, x = \"Longitude\", y = \"Latitude\", hue = \"Accident_Severity\", palette = \"winter\")\nplt.show()","60041670":"Accidents.plot(kind = \"scatter\", x = \"Longitude\", y = \"Latitude\", alpha = 0.5,\n             s = Accidents[\"Number_of_Casualties\"]\/100, label = \"Number_of_Casualties\", figsize=(15,15),\n             c = \"Accident_Severity\", cmap = plt.get_cmap(\"YlGnBu\"), colorbar= True\n             )\nplt.legend()","3cf8731f":"plt.figure(figsize=(15,7))\nax=sns.countplot(Accidents['Accident_Severity'], palette = \"YlGnBu\")\nplt.title('ACCIDENT SEVERITY', fontsize=15)\nax.set_xticklabels(['low','normal','high'])\nplt.grid(alpha=0.4)","0234c94b":"plt.figure(figsize=(15,7))\nax = sns.countplot('Road_Type',hue='Accident_Severity',data=Accidents, \n                   order = Accidents[\"Road_Type\"].value_counts().index, palette = \"YlGnBu\")\nax.set_xticklabels(['Single carriageway','Dual_carriageway','Roundabout',\n                    'One_way_street ',\n                    'Slip road','Unknown'])\nplt.legend(['Fatal','Serious','Slight'])\nplt.ylabel(\"Frequency\", fontsize = 14)\nplt.show()","08ac4859":"plt.figure(figsize=(15,7))\nax=sns.countplot('Light_Conditions',data=Accidents,\n                 order = Accidents[\"Light_Conditions\"].value_counts().index,\n                 palette = \"YlGnBu\") \nax.set_xticklabels(['Daylight','Darkness - lights lit',\n                    'Darkness - no lighting',\n                    'Darkness - lighting unknown',\n                    'Darkness - lights unlit'])\nplt.title('ACCIDENT RATES BASED ON LIGHT CONDITIONS',fontsize=15)\nplt.ylabel(\"Frequency\", fontsize = 14)\nplt.show()","1281d05b":"plt.figure(figsize=(50,15))\nsns.countplot('Age_of_Casualty',data=Casualities, palette = \"YlGnBu\")\nplt.title('CASUALITY DISTRIBUTION BASED ON AGE', fontsize=15)\nplt.ylabel(\"frequency\", fontsize = 12)\nplt.show()","a589c6cc":"#Distrubution of casualities based on age:\nplt.figure(figsize=(50,15))\nsns.countplot(x = 'Age_of_Casualty',data=Casualities, \n              order = Casualities[\"Age_of_Casualty\"].value_counts().index, \n              palette = \"YlGnBu\")\nplt.title('CASUALITY DISTRIBUTION BASED ON AGE', fontsize=15)\nplt.ylabel(\"frequency\", fontsize = 12)\nplt.show()","f72c5e57":"plt.figure(figsize=(25,40))\nsns.countplot(y = 'Age_of_Casualty', hue = \"Sex_of_Casualty\",\n              data=Casualities, \n              order = Casualities[\"Age_of_Casualty\"].value_counts().index, \n              palette = \"YlGnBu\")\nplt.title('CASUALITY DISTRIBUTION BASED ON AGE', fontsize=15)\nplt.legend(['other','Male','Female'],prop={'size': 30}, loc=0)\nplt.xlabel(\"frequency\", fontsize = 12)\nplt.show()","2d73c25c":"plt.figure(figsize = (15,7))\nax=sns.countplot('Casualty_Class', data=Casualities, palette = \"YlGnBu\",order = Casualities[\"Casualty_Class\"].value_counts().index)\nax.set_xticklabels(['Passenger','Driver_or_Rider','Pedestrian'])\nplt.show()","30d42831":"plt.figure(figsize=(15,7))\nax=sns.countplot(Casualities['Sex_of_Casualty'], palette = \"YlGnBu\")\nplt.title('CASUALITY DISTRIBUTION BASED ON SEX', fontsize=15)\nax.set_xticklabels(['other','Male','Female'])\nplt.grid(alpha=0.4)","b079b158":"import gmaps\n\ngmaps.configure(api_key = \"Use your API key here\")","146080d4":"locations = Accidents[[\"Longitude\",\"Latitude\"]]\nweights_1 = Accidents[\"Accident_Severity\"]\nfig = gmaps.figure()\nfig.add_layer(gmaps.heatmap_layer(locations, weights = weights_1))\nfig","802bf06c":"import folium\nfrom folium.plugins import MarkerCluster\n\nAccidents = Accidents[[\"Longitude\",\"Latitude\",\"Accident_Severity\"]][:].dropna()\nlocationlist = Accidents[[\"Longitude\",\"Latitude\"]].values.tolist()\n\n\nm = folium.Map(location=[51.5085300,-0.1257400], tiles='openstreetmap', zoom_start=15)\nmarker_cluster = MarkerCluster().add_to(m)\nfor i in range(0,len(locationlist)):\n    folium.CircleMarker(locationlist[i],radius = float(Accidents[\"Accident_Severity\"].values[0]\/1e7),\n                        popup=\"Accident Severity : %s\"%Accidents[\"Accident_Severity\"].values[0],color=\"red\",fill_color='red').add_to(m)\nm","5c1d8de3":"Note: Try the above folium code with external notebooks since kaggle notebooks doesn't it.","2ed67039":"From the above analyses, it is very much clear that most of the accidents which occured within the provided region comes under the age group of 17-21, and notably most of them are falls under the male category. Furthermore, it clearly shows that most of the accidents are occured in the daylight time at single carriageway. Most of the victims of these car accidents are drivers and most of them are males followed by females","1b09c38f":"### **GEO-ANALYSIS USING FOLIUM**","51576045":"Note: Try the above gmap code with external notebooks since kaggle notebooks doesn't it.","ea081921":"### **ACCIDENTS**","3f5d871a":"### **ANALYSIS**","6878ef71":"#### ***Wear Mask and Stay Safe!***","4ebb7044":"#### **VEHICLES**","997ac06e":"### **CASUALITIES**","abccd473":"### **GEO-ANALYSIS USING GMAPS**","8871b19f":"### **Context**\n\nUK police forces collect data on every vehicle collision in the uk on a form called Stats19. Data from this form ends up at the DfT and is published at https:\/\/data.gov.uk\/dataset\/road-accidents-safety-data\n\n### **Content**\n\nThere are 3 CSVs in this set. Accidents is the primary one and has references by Accident_Index to the casualties and vehicles tables. This might be better done as a database.\n\n### **Inspiration**\n\nQuestions to ask of this data -\n\ncombined with population data, how do different areas compare?\n* what trends are there for accidents involving different road users eg motorcycles, peds, cyclists\n* are road safety campaigns effective?\n* likelihood of accidents for different groups \/ vehicles\n* many more..\n\n### **Manifest**\n\ndft05-15.tgz - tar of Accidents0515.csv, Casualties0515.csv and Vehicles0515.csv\ntidydata.sh - script to get and tidy data.","3081e698":"#### ***Thank you for your time...!!***"}}