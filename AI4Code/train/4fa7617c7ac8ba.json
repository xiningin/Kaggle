{"cell_type":{"91a9e969":"code","72ad3b49":"code","6919eb92":"code","09e4f61b":"code","fefc7c2e":"code","8311385d":"code","c53e9966":"code","abd65fad":"markdown"},"source":{"91a9e969":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nimport matplotlib.pyplot as plot\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","72ad3b49":"train = pd.read_csv(\"..\/input\/train.csv\")","6919eb92":"train.head()","09e4f61b":"mean_array = train.iloc[:,2:].mean()\nstd_array = train.iloc[:,2:].std()","fefc7c2e":"abolute_mean = []\n\nfor i in range(len(train)):\n    tmp_abs_mean = sum([abs(train.iloc[i,j+2]-mean_array[j])\/std_array[j] for j in range(200)])\/200\n    abolute_mean.append(tmp_abs_mean)\ntrain['abs_mean'] = abolute_mean","8311385d":"import seaborn as sns","c53e9966":"sns.distplot(train.loc[train.target==0,'abs_mean'])\nsns.distplot(train.loc[train.target==1,'abs_mean'])","abd65fad":"I found that the tailedness can separate the positive and negative value well but I tried to use it as a feature, it doesn't help or overfit, any idea?"}}