{"cell_type":{"1be59668":"code","b94e154d":"code","ff297b65":"code","1ddd48ee":"code","93da063b":"code","bd4defd9":"code","69f15aed":"code","84042f86":"code","ae2bfaa1":"code","f75eaf06":"code","74171dc6":"code","19579d36":"markdown","fe0c05a4":"markdown","a541601a":"markdown"},"source":{"1be59668":"import pandas as pd\nimport numpy as np","b94e154d":"train_df = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ntest_df = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")","ff297b65":"print(\"Training Data :\")\nprint(f\"Number of rows : {train_df.shape[0]} and Number of Columns : {train_df.shape[1]}\")\nprint(\"-\"*50)\nprint(\"Testing Data :\")\nprint(f\"Number of rows : {test_df.shape[0]} and Number of Columns : {test_df.shape[1]}\")","1ddd48ee":"def find_missing(df):\n    missing_cols = [x for x in df.columns if df[x].isnull().sum() > 0]\n    missing_val = [df[x].isnull().sum() for x in df.columns if df[x].isnull().sum() > 0]\n    data = pd.DataFrame(index=missing_cols)\n    data[\"value\"] = missing_val\n    data[\"percentage\"] = (data[\"value\"] \/ df.shape[0]) * 100\n    data = data.sort_values(by=\"value\", ascending=False)\n    return data","93da063b":"train_missing = find_missing(train_df)\ntest_missing = find_missing(test_df)","bd4defd9":"train_missing","69f15aed":"test_missing","84042f86":"# Fill the missing values according to the description files","ae2bfaa1":"# training Data \ng_year = np.random.randint(1900, 2010, 81)\n\nf_train_data = {\"PoolQC\": \"NoPool\", \"MiscFeature\": \"NoFeature\", \"Alley\": \"NoAlley\",\n                \"Fence\": \"NoFence\", \"FireplaceQu\": \"NoFirePls\", \"LotFrontage\": 70,\n                \"GarageType\": \"NoGr\", \"GarageYrBlt\": g_year, \"GarageFinish\": \"NoGr\",\n                \"GarageQual\": \"NoGr\", \"GarageCond\": \"NoGr\", \"BsmtExposure\": \"NoBmst\",\n                \"BsmtFinType2\": \"NoBmst\", \"BsmtFinType1\": \"NoBmst\", \"BsmtCond\": \"NoBmst\",\n                \"BsmtQual\": \"NoBmst\", \"MasVnrArea\": 103.685262, \"MasVnrType\": \"Stone\", \"Electrical\": \"SBrkr\"}\n\n\ntest_df.loc[test_df[\"GarageYrBlt\"] > 2010, \"GarageYrBlt\"] = 2010\ng_year1 = np.random.randint(1895, 2010, 78)\n\nf_test_data = {\"PoolQC\": \"NoPool\", \"MiscFeature\": \"NoFeature\", \"Alley\": \"NoAlley\",\n                \"Fence\": \"NoFence\", \"FireplaceQu\": \"NoFirePls\", \"LotFrontage\": 70,\n                \"GarageType\": \"NoGr\", \"GarageYrBlt\": g_year1, \"GarageFinish\": \"NoGr\",\n                \"GarageQual\": \"NoGr\", \"GarageCond\": \"NoGr\", \"BsmtExposure\": \"NoBmst\",\n                \"BsmtFinType2\": \"NoBmst\", \"BsmtFinType1\": \"NoBmst\", \"BsmtCond\": \"NoBmst\",\n                \"BsmtQual\": \"NoBmst\", \"MasVnrArea\": 103.685262, \"MasVnrType\": \"Stone\",\n               \"MSZoning\": \"RL\", \"BsmtFullBath\": 1, \"BsmtHalfBath\": 1, \"Functional\": \"Typ\",\n               \"Utilities\": \"AllPub\", \"GarageCars\": 2, \"GarageArea\": 472.980137, \"TotalBsmtSF\": 1057.429452,\n               \"KitchenQual\": \"TA\", \"BsmtUnfSF\": 567.240411, \"BsmtFinSF2\": 46.549315, \"BsmtFinSF1\": 443.639726,\n               \"Exterior2nd\": \"VinylSd\", \"Exterior1st\": \"VinylSd\", \"SaleType\": \"WD\"}","f75eaf06":"def fill_data(df, dict_val):\n    for key, val in dict_val.items():\n        df.loc[df[key].isnull(), key] = val\n        \nfill_data(train_df, f_train_data)\nfill_data(test_df, f_test_data)","74171dc6":"train_df.to_csv(\"clean_train.csv\", index=False)\ntest_df.to_csv(\"clean_test.csv\", index=False)","19579d36":"## Finding Missing Values","fe0c05a4":"## Load Data","a541601a":"## Filling Missing Values"}}