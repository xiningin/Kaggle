{"cell_type":{"266e24ef":"code","080bf108":"code","0b803063":"code","11dacb86":"code","a3064dd4":"code","7c0bf99a":"code","69a70236":"code","8bf4137e":"code","869e7c7c":"code","c8f8184d":"code","0b35da1f":"code","88af73fe":"code","aea2867d":"code","e9ab9d4e":"code","d96d2272":"code","3c0b3aa5":"code","381b4fc1":"code","8d3778fc":"code","ff635c62":"code","07949ac5":"code","8fba138d":"code","5e08728d":"code","8caf548d":"code","608cad9f":"code","9be8df51":"code","df21491c":"code","8cca50b5":"code","2b599007":"code","32f8fe31":"code","5802ccae":"code","2a9cc42e":"code","0887430c":"markdown","655d96a0":"markdown"},"source":{"266e24ef":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","080bf108":"df = pd.read_csv('..\/input\/mobile-price-classification\/train.csv')","0b803063":"df.head()","11dacb86":"df.dtypes","a3064dd4":"df.describe().T","7c0bf99a":"df.isnull().sum()","69a70236":"sns.pairplot(df)","8bf4137e":"plt.figure(figsize=(17,6))\nsns.heatmap(df.corr(), annot=True)","869e7c7c":"def std_based(col_name,df):\n    mean = df[col_name].mean()   #outliers\n    std = df[col_name].std()\n    cut_off = std * 3\n    lower, upper = mean - cut_off, mean + cut_off\n    new_df = df[(df[col_name] < upper) & (df[col_name] > lower)]\n    return new_df","c8f8184d":"plt.figure(figsize=(12, 6))\nsns.boxplot(data=df, orient='h')","0b35da1f":"df = std_based('px_height', df)\n\nplt.figure(figsize=(12, 6))\nsns.boxplot(data=df, orient='h')","88af73fe":"X = df.drop(['price_range','pc','three_g'], axis=1)\ny = df['price_range']","aea2867d":"from sklearn.model_selection import train_test_split","e9ab9d4e":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","d96d2272":"from sklearn.tree import DecisionTreeClassifier","3c0b3aa5":"model = DecisionTreeClassifier()","381b4fc1":"model.fit(X_train, y_train)","8d3778fc":"model.score(X_test, y_test)","ff635c62":"y_pred = model.predict(X_test)","07949ac5":"from sklearn.metrics import confusion_matrix, classification_report","8fba138d":"confusion_matrix(y_test, y_pred)","5e08728d":"classification_report(y_test, y_pred)","8caf548d":"df.shape","608cad9f":"from sklearn.model_selection import GridSearchCV","9be8df51":"params = {'criterion': ('gini', 'entropy'),\n         'splitter': ('best', 'random'),\n         'max_depth': list(range(1, 20)),\n         'min_samples_split':[2, 3, 4],\n         'min_samples_leaf':(list(range(1, 20)))}\n","df21491c":"tree_cv = GridSearchCV(model, param_grid = params, scoring='accuracy', n_jobs=-1, verbose=1, cv=3)","8cca50b5":"tree_cv.fit(X_train, y_train)","2b599007":"tree_cv.best_params_","32f8fe31":"model = DecisionTreeClassifier(**tree_cv.best_params_)","5802ccae":"model.fit(X_train, y_train)","2a9cc42e":"model.score(X_test, y_test)","0887430c":"# Hyperparameter Tuning","655d96a0":"# Decision Tree Cassifier"}}