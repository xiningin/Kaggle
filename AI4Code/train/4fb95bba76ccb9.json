{"cell_type":{"e065eecd":"code","8ae8ebf5":"code","26ce3fcc":"code","f44160e7":"code","ac72a62e":"code","1d65900a":"code","dc1658ee":"code","0a4e7773":"code","03f94326":"code","bd5ad234":"code","bba32f78":"code","f4b2e5fb":"markdown","f60f964f":"markdown","7ad4b72f":"markdown","f2504a40":"markdown","37fa3649":"markdown"},"source":{"e065eecd":"#importing in all the libraries \nimport numpy as np \nfrom datetime import date\nimport pandas as pd \nimport plotly as py\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom plotly.subplots import make_subplots\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True) \n#loading in the dataset \n#this data set is provided by Kaggle \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","8ae8ebf5":"#reading the dataset file\ndf = pd.read_csv(\"..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv\")","26ce3fcc":"#just some data cleaning\ndf = df.rename(columns={'Country\/Region':'Country'}) #since it has included some provinces from Mainland China\ndf = df.rename(columns={'ObservationDate':'Date'}) #Just for aesthetics\ndf_countries = df.groupby(['Country', 'Date']).max().reset_index().sort_values('Date', ascending=False)\ndf_countries = df_countries.drop_duplicates(subset = ['Country'])\ndf_countries = df_countries[df_countries['Confirmed']>0] #considering only countries with existing cases\ndf_countrydate = df[df['Confirmed']>0]\ndf_countrydate = df_countrydate.groupby(['Date','Country']).sum().reset_index()","f44160e7":"#creating a choropleth map\n#i have a timeseries data which im gonna animate\n\nfig = px.choropleth(df_countrydate, \n                    locations=\"Country\", \n                    locationmode = \"country names\",\n                    color=\"Confirmed\", \n                    hover_name=\"Country\", \n                    animation_frame=\"Date\"\n                   )\n\nfig.update_layout(\n    title_text = 'Spread of Coronavirus',\n    title_x = 0.5,\n    geo=dict(\n        showframe = False,\n        showcoastlines = True,\n    ))\n    \nfig.show()","ac72a62e":"fig = px.choropleth(df_countrydate, \n                    locations=\"Country\", \n                    locationmode = \"country names\",\n                    color=\"Deaths\", \n                    hover_name=\"Country\", \n                    animation_frame=\"Date\"\n                   )\nfig.update_layout(\n    title_text = \"COVID 19 - Deaths over the dates\" ,\n    title_x = 0.5, #alignment of title\n    geo=dict(\n        showframe = False,\n        showcoastlines = False,\n    )\n    )\n    \nfig.show()","1d65900a":"#the classic pie chart\nfig = px.pie(df_countries, values = 'Confirmed',names='Country', height=600)\nfig.update_traces(textposition='inside', textinfo='percent+label')\n\nfig.update_layout(\n    title_x = 0.5,\n    geo=dict(\n        showframe = False,\n        showcoastlines = False,\n    ))\n\nfig.show()","dc1658ee":"#this one looked attractive to me, it gives you visualization of the comparative magnitude of numbers\nfig = px.treemap(df_countries, \n                 path=['Country'],\n                 values = 'Confirmed',\n                 names='Country',\n                 height=600,\n                 title='Proportion of cases',\n                )\n\nfig.show()","0a4e7773":"#growth visualization\nline_data = df.groupby('Date').sum().reset_index()\n\nline_data = line_data.melt(id_vars='Date', \n                 value_vars=['Confirmed', \n                             'Recovered', \n                             'Deaths'], \n                 var_name='Ratio', \n                 value_name='Value')\n\nfig = px.line(line_data, x=\"Date\", y=\"Value\", color='Ratio', \n              title='Confirmed cases, Recovered cases, and Death Over Time')\nfig.show()","03f94326":"df_india = df_countries[df_countries['Country'] == 'India']\ndf_india","bd5ad234":"corona_india=df[df['Country']=='India']\nline_data = corona_india.groupby('Date').sum().reset_index()\n\nline_data = line_data.melt(id_vars='Date', \n                 value_vars=['Confirmed', \n                             'Recovered', \n                             'Deaths'], \n                 var_name='Ratio', \n                 value_name='Value')\n\nfig = px.line(line_data, x=\"Date\", y=\"Value\", color='Ratio', \n              title='Confirmed cases, Recovered cases, and Death Over Time')\nfig.show()","bba32f78":"df[df['Country'] == 'India']","f4b2e5fb":"# *# **2.2 Growth Visualization for India***","f60f964f":"*Hey there! \nThis notebook maps the Spread of COVID - 19.*\n\n**About the disease:**\nIt is a contagious respiratory virus that first started in Wuhan in December 2019. On 2\/11\/2020, the disease is officially named COVID-19 by the World Health Organization. \n\n**Data:**\nThe datasets are provided by John Hopkins University. A big thank you to them!\n![](https:\/\/images.newscientist.com\/wp-content\/uploads\/2020\/01\/27123401\/f0070229-coronavirus_artwork-spl.jpg)","7ad4b72f":"# ***2.1 Peeking into the dataset***","f2504a40":"# **1. World**","37fa3649":"# **2. India**"}}