{"cell_type":{"4978b519":"code","05e3a4cb":"code","9f6f1a20":"code","2063c8a1":"code","bdbc749a":"code","a3489802":"code","f4683494":"code","bc8a2a8c":"code","c242e0a4":"code","a7a32f45":"code","9b8c7198":"code","b7866a6d":"code","efc874a3":"code","c6668cd2":"code","8eb339a0":"markdown","c5f9418d":"markdown","85b1093d":"markdown","1824c4f6":"markdown","bc9336c6":"markdown","90d81700":"markdown"},"source":{"4978b519":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np","05e3a4cb":"train_df = pd.read_csv('\/kaggle\/input\/seoul-bike-rental-ai-pro-iti\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/seoul-bike-rental-ai-pro-iti\/test.csv')\ntrain_df.head()","9f6f1a20":"train_df.shape","2063c8a1":"train_df.dtypes","bdbc749a":"train_df.info()","a3489802":"train_df.describe()","f4683494":"train_df.duplicated().count()","bc8a2a8c":"train_df.isna().sum()","c242e0a4":"plt.bar(train_df['Seasons'], train_df['y'])\nplt.xlabel('Seasons')\nplt.ylabel('Number of bikes')\nplt.show()","a7a32f45":"len(train_df['Hour'])","9b8c7198":"plt.figure(figsize = [10, 5])\n\ny = list(train_df.groupby('Hour')['y'].sum()\/1000)\n\nplt.bar(range(24) , y)\nplt.xticks(range(24), rotation=90)\nplt.xlabel('Hour')\nplt.ylabel('Number of bikes (1000)')\nplt.show()","b7866a6d":"# Box plots to check outliers existence\n\nplt.figure(figsize = [20, 5])\nbase_color = sns.color_palette()[0]\n \nplt.subplot(1, 3, 1)\n# plot Seasons VS y\n_ = sns.boxplot(data=train_df, x='Seasons', y='y', color=base_color)\n\nplt.subplot(1, 3, 2)\n# plot Holiday VS y\n_ = sns.boxplot(data=train_df, x='Holiday', y='y', color=base_color)\n\nplt.subplot(1, 3, 3)\n# Functioning Day VS y\n_ = sns.boxplot(data=train_df, x='Functioning Day', y='y', color=base_color)","efc874a3":"df_for_plot = train_df.iloc[:, 2:12]\nplt.figure(figsize = [12, 8])\nsns.heatmap(df_for_plot.corr(),annot = True, cmap = 'viridis_r', fmt = '.2f');","c6668cd2":"cols = train_df.columns[5:12]\nsamples = np.random.choice(train_df.shape[0], 200, replace = False)\ndiamonds_samp = df_for_plot.loc[samples,:]\nplt.figure(figsize = [15, 15],  tight_layout = 5)\n\nfor i in range(len(cols)):\n    plt.subplot(3, 3, i+1)\n    plt.scatter(data = diamonds_samp, x = 'Temperature(\ufffdC)', y = 'y', c = cols[i], cmap = 'viridis_r')\n    plt.colorbar(label = cols[i])\n    plt.xlabel('Temperatur')\n    plt.ylabel('Number of bikes')\n    plt.title(cols[i] + 'as a third dimension')","8eb339a0":"# Data exploration","c5f9418d":"#### Here we can notice that the 'Hour', 'Tempereture' and 'Dew point temperature' have the heighst correlation with 'y'.","85b1093d":"# Import Libraries","1824c4f6":"# Data assessment","bc9336c6":"#### Conclusion from the previeus visualization We got many outliers in both 'Season' and 'Holiday' features.","90d81700":"### 3D Correlation "}}