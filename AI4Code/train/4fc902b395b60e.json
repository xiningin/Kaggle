{"cell_type":{"d006536f":"code","7eac512a":"code","969dc4a0":"code","e8d8e386":"code","11a7ae65":"code","5318be1c":"code","53e9b4ba":"code","cb544219":"code","5c950e76":"code","d97ef5a2":"code","c8f907b5":"code","127e5a44":"code","47085be6":"code","8b987a5a":"code","4aff60c7":"code","665eda6d":"code","f9ff6181":"markdown","069cdf4c":"markdown","d926eb8a":"markdown","c78735d1":"markdown","fd289cca":"markdown","f0c97b8e":"markdown","a05c10f3":"markdown"},"source":{"d006536f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n#Algorithms\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7eac512a":"#Getting the Dataset\ndf=pd.read_csv('..\/input\/Salary_Data.csv')","969dc4a0":"#checking data\ndf.head()","e8d8e386":"#checking for missing values\ndf.isnull().sum()                   #No missing value exist","11a7ae65":"df.info()","5318be1c":"#Summarizing data\ndf.describe()      ","53e9b4ba":"#Barplot showing gradual inracrease in salary with increase in experience\nsns.barplot(x=df['YearsExperience'],y=df['Salary'])","cb544219":"#Scatter plot showing Linear relationship between two variables\nplt.scatter(x=df['YearsExperience'],y=df['Salary'])","5c950e76":"#Assigning data\nX = df.iloc[:, :-1].values     #input variable\ny = df.iloc[:, 1].values      #Target Variable","d97ef5a2":"#splitting the data into train and test\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=1\/3,random_state=0)","c8f907b5":"#Fitting Linear Regression to training data\nregressor=LinearRegression()\nregressor.fit(X_train,y_train)","127e5a44":"y_pred=regressor.predict(X_test)","47085be6":"# Visualising the Training set results\nplt.scatter(X_train, y_train, color = 'red')\nplt.plot(X_train, regressor.predict(X_train), color = 'blue')\nplt.title('Salary vs Experience (Training set)')\nplt.xlabel('Years of Experience')\nplt.ylabel('Salary')\nplt.show()","8b987a5a":"# Visualising the Test set results\nplt.scatter(X_test, y_test, color = 'red')\nplt.plot(X_train, regressor.predict(X_train), color = 'blue')\nplt.title('Salary vs Experience (Test set)')\nplt.xlabel('Years of Experience')\nplt.ylabel('Salary')\nplt.show()","4aff60c7":"MAE= metrics.mean_absolute_error(y_test,y_pred) #Mean absolute error \nMSE= metrics.mean_squared_error(y_test,y_pred) #Mean squared error \nRMSE = np.sqrt(MSE) # Root Mean squared error","665eda6d":"print(\"Mean Absoulte Eroor\",MAE)","f9ff6181":"**Interpretation**","069cdf4c":"**Model**","d926eb8a":"**Model Evaluation**","c78735d1":"**Visualizing Results**","fd289cca":"**Visualizing Data**","f0c97b8e":"The above model shows that the Salary of an employess depends upon Years of experience. With increase of experience an employee would get more salary. ","a05c10f3":"**Data Pre Processing**"}}