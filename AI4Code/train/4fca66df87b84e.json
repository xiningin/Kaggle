{"cell_type":{"8e5affa4":"code","1befd160":"code","5daf6a0c":"code","900ab080":"code","714dfa75":"code","63b4a3bf":"code","e6de61d6":"code","7ce632e4":"code","55021610":"code","b817c86b":"code","b31a8432":"code","9f950a20":"markdown","2adee9d0":"markdown","c3708c56":"markdown","6a96112f":"markdown","eb4b3d1b":"markdown","05c607ac":"markdown"},"source":{"8e5affa4":"import numpy as np \nfrom sklearn.metrics import confusion_matrix\nimport keras\nfrom keras import backend as K\nfrom keras.models import Sequential\nfrom keras.layers.core import Dense, Flatten\nfrom keras.layers import Activation\nfrom keras.optimizers import Adam\nfrom keras.metrics import categorical_crossentropy\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom keras.layers.normalization import BatchNormalization\nfrom keras.layers.convolutional import *\nfrom keras.layers import  MaxPooling2D, Dropout\n  \nimport itertools\nfrom matplotlib import pyplot as plt\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn.metrics import classification_report\n","1befd160":"train_path= ('..\/input\/dice-d4-d6-d8-d10-d12-d20\/dice\/train')\nvalid_path= ('..\/input\/dice-d4-d6-d8-d10-d12-d20\/dice\/valid')","5daf6a0c":"batch_size_train=10\nbatch_size_valid=10\ntargetsize= 48","900ab080":"train_batches= ImageDataGenerator().flow_from_directory(train_path, target_size=(targetsize,targetsize), classes=['d4', 'd6', 'd8', 'd10','d12','d20'],batch_size= batch_size_train)\nvalid_batches= ImageDataGenerator().flow_from_directory(valid_path, target_size=(targetsize,targetsize), classes=['d4', 'd6', 'd8', 'd10','d12','d20'],batch_size= batch_size_valid)","714dfa75":"train_num = len(train_batches)\nval_num = len(valid_batches) ","63b4a3bf":"def plots(ims, figsize=(20,10), rows=1, interp= False, titles= None):\n\tif type(ims[0]) is np.ndarray:\n\t\tims = np.array(ims).astype(np.uint8)\n\t\tif (ims.shape[-1] != 3):\n\t\t\tims= ims.transpose((0,1,2,3))\n\tf= plt.figure(figsize=figsize)\n\tcols= len(ims)\/\/rows if len(ims) %2 == 0 else len(ims)\/\/rows + 1\n\tfor i in range(len(ims)):\n\t\tsp = f.add_subplot(rows, cols, i+1)\n\t\tsp.axis('Off')\n\t\tif titles is not None:\n\t\t\tsp.set_title(titles[i], fontsize=12)\n\t\tplt.imshow(ims[i], interpolation=None if interp else 'none')","e6de61d6":"imgs, labels = next(train_batches)\nplots(imgs, titles = labels)","7ce632e4":"model = Sequential([\n    Conv2D(32, (3, 3), padding='same', activation='relu', input_shape=(targetsize,targetsize, 3)),\n    Conv2D(32, (3, 3), activation='relu'),\n    MaxPooling2D(pool_size=(2, 2)),\n    Dropout(0.25),\n  \n    Conv2D(64, (3, 3), padding='same', activation='relu'),\n    Conv2D(64, (3, 3), activation='relu'),\n    MaxPooling2D(pool_size=(2, 2)),\n    Dropout(0.25),\n  \n    Conv2D(64, (3, 3), padding='same', activation='relu'),\n    Conv2D(64, (3, 3), activation='relu'),\n    MaxPooling2D(pool_size=(2, 2)),\n    Dropout(0.25),\n  \n    Flatten(),\n    Dense(512, activation='relu'),\n    Dropout(0.5),\n    Dense(6, activation='softmax'),\n  \n    ])","55021610":"model.summary()","b817c86b":"model.compile(Adam(lr=.0001), loss='categorical_crossentropy', metrics= ['accuracy'])\nhistory= model.fit_generator(train_batches, steps_per_epoch= train_num ,\n\t\t\t\t\tvalidation_data=valid_batches, validation_steps= val_num, epochs=15, verbose=2)","b31a8432":"# Accuracy Curves\nplt.figure(figsize=[10,7])\nplt.plot(history.history['acc'],'r',linewidth=3.0)\nplt.plot(history.history['val_acc'],'b',linewidth=3.0)\nplt.legend(['Training Accuracy', 'Validation Accuracy'],fontsize=12)\nplt.xlabel('Epochs ',fontsize=16)\nplt.ylabel('Accuracy',fontsize=16)\nplt.title('Accuracy Curves',fontsize=16)\n\n# Loss Curves\nplt.figure(figsize=[10,7])\nplt.plot(history.history['loss'],'r',linewidth=3.0)\nplt.plot(history.history['val_loss'],'b',linewidth=3.0)\nplt.legend(['Training loss', 'Validation Loss'],fontsize=12)\nplt.xlabel('Epochs ',fontsize=16)\nplt.ylabel('Loss',fontsize=16)\nplt.title('Loss Curves',fontsize=16)","9f950a20":"#### 5-Training the model.  <H4>","2adee9d0":"#### 1-The first step is loading database. <H4>","c3708c56":"#### 2-Defining batch size, target size to using in batch to train and batch to validating. For more information about batches in training and modeling of a neural network, you can read this link <https:\/\/towardsdatascience.com\/epoch-vs-iterations-vs-batch-size-4dfb9c7ce9c9>  <H4>","6a96112f":"### Image classification using Keras. <H3>\n\nThe database has six types of dice.  ","eb4b3d1b":"#### 3-Plotting some samples from the database. Each sample has its respective label. <H4>","05c607ac":"#### 4-Generating the model.  <H4>"}}