{"cell_type":{"7196fb7e":"code","c282d9fd":"code","5dfeed0f":"code","98bc3120":"code","a002fef9":"code","aaadf123":"code","d05701c7":"code","2241b810":"code","db91c793":"code","90663a5e":"code","8f673872":"code","a2da91a0":"code","5cd6dd84":"code","1e0ac364":"code","06e082a4":"code","5ea91a40":"code","cfb93cd4":"code","593bb707":"code","3316f0d7":"code","8859cb26":"code","e85471c7":"markdown","817d9788":"markdown","73bd9838":"markdown","171bd721":"markdown","c4b72e99":"markdown","b967d0c6":"markdown","a7a8f88e":"markdown","5ef2a46d":"markdown","23d4f1e5":"markdown","0fa5abf8":"markdown","4790b4b2":"markdown","1d301bf3":"markdown","c929e93c":"markdown","04972f97":"markdown","c360965f":"markdown","7632f5b0":"markdown","7f029a2d":"markdown","9987506e":"markdown","46559e57":"markdown","e40aebd9":"markdown","a23372d3":"markdown","ca1cf497":"markdown"},"source":{"7196fb7e":"import pandas as pd\nimport numpy as np","c282d9fd":"train = pd.read_csv('..\/input\/tabular-playground-series-feb-2021\/train.csv')\ntest = pd.read_csv('..\/input\/tabular-playground-series-feb-2021\/test.csv')\n\ntrain.head()","5dfeed0f":"train.describe()","98bc3120":"import pandas_profiling as pp \nprofile = pp.ProfileReport(train) \nprofile.to_file(\"output.html\")\nprofile","a002fef9":"import h2o\nh2o.init()","aaadf123":"h2o_train = h2o.H2OFrame(\n    train,\n    skipped_columns=None ) ","d05701c7":"x = h2o_train.columns\ny = 'target'\nx.remove(y)   # will remove target column data from training daa","2241b810":"from h2o.automl import H2OAutoML \naml = H2OAutoML(\n    nfolds = 3,              # number of KFolds for cross-validation\n    max_runtime_secs = 2000, # after this certain time limit, further model training will be discarded\n    seed = 42,               # random seed\n    stopping_metric ='RMSE', \n    sort_metric ='RMSE', \n    max_models=40            # maximum number of models you want H2o to train and validate on your data\n) ","db91c793":"%%time\naml.train(x = x, y = y, training_frame = h2o_train) ","90663a5e":"lb = aml.leaderboard \nlb.head(rows = lb.nrows)","8f673872":"aml.leader","a2da91a0":"h2o_test = h2o.H2OFrame(test) \npreds = aml.predict(h2o_test)\npreds.as_data_frame().values.flatten()","5cd6dd84":"sample_submission = pd.read_csv('..\/input\/tabular-playground-series-feb-2021\/sample_submission.csv')\nsample_submission['target'] = preds.as_data_frame().values.flatten()\nsample_submission.to_csv('h2o_submission.csv', index=False)","1e0ac364":"!pip install pycaret","06e082a4":"from pycaret.regression import *","5ea91a40":"exp_reg = setup(\n                train,           # passing the pandas dataframe for training\n                target=\"target\", # telling which one is Target feature\n                fold = 3         # number of KFold for cross-validation\n               )","cfb93cd4":"compare_models(sort = 'RMSE')","593bb707":"catboost = create_model(\"catboost\")","3316f0d7":"prediction = predict_model( catboost,data=test)","8859cb26":"sample_submission = pd.read_csv('..\/input\/tabular-playground-series-feb-2021\/sample_submission.csv')\nsample_submission['target'] = prediction['Label']\nsample_submission.to_csv('pycaret_submission.csv', index=False)","e85471c7":"### Importing Regression module from PyCaret library","817d9788":"### View the H2O aml leaderboard","73bd9838":"## Setting up PyCaret Regression model","171bd721":"## **Pandas Profiling:** Yet nother automated library for EDA\n","c4b72e99":"### Importing Libraries ","b967d0c6":"### Training the AutoML model","a7a8f88e":"### Importing and Initializing h2o\n","5ef2a46d":"##### As we can see **CatBoost** is performing good, we will create a model with CatBoost!\n> More about create_model: Creating a model in any module is as simple as writing create_model. It takes only one parameter i.e. the Model ID as a string. For supervised modules (classification and regression) this function returns a table with k-fold cross validated performance metrics along with the trained model object.","23d4f1e5":"# 2. PyCaret: Our Second AutoML Library\n\n> More about PyCaret: PyCaret is an open source, low-code machine learning library in Python that allows you to go from preparing your data to deploying your model within minutes in your choice of notebook environment.\n\nPyCaret is a minimal code AutoML library, read more about PyCaret here: https:\/\/pycaret.org\/","0fa5abf8":"## Changing our Test data in H2O dataframe format and Prediction using best model!!!","4790b4b2":"### Divinding traning features and Terget feature","1d301bf3":"### More details about the leader(best) trained model","c929e93c":"### Installing PyCaret","04972f97":"### Setting up the H2OAutoML\n> More about it: The Automatic Machine Learning (AutoML) function automates the supervised machine learning model training process.\n","c360965f":"### Comparing all models using *compare_models()*\n\n> More about compare_models(): This function trains and evaluates performance of all estimators available in the \n> model library using cross validation.","7632f5b0":"### Reading the training and testing data\n","7f029a2d":"# 1. H2O.ai: Our First AutoML Library\n\n> H2O AI Hybrid Cloud offers an end-to-end platform that democratizes artificial intelligence, enabling every employee, customer, and citizen with sophisticated AI technology and easy-to-use AI applications.\n\nH2O is one the most advanced AutoML library, check more about H2O here: https:\/\/www.h2o.ai\/","9987506e":"# Lets do the Prediction!!!\n\n> More about predict_model: This functions takes a trained model object and the dataset to predict. It will automatically apply the entire transformation pipeline created during the experiment","46559e57":"### In this notebook we gonna use two AutoML libraries:\n1. H2O \n2. PyCaret\n\n**It is a very introductory notebook about AutoML, we will not be going into much depth, though this notebook will give you a good idea about AutoML.**\n\n> More about AutoML: Automated machine learning is the process of automating the process of applying machine learning to real-world problems. AutoML covers the complete pipeline from the raw dataset to the deployable machine learning model.","e40aebd9":"Note: We can further improve accracy of our models with auto-hyperparameter tuning, but we might do that in some other notebook.\n    \n## End of Notenook    ","a23372d3":"#### Lets look at little summary of data\n","ca1cf497":"### Changing the train data into h2o_train\n> More about H2OFrame : H2OFrame is similar to pandas' ``DataFrame``, or R's ``data.frame``. One of the critical distinction is that the\n> data is generally not held in memory, instead it is located on a (possibly remote) H2O cluster, and thus\n> ``H2OFrame`` represents a mere handle to that data."}}