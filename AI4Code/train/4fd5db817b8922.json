{"cell_type":{"958fbfef":"code","77cd2dc0":"code","bd9ecd19":"code","fe12169e":"code","19b0e5d9":"code","ab4802a5":"code","0061e81c":"code","57d1f572":"code","a74993f9":"code","a2e7f523":"code","c976f30a":"code","c089fe29":"code","343deeef":"code","46931af9":"code","49295954":"code","c25c1279":"code","c8330f11":"code","ad65637a":"code","617836e1":"code","a459a3b9":"code","59c5ea33":"code","11424a01":"code","d707a11e":"code","dc4b4bbf":"code","e6b29776":"code","7e0c2ed1":"code","d2554d36":"code","9b558e3e":"code","89e5938a":"code","b5156b92":"code","652ea672":"code","458a2d31":"code","2a3451f2":"code","56921d09":"code","237e3f8a":"code","d17ae5ea":"code","57925265":"code","0664ff7f":"code","f51393c3":"code","acbf9774":"code","54bf441d":"code","c44d22ae":"code","8d93f61a":"code","db300cd1":"code","21290463":"code","b3243900":"code","ec3e431f":"code","32578726":"markdown","70c2bb35":"markdown","f0c3bb1c":"markdown","de58b4ce":"markdown","63e39059":"markdown","0f06beb6":"markdown","aff159f6":"markdown","cd6e33ff":"markdown","aa7ffaca":"markdown","fcd18b60":"markdown","20a33e2c":"markdown","3362af72":"markdown","76b63b2b":"markdown","d7f317c4":"markdown","92644ddc":"markdown","815a58c5":"markdown","00c06e86":"markdown","cd5ebe44":"markdown","c578a3f1":"markdown","ae65231b":"markdown","df8d0d74":"markdown","bab1cb3f":"markdown","4da75c94":"markdown","83111c77":"markdown","16d75d10":"markdown","de405dcf":"markdown","be3e4dfa":"markdown","09e97f4d":"markdown","b5747c7a":"markdown","9a4e1df5":"markdown","7a21f264":"markdown","92b2e2f5":"markdown","90337f24":"markdown"},"source":{"958fbfef":"import sys\n#\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u969b\u306b\u30d1\u30b9\u3092\u8ffd\u52a0\nsys.path.append('..\/input\/pytorch-image-models\/pytorch-image-models-master')","77cd2dc0":"# Preliminaries\nimport os\nfrom pathlib import Path\nimport glob\n#\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u3092\u8868\u793a\u3059\u308b\nfrom tqdm import tqdm\ntqdm.pandas()\nimport json\nimport pandas as pd\nimport numpy as np\n\n## Image hash\nimport imagehash\n\n# Visuals and CV2\nimport seaborn as sn\nimport matplotlib.pyplot as plt\nimport cv2\nfrom PIL import Image\n\n\n# albumentations for augs\n# \u753b\u50cf\u306e\u52a0\u5de5\nimport albumentations\nfrom albumentations.pytorch.transforms import ToTensorV2\n\n# \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3001\u6b21\u5143\u524a\u6e1b\nfrom sklearn.cluster import KMeans\nfrom sklearn.decomposition import PCA\nfrom sklearn.model_selection import StratifiedKFold\nfrom sklearn.metrics import accuracy_score\n\n# Keras and TensorFlow\nfrom keras.preprocessing.image import load_img\nfrom keras.preprocessing.image import img_to_array \nfrom keras.applications.resnet50 import preprocess_input \n\n# models \nfrom keras.applications.resnet50 import ResNet50\nfrom keras.models import Model\n\n#torch\nimport torch\nimport timm\nimport torch\nimport torch.nn as nn\nfrom torch.nn import functional as F\nfrom torch.utils.data import Dataset,DataLoader","bd9ecd19":"def plot_images(class_id, label, images_number,verbose=0):\n    '''\n    Courtesy of https:\/\/www.kaggle.com\/isaienkov\/cassava-leaf-disease-classification-data-analysis\n    '''\n    '''\n    \u30e9\u30d9\u30eb\u304cclass_id\u306e\u753b\u50cf\u3092images_number\u679a\u30e9\u30f3\u30c0\u30e0\u3067\u53d6\u5f97\u3057\u8868\u793a\n    '''\n    plot_list = train[train[\"label\"] == class_id].sample(images_number)['image_id'].tolist()\n    \n    # \u753b\u50cf\u306e\u30ea\u30b9\u30c8\u3092\u8868\u793a\n    if verbose:\n        print(plot_list)\n        \n    labels = [label for i in range(len(plot_list))]\n    size = np.sqrt(images_number)\n    #\u753b\u50cf\u3092subplot\u3092\u4f7f\u3063\u3066\u8907\u6570\u8868\u793a\u3059\u308b\u305f\u3081\u306b\u3001size\u3068\u3044\u3046\u5909\u6570\u3092\u3046\u307e\u304f\u8a2d\u5b9a\u3057\u3066\u3044\u308b\n    if int(size)*int(size) < images_number:\n        size = int(size) + 1\n        \n    plt.figure(figsize=(20, 20))\n    \n    for ind, (image_id, label) in enumerate(zip(plot_list, labels)):\n        plt.subplot(size, size, ind + 1)\n        image = cv2.imread(str(BASE_DIR\/'train_images'\/image_id))\n        #OpenCV\u3067\u306f\u753b\u50cf\u3092BGR\u306e\u9806\u3067\u8aad\u307f\u8fbc\u3080\u306e\u3067\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n        image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n\n        plt.imshow(image)\n        plt.title(label, fontsize=12)\n        plt.axis(\"off\")\n    \n    plt.show()","fe12169e":"BASE_DIR = Path('..\/input\/cassava-leaf-disease-classification')\n\n## Reading DataFrame having Labels\ntrain = pd.read_csv(BASE_DIR\/'train.csv')\n\n## Label Mappings\nwith open(BASE_DIR\/'label_num_to_disease_map.json') as f:\n    mapping = json.loads(f.read())\n    mapping = {int(k): v for k,v in mapping.items()}\n\nprint(mapping)","19b0e5d9":"train['label_names'] = train['label'].map(mapping)\ntrain.head()","ab4802a5":"train[train['label_names']=='Healthy']['image_id'].count()","0061e81c":"plot_images(class_id=4, \n    label='Healthy',\n    images_number=6,verbose=1)","57d1f572":"plot_images(class_id=4, \n    label='Healthy',\n    images_number=6,verbose=1)","a74993f9":"def extract_features(image_id, model):\n    file = BASE_DIR\/'train_images'\/image_id\n    # load the image as a 224x224 array\n    # load_img\u306fkeras\u306e\u95a2\u6570\u3067\u51fa\u529b\u306fPIL\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\n    img = load_img(file, target_size=(224,224))\n    # convert from 'PIL.Image.Image' to numpy array\n    img = np.array(img) \n    # reshape the data for the model reshape(num_of_samples, dim 1, dim 2, channels)\n    reshaped_img = img.reshape(1,224,224,3) \n    # prepare image for model\n    # Numpy\u914d\u5217\u3092\u524d\u51e6\u7406\uff08\u30e2\u30c7\u30eb\u306b\u753b\u50cf\u306e\u30c7\u30fc\u30bf\u3092\u5165\u308c\u308b\u969b\u306b\u5fc5\u8981\u306a\u51e6\u7406\u304b\uff09\n    imgx = preprocess_input(reshaped_img)\n    # get the feature vector\n    #\u5f15\u6570\u3067\u5b9a\u3081\u305f\u30e2\u30c7\u30eb\u3067\u4e88\u6e2c\u3059\u308b\n    features = model.predict(imgx, use_multiprocessing=True)\n    \n    return features","a2e7f523":"model = ResNet50()\nmodel = Model(inputs = model.inputs, outputs = model.layers[-2].output)\n\nhealthy = train[train['label']==4]\nhealthy['features'] = healthy['image_id'].progress_apply(lambda x:extract_features(x,model))","c976f30a":"model.summary()","c089fe29":"#\u753b\u50cf\u6570*2048\nfeatures.shape","343deeef":"features = np.array(healthy['features'].values.tolist()).reshape(-1,2048)\nimage_ids = np.array(healthy['image_id'].values.tolist())\n\n# Kmeans\u3067\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0(healty\u306e\u753b\u50cf\u306e\u307f\u3067)\nkmeans = KMeans(n_clusters=5,n_jobs=-1, random_state=22)\nkmeans.fit(features)","46931af9":"#\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3057\u305f\u969b\u306e\u30e9\u30d9\u30eb\nkmeans.labels_","49295954":"groups = {}\nfor file, cluster in zip(image_ids,kmeans.labels_):\n    if cluster not in groups.keys():\n        #groups\u3068\u3044\u3046dict\u306b\u3001key\u3092cluster,value\u3092\u753b\u50cf\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u96c6\u3081\u305f\u30ea\u30b9\u30c8\u3068\u3057\u3066\u683c\u7d0d\n        groups[cluster] = []\n        groups[cluster].append(file)\n    else:\n        groups[cluster].append(file)","c25c1279":"def view_cluster(cluster):\n    plt.figure(figsize = (25,25));\n    # gets the list of filenames for a cluster\n    files = groups[cluster]\n    # only allow up to 30 images to be shown at a time\n    if len(files) > 30:\n        print(f\"Clipping cluster size from {len(files)} to 25\")\n        start = np.random.randint(0,len(files))\n        files = files[start:start+25]\n    # plot each image in the cluster\n    for index, file in enumerate(files):\n        plt.subplot(5,5,index+1);\n        img = load_img(BASE_DIR\/'train_images'\/file)\n        img = np.array(img)\n        plt.imshow(img)\n        plt.title(file)\n        plt.axis('off')","c8330f11":"view_cluster(3)","ad65637a":"view_cluster(2)","617836e1":"plot_images(class_id=0, \n    label='CBB',\n    images_number=6,verbose=1)","a459a3b9":"plot_images(class_id=2, \n    label='CGM',\n    images_number=12,verbose=1)","59c5ea33":"plot_images(class_id=3, \n    label='CMD',\n    images_number=6,verbose=1)","11424a01":"plot_images(class_id=1, \n    label='CBSD',\n    images_number=12,verbose=1)","d707a11e":"CBSD = train[train['label']==1]\nCBSD['features'] = CBSD['image_id'].progress_apply(lambda x:extract_features(x,model))","dc4b4bbf":"features_cbsd = np.array(CBSD['features'].values.tolist()).reshape(-1,2048)\nimage_ids_cbsd = np.array(CBSD['image_id'].values.tolist())\n\n# Clustering\nkmeans_cbsd = KMeans(n_clusters=5,n_jobs=-1, random_state=22)\nkmeans_cbsd.fit(features_cbsd)","e6b29776":"groups_cbsd = {}\nfor file, cluster in zip(image_ids_cbsd,kmeans_cbsd.labels_):\n    if cluster not in groups_cbsd.keys():\n        groups_cbsd[cluster] = []\n        groups_cbsd[cluster].append(file)\n    else:\n        groups_cbsd[cluster].append(file)","7e0c2ed1":"def view_cluster(cluster):\n    plt.figure(figsize = (25,25))\n    # gets the list of filenames for a cluster\n    files = groups_cbsd[cluster]\n    # only allow up to 30 images to be shown at a time\n    if len(files) > 30:\n        print(f\"Clipping cluster size from {len(files)} to 25\")\n        start = np.random.randint(0,len(files))\n        files = files[start:start+25]\n    # plot each image in the cluster\n    for index, file in enumerate(files):\n        plt.subplot(5,5,index+1);\n        img = load_img(BASE_DIR\/'train_images'\/file)\n        img = np.array(img)\n        plt.imshow(img)\n        plt.title(file)\n        plt.axis('off')","d2554d36":"view_cluster(4)","9b558e3e":"view_cluster(3)","89e5938a":"funcs = [\n        imagehash.average_hash,\n        imagehash.phash,\n        imagehash.dhash,\n        imagehash.whash,\n    ]\n\nimage_ids = []\nhashes = []\n\nfor path in tqdm(glob.glob(str(BASE_DIR\/'train_images'\/'*.jpg' ))):\n    image = Image.open(path)\n    image_id = os.path.basename(path)\n    image_ids.append(image_id)\n    hashes.append(np.array([f(image).hash for f in funcs]).reshape(256))","b5156b92":"hashes_all = np.array(hashes)","652ea672":"hashes_all.shape","458a2d31":"hashes_all = torch.Tensor(hashes_all.astype(int)).cuda()","2a3451f2":"%time sims = np.array([(hashes_all[i] == hashes_all).sum(dim=1).cpu().numpy()\/256 for i in range(hashes_all.shape[0])])","56921d09":"sims.shape","237e3f8a":"indices1 = np.where(sims > 0.9)\nindices2 = np.where(indices1[0] != indices1[1])\nimage_ids1 = [image_ids[i] for i in indices1[0][indices2]]\nimage_ids2 = [image_ids[i] for i in indices1[1][indices2]]\ndups = {tuple(sorted([image_ids1,image_ids2])):True for image_ids1, image_ids2 in zip(image_ids1, image_ids2)}\nprint('found %d duplicates' % len(dups))","d17ae5ea":"'''\ncode taken from https:\/\/www.kaggle.com\/nakajima\/duplicate-train-images?scriptVersionId=47295222\n'''\n\nduplicate_image_ids = sorted(list(dups))\n\nfig, axs = plt.subplots(2, 2, figsize=(15,15))\n\nfor row in range(2):\n        for col in range(2):\n            img_id = duplicate_image_ids[row][col]\n            img = Image.open(str(BASE_DIR\/'train_images'\/img_id))\n            label =str(train.loc[train['image_id'] == img_id].label.values[0])\n            axs[row, col].imshow(img)\n            axs[row, col].set_title(\"image_id : \"+ img_id + \"  label : \" + label)\n            axs[row, col].axis('off')","57925265":"DIM = (384,384)\n\nNUM_WORKERS = 12\nTEST_BATCH_SIZE = 16\nSEED = 2020\n\nDEVICE = \"cuda\"\n\nMEAN = [0.485, 0.456, 0.406]\nSTD = [0.229, 0.224, 0.225]","0664ff7f":"def get_test_transforms():\n\n    return albumentations.Compose(\n        [albumentations.Normalize(MEAN, STD, max_pixel_value=255.0, always_apply=True),\n        ToTensorV2(p=1.0)\n        ]\n    )","f51393c3":"class CassavaDataset(Dataset):\n    def __init__(self,image_ids,labels,dimension=None,augmentations=None):\n        super().__init__()\n        self.image_ids = image_ids\n        self.labels = labels\n        self.dim = dimension\n        self.augmentations = augmentations\n        \n    def __len__(self):\n        # len(\u4e0a\u3067\u5b9a\u7fa9\u3057\u305f\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9)\u3067\u8fd4\u3059\u5024\u3002\n        return len(self.image_ids)\n    \n    def __getitem__(self,idx):\n        # \u4e0a\u3067\u5b9a\u7fa9\u3057\u305f\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9[idx]\u3067\u8fd4\u3059\u5024\n        img = cv2.imread(str(BASE_DIR\/'test_images'\/self.image_ids[idx]))\n        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n                         \n        if self.dim:\n            img = cv2.resize(img,self.dim)\n        \n        if self.augmentations:\n            augmented = self.augmentations(image=img)\n            image = augmented['image']\n                         \n        return {\n            'image': image,\n            'target': torch.tensor(self.labels[idx],dtype=torch.float)\n        }","acbf9774":"class CassavaModel(nn.Module):\n    def __init__(self, model_name='seresnext50_32x4d',out_features=5,pretrained=True):\n        super().__init__()\n        self.model = timm.create_model(model_name, pretrained=pretrained)\n        \n        #resnet50\u306e\u30e2\u30c7\u30eb\u306b\u6700\u5f8c\u51fa\u529b\u306e\u6b21\u5143\u3092\u63c3\u3048\u308b\u305f\u3081\u306b1\u5c64\u8ffd\u52a0\u3057\u3066\u3044\u308b\u3002\n        \n        n_features = self.model.last_linear.in_features\n        self.model.last_linear = nn.Linear(n_features, out_features)\n\n    def forward(self, x):\n        x = self.model(x)\n        return x","54bf441d":"def predict_single_model(data_loader,model,device):\n    model.eval()\n    tk0 = tqdm(enumerate(data_loader), total=len(data_loader))\n    fin_out = []\n    \n    with torch.no_grad():\n        \n        for bi, d in tk0:\n            images = d['image']\n            targets = d['target']\n            \n            images = images.to(device)\n            targets = targets.to(device)\n            \n            batch_size = images.shape[0]\n            \n            outputs = model(images)\n            \n            fin_out.append(F.softmax(outputs, dim=1).detach().cpu().numpy())\n            \n    return np.concatenate(fin_out)","c44d22ae":"sample_sub = pd.read_csv('..\/input\/cassava-leaf-disease-classification\/sample_submission.csv')","8d93f61a":"def predict(weights):\n    '''\n    weights : List of paths in case of K fold model inference\n    '''\n    pred = np.zeros((len(sample_sub),5,5))\n    \n    # Defining DataSet\n    test_dataset = CassavaDataset(\n        image_ids=sample_sub['image_id'].values,\n        labels=sample_sub['label'].values,\n        augmentations=get_test_transforms(),\n        dimension = DIM\n    )\n    \n    test_loader = torch.utils.data.DataLoader(\n        test_dataset,\n        batch_size=TEST_BATCH_SIZE,\n        num_workers=NUM_WORKERS,\n        shuffle=False,\n        pin_memory=True,\n        drop_last=False,\n    )\n    \n    # Defining Device\n    device = torch.device(\"cpu\")\n    \n    for i,weight in enumerate(weights):\n        # Defining Model for specific fold\n        model = CassavaModel(out_features=5,pretrained=True)\n        \n        # loading weights\n        #model.load_state_dict(torch.load(weight))\n        model.to(device)\n        \n        #predicting\n        pred[:,:,i] = predict_single_model(test_loader,model,device)\n    \n    return pred","db300cd1":"pred = predict([1])\nprint(pred)","21290463":"pred = pred.mean(axis=-1)\nprint('Prediction Before Argmax',pred)\npred = pred.argmax(axis=1)\nprint('Final Prediction',pred)","b3243900":"sample_sub['label'] = pred\nsample_sub.head()","ec3e431f":"sample_sub.to_csv('submission.csv',index=False)","32578726":"* \u7b52\u72b6\u306e\u6839\u306e\u753b\u50cf\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u3092\u30c7\u30fc\u30bf\u304b\u3089\u53d6\u308a\u51fa\u305b\u308b\u304b\u8a66\u3057\u3066\u307f\u3088\u3046","70c2bb35":"### \u75c5\u6c17\u306b\u3064\u3044\u3066\u5b66\u30762\uff1a\u30ad\u30e3\u30c3\u30b5\u30d0\u30b0\u30ea\u30fc\u30f3\u30e2\u30c3\u30c8\uff08CGM)\n\n\u6b21\u306e\u75c5\u6c17\u3001 `Symptoms of CGM`\u306b\u79fb\u308a\u307e\u3059\n\n* \u8449\u306b\u767d\u6591\u304c\u767a\u751f\u3057\u3001\u6700\u521d\u306e\u5c0f\u3055\u306a\u6591\u70b9\u304b\u3089\u8449\u5168\u4f53\u306b\u5e83\u304c\u308a\u3001\u8449\u7dd1\u7d20\u304c\u5931\u308f\u308c\u3066\u3044\u304d\u307e\u3059\u3002\u82e5\u3044\u8449\u306f\u51f9\u307f\u3001\u304b\u3059\u304b\u306a\u9ec4\u8272\u306e\u6591\u70b9\u304c\u76ee\u7acb\u3064\uff08\u56f31\uff09\u3002(\u56f3 1)\n\n* \u3053\u306e\u75c5\u6c17\u306b\u304b\u304b\u308b\u3068\u3001\u8449\u306b\u6591\u70b9\u72b6\u306e\u75c7\u72b6\u304c\u73fe\u308c\u3001\u30ad\u30e3\u30c3\u30b5\u30d0\u30e2\u30b6\u30a4\u30af\u75c5\uff08CMD\uff09\u306e\u75c7\u72b6\u3068\u6df7\u540c\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u91cd\u5ea6\u306e\u30c0\u30e1\u30fc\u30b8\u3092\u53d7\u3051\u305f\u8449\u306f\u53ce\u7e2e\u3057\u3001\u4e7e\u71e5\u3057\u3066\u843d\u3061\u3001\u30ed\u30fc\u30bd\u30af\u8db3\u306e\u3088\u3046\u306a\u7279\u5fb4\u7684\u306a\u5916\u89b3\u306b\u306a\u308a\u307e\u3059\u3002(\u56f32) (\u56f3 2)\n\n![](https:\/\/www.pestnet.org\/fact_sheets\/assets\/image\/cassava_green_mottle_068\/thumbs\/cgmv2_sml.jpg)\n![](https:\/\/www.pestnet.org\/fact_sheets\/assets\/image\/cassava_green_mottle_068\/thumbs\/cgmv_sml.jpg)\n\n\u8a73\u7d30\u306f [here](https:\/\/www.pestnet.org\/fact_sheets\/cassava_green_mottle_068.htm)","f0c3bb1c":"\u91cd\u8907\u3057\u305f\u753b\u50cf\u306e\u30d7\u30ed\u30c3\u30c8","de58b4ce":"\u4e0a\u8a18\u306e\u95a2\u6570\u30923\uff5e4\u56de\u5b9f\u884c\u3057\u3066\u3001\u6bce\u56de\u65b0\u3057\u3044\u753b\u50cf\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3092\u6ce8\u610f\u6df1\u304f\u89b3\u5bdf\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u3053\u3068\u306b\u6c17\u3065\u304f\u3067\u3057\u3087\u3046\u3002\n* \u3059\u3079\u3066\u306e\u753b\u50cf\u304c\u8449\u3092\u30af\u30ed\u30fc\u30ba\u30a2\u30c3\u30d7\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3057\u3001\u4eba\u9593\u306e\u76ee\u306b\u306f\u8449\u304c\u307b\u3068\u3093\u3069\u898b\u3048\u306a\u3044\u6728\u5168\u4f53\u304c\u5199\u3063\u3066\u3044\u308b\u753b\u50cf\u3082\u3042\u308a\u307e\u3059\u3057\u3001\u8449\u3088\u308a\u3082\u830e\u304c\u591a\u304f\u5199\u3063\u3066\u3044\u308b\u753b\u50cf\u3082\u3042\u308a\u307e\u3059\u3002\n* \u3055\u3089\u306b\u9a5a\u304f\u3079\u304d\u3053\u3068\u306f\u3001\u5065\u5eb7\u306a\u8449\u306e\u753b\u50cf\u306e\u4e2d\u306b\u306f\u611f\u67d3\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u3048\u308b\u3082\u306e\u3082\u3042\u308a\u3001\u9ec4\u8272\u3084\u9ec4\u8272\u304c\u304b\u3063\u305f\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u3088\u3046\u306a\u8272\u3092\u3057\u3066\u3044\u308b\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u3002\n\n### \u5916\u308c\u5024\u306e\u8abf\u67fb :  \n\u30dd\u30a4\u30f3\u30c82\u3092\u8abf\u67fb\u3059\u308b\u305f\u3081\u306b\u3001\u79c1\u306f\u6b21\u306e\u3088\u3046\u306a\u30a2\u30a4\u30c7\u30a2\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n\n* \u3053\u3053\u3067\u306e\u30a2\u30a4\u30c7\u30a2\u306f\u3001\u5065\u5168\u306a\u753b\u50cf\u3092\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3057\u3001\u305d\u308c\u305e\u308c\u306e\u30af\u30e9\u30b9\u30bf\u3092\u898b\u3066\u3001\u5916\u308c\u5024\u30af\u30e9\u30b9\u30bf\u3068\u7834\u640d\u30af\u30e9\u30b9\u30bf\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n* \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306e\u305f\u3081\u306e\u7279\u5fb4\u91cf\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306b Resnet18 \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002","63e39059":"## Step 1.1 \u5065\u5eb7\u306a\u3082\u306e(Healthy)\u3092\u5b66\u3076\n\n\u4eca\u3001\u79c1\u9054\u306f\u5065\u5eb7\u306a\u30a4\u30e1\u30fc\u30b8\u3092\u898b\u59cb\u3081\u3001\u5065\u5eb7\u306a\u30ad\u30e3\u30c3\u30b5\u30d0\u306e\u8449\u306e\u7279\u5fb4\u306e\u79c1\u9054\u306e\u7406\u89e3\u3092\u5f62\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b1\u3064\u306e\u5834\u6240\u3067\u3059\u3079\u3066\u3092\u6301\u3063\u3066\u3044\u308b\u3002`\u6b21\u306f Google \u304b\u3089\u306e\u5065\u5eb7\u306a\u30ad\u30e3\u30c3\u30b5\u30d0\u306e\u8449\u306e\u30a4\u30e1\u30fc\u30b8\u3067\u3059` \n\n![\u753b\u50cf](https:\/\/cdn.shortpixel.ai\/client\/to_avif,q_lossless,ret_img,w_795,h_532\/https:\/\/organic.ng\/wp-content\/uploads\/2017\/02\/CASSAVA-LEAF.jpg)\n\n* \u4e0a\u306e\u753b\u50cf\u304b\u3089\u3001\u5065\u5eb7\u7684\u306a\u30ad\u30e3\u30c3\u30b5\u30d0\u306e\u8449\u306e\u7279\u5fb4\u306e\u4e00\u3064\u306f\u3001\u591a\u304f\u306e\u30ab\u30c3\u30c8\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5909\u66f4\u3001\u9ec4\u8272\u304c\u304b\u3063\u305f\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3001\u7b49\u306a\u3057\u3067\u304b\u306a\u308a\u7dd1\u3068\u76f4\u7acb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u3092\u8a00\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u6b21\u306b\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4e2d\u306e\u5065\u5eb7\u306a\u3082\u306e\u3092\u898b\u3066\u3001\u4e0a\u306e\u753b\u50cf\u3068\u5bc6\u63a5\u306b\u6df7\u3056\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002","0f06beb6":"# \u79c1\u305f\u3061\u306e\u8abf\u67fb\u7d50\u679c\u306e\u6982\u8981\uff1a\u30b9\u30c6\u30c3\u30d71\u306e\u7d42\u4e86\n\n\u6700\u521d\u306eEDA\u306e\u7d50\u679c\u3092\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n* \u5065\u5eb7\u306a\u753b\u50cf\u306f\u6b63\u3057\u304f\u30e9\u30d9\u30eb\u4ed8\u3051\u3055\u308c\u3066\u3044\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u3001\u9593\u9055\u3063\u3066\u30e9\u30d9\u30eb\u4ed8\u3051\u3055\u308c\u305f\u753b\u50cf\u306f5\u3064\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u306e\u3046\u30613\u3064\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u306b\u3042\u308a\u307e\u3059\u3002\n* \u5b8c\u5168\u306b\u9ec4\u8272\u306e\u8449\u306f\u3001\u5e38\u306b\u8449\u304c\u6f5c\u5728\u7684\u306a\u75c5\u6c17\u3092\u6301\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u793a\u3057\u3066\u3044\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n* \u8449\u306b\u8336\u8272\u306e\u6591\u70b9\u304c\u3042\u308b\u306e\u306f\u3001\u30ad\u30e3\u30c3\u30b5\u30d0\u306e\u30d0\u30af\u30c6\u30ea\u30a2\u30fb\u30d9\u30c8\u75c5(CBB)\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002 \n* \u3059\u3079\u3066\u306e\u30a4\u30e1\u30fc\u30b8\u306b\u7570\u306a\u3063\u305f\u80cc\u666f\u304a\u3088\u3073\u30b9\u30b1\u30fc\u30eb\u306e\u5909\u5316\u304c\u3042\u308a\u307e\u3059 \n* \u753b\u50cf\u306f\u4e00\u65e5\u306e\u7570\u306a\u308b\u6642\u9593\u5e2f\u306b\u64ae\u5f71\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u7570\u306a\u308b\u7167\u660e\u3068\u9732\u51fa\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n* \u30ad\u30e3\u30c3\u30b5\u30d0\u30b0\u30ea\u30fc\u30f3\u30e2\u30c3\u30c8\u30eb(CGM)\u3068\u30ad\u30e3\u30c3\u30b5\u30d0\u30e2\u30b6\u30a4\u30af\u75c5(CMD)\u306f\u3001\u753b\u50cf\u3068\u540c\u69d8\u306b\u975e\u5e38\u306b\u4f3c\u305f\u75c7\u72b6\u3092\u6301\u3063\u3066\u304a\u308a\u3001\u7c21\u5358\u306b\u4e92\u3044\u306b\u8aa4\u8a8d\u8868\u793a\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u30ad\u30e3\u30c3\u30b5\u30d0\u30e2\u30b6\u30a4\u30af\u75c5\u306e\u4f8b\u304c13k\u3082\u3042\u308b\u306e\u3067\u3001\u30e2\u30c7\u30eb\u304cCGM\u3092CGM\u3068\u30e9\u30d9\u30eb\u4ed8\u3051\u3059\u308b\u969b\u306b\u6700\u3082\u30df\u30b9\u304c\u591a\u3044\u53ef\u80fd\u6027\u304c\u9ad8\u3044\u3067\u3059\u3002\n* \u4e00\u679a\u306e\u753b\u50cf\/\u30ad\u30e3\u30c3\u30b5\u30d0\u306e\u690d\u7269\u306b\u306f\u8907\u6570\u306e\u5171\u8d77\u6027\u75be\u60a3\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u30e2\u30c7\u30eb\u306f\u30e9\u30d9\u30eb\u4ed8\u3051\u3092\u6df7\u4e71\u3055\u305b\u308b\n* CBSD\u306f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4e2d\u306b2\u7a2e\u985e\u306e\u753b\u50cf\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u304c\u30011\u3064\u306f\u690d\u7269\/\u8449\u306e\u753b\u50cf\u3067\u3001\u3082\u30461\u3064\u306f\u30b8\u30e3\u30ac\u30a4\u30e2\u3084\u30e9\u30f3\u30c0\u30e0\u30ce\u30a4\u30ba\u3068\u8aa4\u89e3\u3055\u308c\u3084\u3059\u3044\u6839\u306e\u753b\u50cf\u3067\u3059\u3002\n\n\n\u30ea\u30fc\u30d5\u30c9\u30af\u30bf\u30fc\u306b\u306a\u308b\u305f\u3081\u306e\u6700\u521d\u306e\u30b9\u30c6\u30c3\u30d7\u304c\u5b8c\u4e86\u3057\u305f\u5f8c\u3001\u60a3\u8005\u3055\u3093\u306e\u3053\u3068\u3092\u7406\u89e3\u3057\u3001\u69d8\u3005\u306a\u75c5\u6c17\u306e\u3053\u3068\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u3053\u306e\u30b9\u30c6\u30c3\u30d7\u306f\u3001\u79c1\u305f\u3061\u306f\u3088\u308a\u826f\u3044\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u30e6\u30cb\u30fc\u30af\u306a\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\/\u30d7\u30e9\u30f3\u3092\u30c7\u30d0\u30a4\u30b9\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\n\n<b>\u6ce8\uff1a\u79c1\u306f\u3088\u308a\u591a\u304f\u306e\u767a\u898b\u3092\u7d9a\u3051\u308b\u3088\u3046\u306b\u3001\u79c1\u306f\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u3088\u308a\u591a\u304f\u306e\u305d\u306e\u3088\u3046\u306a\u77e5\u898b\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3059\u3002<\/b>","aff159f6":"## \u53c2\u8003\nhttps:\/\/www.kaggle.com\/tanulsingh077\/how-to-become-leaf-doctor-with-deep-learning","cd6e33ff":"# \u7d50\u8ad6\n\n\u7af6\u4e89\u304c\u59cb\u307e\u3063\u305f\u3070\u304b\u308a\u306a\u306e\u3067\u3001\u8a66\u3057\u3066\u307f\u308b\u3053\u3068\u304c\u305f\u304f\u3055\u3093\u3042\u308a\u307e\u3059\u304c\u3001\u79c1\u306f\u3053\u306e\u30ce\u30fc\u30c8\u3092\u66f4\u65b0\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u79c1\u306e\u30ce\u30fc\u30c8\u3092\u8aad\u3093\u3067\u304f\u308c\u3066\u3042\u308a\u304c\u3068\u3046 , \u79c1\u306f\u3042\u306a\u305f\u304c\u305d\u308c\u304b\u3089\u6709\u7528\u306a\u4f55\u304b\u3092\u5f97\u305f\u3053\u3068\u3092\u9858\u3063\u3066\u3044\u307e\u3059\u3002","aa7ffaca":"# Model : SE_Resnext50","fcd18b60":"<b>\u3053\u306edoctoe\u306e\u30b3\u30fc\u30b9\u3067\u306f\u30014\u3064\u306e\u75c5\u6c17\u306b\u3064\u3044\u3066\u5b66\u3076\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u524d\u306b\u3001\u3053\u308c\u3089\u306e\u75c5\u6c17\u306e\u540d\u524d\u3092\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30e9\u30d9\u30eb\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 <\/b>","20a33e2c":"* 21k\u306e\u753b\u50cf\u306e\u3046\u3061\u30012577\u3060\u3051\u304c\u5065\u5eb7\u7684(Healthy)\u306a\u3082\u306e\u3067\u3042\u308b\u3001\u30e9\u30d9\u30eb\u306e\u4e0d\u5747\u8861\u306f\u660e\u3089\u304b\u306b\u76ee\u306b\u898b\u3048\u3066\u3044\u308b","3362af72":"# Prediction Function Single Model","76b63b2b":"## \u8a2d\u5b9a\u3068\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u6a5f\u80fd","d7f317c4":"\u91cd\u8907\u3092\u898b\u3064\u3051\u308b\u65b9\u6cd5\u306f\u4ed6\u306b\u3082\u3042\u308a\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4e2d\u306b\u30bd\u30d5\u30c8\u306a\u91cd\u8907\u304c\u3042\u308b\u5834\u5408\u306b\u306f\u3001\u3053\u306e\u30ab\u30fc\u30cd\u30eb\u306e\u5f8c\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u63d0\u4f9b\u3055\u308c\u307e\u3059\u3002","92644ddc":"numpy\u914d\u5217\u3092\u30c8\u30fc\u30c1\u30c6\u30f3\u30bd\u30eb\u306b\u5909\u63db\u3057\u3066\u985e\u4f3c\u5ea6\u8a08\u7b97\u3092\u9ad8\u901f\u5316\u3057\u307e\u3059\u3002","815a58c5":"\u3057\u304d\u3044\u5024\u306e\u8a2d\u5b9a","00c06e86":"## \u30c7\u30fc\u30bf\u306e\u91cd\u8907  \u6211\u3005\u304c\u898b\u9003\u3057\u3066\u3044\u305f\u3082\u306e\n\n\u8b70\u8ad6\u306e\u5834\u3092\u8abf\u3079\u3066\u3044\u305f\u3089\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4e2d\u306b\u753b\u50cf\u304c\u91cd\u8907\u3057\u3066\u3044\u308b\u53ef\u80fd\u6027\u306b\u3064\u3044\u3066\u8a71\u3057\u3066\u3044\u308b[\u3053\u306e](https:\/\/www.kaggle.com\/c\/cassava-leaf-disease-classification\/discussion\/198202) \u30b9\u30ec\u30c3\u30c9\u3092\u898b\u3064\u3051\u307e\u3057\u305f\u3002\u753b\u50cf\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4e2d\u306b\u91cd\u8907\u3057\u305f\u753b\u50cf\u304c\u3042\u308b\u3068\u3044\u3046\u8a71\u306f\u3068\u3066\u3082\u8208\u5473\u6df1\u3044\u3082\u306e\u3067\u3059\uff0e\n\n* \u753b\u50cf\u306e\u5b8c\u5168\u306a\u30b3\u30d4\u30fc\u306b\u3064\u3044\u3066\u8a71\u3057\u3066\u3044\u308b\n* \u79c1\u305f\u3061\u306f\u3001\u7279\u5b9a\u306e\u753b\u50cf\u306b\u4f3c\u3066\u3044\u308b\u753b\u50cf\u306b\u3064\u3044\u3066\u8a71\u3057\u3066\u3044\u307e\u3059\u3002\u4f8b\uff1a\u753b\u50cf1\u306f\u30c8\u30ea\u30df\u30f3\u30b0\u3055\u308c\u305f\u304b\u56de\u8ee2\u3055\u308c\u3001\u753b\u50cf2\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3055\u3066\u3001\u753b\u50cf\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4e2d\u304b\u3089\u91cd\u8907\u753b\u50cf\uff08\u6b63\u78ba\u306a\u30b3\u30d4\u30fc\uff09\u3084\u985e\u4f3c\u753b\u50cf\u3092\u898b\u3064\u3051\u3066\u8b58\u5225\u3059\u308b\u65b9\u6cd5\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002\u79c1\u306f\u753b\u50cf\u30cf\u30c3\u30b7\u30e5\u5316\u306e\u65b9\u6cd5\u3092\u4f7f\u3044\u3001 [\u3053\u3053](https:\/\/www.kaggle.com\/appian\/let-s-find-out-duplicate-images-with-imagehash) \u3067\u898b\u3064\u3051\u305f\u30ce\u30fc\u30c8\u306b\u5f93\u3063\u3066\u3044\u304d\u307e\u3059\u3002","cd5ebe44":"* \u6211\u3005\u306f\u6b63\u5e38\u306b80\u753b\u50cf\u306e1\u3064\u306e\u30af\u30e9\u30b9\u30bf\u306b\u7ba1\u72b6\u6839\u753b\u50cf\u3092\u30af\u30e9\u30b9\u30bf\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3001\u305d\u308c\u3086\u3048\u306b\u4eca\u3001\u6211\u3005\u306f\u3059\u3079\u3066\u306eIDS\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u3053\u306e\u60c5\u5831\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306e\u69d8\u3005\u306a\u30a2\u30a4\u30c7\u30a2\u3092\u8003\u3048\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093","c578a3f1":"#### \u63a8\u8ad6\n\n* CGM\u306e\u75c7\u72b6\u3092\u8aad\u307f\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u753b\u50cf\u3092\u898b\u305f\u5f8c\u3001CGM\u306e\u8449\u3001CBB\u306e\u8449\u3001\u5065\u5eb7\u306a\u8449\u306e\u9055\u3044\u3092\u660e\u78ba\u306b\u4f1d\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n* CGM\u306e\u8449\u306f\u30d3\u30a8\u30f3(viens)\u306b\u6cbf\u3063\u3066\u8449\u306b\u304b\u3059\u304b\u306b\u9ec4\u8272\u306e\u6591\u70b9\u304c\u3042\u308a\u3001CBB\u306e\u8449\u306f\u8336\u8272\u306e\u6591\u70b9\u304c\u3042\u308a\u3001\u5065\u5eb7\u306a\u8449\u306f\u5b8c\u5168\u306b\u7dd1\u304b\u5b8c\u5168\u306b\u9ec4\u8272\u3067\u3042\u308b\u3002\n* \u307e\u305f\u3001\u3053\u306e\u30af\u30e9\u30b9\u3067\u3082\u3042\u307e\u308a\u5916\u308c\u305f\u4eba\u306f\u3044\u307e\u305b\u3093\u3002\n\n\n### \u75c5\u6c17\u3092\u77e5\u308b3\uff1a\u30ad\u30e3\u30c3\u30b5\u30d0\u30e2\u30b6\u30a4\u30af\u75c5\uff08CMD\uff09\u306b\u3064\u3044\u3066\n\n`CMD\u306e\u75c7\u72b6`:\n\n* CMD\u306f\u3001\u30e2\u30b6\u30a4\u30af\u3001\u6591\u5165\u308a\u3001\u8449\u306e\u5909\u5f62\u3084\u306d\u3058\u308c\u3001\u8449\u3084\u690d\u7269\u306e\u30b5\u30a4\u30ba\u306e\u5168\u4f53\u7684\u306a\u6e1b\u5c11\u3092\u542b\u3080\u69d8\u3005\u306a\u8449\u72b6\u306e\u75c7\u72b6\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n\n* \u3053\u306e\u75c5\u6c17\u306b\u3088\u3063\u3066\u5f71\u97ff\u3092\u53d7\u3051\u305f\u8449\u306f\u3001\u901a\u5e38\u306e\u7dd1\u8272\u306e\u30d1\u30c3\u30c1\u3092\u6301\u3061\u3001\u91cd\u75c7\u5ea6\u306b\u5fdc\u3058\u3066\u9ec4\u8272\u3068\u767d\u306e\u7570\u306a\u308b\u5272\u5408\u3067\u6df7\u5408\u3055\u308c\u3066\u3044\u307e\u3059\u3002","ae65231b":"# \u3053\u306e\u30b3\u30f3\u30da\u30c6\u30a3\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066 \n\n\u30e1\u30e9\u30ce\u30fc\u30de\u306b\u7d9a\u3044\u3066\u3001\u4eca\u5e74\u3082\u307e\u305f\u53e4\u5178\u7684\u306a\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30d3\u30b8\u30e7\u30f3\u306e\u5206\u985e\u554f\u984c\u304c\u51fa\u984c\u3055\u308c\u307e\u3057\u305f\u3002CV \u3092\u59cb\u3081\u305f\u3070\u304b\u308a\u306e\u4eba\u306b\u3068\u3063\u3066\u306f\u3001\u3053\u306e\u30e9\u30a4\u30d6\u30b3\u30f3\u30da\u306b\u624b\u3092\u51fa\u3057\u3066\u307f\u3066\u3001\u6700\u521d\u306e\u4e00\u6b69\u3092\u8e0f\u307f\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u7d76\u597d\u306e\u6a5f\u4f1a\u3067\u3059\u3002\u3053\u306e\u30b3\u30f3\u30c6\u30b9\u30c8\u3067\u306f\u3001\u5206\u985e\u306e\u7cbe\u5ea6\u304c\u554f\u308f\u308c\u307e\u3059\u304c\u3001\u305d\u308c\u304c\u3069\u306e\u304f\u3089\u3044\u306e\u983b\u5ea6\u3067\u8d77\u3053\u308b\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n\n\u901a\u5e38\u3001\u5b9f\u969b\u306b\u5fc5\u8981\u306a\u306e\u306f\u3001\u8449\u306e\u533b\u8005\u306b\u306a\u308b\u3053\u3068\u3067\u3042\u308a\u3001\u8fb2\u5bb6\u304c\u611f\u67d3\u6027\u306e\u8449\u3092\u8b58\u5225\u3057\u3001\u624b\u9803\u306a\u30ec\u30fc\u30c8\u3067\u305d\u308c\u3089\u3092\u6cbb\u3059\u306e\u3092\u52a9\u3051\u308b\u3053\u3068\u3067\u3059 \ud83d\ude1b \u3002\n \n# \u3053\u306e\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u306b\u3064\u3044\u3066\n\n* \u3044\u3064\u3082\u306e\u3088\u3046\u306b\u3001\u3053\u308c\u306f\u521d\u5fc3\u8005\u5411\u3051\u306e\u30ce\u30fc\u30c8\u3067\u3001\u30ad\u30e3\u30c3\u30b5\u30d0\u306e\u8449\u306e\u75c5\u6c17\u306b\u7279\u5316\u3057\u305f\u8449\u306e\u533b\u8005\u306b\u52b9\u7387\u7684\u306b\u306a\u308c\u308b\u65b9\u6cd5\u3092\u304a\u4f1d\u3048\u3057\u307e\u3059 \ud83d\ude1b \u305d\u3057\u3066\u3001\u4e3b\u306a\u65b9\u6cd5\u8ad6\u306f\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u3067\u3059\u3002\n\n* \u79c1\u306f\u3042\u306a\u305f\u304c\u77e5\u3063\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3059\u3079\u3066\u306e\u3082\u306e\u3092\u30ab\u30d0\u30fc\u3057\u307e\u3059 , \u5c02\u9580\u77e5\u8b58\u304b\u3089\u65b9\u6cd5\u8ad6\u307e\u3067 , \u79c1\u306f\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u63d0\u6848\u3059\u308b\u3055\u307e\u3056\u307e\u306a\u30a2\u30a4\u30c7\u30a2\u306e\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u306e\u4f8b\u3068\u4e00\u7dd2\u306b\n\n* \u591a\u304f\u306e\u6df7\u4e71\u304c\u306a\u3051\u308c\u3070\u3001\u3042\u306a\u305f\u306f\u3053\u306e\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u306b\u5f93\u3046\u3068\u3001\u3053\u308c\u306f\u3042\u306a\u305f\u306e\u6700\u521d\u306eCV competition\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n* \u6a5f\u68b0\u5b66\u7fd2\u3068kaggle\u304c\u5168\u304f\u521d\u3081\u3066\u306e\u65b9\u306f\u3001\u79c1\u304c\u66f8\u3044\u305f\u3053\u306e[guide](https:\/\/www.kaggle.com\/tanulsingh077\/tackling-any-kaggle-competition-the-noob-s-way) \u3092\u898b\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002 \n\n# Step 1 : \u60a3\u8005\u306e\u5206\u6790\n\n* \u5f7c\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u8a71\u3059\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3068\u3044\u3046\u4e8b\u5b9f\u3092\u8003\u616e\u3057\u3066\u4f55\u304b\u306e\u524d\u306b\u8449\u306e\u533b\u8005\u304c\u3059\u3079\u304d\u3067\u3042\u308b\u3053\u3068\u3092\u6700\u521d\u306e\u30b9\u30c6\u30c3\u30d7\u306f\u4f55\u3067\u3057\u3087\u3046\u304b\uff1f\u7b54\u3048\u306f\u5f53\u7136\u7c21\u5358\u3067\u3001\u60a3\u8005\u3092\u898b\u3066\u4f55\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u304b\u3092\u5206\u6790\u3057\u307e\u3059\u3002\n\n* \u3057\u304b\u3057\u3001\u533b\u5e2b\u306f\u305d\u308c\u3092\u898b\u308b\u3060\u3051\u3067\u4f55\u304b\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u3069\u306e\u3088\u3046\u306b\u7406\u89e3\u3057\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\u533b\u5e2b\u3068\u3057\u3066\u3053\u306e\u305f\u3081\u306b\u306f\u3001\u5f7c\u306f\u6b63\u5e38\u306a\u60a3\u8005\/\u8449\u304c\u3069\u306e\u3088\u3046\u306b\u898b\u3048\u308b\u304b\u3092\u77e5\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3057\u3001\u611f\u67d3\u3057\u305f\u3082\u306e\u304b\u3089\u5065\u5eb7\u306a\u60a3\u8005\u3092\u5206\u96e2\u3059\u308b\u305f\u3081\u306b\u3001\u901a\u5e38\u306e\u52d5\u4f5c\u304b\u3089\u306e\u9038\u8131\uff08\u30d1\u30bf\u30fc\u30f3\u3001\u8272\u3001\u8cea\u611f\u306a\u3069\uff09\u3092\u89b3\u5bdf\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4eca\u3001\u3055\u3089\u306b\u75c5\u6c17\u306e\u7279\u5b9a\u306e\u30af\u30e9\u30b9\u306b\u611f\u67d3\u3057\u305f\u3082\u306e\u3092\u5206\u985e\u3059\u308b\u305f\u3081\u306b\u3001\u533b\u5e2b\u306f\u307e\u305f\u3001\u60a3\u8005\/\u8449\u306e\u72b6\u614b\u304c\u7570\u306a\u308b\u75be\u60a3\u306e\u3088\u3046\u306b\u898b\u3048\u308b\u65b9\u6cd5\u3092\u77e5\u3063\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3053\u308c\u3089\u306e\u30dd\u30a4\u30f3\u30c8\u3092\u5ff5\u982d\u306b\u7f6e\u3044\u3066\u3001\u57fa\u672c\u7684\u306a\u99b4\u67d3\u307f\u306e\u3042\u308b\u3082\u306e\u304b\u3089\u59cb\u3081\u3066\u307f\u307e\u3057\u3087\u3046\u3002","df8d0d74":"* \u30af\u30e9\u30b9\u30bf\u30fc3\u306e\u307b\u3068\u3093\u3069\u306e\u5916\u308c\u5024\u3092\u30af\u30e9\u30b9\u30bf\u30fc\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u305d\u308c\u3089\u3092\u7c21\u5358\u306b\u53ef\u8996\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n* \u8449\u304c\u50b7\u3093\u3067\u3044\u305f\u308a\u3001\u8336\u8272\u3044\u6591\u70b9\u304c\u3042\u3063\u305f\u308a\u3001\u5065\u5eb7\u3067\u306f\u306a\u3044\u3088\u3046\u306b\u898b\u3048\u308b\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u3002\n\n\u540c\u3058\u30c8\u30d4\u30c3\u30af\u306b\u5bfe\u51e6\u3059\u308b\u591a\u6570\u306e\u8b70\u8ad6\u304c\u3042\u308a\u307e\u3059\u3002\n* https:\/\/www.kaggle.com\/c\/cassava-leaf-disease-classification\/discussion\/198363 -- Wrong Labels\n* https:\/\/www.kaggle.com\/c\/cassava-leaf-disease-classification\/discussion\/199606 --  Quality of Labels\n\n\u8a13\u7df4\u30bb\u30c3\u30c8\u306e\u30ce\u30a4\u30ba\u3092\u5fc3\u914d\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u3057\u304b\u3057\u3001\u3082\u3057\u30ce\u30a4\u30ba\u304c\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u306b\u542b\u307e\u308c\u3066\u3044\u3066\u3001\u30e9\u30d9\u30ea\u30f3\u30b0\u304c\u540c\u69d8\u306b\u884c\u308f\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u304b\uff1f, \u305d\u308c\u306f\u554f\u984c\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3001\u6211\u3005\u306f\u6211\u3005\u304c\u78ba\u4fe1\u3059\u308b\u307e\u3067\u3001\u8a13\u7df4\u30bb\u30c3\u30c8\u304b\u3089\u4f55\u304b\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\n\n\n\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3092\u8981\u7d04\u3059\u308b\u3068\n\n` \u5065\u5eb7\u306a\u30ad\u30e3\u30c3\u30b5\u30d0\u306e\u8449\u306e\u7279\u5fb4`:\n* \u4e3b\u306b\u7dd1\u8272\u3067\u3001\u76f4\u7acb\u3057\u3066\u3044\u3066\u3001\u8336\u8272\u306e\u6591\u70b9\u304c\u307b\u3068\u3093\u3069\u306a\u3044\u3002\n* \u9ec4\u8272\u3067\u3082\u7dd1\u3067\u3082\u8449\u5168\u4f53\u306b\u5747\u4e00\u306a\u8cea\u611f\u3092\u4e0e\u3048\u308b","bab1cb3f":"### \u75c5\u6c17\u3092\u77e5\u308b1\uff1a\u30ad\u30e3\u30c3\u30b5\u30d0\u83cc\u75c5\uff08CBB\uff09\u306b\u3064\u3044\u3066\n\n\u4eca\u3001\u79c1\u305f\u3061\u306f\u5065\u5eb7\u306a\u30ad\u30e3\u30c3\u30b5\u30d0\u306e\u8449\u304c\u3069\u306e\u3088\u3046\u306b\u898b\u3048\u308b\u304b\u3092\u77e5\u3063\u3066\u3044\u308b\u306e\u3067\u3001 \u6700\u521d\u306e\u75c5\u6c17\u306b\u3064\u3044\u3066\u5b66\u3076\u305f\u3081\u306b\u79fb\u52d5\u3057\u307e\u3057\u3087\u3046 `CBB\u306e\u75c7\u72b6`:\n\n* \u9ed2\u3044\u8449\u306e\u6591\u70b9\u3084\u75c5\u6591\u3001\u89d2\u5f35\u3063\u305f\u8449\u306e\u6591\u70b9\u3001\u82e5\u8449\u306e\u840e\u51cb\u306b\u3088\u308b\u8449\u306e\u65e9\u67af\u308c\u3084\u8131\u843d\u3001\u91cd\u5ea6\u306e\u653b\u6483\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002\n\n* \u6700\u521d\u306f\u8449\u8108\u306b\u3088\u3063\u3066\u5236\u9650\u3055\u308c\u305f\u8449\u306b\u89d2\u5f35\u3063\u305f\u6c34\u6d78\u3057\u306e\u6591\u70b9\u304c\u767a\u751f\u3057\u3001\u8449\u306e\u4e0b\u306e\u65b9\u306b\u306f\u3063\u304d\u308a\u3068\u898b\u3089\u308c\u307e\u3059\u3002\u6591\u70b9\u306f\u6025\u901f\u306b\u62e1\u5927\u3057\u3001\u7279\u306b\u8449\u7e01\u306b\u6cbf\u3063\u3066\u5408\u6d41\u3057\u3001\u8910\u8272\u3067\u9ec4\u8272\u306e\u7e01\u53d6\u308a\u3092\u3059\u308b\uff08\u56f31\uff09\u3002\n\n* \u6591\u70b9\u306e\u4e2d\u5fc3\u90e8\u306b\u30af\u30ea\u30fc\u30e0\u8272\u306e\u767d\u8272\u306e\u6db2\u6ef4\u304c\u767a\u751f\u3057\u3001\u305d\u306e\u5f8c\u3001\u9ec4\u8272\u306b\u5909\u5316\u3057\u307e\u3059\u3002\n\n![\u56f31](https:\/\/www.pestnet.org\/fact_sheets\/assets\/image\/cassava_bacterial_blight_173\/thumbs\/cassavabb_sml.jpg)\n![\u56f32](https:\/\/www.pestnet.org\/fact_sheets\/assets\/image\/cassava_bacterial_blight_173\/thumbs\/cassavabb2_sml.jpg)\n\n\n\u8a73\u7d30\u306f [here](https:\/\/www.pestnet.org\/fact_sheets\/cassava_bacterial_blight_173.htm)","4da75c94":"# Cassava Dataset","83111c77":"# \u30b9\u30c6\u30c3\u30d73\uff1a\u6700\u7d42\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u69cb\u7bc9\n\n\nOhk now Docs , its time for you to build the final project . \u3053\u308c\u306f\u6700\u7d42\u7684\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306a\u306e\u3067\u3001\u8ab0\u3082\u304c\u81ea\u5206\u81ea\u8eab\u3067\u69cb\u7bc9\u3059\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u79c1\u304c\u4f7f\u7528\u3057\u305f\u3082\u306e\u306e\u8981\u7d04\u3092\u66f8\u304d\u3001\u3055\u3089\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u6539\u5584\u3059\u308b\u305f\u3081\u306e\u65b9\u6cd5\u3092\u63d0\u6848\u3057\u307e\u3059\u3002\n\n\u6700\u5f8c\u306b\u3001\u79c1\u306f\u307e\u305f\u3001\u7af6\u4e89\u306e\u5168\u4f53\u306e\u30b3\u30fc\u30b9\u306e\u4e2d\u3067\u8a66\u3059\u305f\u3081\u306e\u3082\u306e\/\u5916\u3092\u898b\u308b\u305f\u3081\u306e\u3082\u306e\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n`\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3\u30e2\u30c7\u30eb\u306e\u307e\u3068\u3081`:\n\n\u3053\u306e\u30e2\u30c7\u30eb\u306f\u30ad\u30e3\u30c3\u30b5\u30d02019\u5927\u4f1a\u306e\u512a\u52dd\u89e3\u3092\u5143\u306b\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3067\u304d\u308b\u3060\u3051\u8fd1\u3044\u5f62\u3067\u518d\u73fe\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n* SE-ResNext50\n* Dimension = (384,384)\n* Epochs = 10\n* Custom LR scheduler \n* Weights saved on best loss : Categorical CrossEntropy\n* Basic Augs : HorizontalFlip,VerticalFlip,Rotate,RandomBrightness,ShiftScaleRotate,cutout,centercrop,zoom,randomscale\n* No TTA\uff08test\u30c7\u30fc\u30bf\u306baugument\u3092\u884c\u308f\u306a\u3044\uff09\n\n<font color ='red' >GPU\u306e\u305f\u3081\u306ekaggle\u306b\u5236\u9650\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u79c1\u306e5\u3064\u6298\u308a\u30e2\u30c7\u30eb\u306f\u307e\u3060\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u4eca\u306e\u3068\u3053\u308d\u306fSeResNext50\u306e\u4e8b\u524d\u5b66\u7fd2\u3055\u308c\u305f\u91cd\u307f\u3060\u3051\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u306f\u3001\u7570\u306a\u308b\u8a2d\u5b9a\/\u30a2\u30a4\u30c7\u30a2\u3067\u6570\u56de\u66f4\u65b0\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3092\u7dad\u6301\u3057\u3066\u304f\u3060\u3055\u3044<\/color>","16d75d10":"# Preparing Final Submission","de405dcf":"# Utils\n\n\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30fc\u6a5f\u80fd\u306e\u9805","be3e4dfa":"# Engine","09e97f4d":"* \u75c7\u72b6\u306e\u77e5\u8b58\u304b\u3089\u3001\u3053\u308c\u3089\u306fCBB\u75c5\u306b\u7f79\u60a3\u3057\u3066\u3044\u308b\u3053\u3068\u306f\u9593\u9055\u3044\u3042\u308a\u307e\u305b\u3093\u3057\u3001\u8449\u305d\u306e\u3082\u306e\u3067\u306f\u306a\u304f\u830e\u306e\u753b\u50cf\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u306f\u3001\u75c5\u6c17\u306e\u4e2d\u306b\u306f\u830e\u3067\u5224\u65ad\u3067\u304d\u308b\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u830e\u306e\u753b\u50cf\u306f\u30ce\u30a4\u30ba\u3067\u306f\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n* IMG - '1926670152.jpg'\u306e\u3088\u3046\u306a\u753b\u50cf\u306e\u3044\u304f\u3064\u304b\u3067\u306f\u3001\u8336\u8272\u306e\u6591\u70b9\u306f\u975e\u5e38\u306b\u5c0f\u3055\u304f\u3001\u8449\u306f\u5065\u5eb7\u306a\u3082\u306e\u306e\u3088\u3046\u306b\u898b\u3048\u3001\u5065\u5eb7\u306a\u753b\u50cf\u306e\u591a\u304f\u306f\u307e\u305f\u3001\u305d\u306e\u3088\u3046\u306a\u5c0f\u3055\u306a\u8336\u8272\u3092\u6301\u3063\u3066\u304a\u308a\u3001\u8b58\u5225\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\n\n* \u3053\u306e\u30ab\u30c6\u30b4\u30ea\u306e\u75c5\u6c17\u306e\u79c1\u306e\u7406\u89e3\u304b\u3089\u3001\u79c1\u306fRandomCropping\u3001\u30b3\u30f3\u30c8\u30e9\u30b9\u30c8\u306e\u5909\u5316\u3001\u4efb\u610f\u306e\u7a2e\u985e\u306e\u8272\u306e\u5909\u5316\u306f\u826f\u3044\u30a2\u30a4\u30c7\u30a2\u3067\u306f\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3068\u8a00\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","b5747c7a":"# \u30b9\u30c6\u30c3\u30d72\uff1a\u65b9\u6cd5\u8ad6\u306b\u3064\u3044\u3066\u5b66\u3076\n\n\u3053\u3093\u306b\u3061\u306f\u3001\u533b\u5e2b\u306f\u3042\u306a\u305f\u306e2\u5e74\u76ee\u3078\u3088\u3046\u3053\u305d\u3001\u3042\u306a\u305f\u306e\u6700\u7d42\u8ab2\u984c\u3092\u5b8c\u4e86\u3059\u308b\u305f\u3081\u306b\u3001\u3042\u306a\u305f\u306f\u4eca\u3001\u3042\u306a\u305f\u306e\u51e6\u5206\u3067\u6301\u3063\u3066\u3044\u308b\u30c4\u30fc\u30eb\u3092\u7406\u89e3\u3057\u3001\u305d\u308c\u3089\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\u3092\u7406\u89e3\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3001\u4ee5\u4e0b\u306f\u3001\u30c4\u30fc\u30eb\u3092\u5b66\u3076\u305f\u3081\u306b\u5f93\u3046\u3079\u304d\u30b9\u30c6\u30c3\u30d7\u30d0\u30a4\u30b9\u30c6\u30c3\u30d7\u306e\u30ac\u30a4\u30c9\u3067\u3059\u3002\n\n* [Beginner Article](https:\/\/adeshpande3.github.io\/adeshpande3.github.io\/A-Beginner's-Guide-To-Understanding-Convolutional-Neural-Networks\/)\n* [Course By Andrew NG](https:\/\/www.coursera.org\/learn\/convolutional-neural-networks)\n* [Applying CNNS using Keras and tensorflow](https:\/\/www.coursera.org\/learn\/convolutional-neural-networks-tensorflow)\n* [Course from Fast.ai](https:\/\/course.fast.ai\/videos\/?lesson=1)","9a4e1df5":"### \u63a8\u8ad6\n\n* \u6211\u3005\u306f\u3001CGM\u3068CMD\u306f\u975e\u5e38\u306b\u8fd1\u3044\u75c7\u72b6\u3092\u6301\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u307e\u305f\u3001\u304b\u306a\u308a\u4f3c\u305f\u3088\u3046\u306a\u753b\u50cf\u3092\u6301\u3063\u3066\u3044\u308b\u3001\u591a\u304f\u306e\u5834\u5408\u3001\u5c02\u9580\u5bb6\u306f\u3001\u3053\u308c\u3089\u306e\u30e9\u30d9\u30eb\u3092\u6df7\u4e71\u3055\u305b\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3001\u6211\u3005\u306f\u305d\u308c\u304c\u30e2\u30c7\u30eb\u306e\u305f\u3081\u306e\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3069\u306e\u3088\u3046\u306b\u5927\u304d\u306a\u8ab2\u984c\u3092\u60f3\u50cf\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n* \u3053\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u3067\u3082\u5916\u308c\u8005\u306f\u306a\u3044\u304b\u3001\u3042\u308b\u3044\u306f\u975e\u5e38\u306b\u5c11\u306a\u3044\u3088\u3046\u306b\u601d\u308f\u308c\u307e\u3059\u3002","7a21f264":"## Augmentations","92b2e2f5":"### \u75c5\u6c17\u3092\u77e5\u308b4\uff1a\u30ad\u30e3\u30c3\u30b5\u30d0\u8910\u6761\u75c5(CBSD)\n\n\u4eca\u3001\u79c1\u306f\u6700\u5f8c\u306b\u3053\u308c\u3092\u9078\u3093\u3060\u7406\u7531\u306f\u3001\u6211\u3005\u306f\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u306e\u305f\u3081\u306b2\u3064\u306e\u7570\u306a\u308b\u7a2e\u985e\u306e\u753b\u50cf\u3092\u6301\u3063\u3066\u3044\u308b\u305f\u3081\u3067\u3059\u3002\n\n* \u4e00\u3064\u306f\u3001\u8449\u3063\u3071\u30fb\u690d\u7269\u306e\u753b\u50cf\u3067\u3059\u3002\n* \u3082\u3046\u4e00\u3064\u306f\u3001\u7d50\u7bc0\u6027\u306e\u6839\u306e\u753b\u50cf\u3067\u3059\u304c\u3001\u3053\u308c\u306f\u30b8\u30e3\u30ac\u30a4\u30e2\u3084\u30ce\u30a4\u30ba\u3068\u8aa4\u89e3\u3055\u308c\u3084\u3059\u3044\u306e\u3067\u3059\u304c\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u30ce\u30a4\u30ba\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3053\u3068\u304b\u3089\u3001\u3053\u306e\u75c5\u6c17\u306e\u8b58\u5225\u306b\u504f\u308a\u304c\u51fa\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u5199\u3063\u3066\u3044\u308b\u8336\u8272\u304f\u3066\u4e0d\u6070\u597d\u306a\u3082\u306e\u306f\u3001\u30ab\u30b5\u30d9\u306e\u7d50\u7bc0\u6027\u6839\u3067\u3042\u308a\u3001\u3053\u306e\u75c5\u6c17\u3082\u307e\u305f\u3001\u3053\u308c\u3089\u306e\u753b\u50cf\u304b\u3089\u8b58\u5225\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u3092\u660e\u78ba\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u4eca\u3059\u3050 `CBSD\u306e\u75c7\u72b6`\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n* CBSD\u306e\u8449\u306e\u75c7\u72b6\u306f\u3001\u6bd4\u8f03\u7684\u5927\u304d\u306a\u9ec4\u8272\u306e\u30d1\u30c3\u30c1\u3092\u5f62\u6210\u3059\u308b\u305f\u3081\u306b\u62e1\u5927\u3057\u3001\u5408\u4f53\u3059\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u7279\u5fb4\u7684\u306a\u9ec4\u8272\u307e\u305f\u306f\u58ca\u6b7b\u6027\u306e\u9759\u8108\u306e\u30d0\u30f3\u30c7\u30a3\u30f3\u30b0\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n* \u584a\u6839\u306e\u75c7\u72b6\u306f\u3001\u584a\u830e\u5185\u306e\u9ed2\u8910\u8272\u306e\u58ca\u6b7b\u9818\u57df\u3068\u6839\u306e\u30b5\u30a4\u30ba\u306e\u6e1b\u5c11\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u30ab\u30c6\u30b4\u30ea\u306b\u5b58\u5728\u3059\u308b2\u3064\u306e\u30bf\u30a4\u30d7\u306e\u753b\u50cf\u3068\u3001\u305d\u308c\u30892\u3064\u306e\u7570\u306a\u308b\u753b\u50cf\u306b\u898b\u3089\u308c\u308b\u75c7\u72b6\u3092\u660e\u78ba\u306b\u7406\u89e3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u306e\u3067\u3001\u30c7\u30fc\u30bf\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002","90337f24":"\u3059\u3079\u3066\u306e\u753b\u50cf\u30da\u30a2\u9593\u306e\u985e\u4f3c\u5ea6\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\u5024\u3092256\u3067\u5272\u3063\u3066\u6b63\u898f\u5316\uff080-1\uff09\u3057\u307e\u3059\u3002"}}