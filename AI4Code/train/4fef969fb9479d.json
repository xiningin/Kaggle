{"cell_type":{"9d82eac3":"code","5cc8c505":"code","906d2a84":"code","42864374":"code","405585bf":"code","c65a364c":"code","8408884f":"code","f4f05a4e":"code","c5aadf9a":"code","6217b9a1":"code","7798018e":"code","23d56ad5":"code","c0e56217":"code","20897555":"code","66834eff":"code","d8f24a7c":"code","65af22c2":"code","1b316dd0":"code","0fdb787f":"code","eb3e7129":"code","94198981":"code","1d6e16f6":"code","d710a97c":"markdown","57e361ed":"markdown","deb49c29":"markdown","2d417cac":"markdown","9ed7f486":"markdown","7f045218":"markdown","39c38382":"markdown","f4262c6e":"markdown","e4470c9b":"markdown","1bde9e39":"markdown","b7d9f823":"markdown"},"source":{"9d82eac3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5cc8c505":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","906d2a84":"data = pd.read_csv('..\/input\/dataset-of-kaggle-dataset-include-medalvotecount\/medalvotecount.csv')","42864374":"data","405585bf":"data.columns","c65a364c":"data.isnull().sum()","8408884f":"color = ['#808000','#9ACD32','#006400','#DAA520','#2F4F4F']","f4f05a4e":"fig,ax = plt.subplots(1,2,figsize=(12,6))\nsns.barplot(x=data['DataSetMedals'].value_counts().index,y=data['DataSetMedals'].value_counts().values,palette =color,ax=ax[0])\nax[1].pie(data['DataSetMedals'].value_counts().values,colors=color,autopct='%1.1f%%')\nplt.suptitle('Each Medals Distripution',weight='bold',fontname='Heather',fontsize=20)\nax[1].text(1,1,'Gold(469)',color='#DAA520',weight='bold',fontsize=15)\nax[1].text(1,0.8,'Silver(1135)',color='#006400',weight='bold',fontsize=15)\nax[1].text(1,0.6,'Bronze(7203)',color='#9ACD32',weight='bold',fontsize=15)\nax[0].tick_params(labelleft=False,left = False)\nax[0].tick_params(axis='x',labelsize=15,rotation=60)\nax[0]=sns.despine(left=True)","c5aadf9a":"data[['year','month','time']]=data['ct'].str.split('-',expand=True)","6217b9a1":"fig=plt.figure(figsize=(12,6))\nsns.barplot(x=data['year'].value_counts().index,y=data['year'].value_counts().values,palette=color)\nplt.title('All Year Total Medals',weight='bold',fontname='monospace',fontsize=20)","7798018e":"data[['year','month','time']]=data['ct'].str.split('-',expand=True)","23d56ad5":"year2015 =data[(data['year']=='2015')]\nyear2016 = data[(data['year']=='2016')]\nyear2017 = data[(data['year']=='2017')]\nyear2018 = data[(data['year']=='2018')]\nyear2019 = data[(data['year']=='2019')]\nyear2020 = data[(data['year']=='2020')]\nyear2021 = data[(data['year']=='2021')]\n\nyear2015=year2015.groupby(['DataSetMedals'])['year'].count()\nyear2016=year2016.groupby(['DataSetMedals'])['year'].count()\nyear2017=year2017.groupby(['DataSetMedals'])['year'].count()\nyear2018=year2018.groupby(['DataSetMedals'])['year'].count()\nyear2019=year2019.groupby(['DataSetMedals'])['year'].count()\nyear2020=year2020.groupby(['DataSetMedals'])['year'].count()\nyear2021=year2021.groupby(['DataSetMedals'])['year'].count()\n\nyear2015=year2015.reset_index()\nyear2016=year2016.reset_index()\nyear2017=year2017.reset_index()\nyear2018=year2018.reset_index()\nyear2019=year2019.reset_index()\nyear2020=year2020.reset_index()\nyear2021=year2021.reset_index()","c0e56217":"fig,ax = plt.subplots(1,7,figsize=(18,6))\nax[0].pie(year2015['year'],colors=color,explode = [0.03 for i in year2015['year']])\nax[0].text(0.5,1.5,'Silver(1)',color='black',weight='bold',fontsize=10)\nax[0].text(0.5,3,'2015',color='red',weight='bold',fontsize=10)\nax[1].pie(year2016['year'],colors=color,autopct = '%1.1F%%',explode = [0.03 for i in year2016['year']])\nax[1].text(0.5,1.5,'Gold(30)',color='black',weight='bold',fontsize=10)\nax[1].text(0.5,2,'Silver(33)',color='black',weight='bold',fontsize=10)\nax[1].text(0.5,2.5,'Bronze(87)',color='black',weight='bold',fontsize=10)\nax[1].text(0.5,3,'2016',color='red',weight='bold',fontsize=10)\nax[2].pie(year2017['year'],colors=color,autopct = '%1.1F%%',explode = [0.03 for i in year2017['year']])\nax[2].text(0.5,1.5,'Gold(82)',color='black',weight='bold',fontsize=10)\nax[2].text(0.5,2,'Silver(106)',color='black',weight='bold',fontsize=10)\nax[2].text(0.5,2.5,'Bronze(408)',color='black',weight='bold',fontsize=10)\nax[2].text(0.5,3,'2017',color='red',weight='bold',fontsize=10)\nax[3].pie(year2018['year'],colors=color,autopct = '%1.1F%%',explode = [0.03 for i in year2018['year']])\nax[3].text(0.5,1.5,'Gold(71)',color='black',weight='bold',fontsize=10)\nax[3].text(0.5,2,'Silver(121)',color='black',weight='bold',fontsize=10)\nax[3].text(0.5,2.5,'Bronze(488)',color='black',weight='bold',fontsize=10)\nax[3].text(0.5,3,'2018',color='red',weight='bold',fontsize=10)\nax[4].pie(year2019['year'],colors=color,autopct = '%1.1F%%',explode = [0.03 for i in year2019['year']])\nax[4].text(0.5,1.5,'Gold(65)',color='black',weight='bold',fontsize=10)\nax[4].text(0.5,2,'Silver(161)',color='black',weight='bold',fontsize=10)\nax[4].text(0.5,2.5,'Bronze(678)',color='black',weight='bold',fontsize=10)\nax[4].text(0.5,3,'2019',color='red',weight='bold',fontsize=10)\nax[5].pie(year2020['year'],colors=color,autopct = '%1.1F%%',explode = [0.03 for i in year2020['year']])\nax[5].text(0.5,1.5,'Gold(171)',color='black',weight='bold',fontsize=10)\nax[5].text(0.5,2,'Silver(437)',color='black',weight='bold',fontsize=10)\nax[5].text(0.5,2.5,'Bronze(2853)',color='black',weight='bold',fontsize=10)\nax[5].text(0.5,3,'2020',color='red',weight='bold',fontsize=10)\nax[6].pie(year2021['year'],colors=color,autopct = '%1.1F%%',explode = [0.03 for i in year2021['year']])\nax[6].text(0.5,1.5,'Gold(50)',color='black',weight='bold',fontsize=10)\nax[6].text(0.5,2,'Silver(276)',color='black',weight='bold',fontsize=10)\nax[6].text(0.5,2.5,'Bronze(2689)',color='black',weight='bold',fontsize=10)\nax[6].text(0.5,3,'2021',color='red',weight='bold',fontsize=10)\nplt.suptitle('% of Each Year All Medals',weight='bold',fontsize=20,fontname='Heather')\n","20897555":"month =data['month'].value_counts().reset_index().sort_values('index')","66834eff":"month.columns=['month','medals']","d8f24a7c":"fig,ax = plt.subplots(1,2,figsize=(12,6))\nsns.barplot(x=month['month'],y=month['medals'],palette =color,ax=ax[0])\nax[1].pie(month['medals'],colors=color,autopct='%1.1f%%',labels=month['month'])\nplt.suptitle('Each Month Medals Distripution',weight='bold',fontname='Heather',fontsize=20)","65af22c2":"fig,ax = plt.subplots(1,2,figsize=(14,6))\nsns.barplot(x=data.groupby(['DataSetMedals'])['totalviews'].sum().index,y=data.groupby(['DataSetMedals'])['totalviews'].sum().values,ax=ax[0],palette=color)\n\nsns.barplot(x=data.groupby(['DataSetMedals'])['votecount'].sum().index,y=data.groupby(['DataSetMedals'])['votecount'].sum().values,ax=ax[1],palette=color)\nax[0].set_xlabel('Total Views For All Madels',weight='semibold')\nax[1].set_xlabel('Total Votes For All Madels',weight='semibold')\nplt.suptitle('Total Views and Total Votes',weight='bold',fontname='monospace',fontsize=20)","1b316dd0":"fig,ax = plt.subplots(1,2,figsize=(14,6))\nsns.barplot(x=data.groupby(['DataSetMedals'])['totaldownloads'].sum().index,y=data.groupby(['DataSetMedals'])['totaldownloads'].sum().values,ax=ax[0],palette=color)\n\nsns.barplot(x=data.groupby(['DataSetMedals'])['totalkernel'].sum().index,y=data.groupby(['DataSetMedals'])['totalkernel'].sum().values,ax=ax[1],palette=color)\nax[0].set_xlabel('Total Downloads For All Madels',weight='semibold')\nax[1].set_xlabel('Total Kernal For All Madels',weight='semibold')\nplt.suptitle('Total Downloads and Total Kernal',weight='bold',fontname='monospace',fontsize=20)","0fdb787f":"title = data['title'].str.split(expand=True)","eb3e7129":"title = title.iloc[:,0]\ntitle = title.value_counts()\ntitle = title.reset_index()\ntitle.columns=['title','counts']","94198981":"title1=title.head(10)","1d6e16f6":"fig= plt.figure(figsize=(12,6))\nsns.barplot(x=title1['title'],y=title1['counts'],palette=color)\nplt.suptitle('Top 10 Title Dataset',weight='bold',fontname='monospace',fontsize=20)","d710a97c":"![](https:\/\/tse4.mm.bing.net\/th?id=OIP.mAaRgMDRFkn0DuywmDh-tgHaE7&pid=Api&P=0&w=256&h=170)","57e361ed":"# How Much Medals in Each Years and Month?","deb49c29":"# Year","2d417cac":"The dataset medal lot of person participate but **79%** no madel remain **21% madels**.The  most of madels brons,\nThe 2020 year more madel bring the dataset.\nThe more dowonload,views the dataset definitly available the gold madels,more kernal using also available gold madels.\nThe kaggle website more using dataset **COVID-19**.","9ed7f486":"# Total Views and Votes Compare with Madels","7f045218":"# How much of Each Medals Distripution","39c38382":"# Month","f4262c6e":"# conclution","e4470c9b":"# Total Downloads and Kernel Compare with Madels","1bde9e39":"# Kaggle Medalvote DataSet","b7d9f823":"# Which Title Present More ?, Which DataSet More Participate in Kaggle\n# Top 10 Title"}}