{"cell_type":{"b5caa4b5":"code","2ab291f4":"code","d42c204b":"code","11074011":"code","2e01892b":"code","dd66ec85":"code","297e9802":"code","8cf13dea":"code","5d82c0c7":"code","e407fe18":"code","ff901d36":"code","7d5797b6":"code","ebdb13a9":"code","13d8ce21":"code","85c8d949":"code","5581dcc2":"code","52e75809":"code","6c6653de":"code","ec1164f0":"code","2af8b633":"code","019984b1":"code","b13c0a54":"code","a9a07865":"code","cbbff5a0":"code","64a3c439":"markdown","ca834959":"markdown","ccb0c052":"markdown","ab1a2939":"markdown","b39d69f3":"markdown","e041874c":"markdown","5705e0d4":"markdown","1fafeb26":"markdown","23f25502":"markdown","18d0d08f":"markdown","12b917b4":"markdown","8dc472d9":"markdown","1a3f7102":"markdown","d803ad76":"markdown","268e09d2":"markdown","b9217cf1":"markdown","5a8999cb":"markdown","628634d7":"markdown","db97ffc8":"markdown"},"source":{"b5caa4b5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2ab291f4":"import numpy as np \nimport pandas as pd\nfrom sklearn.linear_model import LinearRegression","d42c204b":"df = pd.read_csv(\"..\/input\/videogamesales\/vgsales.csv\")\ndf.head()","11074011":"df.info()","2e01892b":"df.describe().T","dd66ec85":"df.isnull().sum()","297e9802":"df.drop([\"Rank\",\"Name\",\"Year\",\"Publisher\"],axis=1,inplace=True)\ndf.head()","8cf13dea":"dums = pd.get_dummies(df[[\"Platform\",\"Genre\"]])\ndums.head()","5d82c0c7":"dums.drop([\"Platform_2600\",\"Genre_Misc\"],axis=1,inplace=True)","e407fe18":"final_df= pd.concat([df,dums],axis=1)\nfinal_df.drop([\"Platform\",\"Genre\"],axis=1,inplace=True)\nfinal_df.head()","ff901d36":"import seaborn as sns\nimport matplotlib.pyplot as plt\ng = sns.regplot(final_df.Global_Sales,final_df.EU_Sales,ci=None,scatter_kws= {\"color\":\"r\",\"s\":9});\nplt.xlim(-2,85)\nplt.ylim(bottom=0)","7d5797b6":"final_df.EU_Sales[df.EU_Sales>15]\n#this value is in index 0.","ebdb13a9":"df_outlier = final_df.drop([0],axis=0) ","13d8ce21":"import matplotlib.pyplot as plt\ng = sns.regplot(df_outlier.Global_Sales,df_outlier.EU_Sales,ci=None,scatter_kws= {\"color\":\"r\",\"s\":9});\nplt.xlim(-2,45)\nplt.ylim(bottom=0)","85c8d949":"x = df_outlier[[\"EU_Sales\"]]\ny = df_outlier[\"Global_Sales\"]","5581dcc2":"reg = LinearRegression()\nmodel = reg.fit(x,y)","52e75809":"model.score(x,y)","6c6653de":"model.predict([[15]])","ec1164f0":"est = [[12],[30],[50]]\nmodel.predict(est)","2af8b633":"x=final_df.drop(\"Global_Sales\",axis =1)\ny = final_df.Global_Sales","019984b1":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.20,random_state = 13)\n#test_size = \"selects what percentage of the data set will get as \"test\"\"","b13c0a54":"print(x_train.shape)\nprint(y_train.shape)\nprint(x_test.shape)\nprint(y_test.shape)\n#Let's look at the shape information","a9a07865":"lm = LinearRegression()\nmodel = lm.fit(x_train,y_train)\n#Let's create our model and train \"x_train\" and \"y_train\" sets.","cbbff5a0":"from sklearn.metrics import mean_squared_error\ny_pred = model.predict(x_test)\nnp.sqrt(mean_squared_error(y_test,y_pred))","64a3c439":"# Multiple Linear Regression","ca834959":"\nCategorical variables are transformed with the \"get_dummies\" function in pandas.","ccb0c052":"After the categorical variables are converted, any transformed new variable belonging to each variable is selected and deleted.\n\nBecause the value of the deleted variable can be understood by looking at the other transformed variables already remaining.\n\n\nFor example, if all non-deleted variables are 0, it means that the deleted variable must be 1.","ab1a2939":"# Delete Unnecessary Variables For Data Science","b39d69f3":"\nThen, a new data set is created by combining the data set with the newly created variables. The old categorical variables that have been transformed are removed from the data set because they are no longer needed.","e041874c":"\nAfter training our model, let's look at the total error squares (margin of error) with the \"mean_squared_error\" method in the scikit-learn module.\n\n\nThe model is provided to generate estimates by using the \"x_test\" set. It is then checked how close this generated prediction is to the \"y_test\" set.\n\nThe number becomes readable by inserting it into the squaring function in the numpy module.","5705e0d4":"\nTo process the data, let's create the model and fit this model with X and Y variables.","1fafeb26":"Now we need to divide our data set into \"test\" and \"train\". Because after training our program from the \"train\" set, we will test it with our \"test\" set to see the error value.\n\nFor this we will use the **\"train_test_split\"** function in the **\"scikit-learn\"** module.","23f25502":"\nAfter creating the model, let's make it guess by giving certain values. (It predicts the \"Global_Sales\" variable according to the \"EU_Sales\" variable.)","18d0d08f":"# Converting Categorical Variables To Numeric variables","12b917b4":"### Outlier Control","8dc472d9":"\nThis data set is now ready to be used. Let's start.","1a3f7102":"Let's choose dependent and independent variables.","d803ad76":"\nIn multiple linear regression, this difference is selected as dependent on one variable and all remaining variables are selected as independent variables.","268e09d2":"We will not use \"Rank\", \"Name\", \"Year\", \"Publisher\" variables in this data set. So we will delete these variables from the data set using the \"drop\" function.\n\nIn this function, the \"axis\" parameter determines whether it will be a row or a column. If we set \"axis = 1\", the column will be deleted.\n\nThe \"inplace\" parameter is marked as \"False\" in the default setting. If we change this to \"True\", changes will be automatically saved in the data set.\n\n\nIf we do not use the \"inplace\" parameter, we will have to do it \"\"\"df = df.drop ([\"Rank\", \"Name\", \"Year\", \"Publisher\"], axis = 1)\"\"\"","b9217cf1":"As you can see, there is 1 extreme outlier in the variable \"EU_Sales\", so let's eliminate this value.","5a8999cb":"\nLet's look at the score of the model we created.","628634d7":"# Simple Linear Regression","db97ffc8":"# ****Include DataSet****"}}