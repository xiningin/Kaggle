{"cell_type":{"7d5bc84f":"code","b9594668":"code","ab984570":"code","df0e0748":"code","6aa1a7c5":"code","1a176489":"code","1cdbc0f6":"code","da42801f":"code","0850fc22":"code","9fa855c8":"code","63bf0f5a":"code","99356163":"code","06077581":"code","2acb7080":"code","cc506343":"markdown","2a0a9433":"markdown","3aea8441":"markdown","8dc46fb3":"markdown","b08ac7cd":"markdown","540a5cbf":"markdown","5833f683":"markdown"},"source":{"7d5bc84f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom pandas import Series, DataFrame\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b9594668":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","ab984570":"vgsales_df = pd.read_csv('\/kaggle\/input\/videogamesales\/vgsales.csv')\nvgsales_df.sample(10)","df0e0748":"vgsales_df.info()","6aa1a7c5":"# handling null values\nnull_df = vgsales_df.isnull()\n\nvgsales_df['Publisher'].fillna('NaN', inplace = True)\nvgsales_df.dropna(inplace = True) # remove all entries without year\ncleaned_df = vgsales_df.isnull()\n\nfig, ax = plt.subplots(nrows = 1, ncols = 2, figsize = (10, 5))\nsns.heatmap(null_df, ax = ax[0], cbar= False)\nax[0].set_title('Orignal Data')\nsns.heatmap(cleaned_df, ax = ax[1], cbar = False)\nax[1].set_title('Cleaned Data')","1a176489":"# converting obj col into string type\nlist_of_str_cols = ['Name', 'Platform', 'Genre', 'Publisher']\n\nfor col in list_of_str_cols:\n    vgsales_df[col].astype('str')\n    \n# converting year into int type\nvgsales_df['Year'] = vgsales_df['Year'].astype('int64')\n\nvgsales_df.dtypes","1cdbc0f6":"# grabbing some quick stats for original df\nvgsales_df.describe()","da42801f":"years = vgsales_df['Year'].unique()\nyears.sort()\nyears","0850fc22":"# Which Genre has the highest sale Global\ngroup_by_genre = vgsales_df.groupby('Genre')['Global_Sales'].sum()\ngroup_by_genre = pd.DataFrame(group_by_genre) # convert to df so can easier to plot\ngroup_by_genre.sort_values(by = 'Global_Sales', ascending = False, inplace = True)\nprint(group_by_genre)\n\nplt.subplots(figsize = (10,5))\nplot = sns.histplot(data = group_by_genre, x = 'Global_Sales', y = \"Genre\")\nplt.xlabel('Global Sales in Million')\nplt.title('Global Sales by Genre from 1980 - 2020')\nplot.xaxis.set_major_formatter('${x:1.2f}')","9fa855c8":"# which genre is the highest sale in each country\n\nlist_of_country = vgsales_df.columns[-5:-1]\nsales_by_country = pd.DataFrame(columns = ['Country', 'Genre', 'Sale'])\n\nfor country in list_of_country:\n    sale = vgsales_df.groupby('Genre')[country].sum()\n    sale.sort_values(ascending = False, inplace = True)\n    \n    genre = sale[:1].index[0]\n    total = sale[:1].values[0]\n    sales_by_country.loc[len(sales_by_country)] = [country, genre, total]\n\nsales_by_country","63bf0f5a":"# bar plot with annotation\nplot = sns.barplot(data = sales_by_country, x = 'Sale', y = 'Country', orient = 'h', palette = 'magma', hue = 'Genre')\nplt.xlabel('Sale in Million')\nplt.title('Game Sales by Country\/Genre 1980 - 2020')\nplot.xaxis.set_major_formatter('${x:1.2f}')","99356163":"# top 5 platforms with highest game sales? \n\ngroup_by_platform = vgsales_df.groupby('Platform')['Global_Sales'].sum()\ngroup_by_platform.sort_values(ascending = False, inplace = True)\n\nprint(group_by_platform[:5])\n\ntop_5_by_platform = pd.DataFrame(group_by_platform[:5])\n\nplot = sns.histplot(data = top_5_by_platform, x = 'Global_Sales', y = 'Platform')\nplt.title('Total Game Sales by Platform 1980 - 2020')\nplt.xlabel('Sales in Million')\nplot.xaxis.set_major_formatter('${x:1.2f}')","06077581":"# how many games each top 5 platforms sold during this time frame\ngame_sold_by_platf = vgsales_df['Platform'].value_counts()\ngame_sold_by_platf.sort_values(ascending = False, inplace = True)\ntop_5_dict = {'Platform': game_sold_by_platf[:5].index, 'Game_Count': game_sold_by_platf[:5].values}\ntop_5_game_sold = pd.DataFrame(top_5_dict)\nprint(top_5_game_sold)\n\nplot = sns.barplot(data = top_5_game_sold, x = 'Platform', y = 'Game_Count', palette = 'magma')\nplt.title('Total Game Release by Platform 1980 - 2020')\nplt.xlabel('Number of Games Sold')\nplt.ylabel('Total Released')","2acb7080":"# calc means for Global_Sales between PS2 and DS\nnum_ds_games = len(vgsales_df[vgsales_df['Platform'] == 'DS']) \nnum_ps2_games = game_sold_by_platf[game_sold_by_platf.index == 'PS2'].values[0]\n\nprint('DS games released: {} \\nPS2 games released: {}'.format(num_ds_games, num_ps2_games))\n\nprint('Est. of units sold on PS2: {}'.format(round(((1233.46 * 1000000) \/ 49.99)))) # PS2 1233.46 total global sales in million\nprint('Est. of units sold on DS: {}'.format(round(((818.96 * 1000000) \/ 29.99)))) # DS 818.96 total global sales in million","cc506343":"PS2 seem to have the lead on all platforms during this time span","2a0a9433":"Not only DS had more games released on its platform, it also sold more units than PS2. However, gross revenue difference can be related to price differences per game unit for each platform. ","3aea8441":"## Task 1: Scrubbing data types\n- converting data to correct dtypes\n- check for missing values","8dc46fb3":"from this table, we can safely say that Action genre sales is strongest globally aside for Japan","b08ac7cd":"from the chart, we can infer Action, Sport and Shooter games out sale others genre globally.","540a5cbf":"## Task 2: EDA \n- Which Genre has the highest sale\n- Top 5 platforms with the highest sale\n- Which platform has more units sold and do they earned more or less? why?\n\n### Assumption: \n- since \"Sales\" do not indicate whether they are units sold or gross revenue nor has currentcy used, I am going to assume that they are usd currency for practice purpose.\n- Global_Sales = NA_Sales + EU_Sales + JP_Sales + Other_Sales","5833f683":"Interestingly N DS had more games released than S PS2 in the same time period. However, above chart indicates N DS grossing the lowest out of the top 5 platforms. There are a couple of theories:\n- maybe game prices for each N DS are much lower per unit compare to S PS2. I.e 29.99 usd vs 49.99 usd per game. \n- possibly S PS2 has game titles that out sale N DS titles "}}