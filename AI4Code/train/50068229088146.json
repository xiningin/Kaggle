{"cell_type":{"31e41008":"code","a926d291":"code","0304c116":"code","c538abd3":"code","7ba09f17":"code","9df1b2ec":"code","a211ab54":"code","5dbdf13e":"code","14b27d7f":"code","a44fc84a":"code","869cfc54":"code","e9bdb8dc":"code","0b1f8ed8":"code","f361d5c7":"code","06bbdb3d":"code","3ffd78fc":"code","51731c09":"code","27d9d7c8":"code","cfc513be":"code","e0d2d37c":"code","3b220ee9":"code","3b82188f":"code","b55e1d91":"code","c3bc1633":"code","f7ff32a0":"code","c2922437":"code","fa127a1a":"markdown","28c4a6ed":"markdown","d9504c73":"markdown","22b2587f":"markdown","03077fdd":"markdown","7bc19dd0":"markdown","cc2f96e1":"markdown","8e430ea4":"markdown","fc2a6b46":"markdown"},"source":{"31e41008":"!pip install pycaret==2.3.1","a926d291":"!pip install shap","0304c116":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\nfrom pycaret.regression import setup, compare_models, create_model, tune_model, finalize_model, blend_models, predict_model, interpret_model\nimport shap","c538abd3":"train = pd.read_csv('..\/input\/tabular-playground-series-jul-2021\/train.csv')\ntest = pd.read_csv('..\/input\/tabular-playground-series-jul-2021\/test.csv')\nsub = pd.read_csv('..\/input\/tabular-playground-series-jul-2021\/sample_submission.csv')","7ba09f17":"train1 = train.drop(['date_time','target_benzene','target_nitrogen_oxides'], axis=1)\ntrain1.head()","9df1b2ec":"reg1 = setup(data=train1, target='target_carbon_monoxide', session_id=1)","a211ab54":"best1 = compare_models()","5dbdf13e":"catboost1 = create_model(\"catboost\")\net1 = create_model(\"et\")\nlightgbm1 = create_model(\"lightgbm\")\ngbr1 = create_model(\"gbr\")\nrf1 = create_model(\"rf\")\nblend1 = blend_models(estimator_list= [catboost1, et1, lightgbm1, gbr1, rf1], fold=4)\npred_h1 = predict_model(blend1)\nfinal1 = finalize_model(blend1)\npred1 = predict_model(final1, data=test)","14b27d7f":"interpret_model(catboost1)","a44fc84a":"interpret_model(lightgbm1)","869cfc54":"interpret_model(rf1)","e9bdb8dc":"train2 = train.drop(['date_time','target_carbon_monoxide','target_nitrogen_oxides'], axis=1)\ntrain2.head()","0b1f8ed8":"reg2 = setup(data=train2, target='target_benzene', session_id=2)","f361d5c7":"best2 = compare_models()","06bbdb3d":"catboost2 = create_model(\"catboost\")\net2 = create_model(\"et\")\nlightgbm2 = create_model(\"lightgbm\")\ngbr2 = create_model(\"gbr\")\nrf2 = create_model(\"rf\")\nblend2 = blend_models(estimator_list= [catboost2, et2, lightgbm2, gbr2, rf2], fold=4)\npred_h2 = predict_model(blend2)\nfinal2 = finalize_model(blend2)\npred2 = predict_model(final2, data=test)","3ffd78fc":"interpret_model(catboost2)","51731c09":"interpret_model(lightgbm2)","27d9d7c8":"interpret_model(rf2)","cfc513be":"train3 = train.drop(['date_time','target_carbon_monoxide','target_benzene'], axis=1)\ntrain3.head()","e0d2d37c":"reg3 = setup(data=train3, target='target_nitrogen_oxides', session_id=3)","3b220ee9":"best3 = compare_models()","3b82188f":"catboost3 = create_model(\"catboost\")\net3 = create_model(\"et\")\nlightgbm3 = create_model(\"lightgbm\")\ngbr3 = create_model(\"gbr\")\nrf3 = create_model(\"rf\")\nblend3 = blend_models(estimator_list= [catboost3, et3, lightgbm3, gbr3, rf3], fold=4)\npred_h3 = predict_model(blend3)\nfinal3 = finalize_model(blend3)\npred3 = predict_model(final3, data=test)","b55e1d91":"interpret_model(catboost3)","c3bc1633":"interpret_model(lightgbm3)","f7ff32a0":"interpret_model(rf3)","c2922437":"sub.target_carbon_monoxide = pred1.Label\nsub.target_benzene = pred2.Label\nsub.target_nitrogen_oxides = pred3.Label\nsub.to_csv('pycaretblend_submission.csv',index=False)\nsub","fa127a1a":"### Carbon monoxide","28c4a6ed":"5\u7a2e\u985e\u306e\u30e2\u30c7\u30eb\u3092\u30d6\u30ec\u30f3\u30c9\u3057\u305f\u3082\u306e\u3092\u30b5\u30d6\u30df\u30c3\u30c8\u3057\u3066\u307f\u307e\u3059\u3002","d9504c73":"## Examining the effects of Blend in PyCaret\nPyCaret\u3067\u306e\u30d6\u30ec\u30f3\u30c9\u306e\u52b9\u679c\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u6bd4\u8f03\u3059\u308b\u305f\u3081\u306b\u524d\u56de\u3068\u540c\u3058\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002","22b2587f":"## Nitrogen oxides","03077fdd":"# Tabular Playground Series - Jul 2021\nContinued from [last time](https:\/\/www.kaggle.com\/astashiro\/tps-jul2021-01eda) .","7bc19dd0":"### Benzene","cc2f96e1":"**Public Score : 0.25441** (Only Lightgbm: 0.30025)   \n\n\u6df7\u305c\u308b\u3068\u30b9\u30b3\u30a2\u306f\u3088\u304f\u306a\u308a\u307e\u3057\u305f\uff01","8e430ea4":"## Submission","fc2a6b46":"SHAP\u304c\u8868\u793a\u3067\u304d\u308bCatBoost\u3001LightGBM\u3001Random Forest\u3092\u898b\u3066\u307f\u308b\u3068\u3001\u30e2\u30c7\u30eb\u306b\u3088\u3063\u3066\u91cd\u8981\u8996\u3055\u308c\u3066\u3044\u308b\u7279\u5fb4\u91cf\u304c\u5fae\u5999\u306b\u9055\u3046\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u3092\u30d6\u30ec\u30f3\u30c9\u3059\u308b\u3068\u30b9\u30b3\u30a2\u306f\u4e0a\u304c\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002"}}