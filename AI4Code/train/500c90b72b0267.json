{"cell_type":{"c01510b5":"code","3c2eb663":"code","16f05ee9":"code","b9f3479c":"code","83c4e97f":"code","6df7bfb7":"code","94d76cc5":"code","81cc0f13":"code","f66f3eda":"code","3212de82":"code","610ba9ac":"code","66029bd4":"code","b2857e01":"code","023c8ff0":"code","adb6ec73":"code","5d4c4bef":"code","397ab4be":"code","0d7cdb69":"code","c8f4a65b":"code","4055b454":"code","570032be":"code","59804f22":"code","612f3849":"code","7c1565c7":"code","32b0feea":"code","aa4c4a35":"code","39444b50":"code","4a5f385b":"code","b02762ac":"code","84800e7f":"code","db800835":"code","1fd36ab2":"code","69f748e3":"code","def1c624":"code","604384bc":"code","5cbf62f9":"code","ec5ab05c":"code","9e6bb1a4":"code","c7d54268":"code","02fd2185":"code","ed5a158c":"code","83c4f732":"code","d55ec352":"code","0cab3923":"code","92bd89db":"code","b9fcef02":"code","5034d556":"code","9caeb823":"markdown","c187951b":"markdown","cff81b5c":"markdown","dd794cc8":"markdown","2ef07c8f":"markdown","0b9b80da":"markdown","28593668":"markdown","f7c235ca":"markdown","a1bc54f7":"markdown","8d9d7e30":"markdown","c7e0c0c2":"markdown","27c54032":"markdown"},"source":{"c01510b5":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","3c2eb663":"Train= pd.read_csv('..\/input\/titanic\/train.csv')\nTest= pd.read_csv('..\/input\/titanic\/test.csv')","16f05ee9":"Train.head()","b9f3479c":"Train.info()","83c4e97f":"Train.shape","6df7bfb7":"Train.describe()","94d76cc5":"Train['Survived'].value_counts()","81cc0f13":"sns.countplot(data=Train, x='Survived')","f66f3eda":"sns.boxplot(data=Train, x='Survived', y='Age')","3212de82":"sns.scatterplot(data=Train, x='Age', y='Sex', hue='Survived')","610ba9ac":"sns.pairplot(Train, hue='Survived')","66029bd4":"sns.heatmap(Train.corr(), annot=True, cmap=\"Blues\")","b2857e01":"Train.head()","023c8ff0":"Train= Train.drop('Name', axis=1)","adb6ec73":"(Train.isnull().sum()\/len (Train))*100","5d4c4bef":"def missing_percent (Train):\n    nan_percent= (Train.isnull().sum()\/len (Train))*100\n    nan_percent= nan_percent[nan_percent>0].sort_values()\n    return nan_percent","397ab4be":"nan_percent= missing_percent(Train)","0d7cdb69":"nan_percent","c8f4a65b":"plt.figure(figsize=(12, 6))\nsns.barplot(x= nan_percent.index, y= nan_percent)\nplt.xticks(rotation=90)","4055b454":"plt.figure(figsize=(12, 6))\nsns.barplot(x= nan_percent.index, y= nan_percent)\nplt.xticks(rotation=90)\nplt.ylim(0, 1)","570032be":"Train[Train['Embarked'].isnull()]","59804f22":"Train= Train.dropna(subset=['Embarked'], axis=0)","612f3849":"nan_percent= missing_percent(Train)\n\nplt.figure(figsize=(12, 6))\nsns.barplot(x= nan_percent.index, y= nan_percent)\nplt.xticks(rotation=90)\nplt.ylim(0, 1)","7c1565c7":"Train.drop(\"Cabin\", axis = 1, inplace = True)","32b0feea":"Train[\"Age\"].fillna(Train[\"Age\"].mean(), inplace = True)","aa4c4a35":"Train.drop(['PassengerId', 'Fare', 'Ticket','Embarked'], axis = 1, inplace = True)","39444b50":"Train['Sex']= Train['Sex'].replace('male', 0)\nTrain['Sex']= Train['Sex'].replace('female', 1)","4a5f385b":"Train.isnull().sum()","b02762ac":"Train['Sex']=Train['Sex'].replace({'male':0,'female':1})\n\nX= Train.drop('Survived', axis=1)\ny= Train['Survived']","84800e7f":"from sklearn.model_selection import train_test_split","db800835":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","1fd36ab2":"from sklearn.preprocessing import StandardScaler","69f748e3":"scaler= StandardScaler()","def1c624":"scaler.fit(X_train)","604384bc":"scaled_X_train= scaler.transform(X_train)\nscaled_X_test= scaler.transform(X_test)","5cbf62f9":"from sklearn.linear_model import LogisticRegression","ec5ab05c":"log_model= LogisticRegression()","9e6bb1a4":"log_model.fit(scaled_X_train, y_train)","c7d54268":"log_model.coef_","02fd2185":"y_pred= log_model.predict(scaled_X_test)","ed5a158c":"from sklearn.metrics import accuracy_score, confusion_matrix, classification_report","83c4f732":"accuracy_score(y_test, y_pred)","d55ec352":"confusion_matrix(y_test, y_pred)","0cab3923":"print(classification_report(y_test, y_pred))","92bd89db":"from sklearn.metrics import precision_recall_curve, plot_precision_recall_curve, plot_roc_curve","b9fcef02":"plot_precision_recall_curve(log_model, scaled_X_test, y_test)","5034d556":"plot_roc_curve(log_model, scaled_X_test, y_test)","9caeb823":"# **EVALUATING THE MODEL**","c187951b":"# **DATA PREPARATION**","cff81b5c":"# **EDA**","dd794cc8":"# **FEATURE & LABEL**","2ef07c8f":"# **EVALUATING CURVES AND AUC**","0b9b80da":"# **TRAIN THE MODEL**","28593668":"# **IMPORT LIBRARIES**","f7c235ca":"# **Scalling the Features**","a1bc54f7":"# **PREDICTING TEST DATA**","8d9d7e30":"# **TRAIN & TEST**","c7e0c0c2":"# **DATA OVERVIEW**","27c54032":"# **IMPORT DATASET**"}}