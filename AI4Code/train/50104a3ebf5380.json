{"cell_type":{"fcba6dd4":"code","232eab4b":"code","a49f1877":"code","e5c29e38":"code","3ef26b20":"code","09d1eb51":"code","bf7bd73a":"code","6956270c":"code","fb6493b3":"code","ae0510e1":"code","d194b0e9":"code","db073898":"code","f679183b":"code","a88675c0":"code","d74235bb":"code","d7ce37ca":"code","39974865":"code","5ccf9ee9":"code","7257dd4c":"code","7ce8f8ac":"code","e79bf9f7":"code","9ab180e8":"code","eeeca82a":"code","29290c6b":"code","c2b08632":"code","b3833949":"code","dd8088cd":"code","b7330c04":"code","92a040d8":"code","fe828e04":"code","12fb86c6":"code","5e8efeb5":"markdown","ce85a4e6":"markdown","e081fb7a":"markdown","757c9dc3":"markdown","d98f7772":"markdown","182db61d":"markdown","3d03fc2a":"markdown","845297a4":"markdown"},"source":{"fcba6dd4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nplt.style.use('seaborn-whitegrid')\nimport seaborn as sns\nfrom collections import Counter\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","232eab4b":"plt.style.available","a49f1877":"train_df=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_df=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntest_PassengerId=test_df[\"PassengerId\"]","e5c29e38":"train_df.columns","3ef26b20":"train_df.head()","09d1eb51":"train_df.describe()","bf7bd73a":"train_df.info()","6956270c":"def bar_plot(variable):\n    #get feature\n    var =train_df[variable]\n    #count number of catogerical variable(value\/sample)\n    varValue =var.value_counts()\n    #visualize\n    plt.figure(figsize=(9,3))\n    plt.bar(varValue.index,varValue)\n    plt.xticks(varValue.index,varValue.index.values)\n    plt.ylabel(\"Frequency\/Miktar\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}\".format(variable,varValue))","fb6493b3":"catogery1=[\"Survived\",\"Sex\",\"Pclass\",\"Embarked\",\"SibSp\",\"Parch\"]\nfor c in catogery1:\n    bar_plot(c)","ae0510e1":"category2=[\"Cabin\",\"Name\",\"Ticket\"]\nfor c in category2:\n    print(\"{} \\n \".format(train_df[c].value_counts()))","d194b0e9":"def plot_hist(variable):\n    plt.figure(figsize=(9,3))\n    plt.hist(train_df[variable],bins=70)\n    plt.xlabel(variable)\n    plt.ylabel(\"Fre\")\n    plt.title(\"{} distriubt\u0131on with hist\".format(variable))\n    plt.show()","db073898":"numericVar=[\"Fare\",\"Age\",\"PassengerId\"]\nfor n in numericVar:\n    plot_hist(n)","f679183b":"#plcass vs surv\u0131ved\ntrain_df[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"],as_index=False).mean().sort_values(by=\"Survived\",ascending=False)\n\n","a88675c0":"train_df[[\"Pclass\",\"Survived\"]]","d74235bb":"train_df[[\"SibSp\",\"Survived\"]].groupby([\"SibSp\"], as_index=False).mean().sort_values(by=\"Survived\",ascending=True)","d7ce37ca":"train_df[[\"Parch\",\"Survived\"]].groupby([\"Parch\"], as_index=False).mean().sort_values(by=\"Survived\",ascending=False)","39974865":"train_df[[\"Sex\",\"Pclass\"]].groupby([\"Sex\"], as_index=False).mean().sort_values(by=\"Sex\",ascending=False)","5ccf9ee9":"def detect_outliers(df,features):\n    outlier_indices = []\n    \n    for c in features:\n        # 1st quartile\n        Q1 = np.percentile(df[c],25)\n        # 3rd quartile\n        Q3 = np.percentile(df[c],75)\n        # IQR\n        IQR = Q3 - Q1\n        # Outlier step\n        outlier_step = IQR * 1.5\n        # detect outlier and their indeces\n        outlier_list_col = df[(df[c] < Q1 - outlier_step) | (df[c] > Q3 + outlier_step)].index\n        # store indeces\n        outlier_indices.extend(outlier_list_col)\n    \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i, v in outlier_indices.items() if v > 2)\n    \n    return multiple_outliers\n        #1 st qua 3rd qua \u0131qr outl\u0131er step decet outl\u0131er and delet","7257dd4c":"train_df.loc[detect_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"])]","7ce8f8ac":"train_df = train_df.drop(detect_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"]),axis = 0).reset_index(drop = True)","e79bf9f7":"train_df.head()","9ab180e8":"#test and tra\u0131n\ntrain_df_len=len(train_df)\ntrain_df=pd.concat([train_df,test_df],axis=0).reset_index(drop=True)","eeeca82a":"train_df.columns[train_df.isnull().any()]","29290c6b":"train_df.isnull().sum()","c2b08632":"train_df[train_df[\"Embarked\"].isnull()]","b3833949":"train_df.boxplot(column=\"Fare\",by=\"Embarked\")\nplt.show()","dd8088cd":"train_df[\"Embarked\"]=train_df[\"Embarked\"].fillna(\"C\")","b7330c04":"train_df.isnull().sum()","92a040d8":"train_df[train_df[\"Fare\"].isnull()]","fe828e04":"train_df[\"Fare\"]= train_df[\"Fare\"].fillna(np.mean(train_df[train_df[\"Pclass\"]==3] [\"Fare\"]))","12fb86c6":"train_df[train_df[\"Fare\"].isnull()]","5e8efeb5":"Numerical Variable","ce85a4e6":"#Intorduct\u0131on\n1-Notorious sh\u0131p break\n2-In 1912\n3-Kill1502\/**\/Top 2224\n\n<font color =\"red\">\n\nContent:\n    \n1.[Load and Check Data](#1)\n2.[Variable Description](#2)\n    *[Univariate Variable Analysis](#3)\n     *[Catogerial Variable Analysis](#4)\n        *[Numerical Variable Analysis](#5)\n    ","e081fb7a":"<a id=\"1\"><\/a>br>\n\n1.Load and Check Data","757c9dc3":"Categorical Variable","d98f7772":"Outlier Detect\u0131on\n","182db61d":"<a id=\"2\"><\/a>br>\n#Variable Description\nIndex(['PassengerId', 'Survived', 'Pclass', 'Name', 'Sex', 'Age', 'SibSp',\n       'Parch', 'Ticket', 'Fare', 'Cabin', 'Embarked'],\n      dtype='object')","3d03fc2a":"Temel Veri analizi\nPclass-Survived\nSex-Surv\u0131ved\nSibSp-Survived\nParch-Survived","845297a4":"M\u0131sss\u0131ng Values\n"}}