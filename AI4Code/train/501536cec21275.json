{"cell_type":{"e5f3966f":"code","4c9df4bb":"code","0a52d486":"code","75685e0b":"code","2c5aa997":"code","47eeb694":"code","1c94c725":"code","34420cb1":"code","d25508be":"code","4717d3a5":"code","31c7377a":"code","145f44c3":"code","0f98b058":"code","44cbb9dc":"code","c3d878b1":"code","abc74541":"code","d7ac16ce":"code","678444da":"code","2492df83":"code","1cef44b7":"code","06d082ed":"code","90b3a4d3":"code","944ebec5":"code","93499f6b":"code","14deb871":"code","317259de":"code","c5d4e5c5":"code","5ba7fecd":"code","fcedaf38":"code","4f120a49":"code","dd3b575d":"code","660e0fc8":"code","1a883bb6":"code","96bc8705":"code","65d630d8":"code","6f6b0597":"code","691d00ea":"code","32578ab6":"code","96ee8c2b":"code","2c114782":"code","1659e194":"code","13874f0f":"markdown","ade27d66":"markdown","246fe7c0":"markdown","b71865b2":"markdown","5ee94166":"markdown","9bdf1bbf":"markdown","9c1edef0":"markdown","37fefc9b":"markdown","54ce813d":"markdown","8e932563":"markdown","1d8bac33":"markdown","ef363656":"markdown","d53ac74d":"markdown","ee5e0a99":"markdown","e94c7cdf":"markdown","0b0c521f":"markdown","573c9a35":"markdown","6adaa4a7":"markdown","dd456eae":"markdown","bb005e27":"markdown","cfcb0e8c":"markdown","67db1532":"markdown","2412b87a":"markdown","69f7cd94":"markdown","0fbfae7a":"markdown","91c98dfe":"markdown","d256b680":"markdown","5e365fe3":"markdown","9074c9e5":"markdown","32d76858":"markdown","ecb033d9":"markdown","59eec4c2":"markdown","d0836f60":"markdown","881483cd":"markdown","8102aac1":"markdown","ef385cf4":"markdown","bdfb65a5":"markdown","45694285":"markdown","263bac66":"markdown"},"source":{"e5f3966f":"# import library\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\n\nfrom sklearn.impute import SimpleImputer # \uacb0\uce21\uce58 \ub300\uccb4\ub97c \uc704\ud55c \ub77c\uc774\ube0c\ub7ec\ub9ac\nfrom sklearn.preprocessing import PolynomialFeatures # \uad50\ud638\uc791\uc6a9 \ubcc0\uc218 \uc0dd\uc131 (\uc911\uc694\ud55c \ubcc0\uc218\ub07c\ub9ac\uc758 \uacf1)\nfrom sklearn.preprocessing import StandardScaler\n\nfrom sklearn.feature_selection import VarianceThreshold # FeatureSelection\uc5d0\uc11c \ubd84\uc0b0\uc774 \uae30\uc900\uce58\ubcf4\ub2e4 \ub0ae\uc740 feature\ub294 \ud0c8\ub77d\nfrom sklearn.feature_selection import SelectFromModel # Feature Importance\ub97c \uc81c\uacf5\ud558\ub294 \ubaa8\ub378\uc758 importance\ub97c \ud65c\uc6a9\ud558\uc5ec \ubcc0\uc218\uc120\ud0dd\n\nfrom sklearn.utils import shuffle\nfrom sklearn.ensemble import RandomForestClassifier\n\nwarnings.filterwarnings(\"ignore\")\npd.set_option(\"display.max_columns\", 100)","4c9df4bb":"# porto \ub300\ud68c\uac00 \uc6cc\ub099 \uc61b\ub0a0 \ub300\ud68c\uc774\ub2e4\ubcf4\ub2c8 \uadf8 \uc0ac\uc774\uc5d0 \uce90\uae00 \uc778\ud130\ud398\uc774\uc2a4\ub098 \ub370\uc774\ud130 \uacbd\ub85c\ub4e4\uc774 \ubcc0\uacbd\ub418\uc5c8\uc74c\n# \ubaa8\ub4e0 \ub300\ud68c\ub4e4\uc774 \ud558\uc704 \ud3f4\ub354\uac00 \ud558\ub098 \ud639\uc740 \uba87\uac1c\uc529 \ub354 \uc0dd\uacbc\uc73c\ubbc0\ub85c path\ub97c \uc9c0\uc815\ud574\uc8fc\ub294 \uac83\uc774 \ud3b8\ud568\n\ndata_path = \"..\/input\/porto-seguro-safe-driver-prediction\/\"\n\ndf_train = pd.read_csv(data_path+\"train.csv\")\ndf_test = pd.read_csv(data_path+\"test.csv\")","0a52d486":"df_train.head()","75685e0b":"df_test.head()","2c5aa997":"# \ub370\uc774\ud130\uc758 \ud589\uacfc \uc5f4\uc744 \ud655\uc778\ud574\ubcf8\ub2e4.\n# \ud0c0\uac9f\uacfc id\ub97c \uc81c\uc678\ud55c 58\uac1c\uc758 feature\uac00 \uc874\uc7ac\ud55c\ub2e4.\n# \ud2b9\uc774\ud55c \uc810\uc740 train set\uc774 test set\ubcf4\ub2e4 \uc801\ub2e4.\n\nprint(df_train.shape)\nprint(df_test.shape)","47eeb694":"df_train.isnull().sum()","1c94c725":"import missingno as msno # \uacb0\uce21\uce58 \uc2dc\uac01\ud654 \ub77c\uc774\ube0c\ub7ec\ub9ac\n\nmsno.matrix(df=df_train.iloc[:,:40], figsize=(14, 10))","34420cb1":"df_train.info()","d25508be":"# append\ub97c \uc704\ud574 \ube48 \ub9ac\uc2a4\ud2b8\ub97c \ub9cc\ub4e4\uc5b4\uc8fc\uc5c8\uc74c\ndata = []\n\nfor f in df_train.columns:\n    # \ub370\uc774\ud130\uc758 \uc5ed\ud560\uc744 \uc9c0\uc815 (\ub3c5\ub9bd\ubcc0\uc218, \uc885\uc18d\ubcc0\uc218, id (PM))\n    if f == 'target':\n        role = 'target'\n    elif f == 'id':\n        role = 'id'\n    else:\n        role = 'input'\n         \n    # \ub370\uc774\ud130\uc758 \ub808\ubca8\uc744 \uc9c0\uc815 (\uba85\ubaa9\ubcc0\uc218, \uac04\uaca9\ubcc0\uc218, \uc21c\uc11c\ubcc0\uc218\ub4f1\uc744 \ub808\ubca8\uc774\ub77c\uace0 \ud45c\ud604\ud55c \ub4ef)\n    if 'bin' in f or f == 'target':\n        level = 'binary'\n    elif 'cat' in f or f == 'id':\n        level = 'nominal'\n    elif df_train[f].dtype == float:\n        level = 'interval'\n    elif df_train[f].dtype == int:\n        level = 'ordinal'\n        \n    # id\ub294 False\ub85c \uc9c0\uc815\ud574\uc8fc\uc5b4 \ubc84\ub9ac\uae30\ub85c \ud558\uace0, \ub098\uba38\uc9c0\ub294 True\ub85c \uac00\uc838\uac10\n    keep = True\n    if f == 'id':\n        keep = False\n    \n    # \ub370\uc774\ud130\uc758 \ud0c0\uc785 \uc9c0\uc815\n    dtype = df_train[f].dtype\n    \n    # DataFrame\uc73c\ub85c \ub9cc\ub4e4\uae30 \uc704\ud574 \ub9ac\uc2a4\ud2b8\uc5d0 append\ud558\uae30 \uc804\uc5d0 \ub515\uc154\ub108\ub9ac \ud0c0\uc785\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc8fc\uc5c8\uc74c\n    f_dict = {\n        'varname': f,\n        'role': role,\n        'level': level,\n        'keep': keep,\n        'dtype': dtype\n    }\n    data.append(f_dict)\n\n# \ubcc0\uc218\uc758 \uc774\ub984\uc744 \uc778\ub371\uc2a4\ub85c \ud558\ub294 \ub370\uc774\ud130\ud504\ub808\uc784\uc744 \ub9cc\ub4e4\uc5b4\uc90c     \nmeta = pd.DataFrame(data, columns = [\"varname\", \"role\", \"level\", \"keep\", \"dtype\"])\nmeta.set_index(\"varname\", inplace = True)","4717d3a5":"meta","31c7377a":"# ex1\n\nmeta[(meta[\"level\"] == \"nominal\") & (meta[\"keep\"])].index","145f44c3":"# ex2\n\nmeta.groupby([\"role\", \"level\"])[\"role\"].size()","0f98b058":"Interval = meta[(meta[\"level\"] == \"interval\") & (meta[\"keep\"])].index","44cbb9dc":"# describe\ub97c \ud1b5\ud574 interval \ubcc0\uc218\ub4e4\uc758 \ud1b5\uacc4\ub7c9\uc744 \ud655\uc778 \n\ndf_train[Interval].describe()","c3d878b1":"Ordinal = meta[(meta[\"level\"] == \"ordinal\") & (meta[\"keep\"])].index","abc74541":"# describe\ub97c \ud1b5\ud574 Ordinal \ubcc0\uc218\ub4e4\uc758 \ud1b5\uacc4\ub7c9\uc744 \ud655\uc778 \n\ndf_train[Ordinal].describe()","d7ac16ce":"Binary = meta[(meta[\"level\"] == 'binary') & (meta[\"keep\"])].index","678444da":"# describe\ub97c \ud1b5\ud574 Ordinal \ubcc0\uc218\ub4e4\uc758 \ud1b5\uacc4\ub7c9\uc744 \ud655\uc778 \n\ndf_train[Binary].describe()","2492df83":"f, ax = plt.subplots(figsize = (8,8))\n\ndf_train['target'].value_counts().plot.pie(explode = [0, 0.1], autopct = '%1.1f%%', \n                                               shadow = True, colors = ['lightcoral', 'lightskyblue'],\n                                              textprops={'fontsize': 18})\nplt.title(\"Target PiePlot\", size = 20)\n\n# \ubd88\uade0\ud615\uc774 \uad49\uc7a5\ud788 \uc2ec\ud558\ub2e4.","1cef44b7":"# \uc5b8\ub354\uc0d8\ud50c\ub9c1 \ube44\uc728\uc744 \uc9c0\uc815\ud574\uc8fc\uae30 \uc704\ud568 \ndesired_apriori=0.10\n\n# target \ubcc0\uc218\uc758 \ud074\ub798\uc2a4\uc5d0 \ub530\ub978 \uc778\ub371\uc2a4 \uc9c0\uc815 \nidx_0 = df_train[df_train[\"target\"] == 0].index\nidx_1 = df_train[df_train[\"target\"] == 1].index\n\n# \uc9c0\uc815\ud574\uc900 \uc778\ub371\uc2a4\ub85c \ud074\ub798\uc2a4\uc758 \uae38\uc774(\ub808\ucf54\ub4dc \uc218) \uc9c0\uc815\nnb_0 = len(df_train.loc[idx_0])\nnb_1 = len(df_train.loc[idx_1])\n\n# \uc5b8\ub354\uc0d8\ud50c\ub9c1 \uc218\ud589\nundersampling_rate = ((1-desired_apriori)*nb_1)\/(nb_0*desired_apriori)\nundersampled_nb_0 = int(undersampling_rate*nb_0)\nprint('target=0\uc5d0 \ub300\ud55c \uc5b8\ub354\uc0d8\ud50c\ub9c1 \ube44\uc728: {}'.format(undersampling_rate))\nprint('\uc5b8\ub354\uc0d8\ud50c\ub9c1 \uc804 target=0 \ub808\ucf54\ub4dc\uc758 \uac1c\uc218: {}'.format(nb_0))\nprint('\uc5b8\ub354\uc0d8\ud50c\ub9c1 \ud6c4 target=0 \ub808\ucf54\ub4dc\uc758 \uac1c\uc218: {}'.format(undersampled_nb_0))\n\n# \uc5b8\ub354\uc0d8\ud50c\ub9c1 \ube44\uc728\uc774 \uc801\uc6a9\ub41c \uac1c\uc218 \ub9cc\ud07c \ub79c\ub364\ud558\uac8c \uc0d8\ud50c\uc744 \ubf51\uc544\uc11c \uadf8 \uc778\ub371\uc2a4\ub97c \uc800\uc7a5\nundersampled_idx = shuffle(idx_0, random_state=37, n_samples=undersampled_nb_0)\n\n# \uc5b8\ub354\uc0d8\ud50c\ub9c1 \uc778\ub371\uc2a4\uc640 \ud074\ub798\uc2a4 1\uc758 \uc778\ub371\uc2a4\ub97c \ub9ac\uc2a4\ud2b8\ub85c \uc800\uc7a5\nidx_list = list(undersampled_idx) + list(idx_1)\n\n# \uc800\uc7a5\ud55c \uc778\ub371\uc2a4\ub85c train set \uc778\ub371\uc2f1\ndf_train = df_train.loc[idx_list].reset_index(drop=True)","06d082ed":"# \uc2e4\uc2b5\uc744 \uc704\ud574 \ubd88\uade0\ud615 \ub370\uc774\ud130 \ub79c\ub364\uc73c\ub85c \uc0dd\uc131 \n\nimport scipy as sp\n\nn0 = 200; n1 = 20\nrv1 = sp.stats.multivariate_normal([-1, 0], [[1, 0], [0, 1]])\nrv2 = sp.stats.multivariate_normal([+1, 0], [[1, 0], [0, 1]])\nX0 = rv1.rvs(n0, random_state=0)\nX1 = rv2.rvs(n1, random_state=0)\nX_imb = np.vstack([X0, X1])\ny_imb = np.hstack([np.zeros(n0), np.ones(n1)])\nX_train = pd.DataFrame(data = X_imb, columns = [\"X0\", \"X1\"])\ny_train = pd.DataFrame(data = y_imb, columns = [\"target\"])\n\n#-------------------------------------------------------------------------------------------------------------\n# 1) RandomUnderSampler\n\nfrom imblearn.under_sampling import RandomUnderSampler\nUndersampled_train, Undersampled_target = RandomUnderSampler(random_state=0).fit_sample(X_train, y_train)\n\nnb_0 = len(y_train[y_train[\"target\"] == 0.0].index)\nundersampled_nb_0 = len(Undersampled_target[Undersampled_target[\"target\"] == 0.0].index)\n\nprint('RandomUnderSampler \uc804 target=0 \ub808\ucf54\ub4dc\uc758 \uac1c\uc218: {}'.format(nb_0))\nprint('RandomUnderSampler \ud6c4 target=0 \ub808\ucf54\ub4dc\uc758 \uac1c\uc218: {}'.format(undersampled_nb_0))\n\n#-------------------------------------------------------------------------------------------------------------\n# 2) TomekLinks\n\nfrom imblearn.under_sampling import TomekLinks\nUndersampled_train, Undersampled_target = TomekLinks().fit_sample(X_train, y_train)","90b3a4d3":"vars_with_missing = []\n\n# \ubaa8\ub4e0 \uceec\ub7fc\uc5d0 -1\uc774\ub77c\ub294 \uac12\uc774 1\uac1c \uc774\uc0c1 \uc788\ub294 \uac83\uc744 \ud655\uc778\ud558\uc5ec \ucd9c\ub825\n# \uc5b4\ub290 \ubcc0\uc218\uc5d0 \uba87\uac1c\uc758 \ub808\ucf54\ub4dc\uac00 \uc788\ub294\uc9c0, \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub418\ub294\uc9c0 \uae4c\uc9c0 \ud655\uc778\ud558\uc5ec \uae54\ub054\ud558\uac8c \ucd9c\ub825\ub41c\ub2e4.\n\nfor f in df_train.columns:\n    missings = df_train[df_train[f] == -1][f].count()\n    if missings > 0:\n        vars_with_missing.append(f)\n        missings_perc = missings\/df_train.shape[0]\n        \n        print('Variable {}\\t has {:>10} records\\t ({:.2%})\\t with missing values'.format(f, missings, missings_perc))\nprint()        \nprint('In total, there are {} variables with missing values'.format(len(vars_with_missing)))","944ebec5":"# \uacb0\uce21\uce58\uac00 \ub108\ubb34 \ub9ce\uc558\ub358 \ubcc0\uc218\ub4e4 \uc81c\uac70 \nvars_to_drop = ['ps_car_03_cat', 'ps_car_05_cat']\ndf_train.drop(vars_to_drop, inplace=True, axis=1)\n\n# \ub9cc\ub4e4\uc5b4\uc8fc\uc5c8\ub358 \uba54\ud0c0\ub370\uc774\ud130 \uc5c5\ub370\uc774\ud2b8 (\ubc84\ub9b0 \ubcc0\uc218\ub97c keep = True\uc5d0\uc11c False\ub85c)\nmeta.loc[(vars_to_drop),'keep'] = False  \n\n# \uadf8 \uc678\uc758 \uacb0\uce21\uce58\ub97c \ud3c9\uade0\uacfc \ucd5c\ube48\uac12\uc73c\ub85c \ub300\uccb4\n# SimpleImputer\ub97c \uc0ac\uc6a9 (\ucee4\ub110\uc5d0\uc11c\ub294 \uadf8\ub0e5 Imputer\ub97c \uc0ac\uc6a9\ud558\ub294\ub370 \uc5c5\ub370\uc774\ud2b8 \ud6c4 \uc774\ub984\uc774 \ubc14\ub010\ub4ef)\nmean_imp = SimpleImputer(missing_values=-1, strategy='mean')\nmode_imp = SimpleImputer(missing_values=-1, strategy='most_frequent')\ndf_train['ps_reg_03'] = mean_imp.fit_transform(df_train[['ps_reg_03']])\ndf_train['ps_car_12'] = mean_imp.fit_transform(df_train[['ps_car_12']])\ndf_train['ps_car_14'] = mean_imp.fit_transform(df_train[['ps_car_14']])\ndf_train['ps_car_11'] = mode_imp.fit_transform(df_train[['ps_car_11']])","93499f6b":"# \uc774 \ucee4\ub110\uc5d0\uc11c\ub294 \uc774\ub7f0\uc2dd\uc73c\ub85c \uc720\ub2c8\ud06c\uac12\uc774 \uba87\uac1c\uc788\ub294\uc9c0 \ud655\uc778\ud588\ub2e4.\n\nNominal = meta[(meta[\"level\"] == 'nominal') & (meta[\"keep\"])].index\n\nfor f in Nominal:\n    dist_values = df_train[f].value_counts().shape[0]\n    print('Variable {} has {} distinct values'.format(f, dist_values))","14deb871":"# \uac1c\uc778\uc801\uc778 \uc0dd\uac01\uc73c\ub85c\ub294 \uc774 \ucf54\ub4dc\uc640 \uac19\uc774 nuniuqe()\ub97c \uc0ac\uc6a9\ud558\uba74 \ud6e8\uc52c \uac04\ud3b8\ud558\uc9c0 \uc54a\uc744\uae4c \uc2f6\ub2e4.\n\nNominal = meta[(meta[\"level\"] == 'nominal') & (meta[\"keep\"])].index\n\nfor f in Nominal:\n    print('Variable {} has {} distinct values'.format(f, df_train[f].nunique()))","317259de":"# \uc544\ub798\uc640 \uac19\uc740 \ub370\uc774\ud130\uac00 \uc788\ub2e4\uace0 \uac00\uc815\ud574\ubcf4\uc790\n\nex_list = [(\"\ub0a8\uc790\", 1), (\"\uc5ec\uc790\", 1), (\"\uc5ec\uc790\", 1), (\"\uc5ec\uc790\", 0), (\"\ub0a8\uc790\", 0)]\n\nex = pd.DataFrame(data = ex_list, columns = [\"\uc131\ubcc4\", \"target\"])","c5d4e5c5":"# \uc774\ub7f0 \ubc29\ubc95\uc73c\ub85c \uc778\ucf54\ub529\uc744 \uc218\ud589\ud55c\ub2e4.\n# \uc778\ucf54\ub529\ud560 \ubc94\uc8fc\ud615 \ubcc0\uc218\uc640 target\uc744 groupby\ud574\uc900 \ud6c4 \ud3c9\uade0\uac12\uc744 \ucde8\ud574\uc900\ub2e4.\n\n\uc131\ubcc4_mean = ex.groupby(\"\uc131\ubcc4\")[\"target\"].mean()","5ba7fecd":"# \uadf8\ub807\uac8c \ub418\uba74 \uc544\ub798\uc640 \uac19\uc740 \uac12\uc744 \uc5bb\uc744 \uc218 \uc788\ub2e4.\n# \ub0a8\uc790\uc758 \uacbd\uc6b0 2\uac1c\uc758 \ub370\uc774\ud130\uc5d0\uc11c target\uac12\uc774 1\uacfc0 \uc774\ubbc0\ub85c 0.5\uac00 \ub098\uc624\uace0,\n# \uc5ec\uc790\uc758 \uacbd\uc6b0 3\uac1c\uc758 \ub370\uc774\ud130\uc5d0\uc11c target\uac12\uc774 1\uc774 2\uac1c 0\uc774 1\uac1c\uc774\ubbc0\ub85c 0.6667\uc774 \ub098\uc628\ub2e4.\n# \uc774 \uac12\uc73c\ub85c \ud574\ub2f9 unique\uac12\uc744 \uc778\ucf54\ub529 \ud574\uc900\ub2e4.\n\n\uc131\ubcc4_mean","fcedaf38":"# \ucee4\ub110\uc5d0\uc11c \uad6c\ud604\ud55c mean-encoding \ucf54\ub4dc\n# \ucf54\ub4dc\uac00 \ub9e4\uc6b0 \ubcf5\uc7a1\ud574\ubcf4\uc774\uc9c0\ub9cc \uacb0\uad6d \uc704\uc5d0\uc11c \ubcf4\uc558\ub358 \uc608\uc81c \ubc29\uc2dd\uc744 \uad6c\ud604\ud55c \uac83\uc774\ub2e4.\n# \uc624\ubc84\ud53c\ud305 \ubc29\uc9c0\ub97c \uc704\ud574 noise\ub97c \ucd94\uac00\ud558\uace0, smoothing\uc744 \uc801\uc6a9\ud558\uae30 \ub54c\ubb38\uc5d0 \ucf54\ub4dc\uac00 \ubcf5\uc7a1\ud574\ubcf4\uc778\ub2e4.\n# smoothing\uc744 \ud1b5\ud574 \ud3c9\uade0\uac12\uc774 \uce58\uc6b0\uce5c \uc0c1\ud669\uc744 \uc870\uae08\uc774\ub098\ub9c8 \ubcf4\uc644\ud574\uc900\ub2e4. (\uc804\uccb4 \ud3c9\uade0\uac12\uc73c\ub85c \uac00\uae5d\uac8c)\n# smoothing\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc774\ub860\uc740 \uc704\uc758 \uc124\uba85\uc5d0 \uc788\ub294 \ucd9c\ucc98 \ub9c1\ud06c\uc5d0\uc11c \ud655\uc778! \n\n\n# \uc624\ubc84\ud53c\ud305 \ubc29\uc9c0\ub97c \uc704\ud574 \uc57d\uac04\uc758 noise\ub97c \ucd94\uac00\ud55c\ub2e4\uace0 \ud55c\ub2e4.\ndef add_noise(series, noise_level):\n    return series * (1 + noise_level * np.random.randn(len(series)))\n\ndef target_encode(trn_series=None, \n                  tst_series=None, \n                  target=None, \n                  min_samples_leaf=1, \n                  smoothing=1,\n                  noise_level=0):\n    assert len(trn_series) == len(target)\n    assert trn_series.name == tst_series.name\n    temp = pd.concat([trn_series, target], axis=1)\n    # agg\ub97c \uc0ac\uc6a9\ud574\uc11c \ud3c9\uade0\uac12\uc744 \uad6c\ud574\uc90c\n    averages = temp.groupby(by=trn_series.name)[target.name].agg([\"mean\", \"count\"])\n    # \uc624\ubc84\ud53c\ud305 \ubc29\uc9c0\ub97c \uc704\ud55c smoothing\n    smoothing = 1 \/ (1 + np.exp(-(averages[\"count\"] - min_samples_leaf) \/ smoothing))\n    prior = target.mean()\n    averages[target.name] = prior * (1 - smoothing) + averages[\"mean\"] * smoothing\n    averages.drop([\"mean\", \"count\"], axis=1, inplace=True)\n    # train, test\uc5d0 \uc801\uc6a9\uc2dc\ucf1c\uc900\ub2e4.\n    ft_trn_series = pd.merge(\n        trn_series.to_frame(trn_series.name),\n        averages.reset_index().rename(columns={'index': target.name, target.name: 'average'}),\n        on=trn_series.name,\n        how='left')['average'].rename(trn_series.name + '_mean').fillna(prior)\n    ft_trn_series.index = trn_series.index \n    ft_tst_series = pd.merge(\n        tst_series.to_frame(tst_series.name),\n        averages.reset_index().rename(columns={'index': target.name, target.name: 'average'}),\n        on=tst_series.name,\n        how='left')['average'].rename(trn_series.name + '_mean').fillna(prior)\n  \n    ft_tst_series.index = tst_series.index\n    return add_noise(ft_trn_series, noise_level), add_noise(ft_tst_series, noise_level)","4f120a49":"# \uc704\uc5d0\uc11c \uad6c\ud604\ud55c \ud568\uc218\ub97c ps_car_11_cat(104\uac1c\uc758 \uc720\ub2c8\ud06c \uac12)\uc5d0 \uc801\uc6a9\uc2dc\ucf1c\uc900\ub2e4.\n# feature\uac00 \ubc14\ub00c\uc5c8\uc73c\ubbc0\ub85c \uba54\ud0c0\ub370\uc774\ud130\ub97c \uc5c5\ub370\uc774\ud2b8 \ud574\uc900\ub2e4.\n\ntrain_encoded, test_encoded = target_encode(df_train[\"ps_car_11_cat\"], \n                             df_test[\"ps_car_11_cat\"], \n                             target=df_train.target, \n                             min_samples_leaf=100,\n                             smoothing=10,\n                             noise_level=0.01)\n    \ndf_train['ps_car_11_cat_te'] = train_encoded\ndf_train.drop('ps_car_11_cat', axis=1, inplace=True)\nmeta.loc['ps_car_11_cat','keep'] = False  \ndf_test['ps_car_11_cat_te'] = test_encoded\ndf_test.drop('ps_car_11_cat', axis=1, inplace=True)","dd3b575d":"Nominal = meta[(meta[\"level\"] == 'nominal') & (meta[\"keep\"])].index\n\n\n# \ubcc0\uc218\ubcc4\ub85c \ubc18\ubcf5\ubb38\uc744 \ub3cc\ub824\uc11c barplot\uc744 \uadf8\ub9b0\ub2e4.\nfor f in Nominal:\n    plt.figure()\n    fig, ax = plt.subplots(figsize=(20,10))\n    ax.grid(axis = \"y\", linestyle='--')\n    # \ubcc0\uc218 \ubcc4 target=1\uc758 \ube44\uc728 \uacc4\uc0b0\n    cat_perc = df_train[[f, 'target']].groupby([f],as_index=False).mean()\n    cat_perc.sort_values(by='target', ascending=False, inplace=True)\n    \n    # \uc704\uc5d0\uc11c \uacc4\uc0b0\ud574\uc900 \ube44\uc728\uc744 \ud1b5\ud574 target = 1\uc758 \ub370\uc774\ud130 \uc911 \uc5b4\ub5a4 \uc720\ub2c8\ud06c\uac12\uc758 \ube44\uc728\uc774 \ub192\uc740\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\ub2e4.\n    sns.barplot(ax=ax, x=f, y='target',palette = \"Pastel1\", edgecolor='black', linewidth=0.8, data=cat_perc, order=cat_perc[f], )\n    plt.ylabel('% target', fontsize=18)\n    plt.xlabel(f, fontsize=18)\n    plt.tick_params(axis='both', which='major', labelsize=18)\n    plt.show();","660e0fc8":"def corr_heatmap(Interval):\n    correlations = df_train[Interval].corr()\n\n    # Create color map ranging between two colors\n    cmap = sns.diverging_palette(220, 10, as_cmap=True)\n\n    fig, ax = plt.subplots(figsize=(10,10))\n    sns.heatmap(correlations, cmap=cmap, vmax=1.0, center=0, fmt='.2f',\n                square=True, linewidths=.5, annot=True, cbar_kws={\"shrink\": .75})\n    plt.show();\n    \nInterval = meta[(meta[\"role\"] == \"target\") | (meta[\"level\"] == 'interval') & (meta[\"keep\"])].index\ncorr_heatmap(Interval)","1a883bb6":"# plot\uc744 \ub9cc\ub4dc\ub294\ub370 \uaf64\ub098 \uae34 \uc2dc\uac04\uc774 \uac78\ub9ac\uae30 \ub54c\ubb38\uc5d0 10%\uc758 sample\ub9cc \ubf51\uc544\uc11c \uc0ac\uc6a9\n\n# s = df_train.sample(frac=0.1)","96bc8705":"sns.lmplot(x='ps_reg_02', y='ps_reg_03', data=df_train, hue='target', palette='Set1', scatter_kws={'alpha':0.3})\nplt.show()","65d630d8":"sns.lmplot(x='ps_car_12', y='ps_car_13', data=df_train, hue='target', palette='Set1', scatter_kws={'alpha':0.3})\nplt.show()","6f6b0597":"sns.lmplot(x='ps_car_12', y='ps_car_14', data=df_train, hue='target', palette='Set1', scatter_kws={'alpha':0.3})\nplt.show()","691d00ea":"sns.lmplot(x='ps_car_15', y='ps_car_13', data=df_train, hue='target', palette='Set1', scatter_kws={'alpha':0.3})\nplt.show()","32578ab6":"Ordinal = meta[(meta[\"role\"] == \"target\") | (meta[\"level\"] == 'ordinal') & (meta[\"keep\"])].index\ncorr_heatmap(Ordinal)","96ee8c2b":"Nominal = meta[(meta[\"level\"] == 'nominal') & (meta[\"keep\"])].index\nprint('One-Hot Encoding \uc804 train \ub370\uc774\ud130 \uc14b \ubcc0\uc218 \uac1c\uc218: {}'.format(df_train.shape[1]))\ndf_train = pd.get_dummies(df_train, columns=Nominal, drop_first=True)\ndf_test = pd.get_dummies(df_test, columns=Nominal, drop_first=True)\nprint('One-Hot Encoding \ud6c4 train \ub370\uc774\ud130 \uc14b \ubcc0\uc218 \uac1c\uc218: {}'.format(df_train.shape[1]))\n\n# 52\uac1c\uc758 \ubcc0\uc218\uac00 \ub298\uc5b4\ub0ac\ub2e4.","2c114782":"Interval = meta[(meta[\"level\"] == 'interval') & (meta[\"keep\"])].index\n\npoly = PolynomialFeatures(degree=2, interaction_only=False, include_bias=False)\ninteractions = pd.DataFrame(data=poly.fit_transform(df_train[Interval]), columns=poly.get_feature_names(Interval))\ninteractions.drop(Interval, axis=1, inplace=True)  # interactions \ub370\uc774\ud130\ud504\ub808\uc784\uc5d0\uc11c \uae30\uc874 \ubcc0\uc218 \uc0ad\uc81c\n\n# \uc0c8\ub85c \ub9cc\ub4e0 \ubcc0\uc218\ub4e4\uc744 \uae30\uc874 \ub370\uc774\ud130\uc5d0 concat \uc2dc\ucf1c\uc90c\nprint('\uad50\ud638\uc791\uc6a9 \ubcc0\uc218 \uc0dd\uc131 \uc804 train \ub370\uc774\ud130 \uc14b \ubcc0\uc218 \uac1c\uc218: {}'.format(df_train.shape[1]))\ndf_train = pd.concat([df_train, interactions], axis=1)\ndf_test = pd.concat([df_test, interactions], axis=1)\nprint('\uad50\ud638\uc791\uc6a9 \ubcc0\uc218 \uc0dd\uc131 \ud6c4 train \ub370\uc774\ud130 \uc14b \ubcc0\uc218 \uac1c\uc218: {}'.format(df_train.shape[1]))","1659e194":"# \ub9cc\ub4e4\uc5b4\uc9c4 feature \ud655\uc778\n\ndf_train.head()","13874f0f":"## \ubc94\uc8fc\ud615 \ubcc0\uc218 \uc2dc\uac01\ud654 \uacb0\uacfc \ud655\uc778\n\n* \uc8fc\uc758\ud574\uc57c\ud560 \uc810: \uc774 \ucee4\ub110\uc5d0\uc11c \uc2dc\uac01\ud654\ud55c barplot\ub9cc \ub193\uace0 \ubcf4\uba74 \uc798\ubabb\ub41c \uc778\uc0ac\uc774\ud2b8\ub97c \uc5bb\uc744 \uc218 \uc788\ub2e4. (\ub2e8\uc21c \ube44\uc728\ub85c\ub9cc \uacc4\uc0b0\ud558\uace0 count \uac12\uc740 \uace0\ub824\ud558\uc9c0 \ubabb\ud558\ubbc0\ub85c, \ud2b9\ud788 \uc704\uc5d0\uc11c \ud655\uc778\ud588\ub4ef\uc774 \uacb0\uce21\uce58\uac00 \ub9ce\uc740 \uac83\uc740 \ub300\uccb4\ud574\uc92c\uc73c\ubbc0\ub85c -1 \uac12\uc758 count\ub294 \uc791\uc740\uac83 \ubc16\uc5d0 \ub0a8\uc9c0 \uc54a\uc558\uc74c) <br>\n* \ucd94\uac00\ub85c \uc0dd\uac01\ud574\ubcf4\uba74 \uc88b\uc744 \uc810: \ubcf4\ud1b5 \ubc94\uc8fc\ud615\ubcc0\uc218\uc758 countplot\uc774\ub098 barplot\uc744 \uadf8\ub9b4\ub54c groupby(hue\ub97c \uc9c0\uc815)\ud558\uc5ec \uc0b4\ud3b4\ubcf4\uba74 \uc5b4\ub5a4 Feature\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc744\uc9c0 \uc0dd\uac01\ud574\ubcfc \uc218 \uc788\uace0, \ub354 \ub2e4\uc591\ud55c \uc778\uc0ac\uc774\ud2b8\ub97c \uc5bb\uc744 \uc218 \uc788\ub2e4.<br>\n                                                                                                                                  \n\n1) ps_ind_02_cat: -1(\uacb0\uce21\uce58)\uc758 \uacbd\uc6b0 target = 1\uc758 \ub370\uc774\ud130\uac00 40%\ub97c \ucc28\uc9c0\ud55c\ub2e4. \ub098\uba38\uc9c0\ub294 10% \uc815\ub3c4\ub85c \ubcf4\uc778\ub2e4.<br>\n                      \uc5ec\uae30\uc11c \uc8fc\uc758\ud574\uc57c\ud560 \uc810\uc740 \ub192\ub2e4\uace0 \uc88b\uc740\uac8c \uc544\ub2c8\ub77c\ub294 \uac83\uc774\ub2e4 (target\uc5d0 \ub300\ud55c \ube44\uc728\uc774\uae30 \ub54c\ubb38\uc5d0 50%\uc5d0 \uac00\uae4c\uc6b8\uc218\ub85d \uc560\ub9e4\ud55c unique \uac12\uc774\ub77c\ub294 \ub73b)<br>\n                      \ucc28\ub77c\ub9ac 10%\ub97c \ubcf4\uc774\ub294 \ub098\uba38\uc9c0 unique \uac12\ub4e4\uc774 \ubcf4\ud5d8 \uccad\uad6c\ub97c \uc548\ud560 \ud655\ub960\uc774 \ub192\ub2e4\ub294 \ub73b\uc774\ubbc0\ub85c \uc624\ud788\ub824 \ud655\uc2e4\ud55c \uc815\ubcf4\ub77c\uace0 \ud560 \uc218 \uc788\ub2e4.<br>\n\n2) ps_ind_04_cat: -1(\uacb0\uce21\uce58)\uac00 65% \uc815\ub3c4\ub85c target = 1\uc758 \uac12\uc744 \uac00\uc9c4\ub2e4. \ubcf4\ud5d8\uc744 \uccad\uad6c\ud560 \ud655\ub960\uc774 \ub192\uc544\ubcf4\uc778\ub2e4.<br>\n\n3) ps_ind_05_cat: unique \uac12 \ub9c8\ub2e4 \ucc28\uc774\uac00 \uc788\uc9c0\ub9cc \ub208\uc5d0 \ub744\ub294 unique \uac12\uc740 \uc5c6\ub2e4.<br>\n\n4) ps_car_01_cat: -1(\uacb0\uce21\uce58)\uac00 \uac70\uc758 50%\uc5d0 \uac00\uae4c\uc6b0\ubbc0\ub85c \uc560\ub9e4\ud558\ub2e4\uace0 \ud560 \uc218 \uc788\ub2e4. \ub098\uba38\uc9c0 \uac12\uc740 \ub2e4 \ubcf4\ud5d8\uc744 \uccad\uad6c\ud558\uc9c0 \uc54a\uc744 \ud655\ub960\uc774 \ub192\uc544\ubcf4\uc778\ub2e4.<br>\n\n5) ps_car_02_cat: -1(\uacb0\uce21\uce58)\uac00 0%\uc774\ub2e4. \ubcf4\ud5d8\uc744 \uc808\ub300 \uccad\uad6c\ud558\uc9c0 \uc54a\uc744 \uac83\uc73c\ub85c \ubcf4\uc778\ub2e4. <br>\n\n6) \uadf8 \uc678: unique \uac12 \ub9c8\ub2e4 \uc5b4\ub290\uc815\ub3c4 \ucc28\uc774\ub4e4\uc744 \ubcf4\uc778\ub2e4.    <br>\n\n\n\uc77c\ub2e8 \ucee4\ub110\uc744 \ub530\ub77c\uac00\ub3c4\ub85d \ud558\uaca0\ub2e4. <br>\n\ucee4\ub110\uc5d0 \ub530\ub974\uba74 \uacb0\uce21\uac12\uc774 \ud2b9\uc774\ud55c \uacbd\uc6b0\uac00 \ub9ce\uc73c\ubbc0\ub85c \ub300\uccb4\ud558\uae30 \ubcf4\ub2e4 \uadf8\ub0e5 \ub450\ub294\uac8c \ub098\uc744\uac83 \uac19\ub2e4\uace0 \ud310\ub2e8\ud558\uc600\ub2e4. <br>","ade27d66":"# Data Check","246fe7c0":"# \uc0c1\uc704\ucee4\ub110 Discussion\n\n- \uce90\uae00\uc758 \uacbd\uc6b0 \uae08\uba54\ub2ec \ucee4\ub110\uc740 \ub9ac\ubdf0\ud558\ub294 \uac83\ub3c4 \uad49\uc7a5\ud788 \ub3c4\uc6c0\uc774 \ub9ce\uc774 \ub418\uc9c0\ub9cc, \uc815\ub9d0 \uc54c\uc9dc \uc815\ubcf4\ub4e4\uc740 Discussion\uc5d0 \ub9ce\uc774 \ubab0\ub824\uc788\ub2e4.\n- \ub2f9\uc5f0\ud788 \ub300\ud68c\uac00 \ub05d\ub098\uae30 \uc804\uc5d0\ub294 Solution\uc774 \uc62c\ub77c\uc624\uc9c0\ub294 \uc54a\uc9c0\ub9cc, Discussion\uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\ub294 \uc791\uc740 \uc778\uc0ac\uc774\ud2b8\ub4e4\uc774 \ud070 \ub3c4\uc6c0\uc774 \ub418\ub294 \uacbd\uc6b0\uac00 \ub9ce\ub2e4.\n","b71865b2":"### \ubc94\uc8fc\ud615 \ubcc0\uc218\uc758 \uc720\ub2c8\ud06c\uac12 \ud655\uc778\n\n - \uc774 \ub300\ud68c\ub294 \ubc94\uc8fc\ud615 \ubcc0\uc218\uac00 \uc804\ubd80 \uc22b\uc790\ub85c \ub9e4\ud551\ub418\uc5b4\uc788\ub2e4.\n - \ubc94\uc8fc\ud615 \ubcc0\uc218\uc758 \uc720\ub2c8\ud06c \uac12\uacfc \uba87\uac1c\uc758 \uc720\ub2c8\ud06c \uac12\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud574\ubcf8\ub2e4.","5ee94166":"# Porto Seguro EDA \uae08\uba54\ub2ec \ucee4\ub110 \ub9ac\ubdf0 (\ud55c\uae00\ucee4\ub110)","9bdf1bbf":"### ps_car_13 & ps_car_15","9c1edef0":"## Metadata\n\n### \uae08\uba54\ub2ec \uc0c1\uc704 \ucee4\ub110\uc778 'Data Prepraration&Exploration'\uc740 \uc544\ub798\uc640 \uac19\uc740 \ubc29\ubc95\uc73c\ub85c \ub370\uc774\ud130\ub97c \uc815\ub9ac\ud574\ub450\uc5c8\ub2e4.\n\n### FE, Visualization\uc5d0\uc11c \ud3b8\ud558\uac8c \ub370\uc774\ud130\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uafc0\ud301\uc778\ub4ef\n\n- \ub370\uc774\ud130\uc758 \uc5ed\ud560: input, ID, target\n- \ub370\uc774\ud130\uc758 \ub808\ubca8: nominal, interval, ordinal, binary\n- \ubc84\ub9b4\uc9c0 \uc548\ubc84\ub9b4\uc9c0: True or False (\uc544\ub798\uc758 \uacbd\uc6b0\ub294 id \ubcc0\uc218\ub9cc \ubc84\ub9ac\uace0 \ub098\uba38\uc9c0\ub294 \uac00\uc838\uac10)\n- \ub370\uc774\ud130\uc758 \ud0c0\uc785: int, float, str","37fefc9b":"- PolynomialFeatures \uc0ac\uc6a9 \n- \uc785\ub825\uac12 x\ub97c \ub2e4\ud56d\uc2dd\uc73c\ub85c \ubcc0\ud658 (x >> [1, x, x^2, x^3...])\n- \uc5f4\uc758 \uac1c\uc218\uac00 2\uac1c\ub77c\uba74 (x1, x2 >> [1, x1, x2, x1^2, x2^2, x1x2])\n- poly.get_feature_names\ub97c \ud1b5\ud574 \ud3b8\ud558\uac8c feature\uc758 \uc774\ub984\uc744 \uc9c0\uc815\ud574\uc904 \uc218 \uc788\ub2e4.\n\n### Parameter\n1. degree: \ucc28\uc218\n2. interaction_only: \uc0c1\ud638\uc791\uc6a9 \ud56d\ub9cc \ucd9c\ub825 (x1, x2\uc77c \ub54c \uc790\uc2e0\uc758 \uc81c\uacf1\ud56d\uc740 \ubb34\uc2dc\ud558\uace0 x1x2 \ub9cc \ucd9c\ub825)\n3. include_bias: \uc0c1\uc218\ud56d \uc0dd\uc131 \uc5ec\ubd80","54ce813d":"### \uc704\uc758 \ubc29\ubc95\uc774 \ub108\ubb34 \ubcf5\uc7a1\ud558\ub2e4\uba74 \uc774\ubbf8 \uc788\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\ub2e4.","8e932563":"### Imbalanced Class \ucc98\ub9ac\n\n- \ubcf4\ud5d8\uc774\ub77c\ub294 \ub3c4\uba54\uc778 \ud2b9\uc131\uc0c1 \ubd88\uade0\ud615\uc801\uc778 \ud0c0\uac9f\uac12\uc740 \uc0ac\uc2e4 \uc77c\ubc18\uc801\uc774\ub2e4.\n- \ubcf4\ud5d8\uc744 \uccad\uad6c\ud558\ub294 \uacbd\uc6b0 (1) \ubcf4\ub2e4 \ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0 (0)\uc774 \uad49\uc7a5\ud788 \ub9ce\uc740 \uac83\uc744 \uc704\uc5d0\uc11c \ud655\uc778\ud558\uc600\ub2e4.\n- Imbalanced\ud55c \ub370\uc774\ud130\ub294 \uc77c\ubc18\uc801\uc73c\ub85c Undersampling \ud639\uc740 Oversampling\uc73c\ub85c \ucc98\ub9ac\ud55c\ub2e4.\n- UnderSampling: 0\uc774 1\ubcf4\ub2e4 \ud6e8\uc52c \ub9ce\uc73c\ubbc0\ub85c 0\uc778 \ub370\uc774\ud130\ub97c \uc904\uc5ec \uade0\ud615\uc744 \ub9de\ucdb0\uc900\ub2e4.\n- OverSampling: 0\uc774 1\ubcf4\ub2e4 \ud6e8\uc52c \ub9ce\uc73c\ubbc0\ub85c 1\uc778 \ub370\uc774\ud130\ub97c \ub298\ub824 \uade0\ud615\uc744 \ub9de\ucdb0\uc900\ub2e4.\n- \uc120\ud0dd\ubc29\ubc95: \ubcf8\uc778\uc758 \uacb0\uc815\uc774\uc9c0\ub9cc \ubcf4\ud1b5 \ub370\uc774\ud130\uc14b\uc758 \ud06c\uae30\ub97c \uae30\uc900\uc73c\ub85c \uc120\ud0dd\ud55c\ub2e4. <br>\n  \ub370\uc774\ud130\uac00 \ub108\ubb34 \ub9ce\uc73c\uba74, \uc624\ubc84\uc0d8\ud50c\ub9c1 \uc2dc \ub108\ubb34 \ub9ce\uc740 Cost\uac00 \ub4e4\uc5b4\uac00\uac8c \ub41c\ub2e4(\uc2dc\uac04, \ucef4\ud4e8\ud305\ud30c\uc6cc) <br>\n  \uc774 \ucee4\ub110\uc740 \ub370\uc774\ud130\uac00 \ub9ce\uc740\ud3b8\uc774\ub77c\uace0 \ud310\ub2e8\ud558\uc5ec \uc5b8\ub354\uc0d8\ud50c\ub9c1\uc744 \uc218\ud589\ud558\uc600\ub2e4.\n  \n**\ucee4\ub110\uc744 \ub5a0\ub098\uc11c \ubd88\uade0\ud615 \ubc29\ubc95\uc744 \ud574\uc18c\ud558\ub294 \ubc29\ubc95\uc740 \uc644\ubcbd\uac00\uc774\ub4dc \ucc45\uc5d0 \ub098\uc654\ub358 SMOTE\ub780 \ubc29\ubc95\uc774 \uc788\ub2e4. (\uc624\ubc84\uc0d8\ud50c\ub9c1\uc5d0 \ud574\ub2f9)** <br>\n\ucc38\uace0: https:\/\/datascienceschool.net\/view-notebook\/c1a8dad913f74811ae8eef5d3bedc0c3\/ <br>\n**\ucd94\uac00\ub85c Class_weights\ub77c\ub294 \ubc29\ubc95\ub3c4 \uc874\uc7ac\ud55c\ub2e4. (\ubd88\uade0\ud615 class\uc758 \uac00\uc911\uce58\ub97c \uc870\uc815)** <br>\n\ucc38\uace0: https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.utils.class_weight.compute_class_weight.html <br>\n**\uc131\ub2a5\uc744 \ud655\uc778\ud558\uace0 \uc5b4\ub5a4 \ubc29\ubc95\uc73c\ub85c \ubd88\uade0\ud615\uc744 \ud574\uc18c\ud560\uc9c0 \ud310\ub2e8\ud558\uba74 \ub41c\ub2e4.** ","1d8bac33":"### \ubc94\uc8fc\ud615 \ubcc0\uc218 \uc778\ucf54\ub529\n\n- \ubc94\uc8fc\ud615 \ubcc0\uc218\ub97c \uc778\ucf54\ub529\ud558\ub294 \ubc29\ubc95\uc5d0\uc11c \uc77c\ubc18\uc801\uc73c\ub85c one-hot-encoding, Label-encoding \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud55c\ub2e4. \n- \ub450 \uac00\uc9c0 \ubc29\ubc95\uc774 \uc5b4\ub5bb\uac8c \uc774\ub8e8\uc5b4\uc9c0\ub294\uc9c0\ub294 \ub2e4\ub4e4 \uc54c\uac70\ub77c \uc0dd\uac01\ud558\uace0 \uc0dd\ub7b5\ud55c\ub2e4.\n- one-hot-encoding\uc740 \ubcc0\uc218\uc5d0 \uc21c\uc11c(\ub192\uace0 \ub0ae\uc74c)\uc774 \ubd80\uc5ec\ub418\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 target\uc744 \uc608\uce21\ud558\ub294\ub370 \uc601\ud5a5\uc744 \uc8fc\uc9c4 \uc54a\uc9c0\ub9cc unique\uac12\uc774 \ub9ce\uc744 \uacbd\uc6b0 \uad49\uc7a5\ud788 sparse\ud55c \ubca1\ud130\uac00 \uc0dd\uc131\ub418\uace0, \ub610\ud55c faeture\ub3c4 \uae30\ud558\uae09\uc218\uc801\uc73c\ub85c \ub298\uc5b4\ub098\uae30 \ub54c\ubb38\uc5d0 cost\uac00 \ub298\uc5b4\ub098\uace0 \ucc28\uc6d0\uc758 \uc800\uc8fc\uc5d0 \ube60\uc9c8 \ud655\ub960\uc774 \ub192\uc544\uc9c4\ub2e4. \n- Label-encoding\uc758 \uacbd\uc6b0 feature\uac00 \uc720\uc9c0\ub418\uae30 \ub54c\ubb38\uc5d0 cost\uac00 \uc801\uace0 \ucc28\uc6d0\uc744 \uc2e0\uacbd\uc4f8 \ud544\uc694\uac00 \uc5c6\uc9c0\ub9cc \uac01\uac01 unique \uac12\uc5d0 \ub9e4\ud551\ub418\ub294 \uc22b\uc790\uc5d0 \uc21c\uc11c\uac00 \uc0dd\uaca8\ubc84\ub9ac\uae30 \ub54c\ubb38\uc5d0 target \uc608\uce21\uc5d0 \uc601\ud5a5\uc744 \uc904 \uc218 \uc788\ub2e4.\n- \uc774 \ucee4\ub110\uc5d0\uc11c\ub294 mean-encoding\uc774\ub77c\ub294 \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud588\ub2e4.\n\n\n### mean-encoding\n- \uc5b4\ub5bb\uac8c \uc774\ub8e8\uc5b4\uc9c0\ub294\uc5d0 \ub300\ud55c \uc124\uba85\uc740 \uc544\ub798 \uc608\uc2dc\uc640 \uac19\ub2e4.\n- \uce90\uae00\uc5d0\uc11c\ub294 mean encoding, frequency encoding \ub4f1 \ubc29\ubc95\ub4e4\uc744 \ub9ce\uc774 \uc0ac\uc6a9\ud55c\ub2e4\uace0 \ud55c\ub2e4.\n- \ucc28\uc6d0\uc758 \uc800\uc8fc\uc5d0 \ube60\uc9c8 \ud655\ub960\uc774 \uc5c6\uace0 \ube60\ub974\ub2e4\ub294 \uc7a5\uc810\uc774 \uc788\ub2e4.\n- \uac00\uc7a5 \ud070 \uc7a5\uc810\uc73c\ub85c\ub294 target\uacfc\uc758 mean\uc744 \ucde8\ud574\uc8fc\uc5c8\uae30 \ub54c\ubb38\uc5d0 \uc77c\uc885\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uac00\uc9c0\uac8c \ub41c\ub2e4.\n- \ud558\uc9c0\ub9cc \uce58\uba85\uc801\uc778 \ub2e8\uc810\uc774 \uc788\ub2e4. \n- \ubc14\ub85c Data Leakage \ubb38\uc81c\uc640 \uc624\ubc84\ud53c\ud305 \ubb38\uc81c\uc774\ub2e4.\n- test \ubc0f \ucd94\ud6c4 \uc218\uc9d1\ub420 \ub370\uc774\ud130 \uc14b\uc5d0 \ub300\ud55c target \uac12\uc744 \uc54c\uc9c0 \ubabb\ud558\uae30 \ub54c\ubb38\uc5d0 target\uc5d0 \ub300\ud55c \ud3c9\uade0\uc744 train \ub370\uc774\ud130 \uc14b\uc73c\ub85c\ub9cc \uc801\uc6a9\uc2dc\ucf1c\uc57c \ud55c\ub2e4.\n- \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 test \uc14b\uc758 target \uac12\uc744 \uc0ac\uc6a9\ud558\uac8c \ub418\uba74 data leakage \ubb38\uc81c\uc5d0 \ube60\uc9c0\uac8c\ub418\uace0, train \uc14b\uc758 target \uac12\ub9cc \uc0ac\uc6a9\ud558\uac8c \ub418\uba74 \uc624\ubc84\ud53c\ud305\ub418\ub294 \ub51c\ub808\ub9c8\uac00 \uc788\ub2e4.\n- \ud2b9\ud788 train, test \uc14b\uc758 unique\uac12 \ubd84\ud3ec\uac00 \ud06c\uac8c \ub2e4\ub97c \ub54c \uc624\ubc84\ud53c\ud305 \ubb38\uc81c\ub294 \ucee4\uc9c0\uac8c \ub41c\ub2e4.\n- ex. train \uc14b\uc758 \ub0a8\uc790 95\uba85 \uc5ec\uc7905\uba85, test \uc14b\uc758 \ub0a8\uc790 50\uba85, \uc5ec\uc790 50\uba85\n\n### \ub2e8\uc810\uc744 \uc5b4\ub5bb\uac8c \uadf9\ubcf5\ud558\ub294\uac00?\n- \uc774\ub7ec\ud55c \ub2e8\uc810\ub4e4\uc744 \uc644\ud654\uc2dc\ud0a4\uae30 \uc704\ud55c \ubc29\ubc95\ub4e4\uc774 \uc5ec\ub7ec\uac00\uc9c0 \uc788\ub2e4. <br>\n1) smoothing <br>\n2) CV <br>\n3) Expanding mean <br>\n\ucd9c\ucc98: https:\/\/dailyheumsi.tistory.com\/120","ef363656":"### mean-encoding \uc608\uc2dc","d53ac74d":"## \uc2dc\uac01\ud654\ub97c \ud1b5\ud55c \ub370\uc774\ud130 \ud0d0\uc0c9\n\n### \ubc94\uc8fc\ud615 \ubcc0\uc218 \uc2dc\uac01\ud654 \ntarget\uc774 1\uc778 \ubc94\uc8fc\ud615 \ubcc0\uc218\ub4e4\uc758 \ud2b9\uc131\uc744 \uc2dc\uac01\ud654\ub97c \ud1b5\ud574 \ud30c\uc545\ud574\ubcf8\ub2e4.","ee5e0a99":"## Ordinal \ubcc0\uc218 \uc2dc\uac01\ud654\n\n- heatmap\uc73c\ub85c \uc0c1\uad00\uad00\uacc4 \ud30c\uc545\n- \uc21c\uc11c\ud615 \ubcc0\uc218\uc758 \uacbd\uc6b0 \ubcc0\uc218\uac04\uc5d0 \ud070 \uc0c1\uad00\uad00\uacc4\ub97c \ubcf4\uc774\uc9c0 \uc54a\uc74c","e94c7cdf":"### \uc704\uc758 \ud1b5\uacc4\ub7c9\uc744 \ubc14\ud0d5\uc73c\ub85c Binary \ub370\uc774\ud130\ub97c \uc0b4\ud3b4\ubcf4\uc790\n\n1) \uacb0\uce21\uce58 \ud655\uc778\n - \uacb0\uce21\uce58 X\n            \n2) \ubcc0\uc218\ub4e4 \uc0ac\uc774\uc758 \ubc94\uc704 \ud655\uc778\n - Binary \ub370\uc774\ud130\uc774\uae30 \ub54c\ubb38\uc5d0 \ubc94\uc704\ub97c \ud655\uc778\ud560 \ud544\uc694\ub294 \uc5c6\ub2e4. (0 or 1)\n \n3) Target \ubcc0\uc218 \ud655\uc778 \n - Binary\uc5d0\ub294 Target \ubcc0\uc218\uae4c\uc9c0 \ud3ec\ud568\ub418\uc5b4 \uc788\ub2e4.<br>\n - \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 Target \ubcc0\uc218\uc5d0 \ub300\ud55c \ud1b5\uacc4\ub7c9\uc744 \ud655\uc2e4\ud558\uac8c \uc9da\uace0 \uac00\uc57c\ud55c\ub2e4 <br>\n - Target \ub370\uc774\ud130\uc758 \ud3c9\uade0\uc744 \uc0b4\ud3b4\ubcf4\uba74 \uc774 \ub300\ud68c\uc758 \ud575\uc2ec\uc744 \uc54c \uc218 \uc788\ub2e4.\n - \ub370\uc774\ud130\ub294 0 or 1 \uc774\uae30 \ub54c\ubb38\uc5d0 \uade0\ud615\uc774 \ub9de\uae30 \uc704\ud574\uc120 \ud3c9\uade0\uc774 0.5\uac00 \ub418\uc5b4\uc57c \ud55c\ub2e4.\n - \ud558\uc9c0\ub9cc Target \ub370\uc774\ud130\uc758 \ud3c9\uade0\uc740 0.0364\ub85c \ubcf4\uc778\ub2e4. (\uad49\uc7a5\ud788 Imbalanced\ud558\ub2e4. 0\uc774 \ud6e8\uc52c \ub9ce\uc544\ubcf4\uc778\ub2e4)\n - \ub300\ud68c\uc758 Metric\uc73c\ub85c Normalized Gini Coefficient\ub97c \uc0ac\uc6a9\ud558\ub294 \uc774\uc720","0b0c521f":"## Interval \ubcc0\uc218","573c9a35":"## Ordinal \ubcc0\uc218","6adaa4a7":"### \uc704\uc758 \ud1b5\uacc4\ub7c9\uc744 \ubc14\ud0d5\uc73c\ub85c Ordinal \ub370\uc774\ud130\ub97c \uc0b4\ud3b4\ubcf4\uc790\n\n1) \uacb0\uce21\uce58 \ud655\uc778\n - \uc704\uc758 \ud1b5\uacc4\ub7c9\uc744 \ubcf4\uba74 min\uac12\uc774 -1\uc778 \ubcc0\uc218\uac00 \ud55c\uac1c \uc874\uc7ac\ud55c\ub2e4. <br>\n - ps_car_11 (\ub098\uba38\uc9c0\ub294 \uacb0\uce21\uce58 X)\n            \n2) \ubcc0\uc218\ub4e4 \uc0ac\uc774\uc758 \ubc94\uc704 \ud655\uc778\n - Ordinal \ub370\uc774\ud130 \ub610\ud55c \ubc94\uc704\ub97c \ud655\uc778\ud574\ubcf4\uba74 \ubcc0\uc218\ub4e4 \uac04\uc758 \ucc28\uc774\uac00 \uc788\uc9c0\ub9cc \ucee4\ubcf4\uc774\uc9c0\ub294 \uc54a\ub294\ub2e4. <br>","dd456eae":"### \ub370\uc774\ud130 \ud615\ud0dc\uc758 \uc885\ub958\ub97c \uac04\ub2e8\ud558\uac8c \uc0b4\ud3b4\ubcf8\ub2e4.\n\n- Binary \ubcc0\uc218\n- \uc815\uc218\ub85c \uc774\ub8e8\uc5b4\uc9c4 Categorical \ubcc0\uc218 (\uc9d1\uac12\uc608\uce21\uacfc \ube44\uc2b7, \ubc94\uc8fc\ud615\uc774\uc9c0\ub9cc \uc77c\ub2e8 \uc778\ucf54\ub529\uc774 \ud544\uc694\ud574\ubcf4\uc774\uc9c4 \uc54a\ub294\ub2e4.)\n- \ub098\uba38\uc9c0 \ubcc0\uc218\ub294 int\uc640 float\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\uc74c\n- Null\uac12\uc740 -1\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\uc73c\ubbc0\ub85c isnull()\ub85c \ud655\uc778\ub418\uc9c0 \uc54a\uc74c","bb005e27":"### \uc704\uc758 \ubc29\ubc95\ub300\ub85c \ub9cc\ub4e4\uc5b4\uc11c \uc5b4\ub5a4\uc2dd\uc73c\ub85c \ud65c\uc6a9\ud560 \uc218 \uc788\ub294\uac00?\n\nex1. \ubc84\ub9ac\uc9c0 \uc54a\uc744 \ubcc0\uc218\uc911\uc5d0\uc11c nominal(\uba85\ubaa9\ud615 \ubcc0\uc218)\ub9cc \ud655\uc778\ud574\ubcf4\uace0 \uc2f6\ub2e4. <br>\nex2. \uac01 \ub808\ubca8\uc758 \uc5ed\ud560\uacfc \ub808\ubca8\uc5d0 \ud574\ub2f9\ud558\ub294 \ubcc0\uc218\uac00 \uba87\uac1c\uac00 \uc788\ub294\uc9c0 \ud655\uc778\ud574\ubcf4\uace0 \uc2f6\ub2e4. <br>","cfcb0e8c":"### ps_car_12 and ps_car_14","67db1532":"## Binary \ubcc0\uc218","2412b87a":"### \uc704\uc5d0\uc11c \ub9cc\ub4e4\uc5b4\uc900 \uc815\ub9ac\ub97c \ud1b5\ud574 \uc720\ud615\ubcc4\ub85c \ub370\uc774\ud130\ub97c \uc5b4\ub5bb\uac8c \ub2e4\ub8f0 \uac83\uc778\uac00\ub97c \uc27d\uac8c \uc120\ud0dd\ud560 \uc218 \uc788\uc74c\n\n### ex. \uc5f0\uc18d\ud615 \ubcc0\uc218\uc758 \uacbd\uc6b0 \ud1b5\uacc4\uc801 \ubc29\ubc95, \ubc94\uc8fc\ud615 \ubcc0\uc218\uc758 \uacbd\uc6b0 \uc2dc\uac01\ud654\ub97c \ud1b5\ud55c \ud0d0\uc0c9 \ub4f1\n\n### \ube14\ub85c\uadf8\uc5d0 \uc788\ub294 \uc9d1\uac12\uc608\uce21 \ubca0\uc774\uc2a4\ub77c\uc778\uc744 \ubcf4\uba74 \uc54c \uc218 \uc788\ub4ef\uc774 \uc704\uc758 \ubc29\ubc95\uc774 \uc880 \ubcf5\uc7a1\ud558\uac8c \ub290\uaef4\uc9c4\ub2e4\uba74, \uadf8\ub0e5 \uc5f0\uc18d\ud615 \ubcc0\uc218\/\ubc94\uc8fc\ud615 \ubcc0\uc218\ub85c\ub9cc \ub098\ub204\uc5b4\ub3c4 \ucda9\ubd84\ud788 \ud3b8\ud558\uac8c \uc791\uc5c5\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc74c ","69f7cd94":"### \uc911\uc694\ud55c\uac83\uc740 Null Value\ub97c \ucc98\ub9ac\ud560 \ub54c \ud56d\uc0c1 Null\uac12\uc758 \uc758\ubbf8\ub97c \ud30c\uc545\ud574\uc57c\ud55c\ub2e4.\n> \uc9c4\uc9dc \uacb0\uce21\ub41c \uac12\uc778\uc9c0 <br> \n> \uacb0\uce21\ub41c \uac12 \ub54c\ubb38\uc5d0 target\uc5d0 \ubcc0\ud654\ub97c \uc904 \uc218 \uc788\ub294\uc9c0 <br>\n> 0\uc73c\ub85c \ud45c\ud604\ub418\uc5c8\uc744 \uacbd\uc6b0 Null Value\uc778\uc9c0 \ud639\uc740 \uc9c4\uc9dc 0\uc73c\ub85c \uad00\uce21\ub41c \uac12\uc778\uc9c0 <br>\n> \uc774 \ub300\ud68c\ucc98\ub7fc -1\ub85c \ud45c\ud604\ub418\uc5c8\uc744 \uacbd\uc6b0 \uc2e4\uc81c -1\uc778 \uac12\uc744 \uac00\uc9c8\uc218\ub3c4 \uc788\ub294\uc9c0 <br>\n> \ub4f1\ub4f1 <br>\n\n\n### \ucee4\ub110\uc758 \uacbd\uc6b0 \uc5b4\ub5a4 \uae30\uc900\uc778\uc9c0\ub294 \ub098\uc640\uc788\uc9c0 \uc54a\uace0 \uc5b4\ub5bb\uac8c \ucc98\ub9ac\ud588\ub294\uc9c0\ub9cc \ub098\uc628\ub2e4.\n- ps_car_03_cat\uc640 ps_car_05_cat\ub294 \uacb0\uce21\uce58\uac00 \uad49\uc7a5\ud788 \ub9ce\uc740 \uac83\uc73c\ub85c \ubcf4\uc778\ub2e4. \n- \uc774\ub7ec\ud55c \ubcc0\uc218\ub294 \ud655\uc2e4\ud55c \ub300\uccb4\ubc29\ubc95\uc774 \uc788\uc9c0 \uc54a\ub294 \uc774\uc0c1 \uc81c\uac70\ud558\ub294\uac83\uc774 \uc88b\ub2e4.\n- \uc774 \ucee4\ub110\uc740 ps_car_03_cat\uc640 ps_car_05_cat\ub97c \uc81c\uc678\ud55c \ub098\uba38\uc9c0 cat \ubcc0\uc218\ub4e4\uc740 -1\uac12\uc744 \uadf8\ub300\ub85c \ub450\uc5c8\ub2e4.\n- ps_reg_03\uc758 \uacbd\uc6b0 \ud3c9\uade0\uc73c\ub85c \ub300\uccb4\ud574\uc900\ub2e4. \n- ps_car_11\uc758 \uacbd\uc6b0 \uacb0\uce21\uce58\uac00 \ub531 \ud55c\uac1c \uc788\ub2e4. \ucd5c\ube48\uac12\uc73c\ub85c \ub300\uccb4\ud574\uc900\ub2e4. (\uc21c\uc11c\ud615 \ubcc0\uc218\uc774\ubbc0\ub85c)\n- \uacb0\ub860\uc801\uc73c\ub85c \uc774 \ucee4\ub110\uc5d0\uc11c\ub294 \uc5f0\uc18d\ud615 \ubcc0\uc218\ub294 mean, \ubc94\uc8fc\ud615 \ubcc0\uc218\ub294 mode\ub85c \ucc44\uc6cc\uc900\ub2e4.","0fbfae7a":"### \uc704\uc758 \ud1b5\uacc4\ub7c9\uc744 \ubc14\ud0d5\uc73c\ub85c Interval \ub370\uc774\ud130\ub97c \uc0b4\ud3b4\ubcf4\uc790\n\n1) \uacb0\uce21\uce58 \ud655\uc778\n - \ub9d0\ud588\ub4ef\uc774 Porto \ub300\ud68c\uc758 \uacb0\uce21\uce58\ub294 \uc804\ubd80 -1\ub85c \ub300\uccb4\ub418\uc5b4 \uc788\ub2e4. <br>\n - \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 isnull()\uc774 \uc544\ub2cc -1\uac12\uc744 \ud655\uc778\ud574\uc8fc\uba74 \ub41c\ub2e4. <br>\n - \uc704\uc758 \ud1b5\uacc4\ub7c9\uc744 \ubcf4\uba74 min\uac12\uc774 -1\uc778 \ubcc0\uc218\uac00 \uba87\uac1c \uc874\uc7ac\ud55c\ub2e4. <br>\n - ps_reg_03, ps_car_12, ps_car_14 (calc \ubcc0\uc218\ub294 \uacb0\uce21\uce58 X)\n            \n2) \ubcc0\uc218\ub4e4 \uc0ac\uc774\uc758 \ubc94\uc704 \ud655\uc778\n - \ubc94\uc704\ub97c \ud655\uc778\ud574\ubcf4\uba74 \ubcc0\uc218\ub4e4 \uac04\uc758 \ucc28\uc774\uac00 \uc788\uc9c0\ub9cc \ucee4\ubcf4\uc774\uc9c0\ub294 \uc54a\ub294\ub2e4. <br>\n - Scaling\uc744 \ud560\uc9c0 \ub9d0\uc9c0 \ucd94\ud6c4\uc5d0 \uc0dd\uac01\ud574\ubcf4\ub3c4\ub85d\ud55c\ub2e4. (\uc544\ub9c8 \ud2b8\ub9ac\ubaa8\ub378\uc744 \uc0ac\uc6a9\ud560\uac83\uc774\uae30 \ub54c\ubb38\uc5d0 \ub531\ud788..)\n\n3) \ubcc0\uc218\ub4e4\uc758 \uc22b\uc790 \ud06c\uae30 \ud655\uc778\n - \uc5b4\ub5a4 \ubcc0\uc218\uc778\uc9c0 \ud655\uc778\ud560 \uc218\ub294 \uc5c6\uc9c0\ub9cc \ubcc0\uc218\uc758 \ud06c\uae30\uac00 \uc804\ubd80 \uc791\uc740\uac83\uc73c\ub85c \ubcf4\uc778\ub2e4. <br>\n - \uc774 \ucee4\ub110\uc744 \uc791\uc131\ud55c \uc0ac\ub78c\uc740 Log\ub97c \uc50c\uc6cc\uc900\uac8c \uc544\ub2cc\uac00 \ub77c\uace0 \uc0dd\uac01\ud588\ub2e4.","91c98dfe":"- \uc704\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc740 unique \uac12\uc744 \uac16\ub294 \ubc94\uc8fc\ud615 \ubcc0\uc218\uc5d0 \ub300\ud574\uc11c mean-encoding\uc744 \ud574\uc8fc\uc5c8\ub2e4. <br>\n- \ub098\uba38\uc9c0 \ubcc0\uc218\ub4e4\uc740 one-hot encoding \ud574\uc8fc\uc5b4 \ub354\ubbf8\ud654 \uc2dc\ucf1c\uc900\ub2e4 <br>\n- \ubc94\uc8fc\ud615 \ubcc0\uc218\uc5d0 \uc21c\uc11c\ub3c4 \ubd80\uc5ec\ud558\uc9c0 \uc54a\uace0, unique \uac12\ub3c4 \ub9ce\uc9c0 \uc54a\uc544 \ucc28\uc6d0\uc774 \ub9ce\uc774 \ub298\uc5b4\ub098\uc9c0\ub3c4 \uc54a\ub294\ub2e4. <br>","d256b680":"### 1) ps_reg_02 & ps_reg_03\n\n- plot\uc744 \ubcf4\uba74 \ub450 \uac1c\uc758 \ubcc0\uc218\uac00 \uc120\ud615\uad00\uacc4\ub97c \uc774\ub8e8\ub294 \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4. \n- \ud68c\uadc0\uc120\uc774 \uacb9\uce58\uac70\ub098 \ube44\uc2b7\ud55c \ubaa8\uc2b5\uc774\ub2e4.","5e365fe3":"## 1\ub4f1 Discussion \uc815\ub9ac\n\n1) \ubaa8\ub378: LightGBM, NeuralNet \uc0ac\uc6a9 (\uc624\ud1a0\uc778\ucf54\ub354: \ube44\uc9c0\ub3c4 \ud559\uc2b5 \uae30\ubc18 \ub274\ub7f4 \ub137, \uc774\ubbf8\uc9c0 \ubcf5\uc6d0\ub4f1\uc5d0 \uc8fc\ub85c \uc0ac\uc6a9, \ub178\uc774\uc988 \uc81c\uac70\uc5d0 \ud2b9\ud654\ub418\uc5b4 \uc788\uc74c)<br>\n - Discussion\uacfc \uc0c1\uc704 \ucee4\ub110 \uba87\uac1c\ub97c \uc0b4\ud3b4\ubcf8 \uacb0\uacfc \ub178\uc774\uc988\ub97c \ucc98\ub9ac\ud558\ub294 \uac83\uc774 \ub300\ud68c\uc758 \ud575\uc2ec\uc774\uc5c8\ub358\uac83 \uac19\uc74c <br>\n - \uadf8\ub798\uc11c \ub300\ud68c \uc6b0\uc2b9\uc790\ub4e4\uc740 \uc77c\ubc18\uc801\uc778 \uba38\uc2e0\ub7ec\ub2dd \ubaa8\ub378 + \ub525\ub7ec\ub2dd \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud55c\uac83\uc73c\ub85c \ubcf4\uc784 <br>\n - \uc624\ud1a0\uc778\ucf54\ub354 \ucc38\uace0: https:\/\/sunghan-kim.github.io\/ml\/3min-dl-ch08\/# <br>\n \n2) FE: cals \ubcc0\uc218 \uc81c\uac70, cat \ubcc0\uc218 one-hot encoding<br>\n - \ub531\ud788 \ub9ce\uc740 \ud30c\uc0dd\ubcc0\uc218\ub97c \ub9cc\ub4e4\uc5b4\ub0b4\uc9c0 \uc54a\uc558\uc74c\uc5d0\ub3c4 1\ub4f1\uc744 \ucc28\uc9c0\ud568 (\ub370\uc774\ud130\uc758 \ud2b9\uc131\uc5d0 \ub9de\ub294 \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud55c \uacb0\uacfc) <br>\n \n3) Scaling: \uc77c\ubc18 \ud2b8\ub9ac\ubaa8\ub378\uc774 \uc544\ub2cc \ub525\ub7ec\ub2dd \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud558\uc600\uae30 \ub54c\ubb38\uc5d0 \ud544\uc218\uc801\uc73c\ub85c \uc0ac\uc6a9 (RankGauss\ub77c\ub294 \uae30\ubc95\uc744 \uc0ac\uc6a9\ud588\ub2e4\uace0 \ud55c\ub2e4.)<br>\n - RankGauss\ub77c\ub294 \uae30\ubc95\uc740 \ud0dc\uc5b4\ub098\uc11c \ucc98\uc74c\ubcf4\ub294 \ud45c\uc900\ud654 \ubc29\ubc95;; (\uad6c\uae00\ub9c1 \uacb0\uacfc \ud55c\uae00 \ud3ec\uc2a4\ud305 \uc5c6\uc74c, \uacf5\ubd80\ud574\uc11c \ube14\ub85c\uadf8 \uc62c\ub9ac\uc790 \uc598\ub4e4\uc544 ^^)<br>\n - \uc774\ub7f0 \uc0c8\ub85c\uc6b4 \uae30\ubc95\uc744 \uc54c\uc544\uac00\uace0 \uacf5\ubd80\ud560 \uc218 \uc788\ub294 \uac83\uc774 \uce90\uae00\uc744 \ud558\ub294 \uc774\uc720\uac00 \uc544\ub2d0\uae4c..<br>\n - RankGauss \ucc38\uace0: https:\/\/github.com\/aldente0630\/gauss_rank_scaler \n","9074c9e5":"### \ucc38\uace0\ud55c \uc0c1\uc704 \ucee4\ub110\n\n1. https:\/\/www.kaggle.com\/bertcarremans\/data-preparation-exploration","32d76858":"### \ub300\ud68c \uc815\ubcf4\n - Porto Seguro\ub294 \ube0c\ub77c\uc9c8\uc758 \uc790\ub3d9\ucc28 \ubcf4\ud5d8 \ud68c\uc0ac\ub77c\uace0 \ud55c\ub2e4. \n - \uc774 \ub300\ud68c\uc758 \ubaa9\uc801\uc740 \uc5b4\ub5a4 \ucc28\uc8fc\uac00 \ub0b4\ub144\uc5d0 \ubcf4\ud5d8 \uccad\uad6c\ub97c \ud560 \ud655\ub960\uc744 \uc608\uce21\ud558\ub294 \uac83\n - predict_proba\ub77c\ub294 \ud568\uc218\ub97c \uc0ac\uc6a9\ud574\uc11c \uac12\uc744 \uc608\uce21 (\ud655\ub960 \uac12)\n - \ub300\ud68c\uc758 \ud3c9\uac00\uc9c0\ud45c\ub294 \ud2b9\uc774\ud558\uac8c Normalized Gini Coefficient\ub97c \uc0ac\uc6a9\ud568 \n - Normalized Gini Coefficient\ub97c \uc0ac\uc6a9\ud558\ub294 \uc774\uc720: <br>\n   Imbalanced Class\ub97c \ud3c9\uac00\ub97c \uc704\ud55c \uc784\uacc4\uac12\uc744 \uc5b4\ub5bb\uac8c \uc815\ud558\ub290\ub0d0\uc5d0 \ub530\ub77c \uc608\uce21\uac12\uc774 \ubc14\ub01c <br>\n    = ROC \ucee4\ube0c\ub85c \ud655\uc778 (\uba74\uc801\uc73c\ub85c \uc2a4\ucf54\uc5b4\ub97c \ub9e4\uae40) >> \ube44\uc2b7\ud55c \ubaa9\uc801\uc73c\ub85c Gini Coefficient\uac00 \uc4f0\uc784 <br>\n    = gini = 2 * AUC - 1 <br>\n    \ucd9c\ucc98: https:\/\/stats.stackexchange.com\/questions\/306287\/why-use-normalized-gini-score-instead-of-auc-as-evaluation\n \n \n### \ub370\uc774\ud130 \uc815\ubcf4  (*\ub370\uc774\ud130\ub97c \ud30c\uc545\ud558\ub294 \uac83\uc774 \uae30\ubcf8, \uc911\uc694\ud558\uae30 \ub54c\ubb38\uc5d0 \ub300\ud68c\uc5d0 \ub098\uac04\ub2e4\uba74 \uaf2d \ud655\uc778\ud560 \uac83*) \n - 59\ub9cc \uac1c\uc758 train set\uacfc 89\ub9cc \uac1c\uc758 test set\uc73c\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc74c \n - \uc2e4\uc81c \uae30\uc5c5 \ub370\uc774\ud130\uc774\uae30 \ub54c\ubb38\uc5d0 feature\ub97c \ube44\uc2dd\ubcc4\ud654 \ud574\ub1a8\uc74c (\uadf8\ub807\uae30 \ub54c\ubb38\uc5d0 \ub09c\uc774\ub3c4\uac00 \ub192\uc740 \ucabd\uc5d0 \uc18d\ud568)\n - feature\ub4e4\uc774 \uadf8\ub8e8\ud551 \ub418\uc5b4 \uc788\uc74c (\ube44\uc2dd\ubcc4\ud654 \ud574\ub1a8\uc73c\ub2c8 \uc5b4\ub5a4\uac70\uc5d0 \uad00\ub828\ub41c\uac70\ub2e4 \ub77c\uace0 \uc8fc\uc5b4\uc9c4\ub4ef)<br>\n   ind: \uc815\uc218\uac12 \ub9e4\ud551 <br>\n   reg: region(..?) <br>\n   car: \ucc28\uc5d0 \uad00\ub828\ub41c \ubcc0\uc218 <br>\n   calc: \uc2e4\uc218\uac12 (\uacc4\uc0b0\ub41c \uac12..?) <br>\n - bin\uc740 binary feature, cat\uc740 categorical feature\uc5d0 \ud574\ub2f9 \n - \ub098\uba38\uc9c0\ub294 \uadf8\ub0e5 \uc5f0\uc18d\ud615 \ubcc0\uc218 or \uc21c\uc11c\ud615 \ubcc0\uc218\n - \ubaa8\ub4e0 Null Value\ub294 -1\ub85c \ub300\uccb4\ub418\uc5b4 \uc788\uc74c\n - \ud0c0\uac9f\uac12\uc740 \uc774\uc804\uc5d0 \ubcf4\ud5d8 \uccad\uad6c\uac00 \uc788\uc5c8\uc73c\uba74 1 \uc544\ub2c8\uba74 0\uc73c\ub85c \ub418\uc5b4\uc788\uc74c","ecb033d9":"![Main Image](https:\/\/www.cqcs.com.br\/wp-content\/uploads\/2020\/01\/Design-sem-nome-1.jpg)","59eec4c2":"## Feature Engineering","d0836f60":"## Interval \ubcc0\uc218 \uc2dc\uac01\ud654 (\uc5f0\uc18d\ud615)\n\n- heatmap\uc73c\ub85c \uc0c1\uad00\uad00\uacc4 \ud30c\uc545","881483cd":"## 3\ub4f1 Discussion \uc815\ub9ac\n\n1) \ubaa8\ub378: LightGBM, NeuralNet \uc0ac\uc6a9 (\uc5ed\uc2dc \uc624\ud1a0\uc778\ucf54\ub354 \uc0ac\uc6a9) <br>\n\n2) FE:  \uba38\uc2e0\ub7ec\ub2dd \ubaa8\ub378\uc5d0\uc11c <br> \n['ps_ind_14', 'ps_car_10_cat', 'ps_car_14', 'ps_ind_10_bin', 'ps_ind_11_bin','ps_ind_12_bin', 'ps_ind_13_bin', 'ps_car_11', 'ps_car_12'] <br>\n\uc774 \ubcc0\uc218\ub4e4\uc744 \uc0ad\uc81c\ud588\ub2e4\uace0\ud568, \uad50\ucc28\uac80\uc99d \uc810\uc218 \ud655\uc778\ud558\uba70 \uc0ad\uc81c\n - one-hot encoding\uc774 \ub178\uc774\uc988\ub97c \uc904\uc774\ub294\ub370 \ub3c4\uc6c0\uc774 \ub418\uc5c8\ub2e4\uace0 \ud55c\ub2e4.<br>\n\n3) \uc544\uc26c\uc6e0\ub358 \uc810\uc740, \uc774\uc0c1\uce58\ub97c \uc81c\ub300\ub85c \ud30c\uc545\ud558\uc9c0 \ubabb\ud588\ub2e4\uace0 \ud55c\ub2e4. \n - \uc704\uc758 EDA\uc5d0\uc11c \uc0b4\ud3b4\ubcf4\uc558\ub358 count\ub294 \uc801\uc9c0\ub9cc 1\uc73c\ub85c \ubd84\ub958\ub420 \ud655\ub960\uc774 \uc5c4\uccad \ub192\uc558\ub358 -1(\uacb0\uce21\uce58)\ub77c\ub4e0\uc9c0 \uadf8\ub7f0 \ubd80\ubd84\uc744 \uc774\uc57c\uae30\ud558\ub294 \uac83 \uac19\uc74c\n","8102aac1":"### \uba87\uac1c\uc758 \ubcc0\uc218\ub4e4\uc740 \uac15\ud55c \uc0c1\uad00\uad00\uacc4\ub97c \ubcf4\uc778\ub2e4.\n\n- ps_reg_02 & ps_reg_03 (0.7)\n- ps_car_12 & ps_car13 (0.67)\n- ps_car_12 & ps_car14 (0.58)\n- ps_car_13 & ps_car15 (0.67)\n\n\uc0b4\ud3b4\ubcf8 \uac15\ud55c \uc0c1\uad00\uad00\uacc4\ub97c \uac00\uc9c0\ub294 \ubcc0\uc218\ub4e4\uc5d0 \ub300\ud574 \ucd94\uac00\ub85c \uc2dc\uac01\ud654\ub97c \uc9c4\ud589\ud558\ub3c4\ub85d \ud55c\ub2e4.","ef385cf4":"### \uad50\ud638\uc791\uc6a9 \ubcc0\uc218 \uc0dd\uc131 (\uc911\uc694 \ubcc0\uc218\ub07c\ub9ac\uc758 \uacf1)","bdfb65a5":"### ps_car_12 & ps_car_13","45694285":"### \uacb0\uce21\uce58 \ud655\uc778  \n\n- \uc704\uc5d0\uc11c \uac04\ub2e8\ud558\uac8c \uc5b4\ub290 feature\uc5d0 \uacb0\uce21\uce58\uac00 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc600\ub2e4.\n- \uc5bc\ub9c8\ub098 \uc788\ub294\uc9c0\ub3c4 \ud655\uc778\ud574\ubcf4\uc790.","263bac66":"# EDA"}}