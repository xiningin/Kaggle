{"cell_type":{"9015a42d":"code","542ee71c":"code","02aad01e":"code","fb6c7c25":"code","68988fe0":"code","fbe9292d":"code","622a0119":"code","921ae108":"code","cab80a47":"code","2ac1bf52":"code","050f2493":"code","256dbcb1":"code","19606bab":"code","a8018700":"markdown","2ecbda67":"markdown","79cd86eb":"markdown","653b4aaa":"markdown","e73d8c93":"markdown","d92c13a6":"markdown","c715b435":"markdown","9e597758":"markdown","a8b1d239":"markdown","18b8f05b":"markdown","a9024b41":"markdown","295cf4a5":"markdown","4f5697d5":"markdown","4d56a54d":"markdown","1368903d":"markdown","52da1272":"markdown","799d6d70":"markdown","bce0ace7":"markdown","042c217c":"markdown","1f2f440d":"markdown","148c4de3":"markdown","c8d169bd":"markdown","fc6b1506":"markdown","6636420b":"markdown","6551da29":"markdown"},"source":{"9015a42d":"import numpy as np\nimport pandas as pd\nimport datetime\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nimport warnings\nwarnings.filterwarnings(\"ignore\")\nplt.style.use('fivethirtyeight')\n\ndef getMiliSeconds(time):\n    try:\n        if '.' in time:\n            x = datetime.datetime.strptime(time,'%M:%S.%f')\n        elif ',' in time:\n            x = datetime.datetime.strptime(time,'%M:%S,%f')\n        else:\n            x = datetime.datetime.strptime(time,'%M:%S:%f')\n        return datetime.timedelta(minutes=x.minute,seconds=x.second, microseconds = x.microsecond).total_seconds()\n    except:\n        x = datetime.datetime.strptime(str(time).split('.')[0],'%M:%S:%f')\n        return datetime.timedelta(minutes=x.minute,seconds=x.second, microseconds = x.microsecond).total_seconds()\n\ndef wins_per_year(driverRef, year):\n    try:\n        return topTenYears.loc[(topTenYears['driverRef'] == driverRef) & (topTenYears['positionOrder'] == 1) & (topTenYears['year'] == year)].groupby('driverId')['raceId'].count().values[0]\n    except:\n        return 0\n\ndef championsInYears(years, driverRef):\n    total = []\n    t = 0\n    for year in years:\n        winner = r.loc[r['year']== year].groupby('driverRef')['points'].sum().sort_values(ascending = False).index[0]\n        if winner == driverRef:\n            t = t + 1\n        total.append(t)\n    return total\n\ndf_races  = pd.read_csv('\/kaggle\/input\/races.csv')\ndf_drivers = pd.read_csv('\/kaggle\/input\/drivers.csv',encoding='latin1')\ndf_circuit = pd.read_csv('\/kaggle\/input\/circuits.csv',encoding='latin-1')\ndf_constructors = pd.read_csv('\/kaggle\/input\/constructors.csv',encoding='latin-1')\ndf_qualy = pd.read_csv('\/kaggle\/input\/qualifying.csv',encoding='latin-1')\ndf_results = pd.read_csv('\/kaggle\/input\/results.csv',encoding='latin-1')\ndf_status = pd.read_csv('\/kaggle\/input\/status.csv')\ndf_timeLaps = pd.read_csv('\/kaggle\/input\/lapTimes.csv')\n\ndf_races = df_races.drop(['date','time','url','round','circuitId'],axis=1)\ndf_drivers = df_drivers.drop(['number','code','dob','url'], axis=1)\ndf_constructors = df_constructors.drop(['nationality','Unnamed: 5','url','name'], axis=1)\ndf_results = df_results.drop(['number','grid','positionText','position','laps','time','milliseconds','rank','fastestLap','fastestLapSpeed','resultId'], axis=1)\ndf_timeLaps = df_timeLaps.drop(['milliseconds'],axis = 1)\n\ndf_results['fastestLapTime'] = df_results['fastestLapTime'].fillna('00:00.0')\ndf_qualy['q1'] = df_qualy['q1'].fillna('00:00.0')\ndf_qualy['q2'] = df_qualy['q2'].fillna('00:00.0')\ndf_qualy['q3'] = df_qualy['q3'].fillna('00:00.0')\ndf_timeLaps['time'] = df_timeLaps['time'].fillna('00:00.0')\n\ndf_qualy['q1'] = df_qualy['q1'].apply(lambda x: getMiliSeconds(x))\ndf_qualy['q2'] = df_qualy['q2'].apply(lambda x: getMiliSeconds(x))\ndf_qualy['q3'] = df_qualy['q3'].apply(lambda x: getMiliSeconds(x))\ndf_timeLaps['time'] = df_timeLaps['time'].apply(lambda x: getMiliSeconds(x))\ndf_results['fastestLapTime'] = df_results['fastestLapTime'].apply(lambda x: getMiliSeconds(x))\n\ndf_drivers['fullName'] = df_drivers['forename'] +\" \"+ df_drivers['surname']\n    ","542ee71c":"results = pd.merge(df_drivers,df_results, on='driverId',how='inner')\nlen(results.loc[(results['positionOrder'] == 1) & (results['driverId'] == 1)])","02aad01e":"from wordcloud import WordCloud, STOPWORDS\nfrom collections import Counter\nimport random\ndef grey_color_func(word, font_size, position, orientation, random_state=None,\n                    **kwargs):\n    return \"hsl(10, 100%%, %d%%)\" % random.randint(15, 90)\n\nq = pd.merge(df_qualy,df_drivers,how='inner',on='driverId')\nq = pd.merge(q,df_races,how='inner',on=['raceId'])\nq = q.loc[q['position']==1]\n\narray = list(q.loc[q['position']== 1]['fullName'].values)\n\nword_could_dict=Counter(array)\n##CORRECTING THE DATASET, BECAUSE DATASET OF QUALIFICATION IS MISSING SOME DATA\nword_could_dict['Lewis Hamilton'] = 72\nword_could_dict['Michael Schumacher'] = 68\nword_could_dict['Ayrton Senna'] = 65\nword_could_dict['Alain Prost'] = 33\nword_could_dict['Jim Clark'] = 33\nword_could_dict['Nigel Mansell'] = 32\nword_could_dict['Kimi R\u00cc_ikk\u00cc\u00a6nen'] = 0\nword_could_dict['Kimi Raikkonen'] = word_could_dict['Kimi R\u00cc_ikk\u00cc\u00a6nen']\nword_could_dict['Mika Hakkinen'] = word_could_dict['Mika H\u00cc_kkinen']\nword_could_dict.pop('Kimi R\u00cc_ikk\u00cc\u00a6nen')\nword_could_dict.pop('Mika H\u00cc_kkinen')\n################################################################################\nwordcloud = WordCloud(width = 1000, height = 1000, max_font_size=100).generate_from_frequencies(word_could_dict)\ndefault_colors = wordcloud.to_array()\nplt.figure(figsize=(40,50))\nplt.title(\"F1 Pole Quantity\",fontsize=100)\nplt.axis(\"off\")\nplt.imshow(wordcloud.recolor(color_func=grey_color_func, random_state=3),\n           interpolation=\"bilinear\")\nplt.show()","fb6c7c25":"gb = pd.merge(results.loc[results['driverId'] == 1],df_races, on='raceId',how='inner')\ngb = gb.loc[gb['positionOrder']==1].groupby('name')['driverId'].count().sort_values()\n\nf,ax = plt.subplots(figsize =(25,15))\nax.tick_params(axis=\"x\", labelsize=20)\nax.tick_params(axis=\"y\", labelsize=30)\n\nax.barh(list(gb.index), list(gb.values),height = 0.9, color = ['c','gray'])\nax.set_facecolor('whitesmoke')\nax.patch.set_alpha(0.9)\nplt.title(\"Victory by Gran Prix\",fontsize=30)\nplt.ylabel('Gran Prix',fontsize = 20)\nplt.xlabel('Total',fontsize = 20,)\nplt.grid()\nplt.show()","68988fe0":"topBritish = results.loc[(results['nationality'] == 'British') & (results['positionOrder'] == 1)].groupby('driverRef')['raceId'].count().sort_values(ascending=False)[:10]\ntopBritish = topBritish.sort_values()\ntopWorld = results.loc[(results['positionOrder'] == 1)].groupby('driverRef')['raceId'].count().sort_values(ascending=False)[:20]\ntopWorld = topWorld.sort_values()\n\nf,ax = plt.subplots(figsize =(25,15))\nax.tick_params(axis=\"x\", labelsize=20)\nax.tick_params(axis=\"y\", labelsize=30)\n\nax.barh(list(topBritish.index), list(topBritish.values),height = 0.9, color = ['darkblue','crimson'])\nax.set_facecolor('whitesmoke')\nax.patch.set_alpha(0.9)\nplt.title(\"Top British Race Winners\",fontsize=30)\nplt.ylabel('Drivers',fontsize = 15)\nplt.xlabel('Total Wins',fontsize = 15,)\nplt.grid()\nplt.show()\n\nf,ax = plt.subplots(figsize =(25,15))\nax.tick_params(axis=\"x\", labelsize=20)\nax.tick_params(axis=\"y\", labelsize=30)\n\nax.barh(list(topWorld.index), list(topWorld.values),height = 0.9, color = ['c','gray'])\nax.set_facecolor('k')\nax.patch.set_alpha(0.9)\nplt.title(\"Top World Race Winners\",fontsize=30)\nplt.ylabel('Drivers',fontsize = 15)\nplt.xlabel('Total Wins',fontsize = 15,)\nplt.grid()\nplt.show()\n\ntopTenYears = pd.merge(results,df_races,on='raceId',how='inner')\nhamWinsPerYear = []\nvetWinsPerYear = []\nrosWinsPerYear = []\nbutWinsPerYear = []\naloWinsPerYear = []\nfor year in range(2007,2018):\n    hamWinsPerYear.append(wins_per_year('hamilton',year))\n    vetWinsPerYear.append(wins_per_year('vettel',year))\n    rosWinsPerYear.append(wins_per_year('rosberg',year))\n    butWinsPerYear.append(wins_per_year('button',year))\n    aloWinsPerYear.append(wins_per_year('alonso',year))   \n\nx = range(2007,2018)\nf,ax = plt.subplots(figsize =(20,10))\nax.tick_params(axis=\"x\", labelsize=15)\nax.tick_params(axis=\"y\", labelsize=30)\n\nax.set_facecolor('whitesmoke')\nline1, = ax.plot(x, hamWinsPerYear, label='Hamilton Wins', color='c',linewidth=4,)\nline2, = ax.plot(x, vetWinsPerYear, label='Vettel Wins' ,linewidth=2, color='r')\nline3, = ax.plot(x, rosWinsPerYear, label='Rosberg Wins', color='k',linewidth=2,)\nline4, = ax.plot(x, butWinsPerYear, label='Button Wins' ,linewidth=2, color='gold')\nline5, = ax.plot(x, aloWinsPerYear, label='Alonso Wins', color='deeppink',linewidth=2,)\nplt.title(\"Top 5 from the Last 10 years - Wins per Year \",fontsize=30)\nplt.ylabel('Total',fontsize = 15)\nplt.xlabel('Years',fontsize = 15,)\nplt.grid()\nax.legend()\nplt.show()\n\nr = pd.merge(df_races,df_results)\nr = pd.merge(r,df_drivers)\n# winnersYear = []\n# for year in :\n#     r.loc[r['year']== year].groupby('driverRef')['points'].sum().sort_values(ascending = False).index[0]\n\nschummyCP = championsInYears(np.sort(r['year'].unique()),'michael_schumacher')\nfangioCP = championsInYears(np.sort(r['year'].unique()),'fangio')\nprostCP = championsInYears(np.sort(r['year'].unique()),'prost')\nhamiltonCP = championsInYears(np.sort(r['year'].unique()),'hamilton')\nvettelCP = championsInYears(np.sort(r['year'].unique()),'vettel')\n\nx = range(1950,2018)\nf,ax = plt.subplots(figsize =(20,10))\nax.tick_params(axis=\"x\", labelsize=15)\nax.tick_params(axis=\"y\", labelsize=30)\n\nax.set_facecolor('whitesmoke')\nline1, = ax.plot(x, schummyCP, label='Schumacher World Championships Count', color='r',linewidth=2,)\nline2, = ax.plot(x, fangioCP, label='Fangio World Championships Count' ,linewidth=2, color='magenta')\nline3, = ax.plot(x, prostCP, label='Prost World Championships Count', color='k',linewidth=2,)\nline4, = ax.plot(x, hamiltonCP, label='Hammilton World Championships Count' ,linewidth=4, color='aqua')\nline5, = ax.plot(x, vettelCP, label='Vettel World Championships Count', color='darkblue',linewidth=2,)\nplt.title(\"Top 5 from All Time - Championships over the Years \",fontsize=30)\nplt.ylabel('Total',fontsize = 15)\nplt.xlabel('Years',fontsize = 15,)\nplt.grid()\nax.legend()\nplt.show()","fbe9292d":"result_races = pd.merge(df_results,df_races, how='inner',on='raceId')\nmercedesId = df_constructors.loc[(df_constructors['constructorRef']=='mercedes')]['constructorId'].values[0]  #131\nhamQtdQualy = len(df_qualy.loc[(df_qualy['driverId']==1) & (df_qualy['position']==1) & (df_qualy['constructorId']==mercedesId)]) # 46\nrosQtdQualy = len(df_qualy.loc[(df_qualy['driverId']==3 ) & (df_qualy['position']==1) & (df_qualy['constructorId']==mercedesId)]) # 30\nhamQtdRaces = len(results.loc[(results['positionOrder'] == 1) & (results['driverId'] == 1) & (results['constructorId'] == 131)])\nrosQtdRaces = len(results.loc[(results['positionOrder'] == 1) & (results['driverId'] == 3) & (results['constructorId'] == 131)])\nhamWinsPerYear = result_races.loc[(result_races['driverId']==1) & (result_races['constructorId'] == 131) & (result_races['positionOrder'] == 1) & (result_races['year'] < 2017)].groupby('year')['driverId'].count()\nrosWinsPerYear = result_races.loc[(result_races['driverId']==3) & (result_races['constructorId'] == 131) & (result_races['positionOrder'] == 1) & (result_races['year'] > 2012)].groupby('year')['driverId'].count()\n\nf,ax = plt.subplots(figsize =(25,15))\nax.tick_params(axis=\"x\", labelsize=30)\nax.tick_params(axis=\"y\", labelsize=20)\n\nax.bar(['Hamilton','Rosberg'], [hamQtdQualy,rosQtdQualy], width = 0.25, color = ['c','gray'])\nax.set_facecolor('whitesmoke')\nplt.title(\"Total of Poles in Mercedes\",fontsize=30)\nplt.ylabel('Total',fontsize = 15)\nplt.xlabel('Pilots',fontsize = 15,)\nplt.show()\n\nf,ax = plt.subplots(figsize =(25,15))\nax.tick_params(axis=\"x\", labelsize=30)\nax.tick_params(axis=\"y\", labelsize=20)\n\nax.bar(['Hamilton','Rosberg'], [hamQtdRaces,rosQtdRaces], width = 0.25, color = ['c','gray'], align='center')\nax.set_facecolor('whitesmoke')\nplt.title(\"Total of Races Won in Mercedes\",fontsize=30)\nplt.ylabel('Total',fontsize = 15)\nplt.xlabel('Pilots',fontsize = 15,)\nplt.show()\n\nx = list(hamWinsPerYear.index)\ny = hamWinsPerYear\nf,ax = plt.subplots(figsize =(20,10))\nax.tick_params(axis=\"x\", labelsize=15)\nax.tick_params(axis=\"y\", labelsize=30)\n\nax.set_facecolor('k')\nline1, = ax.plot(x, hamWinsPerYear.values, label='Hamilton Wins', color='c',linewidth=4,)\nline2, = ax.plot(x, rosWinsPerYear.values, label='Rosberg Wins' ,linewidth=4, color='lightgray')\nplt.title(\"Total Wins per Year in Mercedes\",fontsize=30)\nplt.ylabel('Total',fontsize = 15)\nplt.xlabel('Years',fontsize = 15,)\nax.legend()\nplt.show()","622a0119":"pd.merge(df_drivers,df_results.loc[(df_results['raceId'] == 940)],on='driverId',how='inner').sort_values(['positionOrder'])[:3]","921ae108":"timeHamilton = df_timeLaps.loc[((df_timeLaps['driverId'] == 1) & (df_timeLaps['raceId']==940))]['time'].iloc[:].values\ntimeRos = df_timeLaps.loc[(df_timeLaps['driverId'] == 3) & (df_timeLaps['raceId']==940)]['time'].iloc[:].values\n\nx = range(0,53)\nf,ax = plt.subplots(figsize =(20,10))\nax.tick_params(axis=\"x\", labelsize=15)\nax.tick_params(axis=\"y\", labelsize=20)\n\nax.set_facecolor((0, 0, 0))\nax.patch.set_alpha(0.9)\nline1, = ax.plot(x, timeHamilton, label='Hamilton Time', color='gray',linewidth=4,)\nline2, = ax.plot(x, timeRos, label='Rosberg Time' ,linewidth=4,)\nplt.title(\"Suzuka GP - Time Laps Comparison - 2014 \",fontsize=30)\nplt.ylabel('Total Seconds(s)',fontsize = 15)\nplt.xlabel('Lap',fontsize = 15,)\nax.legend()\nplt.show()\n","cab80a47":"timeHamilton = df_timeLaps.loc[((df_timeLaps['driverId'] == 1) & (df_timeLaps['raceId']==853))]['time'].iloc[:].values\ntimeShummy = df_timeLaps.loc[(df_timeLaps['driverId'] == 30) & (df_timeLaps['raceId']==853)]['time'].iloc[:].values\nx = range(0,53)\nf,ax = plt.subplots(figsize =(20,10))\nax.tick_params(axis=\"x\", labelsize=15)\nax.tick_params(axis=\"y\", labelsize=20)\n\nax.set_facecolor((0, 0, 0))\nax.patch.set_alpha(0.9)\nline1, = ax.plot(x, timeHamilton, label='Hamilton Time', color='red',linewidth=4,)\nline2, = ax.plot(x, timeShummy, label='Schumacher Time' ,linewidth=4,)\nplt.title(\"Monza GP - Time Laps Comparison - 2011 \",fontsize=15)\nplt.ylabel('Total Seconds(s)',fontsize = 15)\nplt.xlabel('Lap',fontsize = 15,)\nax.legend()\nplt.show()","2ac1bf52":"positionsHamilton = df_timeLaps.loc[((df_timeLaps['driverId'] == 1) & (df_timeLaps['raceId']==853))]['position'].iloc[:].values\npositionsShummy = df_timeLaps.loc[(df_timeLaps['driverId'] == 30) & (df_timeLaps['raceId']==853)]['position'].iloc[:].values\n\nx = range(0,53)\nf,ax = plt.subplots(figsize =(20,10))\nax.tick_params(axis=\"x\", labelsize=15)\nax.tick_params(axis=\"y\", labelsize=20)\n\nax.set_facecolor((0, 0, 0))\nax.patch.set_alpha(0.9)\nline1, = ax.plot(x, positionsHamilton, label='Hamilton Position', color='red',linewidth=4,)\nline2, = ax.plot(x, positionsShummy, label='Schumacher Position' ,linewidth=4,)\nplt.title(\"Monza Gran Prix 2011- Fight for position\",fontsize=15)\nplt.ylabel('Position',fontsize = 15)\nplt.xlabel('Lap',fontsize = 15,)\nax.legend()\nplt.ylim(10, 1)\nplt.show()","050f2493":"racesQualysHam = pd.merge(r.loc[(r['driverRef']=='hamilton') & (r['year']==2017)], df_qualy.loc[(df_qualy['q3']!= 0) & (df_qualy['driverId'] == 1)], on='raceId', how='inner')\nq3s = racesQualysHam['q3'].values\nraceTimes = racesQualysHam['fastestLapTime'].values\nx = racesQualysHam.name.values\n\nf,ax = plt.subplots(figsize =(20,10))\nax.tick_params(axis=\"x\", labelsize=15)\nax.tick_params(axis=\"y\", labelsize=15)\n\nax.set_facecolor('whitesmoke')\nline1, = ax.plot(x, raceTimes, 'bs',c='red',label=\"Race Time\")\nline2, = ax.plot(x, q3s,'bs', c='blue', label=\"Qualy time\")\nplt.title(\"Race vs Qualification\",fontsize=30)\nplt.ylabel('Time (s)',fontsize = 15)\nplt.xlabel('C\u00f3digo da Corrida',fontsize = 15,)\nplt.xticks(rotation=45, ha='right')\nax.legend()\nplt.show()\n","256dbcb1":"qtdMcl = len(r.loc[(r['driverRef']=='hamilton') & (r['positionOrder']==1) & (r['constructorId']==1)])\nqtdMcd = len(r.loc[(r['driverRef']=='hamilton') & (r['positionOrder']==1) & (r['constructorId']==131)])\nqtdQualMCL = len(df_qualy.loc[(df_qualy['driverId'] == 1) & (df_qualy['position'] == 1) & (df_qualy['constructorId'] == 1)])\nqtdQualMCD = len(df_qualy.loc[(df_qualy['driverId'] == 1) & (df_qualy['position'] == 1) & (df_qualy['constructorId'] == 131)])\n\nf,ax = plt.subplots(figsize =(20,10))\nax.tick_params(axis=\"x\", labelsize=15)\nax.tick_params(axis=\"y\", labelsize=30)\n\nax.pie([qtdMcl,qtdMcd], labels=['McClaren','Mercedes'],explode=(0, 0.1),shadow=True,colors=['r','c'],autopct='%1.1f%%')\nax.set_facecolor('whitesmoke')\nplt.title(\"Total of Hamilton's wins per Constructors\",fontsize=20)\nplt.show()\n\nf,ax = plt.subplots(figsize =(20,10))\nax.tick_params(axis=\"x\", labelsize=15)\nax.tick_params(axis=\"y\", labelsize=30)\n\nax.pie([qtdQualMCL,qtdQualMCD], labels=['McClaren','Mercedes'],explode=(0, 0.1),shadow=True,colors=['r','c'],autopct='%1.1f%%')\nax.set_facecolor('whitesmoke')\nplt.title(\"Total of Hamilton's Poles per Constructor\",fontsize=20)\nplt.show()","19606bab":"mclarensRacers = r.loc[(r['constructorId']==1)&(r['positionOrder']==1)].groupby('driverRef')['raceId'].count().sort_values(ascending=False)[:10]\nmclarensRacers = mclarensRacers.sort_values()\n\nmercedesRacers = r.loc[(r['constructorId']==131)&(r['positionOrder']==1)].groupby('driverRef')['raceId'].count().sort_values(ascending=False)[:10]\nmercedesRacers = mercedesRacers.sort_values()\n\nf,ax = plt.subplots(figsize =(20,10))\nax.tick_params(axis=\"x\", labelsize=15)\nax.tick_params(axis=\"y\", labelsize=20)\n\nax.barh(list(mclarensRacers.index), list(mclarensRacers.values),height = 0.9, color = ['whitesmoke','crimson'])\nax.set_facecolor('k')\nax.patch.set_alpha(0.9)\nplt.title(\"Top McLaren's Race Winners\",fontsize=30)\nplt.ylabel('Drivers',fontsize = 15)\nplt.xlabel('Total Wins',fontsize = 15,)\nplt.grid()\nplt.show()\n\nf,ax = plt.subplots(figsize =(20,10))\nax.tick_params(axis=\"x\", labelsize=15)\nax.tick_params(axis=\"y\", labelsize=20)\n\nax.barh(list(mercedesRacers.index), list(mercedesRacers.values),height = 0.9, color = ['c','whitesmoke'])\nax.set_facecolor('k')\nax.patch.set_alpha(0.9)\nplt.title(\"Top Mercedes' Race Winners\",fontsize=30)\nplt.ylabel('Drivers',fontsize = 15)\nplt.xlabel('Total Wins',fontsize = 15,)\nplt.grid()\nplt.show()","a8018700":"*As you can see, Lewis is the British that won the most GPs and Worlds Championships in F1. In 2018 tied with Fangio and overtook Prost and Vettel in number of championships, being only 2 of Michael. In addition, He is very consistent in the championships, winning at least 1 race per season.*","2ecbda67":"<h2> All his Wins in F1 <\/h2>","79cd86eb":"<h2>Favorite Grand Prixs<\/h2>\n<img src=\"http:\/\/www.northstarnewstoday.com\/wp-content\/uploads\/2015\/10\/Hamilton-skipping.jpg\" width=\"500px\"\/>\n<br>\n<i>As you can see in the graph below, his favorites are the US and Canadian GPs, where he accumulates the most wins<\/i>","653b4aaa":"<h1><i>THANKS FOR THE ATENTION SO FAR, I HOPE YOU ENJOYED IT. THAT IS MY FIRST NOTEBOOK ON KAGGLE, I TRIED MY BEST TO SHOW SOME INFORMATION ABOUT THIS WONDERFULL DATASET =D<\/i><\/h1>\n<br>\n<br>\n<i>GUILHERME V MACHADO<\/i>","e73d8c93":"<h2><i>Japanese Grand Prix - 2015<i><\/h2>\n<i>A race that defined this season\u2019s championship battle. Rosberg started on pole, but was out-muscled by Hamilton through turns one and two on the opening lap and never managed to regain the lead, with his British nemesis going on to lead every lap en route to victory. It was an exhibition display from Hamilton as he equalled Ayrton Senna\u2019s tally of 41 grands prix victories.<\/i>\n\n<img src=\"https:\/\/www.racefans.net\/wp-content\/uploads\/2015\/09\/start-p1-941x529.jpg\" \/>","d92c13a6":"<h1>MONZA GRAN PRIX - 2011<\/h1>\n<i>One of my favorite races where Hamilton and Schumacher starred in an incredible race for positions.<\/i>\n\n<img src=\"https:\/\/www.racefans.net\/wp-content\/uploads\/2011\/09\/merc_schu_monz_2011-21.jpg\" \/>","c715b435":"*One of the most interesting graphics showing Hamilton's racing pace. Take a look at lap 32, where he makes his fastest lap in the race, falling below 1.5 secs from his rival*","9e597758":"*With the 2017 season, Hamilton has scored 62 career wins in total*","a8b1d239":"<h2>Podium<\/h2>\n<i>Event though they weren't at the podium that race, they present a very similar performance.<\/i>\n<img src=\"https:\/\/cdn-1.motorsport.com\/static\/img\/amp\/400000\/410000\/412000\/412100\/412100\/s6_34544\/f1-italian-gp-2011-podium-race-winner-sebastian-vettel-red-bull-racing-second-place-jenson.jpg\" width=\"500px\"\/>","18b8f05b":"<h3>Time Laps Comparison between Rosberg and Hamilton<\/h3>\n<i><\/i>\n","a9024b41":"<h2>In an F1 race, is the car or the driver important for winning the race?<\/h2>\n<i>Let's dive into the competition between one of the drivers who challenged Ham was Rosberg winning the 2016 championship<\/i>\n<img src=\"https:\/\/www.racefans.net\/wp-content\/uploads\/2015\/07\/hami-rosb1.jpg\" width=\"1000px\"\/>\n","295cf4a5":"<h1><i> Hamilton for the Constructors<\/i> <\/h1>\n<i>Here we'll look at the importance of builders to Hamilton's career<\/i>","4f5697d5":"<i>The fact that Lewis is one of the best F1 racers we already know, but let's compare with other idols in the category.<\/i>","4d56a54d":"* For McClaren, Hamilton still loses to two legends, Prost and Senna (my biggest idol heheh). This is understandable, because at that time, McClaren had a car far superior to the others and dominated all championships.\n\n* For Mercedes, Hamilton were by far, the best ever to drive the German car, leaving second place with a huge difference in victories.","1368903d":"<h2><i>His performance compared to other legends <\/i><\/h2>","52da1272":"<h3><i>Podium<\/i><\/h3>","799d6d70":"<h1 style =\"font-family: 'Lato', sans-serif; font-size: 54px; font-weight: 300; line-height: 58px; margin: 0 0 58px;\">Lewis Hamilton X-RAY<\/h1>\n<i> Hamilton is now in his 13th season in F1, with five world championships and 81 race wins. Only Michael Schumacher has more, with seven and 91. Hamilton is in every position to surpass the German\u2019s records that most had thought would be untouchable. Since his debut for McLaren in 2007 at 22 when he immediately took the fight to his double world championship-winning teammate, Fernando Alonso, it was clear he would go far.(Obs: The DataSet presented is not updated since 2017)<\/i>\n<img src=\"https:\/\/www.autosport.pt\/wp-content\/uploads\/2019\/08\/hamilton.jpg\"\/>","bce0ace7":"<h1>Leader in Pole Positions in F1<\/h1>\n*Lewis Hamilton is the leader in Poles with 72 pole positions, against 68 of Schumacher*","042c217c":"<h1>ICONIC RACES<\/h1>","1f2f440d":"<h2><i> And the fight for positions <\/i> <\/h2>\n<i>It's funny to see the pit stops strategies and the change of positions between them <\/i>","148c4de3":"<h1>Coclusion<\/h1>\n<i>Twenty-five years after he began karting at Rye House in Hertfordshire, Hamilton has presented his best and it has been simply untouchable. Breaking records after records, winning almost every race since 2018, almost breaking Schumacher record of race wins, and world championships count.<\/i>\n<br>\n<br>\n<i>There is no pilot today that can even fight with LW<\/i>","c8d169bd":"<h2>*Hamilton importance for McClaren and Mercedes.*<\/h2>","fc6b1506":"*In the years of dispute with his teammate Rosberg, he dominated most of the seasons,winning most of the poles and races. Despite losing the championship in the year 20016, he managed to surpass Nico in number of GPs. The same thing is happening to Bottas in the past few races*","6636420b":"<h2><i> Look at the time laps from them <\/i> <\/h2>\n*It's almost the same time*\n","6551da29":"<h1>Fastest lap times (RACE VS QUALI) <\/h1>\n*Consistent also in race, getting a few seconds of your pole time.*"}}