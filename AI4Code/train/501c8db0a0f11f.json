{"cell_type":{"8ffe509d":"code","673de2af":"code","9ef1d6cb":"code","7378d423":"code","73a64018":"code","a5d47973":"code","e605e9c5":"code","786a434d":"code","c50f5fcd":"code","0ffe7665":"code","305aeb0a":"code","2fe4f251":"code","885c1b58":"code","06855f50":"code","0ea4437e":"code","10eace31":"code","cba4524b":"code","91037ce6":"code","e40fe167":"code","1deed627":"code","27623e3b":"code","d638f075":"code","70014129":"code","d2c60b34":"code","b8c86ed6":"code","f3d20d1f":"code","a014b6e5":"code","5d7bdb17":"code","8cc997a2":"code","22c8c4f9":"code","f4974326":"code","09aebb33":"code","fdf4cd04":"code","82b447ac":"code","a02819c8":"code","34aa817e":"code","60928be6":"code","db6b3a02":"code","420fe6b0":"code","bc33ee49":"code","c077239c":"code","5b34d787":"code","db43cb0a":"code","32e34cfa":"code","92aad1e9":"code","a6fa8dd9":"code","213e4f77":"code","025fea75":"code","61ecdecc":"code","fe56a1c6":"code","5755d009":"code","8e8d6b48":"code","77609a63":"code","9ca3b9c4":"code","aec710d3":"code","18a04c54":"code","037d6e02":"code","27a04adb":"code","fd90f0dc":"code","f19e8176":"code","993fd827":"code","28c58572":"code","a29ff179":"code","5b83e267":"code","2826c9a3":"code","2fda9558":"code","a49f33ce":"code","265939b7":"code","90922f2f":"code","3118e5d8":"code","3aab39ff":"code","33337807":"code","62af29a3":"code","6a52ff22":"code","1ee99ff1":"code","7e5b7f79":"code","04fa1e52":"code","c3533455":"code","ebe34ed5":"code","0ae6fdd6":"code","aab78d89":"code","3e4793c4":"code","19f0df6c":"code","f807b45c":"code","5ae3c59a":"code","85816e26":"code","5e5cb487":"code","951283f4":"code","187ea9a4":"code","9c45120c":"code","72072221":"code","08585ee5":"code","401e3567":"markdown"},"source":{"8ffe509d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split,cross_val_score\nfrom sklearn.decomposition import PCA\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import accuracy_score,classification_report,confusion_matrix\nfrom sklearn.metrics import accuracy_score,recall_score,precision_score,f1_score\nfrom sklearn.metrics import roc_curve,roc_auc_score\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.ensemble import GradientBoostingClassifier","673de2af":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","9ef1d6cb":"X_train=pd.read_csv(\"..\/input\/widsdatathon2021\/TrainingWiDS2021.csv\")\nX_test=pd.read_csv(\"..\/input\/widsdatathon2021\/UnlabeledWiDS2021.csv\")","7378d423":"Y_train=X_train['diabetes_mellitus']","73a64018":"x_train=X_train.drop(['Unnamed: 0','encounter_id','hospital_id','diabetes_mellitus'],axis=1)\nx_test=X_test.drop(['Unnamed: 0','encounter_id','hospital_id'],axis=1)","a5d47973":"print(x_train.shape,x_test.shape)","e605e9c5":"sns.countplot(Y_train)\nplt.show()\nprint('Dataset is Unbalanced')\nY_train.value_counts()","786a434d":"x_train.describe()","c50f5fcd":"Missing_values=pd.DataFrame(x_train.isnull().sum()\/(x_train.shape[0]))","0ffe7665":"Missing_values.columns=['Missing ratio']","305aeb0a":"Missing_values.sort_values(by='Missing ratio',ascending=False)","2fe4f251":"col_features=Missing_values[Missing_values['Missing ratio']>0.6].index","885c1b58":"x_train=x_train.drop(labels=col_features,axis=1)\nx_test=x_test.drop(labels=col_features,axis=1)","06855f50":"print(x_train.shape,x_test.shape)","0ea4437e":"count_values = x_train.dropna().nunique().reset_index()\nonly_one = count_values[count_values[0]<2][\"index\"].to_list()","10eace31":"only_one","cba4524b":"x_train.drop(columns=only_one, inplace = True)\nx_test.drop(columns=only_one, inplace = True)","91037ce6":"print(x_train.shape,x_test.shape)","e40fe167":"categorical_features=[]\nnumerical_features=[]\nfor features in x_train.columns:\n    if (x_train[features]).dtype=='O':\n        categorical_features.append(features)\n    elif (x_train[features]).dtype=='int' or (x_train[features]).dtype=='float':\n        numerical_features.append(features)\n","1deed627":"len(numerical_features)","27623e3b":"plt.figure(figsize=(20,20))\nax = sns.boxplot(data=x_train, orient=\"h\", palette=\"Set2\")","d638f075":"df=pd.get_dummies(x_train[categorical_features])\nx_train=pd.concat([x_train,df],axis=1)\ndf2=pd.get_dummies(x_test[categorical_features])\nx_test=pd.concat([x_test,df2],axis=1)","70014129":"print(x_train.shape,x_test.shape)","d2c60b34":"column=[]\nfor i in x_train.columns:\n    if i not in x_test.columns:\n        column.append(i)","b8c86ed6":"column","f3d20d1f":"x_train=x_train.drop(labels=column,axis=1)","a014b6e5":"print(x_train.shape,x_test.shape)","5d7bdb17":"x_train=x_train.drop(labels=categorical_features,axis=1)\nx_test=x_test.drop(labels=categorical_features,axis=1)","8cc997a2":"print(x_train.shape,x_test.shape)","22c8c4f9":"for i in x_train.columns:\n    if (x_train[i]).dtype=='int32' or(x_train[i]).dtype=='float64' :\n        x_train[i] =x_train[i].fillna(x_train[i].mean())\n        x_test[i]=x_test[i].fillna(x_train[i].mean())\n    ","f4974326":"X_train,X_val,Y_train,Y_val=train_test_split(x_train,Y_train,test_size=0.3,stratify=Y_train)","09aebb33":"print(X_train.shape,X_val.shape)","fdf4cd04":"from sklearn.ensemble import RandomForestClassifier","82b447ac":"rnd_clf=RandomForestClassifier(n_estimators=200,verbose=2,n_jobs=-1,random_state=42,class_weight='balanced')","a02819c8":"rnd_clf.fit(X_train,Y_train)","34aa817e":"feature_imp={}\nfor i,j in enumerate(X_train.columns):\n    feature_imp[j]=rnd_clf.feature_importances_[i]","60928be6":"feature_imp_df=pd.DataFrame.from_dict(feature_imp,orient='index')","db6b3a02":"feature_imp_df.columns=['Significance value']","420fe6b0":"\nfeature_imp_df.sort_values(by='Significance value',ascending=False).plot(kind='bar',figsize=(20, 4))","bc33ee49":"feature_selected=feature_imp_df.sort_values(by='Significance value',ascending=False).index[0:10]","c077239c":"feature_selected","5b34d787":"X_train_final=X_train[feature_selected]\nX_val_final=X_val[feature_selected]\nX_test_final=x_test[feature_selected]","db43cb0a":"print(X_train_final.shape,X_val_final.shape,X_test_final.shape)","32e34cfa":"rnd_clf1=RandomForestClassifier(n_estimators=300,verbose=2,n_jobs=-1,random_state=42,class_weight='balanced')\nrnd_clf1.fit(X_train_final,Y_train)\ny_pred1=rnd_clf1.predict(X_val_final)","92aad1e9":"y_pred1=rnd_clf1.predict_proba(X_val_final)","a6fa8dd9":"fpr,tpr,thresholds=roc_curve(Y_val,y_pred1[:,1])\nthresholds=thresholds[2:]","213e4f77":"def plot_roc_curve(fpr, tpr):\n    plt.plot(fpr, tpr, color='orange', label='ROC')\n    plt.plot([0, 1], [0, 1], color='darkblue', linestyle='--')\n    plt.xlabel('False Positive Rate')\n    plt.ylabel('True Positive Rate')\n    plt.title('Receiver Operating Characteristic (ROC) Curve')\n    plt.legend()\n    plt.show()","025fea75":"plot_roc_curve(fpr, tpr)\nprint('AUC :',roc_auc_score(Y_val,y_pred1[:,1]))","61ecdecc":"from sklearn.model_selection import RandomizedSearchCV\nn_est=np.linspace(100,1000,10,dtype=int)\nweights = np.linspace(0.05, 0.95, 20)\nmax_depth=np.linspace(1,10,10,dtype=int)\ndistributions={'class_weight': [{0: x, 1: 1.0-x} for x in weights],'n_estimators':n_est,'max_depth':max_depth}\ngsc = RandomizedSearchCV(estimator=RandomForestClassifier(max_features='log2'),param_distributions=distributions,scoring='accuracy',cv=3,verbose=3,n_jobs=-1,random_state=42)\n\ngrid_result = gsc.fit(X_train_final, Y_train)\nprint(\"Best parameters : %s\" % grid_result.best_params_)","fe56a1c6":"final_clf=RandomForestClassifier(n_estimators= 600,max_depth= 10,class_weight={0: 0.5236842105263158, 1: 0.47631578947368425},\n                                 max_features='log2',n_jobs=-1,verbose=2,random_state=42)","5755d009":"final_clf.fit(X_train_final, Y_train)","8e8d6b48":"y_pred_final=final_clf.predict_proba(X_val_final)","77609a63":"fpr,tpr,thresholds=roc_curve(Y_val,y_pred_final[:,1])\nthresholds=thresholds[2:]","9ca3b9c4":"plot_roc_curve(fpr, tpr)\nprint('AUC :',roc_auc_score(Y_val,y_pred_final[:,1]))","aec710d3":"from sklearn.model_selection import RandomizedSearchCV\n\nn_est=np.linspace(100,1000,10,dtype=int)\nweights = np.linspace(0.05, 0.95, 20)\nmax_depth=np.linspace(1,10,10,dtype=int)\ndistributions={'n_estimators':n_est,'max_depth':max_depth}\ngbsc = RandomizedSearchCV(estimator=GradientBoostingClassifier(max_features='log2'),param_distributions=distributions,scoring='accuracy',cv=3,verbose=3,n_jobs=-1,random_state=42)\n\ngrid_result = gbsc.fit(X_train_final, Y_train)\nprint(\"Best parameters : %s\" % grid_result.best_params_)","18a04c54":"final_clf2=GradientBoostingClassifier(n_estimators= 300,max_depth= 3,\n                                 max_features='log2',verbose=2,random_state=42)\nfinal_clf2.fit(X_train_final, Y_train)","037d6e02":"y_pred_final2=final_clf2.predict_proba(X_val_final)","27a04adb":"fpr,tpr,thresholds=roc_curve(Y_val,y_pred_final2[:,1])\nthresholds=thresholds[2:]","fd90f0dc":"plot_roc_curve(fpr, tpr)\nprint('AUC :',roc_auc_score(Y_val,y_pred_final2[:,1]))","f19e8176":"classification_prob=pd.DataFrame(y_pred_final[:,1])","993fd827":"classification_prob['GB Classifier']=y_pred_final2[:,1]","28c58572":"classification_prob.columns=['RF Classifier','GB Classifier']","a29ff179":"classification_prob['Overall_Avg']=(classification_prob['GB Classifier']+classification_prob['RF Classifier'])\/2","5b83e267":"classification_prob","2826c9a3":"plot_roc_curve(fpr, tpr)\nprint('AUC :',roc_auc_score(Y_val,classification_prob['Overall_Avg']))","2fda9558":"from sklearn.ensemble import AdaBoostClassifier","a49f33ce":"third_clf=AdaBoostClassifier(n_estimators=100,learning_rate=0.8,random_state=42)","265939b7":"third_clf.fit(X_train_final, Y_train)","90922f2f":"y_pred_final3=third_clf.predict_proba(X_val_final)","3118e5d8":"classification_prob['ADABoost Classifier']=y_pred_final3[:,1]","3aab39ff":"fpr,tpr,thresholds=roc_curve(Y_val,y_pred_final3[:,1])\nthresholds=thresholds[2:]","33337807":"plot_roc_curve(fpr, tpr)\nprint('AUC :',roc_auc_score(Y_val,y_pred_final3[:,1]))","62af29a3":"classification_prob['Overall_Avg']=(classification_prob['GB Classifier']+classification_prob['RF Classifier']+classification_prob['ADABoost Classifier'])\/3","6a52ff22":"classification_prob","1ee99ff1":"plot_roc_curve(fpr, tpr)\nprint('AUC :',roc_auc_score(Y_val,classification_prob['Overall_Avg']))","7e5b7f79":"a=np.linspace(0.1,0.99,10)\nb=np.linspace(0.1,0.99,10)\nc=np.linspace(0.1,0.99,10)\n","04fa1e52":"values={}\nfor i in a:\n    for j in b:\n        for k in c:\n            s=(i+j+k)\n            classification_prob['Overall_Avg']=((i\/s)*classification_prob['GB Classifier']+(j\/s)*classification_prob['RF Classifier']\n                                        +(k\/s)*classification_prob['ADABoost Classifier'])\n            \n            values[(i,j,k)]=roc_auc_score(Y_val,classification_prob['Overall_Avg'])","c3533455":"Keymax = max(values, key=values.get) \nprint(Keymax) ","ebe34ed5":"values[Keymax]","0ae6fdd6":"total=sum(Keymax)","aab78d89":"y_test_pred_ADB=third_clf.predict_proba(X_test_final)[:,1]","3e4793c4":"y_test_pred_GB=final_clf2.predict_proba(X_test_final)[:,1]","19f0df6c":"y_test_pred_RF=final_clf.predict_proba(X_test_final)[:,1]","f807b45c":"final_clf_op=pd.DataFrame(y_test_pred_GB)","5ae3c59a":"final_clf_op['RF']=y_test_pred_RF","85816e26":"final_clf_op['ADB']=y_test_pred_ADB","5e5cb487":"final_clf_op.columns=['GB','RF','ADB']","951283f4":"final_clf_op['Overall_Avg']=((Keymax[0]\/total)*final_clf_op['GB']+\n                             (Keymax[1]\/total)*final_clf_op['RF']\n                             +(Keymax[2]\/total)*final_clf_op['ADB'])","187ea9a4":"final_clf_op","9c45120c":"encounter_IDs = pd.read_csv(\"..\/input\/widsdatathon2021\/UnlabeledWiDS2021.csv\")[[\"encounter_id\"]].values","72072221":"df_sub = {'encounter_id': encounter_IDs[:,0], 'diabetes_mellitus':final_clf_op['Overall_Avg']} ","08585ee5":"df_predictions = pd.DataFrame.from_dict(df_sub).set_index(['encounter_id'])\ndf_predictions.to_csv('submission_final.csv')","401e3567":"**Any valuable Suggestions are welcomed**\n\nHappy Kaggling!!\n"}}