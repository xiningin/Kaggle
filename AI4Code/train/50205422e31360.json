{"cell_type":{"faf6bc37":"code","5ab2422d":"code","c07d9505":"code","e6751562":"code","e73f2df6":"code","2d284220":"code","57d6b9a7":"code","6b69006e":"code","27bbc9a2":"code","d1e2867b":"code","496e7a55":"code","2d4451ac":"code","b1826b4c":"code","056ba5b2":"code","c592b56e":"code","fb132050":"code","f04c5d41":"code","be1b27f3":"code","d39e4b90":"code","cdba85f3":"code","b15da31b":"code","6edd1c4a":"code","61ec5688":"code","905d3a89":"code","d7e3014f":"code","6fc1d4ec":"code","d77dee5a":"code","65ad94db":"code","6442af0d":"code","b68f34e6":"code","fda6c00f":"markdown","8e240124":"markdown","ed129204":"markdown","bb7a5d05":"markdown","931e1b49":"markdown","fa9031bb":"markdown","b8f7f2ca":"markdown","38d58a8e":"markdown","3874ea06":"markdown","29a5f363":"markdown","2eea137e":"markdown","4d555ee4":"markdown","6622cb2e":"markdown","ca382dee":"markdown","34bc3df7":"markdown","54d391b3":"markdown","5498be06":"markdown","9ed0647a":"markdown","9e4da101":"markdown","f446835b":"markdown","68a6e52b":"markdown","691ab958":"markdown","52c8f741":"markdown","42cb100b":"markdown","53520f1f":"markdown","d1f5a544":"markdown","9c264ca8":"markdown","97c3c383":"markdown","e9e30181":"markdown","70879005":"markdown","bce5b9c2":"markdown"},"source":{"faf6bc37":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport geopandas as gpd\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nfrom scipy.stats import boxcox\nfrom collections import Counter\nfrom xgboost import XGBRegressor\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\nfrom sklearn.svm import SVR\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.linear_model import SGDRegressor, Lasso, ElasticNet, Ridge\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5ab2422d":"df = pd.read_csv('..\/input\/women-entrepreneurship-and-labor-force\/Dataset3.csv')","c07d9505":"df.head()","e6751562":"for i in np.array(df):\n    values = pd.Series(str(i)[2:-2].split(';'))\n    df = df.append(values, ignore_index=True)","e73f2df6":"df = df[51:].drop('No;Country;Level of development;European Union Membership;Currency;Women Entrepreneurship Index;Entrepreneurship Index;Inflation rate;Female Labor Force Participation Rate', axis=1)\ndf = df.reset_index(drop=True)","2d284220":"df.columns = ['No', 'Country', 'Level of development', 'European Union Membership', 'Currency', \n'Women Entrepreneurship Index', 'Entrepreneurship Index', 'Inflation rate', \n'Female Labor Force Participation Rate']","57d6b9a7":"df['Entrepreneurship Index'] = df['Entrepreneurship Index'].astype(float)\ndf['Country'][list(df['Country']).index('Bosnia and Herzegovina')] = 'Bosnia and Herz.'\ndf = df.drop(list(df['Country']).index('Singapore')).reset_index(drop=True)","6b69006e":"for col in ['Women Entrepreneurship Index', 'Entrepreneurship Index', 'Inflation rate', 'Female Labor Force Participation Rate']:\n    df[col] = df[col].astype(float)","27bbc9a2":"df","d1e2867b":"def mapped(column):\n    world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\n    world.index = world['name']\n    world = world.reindex(df['Country'])\n    world.index = range(len(world))\n    world[column] = df[column]\n    world = world.fillna(0)\n\n    fig, ax = plt.subplots(1, 1, figsize=(15, 15))\n    divider = make_axes_locatable(ax)\n    cax = divider.append_axes(\"right\", size=\"5%\", pad=0.1)\n    ax.set_xlim(-130, 190)\n\n    ax.set_title(column)\n    world.plot(column=column, legend=True, cax=cax, ax=ax, cmap='OrRd', edgecolor='black')\n    plt.show()","496e7a55":"mapped('Entrepreneurship Index')","2d4451ac":"mapped('Women Entrepreneurship Index')","b1826b4c":"mapped('Inflation rate')","056ba5b2":"mapped('Female Labor Force Participation Rate')","c592b56e":"def bar_charts(col, title, x, y, colour='blue'):\n    count = Counter(df[col])\n    bars = plt.bar(count.keys(), count.values(), color=colour)\n\n    for bar in bars:\n        score = list(count.values())[bars.index(bar)]\n        height = bar.get_height()\n        plt.text(bar.get_x() + bar.get_width()\/2., height, score, ha='center', va='bottom')\n\n    plt.title(title)\n    plt.xlabel(x)\n    plt.ylabel(y)\n    plt.show()","fb132050":"bar_charts('Level of development', 'Development of Countries', 'Development', 'Number of Countries')","f04c5d41":"bar_charts('European Union Membership', 'European Member', 'Member or not', 'Number of Countries', 'red')","be1b27f3":"bar_charts('Currency', 'Currency for Countries', 'Type of Currency', 'Number of Countries', 'green')","d39e4b90":"numerical = df[['Women Entrepreneurship Index', 'Entrepreneurship Index', 'Inflation rate', 'Female Labor Force Participation Rate']]\nsns.heatmap(numerical.corr(), annot=True)\nplt.show()","cdba85f3":"def scatter(col1, col2, marker, colour):\n    sns.regplot(data=df, x=col1, y=col2, marker=marker, color=colour)\n    plt.title('Correlation')\n    plt.xlabel(col1)\n    plt.ylabel(col2)\n    plt.show()","b15da31b":"scatter('Women Entrepreneurship Index', 'Entrepreneurship Index', 's', 'blue')","6edd1c4a":"scatter('Women Entrepreneurship Index', 'Female Labor Force Participation Rate', 'x', 'green')","61ec5688":"scatter('Women Entrepreneurship Index', 'Inflation rate', 'o', 'pink')","905d3a89":"scatter('Female Labor Force Participation Rate', 'Inflation rate', 'p', 'lightblue')","d7e3014f":"scatter('Entrepreneurship Index', 'Inflation rate', 'h', 'orange')","6fc1d4ec":"scatter('Entrepreneurship Index', 'Female Labor Force Participation Rate', 'v', 'purple')","d77dee5a":"for col in numerical:\n    fig, axes = plt.subplots(1, 5, figsize=(15, 3))\n    \n    f1 = df[col]\n    f2 = (df[col]+3).transform(np.log)\n    f3 = pd.DataFrame(boxcox(df[col]+3)[0])\n    f4 = pd.DataFrame(StandardScaler().fit_transform(np.array(df[col]).reshape(-1, 1)))\n    f5 = pd.DataFrame(MinMaxScaler().fit_transform(np.array(df[col]).reshape(-1, 1)))\n    \n    for column in [[f1, axes[0], 'pink', 'Normal'], [f2, axes[1], 'lightblue', 'Log Transform'], \n                    [f3, axes[2], 'lightgreen', 'Box Cox'], [f4, axes[3], 'orange', 'Standard Scaler'], \n                    [f5, axes[4], 'skyblue', 'Min Max Scaler']]:\n        feature = column[0]\n        ax = column[1]\n        colour = column[2]\n        name = column[3]\n        \n        feature.hist(ax=ax, color=colour)\n        ax.set_xlabel(name)\n        \n        deciles = feature.quantile([.1, .2, .3, .4, .5, .6, .7, .8, .9])\n        for pos in np.array(deciles).reshape(1, -1)[0]:\n            handle = ax.axvline(pos, color='darkblue', linewidth=1)\n        ax.legend([handle], ['decile'])\n        \n    axes[2].set_title(col)\n    axes[3].set_title('')\n    axes[4].set_title('')\n    \n    plt.show()","65ad94db":"X = np.array(df['Women Entrepreneurship Index']).reshape(-1, 1)\ny = np.array(df['Entrepreneurship Index']).reshape(-1, 1)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)","6442af0d":"models = [['XGBoost', XGBRegressor()], ['Random Forest', RandomForestRegressor()], ['Lasso', Lasso()], \n          ['Elastic Net', ElasticNet()], ['Ridge', Ridge()]]\n\nmodel_score = []\nr2_scores = []\nmae_list = []\nmse_list = []\n\nfor classifier in models:\n    \n    name = classifier[0]\n    model = classifier[1]\n    \n    model.fit(X_test, pd.DataFrame(y_test).values.ravel())\n    y_pred = model.predict(X_test)\n    \n    score = model.score(X_test, y_test)\n    r2 = r2_score(y_test, y_pred)\n    mae = mean_absolute_error(y_test, y_pred)\n    mse = mean_squared_error(y_test, y_pred)\n    \n    model_score.append(score)\n    r2_scores.append(r2)\n    mae_list.append(mae)\n    mse_list.append(mse)\n\n    print(name)\n    print('Model score:        ', score)\n    print('R2 score:           ', r2)\n    print('Mean absolute error:', mae)\n    print('Mean squared error: ', mse)\n    \n    if model != models[-1][1]:\n        print('')","b68f34e6":"fig, axes = plt.subplots(2, 2, figsize=(15, 10))\n\nscores = [model_score, r2_scores, mae_list, mse_list]\nnames = ['XGBoost', 'Random Forest', 'Lasso', 'Elastic Net', 'Ridge']\nscore_names = ['Model Score', 'R2 Score', 'Mean Absolute Error', 'Mean Squared Error']\ncolours = ['red', 'blue', 'green', 'yellow', 'orange']\ni = 0\n\nfor row in axes:\n    for ax in row:\n        bars = ax.bar(names, scores[i], color=colours[i])\n        \n        for bar in bars:\n            score = str(scores[i][bars.index(bar)])[:4]\n            height = bar.get_height()\n            ax.text(bar.get_x() + bar.get_width()\/2., height, score, ha='center', va='bottom')\n        \n        ax.set_title(score_names[i])\n        i += 1\n        \nplt.show()","fda6c00f":"### If you enjoyed this notebook and found it helpful, please give it an upvote and provide feedback as it would help me make more of these.","8e240124":"## Visualising the performances\nAs seen in the final bar chart, the XGBoost has the best scores, followed by Random Forest, while the other algorithms (Lasso, Elastic Net and Ridge) have roughly similar scores.","ed129204":"# Transforming the data\nIn this section, we will be taking a look at how the distributions of the different features are affected as they are transformed using the log, box cox, standard and min max scaler transformations.","bb7a5d05":"## Inflation Rate\nThe map shown below tells us that **Argentina** has the highest inflation rate, followed by **Ghana** and then **Russia**. The other countries all have a relatively low inflation rate.","931e1b49":"## X and y\nWe firstly make X to be our 'Women Entrepreneurship Index' feature and y to be our 'Entrepreneurship Index'. We only need one column for X, as it has a very strong correlation to y.","fa9031bb":"## Women Entrepreneurship Index\nThere is a lot of connection between the 'Entrepreneurship Index' feature and the 'Women Entrepreneurship Index' feature, as countries which do well in one column also do well in the other.","b8f7f2ca":"## Entrepreneurship Index & Female Labor Force Participation Rate\nThese features do have a positive correlation with each other, however there are a lot of anomalies which are in the lower part of the plot.","38d58a8e":"## Level of development\nThe number of developed countries is roughly similar to the developing countries, with there being slightly more developed ones.","3874ea06":"The numerical columns are converted from object to float so that our program can interpret them as numerical.","29a5f363":"# Correlation\nNow we will check how much the features in our dataset correlate to each other.","2eea137e":"# Women Entrepreneurship EDA & Regression\nHello everyone! This notebook aims to do Exploratory Data Analysis (EDA) on the different features for the dataset and creating a regressor which will predict the 'Entrepreneurship Index'.","4d555ee4":"## Women Entrepreneurship Index & Inflation rate\nThe variables have a negative correlation to one another.","6622cb2e":"# Plotting binary data\nThe next step will be using bar charts to graph our binary 'Level of development', 'European Union Membership' and 'Currency' features.","ca382dee":"# Predicting the data\nThe final part of this notebook will be to create regressors that can predict our 'Entrepreneurship Index' column.","34bc3df7":"We will create a subroutine called 'scatter' which creates a seaborn regplot that displays the features scattered against each other and a line representing their connection.","54d391b3":"## European Union Membership\nThere are a lot more countries that are not members of the EU than those that are. The amount that are members is two thirds than that of the amount that are not.","5498be06":"### Thank you for reading my notebook.","9ed0647a":"## Women Entrepreneurship Index & Female Labor Force Participation Rate\nThese columns have a lower association, however there is still some of it, as seen in the following plot.","9e4da101":"## Entrepreneurship Index\nThe subsequent map shows us that, out of our selected countries, **Australia** has the highest Entrepreneurship Index, along with **Iceland** and certain countries in Europe such as **Sweden, Finland and Ireland**. The countries with the least Entrepreneurship Index are **Russia, Thailand, India, Egypt, Algeria, Ghana, Brazil, Mexico and Bolivia**.","f446835b":"## Women Entrepreneurship Index & Entrepreneurship Index\nThese features have a very strong positive correlation which can be seen in the first scatter graph.","68a6e52b":"# Mapping the data\n\nOur first visualisations will be to graph the different features on a map. This will show the value that each country represents in the columns.","691ab958":"Afterwards, we split the X and y into train and test sets.","52c8f741":"# Preparing the dataset\nThe first step we will take is preparing the dataset so that it can be visualised.","42cb100b":"## Female Labor Force Participation Rate & Inflation rate\nMost of the data points are grouped together in the lower right hand corner of the plot, therefore I wouldn't consider there to be a strong connection here.","53520f1f":"## Currency\nThe number of countries that use Euros are less than half of the amount that use their own national currency.","d1f5a544":"## Creating the predictors\nNext, we will be trying out the XGBoost, Random Forest, Lasso, Elastic Net and Ridge regressors and use model score, r2 score, mean absolute error and mean squared error to see how the predictors perform with our X and y.","9c264ca8":"The following 'mapped' subroutine uses Geopandas to create a map and show the value that each country has per feature.","97c3c383":"As we can see, our data is given to us in a bit of an awkward fashion; all of the columns are mushed into one. Therefore, we will seperate it into multiple features.","e9e30181":"## Entrepreneurship Index & Inflation rate\nThe Entrepreneurship Index & Inflation rate do have somewhat of a negative association with each other.","70879005":"The heatmap shown below displays the information that the most correlated features are the \"Entrepreneurship Index\" and the \"Women Entrepreneurship Index\" with 91%. Then the next set is \"Female Labor Force Participation Rate\" and \"Women Entrepreneurship Index\" which have 44%.","bce5b9c2":"## Female Labour Force Participation Rate\nThe Female Labour Force Participation Rate feature has a noticably higher average of values than the rest of the features. Countries in Asia, such as **Russia, China, India, Japan and Thailand** have the highest rate, along with **Australia**. A lot of countries in South America; **Mexico, Brazil, Peru, Argentina, Bolivia and Uruguay** have a moderate Female Labour Force Participation Rate."}}