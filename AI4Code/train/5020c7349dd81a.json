{"cell_type":{"311525de":"code","5f2b8faf":"code","6c7130a1":"code","59a41713":"code","1735c98b":"code","d10a50a1":"code","da6e2be8":"code","ac5c0063":"code","167b53e4":"code","7dde4f48":"code","cbfb65ba":"code","c85c5a6a":"code","3cc532de":"code","927c2b37":"code","f6bcc8c3":"code","71484856":"code","f08eae67":"code","6f4d76b4":"code","9d0559bf":"code","e7c247a9":"code","6170fe97":"code","ddcd4dfc":"code","86dacf7a":"code","1dca8a54":"code","89abc1a4":"code","1b84d214":"code","dd182fe5":"code","047c0f8d":"code","03f23d14":"code","30977066":"code","9b0fab89":"code","3abceb29":"code","cfa4e7ea":"code","30d07730":"code","8bfa7beb":"code","ec369ac9":"code","e788cc24":"code","d1ec6ac3":"code","38606541":"markdown","ec83c12f":"markdown","d7ac9b5d":"markdown","ab034d24":"markdown"},"source":{"311525de":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","5f2b8faf":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom datetime import datetime\n","6c7130a1":"df= pd.read_csv('\/kaggle\/input\/avocado-prices\/avocado.csv')","59a41713":"df","1735c98b":"# the data column should be convertedin readable form\ndf['Date']=pd.to_datetime(df['Date'])","d10a50a1":"df['region'].unique()","da6e2be8":"#Let's start with Scatterplot\n\nplt.scatter(df.year,df.AveragePrice)","ac5c0063":"plt.plot(df.year,df.AveragePrice,'g--',markersize=5)","167b53e4":"# calculating average price for different\ntypes=df.type.unique()\navg=[]\n\nfor i in types:\n    x = df[df.type == i]\n    avg.append(sum(x['AveragePrice'])\/len(x))\nsns.barplot(types,avg,ci=110,palette = 'afmhot_r')\nplt.xlabel('Types')\nplt.ylabel(\"Average Price\")\nplt.title('Average price of  different types Avacado ')","7dde4f48":"reg = df.region.unique()\navgr=[]\nfor i in reg:\n    x = df[df.region == i]\n    avgr.append(sum(x['AveragePrice'])\/len(x))\n    \n\nplt.figure(figsize=(22,9))\na=plt.xticks(rotation=70)\nplt.xlabel('Regions')\nplt.ylabel('Average_Price')\nplt.title('Average price of each region')    \nsns.barplot(reg,avgr,ci=150,palette ='inferno')\n","cbfb65ba":"sns.distplot(df.year)","c85c5a6a":"#price trend per year\n\nyr = df.year.unique()\navgy=[]\nfor i in yr:\n    x = df[df.year == i]\n    avgy.append(sum(x['AveragePrice'])\/len(x))\n    \n\nplt.figure(figsize=(12,9))\na=plt.xticks(rotation=70)\nplt.xlabel('Year')\nplt.ylabel('Average_Price')\nplt.title('Price trend every trend')    \nsns.lineplot(yr,avgy)\n","3cc532de":"# price trend monthly for different  for alabany \n","927c2b37":"df['Date']=pd.to_datetime(df['Date'])","f6bcc8c3":"df['Month']=pd.DatetimeIndex(df['Date']).month","71484856":"df['Month-Year'] = df['Month'].map(str)+'-'+df['year'].map(str)","f08eae67":"z=df[['Month-Year','AveragePrice','Total Volume']]","6f4d76b4":"z=z.groupby(by='Month-Year').mean()","9d0559bf":"z=z.reset_index()\n","e7c247a9":"plt.figure(figsize=(22,10))\nplt.ylabel(\"AveragePrice\")\n_=plt.xticks(rotation=80)\nplt.plot(z['Month-Year'],z['AveragePrice'])\n","6170fe97":"plt.figure(figsize=(10,9))\nplt.scatter(z['AveragePrice'],z['Total Volume'])\nplt.xlabel('AveragePrice')\nplt.ylabel('Average Volume')\nplt.title('Average Proce per volume')\n","ddcd4dfc":"plt.figure(figsize=(12,8))\np=z.pivot('Month-Year','AveragePrice','Total Volume')\nsns.heatmap(p,cmap='inferno')","86dacf7a":"org = df['type']=='organic'\ng = sns.factorplot('AveragePrice','region',data=df[org],hue='year',size=13,palette='mako',join=False)","1dca8a54":"bag=df.groupby(by='region').sum()\nbag.reset_index(inplace=True)","89abc1a4":"plt.figure(figsize=(15,9))\nsns.set_style='dark grid'\nplt.plot(bag['region'],bag['Small Bags'],color='y',alpha=.9)\nplt.plot(bag['region'],bag['Large Bags'],color='r',alpha=.8)\nplt.plot(bag['region'],bag['XLarge Bags'],color='g',alpha=.7)\n_=plt.xticks(rotation=80)\nplt.show()","1b84d214":"data= pd.read_csv('\/kaggle\/input\/avocado-prices\/avocado.csv')\ndata['Date'] = pd.to_datetime(data['Date'])\n","dd182fe5":"from fbprophet import Prophet","047c0f8d":"df = data[['Date','AveragePrice']]\n\ndf = df.rename(columns={'Date':'ds', 'AveragePrice':'y'})","03f23d14":"m = Prophet()\nm.fit(df)","30977066":"# our future forecast of price\n\nfuture = m.make_future_dataframe(periods=365)\nfuture.tail()","9b0fab89":"forecast = m.predict(future)\nforecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()\n","3abceb29":"fig1 = m.plot(forecast)","cfa4e7ea":"fig2=m.plot_components(forecast)","30d07730":"from fbprophet.plot import plot_plotly\nimport plotly.offline as py\npy.init_notebook_mode()\n\nfig = plot_plotly(m, forecast)  # This returns a plotly Figure\npy.iplot(fig)","8bfa7beb":"#after removing outliers\nfuture = m.make_future_dataframe(periods=1096)\nforecast = m.predict(future)\nfig = m.plot(forecast)","ec369ac9":"# finding the inflation in price\n\ndf['cap'] = 8.5\n","e788cc24":"m = Prophet(growth='logistic')\nm.fit(df)\n","d1ec6ac3":"future = m.make_future_dataframe(periods=1826)\nfuture['cap'] = 8.5\nfcst = m.predict(future)\nfig = m.plot(fcst)\n","38606541":"# Thanks for giving your time","ec83c12f":"# Let's begin with our forecasting of prices","d7ac9b5d":"Learn More about this forecasting API [here](https:\/\/facebook.github.io\/prophet\/docs\/saturating_forecasts.html#forecasting-growth)","ab034d24":"Let's begin with Matplotlib package"}}