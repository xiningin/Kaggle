{"cell_type":{"a3be7301":"code","ee3ac090":"code","ae184ed6":"code","5cfe6c37":"code","d4b97a46":"code","ad59860d":"code","2c70133d":"code","35f93d94":"code","f498328e":"code","a079b7af":"code","7d7f9f39":"code","aaa1a1b9":"code","91c2e81e":"code","3d3a9f04":"code","db1bf251":"code","b2d5d0df":"code","ef6a2ee2":"code","c83e50c4":"code","94277d58":"code","4a3e3f0e":"code","35e4d480":"code","1cfc3e73":"code","3f0cd26f":"code","59f34536":"code","1eaa4f16":"code","0532a6b2":"code","aa682237":"code","5e7cf41e":"code","53401f22":"code","5a86799d":"code","48c050b4":"code","8a301879":"code","ad6e1294":"code","49b01a80":"markdown","62bdf411":"markdown","7d01771e":"markdown","31cd68da":"markdown","50578ea2":"markdown","cf1e7c71":"markdown","bdad39e3":"markdown","a2a301c1":"markdown","f4d3194a":"markdown","c5d5ce92":"markdown","77d89bbb":"markdown","c0538c10":"markdown","cab2ee06":"markdown"},"source":{"a3be7301":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ee3ac090":"import matplotlib.pyplot as plt\nimport seaborn as sns","ae184ed6":"global_temp = pd.read_csv(\"\/kaggle\/input\/climate-change-earth-surface-temperature-data\/GlobalTemperatures.csv\")\nglobal_temp.head()","5cfe6c37":"global_temp","d4b97a46":"global_temp.isnull().sum()","ad59860d":"print(\"Checking the date range. Length of df: %i\\tCalculated val: %i\" %(len(global_temp[\"dt\"]), (2015-1750) * 12))","2c70133d":"# what values for global temp are null? Ans: 12 in the first 32 months contain NaN.\nglobal_temp[pd.isnull(global_temp[\"LandAverageTemperature\"])]","35f93d94":"# when do we start getting data for max, min, and ocean temp? Ans: 1850-2016\nglobal_temp[pd.isnull(global_temp[\"LandMaxTemperature\"])]","f498328e":"global_temp.describe()","a079b7af":"# does the month of august display a lot of variation from 1750-1753? Ans: Not really. Temperature seems stable at 14 degrees\n\nglobal_temp.iloc[range(7, 7 + 12*4, 12), :]","7d7f9f39":"# does the month of january display a lot of variation from 1750-1753? Ans: Not sure, there is a significant decrease in 1752 lets look at\n#                                                                           a few more years to see if this is an anomaly.\n\nglobal_temp.iloc[range(0, 12*4, 12), :]","aaa1a1b9":"# Ans: Temperature shows a significant variance suggesting that it is not ideal to impute using previous years.\nglobal_temp.iloc[range(0, 12*10, 12), :]","91c2e81e":"global_temp.iloc[range(11, 11 + 12*10, 12)]","3d3a9f04":"global_temp = global_temp.iloc[12*4:,:]\n","db1bf251":"global_temp","b2d5d0df":"global_temp.isnull().sum()","ef6a2ee2":"# Has the average land temperature in July changed from 1754-1759 to 2010-2015? Ans: Increased by 0.45 degrees\n\n# index has been offset by 48 so take that into account!\nold_avg_july_temp = np.mean(global_temp.iloc[range(5, 5 + 12 * 6, 12), 1])\ncurr_avg_july_temp = np.mean(global_temp.iloc[range(3186 - 48 - 12 * 5, 3186 - 48, 12), 1])\nprint(\"Change in temperature: %.2f\" %(curr_avg_july_temp - old_avg_july_temp))","c83e50c4":"temps = []\ndates = []\nfor idx in range(0, 3191-48, 12 * 10):\n    temps.append(np.mean(global_temp.iloc[idx:idx + 12 * 10, 1]))\n    dates.append(global_temp.iloc[idx, 0])\n    \ndecade_temps = pd.DataFrame({\"decade\" : dates, \"avg_temp\" : temps})\ndecade_temps","94277d58":"plt.figure(figsize=(14,14))\nplt.xticks(rotation=90)\nsns.scatterplot(data=decade_temps, x=\"decade\", y=\"avg_temp\")","4a3e3f0e":"# whats the avg temp change from 1750s to 2015? Ans: 1.55\nprint(\"Average temperature change: %.2f\" %(temps[-1] - temps[0]))","35e4d480":"# map dates to ordinal values. 0 - 26.\n\ndecade_temps[\"decade\"] = decade_temps.index\ndecade_temps.head()","1cfc3e73":"# try out 2nd order polynomial regression and use it to predict temperatures in the future\nfrom scipy.optimize import curve_fit\n\ndef objective_function(x, a, b, c, d):\n    return a * x**2 + b * x + c\n\npopt, _ = curve_fit(objective_function, decade_temps[\"decade\"], decade_temps[\"avg_temp\"])\na, b, c, d = popt\nfor date in [(\"2025\", 27), (\"2035\", 28), (\"2045\", 29), (\"2055\", 30)]:\n    print(\"Average global land temperature in %s: %.3f\" %(date[0], objective_function(date[1], a, b, c, d)))","3f0cd26f":"country_temps = pd.read_csv(\"\/kaggle\/input\/climate-change-earth-surface-temperature-data\/GlobalLandTemperaturesByCountry.csv\")\ncountry_temps","59f34536":"# How many nulls do we have?\ncountry_temps.isnull().sum()","1eaa4f16":"country_temps[pd.isnull(country_temps[\"AverageTemperature\"])]","0532a6b2":"country_temps[\"Country\"].nunique()","aa682237":"'''It seems as though some of the poorer countries have a lot of nulls. As a solution, we will go through each country and \n   calculate the % of values that are NaN. If there are more than 40% NaN values, we will discard the country.'''\n\ncountries_to_throw = []\nfor country in country_temps[\"Country\"].unique():\n    country_df = country_temps[country_temps[\"Country\"] == country]\n    if len(country_df[pd.isnull(country_df[\"AverageTemperature\"])]) \/ 577462 > 0.4:\n        countries_to_throw.append(country)\nprint(countries_to_throw)","5e7cf41e":"# do some countries not have data before certain periods of time?\n# i arbitrarily picked a year to split the dataset at: 1900\n\n#country_temps[country_temps[\"dt\"] == \"1900-01-01\"]\ncountry_temps[\"dt\"] = pd.to_datetime(country_temps[\"dt\"])\nafter_1900 = country_temps[country_temps[\"dt\"] >= \"1900-01-01\"]\nafter_1900.isnull().sum()","53401f22":"after_1900.iloc[2, :][\"dt\"]","5a86799d":"def impute_temp(row):\n    \n    if pd.isnull(row[\"AverageTemperature\"]):\n        curr_yr = row[\"dt\"].year\n        # get df with values from same country in the same year.\n        in_yr = after_1900[(after_1900[\"dt\"] >= f\"{curr_yr}-01-01\") & (after_1900[\"dt\"] < f\"{curr_yr + 1}-01-01\") & \n                           (after_1900[\"Country\"] == row[\"Country\"])]\n        row[\"AverageTemperature\"] = np.mean(in_yr[\"AverageTemperature\"])\n        \n        if pd.isnull(row[\"AverageTemperature\"]):\n            # the entire year is null so the mean is also null\n            # in this case we will impute from the next non-NaN value in same month but successive years.\n            counter = 1\n            while 0:\n                print(counter)\n                next_val = after_1900[after_1900[\"dt\"] == f\"{curr_yr + counter}-{row['dt'].month}-{row['dt'].day}\"]\n                if not pd.isnull(next_val):\n                    # if the temp in the same month but curr_yr + counter is not null we use it and break\n                    row[\"AverageTemperature\"] = next_val\n                    break\n                counter += 1\n    return row\n\nafter_1900 = after_1900.apply(impute_temp, axis=1)","48c050b4":"print(after_1900.iloc[11, :])","8a301879":"after_1900.isnull().sum()","ad6e1294":"null_country_df = country_temps[pd.isnull(country_temps[\"AverageTemperature\"])]\nprint(null_country_df.head())","49b01a80":"Yup, looks like we are right. I think I will just start analysis from 1753.","62bdf411":"As you can see, the number of NaN values has significantly dropped by removing dates from before 1900. ","7d01771e":"Oof the future does not look very bright! However, it is unlikely that the rate of temperature increase will continue to increase mainly because slowly but steadily we are cutting our carbon emissions.","31cd68da":"There are two main ways we can deal with NaN values for LandAverageTemperature; firstly, we can choose to start our analysis from 1753 since there are no nan values after that point. On the other hand, we can impute the value from the previous year in the same month to estimate the temperature. This is okay to do because the nan values are early on, before climate change really took off, so we can expect the temperature change to be small. We can test this hypothesis by looking at the temperatures for a few months from 1750-1753 and see if there is a large variation or not.","50578ea2":"Lets create a new dataframe that contains the average temperature each decade until 2015.","cf1e7c71":"At first glance, it looks like this dataset will contain a lot of NaNs because it is unlikely that people recorded the max and min temperature before 1900.\n\nThe dt column is in YYYY-MM-DD format. So there are 12 samples per year starting from 1750.","bdad39e3":"As expected, it looks like global land temperatures start to increase rapidly from 1954. In 2015, it is 1.55 degrees higher. Kinda scary! Lets try to fit a model to predict future temperatures.","a2a301c1":"I will do something similar as before; calculate the average temperature of each country over a decade until 2013.","f4d3194a":"It is possible that winter months have a high variance of temperature, meanwhile, summer months have a relatively consistent temperature range. Lets have a look for the month of december.","c5d5ce92":"Nevermind, looks like I was wrong. We still need to deal with all of these missing NaN values. The next best solution I can think of is to impute the temperature from the first preceding non-NaN temperature. I.e., if 1845 July has missing temperature then we will impute the temperature from June. If June is missing, then we go with May and so on. This probably is not the best way but for a basic analysis it is suitable. Another possible method is to calculate the average temperature of all non-NaN months in that year and impute the average, however, this will not be accurate since temperatures can vary widely between seasons.\n\nIt is also possible that we get a long string of NaN's, even for a full year. It is likely that this will occur in the earlier years when data was not being collected.\n\nA clever but difficult imputation method would be to look for neighbouring countries temperature in the same time period as you encounter a NaN.","77d89bbb":"<h1><center>Analysis of global temperatures<\/center><\/h1>\n<h2><center>By Anirudh Lakra<\/center><\/h2>\n<h3><center>Last updated: 05\/08\/2021<\/center><\/h3>\n\nIn this notebook, I will be looking for evidence of climate change in from Berkeley Earth's dataset, \"Climate Change: Earth Surface Temperature Data\", available [here.](https:\/\/www.kaggle.com\/berkeleyearth\/climate-change-earth-surface-temperature-data)","c0538c10":"Now we can begin analysis of temperature change!","cab2ee06":"Lets have a look at which countries are seeing the fastest increase in temperature!"}}