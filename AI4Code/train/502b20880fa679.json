{"cell_type":{"8b8af02e":"code","beeb8d10":"code","a2604088":"code","06c1466f":"code","b824332d":"code","955c5767":"code","8aa17f02":"code","570c0bc7":"code","d6780a7e":"code","59ecf5f6":"code","a39fdd6c":"code","b6a7a725":"code","3b60f9d8":"code","ab776e74":"code","413bb499":"code","405f352a":"code","8eb249f0":"code","452438fc":"code","8c82f8f6":"code","31636882":"code","02f7c7d8":"code","7debe3b0":"code","c3a2a5e6":"code","fdccfbae":"code","80fe442e":"code","78d879b6":"code","7f461aca":"code","8ed598d5":"code","ee322afd":"code","d5118038":"code","397c5dac":"code","17a133bb":"code","047891ad":"code","d11a3771":"code","3fb24af2":"code","2f1f3b25":"code","f8bbd45d":"code","d7b09415":"code","1370e5e2":"code","9396b12a":"code","a601f05d":"code","ffa6a357":"code","ee161508":"code","e1072caf":"code","eaad0ad8":"code","23a7478c":"code","5fe7c88d":"code","d57a56ae":"code","7e7a7561":"code","b7237849":"code","8e579403":"code","65c607f7":"code","b3d759e5":"code","d15357d2":"code","b5a7c17e":"code","4208087a":"code","5f89afe5":"code","d608517b":"code","ee235718":"code","844b8a62":"code","593b146b":"code","46e07b81":"code","d8fcb538":"code","0088344a":"code","0bc0742e":"code","1e90d880":"code","4288c25f":"code","b57add4d":"code","0b2c07ea":"code","56682480":"code","56391056":"code","ae0d629d":"code","24f6837b":"code","36f76849":"code","126a9cb3":"code","a01edaf2":"code","65efa5b2":"code","ce81d425":"code","68a697bc":"code","51ed6343":"code","10d8459f":"code","27c940ba":"code","8499d113":"code","9f51eea3":"code","7ceca650":"code","28c229b2":"code","c3626899":"code","b0b1dde7":"code","ff509947":"code","a1ad4333":"code","16233d81":"code","6a3e6344":"code","60c107a1":"code","1d27ab4d":"code","1034a526":"code","5512a7e7":"code","dd049b1f":"code","221f9b98":"code","6c791e18":"code","2c57d3e9":"code","1ddaaf99":"code","d6f2c5df":"code","d5ef2ee4":"code","67772666":"code","4e93ad32":"code","9e814c8f":"code","ef83dd9f":"code","d910a94c":"code","53e60510":"code","2768dd61":"code","6c080cc5":"code","b5ac01ac":"code","cc475cb4":"code","a03c5194":"code","0a3f874c":"code","1e435b32":"code","84b7c5f4":"code","6ac5c63c":"code","66b3b9f0":"code","cb5373be":"code","c8363548":"code","f385ab77":"code","8c9997a5":"code","7059b1b3":"code","5817a179":"code","aaf933ec":"code","a4c6d9d2":"code","73e27030":"code","3e31bad0":"code","31f0bd43":"code","23bbb6a8":"code","30dcd9a0":"code","2819b89b":"code","eea7964f":"code","618ba9a6":"code","0496a551":"markdown","9a22a3fa":"markdown","bfc6b905":"markdown","cab4b583":"markdown","f8366e1b":"markdown","93a9aefc":"markdown","9db5bed6":"markdown","cd988fca":"markdown","e97bcc89":"markdown","144be4d1":"markdown","b0632784":"markdown","ffcfb0c7":"markdown","9917fbd8":"markdown","03dab94d":"markdown","ee3092ee":"markdown","6da3c1c3":"markdown","9bb7f6d5":"markdown","013baa20":"markdown","48bd2da8":"markdown"},"source":{"8b8af02e":"\nimport pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nimport missingno as msno \n","beeb8d10":"data=pd.read_csv(\"\/kaggle\/input\/adult-census-income\/adult.csv\")\ndf=data.copy() \ndf.head()","a2604088":"df.rename({\"education.num\":\"educational-num\",\"marital.status\":\"marital-status\",\"sex\":\"gender\",\"capital.gain\":\"capital-gain\",\"capital.loss\":\"capital-loss\",\n         \"hours.per.week\":\"hours-per-week\",\"native.country\":\"native-country\"},axis=1,inplace=True)","06c1466f":"print(\"Rows : {} \\nColumns : {}\".format(df.shape[0],df.shape[1]))","b824332d":"sns.countplot(df[\"income\"],palette=\"bright\")","955c5767":"numeric_describe=df.describe().T \nnumeric_describe  ","8aa17f02":"object_describe=df.describe(include=[\"object\"]).T \nobject_describe","570c0bc7":"object_columns=df.select_dtypes(include=[\"object\"]).columns \nfor i in range(len(object_columns)):\n    print(\"----- {}-----\".format(object_columns[i]))\n    print(df[object_columns[i]].value_counts()) ","d6780a7e":"df.isnull().sum() ","59ecf5f6":"df=df.replace(\"?\",np.nan) ","a39fdd6c":"df.isnull().sum() ","b6a7a725":"nan_percentage = df.isna().sum() * 100 \/ len(df)\nmissing_percentage_df = pd.DataFrame({'column_name': df.columns, 'percent_missing': nan_percentage}).reset_index(drop=True)\nmissing_percentage_df","3b60f9d8":"msno.matrix(df) ","ab776e74":"sns.pairplot(df) ","413bb499":"#sns.pairplot(df,hue=\"income\",palette=\"bright\")","405f352a":"df.dtypes ","8eb249f0":"df[\"education\"].value_counts() ","452438fc":"df[\"educational-num\"].value_counts()","8c82f8f6":"df.drop(\"education\",axis=1,inplace=True) ","31636882":"df.head()","02f7c7d8":"from pandas.api.types import CategoricalDtype  \ndf[\"educational-num\"]=df[\"educational-num\"].astype(CategoricalDtype(ordered=True)) \ndf[\"educational-num\"].head()","7debe3b0":"df[\"educational-num\"].value_counts()","c3a2a5e6":"df.dtypes","fdccfbae":"df.head()","80fe442e":"df.corr() ","78d879b6":"plt.figure(figsize=(12,6))\nplt.rcParams.update({'font.size': 15})\ncorr=df.corr()\nmask=np.zeros_like(corr,dtype=np.bool)\nmask[np.triu_indices_from(mask)]=True\nsns.heatmap(corr.abs(),annot=True,cmap=\"coolwarm\",mask=mask) ","7f461aca":"sns.set(font_scale=2)\nplt.figure(figsize=(32,16)) \n#plt.rcParams.update({'font.size': 20}) \nplt.subplot(221)\nsns.countplot(df[\"workclass\"],hue=df[\"income\"])\nplt.xticks(rotation=90) \n\nplt.subplot(222)\nsns.countplot(df[\"marital-status\"],hue=df[\"income\"])\nplt.xticks(rotation=90)\n\nplt.subplot(223)\nsns.countplot(df[\"gender\"],hue=df[\"income\"])\nplt.xticks(rotation=90)\n\nplt.subplot(224)\nsns.countplot(df[\"race\"],hue=df[\"income\"])\nplt.xticks(rotation=90)\n\nplt.subplots_adjust(hspace=1) \nplt.show()","8ed598d5":"df.skew() ","ee322afd":"df.kurtosis() ","d5118038":"\nplt.figure(figsize=(30,15))\nplt.rcParams.update({'font.size': 20})\nplt.subplot(321)\nsns.boxplot(df[\"age\"])\nplt.xticks(rotation=90) \n\nplt.subplot(322)\nsns.boxplot(df[\"capital-loss\"])\nplt.xticks(rotation=90)\n\nplt.subplot(323)\nsns.boxplot(df[\"capital-gain\"])\nplt.xticks(rotation=90)\n\nplt.subplot(324)\nsns.boxplot(df[\"fnlwgt\"])\nplt.xticks(rotation=90)\n\nplt.subplot(325)\nsns.boxplot(df[\"hours-per-week\"])\nplt.xticks(rotation=90)\n\nplt.subplots_adjust(hspace=0.6) \nplt.show()","397c5dac":"df_loss_withoutzero=df.loc[df[\"capital-loss\"]!=0,:] \ndf_loss_withoutzero.head()","17a133bb":"df_gain_withoutzero=df.loc[df[\"capital-gain\"]!=0,:] \ndf_gain_withoutzero.head()","047891ad":"\nplt.figure(figsize=(22,7))\n\nplt.subplot(121)\nsns.boxplot(df_gain_withoutzero[\"capital-gain\"])\nplt.xticks(rotation=90) \n\nplt.subplot(122)\nsns.boxplot(df_loss_withoutzero[\"capital-loss\"])\nplt.xticks(rotation=90)","d11a3771":"numeric_columns=list(df.select_dtypes(include=[\"int64\"]).columns) \nnumeric_columns","3fb24af2":"lower_limits=[]\nupper_limits=[]\nIQR_values=[]\n\nfor i in range(len(numeric_columns)):\n    \n    Q1=df[numeric_columns[i]].quantile(0.25) \n    Q3=df[numeric_columns[i]].quantile(0.75) \n    IQR=Q3-Q1 \n    IQR_values.append(IQR)\n    lower_limit=Q1-(1.5*IQR) \n    lower_limits.append(lower_limit)\n    upper_limit=Q3+1.5*IQR \n    upper_limits.append(upper_limit)","2f1f3b25":"IQR_table=pd.DataFrame({\"numeric_columns\":numeric_columns,\"lower_limits\":lower_limits,\n                        \"upper_limits\":upper_limits,\"IQR_values\":IQR_values})\nIQR_table ","f8bbd45d":"Q1_loss=df[df[\"capital-loss\"]!=0][\"capital-loss\"].quantile(0.25)\nQ3_loss=df[df[\"capital-loss\"]!=0][\"capital-loss\"].quantile(0.75)\nIQR_loss=Q3_loss-Q1_loss\nlower_limit_loss=Q1_loss-(1.5*IQR_loss)\nupper_limit_loss=Q3_loss+(1.5*IQR_loss)\n\nprint(\"Capital-Loss Lower Limit :\",lower_limit_loss)\nprint(\"Capital-Loss Upper Limit :\",upper_limit_loss)","d7b09415":"Q1_gain=df[df[\"capital-gain\"]!=0][\"capital-gain\"].quantile(0.25)\nQ3_gain=df[df[\"capital-gain\"]!=0][\"capital-gain\"].quantile(0.75)\nIQR_gain=Q3_gain-Q1_gain\nlower_limit_gain=Q1_gain-(1.5*IQR_gain)\nupper_limit_gain=Q3_gain+(1.5*IQR_gain)\n\nprint(\"Capital-Gain i\u00e7in Lower Limit :\",lower_limit_gain)\nprint(\"Capital-Gain i\u00e7in Upper Limit:\",upper_limit_gain)","1370e5e2":"df_loss_withoutzero[(df_loss_withoutzero[\"capital-loss\"]<lower_limit_loss )|( df_loss_withoutzero[\"capital-loss\"]>upper_limit_loss)][\"capital-loss\"].shape","9396b12a":"df_gain_withoutzero[(df_gain_withoutzero[\"capital-gain\"]<lower_limit_gain )|( df_gain_withoutzero[\"capital-gain\"]>upper_limit_gain)][\"capital-gain\"].shape","a601f05d":"df_gain_withoutzero[\"capital-gain\"].mode()[0] ","ffa6a357":"df_loss_withoutzero[\"capital-loss\"].mode()[0]","ee161508":"df[((df[\"capital-gain\"]!=0 )& (df[\"capital-gain\"]<lower_limit_gain )) | ((df[\"capital-gain\"]!=0 )& (df[\"capital-gain\"]>upper_limit_gain ))].head()","e1072caf":"outlier_gain=((df[\"capital-gain\"]!=0 )& (df[\"capital-gain\"]<lower_limit_gain )) | ((df[\"capital-gain\"]!=0 )& (df[\"capital-gain\"]>upper_limit_gain ))","eaad0ad8":"outlier_loss=((df[\"capital-loss\"]!=0 )& (df[\"capital-loss\"]<lower_limit_loss)) | ((df[\"capital-loss\"]!=0 )& (df[\"capital-loss\"]>upper_limit_loss ))","23a7478c":"df.loc[outlier_gain,\"capital-gain\"]=df_gain_withoutzero[\"capital-gain\"].mode()[0]","5fe7c88d":"df.loc[outlier_loss,\"capital-loss\"]=df_loss_withoutzero[\"capital-loss\"].mode()[0]","d57a56ae":"print(\"outlier number for age: {}\".format(df[(df[\"age\"]<(lower_limits[0]))|(df[\"age\"]>(upper_limits[0]))].shape[0]))","7e7a7561":"print(\"outlier number for hours-per-week : {}\".format(df[(df[\"hours-per-week\"]<(lower_limits[4]))|(df[\"hours-per-week\"]>(upper_limits[4]))].shape[0]))","b7237849":"df.drop(df[df[\"age\"]>upper_limits[0]].index,inplace=True) ","8e579403":"df.head()","65c607f7":"print(\"Final Weight Outlier Number :{}\".format(df[(df[\"fnlwgt\"]<(lower_limits[1]))|(df[\"fnlwgt\"]>(upper_limits[1]))].shape[0]))","b3d759e5":"df.drop(df[df[\"fnlwgt\"]>900000].index,inplace=True) ","d15357d2":"numeric_describe","b5a7c17e":"numeric_describe_2=df.describe().T","4208087a":"plt.figure(figsize=(12,6))\nplt.rcParams.update({'font.size': 15})\ncorr=df.corr()\nmask=np.zeros_like(corr,dtype=np.bool)\nmask[np.triu_indices_from(mask)]=True\nsns.heatmap(corr.abs(),annot=True,cmap=\"coolwarm\",mask=mask) ","5f89afe5":"df.isnull().sum() ","d608517b":"msno.matrix(df)","ee235718":"df[\"occupation\"].value_counts().plot.barh(color=\"red\")","844b8a62":"df[\"workclass\"].value_counts().plot.barh(color=\"orange\")","593b146b":"df[\"native-country\"].value_counts()","46e07b81":"\nfor i in [\"occupation\",\"workclass\",\"native-country\"]:\n    df[i].fillna(df[i].mode()[0],inplace=True)\n","d8fcb538":"df.isnull().sum().sum() ","0088344a":"df[\"occupation\"].value_counts()","0bc0742e":"df[\"workclass\"].value_counts()","1e90d880":"numeric_describe","4288c25f":"numeric_describe_2","b57add4d":"df.head()\ndf_new=df.copy()","0b2c07ea":"df_new=pd.get_dummies(df_new,columns=[\"gender\",\"income\"],drop_first=True) ","56682480":"df_new.head()","56391056":"df_new.rename({\"gender_Male\":\"gender\",\"income_>50K\":\"income\"},axis=1,inplace=True)\n","ae0d629d":"df_new=pd.get_dummies(df_new,columns=[\"workclass\",\"marital-status\",\"occupation\",\"relationship\",\"race\",\"native-country\"])","24f6837b":"df_new.head()","36f76849":"print(\"New Column Number :\",df_new.shape[1])","126a9cb3":"df_new.columns \n","a01edaf2":"df_new.shape","65efa5b2":"from sklearn.model_selection import train_test_split ","ce81d425":"df_new.head()","68a697bc":"df_new[\"income\"].value_counts()","51ed6343":"X=df_new.drop(columns=[\"income\"],axis=1)\nX[\"educational-num\"]=X[\"educational-num\"].astype(\"int\") ","10d8459f":"y=df_new[\"income\"]","27c940ba":"X_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.33, \n                                                    random_state=42) ","8499d113":"print(\"X_train row number :\",X_train.shape[0])","9f51eea3":"print(\"X_test row number :\",X_test.shape[0])","7ceca650":"print(\"y_train row number :\",y_train.shape[0])","28c229b2":"print(\"y_test row number :\",y_test.shape[0])","c3626899":"from sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.metrics import confusion_matrix,accuracy_score,classification_report \nfrom sklearn.metrics import roc_auc_score,roc_curve,f1_score,recall_score,precision_score\nfrom sklearn.metrics import accuracy_score\ngbm=GradientBoostingClassifier()\ngbm_model=gbm.fit(X_train,y_train)\ny_pred=gbm_model.predict(X_test)\n\nprint(\"GBM  Accuracy Score :\",accuracy_score(y_test,y_pred))\nprint(\"GBM  Train Score:\",    gbm_model.score(X_train,y_train))\nprint(\"GBM  f1 score:\",       f1_score(y_test,y_pred))\n\ngbm_train_score=gbm_model.score(X_train,y_train)\ngbm_accuracy_score=accuracy_score(y_test,y_pred)\ngbm_f1_score=f1_score(y_test,y_pred)\ngbm_recall_score=recall_score(y_test,y_pred)\ngbm_precision_score=precision_score(y_test,y_pred)","b0b1dde7":"\nfrom pdpbox import pdp, get_dataset, info_plots\n\nfeatures_to_plot = ['age', 'fnlwgt', 'educational-num', 'capital-gain', 'capital-loss', 'hours-per-week']\ninter1  =  pdp.pdp_interact(model=gbm_model, dataset=X_test, model_features=X_test.columns, features=features_to_plot)\n\npdp.pdp_interact_plot(pdp_interact_out=inter1, feature_names=features_to_plot, plot_type='contour')\nplt.show()","ff509947":"import shap\nshap.initjs()","a1ad4333":"gbm_explainer = shap.TreeExplainer(gbm_model)\ngbm_shap_values = gbm_explainer.shap_values(X_test)","16233d81":"shap.force_plot(gbm_explainer.expected_value, gbm_shap_values[1,:], X_test.iloc[1,:])","6a3e6344":"shap.summary_plot(gbm_shap_values, X_test)","60c107a1":"shap.summary_plot(gbm_shap_values,X_test,  plot_type=\"bar\")","1d27ab4d":"gbm_recall_score,gbm_precision_score","1034a526":"gbm_model","5512a7e7":"confusion_matrix(y_test,y_pred)","dd049b1f":"cm = confusion_matrix(y_test, y_pred)\nplt.figure(figsize=(7,7))\nsns.heatmap(cm, annot=True, fmt=\".3f\", linewidths=.5, square = True, cmap = \"coolwarm\");\nplt.ylabel('Actual label');\nplt.xlabel('Predicted label');\nall_sample_title = 'Confusion Matrix - score:'+str(accuracy_score(y_test,y_pred))\nplt.title(all_sample_title, size = 15);\nplt.show()\nprint(classification_report(y_test,y_pred))\n\n\n","221f9b98":"fpr_mlp, tpr_mlp, thresholds_mlp = roc_curve(y_test, gbm.predict_proba(X_test)[:,1])\nplt.plot([0, 1], [0, 1], 'k--')                                                     \nplt.plot(fpr_mlp, tpr_mlp)\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('ROC CURVE')\nplt.show()","6c791e18":" \nfrom xgboost import XGBClassifier","2c57d3e9":"\nxgb=XGBClassifier(seed=42)\nxgb_model=xgb.fit(X_train,y_train)\ny_pred=xgb_model.predict(X_test)\nprint(\"XGBoost  Accuracy Score :\",accuracy_score(y_test,y_pred))\nprint(\"XGBoost  Train Score:\",xgb_model.score(X_train,y_train))\nprint(\"XGBoost  f1 score:\",f1_score(y_test,y_pred))\n\nxgb_train_score=xgb_model.score(X_train,y_train)\nxgb_accuracy_score=accuracy_score(y_test,y_pred)\nxgb_f1_score=f1_score(y_test,y_pred)\nxgb_recall_score=recall_score(y_test,y_pred)\nxgb_precision_score=precision_score(y_test,y_pred)","1ddaaf99":"xgb_model ","d6f2c5df":"xgb_explainer = shap.TreeExplainer(xgb_model)\nxgb_shap_values = xgb_explainer.shap_values(X_test)\nshap.summary_plot(xgb_shap_values, X_test)","d5ef2ee4":"shap.summary_plot(xgb_shap_values,X_test,  plot_type=\"bar\")","67772666":"confusion_matrix(y_test,y_pred)","4e93ad32":"cm = confusion_matrix(y_test, y_pred)\nplt.figure(figsize=(7,7))\nsns.heatmap(cm, annot=True, fmt=\".3f\", linewidths=.5, square = True, cmap = \"coolwarm\");\nplt.ylabel('Actual label');\nplt.xlabel('Predicted label');\nall_sample_title = 'Confusion Matrix - score:'+str(accuracy_score(y_test,y_pred))\nplt.title(all_sample_title, size = 15);\nplt.show()\nprint(classification_report(y_test,y_pred))\n\n","9e814c8f":"fpr_mlp, tpr_mlp, thresholds_mlp = roc_curve(y_test, xgb.predict_proba(X_test)[:,1])\nplt.plot([0, 1], [0, 1], 'k--')                                                     \nplt.plot(fpr_mlp, tpr_mlp)\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('ROC CURVE')\nplt.show()\n","ef83dd9f":"from sklearn.experimental import enable_hist_gradient_boosting\nfrom sklearn.ensemble import HistGradientBoostingClassifier\nhgb=HistGradientBoostingClassifier(random_state=42,)\nhgb_model=hgb.fit(X_train,y_train)\ny_pred=hgb_model.predict(X_test)\nprint(\"Histogram Based Boosting  Accuracy Score:\",accuracy_score(y_test,y_pred))\nprint(\"Histogram Based Boosting  Train Score:\",hgb_model.score(X_train,y_train))\nprint(\"Histogram Based Boosting  f1 score:\",f1_score(y_test,y_pred))\n\nhgb_train_score=hgb_model.score(X_train,y_train)\nhgb_accuracy_score=accuracy_score(y_test,y_pred)\nhgb_f1_score=f1_score(y_test,y_pred)\nhgb_recall_score=recall_score(y_test,y_pred)\nhgb_precision_score=precision_score(y_test,y_pred)","d910a94c":"hgb_model","53e60510":"confusion_matrix(y_test,y_pred)","2768dd61":"cm = confusion_matrix(y_test, y_pred)\nplt.figure(figsize=(7,7))\nsns.heatmap(cm, annot=True, fmt=\".3f\", linewidths=.5, square = True, cmap = 'YlGnBu');\nplt.ylabel('Actual label');\nplt.xlabel('Predicted label');\nall_sample_title = 'Confusion Matrix - score:'+str(accuracy_score(y_test,y_pred))\nplt.title(all_sample_title, size = 15);\nplt.show()\nprint(classification_report(y_test,y_pred))\n\n","6c080cc5":"fpr_mlp, tpr_mlp, thresholds_mlp = roc_curve(y_test, hgb.predict_proba(X_test)[:,1])\nplt.plot([0, 1], [0, 1], 'k--')\nplt.plot(fpr_mlp, tpr_mlp)\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('ROC CURVE')\nplt.show()","b5ac01ac":"from lightgbm import LGBMClassifier,plot_importance\nlgbm=LGBMClassifier(random_state=42)\nlgbm_model=lgbm.fit(X_train,y_train)\ny_pred=lgbm_model.predict(X_test)\n\nprint(\"LightGBM i\u00e7in Accuracy Score:\",accuracy_score(y_test,y_pred))\nprint(\"LightGBM i\u00e7in Train Score:\",lgbm_model.score(X_train,y_train))\nprint(\"LightGBM i\u00e7in f1 score:\",f1_score(y_test,y_pred))\n\nlgbm_train_score=lgbm_model.score(X_train,y_train)\nlgbm_accuracy_score=accuracy_score(y_test,y_pred)\nlgbm_f1_score=f1_score(y_test,y_pred)\nlgbm_recall_score=recall_score(y_test,y_pred)\nlgbm_precision_score=precision_score(y_test,y_pred)","cc475cb4":"lgbm_model","a03c5194":"confusion_matrix(y_test,y_pred)","0a3f874c":"cm = confusion_matrix(y_test, y_pred)\nplt.figure(figsize=(7,7))\nsns.heatmap(cm, annot=True, fmt=\".3f\", linewidths=.5, square = True, cmap = 'YlGnBu');\nplt.ylabel('Actual label');\nplt.xlabel('Predicted label');\nall_sample_title = 'Confusion Matrix - score:'+str(accuracy_score(y_test,y_pred))\nplt.title(all_sample_title, size = 15);\nplt.show()\nprint(classification_report(y_test,y_pred))\n","1e435b32":"fpr_mlp, tpr_mlp, thresholds_mlp = roc_curve(y_test, lgbm.predict_proba(X_test)[:,1])\nplt.plot([0, 1], [0, 1], 'k--')\nplt.plot(fpr_mlp, tpr_mlp)\nplt.xlabel('False Positive Oran\u0131')\nplt.ylabel('True Positive Oran\u0131')\nplt.title('ROC E\u011eR\u0130S\u0130')\nplt.show()","84b7c5f4":"results=pd.DataFrame({\n    \"Algorithm\":[\"GBM\",\"XGBoost\",\"HGB\",\"LightGBM\"],\n    \"Accuracy\":[gbm_accuracy_score,xgb_accuracy_score,hgb_accuracy_score,lgbm_accuracy_score],\n    \"Train Score\":[gbm_train_score,xgb_train_score,hgb_train_score,lgbm_train_score],\n    \"f1_Score\":[gbm_f1_score,xgb_f1_score,hgb_f1_score,lgbm_f1_score],\n     \"Recall_Score\":[gbm_recall_score,xgb_recall_score,hgb_recall_score,lgbm_recall_score],\n      \"Precision_Score\":[gbm_precision_score,xgb_precision_score,hgb_precision_score,lgbm_precision_score]})\n\nresults.sort_values(ascending=False,by=\"Accuracy\")","6ac5c63c":"random_majority_indices=np.random.choice(df_new[df_new[\"income\"]==0].index,\n                                        len(df_new[df_new[\"income\"]==1]),\n                                        replace=False)","66b3b9f0":"minority_class_indices=df_new[df_new[\"income\"]==1].index\nprint(minority_class_indices)","cb5373be":"under_sample_indices=np.concatenate([minority_class_indices,random_majority_indices])","c8363548":"under_sample=df_new.loc[under_sample_indices]","f385ab77":"X=under_sample.drop(columns=[\"income\"],axis=1)\nX[\"educational-num\"]=X[\"educational-num\"].astype(\"int\")\ny=under_sample[\"income\"]","8c9997a5":"sns.countplot(x=\"income\",data=under_sample)","7059b1b3":"X_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.33, \n                                                    random_state=42) \ngbm=GradientBoostingClassifier()\ngbm_model=gbm.fit(X_train,y_train)\ny_pred=gbm_model.predict(X_test)\n\nprint(\"GBM  Accuracy Score :\",accuracy_score(y_test,y_pred))\nprint(\"GBM  Train Score:\",    gbm_model.score(X_train,y_train))\nprint(\"GBM  f1 score:\",       f1_score(y_test,y_pred))\n\ngbm_train_score=gbm_model.score(X_train,y_train)\ngbm_accuracy_score=accuracy_score(y_test,y_pred)\ngbm_f1_score=f1_score(y_test,y_pred)\ngbm_recall_score=recall_score(y_test,y_pred)\ngbm_precision_score=precision_score(y_test,y_pred)","5817a179":"xgb=XGBClassifier(seed=42)\nxgb_model=xgb.fit(X_train,y_train)\ny_pred=xgb_model.predict(X_test)\nprint(\"XGBoost  Accuracy Score :\",accuracy_score(y_test,y_pred))\nprint(\"XGBoost  Train Score:\",xgb_model.score(X_train,y_train))\nprint(\"XGBoost  f1 score:\",f1_score(y_test,y_pred))\n\nxgb_train_score=xgb_model.score(X_train,y_train)\nxgb_accuracy_score=accuracy_score(y_test,y_pred)\nxgb_f1_score=f1_score(y_test,y_pred)\nxgb_recall_score=recall_score(y_test,y_pred)\nxgb_precision_score=precision_score(y_test,y_pred)","aaf933ec":"xgb_explainer = shap.TreeExplainer(xgb_model)\nxgb_shap_values = xgb_explainer.shap_values(X_test)\nshap.summary_plot(xgb_shap_values, X_test)","a4c6d9d2":"shap.summary_plot(xgb_shap_values,X_test,  plot_type=\"bar\")","73e27030":"features_to_plot = ['age', 'fnlwgt', 'educational-num', 'capital-gain', 'capital-loss', 'hours-per-week']\ninter1  =  pdp.pdp_interact(model=xgb_model, dataset=X_test, model_features=X_test.columns, features=features_to_plot)\n\npdp.pdp_interact_plot(pdp_interact_out=inter1, feature_names=features_to_plot, plot_type='contour')\nplt.show()","3e31bad0":"feature_to_plot = 'capital-gain'\npdp_dist = pdp.pdp_isolate(model=xgb_model, dataset=X_test, model_features=X_test.columns, feature=feature_to_plot)\n\npdp.pdp_plot(pdp_dist, feature_to_plot)\nplt.show()","31f0bd43":"feature_to_plot = 'capital-loss'\npdp_dist = pdp.pdp_isolate(model=xgb_model, dataset=X_test, model_features=X_test.columns, feature=feature_to_plot)\n\npdp.pdp_plot(pdp_dist, feature_to_plot)\nplt.show()","23bbb6a8":"\nhgb=HistGradientBoostingClassifier(random_state=42,)\nhgb_model=hgb.fit(X_train,y_train)\ny_pred=hgb_model.predict(X_test)\nprint(\"Histogram Based Boosting  Accuracy Score:\",accuracy_score(y_test,y_pred))\nprint(\"Histogram Based Boosting  Train Score:\",hgb_model.score(X_train,y_train))\nprint(\"Histogram Based Boosting  f1 score:\",f1_score(y_test,y_pred))\n\nhgb_train_score=hgb_model.score(X_train,y_train)\nhgb_accuracy_score=accuracy_score(y_test,y_pred)\nhgb_f1_score=f1_score(y_test,y_pred)\nhgb_recall_score=recall_score(y_test,y_pred)\nhgb_precision_score=precision_score(y_test,y_pred)","30dcd9a0":"lgbm=LGBMClassifier(random_state=42)\nlgbm_model=lgbm.fit(X_train,y_train)\ny_pred=lgbm_model.predict(X_test)\n\nprint(\"LightGBM i\u00e7in Accuracy Score:\",accuracy_score(y_test,y_pred))\nprint(\"LightGBM i\u00e7in Train Score:\",lgbm_model.score(X_train,y_train))\nprint(\"LightGBM i\u00e7in f1 score:\",f1_score(y_test,y_pred))\n\nlgbm_train_score=lgbm_model.score(X_train,y_train)\nlgbm_accuracy_score=accuracy_score(y_test,y_pred)\nlgbm_f1_score=f1_score(y_test,y_pred)\nlgbm_recall_score=recall_score(y_test,y_pred)\nlgbm_precision_score=precision_score(y_test,y_pred)","2819b89b":"lgb_explainer = shap.TreeExplainer(lgbm_model)\nlgb_shap_values = lgb_explainer.shap_values(X_test)\nshap.summary_plot(lgb_shap_values, X_test)","eea7964f":"features_to_plot = ['age', 'fnlwgt', 'educational-num', 'capital-gain', 'capital-loss', 'hours-per-week']\ninter1  =  pdp.pdp_interact(model=lgbm_model, dataset=X_test, model_features=X_test.columns, features=features_to_plot)\n\npdp.pdp_interact_plot(pdp_interact_out=inter1, feature_names=features_to_plot, plot_type='contour')\nplt.show()","618ba9a6":"results=pd.DataFrame({\n    \"Algorithm\":[\"GBM\",\"XGBoost\",\"HGB\",\"LightGBM\"],\n    \"Accuracy\":[gbm_accuracy_score,xgb_accuracy_score,hgb_accuracy_score,lgbm_accuracy_score],\n    \"Train Score\":[gbm_train_score,xgb_train_score,hgb_train_score,lgbm_train_score],\n    \"f1_Score\":[gbm_f1_score,xgb_f1_score,hgb_f1_score,lgbm_f1_score],\n     \"Recall_Score\":[gbm_recall_score,xgb_recall_score,hgb_recall_score,lgbm_recall_score],\n      \"Precision_Score\":[gbm_precision_score,xgb_precision_score,hgb_precision_score,lgbm_precision_score]})\n\nresults.sort_values(ascending=False,by=\"Accuracy\")","0496a551":"\n# DATA PREPROCESSING\n","9a22a3fa":"# <span style=\"color:blue\"> INCOME CENSUS DATA CLASSIFICATION WITH GRADIENT BOOSTING ALGORITHMS<\/span> ","bfc6b905":"### LGBM AFTER UNDERSAMPLING","cab4b583":"## LIGHTGBM MODEL","f8366e1b":"## UNDERSAMPLING BECAUSE OF UNBALANCED DATA","93a9aefc":"## HISTOGRAM BASED BOOSTING MODEL","9db5bed6":"## HANDLING WITH OUTLIERS","cd988fca":"## HANDLING WITH MISSING VALUES","e97bcc89":"![image.png](attachment:image.png)\n","144be4d1":"### HGB AFTER UNDERSAMPLING","b0632784":"## COMPARE THE RESULTS","ffcfb0c7":"### GBM MODEL AFTER UNDERSAMPLING","9917fbd8":"## GRADIENT BOOSTING MODEL","03dab94d":"### RESULTS  AFTER  UNDERSAMPLING","ee3092ee":"## XGBOOST MODEL","6da3c1c3":"![image.png](attachment:image.png)","9bb7f6d5":"## HANDLING WITH CATEGORICAL DATA","013baa20":"### XGBOOST  AFTER UNDERSAMPLING","48bd2da8":"## SPLITTING DATA AS TRAIN AND TEST"}}