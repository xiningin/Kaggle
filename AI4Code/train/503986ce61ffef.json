{"cell_type":{"57f32902":"code","88fd666b":"code","f13c8c9a":"code","7a167e0a":"code","ec902d91":"code","726dac6c":"code","08d52d1d":"code","4889beac":"code","06c3b3b9":"code","11706194":"code","992712ae":"code","6b508d5c":"code","2a4ccfac":"code","c7b9be28":"code","5b7ebac8":"code","c5be37f1":"code","05e79636":"code","a19d5c1b":"code","232f571f":"code","b7620668":"code","d9c6d64c":"code","6501c18a":"code","fd269965":"code","e688ace7":"code","791d22d7":"code","c1d36f61":"code","073e631e":"code","a8871095":"markdown","c270fbc0":"markdown","b51ffa22":"markdown","2d0d4876":"markdown","2d433c61":"markdown","1f6d0e39":"markdown","628ebc43":"markdown","f345796a":"markdown","8ff54112":"markdown","0032b06d":"markdown","3dcb4422":"markdown","a88bfe5b":"markdown","c329babf":"markdown","dd3a80d4":"markdown","e9496567":"markdown"},"source":{"57f32902":"import numpy as np\nimport pandas as pd\n%matplotlib inline\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport os","88fd666b":"import tensorflow as tf\nfrom tensorflow import keras","f13c8c9a":"train_dir = r'..\/input\/cats-and-dogs-color\/train'\nvalidation_dir = r'..\/input\/cats-and-dogs-color\/validation'\ntest_dir = r'..\/input\/cats-and-dogs-color\/test'","7a167e0a":"from tensorflow.keras.preprocessing.image import ImageDataGenerator","ec902d91":"train_datagen= ImageDataGenerator(rescale=1.\/255)\ntest_datagen= ImageDataGenerator(rescale=1.\/255)\n\ntrain_generator=train_datagen.flow_from_directory(\n        train_dir,\n        target_size=(150,150),\n        batch_size=20,\n        class_mode='binary')\n\nvalidation_generator=test_datagen.flow_from_directory(\n        validation_dir,\n        target_size=(150,150),\n        batch_size=20,\n        class_mode='binary')","726dac6c":"from tensorflow.keras import layers\nfrom tensorflow.keras import models","08d52d1d":"model= models.Sequential()\nmodel.add(layers.Conv2D(32,(3,3),activation='relu',\n                        input_shape=(150,150,3)))\nmodel.add(layers.MaxPooling2D(2,2))\n\nmodel.add(layers.Conv2D(64,(3,3),activation='relu'))\nmodel.add(layers.MaxPooling2D(2,2))\n\nmodel.add(layers.Conv2D(128,(3,3),activation='relu'))\nmodel.add(layers.MaxPooling2D(2,2))\n\nmodel.add(layers.Conv2D(128,(3,3),activation='relu'))\nmodel.add(layers.MaxPooling2D(2,2))\n\nmodel.add(layers.Flatten())\n\nmodel.add(layers.Dense(512, activation='relu'))\n\nmodel.add(layers.Dense(1,activation='sigmoid'))","4889beac":"model.summary()","06c3b3b9":"from tensorflow.keras import optimizers\nmodel.compile(loss='binary_crossentropy',\n             optimizer=optimizers.RMSprop(lr=1e-4),\n             metrics=['acc'])\n\n","11706194":"history=model.fit_generator(\n    train_generator,\n    steps_per_epoch=100,\n    epochs=20,\n    validation_data=validation_generator,\n    validation_steps=50)","992712ae":"pd.DataFrame(history.history).plot(figsize=(8,5))\nplt.grid(True)\nplt.gca().set_ylim(0,1)\nplt.show()","6b508d5c":"model.save(\"model.h5\")","2a4ccfac":"from tensorflow.keras import backend as K\n\nK.clear_session()\ndel model","c7b9be28":"from tensorflow.keras.preprocessing.image import ImageDataGenerator\n\ntrain_datagen=ImageDataGenerator(\n        rescale=1.\/255,\n        rotation_range=40,\n        width_shift_range=0.2,\n        height_shift_range=0.2,\n        shear_range=0.2,\n        zoom_range=0.2,\n        horizontal_flip=True,)\n\ntest_datagen= ImageDataGenerator(rescale=1.\/255)\n\ntrain_generator= train_datagen.flow_from_directory(\n    train_dir,\n    target_size=(150,150),\n    batch_size=32,\n    class_mode='binary')\n\nvalidation_generator= test_datagen.flow_from_directory(\n    validation_dir,\n    target_size=(150,150),\n    batch_size=32,\n    class_mode='binary')","5b7ebac8":"from tensorflow.keras.applications import VGG16\nconv_base=VGG16(weights='imagenet',\n               include_top=False,\n               input_shape=(150,150,3))","c5be37f1":"conv_base.summary()","05e79636":"from tensorflow.keras import models\nfrom tensorflow.keras import layers\n\nmodel=models.Sequential()\nmodel.add(conv_base)\nmodel.add(layers.Flatten())\nmodel.add(layers.Dense(256,activation='relu'))\nmodel.add(layers.Dense(1, activation='sigmoid'))\n","a19d5c1b":"model.summary()","232f571f":"#conv_base.trainable= False","b7620668":"from tensorflow.keras import optimizers\nmodel.compile(loss='binary_crossentropy',\n             optimizer=optimizers.RMSprop(lr=2e-5),\n             metrics=['acc'])","d9c6d64c":"checkpoint_cb= keras.callbacks.ModelCheckpoint(\"CNN_Project_Model-{epoch:02d}.h5\")","6501c18a":"history= model.fit_generator(\n    train_generator,\n    steps_per_epoch=100,\n    epochs=30,\n    validation_data=validation_generator,\n    validation_steps=50,\n    callbacks=[checkpoint_cb])","fd269965":"pd.DataFrame(history.history).plot(figsize=(8,5))\nplt.grid(True)\nplt.gca().set_ylim(0,1)\nplt.show()","e688ace7":"hist_df= pd.DataFrame(history.history)","791d22d7":"hist_csv_file='history_csv'\nwith open(hist_csv_file, mode='w') as f:\n    hist_df.to_csv(f)","c1d36f61":"test_generator= test_datagen.flow_from_directory(\n    test_dir,\n    target_size=(150,150),\n    batch_size=20,\n    class_mode='binary')","073e631e":"model.evaluate_generator(test_generator, steps=50)","a8871095":"**Collecting the Data**","c270fbc0":"![cute-different-dogs-group_1308-45985.jpg](attachment:38a1e492-26d3-41be-af1f-6fae819fc75f.jpg)","b51ffa22":"**Visualization**","2d0d4876":"**VGG16**","2d433c61":"**Data Preprocessing**","1f6d0e39":"**Hello everyone**,\n\nInspired by the *2013 Kaggle Competition*, This is my take on the binary classification of Colored Images of Cats and Dogs.\n\n**It is a Binary Classification Problem.** The tools used are:\n\n**Pandas** for *data manipulation* and ingestion\n\n**Numpy** for *multidimensional array computing*\n\n**Matplotlib** and **seaborn** for *data visualization*\n\n**Tensorflow** for the *CNN model*\n\n**Data Augmentation** for a *better accuracy*\n\n**Transfer Learning** using **VGG16**\n\n***Accuracy*** Reached: ***89%***","628ebc43":"**More about the dataset:**\n\n![info.JPG](attachment:adde395b-1580-46f3-a143-f9c522e1aa59.JPG)","f345796a":"**Importing the Libraries**","8ff54112":"**->** Feel free to leave any ***suggestions*** in the comments for the betterment of the notebook.\n\n**->** An **upvote** would be highly appreciated\n\n**->** Thank you for your *time*,**CHEERS**!\ud83c\udf1f","0032b06d":"**->** **Read** the picture files\n\n**->** Decode the **jpeg** content to **RBG** grids of pixels\n\n**->** Convert these into **floating point tensors**\n\n**->** **Rescale the pixel values** (between 0 and 255) to the [0,1] interval.","3dcb4422":"**Transfer Learning**","a88bfe5b":"**Classification OF Coloured Images of CATS \ud83d\ude3c and DOGS \ud83d\udc36**","c329babf":"Generating batches of tensor image data","dd3a80d4":"**Process:**\n\n* Creating **CNN model** with 4 convulational layer; **Accuracy: 72-74%**\n\n\n* Transfer Learning using **VGG16** ; **Accuracy : 88-90%**","e9496567":"**Modelling**"}}