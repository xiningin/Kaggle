{"cell_type":{"1ea443ac":"code","34826355":"code","b608585c":"code","99055e55":"code","a3077caa":"code","db5d4f2f":"code","73967479":"code","af1cbd1c":"code","3a7d5460":"code","50eb9335":"code","89c85967":"code","06ea73aa":"code","2651f532":"code","640fd51a":"code","02a6a2c3":"code","a5c497a1":"code","f4d4c13a":"code","3e56a257":"code","6b9cc486":"code","e967332e":"code","60dd7819":"code","cb875709":"code","3e5a9dba":"code","edf85009":"code","c846ddee":"code","502915e3":"code","5e496de4":"code","84453042":"code","8dea6884":"code","b3e8d700":"code","7176d749":"code","4defe5f2":"code","162c99bc":"code","7ce08d75":"code","c93bd21d":"code","688c3136":"code","fac92e57":"code","ee5a768a":"code","57365520":"code","902a8d2d":"code","9b4e55a1":"code","d03d6a55":"code","22fd82ad":"code","7379337d":"code","cdc9eb06":"code","824e8df4":"code","830c00be":"code","37021e92":"code","84a988e2":"code","f5e77a6e":"code","00e5f9d1":"code","4dcd1dc7":"code","42e7641e":"code","e34b119b":"code","bae13fa9":"markdown","29bf7228":"markdown","6f24c14c":"markdown","33970ee7":"markdown","2c50ff22":"markdown","bd87386e":"markdown","3e41f02c":"markdown","cdb44221":"markdown","d202bc9a":"markdown","c7ff33ae":"markdown","102e5c38":"markdown","7801ed0e":"markdown","6e778839":"markdown","a34a7627":"markdown","a01422e9":"markdown","f41e1e1f":"markdown","4540c98a":"markdown","f185fe48":"markdown","2ff41ada":"markdown","0fd0f91f":"markdown","324b22f5":"markdown","4673b931":"markdown","e52f48f9":"markdown","eff71e02":"markdown","f2d1d903":"markdown","538a6587":"markdown","dc98e550":"markdown","5e32ad0f":"markdown","13a7e50e":"markdown","94503ae2":"markdown","07d2791c":"markdown","66b2c546":"markdown","72e54662":"markdown","96a3255f":"markdown","304eb597":"markdown","2bad5558":"markdown","8644b695":"markdown","4eee0038":"markdown","79469ef3":"markdown","c8cd482c":"markdown","340f0326":"markdown","cc9c7f78":"markdown","3a25412c":"markdown","c367f8b1":"markdown","1b259684":"markdown","49b0e413":"markdown","8964ff94":"markdown"},"source":{"1ea443ac":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","34826355":"import seaborn as sns\nimport matplotlib.pyplot as plt","b608585c":"train_df = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\nexample = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')","99055e55":"train_df.head()","a3077caa":"train_df.isnull().sum()","db5d4f2f":"sns.set_style('whitegrid')\nsns.countplot(data = train_df, x = 'Survived', hue = 'Sex' )","73967479":"sns.set_style('whitegrid')\nsns.countplot(data = train_df, x = 'Survived', hue = 'Pclass' )","af1cbd1c":"plt.figure(figsize=(10,5))\nsns.distplot(train_df['Age'].dropna(), kde = False, bins = 40)","3a7d5460":"plt.figure(figsize=(10,5))\nsns.countplot(data=train_df, x='SibSp')","50eb9335":"plt.figure(figsize=(10,5))\nsns.countplot(data=train_df, x = 'SibSp', hue='Sex')","89c85967":"train_df.head()","06ea73aa":"sns.heatmap(train_df.isnull(),yticklabels=False, cbar = False, cmap = 'magma')","2651f532":"plt.figure(figsize = (10,5))\nsns.boxplot(data = train_df, x='Pclass',y='Age')","640fd51a":"#replace 'NaN' with '0'\ntrain_df['Age'] = train_df['Age'].fillna(0)\n\n#function to replace '0' with average age value\ndef age_calc(age):\n    if age['Age'] == 0:\n        if age['Pclass'] == 1:\n            return 38\n        elif age['Pclass'] == 2:\n            return 30\n        else:\n            return 25\n    else:\n        return age['Age']\ntrain_df['Age'] = train_df.apply(age_calc,axis=1)","02a6a2c3":"train_df['Age'].isnull().sum()","a5c497a1":"plt.figure(figsize = (10,5))\nsns.heatmap(train_df.isnull(), yticklabels=False, cbar = False, cmap = 'magma')","f4d4c13a":"train_df.drop('Cabin', axis = 1, inplace=True)","3e56a257":"train_df.head()","6b9cc486":"train_df['Embarked'].isnull().sum()","e967332e":"train_df.dropna(inplace = True)","60dd7819":"train_df['Embarked'].isnull().sum()","cb875709":"def gender(gen):\n    if gen['Sex'] == 'female':\n        return 0\n    else:\n        return 1\ntrain_df['Sex'] = train_df.apply(gender, axis = 1)","3e5a9dba":"train_df.head()","edf85009":"def embark(emb):\n    if emb['Embarked'] == 'C':\n        return 1\n    elif emb['Embarked'] == 'Q':\n        return 2\n    elif emb['Embarked'] == 'S':\n        return 3\ntrain_df['Embarked'] = train_df.apply(embark, axis = 1)\n        ","c846ddee":"train_df.head()","502915e3":"train_df.drop(['Name','Ticket'],axis = 1, inplace= True)","5e496de4":"train_df.isnull().sum()","84453042":"train_df.head()","8dea6884":"train_df.shape","b3e8d700":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(train_df.drop(['Survived','PassengerId'],axis = 1), train_df['Survived'],\n                                                   test_size = 0.15, random_state = 101)","7176d749":"from sklearn.linear_model import LogisticRegression\n\nlogmod = LogisticRegression()\nlogmod.fit(X_train, y_train)","4defe5f2":"pred = logmod.predict(X_test)","162c99bc":"from sklearn.metrics import classification_report, r2_score\n\nprint(classification_report(y_test, pred))","7ce08d75":"test_df.head()","c93bd21d":"test_df.shape","688c3136":"test_df.isnull().sum()","fac92e57":"test_df['Age'] = test_df['Age'].fillna(0)\ntest_df['Age'] = test_df.apply(age_calc, axis = 1)\ntest_df['Sex'] = test_df.apply(gender, axis = 1)","ee5a768a":"test_df.head()","57365520":"test_df['Embarked'] = test_df.apply(embark, axis = 1)","902a8d2d":"test_df.head()","9b4e55a1":"pass_id = pd.DataFrame(test_df['PassengerId'])","d03d6a55":"test_df.drop(['Cabin','Name','Ticket','PassengerId'], axis = 1, inplace = True)","22fd82ad":"test_df.isnull().sum()","7379337d":"test_df['Fare'] = test_df['Fare'].fillna(0)\ntest_df[test_df['Fare']==0]\ntest_df.isnull().sum()","cdc9eb06":"test_df.shape","824e8df4":"test_df.head()","830c00be":"pred_1 = logmod.predict(test_df)\n\n# The predicted survived values in the form of 1D array\npred_1","37021e92":"pred_1_df = pd.DataFrame(pred_1, columns=['Survived'])\nsubmit = pd.concat([pass_id,pred_1_df],axis = 1)","84a988e2":"submit.head()","f5e77a6e":"example.head()","00e5f9d1":"example.drop('PassengerId', axis = 1,inplace = True)","4dcd1dc7":"print(classification_report(example, pred_1_df))","42e7641e":"submit.to_csv('Submission.csv',index=False)","e34b119b":"Submission done!","bae13fa9":"* Dropping the 'PassengerId' column from the 'gender_submission.csv' file to find out the accuracy of model.\n* The comparision of the prediction from the 'tet.csv' data and the 'gender_submission' data is done","29bf7228":"* The above plot shows that the function written for age estimation has succefully replaced all null values with an average value.\n* But the data absent in the 'Cabin' column is too much. So we can prefer to omit that column.","6f24c14c":"The changes under the 'Sex' column can be observed","33970ee7":"Creating a Logistic regression model.","2c50ff22":"The shape of the test data","bd87386e":"# Importing important libraries","3e41f02c":"Please do upvote","cdb44221":"Checking if any null values are present in 'Age' column.","d202bc9a":"* Thank you for going throught the notebook.\n* I hope it was helpful.\n* This was my first try on complete analysis.\n* If there are any mistake committed, feel free to comment so that we can improve on.\n","c7ff33ae":"Splitting dataset for training and testing","102e5c38":"Creating a new dataframe that holds the passenger id for later use.\n(**Will be justified**)","7801ed0e":"The data set is not yet ready for preparing the model as all the columns must be in the form of numbers andnot strings.","6e778839":"The head of the test data","a34a7627":"Since only 2 'Embarled' values are absent, we can emit that entire row with the null value of 'Embarked'.","a01422e9":"In the classification report the accuracy of the data is 80%.","f41e1e1f":"Defining new functions to convert strings to numbers.","4540c98a":"Removing unwanted columns","f185fe48":"As per above plot, we can infer the following:\n* The people who travelled under class 1 survived the most.\n* The people who travelled under class 3 were in large number on the ship compared to class 2 and 1.\n* The death of people who travelled under class 3 is the highest as more proirity in rescusing the class 1 and 2 were given.\n* The number deaths of people who travelled under class 2 are less, followed by class 1.","2ff41ada":"The above plot gives an of survival count with a hue as 'gender'.\n* Here '0' on X-axis is dead and '1' is alive.\n* Clearly the plot shows that the death of male is very high compared to the death of females.\n* And the number of female survivors are more compared to male.\nThe males on the ship helped as many as females to get out of the Titanic.","0fd0f91f":"* Converting the result array to a dataframe and renaming the column as 'Survived'.\n* Adding the passengerid column to the resulted dataframe - 'submit'\n\nHere,\n* The predictions with passenger-id is not allowed as the model is trained without the passeger-id.\n* Thus, creation of seperate dataframes for 'PassengerId' was done to prevent error.\n* And concatinating it to the result later on is to obtain a final dataframe required for submission.","324b22f5":"Final check on if any null values present in the dataset","4673b931":"Dropping the 'Name' and 'Ticket' column.","e52f48f9":"Reading the CSV file\n* Here the 'train.csv' file of the Titanic dataset is being considered as a whole dataset which will be later on split into training data and testing data.\n# * The 'test.csv' file is used to test the efficiency of the model and compare the accuracy of the result with the 'gender_submission.csv' file","eff71e02":"Applying the defined function to add lost data and replacing the characters by numbers.","f2d1d903":"Model prediction","538a6587":"Checking if null values present in the data","dc98e550":"The above plot gives a count of number of spouse or children an individual had.\n* As obsereved approx 600 people were solo travellers.\n* The count of spouse-children drastically decreased.","5e32ad0f":"The above plot provides the male and female count with respect to spouse-children count.\n* Single males were more in number than the females.\n* We can also infer that the single males were the brave men who helped the other males and females of different age group to survive by sacrificing themselves. As the death of males was very high as observed in previous plots.","13a7e50e":"The head of the data used for testing the model","94503ae2":"For the age estimation and filling the null data in the data set check the class under which the individual travelled and replace null with the average value.","07d2791c":"The above heat map gives you the insight of the null values under every column of the titanic dataset.\n* The number of null values is comparitively lesser than the cabin values\n","66b2c546":"The accuracy of the model is observed to be 95%","72e54662":"Checking if any null values still present in data","96a3255f":"# Happy learning!","304eb597":"The shape of the data","2bad5558":"To differenciate between a male and a female in the form of numbers:\n* 'male' is replaced by 1\n* 'female' is replcaed by 0","8644b695":"Comparing the submit dataframe and the example dataframe.\n* The order and numbers in the passenger id column is same as the example file.","4eee0038":"# Moving on to the 'test.csv' file","79469ef3":"Checking if any null values are present in 'Embarked' column.","c8cd482c":"Checking is any null values","340f0326":"A box-plot is plotted to obtain an estimate of age group relative to the 'class' under which the people travelled.\n* Since the age data has lesser null values compared to the cabin, average values can be estimated and replaced with the null values to obtain the lost data.\n* As observed in the box-plot, the people travelling under class 1 were in the age group 29-49. This age group is the set of adults who could work and pay bills. Thus, they were able to pay more and travel in class 1.\n* Peeople travelling under class 2 were in the age group of 24-36.\n* The people who travelled under class 3 were under age group 19-31.\n* People under class 2 and 1 were the youths.","cc9c7f78":"Filling up the data to match the shape of submission file.","3a25412c":"From the above plot we can infer that the large number of people on the Titanic were aged in range 20 - 40, followed by children and senior citizens.","c367f8b1":"The head of the data used to create the model","1b259684":"# Data Visualisation","49b0e413":"Similarly a function is defined to convert characters to number in the 'Embarked' column.\nThe 'Embarked' column gave the names of places where people aboard the Titanic.\nC = Cherbourg, Q = Queenstown, S = Southampton.\nThe function replaces:\n* value 1 for 'C'\n* value 2 for 'Q'\n* value 3 for 'S'","8964ff94":"Predicting the 'Survival' using the Logistic model"}}