{"cell_type":{"c0963452":"code","fdf0ead8":"code","8f23161c":"code","da4f7deb":"code","c8e52b61":"code","ee56162a":"code","0cea0787":"code","f9863f33":"code","938067bd":"code","7fdad4e8":"code","44ff45f6":"code","089dc9b8":"code","0099229c":"code","44d14675":"code","15b1cd25":"code","d668eac2":"code","1ba95191":"code","93acd163":"code","bae922f0":"code","0d399e31":"code","deffba3d":"code","7903d54d":"markdown","ad18cf45":"markdown","14fdadce":"markdown","22b980b4":"markdown","4cfac064":"markdown","d749dafd":"markdown","c2915037":"markdown","742201b4":"markdown","2c6a5eff":"markdown","9f99c1d0":"markdown","3e2cd8c8":"markdown","751841dd":"markdown","7faa1d03":"markdown","273a2b82":"markdown","2835e607":"markdown"},"source":{"c0963452":"from kaggle_environments import make, evaluate # t\u1eeb th\u01b0 vi\u1ec7n kaggle_environments l\u1ea5y h\u00e0m make v\u00e0 evaluate\n# h\u00e0m make \u0111\u1ec3 t\u1ea1o m\u00f4i tr\u01b0\u1eddng game\n# h\u00e0m evaluate \u0111\u1ec3 \u0111\u00e1nh gi\u00e1 AI (vd nh\u01b0 trong 100 tr\u1eadn th\u00ec n\u1ebfu AI 1 \u0111i tr\u01b0\u1edbc th\u00ec s\u1ebd th\u1eafng bao nhi\u00eau %)","fdf0ead8":"env = make(\"connectx\", debug = True) # t\u1ea1o m\u00f4i tr\u01b0\u1eddng game connectx, debug = True ngh\u0129a l\u00e0 s\u1ebd hi\u1ec7n th\u1ecb l\u1ed7i n\u1ebfu con AI kh\u00f4ng ch\u1ea1y\nprint(list(env.agents)) # hi\u1ec3n th\u1ecb danh s\u00e1ch c\u00e1c con AI c\u00f3 s\u1eb5n trong m\u00f4i tr\u01b0\u1eddng game","8f23161c":"env.run([\"random\", \"random\"]) # ch\u1ea1y game v\u1edbi 2 AI random\n\nenv.render(mode=\"ipython\") # hi\u1ec3n th\u1ecb game l\u00ean","da4f7deb":"import random # l\u1ea5y h\u00e0m sinh s\u1ed1 ng\u1eabu nhi\u00ean\ndef agent_random(obs, config): # 1 h\u00e0m AI ph\u1ea3i c\u1ea7n 2 tham s\u1ed1 l\u00e0 obs v\u00e0 config (th\u1eadt ra m\u00ecnh c\u00f3 th\u1ec3 \u0111\u1eb7t t\u00ean kh\u00e1c \u0111\u01b0\u1ee3c e \u1ea1)\n    valid_moves = [col for col in range(config.columns) if obs.board[col] == 0]\n    # config.columns l\u00e0 tr\u1ea3 v\u1ec1 s\u1ed1 c\u1ed9t c\u1ee7a b\u00e0n c\u1edd, v\u00e0 m\u1eb7c \u0111\u1ecbnh l\u00e0 7 c\u1ed9t\n    # range(7) ngh\u0129a l\u00e0 kho\u1ea3ng t\u1eeb 0 \u0111\u1ebfn 6\n    # col for col in range(7) ngh\u0129a l\u00e0 c\u00e1c c\u1ed9t trong kho\u1ea3ng 0 - 6\n    # obs.board[col] == 0 l\u00e0 ki\u1ec3m tra c\u1ed9t \u0111\u00f3 c\u00f2n tr\u1ed1ng hay kh\u00f4ng, n\u1ebfu != 0 th\u00ec c\u1ed9t \u0111\u00f3 \u0111\u00e3 \u0111\u1ea7y\n    # c\u1ea3 \u0111o\u1ea1n code tr\u00ean l\u00e0 ch\u1ea1y t\u1eeb c\u1ed9t 0 \u0111\u1ebfn c\u1ed9t 6 c\u1ee7a b\u00e0n c\u1edd v\u00e0 th\u00eam c\u1ed9t \u0111\u00f3 v\u00e0o danh s\u00e1ch valid_moves n\u1ebfu c\u1ed9t \u0111\u00f3 ch\u01b0a \u0111\u1ea7y\n    # VD: c\u1ea3 7 c\u1ed9t \u0111\u1ec1u ch\u01b0a \u0111\u1ea7y s\u1ebd tr\u1ea3 v\u1ec1 danh s\u00e1ch sau [0,1,2,3,4,5,6]\n    return random.choice(valid_moves) # h\u00e0m random.choice l\u00e0 s\u1ebd ch\u1ecdn ng\u1eabu nhi\u00ean 1 trong 7 c\u1ed9t c\u1ee7a danh s\u00e1ch valid_moves\n\ndef agent_middle(obs, config):\n    #c\u00f2n nh\u1edb config.columns l\u00e0 tr\u1ea3 v\u1ec1 s\u1ed1 c\u1ed9t c\u1ee7a b\u1ea3ng t\u1ee9c l\u00e0 7\n    # 7 m\u00e0 chia 2 l\u1ea5y ph\u1ea7n nguy\u00ean s\u1ebd c\u00f2n 3\n    return config.columns\/\/2  # lu\u00f4n tr\u1ea3 v\u1ec1 3 m\u00e0 kh\u00f4ng check xem c\u1ed9t \u0111\u00f3 \u0111\u00e3 \u0111\u1ea7y ch\u01b0a\n\ndef agent_leftmost(obs, config):\n    valid_moves = [col for col in range(config.columns) if obs.board[col] == 0] # t\u01b0\u01a1ng t\u1ef1 nh\u01b0 con AI m\u1ed9t th\u00f4i\n    # thay v\u00ec ch\u1ecdn random th\u00ec n\u00f3 lu\u00f4n tr\u1ea3 v\u1ec1 ph\u1ea7n t\u1eeb \u0111\u1ea7u ti\u00ean c\u1ee7a danh s\u00e1ch valid_moves\n    # vd d\u00e1nh s\u00e1ch c\u00f3 7 c\u1ed9t [0,1,2,3,4,5, 6] th\u00ec valid_moves[0] s\u1ebd tr\u1ea3 v\u1ec1 0\n    # vd c\u1ed9t m\u1ed9t \u0111\u1ea7y r\u1ed3i th\u00ec danh s\u00e1ch l\u00e0 [1,2,3,4,5,6]  th\u00ec valid_moves[0] s\u1ebd tr\u1ea3 v\u1ec1 1\n    return valid_moves[0]","c8e52b61":"# m\u00ecnh \u0111\u1eb7t con AI n\u00e0o \u1edf tr\u01b0\u1edbc th\u00ec n\u00f3 s\u1ebd \u0111\u01b0\u1ee3c \u0111i tr\u01b0\u1edbc nh\u00e9 \n\nenv.run([agent_leftmost, agent_leftmost]) # ch\u1ea1y game v\u1edbi 2 con AI 3 ch\u01a1i v\u1edbi nhau\nenv.render(mode=\"ipython\")\n\nenv.run([agent_random, agent_random]) # ch\u1ea1y game v\u1edbi 2 con AI 1 ch\u01a1i v\u1edbi nhau\nenv.render(mode=\"ipython\")\n\nenv.run([agent_middle, agent_leftmost]) # ch\u1ea1y game v\u1edbi con AI 2 v\u00e0 AI 3 ch\u01a1i v\u1edbi nhau\nenv.render(mode=\"ipython\")","ee56162a":"import numpy as np # l\u1ea5y th\u01b0 vi\u1ec7n numpy, th\u01b0 vi\u1ec7n \u0111\u1ec3 x\u1eed l\u00fd \u0111\u1ea1i s\u1ed1 tuy\u1ebfn t\u00ednh\n\n# t\u1ea1o 1 h\u00e0m \u0111\u00e1nh gi\u00e1 t\u1ef7 l\u1ec7 th\u1eafng\n# agent1 l\u00e0 con AI th\u1ee9 nh\u1ea5t\n# agen2 l\u00e0 con AI th\u1ee9 2\n# n_rounds l\u00e0 s\u1ed1 l\u01b0\u1ee3ng game ch\u01a1i, m\u1eb7c \u0111\u1ecbnh l\u00e0 100\ndef get_win_percentages(agent1, agent2, n_rounds=100):\n    config = {'rows': 6, 'columns': 7, 'inarow': 4} #t\u1ea1o b\u00e0n c\u1edd c\u00f3 6 h\u00e0ng 7 c\u1ed9t v\u00e0 4 qu\u00e2n c\u1edd li\u00ean ti\u1ebfp l\u00e0 th\u1eafng\n    # h\u00e0m evaluate \u0111\u1ec3 \u0111\u00e1nh gi\u00e1 AI    \n    outcomes1 = evaluate(\"connectx\", [agent1, agent2], config, [], n_rounds\/\/2)\n    # l\u1ec7nh tr\u00ean s\u1ebd \u0111\u00e1nh gi\u00e1 game connect x, 2 con AI c\u1ee7a ch\u00fang ta, c\u1ea5u h\u00ecnh b\u00e0n c\u1edd v\u00e0 s\u1ed1 tr\u1eadn \u0111\u00e1nh, n_rounds \/ 2 l\u00e0 50 tr\u1eadn v\u00ec n_rounds c\u1ee7a m\u00ecnh l\u00e0 100\n    outcomes2 = evaluate(\"connectx\", [agent2, agent1], config, [], n_rounds\/\/2)\n    # \u0111\u00e1nh gi\u00e1 t\u01b0\u01a1ng t\u1ef1 nh\u01b0ng vs AI 2 \u0111i tr\u01b0\u1edbc\n    \n    # h\u00e0m evaluate s\u1ebd tr\u1ea3 ra danh s\u00e1ch c\u00f3 2 ph\u1ea7n t\u1eed\n    # vd\n    # [1, -1]  ngh\u0129a l\u00e0 AI 1 th\u1eafng, AI 2 thua\n    # [-1, 1] ngh\u0129a l\u00e0 AI 1 thua, AI 2 th\u1eafng\n    # [None, 0] ngh\u0129a l\u00e0 AI 1 \u0111i sai, v\u00e0 AI 2 c\u0169ng 0 th\u1eafng\n    # v\u00e0 ch\u00fang ta ch\u01a1i 50 l\u1ea7n th\u00ec s\u1ebd tr\u1ea3 v\u1ec1 1 danh s\u00e1ch c\u00f3 50 danh s\u00e1ch con n\u00e0y\n    \n    print(\"T\u1ef7 l\u1ec7 th\u1eafng Agent1 l\u00e0:\", np.round(outcomes1.count([1,-1])\/n_rounds, 2))\n    #round l\u00e0 h\u00e0m l\u00e0m tr\u00f2n s\u1ed1\n    #outcomes1.count l\u00e0 \u0111\u1ebfm, \u00fd l\u00e0 \u0111\u1ebfm trong danh s\u00e1ch \u0111\u00f3 xem c\u00f3 bao nhi\u00eau l\u1ea7n AI 1 th\u1eafng, v\u00ec [1, -1] ngh\u0129a l\u00e0 AI 1 th\u1eafng m\u00e0\n    #n_rounds l\u00e0 t\u1ed5ng s\u1ed1 l\u1ea7n ch\u01a1i, n\u1ebfu tr\u00ed nh\u1edb em t\u1ed1t th\u00ec n\u00f3 s\u1ebd b\u1eb1ng bao nhi\u1ec1u nh\u1ec9 em y\u00eau?\n    \n    print(\"T\u1ef7 l\u1ec7 th\u1eafng Agent2 l\u00e0:\", np.round(outcomes2.count([1,-1])\/n_rounds, 2))\n    # h\u00e0m n\u00e0y gi\u1ed1ng h\u00e0m tr\u00ean th\u00f4i nh\u01b0ng t\u1ea1i sai AI 2 th\u1eafng m\u00e0 v\u1eabn l\u00e0 \u0111\u1ebfm [1,-1] nh\u1ec9\n    # v\u00ec \u1edf tr\u00ean m\u00ecnh \u0111\u00e3 \u0111\u1ed5i ch\u1ed7 outcomes2 m\u00ecnh \u0111\u00e3 \u0111\u1ed5i ch\u1ed7 cho AI2 \u0111i tr\u01b0\u1edbc r\u1ed3i, v\u1eady n\u00ean n\u00f3 v\u1eabn l\u00e0 [1,-1] n\u1ebfu AI 2 th\u1eafng\n    \n    print(\"S\u1ed1 l\u1ea7n \u0111i sai c\u1ee7a  Agent1 l\u00e0:\", outcomes1.count([None, 0])) # \u0111\u1ebfm s\u1ed1 l\u1ea7n \u0111i sai c\u1ee7a AI th\u00f4i\n    print(\"S\u1ed1 l\u1ea7n \u0111i sai c\u1ee7a  Agent2 l\u00e0:\", outcomes2.count([None, 0]))","0cea0787":"get_win_percentages(agent_middle, agent_leftmost) # \u0111\u00e1nh gi\u00e1 t\u1ef7 l\u1ec7 th\u1eafng c\u1ee7a 2 AI m\u00e0 ch\u00fang ta t\u1ea1o ra n\u00e8","f9863f33":"from learntools.core import binder\nbinder.bind(globals())\nfrom learntools.game_ai.ex1 import *","938067bd":"import numpy as np # l\u1ea5y th\u01b0 vi\u1ec7n \u0111\u1ea1i s\u1ed1 tuy\u1ebfn t\u00ednh\n\n# Gets board at next step if agent drops piece in selected column\ndef drop_piece(grid, col, piece, config):\n    next_grid = grid.copy() # t\u1ea1o b\u1ea3n sao grid (6 h\u00e0ng 7 c\u1ed9t)\n    \n    #config.rows tr\u1ea3 v\u1ec1 s\u1ed1 h\u00e0ng c\u1ee7a b\u00e0n c\u1edd (m\u1eb7c \u0111\u1ecbnh l\u00e0 6)\n    for row in range(config.rows-1, -1, -1): #l\u1eb7p qua c\u00e1c h\u00e0ng\n        #config.rows-1 = 6 - 1 v\u00e0 b\u1eb1ng 5\n        # range(config.rows-1, -1, -1) l\u00e0 l\u1eb7p t\u1eeb 5 \u0111\u1ebfn 0 v\u00e0 \u0111i l\u00f9i, t\u1ee9c l\u00e0 \u0111i t\u1eeb 5 4 3 2 1\n        # t\u1ee9c l\u00e0 \u0111i t\u1eeb d\u01b0\u1edbi l\u00ean tr\u00ean v\u00ec h\u00e0ng tr\u00ean c\u00f9ng l\u00e0 0 v\u00e0 h\u00e0ng d\u01b0\u1edbi c\u00f9ng l\u00e0 5\n        \n        \n        if next_grid[row][col] == 0:\n            # c\u00e1i n\u00e0y ki\u1ec3m tra xem \u00f4 \u0111\u00f3 c\u00f2n r\u1ed1ng kh\u00f4ng\n            # vd m\u00ecnh \u0111\u1ec3 c\u1ed9t l\u00e0 0\n            # th\u00ec n\u00f3 s\u1ebd \u0111i ki\u1ec3m tra t\u1eeb tr\u00ean xu\u1ed1ng\n            # h\u00e0ng 5 c\u1ed9t 0 xem c\u00f3 tr\u1ed1ng kh\u00f4ng\n            # h\u00e0ng 4 c\u1ed9t 0 xem c\u00f3 tr\u1ed1ng kh\u00f4ng\n            # ...\n            # n\u1ebfu r\u1ed7ng th\u00ec tho\u00e1t kh\u1ecfi v\u00f2ng l\u1eb7p\n            break\n    next_grid[row][col] = piece # g\u00e1n c\u00e1i \u00f4 tr\u1ed1ng \u0111\u00f3 qu\u00e2n c\u1edd pi\u00eac\n    return next_grid # tr\u1ea3 v\u1ec1 c\u1ea3 c\u00e1i b\u00e0n c\u1edd m\u1edbi, c\u00e1i n\u00e0y mu\u1ed1n hi\u1ec3u th\u00eam th\u00ec h\u1ecfi anh nh\u00e9\n\n# h\u00e0m tr\u1ea3 v\u1ec1 true n\u1ebfu th\u1ea3 v\u00e0o c\u1ed9t \u0111\u00f3 c\u00f3 th\u1ec3 win game\ndef check_winning_move(obs, config, col, piece):\n    # obs v\u00e0 config e bi\u1ebft r\u1ed3i nh\u00e9\n    # col l\u00e0 c\u1ed9t c\u1ea7n check\n    # piece l\u00e0 lo\u1ea1i qu\u00e2n c\u1edd\n    \n    grid = np.asarray(obs.board).reshape(config.rows, config.columns)\n    # chuy\u1ec3n b\u00e0n c\u1edd th\u00e0nh m\u1ed9t danh s\u00e1ch l\u01b0\u1edbi (m\u1eb7c \u0111\u1ecbnh l\u00e0 6 h\u00e0ng v\u00e0 7 c\u1ed9t)\n    \n    next_grid = drop_piece(grid, col, piece, config) # tr\u1ea3 v\u1ec1 \u00f4 ti\u1ebfp theo s\u1ebd th\u1ea3\n    \n    # \u0111o\u1ea1n code \u1edf d\u01b0\u1edbi r\u1ea5t kh\u00f3 gi\u1ea3i th\u00edch, n\u1ebfu e th\u1eadt s\u1ef1 mu\u1ed1n th\u00ec a m\u1edbi gi\u1ea3i th\u00edch\n    \n    # ki\u1ec3m tra theo h\u00e0ng ngang\n    for row in range(config.rows):\n        for col in range(config.columns-(config.inarow-1)):\n            window = list(next_grid[row,col:col+config.inarow])\n            if window.count(piece) == config.inarow:\n                return True\n    # ki\u1ec3m tra theo h\u00e0ng d\u1ecdc\n    for row in range(config.rows-(config.inarow-1)):\n        for col in range(config.columns):\n            window = list(next_grid[row:row+config.inarow,col])\n            if window.count(piece) == config.inarow:\n                return True\n    # ki\u1ec3m tra \u0111\u01b0\u1eddng ch\u00e9o \u0111i l\u00ean nh\u01b0 n\u00e0y \/\n    for row in range(config.rows-(config.inarow-1)):\n        for col in range(config.columns-(config.inarow-1)):\n            window = list(next_grid[range(row, row+config.inarow), range(col, col+config.inarow)])\n            if window.count(piece) == config.inarow:\n                return True\n    # ki\u1ec3m tra \u0111\u01b0\u1eddng ch\u00e9o \u0111i xu\u1ed1ng nh\u01b0 n\u00e0y \\\n    for row in range(config.inarow-1, config.rows):\n        for col in range(config.columns-(config.inarow-1)):\n            window = list(next_grid[range(row, row-config.inarow, -1), range(col, col+config.inarow)])\n            if window.count(piece) == config.inarow:\n                return True\n    return False","7fdad4e8":"import random\n\n#l\u01b0u \u00fd: \u0111o\u1ea1n code n\u00e0y ch\u1ec9 l\u00e0 ng\u01b0\u1eddi ta g\u1ee3i \u00fd \u0111\u1ec3 m\u00ecnh t\u1ef1 l\u00e0m, h\u00e3y xu\u1ed1ng \u0111o\u1ea1n code b\u00ean d\u01b0\u1edbi \u0111\u1ec3 nghe gi\u1ea3i th\u00edch\n\n\ndef agent_q1(obs, config):\n    valid_moves = [col for col in range(config.columns) if obs.board[col] == 0]\n    # Your code here: Amend the agent!\n    return random.choice(valid_moves)\n    \n# Check your answer\nq_1.check()","44ff45f6":"q_1.hint() # c\u00e1i n\u00e0y s\u1ebd in ra g\u1ee3i \u00fd \u0111\u1ec3 gi\u1ea3i b\u00e0i t\u1eadp n\u00e0y\nq_1.solution() # c\u00e1i n\u00e0y s\u1ebd in ra \u0111\u00e1p \u00e1n","089dc9b8":"def agent_q1(obs, config):\n    valid_moves = [col for col in range(config.columns) if obs.board[col] == 0]\n    #\u0111o\u1ea1n n\u00e0y \u0111\u00e3 qu\u00e1 quen vs em r\u1ed3i \u0111\u00fang kh\u00f4ng, ch\u1ecdn c\u00e1c c\u1ed9t m\u00e0 c\u00f3 th\u1ec3 th\u1ea3 qu\u00e2n c\u1edd v\u00e0o \u0111c\n    for col in valid_moves: # l\u1eb7p qua c\u00e1c c\u1ed9t\n        #vd [0,1,2,3,4,5,6] s\u1ebd l\u1eb7p qua t\u1eebng c\u1ed9t n\u00e0y\n        if check_winning_move(obs, config, col, obs.mark):\n            #h\u00e0m n\u00e0y tr\u1ea3 v\u1ec1 xem c\u1ed9t ti\u1ebfp theo c\u00f3 ph\u1ea3i l\u00e0 c\u1ed9t chi\u1ebfn th\u1eafng kh\u00f4ng\n            #obs.mark s\u1ebd c\u00f3 2 gi\u00e1 tr\u1ecb 1 v\u00e0 2. 1 l\u00e0 ng\u01b0\u1eddi ng\u01b0\u1eddi ch\u01a1i \u0111i \u0111\u1ea7u, 2 ngh\u0129a l\u00e0 ng\u01b0\u1eddi ch\u01a1i \u0111i 2\n            return col #n\u1ebfu h\u00e0m check_winning_move tr\u1ea3 v\u1ec1 True, t\u1ee9c l\u00e0 th\u1ea3 v\u00e0o c\u1ed9t \u0111\u00f3 s\u1ebd win, th\u00ec tr\u1ea3 v\u1ec1 c\u1ed9t \u0111\u00f3\n    return random.choice(valid_moves) #n\u1ebfu kh\u00f4ng th\u00ec ch\u1ecdn m\u1ed9t c\u1ed9t ng\u1eabu nhi\u00ean\n","0099229c":"# l\u01b0u \u00fd \u0111o\u1ea1n code n\u00e0y k c\u00f3 trong b\u00e0i ch\u1ec9 l\u00e0 test xem Ai \u0111\u00e3 ch\u1ea1y ch\u01b0a th\u00f4i\n\nenv.run([agent_q1, agent_random]) \nenv.render(mode=\"ipython\")","44d14675":"def agent_q2(obs, config):\n    valid_moves = [col for col in range(config.columns) if obs.board[col] == 0]\n    # \u0111o\u1ea1n n\u00e0y r\u1ea5t quen r\u1ed3i\n    for col in valid_moves:\n        # \u0111o\u1ea1n n\u00e0y check xem n\u01b0\u1edbc \u0111i ti\u1ebfp theo c\u1ee7a m\u00ecnh c\u00f3 d\u00e0nh chi\u1ebfn th\u1eafng kh\u00f4ng\n        if check_winning_move(obs, config, col, obs.mark):\n            return col\n    for col in valid_moves:\n        # \u0111o\u1ea1n n\u00e0y check xem n\u01b0\u1edbc \u0111i ti\u1ebfp theo c\u1ee7a \u0111\u1ed1i th\u1ee7 c\u00f3 d\u00e0nh chi\u1ebfn th\u1eafng kh\u00f4ng\n        # vd m\u00ecnh l\u00e0 ng\u01b0\u1eddi \u0111i \u0111\u1ea7u ti\u00ean th\u00ec obs.mark c\u1ee7a m\u00ecnh l\u00e0 1\n        # v\u1eady th\u00ec obs.mark % 2 + 1 s\u1ebd = 1 % 2 d\u01b0 1 r\u1ed3i + th\u00eam 1 n\u1eefa l\u00e0 = 2\n        # c\u00f2n m\u00ecnh l\u00e0 ng\u01b0\u1eddi \u0111i th\u1ee9 2 th\u00ec obs.mark c\u1ee7a m\u00ecnh l\u00e0 2\n        # v\u1eady th\u00ec obs.mark % 2 + 1 s\u1ebd = 2 % 2 d\u01b0 0 r\u1ed3i + th\u00eam 1 n\u1eefa l\u00e0 = 1\n        if check_winning_move(obs, config, col, obs.mark%2+1):\n            return col\n    return random.choice(valid_moves) # n\u1ebfu k ph\u1ea3i 2 th tr\u00ean th\u00ec ch\u1ecdn ng\u1eabu nhi\u00ean m\u1ed9t c\u1ed9t\n# Check your answer\nq_2.check()","15b1cd25":"q_2.hint() # \u0111o\u1ea1n n\u00e0y \u0111\u01b0a ra g\u1ee3i \u00fd b\u00e0i 2\nq_2.solution() # \u0111o\u1ea1n n\u00e0y \u0111\u01b0a ra k\u1ebft qu\u1ea3","d668eac2":"# l\u01b0u \u00fd \u0111o\u1ea1n code n\u00e0y k c\u00f3 trong b\u00e0i ch\u1ec9 l\u00e0 test xem Ai \u0111\u00e3 ch\u1ea1y ch\u01b0a th\u00f4i\n\nenv.run([agent_q2, agent_q2]) # cho 2 c\u00f2n AI si\u00eau th\u00f4ng minh ch\u01a1i vs nhau n\u00e8\nenv.render(mode=\"ipython\")","1ba95191":"q_3.hint() # \u0111\u01b0a ra g\u1ee3i \u00fd b\u00e0i 3","93acd163":"q_3.solution() # l\u1ee3i gi\u1ea3i cho c\u00e2u h\u1ecfi th\u1ee9 3\n\n# agent v\u1eabn c\u00f3 th\u1ec3 thua game n\u00eau:\n# \u0111\u1ed1i ph\u01b0\u01a1ng t\u1ea1o m\u1ed9t b\u00e0n c\u1edd m\u00e0 c\u00f3 th\u1ec3 th\u1eafng b\u1eb1ng c\u00e1ch th\u1ea3 qu\u00e2n c\u1edd v\u00e0o b\u1ea5t k\u00ec c\u1ed9t n\u00e0o \n# Ch\u1ec9 c\u00f3 m\u1ed9t c\u1ed9t c\u00f3 th\u1ec3 \u0111i, v\u00e0 n\u1ebfu th\u1ea3 v\u00e0o c\u1ed9t \u0111\u00f3 th\u00ec \u0111\u1ed1i ph\u01b0\u01a1ng s\u1ebd th\u1eafng t\u1ea1i l\u01b0\u1ee3t ti\u1ebfp theo","bae922f0":"def my_agent(obs, config):\n    # Your code here: Amend the agent! # n\u00f3 b\u1ea3o l\u00e0 s\u1eeda \u0111o\u1ea1n code n\u00e0y \u0111\u1ec3 t\u1ea1o 1 agent nh\u01b0ng k\u1ec7 \u0111i, m\u00ecnh \u0111\u1ec3 l\u00e0 ch\u1ecdn random\n    import random\n    valid_moves = [col for col in range(config.columns) if obs.board[col] == 0]\n    return random.choice(valid_moves)","0d399e31":"q_4.check() # ki\u1ec3m tra k\u1ebft qu\u1ea3 b\u00e0i 4","deffba3d":"from kaggle_environments import evaluate, make, utils # import th\u01b0 vi\u1ec7n\n\nenv = make(\"connectx\", debug=True) # t\u1ea1o m\u00f4i tr\u01b0\u1eddng game\nenv.play([my_agent, None], width=500, height=450) # ch\u01a1i vs con agent c\u1ee7a m\u00ecnh, \u0111\u00e1ng ti\u1ebfc l\u00e0 kh\u00f4ng ch\u1ea1y \u0111\u01b0\u1ee3c","7903d54d":"N\u1ebfu ch\u1ec9 c\u1ee9 ch\u01a1i 1 game th\u00ec s\u1ebd kh\u00f4ng \u0111\u00e1nh gi\u00e1 \u0111\u01b0\u1ee3c con AI c\u1ee7a m\u00ecnh c\u00f3 ch\u01a1i gi\u1ed1ng ng\u01b0\u1eddi kh\u00f4ng. M\u00ecnh th\u1eed cho 2 con AI \u0111\u00f3 ch\u01a1i nhi\u1ec1u l\u00ean xem.\nV\u00e0 \u0111\u1ec3 c\u00f4ng b\u1eb1ng th\u00ec n\u1ebfu m\u00ecnh test 100 tr\u1eadn th\u00ec m\u00ecnh s\u1ebd chia l\u00e0m \u0111\u00f4i, m\u1ed7i ng\u01b0\u1eddi c\u00f3 50 l\u1ea7n \u0111\u00e1nh tr\u01b0\u1edbc.","ad18cf45":"B\u1ea1n \u0111\u00e3 xem c\u00e1ch m\u00e0 c\u00f3 th\u1ec3 \u0111\u1ecbnh ngh\u0129a m\u1ed9t agent ng\u1eabu nhi\u00ean r\u1ed3i, trong b\u00e0i t\u1eadp n\u00e0y ch\u00fang ta s\u1ebd c\u1ea3i thi\u1ec7n ch\u00fang 1 ch\u00fat.\n\n\u0110\u1ec3 b\u1eaft \u0111\u1ea7u, h\u00e3y ch\u1ea1y \u0111o\u1ea1n code ph\u00eda d\u01b0\u1edbi \u0111\u1ec3 thi\u1ebft l\u1eadp h\u1ec7 th\u1ed1ng ph\u1ea3n h\u1ed3i c\u1ee7a ch\u00fang t\u00f4i.","14fdadce":"**3) Nh\u00ecn tr\u01b0\u1edbc**\n\n\u0110\u1ebfn b\u00e2y gi\u1edd, ban \u0111\u00e3 t\u1ea1o \u0111\u01b0\u1ee3c m\u1ed9t agent m\u00e0 lu\u00f4n ch\u1ecdn n\u01b0\u1edbc th\u1eafng n\u1ebfu c\u00f3. V\u00e0 n\u00f3 c\u00f3 th\u1ec3 ch\u1eb7n n\u01b0\u1edbc th\u1eafng c\u1ee7a \u0111\u1ed1i ph\u01b0\u01a1ng\n\nB\u1ea1n c\u00f3 th\u1ec3 s\u1ebd mong \u0111\u1ee3i con agent n\u00e0y th\u1ec3 hi\u1ec7n t\u1ed1t. Nh\u01b0ng l\u00e0m th\u1ebf n\u00e0o m\u00e0 n\u00f3 v\u1eabn c\u00f3 th\u1ec3 thua game?","22b980b4":"**2) M\u1ed9t agent th\u00f4ng minh h\u01a1n n\u1eefa**\n\n\u1ede c\u00e2u h\u1ecfi tr\u01b0\u1edbc, b\u1ea1n \u0111\u00e3 t\u1ea1o m\u1ed9t agent m\u00e0 ch\u1ecdn b\u01b0\u1edbc \u0111i chi\u1ebfn th\u1eafng. B\u00e2y gi\u1edd b\u1ea1n s\u1ebd s\u1eed l\u1ea1i code \u0111\u1ec3 t\u1ea1o m\u1ed9t agent m\u00e0 c\u00f3 th\u1ec3 ch\u1eb7n n\u01b0\u1edbc \u0111i chi\u1ebfn th\u1eafng c\u1ee7a \u0111\u1ed1i ph\u01b0\u01a1ng. Th\u1ef1c t\u1ebf th\u00ec c\u00e1i agent n\u00e0y n\u00ean:\n* Ch\u1ecdn n\u01b0\u1edbc \u0111i th\u1eafng n\u1ebfu c\u00f3 th\u1ec3\n* Tr\u01b0\u1eddng h\u1ee3p kh\u00e1c, n\u00f3 s\u1ebd ch\u1ecdn n\u01b0\u1edbc \u0111i m\u00e0 ch\u1eb7n kh\u00f4ng cho \u0111\u1ed1i ph\u01b0\u01a1ng th\u1eafng, n\u1ebfu ch\u1ec9 c\u00f2n m\u1ed9t n\u01b0\u1edbc \u0111i n\u1eefa \u0111\u1ed1i ph\u01b0\u01a1ng \u0111i s\u1ebd th\u1eafng\n* n\u1ebfu kh\u00f4ng v\u00e0o 2 tr\u01b0\u1eddng h\u1ee3p tr\u00ean th\u00ec ch\u1ecdn m\u1ed9t c\u1ed9t ng\u1eabu nhi\u00ean\n\n\u0110\u1ec3 gi\u00fap b\u1ea1n b\u00e0i t\u1eadp n\u00e0y, ban \u0111\u01b0\u1ee3c  \u0111\u01b0\u1ee3c khuy\u1ebfn kh\u00edch b\u1eaft \u0111\u1ea7u v\u1edbi agent t\u1eeb b\u00e0i t\u1eadp tr\u01b0\u1edbc\n\n\u0110\u1ec3 ki\u1ec3m tra xem \u0111\u1ed1i ph\u01b0\u01a1ng c\u00f3 b\u01b0\u1edbc \u0111i chi\u1ebfn th\u1eafng, b\u1ea1n c\u00f3 th\u1ec3 d\u00f9ng h\u00e0m check_winning_move(), nh\u01b0ng b\u1ea1n n\u00ean cung c\u1ea5p gi\u00e1 tr\u1ecb piece kh\u00e1c (t\u1ee9c l\u00e0 gi\u00e1 tr\u1ecb qu\u00e2n c\u1edd c\u1ee7a \u0111\u1ed1i ph\u01b0\u01a1ng)","4cfac064":"M\u00f4i tr\u01b0\u1eddng game \u0111\u00e3 c\u00f3 s\u1eb5n nh\u1eefng con AI \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a tr\u01b0\u1edbc r\u1ed3i, \u0111\u1ec3 xem ch\u00fang th\u00ec ch\u1ea1y \u0111o\u1ea1n code ph\u00eda d\u01b0\u1edbi","d749dafd":"M\u00ecnh s\u1ebd t\u1ea1o ri\u00eang c\u00e1c con AI m\u00e0 m\u00ecnh th\u00edch b\u1eb1ng c\u00e1ch t\u1ea1o m\u1ed9t h\u00e0m m\u00e0 c\u00f3 2 tham s\u1ed1. obs v\u00e0 config v\u00e0 h\u00e0m \u0111\u00f3 ph\u1ea3i tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb nguy\u00ean t\u1eeb 0-6\n\nCh\u00fang ta s\u1ebd l\u1ea5y vd v\u1edbi 3 con AI ph\u00eda d\u01b0\u1edbi:\n1. Con AI 1 s\u1ebd ch\u1ecdn ng\u00e3u nhi\u00ean c\u1ed9t \u0111\u1ec3 th\u1ea3 v\u00e0o, ho\u1ea1t \u0111\u1ed9ng gi\u1ed1ng nh\u01b0 con Random m\u1eb7c \u0111\u1ecbnh\n2. Con AI n\u00e0y s\u1ebd lu\u00f4n ch\u1ecdn c\u1ed9t \u1edf gi\u1eefa \u0111\u1ec3 th\u1ea3 v\u00e0 kh\u00f4ng quan t\u00e2m l\u00e0 c\u1ed9t \u0111\u00f3 c\u00f2n th\u1ea3 \u0111\u01b0\u1ee3c n\u1eefa hay kh\u00f4ng\n3. Con AI n\u00e0y s\u1ebd lu\u00f4n ch\u1ecdn c\u1ed9t b\u00ean tr\u00e1i \u0111\u1ec3 tha. VD s\u1ebd lu\u00f4n th\u1ea3 c\u1ed9t th\u1ee9 1, n\u1ebfu c\u1ed9t m\u1ed9t \u0111\u1ea7y s\u1ebd chuy\u1ec3n sang c\u1ed9t th\u1ee9 2","c2915037":"Sau khi \u0111\u1ecbnh ngh\u0129a 3 con AI ch\u00fang ta s\u1ebd test th\u1eed th\u00f4i n\u00e0o","742201b4":"\u0110o\u1ea1n code ph\u00eda d\u01b0\u1edbi s\u1ebd cho 2 c\u00f2n AI random ch\u01a1i v\u1edbi nhau","2c6a5eff":"**1) 1 agents th\u00f4ng minh h\u01a1n**\n\nCh\u00fang ta c\u00f3 th\u1ec3 c\u1ea3i thi\u1ec7n k\u0129 n\u1eb3ng c\u1ee7a agent m\u00e0 kh\u00f4ng ph\u1ea3i b\u00e0y ra m\u1ed9t chi\u1ebfn thu\u1eadt ph\u1ee9c t\u1ea1p, \u0111\u01a1n gi\u1ea3n b\u1eb1ng c\u00e1ch ch\u1ecdn nh\u01b0ng n\u01b0\u1edbc \u0111i th\u1eafng n\u1ebfu ch\u00fang t\u1ed3n t\u1ea1i.\n\nTrong b\u00e0i t\u1eadp n\u00e0y, ban s\u1ebd t\u1ea1o 1 agent sau:\n- Ch\u1ecdn b\u01b0\u1edbc \u0111i chi\u1ebfn th\u1eafng n\u00f3 t\u1ed3n t\u1ea1i (N\u1ebfu m\u00e0 c\u00f3 nhi\u1ec1u h\u01a1n m\u1ed9t n\u01b0\u1edbc \u0111i chi\u1ebfn th\u1eafng, th\u00ec agent s\u1ebd ch\u1ecdn c\u00e1i n\u00e0o c\u0169ng \u0111\u01b0\u1ee3c)\n- C\u00e1c tr\u01b0\u1eddng h\u1ee3p c\u00f2n l\u1ea1i, n\u00f3 s\u1ebd ch\u1ecdn ng\u1eabu nhi\u00ean\n\n\u0110\u1ec3 gi\u00fap b\u1ea1n \u0111\u1ea1t \u0111\u01b0\u1ee3c m\u00fac \u0111\u00edch tr\u00ean, ch\u00fang t\u00f4i \u0111\u00e3 cung c\u1ea5p m\u1ed9t s\u1ed1 h\u00e0m gi\u00fap \u0111\u1ee1 trong ph\u1ea7n code ph\u00eda d\u01b0\u1edbi","9f99c1d0":"### Sau khi hi\u1ec3u xong ph\u1ea7n tr\u00ean th\u00ec m\u00ecnh s\u1ebd c\u00f3 th\u1ec3 l\u00e0m b\u00e0i 2 n\u00e0y\nB\u00e0i n\u00e0y \u0111\u01b0\u1ee3c d\u1ecbch t\u1eeb link sau:\nhttps:\/\/www.kaggle.com\/tahaakr\/exercise-play-the-game?fbclid=IwAR2pBEDnMWonvvhn_RWdBHsImbp2AMC4btHvelPQv7U_DqX_k2iG6xtg3QQ","3e2cd8c8":"### **\u0110\u00e2y l\u00e0 nh\u1eefng ph\u1ea7n code ph\u1ea3i \u0111\u1ecdc th\u00eam**","751841dd":"h\u00e0m check_winning_move() nh\u1eadn 4 tham s\u1ed1: 2 tham s\u1ed1 \u0111\u1ea7u ti\u00ean l\u00e0 (obs v\u00e0 config) quen thu\u1ed9c r\u1ed3i, v\u00e0:\n* col l\u00e0 b\u1ea5t k\u00ec c\u1ed9t n\u00e0o ch\u01b0a b\u1ecb \u0111\u1ea7y\n* piece c\u00f3 th\u1ec3 l\u00e0 qu\u00e2n c\u1edd c\u1ee7a agent ho\u1eb7c c\u1ee7a \u0111\u1ed1i ph\u01b0\u01a1ng\n\nH\u00e0m tr\u1ea3 v\u1ec1 True n\u1ebfu th\u1ea3 1 piece v\u00e0o m\u1ed9t c\u1ed1t \u0111\u1ec3 th\u1eafng game (c\u1ea3 cho agent ho\u1eb7c l\u00e0 \u0111\u1ed1i th\u1ee7), c\u00e1c tr\u01b0\u1eddng h\u1ee3p kh\u00e1c tr\u1ea3 v\u1ec1 False. \u0110\u1ec3 ki\u1ec3m tra xem agent c\u00f3 th\u1ec3 th\u1eafng trong l\u01b0\u1ee3t \u0111i ti\u1ebfp theo, ban n\u00ean \u0111\u1eb7t pi\u00eac = obs.mark\n\n**\u0110\u1ec3 ho\u00e0n th\u00e0nh b\u00e0i t\u1ea1p n\u00e0y, b\u1ea1n c\u1ea7n \u0111\u1ecbnh ngh\u0129a agent_q1() trong \u0111o\u1ea1n code ph\u00eda d\u01b0\u1edbi. \u0110\u1ec3 l\u00e0m \u0111i\u1ec1u n\u00e0y, b\u1ea1n \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng h\u00e0m check_winning_move() \u0111\u1ec3 gi\u00fap.**\n\nH\u00e0m drop_piece() (\u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a \u1edf \u0111o\u1ea1n code tr\u00ean) \u0111c g\u1ecdi trong h\u00e0m check_winning_move(). C\u1ee9 tho\u1ea3i m\u00e1i m\u00e0 kh\u00e1m ph\u00e1 chi ti\u1ebft, nh\u01b0ng b\u1ea1n kh\u00f4ng c\u1ea7n hi\u1ec3u chi ti\u1ebft \u0111\u1ec3 gi\u1ea3i b\u00e0i t\u1eadp n\u00e0y.","7faa1d03":"**5) N\u1ed9p b\u00e0i d\u1ef1 thi**\n\nKh\u00f4ng c\u1ea7n d\u1ecbch, n\u00f3 ch\u1ec9 h\u01b0\u1edbng d\u1eabn n\u1ed9p b\u00e0i th\u00f4i","273a2b82":"**4) Ch\u01a1i l\u1ea1i v\u1edbi agent**\n\nS\u1eeda l\u1ea1i h\u00e0m my_agent() ph\u00eda d\u01b0\u1edbi \u0111\u1ec3 t\u1ea1o m\u1ed9t con agent cho ri\u00eang m\u00ecnh. C\u1ee9 tho\u1ea3i m\u00e1i copy c\u00e1c con agent m\u00e0 b\u1ea1n t\u1ea1o \u1edf tr\u00ean.\n\nCh\u00fa \u00fd l\u00e0 b\u1ea1n ph\u1ea3i b\u1ea3o g\u1ed3m c\u00e1c th\u01b0 vi\u1ec7n c\u1ea7n thi\u1ebft v\u00e0 c\u00e1c h\u00e0m h\u1ed7 tr\u1ee3. ... K c\u1ea7n d\u1ecbch","2835e607":"C\u00f3 2 con AI l\u00e0 \"random\" v\u00e0 \"negammax\"\n1. Random ngh\u0129a l\u00e0 ch\u1ecdn ng\u1eabu nhi\u00ean m\u1ed9t c\u1ed9t r\u1ed3i th\u1ea3 xu\u1ed1ng. V\u00e0 ph\u1ea3i th\u1ea3 v\u00e0o c\u1ed9t m\u00e0 \u0111ang c\u00f2n ch\u1ed7 tr\u1ed1ng. VD m\u1ed9t b\u00e0n c\u1edd c\u00f3 6 h\u00e0ng m\u00e0 \u1edf c\u1ed9t th\u1ee9 nh\u1ea5t \u0111\u00e3 c\u00f3 6 qu\u00e2n c\u1edd th\u00ec n\u1ebfu m\u00ecnh th\u1ea3 ti\u1ebfp v\u00e0o c\u1ed9t th\u1ee9 nh\u1ea5t s\u1ebd \u0111\u01b0\u1ee3c t\u00ednh l\u00e0 \u0111i sai v\u00e0 thua lu\u00f4n."}}