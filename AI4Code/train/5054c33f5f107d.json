{"cell_type":{"5f92baf0":"code","8a3ffe63":"code","34e94864":"code","682b8a08":"code","7b185b58":"code","8980c600":"markdown","2d87611c":"markdown","6287ad08":"markdown","2265ff8d":"markdown"},"source":{"5f92baf0":"%%writefile main.py\n\n# BUGFIX: Kaggle Submission Environment os.getcwd() == \"\/kaggle\/working\/\"\n# https:\/\/www.kaggle.com\/c\/rock-paper-scissors\/discussion\/216159\nimport os\nimport glob\nif os.environ.get('GFOOTBALL_DATA_DIR', ''):\n    os.chdir('\/kaggle_simulations\/agent\/')\n    print(\"os.getcwd() \", os.getcwd())\n    print(\"glob.glob(*)\", glob.glob(\"*\"))\n    print(\"os.environ  \", os.environ)\n\n    \nfrom kaggle_environments.envs.hungry_geese.hungry_geese import Observation, Configuration, Action, row_col\nimport random\n    \n# obs  {'remainingOverageTime': 60, 'index': 1, 'step': 30, 'geese': [[56], [68], [51, 52], [54]], 'food': [8, 15]}\n# conf {'episodeSteps': 200, 'actTimeout': 1, 'runTimeout': 1200, 'columns': 11, 'rows': 7, 'hunger_rate': 40, 'min_food': 2, 'max_length': 99}\ndef go_west_agent(obs, conf):\n    print(\"obs \", obs)\n    # print(\"conf\", conf)\n\n    ## Action.NORTH, Action.EAST, Action.SOUTH, Action.WEST\n    # return random.choice(list(Action)).name;  # random agent dies quickly\n    return Action.WEST.name  # \"WEST\"","8a3ffe63":"%run main.py","34e94864":"from kaggle_environments import evaluate, make, utils\n\nenv = make(\"hungry_geese\", debug=True)\nenv.run([\n    go_west_agent, \n    go_west_agent, \n    # go_west_agent, \n    # go_west_agent\n])\nenv.render(mode=\"ipython\", width=500, height=450)","682b8a08":"import numpy as np\nfrom joblib import Parallel, delayed\n\nresults = Parallel()( \n    delayed(evaluate)(\"hungry_geese\", [\n        go_west_agent, \n        go_west_agent, \n        go_west_agent, \n        go_west_agent\n    ], num_episodes=1) \nfor _ in range(10) )\n\nprint(\"results\")\ndisplay(results)\n\nprint(\"mean\", np.mean(results, axis=0).astype(np.int).flatten())\nprint(\"std \", np.std( results, axis=0).astype(np.int).flatten())\nprint(\"min \", np.min( results, axis=0).astype(np.int).flatten())\nprint(\"max \", np.max( results, axis=0).astype(np.int).flatten())","7b185b58":"!GZIP=-9 tar cfz submission.tar.gz *.py","8980c600":"# Evaluation\n\nThis lets us average out scores over a number of games","2d87611c":"# Hungry Geese Go West!\n\nThis is the simplest of all possible agents. Hungry Geese Go West!\n\nThis is mostly intended as a testcase to understand the basic game mechanics.\n\n- Game board is 11x7 == 77 squares total (larger than an 64 bit number)\n- Squares are numbered as if a 1D array counting from top-left, horizontal first, to bottom-right  \n- `obs.geese[obs.index] = []` represents all the squares your goose currently occupues\n  - `obs.geese[obs.index][0]`  is your head\n  - `obs.geese[obs.index][-1]` is your tail\n- `obs.food = []` is where the food is\n- `conf.hunger_rate = 40` represents the number of turns before losing a segment\n  - if you shrink to 0 segments you die\n  - if you are the last goose standing, you win\n- Game runs for 200 turns \n    - you will have lose a total of 5 squares to hunger by the last move\n- You have 1 second to act\n- Random agent dies very quickly as it often tries to move back over its own body \n- Agents must return a string from `['NORTH', 'EAST', 'SOUTH', 'WEST']`\n  - Action is an enum with the valid moves, but return the `.name` string\n  - Returning a number is invalid\n  - Not returning anything makes you go NORTH\n\nHungry Geese Go West!","6287ad08":"# Play","2265ff8d":"# Submission\n\n# Submission\n\nMulti-file submissions are a new Kaggle feature since Halite.\n> Today we released support for multi-file agents. To upload an agent with multiple files, submit your work as a .tar.gz archive (the name must end in .tar.gz) with a python file at the top level called main.py that conforms to the normal agent submission requirements. The maximum upload size of 100MB applies to the full archive. For the initial release of this feature we only compile the main.py file so to import other python files you'll either have to compile\/exec or importlib the relevant files. We're hoping to improve this in a future release and will update this topic as appropriate.\n> - https:\/\/www.kaggle.com\/c\/halite\/discussion\/177686"}}