{"cell_type":{"d1254669":"code","c15bbab6":"code","69d286d7":"code","a53b60f0":"code","286e7bbc":"code","7f13a607":"code","5844595c":"code","eab5beff":"code","59c39822":"code","ee627b7e":"code","1f487daa":"code","4d3115a0":"code","18b9aef1":"code","a82063f0":"code","6c029f69":"code","6a6f72b7":"code","08ea82ab":"code","a01feb46":"code","9147c51e":"code","a0e0e9d7":"code","166d3b3c":"code","f23abae6":"code","19e64825":"code","e7e6b5a8":"code","a90e93ac":"code","919b1e5e":"code","708648cd":"code","ab4790c2":"code","c34cacc8":"code","8c72a596":"code","091ae43e":"code","3c16a477":"code","1dfe1f28":"code","37f7d0aa":"code","362c81a2":"code","6aa4f3cb":"code","5450468c":"markdown","3fdba7a5":"markdown","d81ebde8":"markdown","4e59ab36":"markdown","4be27868":"markdown","d70ef1a8":"markdown","82284eab":"markdown","1668a49d":"markdown","96d52ec8":"markdown","0ac66394":"markdown","66119f68":"markdown","aecb4c37":"markdown","178272b6":"markdown","7e5ecdb0":"markdown","b82047a4":"markdown","b9294663":"markdown","54a8c37c":"markdown","edce4cb6":"markdown","de5460ec":"markdown","6760db39":"markdown","fcade5bf":"markdown"},"source":{"d1254669":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","c15bbab6":"data=pd.read_csv('..\/input\/data.csv')","69d286d7":"data.shape","a53b60f0":"data.head()","286e7bbc":"data.info()","7f13a607":"data.describe()","5844595c":"print(data['Nationality'].value_counts(dropna =False))","eab5beff":"data.columns","59c39822":"data.drop([\"Photo\"],axis=1, inplace=True)\ndata.drop([\"Flag\"],axis=1, inplace=True)\ndata.drop([\"Club Logo\"],axis=1, inplace=True)","ee627b7e":"data.head()","1f487daa":"def club(x):\n    return data[data['Club'] == x][['Name','Jersey Number','Position','Overall','Nationality','Age','Wage',\n                                    'Value','Contract Valid Until']]\n#We created a function to bring a club data whenever we want","4d3115a0":"#for example\nclub('Arsenal')","18b9aef1":"xarsenal = club('Arsenal')\nxarsenal.shape","a82063f0":"# checking if the data contains any NULL value\n\ndata.isnull().sum()","6c029f69":"# filling the missing value for the continous variables for proper data visualization\n\ndata['ShortPassing'].fillna(data['ShortPassing'].mean(), inplace = True)\ndata['Volleys'].fillna(data['Volleys'].mean(), inplace = True)\ndata['Dribbling'].fillna(data['Dribbling'].mean(), inplace = True)\ndata['Curve'].fillna(data['Curve'].mean(), inplace = True)\ndata['FKAccuracy'].fillna(data['FKAccuracy'], inplace = True)\ndata['LongPassing'].fillna(data['LongPassing'].mean(), inplace = True)\ndata['BallControl'].fillna(data['BallControl'].mean(), inplace = True)\ndata['HeadingAccuracy'].fillna(data['HeadingAccuracy'].mean(), inplace = True)\ndata['Finishing'].fillna(data['Finishing'].mean(), inplace = True)\ndata['Crossing'].fillna(data['Crossing'].mean(), inplace = True)\ndata['Weight'].fillna('200lbs', inplace = True)\ndata['Contract Valid Until'].fillna(2019, inplace = True)\ndata['Height'].fillna(\"5'11\", inplace = True)\ndata['Loaned From'].fillna('None', inplace = True)\ndata['Joined'].fillna('Jul 1, 2018', inplace = True)\ndata['Jersey Number'].fillna(8, inplace = True)\ndata['Body Type'].fillna('Normal', inplace = True)\ndata['Position'].fillna('ST', inplace = True)\ndata['Club'].fillna('No Club', inplace = True)\ndata['Work Rate'].fillna('Medium\/ Medium', inplace = True)\ndata['Skill Moves'].fillna(data['Skill Moves'].median(), inplace = True)\ndata['Weak Foot'].fillna(3, inplace = True)\ndata['Preferred Foot'].fillna('Right', inplace = True)\ndata['International Reputation'].fillna(1, inplace = True)\ndata['Wage'].fillna('\u20ac200K', inplace = True)","6a6f72b7":"data.corr()","08ea82ab":"f,ax = plt.subplots(figsize=(12,12)) \nsns.heatmap(data.corr(), annot=False, linewidths=.5, fmt= '.1f',ax=ax)\n# Annot=False means, we don't want to see numbers in boxes because there are too many features it can get complicated.\nplt.show()","a01feb46":"# Line Plot\n# color = color, label = label, linewidth = width of line, alpha = opacity, grid = grid, linestyle = sytle of line\ndata.Potential.plot(kind = 'line', color = 'b',label = 'Potential',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\ndata.Overall.plot(color = 'r',label = 'Overall',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()\n\n# x axis = shows frequency.","9147c51e":"data1 = data.loc[:,[\"Potential\",\"Overall\",\"Age\"]]\ndata1.plot()\nplt.show()","a0e0e9d7":"data1.plot(subplots = True)\nplt.show()","166d3b3c":"plt.scatter(data.Potential, data.Overall, alpha=0.5)\nplt.show()","f23abae6":"# To show that there are people having same age\n# Histogram: number of players's age\n\nsns.set(style = \"dark\", palette = \"colorblind\", color_codes = True)\nx = data.Age\nplt.figure(figsize = (15,8))\nax = sns.distplot(x, bins = 58, kde = False, color = 'g')\nax.set_xlabel(xlabel = \"Player\\'s age\", fontsize = 16)\nax.set_ylabel(ylabel = 'Number of players', fontsize = 16)\nax.set_title(label = 'Histogram of players age', fontsize = 20)\nplt.show()","19e64825":"data.Acceleration.plot(kind = 'hist',bins = 50,figsize = (12,12))\nplt.xlabel('Acceleration')\nplt.show()\n\n# or\n# data1.plot(kind = \"hist\",y = \"Acceleration\",bins = 50,range= (0,250),normed = True)\n","e7e6b5a8":"overall85 = data['Overall']>85     # There are only 77 players with Overall higher than 85\ndata85=data[overall85]\ndata85#(dataframe)","a90e93ac":"data[np.logical_and(data['Overall']>90, data['Age']<30 )]\n# There are only 4 players with Overall higher than 90 and Age lower than 30.","919b1e5e":"PositionGK= data['Club']=='Arsenal'\ndataGK=data[PositionGK]\n#We take the Arsenal club for bar plot","708648cd":"player_list = list(dataGK['Nationality'].unique())    #we take the Nationality feature's unique values\nplayer_ratio=[]   #we create a empty list\nfor i in player_list:\n    x = dataGK[dataGK['Nationality']==i]\n    player_rate = sum(x.Overall)\/len(x)\n    player_ratio.append(player_rate)\n#we take the mean of the player overalls by Nationality\n    \ndata2 = pd.DataFrame({'player_list': player_list,'player_ratio':player_ratio})\nnew_index = (data2['player_ratio'].sort_values(ascending=False)).index.values   #\"ascending=False\" =downward\nsorted_data = data2.reindex(new_index) \n#created a new dataFrame","ab4790c2":"# visualization (Bar Plot)\nplt.figure(figsize=(15,15))\nsns.barplot(x=sorted_data['player_list'], y=sorted_data['player_ratio'])\nplt.xticks(rotation= 45)\nplt.xlabel('Nationality')\nplt.ylabel('Arsenal Player Overalls Ratio')\nplt.title('Arsenal Player Overalls Ratio According to Nationality')\nplt.show()","c34cacc8":"data85.head(10)","8c72a596":"teams85=data85.Club.value_counts()    #we count the Clubs\n#print\nplt.figure(figsize=(20,7))\nsns.barplot(x=teams85[:10].index,y=teams85[:10].values)\nplt.ylabel('Number of Players Higher Overall Than 85')\nplt.xlabel('Clubs')\nplt.title('Team Counts(First 10)',color = 'blue',fontsize=15)","091ae43e":"# comparison of preferred foot over the different players\n\nplt.rcParams['figure.figsize'] = (10, 5)\nsns.countplot(data['Preferred Foot'], palette = 'dark')\nplt.title('Most Preferred Foot of the Players', fontsize = 20)\nplt.show()","3c16a477":"# different positions acquired by the players \n\nplt.figure(figsize = (18, 8))\nplt.style.use('fivethirtyeight')\nax = sns.countplot('Position', data = data, palette = 'bone')\nax.set_xlabel(xlabel = 'Different Positions in Football', fontsize = 16)\nax.set_ylabel(ylabel = 'Count of Players', fontsize = 16)\nax.set_title(label = 'Comparison of Positions and Players', fontsize = 20)\nplt.show()","1dfe1f28":"datapair=data.loc[:,[\"Age\",\"Potential\"]] # we take Age and Potential features\n#Print\nsns.pairplot(datapair)","37f7d0aa":"overall87 = data['Overall']>87    # There are only 9 players with Overall higher than 87\ndata87=data[overall87]\ndata87.head()","362c81a2":"plt.figure(figsize=(25,10))\nsns.swarmplot(x=\"Nationality\", y=\"Age\",hue=\"Club\", data=data87, palette= \"colorblind\")\nplt.show()","6aa4f3cb":"# distribution of player popularity in some clubs\n\nsome_clubs = ('CD Legan\u00e9s', 'Southampton', 'RC Celta','Arsenal', 'Manchestar City',\n              'Tottenham Hotspur', 'FC Barcelona', 'Valencia CF', 'Chelsea', 'Real Madrid','Galatasaray SK')\n\ndata_club = data.loc[data['Club'].isin(some_clubs) & data['International Reputation']]\n\nplt.rcParams['figure.figsize'] = (16, 8)\nax = sns.violinplot(x = 'Club', y = 'International Reputation', data = data_club, palette = 'bright')\nax.set_xlabel(xlabel = 'Names of some popular Clubs', fontsize = 11)\nax.set_ylabel(ylabel = 'Distribution of Reputation', fontsize = 11)\nax.set_title(label = 'Disstribution of International Reputation in some Popular Clubs', fontsize = 20)\nplt.xticks(rotation = 90)\nplt.show()","5450468c":"<a id=\"4\"><\/a> \n## Sub plot","3fdba7a5":"<a id=\"8\"><\/a> \n## Seaborn","d81ebde8":"<a id=\"2\"><\/a>\n## Heat Map","4e59ab36":"<a id=\"1\"><\/a> ","4be27868":"## References\nhttps:\/\/www.kaggle.com\/kanncaa1\/seaborn-tutorial-for-beginners\n\nhttps:\/\/www.kaggle.com\/roshansharma\/fifa-data-visualization","d70ef1a8":"Photo,Flag and Club Logo features are just links, we don't need them so we can delete(drop) these.","82284eab":"<a id=\"9\"><\/a> \n## Bar Plot","1668a49d":"<a id=\"7\"><\/a> \n## Filtering","96d52ec8":"<a id=\"6\"><\/a> \n## Histogram","0ac66394":"<a id=\"13\"><\/a> \n## Violin Plot","66119f68":"<a id=\"11\"><\/a> \n## Pair Plot","aecb4c37":"<a id=\"12\"><\/a> \n## Swarm Plot","178272b6":"or we can see plot in a different way","7e5ecdb0":"* [Reading and Preperation of Data](#0)\n* [Correlation](#1)\n* [Heat Map](#2)\n* [Line Plot](#3)\n* [Sub Plot](#4)\n* [Scatter Plot](#5)\n* [Histogram](#6)\n* [Filtering](#7)\n* [Visualisation With Seaborn](#8)\n    1. [Bar Plot](#9)\n    1. [Count Plot](#10)\n    1. [Pair Plot](#11)\n    1. [Swarm Plot](#12)\n    1. [Violin Plot](#13)","b82047a4":"As you can see we drop 3 features that we mentioned earlier. Lets take a look at the correlations and than the correlation heat map.","b9294663":"Lets look at the line plot.","54a8c37c":"<a id=\"0\"><\/a> \n## Reading and Preperation of Data","edce4cb6":"<a id=\"10\"><\/a> \n## Count Plot","de5460ec":"<a id=\"5\"><\/a> \n## Scatter plot","6760db39":"<a id=\"3\"><\/a> \n## Line Plot","fcade5bf":"<a id=\"1\"><\/a> \n## Correlation"}}