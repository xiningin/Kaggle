{"cell_type":{"385b74b2":"code","4fe23ce5":"code","e4371882":"code","8465b876":"code","7aee4604":"code","70c5d93a":"code","7381aadd":"code","ae4dd26f":"code","b789aa43":"code","807c1564":"code","30c922d5":"code","755dea6f":"code","aad64b90":"code","26b1054b":"code","2a93413a":"code","8176e834":"markdown","a3817352":"markdown","1faecaab":"markdown","835772b5":"markdown","d41a74d4":"markdown","0576b4c6":"markdown","c108958b":"markdown","c2dcc7be":"markdown","a80bda5b":"markdown"},"source":{"385b74b2":"# Bibliotecas Utilizadas\n\n# Python Data Analysis Library - Utilizada para trabalhar com a estrutura dos dados e todo processo de ETL\nimport pandas as pd\n\n# Matplotlib - Utilizada para plot dos gr\u00e1ficos 2D\nimport matplotlib.pyplot as plt\nplt.rcParams['figure.figsize'] = (11,7) # Define o tamanho e estilo dos gr\u00e1ficos\nplt.style.use('seaborn')\n\n# SKLearning - Utilizada para treinar e testar a regress\u00e3o linear executada no projeto\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import preprocessing\nfrom sklearn.linear_model import LinearRegression","4fe23ce5":"original_gas_prices_df = pd.read_csv('\/kaggle\/input\/gas-prices-in-brazil\/2004-2019.tsv', sep='\\t')\noriginal_gas_prices_df.drop(columns='Unnamed: 0', inplace=True)\noriginal_gas_prices_df.sample(5)","e4371882":"# Adicionando tipagem \u00e0s colunas que vamos utilizar posteriormente\n\n# Algumas colunas possuem '-' como valor, causando erro ao converter o tipo, por isso errors='coerse' seta como NaN\noriginal_gas_prices_df['DATA FINAL'] = pd.to_datetime(original_gas_prices_df['DATA FINAL'])\noriginal_gas_prices_df['PRE\u00c7O M\u00c9DIO DISTRIBUI\u00c7\u00c3O'] = pd.to_numeric(original_gas_prices_df['PRE\u00c7O M\u00c9DIO DISTRIBUI\u00c7\u00c3O'], errors='coerce')\noriginal_gas_prices_df['PRE\u00c7O M\u00c9DIO REVENDA'] = pd.to_numeric(original_gas_prices_df['PRE\u00c7O M\u00c9DIO REVENDA'], errors='coerce')\n\n# Seta Data final da pesquisa como ind\u00edce\noriginal_gas_prices_df.set_index(['DATA FINAL'], inplace=True)\n\n# Definindo quais colunas e tuplas vamos utilizar\nused_columns = ['DATA','PRODUTO','ESTADO','REGI\u00c3O','PRE\u00c7O M\u00c9DIO DISTRIBUI\u00c7\u00c3O','PRE\u00c7O M\u00c9DIO REVENDA']\nused_products = ['ETANOL HIDRATADO','GASOLINA COMUM','\u00d3LEO DIESEL']\n\n# GroupBy por PRODUTO, ESTADO e REGI\u00c3O\n# Agrupa tamb\u00e9m as datas pelo m\u00eas, fazendo a m\u00e9dia do valor\nmonthly_df = original_gas_prices_df.groupby(['PRODUTO', 'ESTADO', 'REGI\u00c3O']).resample('M').mean().reset_index()\n# Cria a coluna DATA removendo os dias\nmonthly_df['DATA'] = monthly_df['DATA FINAL'].dt.to_period('M')\n\n# Cria o dataframe final de pre\u00e7o de combust\u00edvel, j\u00e1 filtrando apenas com as colunas e tuplas relevantes\ngas_prices_df = monthly_df[used_columns]\ngas_prices_df = gas_prices_df[gas_prices_df.PRODUTO.isin(used_products)]\n# Remove tuplas com dados nulos\ngas_prices_df = gas_prices_df.dropna(how='any')\n\n# Cria colunas de varia\u00e7\u00f5es entre a distribui\u00e7\u00e3o e revenda, valor e porcentagem\ngas_prices_df['VARIA\u00c7\u00c3O DIST X REV'] = gas_prices_df['PRE\u00c7O M\u00c9DIO REVENDA'] - gas_prices_df['PRE\u00c7O M\u00c9DIO DISTRIBUI\u00c7\u00c3O']\ngas_prices_df['VARIA\u00c7\u00c3O PERCENTUAL DIST X REV'] = gas_prices_df['VARIA\u00c7\u00c3O DIST X REV'] \/  gas_prices_df['PRE\u00c7O M\u00c9DIO DISTRIBUI\u00c7\u00c3O'] * 100\n\ngas_prices_df.set_index(['DATA', 'PRODUTO', 'ESTADO', 'REGI\u00c3O'], inplace=True)\ngas_prices_df.sample(n=5)","8465b876":"original_inflation_rate_df = pd.read_csv('\/kaggle\/input\/inflation-rate-in-brazil-1984-2019\/inflation-rate-brazil.csv')\noriginal_inflation_rate_df.sample(n=5)","7aee4604":"# Tipa corretamente a coluna de data e ignora os dias\noriginal_inflation_rate_df['date'] = pd.to_datetime(original_inflation_rate_df['date']).dt.to_period('M')\n# Define data como index da coluna para o merge posterior\ninflation_rate_df = original_inflation_rate_df.set_index('date')['2004':'2019']\ninflation_rate_df.sample(n=5)","70c5d93a":"# Nossa DW \u00e9 o dataframe main_df\n\n# Copia os valores do dataframe resultante do ETL de pre\u00e7o\nmain_df = gas_prices_df.copy()\n# Reseta o index para um valor sequencial e depois seta a coluna DATA como novo index\nmain_df.reset_index(inplace=True)\nmain_df.set_index('DATA', inplace=True)\n\n\nmain_df['INFLA\u00c7\u00c3O ANUAL'] = inflation_rate_df['annual_accumulation']  # INFLA\u00c7\u00c3O ANUAL ACUMULADA NOS \u00daLTIMOS 12 MESES\nmain_df['INFLA\u00c7\u00c3O ABSOLUTA'] = inflation_rate_df['absolute_index']  # INFLA\u00c7\u00c3O ANUAL ACUMULADA NOS \u00daLTIMOS 12 MESES\n\nmain_df = main_df.to_timestamp()\nmain_df = main_df['2006':]\nmain_df.sample(5)","7381aadd":"# Fun\u00e7\u00e3o que agrupa os dados, define os eixos e plota a varia\u00e7\u00e3o entre o pre\u00e7o de revenda e distribui\u00e7\u00e3o dos combust\u00edveis ao longo do tempo\ndef plot_prices_correlation(produto):\n    grp = main_df[main_df.PRODUTO == produto].groupby(['DATA']).mean()\n    fig, ax = plt.subplots()\n\n    grp.plot(y='PRE\u00c7O M\u00c9DIO REVENDA', label='Revenda', ax=ax)\n    grp.plot(y='PRE\u00c7O M\u00c9DIO DISTRIBUI\u00c7\u00c3O', label='Distribui\u00e7\u00e3o', ax=ax)\n    fig.suptitle('Pre\u00e7os de Distribui\u00e7\u00e3o e Revenda - ' + produto)\n    ax.set_xlabel('Data')\n    ax.set_ylabel('Pre\u00e7o - R$\/l')\n    ax.grid(True)\n    \n    ax_var = ax.twinx()\n\n    grp.plot(y='VARIA\u00c7\u00c3O PERCENTUAL DIST X REV', label='Varia\u00e7\u00e3o - Distribui\u00e7\u00e3o', ax=ax_var, c='#c44e52')\n    ax_var.set_ylabel('% - Varia\u00e7\u00e3o entre Distribui\u00e7\u00e3o e Revenda', color='#c44e52')\n    ax_var.get_legend().remove()\n    ax_var.grid(False)\n    plt.show()\n\nplot_prices_correlation('GASOLINA COMUM')\nplot_prices_correlation('ETANOL HIDRATADO')\nplot_prices_correlation('\u00d3LEO DIESEL')\n","ae4dd26f":"# Fun\u00e7\u00e3o que agrupa os dados, define os eixos e plota a varia\u00e7\u00e3o do pre\u00e7o por regi\u00e3o ao longo do tempo\ndef plot_avg_region(produto):\n    avg_per_region_df = main_df['2009':].groupby(['PRODUTO', 'REGI\u00c3O', 'DATA']).mean()\n    avg_per_region_for_product_df = avg_per_region_df.iloc[avg_per_region_df.index.get_level_values('PRODUTO') == produto]\n    \n    fig, ax = plt.subplots()\n    fig.suptitle('Pre\u00e7o por Regi\u00e3o - ' + produto)\n    \n    for key, grp in avg_per_region_for_product_df.groupby('REGI\u00c3O'):\n        grp_as_timeseries = grp.reset_index().set_index('DATA')\n        grp_as_timeseries.plot(y='PRE\u00c7O M\u00c9DIO REVENDA', label=key, ax=ax)\n\n        ax.set_xlabel('Data')\n        ax.set_ylabel('Pre\u00e7o - R$\/l')\n\n    plt.grid(True)\n    plt.show()\n\nplot_avg_region('GASOLINA COMUM')\nplot_avg_region('ETANOL HIDRATADO')\nplot_avg_region('\u00d3LEO DIESEL')","b789aa43":"# Fun\u00e7\u00e3o que agrupa os dados, define os eixos e plota a varia\u00e7\u00e3o da infla\u00e7\u00e3o e pre\u00e7os a n\u00edvel mensal ao longo do tempo\ndef plot_inflation_correlation(produto):\n    annual_price_change_df = main_df[main_df.PRODUTO == produto].groupby(['DATA']).mean()\n    annual_price_change_df['VARIA\u00c7\u00c3O'] = annual_price_change_df['PRE\u00c7O M\u00c9DIO REVENDA'].pct_change()\n    annual_price_change_df['VARIA\u00c7\u00c3O 12 MESES'] = annual_price_change_df['VARIA\u00c7\u00c3O'].rolling(min_periods=12, window=12).sum() * 100\n    annual_price_change_df.tail()\n    \n    # ploting\n    fig, ax_gas = plt.subplots()\n    annual_price_change_df.plot(y='VARIA\u00c7\u00c3O 12 MESES', c='#4c72b0', ax=ax_gas)\n    fig.suptitle('Varia\u00e7\u00e3o da Infla\u00e7\u00e3o e Pre\u00e7o Acumulado - ' + produto)\n    ax_gas.set_xlabel('Data de pesquisa')\n    ax_gas.set_ylabel('% - Varia\u00e7\u00e3o Acumulativa - 12 meses', color='#4c72b0')\n    ax_gas.get_legend().remove()\n    ax_gas.grid(True)\n    \n    # plot_inflation\n    ax_inflation = ax_gas.twinx()\n    \n    annual_price_change_df.plot(y='INFLA\u00c7\u00c3O ANUAL', ax=ax_inflation, c='#55a868')\n    ax_inflation.set_ylabel('% - Infla\u00e7\u00e3o Acumulada - 12 meses', color='#55a868')\n    ax_inflation.get_legend().remove()\n    ax_inflation.grid(False)\n    plt.show()\n\nplot_inflation_correlation('GASOLINA COMUM')\nplot_inflation_correlation('ETANOL HIDRATADO')\nplot_inflation_correlation('\u00d3LEO DIESEL')\n","807c1564":"# Atrav\u00e9s do \u00edndice de infla\u00e7\u00e3o absoluta, podemos realizar uma regress\u00e3o linear.\nmodels = {}\ndef regression_for_product(produto):\n    # Cria Dataframe necess\u00e1rio para regress\u00e3o\n    reg_df = main_df['2009':].groupby(['PRODUTO', 'DATA']).mean()\n    reg_df = reg_df.iloc[reg_df.index.get_level_values('PRODUTO') == produto].groupby('DATA').mean()[['PRE\u00c7O M\u00c9DIO REVENDA', 'INFLA\u00c7\u00c3O ABSOLUTA']]\n\n    # Separa eixos da regress\u00e3o\n    X = X = reg_df[['INFLA\u00c7\u00c3O ABSOLUTA']]\n    Y = reg_df['PRE\u00c7O M\u00c9DIO REVENDA'].values\n\n    # Divide dados entre treinamento e teste\n    x_train, x_test, y_train, y_test = train_test_split(X,Y,test_size=0.20)\n\n    # Cria model de regress\u00e3o e faz o treinamento\n    lr=LinearRegression()\n    lr.fit(x_train,y_train)\n    models[produto] = lr\n    predicted_values = []\n    for i in range(0, len(y_test)):\n        predicted_values.append(lr.predict(x_test.iloc[[i],:])[0])\n\n    predicted_df = pd.DataFrame({'Infla\u00e7\u00e3o Absoluta':x_test['INFLA\u00c7\u00c3O ABSOLUTA'].values , 'Valor Real':y_test, 'Valor Predito':predicted_values})\n    fig, ax = plt.subplots()\n    fig.suptitle('Regress\u00e3o - ' + produto)\n    ax.set_ylabel('Pre\u00e7o Revenda - R$\/l')\n    predicted_df.sort_values(by=['Infla\u00e7\u00e3o Absoluta']).set_index('Infla\u00e7\u00e3o Absoluta').plot(ax=ax)\n    plt.show()\n    \nregression_for_product('GASOLINA COMUM')\nregression_for_product('ETANOL HIDRATADO')\nregression_for_product('\u00d3LEO DIESEL')","30c922d5":"# Com um modelo de regress\u00e3o linear podemos fazer predizer quais ser\u00e3o os pre\u00e7os futuros.\ndef predict_price(produto):\n    rates = {}\n    rates['2019-08-01'] = inflation_rate_df['absolute_index'].iloc[-1]\n    for i in range(2020, 2029):\n        last_year = str(i - 1)+'-08-01'\n        curr_year = str(i)+'-08-01'\n        rates[curr_year]  = (rates[last_year] * 0.04) + rates[last_year]\n\n    rates_df = pd.DataFrame(list(rates.items()), columns = ['DATA', 'INFLA\u00c7\u00c2O ABSOLUTA'])\n\n    rates_df['DATA'] = pd.to_datetime(rates_df['DATA'])\n    rates_df.set_index('DATA', inplace=True)\n    predictions = {}\n\n    rates_df['PREVIS\u00c3O'] = models[produto].predict(rates_df)\n\n    return rates_df","755dea6f":"# Previs\u00e3o para Gasolina\npredict_price('GASOLINA COMUM')","aad64b90":"# Previs\u00e3o para Etanol\npredict_price('ETANOL HIDRATADO')","26b1054b":"# Previs\u00e3o para Diesel\npredict_price('\u00d3LEO DIESEL')","2a93413a":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngas = main_df[main_df.PRODUTO == 'GASOLINA COMUM']\neta = main_df[main_df.PRODUTO == 'ETANOL HIDRATADO']\ngas = gas.groupby(['DATA']).mean()[['PRE\u00c7O M\u00c9DIO REVENDA']]\neta = eta.groupby(['DATA']).mean()[['PRE\u00c7O M\u00c9DIO REVENDA']]\ngroup = gas.copy()\ngroup['PRE\u00c7O M\u00c9DIO REVENDA ETA'] = eta[['PRE\u00c7O M\u00c9DIO REVENDA']]\ngroup['RAZAO'] = group['PRE\u00c7O M\u00c9DIO REVENDA ETA'] \/ group['PRE\u00c7O M\u00c9DIO REVENDA'] * 100\ngroup.sample(30)\n\nfig, ax = plt.subplots()\nax.set_ylim(60,90)\ngroup.plot(y='RAZAO', label='Razao', ax=ax)\nax.set_xlabel('Data')\nax.set_ylabel('Pre\u00e7o - R$\/l')\nax.grid(True)\n\nplt.show()","8176e834":"## Criando o nosso DataWarehouse\n- Com os dados resultantes do processo de ETL realizado em ambos os dataframes","a3817352":"\n## Tratamento dos dados - Pre\u00e7o dos Combust\u00edveis","1faecaab":"## Aplicando regress\u00e3o","835772b5":"## Previs\u00f5es para futuro","d41a74d4":"## Tratamento dos dados - Taxa de Infla\u00e7\u00e3o","0576b4c6":"## Carregando dataset original - Taxa de Infla\u00e7\u00e3o","c108958b":"## Minerando os dados\nBuscando encontrar padr\u00f5es por meio do plot de varia\u00e7\u00f5es e relacionamento entre os dados","c2dcc7be":"# Insights sobre o pre\u00e7o do combut\u00edvel\n\n![image.png](attachment:image.png)\n\nNosso objetivo neste trabalho foi colocar em pr\u00e1tica o que aprendemos no decorrer do curso de Sistemas, juntamente com informa\u00e7\u00f5es adquiridas na mat\u00e9ria de Minera\u00e7\u00e3o de Dados. Faremos uma an\u00e1lise da evolu\u00e7\u00e3o do pre\u00e7o da Gasolina, Etano e Diesel nos \u00faltimos 10 anos e sua correla\u00e7\u00e3o com a IPCA (\u00cdndice Nacional de Pre\u00e7os ao Consumidor Amplo).","a80bda5b":"## Carregando dataset original - Pre\u00e7o dos Combust\u00edveis"}}