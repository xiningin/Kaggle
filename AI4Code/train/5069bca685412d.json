{"cell_type":{"12c3544a":"code","9f68b0b9":"code","5dd0a46d":"code","4df13548":"code","7b5c76d1":"code","dadf16ee":"code","c39bf24c":"code","e9cc1e35":"code","53dc4213":"code","ae00bfa0":"code","b9b21aa2":"code","e2a4a462":"code","d4866c24":"code","175cdf48":"code","a44d4367":"code","f0b85885":"code","8f3a1220":"code","968bd4a4":"code","a10ae886":"code","8a0085f3":"code","24de2707":"code","3faf77e6":"code","a2bec013":"code","9e6d4473":"code","165669c2":"code","293282c0":"code","4be14f84":"code","0ab1414e":"code","2b313630":"code","7a17d378":"code","da77edb5":"code","6d165e9e":"code","1b875177":"code","a2a10af6":"code","2544256e":"code","de0f377b":"code","d47549d5":"code","d97ab57c":"code","1c7de401":"code","f8e53686":"code","5bf2efb7":"code","3c3d895b":"code","41adba1c":"code","e0510df8":"code","e4f33b6e":"code","634b1651":"code","e1f9ff6f":"code","25274ba8":"code","708c8524":"code","42241b32":"code","25f6df3b":"code","71d4a79b":"code","9962b472":"code","2815beef":"code","d95df752":"code","d11aca68":"code","cf45126b":"code","fcecedd2":"code","6d3b3aed":"code","15f203d0":"code","bfaef65c":"code","514702d0":"code","e3570199":"code","df3f02d0":"code","f64042ac":"code","836ad43a":"code","e1c89bf7":"code","f8462536":"code","3e62ea19":"code","7adb7220":"code","088af5d6":"code","31dc6f12":"code","b8557a94":"code","3165bd56":"code","58211581":"code","2671e301":"markdown","f1f547eb":"markdown","d7f68416":"markdown","cd3e9ae0":"markdown","bb4e08a3":"markdown","9427c21d":"markdown","2c385e58":"markdown","e2876f8d":"markdown","1505d41c":"markdown","0fffdbc8":"markdown","ec9d8be8":"markdown","b608b218":"markdown","392550bf":"markdown","f426904b":"markdown","23adbbd2":"markdown","78140e9a":"markdown","6a62b2d9":"markdown","6615a17c":"markdown","027d4818":"markdown","2ca3fe9f":"markdown","7bd36c04":"markdown","011ed605":"markdown","9ba12c66":"markdown","d4298ec0":"markdown","efeff7fb":"markdown","6c0f1051":"markdown","30f8b869":"markdown","ddd0958b":"markdown","bbf2acd9":"markdown","2cdb926d":"markdown","91348682":"markdown","07a15749":"markdown","4eb73ade":"markdown"},"source":{"12c3544a":"#GENERAL\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport random\n#PATH PROCESS\nimport os\nimport os.path\nfrom pathlib import Path\nimport glob\n#IMAGE PROCESS\nfrom PIL import Image\nfrom keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport cv2\nfrom keras.applications.vgg16 import preprocess_input, decode_predictions\nfrom keras.preprocessing import image\n#SCALER & TRANSFORMATION\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler\nfrom keras.utils.np_utils import to_categorical\nfrom sklearn.model_selection import train_test_split\nfrom keras import regularizers\nfrom sklearn.preprocessing import LabelEncoder\n#ACCURACY CONTROL\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report, roc_auc_score, roc_curve\nfrom sklearn.model_selection import GridSearchCV, cross_val_score\nfrom sklearn.metrics import mean_squared_error, r2_score\n#OPTIMIZER\nfrom keras.optimizers import RMSprop,Adam,Optimizer,Optimizer, SGD\n#MODEL LAYERS\nfrom tensorflow.keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D, BatchNormalization,MaxPooling2D,BatchNormalization,\\\n                        Permute, TimeDistributed, Bidirectional,GRU, SimpleRNN, LSTM, GlobalAveragePooling2D, SeparableConv2D, ZeroPadding2D, Convolution2D, ZeroPadding2D\nfrom keras import models\nfrom keras import layers\nimport tensorflow as tf\nfrom keras.applications import VGG16,VGG19,inception_v3\nfrom keras import backend as K\nfrom keras.utils import plot_model\n#SKLEARN CLASSIFIER\nfrom xgboost import XGBClassifier, XGBRegressor\nfrom lightgbm import LGBMClassifier, LGBMRegressor\nfrom catboost import CatBoostClassifier, CatBoostRegressor\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.ensemble import RandomForestClassifier, RandomForestRegressor\nfrom sklearn.ensemble import GradientBoostingClassifier, GradientBoostingRegressor\nfrom sklearn.ensemble import BaggingRegressor\nfrom sklearn.tree import DecisionTreeClassifier, DecisionTreeRegressor\nfrom sklearn.neural_network import MLPClassifier, MLPRegressor\nfrom sklearn.neighbors import KNeighborsClassifier, KNeighborsRegressor\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.cross_decomposition import PLSRegression\nfrom sklearn.linear_model import Ridge\nfrom sklearn.linear_model import RidgeCV\nfrom sklearn.linear_model import Lasso\nfrom sklearn.linear_model import LassoCV\nfrom sklearn.linear_model import ElasticNet\nfrom sklearn.linear_model import ElasticNetCV\n#IGNORING WARNINGS\nfrom warnings import filterwarnings\nfilterwarnings(\"ignore\",category=DeprecationWarning)\nfilterwarnings(\"ignore\", category=FutureWarning) \nfilterwarnings(\"ignore\", category=UserWarning)","9f68b0b9":"os.mkdir(\"Train\")","5dd0a46d":"os.mkdir(\"Test\")","4df13548":"Train_Data_Path = Path(\"..\/input\/augmented-skincancer-isic\/skin_cancer\/train\")\nTest_Data_Path = Path(\"..\/input\/augmented-skincancer-isic\/skin_cancer\/Test\")","7b5c76d1":"Train_JPG_Path = list(Train_Data_Path.glob(r\"*\/*.jpg\"))\nTest_JPG_Path = list(Test_Data_Path.glob(r\"*\/*.jpg\"))","dadf16ee":"print(Train_JPG_Path[0:2])","c39bf24c":"Train_JPG_Labels = list(map(lambda x: os.path.split(os.path.split(x)[0])[1],Train_JPG_Path))\nTest_JPG_Labels = list(map(lambda x: os.path.split(os.path.split(x)[0])[1],Test_JPG_Path))","e9cc1e35":"print(Train_JPG_Labels[0:2])","53dc4213":"Train_JPG_Path_Series = pd.Series(Train_JPG_Path,name=\"JPG\").astype(str)\nTest_JPG_Path_Series = pd.Series(Test_JPG_Path,name=\"JPG\").astype(str)\nTrain_JPG_Labels_Series = pd.Series(Train_JPG_Labels,name=\"CATEGORY\")\nTest_JPG_Labels_Series = pd.Series(Test_JPG_Labels,name=\"CATEGORY\")","ae00bfa0":"Train_JPG_Labels_Series.replace({\"actinic keratosis\":\"AK\",\n                                \"basal cell carcinoma\":\"BCC\",\n                                \"dermatofibroma\":\"DF\",\n                                \"melanoma\":\"MEL\",\n                                \"nevus\":\"N\",\n                                \"pigmented benign keratosis\":\"PBK\",\n                                \"seborrheic keratosis\":\"SK\",\n                                \"squamous cell carcinoma\":\"SCC\",\n                                \"vascular lesion\":\"VL\"},inplace=True)\n\nTest_JPG_Labels_Series.replace({\"actinic keratosis\":\"AK\",\n                                \"basal cell carcinoma\":\"BCC\",\n                                \"dermatofibroma\":\"DF\",\n                                \"melanoma\":\"MEL\",\n                                \"nevus\":\"N\",\n                                \"pigmented benign keratosis\":\"PBK\",\n                                \"seborrheic keratosis\":\"SK\",\n                                \"squamous cell carcinoma\":\"SCC\",\n                                \"vascular lesion\":\"VL\"},inplace=True)","b9b21aa2":"Main_Train_Data = pd.concat([Train_JPG_Path_Series,Train_JPG_Labels_Series],axis=1)\nMain_Test_Data = pd.concat([Test_JPG_Path_Series,Test_JPG_Labels_Series],axis=1)","e2a4a462":"Main_Train_AK = Main_Train_Data[Main_Train_Data[\"CATEGORY\"] == \"AK\"]\nMain_Train_BCC =  Main_Train_Data[Main_Train_Data[\"CATEGORY\"] == \"BCC\"]\nMain_Train_DF =  Main_Train_Data[Main_Train_Data[\"CATEGORY\"] == \"DF\"]\nMain_Train_MEL =  Main_Train_Data[Main_Train_Data[\"CATEGORY\"] == \"MEL\"]\nMain_Train_N =  Main_Train_Data[Main_Train_Data[\"CATEGORY\"] == \"N\"]\nMain_Train_PBK =  Main_Train_Data[Main_Train_Data[\"CATEGORY\"] == \"PBK\"]\nMain_Train_SK =  Main_Train_Data[Main_Train_Data[\"CATEGORY\"] == \"SK\"]\nMain_Train_SCC =  Main_Train_Data[Main_Train_Data[\"CATEGORY\"] == \"SCC\"]\nMain_Train_VL =  Main_Train_Data[Main_Train_Data[\"CATEGORY\"] == \"VL\"]","d4866c24":"print(Main_Train_AK[\"CATEGORY\"].value_counts())","175cdf48":"os.mkdir(\".\/Train\/AK\")\nos.mkdir(\".\/Test\/AK\")","a44d4367":"New_Train_JPG_List = []\nimg_size = (200,200)\nfor image in Main_Train_AK[\"JPG\"]:\n    Reading_Image = cv2.imread(image,cv2.IMREAD_GRAYSCALE)\n    Reading_Image = cv2.resize(Reading_Image,img_size,interpolation=cv2.INTER_AREA)\n    T_Gray = cv2.cvtColor(Reading_Image,cv2.COLOR_BGR2RGB)\n    _,threshold_image = cv2.threshold(T_Gray,150,255,cv2.THRESH_BINARY,)\n    Diff_Image = cv2.absdiff(T_Gray,threshold_image)\n    New_Train_JPG_List.append(Diff_Image)\n    cv2.imwrite(f'.\/Train\/AK\/{random.randrange(0,22222222,1)}.jpg',Diff_Image)","f0b85885":"os.mkdir(\".\/Train\/BCC\")\nos.mkdir(\".\/Test\/BCC\")","8f3a1220":"for image in Main_Train_BCC[\"JPG\"]:\n    Reading_Image = cv2.imread(image,cv2.IMREAD_GRAYSCALE)\n    Reading_Image = cv2.resize(Reading_Image,img_size,interpolation=cv2.INTER_AREA)\n    T_Gray = cv2.cvtColor(Reading_Image,cv2.COLOR_BGR2RGB)\n    _,threshold_image = cv2.threshold(T_Gray,150,255,cv2.THRESH_BINARY,)\n    Diff_Image = cv2.absdiff(T_Gray,threshold_image)\n    New_Train_JPG_List.append(Diff_Image)\n    cv2.imwrite(f'.\/Train\/BCC\/{random.randrange(0,22222222,1)}.jpg',Diff_Image)","968bd4a4":"os.mkdir(\".\/Train\/DF\")\nos.mkdir(\".\/Test\/DF\")","a10ae886":"for image in Main_Train_DF[\"JPG\"]:\n    Reading_Image = cv2.imread(image,cv2.IMREAD_GRAYSCALE)\n    Reading_Image = cv2.resize(Reading_Image,img_size,interpolation=cv2.INTER_AREA)\n    T_Gray = cv2.cvtColor(Reading_Image,cv2.COLOR_BGR2RGB)\n    _,threshold_image = cv2.threshold(T_Gray,150,255,cv2.THRESH_BINARY,)\n    Diff_Image = cv2.absdiff(T_Gray,threshold_image)\n    New_Train_JPG_List.append(Diff_Image)\n    cv2.imwrite(f'.\/Train\/DF\/{random.randrange(0,22222222,1)}.jpg',Diff_Image)","8a0085f3":"os.mkdir(\".\/Train\/MEL\")\nos.mkdir(\".\/Test\/MEL\")","24de2707":"for image in Main_Train_MEL[\"JPG\"]:\n    Reading_Image = cv2.imread(image,cv2.IMREAD_GRAYSCALE)\n    Reading_Image = cv2.resize(Reading_Image,img_size,interpolation=cv2.INTER_AREA)\n    T_Gray = cv2.cvtColor(Reading_Image,cv2.COLOR_BGR2RGB)\n    _,threshold_image = cv2.threshold(T_Gray,150,255,cv2.THRESH_BINARY,)\n    Diff_Image = cv2.absdiff(T_Gray,threshold_image)\n    New_Train_JPG_List.append(Diff_Image)\n    cv2.imwrite(f'.\/Train\/MEL\/{random.randrange(0,22222222,1)}.jpg',Diff_Image)","3faf77e6":"os.mkdir(\".\/Train\/N\")\nos.mkdir(\".\/Test\/N\")","a2bec013":"for image in Main_Train_N[\"JPG\"]:\n    Reading_Image = cv2.imread(image,cv2.IMREAD_GRAYSCALE)\n    Reading_Image = cv2.resize(Reading_Image,img_size,interpolation=cv2.INTER_AREA)\n    T_Gray = cv2.cvtColor(Reading_Image,cv2.COLOR_BGR2RGB)\n    _,threshold_image = cv2.threshold(T_Gray,150,255,cv2.THRESH_BINARY,)\n    Diff_Image = cv2.absdiff(T_Gray,threshold_image)\n    New_Train_JPG_List.append(Diff_Image)\n    cv2.imwrite(f'.\/Train\/N\/{random.randrange(0,22222222,1)}.jpg',Diff_Image)","9e6d4473":"os.mkdir(\".\/Train\/PBK\")\nos.mkdir(\".\/Test\/PBK\")","165669c2":"for image in Main_Train_PBK[\"JPG\"]:\n    Reading_Image = cv2.imread(image,cv2.IMREAD_GRAYSCALE)\n    Reading_Image = cv2.resize(Reading_Image,img_size,interpolation=cv2.INTER_AREA)\n    T_Gray = cv2.cvtColor(Reading_Image,cv2.COLOR_BGR2RGB)\n    _,threshold_image = cv2.threshold(T_Gray,150,255,cv2.THRESH_BINARY,)\n    Diff_Image = cv2.absdiff(T_Gray,threshold_image)\n    New_Train_JPG_List.append(Diff_Image)\n    cv2.imwrite(f'.\/Train\/PBK\/{random.randrange(0,22222222,1)}.jpg',Diff_Image)","293282c0":"os.mkdir(\".\/Train\/SK\")\nos.mkdir(\".\/Test\/SK\")","4be14f84":"for image in Main_Train_SK[\"JPG\"]:\n    Reading_Image = cv2.imread(image,cv2.IMREAD_GRAYSCALE)\n    Reading_Image = cv2.resize(Reading_Image,img_size,interpolation=cv2.INTER_AREA)\n    T_Gray = cv2.cvtColor(Reading_Image,cv2.COLOR_BGR2RGB)\n    _,threshold_image = cv2.threshold(T_Gray,150,255,cv2.THRESH_BINARY,)\n    Diff_Image = cv2.absdiff(T_Gray,threshold_image)\n    New_Train_JPG_List.append(Diff_Image)\n    cv2.imwrite(f'.\/Train\/SK\/{random.randrange(0,22222222,1)}.jpg',Diff_Image)","0ab1414e":"os.mkdir(\".\/Train\/SCC\")\nos.mkdir(\".\/Test\/SCC\")","2b313630":"for image in Main_Train_SCC[\"JPG\"]:\n    Reading_Image = cv2.imread(image,cv2.IMREAD_GRAYSCALE)\n    Reading_Image = cv2.resize(Reading_Image,img_size,interpolation=cv2.INTER_AREA)\n    T_Gray = cv2.cvtColor(Reading_Image,cv2.COLOR_BGR2RGB)\n    _,threshold_image = cv2.threshold(T_Gray,150,255,cv2.THRESH_BINARY,)\n    Diff_Image = cv2.absdiff(T_Gray,threshold_image)\n    New_Train_JPG_List.append(Diff_Image)\n    cv2.imwrite(f'.\/Train\/SCC\/{random.randrange(0,22222222,1)}.jpg',Diff_Image)","7a17d378":"os.mkdir(\".\/Train\/VL\")\nos.mkdir(\".\/Test\/VL\")","da77edb5":"for image in Main_Train_VL[\"JPG\"]:\n    Reading_Image = cv2.imread(image,cv2.IMREAD_GRAYSCALE)\n    Reading_Image = cv2.resize(Reading_Image,img_size,interpolation=cv2.INTER_AREA)\n    T_Gray = cv2.cvtColor(Reading_Image,cv2.COLOR_BGR2RGB)\n    _,threshold_image = cv2.threshold(T_Gray,150,255,cv2.THRESH_BINARY,)\n    Diff_Image = cv2.absdiff(T_Gray,threshold_image)\n    New_Train_JPG_List.append(Diff_Image)\n    cv2.imwrite(f'.\/Train\/VL\/{random.randrange(0,22222222,1)}.jpg',Diff_Image)","6d165e9e":"Train_N_Path = Path(\".\/Train\")","1b875177":"Train_JPG_N_Path = list(Train_N_Path.glob(r\"*\/*.jpg\"))","a2a10af6":"Train_JPG_N_Labels = list(map(lambda x: os.path.split(os.path.split(x)[0])[1],Train_JPG_N_Path))","2544256e":"Train_JPG_N_Path_Series =pd.Series(Train_JPG_N_Path,name=\"JPG\").astype(str)","de0f377b":"New_Train_JPG_N_Labels_Series = pd.Series(Train_JPG_N_Labels,name=\"CATEGORY\")","d47549d5":"print(New_Train_JPG_N_Labels_Series.value_counts())","d97ab57c":"Main_New_Train_Data = pd.concat([Train_JPG_N_Path_Series,New_Train_JPG_N_Labels_Series],axis=1)","1c7de401":"print(Main_New_Train_Data.head(-1))","f8e53686":"print(Main_New_Train_Data.isnull().sum())","5bf2efb7":"Main_Test_AK = Main_Test_Data[Main_Test_Data[\"CATEGORY\"] == \"AK\"]\nMain_Test_BCC =  Main_Test_Data[Main_Test_Data[\"CATEGORY\"] == \"BCC\"]\nMain_Test_DF =  Main_Test_Data[Main_Test_Data[\"CATEGORY\"] == \"DF\"]\nMain_Test_MEL =  Main_Test_Data[Main_Test_Data[\"CATEGORY\"] == \"MEL\"]\nMain_Test_N =  Main_Test_Data[Main_Test_Data[\"CATEGORY\"] == \"N\"]\nMain_Test_PBK =  Main_Test_Data[Main_Test_Data[\"CATEGORY\"] == \"PBK\"]\nMain_Test_SK =  Main_Test_Data[Main_Test_Data[\"CATEGORY\"] == \"SK\"]\nMain_Test_SCC =  Main_Test_Data[Main_Test_Data[\"CATEGORY\"] == \"SCC\"]\nMain_Test_VL =  Main_Test_Data[Main_Test_Data[\"CATEGORY\"] == \"VL\"]","3c3d895b":"print(Main_Test_AK[\"CATEGORY\"].value_counts())","41adba1c":"New_Test_JPG_List = []\nTimg_size = (200,200)\nfor imageT in Main_Test_AK[\"JPG\"]:\n    Reading_ImageT = cv2.imread(imageT,cv2.IMREAD_GRAYSCALE)\n    Reading_ImageT = cv2.resize(Reading_ImageT,Timg_size,interpolation=cv2.INTER_AREA)\n    TT_Gray = cv2.cvtColor(Reading_ImageT,cv2.COLOR_BGR2RGB)\n    _,Tthreshold_image = cv2.threshold(TT_Gray,150,255,cv2.THRESH_BINARY,)\n    Diff_TImage = cv2.absdiff(TT_Gray,Tthreshold_image)\n    New_Test_JPG_List.append(Diff_TImage)\n    cv2.imwrite(f'.\/Test\/AK\/{random.randrange(0,22222222,1)}.jpg',Diff_TImage)","e0510df8":"New_Test_JPG_List = []\nTimg_size = (200,200)\nfor imageT in Main_Test_BCC[\"JPG\"]:\n    Reading_ImageT = cv2.imread(imageT,cv2.IMREAD_GRAYSCALE)\n    Reading_ImageT = cv2.resize(Reading_ImageT,Timg_size,interpolation=cv2.INTER_AREA)\n    TT_Gray = cv2.cvtColor(Reading_ImageT,cv2.COLOR_BGR2RGB)\n    _,Tthreshold_image = cv2.threshold(TT_Gray,150,255,cv2.THRESH_BINARY,)\n    Diff_TImage = cv2.absdiff(TT_Gray,Tthreshold_image)\n    New_Test_JPG_List.append(Diff_TImage)\n    cv2.imwrite(f'.\/Test\/BCC\/{random.randrange(0,22222222,1)}.jpg',Diff_TImage)","e4f33b6e":"New_Test_JPG_List = []\nTimg_size = (200,200)\nfor imageT in Main_Test_DF[\"JPG\"]:\n    Reading_ImageT = cv2.imread(imageT,cv2.IMREAD_GRAYSCALE)\n    Reading_ImageT = cv2.resize(Reading_ImageT,Timg_size,interpolation=cv2.INTER_AREA)\n    TT_Gray = cv2.cvtColor(Reading_ImageT,cv2.COLOR_BGR2RGB)\n    _,Tthreshold_image = cv2.threshold(TT_Gray,150,255,cv2.THRESH_BINARY,)\n    Diff_TImage = cv2.absdiff(TT_Gray,Tthreshold_image)\n    New_Test_JPG_List.append(Diff_TImage)\n    cv2.imwrite(f'.\/Test\/DF\/{random.randrange(0,22222222,1)}.jpg',Diff_TImage)","634b1651":"New_Test_JPG_List = []\nTimg_size = (200,200)\nfor imageT in Main_Test_MEL[\"JPG\"]:\n    Reading_ImageT = cv2.imread(imageT,cv2.IMREAD_GRAYSCALE)\n    Reading_ImageT = cv2.resize(Reading_ImageT,Timg_size,interpolation=cv2.INTER_AREA)\n    TT_Gray = cv2.cvtColor(Reading_ImageT,cv2.COLOR_BGR2RGB)\n    _,Tthreshold_image = cv2.threshold(TT_Gray,150,255,cv2.THRESH_BINARY,)\n    Diff_TImage = cv2.absdiff(TT_Gray,Tthreshold_image)\n    New_Test_JPG_List.append(Diff_TImage)\n    cv2.imwrite(f'.\/Test\/MEL\/{random.randrange(0,22222222,1)}.jpg',Diff_TImage)","e1f9ff6f":"New_Test_JPG_List = []\nTimg_size = (200,200)\nfor imageT in Main_Test_N[\"JPG\"]:\n    Reading_ImageT = cv2.imread(imageT,cv2.IMREAD_GRAYSCALE)\n    Reading_ImageT = cv2.resize(Reading_ImageT,Timg_size,interpolation=cv2.INTER_AREA)\n    TT_Gray = cv2.cvtColor(Reading_ImageT,cv2.COLOR_BGR2RGB)\n    _,Tthreshold_image = cv2.threshold(TT_Gray,150,255,cv2.THRESH_BINARY,)\n    Diff_TImage = cv2.absdiff(TT_Gray,Tthreshold_image)\n    New_Test_JPG_List.append(Diff_TImage)\n    cv2.imwrite(f'.\/Test\/N\/{random.randrange(0,22222222,1)}.jpg',Diff_TImage)","25274ba8":"New_Test_JPG_List = []\nTimg_size = (200,200)\nfor imageT in Main_Test_PBK[\"JPG\"]:\n    Reading_ImageT = cv2.imread(imageT,cv2.IMREAD_GRAYSCALE)\n    Reading_ImageT = cv2.resize(Reading_ImageT,Timg_size,interpolation=cv2.INTER_AREA)\n    TT_Gray = cv2.cvtColor(Reading_ImageT,cv2.COLOR_BGR2RGB)\n    _,Tthreshold_image = cv2.threshold(TT_Gray,150,255,cv2.THRESH_BINARY,)\n    Diff_TImage = cv2.absdiff(TT_Gray,Tthreshold_image)\n    New_Test_JPG_List.append(Diff_TImage)\n    cv2.imwrite(f'.\/Test\/PBK\/{random.randrange(0,22222222,1)}.jpg',Diff_TImage)","708c8524":"New_Test_JPG_List = []\nTimg_size = (200,200)\nfor imageT in Main_Test_SK[\"JPG\"]:\n    Reading_ImageT = cv2.imread(imageT,cv2.IMREAD_GRAYSCALE)\n    Reading_ImageT = cv2.resize(Reading_ImageT,Timg_size,interpolation=cv2.INTER_AREA)\n    TT_Gray = cv2.cvtColor(Reading_ImageT,cv2.COLOR_BGR2RGB)\n    _,Tthreshold_image = cv2.threshold(TT_Gray,150,255,cv2.THRESH_BINARY,)\n    Diff_TImage = cv2.absdiff(TT_Gray,Tthreshold_image)\n    New_Test_JPG_List.append(Diff_TImage)\n    cv2.imwrite(f'.\/Test\/SK\/{random.randrange(0,22222222,1)}.jpg',Diff_TImage)","42241b32":"New_Test_JPG_List = []\nTimg_size = (200,200)\nfor imageT in Main_Test_SCC[\"JPG\"]:\n    Reading_ImageT = cv2.imread(imageT,cv2.IMREAD_GRAYSCALE)\n    Reading_ImageT = cv2.resize(Reading_ImageT,Timg_size,interpolation=cv2.INTER_AREA)\n    TT_Gray = cv2.cvtColor(Reading_ImageT,cv2.COLOR_BGR2RGB)\n    _,Tthreshold_image = cv2.threshold(TT_Gray,150,255,cv2.THRESH_BINARY,)\n    Diff_TImage = cv2.absdiff(TT_Gray,Tthreshold_image)\n    New_Test_JPG_List.append(Diff_TImage)\n    cv2.imwrite(f'.\/Test\/SCC\/{random.randrange(0,22222222,1)}.jpg',Diff_TImage)","25f6df3b":"New_Test_JPG_List = []\nTimg_size = (200,200)\nfor imageT in Main_Test_VL[\"JPG\"]:\n    Reading_ImageT = cv2.imread(imageT,cv2.IMREAD_GRAYSCALE)\n    Reading_ImageT = cv2.resize(Reading_ImageT,Timg_size,interpolation=cv2.INTER_AREA)\n    TT_Gray = cv2.cvtColor(Reading_ImageT,cv2.COLOR_BGR2RGB)\n    _,Tthreshold_image = cv2.threshold(TT_Gray,150,255,cv2.THRESH_BINARY,)\n    Diff_TImage = cv2.absdiff(TT_Gray,Tthreshold_image)\n    New_Test_JPG_List.append(Diff_TImage)\n    cv2.imwrite(f'.\/Test\/VL\/{random.randrange(0,22222222,1)}.jpg',Diff_TImage)","71d4a79b":"Test_N_Path = Path(\".\/Test\")","9962b472":"Test_JPG_N_Path = list(Test_N_Path.glob(r\"*\/*.jpg\"))","2815beef":"Test_JPG_N_Labels = list(map(lambda x: os.path.split(os.path.split(x)[0])[1],Test_JPG_N_Path))","d95df752":"Test_JPG_N_Path_Series =pd.Series(Test_JPG_N_Path,name=\"JPG\").astype(str)","d11aca68":"Test_JPG_N_Labels_Series = pd.Series(Test_JPG_N_Labels,name=\"CATEGORY\")","cf45126b":"print(Test_JPG_N_Labels_Series.value_counts())","fcecedd2":"Main_New_Test_Data = pd.concat([Test_JPG_N_Path_Series,Test_JPG_N_Labels_Series],axis=1)","6d3b3aed":"print(Main_New_Test_Data.head(-1))","15f203d0":"Main_New_Train_Data = Main_New_Train_Data.sample(frac=1).reset_index(drop=True)","bfaef65c":"print(Main_New_Train_Data.head(-1))","514702d0":"Main_New_Test_Data = Main_New_Test_Data.sample(frac=1).reset_index(drop=True)","e3570199":"print(Main_New_Test_Data.head(-1))","df3f02d0":"Train_Image_Generator = ImageDataGenerator(rescale=1.\/255,\n                                          validation_split=0.1,\n                                          rotation_range=30,\n                                          shear_range=0.3,\n                                          zoom_range=0.3,\n                                          horizontal_flip=True,\n                                          vertical_flip=True,\n                                          fill_mode=\"nearest\")","f64042ac":"Test_Image_Generator = ImageDataGenerator(rescale=1.\/255)","836ad43a":"exp_Gen_Image = Main_New_Train_Data[\"JPG\"][30]\nloading_Gen_Image = image.load_img(exp_Gen_Image,target_size=(160,160))\nArray_Gen_Image = image.img_to_array(loading_Gen_Image)\nArray_Gen_Image = Array_Gen_Image.reshape((1,) + Array_Gen_Image.shape)\ni = 0\nfor batch in Train_Image_Generator.flow(Array_Gen_Image,batch_size=5):\n    plt.figure(i)\n    Image_Gen = plt.imshow(image.img_to_array(batch[0]))\n    i += 1\n    if i % 4 == 0:\n        break\nplt.show()","e1c89bf7":"Train_IMG_Set = Train_Image_Generator.flow_from_dataframe(dataframe=Main_New_Train_Data,\n                                                         x_col=\"JPG\",\n                                                         y_col=\"CATEGORY\",\n                                                         color_mode=\"rgb\",\n                                                         class_mode=\"categorical\",\n                                                         subset=\"training\")","f8462536":"Validation_IMG_Set = Train_Image_Generator.flow_from_dataframe(dataframe=Main_New_Train_Data,\n                                                         x_col=\"JPG\",\n                                                         y_col=\"CATEGORY\",\n                                                         color_mode=\"rgb\",\n                                                         class_mode=\"categorical\",\n                                                         subset=\"validation\")","3e62ea19":"Test_IMG_Set = Test_Image_Generator.flow_from_dataframe(dataframe=Main_New_Test_Data,\n                                                         x_col=\"JPG\",\n                                                         y_col=\"CATEGORY\",\n                                                         color_mode=\"rgb\",\n                                                         class_mode=\"categorical\")","7adb7220":"print(\"TRAIN: \")\nprint(Train_IMG_Set.class_indices)\nprint(Train_IMG_Set.classes[0:5])\nprint(Train_IMG_Set.image_shape)\nprint(\"---\"*20)\nprint(\"VALIDATION: \")\nprint(Validation_IMG_Set.class_indices)\nprint(Validation_IMG_Set.classes[0:5])\nprint(Validation_IMG_Set.image_shape)\nprint(\"---\"*20)\nprint(\"TEST: \")\nprint(Test_IMG_Set.class_indices)\nprint(Test_IMG_Set.classes[0:5])\nprint(Test_IMG_Set.image_shape)","088af5d6":"Model = Sequential()\n\nModel.add(Conv2D(12,(3,3),activation=\"relu\",\n                 input_shape=(256,256,3)))\nModel.add(BatchNormalization())\nModel.add(MaxPooling2D((2,2)))\n\n#\nModel.add(Conv2D(24,(3,3),\n                 activation=\"relu\",padding=\"same\"))\nModel.add(Dropout(0.2))\nModel.add(MaxPooling2D((2,2)))\n\n\n#\nModel.add(TimeDistributed(Flatten()))\nModel.add(Bidirectional(LSTM(32,\n                                  return_sequences=True,\n                                  dropout=0.5,\n                                  recurrent_dropout=0.5)))\nModel.add(Bidirectional(GRU(32,\n                                  return_sequences=True,\n                                  dropout=0.5,\n                                  recurrent_dropout=0.5)))\n\n#\nModel.add(Flatten())\nModel.add(Dense(512,activation=\"relu\"))\nModel.add(Dropout(0.5))\nModel.add(Dense(256,activation=\"relu\"))\nModel.add(Dropout(0.5))\nModel.add(Dense(9,activation=\"softmax\"))","31dc6f12":"print(Model.summary())","b8557a94":"Call_Back = tf.keras.callbacks.EarlyStopping(monitor=\"loss\",patience=5,mode=\"min\")","3165bd56":"Model.compile(optimizer=\"adam\",loss=\"categorical_crossentropy\",metrics=[\"accuracy\"])","58211581":"CNN_Model = Model.fit(Train_IMG_Set,\n                      validation_data=Validation_IMG_Set,\n                      callbacks=Call_Back,\n                      epochs=100)","2671e301":"# TRANSFORMATION","f1f547eb":"# SERIES STRUCTURE","d7f68416":"##### PBK","cd3e9ae0":"# MODEL","bb4e08a3":"# PATH AND LABEL PROCESS","9427c21d":"##### DF","2c385e58":"##### BCC","e2876f8d":"#### TRAIN","1505d41c":"# DATAFRAME STRUCTURE","0fffdbc8":"# IMAGE GENERATOR","ec9d8be8":"##### SCC","b608b218":"##### AK","392550bf":"##### N","f426904b":"# SHUFFLING","23adbbd2":"##### PBK","78140e9a":"##### MEL","6a62b2d9":"##### DF","6615a17c":"##### SCC","027d4818":"##### MEL","2ca3fe9f":"# PACKAGES AND LIBRARIES","7bd36c04":"##### TRAIN PATH & LABEL PROCESS","011ed605":"##### BCC","9ba12c66":"##### SK","d4298ec0":"# CREATING A NEW FOLDER","efeff7fb":"##### VL","6c0f1051":"##### SK","30f8b869":"#### TEST","ddd0958b":"##### TRAIN PATH & LABEL PROCESS","bbf2acd9":"##### VL","2cdb926d":"#### APPLYING","91348682":"##### AK","07a15749":"##### N","4eb73ade":"#### HOW TO LOOK BY GENERATOR"}}