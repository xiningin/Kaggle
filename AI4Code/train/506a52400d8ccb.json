{"cell_type":{"328e3622":"code","dd4b7a9c":"code","485321d6":"code","2612239e":"code","d0671c3a":"code","377d4a52":"code","dea655af":"code","21867a98":"markdown","87089efa":"markdown","c18e69d3":"markdown","10f7d2a4":"markdown","9d5aa644":"markdown"},"source":{"328e3622":"import numpy as np\nimport math\nimport matplotlib.pyplot as plt\nimport pickle\nimport pandas as pd  \n\nN_train = 5*1000 # Five thousand\nN_test = 2*1000 # Two thousand\nN_val = 2*1000 # Two thousand","dd4b7a9c":"Noise_Mag = 0.5\nfigure_size = (4, 4)\n\nN = N_train\nX1 = np.power(np.arange(0,1,1\/N),5)\ny = np.cos(8*X1)+ Noise_Mag*(np.random.rand(N)-1\/2)\n\nplt.figure(figsize=figure_size) \nplt.title('Target vs X1')\nplt.scatter(X1, y, color='k',s=.2)\nplt.show()\n\nData = np.column_stack((X1,y))\nprint('Train Set', Data.shape)\ndict = {'Input1': X1, 'Output': y}  \ndf = pd.DataFrame(dict) \ndf.to_csv('Data6_Train.csv', header=True, index=False) \noutput = open('Data6_Train.pkl', 'wb')\npickle.dump(Data, output)\noutput.close()\n\n\nN = N_test\nX1 = np.power(np.arange(0,1,1\/N),1)\ny = np.cos(8*X1)+ Noise_Mag*(np.random.rand(N)-1\/2)\n\nplt.figure(figsize=figure_size) \nplt.title('Target vs X1')\nplt.scatter(X1, y, color='k',s=.2)\nplt.show()\n\nData = np.column_stack((X1,y))\nprint('Test Set',Data.shape)\ndict = {'Input1': X1, 'Output': y}  \ndf = pd.DataFrame(dict) \ndf.to_csv('Data6_Test.csv', header=True, index=False) \noutput = open('Data6_Test.pkl', 'wb')\npickle.dump(Data, output)\noutput.close()\n\nN = N_val\nX1 = np.power(np.arange(0,1,1\/N),1)\ny = np.cos(8*X1)+ Noise_Mag*(np.random.rand(N)-1\/2)\n\nplt.figure(figsize=figure_size) \nplt.title('Target vs X1')\nplt.scatter(X1, y, color='k',s=.2)\nplt.show()\n\nData = np.column_stack((X1,y))\nprint('Val Set',Data.shape)\ndict = {'Input1': X1, 'Output': y}  \ndf = pd.DataFrame(dict) \ndf.to_csv('Data6_Val.csv', header=True, index=False) \noutput = open('Data6_Val.pkl', 'wb')\npickle.dump(Data, output)\noutput.close()","485321d6":"Noise_Mag = 0.5\nfigure_size = (4, 4)\n\nN = N_train\nX1 = np.cbrt(np.arange(-1,1,2\/N))\nX1 = X1*np.sign(X1)*X1\ny = np.cos(8*X1)+ Noise_Mag*(np.random.rand(N)-1\/2)\n\nplt.figure(figsize=figure_size) \nplt.title('Target vs X1')\nplt.scatter(X1, y, color='k',s=.2)\nplt.show()\n\nData = np.column_stack((X1,y))\nprint('Train Set', Data.shape)\ndict = {'Input1': X1, 'Output': y}  \ndf = pd.DataFrame(dict) \ndf.to_csv('Data7_Train.csv', header=True, index=False) \noutput = open('Data7_Train.pkl', 'wb')\npickle.dump(Data, output)\noutput.close()\n\nN = N_test\nX1 = np.arange(-1,1,2\/N)\ny = np.cos(8*X1)+ Noise_Mag*(np.random.rand(N)-1\/2)\n\nplt.figure(figsize=figure_size) \nplt.title('Target vs X1')\nplt.scatter(X1, y, color='k',s=.2)\nplt.show()\n\nData = np.column_stack((X1,y))\nprint('Test Set',Data.shape)\ndict = {'Input1': X1, 'Output': y}  \ndf = pd.DataFrame(dict) \ndf.to_csv('Data7_Test.csv', header=True, index=False) \noutput = open('Data7_Test.pkl', 'wb')\npickle.dump(Data, output)\noutput.close()\n\nN = N_val\nX1 = np.arange(-1,1,2\/N)\ny = np.cos(8*X1)+ Noise_Mag*(np.random.rand(N)-1\/2)\n\nplt.figure(figsize=figure_size) \nplt.title('Target vs X1')\nplt.scatter(X1, y, color='k',s=.2)\nplt.show()\n\nData = np.column_stack((X1,y))\nprint('Val Set',Data.shape)\ndict = {'Input1': X1, 'Output': y}  \ndf = pd.DataFrame(dict) \ndf.to_csv('Data7_Val.csv', header=True, index=False) \noutput = open('Data7_Val.pkl', 'wb')\npickle.dump(Data, output)\noutput.close()","2612239e":"Noise_Mag = 0.2\nfigure_size = (4, 4)\n\nN = N_train\nX1 = np.arange(-5,5,10\/N)\ny = np.cos(8*X1)+ Noise_Mag*(np.random.rand(N)-1\/2)\n\nplt.figure(figsize=figure_size) \nplt.title('Target vs X1')\nplt.scatter(X1, y, color='k',s=.2)\nplt.show()\n\nData = np.column_stack((X1,y))\nprint('Train Set', Data.shape)\ndict = {'Input1': X1, 'Output': y}  \ndf = pd.DataFrame(dict) \ndf.to_csv('Data8_Train.csv', header=True, index=False) \noutput = open('Data8_Train.pkl', 'wb')\npickle.dump(Data, output)\noutput.close()\n\nN = N_test\nX1 = np.arange(-5,5,10\/N)\ny = np.cos(8*X1)+ Noise_Mag*(np.random.rand(N)-1\/2)\n\nplt.figure(figsize=figure_size) \nplt.title('Target vs X1')\nplt.scatter(X1, y, color='k',s=.2)\nplt.show()\n\nData = np.column_stack((X1,y))\nprint('Test Set', Data.shape)\ndict = {'Input1': X1, 'Output': y}  \ndf = pd.DataFrame(dict) \ndf.to_csv('Data8_Test.csv', header=True, index=False) \noutput = open('Data8_Test.pkl', 'wb')\npickle.dump(Data, output)\noutput.close()\n\nN = N_val\nX1 = np.arange(-5,5,10\/N)\ny = np.cos(8*X1)+ Noise_Mag*(np.random.rand(N)-1\/2)\n\nplt.figure(figsize=figure_size) \nplt.title('Target vs X1')\nplt.scatter(X1, y, color='k',s=.2)\nplt.show()\n\nData = np.column_stack((X1,y))\nprint('Val Set', Data.shape)\ndict = {'Input1': X1, 'Output': y}  \ndf = pd.DataFrame(dict) \ndf.to_csv('Data8_Val.csv', header=True, index=False) \noutput = open('Data8_Val.pkl', 'wb')\npickle.dump(Data, output)\noutput.close()","d0671c3a":"N_train = 5*100 # Five hundred\nN_test = 2*100 # Two hundred\nN_val = 2*100 # Two hundred","377d4a52":"Noise_Mag = 0.2\nfigure_size = (4, 4)\n\n\nN = N_train\nX1 = np.concatenate((np.arange(-1,-.1,1.8\/N), np.arange(.1,1,1.8\/N)), axis=0)\ny = np.cos(8*X1)+ Noise_Mag*(np.random.rand(N)-1\/2)\n\nplt.figure(figsize=figure_size) \nplt.title('Target vs X1')\nplt.scatter(X1, y, color='k',s=.2)\nplt.show()\n\nData = np.column_stack((X1,y))\nprint('Train Set', Data.shape)\ndict = {'Input1': X1, 'Output': y}  \ndf = pd.DataFrame(dict) \ndf.to_csv('Data9_Train.csv', header=True, index=False) \noutput = open('Data9_Train.pkl', 'wb')\npickle.dump(Data, output)\noutput.close()\n\nN = N_test\nX1 = np.arange(-1,1,2\/N)\ny = np.cos(8*X1)+ Noise_Mag*(np.random.rand(N)-1\/2)\n\nplt.figure(figsize=figure_size) \nplt.title('Target vs X1')\nplt.scatter(X1, y, color='k',s=.2)\nplt.show()\n\nData = np.column_stack((X1,y))\nprint('Test Set',Data.shape)\ndict = {'Input1': X1, 'Output': y}  \ndf = pd.DataFrame(dict) \ndf.to_csv('Data9_Test.csv', header=True, index=False) \noutput = open('Data9_Test.pkl', 'wb')\npickle.dump(Data, output)\noutput.close()\n\nN = N_val\nX1 = np.arange(-1,1,2\/N)\ny = np.cos(8*X1)+ Noise_Mag*(np.random.rand(N)-1\/2)\n\nplt.figure(figsize=figure_size) \nplt.title('Target vs X1')\nplt.scatter(X1, y, color='k',s=.2)\nplt.show()\n\nData = np.column_stack((X1,y))\nprint('Val Set',Data.shape)\ndict = {'Input1': X1, 'Output': y}  \ndf = pd.DataFrame(dict) \ndf.to_csv('Data9_Val.csv', header=True, index=False) \noutput = open('Data9_Val.pkl', 'wb')\npickle.dump(Data, output)\noutput.close()","dea655af":"Noise_Mag = 0.2\nfigure_size = (4, 4)\n\nN = N_train\nX1 = np.arange(-.9,.9,1.8\/N)\ny = np.cos(8*X1)+ Noise_Mag*(np.random.rand(N)-1\/2)\n\nplt.figure(figsize=figure_size) \nplt.title('Target vs X1')\nplt.scatter(X1, y, color='k',s=.2)\nplt.show()\n\nData = np.column_stack((X1,y))\nprint('Train Set', Data.shape)\ndict = {'Input1': X1, 'Output': y}  \ndf = pd.DataFrame(dict) \ndf.to_csv('Data10_Train.csv', header=True, index=False) \noutput = open('Data10_Train.pkl', 'wb')\npickle.dump(Data, output)\noutput.close()\n\n\nN = N_test\nX1 = np.arange(-1,1,2\/N)\ny = np.cos(8*X1)+ Noise_Mag*(np.random.rand(N)-1\/2)\n\nplt.figure(figsize=figure_size) \nplt.title('Target vs X1')\nplt.scatter(X1, y, color='k',s=.2)\nplt.show()\n\nData = np.column_stack((X1,y))\nprint('Test Set',Data.shape)\ndict = {'Input1': X1, 'Output': y}  \ndf = pd.DataFrame(dict) \ndf.to_csv('Data10_Test.csv', header=True, index=False) \noutput = open('Data10_Test.pkl', 'wb')\npickle.dump(Data, output)\noutput.close()\n\nN = N_val\nX1 = np.arange(-.9,.9,1.8\/N)\ny = np.cos(8*X1)+ Noise_Mag*(np.random.rand(N)-1\/2)\n\nplt.figure(figsize=figure_size) \nplt.title('Target vs X1')\nplt.scatter(X1, y, color='k',s=.2)\nplt.show()\n\nData = np.column_stack((X1,y))\nprint('Val Set',Data.shape)\ndict = {'Input1': X1, 'Output': y}  \ndf = pd.DataFrame(dict) \ndf.to_csv('Data10_Val.csv', header=True, index=False) \noutput = open('Data10_Val.pkl', 'wb')\npickle.dump(Data, output)\noutput.close()\n","21867a98":"# Dataset6:\n\nCharacteristics:\n1. Single Variable Input\n2. Homoscedastic Uncertainty\n3. Symmetric Uncertainty\n4. Trigonometric Relationships between Input and Output\n5. Lower density at one corner of input-range","87089efa":"# Dataset10:\n\nCharacteristics:\n1. Single Variable Input\n2. Homoscedastic Uncertainty\n3. Symmetric Uncertainty\n4. Trigonometric Relationships between Input and Output\n5. No sample near the corners of the input-range in the training and validation sets","c18e69d3":"# Dataset8:\n\nCharacteristics:\n1. Single Variable Input\n2. Homoscedastic Uncertainty\n3. Symmetric Uncertainty\n4. Trigonometric Relationships between Input and Output\n5. Frequent changes of output towards the input-range","10f7d2a4":"# Dataset7:\n\nCharacteristics:\n1. Single Variable Input\n2. Homoscedastic Uncertainty\n3. Symmetric Uncertainty\n4. Trigonometric Relationships between Input and Output\n5. Lower density at the middle of input-range","9d5aa644":"# Dataset9:\n\nCharacteristics:\n1. Single Variable Input\n2. Homoscedastic Uncertainty\n3. Symmetric Uncertainty\n4. Trigonometric Relationships between Input and Output\n5. No sample near the middle of the input-range in the training set"}}