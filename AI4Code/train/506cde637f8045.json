{"cell_type":{"7019262c":"code","b3011433":"code","a2e6cd03":"code","e449e66d":"code","2a6323d2":"code","e9504fcc":"code","3dd9e221":"code","d535dc9d":"code","bb7c1b36":"code","f59a78e1":"code","8196f1b6":"code","ba1bf073":"code","e39cdcfe":"markdown","b4f09c5c":"markdown","2f323543":"markdown","1bbe6c46":"markdown","d26ec483":"markdown","d1ccc59e":"markdown","96909ca3":"markdown"},"source":{"7019262c":"import math, datetime, pandas as pd, warnings\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nimport plotly.express as px\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error, r2_score, f1_score\nfrom sklearn.preprocessing import PolynomialFeatures","b3011433":"warnings.filterwarnings('ignore')","a2e6cd03":"print('Last update on', pd.to_datetime('now'))","e449e66d":"df = pd.read_csv('..\/input\/corona-virus-brazil\/brazil_covid19.csv').groupby('date').sum()[27:].reset_index()\nbrazil = pd.DataFrame({\n    'date': pd.to_datetime(df['date'], format='%Y\/%m\/%d'),\n    'cases': df['cases'], \n    'new_cases': df['cases'].diff().fillna(0).astype(int),\n    'growth_cases': df['cases'].diff().fillna(0).astype(int)\/df['cases'],\n    'deaths': df['deaths'],\n    'new_deaths': df['deaths'].diff().fillna(0).astype(int),\n    'growth_deaths': df['deaths'].diff().fillna(0).astype(int)\/df['deaths'],\n    'mortality_rate': df['deaths']\/df['cases']\n})\nbrazil.fillna(0).tail()","2a6323d2":"def poly_reg(x, y, x_test, d):\n    poly = PolynomialFeatures(degree = d) \n    poly.fit(poly.fit_transform(x), y)\n    model = LinearRegression()\n    model.fit(poly.fit_transform(x), y)\n    return model.predict(poly.fit_transform(x_test))\n\ndef score(y, yhat):\n    r2 = r2_score(y,yhat)\n    rmse = np.sqrt(mean_squared_error(y,yhat))\n    return (r2,rmse)","e9504fcc":"# Defines the range\nstart = 17\nend = len(brazil)\n\n# Sets the samples\nx = np.asarray(range(start,end)).reshape(-1,1)\ny = brazil.iloc[start:,1]\n\n# Creates polynomial model and predict\nyhat = poly_reg(x, y, x, 4)\n\n# Plot the line chart\nfig, ax = plt.subplots(figsize=(14, 10))\nplt.scatter(x, y, s=40)\nplt.plot(x, yhat, color='magenta', linestyle='solid', linewidth=4, alpha=0.5)\nplt.title('Evaluating the model', fontsize=18, fontweight='bold', color='#333333')\nplt.legend(labels=['prediction','cases'], fontsize=12)\nplt.text(0.01,1.0,s='R2: %.3f RMSE: %.3f' % score(y, yhat), transform=ax.transAxes, fontsize=9)\nplt.grid(which='major', axis='y')\nax.set_axisbelow(True)\nax.set_ylim(0)\n[ax.spines[side].set_visible(False) for side in ['left','right','top']]\nplt.show();","3dd9e221":"dates = pd.date_range(start=brazil.iloc[0,0], end='2020-05-31') #.strftime('%d\/%m').to_list()","d535dc9d":"fig, ax = plt.subplots(figsize=(14, 10))\nplt.title('COVID-19: mortality rate in Brazil', fontsize=18, fontweight='bold', color='#333333')\nplt.plot(brazil['date'][17:], brazil['mortality_rate'][17:], color='red', linewidth=4, marker='o')\nax.xaxis.set_minor_locator(mdates.DayLocator(interval=1))\nax.xaxis.set_major_locator(mdates.DayLocator(interval=2))\nax.xaxis.set_major_formatter(mdates.DateFormatter(\"%d\/%m\"))\n[ax.spines[side].set_visible(False) for side in ['right','top']]\nplt.grid(which='major', color='#EEEEEE')\nplt.grid(which='minor', color='#EEEEEE', linestyle=':')\nax.xaxis.set_major_formatter(mdates.DateFormatter(\"%d\/%m\"))\nplt.xticks(rotation=90)\nplt.show()","bb7c1b36":"fig, ax = plt.subplots(figsize=(14, 10))\nplt.plot(dates[start:end], y, color='limegreen', linewidth=8, alpha=0.5, marker='o')\nplt.plot(brazil['date'][17:], brazil['deaths'][17:], color='red', linewidth=4, marker='o')\nplt.bar(brazil['date'][17:], brazil['new_cases'][17:])\nplt.title('COVID-19: number of cases in Brazil', fontsize=18, fontweight='bold', color='#333333')\nplt.legend(labels=['cases','deaths','new cases'], fontsize=12)\nplt.xticks(fontsize=10, rotation=90)\nplt.grid(which='major', axis='y')\nax.set_axisbelow(True)\n#[ax.annotate('%s' % y, xy=(x,y+100), fontsize=10) for x,y in zip(brazil['date'][17:], brazil['cases'][17:])]\nax.xaxis.set_minor_locator(mdates.DayLocator(interval=1))\nax.xaxis.set_major_locator(mdates.DayLocator(interval=2))\nax.xaxis.set_major_formatter(mdates.DateFormatter(\"%d\/%m\"))\nax.yaxis.set_major_locator(plt.MultipleLocator(50000))\nax.yaxis.set_minor_locator(plt.MultipleLocator(10000))\n[ax.spines[side].set_visible(False) for side in ['right','top']]\nplt.grid(which='major', color='#EEEEEE')\nplt.grid(which='minor', color='#EEEEEE', linestyle=':')\nax.xaxis.set_major_formatter(mdates.DateFormatter(\"%d\/%m\"))\nplt.show();","f59a78e1":"# Creates polynomial model and predict\nx_test = np.asarray(range(start, len(dates))).reshape(-1,1)\nyhat = poly_reg(x, y, x_test, 4)\nyhat_deaths = [i * 0.06 for i in yhat]\n\n# Plot the line chart\nfig, ax = plt.subplots(figsize=(14, 10))\nplt.plot(dates[start:end], y, color='limegreen', linewidth=8, alpha=0.5)\nplt.plot(brazil['date'][17:], brazil['deaths'][17:], color='magenta', linewidth=8, alpha=0.5)\n\nplt.plot(dates[start:len(dates)], yhat, color='green', linestyle='None', marker='o')\nplt.plot(dates[start:len(dates)], yhat_deaths, color='darkorchid', linestyle='None', marker='o')\n\n#plt.bar(brazil['date'][17:], brazil['new_cases'][17:])\nplt.title('COVID-19: cases prediction in Brazil', fontsize=18, fontweight='bold', color='#333333')\nplt.legend(labels=['cases','deaths', 'cases prediction', 'deaths prediction', 'new cases'], fontsize=14)\n\nplt.text(0.01,1.01,s='R2: %.3f RMSE: %.2f' % score(y, yhat[:len(y)]), transform=ax.transAxes, fontsize=10)\nplt.xticks(rotation=90)\nplt.tick_params(axis='y', length = 0)\nax.set_axisbelow(True)\n#[ax.annotate('%s' % y, xy=(x,y+300), fontsize=10) for x,y in zip(dates[start:len(dates)], yhat.astype(int))]\n#[ax.annotate('%s' % y, xy=(x,y+500), fontsize=10) for x,y in zip(dates[len(brazil['date']):len(dates)], yhat[len(brazil['date'][17:]):].astype(int))]\nax.xaxis.set_minor_locator(mdates.DayLocator(interval=1))\nax.xaxis.set_major_locator(mdates.DayLocator(interval=7))\nax.xaxis.set_major_formatter(mdates.DateFormatter(\"%d\/%m\"))\nax.yaxis.set_major_locator(plt.MultipleLocator(50000))\nax.yaxis.set_minor_locator(plt.MultipleLocator(10000))\nax.set_ylim(0)\n[ax.spines[side].set_visible(False) for side in ['right','top']]\nplt.grid(which='major', color='#EEEEEE')\nplt.grid(which='minor', color='#EEEEEE', linestyle=':')\nplt.show();","8196f1b6":"c = y.to_list()\n[c.append(0) for i in range(0, len(yhat)-len(y))]\npred = pd.DataFrame({'date':dates[17:], 'cases':c,'predicted':yhat.astype(int)})\npred.tail(30)","ba1bf073":"print('R2 score: %.3f \\nRMSE: %.2f' % score(pred[(pred['cases'] > 0)]['cases'], pred[(pred['cases'] > 0)]['predicted']))","e39cdcfe":"Finally, a new plot was created trying to predict the next 7 days' output, based on the training set.","b4f09c5c":"Afterward, the model was fitted with data from day one to the current date and a mixed plot was created, showing the actual number of cases, the number of deaths and the number of new cases by day.","2f323543":"Then, a Polynomial Regression method `poly_reg()` was created, returning the respective prediction of the given input.","1bbe6c46":"Next, an evaluation plot was created to verify the accuracy of the prediction, given a polynomial degree of 4. Given those values, the model predicts with an R2 score of 0.998 and RMSE of  Higher polynomial degrees were tested, although the 4th degree was kept to avoid an overfitted model. ","d26ec483":"# Prediction: COVID-19 in Brazil\nThe following notebook is an attempt to predict the COVID-19 progression curves, using Polinomial Regression and the datasets published by the Brazilian Health Ministry.\n\n![COVID-19](https:\/\/www.iol.pt\/multimedia\/oratvi\/multimedia\/imagem\/id\/5e8ba4820cf2cd6069eb2d1d\/1024)\n\n---\n\n# Table of contents\n\n1. [Acknowledgment](#acknowledgment)\n1. [Why the Polynomial Regression?](#why)\n1. [COVID-19 in Brazil](#brazil)\n1. [Methodology and results](#methodology)\n1. [Conclusion](#conclusion)\n1. [Disclaimer](#disclaimer)\n\n---\n\n<div id=\"acknowledgment\"><\/div>\n# Acknowledgment\n* The [COVID-19 cases dataset](https:\/\/www.kaggle.com\/unanimad\/corona-virus-brazil) used on this notebook was kindly built and provided by Raphael Fontes, using oficial data published daily by the Brazilian Health Ministry.\n\n<div id=\"why\"><\/div>\n# Why Polynomial Regression?\nThe COVID-19 spread rate looks like a polynomial equation curve. The polynomial regression grows exponentially and shows the relationship between the total number of cases over a limited time. Due to the high sub-notifications frequency and the unnoticed cases, is quite difficult to build an accurate model, reflecting precisely the reality.\n\n<div id=\"brazil\"><\/div>\n# COVID-19 in Brazil\nRecently, Brazil passed 10K cases on April 4th and 500 deaths on April 6th. Currently, the Brazilian pandemic has multiple foci, mainly in S\u00e3o Paulo, Rio de Janeiro, and Distrito Federal, doubling the number of cases every 4 days. Brazilian Public Healthcare Services is testing just a small group of people, especially the most severe cases, due to the lack of viral tests. This leads to a high number of undetected cases and, probably, a high increase in the number of confirmed cases in the next days.\n\n<div id=\"methodology\"><\/div>\n# Methodology and results\nFirst, I downloaded the COVID-19 dataset and pre-processed the data. For a better understanding of the data, new columns were generated, helping to visualize the growth rate of the number of cases and the growth rate of the number of deads.","d1ccc59e":"<div id='disclaimer'><\/div>\n## Disclaimer\nDue to the complex nature of a pandemic, this work does not intend to be an accurate projection or a model that tries to reproduce the complexity of reality. The main goal of this project is to propose a reflection of the importance of social distancing, quarantine and other infection prevention actions, to minimize the pandemic effects and try to flat the infection curve.\n\n## Thank you and stay home! :)","96909ca3":"<div id='conclusion'><\/div>\n# Conclusion\nDespite the sub-notifications and the unnoticed cases, the current model achieved an accuracy (R2 score) level of `99.9%` and root mean square error (RMSE) of `~700`. The prediction curve grows very close to the current growth curve. To avoid data bias and low prediction accuracy, the present model is updated and trained daily, keeping a prediction range of 7 days max."}}