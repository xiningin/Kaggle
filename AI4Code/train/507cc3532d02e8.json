{"cell_type":{"647448a3":"code","cf379af3":"code","12fc9408":"code","adad4739":"code","5b1d2150":"code","c9333ee0":"code","af62c9d9":"code","6d394841":"code","f09ee239":"code","5d6834a7":"code","0025785f":"code","6255b9d5":"code","84b842bf":"code","6baf852d":"code","f11613e5":"code","94388e12":"code","062eddd4":"code","2655781b":"code","858702b9":"code","d8732a2f":"code","c83b31e7":"code","a4db88ec":"code","ed74b69d":"code","7a82c5fd":"code","20a3fdfe":"code","91de59e6":"code","7089869d":"markdown","63ada395":"markdown","283fd00b":"markdown"},"source":{"647448a3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cf379af3":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport cv2\nimport tifffile","12fc9408":"base_path = '\/kaggle\/input\/hubmap-kidney-segmentation\/'\nprint(os.listdir(base_path))","adad4739":"#load the training data\ntrain = pd.read_csv(base_path+'train.csv')\ntrain.head()","5b1d2150":"#load the saple submssion\nss = pd.read_csv(base_path+'sample_submission.csv')\nss.head()","c9333ee0":"print(f'Number of train images: {train.shape[0]}')\nprint(f'Number of test images: {ss.shape[0]}')","af62c9d9":"#Loading the additioanl information regarding the image files suchas patient id, targe annotation paths etc\ninfo = pd.read_csv(base_path + 'HuBMAP-20-dataset_information.csv')\ninfo.head(10)","6d394841":"#Load one of the tiff images\nsample_img = tifffile.imread(base_path + \"train\/0486052bb.tiff\")\nplt.figure(figsize=(16, 16))\nplt.imshow(sample_img);","f09ee239":"print('Sample Image Size: ', sample_img.shape)","5d6834a7":"#Get the masks, viz. those points with 0 as their pixel value\nmask = np.zeros_like(sample_img, dtype=np.bool)[:, :, 0].T.reshape(-1)\n\n#Extract the annotation\nannotation = train[train[\"id\"] == \"0486052bb\"][\"encoding\"].values[0]\n\n#Since its an str object, split it and convert its dtype to int\nannotation = list(map(int, annotation.split()))","0025785f":"for i in range(0, len(annotation), 2):\n    mask[annotation[i] - 1 : annotation[i] - 1 + annotation[i + 1]] = 1","6255b9d5":"#Visualise the mask\nmask = mask.reshape(sample_img[:, :, 0].T.shape).T\nplt.figure(figsize=(16, 16))\nplt.imshow(mask);","84b842bf":"plt.figure(figsize=(8, 8))\nplt.imshow(sample_img[5000:15000, 5000:10000, :])\nplt.imshow(mask[5000:15000, 5000:10000], alpha=0.5)\nplt.title('Overalyed version of mask on the image');","6baf852d":"pd.read_json(base_path + \"train\/0486052bb-anatomical-structure.json\")","f11613e5":"pd.read_json(base_path + \"train\/0486052bb.json\")","94388e12":"#splitting the information table for train and test images\n\ninfo['split'] = 'test'\ninfo.loc[info[\"image_file\"].isin(os.listdir(base_path + \"train\")), \"split\"] = \"train\"","062eddd4":"info.head(2)","2655781b":"sns.countplot(info['sex']);","858702b9":"sns.countplot(info['laterality']);","d8732a2f":"sns.countplot(info['ethnicity']);","c83b31e7":"sns.countplot(info['age']);","a4db88ec":"sns.distplot(info['weight_kilograms']);","ed74b69d":"sns.distplot(info['height_centimeters']);","7a82c5fd":"sns.distplot(info['bmi_kg\/m^2']);","20a3fdfe":"sns.countplot(info['percent_cortex']);","91de59e6":"sns.countplot(info['percent_medulla']);","7089869d":"## Data Loading\n","63ada395":"## EDA","283fd00b":"## Sample Image Exploration"}}