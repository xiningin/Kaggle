{"cell_type":{"204c2385":"code","d3f5bff5":"code","0632fc11":"code","0eaaf7a2":"code","102c0179":"code","59521717":"code","3a883a53":"code","e109288c":"code","e58b609b":"code","c73924b2":"code","c4eb3870":"code","91ef2b2d":"code","45bd3b60":"code","5847b840":"code","c137787c":"code","2dc70c9d":"code","adc52a68":"code","3e199487":"code","13478e25":"code","b4c24042":"code","75e40f19":"code","f5b949c8":"code","6d82d6ea":"code","a61c32fc":"code","b1e0e91a":"code","fbc9bfd6":"code","2a3ab017":"code","7c1081ea":"code","90ebafe0":"code","4e1ddc45":"code","57357885":"code","e8e435b8":"code","bd25e93e":"code","457f8809":"code","007346c7":"markdown","854229cb":"markdown","c9969240":"markdown","5d57c66c":"markdown","5c4ec5bd":"markdown","ab4d8e2a":"markdown","29423dec":"markdown","35ee04d0":"markdown","020686bd":"markdown","6249dbf8":"markdown"},"source":{"204c2385":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d3f5bff5":"Air_Quality = pd.read_excel(\"\/kaggle\/input\/airquality\/AirQuality.xlsx\")","0632fc11":"Air_Quality.head()","0eaaf7a2":"print(type(Air_Quality))\nprint(Air_Quality.columns)","102c0179":"Air_Quality","59521717":"print(Air_Quality.index)","3a883a53":"print(Air_Quality['Country'])","e109288c":"print(Air_Quality['State'])","e58b609b":"print(Air_Quality.State.unique())","c73924b2":"print(Air_Quality.Pollutants.unique())","c4eb3870":"print(Air_Quality.head())\nprint()\nprint()\nprint(Air_Quality.describe())","91ef2b2d":"group_of_States = Air_Quality.groupby('State')\ngroup_of_States.head()","45bd3b60":"Air_Quality.head(5)\n","5847b840":"group_of_States.head([5])","c137787c":"states_pollution = Air_Quality.groupby(['State','Pollutants'])","2dc70c9d":"states_pollution.head()","adc52a68":"state_quality = Air_Quality.groupby(['State', 'Pollutants'])","3e199487":"state_quality.head(10)","13478e25":"Mean_Pollution = group_of_States.mean()\nMean_Pollution","b4c24042":"Mean_Pollution.sort_values(by=['Avg'])","75e40f19":"type(Mean_Pollution)\n\n","f5b949c8":"type(Air_Quality)","6d82d6ea":"type(group_of_States)","a61c32fc":"type(state_quality)","b1e0e91a":"group_of_States_df = pd.DataFrame(group_of_States)\nAir_Quality_df = pd.DataFrame(Air_Quality)","fbc9bfd6":"group_of_States_df","2a3ab017":"Air_Quality_df","7c1081ea":"import matplotlib.pyplot as plt\n%matplotlib inline\n\nimport seaborn as sns","90ebafe0":"plt.hist(Air_Quality_df.Avg, histtype='bar', rwidth=0.7)\nplt.xlabel('AVERAGE')\nplt.ylabel('COUNT')\nplt.title('AVERAGE OF AIR QUALITY IN INDIA')\nplt.show()","4e1ddc45":"plt.figure(figsize=(17,7), dpi=100)\nsns.countplot(x='State',data=Air_Quality)\nplt.xlabel('State')\nplt.tight_layout()","57357885":"plt.hist(Air_Quality_df.Max, histtype ='bar', rwidth=0.7)\nplt.xlabel(\"MAX\")\nplt.ylabel(\"COUNT\")\nplt.title(\"MAX OF AIR QUALITY OF INDIA\")\nplt.show()","e8e435b8":"plt.hist(Air_Quality_df.Min, histtype ='bar', rwidth=0.7)\nplt.xlabel(\"Min\")\nplt.ylabel(\"COUNT\")\nplt.title(\"Min OF AIR QUALITY OF INDIA\")\nplt.show()","bd25e93e":"Air_Quality['Pollutants'].value_counts().plot()\nplt.xlabel(\"Pollutants\")\nplt.ylabel(\"COUNT\")\nplt.title(\"Pollutants OF AIR QUALITY OF INDIA\")\nprint(plt.show())\nAir_Quality['Pollutants'].value_counts().plot('bar')\nplt.xlabel(\"Pollutants\")\nplt.ylabel(\"COUNT\")\nplt.title(\"Pollutants OF AIR QUALITY OF INDIA\")\nprint(plt.show())\n","457f8809":"import seaborn as sns\npollutant = list(Air_Quality['Pollutants'].unique())\nfor poll in pollutant:\n    plt.figure(figsize=(18,8), dpi = 100)\n    sns.countplot(Air_Quality[Air_Quality['Pollutants'] == poll]['State'], data = Air_Quality)\n    plt.tight_layout()\n    plt.title(poll)","007346c7":"**HISTOGRAM OF MINIMUM OF AIR QUALITY**","854229cb":"**HISTOGRAM PLOT FOR AVERAGE OF AIR QUALITY **","c9969240":"**TYPE**","5d57c66c":"**HISTOGRAM OF MAXIMUM OF AIR QUALITY**","5c4ec5bd":"**PLOTTING OF TYPES OF POLLUTANTS**","ab4d8e2a":"**PLOTTING OF COUNT EACH POLLUTANT IN  STATE**","29423dec":"**MAKE DATAFRAME**","35ee04d0":"**MEAN OF POLLUTION IN STATES**","020686bd":"**HISTOGRAM PLOT FOR CHECKING AIR QUALITY IN STATES**","6249dbf8":"**GROUPING BY STATES**"}}