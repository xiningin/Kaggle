{"cell_type":{"c5d9e7f7":"code","f9fba1ca":"code","f6b670e8":"code","8c10fda9":"code","42af5fa5":"code","cfd1cf86":"code","b4d03b50":"code","81252acd":"code","a1ac519b":"code","a9e6f8db":"code","5adb300c":"code","12b9d4f7":"code","926229e4":"code","18d0f560":"code","d88b748a":"code","aeaa2fbf":"code","fd77fa3f":"code","4a8b749b":"code","1e17d144":"code","8822d0cf":"code","579669b1":"code","e521f8b6":"code","489d8b25":"code","945d0f21":"code","c5f98160":"code","43483829":"code","7bd32763":"code","8b65b690":"code","f7d23d92":"code","038e38f4":"code","7f793791":"code","dfa8ec16":"code","28f3ecf8":"code","ab0b61a2":"code","0572fb80":"code","22bbfff3":"code","40d13ac4":"code","33305d21":"code","fed00c4b":"markdown","def2ecde":"markdown","87a72a8a":"markdown","7303c78d":"markdown","ed7a9ae6":"markdown","0530a7ad":"markdown"},"source":{"c5d9e7f7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f9fba1ca":"import pandas as pd\nimport sklearn\nimport seaborn as sns\nimport matplotlib.pyplot as plt \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import confusion_matrix,accuracy_score\n\nsns.set_style('whitegrid')","f6b670e8":"data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndata","8c10fda9":"data.shape # get shape","42af5fa5":"sns.countplot(x = 'Survived',data = data) # countplot to check how many survived (1) and not survived (0).","cfd1cf86":"sns.countplot(x = 'Survived',hue = 'Sex',data = data) # check how many male\/female are survived (1) and not survived (0). \n","b4d03b50":"sns.countplot(x = 'Survived',hue = 'Pclass', data = data) # check pasangers are from which class.","81252acd":"data['Age'].hist(bins = 10) # histogram of Age (agewise frequency of pasanger in titanic)","a1ac519b":"sns.countplot(x = 'SibSp',data = data) # get countplot of 'SibSp'","a9e6f8db":"data.info() # get data info","5adb300c":"data.isnull() # check null values in data (False = not null, True = null)","12b9d4f7":"data.isnull().sum()  # get sum of null values in each column.","926229e4":"sns.heatmap(data.isnull()) # heatmap where 'Age' and 'Cabin' has more null values.","18d0f560":"data['Age'] = data['Age'].fillna(data['Age'].mean()) # null values in 'Age' is replaced by mean.\ndata = data.drop(['Cabin'],axis = 1) # drop 'Cabin' which is having more null values","d88b748a":"data.shape # get shape (1 column dropped)","aeaa2fbf":"data.dropna(inplace = True) # remaining null values removed","fd77fa3f":"data.isnull().sum() # check for the null values","4a8b749b":"sns.heatmap(data.isnull()) # heatmap for null values ","1e17d144":"data.drop(['PassengerId','Name','Ticket'],axis = 1,inplace = True)  # drop unwanted column from data","8822d0cf":"pd.options.display.float_format = '{:,.2f}'.format\ndata.corr() # get correlation","579669b1":"sns.heatmap(data.corr(),annot = True,fmt = '.2f') # visualize correlation","e521f8b6":"# get dummies for 'Sex', 'Embarked','Pclass'\nsex = pd.get_dummies(data['Sex'],drop_first = True) \nembarked = pd.get_dummies(data['Embarked'],drop_first = True)\npclass = pd.get_dummies(data['Pclass'],drop_first = True)","489d8b25":"data = pd.concat([data,sex,pclass,embarked],axis = 1) # add it into data\ndata.drop(['Pclass','Sex','Embarked'],axis = 1, inplace = True) # remove previous one","945d0f21":"x = data.drop(['Survived'],axis = 1) # get independent variable\ny = data['Survived'] # get dependent (target) variable","c5f98160":"# perform train-test-split with test_size of 0.2 \nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.2,random_state = 42)","43483829":"# data scaling\nsc = StandardScaler()\n\nx_train = sc.fit_transform(x_train)\nx_test = sc.fit_transform(x_test)","7bd32763":"model = LogisticRegression(max_iter = 150,n_jobs = 1)  # model building\nmodel.fit(x_train,y_train) # model training\ny_pred = model.predict(x_test) # get prediction","8b65b690":"# performance evaluation \n\nprint(confusion_matrix(y_test,y_pred))\nprint(\"Accuracy:\",round(accuracy_score(y_test,y_pred)*100,2),'%')","f7d23d92":"test_data = pd.read_csv('\/kaggle\/input\/titanic\/test.csv') # load test data\ntest_data","038e38f4":"test_data.shape # get shape","7f793791":"test_data.isnull().sum() # check null values","dfa8ec16":"# handling null values\n\ntest_data['Age'] = test_data['Age'].fillna(test_data['Age'].mean())  # replace null values\ntest_data['Fare'] = test_data['Fare'].fillna(test_data['Fare'].mean()) # replace null values\ntest_data.drop(['Cabin'],axis = 1, inplace = True) # drop 'Cabin' having more null value","28f3ecf8":"test_data.isnull().sum() # check null values","ab0b61a2":"# get dummies \n\ntsex = pd.get_dummies(test_data['Sex'],drop_first = True)\ntembarked = pd.get_dummies(test_data['Embarked'],drop_first = True)\ntpclass = pd.get_dummies(test_data['Pclass'],drop_first = True)","0572fb80":"t_data = pd.concat([test_data,tsex,tpclass,tembarked],axis = 1) # add it into data\nt_data = t_data.drop(['Pclass','PassengerId','Name','Sex','Ticket','Embarked'],axis = 1) # drop unwanted coulumn\nt_data = sc.fit_transform(t_data) # data scaling","22bbfff3":"result = model.predict(t_data) # make prediction on test data\nresult","40d13ac4":"result.shape # check result shape","33305d21":"# add it to csv file\n\nid =  test_data['PassengerId']\nd = {'PassengerId':id,'Survived':result}\ndf = pd.DataFrame(d)\ndf.to_csv('TitanicSubmission.csv',index = False)","fed00c4b":"# **Model Training**","def2ecde":"# **Import all required packages**","87a72a8a":"# **Test Data**","7303c78d":"# **Load Data**","ed7a9ae6":"# **Data Analysis**\n\nANALYZE DATA USING PLOTS TO SHOW RELATIONSHIP BETWEEN DIFFERENT VARIABLES","0530a7ad":"# **Data Wrangling**\nCLEAN DATA BY REMOVING NAN VALUES AND UNNECESSARY COLUMNS IN DATA"}}