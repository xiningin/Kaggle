{"cell_type":{"720cee96":"code","c5b83c56":"code","43852eeb":"code","fd093779":"code","125fb6bc":"code","f0b3744d":"code","a296510c":"code","0d5eef6f":"code","588a7f5e":"code","644c1821":"code","896a5c1c":"code","52eb789d":"code","e53983a8":"code","4bfb867e":"code","337b15c0":"code","a274111c":"code","e2d608a1":"code","64053e2d":"code","21ad1d2b":"code","4c2fab8c":"code","3d877966":"code","0579172f":"markdown","106fa560":"markdown","c7e92e4c":"markdown","0379a160":"markdown","e27d3500":"markdown","5609abfb":"markdown","1369b1ac":"markdown","0aa5c40e":"markdown","45816fca":"markdown","663132e3":"markdown"},"source":{"720cee96":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom warnings import filterwarnings\nfilterwarnings('ignore')","c5b83c56":"import matplotlib.pyplot as plt\nfrom matplotlib.colors import ListedColormap\n\n# import 'Seaborn' \nimport seaborn as sns\n\n# to suppress warnings \nfrom warnings import filterwarnings\nfilterwarnings('ignore')\n\n# display all columns of the dataframe\npd.options.display.max_columns = None\n\n# display all rows of the dataframe\npd.options.display.max_rows = None\n \n# to display the float values upto 6 decimal places     \npd.options.display.float_format = '{:.6f}'.format\n\n# import train-test split \nfrom sklearn.model_selection import train_test_split,GridSearchCV","43852eeb":"df=pd.read_csv(\"..\/input\/engineering-placements-prediction\/collegePlace.csv\")\ndf.head()","fd093779":"sns.countplot(df['Gender'])","125fb6bc":"plt.figure(figsize=(16,4))\nsns.countplot(df.Stream)","f0b3744d":"plt.figure(figsize=(13,5))\ndf.groupby('Stream')['Internships'].sum().plot(kind='bar')","a296510c":"plt.figure(figsize=(13,5))\ndf.groupby('Stream')['PlacedOrNot'].sum().plot(kind='bar')","0d5eef6f":"from sklearn.preprocessing import LabelEncoder","588a7f5e":"lr = LabelEncoder()\ndf['gender'] = pd.DataFrame(lr.fit_transform(df[['Gender']]))\ndf.head()","644c1821":"df['stream'] = pd.DataFrame(lr.fit_transform(df['Stream']))","896a5c1c":"df2 = df.drop(['Gender','Stream'],axis=1)","52eb789d":"X = df2.drop('PlacedOrNot',axis=1)\ny = df2.PlacedOrNot","e53983a8":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.3,random_state=1)","4bfb867e":"from sklearn import metrics\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import cohen_kappa_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import roc_curve\nfrom sklearn.metrics import accuracy_score\n\n# import function to perform feature selection\nfrom sklearn.feature_selection import RFE","337b15c0":"log_reg = LogisticRegression()\nlog_reg.fit(X_train,y_train)\ny_pred = log_reg.predict(X_test)\nprint('Accuracy Score',accuracy_score(y_test,y_pred)*100)\n#model has 76% Accuracy...","a274111c":"FP_rate,TP_rate,threshold=roc_curve(y_test,y_pred)\n\nplt.figure(figsize=(15,8))\nplt.plot(FP_rate,TP_rate,color='red')\nplt.plot([0, 1], [0, 1],'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.0])\nplt.title('ROC curve for Admission Prediction Classifier (Full Model)', fontsize = 15)\nplt.xlabel('False positive rate (1-Specificity)', fontsize = 15)\nplt.ylabel('True positive rate (Sensitivity)', fontsize = 15)\nplt.text(x = 0.02, y = 0.9, s = ('AUC Score:', round(metrics.roc_auc_score(y_test, y_pred),4)))                               \nplt.grid(True)\nplt.show()","e2d608a1":"from sklearn.tree import DecisionTreeClassifier","64053e2d":"DT=DecisionTreeClassifier() \nDT_model_full = DT.fit(X_train,y_train) \ny_pred_test = DT_model_full.predict(X_test) \nprint(\"Accuracy Score on Test dayta:\\t\",accuracy_score(y_test,y_pred_test))\ny_pred_train = DT_model_full.predict(X_train) \nprint(\"Accuracy Score on Train Data:\\t\",accuracy_score(y_train,y_pred_train))","21ad1d2b":"FP_rate,TP_rate,threshold=roc_curve(y_test,y_pred_test)\n\nplt.figure(figsize=(15,8))\nplt.plot(FP_rate,TP_rate,color='red')\nplt.plot([0, 1], [0, 1],'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.0])\nplt.title('ROC curve for Admission Prediction Classifier (Full Model)', fontsize = 15)\nplt.xlabel('False positive rate (1-Specificity)', fontsize = 15)\nplt.ylabel('True positive rate (Sensitivity)', fontsize = 15)\nplt.text(x = 0.02, y = 0.9, s = ('AUC Score:', round(metrics.roc_auc_score(y_test, y_pred_test),4)))                               \nplt.grid(True)\nplt.show()","4c2fab8c":"X_train.head(2)","3d877966":"Val = [[30,0,8,0,0,1,5]]\nprint(\"Predicted VAlue:- \",DT_model_full.predict(Val) )","0579172f":"## EDA","106fa560":"Number of Males Are More than Female For Placements.","c7e92e4c":"## Encoding","0379a160":"###### From The Following Graph We can that that Students From Computer Science Has More Internships than Any Other Stream.","e27d3500":"###### We can See that for placements Students From Computer Science And It are More than And Other Stream.","5609abfb":"## Lets Predict...","1369b1ac":"## Logistic Regression","0aa5c40e":"## Decision Tree:-","45816fca":"###### From The Graph We can that that Students From Computer Science and It Has More Chance of Getting Placed Than Any Other Steam.","663132e3":"###  From the Above Both Models We Can Say That Decision Tree Has Better Accuracy Than Logistic Regression In this DataSet."}}