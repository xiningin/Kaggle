{"cell_type":{"747ab604":"code","985143e4":"code","fece2251":"code","d93543b5":"code","530289d0":"code","c5e54644":"code","43060d05":"code","85df4e50":"code","5625b1c4":"code","6157f9df":"code","381a6a16":"code","59cb9fe0":"code","c2a6c586":"code","239e4f23":"code","f8df8eeb":"code","8dc5d26d":"code","74a8adda":"code","1d80c791":"code","146947f9":"code","73390a74":"code","cf2c575a":"code","3c3ed182":"code","cffcc0d2":"code","afe2c537":"code","a02f8f75":"code","c01a02ee":"code","a7b38abc":"code","cd8ffc2e":"code","1008d561":"markdown","0b50fddb":"markdown","6ae75fca":"markdown","d495a000":"markdown","a492c3d8":"markdown","f64b6e43":"markdown","2953c9e2":"markdown","29c42f20":"markdown","4e324c86":"markdown","9e6308dc":"markdown","fe5e3763":"markdown"},"source":{"747ab604":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","985143e4":"train_df = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-jan-2021\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-jan-2021\/test.csv\")","fece2251":"train_df.info()","d93543b5":"test_df.info()","530289d0":"train_df.head()","c5e54644":"test_df.head()","43060d05":"train_df.describe()","85df4e50":"test_df.describe()","5625b1c4":"def plot_feature_scatter(df1, df2, features):\n    i = 0\n    sns.set_style('whitegrid')\n    plt.figure()\n    fig, ax = plt.subplots(5, 3,figsize=(14, 24))\n\n    for feature in features:\n        i += 1\n        plt.subplot(5, 3, i)\n        plt.scatter(df1[feature], df2[feature], marker='+', color='green')\n        plt.xlabel(feature, fontsize=9)\n    plt.show();\n","6157f9df":"features = ['cont1', 'cont2','cont3','cont4', 'cont5', 'cont6', 'cont7',\n           'cont8', 'cont9','cont10','cont11', 'cont12', 'cont13', 'cont14']\nplot_feature_scatter(train_df[::15],test_df[::10], features)\n","381a6a16":"def plot_feature_target_scatter(df1, features):\n    i = 0\n    sns.set_style('whitegrid')\n    plt.figure()\n    fig, ax = plt.subplots(5, 3,figsize=(14, 24))\n\n    for feature in features:\n        i += 1\n        plt.subplot(5, 3, i)\n        plt.scatter(df1[feature], df1['target'], marker='+', color='blue')\n        plt.xlabel(feature, fontsize=9)\n    plt.show();","59cb9fe0":"plot_feature_target_scatter(train_df[::15], features)","c2a6c586":"def plot_feature_distribution(df1, df2, features):\n    i = 0\n    sns.set_style('whitegrid')\n    plt.figure()\n    fig, ax = plt.subplots(5, 3,figsize=(14, 24))\n\n    for feature in features:\n        i += 1\n        plt.subplot(5, 3,i)\n        sns.distplot(train_df[feature],color=\"orange\", kde=True,bins=120, label='train')\n        sns.distplot(test_df[feature],color=\"darkblue\", kde=True,bins=120, label='test')\n        plt.xlabel(feature, fontsize=9); plt.legend()\n    plt.show();\n","239e4f23":"plot_feature_distribution(train_df[::15],test_df[::10], features)","f8df8eeb":"plt.figure(figsize=(16,6))\nplt.title(\"Distribution of target values\")\nsns.distplot(train_df['target'],color=\"darkblue\", kde=True,bins=120, label='target')\nplt.legend(); plt.show()","8dc5d26d":"plt.figure(figsize=(16,6))\nplt.title(\"Distribution of sum values per row of the train and test set\")\nsns.distplot(train_df[features].sum(axis=1),color=\"orange\", kde=True,bins=120, label='train')\nsns.distplot(test_df[features].sum(axis=1),color=\"darkblue\", kde=True,bins=120, label='test')\nplt.legend(); plt.show()","74a8adda":"plt.figure(figsize=(16,6))\nplt.title(\"Distribution of min values per row of the train and test set\")\nsns.distplot(train_df[features].min(axis=1),color=\"orange\", kde=True,bins=120, label='train')\nsns.distplot(test_df[features].min(axis=1),color=\"darkblue\", kde=True,bins=120, label='test')\nplt.legend(); plt.show()","1d80c791":"plt.figure(figsize=(16,6))\nplt.title(\"Distribution of max values per row of the train and test set\")\nsns.distplot(train_df[features].max(axis=1),color=\"orange\", kde=True,bins=120, label='train')\nsns.distplot(test_df[features].max(axis=1),color=\"darkblue\", kde=True,bins=120, label='test')\nplt.legend(); plt.show()","146947f9":"plt.figure(figsize=(16,6))\nplt.title(\"Distribution of mean values per row of the train and test set\")\nsns.distplot(train_df[features].mean(axis=1),color=\"orange\", kde=True,bins=120, label='train')\nsns.distplot(test_df[features].mean(axis=1),color=\"darkblue\", kde=True,bins=120, label='test')\nplt.legend(); plt.show()","73390a74":"plt.figure(figsize=(16,6))\nplt.title(\"Distribution of median values per row of the train and test set\")\nsns.distplot(train_df[features].median(axis=1),color=\"orange\", kde=True,bins=120, label='train')\nsns.distplot(test_df[features].median(axis=1),color=\"darkblue\", kde=True,bins=120, label='test')\nplt.legend(); plt.show()","cf2c575a":"plt.figure(figsize=(16,6))\nplt.title(\"Distribution of skew values per row of the train and test set\")\nsns.distplot(train_df[features].skew(axis=1),color=\"orange\", kde=True,bins=120, label='train')\nsns.distplot(test_df[features].skew(axis=1),color=\"darkblue\", kde=True,bins=120, label='test')\nplt.legend(); plt.show()","3c3ed182":"plt.figure(figsize=(16,6))\nplt.title(\"Distribution of kurtosis values per row of the train and test set\")\nsns.distplot(train_df[features].kurtosis(axis=1),color=\"orange\", kde=True,bins=120, label='train')\nsns.distplot(test_df[features].kurtosis(axis=1),color=\"darkblue\", kde=True,bins=120, label='test')\nplt.legend(); plt.show()","cffcc0d2":"plt.figure(figsize=(16, 16))\nheatmap = sns.heatmap(np.round(test_df[features].corr(), 3), vmin=-1, vmax=1, annot=True, cmap='BrBG')\nheatmap.set_title('Features correlation', fontdict={'fontsize':10}, pad=10)\nplt.title(\"Spearman correlation - test data\")\nplt.show()","afe2c537":"features_target = features + ['target']\nplt.figure(figsize=(16, 16))\nheatmap = sns.heatmap(np.round(train_df[features_target].corr(), 3), vmin=-1, vmax=1, annot=True, cmap='BrBG')\nheatmap.set_title('Features correlation', fontdict={'fontsize':10}, pad=10)\nplt.title(\"Spearman correlation - train data\")\nplt.show()","a02f8f75":"for df in [train_df, test_df]:\n    df['sum'] = df[features].sum(axis=1)\n    df['min'] = df[features].min(axis=1)\n    df['max'] = df[features].max(axis=1)\n    df['mean'] = df[features].mean(axis=1)\n    df['median'] = df[features].median(axis=1)\n    df['skew'] = df[features].skew(axis=1)\n    df['kurtosis'] = df[features].kurtosis(axis=1)","c01a02ee":"new_features = ['sum', 'min', 'max', 'mean', 'median', 'skew', 'kurtosis']","a7b38abc":"features_target = features + new_features + ['target']\nplt.figure(figsize=(18, 18))\nheatmap = sns.heatmap(np.round(train_df[features_target].corr(), 3), vmin=-1, vmax=1, annot=True, cmap='BrBG')\nheatmap.set_title('Features correlation', fontdict={'fontsize':10}, pad=10)\nplt.title(\"Spearman correlation - train data (including new features)\")\nplt.show()","cd8ffc2e":"features_all = features + new_features\nplt.figure(figsize=(18, 18))\nheatmap = sns.heatmap(np.round(test_df[features_all].corr(), 3), vmin=-1, vmax=1, annot=True, cmap='BrBG')\nheatmap.set_title('Features correlation', fontdict={'fontsize':10}, pad=10)\nplt.title(\"Spearman correlation - test data (including new features)\")\nplt.show()","1008d561":"# Introduction\n\nIn this challenge, Kaggle invites the competitors to solve a regression problem.","0b50fddb":"## Features aggregated functions distribution","6ae75fca":"# Data exploration\n\n\n## Scatter plot of features\n\n\nScatter plot of train and test features, feature by feature.","d495a000":"## New features","a492c3d8":"## Glimpse the data","f64b6e43":"# Prepare the analysis\n\n\n## Load packages","2953c9e2":"## Load the data","29c42f20":"## Features correlation","4e324c86":"## Scatter plot of features vs. target\n\nScatter plot of each feature in train vs. target values.","9e6308dc":"## Features distribution","fe5e3763":"## Target distribution"}}