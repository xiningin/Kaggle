{"cell_type":{"5d208359":"code","5c44e7eb":"code","360d5922":"code","9bd54df8":"code","28bffcc2":"code","8d094d18":"code","302e86e9":"code","aa9fa955":"code","c6f05ffa":"code","4f9bc7ce":"code","fdc35c0d":"code","561dab1d":"code","c218d1bd":"code","ad0d25e9":"code","e3795177":"code","9225d17d":"code","f07f5bc8":"code","332d293a":"code","e4015b3f":"code","8a912bcc":"code","0f700d54":"markdown","916d4032":"markdown","0cdb7fcf":"markdown","832c3b19":"markdown","26e1e1cd":"markdown","e3fd72a6":"markdown","73da1533":"markdown","787ed311":"markdown","e395c086":"markdown","ad614bc3":"markdown","20f1c880":"markdown","2604c7f9":"markdown","bd1fe5f7":"markdown","cacbe00a":"markdown","a927c338":"markdown","1ce42728":"markdown","15876a70":"markdown","dfd22f2e":"markdown","1b92808f":"markdown","9194b808":"markdown","2bff38e7":"markdown","216e75d1":"markdown","34571535":"markdown","9578c76f":"markdown","74742f0a":"markdown","48034867":"markdown","03be9642":"markdown","0a905ac0":"markdown","809627ab":"markdown","1575ab8d":"markdown","b9ad7862":"markdown","b30fa598":"markdown","2123758d":"markdown","ddea7548":"markdown","6bc80e7d":"markdown","294b8aba":"markdown","0d434fa9":"markdown","2465358a":"markdown","a4509893":"markdown","8bc5ec83":"markdown","54329244":"markdown"},"source":{"5d208359":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5c44e7eb":"df1 = pd.read_csv(\"\/kaggle\/input\/trkiye-2020-hava-kalitesiturkey-2020-air-quality\/PM10.csv\")\ndf2 = pd.read_csv(\"\/kaggle\/input\/trkiye-2020-hava-kalitesiturkey-2020-air-quality\/SO2.csv\")\ndf3 = pd.read_csv(\"\/kaggle\/input\/trkiye-2020-hava-kalitesiturkey-2020-air-quality\/CO.csv\")\ndf4 = pd.read_csv(\"\/kaggle\/input\/trkiye-2020-hava-kalitesiturkey-2020-air-quality\/NO2.csv\")\ndf5 = pd.read_csv(\"\/kaggle\/input\/trkiye-2020-hava-kalitesiturkey-2020-air-quality\/O3.csv\")\ndf6 = pd.read_csv(\"\/kaggle\/input\/trkiye-2020-hava-kalitesiturkey-2020-air-quality\/Full.csv\")","360d5922":"df6.describe()","9bd54df8":"df1.info()","28bffcc2":"df2.info()","8d094d18":"df3.info()","302e86e9":"df4.info()","aa9fa955":"df5.info()","c6f05ffa":"df1.PM10.replace(['-'],0.0,inplace = True)\ndf1.PM10 = df1.PM10.astype(float)\narea_list = list(df1['\u015eehir'].unique())\narea_PM10_ratio = []\nfor i in area_list:\n    x = df1[df1['\u015eehir']==i]\n    area_PM10_rate = sum(x.PM10)\/len(x)\n    area_PM10_ratio.append(area_PM10_rate)\ndata = pd.DataFrame({'area_list': area_list,'area_PM10_ratio':area_PM10_ratio})\nnew_index = (data['area_PM10_ratio'].sort_values(ascending=False)).index.values\nsorted_data = data.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(15,6))\nsns.barplot(x=sorted_data['area_list'], y=sorted_data['area_PM10_ratio'],palette = sns.cubehelix_palette(len(sorted_data)))\nplt.xticks(rotation= 90)\nplt.xlabel('\u015eehirler',color=\"green\")\nplt.ylabel('PM10 Oran\u0131',color=\"red\")\nplt.title('\u015eehirlere G\u00f6re PM10 Oran\u0131',color=\"blue\")\nplt.show()","4f9bc7ce":"df1.PM10.replace(['-'],\"0.0\",inplace = True)\ndf1.PM10 = df1.PM10.astype(float)\narea_list = list(df1['\u015eehir'].unique())\narea_PM10_ratio = []\nfor i in area_list:\n    x = df1[df1['\u015eehir']==i]\n    area_PM10_rate = sum(x.PM10)\/len(x)\n    area_PM10_ratio.append(area_PM10_rate)\ndata = pd.DataFrame({'area_list': area_list,'area_PM10_ratio':area_PM10_ratio})\nnew_index = (data['area_PM10_ratio'].sort_index(ascending=False)).index.values\nsorted_data = data.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(15,6))\nsns.barplot(x=sorted_data['area_list'], y=sorted_data['area_PM10_ratio'])\nplt.xticks(rotation= 90)\nplt.xlabel('\u015eehirler',color=\"green\")\nplt.ylabel('PM10 Oran\u0131',color=\"red\")\nplt.title('\u015eehirlere G\u00f6re PM10 Oran\u0131',color=\"blue\")\nplt.show()","fdc35c0d":"df2.SO2.replace(['-'],0.0,inplace = True)\ndf2.SO2 = df2.SO2.astype(float)\narea_list = list(df2['\u015eehir'].unique())\narea_SO2_ratio = []\nfor i in area_list:\n    x = df2[df2['\u015eehir']==i]\n    area_SO2_rate = sum(x.SO2)\/len(x)\n    area_SO2_ratio.append(area_SO2_rate)\ndata = pd.DataFrame({'area_list': area_list,'area_SO2_ratio':area_SO2_ratio})\nnew_index = (data['area_SO2_ratio'].sort_values(ascending=False)).index.values\nsorted_data2 = data.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(15,6))\nsns.barplot(x=sorted_data2['area_list'], y=sorted_data2['area_SO2_ratio'],palette = sns.cubehelix_palette(len(sorted_data2)))\nplt.xticks(rotation= 90)\nplt.xlabel('\u015eehirler',color=\"green\")\nplt.ylabel('SO2 Oran\u0131',color=\"red\")\nplt.title('\u015eehirlere G\u00f6re SO2 Oran\u0131',color=\"blue\")\nplt.show()","561dab1d":"df2.SO2.replace(['-'],\"0.0\",inplace = True)\ndf2.SO2 = df2.SO2.astype(float)\narea_list = list(df2['\u015eehir'].unique())\narea_SO2_ratio = []\nfor i in area_list:\n    x = df2[df2['\u015eehir']==i]\n    area_SO2_rate = sum(x.SO2)\/len(x)\n    area_SO2_ratio.append(area_SO2_rate)\ndata = pd.DataFrame({'area_list': area_list,'area_SO2_ratio':area_SO2_ratio})\nnew_index = (data['area_SO2_ratio'].sort_index(ascending=False)).index.values\nsorted_dataA = data.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(15,6))\nsns.barplot(x=sorted_dataA['area_list'], y=sorted_dataA['area_SO2_ratio'])\nplt.xticks(rotation= 90)\nplt.xlabel('\u015eehirler',color=\"green\")\nplt.ylabel('SO2 Oran\u0131',color=\"red\")\nplt.title('\u015eehirlere G\u00f6re SO2 Oran\u0131',color=\"blue\")\nplt.show()","c218d1bd":"df3.CO.replace(['-'],0.0,inplace = True)\ndf3.CO = df3.CO.astype(float)\narea_list = list(df3['\u015eehir'].unique())\narea_CO_ratio = []\nfor i in area_list:\n    x = df3[df3['\u015eehir']==i]\n    area_CO_rate = sum(x.CO)\/len(x)\n    area_CO_ratio.append(area_CO_rate)\ndata = pd.DataFrame({'area_list': area_list,'area_CO_ratio':area_CO_ratio})\nnew_index = (data['area_CO_ratio'].sort_values(ascending=False)).index.values\nsorted_data3 = data.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(15,6))\nsns.barplot(x=sorted_data3['area_list'], y=sorted_data3['area_CO_ratio'],palette = sns.cubehelix_palette(len(sorted_data3)))\nplt.xticks(rotation= 90)\nplt.xlabel('\u015eehirler',color=\"green\")\nplt.ylabel('CO Oran\u0131',color=\"red\")\nplt.title('\u015eehirlere G\u00f6re CO Oran\u0131',color=\"blue\")\nplt.show()","ad0d25e9":"df3.CO.replace(['-'],\"0.0\",inplace = True)\ndf3.CO = df3.CO.astype(float)\narea_list = list(df3['\u015eehir'].unique())\narea_CO_ratio = []\nfor i in area_list:\n    x = df3[df3['\u015eehir']==i]\n    area_CO_rate = sum(x.CO)\/len(x)\n    area_CO_ratio.append(area_CO_rate)\ndata = pd.DataFrame({'area_list': area_list,'area_CO_ratio':area_CO_ratio})\nnew_index = (data['area_CO_ratio'].sort_index(ascending=False)).index.values\nsorted_dataAA = data.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(15,6))\nsns.barplot(x=sorted_dataAA['area_list'], y=sorted_dataAA['area_CO_ratio'])\nplt.xticks(rotation= 90)\nplt.xlabel('\u015eehirler',color=\"green\")\nplt.ylabel('CO Oran\u0131',color=\"red\")\nplt.title('\u015eehirlere G\u00f6re CO Oran\u0131',color=\"blue\")\nplt.show()","e3795177":"df4.NO2.replace(['-'],\"0.0\",inplace = True)\ndf4.NO2 = df4.NO2.astype(float)\narea_list = list(df4['\u015eehir'].unique())\narea_NO2_ratio = []\nfor i in area_list:\n    x = df4[df4['\u015eehir']==i]\n    area_NO2_rate = sum(x.NO2)\/len(x)\n    area_NO2_ratio.append(area_NO2_rate)\ndata = pd.DataFrame({'area_list': area_list,'area_NO2_ratio':area_NO2_ratio})\nnew_index = (data['area_NO2_ratio'].sort_values(ascending=False)).index.values\nsorted_data4 = data.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(15,6))\nsns.barplot(x=sorted_data4['area_list'], y=sorted_data4['area_NO2_ratio'])\nplt.xticks(rotation= 90)\nplt.xlabel('\u015eehirler',color=\"green\")\nplt.ylabel('NO2 Oran\u0131',color=\"red\")\nplt.title('\u015eehirlere G\u00f6re NO2 Oran\u0131',color=\"blue\")\nplt.show()","9225d17d":"df4.NO2.replace(['-'],\"0.0\",inplace = True)\ndf4.NO2 = df4.NO2.astype(float)\narea_list = list(df4['\u015eehir'].unique())\narea_NO2_ratio = []\nfor i in area_list:\n    x = df4[df4['\u015eehir']==i]\n    area_NO2_rate = sum(x.NO2)\/len(x)\n    area_NO2_ratio.append(area_NO2_rate)\ndata = pd.DataFrame({'area_list': area_list,'area_NO2_ratio':area_NO2_ratio})\nnew_index = (data['area_NO2_ratio'].sort_index(ascending=False)).index.values\nsorted_dataAAA = data.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(15,6))\nsns.barplot(x=sorted_dataAAA['area_list'], y=sorted_dataAAA['area_NO2_ratio'])\nplt.xticks(rotation= 90)\nplt.xlabel('\u015eehirler',color=\"green\")\nplt.ylabel('NO2 Oran\u0131',color=\"red\")\nplt.title('\u015eehirlere G\u00f6re NO2 Oran\u0131',color=\"blue\")\nplt.show()","f07f5bc8":"df5.O3.replace(['-'],0.0,inplace = True)\ndf5.O3 = df5.O3.astype(float)\narea_list = list(df5['\u015eehir'].unique())\narea_O3_ratio = []\nfor i in area_list:\n    x = df5[df5['\u015eehir']==i]\n    area_O3_rate = sum(x.O3)\/len(x)\n    area_O3_ratio.append(area_O3_rate)\ndata = pd.DataFrame({'area_list': area_list,'area_O3_ratio':area_O3_ratio})\nnew_index = (data['area_O3_ratio'].sort_values(ascending=False)).index.values\nsorted_data5= data.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(15,6))\nsns.barplot(x=sorted_data5['area_list'], y=sorted_data5['area_O3_ratio'],palette = sns.cubehelix_palette(len(sorted_data5)))\nplt.xticks(rotation= 90)\nplt.xlabel('\u015eehirler',color=\"green\")\nplt.ylabel('O3 Oran\u0131',color=\"red\")\nplt.title('\u015eehirlere G\u00f6re O3 Oran\u0131',color=\"blue\")\nplt.show()","332d293a":"df5.O3.replace([\"-\"],0.0,inplace = True)\ndf5.O3 = df5.O3.astype(float)\narea_list = list(df5['\u015eehir'].unique())\narea_O3_ratio = []\nfor i in area_list:\n    x = df5[df5['\u015eehir']==i]\n    area_O3_rate = sum(x.O3)\/len(x)\n    area_O3_ratio.append(area_O3_rate)\ndata = pd.DataFrame({'area_list': area_list,'area_O3_ratio':area_O3_ratio})\nnew_index = (data['area_O3_ratio'].sort_index(ascending=False)).index.values\nsorted_dataAAAA= data.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(15,6))\nsns.barplot(x=sorted_dataAAAA['area_list'], y=sorted_dataAAAA['area_O3_ratio'])\nplt.xticks(rotation= 90)\nplt.xlabel('\u015eehirler',color=\"green\")\nplt.ylabel('O3 Oran\u0131',color=\"red\")\nplt.title('\u015eehirlere G\u00f6re O3 Oran\u0131',color=\"blue\")\nplt.show()","e4015b3f":"sorted_data['area_PM10_ratio'] = sorted_data['area_PM10_ratio']\/max( sorted_data['area_PM10_ratio'])\nsorted_data2['area_SO2_ratio'] = sorted_data2['area_SO2_ratio']\/max( sorted_data2['area_SO2_ratio'])\ndata = pd.concat([sorted_data,sorted_data2[\"area_SO2_ratio\"]],axis=1)\ndata.sort_values('area_PM10_ratio',inplace=True)\n\nf,ax1 = plt.subplots(figsize =(20,10))\nsns.pointplot(x='area_list',y='area_SO2_ratio',data=data,color='black',alpha=0.8)\nsns.pointplot(x='area_list',y='area_PM10_ratio',data=data,color='red',alpha=0.8)\nplt.text(40,0.60,'\u015eehirlere G\u00f6re PM10 Oran\u0131',color='red',fontsize = 17,style = 'italic')\nplt.text(40,0.55,'\u015eehirlere G\u00f6re SO2 Oran\u0131',color='black',fontsize = 18,style = 'italic')\nplt.xticks(rotation= 90)\nplt.xlabel('\u015eehirler',fontsize = 15,color='blue')\nplt.ylabel('De\u011ferler',fontsize = 15,color='blue')\nplt.title('\u015eehirlere G\u00f6re SO2 Oran\u0131  VS  \u015eehirlere G\u00f6re PM10 Oran\u0131',fontsize = 20,color='blue')\nplt.grid()","8a912bcc":"df6.replace([\"-\"],0.0,inplace = True)\ndf6.loc[:,['PM10','SO2','CO','NO2','O3']] = df6.loc[:,['PM10','SO2','CO','NO2','O3']].astype(float)\narea_list = list(df6[\"\u015eehir\"].unique())\nPM10 = []\nSO2 = []\nCO = []\nNO2 = []\nO3 = []\nfor i in area_list:\n    x = df6[df6[\"\u015eehir\"]==i]\n    PM10.append(sum(x.PM10)\/len(x))\n    SO2.append(sum(x.SO2) \/ len(x))\n    CO.append(sum(x.CO) \/ len(x))\n    NO2.append(sum(x.NO2) \/ len(x))\n    O3.append(sum(x.O3) \/ len(x))\n\n# visualization\nf,ax = plt.subplots(figsize = (20,20))\nsns.barplot(x=PM10,y=area_list,color='black',alpha = 0.7,label='PM10' )\nsns.barplot(x=SO2,y=area_list,color='blue',alpha = 0.5,label='SO2')\nsns.barplot(x=CO,y=area_list,color='cyan',alpha = 0.8,label='CO')\nsns.barplot(x=NO2,y=area_list,color='orange',alpha = 0.7,label='NO2')\nsns.barplot(x=O3,y=area_list,color='red',alpha = 0.6,label='O3')\n\nax.legend(loc='upper right',frameon = True)\nax.set(xlabel='De\u011fer', ylabel='\u015eehir',title = \"\u015eehirlerin Hava Kalitesi\")\nplt.show()","0f700d54":"<a id = \"8\"><\/a><br>\n### \u015eehirlere G\u00f6re NO2 Oran\u0131 (\u0130ndex)","916d4032":"---","0cdb7fcf":"[\u0130\u00e7erik Ekran\u0131na Gitmek \u0130\u00e7in T\u0131klay\u0131n](#0)","832c3b19":"<a id = \"3\"><\/a><br>\n### \u015eehirlere G\u00f6re SO2 Oran\u0131 (Values)","26e1e1cd":"[\u0130\u00e7erik Ekran\u0131na Gitmek \u0130\u00e7in T\u0131klay\u0131n](#0)","e3fd72a6":"Partik\u00fcler Madde (PM10-PM2.5): hava\ni\u00e7inde ask\u0131da bulunan partik\u00fcllerin\n\u00e7e\u015fitli ve kompleks kar\u0131\u015f\u0131m\u0131n\u0131 i\u00e7erir.\nPartik\u00fcler madde do\u011fal ve antropojenik\nfaaliyetler sonucu olu\u015fur (Poschl,2005).\nPartik\u00fcler maddenin esas kaynaklar\u0131\nfabrikalar, enerji tesisleri, yakma\ntesisleri, in\u015faat faaliyetleri, yang\u0131nlar ve\nr\u00fczg\u00e2rd\u0131r. Partik\u00fcllerin boyutu\naerodinamik \u00e7aplar\u0131 2,5 \u00b5m\u2019den k\u00fc\u00e7\u00fck\nolanlar PM2,5 ve 10 \u00b5m\u2019den k\u00fc\u00e7\u00fck\nolanlar PM10 olarak tan\u0131mlanmaktad\u0131r.\nBu partik\u00fcller solunum sisteminde\ndepolanabilirler.","73da1533":"---","787ed311":"[\u0130\u00e7erik Ekran\u0131na Gitmek \u0130\u00e7in T\u0131klay\u0131n](#0)","e395c086":"Ozon (O3) : Yer seviyesi ozon (troposferik) kirlili\u011fi\natmosfere do\u011frudan sal\u0131nmamaktad\u0131r. G\u00fcne\u015f \u0131\u015f\u0131\u011f\u0131n\u0131n\netkisiyle, atmosfere sal\u0131nan azot oksitler ve u\u00e7ucu\norganiklerin karma\u015f\u0131k kimyasal tepkimeleri neticesinde\nolu\u015fmaktad\u0131r. Bu sebeple azot oksit ve u\u00e7ucu organik\nkirleticileri ozon \u00f6nc\u00fcl kirleticiler olarak da\ntan\u0131mlanmaktad\u0131r. Azot oksitler ve u\u00e7ucu organik\nkirleticilerinin temel kaynaklar\u0131 olan trafik, \u00e7\u00f6z\u00fcc\u00fc\nkullan\u0131m\u0131 ve sanayi tesisleri dolayl\u0131 olarak yer seviyesi\nozon kirlili\u011fine yol a\u00e7maktad\u0131r.","ad614bc3":"Karbonmonoksit (CO): Renksiz, kokusuz, ve tats\u0131z bir\ngaz olup karbon i\u00e7eren yak\u0131tlar\u0131n eksik yanmas\u0131 ile\nortaya \u00e7\u0131kar. Birincil bir hava kirletici olan\nkarbonmonoksit, oksijen eksikli\u011fi, tutu\u015fma s\u0131cakl\u0131\u011f\u0131,\ny\u00fcksek s\u0131cakl\u0131kta gaz\u0131n kal\u0131c\u0131l\u0131k zaman\u0131 ve yanma odas\u0131\nt\u00fcrb\u00fclans\u0131 gibi etkenlerden birinin eksikli\u011finde tam\nolmayan bir yanma sonucunda CO2 yerine meydana\ngelmektedir.","20f1c880":"[\u0130\u00e7erik Ekran\u0131na Gitmek \u0130\u00e7in T\u0131klay\u0131n](#0)","2604c7f9":"[\u0130\u00e7erik Ekran\u0131na Gitmek \u0130\u00e7in T\u0131klay\u0131n](#0)","bd1fe5f7":"[\u0130\u00e7erik Ekran\u0131na Gitmek \u0130\u00e7in T\u0131klay\u0131n](#0)","cacbe00a":"<a id = \"9\"><\/a><br>\n### \u015eehirlere G\u00f6re O3 Oran\u0131 (Values)","a927c338":"Azot Dioksit (NO2): k\u0131rm\u0131z\u0131ms\u0131 kahverengi ve zehirli bir gazd\u0131r. Keskin bir kokuya sahip olan bu gaz\u0131n kokusu klor gaz\u0131na benzemektedir. Bu gaz N2O4 \u015feklinde gaz haline gelmektedir. Yakla\u015f\u0131k olarak 200 \u00b0C s\u0131cakl\u0131kta NO2 gaz\u0131 NO ve O2 gazlar\u0131na par\u00e7alanmaktad\u0131r. Bunun yan\u0131nda suda \u00e7ok iyi \u00e7\u00f6z\u00fclmektedir ve keskin, \u00f6ks\u00fcr\u00fc\u011fe yol a\u00e7an bir kokusu vard\u0131r.","1ce42728":"<a id = \"11\"><\/a><br>\n### \u015eehirlere G\u00f6re SO2 Oran\u0131 VS \u015eehirlere G\u00f6re PM10 Oran\u0131","15876a70":"<a id = \"5\"><\/a><br>\n### \u015eehirlere G\u00f6re CO Oran\u0131 (Values)","dfd22f2e":"---\n<a id = \"13\"><\/a><br>\n### De\u011ferler \u0130le \u0130lgili Bilgiler","1b92808f":"<a id = \"1\"><\/a><br>\n### \u015eehirlere G\u00f6re PM10 Oran\u0131 (Values)","9194b808":"[\u0130\u00e7erik Ekran\u0131na Gitmek \u0130\u00e7in T\u0131klay\u0131n](#0)","2bff38e7":"<a id = \"7\"><\/a><br>\n### \u015eehirlere G\u00f6re NO2 Oran\u0131 (Values)","216e75d1":"[\u0130\u00e7erik Ekran\u0131na Gitmek \u0130\u00e7in T\u0131klay\u0131n](#0)","34571535":"<a id = \"6\"><\/a><br>\n### \u015eehirlere G\u00f6re CO Oran\u0131 (\u0130ndex)","9578c76f":"---","74742f0a":"---","48034867":"[\u0130\u00e7erik Ekran\u0131na Gitmek \u0130\u00e7in T\u0131klay\u0131n](#0)","03be9642":"<a id = \"12\"><\/a><br>\n### T\u00fcrkiye Hava Kalitesi (T\u00fcm De\u011ferler)","0a905ac0":"<a id = \"0\"><\/a><br>\n<font color = \"blue\">\n\u0130\u00e7erik:\n    \n1. [Giri\u015f](#0)\n1. [De\u011ferler \u0130le \u0130lgili Bilgiler](#13)\n1. [\u015eehirlere G\u00f6re PM10 Oran\u0131 (Values)](#1)\n1. [\u015eehirlere G\u00f6re PM10 Oran\u0131 (\u0130ndex)](#2)\n1. [\u015eehirlere G\u00f6re SO2 Oran\u0131 (Values)](#3)\n1. [\u015eehirlere G\u00f6re SO2 Oran\u0131 (\u0130ndex)](#4)\n1. [\u015eehirlere G\u00f6re CO Oran\u0131 (Values)](#5)\n1. [\u015eehirlere G\u00f6re CO Oran\u0131 (\u0130ndex)](#6)\n1. [\u015eehirlere G\u00f6re NO2 Oran\u0131 (Values)](#7)\n1. [\u015eehirlere G\u00f6re NO2 Oran\u0131 (\u0130ndex)](#8)\n1. [\u015eehirlere G\u00f6re O3 Oran\u0131 (Values)](#9)\n1. [\u015eehirlere G\u00f6re O3 Oran\u0131 (\u0130ndex)](#10)\n1. [\u015eehirlere G\u00f6re SO2 Oran\u0131 VS \u015eehirlere G\u00f6re PM10 Oran\u0131](#11)\n1. [T\u00fcrkiye Hava Kalitesi (T\u00fcm De\u011ferler)](#12)","809627ab":"<a id = \"2\"><\/a><br>\n### \u015eehirlere G\u00f6re PM10 Oran\u0131 (\u0130ndex)","1575ab8d":"---","b9ad7862":"<a id = \"4\"><\/a><br>\n### \u015eehirlere G\u00f6re SO2 Oran\u0131 (\u0130ndex)","b30fa598":"[\u0130\u00e7erik Ekran\u0131na Gitmek \u0130\u00e7in T\u0131klay\u0131n](#0)","2123758d":"---","ddea7548":"[\u0130\u00e7erik Ekran\u0131na Gitmek \u0130\u00e7in T\u0131klay\u0131n](#0)","6bc80e7d":"[\u0130\u00e7erik Ekran\u0131na Gitmek \u0130\u00e7in T\u0131klay\u0131n](#0)","294b8aba":"![unknown.png](attachment:9c9004fe-8c41-4730-89d7-3cf53ffa3567.png)","0d434fa9":"---","2465358a":"<a id = \"0\"><\/a><br>\n# Giri\u015f","a4509893":"K\u00fck\u00fcrt Dioksit (SO2) : Ana kayna\u011f\u0131 k\u00fck\u00fcrt oran\u0131 y\u00fcksek\nya\u011flar\u0131n, k\u00f6m\u00fcr ve linyitin yak\u0131lmas\u0131d\u0131r. SO2 ayr\u0131ca\nk\u00fck\u00fcrt oran\u0131 y\u00fcksek bronz ve tun\u00e7un eritilmesiyle\nortaya \u00e7\u0131k\u0131yor. SO2 parametresi s\u0131ras\u0131 ile \u0131s\u0131nma, sanayi\nve trafik b\u00f6lgeleri ile olu\u015fan bir kirleticidir.","8bc5ec83":"<a id = \"10\"><\/a><br>\n### \u015eehirlere G\u00f6re O3 Oran\u0131 (\u0130ndex)","54329244":"---"}}