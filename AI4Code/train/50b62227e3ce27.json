{"cell_type":{"064f1f82":"code","abf78779":"code","ca950f5f":"code","d88df269":"code","7d6fc597":"code","2af19355":"code","a8df2130":"code","16b7644e":"code","bc34a0e5":"code","4a03c8c8":"code","206af958":"code","45efd125":"code","71f157bd":"code","60cfe7f3":"code","74fc60bf":"code","16b76978":"code","c577ecd5":"code","7503bb73":"code","c65df6bf":"code","a7c6445f":"code","99c9efd2":"code","5844135e":"code","99b58593":"code","0e22b7ac":"code","d1b99f92":"code","689a0de1":"code","3c318b37":"code","f5a8f458":"code","427cb728":"code","ce460cfa":"code","5862c8bf":"code","f18bafe5":"code","4b1e6d5a":"code","670e582a":"code","16a3095d":"code","91588f9e":"code","62f09c3e":"code","bbf6e80c":"code","6f2649f5":"code","bee3f55e":"code","13cf8d1d":"code","a0b1326c":"code","bc8cd284":"code","110b9496":"code","0b73cf1f":"code","dfe63c03":"code","c8fb98ba":"code","e047a0b6":"code","fcb114bb":"code","7cceaab4":"code","421064a0":"code","17e7f284":"code","fc34f8f2":"code","d8c9e8c5":"code","e0c1eaec":"code","f16a5178":"code","9c1f7ebe":"code","a25799f3":"code","7b8f477e":"code","8df7dd49":"code","43f3c011":"code","1d6befff":"code","35d2744f":"code","2b8ac259":"code","1079d33c":"code","a7fa69d7":"code","91cdfdac":"code","7461e412":"code","0c624ad2":"code","ea81c41f":"code","a66cadca":"code","a3514e63":"code","ce0245eb":"code","88ad7d01":"code","211d7886":"code","737dbdff":"code","f5b55582":"code","731ce41f":"code","e124b5b7":"code","6d20791f":"code","d1407715":"code","6e4cea7a":"code","316fa5c6":"code","033cdb5a":"code","a9867d77":"code","a05b2dc7":"code","bd3a5442":"code","0defaa2e":"code","09efc390":"code","c1bd4070":"code","be105c58":"code","c7c63208":"code","ab02955a":"code","1360bbbf":"code","059f69ed":"code","5f3b5453":"code","bab0c28b":"code","ea6522dd":"code","a899a503":"code","b15e9b29":"code","1ab66c9b":"code","85521bee":"code","8afbe9cc":"code","e3fa486a":"code","f08ef0bc":"code","bfc1ac88":"code","e250e9f7":"code","2d352d5a":"code","7818b95b":"code","3c24ee58":"code","b91af5cb":"code","624aea01":"markdown","b59bc94b":"markdown","682bf440":"markdown","b27ff3c5":"markdown","5ea655ff":"markdown","96c5a41c":"markdown","60ab7fcc":"markdown","b69db7cc":"markdown","be6dcf4d":"markdown","49803fd4":"markdown","6fd32bdc":"markdown","c8b505d9":"markdown","ef540ef1":"markdown","ef57ba85":"markdown","2fa066f4":"markdown","3f7466e4":"markdown","02b6f06b":"markdown","93c3682a":"markdown","5189366e":"markdown","c3ffcf55":"markdown","230c1443":"markdown"},"source":{"064f1f82":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nfrom plotly.offline import download_plotlyjs,init_notebook_mode,iplot,plot\ninit_notebook_mode(connected=True)\n","abf78779":"cfl=pd.read_csv('..\/input\/car-consume\/measurements.csv')\n","ca950f5f":"cfl['distance']=cfl['distance'].str.replace(',','.').astype(float)\ncfl['consume']=cfl['consume'].str.replace(',','.').astype(float)\ncfl['temp_inside']=cfl['temp_inside'].str.replace(',','.').astype(float)\ncfl","d88df269":"cfl.info()","7d6fc597":"cfl=cfl.drop(['specials','refill liters','refill gas'],axis=1)\ncfl","2af19355":"cfl.info()","a8df2130":"cfl['temp_inside']=cfl['temp_inside'].fillna(16.0)\n","16b7644e":"cfl.describe()","bc34a0e5":"sns.pairplot(cfl)\nplt.show()","4a03c8c8":"cfl['speed'].plot.hist()\nplt.show()","206af958":"cfl['distance'].plot.hist()\nplt.show()","45efd125":"sns.countplot(cfl['AC'])\nplt.show()","71f157bd":"maxd=cfl.query('distance==216.100000')\nmaxd","60cfe7f3":"sns.lmplot('distance','consume',data=maxd)\nplt.show()","74fc60bf":"mind=cfl.query('distance==1.300000')\nmind","16b76978":"sns.lmplot('distance','consume',data=mind)\nplt.show()","c577ecd5":"maxs=cfl.query('speed==90.000000')\nmaxs","7503bb73":"sns.lmplot('distance','consume',data=maxs)\nplt.show()","c65df6bf":"mins=cfl.query('speed==14.000000')\nmins","a7c6445f":"sns.lmplot('distance','consume',data=mins)\nplt.show()","99c9efd2":"minr=cfl.query('rain==0.000000')\nminr","5844135e":"sns.lmplot('distance','consume',data=minr)\nplt.show()","99b58593":"maxr=cfl.query('rain==1.000000')\nmaxr","0e22b7ac":"sns.lmplot('distance','consume',data=maxr)\nplt.show()","d1b99f92":"minsn=cfl.query('sun==0.000000')\nminsn","689a0de1":"sns.lmplot('distance','consume',data=minsn)\nplt.show()","3c318b37":"minsn=cfl.query('sun==1.000000')\nminsn","f5a8f458":"sns.lmplot('distance','consume',data=minsn)\nplt.show()","427cb728":"minac=cfl.query('AC==0.000000')\nminac","ce460cfa":"sns.lmplot('distance','consume',data=minac)\nplt.show()","5862c8bf":"maxac=cfl.query('AC==1.000000')\nmaxac","f18bafe5":"sns.lmplot('distance','consume',data=maxac)\nplt.show()","4b1e6d5a":"sns.countplot(cfl['gas_type'])\nplt.show()","670e582a":"gas1=cfl[cfl['gas_type']=='E10']\ngas1","16a3095d":"gas1.describe()","91588f9e":"gas1mnd=gas1.query('distance==1.700000')\ngas1mnd","62f09c3e":"sns.lmplot('distance','consume',data=gas1mnd)\nplt.show()","bbf6e80c":"gas1mxd=gas1.query('distance==130.300000')\ngas1mxd","6f2649f5":"sns.lmplot('distance','consume',data=gas1mxd)\nplt.show()","bee3f55e":"gas1mxs=gas1.query('speed==88.000000')\ngas1mxs","13cf8d1d":"sns.lmplot('speed','consume',data=gas1mxs)\nplt.show()","a0b1326c":"gas1mns=gas1.query('speed==14.000000')\ngas1mns","bc8cd284":"sns.lmplot('speed','consume',data=gas1mns)\nplt.show()","110b9496":"gas2=cfl[cfl['gas_type']=='SP98']\ngas2","0b73cf1f":"gas2.describe()","dfe63c03":"gas2mnd=gas2.query('distance==1.300000')\ngas2mnd","c8fb98ba":"sns.lmplot('distance','consume',data=gas2mnd)\nplt.show()","e047a0b6":"gas2mxd=gas2.query('distance==216.100000')\ngas2mxd","fcb114bb":"sns.lmplot('distance','consume',data=gas2mxd)\nplt.show()","7cceaab4":"gas2mxs=gas2.query('speed==90.000000')\ngas2mxs","421064a0":"sns.lmplot('speed','consume',data=gas2mxs)\nplt.show()","17e7f284":"gas2mns=gas2.query('speed==16.000000')\ngas2mns","fc34f8f2":"sns.lmplot('speed','consume',data=gas2mns)\nplt.show()","d8c9e8c5":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\ncfl['gas_type']=le.fit_transform(cfl['gas_type'])\n","e0c1eaec":"cfl['distance']=cfl['distance'].astype(int)\ncfl['consume']=cfl['consume'].astype(int)\ncfl['temp_inside']=cfl['temp_inside'].astype(int)","f16a5178":"x=cfl.drop(['consume','AC'],axis=1)\n\ny=cfl['consume']\n\nx","9c1f7ebe":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=.40,random_state=43)","a25799f3":"from sklearn.preprocessing import StandardScaler\nss=StandardScaler()\nx_trainst=ss.fit_transform(x_train)\nx_testst=ss.transform(x_test)","7b8f477e":"from sklearn.preprocessing import MinMaxScaler\nmms=MinMaxScaler()\nx_trainmn=mms.fit_transform(x_train)\nx_testmn= mms.transform(x_test)","8df7dd49":"from sklearn.decomposition import PCA\npc=PCA(n_components=4)\nx_trainpca=pc.fit_transform(x_train)\nx_testpca=pc.transform(x_test)","43f3c011":"from sklearn.tree import DecisionTreeRegressor\ndt1=DecisionTreeRegressor(criterion='mse',splitter='best',max_depth=3,random_state=72)\ndt1.fit(x_train,y_train)\npy1=dt1.predict(x_test)\n","1d6befff":"from sklearn import metrics\nimport numpy as np\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt\nprint('Root Mean Squared Error(RMSE):', np.sqrt(metrics.mean_squared_error(y_test, py1)))\nprint('Mean Absolute Error(MAE):', metrics.mean_absolute_error(y_test, py1))\nprint('Mean Squared Error(MSE):', metrics.mean_squared_error(y_test, py1))\n","35d2744f":"plt.scatter(y_test,py1)\nplt.xlabel('y_test(True Values)')\nplt.ylabel('py')\nplt.show()","2b8ac259":"sns.distplot((y_test-py1),bins=50)\nplt.show()","1079d33c":"ftr=['distance','speed','gas_type','rain','temp_inside','temp_outsid','sun']\n\nfrom sklearn.tree import export_graphviz\nexport_graphviz(dt1,out_file=\"tree.dot\",feature_names=ftr,rounded=True,filled=True)\nfrom subprocess import call\ncall(['dot','-Tpng','tree.dot','-o','tree1.png','-Gdpi=600'])\n\nfrom IPython.display import Image\nImage(filename='tree1.png')","a7fa69d7":"from sklearn.tree import DecisionTreeRegressor\ndt2=DecisionTreeRegressor(criterion='mse',splitter='best',max_depth=3,random_state=72)\ndt2.fit(x_trainst,y_train)\npy2=dt2.predict(x_testst)\n","91cdfdac":"from sklearn import metrics\nimport numpy as np\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt\nprint('Root Mean Squared Error(RMSE):', np.sqrt(metrics.mean_squared_error(y_test, py2)))\nprint('Mean Absolute Error(MAE):', metrics.mean_absolute_error(y_test, py2))\nprint('Mean Squared Error(MSE):', metrics.mean_squared_error(y_test, py2))\n","7461e412":"plt.scatter(y_test,py2)\nplt.xlabel('y_test(True Values)')\nplt.ylabel('py')\nplt.show()","0c624ad2":"sns.distplot((y_test-py2),bins=50)\nplt.show()","ea81c41f":"ftr=['distance','speed','gas_type','rain','temp_inside','temp_outsid','sun']\n\nfrom sklearn.tree import export_graphviz\nexport_graphviz(dt2,out_file=\"tree.dot\",feature_names=ftr,rounded=True,filled=True)\nfrom subprocess import call\ncall(['dot','-Tpng','tree.dot','-o','tree2.png','-Gdpi=600'])\n\nfrom IPython.display import Image\nImage(filename='tree2.png')","a66cadca":"from sklearn.tree import DecisionTreeRegressor\ndt3=DecisionTreeRegressor(criterion='mse',splitter='best',max_depth=3,random_state=72)\ndt3.fit(x_trainmn,y_train)\npy3=dt3.predict(x_testmn)\n","a3514e63":"from sklearn import metrics\nimport numpy as np\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt\nprint('Root Mean Squared Error(RMSE):', np.sqrt(metrics.mean_squared_error(y_test, py3)))\nprint('Mean Absolute Error(MAE):', metrics.mean_absolute_error(y_test, py3))\nprint('Mean Squared Error(MSE):', metrics.mean_squared_error(y_test, py3))\n","ce0245eb":"plt.scatter(y_test,py3)\nplt.xlabel('y_test(True Values)')\nplt.ylabel('py')\nplt.show()","88ad7d01":"sns.distplot((y_test-py3),bins=50)\nplt.show()","211d7886":"ftr=['distance','speed','gas_type','rain','temp_inside','temp_outsid','sun']\n\nfrom sklearn.tree import export_graphviz\nexport_graphviz(dt3,out_file=\"tree.dot\",feature_names=ftr,rounded=True,filled=True)\nfrom subprocess import call\ncall(['dot','-Tpng','tree.dot','-o','tree3.png','-Gdpi=600'])\n\nfrom IPython.display import Image\nImage(filename='tree3.png')","737dbdff":"from sklearn.tree import DecisionTreeRegressor\ndt4=DecisionTreeRegressor(criterion='mse',splitter='best',max_depth=3,random_state=72)\ndt4.fit(x_trainpca,y_train)\npy4=dt4.predict(x_testpca)\n","f5b55582":"from sklearn import metrics\nimport numpy as np\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt\nprint('Root Mean Squared Error(RMSE):', np.sqrt(metrics.mean_squared_error(y_test, py4)))\nprint('Mean Absolute Error(MAE):', metrics.mean_absolute_error(y_test, py4))\nprint('Mean Squared Error(MSE):', metrics.mean_squared_error(y_test, py4))\n","731ce41f":"plt.scatter(y_test,py4)\nplt.xlabel('y_test(True Values)')\nplt.ylabel('py')\nplt.show()","e124b5b7":"sns.distplot((y_test-py4),bins=50)\nplt.show()","6d20791f":"ftrpc=['distance','speed','gas_type','rain']\n\nfrom sklearn.tree import export_graphviz\nexport_graphviz(dt4,out_file=\"tree.dot\",feature_names=ftrpc,rounded=True,filled=True)\nfrom subprocess import call\ncall(['dot','-Tpng','tree.dot','-o','tree4.png','-Gdpi=600'])\n\nfrom IPython.display import Image\nImage(filename='tree4.png')","d1407715":"from sklearn.ensemble import RandomForestRegressor\nmd5=RandomForestRegressor(n_estimators='warn',criterion='mse', random_state=44, max_depth=3)\nmd5.fit(x_train,y_train)\npy5=md5.predict(x_test)\n","6e4cea7a":"print('Root Mean Squared Error(RMSE):', np.sqrt(metrics.mean_squared_error(y_test, py5)))\nprint('Mean Absolute Error(MAE):', metrics.mean_absolute_error(y_test, py5))\nprint('Mean Squared Error(MSE):', metrics.mean_squared_error(y_test, py5))","316fa5c6":"plt.scatter(y_test,py5)\nplt.xlabel('y_test(True Values)')\nplt.ylabel('py5')\nplt.show()","033cdb5a":"sns.distplot((y_test-py5),bins=50)\nplt.show()","a9867d77":"tree = md5.estimators_[5]\nfrom sklearn.tree import export_graphviz\nimport pydot\nexport_graphviz(tree, out_file = 'tree.dot', feature_names = ftr, rounded = True, precision = 1,filled=True)\n(graph,) = pydot.graph_from_dot_file('tree.dot')\ngraph.write_png('tree5.png')\nimport matplotlib.image as mpimg\nplt.imshow(mpimg.imread('tree5.png'))\nplt.show()","a05b2dc7":"from sklearn.ensemble import RandomForestRegressor\nmd6=RandomForestRegressor(n_estimators='warn',criterion='mse', random_state=44, max_depth=3)\nmd6.fit(x_trainst,y_train)\npy6=md6.predict(x_testst)\n\nprint('Root Mean Squared Error(RMSE):', np.sqrt(metrics.mean_squared_error(y_test, py6)))\nprint('Mean Absolute Error(MAE):', metrics.mean_absolute_error(y_test, py6))\nprint('Mean Squared Error(MSE):', metrics.mean_squared_error(y_test, py6))","bd3a5442":"plt.scatter(y_test,py6)\nplt.xlabel('y_test(True Values)')\nplt.ylabel('py6')\nplt.show()\n","0defaa2e":"sns.distplot((y_test-py6),bins=50)\nplt.show()","09efc390":"tree = md6.estimators_[5]\nfrom sklearn.tree import export_graphviz\nimport pydot\nexport_graphviz(tree, out_file = 'tree.dot', feature_names = ftr, rounded = True, precision = 1,filled=True)\n(graph,) = pydot.graph_from_dot_file('tree.dot')\ngraph.write_png('tree6.png')\nimport matplotlib.image as mpimg\nplt.imshow(mpimg.imread('tree6.png'))\nplt.show()","c1bd4070":"from sklearn.ensemble import RandomForestRegressor\nmd7=RandomForestRegressor(n_estimators='warn',criterion='mse', random_state=44, max_depth=3)\nmd7.fit(x_trainmn,y_train)\npy7=md7.predict(x_testmn)\n\nprint('Root Mean Squared Error(RMSE):', np.sqrt(metrics.mean_squared_error(y_test, py7)))\nprint('Mean Absolute Error(MAE):', metrics.mean_absolute_error(y_test, py7))\nprint('Mean Squared Error(MSE):', metrics.mean_squared_error(y_test, py7))","be105c58":"plt.scatter(y_test,py7)\nplt.xlabel('y_test(True Values)')\nplt.ylabel('py7')\nplt.show()\n","c7c63208":"sns.distplot((y_test-py7),bins=50)\nplt.show()","ab02955a":"tree = md7.estimators_[5]\nfrom sklearn.tree import export_graphviz\nimport pydot\nexport_graphviz(tree, out_file = 'tree.dot', feature_names = ftr, rounded = True, precision = 1,filled=True)\n(graph,) = pydot.graph_from_dot_file('tree.dot')\ngraph.write_png('tree7.png')\nimport matplotlib.image as mpimg\nplt.imshow(mpimg.imread('tree7.png'))\nplt.show()","1360bbbf":"from sklearn.ensemble import RandomForestRegressor\nmd8=RandomForestRegressor(n_estimators='warn',criterion='mse', random_state=44, max_depth=3)\nmd8.fit(x_trainpca,y_train)\npy8=md8.predict(x_testpca)\n\nprint('Root Mean Squared Error(RMSE):', np.sqrt(metrics.mean_squared_error(y_test, py8)))\nprint('Mean Absolute Error(MAE):', metrics.mean_absolute_error(y_test, py8))\nprint('Mean Squared Error(MSE):', metrics.mean_squared_error(y_test, py8))","059f69ed":"plt.scatter(y_test,py8)\nplt.xlabel('y_test(True Values)')\nplt.ylabel('py8')\nplt.show()\n","5f3b5453":"sns.distplot((y_test-py8),bins=50)\nplt.show()","bab0c28b":"tree = md8.estimators_[5]\nfrom sklearn.tree import export_graphviz\nimport pydot\nexport_graphviz(tree, out_file = 'tree.dot', feature_names = ftrpc, rounded = True, precision = 1,filled=True)\n(graph,) = pydot.graph_from_dot_file('tree.dot')\ngraph.write_png('tree8.png')\nimport matplotlib.image as mpimg\nplt.imshow(mpimg.imread('tree8.png'))\nplt.show()","ea6522dd":"from sklearn.linear_model import LinearRegression\nlnr=LinearRegression()\nlnr.fit(x_train,y_train)\npy9=lnr.predict(x_test)\n","a899a503":"print('Root Mean Squared Error(RMSE):', np.sqrt(metrics.mean_squared_error(y_test, py9)))\nprint('Mean Absolute Error(MAE):', metrics.mean_absolute_error(y_test, py9))\nprint('Mean Squared Error(MSE):', metrics.mean_squared_error(y_test, py9))","b15e9b29":"plt.scatter(y_test,py9)\nplt.xlabel('y_test(True Values)')\nplt.ylabel('py')\nplt.show()","1ab66c9b":"print('Variation Score:',metrics.explained_variance_score(y_test,py9))","85521bee":"sns.distplot((y_test-py9),bins=50)\nplt.show()","8afbe9cc":"from sklearn.linear_model import LinearRegression\nlnr=LinearRegression()\nlnr.fit(x_trainst,y_train)\npy10=lnr.predict(x_testst)\nprint('Root Mean Squared Error(RMSE):', np.sqrt(metrics.mean_squared_error(y_test, py10)))\nprint('Mean Absolute Error(MAE):', metrics.mean_absolute_error(y_test, py10))\nprint('Mean Squared Error(MSE):', metrics.mean_squared_error(y_test, py10))","e3fa486a":"plt.scatter(y_test,py10)\nplt.xlabel('y_test(True Values)')\nplt.ylabel('py')\nplt.show()","f08ef0bc":"sns.distplot((y_test-py10),bins=50)\nplt.show()","bfc1ac88":"from sklearn.linear_model import LinearRegression\nlnr=LinearRegression()\nlnr.fit(x_trainmn,y_train)\npy11=lnr.predict(x_testmn)\nprint('Root Mean Squared Error(RMSE):', np.sqrt(metrics.mean_squared_error(y_test, py11)))\nprint('Mean Absolute Error(MAE):', metrics.mean_absolute_error(y_test, py11))\nprint('Mean Squared Error(MSE):', metrics.mean_squared_error(y_test, py11))","e250e9f7":"plt.scatter(y_test,py10)\nplt.xlabel('y_test(True Values)')\nplt.ylabel('py')\nplt.show()","2d352d5a":"sns.distplot((y_test-py10),bins=50)\nplt.show()","7818b95b":"from sklearn.linear_model import LinearRegression\nlnr=LinearRegression()\nlnr.fit(x_trainpca,y_train)\npy12=lnr.predict(x_testpca)\nprint('Root Mean Squared Error(RMSE):', np.sqrt(metrics.mean_squared_error(y_test, py12)))\nprint('Mean Absolute Error(MAE):', metrics.mean_absolute_error(y_test, py12))\nprint('Mean Squared Error(MSE):', metrics.mean_squared_error(y_test, py12))","3c24ee58":"plt.scatter(y_test,py12)\nplt.xlabel('y_test(True Values)')\nplt.ylabel('py')\nplt.show()","b91af5cb":"sns.distplot((y_test-py12),bins=50)\nplt.show()","624aea01":"## gas2 consume by minimum speed","b59bc94b":"## gas1 consume by minimum speed","682bf440":"## Fuel consumption acc to minimum speed","b27ff3c5":"##  Minimum fuel Consumption in sunny days","5ea655ff":"## Fuel consumption acc to maximum distance travel","96c5a41c":"## Maximum fuel consumption in rainy days","60ab7fcc":"## Minumum fuel consume with AC","b69db7cc":"## gas2 consume by maximum speed","be6dcf4d":"## Minimum distance cover by gas2","49803fd4":"## Maximum fuel consumption in sunny days","6fd32bdc":"## Maximum distance travel by gas1","c8b505d9":"## Maximum distance cover by gas2","ef540ef1":"## gas1 consume by max speed","ef57ba85":"## Decision-making\n","2fa066f4":"## Fuel consumption acc to  AC ","3f7466e4":"## Minimum distance travel by gas 1","02b6f06b":"## The different gas type used by the user","93c3682a":"## Maximum fuel consumption with AC","5189366e":"##\u00a0Minimum fuel consumption in rainy days","c3ffcf55":"## Fuel Consumption acc to maximum speed","230c1443":"## Fuel consumption acc to minimum distance travel"}}