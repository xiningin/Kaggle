{"cell_type":{"6824dcfd":"code","3e8efb48":"code","59c907d0":"code","deb6c7e0":"code","ef8fb23a":"code","96375d6b":"code","ba8545a1":"code","9aed8eec":"code","f49115cc":"code","42c2f8cd":"code","678fa5e3":"code","97921045":"code","da20fa1a":"code","e2b1b8fb":"code","f8c07b88":"code","01d4938f":"code","17770cf7":"code","6460f8ce":"markdown","178b3976":"markdown"},"source":{"6824dcfd":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport tensorflow as tf","3e8efb48":"data = pd.read_csv('..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv')\n","59c907d0":"data.columns\n\n# \uac01 \uce7c\ub7fc\uc5d0 \ub300\ud55c \uc815\ubcf4 \uac1c\uc694\n# id ~ \uadf8\ub0e5 ID \ud544\uc694\ud55c\uac00?\n# genger ~ \uc131\ubcc4\n# age ~ \ub098\uc774\n# hypertension ~ \uace0\ud608\uc555 \uc720\ubb34 \n# heart_disease ~ \uc2ec\uc7a5\ubcd1\n# ever_married ~ \uacb0\ud63c \uc720\ubb34 ever_married \uacb0\ud63c \uc720\ubb34 ~ yes or no \uc778\ub370 1,0\uc73c\ub85c \ubc14\uafc0 \ud544\uc694\n# work_type ~ \ucd1d \ub2e4\uc12f\uac1c\n# residenc_type ~ \uc8fc\uac70\uc9c0\uc5ed, \ub3c4\uc2dc or \uad50\uc678\n# avg_glucose_level ~ \ud608\ub2f9\n# bmi ~ bmi\n# smoking_status ~ \ud761\uc5f0\uc720\ubb34 , \ucd1d \ub124\uac1c\n\n# stroke ~ \uace0\ud608\uc555 \uc720\ubb34 ~ \uacb0\uacfc","deb6c7e0":"print(data.shape[0]-data.count())\n\ndata.shape\n\n# \ucd1d 5110\uc5d0 \uad00\ud55c \ub370\uc774\ud130, \ub204\ub77d\uac12\uc740 bmi\uc5d0\uc11c 201\uac1c ~ \uadf8\ub0e5 \ub4dc\ub78d\ud558\uc790  \n\ndata = data.dropna(axis = False)\n\ndata.shape","ef8fb23a":"# \uc131\ubcc4\uc5d0 \uad00\ud558\uc5ec\n\ndata['gender'].value_counts()\n\n# other\uc5d0 \ub300\ud558\uc5ec \ud559\uc2b5\uc5d0 \ubc29\ud574\uac00 \ub420 \uac00\ub2a5\uc131 \uc788\uc74c, \uc0ad\uc81c \ud544\uc694\n\ndrop = data.loc[data['gender'] == 'Other'].index # \uc870\uac74\uc73c\ub85c \ub098\uc624\ub294 \ud589\uc758  \uc778\ub371\uc2a4\ub97c \uc800\uc7a5\n\ndata = data.drop(drop) # \uadf8\ub300\ub85c drop\ud568\uc218\uc5d0 \uc9c0\uc815\ud574\uc11c \ud574\ub2f9 \uc778\ub371\uc2a4 \uc0ad\uc81c\n\nprint(data['gender'].value_counts()) \nprint(data['stroke'].groupby(data['gender']).mean())\n# \uc131\ubcc4\uc758 \ubd84\ud3ec\ub294 \uc5ec\uc131\ucabd\uc774 \ub354 \ub9ce\uc9c0\ub9cc \ub1cc\uc878\uc99d \ubc1c\ubcd1\uc740 \ub0a8\uc790\uac00 \ub354 \ub9ce\ub2e4. ~ \ud559\uc2b5\uc5d0 \uc720\uc758\ubbf8","96375d6b":"# \ub098\uc774\uc5d0 \uad00\ud558\uc5ec\n\nprint(data['age'].min(), data['age'].max()) # \uac01 \ucd5c\uc18c \ucd5c\ub300\uac12\n\ndata['age'].groupby(data['stroke']).mean()\n# \ub1cc\uc878\uc99d \ud658\uc790\uc758 \ud3c9\uade0 \ub098\uc774\uac00 \ub354 \ub9ce\uc74c","ba8545a1":"# \uace0\ud608\uc555\uc5d0 \ub300\ud558\uc5ec\n\ndata['stroke'].groupby(data['hypertension']).mean() # \uace0\ud608\uc555\uc774 \uc5c6\uc744\uacbd\uc6b0\uc758 \ub1cc\uc878\uc99d \ud655\ub960 0.03 \uace0\ud608\uc555 \uc787\uc744\uacbd\uc6b0 0.13\ndata['hypertension'].groupby(data['stroke']).mean() # \ub1cc\uc878\uc99d\uc774 \uc5c6\uc744\uacbd\uc6b0\uc758 \uace0\ud608\uc555 \ud655\ub960 0.08 \ub1cc\uc878\uc99d \uc787\uc744\uacbd\uc6b0 0.28\n\n# \uace0\ud608\uc555\uc774 \uc788\uc744\uacbd\uc6b0 \uc880 \ub354 \ub9ce\uc74c","9aed8eec":"#  \uc2ec\uc7a5\ubcd1\uc5d0 \ub300\ud558\uc5ec\n\ndata['stroke'].groupby(data['heart_disease']).mean() #\uc2ec\uc7a5\ubcd1\uc774 \uc5c6\uc744\uacbd\uc6b0\uc758 \ub1cc\uc878\uc99d \ud655\ub960 0.03 \uc2ec\uc7a5\ubcd1 \uc787\uc744\uacbd\uc6b0 0.16\ndata['heart_disease'].groupby(data['stroke']).mean() #\ub1cc\uc878\uc99d\uc774 \uc5c6\uc744\uacbd\uc6b0\uc758 \uc2ec\uc7a5\ubcd1 \ud655\ub960 0.04 \ub1cc\uc878\uc99d \uc787\uc744\uacbd\uc6b0 0.19\n\n# \ud06c\uac8c \uc601\ud5a5\uc774 \uc787\ub294\uac00?\n\n# \uc9c0\ubcd1\uc5d0 \ub300\ud574 \ud06c\uac8c \uc601\ud5a5\uc774 \uc5c6\ub2e4\uace0 \ud310\ub2e8, \uadf8\ub7ec\ub098 \uc544\uc8fc \ubabb\uc4f8 \uc694\uc18c\ub294 \uc544\ub2cc\ub4ef... .\uc0c1\uc2dd\uc120\uc5d0\uc11c\uc11c \uc2ec\uc7a5\ubcd1\uc5d0 \ub300\ud558\uc5ec\n\ndata['stroke'].groupby(data['heart_disease']).mean() #\uc2ec\uc7a5\ubcd1\uc774 \uc5c6\uc744\uacbd\uc6b0\uc758 \ub1cc\uc878\uc99d \ud655\ub960 0.03 \uc2ec\uc7a5\ubcd1 \uc787\uc744\uacbd\uc6b0 0.16\ndata['heart_disease'].groupby(data['stroke']).mean() #\ub1cc\uc878\uc99d\uc774 \uc5c6\uc744\uacbd\uc6b0\uc758 \uc2ec\uc7a5\ubcd1 \ud655\ub960 0.04 \ub1cc\uc878\uc99d \uc787\uc744\uacbd\uc6b0 0.19\n\n# \ud06c\uac8c \uc601\ud5a5\uc774 \uc787\ub294\uac00?\n\n# \uc9c0\ubcd1\uc5d0 \ub300\ud574 \ud06c\uac8c \uc601\ud5a5\uc774 \uc5c6\ub2e4\uace0 \ud310\ub2e8, \uadf8\ub7ec\ub098 \uc544\uc8fc \ubabb\uc4f8 \uc694\uc18c\ub294 \uc544\ub2cc\ub4ef... .\uc0c1\uc2dd\uc120\uc5d0\uc11c\uc11c","f49115cc":"# \uacb0\ud63c \uc720\ubb34\uc5d0 \ub300\ud558\uc5ec ~ yes\ub97c 1\ub85c no\ub97c 0\uc73c\ub85c \ubc14\uafc0 \ud544\uc694\n\nmarry = {'Yes': 1, 'No': 0}\n \ndata['ever_married'] = data['ever_married'].replace(marry)\n\ndata['ever_married'].groupby(data['stroke']).mean() \n# \uacb0\ud63c\uc744 \ud55c \uc0ac\ub78c\uc758 \ub1cc\uc878\uc99d \ubc1c\ubcd1\uc774 \ub354 \ub9ce\uc74c","42c2f8cd":"# \uc77c\ud558\ub294 \uc9c1\uc885\uc5d0 \ub300\ud558\uc5ec\n\ndata['work_type'].value_counts()\n\ndata['stroke'].groupby(data['work_type']).mean()\n\n# \uadf8\ub098\ub9c8 \uc720\uc758\ubbf8\ud558\uac8c \uc218\uce58\uac00 \ube44\uad50\ub418\ub294 \ub4ef? ","678fa5e3":"# \uc8fc\uac70\uc9c0\uc5ed\uc5d0 \ub300\ud558\uc5ec\n\ndata['Residence_type'].value_counts()\n\ndata['stroke'].groupby(data['Residence_type']).mean()\n\n# \uc758\ubbf8\uac00 \uac70\uc758 \uc5c6\ub098?","97921045":"# \ud608\ub2f9\uc5d0 \ub300\ud558\uc5ec\n\ndata['avg_glucose_level']\n\ndata['avg_glucose_level'].groupby(data['stroke']).mean()\n\n# \ub1cc\uc878\uc99d \ud658\uc790\uc758 \ud608\ub2f9\uc774 \uc720\uc758\ubbf8\ud558\uac8c \ub192\uc74c\uc74c","da20fa1a":"# bmi\uc5d0 \ub300\ud558\uc5ec\n\ndata['bmi']\n\ndata['bmi'].groupby(data['stroke']).mean()\n# \uadfc\uc18c\ud558\uac8c \ub1cc\uc878\uc99d \ud658\uc790\uc758 bmi\uac00 \ub192\uc74c","e2b1b8fb":"# \ud761\uc5f0\uc5d0 \ub300\ud558\uc5ec\n\ndata['smoking_status']\n\nprint(data['stroke'].groupby(data['smoking_status']).mean())\n\n# \uc758\uc678\uc758 \uacb0\uacfc,,, \uae08\uc5f0\uc790\uc758 \ud655\ub960\uc774 \ub354 \ub192\ub2e4\n\n\n# \ub1cc\uc878\uc99d \ud658\uc790\uc640 \uadf8\ub807\uc9c0 \uc54a\uc740 \uc790\ub4e4\uc758 \ud761\uc5f0 \ube44\uc728\uc744 \ud55c\ubc88 \uc0b4\ud3b4\ubcf4\uc790,, \ub370\uc774\ud130\uc5d0 \ub300\ud55c \uacb0\uacfc\uac00 \uc880 \ubbff\uc74c\uc9c1 \uc2a4\ub7fd\uc9c0 \ubabb\ud574\uc11c\n\nsample = data['stroke']==1\nprint(data[sample].groupby(data['smoking_status']).count())\n\nsample1 = data['stroke'] ==0\nprint(data[sample1].groupby(data['smoking_status']).count())\n\n# \uc5b4\uca0b\ub4e0 \ube44\uc728\uc774 \uc774\uc0c1\ud55c\uac74 \uc544\ub2cc\ub4ef\ud558\ub2e4","f8c07b88":"y_data = data[['stroke']]\nx_data = data.drop('stroke', axis=1) \n# \ud559\uc2b5\ub370\uc774\ud130\uc640 \uacb0\uacfc \ub370\uc774\ud130 \ub098\ub204\uae30\n\n\n# \uc6d0\ud56b\uc778\ucf54\ub529 ~ \uc6cc\ud06c\ud0c0\uc785, \uc0ac\ub294 \uacf3, \ud761\uc5f0\uc720\ubb34\uac00 \uc6d0\ud56b\uc778\ucf54\ub529 \ud544\uc694\nx_data = pd.get_dummies(x_data, columns = ['work_type'])\nx_data = pd.get_dummies(x_data, columns = ['Residence_type'])\nx_data = pd.get_dummies(x_data, columns=['smoking_status'])\nx_data = pd.get_dummies(x_data, columns=['gender'])\nprint(x_data.shape, y_data.shape)\n\nx_data.dtypes","01d4938f":"X = tf.keras.layers.Input(shape=[20]) #\uc885\uc18d\ubcc0\uc218\uac00 19\uac1c\nH = tf.keras.layers.Dense(15, activation='swish')(X)\nH = tf.keras.layers.Dense(7, activation='swish')(H)\nH = tf.keras.layers.Dense(4, activation='swish')(H)\nY = tf.keras.layers.Dense(1, activation='sigmoid')(H) #\uacb0\uacfc\ub294 \ub2e8 \ud558\ub098\n\nmodel = tf.keras.Model(X,Y)\n\nmodel.compile(loss='mse', optimizer='adam' ,metrics='accuracy')\n\n# \ubaa8\ub378 \uad6c\uc131, \uc6b0\uc120\uc740 \ud0c0\uc774\ud0c0\ub2c9 \ub54c \ubaa8\ub378\uc744 \uadf8\ub300\ub85c \uac00\uc838\uc624\uae30","17770cf7":"model.fit(x_data, y_data, epochs=100, verbose=1)","6460f8ce":"\ud559\uc2b5\uc5d0 \uace0\ub824\ub420 \ub370\uc774\ud130 \ubc0f EDA","178b3976":"\uacb0\uad6d \ubaa8\ub4e0 \uc694\uc18c\ub97c \ud559\uc2b5\uc5d0 \uc774\uc6a9\ud560\ub9cc \ud558\uae34 \ud55c\uac70\uac19\ub2e4. \uc774\ud6c4 \ud559\uc2b5\uc9c4\ud589, \ubaa8\ub378 \uc120\uc815"}}