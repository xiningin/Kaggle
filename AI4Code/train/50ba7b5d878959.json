{"cell_type":{"1566ddb2":"code","612adc80":"code","f72f26ac":"code","a4c695ee":"code","f95841ae":"code","ea9d8147":"code","b9f85f82":"code","40ec57be":"code","e37f67f1":"code","2eb2af1a":"code","6425174b":"code","32f24673":"code","ce3e56f2":"code","dbf5b19a":"code","5e373dfd":"code","f17f2c06":"code","0dfffb09":"code","6fc8183c":"code","edb1afec":"code","523f847c":"code","c32fca98":"code","43089612":"markdown","39767080":"markdown","dbf23726":"markdown","ae9452e7":"markdown","49fff50c":"markdown","f2704b61":"markdown","f4a69450":"markdown","0fdbdaf1":"markdown","ce739b01":"markdown"},"source":{"1566ddb2":"import pandas as pd\nimport numpy as np","612adc80":"df = pd.read_csv('..\/input\/glass\/glass.csv')","f72f26ac":"df","a4c695ee":"df.head()","f95841ae":"df.isnull().sum()","ea9d8147":"df.shape","b9f85f82":"df.describe","40ec57be":"X = df.drop(['Type'], axis = 1)","e37f67f1":"X","2eb2af1a":"y = df['Type']","6425174b":"y","32f24673":"import seaborn as sns\nimport matplotlib.pyplot as plt","ce3e56f2":"corr = df.corr()\nplt.figure(figsize=(15,13))\nsns.heatmap(corr,annot=True)","dbf5b19a":"from sklearn.model_selection import train_test_split","5e373dfd":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=15)","f17f2c06":"from sklearn.ensemble import RandomForestClassifier","0dfffb09":"from sklearn.metrics import accuracy_score,confusion_matrix","6fc8183c":"n_trees = [10,50,100,200,300]\nfor i in n_trees:\n    ran_for = RandomForestClassifier(n_estimators=i)\n    ran_for.fit(X_train,y_train)\n    pred = ran_for.predict(X_test)\n    \n    print('n of trees: {}'.format(i))\n    correct_pred = 0\n    for j,k in zip(y_test,pred):\n        if j == k:\n            correct_pred += 1\n            print('correct predictions: {}'.format(correct_pred\/len(y_test) *100))","edb1afec":"model = RandomForestClassifier()\nmodel.fit(X_train, y_train)","523f847c":"prediction = model.predict(X_test)","c32fca98":"acc_score = accuracy_score(y_test,prediction)\nacc_score","43089612":"Shape","39767080":"Split to training & testing dataset","dbf23726":"Visualization","ae9452e7":"Reference Links:\nhttps:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.ensemble.RandomForestClassifier.html","49fff50c":"Importing Libraries","f2704b61":"https:\/\/medium.com\/@hjhuney\/implementing-a-random-forest-classification-model-in-python-583891c99652","f4a69450":"Accuracy Score","0fdbdaf1":"Importing matplotlib and seaborn","ce739b01":"Checking if there is any null values"}}