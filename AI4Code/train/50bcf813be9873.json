{"cell_type":{"322c9bef":"code","4fb5d4dc":"code","2ee63232":"code","9187a9ec":"code","a0dc999f":"code","b2ef84b8":"code","7f588320":"code","4b64ece2":"code","f75e2cec":"code","36fb9d99":"code","3e8abf82":"code","f47289dd":"code","cc24f04b":"code","79a65803":"code","a19b6401":"code","f138fde0":"code","fa2ef1b0":"code","518a1c46":"code","3075d203":"code","5f8e6b01":"code","acfb077d":"code","e91fa25e":"code","a6e0e258":"code","8f90e9ce":"code","1063cf25":"code","00536c13":"code","0bce07cb":"code","83151acf":"code","e0d7db86":"code","5fe90c50":"code","1095e12c":"code","e32f581e":"code","96bca3d2":"code","59b4dc45":"code","36d68801":"code","dc312335":"code","075d6912":"code","d12cd93d":"code","332dc816":"code","d2312b93":"markdown","8f6e2e12":"markdown","f62512dd":"markdown","17bad861":"markdown","47c3245c":"markdown","ea365bd4":"markdown","55209676":"markdown","7f0143ca":"markdown","82405631":"markdown","0a8eff49":"markdown","d3588349":"markdown","bf20011d":"markdown","7e18e966":"markdown","02be02e5":"markdown","035db56f":"markdown","0bb2dbee":"markdown","f1952b2c":"markdown","44a3c556":"markdown","71263cc7":"markdown","3b65a5ce":"markdown","3546445a":"markdown","6bb8b009":"markdown","082a07e2":"markdown","a70349ed":"markdown","e64bdefd":"markdown","d46c01f5":"markdown","4e792050":"markdown","d7e6fd0f":"markdown","5b9def1f":"markdown","a6d6d4d1":"markdown","4036b0fa":"markdown","22d81989":"markdown","7d09acae":"markdown","9b6b3ae6":"markdown","cb945524":"markdown","a92b2173":"markdown","f5b54fd4":"markdown","72c89389":"markdown"},"source":{"322c9bef":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\npd.options.mode.chained_assignment = None  # default='warn'","4fb5d4dc":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly_express as px\n%matplotlib inline ","2ee63232":"sns.set(style='darkgrid')","9187a9ec":"\ndf = pd.read_csv('\/kaggle\/input\/fifa-21-complete-player-dataset\/players_21.csv')\n\n","a0dc999f":"df.head()","b2ef84b8":"df.info","7f588320":"total_entries = 18944*105\n(df.isnull().sum().sum()\/total_entries)*100","4b64ece2":"df.columns.values","f75e2cec":"Del_columns = ['sofifa_id','dob','long_name','player_url','long_name',\n               'body_type','real_face','nation_position','loaned_from',\n               'nation_jersey_number','release_clause_eur','player_tags',\n               'ls', 'st', 'rs', 'lw', 'lf', 'cf', 'rf','rw', 'lam', 'cam'\n               , 'ram', 'lm', 'lcm', 'cm', 'rcm', 'rm', 'lwb','ldm', 'cdm',\n               'rdm', 'rwb', 'lb', 'lcb', 'cb', 'rcb', 'rb']","36fb9d99":"df.drop(columns=Del_columns,inplace=True)","3e8abf82":"#Number of columns\nlen(df.columns.values)","f47289dd":"# I just want to analyse the top 100 players.\ndf = df[:100]","cc24f04b":"df.head()","79a65803":"df.tail()","a19b6401":"missing_data = df.isnull().sum()\nprint(missing_data[missing_data > 0])","f138fde0":"# Let's start by replacing [pace,shooting,passing,dribbling,defending]\n\n# They are all missing exaclty 15 values. \n\n# I suspect they are all goalkeepers (GK). let's make sure though. \n\ndf[df['pace'].isnull()]['team_position']\n","fa2ef1b0":"# Let's create a list and replace the missing values in one go\n\n\nmissing_values_list = ['pace','shooting','passing','dribbling','defending']\nfor x in missing_values_list:\n        df[x].fillna(df[x].min(), inplace=True)\n    ","518a1c46":"df['physic'].fillna(df['physic'].mean(), inplace=True)","3075d203":"\n                            ##player_traits'##\n# 5 players are missing \"player_traits\" I will replace the missing values with 'No traits available'\n\ndf['player_traits'] = df['player_traits'].fillna('No traits available')\n\n                            ## defending_marking ##\n# defending_marking is missing for all 100 players so I will just delete it \n\ndf.drop(columns='defending_marking',inplace=True)","5f8e6b01":"missing_data = df.isnull().sum()\nprint(missing_data[missing_data > 0])","acfb077d":"df.fillna(10,inplace=True)","e91fa25e":"df.isnull().sum().sum() # no missing values left","a6e0e258":"plt.figure(figsize=(10,8))\n\nax = sns.histplot(data=df,x='age',kde=True,bins=10, color='b')\n\nax.set(xlabel='Age',ylabel='Count',title='Distribution of Age',)\n\nplt.show()","8f90e9ce":"fig, ax1 = plt.subplots(figsize=(20,10))\n\ngraph = sns.countplot(ax=ax1, data=df, x='nationality', order=df['nationality'].value_counts().head(10).index, palette='Blues_r' )\n\nax1.set(xlabel='Count',ylabel='Country',title='Number of Top players per country',)\ngraph.set_xticklabels(graph.get_xticklabels(),rotation=90)\n\nfor p in graph.patches:\n    height = p.get_height()\n    graph.text(p.get_x()+p.get_width()\/2.,height +0.1,height, ha=\"center\")\n    \nplt.show()","1063cf25":"#this is what we initialy had for positions \ndf['player_positions']","00536c13":"# how I changed it:\n\npositions_list=[]\n\n[positions_list.append(x.split(',')[0]) for x in df['player_positions'].values.tolist()]\n    \ndf['position']= positions_list\n\n\nfor x in df['position']:\n    if x in ['ST','CF','RW','LW']:\n        df['position'].replace(to_replace=x,value='Attacker',inplace=True) \n    if x in ['LM','RM','CM','CDM','CAM']:\n        df['position'].replace(to_replace=x,value='Midfielder',inplace=True)\n    if x in ['LB','RB','CB']:\n        df['position'].replace(to_replace=x,value='Defender',inplace=True)\n    if x in ['GK']:\n        df['position'].replace(to_replace=x,value='Goalie',inplace=True)","0bce07cb":"# This is how it looks like now\ndf['position']","83151acf":"#We no longer need df['player_positions'], I'll just go ahead and delete it.\ndf.drop(columns='player_positions', inplace=True)","e0d7db86":"fig, ax1 = plt.subplots(figsize=(10,8))\n\ngraph = sns.countplot(ax=ax1, data=df, x='position', order=df['position'].value_counts().head(10).index, palette='Blues_r' )\n\nax1.set(xlabel='Count',ylabel='Position',title='Players count per position',)\ngraph.set_xticklabels(graph.get_xticklabels(),rotation=90)\n\nfor p in graph.patches:\n    height = p.get_height()\n    graph.text(p.get_x()+p.get_width()\/2.,height +0.1,height, ha=\"center\")\n    \nplt.show()","5fe90c50":"fig = px.scatter(df,x='short_name',y='value_eur',color='position',\n                 labels={'value_eur': 'Value in Euro','position':'Position'})\nfig.update_xaxes(visible=False)\n# allign title\nfig.update_layout(title_text='Value in Euro per Position', title_x=0.5)\n\nfig.update_traces(marker=dict(size=12,\n                              line=dict(width=2,)),\n                  selector=dict(mode='markers'))\n\nfig.show()","1095e12c":"df_goalie = df[df['position']=='Goalie']\n\ndf_goalie =df_goalie[['short_name', 'age', 'height_cm', 'weight_kg','overall','nationality','gk_diving',\n       'gk_handling', 'gk_kicking', 'gk_reflexes', 'gk_speed',\n       'gk_positioning','goalkeeping_diving',\n       'goalkeeping_handling', 'goalkeeping_kicking',\n       'goalkeeping_positioning', 'goalkeeping_reflexes',]]","e32f581e":"df_goalie.columns","96bca3d2":"sns.pairplot(data=df_goalie)","59b4dc45":"df_goalie =df_goalie[['short_name', 'age', 'height_cm', 'weight_kg','overall','nationality','gk_diving',\n       'gk_handling', 'gk_kicking', 'gk_reflexes', 'gk_speed',\n       'gk_positioning',]]","36d68801":"sns.pairplot(data=df_goalie)","dc312335":"fig = px.scatter(data_frame=df_goalie,x='gk_positioning',y='overall', \n                 color='short_name',\n                 color_discrete_sequence=[\"#4884AF\"],\n                 labels={'gk_positioning': 'Positioning','overall':'Overall Rating','short_name':'Player Name'})\n\n\nfig.update_traces(marker=dict(size=12,\n                              line=dict(width=2,)),\n                  selector=dict(mode='markers'))\n\nfig.update_layout(title_text='GK Overall Rating vs Positioning', title_x=0.5,\n                  showlegend=False,\n                  hoverlabel=dict(bgcolor=\"white\",font_size=16,font_family=\"Rockwell\")\n    \n)\n\nfig.show()","075d6912":"fig, ax1 = plt.subplots(figsize=(10,8))\n\ngraph = sns.countplot(ax=ax1, data=df, x='league_name', order=df['league_name'].value_counts().index, palette='Blues_r' )\n\nax1.set(xlabel='League Name',ylabel='Player Count',title='Players count per league',)\ngraph.set_xticklabels(graph.get_xticklabels(),rotation=90)\n\nfor p in graph.patches:\n    height = p.get_height()\n    graph.text(p.get_x()+p.get_width()\/2.,height +0.1,height, ha=\"center\")\n    \nplt.show()\n","d12cd93d":"fig = px.histogram(data_frame=df, x='club_name',labels={'club_name':'Club Name'},\n                  width=900, height=600,template=\"simple_white\",color='short_name', color_discrete_sequence=[\"#508CB4\"])\n\nfig.update_xaxes(categoryorder='total descending', )\n\nfig.update_layout(showlegend=False, title_text='Players Count per Club ', title_x=0.5,\n                 hoverlabel=dict(\n        bgcolor=\"white\",\n        font_size=16,\n        font_family=\"Rockwell\"\n    ))","332dc816":"fig = px.scatter(data_frame=df[df['pace']>42], x='short_name',y='pace',color='position', labels={'pace':'Pace','position':'Position'} )\nfig.update_xaxes(visible=False)\n# allign title\nfig.update_layout(title_text='Pace vs Position', title_x=0.5)\n\nfig.update_traces(marker=dict(size=12,\n                              line=dict(width=2,)),\n                  selector=dict(mode='markers'))\n\nfig.show()","d2312b93":"## 1. Age","8f6e2e12":"Looks like my suspicions were right, they're all goalies.\n\nI thought about replacing these values with 0 but that wouldn't do our goalkeepers justice, after all, goalkeepers can run, shoot, and give good passes, so a value of 0 is not fair.\n\nI decided to replace the missing values with the minimum value available for the corresponding column.\n","f62512dd":"# 3. Position","17bad861":"We have 18944 rows and 105 columns","47c3245c":"# **Analysis**","ea365bd4":"![](https:\/\/www.fifplay.com\/img\/public\/fifa-21-logo.png)","55209676":"Looks like we're missing about 11% of our data","7f0143ca":"As you can see, outfield players are not given any goalkeeper's rating. We will replace the missing values with a very small value .","82405631":"**Let's see what we have left**","0a8eff49":"It looks like attackers are fast compared to all the other positions.","d3588349":"# Conclusion","bf20011d":"These are the features that have atleast one missing value","7e18e966":"**Okay, I see that some of the columns are perfectly correlated, this just tells that they are redundant columns. I missed it at first but the pairplot helped catch it. I will go ahead and remove them.**","02be02e5":"* Before we begin analysing positions let's change something. Instead of having multiple positions, I want to narrow them down to goalie, defender, midfielder and attacker. I will then create a new column called 'position' to reflect these changes.","035db56f":"Welcome to my first data analysis project on Kaggle. I\u2019ve been reading book, watching YouTube video, and taking Udemy courses online. Now I feel like it\u2019s time to put in practice what I have learned the past couple of months. I\u2019m really loving the process of getting raw data, cleaning it and telling a story with some beautiful visuals.  I hope you like my notebook and please do not hesitate to leave a feedback because it gives me a different perspective and helps me improve, thanks. \n\nToday I will be analyzing the FIFA21 dataset, I chose this as my first project because I love FIFA and have been a fan of the game the last 8 years. I\u2019m only going to analyze the top 100 players. My goal is to find out what these players have in common and what makes them the excellent players they are.  \n","0bb2dbee":"*note: the following graph is interactive*","f1952b2c":"* One of the reasons I created a new DF for goalies was to create a pairplot. With a pairplot I would be able to see a quick preview of all relationships between the 15 columns. It helps me see correlations I would have probably missed.  **I understand that pairplot should not be used as a visual but a quick analysis tool to understand your data better**.","44a3c556":"# 5. More Viz","71263cc7":"How many players do we have in each of the 4 positions ?  ","3b65a5ce":"# Taking care of missing values","3546445a":"The most valuable player on FIFA21 is Mbapp\u00e9 with a price tag of 105M Euros. Not surprising considering he was a world cup champion at 19 years old. What surprises me is that Lionel Messi is only 67M euros. Apart from that, it looks like Attackers are the most valuable of the 4 positions.","6bb8b009":"**Germany and Spain alone account for 24% of the top 100 players.**","082a07e2":"Does the position of a player determine his value?  \n\n*Note: This plot is interactive*\n","a70349ed":"# 2. Country","e64bdefd":"**It should come as no surprise that all 100 players are in the top 5 leagues in Europe.**","d46c01f5":"For the \"phisic\" column, I didn't want to use the min value because some goalkeepers have a better physique than many outfield players.","4e792050":"# 4. Goalkeepers analysis","d7e6fd0f":"note: the following graph is interactive","5b9def1f":"# Deleting columns we don't need","a6d6d4d1":"# Getting our Data","4036b0fa":"**Upon analyzing the pairplot, there seem to be high correlation between the overall rating and the positioning, this simply means that if you want to be a good goalkeeper then positioning should be your number 1 priority.**","22d81989":"The majority of top players are between the age of 27 and 30","7d09acae":"*note: the following graph is interactive*","9b6b3ae6":"Here is a preview of our new DF","cb945524":"For this analysis, I really want to focus on analyzing goalkeepers\u2019 traits. So I created a new DataFrame just for GK.","a92b2173":"I used the following packages for visualisations:\n1.\tMatplotlib\n2.\tSeaborn\n3.\tPlotly\n","f5b54fd4":"**The entire liverpool starting 11 is in the top 100 players. Amazing !!!**","72c89389":"*This is it, thank you again for taking time to look at my notebook. I learned a lot while making this notebook and I\u2019m happy with what I have at the end. I know there many other questions that could have been answered with this dataset, but I just wanted to keep it short and simple, after all it\u2019s just my first notebook.*"}}