{"cell_type":{"e4aafd3f":"code","accc0cac":"code","4f597321":"code","e0573d76":"code","840929df":"code","a52191eb":"code","4cd761c8":"code","6a922274":"code","0b89f2b7":"code","b962f556":"code","8cbb45dc":"code","8b5a4348":"code","71670cd5":"code","2332b4e1":"code","62b0516e":"code","9be9b1b7":"code","51b500e2":"code","687059ce":"code","d2b1df90":"code","3ae0f477":"markdown","75c77dfd":"markdown","043134a8":"markdown","383aebea":"markdown","16f5bc23":"markdown","50dbca90":"markdown","0c0a0c64":"markdown","bc4ff1fc":"markdown"},"source":{"e4aafd3f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","accc0cac":"iris = pd.read_csv(\"..\/input\/iris-data\/Iris.csv\")\niris","4f597321":"#here print the first 5 row we used head function\niris.head(5)","e0573d76":"#here print the last 5 row we used tail function\niris.tail(5)\n","840929df":"#we use shape functiobn for see the how many shapes in this data set\niris.shape","a52191eb":"#descirbe the iris dataset\niris.describe()\n","4cd761c8":"iris.info()","6a922274":"#dropping unnecessary cloumn like: ID\niris.drop('Id', axis=1, inplace=True)\niris.columns","0b89f2b7":"#here agine we check null values\niris.isnull().sum()","b962f556":"#here, we check duplicate values\niris.duplicated().sum()","8cbb45dc":"#we have 3 duplicate values so drop these 3 values\niris.drop_duplicates(inplace=True)\n\niris.shape[0] # 0 for row\niris.shape[1] # 1 for columns","8b5a4348":"#find the unique values\niris.Species.unique()          ","71670cd5":"#distrubution of features by Species\n\nfor i in iris.columns[:-1]:\n    \n    sns.kdeplot(data = iris.loc[iris.Species=='Iris-setosa'][i], label= \"Iris-setosa\", shade=True)\n    \n    sns.kdeplot(data = iris.loc[iris.Species=='Iris-versicolor'][i], label=\"Iris-versicolor\", shade=True)\n    \n    sns.kdeplot(data = iris.loc[iris.Species=='Iris-virginica'][i], label=\"Iris-virginica\", shade=True)\n    \n    plt.title(i);\n    \n    plt.show()\n    \n    ","2332b4e1":"#correlation matrics\niris.corr()","62b0516e":"plt.figure(figsize=(10,5))\nsns.heatmap(abs(iris.corr()), cmap='RdYlBu', annot=True)","9be9b1b7":"from sklearn.cluster import KMeans\nWCSS=[]\nfor i in range(1,10):\n    kmeans = KMeans(n_jobs = -1, n_clusters = i, init='k-means++', random_state=2)\n    kmeans.fit(iris.iloc[:,[0,1,2,3]])\n    WCSS.append(kmeans.inertia_)\n    \ndf = pd.DataFrame({'Cluster':range(1,10),'WCSS':WCSS})\nplt.figure(figsize=(12,6))\nplt.plot(df['Cluster'], df['WCSS'], marker='o')\nplt.title('The Elbw Method')\nplt.xlabel('Number of Cluster')\nplt.ylabel('Inertia')\nplt.show()","51b500e2":"kmeans = KMeans(n_clusters = 3, init = 'k-means++', random_state=42)\ny_kmeans = kmeans.fit_predict(iris.iloc[:,[0,1,2,3]])\n\nprint(y_kmeans)","687059ce":"iris['cluster'] = kmeans.labels_\niris","d2b1df90":"plt.figure(figsize=(10,5))\nplt.scatter(iris['SepalLengthCm'], iris['SepalWidthCm'], c = iris.cluster)\nplt.scatter(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:,1], s = 200, color = 'blue', label = 'Centroids')\nplt.title('Predicted Cluster\\n')\nplt.show()","3ae0f477":"# Step-1:- Importing libraries","75c77dfd":"# Step-4:- use K-means clustring","043134a8":"Dataset= Iris dataset","383aebea":"# Step-3:- Data Exploring","16f5bc23":"# GRIP-The Sparks Foundation\nData Science and Business Analyts Internship","50dbca90":"Author:- Prit Rameshbhai Sheta","0c0a0c64":"Task-2.  prediciton the optimum number of clusters and represent it visually using unsurvised ML.","bc4ff1fc":"# Step-2:- Import the Iris dataset"}}