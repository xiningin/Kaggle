{"cell_type":{"ed1e2bf1":"code","4899800d":"code","1770365d":"code","700dff69":"code","94ba1c8e":"code","cbed0777":"code","ca97bac7":"code","c405088d":"code","25ec8476":"code","2877ed53":"code","8b01f669":"code","731c2541":"code","8bf90034":"code","954b69cd":"code","7de2d74c":"code","b19df21c":"code","36f99889":"code","f6dc572e":"code","384867be":"code","419c7ff0":"code","ca9b8e8b":"code","5ac60249":"code","82bbd2fb":"code","27848d80":"code","0bf386c9":"code","0cc22731":"code","1f227040":"code","49868d67":"code","856dbf99":"code","b69f5860":"code","d2ea1bf1":"code","44caca21":"code","8a0d81d6":"code","e91749f4":"code","82b93601":"code","f1b08f71":"code","1dafc696":"code","807686cd":"code","9da60c50":"code","0b2d9e70":"code","21477982":"code","ea190814":"code","582a58c0":"code","60dda630":"code","f85d14b0":"code","04e396f1":"code","37126215":"code","14fdef8f":"code","5af17669":"code","ba028088":"code","5fb68ada":"code","ec2be8b0":"code","6281def8":"code","7a7eb8b2":"code","5afa69ac":"code","6776745e":"code","7e4b8161":"code","9be709c9":"code","a0152736":"code","a19421cd":"code","3eab8a95":"code","c8e0a8e4":"code","507b995b":"code","ba3c81bf":"code","5b15a910":"code","462e942c":"code","f965d93c":"code","d540499b":"code","ef1fe8b7":"code","d41cf1ee":"code","42aa9f16":"code","69eadf5a":"code","f9cf6879":"code","0ce0d79a":"code","264e6dd9":"code","3a51447b":"code","7e767463":"code","99cdffdf":"code","85027917":"code","959863b3":"code","446d133d":"markdown","882de3f0":"markdown","d3eb4bc2":"markdown","4872e917":"markdown","6fbebc78":"markdown","98cedf0c":"markdown","7dd43088":"markdown","6c52a182":"markdown","32ad631f":"markdown","91eb31b3":"markdown"},"source":{"ed1e2bf1":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\n%matplotlib inline\nimport matplotlib \nmatplotlib.rcParams['figure.figsize']=(15,7)\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","4899800d":"df = pd.read_csv('..\/input\/pune-house-data\/Pune house data.csv')","1770365d":"df","700dff69":"df['area_type'].value_counts()","94ba1c8e":"df.describe()","cbed0777":"df.info()","ca97bac7":"df.isnull().sum()","c405088d":"def fill_bath(x):\n    if pd.isnull(x):\n        return 1\n    return x","25ec8476":"df['bath'] = df['bath'].apply(fill_bath)","2877ed53":"df.isnull().sum()","8b01f669":"df[df['site_location'].isna()]","731c2541":"df.drop(1728,inplace=True)","8bf90034":"df.isnull().sum()","954b69cd":"df['size'].value_counts()","7de2d74c":"df.dropna(subset=['size'],inplace=True)","b19df21c":"df.isnull().sum()","36f99889":"df.drop('society',axis=1,inplace=True)","f6dc572e":"df.isnull().sum()","384867be":"df['balcony'].value_counts().plot(kind='bar')","419c7ff0":"df.corr().iloc[1:,1:]","ca9b8e8b":"df[df['balcony'].isna()]","5ac60249":"bal_index=df[df['balcony'].isna()]['site_location'].value_counts().index","82bbd2fb":"df[df['site_location']==bal_index[0]]['balcony'].mode()[0]","27848d80":"loc_bal_mode = []\nfor b in bal_index:\n    loc_bal_mode.append(df[df['site_location']==b]['balcony'].mode()[0])","0bf386c9":"bal_mode = pd.Series(index=bal_index,data=loc_bal_mode)","0cc22731":"def fill_bal(x,y):\n    if type(y) is float:\n        return bal_mode.get(x)\n    return y","1f227040":"df['balcony'] = df.apply(lambda x:fill_bal(x['site_location'],x['balcony']),axis=1)","49868d67":"df[df['balcony'].isna()]","856dbf99":"df.drop(28,inplace=True)","b69f5860":"df","d2ea1bf1":"df.isnull().sum()","44caca21":"df.head(10)","8a0d81d6":"df['site_location'].value_counts()","e91749f4":"df['size'].unique()","82b93601":"def bhk(x):\n    if x.split()[1]=='BHK':\n        return 1\n    return 0\ndf['BHK'] = df['size'].apply(bhk)","f1b08f71":"def cnt(x):\n    return int(x.split()[0])\ndf['BHK\/Bedroom Count'] = df['size'].apply(cnt)","1dafc696":"df['BHK\/Bedroom Count']","807686cd":"df.drop('size',axis=1,inplace=True)","9da60c50":"df","0b2d9e70":"df.info()","21477982":"df['area_type'].value_counts().plot(kind='bar')","ea190814":"df.groupby('area_type').mean()['price']","582a58c0":"df['availability'].nunique()","60dda630":"df['bath'].value_counts()","f85d14b0":"df.corr().iloc[:-1,:-1]","04e396f1":"df.groupby('area_type').describe().transpose().loc['price']","37126215":"def tot(x):\n    nos = {'0','1','2','3','4','5','6','7','8','9'}\n    if '-' in x:\n        a = x.split('-')[0].strip()\n        b = x.split('-')[1].strip()\n        if '.' in a:\n            a = a.split('.')[0]\n        if '.' in b:\n            b = b.split('.')[0]\n        return (int(a)+int(b))\/2\n    elif type(x) is str:\n        y = ''\n        for i in x:\n            if i=='.':\n                break\n            elif i in nos:\n                y+=i\n        return int(y)\ndf['total_sqft'] = df['total_sqft'].apply(tot)","14fdef8f":"plt.figure(figsize=(12,4),dpi=200)\nsns.scatterplot(x='total_sqft',y='price',data=df[df['area_type']=='Plot  Area'],hue='area_type')\nplt.xlim(0,4000)\nplt.ylim(0,1000);","5af17669":"plt.figure(figsize=(12,4),dpi=200)\nsns.scatterplot(x='total_sqft',y='price',data=df[df['area_type']=='Super built-up  Area'],hue='area_type')\nplt.xlim(0,4000)\nplt.ylim(0,1000);","ba028088":"plt.figure(figsize=(12,4),dpi=200)\nsns.scatterplot(x='total_sqft',y='price',data=df[df['area_type']=='Built-up  Area'],hue='area_type')\nplt.xlim(0,4000)\nplt.ylim(0,1000);","5fb68ada":"plt.figure(figsize=(12,4),dpi=200)\nsns.scatterplot(x='total_sqft',y='price',data=df[df['area_type']=='Carpet  Area'],hue='area_type')\nplt.xlim(0,2000)\nplt.ylim(0,250);","ec2be8b0":"fig,ax = plt.subplots(2,2,dpi=100)\nax[0][0].scatter(df[df['area_type']=='Super built-up  Area']['total_sqft'],df[df['area_type']=='Super built-up  Area']['price'],alpha=0.5)\nax[0][1].scatter(df[df['area_type']=='Plot  Area']['total_sqft'],df[df['area_type']=='Plot  Area']['price'],alpha=0.5)\nax[1][0].scatter(df[df['area_type']=='Built-up  Area']['total_sqft'],df[df['area_type']=='Built-up  Area']['price'],alpha=0.5)\nax[1][1].scatter(df[df['area_type']=='Carpet  Area']['total_sqft'],df[df['area_type']=='Carpet  Area']['price'],alpha=0.5)\nfig.tight_layout()\nax[0][0].set_title('Super built-up')\nax[0][1].set_title('Plot')\nax[1][0].set_title('Built-up')\nax[1][1].set_title('Carpet')\nax[0][0].set_xlim(0,10000)\nax[0][0].set_ylim(0,2000)\nax[0][1].set_xlim(0,20000)\nax[0][1].set_ylim(0,2000)\nax[1][0].set_xlim(0,10000)\nax[1][0].set_ylim(0,1000)\nax[1][1].set_xlim(0,2000)\nax[1][1].set_ylim(0,400)\nplt.subplots_adjust(hspace=0.5)","6281def8":"plt.figure(figsize=(12,8),dpi=150)\nsns.boxplot(x='area_type',y='price',data=df)","7a7eb8b2":"df.drop(df[df['area_type']=='Plot  Area']['price'].idxmax(),inplace=True)","5afa69ac":"df.drop(df[df['area_type']=='Built-up  Area']['price'].idxmax(),inplace=True)","6776745e":"df.drop(df[df['area_type']=='Super built-up  Area']['price'].idxmax(),inplace=True) #ran this cell twice","7e4b8161":"plt.figure(figsize=(12,8),dpi=150)\nsns.violinplot(x='area_type',y='price',data=df)","9be709c9":"df","a0152736":"df['price'].min(),df['price'].max()","a19421cd":"def pricerange(x):\n    if 0<=x<500:\n        return 1\n    elif 500<=x<1000:\n        return 2\n    elif 1000<=x<1500:\n        return 3\n    elif 1500<=x<2000:\n        return 4\n    else:\n        return 5\ndf['price_range'] = df['price'].apply(pricerange)","3eab8a95":"df['price_range'].value_counts()","c8e0a8e4":"df","507b995b":"df['availability'].value_counts()","ba3c81bf":"def month(x):\n    if x=='Ready To Move':\n        return 0\n    return x.split('-')[1]\ndf['month'] = df['availability'].apply(month)","5b15a910":"df.drop('availability',axis=1,inplace=True)","462e942c":"df","f965d93c":"df['month'].value_counts().plot(kind='bar')\nplt.ylim(0,1000)","d540499b":"df.groupby('month').mean()['price'].sort_values()","ef1fe8b7":"plt.figure(figsize=(12,6),dpi=150)\ndf.groupby('month').mean()['price'].sort_values().plot(kind='bar')\nplt.ylabel('price')\nplt.title('Month v Price');","d41cf1ee":"month_to_ord = {'Jan':12,'Feb':11,'Mar':10,'Sep':9,0:8,'Jul':7,'May':6,'Apr':5,'Dec':4,'Jun':3,'Oct':2,'Nov':1,'Aug':0}\ndf['monthImp'] = df['month'].map(month_to_ord)","42aa9f16":"df.drop('month',axis=1,inplace=True)","69eadf5a":"atdf = pd.get_dummies(df['area_type'],drop_first=True)","f9cf6879":"df = pd.concat([df,atdf],axis=1)","0ce0d79a":"df.columns","264e6dd9":"df.drop(['area_type','site_location'],axis=1,inplace=True)","3a51447b":"df","7e767463":"X = df.drop('price',axis=1)\ny = df['price']","99cdffdf":"from sklearn.linear_model import LinearRegression,Lasso\nfrom sklearn.model_selection import GridSearchCV,cross_val_score\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor","85027917":"models = [LinearRegression(),Lasso(),DecisionTreeRegressor(),RandomForestRegressor()]\ndef model_df(models,X,y):\n    inds = []\n    scores = []\n    for i in models:\n        inds.append(str(i))\n        score = cross_val_score(i,X,y,cv=5)\n        score.sort()\n        scores.append([score[4],score[3]])\n    score_df = pd.DataFrame(index=inds,data=scores,columns=['Score 1','Score 2'])\n    return score_df    ","959863b3":"print(model_df(models,X,y))","446d133d":"From this boxplot, we can find four outliers. Two for 'Super built-up' and one each for 'Plot' and 'Built-up'. We can eliminate them","882de3f0":"The 'society' column is null for more than half of the number of rows. We cannot fill values for such a column. So let's drop the column","d3eb4bc2":"I am creating an ordinal column here to analyze the dataset more in terms of range of the price. But 'price_range' and 'price' are highly correlated features since one is derived from the other. So while using it in an model pca should be done to eliminate the correlation ","4872e917":"Since the 'size' feature has arbitrary values it is not logical to fill the 'size' attribute with some value. If you want though you can fill it with some value after analyzing the trend in that area.","6fbebc78":"# Outlier elimination","98cedf0c":"Every apartment will have a bathroom. So let's fill the bath columns which have nan with 1","7dd43088":"After removing outliers","6c52a182":"**Inference 1:** Super built-up Area is the most sold one and Carpet area is the least sold one<br>\n**Inference 2:** Mean is higher for Plot Area which in other words is buying a place in which no building has been built is of high              cost<br>\n**Inference 3:** Carpet areas mean price is very low, indicating that for some reason carpet areas do not go for high prices.","32ad631f":"We started with 13320 rows. After the data cleaning process we have lost only 18 rows","91eb31b3":"The above plot is a **very important plot**. This plot clearly shows the price dependence on month"}}