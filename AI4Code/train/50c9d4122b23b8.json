{"cell_type":{"326d16ed":"code","c621b33c":"code","c795f2af":"code","aeb42e69":"code","3c905b2c":"code","d86e4631":"code","1ffb1415":"code","d5f9159e":"code","7f65e4d9":"code","17407b25":"code","8e17fa03":"code","a4d14c52":"code","f556e69b":"code","dae72a62":"code","fa9e4227":"code","cf05bd55":"code","c163dce9":"code","34c64262":"code","553a8a19":"code","8e5ad155":"code","a633adf6":"code","957dd2a4":"code","b511a487":"code","471a9152":"code","7acbb6f3":"code","b0f6e4d4":"code","88f5fd66":"code","d496270b":"code","bef31d2f":"code","fe29127f":"code","40b4da3f":"code","1ebac499":"code","89389db0":"code","20b3f52e":"code","36655264":"code","205bf7e4":"code","ad5b45c7":"code","40004801":"code","90377c72":"markdown","a4b47315":"markdown","3843715d":"markdown","f0e0d09a":"markdown","51ae713a":"markdown","5aa6aea5":"markdown","ad78574f":"markdown","181c66a4":"markdown","749661d6":"markdown","168525ca":"markdown","07c9167b":"markdown","784702ac":"markdown","c9b3bd7a":"markdown","73e4fde6":"markdown","47f43707":"markdown","0f6c76ec":"markdown"},"source":{"326d16ed":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c621b33c":"df = pd.read_csv(\"..\/input\/insurance\/insurance.csv\")\ndf.head()","c795f2af":"df.describe()","aeb42e69":"df.isna().sum()","3c905b2c":"df.shape","d86e4631":"df.columns","1ffb1415":"print(f'Age : {df.age.count()}')\nprint(f'Sex : {df.sex.count()}')","d5f9159e":"print(f'Age : {df.age.dtype}')\nprint(f'Sex : {df.sex.dtype}')\nprint(f'BMI : {df.bmi.dtype}')\nprint(f'Children : {df.children.dtype}')\nprint(f'Smoker : {df.smoker.dtype}')\nprint(f'region : {df.region.dtype}')\nprint(f'charges : {df.charges.dtype}')","7f65e4d9":"print(f'Age : {df.age.nunique()}')\nprint(f'Sex : {df.sex.nunique()}')\nprint(f'BMI : {df.bmi.nunique()}')\nprint(f'Children : {df.children.nunique()}')\nprint(f'Smoker : {df.smoker.nunique()}')\nprint(f'region : {df.region.nunique()}')\nprint(f'charges : {df.charges.nunique()}')","17407b25":"print(f'Age : { pd.api.types.is_numeric_dtype(df.age)}')\nprint(f'Sex : { pd.api.types.is_numeric_dtype(df.sex)}')","8e17fa03":"print(df.charges.median())\nprint(df.charges.mode().values[0])","a4d14c52":"import seaborn as sns\n\nsns.relplot(kind='line', data=df)","f556e69b":"df.charges.std()\n","dae72a62":"np.std(df.charges, ddof=1)","fa9e4227":"#(ab)Normality:skew, kurt\n#skewness should be between 0-1, or else data is too skewed to work on\n#kurtosis should be between -1 & +1\n\nfrom scipy.stats import kurtosis, skew\n\nprint(skew(df.charges, bias=False))\nprint(kurtosis(df.charges, bias = False))","cf05bd55":"print(df.charges.skew())\nprint(df.charges.kurtosis())","c163dce9":"df.corr()","34c64262":"df.charges.corr(df.bmi)","553a8a19":"from scipy import stats\ncorr = stats.pearsonr(df.charges, df.age)\ncorr","8e5ad155":"r,p=stats.pearsonr(df.charges,df.age)\nprint(round(r,4))\nprint(round(p,29))","a633adf6":"corr_df = pd.DataFrame(columns=['r','p'])\n\nfor col in df:\n    if pd.api.types.is_numeric_dtype(df[col]):\n        r,p=stats.pearsonr(df.charges,df[col])\n        corr_df.loc[col] = [round(r,3),round(p,3)]\n    \ncorr_df","957dd2a4":"import matplotlib.pyplot as plt\n\nplt.scatter(df.age,df.charges)\nplt.title(\"Age V\/S Charges\")\nplt.xlabel(\"Age\")\nplt.ylabel(\"Charges\")\nplt.show()","b511a487":"df_smoker = df[df['smoker']=='yes']\ndf_nonsmoker=df[df['smoker']=='no']\n\ndf_smoker.head()","471a9152":"plt.scatter(df_smoker.age,df_smoker.charges, label='Smokers')\nplt.scatter(df_nonsmoker.age,df_nonsmoker.charges, label='Non-Smokers')\nplt.title(\"Age V\/S Charges\")\nplt.xlabel(\"Age\")\nplt.ylabel(\"Charges\")\nplt.legend()\nplt.show()","7acbb6f3":"df_smoker_reduced = df_smoker.sample(50)\ndf_nonsmoker_reduced = df_nonsmoker.sample(50)\n\nplt.scatter(df_smoker_reduced.age,df_smoker_reduced.charges, label='Smokers')\nplt.scatter(df_nonsmoker_reduced.age,df_nonsmoker_reduced.charges, label='Non-Smokers')\nplt.title(\"Age V\/S Charges\")\nplt.xlabel(\"Age\")\nplt.ylabel(\"Charges\")\nplt.legend()\nplt.show()","b0f6e4d4":"plt.scatter(df_smoker.age,df_smoker.charges, label='Smokers', color='red', marker='^')\nplt.scatter(df_nonsmoker.age,df_nonsmoker.charges, label='Non-Smokers', color='silver', marker='o')\nplt.title(\"Age V\/S Charges\")\nplt.xlabel(\"Age\")\nplt.ylabel(\"Charges\")\nplt.legend()\nplt.show()","88f5fd66":"m,b,r,p,err = stats.linregress(df.age,df.charges)\nx=range(18,df.age.max())\ny=m*x + b\n\nplt.plot(x,y,color='magenta')\nplt.scatter(df.age,df.charges)\nplt.title(\"Age V\/S Charges\")\nplt.xlabel(\"Age\")\nplt.ylabel(\"Charges\")\nplt.show()","d496270b":"from statsmodels.stats.diagnostic import het_breuschpagan\nfrom statsmodels.stats.diagnostic import het_white\nfrom statsmodels.formula.api import ols\n\nmodel = ols(formula='charges~age',data=df).fit()\n\nwhite_test = het_white(model.resid, model.model.exog)\nb_test = het_breuschpagan(model.resid,model.model.exog)\n\noutput_df = pd.DataFrame(columns=['LM stat','LM p','F stat','F stat p'])\noutput_df.loc['White'] = white_test\noutput_df.loc['B-P'] = b_test\n\noutput_df","bef31d2f":"sns.set(color_codes=True)\nsns.jointplot(x='age',y='charges', data=df)\nplt.show()","fe29127f":"sns.set_style('white')\nsns.jointplot(x='age',y='charges',data=df, kind='hex');","40b4da3f":"#kernel density\n\nsns.jointplot(x='age',y='charges',data=df, kind='kde');","1ebac499":"f, ax = plt.subplots(figsize=(10,5))\ncmap = sns.cubehelix_palette(as_cmap=True, dark=0, light=1, reverse=False)\nsns.kdeplot(df.age, df.charges, cmap=cmap,n_levels=60,shade=True);","89389db0":"sns.pairplot(df);","20b3f52e":"g = sns.PairGrid(df)\ng.map_diag(sns.kdeplot)\ng.map_offdiag(sns.kdeplot,n_levels=10)","36655264":"from mpl_toolkits.mplot3d import Axes3D\n\nfont = {'size': 8}\nplt.rc('font', **font)\n\nfig = plt.figure()\nthree_d_plot = Axes3D(fig)\nthree_d_plot.scatter(df.age,df.bmi,df.charges)\n\nplt.show()","205bf7e4":"import plotly.express as px\n\nfig = px.scatter_3d(df,x='age',y='charges',z='bmi')\nfig.show()","ad5b45c7":"fig = px.scatter_3d(df,x='age',y='charges',z='bmi',color='smoker')\nfig.show()","40004801":"fig = px.scatter_3d(df,x='age',y='charges',z='bmi',color='smoker',symbol='sex')\nfig.show()","90377c72":"Just messing around and learning more about matplotlib library","a4b47315":"Seeing relationship between categorical featue of \"smoking\", age vs charges","3843715d":"label data type --    Feature data type -- Effect size stat -- Visualiztion\n\n- numeric\/num Pearson correlation(r) Scatterplot\n- numeric\/cat one-way ANOVA(F)  Bar Chart\n- categorical(cat)\/cat Pearson chi-square(X) CrossTab","f0e0d09a":"Charges is left-skewed","51ae713a":"Bivariate Stats \n\n- Num\/num relationships","5aa6aea5":"Different types of joint plots","ad78574f":"Boundaries and Middle","181c66a4":"GENERAL","749661d6":"above values are (corr, P value)","168525ca":"Heteroscedasticity\n\n- represents the spread of dots across all values of x","07c9167b":"Visualizing above calculated Stats","784702ac":"There is a clear relation that smokers have higher charges than those of non-smokers, plus it is directly proportional to the Age","c9b3bd7a":"Pearson correlation\n\n- effect size indication how much two numeric variables influence each other\n- if dataset does not depend on Pearson's C , we tend to use Kendall's C(tau) or Spearman's(rho ) correlation coefficient","73e4fde6":"Finding the best fit using Linear Regression ","47f43707":"There are 3 significant groups","0f6c76ec":"UNIVARIATE STATS\n-Exploring each variable at a time"}}