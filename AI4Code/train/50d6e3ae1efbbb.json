{"cell_type":{"958a9da3":"code","c47ded9b":"code","f4148d69":"code","8c6039c9":"code","1058212b":"code","8ef23337":"code","e252893d":"code","30f44843":"code","975fffca":"code","1c773da2":"code","6db38d38":"code","0c2b61d6":"code","c5c2655b":"code","23634d6a":"code","1916f4be":"code","d232001f":"code","bdbfaff6":"code","09f3e402":"code","7ef419f2":"code","1027ebb6":"code","040cc704":"code","7a3623f6":"code","cc98af6b":"code","21690f39":"code","e8839402":"code","00ddcbdb":"code","4ea5d393":"code","bb796d8e":"code","d46c4fca":"code","d12c8915":"markdown","6292f7ad":"markdown","f9ffa5e3":"markdown","21ca6e26":"markdown","72363468":"markdown"},"source":{"958a9da3":"import os\nimport re\nfrom datetime import datetime, timedelta\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport plotly.graph_objs as go\nfrom plotly.subplots import make_subplots","c47ded9b":"df = {}\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        df[filename] = pd.read_csv(os.path.join(dirname, filename))","f4148d69":"profit_pct = 0.05\n\ndf['pluang-gold-daily-dataset.csv']['updated_at'] = pd.to_datetime(df['pluang-gold-daily-dataset.csv']['updated_at'])\ndf_gold_pivot = df['pluang-gold-daily-dataset.csv'].pivot(index='updated_at', columns='quantity (gram)', values=['sell','buy'])\ndf_gold_ma = df_gold_pivot['sell'].rolling(window=60).mean()\ndf_gold_ma = df_gold_ma.rename(columns={1: \"Sell (MA - 2 Months)\"})\ndf_gold_ma_yearly = df_gold_pivot['sell'].rolling(window=365).mean()\ndf_gold_ma_yearly = df_gold_ma_yearly.rename(columns={1: \"Sell (MA - Yearly)\"})\ndf_gold_concat = pd.concat([df_gold_pivot, df_gold_ma, df_gold_ma_yearly], axis=1)\n\nfig = go.Figure([\n    go.Scatter(\n        name='MA 1y',\n        x=df_gold_concat.index,\n        y=df_gold_concat.iloc[:, 3],\n        mode='lines',\n        line=dict(color='rgb(255,127,80)'),\n    ),\n    go.Scatter(\n        name='MA 2m',\n        x=df_gold_concat.index,\n        y=df_gold_concat.iloc[:, 2],\n        mode='lines',\n        line=dict(color='rgb(31, 119, 180)'),\n    ),\n    go.Scatter(\n        name='MA 2m (upper)',\n        x=df_gold_concat.index,\n        y=df_gold_concat.iloc[:, 2]+df_gold_concat.iloc[:, 2]*profit_pct,\n        mode='lines',\n        marker=dict(color=\"#444\"),\n        line=dict(width=0),\n        showlegend=False\n    ),\n    go.Scatter(\n        name='MA 2m (lower)',\n        x=df_gold_concat.index,\n        y=df_gold_concat.iloc[:, 2]-df_gold_concat.iloc[:, 2]*profit_pct,\n        marker=dict(color=\"#444\"),\n        line=dict(width=0),\n        mode='lines',\n        fillcolor='rgba(68, 68, 68, 0.3)',\n        fill='tonexty',\n        showlegend=False\n    ),\n    go.Scatter(\n        name='Sell',\n        x=df_gold_concat.index,\n        y=df_gold_concat.iloc[:, 0],\n        mode='lines',\n        line=dict(color='rgb(34,139,34)'),\n    ),\n    go.Scatter(\n        name='Buy',\n        x=df_gold_concat.index,\n        y=df_gold_concat.iloc[:, 1],\n        mode='lines',\n        line=dict(color='rgb(178,34,34)'),\n    )\n])\nfig.update_layout(\n    yaxis_title='Price in Rupiah',\n    title='Gold [2019-05-17 : NOW]',\n    hovermode=\"x\"\n)\nfig.show()","8c6039c9":"df_result = df_gold_concat.loc['2021-01-01':]\n\nfig = go.Figure([\n    go.Scatter(\n        name='MA 1y',\n        x=df_result.index,\n        y=df_result.iloc[:, 3],\n        mode='lines',\n        line=dict(color='rgb(255,127,80)'),\n    ),\n    go.Scatter(\n        name='MA 2m',\n        x=df_result.index,\n        y=df_result.iloc[:, 2],\n        mode='lines',\n        line=dict(color='rgb(31, 119, 180)'),\n    ),\n    go.Scatter(\n        name='MA 2m (upper)',\n        x=df_result.index,\n        y=df_result.iloc[:, 2]+df_result.iloc[:, 2]*profit_pct,\n        mode='lines',\n        marker=dict(color=\"#444\"),\n        line=dict(width=0),\n        showlegend=False\n    ),\n    go.Scatter(\n        name='MA 2m (lower)',\n        x=df_result.index,\n        y=df_result.iloc[:, 2]-df_result.iloc[:, 2]*profit_pct,\n        marker=dict(color=\"#444\"),\n        line=dict(width=0),\n        mode='lines',\n        fillcolor='rgba(68, 68, 68, 0.3)',\n        fill='tonexty',\n        showlegend=False\n    ),\n    go.Scatter(\n        name='Sell',\n        x=df_result.index,\n        y=df_result.iloc[:, 0],\n        mode='lines',\n        line=dict(color='rgb(34,139,34)'),\n    ),\n    go.Scatter(\n        name='Buy',\n        x=df_result.index,\n        y=df_result.iloc[:, 1],\n        mode='lines',\n        line=dict(color='rgb(178,34,34)'),\n    )\n])\nfig.update_layout(\n    yaxis_title='Price in Rupiah',\n    title='Gold [2021-01-01 : NOW]',\n    hovermode=\"x\"\n)\nfig.show()","1058212b":"print(np.datetime64(df_gold_concat.index.values[-1], 'D'))\nprint()\n\ngold_price_buy = df_gold_concat.iloc[-1, 0]\ngold_price_sell = df_gold_concat.iloc[-1, 1]\ngold_MA_2m = df_gold_concat.iloc[-1, 2]\n\nif gold_MA_2m > gold_price_buy:\n    print(\"It looks like gold price is still under value despite of it's volatility!\")\n    print('buy!')\nelif gold_MA_2m + gold_MA_2m*0.1 < gold_price_sell:\n    print(\"The price has passed the upper threshold in 10% margin range, time to sell!\")\n    print('sell!')\nelse:\n    print(\"Gold price currently in steady-state, let's wait and see!\")\n    print('hold!')","8ef23337":"df_gold_logammulia = df['logammuliacom-gold-daily-dataset.csv']\n\n# df_gold_logammulia['unixtime'] = df['logammuliacom-gold-daily-dataset.csv']['unixtime'].map(lambda x: str(x)[:-3])\n# df_gold_logammulia['datetime'] = df_gold_logammulia['unixtime'].map(lambda x: datetime.fromtimestamp(int(x)).strftime('%Y-%m-%d %H:%M:%S'))\ndf_gold_logammulia['datetime'] = pd.to_datetime(df_gold_logammulia['datetime'], format='%Y-%m-%d %H:%M')\ndf_gold_logammulia = df_gold_logammulia.set_index('datetime')\n\ndf_result = df_gold_logammulia\nfig = go.Figure([\n    go.Scatter(\n        name='MA 1y',\n        x=df_result.index,\n        y=df_result.price,\n        mode='lines',\n        line=dict(color='rgb(255,127,80)'),\n    )\n])\nfig.update_layout(\n    yaxis_title='Price in Rupiah',\n    title='Gold [2010-01-04 : NOW]',\n    hovermode=\"x\"\n)\nfig.show()","e252893d":"start = datetime(2017, 1, 5)\nstart1 = start + timedelta(days = 1)\nend = start + timedelta(days = 362)\nend1 = end + timedelta(days = 1)\n\ndata_0 = df_gold_logammulia.loc[start:start1]\ndata_0 = data_0.iloc[0].price\ndata_1 = df_gold_logammulia.loc[end:end1]\ndata_1 = data_1.iloc[0].price\n\nprint(((data_1-data_0)\/data_0)*100)\n\ndf_result = df_gold_logammulia.loc[start:end1]\nfig = go.Figure([\n    go.Scatter(\n        name='MA 1y',\n        x=df_result.index,\n        y=df_result.price,\n        mode='lines',\n        line=dict(color='rgb(255,127,80)'),\n    )\n])\nfig.update_layout(\n    yaxis_title='Price in Rupiah',\n    title='Gold [2010-01-04 : NOW]',\n    hovermode=\"x\"\n)\nfig.show()","30f44843":"fig = go.Figure([\n    go.Scatter(\n        name='MA 1y',\n        x=df_gold_logammulia.index,\n        y=df_gold_logammulia.price,\n        mode='lines',\n        line=dict(color='rgb(255,127,80)'),\n    )\n])\nfig.update_layout(\n    yaxis_title='Price in Rupiah',\n    title='Gold [2010-01-04 : NOW]',\n    hovermode=\"x\"\n)\nfig.show()","975fffca":"df_fed_funds_rate = df['macrotrends-fed-funds-rate-historical-chart.csv']\ndf_fed_funds_rate['date'] = pd.to_datetime(df_fed_funds_rate['date'], format='%Y-%m-%d')\ndf_fed_funds_rate = df_fed_funds_rate.set_index('date')\n\ndf_wsj_snp500 = df['wsj-index-spx-historical-prices.csv']\ndf_wsj_snp500['Date'] = pd.to_datetime(df_wsj_snp500['Date'], format='%m\/%d\/%y')\ndf_wsj_snp500 = df_wsj_snp500.set_index('Date')","1c773da2":"fig = go.Figure([\n    go.Scatter(\n        name='Fed Funds Rate',\n        x=df_fed_funds_rate.index,\n        y=df_fed_funds_rate.iloc[:, 0],\n        mode='lines',\n        line=dict(color='rgb(255,127,80)'),\n    )\n])\nfig.update_layout(\n    yaxis_title='index in percentage',\n    title='Fed Funds Rate',\n    hovermode=\"x\"\n)\nfig.show()","6db38d38":"df_result = df_fed_funds_rate.loc[datetime(1990, 1, 1):datetime(2021, 5, 5)]\n\nfig = go.Figure([\n    go.Scatter(\n        name='Fed Funds Rate',\n        x=df_result.index,\n        y=df_result.iloc[:, 0],\n        mode='lines',\n        line=dict(color='rgb(255,127,80)'),\n    )\n])\nfig.update_layout(\n    yaxis_title='index in percentage',\n    title='Fed Funds Rate',\n    hovermode=\"x\"\n)\nfig.show()","0c2b61d6":"df_wsj_snp500 = df['wsj-index-spx-historical-prices.csv']\ndf_wsj_snp500['Date'] = pd.to_datetime(df_wsj_snp500['Date'], format='%m\/%d\/%y')\ndf_wsj_snp500 = df_wsj_snp500.set_index('Date')","c5c2655b":"df_us_gdp = df['stlouisfed-us-gdp.csv']\ndf_us_gdp['DATE'] = pd.to_datetime(df_us_gdp['DATE'], format='%Y-%m-%d')\ndf_us_gdp = df_us_gdp.set_index('DATE')\n\ndf_us_gdp.info()\ndf_us_gdp","23634d6a":"df_us_m2 = df['stlouisfed-us-m2.csv']\ndf_us_m2['DATE'] = pd.to_datetime(df_us_m2['DATE'], format='%Y-%m-%d')\ndf_us_m2 = df_us_m2.set_index('DATE')\n\ndf_us_m2.info()\ndf_us_m2","1916f4be":"# Create figure with secondary y-axis\nfig = make_subplots(specs=[[{\"secondary_y\": True}]])\n\n# Add traces\nfig.add_trace(\n    go.Scatter(\n        name='SNP500 Index',\n        x=df_wsj_snp500.index,\n        y=df_wsj_snp500.iloc[:, 0],\n        mode='lines',\n        line=dict(color='rgb(255,127,80)'),\n    ),\n    secondary_y=False,\n)\n\nfig.add_trace(\n    go.Scatter(\n        name='Fed Funds Rate',\n        x=df_fed_funds_rate.index,\n        y=df_fed_funds_rate.iloc[:, 0],\n        mode='lines',\n        line=dict(color='rgb(70,130,180)'),\n    ),\n    secondary_y=True,\n)\n\n# Add figure title\nfig.update_layout(\n    title_text=\"Double Y Axis Example\"\n)\n\n# Set x-axis title\nfig.update_xaxes(title_text=\"xaxis title\")\n\n# Set y-axes titles\nfig.update_yaxes(title_text=\"index\", secondary_y=False)\nfig.update_yaxes(title_text=\"%\", secondary_y=True)\n\nfig.show()","d232001f":"import plotly.graph_objects as go\n\nfig = go.Figure()\n\nfig.add_trace(go.Scatter(\n    x=df_wsj_snp500.index,\n    y=df_wsj_snp500.iloc[:, 0],\n    name=\"SNP500\"\n))\n\n\nfig.add_trace(go.Scatter(\n    x=df_fed_funds_rate.index,\n    y=df_fed_funds_rate.iloc[:, 0],\n    name=\"Fed Funds Rate\",\n    yaxis=\"y2\"\n))\n\nfig.add_trace(go.Scatter(\n    x=df_us_gdp.index,\n    y=df_us_gdp.iloc[:, 0],\n    name=\"US GDP\",\n    yaxis=\"y3\"\n))\n\nfig.add_trace(go.Scatter(\n    x=df_us_m2.index,\n    y=df_us_m2.iloc[:, 0],\n    name=\"US M2\",\n    yaxis=\"y4\"\n))\n\n\n# Create axis objects\nfig.update_layout(\n    xaxis=dict(\n        domain=[0.07, 0.93]\n    ),\n    yaxis=dict(\n        title=\"SNP500\",\n        titlefont=dict(\n            color=\"#1f77b4\"\n        ),\n        tickfont=dict(\n            color=\"#1f77b4\"\n        )\n    ),\n    yaxis2=dict(\n        title=\"Fed Funds Rate\",\n        titlefont=dict(\n            color=\"#ff7f0e\"\n        ),\n        tickfont=dict(\n            color=\"#ff7f0e\"\n        ),\n        anchor=\"free\",\n        overlaying=\"y\",\n        side=\"left\",\n        position=0\n    ),\n    yaxis3=dict(\n        title=\"US GDP\",\n        titlefont=dict(\n            color=\"#d62728\"\n        ),\n        tickfont=dict(\n            color=\"#d62728\"\n        ),\n        anchor=\"x\",\n        overlaying=\"y\",\n        side=\"right\"\n    ),\n    yaxis4=dict(\n        title=\"US M2\",\n        titlefont=dict(\n            color=\"#9467bd\"\n        ),\n        tickfont=dict(\n            color=\"#9467bd\"\n        ),\n        anchor=\"free\",\n        overlaying=\"y\",\n        side=\"right\",\n        position=1\n    )\n)\n\n# Update layout properties\nfig.update_layout(\n    title_text=\"multiple y-axes example\",\n#     width=1200,\n)\n\nfig.show()","bdbfaff6":"fig = go.Figure([\n    go.Scatter(\n        name='MA 1y',\n        x=df_fed_funds_rate.index,\n        y=df_fed_funds_rate.iloc[:, 0],\n        mode='lines',\n        line=dict(color='rgb(255,127,80)'),\n    )\n])\nfig.update_layout(\n    yaxis_title='index in percentage',\n    title='Fed Funds Rate',\n    hovermode=\"x\"\n)\nfig.show()","09f3e402":"# Create figure with secondary y-axis\nfig = make_subplots(specs=[[{\"secondary_y\": True}]])\n\n# Add traces\nfig.add_trace(\n    go.Scatter(\n        name='MA 1y',\n        x=df_gold_logammulia.index,\n        y=df_gold_logammulia.price,\n        mode='lines',\n        line=dict(color='rgb(255,127,80)'),\n    ),\n    secondary_y=False,\n)\n\nfig.add_trace(\n    go.Scatter(\n        name='MA 1y',\n        x=df_fed_funds_rate.index,\n        y=df_fed_funds_rate.iloc[:, 0],\n        mode='lines',\n        line=dict(color='rgb(70,130,180)'),\n    ),\n    secondary_y=True,\n)\n\n# Add figure title\nfig.update_layout(\n    title_text=\"Double Y Axis Example\"\n)\n\n# Set x-axis title\nfig.update_xaxes(title_text=\"xaxis title\")\n\n# Set y-axes titles\nfig.update_yaxes(title_text=\"<b>primary<\/b> yaxis title\", secondary_y=False)\nfig.update_yaxes(title_text=\"<b>secondary<\/b> yaxis title\", secondary_y=True)\n\nfig.show()","7ef419f2":"df['pluang-bitcoin-daily-dataset.csv']['priceStatDate'] = pd.to_datetime(df['pluang-bitcoin-daily-dataset.csv']['priceStatDate'])\ndf_btc_pivot = df['pluang-bitcoin-daily-dataset.csv'].pivot(index='priceStatDate', columns='currency', values=['closeSell'])","1027ebb6":"df_btc_pivot.plot(figsize=(25,13), grid=True)","040cc704":"df_btc_pivot.loc['2021-01-01':].plot(figsize=(25,13), grid=True)","7a3623f6":"df_btc_growth = df_btc_pivot\ndf_btc_growth['growth'] = df_btc_pivot['closeSell'].pct_change().mul(100).round(2)\ndf_gold_growth = df_gold_concat\ndf_gold_growth['sell (growth)'] = df_gold_concat.iloc[:,0].pct_change().mul(100).round(2)","cc98af6b":"df_concat = pd.concat([df_gold_growth, df_btc_growth.loc['2019-05-17':]], axis=1)\ndf_concat.iloc[:,0] = df_concat.iloc[:,0].ffill()\ndf_concat.iloc[:,3] = df_concat.iloc[:,0].pct_change().mul(100).round(2)\ndf_concat.iloc[:,4] = df_concat.iloc[:,4].ffill()\ndf_concat.iloc[:,5] = df_concat.iloc[:,4].pct_change().mul(100).round(2)","21690f39":"df_concat.iloc[:,3].plot(figsize=(25,13), grid=True)","e8839402":"start_date = '2021-01-01'\n\nplt.figure(figsize=(25,13))\nplt.xlabel('Gold growth vs BTC growth')\n\nax1 = df_concat.iloc[:,3].loc[start_date:].plot(color='blue', grid=True, label='Gold (growth)')\nax2 = df_concat.iloc[:,5].loc[start_date:].plot(color='red', grid=True, label='Bitcoin (growth)')\n\nh1, l1 = ax1.get_legend_handles_labels()\nh2, l2 = ax2.get_legend_handles_labels()\n\nplt.legend(h1+h2, l1+l2, loc=2)\nplt.show()","00ddcbdb":"df_concat_monthly = df_concat.resample('1M').last()\ndf_concat_monthly.iloc[:,3] = df_concat_monthly.iloc[:,0].pct_change().mul(100).round(2)\ndf_concat_monthly.iloc[:,5] = df_concat_monthly.iloc[:,4].pct_change().mul(100).round(2)","4ea5d393":"start_date = '2019-05-31'\n\nplt.figure(figsize=(25,13))\nplt.xlabel('Gold growth vs BTC growth')\n\nax1 = df_concat_monthly.iloc[:,3].loc[start_date:].plot(color='blue', grid=True, label='Gold (growth)')\nax2 = df_concat_monthly.iloc[:,5].loc[start_date:].plot(color='red', grid=True, label='Bitcoin (growth)')\n\nh1, l1 = ax1.get_legend_handles_labels()\nh2, l2 = ax2.get_legend_handles_labels()\n\nplt.legend(h1+h2, l1+l2, loc=2)\nplt.show()","bb796d8e":"df_concat_monthly = df_concat.resample('1M').mean()\ndf_concat_monthly.iloc[:,3] = df_concat_monthly.iloc[:,0].pct_change().mul(100).round(2)\ndf_concat_monthly.iloc[:,5] = df_concat_monthly.iloc[:,4].pct_change().mul(100).round(2)","d46c4fca":"start_date = '2019-05-31'\n\nplt.figure(figsize=(25,13))\nplt.xlabel('Gold growth vs BTC growth')\n\nax1 = df_concat_monthly.iloc[:,3].loc[start_date:].plot(color='blue', grid=True, label='Gold (growth)')\nax2 = df_concat_monthly.iloc[:,5].loc[start_date:].plot(color='red', grid=True, label='Bitcoin (growth)')\n\nh1, l1 = ax1.get_legend_handles_labels()\nh2, l2 = ax2.get_legend_handles_labels()\n\nplt.legend(h1+h2, l1+l2, loc=2)\nplt.show()","d12c8915":"Bitcoin","6292f7ad":"Let's be clear, I think if we want to gain some Return of Investment in a very short amount of time, looks like Gold is not an option. If we see the data since 2010, it's in a very stable state that steadily increasing 6% of return yearly. I have to say, if you got alot of free money in your pocket and you don't want to take any risk in your investment, Gold is a good option due to its steady-state increament and it still above yearly inflation.","f9ffa5e3":"In here, I use a naive Moving Average Model to evaluate current actual gold price whether it is over-value or under-value by looking in perspective of windowed time-range which I think is quite simple yet powerful. Though, this model still can't see how other commodities or public sentiment affecting the price.","21ca6e26":"<div><font size=3>Hi guys! In this notebook, I share my perspective and way of evaluating commodities price in some statistic manners to allocate portions of my wealth by converting them to assets. In the mean of time, I still elaborate and evaluate my model to fit the actual market. So bear with me in couple future of weeks or months guys!\n<br>\n<br>\n<div><font size=3>Feel free to reach me out in the comments section or my linkedin <a href=\"https:\/\/www.linkedin.com\/in\/ibnummuhammad\">https:\/\/www.linkedin.com\/in\/ibnummuhammad<\/a> if you'd like to discuss anything :)\n<br>\n<br>\n<div><font size=3>And last but not least, I automate the data collection. Check out my github for the data scraping code <a href=\"https:\/\/github.com\/ibnummuhammad\/financial-data-scraping\">https:\/\/github.com\/ibnummuhammad\/financial-data-scraping<\/a> !","72363468":"<div align='center'><font size=\"5\">Financial Statement Correlation Data Analysis<\/font><\/div>\n<!-- <div align='center'><font size=\"4\">Ibnu Muhammad<\/font><\/div> -->\n<br>\n<hr>"}}