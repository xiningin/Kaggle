{"cell_type":{"a8e38315":"code","ef616bb7":"code","59bb2db0":"code","4c40f6aa":"code","b948b7c7":"code","66882970":"code","652556a4":"code","980f7772":"code","f92b6fe5":"code","973a4341":"code","f54af443":"code","48af46df":"code","027cb761":"code","554d4f76":"code","70491324":"code","ce76c46a":"code","12896c9d":"code","531ddcc6":"code","38bc96f7":"code","c893ea50":"code","051755b7":"code","a40db187":"code","e9c7825c":"code","9d168b2b":"code","7695a186":"code","a540cccf":"code","ff7b080c":"code","93b15dea":"code","ebad2461":"code","b3d13b3f":"code","ed73c5c8":"code","10ae329c":"code","fc4e982e":"code","f6a334ad":"code","e00302a8":"code","4975ea76":"code","fcb4ab29":"code","78d219ec":"code","091b0db6":"code","d696b7d0":"code","57c88872":"code","86db57c6":"code","ce3fa4bb":"code","bdfaa0ba":"code","b2d12923":"code","5446ca6b":"code","ab605d2f":"code","f90bedd6":"code","3316824b":"code","370a9352":"markdown","691bec6e":"markdown","4d4a29b0":"markdown","5df23413":"markdown","1d91a2a9":"markdown","f431c2fd":"markdown","80ac766c":"markdown","6df9ed67":"markdown","aac3bc3a":"markdown","9a31df7e":"markdown","dedda0a9":"markdown","b29d12a7":"markdown","03a8ae08":"markdown","6e64cd73":"markdown","4ef4cb7c":"markdown","77afbaad":"markdown","232acec8":"markdown","ff58d90f":"markdown","fa225b81":"markdown","07517ca5":"markdown","432a128a":"markdown","71590280":"markdown","748a76e5":"markdown","c2aa6e57":"markdown","12362f96":"markdown","5d12fc0a":"markdown","e55e35ad":"markdown","8aef9ab1":"markdown","d93ea258":"markdown","6eb507c2":"markdown","0797ca4a":"markdown","98043434":"markdown","88ae34d3":"markdown","653fd8bb":"markdown","10b5253a":"markdown","e1b45ef2":"markdown","8451ede2":"markdown","28661d2a":"markdown","8267a834":"markdown","bf10bccb":"markdown","55386bfa":"markdown","ca2958b8":"markdown","f95f7e22":"markdown","d2cb657c":"markdown","4c19dfe9":"markdown","b464c28e":"markdown"},"source":{"a8e38315":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport seaborn as sns # visualization\nimport matplotlib.pyplot as plt # visualization\nimport missingno as msno # visualizatin for missing values\n\nimport warnings\nwarnings.filterwarnings(\"ignore\") # ignore warnings\n\nfrom sklearn.model_selection import train_test_split # train and test split\n\nfrom sklearn.impute import KNNImputer # filling missing data with KNN method\n\nfrom sklearn.preprocessing import LabelEncoder # filling missing categorical values with label encoder method\nimport category_encoders as ce\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ef616bb7":"# load file \ndf = pd.read_csv(\"\/kaggle\/input\/protein-data-set\/pdb_data_no_dups.csv\")","59bb2db0":"df.head(3)","4c40f6aa":"df.info()","b948b7c7":"df.describe().T","66882970":"df.publicationYear[df.publicationYear==201.0]=np.nan","652556a4":"df.phValue[df.phValue>14]=np.nan","980f7772":"df.drop(\"pdbxDetails\", axis=1, inplace = True)","f92b6fe5":"df.classification.nunique()","973a4341":"df.experimentalTechnique.nunique()","f54af443":"df.structureId.nunique()","48af46df":"df.macromoleculeType.nunique()","027cb761":"df.crystallizationMethod.nunique()","554d4f76":"df.structureId.value_counts(ascending=False).head(10)","70491324":"# Missing Value Table\ndef missing_value_table(df):\n    missing_value = df.isna().sum().sort_values(ascending=False)\n    missing_value_percent = 100 * df.isna().sum()\/\/len(df)\n    missing_value_table = pd.concat([missing_value, missing_value_percent], axis=1)\n    missing_value_table_return = missing_value_table.rename(columns = {0 : 'Missing Values', 1 : '% Value'})\n    cm = sns.light_palette(\"lightgreen\", as_cmap=True)\n    missing_value_table_return = missing_value_table_return.style.background_gradient(cmap=cm)\n    return missing_value_table_return\n  \nmissing_value_table(df)","ce76c46a":"sns.pairplot(df)\nsns.set(style=\"ticks\", color_codes=True)","12896c9d":"corr = df.corr()\nplt.figure(figsize=(12,5))\nsns.heatmap(corr, annot=True)","531ddcc6":"sns.lmplot(x = \"densityPercentSol\", y = \"densityMatthews\", line_kws={'color': 'red'}, data = df);\nplt.title(\"densityMatthews-densityPercentSol\",color = 'darkblue',fontsize=15)\nplt.show()","38bc96f7":"density_data = df[['densityMatthews','densityPercentSol']] \nsns.pairplot(density_data);\nplt.title(\"densityMatthews-densityPercentSol\",color = 'darkblue',fontsize=15)\nplt.show()","c893ea50":"plt.figure(figsize=(20,18))\nex = df.macromoleculeType.value_counts(ascending=False)[:5]\nfigureObject, axesObject = plt.subplots() \nexplode = (0.2, 0.5, 0.5, 0.5, 0.5)\nplt.title(\"Macro Molecule Type\",color = 'darkblue',fontsize=15)\n\naxesObject.pie(ex.values,\n               labels   = ex.index,\n               shadow   = True,                       \n               explode  = explode,\n               autopct  = '%.1f%%',\n               wedgeprops = { 'linewidth' : 3,'edgecolor' : \"orange\" })                              \n             \naxesObject.axis('equal') \n\nplt.show() ","051755b7":"experimentalTechnique=df[\"experimentalTechnique\"].value_counts(ascending=False)[:5]\nplt.figure(figsize=[10,5])\nplt.plot(experimentalTechnique, color=\"#588da8\", linestyle=\"--\", linewidth=3, label = \"experimentalTechnique\")\nplt.title(\"Experimental Technique-Frequency\",color = 'darkblue',fontsize=15)\nplt.xlabel(\"Experimental Technique\")\nplt.ylabel(\"Frequency\")\nplt.show()","a40db187":"classification = df.classification.value_counts()[:10]\nplt.figure(figsize=(12,5))\nsns.barplot(x=classification.index, y=classification.values, palette=\"dark\")\nplt.xticks(rotation='vertical')\nplt.ylabel('Number of Classification')\nplt.xlabel('Classification Types')\nplt.title('Top 10 Classification',color = 'darkblue',fontsize=15);","e9c7825c":"def ph(ph):\n    if ph < 7 :\n        ph = 'Acidic'\n    elif ph > 7:\n        ph = 'Base'\n    else:\n        ph = 'Neutral'\n    return ph","9d168b2b":"df_ph = df.dropna(subset=[\"phValue\"])\ndf_ph['pH'] = df_ph['phValue'].apply(ph)\nlabels = df_ph['pH'].value_counts().index\nvalues = df_ph['pH'].value_counts().values","7695a186":"fig1, ax1 = plt.subplots()\nax1.pie(values, labels=labels, autopct='%1.1f%%')\nax1.axis('equal')\nplt.title(\"Acid-Base-Neutral Balance\",color = 'darkblue',fontsize=15)\nplt.show()","a540cccf":"plt.figure(figsize=(12,5))\nsns.scatterplot(x=df.publicationYear.value_counts().sort_index().index, y=df.publicationYear.value_counts().sort_index().values)\nplt.xticks(rotation='vertical')\nplt.ylabel('Frequency')\nplt.xlabel('Years')\nplt.title('Publication Distribution by Years',color = 'darkblue',fontsize=15);","ff7b080c":"y = df[[\"classification\"]] # target\nx = df.drop(\"classification\", axis=1)\n\nx_train, x_test, y_train, y_test = train_test_split(x,y,random_state=42, test_size=0.2)","93b15dea":"columns = x_train.select_dtypes([\"int\",\"float64\",\"int64\"])\n\ndel columns[\"phValue\"] # delete unneccessary value\ndel columns[\"publicationYear\"] # delete unneccessary value","ebad2461":"lower_and_upper = {} # storage\nx_train_copy = x_train.copy() # train copy \n\nfor col in columns.columns: # outlier detect\n    q1 = x_train[col].describe()[4] # Q1 = Quartile 1 median 25 \n    q3 = x_train[col].describe()[6] # Q3 = Quartile 3 median 75 \n    iqr = q3-q1  #IQR Q3 -Q1\n    \n    lower_bound = q1-(1.5*iqr)\n    upper_bound = q3+(1.5*iqr)\n    \n    lower_and_upper[col] = (lower_bound, upper_bound)\n    x_train_copy.loc[(x_train_copy.loc[:,col]<lower_bound),col]=lower_bound*0.75\n    x_train_copy.loc[(x_train_copy.loc[:,col]>upper_bound),col]=upper_bound*1.25\n    \nlower_and_upper","b3d13b3f":"x_test_copy = x_test.copy() # train copy   \n\nfor col in columns.columns:\n    x_test_copy.loc[(x_test_copy.loc[:,col]<lower_and_upper[col][0]),col]=lower_and_upper[col][0]*0.75\n    x_test_copy.loc[(x_test_copy.loc[:,col]>lower_and_upper[col][1]),col]=lower_and_upper[col][1]*1.25","ed73c5c8":"msno.bar(df, figsize=(15,8), sort='descending');","10ae329c":"msno.matrix(df)\nplt.title(\"Missing Value\",color = 'darkblue',fontsize=15)\nplt.show()","fc4e982e":"msno.heatmap(df)\nplt.title(\"Missing Value Correlation HeatMap\",color = 'darkblue',fontsize=15)\nplt.show()","f6a334ad":"x_train_copy['macromoleculeType'].fillna(x_train_copy['macromoleculeType'].mode()[0], inplace=True) # fill missing data with mode","e00302a8":"x_test_copy['macromoleculeType'].fillna(x_test_copy['macromoleculeType'].mode()[0], inplace=True) # fill missing data with mode","4975ea76":"x_train_resol_std, x_train_resol_mean = x_train_copy.resolution.std(), x_train_copy.resolution.mean() # mean and standard deviation\nrandom = np.random.uniform(x_train_resol_std, x_train_resol_mean, 113120) # 113120 numbers of rows \nx_train.resolution = x_train.resolution.mask(x_train.resolution.isnull(), random)","fcb4ab29":"x_test_resol_std, x_test_resol_mean = x_test_copy.resolution.std(), x_test_copy.resolution.mean() # mean and standard deviation\nrandom = np.random.uniform(x_test_resol_std, x_test_resol_mean, 28281) # 28281 numbers of rows \nx_test.resolution = x_test.resolution.mask(x_test.resolution.isnull(), random)","78d219ec":"imputer = KNNImputer(n_neighbors=5)\nimputer.fit_transform([x_train.crystallizationTempK])","091b0db6":"imputer = KNNImputer(n_neighbors=5)\nimputer.fit_transform([x_train.densityMatthews])","d696b7d0":"imputer = KNNImputer(n_neighbors=5)\nimputer.fit_transform([x_train.densityPercentSol])","57c88872":"imputer = KNNImputer(n_neighbors=5)\nimputer.fit_transform([x_train.phValue])","86db57c6":"imputer = KNNImputer(n_neighbors=5)\nimputer.fit_transform([x_train.resolution])","ce3fa4bb":"imputer = KNNImputer(n_neighbors=5)\nimputer.fit_transform([x_train.publicationYear])","bdfaa0ba":"imputer = KNNImputer(n_neighbors=5)\nimputer.fit_transform([x_test.crystallizationTempK])","b2d12923":"imputer = KNNImputer(n_neighbors=5)\nimputer.fit_transform([x_test.densityMatthews])","5446ca6b":"imputer = KNNImputer(n_neighbors=5)\nimputer.fit_transform([x_test.densityPercentSol])","ab605d2f":"imputer = KNNImputer(n_neighbors=5)\nimputer.fit_transform([x_test.phValue])","f90bedd6":"imputer = KNNImputer(n_neighbors=5)\nimputer.fit_transform([x_test.resolution])","3316824b":"imputer = KNNImputer(n_neighbors=5)\nimputer.fit_transform([x_test.publicationYear])","370a9352":"* Filling test resolution with the number of rows as random as the mean subtracted from standard deviation.","691bec6e":"* when we look this describe table phValue must be 0-14 but there is max value 724.\n* publicationYear has a value of 201, which is unlikely.\n* we can examine that proteins are denatured at 50-60 celsius degrees or above 10 pH and below 10-15 celsius degrees or 4 pH.","4d4a29b0":"<a id=\"16\"><\/a>\n## c) KNN Method","5df23413":"<a id=\"0\"><\/a>\n# 0) Load Data","1d91a2a9":"<a id=\"11\"><\/a>\n# 4) Missing Value","f431c2fd":"In statistics, an outlier is a data point that differs significantly from other observations.\n\n* Outlier is smaller than Q1-1.5(Q3-Q1) and higher than Q3+1.5(Q3-Q1) .\n\n    * (Q3-Q1) = IQR (INTER QUARTILE RANGE)\n    * Q3 = Third Quartile(%75)\n    * Q1 = First Quartile(%25)","80ac766c":"<a id=\"7\"><\/a>\n## Classification","6df9ed67":"* As seen from the chart, the most common type of molecule is protein.","aac3bc3a":"<a id=\"15\"><\/a>\n## b) Mean and Std Method","9a31df7e":"<a id=\"1\"><\/a>\n# 1) Variable Description\n1. **structureId**: identity of the structure\n1. **classification**: classification type\n1. **experimentalTechnique**: technique of experiment\n1. **macromoleculeType**: type of macromolecule\n1. **residueCount**: number of residue\n1. **resolution**: amount of resolution\n1. **structureMolecularWeight**: molecular weight\n1. **crystallizationMethod**: method of crystallization\n1. **crystallizationTempK**: crystallization temperature in Kelvin \n1. **densityMatthews**: crystalline density \n1. **densityPercentSol**: resolution ratio by density\n1. **pdbxDetails**: detail about row\n1. **phValue**: PH value \n1. **publicationYear**: published year","dedda0a9":"* removing unnecessary column.(pdbxDetails)","b29d12a7":"* The link between density and density dissolution rate","03a8ae08":"<a id=\"14\"><\/a>\n## a) Mode Method","6e64cd73":"* first look at the dataset","4ef4cb7c":"# Introduction\n![](https:\/\/image.slidesharecdn.com\/proteinstructureprediction1-190207163342\/95\/protein-structure-levels-1-638.jpg?cb=1549788361)\n## Aim:\nprediction of classification of molecules according to data values.\n\n## Context:\n\nThis is a protein data set retrieved from Research Collaboratory for Structural Bioinformatics (RCSB) Protein Data Bank (PDB).\n\nThe PDB archive is a repository of atomic coordinates and other information describing proteins and other important biological macromolecules. Structural biologists use methods such as X-ray crystallography, NMR spectroscopy, and cryo-electron microscopy to determine the location of each atom relative to each other in the molecule. They then deposit this information, which is then annotated and publicly released into the archive by the wwPDB.\n\n## Content:\n0. [Load and Check Data](#0)\n1. [Variable Description](#1)\n1. [Data Visualization](#2)\n    * [Correlation](#3)\n    * [densityMatthews-densityPercentSol](#4)\n    * [MacromoleculeType](#5)\n    * [experimentalTechnique](#6)\n    * [Classification](#7)\n    * [phValue](#8)\n    * [publicationYear](#9)\n1. [Outliers Detection](#10)\n1. [Missing Value Imputation](#11)\n    * [Missing Value Visualization](#12)\n    * [Fill Missing Value](#13)\n        * [Mode Method](#14)\n        * [Mean and Std Method](#15)\n        * [KNN Method](#16)","77afbaad":"<a id=\"8\"><\/a>\n## phValue","232acec8":"* Filling train macromoleculeType with mode.","ff58d90f":"Some values in the structurId column have multiple values so some values have same structureId:\n1. 1UJQ    4\n1. 3NO0    4\n1. 2FYM    4\n1. 4KJ7    3\n1. 3K6U    3\n1. ...\n\nWe may need to review these values.","fa225b81":"* Looking at the classification, the sum of the top 3 data clearly provides the majority.","07517ca5":"<a id=\"4\"><\/a>\n## densityMatthews-densityPercentSol","432a128a":"<a id=\"2\"><\/a>\n# 2) Data Visualization","71590280":"* pairplot to compare each column","748a76e5":"* crystallizationMethod missing value depends on crystallizationTempK missing value, but crystallizationTempK missing value is not depends on crystallizationMethod missing value.\n* there are the highest correlation between densityMatthews and densityPercentSol. If one variable changes, there will be another","c2aa6e57":"<a id=\"10\"><\/a>\n# 3) Outliers Detection","12362f96":"* Acidic: %47.5\n* Base: %41.0\n* Neutral: %11.5","5d12fc0a":"<a id=\"5\"><\/a>\n## MacromoleculeType","e55e35ad":"<a id=\"12\"><\/a>\n# Missing Value Visualization","8aef9ab1":"<a id=\"3\"><\/a>\n## Correlation","d93ea258":"<a id=\"9\"><\/a>\n## publicationYear","6eb507c2":"* train and test separation","0797ca4a":"* Filling test macromoleculeType with mode.","98043434":"* Looking at the 8 values, it is seen that the white lines are missing value rows.\n* We can think of a link about the crystallizationMethod and crystallizationTempK because the white lines are almost same.\n* 5 lines are empty at the same time and 13 lines are filled at the same time.","88ae34d3":"In missing value table three most missing values \n\n1. crystallizationMethod\t45159\n1. crystallizationTempK\t44362\n1. phValue\t36291","653fd8bb":"* outlier detection for x_test values","10b5253a":"<a id=\"13\"><\/a>\n# Fill Missing Value","e1b45ef2":"* float64(7): resolution, structureMolecularWeight, crystallizationTempK, densityMatthews, densityPercentSol, phValue, publicationYear\n* int64(1): residueCount\n* object(6): structureId, classification, experimentalTechnique, macromoleculeType, crystallizationMethod, pdbxDetails\n* rows: 141401\n* columns: 14   ","8451ede2":"* Looking at the data, it is clear that x-ray diffraction is the most used technique.","28661d2a":"* Filling train resolution with the number of rows as random as the mean subtracted from standard deviation.","8267a834":"## x_test KNN\n* KNN imputation for each columns without for the columns in the upper rows(macromoleculeType-resolution)","bf10bccb":"* outlier detection for x_train values","55386bfa":"* \nIt is seen that it has started a great rise after 1992.","ca2958b8":"* Examination of the unique value categorical variables","f95f7e22":"## x_train KNN\n* KNN imputation for each columns without for the columns in the upper rows(macromoleculeType-resolution)","d2cb657c":"* Looking at the correlation between numerical values. Light colors are values with higher correlations\n* there is a good correlation between densityMatthews and densityPercentSol.(0.84)\n* another correlation that can be taken into consideration is structureMolecularWeight-residueCount(0.55)","4c19dfe9":"<a id=\"6\"><\/a>\n## experimentalTechnique","b464c28e":"* keeping the necessary columns and removing unnecessary"}}