{"cell_type":{"27a02472":"code","0b31c844":"code","f2a99bba":"code","92dda28e":"code","f0870041":"code","345aac74":"code","36bb07ae":"code","08e2728c":"code","6e58ce81":"code","20b9efec":"code","1a480489":"code","f21c4ee5":"code","7e709c46":"code","064b4b6a":"code","0688bf8d":"code","65e20370":"code","288fa0de":"markdown","91720447":"markdown","f78b81a6":"markdown","c905d62c":"markdown","87e4be12":"markdown","7e4a0c7b":"markdown"},"source":{"27a02472":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0b31c844":"file = pd.read_csv(\"\/kaggle\/input\/education-in-india\/Statement_SES_2011-12-Enrlment.csv\")\nfile","f2a99bba":"data = file.iloc[8:,0:]\ndata","92dda28e":"for col in data.columns:\n    print(col)","f0870041":"res = data.drop(columns=['All Categories - Class I-V - Boys',\n                        'All Categories - Class I-V - Girls',\n                        'All Categories - Class VI-VIII - Boys',\n                        'All Categories - Class VI-VIII - Girls',\n                        'All Categories - Class IX-X - Boys',\n                        'All Categories - Class IX-X - Girls',\n                        'All Categories - Class XI-XII - Boys',\n                        'All Categories - Class XI-XII - Girls',\n                        'Scheduled Caste Category - Class I-V - Boys',\n                        'Scheduled Caste Category - Class I-V - Girls',\n                        'Scheduled Caste Category - Class VI-VIII - Boys',\n                        'Scheduled Caste Category - Class VI-VIII - Girls',\n                        'Scheduled Caste Category - Class IX-X - Boys',\n                        'Scheduled Caste Category - Class IX-X - Girls',\n                        'Scheduled Caste Category - Class XI-XII - Boys',\n                        'Scheduled Caste Category - Class XI-XII - Girls',\n                        'Scheduled Tribe Category - Class I-V - Boys',\n                        'Scheduled Tribe Category - Class I-V - Girls',\n                        'Scheduled Tribe Category - Class VI-VIII - Boys',\n                        'Scheduled Tribe Category - Class VI-VIII - Girls',\n                        'Scheduled Tribe Category - Class IX-X - Boys',\n                        'Scheduled Tribe Category - Class IX-X - Girls',\n                        'Scheduled Tribe Category - Class XI-XII - Boys',\n                        'Scheduled Tribe Category - Class XI-XII - Girls',\n                        ])","345aac74":"for col in res.columns:\n    print(col)","36bb07ae":"temp=res","08e2728c":"temp.iloc[:,1] += temp.iloc[:,5]+temp.iloc[:,9]\ntemp.iloc[:,2] += temp.iloc[:,6]+temp.iloc[:,10]\ntemp.iloc[:,3] += temp.iloc[:,7]+temp.iloc[:,11]\ntemp.iloc[:,4] += temp.iloc[:,8]+temp.iloc[:,12]\ntemp","6e58ce81":"temp = temp.drop(columns=['Scheduled Caste Category - Class I-V - Total',\n                          'Scheduled Caste Category - Class VI-VIII - Total',\n                          'Scheduled Caste Category - Class IX-X - Total',\n                          'Scheduled Caste Category - Class XI-XII - Total',\n                          'Scheduled Tribe Category - Class I-V - Total',\n                          'Scheduled Tribe Category - Class VI-VIII - Total',\n                          'Scheduled Tribe Category - Class IX-X - Total',\n                          'Scheduled Tribe Category - Class XI-XII - Total',])\ntemp","20b9efec":"temp = temp.rename(columns={\"All Categories - Class I-V - Total\":\"1-5\",\n                    \"All Categories - Class VI-VIII - Total\":\"5-8\",\n                    \"All Categories - Class IX-X - Total\":\"9-10\",\n                    \"All Categories - Class XI-XII - Total\":\"11-12\"})\ntemp","1a480489":"year=[]\nfor i in temp.iloc[:,0]:\n    i = i[:4]\n    year.append(int(i))\n\ntemp = pd.DataFrame(temp)\ntemp.insert(0,\"year\",year)\ntemp = temp.drop(columns=['Year'])\ntemp","f21c4ee5":"data = temp.to_numpy()\ndata","7e709c46":"data=data.T\ndata","064b4b6a":"import matplotlib.pyplot as plt\nplt.plot(data[0],data[1],'.')\nplt.plot(data[0],data[2],'.')\nplt.plot(data[0],data[3],'.')\nplt.show()","0688bf8d":"from sklearn.linear_model import LinearRegression\nreg1to5 = LinearRegression()\nreg6to8 = LinearRegression()\nreg9to10 = LinearRegression()","65e20370":"reg1to5.fit(data[0].reshape(-1,1),data[1].reshape(-1,1))\nprint(\"Students who are learning from 1 to 5 in 2019 : \",round(reg1to5.predict([[2019]])[0][0],2),\"millions\")\nprint(\"Students who are learning from 1 to 5 in 2020 : \",round(reg1to5.predict([[2020]])[0][0],2),\"millions\")\nreg6to8.fit(data[0].reshape(-1,1),data[2].reshape(-1,1))\nprint(\"\\nStudents who are learning from 6 to 8 in 2019 : \",round(reg6to8.predict([[2019]])[0][0],2),\"millions\")\nprint(\"Students who are learning from 6 to 8 in 2020 : \",round(reg6to8.predict([[2020]])[0][0],2),\"millions\")\nreg9to10.fit(data[0].reshape(-1,1),data[3].reshape(-1,1))\nprint(\"\\nStudents who are learning from 9 to 10 in 2019 : \",round(reg9to10.predict([[2019]])[0][0],2),\"millions\")\nprint(\"Students who are learning from 9 to 10 in 2020 : \",round(reg9to10.predict([[2020]])[0][0],2),\"millions\")","288fa0de":"# Model\nHere for prediction Linear regression is used.","91720447":"# Visualization\nThe categorized data is plotted in the same graph","f78b81a6":"# Introduction\n\nStudents enrolled in different classes and also in different categories is given by this dataset. This dataset gives the data from 1950 to 2011. But the data from 1950 to 1985 is collected in 5 year term.So here the data is omitted to follow uniformity in the data.The categories in the data are joined and then the students enrollment is predicted for 2019 (the year when prediction is done) and also in 2020 (people might see this notebook in 2020).\n","c905d62c":"1. If you like my work, give a thumbs up to dataset. Comments are always welcome!.","87e4be12":"The model predicts the students who are getting graded in India.","7e4a0c7b":"# Data Preprocessing\nData in the initial stages are recorded once in every five years. So we can eliminate the data upto 1986. \nAnd the rest of data is categorized to 3 groups such as\n   - class 1 to 5\n   - class 6 to 8\n   - class 9 to 10\n"}}