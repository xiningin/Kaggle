{"cell_type":{"0507bf9d":"code","c49fef8e":"code","4021a97c":"code","0d2d020f":"code","87cd7fda":"code","b0874276":"code","b28409a0":"code","42059ed1":"code","c4ee4146":"code","f7d5ddfe":"code","db8eaa91":"code","91ef8b7f":"code","da185e58":"code","a1279874":"code","c15a820b":"code","d4b7a5d6":"code","afa978f4":"code","b6493028":"code","e685bb8b":"code","88a99fd4":"code","3e041d73":"code","89395007":"code","b454329f":"code","95410a66":"code","54833c51":"markdown","c03b7d09":"markdown","d8528610":"markdown","77f745ee":"markdown","63b14b01":"markdown","4d698791":"markdown","c6ea0283":"markdown","6c053aba":"markdown","a022b547":"markdown","d7b4b435":"markdown"},"source":{"0507bf9d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c49fef8e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","4021a97c":"dataset = pd.read_csv('\/kaggle\/input\/wine-quality-by-uci\/winequality-red.csv', delimiter=';')\ndataset2 = pd.read_csv('\/kaggle\/input\/wine-quality-by-uci\/winequality-white.csv', delimiter=';')\ndataset.head()","0d2d020f":"dataset2.head()","87cd7fda":"dataset = pd.concat([dataset, dataset2], ignore_index=True)","b0874276":"dataset.info()","b28409a0":"dataset['quality'] = dataset['quality']>5","42059ed1":"dataset['quality'] = dataset['quality'].astype(int)","c4ee4146":"dataset.describe()","f7d5ddfe":"X = dataset.iloc[:, :-1].values\ny = dataset.iloc[:, -1].values","db8eaa91":"from sklearn.preprocessing import StandardScaler\nsc_X = StandardScaler()\nX = sc_X.fit_transform(X)","91ef8b7f":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)","da185e58":"from sklearn.linear_model import LogisticRegression\nclassifier = LogisticRegression()\nclassifier.fit(X_train, y_train)","a1279874":"y_pred = classifier.predict(X_test)","c15a820b":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)\ncm","d4b7a5d6":"from sklearn.model_selection import cross_val_score","afa978f4":"accuracies = cross_val_score(estimator=classifier, X=X_train, y=y_train, cv=10)","b6493028":"accuracies.mean()","e685bb8b":"ns_probs = [0 for i in range(len(y_test))]","88a99fd4":"lr_probs = classifier.predict_proba(X_test)[:, 1]","3e041d73":"from sklearn.metrics import roc_auc_score, roc_curve","89395007":"ns_auc = roc_auc_score(y_test, ns_probs)\nlr_auc = roc_auc_score(y_test, lr_probs)\nprint('No skill AUC : ', ns_auc)\nprint('Logistic Regression AUC : ', lr_auc)","b454329f":"ns_fpr, ns_tpr, _ = roc_curve(y_test, ns_probs)\nlr_fpr, lr_tpr, _ = roc_curve(y_test, lr_probs)","95410a66":"plt.plot(ns_fpr, ns_tpr, linestyle='--', label='No skill AUC : {}'.format(ns_auc))\nplt.plot(lr_fpr, lr_tpr, marker='.', label='Logistic AUC : {0:.2f}'.format(lr_auc))\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.legend()\nplt.plot()","54833c51":"**Read data**","c03b7d09":"**Create model**","d8528610":"pre processing","77f745ee":"**Feature Scaling**","63b14b01":"**Predict**","4d698791":"**Accuracy - k fold cross validation**","c6ea0283":"**Train test split**","6c053aba":"**Confusion matrix**","a022b547":"**Train test split**","d7b4b435":"**AUC and ROC curve**"}}