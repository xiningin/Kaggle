{"cell_type":{"f8548e5e":"code","62b7e136":"code","900bb5e0":"code","57ee2487":"code","84127fb1":"code","ee478aa7":"code","fc25fd71":"code","aeddf3a3":"code","f16781d7":"code","53bb6df1":"code","6f20c840":"code","eb21c7eb":"code","bbd63505":"markdown","f04bd900":"markdown","133983ca":"markdown"},"source":{"f8548e5e":"import math\nimport numpy as np\nimport pandas as pd\n\ndf = pd.read_csv('..\/input\/covid-world-vaccination-progress\/country_vaccinations.csv')\nlen(df)","62b7e136":"df.head()","900bb5e0":"df.shape","57ee2487":"df.describe()","84127fb1":"df = df.fillna(0)\ndf","ee478aa7":"subdata = df[['country', 'date', 'daily_vaccinations', 'vaccines']]\naveraged_data = []\n\nfor row in subdata.itertuples():\n    #print(row)\n    vaccines = row.vaccines.split(',')\n    number = len(vaccines)\n    count = 0\n    total_vaccinations = row.daily_vaccinations\n    average = float(math.ceil(row.daily_vaccinations \/ number))\n    remain = row.daily_vaccinations - average * (number - 1)\n    \n    for vac in vaccines:\n        if (vac != vaccines[number - 1]):\n            averaged_data.append((row.country, row.date, average, vac.strip()))\n        else:\n            averaged_data.append((row.country, row.date, remain, vac.strip()))\n        \naveraged_data = pd.DataFrame(averaged_data, columns = ['country', 'date', 'daily_vaccinations', 'vaccines'])\naveraged_data","fc25fd71":"from matplotlib import pyplot as pl","aeddf3a3":"import plotly.express as px","f16781d7":"top = 30\n\nvaccinations_data = df.groupby('country')['total_vaccinations'].max()\nvaccinations_data = pd.DataFrame(vaccinations_data)\nvaccinations_data = vaccinations_data.sort_values(ascending=False, by='total_vaccinations').iloc[:top]","53bb6df1":"fig = px.bar(x=vaccinations_data.index, y=vaccinations_data['total_vaccinations'],\n             color=vaccinations_data.index,\n             title=f'Top {top} Countries - Total Vaccinations',\n             labels={\"x\": \"Country\", \"y\": \"Number of Vaccinations\"},\n             color_discrete_sequence =px.colors.sequential.Electric)\nfig.show()","6f20c840":"fully_vaccinated_ratio_data = df.groupby('country')['people_fully_vaccinated_per_hundred'].max()\nfully_vaccinated_ratio_data = pd.DataFrame(fully_vaccinated_ratio_data)\nfully_vaccinated_ratio_data = fully_vaccinated_ratio_data.sort_values(ascending=False, by='people_fully_vaccinated_per_hundred').iloc[:top]\n\nfig = px.bar(x=fully_vaccinated_ratio_data.index, y=fully_vaccinated_ratio_data['people_fully_vaccinated_per_hundred'],\n             color=fully_vaccinated_ratio_data.index,\n             title=f'Top {top} Countries - People Fully Vaccinated Per Hundred',\n             labels={\"x\": \"Country\", \"y\": \"People Fully Vaccinated Per Hundred\"},\n             color_discrete_sequence =px.colors.sequential.Electric)\nfig.show()","eb21c7eb":"vaccine_data = averaged_data.groupby('vaccines')['daily_vaccinations'].mean()\nvaccine_data = pd.DataFrame(vaccine_data)\nvaccine_data = vaccine_data.sort_values(ascending=False, by='daily_vaccinations')\n\n\nfig = px.bar(x=vaccine_data.index, y=vaccine_data['daily_vaccinations'],\n             color=vaccine_data.index,\n             title='How Many Vaccinations With a Certain Vaccine',\n             labels={\"x\": \"Vaccine\", \"y\": \"Number of Vaccinations\"},\n             color_discrete_sequence=px.colors.sequential.Electric)\nfig.show()","bbd63505":"**Visualization**","f04bd900":"replacing the missing values with 0","133983ca":"preparing a subdata, smaller table"}}