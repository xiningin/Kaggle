{"cell_type":{"511a2f21":"code","def35d57":"code","5220634f":"code","27e83d15":"code","962de024":"code","c34f7b3f":"code","d4dcf7e7":"code","bcce1270":"code","e40aa0e0":"code","4949214f":"code","f0d5d2c0":"code","f6a2427e":"markdown","8d801aff":"markdown"},"source":{"511a2f21":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","def35d57":"data = pd.read_csv('\/kaggle\/input\/iris\/Iris.csv', index_col = 'Id')\ndata.head()","5220634f":"data.dropna(axis=0, subset=['Species'], inplace=True)\ny = data.Species\ndata.drop(['Species'], axis=1, inplace=True)","27e83d15":"X = data\nX.head()","962de024":"y.head()","c34f7b3f":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)","d4dcf7e7":"from sklearn.svm import SVC\n\nsvm = SVC(kernel = 'linear', C = 1.0, random_state = 42)\nsvm.fit(X_train, y_train)\ny_train_preds = svm.predict(X_train)\ny_test_preds = svm.predict(X_test)\n","bcce1270":"from sklearn.metrics import accuracy_score\nprint('train accuracy:', accuracy_score(y_train, y_train_preds))\nprint('test accuracy:', accuracy_score(y_test, y_test_preds))","e40aa0e0":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, y_test_preds))","4949214f":"from sklearn.svm import SVC\nfrom sklearn.metrics import mean_absolute_error\nsvm = SVC(kernel = 'linear', C = 1.0, random_state = 42)\nsvm.fit(X_train, y_train)\ny_preds = svm.predict(X)\n\nprint('Accuracy:', accuracy_score(y, y_preds))","f0d5d2c0":"# Save test predictions to file\noutput = pd.DataFrame({'Id': X.index,\n                       'Species': y_preds})\noutput.to_csv('submission.csv', index=False)","f6a2427e":"make output","8d801aff":"Using classification_report, you can build a text report showing the classification metrics."}}