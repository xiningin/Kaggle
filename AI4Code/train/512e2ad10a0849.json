{"cell_type":{"b570dac6":"code","e8a3c8e3":"code","1f85a38a":"code","c0d57eca":"code","b0ef79a6":"code","dde25a6b":"code","997f65bc":"code","62599d7c":"code","c5a7ad61":"code","7688f937":"code","ec5ac18e":"code","f20d5054":"code","6b52fede":"code","5784901e":"code","0832921f":"code","fe5e25ba":"code","74e75c28":"markdown","25d6f16d":"markdown"},"source":{"b570dac6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e8a3c8e3":"import matplotlib.pyplot as plt\n\nimport seaborn as sns\n\n%matplotlib inline\nplt.rcParams['figure.dpi'] = 100\nplt.rcParams['figure.dpi'] = 100\nsns.set_style('darkgrid')","1f85a38a":"data = pd.read_csv('\/kaggle\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv')\ndata = data.drop('sl_no', axis=1)","c0d57eca":"data.head()","b0ef79a6":"data.isna().any()","dde25a6b":"# Data looks clean, we dont have null salary where status is placed\ndata[data['status'] == 'Placed']['salary'].isna().any()","997f65bc":"# ~70% of people are placed\nstatus_ = data['status'].value_counts()\nstatus_ = status_\/ len(data['status'])\nstatus_.plot(kind='bar')","62599d7c":"# Most of the salaries range from 20K to ~40K\n# And of course few outliers\npd.cut(data['salary'], bins=5).value_counts()","c5a7ad61":"workex_placed = data.groupby(['workex', 'status'])['status'].count().unstack('status')\nworkex_placed","7688f937":"# Having prior work experience helps in getting job\n# Observe that overall placed rate is 70%, if student does not have workex chance of getting placed falls to 60%\nworkex_placed.div(workex_placed.sum(axis=1), axis=0).plot(kind='bar')","ec5ac18e":"# Commerce and Science seems to align well with overall placed rate, arts student lag behind\nworkex_placed = data.groupby(['hsc_s', 'status'])['status'].count().unstack('status')\nworkex_placed.div(workex_placed.sum(axis=1), axis=0).plot(kind='bar')","f20d5054":"# Commerce and Science seems to align well with overall placed rate, arts student lag behind\nworkex_placed = data.groupby(['specialisation', 'status'])['status'].count().unstack('status')\nworkex_placed.div(workex_placed.sum(axis=1), axis=0).plot(kind='bar')","6b52fede":"pd.cut(data['ssc_p'], bins=5)","5784901e":"data['ssc_p_label'] = pd.cut(data['ssc_p'], bins=range(40, 110, 10))\ndata['hsc_p_label'] = pd.cut(data['hsc_p'], bins=range(30, 110, 10))\ndata['degree_p_label'] = pd.cut(data['degree_p'], bins=range(40, 110, 10))\ndata['mba_p_label'] = pd.cut(data['mba_p'], bins=range(50, 80, 10))\ndata['etest_p_label'] = pd.cut(data['etest_p'], bins=range(40, 110, 10))","0832921f":"workex_placed = data.groupby(['etest_p_label', 'status'])['status'].count().unstack('status')\nworkex_placed = workex_placed.div(workex_placed.sum(axis=1), axis=0)\n?workex_placed.plot","fe5e25ba":"fig, axes = plt.subplots(2, 3, figsize=(10, 5))\n\ndf = data.groupby(['ssc_p_label', 'status'])['status'].count().unstack('status')\ndf.div(df.sum(axis=1), axis=0).plot(kind='bar', ax=axes[0, 0], legend=None)\n\ndf = data.groupby(['hsc_p_label', 'status'])['status'].count().unstack('status')\ndf.div(df.sum(axis=1), axis=0).plot(kind='bar', ax=axes[0, 1], legend=None)\n\ndf = data.groupby(['degree_p_label', 'status'])['status'].count().unstack('status')\ndf.div(df.sum(axis=1), axis=0).plot(kind='bar', ax=axes[1, 0], legend=None)\n\ndf = data.groupby(['mba_p_label', 'status'])['status'].count().unstack('status')\ndf.div(df.sum(axis=1), axis=0).plot(kind='bar', ax=axes[1, 1], legend=None)\n\ndf = data.groupby(['etest_p_label', 'status'])['status'].count().unstack('status')\ndf.div(df.sum(axis=1), axis=0).plot(kind='bar', ax=axes[0, 2], legend=None)\n\nfig.tight_layout()","74e75c28":"## How Important is HSC Subject","25d6f16d":"## How Important is work experience \n"}}