{"cell_type":{"ecbd673a":"code","18656e56":"code","bcff463e":"code","302e58f1":"code","7f1af44d":"code","96f4cecf":"code","ef41b080":"code","c51f287b":"code","c313680f":"code","f9818579":"code","c9a8bd48":"code","56d625da":"code","1e72727c":"markdown","7b3aa717":"markdown","95c6d8f2":"markdown","aef4529f":"markdown","bf9e44b4":"markdown","3eca9067":"markdown","5b8bcb83":"markdown","35b123d5":"markdown"},"source":{"ecbd673a":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt \nimport seaborn as sns \nfrom sklearn.preprocessing import OrdinalEncoder\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\n\nimport warnings\nwarnings.filterwarnings('ignore')","18656e56":"df = pd.read_csv('\/kaggle\/input\/drug-classification\/drug200.csv')","bcff463e":"df.head()","302e58f1":"le = LabelEncoder()\nfor i in list(df.columns):\n    if df[i].dtype=='object':\n        df[i] = le.fit_transform(df[i])\ndf.head()","7f1af44d":"df.info()","96f4cecf":"sns.heatmap(df.corr())","ef41b080":"sns.pairplot(df, hue='Drug')","c51f287b":"X = df.loc[:, df.columns != 'Drug']\ny = df.loc[:, 'Drug']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)\n\nmodel1 = RandomForestRegressor().set_params(random_state=23)\nmodel1.fit(X_train, y_train)\npreds1 = model1.predict(X_test)\n\naccuracy_score(y_test, preds1.astype(int))","c313680f":"df['log_Na_to_K'] = np.log(df['Na_to_K'] + 1)\ndf.drop('Na_to_K', axis=1, inplace=True)\nsns.pairplot(df, hue='Drug')","f9818579":"X = df.loc[:, df.columns != 'Drug']\ny = df.loc[:, 'Drug']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)\n\nmodel2 = LogisticRegression(max_iter=10000)\nmodel2.fit(X_train, y_train)\npreds2 = model2.predict(X_test)\n\naccuracy_score(y_test, preds2.astype(int))","c9a8bd48":"rfc = RandomForestClassifier()\nrfc.fit(X_train,y_train)\npred_2 = rfc.predict(X_test)\nscore_2 = accuracy_score(y_test,pred_2.astype(int))","56d625da":"score_2","1e72727c":"Before we fit a Logistic Regression model, we scale the Na_to_K column given that it is heavily right skewed","7b3aa717":"We can do better if we use the Random Forest Classifier given that this is ultimately a classification problem - we end up with 100% accuracy","95c6d8f2":"Further investigating the pairplot below, we see that Na_to_K is heavily right skewed, so we will apply a log transformation to scale the values after creating a Random Forest model","aef4529f":"With .head() we see that there are ordinal categorical features which we can encode using sklearn's LabelEncoder","bf9e44b4":"# Exploratory Data Analysis","3eca9067":"We use .value_counts() to find the distribution of values that our categorical features take on. We can then use sklearn's LabelEncoder to encode all 'object' type features.","5b8bcb83":"Using .info() we see that there are 200 non-null values so there is no need to fill in missing values","35b123d5":"From the heatmap below we see that Na_to_K has a very low correlation with the final drug prediction"}}