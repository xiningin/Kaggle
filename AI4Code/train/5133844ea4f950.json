{"cell_type":{"b1cb1fe4":"code","cf677200":"code","7aa54213":"code","fe4f65c9":"code","65b49503":"code","a367d0f8":"code","8b7c4243":"code","84db7c56":"code","18404cbd":"code","52158bb0":"markdown","62d477d1":"markdown","a77bd67a":"markdown","6c8c225d":"markdown","15be8cab":"markdown"},"source":{"b1cb1fe4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nprint('Printing Only Few Files..')\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames[:5]:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","cf677200":"# registerting Helper Module Path\nimport sys\nsys.path.append('\/kaggle\/input\/stock-market-india')","7aa54213":"import StockMarketHelper as helper","fe4f65c9":"helper.read_master()","65b49503":"# searching stock\nhelper.filter_symbol(search='NIFTY', return_all=True)","a367d0f8":"helper.filter_symbol(search='NIFTY', return_all=False)","8b7c4243":"helper.read_from_key('NIFTY_50__EQ__INDICES__NSE__MINUTE')","84db7c56":"helper.read_data(search='AI')","18404cbd":"helper.read_data(query='BHARTIARTL')","52158bb0":"### Master File\nLoading master file. It contains key and addtional information of the stock price avaiable in dataset.\n\n    Parameter:\n\n    use_hdf: use hdf file to load data (default True)","62d477d1":"## read_from_key Function\nIt will return stock market data attached to a input key, with additional parameter to use_hdf data.\n\n    Parameter:\n\n    key: key should be avaialble in master file\n    \n    use_hdf: use hdf file to load data (default True)","a77bd67a":"## Helper Module","6c8c225d":"## Filter symbol Function\nHelper function to filter individual stock data.\n\n    Parameter:\n\n    query: Similar to pandas query input except here if it doesn't contain =, < or > then \n            query will be replaced by f'tradingsymbol == {query}\" or name == \"{query}\"\n    \n    search: It will filter all the symbols with contain '@search' in tradingsymbol or name.\n    \n    return_all: If true return all matches else it will ask user to enter row number (default False)\n    \n    return_empty: If true return empty matches else raise error (default False)\n    \n    use_hdf: use hdf file to load data (default True)","15be8cab":"## Read Data Function\nHelper function to read individual stock data.\n\nIt will first call filter symbol with return_all and return_empty to false. And later call read_from_key.\n\n    Parameter:\n\n    query: Similar to pandas query input except here if it doesn't contain =, < or > then \n            query will be replaced by f'tradingsymbol == {query}\" or name == \"{query}\"\n    \n    search: It will filter all the symbols with contain '@search' in tradingsymbol or name.\n    \n    return_all: If true return all matches else it will ask user to enter row number (default False)\n    \n    return_empty: If true return empty matches else raise error (default False)\n    \n    use_hdf: use hdf file to load data (default True)\n\n\n    This Function will call filter_symbol with return_all=False, return_empty=False, which mean\n      - it will ask user to enter row number if mutiple symbol satisfies the criteria\n      - and it will raise error if no symbol satisfies the criteria."}}