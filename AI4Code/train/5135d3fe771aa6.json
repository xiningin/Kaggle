{"cell_type":{"ca4304b2":"code","8c5c40fe":"code","11a69d54":"code","6f740e57":"code","b439aba0":"code","875e8093":"code","048f9402":"code","39a6ca62":"code","fbbc95e8":"code","f699cc24":"code","9c8cbed6":"code","2d033b3c":"code","4d57fb15":"code","9e49092c":"code","215ff164":"code","bee9e8f8":"markdown","eef6dd39":"markdown","a8e5525f":"markdown","4d15afcb":"markdown","eb945087":"markdown","5d819669":"markdown","9db7f1ff":"markdown","31325ee4":"markdown","68a170b0":"markdown"},"source":{"ca4304b2":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport seaborn as sns\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nfrom wordcloud import WordCloud\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nfrom sklearn.neighbors import KNeighborsClassifier\n\n\n\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import r2_score\nfrom sklearn import metrics\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        ","8c5c40fe":"data = pd.read_csv('\/kaggle\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv',encoding='ISO-8859-1')\n","11a69d54":"data.info()","6f740e57":"data.describe()","b439aba0":"eksik_degerler = data.isnull().sum()\neksik_degerler_y\u00fczde = 100*eksik_degerler\/len(data)\n\neksik_deger_tablosu = pd.DataFrame({\"Eksik De\u011fer Say\u0131s\u0131\" : eksik_degerler , \"Eksik De\u011ferlerin Y\u00fczdesi\" : eksik_degerler_y\u00fczde})\n\neksik_deger_tablosu","875e8093":"x = data[\"class\"].unique()\ny = data[\"class\"].value_counts()\n\nnormallik = pd.DataFrame({\"Normallik Durumu\" : x ,\"Ki\u015fi Say\u0131s\u0131\" : y})\n\n\nplt.Figure(figsize=(80,45))\nsns.barplot(x = normallik[\"Normallik Durumu\"], y =normallik[\"Ki\u015fi Say\u0131s\u0131\"] ,color= \"red\")\nplt.show()","048f9402":"color_list = ['red' if i=='Abnormal' else 'green' for i in data.loc[:,'class']]\npd.plotting.scatter_matrix(data.loc[:, data.columns != 'class'],\n                                       c=color_list,\n                                       figsize= [15,15],\n                                       diagonal='hist',\n                                       alpha=0.5,\n                                       s = 200,\n                                       marker = '*',\n                                       edgecolor= \"black\")\nplt.show()\n","39a6ca62":"x = data.pelvic_incidence.values.reshape(-1,1)\ny = data.sacral_slope.values.reshape(-1,1)\n\nlinear_reg = LinearRegression()\nlinear_reg2 = LinearRegression()","fbbc95e8":"score_list = []\nfor each in range(1,9):\n    x_train1,x_test1,y_train1,y_test1 = train_test_split(x,y,test_size=(each\/10),random_state=42)\n    linear_reg2.fit(x_train1,y_train1)\n\n    y_head2 = linear_reg2.predict(x_test1)\n    score_list.append(r2_score(y_test1,y_head2))\n    \nplt.plot(range(1,9) , score_list)\nplt.xlabel(\"Test Size\")\nplt.ylabel(\"Accuracy\")\nplt.show()\n    \n","f699cc24":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.1,random_state=42)\n\nlinear_reg.fit(x_train,y_train)\n\ny_head = linear_reg.predict(x_test)\n\nprint(\"R^2 Skoru:\" , r2_score(y_test,y_head))","9c8cbed6":"array = np.array([20,30,40,50,60,70,80,90,100,120]).reshape(-1,1)\nplt.scatter(x,y)\ny_head2 = linear_reg.predict(array)\nplt.plot(array, y_head2, color = \"black\" , linewidth = 3)\nplt.xlabel('pelvic_incidence')\nplt.ylabel('sacral_slope')\nplt.show()","2d033b3c":"data.head()","4d57fb15":"data[\"class\"] = [0 if each == \"Abnormal\" else 1 for each in data[\"class\"]]\n\ny = data[\"class\"].values\nx_data = data.drop(\"class\" , axis =1)\n\nx = (x_data - np.min(x_data))\/(np.max(x_data) - np.min(x_data)).values\n\nx_train , x_test , y_train , y_test = train_test_split(x,y,test_size = 0.2 , random_state = 42)\n","9e49092c":"score_list = []\n\nfor each in range(1,150):\n    knn2 = KNeighborsClassifier(n_neighbors = each)\n    knn2.fit(x_train, y_train)\n    score_list.append(knn2.score(x_test,y_test))\n    \nplt.plot(range(1,150),score_list)\nplt.xlabel(\"K Values\")\nplt.ylabel(\"Accuracy\")\nplt.show()","215ff164":"knn = KNeighborsClassifier(n_neighbors = 20)\nknn.fit(x_train , y_train)\npred = knn.predict(x_test)\n\nprint(\"{} nn skoru: {}\".format(5,knn.score(x_test,y_test)))","bee9e8f8":"## KNN Algoritmas\u0131\n","eef6dd39":"Kategorik verilerimizin bulundu\u011fu \"class\" s\u00fctunumuzda 2 adet de\u011fer bulunmaktad\u0131r. Normal ya da Abnormal. Bu iki de\u011ferin ka\u00e7ar adet bulunduklar\u0131 a\u015fa\u011f\u0131daki grafikteki gibidir.","a8e5525f":"Burada kullan\u0131lmak istenen 2 \u00f6zellik se\u00e7ilmi\u015ftir. Bu iki \u00f6zellik \u00fczerinden lineer regresyon yap\u0131lacakt\u0131r.","4d15afcb":"A\u015fa\u011f\u0131daki tablo bize eksik(NaN) veri olup olmad\u0131\u011f\u0131n\u0131 g\u00f6stermektedir. Bu tabloya g\u00f6re veri setimizde herhangi bir eksik veri bulunmamaktad\u0131r.","eb945087":"A\u015fa\u011f\u0131da s\u00fctunlar\u0131n ikili olarak birbirleri ile kar\u015f\u0131la\u015ft\u0131rmalar\u0131 g\u00f6r\u00fclmektedir. burdaki da\u011f\u0131l\u0131ma g\u00f6re lineer regresyon i\u00e7in en iyi olacak 2 s\u00fctunu g\u00f6rebiliriz.","5d819669":"## Veri Setinin \u00d6zellikleri","9db7f1ff":"Merhaba, bu \u00e7al\u0131\u015fmamda veri setinde bulunan her hastan\u0131n omurgan\u0131n \u015fekli ve y\u00f6n\u00fcnden t\u00fcretilen alt\u0131 biyomekanik \u00f6zellikleri bulunmaktad\u0131r. Se\u00e7ilen 2 \u00f6zellik \u00fczerinden Lineer Regresyon y\u00f6ntemi ile tahmin yap\u0131lacakt\u0131r. \n\n\u00d6ncelikle hem g\u00f6rselle\u015ftirme hem de Regresyon i\u00e7in gerekli olan k\u00fct\u00fcphaneleri import edelim\n","31325ee4":"Describe kodunda ise istatstiksel \u00f6zelliklere bakabilmekteyiz. Burada veriler aras\u0131nda \u00e7ok farkl\u0131l\u0131klar olmad\u0131\u011f\u0131na bakmam\u0131z gerekmektedir. Ayr\u0131ca tahmin i\u015flemi yaparken say\u0131lar\u0131 b\u00fcy\u00fck olan s\u00fctunlardan dolay\u0131 k\u00fc\u00e7\u00fck say\u0131l\u0131 s\u00fctunlar\u0131n etkisini azaltmamas\u0131 i\u00e7in normalizasyon i\u015flemi yap\u0131larak b\u00fct\u00fcn veriler 0 ile 1 aras\u0131na al\u0131nmal\u0131d\u0131r.","68a170b0":"\u0130nfo kodunda g\u00f6rd\u00fc\u011f\u00fcm\u00fcz gibi veri setimizde 310 adet sat\u0131r bulunmaktad\u0131r. 6 tane de s\u00fctun bulunmaktad\u0131r. Bunlardan 5 tanesi \"float\" t\u00fcr\u00fcnde  1 tanesi ise \"object\" t\u00fcr\u00fcnde yani kategorik veridir. "}}