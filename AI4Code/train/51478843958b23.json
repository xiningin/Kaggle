{"cell_type":{"637567c6":"code","efb71510":"code","eeddc6df":"code","f7127ee7":"code","86882ebf":"code","9a53c6de":"code","4d80ea0a":"code","729a72fd":"code","be279262":"code","b4143d5b":"code","c41153bb":"code","0e3e21d4":"code","effb2305":"code","55e42093":"code","0da5f804":"code","ab4e9953":"code","9f6a6633":"code","3b14b9cd":"code","ab29a16a":"code","939d5c0b":"code","6e9291f5":"code","e03a292e":"code","010026fd":"code","2b699955":"code","e43e37db":"code","cad5f66e":"markdown","2ecb57b6":"markdown","d68c91d2":"markdown","796aad29":"markdown","8e2ae6a4":"markdown","0b2cdf62":"markdown","caf4c570":"markdown","fc2c1b52":"markdown","19b393c0":"markdown","7d18be17":"markdown","26afd8be":"markdown","5946cd88":"markdown"},"source":{"637567c6":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nimport seaborn as sns\nfrom sklearn.cluster import KMeans","efb71510":"data = pd.read_csv('..\/input\/Mall_Customers.csv')","eeddc6df":"data.shape","f7127ee7":"data.head()","86882ebf":"data.isnull().any()","9a53c6de":"uniq = data.CustomerID.unique()\nlen(uniq)","4d80ea0a":"data.describe()","729a72fd":"data[['Gender','CustomerID']].groupby('Gender').count()","be279262":"gender = data['Gender'].value_counts()\nlabels = ['Female', 'Male']\ncolors = ['c', 'coral']\nexplode = [0, 0.05]\n\nplt.figure(figsize=(8,8))\nplt.title('Total of customers by gender', fontsize = 16, fontweight='bold') \nplt.pie(gender, colors = colors, autopct = '%1.0f%%', labels = labels, explode = explode, startangle=90, textprops={'fontsize': 16})\nplt.savefig('Total of customers by gender.png', bbox_inches = 'tight')\nplt.show()","b4143d5b":"gender_spending = data[['CustomerID', 'Spending Score (1-100)','Gender']].groupby('Gender').mean()\ngender_spending","c41153bb":"values = gender_spending['Spending Score (1-100)'].values\ngenders = ['Female', 'Male']\n\nplt.title('Average spending score by gender', fontsize = 14, fontweight='bold')\nplt.bar(genders[0], values[0], color = 'c')\nplt.bar(genders[1], values[1], color = 'coral')\nplt.yticks(np.arange(0, max(values)+10, 10), fontsize = 12)\nplt.xticks(fontsize = 12)\nfor i in range(len(values)):\n    plt.text(x = genders[i], y = values[i] + 2, s = round(values[i],2), size = 12)\nplt.savefig('Average spending score by gender.png')\nplt.show()    ","0e3e21d4":"ages = data[['Age']].describe()\nages","effb2305":"plt.figure(figsize=(10,8))\nplt.title('Distribution of Age', fontsize = 16, fontweight='bold')\nplt.hist(data['Age'], color = 'mediumpurple', edgecolor = 'rebeccapurple')\nplt.xlabel('Age', fontsize = 13)\nplt.savefig('Distribution of Age.png', bbox_inches = 'tight')\nplt.grid(False)","55e42093":"income = data[['Annual Income (k$)']].describe()\nincome","0da5f804":"plt.figure(figsize=(10,8))\nplt.title('Distribution of Annual Income', fontsize = 16, fontweight='bold')\nplt.hist(data['Annual Income (k$)'], color = 'gold', edgecolor = 'goldenrod')\nplt.xlabel('Annual Income (k$)', fontsize = 13)\nplt.savefig('Distribution of Annual Income.png', bbox_inches = 'tight')\nplt.grid(False)","ab4e9953":"plt.figure(figsize=(16,6))\nplt.subplot(1,2,1)\nsns.distplot(data['Spending Score (1-100)'], color = 'green')\nplt.title('Distribution of Spending Score')\nplt.subplot(1,2,2)\nsns.distplot(data['Annual Income (k$)'], color = 'green')\nplt.title('Distribution of Annual Income (k$)')\nplt.show()","9f6a6633":"sns.pairplot(data=data, diag_kind=\"kde\")\nplt.savefig('Distribution.png', bbox_inches = 'tight')","3b14b9cd":"plt.figure(figsize=(8,6))\nplt.title('Annual Income vs Spending Score', fontsize = 16, fontweight='bold')  \nplt.scatter(data['Annual Income (k$)'], data['Spending Score (1-100)'], color = 'indianred', edgecolors = 'crimson')\nplt.xlabel('Annual Income', fontsize = 14)\nplt.ylabel('Spending Score', fontsize = 14)\nplt.savefig('Annual Income vs Spending Score.png', bbox_inches = 'tight')\nplt.show()","ab29a16a":"plt.figure(figsize=(8,6))\nplt.title('Age vs Spending Score', fontsize = 16, fontweight='bold')  \nplt.scatter(data['Age'], data['Spending Score (1-100)'], color = 'indianred', edgecolors = 'crimson')\nplt.xlabel('Age', fontsize = 14)\nplt.ylabel('Spending Score', fontsize = 14)","939d5c0b":"# calculate distortion for a range of number of cluster\nX = data[['Annual Income (k$)' , 'Spending Score (1-100)']].iloc[: , :].values\ndistortions = []\n\nfor i in range(1, 11):\n    km = KMeans(n_clusters=i, random_state=0)\n    km.fit(X)\n    distortions.append(km.inertia_)\n\n# plot\nplt.title('Elbow Method', fontsize = 14, fontweight='bold')\nplt.plot(range(1, 11), distortions, 'c', marker='o', markeredgecolor = 'b')\nplt.xlabel('Number of clusters', fontsize = 14)\nplt.ylabel('Distortion', fontsize = 14)\nplt.annotate('k = 5', xy=(5.1, 51000), xytext=(6, 85000),fontsize = 12, arrowprops={'arrowstyle': '->', 'color': 'blue'})\nplt.savefig('Elbow Method.png', bbox_inches = 'tight')\nplt.show()","6e9291f5":"kmeans=KMeans(n_clusters=5,init='k-means++',max_iter=300,n_init=10,random_state=0)\ny_kmeans=kmeans.fit_predict(X)\n\nplt.figure(figsize=(10,8))\nplt.scatter(X[y_kmeans == 0, 0], X[y_kmeans == 0, 1], s = 100, c = 'royalblue', edgecolors = 'navy', label = 'Cluster 1')\nplt.scatter(X[y_kmeans == 1, 0], X[y_kmeans == 1, 1], s = 100, c = 'lightsalmon', edgecolors = 'tomato', label = 'Cluster 2')\nplt.scatter(X[y_kmeans == 2, 0], X[y_kmeans == 2, 1], s = 100, c = 'gold', edgecolors = 'goldenrod', label = 'Cluster 3')\nplt.scatter(X[y_kmeans == 3, 0], X[y_kmeans == 3, 1], s = 100, c = 'mediumorchid', edgecolors = 'purple', label = 'Cluster 4')\nplt.scatter(X[y_kmeans == 4, 0], X[y_kmeans == 4, 1], s = 100, c = 'turquoise', edgecolors = 'teal', label = 'Cluster 5')\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 200, c = 'black', label = 'Centroids')\nplt.title('Clusters of customers', fontsize = 16, fontweight='bold')\nplt.xlabel('Annual Income (k$)', fontsize = 14)\nplt.ylabel('Spending Score (1-100)', fontsize = 14)\nplt.legend(fontsize = 14)\nplt.savefig('Clusters of customers.png', bbox_inches = 'tight')\nplt.show()","e03a292e":"#beginning of  the cluster numbering with 1 instead of 0\ny_kmeans1=y_kmeans\ny_kmeans1=y_kmeans+1\n\n# New Dataframe called cluster\nnum_cluster = pd.DataFrame(y_kmeans1)\n\n# Adding cluster to the Dataset\ndata['cluster'] = num_cluster\n\n#Mean of clusters\nkmeans_mean_cluster = pd.DataFrame(round(data.groupby('cluster').mean(),1))\nkmeans_mean_cluster","010026fd":"gender_count_cluster = data[['cluster','Gender', 'CustomerID']].groupby(['cluster','Gender']).count()\ngender_count_cluster","2b699955":"total_cluster = data[['cluster','CustomerID']].groupby(['cluster']).count()\ntotal_cluster","e43e37db":"def as_perc(value, total):\n    return round((value\/total)*100,2)\n\nper = gender_count_cluster.apply(as_perc, total = total_cluster['CustomerID'])\nper","cad5f66e":"**<font size=\"4\">1. Importing Libraries.<\/font>**","2ecb57b6":"**<font size=\"4\">4. Clustering using K-Means.<\/font>**","d68c91d2":"**<font size=\"4\">2. Reading and exploration of the data.<\/font>**","796aad29":"In today\u2019s competitive world, it is crucial to understand customer behavior and categorize customers based on their demography and buying behavior. This is a critical aspect of customer segmentation that allows marketers to better tailor their marketing efforts to various audience subsets in terms of promotional, marketing and product development strategies.\n\nCases of study in this problem:\n* Who spent more in terms of gender?\n* What is the distribution of ages and annual income of the customers?\n* How can we categorize the customers that are more likely to spend more?\n\n\nSteps to solve this problem:\n1. Importing Libraries.\n2. Reading and exploration of the data.\n3. Data Visualization.\n4. Clustering using K-Means.","8e2ae6a4":"Clustering is the task of grouping together a set of objects in a way that objects in the same cluster are more similar to each other than to objects in other clusters. Similarity is a metric that reflects the strength of relationship between two data objects.\n\nThe K-Means algorithm often referred to as Lloyd\u2019s algorithm, is an unsupervised learning algorithm that clusters data. This algorithm requires the number of clusters to be specified.\n\nThe algorithm works as follows:\n\nThe first step chooses the initial centroids (a data point at the center of a cluster).\nSecond step assigns each sample to its nearest centroid.\nCreates new centroids by taking the mean value of all of the samples assigned to each previous centroid.\nThe difference between the old and the new centroids are computed and the algorithm repeats steps 2 and 3 until convergence has been reached. In other words, it repeats until the centroids do not move significantly.","0b2cdf62":"We obteined 5 clusters, each identified with different colors, while the centroids are in black. Now let's examine each cluster.","caf4c570":"In this case is easy to visualize how many clusters we should choose (k = 5), but that's not always the case, specially when we are working with a higher dimensional dataset that cannot be visualized.\n\nThe **elbow method** is a useful graphical tool to estimate the optimal number of clusters. Within-Cluster Sum of Squared Error (\"distortion\") measures how much data samples deviate from their respective centroids in a set of clustering results. If you plot WSSE for different values for k, we can see how this error measure changes as the value of k changes as seen in the plot.\n\nOne should choose a number of clusters so that adding another cluster doesn't give much better modeling of the data. The bend in thes error curve indicates a drop in gain by adding more clusters. This \"Elbow\" in the curve provides a suggestion for a good value of k.","fc2c1b52":"**<font size=\"5\">Customer Segmentation Analysis using K-means<\/font>**","19b393c0":"**<font size=\"4\">Conclusion.<\/font>**\n\nThe k-means analysis help us to identify what are the consumers that spent more in this supermarket. In this case, we obtain two groups:\n\n* Group 1: cluster 3 with an average spending score of 82.1\n* Group 2: cluster 4 with an average spending score of 79.4\n\nEach of this clusters help us analyze these customers in terms of annual income, age and gender.\n","7d18be17":"Now let's execute K-means algorithm with 5 clusters and see the output graph.","26afd8be":"**<font size=\"3\">Segmentation using Annual Income and Spending Score<\/font>**","5946cd88":"**<font size=\"4\">3. Data Visualization.<\/font>**"}}