{"cell_type":{"dd3b93ad":"code","ad9a9f7e":"code","03ed1b54":"code","089f212f":"code","d2ebcb83":"code","fd32a641":"code","26eb3b9a":"code","7e652b74":"code","7ae67503":"code","0a7ca725":"code","d8b0518f":"code","b915c170":"code","d2d762fe":"code","1e8a53c4":"code","45f02875":"code","682d00e0":"code","9a3ec587":"markdown","4c97e128":"markdown","e8a36f68":"markdown","d1581aed":"markdown","950a7479":"markdown","0780cbbe":"markdown","9a7e0408":"markdown","f57138d8":"markdown"},"source":{"dd3b93ad":"# PACKAGES\n\n# standard\nimport numpy as np\nimport pandas as pd\n\n# plots\nimport matplotlib.pyplot as plt\nimport seaborn as sns","ad9a9f7e":"# load data and show structure\ndf = pd.read_csv('..\/input\/body-measurements-dataset\/Body Measurements _ original_CSV.csv')\ndf.info()","03ed1b54":"# one observation has a missing gender info\ndf[np.isnan(df.Gender)]","089f212f":"# fill the missing value and change encoding to more readable version\ndf.Gender = df.Gender.fillna(value=0)\ndf.Gender = df.Gender.replace({0:'X',1:'M',2:'F'})","d2ebcb83":"features_cat = ['Gender']","fd32a641":"df.Gender.value_counts().plot(kind='bar')\nplt.title('Gender')\nplt.grid()\nplt.show()","26eb3b9a":"features_num = ['Age', 'HeadCircumference', 'ShoulderWidth', 'ChestWidth ',\n                'Belly ', 'Waist ', 'Hips ', 'ArmLength ', 'ShoulderToWaist ',\n                'WaistToKnee ', 'LegLength', 'TotalHeight']","7e652b74":"# basic stats\ndf[features_num].describe(percentiles=[0.01,0.1,0.25,0.5,0.75,0.9,0.99])","7ae67503":"# plot distributions\nsns.set_style('ticks',{'axes.grid' : False})\nfor f in features_num:\n    fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(10,7))\n    \n    ax1.hist(df[f])\n    ax1.grid()\n    ax1.set_title('Histogram of ' + f)\n    \n    ax2.boxplot(df[f], vert=False)\n    ax2.grid()   \n    ax2.set_title('Boxplot of ' + f)\n    \n    plt.show()","0a7ca725":"sns.set_style('ticks',{'axes.grid' : True})\nsns.jointplot(data=df, x='Age', y='TotalHeight', \n              height=7,\n              hue='Gender',\n              alpha=0.5)\nplt.show()","d8b0518f":"# filter adults only\ndf_adult = df[df.Age>=18].copy()","b915c170":"# basic stats\ndf_adult[features_num].describe(percentiles=[0.01,0.1,0.25,0.5,0.75,0.9,0.99])","d2d762fe":"# plot distributions\nsns.set_style('ticks',{'axes.grid' : False})\nfor f in features_num:\n    fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(10,7))\n    \n    ax1.hist(df_adult[f])\n    ax1.grid()\n    ax1.set_title('Histogram of ' + f + ' (adult)')\n    \n    ax2.boxplot(df_adult[f], vert=False)\n    ax2.grid()   \n    ax2.set_title('Boxplot of ' + f + ' (adult)')\n    \n    plt.show()","1e8a53c4":"sns.set_style('ticks',{'axes.grid' : True})\nsns.jointplot(data=df_adult, x='Age', y='TotalHeight',\n              height=7,\n              hue='Gender',\n              alpha=0.5)\nplt.show()","45f02875":"# pairwise scatter plot\nsns.pairplot(df[features_num])\nplt.grid()","682d00e0":"# correlations\ncorr_pearson = df_adult[features_num].corr(method='pearson')\ncorr_spearman = df_adult[features_num].corr(method='spearman')\n\nfig = plt.figure(figsize = (8,6))\nsns.heatmap(corr_pearson, annot=True, cmap='RdYlGn', vmin=-1, vmax=+1)\nplt.title('Pearson Correlation')\nplt.show()\n\nfig = plt.figure(figsize = (8,6))\nsns.heatmap(corr_spearman, annot=True, cmap='RdYlGn', vmin=-1, vmax=+1)\nplt.title('Spearman Correlation')\nplt.show()","9a3ec587":"### Pairwise scatter plot (adults)","4c97e128":"<a id='1'><\/a>\n# Data Preparation","e8a36f68":"<a id='3'><\/a>\n# Restriction to adults","d1581aed":"### Plot Height vs Age by Gender (adults)","950a7479":"### Correlations (adults)","0780cbbe":"<a id='2'><\/a>\n# EDA","9a7e0408":"### Plot Height vs Age by Gender","f57138d8":"# EDA of Body Measurements Data\n## Table of Contents\n* [Data Preparation](#1)\n* [EDA](#2)\n* [Restriction to adults](#3)"}}