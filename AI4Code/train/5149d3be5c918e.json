{"cell_type":{"bc79fc3f":"code","0e82a5a8":"code","0ae18dfe":"code","5841b992":"code","9f70980b":"code","c21cad57":"code","00359b14":"code","2ca11ef1":"code","eb259215":"code","2778ca8d":"code","fa0b1b18":"code","b62e5a63":"code","aef95e6a":"code","5e5eddaf":"code","8560af7e":"code","6b6eff8c":"code","ae79dc10":"code","2cc0bd55":"code","caef57c4":"code","eb91b938":"code","d6d2cfb3":"code","e60cc014":"code","d07d0f9a":"code","8da29f2b":"code","7536088f":"code","8bdd537f":"code","ad4df414":"code","c818d329":"code","62d37b81":"code","8a5b2e25":"code","66d8ffc4":"markdown","2d591165":"markdown","4ea91a24":"markdown","0a53d61f":"markdown","ab16a6b3":"markdown","1c916cfd":"markdown","67addf1a":"markdown","92577504":"markdown","0f8500b7":"markdown","d8afcfc0":"markdown","9db089cf":"markdown","4518e80b":"markdown"},"source":{"bc79fc3f":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report,confusion_matrix,accuracy_score\n\n%matplotlib inline","0e82a5a8":"sns.set(style='white', context='notebook', palette='deep')\nsns.set_style('white')","0ae18dfe":"customers = pd.read_csv('..\/input\/Test 1.csv')","5841b992":"customers.head()","9f70980b":"customers.describe(include=\"all\")","c21cad57":"customers.info()","00359b14":"customers.columns","2ca11ef1":"sns.countplot(x='card_offer',data=customers)","eb259215":"plt.figure(figsize=(14,8))\nsns.heatmap(data=customers.corr(),cmap='plasma',annot=True)","2778ca8d":"plt.figure(figsize=(14,8))\nsns.relplot(x='est_income',y='pref_cust_prob',data=customers,hue='card_offer')","fa0b1b18":" customers[customers.dtypes[(customers.dtypes==\"float64\")|(customers.dtypes==\"int64\")]\n                        .index.values].hist(figsize=[11,11])","b62e5a63":"def clean_data(df):\n    \n    # encoding the categorical columns    \n    demographic_slice_df = pd.get_dummies(data=df['demographic_slice'],drop_first=True,prefix='ds')\n    country_reg_df = pd.get_dummies(data=df['country_reg'],prefix='cr',drop_first=True)\n    ad_exp_df = pd.get_dummies(data=df['ad_exp'],prefix='ae',drop_first=True)\n    \n    \n    # scaling the features\n    minMax = MinMaxScaler()\n    customers_ent_income = pd.DataFrame(minMax.fit_transform(df[['est_income','RiskScore','imp_cscore']])\n                                    ,columns=['scaled_est_income','scales_riskScore','scaled_imp_csore'])\n    \n    # creating the transfored dataframe\n    df = pd.concat([df,demographic_slice_df,country_reg_df,ad_exp_df,customers_ent_income],axis=1)\n    df.drop(['demographic_slice','country_reg','ad_exp','est_income','RiskScore','imp_cscore'],axis=1,inplace=True)\n    \n    return(df)\n    ","aef95e6a":"customers = clean_data(customers)\ncustomers['card_offer'] = customers['card_offer'].apply(np.int32)\ncustomers.head()","5e5eddaf":"X = customers.drop(['customer_id','card_offer'],axis=1)\ny = customers['card_offer']","8560af7e":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","6b6eff8c":"print('Shapes of the dataframes')\n\nprint('X_train',X_train.shape)\nprint('X_test',X_test.shape)\n\nprint('y_train',y_train.shape)\nprint('y_test',y_test.shape)","ae79dc10":"lr = LogisticRegression()\nlr.fit(X_train,y_train)","2cc0bd55":"predictions = lr.predict(X_test)","caef57c4":"print(accuracy_score(y_test,predictions))","eb91b938":"print(classification_report(y_test,predictions))","d6d2cfb3":"print(confusion_matrix(y_test,predictions))","e60cc014":"Test2Data = pd.read_csv('..\/input\/Test 2.csv')","d07d0f9a":"Test2Data.head()","8da29f2b":"Test2DataOrig = Test2Data\nTest2DataDf = clean_data(Test2Data)","7536088f":"Test2DataDf.head()","8bdd537f":"Test2DatePredict = lr.predict(Test2DataDf.drop(['customer_id','card_offer'],axis=1))","ad4df414":"Test2DatePredictDf = pd.DataFrame(data=Test2DatePredict)","c818d329":"finalDf = pd.concat([Test2DataOrig,Test2DatePredictDf],axis=1)","62d37b81":"finalDf.drop('card_offer',axis=1,inplace=True)","8a5b2e25":"finalDf.rename(columns={'0':'card_offer'},inplace=True)","66d8ffc4":"setting the chart style","2d591165":"Looking at the imported data. ","4ea91a24":"Inserting the results into the file. The card offer column is renamed to \"0\" in the dataset","0a53d61f":"Include = \"all\", so that I can see the metrics on string fields as well. From the data below, we can see that demographic_slice has 4 unique values, country_reg has 2 and ad_exp has 2. We could use this information to our benefit by converting these string fields into numerical fields for us to process. ","ab16a6b3":"# Importing the required libraries\n\nImport all the required libraries. %matplotlib inline is to show the charts inline.","1c916cfd":"# Data preprocssing.\n\nCreate a function to convert the categorical columns into encoded vectors. I have created this function, so that I can repeat the same my test dataset rather than doing it altogether.","67addf1a":"After looking at the graphs above, we can see that, the values for RiskScore and imp_score range between 0 to 800, and \nfor est_income, the value go till 15000. Compared to the other features, these three have different scales. The est_income values may dominate the outcome of the result.\n","92577504":"## A brief about the data\n\nImporting the Test 1 data into the customers dataframe. We would be using this data to train and test our model.\nThe steps that I am following for this analysis are :\n    1. Explatory analysis.\n    2. Visualization of the data\n    3. Normalization of the data fields.\n    4. Building of the model","0f8500b7":"# Getting the Test 2.csv file\n\nNow that we have the model trained, and with a precision of 87%, we can start with the predecting of the data.\n\nThe Test 2 file, goes through the same cleansing\/preprocesing process like the Test 1.csv","d8afcfc0":"# Model Creation\n\nBased on the data, we run it for Logistic regression model for the test and train data that we have","9db089cf":"By looking at the information of the columns and their datatype, we see that the demographic_slice,country_reg and ad_exp are of object datatype. We have to convert them string.","4518e80b":"# Visualization\n\nWe plot the data as per our understanding of the business as well as relations between columns"}}