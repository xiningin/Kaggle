{"cell_type":{"66956321":"code","1732493c":"code","7abe0044":"code","52bd25ef":"code","70b53edb":"code","25ac0b48":"code","14657bba":"code","def2ecfe":"code","de20f78f":"code","912c05ac":"code","a900ca9d":"code","94a92614":"code","5b4259b0":"code","48d2ff8d":"code","31e3d8ef":"code","622e4b6d":"code","c10dca90":"code","a79368f2":"code","cbd49e5e":"code","2411ca04":"code","872c8db9":"code","9e04f9e1":"code","cdcf37f1":"code","1d086a18":"code","eac19e50":"code","4c9fd152":"markdown","ccdb9060":"markdown","b1497125":"markdown","49b0b58d":"markdown","6c4a3965":"markdown","0098c5b1":"markdown","80b08da0":"markdown","8184b8c8":"markdown","fb1b59c5":"markdown","ae4a7984":"markdown","ed2d275d":"markdown","11520793":"markdown","2338e09e":"markdown","32f44821":"markdown","d291f1ba":"markdown","677ace6f":"markdown","75808c86":"markdown","12bc814a":"markdown","5d367270":"markdown","f798ab17":"markdown","6bd526cf":"markdown","82c17096":"markdown","db2c5214":"markdown","52988b54":"markdown","31f0343e":"markdown","d54f0982":"markdown","0a57af21":"markdown","cca5e6ef":"markdown","e6bff167":"markdown","36bf37a8":"markdown","1040dc3d":"markdown","39fdfea5":"markdown","4423d91e":"markdown","2ed08c79":"markdown","9b384163":"markdown","c2cb77c0":"markdown","0391fb61":"markdown"},"source":{"66956321":"# Import math and data manipulation\n\nimport numpy as np\nimport pandas as pd\nimport math\n\n# import statistics\nimport scipy.stats as stats\nfrom statsmodels.stats import proportion as proptests\nimport statistics\n\n# import visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns","1732493c":"# load the dataset\ndf = pd.read_csv('..\/input\/train.csv')","7abe0044":"df.head()","52bd25ef":"# calculate mean value manually\ndf_1 = df.dropna(axis = 0, subset = ['Age']) #remove rows with empty values for Age first\nmean_1 = sum(df_1['Age'].values)\/len(df_1)\nprint(\"The mean value for Age is {mean}\".format(mean = mean_1))","70b53edb":"# calculate mean value using pandas\nmean_2 = df['Age'].mean()\n\nprint(\"The mean value for Age is {mean}\".format(mean = mean_2))","25ac0b48":"# calculate median manually\n\ndef median(lst):\n    quotient, remainder = divmod(len(lst), 2)\n    if remainder:\n        return sorted(lst)[quotient]\n    return sum(sorted(lst)[quotient - 1:quotient + 1]) \/ 2.\n\nmedian_1 = median(df_1['Age'].values)\n\nprint(\"The median value for Age is {median}\".format(median = median_1))","14657bba":"# calculate median using pandas\n\nmedian_2 = df['Age'].median()\n\nprint(\"The median value for Age is {median}\".format(median = median_2))","def2ecfe":"# find out mode manually\n\ndef mode(arr) :\n    m = max([arr.count(a) for a in arr])\n    return [x for x in arr if arr.count(x) == m][0] if m>1 else None\n\nmode_1 = mode(df_1['Age'].values.tolist())\n\nprint(\"The mode value for Age is {mode}\".format(mode = mode_1))","de20f78f":"# find out mode using pandas\n\nmode_2 = df['Age'].mode()\n\nprint(\"The mode value for Age is {mode} (Taking only 1st discovered mode value.)\".format(mode = mode_2[0]))","912c05ac":"# calculate min and max values using pandas\n\nmin_age = df['Age'].min()\n\nmax_age = df['Age'].max()\n\nprint(\"The minimum value for Age is {min_age} and maximum value is {max_age}\".format(min_age = min_age, max_age = max_age))","a900ca9d":"# calculate variance manually\n\nvar_1 = sum((xi - mean_1) ** 2 for xi in df_1['Age'].values.tolist()) \/ len(df_1['Age'].values.tolist())\n    \nprint(\"The variance for Age is {var_1}\".format(var_1 = var_1))","94a92614":"# calculate variance using numpy\n\nvar_2 = np.var(df_1['Age'].values.tolist())\n\nprint(\"The variance for Age is {var_2}\".format(var_2 = var_2))","5b4259b0":"# calculate variance manually\n\nvar_1 = sum((xi - mean_1) ** 2 for xi in df_1['Age'].values.tolist()) \/ len(df_1['Age'].values.tolist())\n    \nprint(\"The variance for Age is {var_1}\".format(var_1 = var_1))","48d2ff8d":"# calculate variance using numpy\n\nvar_2 = np.var(df_1['Age'].values.tolist())\n\nprint(\"The variance for Age is {var_2}\".format(var_2 = var_2))","31e3d8ef":"## calculate standard deviation as a square root of variance\n\nstdev_1 = math.sqrt(var_1)\n\nprint(\"The standard deviation for Age is {stdev_1}\".format(stdev_1 = stdev_1))","622e4b6d":"# calculate standard deviation using pandas\n\nstdev_2 = df['Age'].std()\n\nprint(\"The standard deviation for Age is {stdev_2}\".format(stdev_2 = stdev_2))","c10dca90":"df.describe()","a79368f2":"sex = df['Sex'].unique().tolist()\ny_pos = np.arange(len(sex))\nvalues = df.groupby(['Sex'])['PassengerId'].count().values.tolist()\n \nplt.bar(y_pos, values, align='center', alpha=0.5)\nplt.xticks(y_pos, sex)\nplt.ylabel('Number of passengers')\nplt.title('Male and female passengers')\n \nplt.show()","cbd49e5e":"x = df_1['Age']\nnum_bins = 25\nn, bins, patches = plt.hist(x, num_bins, alpha=0.5)\n\nplt.ylabel('Number of passengers of age per bin')\nplt.title('Passengers Age distribution')\n\nplt.show()","2411ca04":"red_square = dict(markerfacecolor='r', marker='s')\nfig, ax = plt.subplots()\nax.set_title('Age Box plot')\nax.boxplot(df_1['Age'].values.tolist(), vert=False, flierprops=red_square)\n\nplt.show()","872c8db9":"cov = np.cov(df_1['Age'].values, df_1['Fare'].values)\nprint(cov)","9e04f9e1":"#Numerical columns to find out correlation\ncols = ['Age', 'SibSp', 'Parch', 'Fare', 'Survived']\n\n#Find out correlation between columns using numpy and plot\ncorrs = np.corrcoef(df_1[cols].values.T)\nsns.set(font_scale=1)\nsns.set(rc={'figure.figsize':(7,7)})\nhm=sns.heatmap(corrs, cbar = True, annot=True, square = True, fmt = '.2f',\n              yticklabels = cols, xticklabels = cols).set_title('Correlations heatmap')","cdcf37f1":"mean_survived_male = df[df['Sex'] == 'male']['Survived'].mean()\nmean_survived_female = df[df['Sex'] == 'female']['Survived'].mean()\n\nprint(\"The average survival rate for male passengers is {mean_survived_male}\".format(mean_survived_male = mean_survived_male))\nprint(\"The average survival rate for female passengers is {mean_survived_female}\".format(mean_survived_female = mean_survived_female))","1d086a18":"male = df[df['Sex'] == 'male']['Survived']\n\nfemale = df[df['Sex'] == 'female']['Survived']","eac19e50":"# get mean values\nmale_mean = male.mean()\nfemale_mean = female.mean()\n\n# get sample variance\nmale_var = statistics.variance(male)\nfemale_var = statistics.variance(female)\n\n# get t-value\nt = (female_mean - male_mean)\/math.sqrt(female_var\/len(female) + male_var\/len(male))\nprint('T-value is {t}'.format(t = t))\n\n# degrees of freedom\ndf = len(male) + len(female) - 2\n\n# find p-value\np = 1 - stats.t.cdf(t,df=df)\nprint('P-value is {p}'.format(p = p))","4c9fd152":"__Histograms__ are used to visualize interval and ratio data. Looking at histograms we can find out the range of the data, how the data points are distributed along the range. See the example of histogram fot 'Age' column:","ccdb9060":"Statistical concepts are widely used to describe what the data is like: types of variables in the dataset and what are the values of the variables.\n\n### 1. Data Types\nThere are 4 main types of the data:\n* __Nominal__: the values fall into predetermined categories and can not be sorted. The following columns are nominal for Titanic dataset: Sex, Embarked, Survived.\n* __Ordinal__: the values can be sorted, but there is no scale. Pclass variable is the example of ordinal column.\n* __Interval__: the values can be sorted and there is a scale, but there is no zero point for the values (column with a temperature measurements in a dataset could be an example of interval data type). \n* __Ratio__: the values can be sorted, there is a scale and a zero point for the values. The following columns are ratio: Age, SibSp, Parch, Fare.\n\n### 2. Central Tendency of the Data\nFor interval and ratio data types we can describe th central tandency of the values. Central tendency can be described using the following concepts:\n* __Mean__: calculated average of the values.\n* __Median__: the middle value.\n* __Mode__: the most occuring value. There can be several modes for the variable.\n\nLet's calculate mean, median and mode for the __Age__ values in the dataset:","b1497125":"On the histogram we can see:\n* 'Age' values span from 0 to 80,\n* the most common value for 'Age' lies around 30 years old.","49b0b58d":"### 4. Visualization of the Data","6c4a3965":"Calculation of values which describe central tendency and dispertion of the data is very useful for understanding of the data, but these numbers are not very demonstrative.\n<br> The best way to understand those values is to visualize the data.","0098c5b1":"At first we have to prepare the data: prepare vectors for female and male passengers.","80b08da0":"Find out variance:","8184b8c8":"Box and whisker plots quartiles, and the band inside the box is the second quartile (the median). The ends of whiskers represent the lowest datum still within 1.5 IQR of the lower quartile, and the highest datum still within 1.5 IQR of the upper quartile. Data points outside the whiskers are plotted as small squares.\n<br> These points are often considered as __outliers and removed from the analysis.__","fb1b59c5":"## Discover Possible Dependencies","ae4a7984":"## Introduction","ed2d275d":"Find out standard deviation:","11520793":"We can also find out all this information and quartiles using pandas DataFrame.describe method:","2338e09e":"T-value is greater than the critical t-value, the test concludes that there is a statistically significant difference between the two populations. Therefore, we reject the null hypothesis. So female passengers had statistically significant more chances to survive.","32f44821":"We can use numpy library to calculate covariance. For example. let's calculate covariance for 'Age' and 'Fare' columns:","d291f1ba":"Let's calculate and plot Pearson correlation coefficient using numpy for columns in the dataset and plot them using seaborn heatmap:","677ace6f":"So we can see that probably female passengers had better chances for survival. But is it a statistically significant result?\n<br> We can use hypothesis testing techniques to find this out. ","75808c86":"So let's calculate range, variance, standard deviation and find out and visualize the quartiles.\n<br> Calculation of minimun and maximum values for 'Age' column:","12bc814a":"Let's find the average value for 'Survived' column for male and for female passengers:","5d367270":"In this kernel I demonstrated the application of the most common statistical concepts using the widely known Titanic dataset:\n* describe and visualize the data,\n* find correlations between variables,\n* discover statistical significance.","f798ab17":"Knowledge of statistics is essential for data scientists. The following are the examples of applications of statistics for data science:\n* Optain the general understanding and description of the data: data types, measurement of general tendency of the data and its dispersion.\n* Find out possible outliers in data.\n* Find out possible dependencies between different features in dataset.\n* Build machine learning models, which use statistical concepts, such as Naive Bayes or Estimation Maximization algorithms.\n* Measure statistical significance of the results of the experiments.\n\nIn this kernel I would like to introduce some of the statistical concepts and give examples using Titanic dataset. This is how the data looks like:","6bd526cf":"Find out the mode values [using this stackoverflow topic to find mode for a list manually](https:\/\/stackoverflow.com\/questions\/10797819\/finding-the-mode-of-a-list):","82c17096":"# Demonstration of Basic Statistics Concepts using Titanic Dataset","db2c5214":"### 3. Dispertion of the Data","52988b54":"## Conclusion","31f0343e":"The following terms are used to describe the dispersion of the data:\n1. __Range__: minumum and maximum values.\n2. __Variance__: the sum of square distances from each point of the data to the mean.\n3. __Standard deviation__: the square root of the variance. Standard deviation is widely used because unlike the variance it is expressed in the same units as the values, while the variance is expressed in square units.\n4. __Quartiles and Interquartile Range__: The data points can be divided into [quartiles](https:\/\/en.wikipedia.org\/wiki\/Quartile). The 1st quartile (Q1) splits off the lowest 25% of data from the highest 75%, the 2nd quartile (Q2) cuts data set in half and the 3rd quartile (Q3) splits off the highest 25% of data from the lowest 75%. ","d54f0982":"## Discover Statistical Significance","0a57af21":"To check whether female passengers were more likely to survive, we will conduct [t-test](https:\/\/towardsdatascience.com\/inferential-statistics-series-t-test-using-numpy-2718f8f9bf2f). The null hypothesis would be that female passengers have have less or equal survival rate than male passengers.","cca5e6ef":"__[Box plots](https:\/\/en.wikipedia.org\/wiki\/Box_plot)__ are used to visualize the main statistical features of the data: mean value, mode and [interquartile range (IQR)](https:\/\/en.wikipedia.org\/wiki\/Interquartile_range). See the example of box plot for the 'Age' column:","e6bff167":"Statistics is used to compare 2 different variables and find correlation between them. Of course, correlation doesn't mean causation, but still correlation may be considered as a sign of possible dependency between 2 variables.\n<br>[Covariance](https:\/\/en.wikipedia.org\/wiki\/Covariance) is used to measure correlation, covariance between 2 variable is calculated in following way:<\/br>\n$$cov(X,Y)=1\/N*\\sum_{i=1}^{N} (x_{i} - \\bar X)*(y_{i} - \\bar Y)$$\n<br> where $$\\bar X, \\bar Y$$ are the mean values for $$X , Y$$\nRandom variables whose covariance is z\nero are called uncorrelated.","36bf37a8":"## Describe the Data","1040dc3d":"Find out standard deviation:","39fdfea5":"Find out the mean value:","4423d91e":"The matrix above shows:\n<br> cov(Age, Age)   cov(Age, Fare) <\/br>\n\n<br> cov(Fare, Age)  cov(Fare, Fare)","2ed08c79":"__Bar charts__ are commonly used to visualize nominal data. For example, the following is the bar chart for 'Sex' column:","9b384163":"[Pearson correlation coefficient](https:\/\/en.wikipedia.org\/wiki\/Pearson_correlation_coefficient) is also widely used to find out the correlation between variables. Pearson correlation coefficient is calculated in the following way:\n$$ \\rho(X, Y) = cov(X, Y) \/ (\\sigma _{X} * \\sigma _{Y}) $$\n<br> where $$\\sigma _{X}, \\sigma _{Y}$$ are the standard deviation values for $$X , Y$$","c2cb77c0":"Find out the median value [using this stackoverflow topic to find median manually](https:\/\/stackoverflow.com\/questions\/24101524\/finding-median-of-list-in-python):","0391fb61":"Pearson correlation coefficient has a value between +1 and \u22121, where 1 is total positive linear correlation, 0 is no linear correlation, and \u22121 is total negative linear correlation.\n<br> As we see on our plot there is no strong correlation between numeric variables of the dataset."}}