{"cell_type":{"1ec8aec5":"code","8c4179e4":"code","24b7e497":"code","8fdfcb8b":"code","85f816bf":"code","65da8124":"code","d1e0cd98":"code","bf911bc5":"code","b16a4e9b":"code","d5ce6366":"code","a7bdbddc":"markdown","80e7d83f":"markdown","8e6d50d8":"markdown","7c8ad852":"markdown","82fbd50c":"markdown","85a2de4f":"markdown","bec74289":"markdown","f15e5b83":"markdown"},"source":{"1ec8aec5":"import numpy as np \nimport pandas as pd \nimport matplotlib.pylab as plt","8c4179e4":"conda config --add channels conda-forge","24b7e497":"conda install ruptures","8fdfcb8b":"import ruptures as rpt # ruptures package !","85f816bf":"# creation of data\nn, dim = 500, 3\nn_bkps, sigma = 3, 5\nsignal, bkps = rpt.pw_constant(n, dim, n_bkps, noise_std=sigma)\n\n# change point detection\nmodel = \"l1\"  # \"l2\", \"rbf\"\nalgo = rpt.Dynp(model=model, min_size=3, jump=5).fit(signal)\nmy_bkps = algo.predict(n_bkps=3)\n\n# show results\nrpt.show.display(signal, bkps, my_bkps, figsize=(10, 6))\nplt.show()","65da8124":"import numpy as np\nimport matplotlib.pylab as plt\nimport ruptures as rpt\n\n# creation of data\nn, dim = 500, 3\nn_bkps, sigma = 3, 1\nsignal, b = rpt.pw_constant(n, dim, n_bkps, noise_std=sigma)\n\n# change point detection\nmodel = \"l1\"  # \"l2\", \"rbf\"\nalgo = rpt.Pelt(model=model, min_size=3, jump=5).fit(signal)\nmy_bkps = algo.predict(pen=7)\n\n# show results\nfig, ax = rpt.display(signal, bkps, my_bkps, figsize=(10, 6))\nplt.show()","d1e0cd98":"# creation of data\nn = 500  # number of samples\nn_bkps, sigma = 3, 5  # number of change points, noise standard deviation\nsignal, bkps = rpt.pw_constant(n, dim, n_bkps, noise_std=sigma)\n\n# change point detection\nmodel = \"l2\"  # \"l1\", \"rbf\", \"linear\", \"normal\", \"ar\",...\nalgo = rpt.Binseg(model=model).fit(signal)\nmy_bkps = algo.predict(n_bkps=3)\n\n# show results\nrpt.show.display(signal, bkps, my_bkps, figsize=(10, 6))\nplt.show()","bf911bc5":"# specify penalty\nmy_bkps_pen = algo.predict(pen=np.log(n) * dim * sigma ** 2)\n\nrpt.show.display(signal, bkps, my_bkps_pen, figsize=(10, 6))\nplt.show()","b16a4e9b":"# specify threshold using epsilon\nmy_bkps_eps = algo.predict(epsilon= 3.5 * n * sigma ** 2)\n\nrpt.show.display(signal, bkps, my_bkps_eps, figsize=(10, 6))\nplt.show()","d5ce6366":"# creation of data\nn, dim = 500, 3  # number of samples, dimension\nn_bkps, sigma = 3, 5  # number of change points, noise standart deviation\nsignal, bkps = rpt.pw_constant(n, dim, n_bkps, noise_std=sigma)\n\n# change point detection\nmodel = \"l2\"  # \"l1\", \"rbf\", \"linear\", \"normal\", \"ar\"\nalgo = rpt.BottomUp(model=model).fit(signal)\nmy_bkps = algo.predict(n_bkps=3)\n\n# show results\nrpt.show.display(signal, bkps, my_bkps, figsize=(10, 6))\nplt.show()","a7bdbddc":"# Binary segmentation (Binseg)\n> Binary change point detection is used to perform fast signal segmentation. The process of this binary segmentation is as follow. First, using all the data, it detect one change point. Then data is split into two around this change point. Then the spliting process is repeated to each two sub-data. If the calculated change point is bigger than some criteria, It is accepted to change point.\n\n![Binseg](https:\/\/centre-borelli.github.io\/ruptures-docs\/images\/schema_binseg.png)","80e7d83f":"# Bottom-up segmentation (BottomUp)\n> Bottom-up change point detection is used to perform fast signal segmentation. Contrary to binary segmentation, which is a greedy procedure, bottom-up segmentation is generous. it starts with many change points and successively deletes the less significant ones. First, the signal is divided in many sub-signals along a regular grid. Then contiguous segments are successively merged according to a measure of how similar they are. \n\n![BottomUp](https:\/\/centre-borelli.github.io\/ruptures-docs\/images\/schema_tree.png)","8e6d50d8":"# \ud83d\udd0e\ud83d\udcc8Change Point Detection\n> Change point detection (CPD) is the problem of finding abrupt changes in data when a property of the time series changes. This can be happened so frequency in real world. Detecting the moments that losing concentration, change driving condition, climate change and dropping stock can be example. \n\n![CPD](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAABgAAAAMACAMAAADVCFz+AAABU1BMVEUAAAAAADoAAGYAOjoAOmYAOpAAZpAAZrYzMzM6AAA6OgA6Ojo6OmY6OpA6ZmY6ZpA6ZrY6kLY6kNtNTU1NTW5NTY5Nbo5NbqtNjshmAABmADpmOgBmOjpmOpBmZjpmZmZmZpBmZsxmkGZmkJBmkLZmkNtmtttmtv9uTU1ubm5ubo5ujqtujshuq+SOTU2Obk2Obm6Oq6uOq8iOq+SOyOSOyP+QOgCQOjqQZjqQZmaQZpCQkGaQkLaQtraQttuQ2\/+rbk2rbm6rjm6ryOSr5P+2ZgC2Zjq2kDq2kGa2kJC2tpC2tra2ttu229u22\/+2\/\/\/Ijk3Ijm7IyKvI5P\/I\/\/\/bkDrbkGbbtmbbtpDbtrbbttvb27bb29vb2\/\/b\/\/\/kq27kyI7kyKvk\/\/\/r6+v\/tmb\/yI7\/25D\/27b\/29v\/5Kv\/5Mj\/5OT\/\/7b\/\/8j\/\/9v\/\/+T\/\/\/+Ar49QAAAACXBIWXMAAB2HAAAdhwGP5fFlAAAgAElEQVR4nO29fb\/kRplgmWXscV\/caxjS2LjpAdTDQu0YTM\/uQMPOTHetoWh26IXqNdXQM+ACX5eNa+yq+P5\/zZUyJUWEQlJIEVJE6DnnZ9fNlOLtUYSek6l8OykAABDJKfUAAAAgDQgAAEAoCAAAQCgIAABAKAgAAEAoCAAAQCgIAABAKAgAAEAoCAAAQCgIAABAKAgAAEAoCAAAQCgIAABAKDsJ4C8AACA5aQQQVPv2NtIwCkV2+MJnX3j0ssOPP\/sIoEBkhy989oVHLzt8BNDAKpCM8NkXHr3s8BFAA6tAMsJnX3j0ssNHAA2sAskIn33h0csOHwE0sAokI3z2hUcvO3wE0MAqkIzw2RcevezwEUADq0AywmdfePSyw0cADawCyQiffeHRyw4fATSwCiQjfPaFRy87fATQwCqQjPDZFx697PARQAOrQDLCZ1949LLDRwANrALJCJ994dHLDh8BNLAKJCN89oVHLzt8BNDAKpCM8NkXHr3s8BFAA6tAMsJnX3j0ssNHAA2sAskIn33h0csOHwE0sAokI3z2hUcvO3wE0MAqkIzw2RcevezwEUADq0AywmdfePSyw0cADawCyQiffeHRyw4fATSwCiQjfPaFRy87fATQwCqQjPDZFx697PARQAOrQDLCZ1949LLDRwANrALJCJ994dHLDh8BNLAKJCN89oVHLzt8BNDAKpCM8NkXHr3s8BFAA6tAMsJnX3j0ssNHAA2sAskIn33h0csOHwE0JFoFVZWk2yGyTwLhOUB49LLDz1cAn7\/7Ne3ep\/ff+rC58eK9++fzO+8Pu13ZzYVkAgg0QCyDyD4JhOcA4dHLDj9fATw6awJ48eB8EcDn755rvvqbQbcru7lQrgDiGED2SSA8BwiPXnb4uQrgxaOzLoAn56sAHp3fel89a3Wgd7uqmxYEIBnhOUB49LLDz1QAf\/rBWRfAp\/evAvj0fvPY\/\/N33\/iZ3e2abjoQgGSE5wDh0csOP08B3D3g\/94fewG8eHD+j5fXAJ5cNz45f9\/udkU3PQhAMsJzgPDoZYefqQDe\/Kl62gvg0flr1xeBH51\/2Gx5ql8funS7opseBCAZ4TlAdvTZvBMvEVkKoKbP8U\/Pb314EcCLB9dLP92bgu66u3JbIHf5O3EDALLhFIpMdAE0F\/wRwDYNAMiGUygy0QXwqL7ePxCA\/UZQLgGFIPsqAJeABBPrFCqV7C8BPWne\/zP6DKDrdmU3FxCAZBCAYBBAZCIL4NP7Tc5HANs0cEV2DkAAgkEAkYksgCfnjq\/+hncBxW7giuwcgAAEgwAis6kA2vf\/8zmASA1ckZ0DEIBgEEBk4r8NtOZ6zYdPAkdu4IrsHIAABIMAIrOpAF48OL\/JdwFFbOCK7ByAAASDACKzqQDUM74NNGoDV2TnAAQgGAQQmW0FoJ69d5f\/37Ef\/x9JAEsWJAKIAQIQDAKIDL8I5s+IAPxXJAKIAQIQDAKIDALwZ1sB9PtmW5SdAxCAYBBAZBCAP1sLoPIpViM7ByAAwSCAyCAAfxBAFiAAwSCAyCAAfxBAFiAAwSCAyCAAfxBAFiAAwSCAyCAAfxBAFiAAwSCAyCAAfxIKwNwiOwcgAMEggMggAH+SCkDfJDsHIADBIIDIIAB\/EEAWIADBIIDIIAB\/0gpA2yg7ByAAwSCAyCAAfxYJYLEs5gXQbZWdAxCAYOYFcGxDIICaMgQw3I4AYoAABOMjgCMbAAHUpBSAvbwQwN4gAMEggMggAH+uAqiGG8cKe2xz7EQAkyAAwSCAyCAAfywBXG4ggL1BAIJBAJFBAP4MBFApBLA\/CEAwCCAyCMCfNQIwXjZAADFAAIJBAJFBAP6sE0DVF0EAMUAAgkEAkUEA\/mwvgNEmEUAPAhCMlwAObAAEUIMAJIMABIMAIoMA\/NlFAI53mioEoIMABDN8F7ajBALwBwH4k0oA1x0I4AICEMzw3LBPKQSwCATgTzoBVAigBwEIBgFEBgH4gwCyAAEIRjuXzPt6CQTgDwLwJ7kA2u2ycwACEMXII37t\/FJ2CQTgDwLwJ0AAYw9XrAqzArjskJYDTBCAJKyTAQFEBgH4o2dnx3s2nSvVUwDX5hCABwhACteToTI2IYCoIAB\/TAFUQwE4Vuq0APS6CMATBCAF4+TRNykEEAsE4M8WAugfz4wKQM\/\/CAABpB7AfowKoLIEoBdBAItAAP6MC8DxasC0AOwNiwRw5AXuAQKQwgIBVHqJA58fCKAmQwEM8vacAMwnsAsFcOAVPg8CkAICGIAAaooTgLIzNwJYDwKQAgIYgABq8haAkaURQHQQgBQQwAAEUJO7AKx3KSCAqCAAKSCAAQigRogA+vYQgAYCkAICGIAAamQIoDK6QgAtCEAG+imhb0QAMUEA\/iCALEAAMvAXgFEGASwCAfiDALIAAcgAAThAADUIYJ+A8wQByMA6JfqTa04A6sDnBwKoOb4AqnabQgA2CEAG9imhnU8IIBoIwJPhwlsiAKVvUz4C6DM+AjBBADJAAA4QQE0aAVQVAsgBBCCDJQLQcj4CWAQC8CSCALQHKghgPQhABgjAAQKoQQB7Rp4bCEAGCMABAqjJUQAVAtgJBCADBOAAAdRkKYAuvSOAbUEAMkAADhBADQLYM\/LcQAAyQAAOEEANAtgz8txAADKYFYB2+iGAtSAATzIRgDYEqSAAGSAABwigRrQAKgSQegRJERM9AnCAAGoQwL6x5wUCkIG3ANrzq62GABaAADzZQAB9FQSwAAQgA4cAtPWPAOKAADxBALmAAGSgnRLGqYAAYoIAJtHXlYcAtOs6CGArEIAMEIADBFCzRwqwLtIjgGxAADIYE4B2kiCAYBDACEYaV9EEUGmtI4BVIAAZIAAHCKAmewFU4wLQXicYF4CW9BGADQKQQX9KDE8FBBALBODESO\/9FmPhuQVgZWkEEB0EIIOBAAYuUAggGATgJIoA2icCkQXQ15IJApABAnCAAGqKEUCFAOKDAGSAABwggJrUAtBeloomgC7vI4AZEIAMEIADBFCzvwBG0rHyEcC1mN4IAggAAchgRADdSWIJoH+khgAWgACcLBKAka89BFC5BaA\/mkEA4yAAGcwLQHtWbZxKBz4\/EEBNbgJwZWgEsBUIQAZTArBPMwSwFgTgZAMBVCMC6PyAAPxAADIYpHuHEhBAKAjAyZgAqrUCUGMCaO+rMQG4HgUdd4F7gABkYJ9vrucECCAUBOBkKABXFh57fI4AtiRg9o9w4BDAlAC68\/KgIICaMgVgLeW1AtAe7MgkSADlHzkEgAAiggCchAhAdf\/oAjAuZiKAABCADIYCsF5KQwARQABONhCA\/VgGAawEAchgsQC0d2UnHvp2IICawgSgt9lvRgArQQAyQAAOEEBN8QLoF62aEEC3mhGADgKQAQJwgABq9hJAt+6SCEAhACcIQAaD80rNCaBCAItBAE58BTC2eZkAroU8BXCMdzOuBwHIYIUAKgSwFATgxFxdEwJwgAC2BQHIwDxREEADAqjZVwDXlBtdAGYbCgF4ggBkgAAcIICa9AIYLkUEsBcIQAYIwMFhBHCbN81qur2uqub+rb7uqqaEvunWunmr39batGt0W2\/bJrvO2hq3dte3XZOwjIojVw7GuXadOeusq+xTpD33Uo+9HHgG4KR\/OFH5PQNQzptTzwCswqr7dJj5DEB7eKOPRjA8A5CBca5VPANoOMwzgKDaCGDr+HMGAchgrQAOfX4ggJoSBKD9q7eJAIJBADLwEYB1qlwf\/B9glsdAADVlC0A56ykE4AkCkAECcIAAao4gAGXVUwjAEwQgA38BKASwGgTgZHMBaKsaASwDAcjAUwBt4fZhlTr0+YEAahDA1vHnDAKQwSIBKIUAVoEAnCCAfEEAMmjPHwSggQBqkgqgT84IIAkIQAZrBHD48wMB1JQjAH2NIoA4IAAZIAAHCKCmWAFY\/3gJQCEAk5HZ9zkoCKAgEIADBFCDALaOP2dGBTB\/VBBAQSAABwigJkcB9HcQwLYgABkgAAcIoCZrAah4AmgzFgLQWSgAK0dsMaJdQQAIICIIwAkCyJfFAqhmy5QEApgUwOVWmhHvAAKo2UkAZspFAJmAAGSAABwggBoEsHX8OeMtAP0QjpUpDwSAACKCAJwggHxZIIBKIYBi0QWgtPMBAcQEAThBAPmCAGTQC0ApBHAFAdSIFICqtIJbx58zCEAGCMABAqhJIAA1LoB+wxYC6GoigCsIQAYIwAECqNldANV+AujWvbm0FQJoQQAyKEcAO\/aHAGp2FoCRf\/t8rxBAEhCADEoSwG4dIoCaHATQl\/IXgOov86wSgOoKbh1\/ziAAGSAABwigJrkAjFK+AmirdLeMR\/ZqVgDtPgTg3IwADkZ7LvV3EAACaMhUAGqRAJRCAKtAADIwZg8BXEAANXsIQNnLbE4A7X0EsDEIQAYIwAECqMlVAPrLuwhgKxCADBCAAwRQk1IAKrEArqMTTDv71lFAAIfCeqyDAC4ggJp0ArjsQwAp6QUwfmS1LQigSKwTxxSAdo6ZNRDAUhCAE7cA2n2bCkBVCGASBCCBeQGo4dmEABaDAJxc1xkCyBAEIAEE4AQB1OQsALVCAOZynhCA3otYEIAEEIATBFCTrwD6zf4CUAoBLKGe\/f6JVkdcAeR7iBHA7gKYaw8BLO82qDYCCI8wNetjuAigUtbBjS2AXI8xApgSwPVW9LEE7Y8IAqhJIgBtHwIIZ8lJYxaNIID5vhFAYqYEoMYE0N2KPpag\/RFBADWpBdDfQgBrWSYAvWwUAcx1jgASMyYA4wUgBBAMAnAyJQC9FAJYSwIB9OURQPa4BWC9AwABBIMAnOwlAGMrAvAqu04AbQXPzhFAYhCAEwRQcxQBWFsRgFfZtQLQyiOA7ClFAPUuBLC826DaRQtgpCGFADzLbiwAX0WkAgFc7utblXlnXwFUey4WBFBTsABGG1IIwLPstgKoHKklKxDAcKt1BwH4gwCcIICtyVgAg4sLWYEAhlutOwjAHwTgBAFsTd4C0FvO7GgjgOFW6w4C8AcBOFkkAHsBIAAPBsdl5iTriSgAx+S4BJDV4UYAw63XO8Nb0cYyuQ8BLO82qHZZAvDqDgFMPyrX7iEACSwXgL459kgQQOxug2oXJQC\/7oxUZbeIABBABwIYbh3UjT0SBBC726DapQjAO3kYqWpstzG64ilDAAvmcC8QwHDroG7skSCA2N0G1UYAPo3mjZZhjQ0TZa\/EFYCjkiGAXU9vHxDAcOugbuyRIIDY3QbVRgA+jeaNlmGNDRNlryAACSAAJwigZncBjJZCAGtBACtBAMOtg7qxR4IAYncbVBsB+DSaN5sJwL6ohACKBAE4QQA1CMCn0bzZUABmi1X\/BwGUg6cARurGHgkCiN1tUG0E4NNo3qwTQH1jkQAqbY4QQEF4CWC0buyRIIDY3QbVRgA+jeZNn2ErY8PlprPs9RYCkAACcIIAahCAT6N5owlgkIyH8SKADgTgUTf2SBBA7G6Dah9QAP2\/7n4cxctmZwG0M4kACgEBOEEANYcTwOxoEEB\/a1wAjlcVJgRQDb\/HVSGAXEAAThBATT4CGEnzCGCW3QSgxgXgmlsEkAd5C6DfgADWdRtUe2sBXFOGdeF4rCgCWENCAVR9kkcAuZK7AKynmTE7nAIB1OwigPYGAtiEbQRgnI0IoGAyE4DjBO9vIYDl3QbV3kEA3Q0EsA26ALq0bO6zyyofAVjNhAmgrRo59iAQgEfd2COZXpEIYHm3QbW3F0B3AwFshCmACgH4ggA86sYeCQKI3W1QbQQQodHE+AvAzunRBTDoDQGkBwE4QQA1CCBCo4kxs3BiAVRmbwggPQjACQKo2VUA09OLAFZyPasyEIB5diOAPChCAFWldl4hCKBmTwHMJPGdBDB9v0QQwEoQgEfd2CMZFcDeKwQB1EgTwOj4CsYWwOW\/bp9dUtuDACRQoAD2WCcIoAYBbNDoziCAlSAAj7qxR+IQQL+ENB3E7NcJAqhBABs0ujMhAtCrGsXU5ZhrhRFAoRQggEr7o49xSxBADQLYoNGdSSWA9jYCyBsE4AQB1HgKYPV8LBeAYysCmCSdANp6CCBnkgtAX0YIIHq3QbW9BbByQpYKwLkVAUxiCaDN3u0+u6S2J4IAFALInQwEUPUj8RDAsNAWIIAaBLBBozuzsQDag48ACgUBOEEANQhgg0Z3xi0A13PplQJoP6ODAIokXwH0awcBrO82qDYC2KDRnRkTQJu9rZL9bQQggpwFUJmrFwGs6DaotnMVDI\/+PgJwb0UAM6wSgF5lKIAueat1AtBSPwJIDQJwggBqRgRgH\/49BDDWwKYCuM0rJa1iPwF0uzwE0LeBANKCAJwggBoEkFVKWkWWAujaRACpQQBOEEDNvAAceWQBCGB75gVgnID9zSgCUFY7egsOAeR0uKUK4PJ3ZwHoDxT0HU4BxOl3GgRQ4yOAkOyLALbHRwD9lRktjScRQEbHW6YAWnYVgLFE9R0IYMDn737teutPPzif3\/g\/P7zcefHe\/fP5nfeH3a7s5gICyCghrWSNAMwTMrYA+kd7CCA9CMBJtgJ4dL4K4Mm54c3f1Hc+f7e589XfDLpd2c0FBJBRQlrJvgKwGAqg0l8XQADpCRFAcCbulwIC8OLFo\/NVAJ\/ef+M\/KfXsB5e7j85vva+ePTi\/9aHd7apuWhBARglpHdbZFVkA\/XlpCqA\/mYcC6BI\/AsiBxALoVyYCmKe+6nMVwKPz9+s\/n96vH\/Vf\/r17HvDGz+xu13TTgQAySkjr2FQA2nmJAAqlTAFsvk6yFMCT8\/l7f2wvAV34\/N069T+5bnxysYLe7YpuevwFsG5CEMDmjAugO912EYBxKiOAfEgtgMGaqbSdQwF0f8M6niVPAbz5U\/XUFMCn9+urPo\/OP2zuWTsVAggDASCAozNyzBFAZGK9CGzm+D\/er1P\/iwfXSz8XHVy6u3IbnbuDb92pjE2LmrKaWTOWtXX92t+i1T25njPt3+vt\/u5tf+y0+3qV265g2+J1wisDrTOtbtfXrb7j9rbS\/l4rdv3DngQd8tD5MhaQvpKuO41VY67IsI73ZwsBPDqf3\/ipQgAIYJxwAVinJQI4FsUIwFpdYR3vzwYCePH\/\/B\/3z2\/8X4YA7DeCcgkoBIGXgCpnFf3wDi4B9fv1LrrGuASUNSOHPL9LQNbqCut4lkIuAak\/1deAHM8Aum5XdnMhrgCGhRDA5jiyuUMAWvpGAFcQwOrKCzo3lqW50qxVgwAa7Nd5n57f+rAYAdilEMDmOLJ5pgKwukkOAlhdeUHnxrI0l4C1ahBAgy2AJudv+S4gR9aeFsDo3AxnDQFsjp2RqyUCMLTRt4gADgQCcJK7AF48uOb8RgDt+\/+3+BzA4Fhb2d4hgJHJGe5AAJtjZ2Q7s6stBaAQQPaUKIDwjmfJXQDddwI1f7f8JPDgpBxm+2q4ycVwBwLYHOvs2lMAemnzVO4u+iOA5CAAJ9kL4NP75+99qF7887nO+XfPB97c6ruAEECZdAk4CwF0rSOAzEAATrIXwN2NhjeaK0HPtvs2UARQJmZO1rP7CgHoJxwCOBT5C0BZ+xHAhWd\/e5f+258AePbeXf5\/x378v4sA7NdkfAWgpxUEEJ3FAqi0IpYAlH7GIYBDkYkAHEsAAcToNqi2nwCsE9dfAP0GBBCd1QLQTkkEcHyyEIDSHkoigKjdBtVGABklpIXYOdkQgJFwzSS8TADGOYwACgQBOEEANQggo4S0EAQQCAJYXXlB5whgW4oRwFTFcRDAKCUJQO81GxDA6soLOtdXoZkTJAvg+R+idRtUO0wAkxWtyXbs9wEBjBImALWnAPQx7X6cRkEAqysv6NwWgLHQZArgd399Or3068\/+6tsfxOg2qHaoAKrxighgY0oRgKOZPEAAqysv6NwUgDIXmkQBPP\/56dQI4O3Ty7+O0G1QbQSQUUJaCAIIBAGsrrygcwRg8fB0evlvbl769fO\/O51eCX8OgABCKF4AlUWoALqn6d4CaM9eBJApCMBJKgF8dDp9R3329kt3D\/5\/e3P6bni3QbXDBeDcoVU1NyweIAIYJZYAlCkAK2cjgNJBAE5SCeDh6SvqKgD1+PRqeLdBtWMIoHJXdAhgBZoAAltyggBWCKA\/cVW3DQFkCwJwkkgAz3907x86AXx881LwqwAbCaDblosAtgEBIICjk58ArPwhSgCX1H8VwPVPWLdBtScEYJze3gIY3A0aHgKYYCTdIwBfEMDqygs6dwqgu4UAgrsNqr2FACrjbtDwhi8zROYAAjCfBTgEYHpgQgB9bQRwIHITQL90usVnCSBGx7MkuwRUv\/B7zfwfRXgbkAABbIgwAVz+GRdAez9AANrp3vahneTbn9cLQACrKy\/ofFoA2rLSVmqEjmdJ9SJw88LvRQB3Msj2ReA5AXRTigBSsb0A9IdnXgKwn1AggAxAAE5SCeDjm9OXP2gE8MnXT\/ULwqHdBtUOEECFANISSQDtMUYABwUBOEn2QbDHp9PptZt7r3\/x7u9XInQbVHuFAPocgACSEkUAXUMI4KggACfpvgvoX25OVyLkfwQQBAJQCODgIAAnCb8M7s+\/eO0u+3\/hS7+K0m1QbQSQUUJayFIBaOkeAdQggNWVF3SOALYFAYSAABQCODgIwAkCqEEAGSWkhSwQgEIADhDA6soLOl8kAL1QWMezpBbA83\/95T9F6TaodgECCGxgmoMKQN+mrveHAqiq276hXQSww3m9AASwuvKCzhcIwCwU1vEs6QTwyf\/9gVKfff10Or0c\/i7QvQXQZ5V9BLAxCEAZNbSnCxsIQCGABGQrAGtZSRHA41P9IbCHp8vPwoR3G1R7iQD0xIIA0rOLAJQ5qwigPBCAk4S\/B3CX9j++Ob3ywSdvR3gj6J4C6JMNAkjPFgLoKoxMIwIoDwTgJN3vAdTf\/\/NR8yHgsr4LCAHkhUsAapDOwwWg30EA5ZGPALRt\/b7BrTgdz5L09wCuGijr20ARQF44BNBtRgAeIIDVlRd0buaEdlu\/b3CrKxTW8xyJvw66+Rq4MgTQTg8CyAsEEAgCWF15QecrBbD5SkkqgI8vvwZciAC00x4B5MNqAXQThwAkkFwAdoapjAWnVL+EBAjgcgno8eV7QMt4DcBbAO2TBa2dnM53FwIF0JaxBdBVQgDHIjsBmA9CumIyBKAenl6t3\/5TZ\/5C3gWEAPIEAQSCAFZXXtD5uAD6i0EuAWy9VBK+DbTmu+r5j085\/h6AcRYrBJAvnQD6bN9tdghAnwsEUIMAVlde0DkCsKh\/D+Dyq2Cne9+N0G1QbUMAWubwEoA9uS4BBI1ue44tgC4LIwAXCGB15QWdIwCbT37yrb+\/+\/PZX0X5PuioAhhcT0AA+WLkfASwHASwuvKCzhHAtuwjAIUAsmMogHaz0jL1hgKwxoEA8qQEAXRrDAEs7jaotp8AVJvcJwTQSQIB7IQtgH6z0jI1AhgFAayuvKBzBODg9y1\/CO82qHZMAbSbEMA+pBXAcBwIIE8QgJNkAvjkx6eerD4IhgCKoggBtLcRQDLyFoBWUPsTpe9pUgngs7dPOQpAf6CGAIogPwH0EkAA+YAAnKQSwOPT6eV\/\/8uWf8rkk8D9PCGAUshNAFrDCgHkAwJwkuyrIJqvgYvYbVDtKALQUr+dijI63Z0gAGUKQCGAo5GDABytChXAZ29H+PSv0W1Q7WgCuNYwphsBbAoCCAQBrK68oHNXC6IFEOFnII1ug2ojgNxHOE72AuhWQNWe8AggARkLwCyo\/YnS9zRpfxAmYrdBtacE0GX+6x8EkBdZCcBsWN9l1EcA+4MAnKR7ETj8G0CNboNq9wJoz2MzoSOAfAkSgBoXQDeRek96n0MBGLcRQF4gACepBHD3FOA7UbsNqr1QAP0eBJAcY46WCaCtjgAEgACcpLoE9JNvnE73Xv\/mlW\/l8TZQ88xHAEXQz5GycrTqE\/6kAG4RgAAQgJNkLwKfMvwg2DIB6DUQQDK2EIDSloFRVO9zhQD00ivDjQ8CWF15QecIwKAwAXTzhwCyY1QA3U7VC8BK6copAK1iVAGY3S6JcVMQwOrKCzp3tqCnia6g3d8hBRAdBBDCAQWg7VSmAAbVEYAEihJAzL6nQQA10QRwnUEEsB8LBeDAXwDmXgRQEgjACQKoGRWAQgC5s58A7L0IoCTyFIDjCWnsvqdJKIA\/\/+K10+nea98O\/zEAlUwA7QZdAAoB7AkCCAQBrK68oPPRdTRb8KgCeNy9BBzjI2F5CKBtDwHsBwIIBAGsrhzauWQB1Pn\/C69\/8xtfjGOAaAJQlyO+SgBdewhgPxBAIAhgfe3AzgUL4OOb0yu\/am598qNThO8FQgAhHEgAjp0qkQCM4oMWRgPaGwSwvnZg54IF8PD0Svvp3yi\/DYAAQjiMAJw7VRIBWMUHLYyNZncQwPragZ0P15cUARjfBvrxzSv5fBWEQgBlgQACQQDrawd2LlcAxu8BxPhxgC0FUPVnsEMAvQUQQAqm8r8mgIlCCEACCMAJAqhBALmPcJzJw1tpM7dIANe7COAwIAAn6X4T+LvdnY9OeV8C8hVA3x4C2A8EEAgCWF87sHO5AijqRWAEkDMIIBAEsL52YOeCBfDxzenl\/6+59T++nvnbQLU9SwTQTRwC2BQEsJbrGBDA+tqBnQsWwOWDwK+99lqkjwLnLYCgwe0AAhiWqKrxWkcRQDMIBLC+dmDnkgWgfntz\/SaIKL8NmVgAfYlrMUMAQWPbg0MLoLs1VsgtgKlaCKA8UgpgtLZjXYgRgHr+u2\/cPQN4\/e+DXwBuug2qjQDyH+MYMwLQio0VQgASyFIAjpJyBBC326DapgC0NI8AsmdSAEaxsV3LBdC+zJ+bAJa1KkoAY4cGAURmmQB+H63boNoXAahhmh8KoM\/\/tgC09hDAfiAA9\/j4JKAAACAASURBVBi8SyOAgOphnbtKyhHA7\/66eQXgS7+K0m1Q7RUCUJYAjPauu7U7eYMARkoggKOAANwkE8DzH3W\/B\/DlCK8CbCMAtVIAbSvG34xBACMlEMBRQABuUgmgzv\/3Xv+vv\/x\/v3FzivA5sG0EoBBA\/iAA9xi8SyOAgOphnbtKChHA49Pp314e+D\/\/x5P2tRCruw2qPRDAIMkfXAAlDHKEPAUwN0QEsDMIwE267wLqP\/31MJOvguiP\/rwAlPIVQAmpFQGMlFgpgPkhIoCdQQBukn0bqPF7AHl8G+gCAbR3EEByEIDXGMZLI4CA6mGdu0pKEUCGXweNAEqkZAHEPuoIYBQE4IZfBKsJF4CjUQSwC2ULIO5hRwCjIAA36V4EftV5e3W3QbVtAajupPUSgBsEsAsIwGsM46URQED1sM5dJYUI4PmPurf\/Pz6FXwFCAEEggJES2QvAbAABjIIA3KS6BPST+v3\/r3\/7l\/+t\/vuX32z4VsCFoL+4DaWq7v6rtLvNneqyud3TCqC9c1vpdQYNan8yp4xRupiYAavYihKjtert5s6JDhxDvGzwG\/oU3mOYrXtwAmMNq+5f2zEnhc2S74vApyEhTwR4BhACzwCUe6Im287jGYDnGMbr8gwgoHpY566SMp4B5C8AFUEA1xaChrYLCGB5LQRQFAjADV8HXeMtAKWWCaBCAFuDALzGMF4XAQRUD+vcVRIBrOs2qDYCKGGUbhCA1xjG6yKAgOphnbtKihLA8z9E6zao9noBTJxzCGAXPJPeDgKYKhgqgLGCCMATBOAm8e8BvPTrz\/7q2zF+ExIBhFC2ADyLbSyAZX0vF4C7JALwBAG4Sfd7AD+\/vO772dunl8M\/BoAAgkAAy2uFCUB1q2tJE67sgAC8QABukgng4en08t\/cvPTr5393OoV\/EwQCCAIBLK+VRgDDS0neAhiriwACqod17iopRAAfnU7fuX4L3G9vcvs9gAYEUAYIwHNEg50IQCGAVAJ4WP8ewPVrQLP8LiAEUAgIwHNECMAFAojMkm8DvQogv98DqEEAZZBSAF49I4AcQABukv4ewFUA+f0eQI23AMYavRQsIrMigOW1FoAA0hNPACuWBAKwOY4AxkEAu4AApjsa34kA1DoBLF4TCMDm+Y\/qF36vmf+jCG8DQgAhIIDltRaAANKDANwk\/UGYiwDuZFDwi8DjIIBdQADTHY3vRAAqrgCW7\/ApeUwBfHxz+vIHjQA++fpJ+3nI1d0G1UYARQzTCQKY7mh856gAyl0M4+wjgJE9QQf0mAK4ewpwOr12c+\/1L979\/UqEboNqI4AihumkUAE0485WAMWuhlEQgJt03wX0Lzft7wBEyP8IIAgEsLzWAhBAVFaNDgG4SfhlcH\/+xWt32f8LX\/pVlG6DancC0LYhgDJAADMdje4sVwArhocA3PB7ADVXARgggDJAADMdje5EAAoBJPsqiDgP\/Ptug2qvFcBkowhgFxDATEejOxGAQgDpfhM4\/AvgjG6Daq8TwDwIYHsQwExHozsRgEIAST8JHLPboNpuAVz+RQB5gwBmOhrdiQAUAkj6ZXAxuw2q7RLABQSQOwhgoiP9PgJwgQAi4\/1J4FeivgiwpQAUAsgYBDDRUTWVuHQB+D+RSA8CiEgqAfz5H0+nL7z+zSvfyuO7gBwggNxBABMdLRDA1HOFvEAAEUn3IrBOJt8G6gAB5M7GAlg+IM++EcBaEEBEEEANAihimE42FUAcEEBUEEBE+CBYDQIoYphOEMBERwigr+Te7i0APQOMF1rWuWfXAZVnQQA1CKCIYTpBABMdIYC+knv7AgFUc90jAIUArNplZNaCBeA7cASwjQASLBwEEBEEUOMhAG0DAsgIBDDVkVMAViYLFcDuKyczARi5YVnnnl0HVJ4FAdTMC0DfgAAyAgF0rfkLoNL\/JhXAulyemQBmXx1AAJuDAEJAAJuyiwCc+wsQwPLqCCAiCKDm9nYsqyOAzEEAU\/sRQF\/JvR0BRAYBGLXLyKwIYFNWCMCdyRHA6i5jCMB9nQ0BGCAAo3YZmRUBbMoqATiyjGPl7SaA8dwmSQCug4wADBCAUbuMzIoANiWmAEayj58AzIewcwIwGhsb6roMHlgdAUSDXwSrub0dmzwEkDnyBFC5yvkKoBrUmRKAx2WhwAweUH1ZTQTghl8Eq0EARQzTBQLQkrUwASypigDc8ItgNYsEsGDlIYCtWTAVhxVAn5UQwEQl93YEEJlSfxHMVwBqycpDAFuDABYKQHsAc62KAPz6RABelPqLYAigSBDAYgF0TSAAhQD4RbAaBFDEMB0ggDIF0NZCAB5dB1SehR+EqUEARQzTAQLIUwCT82KOYaLgaPXlVRGAGwRQgwCKGKYDBLBWAN2NjQRQqdHZGQhg2epbJoCuI\/duBBCZQj8IhgBSj2EdS6ZijKMJwEz6ZtG9BVC1oQ4GXQ3LebJUAM4xtCCAyCAAo2QZmVWAACY4ngAqVzOVgaraxWkKQBtWRAEMgilVAI5JswXg6AkBbA4CCAEBbMqmAlDrBHBtUA0F0L1PdC8BDIKaIakAhh8DGgpg0BUCcPL891d+9+9yfw1guM0LBLA1CCArAbhzYRoBGM8xNhdAP50IwGBMAJ\/8uJwXgT22uUEAW1O0ACYS35QArIy7vQCmXGUPp9JvLBDAgusm3gKojD\/uUvEEUA0Pf1\/Eq5OxrgMqz5JKAObbgF5BAElBAJuSsQAqPwGMf\/9JNAG0D6NHD4G9I08BOGWGAAY8Pp3uvf6Nm\/r\/073vROg2qPaUAFzbEEAuFCIA98YcBFDlJYDK0ZYWq74DAcQg2XcBnV75oP73u823QgR\/EHgzAbgQKoAsIylCAE5yEUBVkAAq\/S8CiEGyD4I1Xwb3+PSVu38fRvhqaAQQgqcAMgwFATgFUA2bGeR\/BFCDACKz6OugPzq92v0b2G1QbQSAAPbGLQDrMke\/eaEABs0M8z8CqNlIAPb0eXUy1nVA5VlSC6C++vPZ2+HXgBBACAhgf8YEYCQ5bXOwAAYO8BBAZW9zhIEAnAKwZmk9hxTA9fcAPr6pPRDj12EQQAgIYH\/clwucAjDyNQKwWh1bAgjAh2S\/Cdxc\/b+8FHDRQGC3QbURAALYmy7zWVsRgLPl4bFxHqph8QwEELZIjymAj29OX\/pV\/Tagr9Qy4BJQWhDA\/hiZT9uKAJwtD48NAohBsk8CP2w+\/\/vR6XTv5tQ8GwjsNqj27aI3wi9RBQLYFgSAADITgEIAOqPfBfQv9YWf5w+bDwJn8DmATUAAW4MApgSgFZ4XQJ8vEYCrMQTgxYIvg\/vvd3n\/+W9fe+3b4fk\/WwFkmTUHIID9yVAAeiLTayMABOBNqV8HvQmF5H8EkIB9BNAdoNgCMDO9PXwE0M8AAhjn+R+idRtUe0MBbNNwZBDA\/uQhALVeAP2TjGqwFQHog0MATn731\/XrwJ\/9VYwrQAggCASwP1bm67auFkCl5SJPATTbIwigsrceXAAOZyOAK74CeP7zyw8BfPb26eXgTwEggDAQwP5omU\/LoSECqPpcFCSAdl\/JAjA0dt3gZJ0AzClAABoL3gb68t\/cvPTr53936HcBZZgzHSCA\/dlBAHryESeAyiyGANykEsBHp9N3rt8B8dubHL4NdBNyTJkuEMD+eAugz9dW5u5aaQshAEcXewigQgAdS74K4volQI9z+DZQ0SCA\/RkVgJ0zRwVQta20hRCAddCM0soJAojMki+Duwogi+8CEg0C2J9iBKA3rQ8\/QwH0NxGAJ0m\/DvoqgCy+DVQ0CGB\/EEC7K6oAtOOIADxAADUIAAHsTSYCUH2y31QA9X9mRKrfdUwBdCJAAAMuvwZs\/CxMYLdBtREAAtgbDwHouXlcAKrbtbUAXOnZXwB9MTECqBDA2IvAzQu\/FwHcyYAXgdOCAPZnUgB9UlkqgO62tlO1iWm9ADoJ9MMfF4Cuonar2SUC8OeYAvj45vTlDxoBfPL1U\/PrYIHdBtVGAAhgb7YSgJHBOwFYe40eldISplF9tQDMhN53rsetzF2HE0B\/yBCAg8en0+m1m3uvf\/EU4+cAEEAQXr+H41FkfxDAiAD0nZkJwI6issubPbi6dNzVRmwMq\/vjngYEEJkFvwdwuhIh\/yOAIOrwZ9fZ4ITMgaMLwEj7Rm5v\/0YRgNVwKQKorHLmcUQAHiT8Mrg\/\/+K1u+z\/hS\/9Kkq3QbURAALYG08B9HkbAQQIYHSdIIDI8HsABZJMAMFNIoC0AjCaMmsY92UJwDpkCGB7EEAICQUQ2OYRBVCZb+fpE6aWOs1i8QSg79O76rNZN3xPAfTJ0W6ubcaIStk9DDZUw79aCQSwjN0F8Pwn3xzyreHnAD5\/92vXW3\/62\/P5jXfev9x58d7987m9o3cbNGgEUI4AzBrHFICejdcLoM98jr1aj3232wnAGnlXRxuXspZD1Y9\/0KX1VyuBAJaxuwA+e\/s0xPFJ4EfnqwD++dzwxs\/qO5+\/29z56m8G3QYNGgGUJADz7AsfBAIYPDnISQCVo0vrr1YCASwjUwG8eHS+CuDp+Y3\/pNSzB5ek\/+j81vv1nbc+tLsNGjQCQAB7U54AjMynlem3GjW6fncSQIUAVpDnawB\/+sH5KoAXD84\/rP\/ePfS\/+\/vp\/UYDn797eT6gd7ummw4EgAD2RksmWkoxUq2210ikSt91MAHYzzHcXVp\/9Zb046g3MzINCCAyMQTw5Hz+3h8vAvj83evlnkfn79c7vnYt8H272xXd9CAABLA3WjLRUoqRarW9VhLWctGYALqcqlx71wlAO9xamT7JGTUGzVpddc1Udnm9h8rZpfVXP3L6cdSbGZkGBBCZKAJ486fqafsawJVGAI8uTwcGOxFAGAggAX0yGSSuLqlWlVMA+t\/NBDDI2EYq69NrnwAnBTDsyjgIxj6th8rZpfVX2XX3FkCb\/BHAYgH8fmS7leObqz4vHlwv\/Xx6v30R4C9abiGMqpotMFdiTaeL2zSrbDCmvagDabLE9d92Y4txx+D2Wue2LXarN2Q0cXv9x97bH8a+wLCmtU873O2I9bF2W7UmRsZSWfWt8t3xMaZbq2L9vbXr9kPomgmeLO3IWUtQP6bmcW4PS1jXYUPfGW8BPP\/FXzY\/CXByfxTYEkBz8QcBbAgC2Jk+mbjS4UoB2E3sL4CuI6vZYVdWxNo9rYeqHYYtgG671VI\/vl0EYB9TBOApgI9uTpffhDmd7rl+E94UwNPmbaCaAOw3gnIJKAQuASWgGl4CMnKw48JMu6e9+tMW669D2E30O+NdAup7dl0CMpsYjGV4CchRvt3Td9YeMH2HSnwJaDhlGV0C8q2V8OugLz8D868\/vnF+HbQhgKf336gv\/jueAXTdrh5wDQJYJYDw7Dtsc2GVAwlgmL2rEbYWQLttXAB9Ehwf8GBvX9upPEfL\/VFqD5i+I7EAhiFWewnAo8HKs9NUAnh4erm98uP+QRhdAE+uHwNDABuxWgCDOgvXuu8yHa1yKAFYuSRrAfTZd2zAg71K\/6c6ggCGc7SXAGZb9CjSkOw3gbVH\/R\/fOD4JrAngn8\/t2\/55F9A2xBTAosW+sPiwyvEEoGWyagQEoA0PAYwN2Kv1pD8K77rT0uX4F4\/Ob7YX\/Nv3\/\/M5gLgggAT0yUT71ymAsSxzNAHoZdvujS2WALq29Ja6g2vUQgAj5P8M4JH2vQ98EngbEEAC+mSi\/TsmADt7zwigT4B25jIy02UYyk5jCMA1WcZhVCMX7hCA92sArzpvdzztPvSrXe5\/8eD8Jt8FFB8EkAAtmeipxCUAZeVSTQBWQ8qoqoaZy8hMl4at1g0BGNUsAVw3GLv1Vo4sgDHyE8BM0VQC+Oh0+tIfmlt\/\/vnp5Hgf6NP2qyDOLfX9Z3wb6BYggAR0ycRTAP2Dey03Xxuysk9MAejbbQGY+Q4BbCIAR\/VqvkX9SEyVS\/ZJ4Ien0+nea6+9Vv8ysOMJQCuAp2dDAOrZe3e33rEf\/yOAMBBAAvQsqiWWEQEoLdMFCqDtuW3VKGVUt7MbApgTgHUUEMCoAJ7\/Y\/td0Pf+9xjdBtVGAAhgd\/QsqiUWK4v2OS2SAPqe21aNUkZ1R25rC0cQgJ0sRwXQx2nsQADTA\/Yqm\/C7gJ7\/7ht3zwBe\/y\/DXwNb021QbQSAAHZHz6J9YrFyYukCUNZdqz8E4NW3YzQeA\/Yqm\/zL4GJ1G1QbASCA3dGzaP+vlQZ3E4ArFc8LwCiEAAZHAQEggBJAAAnokolLAF2YfU5bJIChThIIwE7qRQug7cBXAO3IEYCTP\/9e5w\/h3QbVRgAIYHe6ZFKuAJRRaFYAymyicvdqhJmLANqGchCAFubMaI0bbpJ9EGzuR+GXdhtUGwEggN3p8l8UAXSJUemtRBCAkZcRwEEFEOM8uoAACiQ3AUw1YlYpXgBdSokoAG3jMQSg3eoakSoAI8yZ0Ro33Nx6lVqAnwCe\/+svr\/znr5\/u\/dd\/Cn4nEAIIIT8BjLdi7itcAKpPKSsEoBXRBKD0jWUKoBtSGQJQrjCUvsG3j5GOrWH0Yc6M1rjhJpEAdD6+eSX8naAIIAQEkIA+n2kJQ8UWgJaBtdyaiwDs8mbldQLQOuiPGgIYIQMBqMenr4R3G1QbAawQgHMdLlxII8WnWjH3IYBVAjAShLLz2oYCMPJzNShvjnStAPoAut27CUAZB6+PI4DDCyDGUwAEEMIGAvBbUCPrbmo5mvsQwIQA+r16WjUaMwTQ502txmoB9Am869fKkVbxowqgQgDTOH8PYGm3QbURwAYC8FlRI6Xas3++CgIYF4Dq9+ppdbC\/G0RkAdiVtX4HBSsjqn4DAhAgAOfvASztNqg2AshRAO4GzO0HEUCvgVwE0OX2GALQJk3PkVZZDwG0uXxCAHasfSUncgTgrpOBAJ4\/PHEJKC2hAuj3DNfdoja1zWMNmNsRQLgAugaV2WqffbVEpw9wcJFnJDXqk6bnSKvspADMMWgCaAfsbFLrcGQW1gjA7sslAHNAvn2MdGwNw6fFrsjwhkGqt4H+5Jst37g58SJwYsIF4MorHh2PlKoQQBtmNTi2Gwig69BKLlYmGwrA7sCdGoePECoHqwTQD9jZpNbhyCwsFkA1FmXXpfZHH8hqjigA84NgvA00MVEFUDlL+7WpbR5rwNyOADIQgJawnalxGHXloAgBKG18VpRdl9offSCrOboAvvDtCF8IjQBCiCuAylXar01t81gD5vYDCsAMv9KPrdIr6MX3FEClvz6gt4EAtCLa4KrRzn07tobRhzY3WucNo+EMXgOI021QbQSAAHbHyufzAujrObN5HAEYx9fKbisFYI3eVwBtb2ULQA0PwVImBDDecLdveMMogwBqEAACSEVWAlDm8bWy264CUAig69gahhna1GidN4wyCKAGAfgJwMq9jrXltTiNNsY2jzVgD8KjlxkKFYB51EULYLRJrcORw79UAF3sdpTmSPqDggDG4fcAMsFfAJV1v7tpb\/RbUSOlKgSg3XYKQFlH3UsAdhVtf54C0FoZjsHe7GhS63Dk8K8SgLK7MbrsCxr3VzMmgGqq4W7f8IZRJpkAPvkxXwedDRsLYLzpkXVXIQDt9kAAg1TdJsZpAQyraPsXC0Av2DWxnwCsZobPdMyQEcCsACIZwFMA5vtAEUBaNhfAWNsjeyoEoN2OIwBXFW3\/mAC0FjYWQJ9I5wUwaMYtgH4ACGBSAF2b4XgK4PHp9PK\/b38T4Jf8HkBachaAI\/8Z92ZG7UGmAmh3ewmga0gr1Rd3VvEQgNlCHgLQl9ewamWP4UAC6B8R9NHPjdZPAH2b4Xh+EvhHp1ejdNd1G1QbAeQsAFcG6e\/NjNqDLAXQ7\/YQgNaQVqov7qhizphpnMEItUS3kQCM7UUKwDghtIMSTQB9\/9rhmRutrwCmG1uC7wfB7v1DlO66boNqIwAEkAozcV43bS8Ao7npyTISXUwBWFlbb6jPcFbCFS0ALbZ2w8xo8xVA+GV\/s9ug2ghAP0VGVkLlWuDdTXujXnR8bY3sqbS+rD4RgPvIiBSAOTStKaP83f+bCUAp4x8E4H0JiGcAGWELYCIrW\/ftGt1Gvej42prsyikAa6EiAKshrVRffKyKtn9Y0S7hKQA9\/zqa63PXfgKwF41OEQIwjobebrECiPIzkEa3QbURAAJIxbEEMNtjn7uOL4A+KN8+xjpum18ngLG5rxIK4O4pwHei9Nd2G1QbASCAVGwtAOOgOY63nR+deaLPdgjAVwB6sL59jHUcLIDuCNtlUl0C+sk3Tqd7r7e\/CfAt3gaaFASQDqECsBNpn9MQwLDjCAJwlK7SCcD8HBgfBEsMAkjHTgIYbDX27i2A9oaRp\/WGlgqgUo5bxj077itFCkD1Fp0ZLQLwAgEggFTsIgDHTb256cnSsl0\/2qIEMLECEUDb0q4CiA4CCCGtAKaT0rBPBCBYAObyqowG7Ft9W+MrEAG0LbVtBoIACiS1AEZSjlnZuY4RgGOHtdN9U681PVl65kUA1rgPJ4DQEwoBFMgCAVhnvV3DPkOnGlT62ePqyqysrX+95ExoHiCA6cnqEqk+2nkBuJszdxh5Wm9ooQD0AjIFMHWcEcAcCGCBAAa5fj8BmANQxqjXgwCmJ0tPDXbS09swBTDSnLlmjDytN7ReAHZhrXUXKwSg9HEXL4DLXgQgGgSQjtQCsHODO0\/MCkBLR\/YqcTSm+jb6PN1XrbTOzHLW8tKr6\/u0wlrrLhYLQAvROhb22owqgD6QakwAlVVJ3zE4cdoyt93cIQC5FCuAGPk\/bwEMj467mLJyQOWcT9dMWMfUnSeKFsDUCixGAHqccQTQbEEANQgAAaSiHAH0fdjT1iWRYYPunKj6NvQ8vY0ARuK+UKoAjCOuEAACCAEBpGNeAIMKSQSg92FPm5mO7FXibkzLS12e7qp22Wi1AMwcOb4ClwjAiMIYaj9IR7ChSVUP3Qx3rQA0mSOAGgSQXABGEb0jYyWb61iEABwVjigAcyxdNlopgL79eAIwozCH2g\/SEWxoUtUCXCqALrObk6wdXgRQgwASCEA\/uwePevvG9U7MARiDDqA8AShnsWrkmLtvGtWiCEAbvrEgJkbvXFMFCMAeaj9IR7ChSVULcLkA+lEOlkGzxRTAIILlIIAC2V0A7UlT6Utv0JVR2coAfTvBFCYAreZhBGCPRctQRjl7eXWbhvsqBIAAfEEAtgBGE4VxagcIoE\/++ilvdmVUtjJAW3B5sAMQwPxkmX3YM9ZN5bBBd05UfRt251rbba7zF4DWRbWbAIxgHMGGJlUtQAQw2m1QbQQwFMBgIdj5V7vt2DifU\/qs4S8A+yRDAOb9TARgLgh3Y1pe2lIA2h0nwQKwgnEEG5pUuwCH4a4QgHV4EUANAihNAH2uCQcBzE+W2UdlzZg+M1YVd05UfRt251rb7YzPCsCMotsgXQCaF80jpx1eBFCDANYKwM72jk1jZ0bf3ioBdA9ngkktAOPUvm7yrDm+oTLnc6yK0nPDSBF7KhcKYKQxLS8FCsCOQlsh1nJxcGAB6EfMPHLa4UUANQjAVwBaOe18rMyNSpmr3jrL+y60ZWwU0POCcYYjALPm+IbKnM+xKmowO86JNwovEsBoY1pe2kgA2v7x8QQIwFz2COACAiiQEQE4lpRDAPaZsFoAdgUEMFtzfMOsC8wBTHVoz0wZAlD6\/vHxhEy+sex3FEB\/3MIF0DbTFwsaKwIoklEB6KuhW0rXwpW1xvRC6wRgnrcIYL7mzIbBZleJ4exM9NPlCQSQTAAKATi6DaqNABYLoDKXGAJYixaXI4PN1JzZMNjsKjGcnYl+ujyBAHITgHkyWEfMPHLacNtm+mJBY0UARZKtALpHKwjAWXNmw2Czq8RwdgYFzMLRBTAcS5\/mEEAEAWifH+jO7v6uIYCgkdYggALJUQD9VgQwWnNmw2Czq8RwdmZG6xaAtWF20JU1v8ZY+jSHALwFMDD1gN4D7emFABoQQFQB2HWHKcaov1YA9oOe1dEjgNgC8Bh0Zc2vMZY+za0SgNne5NAiCmDYzYLjMt3N9gIYtrASBFAg0QVgvo90mGKM+usFEHpqXaNHAPkIQG+7X0iDpdb\/GQrAjm1yaAcXgHXktJMTAWgggFEBWFk5CwFUWgMxokcAuQhAGW33C8nMXX0z1vLYXQBWVM5YEgqgL9kfvfYgIgANBDAhAD23t+WMBK6fevpSU8rYqN1FAD16XF2ovjVnNgw2u0q4U+fEaPcUQF\/BXFf9n\/6YOfrX0uDIeOJMvjkqa3PoKu0WCAKY6DaoNgKYFEB\/srXlrlv1tdXVNU5UbaN9V1+WCMA8jL41ZzYMNrtKLOq4P\/obC0Avct2uPyDp\/0wGp6XBkfEIEIB5VlYVAhiAAGYE0D0h31cAetvGCkYA6tACMIvo981Ua68aZ2yTQzuWAKyTTBmHGQGMggAQQCr6uJZmikHxkfrTObJUAfRjd9Q0YpscWiwBOEew4LhMNu4pAKUdDSNy\/azsT2oE0IEAAgXQ1daXmtIadNw1K2tF+q2VVtNYwUcUwOJMMSg+Un86R6pF5umPfloBaMPJQQAjI2hltacA9JNIGYcZAYyCABBAKrTDtTCcQfGR+tM5sp58\/477o79aAPoNh3yiC2Bk15VNBTC1dVGrCGC226DaCGAHAVTmXQRwwZ1SPWvObBhsjiYAu9mJ7udbnBxtkADmdx1PAN1kIABvEEDeAugLHFIAapjr\/GtObRhsjiSARd3Ptzh2HwG09T0FoJ1pCGAJCGC5APSFNSIAa6PW\/mIBtOn+uAJQizNFCgFoRRGAZzfbC6C71Z1pekkEMAsC2EIA3ckZKoC++GEFYN9cWHOy\/kwPt4vO+74F3+69Gxzc72Zau2+WlisALXNrhwEBrAMBFCQApQ0NAUxu8OphWfQ7CMDcNTl6qQLot3a3EUAACGATARjrEwG4n4e0ewAAFGNJREFUQQDTadsWgl1CtACUlve7GwhgMQgAAaTCODBra45scPRQnACM+44SCMBfANq5hAB0EMA6Aej5vqu7RgBGCbECCK15dAE4SyAABKAQQBgxBGDketdrVHrmGBOA1mgnAO0MMASg9RoYPQJY0ykC8OwGAewAAgghigD0FbheAJW2XxfAYOkiAASAAFYLoK2NAGoQwLwA+hWlFgpAy9uqL7NYANpw9C0RokcAazpFAJ7dIIAdQAAhRBOAucYWC8DK94YAVNeILoAo0SOANZ0iAM9uNhdAvxkBrAMBlCKAvr3Q00qLHgGs6XTQVCIBhLWEABBA6hSQnswF0C9j1beHABILYMmurRo0ShxfAPozHgRgdhtUGwHEEIC+0qIIoO0aAfjVFC+AFZ3sIoDgVucEoJ0nywTQ3lfFC+AWwqiq\/lbV\/N\/daO80Ra7\/VP3fa5GuULehK3xtpW+\/q2Le0hu5bf9ph9Tevu1q7HuANmJ9HIOaI01V+tSu7Guuj5ldWzXo2+VOi2WbbozzqetieILdduffbX+CmKelccJ1LXetRFgftzwDKBD3M4BKu7H0GUB3X\/EMYJr1YQyOwMghmTlSh3kGsKrcDs8AIrS68BlAfy7NPgO4VQd5BhBUGwHsL4DhM1GZAlgPAshPABEb01o1BKBvRQBdt0G1S00BsUgoAH3DQgFEi77Q2UcAuQlgG0wBGFsjCyDGOYUACmReAPqKUgggCxAAAkAAbbdBtQtYBZuySgDXogggFQgAASCAttug2gWsgk1xCqBq34o\/FIA7ly8RQG8YZdVCAL4gAASAANpug2oXsAo2ZbUAjGw9K4AugSOAGCAABDApgOuW4XYEYFHAKtiU3QTQrdKBAJReCQH4gAAQwLgA+mJqcF4iAIsCVsGmbCiAbjcCiA0CQAAIoO02qHYBq2BT9hSAtaVtAwEsBgEggFUC6FpCAFcKWAWbggBKBAF4ZywEgACmKGAVbEqQAIbZ3S0ApW+aEID+FwFMkEgA\/uPxbDCyUdwtje0pYPKnBVAhgKbboNoFrIJNCRCAXt65zHwFYD6ZQADzJBHAkvF41orc4DIKmPwZAXSnqVohAIUAagpYBZuiC0DLwlZKRgB5cQwB7NmggwImfzsBKIUAGgpYBZuSXgBdz8ZbFBDAFAggAgVMPgLw6TaodgGrYFOyEYCe3BHADAggAgVMPgLw6TaodgGrYFNKE4CxxMOjL3T2EUAECph8BODTbVDtAlbBpuwgAIUAYoMAIlDA5G8kgMt+BFBTwCrYlM0F0LesJf\/lArDaiRV9obPvL4DJZhBA5vSZPqIAWm67802ZO9aCAAqkDAFo\/SEA5S+AGRBACUwIwDxPFgtAP\/8QgEzmBaC6hbNIAKpL58pPAJoyEMAMCCACpUz+pACMHB4igAgDRQAFMiuAfqUhgGwYHAEEsJxSJn9KAAoBIIAgBgLoM7UhAKUQQMYggOWUMvnbCkArGgoCKBA\/AbT7EUCmIIDllDL5LgEoLwFY2x0CMFoMBQEUSK4CcD87RQAjIIDllDL5awXQF3fvRAA1payCrTAFYGTq5ALoOjV7RABDEMBySpn8UAGM7UQANaWsgq2YEoC99PYVgBsE4GTdIUEAJbBIAO4jhwBGKWUVbEV5AoiZHITPfs4CiNuei1Imf4EA1MhUIIBRSlkFW1GaAGb3Lote9uznK4A9KGXy23NisAEBXLoNql3KKtiKjATQX95BAPuAAIoEAZjdBtUudhVEAgEIBgEUyWoBmDsRQE2xqyASkQRga+C6EwFkDQIoEgRgdhtUu9hVEIkoAlBqTAB9OQSQHxEFEKulHSl28hGA2W1Q7WJXQSRiC6DP4vqqQgBZIjz6UsNHAGa3QbWLXQWRcAigz9CLBaDfsAWg2rYQQC4Ij77U8BGA2W1Q7WJXQSR2E4BZAQHkgPDoSw0fAZjdBtUudhVEAgEIRnj0pYaPAMxug2oXuwoisZcArAojAugbmxgyAoiF8OhLDR8BmN0G1S52FUTi+qsQ1zU0FIBaKgBlZXWTSQEohQB2RXj0pYbvzPgIYB3FroJItALoH4EjADEIj7708BHApdug2sWvgkBiCEApBFAkwqMvPXwEcOk2qHbxqyCQcAF0t4wL\/WpaAFYZBJAE4dGXHj4CuHQbVLv4VRBIRAHYWxFA7giPvvTwEcCl26Daxa+CQBCAYIRHX3r49imEAFZQ\/CoIZKEArIWymQCmhowAYiE8+mOEjwCCah9kFawmSwFMgwBiITz6Y4SvCUC7OyiDANwcZBWsphNAhQDEITz6Y4RvnUIrBRBjJAigQHoBVEpPzghAAMKjP0b4MQQQBwRQIAhAMMKjP0b4CCCo9kFWwWoQgGCER3+M8BFAUO2DrILVhAqgv4UAikN49McIHwEE1T7IKlhNmAB6vAWgEEA2CI\/+GOEjgKDaB1kFq9lZAN12BJABwqM\/RvieAlDaWXcBAdQcZBWsZkwAKpUA5oeMAGIhPPpjhN+dQsZdZxkEMOQgq2A1mQnABwQQC+HRHyN863RAAMs4yCpYDQIQjPDojxE+AgiqfZBVsBoEIBjh0R8jfAQQVPsgq2A1CEAwwqM\/RvgIIKj2QVbBatwCUAhAAsKjP0b4CCCo9kFWwWpcAmhAAMdHePTHCH+ZALSNCKDmIKtgNcsEMJ56dxWAf9kZhM++8OiPEf4SARgggJqDrILVLBHAVJ7eUQARET77wqM\/RvgIIKj2QVbBanIRQGgc6xA++8KjP0b4CCCo9kFWwWryEEAqhM++8OiPET4CCKp9kFWwGgQgGOHRHyN8BBBU+yCrYDXpBDDX4h4In33h0R8jfAQQVPsgq2A1XgJQ2rYRlgpgvsU9ED77wqM\/RvgIIKj2QVbBajwE0IMAjoXw6I8RPgIIqn2QVbAaBCAY4dEfI3yfcxQBjHKQVbAaBCAY4dEfMnwEsIxjrgJ\/kgjAq8U9ED77wqM\/ZPgIYBnHXAX+bCqA+e4RQEqER3\/I8BHAMo65CvzZUAA+IICUCI\/+kOE7TygEMMoxV4E\/CEAwwqOXEz4CGEXQKnCCAAQjPHo54SOAUQStAicIQDDCo5cTvvMsQwA1glaBEwQgGOHRyw4fATSwCjoBVJVCAKIQHr3s8BFAA6tgVADD9IwAjoXw6GWHjwAaWAXqeumnGqZ8BHBshEcvO3wE0MAqaEAAEhEevezw8xXA5+9+zXXnxXv3z+d33h92u7KbC6yCBgQgEeHRyw4\/XwE8On\/Ncefzd881X\/3NoNuV3VxgFTT0AtB3IoBjIzx62eHnKoAXj869ALQ7j85vva+ePTi\/9aHd7apuWlgFDa0ATBDAsREevezwMxXAn35w7gWg3fn0fvPY\/\/N33\/iZ3e2abjpYBQ0RBOBVbK6HnRE++8Kjlx1+ngJ4cj5\/74+tAPQ7T7q\/37e7XdFND6ugIVgAK4otLLoFwmdfePSyw89UAG\/+VD3tBKDdeXT+YfP3qf4CwaXbFd30sAoaEIBEhEcvO\/w8BVBj5PjrnRcPrpd+Pr3fvgjwFy23EMxFAI6tk\/fHG1vQr29RAMgZBFAuCAAAgthJAPYbQbkEFAKXgAQjPHrZ4Rd\/CajrdmU3F1gFDQhAIsKjlx0+AmhgFTQgAIkIj152+GUJgHcBbQQCEIzw6GWHX5gA2vf\/8zmAuMwIwL6PAI6E8Ohlh1+YAPgk8DZMCsAGARwL4dHLDr8wAbx4cH6T7wKKDwIQjPDoZYdfmADUM74NdAsQgGCERy87\/NIEoJ69d5f\/37Ef\/yOAMBCAYIRHLzv8fAWwtNug2qyCBgQgEeHRyw4fATSwChoiC8C7ewSQEuHRyw4fATSwChqiCmABCCAlwqOXHT4CaGAVNCAAiQiPXnb4CKCBVdDglf8RwMEQHr3s8BFAA6ugwS8RI4BjITx62eEjgAZWQQMCkIjw6GWHjwAaWAUNCEAiwqOXHT4CaGAVNCAAiQiPXnb4CKCBVdCAACQiPHrZ4SOABlZBAwKQiPDoZYePABpYBQ0IQCLCo5cdPgJoYBU0IACJCI9edvgIoIFV0IAAJCI8etnhI4AGVkEDApCI8Ohlh48AGlgFDQhAIsKjlx0+AmhgFTQgAIkIj152+AiggVXQgAAkIjx62eEjgAZWQQMCkIjw6GWHjwAaWAUNCEAiwqOXHT4CaGAVNCAAiQiPXnb4CKCBVdAQ\/cd+PUEAKREevezwEUADqyApCCAlwqOXHT4CaGAVJAUBpER49LLDRwANrIKkIICUCI9edvgIoIFVkBQEkBLh0csOHwE0sAqSggBSIjx62eEjgAZWQVIQQEqERy87fATQwCpICgJIifDoZYePABpYBUlBACkRHr3s8BFAA6sgKQggJcKjlx0+AmhgFSQFAaREePSyw0cADayCpCCAlAiPXnb4CKCBVZAUBJAS4dHLDh8BNLAKkoIAUiI8etnhI4AGVkFSEEBKhEcvO3wE0MAqSAoCSInw6GWHjwAaWAVJQQApER697PARQAOrICkIICXCo5cdPgJoYBUkBQGkRHj0ssNHAA2sgqQggJQIj152+AiggVWQFASQEuHRyw4fATSwCpKCAFIiPHrZ4SOABlZBUhBASoRHLzt8BNDAKkgKAkiJ8Ohlh48AGlgFSUEAKREevezwEUADqyApCCAlwqOXHT4CaGAVJAUBpER49LLDRwANrIKkIICUCI9edvgIoIFVkBQEkBLh0csOHwE0sAqSggBSIjx62eEjgAZWQVIQQEqERy87fATQwCpICgJIifDoZYePABpYBUlBACkRHr3s8BFAA6sgKQggJcKjlx0+AmhgFSQFAaREePSyw0cADayCpCCAlAiPXnb4CKCBVZCUtPlf+uwLj152+AiggVUgGeGzLzx62eEjgAZWgWSEz77w6GWHjwAaWAWSET77wqOXHT4CaGAVSEb47AuPXnb4CKCBVSAZ4bMvPHrZ4SOABlaBZITPvvDoZYePABpYBZIRPvvCo5cdPgJoYBVIRvjsC49edvgIoIFVIBnhsy88etnhI4AGVoFkhM++8Ohlh48AGlgFkhE++8Kjlx0+AmhgFUhG+OwLj152+AiggVUgGeGzLzx62eEjgAZWgWSEz77w6GWHjwAaWAWSET77wqOXHT4CaGAVSEb47AuPXnb4CKCBVSAZ4bMvPHrZ4SOABlaBZITPvvDoZYePABpYBZIRPvvCo5cdPgJoYBVIRvjsC49edvgIoIFVIBnhsy88etnhH0cAtwAAkBaeARSI7PCFz77w6GWHf5xnAEG1WQWSET77wqOXHT4CaGAVSEb47AuPXnb4CKCBVSAZ4bMvPHrZ4SOABlaBZITPvvDoZYePABpYBZIRPvvCo5cd\/nEEAAAAyUEAAABCSSKAMOxBgySYfcEw+RuDACBzmH3BMPkbgwAgc5h9wTD5G4MAIHOYfcEw+RuDACBzmH3BMPkbgwAgc5h9wTD5G4MAIHOYfcEw+RtThAAAACA+CAAAQCgIAABAKAgAAEAoCAAAQCgIAABAKAgAAEAoCAAAQCj5C+DFe\/fP53feTz0M2InP3z03fPU39T1j9lkKx+bzd792vTU+7ayBuGQvgGs+uKQDOD6f3tcEYMw+S+HgPDpfBTA+7ayByGQvgEfnt95Xzx6c3\/ow9UhgF562WaDGmH2WwqF58ejcTv34tLMGIpO7AD69f30k+MbPUg8FduHR+fvdbWP2WQqH5k8\/OLcCGJ921kBschfAk+uaeKKlBTgwLx5o57Yx+yyFI\/PkfP7eH7sZHpt21kBschfAo\/MPm7\/GhQE4Lp+\/+9b\/f\/dY8D80L\/MZs89SODJP3vxpN7Pj084aiE3mAugeD356n6t+ImhfA67PdGP2WQqH55rWx6edNRAdBABZ8fR8\/t6H6n++d76beE5+WSCA\/SlHALzzSwRPussA3zdnn6VweIYCsKadNRCdcgSA8kXx9MyjP2nwDGB\/EABkifWAj5NfAAhgfzIXAC\/7S6U5xXkHiCh4F9D+5C6A9g2\/vPFXBi8e6Ke4MfsshaPz1HqX\/3DaWQOxyV0AfPRPGI\/aywC1CPgUqCie8kng3cldAHeJ4E2+\/EMQn96v3wb67AfNhBuzz1I4Oq0AxqedNRCb3AWgnvH1f7J4cv0y0OajwMbssxQOTndlf3zaWQORyV4A6tl7dxP+DsIXw7O\/PZ\/f+N51wo3ZZykcm\/6l3fFpZw3EJX8BAADAJiAAAAChIAAAAKEgAAAAoSAAAAChIAAAAKEgAAAAoSAAAAChIAAAAKEgAAAAoSAAAAChIAAAAKEgAAAAoSAAAAChIAAAFw9Pr3yQegwAG4MAAAx++781iR8BgAAQAIBOm\/gRAAgAAQDokPhBEAgAQAcBgCAQAIAOAgBBIACAnsenhq+0Inj+o9Or6ndfP53uffnu3u\/++m7fl351LfvJj2\/utnd3AcoDAQD0OATwbx5etr30659fbtz7B73o6fTltEMGWA8CANAx3wV0J4C7DP+Ben6X\/L9w+tIf1PN\/PF0KPL48F\/jzzzEAlAsCANAZCuAr9d3P3j6dXr0WeOnXSn18c717Z4LrUwKA4kAAADoDAdTpvrnfXfqpbzxut19eJgAoEgQAoDMQwPVNQQ\/bjP9RLQA96\/O+ISgWBACgMxDAq+12XQD1FaGe9skAQGEgAAAdBACCQAAAOt4C4MI\/lA8CANDxE0D\/2gBAwSAAAB0\/AfRvCsIFUDAIAEDHUwAf37Rp\/6PT6btphgoQCgIA0Knf5v\/8D7MCqD8J\/PLfq\/6TwQAFggAAdD6q39bz6rwA+u8CIv9DsSAAAIPf3twJ4IN5AahPfvzFu\/T\/l3+faqAAwSAAAAChIAAAAKEgAAAAoSAAAAChIAAAAKEgAAAAoSAAAAChIAAAAKEgAAAAoSAAAAChIAAAAKEgAAAAoSAAAAChIAAAAKEgAAAAoSAAAAChIAAAAKEgAAAAoSAAAAChIAAAAKH8L0ahEHgNO9JXAAAAAElFTkSuQmCC)","7c8ad852":"# Dynamic programming (Dynp)\n> The first method is dynamic programming. This method can be used only when we know the number of changes to detect. It finds the minimum of the sum of costs by computing the cost of all subsequences of a given signal. So it search over all possible segmentations.\n\n* model = the model what we use when we calculate cost\n* min_size = minimum distance between change points\n* jump = control grid of possible change points\n* n_bkps = the number of change point","82fbd50c":"# Linearly penalized segmentation (Pelt)\n> Calculate all the possible case is too time consuming. So to reduce computational cost, many method have been considered. And linearly penalized method is one of them. It use Pruned Exact Linear Time(PELT) method and make subsample of possible change point. Then it calculate minimun sum of cost only using them.\n\n* model = the model what we use when we calculate cost\n* min_size = minimum distance between change points\n* jump = control grid of possible change points\n* pen = the number of change point","85a2de4f":"> This can be used when the number of change points is unknown. In this situation, one can specify a penalty using the pen parameter or a threshold on the residual norm using epsilon.","bec74289":"**Thank you for watching my notebook :)**\n\nThe limitation of the ruptures package is that it can be use only offline data. There are many method that detecting online data change point. So in nexttime, I'll study about it. If you like my notebook or have same curiosity with me, Please upvote !\n","f15e5b83":"# Use 'ruptures' package\n> ruptures is designed to perform offline change point algorithms within the Python language. Also in this library, new methods are presented.\n\n> This library requires Python >=3.6 and the following packages: numpy, scipy and matplotlib (the last one is optional and only for display purposes). You can either install the latest stable release or the development version."}}