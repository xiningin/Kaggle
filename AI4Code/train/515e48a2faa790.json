{"cell_type":{"a192fbd8":"code","645770db":"code","774ef2ac":"code","9321aebb":"code","f5c6d8a5":"code","a2a73ea7":"code","2f19973e":"code","49a92dc1":"code","4442cd98":"code","98a5edaa":"code","02f87538":"code","95ce34a3":"code","809a5ffd":"code","96729e32":"code","71da0b93":"code","2fe26746":"code","4535a48c":"code","c5ebdc0a":"code","ea9c38e5":"code","a239fe75":"code","7d2cecad":"code","ff5e3d6c":"code","257bf48d":"code","0b25238e":"code","317495b1":"code","be77a49b":"code","3a53219a":"code","2fefc17c":"markdown","e1c88647":"markdown","7f5d68a2":"markdown","82253473":"markdown","1a8535ea":"markdown","eff5df8e":"markdown","1d24c466":"markdown","fb8cc174":"markdown","03b6ccbb":"markdown","e932136b":"markdown","34689b16":"markdown","d3b19e79":"markdown","c7d268e0":"markdown","f316f06a":"markdown","2e272807":"markdown"},"source":{"a192fbd8":"import warnings\nwarnings.filterwarnings(\"ignore\")\nimport numpy as np\nimport pandas as pd\nimport pickle\nfrom sklearn import preprocessing\nfrom sklearn import model_selection\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.metrics import roc_auc_score,r2_score,mean_absolute_error,mean_squared_error,accuracy_score,classification_report,confusion_matrix\nimport seaborn as sns\nimport matplotlib.pyplot as plt","645770db":"data = pd.read_csv('..\/input\/dataco-smart-supply-chain-for-big-data-analysis\/DataCoSupplyChainDataset.csv',header= 0,encoding='unicode_escape')\npd.set_option('display.max_columns',None)\ndata.head()","774ef2ac":"def data_info(data):\n    print('1) Number of columns are : ',data.shape[1])\n    print('2) Number of rows are : ',data.shape[0])\n    print('3) Total number of data-points :',data.size)\n    numerical_features = [f for f in data.columns if data[f].dtypes!='O']\n    print('4) Count of Numerical Features :',len(numerical_features))\n    cat_features = [c for c in data.columns if data[c].dtypes=='O']\n    print('5) Count of Categorical Features :',len(cat_features))\ndata_info(data)","9321aebb":"def features_with_missing_values(data):\n    x = data.isnull().sum().sum()\/(data.shape[0]*data.shape[1])*100\n    print('Percentage of Total Missing Values is ' ,round(x,2) ,'%')\n    print('Missing Value Estimation :')\n    for i in data.columns:\n        if data[i].isna().sum()>0:\n            print('The Feature ',i,' has '+ str(data[i].isna().sum()) + ' missing values')\n            \nfeatures_with_missing_values(data)","f5c6d8a5":"# Target value analysis\nsns.set()\nsns.scatterplot(x=\"Days for shipment (scheduled)\",y=\"Days for shipping (real)\",hue=\"Late_delivery_risk\",data=data)","a2a73ea7":"corrmap = data.corr()\ntop=corrmap.index\nplt.figure(figsize=(30,20))\ng=sns.heatmap(data[top].corr(),annot=True,cmap=\"RdYlGn\")","2f19973e":"shipment_features = ['Type','Days for shipping (real)','Days for shipment (scheduled)','Late_delivery_risk','Benefit per order',\n                        'Sales per customer','Latitude','Longitude','Shipping Mode','Order Status','Order Region',\n                        'Order Country','Order City','Market','Delivery Status']\nshipment = data[shipment_features]\nshipment.head()","49a92dc1":"finance_features=['Benefit per order','Sales per customer','Order Item Discount','Order Item Discount Rate',\n                  'Order Item Product Price','Order Item Profit Ratio']\nfinance = data[finance_features]\nfinance.head()","4442cd98":"#Converting categorical features that represent date and time to datetime datatype.\ndata['order_date'] = pd.to_datetime(data['order date (DateOrders)'])\ndata['shipping_date']=pd.to_datetime(data['shipping date (DateOrders)'])","98a5edaa":"# Handling Time and date variables\ndata['order_year'] = pd.DatetimeIndex(data['order_date']).year\ndata['order_month'] = pd.DatetimeIndex(data['order_date']).month\ndata['order_day'] = pd.DatetimeIndex(data['order_date']).day\ndata['shipping_year'] = pd.DatetimeIndex(data['shipping_date']).year\ndata['shipping_month'] = pd.DatetimeIndex(data['shipping_date']).month\ndata['shipping_day'] = pd.DatetimeIndex(data['shipping_date']).day","02f87538":"new_dataset_features = ['Type','Days for shipping (real)','Days for shipment (scheduled)','Late_delivery_risk','Benefit per order',\n                        'Sales per customer','Latitude','Longitude','Shipping Mode','Order Status','Order Region',\n                        'Order Country','Order City','Market','Delivery Status','order_day','order_month','order_year',\n                        'shipping_day','shipping_month','shipping_year']\nlen(new_dataset_features)","95ce34a3":"new_data = data[new_dataset_features]\nmodel_data = new_data\nnew_data.head()","809a5ffd":"#One-Hot encoding categotical variables in the data\nmodel_data = pd.get_dummies(model_data)\nmodel_data.shape","96729e32":"x = model_data.drop(['Days for shipping (real)','Days for shipment (scheduled)'],axis=1)\ny = model_data[['Days for shipping (real)','Days for shipment (scheduled)']]\nx.shape,y.shape","71da0b93":"# train-test_split\nx_train,x_test,y_train,y_test = model_selection.train_test_split(x,y,test_size=0.20)","2fe26746":"#sc=StandardScaler() \n#No standard Scaling is not required for Decision Trees are tree-based algorithms and do not need normalization or standard scaling\n#pc=PCA()\n# The hyper-parameters used are default hyper-parameters\nmodel=DecisionTreeRegressor()\nmodel.fit(x_train,y_train)\npred=model.predict(x_test)","4535a48c":"#Function for estimating r2_score, mean_squared_error, mean_absolute_error\ndef metrics(y_test,pred):\n    a =r2_score(y_test,pred)\n    b =mean_squared_error(y_test,pred)\n    c =mean_absolute_error(y_test,pred)\n    print('The r-squared score of the model is ',a)\n    print('The mean squared error is',b)\n    print('The mean accuracy score is',c)","c5ebdc0a":"metrics(y_test,pred)\n#from sklearn.model_selection import cross_validate\n#cv_results = cross_validate(clf,x,y,cv=4)\n#cv_results {NO sufficient RAM space in Kaggle Kernel to run the CROSS-VALIDATION TESTS}","ea9c38e5":"#Converting the predicted output array to dataframe\nPrediction = pd.DataFrame(pred)\nprediction = Prediction.rename(columns={0:'Fastest_shipment',1:'Avg_shipment'})\nprediction.head()","a239fe75":"# Statiscal modelling\nprediction['risk'] = np.where(prediction['Avg_shipment'] >= prediction['Fastest_shipment'],0,1)","7d2cecad":"prediction.head()","ff5e3d6c":"l = prediction['risk']\nm = x_test['Late_delivery_risk']\nl.shape,m.shape","257bf48d":"# Defining a function to evaluate our statiscal model for Late_delivery_risk_prediction\ndef evaluation_risk_factor(l,m):\n  print('1) The accuracy of the risk predictor model is :',accuracy_score(l,m))\n  print('2) The AUROC score is :',roc_auc_score(l,m))\n  print('3) Some of the key classification metrics are :')\n  print(classification_report(l,m))\n  ax=plt.subplot()\n  sns.heatmap(confusion_matrix(l,m),annot=True,ax=ax);\n  ax.set_xlabel('Predicted labels'); ax.set_ylabel('True labels')\n  ax.set_title('Confusion matrix for Risk Delivery classfication');","0b25238e":"evaluation_risk_factor(l,m)","317495b1":"sns.set(style=\"darkgrid\")\nax=sns.countplot(x=\"risk\",data=prediction).set_title('Predicted Late delivery risks')","be77a49b":"bx=sns.countplot(x='Late_delivery_risk',data=x_test).set_title('Actual Late_delivery_risk')","3a53219a":"filename = 'Shipping_duration_estimator.pkl'\npickle.dump(model,open(filename,'wb'))","2fefc17c":"## Insights from Heatmap:\n**1. Columns that are similar with same values but with different metadata (duplicate columns)**\n  * [Benefit per order], Order Profit per order\n  * [Sales per customer], Sales, Order Item Total\n  * [Category ID], Product Category ID, Order Customer ID, Order Item Category ID, Product card ID,\n  * [Order Item Product Price],Product Price\n  \n**2. Unwanted features(null or less correlated values)**\n  * Product Description\n  * Product Status","e1c88647":"# 8) PREDICTIVE ANALYTICS : Late_delivery_prediction","7f5d68a2":"* Project Link : https:\/\/github.com\/Sukanthen\/Sigmathon-1.0.git\n* Do Support by giving an **UPVOTE** to this KERNEL Notebook !!","82253473":"# 7) MODEL EVALUATION","1a8535ea":"# 5) FEATURE ENGINEERING","eff5df8e":"* Using Fastest product shipment and Normal shipment duration(in days) features from predictions\n* Risk in delivery is a feature that highly corresponds and correlates to Fastest Shipment and Avg_shipment duration in days. If the fastest shipment duration is greater than avg_shipment, then late delivery risk is heavier as the scheduled days are outnumbered. Similarly, if avg_shipment values are greater than former, then there is a high probability for FAST\/EARLY delivery of goods to customers","1d24c466":"# Saving the trained regression model to pickle file","fb8cc174":"# 2) DATASET IMPORTING","03b6ccbb":"# 3) EXPLORATORY DATA ANALYSIS [EDA]","e932136b":"# 1) IMPORTING LIBRARIES AND PACKAGES","34689b16":"# Classification Model Evaluation","d3b19e79":"**Splitting dataset into smaller datasets for domain usage and easier modelling**\n1. Finance \n2. Demographics\n3. Shipment day estimation","c7d268e0":"# 4) Missing Value Identification","f316f06a":"# 6) MODEL BUILDING:\n* Target features : Days for shipping (real), Days for shipment (scheduled)\n* Problem type : Multi-output Regression","2e272807":"  # E-Commerce Goods Shipment Duration prediction and Estimating Late Delivery Risk\n\nE-commerce goods Late delivery risk identification by predicting fastest and normal Shipping Durations. The Decision Tree model built by us, will enable E-commerce and Goods\/products delivery industries to identify the 'risk of late delivery' and predict the fastest and normal duration of goods shipment for their Inland and foreign clients\/ customers\/buyers.\n\n# GOAL :\n*  Building a Multi-Output Decision Tree Regressor to determine the maximum range of shipping time, by predicting the Fastest and Normal duration for shipping of      goods for both Inland and International customers.\n*  Building a Binary Classifier to classify orders with high probabilty of late delivery (Late Delivery Risk analyser).\n\n# Data Source :\n* Dataset link : https:\/\/data.mendeley.com\/datasets\/8gx2fvg2k6\/5\n* Kaggle dataset link : https:\/\/www.kaggle.com\/shashwatwork\/dataco-smart-supply-chain-for-big-data-analysis\n\nThis is the dataset of Supply Chains used by the company DataaCo Global which includes a collection of their products sold, finacial details(profit, loss, total sales etc.), Shipping details, and customer details such as sales, demographics, and transaction details. The data spans to 91 MB engulfing details of 180,520 customers spanning to 53 columns related to Clothing , Sports,and Electronic Supplies."}}