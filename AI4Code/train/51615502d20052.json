{"cell_type":{"3d972a38":"code","9be2989c":"code","98083067":"code","c5c50805":"code","b498b11a":"code","228d14b5":"code","24554d5c":"code","4e6934e6":"code","c8b5eafe":"code","6f1a54fe":"code","5b493118":"code","29187a67":"code","5c38ebe4":"code","01add03d":"markdown","ab0114e4":"markdown","53cd52c6":"markdown","31ebd17b":"markdown","5c350a7c":"markdown","2ad06bd1":"markdown"},"source":{"3d972a38":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9be2989c":"playStore = pd.read_csv(\"\/kaggle\/input\/google-play-store-apps\/googleplaystore.csv\")\nuserReviews = pd.read_csv(\"\/kaggle\/input\/google-play-store-apps\/googleplaystore_user_reviews.csv\")","98083067":"playStore.head(10)","c5c50805":"playStore.info()","b498b11a":"playStore[['Rating']].sort_values('Rating', ascending = False)","228d14b5":"playStore.describe(include = 'all')","24554d5c":"playStore.dropna(subset=['Reviews'], inplace=True)","4e6934e6":"playStore.info()","c8b5eafe":"pd.to_numeric(playStore['Reviews'],errors='coerce').max()","6f1a54fe":"playStore['Reviews'] = pd.to_numeric(playStore['Reviews'], errors='coerce')","5b493118":"playStore.sort_values(by = 'Reviews', ascending = False).iloc[0]","29187a67":"appWithMostReviews = playStore.sort_values(by = 'Reviews', ascending = False).iloc[0]['App']\nappWithMostReviews","5c38ebe4":"print(appWithMostReviews + \" is the app with most reviews!\")","01add03d":"Getting a quick overview of the dataset","ab0114e4":"Getting an understanding of all the features - numeric and non numeric","53cd52c6":"Fetching the number of reviews of the App with most reviews","31ebd17b":"Converting the Reviews column to all numeric","5c350a7c":"Fetching the app details of the application with most reviews","2ad06bd1":"Sorting the dataset in the descending order of Rating"}}