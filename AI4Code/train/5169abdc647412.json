{"cell_type":{"66eeeb00":"code","2c7e811e":"code","2f78602e":"code","951228ab":"code","ed29c304":"code","eced7407":"code","21c0e0a9":"code","2d8d5860":"code","758bc411":"code","acc19731":"code","60935748":"code","712a6eec":"code","c12cb630":"code","d07a8981":"code","a99f53be":"code","b93d3e69":"code","83d5fec0":"code","b01a4992":"code","b8c7df01":"code","f1626246":"code","4fa2dbfd":"code","eba3737c":"code","d300b450":"code","956f2ae9":"code","e8cc78d0":"code","70cc4ada":"code","0af3772a":"code","c47c9cd8":"code","d40b62bd":"code","81fbb8c3":"markdown","48f8c0cd":"markdown","91bc7257":"markdown","1cb37506":"markdown","0d05f34e":"markdown","380f7992":"markdown","33d7ad2e":"markdown","75435b57":"markdown","143702e7":"markdown","b9742f75":"markdown","d1d9a5b2":"markdown","992e9a97":"markdown"},"source":{"66eeeb00":"import pandas as pd\ndf=pd.read_csv('..\/input\/titanic\/train.csv')","2c7e811e":"df=df.dropna()\n#df['Age']=df['Age'].fillna(df['Age'].mean())","2f78602e":"from sklearn.preprocessing import LabelEncoder\nle_Pclass = LabelEncoder()\nle_Sex = LabelEncoder()","951228ab":"df['pclass'] = le_Pclass.fit_transform(df['Pclass'])\ndf['sex'] =le_Sex.fit_transform(df['Sex'])","ed29c304":"df=df.drop(['Sex','Pclass'],axis='columns')","eced7407":"from sklearn.model_selection import train_test_split","21c0e0a9":"X_train, X_test, y_train, y_test=train_test_split(df[['Age','Fare','pclass','sex']],df['Survived'],train_size=0.8,random_state=42)","2d8d5860":"len(X_test)\/len(df)*100","758bc411":"len(X_train)\/len(df)*100","acc19731":"X_train['pclass'].value_counts()\/len(X_train)*100","60935748":"X_test['pclass'].value_counts()\/len(X_test)*100","712a6eec":"X_train['sex'].value_counts()\/len(X_train)*100","c12cb630":"X_test['sex'].value_counts()\/len(X_test)*100","d07a8981":"from sklearn import tree\nmodel = tree.DecisionTreeClassifier()\nmodel.fit(X_train,y_train)","a99f53be":"predictions=model.predict(X_test)","b93d3e69":"(predictions==y_test).value_counts()\/len(y_test)*100","83d5fec0":"model.score(X_test,y_test)","b01a4992":"model.score(X_train,y_train)","b8c7df01":"import pandas as pd\ndf2=pd.read_csv('..\/input\/titanic\/test.csv')","f1626246":"df2=df2.dropna()","4fa2dbfd":"df2=df2.drop(['PassengerId','Name','SibSp','Parch','Ticket','Cabin','Embarked'],axis='columns')","eba3737c":"from sklearn.preprocessing import LabelEncoder\nle_Pclass = LabelEncoder()\nle_Sex = LabelEncoder()","d300b450":"df2['pclass'] = le_Pclass.fit_transform(df2['Pclass'])\ndf2['sex'] =le_Sex.fit_transform(df2['Sex'])","956f2ae9":"df2=df2.drop(['Sex','Pclass'],axis='columns')","e8cc78d0":"df2['Servival predicted']=model.predict(df2)","70cc4ada":"df2.to_csv('titanic servival predicted.csv',index=False)","0af3772a":"from sklearn.metrics import r2_score\npredictions=model.predict(X_test)\nprint(r2_score(y_test,predictions))","c47c9cd8":"from sklearn.metrics import mean_squared_error\nimport numpy as np\npredictions = model.predict(X_test)\nmse = mean_squared_error(y_test,predictions)\nrmse = np.sqrt(mse)","d40b62bd":"rmse","81fbb8c3":"R2 score is not same ","48f8c0cd":"## predictions with train test split","91bc7257":"## analysis on Equal distribution of values","1cb37506":"## Accuracy ","0d05f34e":"### predictions for test.csv","380f7992":"### root mean square error","33d7ad2e":"# Titanic Prediction using Desicion Tree classifier","75435b57":"## model creation","143702e7":"## questiuon:\n### is root mean square error is good for this kind of desicion tree problem\n","b9742f75":"### can i use accuracy score for train data","d1d9a5b2":"### NOTE:","992e9a97":"### r2 score"}}