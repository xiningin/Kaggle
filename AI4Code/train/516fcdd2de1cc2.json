{"cell_type":{"5b9a91fc":"code","87540ef5":"code","2666a44c":"code","a87b6c36":"code","f6a91914":"code","7ae74afa":"code","345f171d":"code","055ad04c":"code","f8bd0c62":"code","582374d4":"code","eb2ee8d4":"code","7f00a982":"markdown","257637d0":"markdown","4def5263":"markdown","d8014c14":"markdown","b7e019dd":"markdown","568cdffe":"markdown","6384a7ab":"markdown","19a400c6":"markdown","bd5bc229":"markdown","009841fc":"markdown","e09682c9":"markdown","fdda3fb2":"markdown","fd740153":"markdown","d856a4e4":"markdown"},"source":{"5b9a91fc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","87540ef5":"#This will help us keep track of the submissions\nsub_name_list = ['dummy', 'mdabbert', 'BossaNostra 1', 'BossaNostra 2']\nscore_list = [] #We can keep the scores here\n\n#Put the submissions in dataframe form and add to a list.\nsub_list = []\ntemp_df = pd.read_csv(\"\/kaggle\/input\/dummy-submission-for-ufc-contest-14\/task-dummy.csv\")\nsub_list.append(temp_df)\n\ntemp_df = pd.read_csv(\"\/kaggle\/input\/mdabbert-ufc-contest-14-submission\/my-submission.csv\")\nsub_list.append(temp_df)\n\ntemp_df = pd.read_csv(\"\/kaggle\/input\/holm-vs-aldana-contest-submission-1\/Holm_vs_Aldana_Submission_1.csv\")\nsub_list.append(temp_df)\n\ntemp_df = pd.read_csv(\"\/kaggle\/input\/holm-vs-aldana-contest-submission-2\/Holm_vs_Aldana_Submission_2.csv\")\nsub_list.append(temp_df)\n","2666a44c":"results_df = pd.read_csv(\"\/kaggle\/input\/ultimate-ufc-dataset\/most-recent-event.csv\")\n\n#We only need the fighter names, odds, and winner\n\nresults_df = results_df[['R_fighter', 'B_fighter', 'R_ev', 'B_ev', 'Winner']]\ndisplay(results_df)","a87b6c36":"#Returns a specific bet EV based on winning_ev and probability.\ndef get_bet_ev(ev, prob):\n    \n    return(ev*prob - (1-prob)*100)","f6a91914":"#Used to determine the bet of each fight.  We will use probabilities and the ev to \n#determine profitable bets\ndef get_bet(R_prob, B_prob, R_ev, B_ev):\n    red_ev = get_bet_ev(R_ev, R_prob)\n    blue_ev = get_bet_ev(B_ev, B_prob)\n    if red_ev > 0:\n        return('Red')\n    if blue_ev > 0:\n        return('Blue')\n    \n    return 'None'","7ae74afa":"def get_profit(winner, bet, R_ev, B_ev):\n    if bet == 'None':\n        return 0\n    if (bet == 'Blue' and winner == 'Blue'):\n        return B_ev\n    if (bet == 'Red' and winner == 'Red'):\n        return R_ev\n    else:\n        return (-100)","345f171d":"#Let's make a helper function to make this easier\n\ndef get_score(sub, results):\n#    display(sub)\n#    display(results)\n    #Let's merge the two dataframes\n    merge_df = pd.merge(sub, results)\n    #display(merge_df)\n    #We can get the proper bet by using a lambda function\n    merge_df['Bet'] = merge_df.apply(lambda x: get_bet(x['R_prob'],x['B_prob'],x['R_ev'],x['B_ev']), axis=1)\n    merge_df['Profit'] = merge_df.apply(lambda x: get_profit(x['Winner'], x['Bet'], x['R_ev'], x['B_ev']), axis=1)\n    display(merge_df)\n    return(sum(merge_df['Profit']))","055ad04c":"z = 0\nscore_list.append(get_score(sub_list[z], results_df))\nprint(f\"{sub_name_list[z]}'s bets saw a total profit of {score_list[z]}\")","f8bd0c62":"z = 1\nscore_list.append(get_score(sub_list[z], results_df))\nprint(f\"{sub_name_list[z]}'s bets saw a total profit of {score_list[z]}\")","582374d4":"z = 2\nscore_list.append(get_score(sub_list[z], results_df))\nprint(f\"{sub_name_list[z]}'s bets saw a total profit of {score_list[z]}\")","eb2ee8d4":"z = 3\nscore_list.append(get_score(sub_list[z], results_df))\nprint(f\"{sub_name_list[z]}'s bets saw a total profit of {score_list[z]}\")","7f00a982":"# Purpose\n\nI am going to go through the task submissions for [Contest #14: UFC Fight Night: Holm vs. Aldana](https:\/\/www.kaggle.com\/mdabbert\/ultimate-ufc-dataset\/tasks?taskId=2303)  and see what set of predictions was the most profitable (if any!)","257637d0":"BossaNostra won 4 bets and lost 3, but still saw a loss of 46.5 units using his first model.","4def5263":"# Submissions\n\nThere are 3 submissions.  \n\n1. The dummy file (gives each fighter a .5 probability of winning. Therefore will bet every underdog with greater than +100 odds.)\n2. mdabbert's (my!) submission. A GaussianNB Classifier using the following features: ['B_Weight_lbs', 'B_Flyweight_rank', 'B_avg_TD_landed', 'B_Light Heavyweight_rank', 'B_Lightweight_rank', 'R_avg_TD_landed', 'R_Middleweight_rank', 'R_Height_cms', 'R_avg_SIG_STR_pct', 'B_age', 'R_longest_win_streak', 'lose_streak_dif', 'R_win_by_Decision_Majority', 'longest_win_streak_dif', 'avg_sub_att_dif', 'sig_str_dif', 'B_avg_SUB_ATT', 'R_win_by_TKO_Doctor_Stoppage', 'B_draw', 'R_win_by_Decision_Split', 'age_dif', 'R_odds']\n3. BossaNostra's 1st submission\n4. BossaNostra's 2nd sumbission\n","d8014c14":"# Iterate the submissions and see how everyone did!","b7e019dd":"mdabbert won 6 bets and lost 3 for a total profit of 136.9 units.","568cdffe":"# Open All Submissions and add to a list","6384a7ab":"BossaNostra's 2nd model did better.  Even though it also won 4 and lost 3 the bets it won were more profitable.  This model saw a profit of 12.5 units.","19a400c6":"Red won 7 times and Blue won 3.  The Underdog won 4 times (most of these were very slight underdogs though)","bd5bc229":"Dummy had three underdog winners, but ended up losing a total of 179 units on 900 units bet.","009841fc":"# Final Results\n\n* `dummy`: -179.00 units\n* `mdabbert`: +136.91 units\n* `BossaNostra 1`: -46.97 units\n* `BossaNostra 2`: +12.59 units\n\nmdabbert is the winner!","e09682c9":"# Submission #3: BossaNostra's 1st Submission","fdda3fb2":"# Submission #2: mdabbert's Submission","fd740153":"# Submission #4: BossaNostra's 2nd Submission","d856a4e4":"# Submission #1: Dummy Submission\n\nThese are the results of the dummy submission."}}