{"cell_type":{"164afb4b":"code","ddb15ea1":"code","9e503e0d":"markdown","d7206682":"markdown","8af25dad":"markdown","e2533ad6":"markdown"},"source":{"164afb4b":"import os\nimport math\nimport random\nimport re\nimport warnings\nimport numpy as np\nimport tensorflow as tf\nfrom kaggle_datasets import KaggleDatasets\n\n\ndef get_datapath():\n    gcs_paths = []    \n    for i, j in [(0, 4), (5, 9), (10, 14), (15, 19)]:            \n        GCS_path = KaggleDatasets().get_gcs_path(f\"bftfrec{i}{j}\")\n        gcs_paths.append(GCS_path)\n        print(GCS_path)\n\n    all_files = []\n    for path in gcs_paths:\n        all_files.extend(np.sort(np.array(tf.io.gfile.glob(path + \"\/bf_train*.tfrecords\"))))\n           \n    print(\"train_files: \", len(all_files))\n    return all_files\n\nall_files = get_datapath()","ddb15ea1":"gcs_paths = []\nfor i, j in [(0, 4), (5, 9)]:    \n    GCS_path = KaggleDatasets().get_gcs_path(f\"bftfrectest{i}{j}\")\n    gcs_paths.append(GCS_path)\n    print(GCS_path)\n\nall_files = []\nfor path in gcs_paths:   \n    all_files.extend(np.sort(np.array(tf.io.gfile.glob(path + \"\/bf_test*.tfrecords\"))))    \n\nprint(\"test_files: \", len(all_files))  ","9e503e0d":"# **Below is Train TFRecords !**","d7206682":"* Hi. In this notebook, you can conveniently using Preprocessed Bandfiltered tfrecords.\n* In case of TPU or others, Sometimes applying BandPass Filter on the fly is hard.\n* So i made bandfiltered tfrecords.\n* if it is helped please give me a Upvote.\n* Thanks!\n* \n* fs: 2048\n* order: 7\n* hz: 20-1000 hz\n# (modified 20-350hz to 20-1000hz)","8af25dad":"# **Below is Test TFRecords !**","e2533ad6":"# Enjoy it!"}}