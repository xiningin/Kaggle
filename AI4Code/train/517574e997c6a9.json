{"cell_type":{"aaf85e79":"code","c4a80b43":"code","6af0ab7a":"code","aaaa5968":"code","7542a3d4":"code","1a3e108c":"code","2f095fde":"code","fff96a3e":"code","21405cae":"code","d8eaadd2":"code","1ea94257":"code","b1157e33":"code","f12afa25":"code","a11b2c63":"markdown","390f88bf":"markdown","e02c767f":"markdown"},"source":{"aaf85e79":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c4a80b43":"df = pd.read_csv(\"\/kaggle\/input\/personal-loan\/Bank_Personal_Loan_Modelling-1.xlsx\")\nprint(df)","6af0ab7a":"df.head(6)","aaaa5968":"df.tail(6)","7542a3d4":"df.describe() # indepth detail of data frame i.e min max values for age feature","1a3e108c":"df.info()","2f095fde":"df.info()","fff96a3e":"df.drop([\"ID\"],axis = 1,inplace=True)\n","21405cae":"X= df.drop([\"Personal Loan\"],axis=1)\ny = df[\"Personal Loan\"]\nX.info()\n","d8eaadd2":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.30, random_state=42)\n\n","1ea94257":"from sklearn.naive_bayes import GaussianNB\nclf_gnb = GaussianNB()\nclf_gnb.fit(X_train, y_train)\n\ny_pred_gnb = clf_gnb.predict(X_test)\nprint(\"Train score\",clf_gnb.score(X_train, y_train)*100)\nprint(\"Test score\",clf_gnb.score(X_test, y_test)*100)","b1157e33":"from sklearn.neighbors import KNeighborsClassifier\nclf_knn =  KNeighborsClassifier(n_neighbors=3)\nclf_knn.fit(X_train, y_train)\n\ny_pred_knn = clf_knn.predict(X_test)\nprint(\"Train score\",clf_knn.score(X_train, y_train)*100)\nprint(\"Test score\",clf_knn.score(X_test, y_test)*100)\n","f12afa25":"from sklearn.linear_model import LogisticRegression\nclf_lr = LogisticRegression() \nclf_lr.fit(X_train, y_train)\n\ny_pred_lr = clf_lr.predict(X_test)\nprint(\"Train score\",clf_lr.score(X_train, y_train)*100)\nprint(\"Test score\",clf_lr.score(X_test, y_test)*100)","a11b2c63":"2.K nearest neighbour classifier","390f88bf":"1.gaussian naive bayes\n","e02c767f":"3.logistic regression"}}