{"cell_type":{"183dc468":"code","3111df96":"code","9f668a4d":"code","dc49333f":"markdown"},"source":{"183dc468":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\ngame = pd.read_csv('vgsales.csv')\ngame\njogos = list(game.groupby('Publisher'))\n#jogos\nMediaPlataforma = game.groupby('Platform').Global_Sales.mean()\n#MediaPlataforma\npd.value_counts(game['Genre']).plot.barh()\npd.value_counts(game['Publisher']).head().plot.barh()\npd.value_counts(game['Year']).head().plot.barh()\npd.value_counts(game['Platform']).head().plot.barh()\nMediaPlataforma = game.groupby('Platform').Global_Sales.mean().head().plot.barh()\nMedianaPlataforma = game.groupby('Platform').Global_Sales.median().head().plot.barh()\npatrao = game.groupby('Platform')['Global_Sales'].value_counts()\ndesviopatrao = patrao.std()\n#desviopatrao\ngame[\"Year\"].plot.hist(bins=30, edgecolor='black')\nmediaPublica = game.groupby('Publisher').Global_Sales.mean().head().plot.barh()\nmedianaPublica = game.groupby('Publisher').Global_Sales.median().head().plot.barh()","3111df96":"import numpy as np\nimport pandas as pd\nimport seaborn as sbn\nimport matplotlib.pyplot as plt\n\ngame = pd.read_csv('vgsales.csv', sep=',', encoding='utf-8')\ngame[\"Global_Sales\"].describe()\n\ngame[\"NA_Sales\"].describe()\ngame[\"EU_Sales\"].describe()\ngame[\"JP_Sales\"].describe()\ngame[\"Other_Sales\"].describe()\ngame[\"Global_Sales\"].describe()\n\nfrom sklearn import preprocessing\nna = preprocessing.StandardScaler().fit(game[[\"NA_Sales\"]])\neu = preprocessing.StandardScaler().fit(game[[\"EU_Sales\"]])\njp = preprocessing.StandardScaler().fit(game[[\"JP_Sales\"]])\not = preprocessing.StandardScaler().fit(game[[\"Other_Sales\"]])\ngs = preprocessing.StandardScaler().fit(game[[\"Global_Sales\"]])\ngame[\"NA_Sales\"] = na.transform(game[[\"NA_Sales\"]])\ngame[\"EU_Sales\"] = eu.transform(game[[\"EU_Sales\"]])\ngame[\"JP_Sales\"] = jp.transform(game[[\"JP_Sales\"]])\ngame[\"Other_Sales\"] = ot.transform(game[[\"Other_Sales\"]])\ngame[\"Global_Sales\"] = gs.transform(game[[\"Global_Sales\"]])\n\ngame[\"NA_Sales\"].describe()\ngame[\"EU_Sales\"].describe()\ngame[\"JP_Sales\"].describe()\ngame[\"Other_Sales\"].describe()\ngame[\"Global_Sales\"].describe()\n\nX = game.iloc[:, 6:11].values\nX\nfrom sklearn.cluster import KMeans\nkmeans = KMeans(n_clusters = 5)\nkmeans.fit(X)\nkmeans.cluster_centers_\ndistance = kmeans.fit_transform(X)\ndistance\nlabels = kmeans.labels_\nlabels\nplt.scatter(X[:, 0], X[:,1], s = 100, c = kmeans.labels_)\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 50, c = 'red',label = 'Centroids')\nplt.title('Jogos Clusters and Centroids')\nplt.xlabel('X')\nplt.ylabel('Y')\nplt.legend()\n\nplt.show()","9f668a4d":"import numpy as np  \nimport matplotlib.pyplot as plt  \nimport pandas as pd\n\ngame = pd.read_csv('vgsales.csv', sep=',', encoding='utf-8')\ngame.head(30)\n\nX = game.iloc[:, 6:11].values  \ny = game.iloc[:, 2].values\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20)\n\nfrom sklearn.preprocessing import StandardScaler  \nscaler = StandardScaler()  \nscaler.fit(X_train)\n\nX_train = scaler.transform(X_train)  \nX_test = scaler.transform(X_test)\n\nfrom sklearn.neighbors import KNeighborsClassifier  \nclassifier = KNeighborsClassifier(n_neighbors=5)  \nclassifier.fit(X_train, y_train)  \n\ny_pred = classifier.predict(X_test)  \n\nfrom sklearn.metrics import classification_report, confusion_matrix  \nprint(confusion_matrix(y_test, y_pred))  \nprint(classification_report(y_test, y_pred))  \n\nerror = []\nfor i in range(1, 40):  \n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train, y_train)\n    pred_i = knn.predict(X_test)\n    error.append(np.mean(pred_i != y_test))\n\nplt.figure(figsize=(12, 6))  \nplt.plot(range(1, 40), error, color='red', linestyle='dashed', marker='o',  \n         markerfacecolor='blue', markersize=10)\nplt.title('Taxa erro de valores K ')  \nplt.xlabel('K Valores')  \nplt.ylabel('Media de Erro')  ","dc49333f":"Codigo que mede as Media e Medianas"}}