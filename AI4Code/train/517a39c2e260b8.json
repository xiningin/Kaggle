{"cell_type":{"1d8760ae":"code","50c6019f":"code","a01023f9":"code","8087f0f6":"code","96245d04":"code","b723a724":"code","ddce238b":"code","aef3e319":"code","7b3042df":"code","902895a9":"code","dc027579":"code","b0b71012":"code","adb28a16":"markdown","df9e685e":"markdown","24889372":"markdown","b4f6d571":"markdown","8fd28a3e":"markdown","1f501f3d":"markdown"},"source":{"1d8760ae":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","50c6019f":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import accuracy_score,r2_score\nimport matplotlib.pyplot as plt","a01023f9":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt","8087f0f6":"df = pd.read_csv(\"..\/input\/car-price-prediction\/CarPrice_Assignment.csv\")\ndf.head(5)","96245d04":"unique_value = df[\"CarName\"].nunique()\nunique_value","b723a724":"x = np.array(df.iloc[:,21:25].values)\ny = np.array(df.iloc[:,-1].values)","ddce238b":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3,random_state=16)","aef3e319":"model = LinearRegression()","7b3042df":"model.fit(x_train,y_train)","902895a9":"\nm = model.coef_\nc = model.intercept_\ny_predict = sum(m*x_test+c)\ny_predict = model.predict(x_test)\ny_test_predict = model.predict(x_test)","dc027579":"y_predict,y_test_predict","b0b71012":"plt.scatter(y_test,y_predict,color='red')\nplt.plot(y_predict,y_test_predict,color = 'green')\nplt.show()","adb28a16":"1. Importing the libraries","df9e685e":"3.    Y: dependent variable vector\n        #In the first run X\u2019s type is object due to the different types of \n        independent variables.State column contains categorical variables","24889372":"4. Splitting the dataset into the Training and Test dataset\n#train_set_split: Split arrays or matrices into random train and #test subsets. %30 of the dataset to the test set","b4f6d571":"2. Importing the dataset:","8fd28a3e":"6. Predicting the Test set results:","1f501f3d":"5. Fit multiple Linear Regression model to our Train set"}}