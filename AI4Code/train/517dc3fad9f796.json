{"cell_type":{"4300349a":"code","41160aaa":"code","621dbb8d":"code","7c1a6879":"code","9dab83b4":"code","15e44953":"code","dc8cdb98":"code","76686921":"code","275e23e2":"code","f3c47db8":"code","dcb6113a":"code","943cdfc3":"code","c1e9fda9":"code","aa4ff3d2":"code","91346b8b":"code","94744641":"code","e38aec2b":"code","9d1312c7":"markdown","f312ca90":"markdown","6b67c03d":"markdown","342a462d":"markdown","0ae6892d":"markdown"},"source":{"4300349a":"import pandas as pd\nimport numpy as np\nfrom pandas import Series, DataFrame\nimport matplotlib.pyplot as plt ","41160aaa":"dataset = pd.read_csv('\/kaggle\/input\/testtrainset\/train.csv')\ndataset","621dbb8d":"dataset = dataset.dropna()","7c1a6879":"dataset.plot(x = 'x', y = 'y', kind = 'scatter')","9dab83b4":"#theta0 = np.array([np.arange(-100,100,0.1)])\n#theta1 = np.array([np.arange(-1,1,0.001)])\ntheta0 = np.array([np.linspace(-500, 500, num=1000)])\ntheta1 = np.array([np.linspace(-10, 10, num = 1000)])\nm = len(dataset.index)\ntheta0, theta1 = np.meshgrid(theta0, theta1)\nx_values = np.array(dataset['x'])\ny_values = np.array(dataset['y'])\ncost_func = np.zeros((1000,1000))\nfor idx,x in np.ndenumerate(x_values):\n    h = x*theta1 + theta0\n    h = h - y_values[idx]\n    h = h**2\n    cost_func = cost_func + h","15e44953":"cost_func = (1\/(2*m))*cost_func","dc8cdb98":"fig,ax=plt.subplots(1,1)\ncp = ax.contourf(theta0, theta1, cost_func)\nfig.colorbar(cp)\nax.set_title('Contour plot for cost function')\nax.set_xlabel('theta0')\nax.set_ylabel('theta1')\nplt.show()","76686921":"theta0_old = 1\ntheta1_old = 1\ntheta0 = 0\ntheta1 = 0\nalpha = 0.0005\niterations = 1000\nwhile(iterations!=0 or abs(theta0 - theta0_old)>0.0001 or abs(theta1 - theta1_old)>0.0001):\n    theta0_old = theta0\n    theta1_old = theta1\n    iterations-=1\n    #print(theta0, theta1)\n    theta0 = theta0_old - (alpha\/m)*(((theta1_old*x_values + theta0_old) - y_values).sum())\n    theta1 = theta1_old - (alpha\/m)*((((theta1_old*x_values + theta0_old) - y_values)*x_values).sum())\nprint(theta0, theta1)","275e23e2":"plt.scatter(x_values, y_values, alpha=0.3)\ny = theta0 + theta1*x_values\nplt.plot(x_values, y, color='red')","f3c47db8":"testset = pd.read_csv('\/kaggle\/input\/testtrainset\/test.csv')","dcb6113a":"y_predicted = theta0 + theta1*testset['x']","943cdfc3":"rmse = (((np.array(testset['y']) - np.array(y_predicted))**2).sum()\/len(testset.index))**(1\/2)\nrmse","c1e9fda9":"y_predicted","aa4ff3d2":"testset['y']","91346b8b":"from sklearn.linear_model import LinearRegression","94744641":"regr = LinearRegression()\nregr.fit(x_values.reshape(-1,1), y_values.reshape(-1,1))\nregr.score(np.array(testset['x']).reshape(-1,1), np.array(testset['y']).reshape(-1,1))","e38aec2b":"y_pred = regr.predict(np.array(testset['x']).reshape(-1,1))\nplt.scatter(np.array(testset['x']).reshape(-1,1), np.array(testset['y']).reshape(-1,1), color ='b') \nplt.plot(np.array(testset['x']).reshape(-1,1), y_pred, color ='k') \n  \nplt.show()","9d1312c7":"## Dataset \nhttps:\/\/www.kaggle.com\/andonians\/random-linear-regression","f312ca90":"## RMSE","6b67c03d":"## Gradient Descent","342a462d":"# Pure Python","0ae6892d":"## scikit learn"}}