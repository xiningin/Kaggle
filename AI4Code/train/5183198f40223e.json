{"cell_type":{"5fb99c25":"code","beafd895":"code","3d0cc659":"code","60d3046f":"code","df7df7b0":"code","c903475b":"code","8621b7a7":"code","aee33e1c":"code","5ffb4cb6":"code","5a4802f3":"code","ddbd5fec":"code","b50df707":"code","6b103f6e":"code","164ac91f":"code","278355da":"code","1ca1106c":"code","173e168d":"code","d7b9f7cb":"code","feac8be4":"code","376b516f":"code","78557e55":"code","4d0d71fb":"code","8b51b26c":"code","48505157":"code","4bcb3fc2":"code","a2c573e0":"code","82ead405":"code","cf81d18f":"code","934bf5a1":"code","229f459d":"code","40ec1913":"code","e654e527":"code","755a9c59":"code","a22a6ffb":"code","62e43a90":"code","661fd587":"code","fcaf7d9a":"code","0ce755fa":"code","1b4f10f3":"code","e89d8ee5":"code","a7a0c51d":"code","0b391705":"code","b4760d89":"code","69d768a4":"code","b7dd06ec":"code","963e73e8":"code","5cb54199":"markdown","2b64ca5a":"markdown","d45bc6d9":"markdown","96037eaf":"markdown","309389b3":"markdown","66999189":"markdown","515abb7f":"markdown"},"source":{"5fb99c25":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","beafd895":"from sklearn.datasets import load_breast_cancer","3d0cc659":"cancer=load_breast_cancer()","60d3046f":"cancer.keys()","df7df7b0":"print(cancer['DESCR'])","c903475b":"cancer['data']","8621b7a7":"cancer['target']","aee33e1c":"cancer['target_names']","5ffb4cb6":"cancer['feature_names']","5a4802f3":"df=pd.DataFrame(cancer['data'],columns=cancer['feature_names'])","ddbd5fec":"df.head()","b50df707":"df['Cancer']=pd.DataFrame(cancer['target'],columns=['Cancer'])","6b103f6e":"df.head()","164ac91f":"df.info()","278355da":"df.describe().T","1ca1106c":"df.isnull().sum()","173e168d":"df.corr()['Cancer'].sort_values(ascending=False)","d7b9f7cb":"plt.figure(figsize=(18,9))\nsns.heatmap(df.corr(),annot=True)","feac8be4":"sns.set_style('whitegrid')\nsns.barplot(x='Cancer',y='smoothness error',data=df)","376b516f":"sns.barplot(y='mean fractal dimension',x='Cancer',data=df)","78557e55":"sns.jointplot(x='mean fractal dimension',y='smoothness error',data=df)","4d0d71fb":"from sklearn.model_selection import train_test_split","8b51b26c":"X=df.drop('Cancer',axis=1)\ny=df['Cancer']","48505157":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=101)","4bcb3fc2":"X.columns","a2c573e0":"X.shape","82ead405":"y.shape","cf81d18f":"y","934bf5a1":"from sklearn.svm import SVC","229f459d":"model=SVC()","40ec1913":"model.fit(X_train,y_train)","e654e527":"model.predict(X_test)","755a9c59":"predict=model.predict(X_test)","a22a6ffb":"df_c=pd.DataFrame({'Actual Class':y_test,'Predicted Class':predict})\ndf_c.head()","62e43a90":"l=[]\n\nfor x in df_c['Predicted Class']:\n    if x==1:\n        l.append('Maligant')\n    else:\n        l.append('Benign')\ndf_c['Maligant\/Benign']=l","661fd587":"df_c.head()","fcaf7d9a":"from sklearn.metrics import confusion_matrix,classification_report,accuracy_score\n","0ce755fa":"print('The Classification Report is :')\nprint('\\n')\nprint(classification_report(y_test,predict))\nprint('\\n')\nprint(\"Confusion Matrix : \")\nprint('\\n')\nprint(confusion_matrix(y_test,predict))\nprint('\\n')\nprint('The Accuracy Is : ',round(accuracy_score(y_test,predict),2))","1b4f10f3":"from sklearn.model_selection import GridSearchCV","e89d8ee5":"param_grid={'C':[0.1,1,10,1000],'gamma':[1,0.1,0.01,0.001,0.0001]}","a7a0c51d":"grid=GridSearchCV(SVC(),param_grid,verbose=3)","0b391705":"grid.fit(X_train,y_train)","b4760d89":"grid.best_params_","69d768a4":"grid.best_estimator_","b7dd06ec":"grid_predict=grid.predict(X_test)","963e73e8":"print('The Classification Report is :')\nprint('\\n')\nprint(classification_report(y_test,grid_predict))\nprint('\\n')\nprint(\"Confusion Matrix : \")\nprint('\\n')\nprint(confusion_matrix(y_test,grid_predict))\nprint('\\n')\nprint('The Accuracy Is : ',round(accuracy_score(y_test,grid_predict),2))","5cb54199":"Since the Accuracy we got from Grid Search CV is much better .. 0.94 , therefore, we can use GridsearchCV for  finding the best parameters","2b64ca5a":"## Train Test Split :","d45bc6d9":"# Cancer Detetcion- Maligant \/ Benign USING Support Vector Machines Classifier ( SVM ) :","96037eaf":"## Support Vector Machine ( SVM ):","309389b3":"## Exploratory Data Analysis :","66999189":"## GridSearchCV - Finding Better Parameters :","515abb7f":"## Metrics Evaluation :"}}