{"cell_type":{"2bc550ac":"code","0dd5c709":"code","bb02daaa":"code","8d93f85d":"code","4b026b42":"code","4b3b6835":"code","01861550":"code","76e07f69":"code","77c4ae7f":"code","7cc6dacd":"code","5962184d":"code","7a56066a":"markdown","defa7853":"markdown","e0611997":"markdown","b862efa4":"markdown","363128dc":"markdown","83cd6042":"markdown","5d8873ca":"markdown"},"source":{"2bc550ac":"import numpy as np\nimport pandas as pd\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nimport random","0dd5c709":"dataset = pd.read_csv(\"..\/input\/digit-recognizer\/train.csv\")\ndataset.head()","bb02daaa":"y = dataset.label.to_numpy()\nX = dataset[[\"pixel\" + str(i) for i in range(784)]].to_numpy().reshape(-1, 28, 28, 1) \/ 255\nX.shape","8d93f85d":"X_train, X_test, y_train, y_test = train_test_split(X, y)","4b026b42":"fig = plt.figure(figsize=(10,10))\nfor i in range(10):\n  for j in range(10):\n    num = random.randint(0, 31500)\n    sub = plt.subplot(10,10, i*10+j+1)\n    sub.imshow(X_train[num].reshape(28, 28), cmap='binary')\n    sub.set_title(y_train[num], fontsize=10)\n    sub.axis(\"off\")\nplt.tight_layout()\nplt.savefig(\"plt.png\")\nplt.show()","4b3b6835":"model = tf.keras.models.Sequential([\n    tf.keras.layers.Conv2D(32, 3, activation=\"relu\",input_shape=[28, 28, 1]),\n    tf.keras.layers.MaxPooling2D(2),\n    tf.keras.layers.Conv2D(64, 3, activation=\"relu\", padding=\"SAME\"),\n    tf.keras.layers.MaxPooling2D(2),\n    tf.keras.layers.Conv2D(128, 3, activation=\"relu\", padding=\"SAME\"),\n    tf.keras.layers.MaxPooling2D(2),\n    tf.keras.layers.Flatten(),\n    tf.keras.layers.Dense(64, activation=\"relu\"),\n    tf.keras.layers.Dense(32, activation=\"relu\"),\n    tf.keras.layers.Dense(10, activation = \"softmax\")    \n])","01861550":"model.compile(loss=\"sparse_categorical_crossentropy\",\n              optimizer=\"nadam\", \n              metrics=[\"accuracy\"])\nearly_stopping_cb = tf.keras.callbacks.EarlyStopping(patience=20, restore_best_weights=True)\nhistory = model.fit(X_train.reshape(-1, 28, 28, 1) , y_train, epochs=100, validation_split = 0.2, \n                    callbacks=[early_stopping_cb])","76e07f69":"model.evaluate(X_train, y_train)","77c4ae7f":"dataset = pd.read_csv(\"..\/input\/digit-recognizer\/test.csv\")\nX_final = dataset[[\"pixel\" + str(i) for i in range(784)]].to_numpy().reshape(-1, 28, 28, 1)\ny_final = model.predict(X_final)\n\nret = np.zeros(shape=(28000), dtype=np.int8)\nfor i in range(28000):\n    ret[i] = np.where(y_final[i] == np.max(y_final[i]))[0]\nret","7cc6dacd":"fig = plt.figure(figsize=(10,10))\nfor i in range(10):\n  for j in range(10):\n    num = random.randint(0, 2033)\n    sub = plt.subplot(10,10, i*10+j+1)\n    sub.imshow(X_final[num].reshape(28, 28), cmap='binary')\n    sub.set_title(str(ret[num]), fontsize=10)\n    sub.axis(\"off\")\nplt.tight_layout()\nplt.savefig(\"plt_predict.png\")\nplt.show()","5962184d":"pd.DataFrame(zip([i for i in range(1, y_final.shape[0] + 1)],ret), columns=[\"ImageId\", \"Label\"]).to_csv(\"out.csv\", index=False)","7a56066a":"### Show data","defa7853":"### Imports","e0611997":"### Evaluate model","b862efa4":"### Test model","363128dc":"### Prepare dataset","83cd6042":"### Create model ","5d8873ca":"### Compile model and fit it"}}