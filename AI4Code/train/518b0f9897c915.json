{"cell_type":{"2be9fdd3":"code","b16b335a":"code","de2bae3f":"code","d273c6cb":"code","b753149a":"code","84ed04ae":"code","24e4bee2":"code","2e4f1667":"code","4831b1dd":"code","38d9d41c":"code","b3fa8fdf":"code","277eef1b":"code","bca5b735":"code","299b0812":"code","b98940ef":"code","1f988cff":"code","96d3f9a8":"code","8035ab01":"code","df4b9b20":"code","bfe606f9":"code","a84ece76":"code","33e0a007":"code","b3d5e73c":"code","932b2feb":"code","6c22d443":"code","88de327b":"code","4d85d08c":"code","5c2b5cb9":"code","00c6b925":"code","476a918f":"code","e8822202":"code","4d305b30":"code","72e2f559":"code","11e158d3":"code","355c86cd":"code","33f27746":"code","ecc2af4a":"code","d7aba4de":"code","f2c2a57a":"code","c5da79d1":"code","63a903c2":"code","5fb5d09a":"code","a3f9f961":"code","b369d4c4":"code","3e29d237":"code","30ab6358":"code","804a2832":"code","2f0cb6b8":"code","094641a1":"code","dcb33e2a":"code","3e6e85a9":"code","56ab3caa":"code","b4ccc261":"code","ec1736e4":"code","c5854078":"code","d70e2f73":"code","a803423f":"code","fd3df6ef":"code","31d04eb0":"code","33b6a7de":"code","52dca749":"code","3433aa44":"code","6f6c14ff":"code","6f4d6737":"code","87e2ba6c":"code","ba442bab":"code","c5ec4a2e":"code","38315169":"code","ff83ccff":"code","716a902f":"code","f18feb88":"code","2c2cb1e1":"code","3f5fef2b":"code","354f1fdc":"code","96f1f8b7":"code","735518ea":"code","2d9b42da":"code","9a422f51":"code","1bc75ce7":"code","a83f25fa":"code","09b8258f":"code","0b7dd575":"code","09824307":"code","f6fd3155":"code","c2181f2e":"code","45616001":"code","016b72dc":"code","73ad04de":"code","6a3bf037":"code","000b3639":"code","fb4ed8c1":"code","e1bdcd95":"code","781a3043":"code","6080cdc8":"code","f2674109":"code","e225ee85":"code","dead9e7e":"code","15bcd469":"code","37b639fa":"code","48f0720b":"code","86fb9c32":"code","6a432f27":"code","58abff6e":"code","aa93f397":"code","e4ff8799":"code","4045a77f":"code","75fa3ab2":"code","9018741a":"code","208431d4":"code","949ee0d1":"code","689a6722":"code","9f521c7e":"code","a1b2aac1":"code","94b4b847":"code","cf665f80":"code","f5465c8a":"code","d9229893":"code","8cb25e4d":"code","7aec45e1":"code","32bf1cce":"code","dfbc88f1":"code","29ae828a":"code","1eb7010a":"code","8cf9cfd5":"code","7f719307":"code","66cad8e5":"code","c0221360":"code","bcd9658c":"code","b5fe0163":"code","9b1aeb69":"code","83ddde5c":"code","93ed131d":"code","0a02c5df":"code","129a7dfd":"code","06ba98df":"markdown","5fb70710":"markdown","0fa708c2":"markdown","31e95db5":"markdown","6a956d2f":"markdown","ddbae835":"markdown","60c4d2a4":"markdown","c86538fc":"markdown","d24b48d5":"markdown","8730b429":"markdown","a56f9675":"markdown","21848dc1":"markdown","75219769":"markdown","779185c8":"markdown","9a76beb5":"markdown","2ad9e6f2":"markdown","17dd9329":"markdown","1cdc44c7":"markdown","33d0d358":"markdown","27a151a2":"markdown","0289b48b":"markdown","3fb65dfc":"markdown","f645a06d":"markdown","cd82be4f":"markdown","7cbb4acf":"markdown","d45cd9f2":"markdown","c555b940":"markdown","426fe840":"markdown","2228b539":"markdown","fe1daa1d":"markdown","37192750":"markdown","4a5264c4":"markdown","35babd95":"markdown","1e0ffcb6":"markdown","18b0fc8c":"markdown","79b46acb":"markdown","85c1a8c8":"markdown","d54d0506":"markdown","10826afa":"markdown","221e5dc4":"markdown","d7bcdfb6":"markdown","112c053d":"markdown","8f3d8c2e":"markdown","34ed06c2":"markdown","94dda22f":"markdown","e5a2feba":"markdown","ab25ac2c":"markdown","078c8e42":"markdown","7769f535":"markdown","e92d92bc":"markdown","beb35691":"markdown","078c0a13":"markdown","733fc270":"markdown","27fc8ce8":"markdown","b08ec59a":"markdown","962d1853":"markdown","b5dad545":"markdown","cb38d4bd":"markdown","8c12d589":"markdown","a43d27d2":"markdown","ea4b252e":"markdown","6ed349e9":"markdown","3b58f19c":"markdown","ef7bf683":"markdown","98d2253a":"markdown","75f0912a":"markdown","1985deb3":"markdown","9985a9f3":"markdown","6fd730e4":"markdown","62b87b9c":"markdown","4d2cc4ee":"markdown","5c0b2f11":"markdown","af8660e8":"markdown","a72d2574":"markdown"},"source":{"2be9fdd3":"# Importing important libraries.\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import LabelEncoder,OneHotEncoder\nsns.set_style('dark')","b16b335a":"# Loading data\ndf=pd.read_csv('..\/input\/no-show-appointment\/KaggleV2-May-2016.csv')","de2bae3f":"# Top 5 rows\ndf.head()","d273c6cb":"# Checking duplicate rows.\ndf.duplicated().sum()","b753149a":"# Checking null values in dataset.\ndf.isnull().sum()","84ed04ae":"# Checking data type\ndf.info()","24e4bee2":"# Trimming features for better analysis.\ndf['Scheduled Date'] = df.ScheduledDay.apply(lambda x: x[:-10])\ndf['Appointment Date'] = df.AppointmentDay.apply(lambda x: x[:-10])","2e4f1667":"# Dropping extraneous features.\ndf.drop(['ScheduledDay','AppointmentDay'],axis=1,inplace=True)\ndf.drop(['AppointmentID'],axis=1,inplace=True)","4831b1dd":"df['Scheduled Date'] = pd.to_datetime(df['Scheduled Date'])\ndf['Appointment Date'] = pd.to_datetime(df['Appointment Date'])","38d9d41c":"df.head()","b3fa8fdf":"cols=df.columns.to_list()\ncols","277eef1b":"cols=cols[:1]+cols[-2:]+cols[1:-2]\ncols","bca5b735":"df=df[cols]","299b0812":"# Displaying result after rearranging columns.\ndf.head()","b98940ef":"# Renaming the handcap feature to handicap and hipertension to hypertension.\ndf.rename(columns={'Handcap':'Handicap'},inplace=True)\ndf.rename(columns={'Hipertension':'Hypertension'},inplace=True)","1f988cff":"df['Handicap'].value_counts()","96d3f9a8":"# Function to drop rows which have handicap labels: 2,3,4 as these are erroneous.\ndef drop_index(lab):\n    for i in range(len(lab[0])):\n        df.drop(index=lab[0][i],inplace=True)","8035ab01":"# Getting indices where rows contains handicap values 2,3,and 4.\nlabel_2=np.where(df['Handicap']==2)\nlabel_3=np.where(df['Handicap']==3)\nlabel_4=np.where(df['Handicap']==4)","df4b9b20":"# Dropping label 2\nd1 = drop_index(label_2)","bfe606f9":"# Dropping label 3\nd2 = drop_index(label_3)","a84ece76":"# Dropping label 4\nd3 = drop_index(label_4)","33e0a007":"df.shape","b3d5e73c":"df.describe(include='all')","932b2feb":"#Finding outliers in 'Age' feature using box plot and statistics.\ndf[['Age']].describe()\n","6c22d443":"# Plotting box plot\ndf[['Age']].plot(kind='box',fontsize=15,grid=True,figsize=(12,12))\nplt.ylabel('Spread',fontsize=20)\nplt.title('Distribution of Age variable',fontsize=25);","88de327b":"# Index of smallest value of 'Age' which is -1 in our case.\ndf[['Age']].idxmin()","4d85d08c":"# Dropping rows with Age = -1\ndf.drop(index=99832,inplace=True)","5c2b5cb9":"# Indices of 'Age' values greater than 100.\nage=df[df['Age']>100].index.tolist()","00c6b925":"# Dropping rows with Age > 100.\nfor i in range(len(age)):\n    df.drop(index=age[i],inplace=True)","476a918f":"df[['Age']].describe()","e8822202":"# Plotting box plot\ndf[['Age']].plot(kind='box',fontsize=15,grid=True,figsize=(12,12))\nplt.ylabel('Spread',fontsize=20)\nplt.title('Distribution of Age variable after removing outliers',fontsize=25);","4d305b30":"sns.catplot(y='Age',data=df,kind='count',hue='No-show',height=20.7, aspect=0.8)\nplt.xlabel('Count',fontsize=20)\nplt.ylabel('Age',fontsize=20)\nplt.title('Age vs No-show',fontsize=25);","72e2f559":"df.corr()","11e158d3":"# Plotting heatmap\nplt.figure(figsize=(12,12))\nsns.heatmap(df.corr(),annot=True,cmap='tab20',linewidths=.5,linecolor='black');","355c86cd":"le=LabelEncoder()","33f27746":"# Categorical Variables.\ncol=['Gender','Neighbourhood','No-show']","ecc2af4a":"# Making one copy of the original dataframe df so that the changes in the copied dataframe won't get reflected on the original dataframe. \ndf2=df.copy()","d7aba4de":"df2.head()","f2c2a57a":"# Applying label encoding on selected features.\ndf2[col]=df2[col].apply(le.fit_transform)","c5da79d1":"df2.head()","63a903c2":"# Plotting heatmap.\nplt.figure(figsize=(12,12))\nsns.heatmap(df2.corr(),annot=True,cmap='tab20',linewidths=.5,linecolor='black');","5fb5d09a":"# Function to plot categorical plot.\ndef plot_fig(data,col,labels,xlab,title):\n    \n    location=[0,1]\n    \n    sns.catplot(x=col,hue='No-show',data=data,kind='count')\n    \n    plt.xticks(location,labels,fontsize=20)\n    \n    plt.yticks(fontsize=12)\n    \n    plt.xlabel(xlab,fontdict={'size':20})\n    \n    plt.ylabel('Count',fontdict={'size':20})\n    \n    plt.title(title,fontdict={'size':15})\n    \n    return plt.show()","a3f9f961":"# Function to calculate conditional probability.\n\ndef cond_prob(data,col,lab):\n    \n    show = data[data['No-show'] == 'No']\n    \n    not_show = data[data['No-show'] == 'Yes']\n    \n    values = data[col].value_counts()\n    \n    x = np.zeros(2)\n    \n    for i in range(2):\n        \n        x[i] = show[show[col] == lab[i]].shape[0]\n    \n    prob1 = np.zeros(2)\n    \n    for i in range(2):\n        \n        prob1[i] = x[i] \/ values[i]\n        \n        print ('Probability of showing when {} = {} is {}'.format(col,lab[i],prob1[i]))\n        \n    for i in range(2):\n        \n        print ('Probability of not showing when {} = {} is {}'.format(col,lab[i],1-prob1[i]))","b369d4c4":"plot_fig(df2,'Gender',['F','M'],'Gender',\"Show vs No Show (Gender)\")","3e29d237":"df['Gender'].value_counts()","30ab6358":"df['Gender'].value_counts().plot(kind='pie', figsize=(6, 6),autopct='%.2f',fontsize=20)\nplt.ylabel('Gender',fontsize=20)\nplt.title('Female vs Male',fontsize=25);","804a2832":"cond_prob(df,'Gender',['F','M'])","2f0cb6b8":"plot_fig(df2,'Scholarship',[0,1],'Scholarship',\"Show vs No Show (Scholarship)\")","094641a1":"df['Scholarship'].value_counts().plot(kind='pie', figsize=(6, 6),autopct='%.2f',fontsize=20)\nplt.ylabel('Scholarship',fontsize=20)\nplt.title('Scholarship Distribution',fontsize=25);","dcb33e2a":"cond_prob(df,'Scholarship',[0,1])","3e6e85a9":"plot_fig(df2,'Hypertension',[0,1],'Hypertension',\"Show vs No Show (Hypertension)\")","56ab3caa":"df['Hypertension'].value_counts().plot(kind='pie', figsize=(6, 6),autopct='%.2f',fontsize=20)\nplt.ylabel('Hypertension',fontsize=20)\nplt.title('Percent of people having\/not having hypertension',fontsize=25);","b4ccc261":"cond_prob(df,'Hypertension',[0,1])","ec1736e4":"plot_fig(df2,'Diabetes',[0,1],'Diabetes',\"Show vs No Show (Diabetes)\")","c5854078":"df['Diabetes'].value_counts().plot(kind='pie', figsize=(6, 6),autopct='%.2f',fontsize=20)\nplt.ylabel('Diabetes',fontsize=20)\nplt.title('Percent of people having\/not having diabetes',fontsize=25);","d70e2f73":"cond_prob(df,'Diabetes',[0,1])","a803423f":"plot_fig(df2,'Alcoholism',[0,1],'Alcoholism',\"Show vs No Show (Alcoholism)\")","fd3df6ef":"df['Alcoholism'].value_counts().plot(kind='pie', figsize=(6, 6),autopct='%.2f',fontsize=20)\nplt.ylabel('Alcoholism',fontsize=20)\nplt.title('Percent of people having\/not having alcoholism problem',fontsize=25);","31d04eb0":"cond_prob(df,'Alcoholism',[0,1])","33b6a7de":"plot_fig(df2,'Handicap',[0,1],'Handicap',\"Show vs No Show (Handicap)\")","52dca749":"df['Handicap'].value_counts().plot(kind='pie', figsize=(6, 6),autopct='%.2f',fontsize=20)\nplt.ylabel('Handicap',fontsize=20)\nplt.title('Percent of people are\/are not handicap',fontsize=25);","3433aa44":"cond_prob(df,'Handicap',[0,1])","6f6c14ff":"sns.catplot(x='Neighbourhood',hue='No-show',data=df2,height=4.9,aspect=3.3,kind='count')\nplt.xlabel('Neighbourhood',fontsize=20)\nplt.ylabel('Count',fontsize=20)\nplt.title('Neighbourhood vs No-show',fontsize=25);","6f4d6737":"# Function to calculate conditional probability.\n\ndef prob(data1,data2,col):\n    \n    dic = {}\n    \n    sh = []\n    \n    nsh = []\n    \n    c = data2[col].unique()\n    v = data1[col].unique()\n    \n    for i in range(len(v)):\n        \n        dic[c[i]] = v[i]\n    \n    neigh_no = data2[col].unique()\n    \n    showed = data2[data2['No-show']==0]\n    \n    for i in range(len(neigh_no)):\n        \n        p = np.sum(showed[col] == neigh_no[i]) \/ np.sum(data2[col] == neigh_no[i])\n        \n        sh.append(p)\n        \n        nsh.append(1-p)\n    \n    return sh,nsh,dic\n        ","87e2ba6c":"prob_show,prob_not_show,k=prob(df,df2,'Neighbourhood')","ba442bab":"xc=df2['Neighbourhood'].unique()","c5ec4a2e":"showed=df2[df2['Neighbourhood']==0]","38315169":"notshowed=df2[df2['No-show']==1]","ff83ccff":"m=[]\nfor i in range(len(xc)):\n    kj=np.sum(showed['Neighbourhood']==xc[i])\n    m.append(kj)","716a902f":"ns=[]\nfor i in range(len(xc)):\n    jk=np.sum(notshowed['Neighbourhood']==xc[i])\n    ns.append(jk)","f18feb88":"total=[]\nfor i in range(len(xc)):\n    t=np.sum(df2['Neighbourhood']==xc[i])\n    total.append(t)","2c2cb1e1":"# Using pandas to make a dataframe.\ndf_location_prob=pd.DataFrame({'Neighbourhood':df['Neighbourhood'].unique(),'Labels':df2['Neighbourhood'].unique(),'Showed':m,'Not-showed':ns,'Total':total,'Prob. Show':prob_show,'Prob. not show':prob_not_show})","3f5fef2b":"df_location_prob","354f1fdc":"sort=df_location_prob['Prob. Show'].sort_values()","96f1f8b7":"tind=sort[-10:].index\nbind=sort[:10].index","735518ea":"top_10=[]\nbottom_10=[]\nfor i in range(len(tind)):\n    top_10.append(df_location_prob.loc[tind[i]]['Neighbourhood'])\n    bottom_10.append(df_location_prob.loc[bind[i]]['Neighbourhood'])\n    ","2d9b42da":"top_10,bottom_10","9a422f51":"column1 = ['Age','Neighbourhood','No-show']","1bc75ce7":"# Creating dataframe with 'Age','Neighbourhood','No-show' features.\ndata = df[column1]","a83f25fa":"data.head()","09b8258f":"unique=data['Neighbourhood'].unique()","0b7dd575":"avg_age_list = []\nfor i in range(len(unique)):\n    filter_df = data[data['Neighbourhood'] == unique[i]]\n    m = filter_df['Age'].mean()\n    avg_age_list.append(m)","09824307":"# Making dataframe using pandas to map each neighbourhood with corresponding average age.\nneigh_age_df=pd.DataFrame({'Location':data['Neighbourhood'].unique(),'Avg_Age':avg_age_list})","f6fd3155":"neigh_age_df.head(10)","c2181f2e":"# Converting 'Age' datatype from float to int.\nneigh_age_df['Avg_Age'] = neigh_age_df[['Avg_Age']].astype(int)","45616001":"neigh_age_df.head(10)","016b72dc":"def avg_age_cal(data):\n    age_list=[]\n    for i in range(len(data)):\n        filter_df=neigh_age_df[neigh_age_df['Location']==data[i]]\n        age_list.append(filter_df['Avg_Age'])\n    mean=np.mean(age_list)\n    print(mean)","73ad04de":"avg_age_cal(top_10)\navg_age_cal(bottom_10)","6a3bf037":"# Unique age values.\nunique_age=data['Age'].unique()","000b3639":"# Filtering data on show and no show features.\nshow=data[data['No-show']=='No']\nnoshow=data[data['No-show']=='Yes']","fb4ed8c1":"# d-data,x-show,y-noshow\ndef func(x,y):\n    prob_age_show=[]\n    prob_age_noshow=[]\n    for i in range(len(unique_age)):\n        probx=np.sum(x['Age']==unique_age[i])\/np.sum(data['Age']==unique_age[i])\n        proby=np.sum(y['Age']==unique_age[i])\/np.sum(data['Age']==unique_age[i])\n        prob_age_show.append(probx)\n        prob_age_noshow.append(proby)\n    return prob_age_show,prob_age_noshow","e1bdcd95":"p,r=func(show,noshow)","781a3043":"# Calculating counts of show and no show for unique values of age.\nshow_list=[]\nnoshow_list=[]\nfor i in range(len(unique_age)):\n    show_list.append(np.sum(show['Age']==unique_age[i]))\n    noshow_list.append(np.sum(noshow['Age']==unique_age[i]))","6080cdc8":"age_df=pd.DataFrame({'Age':data['Age'].unique(),'Show':show_list,'No-Show':noshow_list,'Prob_show':p,'Prob_noshow':r})","f2674109":"age_df","e225ee85":"# Selecting data with age < 60.\nfiltered_age_prob_df=age_df[age_df['Age']<60]","dead9e7e":"# Sorting dataframe on 'Prob_Show' feature.\nfiltered_age_prob_df.sort_values('Prob_show',ascending=False,ignore_index=True)","15bcd469":"# Categorical plot using seaborn.\nsns.catplot(x='Age',y='Prob_show',data=filtered_age_prob_df,height=3.9,aspect=3.3,)\nplt.xlabel('Age',fontsize=20)\nplt.ylabel('Probability of show',fontsize=20)\nplt.title('Prob_Show vs Age',fontsize=25);","37b639fa":"df[['Scheduled Date','Appointment Date']]","48f0720b":"# Adding one column in our original dataframe showing the difference.\ndf['Difference']=df['Appointment Date']-df['Scheduled Date']","86fb9c32":"df.head()","6a432f27":"df.info()","58abff6e":"# Converting dataype of column 'Difference' to int.\ndf['Difference']=df['Difference'].dt.days.astype('int64')","aa93f397":"df.head()","e4ff8799":"column=['SMS_received','Difference','No-show']","4045a77f":"df3=df[column]","75fa3ab2":"df3","9018741a":"sns.catplot(x='SMS_received',hue='No-show',data=df3,height=4.9,aspect=1.3,kind='count')\nplt.xlabel('SMS Received',fontsize=20)\nplt.ylabel('Count',fontsize=20)\nplt.title('SMS-Received vs No-show',fontsize=25);","208431d4":"p_show=df3[df3['No-show']=='No']","949ee0d1":"# SMS not received when No-show = 'No'.\nx=p_show[p_show['SMS_received']==0].shape","689a6722":"x[0]\/df3[df3['SMS_received']==0].shape[0]","9f521c7e":"# SMS received when No-show = 'No'.\ny=p_show[p_show['SMS_received']==1].shape","a1b2aac1":"y[0]\/df3[df3['SMS_received']==1].shape[0]","94b4b847":"df3[['Difference']].describe()","cf665f80":"df3[['Difference']].boxplot(figsize=(10,10))\nplt.ylabel('Spread',fontsize=10)\nplt.title('Difference spread',fontsize=25);","f5465c8a":"sns.catplot(y='Difference',hue='No-show',data=df3,height=12.4,aspect=1.5,kind='count')\nplt.xlabel('Count',fontsize=20)\nplt.ylabel('Difference',fontsize=20)\nplt.title('Difference vs No-show (with outliers)',fontsize=25);","d9229893":"# Getting indices of rows which contains values smaller than 0 in 'Difference' variable.\nout=df[df['Difference'] < 0].index.tolist()","8cb25e4d":"# Dropping rows.\nfor i in range(len(out)):\n    df.drop(index=out[i],inplace=True)","7aec45e1":"df.shape","32bf1cce":"# Getting indices of rows which contains values greater than 37 in 'Difference' variable.\nout2=df[df['Difference']>37].index.tolist()","dfbc88f1":"# Dropping rows.\nfor i in range(len(out2)):\n    df.drop(index=out2[i],inplace=True)","29ae828a":"df.shape","1eb7010a":"# Box plot to show the effect of the removal of outliers.\ndf[['Difference']].boxplot(figsize=(10,10))\nplt.ylabel('Spread',fontsize=10)\nplt.title('Difference spread (After removing outliers)',fontsize=25);","8cf9cfd5":"df[['Difference']].describe()","7f719307":"sns.catplot(x='Difference',hue='No-show',data=df,height=10.6,aspect=1.0,kind='count')\nplt.xlabel('Difference',fontsize=20)\nplt.ylabel('Count',fontsize=20)\nplt.title('Difference vs No-show (without outliers)',fontsize=25);","66cad8e5":"p_sh=df[df['No-show']=='No']\np_nsh=df[df['No-show']=='Yes']","c0221360":"ar=df['Difference'].unique()","bcd9658c":"shl=[]\nfor i in range(len(ar)):\n    no_sh=np.sum(p_sh['Difference']==ar[i])\n    shl.append(no_sh)","b5fe0163":"nshl=[]\nfor i in range(len(ar)):\n    no_nsh=np.sum(p_nsh['Difference']==ar[i])\n    nshl.append(no_nsh)","9b1aeb69":"prob1=[]\nfor i in range(len(ar)):\n    probability=np.sum(p_sh['Difference']==ar[i])\/np.sum(df['Difference']==ar[i])\n    prob1.append(probability)","83ddde5c":"prob2=[]\nfor i in range(len(ar)):\n    p2=np.sum(p_nsh['Difference']==ar[i])\/np.sum(df['Difference']==ar[i])\n    prob2.append(p2)","93ed131d":"# Using pandas to make dataframe.\ndifference_df=pd.DataFrame({'Difference':df['Difference'].unique(),'No. of Shows':shl,'No. of no-shows':nshl,'Prob. of show':prob1,'Prob. of no-show':prob2})","0a02c5df":"difference_df","129a7dfd":"# Sorting above dataframe on 'Difference' variable.\ndifference_df.sort_values('Difference')","06ba98df":"## Removing outliers.","5fb70710":"# Q-3 __What role does SMS-Received and Appointment Date plays in predicting the Show and No-Show of the patient?__","0fa708c2":"Min. value is -1<br>\nMax. value is 115","31e95db5":"- Neighbourhood No. __38__ (JARDIM CAMBURI) has the highest number of shows as well as no shows. This could mean that maximum number of appointments were made for neighbourhood __JARDIM CAMBURI__.<br>\n- Neigbourhood No. __51__ (PARQUE INDUSTRIAL) has the lowest number of both shows and no-shows. This could mean that minimum number of appointments were made for this neighbourhood.","6a956d2f":"Count of not having scholarship and showing is greater than having scholarship and showing.","ddbae835":"__For top 10 neighbourhoods with high probability of showing, average age of patients is 40.__<br>\n__For bottom 10 neighbourhoods with low probability of showing, average age of patients is 37.__","60c4d2a4":"Count of patients not having Alcoholism problem and showing is much higher than having Alcoholism problem and showing.","c86538fc":"- Count of value of Age equal to 0 is maximum. I am assuming age 0 is equivalent to the age of the children in months.<br>","d24b48d5":"__Calculating conditional probability__","8730b429":"__Correlation of features with each other.__","a56f9675":"## Top 10 and bottom 10 locations with highest and lowest probability of showing respectively.","21848dc1":"__Plotting a graph to show the distribution of Age in data.__","75219769":"- Min value is 0.\n- Max value is 37.\n- Median (Green line) is close to 4.\n- Data is right skewed.\n- Quertile 1 overlap with the minimum value.\n- Median is close to quertile 1 which means than data is more concentrated in this region.\n- Quertile 3 is close 14.\n- IQT is approx. 14.","779185c8":"## Exploring 'Difference' variable.","9a76beb5":"__Dropping rows which contains values smaller than 0 in 'Difference' feature.__","2ad9e6f2":"## Plotting Box plot","17dd9329":"# CONCLUSION","1cdc44c7":"### ___1- GENDER VS NO-SHOW___","33d0d358":"__Thus, patients who have not received sms has higher probability of showing. But I think that patients who receive sms should have higher probability of showing.__<br>\n\n__According to me, their are various reasons which could explain that why more patients showed up when did not received SMS compare to patients who showed  and received SMS. Two main reasons are:__ <br>\n- First of all, patients who showed and did not received SMS would have scheduled their appointment within 0 to 5 days of scheduling time. Also, patients who showed and received SMS would have scheduled their appointment within range of 5 to 15 days or could be more.<br>\n\n- Secondly, I assume that probability of showing when did not received SMS is higher because their is less chance of forgetting about the appointment date since range is from 0 to 5 days but in other case chance of forgetting or not paying attention to SMS increases since range is from 6 to 15 days or more. Also, people are sometimes not sure about whether they would have time to show on appointment date or not but if appointment date is scheduled within 0-5 days than people are quite sure about their availability on appointment date.<br>\n\n__I will try to explore 'Difference' feature in order to get some more observations about show and no-show.__","27a151a2":"80.32% of population do not have hypertension whereas 19.68 percent of population have hypertension.","0289b48b":"## Categorical plot showing more clear representation of how Show and No-show are associated with the difference variable.","3fb65dfc":"# Q-1 __How features are correlated with target variable?__","f645a06d":"__Making one dataframe to store location, labels, people showed, people not showed, total, probability of showing, and probability of not showing.__","cd82be4f":"__Making one dataframe to show the relation between difference and no-show variables.__","7cbb4acf":"## Categorical plot for sms-received and no-show","d45cd9f2":"Count of patients not havingDiabetes and showing is higher than having Diabetes and showing.","c555b940":"Taking probability of show and no show between 0 and 55 as maximum data points lie in this range.","426fe840":"__Let's calculate conditional probability__","2228b539":"__Calculating conditional probability__","fe1daa1d":"### Rearranging columns in a proper manner.","37192750":"__Correlation of features with target variable (No-show).__","4a5264c4":"__Calculating conditional probability__","35babd95":"### Converting categorical variables into numeric variables using label encoder.<br>\n- Correlation between categoricals variables and target variables.","1e0ffcb6":"### ___4-DIABETES VS NO-SHOW___","18b0fc8c":"Count of patients who are not handicap and showed is much higher than those who are handicap and showed.","79b46acb":"90.84% of population do not have diabetes whereas 7.16 percent of population have diabetes.","85c1a8c8":"__Calculating Conditional Probability__","d54d0506":"__Finding the difference between scheduled date and appointment date__","10826afa":"Female count is higher in case of no-show = 0 compare to male count.","221e5dc4":"- __Gender__: 0-Female, 1-Male<br>\n- __No-show__: 0-Showed, 1-Not Showed<br>\n- __SMS_received__: 0-Not Received, 1-Received<br>\n- __Scholarship__: 0-No, 1-Yes<br>\n- __Hipertension__: 0-No, 1-Yes<br>\n- __Diabetes__: 0-No, 1-Yes<br>\n- __Alcoholism__: 0-No, 1-Yes<br>\n- __Handicap__: 0:No, 1-Yes","d7bcdfb6":"__Calculating the average age for each neighbourhood.__","112c053d":"Boxplot shows that their are some outliers in __Age__ column.<br>\n\n1- Minimum Value is negative which is not possible.<br>\n2- Maximum Value is close to 120. Although, it is possible to live upto 120 years but considering the spread of our data we will consider the values greater than 100 as outlier.<br>","8f3d8c2e":"- Age: Mean is 37 approx., Interquertile range is 37, min. value is -1, max. value is 115.\n- Scheduled Date: Starting date is 10 November,2015 and end date is 8 June,2016.\n- Appointment Date: Starting Date is 29 April,2016 and end date is 8 June,2016.\n- Gender: Females have highest count with freq. of 71723.\n- Neighbourhood: Jardim Camburi has highest count with freq. of 7717 and 81 unique values.","34ed06c2":"- Probability of showing when Gender = __F__ (__0.7969270666313456__) is smaller than Probability of showing when Gender = __M__ (__0.8002435422442159__).\n- Patients having hypertension are more likely to show compare to those who do not have hypertension.\n- Patients having diabetes are more likely to show compare to those who do not have diabetes.\n- Patients who are handicap are more likely to show compare to those who are not handicap.\n- Neighbourhoods (Hospital Location) can play a major factor in predicting the show or no-show.\n- As the difference between scheduling date and appointment date increases chances of showing decreases. But considering a patient have hypertension or diabetes or is handicap than chances of showing can increase despite of a large gap between scheduling and appointment date.\n- Patients who did not received SMS had more chance of showing since they scheduled the appointments within 0 to 4 days of scheduled date.<br>\n\n__LIMITATIONS__\n- ___Duplicate patient id's___ __:__ Not enough explanation for duplicate patient id's whether they are erroneous or intentional. If they are present because of some kind of technical error than we can just remove them but if same patient intentionally made several appointments than we can not remove them as they can play important role in our analysis.\n- Not enough explanation about '__Scholarship__' feature. How Scholarship is given? or what is the criteria to obtain Scholarship?. The answers of these question are not mentioned in dataset.\n\n- __Handicap Feature__ __:__ This feature contains labels 0,1,2,3,4. A person can either be handicap or not handicap. So if we consider 0 for not handicap and 1 for handicap than what does 2,3,4 represent is not mentioned in dataset.\n\n- __Appointment date feature__  can be further broken down into year, months, days in order to predict which month or day of the month has higher chance of show or no-show.","94dda22f":"__Function to calculate average age assosiated with top 10 and bottom 10 neighbourhoods.__","e5a2feba":"90.17% of patients do not have scholarship and 9.83% of patients have scholarship. This could mean that 9.83% of patients lie in the category of poor or very poor.","ab25ac2c":"-  'JARDIM DA PENHA': 39,\n-  'MATA DA PRAIA': 45,\n-  'PONTAL DE CAMBURI': 54,\n-  'REP\u00daBLICA': 58,\n- 'GOIABEIRAS': 25,\n- 'ANDORINHAS': 1,\n- 'CONQUISTA': 12,\n- 'NOVA PALESTINA': 50,\n- 'DA PENHA': 15,\n- 'TABUAZEIRO': 78,\n- 'BENTO FERREIRA': 6,\n- 'S\u00c3O PEDRO': 77,\n- 'SANTA MARTHA': 66,\n- 'S\u00c3O CRIST\u00d3V\u00c3O': 75,\n- 'MARU\u00cdPE': 44,\n- 'GRANDE VIT\u00d3RIA': 26,\n- 'S\u00c3O BENEDITO': 74,\n- 'ILHA DAS CAIEIRAS': 29,\n- 'SANTO ANDR\u00c9': 68,\n- 'SOLON BORGES': 73,\n- 'BONFIM': 8,\n- 'JARDIM CAMBURI': 38,\n- 'MARIA ORTIZ': 43,\n- 'JABOUR': 37,\n- 'ANT\u00d4NIO HON\u00d3RIO': 2,\n- 'RESIST\u00caNCIA': 59,\n- 'ILHA DE SANTA MARIA': 30,\n- 'JUCUTUQUARA': 42,\n- 'MONTE BELO': 46,\n- 'M\u00c1RIO CYPRESTE': 48,\n- 'SANTO ANT\u00d4NIO': 69,\n- 'BELA VISTA': 5,\n- 'PRAIA DO SU\u00c1': 56,\n- 'SANTA HELENA': 63,\n- 'ITARAR\u00c9': 36,\n- 'INHANGUET\u00c1': 35,\n- 'UNIVERSIT\u00c1RIO': 79,\n- 'S\u00c3O JOS\u00c9': 76,\n- 'REDEN\u00c7\u00c3O': 57,\n- 'SANTA CLARA': 62,\n- 'CENTRO': 10,\n- 'PARQUE MOSCOSO': 52,\n- 'DO MOSCOSO': 18,\n- 'SANTOS DUMONT': 70,\n- 'CARATO\u00cdRA': 9,\n- 'ARIOVALDO FAVALESSA': 3,\n- 'ILHA DO FRADE': 32,\n- 'GURIGICA': 27,\n- 'JOANA D\u00b4ARC': 41,\n- 'CONSOLA\u00c7\u00c3O': 13,\n- 'PRAIA DO CANTO': 55,\n- 'BOA VISTA': 7,\n- 'MORADA DE CAMBURI': 47,\n- 'SANTA LU\u00cdZA': 64,\n- 'SANTA L\u00daCIA': 65,\n- 'BARRO VERMELHO': 4,\n- 'ESTRELINHA': 21,\n- 'FORTE S\u00c3O JO\u00c3O': 23,\n- 'FONTE GRANDE': 22,\n- 'ENSEADA DO SU\u00c1': 20,\n- 'SANTOS REIS': 71,\n- 'PIEDADE': 53,\n- 'JESUS DE NAZARETH': 40,\n- 'SANTA TEREZA': 67,\n- 'CRUZAMENTO': 14,\n- 'ILHA DO PR\u00cdNCIPE': 33,\n- 'ROM\u00c3O': 60,\n- 'COMDUSA': 11,\n- 'SANTA CEC\u00cdLIA': 61,\n- 'VILA RUBIM': 80,\n- 'DE LOURDES': 16,\n- 'DO QUADRO': 19,\n- 'DO CABRAL': 17,\n- 'HORTO': 28,\n- 'SEGURAN\u00c7A DO LAR': 72,\n- 'ILHA DO BOI': 31,\n- 'FRADINHOS': 24,\n- 'NAZARETH': 49,\n- 'AEROPORTO': 0,\n- 'ILHAS OCE\u00c2NICAS DE TRINDADE': 34,\n- 'PARQUE INDUSTRIAL': 51","078c8e42":"## Let's do some univariate analysis.","7769f535":"Probability of showing when sms received is __0.7241350115708077__.","e92d92bc":"Count of patients not having hypertension and showing is higher than having hypertension and showing.","beb35691":"### ___5-ALCOHOLISM VS NO-SHOW___","078c0a13":"1- Median is close to 37.<br>\n2- Quertile 1 (Q1) is close to 18.<br>\n3- Quertile 3 (Q3) is close to 55.<br>\n4- Inter Quertile range (IQT) is close to 37.<br>\n5- Data is right skewed.<br>\n6- Min. value is 0.<br>\n7- Max. value is 100.","733fc270":"From the above heatmap we can see that features are not highly correlated with target variable (No-show).","27fc8ce8":"__Dropping rows which contain values greater than 37 in 'Difference' feature.__","b08ec59a":"### ___1- SCHOLARSHIP VS NO-SHOW___","962d1853":"__TOP 10 Neighbourhoods.__\n- DO QUADRO\n- JARDIM DA PENHA\n- SANTA MARTHA\n- DO CABRAL\n- DE LOURDES\n- SOLON BORGES\n- M\u00c1RIO CYPRESTE\n- AEROPORTO\n- ILHA DO BOI\n- PARQUE INDUSTRIAL<br>\n\n__BOTTOM 10 Neighbourhoods.__\n- ILHAS OCE\u00c2NICAS DE TRINDADE\n- SANTOS DUMONT\n-  SANTA CEC\u00cdLIA\n-  SANTA CLARA\n-  ITARAR\u00c9\n-  JESUS DE NAZARETH\n-  HORTO\n-  ILHA DO PR\u00cdNCIPE\n-  CARATO\u00cdRA\n-  ANDORINHAS<br>\n\n__Their is a higher chance of showing when appointment is scheduled at one of the top 10 locations.__<br>\n__Their is a lower chance of showing when appointment is scheduled at one of the bottom 10 locations.__","b5dad545":"## Converting following feature's data types:<br>\n1-ScheduledDay: Datetime<br>\n2-AppointmentDay: Datetime","cb38d4bd":"98.15% of population is not handicap whereas only 1.85% of population is handicap.","8c12d589":"90.96% of population do not have Alcoholism problem whereas only 3.04% of population have this problem.","a43d27d2":"Percent of females (__65.01__) is higher than males (__34.99__).","ea4b252e":"- Age and Hypertension are the features with maximum correlation of 0.5\n- Diabetes and Hypertension have correlation of 0.43 which is the second highest.\n- Rest of the features are not highly correlated with each other. Hence, they are independent.","6ed349e9":"Probability of showing when sms not received is __0.833079614347141__.","3b58f19c":"__Calculating conditional probability__","ef7bf683":"- There are many outliers in Difference feature.\n- Min. value is -6.\n- Max. value is 179\n- Median is close to zero which means maximum data points lie bewteen 0 and median.\n- Mean is 10.\n- Zero days has maximum number of shows.\n- Data is right skewed.\n- I will keep values upto 70 in difference column. Values greater than 70 are considered as outliers since max. part of our data ranges from 0 to 15 days. ","98d2253a":"## Finding relation between Age and Neighbourhood.","75f0912a":"#### Calculating probability of show and no show for every age value.","1985deb3":"## DATASET USED\n- ### No-show Appointments\nThis dataset collects information\nfrom 100k medical appointments in\nBrazil and is focused on the question\nof whether or not patients show up\nfor their appointment. A number of\ncharacteristics about the patient are\nincluded in each row.<br>\n\u25cf \u2018ScheduledDay\u2019 tells us on\nwhat day the patient set up their\nappointment.<br>\n\u25cf \u2018Neighborhood\u2019 indicates the\nlocation of the hospital.<br>\n\u25cf \u2018Scholarship\u2019 indicates\nwhether or not the patient is\nenrolled in Brasilian welfare\nprogram Bolsa Fam\u00edlia.<br>\n\u25cf Be careful about the encoding\nof the last column: it says \u2018No\u2019 if\nthe patient showed up to their\nappointment, and \u2018Yes\u2019 if they\ndid not show up.<br>\n### Data Dictionary<br>\n01 - ___PatientId___<br>\nIdentification of a patient<br>\n02 - ___AppointmentID___<br>\nIdentification of each appointment<br>\n03 - ___Gender___<br>\nMale or Female . Female is the greater proportion, woman takes way more care of they health in comparison to man.<br>\n04 - ___Appointment Day___<br>\nThe day of the actuall appointment, when they have to visit the doctor.<br>\n05 - ___ScheduledDay___<br>\nThe day someone called or registered the appointment, this is before appointment of course.<br>\n06 - ___Age___<br>\nHow old is the patient.<br>\n07 - ___Neighbourhood___<br>\nWhere the appointment takes place.<br>\n08 - ___Scholarship___<br>\nTrue of False . Observation, this is a broad topic, consider reading this article.<br> https:\/\/en.wikipedia.org\/wiki\/Bolsa_Fam%C3%ADlia<br>\n09 - ___Hipertension___<br>\nTrue or False<br>\n10 - ___Diabetes___<br>\nTrue or False<br>\n11 - ___Alcoholism___<br>\nTrue or False<br>\n12 - ___Handcap___<br>\nTrue or False<br>\n13 - ___SMS_received___<br>\n1 or more messages sent to the patient.<br>\n14 - ___No-show___<br>\nTrue or False.<br>\n\n## Questions\n__How features are correlated with target variable?__<br>\n__What role does Neighbourhood and age plays in predicting the Show and No-show?__<br>\n__What role does SMS-Received and Appointment Date plays in predicting the Show and No-Show of the patient?__\n\n## How features are correlated with target variable?<br>\n- Calculated the correlation of independent features with each other.\n- Used Heatmap to show the correlation of features.\n- Used label encoder to convert categorical variables into quantitative variables in order to show the correlation.\n- Again used heatmap but this time it was used to show the correlation of features with target variable.\n- Performed Univariate Analysis.\n- Calculated the probability of show and no show using various features.<br>\n__Plots used to investigate Q-1__\n- Heatmap\n- Categorical plot\n- Pie Chart\n\n## What role does Neighbourhood and age plays in predicting the Show and No-show?<br>\n- Calculated the probability of show and no show for each neighbourhood.\n- For each neighbourhood calculated the average age of patients making appointment.\n- Calculated the average age for top 10 and bottom 10 locations with maximum probability and minimum probability respectively.\n- Calculated probability of show and no show for every age and plotted the graph (Prob. show vs Age).<br>\n__Plots used to investigate Q-2__\n- Categorical plot\n- Strip plot\n\n## What role does SMS-Received and Appointment Date plays in predicting the Show and No-Show of the patient?<br>\n- Calculated the gap between scheduled date and appointment date.\n- Calculated conditional probability of show when SMS not received and SMS received.\n- Calculated probability of show and not show for difference between scheduled and appointment date.<br>\n__Plots used to investigate Q-3__\n- Box plot\n- Categorical plot\n\n## Data Wrangling description\n- Obtained Data from Kaggle.\n- Changed datatypes.\n- Analysed duplicates.\n- Analysed null values.\n- Trimmed Column Values.\n- Renamed column names.\n- Rearranged column.\n- Dropped columns\n- Remove redundant and erroneous data.\n- Analysed outliers.\n","9985a9f3":"### ___3-HYPERTENSION VS NO-SHOW___","6fd730e4":"- Probability of showing is maximum for age 2.\n- Probability of show decreases from age 0 to age 14.\n- Probability of show increases from age 15 to age 60.\n\n__I have made several observations from above graph:__\n- Children below 4 years have high chances of showing since they are in vulnerable stage.\n- Between 6 and 14 years, chances of showing decreases. Human body gets use to environment and chances of getting disease decreases.\n- Between 30 years and 60 years, chances of showing again increases gradully. Body slowly starts getting old and chance of getting disease increases.","62b87b9c":"__Dropping rows which contains 'Age' values -1 and 100 or greater.__","4d2cc4ee":"__Calculating Conditional Probability__","5c0b2f11":"### ___6- HANDICAP VS NO-SHOW___","af8660e8":"__From the above dataframe several observations have been made:__<br>\n\n- We can see that as difference is increasing, probability of show is decreasing and probability of no-show is increasing.\n\n- As difference is increasing number of shows are decreasing in most cases and number of no-shows are increasing.","a72d2574":"# Q-2 __What role does Neighbourhood and Age plays in predicting the Show and No-show?__"}}