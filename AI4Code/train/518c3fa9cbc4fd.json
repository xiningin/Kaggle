{"cell_type":{"082111a2":"code","ea1d377e":"code","350ba217":"code","447fdc8e":"code","58d00b8c":"code","cc13583c":"code","369cc2d5":"code","0df81085":"code","bd20522c":"markdown","2a705ada":"markdown","36bd4245":"markdown","b9750fe0":"markdown","703a84da":"markdown"},"source":{"082111a2":"import numpy as np\nimport matplotlib.pyplot as plt\nimport PIL\nimport glob\nimport pathlib\nimport tensorflow as tf\nfrom tensorflow.keras import layers\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator","ea1d377e":"train_path=pathlib.Path(\"..\/input\/lyme-disease-rashes\/RashData\/Train\/Train_2_Cases\")\nval_path=pathlib.Path(\"..\/input\/lyme-disease-rashes\/RashData\/Validation\/Validation_2_Cases\")","350ba217":"negative=list(train_path.glob(\"Lyme_Negative\/*.jpg\"))\nplt.figure(figsize=(10,10))\n\nfor i in range(9):\n    plt.subplot(3,3,i+1)\n    img=PIL.Image.open(str(negative[i]))\n    plt.imshow(img)\n    plt.axis(\"off\")\n    \nplt.show()","447fdc8e":"train_gen=ImageDataGenerator(\n    rescale=1.\/255,\n    horizontal_flip=True,\n    vertical_flip=True,\n    rotation_range=90,\n    height_shift_range=0.2,\n    width_shift_range=0.2,\n    validation_split=0.1)\n\ntest_gen=ImageDataGenerator(rescale=1.\/255)","58d00b8c":"train=train_gen.flow_from_directory(\n\ntrain_path,\ntarget_size=(224,224),\ncolor_mode=\"rgb\",\nclass_mode=\"binary\",\nbatch_size=32,\nshuffle=True,\nseed=42,\nsubset=\"training\")\n\n\nvalidation=train_gen.flow_from_directory(\n\ntrain_path,\ntarget_size=(224,224),\ncolor_mode=\"rgb\",\nclass_mode=\"binary\",\nbatch_size=32,\nshuffle=True,\nseed=42,\nsubset=\"validation\")\n\n\ntest=test_gen.flow_from_directory(\n\nval_path,\ntarget_size=(224,224),\ncolor_mode=\"rgb\",\nclass_mode=\"binary\",\nbatch_size=32,\nshuffle=False)","cc13583c":"inception = tf.keras.applications.InceptionResNetV2(weights='imagenet', input_shape=(224,224,3), include_top=False)\n\ninception.trainable = False\n\ninput=inception.input\n\nx=layers.GlobalAveragePooling2D()(inception.output)\nx=layers.Dense(64,activation=\"relu\")(x)\nx=layers.Dropout(0.3)(x)\noutput=layers.Dense(1,activation=\"sigmoid\")(x)\n\nmodel=Model(input,output)\n\nmodel.summary()","369cc2d5":"model.compile(optimizer=\"adam\",loss=\"binary_crossentropy\",metrics=[\"accuracy\"])","0df81085":"history=model.fit(train,validation_data=validation,epochs=50,callbacks=[\n        tf.keras.callbacks.EarlyStopping(\n            monitor='val_loss',\n            patience=5,\n            restore_best_weights=True\n        )\n    ])","bd20522c":"# 3-Plot some examples","2a705ada":"# 2-Read train and validation data","36bd4245":"# 1-Import libraries","b9750fe0":"# 5-Create network from scratch","703a84da":"# 4-Image DataGenerator"}}