{"cell_type":{"79a575be":"code","3ae6075e":"code","22a87237":"code","4af08ca8":"code","a878020e":"code","64c8727f":"code","47ea548c":"code","2f6f7052":"code","38c9db93":"code","f965d377":"markdown","a54b4774":"markdown","2e0d2657":"markdown","afb7fe02":"markdown","8acb8ad6":"markdown","92058091":"markdown","ed09f707":"markdown","51e7fa08":"markdown","4fc867b6":"markdown","39a53dcf":"markdown","d92dfd99":"markdown","c6d06397":"markdown"},"source":{"79a575be":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn import metrics\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3ae6075e":"home = pd.read_csv('\/kaggle\/input\/home-sensordata\/data.csv')\nhome.drop('time_id',axis=1,inplace=True)","22a87237":"home.info()","4af08ca8":"sns.heatmap(home.corr(),annot=True,cmap='GnBu_r')","a878020e":"sns.pairplot(home)","64c8727f":"X = home.drop('ping_ms',axis=1)\ny = home['ping_ms']\nX_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.33, random_state=42)","47ea548c":"lr = LinearRegression()\nlr.fit(X_train,y_train)","2f6f7052":"pred = lr.predict(X_test)","38c9db93":"cf = pd.DataFrame(lr.coef_,X.columns)\ncf.columns = ['Coeffecient']\nsns.heatmap(cf,annot=True,cmap='Blues')","f965d377":"#### Check the datatypes","a54b4774":"# Train Test Split","2e0d2657":"#### Read the csv file & drop time_id column","afb7fe02":"#### Determine the X and y values and do the train_test_split","8acb8ad6":"#### Create a heatmap with color GnBu_r for all the correlations of the dataset","92058091":"#### Create the Linear Regression object and do the fit","ed09f707":"#### Print the coeffecients as a heat map and how effective each feature on our label (ping_ms)","51e7fa08":"#### Create a Pairplot for all the correlations of the dataset","4fc867b6":"#### Predict the data using X_test","39a53dcf":"# EDA","d92dfd99":"# Coeffecients","c6d06397":"# Linear Regression"}}