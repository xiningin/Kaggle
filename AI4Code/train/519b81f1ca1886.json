{"cell_type":{"02d5aae1":"code","843c2a78":"code","71141229":"code","9c285142":"code","18323eae":"code","20880a4e":"code","d1f90566":"code","48e9086c":"code","8b1b0a47":"code","002d128b":"code","f04c0a32":"code","f0e83e3d":"code","7f401a2c":"code","0e50442d":"code","5d226427":"code","1bdea3b0":"code","ab57db85":"code","dd254483":"code","098df087":"code","4d4f110c":"code","72c96888":"code","735fe442":"code","99c63266":"code","1067d57e":"code","e1ab26f0":"code","3db04b4e":"code","836031cc":"code","724ffd7f":"code","af43c3c8":"code","a0577e81":"code","85fedab8":"code","e9a2c423":"code","1e4c39ff":"code","722f3fad":"code","d8c590f5":"code","718246ca":"code","4a0c974c":"code","f5870a6e":"markdown","4e1d3ad4":"markdown","cf3b2f1c":"markdown","03b75dab":"markdown","35f8b894":"markdown","ce444595":"markdown","1700bf5e":"markdown","90f88d3d":"markdown","397072e3":"markdown","7989a480":"markdown","07139e9e":"markdown","b4414238":"markdown","a4a66a8c":"markdown","b52bdee2":"markdown","db3ba508":"markdown","5813a928":"markdown","5f0ee45a":"markdown","251bdd2f":"markdown","df7e9b9b":"markdown","266f8743":"markdown","9f97a47e":"markdown","b67b4e07":"markdown","351f34b7":"markdown","5fe2082c":"markdown","8ca92bc9":"markdown","b3f2df1c":"markdown","0af185e6":"markdown","6424b3b9":"markdown"},"source":{"02d5aae1":"import pandas as pd\n\n# visualization libraries\nimport seaborn as sns\n\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nsns.set_style(\"whitegrid\")\n\nimport plotly.graph_objects as go\nimport plotly.express as px\nfrom plotly.subplots import make_subplots","843c2a78":"train = pd.read_csv(\"..\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv\")\ntrain = train.dropna(inplace=False)","71141229":"train","9c285142":"dummy = train.copy()","18323eae":"dummy.loc[dummy['experience'] == '>20', 'experience'] = 21\ndummy.loc[dummy['experience'] == '<1', 'experience'] = 0\ndummy['experience'] = dummy['experience'].astype(int)","20880a4e":"dummy.loc[(dummy['experience'] >= 0) & (dummy['experience'] <= 5), 'stage'] = 'Novice'\ndummy.loc[(dummy['experience'] > 5 ) & (dummy['experience'] <= 10), 'stage'] = 'Beginner'\ndummy.loc[(dummy['experience'] > 10) & (dummy['experience'] <= 15), 'stage'] = 'Competent'\ndummy.loc[(dummy['experience'] > 15) & (dummy['experience'] <= 20), 'stage'] = 'Proficient'\ndummy.loc[(dummy['experience'] > 20) , 'stage'] = 'Expert'","d1f90566":"train['stage'] = dummy['stage']","48e9086c":"dummy.loc[(dummy['city_development_index'] >= 0) & (dummy['city_development_index'] <= 0.549), 'level'] = 'Low'\ndummy.loc[(dummy['city_development_index'] > 0.549 ) & (dummy['city_development_index'] <= 0.699), 'level'] = 'Medium'\ndummy.loc[(dummy['city_development_index'] > 0.699) & (dummy['city_development_index'] <= 0.799), 'level'] = 'High'\ndummy.loc[dummy['city_development_index'] > 0.799, 'level'] = 'Very High'","8b1b0a47":"train['level'] = dummy['level']","002d128b":"dummy['gender']=dummy['gender'].astype('category').cat.codes\ndummy['relevent_experience']=dummy['relevent_experience'].astype('category').cat.codes\ndummy['enrolled_university']=dummy['enrolled_university'].astype('category').cat.codes\ndummy['education_level']=dummy['education_level'].astype('category').cat.codes\ndummy['major_discipline']=dummy['major_discipline'].astype('category').cat.codes\ndummy['company_type']=dummy['company_type'].astype('category').cat.codes\ndummy['stage']=dummy['stage'].astype('category').cat.codes\ndummy['level']=dummy['level'].astype('category').cat.codes","f04c0a32":"dummy = dummy.drop(columns=['experience', 'enrollee_id'])","f0e83e3d":"fig = go.Figure()\n\nfig.add_trace(go.Heatmap(z=dummy.corr(), \n                         x=dummy.corr().index.values,\n                        y=dummy.corr().columns.values))\n\nfig.update_layout(\n    title_text=\"Heatmap Correlation\",\n)\nfig.show()\n\ndummy.corr().style.highlight_min(axis=0)","7f401a2c":"fig = go.Figure()\nfig.add_trace(go.Pie(values=train['gender'].value_counts(), labels=list(train['gender'].unique()), pull=[0, 0, 0.05]))\n\nfig.update_layout(\n    title_text=\"Gender\",\n)\nfig.show()","0e50442d":"fig = go.Figure()\n\n# education level by gender\nfig.add_trace(go.Histogram(x=train['education_level'][train[\"gender\"] == \"Male\"], name=\"Male\"))\nfig.add_trace(go.Histogram(x=train['education_level'][train[\"gender\"] == \"Female\"], name=\"Female\"))\nfig.add_trace(go.Histogram(x=train['education_level'][train[\"gender\"] == \"Other\"], name=\"Other\"))\n\n# gender by education level\nfig.add_trace(go.Histogram(x=train['gender'][train[\"education_level\"] == \"Graduate\"], name=\"Graduate\", visible=False))\nfig.add_trace(go.Histogram(x=train['gender'][train[\"education_level\"] == \"Masters\"], name=\"Masters\", visible=False))\nfig.add_trace(go.Histogram(x=train['gender'][train[\"education_level\"] == \"Phd\"], name=\"Phd\", visible=False))\n\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"dropdown\",\n            direction=\"left\",\n            active=0,\n            x=1,\n            y=1.2,\n            buttons=list([\n                    dict(label=\"Education Level\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, True, True, False, False, False]},\n                           {\"title\": \"Education Level by Gender\"}]),\n                dict(label=\"Gender\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, False, False, True, True, True]},\n                           {\"title\": \"Gender by Education Level\"}])\n            ]),\n        ),\n    ])\n\n\nfig.update_layout(\n    title_text=\"Gender and Education Level\",\n)\nfig.show()","5d226427":"fig = go.Figure()\n\n# education level by gender looking for job changes\nfig.add_trace(go.Histogram(x=train['education_level'][(train[\"gender\"] == \"Male\") & train[\"target\"] == 1.0], name=\"Male\"))\nfig.add_trace(go.Histogram(x=train['education_level'][(train[\"gender\"] == \"Female\") & train[\"target\"] == 1.0], name=\"Female\"))\nfig.add_trace(go.Histogram(x=train['education_level'][(train[\"gender\"] == \"Other\") & train[\"target\"] == 1.0], name=\"Other\"))\n\n# education level by gender looking for no job changes\nfig.add_trace(go.Histogram(x=train['education_level'][(train[\"gender\"] == \"Male\") & train[\"target\"] == 0.0], name=\"Male\", visible=False))\nfig.add_trace(go.Histogram(x=train['education_level'][(train[\"gender\"] == \"Female\") & train[\"target\"] == 0.0], name=\"Female\", visible=False))\nfig.add_trace(go.Histogram(x=train['education_level'][(train[\"gender\"] == \"Other\") & train[\"target\"] == 0.0], name=\"Other\", visible=False))\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"dropdown\",\n            direction=\"left\",\n            active=0,\n            x=1,\n            y=1.2,\n            buttons=list([\n                    dict(label=\"Job Changing\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, True, True, False, False, False]},\n                           {\"title\": \"Education Level by Gender with Job Changing\"}]),\n                dict(label=\"No Job Changing\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, False, False, True, True, True]},\n                           {\"title\": \"Education Level by Gender with no Job Changing\"}])\n            ]),\n        ),\n    ])\n\n\nfig.update_layout(\n    title_text=\"Education Level and Gender with target\",\n)\nfig.show()","1bdea3b0":"fig = go.Figure()\nfig.add_trace(go.Pie(values=train['enrolled_university'].value_counts(), labels=list(train['enrolled_university'].unique()), pull=[0, 0, 0.05]))\n\nfig.update_layout(\n    title_text=\"Enrollment\",\n)\nfig.show()","ab57db85":"fig = go.Figure()\n\n# enrollment by relevant experience\nfig.add_trace(go.Histogram(x=train['enrolled_university'][train[\"relevent_experience\"] == 'No relevent experience'], name=\"No Experience\"))\nfig.add_trace(go.Histogram(x=train['enrolled_university'][train[\"relevent_experience\"] == 'Has relevent experience'], name=\"Has Experience\"))\n\n\n# relevant experience by enrollment\nfig.add_trace(go.Histogram(x=train['relevent_experience'][train[\"enrolled_university\"] == 'no_enrollment'], name=\"No Enrollment\", visible=False))\nfig.add_trace(go.Histogram(x=train['relevent_experience'][train[\"enrolled_university\"] == 'Part time course'], name=\"Part Time\", visible=False))\nfig.add_trace(go.Histogram(x=train['relevent_experience'][train[\"enrolled_university\"] == 'Full time course'], name=\"Full Time\", visible=False))\n\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"dropdown\",\n            direction=\"left\",\n            active=0,\n            x=1,\n            y=1.2,\n            buttons=list([\n                    dict(label=\"Enrollment\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, True, False, False, False]},\n                           {\"title\": \"Enrollment by Relevant Experience\"}]),\n                dict(label=\"Relevant Experience\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, False, True, True, True]},\n                           {\"title\": \"Relevant experience by Enrollment\"}])\n            ]),\n        ),\n    ])\n\n\nfig.update_layout(\n    title_text=\"Enrollment and Experience\",\n)\nfig.show()","dd254483":"fig = go.Figure()\n\n# enrollment by relevant experience\nfig.add_trace(go.Histogram(x=train['enrolled_university'][(train[\"relevent_experience\"] == 'No relevent experience') & (train['target'] == 1.0)], name=\"No Experience\"))\nfig.add_trace(go.Histogram(x=train['enrolled_university'][(train[\"relevent_experience\"] == 'Has relevent experience') & (train['target'] == 1.0)], name=\"Has Experience\"))\n\n# relevant experience by enrollment\nfig.add_trace(go.Histogram(x=train['enrolled_university'][(train[\"relevent_experience\"] == 'No relevent experience') & (train['target'] == 0.0)], name=\"No Experience\", visible=False))\nfig.add_trace(go.Histogram(x=train['enrolled_university'][(train[\"relevent_experience\"] == 'Has relevent experience') & (train['target'] == 0.0)], name=\"Has Experience\", visible=False))\n\n\n\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"dropdown\",\n            direction=\"left\",\n            active=0,\n            x=1,\n            y=1.2,\n            buttons=list([\n                    dict(label=\"Job Changing\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, True, False, False]},\n                           {\"title\": \"Enrollment and Experience with Job Changing\"}]),\n                dict(label=\"No Job Changing\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, False, True, True]},\n                           {\"title\": \"Enrollment and Experience with no Job Changing\"}])\n            ]),\n        ),\n    ])\n\n\nfig.update_layout(\n    title_text=\"Enrollment and Experience with target\",\n)\nfig.show()","098df087":"fig = go.Figure()\nfig.add_trace(go.Pie(values=train['major_discipline'].value_counts(), labels=list(train['major_discipline'].unique()), pull=[0, 0, 0, 0, 0, 0.05]))\n\nfig.update_layout(\n    title_text=\"Major Dicipline owned by candidates\",\n)\nfig.show()","4d4f110c":"fig = go.Figure()\n\n# major_discipline by gender\nfig.add_trace(go.Histogram(x=train['major_discipline'][train[\"gender\"] == \"Male\"], name=\"Male\"))\nfig.add_trace(go.Histogram(x=train['major_discipline'][train[\"gender\"] == \"Female\"], name=\"Female\"))\nfig.add_trace(go.Histogram(x=train['major_discipline'][train[\"gender\"] == \"Other\"], name=\"Other\"))\n\n# gender by major_discipline\nfig.add_trace(go.Histogram(x=train['gender'][train[\"major_discipline\"] == \"STEM\"], name=\"STEM\", visible=False))\nfig.add_trace(go.Histogram(x=train['gender'][train[\"major_discipline\"] == \"Humanities\"], name=\"Humanities\", visible=False))\nfig.add_trace(go.Histogram(x=train['gender'][train[\"major_discipline\"] == \"Business Degree\"], name=\"Business Degree\", visible=False))\nfig.add_trace(go.Histogram(x=train['gender'][train[\"major_discipline\"] == \"Other\"], name=\"Other\", visible=False))\nfig.add_trace(go.Histogram(x=train['gender'][train[\"major_discipline\"] == \"No Major\"], name=\"No Major\", visible=False))\nfig.add_trace(go.Histogram(x=train['gender'][train[\"major_discipline\"] == \"Arts\"], name=\"Arts\", visible=False))\n\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"dropdown\",\n            direction=\"left\",\n            active=0,\n            x=1,\n            y=1.2,\n            buttons=list([\n                    dict(label=\"Major Discipline\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, True, True, False, False, False, False, False, False]},\n                           {\"title\": \"Major Discipline by Gender\"}]),\n                dict(label=\"Gender\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, False, False, True, True, True, True, True, True]},\n                           {\"title\": \"Gender by Major Discipline\"}])\n            ]),\n        ),\n    ])\n\n\nfig.update_layout(\n    title_text=\"Major Discipline and Gender\",\n)\nfig.show()","72c96888":"fig = go.Figure()\n\n# major_discipline by stage\nfig.add_trace(go.Histogram(x=train['major_discipline'][train[\"stage\"] == \"Novice\"], name=\"Novice\"))\nfig.add_trace(go.Histogram(x=train['major_discipline'][train[\"stage\"] == \"Beginner\"], name=\"Beginner\"))\nfig.add_trace(go.Histogram(x=train['major_discipline'][train[\"stage\"] == \"Competent\"], name=\"Competent\"))\nfig.add_trace(go.Histogram(x=train['major_discipline'][train[\"stage\"] == \"Proficient\"], name=\"Proficient\"))\nfig.add_trace(go.Histogram(x=train['major_discipline'][train[\"stage\"] == \"Expert\"], name=\"Expert\"))\n\n# stage by major_discipline\nfig.add_trace(go.Histogram(x=train['stage'][train[\"major_discipline\"] == \"STEM\"], name=\"STEM\", visible=False))\nfig.add_trace(go.Histogram(x=train['stage'][train[\"major_discipline\"] == \"Humanities\"], name=\"Humanities\", visible=False))\nfig.add_trace(go.Histogram(x=train['stage'][train[\"major_discipline\"] == \"Business Degree\"], name=\"Business Degree\", visible=False))\nfig.add_trace(go.Histogram(x=train['stage'][train[\"major_discipline\"] == \"Other\"], name=\"Other\", visible=False))\nfig.add_trace(go.Histogram(x=train['stage'][train[\"major_discipline\"] == \"No Major\"], name=\"No Major\", visible=False))\nfig.add_trace(go.Histogram(x=train['stage'][train[\"major_discipline\"] == \"Arts\"], name=\"Arts\", visible=False))\n\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"dropdown\",\n            direction=\"left\",\n            active=0,\n            x=1,\n            y=1.2,\n            buttons=list([\n                    dict(label=\"Major Discipline\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, True, True, True, True, False, False, False, False, False, False]},\n                           {\"title\": \"Major Discipline by Stage\"}]),\n                dict(label=\"Stage\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, False, False, False, False, True, True, True, True, True, True]},\n                           {\"title\": \"Stage by Major Discipline\"}])\n            ]),\n        ),\n    ])\n\n\nfig.update_layout(\n    title_text=\"Major Discipline and Stage\",\n)\nfig.show()","735fe442":"fig = go.Figure()\n\n# major_discipline by stage\nfig.add_trace(go.Histogram(x=train['major_discipline'][(train[\"stage\"] == \"Novice\") & (train[\"target\"] == 1.0)], name=\"Novice\"))\nfig.add_trace(go.Histogram(x=train['major_discipline'][(train[\"stage\"] == \"Beginner\") & (train[\"target\"] == 1.0)], name=\"Beginner\"))\nfig.add_trace(go.Histogram(x=train['major_discipline'][(train[\"stage\"] == \"Competent\") & (train[\"target\"] == 1.0)], name=\"Competent\"))\nfig.add_trace(go.Histogram(x=train['major_discipline'][(train[\"stage\"] == \"Proficient\") & (train[\"target\"] == 1.0)], name=\"Proficient\"))\nfig.add_trace(go.Histogram(x=train['major_discipline'][(train[\"stage\"] == \"Expert\") & (train[\"target\"] == 1.0)], name=\"Expert\"))\n\n# stage by major_discipline\nfig.add_trace(go.Histogram(x=train['major_discipline'][(train[\"stage\"] == \"Novice\") & (train[\"target\"] == 0.0)], name=\"Novice\"))\nfig.add_trace(go.Histogram(x=train['major_discipline'][(train[\"stage\"] == \"Beginner\") & (train[\"target\"] == 0.0)], name=\"Beginner\"))\nfig.add_trace(go.Histogram(x=train['major_discipline'][(train[\"stage\"] == \"Competent\") & (train[\"target\"] == 0.0)], name=\"Competent\"))\nfig.add_trace(go.Histogram(x=train['major_discipline'][(train[\"stage\"] == \"Proficient\") & (train[\"target\"] == 0.0)], name=\"Proficient\"))\nfig.add_trace(go.Histogram(x=train['major_discipline'][(train[\"stage\"] == \"Expert\") & (train[\"target\"] == 0.0)], name=\"Expert\"))\n\n\n\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"dropdown\",\n            direction=\"left\",\n            active=0,\n            x=1,\n            y=1.2,\n            buttons=list([\n                    dict(label=\"Job Changing\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, True, True, True, True, False, False, False, False, False]},\n                           {\"title\": \"Major Discipline and Stage with Job Changing\"}]),\n                dict(label=\"No Job Changing\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, False, False, False, False, True, True, True, True, True]},\n                           {\"title\": \"Major Discipline and Stage with no Job Changing\"}])\n            ]),\n        ),\n    ])\n\n\nfig.update_layout(\n    title_text=\"Major Discipline and Stage with target\",\n)\nfig.show()","99c63266":"fig = go.Figure()\nfig.add_trace(go.Pie(values=train['level'].value_counts(), labels=list(train['level'].unique()), pull=[0, 0, 0, 0.05]))\n\nfig.update_layout(\n    title_text=\"City Development Index\",\n)\nfig.show()","1067d57e":"fig = go.Figure()\n\n# levle by target\nfig.add_trace(go.Histogram(x=train['level'][train[\"target\"] == 1.0], name=\"Changing Job\"))\nfig.add_trace(go.Histogram(x=train['level'][train[\"target\"] == 0.0], name=\"Not Changing Job\"))\n\n# target by level\nfig.add_trace(go.Histogram(x=train['target'][train[\"level\"] == 'Low'], name=\"Low\", visible=False))\nfig.add_trace(go.Histogram(x=train['target'][train[\"level\"] == 'Medium'], name=\"Medium\", visible=False))\nfig.add_trace(go.Histogram(x=train['target'][train[\"level\"] == 'High'], name=\"High\", visible=False))\nfig.add_trace(go.Histogram(x=train['target'][train[\"level\"] == 'Very High'], name=\"Very High\", visible=False))\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"dropdown\",\n            direction=\"left\",\n            active=0,\n            x=1,\n            y=1.2,\n            buttons=list([\n                    dict(label=\"Level\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, True, True, False, False, False]},\n                           {\"title\": \"Level by Target\"}]),\n                dict(label=\"Target\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, False, False, True, True, True]},\n                           {\"title\": \"Target by Level\"}])\n            ]),\n        ),\n    ])\n\nfig.update_layout(\n    title_text=\"Level and Target\",\n)\nfig.show()","e1ab26f0":"fig = go.Figure()\n\n# level by enrollment\nfig.add_trace(go.Histogram(x=train['level'][train[\"enrolled_university\"] == 'no_enrollment'], name=\"No Enrollment\"))\nfig.add_trace(go.Histogram(x=train['level'][train[\"enrolled_university\"] == 'Part time course'], name=\"Part Time\"))\nfig.add_trace(go.Histogram(x=train['level'][train[\"enrolled_university\"] == 'Full time course'], name=\"Full Time\"))\n\n# enrollment by level\nfig.add_trace(go.Histogram(x=train['enrolled_university'][train[\"level\"] == 'Low'], name=\"Low\", visible=False))\nfig.add_trace(go.Histogram(x=train['enrolled_university'][train[\"level\"] == 'Medium'], name=\"Medium\", visible=False))\nfig.add_trace(go.Histogram(x=train['enrolled_university'][train[\"level\"] == 'High'], name=\"High\", visible=False))\nfig.add_trace(go.Histogram(x=train['enrolled_university'][train[\"level\"] == 'Very High'], name=\"Very High\", visible=False))\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type=\"dropdown\",\n            direction=\"left\",\n            active=0,\n            x=1,\n            y=1.2,\n            buttons=list([\n                    dict(label=\"Level\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, True, True, False, False, False, False]},\n                           {\"title\": \"Level by Enrollment\"}]),\n                dict(label=\"Enrollment\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, False, False, True, True, True, True]},\n                           {\"title\": \"Enrollment by Level\"}])\n            ]),\n        ),\n    ])\n\nfig.update_layout(\n    title_text=\"Level and Enrollment\",\n)\nfig.show()","3db04b4e":"train","836031cc":"data = train.copy()","724ffd7f":"data = data.drop(columns=['enrollee_id', 'city_development_index', 'experience'])","af43c3c8":"data['gender']=data['gender'].astype('category').cat.codes\ndata['relevent_experience']=data['relevent_experience'].astype('category').cat.codes\ndata['enrolled_university']=data['enrolled_university'].astype('category').cat.codes\ndata['education_level']=data['education_level'].astype('category').cat.codes\ndata['major_discipline']=data['major_discipline'].astype('category').cat.codes\ndata['company_type']=data['company_type'].astype('category').cat.codes\ndata['stage']=data['stage'].astype('category').cat.codes\ndata['level']=data['level'].astype('category').cat.codes\ndata['company_size']=data['company_size'].astype('category').cat.codes\ndata['last_new_job']=data['last_new_job'].astype('category').cat.codes\ndata['city']=data['city'].astype('category').cat.codes","a0577e81":"X = data.drop('target', axis=1)\ny = data['target']\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.33, random_state=2021)","85fedab8":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import confusion_matrix, classification_report, accuracy_score, recall_score, precision_score, roc_auc_score\n\npipeline = make_pipeline(StandardScaler(), SVC(kernel='sigmoid'))\npipeline.fit(X_train, y_train)\nsvc_prediction = pipeline.predict(X_val)\ncm_svc = confusion_matrix(y_val, svc_prediction)\nsvc_df = pd.DataFrame(data=[accuracy_score(y_val, svc_prediction), recall_score(y_val, svc_prediction),\n                            precision_score(y_val, svc_prediction), roc_auc_score(y_val, svc_prediction)], \n                      columns=['SVC Score'],\n                      index=[\"Accuracy\", \"Recall\", \"Precision\", \"ROC AUC Score\"])","e9a2c423":"svc_df","1e4c39ff":"from sklearn.ensemble import RandomForestClassifier\n\n# Random Forest\nrfc = RandomForestClassifier(n_estimators=600)\nrfc.fit(X_train,y_train)\nrfc_prediction = rfc.predict(X_val)\ncm_rfc = confusion_matrix(y_val, rfc_prediction)\nrfc_df = pd.DataFrame(data=[accuracy_score(y_val, rfc_prediction), recall_score(y_val, rfc_prediction),\n                   precision_score(y_val, rfc_prediction), roc_auc_score(y_val, rfc_prediction)], \n             columns=['Random Forest Score'],\n             index=[\"Accuracy\", \"Recall\", \"Precision\", \"ROC AUC Score\"])","722f3fad":"from sklearn.model_selection import GridSearchCV\n\nparam_grid = { \n   'n_estimators': [ 300,500,800, 1000],\n   'max_features': ['auto', 'sqrt'],\n   'max_depth' : [6,7,8,9,10],\n   'criterion' :['gini', 'entropy']\n}\n\nCV_rfc = GridSearchCV(estimator=rfc, param_grid=param_grid, cv= 5)\nCV_rfc.fit(X_train,y_train)\nCV_rfc.best_params_","d8c590f5":"# Tuned Random Forest\nrfc1=RandomForestClassifier(random_state=0, n_estimators= 300, criterion = 'entropy',max_features = 'sqrt',max_depth = 8)\nrfc1.fit(X_train,y_train)\nprediction_rf1= rfc1.predict(X_val)\ncm_trfc = confusion_matrix(y_val, prediction_rf1)\ntrfc_df = pd.DataFrame(data=[accuracy_score(y_val, prediction_rf1), recall_score(y_val, prediction_rf1),\n                   precision_score(y_val, prediction_rf1), roc_auc_score(y_val, prediction_rf1)], \n             columns=['Tuned Random Forest Score'],\n             index=[\"Accuracy\", \"Recall\", \"Precision\", \"ROC AUC Score\"])","718246ca":"trfc_df","4a0c974c":"cm_trfc","f5870a6e":"On the other hand, `Very High` CDI candidates usually do `not have enrollment`","4e1d3ad4":"Overall, the number of male candidates are higher, covering almost `90%` of the pire chart","cf3b2f1c":"I could conclude that `male` gender prefer to change their jobs at any level of graduation. However, there are a lot of `unidentified` gender who prefer staying to changing their jobs. Moreover, candidates who do not want to `change their job` are higher otherwise.","03b75dab":"# City Development Index","35f8b894":"View the `city_development_index` heading for further inspection","ce444595":"At here I try to transform the data eligible for me to understand. Basically, for `zero to five` is a **Novice**, `six to ten` is a **Beginner**, `eleven to fifteen` is a **Competent**, `sixteen to twenty` is a **Proficient**, `twenty above` is an **Expert**. Furthermore, I created another column, called `stage` to store them.","1700bf5e":".. That is so obvious, isn't it. The glaring effect from a mass number of `STEM`","90f88d3d":"Anyway, I have been thinking that measuring `stage` and `Major discipline` would be interesting. Well though, the result is the same as I expected, there are a lot of `beginners` who pursue in `STEM` major, followed by `humanities`, `business`, `other`, `arts`, and `no` major which is taken by mostly `novice`, ","397072e3":"After seeing the correlation `heatmap` matrix, we shall dive in step-by-step thoroughly","7989a480":"Well, previously we have compared `gender` and `education level`. Little do you know, `gender` and `major diciplice` is positively correlated. Male genders, moreover, have always been the highest since then, most of whom are mostly taking the `STEM` major. Overall, it does not surprise me that `no major` women are very few compare to `male`, beside `STEM` and `Business Subject`, `female` tend to pursue `art` major. ","07139e9e":"Looking from the previous heatmap, it is shown that `education_level` and `gender` category are inversely correlated. As we could see from the Histogram below, there will be **less** candidate for **higher** education","b4414238":"# Major Discipline","a4a66a8c":"# University Enrollment","b52bdee2":"There is no balance amongst the value, almost `85%` no enrollment studies dominates the pie chart","db3ba508":"`Experience` and `enrolle_id` columns are not used for the heatmap as it has been replaced with the `stage` columns","5813a928":"# Conclusion\n\n1. The data is not balance, as they are not distributed equally\n2. Very High CDI ==> No Enrollment\n3. No Enrollment ==> High Relevant Experience\n4. Beginners ==> STEM Majors\n\n...","5f0ee45a":"The histogram details that CDI at range `0.700` to `0.799` (High) is `not going to change their job`, but CDI at the range between either `0.550` - `0.699` (Medium) or `0.8` onwards (Very High) is `likely to change their job`","251bdd2f":"Define train and test data","df7e9b9b":"Import libraries","266f8743":"Well now we shall focus to the target, according to the heatmap, `city_development_index` (CDI) dovetailed positively with the `target`. According to wikipedia, CDI lower than `0.549` is considered `low`, CDI with the range between `0.550` and `0.699` is `medium`, whereas CDI from `0.700` - `0.799` is at the `High` level, while CDI larger than `0.800` is coined with `very high`.","9f97a47e":"As we could see vividly, `experienced` candidates have the most choice at either staying or changing jobs. On the other hand, there is a big number on candidates who would `not change their jobs` compared to the candidates who would `change their jobs`.","b67b4e07":"Extract and Feature the data","351f34b7":"Well, I need to take a double look, candidates who `do not have any enrollment` have the highest rate of relevant experience \ud83e\udd14.","5fe2082c":"# Gender","8ca92bc9":"Trying to switch `experience` into an `int` type, before being processed","b3f2df1c":"> NOTE : You could toggle down one or some  `major dicipline` by pressing the legend on the top right.","0af185e6":"Rather than creating a `dictionary` using categorical codes `cat.codes` provided by pandas, by and far, is the quickest way to label category into an integer","6424b3b9":"# Part 2, Predicting Model"}}