{"cell_type":{"dbaab8aa":"code","493be1ab":"code","6db9fd68":"code","d6fdc379":"code","98e9fb99":"code","bb6aa96c":"code","322b07b9":"code","5bf8e063":"code","e3366ab1":"code","594c06ff":"code","ca76defa":"code","08e430f9":"code","50cd5a03":"code","c7033800":"code","225173aa":"code","2e24fa7e":"markdown","06b44d26":"markdown","8c0c3755":"markdown","c533b8c8":"markdown","72675aa0":"markdown","74b6e19d":"markdown","5b74bfb1":"markdown","c3baa1a5":"markdown"},"source":{"dbaab8aa":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","493be1ab":"df = pd.read_csv(\"\/kaggle\/input\/corona-virus-report\/covid_19_clean_complete.csv\")\ndf.head()","6db9fd68":"df['Country\/Region'] = df['Country\/Region'].replace({'US': 'United States',\n                                                     'Taiwan*':'Taiwan'})","d6fdc379":"!pip install countryinfo","98e9fb99":"from countryinfo import CountryInfo\n\nCountry_Populations = {}\nfor i in sorted(list(df['Country\/Region'].unique())):\n    try:\n        Country_Populations[i] = CountryInfo(i).population()\n    except (KeyError):\n        Country_Populations[i] = np.nan\n        \ndf['Populations'] = df['Country\/Region'].map(Country_Populations)\ndf = df[~df['Populations'].isna()] # remove countries we couldn't get the population for","bb6aa96c":"df = df[df['Deaths'] >= 10]","322b07b9":"df = df[df['Province\/State'].isna()]\ndf['Date'] = df['Date'].astype('datetime64[ns]')","5bf8e063":"top_deaths = list((df[df['Populations'] >= 1000000].groupby(['Country\/Region']).Deaths.max()\\\n \/df[df['Populations'] >= 1000000].groupby(['Country\/Region']).Populations.max()).sort_values().index[-10:])","e3366ab1":"df.sort_values(['Country\/Region','Date'], inplace=True)\ndf['Daily_Deaths'] = df['Deaths'].diff()\n\nmask = df['Country\/Region'] != df['Country\/Region'].shift(1)\ndf['Daily_Deaths'][mask] = np.nan\ndf.head()","594c06ff":"df['Deaths_7_Days_Rolling'] = df.groupby(['Country\/Region'])['Daily_Deaths'].rolling(7).mean().values","ca76defa":"df['%_Deaths_per_Pop'] = df['Deaths_7_Days_Rolling']\/df['Populations']","08e430f9":"df['Rank'] = df.groupby('Country\/Region').Date.rank()\ndf.head()","50cd5a03":"filtered_df = df[(df[\"Country\/Region\"].isin(top_deaths)) & (df['Populations'] >= 1000000)]","c7033800":"filtered_df = filtered_df.sort_values(by='Date')\nfiltered_df['Days Since 10 Deaths'] =filtered_df['Rank']","225173aa":"sns.set(style=\"white\", rc={\"axes.facecolor\": (0, 0, 0, 0)})\n\n# Initialize the FacetGrid object\npal = sns.cubehelix_palette(10, rot=-.25, light=.7)\ng = sns.FacetGrid(filtered_df, row=\"Country\/Region\", hue=\"Country\/Region\", aspect=11, height=1, palette = pal)\n\n# Draw the densities in a few steps\ng.map(sns.lineplot, 'Days Since 10 Deaths', \"%_Deaths_per_Pop\", clip_on=False, color=\"w\", lw=2,estimator=None)\ng.map(plt.axhline, y=0, lw=2, clip_on=False)\ng.map(plt.fill_between, 'Days Since 10 Deaths','%_Deaths_per_Pop')\n\n# Define and use a simple function to label the plot in axes coordinates\ndef label(x, color, label):\n    ax = plt.gca()\n    ax.text(0, .2, label, fontweight=\"bold\", color=color,\n            ha=\"left\", va=\"center\", transform=ax.transAxes)\n    \ng.map(label, 'Days Since 10 Deaths')\n\n# Set the subplots to overlap\ng.fig.subplots_adjust(hspace=-0.4)\n\n# Remove axes details that don't play well with overlap\ng.set_titles(\"\")\ng.set(yticks=[])\ng.despine(bottom=True, left=True)","2e24fa7e":"Rank the days since 10 deaths for each country so we can plot them on the same x-axis","06b44d26":"Add Population to DataFrame and remove countries we couldn't find a number for","8c0c3755":"Remove Province\/Sates with Nan values. This leaves only the rows which list the deaths for the entire country.","c533b8c8":"Calculate the fraction of rolling deaths by the population.","72675aa0":"Undo cumulative figure for deaths to get daily death rate.","74b6e19d":"Most charts I've come across comparing countries start when each country hits ten cases. This number seems reasonable so we'll filter out all deaths below 10 while the df has deaths as cumulative,","5b74bfb1":"We just want to plot the top ten countries that have the highest number of deaths per population, and only include countries with over 1 million inhabitants.","c3baa1a5":"Change the number of deaths per day to a rolling 7 day average. This will help with smoothing out the graph."}}