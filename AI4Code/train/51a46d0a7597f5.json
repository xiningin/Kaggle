{"cell_type":{"fab44428":"code","a84d1101":"code","72145406":"code","53e2084d":"code","ac4d0f66":"code","8dc5ccae":"code","6dd7d30f":"code","bd15c072":"code","fb7eb716":"code","da38e5a7":"code","45f1ef24":"code","fa5a6b14":"code","9cb7bf80":"code","5fcabefb":"code","1f3300d9":"code","b73bfa8f":"code","acd54f66":"code","3534c9e8":"code","62320db5":"markdown","8c4479f0":"markdown","b2c43cb7":"markdown","9aa8c896":"markdown","70e37c84":"markdown","c9098012":"markdown","4e3e5a3d":"markdown","ea1f902f":"markdown","3f3b9f85":"markdown","970a70eb":"markdown","ee06da89":"markdown","864f769d":"markdown","d65d212e":"markdown","87f1754c":"markdown"},"source":{"fab44428":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import r2_score\nfrom sklearn.feature_selection import mutual_info_regression\nfrom sklearn.model_selection import GridSearchCV\nimport gc\n# Any results you write to the current directory are saved as output.","a84d1101":"#Welcome to FifaLand\ndf = pd.read_csv(\"..\/input\/data.csv\")\ndf.head(5)","72145406":"#list of columns in Dataset\ndf.columns","53e2084d":"#Data Cleaning & Preparation \n#dropping off the unnecessary columns\ndfa = df.drop(['Unnamed: 0','Flag','Photo','Club Logo','Loaned From'],axis=1)\n#formatting the fields\ndfa['Value_kEuro'] = dfa['Value'].str.replace('\u20ac','').str.replace('M','000').str.replace('K','')\ndfa['Wage_kEuro'] = dfa['Wage'].str.replace('\u20ac','').str.replace('K','')\ndfa['ReleaseClaus_kEuro'] = dfa['Release Clause'].str.replace('\u20ac','').str.replace('M','000').str.replace('K','')\ndfa.drop(['Value','Wage','Release Clause'],axis=1,inplace=True)\n#changing datatypes\ndfa['Value_kEuro'] = pd.to_numeric(dfa['Value_kEuro'])\ndfa['Wage_kEuro'] = pd.to_numeric(dfa['Wage_kEuro'])\ndfa['ReleaseClaus_kEuro'] = pd.to_numeric(dfa['ReleaseClaus_kEuro'])\n#checking for nulls\ndfa[['Value_kEuro','Wage_kEuro']].isnull().sum()","ac4d0f66":"y= dfa['Value_kEuro'].values\nx = dfa['Wage_kEuro'].values\n\nfig = plt.figure(figsize=(12,8))\nplt.title(\"How does Market Value relate to Wages (in thousand \u20ac)?\")\nplt.scatter(x,y)\n#sns.lmplot(x='Wage_kEuro',y='Value_kEuro',order = order, data=dfa)\n#sns.regplot(x='Wage_kEuro',y='Value_kEuro',data=dfa)\nplt.xlabel('Wages')\nplt.ylabel('Market Value')\nplt.show()","8dc5ccae":"footCount = dfa.groupby('Preferred Foot')['ID'].count()\nfootCount = footCount\/footCount.sum()*100\n\nplt.bar(x=['Left','Right'], height=footCount.values)\nplt.title(\"Preferred Foot (%)\");","6dd7d30f":"#Get the required details from the dataframe\ndfo = dfa[['Position','Preferred Foot']].groupby('Position')['Preferred Foot'].value_counts().unstack()\n\n#Top 5 Left foot \nprint(\"Top 5 Left Foot Positions:\")\nprint(dfo['Left'].sort_values(ascending = False).head(5))\n\n#Top 5 Right foot \nprint(\"\\nTop 5 Right Foot Positions:\")\nprint(dfo['Right'].sort_values(ascending = False).head(5))\n\n#plotting\ndfo['Left']= dfo['Left']\/dfo['Left'].sum()\ndfo['Right']= dfo['Right']\/dfo['Right'].sum()\nfig, ax = plt.subplots(figsize=(15,7));\ndfo['Right'].plot(ax=ax);\ndfo['Left'].plot(ax=ax);\nplt.legend(['Right','Left'])\nplt.title(\"Position vs Foot\");","bd15c072":"#following CRISP DM methodology to answer this question \n#features chosen\ndfv = dfa[['Preferred Foot','Position','Crossing', 'Finishing', 'HeadingAccuracy',\n       'ShortPassing', 'Volleys', 'Dribbling', 'Curve', 'FKAccuracy',\n       'LongPassing', 'BallControl', 'Acceleration', 'SprintSpeed', 'Agility',\n       'Reactions', 'Balance', 'ShotPower', 'Jumping', 'Stamina', 'Strength',\n       'LongShots', 'Aggression', 'Interceptions', 'Positioning', 'Vision',\n       'Penalties', 'Composure', 'Marking', 'StandingTackle', 'SlidingTackle',\n       'GKDiving', 'GKHandling', 'GKKicking', 'GKPositioning', 'GKReflexes','Value_kEuro']]\n\n#Several Attributes, Positioning and Prefered Foot are chosen as features to predict the Market Value\n","fb7eb716":"# Get one hot encoding of column - position and preferred foot\none_hot = pd.get_dummies(dfv[['Position','Preferred Foot']])\none_hot\n\n# Drop columns as it is now encoded\ndfv = dfv.drop(columns = ['Position','Preferred Foot'],axis = 1)\n\n# Join the encoded df\ndfv = dfv.join(one_hot)\ndfv.head(5)","da38e5a7":"(dfv.isnull().sum()\/dfv.count())*100","45f1ef24":"dfv.dropna(inplace= True)\ndfv.isnull().sum() #no null left","fa5a6b14":"#To predict the \"value\" based on chosen attributes, defining y and x\ny = dfv['Value_kEuro']\nX = dfv.drop(['Value_kEuro'],axis=1)\n\n#train test split \nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42) ","9cb7bf80":"# Create the parameter grid based on the results of random search \ngc.collect()\n\ndef modeling_gridsearch(base_estimator, param_grid):\n    \"\"\"\n        Purpose - to Grid Search to find best parameters before prediction \n        \n        Input:  Parameters Grid and Base Estimator \n        \n        Output: Model & Best Parameters \n    \"\"\"    \n    \n    # Instantiate the grid search model\n    grid_search = GridSearchCV(estimator = base_estimator, param_grid = param_grid, \n                              cv = 3, n_jobs = 1, verbose = 2,scoring='neg_mean_squared_error')\n\n\n    # Fit the grid search to the data\n    grid_search.fit(X_train,y_train)\n    print(\"Best Parameters set: \",grid_search.best_params_)\n    \n    return grid_search ","5fcabefb":"#Random Forest Ensemble Model is chosen for Modeling \n\nrf = RandomForestRegressor() #instantiating base estimator & parameters grid for gridsearch\nparam_grid = {\n        'max_depth': [150,180,200],\n        'max_features': [6,7,8,9],\n        'min_samples_leaf': [2,3, 4, 5],\n        'min_samples_split': [5,6,8, 10],\n        'n_estimators': [100, 200, 300]\n    }\n\nmodel = modeling_gridsearch(rf,param_grid)\n\n#prediction\ny_pred = model.predict(X_test)\n#Evaluation using RSquared \nprint(\"Rsquared: \",r2_score(y_test, y_pred))","1f3300d9":"gc.collect()\n\n#Mutual info regressor to find the best set of features that effect the Market value of a Player. \nmutual_infos=mutual_info_regression(X.values,y.values ) \n\nfeature_importances = {}\nfor i,f in enumerate(X.columns):\n    feature_importances[f] = mutual_infos[i]    \n    \nsorted(feature_importances.items(), key=lambda kv: kv[1], reverse=True)","b73bfa8f":"plt.figure(figsize=(16,8))\nsns.countplot(x = 'Position',\n              data = dfa,\n              order = dfa['Position'].value_counts().index,palette=sns.color_palette(\"Blues_d\",n_colors=27));","acd54f66":"dfa[['Wage_kEuro','Club']].groupby(['Club'])['Wage_kEuro'].median().sort_values(ascending=False).head(11)","3534c9e8":"dfa[['ReleaseClaus_kEuro','Name']].sort_values(by='ReleaseClaus_kEuro',ascending=False)['Name'].head(11).reset_index(drop=True)","62320db5":"**Libraries Import**","8c4479f0":"<br\/>\n<A name=\"section1.2\">2. What is the preferred Foot among the players and how does it affect their positioning?<\/A>","b2c43cb7":"One hot encoding is chosen above, because we want to retain the value of each column and all values are to be treated equally, it seems appropriate over other methods like 'label encoding' which gives different ranking to values","9aa8c896":"Reactions, Ballcontrol, Composure, Dribbling, & ShortPassing -> are top 5 attributes that drive the market Value of a Player","70e37c84":"<br\/>\n<A name=\"section1.5\">5. Players with largest release clause (Top 11)?<\/A>","c9098012":"<br\/>\n<A name=\"section1.1\">1. Is there a linear relation between Market Value and Wages of Players?<\/A>","4e3e5a3d":"**Data Look & Feel**","ea1f902f":"**Overview and Motivation**\n\nThis Project is an exploration of Fifa19 Player Dataset as part of the Udacity's Data Science Nanodegree Introduction to DataScience Blog post. Corresponding BlogPost for project can be found here -> https:\/\/towardsdatascience.com\/exploring-fifa-277f469c8cdc \n\nExploration of FIFA player 19 dataset gave me an opportunity to merge my interest of DataScience and Soccer. When I saw the dataset, I wanted to ask myself several questions almost immediately and hence started the exploration to find the answer to such questions. This Project helped me satiate my Curiosity.\n\n\n\n**<font size=5 color=\"aa7700\">Welcome to FIFA EDA<\/font>**<br\/><br\/>\n<span style=\"color:#D4AF37\">\n**<font size=3>Questions Asked<\/font>**\n<br\/>\n\n<A href=\"#section1\"><font color='blue' size=4><\/font><\/A>\n<A href=\"#section1.1\">1. Is there a relationship between Market Value and Wages of Players?<\/A><br\/>\n<A href=\"#section1.2\">2. What is the preferred Foot among the players and how does it affect their positioning? <\/A><br\/>\n<A href=\"#section1.3\">3. Can we predict the Value of a player based on its attributes (like accuracy, shot power, reactions, dribbling etc)?<\/A><br\/>\n<A href=\"#section1.4\">4. Clubs with the highest median wages (Top 11)?<\/A><br\/>\n<A href=\"#section1.5\">5. Players with largest release clause (Top 11)?<\/A><br\/>","3f3b9f85":"Usually as the Market Value increase Wages increases, but we also have higher wages and close to zero Market Value","970a70eb":"Only 0.26% values are Null, lets go ahead and drop them.","ee06da89":"<br\/>\n<A name=\"section1.3\">3. Can we predict the Value of a player based on its attributes (like accuracy, shot power, reactions, dribbling etc)?<\/A>","864f769d":"**Data Cleaning and Prep**","d65d212e":"Striker, GoalKeeper & Center Back are top three Positions in terms of number of Players","87f1754c":"<br\/>\n<A name=\"section1.4\">4. Clubs with the highest median wages (Top 11)?<\/A>"}}