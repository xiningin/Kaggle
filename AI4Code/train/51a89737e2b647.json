{"cell_type":{"3f8ace87":"code","fd3b62d5":"code","896d0d10":"code","8576faa0":"code","51aeb78b":"code","fdc562ea":"code","5e311639":"code","8cc587bf":"code","62590193":"code","db42e9d2":"code","f816bea8":"code","1d074f0b":"code","c62a6098":"code","e6df4742":"code","35dc0f77":"code","47283e27":"code","bba10814":"code","327a9a71":"code","153e8742":"code","f5d1e764":"code","173cfa65":"code","5a7e3e06":"code","018ea0cb":"code","15656763":"code","d4d7a61e":"code","09871211":"markdown","cf5cd7b9":"markdown","daf30c26":"markdown","541e79e8":"markdown","82c3cd99":"markdown","8537db10":"markdown","956689eb":"markdown","8def49eb":"markdown","ba3f6ccb":"markdown","bffcd4a4":"markdown","593e0772":"markdown","718c73cb":"markdown","97db4c53":"markdown","efad3fdc":"markdown","f79446bd":"markdown","5c4e84d0":"markdown","0e380e9b":"markdown"},"source":{"3f8ace87":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\nimport pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt \nimport seaborn as sns \nimport matplotlib as mpl\nfrom matplotlib.colors import LinearSegmentedColormap\nfrom IPython.core.display import display, HTML\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fd3b62d5":"colors_blue = [\"#132C33\", \"#264D58\", '#17869E', '#51C4D3', '#B4DBE9']\ncolors_dark = [\"#1F1F1F\", \"#313131\", '#636363', '#AEAEAE', '#DADADA']\ncolors_red = [\"#331313\", \"#582626\", '#9E1717', '#D35151', '#E9B4B4']\ncolors_mix = [\"#17869E\", '#264D58', '#179E66', '#D35151', '#E9DAB4', '#E9B4B4', '#D3B651', '#6351D3']\ncolors_div = [\"#132C33\", '#17869E', '#DADADA', '#D35151', '#331313']\n\nsns.palplot(colors_blue)\nsns.palplot(colors_dark)\nsns.palplot(colors_red)\nsns.palplot(colors_mix)\nsns.palplot(colors_div)","896d0d10":"def NonLinCdict(steps, hexcol_array):\n    cdict = {'red': (), 'green': (), 'blue': ()}\n    for s, hexcol in zip(steps, hexcol_array):\n        rgb =mpl.colors.hex2color(hexcol)\n        cdict['red'] = cdict['red'] + ((s, rgb[0], rgb[0]),)\n        cdict['green'] = cdict['green'] + ((s, rgb[1], rgb[1]),)\n        cdict['blue'] = cdict['blue'] + ((s, rgb[2], rgb[2]),)\n    return cdict\n\nth = [0, 0.2, 0.5, 0.8, 1]\ncdict = NonLinCdict(th, colors_blue)\ncdiv = NonLinCdict(th, colors_div)\n\ncm = LinearSegmentedColormap('blue', cdict)\ncm_div = LinearSegmentedColormap('div', cdiv)","8576faa0":"mpl.rcParams['axes.spines.right'] = False\nmpl.rcParams['axes.spines.top'] = False\nmpl.rcParams['axes.spines.left'] = False\nmpl.rcParams['axes.titlecolor'] = colors_dark[0]\nmpl.rcParams['axes.labelcolor'] = colors_dark[0]\n\n# tick\nmpl.rcParams['xtick.color'] = colors_dark[0]\nmpl.rcParams['ytick.color'] = colors_dark[0]\nmpl.rcParams['xtick.labelsize'] = 12\nmpl.rcParams['ytick.labelsize'] = 12\n\n\n# legend \nmpl.rcParams['legend.edgecolor'] = colors_dark[0]","51aeb78b":"data_product = pd.read_csv(\"\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv\")\ndata_district = pd.read_csv(\"\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv\")\ndata_product","fdc562ea":"data_district","5e311639":"train_null = (data_product.isnull().sum() \/ len(data_product) * 100).sort_values(ascending=False)\ntrain_notnull = (data_product.notnull().sum() \/ len(data_product) * 100).sort_values()\n\nfig, ax = plt.subplots(figsize=(14, 8))\n\nbars1 = ax.bar(x=train_null.index, height=train_null.values, color=colors_blue[0])\nbars2 = ax.bar(x=train_notnull.index, height=train_notnull.values, bottom=train_null.values, alpha=0.3, color=colors_dark[-1])\n\nfor bar in bars1: \n    height = bar.get_height()\n    x = bar.get_x()\n    \n    ax.text(\n        x=x+0.4, y=height + 2.5,\n        ha='center',\n        s=\"{:.2f}%\".format(height),\n        fontsize=12,\n        color=colors_dark[0],\n    )\n\nax.legend([\"Missing values (%)\"], loc='upper center', bbox_to_anchor=(0.5, -0.1), ncol=5, borderpad=1, frameon=False, fontsize=12)\nax.grid(axis='y', alpha=0.2)\nax.set_axisbelow(True)\nax.tick_params(labelsize=12)\nax.set_xlabel(\"Attribute\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Percentage %\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\n\n\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\nplt.text(s=\"About The Data | Products\", ha='left', x=xmin, y=ymax*1.19, fontsize=24, color=colors_dark[0])\nplt.text(s=\"Missing values on products data\", ha='left', x=xmin, y=ymax*1.12, fontsize=24, fontweight='bold', color=colors_dark[0])\nplt.title(\"There are +\/- 5% missing row on column Sector(s) and Primary Essentials Function\\nbut since this notebook is only for analysis and not modelling, we will not attend to the missing values\", loc='left', fontsize=13, color=colors_dark[2]) \nplt.tight_layout()\nplt.show()","8cc587bf":"train_null = (data_district.isnull().sum() \/ len(data_district) * 100).sort_values(ascending=False)\ntrain_notnull = (data_district.notnull().sum() \/ len(data_district) * 100).sort_values()\n\nfig, ax = plt.subplots(figsize=(14, 8))\n\nbars1 = ax.bar(x=train_null.index, height=train_null.values, color=colors_blue[0])\nbars2 = ax.bar(x=train_notnull.index, height=train_notnull.values, bottom=train_null.values, alpha=0.3, color=colors_dark[-1])\n\nfor bar in bars1: \n    height = bar.get_height()\n    x = bar.get_x()\n    \n    ax.text(\n        x=x+0.4, y=height + 2.5,\n        ha='center',\n        s=\"{:.2f}%\".format(height),\n        fontsize=12,\n        color=colors_dark[0],\n    )\n\nax.legend([\"Missing values (%)\"], loc='upper center', bbox_to_anchor=(0.5, -0.1), ncol=5, borderpad=1, frameon=False, fontsize=12)\nax.grid(axis='y', alpha=0.2)\nax.set_axisbelow(True)\nax.tick_params(labelsize=12)\nax.set_xlabel(\"Attribute\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Percentage %\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\n\n\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\nplt.text(s=\"About The Data | District\", ha='left', x=xmin, y=ymax*1.19, fontsize=24, color=colors_dark[0])\nplt.text(s=\"Missing values on district data\", ha='left', x=xmin, y=ymax*1.12, fontsize=24, fontweight='bold', color=colors_dark[0])\nplt.title(\"All column besides district_id have a missing values\\nbut since this notebook is only for analysis and not modelling, we will not attend to the missing values\", loc='left', fontsize=13, color=colors_dark[2]) \nplt.tight_layout()\nplt.show()","62590193":"df = data_product.groupby('Primary Essential Function').count()[['LP ID']].sort_values(by=\"LP ID\", ascending=True)\n\nfig, ax = plt.subplots(figsize=(8, 14))\n\nbars0 = ax.barh(df.index, df['LP ID'], color=colors_blue[1], alpha=0.8, edgecolor=colors_dark[0])\n\nax.grid(axis='x', alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Total Products\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Primary Essential Function\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\nplt.text(s=\"About The Data | Products\", ha='left', x=xmin, y=ymax*1.08, fontsize=24, color=colors_dark[0])\nplt.text(s=\"Count of products by its functions\", ha='left', x=xmin, y=ymax*1.04, fontsize=24, fontweight='bold', color=colors_dark[0])\nplt.title(\"Most of products that is in this dataset belongs to Digital Learning Platforms\", loc='left', fontsize=13, color=colors_dark[2]) \n\nplt.show()","db42e9d2":"df = data_product.groupby('Sector(s)').count()[['LP ID']].sort_values(by=\"LP ID\", ascending=False)\n\nfig, ax = plt.subplots(figsize=(14, 8))\n\nbars0 = ax.bar(df.index, df['LP ID'], color=colors_blue[1], alpha=0.8, edgecolor=colors_dark[0])\n\nax.grid(axis='y', alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Total Products\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Sector(s)\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\n\nfor i, bar in enumerate(bars0) : \n    x=bar.get_x()\n    y=bar.get_height()\n    if i < 3 : \n        ax.text(\n        s=f\"{df.iloc[i].values[0]}\\nProducts\",\n        va='center', ha='center', \n        x=x+0.38, y=y\/2,\n        color='white',\n        fontsize=18,\n        fontweight='bold')\n    else : \n        ax.text(\n        s=f\"{df.iloc[i].values[0]}\",\n        va='center', ha='center', \n        x=x+0.38, y=y+5,\n        color=colors_dark[0],\n        fontsize=14)\n        \n\nplt.text(s=\"About The Data | Products\", ha='left', x=xmin, y=ymax*1.16, fontsize=24, color=colors_dark[0])\nplt.text(s=\"Count of products by its Sector(s)\", ha='left', x=xmin, y=ymax*1.1, fontsize=24, fontweight='bold', color=colors_dark[0])\nplt.title(\"Most of products that is in this dataset belongs to PreK-12 sector\\nmeaning that most of the education services that exists in this dataset is for kindergarten to 12th grade students\", loc='left', fontsize=13, color=colors_dark[2]) \n\nplt.show()\n","f816bea8":"df = data_product.groupby('Provider\/Company Name').count()[['LP ID']].sort_values(by=\"LP ID\", ascending=True)[-10:]\n\nfig, ax = plt.subplots(figsize=(14, 8))\n\nbars0 = ax.barh(df.index, df['LP ID'], color=colors_blue[1], alpha=0.8, edgecolor=colors_dark[0])\n\nax.grid(axis='x', alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Total Products\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Primary Essential Function\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\n\n   \n        \nplt.text(s=\"About The Data | Products\", ha='left', x=xmin, y=ymax*1.16, fontsize=24, color=colors_dark[0])\nplt.text(s=\"Which company provide the most learning products?\", ha='left', x=xmin, y=ymax*1.1, fontsize=24, fontweight='bold', color=colors_dark[0])\nplt.title(\"Google provided the most learing product with 30 products that is in this dataset\", loc='left', fontsize=13, color=colors_dark[2]) \n\nplt.show()","1d074f0b":"df = data_product.groupby('Provider\/Company Name').count()[['LP ID']].sort_values(by=\"LP ID\", ascending=True)[-10:]\n\nfig, ax = plt.subplots(figsize=(14, 8))\n\nbars0 = ax.barh(df.index, df['LP ID'], color=colors_blue[1], alpha=0.8, edgecolor=colors_dark[0])\n\nax.grid(axis='x', alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Total Products\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Primary Essential Function\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\n\n   \n        \nplt.text(s=\"About The Data | Products\", ha='left', x=xmin, y=ymax*1.16, fontsize=24, color=colors_dark[0])\nplt.text(s=\"Which company provide the most learning products?\", ha='left', x=xmin, y=ymax*1.1, fontsize=24, fontweight='bold', color=colors_dark[0])\nplt.title(\"Google provided the most learing product with 30 products that is in this dataset\\n\", loc='left', fontsize=13, color=colors_dark[2]) \n\nplt.show()","c62a6098":"PATH = '..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data' \n\ntemp = []\n\nfor district in data_district.district_id.unique():\n    df = pd.read_csv(f'{PATH}\/{district}.csv', index_col=None, header=0)\n    df[\"district_id\"] = district\n    temp.append(df)\n    \n    \nengagement = pd.concat(temp)\nengagement = engagement.reset_index(drop=True)\n\nengagement.engagement_index=engagement.engagement_index.fillna(0)\ndata_product=data_product.rename(columns = {'LP ID': 'lp_id'}, inplace = False)\n\ndf1=engagement.join(data_district.set_index('district_id'),on='district_id')\ndf2=df1.join(data_product.set_index('lp_id'),on='lp_id')\ndf_joined=df2.dropna(subset=['Product Name'])","e6df4742":"df_joined['time'] = pd.to_datetime(df_joined['time'])","35dc0f77":"df = df_joined.groupby('Product Name').mean().sort_values(\"engagement_index\", ascending=False).reset_index()\ntop_100_product = df[0:100]['Product Name']","47283e27":"fig, ax = plt.subplots(figsize=(16, 8))\n\ndata_top_10 = df[0:10]\nmean_score = df.engagement_index.mean()\n\nbars1 = ax.bar(data_top_10['Product Name'], data_top_10['engagement_index'], color=colors_dark[3], alpha=0.4, edgecolor=colors_dark[0])\nline  = ax.axhline(mean_score, linestyle='--', color=colors_dark[2])\n\nax.grid(axis='y', alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Products\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Average Engagement Index\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\navgl  = ax.text(\n    s=\"Average: {:.2f}\".format(mean_score),\n    x=xmax*1.02,\n    y=mean_score,\n    backgroundcolor=colors_dark[2],\n    fontsize=12,\n    fontweight='bold',\n    color='white'\n)\nbars1[0].set_alpha(1)\nbars1[0].set_color(colors_red[3])\nbars1[0].set_edgecolor(colors_dark[0])\n\nax.text(\n    s=f\"{1}st\",\n    va='center', ha='center', \n    x=bars1[0].get_x()+0.35, y=bars1[0].get_height()\/2,\n    color='white',\n    fontweight='bold',\n    fontsize=14,\n)\n\nplt.text(s=\"COVID-19 Impact on Learning |\", ha='left', x=xmin, y=ymax*1.28, fontsize=22, color=colors_dark[0])\nplt.text(s=\"Top 10 services most used in this dataset\", ha='left', x=xmin, y=ymax*1.2, fontsize=24, fontweight='bold', color=colors_dark[0])\nplt.title(\"We can see that Google Docs is the most products\", loc='left', fontsize=13, color=colors_dark[2]) \n        \nplt.xticks(rotation=-45)\nplt.tight_layout()\nplt.show()","bba10814":"df = df_joined[df_joined['Product Name'] == 'Google Classroom'].groupby('time').mean().reset_index()[['time', 'pct_access', 'engagement_index']]\nrolling_20 = df[['engagement_index', 'pct_access']].rolling(window=20).mean()\n\nfig, ax = plt.subplots(figsize=(16, 10), dpi=75)\n\nline0 = ax.plot(df['time'], df['engagement_index'], color=colors_dark[0], alpha=0.2, label=\"Actual average percentage access\")\nline1 = ax.plot(df['time'], rolling_20['engagement_index'], color=colors_blue[1], alpha=1, label=\"Moving average 20 days\", linestyle='--')\nwho_line = plt.axvline(x = pd.Timestamp('2020-03-11'), color=colors_red[3], label=\"WHO declares COVID-19 as a pandemic\")\nax.axvspan(pd.Timestamp('2020-06-10'), pd.Timestamp('2020-09-11'), alpha=0.6, color=colors_blue[1], label=\"Summer period\")\n\nax.legend(loc='upper center', bbox_to_anchor=(0.5, -0.2), ncol=5, borderpad=1, frameon=False, fontsize=12)\nax.grid(axis='y', alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Date\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Average Engagement\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\nax.legend(loc='upper center', bbox_to_anchor=(0.5, -0.2), ncol=5, borderpad=1, frameon=False, fontsize=12)\n\nplt.text(s=\"COVID-19 Impact on Learning | United States\", ha='left', x=xmin, y=ymax*1.16, fontsize=22, color=colors_dark[0])\nplt.text(s=\"The Rises of Google Classroom Popularity\", ha='left', x=xmin, y=ymax*1.1, fontsize=24, fontweight='bold', color=colors_dark[0])\nplt.title(\"Google Classroom have a significant increase in terms of product usages based on engagement_index.\", loc='left', fontsize=13, color=colors_dark[2]) \n\n\nax.text(\n    s=f\"Summer holiday\",\n    va='center', ha='center', \n    x=pd.Timestamp('2020-07-26'), y=10000,\n    color='white',\n    fontsize=14,\n    fontweight='bold'\n)\n\n\nplt.tight_layout()\nplt.show()","327a9a71":"av_before = df[df['time'] < '2020-03-11'].mean()['engagement_index']\nav_after = df[(df['time'] >= '2020-03-11') & ((df['time'] < '2020-06-10') | (df['time'] > '2020-09-11'))].mean()['engagement_index']\ninc = (av_after - av_before) \/ (av_after) * 100","153e8742":"fig, ax = plt.subplots(figsize=(16, 8))\n\ndata_top_10 = df[0:10]\nmean_score = df.engagement_index.mean()\n\nbars1 = ax.bar('Before Pandemic', av_before, color=colors_dark[0], alpha=0.1, edgecolor=colors_dark[0])\nbars2 = ax.bar('After Pandemic (not counting holidays)', av_after, color=colors_red[2], alpha=0.8, edgecolor=colors_dark[0])\n\nax.grid(axis='y', alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Time\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Average\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\nax.text(\n    s=\"{:.2f}\".format(av_before),\n    va='center', ha='center', \n    x=bars1[0].get_x()+0.4, y=bars1[0].get_height()\/2,\n    color=colors_dark[2],\n    fontweight='bold',\n    fontsize=14,\n)\n\nax.text(\n    s=\"{:.2f}\\n({:.2f}%)\\nIncrease\".format(av_after, inc),\n    va='center', ha='center', \n    x=bars2[0].get_x()+0.4, y=4000,\n    color='white',\n    fontweight='bold',\n    fontsize=28,\n)\n\nplt.text(s=\"COVID-19 Impact on Learning | United States\", ha='left', x=xmin, y=ymax*1.16, fontsize=22, color=colors_dark[0])\nplt.text(s=\"The Rises of Google Classroom Popularity\", ha='left', x=xmin, y=ymax*1.1, fontsize=24, fontweight='bold', color=colors_dark[0])\nplt.title(\"Google Classroom have a significant increase in terms of product usages based on engagement_index.\", loc='left', fontsize=13, color=colors_dark[2]) \n\nplt.tight_layout()\nplt.show()","f5d1e764":"df = df_joined[df_joined['Product Name'].isin(top_100_product)].groupby('Primary Essential Function').count()[['lp_id']].sort_values('lp_id', ascending=False).reset_index()\ndf_pie_7 = df[0:7]\ndf_pie_other = df[7:]\n","173cfa65":"new_dict = {\n    \"Primary Essential Function\": \"Other\",\n    \"lp_id\": df_pie_other['lp_id'].sum()\n}\ndf_pie_7 = df_pie_7.append(new_dict, ignore_index=True)","5a7e3e06":"fig, ax = plt.subplots(figsize=(14, 8), dpi=75)\n\npie = ax.pie(\n    df_pie_7['lp_id'], \n    colors=colors_mix[0:8],\n    wedgeprops=dict(width=0.5, alpha=0.9),\n    autopct='%1.0f%%',\n    pctdistance=1.12, \n    textprops={\n        'fontsize': 12, \n        'color': colors_dark[2],\n        'fontweight': 'bold'\n    }, \n)\n\nax.legend(df_pie_7['Primary Essential Function'], loc='upper center', bbox_to_anchor=(0.5, -0.1), ncol=2, borderpad=1, frameon=False, fontsize=12)\nax.grid(axis='y', alpha=0.3)\nax.set_axisbelow(True)\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\nplt.suptitle(t=\"Engagement Index Top 100\", fontsize=24, fontweight='bold', color=colors_dark[0])\nplt.title(\"Out of top 100 products based on engagement index\\nThe most used platform are digital learning\\nfollowed by another some sort of study tools\", fontsize=13, color=colors_dark[2])\nplt.tight_layout()\nplt.show()","018ea0cb":"fig, ax = plt.subplots(figsize=(16, 10), dpi=75)\n\ndf_avg = df_joined.groupby('time').mean().reset_index()[['time', 'pct_access', 'engagement_index']]\nrolling_20 = df_avg[['engagement_index', 'pct_access']].rolling(window=20).mean()\n\nline0 = ax.plot(df_avg['time'], df_avg['engagement_index'], color=colors_dark[0], alpha=0.2, label=\"Actual average percentage access\")\nline1 = ax.plot(df_avg['time'], rolling_20['engagement_index'], color=colors_blue[1], alpha=1, label=\"Moving average 20 days\", linestyle='--')\nwho_line = plt.axvline(x = pd.Timestamp('2020-03-11'), color=colors_red[3], label=\"WHO declares COVID-19 as a pandemic\")\nax.axvspan(pd.Timestamp('2020-06-10'), pd.Timestamp('2020-09-11'), alpha=0.6, color=colors_blue[1], label=\"Summer period\")\n\nax.legend(loc='upper center', bbox_to_anchor=(0.5, -0.2), ncol=5, borderpad=1, frameon=False, fontsize=12)\nax.grid(axis='y', alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Date\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Engagement Index\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\nax.legend(loc='upper center', bbox_to_anchor=(0.5, -0.2), ncol=5, borderpad=1, frameon=False, fontsize=12)\n\nplt.text(s=\"COVID-19 Impact on Learning | United States\", ha='left', x=xmin, y=ymax*1.28, fontsize=22, color=colors_dark[0])\nplt.text(s=\"How COVID-19 affects digital learning ussage on United States?\", ha='left', x=xmin, y=ymax*1.2, fontsize=24, fontweight='bold', color=colors_dark[0])\nplt.title(\"By looking at the graph below it is clear that there are a significant increase in digital learning service engagement index.\\nWe can see before the pandemic starts (2020-01 - 2020-03) the percentage uses of digital learning service is 0.5 on average\\nWhen summer holiday end there are an increase on digital learning service usage\", loc='left', fontsize=13, color=colors_dark[2]) \n\n\nax.text(\n    s=f\"Summer holiday\",\n    va='center', ha='center', \n    x=pd.Timestamp('2020-07-26'), y=400,\n    color='white',\n    fontsize=14,\n    fontweight='bold'\n)\n\nplt.tight_layout()\nplt.show()","15656763":"avg_bef_pandemic = df_joined[df_joined.time <= '2020-03-11'][['pct_access', 'engagement_index']].mean().reset_index()\navg_aft_pandemic = df_joined[df_joined.time >= '2020-09-11'][['pct_access', 'engagement_index']].mean().reset_index()\n\ndisplay(HTML(\n    '''\n    <div style=\"padding:10px 50px; background: white\">\n        <h1 style='font-weight:400; color:{};{}'>\n            Before WHO declares COVID-19 pandemic the average uses and engagement index are respectivly <br\/>\n            <span style=\"color:{}; font-weight:500\">{:.2f}<\/span> and <span style=\"color:{}; font-weight:500\">{:.2f}<\/span>\n            <br\/> <br\/> After WHO declares COVID-19 pandemic and summer holiday, the number increases, the average uses and engagement index are respectivly becomes \n            <span style=\"color:{}; font-weight:500\">{:.2f}<\/span> and <span style=\"color:{}; font-weight:500\">{:.2f}<\/span>\n\n        <\/h1>\n    <\/div>\n    \n    '''.format(\n        colors_dark[0], \n        colors_dark[0], \n        colors_red[3],\n        \n        avg_bef_pandemic[0].iloc[0],\n        colors_red[3],\n        avg_bef_pandemic[0].iloc[1],\n        \n        colors_blue[2],\n        avg_aft_pandemic[0].iloc[0],\n        colors_blue[2],\n        avg_aft_pandemic[0].iloc[1],\n        \n\n    )\n))","d4d7a61e":"fig, ax = plt.subplots(figsize=(16, 10), dpi=75)\n\ndf = df_joined[df_joined['Primary Essential Function'] == 'LC - Digital Learning Platforms'].groupby('time').mean().reset_index()[['time', 'pct_access', 'engagement_index']]\nrolling_20 = df[['engagement_index', 'pct_access']].rolling(window=20).mean()\n\nline0 = ax.plot(df['time'], df['engagement_index'], color=colors_dark[0], alpha=0.2, label=\"Actual average percentage access\")\nline1 = ax.plot(df['time'], rolling_20['engagement_index'], color=colors_blue[1], alpha=1, label=\"Moving average 20 days\", linestyle='--')\nwho_line = plt.axvline(x = pd.Timestamp('2020-03-11'), color=colors_red[3], label=\"WHO declares COVID-19 as a pandemic\")\nax.axvspan(pd.Timestamp('2020-06-10'), pd.Timestamp('2020-09-11'), alpha=0.6, color=colors_blue[1], label=\"Summer period\")\n\nax.legend(loc='upper center', bbox_to_anchor=(0.5, -0.2), ncol=5, borderpad=1, frameon=False, fontsize=12)\nax.grid(axis='y', alpha=0.3)\nax.set_axisbelow(True)\nax.set_xlabel(\"Date\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Engagement Index\", fontsize=14, labelpad=10, fontweight='bold', color=colors_dark[0])\nxmin, xmax = ax.get_xlim()\nymin, ymax = ax.get_ylim()\n\nax.legend(loc='upper center', bbox_to_anchor=(0.5, -0.2), ncol=5, borderpad=1, frameon=False, fontsize=12)\n\nplt.text(s=\"COVID-19 Impact on Learning | United States\", ha='left', x=xmin, y=ymax*1.23, fontsize=22, color=colors_dark[0])\nplt.text(s=\"How COVID-19 affects digital learning ussage on United States?\", ha='left', x=xmin, y=ymax*1.15, fontsize=24, fontweight='bold', color=colors_dark[0])\nplt.title(\"The number of average engagement_index rises in time around WHO declares COVID-19 as a pandemic but then comes back to normal\", loc='left', fontsize=13, color=colors_dark[2]) \n\n\nax.text(\n    s=f\"Summer holiday\",\n    va='center', ha='center', \n    x=pd.Timestamp('2020-07-26'), y=400,\n    color='white',\n    fontsize=14,\n    fontweight='bold'\n)\n\nplt.tight_layout()\nplt.show()","09871211":"## Data Product","cf5cd7b9":"## Which Category Have The Most Engagement Index?\n\nNow, out of the top 100 products ranked based on its average engagement_index, we can see that the most popular category are Digital Learning Platform. Contributing almost 36% out of those 100 products. But is there a COVID-19 factor in this number? thats the question that we will answer next.\n","daf30c26":"## Which Company Most Listed In this Dataset?\n\nFrom the visualization below it is clear that Google LLC dominates with 30 products. Other than google, there are no product that have 10 products in this datasets.","541e79e8":"### Product Data \nWe can see from the visualization below that all columns besides district_id have a missing data, with a variety of percentage. As stated above, author does not process the missing values.  ","82c3cd99":"In the product data, we can see that the data consist of 372 rows of data with 6 columns. \n\nEach columns and its defitionion are listed below: \n* **LP ID**: \n\n    The unique identifier of the product\n* **URL**: \n\n    Web Link to the specific product\n* **Product Name**: \n\n    Name of the specific product\n* **Provider\/Company Name**: \n\n    Name of the product provider\n* **Sector(s):** \n\n    Sector of education where the product is used\n* **Primary Essential Function**: \n    \n    The basic function of the product. There are two layers of labels here. Products are first labeled as one of these three categories: LC = Learning & Curriculum, CM = Classroom Management, and SDO = School & District Operations. Each of these categories have multiple sub-categories with which the products were labeled","8537db10":"## The Trend of Digital Learning Service\n\nIt's surprising to see that the increase of Digital Learning Service usage only rises around the time where WHO declares COVID-19 as a pandemic. After that the number returns to normal. This might need another in-depth analysis. ","956689eb":"# Introduction\n\nSince WHO declares COVID-19 as a global pandemic, people were forced to do their normal activities life on home, Activity such as schools, works, etc. Those activity which normally were done offline is now online. With the rise of people work and go to school online, there has to be an effect on the usage of online services. In this notebook I will try to explore and explain the effects of COVID-19 pandemic on online service usages specifically on online education services.\n\n# Data Description\n\nWe include three basic sets of files to help you get started. The engagement data are based on LearnPlatform\u2019s Student Chrome Extension. The extension collects page load events of over 10K education technology products in our product library, including websites, apps, web apps, software programs, extensions, ebooks, hardwares, and services used in educational institutions. The engagement data have been aggregated at school district level, and each file represents data from one school district. The product file includes information about the characteristics of the top 372 products with most users in 2020. The district file includes information about the characteristics of school districts, including data from National Center for Education Statistics (NCES), The Federal Communications Commission (FCC), and Edunomics Lab.","8def49eb":"# General Statistics\n\nBefore we dive deep into the data, it is best to know the data in general first, like how many missing values are in the data, and some basic statistics","ba3f6ccb":"In the product data, we can see that the data consist of 233 rows of data with 7 columns. \n\nEach columns and its defitionion are listed below: \n* **district_id**: \n\n    The unique identifier of the school district\n* **state**: \n\n    NCES locale classification that categorizes U.S. territory into four types of areas: City, Suburban, Town, and Rural. See Locale Boundaries User's Manual for more information.\n* **pct_black\/hispanic**: \n\n    Percentage of students in the districts identified as Black or Hispanic based on 2018-19 NCES data\n* **pct_free\/reduced**: \n\n    Percentage of students in the districts eligible for free or reduced-price lunch based on 2018-19 NCES data\n* **countyconnectionsratio** \n\n    ratio (residential fixed high-speed connections over 200 kbps in at least one direction\/households) based on the county level data from FCC From 477 (December 2018 version). See FCC data for more information.\n* **pptotalraw**: \n    \n    Per-pupil total expenditure (sum of local and federal expenditure) from Edunomics Lab's National Education Resource Database on Schools (NERD$) project. The expenditure data are school-by-school, and we use the median value to represent the expenditure of a given school district.","bffcd4a4":"## The Rises of Google Classroom Popularity\n\nBy looking at the visualization below, we can confirmed that yes, Google Classroom have a significant increase in terms of product usages based on engagement_index. We can see that in January 2020 the average Google Classroom engagement index is below 2500. Compared to the situations after the pandemic the usage of Google Classroom sky rocketted. \n\nBut there are one thing that is curious to see. Why the number drops on June to October. This happens because it is on summer holiday period.","593e0772":"## Are There Any Increase in Engagement Index before and after COVID-19 ?\n\nBefore we answer the question are there COVID-19 factor that affects the number of users using Digital Learning Platforms, we might want to check the trend of average digital services usage based on its engagement_index on all type of products. \n\nIn the following visualization we can see that there are COVID-19 factor that affects the the trend of average digital service usages. The trend is quite similar in the previous Google Classroom visualization.","718c73cb":"## Data District","97db4c53":"## Missing Data\n\nTo provide the reader the context of the data, author provided a visualization that shows the percentage of the missing datas. But since this notebook does not consist of any machine learning modelling, author decided to not process those missing values. \n\n### Product Data \nWe can see from the visualization below that the percentage of missing data on Product data is about +\/- 5% on two columns, that is column Sector(s) and column Primary Essentials Function. As stated above, author does not process the missing values.  ","efad3fdc":"## Count of Products By Its Sector(s)\n\nFrom the visualization below we can see that most of the products that is listed on this dataset is used for PreK-12 (meant for 1st grade to 12th grade students) with the number of 170 products. ","f79446bd":"## Count of Products By Its Functions\n\nFrom the visualization below, we can see that the dataset consist of many type of products specifically product by its functions. Most of the product that is in this datasets belongs to Digital Learning Platforms, well almost all the product in the top spots belongs to digital learning services. \n\nSince the documentation said that the product data is collected from top 372 products with most users in 2020, by that alone we can conclude that online learning services is plentiful","5c4e84d0":"## Which Services Is Most Used?\n\nTo find out which services is the most used, we can use the engagement_index variables. But since we are given the data for each states in United States, author decided to average the engagement_index all over the states\n\nFrom the visualization below, we can see the products popularity in United States based on the engagement_index average for every states. The most product that is most being used are Google Docs. Not surprised since Google Docs is essentials in working and schools life, and then followed by Google Classroom. \n\nGoogle Classroom sits on 2nd places on the most used services based on average engagement_index. It is also not surprising since the data itself is collected in 2020 where COVID-19 takes place. Most schools and online learning works were done online. Since people need an online class application Google Classroom is one of the obvious choice. But to validate this asumptions author will plot another visualization specifically on Google Classroom\n","0e380e9b":"# In-Depth Analysis\n\nBefore author explore and explain in depth analysis, there are a few keywords that needs to be known, that is **engagement_index** and **pct_access**. Both of those variables will be heavily used in the next exploration. Below are the list and the definition of those variables\n* **engagement_index**:\n    Total page-load events per one thousand students of a given product and on a given day\n* **pct_access**: Percentage of students in the district have at least one page-load event of a given product and on a given day\n\nBoth of the variables above can be used to determined the popularity of a certain products, thus an important variables\n\n"}}