{"cell_type":{"bfba65bf":"code","b88faa65":"code","b0f9ad09":"code","9e848ff2":"code","d0e68c72":"code","4180a9d4":"markdown"},"source":{"bfba65bf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b88faa65":"\nimport matplotlib.pyplot as plt\nimport cv2\n\nfrom skimage import io, data, img_as_float\nfrom skimage.color import rgb2gray, rgb2lab, lab2rgb\nfrom skimage.exposure import equalize_hist, equalize_adapthist\nfrom skimage.filters import sobel, threshold_otsu","b0f9ad09":"#original = data.chelsea()\noriginal = io.imread('\/kaggle\/input\/pothole\/pothole.jpeg')\ngray = rgb2gray(original)\nlab = rgb2lab(original)\n\nfig, axes = plt.subplots(1, 3, figsize=(12, 4))\nax = axes.ravel()\n\nax[0].set_title(\"Asli\")\nax[0].imshow(original)\nax[1].set_title(\"Derajat Keabuan (CIE 1931)\")\nax[1].imshow(gray, cmap=plt.cm.gray)\nax[2].set_title(\"Derajat Keabuan (Lab)\")\nax[2].imshow(lab[:, :, 0], cmap=plt.cm.gray)\n\nfig.tight_layout()\nplt.show()","9e848ff2":"graylab = lab[:, :, 0]\ngraylab = img_as_float(equalize_adapthist(graylab.astype(int)))\n\nafteradapt = lab.copy()\nafteradapt[:, :, 0] = graylab.copy() * 255\nafteradaptcolor = lab2rgb(afteradapt)\n\nfig, axes = plt.subplots(2, 2, figsize=(8, 6))\nax = axes.ravel()\n\nax[0].set_title(\"Asli\")\nax[0].imshow(original)\nax[1].set_title(\"Derajat keabuan (sebelum)\")\nax[1].imshow(lab[:, :, 0], cmap=plt.cm.gray)\nax[2].set_title(\"Warna (sesudah)\")\nax[2].imshow(afteradaptcolor)\nax[3].set_title(\"Derajat keabuan (sesudah)\")\nax[3].imshow(graylab, cmap=plt.cm.gray)\n\nfig.tight_layout()\nplt.show()","d0e68c72":"edges = sobel(graylab)\nthresh = threshold_otsu(edges)\nedge2 = edges > thresh\noverlay = original.copy()\noverlay[:, :, 0] = graylab * 255\noverlay[:, :, 1] = np.clip(graylab + edge2, 0, 1) * 255\noverlay[:, :, 2] = graylab * 255\norig_overlay = original.copy()\norig_overlay[:, :, 1] = np.clip(orig_overlay[:, :, 1] + edge2 * 255, 0, 255)\n\nfig, axes = plt.subplots(3, 2, figsize=(12, 10))\nax = axes.ravel()\n\nax[0].set_title(\"Derajat keabuan (sesudah)\")\nax[0].imshow(graylab, cmap=plt.cm.gray)\nax[1].set_title(\"Deteksi tepi (Sobel)\")\nax[1].imshow(edges, cmap=plt.cm.gray)\nax[2].set_title(\"Deteksi tepi (+ Otsu)\")\nax[2].imshow(edge2, cmap=plt.cm.gray)\nax[3].set_title(\"Derajat keabuan (+ deteksi tepi + Otsu)\")\nax[3].imshow(overlay)\nax[4].set_title(\"Asli\")\nax[4].imshow(original)\nax[5].set_title(\"Asli (+ deteksi tepi + Otsu)\")\nax[5].imshow(orig_overlay)\n\nfig.tight_layout()\nplt.show()","4180a9d4":"sumber referensi : https:\/\/scikit-image.org\/docs\/dev\/auto_examples\/applications\/plot_thresholding.html\n                   https:\/\/scikit-image.org\/docs\/dev\/auto_examples\/color_exposure\/plot_equalize.html\n                   \n"}}