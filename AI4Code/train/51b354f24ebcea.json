{"cell_type":{"e2ce9735":"code","b4876d1b":"code","3d09d0c4":"code","6557666e":"code","c02c3c3f":"code","937fab16":"code","af40a5dc":"code","f8904515":"code","6d9c11bb":"code","85a22519":"code","ce68b5a7":"code","15ea55d1":"code","d5bb9f6b":"markdown","ceba45b2":"markdown","fd5ba8d7":"markdown","66753e35":"markdown","350e479b":"markdown","21b6bf5f":"markdown","b84087e2":"markdown","44f6f15b":"markdown","af0db7b3":"markdown"},"source":{"e2ce9735":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport sklearn as sk\nimport fractions\nimport re\nimport seaborn as sns","b4876d1b":"dataframe = pd.read_csv(\"..\/input\/clinvar_conflicting.csv\", dtype={0: object, 38: str, 40: object})","3d09d0c4":"print(dataframe.shape)\ndataframe.head()","6557666e":"#plotting a histogram of the different values of class to see if it's skewed\ng = dataframe.groupby('CLASS').size()\ng.plot(kind = 'bar')\nproportion_conflicting = g[1]\/g.sum()\nprint(g)\n\nprint(\"The fraction of classifications that are conflicting is {}\".format(proportion_conflicting))","c02c3c3f":"#Testing Categorical Variables\n\ngrouped = dataframe.groupby('CLNVC')\ngrouped_class = grouped['CLASS'].agg(np.mean)\n\nprint(\"Proportion of conflicting classifications by mutation {} \\n\".format(\n    grouped_class))\n\n#comparing proportion of each mutation conflicting to average\nprint(\"Proportion of conflicting classifications by mutation compared to average for data set {}\\n\".format(\n    grouped_class.apply(lambda grouped_class: grouped_class - proportion_conflicting)))\ngrouped.size()\n\ngrouped_class.plot(kind = \"bar\", ylim = [0,1], title = 'Proportion of conflicting classifications by mutation', figsize = (20,10))\n","937fab16":"#IMPACT\n\ngrouped_impact = dataframe.groupby('IMPACT')\ngrouped_impact_class = grouped_impact['CLASS'].agg(np.mean)\n\nprint(\"Proportion of conflicting classifications by impact level {} \\n \\n\".format(\n    grouped_impact_class))\n\n#comparing proportion of each IMPACT level conflicting to average\nprint(\"Proportion of conflicting classifications by impact level compared to average for data set{}\\n\".format(\n    grouped_impact_class.apply(lambda grouped_impact_class: grouped_impact_class - proportion_conflicting)))\n\nprint(grouped_impact.size())\n\ngrouped_impact_class.plot(kind = \"bar\", ylim = [0,1], title = 'Proportion of conflicting classifications by impact level',\n                          figsize = (20,10))","af40a5dc":"#creating function for correlation plot\ndef plot_corr(df,size=10):\n    '''Function plots a graphical correlation matrix for each pair of columns in the dataframe.\n\n    Input:\n        df: pandas DataFrame\n        size: vertical and horizontal size of the plot'''\n    corr = df.corr()\n\n    # Set up the matplotlib figure\n    f, ax = plt.subplots(figsize=(20, 10))\n\n    # Generate a custom diverging colormap\n    cmap = sns.diverging_palette(220, 10, as_cmap=True)\n\n    # Draw the heatmap with the mask and correct aspect ratio\n    sns.heatmap(corr, cmap=cmap, vmax= 1, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})\n    \n","f8904515":"#dropping all columns with over 20% NA\ndf=dataframe.replace({'':np.nan})\ndf = df.dropna(thresh=0.8*len(df), axis=1)\ndf.columns\n#dropping all columns that clearly don't play a role in outcome (ex: clinical name of diseases)\ndf = df.drop([\"CLNDISDB\", \"CLNDN\", \"Feature\", 'Consequence', 'BIOTYPE', 'SYMBOL', 'Feature_type', 'ORIGIN'], axis = 1)\n#removing all non numerical values\ndf_numeric = df.drop(['Amino_acids', 'Codons', 'MC', \"CLNHGVS\", 'REF', 'ALT', 'CLNVC', 'Allele', 'IMPACT', 'CHROM'], axis = 1)\n\n#converting variables with numeric values listed as strings to numeric\nfor i in [\"Protein_position\", \"CDS_position\", \"cDNA_position\"]:\n    df_numeric[i] = pd.to_numeric(df_numeric[i], errors = 'coerce')\n    \n\n#converting EXON to numeric values\ndf_numeric.EXON.fillna('0', inplace=True)\ndf_numeric['variant_exon'] = df_numeric.EXON.apply(lambda x: [float(s) for s in re.findall(r'\\b\\d+\\b', x)][0])\ndf_numeric = df_numeric.drop([\"EXON\"], axis = 1)\n\ndf_numeric.dropna(axis = 0, inplace = True)\ndf_numeric.head()","6d9c11bb":"plot_corr(df_numeric, size = 20)","85a22519":"#splitting data into training and test sets\nfrom sklearn.model_selection import train_test_split\ndf_numeric_predictors = df_numeric.drop([\"CLASS\"], axis = 1)\ndf_numeric_outcome = df_numeric[\"CLASS\"]\nX_train, X_test, y_train, y_test = train_test_split(df_numeric_predictors, df_numeric_outcome, test_size=0.33, random_state=42)","ce68b5a7":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import mean_squared_error, r2_score, accuracy_score\n#training the model using training sets\nregr = LogisticRegression().fit(X_train, y_train)\n#testing the model using testing sets\ny_pred = regr.predict(X_test)\n\ny_array = np.array(y_test)\nprint('Accuracy score: %.2f' % accuracy_score(y_array, y_pred))\n","15ea55d1":"from sklearn import svm\nclf = svm.SVC(gamma = 0.001)\nclf.fit(X_train, y_train)\ny_pred = clf.predict(X_test)\nprint('Accuracy score: %.2f' % accuracy_score(y_test, y_pred))","d5bb9f6b":"Both the logistic regression model and SVM create models with roughly 75% accuracy in their predictions. Although these results aren't extraordinary it also seems unlikely that further tuning will lead to a large increase in accuracy as none of the features are highly correled with CLASS.","ceba45b2":"The correlation plot indicates that none of the values are highly correlated with the CLASS variable, this indicates that a model with a low risk of overfitting can't be created by training on a select subset of features.","fd5ba8d7":"In order to accurately compare the proportions of the rate of conflicting classifications I've organized the proportion of conflicting classifications by mutation. What is interesting about these classifications is that the misclassification rate for single_nucleotide_variant (often abreviated SNP) is higher than that of the other mutations. SNP's are mutations in which only a single nucleotide is changed as opposed to deletions or insertions in which multiple alleles are affected. We can also see that Microsatellite variations have significantly different values than the others however due to the small sample size we cannot draw any firm conclusions from this.","66753e35":"In the cell below I've created a purely numeric data frame that can be used for model creation, I've eliminated all non-numeric features, in addition to this I've removed the NA values from the data.","350e479b":"I've performed a similar analysis to that done on the CLNVC variable on IMPACT. In comparing the proportion of conflicting classifications of each impact level we can clearly see that HIGH values have a lower conflicting classification rate than other values. (more information about the impact variable is explained at https:\/\/uswest.ensembl.org\/info\/genome\/variation\/prediction\/predicted_data.html#consequences.) Essentially the IMPACT measures the predicted impact of the variant on phenotype. This analysis seems to indicate that variants that have a high impact on phenotype seems to lead to less conflicting results with regard to pathogeneity. This seems reasonable, however the results also indicate that there is essentially no difference between the misclassification of a LOW impact and MODERATE impact variation which would seem to deserve attention.","21b6bf5f":"## Conclusions\n    This data set showed some interesting results. Probably the most surprising was revealed during the EDA when we saw how strongly correlated SNP mutations were with misclassifications this can lead to interesting questions with regards to testing methods for SNP mutations and their consistency. A more accurate model could possibly have been created if the methods and features used were fine tuned but the central goal of this analysis was more along the lines of data exploration and noticing irregularities that could point towards further research.","b84087e2":"### Conflicting Genetic Classifications:\n   The Dataset being used was gathered by ClinVar, a public resource used to collect information about genetic variants. ClinVar classifies each of these variants into one of three categories:\n   1. Likely Benign or Benign\n   2. VUS\n   3. Likely Pathogenic or Pathogenic\n   \nThe variants were categorized via manual testing by multiple labs. Conflicting categorizations have been assigned to the CLASS column, a 1 represents a conflicting categorizations by different labs while a 0 represents a consistent categorization.","44f6f15b":"## EDA","af0db7b3":"In observing the CLASS variable we can see that it is heavily skewed towards consistent categorizations (CLASS = 0). This gives us context for observing the ratio of conflicting classifications as grouped by each variable."}}