{"cell_type":{"2f0d31cd":"code","59bdbad5":"code","3435de59":"code","8953d602":"code","6ff29209":"code","dbcc8c9c":"code","63d52185":"code","17c9a8bf":"code","dcdf5d86":"code","375ae36b":"code","d6536321":"code","ed666917":"code","83e08192":"code","39d84c76":"code","67649658":"code","53a45a93":"code","b44377d4":"code","f7283d30":"code","2146b77b":"code","a9a55ab6":"code","846358e3":"code","974e19fb":"code","91f9f713":"code","a45cbb7e":"code","693b47c8":"code","f88f096f":"markdown","ec4641a1":"markdown","998a4bda":"markdown","aa750bae":"markdown","2157ae21":"markdown"},"source":{"2f0d31cd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","59bdbad5":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns","3435de59":"data = pd.read_csv('..\/input\/stock-keeping-unit-merkle-sokrati\/SKU-data-Assignment-2.csv')","8953d602":"data.head()","6ff29209":"data.describe()","dbcc8c9c":"data = data.transpose()\ndata.head()","63d52185":"data.index.name = 'Date'\ndata.columns = data.iloc[0, :]\ndata.drop('SKU', inplace=True)","17c9a8bf":"data.head()","dcdf5d86":"data.index.names","375ae36b":"data.index = pd.to_datetime(data.index)\ndata.head()","d6536321":"data['Total Sales'] = data.iloc[:,:-1].sum(axis=1)\ndata.head()","ed666917":"data['Month Year'] = data.index.strftime('%b-%Y')\ndata['Month Year'].head()","83e08192":"monthlySales = data.groupby(by= ['Month Year'])['Total Sales'].sum()\nprint(\"Monthly Sales: \")\nprint(monthlySales)","39d84c76":"data['Quarter'] = data.index.to_period('Q')\ndata['Quarter'].head()","67649658":"quarterlySales = data.groupby(by= ['Quarter'])['Total Sales'].sum()\nprint(\"Quarterly Sales: \")\nprint(quarterlySales)","53a45a93":"print(\"Top 3 Months in overall sales: \")\nmonthlySales.sort_values(ascending=False)[:3]","b44377d4":"data.columns","f7283d30":"SKUsMonthlySales = data.groupby(by= ['Month Year'])[data.columns[:-3]].apply(lambda x : x.sum())\nSKUsMonthlySales.head()","2146b77b":"SKUsMonthlySales.shape","a9a55ab6":"SKUsMonthlySales.describe()","846358e3":"SKUsMonthlySales.iloc[0,:].sort_values()","974e19fb":"SKUsMonthlySales.iloc[1,:].sort_values()","91f9f713":"SKUsMonthlySales.iloc[5,:].sort_values()","a45cbb7e":"SKUsMonthlySales['98201'].describe().round(2)","693b47c8":"SKUsMonthlySales['65001'].describe().round(2)","f88f096f":"## 2. Which are the top 3 months in terms of overall sales","ec4641a1":"## 3. Which SKUs are outliers in terms sales in any month","998a4bda":"- **Mininum SKU Outlier id - 98201  with a mean sale of 30.5**\n- **Maximum SKU Outlier id - 65001  with a mean sale of 4175260.67**","aa750bae":"## 1. What is the monthly & quaterly sales data by SKU","2157ae21":"# Beginner Tasks "}}