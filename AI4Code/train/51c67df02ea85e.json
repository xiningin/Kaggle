{"cell_type":{"eeafa1cb":"code","2f612f1a":"code","1d1949b8":"code","f0ea240a":"code","57caeef7":"code","e5513b6e":"code","69167df2":"code","287ca083":"code","f411ecb7":"code","0e5143d4":"code","82937a10":"code","6dab08a3":"code","c1d98c94":"code","403f0f81":"code","ee126256":"code","2a84971e":"code","ad1e3935":"code","9773aedb":"markdown","e8cc7f9c":"markdown","9ab9d4fa":"markdown","2e71ef0c":"markdown","fd9919f8":"markdown","0bef20e6":"markdown","5ba57064":"markdown","7e7b0a85":"markdown","66c09789":"markdown","f246ef87":"markdown","6dae500f":"markdown","7736ad2c":"markdown","ce22a500":"markdown","77e1a447":"markdown","3ca135ea":"markdown","22045dab":"markdown","aff88bd8":"markdown","63f50c51":"markdown"},"source":{"eeafa1cb":"import pandas as pd\nimport numpy as np\nimport statsmodels.api as sm\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport math\n","2f612f1a":"data = pd.read_csv('..\/input\/predictingese\/AttendanceMarksSA.csv')","1d1949b8":"data.head()","f0ea240a":"data.describe()","57caeef7":"corr = data.corr()\ncorr.style.background_gradient(cmap = 'coolwarm')","e5513b6e":"X = data[\"MSE\"]\ny = data[\"ESE\"]\n\nsns.scatterplot(X,y)","69167df2":"endog = data['ESE']\n\nexog = sm.add_constant(data[['MSE']])\n\nprint(exog.head())","287ca083":"print(endog.head())","f411ecb7":"model = sm.OLS(endog , exog)\nresults = model.fit()\nprint(results.summary())","0e5143d4":"def RSE(y_true , y_predicted):\n    \n    y_true = np.array(y_true)\n    y_predicted = np.array(y_predicted)\n    \n    RSS = np.sum(np.square(y_true-y_predicted))\n    \n    rse = math.sqrt( RSS \/ (len(y_true) - 2))\n    \n    return rse","82937a10":"rse = RSE(data['ESE'],results.predict())\nprint(rse)","6dab08a3":"marks = 17\nend_marks = results.predict([1,marks])\nprint(end_marks)","c1d98c94":"X1 = data[\"Attendance\"]\ny1 = data[\"ESE\"]\n\nsns.scatterplot(X1 ,y1)\n","403f0f81":"endog1 = data['ESE']\nexog1 = sm.add_constant(data[['Attendance']])\nprint(exog1.head(),end=\"\\n\\n\")\nprint(endog1.head())","ee126256":"model1 = sm.OLS(endog1, exog1)\nresults1 = model1.fit()","2a84971e":"rse = RSE(data['Attendance'],results1.predict())\nprint(rse)","ad1e3935":"print (results1.summary())","9773aedb":"1. * R - square value for model is 0.565 which is acceptable.\n   * R - sqaure value for model1 is 0.012 which is very low , indicates weak or non-existene of linearity in Attendance and ESE.\n  \n  \n2. * The values of t-statistics for y-intercept and slope are very high in model.\n   * The values of t-statistics for slope is less than 1 in model1.\n   \n  \n3. * The value of calculated RSE is 4.3 in model, which is acceptable.\n   * The value of calculated RSE is 37 in model1, which is very high.","e8cc7f9c":"### Importing Libraries","9ab9d4fa":"Correlation analysis is necessary to check the linearity between the input variables and output variable.","2e71ef0c":"### Model Preparation","fd9919f8":"### Preprocessing","0bef20e6":"## 2. Model using Attendance as input feature","5ba57064":"### Model Preparation","7e7b0a85":"### Correlation Analysis","66c09789":"## Final Conclusion","f246ef87":"### Preprocessing","6dae500f":"* input vector - exog\n* output vector - endog\n\nby using **sm.add_constant** we can add constant unit vector in input features.","7736ad2c":"### Predicting Marks","ce22a500":"# Simple Linear Regression by Ordinary Least Square Method","77e1a447":"### Calculating Residual Standard Error","3ca135ea":"### Loading Data","22045dab":"### Calculating Residual Standard Error ","aff88bd8":"So Model with ***MSE*** as input feature is **better**.\n\nModel with ***Attendance*** as input feature is **not acceptable**.","63f50c51":"![RSS.png](attachment:RSS.png)"}}