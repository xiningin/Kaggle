{"cell_type":{"f0b8a606":"code","fe4fb9e9":"code","230662ea":"code","53ba07bd":"code","0e972ae6":"code","83520165":"code","051c6145":"code","319da33d":"code","0784517b":"code","501f3d79":"code","b4ee21bb":"code","32ba11a5":"code","6c2c0d26":"code","64ae6ec2":"code","ad57403f":"code","44fbe1fd":"code","32cd160c":"code","fa20b2a4":"code","699ec705":"code","8a003701":"code","9d03c8a5":"code","84e9a5de":"code","b767f816":"code","c2a88add":"code","419821fe":"code","d6de8218":"code","761a5bf7":"code","b83e183a":"code","bbd3ca92":"code","d8171a56":"code","e8189cdf":"code","d2ccc979":"code","bd6bc1bc":"code","ce1d8125":"code","88b39d29":"code","f2c591f2":"code","29be8fd3":"code","83d6bc1e":"code","3eacb422":"code","77b0b29e":"code","8fc08a2b":"code","bf42bcca":"code","4fed3095":"code","6fc19ea3":"code","876b2808":"code","8b848a36":"code","68c7a6e1":"code","7d753142":"code","f7beee7e":"code","a09b2734":"code","e0a88c72":"code","79419635":"code","3f9d10b0":"code","45b0742b":"code","efe34b1c":"code","0d2279b5":"code","1dc665fd":"code","9821d091":"code","52d17f26":"code","fb045647":"code","1c550469":"code","0d42160b":"code","ae684990":"code","e537179b":"code","8f9463e7":"code","a7b99946":"code","7b07b6e4":"code","57355ddb":"code","a986df3f":"code","965eafc0":"code","2a66bf8b":"code","8de9ab86":"code","f6828261":"code","1852bd81":"code","bca6328f":"code","cc176559":"code","040939c2":"code","6d9b5bc8":"code","704777a5":"code","42e5726c":"code","5930358e":"code","1c865c01":"code","ddaccafc":"code","6a67c3b3":"code","dc87396c":"code","0e89bb44":"code","afd5ce4e":"code","40a1fdac":"code","d778376e":"code","ba921f33":"code","ae2ea1f9":"code","273f0950":"code","914408de":"code","d9d7b90b":"code","8bae69cc":"code","ea5006ae":"code","78161048":"code","255ea344":"code","86fabb4a":"code","5c439b48":"code","f3ae385d":"code","baf8faa2":"code","0281b7b9":"code","1fc0a771":"code","1fa54d50":"code","a1e61a85":"code","c7b2c957":"code","8158af09":"code","ea1ab014":"code","3e705a82":"code","fbdb5ae8":"code","96d754de":"code","f784750b":"markdown","7b5b5ce1":"markdown","25817eb0":"markdown"},"source":{"f0b8a606":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\nfull = False #\u8bbe\u4e3aFalse\u4e0d\u663e\u793a\u989d\u5916\u7684\u9ad8\u65af\u8d5b\u5fb7\u5c14","fe4fb9e9":"A = np.zeros([10,10])","230662ea":"A\n    ","53ba07bd":"for i in range(2, 10):\n    A[i][i-2] = 1\n    A[i-2][i] = 1","0e972ae6":"A","83520165":"for i in range(1, 10):\n    A[i][i-1] = -4\n    A[i-1][i] = -4","051c6145":"A","319da33d":"for i in range(0, 10):\n    A[i][i] = 6","0784517b":"A","501f3d79":"A[0][0] = 9\nA[8][8] = 5\nA[9][9] = 1\nA[9][8] = -2\nA[8][9] = -2","b4ee21bb":"A","32ba11a5":"def init_func_1(n):\n    A = np.zeros([n,n])\n    for i in range(2, n):\n        A[i][i-2] = 1\n        A[i-2][i] = 1\n    for i in range(1, n):\n        A[i][i-1] = -4\n        A[i-1][i] = -4\n    for i in range(0, n):\n        A[i][i] = 6\n    A[0][0] = 9\n    A[n-2][n-2] = 5\n    A[n-1][n-1] = 1\n    A[n-1][n-2] = -2\n    A[n-2][n-1] = -2\n    \n    return A","6c2c0d26":"A = init_func_1(100)","64ae6ec2":"def LU_decomposition(A):\n    n=len(A[0])\n    L = np.zeros([n, n])\n    U = np.zeros([n, n])\n    for i in range(n):\n        L[i][i]=1\n        if i==0:\n            U[0][0] = A[0][0]\n            for j in range(1,n):\n                U[0][j]=A[0][j]\n                L[j][0]=A[j][0]\/U[0][0]\n        else:\n                for j in range(i, n):#U\n                    temp=0\n                    for k in range(0, i):\n                        temp = temp+L[i][k] * U[k][j]\n                    U[i][j]=A[i][j]-temp\n                for j in range(i+1, n):#L\n                    temp = 0\n                    for k in range(0, i ):\n                        temp = temp + L[j][k] * U[k][i]\n                    L[j][i] = (A[j][i] - temp)\/U[i][i]\n    return L,U\n","ad57403f":"L,U = LU_decomposition(A)","44fbe1fd":"L","32cd160c":"b = np.ones(L.shape[0])","fa20b2a4":"y = np.linalg.solve(L, b) # \u6c42\u89e3Ly=b","699ec705":"x = np.linalg.solve(U,y)# \u6c42\u89e3Ux=y","8a003701":"x","9d03c8a5":"err = b - np.dot(A, x)","84e9a5de":"abs(err).max()","b767f816":"np.linalg.cond(A)","c2a88add":"A = init_func_1(1000)\nL,U = LU_decomposition(A)\nb = np.ones(L.shape[0])\n","419821fe":"np.linalg.cond(A)","d6de8218":"y = np.linalg.solve(L, b) # \u6c42\u89e3Ly=b\n","761a5bf7":"x = np.linalg.solve(U,y)# \u6c42\u89e3Ux=y","b83e183a":"err = b - np.dot(A, x)\nabs(err).max()","bbd3ca92":"def Cholesky(matrix):\n    w = matrix.shape[0]\n    G = np.zeros((w,w))#\u5b9e\u9645\u4e0a\u53ea\u7528\u4e00\u534a\u7684\u7a7a\u95f4\u5c31\u53ef\u4ee5\u5b8c\u6210\u77e9\u9635\u5206\u89e3\n    for i in range(w):\n        G[i,i] = (matrix[i,i] - np.dot(G[i,:i],G[i,:i].T))**0.5\n        for j in range(i+1,w):\n            G[j,i] = (matrix[j,i] - np.dot(G[j,:i],G[i,:i].T))\/G[i,i]\n    return G","d8171a56":"A = init_func_1(5)","e8189cdf":"L = Cholesky(A)","d2ccc979":"b = np.ones(L.shape[0])","bd6bc1bc":"y = np.linalg.solve(L, b) # \u6c42\u89e3Ly=b","ce1d8125":"x = np.linalg.solve(L.T, y)# \u6c42\u89e3L^T * x=y","88b39d29":"err = b - np.dot(A, x)","f2c591f2":"abs(err).max()","29be8fd3":"A = init_func_1(10)\nL = Cholesky(A)\nb = np.ones(L.shape[0])\ny = np.linalg.solve(L, b) # \u6c42\u89e3Ly=b\nx = np.linalg.solve(L.T, y)# \u6c42\u89e3L^T * x=y\nerr = b - np.dot(A, x)\nabs(err).max()","83d6bc1e":"A_2 = np.zeros([10, 10])","3eacb422":"A_2","77b0b29e":"for i in range(1, 10):\n    A_2[i][i-1] = -1\n    A_2[i-1][i] = -1","8fc08a2b":"for i in range(0, 10):\n    A_2[i][i] = 2","bf42bcca":"A_2","4fed3095":"def init_func_2(n):\n    A_2 = np.zeros([n, n])\n    b_2 = np.zeros(n)\n    b_2[0] = 1\n    b_2[n-1] = 1\n    for i in range(1, n):\n        A_2[i][i-1] = -1\n        A_2[i-1][i] = -1\n    for i in range(0, n):\n        A_2[i][i] = 2\n    return A_2, b_2","6fc19ea3":"def spectral_radius(M):\n    a,b=np.linalg.eig(M) #a\u4e3a\u7279\u5f81\u503c\u96c6\u5408\uff0cb\u4e3a\u7279\u5f81\u503c\u5411\u91cf\n    return np.max(np.abs(a)) #\u8fd4\u56de\u8c31\u534a\u5f84","876b2808":"A_2, b_2 = init_func_2(10)","8b848a36":"A_2, b_2","68c7a6e1":"L_U = np.copy(A_2)","7d753142":"D = np.zeros([10, 10])","f7beee7e":"for i in range(D.shape[0]):\n    D[i,i]= A_2[i,i]","a09b2734":"for i in range(L_U.shape[0]):\n    L_U[i,i] = 0","e0a88c72":"L_U","79419635":"D_inv = np.linalg.inv(D)","3f9d10b0":"G = -1 * np.dot(D_inv, L_U)\ng = np.dot(D_inv, b_2)","45b0742b":"def Jacobi(G, g, x_0, err):\n    times = 0\n    cur_err = float('inf')\n    cur_x = x_0\n    while cur_err > err:\n        last_x = cur_x\n        cur_x = np.dot(G, cur_x) + g\n        cur_err = abs(last_x - cur_x).max()\n        times = times + 1\n    print(cur_err)\n    \n    return cur_x, times","efe34b1c":"x_solve = Jacobi(G, g, np.zeros(10), 1e-8)","0d2279b5":"def Jacobi_auto(n):\n    A_2, b_2 = init_func_2(n)\n    L_U = np.copy(A_2)\n    for i in range(L_U.shape[0]):\n        L_U[i,i]=0\n    D = np.zeros([n, n])\n    for i in range(D.shape[0]):\n        D[i,i]= A_2[i,i]\n    D_inv = np.linalg.inv(D)\n    G = -1 * np.dot(D_inv, L_U)\n    g = np.dot(D_inv, b_2)\n    \n    cur_x, times = Jacobi(G, g, np.zeros(n), 1e-8)\n    err = b_2 - np.dot(A_2, cur_x)\n    return spectral_radius(G), times, err\n    ","1dc665fd":"spe_10, times_10, err_10  = Jacobi_auto(10)","9821d091":"spe_10","52d17f26":"times_10","fb045647":"abs(err_10).max()","1c550469":"spe_20, times_20, err_20  = Jacobi_auto(20)","0d42160b":"spe_20","ae684990":"times_20","e537179b":"abs(err_20).max()","8f9463e7":"spe_50, times_50, err_50  = Jacobi_auto(50)","a7b99946":"spe_50","7b07b6e4":"times_50","57355ddb":"abs(err_50).max()","a986df3f":"spe_100, times_100, err_100  = Jacobi_auto(100)","965eafc0":"times_100","2a66bf8b":"spe_100","8de9ab86":"abs(err_100).max()","f6828261":"spe_200, times_200, err_200  = Jacobi_auto(200)","1852bd81":"spe_200","bca6328f":"times_200","cc176559":"abs(err_200).max()","040939c2":"def G_S(a, b, x, g):   # a\u4e3a\u7cfb\u6570\u77e9\u9635  b\u589e\u5e7f\u7684\u4e00\u5217  x\u8fed\u4ee3\u521d\u59cb\u503c  g\u8ba1\u7b97\u7cbe\u5ea6\n    x = x.astype(float)  #\u8bbe\u7f6ex\u7684\u7cbe\u5ea6\uff0c\u8ba9x\u8ba1\u7b97\u4e2d\u80fd\u663e\u793a\u591a\u4f4d\u5c0f\u6570\n    m, n = a.shape\n    times = 0          #\u8fed\u4ee3\u6b21\u6570\n    if (m < n):\n        print(\"There is a \u89e3\u7a7a\u95f4\u3002\")  # \u4fdd\u8bc1\u65b9\u7a0b\u4e2a\u6570\u5927\u4e8e\u672a\u77e5\u6570\u4e2a\u6570\n    else:\n        while True:\n            for i in range(n):\n                s1 = 0\n                tempx = x.copy()    #\u8bb0\u5f55\u4e0a\u4e00\u6b21\u7684\u8fed\u4ee3\u7b54\u6848\n                for j in range(n):\n                    if i != j:\n                        s1 += x[j] * a[i][j]\n                x[i] = (b[i] - s1) \/ a[i][i]\n                times += 1                  #\u8fed\u4ee3\u6b21\u6570\u52a0\u4e00\n            gap = max(abs(x - tempx))       #\u4e0e\u4e0a\u4e00\u6b21\u7b54\u6848\u6a21\u7684\u5dee\n\n            if gap < g:             #\u7cbe\u5ea6\u6ee1\u8db3\u8981\u6c42\uff0c\u7ed3\u675f\n                print(gap)\n                break\n    print(times)\n    print(x)\n    return x\n","6d9b5bc8":"def G_S_auto(n):\n    if(full == False):\n        return\n    A_2, b_2 = init_func_2(n)\n    \n    x = G_S(A_2, b_2, np.zeros(n), 1e-8)\n    err = b_2 - np.dot(A_2, x)\n    return abs(err).max()","704777a5":"G_S_auto(10)","42e5726c":"G_S_auto(20)","5930358e":"G_S_auto(50)","1c865c01":"G_S_auto(100)","ddaccafc":"G_S_auto(200)","6a67c3b3":"A_2, b_2 = init_func_2(10)","dc87396c":"A_2","0e89bb44":"A_t = A_2.copy()","afd5ce4e":"U_t = A_2.copy()","40a1fdac":"for i in range(0, len(U_t)):\n        for j in range(0, i+1):\n            U_t[i][j] = 0","d778376e":"U_t","ba921f33":"for i in range(0, len(A_t)):\n    for j in range(i+1, len(A_t)):\n        A_t[i][j] = 0","ae2ea1f9":"A_t","273f0950":"def G_S_LD(n):\n    A_2, b_2 = init_func_2(n)\n    L_D = np.copy(A_2)\n    U = np.copy(A_2)\n    for i in range(0, len(L_D)):\n        for j in range(i+1, len(L_D)):\n            L_D[i][j] = 0\n    for i in range(0, len(L_D)):\n        for j in range(0, i+1):\n            U[i][j] = 0        \n    \n    G = -1 * np.dot(np.linalg.inv(L_D), U)\n    g = np.dot(np.linalg.inv(L_D), b_2)\n    \n    cur_x, times = Jacobi(G, g, np.zeros(n), 1e-8)\n    err = b_2 - np.dot(A_2, cur_x)\n    return times, err, spectral_radius(G)","914408de":"t, e, spe = G_S_LD(10)","d9d7b90b":"t","8bae69cc":"abs(e).max()","ea5006ae":"spe","78161048":"t, e, spe = G_S_LD(20)","255ea344":"t","86fabb4a":"abs(e).max()","5c439b48":"spe","f3ae385d":"t, e, spe = G_S_LD(50)","baf8faa2":"t","0281b7b9":"abs(e).max()","1fc0a771":"spe","1fa54d50":"t, e, spe = G_S_LD(100)","a1e61a85":"t","c7b2c957":"abs(e).max()","8158af09":"spe","ea1ab014":"t, e, spe = G_S_LD(200)","3e705a82":"t","fbdb5ae8":"abs(e).max()","96d754de":"spe","f784750b":"# \u9ad8\u65af-\u8d5b\u5fb7\u5c14\u8fed\u4ee3\u6cd5","7b5b5ce1":"# 2.","25817eb0":"# Cholesky \u5206\u89e3"}}