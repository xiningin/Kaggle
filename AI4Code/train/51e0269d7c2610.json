{"cell_type":{"a10704a1":"code","a9ab9557":"code","82fbf2fe":"code","c260d920":"code","72af2d8c":"code","f05c492d":"code","372924cf":"markdown","8d0e84d7":"markdown","a0e52a89":"markdown","9b0f956b":"markdown","660a2995":"markdown","ed1e0ce8":"markdown"},"source":{"a10704a1":"# Install:\n# Kaggle environments.\n!git clone https:\/\/github.com\/Kaggle\/kaggle-environments.git\n!cd kaggle-environments && pip install .\n\n# GFootball environment.\n!apt-get update -y\n!apt-get install -y libsdl2-gfx-dev libsdl2-ttf-dev\n\n# Make sure that the Branch in git clone and in wget call matches !!\n!git clone -b v2.8 https:\/\/github.com\/google-research\/football.git\n!mkdir -p football\/third_party\/gfootball_engine\/lib\n\n!wget https:\/\/storage.googleapis.com\/gfootball\/prebuilt_gameplayfootball_v2.8.so -O football\/third_party\/gfootball_engine\/lib\/prebuilt_gameplayfootball.so\n!cd football && GFOOTBALL_USE_PREBUILT_SO=1 pip3 install .","a9ab9557":"from kaggle_environments import make\nenv = make(\"football\", configuration={\"save_video\": True, \"scenario_name\": \"11_vs_11_kaggle\", \"running_in_notebook\": True}, debug=True)\nobs = env.reset()\nprint(obs[0].keys())\nprint(len(obs[0]['observation']['players_raw'][0].keys()))","82fbf2fe":"%%writefile submission.py\n'''1. This cell only create a new file submission.py and there is no effect on any variables'''\n'''We `writefile` because we submit a python file to get evaluated'''\n\n#\n# https:\/\/github.com\/Kaggle\/kaggle-environments\/blob\/master\/kaggle_environments\/envs\/football\/helpers.py\nfrom kaggle_environments.envs.football.helpers import Action, human_readable_agent\n\nimport numpy as np\nimport sys\n\ndummy = 0","c260d920":"print(dummy)","72af2d8c":"%%writefile -a submission.py\n'''2. and this appends below code to the existing python file (submission.py). Still it does not anything to existing variables'''\n\n# To see the progress\ni = 0\n\n# documentation for @human_readable_agent\n# https:\/\/github.com\/Kaggle\/kaggle-environments\/blob\/master\/kaggle_environments\/envs\/football\/test_football.py\n\n@human_readable_agent\ndef agent(obs):\n    \n    global i\n\n    # Appears in `env.run()`\n    sys.stdout.write('\\rRendering video... {}\/3000'.format(i))\n    i += 1\n    \n    # Make sure player is running.\n    if Action.Sprint not in obs['sticky_actions']:\n        return Action.Sprint\n\n    # We only can manipulate a single player at the same time\n    # ref:https:\/\/www.kaggle.com\/c\/google-football\/discussion\/188474#1036499\n    controlled_player_pos = obs['left_team'][obs['active']]\n\n    #OFFENSE\n    if obs['ball_owned_player'] == obs['active'] and obs['ball_owned_team'] == 0:\n        \n        # controlled player is close enough to the goal \n        # (would need to calculate actual distance, not difference in x)\n        if controlled_player_pos[0] > 0.6:\n            return Action.Shot\n        \n        # Otherwise passes 70%\n        if np.random.rand() < 0.7:\n            return Action.ShortPass\n        \n        return Action.Right\n    \n    #DEFENSE\n    else:\n        # Run towards the ball.\n        if obs['ball'][0] > controlled_player_pos[0] + 0.05:\n            return Action.Right\n        if obs['ball'][0] < controlled_player_pos[0] - 0.05:\n            return Action.Left\n        if obs['ball'][1] > controlled_player_pos[1] + 0.05:\n            return Action.Bottom\n        if obs['ball'][1] < controlled_player_pos[1] - 0.05:\n            return Action.Top\n        # Try to take over the ball if close to the ball.\n        return Action.Slide","f05c492d":"# Set up the Environment again.\nenv = make(\"football\", configuration={\"save_video\": True, \"scenario_name\": \"11_vs_11_kaggle\", \"running_in_notebook\": True}, debug=True)\n\n# You could use \"do_nothing\" for `right_team` or another python file.\nleft_team = \"\/kaggle\/working\/submission.py\"\nright_team = \"\/kaggle\/working\/submission.py\"\n\n# Run the simulator\noutput = env.run([left_team, right_team])[-1]\n\n# Match result. `info` is empty unless it is interrupted by exceptions or timeout.\nprint('Left player: reward = %s, status = %s, info = %s' % (output[0]['reward'], output[0]['status'], output[0]['info']))\nprint('Right player: reward = %s, status = %s, info = %s' % (output[1]['reward'], output[1]['status'], output[1]['info']))\n\n# Finally,\n# watch a match\n# on the couch!!\nenv.render(mode=\"human\", width=800, height=600) ","372924cf":"# Create a submission file","8d0e84d7":"# Install GFootball Environment","a0e52a89":"# Append code to the submission file","9b0f956b":"# Check the observations","660a2995":"See? The cell above has NO EFFECT on cell outside of it.","ed1e0ce8":"# Object of this kernel\n\n- to get more people to involved in this competition (less participants to get overwhelmed in the beginning)\n- to explain how the submission process works (because I struggled understanding it)"}}