{"cell_type":{"9b4a60c9":"code","cda558b2":"code","3940d30c":"code","4094d7cc":"code","59f2c7c3":"code","5ba18f3b":"code","a6d0c4c3":"code","6ee389ff":"code","fc2a5bdb":"code","42e1e6f6":"code","5b43920f":"code","879d7fb9":"code","f0b588af":"code","d8b7c5ba":"code","6b0d720b":"code","14c42833":"code","62b9661c":"code","89367769":"code","0929a28f":"code","e761b5a6":"code","d13fe545":"code","40a87871":"code","db27ebe7":"markdown","9f0d7d69":"markdown","47066635":"markdown","64b58212":"markdown","8c36f558":"markdown","df0a76eb":"markdown","9553e68d":"markdown","bb2ebdb5":"markdown","58916331":"markdown","1d1d429c":"markdown","704dedba":"markdown","5b7ac022":"markdown","b4bfafb0":"markdown","cd2a8135":"markdown","feaa1141":"markdown","2abce96f":"markdown","8039d2d0":"markdown","86e6057e":"markdown","d3d62eeb":"markdown","d18f02f2":"markdown","af8e5f07":"markdown","18bb68f6":"markdown","b76923d4":"markdown","59685a06":"markdown","da43ef91":"markdown","2b1e1d36":"markdown","e884d776":"markdown","6987051f":"markdown","0738e411":"markdown","3bfbeba2":"markdown"},"source":{"9b4a60c9":"# hello.py\n# By Md Khalid\n# My first Python program\n","cda558b2":"# hello.py\n# By Md Khalid\n# My first Python program\nprint(\"Hello World\")\na = 1\nb = 2\nc = a + b\nprint(c)\n\n# A program to demonstrate the use of print function\n# Print out a shape of a diamond\nprint(\"     *\")\nprint(\"    * *\")\nprint(\"   *   *\")\nprint(\"  *     *\")\nprint(\" *       *\")\nprint(\"*         *\")\nprint(\" *       *\")\nprint(\"  *     *\")\nprint(\"   *   *\")\nprint(\"    * *\")\nprint(\"     *\")\n\n# A program to demonstrate the use of print function\n# Print out Unimovies program\nprint(\"Welcome to Unimovies!\");\nprint() #this code prints a newline\nprint(\"Thursday July 30 at 7.15pm: Inside Out\")\nprint()\nprint(\"Director: Pete Docter, Ronaldo Del Carmen\")\nprint(\"Writer: Pete Docter, Meg LeFauve\")\nprint(\"Starring: Diane Lane, Amy Poehler, Mindy Kaling\")\nprint(\"Released: June 18, 2015\")\nprint(\"Rating: PG\")\nprint(\"Runtime: 102 minutes\")\nprint(\"Websites: http:\/\/movieweb.com\/movie\/inside-out-2015\")","3940d30c":"# Print Full Name using string concatenation\nfirst_name = \"Md Khalid\"\nlast_name = \"Siddiqui\"\nfull_name = first_name + \" \" + last_name\nprint(\"My name is \" + full_name + \".\")\n\n#Print Subjects list enrolled in using concatenation\nsubject1 = \"ISIT111\"\nsubject2 = \"MATH101\"\nsubject3 = \"ACCY113\"\nprint(\"My enrolled subjects are: \" + subject1 + \", \" + subject2\n+ \", \" + subject3 + \".\")\n","4094d7cc":"\n#Whats wrong with this code\n\n#fav_number = 7\n#print(\"My favorite number is \" + fav_number)\n\n#Corrected code\nfav_number = 7\nprint(\"My favorite number is \" + str(fav_number))\n\n#str function application example 1\nnumber1 = 10\nnumber2 = 20\nsum = number1 + number2\nprint(\"The sum of \" + str(number1) + \" and \" + str(number2)\n+ \" is \" + str(sum) + \".\")\n\n#str function application example 2\nSECOND_PER_MINUTE = 60\nminute = 5\nsecond = minute * SECOND_PER_MINUTE\nprint(str(minute) + \" minutes has \" + str(second) + \" seconds\")\n\n#Convert Number to string example\nnumber1 = 10\nnumber2 = 20\nsum = number1 + number2\nprint(\"The sum of \" + str(number1) + \" and \" + str(number2)\n+ \" is \" + str(sum) + \".\")","59f2c7c3":"\nsubject1_code = \"CSCI111\"\nsubject1_mark = 80\nsubject2_code = \"MATH103\"\nsubject2_mark = 75\nsubject3_code = \"PHYS101\"\nsubject3_mark = 85\nprint(\"Exam result. \" + subject1_code + \": \" + str(subject1_mark) + \", \" + subject2_code + \": \" + str(subject2_mark) + \", \" + subject3_code + \": \" + str(subject3_mark) + \".\")\n","5ba18f3b":"subject1_code = \"CSCI111\"\nsubject1_mark = 80\nsubject2_code = \"MATH103\"\nsubject2_mark = 75\nsubject3_code = \"PHYS101\"\nsubject3_mark = 85\nprint(\"Exam result. \" \\\n + subject1_code + \": \" + str(subject1_mark) \\\n + \", \" \\\n + subject2_code + \": \" + str(subject2_mark) \\\n + \", \" \\\n + subject3_code + \": \" + str(subject3_mark) \\\n + \".\")\n","a6d0c4c3":"#How to include quotes\/tab\/single quote\/back slash\/backspace in your output \n\n#print(\"Welcome to Unimovies!\")\n#print(\"Thursday July 30 at 7.15pm: \"Inside Out\"\") #Invalid Syntax\n#use escape sequence[\\\"..string inside quotes..\\\"] for displaying quotes as output\n\nprint(\"Welcome to Unimovies!\")\nprint(\"Thursday July 30 at 7.15pm: \\\"Inside Out\\\"\")\n\n######Escape Sequence Meaning\n######\\\\ Backslash (\\)\n######\\' Single quote (')\n######\\\" Double quote (\")\n######\\b Backspace\n######\\n New line\n######\\t Tab\n\n#Example : Escape seqence \n\nprint(\"Your details:\\n\")\nprint(\"\\tName: \\\"Khalid Siddiqui\\\"\")\nprint(\"\\tSN: \\\"2012345\\\"\")\nprint(\"\\nEnrolment record:\\n\")\nprint(\"\\tMATH101\")\nprint(\"\\tCSCI201\")\n#Escape sequence examples\n\nprint(\"Escape sequence:\")\nprint(\"\\\\n : Insert a newline.\")\nprint(\"\\\\t : Insert a tab.\")\nprint(\"\\\\\\\" : Insert a double quote character.\")   #Why 3 times \/\/\/\nprint(\"\\\\\\' : Insert a single quote character.\")\nprint(\"\\\\\\\\ : Insert a backslash character.\")","6ee389ff":"fname = \"John\"\nlname = \"Smith\"\nprint(\"Hi {0} {1}!\".format(fname, lname))\nprint(\"{1} {2} is {0} years old\".format(fname, lname, 20)) #WTF\nprint(\"And his favorite number is {0}\".format(7))\n#left , right and center alignment\n#< left\n#> right\n#^ center\nprint(\"Exam result:\")\nprint(\"{0:<10}{1:<15}{2:>5}{3:>5}\".format(\"COMM104\", \"Commerce I\", \"75\", \"D\"))\nprint(\"{0:<10}{1:<15}{2:>5}{3:>5}\".format(\"FIN201\", \"Accounting\", \"85\", \"HD\"))\nprint(\"{0:<10}{1:<15}{2:>5}{3:>5}\".format(\"MTH202\", \"Analysis\", \"100\", \"HD\"))\nprint(\"{0:<10}{1:<15}{2:>5}{3:>5}\".format(\"ECTE110\", \"Circuits\", \"90\", \"HD\"))\nprint(\"1234567890123456789012345678901234567890\")\n\nprint(\"Exam result:\")\nprint(\"{0:<10}{1:^15}{2:>5}{3:>5}\".format(\"COMM104\", \"Commerce I\", \"75\", \"D\"))\nprint(\"{0:<10}{1:^15}{2:>5}{3:>5}\".format(\"FIN201\", \"Accounting\", \"85\", \"HD\"))\nprint(\"{0:<10}{1:^15}{2:>5}{3:>5}\".format(\"MTH202\", \"Analysis\", \"100\", \"HD\"))\nprint(\"{0:<10}{1:^15}{2:>5}{3:>5}\".format(\"ECTE110\", \"Circuits\", \"90\", \"HD\"))\nprint(\"1234567890123456789012345678901234567890\")\n\n#Table of 2 w\/o alignment\nprint(\"{0} x {1} = {2}\".format(1, 5, 1*5))\nprint(\"{0} x {1} = {2}\".format(2, 5, 2*5))\nprint(\"{0} x {1} = {2}\".format(3, 5, 3*5))\nprint(\"{0} x {1} = {2}\".format(4, 5, 4*5))\nprint(\"{0} x {1} = {2}\".format(5, 5, 5*5))\nprint(\"{0} x {1} = {2}\".format(6, 5, 6*5))\nprint(\"{0} x {1} = {2}\".format(7, 5, 7*5))\nprint(\"{0} x {1} = {2}\".format(8, 5, 8*5))\nprint(\"{0} x {1} = {2}\".format(9, 5, 9*5))\nprint(\"{0} x {1} = {2}\".format(10, 5, 10*5))\n\n#Table of 2 with right alignment\nprint(\"{0:>2} x {1:>1} = {2:>2}\".format(1, 5, 1*5))\nprint(\"{0:>2} x {1:>1} = {2:>2}\".format(2, 5, 2*5))\nprint(\"{0:>2} x {1:>1} = {2:>2}\".format(3, 5, 3*5))\nprint(\"{0:>2} x {1:>1} = {2:>2}\".format(4, 5, 4*5))\nprint(\"{0:>2} x {1:>1} = {2:>2}\".format(5, 5, 5*5))\nprint(\"{0:>2} x {1:>1} = {2:>2}\".format(6, 5, 6*5))\nprint(\"{0:>2} x {1:>1} = {2:>2}\".format(7, 5, 7*5))\nprint(\"{0:>2} x {1:>1} = {2:>2}\".format(8, 5, 8*5))\nprint(\"{0:>2} x {1:>1} = {2:>2}\".format(9, 5, 9*5))\nprint(\"{0:>2} x {1:>1} = {2:>2}\".format(10, 5, 10*5))","fc2a5bdb":"#Examples Naming Convention\nfirst_name = \"John\"                       #lower_case_with_underscores for normal variables\nlast_name = \"Smith\"                       #lower_case_with_underscores for normal variables\nfull_name = first_name + \" \" + last_name  #lower_case_with_underscores for normal variables\nfav_number = 7                            #lower_case_with_underscores for normal variables\nsubject1 = \"ISIT111\"\nsubject2 = \"MATH101\"\nsubject3 = \"ACCY113\"\nSECOND_PER_MINUTE = 60                    #UPPER_CASE_WITH_UNDERSCORES for constant\nminute = 5\nsecond = minute * SECOND_PER_MINUTE\n","42e1e6f6":"#3.5 Miscellaneous\n#Candy Box: $4\/each or $10\/for 3 boxes\nbox_count = 50\ngroup_of_3_count = box_count \/\/ 3\nleft_over_count = box_count - 3 * group_of_3_count\ncost = group_of_3_count * 10 + left_over_count * 4\nprint(\"{0} candy boxes cost: ${1}\".format(box_count, cost))","5b43920f":"#Full name program with input command\nfirst_name = input(\"Please enter your first name: \")\nlast_name = input(\"Please enter your last name: \")\nfull_name = first_name + \" \" + last_name\nprint(\"Your name is \" + full_name + \".\")\n","879d7fb9":"#using int() function\n\ninput1 = input(\"Enter the first integer: \")\nnum1 = int(input1)\ninput2 = input(\"Enter the second integer: \")\nnum2 = int(input2)\nsum = num1 + num2\nprint(\"The sum of {0} and {1} is {2}\".format(num1, num2, sum))","f0b588af":"#Using float() function\n\ninput1 = input(\"Enter the first number: \")\nnum1 = float(input1)\ninput2 = input(\"Enter the second number: \")\nnum2 = float(input2)\nsum = num1 + num2\nprint(\"The sum of {0} and {1} is {2}\".format(num1, num2, sum))","d8b7c5ba":"#Code without rounding\ninput_a = input(\"Enter number of students with grade A: \")\ngrade_a = int(input_a)\ninput_b = input(\"Enter number of students with grade B: \")\ngrade_b = int(input_b)\ninput_c = input(\"Enter number of students with grade C: \")\ngrade_c = int(input_c)\ntotal_student = grade_a + grade_b + grade_c\n# calculate percentage\npct_a = grade_a * 100 \/ total_student\npct_b = grade_b * 100 \/ total_student\npct_c = grade_c * 100 \/ total_student\nprint(\"Total number of students: {0}\".format(total_student))\nprint(\"Grade statistics: A {0}%, B {1}%, C {2}%\".format(pct_a,\npct_b, pct_c))\n","6b0d720b":"#Code with rounding\ninput_a = input(\"Enter number of students with grade A: \")\ngrade_a = int(input_a)\ninput_b = input(\"Enter number of students with grade B: \")\ngrade_b = int(input_b)\ninput_c = input(\"Enter number of students with grade C: \")\ngrade_c = int(input_c)\ntotal_student = grade_a + grade_b + grade_c\n# calculate percentage\npct_a = round(grade_a * 100 \/ total_student)\npct_b = round(grade_b * 100 \/ total_student)\npct_c = round(grade_c * 100 \/ total_student)\nprint(\"Total number of students: {0}\".format(total_student))\nprint(\"Grade statistics: A {0}%, B {1}%, C {2}%\".format(pct_a,\npct_b, pct_c))\n","14c42833":"#rounding previous result upto 2 decimal places\ninput1 = input(\"Enter assignment 1 mark: \")\na1 = float(input1)\ninput2 = input(\"Enter assignment 2 mark: \")\na2 = float(input2)\ninput3 = input(\"Enter assignment 3 mark: \")\na3 = float(input3)\n# calculate average mark\naverage = round((a1 + a2 + a3)\/3, 2)    #rounding to 2 decimals\nprint(\"Average mark: {0}\".format(average))","62b9661c":"box_input = input(\"How many boxes would you like? \")\nbox_count = int(box_input)\nUNIT_PRICE = 4\ncost = UNIT_PRICE * box_count\nif (box_count == 1):\n print(\"{0} box: ${1}\".format(box_count, cost))      #Note the indention to specify the statement is under if block\nelse:\n print(\"{0} boxes: ${1}\".format(box_count, cost))    #Note the indention to specify the statement is under else block","89367769":"#Example 1\n#grade A: 100-80, B: 79-60, C: 59-40, D: 39-0\nmark_input = input(\"Please enter mark: \")\nmark = int(mark_input)\nif (mark >= 80):\n grade = \"A\"\nelif (mark >= 60):\n grade = \"B\"\nelif (mark >= 40):\n grade = \"C\"\nelse:\n grade = \"D\"\nprint(\"Mark {0}, Grade {1}\".format(mark, grade))","0929a28f":"#Exmple 2\n#Even\/Odd Integer\nnum_input = input(\"Enter an integer: \")\nnum = int(num_input)\nif (num == 0):\n print(\"This number is zero\")\nelif (num > 0):                 #same indention as 'if'\n if (num % 2 == 0):\n  print(\"This number is positive and even\")\n else:\n  print(\"This number is positive and odd\")\nelse:                           #same indention as 'if' and 'elif'\n if (num % 2 == 0):\n  print(\"This number is negative and even\")\n else:\n  print(\"This number is negative and odd\")","e761b5a6":"#print maximum of given numbers\ninput1 = input(\"Enter the 1st integer: \")\nn1 = int(input1)\ninput2 = input(\"Enter the 2nd integer: \")\nn2 = int(input2)\ninput3 = input(\"Enter the 3rd integer: \")\nn3 = int(input3)\nmax_n = n1\nif (n2 > max_n):\n max_n = n2\n\nif (n3 > max_n):\n max_n = n3\nprint(\"Max of {0}, {1}, {2} is {3}\".format(n1, n2, n3, max_n))\n\n","d13fe545":"# show menu\nprint(\"------------------------------------------------\")\nprint(\" Welcome to Science Park! \")\nprint()\nprint(\"Admission Charges: Adult $35, Child $20 \")\nprint(\"Stargazing Show: $10\/person \")\nprint()\nprint(\"Free Science Park Hats if you spend $150 or more\")\nprint(\"10% discount if you spend $200 or more \")\nprint(\"------------------------------------------------\")\nprint()\n\n# take order from user\nprint(\"Please make your order.\")\nprint()\n\n# ask number of adults\nadult_input = input(\"Enter number of adults: \")\nadult = int(adult_input)\n# ask number of children\nchild_input = input(\"Enter number of children: \")\nchild = int(child_input)\n# ask the additional star show\nstar_show_input = input(\"Add Stargazing Show: (Y\/N) \")\n\nADULT_PRICE = 35\nCHILD_PRICE = 20\nSHOW_PRICE = 10\n# calculate the total charge, no discount calculation yet\nadult_cost = ADULT_PRICE * adult\nchild_cost = CHILD_PRICE * child\nif ((star_show_input == \"Y\") or (star_show_input == \"y\")):\n show_cost = SHOW_PRICE * (adult + child)\nelse:\n show_cost = 0\ntotal_cost = adult_cost + child_cost + show_cost\n\nDISCOUNT_MIN = 200 # the minimum amount to have discount\nDISCOUNT_PCT = 10 # the discount percentage\n# calculate the final charge, take discount into consideration\nif (total_cost >= DISCOUNT_MIN):\n # eligible for discount\n final_cost = total_cost * (100 - DISCOUNT_PCT) \/ 100\n print(\"Total cost: ${0}\".format(total_cost))\n print(\"Discount {0}%\".format(DISCOUNT_PCT))\n print(\"Final charge: ${0}\".format(final_cost))\nelse:\n # not eligible for discount\n final_cost = total_cost\n print(\"Final charge: ${0}\".format(final_cost))\n\nFREE_HAT_MIN = 150 # the minimum amount to have free hat\n# check Free Hat\nif (total_cost >= FREE_HAT_MIN):\n print(\"Please collect your free Science Park Hats at the counter.\")\nprint()\nprint(\"Enjoy your day!!!\")","40a87871":"#Numbers in each row, and in each column,\n#and in each diagonals, all add up to the same number!\nprint(\"Magic square\")\nprint(\"m11 m12 m13\")\nprint(\"m21 m22 m23\")\nprint(\"m31 m32 m33\")\n#get user input\ninput11 = input(\"Enter m11: \")\nm11 = int(input11)\ninput12 = input(\"Enter m12: \")\nm12 = int(input12)\ninput13 = input(\"Enter m13: \")\nm13 = int(input13)\ninput21 = input(\"Enter m21: \")\nm21 = int(input21)\ninput22 = input(\"Enter m22: \")\nm22 = int(input22)\ninput23 = input(\"Enter m23: \")\nm23 = int(input23)\ninput31 = input(\"Enter m31: \")\nm31 = int(input31)\ninput32 = input(\"Enter m32: \")\nm32 = int(input32)\ninput33 = input(\"Enter m33: \")\nm33 = int(input33)\n# display the numbers\nprint(\"{0:>10}{1:>10}{2:>10}\".format(m11, m12, m13))\nprint(\"{0:>10}{1:>10}{2:>10}\".format(m21, m22, m23))\nprint(\"{0:>10}{1:>10}{2:>10}\".format(m31, m32, m33))\n# calculate the sums\nr1 = m11 + m12 + m13\nr2 = m21 + m22 + m23\nr3 = m31 + m32 + m33\nc1 = m11 + m21 + m31\nc2 = m12 + m22 + m32\nc3 = m13 + m23 + m33\nd1 = m11 + m22 + m33\nd2 = m13 + m22 + m31\nprint(\"Row sums: {0}, {1}, {2}\".format(r1, r2, r3))\nprint(\"Column sums: {0}, {1}, {2}\".format(c1, c2, c3))\nprint(\"Diagonal sums: {0}, {1}\".format(d1, d2))\n# checking the magic square condition\nif ((r2 == r1) and (r3 == r1) and (c1 == r1) and (c2 == r1) and\n(c3 == r1) and (d1 == r1) and (d2 == r1)):\n print(\"This is a magic square\")\nelse:\n print(\"This is not a magic square\")","db27ebe7":"***4.4.1 Rounding numbers up to\na certain number of decimal digits***","9f0d7d69":"**#Theory**\n#+= x += 2 is the same as x = x + 2\n#-= x -= 2 is the same as x = x - 2\n#*= x *= 2 is the same as x = x * 2\n#\/= x \/= 2 is the same as x = x \/ 2\n#\/\/= x \/\/= 2 is the same as x = x \/ 2\n#**= x **= 2 is the same as x = x ** 2\n#%= x %= 2 is the same as x = x % 2\n\n","47066635":"# ***LECTURE 4***","64b58212":"We can put comments anywhere in the program:\n- to make the program clearer for people to read and maintain\n- to help people understand our program better, especially, if our program has a special logic that needs explanation\n- comments are not code, so they will NOT be executed","8c36f558":"# ***LECTURE 5***","df0a76eb":"**2.2 Print Function**","9553e68d":"***3.4 STRING FORMAT***\n","bb2ebdb5":"***2.3 String concatenation (addition)***","58916331":"# ***LECTURE 2***","1d1d429c":"syntax:\n\nround(x, n)\nrounding off number x to n digits\nfrom the decimal point","704dedba":"# ***LECTURE 3***","5b7ac022":"***3.5 Naming Convention***","b4bfafb0":"***4.1 Get user input***","cd2a8135":"3.5(a)\n\n1. lower_case_with_underscores for normal variables\n\n2. UPPER_CASE_WITH_UNDERSCORES for constant\n\n\n3.5(b)\n\n\nThe following list shows the Python keywords. These are reserved words and we\nCANNOT use them as constant or variable or any other identifier names.\n\nKeywords:\n\n\nand      elif     if        print     as         else    import    raise\n \nassert   except   in        return    break      exec    is        try\n\nclass    finally  lambda    while     continue   for     not       with  \n\ndef      from     or        yield     del        global  pass\n","feaa1141":"***3.2 Breaking the line of code without altering output***","2abce96f":"***4.3 Convert a string into Decimal***","8039d2d0":"# ***5.5 MAGIC SQUARE***","86e6057e":"**2.1  Comments**","d3d62eeb":"# ***5.4 DEMO Science Park Ticket System***","d18f02f2":"***3.1 MULTILINE CODE STATEMENT***","af8e5f07":"***5.2 if - elif - elif - \u2026 - else***","18bb68f6":"***2.4 Translate number into string***","b76923d4":"***5.3 if (alone)***","59685a06":"Concept :\n\nif (condition1):\n \n statement\n \n statement\n \n ...\n \nelif (condition2):\n \n statement\n \n statement\n \n ...\n \nelif (condition2):\n \n statement\n \n statement\n \n ...\n \nelse:\n.\n statement\n \n statement\n \n ...","da43ef91":"***4.2 Convert a string into integer***","2b1e1d36":"***3.3 ESCAPE SEQUENCE***","e884d776":"***4.4 Rounding numbers***","6987051f":"first_name = input(\"Please enter your first name: \")\n\n#The program will wait for the user to enter a first name.\n#Then whatever the user enters, it will store in the variable\n#first_name\n","0738e411":"***5.1 if - else***","3bfbeba2":"Concept:\nif (some condition):\n\n[Indention]block 1 statements\n\n[Indention]...\n\nelse:\n\n[Indention]block 2 statements\n\n[Indention]..."}}