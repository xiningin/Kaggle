{"cell_type":{"0dac8a56":"code","a43f6468":"code","c34253ba":"code","49b3309f":"code","dbc67635":"code","7f64640f":"code","2167bc60":"code","1a41177a":"code","5c2a42e1":"code","a92c2d42":"code","7a85e9f6":"code","7a05634a":"code","91d62544":"code","f1eff613":"code","77c255e9":"code","6fd33bfd":"code","cd956b40":"code","6cd17d5b":"markdown","aa2c447c":"markdown","0be70874":"markdown","61fad9db":"markdown","84791c4a":"markdown","0b302027":"markdown"},"source":{"0dac8a56":"import numpy as np\nimport pandas as pd\nimport os\nimport glob\nimport matplotlib.pyplot as plt\nos.environ[\"TF+CPP_MIN_LOG_LEVEL\"]=\"2\"\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nimport tensorflow_datasets as tfds\nfd = '..\/input\/cee498project8poreinconcrete-updated\/Porosity Image J.xlsx'\n\nbatch_train = pd.DataFrame(pd.read_excel(fd, sheet_name = 0))\nbatch_test = pd.DataFrame(pd.read_excel(fd, sheet_name = 'Batch3'))\nbatch_train['ID'] = batch_train['ID'].str.replace('batch1:', 'batch1_')\nbatch_train['ID'] = batch_train['ID'].str.replace('batch2:', 'batch2_')\nbatch_test['ID'] = batch_test['ID'].str.replace('batch3:', '')\nbatch_train.head(3)","a43f6468":"class_of_porosity=[]\nfor i in range(len(batch_train)):\n    if batch_train['porosity(%)'][i] <= 10:\n        class_of_porosity.append(0)\n    elif batch_train['porosity(%)'][i]> 10 and batch_train['porosity(%)'][i] <= 20:\n        class_of_porosity.append(1)\n    elif batch_train['porosity(%)'][i]> 20 and batch_train['porosity(%)'][i] <= 30:\n        class_of_porosity.append(2)\n    else:\n        class_of_porosity.append(3)\nbatch_train['category']=pd.DataFrame(class_of_porosity)\nbatch_train.head()","c34253ba":"batch_train.category.hist();\nplt.xlabel(\"Categories\")\nplt.ylabel(\"Frequency\")","49b3309f":"class_of_porosity=[]\nfor i in range(len(batch_test)):\n    if batch_test['porosity(%)'][i] <= 10:\n        class_of_porosity.append(0)\n    elif batch_test['porosity(%)'][i]> 10 and batch_test['porosity(%)'][i] <= 20:\n        class_of_porosity.append(1)\n    elif batch_test['porosity(%)'][i]> 20 and batch_test['porosity(%)'][i] <= 30:\n        class_of_porosity.append(2)\n    else:\n        class_of_porosity.append(3)\nbatch_test['category']=pd.DataFrame(class_of_porosity)\nbatch_test.head()","dbc67635":"batch_test.category.hist();\nplt.xlabel(\"Categories\")\nplt.ylabel(\"Frequency\")","7f64640f":"file_paths1=batch_train['ID'].values\nlabels1= batch_train['category'].values","2167bc60":"ds_train=tf.data.Dataset.from_tensor_slices((file_paths1,labels1))","1a41177a":"file_paths2=batch_test['ID'].values\nlabels2=batch_test['category'].values","5c2a42e1":"ds_test=tf.data.Dataset.from_tensor_slices((file_paths2,labels2))","a92c2d42":"def read_image(image_file, label):\n    image=tf.io.read_file('..\/input\/cee498project8poreinconcrete-updated\/batch1and2\/'+ image_file+'.png')\n    image=tf.image.decode_image(image,dtype=tf.float32)\n    return image, label\ndef augment(image, label):\n    image = tf.image.random_flip_left_right(image)\n    image = tf.image.random_flip_up_down(image)\n    return image, label ","7a85e9f6":"ds_train2=ds_train.map(read_image).map(augment).batch(2)","7a05634a":"def read_image(image_file, label):\n    image=tf.io.read_file('..\/input\/cee-498-project8-pore-in-concrete\/batch3\/batch3\/'+ image_file+'.png')\n    image=tf.image.decode_image(image,dtype=tf.float32)\n    return image, label","91d62544":"ds_test2=ds_test.map(read_image).batch(2)","f1eff613":"height, width = 192, 256\nbase_model = keras.applications.Xception(\n    weights=\"imagenet\",  \n    input_shape=(height, width, 3),\n    include_top=False,\n)\n\nbase_model.trainable = True\n\ninputs = keras.Input(shape=(height, width, 3))\n\nfrom tensorflow.keras.optimizers import RMSprop\n\nnorm_layer = keras.layers.experimental.preprocessing.Normalization()\nmean = np.array([127.5] * 3)\nvar = mean ** 2\nx = norm_layer(inputs)\nnorm_layer.set_weights([mean, var])\n\nx = base_model(x, training=False)\nx = keras.layers.GlobalAveragePooling2D()(x)\nx = keras.layers.Dropout(0.1)(x)\n\nnum_outputs = 4 \noutputs = keras.layers.Dense(num_outputs, activation=\"softmax\")(x)\nmodel = keras.Model(inputs, outputs)\n\nmodel.summary()","77c255e9":"learning_rate = 5.0e-5\n\nmodel.compile(\n    optimizer=keras.optimizers.Adam(learning_rate=learning_rate),\n    loss= tf.keras.losses.SparseCategoricalCrossentropy(),\n    metrics=[tf.keras.metrics.SparseCategoricalAccuracy()],\n)\n\nepochs = 80\nhistory = model.fit(ds_train2, epochs=epochs, validation_data=ds_test2)","6fd33bfd":"plt.xlabel(\"Epochs\")\nplt.ylabel(\"Loss\")\nplt.plot(history.history['loss'], color='b', label=\"training_loss\")\nplt.plot(history.history['val_loss'], color='g', label=\"Val_loss\")\nplt.legend()\nplt.show()","cd956b40":"plt.xlabel(\"Epochs\")\nplt.ylabel(\"Loss\")\nplt.plot(history.history['sparse_categorical_accuracy'], color='b', label=\"training_accuracy\")\nplt.plot(history.history['val_sparse_categorical_accuracy'], color='g', label=\"Val_accuracy\")\nplt.legend()\nplt.show()","6cd17d5b":"80 is good","aa2c447c":"# Here, we start machine learning","0be70874":"I fetch data sets. I had uploaded the updated files, which they have the correct names of images so that they match their names in the excel sheet","61fad9db":"## We can see that it is not easy to get high accuracy, and the reason is well-known. The number of images for training is very limited. We have a ratio between the training and testing datasets (2:1) which is not convinient.","84791c4a":"Unfortunatly, we have very limited number of images so that it is not easy to train the model to predicted the porosity value. Therefore, I have to create four different categories to let the medel train more effective. These categories [0-10%], ]10-20%], ]20-30%], and ]30-100%]","0b302027":"#To train the model effectiviely, I had to apply Convolotional Neural Network (CNN) method. I used \"imagenet\" dataset. Actually, these steps and the algorithm as same as what we leanred in the class and the homework."}}