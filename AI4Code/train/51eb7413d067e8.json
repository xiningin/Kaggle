{"cell_type":{"b546fa8e":"code","2e4d2fa5":"code","fa79e244":"code","d912f6a1":"code","ab64bfa0":"code","51595ab2":"code","a645399c":"code","c3ea70a3":"code","3eefa43b":"code","0ef978d6":"code","3bd78de7":"code","ea708c89":"code","302e4040":"code","7a017b71":"markdown","5bfdb334":"markdown","867791a0":"markdown","b7c514a3":"markdown","46804e7c":"markdown"},"source":{"b546fa8e":"import numpy as np\nimport tensorflow as tf\nfrom tensorflow import keras\nimport matplotlib.pyplot as plt\n","2e4d2fa5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fa79e244":"np.random.seed(42)\ntf.random.set_seed(42)\n","d912f6a1":"from tensorflow.keras.preprocessing import image","ab64bfa0":"from tensorflow.keras.applications.inception_v3 import InceptionV3 as myModel\nfrom tensorflow.keras.applications.inception_v3 import preprocess_input, decode_predictions","51595ab2":"model = myModel(weights=\"imagenet\")","a645399c":"img_path = \"..\/input\/lionimage\/lionimage.jpg\"","c3ea70a3":"img = image.load_img(img_path, target_size=(299, 299))","3eefa43b":"plt.imshow(np.asarray(img))","0ef978d6":"x = image.img_to_array(img)\nx= np.array([x])\n","3bd78de7":"x = preprocess_input(x)","ea708c89":"preds = model.predict(x)","302e4040":"print('Predicted:', decode_predictions(preds, top=3)[0])","7a017b71":"image.img_to_array : Converts a PIL Image instance to a Numpy array.\n\ntensorflow.keras.applications.inception_v3.preprocess_input : The images are converted from RGB to BGR, then each color channel is zero-centered with respect to the ImageNet dataset, without scaling.\n\ntensorflow.keras.applications.inception_v3.decode_predictions : Decodes the prediction into a list of tuples (class, description, probability)","5bfdb334":"set random seed","867791a0":"Predict the class probabilities of the input image x using model.predict.","b7c514a3":"Decode the predictions and print the top 3 prediction probabilities as follow:","46804e7c":"Preprocess the x using preprocess_input."}}