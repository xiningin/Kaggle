{"cell_type":{"b7aae505":"code","1083037b":"code","84f7d7c9":"code","d4da57d5":"code","f49d157d":"code","384b37d2":"code","84293314":"code","5575b0da":"code","d5a08028":"code","7e881859":"code","1b5ee790":"code","a132af28":"code","127d00fa":"code","9620e5d6":"code","f7e40d5d":"code","ba82e2b0":"code","62a0eaaf":"code","620c4aff":"code","207f2d80":"code","da7e749d":"code","e98ab2eb":"code","3141ca66":"code","9db659a7":"code","f3b30e16":"code","c958b1b5":"code","da9ec37f":"markdown","14432716":"markdown","36115f55":"markdown","839ecfcf":"markdown","69920e84":"markdown","c1e9fd48":"markdown"},"source":{"b7aae505":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","1083037b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt #for plotting\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import confusion_matrix,mean_squared_error, accuracy_score\nfrom sklearn.model_selection import train_test_split","84f7d7c9":"train = pd.read_csv(\"..\/input\/train_sample.csv\")\ntest = pd.read_csv(\"..\/input\/test_sample.csv\")","d4da57d5":"print(train.shape)\ntrain.head(5)","f49d157d":"print(test.shape) #checking for test data head\ntest.head(5)","384b37d2":"X_train = train.iloc[:,1:]\ny_train = train.iloc[:,0]\nprint(X_train.shape)\nprint(y_train.shape)","84293314":"X_test = test.iloc[:,1:]\ny_test = test.iloc[:,0]\n\nprint(X_test.shape)\nprint(y_test.shape)","5575b0da":"import seaborn as sns","d5a08028":"## Viasualize number of digits classes\nplt.figure(figsize = (15,8))\ng = sns.countplot(y_train, palette = \"icefire\")\nplt.title(\"Number of digit classes\")\ny_train.value_counts()\n        ","7e881859":"#plot some samples\nimg = X_train.iloc[0].as_matrix()\nimg = img.reshape(28,28)\nplt.imshow(img, cmap = 'gray')\nplt.title(train.iloc[0,0])\nplt.axis(\"off\")\nplt.show()","1b5ee790":"# plot some samples\nimg = X_train.iloc[3].as_matrix()\nimg = img.reshape((28,28))\nplt.imshow(img,cmap='gray')\nplt.title(train.iloc[3,0])\nplt.axis(\"off\")\nplt.show()","a132af28":"x1 = X_train.iloc[0,:].values.reshape(28,28)\nx1[x1 > 0] = 1\nx1 = pd.DataFrame(x1)\nx1.to_csv(\"one.csv\")","127d00fa":"train_sample = np.random.choice(range(0,X_train.shape[0]),replace=False,size=5)\ntest_sample = np.random.choice(range(0,X_test.shape[0]),replace=False,size=5)","9620e5d6":"train_sample","f7e40d5d":"test_sample","ba82e2b0":"plt.figure(figsize=(10,5))\nfor i,j in enumerate(train_sample):\n    plt.subplot(2,5,i+1)\n    plt.imshow(X_train.iloc[j,:].values.reshape(28,28))\n    plt.title(\"Digit:\"+str(y_train[j]))\n    plt.gray()","62a0eaaf":"plt.figure(figsize=(10,5))\nfor i,j in enumerate(test_sample):\n    plt.subplot(2,5,i+1)\n    plt.imshow(X_test.iloc[j,:].values.reshape(28,28))\n    plt.title(\"Digit:\"+str(y_test[j]))\n    plt.gray()","620c4aff":"knn_classifier = KNeighborsClassifier(n_neighbors=3,weights=\"distance\",algorithm=\"brute\")\nknn_classifier.fit(X_train, y_train)","207f2d80":"pred_train = knn_classifier.predict(X_train) \npred_test = knn_classifier.predict(X_test)","da7e749d":"#Build confusion matrix and find the accuracy of the model\ncm_test = confusion_matrix(y_pred=pred_test, y_true=y_test)\n\nprint(cm_test)","e98ab2eb":"# Accuracy: \n\nsum(np.diag(cm_test))\/np.sum(cm_test)","3141ca66":"print(\"Accuracy on train is:\",accuracy_score(y_train,pred_train))\nprint(\"Accuracy on test is:\",accuracy_score(y_test,pred_test))","9db659a7":"# Look at the some misclassified points\nmisclassified = y_test[pred_test != y_test] ","f3b30e16":"## First 5 misclassified points\nmisclassified.index[:5]","c958b1b5":"plt.figure(figsize=(10,5))\nfor i,j in enumerate(misclassified.index[:5]):\n    plt.subplot(2,5,i+1)\n    plt.imshow(X_test.iloc[j,:].values.reshape(28,28))\n    plt.title(\"Digit:\"+str(y_test[j])+\" \"+\"Pred:\"+str(pred_test[j]))\n    plt.gray()","da9ec37f":"## Look at 5 sample records from train and test","14432716":" **.loc :-** here you've to give the label of the indicies and which eitherbe a index or your columns\n \n **.iloc :-** you've to pass a nuerical indicies, the postive of your indicies","36115f55":"## Build knn model with k = 3. Check the model performance","839ecfcf":"## Try to visually look at the data by writing one of the records to csv","69920e84":"### split the x and y from train and test","c1e9fd48":"**Read the data**"}}