{"cell_type":{"5e5eae93":"code","925c3f09":"code","8229e0d4":"code","d0a8fda0":"code","17fe3cf1":"code","b9fd9e54":"code","19724770":"code","23503e23":"code","30f345dd":"code","f450184b":"code","4762008a":"code","bf4af772":"code","67b5503e":"code","c2e5e934":"code","7cf656d2":"code","6fd7a17c":"code","45d2ea2f":"code","21bcb7e7":"code","ca06784f":"markdown","9d1da2ee":"markdown","10edfa02":"markdown","e01c70bd":"markdown","c275a40e":"markdown","f8a2eeb2":"markdown","6296e8d9":"markdown","c743b9b3":"markdown","fd1927eb":"markdown","36087dfe":"markdown"},"source":{"5e5eae93":"import warnings\nimport numpy as np\nimport pandas as pd\nfrom pathlib import Path\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import roc_auc_score\nfrom catboost import CatBoostClassifier","925c3f09":"PATH_TO_DATA = Path('..\/input\/flight-delays-fall-2018\/')","8229e0d4":"train_df = pd.read_csv(PATH_TO_DATA \/ 'flight_delays_train.csv')","d0a8fda0":"train_df.head()","17fe3cf1":"test_df = pd.read_csv(PATH_TO_DATA \/ 'flight_delays_test.csv')","b9fd9e54":"test_df.head()","19724770":"train_df['flight'] = train_df['Origin'] + '-->' + train_df['Dest']\ntest_df['flight'] = test_df['Origin'] + '-->' + test_df['Dest']","23503e23":"categ_feat_idx = np.where(train_df.drop('dep_delayed_15min', axis=1).dtypes == 'object')[0]\ncateg_feat_idx","30f345dd":"X_train = train_df.drop('dep_delayed_15min', axis=1).values\ny_train = train_df['dep_delayed_15min'].map({'Y': 1, 'N': 0}).values\nX_test = test_df.values","f450184b":"X_train_part, X_valid, y_train_part, y_valid = train_test_split(X_train, y_train, \n                                                                test_size=0.3, \n                                                                random_state=17)","4762008a":"ctb = CatBoostClassifier(task_type='GPU', random_seed=17, silent=True)","bf4af772":"%%time\nctb.fit(X_train_part, y_train_part,\n        cat_features=categ_feat_idx);","67b5503e":"ctb_valid_pred = ctb.predict_proba(X_valid)[:, 1]","c2e5e934":"roc_auc_score(y_valid, ctb_valid_pred)","7cf656d2":"%%time\nctb.fit(X_train, y_train,\n        cat_features=categ_feat_idx);","6fd7a17c":"ctb_test_pred = ctb.predict_proba(X_test)[:, 1]","45d2ea2f":"with warnings.catch_warnings():\n    warnings.simplefilter(\"ignore\")\n    \n    sample_sub = pd.read_csv(PATH_TO_DATA \/ 'sample_submission.csv', \n                             index_col='id')\n    sample_sub['dep_delayed_15min'] = ctb_test_pred\n    sample_sub.to_csv('ctb_pred.csv')","21bcb7e7":"!head ctb_pred.csv","ca06784f":"**We got some 0.756 ROC AUC on the hold-out set.**","9d1da2ee":"**This is the same Notebook as [this Catboost starter](https:\/\/www.kaggle.com\/kashnitsky\/mlcourse-ai-fall-2019-catboost-starter) but we train the model with GPU, it's considerably faster. If you perform cross-validation, you'll notice the difference even more.**\n\n**Training with GPU is easy:**\n - turn on GPU in the Notebook settings - bottom right (here it's already turned on)\n - add argument `task_type='GPU'` when initializing `CatBoostClassifier`\n - be careful with weekly 30 hours GPU quotas when using Kaggle Notebooks \n\n------------------------------------------------------------------------------------------------\n\n**In this assignment, you're asked to beat a baseline in the [\"Flight delays\" competition](https:\/\/www.kaggle.com\/c\/flight-delays-fall-2018).**\n\nThis time we decided to share a pretty decent CatBoost baseline, you'll have to improve the provided solution.\n\nPrior to working on the assignment, you'd better check out the corresponding course material:\n 1. [Classification, Decision Trees and k Nearest Neighbors](https:\/\/nbviewer.jupyter.org\/github\/Yorko\/mlcourse_open\/blob\/master\/jupyter_english\/topic03_decision_trees_kNN\/topic3_decision_trees_kNN.ipynb?flush_cache=true), the same as an interactive web-based [Kaggle Kernel](https:\/\/www.kaggle.com\/kashnitsky\/topic-3-decision-trees-and-knn) \n 2. Ensembles:\n  - [Bagging](https:\/\/nbviewer.jupyter.org\/github\/Yorko\/mlcourse_open\/blob\/master\/jupyter_english\/topic05_ensembles_random_forests\/topic5_part1_bagging.ipynb?flush_cache=true), the same as a [Kaggle Kernel](https:\/\/www.kaggle.com\/kashnitsky\/topic-5-ensembles-part-1-bagging)\n  - [Random Forest](https:\/\/nbviewer.jupyter.org\/github\/Yorko\/mlcourse_open\/blob\/master\/jupyter_english\/topic05_ensembles_random_forests\/topic5_part2_random_forest.ipynb?flush_cache=true), the same as a [Kaggle Kernel](https:\/\/www.kaggle.com\/kashnitsky\/topic-5-ensembles-part-2-random-forest)\n  - [Feature Importance](https:\/\/nbviewer.jupyter.org\/github\/Yorko\/mlcourse_open\/blob\/master\/jupyter_english\/topic05_ensembles_random_forests\/topic5_part3_feature_importance.ipynb?flush_cache=true), the same as a [Kaggle Kernel](https:\/\/www.kaggle.com\/kashnitsky\/topic-5-ensembles-part-3-feature-importance)\n 3. - [Gradient boosting](https:\/\/nbviewer.jupyter.org\/github\/Yorko\/mlcourse_open\/blob\/master\/jupyter_english\/topic10_boosting\/topic10_gradient_boosting.ipynb?flush_cache=true), the same as a [Kaggle Kernel](https:\/\/www.kaggle.com\/kashnitsky\/topic-10-gradient-boosting) \n   - Logistic regression, Random Forest, and LightGBM in the \"Kaggle Forest Cover Type Prediction\" competition: [Kernel](https:\/\/www.kaggle.com\/kashnitsky\/topic-10-practice-with-logit-rf-and-lightgbm) \n 4. You can also practice with demo assignments, which are simpler and already shared with solutions:\n  - \"Decision trees with a toy task and the UCI Adult dataset\": [assignment](https:\/\/www.kaggle.com\/kashnitsky\/a3-demo-decision-trees) + [solution](https:\/\/www.kaggle.com\/kashnitsky\/a3-demo-decision-trees-solution)\n  - \"Logistic Regression and Random Forest in the credit scoring problem\": [assignment](https:\/\/www.kaggle.com\/kashnitsky\/assignment-5-logit-and-rf-for-credit-scoring) + [solution](https:\/\/www.kaggle.com\/kashnitsky\/a5-demo-logit-and-rf-for-credit-scoring-sol)\n 5. There are also 7 video lectures on trees, forests, boosting and their applications: [mlcourse.ai\/video](https:\/\/mlcourse.ai\/video) \n 6. mlcourse.ai tutorials on [categorical feature encoding](https:\/\/www.kaggle.com\/waydeherman\/tutorial-categorical-encoding) (by Wayde Herman) and [CatBoost](https:\/\/www.kaggle.com\/mitribunskiy\/tutorial-catboost-overview) (by Mikhail Tribunskiy)\n 7. Last but not the least: [Public Kernels](https:\/\/www.kaggle.com\/c\/flight-delays-fall-2018\/notebooks) in this competition\n\n### Your task is to:\n 1. beat **\"A2 baseline (10 credits)\"** on Public LB (**0.75914** LB score)\n 2. rename your [team](https:\/\/www.kaggle.com\/c\/flight-delays-fall-2018\/team) in full accordance with A1 and the [course rating](https:\/\/docs.google.com\/spreadsheets\/d\/15e1K0tg5ponA5R6YQkZfihrShTDLAKf5qeKaoVCiuhQ\/) (to appear on 16.09.2019)\n \nThis task is intended to be relatively easy. Here you are not required to upload your reproducible solution.\n \n### <center> Deadline for A2: 2019 October 6, 20:59 CET (London time)","10edfa02":"**Train on the whole train set, make prediction on the test set. We got ~0.734 in the competition - \"Catboost starter\" baseline**","e01c70bd":"**Remember indexes of categorical features (to be passed to CatBoost)**","c275a40e":"**Read the data**","f8a2eeb2":"<center>\n<img src=\"https:\/\/habrastorage.org\/files\/fd4\/502\/43d\/fd450243dd604b81b9713213a247aa20.jpg\" \/>\n<\/center> \n     \n## <center>  [mlcourse.ai](https:\/\/mlcourse.ai) \u2013 Open Machine Learning Course \n\n#### <center> Author: [Yury Kashnitsky](https:\/\/yorko.github.io) (@yorko) \n\n# <center>Assignment #2. Fall 2019\n## <center> Part 2. Gradient boosting","6296e8d9":"**Create only one feature - \u201cflight\u201d (this you need to improve - add more features)**","c743b9b3":"**Train Catboost with default arguments, passing only the indexes of categorical features.**","fd1927eb":"Now's your turn! Go and improve the model to beat **\"A2 baseline (10 credits)\"** - **0.75914** LB score. It's crucial to come up with some good features. \n\nFor discussions, stick to the **#a2_kaggle_fall2019** thread in the **mlcourse_ai_news** [ODS Slack](http:\/\/opendatascience.slack.com) channel. Serhii Romanenko (@serhii_romanenko) will be there to help. \n\nWelcome to Kaggle!\n\n<img src='https:\/\/habrastorage.org\/webt\/fs\/42\/ms\/fs42ms0r7qsoj-da4x7yfntwrbq.jpeg' width=50%>\n*from the [\"Nerd Laughing Loud\"](https:\/\/www.kaggle.com\/general\/76963) thread.*","36087dfe":"**Allocate a hold-out set (a.k.a. a validation set) to validate the model**"}}