{"cell_type":{"0af05484":"code","554906a2":"code","931ad020":"code","52d76d8d":"code","95aee0e9":"code","47f62b5e":"code","daa0b971":"code","7e68fce9":"code","f276191d":"code","1bee01c6":"code","4a5aff90":"code","360280af":"code","904edbdd":"code","164dd4b4":"code","52ca5e97":"code","e5fb830f":"code","7c9b098b":"code","a8043e67":"code","4e224aa0":"code","f3bd2ff8":"code","49dc760a":"code","52fdb2e5":"code","ca04a5cb":"code","9b3a77b2":"code","061fff48":"code","baf4f6d6":"code","9fc51b0d":"code","f5c51132":"code","3409b2c7":"code","6b34a794":"code","fa65cbff":"code","b50b1342":"code","e976dba7":"code","f6cb4592":"code","060004e5":"code","03508236":"code","283fd11a":"code","9c610f9b":"code","54e0daba":"code","808ce413":"code","f466ec0e":"code","3a8fd32f":"code","0232447a":"code","9b5a5206":"code","249f5231":"code","4cea0156":"code","afcd5d33":"code","ecad34f3":"code","f0f34966":"code","f5b48ef3":"code","3c0bf4a5":"code","2721ada2":"code","5a015c12":"code","886c9105":"code","6eeed38a":"code","c432b12d":"code","06e2967d":"code","70dc2e4a":"code","f639bad7":"code","3c79c9dd":"code","560fa3d7":"code","c5266b2b":"code","a6daa47d":"code","0d0977cb":"code","667eac51":"code","1d9b962a":"code","693c76c9":"code","27d992bf":"code","820cc463":"markdown","b0d0c3ac":"markdown","e0493366":"markdown","2bc24057":"markdown","41a573a0":"markdown","cf81dc06":"markdown","c7252b80":"markdown","f9fc0cac":"markdown","f3a4ecf8":"markdown","ba77262a":"markdown","f686d0f2":"markdown","578e9133":"markdown","6c51c900":"markdown","cecb0473":"markdown","43bd2933":"markdown","3b85dc33":"markdown","d47d5643":"markdown","4b0e4044":"markdown","9ce756a2":"markdown","18465ca5":"markdown","594ba6a8":"markdown","083ec85e":"markdown","07f562fb":"markdown","8ff9ff67":"markdown","649f2bc7":"markdown","f32676bd":"markdown","9851c73a":"markdown","96621a65":"markdown","9ef83ee7":"markdown","8608af3c":"markdown","f06af8a8":"markdown","0bcabc63":"markdown","4e8b9a50":"markdown","de3a39dd":"markdown","d9cd4e20":"markdown"},"source":{"0af05484":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","554906a2":"#to avoid warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n#os\nimport os\n\n#linear algebra libraries\nimport numpy as np, pandas as pd\nimport pandas_profiling as pp\n\n#libraries for plotting graphs\nimport matplotlib.pyplot as plt, seaborn as sns, matplotlib\nimport plotly.express as px\nimport plotly.figure_factory as ff\n\n#for hypothesis checking\nfrom scipy.stats import mannwhitneyu\n\n#for data preparation\nfrom sklearn.preprocessing import scale, StandardScaler\nfrom sklearn import linear_model\nfrom sklearn import metrics\nimport statsmodels.api as sm","931ad020":"#loading the file\nvaccine = pd.read_csv(\"\/kaggle\/input\/covid-world-vaccination-progress\/country_vaccinations.csv\")\nvaccine.head(10)","52d76d8d":"#getting a profile summary\npp.ProfileReport(vaccine)","95aee0e9":"vaccine.info()","47f62b5e":"vaccine.describe()","daa0b971":"vaccine.columns","7e68fce9":"#country wrt vaccine details\ncntry_vacc_df = pd.read_csv(\"\/kaggle\/input\/covid-world-vaccination-progress\/country_vaccinations_by_manufacturer.csv\")\ncntry_vacc_df.head(10)","f276191d":"#getting profile summary\npp.ProfileReport(cntry_vacc_df)","1bee01c6":"cntry_vacc_df.info()","4a5aff90":"cntry_vacc_df.describe()","360280af":"#datatype analysis\nvaccine.dtypes","904edbdd":"# datetime datatype\nvaccine[['date']] = vaccine[['date']].apply(pd.to_datetime)","164dd4b4":"#checking\nvaccine.dtypes","52ca5e97":"# datetime datatype\ncntry_vacc_df[['date']] = cntry_vacc_df[['date']].apply(pd.to_datetime)","e5fb830f":"#checking\ncntry_vacc_df.dtypes","7c9b098b":"#checking the variables which has true null values\ntrue_null_1 = cntry_vacc_df.isnull().any()[cntry_vacc_df.isnull().any()==True]\ntrue_null_1","a8043e67":"#checking the variables which has true null values\ntrue_null = vaccine.isnull().any()[vaccine.isnull().any()==True]\ntrue_null","4e224aa0":"#checking for null values\nvaccine.isnull().sum(axis=0)","f3bd2ff8":"#null values on percentage wise\nnulldetails = round(100*(vaccine.isnull().sum()\/len(vaccine.index)), 2)\n\n#taking 50% on majority of NaN values in the column\nnulldetails.loc[nulldetails >= 50]","49dc760a":"#null values on percentage wise\nnulldetails1 = round(100*(vaccine.isnull().sum()\/len(vaccine.index)), 2)\n\n#taking 50% as maximum of NaN values in the column\nnulldetails1.loc[nulldetails1 <= 50]","52fdb2e5":"# COLUMN --- total_vaccinations\nvaccine = vaccine.drop(vaccine[vaccine.total_vaccinations.isna()].index)\n\n# COLUMN -- people_vaccinated\nvaccine = vaccine.drop(vaccine[vaccine.people_vaccinated.isna()].index)\n\n# checking NA values\nvaccine.isna().sum()","ca04a5cb":"#checking correlation\ncorr = vaccine.corr()\n\n#mask\nmask = np.zeros_like(corr)\nmask[np.triu_indices_from(mask)] = True\n\n#heatmap\nwith sns.axes_style(\"white\"):\n    f, ax = plt.subplots(figsize=(9, 6))\n    ax = sns.heatmap(corr, annot=True, mask=mask, vmax=.3, square=True)","9b3a77b2":"#function for hypothesis check\n\ndef hypothesis_check(data1, data2) :\n    \n    # perform mann whitney test\n    stat, p_value = mannwhitneyu(data1, data2)\n    print('Statistics = %.2f, \\np-value = %.13f' % (stat, p_value))\n    \n    # Level of significance\n    alpha = 0.05\n    \n    # conclusion\n    if p_value < alpha:\n        print('Reject Null Hypothesis (Significant difference between two samples)')\n    else:\n        print('Do not Reject Null Hypothesis (No significant difference between two samples)')","061fff48":"#function to use fillna in thr column if we \"Reject Null Hypothesis\"\n\ndef fill_na(column):\n    for c in column :\n        vaccine[column] = vaccine[column].fillna(0)","baf4f6d6":"#checking total_vaccinations AND people_vaccinated\nhypothesis_check(vaccine['total_vaccinations'], vaccine['people_vaccinated'])","9fc51b0d":"#checking total_vaccinations_per_hundred AND people_vaccinated_per_hundred\nhypothesis_check(vaccine['total_vaccinations_per_hundred'], vaccine['people_vaccinated_per_hundred'])","f5c51132":"#checking people_vaccinated AND daily_vaccinations\nhypothesis_check(vaccine['people_vaccinated'], vaccine['daily_vaccinations'])","3409b2c7":"#checking people_vaccinated_per_hundred AND daily_vaccinations_per_million\nhypothesis_check(vaccine['people_vaccinated_per_hundred'], vaccine['daily_vaccinations_per_million'])","6b34a794":"#checking people_fully_vaccinated AND total_vaccinations\nhypothesis_check(vaccine['people_fully_vaccinated'], vaccine['total_vaccinations'])","fa65cbff":"#checking people_fully_vaccinated_per_hundred AND total_vaccinations_per_hundred\nhypothesis_check(vaccine['people_fully_vaccinated_per_hundred'], vaccine['total_vaccinations_per_hundred'])","b50b1342":"#checking daily_vaccinations_raw AND daily_vaccinations\nhypothesis_check(vaccine['daily_vaccinations_raw'], vaccine['daily_vaccinations'])","e976dba7":"vaccine.columns","f6cb4592":"#columns to be filled with 0\ncols = ['total_vaccinations',\n       'people_vaccinated', 'people_fully_vaccinated',\n       'daily_vaccinations_raw', 'daily_vaccinations',\n       'total_vaccinations_per_hundred', 'people_vaccinated_per_hundred',\n       'people_fully_vaccinated_per_hundred', 'daily_vaccinations_per_million']\n\n#filling NA values\nfill_na(cols)\n\n#check any NA values\nvaccine.isna().sum()","060004e5":"#iso code for country\nvaccine[vaccine.iso_code.isna()].country.unique()","03508236":"#fillna country values for systematic values\nvaccine[vaccine.country == 'England'] = vaccine[vaccine.country == 'England'].fillna('GB-ENG')\nvaccine[vaccine.country == 'Northern Ireland'] == vaccine[vaccine.country == 'Northern Ireland'].fillna('GB-NIR')\nvaccine[vaccine.country == 'Scotland'] = vaccine[vaccine.country == 'Scotland'].fillna('GB-SCT')\nvaccine[vaccine.country == 'Wales'] = vaccine[vaccine.country == 'Wales'].fillna('GB-WLS')\nvaccine = vaccine.fillna('NC')","283fd11a":"vaccine['iso_code'].unique()","9c610f9b":"vaccine.shape","54e0daba":"vaccine.info()","808ce413":"cntry_vaccine = vaccine.groupby([\"country\", \"iso_code\", \"vaccines\"])['total_vaccinations', \n                                                                       'total_vaccinations_per_hundred',\n                                                                      'daily_vaccinations',\n                                                                      'daily_vaccinations_per_million',\n                                                                      'people_vaccinated',\n                                                                      'people_vaccinated_per_hundred',\n                                                                       'people_fully_vaccinated', \n                                                                       'people_fully_vaccinated_per_hundred'\n                                                                      ].max().reset_index()\n\ncntry_vaccine.columns = [\"Country\", \"iso_code\", \"Vaccines\", \"Total vaccinations\", \"Percent\", \"Daily vaccinations\", \n                           \"Daily vaccinations per million\", \"People vaccinated\", \"People vaccinated per hundred\",\n                           'People fully vaccinated', 'People fully vaccinated percent']","f466ec0e":"cntry_vaccine.head(10)","3a8fd32f":"cntry_vaccine.info()","0232447a":"vaccines_grp = cntry_vaccine.Vaccines.unique()\n\nfor v in vaccines_grp:\n    countries_grp = cntry_vaccine.loc[cntry_vaccine.Vaccines==v, 'Country'].values\n    print(f\"Vaccines: {v}: \\nCountries: {list(countries_grp)}\\n\")","9b5a5206":"cntry_vaccine_time = vaccine[[\"country\", \"vaccines\", \"date\", 'total_vaccinations', \n                                'total_vaccinations_per_hundred',  'people_vaccinated','people_vaccinated_per_hundred',\n                               'daily_vaccinations','daily_vaccinations_per_million', \n                                'people_fully_vaccinated', 'people_fully_vaccinated_per_hundred'\n                               ]].dropna()\n\ncntry_vaccine_time.columns = [\"Country\", \"Vaccines\", \"Date\", 'Total vaccinations', 'Percent', 'People vaccinated', 'People percent',\n                               \"Daily vaccinations\", \"Daily vaccinations per million\", \n                                'People fully vaccinated', 'People fully vaccinated percent']","249f5231":"countries = ['Austria', 'Belgium', 'Bulgaria','Croatia', 'Cyprus', 'Czechia', 'Denmark', 'Estonia', 'Finland', 'France', 'Germany',\n             'Greece', 'Hungary','India' , 'Ireland', 'Israel', 'Italy', 'Latvia','Lithuania', 'Luxembourg', 'Malta',\n             'Netherlands', 'Norway','Poland', 'Portugal', 'Romania', 'Serbia', 'Slovakia', 'Spain', 'Sweden',\n             'United Kingdom', 'United States', 'China']","4cea0156":"cntry_vaccine.columns","afcd5d33":"def distplot_check(column):\n    plt.title('Checking Outliers with distplot()')\n    sns.distplot(column, bins=10)\n    plt.show()","ecad34f3":"def treat_outlier(column):\n    #taking log of the values in both the axes\n    cntry_vaccine[column] = np.log1p(cntry_vaccine[column])","f0f34966":"distplot_check(cntry_vaccine[\"Total vaccinations\"])\ntreat_outlier(\"Total vaccinations\")","f5b48ef3":"distplot_check(cntry_vaccine[\"Daily vaccinations\"])\ntreat_outlier(\"Daily vaccinations\")","3c0bf4a5":"distplot_check(cntry_vaccine[\"Daily vaccinations per million\"])\ntreat_outlier(\"Daily vaccinations per million\")","2721ada2":"distplot_check(cntry_vaccine[\"People vaccinated\"])\ntreat_outlier(\"People vaccinated\")","5a015c12":"distplot_check(cntry_vaccine[\"People vaccinated per hundred\"])\ntreat_outlier(\"People vaccinated per hundred\")","886c9105":"distplot_check(cntry_vaccine[\"People fully vaccinated\"])\ntreat_outlier(\"People fully vaccinated\")","6eeed38a":"distplot_check(cntry_vaccine[\"People fully vaccinated percent\"])\ntreat_outlier(\"People fully vaccinated percent\")","c432b12d":"cntry_vaccine.columns","06e2967d":"def boxplot_check(title_name, col1, col2):\n    fig = plt.figure(figsize=(10, 5))\n    plt.title(title_name)\n    plt.xticks(rotation = 90)\n    sns.boxplot(cntry_vaccine[col1], cntry_vaccine[col2])\n    plt.show()","70dc2e4a":"boxplot_check(\"Vaccines Vs Percent\", \"Vaccines\", \"Percent\")","f639bad7":"boxplot_check(\"Vaccines Vs Daily vaccinations per million\", \"Vaccines\", \"Daily vaccinations per million\")","3c79c9dd":"boxplot_check(\"Vaccines Vs People vaccinated per hundred\", \"Vaccines\", \"People vaccinated per hundred\")","560fa3d7":"boxplot_check(\"Vaccines Vs People fully vaccinated percent\", \"Vaccines\", \"People fully vaccinated percent\")","c5266b2b":"cntry_vaccine.columns","a6daa47d":"def treemap_plot(value, tree_title):\n    \n    fig = px.treemap(cntry_vaccine, path = ['Vaccines', 'Country'], \n                 values = value,\n                title = tree_title)\n    fig.show()","0d0977cb":"val1 = 'Total vaccinations'\ntit1 = \"Total vaccinations per country, grouped by vaccine scheme\"\n\ntreemap_plot(val1, tit1)","667eac51":"val2 = 'Daily vaccinations'\ntit2 = \"Daily vaccinations per country, grouped by vaccine scheme\"\n\ntreemap_plot(val2, tit2)","1d9b962a":"val3 = 'People vaccinated'\ntit3 = \"People vaccinated per country, grouped by vaccine scheme\"\n\ntreemap_plot(val3, tit3)","693c76c9":"cntry_vaccine.shape","27d992bf":"#checking correlation\ncorr1 = cntry_vaccine.corr()\n\n#mask\nmask = np.zeros_like(corr1)\nmask[np.triu_indices_from(mask)] = True\n\n#heatmap\nwith sns.axes_style(\"white\"):\n    f, ax = plt.subplots(figsize=(9, 6))\n    ax = sns.heatmap(corr1, annot=True, mask=mask, vmax=.3, square=True)","820cc463":"PS. IF YOU LIKED THE KERNEL, DO GIVE ME AN UPVOTE!!","b0d0c3ac":"**Handling Duplicacy and Null Values**","e0493366":"*Insights -\n\nOxford\/AstraZeneca is the vaccine used by many countries like Bangladesh, Nigeria, Sri Lanka, Bhutan, etc. where majority of the people are vaccinated.*","2bc24057":"We have quite large cardinality and missing data. Let's go with the first important column - total_vaccinations AND people_vaccinated","41a573a0":"**---------------------------------------- by Sakshi Maharana -----------------------------------------------**","cf81dc06":"Everything went well so far!!! Moving Forward now!!\n\n**Handling any replacement in column values**","c7252b80":"**Inspiration**\n\nTrack COVID-19 vaccination in the World, answer instantly to your questions :\n\n    Which country is using what vaccine?\n\n    In which country the vaccination programme is more advanced?\n\n    Where are vaccinated more people per day?\n\n    Where are vaccinated more people per country?\n\n**Content**\n\nThe data (country vaccinations) contains the following information:\n\n    1. Country- this is the country for which the vaccination information is provided;\n    2. Country ISO Code - ISO code for the country;\n    Date - date for the data entry; for some of the dates we have only the daily vaccinations, for others, only the (cumulative) total;\n    3. Total number of vaccinations - this is the absolute number of total immunizations in the country;\n    4. Total number of people vaccinated - a person, depending on the immunization scheme, will receive one or more (typically 2) vaccines; at a certain moment, the number of vaccination might be larger than the number of people;\n    5. Total number of people fully vaccinated - this is the number of people that received the entire set of immunization according to the immunization scheme (typically 2); at a certain moment in time, there might be a certain number of people that received one vaccine and another number (smaller) of people that received all vaccines in the scheme;\n    6. Daily vaccinations (raw) - for a certain data entry, the number of vaccination for that date\/country;\n    7. Daily vaccinations - for a certain data entry, the number of vaccination for that date\/country;\n    8. Total vaccinations per hundred - ratio (in percent) between vaccination number and total population up to the date in the country;\n    9. Total number of people vaccinated per hundred - ratio (in percent) between population immunized and total population up to the date in the country;\n    10. Total number of people fully vaccinated per hundred - ratio (in percent) between population fully immunized and total population up to the date in the country;\n    11. Number of vaccinations per day - number of daily vaccination for that day and country;\n    Daily vaccinations per million - ratio (in ppm) between vaccination number and total population for the current date in the country;\n    12. Vaccines used in the country - total number of vaccines used in the country (up to date);\n    13.Source name - source of the information (national authority, international organization, local organization etc.);\n    14. Source website - website of the source of information.\n    \n    \nThere is a second file added recently (country vaccinations by manufacturer), with the following columns:\n    \n    Location - country;\n\n    Date - date;\n\n    Vaccine - vaccine type;\n\n    Total number of vaccinations - total number of vaccinations \/ current time and vaccine type.\n\n**THE STEPS TO BE FOLLOWED ARE ----**\n\n1. Data Sourcing and Understanding\n2. Data Cleaning\n3. Explorating Data Analysis\n\n\nLet's begin!!","f9fc0cac":"**DATA CLEANING**\n\n**Handling Datatypes**","f3a4ecf8":"**DATA SOURCING AND UNDERSTANDING**","ba77262a":"Proceeding to the EDA part!!!","f686d0f2":"*Insights -\n\nDaily Vaccinations are proceeded rapidly in the countries like Bangladesh, Ghana, Bhutan, etc. with the large number of the vaccinations of Oxford\/AstaZeneca.*","578e9133":"**Heatmap**","6c51c900":"**EXPLORATORY DATA ANALYSIS**","cecb0473":"*Insights -\n\nTop vaccines used for the people fully vaccinated, daily vaccinations and used percentage are Oxford\/AstraZeneca and Pfizer\/BioTech, Sinovac.*","43bd2933":"DATASET -- COUNTRY VACCINATION DETAILS","3b85dc33":"**Which vaccination scheme is used most in a country-wise?**","d47d5643":"We have other similar variables like people_vaccinated_per_hundred AND total_vaccinations_per_hundred, etc. Let's see how they are related with the above two features.","4b0e4044":"Now we have cleaned dataset to proceed further!!!!\n\nLet's do some data preparation!!!!","9ce756a2":"iso_code : ISO code for the country.","18465ca5":"**Bivariate Analysis**","594ba6a8":"*Datatypes went well now!!!*","083ec85e":"We can say that - \n\n    1. people_vaccinated and people_vaccinated_per_hundred greatly correlates with total_vaccinations and total_vaccinations_per_hundred.\n\n    2. Likewise, daily_vaccinations and daily_vaccinations_per_million greatly correlates with people_vaccinated and people_vaccinated_per_hundred.\n\n    3. people_fully_vaccinated and people_fully_vaccinated_per_hundred greatly correlates with total_vaccinations and total_vaccinations_per_hundred.\n\n    4. daily_vaccinations_raw greatly correlates with daily_vaccinations.\n\n**HOW TO DEAL WITH IT?**\n\nWe can check for the hypothesis value and find out what's the p-value of their corelation and then decide whether to keep the column or delete it. Let's see what are the different hypothesis technique that can be proceed with column distributions ---\n\n    1. Here we can try Mann-Whithey U test for the same.\n    2. Two-sample Z test, can be used for checking two independent data groups and deciding whether sample mean of two group is equal or not.\n\nReference - https:\/\/machinelearningmastery.com\/statistical-hypothesis-tests-in-python-cheat-sheet\/\n\nLet's go with first one, as it will have concised code.\n\n\n**Mann-Whitney U Test**\n\nTests whether the distributions of two independent samples are equal or not.\n\nAssumptions----\n    \n    Observations in each sample are independent and identically distributed (iid).\n\n    Observations in each sample can be ranked.\n\nInterpretation----\n\n    H0: the distributions of both samples are equal.\n\n    H1: the distributions of both samples are not equal.\n\nConclusion----\n\n    if p_value < 0.05:\n\n        print('Reject Null Hypothesis (Significant difference between two samples)')\n    else:\n\n        print('Do not Reject Null Hypothesis (No significant difference between two samples)')","07f562fb":"**THANK YOU FOR COMING SO FAR!!!**","8ff9ff67":"*Highly correlated variables are -\n\n    1. Total Vaccinations and People Vaccinated\n    2. Daily Vaccinations and Total Vaccinations\n    3. People Vaccinated and Daily Vaccinations*","649f2bc7":"**Univariate analysis**","f32676bd":"DATASET -- COUNTRY VACCINATION MANUFACTURERS DETAILS","9851c73a":"**Multivariate Analysis**","96621a65":"*Insights -\n\nTotal Vaccinations as per the vaccines are done in the Bangladesh, Nigeria, Myanmar, Sri Lanka, Ghana, etc. under Oxford\/AstraZeneca.*","9ef83ee7":"**How vaccines are related to other parameters?**","8608af3c":"**Where are vaccinated more people per country?**","f06af8a8":"**Where are vaccinated more people per day?**","0bcabc63":"**DATA PREPARATION**","4e8b9a50":"Hence, we can conclude that, p-values are much less than 0.05, which means we will reject our hypothesis. So, let's just fill missing values with zeros.","de3a39dd":"From the definition of the following columns -\n\n    Total number of vaccinations - this is the absolute number of total immunizations in the country;\n\n    Total number of people vaccinated - a person, depending on the immunization scheme, will receive one or more (typically 2) vaccines; at a certain moment, the number of vaccination might be larger than the number of people;\n\n    Total number of people fully vaccinated - this is the number of people that received the entire set of immunization according to the immunization scheme (typically 2); at a certain moment in time, there might be a certain number of people that received one vaccine and another number (smaller) of people that received all vaccines in the scheme;\n\n    Daily vaccinations (raw) - for a certain data entry, the number of vaccination for that date\/country;\n\n    Daily vaccinations - for a certain data entry, the number of vaccination for that date\/country;\n\n    Total vaccinations per hundred - ratio (in percent) between vaccination number and total population up to the date in the country;\n\n    Total number of people vaccinated per hundred - ratio (in percent) between population immunized and total population up to the date in the country;\n\n    Total number of people fully vaccinated per hundred - ratio (in percent) between population fully immunized and total population up to the date in the country;\n\n    Number of vaccinations per day - number of daily vaccination for that day and country\n\n\nLet's check each column more closely!!","d9cd4e20":"Outliers are treated well compared to previous analysis."}}