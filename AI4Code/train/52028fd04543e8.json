{"cell_type":{"c4044d72":"code","442f89e2":"code","6c0eff4b":"code","81529b3b":"code","753e59be":"code","5d89a5be":"code","2d1d1f82":"code","622b6c3b":"code","15dcc525":"code","da7b2ac7":"code","36758d03":"code","fe0fa994":"code","fc5d8808":"code","5619f7cc":"code","3d38ce39":"code","fb9996b9":"code","2e8088d0":"code","39ffdddf":"code","331f947b":"code","795147d7":"code","359c27a0":"code","7bf912b9":"code","9d9b7855":"code","7bc6c7c2":"code","2207499b":"code","2aae3204":"code","8c72388d":"code","518f6751":"code","47a44980":"markdown","224cf284":"markdown","647e587e":"markdown","5ab76fd0":"markdown","d5f951e2":"markdown","c2b0e8ba":"markdown","808a724a":"markdown","6f044cb6":"markdown"},"source":{"c4044d72":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","442f89e2":"data = pd.read_csv('\/kaggle\/input\/videogamesales\/vgsales.csv')","6c0eff4b":"data.head()","81529b3b":"data.info()","753e59be":"data.corr","5d89a5be":"f,ax = plt.subplots(figsize=(18, 18))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.2g',ax=ax)\nplt.show()","2d1d1f82":"data.columns","622b6c3b":"# Line Plot\n# color = color, label = label, linewidth = width of line, alpha = opacity, grid = grid, linestyle = sytle of line\ndata.EU_Sales.plot(kind = 'line', color = 'g',label = 'EU Sales',linewidth=2,alpha = 0.5,grid = True,linestyle = ':',figsize = (15,15))\ndata.NA_Sales.plot(color = 'r',label = 'NA Sales',linewidth=2, alpha = 0.5,grid = True,linestyle = '-.',figsize = (15,15))\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","15dcc525":"# Scatter Plot \n# x = EU Sales, y = NA Sales\ndata.plot(kind='scatter', x='EU_Sales', y='NA_Sales',alpha = 0.5,color = 'red',figsize=(10,10))\nplt.xlabel('EU Sales')              # label = name of label\nplt.ylabel('NA Sales')\nplt.title('EU - NA Sales Scatter Plot')            # title = title of plot","da7b2ac7":"# 1 - Filtering Pandas data frame\nx = data['EU_Sales']>2.47     # There are 100 games which have higher sales level than 2.47 million sales in Europe\ndata[x]","36758d03":"x = data[(data['EU_Sales']>2.47) & (data['NA_Sales']>2.5)]    # There are 100 games which have higher sales level than 2.47 million sales in Europe\nx","fe0fa994":"type(x)","fc5d8808":"x['EU_Sales']","5619f7cc":"x['NA_Sales']","3d38ce39":"# Line Plot\n# color = color, label = label, linewidth = width of line, alpha = opacity, grid = grid, linestyle = sytle of line\nx.EU_Sales.plot(kind = 'line', color = 'g',label = 'EU Sales',linewidth=2,alpha = 0.5,grid = True,linestyle = ':',figsize = (15,15))\nx.NA_Sales.plot(color = 'r',label = 'NA Sales',linewidth=2, alpha = 0.5,grid = True,linestyle = '-.',figsize = (15,15))\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","fb9996b9":"# Scatter Plot \n# x = EU Sales, y = NA Sales\nx.plot(kind='scatter', x='EU_Sales', y='NA_Sales',alpha = 0.5,color = 'red',figsize=(10,10))\nplt.xlabel('EU Sales')              # label = name of label\nplt.ylabel('NA Sales')\nplt.title('EU - NA Sales Scatter Plot')            # title = title of plot","2e8088d0":"for index,value in x[['EU_Sales']][1:10].iterrows():\n    print(index,\" : \",value)","39ffdddf":"sales_data = x\n\n#eu_sales = x['EU_Sales']\n#na_sales = x['NA_Sales']\n#jp_sales = x['JP_Sales']\n#other_sales = x['Other_Sales']\n#global_sales = x['Global_Sales']","331f947b":"y = sales_data['Global_Sales']\ny","795147d7":"features = ['EU_Sales','NA_Sales','JP_Sales','Other_Sales']\nX = x[features]\nX","359c27a0":"from sklearn.tree import DecisionTreeRegressor\n#specify the model. \n#For model reproducibility, set a numeric value for random_state when specifying the model\nmodel = DecisionTreeRegressor(random_state = 4)\n# Fit the model\nmodel.fit(X, y)","7bf912b9":"predictions = model.predict(X)\nprint(predictions)","9d9b7855":"# Import the train_test_split function and uncomment\nfrom sklearn.model_selection import train_test_split\ntrain_X, val_X, train_y, val_y = train_test_split( X, y, random_state = 4)","7bc6c7c2":"# Specify the model\nmodel = DecisionTreeRegressor(random_state = 4)\n\n# Fit model with the training data.\nmodel.fit(train_X,train_y)","2207499b":"# Predict with all validation observations\nval_predictions = model.predict(val_X)","2aae3204":"val_predictions","8c72388d":"#validation predictions\nprint(val_predictions)\n#actual prices from validation data\nprint(val_y)","518f6751":"from sklearn.metrics import mean_absolute_error\nval_mae = mean_absolute_error(val_y,val_predictions)\n\n#validation_mae\nprint(val_mae)","47a44980":"In the data set, sales levels expressed in millions are expressed by the name of the games, the platform in which they were published, the year, the publisher and the regions.\n\nVerisetinde oyunlar\u0131n ismi, yay\u0131nland\u0131\u011f\u0131 platformu, y\u0131l\u0131, yay\u0131mc\u0131s\u0131 ve b\u00f6lgelere g\u00f6re milyon ile ifade edilen sat\u0131\u015f seviyeleri ifade edilmektedir.","224cf284":"The line plot is meaningless under the assumption that the data contained in the first part is outlier data, as it is ranked according to sales levels.\n\nSat\u0131\u015f seviyelerine g\u00f6re ranking yap\u0131ld\u0131\u011f\u0131ndan dolay\u0131, ilk k\u0131s\u0131mda bulunan verilerin d\u0131\u015fad\u00fc\u015fen veriler oldu\u011fu varsay\u0131m\u0131 alt\u0131nda line plot \u00e7izimi anlams\u0131zd\u0131r.","647e587e":"Because drawing such graphs in data is meaningless at the moment, more meaningful graphs can be extracted by performing various filtering operations.\n\nVerisetinde bu gibi grafiklerin \u00e7izdirilmesi \u015fu an i\u00e7in anlams\u0131z geldi\u011finden dolay\u0131 \u00e7e\u015fitli filtreleme i\u015flemleri yap\u0131larak daha anlaml\u0131 grafikler \u00e7\u0131kar\u0131labilir.","5ab76fd0":"Features such as Rank and Year seem to be meaningless in describing a relationship. There are positive correlations between the sales data of the regions and the global sales data. This relationship is also a positive relationship, as can be seen clearly. Because the increase in sales data in regions also increases global sales. There is a correlation between the Japanese market and other markets that we can decipher as weak. Sales in the EU and NA markets have a very strong positive relationship with global sales.\n\nRank, Year gibi featurelar\u0131n bir ili\u015fkiyi a\u00e7\u0131klamada anlams\u0131z oldu\u011fu g\u00f6z\u00fckmektedir. B\u00f6lgelerin sat\u0131\u015f verileriyle global sat\u0131\u015f verileri aras\u0131nda pozitif korelasyonlar mevcuttur. Bu ili\u015fki de bariz bir pozitif ili\u015fkidir. \u00c7\u00fcnk\u00fc b\u00f6lgelerdeki sat\u0131\u015f verilerinin art\u0131\u015f\u0131 ayn\u0131 zamanda globaldeki sat\u0131\u015f\u0131 art\u0131r\u0131r. JP pazar\u0131 ile di\u011fer pazarlar aras\u0131nda zay\u0131f diye nitelendirebilece\u011fimiz bir korelasyon mevcuttur. EU ve NA pazarlar\u0131ndaki sat\u0131\u015flar global sat\u0131\u015flarla olduk\u00e7a kuvvetli pozitif bir ili\u015fkiye sahiptir.","d5f951e2":"The sales levels and year of games by region are float; the name of the game, the platform on which it is published and the publisher are object, and the ranking of the game appear in the data set as integer.\n\nOyunlar\u0131n b\u00f6lgelere g\u00f6re oyunlar\u0131n sat\u0131\u015f seviyeleri ve y\u0131l\u0131 float; oyunun ad\u0131, yay\u0131nland\u0131\u011f\u0131 platformu, t\u00fcr\u00fc ve yay\u0131mc\u0131s\u0131 object ve oyunun s\u0131ralamas\u0131 ise integer olarak veri setinde g\u00f6z\u00fckmektedir.","c2b0e8ba":"A comparison of the level at which the relevant games are sold in the two regions is drawn through the scatter plot. Because of some games have very high sales levels, there are clusters of games with low sales levels.\n\n\u0130lgili oyunlar\u0131n iki b\u00f6lgede hangi seviyede sat\u0131ld\u0131\u011f\u0131n\u0131n kar\u015f\u0131la\u015ft\u0131rmas\u0131n\u0131 scatter plot arac\u0131l\u0131\u011f\u0131yla \u00e7izdirmi\u015f bulunmaktay\u0131m. Fakat baz\u0131 oyunlar \u00e7ok y\u00fcksek sat\u0131\u015f seviyelerine sahip oldu\u011fundan dolay\u0131 d\u00fc\u015f\u00fck sat\u0131\u015f seviyelerine sahip oyunlarda k\u00fcmelenmeler bulunmaktad\u0131r.","808a724a":"I created a new data frame called 'x' and took the sales levels in the intersection set of sales in the EU and NA regions, which I filtered into this data frame in. In this way, I created line and scatter plots that can be interpreted more comfortably.\n\n'x' adl\u0131 yeni bir dataframe olu\u015fturup bu dataframein i\u00e7ine filtreleme yapt\u0131\u011f\u0131m EU ve NA b\u00f6lgelerindeki sat\u0131\u015flar\u0131n kesi\u015fim k\u00fcmesinde bulunan sat\u0131\u015f seviyelerini ald\u0131m. Bu sayede derece daha rahat yorumlanabilen line ve scatter plotlar\u0131 olu\u015fturdum.","6f044cb6":"****"}}