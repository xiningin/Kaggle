{"cell_type":{"5ca35748":"code","823db0ca":"code","fa7e1a1e":"code","b1bd27bc":"code","d5077224":"code","3a6490b8":"code","02c95859":"code","11284859":"code","7d7644c8":"code","5df1599d":"code","cee77fe2":"code","8df39565":"code","e0aa9ac7":"code","33ee85b4":"code","548e26d8":"code","f0307667":"code","4ccca767":"code","d617c0d5":"code","c0f6f146":"code","d3fca310":"code","f851c0c2":"code","5325828c":"code","fc4f5ca1":"code","06e7f8d7":"code","66d7f539":"code","a9b61b7f":"code","8b656401":"code","d0728c57":"code","6e032f0e":"code","bcfc6e07":"code","2fa639f7":"code","0928b350":"code","43cecd8c":"code","61a4cc0e":"code","8fa18694":"code","c816de25":"code","0fcece1e":"code","f9d50c14":"code","15f30e57":"code","ea159dd9":"code","489590ec":"markdown","25285966":"markdown","60b351cc":"markdown","ce36b0ae":"markdown","8ce6040c":"markdown","c66efa6e":"markdown","67c1b2d9":"markdown","c019e58a":"markdown","3cdc40b8":"markdown","b2bc9446":"markdown","83800e4c":"markdown","0235dbc7":"markdown","a77f74c4":"markdown","bd59afa5":"markdown","13270b30":"markdown","523f75be":"markdown","7bd66faf":"markdown","ccc766e0":"markdown","9693ef98":"markdown","d8e44505":"markdown","04856237":"markdown","c2da1426":"markdown","52cbcadb":"markdown","25636cc4":"markdown","53ec87bc":"markdown","0ecb99c1":"markdown","338b76ca":"markdown","0ad55513":"markdown","2b61d239":"markdown","4acdd999":"markdown","0c574375":"markdown","a3fa3ed3":"markdown","abd2c95c":"markdown","58a680d3":"markdown","564a546d":"markdown","10d44ca9":"markdown","3c0eb224":"markdown","ea59f573":"markdown"},"source":{"5ca35748":"# Libraries Import\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# in order to show plots within this notebook\n%matplotlib inline\n\nimport seaborn as sb\nsb.set_style('whitegrid')\n\n# to import data, which is stored in a sqlite3 database\nimport sqlite3\n\n# database file's name\ndatabase = '..\/input\/database.sqlite'\n\n#from IPython.display import Image\n#logo = Image(filename='https:\/\/i.imgur.com\/ydwTfM1.png')","823db0ca":"# opening a connection to the database\nconn = sqlite3.connect(database)\n\ntables = pd.read_sql(\"\"\"SELECT *\n                        FROM sqlite_master\n                        WHERE type='table';\"\"\", conn)\ntables","fa7e1a1e":"leagues = pd.read_sql('SELECT * FROM league where name = \\'Italy Serie A\\' ', conn)\nleagues","b1bd27bc":"serie_a = pd.read_sql('SELECT * FROM Match WHERE league_id = 10257 '\n                               ' ORDER BY season, date', conn)\nserie_a.head()","d5077224":"possession_col = serie_a.columns.get_loc('possession')\nserie_a = serie_a.iloc[:, np.r_[0, 3:possession_col]]\nserie_a.head()","3a6490b8":"# retrieving the team's unique ID\ncagliari_id = pd.read_sql('SELECT * FROM Team WHERE team_long_name = \\'Cagliari\\' ', conn)\ncagliari_id","02c95859":"# filtering all Cagliari's matches\ncagliari_matches = serie_a.query('home_team_api_id == 8529 or away_team_api_id == 8529')\ncagliari_matches.shape","11284859":"cagliari_matches.info()","7d7644c8":"cagliari_matches.loc[: , 'date'] =  pd.to_datetime(cagliari_matches['date'], format='%Y-%m-%d')\ncagliari_matches.head()","5df1599d":"cols_to_correct = ['away_player_X11', \n 'away_player_Y11',                 \n'away_player_Y11',\n'home_player_2',\n'home_player_3',\n'home_player_4',\n'home_player_5',\n'home_player_6',\n'home_player_7',\n'home_player_8',\n'home_player_9',\n'home_player_10',\n'home_player_11',\n'away_player_2',\n'away_player_3',\n'away_player_4',\n'away_player_5',\n'away_player_6',\n'away_player_7',\n'away_player_8',\n'away_player_9',\n'away_player_10',\n'away_player_11']\n\ncagliari_matches.fillna(0, inplace=True)","cee77fe2":"# float columns to int\nfor col in cols_to_correct:\n    cagliari_matches.loc[:, col] = cagliari_matches[col].astype(int)","8df39565":"def matches_and_scores(team_matches, team_id):\n    # list with all the H (home) or A (away) matches\n    match_played = [] \n    # list with the scores for the team in that match (3 points for a win, 1 for a draw and 0 for a loss)\n    score = []\n    for index, row in team_matches.iterrows(): \n        if row['home_team_api_id'] == team_id: \n            match_played.append('H') \n            if row['home_team_goal'] > row['away_team_goal']:\n                # home win\n                score.append(3)\n            elif row['home_team_goal'] == row['away_team_goal']:\n                # draw match\n                score.append(1)\n            else:\n                # home defeat\n                score.append(0)\n        else: \n            match_played.append('A') \n            if row['home_team_goal'] > row['away_team_goal']:\n                # away defeat\n                score.append(0)\n            elif row['home_team_goal'] == row['away_team_goal']:\n                # draw\n                score.append(1)\n            else:\n                # away win\n                score.append(3)\n    return match_played, score","e0aa9ac7":"# Cagliari Matches\ncagliari_matches = cagliari_matches.assign(home_away = matches_and_scores(cagliari_matches, cagliari_id['team_api_id'].item())[0], score = matches_and_scores(cagliari_matches,  cagliari_id['team_api_id'].item())[1])","33ee85b4":"# Y => role: goalkeeper, defender, midfielder, forward\ny_position = ['home_player_Y1',\n 'home_player_Y2',\n 'home_player_Y3',\n 'home_player_Y4',\n 'home_player_Y5',\n 'home_player_Y6',\n 'home_player_Y7',\n 'home_player_Y8',\n 'home_player_Y9',\n 'home_player_Y10',\n 'home_player_Y11',\n 'away_player_Y1',\n 'away_player_Y2',\n 'away_player_Y3',\n 'away_player_Y4',\n 'away_player_Y5',\n 'away_player_Y6',\n 'away_player_Y7',\n 'away_player_Y8',\n 'away_player_Y9',\n 'away_player_Y10',\n 'away_player_Y11']\n\n# X => area: left, center, right\nx_postion = ['home_player_X1',\n 'home_player_X2',\n 'home_player_X3',\n 'home_player_X4',\n 'home_player_X5',\n 'home_player_X6',\n 'home_player_X7',\n 'home_player_X8',\n 'home_player_X9',\n 'home_player_X10',\n 'home_player_X11',\n 'away_player_X1',\n 'away_player_X2',\n 'away_player_X3',\n 'away_player_X4',\n 'away_player_X5',\n 'away_player_X6',\n 'away_player_X7',\n 'away_player_X8',\n 'away_player_X9',\n 'away_player_X10',\n 'away_player_X11']\n\n# player_id for the starting 11\nstarters = ['home_player_1',\n 'home_player_2',\n 'home_player_3',\n 'home_player_4',\n 'home_player_5',\n 'home_player_6',\n 'home_player_7',\n 'home_player_8',\n 'home_player_9',\n 'home_player_10',\n 'home_player_11',\n 'away_player_1',\n 'away_player_2',\n 'away_player_3',\n 'away_player_4',\n 'away_player_5',\n 'away_player_6',\n 'away_player_7',\n 'away_player_8',\n 'away_player_9',\n 'away_player_10',\n 'away_player_11']","548e26d8":"import xml.etree.ElementTree as ET\nimport math\n\ndef player_position(match_id, player_id):\n    '''\n        translating the players coordinates X and Y into categories\n        goalkeeper\n        defender\n        midfielder\n        forward\n        and position on the field\n        right\n        center\n        left    \n    \n    '''\n    \n    player_info = \"\"\n    try:\n        if int(player_id):\n            # info about that match\n            match = serie_a[serie_a.match_api_id == match_id]\n            # checking if the player was a starter: in that case we can extract details\n            for i in starters:\n                player_pos = \"\"\n                starter_num = \"\"\n                if int(match[i]) == int(player_id):\n                    player_pos = i\n                    starter_num = player_pos.split('_')[2]\n                    home_away = player_pos.split('_')[0]\n                    x_pos = int(match[player_pos.split('_')[0]+ '_player_X'+ player_pos.split('_')[2]])\n                    y_pos = int(match[player_pos.split('_')[0]+ '_player_Y'+ player_pos.split('_')[2]])\n                    if x_pos >= 1 and x_pos <= 4:\n                        x_pos = 'left'\n                    elif x_pos >= 5 and x_pos <= 7:\n                        x_pos = 'center'\n                    else:\n                        x_pos = 'right'\n                    if y_pos == 1:\n                        y_pos = 'goalkeeper'\n                    elif y_pos >= 2 and y_pos <= 5:\n                        y_pos = 'defender'\n                    elif y_pos >= 6 and y_pos <= 8:\n                        y_pos = 'midfielder'\n                    else:\n                        y_pos = 'forward'\n                    break\n\n            # if that player wasn't among the starters, I can only set a generic attribute\n            if player_pos == \"\":\n                player_pos = \"substitute\"\n                starter_num = \"substitute\"\n                home_away = player_pos.split('_')[0]\n                x_pos = \"substitute\"\n                y_pos = \"substitute\"\n\n            player_info = [{'player_position': starter_num, 'home_away': home_away, 'x_pos': x_pos, 'y_pos': y_pos}]\n\n    except:\n        player_info = \"\"\n        \n    return player_info\n\ndef goals_details(cag_matches):\n    ind = 0\n    goals_info = []\n    for i, v in cag_matches.goal.iteritems():\n        try:\n            id_match = cag_matches.match_api_id.iloc[ind]\n            e = ET.fromstring(v)   \n            for goal in e.findall('value'):\n                player_info = \"\"\n                goal_type = goal.find('comment').text\n                team = goal.find('team').text\n                if goal.find('player1') is not None:\n                    player = goal.find('player1').text\n                elif goal.find('player') is not None:\n                    player = goal.find('player').text\n                else:\n                    player = np.NaN\n                elapsed = goal.find('elapsed').text\n                if goal.find('elapsed_plus') is not None:\n                    elapsed_plus = goal.find('elapsed_plus').text\n                else:\n                    elapsed_plus = 0\n                if goal.find('subtype') is not None:\n                    subtype = goal.find('subtype').text\n                else:\n                    subtype = np.NaN\n\n                player_info = player_position(id_match, player)                            \n                if (len(player_info) == 1):\n                    goals_info.append({'match_api_id': id_match, 'goal_type': goal_type, 'team_id': team, 'player_id': player, \\\n                                  'elapsed_time': elapsed, 'elapsed_plus': elapsed_plus, 'subtype': subtype, \\\n                                    'x_position': player_info[0]['x_pos'], \\\n                                      'y_position': player_info[0]['y_pos'], 'home_away': player_info[0]['home_away']})        \n\n        except TypeError as error:\n            pass\n\n        ind += 1\n        \n    return goals_info","f0307667":"# gathering data and saving it in a DataFrame\ngoals_det = goals_details(cagliari_matches)\ngoals_cag = pd.DataFrame(data=goals_det)\ngoals_cag.head()","4ccca767":"goals_cag.info()","d617c0d5":"cols_to_correct = ['elapsed_time', 'elapsed_plus', 'player_id']\nfor col in cols_to_correct:\n    goals_cag[col] = goals_cag[col].astype(int)","c0f6f146":"season_points = cagliari_matches.groupby('season').score.sum()\nlbl_points = np.arange(0, season_points.max()+ 5, 5)\npositioning = ['9th place', '10th place', '11th place', '12th place', '13th place', '14th place', '15th place']\n\nplt.figure(figsize=(18, 9));\nsb.lineplot(season_points.index, season_points.values);\nplt.title('Points at the end of the Season');\nplt.xlabel('Season');\nplt.yticks(lbl_points, lbl_points);\nsb.despine(left=True, bottom=False, right=True, top=True)","d3fca310":"score = ['loss', 'drws', 'wins']\nyticks = np.arange(0, 22, 1)\n\n# creating the plot\nplt.figure(figsize=(18.5, 9));\n\ncolors = ['#6E75A8', '#FCD581', '#B0413E']\navg = np.arange(0, 2.2, 0.2)\n\nwith sb.color_palette(\"RdBu\", 4):\n    sb.countplot(data = cagliari_matches, x = 'season', hue='score')\n\nplt.title('Results Distribution (number of Lost, Draw, Won Matches)')\nplt.ylabel('Season', fontsize=12)\nplt.ylabel('Matches', fontsize=12)\nplt.grid(False);\nsb.despine(left=False, bottom=False, right=True)\nplt.yticks(yticks, yticks)\n\n# legend\nplt.legend(\n    labels = score,\n    loc = 'best',\n    prop={'size': 14},\n    bbox_to_anchor=(0.52, 0.92)\n);","f851c0c2":"# to better focus on home and away matches, I've created this function which takes the list of matches for a team\n# and returns the count of wins, draws and lost matches along with the share for each of the result types\n# and the season for those results\n\nhome = cagliari_matches.query('home_away ==\\'H\\'')\naway = cagliari_matches.query('home_away == \\'A\\'')\n\n\ndef final_result(matches, home_away, season):\n    '''\n        input:\n            dataframe with matches\n            a variable specifying whether the team appears as home or away team\n            the season those matches were played\n        output:\n            a dataframe containing\n                the number of wins, draws, lost matches\n                the share of wins, draws, lost matches compared to the total of matches played\n                the season those matches were played\n    '''\n    results = []\n    wins, loss, drws = 0, 0, 0\n    for i, v in matches.iterrows():\n        if (v.home_team_goal > v.away_team_goal):\n            if home_away == 'h':\n                wins += 1\n            else:\n                loss += 1\n        elif v.home_team_goal == v.away_team_goal:\n            drws += 1\n        else:\n            if home_away == 'h':\n                loss += 1\n            else:\n                wins += 1\n                \n    results = pd.DataFrame([['wins', wins, round(wins\/matches.shape[0]* 100, 2), season], \\\n                            ['drws', drws, round(drws\/matches.shape[0]* 100, 2), season], \\\n                            ['loss', loss, round(loss\/matches.shape[0]* 100, 2), season]], \\\n                           columns=['result', 'total', 'share', 'season'])    \n    \n    \n    return results","5325828c":"# splitting matches between home and away\nhome_results = final_result(home, 'h', 'overall')\naway_results = final_result(away, 'a', 'overall')\n\n# creating the plot\nfig_wins_loss, ax_wins_loss = plt.subplots(figsize=(18.5, 7.5));\ncolors = ['#6E75A8', '#FCD581', '#B0413E']\nresults = [\"%s %9s%%\" % (lab, siz) for lab, siz in zip(['Wins', 'Drws', 'Loss'], home_results.share)]\nexplode = (0, 0, 0)\n\nfig_wins_loss.add_subplot(1,2,1)\nax_wins_loss.grid(False);\nax_wins_loss.get_xaxis().set_visible(False)\nax_wins_loss.get_yaxis().set_visible(False)\n\nsb.despine(left=True, bottom=True, right=True)\n\n# pie chart for home matches\nplt.pie(home_results.share, explode = explode, shadow=True, startangle=0, colors=colors, radius=1);\n\nplt.legend(\n    title = \"Home Matches\",\n    labels = results,\n    loc = 'upper right',\n    prop = {'size': 13},\n    bbox_to_anchor = (0.52, 0.85),\n    bbox_transform = fig_wins_loss.transFigure\n);\n\nfig_wins_loss.add_subplot(1,2,2)\nresults = [\"%s %9s%%\" % (lab, siz) for lab, siz in zip(['Wins', 'Drws', 'Loss'], away_results.share)]\n\n# pie chart for away matches\nplt.pie(away_results.share, explode = explode, shadow=True, startangle=0, colors=colors, radius=1);\n\nplt.legend(\n    title = \"Away Matches\",\n    labels = results,\n    loc = 'upper right',\n    prop = {'size': 13},\n    bbox_to_anchor = (0.94, 0.85),\n    bbox_transform = fig_wins_loss.transFigure\n);","fc4f5ca1":"yticks = np.arange(0, 13, 1)\n\n# creating the plot\nplt.figure(figsize=(18.5, 9));\n\ncolors = ['#6E75A8', '#FCD581', '#B0413E']\navg = np.arange(0, 2.2, 0.2)\n\nwith sb.color_palette(\"RdBu\", 4):\n    sb.countplot(data = home, x = 'season', hue='score')\n\nplt.title('Results Distribution by Season - Home Matches')\nplt.grid(False);\nsb.despine(left=False, bottom=False, right=True)\nplt.xlabel('Season', fontsize=12)\nplt.ylabel('Matches', fontsize=12)\nplt.yticks(yticks, yticks)\n\n# legend\nplt.legend(\n    labels = score,\n    loc = 'best',\n    prop={'size': 14},\n    bbox_to_anchor=(0.52, 0.92)\n);","06e7f8d7":"yticks = np.arange(0, 13, 1)\n\n# creating the plot\nplt.figure(figsize=(18.5, 9));\n\ncolors = ['#6E75A8', '#FCD581', '#B0413E']\navg = np.arange(0, 2.2, 0.2)\n\nwith sb.color_palette(\"RdBu\", 4):\n    sb.countplot(data = away, x = 'season', hue='score')\n\nplt.title('Results Distribution by Season - Away Matches')\nplt.grid(False);\nsb.despine(left=False, bottom=False, right=True)\nplt.yticks(yticks, yticks)\nplt.xlabel('Season', fontsize=12)\nplt.ylabel('Matches', fontsize=12)\n\n# legend\nplt.legend(\n    labels = score,\n    loc = 'best',\n    prop={'size': 14},\n    bbox_to_anchor=(0.92, 1)\n);","66d7f539":"home_avg_pts = home.groupby('season').score.mean()\naway_avg_pts = away.groupby('season').score.mean()\navg_points = cagliari_matches.groupby('season').score.mean()\n\nlbl_points = np.arange(0, 3.2, 0.2)\n\n# creating the plot\nplt.figure(figsize=(18.5, 9));\n\nsb.lineplot(home_avg_pts.index, home_avg_pts.values, color='b', marker='o', alpha=0.3);\nsb.lineplot(away_avg_pts.index, away_avg_pts.values, color='r', marker='o', alpha=0.3);\nsb.lineplot(avg_points.index, avg_points.values, color = 'g', marker='o');\nplt.title('Average Points per Season');\nplt.xlabel('Season');\nplt.yticks(lbl_points, np.round(lbl_points, 2));\nsb.despine(left=True, bottom=False, right=True, top=True)\n\n# legend\nplt.legend(\n    labels = ['Home Avg', 'Away Avg', 'Season Avg'],\n    loc = 'best',\n    prop={'size': 14},\n    bbox_to_anchor=(1, 1)\n);","a9b61b7f":"home_goals_made = home.groupby('season').home_team_goal.mean()\nhome_goals_taken = home.groupby('season').away_team_goal.mean()\naway_goals_taken = away.groupby('season').home_team_goal.mean()\naway_goals_made = away.groupby('season').away_team_goal.mean()\n\n# creating the plot\nplt.figure(figsize=(18.5, 7.5));\n\ncolors = ['#6E75A8', '#FCD581', '#B0413E']\navg = np.arange(0, 2.2, 0.2)\n\nplt.subplot(1, 2, 1);\n\nsb.lineplot(home_goals_made.index, home_goals_made.values, color='b', marker='o', alpha=0.3);\nsb.lineplot(home_goals_taken.index, home_goals_taken.values, color='r', marker='o', alpha=0.3);\nplt.yticks(avg, np.round(avg, 2));\nplt.xlabel('Season', fontsize=12)\nplt.title('Home Matches Goals by Season');\nsb.despine(left=False, bottom=False, right=True, top=True);\n\n# legend\nplt.legend(\n    labels = ['Goals Made', 'Goals Taken'],\n    loc = 'best',\n    prop={'size': 14},\n    bbox_to_anchor=(1, 0.2)\n);\n\nplt.subplot(1,2,2);\nsb.despine(left=True, bottom=True, right=True);\nsb.lineplot(away_goals_made.index, away_goals_made.values, color='b', marker='o', alpha=0.3);\nsb.lineplot(away_goals_taken.index, away_goals_taken.values, color='r', marker='o', alpha=0.3);\n\nplt.yticks(avg, np.round(avg, 2));\nplt.xlabel('Season', fontsize=12)\nplt.title('Away Matches Goals by Season');","8b656401":"goals_info = pd.merge(goals_cag, cagliari_matches[['match_api_id', 'season']], on='match_api_id', how='left')\ngoals_made_by_pos = goals_info.query('team_id ==\\'8529\\'')\n\n# filtering out substitute because it doesn't give much of information\ngoals_made_by_pos = goals_made_by_pos[goals_made_by_pos.y_position !='substitute']\n\npositions = ['forward', 'midfielder', 'defender', 'goalkeeper', 'substitute']\n\n# creating the plot\nplt.figure(figsize=(18.5, 7.5));\n\nplt.title('Goals made by role - Overall', fontsize=14);\n\nwith sb.color_palette(\"RdBu\", 4):\n    sb.countplot(data = goals_made_by_pos, x = 'season', hue='y_position')\n    \n# legend\nplt.legend(\n    loc = 'best',\n    prop={'size': 14},\n    bbox_to_anchor=(0.88, 0.88)\n);\nplt.grid(axis='x', alpha= 0);\nplt.grid(axis='y', alpha= 0.3);\nplt.ylabel('Goals Made', fontsize=12);\nplt.xticks(fontsize=12);\n\nsb.despine(left=False, bottom=False, right=True)    ","d0728c57":"goals_info_home_away = goals_info[(goals_info.home_away != 'substitute') & (goals_info.team_id == '8529')]\nyticks = np.arange(0, 17, 1)\n\n# creating the plot\nplt.figure(figsize=(28.5, 10));\nplt.rcParams[\"axes.labelsize\"] = 18\n\nwith sb.color_palette(\"RdBu\", 4):\n    g = sb.catplot(x=\"season\", hue=\"y_position\", col=\"home_away\", data=goals_info_home_away, kind=\"count\", height=10, aspect=1, legend = False);\n    g.set_titles('{col_name}')\n    \nplt.yticks(yticks, yticks, fontsize=20);\n\n\n#legend\nplt.legend(\n   loc = 'best',\n   prop={'size': 18},\n   bbox_to_anchor=(0.5, 0.88)\n);","6e032f0e":"goals_made_by_area = goals_info.query('team_id ==\\'8529\\'')\ngoals_made_by_area = goals_made_by_area[goals_made_by_area.x_position != 'substitute']\n\n#palette = [\"#5d8437\", \"#76d74d\",\"#cbce46\"]\nyticks = np.arange(0, 40, 2)\n\n# creating the plot\nplt.figure(figsize=(18.5, 7.5));\nplt.rcParams[\"axes.labelsize\"] = 13\n\n\nwith sb.color_palette(\"RdBu\", 4):\n    sb.countplot(data = goals_made_by_area, x = 'season', hue='x_position');\n\n#legend\nplt.legend(\n   loc = 'best',\n   prop={'size': 14},\n   bbox_to_anchor=(0.5, 0.92)\n);\n\nplt.title('Goals by Position on the field - Overall', fontsize=14)\nplt.yticks(yticks, yticks, fontsize=12);\nplt.xticks(fontsize=12);\nplt.ylabel('Goals Made');\nplt.grid(axis='x', alpha= 0);\nplt.grid(axis='y', alpha= 0.3);\nsb.despine(left=False, bottom=False, right=True)","bcfc6e07":"yticks = np.arange(0, 22, 1)\n\n# creating the plot\nplt.figure(figsize=(28.5, 10));\nplt.rcParams[\"axes.labelsize\"] = 18\n\nwith sb.color_palette(\"RdBu\", 4):\n    g = sb.catplot(x=\"season\", hue=\"x_position\", col=\"home_away\", data=goals_made_by_area, kind=\"count\", height=10, aspect=1,\\\n                   legend = False);\n    g.set_titles('{col_name}')\n\nplt.yticks(yticks, yticks);\n\n#legend\nplt.legend(\n   loc = 'best',\n   prop={'size': 18},\n   bbox_to_anchor=(0.1, 0.95)\n);","2fa639f7":"goals_taken_by_pos = goals_info.query('team_id !=\\'8529\\'')\n\n# filtering out substitute because it doesn't give much of information\ngoals_taken_by_pos = goals_taken_by_pos[goals_taken_by_pos.y_position !='substitute']\n\npositions = ['forward', 'midfielder', 'defender', 'goalkeeper', 'substitute']\n\n# creating the plot\nplt.figure(figsize=(18.5, 7.5));\n\nplt.title('Goals taken by role - Overall', fontsize=14);\n\nwith sb.color_palette(\"RdBu\", 4):\n    sb.countplot(data = goals_taken_by_pos, x = 'season', hue='y_position')\n    \n# legend\nplt.legend(\n    #labels = positions,\n    loc = 'best',\n    prop={'size': 14},\n    bbox_to_anchor=(0.55, 1)\n);\nplt.grid(axis='x', alpha= 0);\nplt.grid(axis='y', alpha= 0.3);\nplt.ylabel('Goals Taken', fontsize=13);\nplt.xlabel('Season', fontsize=13)\nsb.despine(left=False, bottom=False, right=True)  ","0928b350":"yticks = np.arange(0, 18, 1)\n\n# creating the plot\nplt.figure(figsize=(28.5, 10));\nplt.rcParams[\"axes.labelsize\"] = 18\n\nwith sb.color_palette(\"RdBu\", 4):\n    g = sb.catplot(x=\"season\", hue=\"y_position\", col=\"home_away\", data=goals_made_by_pos, kind=\"count\",\\\n                   height=10, aspect=1, legend = False);\n    g.set_titles('{col_name}')\n\nplt.yticks(yticks, yticks);\n\n#legend\nplt.legend(\n   loc = 'best',\n   prop={'size': 18},\n   bbox_to_anchor=(0.1, 0.95)\n);","43cecd8c":"goals_taken_by_pos = goals_info.query('team_id !=\\'8529\\'')\n\n# filtering out substitute because it doesn't give much of information\ngoals_taken_by_pos = goals_taken_by_pos[goals_taken_by_pos.y_position !='substitute']\n\npositions = ['forward', 'midfielder', 'defender', 'goalkeeper', 'substitute']\n\n# creating the plot\nplt.figure(figsize=(18.5, 7.5));\n\nplt.title('Goals taken by position - Overall', fontsize=14);\n\nwith sb.color_palette(\"RdBu\", 4):\n    sb.countplot(data = goals_taken_by_pos, x = 'season', hue='x_position')\n    \n# legend\nplt.legend(\n    loc = 'best',\n    prop={'size': 14},\n    bbox_to_anchor=(0.55, 1)\n);\nplt.grid(axis='x', alpha= 0);\nplt.grid(axis='y', alpha= 0.3);\nplt.ylabel('Goals Taken', fontsize=13);\nplt.xlabel('Season', fontsize=13);\nsb.despine(left=False, bottom=False, right=True)  ","61a4cc0e":"yticks = np.arange(0, 25, 1)\n\n# creating the plot\nplt.figure(figsize=(28.5, 10));\nwith sb.color_palette(\"RdBu\", 4):\n    g = sb.catplot(x=\"season\", hue=\"x_position\", col=\"home_away\", data=goals_taken_by_pos, kind=\"count\",\\\n                   height=10, aspect=1, legend = False);\n    g.set_titles('{col_name}')\n\nplt.yticks(yticks, yticks);\n\n#legend\nplt.legend(\n   loc = 'best',\n   prop={'size': 18},\n   bbox_to_anchor=(0.1, 1.1)\n);","8fa18694":"goals_info_copy = goals_info.copy()\n\n# filtering all Cagliari Goals and excluding the \"substitute\" ones\ngoals_info_copy = goals_info_copy[(goals_info_copy.x_position != 'substitute') & (goals_info_copy.team_id == '8529')]\n\nxpos = []\nypos = []\nfor i, v in goals_info_copy.iterrows():\n    \n    # xpos = 0 left, 1 center, 2 right\n    # ypos = 0 GK, 1 DE, 2 MI, 3 FW\n    \n    if v.x_position == 'center':\n        ypos.append(1)\n    elif v.x_position == 'right':\n        ypos.append(0)\n    elif v.x_position == 'left':\n        ypos.append(2)\n    else:\n        ypos.append(3)\n    if v.y_position == 'goalkeeper':\n        xpos.append(0)\n    elif v.y_position == 'defender':\n        xpos.append(1)\n    elif v.y_position == 'midfielder':\n        xpos.append(2)\n    elif v.y_position == 'forward':\n        xpos.append(3)\n    else:\n        xpos.append(4)\n        \n\ngoals_info_copy['xpos'] = xpos\ngoals_info_copy['ypos'] = ypos","c816de25":"# creating the plot\nplt.figure(figsize=(12.5, 6));\n\npos_y = ['right', 'center', 'left']\npos_x = ['goalkeeper', 'defender', 'midfielder', 'forward']\n\nbins_y = np.arange(0, 3+1, 1)\nbins_x = np.arange(0, 4+1, 1)\nlbl_y = np.arange(0.3, 3+0.3, 1)\nlbl_x = np.arange(0.5, 4+0.3, 1)\nplt.hist2d(data=goals_info_copy, x='xpos', y='ypos', cmin = 0.5, cmap = 'viridis_r', bins = [bins_x, bins_y]);\nplt.xticks(lbl_x, pos_x, ha = 'left', fontsize=12, position=(-0.3,0));\nplt.yticks(lbl_y, pos_y, ha = 'left', fontsize=12, position=(-0.1,0));\n\nplt.colorbar();","0fcece1e":"cagliari_goals = goals_info.query('team_id ==\\'8529\\'')\ncagliari_goals_time= cagliari_goals.elapsed_time + cagliari_goals.elapsed_plus\nbin_edges = np.arange(0, 105, 5)\n\n# creating the plot\nplt.figure(figsize=(28.5, 10));\nplt.hist(cagliari_goals_time, bin_edges)\nplt.xlabel('Minute in the match', fontsize=14)\nplt.ylabel('Number of goals', fontsize=14)\nplt.xticks(bin_edges, bin_edges, fontsize=14)\nplt.yticks(fontsize=14)\nplt.axvline(x=45, linewidth=0.5, color='r');\nplt.axvline(x=90, linewidth=0.5, color='r');","f9d50c14":"cagliari_goals_home = cagliari_goals[cagliari_goals.home_away == 'home']\ncagliari_goals_away = cagliari_goals[cagliari_goals.home_away == 'away']\ncagliari_goals_home_by_time = cagliari_goals_home.elapsed_time + cagliari_goals_home.elapsed_plus\nyticks = np.arange(0, 15, 1)\nxticks = np.arange(0, 105, 5)\n\n# creating the plot\nplt.figure(figsize=(28.5, 10));\n\nplt.hist(cagliari_goals_home_by_time, bin_edges)\nplt.title('Goals distribution over time - Home Matches', fontsize=14)\nplt.xlabel('Minute in the match', fontsize=12)\nplt.ylabel('Number of goals', fontsize=12)\nplt.xticks(xticks, xticks)\nplt.yticks(yticks, yticks)\nplt.axvline(x=45, linewidth=0.5, color='r');\nplt.axvline(x=90, linewidth=0.5, color='r');","15f30e57":"cagliari_goals_away_by_time = cagliari_goals_away.elapsed_time + cagliari_goals_away.elapsed_plus\n\n# creating the plot\nplt.figure(figsize=(28.5, 10));\n\nplt.hist(cagliari_goals_away_by_time, bin_edges)\nplt.title('Goals distribution over time - Away Matches', fontsize=14)\nplt.xlabel('Minute in the match', fontsize=12)\nplt.ylabel('Number of goals', fontsize=12)\nplt.xticks(xticks, xticks)\nplt.yticks(yticks, yticks)\nplt.axvline(x=45, linewidth=0.5, color='r');\nplt.axvline(x=90, linewidth=0.5, color='r');","ea159dd9":"# recovering details about players\nplayers = pd.read_sql('SELECT * FROM Player', conn)\n\n# creating the plot\nplt.figure(figsize=(20, 10));\nscorers_list = pd.merge(goals_info_copy, players, how='inner', left_on='player_id', right_on='player_api_id')\ntopscorers = scorers_list.player_name.value_counts()[:8].reset_index()\nsb.barplot(data=topscorers, y='index', x='player_name', palette = \"rocket\");\n\nplt.ylabel('Top Scorers');\nplt.xlabel('Goals')\nplt.yticks(fontsize=14);\nplt.xticks(fontsize=14);","489590ec":"#### Goals Taken\n\nLet's focus on which were the weaknesses of the defence.\n\nOverall, the best performance was in the season 2011\/2012 with just 33 goals taken but overall we can see that there's quite a balance in the distribution of the goals between _defenders_ and _midfielders_ (taking for granted the prevalence of the _forward_ goals).\n\nA bit more data would've helped understand which were the most dangerous situations for the defence (free kicks, fastbreaks etc).","25285966":"### Breakdown of results: is Cagliari more competitive in Home or Away matches?\n\nThe history of Italy Serie A shows that apart from the big teams, who are allowed to think they'll be able to earn a victory basically on any of their opponents' fields, the smaller ones (involved in a fight to avoid the last 3 spots in the ranking) have to focus on performing at their best in the **Home** matches, where they can count on the strong support of their fans and in external factors (like the features of their field, for example) in order to earn all the points they need to keep their spot in _Serie A_.\n\nLet's see whether Cagliari benefit playing in the home stadium (called _Sant'Elia_) or they had balanced  performances with Away matches.","60b351cc":"# How Cagliari Calcio Performed\n\n## Table of Contents\n<ul>\n<li><a href=\"#intro\">Introduction<\/a><\/li>\n<li><a href=\"#question\">Question<\/a><\/li>\n<li><a href=\"#history\">Brief Historical Overview<\/a><\/li>\n<li><a href=\"#wrangling\">Data Wrangling<\/a><\/li>\n<li><a href=\"#visuals\">Visualizations<\/a><\/li>\n<li><a href=\"#conclusions\">Conclusions<\/a><\/li>\n<\/ul>\n\n<a id='intro'><\/a>\n## Introduction\n\nThis project aims at analizing Cagliari Calcio performances during the seasons available in the dataset **database.sqlite** (from 2008\/2009 to 2014\/2015).\n\nDuring these seasons, Cagliari Calcio went from positive performances and results for such _small_ team (the best positioning was the 9th place in the season 2008\/2009) to the relegation to _Serie B_ in the season 2014\/2015.\n\nThis is my very first _Kernel_ uploaded here and every single feedback or suggestion to help me improve will be strongly appreciated! Thank you in advance!\n\n<a id='question'><\/a>\n## Question\n\nAccording to what highlighted in the Introduction, the main question is: \n\n\"_Can data tell us what Cagliari Calcio lost or missed during the years that lead the team to the relegation?_\"\n\n<a id='history'><\/a>\n## Brief historical overview\n\nDuring these season _several_ managers have changed on Cagliari Calcio's bench:\n\n2008-2009 Massimiliano Allegri<br>\n2009-2010 Massimiliano Allegri (Giorgio Melis)<br>\n2010 Pierpaolo Bisoli (Roberto Donadoni)<br>\n2010-11 Italia Roberto Donadoni<br>\n2011 Massimo Ficcadenti (Davide Ballardini, Massimo Ficcadenti)<br>\n2012 Massimo Ficcadenti (Ivo Pulga)<br>\n2012-13 Ivo Pulga<br>\n2013-14 Diego Luis L\u00f3pez<br>\n2014 Ivo Pulga<br>\n2014 Zden\u011bk Zeman (Gianfranco Zola, Zden\u011bk Zeman)\n\nBringing different mentalities and styles of play which have influenced the Team. Along with the changes on the bench, the Property of the Cagliari Calcio has changed as well: the 2014\/2015 was the first season with a brand new President.","ce36b0ae":"### How goals arrived\n\n#### Goals Made\n\nNow that we know how many goals per season Cagliari scored, we can check deeper on how they were scored, in order to understand which was the stronger area in the attack of Cagliari.","8ce6040c":"## Home and Away by Season\n\nLet's break down the Home and Away performances by season, in order to understand how Cagliari transformed from a mid-ranking team to a relegated one.<br>How can this change be related to a change in the _Home_ or _Away_ performances?","c66efa6e":"### Home and Away goals\n\nLet's see if (and how) the number of goals follows the same path as the average points, as it'd be expected.","67c1b2d9":"I'll filter the _Match_ table in order to get only **Serie A** matches","c019e58a":"And the distribution of the results (even during the most positive season) shows that Cagliari lost more matches than the ones Won or finished in a Draw match. This can't lead to winning championships, too many points got lost during the season. And this tendence got accentuated year by year.","3cdc40b8":"In this case it's not hard to understand that Cagliari has always been more performant in the center, with left attackers which had quite an important impact as well.<br> Attacking from the right side? Not an option!<br>\nThe plot below shows the distribution split by _home_ and _away_ matches, where there's no difference with the _overall_ results.","b2bc9446":"The tables with data that really interest this project are:\n\n* *League*: descriptive data about all the Leagues<br>\n* *Match*: match details<br>\n* *Team*: team details<br>\n* *Player*: players details<br>\n\nI start by querying the League table, in order to obtain the League ID for _Italy Serie A_.","83800e4c":"As expected, goals were scored mostly by _forward_ players which, except for the season 2011\/2012, scored at least 20 goals combined per season.<br> A surprising detail is that _defenders_ has been the second category for most goals scored (four seasons out of seven, plus in the 2011\/2012 they scored the same amout of goals as the midfielders). Could this be influenced by any tactical decision? \n\nLet's see how goals were distributed per role between _home_ and _away_ matches.","0235dbc7":"Home results distribution shows a deep change from the season 2008\/2009 to 2014\/2015: the evolution of the distribution goes from being very positive (the 2008\/2009 sees more victories than draw and lost matches combined) to being the other way around.<br>\nThe change is not sudden, _central_ seasons are almost constant for what matters the number of points earned at home (although the number of defeats is higher than in 2008\/2009, except for the season 2011\/2012).<br>\nThe 2014\/2015 season is the one with worst performances, which is the exact overturning from the 2008\/2009, strongly influencing the whole season and contributing to the relegation.","a77f74c4":"### Time to score\n\nHow were the goals distributed during the match? Was Cagliari more dangerous early in the match or did they get more dangerous as time goes by?","bd59afa5":"We can easily undertand that better results were obtained at _Home_, where about the 65% of the results were _positive_ (even though the share of victories isn't much bigger than the one of defeats).<br>\nAway matches show a completely different reality, where over half of the matches resulted in a defeat along with a very small 18% of victories.","13270b30":"The plot shows that during the first half of the match, except for the first 5 minutes, goals were distributed quite regularly, with a peak between the 35th and 40th minute. The second half is strongly split between very busy starting and ending of the half and a rather _quiet_ central part.<br>\nLet's dive deep this to understand if this is somehow influenced from where the match was played.\n\nIt's surprising the high number of goals arrived during the additional time! (the vertical red lines show the end of the _first half_ and the end of the _regulation time_). ","523f75be":"Among all the 115 available columns, I'll drop the ones about _betting odds_ off","7bd66faf":"### Where goals used to come from\n\nFor what concerns the area of the field which was preferred by the attack.\n\n#### Goals Made","ccc766e0":"<a id='visuals'><\/a>\n## Visualizations\n\n### End of Season positioning\n\nAs mentioned earlier, Cagliari couldn't keep the good results shown during the season 2008\/2009 until the 2014\/2015.<br>\nInitially, the team seemed full of ideas and energy, a good mix of veterans and young players who used to play a more successful football (at least, compared to what Cagliari played in their previous seasons in Serie A).\n\nYear by year things changed and we can easily see that by the number of points earned, which slowly decreased.","9693ef98":"To deeper analise these performances, I can extract the details about goals from the column **goal**. The data is stored in xml format, what I'll do will be to iterate through every row and extract data from the nodes:\n\n**Player id**<br>\n**Elapsed time**: when the goal was scored<br>\n**Elapsed time plus**: time over the 90th min<br>\n**Subtype**: a short description of the type of goal<br>\n\nEach row in the Match table stores the starting 11 both for Home and Away teams. These columns go from 1 to 11 and are also split between (home\/away)_team_player_(X\/Y).<br>\nThese X and Y are a way to define coordinates within the field in order to understand which was the player's area of competence.\n\nI assume that Y coordinates between 2 and 5 are _defenders_, the coordinates between 6 and 8 are _midfielders_ and the ones between 9-11 are _forwards_. Goalkeepers have Y equals to 1.<br>\nSame assumption for the X coordinates, but in this case we have for the coordinates between 1 and 4 a player on the _left_ side of the field, between 5 and 7 in the _central_ area, and for coordinates between 8 and 11 a player on the _right_ side of the field.","d8e44505":"And focus on the matches involving Cagliari Calcio","04856237":"The _home_ distribution of goals taken shows quite a strong balance between _defender_ and _midfielder_ goals, although in the _away_ goals we can see _midfielders_ scoring more than defenders, probably witnessing a pressure that Cagliari suffered during the matches.","c2da1426":"<a id='wrangling'><\/a>\n## Data Wrangling","52cbcadb":"As expected, the final season points average follows a decreasing path (about 0.5 points per games less from the 2008\/2009 to the 2014\/2015).<br>\nThe _home_ average shows the most impressive (negative) change, with such a negative performance during the season 2014\/2015 that surprisingly Cagliari earned more points in away matches than in home matches.","25636cc4":"Away performance has been very strict in terms of results: even in the best season Cagliari couldn't win more than 4 away matches and could mainly rely on drawing a match to earn some points (the number of wins has never been higher than the number of draw matches).\n\nThis confirms what stated earlier in this paragraph: Cagliari's main strategy during all seasons was based on earning the most points at home... and hoping for the best away from _Sant'Elia_","53ec87bc":"Surprisingly, the top scorer is a _midfielder_: Daniele Conti has been a player for Cagliari for more than 15 years and his role as the Captain has surely motivated him giving something more than the others. Furthermore, the other players had much shorter stay in the team, surely contributing to a lower number of goals despite their role as _forward_.","0ecb99c1":"### Top scorers\n\nLet's see (season by season) who were the top scorers","338b76ca":"## Conclusions\n\n<a id='conclusions'><\/a>\n\nOver the years Cagliari has always had a quite constant _small team_ attitude, relying on the performance of its _forward_ players and never trying to impose its style of play over the opponents, specially in _away_ matches (although this assumption could be further studied, looking for more data, for example, about ball possession). This can be confirmed by the high number of goals by the _defenders_ compared by those scored by _midfielders_ (and by the quite low number of total goals).\n\nThe number of home goals showed a surprising trend, which could have heavily contributed to the relegation. The number of _home goals made_ has been quite a constant over the last 4 seasons, along with the strongly increasing number of _goals taken_.<br>This also contributed to _reversing_ the _home results_ distribution: from a strongly positive 2008\/2009 season, Cagliari went to the _opposite situation_ in the 2014\/2015 season.\n\nAnother interesting detail is how the top scorer during these seasons has been a _midfielder_, although _defenders_ have scored more goals in total: the _midfielder_ was an _historic_ part of the team, who played many games for the team, while the _forward_ players have a lower number of match played, because they remained for a shorter time in Cagliari's roster.\n\nAfter the relegation in the 2014\/2015 season, Cagliari quickly returned to _Serie A_ after just one season in _Serie B_ and now it's still alive and kicking (_update_: just confirmed the stay in _Serie A_ for the 2019\/2020 season!).\n\nPlayers may come and go, but the love from the supporters will always stay: **Fortza Casteddu**!\n\n<img src='https:\/\/i.imgur.com\/ydwTfM1.png' width='350px' height='350px'>\n","0ad55513":"In order to calculate Home and Away performances, I need to integrate the DataFrame by adding a column where I'll explicit whether it's a Home or Away match and the points earned after that match (3 points for a victory, 1 point for a draw and 0 points for a loss).\n\nI'll do all that through this function:","2b61d239":"Away goals show a team more _careful_ early in the match and aggressive at the end of the first half. The second half is in general quite _not offensive_, and the general path seems to suggest a more cautious attitude again, with the exception of the latest minutes where (likely) the team tries to score in order to recover a possible disadvantage).","4acdd999":"#### Goals Taken by position on the field\n\nGoals taken follow the same path shown for the goals made: the favourite areas to create goals were the _center_\/_left_. There are some more goals _from the right side_ of the court, still a quite low number though (could it be a flaw in the data?).","0c574375":"#### Hottest spots to score a goal\n\nThe heatmap below confirms what seen earlier: forward players on the left side of the attack were more likely to score a goal than the other players.","a3fa3ed3":"### Sources\n\nData about the Serie A championship and Cagliari Calcio can be found here\n\n*    http:\/\/www.legaseriea.it\/it\/serie-a\/squadre\/cagliari\/storia\n    \n*    http:\/\/www.legaseriea.it\/it\/serie-a\/albo-d-oro\n\n### Data and Libraries","abd2c95c":"The plot below shows how, in home matches, Cagliari used to score more in the first half, and the distribution of goals is quite regular along the whole first half, with the exception of the very first and last 5 minutes.<br>\nThe second half shows a quite _expected_ pattern, with the first 10 minutes where the team tries to pressure the _away team_ looking for a goal and the last 10 minutes where, again, the pressure rises.","58a680d3":"I'll adjust the fields a little:\n\n- elapsed_time and elapsed_plus, player_id from str to int","564a546d":"Checking the structure of the data, I will correct the type of columns for:<br>\n* date: changed to datetime<br>\n* away_player_X11, away_player_Y11, and most of the home_player and away_player: for a matter of consistency, those fields will be converted from float to int. The few of these columns with _null_ values will be replaced by zeros.","10d44ca9":"The plot about goals show how inconstant _away_ performance has been, with the number of goals made going up and down (for example, the average of goals made in the 2014\/2015 was more than twice the average recorded the previous season).<br>\n_Home_ goals help to explain why the _home_ performance has been quite _constant_ over the years and why the last year lead to a relegation: while the number of goals made has been the same for almost 4 seasons, the goals taken until the season 2014\/2015 grew to over twice the ones suffered in the season 2011\/2012.","3c0eb224":"After installing all the required libraries, let's look inside the database and see by what _tables_ it is composed of:","ea59f573":"Splitting goals between _home_ and _away_ still confirms the predominance of goals by the _defenders_ in _home_ matches over the _midfielders_, while _away_ the goals were more equally distributed.<br>\nThis high number of goals from the _defenders_ might be a symptom of a team that's not built to put a continuous pressure over their opponents, but adds more _fire_ to its attack in situations like free kicks."}}