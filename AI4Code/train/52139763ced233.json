{"cell_type":{"e1b5dc2a":"code","22172729":"code","d073ece6":"code","f1db5aaa":"code","a8aeb3b2":"code","8fb52656":"code","54dd4c81":"code","ff82033b":"code","56ab0c4f":"code","df35cf5c":"code","bb6c069c":"code","36c8ce2e":"code","93dc453f":"code","103ede45":"code","95e60aba":"code","5fdea7f7":"code","92d5b52d":"code","03eb70c2":"code","548d4a2d":"code","61459e34":"code","636a4c40":"code","a6c8492d":"code","70fd9f54":"code","bd1a4ea1":"code","3396c9c2":"code","aa5c97c6":"code","f55a9d63":"code","cefbf28a":"code","d06f435e":"code","af8ec3a8":"code","f793f72b":"code","f420825b":"code","3c92b03d":"code","1d2681b5":"code","9b83b7a8":"code","48f08b11":"code","86d16863":"code","56eb19b0":"code","612693ee":"code","a36ae500":"code","8e1aa014":"code","c201e3a2":"code","eab44500":"code","f72cd235":"code","6313a141":"code","6d89a46b":"code","73d32410":"code","be7f6311":"code","305f56a5":"code","e1ed98bb":"code","18994e55":"code","ef875c40":"code","d8f63a7d":"code","bf586d21":"code","3d67a97d":"code","08197cab":"code","83e26f78":"code","23f472d3":"code","87937e32":"code","2ed4ab4f":"code","9eecdde6":"code","a8312705":"code","8c9071b5":"code","d9fb141d":"code","b6e69926":"code","f6b4aaa1":"code","d8089951":"code","87220220":"code","518d0bfa":"code","7fd815da":"code","e16edab5":"code","5f655fca":"code","902b3072":"code","6c768248":"code","bf372087":"code","7f683291":"code","936584a1":"code","c3724378":"code","11b6a4ba":"code","350e619d":"code","f74700ce":"code","331f08d7":"code","4aef833f":"code","5c8c23e2":"code","b60bd635":"code","fbfb02d1":"code","ee69ca18":"code","b8b66b3f":"code","5c0370b8":"code","bc4f405f":"code","1c81b0ef":"code","6a8b9ba6":"code","a2fb51ff":"code","36e02419":"code","4c336d50":"code","497ede51":"code","e19a0476":"code","5cfb03a3":"code","3de31970":"code","f129eceb":"code","16b92f48":"code","82dfc05c":"code","d3c41d4d":"code","797611a8":"code","985a4442":"code","75090e8f":"code","b2d1b9a1":"code","5dac32ac":"code","2a2cffe4":"code","ee1f42de":"code","08880232":"code","e83f86ac":"code","d28dd590":"code","027eacba":"code","63ccf1d5":"code","947c1fef":"code","6bc85eda":"code","be585b67":"code","d9b533c3":"code","fd3de287":"code","0e53ec65":"code","df50e1a8":"code","78bb3a57":"code","fe1ddcb6":"code","9a08a2d7":"code","e1fce2c3":"code","fcc6fe14":"code","41479bcb":"code","978a107a":"code","38702c4f":"code","8fc15c08":"code","b0d53abc":"code","61753c5e":"code","8b2738f6":"code","f52528d8":"code","1a63d912":"code","3ab2afdf":"code","bf0a631c":"code","a4507bbd":"code","5eca038d":"code","ee1d5a3e":"code","1bb3034d":"code","a9b00818":"code","29138341":"code","d14947a3":"code","e2544b4d":"code","3ec554cf":"code","991dadf2":"code","32818d5b":"code","3f3bb4ed":"code","e8055898":"code","adbb7211":"code","e7273d54":"code","89978c0a":"code","b7c54c0c":"markdown","8d640e7f":"markdown","c5329d54":"markdown","5d54d7bf":"markdown","b4bb9c79":"markdown","812c5a30":"markdown","a22f0006":"markdown","c672ba97":"markdown","93526dc6":"markdown","ec379342":"markdown","904f40b9":"markdown","d14de99b":"markdown","4655d227":"markdown","6e59f7c0":"markdown","ec1373ce":"markdown","f9882963":"markdown","b12ad414":"markdown","3830048a":"markdown","4f28e90c":"markdown","683ac3d7":"markdown","156916c1":"markdown","f5ea2e35":"markdown","61de2b10":"markdown","6fd26552":"markdown","350be621":"markdown","190503cd":"markdown","6c258f07":"markdown","e9d3e32e":"markdown","aab2c1d6":"markdown","4b01f2a3":"markdown","dc8d76ad":"markdown","bc57930d":"markdown","b6ad65b9":"markdown","d31bb0d0":"markdown","123531d8":"markdown","bba85625":"markdown","3d741995":"markdown","4f70d813":"markdown","377b4bb0":"markdown","88280e61":"markdown","ac4edcf6":"markdown","1385de95":"markdown","0064aa78":"markdown"},"source":{"e1b5dc2a":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\nimport plotly.express as px\npd.set_option('display.max_rows', None)\nfrom plotly.subplots import make_subplots\nimport seaborn as sns\nimport datetime","22172729":"data = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')\n","d073ece6":"#Percentage of NAN Values \nNAN = [(c, data[c].isna().mean()*100) for c in data]\nNAN = pd.DataFrame(NAN, columns=[\"column_name\", \"percentage\"])\nNAN","f1db5aaa":"data[\"Province\/State\"]= data[\"Province\/State\"].fillna('Unknown')\n","a8aeb3b2":"data.head()","8fb52656":"data[[\"Confirmed\",\"Deaths\",\"Recovered\"]] =data[[\"Confirmed\",\"Deaths\",\"Recovered\"]].astype(int)","54dd4c81":"data['Country\/Region'] = data['Country\/Region'].replace('Mainland China', 'China')","ff82033b":"data['Active_case'] = data['Confirmed'] - data['Deaths'] - data['Recovered']\ndata.head()","56ab0c4f":"Data = data[data['ObservationDate'] == max(data['ObservationDate'])].reset_index()\n","df35cf5c":"Data_world = Data.groupby([\"ObservationDate\"])[[\"Confirmed\",\"Active_case\",\"Recovered\",\"Deaths\"]].sum().reset_index()","bb6c069c":"labels = [\"Last Update\",\"Confirmed\",\"Active cases\",\"Recovered\",\"Deaths\"]\nfig = go.Figure(data=[go.Table(header=dict(values=labels),\n                 cells=dict(values=Data_world.loc[0,[\"ObservationDate\",\"Confirmed\",\"Active_case\",\"Recovered\",\"Deaths\"]]))\n                     ])\nfig.update_layout(\n    title='Coronavirus in the word : ',\n)\nfig.show()\n","36c8ce2e":"labels = [\"Active cases\",\"Recovered\",\"Deaths\"]\nvalues = Data_world.loc[0, [\"Active_case\",\"Recovered\",\"Deaths\"]]\nfig = px.pie(Data_world, values=values, names=labels,color_discrete_sequence=['rgb(77,146,33)','rgb(69,144,185)','rgb(77,77,77)'],hole=0.7)\nfig.update_layout(\n    title='Total cases : '+str(Data_world[\"Confirmed\"][0]),\n)\nfig.show()","93dc453f":"data_over_time= data.groupby([\"ObservationDate\"])[[\"Confirmed\",\"Active_case\",\"Recovered\",\"Deaths\"]].sum().reset_index().sort_values(\"ObservationDate\",ascending=True).reset_index(drop=True)\n\n","103ede45":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=data_over_time.index, y=data_over_time['Confirmed'],\n                    mode='lines',\n                    name='Confirmed cases'))\n\n\nfig.update_layout(\n    title='Evolution of Confirmed cases over time in the word',\n        template='plotly_white',\n      yaxis_title=\"Confirmed cases\",\n    xaxis_title=\"Days\",\n\n)\n\nfig.show()","95e60aba":"fig = go.Figure()\n\n\nfig.add_trace(go.Scatter(x=data_over_time.index, y=data_over_time['Active_case'],\n                    mode='lines',marker_color='yellow',\n                    name='Active cases',line=dict( dash='dot')))\n\nfig.update_layout(\n    title='Evolution of Active cases over time in the world',\n        template='plotly_dark',\n      yaxis_title=\"Active cases\",\n    xaxis_title=\"Days\",\n\n)\n\nfig.show()\n\n","5fdea7f7":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x=data_over_time.index, y=data_over_time['Recovered'],\n                    mode='lines',\n                    name='Recovered cases',marker_color='green'))\n\nfig.update_layout(\n    title='Evolution of Recovered cases over time in the world',\n        template='plotly_white',\n      yaxis_title=\"Recovered cases\",\n    xaxis_title=\"Days\",\n\n)\n\nfig.show()\n\n","92d5b52d":"\nfig = go.Figure()\n\nfig.add_trace(go.Scatter(x=data_over_time.index, y=data_over_time['Deaths'],name='Deaths',\n                                   marker_color='black',mode='lines',line=dict( dash='dot') ))\n\nfig.update_layout(\n    title='Evolution of Deaths over time in the world',\n        template='plotly_white',\n     yaxis_title=\"Deaths\",\n    xaxis_title=\"Days\",\n\n)\n\nfig.show()","03eb70c2":"\nfig = go.Figure(go.Bar(\n            x=data_over_time['ObservationDate'],\n            y=data_over_time['Confirmed'],\n           ))\nfig.update_layout(\n    title='Confirmed Cases In Each Day',\n    template='plotly_white',\n     xaxis_title=\"Confirmed Cases\",\n    yaxis_title=\"Days\",\n)\nfig.show()","548d4a2d":"fig = go.Figure(go.Bar(\n            x=data_over_time['ObservationDate'],\n            y=data_over_time['Active_case'],\n    marker_color='rgb(253,187,132)'\n           ))\nfig.update_layout(\n    title='Active Cases In Each Day',\n    template='plotly_dark',\n     xaxis_title=\"Active Cases\",\n    yaxis_title=\"Days\",\n)\nfig.show()","61459e34":"fig = go.Figure(go.Bar(\n            x=data_over_time['ObservationDate'],\n            y=data_over_time['Recovered'],\n    marker_color='rgb(178,24,43)'\n           ))\nfig.update_layout(\n    title='Recovered Cases In Each Day',\n    template='plotly_white',\n     xaxis_title=\"Recovered Cases\",\n    yaxis_title=\"Days\",\n)\nfig.show()","636a4c40":"fig = go.Figure(go.Bar(\n            x=data_over_time['ObservationDate'],\n            y=data_over_time['Deaths'],\n    marker_color='rgb(13,48,100)'\n           ))\nfig.update_layout(\n    title='Deaths In Each Day',\n    template='plotly_white',\n     xaxis_title=\"Deaths\",\n    yaxis_title=\"Days\",\n)\nfig.show()","a6c8492d":"Data_per_country = Data.groupby([\"Country\/Region\"])[\"Confirmed\",\"Active_case\",\"Recovered\",\"Deaths\"].sum().reset_index().sort_values(\"Confirmed\",ascending=False).reset_index(drop=True)\n","70fd9f54":"headerColor = 'grey'\nrowEvenColor = 'lightgrey'\nrowOddColor = 'white'\n\nfig = go.Figure(data=[go.Table(\n  header=dict(\n    values=['<b>Country<\/b>','<b>Confirmed Cases<\/b>'],\n    line_color='darkslategray',\n    fill_color=headerColor,\n    align=['left','center'],\n      \n    font=dict(color='white', size=12)\n  ),\n  cells=dict(\n    values=[\n      Data_per_country['Country\/Region'],\n      Data_per_country['Confirmed'],\n      ],\n    line_color='darkslategray',\n    # 2-D list of colors for alternating rows\n    fill_color = [[rowOddColor,rowEvenColor,rowOddColor, rowEvenColor,rowOddColor]*len(Data_per_country)],\n    align = ['left', 'center'],\n    font = dict(color = 'darkslategray', size = 11)\n    ))\n])\nfig.update_layout(\n    title='Confirmed Cases In Each Country',\n)\nfig.show()","bd1a4ea1":"\nfig = go.Figure(go.Bar(\n            x=Data_per_country['Confirmed'],\n            y=Data_per_country['Country\/Region'],\n            orientation='h'))\nfig.update_layout(\n    title='Confirmed Cases In Each Country',\n    template='plotly_white',\n     xaxis_title=\"Confirmed Cases\",\n    yaxis_title=\"Countries\",\n)\nfig.show()","3396c9c2":"fig = go.Figure(go.Bar(\n            x=Data_per_country['Active_case'],\n            y=Data_per_country['Country\/Region'],\n            orientation='h',\n            marker_color='#DC3912',))\nfig.update_layout(\n    title='Active Cases In Each Country',\n    template='plotly_white',\n    xaxis_title=\"Active Cases\",\n    yaxis_title=\"Countries\",\n)\nfig.show()","aa5c97c6":"fig = go.Figure(go.Bar(\n            x=Data_per_country['Recovered'],\n            y=Data_per_country['Country\/Region'],\n            orientation='h',\n            marker_color='#2CA02C',))\nfig.update_layout(\n    title='Recovered Cases In Each Country',\n    template='plotly_white',\n     xaxis_title=\"Recovered Cases\",\n    yaxis_title=\"Countries\",\n)\nfig.show()","f55a9d63":"fig = go.Figure(go.Bar(\n            x=Data_per_country['Deaths'],\n            y=Data_per_country['Country\/Region'],\n            orientation='h',\n            marker_color='black',))\nfig.update_layout(\n    title='Deaths In Each Country',\n    template='plotly_white',\n    xaxis_title=\"Deaths\",\n    yaxis_title=\"Countries\",\n)\n\nfig.show()","cefbf28a":"fig = px.choropleth(Data_per_country, locations=Data_per_country['Country\/Region'],\n                    color=Data_per_country['Confirmed'],locationmode='country names', \n                    hover_name=Data_per_country['Country\/Region'], \n                    color_continuous_scale=px.colors.sequential.Tealgrn,template='plotly_dark', )\nfig.update_layout(\n    title='Confirmed Cases In Each Country',\n)\nfig.show()","d06f435e":"fig = px.choropleth(Data_per_country, locations=Data_per_country['Country\/Region'],\n                    color=Data_per_country['Active_case'],locationmode='country names', \n                    hover_name=Data_per_country['Country\/Region'], \n                    color_continuous_scale=px.colors.sequential.Tealgrn,template='plotly_white', )\nfig.update_layout(\n    title='Active Cases In Each Country',\n)\nfig.show()","af8ec3a8":"fig = px.choropleth(Data_per_country, locations=Data_per_country['Country\/Region'],\n                    color=Data_per_country['Recovered'],locationmode='country names', \n                    hover_name=Data_per_country['Country\/Region'], \n                    color_continuous_scale=px.colors.sequential.Tealgrn,template='plotly_white', )\nfig.update_layout(\n    title='Recovered Cases In Each Country',\n)\nfig.show()","f793f72b":"fig = px.choropleth(Data_per_country, locations=Data_per_country['Country\/Region'],\n                    color=Data_per_country['Deaths'],locationmode='country names', \n                    hover_name=Data_per_country['Country\/Region'], \n                    color_continuous_scale=px.colors.sequential.Tealgrn,template='plotly_dark', )\nfig.update_layout(\n    title='Deaths In Each Country',\n)\nfig.show()","f420825b":"data_per_country = data.groupby([\"Country\/Region\",\"ObservationDate\"])[[\"Confirmed\",\"Active_case\",\"Recovered\",\"Deaths\"]].sum().reset_index().sort_values(\"ObservationDate\",ascending=True).reset_index(drop=True)\n","3c92b03d":"fig = px.choropleth(data_per_country, locations=data_per_country['Country\/Region'],\n                    color=data_per_country['Confirmed'],locationmode='country names', \n                    hover_name=data_per_country['Country\/Region'], \n                    color_continuous_scale=px.colors.sequential.deep,\n                    animation_frame=\"ObservationDate\")\nfig.update_layout(\n\n    title='Evolution of confirmed cases In Each Country',\n)\nfig.show()","1d2681b5":"fig = px.choropleth(data_per_country, locations=data_per_country['Country\/Region'],\n                    color=data_per_country['Active_case'],locationmode='country names', \n                    hover_name=data_per_country['Country\/Region'], \n                    color_continuous_scale=px.colors.sequential.Tealgrn,\n                    animation_frame=\"ObservationDate\")\nfig.update_layout(\n\n    title='Evolution of active cases In Each Country',\n    template='plotly_dark'\n)\nfig.show()","9b83b7a8":"fig = px.choropleth(data_per_country, locations=data_per_country['Country\/Region'],\n                    color=data_per_country['Recovered'],locationmode='country names', \n                    hover_name=data_per_country['Country\/Region'], \n                    color_continuous_scale=px.colors.sequential.deep,\n                    animation_frame=\"ObservationDate\")\nfig.update_layout(\n    title='Evolution of recovered cases In Each Country',\n)\nfig.show()","48f08b11":"fig = px.choropleth(data_per_country, locations=data_per_country['Country\/Region'],\n                    color=data_per_country['Deaths'],locationmode='country names', \n                    hover_name=data_per_country['Country\/Region'], \n                    color_continuous_scale=px.colors.sequential.Tealgrn,\n                    animation_frame=\"ObservationDate\")\nfig.update_layout(\n    title='Evolution of deaths In Each Country',\n    template='plotly_dark'\n)\nfig.show()","86d16863":"fig = go.Figure(data=[go.Bar(\n            x=Data_per_country['Country\/Region'][0:10], y=Data_per_country['Confirmed'][0:10],\n            text=Data_per_country['Confirmed'][0:10],\n            textposition='auto',\n            marker_color='black',\n            \n\n        )])\nfig.update_layout(\n    title='Most 10 infected Countries',\n    xaxis_title=\"Countries\",\n    yaxis_title=\"Confirmed Cases\",\n        template='plotly_white'\n\n)\nfig.show()","56eb19b0":"fig = go.Figure(data=[go.Scatter(\n    x=Data_per_country['Country\/Region'][0:10],\n    y=Data_per_country['Confirmed'][0:10],\n    mode='markers',\n    \n    marker=dict(\n        color=100+np.random.randn(500),\n        size=(Data_per_country['Confirmed'][0:10]\/25000),\n        showscale=True\n        )\n)])\n\nfig.update_layout(\n    title='Most 10 infected Countries',\n    xaxis_title=\"Countries\",\n    yaxis_title=\"Confirmed Cases\",\n    template='plotly_dark'\n)\nfig.show()","612693ee":"Recovered_per_country = Data.groupby([\"Country\/Region\"])[\"Recovered\"].sum().reset_index().sort_values(\"Recovered\",ascending=False).reset_index(drop=True)\n","a36ae500":"headerColor = 'grey'\nrowEvenColor = 'lightgrey'\nrowOddColor = 'white'\n\nfig = go.Figure(data=[go.Table(\n  header=dict(\n    values=['<b>Country<\/b>','<b>Recovered Cases<\/b>'],\n    line_color='darkslategray',\n    fill_color=headerColor,\n    align=['left','center'],\n    font=dict(color='white', size=12)\n  ),\n  cells=dict(\n    values=[\n      Recovered_per_country['Country\/Region'],\n      Recovered_per_country['Recovered'],\n      ],\n    line_color='darkslategray',\n    # 2-D list of colors for alternating rows\n    fill_color = [[rowOddColor,rowEvenColor,rowOddColor, rowEvenColor,rowOddColor]*len(Data_per_country)],\n    align = ['left', 'center'],\n    font = dict(color = 'darkslategray', size = 11)\n    ))\n])\nfig.update_layout(\n    title='Recovered Cases In Each Country',\n)\nfig.show()","8e1aa014":"fig = px.pie(Recovered_per_country, values=Recovered_per_country['Recovered'], names=Recovered_per_country['Country\/Region'],\n             title='Recovered cases',\n            )\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.update_layout(\n    template='plotly_white'\n)\nfig.show()","c201e3a2":"fig = go.Figure(data=[go.Bar(\n            x=Recovered_per_country['Country\/Region'][0:10], y=Recovered_per_country['Recovered'][0:10],\n            text=Recovered_per_country['Recovered'][0:10],\n            textposition='auto',\n            marker_color='green',\n\n        )])\nfig.update_layout(\n    title='Most 10 infected Countries',\n    xaxis_title=\"Countries\",\n    yaxis_title=\"Recovered Cases\",\n    template='plotly_white'\n)\nfig.show()\n","eab44500":"fig = go.Figure(data=[go.Scatter(\n    x=Recovered_per_country['Country\/Region'][0:10],\n    y=Recovered_per_country['Recovered'][0:10],\n    mode='markers',\n    marker=dict(\n        color=100+np.random.randn(500),\n        size=(Data_per_country['Recovered'][0:10]\/20000),\n        showscale=True\n        )\n)])\nfig.update_layout(\n    title='Most 10 infected Countries',\n    xaxis_title=\"Countries\",\n    yaxis_title=\"Recovered Cases\",\n    template='plotly_white'\n\n)\nfig.show()","f72cd235":"Active_per_country = Data.groupby([\"Country\/Region\"])[\"Active_case\"].sum().reset_index().sort_values(\"Active_case\",ascending=False).reset_index(drop=True)\n","6313a141":"headerColor = 'grey'\nrowEvenColor = 'lightgrey'\nrowOddColor = 'white'\n\nfig = go.Figure(data=[go.Table(\n  header=dict(\n    values=['<b>Country<\/b>','<b>Active Cases<\/b>'],\n    line_color='darkslategray',\n    fill_color=headerColor,\n    align=['left','center'],\n    font=dict(color='white', size=12)\n  ),\n  cells=dict(\n    values=[\n      Active_per_country['Country\/Region'],\n      Active_per_country['Active_case'],\n      ],\n    line_color='darkslategray',\n    # 2-D list of colors for alternating rows\n    fill_color = [[rowOddColor,rowEvenColor,rowOddColor, rowEvenColor,rowOddColor]*len(Data_per_country)],\n    align = ['left', 'center'],\n    font = dict(color = 'darkslategray', size = 11)\n    ))\n])\nfig.update_layout(\n    title='Active Cases In Each Country',\n)\nfig.show()","6d89a46b":"fig = go.Figure(data=[go.Bar(\n            x=Active_per_country['Country\/Region'][0:10], y=Active_per_country['Active_case'][0:10],\n            text=Active_per_country['Active_case'][0:10],\n           \n        )])\nfig.update_layout(\n    title='Most 10 infected Countries',\n    xaxis_title=\"Countries\",\n    yaxis_title=\"Active Cases\",\n    template='plotly_white'\n)\nfig.show()\n","73d32410":"fig = go.Figure(data=[go.Scatter(\n    x=Active_per_country['Country\/Region'][0:10],\n    y=Active_per_country['Active_case'][0:10],\n    mode='markers',\n    marker=dict(\n        color=10+np.random.randn(200),\n\n        size=Active_per_country['Active_case'][0:10]\/15000,\n        showscale=True\n        )\n)])\nfig.update_layout(\n    title='Most 10 infected Countries',\n    xaxis_title=\"Countries\",\n    yaxis_title=\"Active Cases\",\n        template='plotly_white'\n\n)\nfig.show()","be7f6311":"Deaths_per_country = Data.groupby([\"Country\/Region\"])[\"Deaths\"].sum().reset_index().sort_values(\"Deaths\",ascending=False).reset_index(drop=True)\n","305f56a5":"headerColor = 'grey'\nrowEvenColor = 'lightgrey'\nrowOddColor = 'white'\n\nfig = go.Figure(data=[go.Table(\n  header=dict(\n    values=['<b>Country<\/b>','<b>Deaths<\/b>'],\n    line_color='darkslategray',\n    fill_color=headerColor,\n    align=['left','center'],\n    font=dict(color='white', size=12)\n  ),\n  cells=dict(\n    values=[\n      Deaths_per_country['Country\/Region'],\n      Deaths_per_country['Deaths'],\n      ],\n    line_color='darkslategray',\n    # 2-D list of colors for alternating rows\n    fill_color = [[rowOddColor,rowEvenColor,rowOddColor, rowEvenColor,rowOddColor]*len(Data_per_country)],\n    align = ['left', 'center'],\n    font = dict(color = 'darkslategray', size = 11)\n    ))\n])\nfig.update_layout(\n    title='Deaths In Each Country',\n)\nfig.show()","e1ed98bb":"fig = go.Figure(data=[go.Bar(\n            x=Deaths_per_country['Country\/Region'][0:10], y=Deaths_per_country['Deaths'][0:10],\n            text=Deaths_per_country['Deaths'][0:10],\n            textposition='auto',\n            marker_color='black'\n\n        )])\nfig.update_layout(\n    title='Most 10 infected Countries',\n    xaxis_title=\"Countries\",\n    yaxis_title=\"Deaths\",\n        template='plotly_white'\n\n)\nfig.show()\n\n","18994e55":"fig = go.Figure(data=[go.Scatter(\n    x=Deaths_per_country['Country\/Region'][0:10],\n    y=Deaths_per_country['Deaths'][0:10],\n    mode='markers',\n    marker=dict(\n        color=[145, 140, 135, 130, 125, 120,115,110,105,100],\n        size=Deaths_per_country['Deaths'][0:10]\/1000,\n        showscale=True\n        )\n)])\nfig.update_layout(\n    title='Most 10 infected Countries',\n    xaxis_title=\"Countries\",\n    yaxis_title=\"Deaths\",\n        template='plotly_white'\n\n)\nfig.show()","ef875c40":"Data_tunisia = data [(data['Country\/Region'] == 'Tunisia') ].reset_index(drop=True)\nData_tunisia.head()","d8f63a7d":"\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=Data_tunisia['ObservationDate'], y=Data_tunisia['Confirmed'],\n                    mode='lines',\n                    name='Confirmed cases'))\n\nfig.add_trace(go.Scatter(x=Data_tunisia['ObservationDate'], y=Data_tunisia['Active_case'],\n                    mode='lines',\n                    name='Active cases',line=dict( dash='dot')))\nfig.add_trace(go.Scatter(x=Data_tunisia['ObservationDate'], y=Data_tunisia['Deaths'],name='Deaths',\n                                   marker_color='black',mode='lines',line=dict( dash='dot') ))\nfig.add_trace(go.Scatter(x=Data_tunisia['ObservationDate'], y=Data_tunisia['Recovered'],\n                    mode='lines',\n                    name='Recovered cases',marker_color='green'))\nfig.update_layout(\n    title='Evolution of cases over time in Tunisia',\n        template='plotly_white'\n\n)\n\nfig.show()\n\n","bf586d21":"fig = go.Figure(go.Bar(\n            x=Data_tunisia['ObservationDate'],\n            y=Data_tunisia['Confirmed'],\n    marker_color='rgb(13,48,100)'\n           ))\nfig.update_layout(\n    title='Confirmed cases In Each Day',\n    template='plotly_white',\n     xaxis_title=\"Confirmed cases\",\n    yaxis_title=\"Days\",\n)\nfig.show()","3d67a97d":"fig = go.Figure(go.Bar(\n            x=Data_tunisia['ObservationDate'],\n            y=Data_tunisia['Active_case'],\n    marker_color='rgb(13,48,100)'\n           ))\nfig.update_layout(\n    title='Active cases In Each Day',\n    template='plotly_white',\n     xaxis_title=\"Active cases\",\n    yaxis_title=\"Days\",\n)\nfig.show()","08197cab":"fig = go.Figure(go.Bar(\n            x=Data_tunisia['ObservationDate'],\n            y=Data_tunisia['Recovered'],\n    marker_color='rgb(13,48,100)'\n           ))\nfig.update_layout(\n    title='Recovered cases In Each Day',\n    template='plotly_white',\n     xaxis_title=\"Recovered cases\",\n    yaxis_title=\"Days\",\n)\nfig.show()","83e26f78":"fig = go.Figure(go.Bar(\n            x=Data_tunisia['ObservationDate'],\n            y=Data_tunisia['Deaths'],\n    marker_color='rgb(13,48,100)'\n           ))\nfig.update_layout(\n    title='Deaths In Each Day',\n    template='plotly_white',\n     xaxis_title=\"Deaths\",\n    yaxis_title=\"Days\",\n)\nfig.show()","23f472d3":"Data_tunisia_last = Data_tunisia[Data_tunisia['ObservationDate'] == max(Data_tunisia['ObservationDate'])].reset_index()\nData_tunisia_last","87937e32":"\ncolors = ['rgb(2,58,88)','rgb(65,171,93)', 'rgb(127,0,0)']\nlabels = [\"Active cases\",\"Recovered\",\"Deaths\"]\nvalues = Data_tunisia_last.loc[0, [\"Active_case\",\"Recovered\",\"Deaths\"]]\n\nfig = go.Figure(data=[go.Pie(labels=labels,\n                             values=values)])\nfig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=20,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=2)))\nfig.show()","2ed4ab4f":"Data_China = data [(data['Country\/Region'] == 'China') ].reset_index(drop=True)\nData_China.head()","9eecdde6":"Data_china_last = Data_China[Data_China['ObservationDate'] == max(Data_China['ObservationDate'])].reset_index()\nData_china_last.head()","a8312705":"Data_china_per_state= Data_china_last.groupby([\"Province\/State\"])[\"Confirmed\",\"Active_case\",\"Recovered\",\"Deaths\"].sum().reset_index().sort_values(\"Confirmed\",ascending=False).reset_index(drop=True)\n","8c9071b5":"fig = px.pie(Data_china_per_state, values=Data_china_per_state['Confirmed'], names=Data_china_per_state['Province\/State'],\n             title='Confirmed cases in China',\n            hole=.2)\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","d9fb141d":"fig = go.Figure(go.Bar(\n            x=Data_china_per_state['Active_case'],\n            y=Data_china_per_state['Province\/State'],\n            orientation='h',\n            marker_color='#DC3912',))\nfig.update_layout(\n    title='Active Cases In Each Province\/State',\n    template='plotly_white',\n    xaxis_title=\"Active Cases\",\n    yaxis_title=\"Province\/State\",\n)\nfig.show()","b6e69926":"fig = go.Figure(go.Bar(\n            x=Data_china_per_state['Recovered'],\n            y=Data_china_per_state['Province\/State'],\n            orientation='h',\n            marker_color='green',))\nfig.update_layout(\n    title='Active Cases In Each Province\/State',\n    template='plotly_white',\n    xaxis_title=\"Recovered Cases\",\n    yaxis_title=\"Province\/State\",\n)\nfig.show()","f6b4aaa1":"fig = go.Figure(go.Bar(\n            x=Data_china_per_state['Deaths'],\n            y=Data_china_per_state['Province\/State'],\n            orientation='h',\n            marker_color='black',))\nfig.update_layout(\n    title='Deaths In Each Province\/State',\n    template='plotly_white',\n    xaxis_title=\"Deaths\",\n    yaxis_title=\"Province\/State\",\n)\nfig.show()","d8089951":"Data_china_total= Data_china_last.groupby([\"Country\/Region\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\n","87220220":"labels = [\"Active cases\",\"Recovered\",\"Deaths\"]\nvalues = Data_china_total.loc[0, [\"Active_case\",\"Recovered\",\"Deaths\"]]\ndf = px.data.tips()\nfig = px.pie(Data_china_total, values=values, names=labels, color_discrete_sequence=['green','royalblue','darkblue'], hole=0.5)\nfig.update_layout(\n    title='Total cases in China : '+str(Data_china_total[\"Confirmed\"][0]),\n)\nfig.show()","518d0bfa":"Data_china_op= Data_China.groupby([\"ObservationDate\",\"Country\/Region\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\n","7fd815da":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=Data_china_op['ObservationDate'], y=Data_china_op['Confirmed'],\n                    mode='lines',\n                    name='Confirmed cases'))\n\n\nfig.add_trace(go.Scatter(x=Data_china_op['ObservationDate'], y=Data_china_op['Active_case'],\n                    mode='lines',\n                    name='Active cases',line=dict( dash='dot')))\nfig.add_trace(go.Scatter(x=Data_china_op['ObservationDate'], y=Data_china_op['Deaths'],name='Deaths',\n                                   marker_color='black',mode='lines',line=dict( dash='dot') ))\nfig.add_trace(go.Scatter(x=Data_china_op['ObservationDate'], y=Data_china_op['Recovered'],\n                    mode='lines',\n                    name='Recovered cases',marker_color='green'))\n\nfig.update_layout(\n    title='Evolution of cases over time in China',\n        template='plotly_white'\n\n)\n\nfig.show()\n","e16edab5":"Data_Italy = data [(data['Country\/Region'] == 'Italy') ].reset_index(drop=True)\n","5f655fca":"Data_italy_last = Data_Italy[Data_Italy['ObservationDate'] == max(Data_Italy['ObservationDate'])].reset_index()\n","902b3072":"Data_italy= Data_italy_last.groupby([\"Country\/Region\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\n","6c768248":"labels = [\"Active cases\",\"Recovered\",\"Deaths\"]\nvalues = Data_italy.loc[0, [\"Active_case\",\"Recovered\",\"Deaths\"]]\ndf = px.data.tips()\nfig = px.pie(Data_italy, values=values, names=labels, color_discrete_sequence=['royalblue','green','darkblue'], hole=0.5)\nfig.update_layout(\n    title='Total cases in Italy : '+str(Data_italy[\"Confirmed\"][0]),\n)\nfig.show()","bf372087":"Data_italy_per_state= Data_italy_last.groupby([\"Province\/State\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().sort_values(\"Confirmed\",ascending=False).reset_index(drop=True)\n","7f683291":"fig = px.pie(Data_italy_per_state, values=Data_italy_per_state['Confirmed'], names=Data_italy_per_state['Province\/State'],\n             title='Confirmed cases in Italy',\n            hole=.5)\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()\n\n\n","936584a1":"fig = px.pie(Data_italy_per_state, values=Data_italy_per_state['Recovered'], names=Data_italy_per_state['Province\/State'],\n             title='Recovered cases in Italy',\n            )\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()\n","c3724378":"fig = px.pie(Data_italy_per_state, values=Data_italy_per_state['Active_case'], names=Data_italy_per_state['Province\/State'],\n             \n             title='Active cases in Italy',\n            )\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()\n","11b6a4ba":"fig = px.pie(Data_italy_per_state, values=Data_italy_per_state['Deaths'], names=Data_italy_per_state['Province\/State'],\n             \n             title='Deaths in Italy',\n            )\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()\n","350e619d":"Data_italy_op= Data_Italy.groupby([\"ObservationDate\",\"Country\/Region\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\n","f74700ce":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=Data_italy_op.index, y=Data_italy_op['Confirmed'],\n                    mode='lines',\n                    name='Confirmed cases'))\n\n\nfig.update_layout(\n    title='Evolution of Confirmed cases over time in Italy',\n        template='plotly_white'\n\n)\n\nfig.show()\n","331f08d7":"fig = go.Figure()\n\n\nfig.add_trace(go.Scatter(x=Data_italy_op.index, y=Data_italy_op['Active_case'],\n                    mode='lines',marker_color='yellow',\n                    name='Active cases',line=dict( dash='dot')))\n\nfig.update_layout(\n    title='Evolution of Acitive cases over time in Italy',\n        template='plotly_dark'\n\n)\n\nfig.show()","4aef833f":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x=Data_italy_op.index, y=Data_italy_op['Recovered'],\n                    mode='lines',\n                    name='Recovered cases',marker_color='green'))\n\nfig.update_layout(\n    title='Evolution of Recovered cases over time in Italy',\n        template='plotly_white'\n\n)\n\nfig.show()","5c8c23e2":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x=Data_italy_op.index, y=Data_italy_op['Deaths'],name='Deaths',\n                                   marker_color='black',mode='lines',line=dict( dash='dot') ))\n\nfig.update_layout(\n    title='Evolution of Deaths over time in Italy',\n        template='plotly_white'\n\n)\n\nfig.show()","b60bd635":"Data_US = data [(data['Country\/Region'] == 'US') ].reset_index(drop=True)\n","fbfb02d1":"Data_us_last = Data_US[Data_US['ObservationDate'] == max(Data_US['ObservationDate'])].reset_index()","ee69ca18":"Data_us_total= Data_us_last.groupby([\"Country\/Region\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\n","b8b66b3f":"labels = [\"Active cases\",\"Recovered\",\"Deaths\"]\nvalues = Data_us_total.loc[0, [\"Active_case\",\"Recovered\",\"Deaths\"]]\ndf = px.data.tips()\nfig = px.pie(Data_us_total, values=values, names=labels, color_discrete_sequence=['royalblue','darkblue','green'], hole=0.5)\nfig.update_layout(\n    title='Total cases in United States : '+str(Data_us_total[\"Confirmed\"][0]),\n)\nfig.show()","5c0370b8":"Data_us_per_state= Data_us_last.groupby([\"Province\/State\"])[\"Confirmed\",\"Active_case\",\"Deaths\"].sum().reset_index().sort_values(\"Confirmed\",ascending=False).reset_index(drop=True)\n","bc4f405f":"fig = px.pie(Data_us_per_state, values=Data_us_per_state['Confirmed'], names=Data_us_per_state['Province\/State'],\n             title='Confirmed cases in United States',\n            hole=.2)\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","1c81b0ef":"fig = px.pie(Data_us_per_state, values=Data_us_per_state['Active_case'], names=Data_us_per_state['Province\/State'],\n             title='Active cases in United States',\n            hole=.2)\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","6a8b9ba6":"fig = px.pie(Data_us_per_state, values=Data_us_per_state['Deaths'], names=Data_us_per_state['Province\/State'],\n             title='Deaths in United States',\n            hole=.2)\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","a2fb51ff":"Data_US_op= Data_US.groupby([\"ObservationDate\",\"Country\/Region\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\n","36e02419":"\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=Data_US_op.index, y=Data_US_op['Confirmed'],\n                    mode='lines',\n                    name='Confirmed cases'))\n\n\nfig.update_layout(\n    title='Evolution of Confirmed cases over time in US',\n        template='plotly_white'\n\n)\n\nfig.show()\n","4c336d50":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x=Data_US_op.index, y=Data_US_op['Active_case'],\n                    mode='lines',\n                    name='Active cases',line=dict( dash='dot')))\n\nfig.update_layout(\n    title='Evolution of Acitive cases over time in US',\n        template='plotly_white'\n\n)\n\nfig.show()","497ede51":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x=Data_US_op.index, y=Data_US_op['Recovered'],\n                    mode='lines',\n                    name='Recovered cases',marker_color='green'))\n\nfig.update_layout(\n    title='Evolution of Recovered cases over time in US',\n        template='plotly_white'\n\n)\n\nfig.show()\n","e19a0476":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x=Data_US_op.index, y=Data_US_op['Deaths'],name='Deaths',\n                                   marker_color='white',mode='lines',line=dict( dash='dot') ))\n\nfig.update_layout(\n    title='Evolution of Deaths over time in US',\n        template='plotly_dark'\n\n)\n\nfig.show()","5cfb03a3":"Data_Spain = data [(data['Country\/Region'] == 'Spain') ].reset_index(drop=True)\n","3de31970":"Data_spain = Data_Spain[Data_Spain['ObservationDate'] == max(Data_Spain['ObservationDate'])].reset_index()\nData_spain_last= Data_spain.groupby([\"Country\/Region\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\n","f129eceb":"labels = [\"Active cases\",\"Recovered\",\"Deaths\"]\nvalues = Data_spain_last.loc[0, [\"Active_case\",\"Recovered\",\"Deaths\"]]\ndf = px.data.tips()\nfig = px.pie(Data_spain_last, values=values, names=labels, color_discrete_sequence=['royalblue','green','darkblue'], hole=0.5)\nfig.update_layout(\n    title='Total cases in Spain : '+str(Data_spain_last[\"Confirmed\"][0]),\n)\nfig.show()","16b92f48":"Data_spain_per_state= Data_spain.groupby([\"Province\/State\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().sort_values(\"Confirmed\",ascending=False).reset_index(drop=True)\n","82dfc05c":"\nfig = px.treemap(Data_spain_per_state, path=['Province\/State'], values=Data_spain_per_state['Confirmed'], height=700,\n                 title='Confirmed cases in Spain', color_discrete_sequence = px.colors.qualitative.Dark2)\nfig.data[0].textinfo = 'label+text+value'\nfig.show()\n\n","d3c41d4d":"\nfig = px.treemap(Data_spain_per_state, path=['Province\/State'], values=Data_spain_per_state['Recovered'], height=700,\n                 title='Recovered cases in Spain', color_discrete_sequence = px.colors.qualitative.Dark2)\nfig.data[0].textinfo = 'label+text+value'\nfig.show()\n\n","797611a8":"\nfig = px.treemap(Data_spain_per_state, path=['Province\/State'], values=Data_spain_per_state['Active_case'], height=700,\n                 title='Active cases in Spain', color_discrete_sequence = px.colors.sequential.deep)\nfig.data[0].textinfo = 'label+text+value'\nfig.show()\n\n","985a4442":"\n\nfig = px.treemap(Data_spain_per_state, path=['Province\/State'], values=Data_spain_per_state['Deaths'], height=700,\n                 title='Deaths in Spain', color_discrete_sequence = px.colors.sequential.deep)\nfig.data[0].textinfo = 'label+text+value'\nfig.show()\n\n","75090e8f":"Data_spain_op= Data_Spain.groupby([\"ObservationDate\",\"Country\/Region\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\n","b2d1b9a1":"fig = go.Figure(go.Bar(\n            x=Data_spain_op['ObservationDate'],\n            y=Data_spain_op['Confirmed'],\n           ))\nfig.update_layout(\n    title='Confirmed Cases In Each Day',\n    template='plotly_white',\n     xaxis_title=\"Confirmed Cases\",\n    yaxis_title=\"Days\",\n)\nfig.show()","5dac32ac":"fig = go.Figure(go.Bar(\n            x=Data_spain_op['ObservationDate'],\n            y=Data_spain_op['Active_case'],\n    marker_color='rgb(253,187,132)'\n           ))\nfig.update_layout(\n    title='Active Cases In Each Day',\n    template='plotly_dark',\n     xaxis_title=\"Active Cases\",\n    yaxis_title=\"Days\",\n)\nfig.show()","2a2cffe4":"fig = go.Figure(go.Bar(\n            x=Data_spain_op['ObservationDate'],\n            y=Data_spain_op['Recovered'],\n    marker_color='rgb(178,24,43)'\n           ))\nfig.update_layout(\n    title='Recovered Cases In Each Day',\n    template='plotly_white',\n     xaxis_title=\"Recovered Cases\",\n    yaxis_title=\"Days\",\n)\nfig.show()","ee1f42de":"fig = go.Figure(go.Bar(\n            x=Data_spain_op['ObservationDate'],\n            y=Data_spain_op['Deaths'],\n    marker_color='rgb(13,48,100)'\n           ))\nfig.update_layout(\n    title='Deaths In Each Day',\n    template='plotly_white',\n     xaxis_title=\"Deaths\",\n    yaxis_title=\"Days\",\n)\nfig.show()","08880232":"Data_Brazil = data [(data['Country\/Region'] == 'Brazil') ].reset_index(drop=True)\nData_brazil = Data_Brazil[Data_Brazil['ObservationDate'] == max(Data_Brazil['ObservationDate'])].reset_index()\nData_brazil_last= Data_brazil.groupby([\"Country\/Region\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)","e83f86ac":"labels = [\"Active cases\",\"Recovered\",\"Deaths\"]\nvalues = Data_brazil_last.loc[0, [\"Active_case\",\"Recovered\",\"Deaths\"]]\nfig = px.pie(Data_brazil_last, values=values, names=labels, color_discrete_sequence=px.colors.sequential.RdBu)\nfig.update_layout(\n    title='Total cases in Brazil : '+str(Data_brazil_last[\"Confirmed\"][0])\n    \n)\nfig.show()\n","d28dd590":"Data_brazil_per_state= Data_Brazil.groupby([\"Province\/State\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().sort_values(\"Confirmed\",ascending=False).reset_index(drop=True)\n","027eacba":"fig = px.treemap(Data_brazil_per_state, path=['Province\/State'], values=Data_brazil_per_state['Confirmed'], height=700,\n                 title='Confirmed cases in Brazil', color_discrete_sequence = px.colors.sequential.RdBu)\nfig.data[0].textinfo = 'label+text+value'\nfig.show()\n\n","63ccf1d5":"fig = px.treemap(Data_brazil_per_state, path=['Province\/State'], values=Data_brazil_per_state['Active_case'], height=700,\n                 title='Active cases in Brazil', color_discrete_sequence = px.colors.sequential.Agsunset\n)\nfig.data[0].textinfo = 'label+text+value'\nfig.show()","947c1fef":"fig = px.treemap(Data_brazil_per_state, path=['Province\/State'], values=Data_brazil_per_state['Recovered'], height=700,\n                 title='Recovered cases in Brazil', color_discrete_sequence = px.colors.sequential.algae\n)\nfig.data[0].textinfo = 'label+text+value'\nfig.show()","6bc85eda":"fig = px.treemap(Data_brazil_per_state, path=['Province\/State'], values=Data_brazil_per_state['Deaths'], height=700,\n                 title='Deaths in Brazil', color_discrete_sequence = px.colors.sequential.Cividis\n\n)\nfig.data[0].textinfo = 'label+text+value'\nfig.show()","be585b67":"Data_Brazil_op= Data_Brazil.groupby([\"ObservationDate\",\"Country\/Region\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\n","d9b533c3":"fig = go.Figure(go.Bar(\n            x=Data_Brazil_op['ObservationDate'],\n            y=Data_Brazil_op['Confirmed'],\n    marker_color='rgb(139,196,168)'\n           ))\nfig.update_layout(\n    title='Confirmed cases In Each Day',\n    template='plotly_white',\n     xaxis_title=\"Confirmed cases\",\n    yaxis_title=\"Days\",\n)\nfig.show()\n","fd3de287":"fig = go.Figure(go.Bar(\n            x=Data_Brazil_op['ObservationDate'],\n            y=Data_Brazil_op['Deaths'],\n    marker_color='rgb(139,196,168)'\n           ))\nfig.update_layout(\n    title='Deaths In Each Day',\n    template='plotly_white',\n     xaxis_title=\"Deaths\",\n    yaxis_title=\"Days\",\n)\nfig.show()","0e53ec65":"\nData_Word = data [(data['Country\/Region'] != 'US') ].reset_index(drop=True)\nData_WORD_last = Data_Word[Data_Word['ObservationDate'] == max(Data_Word['ObservationDate'])].reset_index()\nData_us_total= Data_us_last.groupby([\"Country\/Region\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\nData_word_total= Data_WORD_last.groupby([\"ObservationDate\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\n\nData_Word_op= Data_Word.groupby([\"ObservationDate\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\n","df50e1a8":"labels = [\"US\",\"The rest of the world\"]\nvalues = [Data_us_total.loc[0, [\"Confirmed\"]], Data_word_total.loc[0, [\"Confirmed\"]]]\ndf = px.data.tips()\nfig = px.pie(data, values=values, names=labels, color_discrete_sequence=['rgb(251,121,114)','rgb(128,177,211)'])\nfig.update_layout(\n    title='Confirmed cases in US and The Rest Of The World : ',\n)\nfig.show()","78bb3a57":"labels = [\"US\",\"The rest of the world\"]\nvalues = [Data_us_total.loc[0, [\"Active_case\"]], Data_word_total.loc[0, [\"Active_case\"]]]\ndf = px.data.tips()\nfig = px.pie(data, values=values, names=labels, color_discrete_sequence=['rgb(204,235,197)','rgb(222,203,228)'],hole=0.6)\nfig.update_layout(\n    title='Active cases in US and The Rest Of The World : ',\n)\nfig.show()","fe1ddcb6":"labels = [\"US\",\"The rest of the world\"]\nvalues = [Data_us_total.loc[0, [\"Recovered\"]], Data_word_total.loc[0, [\"Recovered\"]]]\ndf = px.data.tips()\nfig = px.pie(data, values=values, names=labels, color_discrete_sequence=['rgb(253,205,172)','rgb(179,226,205)'],hole=0.4)\nfig.update_layout(\n    title='Recovered cases in US and The Rest Of The World : ',\n)\nfig.show()","9a08a2d7":"labels = [\"US\",\"The rest of the world\"]\nvalues = [Data_us_total.loc[0, [\"Deaths\"]], Data_word_total.loc[0, [\"Deaths\"]]]\ndf = px.data.tips()\nfig = px.pie(data, values=values, names=labels, color_discrete_sequence=['rgb(229,196,148)','rgb(179,226,205)'])\nfig.update_layout(\n    title='Deaths in US and The Rest Of The World : ',\n)\nfig.show()","e1fce2c3":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=Data_US_op.index, y=Data_US_op['Confirmed'],\n                    mode='lines',\n                    name='Confirmed cases in US'))\n\n\nfig.add_trace(go.Scatter(x=Data_Word_op.index, y=Data_Word_op['Confirmed'],\n                    mode='lines',\n                    name='Confirmed cases in The Rest Of The Word'))\n\nfig.update_layout(\n    title='Evolution of Confirmed cases over time in US and The Rest Of The Word',\n        template='plotly_white'\n\n)\n\nfig.show()\n","fcc6fe14":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=Data_US_op.index, y=Data_US_op['Active_case'],\n                    mode='lines',\n                    name='Active cases in US'))\n\n\nfig.add_trace(go.Scatter(x=Data_Word_op.index, y=Data_Word_op['Active_case'],\n                    mode='lines',\n                    name='Active cases in The Rest Of The Word'))\n\nfig.update_layout(\n    title='Evolution of Active cases over time in US and The Rest Of The Word',\n        template='plotly_dark'\n\n)\n\nfig.show()\n","41479bcb":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=Data_US_op.index, y=Data_US_op['Recovered'],\n                    mode='lines',\n                    name='Recovered cases in US'))\n\n\nfig.add_trace(go.Scatter(x=Data_Word_op.index, y=Data_Word_op['Recovered'],\n                    mode='lines',\n                    name='Recovered cases in The Rest Of The Word'))\n\nfig.update_layout(\n    title='Evolution of Recovered cases over time in US and The Rest Of The Word',\n        template='plotly_dark'\n\n)\n\nfig.show()\n","978a107a":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=Data_US_op.index, y=Data_US_op['Deaths'],\n                    mode='lines',\n                    name='Deaths in US'))\n\n\nfig.add_trace(go.Scatter(x=Data_Word_op.index, y=Data_Word_op['Deaths'],\n                    mode='lines',\n                    name='Deathsin The Rest Of The Word'))\nfig.update_layout(\n    title='Evolution of Deaths over time in US and The Rest Of The Word',\n        template='plotly_white'\n\n)\n\nfig.show()\n","38702c4f":"Data_Ger = data [(data['Country\/Region'] == 'Germany') ].reset_index(drop=True)\nData_Iran = data [(data['Country\/Region'] == 'Iran') ].reset_index(drop=True)\n","8fc15c08":"def getDate(date,weeks):\n\n    datein = datetime.datetime.strptime(date, \"%m\/%d\/%Y\")\n    threeWeeks = datetime.timedelta(weeks =weeks)\n    datefinal = (datein + threeWeeks)\n    \n    return(datefinal.strftime('%m\/%d\/%Y'))","b0d53abc":"Data_tunisia_after_twoweeks = Data_tunisia[ Data_tunisia['ObservationDate'] < getDate(min(Data_tunisia['ObservationDate']),2) ].reset_index()\nData_italy_after_twoweeks = Data_Italy[Data_Italy['ObservationDate'] < getDate(min(Data_Italy['ObservationDate']),2) ].reset_index()\nData_spain_after_twoweeks = Data_Spain[Data_Spain['ObservationDate'] < getDate(min(Data_Spain['ObservationDate']),2) ].reset_index()\nData_germany_after_twoweeks = Data_Ger[Data_Ger['ObservationDate'] < getDate(min(Data_Ger['ObservationDate']),2) ].reset_index()\n\n\n","61753c5e":"\nfig = make_subplots(rows=2, cols=2,\n                    specs=[[{\"secondary_y\": True}, {\"secondary_y\": True}],\n                           [{\"secondary_y\": True}, {\"secondary_y\": True}]],\n                   subplot_titles=(\"Tunisia : \"+str(Data_tunisia_after_twoweeks['Confirmed'].max()),\n                                   \" Italy : \"+ str(Data_italy_after_twoweeks['Confirmed'].max()),\n                                   \"  Spain : \"+ str(Data_spain_after_twoweeks['Confirmed'].max()),\n                                   \" Germany : \"+ str(Data_germany_after_twoweeks['Confirmed'].max())\n                                  ))\n\n# Top left\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_tunisia_after_twoweeks)+1)), y=Data_tunisia_after_twoweeks['Confirmed'], \n                name=\"Confirmed Cases In Tunisia\"),row=1, col=1, secondary_y=False)\n\n\n# Top right\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_italy_after_twoweeks)+1)), y=Data_italy_after_twoweeks['Confirmed'], \n               name=\"Confirmed Cases In Italy\"), row=1, col=2, secondary_y=False,\n)\n\n# Bottom left\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_spain_after_twoweeks)+1)), y=Data_spain_after_twoweeks['Confirmed'], \n               name=\"Confirmed Cases In Spain\"),row=2, col=1, secondary_y=False,\n)\n\n\n# Bottom right\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_germany_after_twoweeks)+1)), y=Data_germany_after_twoweeks['Confirmed'], \n               name=\"Confirmed Cases In Germany\"),row=2, col=2, secondary_y=False,\n)\n# Update xaxis properties\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\n\n# Update yaxis properties\nfig.update_yaxes(title_text=\"Confirmed Cases\")\nfig.update_yaxes(title_text=\"Confirmed Cases\")\nfig.update_yaxes(title_text=\"Confirmed Cases\")\nfig.update_yaxes(title_text=\"Confirmed Cases\")\n\nfig.update_layout(\n    title_text=\"Corona virus confirmed cases per country for the first two weeks\",\n    width=800,\n)\n\nfig.show()","8b2738f6":"\nfig = make_subplots(rows=2, cols=2,\n                    specs=[[{\"secondary_y\": True}, {\"secondary_y\": True}],\n                           [{\"secondary_y\": True}, {\"secondary_y\": True}]],\n                   subplot_titles=(\"Tunisia : \"+str(Data_tunisia_after_twoweeks['Recovered'].max()),\n                                   \" Italy : \"+ str(Data_italy_after_twoweeks['Recovered'].max()),\n                                   \"  Spain : \"+ str(Data_spain_after_twoweeks['Recovered'].max()),\n                                   \" Germany : \"+ str(Data_germany_after_twoweeks['Recovered'].max())\n                                  ))\n\n# Top left\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_tunisia_after_twoweeks)+1)), y=Data_tunisia_after_twoweeks['Recovered'], \n                name=\"Recovered Cases In Tunisia\"),row=1, col=1, secondary_y=False)\n\n\n# Top right\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_italy_after_twoweeks)+1)), y=Data_italy_after_twoweeks['Recovered'], \n               name=\"Recovered Cases In Italy\"), row=1, col=2, secondary_y=False,\n)\n\n# Bottom left\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_spain_after_twoweeks)+1)), y=Data_spain_after_twoweeks['Recovered'], \n               name=\"Recovered Cases In Spain\"),row=2, col=1, secondary_y=False,\n)\n\n\n# Bottom right\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_germany_after_twoweeks)+1)), y=Data_germany_after_twoweeks['Recovered'], \n               name=\"Recovered Cases In Germany\"),row=2, col=2, secondary_y=False,\n)\n# Update xaxis properties\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\n\n# Update yaxis properties\nfig.update_yaxes(title_text=\"Recovered Cases\")\nfig.update_yaxes(title_text=\"Recovered Cases\")\nfig.update_yaxes(title_text=\"Recovered Cases\")\nfig.update_yaxes(title_text=\"Recovered Cases\")\n\nfig.update_layout(\n    title_text=\"Corona virus Recovered cases per country for the first two weeks\",\n    width=800,\n)\n\nfig.show()","f52528d8":"\nfig = make_subplots(rows=2, cols=2,\n                    specs=[[{\"secondary_y\": True}, {\"secondary_y\": True}],\n                           [{\"secondary_y\": True}, {\"secondary_y\": True}]],\n                   subplot_titles=(\"Tunisia : \"+str(Data_tunisia_after_twoweeks['Deaths'].max()),\n                                   \" Italy : \"+ str(Data_italy_after_twoweeks['Deaths'].max()),\n                                   \"  Spain : \"+ str(Data_spain_after_twoweeks['Deaths'].max()),\n                                   \" Germany : \"+ str(Data_germany_after_twoweeks['Deaths'].max())\n                                  ))\n\n# Top left\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_tunisia_after_twoweeks)+1)), y=Data_tunisia_after_twoweeks['Deaths'], \n                name=\"Deaths In Tunisia\"),row=1, col=1, secondary_y=False)\n\n\n# Top right\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_italy_after_twoweeks)+1)), y=Data_italy_after_twoweeks['Deaths'], \n               name=\"Deaths In Italy\"), row=1, col=2, secondary_y=False,\n)\n\n# Bottom left\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_spain_after_twoweeks)+1)), y=Data_spain_after_twoweeks['Deaths'], \n               name=\"Deaths In Spain\"),row=2, col=1, secondary_y=False,\n)\n\n\n# Bottom right\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_germany_after_twoweeks)+1)), y=Data_germany_after_twoweeks['Deaths'], \n               name=\"Deaths In Germany\"),row=2, col=2, secondary_y=False,\n)\n# Update xaxis properties\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\n\n# Update yaxis properties\nfig.update_yaxes(title_text=\"Deaths\")\nfig.update_yaxes(title_text=\"Deaths\")\nfig.update_yaxes(title_text=\"Deaths\")\nfig.update_yaxes(title_text=\"Deaths\")\n\nfig.update_layout(\n    title_text=\"Corona virus Deaths per country for the first two weeks\",\n    width=800,\n)\n\nfig.show()","1a63d912":"Data_iran_after_fourweeks = Data_Iran[ Data_Iran['ObservationDate'] < getDate(min(Data_Iran['ObservationDate']),4) ].reset_index()\nData_italy_after_fourweeks = Data_Italy[Data_Italy['ObservationDate'] < getDate(min(Data_Italy['ObservationDate']),4) ].reset_index()\nData_spain_after_fourweeks = Data_Spain[Data_Spain['ObservationDate'] < getDate(min(Data_Spain['ObservationDate']),4) ].reset_index()\nData_germany_after_fourweeks = Data_Ger[Data_Ger['ObservationDate'] < getDate(min(Data_Ger['ObservationDate']),4) ].reset_index()\n\n","3ab2afdf":"\nfig = make_subplots(rows=2, cols=2,\n                    specs=[[{\"secondary_y\": True}, {\"secondary_y\": True}],\n                           [{\"secondary_y\": True}, {\"secondary_y\": True}]],\n                   subplot_titles=(\"Iran : \"+str(Data_iran_after_fourweeks['Confirmed'].max()),\n                                   \" Italy : \"+ str(Data_italy_after_fourweeks['Confirmed'].max()),\n                                   \"  Spain : \"+ str(Data_spain_after_fourweeks['Confirmed'].max()),\n                                   \" Germany : \"+ str(Data_germany_after_fourweeks['Confirmed'].max())\n                                  ))\n\n# Top left\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_iran_after_fourweeks)+1)), y=Data_iran_after_fourweeks['Confirmed'], \n                name=\"Confirmed Cases In Iran\"),row=1, col=1, secondary_y=False)\n\n\n# Top right\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_italy_after_fourweeks)+1)), y=Data_italy_after_fourweeks['Confirmed'], \n               name=\"Confirmed Cases In Italy\"), row=1, col=2, secondary_y=False,\n)\n\n# Bottom left\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_spain_after_fourweeks)+1)), y=Data_spain_after_fourweeks['Confirmed'], \n               name=\"Confirmed Cases In Spain\"),row=2, col=1, secondary_y=False,\n)\n\n\n# Bottom right\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_germany_after_fourweeks)+1)), y=Data_germany_after_fourweeks['Confirmed'], \n               name=\"Confirmed Cases In Germany\"),row=2, col=2, secondary_y=False,\n)\n# Update xaxis properties\nfig.update_xaxes(title_text=\"Days\",range=[0,30])\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\n\n# Update yaxis properties\nfig.update_yaxes(title_text=\"Confirmed Cases\")\nfig.update_yaxes(title_text=\"Confirmed Cases\")\nfig.update_yaxes(title_text=\"Confirmed Cases\")\nfig.update_yaxes(title_text=\"Confirmed Cases\")\n\nfig.update_layout(\n    title_text=\"Corona virus confirmed cases per country for the first month\",\n    width=800,\n)\n\nfig.show()","bf0a631c":"\nfig = make_subplots(rows=2, cols=2,\n                    specs=[[{\"secondary_y\": True}, {\"secondary_y\": True}],\n                           [{\"secondary_y\": True}, {\"secondary_y\": True}]],\n                   subplot_titles=(\"Iran : \"+str(Data_iran_after_fourweeks['Recovered'].max()),\n                                   \" Italy : \"+ str(Data_italy_after_fourweeks['Recovered'].max()),\n                                   \"  Spain : \"+ str(Data_spain_after_fourweeks['Recovered'].max()),\n                                   \" Germany : \"+ str(Data_germany_after_fourweeks['Recovered'].max())\n                                  ))\n\n# Top left\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_iran_after_fourweeks)+1)), y=Data_iran_after_fourweeks['Recovered'], \n                name=\"Recovered Cases In Iran\"),row=1, col=1, secondary_y=False)\n\n\n# Top right\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_italy_after_fourweeks)+1)), y=Data_italy_after_fourweeks['Recovered'], \n               name=\"Recovered Cases In Italy\"), row=1, col=2, secondary_y=False,\n)\n\n# Bottom left\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_spain_after_fourweeks)+1)), y=Data_spain_after_fourweeks['Recovered'], \n               name=\"Recovered Cases In Spain\"),row=2, col=1, secondary_y=False,\n)\n\n\n# Bottom right\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_germany_after_fourweeks)+1)), y=Data_germany_after_fourweeks['Recovered'], \n               name=\"Recovered Cases In Germany\"),row=2, col=2, secondary_y=False,\n)\n# Update xaxis properties\nfig.update_xaxes(title_text=\"Days\",range=[0,30])\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\n\n# Update yaxis properties\nfig.update_yaxes(title_text=\"Recovered Cases\")\nfig.update_yaxes(title_text=\"Recovered Cases\")\nfig.update_yaxes(title_text=\"Recovered Cases\")\nfig.update_yaxes(title_text=\"Recovered Cases\")\n\nfig.update_layout(\n    title_text=\"Corona virus Recovered cases per country for the first month\",\n    width=800,\n)\n\nfig.show()","a4507bbd":"\nfig = make_subplots(rows=2, cols=2,\n                    specs=[[{\"secondary_y\": True}, {\"secondary_y\": True}],\n                           [{\"secondary_y\": True}, {\"secondary_y\": True}]],\n                   subplot_titles=(\"Iran : \"+str(Data_iran_after_fourweeks['Deaths'].max()),\n                                   \" Italy : \"+ str(Data_italy_after_fourweeks['Deaths'].max()),\n                                   \"  Spain : \"+ str(Data_spain_after_fourweeks['Deaths'].max()),\n                                   \" Germany : \"+ str(Data_germany_after_fourweeks['Deaths'].max())\n                                  ))\n\n# Top left\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_iran_after_fourweeks)+1)), y=Data_iran_after_fourweeks['Deaths'], \n                name=\"Deaths In Iran\"),row=1, col=1, secondary_y=False)\n\n\n# Top right\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_italy_after_fourweeks)+1)), y=Data_italy_after_fourweeks['Deaths'], \n               name=\"Deaths In Italy\"), row=1, col=2, secondary_y=False,\n)\n\n# Bottom left\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_spain_after_fourweeks)+1)), y=Data_spain_after_fourweeks['Deaths'], \n               name=\"Deaths In Spain\"),row=2, col=1, secondary_y=False,\n)\n\n\n# Bottom right\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_germany_after_fourweeks)+1)), y=Data_germany_after_fourweeks['Deaths'], \n               name=\"Deaths In Germany\"),row=2, col=2, secondary_y=False,\n)\n# Update xaxis properties\nfig.update_xaxes(title_text=\"Days\",range=[0,30])\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\n\n# Update yaxis properties\nfig.update_yaxes(title_text=\"Deaths\")\nfig.update_yaxes(title_text=\"Deaths\")\nfig.update_yaxes(title_text=\"Deaths\")\nfig.update_yaxes(title_text=\"Deaths\")\n\nfig.update_layout(\n    title_text=\"Corona virus Deaths per country for the first month\",\n    width=800,\n)\n\nfig.show()","5eca038d":"Data_iran_after_fiveweeks = Data_Iran[ Data_Iran['ObservationDate'] < getDate(min(Data_Iran['ObservationDate']),5) ].reset_index()\nData_italy_after_fiveweeks  = Data_Italy[Data_Italy['ObservationDate'] < getDate(min(Data_Italy['ObservationDate']),5) ].reset_index()\nData_spain_after_fiveweeks  = Data_Spain[Data_Spain['ObservationDate'] < getDate(min(Data_Spain['ObservationDate']),5) ].reset_index()\nData_germany_after_fiveweeks  = Data_Ger[Data_Ger['ObservationDate'] < getDate(min(Data_Ger['ObservationDate']),5) ].reset_index()\n","ee1d5a3e":"\nfig = make_subplots(rows=2, cols=2,\n                    specs=[[{\"secondary_y\": True}, {\"secondary_y\": True}],\n                           [{\"secondary_y\": True}, {\"secondary_y\": True}]],\n                   subplot_titles=(\"Iran : \"+str(Data_iran_after_fiveweeks['Confirmed'].max()),\n                                   \" Italy : \"+ str(Data_italy_after_fiveweeks['Confirmed'].max()),\n                                   \"  Spain : \"+ str(Data_spain_after_fiveweeks['Confirmed'].max()),\n                                   \" Germany : \"+ str(Data_germany_after_fiveweeks['Confirmed'].max())\n                                  ))\n\n# Top left\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_iran_after_fiveweeks)+1)), y=Data_iran_after_fiveweeks['Confirmed'], \n                name=\"Confirmed Cases In Iran\"),row=1, col=1, secondary_y=False)\n\n\n# Top right\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_italy_after_fiveweeks)+1)), y=Data_italy_after_fiveweeks['Confirmed'], \n               name=\"Confirmed Cases In Italy\"), row=1, col=2, secondary_y=False,\n)\n\n# Bottom left\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_spain_after_fiveweeks)+1)), y=Data_spain_after_fiveweeks['Confirmed'], \n               name=\"Confirmed Cases In Spain\"),row=2, col=1, secondary_y=False,\n)\n\n\n# Bottom right\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_germany_after_fiveweeks)+1)), y=Data_germany_after_fiveweeks['Confirmed'], \n               name=\"Confirmed Cases In Germany\"),row=2, col=2, secondary_y=False,\n)\n# Update xaxis properties\nfig.update_xaxes(title_text=\"Days\",range=[0,35])\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\n\n# Update yaxis properties\nfig.update_yaxes(title_text=\"Confirmed Cases\")\nfig.update_yaxes(title_text=\"Confirmed Cases\")\nfig.update_yaxes(title_text=\"Confirmed Cases\")\nfig.update_yaxes(title_text=\"Confirmed Cases\")\n\nfig.update_layout(\n    title_text=\"Corona virus confirmed cases per country for the fist five weeks\",\n    width=800,\n)\n\nfig.show()","1bb3034d":"\nfig = make_subplots(rows=2, cols=2,\n                    specs=[[{\"secondary_y\": True}, {\"secondary_y\": True}],\n                           [{\"secondary_y\": True}, {\"secondary_y\": True}]],\n                   subplot_titles=(\"Iran : \"+str(Data_iran_after_fiveweeks['Recovered'].max()),\n                                   \" Italy : \"+ str(Data_italy_after_fiveweeks['Recovered'].max()),\n                                   \"  Spain : \"+ str(Data_spain_after_fiveweeks['Recovered'].max()),\n                                   \" Germany : \"+ str(Data_germany_after_fiveweeks['Recovered'].max())\n                                  ))\n\n# Top left\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_iran_after_fiveweeks)+1)), y=Data_iran_after_fiveweeks['Recovered'], \n                name=\"Recovered Cases In Iran\"),row=1, col=1, secondary_y=False)\n\n\n# Top right\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_italy_after_fiveweeks)+1)), y=Data_italy_after_fiveweeks['Recovered'], \n               name=\"Recovered Cases In Italy\"), row=1, col=2, secondary_y=False,\n)\n\n# Bottom left\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_spain_after_fiveweeks)+1)), y=Data_spain_after_fiveweeks['Recovered'], \n               name=\"Recovered Cases In Spain\"),row=2, col=1, secondary_y=False,\n)\n\n\n# Bottom right\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_germany_after_fiveweeks)+1)), y=Data_germany_after_fiveweeks['Recovered'], \n               name=\"Recovered Cases In Germany\"),row=2, col=2, secondary_y=False,\n)\n# Update xaxis properties\nfig.update_xaxes(title_text=\"Days\",range=[0,35])\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\n\n# Update yaxis properties\nfig.update_yaxes(title_text=\"Recovered Cases\")\nfig.update_yaxes(title_text=\"Recovered Cases\")\nfig.update_yaxes(title_text=\"Recovered Cases\")\nfig.update_yaxes(title_text=\"Recovered Cases\")\n\nfig.update_layout(\n    title_text=\"Corona virus Recovered cases per country for the fist five weeks\",\n    width=800,\n)\n\nfig.show()","a9b00818":"\nfig = make_subplots(rows=2, cols=2,\n                    specs=[[{\"secondary_y\": True}, {\"secondary_y\": True}],\n                           [{\"secondary_y\": True}, {\"secondary_y\": True}]],\n                   subplot_titles=(\"Iran : \"+str(Data_iran_after_fiveweeks['Deaths'].max()),\n                                   \" Italy : \"+ str(Data_italy_after_fiveweeks['Deaths'].max()),\n                                   \"  Spain : \"+ str(Data_spain_after_fiveweeks['Deaths'].max()),\n                                   \" Germany : \"+ str(Data_germany_after_fiveweeks['Deaths'].max())\n                                  ))\n\n# Top left\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_iran_after_fiveweeks)+1)), y=Data_iran_after_fiveweeks['Deaths'], \n                name=\"Deaths In Iran\"),row=1, col=1, secondary_y=False)\n\n\n# Top right\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_italy_after_fiveweeks)+1)), y=Data_italy_after_fiveweeks['Deaths'], \n               name=\"Deaths In Italy\"), row=1, col=2, secondary_y=False,\n)\n\n# Bottom left\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_spain_after_fiveweeks)+1)), y=Data_spain_after_fiveweeks['Deaths'], \n               name=\"Deaths In Spain\"),row=2, col=1, secondary_y=False,\n)\n\n\n# Bottom right\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_germany_after_fiveweeks)+1)), y=Data_germany_after_fiveweeks['Deaths'], \n               name=\"Deaths In Germany\"),row=2, col=2, secondary_y=False,\n)\n# Update xaxis properties\nfig.update_xaxes(title_text=\"Days\",range=[0,35])\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\n\n# Update yaxis properties\nfig.update_yaxes(title_text=\"Deaths\")\nfig.update_yaxes(title_text=\"Deaths\")\nfig.update_yaxes(title_text=\"Deaths\")\nfig.update_yaxes(title_text=\"Deaths\")\n\nfig.update_layout(\n    title_text=\"Corona virus Deaths per country for the fist five weeks\",\n    width=800,\n)\n\nfig.show()","29138341":"Data_italy_after_sixweeks = Data_Italy[Data_Italy['ObservationDate'] < getDate(min(Data_Italy['ObservationDate']),6) ].reset_index()\nData_spain_after_sixweeks = Data_Spain[Data_Spain['ObservationDate'] < getDate(min(Data_Spain['ObservationDate']),6) ].reset_index()\nData_germany_after_sixweeks = Data_Ger[Data_Ger['ObservationDate'] < getDate(min(Data_Ger['ObservationDate']),6) ].reset_index()\n","d14947a3":"\nfig = make_subplots(rows=1, cols=2,\n                    specs=[[{\"secondary_y\": True}, {\"secondary_y\": True}]],\n                   subplot_titles=(\n                                   \" Italy : \"+ str(Data_italy_after_sixweeks['Confirmed'].max()),\n                                   \"  Spain : \"+ str(Data_spain_after_sixweeks['Confirmed'].max())\n                                  ))\n\n\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_italy_after_sixweeks)+1)), y=Data_italy_after_sixweeks['Confirmed'], \n               name=\"Confirmed Cases In Italy\"), row=1, col=1, secondary_y=False,\n)\n\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_spain_after_sixweeks)+1)), y=Data_spain_after_sixweeks['Confirmed'], \n               name=\"Confirmed Cases In Spain\"),row=1, col=2, secondary_y=False,\n)\n\n\n\n# Update xaxis properties\nfig.update_xaxes(title_text=\"Days\",range=[0,45])\nfig.update_xaxes(title_text=\"Days\")\n\n# Update yaxis properties\nfig.update_yaxes(title_text=\"Confirmed Cases\")\nfig.update_yaxes(title_text=\"Confirmed Cases\")\n\nfig.update_layout(\n    title_text=\"Corona virus confirmed cases per country for the first six weeks\",\n    width=800,\n)\n\nfig.show()","e2544b4d":"\nfig = make_subplots(rows=1, cols=2,\n                    specs=[[{\"secondary_y\": True}, {\"secondary_y\": True}]],\n                   subplot_titles=(\n                                   \" Italy : \"+ str(Data_italy_after_sixweeks['Confirmed'].max()),\n                                   \"  Germany : \"+ str(Data_germany_after_sixweeks['Confirmed'].max())\n                                  ))\n\n\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_italy_after_sixweeks)+1)), y=Data_italy_after_sixweeks['Confirmed'], \n               name=\"Confirmed Cases In Italy\"), row=1, col=1, secondary_y=False,\n)\n\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_germany_after_sixweeks)+1)), y=Data_germany_after_sixweeks['Confirmed'], \n               name=\"Confirmed Cases In Germany\"),row=1, col=2, secondary_y=False,\n)\n\n\n\n# Update xaxis properties\nfig.update_xaxes(title_text=\"Days\",range=[0,45])\nfig.update_xaxes(title_text=\"Days\")\n\n# Update yaxis properties\nfig.update_yaxes(title_text=\"Confirmed Cases\")\nfig.update_yaxes(title_text=\"Confirmed Cases\")\n\nfig.update_layout(\n    title_text=\"Corona virus confirmed cases per country for the first six weeks\",\n    width=800,\n)\n\nfig.show()","3ec554cf":"\nfig = make_subplots(rows=1, cols=2,\n                    specs=[[{\"secondary_y\": True}, {\"secondary_y\": True}]],\n                   subplot_titles=(\n                                   \" Italy : \"+ str(Data_italy_after_sixweeks['Recovered'].max()),\n                                   \"  Spain : \"+ str(Data_spain_after_sixweeks['Recovered'].max())\n                                  ))\n\n\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_italy_after_sixweeks)+1)), y=Data_italy_after_sixweeks['Recovered'], \n               name=\"Recovered Cases In Italy\"), row=1, col=1, secondary_y=False,\n)\n\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_spain_after_sixweeks)+1)), y=Data_spain_after_sixweeks['Recovered'], \n               name=\"Recovered Cases In Spain\"),row=1, col=2, secondary_y=False,\n)\n\n\n\n# Update xaxis properties\nfig.update_xaxes(title_text=\"Days\",range=[0,45])\nfig.update_xaxes(title_text=\"Days\")\n\n# Update yaxis properties\nfig.update_yaxes(title_text=\"Recovered Cases\")\nfig.update_yaxes(title_text=\"Recovered Cases\")\n\nfig.update_layout(\n    title_text=\"Corona virus Recovered cases per country for the first six weeks\",\n    width=800,\n)\n\nfig.show()","991dadf2":"\nfig = make_subplots(rows=1, cols=2,\n                    specs=[[{\"secondary_y\": True}, {\"secondary_y\": True}]],\n                   subplot_titles=(\n                                   \" Italy : \"+ str(Data_italy_after_sixweeks['Recovered'].max()),\n                                   \"  Germany : \"+ str(Data_germany_after_sixweeks['Recovered'].max())\n                                  ))\n\n\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_italy_after_sixweeks)+1)), y=Data_italy_after_sixweeks['Recovered'], \n               name=\"Recovered Cases In Italy\"), row=1, col=1, secondary_y=False,\n)\n\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_germany_after_sixweeks)+1)), y=Data_germany_after_sixweeks['Recovered'], \n               name=\"Recovered Cases In Germany\"),row=1, col=2, secondary_y=False,\n)\n\n\n\n# Update xaxis properties\nfig.update_xaxes(title_text=\"Days\",range=[0,45])\nfig.update_xaxes(title_text=\"Days\")\n\n# Update yaxis properties\nfig.update_yaxes(title_text=\"Recovered Cases\")\nfig.update_yaxes(title_text=\"Recovered Cases\")\n\nfig.update_layout(\n    title_text=\"Corona virus Recovered cases per country for the first six weeks\",\n    width=800,\n)\n\nfig.show()","32818d5b":"\nfig = make_subplots(rows=1, cols=2,\n                    specs=[[{\"secondary_y\": True}, {\"secondary_y\": True}]],\n                   subplot_titles=(\n                                   \" Italy : \"+ str(Data_italy_after_sixweeks['Deaths'].max()),\n                                   \"  Spain : \"+ str(Data_spain_after_sixweeks['Deaths'].max())\n                                  ))\n\n\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_italy_after_sixweeks)+1)), y=Data_italy_after_sixweeks['Deaths'], \n               name=\"Deaths In Italy\"), row=1, col=1, secondary_y=False,\n)\n\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_spain_after_sixweeks)+1)), y=Data_spain_after_sixweeks['Deaths'], \n               name=\"Deaths In Spain\"),row=1, col=2, secondary_y=False,\n)\n\n\n\n# Update xaxis properties\nfig.update_xaxes(title_text=\"Days\",range=[0,45])\nfig.update_xaxes(title_text=\"Days\")\n\n# Update yaxis properties\nfig.update_yaxes(title_text=\"Deaths\")\nfig.update_yaxes(title_text=\"Deaths\")\n\nfig.update_layout(\n    title_text=\"Corona virus Deaths per country for the first six weeks\",\n    width=800,\n)\n\nfig.show()","3f3bb4ed":"\nfig = make_subplots(rows=1, cols=2,\n                    specs=[[{\"secondary_y\": True}, {\"secondary_y\": True}]],\n                   subplot_titles=(\n                                   \" Italy : \"+ str(Data_italy_after_sixweeks['Deaths'].max()),\n                                   \"  Germany : \"+ str(Data_germany_after_sixweeks['Deaths'].max())\n                                  ))\n\n\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_italy_after_sixweeks)+1)), y=Data_italy_after_sixweeks['Deaths'], \n               name=\"Deaths In Italy\"), row=1, col=1, secondary_y=False,\n)\n\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_germany_after_sixweeks)+1)), y=Data_germany_after_sixweeks['Deaths'], \n               name=\"Deaths In Germany\"),row=1, col=2, secondary_y=False,\n)\n\n\n\n# Update xaxis properties\nfig.update_xaxes(title_text=\"Days\",range=[0,45])\nfig.update_xaxes(title_text=\"Days\")\n\n# Update yaxis properties\nfig.update_yaxes(title_text=\"Deaths\")\nfig.update_yaxes(title_text=\"Deaths\")\n\nfig.update_layout(\n    title_text=\"Corona virus Deaths per country for the first six weeks\",\n    width=800,\n)\n\nfig.show()","e8055898":"Data_italy_after_2months = Data_Italy[Data_Italy['ObservationDate'] < getDate(min(Data_Italy['ObservationDate']),8) ].reset_index()\nData_spain_after_2months = Data_Spain[Data_Spain['ObservationDate'] < getDate(min(Data_Spain['ObservationDate']),8) ].reset_index()\nData_germany_after_2months = Data_Ger[Data_Ger['ObservationDate'] < getDate(min(Data_Ger['ObservationDate']),8) ].reset_index()","adbb7211":"fig = make_subplots(rows=1, cols=3,\n                    specs=[[{\"secondary_y\": True}, {\"secondary_y\": True}, {\"secondary_y\": True}]],\n                   subplot_titles=(\n                                   \" Italy : \"+ str(Data_italy_after_2months['Confirmed'].max()),\n                               \" Spain : \"+ str(Data_spain_after_2months['Confirmed'].max()),\n                                   \"  Germany : \"+ str(Data_germany_after_2months['Confirmed'].max())\n                                  ))\n\n\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_italy_after_2months)+1)), y=Data_italy_after_2months['Confirmed'], \n               name=\"Confirmed Cases In Italy\"), row=1, col=1, secondary_y=False,\n)\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_spain_after_2months)+1)), y=Data_spain_after_2months['Confirmed'], \n               name=\"Confirmed Cases In Spain\"),row=1, col=2, secondary_y=False,\n)\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_germany_after_2months)+1)), y=Data_germany_after_2months['Confirmed'], \n               name=\"Confirmed Cases In Germany\"),row=1, col=3, secondary_y=False,\n)\n\n\n\n# Update xaxis properties\nfig.update_xaxes(title_text=\"Days\",range=[0,60])\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\n\n# Update yaxis properties\nfig.update_yaxes(title_text=\"Confirmed Cases\")\nfig.update_yaxes(title_text=\"Confirmed Cases\")\nfig.update_yaxes(title_text=\"Confirmed Cases\")\n\nfig.update_layout(\n    title_text=\"Corona virus confirmed cases per country for the first 2 months\",\n    width=800,\n)\n\nfig.show()","e7273d54":"fig = make_subplots(rows=1, cols=3,\n                    specs=[[{\"secondary_y\": True}, {\"secondary_y\": True}, {\"secondary_y\": True}]],\n                   subplot_titles=(\n                                   \" Italy : \"+ str(Data_italy_after_2months['Recovered'].max()),\n                               \" Spain : \"+ str(Data_spain_after_2months['Recovered'].max()),\n                                   \"  Germany : \"+ str(Data_germany_after_2months['Recovered'].max())\n                                  ))\n\n\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_italy_after_2months)+1)), y=Data_italy_after_2months['Recovered'], \n               name=\"Recovered Cases In Italy\"), row=1, col=1, secondary_y=False,\n)\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_spain_after_2months)+1)), y=Data_spain_after_2months['Recovered'], \n               name=\"Recovered Cases In Spain\"),row=1, col=2, secondary_y=False,\n)\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_germany_after_2months)+1)), y=Data_germany_after_2months['Recovered'], \n               name=\"Recovered Cases In Germany\"),row=1, col=3, secondary_y=False,\n)\n\n\n\n# Update xaxis properties\nfig.update_xaxes(title_text=\"Days\",range=[0,60])\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\n\n# Update yaxis properties\nfig.update_yaxes(title_text=\"Recovered Cases\")\nfig.update_yaxes(title_text=\"Recovered Cases\")\nfig.update_yaxes(title_text=\"Recovered Cases\")\n\nfig.update_layout(\n    title_text=\"Corona virus Recovered cases per country for the first 2 months\",\n    width=800,\n)\n\nfig.show()\n","89978c0a":"fig = make_subplots(rows=1, cols=3,\n                    specs=[[{\"secondary_y\": True}, {\"secondary_y\": True}, {\"secondary_y\": True}]],\n                   subplot_titles=(\n                                   \" Italy : \"+ str(Data_italy_after_2months['Deaths'].max()),\n                               \" Spain : \"+ str(Data_spain_after_2months['Deaths'].max()),\n                                   \"  Germany : \"+ str(Data_germany_after_2months['Deaths'].max())\n                                  ))\n\n\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_italy_after_2months)+1)), y=Data_italy_after_2months['Deaths'], \n               name=\"Deaths In Italy\"), row=1, col=1, secondary_y=False,\n)\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_spain_after_2months)+1)), y=Data_spain_after_2months['Deaths'], \n               name=\"Deaths In Spain\"),row=1, col=2, secondary_y=False,\n)\nfig.add_trace(\n    go.Scatter(x=list(range(1,len(Data_germany_after_2months)+1)), y=Data_germany_after_2months['Deaths'], \n               name=\"Deaths In Germany\"),row=1, col=3, secondary_y=False,\n)\n\n\n\n# Update xaxis properties\nfig.update_xaxes(title_text=\"Days\",range=[0,60])\nfig.update_xaxes(title_text=\"Days\")\nfig.update_xaxes(title_text=\"Days\")\n\n# Update yaxis properties\nfig.update_yaxes(title_text=\"Deaths\")\nfig.update_yaxes(title_text=\"Deaths\")\nfig.update_yaxes(title_text=\"Deaths\")\n\nfig.update_layout(\n    title_text=\"Corona virus Deaths per country for the first 2 months\",\n    width=800,\n)\n\nfig.show()","b7c54c0c":"**Active cases in each Country **","8d640e7f":"Replacing \"Mainland China\" with \"China\" ","c5329d54":"Confirmed cases in every Province\/State in china","5d54d7bf":"\n# <font color='gris'> I hope you find this kernel useful  <\/font>\n# <font color='gris'> Your <font color='red'> UPVOTES <\/font> would be highly appreciated  <\/font>","b4bb9c79":"![image.png](attachment:image.png)","812c5a30":"# **Please give an UPVOTE if you like this notebook**\n","a22f0006":"* Creating new feature \"Active_case\" \n* Active_case = Confirmed - Deaths - Recovered","c672ba97":"Cases in every Province\/State in US\n\n","93526dc6":"**Deaths cases in each Country **","ec379342":"Get data in Germany and Iran","904f40b9":"Get total cases in China","d14de99b":"Evolution of cases over time in Italy","4655d227":" Get Cases in Italy, Germany and Spain after 2 months","6e59f7c0":"Evolution of coronavirus over time","ec1373ce":"<a id='ita'><\/a>\n#  <font color='red'> **Coronavirus in Italy** <\/font>\n\n![image.png](attachment:image.png)","f9882963":"<a id='comp'><\/a>\n\n#  <font color='red'> **Comparisons between countries** <\/font>\n","b12ad414":" Get Cases in Iran, Italy, Spain and Germany after 5 weeks.","3830048a":" Get Cases in Tunisia, Italy, Spain and Germany after 2 weeks.","4f28e90c":"Change Data Type for \"Confirmed\",\"Deaths\" and \"Recovered\"  columns to int","683ac3d7":" Get Cases in Italy, Germany and Spain after 6 weeks","156916c1":"<a id='spa'><\/a>\n#  <font color='red'> **Coronavirus in Spain** <\/font>\n\n![image.png](attachment:image.png)","f5ea2e35":"* **Lets start with good news :  **\n**Recorvered cases in each Country **","61de2b10":"<a id='chi'><\/a>\n#  <font color='red'> **Coronavirus in China** <\/font>\n![image.png](attachment:image.png)","6fd26552":"Get last update in US\n\n","350be621":"**Get Last Update**","190503cd":"<a id='bra'><\/a>\n#  <font color='red'> **Coronavirus in Brazil** <\/font>\n\n","6c258f07":"\n<a id='word'><\/a>\n#  <font color='red'> **Covid-19 - In the world** <\/font>","e9d3e32e":"Evolution of cases over time in China","aab2c1d6":"<a id='usw'><\/a>\n\n#  <font color='red'> **US X The rest of the word** <\/font>\n","4b01f2a3":"\n<font color='black'> 34 % of Province\/State are unknown we will fill nan values with Unknown. <\/font>\n","dc8d76ad":"#  <font color='red'> Covid-19 - Analysis,Visualization and  Comparaisons <\/font>\n","bc57930d":" **Confirmed cases in each Country**","b6ad65b9":"Get Last update","d31bb0d0":"Get last update in Italy","123531d8":" Get Cases in Iran, Italy, Spain and Germany after 4 weeks.","bba85625":"# <font color='red'> Table of contents <\/font>\n1. <a href='#word'>**Covid-19 - In the world**<\/a>\n1. <a href='#tun'>**Coronavirus in Tunisia**<\/a>\n1. <a href='#chi'>**Coronavirus in China**<\/a>\n1. <a href='#ita'>**Coronavirus in Italy**<\/a>\n1. <a href='#us'>**Coronavirus in US**<\/a>\n1. <a href='#spa'>**Coronavirus in Spain**<\/a>\n1. <a href='#bra'>**Coronavirus in Brazil**<\/a>\n1. <a href='#usw'>**US X The rest of the word**<\/a>\n1. <a href='#comp'>**Comparisons between countries**<\/a>\n","3d741995":"Evolution of coronavirus over time.","4f70d813":"Get last update in china","377b4bb0":"<font color='gris'> Calculating the percentage of missing values of each feature <\/font>\n","88280e61":"Get last update in Spain\n\n","ac4edcf6":"\n<a id='tun'><\/a>\n#  <font color='red'> **Coronavirus in my country Tunisia** <\/font>\n![image.png](attachment:image.png)","1385de95":"<a id='us'><\/a>\n#  <font color='red'> **Coronavirus in United States** <\/font>\n![image.png](attachment:image.png)","0064aa78":"Get date after Three weeks from the first coronavirus case."}}