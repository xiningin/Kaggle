{"cell_type":{"bfe14826":"code","746abebb":"code","06df59c9":"code","35065b72":"code","66cea3cc":"code","63d8a64f":"code","593c5d00":"code","27d04732":"code","c59976c6":"code","7543fce5":"code","ffb4d127":"code","951ae3df":"code","7e8d3773":"code","7a05f6b3":"code","9e3d12db":"code","378f1c38":"code","b9307d44":"code","5857249d":"code","f379d380":"code","76001e47":"code","2515ead2":"code","9a19afd1":"code","79a5a7e4":"code","a9c71114":"code","0f4c7ce8":"code","04341e5d":"code","b0bf8356":"code","a1d47707":"code","bdea92d4":"code","cc77b7fa":"code","ece970af":"code","d47afd3e":"code","139a7e22":"markdown"},"source":{"bfe14826":"import numpy as np \nimport pandas as pd \n\nimport os\nprint(os.listdir(\"..\/input\"))\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy.stats import mode\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom xgboost import XGBClassifier\n\nfrom imblearn.over_sampling import SMOTE","746abebb":"user = pd.read_csv(\"..\/input\/historical_user_logs.csv\",index_col=0)\ntrain = pd.read_csv(\"..\/input\/train.csv\",index_col=0)\ntest = pd.read_csv(\"..\/input\/test.csv\",index_col=0)\na = pd.read_csv(\"..\/input\/test.csv\")","06df59c9":"train.describe()","35065b72":"train.info()","66cea3cc":"user.head()\nprint(user.shape)","63d8a64f":"user.head()","593c5d00":"train['user_id'].nunique()","27d04732":"for x in train.columns:\n    print(\" {} ............... {}\".format(x,train[x].isna().sum()))","c59976c6":"#print(mode(train['city_development_index']))\ntrain['city_development_index']=train['city_development_index'].fillna(2)\ntrain.drop('product_category_2',axis = 'columns',inplace=True)\n#print(mode(train['user_group_id']))\ntrain['user_group_id']=train['user_group_id'].fillna(3)\ntrain['gender']=train['gender'].fillna('Male')\n#print(mode(train['age_level']))\ntrain['age_level']=train['age_level'].fillna(3)\n#print(mode(train['user_depth']))\ntrain['user_depth']=train['user_depth'].fillna(3)","7543fce5":"sns.countplot(train['product'])\nplt.show()","ffb4d127":"sns.countplot(train['gender'])\nplt.show()","951ae3df":"train[train.is_click == 0].shape[0]","7e8d3773":"sns.countplot(user['action'])\nplt.show()","7a05f6b3":"sns.countplot(train['age_level'])\nplt.show()","9e3d12db":"female = train[train.gender == 'Female']\nmale = train[train.gender == 'Male']\nsns.countplot(female.age_level)\nplt.show()","378f1c38":"sns.countplot(male.age_level)\nplt.show()","b9307d44":"sns.countplot(x = \"product\",hue = \"gender\",data =train)\nplt.show()","5857249d":"train['DateTime'] = pd.to_datetime(train['DateTime'],errors = 'coerce')\ntrain['day'] = train['DateTime'].dt.day.astype('uint8')\ntrain['hour'] = train['DateTime'].dt.hour.astype('uint8')\ntrain['minute'] = train['DateTime'].dt.minute.astype('uint8')\ntrain['sec'] = train['DateTime'].dt.second.astype('uint8')","f379d380":"train.groupby(['user_id','campaign_id'])['age_level'].count()","76001e47":"GROUP_BY_NEXT_CLICKS = [\n    {'groupby': ['webpage_id']},\n    {'groupby': ['webpage_id', 'product_category_1']},\n    {'groupby': ['webpage_id', 'product']},\n    {'groupby': ['webpage_id', 'user_group_id']},\n    {'groupby': ['user_id','campaign_id']},\n    {'groupby': ['campaign_id', 'user_group_id','product']},\n    {'groupby': ['user_id','product']}\n]\n\nfor x in GROUP_BY_NEXT_CLICKS:\n    name = '{}_nextclick'.format('_'.join(x['groupby']))\n    feature = x['groupby']+['DateTime']\n    train[name] = train[feature].groupby(x['groupby']).DateTime.transform(lambda y: y.diff().shift(-1)).dt.seconds\n    ","2515ead2":"le = LabelEncoder()\ntrain['product'] = le.fit_transform(train['product'])\ntrain['gender'] = le.fit_transform(train['gender'])\ntrain.head()","9a19afd1":"x","79a5a7e4":"train=train.fillna(0)\ny = train['is_click']\ntrain = train.drop(['is_click','DateTime'],axis='columns')\nx = train\nx_train,x_test,y_train,y_test = train_test_split(x, y, test_size = 0.3)\nsm = SMOTE(random_state=2)\nx_train_res, y_train_res = sm.fit_sample(x_train, y_train.ravel())\nx_test_res, y_test_res = sm.fit_sample(x_test,y_test.ravel())","a9c71114":"model = XGBClassifier(colsample_bytree=0.2,\n                       gamma=0.0,\n                       learning_rate=0.05,\n                       max_depth=6,\n                       min_child_weight=1.5,\n                       n_estimators=7200,\n                       reg_alpha=0.9,\n                       reg_lambda=0.6,\n                       subsample=0.2,\n                       seed=42,\n                       silent=1)\nmodel.fit(x_train_res,y_train_res)","0f4c7ce8":"from sklearn.metrics import roc_auc_score\npredictions = model.predict(x_test_res)","04341e5d":"roc_auc_score(y_test_res,predictions)","b0bf8356":"#print(mode(train['city_development_index']))\ntest['city_development_index']=test['city_development_index'].fillna(2)\ntest.drop('product_category_2',axis = 'columns',inplace=True)\n#print(mode(train['user_group_id']))\ntest['user_group_id']=test['user_group_id'].fillna(3)\ntest['gender']=test['gender'].fillna('Male')\n#print(mode(train['age_level']))\ntest['age_level']=test['age_level'].fillna(3)\n#print(mode(train['user_depth']))\ntest['user_depth']=test['user_depth'].fillna(3)","a1d47707":"test['DateTime'] = pd.to_datetime(test['DateTime'],errors = 'coerce')\ntest['day'] = test['DateTime'].dt.day.astype('uint8')\ntest['hour'] = test['DateTime'].dt.hour.astype('uint8')\ntest['minute'] = test['DateTime'].dt.minute.astype('uint8')\ntest['sec'] = test['DateTime'].dt.second.astype('uint8')","bdea92d4":"GROUP_BY_NEXT_CLICKS = [\n    {'groupby': ['webpage_id']},\n    {'groupby': ['webpage_id', 'product_category_1']},\n    {'groupby': ['webpage_id', 'product']},\n    {'groupby': ['webpage_id', 'user_group_id']},\n    {'groupby': ['user_id','campaign_id']},\n    {'groupby': ['campaign_id', 'user_group_id','product']},\n    {'groupby': ['user_id','product']}\n]\n\nfor x in GROUP_BY_NEXT_CLICKS:\n    name = '{}_nextclick'.format('_'.join(x['groupby']))\n    feature = x['groupby']+['DateTime']\n    test[name] = test[feature].groupby(x['groupby']).DateTime.transform(lambda y: y.diff().shift(-1)).dt.seconds\n    ","cc77b7fa":"test['product'] = le.fit_transform(test['product'])\ntest['gender'] = le.fit_transform(test['gender'])\ntest=test.drop('DateTime',axis = 'columns')","ece970af":"ans =model.predict(test)","d47afd3e":"pred = pd.DataFrame({'session_id':a['session_id'],'is_click':ans})\npred.to_csv('ans.csv',header = True,index =False)","139a7e22":"Age Level countplot Male and Female"}}