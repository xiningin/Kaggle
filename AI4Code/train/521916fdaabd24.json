{"cell_type":{"7ce16656":"code","a11c6dda":"code","e1e171b6":"code","ed66bd76":"code","3a710a53":"code","00ef6edb":"code","131c6c64":"code","24e55aa8":"code","294b70db":"code","e8031742":"code","8bbb9e16":"code","1634ba82":"code","9d075e7a":"code","8ffb259b":"code","c6d65e48":"code","9a8b4854":"code","bf26cc3d":"code","2681ed43":"code","20a141c2":"code","247b8a00":"code","6d7f1229":"code","211372a7":"code","49ba8da8":"code","8b571956":"code","a855dbb6":"code","bdb1d41e":"code","b9856a92":"code","e913c471":"code","e2789802":"code","dcbb2032":"markdown","290a821a":"markdown","d400782c":"markdown","a2ab7814":"markdown","bf215578":"markdown","6434b283":"markdown","86e2f323":"markdown","830e3846":"markdown","6e789170":"markdown","22452359":"markdown","34de6259":"markdown","b165d78f":"markdown","5324dcfd":"markdown","30661893":"markdown","dc43681b":"markdown","81c7f309":"markdown","809c54db":"markdown","fe954dad":"markdown","4be41c65":"markdown","179a4a24":"markdown","c635e0d9":"markdown"},"source":{"7ce16656":"import warnings\nwarnings.simplefilter(action='ignore')\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\nfrom sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV\nfrom sklearn.linear_model import LinearRegression, Ridge, RidgeCV, ElasticNet, Lasso, LassoCV\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.neighbors import LocalOutlierFactor\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn import preprocessing\nfrom sklearn.preprocessing import RobustScaler\n\nHitters=pd.read_csv(\"..\/input\/hitters\/Hitters.csv\")","a11c6dda":"df=Hitters.copy()\ndf.info()","e1e171b6":"df.describe().T","ed66bd76":"df[df.isnull().any(axis=1)].head(3)","3a710a53":"df.isnull().sum().sum()","00ef6edb":"df=df.copy()","131c6c64":"df.corr()","24e55aa8":"df['Year_lab'] = pd.cut(x=df['Years'], bins=[0, 3, 6, 10, 15, 19, 24])\ndf.groupby(['League','Division', 'Year_lab']).agg({'Salary':'mean'})","294b70db":"df['Salary'] = df.groupby(['League', 'Division', 'Year_lab'])['Salary'].transform(lambda x: x.fillna(x.mean()))","e8031742":"df.head()","8bbb9e16":"df.isnull().sum()","1634ba82":"df.shape","9d075e7a":"le = LabelEncoder()\ndf['League'] = le.fit_transform(df['League'])\ndf['Division'] = le.fit_transform(df['Division'])\ndf['NewLeague'] = le.fit_transform(df['NewLeague'])","8ffb259b":"df.head()","c6d65e48":"df['Year_lab'] = le.fit_transform(df['Year_lab'])","9a8b4854":"df.head()","bf26cc3d":"df.info()","2681ed43":"df_X= df.drop([\"Salary\",\"League\",\"Division\",\"NewLeague\"], axis=1)\n\nscaled_cols5=preprocessing.normalize(df_X)\n\nscaled_cols=pd.DataFrame(scaled_cols5, columns=df_X.columns)\nscaled_cols.head()","20a141c2":"cat_df=pd.concat([df.loc[:,\"League\":\"Division\"],df.loc[:,\"NewLeague\":\"Year_lab\"]], axis=1)\ncat_df.head()","247b8a00":"df= pd.concat([scaled_cols,cat_df,df[\"Salary\"]], axis=1)\ndf","6d7f1229":"df.shape","211372a7":"y=df[\"Salary\"]\nX=df.drop(\"Salary\", axis=1)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.20, \n                                                    random_state=46)\n\nlinreg = LinearRegression()\nmodel = linreg.fit(X_train,y_train)\ny_pred = model.predict(X_test)\ndf_linreg_rmse = np.sqrt(mean_squared_error(y_test,y_pred))\ndf_linreg_rmse","49ba8da8":"y=df[\"Salary\"]\nX=df.drop(\"Salary\", axis=1)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.20, \n                                                    random_state=46)\n\n\nridreg = Ridge()\nmodel = ridreg.fit(X_train, y_train)\ny_pred = model.predict(X_test)\ndf_ridreg_rmse = np.sqrt(mean_squared_error(y_test,y_pred))\ndf_ridreg_rmse ","8b571956":"y=df[\"Salary\"]\nX=df.drop(\"Salary\", axis=1)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.20, \n                                                    random_state=46)\n\n\nlasreg = Lasso()\nmodel = lasreg.fit(X_train,y_train)\ny_pred = model.predict(X_test)\ndf_lasreg_rmse = np.sqrt(mean_squared_error(y_test,y_pred))\ndf_lasreg_rmse","a855dbb6":"y=df[\"Salary\"]\nX=df.drop(\"Salary\", axis=1)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.20, \n                                                    random_state=46)\n\n\nenet = ElasticNet()\nmodel = enet.fit(X_train,y_train)\ny_pred = model.predict(X_test)\ndf_enet_rmse = np.sqrt(mean_squared_error(y_test,y_pred))\ndf_enet_rmse","bdb1d41e":"y=df[\"Salary\"]\nX=df.drop(\"Salary\", axis=1)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.20, \n                                                    random_state=46)\n\n\nalpha = [0.1,0.01,0.001,0.2,0.3,0.5,0.8,0.9,1]\nridreg_cv = RidgeCV(alphas = alpha, scoring = \"neg_mean_squared_error\", cv = 10, normalize = True)\nridreg_cv.fit(X_train, y_train)\nridreg_cv.alpha_\n\n#Final Model\n\nridreg_tuned = Ridge(alpha = ridreg_cv.alpha_).fit(X_train,y_train)\ny_pred = ridreg_tuned.predict(X_test)\ndf_ridge_tuned_rmse = np.sqrt(mean_squared_error(y_test,y_pred))\ndf_ridge_tuned_rmse","b9856a92":"y=df[\"Salary\"]\nX=df.drop(\"Salary\", axis=1)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.20, \n                                                    random_state=46)\n\nalpha = [0.1,0.01,0.001,0.2,0.3,0.5,0.8,0.9,1]\nlasso_cv = LassoCV(alphas = alpha, cv = 10, normalize = True)\nlasso_cv.fit(X_train, y_train)\nlasso_cv.alpha_\n\n#Final Model\n\nlasso_tuned = Lasso(alpha = lasso_cv.alpha_).fit(X_train,y_train)\ny_pred = lasso_tuned.predict(X_test)\ndf_lasso_tuned_rmse = np.sqrt(mean_squared_error(y_test, y_pred))\ndf_lasso_tuned_rmse","e913c471":"y=df[\"Salary\"]\nX=df.drop(\"Salary\", axis=1)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                                                    test_size=0.20, \n                                                    random_state=46)\n\nenet_params = {\"l1_ratio\": [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1],\n              \"alpha\":[0.1,0.01,0.001,0.2,0.3,0.5,0.8,0.9,1]}\n\nenet_model = ElasticNet().fit(X_train,y_train)\nenet_cv = GridSearchCV(enet_model, enet_params, cv = 10).fit(X, y)\nenet_cv.best_params_\n\n#Final Model\n\nenet_tuned = ElasticNet(**enet_cv.best_params_).fit(X_train,y_train)\ny_pred = enet_tuned.predict(X_test)\ndf_enet_tuned_rmse = np.sqrt(mean_squared_error(y_test,y_pred))\ndf_enet_tuned_rmse ","e2789802":"basicresult_df = pd.DataFrame({\"CONDITIONS\":[\"df: filled with mean, normalized\",],\n                              \"LINEAR\":[df_linreg_rmse],\n                               \"RIDGE\":[df_ridreg_rmse],\n                              \"RIDGE TUNED\":[df_ridge_tuned_rmse],\n                              \"LASSO\":[df_lasreg_rmse],\n                              \"LASSO TUNED\":[df_lasso_tuned_rmse],                              \n                              \"ELASTIC NET\":[df_enet_rmse],\n                              \"ELASTIC NET TUNED\":[df_enet_tuned_rmse]\n                              })\n\nbasicresult_df","dcbb2032":"### Format\nA data frame with 322 observations of major league players on the following 20 variables.\nAtBat Number of times at bat in 1986,\nHits Number of hits in 1986,\nHmRun Number of home runs in 1986,\nRuns Number of runs in 1986,\nRBI Number of runs batted in in 1986,\nWalks Number of walks in 1986,\nYears Number of years in the major leagues,\nCAtBat Number of times at bat during his career,\nCHits Number of hits during his career,\nCHmRun Number of home runs during his career,\nCRuns Number of runs during his career,\nCRBI Number of runs batted in during his career,\nCWalks Number of walks during his career,\nLeague A factor with levels A and N indicating player\u2019s league at the end of 1986,\nDivision A factor with levels E and W indicating player\u2019s division at the end of 1986,\nPutOuts Number of put outs in 1986,\nAssists Number of assists in 1986,\nErrors Number of errors in 1986,\nSalary 1987 annual salary on opening day in thousands of dollars,\nNewLeague A factor with levels A and N indicating player\u2019s league at the beginning of 1987,","290a821a":"## Modeling","d400782c":"The aim in this notebook is to create a regression model that predicts salaries of baseball players based on their statistics, and RMSE (Root Mean Square Error).\n\n#### 1) Importied Libraries, Hitters Data Set was read\n#### 2) With Exploratory Data Analysis;\n* Structural information of the dataset was checked.\n* Types of variables in data set were examined.\n* The size information of the data set has been accessed.\n* The number of missing observations from which variable in the data set was accessed. It was observed that there were 59 missing observations only in \"Salary\" which was dependent variable.\n* Descriptive statistics of the data set were examined.\n\n#### 3) In Data Pre-Processing section;\n*For df: ** NA values were filled by looking at \"Salary\" averages in age, league and division variables, Dummy variables were created. The X variables were normalized.\n\n#### 4) During the Model Building phase;\n\nUsing the Linear, Ridge, Lasso, ElasticNet machine learning models, ** RMSE ** values representing the difference between actual values and predicted values were calculated. Later, hyperparameter optimizations were applied for Ridge, Lasso and ElasticNet to further reduce the error value.\n\n#### 4) Conclusion;\n\nWhen the model created as a result of Elastic Net Hyperparameter optimization was applied to the df6 Data Frame, the lowest RMSE was obtained. (283.49)","a2ab7814":"> # Hitters Dataset Regression Models Workout","bf215578":"## Data Pre-Processing","6434b283":"### Elastic Net Regression Model Tuning","86e2f323":"### Ridge Regression Model Tuning","830e3846":"## Description\n### Context\nThis dataset is part of the R-package ISLR and is used in the related book by G. James et al. (2013) \"An Introduction to Statistical Learning with applications in R\" to demonstrate how Ridge regression and the LASSO are performed using R.","6e789170":"### Ridge Regression","22452359":"All of the missing values is in the 'Salary' variable. Even though it's a critical variable, I'll fill it since the dataset with mean.","34de6259":"### Transformation Process\nChanging cathegorical variables into binary","b165d78f":"### Normalization","5324dcfd":"### Lasso Regression Model Tuning","30661893":"### Lasso Regression","dc43681b":"## Aim\n\nThe aim in this notebook is to create a regression model that predicts salaries of baseball players based on their statistics, and RMSE (Root Mean Square Error).","81c7f309":"### Elastic Net Regression","809c54db":"## Model Tuning","fe954dad":"# Reporting","4be41c65":"## Data Understanding","179a4a24":"## Importing Libraries and Reading Data","c635e0d9":"### Linear Regression"}}