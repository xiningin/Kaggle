{"cell_type":{"c3763bbc":"code","aae2c5b2":"code","789408c3":"code","f57cc46d":"code","0d902e7f":"code","4a277200":"code","89d9fd2f":"code","bf66cae7":"code","4192d7d2":"code","e9602428":"code","908aabb2":"code","6fc6d3c6":"code","a156617c":"code","4a46fd3f":"code","4e2a4760":"code","62608467":"code","ec650269":"code","3e26b45a":"code","47b341a5":"code","6ce1447e":"code","ec3bc721":"code","b485f9fc":"code","ceb1e315":"code","ffeb0bd6":"code","082e2f83":"code","49df9fc9":"code","cea42688":"code","139b124f":"code","cb40fce4":"code","f8f6cd7c":"markdown","40f06a9c":"markdown","f55cdbf4":"markdown","df8370f1":"markdown"},"source":{"c3763bbc":"import numpy   as np\nimport pandas  as pd\nimport seaborn as sb\nimport matplotlib.pyplot as plt\nimport missingno as msno\nimport unidecode","aae2c5b2":"train = pd.read_csv(\"..\/input\/murcia-car-challenge\/train.csv\",            index_col=\"Id\")\ntest  = pd.read_csv(\"..\/input\/murcia-car-challenge\/test.csv\",             index_col=\"Id\")\nsub   = pd.read_csv(\"..\/input\/murcia-car-challenge\/sampleSubmission.csv\", index_col=\"Id\")","789408c3":"def cleanString(valor):\n    return unidecode.unidecode(valor.upper().strip())\n\ndef clean(data):\n    data['Marca']  = data['Marca'].apply(cleanString)\n    data['Modelo'] = data['Modelo'].apply(cleanString)\n\n    data['Marca'].replace(\"MERCEDES\", \"MERCEDES-BENZ\",     inplace=True)\n    data['Modelo'].replace(\"SERIE \", \"SERIE_\", regex=True, inplace=True)\n    data['Modelo'].replace(\"CLASE \", \"CLASE_\", regex=True, inplace=True)\n    data['Modelo'].replace(\"RANGE ROVER \", \"\", regex=True, inplace=True)\n    \n    return data\n\ntrain = clean(train)\ntest  = clean(test)","f57cc46d":"def tranform2type(Tiempo):\n    if   Tiempo.endswith('d\u00edas'):  return 'dias'\n    elif Tiempo.endswith('horas'): return 'horas'\n    elif Tiempo.endswith('hora'):  return 'hora'\n    elif Tiempo.endswith('min'):   return 'min'\n    elif Tiempo.endswith('seg'):   return 'seg'\n    elif Tiempo.endswith('nuevo anuncio'):  return 'nuevo anuncio'\n    elif Tiempo.endswith('destacado'):      return 'destacado'\n\n    \ndef tranform2dias(Tiempo):\n    if   Tiempo.endswith('d\u00edas'):  return int(Tiempo.replace(' d\u00edas', ''))\n    elif Tiempo.endswith('horas'): return int(Tiempo.replace(' horas', ''))\/24\n    elif Tiempo.endswith('hora'):  return int(Tiempo.replace(' hora', ''))\/24\n    elif Tiempo.endswith('min'):   return int(Tiempo.replace(' min', ''))\/(60*24)\n    elif Tiempo.endswith('seg'):   return int(Tiempo.replace(' seg', ''))\/(60*60*24)\n    elif Tiempo.endswith('nuevo anuncio'):  return 0\n    elif Tiempo.endswith('destacado'):      return -1\n\ntrain[\"Tiempo_d\u00edas\"]  = train[\"Tiempo\"].apply(tranform2dias) # Variable num\u00e9rica\ntrain[\"Tiempo_tipo\"]  = train[\"Tiempo\"].apply(tranform2type) # Variable categ\u00f3rica\ntrain[\"Modelo_1st\"]   = train.Modelo.str.split().str.get(0)  # Variable categ\u00f3rica","0d902e7f":"msno.bar(train);","4a277200":"msno.matrix(train);","89d9fd2f":"# Variables num\u00e9ricas\ndef plot_num(variable, title=\"\", min=False, max=False, zeros=True, points=True, opacity=.3, size=(16,4)):\n    if not zeros:\n        variable=variable[variable!=0]\n        title += \" (no zeros)\"\n    if min:\n        variable = variable[variable >= min]\n        title += \" (min: \"+str(min)+\")\"\n    if max:\n        variable = variable[variable <= max]\n        title += \" (max: \"+str(max)+\")\"\n    fig, ax = plt.subplots(figsize=size)\n    ax.set_title(title, fontsize=20)\n    ax2 = ax.twinx()\n    sb.violinplot(variable, cut=0, palette=\"Set3\", inner=\"box\", ax=ax)\n    if points:\n        sb.scatterplot(variable, y=variable.index, color=\"grey\", linewidth=0, s=20, alpha=opacity, ax=ax2).invert_yaxis()\n\n\n# Variables ordinales\ndef plot_ord(variable, title=\"\", min=False, max=False, zeros=True, size=(16,4)):\n    if not zeros:\n        variable=variable[variable!=0]\n        title += \" (no zeros)\"\n    if min:\n        variable = variable[variable >= min]\n        title += \" (min: \"+str(min)+\")\"\n    if max:\n        variable = variable[variable <= max]\n        title += \" (max: \"+str(max)+\")\"\n    plt.figure(figsize=size)\n    sb.countplot(variable, color='royalblue').set_title(title, fontsize=20);\n\n\n# Variables categoricas\ndef plot_cat(variable, title=\"\", top=False, normalize=False, dropna=False, size=(16,4)):\n    plt.figure(figsize=size)\n    nuiques = str(variable.nunique())\n    cats = variable.value_counts(normalize=normalize, dropna=dropna)\n    if top:\n        cats = cats[:top]\n        title += \" (top \"+str(top)+\" de \"+nuiques+\")\"\n    else:\n        title += \" (\"+nuiques+\")\"\n    sb.barplot(x=cats, y=cats.index).set_title(title, fontsize=20);","bf66cae7":"plot_num(train.Precio, title=\"Precio en Euros\", max=100000, points=False)","4192d7d2":"plot_num(np.log(train.Precio), title=\"Logaritmo del Precio en Euros\", points=False)","e9602428":"plot_num(np.log(train.Precio), title=\"Logaritmo del Precio en Euros\", points=True)","908aabb2":"plot_cat(train.Marca, title=\"Marcas\", size=(16,20))","6fc6d3c6":"plot_cat(train.Modelo_1st, title=\"Modelos primera palabra\", top=100, size=(16,20))","a156617c":"wv = train[train.Marca==\"VOLKSWAGEN\"]['Modelo']\nplot_cat(wv, title=\"Modelos VOLKSWAGEN\", top=50, size=(16,20))","4a46fd3f":"golfs = train[train.Modelo.str.contains(\"GOLF\")]\nplot_cat(golfs.Modelo, title=\"Modelos WV GOLF\", top=20, size=(16,10))","4e2a4760":"serie3 = train[train.Modelo.str.contains(\"SERIE_3\")]\nplot_cat(serie3.Modelo, title=\"Modelos distintos de BMW SERIE 3\", top=20, size=(16,10))","62608467":"plot_cat(train.Provincia, title=\"Provincias\", size=(16,12))","ec650269":"plot_cat(train.Localidad, title=\"Localidad\", top=50, size=(16,12))","3e26b45a":"plot_num(train.Tiempo_d\u00edas, title=\"Tiempo del anuncio: D\u00edas\", opacity=.05)","47b341a5":"plot_num(train.Tiempo_d\u00edas, title=\"Tiempo del anuncio: D\u00edas\", max=100, points=False)","6ce1447e":"plot_cat(train.Tiempo_tipo, title=\"Tiempo del anuncio: Tipo\")","ec3bc721":"plot_ord(train.A\u00f1o, title=\"A\u00f1o del coche\")","b485f9fc":"plot_ord(train.A\u00f1o, title=\"A\u00f1o del coche\", min=1990)","ceb1e315":"plot_num(train.Kms, title=\"Kil\u00f3metros\")","ffeb0bd6":"plot_num(train.Kms, max=1000000, title=\"Kil\u00f3metros\", points=False)","082e2f83":"plot_cat(train.Cambio, title=\"Tipo de cambio de marchas\")","49df9fc9":"plot_num(train.Cv, max=400, title=\"Caballos\", points=False)","cea42688":"plot_cat(train.Combust, title=\"Tipo de combustible\")","139b124f":"plot_ord(train.Puertas, title=\"N\u00famero de puertas\")","cb40fce4":"plot_cat(train.Vendedor, title=\"Tipo de vendedor\")","f8f6cd7c":"# Distributions","40f06a9c":"# Missings","f55cdbf4":"# Feature engineering","df8370f1":"# Fix (Data claning)"}}