{"cell_type":{"915db37a":"code","f2dab1f0":"code","525f3adc":"code","a9d2963f":"code","8f8fdcb9":"code","8d65106c":"code","8728d651":"code","1fb9d255":"code","b61a1acb":"code","f43608b0":"code","cbaad969":"code","4bb2c7a6":"code","ceadb9e5":"code","5d9fb270":"code","94216435":"code","1fd7b914":"code","ba28926f":"code","87f25762":"code","33060974":"code","f1956372":"code","b91808cc":"code","06418257":"code","9fe43b91":"code","30553da3":"code","0fe63201":"code","2219b009":"code","675aaf5e":"code","da9f8646":"code","bb6bbd74":"code","58588f71":"code","bbb85bb5":"code","5e7c8ec7":"code","4b0be8ff":"code","45e6e917":"code","207059ce":"code","ff22c1a0":"code","9e2da3fc":"markdown","8cc8e793":"markdown","34a45561":"markdown","ac4a8603":"markdown"},"source":{"915db37a":"import matplotlib.pyplot as plt\nimport numpy as np","f2dab1f0":"x = np.array([15,20,30,35])\nplt.plot(x,x**2,label=\"square\")\n##lable in x and  y axis\n\nplt.xlabel('x')\nplt.ylabel('y')\nplt.title('line graph')\nplt.plot(x,x*10,label=\"mult.\")\nplt.legend()\n# plt.show() --- to break chart data","525f3adc":"## 0,0 for 1st\n## 0,1 for 2nd \n## 1,0 for 3rd\n## 1,1 for 4ht\n\n\nfig,axes = plt.subplots(nrows=2,ncols=2)\naxes[0,0].plot(x,x**2)","a9d2963f":"import math","8f8fdcb9":"def cal(x):\n    p=x**2\n    q=x**1\/2\n    r=math.exp(x)\n    s=math.log(x)\n    return (p,q,r,s)\n\ny=np.array(list(map(cal,x)))\ny","8d65106c":"k=0\nfig,axes = plt.subplots(nrows=2,ncols=2)\nfor i in range(len(axes)):\n    for j in range(axes.shape[1]):\n        axes[i,j].plot(x,y[:,k])\n        k+=1","8728d651":"import seaborn as sb","1fb9d255":"df=sb.load_dataset('tips')\ndf.head()","b61a1acb":"sb.distplot(df['total_bill'],kde=False)","f43608b0":"sb.scatterplot(df['total_bill'],df['tip'],hue=df['sex'])\n","cbaad969":"sb.lmplot(x='total_bill',y='tip',data=df)","4bb2c7a6":"sb.barplot(x='day',y='total_bill',data=df) #mean value to be plotted","ceadb9e5":"sb.barplot(y='day',x='total_bill',data=df,estimator=np.sum)","5d9fb270":"sb.boxplot(y='total_bill',data=df)  # also called box viscous\n\n## fixed y axis as numeric variable","94216435":"sb.boxplot(y='total_bill',x='day',data=df) #seprate data for each class\n\n#box 3 lines\n## below q1 ,middle as q2, top as q3\n## q2 line if lies between any side then it will be right or left skew if middle then normal distribution\n\n#topmost value is q3+1.5IQR and below is Q3-1.5IQR","1fd7b914":"sb.violinplot(y='total_bill',x='day',data=df)","ba28926f":"sb.violinplot(y='total_bill',x='day',data=df,hue='sex',split=True)","87f25762":"tip_cor=df.corr()\ntip_cor","33060974":"sb.heatmap(tip_cor,annot=True,cmap='Pastel1') # annot to print values also, # cmap gives color *matplotlib cmap","f1956372":"df1=sb.load_dataset('flights')\ndf1.head()","b91808cc":"flight_pvt=df1.pivot(index='year',columns='month',values='passengers')\nflight_pvt","06418257":"sb.clustermap(flight_pvt,cmap='Pastel1')","9fe43b91":"sb.clustermap(flight_pvt,cmap='Pastel2')","30553da3":"df.head()","0fe63201":"y1=['total_bill','tip','size']\nx1=['sex','smoker','day','time']\nfor i in range(len(y1)):\n    for j in range(len(x1)):\n        sb.boxplot(x=x1[j],y=y1[i],data=df)  ##can also use \"ax=axes[i,j]\" in boxplot\n        plt.show()\n        \n        ","2219b009":"y1=['total_bill','tip','size']\nx1=['sex','smoker','day','time']\nk=1\nfor i in range(len(y1)):    \n    for j in range(len(x1)):\n        plt.subplot(4,3,k)\n        sb.boxplot(x=x1[j],y=y1[i],data=df)  ##can also use \"ax=axes[i,j]\" in boxplot       \n        k+=1\n        \n        ","675aaf5e":"plt.figure(figsize=(20,10))\nplt.plot(df['size'][0:10],color='r',linewidth=1.0,marker='o',markeredgecolor='y',markeredgewidth=10)\nplt.plot(df['tip'][10:20],color='g',linewidth=0.5,markeredgecolor='b',marker='o',markerfacecolor='w')\nplt.xlabel('x')\nplt.ylabel('y')\nplt.title('line graph')\nplt.legend()","da9f8646":"import matplotlib.pyplot as plt\nimport numpy as np\n\nevens=list(range(2,100,2))\nevens=np.array(evens)\nplt.plot(evens,evens**2)\nplt.show()\n\n","bb6bbd74":"plt.plot(evens,evens**2,label='x^2')\nplt.legend() # to display label\nplt.savefig('output.png',dpi=100) #savin graph as image\nplt.show()","58588f71":"pwd","bbb85bb5":"import random\nyears=[2009,2010,2011,2012,2013,2014,2015]\nandroid=np.random.randint(20,1200,7)\nios=np.random.randint(50,700,7)\nmicrosoft=np.random.randint(12,1000,7)\n\nplt.plot(years,android,label='android')\nplt.plot(years,ios,label='ios')\nplt.plot(years,microsoft,label='microsoft')\nplt.legend()","5e7c8ec7":"import matplotlib as mpl\n#prepare 4 lines with different slopes\nx=np.linspace(0,200,100) # prepare 100 even spaced number between 0 to 200\ny1=x*2\ny2=x*3\ny3=x*4\ny4=x*5\n# set line width to 2 for clarity\nmpl.rcParams['lines.linewidth']=2\n# drawing the 4 lines\nplt.plot(x,y1,label='2x',c='0')\nplt.plot(x,y2,label='3x',c='0.2',ls='--')\nplt.plot(x,y3,label='4x',c='0.4',ls='-.')\nplt.plot(x,y4,label='5x',c='0.6',ls=':')\nplt.legend()\nplt.show()","4b0be8ff":"fontparams={'size':16,'fontweight':'light','family':'monospace'}\nx=[1,2,3]\ny=[2,3,4]\nplt.plot(x,y)\nplt.xlabel('xlabel',size=20,fontweight='semibold',family='serif')\nplt.ylabel('ylabel',fontparams)\nplt.show()","45e6e917":"#prepare a curve of square nos.\nimport matplotlib.pyplot as plt\nx=np.linspace(0,200,100) # prepare 100 even spaced number between 0 to 200\ny1=x\ny2=x+20\n# plot a curve of a square nos.\nplt.plot(x,y1,label='$x$')\nplt.plot(x,y2,label=r'$x^3+\\beta$')\nplt.legend()\nplt.show()","207059ce":"tech=['google','apple','microsoft','samsung']\ny_pos=np.arange(len(tech))\n\nweb=[1,2,3,4]\nplt.bar(y_pos,web,align='center',alpha=0.9)\nplt.xticks(y_pos,tech,rotation=75)\nplt.ylabel('live starts count')\nplt.title('online advert tech usage')\nplt.show()","ff22c1a0":"x= np.linspace(0,10,100)\ny2=np.sin(x**2)\ny1=x**2\n\n#initiate a figure with a subplot axis\nfig,ax1=plt.subplots()\n\n# set the insert plot dim\nleft,bottom,width,height=[0.22,0.45,0.3,0.35]\nax2=fig.add_axes([left,bottom,width,height])\n\n#draw the plots\nax1.plot(x,y1)\nax2.plot(x,y2)\nplt.show()","9e2da3fc":"# matplotlib and seaborn\n#### types of graph\n---> Univariant(numeric)\n\n####  -histogram\n####  - boxplot\n\n---> bivariate\n\n####   -num vs num\n\n    ## -- scatterplot\n    ## -- lmplot\n\n####   - num vs character\n\n    ##  -- bar chart\n    ##  -- box plot\n    ##  -- violin plot\n\n####  -- heatmap and clustermap \n","8cc8e793":"# df.pivot to map values","34a45561":"# bivariant","ac4a8603":"# co-relation\n### lies between -1 & 1"}}