{"cell_type":{"c9466f4e":"code","abb65bf5":"code","681faf28":"code","aa9077a8":"code","b8cea85f":"code","34925e68":"code","b60ca99a":"code","26b03175":"code","ad395f80":"code","33134823":"code","26da44b4":"code","b1e0c8e2":"code","4788cfbb":"code","62311087":"code","fb6a9601":"code","e598599a":"code","208b9304":"code","f4c22064":"code","c3d8d7df":"code","7d9f4947":"code","120e30ba":"code","7b1fcad8":"code","d2727846":"code","571cc22f":"markdown","66d10453":"markdown","9be10741":"markdown","ea277357":"markdown","16963253":"markdown","63ee0e46":"markdown","348ca3ef":"markdown","ec036caf":"markdown"},"source":{"c9466f4e":"import numpy as np \nimport pandas as pd \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","abb65bf5":"import sklearn\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier, VotingClassifier\nfrom sklearn.ensemble import ExtraTreesClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.preprocessing import Binarizer\nfrom sklearn import preprocessing","681faf28":"train = pd.read_csv('\/kaggle\/input\/kpitmovies\/train_data.csv')\ntrain.head(2)","aa9077a8":"basic_features = ['runtime', 'budget', 'revenue', 'vote_count']\nbasic_X = train[basic_features]\nbasic_y = train['target']","b8cea85f":"assert basic_X.shape[0] == basic_y.shape[0]\nbasic_X_train, basic_X_validate, basic_y_train, basic_y_validate = train_test_split(basic_X, basic_y)","34925e68":"logres =  LogisticRegression()\nlogres.fit(basic_X_train, basic_y_train)\nlogres_y_pred = logres.predict(basic_X_validate)\nprint('Accuracy \/ train:\\t',cross_val_score(logres, basic_X_train, basic_y_train).mean())\nprint('Accuracy \/ validation:  ',accuracy_score(logres_y_pred, basic_y_validate))","b60ca99a":"#grid={\"C\":np.logspace(-3,3,7), \"penalty\":[\"l1\",\"l2\"]}\n#logreg=LogisticRegression()\n#logreg_cv=GridSearchCV(logreg,grid,cv=10)\n#logreg_cv.fit(basic_X_train,basic_y_train)\n#print(\"tuned hpyerparameters :(best parameters) \",logreg_cv.best_params_)\n#print(\"accuracy :\",logreg_cv.best_score_)","26b03175":"logreg2=LogisticRegression(C=0.001,penalty=\"l2\")\nlogreg2.fit(basic_X_train,basic_y_train)\nprint(\"score\",logreg2.score(basic_X_train,basic_y_train))","ad395f80":"tree =  DecisionTreeClassifier()\ntree.fit(basic_X_train, basic_y_train)\ntree_y_pred = tree.predict(basic_X_validate)\nprint('Accuracy \/ train:\\t', cross_val_score(tree, basic_X_train, basic_y_train).mean())\nprint('Accuracy \/ validation:  ', accuracy_score(basic_y_validate,tree_y_pred))","33134823":"#grid1={\"max_depth\":np.logspace(-3, 3, 7), \"min_samples_split\":[2], \"max_features\":np.ndarray([4])}\n#tree1 = DecisionTreeClassifier()\n#tree_cv=GridSearchCV(tree,grid1,cv=10)\n#tree_cv.fit(basic_X_train,basic_y_train)\n#print(\"tuned hpyerparameters :(best parameters) \",tree_cv.best_params_)\n#print(\"accuracy :\",tree_cv.best_score_)","26da44b4":"tree2=DecisionTreeClassifier(max_depth=10, max_features=1.0, min_samples_split=2)\ntree2.fit(basic_X_train,basic_y_train)\nprint(\"accuracy\",tree2.score(basic_X_train,basic_y_train))","b1e0c8e2":"knn_pipe = Pipeline([('scaler', StandardScaler()), ('knn', KNeighborsClassifier(n_jobs=-1))])\nknn_params = {'knn__n_neighbors': range(1, 30)}","4788cfbb":"knn_grid = GridSearchCV(knn_pipe, knn_params, cv=5, n_jobs=-1, verbose=True)","62311087":"knn_grid.fit(basic_X_train, basic_y_train)\nprint(\"accuracy\", knn_grid.score(basic_X_train, basic_y_train))","fb6a9601":"#grid1={\"max_depth\":np.logspace(-3, 3, 7), \"min_samples_split\":[2], \"max_features\":np.ndarray([4])}\n#tree1 = DecisionTreeClassifier()\n#tree_cv=GridSearchCV(tree,grid1,cv=10)\n#tree_cv.fit(basic_X_train,basic_y_train)\n#print(\"tuned hpyerparameters :(best parameters) \",tree_cv.best_params_)\n#print(\"accuracy :\",tree_cv.best_score_)","e598599a":"grid1={\"n_estimators\":[50], \"max_depth\":np.logspace(-3, 3, 7), \"min_samples_split\":[2], \"max_features\":np.ndarray([4])}\nforest = RandomForestClassifier()\nforest_cv=GridSearchCV(forest,grid1,cv=10)\nforest_cv.fit(basic_X_train,basic_y_train)\nprint(\"tuned hpyerparameters :(best parameters) \",forest_cv.best_params_)\nprint(\"accuracy :\",forest_cv.best_score_)","208b9304":"grid_forest=RandomForestClassifier(max_depth=10, max_features=1.0, min_samples_split=2, n_estimators=50)\ngrid_forest.fit(basic_X_train,basic_y_train)\nprint(\"accuracy\",grid_forest.score(basic_X_train,basic_y_train))","f4c22064":"test = pd.read_csv('\/kaggle\/input\/kpitmovies\/test_data.csv').drop(61)\ntest.head(2)","c3d8d7df":"test.movie_id = test.movie_id.astype('int')","7d9f4947":"basic_X_test = test[basic_features]\nbasic_X_test.head(2)","120e30ba":"#tree_prediction = tree.predict(basic_X_test)\n#grid_tree_prediction = tree2.predict(basic_X_test)\n#knn_grid_prediction = knn_grid.predict(basic_X_test)\n#forest_prediction = forest.predict(basic_X_test)\ngrid_forest_prediction = grid_forest.predict(basic_X_test)","7b1fcad8":"#grid_tree_prediction\n#forest_prediction\n#grid_forest_prediction","d2727846":"pomogite = pd.read_csv('\/kaggle\/input\/kpitmovies\/sample_submission.csv')\npomogite.movie_id = test.movie_id.values\npomogite.target = grid_forest_prediction\n#pomogite.to_csv('1.csv', index=False)","571cc22f":"**Logistic Regression**","66d10453":"**KNN**","9be10741":"**Tree Grid**","ea277357":"**Decision Tree**","16963253":"**Grid LogReg**","63ee0e46":"**Random Forest**","348ca3ef":"**Test**","ec036caf":"*\u0422\u0443\u0442 \u043d\u0435 \u043e\u0447\u0435\u043d\u044c \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e)))*"}}