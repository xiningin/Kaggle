{"cell_type":{"173069bb":"code","39268d8c":"code","f9ce10bd":"code","46b3839e":"code","fd794b4a":"code","cab59dd1":"code","976f5072":"code","c1f9c386":"code","130f35b0":"code","a35afd79":"code","0445de18":"code","14a8624f":"markdown"},"source":{"173069bb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","39268d8c":"df=pd.read_csv(\"\/kaggle\/input\/drug-classification\/drug200.csv\")\ndf","f9ce10bd":"from sklearn.preprocessing import LabelEncoder\ndf[\"BP\"]=LabelEncoder().fit_transform(df[\"BP\"])\ndf[\"Sex\"]=LabelEncoder().fit_transform(df[\"Sex\"])\ndf[\"Cholesterol\"]=LabelEncoder().fit_transform(df[\"Cholesterol\"])\ndf[\"Drug\"]=LabelEncoder().fit_transform(df[\"Drug\"])\ndf","46b3839e":"y=df[\"Drug\"]\nx=df.drop([\"Drug\"],axis=1)","fd794b4a":"import pandas_profiling as pp\npp.ProfileReport(df)","cab59dd1":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=42)","976f5072":"from sklearn.preprocessing import StandardScaler\nmodel=StandardScaler().fit(x_train)\nx_train=model.transform(x_train)\nx_test=model.transform(x_test)","c1f9c386":"from sklearn.linear_model import LogisticRegression\nlogreg=LogisticRegression(C=50).fit(x_train,y_train)\nprint(\"Train score:\",logreg.score(x_train,y_train))\nprint(\"Test score:\",logreg.score(x_test,y_test))","130f35b0":"from sklearn.linear_model import LogisticRegression\nlogr=LogisticRegression(C=100)\nfrom sklearn.model_selection import cross_val_score\nmean=np.mean(cross_val_score(estimator=logr,X=x_train,y=y_train,cv=50))\nmean","a35afd79":"logreg=LogisticRegression(C=100).fit(x_train,y_train)\ny_pred=logreg.predict(x_test)\nfrom sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_test,y_pred)\nsns.heatmap(cm,annot=True)\nplt.ylabel(\"Real\")\nplt.xlabel(\"Predict\")","0445de18":"Drug=pd.DataFrame({\"Real\":y_test,\"Predict\":y_pred})\nDrug","14a8624f":"# machine learning"}}