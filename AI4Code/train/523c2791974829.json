{"cell_type":{"eb7edee7":"code","91ebe565":"code","00babb63":"code","6a61e7ae":"code","ab719206":"code","31471756":"code","b14f5a67":"code","01c3ff67":"code","f93fa4d8":"code","b99dc6be":"code","19a36b42":"code","7eb3f75a":"code","37c4920d":"code","56cbee0b":"code","b4521c86":"code","92575ff9":"code","3925203a":"code","01d92e03":"code","b4554630":"code","45230e2c":"code","f3cca8b1":"code","f2ee004b":"code","8edc4dbb":"code","f6b2a709":"code","ded73623":"code","4eb33381":"code","57fb1858":"code","82b97be4":"code","9cd91c15":"code","2449691c":"code","19ebd9cf":"code","82719e5b":"code","7de164da":"code","868ac315":"code","29cf1a89":"code","a487b7b3":"code","99d580e9":"code","410962a4":"code","1f33e47a":"code","4b5a7a2b":"code","565002a0":"code","36886b84":"code","f39aa552":"code","2f5aa14f":"code","ead163cb":"code","7a48a957":"code","60f5b27c":"code","c37296bc":"code","4272de2f":"code","3c81e1ce":"code","3f49eb57":"code","9b9379df":"code","8028de33":"code","de1b7645":"code","dc797118":"code","d3a4e125":"code","4c8dfb79":"code","f020b44b":"code","aaaf3d8d":"code","a2914953":"code","5bce025c":"code","9a3e7412":"code","24f0cd2a":"code","813be839":"code","c583d698":"code","6dd2066a":"code","7d46c235":"code","ef542a6a":"code","046c1851":"code","246b5e3f":"code","00a0b9ab":"code","43e88910":"code","0daa48ce":"code","5b4986bb":"code","d03dc2c9":"code","b8971d28":"code","e6e1bb62":"code","e1affc56":"code","6843d5e0":"code","87f36cca":"code","df5bf62b":"code","bffc6337":"code","6dc69fb6":"code","257b19a4":"code","037c3236":"code","2d6e91f7":"code","e1f2bda9":"code","0d93bae3":"code","e5cdfe28":"code","4fbc2b8c":"code","7365ed34":"code","6873e7b0":"code","edc17ba0":"code","440cb1ec":"code","155d0fa5":"code","7da21f38":"code","b6ea8275":"code","8458567e":"code","072701bd":"code","79938c4a":"code","a6b5d2ef":"code","e21f7f33":"code","644fb88a":"code","243bac46":"code","40fb06da":"code","9074c1b1":"code","8b2f3c74":"code","8735ab16":"code","6e574fe3":"code","c788da3e":"code","64d01a5f":"code","0f356a57":"code","c19bb51a":"code","8ce95b73":"code","40243d2c":"code","c67b56c0":"code","9e47808e":"code","538cf3d8":"code","6930e1fe":"code","f2dabbc7":"code","4c78a629":"code","37f2f00a":"code","72097c90":"code","862ae2b8":"code","1df541b1":"code","6b9754ce":"markdown","ae092716":"markdown","8be84eae":"markdown","ce90fc21":"markdown","bf7e226a":"markdown","f40528cc":"markdown","3b13b6f0":"markdown","0dd9f6c4":"markdown","0311114a":"markdown","b140b03f":"markdown","f90b7cab":"markdown","2aa1e9c1":"markdown","38e17525":"markdown","40935ad8":"markdown","a757b110":"markdown","8a01a21e":"markdown","3cc0af9e":"markdown","5b768d18":"markdown","374b90fa":"markdown","b51096b4":"markdown","573cf51d":"markdown","b15d994a":"markdown","ca969f65":"markdown","293abde6":"markdown","7c139227":"markdown","6462a9b2":"markdown","b54cd7e7":"markdown","0b6fbb7e":"markdown","0359c59a":"markdown","d65de472":"markdown","2757ab53":"markdown","e74e8120":"markdown","6d211dd7":"markdown","93afb4ee":"markdown","ee275e86":"markdown","0d464511":"markdown","7e8e724b":"markdown","80089e20":"markdown","fdff6843":"markdown","7762ddab":"markdown","fd62487f":"markdown"},"source":{"eb7edee7":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nsns.set_style('whitegrid'); sns.set_palette('deep')","91ebe565":"trans = pd.read_excel(r'..\/input\/KPMG_data.xlsx', sheet_name = 'Transactions')\ntrans.head()","00babb63":"trans.columns","6a61e7ae":"trans.dtypes","ab719206":"# check validation of year\ntrans.product_first_sold_date.dt.year.unique()","31471756":"# check missing values\ntrans.isnull().sum() \/ trans.count() *100","b14f5a67":"trans = trans.dropna(subset=['brand'])","01c3ff67":"trans.isnull().sum()","f93fa4d8":"# check uniqueness of transactions\nlen(trans.transaction_id.unique()) \/len(trans)","b99dc6be":"trans.describe()","19a36b42":"cusd = pd.read_excel(r'..\/input\/KPMG_data.xlsx', sheet_name = 'CustomerDemographic')\ncusd.head()","7eb3f75a":"cusd.columns","37c4920d":"cusd.dtypes","56cbee0b":"# delete unuse column\ncusd = cusd.drop(columns = ['default'])","b4521c86":"# check missing values\ncusd.isnull().sum() \/ cusd.count() *100","92575ff9":"cusd = cusd.dropna(subset=['DOB']).reset_index(drop=True)","3925203a":"len(cusd.customer_id.unique()) \/ len(cusd)","01d92e03":"# multiple formatted of gender\ncusd.gender.unique()","b4554630":"gender=[]\nfor i in cusd.gender:\n    if i.startswith('F'):\n        i = i.replace(i,'Female')\n    elif i.startswith('M'):\n        i = i.replace(i,'Male')\n    else:\n        i = i.replace(i,'Unknown')\n    gender.append(i)\n    \ncusd['gender'] = pd.Series(gender)","45230e2c":"# validity of DOB\ncusd.DOB.sort_values()","f3cca8b1":"cusd = cusd[cusd['DOB'].dt.to_period('Y').astype(str).astype(int) >= 1931]","f2ee004b":"cusd['age'] = pd.Series([2020]*3912) - pd.Series(cusd['DOB'].dt.to_period('Y').astype(str).astype(int))","8edc4dbb":"cusd.describe()","f6b2a709":"add = pd.read_excel(r'..\/input\/KPMG_data.xlsx', sheet_name='CustomerAddress')\nadd.head()","ded73623":"add.columns","4eb33381":"add.dtypes","57fb1858":"len(add.customer_id.unique())\/len(add)","82b97be4":"add.state.unique()","9cd91c15":"add.state = add.state.str.replace('New South Wales','NSW')\nadd.state = add.state.str.replace('Victoria','VIC')","2449691c":"add.isnull().sum()","19ebd9cf":"add.describe()","82719e5b":"new = pd.read_excel(r'..\/input\/KPMG_data.xlsx', sheet_name='NewCustomerList')\nnew.head()","7de164da":"new.columns","868ac315":"new.dtypes","29cf1a89":"new.isnull().sum()","a487b7b3":"new=new.drop(columns=['Unnamed: 16', 'Unnamed: 17', 'Unnamed: 18', 'Unnamed: 19', 'Unnamed: 20','country'])","99d580e9":"new.describe()","410962a4":"info = cusd.merge(add, how='left', left_on='customer_id', right_on='customer_id')\ninfo.head()","1f33e47a":"info.shape","4b5a7a2b":"info.isnull().sum()","565002a0":"total_customer = trans.merge(info, how='left',right_on='customer_id', left_on='customer_id')\ntotal_customer.head()","36886b84":"# delete missing values\ntotal_customer = total_customer.dropna(subset=['first_name']).reset_index(drop=True)","f39aa552":"# create some new columns to explore the data\ntotal_customer['profit'] = total_customer['list_price'] - total_customer['standard_cost']","2f5aa14f":"total_customer['transaction_month']=total_customer['transaction_date'].dt.to_period('M')","ead163cb":"total_customer['recency']=total_customer.transaction_date.max() - total_customer.transaction_date","7a48a957":"total_customer['recency'] = total_customer['recency'].dt.days.astype(int)","60f5b27c":"trans[trans['order_status'] == 'Approved'].count()\/trans.count() *100","c37296bc":"total_customer.groupby(['product_line'])\\\n            .count()['transaction_id']\\\n            .reset_index()","4272de2f":"total_customer.groupby(['product_line','product_class'])\\\n            .agg({'transaction_id':'count',\n                  'list_price': ['sum','mean'],\n                  'profit':'mean'})","3c81e1ce":"high_product = total_customer.groupby(['product_id'])\\\n            .agg({'transaction_id':'count',\n                  'list_price': 'sum',\n                  'standard_cost':'sum'})\\\n            .reset_index()","3f49eb57":"high_product.head()","9b9379df":"high_product.describe()","8028de33":"high_product_id = high_product[high_product['list_price']>=275228.8]['product_id'].reset_index(drop=True)","de1b7645":"def id_map(product_id):\n    if product_id in high_product_id:\n        classify = 'High margin product'\n    else:\n        classify = 'Low margin product'\n    return classify","dc797118":"total_customer['classify'] = total_customer.product_id.apply(id_map)","d3a4e125":"total_customer.groupby(['classify']).count()['customer_id']","4c8dfb79":"trans_by_cus = total_customer.groupby(['customer_id'])\\\n                            .agg({'transaction_id':'count',\n                                  'list_price':'sum',\n                                  'profit':'sum'})\\\n                            .reset_index()\ntrans_by_cus.head()","f020b44b":"trans_by_cus.groupby(['transaction_id'])\\\n            .agg({'customer_id':'count',\n                  'list_price':'mean',\n                  'profit':'mean'})\\\n            .reset_index()","aaaf3d8d":"total_customer['group_age'] = pd.cut(x = total_customer.age,\n                                  bins=[10,40,63,100],\n                                  labels=['youth','middle','old']) ","a2914953":"data_t = trans_by_cus.merge(total_customer.groupby(['customer_id']).head(1).reset_index(drop=True),\n                   how='left',on='customer_id')","5bce025c":"data_t = data_t.drop(columns=['transaction_id_y', 'product_id', 'transaction_date', \n                     'online_order','order_status', 'brand', 'product_line', \n                     'product_class', 'product_size', 'list_price_y', 'standard_cost',\n                     'product_first_sold_date', 'first_name', 'last_name','DOB',\n                     'job_title','deceased_indicator','postcode',\n                     'country', 'profit_y','recency' ])","9a3e7412":"data_t.columns","24f0cd2a":"data_t.head()","813be839":"data_t.groupby(['group_age']).agg({'customer_id':'count',\n                                 'profit_x':'mean'})","c583d698":"data_t.groupby(['gender']).agg({'customer_id':'count',\n                              'profit_x':'mean'})","6dd2066a":"data_t.groupby(['wealth_segment']).agg({'customer_id':'count',\n                                        'profit_x':'mean'})","7d46c235":"data_t.groupby(['state']).agg({'customer_id':'count',\n                             'profit_x':'mean'})","ef542a6a":"data_t.groupby(['job_industry_category']).agg({'customer_id':'count',\n                                        'profit_x':'mean'})","046c1851":"age_tenure = data_t[['age','tenure']]","246b5e3f":"# correlation between age and tenure is average possitive\nage_tenure.corr()","00a0b9ab":"# there is approximately not correlate between age and property valuation\nage_prop = data_t[['age','property_valuation']]","43e88910":"age_prop.corr()","0daa48ce":"age_3 = data_t[['age','past_3_years_bike_related_purchases']]","5b4986bb":"age_3.corr()","d03dc2c9":"data_t.describe()","b8971d28":"from scipy import stats\nfrom statsmodels.stats.multicomp import pairwise_tukeyhsd","e6e1bb62":"stats.ttest_1samp(data_t.list_price_x, popmean=6269)","e1affc56":"stats.ttest_1samp(data_t.profit_x, popmean=3120)","6843d5e0":"male = data_t[data_t.gender =='Male']\nfemale = data_t[data_t.gender =='Female']","87f36cca":"stats.ttest_ind(male.profit_x, female.profit_x, equal_var=False)","df5bf62b":"youth = data_t[data_t.group_age =='youth']\nmid = data_t[data_t.group_age =='middle']\nold = data_t[data_t.group_age =='old']","bffc6337":"# variance testing: is equal\nstats.levene(youth.profit_x,mid.profit_x,old.profit_x)","6dc69fb6":"stats.f_oneway(youth.profit_x, mid.profit_x, old.profit_x)","257b19a4":"#there is no difference between group age\nprint(pairwise_tukeyhsd(data_t.profit_x,data_t.group_age))","037c3236":"total_customer.head()","2d6e91f7":"rfm = total_customer.groupby(['customer_id'])\\\n                    .agg({'transaction_id':'count','recency':'min', 'profit':'sum'})\\\n                    .reset_index()","e1f2bda9":"rfm = rfm.rename(columns=({\n    'transaction_id' : 'frequency',\n    'profit':'monetary'\n}))\n\nrfm.head()","0d93bae3":"rfm.describe()","e5cdfe28":"def f_map(frequency):\n    if frequency <= 4:\n        f_score = 1\n    elif frequency <=6:\n        f_score = 2\n    elif frequency <=7:\n        f_score = 3\n    else:\n        f_score = 4\n    return f_score","4fbc2b8c":"def r_map(recency):\n    if recency <= 18:\n        r_score = 4\n    elif recency <=44:\n        r_score = 3\n    elif recency <=86:\n        r_score = 2\n    else:\n        r_score = 1\n    return r_score","7365ed34":"def m_map(monetary):\n    if monetary <= 1834.8925:\n        m_score = 1\n    elif monetary <= 2848.865:\n        m_score = 2\n    elif monetary <= 4170.79:\n        m_score = 3\n    else:\n        m_score = 4\n    return m_score","6873e7b0":"rfm['r_score']=rfm.recency.apply(r_map)\nrfm['f_score']=rfm.frequency.apply(f_map)\nrfm['m_score']=rfm.monetary.apply(m_map)","edc17ba0":"rfm['RFM_values'] = rfm.r_score*100 + rfm.f_score*10 + rfm.m_score","440cb1ec":"rfm.head()","155d0fa5":"rfm['RFM_values'].quantile([0.25,0.5,0.75])","7da21f38":"def rank(RFM_values):\n    if RFM_values <= 211:\n        rank = 'Bronze'\n    elif RFM_values <= 311:\n        rank = 'Silver'\n    elif RFM_values <= 411:\n        rank = 'Gold'\n    else:\n        rank = 'Platinum'\n    return rank","b6ea8275":"rfm['customer_rank'] = rfm['RFM_values'].apply(rank)","8458567e":"rfm.head()","072701bd":"rfm.groupby(['customer_rank']).count()['customer_id']","79938c4a":"rfm['RFM_values'].quantile(np.arange(0,1.1,0.1))","a6b5d2ef":"def segment(RFM_values):\n    if RFM_values == 444:\n        segment = 'Champions'\n    elif RFM_values >= 433:\n        segment = 'Loyal Customers'\n    elif RFM_values >= 421:\n        segment = 'Potential Loyalist'\n    elif RFM_values >= 344:\n        segment = 'Recent Customers'\n    elif RFM_values >= 323:\n        segment = 'Promising'\n    elif RFM_values >= 311 :\n        segment = 'Customers Needing Attention'\n    elif RFM_values >= 224 :\n        segment = 'About To Sleep'\n    elif RFM_values >= 212 :\n        segment = 'At Risk'\n    elif RFM_values >= 124 :\n        segment = 'Can\u2019t Lose Them'\n    elif RFM_values >= 112 :\n        segment = 'Hibernating'\n    else:\n        segment='Lost'\n    return segment","e21f7f33":"rfm['customer_segment']=rfm['RFM_values'].apply(segment)","644fb88a":"rfm['customer_segment']=pd.Categorical(rfm['customer_segment'],\n                                       ['Champions','Loyal Customers',\n                                        'Potential Loyalist','Recent Customers',\n                                        'Promising','Customers Needing Attention',\n                                        'About To Sleep','At Risk',\n                                        'Can\u2019t Lose Them','Hibernating','Lost'])","243bac46":"rfm.head()","40fb06da":"customer_segment = rfm.groupby(['customer_segment']).agg({\n    'customer_id':'count',\n    'monetary':'mean'\n}).reset_index()","9074c1b1":"customer_segment['cumulative'] = customer_segment.customer_id.cumsum()","8b2f3c74":"customer_segment","8735ab16":"data = data_t.merge(rfm, how='left', right_on='customer_id',left_on='customer_id')","6e574fe3":"data = data.rename(columns=({\n   'transaction_id_x':'transaction_count',\n    'list_price_x':'total_sales',\n    'profit_x':'total_profit'\n  \n}))","c788da3e":"highv_customer = data[(data['customer_segment']=='Champions') |\n                      (data['customer_segment']=='Loyal Customers') |\n                      (data['customer_segment']=='Potential Loyalist') |\n                      (data['customer_segment']=='Recent Customers')]\\\n                .merge(info[['first_name','customer_id']], how='left',on='customer_id')\n\nhighv_customer.head()","64d01a5f":"data.head()","0f356a57":"data.columns","c19bb51a":"px.bar(data.groupby(['wealth_segment', 'customer_segment','gender','group_age']).count().reset_index(), \n       x='customer_segment',y='customer_id',\n       color='wealth_segment',facet_col='gender', facet_row='group_age',\n       orientation='v',height=1000, width=800)","8ce95b73":"px.bar(data.groupby(['wealth_segment', 'customer_segment','gender']).mean().reset_index(), \n       x='customer_segment',y='total_profit',\n       color='wealth_segment',facet_row='gender',\n       orientation='v', barmode='group')","40243d2c":"px.bar(data.groupby(['wealth_segment', 'customer_segment','group_age']).mean().reset_index(), \n       x='customer_segment',y='total_profit',\n       color='wealth_segment',facet_row='group_age',\n       orientation='v', barmode='group',height=1000)","c67b56c0":"px.bar(data.groupby(['state', 'customer_segment','wealth_segment']).mean().reset_index(), \n       x='customer_segment',y='total_profit',\n       color='wealth_segment',facet_row='state',\n       orientation='v', barmode='group',height=800)","9e47808e":"px.treemap(data.groupby(['customer_segment']).count().reset_index(),\n       values='customer_id',path=['customer_segment'])","538cf3d8":"px.pie(data.groupby(['job_industry_category']).count().reset_index(),\n       values='customer_id',names='job_industry_category')","6930e1fe":"data.transaction_month=data.transaction_month.astype(str)","f2dabbc7":"px.line(data.groupby(['transaction_month','customer_segment']).count().reset_index(), \n       x='transaction_month',y='customer_id',color='customer_segment')","4c78a629":"px.bar(data.groupby(['state','wealth_segment']).mean().reset_index(), \n       x='state',y='RFM_values',color='wealth_segment',\n       orientation='v', barmode='group')","37f2f00a":"px.bar(data.groupby(['classify','customer_segment']).count().reset_index(), \n       x='classify',y='customer_id',color='customer_segment',\n       orientation='v', barmode='group')","72097c90":"px.scatter(data, x='recency',y='monetary')","862ae2b8":"px.scatter(data, x='frequency',y='monetary')","1df541b1":"px.scatter(data, x='recency',y='frequency')","6b9754ce":"**Mean profit of male and female is equal**","ae092716":"### Hypothesis testing","8be84eae":"***Frequency against monetary***","ce90fc21":"### RFM analysis\n\n[RFM documetation](https:\/\/clevertap.com\/blog\/rfm-analysis\/)","bf7e226a":"***Number of customers drill down by product segment and customer segment***","f40528cc":"# Data Insights","3b13b6f0":"***The proportion of customers in each segment***","0dd9f6c4":"## Customer demographic","0311114a":"## Transaction","b140b03f":"## Information of customer\n\nMerge customer demographic with customer address for easy viewing","f90b7cab":"### Correlation","2aa1e9c1":"***Add cumulative columns to get 1000 high values customer - who in 4 segments: champions, loyal customer, potential loyalist and recent customers*** ","38e17525":"***The proportion of customers in each job category***","40935ad8":"# Data visualization","a757b110":"***Recency against monetary***","8a01a21e":"***Number of customers by gender is approximately equal***","3cc0af9e":"***Number of customers of each segment drill down by wealth segment, gender and group age***","5b768d18":"***Average profit of each customer segment drill down by wealth segment, gender, group age and state***","374b90fa":"**RFM Segmentation**\n\nCustomer Segment  |Descriptive|RFM score              \n:----------|:------------------|:----------------------\nChampions        |Bought most recently, most often, and heavy spenders|444\nLoyal Customers|Bought most recently, average frequency and spent a good amount |433-443\nPotential Loyalist  |  Most recently, average frequency, small amount    |421-432   \nRecent Customers | Bought recently, high frequency, high values  |344-420  \nPromising |Bought recently, average frequency, average values|323-343\nCustomers Needing Attention|Bought recently, low frequency, low values|311-322\nAbout To Sleep|Average recently, average frequency, high values|224-310\nAt Risk|Average recently, low frequency, average values|212-223\nCan\u2019t Lose Them|Very low recently, average frequency, high values|124-211\nHibernating|Very low recently, low frequency, average values|112-123\nLost|Very low FRM|111","b51096b4":"# Data cleaning","573cf51d":"## Customer address","b15d994a":"**Testing mean and interval of sales and profit**","ca969f65":"***Divide age into groups***","293abde6":"***Medium standard products have the most transactions and the highest total sales, but mean sales of high standard product is the highest and mean profit of medium touring product is on top***","7c139227":"**Group age testing**","6462a9b2":"***Standard product line have the most transactions***","b54cd7e7":"***Customers from NSW is the most crowded***","0b6fbb7e":"## Model development","0359c59a":"***Popular job industry category are financial, health and manufacturing***","d65de472":"***Percent of approved transaction is 99,1%***","2757ab53":"## New customer list","e74e8120":"***Mass customer account for 50% of total customers*** ","6d211dd7":"***Get infomation of 1000 high value customers***","93afb4ee":"***RFM values by state and wealth segment***","ee275e86":"***Numbers of customers of each customer segment over months***","0d464511":"**Business Problem: Targeting high value customers based on customer demographics and attributes**","7e8e724b":"***The number of transactions of each customer is in range 1 to 14 times. In which, the number of transactions with the most customers is 5 times (there are 607 customers who have 5 transactions). The total of sales and profit are mainly concentrated in the customers who have transactions above 8 times***","80089e20":"***Middle-age customers account for 55% of total customers***","fdff6843":"***Identify high margin products***","7762ddab":"## Data exploration\n\nMerge customer's infomation with history transactions of each customer","fd62487f":"***Create table include infomation, number of transactions of each customer (customer id is unique)***"}}