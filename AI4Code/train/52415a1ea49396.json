{"cell_type":{"687a786c":"code","a43b45f3":"code","72670029":"code","a1e2dc77":"code","20d72030":"code","acadc6d8":"code","5bfd57a0":"code","15995bb1":"code","cadcf11f":"code","afe7a55d":"markdown","81e572cb":"markdown","addbae42":"markdown","329d811e":"markdown","abfcd843":"markdown","381a70d6":"markdown","a2effca8":"markdown","5bf090e3":"markdown","13ef1ac4":"markdown","e2cc7b2d":"markdown"},"source":{"687a786c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a43b45f3":"import matplotlib.pyplot as plt\nimport pandas as pd\nimport pylab as pl\nimport numpy as np\n%matplotlib inline","72670029":"df = pd.read_csv(\"..\/input\/spotify-dataset-19212020-160k-tracks\/data.csv\")\n\n# take a look at the dataset\ndf.head()","a1e2dc77":"cdf = df[['acousticness','danceability','duration_ms','energy','explicit','instrumentalness','key','liveness','loudness','mode','popularity','speechiness','tempo','valence']]\ncdf.head(14)","20d72030":"plt.scatter(cdf.instrumentalness, cdf.speechiness,  color='red')\nplt.xlabel(\"instrumentalness\")\nplt.ylabel(\"speechiness\")\nplt.show()","acadc6d8":"msk = np.random.rand(len(df)) < 0.7\ntrain = cdf[msk]\ntest = cdf[~msk]","5bfd57a0":"plt.scatter(cdf.instrumentalness, cdf.speechiness,  color='red')\nplt.xlabel(\"instrumentalness\")\nplt.ylabel(\"speechiness\")\nplt.show()","15995bb1":"from sklearn import linear_model\nregr = linear_model.LinearRegression()\nx = np.asanyarray(train[['instrumentalness','duration_ms','energy']])\ny = np.asanyarray(train[['tempo']])\nregr.fit (x, y)\n# The coefficients\nprint ('Coefficients: ', regr.coef_)","cadcf11f":"y_hat= regr.predict(test[['instrumentalness','duration_ms','energy']])\nx = np.asanyarray(test[['instrumentalness','duration_ms','energy']])\ny = np.asanyarray(test[['tempo']])\nprint(\"Sum of squares: %.4f\"\n      % np.mean((y_hat - y) ** 2))\n\n# Explained variance score: 1 is perfect prediction\nprint('Variance score: %.4f' % regr.score(x, y))","afe7a55d":"***4. Multiple Regression Model***","81e572cb":"***Train data distribution.***","addbae42":"***Creating train and test dataset.***","329d811e":"***5. Prediction***","abfcd843":"(spotify-dataset)data.csv","381a70d6":"***1. Importing Needed Packages***","a2effca8":"***2. Understanding Data***","5bf090e3":"***3. Reading the data in***","13ef1ac4":"\t\t\t\t\t\t\t\t\t\t\t\t\n***acousticness*** eg - 0.991000\n***artists*** eg - ['Mamie Smith']\n***danceability*** eg - 0.598\n***duration_ms*** eg - 168333\n***energy*** eg - 0.224\n***explicit*** eg - 0\n***id*** eg - 0cS0A1fUEUd1EW3FcF8AEI\n***instrumentalness*** eg - 0.000522\n***key***eg - 5\n***liveness*** eg - 0.3790\n***loudness*** eg - -12.628\n***mode*** eg - 0\n***name*** eg - Keep A Song In Your Soul\n***popularity*** eg - 12\n***release_date*** eg - 1920\t\t\n***speechiness*** eg-0.0936\t\n***tempo*** eg-149.976\t\n***valence*** eg-0.6340\t\t\n***year*** eg-1920","e2cc7b2d":"***Selecting features for regression.***"}}