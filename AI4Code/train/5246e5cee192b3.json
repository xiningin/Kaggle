{"cell_type":{"7fd201f3":"code","f512fb01":"code","dcafb294":"code","b62d9ba4":"code","54c02ac8":"code","13ff1674":"code","3101dcc6":"code","c429f777":"code","11323303":"code","b0f4c65b":"code","8d1d3c85":"code","50744fa3":"code","94b35c05":"code","8d054f76":"code","01bea828":"markdown","1feb9a1e":"markdown","f1643f79":"markdown","42040886":"markdown","5b83dcc1":"markdown","f7c44b20":"markdown","2b37cf98":"markdown","da839fb7":"markdown","e354b57c":"markdown","7f30f4b4":"markdown","4510089f":"markdown","b13f9dd8":"markdown"},"source":{"7fd201f3":"!pip install git+git:\/\/github.com\/fastai\/fastai.git","f512fb01":"import numpy as np \nimport pandas as pd \nimport fastai\nfastai.__version__","dcafb294":"# import vision submodule from fastai\nfrom fastai.vision.all import *","b62d9ba4":"# path to directory of images\npath = '\/kaggle\/input\/crowd-counting\/frames\/frames\/'","54c02ac8":"# sample of paths to input images\nPath(path).ls()[:3]","13ff1674":"df = pd.read_csv('\/kaggle\/input\/crowd-counting\/labels.csv')\ndf.head()","3101dcc6":"df['id'] = df.id.apply(lambda x: '\/kaggle\/input\/crowd-counting\/frames\/frames\/seq_{:06d}.jpg'.format(x))\ndf.columns = ['x','y']\ndf.head()","c429f777":"def get_x(df): return df['x'] # path to images\ndef get_y(df): return df['y'] # labels\n\nd = DataBlock(blocks=(ImageBlock, RegressionBlock),    # types of input and output\n         get_x = get_x,                                # function to get path to images\n         get_y = get_y,                                # function fo get labels\n         splitter=RandomSplitter(),                    # random splitter (20% for validation)\n         item_tfms=Resize(224, ResizeMethod.Squish),)  # resize and squish images ","11323303":"dl = d.dataloaders(df)","b0f4c65b":"len(dl.train_ds), len(dl.valid_ds)","8d1d3c85":"dl.show_batch(figsize=(12,12))","50744fa3":"learn = cnn_learner(dl, resnet18, metrics=mae)","94b35c05":"learn.fine_tune(8, 5e-2)","8d054f76":"learn.show_results(figsize=(12,12))","01bea828":"Show a batch of images along with their labels.","1feb9a1e":"Notice that each image has a unique sequence number. \n\nNext, we a look at the provided labels.","f1643f79":"> Note: Until fastai version 2 becomes available on Kaggle you need to install it using the first cell. ","42040886":"`id` in the above dataframe corresponds to the sequence number of an image.\n\nFastai expects as inputs the path to images and their corresponding labels.  \n\nHence, the dataframe will be updated to have all the required info. \n\nPath to images will be under col `x`, labels will be under col `y`.\n","5b83dcc1":"Next we build the DataBlock. This defins types on input and out, how to obtain those, how to split the data, and finally specify trasformations to be applied. ","f7c44b20":"The task is to estimate number of people in images taken inside a mall. ","2b37cf98":"# **Crowd Estimation Using Fastai V2**","da839fb7":"We are able to obtain such a great result with just few lines of code!","e354b57c":"Build the data loaders using the DataBlock and the DataFrame.","7f30f4b4":"Lengths of training and validation data sets","4510089f":"State of the art solutions for this kind of problems are based on generating density maps using Unet-style convolutional neural networks. These density maps are then integrated to get the crowd estimation. \n\nHowever, for simplicity, we will do image regression. \n\nIn this case, we don't generate density maps. Instead, we directy try to get an estimation of the crowd out of the network based on the features extracted from input images. ","b13f9dd8":"Build a Learner utilizing the Dataloaders, and using a pretrained `resnet18` model customized to prodcuce the required output (resression in this case) of crowd estimation."}}