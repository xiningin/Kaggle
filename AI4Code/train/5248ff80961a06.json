{"cell_type":{"f683bcaa":"code","1c6ba0ae":"code","6b024eeb":"code","fe34ba92":"code","5c56268d":"code","77d120ef":"code","feb1735b":"code","de67a620":"code","fb6f4f9e":"code","3921db23":"code","afb739cf":"code","ae9cdd33":"code","b195289a":"code","89251ca7":"code","3eb5a410":"code","31542dde":"markdown","5f8f35af":"markdown","dc2fbdde":"markdown","7e485ec1":"markdown","6a0b1846":"markdown","8c291e3e":"markdown","7cc6668e":"markdown","6cd7197f":"markdown","77379d8b":"markdown","3f51f957":"markdown","173e420c":"markdown"},"source":{"f683bcaa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1c6ba0ae":"import random\nimport math\nimport matplotlib.pyplot as plt\nfrom matplotlib import style\nstyle.use('ggplot')","6b024eeb":"df = pd.read_csv('\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv')","fe34ba92":"df.head()","5c56268d":"ms = df['math score']\nrs = df['reading score']\nws = df['writing score']","77d120ef":"df.describe()","feb1735b":"def Estimate(series, mu=0, median=0, n=7, m=1000):\n    means = []\n    medians = []\n    \n    for _ in range(m):\n        xs = [random.sample(list(series), n)]\n        x_bar = np.mean(xs)\n        median = np.median(xs)\n        means.append(x_bar)\n        medians.append(median)\n        \n    print('rmse of x_bar: ', RMSE(means, mu))\n    print('rmse of median: ', RMSE(medians, mu))\n    \ndef RMSE(estimates, actual):\n    e2 = [(estimate - actual) ** 2 for estimate in estimates]\n    mse = np.mean(e2)\n    return math.sqrt(mse)","de67a620":"print('Estimate of math score: ', Estimate(ms, mu=66.08900, median=66.00000))\nprint('\\n')\nprint('Estimate of reading score: ', Estimate(rs, mu=69.169000, median=70.000000))\nprint('\\n')\nprint('Estimate of writing score: ', Estimate(ws, mu=68.054000, median=69.000000))\nprint('\\n')","fb6f4f9e":"def SimulateSample(series, mu=0, n=7, m=1000):\n    x_bars = []\n    cdf = []\n    \n    for _ in range(m):\n        xs = random.sample(list(series), n)\n        x_bar = np.mean(xs)\n        x_bars.append(x_bar)\n        \n    #cdf.append(EvalCdf(means, x) for x in means)\n    #ci = np.percentile(means, 5), np.percentile(means, 95)\n    #std_error = RMSE(means, mu)\n    \n    #print('Confidence Interval: ', ci)\n    #print('rmse: ', std_error)\n    return x_bars\n\ndef EvalCdf(sample, x):\n    count = 0\n    \n    for i in sample:\n        if i <= x:\n            count += 1\n    prob = count \/ len(sample)\n    return prob","3921db23":"x_bars_ms = SimulateSample(ms, mu=66.08900)\nx_bars_rs = SimulateSample(rs, mu=69.169000)\nx_bars_ws = SimulateSample(ws, mu=68.054000)","afb739cf":"print('rmse of x_bars_ms: ', RMSE(x_bars_ms, 66.08900))\nprint('rmse of x_bars_rs: ', RMSE(x_bars_rs, 69.169000))\nprint('rmse of x_bars_ws: ', RMSE(x_bars_ws, 68.054000))\nprint('\\n')\nprint('90% Confidence Interval of x_bars_ms: ', np.percentile(x_bars_ms, 5), np.percentile(x_bars_ms, 95))\nprint('90% Confidence Interval of x_bars_rs: ', np.percentile(x_bars_rs, 5), np.percentile(x_bars_rs, 95))\nprint('90% Confidence Interval of x_bars_ws: ', np.percentile(x_bars_ws, 5), np.percentile(x_bars_ws, 95))","ae9cdd33":"cdf_ms = [EvalCdf(sorted(x_bars_ms), x) for x in sorted(x_bars_ms)]\ncdf_rs = [EvalCdf(sorted(x_bars_rs), x) for x in sorted(x_bars_rs)]\ncdf_ws = [EvalCdf(sorted(x_bars_ws), x) for x in sorted(x_bars_ws)]","b195289a":"plt.figure(figsize = (15, 8))\n\nplt.plot(sorted(x_bars_ms), cdf_ms)\nplt.axvline(np.percentile(x_bars_ms, 5), 0, ls = '--', color = 'blue')\nplt.axvline(np.percentile(x_bars_ms, 95), 0, ls = '--', color = 'blue')\nplt.axvline(np.mean(x_bars_ms), 0, ls = ':', color = 'red')\nplt.axvline(np.mean(ms), 0, ls = ':', color = 'green')","89251ca7":"plt.figure(figsize = (15, 8))\n\nplt.plot(sorted(x_bars_rs), cdf_rs)\nplt.axvline(np.percentile(x_bars_rs, 5), 0, ls = '--', color = 'blue')\nplt.axvline(np.percentile(x_bars_rs, 95), 0, ls = '--', color = 'blue')\nplt.axvline(np.mean(x_bars_rs), 0, ls = ':', color = 'red')\nplt.axvline(np.mean(rs), 0, ls = ':', color = 'green')","3eb5a410":"plt.figure(figsize = (15, 8))\n\nplt.plot(sorted(x_bars_ws), cdf_ws)\nplt.axvline(np.percentile(x_bars_ws, 5), 0, ls = '--', color = 'blue')\nplt.axvline(np.percentile(x_bars_ws, 95), 0, ls = '--', color = 'blue')\nplt.axvline(np.mean(x_bars_ws), 0, ls = ':', color = 'red')\nplt.axvline(np.mean(ws), 0, ls = ':', color = 'green')","31542dde":"***What do the graphs show?***\n\n1. The confidence intervals (in blue). The values of the CIs shown above have the obvious meaning, one can leave a comment if in case, doubtful.\n2. The sample mean (in red).\n3. The population mean (in green). \n\n***What can be concluded?***\n\n1. The vertical lines representing the sample mean and the mu almost overlap in all of the above graphs.\n2. This shows that the sample mean or x_bar undoubtedly represents the whole of the population or its mean mu.\n3. Therefore, we can say that there is a little difference in the x_bar and mu thus depicting that the sample mean is representative of whole of the population with a standard error of the respective RMSE values. ","5f8f35af":"**Looks like the sample mean is the best estimator of mu in all the subjects**\n\n***Why?***\n\nBecause the RMSE for x_bar or sample mean is less than that of the median in all the cases.","dc2fbdde":"***What is a Cumulative Distribution Function or CDF?***\n\nPlease refer to my notebook; [Introduction: Analytic distribution w\/ Volkswagen](https:\/\/www.kaggle.com\/ritikpnayak\/introduction-analytic-distribution-w-volkswagen) to read about it","7e485ec1":"# 2. Sampling Distributions","6a0b1846":"***What is Sampling Distributions?***\n\n1. Suppose that you want to know the mean of the marks of all students in a city in a specific subject.\n2. For that, you can take a record of all the students from the city and find the mean. But we generally don't do that.\n3. It would be reasonable for you to take a sample of say, 400 children, find the sample mean and take that for an estimator of the population mean.\n4. Let's say for instance that the sample mean comes out to be 66. You may report that the mean of the population is 66 marks.\n\n***How confident would you be?***\n\n1. You might end up choosing the 400 most scoring or least scoring children in the face of it.\n2. That will significantly overestimate or underestimate your results.\n3. For that purpose, we would like to **summarize our estimation** in 2 stats. One is the **\"standard error\"**. The other one being, the **\"confidence interval\"**.\n\n***What is Standard Error?***\n\n1. Strictly speaking, it's the measure of how far our estimate is expected to be off, on average.\n2. We take the RMSE for standard error.\n\n***What is Confidence Interval?***\n\n1. Range in which a certain percentage of the values would fall.\n2. If we compute the 90% confidence interval, we are saying that the values of our mean (sample mean) would variate or fall in this range if 90 out of 100 values of sample means (sample mean of a number of simulations or experiments\/samples) were to be taken at random.\n\n***How to find the RMSE and what is the whole process?***\n\nThe process would be better understood through the code that I write forthwith.","8c291e3e":"# 1. Estimation","7cc6668e":"1. [Introduction to Hypothesis Testing and Estimation](https:\/\/www.kaggle.com\/ritikpnayak\/introduction-to-hypothesis-testing-and-estimation)","6cd7197f":"1. [Elemental approach to finding correlation](https:\/\/www.kaggle.com\/ritikpnayak\/elemental-approach-to-finding-correlation)\n\n2. [Computing the magnitude of skewness in Maths score](https:\/\/www.kaggle.com\/ritikpnayak\/computing-the-magnitude-of-skewness-in-maths-score)","77379d8b":"# Previous notebooks on the same subject:","3f51f957":"***What is Estimation?***\n\nLet's understand that with an example:\n\n1. Take the variable\/column \"math score\" as an example.\n2. We can use 2 stats for mean; one is the sample mean or the median\n3. We have to decide which one better portrays the population mean (mu); sample mean (x_bar) or the median.\n4. For that we'll run the experiment many times, each time taking a sample of certain values from the data. \n5. We'll collect the x_bar and median of each sample separately.\n6. Finally, we'll compute the RMSE (Root Mean Square Error) for both x_bar and median. The less erroneous one would be our estimator.\n\n***How will we run the experiments many times? What is the experiment in our example?***\n\n1. Generalizing the term experiment, we can take the dice throwing for an experiment. Each time we throw a dice, a no. between 1-6 appears. \n2. In our example, we'll run the experiment in the sense that each time we take a new sample, we'll note down the sample mean and the median.\n3. For instance, we know that the length of our dataframe is 1000. So, we run the experiment 2000 times, each time taking a sample of length, say for instance, 7 from the given population (data) itself. \n\n***What is the concept behind \"estimation\"?***\n\n1. If we have a population of length, say, 2000 with mean 'mu', and we wish to take a small sample out of it, say of length 1000, the mean of that sample 'x_bar' should be equal to 'mu'.\n2. We have but a median stat associated with the data which can also be taken for the sample mean (x_bar).\n3. Our task is to find which estimator for the population mean (mu) is the best.\n4. That would be decided using the RMSE for both the estimators.\n\n***How to find the RMSE and what is the whole process?***\n\nThe process would be better understood through the code that I write forthwith.","173e420c":"# Previous notebooks on the same dataset:"}}