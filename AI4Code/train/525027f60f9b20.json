{"cell_type":{"299f4710":"code","44f63260":"code","ef5a76f0":"code","0ab81d61":"code","1311f0d3":"code","592d2299":"code","b769b0ba":"code","5df130d4":"code","0fe899ca":"code","f52dbbb5":"code","778371ff":"code","a003f08d":"code","6389a01b":"code","3001a078":"code","d9bf5e6c":"code","df30a480":"markdown","e55f375b":"markdown","a5ccfbb6":"markdown","c3abb403":"markdown","e0d54803":"markdown","15c29704":"markdown","3722ae07":"markdown","876d6da4":"markdown","34a72915":"markdown","a058ac1d":"markdown","997894b4":"markdown"},"source":{"299f4710":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","44f63260":"#Race_Result=RR, convert from CSV to dataframe with pandas\nRR=pd.read_csv(\"\/kaggle\/input\/jra-horse-racing-dataset\/19860105-20210731_race_result.csv\")","ef5a76f0":"#Give an overview info of the dataframe\nRR.info()","0ab81d61":"len(RR.\u30ec\u30fc\u30b9ID.unique())","1311f0d3":"len(RR.\u99ac\u540d.unique())","592d2299":"len(RR.\u30ec\u30fc\u30b9\u540d.unique())","b769b0ba":"RR.\u30ec\u30fc\u30b9\u65e5\u4ed8","5df130d4":"RR['\u30ea\u30b9\u30c6\u30c3\u30c9\u30fb\u91cd\u8cde\u7af6\u8d70'].unique()","0fe899ca":"RRGrade=RR.dropna(subset = ['\u30ea\u30b9\u30c6\u30c3\u30c9\u30fb\u91cd\u8cde\u7af6\u8d70'])","f52dbbb5":"#df.loc[df['column_name'] == some_value]\nRRGrade1st=RRGrade.loc[RRGrade['\u7740\u9806']==1]\nRRGrade1st[['\u30ec\u30fc\u30b9ID','\u30ec\u30fc\u30b9\u65e5\u4ed8','\u30ec\u30fc\u30b9\u540d','\u30ea\u30b9\u30c6\u30c3\u30c9\u30fb\u91cd\u8cde\u7af6\u8d70','\u99ac\u540d','\u7740\u9806']]","778371ff":"len(RRGrade1st.\u30ec\u30fc\u30b9ID.unique())","a003f08d":"#https:\/\/re-thought.com\/pandas-value_counts\/\nRRCount=RRGrade1st['\u30ec\u30fc\u30b9ID'].value_counts().to_frame()\nRRCount=RRCount.rename(columns={'\u30ec\u30fc\u30b9ID':'Count'})\nRRCount['\u30ec\u30fc\u30b9ID']=RRCount.index\nRRCount=RRCount.loc[RRCount['Count']>1]\nRRCount","6389a01b":"RRMultiWin=pd.merge(RRCount,RRGrade1st,how='left',on='\u30ec\u30fc\u30b9ID')\nRRMultiWin[['\u30ec\u30fc\u30b9ID','\u30ec\u30fc\u30b9\u65e5\u4ed8','\u30ec\u30fc\u30b9\u540d','\u30ea\u30b9\u30c6\u30c3\u30c9\u30fb\u91cd\u8cde\u7af6\u8d70','\u99ac\u540d','\u7740\u9806']]","3001a078":"RRMultiWin[['\u30ec\u30fc\u30b9ID','\u30ec\u30fc\u30b9\u65e5\u4ed8','\u30ec\u30fc\u30b9\u540d','\u30ea\u30b9\u30c6\u30c3\u30c9\u30fb\u91cd\u8cde\u7af6\u8d70','\u99ac\u540d','\u7740\u9806']]","d9bf5e6c":"TopGradeHorse=RRGrade1st['\u99ac\u540d'].value_counts().to_frame()\nTopGradeHorse[TopGradeHorse['\u99ac\u540d']>6]","df30a480":"As per above result, we can understand that:\n\nThere are 121938 unique races recorded in the dataset from 7June1986 to 18July2021, with average of 13 horses participating per race (1626811\/121938). \n\nThere are 147495 unique horses recorded in the dataset.\n\nThere are 2415 unique race names recorded in the dataset, which implies some of the races are done periodically.\n\nNow let us see how this dataset categorize Graded races (\u30ea\u30b9\u30c6\u30c3\u30c9\u30fb\u91cd\u8cde\u7af6\u8d70)","e55f375b":"As can be seen there are 7 races with 2 horse reaching 1st rank, which matches the difference between 4,640 races and 4,647 horses.\nNow we want to see more details of these 7 races by merging the dataframes.","a5ccfbb6":"Now let us see which horse is the most famous in JRA, which we define as horses that reach 1st the most in graded races.\nWe will list out horses with up to 7 wins in graded races","c3abb403":"Looks like out of 4,640 races, there are 4,647 horses that achieve 1st rank. Does that mean there are some races that have more than 1st rank? We will see from the following code","e0d54803":"As above, we can see 9 possible values\n\nnan, G3, G, G2, G1, J.G3, J.G2, J.G1, L\n\nWe are only interested on the 8 grades, so we will exclude all the data with nan values and name it as a new subset Dataframe RRGrade","15c29704":"For simplicity, we will limit our point of interest to horse that reach 1st rank (\u7740\u9806) on each graded race. ","3722ae07":"The result shows:\n\n- 13 wins: Oju Chosan\n- 12 wins: Oguri Cap and T.M Opera \n- 11 wins: Goldship\n- 10 wins: Deep Impact and Kitasan Black\n- 9 wins: Orfevre, Hishi Amazon, Special Week, Almond Eye, Mejiro McQueen, Company and Narita Brian\n- 8 wins: Daiwa Major, Buena Vista, Vodka, Koei Try and Gentildonna\n- 7 wins: Taiki Shuttle, Air Groove, Daitaku Helios, Mejiro Dober, Danon Smash, Mejiro Bright, Biwa Hayahide, Tap Dance City, Dream Journey, Nippo Teio, Kinshasa no Kiseki, Balance of Game, Grass Wonder, Gran Alegria, Lord Kanaloa, Admire Moon, Narita Top Road\n\n\n","876d6da4":"Currently there are 4 datasets in csv format, namely \n\n- Odds\n- Race Result\n- Corner Passing Order\n- Laptime\n\nIn this notebook, we will mainly focus on the Race Result.csv for the preliminary Exploratory Data Analysis","34a72915":"As can be seen above, there are 66 columns, with maximum entries of 1626811 entries.\nLet us explore further how much unique values of the following properties:\n\n- \u30ec\u30fc\u30b9ID (Race ID)\n\n- \u99ac\u540d (Horse Name)\n\n- \u30ec\u30fc\u30b9\u540d (Race Name)\n\nWe are also interested in the date of first race and last race recorded in this dataset.","a058ac1d":"This notebook aims to do the data analysis from JRA\u65e5\u672c\u4e2d\u592e\u7af6\u99ac\u4f1a Horse Racing Dataset scraped and uploaded on the following link.\n\nhttps:\/\/www.kaggle.com\/takamotoki\/jra-horse-racing-dataset\n\nCurrent aim on this data analysis are as follows:\n\n- Define famous horse in JRA by limiting to Graded Races only (\u30ea\u30b9\u30c6\u30c3\u30c9\u30fb\u91cd\u8cde\u7af6\u8d70). Non-Graded Races will be excluded.\n- Listing out Horses that won most Graded Races\n- Other trivias discovered from the dataset","997894b4":"We can find that there are 4,647 record on horses that achieve 1st rank. But let us see how many graded races are recorded in the dataset"}}