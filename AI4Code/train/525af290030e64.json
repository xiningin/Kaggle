{"cell_type":{"c9f42514":"code","f898d654":"code","c6c91f9f":"code","a3730086":"code","0cc74106":"code","7c5eaf1f":"code","8decdbbd":"code","04f2de41":"code","54943215":"code","04213a5a":"markdown"},"source":{"c9f42514":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfrom tqdm.auto import tqdm\nimport shutil as sh\nimport random\nimport wandb\nfrom kaggle_secrets import UserSecretsClient\nuser_secrets = UserSecretsClient() ","f898d654":"combined_path = \"combi\"\ntrain_label_path = combined_path + \"\/labels\/train\/\"\ntrain_image_path = combined_path + \"\/images\/train\/\"\nval_label_path = combined_path + \"\/labels\/val\/\"\nval_image_path = combined_path + \"\/images\/val\/\"\nos.mkdir(combined_path)\nos.mkdir(combined_path+\"\/labels\")\nos.mkdir(combined_path+\"\/images\")\nos.mkdir(train_image_path)\nos.mkdir(train_label_path)\nos.mkdir(val_label_path)\nos.mkdir(val_image_path)\n\ninput_images_path = \"..\/input\/african-wildlife\/\"\ndirnames = next(os.walk(input_images_path), (None, None, []))[1]\n\nfor dir in dirnames:\n    print(dir)\n    filenames = next(os.walk(input_images_path + dir), (None, None, []))[2]  # [] if no file\n    for file in filenames:\n        if \".txt\" in file:\n            if(random.uniform(0, 1) > .33):\n                try:\n                    sh.copy(input_images_path + dir + \"\/\" + file, train_label_path + file)\n                    sh.copy(input_images_path + dir + \"\/\" + file.replace('.txt', '.jpg'), train_image_path + file.replace('.txt', '.jpg'))\n                except:\n                    if os.path.exists(train_label_path + file):\n                        os.remove(train_label_path + file)\n                    if os.path.exists(train_image_path + file.replace('.txt', '.jpg')):\n                        os.remove(train_image_path + file.replace('.txt', '.jpg'))\n            else:\n                try:\n                    sh.copy(input_images_path + dir + \"\/\" + file, val_label_path + file)\n                    sh.copy(input_images_path + dir + \"\/\" + file.replace('.txt', '.jpg'), val_image_path + file.replace('.txt', '.jpg'))\n                except:\n                    if os.path.exists(val_label_path + file):\n                        os.remove(val_label_path + file)\n                    if os.path.exists(val_image_path + file.replace('.txt', '.jpg')):\n                        os.remove(val_image_path + file.replace('.txt', '.jpg'))\n            \n                ","c6c91f9f":"# Download YOLOv5\n!git clone https:\/\/github.com\/ultralytics\/yolov5  # clone repo\n%cd yolov5\n# Install dependencies\n%pip install -qr requirements.txt  # install dependencies\n\n%cd ..\/\nimport torch\nprint(f\"Setup complete. Using torch {torch.__version__} ({torch.cuda.get_device_properties(0).name if torch.cuda.is_available() else 'CPU'})\")","a3730086":"# Install W&B \n!pip install -q --upgrade wandb\n# Login \nimport wandb\n\npersonal_key_for_api = user_secrets.get_secret(\"wandb\")\n\n! wandb login $personal_key_for_api\n","0cc74106":"# Necessary\/extra dependencies. \nimport os\nimport gc\nimport cv2\nimport numpy as np\nimport pandas as pd\nfrom tqdm import tqdm\nfrom shutil import copyfile\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\n\n#customize iPython writefile so we can write variables\nfrom IPython.core.magic import register_line_cell_magic\n\n@register_line_cell_magic\ndef writetemplate(line, cell):\n    with open(line, 'w') as f:\n        f.write(cell.format(**globals()))","7c5eaf1f":"IMG_SIZE = 800\nBATCH_SIZE = 16\nEPOCHS = 500","8decdbbd":"# Create .yaml file \nimport yaml\n\ndata_yaml = dict(\n    train = '..\/combi\/images\/train',\n    val = '..\/combi\/images\/val',\n    nc = 4,\n    names = ['buffalo', 'elephant', 'rhino', 'zebra']\n)\n\n# Note that I am creating the file in the yolov5\/data\/ directory.\nwith open('yolov5\/data\/data.yaml', 'w') as outfile:\n    yaml.dump(data_yaml, outfile, default_flow_style=True)\n    \n%cat yolov5\/data\/data.yaml","04f2de41":"%cd yolov5\/","54943215":"!python train.py --img {IMG_SIZE} \\\n                 --batch {BATCH_SIZE} \\\n                 --epochs {EPOCHS} \\\n                 --data data.yaml \\\n                 --weights yolov5l.pt \\\n                 --save_period 5\\\n                 --project African_Wildlife","04213a5a":"Combine category folders"}}