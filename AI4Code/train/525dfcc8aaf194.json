{"cell_type":{"0b1cc344":"code","d20c8b26":"code","abdb8e30":"code","9ce67499":"code","08451ba0":"code","29820b23":"code","f85fdd07":"code","d710f8e5":"code","eff3b8da":"code","fb87f674":"code","12b5a438":"code","11391714":"code","d2f79194":"code","77ea6692":"code","082d8f29":"code","1561d1c9":"code","9c60dbd7":"code","9ca49e4a":"code","8a827979":"code","e052c429":"code","0ae22269":"code","0680099e":"code","f2f6f8bf":"code","7a008563":"code","925d2cd5":"code","1964b3eb":"code","a2e12c84":"code","299864ba":"code","2211d74f":"code","e9634f38":"code","0fda70f4":"code","149b0255":"code","879d2424":"code","4a0e56b4":"code","30a21017":"code","c4fa564d":"code","7bceac4b":"markdown","a141341c":"markdown","eca8fb30":"markdown","ebd50915":"markdown","e41d6795":"markdown","cbc729f1":"markdown","1d1c03e2":"markdown","1bda9e38":"markdown","3d98b6b2":"markdown","0abd6b47":"markdown","6f548146":"markdown","4d5abaac":"markdown","c10bca3b":"markdown","f63e02ab":"markdown","9bbfdecc":"markdown","078c7065":"markdown","f8654619":"markdown","4cb17581":"markdown","c4ddf920":"markdown","b594dc86":"markdown","bea268c3":"markdown","2ccbc2df":"markdown","20eee10f":"markdown","ab8e3369":"markdown","0de860ad":"markdown","64dde06a":"markdown"},"source":{"0b1cc344":"import numpy as np\nimport pandas as pd \n\nimport matplotlib.pyplot as plt\nimport seaborn as sns","d20c8b26":"%matplotlib inline","abdb8e30":"df = pd.read_csv('\/kaggle\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv')\ndf.drop(0, inplace=True)\ndf.head()","9ce67499":"df['Q3'][df['Q3'] == 'Singapore'].count()","08451ba0":"#Get the Singporeans!\ndf_sg = df[df['Q3'] == 'Singapore']","29820b23":"plt.figure(figsize=(20,3))\nplt.xticks(rotation=90)\nsns.countplot(data=df_sg, x='Q4')","f85fdd07":"df_sg = df_sg[(df_sg['Q5'] != 'Student') & (df_sg['Q5'] !='Other') & (df_sg['Q5'] !='Currently not employed')]\nplt.figure(figsize=(20,3))\nplt.xticks(rotation=90)\nsns.countplot(data=df_sg, x='Q5')","d710f8e5":"plt.figure(figsize=(20,3))\nplt.xticks(rotation=90)\nsns.countplot(data=df_sg, x='Q25')","eff3b8da":"\ndf_sg[(df_sg['Q25'] != '$0-999') | (pd.isna(df_sg['Q25']))]","fb87f674":"df_sg['Q4'] = df_sg['Q4'].apply(lambda x: x.replace(\"\u2019\",\"'\"))","12b5a438":"\ndef salary_fill_na(cols):\n    if pd.notna(cols[4]):        \n        if cols[4] != '$0-999':\n            return cols[4]\n    if pd.isna(df_sg[(df_sg['Q3'] == cols[0]) & (df_sg['Q4'] == cols[1]) & (df_sg['Q5'] == cols[2]) & (df_sg['Q6'] == cols[3]) & (df_sg['Q25'] != '$0-999')].groupby(df_sg['Q25']).count()[\"Q1\"].max()):\n        if pd.isna(df_sg[(df_sg['Q3'] == cols[0]) & (df_sg['Q4'] == cols[1]) & (df_sg['Q5'] == cols[2]) & (df_sg['Q25'] != '$0-999')].groupby(df_sg['Q25']).count()[\"Q1\"].max()):\n            if pd.isna(df_sg[(df_sg['Q3'] == cols[0]) & (df_sg['Q5'] == cols[2]) & (df_sg['Q25'] != '$0-999')].groupby(df_sg['Q25']).count()[\"Q1\"].max()):\n                return pd.isna(df_sg[(df_sg['Q5'] == cols[2]) & (df_sg['Q25'] != '$0-999')].groupby(df_sg['Q25']).count()[\"Q1\"].idxmax())\n            else:\n                return df_sg[(df_sg['Q3'] == cols[0]) & (df_sg['Q5'] == cols[2]) & (df_sg['Q25'] != '$0-999')].groupby(df_sg['Q25']).count()[\"Q1\"].idxmax()\n        else:\n            return df_sg[(df_sg['Q3'] == cols[0]) & (df_sg['Q4'] == cols[1]) & (df_sg['Q5'] == cols[2]) & (df_sg['Q25'] != '$0-999')].groupby(df_sg['Q25']).count()[\"Q1\"].idxmax()\n    else:\n        return df_sg[(df_sg['Q3'] == cols[0]) & (df_sg['Q4'] == cols[1]) & (df_sg['Q5'] == cols[2]) & (df_sg['Q6'] == cols[3]) & (df_sg['Q25'] != '$0-999')].groupby(df_sg['Q25']).count()[\"Q1\"].idxmax()","11391714":"df_sg['Q25'] = df_sg[['Q3','Q4','Q5','Q6','Q25']].apply(salary_fill_na, axis=1)","d2f79194":"\nplt.figure(figsize=(20,3))\nplt.xticks(rotation=90)\nsns.countplot(data=df_sg, x='Q25')","77ea6692":"\ndf_sg = df_sg[df_sg['Q25'] != False]","082d8f29":"def convert_q6(x):\n    if x=='20+ years':\n        return 5\n    elif x=='10-20 years':\n        return 4\n    elif x=='5-10 years':\n        return 3\n    elif x=='3-5 years':\n        return 2\n    elif x=='1-3 years':\n        return 1\n    else:\n        return 0","1561d1c9":"df_sg['Q6_code'] = df_sg['Q6'].apply(convert_q6)","9c60dbd7":"def convert_q25(cols):\n    x = cols[1]\n    if '-' in x:\n        values = x.split('-')\n        y = ''\n        for i in values:\n            for c in i:\n                if c.isdigit():\n                    y+=c\n            y+='+'\n        y = y[:-1].split('+')\n        return int(y[0]) + ((int(y[1])-int(y[0]))\/5)*cols[0]\n    else:\n        y = ''\n        for c in x:\n            if c.isdigit():\n                y+=c\n        return int(y)\n","9ca49e4a":"df_sg['Q25_code'] = df_sg[['Q6_code','Q25']].apply(convert_q25, axis=1)","8a827979":"df_sg[['Q6','Q25']].head()","e052c429":"plt.figure(figsize=(20,10))\nplt.xticks(rotation=90)\nsns.boxplot(x='Q5', y='Q25_code', hue='Q6', data=df_sg)","0ae22269":"SAVINGS_RATE = 0.20","0680099e":"def get_savings(x):\n    savings = 0\n    years = 0\n    while savings < 1000000:\n        savings+= SAVINGS_RATE*x\n        years+=1\n        #13-month bonus\n        savings+=x\/12\n        if years%5==0:    \n            #job promotion 15% increment\n            x = x*1.15\n        else:        \n            #3.5% yearly salary increment\n            x = x*1.035\n        \n    return savings","f2f6f8bf":"def can_i_be_a_millionaire_just_by_working(x):\n    savings = 0\n    years = 0\n    while savings < 1000000:\n        savings+= SAVINGS_RATE*x\n        years+=1\n        #13-month bonus\n        savings+=x\/12\n        if years%5==0: \n            #job promotion 15% increment\n            x = x*1.15\n        else:\n             #3.5% yearly salary increment\n            x = x*1.035\n        \n    return years","7a008563":"df_sg['savings'] = df_sg['Q25_code'].apply(get_savings)\ndf_sg['millionaire_years'] = df_sg['Q25_code'].apply(can_i_be_a_millionaire_just_by_working)","925d2cd5":"plt.figure(figsize=(20,10))\nplt.xticks(rotation=90)\nsns.barplot(y='millionaire_years', x='Q5', hue='Q6', data=df_sg)","1964b3eb":"working_years = {\n    '5-10 years':8, \n    '10-20 years':15, \n    '1-3 years':2,\n    'I have never written code':0, \n    '3-5 years':4, \n    '20+ years':20, \n    '< 1 years':0\n}","a2e12c84":"education_years = {\n    \"Master's degree\":6,\n    \"Bachelor's degree\":4,\n    'Doctoral degree':12,\n    'No formal education past high school':0,\n    \"Some college\/university study without earning a bachelor's degree\":2,\n    'Professional doctorate':12\n}","299864ba":"def i_am_the_millionaire(cols):\n    working_age = 21\n    working_age += working_years[cols[1]] \n    working_age += education_years[cols[0]]\n    working_age += cols[2]\n    return working_age\n    \n    ","2211d74f":"df_sg['age_to_become_a_millionaire'] = df_sg[['Q4', 'Q6', 'millionaire_years']].apply(i_am_the_millionaire, axis=1)","e9634f38":"df_sg['age_to_become_a_millionaire'].groupby(df_sg['Q5']).mean()","0fda70f4":"df_sg_million = df_sg[df_sg['age_to_become_a_millionaire'] <= 70]","149b0255":"df_sg_million","879d2424":"def i_am_the_millionaire_rd_2(cols):\n    x = cols[0].split('-')\n    return (int(x[0]) + int(x[1]))\/2 + cols[1]","4a0e56b4":"df_sg['age_to_become_a_millionaire_2'] = df_sg[['Q1', 'millionaire_years']].apply(i_am_the_millionaire_rd_2, axis=1)","30a21017":"df_sg_million_2 = df_sg[df_sg['age_to_become_a_millionaire_2'] <= 70]","c4fa564d":"df_sg_million_2","7bceac4b":"Referencing the series \"Mr.Robot\", this notebook will focus on Singaporean Kagglers and see if they still can become a millionaire even though Elliot Alderson has wiped everyone's bank account. ","a141341c":"As there is quite a lot of rows with no or 0-999 salary, will replace the values with the mode of the relevant salaries.","eca8fb30":"We will filter out those who did not manage to hit a million dollars before the retirement age of 70","ebd50915":"This time we have 71 possible millionaires!","e41d6795":"We will add the mean of the working years and the number of years it takes for the individual to reach their respective education levels to the working age of 21. <br>\nAnd then add the number of years it will take them to save a million dollars <br>","cbc729f1":"Drop 'students' and 'Currently not employed'(as we are assusming they do not have salary)\nDrop 'Other' so we can limit to the jobs available in the survey","1d1c03e2":"Education background split among the Singaporeans","1bda9e38":"We have 74 possible Singaporean millionaires even if fsociety wipes their money!","3d98b6b2":"**fsociety has done it, SG-Corp has been hacked and everyone is now penniless! Can our Singaporean Kaggle-rs still become a millionaire before retirement?**","0abd6b47":"The number of years to work before getting that million bucks","6f548146":"convert to digits, combining < 1 years and I have never written code","4d5abaac":"#That \u2019 gave me headaches!! replacing with '","c10bca3b":"Taking a look at the number of Singapore Kagglers submissions","f63e02ab":"\u201cThe 50-30-20 rule advocates splitting one's income into three categories \u2013 50% on essentials, 30% on discretionary spending, and 20% on savings or investments.\u201d<br>\nHence, we will use a savings rate of 0.2","9bbfdecc":"Bread and butter imports","078c7065":"Several assumptions made while working on this project.\n\n* The working age will be 21 (before University) (2 years of national service will not be factored into the working age for Singaporean males)\n* The retirement age be 70\n* This notebook assumes that \"I have never written code\" means < 1 years programming experience as well\n* This notebook will take the \"Years of coding experience\" as working experience\n* CPF and investments will not be factored into the calculation. #Let's just say Elliot has hacked all financial institutions as well.","f8654619":"I am sure there's a way to do both functions together and apply to the right columns\/rows. I got lazy to find out...","4cb17581":"This time i will use Q1 (the age range) and the years it takes them to save a million","c4ddf920":"Lets take a look at the boxplot of the salary ranges now","b594dc86":"**I then realised that Q1 actually tells the age range of each individual.... so once again..**","bea268c3":"The average age of the relevant fields when they finally hit that sweet million","2ccbc2df":"Remove those with no relevant salaries to reference from","20eee10f":"Convert Q25 to values according to salary range and years of working.<br><br>\n\nWe will assume that the more years of working will mean that you will be on the higher quartile of the salary range.<br>\ne.g. if salary range is 1000-5000 and,<br>\nyou have 1 year of working experience, your salary will be 1000<br>\nif you have 20 years of working experience, your salary will be 5000<br>","ab8e3369":"New salary range","0de860ad":"The goal was to fill NA and 0 to 999 dollars values with the mode of the relevant fields using data from (Q3, Q4, Q5, Q6) which are (Country, Eduaction Level, Role, Years of Experience Programming) <br>\nThe method will minimally match the job title and exclude the ones with salary ranges of \"0 to 999 dollars\"","64dde06a":"Salary ranges"}}