{"cell_type":{"7cb5b8b4":"code","d9e2e73f":"code","c9757bdb":"code","8e21daf6":"code","a8da8a81":"code","db7e39af":"code","f12c691c":"code","ec0beba0":"code","5b38fce6":"code","1aa56b6a":"code","dfcbf750":"code","89ffc93f":"code","6d47ecbd":"code","b592536a":"code","ecb6e3cb":"code","9d1699a2":"markdown","00a2882c":"markdown","38f7cd69":"markdown","77db5f7a":"markdown","f1b0fd7e":"markdown","f65a2fce":"markdown","27aff177":"markdown","82bb4757":"markdown","b922321d":"markdown","d29b9c31":"markdown","8a1d9f59":"markdown","8a015660":"markdown"},"source":{"7cb5b8b4":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as tick\nimport seaborn as sns\nfrom dask import dataframe as dd\n\ncolors_dark = [\"#313131\", '#484848', '#AEAEAE'] \n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","d9e2e73f":"df_channels = pd.read_csv(\"\/kaggle\/input\/vtuber-livechat\/channels.csv\")\ndf_superchat = pd.read_csv(\"\/kaggle\/input\/vtuber-livechat\/superchat.csv\")","c9757bdb":"def reformat_large_tick_values(tick_val, pos):\n    \"\"\"\n    Turns large tick values (in the billions, millions and thousands) such as 4500 into 4.5K and also appropriately turns 4000 into 4K (no zero after the decimal).\n    \"\"\"\n    if tick_val >= 1000000000:\n        val = round(tick_val\/1000000000, 1)\n        new_tick_format = '{:}B'.format(val)\n    elif tick_val >= 1000000:\n        val = round(tick_val\/1000000, 1)\n        new_tick_format = '{:}M'.format(val)\n    elif tick_val >= 1000:\n        val = round(tick_val\/1000, 1)\n        new_tick_format = '{:}K'.format(val)\n    elif tick_val < 1000:\n        new_tick_format = round(tick_val, 1)\n    else:\n        new_tick_format = tick_val\n\n    # make new_tick_format into a string value\n    new_tick_format = str(new_tick_format)\n    \n    # code below will keep 4.5M as is but change values such as 4.0M to 4M since that zero after the decimal isn't needed\n    index_of_decimal = new_tick_format.find(\".\")\n    \n    if index_of_decimal != -1:\n        value_after_decimal = new_tick_format[index_of_decimal+1]\n        if value_after_decimal == \"0\":\n            # remove the 0 after the decimal point since it's not needed\n            new_tick_format = new_tick_format[0:index_of_decimal] + new_tick_format[index_of_decimal+2:]\n            \n    return new_tick_format","8e21daf6":"df = df_channels.groupby(\"affiliation\").sum()[\"sub_count\"].sort_values(ascending=False)[0:5]\nmean_sub = df.mean()\n\nfig, ax = plt.subplots(figsize=(18, 8))\n\nbars = ax.bar(df.index, df.values, alpha=0.3, color=\"#8E9798\")\n\nax.set_xticks(df.index)\nax.set_xticklabels(df.index)\nax.grid(axis=\"y\", alpha=0.5)\nax.set_axisbelow(True)\nax.yaxis.set_major_formatter(tick.FuncFormatter(reformat_large_tick_values))\nax.set_xlabel(\"Agencies\", fontsize=14, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Sub Count\", fontsize=14, fontweight='bold', color=colors_dark[0])\nax.tick_params(labelsize=14)\n\nax.spines['right'].set_visible(False)\nax.spines['left'].set_visible(False)\nax.spines['top'].set_visible(False)\n\nfont = {\n    'color':  'white',\n    'weight': 'bold',\n    'size': 24,\n}\n\nax.text(\n    x=bars[0].get_x()+0.21, y=bars[0].get_height() \/ 2,\n    s=reformat_large_tick_values(bars[0].get_height(), 0),\n    fontdict=font,\n    va=\"center\",\n)\n\nax.text(\n    x=bars[1].get_x()+0.21, y=bars[1].get_height() \/ 2,\n    s=reformat_large_tick_values(bars[1].get_height(), 0),\n    fontdict=font,\n    va=\"center\",\n)\n\nline1 = ax.axhline(y=mean_sub, linestyle=\"--\", color=\"#8E9798\")\n\nax.text(\n    x=4.7, \n    y=mean_sub,\n    s=\"Average subs\",\n    backgroundcolor=\"#2A5D61\",\n    color=\"white\",\n    fontweight='bold',\n    fontsize=14\n)\n\nbars[0].set_color('#83C8CC')\nbars[0].set_alpha(1)\nbars[0].set_edgecolor(colors_dark[0])\n\nbars[1].set_color('#2A5D61')\nbars[1].set_alpha(1)\nbars[1].set_edgecolor(colors_dark[0])\n\nplt.suptitle(\"Top 5 Subscriber Count\", fontsize=18, fontweight='bold', color=colors_dark[0])\nplt.title(\"Subscriber count for top 5 V-tuber agencies, \\n we can see that Hololive and Nijisanji dominates the v-tuber market\", loc='center', x=0.52, y=1.03, fontsize=14, color=colors_dark[1])\nplt.tight_layout()\nplt.show()","a8da8a81":"df = pd.DataFrame({\"Name\" : [\"Hololive + Nijisanji\", \"PewDiePie\"], 'Subscribers' : [65500000, 109000000]})\ndf\n\nfig, ax = plt.subplots(figsize=(12, 8))\n\nbars = ax.bar(df.Name, df.Subscribers, alpha=0.3, color=\"#8E9798\")\n\nax.set_xticks(df.Name)\nax.set_xticklabels(df.Name)\nax.grid(axis=\"y\", alpha=0.5)\nax.set_axisbelow(True)\nax.yaxis.set_major_formatter(tick.FuncFormatter(reformat_large_tick_values))\nax.set_xlabel(\"Youtubers\", fontsize=14, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Sub Count\", fontsize=14, fontweight='bold', color=colors_dark[0])\nax.tick_params(labelsize=14)\n\nax.spines['right'].set_visible(False)\nax.spines['left'].set_visible(False)\nax.spines['top'].set_visible(False)\n\nfont = {\n    'color':  'white',\n    'weight': 'bold',\n    'size': 24,\n}\n\nax.text(\n    x=bars[0].get_x()+0.29, y=bars[0].get_height() \/ 2,\n    s=reformat_large_tick_values(bars[0].get_height(), 0),\n    fontdict=font,\n    va=\"center\",\n)\n\nax.text(\n    x=bars[1].get_x()+0.29, y=bars[1].get_height() \/ 2,\n    s=reformat_large_tick_values(bars[1].get_height(), 0),\n    fontdict=font,\n    va=\"center\",\n)\n\nline1 = ax.axhline(y=mean_sub, linestyle=\"--\", color=\"#8E9798\")\n\n\nbars[0].set_color('#83C8CC')\nbars[0].set_alpha(1)\nbars[0].set_edgecolor(colors_dark[0])\n\nbars[1].set_color('#2A5D61')\nbars[1].set_alpha(1)\nbars[1].set_edgecolor(colors_dark[0])\n\nplt.suptitle(\"Vtubers and PewDiePie\", fontsize=18, fontweight='bold', color=colors_dark[0])\nplt.title(\"To put it into a perspective \\n below are the subscribers count for hololive+nijisanji and PewDiePie\", loc='center', x=0.46, y=1.03, fontsize=14, color=colors_dark[1])\nplt.tight_layout()\nplt.show()","db7e39af":"df = df_channels.groupby(\"affiliation\").sum()['video_count'].sort_values(ascending=False)[0:5]\n\nmean_sub = df.mean()\n\nfig, ax = plt.subplots(figsize=(18, 8))\n\nbars = ax.bar(df.index, df.values, alpha=0.3, color=\"#8E9798\")\n\nax.set_xticks(df.index)\nax.set_xticklabels(df.index)\nax.grid(axis=\"y\", alpha=0.5)\nax.set_axisbelow(True)\nax.yaxis.set_major_formatter(tick.FuncFormatter(reformat_large_tick_values))\nax.set_xlabel(\"Agencies\", fontsize=14, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Upload Count\", fontsize=14, fontweight='bold', color=colors_dark[0])\nax.tick_params(labelsize=14)\n\nax.spines['right'].set_visible(False)\nax.spines['left'].set_visible(False)\nax.spines['top'].set_visible(False)\n\nfont = {\n    'color':  'white',\n    'weight': 'bold',\n    'size': 24,\n}\n\nax.text(\n    x=bars[0].get_x()+0.23, y=bars[0].get_height() \/ 2,\n    s=reformat_large_tick_values(bars[0].get_height(), 0),\n    fontdict=font,\n    va=\"center\",\n)\n\nax.text(\n    x=bars[1].get_x()+0.29, y=bars[1].get_height() \/ 2,\n    s=reformat_large_tick_values(bars[1].get_height(), 0),\n    fontdict=font,\n    va=\"center\",\n)\n\nline1 = ax.axhline(y=mean_sub, linestyle=\"--\", color=\"#8E9798\")\n\nax.text(\n    x=4.7, \n    y=mean_sub-1000,\n    s=\"Average\\nupload\",\n    backgroundcolor=\"#2A5D61\",\n    color=\"white\",\n    fontweight='bold',\n    fontsize=14\n)\n\nbars[0].set_color('#2A5D61')\nbars[0].set_alpha(1)\nbars[0].set_edgecolor(colors_dark[0])\n\nbars[1].set_color('#83C8CC')\nbars[1].set_alpha(1)\nbars[1].set_edgecolor(colors_dark[0])\n\nplt.suptitle(\"Top 5 Video Uploaded Count\", fontsize=18, fontweight='bold', color=colors_dark[0])\nplt.title(\"Uploads count for top 5 V-tuber agencies \\n considering the previous graph we can see that even though Hololive has the most subscriber count Nijisanji has the most uploaded content\", loc='center', x=0.512, y=1.03, fontsize=14, color=colors_dark[1])\nplt.tight_layout()\nplt.show()","f12c691c":"df1 = df_channels[df_channels.affiliation == \"Hololive\"].sort_values(\"sub_count\")[-20:]\ndf2 = df_channels[df_channels.affiliation == \"Nijisanji\"].sort_values(\"sub_count\")[-20:]\n\n\nfig, ax = plt.subplots(1, 2, figsize=(18, 14))\n\nbars1 = ax[0].barh(y=df1.name_en, width=df1.sub_count.values, edgecolor=colors_dark[0], color=\"#83C8CC\")\nbars2 = ax[1].barh(y=df2.name_en, width=df2.sub_count.values, edgecolor=colors_dark[0], color=\"#2A5D61\")\n\n\nax[0].grid(axis=\"x\", alpha=0.5)\nax[0].xaxis.set_major_formatter(tick.FuncFormatter(reformat_large_tick_values))\nax[0].set_axisbelow(True)\nax[0].tick_params(labelsize=12)\nax[0].set_title(\"Hololives top 20 v-tubers \\n Gawr Gura dominates with the most subscribers count\", loc='center', fontsize=14)\nax[0].set_xlabel(\"Subscribers\", fontsize=14, fontweight='bold', color=colors_dark[0])\nax[0].set_ylabel(\"Upload Count\", fontsize=14, fontweight='bold', color=colors_dark[0])\nax[0].legend([\"Hololive's Subscribers\"], loc='upper center', bbox_to_anchor=(0.5, -0.1), ncol=5, borderpad=1, frameon=False)\n\nax[0].spines['right'].set_visible(False)\nax[0].spines['left'].set_visible(False)\nax[0].spines['top'].set_visible(False)\n\nax[1].grid(axis=\"x\", alpha=0.5)\nax[1].xaxis.set_major_formatter(tick.FuncFormatter(reformat_large_tick_values))\nax[1].set_axisbelow(True)\nax[1].tick_params(labelsize=12)\nax[1].set_title(\"Nijisanji top 20 v-tubers\", loc='center', fontsize=14, color=colors_dark[0])\nax[1].set_xlabel(\"Subscribers\", fontsize=14, fontweight='bold', color=colors_dark[0])\nax[1].legend([\"Nijisanji's Subscribers\"], loc='upper center', bbox_to_anchor=(0.5, -0.1), ncol=5, borderpad=1, frameon=False)\n\nax[1].spines['right'].set_visible(False)\nax[1].spines['left'].set_visible(False)\nax[1].spines['top'].set_visible(False)\n\n\nplt.suptitle(\"Top 20 V-tubers on Hololive and Nijisanji \\n\", fontsize=18, fontweight='bold', color=colors_dark[0])\nplt.tight_layout()\nplt.show()","ec0beba0":"df_superchat['timestamp'] = pd.to_datetime(df_superchat['timestamp'])","5b38fce6":"day_mapping = {\n    0: \"Monday\",\n    1: \"Tuesday\", \n    2: \"Wednesday\", \n    3: \"Thursday\",\n    4: \"Friday\", \n    5: \"Saturday\",\n    6: \"Sunday\"\n}\n\n\ndays = [ 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\ndf_superchat[\"day\"] = df_superchat.timestamp.dt.dayofweek.map(day_mapping)","1aa56b6a":"pd.DataFrame({\n    \"Purchase Amount\" : [\"$1.00 - 1.99\", \"$2.00 - 4.99\", \"$5.00 - 9.99\", \"$10.00 - 19.99\", \"$20.00 - 49.99\", \"$50.00 - 99.99\" , \"$100.00 - \"],\n    \"Color\" : [\"Blue\", \"Light Blue\", \"Green\", 'Yellow', 'Orange', \"Magenta\", 'Red']\n})","dfcbf750":"superchat_color = [\"#3442C1\", '#33955A', '#49C8DA', '#CE6CB9', '#CEA76C', '#CE6C6C', '#EDFF7C']\n\n\ndf = df_superchat.groupby([\"day\", 'color']).count().reindex(level='day', labels=days).unstack('color')['id']\nmean_super = df_superchat.groupby('day').count()['id'].mean()\n\nfig, ax = plt.subplots(figsize=(14, 8))\n\nbar = df.plot(kind='bar', ax=ax, stacked=True, color=superchat_color, rot=0, edgecolor=colors_dark[0], alpha=0.8)\nline1 = ax.axhline(y=mean_super, linestyle=\"--\", color=\"#8E9798\")\n\nax.text(\n    x=6.7, \n    y=mean_super-750,\n    s=\"Average \\nsuperchats count\",\n    backgroundcolor=\"#2A5D61\",\n    color=\"white\",\n    fontweight='bold',\n    fontsize=14\n)\n\nax.grid(axis=\"y\", alpha=0.5)\nax.yaxis.set_major_formatter(tick.FuncFormatter(reformat_large_tick_values))\nax.set_axisbelow(True)\nax.tick_params(labelsize=14)\nax.set_xlabel(\"Days\", fontsize=14, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Superchats appearance\", fontsize=14, fontweight='bold', color=colors_dark[0])\nax.legend(loc='upper center', bbox_to_anchor=(0.5, -0.1), ncol=5, borderpad=2, frameon=False, fontsize=12)\n\nax.spines['right'].set_visible(False)\nax.spines['left'].set_visible(False)\nax.spines['top'].set_visible(False)\n\nplt.annotate('*data collected from 2021-03-16 to 2021-04-01', (0,0), (700,-80), fontsize=11,xycoords='axes fraction', textcoords='offset points')\nplt.suptitle(\"When Do Superchats Often Appear? \", fontsize=18, fontweight='bold', color=colors_dark[1])\nplt.title(\"It appears that superchats often appears on Tuesdan and Wednesday, with the lowest appearance is in Friday\", loc='center', x=0.59, y=1.03, fontsize=14, color=colors_dark[0])\nplt.tight_layout()\nplt.show()","89ffc93f":"currency_map = {\n    \"\u00a5\": \"JPY\", \n    'HK$' : \"HKD\", \n    'NT$': 'NTD', \n    '\u20ac' : 'EUR',\n    'MX$': 'MXN',\n    '\u00a3' :'GBP',\n    '\u20a9': 'KRW', \n    'CA$': 'CAD', \n    'NZ$' : 'NZD',\n    'A$': 'AUD', \n    'R$' : 'BRL', \n    '\u20b9' : 'INR',\n    '$' : 'USD'\n}\n\ndf_superchat = df_superchat.replace({\"currency\": currency_map})","6d47ecbd":"df = df_superchat.groupby([\"currency\", 'originAffiliation']).count().reset_index()\ndf_japan = df[df.currency == \"JPY\"].drop('currency', axis=1)[['originAffiliation', 'id']].sort_values(\"id\", ascending=False)[0:5]\n\ndf_world = df[df.currency != \"JPY\"].drop('currency', axis=1).groupby(\"originAffiliation\").sum().reset_index()\ndf_world = df_world[['originAffiliation', 'id']].sort_values(\"id\", ascending=False)[0:5]\n\nfig, ax = plt.subplots(figsize=(18, 8))\nbars1 = ax.bar(df_japan['originAffiliation'], df_japan['id'], color='#2A5D61', edgecolor=colors_dark[0])\nbars2 = ax.bar(df_world['originAffiliation'], df_world['id'] * -1, color='#83C8CC', edgecolor=colors_dark[0])\n\n\nfor bar in bars1: \n    height = bar.get_height()\n    ax.text(\n        x=bar.get_x() + 0.32, y=height+1500,\n        s=reformat_large_tick_values(bar.get_height(), 0),\n        fontsize=14, color=colors_dark[0]\n    )\n    \nfor bar in bars2: \n    height = bar.get_height()\n    ax.text(\n        x=bar.get_x() + 0.32, y=height-5000,\n        s=reformat_large_tick_values(abs(bar.get_height()), 0),\n        fontsize=14, color=colors_dark[0]\n    )\n    \nticks =  ax.get_yticks()\nax.set_yticks([-40000, -30000, -20000, -10000, 0, 10000, 20000, 30000, 40000, 50000, 60000])\nax.set_yticklabels([int(abs(tick)) for tick in ticks])\nax.grid(axis='y', alpha=0.3)\nax.set_axisbelow(True)\nax.tick_params(labelsize=14)\nax.set_xlabel(\"Agencies\", fontsize=14, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Superchats\", fontsize=14, fontweight='bold', color=colors_dark[0])\nax.legend([\"Japan\", \"Rest of World\"], loc='upper center', bbox_to_anchor=(0.5, -0.1), ncol=5, borderpad=2, frameon=False, fontsize=14)\n\nax.spines['right'].set_visible(False)\nax.spines['left'].set_visible(False)\nax.spines['top'].set_visible(False)\n\nplt.annotate('*data collected from 2021-03-16 to 2021-04-01', (0,0), (800,-80), fontsize=11,xycoords='axes fraction', textcoords='offset points')\nplt.suptitle(\"Top 5 Agencies with Superchats Count\", fontsize=18, fontweight='bold', color=colors_dark[0])\nplt.title(\"From superchats count we can see that Hololive is popular both on japan and rest of world, Nijisanji on the other hand only popular on Japan\", loc='center', x=0.5, y=1.03, fontsize=14, color=colors_dark[1])\nplt.tight_layout()\nplt.show()","b592536a":"df = df_superchat[(df_superchat.currency == \"JPY\")&(df_superchat.originAffiliation.isin([\"Nijisanji\", \"Hololive\"]))]\ndf = df.groupby('originAffiliation')['amount'].sum()\n\nfig, ax = plt.subplots(figsize=(12, 8))\n\nbars = ax.bar(x=df.index, height=df.values)\n\nfor bar in bars: \n    height = bar.get_height()\n    ax.text(\n        x=bar.get_x() + 0.28, y=height \/\/ 2,\n        s=f\"{reformat_large_tick_values(bar.get_height(), 0)} \u00a5\",\n        fontsize=24, color='white', fontweight='bold'\n    )\n    \nbars[0].set_color('#83C8CC')\nbars[0].set_alpha(1)\nbars[0].set_edgecolor(color=colors_dark[0])\n\nbars[1].set_color('#2A5D61')\nbars[1].set_alpha(1)\nbars[1].set_edgecolor(color=colors_dark[0])\n\nax.yaxis.set_major_formatter(tick.FuncFormatter(reformat_large_tick_values))\nax.set_xlabel(\"Agencies\", fontsize=14, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Superchats amount in Yen (\u00a5)\", fontsize=14, fontweight='bold', color=colors_dark[0])\nax.grid(axis='y', alpha=0.5)\nax.tick_params(labelsize=14)\nax.set_axisbelow(True)\n\nax.spines['right'].set_visible(False)\nax.spines['left'].set_visible(False)\nax.spines['top'].set_visible(False)\n\nplt.annotate('*data collected from 2021-03-16 to 2021-04-01', (0,0), (265,-80), fontsize=11,xycoords='axes fraction', textcoords='offset points')\nplt.suptitle(\"How Profitable is The V-tuber Industry?\", fontsize=18, fontweight='bold', color=colors_dark[0])\nplt.title(\"Answer? YES, keep in mind that the next chart is only in japanese Yen and also in between 2021-03-16 to 2021-04-01\", loc='center', y=1, fontsize=14, color=colors_dark[1])\nplt.tight_layout()\nplt.show()","ecb6e3cb":"df = df_superchat[(df_superchat.currency == \"USD\")&(df_superchat.originAffiliation.isin([\"Nijisanji\", \"Hololive\"]))]\ndf = df.groupby('originAffiliation')['amount'].sum()\n\nfig, ax = plt.subplots(figsize=(12, 8))\n\nbars = ax.bar(x=df.index, height=df.values, edgecolor=colors_dark[0])\n\nax.text(\n    x=bars[0].get_x() + 0.28, y=bars[0].get_height() \/\/ 2,\n    s=f\"{reformat_large_tick_values(bars[0].get_height(), 0)} $\",\n    fontsize=24, color='white', fontweight='bold'\n)\n\nax.text(\n    x=bars[1].get_x() + 0.28, y=bars[1].get_height() + 2000,\n    s=f\"{reformat_large_tick_values(bars[0].get_height(), 0)} $\",\n    fontsize=24, fontweight='bold', color=colors_dark[1]\n)\n\nbars[0].set_color('#83C8CC')\nbars[0].set_alpha(1)\nbars[0].set_edgecolor(color=colors_dark[0])\n\nbars[1].set_color('#2A5D61')\nbars[1].set_alpha(1)\nbars[1].set_edgecolor(color=colors_dark[0])\n\nax.yaxis.set_major_formatter(tick.FuncFormatter(reformat_large_tick_values))\nax.set_xlabel(\"Agencies\", fontsize=14, fontweight='bold', color=colors_dark[0])\nax.set_ylabel(\"Superchats amount in Yen ($)\", fontsize=14, fontweight='bold', color=colors_dark[0])\nax.grid(axis='y', alpha=0.5)\nax.tick_params(labelsize=14)\nax.set_axisbelow(True)\n\nax.spines['right'].set_visible(False)\nax.spines['left'].set_visible(False)\nax.spines['top'].set_visible(False)\n\nplt.annotate('*data collected from 2021-03-16 to 2021-04-01', (0,0), (265,-80), fontsize=11,xycoords='axes fraction', textcoords='offset points')\nplt.suptitle(\"How Profitable is The V-tuber Industry?\", fontsize=18, fontweight='bold', color=colors_dark[0])\nplt.title(\"How about USD?\", loc='center', y=1, fontsize=14, color=colors_dark[1])\nplt.tight_layout()\nplt.show()","9d1699a2":"# Who Got The Most Superchats?\n\nso, in the next chart i divide the chart into two groups, the first one belongs to the Japanese superchats and Overseas superchats (outside japan)\n\nwe can see that hololive is popular both on Japan and overseas on the other hand nijisanji is popular on Japan\n\n","00a2882c":"# Soo.. how profitable is the Vtubers Industry?\n\nso on the next chart we will see how profitable the vtuber industry, we use Yen and USD superchats to show how profitable it is.\n\nKeep in mind that i only use Hololive and Nijisanji to show how profitable it is","38f7cd69":"# Superchats!\n\nSo in youtube streaming service there is so called Superchats. With this superchat viewers can support (or show their loves \ud83d\ude01) to the streamers by sending them gifts in a form of money! In this superchats also, viewers can send a message to them\n\nThe superchat itself is divided into multiple color, each color represent the amount of money given. Below are the price list of superchats\n\nsource: https:\/\/thetechieguy.com\/a-chat-message-sent-to-your-favorite-youtuber-could-cost-you-500\/\n","77db5f7a":"# Conclusion\n\nso thats is, that is the world of vtubers. I hope you enjoy my visualization.\n\nif you have any critics please feel free to comment cheers!","f1b0fd7e":"# Lets Compare Hololive's Streamers and Nijisanji's\n\nFor you who use youtube a lot there's a big chance that you have heard about Gawr Gura. For you those who don't know, Gawr Gura is one of Hololive streamers. She has the most subscribers count on hololive.\n\nOn Nijisanji side, the one who has the most subscribers is Kuzuha!\n\nYou might wondering why Hololive is more popular than Nijisansi, one of the reason is that in Hololive there are English streamers! so in Hololive the streamers can be divided into groups that represent their origin such as HololiveEN for hololive English, HololiveID for hololive Indonesia, etc\n","f65a2fce":"# When Do Superchats Often Appear?\n\nWith this we can also see when people mostly watching vtubers","27aff177":"# How Popular is Vtuber?\n\nBefore we going any further i need to explain that in the world of Vtubers, a vtuber might stream under an agency or stream independently. In these agencies consist of many streamers that was chosen by the agency\n\nTwo of the most notable agencies is Hololive and Nijisanji, together they got about 65.5 million subscriber.","82bb4757":"# What is V-tubers?\n\nV-tubers, or Virtual Youtuber is a virtual streamers or entertainer, what makes it different from other normal streamers is that they use a virtual avatar, most commonly an anime avatar, instead of normal faces. According to wikipedia by 2020 there are more than 10,000 active V-tubers. Vtubers such as Kizuna AI, Usada Pekora, Kaede, and many more is very much popular.\n\nSo for those who dont know about the world of V-tubers, in this notebook i will try to explain and enlighten you about the V-tubers world! especially Hololive and Nijisanji\n","b922321d":"![406902-PD1PVJ-239.jpg](https:\/\/imajiugm.com\/wp-content\/uploads\/2020\/09\/IMG-6-SEP-Hirafaz-VTuber.jpg)","d29b9c31":"# How Many Videos Uploaded?\n\nA lot. Here we can see that Nijisansi have about 52.6K uploaded videos while hololive have 16K uploaded videos. This happened because unlike hololive, Nijisanji has a lot more streamers than Hololive\n\nSo yeah, theres a lot of content in the world of VTubers","8a1d9f59":"![406902-PD1PVJ-239.jpg](https:\/\/i1.wp.com\/thetechieguy.com\/wp-content\/uploads\/2017\/02\/youtube-cost.jpg)","8a015660":"To put it into a perspective i add pewdiepie subscribers as a comparator. If we only count hololive and nijisanji subscribers combined we can see that, Vtubers is really popular considering that Vtubers is relatively new in the youtube industry"}}