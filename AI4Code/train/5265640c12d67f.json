{"cell_type":{"5923c3d9":"code","6be2a0e1":"code","34c13537":"code","5fe0b78c":"code","796bb76b":"code","99aa0158":"code","ead19a3e":"code","df817264":"code","bc122337":"code","2d4e807a":"code","beb87d59":"code","0bf4976a":"code","3f12eb56":"code","7a238aa5":"code","5e30f0da":"code","b0cd872e":"code","82f3120d":"code","0f60a8a9":"code","bbac1f31":"markdown","0f13580f":"markdown","eaa3040f":"markdown","10b0de1b":"markdown","051238a3":"markdown","3f7c56b8":"markdown","69442229":"markdown","143d0f10":"markdown","0cccdc05":"markdown"},"source":{"5923c3d9":"# Numbers and data imports\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Machine learning tools\nfrom sklearn import linear_model\nfrom sklearn.model_selection import train_test_split\n\n# Plotting setup\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns # better plotting if needed\nplt.style.use('seaborn-whitegrid')\n# Set Matplotlib defaults\nplt.rc('figure', autolayout=True)\nplt.rc('axes', labelweight='bold', labelsize='large',\n       titleweight='bold', titlesize=18, titlepad=10)\nplt.rc('animation', html='html5')\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        input = os.path.join(dirname, filename)\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6be2a0e1":"data = pd.read_csv(input)\ndata.describe()","34c13537":"cleaning = data[['Rooms', 'Price', 'BuildingArea', 'YearBuilt', 'Lattitude', 'Longtitude']]\ncleaning = cleaning[cleaning.BuildingArea.notnull()]\ncleaning","5fe0b78c":"# Remove more than 5 rooms.\ncleaning = cleaning[cleaning.Rooms < 5]\ncleaning = cleaning[cleaning.BuildingArea < 3000]\ncleaning = cleaning[cleaning.BuildingArea < 1400]\ncleaning = cleaning[cleaning.YearBuilt > 1875] # Convert YearBuilt to date after some cleanup, like remove house built in 1196!\ncleaning['YearBuilt'] = pd.to_datetime(cleaning['YearBuilt'], format='%Y')  \nprint(cleaning)","796bb76b":"sns.scatterplot(data = cleaning, x = \"BuildingArea\", y = \"Price\")\n","99aa0158":"# Checking individual room plots in a grid\ngrid = sns.FacetGrid(cleaning, col = \"Rooms\", hue = \"Rooms\")\ngrid.map(sns.scatterplot, \"BuildingArea\", \"Price\")\ngrid.add_legend()\nplt.show()","ead19a3e":"fig = plt.figure()\nax = fig.add_subplot(111, projection = '3d')\n\nx = cleaning['BuildingArea']\ny = cleaning['Rooms']\nz = cleaning['Price']\n\nax.set_xlabel(\"BuildingArea\")\nax.set_ylabel(\"Rooms\")\nax.set_zlabel(\"Price\")\n\nax.scatter(x, y, z, c = y)\n\nplt.show()","df817264":"sns.histplot(data=cleaning, x=\"YearBuilt\")\n","bc122337":"# Checking individual room plots in a grid\ngrid = sns.FacetGrid(cleaning, col = \"Rooms\", hue = \"Rooms\")\ngrid.map(sns.histplot, \"YearBuilt\", \"Price\")\ngrid.add_legend()\nplt.show()","2d4e807a":"# Checking individual room plots in a grid\ngrid = sns.FacetGrid(cleaning, col = \"Rooms\", hue = \"Rooms\")\ngrid.map(sns.histplot, \"Price\")\ngrid.add_legend()\nplt.show()","beb87d59":"# Checking individual room plots in a grid\ngrid = sns.FacetGrid(cleaning, col = \"Rooms\", hue = \"Rooms\")\ngrid.map(sns.histplot, \"BuildingArea\")\ngrid.add_legend()\nplt.show()","0bf4976a":"# Location analysis\nsns.scatterplot(data = cleaning, x = \"Longtitude\", y = \"Lattitude\", hue=\"Price\")\n","3f12eb56":"# Create LR model for 1 bedroom values\nb1_data = cleaning[cleaning.Rooms == 1]\n# b1_x = b1_data['BuildingArea'].values.reshape((-1, 1))\n# b1_y = b1_data['Price'].values\n# print(b1_x, b1_y)\n\nX_train, X_test, y_train, y_test = train_test_split(b1_data[['BuildingArea']], b1_data.Price, test_size=0.33, random_state=10)\nprint(y_train)","7a238aa5":"# Linear Regression for 1 bedroom\nreg = linear_model.LinearRegression()\nreg.fit(X_train, y_train)","5e30f0da":"print(\"Score for training is: %f\" % reg.score(X_train, y_train))\nprint(\"Score for test set is: %f\" % reg.score(X_test, y_test))","b0cd872e":"# Checking integrity. Predict all values and map with actuals!\ny_hat = reg.predict(b1_data[['BuildingArea']])\nprint(len(b1_data[['BuildingArea']]))\nprint(len(y_hat))","82f3120d":"sns.scatterplot( x = y_hat, y = b1_data.Price)","0f60a8a9":"bed1_res = b1_data.Price - y_hat # residual = observed - predicted\nsns.scatterplot( x = y_hat, y = bed1_res)","bbac1f31":"## Analyzing with year of build\nNoticing a fan shaped cluster makes me quention if there's another variable that's effecting the price of houses. How about year built?\n\n\n","0f13580f":"## Observation on YearBuilt\nThere are slighly more number of houses built between 1950 to 1960, and then 2000 onwards.","eaa3040f":"## 1 Bedroom Price Model\nBuilding a regression model and checking R-sq value for fit.\nAim would be to find out if Price vs BuildArea is a linear relationshop or not (in the given data set).","10b0de1b":"## Data Cleanup and hypothesis\n\n### Objective\n\nAssess the linear relationship between price and area of homes (2 variables) part by part for number of bedrooms. Assumption is that the model will be different for 1,2,3 and 4 bedroom appartments. Finally, compare all the models for varius bedroom sizes.\n\n### Hypothesis\n\n1. The linear relationship between 1,2,3 and 4 bedroom are the same.\n2. Price vs BuildArea is a linear relationship (in the given data set).\n\n### Ref\nhttps:\/\/blog.uwgb.edu\/bansalg\/statistics-data-analytics\/linear-regression\/what-are-the-four-assumptions-of-linear-regression\/\nhttps:\/\/gawron.sdsu.edu\/python_for_ss\/course_core\/book_draft\/visualization\/visualizing_geographic_data.html\nhttps:\/\/www.qualtrics.com\/support\/stats-iq\/analyses\/regression-guides\/interpreting-residual-plots-improve-regression\/","051238a3":"# Hypothesis Check\n\n1. There is no linear relationship between size and price.\n2. There is no relationship between 1,2,3 and 4 bedroom sizes.","3f7c56b8":"# Examining Predicted vs. Residual i.e., The Residual Plot","69442229":"# This does not seem good obviously\n# Checking accuracy with Observed vs. Predicted\n","143d0f10":"# Analyzing with location (lat, lon) plot\nThere's a sense that location has an impact on price too and is not seen in the current scatterplot.","0cccdc05":"## Observation\nYes, there is significant price change across Melbourne.\nIn any case, this isn't a geo analysis."}}