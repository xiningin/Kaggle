{"cell_type":{"6f38774f":"code","89f97aba":"code","dac32373":"code","48f69988":"code","3fe36fe3":"code","0ea49370":"code","77fce0f2":"code","7c84cd34":"code","88b51f26":"code","28eb251d":"code","f6c796e0":"code","71fd47e5":"code","c56394ea":"code","7cea4c71":"code","29f018a0":"code","b5a864a7":"code","e578d109":"code","470128e1":"code","e5c48f98":"code","9383dc9c":"code","47eecbf7":"code","69291a05":"code","a16f36ad":"code","52dd1a85":"code","91c1c7fe":"code","ae290c42":"code","e4fe4412":"code","c1d07a7e":"code","f3f8d7d7":"code","613cd951":"code","5cbda64c":"code","e3dd5278":"code","e43b2fe2":"code","9eab8734":"code","1f600662":"markdown","4f661454":"markdown","25b435fa":"markdown","7ef00ed3":"markdown","89678ba5":"markdown","bd8641f1":"markdown","12a79bc1":"markdown","ceedaf35":"markdown","35d432d9":"markdown","fe8d8952":"markdown","c0c6b30c":"markdown","1724bd23":"markdown","69b177cb":"markdown","938642a6":"markdown","759d2e74":"markdown","7358a7ae":"markdown","c4f8e050":"markdown","e2b19ac0":"markdown","15120ddc":"markdown","5ade4bed":"markdown","cb2e85b9":"markdown"},"source":{"6f38774f":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('darkgrid')","89f97aba":"\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","dac32373":"df = pd.read_csv('..\/input\/pokemon\/Pokemon.csv', index_col=False)\n\n# We read pokemon.csv through 'Pandas'.read_csv(x) function\n# param: x is the path of the csv file\n# Then we assign dataframe as df(name can differ)","48f69988":"df.head()\n# .head() gives you the first 5 rows of the dataframe","3fe36fe3":"df.tail()\n# .tail() gives you the last 5 rows of the dataframe","0ea49370":"df.sample(10) # You can change to number to your personal choise\n# .sample() provides random rows of data ","77fce0f2":"df.info()","7c84cd34":"df.describe()","88b51f26":"df_leg =df[df['Legendary']==True]  #Showing the legendary pokemons","28eb251d":"df_leg_1 = df_leg[df_leg['Generation'] == 1]\ndf_leg_1\n# First Generation Legendary Pokemons","f6c796e0":"df_leg_2 = df_leg[df_leg['Generation'] == 2]\ndf_leg_2\n# Second Generation Legendary Pokemons","71fd47e5":"df_strongest = df[df['Attack'] > 170]\ndf_strongest","c56394ea":"df_fastest = df[df['Speed'] > 150]\ndf_fastest","7cea4c71":"a=df.groupby(['Generation','Type 1']).count().reset_index()\na=a[['Generation','Type 1','Total']]\na=a.pivot('Generation','Type 1','Total')\na[['Water','Fire','Grass','Dragon','Normal','Rock','Flying','Electric']].plot(color=['b','r','g','#FFA500','brown','#6666ff','#001012','y'],marker='o')\nfig=plt.gcf()\nfig.set_size_inches(12,6)\nplt.show()","29f018a0":"sns.lmplot(x='Attack', y='Defense', data=df, line_kws={'color': 'red'})","b5a864a7":"plt.figure(figsize=(15,10))\nsns.lmplot(x='Attack', y='Defense', data=df, fit_reg=False, hue='Legendary')","e578d109":"# Correlation map\nplt.rcParams['figure.figsize']=(15,8)\nheat_map = sns.heatmap(df[[ 'Name', 'Type 1', 'Type 2', 'Total', 'HP', 'Attack', 'Defense',\n       'Sp. Atk', 'Sp. Def', 'Speed', 'Generation', 'Legendary']].corr(), annot = True, linewidths=1, cmap='Blues')\nheat_map.set_title(label='Correlation Map', fontsize=20)\nheat_map;\n","470128e1":"plt.figure(figsize=(15,10))\nsns.boxplot(data=df)","e5c48f98":"stats_df = df.drop(['Total', 'Legendary', 'Generation', '#'], axis=1)\nplt.figure(figsize=(15,10))\nsns.boxplot(data=stats_df)","9383dc9c":"stats_df","47eecbf7":"f, ax = plt.subplots(figsize=(10,8))\nx = df['Attack']\nax = sns.distplot(x, bins=10, color=\"tab:red\")\nplt.show()\n# This is some kind of histogram grap about Attack","69291a05":"f, ax = plt.subplots(figsize=(10,8))\nx = df['Defense']\nax = sns.distplot(x, bins=10, color=\"tab:green\")\nplt.show()\n# This is some kind of histogram grap about Defense","a16f36ad":"plt.figure(figsize=(15,10))\nsns.kdeplot(df.Attack, df.Defense)\nplt.show()","52dd1a85":"pkmn_type_colors = ['#78C850', # Grass\n                    '#F08030', # Fire\n                    '#6890F0', # Water\n                    '#A8B820', # Bug\n                    '#A8A878', # Normal\n                    '#A040A0', # Poison\n                    '#F8D030', # Electric\n                    '#E0C068', # Ground\n                    '#EE99AC', # Fairy\n                    '#C03028', # Figthing\n                    '#F85888', # Psychic\n                    '#B8A038', # Rock\n                    '#705898', # Ghost\n                    '#98D8D8', # Ice\n                    '#7038F8', # Dragon\n                   \n                   ]","91c1c7fe":"plt.figure(figsize=(15,10))\nsns.violinplot(x = 'Type 1', y='Attack', data=df, palette=pkmn_type_colors)\n","ae290c42":"plt.figure(figsize=(15,10))\nsns.swarmplot(x='Type 1', y='Attack', data=df, palette=pkmn_type_colors)\n","e4fe4412":"plt.figure(figsize=(15,10))\nsns.swarmplot(x='Type 1', y='Defense', data=df, palette=pkmn_type_colors)\n","c1d07a7e":"#kill.race.dropna(inplace = True)\nlabels = df['Type 1'].value_counts().index\nexplode = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\nsizes = df['Type 1'].value_counts().values\n\n# visual\nplt.figure(figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=pkmn_type_colors, autopct='%1.1f%%')\nplt.title('Pokemon According to Type-1',color = 'blue',fontsize = 15)","f3f8d7d7":"#df_type2 = df['Type 2'].dropna(inplace = True)\nlabels = df['Type 2'].value_counts().index\nexplode = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\nsizes = df['Type 2'].value_counts().values\n\n# visual\nplt.figure(figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors = pkmn_type_colors, autopct='%1.1f%%')\nplt.title('Pokemon According to Type-2',color = 'blue',fontsize = 15)","613cd951":"plt.figure(figsize=(15,10))\nsns.countplot(x='Type 1', data=df, palette=pkmn_type_colors)\nplt.xticks(rotation = 45)\nplt.show()","5cbda64c":"plt.figure(figsize=(15,10))\nsns.countplot(x='Type 2', data=df, palette=pkmn_type_colors)\nplt.xticks(rotation = 45)\nplt.show()","e3dd5278":"plt.figure(figsize=(15,10))\nsns.jointplot(x='Attack', y='Defense', kind='hex', data=df , color= 'green')\nplt.show()","e43b2fe2":"plt.figure(figsize=(15,8))\nsns.jointplot(x=\"Sp. Atk\", y=\"Sp. Def\", data=df,kind =\"hex\",color = 'red'); #comparing special attack and speed","9eab8734":"plt.figure(figsize=(15,10))\nsns.pairplot(data=df, hue = 'Generation')\nplt.show()","1f600662":"# Thank you for reading\n\n\n# If you enjoyed my work, please consider upvoting\n\n\n# More of my work:\n\n**Stroke EDA and Classification(%94.60 Accuracy)**\n\n- https:\/\/www.kaggle.com\/umutalpaydn\/stroke-eda-and-classification-94-60-accuracy\n\n**Heart-Disease Analysis & Classification**\n\n- https:\/\/www.kaggle.com\/umutalpaydn\/heart-disease-analysis-classification\n\n**VideoGameSales EDA**\n\n- https:\/\/www.kaggle.com\/umutalpaydn\/videogamesales-eda\n\n**Iris Classification KNN & Logistic Regression**\n\n- https:\/\/www.kaggle.com\/umutalpaydn\/iris-classification-knn-logistic-regression","4f661454":"<a id=\"dist\"><\/a>\n# Dist Plot","25b435fa":"Most Seen First Types of Pokemons\n* Water\n* Normal\n* Grass\n* Bug\n* Psychic","7ef00ed3":"Most Seen Second Types of Pokemons\n* Flying\n* Ground\n* Poison\n* Psychic\n* Fighting","89678ba5":"<a id=\"heatmap\"><\/a>\n# Heatmap","bd8641f1":"![Screenshot_2.png](attachment:Screenshot_2.png)","12a79bc1":"<a id=\"swarm\"><\/a>\n# Swarmplot","ceedaf35":"<a id=\"violin\"><\/a>\n# Violinplot","35d432d9":"**You can get the color codes of pokemon types from <a href= https:\/\/bulbapedia.bulbagarden.net\/wiki\/Category:Type_color_templates> Bulbapedia <\/a> to help us create a new color palette**","fe8d8952":"<a id=\"pair\"><\/a>\n# Pair Plot","c0c6b30c":"**In this notebook, I will use Seaborn library to visualize pokemon data**\n\n**Seaborn is a Python data visualization library based on matplotlib. It provides a high-level interface for drawing attractive and informative statistical graphics.**\n\n**You can visit the doc from <a href=\"https:\/\/seaborn.pydata.org\/index.html\" >here<\/a> to get more help if you need from**","1724bd23":"<a id=\"kde\"><\/a>\n# Kde Plot","69b177cb":"**Strongest Pokemon is : MewtwoMega Mewtwo X**","938642a6":"**Fastest Pokemon is : DeoxysSpeed Forme**","759d2e74":"**Table of Contents**\n* Plots\n\n    - [Lmplot](#lm)\n    - [Heatmap](#heatmap)\n    - [Boxplot](#box)\n    - [Distplot](#dist)\n    - [Kdeplot](#kde)\n    - [Violinplot](#violin)\n    - [Swarmplot](#swarm)\n    - [PieChart](#pie)\n    - [Countplot](#count)\n    - [Jointplot](#joint)\n    - [Pairplot](#pair)","7358a7ae":"<a id=\"lm\"><\/a>\n# Lmplot","c4f8e050":"# GOTTA CATCH'EM ALL","e2b19ac0":"<a id=\"joint\"><\/a>\n# Joint Plot","15120ddc":"<a id=\"count\"><\/a>\n# Count Plot","5ade4bed":"<a id=\"box\"><\/a>\n# Box Plot","cb2e85b9":"<a id=\"pie\"><\/a>\n# Pie Chart"}}