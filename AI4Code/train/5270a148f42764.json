{"cell_type":{"0924f6c0":"code","d4951ecb":"code","a5288304":"code","2a3b9951":"code","cf60a24d":"code","d9d8ab59":"code","e1ed42c9":"code","7a77ad23":"code","34cc2af6":"code","f3539354":"code","d28a4ffe":"code","68bb978c":"code","99f10c9e":"code","69d45389":"code","efc9b155":"code","64f7f8d4":"code","de0cf1c9":"code","3fc2a6bd":"code","bfa6d7af":"code","5c3840fe":"code","3cdc3ec7":"code","a0d0cd64":"code","eb580536":"code","52a75a22":"code","6fe6bc14":"code","8455ce94":"code","3c9ae6ca":"code","1aa84953":"code","f35a91cf":"code","440145a5":"code","82a07c40":"code","8e1d7f8c":"code","aadbb7c4":"code","66d4091a":"code","33914aab":"code","8390de15":"code","0cd13071":"code","4fc94beb":"code","dd75d501":"code","5feec98a":"code","d0728bdc":"code","e1c77d51":"code","140e1da1":"code","a43074ed":"code","e0d71a9e":"code","b74be9db":"code","291f3f81":"code","7875dea4":"code","5f4f13be":"code","6d7a754f":"code","c0657476":"code","e4299140":"code","ea393bb6":"code","ca4e2f44":"code","29bfbb96":"code","3408f168":"markdown","30e49dfb":"markdown","069b3f4c":"markdown","9e0895d8":"markdown","7756ac9d":"markdown","7f9a351e":"markdown","76eec34f":"markdown","9f9a2741":"markdown","59a8ae30":"markdown","33747d10":"markdown","9d96656e":"markdown","d9943bc1":"markdown","d7d0bca0":"markdown","71d466e6":"markdown","2215367a":"markdown","02f5f0b9":"markdown","9581bfb5":"markdown","36ccb19c":"markdown","8d28bbe8":"markdown","d3be9a13":"markdown","824f4d9c":"markdown"},"source":{"0924f6c0":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","d4951ecb":"train_df=pd.read_csv('..\/input\/cleanedtitanic\/train_df_cleaned.csv')\ntrain_df.head()","a5288304":"train_df.drop('Unnamed: 0',axis=1, inplace=True)","2a3b9951":"train_df.head()","cf60a24d":"test_df=pd.read_csv('..\/input\/cleanedtitanic\/test_df_cleaned.csv')\ntest_df.head()","d9d8ab59":"test_df.drop('Unnamed: 0',axis=1, inplace=True)","e1ed42c9":"test_df.head()","7a77ad23":"train_df.info()","34cc2af6":"train_df.isnull().sum()","f3539354":"test_df.info()","d28a4ffe":"test_df.isnull().sum()","68bb978c":"sns.heatmap(data=train_df.corr(),annot=True,cmap=\"Greens\")\n","99f10c9e":"sns.kdeplot(data=train_df['Age'])\n","69d45389":"sns.boxplot(data=train_df, x='Survived', y='Age')\n","efc9b155":"sns.scatterplot(data=train_df, x='Age', y='Fare', hue='Survived',palette='Purples')\n","64f7f8d4":"y_train = train_df['Survived']\ntrain_df.drop('Survived', axis = 1,inplace=True)","de0cf1c9":"y_test_df=pd.read_csv('..\/input\/cleanedtitanic\/gender_submission.csv')","3fc2a6bd":"y_test=y_test_df['Survived']","bfa6d7af":"train_num_df=train_df[['Age','Fare','SibSp', 'Parch']]\ntrain_obj_df=train_df[['Pclass_2','Pclass_3', 'Sex_male', 'Embarked_Q','Embarked_S','not_alone_1']]","5c3840fe":"test_num_df=test_df[['Age','Fare','SibSp', 'Parch']]\ntest_obj_df=test_df[['Pclass_2','Pclass_3', 'Sex_male', 'Embarked_Q','Embarked_S','not_alone_1']]","3cdc3ec7":"from sklearn.preprocessing import StandardScaler","a0d0cd64":"names = train_num_df.columns\n\nscaler= StandardScaler()\nscaler.fit(train_num_df)\ntrain_num_df= scaler.transform(train_num_df)\ntest_num_df= scaler.transform(test_num_df)\n\ntrain_num_df = pd.DataFrame(train_num_df, columns= names)\n# train_num_df.index = np.arange(1, len(train_num_df) + 1)\n\ntest_num_df = pd.DataFrame(test_num_df, columns= names)\n# test_num_df.index = np.arange(892, 892 + len(test_num_df))","eb580536":"# train_obj_df.index += 1 \n# test_obj_df.index += 892","52a75a22":"train_scaled_df = pd.concat([train_num_df, train_obj_df], axis=1)\ntest_scaled_df = pd.concat([test_num_df, test_obj_df], axis=1)\ntrain_scaled_df","6fe6bc14":"test_scaled_df","8455ce94":"train_scaled_df.isnull().sum()","3c9ae6ca":"test_scaled_df.isnull().sum()","1aa84953":"from sklearn.neighbors import KNeighborsClassifier\n\nknn_model = KNeighborsClassifier(n_neighbors=3) #n_neighbors = k\n\nknn_model.fit(train_scaled_df, y_train)","f35a91cf":"y_pred= knn_model.predict(test_scaled_df)","440145a5":"y_pred","82a07c40":"pd.DataFrame({'Y_Test':y_test, 'Y_Pred': y_pred})","8e1d7f8c":"from sklearn.metrics import classification_report, confusion_matrix, accuracy_score,plot_confusion_matrix","aadbb7c4":"accuracy_score(y_test, y_pred)","66d4091a":"confusion_matrix(y_test, y_pred)","33914aab":"plot_confusion_matrix(knn_model, test_scaled_df, y_test)\n","8390de15":"print(classification_report(y_test, y_pred))","0cd13071":"test_error_rate= []\n\n\nfor k in range (1, 30):\n    knn_model = KNeighborsClassifier(n_neighbors=k)\n    knn_model.fit(train_scaled_df, y_train)\n    \n    y_pred_test = knn_model.predict(test_scaled_df)\n    \n    test_error=1- accuracy_score(y_test, y_pred_test)\n    test_error_rate.append(test_error)","4fc94beb":"test_error_rate","dd75d501":"plt.figure(figsize=(12, 6))\nplt.plot(range(1,30), test_error_rate, label='Test Error')\nplt.legend()\nplt.ylabel('Error Rate')\nplt.xlabel('K Value')","5feec98a":"scaler= StandardScaler()\nknn= KNeighborsClassifier()\nknn.get_params().keys()\n","d0728bdc":"operations= [('scaler', scaler), ('knn', knn)]","e1c77d51":"from sklearn.pipeline import Pipeline","140e1da1":"pipe= Pipeline(operations)","a43074ed":"from sklearn.model_selection import GridSearchCV","e0d71a9e":"k_values= list(range(1, 20))","b74be9db":"param_grid= {'knn__n_neighbors': k_values}","291f3f81":"full_cv_classifier= GridSearchCV(pipe, param_grid, cv=5, scoring='accuracy')","7875dea4":"full_cv_classifier.fit(train_df, y_train)","5f4f13be":"full_cv_classifier.best_estimator_.get_params()","6d7a754f":"full_cv_classifier.cv_results_.keys()","c0657476":"scaler= StandardScaler()\nknn10=KNeighborsClassifier(n_neighbors=10)\noperations= [('scaler', scaler), ('knn10',knn10)]","e4299140":"pipe= Pipeline(operations)","ea393bb6":"pipe.fit(train_df, y_train)","ca4e2f44":"pipe_pred= pipe.predict(test_df)","29bfbb96":"print(classification_report(y_test, pipe_pred))","3408f168":"##  Final Model","30e49dfb":"## Data Visualisation","069b3f4c":"## Elbow Method for Choosing Reasonable K Values\n\n","9e0895d8":"## Read Datasets and Check out the Data","7756ac9d":"![](https:\/\/miro.medium.com\/max\/875\/0*jqxx3-dJqFjXD6FA)","7f9a351e":"#### Predict","76eec34f":"#### In my previous notebook I talked about data visualization\u060c data cleaning and...\n#### we used the cleaned data in the previous notebook here\n#### Also, using the regression model, we predicted with 0.93% accuracy that the people who survived the sinking of the Titanic,\n*  Go **[HERE](https:\/\/www.kaggle.com\/zahrajai\/titanic-logistic-regression)** to access the above","9f9a2741":"## Creating a Pipeline to find K value\n\n","59a8ae30":"## Import Libraries","33747d10":"**It seems like K = 9 is the best**\n\n","9d96656e":"**As I said before, I used the cleaned data from the previous notebook\nI also made this dataset public([cleanedtitanic](https:\/\/www.kaggle.com\/zahrajai\/cleanedtitanic)) and you can use it and share it**","d9943bc1":"## Build the model","d7d0bca0":"### Working of KNN Algorithm\nK-nearest neighbors (KNN) algorithm uses \u2018feature similarity\u2019 to predict the values of new datapoints which further means that the new data point will be assigned a value based on how closely it matches the points in the training set. We can understand its working with the help of following steps \u2212\n\n**Step 1**\n\n\u2212 For implementing any algorithm, we need dataset. So during the first step of KNN, we must load the training as well as test data.\n\n**Step 2** \n\n\u2212 Next, we need to choose the value of K i.e. the nearest data points. K can be any integer.\n\n**Step 3** \n\n\u2212 For each point in the test data do the following \u2212\n\n**3.1** \n\n\u2212 Calculate the distance between test data and each row of training data with the help of any of the method namely: Euclidean, Manhattan or Hamming distance. The most commonly used method to calculate distance is Euclidean.\n\n**3.2** \n\n\u2212 Now, based on the distance value, sort them in ascending order.\n\n**3.3** \n\n\u2212 Next, it will choose the top K rows from the sorted array.\n\n**3.4** \n\n\u2212 Now, it will assign a class to the test point based on most frequent class of these rows.\n\n**Step 4 \u2212 End**","71d466e6":"## Scaling Data","2215367a":"#### Train","02f5f0b9":"## Evaluate model","9581bfb5":"## Data preparation","36ccb19c":"### Test And Train set","8d28bbe8":"## What\u2019s KNN?\n\n\n**K-nearest neighbors (KNN) algorithm is a type of supervised ML algorithm which can be used for both classification as well as regression predictive problems. However, it is mainly used for classification predictive problems in industry.**","d3be9a13":"*  Now in this notebook we use K-nearest neighbors (KNN) to build a model to predict same thing.","824f4d9c":"### The prediction Value VS Actual Value of Test Data"}}