{"cell_type":{"bb161efd":"code","efb41293":"code","052ac714":"code","092b4414":"code","d15c13b2":"code","e038ac5c":"code","73e0815b":"code","274d30fe":"code","792e7ed7":"code","615d1540":"code","f956bc78":"code","f024b619":"code","7b577614":"code","5e4fedc4":"code","9b2f5e5e":"code","7cf0fff7":"code","51c171d1":"code","19436fbf":"code","7628b153":"code","d1f5dfd8":"code","4f741727":"code","0bd3a04c":"code","aa613942":"code","368ee040":"code","2fa7a6a1":"code","a77f4768":"code","9ddc79a5":"code","7b306828":"code","b2af3985":"code","d6e18a3b":"code","4fd877af":"code","011b61ac":"code","594c957e":"code","1ab72180":"code","f9ab90c6":"code","53d2ac3e":"code","fe54ba57":"code","6143120d":"code","e6327047":"code","125b83e3":"code","691ed46c":"code","9a889486":"code","ef1a3146":"code","824d386d":"code","b212a43f":"code","1299cafc":"code","58680700":"code","51357fbd":"code","7546c2b2":"code","647029a4":"markdown","f51c05f0":"markdown","77623888":"markdown","36386ebb":"markdown","40aef970":"markdown","8f37b5df":"markdown","c91e07cb":"markdown","976beb87":"markdown","cf5b89e6":"markdown","60c801ff":"markdown","4186c9f1":"markdown","b14e6eaa":"markdown","43175500":"markdown","8967bd14":"markdown"},"source":{"bb161efd":"\nimport pandas as pd\nimport plotly.offline as pyo\nimport plotly.express as px\nimport plotly.graph_objects as go\npd.options.plotting.backend = 'plotly'","efb41293":"sales1 = pd.read_csv('..\/input\/sample-sales-data\/sales_data_sample.csv', encoding = 'unicode_escape')\nsales1.head(3)","052ac714":"compa1 = sales1.groupby(['PRODUCTLINE'])['QUANTITYORDERED'].sum().reset_index()\ncompa1","092b4414":"compa2 = sales1.groupby('PRODUCTLINE')['PRICEEACH'].mean().reset_index()\ncompa2","d15c13b2":"bar_data = go.Bar(\n          x = compa1['PRODUCTLINE'],\n          y = compa1['QUANTITYORDERED'],\n          name = 'Quantity Ordered',\n          text = compa1['QUANTITYORDERED'],\n          texttemplate = '%{text:.2s}',\n          textposition = 'inside',\n          yaxis = 'y1',\n          marker=dict(\n                 color=compa1['QUANTITYORDERED'],\n                 colorscale='phase',\n                 showscale=False),\n         customdata=compa1[['PRODUCTLINE', 'QUANTITYORDERED']],\n         hovertemplate =\n          '<br><b>Product<\/b>: %{customdata[0]}<br><extra><\/extra>'+\n          '<b>Q.Ordered<\/b>: %{customdata[1]:,0f}'\n)\n\nline_data = go.Scatter(\n          x = compa2['PRODUCTLINE'],\n          y = compa2['PRICEEACH'],\n          name = 'Price of Product',\n          text = compa2['PRICEEACH'],\n          mode = 'markers + lines',\n          yaxis = 'y2',\n          marker=dict(color='#bd3786'),\n          customdata=compa2[['PRODUCTLINE', 'PRICEEACH']],\n          hovertemplate =\n          '<br><b>Product<\/b>: %{customdata[0]}<br><extra><\/extra>'+\n          '<b>Price<\/b>: $%{customdata[1]:0f}'\n    \n)    \n\n\n\ndata = [bar_data, line_data]\n\nlayout = go.Layout(\n             title={\n                'text': 'Quantity ordered and price of each product ',\n                'y': 0.93,\n                'x': 0.5,\n                'xanchor': 'center',\n                'yanchor': 'top'},\n             titlefont={'family': 'Oswald',\n                        'color': 'rgb(230, 34, 144)',\n                        'size': 25},\n\n             hovermode='x',\n\n             xaxis=dict(title='<b>Name of Product<\/b>',\n                        color='rgb(230, 34, 144)',\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor='rgb(104, 204, 104)',\n                        linewidth=2,\n                        ticks='outside',\n                        tickfont=dict(\n                            family='Arial',\n                            size=12,\n                            color='rgb(17, 37, 239)'\n                        )\n\n                ),\n\n             yaxis=dict(title='<b>Quantity Ordered<\/b>',\n                        color='rgb(230, 34, 144)',\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor='rgb(104, 204, 104)',\n                        linewidth=2,\n                        ticks='outside',\n                        tickfont=dict(\n                           family='Arial',\n                           size=12,\n                           color='rgb(17, 37, 239)'\n                        )\n\n                ),\n             yaxis2=dict(title='<b>Price of Each Product ($)<\/b>', overlaying='y', side='right',\n                         color='rgb(230, 34, 144)',\n                         showline=True,\n                         showgrid=False,\n                         showticklabels=True,\n                         linecolor='rgb(104, 204, 104)',\n                         linewidth=2,\n                         ticks='outside',\n                         tickfont=dict(\n                           family='Arial',\n                           size=12,\n                           color='rgb(17, 37, 239)'\n                         )\n\n                 ),\n\n             legend=dict(title='',\n                         x=0.3,\n                         y=0.95,\n                         orientation='h',\n                         bgcolor='rgba(255, 255, 255, 0)',\n                         traceorder=\"normal\",\n                         font=dict(\n                              family=\"sans-serif\",\n                              size=12,\n                              color='#000000')),\n\n                         legend_title_font_color=\"green\", #this code is available only for legend title\n                         uniformtext_minsize=15,\n                         uniformtext_mode='hide',\n\n                 )\n\n\n\nfigure1 = go.Figure(data=data, layout=layout)\n\nfigure1.show()\n","e038ac5c":"compa3 = sales1.groupby(['PRODUCTLINE'])[['QUANTITYORDERED', 'SALES']].sum().reset_index()\ncompa3","73e0815b":"bar_data1 = go.Bar(\n          x = compa3['PRODUCTLINE'],\n          y = compa3['QUANTITYORDERED'],\n          name = 'Quantity Ordered',\n          text = compa3['QUANTITYORDERED'],\n          texttemplate = '%{text:.2s}',\n          textposition = 'inside',\n          yaxis = 'y1',\n          offsetgroup=1,\n          marker=dict(color='#1E6B99'),\n         customdata=compa3[['PRODUCTLINE', 'QUANTITYORDERED', 'SALES']],\n         hovertemplate =\n          '<br><b>Product<\/b>: %{customdata[0]}<br><extra><\/extra>'+\n          '<b>Q.Ordered<\/b>: %{customdata[1]:,.0f}'\n)\n\nbar_data2 = go.Bar(\n          x = compa3['PRODUCTLINE'],\n          y = compa3['SALES'],\n          name = 'Sales',\n          text = compa3['SALES'],\n          texttemplate = '%{text:.2s}',\n          textposition = 'auto',\n          yaxis = 'y2',\n          offsetgroup=2,\n          marker=dict(color='#B45513'),\n          customdata=compa3[['PRODUCTLINE', 'QUANTITYORDERED', 'SALES']],\n          hovertemplate =\n          '<br><b>Product<\/b>: %{customdata[0]}<br><extra><\/extra>'+\n          '<b>Sales<\/b>: $%{customdata[2]:,.0f}'\n    \n)    \n\n\n\ndata = [bar_data1, bar_data2]\n\nlayout = go.Layout(\n             title={\n                'text': 'Sales of ordered quantity',\n                'y': 0.93,\n                'x': 0.5,\n                'xanchor': 'center',\n                'yanchor': 'top'},\n             titlefont={'family': 'Oswald',\n                        'color': 'rgb(230, 34, 144)',\n                        'size': 25},\n\n             hovermode='x',\n             height=600,\n\n             xaxis=dict(title='<b>Name of Product<\/b>',\n                        color='rgb(230, 34, 144)',\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor='rgb(104, 204, 104)',\n                        linewidth=2,\n                        ticks='outside',\n                        tickfont=dict(\n                            family='Arial',\n                            size=12,\n                            color='rgb(17, 37, 239)'\n                        )\n\n                ),\n\n             yaxis=dict(title='<b>Quantity Ordered<\/b>',\n                        color='rgb(230, 34, 144)',\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor='rgb(104, 204, 104)',\n                        linewidth=2,\n                        ticks='outside',\n                        tickfont=dict(\n                           family='Arial',\n                           size=12,\n                           color='rgb(17, 37, 239)'\n                        )\n\n                ),\n             yaxis2=dict(title='<b>Sales ($)<\/b>', overlaying='y', side='right',\n                         color='rgb(230, 34, 144)',\n                         showline=True,\n                         showgrid=False,\n                         showticklabels=True,\n                         linecolor='rgb(104, 204, 104)',\n                         linewidth=2,\n                         ticks='outside',\n                         tickfont=dict(\n                           family='Arial',\n                           size=12,\n                           color='rgb(17, 37, 239)'\n                         )\n\n                 ),\n\n             legend=dict(title='',\n                         x=0.3,\n                         y=0.95,\n                         orientation='h',\n                         bgcolor='rgba(255, 255, 255, 0)',\n                         traceorder=\"normal\",\n                         font=dict(\n                              family=\"sans-serif\",\n                              size=12,\n                              color='#000000')),\n\n                         legend_title_font_color=\"green\", #this code is available only for legend title\n                         uniformtext_minsize=15,\n                         uniformtext_mode='hide',\n\n                 )\n\n\n\nfigure2 = go.Figure(data=data, layout=layout)\n\nfigure2.show()\n","274d30fe":"compa4 = sales1.groupby('STATUS')['PRODUCTLINE'].count()\ncompa4","792e7ed7":"Cancelled = sales1.loc[sales1['STATUS'] == 'Cancelled'].count()[0]\nCancelled","615d1540":"Disputed = sales1.loc[sales1['STATUS'] == 'Disputed'].count()[0]\nDisputed","f956bc78":"In_Process = sales1.loc[sales1['STATUS'] == 'In Process'].count()[0]\nIn_Process","f024b619":"On_Hold = sales1.loc[sales1['STATUS'] == 'On Hold'].count()[0]\nOn_Hold","7b577614":"Resolved = sales1.loc[sales1['STATUS'] == 'Resolved'].count()[0]\nResolved","5e4fedc4":"Shipped = sales1.loc[sales1['STATUS'] == 'Shipped'].count()[0]\nShipped","9b2f5e5e":"labels = ['Cancelled', 'Disputed', 'In Process', 'On Hold', 'Resolved', 'Shipped']\nvalues = [Cancelled, Disputed, In_Process, On_Hold, Resolved, Shipped]\n\n\nfigure = go.Figure(data=[go.Pie(labels=labels, values=values,\n                               \n                \n                hoverinfo='label+value+percent',\n                textinfo='label+percent',\n                textfont=dict(size=13),\n                insidetextorientation='radial',\n                           \n)])\n\nfigure.show()","7cf0fff7":"compa5 = sales1.groupby(['YEAR_ID'])[['SALES', 'QUANTITYORDERED']].sum().reset_index()\ncompa5.head()","51c171d1":"bar_data1 = go.Bar(\n          x = compa5['YEAR_ID'],\n          y = compa5['SALES'],\n          name = 'Sales',\n          text = compa5['SALES'],\n          texttemplate = '%{text:.2s}',\n          textposition = 'inside',\n          yaxis = 'y1',\n          marker=dict(color=' #7F8C8D'),\n          customdata=compa5[['YEAR_ID', 'SALES', 'QUANTITYORDERED']],\n          hovertemplate =\n          '<br><b>Year<\/b>: %{customdata[0]}<br><extra><\/extra>'+\n          '<b>Sales<\/b>: $%{customdata[1]:,.0f}'\n)\n\nline_data2 = go.Scatter(\n          x = compa5['YEAR_ID'],\n          y = compa5['QUANTITYORDERED'],\n          name = 'Quantity Ordered',\n          text = compa5['QUANTITYORDERED'],\n          mode = 'markers + lines',\n          yaxis = 'y2',\n          marker=dict(color='#DC7633 '),\n          customdata=compa5[['YEAR_ID', 'SALES', 'QUANTITYORDERED']],\n          hovertemplate =\n          '<br><b>Year<\/b>: %{customdata[0]}<br><extra><\/extra>'+\n          '<b>Quantity Ordered<\/b>: %{customdata[2]:,.0f}'\n    \n)    \n\n\n\ndata = [bar_data1, line_data2]\n\nlayout = go.Layout(\n             title={\n                'text': 'Yearly Sales and Quantity Ordered',\n                'y': 0.93,\n                'x': 0.5,\n                'xanchor': 'center',\n                'yanchor': 'top'},\n             titlefont={'family': 'Oswald',\n                        'color': 'rgb(230, 34, 144)',\n                        'size': 25},\n\n             hovermode='x',\n             height=550,\n\n             xaxis=dict(title='<b>Year<\/b>',\n                        tick0=0,\n                        dtick=1,\n                        color='rgb(230, 34, 144)',\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor='rgb(104, 204, 104)',\n                        linewidth=2,\n                        ticks='outside',\n                        tickfont=dict(\n                            family='Arial',\n                            size=12,\n                            color='rgb(17, 37, 239)'\n                        )\n\n                ),\n\n             yaxis=dict(title='<b>Total Sales ($)<\/b>',\n                        color='rgb(230, 34, 144)',\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor='rgb(104, 204, 104)',\n                        linewidth=2,\n                        ticks='outside',\n                        tickfont=dict(\n                           family='Arial',\n                           size=12,\n                           color='rgb(17, 37, 239)'\n                        )\n\n                ),\n             yaxis2=dict(title='<b>Total Quantity Ordered<\/b>', overlaying='y', side='right',\n                         color='rgb(230, 34, 144)',\n                         showline=True,\n                         showgrid=False,\n                         showticklabels=True,\n                         linecolor='rgb(104, 204, 104)',\n                         linewidth=2,\n                         ticks='outside',\n                         tickfont=dict(\n                           family='Arial',\n                           size=12,\n                           color='rgb(17, 37, 239)'\n                         )\n\n                 ),\n\n             legend=dict(title='Trend',\n                         x=0.8,\n                         y=0.95,\n                         orientation='v',\n                         bgcolor='rgba(255, 255, 255, 0)',\n                         traceorder=\"normal\",\n                         font=dict(\n                              family=\"sans-serif\",\n                              size=12,\n                              color='#000000')),\n\n                         legend_title_font_color=\"green\", #this code is available only for legend title\n                         uniformtext_minsize=15,\n                         uniformtext_mode='hide',\n\n                 )\n\n\n\nfigure2 = go.Figure(data=data, layout=layout)\n\nfigure2.show()\n","19436fbf":"monthly_sales = sales1.groupby(['YEAR_ID','MONTH_ID'])['SALES'].sum().reset_index()\nmonthly_sales.head(3)","7628b153":"year_2003 = monthly_sales[monthly_sales['YEAR_ID'] == 2003]\nyear_2003","d1f5dfd8":"year_2004 = monthly_sales[monthly_sales['YEAR_ID'] == 2004]","4f741727":"year_2005 = monthly_sales[monthly_sales['YEAR_ID'] == 2005]","0bd3a04c":"data_2003 = go.Scatter(\n                    x = year_2003['MONTH_ID'],\n                    y = year_2003['SALES'],\n                    name = '2003',\n                    mode = 'markers + lines',\n                    customdata=year_2003[['YEAR_ID', 'MONTH_ID', 'SALES']],\n                    hovertemplate =\n                    '<br><b>Year<\/b>: %{customdata[0]}<br><extra><\/extra>'+\n                    '<b>Month<\/b>: %{customdata[1]}'+\n                    '<br><b>Sales<\/b>: $%{customdata[2]:,.0f}<\/br>'\n)\n\ndata_2004 = go.Scatter(\n                    x = year_2004['MONTH_ID'],\n                    y = year_2004['SALES'],\n                    name = '2003',\n                    mode = 'markers + lines',\n                    customdata=year_2004[['YEAR_ID', 'MONTH_ID', 'SALES']],\n                    hovertemplate =\n                    '<br><b>Year<\/b>: %{customdata[0]}<br><extra><\/extra>'+\n                    '<b>Month<\/b>: %{customdata[1]}'+\n                    '<br><b>Sales<\/b>: $%{customdata[2]:,.0f}<\/br>'\n)\n\ndata_2005 = go.Scatter(\n                    x = year_2005['MONTH_ID'],\n                    y = year_2005['SALES'],\n                    name = '2003',\n                    mode = 'markers + lines',\n                    customdata=year_2005[['YEAR_ID', 'MONTH_ID', 'SALES']],\n                    hovertemplate =\n                    '<br><b>Year<\/b>: %{customdata[0]}<br><extra><\/extra>'+\n                    '<b>Month<\/b>: %{customdata[1]}'+\n                    '<br><b>Sales<\/b>: $%{customdata[2]:,.0f}<\/br>'\n)\n\n\ndata = [data_2003, data_2004, data_2005]\n\nlayout = go.Layout(\n             title={\n                'text': 'Monthly Sales',\n                'y': 0.93,\n                'x': 0.5,\n                'xanchor': 'center',\n                'yanchor': 'top'},\n             titlefont={'family': 'Oswald',\n                        'color': 'rgb(230, 34, 144)',\n                        'size': 25},\n\n             hovermode='x',\n             height=600,\n\n             xaxis=dict(title='<b>Month<\/b>',\n                        tick0=0,\n                        dtick=1,\n                        color='rgb(230, 34, 144)',\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor='rgb(104, 204, 104)',\n                        linewidth=2,\n                        ticks='outside',\n                        tickfont=dict(\n                            family='Arial',\n                            size=12,\n                            color='rgb(17, 37, 239)'\n                        )\n\n                ),\n\n             yaxis=dict(title='<b>Sales<\/b>',\n                        color='rgb(230, 34, 144)',\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor='rgb(104, 204, 104)',\n                        linewidth=2,\n                        ticks='outside',\n                        tickfont=dict(\n                           family='Arial',\n                           size=12,\n                           color='rgb(17, 37, 239)'\n                        )\n\n                ),\n\n             legend=dict(title='',\n                         x=0.3,\n                         y=0.95,\n                         orientation='h',\n                         bgcolor='rgba(255, 255, 255, 0)',\n                         traceorder=\"normal\",\n                         font=dict(\n                              family=\"sans-serif\",\n                              size=12,\n                              color='#000000')),\n\n                         legend_title_font_color=\"green\", #this code is available only for legend title\n#                          uniformtext_minsize=15,\n#                          uniformtext_mode='hide',\n\n                 )\n\n\n\nfigure2 = go.Figure(data=data, layout=layout)\n\nfigure2.show()\n","aa613942":"monthly_sales['GROWTH RATE'] = monthly_sales['SALES'].pct_change()\nmonthly_sales.head(3)","368ee040":"year_2003_g = monthly_sales[monthly_sales['YEAR_ID'] == 2003]\nyear_2003_g.head(3)","2fa7a6a1":"year_2004_g = monthly_sales[monthly_sales['YEAR_ID'] == 2004]","a77f4768":"year_2005_g = monthly_sales[monthly_sales['YEAR_ID'] == 2005]","9ddc79a5":"bar_2003 = go.Bar(\n          x = year_2003['MONTH_ID'],\n          y = year_2003['SALES'],\n          name = '2003',\n          marker = dict(color='rgb(240, 128, 128)'),\n          yaxis = 'y1',\n          customdata=year_2003[['YEAR_ID', 'MONTH_ID', 'SALES']],\n                    hovertemplate =\n                    '<br><b>Year<\/b>: %{customdata[0]}<br><extra><\/extra>'+\n                    '<b>Month<\/b>: %{customdata[1]}'+\n                    '<br><b>Sales<\/b>: $%{customdata[2]:,.0f}<\/br>'\n)\n\nbar_2004 = go.Bar(\n          x = year_2004['MONTH_ID'],\n          y = year_2004['SALES'],\n          name = '2004',\n           marker = dict(color='rgb(239, 11, 173)'),\n          yaxis = 'y1',\n          customdata=year_2004[['YEAR_ID', 'MONTH_ID', 'SALES']],\n                    hovertemplate =\n                    '<br><b>Year<\/b>: %{customdata[0]}<br><extra><\/extra>'+\n                    '<b>Month<\/b>: %{customdata[1]}'+\n                    '<br><b>Sales<\/b>: $%{customdata[2]:,.0f}<\/br>'\n)\n\nbar_2005 = go.Bar(\n          x = year_2005['MONTH_ID'],\n          y = year_2005['SALES'],\n          name = '2005',\n          marker = dict(color='rgb(11, 180, 239)'),\n          yaxis = 'y1',\n          customdata=year_2005[['YEAR_ID', 'MONTH_ID', 'SALES']],\n                    hovertemplate =\n                    '<br><b>Year<\/b>: %{customdata[0]}<br><extra><\/extra>'+\n                    '<b>Month<\/b>: %{customdata[1]}'+\n                    '<br><b>Sales<\/b>: $%{customdata[2]:,.0f}<\/br>'\n)\n\ndata_g_2003 = go.Scatter(\n                    x = year_2003_g['MONTH_ID'],\n                    y = year_2003_g['GROWTH RATE'],\n                    name = '2003',\n                    mode = 'markers + lines',\n                    customdata=year_2003_g[['YEAR_ID', 'MONTH_ID', 'GROWTH RATE']],\n                    hovertemplate =\n                    '<br><b>Year<\/b>: %{customdata[0]}<br><extra><\/extra>'+\n                    '<b>Month<\/b>: %{customdata[1]}'+\n                    '<br><b>Growth Rate<\/b>: %{customdata[2]:,.2f}<\/br>',\n                    yaxis = 'y2',\n                    marker = dict(color='rgb(33, 47, 61)'),\n                    line=dict(dash='dash')\n)\n\ndata_g_2004 = go.Scatter(\n                    x = year_2004_g['MONTH_ID'],\n                    y = year_2004_g['GROWTH RATE'],\n                    name = '2004',\n                    mode = 'markers + lines',\n                    customdata=year_2004_g[['YEAR_ID', 'MONTH_ID', 'GROWTH RATE']],\n                    hovertemplate =\n                    '<br><b>Year<\/b>: %{customdata[0]}<br><extra><\/extra>'+\n                    '<b>Month<\/b>: %{customdata[1]}'+\n                    '<br><b>Growth Rate<\/b>: %{customdata[2]:,.2f}<\/br>',\n                    yaxis = 'y2',\n                    marker = dict(color='rgb(11, 239, 204)'),\n                    line=dict(dash='dash')\n)\n\ndata_g_2005 = go.Scatter(\n                    x = year_2005_g['MONTH_ID'],\n                    y = year_2005_g['GROWTH RATE'],\n                    name = '2005',\n                    mode = 'markers + lines',\n                    customdata=year_2005_g[['YEAR_ID', 'MONTH_ID', 'GROWTH RATE']],\n                    hovertemplate =\n                    '<br><b>Year<\/b>: %{customdata[0]}<br><extra><\/extra>'+\n                    '<b>Month<\/b>: %{customdata[1]}'+\n                    '<br><b>Growth Rate<\/b>: %{customdata[2]:,.2f}<\/br>',\n                     yaxis = 'y2',\n                     marker = dict(color='rgb(11, 87, 239)'),\n                     line=dict(dash='dash')\n)\n\ndata = [bar_2003, bar_2004, bar_2005, data_g_2003, data_g_2004, data_g_2005]\n\nlayout = go.Layout(\n             title={\n                'text': 'Actual Sales and Growth Rate',\n                'y': 0.93,\n                'x': 0.5,\n                'xanchor': 'center',\n                'yanchor': 'top'},\n             titlefont={'family': 'Oswald',\n                        'color': 'rgb(230, 34, 144)',\n                        'size': 25},\n\n             hovermode='x',\n             height=600,\n\n             xaxis=dict(title='<b>Month<\/b>',\n                        tick0=0,\n                        dtick=1,\n                        color='rgb(230, 34, 144)',\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor='rgb(104, 204, 104)',\n                        linewidth=2,\n                        ticks='outside',\n                        tickfont=dict(\n                            family='Arial',\n                            size=12,\n                            color='rgb(17, 37, 239)'\n                        )\n\n                ),\n\n             yaxis=dict(title='<b>Actual Sales<\/b>',\n                        color='rgb(230, 34, 144)',\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor='rgb(104, 204, 104)',\n                        linewidth=2,\n                        ticks='outside',\n                        tickfont=dict(\n                           family='Arial',\n                           size=12,\n                           color='rgb(17, 37, 239)'\n                        )\n\n                ),\n             yaxis2=dict(title='<b>Growth Rate<\/b>', overlaying='y', side='right',\n                         color='rgb(230, 34, 144)',\n                         showline=True,\n                         showgrid=False,\n                         showticklabels=True,\n                         linecolor='rgb(104, 204, 104)',\n                         linewidth=2,\n                         ticks='outside',\n                         tickfont=dict(\n                           family='Arial',\n                           size=12,\n                           color='rgb(17, 37, 239)'\n                         )\n\n                 ),\n\n             legend=dict(title='',\n                         x=0.3,\n                         y=0.95,\n                         orientation='h',\n                         bgcolor='rgba(255, 255, 255, 0)',\n                         traceorder=\"normal\",\n                         font=dict(\n                              family=\"sans-serif\",\n                              size=12,\n                              color='#000000')),\n\n                         legend_title_font_color=\"green\", #this code is available only for legend title\n                         uniformtext_minsize=15,\n                         uniformtext_mode='hide',\n\n                 )\n\n\n\nfigure2 = go.Figure(data=data, layout=layout)\n\nfigure2.show()\n\n\n\n          ","7b306828":"deal = sales1.groupby(['COUNTRY', 'DEALSIZE'])['SALES'].count().reset_index()\ndeal.head()","b2af3985":"small = sales1.loc[sales1['DEALSIZE'] == 'Small'].count()[0]\nsmall","d6e18a3b":"medium = sales1.loc[sales1['DEALSIZE'] == 'Medium'].count()[0]","4fd877af":"large = sales1.loc[sales1['DEALSIZE'] == 'Large'].count()[0]","011b61ac":"labels = ['Small', 'Medium', 'Large']\nvalues = [small, medium, large]\ncolors = ['#E67E22 ','#FF00FF', '#CD5C5C']\n\nfigure = go.Figure(data=[go.Pie(labels=labels, values=values,\n                               \n                marker=dict(colors=colors),\n                hoverinfo='label+value+percent',\n                textinfo='label+value',\n                textfont=dict(size=13),\n                insidetextorientation='radial',\n                           \n)])\n\nfigure.show()","594c957e":"top_countries = sales1.groupby(['COUNTRY'])[['SALES','QUANTITYORDERED']].sum().sort_values(by=['SALES'], ascending=False).nlargest(10, columns=['SALES']).reset_index()\ntop_countries","1ab72180":"bar_data = go.Bar(\n          x = top_countries['SALES'],\n          y = top_countries['COUNTRY'],\n          text = top_countries['SALES'],\n          texttemplate = '%{text:.2s}',\n          textposition = 'inside',\n          marker=dict(\n                 color=top_countries['SALES'],\n                 colorscale='portland',\n                 showscale=False),\n          orientation='h',\n          customdata=top_countries[['QUANTITYORDERED', 'COUNTRY', 'SALES']],\n          hovertemplate =\n          '<br><b>Country<\/b>: %{y}<br><extra><\/extra>'+\n          '<b>Sales<\/b>: $%{x:,.0f}'+\n          '<br><b>Quantity Ordered<\/b>: %{customdata[0]:,.0f}<br>'\n          \n          \n)\n\nlayout = go.Layout(\n    title={\n                'text': 'Top 10 Countries',\n                'y': 0.93,\n                'x': 0.5,\n                'xanchor': 'center',\n                'yanchor': 'top'},\n             titlefont={'family': 'Oswald',\n                        'color': 'rgb(230, 34, 144)',\n                        'size': 25},\n\n             hovermode='closest',\n             height=600,\n\n             xaxis=dict(title='<b>Sales<\/b>',\n                        color='rgb(230, 34, 144)',\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor='rgb(104, 204, 104)',\n                        linewidth=2,\n                        ticks='outside',\n                        tickfont=dict(\n                            family='Arial',\n                            size=12,\n                            color='rgb(17, 37, 239)'\n                        )\n\n                ),\n\n             yaxis=dict(title='<b>Country<\/b>',\n                        autorange='reversed',\n                        color='rgb(230, 34, 144)',\n                        showline=True,\n                        showgrid=False,\n                        showticklabels=True,\n                        linecolor='rgb(104, 204, 104)',\n                        linewidth=2,\n                        ticks='outside',\n                        tickfont=dict(\n                           family='Arial',\n                           size=12,\n                           color='rgb(17, 37, 239)'\n                        )\n\n                ),\n    \n            uniformtext_minsize=12,\n            uniformtext_mode='hide'\n\n                  \n\n)\n\nfigure2 = go.Figure(data=bar_data, layout=layout)\n\nfigure2.show()\n\n\n","f9ab90c6":"monthly_customer = sales1.groupby(['YEAR_ID','MONTH_ID'])['CUSTOMERNAME'].nunique().reset_index()\nmonthly_customer.head(3)","53d2ac3e":"year_2003_cus = monthly_customer[monthly_customer['YEAR_ID'] == 2003]\nyear_2003_cus.head(3)","fe54ba57":"year_2004_cus = monthly_customer[monthly_customer['YEAR_ID'] == 2004]","6143120d":"year_2005_cus = monthly_customer[monthly_customer['YEAR_ID'] == 2005]","e6327047":"cus_data1 = go.Bar(\n          x = year_2003_cus['MONTH_ID'],\n          y = year_2003_cus['CUSTOMERNAME'],\n          name = '2003',\n          text = year_2003_cus['CUSTOMERNAME'],\n          texttemplate = '%{text:,.0f}',\n          textposition = 'outside',\n          marker = dict(color='rgb(108, 34, 230)'),\n          customdata=year_2003_cus['YEAR_ID'],\n          hovertemplate =\n          '<br><b>Year<\/b>: %{customdata}<br><extra><\/extra>'+\n          '<b>Month<\/b>: %{x:,.0f}'+\n          '<br><b>Customer<\/b>: %{y:,.0f}<br>',\n          \n          \n)\n\ncus_data2 = go.Bar(\n          x = year_2004_cus['MONTH_ID'],\n          y = year_2004_cus['CUSTOMERNAME'],\n          name = '2004',\n          text = year_2004_cus['CUSTOMERNAME'],\n          texttemplate = '%{text}',\n          textposition = 'outside',\n          marker = dict(color='rgb(34, 150, 230)'),\n          customdata=year_2004_cus['YEAR_ID'],\n          hovertemplate =\n          '<br><b>Year<\/b>: %{customdata}<br><extra><\/extra>'+\n          '<b>Month<\/b>: %{x:,.0f}'+\n          '<br><b>Customer<\/b>: %{y:,.0f}<br>'\n          \n          \n          \n)\n\ncus_data3 = go.Bar(\n          x = year_2005_cus['MONTH_ID'],\n          y = year_2005_cus['CUSTOMERNAME'],\n          name = '2005',\n          text = year_2005_cus['CUSTOMERNAME'],\n          texttemplate = '%{text:,.0f}',\n          textposition = 'outside',\n          marker = dict(color='rgb(34, 230, 117)'),\n          customdata=year_2005_cus['YEAR_ID'],\n          hovertemplate =\n          '<br><b>Year<\/b>: %{customdata}<br><extra><\/extra>'+\n          '<b>Month<\/b>: %{x:,.0f}'+\n          '<br><b>Customer<\/b>: %{y:,.0f}<br>'\n          \n          \n)\n\ndata = [cus_data1, cus_data2, cus_data3]\n\nlayout = go.Layout(\n             barmode='group',\n             title={\n                'text': 'Monthly Active Customer',\n                'y': 0.93,\n                'x': 0.5,\n                'xanchor': 'center',\n                'yanchor': 'top'},\n             titlefont={'family': 'Oswald',\n                        'color': 'rgb(230, 34, 144)',\n                        'size': 25},\n\n             hovermode='x',\n    \n             xaxis=dict(title='<b>Month<\/b>',\n                        tick0=0,\n                        dtick=1,\n                        color='rgb(230, 34, 144)',\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor='rgb(104, 204, 104)',\n                        linewidth=2,\n                        ticks='outside',\n                        tickfont=dict(\n                            family='Arial',\n                            size=12,\n                            color='rgb(17, 37, 239)'\n                        )\n\n                ),\n\n             yaxis=dict(title='<b>Customer<\/b>',\n                        color='rgb(230, 34, 144)',\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor='rgb(104, 204, 104)',\n                        linewidth=2,\n                        ticks='outside',\n                        tickfont=dict(\n                           family='Arial',\n                           size=12,\n                           color='rgb(17, 37, 239)'\n                        )\n\n                ),\n             \n\n             legend=dict(title='',\n                         x=0.25,\n                         y=0.95,\n                         orientation='h',\n                         bgcolor='rgba(255, 255, 255, 0)',\n                         traceorder=\"normal\",\n                         font=dict(\n                              family=\"sans-serif\",\n                              size=12,\n                              color='#000000')),\n\n                         legend_title_font_color='green', #this code is available only for legend title\n                         uniformtext_minsize=1,\n                         uniformtext_mode='hide',\n\n                 )\n\n\n\nfigure2 = go.Figure(data=data, layout=layout)\n\nfigure2.show()\n","125b83e3":"average_sales = sales1.groupby(['YEAR_ID','MONTH_ID'])[['SALES', 'QUANTITYORDERED']].mean().reset_index()\naverage_sales.head(3)","691ed46c":"ave_2003 = average_sales[average_sales['YEAR_ID'] == 2003]\nave_2003.head(3)","9a889486":"ave_2004 = average_sales[average_sales['YEAR_ID'] == 2004]","ef1a3146":"ave_2005 = average_sales[average_sales['YEAR_ID'] == 2005]","824d386d":"data_2003 = go.Scatter(\n   x = ave_2003['MONTH_ID'],\n   y = ave_2003['SALES'],\n   name = '2003',\n   mode = 'markers + lines',\n   customdata=ave_2003[['YEAR_ID', 'QUANTITYORDERED']],\n   hovertemplate =\n          '<br><b>Year<\/b>: %{customdata[0]}<br><extra><\/extra>'+\n          '<b>Month<\/b>: %{x}'+\n          '<br><b>Av.Sales<\/b>: %{y:.1f}<br>'+\n          '<b>Av.Quantity Ordered<\/b>: %{customdata[1]:,.2f}',\n            line=dict(dash='dash')\n   \n)\n\ndata_2004 = go.Scatter(\n   x = ave_2004['MONTH_ID'],\n   y = ave_2004['SALES'],\n   name = '2004',\n   mode = 'markers + lines',\n   customdata=ave_2004[['YEAR_ID', 'QUANTITYORDERED']],\n   hovertemplate =\n          '<br><b>Year<\/b>: %{customdata[0]}<br><extra><\/extra>'+\n          '<b>Month<\/b>: %{x}'+\n          '<br><b>Av.Sales<\/b>: %{y:.1f}<br>'+\n          '<b>Av.Quantity Ordered<\/b>: %{customdata[1]:,.2f}',\n            line=dict(dash='dash')\n   \n)\n\ndata_2005 = go.Scatter(\n   x = ave_2005['MONTH_ID'],\n   y = ave_2005['SALES'],\n   name = '2005',\n   mode = 'markers + lines',\n   customdata=ave_2005[['YEAR_ID', 'QUANTITYORDERED']],\n   hovertemplate =\n          '<br><b>Year<\/b>: %{customdata[0]}<br><extra><\/extra>'+\n          '<b>Month<\/b>: %{x}'+\n          '<br><b>Av.Sales<\/b>: %{y:.1f}<br>'+\n          '<b>Av.Quantity Ordered<\/b>: %{customdata[1]:,.2f}'\n            \n)\n\ndata = [data_2003, data_2004, data_2005]\n\nlayout = go.Layout(title={\n                'text': 'Average Sales per Month',\n                'y': 0.93,\n                'x': 0.5,\n                'xanchor': 'center',\n                'yanchor': 'top'},\n             titlefont={'family': 'Oswald',\n                        'color': 'rgb(230, 34, 144)',\n                        'size': 25},\n\n             hovermode='x',\n    \n             xaxis=dict(title='<b>Month<\/b>',\n                        tick0=0,\n                        dtick=1,\n                        color='rgb(230, 34, 144)',\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor='rgb(104, 204, 104)',\n                        linewidth=2,\n                        ticks='outside',\n                        tickfont=dict(\n                            family='Arial',\n                            size=12,\n                            color='rgb(17, 37, 239)'\n                        )\n\n                ),\n\n             yaxis=dict(title='<b>Average Sales<\/b>',\n                        color='rgb(230, 34, 144)',\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor='rgb(104, 204, 104)',\n                        linewidth=2,\n                        ticks='outside',\n                        tickfont=dict(\n                           family='Arial',\n                           size=12,\n                           color='rgb(17, 37, 239)'\n                        )\n\n                ),\n             \n\n             legend=dict(title='',\n                         x=0.35,\n                         y=0.95,\n                         orientation='h',\n                         bgcolor='rgba(255, 255, 255, 0)',\n                         traceorder=\"normal\",\n                         font=dict(\n                              family=\"sans-serif\",\n                              size=12,\n                              color='#000000')),\n\n                         legend_title_font_color='green', #this code is available only for legend title\n#                          uniformtext_minsize=1,\n#                          uniformtext_mode='hide',\n\n                 )\n\n\n\nfigure2 = go.Figure(data=data, layout=layout)\n\nfigure2.show()\n","b212a43f":"product_sales1 = sales1.groupby(['COUNTRY','PRODUCTLINE'])[['QUANTITYORDERED', 'SALES']].sum().reset_index()\nproduct_sales1","1299cafc":"data = go.Scatter(\n  x = product_sales1['QUANTITYORDERED'],\n  y = product_sales1['SALES'],\n  mode = 'markers',\n  customdata=product_sales1[['COUNTRY', 'PRODUCTLINE']],\n  hovertemplate =\n          '<br><b>Country<\/b>: %{customdata[0]}<br><extra><\/extra>'+\n          '<b>Product<\/b>: %{customdata[1]}'+\n          '<br><b>Quantity Ordered<\/b>: %{x:,.0f}<br>'+\n          '<b>Sales<\/b>: $%{y:,.0f}',\n    marker=dict(\n        size=20,\n        color=product_sales1['QUANTITYORDERED'],\n        colorscale='mrybm', \n        showscale=False)\n\n)\n\nlayout = go.Layout(title={\n                'text': 'Sales of Ordered Quantity',\n                'y': 0.93,\n                'x': 0.5,\n                'xanchor': 'center',\n                'yanchor': 'top'},\n             titlefont={'family': 'Oswald',\n                        'color': 'rgb(230, 34, 144)',\n                        'size': 25},\n\n             hovermode='closest',\n    \n             xaxis=dict(title='<b>Quantity Ordered<\/b>',\n                        color='rgb(230, 34, 144)',\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor='rgb(104, 204, 104)',\n                        linewidth=2,\n                        ticks='outside',\n                        tickfont=dict(\n                            family='Arial',\n                            size=12,\n                            color='rgb(17, 37, 239)'\n                        )\n\n                ),\n\n             yaxis=dict(title='<b>Sales<\/b>',\n                        color='rgb(230, 34, 144)',\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor='rgb(104, 204, 104)',\n                        linewidth=2,\n                        ticks='outside',\n                        tickfont=dict(\n                           family='Arial',\n                           size=12,\n                           color='rgb(17, 37, 239)'\n                        )\n\n                )\n             \n    )       \n\nfigure2 = go.Figure(data=data, layout=layout)\n\nfigure2.show()                   \n             ","58680700":"product_sales2 = sales1.groupby(['COUNTRY', 'STATE', 'CITY', 'PRODUCTLINE', 'DEALSIZE'])[['QUANTITYORDERED', 'SALES']].sum().reset_index()\nproduct_sales2","51357fbd":"product_sales2['QUANTITYORDERED'][product_sales2['DEALSIZE'] == 'Small']","7546c2b2":"data1 = go.Scatter(\n  x = product_sales2['QUANTITYORDERED'][product_sales2['DEALSIZE'] == 'Small'],\n  y = product_sales2['SALES'][product_sales2['DEALSIZE'] == 'Small'],\n  mode = 'markers',\n  customdata=product_sales2[['COUNTRY', 'STATE',  'CITY', 'PRODUCTLINE', 'QUANTITYORDERED', 'SALES']],\n  hovertemplate =\n          '<br><b>Country<\/b>: %{customdata[0]}<br><extra><\/extra>'+\n          '<b>State<\/b>: %{customdata[1]}'+\n          '<br><b>City<\/b>: %{customdata[2]}<\/br>'+\n          '<b>Product<\/b>: %{customdata[3]}'+\n          '<br><b>Q.Ordered<\/b>: %{customdata[4]:,.0f}<\/br>'+\n          '<b>Sales<\/b>: $%{customdata[5]:,.0f}',\n    marker=dict(\n        size=2000*product_sales2['QUANTITYORDERED'][product_sales2['DEALSIZE'] == 'Small']\/product_sales2['SALES'][product_sales2['DEALSIZE'] == 'Small'],\n        color=product_sales2['QUANTITYORDERED'][product_sales2['DEALSIZE'] == 'Small'],\n        colorscale='mrybm', \n        showscale=False),\n    name='Small'\n\n)\n\ndata2 = go.Scatter(\n  x = product_sales2['QUANTITYORDERED'][product_sales2['DEALSIZE'] == 'Medium'],\n  y = product_sales2['SALES'][product_sales2['DEALSIZE'] == 'Medium'],\n  mode = 'markers',\n  customdata=product_sales2[['COUNTRY', 'STATE',  'CITY', 'PRODUCTLINE', 'QUANTITYORDERED', 'SALES']],\n  hovertemplate =\n          '<br><b>Country<\/b>: %{customdata[0]}<br><extra><\/extra>'+\n          '<b>State<\/b>: %{customdata[1]}'+\n          '<br><b>City<\/b>: %{customdata[2]}<\/br>'+\n          '<b>Product<\/b>: %{customdata[3]}'+\n          '<br><b>Q.Ordered<\/b>: %{customdata[4]:,.0f}<\/br>'+\n          '<b>Sales<\/b>: $%{customdata[5]:,.0f}',\n    marker=dict(\n        size=2000*product_sales2['QUANTITYORDERED'][product_sales2['DEALSIZE'] == 'Medium']\/product_sales2['SALES'][product_sales2['DEALSIZE'] == 'Medium'],\n        color=product_sales2['QUANTITYORDERED'][product_sales2['DEALSIZE'] == 'Medium'],\n        colorscale='mrybm', \n        showscale=False),\n    name='Medium'\n\n)\n\ndata3 = go.Scatter(\n  x = product_sales2['QUANTITYORDERED'][product_sales2['DEALSIZE'] == 'Large'],\n  y = product_sales2['SALES'][product_sales2['DEALSIZE'] == 'Large'],\n  mode = 'markers',\n  customdata=product_sales2[['COUNTRY', 'STATE',  'CITY', 'PRODUCTLINE', 'QUANTITYORDERED', 'SALES']],\n  hovertemplate =\n          '<br><b>Country<\/b>: %{customdata[0]}<br><extra><\/extra>'+\n          '<b>State<\/b>: %{customdata[1]}'+\n          '<br><b>City<\/b>: %{customdata[2]}<\/br>'+\n          '<b>Product<\/b>: %{customdata[3]}'+\n          '<br><b>Q.Ordered<\/b>: %{customdata[4]:,.0f}<\/br>'+\n          '<b>Sales<\/b>: $%{customdata[5]:,.0f}',\n    marker=dict(\n        size=4000*product_sales2['QUANTITYORDERED'][product_sales2['DEALSIZE'] == 'Large']\/product_sales2['SALES'][product_sales2['DEALSIZE'] == 'Large'],\n        color=product_sales2['QUANTITYORDERED'][product_sales2['DEALSIZE'] == 'Large'],\n        colorscale='mrybm', \n        showscale=False),\n    name='Large'\n\n)\n\ndata = [data1, data2, data3]\n\nlayout = go.Layout(title={\n                'text': 'Sales of Ordered Quantity',\n                'y': 0.93,\n                'x': 0.5,\n                'xanchor': 'center',\n                'yanchor': 'top'},\n             titlefont={'family': 'Oswald',\n                        'color': 'rgb(230, 34, 144)',\n                        'size': 25},\n\n             hovermode='closest',\n             height=600,      \n    \n             xaxis=dict(title='<b>Quantity Ordered<\/b>',\n                        color='rgb(230, 34, 144)',\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor='rgb(104, 204, 104)',\n                        linewidth=2,\n                        ticks='outside',\n                        tickfont=dict(\n                            family='Arial',\n                            size=12,\n                            color='rgb(17, 37, 239)'\n                        )\n\n                ),\n\n             yaxis=dict(title='<b>Sales<\/b>',\n                        color='rgb(230, 34, 144)',\n                        showline=True,\n                        showgrid=True,\n                        showticklabels=True,\n                        linecolor='rgb(104, 204, 104)',\n                        linewidth=2,\n                        ticks='outside',\n                        tickfont=dict(\n                           family='Arial',\n                           size=12,\n                           color='rgb(17, 37, 239)'\n                        )\n\n                ),\n              \n            legend=dict(title='',\n                         x=0.25,\n                         y=0.95,\n                         orientation='h',\n                         bgcolor='rgba(255, 255, 255, 0)',\n                         traceorder=\"normal\",\n                         font=dict(\n                              family=\"sans-serif\",\n                              size=12,\n                              color='#000000')),\n\n                         legend_title_font_color='green', #this code is available only for legend title       \n             \n    )       \n\nfigure2 = go.Figure(data=data, layout=layout)\n\nfigure2.show()             ","647029a4":"In the above chart, there are three legends, 2003, 2004, 2005.","f51c05f0":"# Calculate number of monthly active customer","77623888":"# Calculate sales from top 10 countries","36386ebb":"# Count each status of products","40aef970":"# Compare growth rate of sales to actual sales\nCreate new column 'GROWTH RATE' inside data frame 'monthly_sales'","8f37b5df":"# Calculate yearly sales value","c91e07cb":"# Calculate monthly sales","976beb87":"# Count size of deal","cf5b89e6":"# Compare sales of each country on scatter chart","60c801ff":"# How many quantity ordered of each product and compare to price\nFirst of all sum the number of quantity ordered for each product","4186c9f1":"# Calculate average sales in each month","b14e6eaa":"# Compare sales of each country on bubble chart","43175500":"# Compare sales and quantity ordered of each product","8967bd14":"To compare price of each product to the sum of number of quantity ordered, get price of each product."}}