{"cell_type":{"558cdd07":"code","cd7f7e64":"code","bdc4eb57":"code","c30f15c2":"code","a6982e12":"code","0df3f494":"code","45ffd058":"code","bf51fe6a":"code","fda17137":"markdown","4747ca7f":"markdown","d91589b9":"markdown","e00be707":"markdown","30c1bc4a":"markdown","c338c5e7":"markdown","6cfdfd61":"markdown","cd4f957b":"markdown","eb8a3152":"markdown","3ec1af6d":"markdown"},"source":{"558cdd07":"# Import datasets\nimport sklearn.datasets\nfrom sklearn.model_selection import train_test_split\n# Load dataset\nX, y = sklearn.datasets.load_digits(n_class = 10,return_X_y = True)\n# Split the data\nX_train, X_val, y_train, y_val = train_test_split(X, y)","cd7f7e64":"\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score","bdc4eb57":"rf = RandomForestClassifier(n_estimators=500, max_depth=4, n_jobs=-1)\nrf.fit(X_train, y_train)","c30f15c2":"predictions = []\nfor tree in rf.estimators_:\n    predictions.append(tree.predict_proba(X_val)[None, :])","a6982e12":"predictions = np.vstack(predictions)","0df3f494":"cum_mean = np.cumsum(predictions, axis=0)\/np.arange(1, predictions.shape[0] + 1)[:, None, None]","45ffd058":"scores = []\nfor pred in cum_mean:\n    scores.append(accuracy_score(y_val, np.argmax(pred, axis=1)))","bf51fe6a":"plt.figure(figsize=(10, 6))\nplt.plot(scores, linewidth=3)\nplt.xlabel('num_trees')\nplt.ylabel('accuracy');","fda17137":"**Step 4:** \u0421ompute cumulative average of the predictions. That will be a tensor, that will contain predictions of the random forests for each `n_estimators`.","4747ca7f":"**Step 2:** Get predictions for each tree in Random Forest separately.","d91589b9":"**Step 3:** Concatenate the predictions to a tensor of size `(number of trees, number of objects, number of classes)`.","e00be707":"In this notebook, we will try to determine the best number of `n_estimators` for RandomForest model without training the model for multiple times","30c1bc4a":"### Load Dataset\n\nWe will use one of the built-in datasets, which is `digits`","c338c5e7":"**Step 5:** Get accuracy scores for each `n_estimators` value","6cfdfd61":"### Import libraries","cd4f957b":"**Step 1:** first fit a Random Forest to the data. Set `n_estimators` to a high value.","eb8a3152":"**That is it!** Plot the resulting scores to obtain similar plot to one that appeared on the slides.","3ec1af6d":"We see, that 150 trees are already sufficient to have stable result."}}