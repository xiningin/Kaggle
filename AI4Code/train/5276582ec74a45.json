{"cell_type":{"cfec8df8":"code","0ccd9252":"code","e20f66ee":"code","54a81cf0":"code","74704a92":"code","170586c8":"code","8f8aa5bd":"code","7c6b8361":"code","cecd229d":"code","1fd302eb":"code","a434d679":"code","9b253165":"markdown"},"source":{"cfec8df8":"# This notbook uses random forest to create a classification model\n\"\"\"\nUsing the Titanic extended dataset (Kaggle + Wikipedia) compiled by kaggle\nThe first 12 attributes of this data set are the same as the original data set\nIt expands the data of the following nine attributes according to Titanic passenger list on Wikipedia:\nWikiId\nName\nAge\nHometown\nBoarded\nDestination\nLifeboat\nBody\nClass\n---------------------------\nThis new data set has less misleading data\n\"\"\"\n# Used fastai\nimport fastai\nimport pandas as pd\nimport numpy as np\nfastai.__version__","0ccd9252":"# Import structured data or tabular data processing package\nfrom fastai import *\nfrom fastai.tabular.all import *","e20f66ee":"df_train = pd.read_csv('..\/input\/titanic-extended\/train.csv')\ndf_test = pd.read_csv('..\/input\/titanic-extended\/test.csv')\ndf_train.head()","54a81cf0":"# wikiid is useless for our judgment, we can delete this attribute directly in df_train\ndf_train = df_train.drop(columns=['WikiId'])\n# Body data should be useless\ndf_train = df_train.drop(columns=['Body'])\ndf_train","74704a92":"procs = [Categorify, FillMissing]\nsplits = RandomSplitter(valid_pct=0.2)(range_of(df_train))\ncont, cat = cont_cat_split(df_train, 1, 'Survived')\ncont\n","170586c8":"cat","8f8aa5bd":"to = TabularPandas(df_train, procs,cat, cont, y_names = 'Survived', splits=splits)\nto.show(3)","7c6b8361":"X_train, y_train = to.train.xs, to.train.y\nX_test, y_test = to.valid.xs, to.valid.y","cecd229d":"from sklearn.ensemble import RandomForestClassifier\nmodel = RandomForestClassifier(n_estimators=100, n_jobs=-1)\nmodel.fit(X_train, y_train)","1fd302eb":"# Test model\nfrom sklearn.metrics import accuracy_score\ny_pred = model.predict(X_test)\naccuracy_score(y_test, y_pred)","a434d679":"to_test = TabularPandas(df_test, procs, cat, cont)\nresult = model.predict(to_test.xs.drop('Fare_na', axis=1))\noutput= pd.DataFrame({'PassengerId':df_test.PassengerId, 'Survived': result.astype(int)})\noutput.to_csv('.\/submission_titanic.csv', index=False)","9b253165":"**Next, first do some processing on the data set**\n\nFor the data:\n\ndf_train represents the training set\n\ndf_test represents the test set"}}