{"cell_type":{"b7b813f1":"code","be843ace":"code","dcfeb244":"code","18c5516e":"code","ade414bb":"code","484186dc":"code","9a0fff6e":"code","42a676ac":"code","9954245b":"code","958e6e0a":"markdown"},"source":{"b7b813f1":"import numpy as np\nimport tensorflow as tf\nimport tensorflow.keras.backend as K\nfrom tensorflow.keras.callbacks import TensorBoard, ModelCheckpoint, ReduceLROnPlateau, EarlyStopping, TerminateOnNaN\nfrom tensorflow.keras.optimizers import Adam\nfrom tensorflow.python.keras.preprocessing.image import ImageDataGenerator\n","be843ace":"# Check tf version\ntf.__version__","dcfeb244":"input_shape = np.asarray([300, 300, 3])\n\ntrain_datagen = ImageDataGenerator(\n    rescale=1\/255,\n    zoom_range=0.95,\n    width_shift_range=[-10,10],\n    height_shift_range=[-10,10],\n    fill_mode='nearest'\n)\n\ntrain_generator = train_datagen.flow_from_directory(\n    '\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/train\/',\n    target_size=input_shape[:2],\n    batch_size=16,\n    class_mode='binary'\n)\n\nvalidation_generator = train_datagen.flow_from_directory(\n    '\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/val\/',\n    target_size=input_shape[:2],\n    batch_size=16,\n    class_mode='binary'\n)\n","18c5516e":"early_stopping = EarlyStopping(monitor='val_loss', min_delta=0, patience=50, verbose=1)\nterminate_on_nan = TerminateOnNaN()\ncallbacks = [early_stopping, terminate_on_nan]\n\noptimizer = Adam(0.0001)\n","ade414bb":"def build_model(model_input_shape=input_shape):\n    model = tf.keras.models.Sequential([\n        tf.keras.layers.Conv2D(16, (3, 3), activation='relu', input_shape=model_input_shape),\n        tf.keras.layers.MaxPooling2D(2, 2),\n\n        tf.keras.layers.Conv2D(32, (3, 3), activation='relu'),\n        tf.keras.layers.MaxPooling2D(2, 2),\n\n        tf.keras.layers.Conv2D(64, (3, 3), activation='relu'),\n        tf.keras.layers.MaxPooling2D(2, 2),\n\n        tf.keras.layers.Conv2D(128, (3, 3), activation='relu'),\n        tf.keras.layers.MaxPooling2D(2, 2),\n\n        tf.keras.layers.Flatten(),\n        tf.keras.layers.Dense(512, activation='relu'),\n        tf.keras.layers.Dropout(0.2),\n        tf.keras.layers.Dense(1, activation='sigmoid')\n    ])\n\n    return model\n\nmodel = build_model()\nmodel.compile(loss='binary_crossentropy', optimizer=optimizer, metrics=['accuracy'])\nepochs = 50","484186dc":"history = model.fit(\n        train_generator,\n        epochs=epochs,\n        validation_data=validation_generator,\n        callbacks=callbacks\n    )\n","9a0fff6e":"test_datagen = ImageDataGenerator(rescale = 1\/255)\n\ntest_generator = test_datagen.flow_from_directory(\n    '\/kaggle\/input\/chest-xray-pneumonia\/chest_xray\/test\/',\n    target_size=input_shape[:2],\n    batch_size = 156, \n    class_mode = 'binary'\n)\n\n\neval_result = model.evaluate(test_generator)","42a676ac":"print(f'test loss: {eval_result[0]}')\nprint(f'test accuracy: {eval_result[1]}')","9954245b":"model.save('trained_model_first_try.h5')","958e6e0a":"**Several notes about data imbalance in the chest-xray-pneumonia dataset:**\nRaw *validation set* is relatively small compared to *training set*. (Inly 8 samples per class)\nSo I've tried to use **test set insted** (for validation step). It contains 624 samples and much more suficient for this problem.\nThis gave me much more smooth training curves for train\/val stages and the model became less overfitted. As I expected.\n\nBut, in such case, the test set became too small and unrepresentative. Again, there was only 8 samples per class after swap. So I decided to exclude my dry run results from this notebook and just train the model \"as is\".\n\nJust keep in mind."}}