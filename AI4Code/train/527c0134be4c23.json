{"cell_type":{"7f65ce8e":"code","47720424":"code","bae9a4f2":"code","45ae24af":"code","8c75896e":"code","205a30a8":"code","026c19eb":"code","54155664":"code","4092b163":"code","a2fe4332":"code","c5e0441c":"code","d75153bf":"code","ee915661":"code","7291150c":"code","ee3fe86e":"code","e22cd303":"code","56ab2d92":"code","446dea98":"code","8d5aad97":"code","a7545296":"code","3951c6e5":"code","7118c7e3":"code","b1f8afbc":"code","a7f5e83c":"code","468849ba":"code","e428d077":"code","b59ba38c":"code","9e1469bc":"code","65c1ead5":"code","21286320":"code","610ef04c":"code","2299f9ce":"code","e2cfb275":"code","588a24d2":"code","bcdfd2c1":"code","768def99":"code","2084d011":"code","9b0be1d4":"code","dc73be01":"code","472374dc":"code","1d107b95":"code","8bfc12f5":"code","c49b1695":"code","c9fd785f":"code","414974f0":"code","a25ae966":"code","24677b1b":"code","c24f9533":"code","9b290c4b":"code","a17ac5a7":"code","532790f0":"code","63992e71":"code","1285e699":"code","173e2927":"code","84775106":"code","30aacaff":"code","ce4061d0":"code","16427624":"code","6fc72fd8":"code","cac997cd":"code","a70d9187":"code","1875bd2f":"code","e8a90a9e":"code","170f912b":"code","aa0d5e42":"code","28dc437b":"code","7d7a8db8":"code","fc328ccb":"code","3e384b5b":"code","8e03cee2":"code","ff690adb":"code","44a2317a":"code","195443bd":"code","54aae3f0":"code","9671f4c9":"code","3055ef8c":"code","3fb47e6a":"code","7a106a37":"code","f08284de":"code","196f459e":"code","05808715":"code","2dcb0cd5":"code","ddd8be3a":"code","a8ea6ccd":"code","7e453b39":"code","c674c747":"markdown","acda1b0b":"markdown","31f5b2d0":"markdown","81ab2708":"markdown","5d2b1e95":"markdown","480c78b9":"markdown","0bc1ac05":"markdown","dd7ac64e":"markdown","fd912619":"markdown","d9048d6a":"markdown","40e110ae":"markdown","97911ab4":"markdown","2f638ba8":"markdown","55282629":"markdown","a75d64b3":"markdown","3cb4283d":"markdown","04f40831":"markdown","7e3fdeb0":"markdown","2fd47e86":"markdown","faa56f2a":"markdown","b9e16d07":"markdown","26fe94fb":"markdown","19a29057":"markdown","f7bdb4e1":"markdown","9cb27665":"markdown","6a8e3ea7":"markdown","551812e6":"markdown","407a394b":"markdown","26f4952d":"markdown","02f513c0":"markdown","bfede55f":"markdown","c2b2ed32":"markdown","93a539a2":"markdown","cdeae45f":"markdown","82d30fd9":"markdown","bab03f0f":"markdown","c3d1c51b":"markdown","49910aea":"markdown","be1655fd":"markdown","e60f2466":"markdown","43eafdbe":"markdown","0647d76b":"markdown","1edb79bf":"markdown","2ede1db3":"markdown","4e7cace6":"markdown","a93217b6":"markdown","00e98fc4":"markdown","f9393e8b":"markdown","ea41a07d":"markdown","228a9619":"markdown","ebe4b4ce":"markdown","4ddf02c7":"markdown","e74867bd":"markdown","a1c80d5a":"markdown","2383072b":"markdown","a8d8cadd":"markdown","337bcd5a":"markdown"},"source":{"7f65ce8e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","47720424":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as ps\nsns.set_theme(style=\"whitegrid\", palette=\"pastel\")\n%matplotlib inline","bae9a4f2":"data = pd.read_csv(\"\/kaggle\/input\/customer-personality-analysis\/marketing_campaign.csv\",sep=\"\\t\")\ndata_copy = data.copy()\ndata.head()","45ae24af":"data.info()","8c75896e":"nul_values = data[\"Income\"].isnull().sum()\ntotal = data['Income'].count()\nprint(\"Percent of Income_null:\",round(nul_values\/total,2))","205a30a8":"data.describe()","026c19eb":"data[\"Education\"].unique().tolist()  #View unique values","54155664":"plt.figure(figsize=(10,7))\nsns.countplot(x=\"Education\",data=data)","4092b163":"data['Education'].value_counts()","a2fe4332":"def percent(data_series):\n    total = data_series.count()\n    tips = data_series.value_counts()\n    dict_per = {}\n    for i in tips.index:\n        i_count = tips.loc[i]\n        perc = i_count\/total\n        dict_per[i] = round(perc,4)\n    per_data = pd.DataFrame(dict_per,index=['percent'])\n    return per_data","c5e0441c":"print(\"The proportion of academic qualifications is as follows::\")\npercent(data['Education'])","d75153bf":"#attribute reduction\ndata[\"Education\"] = data[\"Education\"].replace(to_replace=['Graduation', 'PhD', 'Master', '2n Cycle'],value=\"colleging_education\")\ndata[\"Education\"] = data['Education'].replace(to_replace=\"Basic\",value=\"under_education\")\n\nplt.figure(figsize=(10,7))\nsns.countplot(x=data[\"Education\"])\n\nprint(\"new Education counts:\\n\",data['Education'].value_counts())\nprint(\"------------------\")\npercent(data['Education'])","ee915661":"plt.figure(figsize=(10,7))\nsns.countplot(x=\"Marital_Status\",data=data)","7291150c":"print(\"Marital_Status:\")\npercent(data[\"Marital_Status\"])","ee3fe86e":"#attribude reducation\ndata[\"Marital_Status\"] = data[\"Marital_Status\"].replace(to_replace=['Married',\"Together\"],value=\"Not_single\")\ndata[\"Marital_Status\"] = data[\"Marital_Status\"].replace(to_replace=['Single',\"Widow\",\"Alone\",\"YOLO\",\"Divorced\",\"Absurd\"],value=\"is_single\")\n\nplt.figure(figsize=(10,7))\nsns.countplot(x=\"Marital_Status\",data=data)\n\nprint(\"new Marital_Status:\")\npercent(data[\"Marital_Status\"])","e22cd303":"print(data[\"Kidhome\"].value_counts())\nprint(data['Teenhome'].value_counts())","56ab2d92":"\ndata['child'] = data['Kidhome'] + data['Teenhome']\ndata_copy['child'] = data_copy['Kidhome'] + data_copy['Teenhome']\nprint(\"new child:\")\nprint(data['child'].value_counts())\n#drop kidhome teenhome\npercent(data['child'])","446dea98":"plt.figure(figsize=(10,7))\nsns.countplot(x=data[\"child\"])","8d5aad97":"data['Income'].describe()","a7545296":"#Assuming that more than 100,000 belong to high-net-worth, high-wealth families\nincome_cut = pd.cut(data[\"Income\"],bins=[1000,10000,20000,30000,40000,50000,60000,70000,80000,90000,100000,700000])\nincome_cut","3951c6e5":"print(\"income_cut percent:\")\nincome_cut.value_counts(normalize=True)","7118c7e3":"plt.figure(figsize=(18,10))\nsns.countplot(x=income_cut,palette=\"Set2\")","b1f8afbc":"sns.boxplot(x=data['Income'])","a7f5e83c":"#drop income_outliers  include data_copy\ndata = data.drop((data.loc[data[\"Income\"]>600000].index))\ndata_cluster = data.copy()\nprint((data[\"Income\"] < 600000).any())\nprint(data.shape)","468849ba":"data_copy = data_copy.drop((data_copy.loc[data_copy[\"Income\"]>600000].index))\nprint((data_copy[\"Income\"] < 600000).any())\nprint(data_copy.shape)","e428d077":"fig,axes = plt.subplots(nrows=1,ncols=3,figsize=(20,7))\nlis = ['child','Marital_Status','Education']\nfor var,ax in zip(lis,axes.flat):\n    sns.boxplot(x=var,y=\"Income\",ax=ax,data=data,palette=\"Set2\")","b59ba38c":"data.nunique()","9e1469bc":"#drop only one\ndata.drop(columns=['Z_CostContact','Z_Revenue'],inplace=True)\ndata_copy.drop(columns=['Z_CostContact','Z_Revenue'],inplace=True)","65c1ead5":"#products\ndata['consumption'] = data[\"MntWines\"] + data[\"MntFruits\"] + data[\"MntMeatProducts\"] + data[\"MntFishProducts\"] + data[\"MntSweetProducts\"] + data[\"MntGoldProds\"]\n\n\ndata_copy['consumption'] = data_copy[\"MntWines\"] + data_copy[\"MntFruits\"] + data_copy[\"MntMeatProducts\"] + data_copy[\"MntFishProducts\"] + data_copy[\"MntSweetProducts\"] + data_copy[\"MntGoldProds\"]\n\nfig,ax =plt.subplots(1,2,figsize=(10,7))\nsns.distplot(x=data[\"consumption\"],kde=True,ax=ax[0])\nsns.boxplot(y=data[\"consumption\"],ax=ax[1],palette=\"Set2\")","21286320":"print(\"max_consumption:\",data[\"consumption\"].value_counts().max())\nprint(\"min_consumption:\",data[\"consumption\"].value_counts().min())","610ef04c":"#Features of accepted quotations can be combined into one feature\ndata[\"acceptedcmp\"] = data[\"AcceptedCmp1\"] + data[\"AcceptedCmp2\"] + data[\"AcceptedCmp3\"] + data[\"AcceptedCmp4\"] + data[\"AcceptedCmp5\"]\ndata_copy[\"acceptedcmp\"] = data_copy[\"AcceptedCmp1\"] + data_copy[\"AcceptedCmp2\"] + data_copy[\"AcceptedCmp3\"] + data_copy[\"AcceptedCmp4\"] + data_copy[\"AcceptedCmp5\"]","2299f9ce":"print(data[\"acceptedcmp\"].value_counts())\nprint('------------------------------')\nprint(\"acceptedcmp:\")\npercent(data[\"acceptedcmp\"])","e2cfb275":"plt.figure(figsize=(10,7))\nsns.countplot(x=data[\"acceptedcmp\"])","588a24d2":"Deals_data = data[\"NumDealsPurchases\"].value_counts()\nDeals_data","bcdfd2c1":"plt.figure(figsize=(10,7))\nsns.barplot(x=Deals_data.index,y=Deals_data.values,color=[0,0,1])\nplt.xlabel(\"NumDealsPurchases\")\nplt.ylabel(\"Deals_counts\")\nplt.title(\"bar_Deals\")","768def99":"print(\"numdealspurchase percent:\")\npercent(data[\"NumDealsPurchases\"])","2084d011":"lis = ['NumWebPurchases','NumCatalogPurchases','NumStorePurchases','NumWebVisitsMonth']\nfor i in lis:\n    print(\"{} total nums:{}\".format(i,data[i].sum()))","9b0be1d4":"sns.regplot(x=data[\"NumWebVisitsMonth\"],y=data[\"NumWebPurchases\"])","dc73be01":"sns.lmplot(x=\"NumWebVisitsMonth\", y=\"NumWebPurchases\", data=data, x_estimator=np.mean)","472374dc":"two_ = data.loc[:,[\"NumWebPurchases\",\"NumWebVisitsMonth\"]].corr()\nsns.heatmap(two_,annot=True)","1d107b95":"data[\"online_purchase\"] = data[\"NumWebPurchases\"] + data[\"NumCatalogPurchases\"] + data[\"NumWebVisitsMonth\"]\ndata.rename(columns={\"NumStorePurchases\":\"offline_purchase_num\"},inplace=True)\n\ndata_copy[\"online_purchase\"] = data_copy[\"NumWebPurchases\"] + data_copy[\"NumCatalogPurchases\"] + data_copy[\"NumWebVisitsMonth\"]\ndata_copy.rename(columns={\"NumStorePurchases\":\"offline_purchase_num\"},inplace=True)\n\nonline = data[\"online_purchase\"].sum()\noffline = data[\"offline_purchase_num\"].sum()\nprint(\"online total:{},\\n offline total:{},\\n online divide offline:{}.\".format(online,offline,round(online\/offline,2)))","8bfc12f5":"lia = [\"online_purchase\",\"offline_purchase_num\"]\nfig,axes = plt.subplots(1,2,figsize=(10,7))\nfor var,ax in zip(lia,axes.flat):\n    sns.boxplot(x='Marital_Status',y=var,data=data,ax=ax,palette=\"Set2\")","c49b1695":"fig,axes = plt.subplots(1,2,figsize=(10,7))\nfor var,ax in zip(lia,axes.flat):\n    sns.boxplot(x='Education',y=var,data=data,ax=ax,palette=\"Set2\")","c9fd785f":"#Assuming that the statistical date is 2015\ndata[\"Dt_time_year\"]=2015-pd.to_datetime(data[\"Dt_Customer\"]).dt.year\ndata_copy[\"Dt_time_year\"]=2015-pd.to_datetime(data_copy[\"Dt_Customer\"]).dt.year\n\na = data[\"Dt_time_year\"].value_counts()\na.name = \"Dt_time_year_count\"\nb = data[\"Dt_time_year\"].value_counts(normalize=True)\nb.name = \"Dt_time_year_percent\"\npd.concat([a,b],axis=1)","414974f0":"fig = ps.bar(a,x=a.index,y=a.values)\nfig.show()","a25ae966":"#now  2021\ndata[\"age\"] = 2015 - data[\"Year_Birth\"]\ndata_copy[\"age\"] = 2015 - data_copy[\"Year_Birth\"]\ndata_cluster[\"age\"] = 2015 - data_cluster[\"Year_Birth\"]\n# data.drop(\"Year_Birth\",axis=1,inplace=True)\ndata.head()","24677b1b":"data[\"age\"].value_counts().unique()","c24f9533":"age = data[\"age\"].value_counts()\nplt.figure(figsize=(22,7))\nsns.barplot(x=age.index,y=age.values)\nplt.xlabel(\"age\")\nplt.ylabel(\"age_counts\")\nplt.title(\"age_bar\")","9b290c4b":"#drop age>100\ndata = data.drop((data.loc[data[\"age\"]>100].index))\ndata_copy = data_copy.drop((data_copy.loc[data_copy[\"age\"]>100].index))\ndata_cluster = data_cluster.drop((data_cluster.loc[data_cluster[\"age\"]>100].index))","a17ac5a7":"a = data[\"Recency\"].value_counts().reset_index()\na[\"index\"].max(),a[\"index\"].min()","532790f0":"pd.cut(data[\"Recency\"],bins=[0,15,30,45,100],labels=[\"active_user\",\"Users_to_churn\",\"Churning_users\",\"Churned\"]).value_counts().plot(kind=\"bar\")","63992e71":"\ndata[\"Response\"].value_counts(normalize=True)","1285e699":"data[\"Complain\"].value_counts(normalize=True)","173e2927":"data.columns","84775106":"list_columns = [ 'Education', 'Marital_Status', 'Income','Recency',\n                    'offline_purchase_num','child', 'consumption',\n                    'acceptedcmp', 'online_purchase', 'Dt_time_year', 'age']\n\nfor i in data.columns.tolist():\n    if i not in list_columns:\n        data = data.drop(i,axis=1)\n\ndata.head()","30aacaff":"copy_list_columns = [ 'Education', 'Marital_Status', 'Income','Recency',\n                    'offline_purchase_num','child', 'consumption',\n                    'acceptedcmp', 'online_purchase', 'Dt_time_year', 'age']\n\nfor i in data_copy.columns.tolist():\n    if i not in list_columns:\n        data_copy = data_copy.drop(i,axis=1)\n\ndata_copy.head()","ce4061d0":"data.info()","16427624":"data['Income'] = data['Income'].fillna(data['Income'].mean())\n\ndata_copy['Income'] = data_copy['Income'].fillna(data_copy['Income'].mean())\ndata.isnull().sum()","6fc72fd8":"plt.figure(figsize=(10,7))\nsns.heatmap(data.corr(),annot=True)","cac997cd":"from sklearn.preprocessing import StandardScaler\nfrom yellowbrick.cluster import KElbowVisualizer","a70d9187":"data = data.join(pd.get_dummies(data[\"Education\"])).drop(\"Education\",axis=1)\ndata = data.join(pd.get_dummies(data[\"Marital_Status\"])).drop(\"Marital_Status\",axis=1)","1875bd2f":"std = StandardScaler()\ndata[\"Income_std\"]= std.fit_transform(data['Income'].values.reshape(-1,1))\ndata[\"consumption_std\"]= std.fit_transform(data['consumption'].values.reshape(-1,1))\ndata[\"age_std\"]= std.fit_transform(data['age'].values.reshape(-1,1))\ndata[\"online_purchase_std\"]= std.fit_transform(data['online_purchase'].values.reshape(-1,1))\ndata[\"child_std\"]= std.fit_transform(data['child'].values.reshape(-1,1))\ndata[\"acceptedcmp_std\"]= std.fit_transform(data['acceptedcmp'].values.reshape(-1,1))\ndata[\"Dt_time_year_std\"]= std.fit_transform(data['Dt_time_year'].values.reshape(-1,1))\ndata[\"offline_purchase_std\"]= std.fit_transform(data['offline_purchase_num'].values.reshape(-1,1))\ndata[\"Recency_std\"]= std.fit_transform(data['Recency'].values.reshape(-1,1))\n\ndata.drop([\"Income\",\"consumption\",\"age\",\"online_purchase\",\"offline_purchase_num\",\"Dt_time_year\",\"child\",\"acceptedcmp\",\"Recency\"],axis=1,inplace=True)\ndata.head()","e8a90a9e":"from sklearn.cluster import KMeans\nfrom yellowbrick.cluster import KElbowVisualizer\nmodel = KMeans(init='k-means++')\nvisit = KElbowVisualizer(model,k=10,random_state=123)\nvisit.fit(data.values)\nvisit.show()","170f912b":"model_kemeans = KMeans(n_clusters=4,init='k-means++',random_state=123)\nmodel_kemeans.fit(data.values)\nmodel_kemeans.predict(data.values)\n","aa0d5e42":"data[\"n_cluster\"] = model_kemeans.predict(data.values)\ndata.head()","28dc437b":"data[\"n_cluster\"].value_counts().plot(kind=\"bar\")","7d7a8db8":"data_copy['cluster'] = model_kemeans.labels_\ndata_copy.head()","fc328ccb":"age_clus = data_copy.loc[:,[\"age\",\"cluster\"]]\nage_clus","3e384b5b":"mean_clus = age_clus.groupby(\"cluster\").mean().reset_index()\nmean_clus[\"cluster\"] = mean_clus[\"cluster\"].replace({0:\"cluster_0\",1:\"cluster_1\",2:\"cluster_2\",3:\"cluster_3\"})\nmean_clus","8e03cee2":"fig_mean = ps.bar(mean_clus,x=\"cluster\",y=\"age\",color=mean_clus.cluster)\nfig_mean.show()","ff690adb":"income_clus = data_copy.loc[:,[\"Income\",\"cluster\"]]\n\nincome_mean_clus = income_clus.groupby(\"cluster\").mean().reset_index()\nincome_mean_clus[\"cluster\"] = income_mean_clus[\"cluster\"].replace({0:\"cluster_0\",1:\"cluster_1\",2:\"cluster_2\",3:\"cluster_3\"})\n\nincome_mean = ps.bar(income_mean_clus,x=\"cluster\",y=\"Income\",color=income_mean_clus.cluster)\nincome_mean.show()","44a2317a":"con_clus = data_copy.loc[:,[\"consumption\",\"cluster\"]]\n\ncon_mean_clus = con_clus.groupby(\"cluster\").mean().reset_index()\ncon_mean_clus[\"cluster\"] = con_mean_clus[\"cluster\"].replace({0:\"cluster_0\",1:\"cluster_1\",2:\"cluster_2\",3:\"cluster_3\"})\n\ncon_mean = ps.bar(con_mean_clus,x=\"cluster\",y=\"consumption\",color=con_mean_clus.cluster)\ncon_mean.show()","195443bd":"combin_clus = data_copy.loc[:,[\"Income\",\"consumption\",\"cluster\"]]\ncombin_clus= combin_clus.groupby(\"cluster\").mean().reset_index()\ncombin_clus[\"cluster\"] = combin_clus[\"cluster\"].replace({0:\"cluster_0\",1:\"cluster_1\",2:\"cluster_2\",3:\"cluster_3\"})\ncombin_clus","54aae3f0":"com_me = ps.bar(combin_clus,x=\"cluster\",y=[\"consumption\",\"Income\"],barmode=\"group\")\ncom_me.show()","9671f4c9":"rec_clus = data_copy.loc[:,[\"Recency\",\"cluster\"]]\npd.cut(rec_clus[\"Recency\"],bins=[0,15,30,45,100],labels=[\"active_user\",\"Users_to_churn\",\"Churning_users\",\"Churned\"])\n","3055ef8c":"rec_clus[\"Recency_status\"] = pd.cut(rec_clus[\"Recency\"],bins=[0,15,30,45,100],labels=[\"active_user\",\"Users_to_churn\",\"Churning_users\",\"Churned\"])\nrec_clus","3fb47e6a":"rec = rec_clus.groupby([\"Recency_status\",\"cluster\"]).count().reset_index()\nrec.rename(columns={\"Recency\":\"count_recency\"},inplace=True)\nrec[\"cluster\"] = rec[\"cluster\"].replace({0:\"cluster_0\",1:\"cluster_1\",2:\"cluster_2\",3:\"cluster_3\"})\nfi = ps.bar(rec,x=\"Recency_status\",y=\"count_recency\",color=\"cluster\",barmode=\"group\")\nfi.update_layout(title=\"Recency adn cluster\")\nfi.show()","7a106a37":"ed_clus = data_copy.loc[:,[\"Education\",\"cluster\"]]\ned_clus[\"count\"] = 1\ned_clus[\"cluster\"] = ed_clus[\"cluster\"].replace({0:\"cluster_0\",1:\"cluster_1\",2:\"cluster_2\",3:\"cluster_3\"})\ned_clus = ed_clus.groupby([\"Education\",\"cluster\"]).sum().reset_index()","f08284de":"fit = ps.bar(ed_clus,x=\"Education\",y=\"count\",color=\"cluster\",barmode=\"group\")\nfit.update_layout(title=\"Education adn cluster\")\nfit.show()","196f459e":"#This part of the data is used to analyze the specific products purchased by the cluster group, in the follow-up.\n# data_cluster.head()","05808715":"dt = data_copy.loc[:,[\"Dt_time_year\",\"cluster\"]].groupby(\"cluster\").agg({\"Dt_time_year\":[\"mean\",\"max\",\"min\"]}).reset_index()\ndt","2dcb0cd5":"sns.barplot(x=dt.cluster,y=dt[\"Dt_time_year\"][\"mean\"])","ddd8be3a":"# consumption = \"MntWines\" + \"MntFruits\" + \"MntMeatProducts\" + \"MntFishProducts\" + \"MntSweetProducts\" + \"MntGoldProds\"\ndata_cluster[\"cluster\"] = model_kemeans.labels_\ndata_cluster","a8ea6ccd":"#MntWines\ndw = data_cluster.loc[:,[\"MntWines\",\"cluster\"]].groupby(\"cluster\").mean().reset_index().rename(columns={\"MntWines\":\"MntWines_mean\"})\ndi = data_cluster.loc[:,[\"MntFruits\",\"cluster\"]].groupby(\"cluster\").mean().reset_index().rename(columns={\"MntFruits\":\"MntFruits_mean\"})\ndp = data_cluster.loc[:,[\"MntMeatProducts\",\"cluster\"]].groupby(\"cluster\").mean().reset_index().rename(columns={\"MntMeatProducts\":\"MntMeatProducts_mean\"})\ndc = data_cluster.loc[:,[\"MntFishProducts\",\"cluster\"]].groupby(\"cluster\").mean().reset_index().rename(columns={\"MntFishProducts\":\"MntFishProducts_mean\"})\nds = data_cluster.loc[:,[\"MntSweetProducts\",\"cluster\"]].groupby(\"cluster\").mean().reset_index().rename(columns={\"MntSweetProducts\":\"MntSweetProducts_mean\"})\ndg = data_cluster.loc[:,[\"MntGoldProds\",\"cluster\"]].groupby(\"cluster\").mean().reset_index().rename(columns={\"MntGoldProds\":\"MntGoldProds_mean\"})\ndw   #for instance-->dw","7e453b39":"# data_list = [dw,di,dp,dc,ds,dg]\n# data_columns = [\"MntWines_mean\",\"MntFruits_mean\",\"MntMeatProducts_mean\",\"MntFishProducts_mean\",\"MntSweetProducts_mean\",\"MntGoldProds_mean\"]\nfig,ax = plt.subplots(nrows=2,ncols=3,figsize=(18,10))\nsns.barplot(x=dw.cluster,y=dw.MntWines_mean,ax=ax[0,0])\nsns.barplot(x=di.cluster,y=di.MntFruits_mean,ax=ax[0,1])\nsns.barplot(x=dp.cluster,y=dp.MntMeatProducts_mean,ax=ax[0,2])\nsns.barplot(x=dc.cluster,y=dc.MntFishProducts_mean,ax=ax[1,0])\nsns.barplot(x=ds.cluster,y=ds.MntSweetProducts_mean,ax=ax[1,1])\nsns.barplot(x=dg.cluster,y=dg.MntGoldProds_mean,ax=ax[1,2])","c674c747":"#  1\u3001EDA","acda1b0b":"# EDA-------->Complain: 1 if customer complained in the last 2 years, 0 otherwise","31f5b2d0":"1. **A lot of people have been lost**\n2. **NA small number of users are more active**","81ab2708":"**Complaints accounted for 0.9% of users, about 1 out of 100 people complained**","5d2b1e95":"# EDA-------->AcceptedCmp","480c78b9":"1. We can see that the income attribute should have outliers. \n2. It has an impact on our subsequent distance cluster analysis. \n3. We should find a way to delete it and replace the missing values with the mean.","0bc1ac05":"# 2\u3001Data processing and deletion","dd7ac64e":"1. **People without children have the highest average income**\n2. **There is no big difference in the average income of single or not**\n3. **The average income of people with high education is higher than that of people with low education**","fd912619":"1. **The algorithm divides the population into four groups, among which the type group with cluster 2 is the most**\n2. **Combine the clustering results with the original data for analysis**","d9048d6a":"**Simply put, the correlation between the two is very weak, or it can be said that there is no correlation.**","40e110ae":"# EDA-------->Income and other","97911ab4":"1. **User age is mainly concentrated between 30 and 60 years old**\n2. **There are users over 110 years old, this part of users should be an outlier. For convenience, delete this part of the data.**","2f638ba8":"1. **Groups in clusters 1 and 2, with the characteristics of high income and high consumption**\n2. **Groups with a cluster of 0 have the characteristics of middle income and low consumption**\n3. **Groups in cluster 3 are characterized by low income and low consumption**","55282629":"# **cluster------Education**","a75d64b3":"# **main conclusion:**\n1. >  Customers have very high academic qualifications. The income is concentrated between 30,000 and 60,000..\n2. >  The average age of the company's customer base is relatively high, and the registration time is also very long, belonging to regular customers. Among them, 1\/2 group belongs to high-income and high-consumption groups, group 0 belongs to middle-income and low-consumption groups, and group 3 belongs to low-income and low-consumption groups.\n3. >  Judging from the time since the last consumption, the 2\/3 group is losing a lot, and we need to be vigilant.","3cb4283d":"**There are missing values inside the data in Income**\n1. View missing value ratio\n2. Fill in missing values later","04f40831":"1. PhD accounts for 20%\n2. graduated 50%\n3. The attributes of academic qualifications can be reduced later","7e3fdeb0":"1. **One child has the highest percentage**\n1. **No children accounted for 28%, possibly a couple or newly married**","2fd47e86":"**View descriptive statistics of the data**","faa56f2a":"1. > From the previous analysis, the group with the cluster number 1\/2 belongs to the high-consumption and high-income type, and they are definitely the most consumer group among all product consumption. We have observed that the 0 and 3 groups buy more wine and gold, while others buy less.\n2. > However, the 2\/3 group is also the group that has lost or will lose the largest number. He is the object we need to keep, because the main income is also from them.\n3. > For the No. 2 group, we should review whether the current product quality is up to standard and whether there is a quality problem? And observe whether the prices of competitors are cheaper and more affordable? Check the complaints of group 2. For the No. 3 group, we need to focus on the product quality of wine and gold.\n4. > In addition, we can also publish a price promotion campaign to provide different price concessions for more than 1 or 2 years of registration to attract old users. If an old user recommends a new user to the company, we can give both parties a coupon.","b9e16d07":"**Is there a correlation between the number of purchases on the company's website and the number of visits to the company?**","26fe94fb":"**This feature indicates the possibility of user churn. The longer the time, the greater the probability of churn.**","19a29057":"1. **The number of users with cluster 2 is the highest in the highly educated group**\n2. **The number of users with a cluster of 3 is the highest in the low-educated group**","f7bdb4e1":"# EDA-------->Education","9cb27665":"# EDA-------->Year_Birth: Customer's birth year","6a8e3ea7":"# EDA-------->Response: 1 if customer accepted the offer in the last campaign, 0 otherwise","551812e6":"# EDA-------->Dt_Customer: Date of customer's enrollment with the company","407a394b":"1. **It can be seen that in the churn status, the user groups numbered 2 and 3 have the highest churn**\n2. **The high-income and high-consumption groups with cluster 1 have little loss**\n3. **The most active group belongs to the user group of cluster 2, but their churn is also the highest**\n","26f4952d":"**Correlation strength >0.5\uff1a**\n**(consumption,income)\/(consumption,offline_purchase\/online_purchase)**","02f513c0":"# **cluster-----consumption**","bfede55f":"#  EDA-------->Marital_Status","c2b2ed32":"# EDA-------->kid\/Teenhome","93a539a2":"**Most of the customer registration time is more than 2 years**","cdeae45f":"# **cluster------>Analyze specific products**","82d30fd9":"# **cluster------Recency**","bab03f0f":"# **3\u3001Cluster analysis**","c3d1c51b":"# EDA---------->Recency(Number of days since customer's last purchase)","49910aea":"**Missing values are filled in according to the average--Income**","be1655fd":"1. **We analyzed earlier that the type of user group with the highest consumption is 1\/2\/3\/0**\n2. **Now we want to learn more about the specific products that we consume, so that we can adjust the products in the future and restore lost users.**","e60f2466":"**After attribute reduction, the number of people with university education is very large, accounting for 98%**","43eafdbe":"1. **Most people are married or not single**\n2. **The above two situations account for 64%**","0647d76b":"**Assuming that more than 25 days have passed since the last purchase, it means the user has lost**","1edb79bf":" **The highest proportion is between 30,000 and 40,000**","2ede1db3":"**Whether shopping online or offline, the average number of purchases of people with higher education is higher than that of people with lower education**","4e7cace6":"# **Other----->**","a93217b6":"**More than 80% of users accepted the offer in the last event**","00e98fc4":"# EDA-------->Place(web\/catalog\/store)","f9393e8b":"**result for Income**\n1. The highest income is 670,000\n2. The minimum income is 1700\n**Does income refer to annual income?**","ea41a07d":"# EDA-------->NumDealsPurchases: Number of purchases made with a discount","228a9619":"# **cluster------age**","ebe4b4ce":"1. **79% of the five events did not accept the price**\n2. **This means that 79% of the five events actually did not participate in the company\u2019s activities**","4ddf02c7":"# EDA-------->Products","e74867bd":"1. **It can be seen that the longest registration time is the No. 2 group\u3002**\n2. **but according to the loss analysis, it is also the group with the fastest loss. Followed by the No. 3 group.**","a1c80d5a":"# **cluster------Income**","2383072b":"# **cluster------>dt_time_year**","a8d8cadd":"**The features starting with \"mnt\" indicate the consumption amount of the product purchased by the user. Suppose we only care about the consumption, and don't care about specific products for the time being. Therefore, we intend to merge these features.**","337bcd5a":"**In order to facilitate the calculation of the proportion of data, define a function**\n**function--->percent**"}}