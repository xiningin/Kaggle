{"cell_type":{"9e5e281d":"code","8a1df533":"code","9f47ed2a":"code","b0c76bc5":"code","fff4a747":"code","16031f67":"code","d131e292":"code","0ed2e35d":"code","cd6e36ce":"code","9f9abaf2":"markdown","4eedc5e5":"markdown","15de36ca":"markdown","3a30ef48":"markdown","cfd03357":"markdown","7fec6b1b":"markdown","59886752":"markdown"},"source":{"9e5e281d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8a1df533":"# Set up feedback system\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.sql.ex5 import *\nprint(\"Setup Complete\")","9f47ed2a":"from google.cloud import bigquery\n\n# Create a \"Client\" object\nclient = bigquery.Client()\n\n# Construct a reference to the \"chicago_taxi_trips\" dataset\ndataset_ref = client.dataset(\"covid19_govt_response\", project=\"bigquery-public-data\")\n\n# API request - fetch the dataset\ndataset = client.get_dataset(dataset_ref)","b0c76bc5":"tables = list(client.list_tables(dataset))\nfor table in tables:  \n    print(table.table_id)","fff4a747":"table_ref = dataset_ref.table(\"oxford_policy_tracker\")\n\ntable = client.get_table(table_ref)\n\nclient.list_rows(table, max_results=5).to_dataframe()","16031f67":"testing_country = \"\"\"SELECT DISTINCT country_name \n                          \nFROM `bigquery-public-data.covid19_govt_response.oxford_policy_tracker`\n\"\"\"\n# Set up the query (cancel the query if it would use too much of \n# your quota)\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)\ntesting_country_job = client.query(testing_country, job_config=safe_config) # Your code goes here\n\n# API request - run the query, and return a pandas DataFrame\ntesting_policy_result = testing_country_job.to_dataframe() # Your code goes here\n\n# View results\nprint(testing_policy_result)","d131e292":"# To select countries which have ordinal scale 1 as per testing policy\ntesting_policy_query = \"\"\"SELECT DISTINCT country_name \n                          \nFROM `bigquery-public-data.covid19_govt_response.oxford_policy_tracker`\n                           WHERE testing_policy ='1' \"\"\"\n\n# Set up the query (cancel the query if it would use too much of \n# your quota)\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)\ntesting_policy_query_job = client.query(testing_policy_query, job_config=safe_config) # Your code goes here\n\n# API request - run the query, and return a pandas DataFrame\ntesting_policy_result = testing_policy_query_job.to_dataframe() # Your code goes here\n\n# View results\nprint(testing_policy_result)\n\n","0ed2e35d":"# To select countries which have ordinal scale 2 as per testing policy\ntesting_policy_query = \"\"\"SELECT DISTINCT country_name \n                          \nFROM `bigquery-public-data.covid19_govt_response.oxford_policy_tracker`\n                           WHERE testing_policy ='2' \"\"\"\n\n# Set up the query (cancel the query if it would use too much of \n# your quota)\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)\ntesting_policy_query_job = client.query(testing_policy_query, job_config=safe_config) # Your code goes here\n\n# API request - run the query, and return a pandas DataFrame\ntesting_policy_result = testing_policy_query_job.to_dataframe() # Your code goes here\n\n# View results\nprint(testing_policy_result)","cd6e36ce":"# To select countries which have ordinal scale 3 as per testing policy\ntesting_policy_query = \"\"\"SELECT DISTINCT country_name \n                          \nFROM `bigquery-public-data.covid19_govt_response.oxford_policy_tracker`\n                           WHERE testing_policy ='3' \"\"\"\n\n# Set up the query (cancel the query if it would use too much of \n# your quota)\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)\ntesting_policy_query_job = client.query(testing_policy_query, job_config=safe_config) # Your code goes here\n\n# API request - run the query, and return a pandas DataFrame\ntesting_policy_result = testing_policy_query_job.to_dataframe() # Your code goes here\n\n# View results\nprint(testing_policy_result)","9f9abaf2":"## Covid Testing Policy across Countries- Oxford Policy Tracker data\n### H2 - Ordinal scale record of who can get tested; 0 \u2013 No testing policy ,1 \u2013 Only those who both (a) have symptoms AND (b) meet specific criteria (eg key workers, admitted to hospital, came into contact with a known case, returned from overseas), 2 \u2013 testing of anyone showing COVID-19 symptoms ;  3 \u2013 open public testing (eg \u201cdrive through\u201d testing available to asymptomatic people) No data Nb we are looking for policies about testing for having an infection (PCR tests) - not for policies about testing for immunity (antibody tests).","4eedc5e5":"### As shown above 185 countries have testing policy in place ","15de36ca":"### as shown above in empty dataframe -No country have testing policy with ordinal scale 2","3a30ef48":"### only one country -Syria with testing policy  ordinal scale 1 as per document details given above.","cfd03357":"### Only Russia have testing policy with ordinal scale \"3\"","7fec6b1b":"### There is only one table available under Covid Govt response dataset i.e. - Oxford policy tracker","59886752":"### Based on above criteria - Ordinal scale data we could identify any country's  testing policy"}}