{"cell_type":{"5412f830":"code","fc70bab8":"code","2118441f":"code","3fe599f2":"code","a8f10bf6":"code","4bf0dcd5":"code","33d36627":"code","d038ea5a":"code","4cfa8e25":"code","b815fb85":"code","2f05ae4a":"code","4220f447":"code","3cc6f7fb":"code","b359baee":"code","503ea523":"code","24b59893":"code","bc7b8ddc":"markdown","81cf8e3b":"markdown","0bc9597d":"markdown","292a4d7c":"markdown","402c5d1b":"markdown","4ff8e1c3":"markdown","0b15d591":"markdown","8a90daaa":"markdown","e1f65ce6":"markdown","bba524fd":"markdown"},"source":{"5412f830":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fc70bab8":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport re\nimport nltk\nnltk.download('stopwords')\n\nfrom itertools import product\nfrom nltk.corpus import stopwords\nfrom textblob import TextBlob","2118441f":"# prepare stopwords\nstopwords = set(stopwords.words('english'))\npd.set_option('display.max_rows', 100, 'display.max_columns', 100)\n\ndata = pd.read_csv('\/kaggle\/input\/hotel-reviews\/Datafiniti_Hotel_Reviews_Jun19.csv')\ndata.head()","3fe599f2":"data.info()","a8f10bf6":"data['reviews.title'] = data['reviews.title'].fillna('No title')\ndata['dateUpdated'] = pd.to_datetime(data['dateUpdated']).dt.date\ndata = data.drop(['id', 'dateAdded', 'keys', 'reviews.date', 'reviews.dateAdded', 'reviews.dateSeen', 'reviews.sourceURLs', 'sourceURLs', 'websites'], axis=1)\ndata.head()","4bf0dcd5":"data['country'].unique()","33d36627":"# drop country\ndata = data.drop('country', axis=1)\ndata.head()","d038ea5a":"print(data['primaryCategories'].value_counts())\nprint()\nprint(data['city'].value_counts())\nprint()\nprint(data['name'].value_counts())","4cfa8e25":"data = data.drop('primaryCategories', axis=1)","b815fb85":"_, axes = plt.subplots(1, 2, figsize=(15, 8))\nsns.histplot(x='dateUpdated', data=data, ax=axes[0])\nsns.countplot(x='reviews.rating', data=data, ax=axes[1])","2f05ae4a":"data['nlp_text'] = data['reviews.text'].apply(lambda x: ' '.join([corpus for corpus in x.split() if corpus not in stopwords]))\ndata['nlp_text']","4220f447":"# sentiment\ndef polarity(text):\n    text_blob = TextBlob(text)\n    polarity = text_blob.sentiment.polarity\n    return polarity\n\n\ndef subjectivity(text):\n    testimonial = TextBlob(text)\n    subjectivity = testimonial.subjectivity\n    return subjectivity\n\n\ndata['text_pola'] = data['nlp_text'].apply(lambda x: polarity(x))\ndata['text_subj'] = data['nlp_text'].apply(lambda x: subjectivity(x))\ndata['title_pola'] = data['reviews.title'].apply(lambda x: polarity(x))\ndata['title_subj'] = data['reviews.title'].apply(lambda x: subjectivity(x))\ndata.head()","3cc6f7fb":"province_df = data.groupby('province')[['reviews.rating', 'text_pola', 'title_pola']]\\\n                .agg(\n                    count = ('reviews.rating', 'count'),\n                    rating_min=('reviews.rating', 'min'), \n                    rating_max=('reviews.rating', 'max'),\n                    rating_avg=('reviews.rating', np.mean),\n                    text_pola_min=('text_pola', 'min'), \n                    text_pola_max=('text_pola', 'max'),\n                    text_pola_avg=('text_pola', np.mean),\n                    title_pola_min=('title_pola', 'min'), \n                    title_pola_max=('title_pola', 'max'),\n                    title_pola_avg=('title_pola', np.mean),                    \n                )\nprovince_df","b359baee":"province_df = province_df.drop('RI', axis=0)\ntop3_rating = province_df.sort_values(by='rating_avg', ascending=False)[:3]\nbottom3_rating = province_df.sort_values(by='rating_avg', ascending=True)[:3]\ndisplay(top3_rating)\ndisplay(bottom3_rating)","503ea523":"_, axes = plt.subplots(1, 2, figsize=(10, 5), sharey=True)\ntop3_rating['text_pola_avg'].plot(kind='bar', ax=axes[0])\naxes[0].set_title('Top 3 polarity Average', fontsize=25)\nbottom3_rating['text_pola_avg'].plot(kind='bar', ax=axes[1])\naxes[1].set_title('Bottom 3 polarity Average', fontsize=25)\nplt.tight_layout()\nplt.show()","24b59893":"top10_pola_provinces = province_df.sort_values(by='rating_avg', ascending=False)[:10].index\n_, axes = plt.subplots(5, 2, figsize=(20, 20), sharey=True)\nindices = product([0, 1, 2, 3, 4], [0, 1])\n\n\nfor idx, province in zip(indices, top10_pola_provinces):\n    pola_per_province = data.query(\"province==@province\").groupby('dateUpdated').agg(date_pola=('text_pola', np.mean))\n    pola_per_province = pola_per_province.sort_index()\n    pola_per_province['moving_avg'] = pola_per_province.date_pola.rolling(10, min_periods=3).mean()\n    \n    axes[idx[0], idx[1]].set_title(f'{province} in time\\n', fontsize=25)\n    axes[idx[0], idx[1]].plot(pola_per_province.index, pola_per_province.moving_avg)\n    axes[idx[0], idx[1]].tick_params(axis='x', labelrotation= 30)\n    \nplt.tight_layout()","bc7b8ddc":"<div style=\"background-color:lightgreen;padding:18px\">\n    <h1 style=\"color:gray;text-align:center;\">Sentiment analysis<\/h1>\n    <h3>I try 'What are the bottom and top states for hotel reviews by average rating?'<\/h3>\n    <h3>To try, we have to EDA and NLP<\/h3>\n<\/div>\n\n# import Modules","81cf8e3b":"<div style=\"background-color:lightblue;padding:18px\">\n    <ul>\n        <li><h3>UT, OR hotel are declining positive sentiment<\/h3><\/li>\n        <li><h3>SC, WY are increasing<\/h3><\/li>\n    <\/ul>\n<\/div>","0bc9597d":"### primaryCategories isn't able to be used efficiently for analysis.","292a4d7c":"<h2 style=\"color:red\">Obiously, provinces of the high rating are more positive sentiment than bottoms!<\/h2>","402c5d1b":"## This data has some nulls, I drop useless cols","4ff8e1c3":"## Last, seek the moving avg to see the flow of sentiment per hotel","0b15d591":"## RI's review is only 1 sample.  remove it","8a90daaa":"# Conclusion\n\n## I tried simple NLP then seek data. We got to know provinces that have high rate have positive sentiment than others.\n## In hotels, high rate hotels have various sentiment moving.\n\n## I didn't use some cols this time. If you have interests of data, try to use them deeply! \n\n## Thank you for visiting my notebook, feel free to comment, or upvotes!","e1f65ce6":"# Let's move NLP","bba524fd":"## We have to figure out 'the bottom and top states for hotel reviews by average rating'\n## Get the stats per province!"}}