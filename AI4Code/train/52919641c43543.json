{"cell_type":{"7ecf66b5":"code","16e7a9fc":"code","4f007ae3":"code","a4cf1eb6":"code","779e9393":"markdown","62fe7757":"markdown","68162876":"markdown","6ca8c764":"markdown"},"source":{"7ecf66b5":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt \n\nfrom scipy.stats import norm\nimport matplotlib.pyplot as plt","16e7a9fc":"fig, ax = plt.subplots(1, 1)\nx = np.linspace(norm.ppf(0.05),norm.ppf(0.95), 100)\nax.plot(x, norm.pdf(x),'r-', lw=3, alpha=0.5, label='norm pdf')\n\nr = norm.rvs(size=200)\nax.hist(r, density=True, histtype='stepfilled', alpha=0.2)\nplt.show()","4f007ae3":"fig, ax = plt.subplots(1, 1)\nx = np.linspace(norm.ppf(0.001),norm.ppf(0.999), 100)\nax.plot(x, norm.pdf(x),'r-', lw=3, alpha=0.5, label='norm pdf')\n\nr = norm.rvs(size=500)\nax.hist(r, density=True, histtype='stepfilled', alpha=0.2)\nplt.show()","a4cf1eb6":"fig, ax = plt.subplots(1, 1)\nx = np.linspace(norm.ppf(0.05),norm.ppf(0.95), 100)\nax.plot(x, norm.pdf(x),'r-', lw=3, alpha=0.5, label='norm pdf')\n\nr = norm.rvs(size=1000)\nax.hist(r, density=True, histtype='stepfilled', alpha=0.2)\nplt.show()","779e9393":"# pdf : 5.0% ~ 95.0%\n# rvs : Random variates 200 ","62fe7757":"------------------------------------------------------------------------------------------\n## ***rvs(loc=0, scale=1, size=1, random_state=None)***\n\n### Random variates.\n------------------------------------------------------------------------------------------\n\n##### pdf(x, loc=0, scale=1)\n\nProbability density function.\n\n##### logpdf(x, loc=0, scale=1)\n\nLog of the probability density function.\n\n##### cdf(x, loc=0, scale=1)\n\nCumulative distribution function.\n\n##### logcdf(x, loc=0, scale=1)\n\nLog of the cumulative distribution function.\n\n##### sf(x, loc=0, scale=1)\n\nSurvival function (also defined as 1 - cdf, but sf is sometimes more accurate).\n\n##### logsf(x, loc=0, scale=1)\n\nLog of the survival function.\n\n----------------------------------------------------------------------------------------\n## ***ppf(q, loc=0, scale=1)***\n\n### Percent point function (inverse of cdf \u2014 percentiles).\n----------------------------------------------------------------------------------------\n\n\n##### isf(q, loc=0, scale=1)\n\nInverse survival function (inverse of sf).\n\n##### moment(n, loc=0, scale=1)\n\nNon-central moment of order n\n\n##### stats(loc=0, scale=1, moments=\u2019mv\u2019)\n\nMean(\u2018m\u2019), variance(\u2018v\u2019), skew(\u2018s\u2019), and\/or kurtosis(\u2018k\u2019).\n\n##### entropy(loc=0, scale=1)\n\n(Differential) entropy of the RV.\n\n##### fit(data)\n\nParameter estimates for generic data. See scipy.stats.rv_continuous.fit for detailed documentation of the keyword arguments.\n\n##### expect(func, args=(), loc=0, scale=1, lb=None, ub=None, conditional=False, **kwds)\n\nExpected value of a function (of one argument) with respect to the distribution.\n\n##### median(loc=0, scale=1)\n\nMedian of the distribution.\n\n##### mean(loc=0, scale=1)\n\nMean of the distribution.\n\n##### var(loc=0, scale=1)\n\nVariance of the distribution.\n\n##### std(loc=0, scale=1)\n\nStandard deviation of the distribution.\n\n##### interval(alpha, loc=0, scale=1)\n\nEndpoints of the range that contains fraction alpha [0, 1] of the distribution","68162876":"# pdf : 2.0% ~ 98.0%\n# rvs : Random variates 1000 ","6ca8c764":"# pdf : 0.1% ~ 99.9%\n# rvs : Random variates 500 "}}