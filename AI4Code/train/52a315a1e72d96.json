{"cell_type":{"11db27f0":"code","ecfbbb74":"code","2c77de0a":"code","4aea8b97":"code","cea43d91":"code","064f09b4":"code","e8ab499e":"code","043d707f":"code","19229b7e":"code","1b4a7acc":"code","71271e1c":"code","1964a712":"code","9f16093e":"code","5dc48c9c":"code","fc38ce72":"code","a0e4e7d7":"code","01bc2169":"code","e0616c36":"code","20427cb7":"code","7f4aeb08":"code","860f2c61":"code","0d71e17f":"code","b72704b3":"code","e14ddc6d":"code","f393a725":"code","b593436b":"code","f5415cfb":"code","cc86d46a":"code","8df5474a":"code","46a68432":"code","e504a6ec":"code","5fdf014b":"code","bcf4fa4c":"code","57465b4f":"code","28dae293":"code","c9cd89e4":"code","8424ee36":"code","73e5acf1":"code","1991afa4":"code","d56aaa31":"markdown","af67d5ee":"markdown","bd2a85bd":"markdown","bc3c1a3c":"markdown","15e755cd":"markdown","11925a22":"markdown","416c37fe":"markdown","277e77d9":"markdown","936ebd55":"markdown","e3a4eaf1":"markdown","a0e462fb":"markdown","9731b971":"markdown","b2277f15":"markdown","cc903b68":"markdown","e322ebb9":"markdown","f229a16c":"markdown","6f5cb242":"markdown","5729306a":"markdown","772b8db5":"markdown","789bf433":"markdown","fac8d562":"markdown","94ff6d24":"markdown","a7070c35":"markdown","f448180d":"markdown"},"source":{"11db27f0":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt \nimport seaborn as sns\nfrom datetime import datetime\nimport calendar\nfrom pandas.api.types import CategoricalDtype","ecfbbb74":"customers = pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/olist_customers_dataset.csv\")\nitems = pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/olist_order_items_dataset.csv\")\npayments = pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/olist_order_payments_dataset.csv\")\norders = pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/olist_orders_dataset.csv\")\nproducts = pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/olist_products_dataset.csv\")\ncategory_translation = pd.read_csv(\"\/kaggle\/input\/brazilian-ecommerce\/product_category_name_translation.csv\")\n\n","2c77de0a":"datasets = [customers, items, payments, orders, products, category_translation]\ntitles = [\"customers\", \"items\", \"payments\", \"orders\", \"products\", \"category_translation\"]\n\n#To gather practical information about all datasets \ninfo_df = pd.DataFrame({},)\ninfo_df['dataset']= titles\ninfo_df['cols'] = [', '.join([col for col, null in df.isnull().sum().items() ]) for df in datasets]\ninfo_df['cols_no']= [df.shape[1] for df in datasets]\ninfo_df['null_no']= [df.isnull().sum().sum() for df in datasets]\ninfo_df['null_cols_no']= [len([col for col, null in df.isnull().sum().items() if null > 0]) for df in datasets]\ninfo_df['null_cols'] = [', '.join([col for col, null in df.isnull().sum().items() if null > 0]) for df in datasets]\n\n\ninfo_df.style.background_gradient(cmap='coolwarm')\n","4aea8b97":"df = pd.merge(orders,payments, on=\"order_id\")\ndf = df.merge(customers, on=\"customer_id\")\ndf = df.merge(items, on=\"order_id\")\ndf = df.merge(products, on=\"product_id\")\ndf = df.merge(category_translation, on=\"product_category_name\")\n\ndf.dropna(inplace=True)  #Keep the DataFrame with valid entries in the same variable\n\ndf.info()\ndf.isnull().sum().sort_values()  # To get the number of missing value in each row if there is still any. ","cea43d91":"df.sample(10)","064f09b4":"#'order_purchase_timestamp' and 'order_delivered_customer_date' are object \ndf[['order_purchase_timestamp', 'order_delivered_customer_date']]=df[['order_purchase_timestamp', 'order_delivered_customer_date']].apply(pd.to_datetime)\n\n# To extract \"year\" from date. \ndf['Year'] = df['order_purchase_timestamp'].dt.year\ndf.groupby('Year').size().plot(\n    kind = 'bar',\n    figsize=(12,12),  \n)\nplt.title('Years',fontsize=25)","e8ab499e":"df['Year'] = df['order_purchase_timestamp'].dt.year\ndf.groupby('Year').size().plot(\n    kind = 'line',\n    figsize=(12,12)\n)\nplt.title('Years',fontsize=25)","043d707f":"df['Year']  # Check column 'Year' values to check it be right.","19229b7e":"df['Month'] =  pd.Series(pd.Categorical(df['order_purchase_timestamp'].dt.month_name(), categories=list(calendar.month_name)))\ndf['Month']\ndf.groupby('Month').size().plot(\n    kind = 'bar',\n    figsize=(12,12)\n)\nplt.title('Months',fontsize=25)","1b4a7acc":"month = df.groupby('Month').size().sort_values()\nfig=plt.figure(figsize=(10,8))\nsns.set_style(\"darkgrid\")\nsns.barplot(y=month.index, x=month.values)\nplt.title('Months',fontsize=20)","71271e1c":"df['MonthY'] = df['order_purchase_timestamp'].dt.strftime('%b%Y')\ndf['MonthY']","1964a712":"df.groupby('MonthY').size().sort_values().plot(\n    kind = 'bar',\n    figsize=(8,5)\n)","9f16093e":"Month_Year = df.groupby('MonthY').size().sort_values()\n\nfig=plt.figure(figsize=(10,8))\nsns.set_style(\"darkgrid\")\nsns.barplot(y=Month_Year.index, x=Month_Year.values)\nplt.title('Month_Year',fontsize=20)","5dc48c9c":"df['Day'] = pd.Series(pd.Categorical(df['order_purchase_timestamp'].dt.day_name(), categories=list(calendar.day_name)))\ndf.groupby('Day').size().sort_values().plot(\n    kind = 'bar',\n    figsize=(8,5)\n)","fc38ce72":" day = df.groupby('Day').size().sort_values()\n\n fig=plt.figure(figsize=(10,8))\nsns.set_style(\"darkgrid\")\nsns.barplot(y=day.index, x=day.values)\nplt.title('Days',fontsize=20)","a0e4e7d7":"top_10_category = df[\"product_category_name_english\"].value_counts().sort_values(ascending=False)[:10]\n\nfig=plt.figure(figsize=(10,8))\nsns.set_style(\"darkgrid\")\nsns.barplot(y=top_10_category.index, x=top_10_category.values)\nplt.title('Top 10 product category',fontsize=20)","01bc2169":"top_10_category","e0616c36":"average_price = df.groupby(\"product_category_name_english\")[\"price\"].agg(np.mean).sort_values()\naverage_price \nfig=plt.figure(figsize=(12,10))\nsns.set_style(\"darkgrid\")\nsns.barplot(y=average_price.index, x=average_price.values)\nplt.title('average_price',fontsize=20)","20427cb7":"average_price.sample(10)","7f4aeb08":"top_category = df[df['product_category_name_english'].isin(top_10_category.index)]\nprice_top_category=round(top_category.groupby(\"product_category_name_english\")[\"price\"].agg(np.mean).sort_values(ascending=False), 2)\nprice_top_category\n\n#Prices are in Brazilian currency.","860f2c61":"fig=plt.figure(figsize=(10,8))\nsns.set_style(\"darkgrid\")\nsns.barplot(y=price_top_category.index, x=price_top_category.values)\nplt.title('average_price',fontsize=20)","0d71e17f":"\nfig=plt.figure(figsize=(10,8))\nsns.set_style(\"whitegrid\")\nsns.boxplot(x=average_price)\nplt.title('Average Price',fontsize=20)","b72704b3":"fig=plt.figure(figsize=(10,8))\nsns.set_style(\"whitegrid\")\nsns.boxplot(x=price_top_category)\nplt.title('Top Categories Average Price',fontsize=20)","e14ddc6d":"df.payment_type.sample(15)","f393a725":"df.payment_type.nunique()","b593436b":"df.payment_type.unique()","f5415cfb":"df[\"payment_type\"].value_counts().plot(\n    kind=\"pie\",\n    autopct=\"%1.1f%%\",\n    fontsize=20,\n    figsize=(12,12),\n    shadow=True\n    \n)\nplt.title('The Most Frequent Payment Type'.title() , fontsize=20);","cc86d46a":"df.groupby(\"Year\")['payment_type'].value_counts().plot(kind='bar')","8df5474a":"top_states = df[\"customer_state\"].value_counts()\ntop_states","46a68432":"fig=plt.figure(figsize=(16,10))\nsns.set_style(\"darkgrid\")\nsns.barplot(y=top_states.index, x=top_states.values)\nplt.title('states',fontsize=20)","e504a6ec":"df['derivery_time'] = df['order_delivered_customer_date'].astype(int)- df['order_purchase_timestamp'].astype(int)\n\ndelivery_per_state = df.groupby(\"customer_state\")['derivery_time'].mean()\ndelivery_per_state.plot(\n    kind='bar',\n    figsize=(10,7)\n)","5fdf014b":"#This function colours values.\ndef adding_colour(val):\n  if val < 0:\n    color = 'red'\n  elif val < 1:\n    color = 'green'\n  else:\n    color = 'black'      \n  return 'color: %s' % color\n\n\ncorr = df.corr().style.applymap(adding_colour) #To apply a function to a data frame we should use the .applymap() method\ncorr","bcf4fa4c":"round(df['freight_value'].corr(df['price']), 2)","57465b4f":"df.plot(\n    kind = 'scatter',\n    x = 'price',\n    y = 'freight_value',\n)","28dae293":"round(df['freight_value'].corr(df['product_weight_g']), 2)","c9cd89e4":"df.plot(\n    kind = 'scatter',\n    x = 'product_weight_g',\n    y = 'freight_value',\n)","8424ee36":"def add_colour(val):\n  if val < 0:\n    color = 'red'\n  else:\n    color = 'green'      \n  return 'color: %s' % color\n\ncov = df.cov().style.applymap(add_colour)\ncov","73e5acf1":"round(df['freight_value'].cov(df['price']), 2)","1991afa4":"round(df['freight_value'].cov(df['product_weight_g']), 2)","d56aaa31":"- Most customers are from Sao Paulo, followed by Rio de Janeiro.\n---\n\n- derivery_time:The time between purchasing date and reaching to destination","af67d5ee":"\n\n---\n\n\n- Average price on each category:","bd2a85bd":"- Payment methods per each year:","bc3c1a3c":"- I expected November( Black Friday) or December(X-mas) to have the highest value. It could happen either because the whole data not used or there are more important events over other months in Brazil.","15e755cd":"\n\n---\n\n\n---\n# Questions\n\n\n**1. How e_commerce has evolved over time in Brazil?**\n\n**2. What is top 10 products?**\n\n**3. What is average price on each product category?**\n\n\n\n**4. On what days of week brazilians customers tend to do online shopping?**\n\n**5. How customers are distributed over the states?**\n\n**6. How many payment methods are available? and which one is the most popular?**\n\n**7. Is there a correlation between the freight value and item's price?**\n\n**8. Is there a correlation between the freight value and item's weight?**\n\n\n----------------------------------------------------\n----\n\n\n\n- Let's have a look at e_commerce evolution over time from 2016 to 2018 in Brazil.\n\n\n\n\n\n\n\n","11925a22":"---\n\n\n- Correlation between the freight value and item's price:","416c37fe":"*The most commen payment method is \"Credit Card\".\n\n*Boleto banc\u00e1rio is Brazil\u2019s most popular cash-based payment method that is virtually fraud-proof. The payment method generates over 3.7 billion transactions per year and dominates 25% of all online payment transactions.\n\n------\n# Customer\n\n\n![alt text](https:\/\/st4.depositphotos.com\/1374738\/23094\/v\/950\/depositphotos_230940566-stock-illustration-map-brazil-divisions-states.jpg)\n\n- Customers distribution over the states.","277e77d9":"Welcome! This is a Brazilian ecommerce public dataset of orders made at Olist Store. The dataset has information of 100k orders from 2016 to 2018 made at multiple marketplaces in Brazil. Its features allows viewing an order from multiple dimensions: from order status, price, payment and freight performance to customer location, product attributes and finally reviews written by customers. We also released a geolocation dataset that relates Brazilian zip codes to lat\/lng coordinates.\n\nThis is real commercial data, it has been anonymised, and references to the companies and partners in the review text have been replaced with the names of Game of Thrones great houses.\n\n---\n# Introduction\n\nIn this kernel, I would like to analyse Brazilian E-Commerce Public Dataset by Olist, step by step.\n\nI've tried to extract information from the 'customer side' and convert them to observations. By analysing \nhow different factors influence purchasing decisions.\n\n---\n\n---\n# Data Preparation\n- Importing the Required Libraries","936ebd55":"# Brazilian E-Commerce Public Dataset by Olist\n![alt text](https:\/\/www.cloudways.com\/blog\/wp-content\/uploads\/ecommerce-website-checklist-b-.jpg)","e3a4eaf1":"- In the follwing part, months and years are joined. It's beneficial to observe months of each year at the same time.","a0e462fb":"- It's good to know on what days of week,the Brazilians spend more time on online shopping. It helps the retailers to offer promotions at right time. ","9731b971":"---\n## Data Schema\n![alt text](https:\/\/i.imgur.com\/HRhd2Y0.png)\n- As shown in the Data Schema, the datasets that  used in this project, can be merged. Creating one dataset which includes all the columns would be very efficient in this task.","b2277f15":"-------------------------\n# Data Cleaning\n- Showing a summary of datasets in one table.\n- Checking missing values for each column\n- Using dropna() to remove rows with Null\/NaN values.","cc903b68":"- What is the most frequent payment type?","e322ebb9":"---\n- Average price of the 'Top 10 category' :","f229a16c":"- It is obvious there is a huge jump from 2016 to 2017. However growing from 2017 to 2018 is quite steady.","6f5cb242":"- There is moderate correlation between freight value, item's price and item's weight.\n\n----\n# Covariance\nCovariance measures the directional relationship between the returns on two assets. A positive covariance means that asset returns move together while a negative covariance means they move inversely.","5729306a":"- Loading the Datasets","772b8db5":"- Correlation between the freight value and item's weight:","789bf433":"- Let's have a look at online purchasing per  month individually.","fac8d562":"- We can see more online shopping happen on weekdays and less on weekends.\n\n\n\n\n---\n# Top 10 Product\n\n- There is no name for the items in the dataset, each item has item_id. Therefore we relate each item by category which belongs to.\nBelow the top 10 popular categories are obtained.","94ff6d24":"---\n#  Payments\n\n- How many different of payment are available in Brazil's e_commerce?","a7070c35":"\n\n---\n\n\n\n---\n\n\n\n---\n\n\n# Acknowledgement\nThanks to Olist for releasing this dataset and Kaggle website to share it.\n\nThanks to Dr Rachid Hamadi, Dr Weicong Kong and teaching team for helping me through this course. \n\n I got inspired from the Kaggle users' notebooks, learnt a lot and created my own EDA.\n \n  Hope you liked my project.\n\nreferences:\n- https:\/\/www.kaggle.com\/olistbr\/brazilian-ecommerce\n- https:\/\/www.cloudways.com\/blog\/ecommerce-website-checklist\/\n- https:\/\/stackoverflow.com\/\n\n- https:\/\/wdrfree.com\/stock-vector\/download\/map-of-brazil-with-divisions-of-states-230940566\n\n- https:\/\/medium.com\/@kristina.reut96\/you-think-you-know-stylish-tables-ee59beadb487\n\n- https:\/\/docs.paymentwall.com\/payment-method\/boleto","f448180d":"- The longest delivery time belongs to the State of Paraiba. We don't have sellers' dataset here to compare the distance between the origin (seller's location) and destination(buyer's location).\n\n\n\n---\n#  correlation Between Features\n- correlation indicates the interdependence between two or more variables. The value of correlation lies between -1 and 1.\nBy the way, Correlation doesn't imply Causation."}}