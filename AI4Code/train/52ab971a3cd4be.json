{"cell_type":{"d9d51ed8":"code","f1ef1e37":"code","da73d15d":"code","cabb7716":"code","3b2e70a9":"code","f20c1737":"code","77551f85":"code","bfe58de3":"code","d34aca78":"code","aae1914d":"code","4aa18404":"code","1e2ad88a":"markdown","20288e78":"markdown","b9e19d7c":"markdown","5e7df7d9":"markdown","7e8b17b0":"markdown","7e62bbae":"markdown","a24aaf86":"markdown"},"source":{"d9d51ed8":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","f1ef1e37":"import pandas as pd\nimport numpy as np\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.pipeline import make_pipeline","da73d15d":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')\nsub = pd.read_csv('..\/input\/titanic\/gender_submission.csv')","cabb7716":"train[\"Age\"] = train[\"Age\"].fillna(train[\"Age\"].mean()) #filling missing values with mean\ntest[\"Age\"] = test[\"Age\"].fillna(test[\"Age\"].mean())\ntrain[\"Cabin\"] = train[\"Cabin\"].fillna(train[\"Cabin\"].mode()[0]) #filling missing values with mode\ntest[\"Cabin\"] = test[\"Cabin\"].fillna(test[\"Cabin\"].mode()[0])\ntrain[\"Embarked\"] = train[\"Embarked\"].fillna(train[\"Embarked\"].mode()[0])\ntest[\"Fare\"] = test[\"Fare\"].fillna(test[\"Fare\"].mean())","3b2e70a9":"train[\"Sex\"] = [1 if i == \"male\" else 0 for i in train[\"Sex\"]] \ntest[\"Sex\"] = [1 if i == \"male\" else 0 for i in test[\"Sex\"]]\ntrain[\"Embarked\"] = [0 if i == \"S\" else i for i in train[\"Embarked\"]] \ntrain[\"Embarked\"] = [1 if i == \"C\" else i for i in train[\"Embarked\"]] \ntrain[\"Embarked\"] = [2 if i == \"Q\" else i for i in train[\"Embarked\"]] \ntest[\"Embarked\"] = [0 if i == \"S\" else i for i in test[\"Embarked\"]]\ntest[\"Embarked\"] = [1 if i == \"C\" else i for i in test[\"Embarked\"]]\ntest[\"Embarked\"] = [2 if i == \"Q\" else i for i in test[\"Embarked\"]]","f20c1737":"feature_cols = [\"Pclass\",\"Age\",\"Sex\",\"Fare\",\"Embarked\"]\nX_train = train[feature_cols]\nX_train","77551f85":"X_test = test[feature_cols]\ny_train = train[\"Survived\"]\ny_train","bfe58de3":"model = make_pipeline(StandardScaler(),SGDClassifier(max_iter=1000, tol=1e-3,random_state=42))\nmodel.fit(X_train,y_train)","d34aca78":"predict = model.predict(X_test)\npredict","aae1914d":"sub[\"Survived\"] = predict\nsub","4aa18404":"sub.to_csv('submission.csv',index=False)","1e2ad88a":"* Finally, We make the submission file!\n* The name of submission file should be \"submision.csv\".","20288e78":"# Import liraries and read data","b9e19d7c":"# Submission","5e7df7d9":"# Filling Missing Values","7e8b17b0":"# Predict","7e62bbae":"# Convert categorical features to numerical","a24aaf86":"* In this notebook, we predict Survived passengers by using SGDClassifier.\n* SGD means \"Stochastic Gradient Descent\".\n* If you like, please feel free to upvote."}}