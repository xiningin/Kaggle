{"cell_type":{"967eb002":"code","ef00d69b":"code","f7bdde43":"code","13aa9adc":"code","49896fe1":"code","23acd6c0":"code","f66821bb":"code","ae22971f":"code","2fd4b09a":"code","16b1ea34":"code","cdf37e75":"code","cf42ab90":"code","50785698":"code","317da5f2":"code","eb8ae305":"code","09b0290a":"code","da399ac0":"code","66fdc801":"code","29e36f72":"code","2f74605c":"code","5bd778c9":"code","a23ef518":"code","ea42554a":"code","e57ce569":"code","7b35d4a3":"code","68ff7a58":"code","1f8998fc":"code","8ad451fe":"code","2f79b253":"code","0f22529a":"code","6e1991e7":"code","ea047768":"markdown","21d55202":"markdown","077f61db":"markdown","ae3faf9d":"markdown","92e5a282":"markdown","c252c29c":"markdown","8bf27eec":"markdown","14bbc3f8":"markdown","d70c033a":"markdown","de9ae584":"markdown","0f457b1e":"markdown","e01f1a18":"markdown"},"source":{"967eb002":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import roc_auc_score\nfrom imblearn.over_sampling import SMOTE\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.ensemble import RandomForestClassifier\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ef00d69b":"pd.set_option('display.width', 100)\npd.set_option('display.max_columns', 20)\nsns.set_theme(color_codes=True, style='darkgrid', \n              palette='deep', font='sans-serif')","f7bdde43":"# Load data\ntrainData = pd.read_csv('..\/input\/loan-prediction-based-on-customer-behavior\/Training Data.csv')","13aa9adc":"# Getting the first 5 rows of data\ntrainData.head()","49896fe1":"# Getting the last 5 rows of data\ntrainData.tail()","23acd6c0":"# Checking the shape of data\ntrainData.shape","f66821bb":"# Checking the null value\ntrainData.isnull().sum()","ae22971f":"# Getting the information \ntrainData.info()","2fd4b09a":"# Checking the target\ntrainData.Risk_Flag.value_counts()","16b1ea34":"labelEncoder = LabelEncoder()","cdf37e75":"# Accommodate data into dataVariables\ndata = trainData\n\n# Encode the object data to type int\nfor e in data.columns:\n    if data[e].dtype == 'object':\n        labelEncoder.fit(list(data[e].values))\n        data[e] = labelEncoder.transform(data[e].values)\n        \n        # Accommodate the data that has been changed\n        trainData = data","cf42ab90":"# Checking the first 5 rows of data\ntrainData.head()","50785698":"# Getting the information\ntrainData.info()","317da5f2":"# Getting the statistical info\ntrainData.describe()","eb8ae305":"# Make a correlation data to knowing Value Strength and Direction of Linear Relationship\ncorr = trainData.corr()\ncorr","09b0290a":"# Constructing a heatmap to understand the correlation\nplt.figure(figsize=(10, 10))\nsns.heatmap(corr, cbar=True, square=True, fmt='.1f', annot=True, annot_kws={'size': 8}, cmap='YlGnBu')\nplt.plot()","da399ac0":"corr[\"Risk_Flag\"].sort_values(ascending=False)","66fdc801":"# Create a histogram\ntrainData.hist(figsize=(12, 12))\nplt.show()","29e36f72":"# Checking the structure of the data\ntrainData.sample(11, random_state=1).T","2f74605c":"# Coefficient of Risk Flag\ncovRiskFlag = ((trainData['Risk_Flag'].std()\/trainData['Risk_Flag'].mean()) * 100)\nprint(f'Coefficient Of Variation Potability : {covRiskFlag}%')","5bd778c9":"dataX = trainData.drop(['Risk_Flag'], axis=1)\ndataY = trainData['Risk_Flag']","a23ef518":"trainX, testX, trainY, testY = train_test_split(dataX, dataY, \n                                                test_size=.2,\n                                                random_state=12)","ea42554a":"# Checking the value of train X\ntrainX.value_counts()","e57ce569":"# Checking the value of test X\ntestX.value_counts()","7b35d4a3":"# Checking the value of train Y\ntrainY.value_counts()","68ff7a58":"# Checking the value of test Y\ntestY.value_counts()","1f8998fc":"sm = SMOTE(random_state=12)\ntrainXres, trainYres = sm.fit_resample(trainX, trainY)","8ad451fe":"# Our model\nmodel = RandomForestClassifier(n_estimators=500, \n                               random_state=12, \n                               min_samples_leaf=2, \n                               criterion='entropy')","2f79b253":"# Fit model\nmodel.fit(trainXres, trainYres)","0f22529a":"# Predict \npredY = model.predict(testX)","6e1991e7":"# Print roc_auc_score\nprint(roc_auc_score(testY, predY))","ea047768":"# **Load Data Train**","21d55202":"**Coefficient of Variation**\n\nThe coefficient of variation is a measure of variance that can be used to compare a data distribution that has different units.\n\n* **The higher the Coefficient of Variation** = the wider the data you have compared to the average data (more difficult to predict).\n* **The Lower Coefficient of Variation** = The narrower the data you have compared to the Average data (Easier to predict).","077f61db":"# **Divide and Split Data**","ae3faf9d":"# **Upsampling Data**","92e5a282":"# **EDA**","c252c29c":"as you can see the output above, the **coefficient of variation is so high**, which mean, is so **difficult to predict**.","8bf27eec":"# **Check and Clean Data Train**","14bbc3f8":"Id - City Ownership have a better correlation.","d70c033a":"# **Train and Predict**","de9ae584":"# **Encode**\n\nwe need to encode the data since the data have a categorical data, and i'm using LabelEncoder here.","0f457b1e":"upsampling the target using **SMOTE**, because we can see the risk flag data **have a huge difference**.","e01f1a18":"# **Import Libraries**"}}