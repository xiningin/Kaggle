{"cell_type":{"01648f65":"code","f795d03d":"code","61d9165a":"code","662ec94e":"code","e1eb957b":"code","fe79df9b":"code","3d55f7b2":"code","100b28b1":"markdown","c361017a":"markdown","792459c8":"markdown","6352b10a":"markdown","77561978":"markdown","06180cf0":"markdown","7143dfbe":"markdown"},"source":{"01648f65":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","f795d03d":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport tensorflow as tf\ntf.__version__\n\nfrom sklearn.metrics import classification_report, confusion_matrix","61d9165a":"train=pd.read_csv('\/kaggle\/input\/digit-recognizer\/train.csv')\ntest=pd.read_csv('\/kaggle\/input\/digit-recognizer\/test.csv')\nsample_submission=pd.read_csv('\/kaggle\/input\/digit-recognizer\/sample_submission.csv')\n\nX_train=train.drop(columns=['label']).values\ny_train=train.label.values\n#Normalize the data\nX_train=tf.keras.utils.normalize(X_train, axis=1)\nX_test=tf.keras.utils.normalize(test, axis=1).values\n\nprint(X_train.shape, y_train.shape, X_test.shape)\n\nX_test1 = X_test.reshape(X_test.shape[0],28,28,1)\nX_train1 = X_train.reshape(X_train.shape[0],28,28,1)","662ec94e":"new_model=tf.keras.models.load_model('\/kaggle\/input\/digit-recognizer-98-8-out-sample-accuracy\/my_digit_recognizer')","e1eb957b":"y_pred_train=new_model.predict_classes(X_train1)\ny_pred=new_model.predict_classes(X_test1)","fe79df9b":"cm=confusion_matrix(y_train,y_pred_train)\ncm=pd.DataFrame(cm, index=[i for i in range(10)], columns=[i for i in range(10)])\nplt.figure(figsize=(10,10))\nsns.heatmap(cm, cmap='Blues',linecolor='black',linewidths=1,annot=True,fmt='')","3d55f7b2":"X_test_1=X_test.reshape(X_test.shape[0],28,28)\nplt.imshow(X_test_1[100])\nplt.show()\nprint('Prediction: ', y_pred[100])","100b28b1":"**Data Set**","c361017a":"**This notebook is for learning computer vision fundamentals with the famous MNIST data using a previously trained saved model of 2D CNN**","792459c8":"**Result Analysis**","6352b10a":"**Please upvote if you like this or find this notebook useful, thanks.**","77561978":"**Load the saved model which is done by committing the trained kernel notebook, then make a copy using fork, then click add data>>>kernel output files>>> your work in the new notebook**","06180cf0":"**Let's test the model**","7143dfbe":"# Load Previously Trained Model-2D CNN"}}