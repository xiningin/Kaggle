{"cell_type":{"fad5ebfc":"code","1dafdc73":"code","b873bd8c":"code","0b21b536":"code","aa4aa5bd":"code","aa9812f5":"code","79165114":"code","a1f2ff05":"code","5c77cfb4":"code","fb26a48f":"code","1e0a1309":"code","237e1fca":"code","63e55eed":"code","42257265":"code","18ace74c":"code","8640152b":"code","c121d563":"code","9f6b0fee":"code","9c460255":"code","b31ec631":"code","56ef0321":"code","53caa5c0":"code","af2ec8fe":"code","12eb68e1":"code","311972c6":"code","3c95ab84":"code","b861fc26":"code","f68e6227":"code","a8001bea":"code","b20995eb":"code","6f1f98ad":"code","2a88391a":"code","156c3544":"code","34fe1b40":"code","2fe9001c":"code","399d2145":"code","c4fc0d62":"code","3917285e":"code","1a79eeeb":"code","48393d83":"code","e86c8e22":"code","ced36ebc":"code","c26ba23e":"code","4f7b70be":"code","c37493e8":"code","0dc19398":"code","7941ecc1":"code","bf1e591f":"code","f3b7c1cc":"code","d0e5c0f0":"code","3a3dc299":"code","7ea740ce":"code","77883736":"code","bd7e8245":"code","c15c9821":"code","7ef82f30":"code","cd09d625":"code","b9d59fc1":"code","fc7b202a":"code","02b57088":"code","81c14282":"code","3c44fd71":"code","c38836ab":"code","d24350b6":"code","ee6ad613":"code","48302343":"markdown","2fd22eca":"markdown","b69eece9":"markdown","52dfdf91":"markdown","86d9c411":"markdown"},"source":{"fad5ebfc":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os # used by kaggle's kernel to setup enviroment\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nfrom PIL import Image # Used for creating images from csv file\nimport matplotlib.pyplot as plt # Used for displaying the images\nimport tensorflow.keras as keras # Importing Keras library\nfrom sklearn.model_selection import train_test_split # Used for creating train and validation set","1dafdc73":"df = pd.read_csv('..\/input\/digit-recognizer\/train.csv') # Loads the train csv file into pandas dataframe","b873bd8c":"df.head()","0b21b536":"df['label'].value_counts()# Count of no of pictures for each digit","aa4aa5bd":"max(df['pixel0']) # A number of pixels have no information for any image, ex pixel0","aa9812f5":"# # Creating a list of images which are 2d arrays of size 28x28 from the csv file\n# images = [] # Stores all the images\n# img = [] # Stores one image at a time\n# row = []\n# for i in range(0,df.shape[0]):\n#     for j in range(0,785):\n#         if(j%28 == 0 and j!=0):\n#             img.append(row)\n#             row = []\n#             if j!=784:\n#                 row.append(df['pixel'+str(j)][i])\n#         else:\n#             row.append(df['pixel'+str(j)][i])\n#     images.append(img)\n#     img = []","79165114":"images_new = np.array(df.drop(columns = ['label']),dtype= np.float32)\/255","a1f2ff05":"images_new = images_new.reshape(-1,28,28,1)","5c77cfb4":"labels = df['label']\nlabels= keras.utils.to_categorical(labels,num_classes = 10)","fb26a48f":"plt.figure(figsize = (12,7))\nplt.subplot(2,2,1)\nplt.imshow(images_new[6],cmap = 'gray')\nplt.subplot(2,2,2)\nplt.imshow(images_new[22],cmap = 'gray')\nplt.subplot(2,2,3)\nplt.imshow(images_new[105],cmap = 'gray')\nplt.subplot(2,2,4)\nplt.imshow(images_new[200],cmap = 'gray')\n","1e0a1309":"plt.figure(figsize = (12,7))\nplt.subplot(2,2,1)\nplt.imshow(images_new[100],cmap = 'gray')\nplt.subplot(2,2,2)\nplt.imshow(images_new[101],cmap = 'gray')\nplt.subplot(2,2,3)\nplt.imshow(images_new[135],cmap = 'gray')\nplt.subplot(2,2,4)\nplt.imshow(images_new[290],cmap = 'gray')","237e1fca":"# Pixel values at the edges always zero , as the image has black background","63e55eed":"## Preparing data for model training","42257265":"data = df.drop(columns = ['label'])\n#Collecting pixels which never have non zero values\nredundant = []\nj = 0\nfor i in data.columns:\n    if max(data[i])==0:\n        redundant.append(j)\n    j = j+1    ","18ace74c":"print(redundant)","8640152b":"len(redundant)","c121d563":"# Creating the list of images which are redundant (no non zero values)\ndrop = []\nfor i in redundant:\n    drop.append('pixel'+str(i))","9f6b0fee":"len(drop)","9c460255":"# Droppping the redundant pixels\ndata_train = data.drop(columns = drop)","b31ec631":"data_train.head()","56ef0321":"print(data_train['pixel500'].unique())\nprint(len(data_train['pixel500'].unique()))","53caa5c0":"# Normalizing The data set by dividing each value by 255\ndata_normalized = data_train\/255","af2ec8fe":"data_normalized['pixel500'].unique()","12eb68e1":"len(data_normalized.columns)","311972c6":"data_normalized['labels']= df['label']","3c95ab84":"# Creating a train and a validation set\ntrain,val = train_test_split(data_normalized,test_size = 0.2)","b861fc26":"train = pd.DataFrame(train)\nval = pd.DataFrame(val)","f68e6227":"train.columns = data_normalized.columns\nval.columns = data_normalized.columns\ntrain.head()","a8001bea":"train_labels = train['labels']","b20995eb":"val_label = val['labels']\nval = val.drop(columns = ['labels'])","6f1f98ad":"train.drop(columns = ['labels'],inplace = True)\ntrain.shape","2a88391a":"# train = train.to_numpy()\n# val = val.to_numpy()","156c3544":"# train","34fe1b40":"# Creating a neural net with single hidden layer of 128 neurons.\nkeras.backend.clear_session()\nmodel = keras.models.Sequential([\n    keras.layers.Dense(128,activation = 'relu',input_dim =708),\n    keras.layers.Dense(10,activation = 'softmax')\n])\n# Setting callback early stopping to prevent model to over train on the training data\n# Setting model checkpoint call back to save the model with the best validation accuracy in the training \n# period\nearly = keras.callbacks.EarlyStopping(patience = 10)\nmodel_check = keras.callbacks.ModelCheckpoint('model.h5',save_best_only = True)\nmodel.compile(loss = 'sparse_categorical_crossentropy',optimizer = 'adam',metrics = ['accuracy'])\nhistory = model.fit(train,train_labels,epochs = 600,validation_data = (val,val_label),callbacks = [model_check,early])","2fe9001c":"sample = pd.read_csv('..\/input\/digit-recognizer\/sample_submission.csv')","399d2145":"sample.head()","c4fc0d62":"model = keras.models.load_model('model.h5')","3917285e":"test = pd.read_csv('..\/input\/digit-recognizer\/test.csv')\ntest = test.drop(columns = drop)\npredictions = model.predict(test)","1a79eeeb":"pred = []\nfor i in predictions:\n    k = 0\n    for j in i:\n        if j>0.5:\n            pred.append(k)\n        k = k+1  ","48393d83":"test = pd.read_csv('..\/input\/digit-recognizer\/test.csv')\ndrop = test.columns","e86c8e22":"test['Label'] = pred","ced36ebc":"test = test.drop(columns = drop)\n","c26ba23e":"ImageId = []\nfor i in range(1,28001):\n    ImageId.append(i)","4f7b70be":"test['ImageId'] = ImageId","c37493e8":"test.head()","0dc19398":"test.to_csv('Submit_2.csv',index = False)","7941ecc1":"images_new.shape","bf1e591f":"images_train = images_new.reshape(28,28,1,-1)","f3b7c1cc":"images_train.shape","d0e5c0f0":"images_train[:,:,:,2].shape","3a3dc299":"plt.imshow(images_train[:,:,:,2])","7ea740ce":"nRows,nCols,nDims = images_new.shape[1:]\ntrain_data = images_new.reshape(images_new.shape[0], nRows, nCols, nDims)\n# test_data = .reshape(test_images.shape[0], nRows, nCols, nDims)\ninput_shape = (nRows, nCols, nDims)\n\ntrain_data = train_data.astype('float32')\n# test_data = test_data.astype('float32')","77883736":"train_data\/=255","bd7e8245":"train_data.shape","c15c9821":"labels.shape","7ef82f30":"keras.backend.clear_session()\nmodel = keras.models.Sequential([\n                                    keras.layers.Conv2D(32,(3,3),batch_size = 32,activation= 'relu',padding = 'same',input_shape = input_shape),\n                                    keras.layers.MaxPooling2D(2,2),\n                                    keras.layers.Conv2D(16,(3,3),activation= 'relu'),\n                                    keras.layers.MaxPooling2D(2,2),\n                                    keras.layers.Conv2D(8,(3,3),activation= 'relu'),\n                                    keras.layers.MaxPooling2D(2,2),\n                                    keras.layers.Flatten(),\n                                    keras.layers.Dense(16,activation='relu'),\n                                    keras.layers.Dense(10,activation='softmax')\n                              ])\n# Setting callback early stopping to prevent model to over train on the training data\n# Setting model checkpoint call back to save the model with the best validation accuracy in the training \n# period\nearly = keras.callbacks.EarlyStopping(patience = 20)\n","cd09d625":"model_check = keras.callbacks.ModelCheckpoint('model.h5',save_best_only = True)\nmodel.compile(loss = 'categorical_crossentropy',optimizer='adam',metrics = ['accuracy'])\nhistory = model.fit(train_data,labels,epochs = 600,validation_split = 0.2,callbacks = [model_check,early])","b9d59fc1":"test = pd.read_csv('..\/input\/digit-recognizer\/test.csv')","fc7b202a":"test_imag = np.array(test,dtype= np.float32)\/255\ntest_imag = test_imag.reshape(-1,28,28,1)","02b57088":"predictions_cnn = model.predict(test_imag)","81c14282":"predictions_cnn","3c44fd71":"pred = []\nfor i in predictions_cnn:\n    k=0\n    count = 0\n    m = 0\n    for j in i:\n        if k<j:\n            k = j\n            m = count\n        count = count+1    \n    pred.append(m)        ","c38836ab":"sample['Label']= pred","d24350b6":"sample.head()","ee6ad613":"sample.to_csv('Submit_cnn2.csv',index = False)","48302343":"## Displaying data and images","2fd22eca":"## Building a Convolutional Nueral Net","b69eece9":"## Training a basic neural network","52dfdf91":"# Keras Net Digit Classifier with 97% accuracy (Begineer Friendly)\n<img src= 'https:\/\/i1.wp.com\/www.marktechpost.com\/wp-content\/uploads\/2019\/10\/1_QAAGYDHreoRm4vEArNzTTQ.png?resize=372%2C238&ssl=1' alt =\"Titanic\" style='width: 900px;'>","86d9c411":"## Importing required dependencies"}}