{"cell_type":{"53e16b5a":"code","9faa0635":"code","87dc3709":"code","a0c58b6a":"code","8692596c":"code","b3703e80":"code","5ad1016f":"code","ce6812b4":"code","7d297526":"code","40817ad3":"code","63db3dee":"code","f97cd9f2":"code","7e03bb31":"code","c3c2cf0b":"code","461fa850":"code","c437cd3a":"markdown","6605ed40":"markdown","3035c4e9":"markdown","f7c30677":"markdown","6c5ae0d1":"markdown","6f27ef56":"markdown","24bd0628":"markdown","9e68d28a":"markdown","c83aa1da":"markdown","a53d2470":"markdown","c0d8e5c8":"markdown","33306f4e":"markdown","9df47f94":"markdown","31e44b43":"markdown","d913f1b8":"markdown","3b5361ce":"markdown","37d57669":"markdown","69e85565":"markdown"},"source":{"53e16b5a":"from IPython.display import Image\nfrom IPython.core.display import HTML \nImage(url= \"https:\/\/www.aljazeera.com\/mritems\/imagecache\/mbdxxlarge\/mritems\/Images\/2020\/3\/19\/d42a4e22ee344ff5a9f5061d4869cee1_18.jpg\")","9faa0635":"# importing libraries\nimport pandas as pd\nimport numpy as np\n\nfrom datetime import datetime\n\nimport plotly.graph_objs as go\nimport plotly.io as pio\nfrom plotly.subplots import make_subplots\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)\n\nimport statsmodels.api as sm\nfrom scipy import stats","87dc3709":"colors_array = ['#34495E', '#F1C40F', '#138D75', '#CB4335', '#808B96']\n\nlayout_custom = go.layout.Template(\n    layout=go.Layout(titlefont=dict(size=24, color=colors_array[0]),\n                    legend=dict(orientation='h',y=1.1)))","a0c58b6a":"# importing needed files\n\ndateparse = lambda x: pd.to_datetime(x, errors='coerce')\n\nkernels = pd.read_csv('..\/input\/meta-kaggle\/KernelVersions.csv', parse_dates=[5, 8], date_parser=dateparse)\nkernel_votes = pd.read_csv('..\/input\/meta-kaggle\/KernelVotes.csv', parse_dates=[3], date_parser=dateparse)\ndatasets = pd.read_csv('..\/input\/meta-kaggle\/DatasetVersions.csv', parse_dates=[5], date_parser=dateparse)\ndataset_votes = pd.read_csv('..\/input\/meta-kaggle\/DatasetVotes.csv', parse_dates=[3], date_parser=dateparse)","8692596c":"print(\"\\nKernels data set sample:\\n\\n\")\ndisplay(kernels.tail())\n\nprint(\"\\nKernels votes data set sample:\\n\\n\")\ndisplay(kernel_votes.tail())\n\nprint(\"\\nDatasets data set sample:\\n\\n\")\ndisplay(datasets.tail())\n\nprint(\"\\nDatasets votes data set sample:\\n\\n\")\ndisplay(dataset_votes.tail())\n","b3703e80":"print('Minimum date in kernels: ', kernels['CreationDate'].min())\nprint('Minimum date in kernel_votes: ', kernel_votes['VoteDate'].min())\nprint('Minimum date in datasets: ', datasets['CreationDate'].min())\nprint('Minimum date in dataset_votes: ', dataset_votes['VoteDate'].min())","5ad1016f":"kernels = kernels[(kernels['CreationDate'] >= '2018-01-01') & (kernels['CreationDate'] < '2020-03-29')]\ndatasets = datasets[(datasets['CreationDate'] >= '2018-01-01') & (datasets['CreationDate'] < '2020-03-29')]\nkernel_votes = kernel_votes[(kernel_votes['VoteDate'] >= '2018-01-01') & (kernel_votes['VoteDate'] < '2020-03-29')]\ndataset_votes = dataset_votes[(dataset_votes['VoteDate'] >= '2018-01-01') & (dataset_votes['VoteDate'] < '2020-03-29')]","ce6812b4":"daily_kernels_created = kernels.groupby([pd.Grouper(key='CreationDate', freq='D')])['Id'].count()\ndaily_datasets_created = datasets.groupby([pd.Grouper(key='CreationDate', freq='D')])['Id'].count()\ndaily_votes_kernels = kernel_votes.groupby([pd.Grouper(key='VoteDate', freq='D')])['Id'].count()\ndaily_votes_datasets = dataset_votes.groupby([pd.Grouper(key='VoteDate', freq='D')])['Id'].count()\n\ndaily_amounts = pd.concat([daily_kernels_created, daily_datasets_created, daily_votes_kernels, daily_votes_datasets], axis=1)\ndaily_amounts.columns = ['kernels', 'datasets', 'kernel_votes', 'datasets_votes']\ndaily_amounts = daily_amounts.reset_index()\n\nweekly_amounts = daily_amounts.groupby([pd.Grouper(key='CreationDate', freq='W-MON', closed='left', label='left')]).sum().reset_index()\n\nmonthly_amounts = daily_amounts.groupby([pd.Grouper(key='CreationDate', freq='MS')]).sum().reset_index()","7d297526":"def make_plotly(fig, name, dataset, visualize_list, visible=True):\n    #making traces for my graphs\n    fig.add_trace(go.Scatter(x=dataset['CreationDate'], y=dataset[visualize_list[0]], name=\"Created\", \n                             line=dict(color=colors_array[3]), visible=visible), row=1, col=1)\n    fig.add_trace(go.Scatter(x=dataset['CreationDate'], y=dataset[visualize_list[1]], name=\"Votes\", \n                             line=dict(color=colors_array[-1]), visible=visible), row=2, col=1)\n\n# creating a figure with 2 subplots\nfig = make_subplots(rows=2, cols=1, subplot_titles=(\"Created\", \"Votes\"))\n\n# daily part\nmake_plotly(fig, \"Kernels\", daily_amounts, ['kernels', 'kernel_votes'])\nmake_plotly(fig, \"Datasets\", daily_amounts, ['datasets', 'datasets_votes'], visible=False)\n\n# weekly part\nmake_plotly(fig, \"Kernels\", weekly_amounts, ['kernels', 'kernel_votes'], visible=False)\nmake_plotly(fig, \"Datasets\", weekly_amounts, ['datasets', 'datasets_votes'], visible=False)\n\n# monthly part\nmake_plotly(fig, \"Kernels\", monthly_amounts, ['kernels', 'kernel_votes'], visible=False)\nmake_plotly(fig, \"Datasets\", monthly_amounts, ['datasets', 'datasets_votes'], visible=False)\n\n# the code below creates list for the filter\nlist_buttons = []\n                \ntraces, dicts = (2, 6)\nvector_size = traces*dicts\ntrue_start = 0\n\nfor date_type in ['daily', 'weekly', 'monthly']:\n    for kernel_or_dataset in [\"Kernels\", \"Datasets\"]:\n        visibility_list = [False for i in range(vector_size)]\n        visibility_list[true_start:(true_start+traces)] = [True]*traces\n        dict_button = dict(label=kernel_or_dataset+\" - \"+date_type, method=\"update\",\n                           args=[{\"visible\": visibility_list},\n                                 {\"title\": kernel_or_dataset+\" - \"+date_type}])\n        list_buttons.append(dict_button)\n        true_start+=traces\n\nfig.layout.update(\n    template=layout_custom,\n    showlegend=False,\n    updatemenus=[\n        go.layout.Updatemenu(\n            active=0,\n            x=1.05, y=1.10,\n            buttons=list_buttons)\n    ])\n\nfig.layout.update(title=\"Kernels - daily\")\n\nfig['layout']['yaxis1'].update(hoverformat =\",d\", tickformat=\",d\")\nfig['layout']['yaxis2'].update(hoverformat =\",d\", tickformat=\",d\")\n\niplot(fig)","40817ad3":"kernels_2020 = kernels[kernels['CreationDate'] >= '2020-01-01']\ndatasets_2020 = datasets[datasets['CreationDate'] >= '2020-01-01']\n\ncovid_kernels = kernels_2020.loc[[('covid' in str(string).lower()) or ('corona' in str(string).lower()) \n                             for string in kernels_2020['Title']]]\nother_kernels = kernels_2020.loc[[('covid' not in str(string).lower()) and ('corona' not in str(string).lower()) \n                             for string in kernels_2020['Title']]]\ncovid_datasets = datasets_2020.loc[[('covid' in str(string).lower()) or ('corona' in str(string).lower()) \n                               for string in datasets_2020['Title']]]\nother_datasets = datasets_2020.loc[[('covid' not in str(string).lower()) and ('corona' not in str(string).lower()) \n                               for string in datasets_2020['Title']]]","63db3dee":"daily_covid_kernels = covid_kernels.groupby([pd.Grouper(key='CreationDate', freq='D')])['Id'].count()\ndaily_other_kernels = other_kernels.groupby([pd.Grouper(key='CreationDate', freq='D')])['Id'].count()\ndaily_covid_datasets = covid_datasets.groupby([pd.Grouper(key='CreationDate', freq='D')])['Id'].count()\ndaily_other_datasets = other_datasets.groupby([pd.Grouper(key='CreationDate', freq='D')])['Id'].count()\n\ndaily_amounts_covid = pd.concat([daily_covid_kernels, daily_other_kernels, daily_covid_datasets, daily_other_datasets], axis=1)\ndaily_amounts_covid.columns = ['covid_kernels', 'other_kernels', 'covid_datasets', 'other_datasets']\ndaily_amounts_covid = daily_amounts_covid.reset_index()\n\nweekly_amounts_covid = daily_amounts_covid.groupby([pd.Grouper(key='CreationDate', freq='W-MON', closed='left', label='left')]).sum().reset_index()\n\nmonthly_amounts_covid = daily_amounts_covid.groupby([pd.Grouper(key='CreationDate', freq='MS')]).sum().reset_index()","f97cd9f2":"def make_plotly_covid(fig, dataset, visible=True):\n    # making traces for my graphs\n    fig.add_trace(go.Scatter(x=dataset['CreationDate'], y=dataset['covid_kernels'], name=\"COVID\", \n                             line=dict(color=colors_array[3]), visible=visible), \n                  row=1, col=1)\n    fig.add_trace(go.Bar(x=dataset['CreationDate'], y=dataset['other_kernels'], name=\"non COVID\", \n                         marker=dict(color=colors_array[-1]), opacity=0.4, visible=visible), \n                  row=1, col=1)\n    \n    fig.add_trace(go.Scatter(x=dataset['CreationDate'], y=dataset['covid_datasets'], name=\"COVID\",\n                             line=dict(color=colors_array[3]), visible=visible, showlegend=False), \n                  row=2, col=1)\n    fig.add_trace(go.Bar(x=dataset['CreationDate'], y=dataset['other_datasets'], name=\"non COVID\", \n                         marker=dict(color=colors_array[-1]), opacity=0.4, visible=visible, showlegend=False), \n                  row=2, col=1)\n\n# creating figure with 2 subplots\nfig = make_subplots(rows=2, cols=1, subplot_titles=('Kernels', 'Datasets'))\n\n# daily, weekly and monthly parts\nmake_plotly_covid(fig, daily_amounts_covid)\nmake_plotly_covid(fig, weekly_amounts_covid, visible=False)\nmake_plotly_covid(fig, monthly_amounts_covid, visible=False)\n\n# the code below creates list for the filter\nlist_buttons = []\n                \ntraces, dicts = (4, 3)\nvector_size = traces*dicts\ntrue_start = 0\n\nfor date_type in ['Daily', 'Weekly', 'Monthly']:\n    visibility_list = [False for i in range(vector_size)]\n    visibility_list[true_start:(true_start+traces)] = [True]*traces\n    dict_button = dict(label=date_type, method=\"update\",\n                       args=[{\"visible\": visibility_list},\n                             {\"title\": date_type+' amounts by COVID\/non COVID'}])\n    list_buttons.append(dict_button)\n    true_start+=traces\n\nfig.layout.update(\n    template=layout_custom,\n    updatemenus=[\n        go.layout.Updatemenu(\n            active=0,\n            x=1.05, y=1.10,\n            buttons=list_buttons)\n    ])\n\nfig.layout.update(title='Daily amounts by COVID\/non COVID')\n\nfig['layout']['yaxis1'].update(hoverformat =',d', tickformat=',d')\nfig['layout']['yaxis2'].update(hoverformat =',d', tickformat=',d')\n\niplot(fig)","7e03bb31":"kernels_votes = kernels_2020.loc[kernels_2020['CreationDate'] >= '2020-03-01',['Title', 'TotalVotes']]\nkernels_votes['if_covid'] = [('covid' in str(string).lower()) or ('corona' in str(string).lower()) \n                             for string in kernels_votes['Title']]\nkernels_votes.drop(['Title'], axis=1, inplace=True)","c3c2cf0b":"def quantile25(x): \n    return np.quantile(x, q=0.25)\n\ndef quantile75(x): \n    return np.quantile(x, q=0.75)    \n    \nkernels_votes.groupby(['if_covid']).agg([quantile25, np.mean, np.median, quantile75, np.max])","461fa850":"X = kernels_votes['if_covid']\ny = kernels_votes['TotalVotes']\n\nslope, intercept, r_value, p_value, std_err = stats.linregress(X, y)\n\nprint('Average votes on kernel if no COVID is {}'.format(intercept))\nprint('Average votes on kernel if COVID is {} (or an increase of {})'.format(slope+intercept, slope))\nprint('p_value for this difference is way lower than 0.05 ({}), so it is significant'.format(p_value))","c437cd3a":"### 2. How much of that change is now goes around COVID-19?","6605ed40":"So, are those \"virus kernels\" getting more love than the usual ones?\n\nI shrank my dataset even more (to include only March) as in the months before, we have only a small amount of COVID kernels, and the whole buzz around it started only in March. Also, the majority of people began quarantine only during March.","3035c4e9":"From the plots above you can see that the numbers are increasing. For some of them more, for some - less. But the change is there.","f7c30677":"## The first look","6c5ae0d1":"### 3. Is COVID-19 topic getting more \"love\" right now?","6f27ef56":"\nAnother thing that caught my eye was a lot of COVID-19 related kernels and datasets. So the second step seemed logical - to check how much of that increase was caused by the content related to the virus.\n\nI split kernels and datasets to COVID and non-COVID. COVID was everything that had \"covid\" or \"corona\" in the name. And yes, I know that \"corona\" can also hide beer, but I was ok with the small number of wrong assignments.\n\nI also took only the data for the year to avoid the noise.","24bd0628":"## The \"Why?\"","9e68d28a":"I like to use Linear Regression to check if there is a difference between groups. I use this technique mainly because I am lazy, and I love it when I can get averages and p-value easily (it also works as a charm with multiple groups :)):","c83aa1da":"## Libraries, data sources and templates for graphs","a53d2470":"So it seems that the COVID-19 kernels were indeed more popular in March than the usual ones. Does it mean that you should write **only** about the virus right now? **Definitely not.** But you should undoubtedly start creating a kernel about anything you like, because boy, it was fun creating this one!","c0d8e5c8":"The first one is very generic - does the pattern changed at all. Or, in other words - can we see any increase\/decrease in the number of kernels, datasets, and votes on them. I didn't include competitions on purpose as they take more time, and the change might not be visible so soon.\n\n\nI planned to check daily, weekly, and monthly numbers. Instead of making a lot of graphs with seaborn or matplotlib, I chose plotly with a filter widget. ","33306f4e":"### 1. Has quarantine changed the patterns on Kaggle?","9df47f94":"I again chose plotly as my weapon of choice:","31e44b43":"I am staying at home for three weeks now, and I understood that my productivity has increased. Not only that - I finally found time for the project I was postponing due to various imaginary reasons - I decided to go back to Kaggle and create a kernel.\n\nThis gave me the idea that I might not be the only lost soul who decided to use the \"stay at home\" period for a new kernel. So I decided to check it out with the data :)","d913f1b8":"After checking the data, I decided that I don't need so many years, having in mind that quarantine started only this year. So I cut all my datasets to include the data from 2018-01-01 to 2020-03-28 (both inclusive).","3b5361ce":"## My three questions for these data sets","37d57669":"I usually create a color palette and a layout for my graphs. It lets me keep it tidy and consistent:","69e85565":"As I expected, a lot of new content is related to COVID-19. More than a third of all kernels and half of all datasets were about the virus (for the last available date - 2020-03-28). I will definitely check it after some time to see where this trend is going!"}}