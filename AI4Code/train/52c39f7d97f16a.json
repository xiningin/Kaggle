{"cell_type":{"efaf01af":"code","5bf82cd4":"code","06bd7355":"code","4d5926a2":"code","07034747":"code","7901f9b1":"code","cc80615a":"code","ee36e7e3":"code","681c1706":"code","0eac9301":"code","ceb4797e":"code","32756793":"code","266f4dcd":"code","cb020c04":"code","2abab470":"code","c7b77dc7":"code","b7c70e87":"code","cd8bafa6":"code","0328adb3":"code","ee0ad7c3":"code","04ce5299":"code","36ab83d6":"code","7b07b544":"code","4743378d":"code","257e5267":"code","5c9fa419":"code","a17cec4b":"code","6b57a9f9":"code","7ac156be":"code","6415d903":"code","4415b0b5":"code","cc756c83":"code","f07d4576":"code","d37240ae":"code","1cd07251":"code","824a0ff8":"code","2e5438a4":"code","2c9cfdca":"code","3d905064":"code","acb9e624":"code","73cca551":"code","90688fcb":"code","e7b716df":"code","534f08d1":"code","c000d21d":"code","67f92cc8":"code","6a0506b7":"code","535e2b8f":"code","9b817833":"code","2d69dbff":"code","4b1304af":"code","398c3b79":"code","5f66eac0":"code","f8d92821":"code","6dc0539e":"code","7d23d91f":"code","0775b358":"code","94c912c7":"code","a7d9dad3":"code","89efc010":"code","c65c4a5d":"code","cf8688a4":"code","692fd435":"code","572e88ca":"code","516f2518":"code","0a5905cb":"code","fb484f3a":"code","f8621820":"code","5dce868a":"code","04717f17":"code","fda01f11":"code","066bce37":"code","33cb11d9":"code","195b12e7":"markdown","3d1f1eca":"markdown","7e1769ae":"markdown","c7bb87fe":"markdown","a14662e1":"markdown","4225d20c":"markdown","bbbc038d":"markdown","bcfdf2bd":"markdown","772679e6":"markdown","f2119e5a":"markdown","4a296aa1":"markdown","9dbad6e3":"markdown"},"source":{"efaf01af":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)","5bf82cd4":"netflix_data = pd.read_csv(\"..\/input\/netflix-shows\/netflix_titles.csv\")\nnetflix_data.tail()","06bd7355":"netflix_data.shape","4d5926a2":"netflix_data[\"title\"]","07034747":"netflix_data[[\"title\", \"description\"]]","7901f9b1":"netflix_data[netflix_data[\"title\"]==\"La casa de papel\"]","cc80615a":"netflix_data[netflix_data[\"type\"]==\"TV Show\"]","ee36e7e3":"netflix_data.loc[netflix_data[\"title\"]==\"La casa de papel\", \"type\":]","681c1706":"# Alles aus 2020\nnetflix_data.loc[netflix_data[\"release_year\"] == 2020, [\"title\", \"description\"]]\n\n# Alle Filme aus 2020\nnetflix_data.loc[(netflix_data[\"release_year\"] == 2020) & (netflix_data[\"type\"] == \"Movie\"), \n                 [\"title\", \"description\"]]\n\n# Alle Filme aus den USA\nnetflix_data.loc[(netflix_data[\"release_year\"] == 2020) & (netflix_data[\"country\"] == \"United States\"), \n                 [\"title\", \"description\"]]\n\n# Alle Filme die nicht aus den USA kommen\nnetflix_data.loc[(netflix_data[\"release_year\"] == 2020) & (netflix_data[\"country\"] != \"United States\"), \n                 [\"title\", \"description\"]]","0eac9301":"netflix_data.info()","ceb4797e":"netflix_data.loc[netflix_data[\"type\"]==\"TV Show\", \"duration\"]","32756793":"netflix_data[\"country\"].unique()","266f4dcd":"import missingno\n\nmissingno.matrix(netflix_data)","cb020c04":"netflix_data[\"country\"].fillna(\"missing\", inplace=True)\nnetflix_data[\"director\"].fillna(\"missing\", inplace=True)\nnetflix_data[\"cast\"].fillna(\"missing\", inplace=True)","2abab470":"netflix_data.dropna(subset=[\"date_added\"], inplace=True)\nnetflix_data.dropna(subset=[\"rating\"], inplace=True)","c7b77dc7":"netflix_data.isna().sum()","b7c70e87":"netflix_data.shape","cd8bafa6":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\nsns.countplot(x=\"type\", data=netflix_data)","0328adb3":"plt.figure(figsize=(15,8))\nnetflix_data_2000 = netflix_data[netflix_data[\"release_year\"] >= 2000]\nsns.countplot(x=\"release_year\", data=netflix_data_2000)","ee0ad7c3":"plt.figure(figsize=(15,8))\nsns.countplot(x=\"release_year\", data=netflix_data_2000, hue=\"type\")","04ce5299":"# rating - \nplt.figure(figsize=(15,8))\nsns.countplot(x=\"rating\", data=netflix_data)","36ab83d6":"netflix_data[\"rating\"].unique()","7b07b544":"mapping_audience = {\n    \"TV-PG\": \"Older Kids\",\n    \"TV-MA\": \"Adults\",\n    \"TV-Y7-FV\": \"Older Kids\",\n    \"TV-Y7\": \"Older Kids\",\n    \"TV-14\": \"Teens\",\n    \"R\": \"Adults\",\n    \"TV-Y\": \"Kids\",\n    \"NR\": \"Adults\",\n    \"PG-13\": \"Teens\",\n    \"TV-G\": \"Kids\",\n    \"PG\": \"Older Kids\",\n    \"G\": \"Kids\",\n    \"UR\": \"Adults\",\n    \"NC-17\": \"Adults\"\n}\n\n\nnetflix_data[\"target_audience\"] = netflix_data[\"rating\"].replace(mapping_audience)\n\nnetflix_data[\"target_audience\"].unique()","4743378d":"plt.figure(figsize=(15,8))\nsns.countplot(x=\"target_audience\", data=netflix_data)","257e5267":"sns.countplot(x=\"target_audience\", data=netflix_data, hue=\"type\")","5c9fa419":"netflix_data[\"country_main\"] = netflix_data[\"country\"].apply(lambda x: x.split(\",\")[0])","a17cec4b":"netflix_data[\"country_main\"].unique()","6b57a9f9":"plt.figure(figsize=(15,7))\nsns.countplot(x=\"country_main\", data=netflix_data)\nplt.xticks(rotation=90)\nplt.show()","7ac156be":"netflix_data[\"country_main\"].value_counts()[:10]","6415d903":"plt.figure(figsize=(15,7))\nsns.countplot(x=\"country_main\", \n              data=netflix_data, \n              order=netflix_data[\"country_main\"].value_counts()[:15].index,\n             hue=\"type\")\nplt.xticks(rotation=90)\nplt.show()","4415b0b5":"netflix_data[\"rest_der_welt\"] = np.where(netflix_data[\"country_main\"]==\"United States\", \"US\", \"Rest der Welt\")","cc756c83":"netflix_data.head()","f07d4576":"sns.countplot(x=\"rest_der_welt\", data=netflix_data)","d37240ae":"sns.countplot(x=\"target_audience\", data=netflix_data, hue=\"rest_der_welt\")","1cd07251":"plt.figure(figsize=(15,7))\nsns.countplot(x=\"release_year\", data=netflix_data[netflix_data[\"release_year\"]>=2000] ,hue=\"rest_der_welt\")","824a0ff8":"movie_data = netflix_data[netflix_data[\"type\"]==\"Movie\"]","2e5438a4":"movie_data[\"duration_int\"] = movie_data[\"duration\"].str.replace(\" min\", \"\")\nmovie_data[\"duration_int\"] = movie_data[\"duration_int\"].astype(str).astype(int)","2c9cfdca":"movie_data.info()","3d905064":"movie_data[\"duration_int\"].hist(bins=25)","acb9e624":"movie_data[\"duration_int\"].min()","73cca551":"duration_year = movie_data.groupby([\"release_year\"])[\"duration_int\"].mean()\nduration_year","90688fcb":"sns.lineplot(x=duration_year.index, y=duration_year.values)","e7b716df":"serien_data = netflix_data[netflix_data[\"type\"]==\"TV Show\"]","534f08d1":"serien_data[\"duration_int\"] = serien_data[\"duration\"].str.replace(\" Season\", \"\")\nserien_data[\"duration_int\"] = serien_data[\"duration_int\"].str.replace(\"s\", \"\")\nserien_data[\"duration_int\"] = serien_data[\"duration_int\"].astype(str).astype(int)","c000d21d":"serien_data[\"duration_int\"].max()","67f92cc8":"serien_data[\"duration_int\"].hist(bins=16)","6a0506b7":"top_20_serien = serien_data.sort_values(by=\"duration_int\", ascending=False)[0:20]\nplt.figure(figsize=(15,7))\nsns.barplot(x=\"title\", y=\"duration_int\", data=top_20_serien)\nplt.xticks(rotation=90)\nplt.show()","535e2b8f":"duration_year = serien_data.groupby([\"release_year\"])[\"duration_int\"].mean()\nsns.lineplot(x=duration_year.index, y=duration_year.values)","9b817833":"netflix_data[\"genre\"] = netflix_data[\"listed_in\"].apply(lambda x: x.split(\",\")[0])","2d69dbff":"netflix_data[\"genre\"].value_counts()[0:10].index","4b1304af":"plt.figure(figsize=(15,7))\nsns.countplot(x=\"genre\", data=netflix_data, order=netflix_data[\"genre\"].value_counts()[0:10].index)\nplt.xticks(rotation=45)\nplt.show()","398c3b79":"plt.figure(figsize=(15,7))\nsns.countplot(x=\"genre\", data=netflix_data, order=netflix_data[\"genre\"].value_counts()[0:10].index, hue=\"rest_der_welt\")\nplt.xticks(rotation=45)\nplt.show()","5f66eac0":"movie_data[\"genre\"] = movie_data[\"listed_in\"].apply(lambda x: x.split(\",\")[0])\nduration_genre = movie_data.groupby(\"genre\")[\"duration_int\"].mean()\nduration_genre.sort_values()","f8d92821":"sns.barplot(x=duration_genre.sort_values().index, y=duration_genre.sort_values().values)\nplt.xticks(rotation=90)\nplt.show()","6dc0539e":"duration_min = movie_data[\"duration_int\"].min()\nduration_max = movie_data[\"duration_int\"].max()\n\nprint(duration_min, duration_max)","7d23d91f":"movie_data[movie_data[\"duration_int\"] == duration_max]","0775b358":"movie_data[movie_data[\"duration_int\"] == duration_min]","94c912c7":"from sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer\n\ntext = [\"The sky is blue\", \n        \"The sun is bright\", \n        \"The sky is bright\", \n        \"The sun is yellow\"]\n\ncountVectorizer = CountVectorizer(stop_words=\"english\")\ntfidfVectorizer = TfidfVectorizer(stop_words=\"english\")\n\ncount_wm = countVectorizer.fit_transform(text)\ntfidf_wm = tfidfVectorizer.fit_transform(text)\n\ncount_tokens = countVectorizer.get_feature_names()\ntfidf_tokens = tfidfVectorizer.get_feature_names()\n\ndf_count = pd.DataFrame(\n    data = count_wm.toarray(), index = [\"Dok 1\", \"Dok 2\", \"Dok 3\", \"Dok 4\"],\n    columns = count_tokens\n)\ndf_tfidf = pd.DataFrame(\n    data = tfidf_wm.toarray(), index = [\"Dok 1\", \"Dok 2\", \"Dok 3\", \"Dok 4\"],\n    columns = tfidf_tokens\n)\n\nprint(\"Count Vectorizer\\n\")\nprint(df_count)\nprint(\"TFIDF Vectorizer\\n\")\nprint(df_tfidf)","a7d9dad3":"netflix_data.head()\nfeatures = [\"listed_in\", \"cast\", \"director\", \"description\", \"title\"] # \"target_audience\", \"type\"\nlists = [\"listed_in\", \"cast\", \"director\"]\ntext = [\"description\", \"title\"]\n\nnetflix_recommender = netflix_data[features]\nnetflix_recommender.head()","89efc010":"def clean_data_list(x):\n    return str.lower(x.replace(\" \", \"\"))\n\ndef clean_data_text(x):\n    return str.lower(x)","c65c4a5d":"for feature in lists:\n    netflix_recommender[feature] = netflix_recommender[feature].apply(clean_data_list)\n    \nfor feature in text:\n    netflix_recommender[feature] = netflix_recommender[feature].apply(clean_data_text)","cf8688a4":"netflix_recommender.head()","692fd435":"netflix_recommender.shape","572e88ca":"netflix_recommender[\"full_text\"] = netflix_recommender[\"director\"] + \" \" + netflix_recommender[\"cast\"] + \" \" + netflix_recommender[\"listed_in\"] + \" \" + netflix_recommender[\"description\"]","516f2518":"netflix_recommender[\"full_text\"][0]","0a5905cb":"count = CountVectorizer(stop_words=\"english\")\ncount_matrix = count.fit_transform(netflix_recommender[\"full_text\"])","fb484f3a":"count_matrix.shape","f8621820":"from sklearn.metrics.pairwise import cosine_similarity\n\ncosine_sim = cosine_similarity(count_matrix, count_matrix)","5dce868a":"cosine_sim.shape","04717f17":"cosine_sim","fda01f11":"netflix_recommender = netflix_recommender.reset_index()\n\nindices = pd.Series(netflix_recommender.index, index=netflix_recommender[\"title\"])\nindices","066bce37":"def get_recommendation(title):\n    title = title.lower() # Breaking Bad -> breaking bad\n    idx = indices[title] # breaking bad -> 42\n    \n    sim_scores = list(enumerate(cosine_sim[idx]))\n    # [(0, 1.00),\n    #  (1, 0.01),\n    #  (2, 0.24)]\n    \n    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)\n    \n    sim_scores = sim_scores[1:11]\n    \n    movie_indices = [i[0] for i in sim_scores]\n    \n    return netflix_data[\"title\"].iloc[movie_indices]","33cb11d9":"get_recommendation(\"Breaking Bad\")","195b12e7":"# Visualisierungen","3d1f1eca":"# Daten vorbereiten","7e1769ae":"# Recommender\n\nimplementing a content-based recommender system","c7bb87fe":"## Duration \/ L\u00e4nge","a14662e1":"## Genres","4225d20c":"* Haufigkeit Schauspieler\n* L\u00e4nder mit den meisten Filmen\/Serien (USA, Indien, Japan)\n* Aktivit\u00e4t einzelner Schauspieler nach Jahren\n* Serien mit mehr als 3 Staffeln (viele mit 1ner Staffel, ...)\n* Dauer von Filmen (nach Jahren) (werden l\u00e4nger)\n* Genre nach Jahren (beliebtesten Genres)\n\n## L\u00e4nder","bbbc038d":"# Netflix Datenanalyse\n\nAnalyse der Film und Seriendaten von Netflix (Quelle: Flixable).","bcfdf2bd":"## L\u00e4ngster und k\u00fcrzester Film","772679e6":"## L\u00e4nge nach Genre","f2119e5a":"* Duration ist ein Objekt (Text) und keine Zahl (int) - bei Serien \"Season(s)\" bei Filmen (min)\n* L\u00e4nder und Genres (listed_in) sind keine einzelwerte sondern Listen (mehrere L\u00e4nder, mehrere Genres)\n* Titel sind in Originalsprache (Bsp: Haus des Geldes = La casa del papel)\n* Fehlende Werte bei Director, cast, country, date_added, rating","4a296aa1":"## Duration Serien","9dbad6e3":"## To Do s\n\n1. Genres analysieren (\u00e4hnlich bzw. gleich wie L\u00e4nder)\n1. Serien analysieren (\u00e4hnlich wie duration bei Film)"}}