{"cell_type":{"3af5aba8":"code","d286a3fe":"code","250fae56":"code","457442f9":"code","bd3fee6b":"code","548a9a87":"code","c37dd27e":"code","817e008a":"code","a7724281":"code","74c97e60":"code","c05770f9":"code","6eebc696":"code","ba0705c9":"code","1f17ede3":"code","265d3050":"code","2f786664":"code","8e4574bc":"code","6f3b175b":"code","5d13832a":"code","b51995ee":"code","40854f84":"code","3e7b0303":"code","48f6af6a":"code","0f3467b9":"markdown"},"source":{"3af5aba8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d286a3fe":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split \nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.datasets import load_boston\nfrom sklearn import metrics\nimport matplotlib.pyplot as plt\n%matplotlib inline","250fae56":"import os\nprint(os.listdir(\"..\/input\"))","457442f9":"df = pd.read_csv(\"..\/input\/usa-housing\/USA_Housing.csv\")","bd3fee6b":"df.head()","548a9a87":"df.info()","c37dd27e":"df.describe()","817e008a":"df.columns","a7724281":"sns.pairplot(df)","74c97e60":"sns.distplot(df['Price'])","c05770f9":"sns.heatmap(df.corr())","6eebc696":"# Training Linear Regression Model\n# split data in X array for features ana y array for the target variable\n\nX =  df[['Avg. Area Income', 'Avg. Area House Age', 'Avg. Area Number of Rooms',\n       'Avg. Area Number of Bedrooms', 'Area Population']]\ny = df['Price']","ba0705c9":"# Train Test Split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.4, random_state=101)","1f17ede3":"lm = LinearRegression() ","265d3050":"lm.fit(X_train,y_train)","2f786664":"# Model Evaluattion\n# Evaluating the model by checking its coefficients \n\n# print the intercept\nprint(lm.intercept_)","8e4574bc":"coeff_df = pd.DataFrame(lm.coef_,X.columns,columns=['Coefficient'])\ncoeff_df","6f3b175b":"boston = load_boston()\nprint(boston.DESCR)\nboston_df = boston.data","5d13832a":"# Predictions of Model\npredictions = lm.predict(X_test)\nplt.scatter(y_test,predictions)","b51995ee":"# Histogram\nsns.distplot((y_test-predictions))","40854f84":"# Regression Evaluation Metrics\nprint('MAE:', metrics.mean_absolute_error(y_test, predictions))","3e7b0303":"print('MSE:', metrics.mean_squared_error(y_test, predictions))","48f6af6a":"print('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))","0f3467b9":"Interpreting the coefficients:\n\n- **Avg. Area Income** is associated with an **increase of \\$21.52 **.\n- **Avg. Area House Age** is associated with an **increase of \\$164883.28 **.\n- **Avg. Area Number of Rooms** is associated with an **increase of \\$122368.67 **.\n- **Avg. Area Number of Bedrooms** is associated with an **increase of \\$2233.80 **.\n- **Area Population** is associated with an **increase of \\$15.15 **."}}