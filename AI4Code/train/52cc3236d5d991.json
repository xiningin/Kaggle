{"cell_type":{"e7b53982":"code","de95de68":"code","fef55485":"code","4a18b67d":"code","9b16413a":"code","8ea439b9":"code","7033c509":"code","aa7757cd":"code","86feebe4":"code","cefc62d2":"code","2f92b0aa":"code","efe85a68":"code","f63731ea":"code","a26b8558":"code","e7d5c541":"markdown","6534ff87":"markdown","3d4c7558":"markdown"},"source":{"e7b53982":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom scipy import signal\nimport warnings\nwarnings.filterwarnings('ignore')\n\n%matplotlib inline","de95de68":"df_train = pd.read_parquet('..\/input\/train.parquet')\nprint(df_train.shape)","fef55485":"train_meta = pd.read_csv('..\/input\/metadata_train.csv')\nprint(train_meta.shape)\nprint(train_meta.head(3))","4a18b67d":"train_meta_pos = train_meta[train_meta['target'] == 1]\ntrain_meta_neg = train_meta[train_meta['target'] == 0]\nprint(train_meta_pos.shape)\nprint(train_meta_neg.shape)","9b16413a":"train_meta_pos_p0 = train_meta_pos[train_meta_pos['phase'] == 0]\ntrain_meta_pos_p0.head(10)","8ea439b9":"# Negative signal\ntrain_meta_neg_p0 = train_meta_neg[train_meta_neg['phase'] == 0]\ntrain_meta_neg_p0.head(10)","7033c509":"# Take some samples that has postive and negative target\ndf_train_sample = df_train.iloc[:, 201:270]\nprint(df_train_sample.shape)","aa7757cd":"df_train_sample.head(5)","86feebe4":"# Plot the given data points to see how its trend looks like\ndf_train_sample.iloc[:, :3].plot()","cefc62d2":"# Function to to FFT and reduce the dimensions\ndef sample_signals(df):\n    cols = df.columns.values\n    b, a = signal.butter(4, 0.03, analog=False)\n    df_t = []\n    for idx in range(df.shape[1]):\n        sg = np.squeeze(df.iloc[:, idx:idx+1], axis=1)\n        sg_ff = signal.filtfilt(b, a, sg)\n        sg_rs = signal.resample(sg_ff, 16*2*50)\n        df_t.append(sg_rs)\n    df_t = np.asarray(df_t).T\n    df_t = pd.DataFrame(df_t, columns=cols)\n    return df_t","2f92b0aa":"# Show how the processed signals look like\nsample1 = sample_signals(df_train_sample.iloc[:,:3])\nprint(sample1.shape)\nsample1.plot()","efe85a68":"# Comparing given signals and the processed one - Positive signal\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(16,6))\nax1.plot(df_train_sample.iloc[:, :3])\nax2.plot(sample1)","f63731ea":"# Negative signal - target = 0\nsample2 = sample_signals(df_train_sample.iloc[:,3:6])\ndf_train_sample.iloc[:,3:6].plot()","a26b8558":"# Comparing given signals and the processed one - Negative signal\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(16,6))\nax1.plot(df_train_sample.iloc[:, 3:6])\nax2.plot(sample2)","e7d5c541":"Singal resampling from 800K to 1600 time steps using Scipy signal package and FFT module. I do not have expertise in signal processing. However, this approach could help someone to handle the large sequence data and to do rapid experiments.","6534ff87":"Phase 0, Phase 1 and Phase 2 for an id_measurement may or may not have target value 1 i.e. individual phase line will casue discharge. I took Phase 0 signals that has target value 1","3d4c7558":"Future work,\n* Check if the preprocessing doesn't lose any information \n* Identify and emphasize positive and negative signal\n* Any thoughts?\n\nPlease feel free to comment if you have any concerns. Any help in singal processing is appreciated!"}}