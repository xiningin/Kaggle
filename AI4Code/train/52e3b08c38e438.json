{"cell_type":{"f9746a37":"code","fb6a138d":"code","ac0fef86":"code","037d175e":"code","4e70d5c4":"code","672c5181":"code","0eaa118e":"code","edbc711f":"code","8114fb85":"code","6323944e":"code","aba1f0ba":"code","ca16e4c1":"code","4b1f7b0e":"code","802aecb3":"code","81f69bb3":"code","84d8838e":"code","a74456af":"code","5ac4c9ea":"code","eab2cba7":"code","f519b278":"code","f638f04a":"code","99980383":"code","ab2b3437":"code","762598f0":"code","87430484":"code","450bbc87":"code","7891b214":"code","da67fb02":"code","866f3e6c":"code","7b0ea2f1":"code","ddd76ef2":"code","cd196556":"code","7fa54ade":"code","b0a55467":"code","8f7f3107":"code","a3a8c954":"code","367f3730":"code","037a35f2":"code","12421073":"code","c156b3a5":"code","3532c3a1":"code","2b26bf5a":"code","836fe94a":"code","a1734c60":"markdown","9d14b191":"markdown","84af8250":"markdown","d0d525bc":"markdown","575fca64":"markdown","c74981d2":"markdown","73a24cd7":"markdown","75a11d53":"markdown","bb94eb84":"markdown","02c249bd":"markdown","154cf9c2":"markdown","1a1a0b9f":"markdown","3126f153":"markdown"},"source":{"f9746a37":"# This is simple Linear Regression model application as dataset is simple. It has one independent \n# variable(Crude price) and response variable(dependent variable) is the price\/gallon.\n# The current prices of the Crude oil and Price\/gal can be checked out at below URL:\n\n# https:\/\/ycharts.com\/indicators\/new_york_harbor_ultralow_sulfur_no_2_diesel_spot_price\n# https:\/\/ycharts.com\/indicators\/conventional_gasoline_spot_price\n    \n    \n# After a month,I have re-rum my model on latest data. This model predicting the pretty accurate Price\/gal.\n\n\n\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","fb6a138d":"#!pip install chart-studio 1.0.0\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","ac0fef86":"\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly\nimport cufflinks\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)\n","037d175e":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics","4e70d5c4":"fuelprices = pd.read_csv('..\/input\/transportation-fuels-spot-prices-beginning-2006.csv')","672c5181":"fuelprices.head(10)","0eaa118e":"fuelprices.isnull().sum()","edbc711f":"#drop NY Jetfuel\nfuelprices.drop(['NY Jet Fuel Price ($\/gal)'],axis=1,inplace=True)","8114fb85":"fuelprices.columns\n","6323944e":"fuelprices.info()","aba1f0ba":"fuelprices.describe()","ca16e4c1":"#When data is symmetrical ,we can apply the Linear Regression algorithm\nsns.pairplot(fuelprices)","4b1f7b0e":"sns.jointplot(x='WTI Crude Oil Spot Price ($\/barrel)',y='NY Conventional Gasoline Spot Price ($\/gal)',data=fuelprices)\n","802aecb3":"sns.lmplot(x='WTI Crude Oil Spot Price ($\/barrel)',y='NY Conventional Gasoline Spot Price ($\/gal)',data=fuelprices)","81f69bb3":"sns.jointplot(x='Brent Crude Oil Spot Price ($\/barrel)',y='NY Ultra-Low Sulfur Diesel Spot Price ($\/gal)',data=fuelprices)\n","84d8838e":"sns.lmplot(x='Brent Crude Oil Spot Price ($\/barrel)',y='NY Ultra-Low Sulfur Diesel Spot Price ($\/gal)',data=fuelprices)","a74456af":"NYConventionalGasoline  = go.Scatter( x=fuelprices['Date'], y=fuelprices['NY Conventional Gasoline Spot Price ($\/gal)'],name = 'NYConventionalGasoline')\nNYUltraLowSulfurDiesel = go.Scatter( x=fuelprices['Date'], y=fuelprices['NY Ultra-Low Sulfur Diesel Spot Price ($\/gal)'],name='NYUltraLowSulfurDiesel')\ndata = [NYConventionalGasoline, NYUltraLowSulfurDiesel]\nlayout = dict(title = 'NY Conventional Gasoline vs NY Ultra-Low Sulfur Diesel Price',\n              xaxis= dict(title= 'Years',ticklen= 4,zeroline= False))\nfig =dict(data = data, layout = layout)\nplotly.offline.iplot(fig)","5ac4c9ea":"x=fuelprices['NY Conventional Gasoline Spot Price ($\/gal)']\nsns.distplot(x,bins=50)","eab2cba7":"WTICrudeOil= go.Bar(x=fuelprices['Date'],y=fuelprices['WTI Crude Oil Spot Price ($\/barrel)'],name='WTI Crude Oil',marker= dict(color='red'))\nBrentCrudeOil = go.Bar(x=fuelprices['Date'],y=fuelprices['Brent Crude Oil Spot Price ($\/barrel)'],name='Brent Crude Oil',marker= dict(color='green'))\ndata=[WTICrudeOil,BrentCrudeOil]\nlayout = go.Layout(barmode = \"group\", title='WTI Crude Oil Price\/Barrel VS Brent Crude Oil Price\/Barrel ',)\nfig = go.Figure(data = data, layout = layout)\nplotly.offline.iplot(fig)","f519b278":"X=fuelprices[['WTI Crude Oil Spot Price ($\/barrel)']]\ny=fuelprices['NY Conventional Gasoline Spot Price ($\/gal)']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","f638f04a":"X_train.head()","99980383":"X_test.head()","ab2b3437":"#30% of Total dataset( 638 )\nX_test.shape","762598f0":"#70% is the traning data\nprint(X_train.shape)","87430484":"lm = LinearRegression()\nlm.fit(X_train,y_train)","450bbc87":"predictions = lm.predict(X_test)","7891b214":"\nplt.scatter(y_test,predictions)\nplt.xlabel('Y Test')\nplt.ylabel('Predicted Y')\nplt.show()","da67fb02":"\nprint('MAE:', metrics.mean_absolute_error(y_test, predictions))\nprint('MSE:', metrics.mean_squared_error(y_test, predictions))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))","866f3e6c":"sns.distplot((y_test-predictions),bins=50)","7b0ea2f1":"print(lm.coef_)\nprint(lm.intercept_)","ddd76ef2":"cdf=pd.DataFrame(lm.coef_,X.columns,columns=['Coeff'])\nprint(cdf)","cd196556":"# Traiing and testing data\nX1=fuelprices[['Brent Crude Oil Spot Price ($\/barrel)']]\ny1=fuelprices['NY Ultra-Low Sulfur Diesel Spot Price ($\/gal)']","7fa54ade":"X_train1, X_test1, y_train1, y_test1 = train_test_split(X1, y1, test_size=0.3, random_state=101)","b0a55467":"X_train1.head()","8f7f3107":"X_test1.head()\n","a3a8c954":"X_train1.shape","367f3730":"#30% of total dataset(638)\nX_test1.shape","037a35f2":"lm1 = LinearRegression()\nlm1.fit(X_train1,y_train1) ","12421073":"predictions1 = lm.predict(X_test1)","c156b3a5":"\nplt.scatter(y_test1,predictions1)\nplt.xlabel('Y Test')\nplt.ylabel('Predicted Y')\nplt.show()","3532c3a1":"\nprint('MAE:', metrics.mean_absolute_error(y_test1, predictions1))\nprint('MSE:', metrics.mean_squared_error(y_test1, predictions1))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test1, predictions1)))\n","2b26bf5a":"sns.distplot((y_test1-predictions1),bins=50)","836fe94a":"print(lm1.coef_)\nprint(lm.intercept_)\ncdf1=pd.DataFrame(lm1.coef_,X1.columns,columns=['Coeff'])\nprint(cdf1)","a1734c60":"\n**#Training and Testing Data**** \nWTI Crude Oil Spot Price ($\/barrel)\nNY Conventional Gasoline Spot Price ($\/gal)\n\n X is the explanatory\/predictor  variable and Y is the dependent variable(response) \n We are taking 30% of the total data as test data and  70% as taining data","9d14b191":"**#Train\/fit lm on the training data.******","84af8250":"**#Residuals - Explore the residuals to make sure everything was okay with our data.\nPlot a histogram of the residuals and make sure it looks normally distributed**","d0d525bc":"**Predicting NY Ultra-Low Sulfur Diesel Spot Price considring the Brent Crude oil.**\n","575fca64":"**#Evaluating the Model******\n1. MAE - MAE is simply, as the name suggests, the mean of the absolute errors. The absolute error is the absolute value of the difference between the forecasted value and the actual value. MAE tells us how big of an error we can expect from the forecast on average.\n2. Mean Absolute Percentage Error (MAPE) allows us to compare forecasts of different series in different scales. \n3. RMSE- By squaring the errors before we calculate their mean and then taking the square root of the mean, we arrive at a measure of the size of the error that gives more weight to the large but infrequent errors than the mean\n\n***** The larger the difference between RMSE and MAE the more inconsistent the error size.*****\n\n","c74981d2":"#Training the Model\n#Importing the Linear regression and Instantaiting the model\n#Train\/fit lm on the training data.","73a24cd7":"**Create a scatterplot of the real test values versus the predicted values.******","75a11d53":"**Create a scatterplot of the real test values versus the predicted values.******","bb94eb84":"#Predicting Test Data","02c249bd":"**So the conclusion is , if Price ofBrent Crude Oil Spot Price is  $200\/barrel, we may see price ofNY Ultra-Low Sulfur Diesel Spot Price  0.3366687466462228 +200*0.025612 = $5.46-5.12 ish...\/gal ; Includng some error values.**\n","154cf9c2":"**#Predicting Test Data**","1a1a0b9f":"**So the conclusion is , if Price of WTI crude oil is  $200\/ barrel, we may see price of NY Conventional Gasoline Spot Price  : 0.3366687466462228 + 0.02416046*200 = $5.16-4.8 ish...\/gal  Includng some error values.**\n","3126f153":"#Evaluating the Model\n"}}