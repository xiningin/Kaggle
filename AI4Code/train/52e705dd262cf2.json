{"cell_type":{"851154c0":"code","339e307b":"code","d84c56c7":"code","9f5631ee":"code","2d42d1ca":"code","e0ac0463":"code","b39457da":"code","9b4711b4":"code","e481555c":"code","db596bdc":"code","cf8b868f":"code","7bb2575e":"code","de733eb3":"code","c2c4c618":"code","207b7cf1":"code","0b9534a4":"code","7c5c2c34":"code","447af65a":"code","6a3c477f":"code","2ed2f6df":"code","9297ed34":"code","493bcb11":"code","4a90cc20":"code","fed1b12e":"code","6a5d83e9":"code","93e0c387":"code","58116dd4":"code","a51a922f":"code","af3c501c":"code","d25d5c5a":"code","2245c62c":"code","90857ef4":"code","085b95af":"code","917a84e5":"code","068ef92e":"code","1edb5cd9":"code","5d285f0f":"code","d5c9f901":"code","85d9c7cd":"code","63f01a24":"code","3737d87c":"code","1feaab8c":"code","4a0a4e15":"markdown","beb7d6f8":"markdown","5e65d647":"markdown","7460cb54":"markdown","bc8ea533":"markdown","4ed9d2e4":"markdown","e04874f0":"markdown","f34bf203":"markdown","65cdb9bb":"markdown","7e5a996c":"markdown","1ea2dbc4":"markdown","4f05d9c5":"markdown","a92d58f7":"markdown","6a154988":"markdown","590ed5cc":"markdown","b374475f":"markdown","8df49447":"markdown","e7dc93bd":"markdown","8f4ec434":"markdown","5df8d5ce":"markdown","06c00857":"markdown","638414c0":"markdown","d6a95f26":"markdown","875b6257":"markdown","b26dc974":"markdown","f1302d02":"markdown","b6498b92":"markdown"},"source":{"851154c0":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.neighbors import NearestNeighbors\nfrom sklearn.preprocessing import scale\n%matplotlib inline","339e307b":"### Read : School data 2016\nschool_data = pd.read_csv(r'..\/input\/data-science-for-good\/2016 School Explorer.csv')\n\n### Reda : D5 SHSAT\nd5_shsat_data = pd.read_csv(r'..\/input\/data-science-for-good\/D5 SHSAT Registrations and Testers.csv')\n\n### Read : NYC school meals income levels [Source : Socrata]\nnyc_school_meals_income_levels = pd.read_csv(r'..\/input\/nyc-school-meals-income-levels\/nyc-school-meals-income-levels.csv')\n\n### Read : School ELA Results 2013-2017 (Public)\n\nschool_results = pd.read_csv(r'..\/input\/school-ela-results-20132017-public\/School ELA Results 2013-2017 (Public)_consolidated.csv')\n\n### Used datasets\nprint('School data 2016 : ',school_data.shape, '\\nDistrict 5 SHSAT data : ', d5_shsat_data.shape,'\\nNYC school meals income levels : ', nyc_school_meals_income_levels.shape, '\\nNYC School ELA Results(2013-2017) : ',school_results.shape)","d84c56c7":"############### Pre-processing ###############\n\n### Grade Low\/Grade High - conversion to type string\nschool_data['Grade Low'] = school_data['Grade Low'].astype(str)\nschool_data['Grade High'] = school_data['Grade High'].astype(str)\n\n### String conversion to decimal\ndef string2decimal(s):\n    if isinstance(s, str):\n        s = s.strip()\n        s = s.replace(\",\", \"\")\n        s = s.replace(\"$\", \"\")\n        s = s.replace(\"%\", \"\")\n        return float(s)\n    else:\n        return s\n\nschool_data['School Income Estimate'] = school_data['School Income Estimate'].apply(lambda x: string2decimal(x))\nschool_data['Percent ELL'] = school_data['Percent ELL'].apply(lambda x: string2decimal(x)\/100)\nschool_data['Percent Asian'] = school_data['Percent Asian'].apply(lambda x: string2decimal(x)\/100)\nschool_data['Percent Black'] = school_data['Percent Black'].apply(lambda x: string2decimal(x)\/100)\nschool_data['Percent Hispanic'] = school_data['Percent Hispanic'].apply(lambda x: string2decimal(x)\/100)\nschool_data['Percent Black \/ Hispanic'] = school_data['Percent Black \/ Hispanic'].apply(lambda x: string2decimal(x)\/100)\nschool_data['Percent White'] = school_data['Percent White'].apply(lambda x: string2decimal(x)\/100)\nschool_data['Student Attendance Rate'] = school_data['Student Attendance Rate'].apply(lambda x: string2decimal(x)\/100)\nschool_data['Percent of Students Chronically Absent'] = school_data['Percent of Students Chronically Absent'].apply(lambda x: string2decimal(x)\/100)\nschool_data['Rigorous Instruction %'] = school_data['Rigorous Instruction %'].apply(lambda x: string2decimal(x)\/100)\nschool_data['Collaborative Teachers %'] = school_data['Collaborative Teachers %'].apply(lambda x: string2decimal(x)\/100)\nschool_data['Supportive Environment %'] = school_data['Supportive Environment %'].apply(lambda x: string2decimal(x)\/100)\nschool_data['Effective School Leadership %'] = school_data['Effective School Leadership %'].apply(lambda x: string2decimal(x)\/100)\nschool_data['Strong Family-Community Ties %'] = school_data['Strong Family-Community Ties %'].apply(lambda x: string2decimal(x)\/100)\nschool_data['Trust %'] = school_data['Trust %'].apply(lambda x: string2decimal(x)\/100)\n\n\n\n\nschool_results['Mean Scale Score'] = school_results['Mean Scale Score'].apply(lambda x: int(x) if x != 's' else 's')\nschool_results['Level 1%'] = school_results['Level 1%'].apply(lambda x: float(x) if x != 's' else 0.1)\nschool_results['Level 2%'] = school_results['Level 2%'].apply(lambda x: float(x) if x != 's' else 0.1)\nschool_results['Level 3%'] = school_results['Level 3%'].apply(lambda x: float(x) if x != 's' else 0.1)\nschool_results['Level 4%'] = school_results['Level 4%'].apply(lambda x: float(x) if x != 's' else 0.1)\nschool_results['Level 3+4%'] = school_results['Level 3+4%'].apply(lambda x: float(x) if x != 's' else 0.1)\n\nschool_results[['Level 1%', 'Level 2%', 'Level 3%', 'Level 4%', 'Level 3+4%']] = school_results[['Level 1%', 'Level 2%', 'Level 3%', 'Level 4%', 'Level 3+4%']].replace(0, 0.1)\n","9f5631ee":"plt.figure(figsize=(10,7))\nservice_grade_categories = school_data[['SED Code', 'Grade Low', 'Grade High']].pivot_table(values = 'SED Code'\n                                        , index = 'Grade Low', columns = 'Grade High', aggfunc = np.size, fill_value = 0)\nplt.title('Field value represents # of schools\\n', fontsize=16)\nsns.heatmap(service_grade_categories, annot = True, fmt = 'd', linewidths=.2, cmap=\"YlGnBu\", )","2d42d1ca":"school_data['Early_Childhood'] = 0\nschool_data['Elementary'] = 0\nschool_data['Middle'] = 0\nschool_data['High'] = 0\n\nschool_data['Early_Childhood']  = np.where(school_data['Grade Low'].isin(['PK', '0K']) & school_data['Grade High'].isin(['0K', '02', '03', '04']), 1, \\\n                                           np.where(school_data['Grade Low'].isin(['PK', '0K']) & school_data['Grade High'].isin(['05', '06']), 1, \\\n                                                    np.where(school_data['Grade Low'].isin(['PK', '0K']) & school_data['Grade High'].isin(['08']), 1, \\\n                                                             np.where(school_data['Grade Low'].isin(['PK', '0K']) & school_data['Grade High'].isin(['12']), 1, 0))))\n\nschool_data['Elementary'] = np.where(school_data['Grade Low'].isin(['PK', '0K']) & school_data['Grade High'].isin(['05', '06']), 1, \\\n                                    np.where(school_data['Grade Low'].isin(['01', '02', '03', '04']) & school_data['Grade High'].isin(['05', '06']), 1, \\\n                                            np.where(school_data['Grade Low'].isin(['PK', '0K']) & school_data['Grade High'].isin(['08']), 1, \\\n                                                    np.where(school_data['Grade Low'].isin(['PK', '0K']) & school_data['Grade High'].isin(['12']), 1, 0))))\n\nschool_data['Middle'] = np.where(school_data['Grade Low'].isin(['PK', '0K']) & school_data['Grade High'].isin(['08']), 1, \\\n                                 np.where(school_data['Grade Low'].isin(['PK', '0K']) & school_data['Grade High'].isin(['12']), 1, \\\n                                          np.where(school_data['Grade Low'].isin(['04', '05', '06']) & school_data['Grade High'].isin(['08']), 1, \\\n                                                   np.where(school_data['Grade Low'].isin(['05', '06', '07']) & school_data['Grade High'].isin(['12']), 1, 0))))\n\nschool_data['High'] = np.where(school_data['Grade Low'].isin(['PK', '0K']) & school_data['Grade High'].isin(['12']), 1, \\\n                                np.where(school_data['Grade Low'].isin(['05', '06', '07']) & school_data['Grade High'].isin(['10', '12']), 1,\\\n                                         np.where(school_data['Grade Low'].isin(['09']) & school_data['Grade High'].isin(['12']), 1, 0)))","e0ac0463":"nyc_school_meals_income_levels.head()","b39457da":"print(\"Median ENI (%) : \", 100*school_data['Economic Need Index'].median())\nprint(\"Mean ENI (%) : \", 100*school_data['Economic Need Index'].mean())\nprint(\"Median School Income Estimate ($) : \", school_data['School Income Estimate'].median())\nprint(\"Mean School Income Estimate ($) : \", school_data['School Income Estimate'].mean())","9b4711b4":"f,axes=plt.subplots(1,3,figsize=(22,5))\n\nsns.kdeplot(school_data['Economic Need Index'].fillna(0), cut = 0, shade  = True, color = 'r', ax = axes[0])\naxes[0].set_title('Density Plot : Economic Need Index')\nsns.kdeplot(school_data['School Income Estimate'].fillna(0), cut = 0, shade  = True, color = 'b', ax = axes[1])\naxes[1].set_title('Density Plot : School Income Estimate')\nsns.regplot(x=\"Economic Need Index\", y=\"School Income Estimate\", data=school_data[['Economic Need Index', 'School Income Estimate']], ax = axes[2])\naxes[2].set_title('Correlation : Economic Need Index Vs. School Income Estimate')","e481555c":"f,axes=plt.subplots(1,2,figsize=(18,5),sharex=True)\nsns.regplot(x=\"Economic Need Index\", y=\"Average ELA Proficiency\", data=school_data[['Economic Need Index', 'Average ELA Proficiency']], ax = axes[0])\naxes[0].axvline(x = 0.7, color = 'r')\naxes[0].axhline(y = 3.0, color = 'r')\naxes[0].set_title('Correlation : Economic Need Index Vs. Average ELA Proficiency')\nsns.regplot(x=\"Economic Need Index\", y=\"Average Math Proficiency\", data=school_data[['Economic Need Index', 'Average Math Proficiency']], ax = axes[1])\naxes[1].axvline(x = 0.7, color = 'r')\naxes[1].axhline(y = 3.0, color = 'r')\naxes[1].set_title('Correlation : Economic Need Index Vs. Average Math Proficiency')","db596bdc":"### Ignore the missing part in the distribution\nf,axes=plt.subplots(1,2,figsize=(18,5),sharex=True)\n\nsns.kdeplot(school_data['Average ELA Proficiency'].fillna(0), shade  = True, color = 'r', ax = axes[0])\naxes[0].set_title('Density Plot : Average ELA proficiency')\n\nsns.kdeplot(school_data['Average Math Proficiency'].fillna(0), shade  = True, color = 'b', ax = axes[1])\naxes[1].set_title('Density Plot : Average Math proficiency')","cf8b868f":"school_data_high_eni_ela_proficient = school_data[(school_data['Economic Need Index'] >= 0.65) & (school_data['Average ELA Proficiency'] >= 3)]\nschool_data_low_eni_ela_proficient = school_data[(school_data['Economic Need Index'] < 0.65) & (school_data['Average ELA Proficiency'] >= 3)]\n\nschool_data_high_eni_math_proficient = school_data[(school_data['Economic Need Index'] >= 0.65) & (school_data['Average Math Proficiency'] >= 3)]\nschool_data_low_eni_math_proficient = school_data[(school_data['Economic Need Index'] < 0.65) & (school_data['Average Math Proficiency'] >= 3)]","7bb2575e":"f,axes=plt.subplots(1,2,figsize=(18,5),sharex=True)\n\nsns.kdeplot(school_data_high_eni_ela_proficient['Average ELA Proficiency'].fillna(0), shade  = True, color = 'b', ax = axes[0])\nsns.kdeplot(school_data_low_eni_ela_proficient['Average ELA Proficiency'].fillna(0), shade  = True, color = 'y', ax = axes[0])\naxes[0].set_title('Density Plot Comparision : Average ELA Proficiency \u2265 3\\nBlue : High ENI   Yellow : Low ENI')\n\nsns.kdeplot(school_data_high_eni_math_proficient['Average Math Proficiency'].fillna(0), shade  = True, color = 'b', ax = axes[1])\nsns.kdeplot(school_data_low_eni_math_proficient['Average Math Proficiency'].fillna(0), shade  = True, color = 'y', ax = axes[1])\naxes[1].set_title('Density Plot Comparision : Average Math Proficiency \u2265 3\\nBlue : High ENI   Yellow : Low ENI')","de733eb3":"school_data_high_eni_ela_below_proficient = school_data[(school_data['Economic Need Index'] >= 0.65) & (school_data['Average ELA Proficiency'] < 3)]\nschool_data_low_eni_ela_below_proficient = school_data[(school_data['Economic Need Index'] < 0.65) & (school_data['Average ELA Proficiency'] < 3)]\n\nschool_data_high_eni_math_below_proficient = school_data[(school_data['Economic Need Index'] >= 0.65) & (school_data['Average Math Proficiency'] < 3)]\nschool_data_low_eni_math_below_proficient = school_data[(school_data['Economic Need Index'] < 0.65) & (school_data['Average Math Proficiency'] < 3)]","c2c4c618":"f,axes=plt.subplots(1,2,figsize=(18,5),sharex=True)\n\nsns.kdeplot(school_data_high_eni_ela_below_proficient['Average ELA Proficiency'].fillna(0), shade  = True, color = 'b', ax = axes[0])\nsns.kdeplot(school_data_low_eni_ela_below_proficient['Average ELA Proficiency'].fillna(0), shade  = True, color = 'y', ax = axes[0])\naxes[0].set_title('Density Plot Comparision : Average ELA Proficiency \u2264 3\\nBlue : High ENI   Yellow : Low ENI')\n\nsns.kdeplot(school_data_high_eni_math_below_proficient['Average Math Proficiency'].fillna(0), shade  = True, color = 'b', ax = axes[1])\nsns.kdeplot(school_data_low_eni_math_below_proficient['Average Math Proficiency'].fillna(0), shade  = True, color = 'y', ax = axes[1])\naxes[1].set_title('Density Plot Comparision : Average Math Proficiency \u2264 3\\nBlue : High ENI   Yellow : Low ENI')","207b7cf1":"school_data['proficiency'] = np.where((school_data['Average ELA Proficiency'] >= 3) & (school_data['Average Math Proficiency'] >= 3), 1,\n                                np.where((school_data['Average ELA Proficiency'] >= 3) & (school_data['Average Math Proficiency'] < 3), 2,\n                                    np.where((school_data['Average ELA Proficiency'] < 3) & (school_data['Average Math Proficiency'] >= 3), 3, 4)))","0b9534a4":"f,axes=plt.subplots(4,2,figsize=(24,22))\n\nschool_data['proficiency'].hist(ax = axes[0,0])\naxes[0,0].set_title('Distribution of Proficiency Levels (Discrete)\\n1: Proficient in both    2: Proficient only in ELA    3: Proficient only in Math    4: Proficient in None')\n\nsns.kdeplot(100*school_data[school_data['proficiency'] == 1]['Percent ELL'].fillna(0), cut = 0, shade  = True, color = 'b', ax = axes[0,1])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 3]['Percent ELL'].fillna(0), cut = 0, shade  = True, color = 'g', ax = axes[0,1])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 4]['Percent ELL'].fillna(0), cut = 0, shade  = True, color = 'r', ax = axes[0,1])\naxes[0,1].set_title('\\nDensity Plot : Percent ELL\\nBlue : Proficient in both    Green : Proficient only in Math   Red : Proficient in None')\n\nsns.kdeplot(100*school_data[school_data['proficiency'] == 1]['Percent White'].fillna(0), cut = 0, shade  = True, color = 'b', ax = axes[1,0])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 3]['Percent White'].fillna(0), cut = 0, shade  = True, color = 'g', ax = axes[1,0])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 4]['Percent White'].fillna(0), cut = 0, shade  = True, color = 'r', ax = axes[1,0])\naxes[1,0].set_title('\\nDensity Plot : Percent White\\nBlue : Proficient in both    Green : Proficient only in Math   Red : Proficient in None')\n\nsns.kdeplot(100*school_data[school_data['proficiency'] == 1]['Percent Black'].fillna(0), cut = 0, shade  = True, color = 'b', ax = axes[1,1])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 3]['Percent Black'].fillna(0), cut = 0, shade  = True, color = 'g', ax = axes[1,1])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 4]['Percent Black'].fillna(0), cut = 0, shade  = True, color = 'r', ax = axes[1,1])\naxes[1,1].set_title('\\nDensity Plot : Percent Black\\nBlue : Proficient in both    Green : Proficient only in Math   Red : Proficient in None')\n\nsns.kdeplot(100*school_data[school_data['proficiency'] == 1]['Percent Asian'].fillna(0), cut = 0, shade  = True, color = 'b', ax = axes[2,0])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 3]['Percent Asian'].fillna(0), cut = 0, shade  = True, color = 'g', ax = axes[2,0])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 4]['Percent Asian'].fillna(0), cut = 0, shade  = True, color = 'r', ax = axes[2,0])\naxes[2,0].set_title('\\nDensity Plot : Percent Asian\\nBlue : Proficient in both    Green : Proficient only in Math   Red : Proficient in None')\n\nsns.kdeplot(100*school_data[school_data['proficiency'] == 1]['Percent Hispanic'].fillna(0), cut = 0, shade  = True, color = 'b', ax = axes[2,1])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 3]['Percent Hispanic'].fillna(0), cut = 0, shade  = True, color = 'g', ax = axes[2,1])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 4]['Percent Hispanic'].fillna(0), cut = 0, shade  = True, color = 'r', ax = axes[2,1])\naxes[2,1].set_title('\\nDensity Plot : Percent Hispanic\\nBlue : Proficient in both    Green : Proficient only in Math   Red : Proficient in None')\n\nsns.kdeplot(100*school_data[school_data['proficiency'] == 1]['Percent Black \/ Hispanic'].fillna(0), cut = 0, shade  = True, color = 'b', ax = axes[3,0])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 3]['Percent Black \/ Hispanic'].fillna(0), cut = 0, shade  = True, color = 'g', ax = axes[3,0])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 4]['Percent Black \/ Hispanic'].fillna(0), cut = 0, shade  = True, color = 'r', ax = axes[3,0])\naxes[3,0].set_title('\\nDensity Plot : Percent Black\/Hispanic\\nBlue : Proficient in both    Green : Proficient only in Math   Red : Proficient in None')\n\nsns.kdeplot(100*school_data[school_data['proficiency'] == 1]['Economic Need Index'].fillna(0), cut = 0, shade  = True, color = 'b', ax = axes[3,1])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 3]['Economic Need Index'].fillna(0), cut = 0, shade  = True, color = 'g', ax = axes[3,1])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 4]['Economic Need Index'].fillna(0), cut = 0, shade  = True, color = 'r', ax = axes[3,1])\naxes[3,1].set_title('\\nDensity Plot : Percent Economic Need Index\\nBlue : Proficient in both    Green : Proficient only in Math   Red : Proficient in None')\n","7c5c2c34":"school_data[school_data['Community School?'] == 'Yes']['proficiency'].value_counts()","447af65a":"f,axes=plt.subplots(4,2,figsize=(24,20))\n\nsns.kdeplot(100*school_data[school_data['proficiency'] == 1]['Rigorous Instruction %'].fillna(0), cut = 0, shade  = True, color = 'b', ax = axes[0,0])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 3]['Rigorous Instruction %'].fillna(0), cut = 0, shade  = True, color = 'g', ax = axes[0,0])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 4]['Rigorous Instruction %'].fillna(0), cut = 0, shade  = True, color = 'r', ax = axes[0,0])\naxes[0,0].set_title('\\nDensity Plot : Survey Response - Rigorous Instruction %\\nBlue : Proficient in both    Green : Proficient only in Math   Red : Proficient in None')\n\nsns.kdeplot(100*school_data[school_data['proficiency'] == 1]['Collaborative Teachers %'].fillna(0), cut = 0, shade  = True, color = 'b', ax = axes[0,1])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 3]['Collaborative Teachers %'].fillna(0), cut = 0, shade  = True, color = 'g', ax = axes[0,1])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 4]['Collaborative Teachers %'].fillna(0), cut = 0, shade  = True, color = 'r', ax = axes[0,1])\naxes[0,1].set_title('\\nDensity Plot : Survey Response - Collaborative Teachers %\\nBlue : Proficient in both    Green : Proficient only in Math   Red : Proficient in None')\n\nsns.kdeplot(100*school_data[school_data['proficiency'] == 1]['Supportive Environment %'].fillna(0), cut = 0, shade  = True, color = 'b', ax = axes[1,0])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 3]['Supportive Environment %'].fillna(0), cut = 0, shade  = True, color = 'g', ax = axes[1,0])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 4]['Supportive Environment %'].fillna(0), cut = 0, shade  = True, color = 'r', ax = axes[1,0])\naxes[1,0].set_title('\\nDensity Plot : Survey Response - Supportive Environment %\\nBlue : Proficient in both    Green : Proficient only in Math   Red : Proficient in None')\n\nsns.kdeplot(100*school_data[school_data['proficiency'] == 1]['Effective School Leadership %'].fillna(0), cut = 0, shade  = True, color = 'b', ax = axes[1,1])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 3]['Effective School Leadership %'].fillna(0), cut = 0, shade  = True, color = 'g', ax = axes[1,1])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 4]['Effective School Leadership %'].fillna(0), cut = 0, shade  = True, color = 'r', ax = axes[1,1])\naxes[1,1].set_title('\\nDensity Plot : Survey Response - Effective School Leadership %\\nBlue : Proficient in both    Green : Proficient only in Math   Red : Proficient in None')\n\nsns.kdeplot(100*school_data[school_data['proficiency'] == 1]['Strong Family-Community Ties %'].fillna(0), cut = 0, shade  = True, color = 'b', ax = axes[2,0])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 3]['Strong Family-Community Ties %'].fillna(0), cut = 0, shade  = True, color = 'g', ax = axes[2,0])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 4]['Strong Family-Community Ties %'].fillna(0), cut = 0, shade  = True, color = 'r', ax = axes[2,0])\naxes[2,0].set_title('\\nDensity Plot : Survey Response - Strong Family-Community Ties %\\nBlue : Proficient in both    Green : Proficient only in Math   Red : Proficient in None')\n\nsns.kdeplot(100*school_data[school_data['proficiency'] == 1]['Trust %'].fillna(0), cut = 0, shade  = True, color = 'b', ax = axes[2,1])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 3]['Trust %'].fillna(0), cut = 0, shade  = True, color = 'g', ax = axes[2,1])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 4]['Trust %'].fillna(0), cut = 0, shade  = True, color = 'r', ax = axes[2,1])\naxes[2,1].set_title('\\nDensity Plot : Survey Response - Trust %\\nBlue : Proficient in both    Green : Proficient only in Math   Red : Proficient in None')\n\nsns.kdeplot(100*school_data[school_data['proficiency'] == 1]['Economic Need Index'].fillna(0), cut = 0, shade  = True, color = 'b', ax = axes[3,0])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 3]['Economic Need Index'].fillna(0), cut = 0, shade  = True, color = 'g', ax = axes[3,0])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 4]['Economic Need Index'].fillna(0), cut = 0, shade  = True, color = 'r', ax = axes[3,0])\naxes[3,0].set_title('\\nDensity Plot : Economic Need Index\\nBlue : Proficient in both    Green : Proficient only in Math   Red : Proficient in None')\n\nsns.kdeplot(100*school_data[school_data['proficiency'] == 1]['School Income Estimate'].fillna(0), cut = 0, shade  = True, color = 'b', ax = axes[3,1])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 3]['School Income Estimate'].fillna(0), cut = 0, shade  = True, color = 'g', ax = axes[3,1])\nsns.kdeplot(100*school_data[school_data['proficiency'] == 4]['School Income Estimate'].fillna(0), cut = 0, shade  = True, color = 'r', ax = axes[3,1])\naxes[3,1].set_title('\\nDensity Plot : School Income Estimate\\nBlue : Proficient in both    Green : Proficient only in Math   Red : Proficient in None')\n","6a3c477f":"######################### Pre-processing #########################\n\n##### Drop missing values #####\n##### Dropped because missing in most of the columns #####\nschool_data_with_missing_values = pd.DataFrame()\nschool_data_with_missing_values = school_data_with_missing_values.append([school_data[~pd.notnull(school_data['Economic Need Index'])]])\nschool_data = school_data[pd.notnull(school_data['Economic Need Index'])]\n\n\n##### Impute missing values #####\n##### Strings with \"missing\", Numerical with mean #####\nschool_data['Student Achievement Rating'] = school_data['Student Achievement Rating'].fillna('missing')\nschool_data['Supportive Environment Rating'] = school_data['Supportive Environment Rating'].fillna('missing')\nschool_data['Collaborative Teachers Rating'] = school_data['Collaborative Teachers Rating'].fillna('missing')\nschool_data['Rigorous Instruction Rating'] = school_data['Rigorous Instruction Rating'].fillna('missing')\nschool_data['Trust Rating'] = school_data['Trust Rating'].fillna('missing')\nschool_data['Strong Family-Community Ties Rating'] = school_data['Strong Family-Community Ties Rating'].fillna('missing')\nschool_data['Effective School Leadership Rating'] = school_data['Effective School Leadership Rating'].fillna('missing')\nschool_data['Average Math Proficiency'] = school_data['Average Math Proficiency'].fillna(school_data['Average Math Proficiency'].mean())\nschool_data['Average ELA Proficiency'] = school_data['Average ELA Proficiency'].fillna(school_data['Average ELA Proficiency'].mean())\n\n\n##### Reset index school_data\nschool_data.reset_index(drop = True, inplace=True)\nschool_data.shape\n","2ed2f6df":"school_data['Community'] = np.where(school_data['Community School?'] == 'Yes', 1, 0)\nschool_data.shape","9297ed34":"### categorical variable encoding module\n\ndef categorical_variable_encoding(df):\n    return pd.get_dummies(df, columns=list(df))\n\nfor field in ['Rigorous Instruction Rating', 'Collaborative Teachers Rating', 'Supportive Environment Rating', 'Effective School Leadership Rating', 'Strong Family-Community Ties Rating', 'Trust Rating', 'Student Achievement Rating']:\n    df = categorical_variable_encoding(school_data[field])\n    df.columns = [field + ' ' + s for s in list(df)]\n    school_data = school_data.join(df)\nschool_data.shape","493bcb11":"##### Split school_data into 3 groups #####\ngroup1 = school_data[school_data['proficiency'] == 1].copy()\ngroup2 = school_data[school_data['proficiency'] == 3].copy()\ngroup3 = school_data[school_data['proficiency'] == 4].copy()\n\ngroup1.reset_index(drop=True, inplace=True)\ngroup2.reset_index(drop=True, inplace=True)\ngroup3.reset_index(drop=True, inplace=True)\n\n##### Convert to array #####\n\nX_group1 = np.array(group1[[    'Early_Childhood',\n                                'Elementary',\n                                'Middle',\n                                'High',\n                                'proficiency',\n                                'Community',\n                                'Economic Need Index',\n                                'Percent ELL',\n                                'Percent Asian',\n                                'Percent Black',\n                                'Percent Hispanic',\n                                'Percent Black \/ Hispanic',\n                                'Percent White',\n                                'Student Attendance Rate',\n                                'Percent of Students Chronically Absent',\n                                'Rigorous Instruction %',\n                                'Collaborative Teachers %',\n                                'Supportive Environment %',\n                                'Effective School Leadership %',\n                                'Strong Family-Community Ties %',\n                                'Trust %',\n                                'Rigorous Instruction Rating Approaching Target',\n                                'Rigorous Instruction Rating Exceeding Target',\n                                'Rigorous Instruction Rating Meeting Target',\n                                'Rigorous Instruction Rating Not Meeting Target',\n                                'Rigorous Instruction Rating missing',\n                                'Collaborative Teachers Rating Approaching Target',\n                                'Collaborative Teachers Rating Exceeding Target',\n                                'Collaborative Teachers Rating Meeting Target',\n                                'Collaborative Teachers Rating Not Meeting Target',\n                                'Collaborative Teachers Rating missing',\n                                'Supportive Environment Rating Approaching Target',\n                                'Supportive Environment Rating Exceeding Target',\n                                'Supportive Environment Rating Meeting Target',\n                                'Supportive Environment Rating Not Meeting Target',\n                                'Supportive Environment Rating missing',\n                                'Effective School Leadership Rating Approaching Target',\n                                'Effective School Leadership Rating Exceeding Target',\n                                'Effective School Leadership Rating Meeting Target',\n                                'Effective School Leadership Rating Not Meeting Target',\n                                'Effective School Leadership Rating missing',\n                                'Strong Family-Community Ties Rating Approaching Target',\n                                'Strong Family-Community Ties Rating Exceeding Target',\n                                'Strong Family-Community Ties Rating Meeting Target',\n                                'Strong Family-Community Ties Rating Not Meeting Target',\n                                'Strong Family-Community Ties Rating missing',\n                                'Trust Rating Approaching Target',\n                                'Trust Rating Exceeding Target',\n                                'Trust Rating Meeting Target',\n                                'Trust Rating Not Meeting Target',\n                                'Trust Rating missing',\n                                'Student Achievement Rating Approaching Target',\n                                'Student Achievement Rating Exceeding Target',\n                                'Student Achievement Rating Meeting Target',\n                                'Student Achievement Rating Not Meeting Target',\n                                'Student Achievement Rating missing',\n                                'Average ELA Proficiency',\n                                'Average Math Proficiency']])\n\nX_group2 = np.array(group2[[    'Early_Childhood', \n                                'Elementary', \n                                'Middle', \n                                'High',\n                                'proficiency',\n                                'Community',\n                                'Economic Need Index',\n                                'Percent ELL',\n                                'Percent Asian',\n                                'Percent Black',\n                                'Percent Hispanic',\n                                'Percent Black \/ Hispanic',\n                                'Percent White',\n                                'Student Attendance Rate',\n                                'Percent of Students Chronically Absent',\n                                'Rigorous Instruction %',\n                                'Collaborative Teachers %',\n                                'Supportive Environment %',\n                                'Effective School Leadership %',\n                                'Strong Family-Community Ties %',\n                                'Trust %',\n                                'Rigorous Instruction Rating Approaching Target',\n                                'Rigorous Instruction Rating Exceeding Target',\n                                'Rigorous Instruction Rating Meeting Target',\n                                'Rigorous Instruction Rating Not Meeting Target',\n                                'Rigorous Instruction Rating missing',\n                                'Collaborative Teachers Rating Approaching Target',\n                                'Collaborative Teachers Rating Exceeding Target',\n                                'Collaborative Teachers Rating Meeting Target',\n                                'Collaborative Teachers Rating Not Meeting Target',\n                                'Collaborative Teachers Rating missing',\n                                'Supportive Environment Rating Approaching Target',\n                                'Supportive Environment Rating Exceeding Target',\n                                'Supportive Environment Rating Meeting Target',\n                                'Supportive Environment Rating Not Meeting Target',\n                                'Supportive Environment Rating missing',\n                                'Effective School Leadership Rating Approaching Target',\n                                'Effective School Leadership Rating Exceeding Target',\n                                'Effective School Leadership Rating Meeting Target',\n                                'Effective School Leadership Rating Not Meeting Target',\n                                'Effective School Leadership Rating missing',\n                                'Strong Family-Community Ties Rating Approaching Target',\n                                'Strong Family-Community Ties Rating Exceeding Target',\n                                'Strong Family-Community Ties Rating Meeting Target',\n                                'Strong Family-Community Ties Rating Not Meeting Target',\n                                'Strong Family-Community Ties Rating missing',\n                                'Trust Rating Approaching Target',\n                                'Trust Rating Exceeding Target',\n                                'Trust Rating Meeting Target',\n                                'Trust Rating Not Meeting Target',\n                                'Trust Rating missing',\n                                'Student Achievement Rating Approaching Target',\n                                'Student Achievement Rating Exceeding Target',\n                                'Student Achievement Rating Meeting Target',\n                                'Student Achievement Rating Not Meeting Target',\n                                'Student Achievement Rating missing',\n                                'Average ELA Proficiency',\n                                'Average Math Proficiency']])\n\nX_group3 = np.array(group3[[    'Early_Childhood', \n                                'Elementary', \n                                'Middle', \n                                'High',\n                                'proficiency',\n                                'Community',\n                                'Economic Need Index',\n                                'Percent ELL',\n                                'Percent Asian',\n                                'Percent Black',\n                                'Percent Hispanic',\n                                'Percent Black \/ Hispanic',\n                                'Percent White',\n                                'Student Attendance Rate',\n                                'Percent of Students Chronically Absent',\n                                'Rigorous Instruction %',\n                                'Collaborative Teachers %',\n                                'Supportive Environment %',\n                                'Effective School Leadership %',\n                                'Strong Family-Community Ties %',\n                                'Trust %',\n                                'Rigorous Instruction Rating Approaching Target',\n                                'Rigorous Instruction Rating Exceeding Target',\n                                'Rigorous Instruction Rating Meeting Target',\n                                'Rigorous Instruction Rating Not Meeting Target',\n                                'Rigorous Instruction Rating missing',\n                                'Collaborative Teachers Rating Approaching Target',\n                                'Collaborative Teachers Rating Exceeding Target',\n                                'Collaborative Teachers Rating Meeting Target',\n                                'Collaborative Teachers Rating Not Meeting Target',\n                                'Collaborative Teachers Rating missing',\n                                'Supportive Environment Rating Approaching Target',\n                                'Supportive Environment Rating Exceeding Target',\n                                'Supportive Environment Rating Meeting Target',\n                                'Supportive Environment Rating Not Meeting Target',\n                                'Supportive Environment Rating missing',\n                                'Effective School Leadership Rating Approaching Target',\n                                'Effective School Leadership Rating Exceeding Target',\n                                'Effective School Leadership Rating Meeting Target',\n                                'Effective School Leadership Rating Not Meeting Target',\n                                'Effective School Leadership Rating missing',\n                                'Strong Family-Community Ties Rating Approaching Target',\n                                'Strong Family-Community Ties Rating Exceeding Target',\n                                'Strong Family-Community Ties Rating Meeting Target',\n                                'Strong Family-Community Ties Rating Not Meeting Target',\n                                'Strong Family-Community Ties Rating missing',\n                                'Trust Rating Approaching Target',\n                                'Trust Rating Exceeding Target',\n                                'Trust Rating Meeting Target',\n                                'Trust Rating Not Meeting Target',\n                                'Trust Rating missing',\n                                'Student Achievement Rating Approaching Target',\n                                'Student Achievement Rating Exceeding Target',\n                                'Student Achievement Rating Meeting Target',\n                                'Student Achievement Rating Not Meeting Target',\n                                'Student Achievement Rating missing',\n                                'Average ELA Proficiency',\n                                'Average Math Proficiency']])","4a90cc20":"##### Find out 3 nearest(considering above dimensions) school\nnbrs = NearestNeighbors(n_neighbors=3, algorithm='ball_tree').fit(X_group2)\nkneighbour_matrix = nbrs.kneighbors_graph(X_group1).toarray()\nkneighbour_matrix.shape","fed1b12e":"group1_school_index = 46\ngroup1.iloc[[group1_school_index]]","6a5d83e9":"i, = np.where(kneighbour_matrix[group1_school_index] == 1)\ngroup2.iloc[i]","93e0c387":"kneighbour_matrix.sum(axis = 0)","58116dd4":"score = list(set(kneighbour_matrix.sum(axis = 0)))\nscore","a51a922f":"group2_ranked = pd.DataFrame()\npriority = 0\ngroup2_ranked['priority'] = priority\nfor s in score:\n    temp_df = pd.DataFrame()\n    r, = np.where(kneighbour_matrix.sum(axis = 0) == s)\n    temp_df = temp_df.append(group2.iloc[r])\n    temp_df['priority'] = priority\n    priority += 1\n    group2_ranked = group2_ranked.append(temp_df)\ngroup2_ranked.reset_index(drop = True, inplace = True)\ngroup2_ranked.sort_values(by = 'priority', ascending = False, inplace = True)\ngroup2_ranked.head(5)","af3c501c":"group2_school_count_by_priority = pd.DataFrame(group2_ranked['priority'].value_counts()).reset_index(drop = False)\ngroup2_school_count_by_priority.columns = ['priority', 'Number of schools']\ngroup2_school_count_by_priority.sort_values(by = 'priority', inplace = True)\ngroup2_school_count_by_priority","d25d5c5a":"parameters ={\n    'Economic Need Index' : 'mean',\n    'Percent ELL' : 'mean', \n    'Percent Hispanic' : 'mean', \n    'Percent Black' : 'mean',\n    'Percent White' : 'mean',\n    'Percent Asian' : 'mean',\n    'Percent Black \/ Hispanic' : 'mean'\n    \n}\n\ngroup2_ranked[['priority', 'Economic Need Index', 'Percent ELL', 'Percent Hispanic', 'Percent Black', 'Percent White', 'Percent Asian', 'Percent Black \/ Hispanic']].groupby('priority').agg(parameters)","2245c62c":"def calculate_cagr(ser):\n    n = len(ser)\n    cagr = ((ser.iloc[-1]\/ser.iloc[0])**(1\/n)) - 1\n    return cagr*100","90857ef4":"parameters = {\n    'Enrollment on 10\/31' : calculate_cagr,\n    'Number of students who registered for the SHSAT' : calculate_cagr,\n    'Number of students who took the SHSAT' : calculate_cagr\n    }\n\nd5_shsat_data[['Enrollment on 10\/31', 'Number of students who registered for the SHSAT', 'Number of students who took the SHSAT']] = d5_shsat_data[['Enrollment on 10\/31', 'Number of students who registered for the SHSAT', 'Number of students who took the SHSAT']].replace(0, 1)\ncagr_d5_shsat = d5_shsat_data[['DBN', 'Grade level', 'Year of SHST', 'Enrollment on 10\/31', 'Number of students who registered for the SHSAT', 'Number of students who took the SHSAT']].groupby(['DBN', 'Grade level']).agg(parameters).reset_index(drop = False)\n","085b95af":"#cagr_d5_shsat[['Enrollment on 10\/31', 'Number of students who registered for the SHSAT', 'Number of students who took the SHSAT']] = cagr_d5_shsat[['Enrollment on 10\/31', 'Number of students who registered for the SHSAT', 'Number of students who took the SHSAT']]*100","917a84e5":"cagr_d5_shsat_grade8 = cagr_d5_shsat[cagr_d5_shsat['Grade level'] == 8]\ncagr_d5_shsat_grade8.reset_index(drop = True, inplace = True)\ncagr_d5_shsat_grade8","068ef92e":"cagr_d5_shsat_grade9 = cagr_d5_shsat[cagr_d5_shsat['Grade level'] == 9]\ncagr_d5_shsat_grade9.reset_index(drop = True, inplace = True)\ncagr_d5_shsat_grade9","1edb5cd9":"from sklearn.preprocessing import StandardScaler\nscaler8 = StandardScaler()\nscaler9 = StandardScaler()\ncagr_d5_shsat_scaled8 = pd.DataFrame(scaler8.fit_transform(cagr_d5_shsat_grade8[['Enrollment on 10\/31', 'Number of students who registered for the SHSAT', 'Number of students who took the SHSAT']]), columns=['Enrollment on 10\/31', 'Number of students who registered for the SHSAT', 'Number of students who took the SHSAT'])\ncagr_d5_shsat_scaled9 = pd.DataFrame(scaler9.fit_transform(cagr_d5_shsat_grade9[['Enrollment on 10\/31', 'Number of students who registered for the SHSAT', 'Number of students who took the SHSAT']]), columns=['Enrollment on 10\/31', 'Number of students who registered for the SHSAT', 'Number of students who took the SHSAT'])","5d285f0f":"f,axes=plt.subplots(1,2,figsize=(22,8))\nsns.heatmap(cagr_d5_shsat_scaled8, annot = cagr_d5_shsat_grade8[['Enrollment on 10\/31', 'Number of students who registered for the SHSAT', 'Number of students who took the SHSAT']], cmap = 'coolwarm_r', ax = axes[0])\naxes[0].set_title('\\nHeat Map : Grade 8 - CAGR Enrollment, Registration and Appearence \\nMore Blue : Stronger +ve growth   More Red : Stronger -ve growth')\nsns.heatmap(cagr_d5_shsat_scaled9, annot = cagr_d5_shsat_grade9[['Enrollment on 10\/31', 'Number of students who registered for the SHSAT', 'Number of students who took the SHSAT']], cmap = 'coolwarm_r', ax = axes[1])\naxes[1].set_title('\\nHeat Map : Grade 9 - CAGR Enrollment, Registration and Appearence \\nMore Blue : Stronger -ve growth   More Red : Stronger -ve growth')","d5c9f901":"#### Enter District Borough Number (dbn) below to check any specific school's figure\ndbn = '84M341'\nd5_shsat_data[d5_shsat_data['DBN'] == dbn]","85d9c7cd":"#school_data_d5 = school_data[school_data['Location Code'].isin(d5_shsat_data['DBN'].unique())].copy()\nschool_data_d5 = school_data[school_data['District'] == 5].copy()\nschool_data_d5.shape","63f01a24":"f,axes=plt.subplots(4,2,figsize=(24,22))\n\nschool_data_d5['proficiency'].hist(ax = axes[0,0])\nsns.kdeplot(school_data_d5['Economic Need Index'].fillna(0), cut = 0, shade  = True, color = 'r', ax = axes[0,1])\n\nsns.kdeplot(school_data_d5['Percent ELL'].fillna(0), cut = 0, shade  = True, color = 'r', ax = axes[1,0])\nsns.kdeplot(school_data_d5['Percent Black'].fillna(0), cut = 0, shade  = True, color = 'r', ax = axes[1,1])\n\nsns.kdeplot(school_data_d5['Percent White'].fillna(0), cut = 0, shade  = True, color = 'r', ax = axes[2,0])\nsns.kdeplot(school_data_d5['Percent Black \/ Hispanic'].fillna(0), cut = 0, shade  = True, color = 'r', ax = axes[2,1])\nsns.kdeplot(school_data_d5['Percent Asian'].fillna(0), cut = 0, shade  = True, color = 'r', ax = axes[3,0])","3737d87c":"parameters = {\n    'Number Tested' : calculate_cagr,\n    'Level 1%' : calculate_cagr,\n    'Level 2%' : calculate_cagr,\n    'Level 3%' : calculate_cagr,\n    'Level 4%' : calculate_cagr,\n    'Level 3+4%' : calculate_cagr\n    }\n\ncagr_proficiency_shift = school_results[['Category', 'DBN', 'Grade', 'Number Tested', 'Level 1%', 'Level 2%', 'Level 3%', 'Level 4%', 'Level 3+4%']].groupby(['Category','DBN', 'Grade']).agg(parameters).reset_index(drop = False)\n","1feaab8c":"grade = '8' ## Select from 3 to 8\ncategory = 'All Students' ##  Select from 'All Students', 'Asian', 'Black', 'Hispanic', 'White',\n              ## 'Econ Disadv', 'Not Econ Disadv', 'Female', 'Male', 'Ever ELL',\n              ## 'Never ELL', 'Current ELL', 'Not SWD', 'SWD'\ntemp_df = cagr_proficiency_shift[(cagr_proficiency_shift['Grade'] == grade) & (cagr_proficiency_shift['Category'] == category)].copy()\ntemp_df.reset_index(drop = True, inplace = True)\n\ndef scale_rows(df):\n    return scale(df, axis = 1)\n\nheatmap_input = pd.DataFrame(scale_rows(temp_df[['Level 1%', 'Level 2%', 'Level 3%', 'Level 4%']]), columns = ['Level 1%', 'Level 2%', 'Level 3%', 'Level 4%'])\nheatmap_input = heatmap_input.sort_values(by = 'Level 1%')\nf,axes=plt.subplots(figsize=(14,4))\nsns.heatmap(heatmap_input, cmap = 'coolwarm_r')","4a0a4e15":"Schools grouped by priority and their counts. 0 = Lowest priority.","beb7d6f8":"Grade 8 - Allmost all schools showing negative growth in enrollment, registration and appearence in the SHSAT.\n\nGrade 9  - Many schools showing negative growth in enrollment, registration and appearence in the exam. Few of them are steady(No +ve or -ve growth).\n\nThese discrict 5 schools are estimated to be socio-economically backward, proficient in None(ELA or Math), dominated by Black \/ Hispanic people, non-white\/non-asian and for majority of them English is secondary language. On top of everything, most of them are showing degrading performances participating in SHSAT. They have got 3 community schools.\n\nThis group is just a strong example of what we have explored in the first part of the study.","5e65d647":"## Value represents CAGR (%) over the period of 4 years. Growth shown for Grade 8 and 9 separately.","7460cb54":"### Value of the i-th postion of below 1D array represent \"number of times i-th candidate of Group2 has been selected","bc8ea533":"Categorizing schools based on ELA and Math proficiency.\n\nProficiency :\n\n1 = Proficient(>= 3) in both ELA and Math\n\n2 = Proficient(>= 3) in ELA but not in Math\n\n3 = Proficient(>= 3) in Math but not int ELA\n\n4 = Proficient(>= 3) in none","4ed9d2e4":"### Grade 8 :","e04874f0":"1. Majority(> 50%) of the NYC schools socio-economic conditions are poor(> 73%) [ Ref : Density Plot : Economic Need Index ].\n2. \"School's Income Estimate\" also strongly works as a proxy for socio-economic condition. Model for School Income Estimate are unclear. [ Ref : Correlation : Economic Need Index Vs. School Income Estimate ]","f34bf203":"#### Analysis of results ( Group2 --> Group1 Conversion)","65cdb9bb":"**Study : Survey Analysis**\n\n    INFO :\n\n    The 6 elements of the framework for great schools -\n    1. Rigorous Instruction\n    2. Collaborative Teachers\n    3. Supportive Environment\n    4. Effective School Leadership\n    5. Strong Family-Community Ties\n    6. Trust\n\n    Rigorous Instruction %  : Survery response (Overall % positive)\n\n        Do teachers believe that the school implements a high quality curriculum\u2014aligned to the Common Core\u2014that challenges students, scaffolds their experience, and engages students?\n        Do students believe that the school implements a high quality curriculum\u2014aligned to the Common Core\u2014that challenges students, scaffolds their experience, and is enlivened by teachers who are engaged?\n\n    Collaborative Teachers % : Survery response (Overall % positive)\n\n        Do parents feel that teachers are committed to student success, improving their schools, and continuous professional learning within a culture of respect?\n        Do students feel that teachers are committed to student success, improving their schools, and continuous professional learning within a culture of respect?\n\n    Supportive Environment % : Survery response (Overall % positive)\n\n        Do teachers feel that the school creates a culture that encourages students to support one another and provides for their social and emotional growth?\n        Do students feel that the school creates a culture that encourages students to support one another and provides for their social and emotional growth?\n\n    Effective School Leadership % : Survery response (Overall % positive)\n\n        How do parents feel about the school leadership\u2019s ability to develop a climate of inclusiveness, inspire staff and students with a clear vision for student achievement, and seek input of all members of the school community?\n        How do teachers feel about the school leadership\u2019s ability to develop a climate of inclusiveness, inspire staff and students with a clear vision for student achievement, and seek input of all members of the school community?\n\n    Strong Family-Community Ties % : Survery response (Overall % positive)\n\n        How do parents feel about communication with school staff and the school\u2019s efforts to engage parents as partners in their child\u2019s education?\n        How do teachers feel about communication with parents and the school\u2019s efforts to engage parents as partners in their child\u2019s education? \n\n    Trust % : Survery response (Overall % positive)\n\n        Do parents report feelings of mutual respect and value within the school community?\n        Do teachers report feelings of mutual respect and value within the school community?\n                    [Source : NYC School Survey Report 2015-2016 ]\n\nWe understand these 6 elements creates preception(in 6 distinct dimensions) of a school's rigor, collaboration, culture and environment from the POV of teachers, students and parents.","7e5a996c":"### Realize evolution of proficiency levels, over the years, for various groups","1ea2dbc4":"**Study : Impact of Economic Need Index on student's performance**\n\n1. Social and Economic status of students(population) highly impact their exam performance. [ Ref : Correlation : Economic Need Index Vs. Average Math Proficiency\/ELA Proficiency ]\n2. However, there are few schools where students are able to produce 'Proficient' and 'Above Proficient' results (First quadrant) despite they have \nvery high Economic Need Index (or very poor socio-economic condition). We would like to study them as a separate group and compare them with other cohort.[ Ref : Correlation : Economic Need Index Vs. Average Math Proficiency\/ELA Proficiency ]","4f05d9c5":"### District 5 students growth in SHSAT enrollment, registration and appearence over the years\n\nThe growth has been smoothen out over the years using Compound Annual Growth Rate (CAGR).\n\nCAGR(%) = [Final Value\/Initial Value] ^ (1\/Time Period)  - 1","a92d58f7":"3 nearest neighbour model shown below for Group 2 to Group1 conversion.\n\nIndex of kneighbour_matrix represent candidate school from Group1.\n\nColumn of kneighbour_matrix represent candidate school from Group2.","6a154988":"# Study : 2nd Part","590ed5cc":"There are not enough information available for many schools, to rank them or create a conversion strategy. We have dropped them. If you would like to explore them further, check them here - \"school_data_with_missing_values\".","b374475f":"**Study: School service categories**\n\n    INFO :\n    Early childhood School - pk,0k,1,2,3\n    Elementary School - pk,0k,1,2,3,4,5,6\n    Middle Schools - 5,6,7,8\n    High School - 9,10,11,12\n\n1. (209+409+19+7)\/1272 = 51% NYC schools serve Pre-kindergarten(PK)\/Kindergarten(0K) till grade 5\/6 [Early childhood plus Elementary School]\n2. 22% NYC schools serve grade 5\/6 till grade 8 [Middle School]\n3. 14% NYC schools serve Pre-kindergarten(PK)\/Kindergarten(0K) till grade 8 [Early childhood plus Elementary plus Middle School]\n4. 7% NYC schools serve  grade 5\/6 till grade 12 [Middle plus High School]\n5. 2% NYC schools serve Pre-kindergarten(PK)\/Kindergarten(0K) till grade 12 [Early childhood plus Elementary plus Middle plus High School]\n6. 1.5% NYC schools serves as only Early childhood Schools.\n\nSince students apply and appear for SHSAT in their 8th or 9th grade, all middle school's(All schools under point 2,3,4,5) environment, culture and curriculum(rigor) should significantly contribute to ones exam performance. Therefore, they need to be analysed as a separate group. However, impact of Elementary Schools should also be analysed separately (specifically schools under point 1) since they lay the founding stone of a students career path. We also realize, a major chunk of the entire student population migrate each year from Elementary school to Middle school\/Middle-High school.","8df49447":"## Conversion and Priority Ranking Scheme \n\nNow that we have got 3 distinct groups -\n\n* Group 1 -  Fully proficient in ELA and Math.\n* Group 2 - Proficient in Math but not in ELA.\n* Group 3 - Proficient in none.\n\nWe can build a scheme to  - \n\n* Convert candidate of Group 3 to Group 2 [Atleast make the schools proficient in one(Math) where currently they are proficient in none]\n* Convert candidate of Group 2 to Group 1 [Make the schools proficient in both where currently they are proficient in one(Math)]\n\nConversion and Priority Ranking Model [ Group 2 --> Group 1 ]\n\n1. Given each candidate from Group 1, find out K-nearest neighbours from Group 2 based on the dimensions representing school service categories, Economic Need index, student body demographics, perceived environment and culture of the school. Compare each of the dimensions of the given candidate to its K neighbours to deduce conversion strategy.\n\n2. Rank candidates in Group 2 based on number of times it was selected as a nearest neighbour. Higher the number of selection means it is close to many number of schools who are doing good.","e7dc93bd":"#### Change \"Grade\" and \"Category\" and run below two code blocks to vizualize the ELA proficiency growth in various groups\n\nInterpretation of results : Ideally is expected, over the years, for each grade, a school will be able to upgrade their ELA proficiency from Level 1% \/ Level 2% to \nLevel 3% \/  Level 4%. Therefore, in heatmap leftmost 2 columns are expected to be in RED base and rightmost 2 columns are expected to be in BLUE base if most of the schools are able to do that. Few noise are extected obviously.\n\nExample - \n\nA. Over the period of 2013-2017, Grade 8 Hispanic student community has been able to upgrade their ELA proficiency. (Left two columns are RED base, Right two columns are BLUE base, noise present)\n\nB. Over the period of 2013-2017, Grade 8 White student community has remain nearly unchanged in their ELA proficiency levels. (All columns are BLUE base, noise present)","8f4ec434":"## Study :\n\n### First Part\n\nIn this part, I tried to split the schools into different cohort based on various aspects(as mentioned below), and did a comparative analysis of students performance, percieved culture and student body demographics across the cohorts.\n\n* Study : Schools service categories - Not all NYC school serve from pre-kindergarten\/Kindergarten till 12. There are 4 predominant service catergories.\n\n        a. Early chilhood school  b. Elementary school  c. Middle school  d. High school\n\nSince, student apply for SHSAT in their 8th and 9th grade, middle schools contribution towards the SHSAT success are expected to be high as compared to other categories. Elementary schools contribution also need to be analysed separately. Interestingly also, more than 50% of the NYC schools serve till Elementary level. Therefore, a significant proportion of the entire student population do migrate each year from Elementary school to Middle school\/Middle-High school.\n\n* Study : Understand Economic Need Index(ENI) - More than 50% of NYC schools has ENI greater than 70%. Social and Economic status of students(population) highly impact their performance in schools. Therefore, it is imperative to measure that impact.\n\n* Study : ELA and Math proficiency - There is a distinct group of schools where they are significantly lacking in ELA when theirs Math performance stands extremely good. Mainly because significant % of enrolled student's first language is not English. Race\/Ethnicity distinction are also prominent between the groups.\n\nIn the very end, I tried to put a Conversion Scheme and Priority Ranking model.\n\n### Second Part\n\nIn this part, I have tried to see the growth of district 5 schools enrollment, registration and participation in SHSAT over the years. And, the result clearly shows growth for most of them has decreased over the years with few of them being expection.\n\nAdditionally, I have used one external data source to compare how ELA proficiency has evolved over the years for various groups(By Ethnicity, Gender, Economic condition, English language learners etc.)\n\nNote : Since no good SHSAT dataset is publicly available, I have taken a basic assumption of - Proficiency in ELA and Math (as determined by the US Common-Core standards) at each grade(3-8) represent students growth and acts as an indicator for a students success in the SHSAT. However, this will be a serapate study to prove the hypothesis - 'Proficient students(in ELA and Math) are more successful in the SHSAT'.\n\n###### Acknowledgement : I do appreciate all other kernel authors and their works here. I try to follow them mostly and they heavily motivates my study here.","5df8d5ce":"Comparision of Avg. ELA and Avg. Math proficiency shown below.  Comparision drawn for proficiency level of 1 and 2 for High ENI vs. Low ENI schools(based on cutoff ENI = 0.65). \nBased on estimation, it seems (and it is intuitively obvious, as we already have realized this above in ENI vs. Avg ELA\/Math proficiency) majority of the High ENI school's require significant improvement in ELA and Math.","06c00857":"    INFO :\n    The City provides educational services to students who speak a language other than English at home and are not yet proficient in English. If a school does not have a bilingual program, parents may select another school in the same school district that does have a program.\n                                                              [Source : English Language Learners(ELL) and Bilingual program, NYC.gov]\n\n143 NYC schools are both proficient in ELA and Math. They have very low % of English Language Learners (ELL) (since most of the students are English speaking and by default proficient in English) and tends to have 'White' dominance. Within this group, there is a subgroup who has higher socio-economic need.\n\n154 NYC schools are proficient in Math but not in ELA. This group of schools tends to have higher % of ELL (since most of the students are non-English speaking and learners).\n\n3 NYC schools are proficient in ELA not not in Math.\n\n972 NYC schools are proficient in none. This group is predominantly represented by Black\/Black-Hispanic. All community schools falls under this category (That justifies the purpose of community schools as well).","638414c0":"### Rank schools in group 2, rank order - top to bottom, highest priority to lowest priority(where lowest marked by 0)","d6a95f26":"**Study : Understand Economic Need Index**\n\nEconomic Need Index(ENI) reflects the socio-economic position of the school as being represented by its student population. Given by the below formula -\n\nEconomic Need Index = (Percent Temporary Housing) + (Percent HRA-eligible X 0.5) + (Percent Free Lunch Eligible X 0.5)\n\nWhere, \n\n1. Students are identified in Temporary housing if they are identified in temporary housing in last 4 years. Highest weightage has been given to this factor while calculating ENI.\n2. Students are identified as HRA-eligible if their families have been identified by the Human Resource Administration(HRA) as receiving certain types of public assistance.\n3. Student are identified as free lunch eligible based on the below table. Then also, all public school students are free lunch elibigle.\n\nClearly, higher ENI means poor socio-economic condition of a school population.","875b6257":"### Grade 9 :","b26dc974":"    INFO : Each year, New York State administers exams in English Language Arts (ELA) and mathematics to students across the state in grades 3 through 8. \n    In addition to fulfilling federal and state mandates, these Common Core-aligned exams also help gauge year-to-year progress for students and schools. \n    The Proficiency Rating, which can range from 1.0 \u2013 4.5, shows where a student fell within a particular Performance Level. \n    For example, a Proficiency Rating of 2.5 would indicate that a student scored at Performance Level 2 with a scale score that is halfway between \n    the lowest Performance Level 2 score and the lowest Performance Level 3 score. For Performance Level 4, the highest possible Proficiency Rating is 4.5.\n    \n    NYS Level 4 : Above Proficient\n    NYS Level 3 : Proficient\n    NYS Level 2 : Below Proficient\n    NYS Level 1 : Well below Proficient\n                                                                                         [Source : Understanding of ELA, Individual Student Report - NYC DOE]\n                                                                                       \nExtected [Average ELA proficiency(for all the schools)] : 2.53\n\nExtected [Average Math proficiency(for all the schools)] : 2.66\n\nENI = 0.65 intutively choosen(close to mean) from the ENI distribution as a hard cut off to define High ENI and Low ENI group. However, more granular analysis can also be done for individual ENI level.","f1302d02":"Comparision of Avg. ELA and Avg. Math proficiency shown below. Comparision drawn for proficiency level of 3 and 4 for High ENI vs. Low ENI schools(based on cutoff ENI = 0.65). Estimated ELA proficiency tends to be better in High ENI schools (poor socio-economic condition). Estimated Math proficiency seems to be almost same compared to Low ENI schools.","b6498b92":"### Select any reference school from Group1 by changing index between 0-142 and execute below two blocks of codes to compare it with 3 nearest neighbours from group2"}}