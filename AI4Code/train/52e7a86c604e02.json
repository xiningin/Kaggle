{"cell_type":{"e5237cec":"code","0d30a079":"code","dca1887a":"code","ece4ad94":"code","0d78360f":"code","e0321d14":"code","85de8636":"code","6c495896":"code","0cb1b59e":"code","d28c8f38":"code","133d5a67":"code","979bf67e":"code","45e5ef7e":"code","cf32c3ff":"code","3e2330a1":"markdown","182ff3cf":"markdown","47ea0484":"markdown","9705cfea":"markdown","27430faa":"markdown","f66e40e4":"markdown","4a8e5783":"markdown"},"source":{"e5237cec":"import numpy as np\nimport pandas as pd","0d30a079":"!pip uninstall -y typing","dca1887a":"!pip install hdbscan","ece4ad94":"from sklearn.datasets import make_classification, make_blobs\nimport matplotlib.pyplot as plt\n\nfrom sklearn.cluster import DBSCAN\nimport hdbscan\nfrom sklearn.cluster import SpectralClustering\n\nfrom tqdm import tqdm_notebook as tqdm\n\nimport seaborn as sns\nsns.set()","0d78360f":"# X, Y = make_classification(n_samples=10000, n_features=2, n_informative=2, n_redundant=0, n_repeated=0, \n#                            n_classes=2, n_clusters_per_class=2, class_sep=1.0, hypercube=True, shift=0.0, \n#                            scale=1.0, random_state=42)\n\nX, Y = make_blobs(n_samples=[800, 800, 800, 800], n_features=4, \n                  centers=[(1, 4.5), (2, 15), (13, 7), (-11, -5)], \n                  cluster_std=[(2.5, 2.0), (2.0, 1.7), (1.7, 4.5), (2.7, 3.5)], \n                  random_state=42)","e0321d14":"df = pd.DataFrame(data=np.column_stack((X, Y)), columns=['x', 'y', 'Class'])\ndf.head()","85de8636":"plt.subplots(figsize=(12, 8))\nsns.scatterplot(x=\"x\", y=\"y\", hue=\"Class\", \n                data=df, palette=plt.cm.viridis, s=70, \n                alpha=0.7, edgecolor='k', linewidth=0.8)\nplt.gca().set_aspect('equal', adjustable='box')\nplt.show()","6c495896":"len_columns = 5\ncount_plot = 50\nfig = plt.figure(figsize=(25, 1.2 * count_plot))\n\nfor j, i in enumerate(np.linspace(2, 4, count_plot)):\n    cluster = DBSCAN(eps=i, min_samples=300, p=1, n_jobs=-1)\n    pred = cluster.fit_predict(X)\n    \n    fig.add_subplot(count_plot \/\/ len_columns + 1, len_columns, j + 1)\n    plt.scatter(X[:, 0], X[:, 1], c=pred, s=50, cmap='magma', edgecolor='k', linewidth=0.5, alpha=1)\n    plt.title(f'eps = {i}')\n    plt.grid()\n    plt.gca().set_aspect('equal', adjustable='box')","0cb1b59e":"len_columns = 5\ncount_plot = 50\nfig = plt.figure(figsize=(25, 1.2 * count_plot))\n\nfor j, i in enumerate(np.linspace(2, count_plot + 1, count_plot, dtype=np.int32)):\n    clusterer = hdbscan.HDBSCAN(min_cluster_size=int(i))\n    cluster_labels = clusterer.fit_predict(X)\n    \n    fig.add_subplot(count_plot \/\/ len_columns + 1, len_columns, j + 1)\n    plt.scatter(X[:, 0], X[:, 1], c=cluster_labels, s=50, cmap='magma', edgecolor='k', linewidth=0.5, alpha=1)\n    plt.title(f'min_cluster_size = {i}')\n    plt.grid()\n    plt.gca().set_aspect('equal', adjustable='box')","d28c8f38":"len_columns = 5\ncount_plot = 10\nfig = plt.figure(figsize=(25, 1.2 * count_plot))\n\nfor j, i in enumerate(tqdm(np.linspace(0.5, 2, count_plot))):\n    clusterer = SpectralClustering(n_clusters=4, affinity='rbf', degree=4, gamma=i, n_jobs=-1)\n    cluster_labels = clusterer.fit_predict(X)\n    \n    fig.add_subplot(count_plot \/\/ len_columns + 1, len_columns, j + 1)\n    plt.scatter(X[:, 0], X[:, 1], c=cluster_labels, s=50, cmap='magma', edgecolor='k', linewidth=0.5, alpha=1)\n    plt.title(f'gamma = {i}')\n    plt.grid()\n    plt.gca().set_aspect('equal', adjustable='box')","133d5a67":"df = pd.DataFrame({\n    'x': X[:, 0],\n    'y': X[:, 1],\n    'DBSCAN': DBSCAN(eps=3.5, min_samples=300, p=1, n_jobs=-1).fit_predict(X),\n    'HDBSCAN': hdbscan.HDBSCAN(min_cluster_size=36).fit_predict(X),\n    'Spectral': SpectralClustering(n_clusters=4, affinity='rbf', gamma=1.5, n_jobs=-1).fit_predict(X),\n    'Number class': Y\n})\ndf","979bf67e":"df['DBSCAN'].value_counts()","45e5ef7e":"df['Spectral'].value_counts()","cf32c3ff":"df['HDBSCAN'].value_counts()","3e2330a1":"## SpectralClustering","182ff3cf":"## HDBSCAN","47ea0484":"min_cluster_size = 36","9705cfea":"Spectral is better","27430faa":"$\\epsilon$ ~ 3.5","f66e40e4":"$\\gamma$ = 0.66(6) and 1.5 slightly different\n\n$\\forall \\gamma$","4a8e5783":"## DBSCAN"}}