{"cell_type":{"67f1e08d":"code","51739d42":"code","b524404c":"code","75fc189a":"code","00cd5828":"code","4bf60be2":"code","11fc3f4d":"code","98c9bfb8":"code","e1f780e2":"code","fff5027b":"code","982f31c9":"code","ee7bcc8c":"code","a2b4c493":"code","c1bf9751":"code","e1c123e4":"code","6e316af0":"code","d4cf8870":"code","ad504937":"code","0d7dc3a6":"code","c2fb7cef":"code","4879ae7c":"code","87d2a274":"code","de2f9a25":"code","0d0463c2":"code","4090c213":"code","5cf2dc97":"code","72d99cbf":"code","32841e93":"code","4493e425":"code","930fc1f3":"code","bebf84f6":"code","cb171a74":"code","96d46379":"code","2b1bcc74":"code","c71ff181":"code","a60ae3bd":"code","6f1e6396":"code","3938b12e":"markdown","44113a82":"markdown","709390aa":"markdown","b4771e2b":"markdown","97ad46d5":"markdown","7e276f0f":"markdown","ca7de2f1":"markdown","9448e36d":"markdown","fa524955":"markdown","ca14c43d":"markdown","4439cc6b":"markdown","82adfc16":"markdown","ef756120":"markdown","ab9de8cc":"markdown","b145db6a":"markdown","b715ae33":"markdown","a9e8d74e":"markdown","4ea4c3de":"markdown"},"source":{"67f1e08d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","51739d42":"dataset=pd.read_csv('\/kaggle\/input\/pima-indians-diabetes-database\/diabetes.csv')\ndataset.head()","b524404c":"import seaborn as sns\nimport matplotlib.pyplot as plt\nprint(\"no of people with no diabestes \",dataset.Outcome.value_counts()[0])\nprint(\"no of people with diabestes \",dataset.Outcome.value_counts()[1])\nsns.countplot(dataset.Outcome)\nplt.savefig('no of values of the each datapoint.jpg')","75fc189a":"heat=dataset.corr()\nsns.heatmap(heat)\nplt.savefig('correlation_heatmap.jpg')","00cd5828":"sns.pairplot(dataset,hue='Outcome')\nplt.savefig('fig3.jpg')","4bf60be2":"sns.regplot(x=dataset.Pregnancies,y=dataset.Outcome)\nplt.savefig('pregnancy vs outcome relation.jpg')","11fc3f4d":"from sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import f_classif","98c9bfb8":"x=dataset.drop(['Outcome'],axis=1)\nx.head()\nx=np.array(x)\nprint(x.shape)","e1f780e2":"y=dataset[['Outcome']]\ny.head()\ny=np.array(y).ravel()\nprint(y.shape)","fff5027b":"test=SelectKBest(score_func=f_classif,k='all')\nfit=test.fit(x,y)\nprint(\"the signicance of the respective data features wrt to the output variable are \\n\",fit.scores_)","982f31c9":"test1=SelectKBest(score_func=f_classif,k=5)\nfit1=test1.fit(x,y)\nprint(fit1.scores_)","ee7bcc8c":"x=fit1.transform(x)\n","a2b4c493":"sns.distplot(x[:,0],rug=True,kde=True)\nplt.savefig('distribution of the preganancies throughout the dataset.jpg')","c1bf9751":"sns.distplot(x[:,1],rug=True,kde=True)\nplt.savefig('glusose distribution.jpg')","e1c123e4":"sns.distplot(x[:,2],rug=True,kde=True)\nplt.savefig('BMI distribution.jpg')","6e316af0":"g=sns.PairGrid(dataset)\ng.map_diag(sns.kdeplot)\ng.map_offdiag(sns.kdeplot, n_levels=6)\nplt.savefig('fig7.jpg')","d4cf8870":"sns.boxplot(x='Pregnancies',y='Glucose',hue='Outcome',data=dataset)\nplt.savefig('fig8.jpg')","ad504937":"sns.clustermap(heat)\nplt.savefig('fig9.jpg')","0d7dc3a6":"X_data=pd.DataFrame(x,columns=['Pregnancies','Glucose','BMI','diabetespedigreefunction','age'])\nX_data.head()","c2fb7cef":"Y_data=pd.DataFrame(y,columns=['Outcome'])\nY_data.head()","4879ae7c":"from sklearn.model_selection import train_test_split\nX_train,X_test,Y_train,Y_test=train_test_split(X_data,Y_data,test_size=0.25)","87d2a274":"sns.countplot(np.array(Y_train).ravel())\nplt.savefig('count of datapoints in y_train.jpg')","de2f9a25":"from imblearn.over_sampling import SMOTE \nsm = SMOTE(random_state = 2) \nX_train,Y_train=sm.fit_sample(np.array(X_train),np.array(Y_train).ravel())","0d0463c2":"sns.countplot(Y_train.ravel())\nplt.savefig('count of datapoint in the train data.jpg')","4090c213":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import roc_curve,confusion_matrix,roc_auc_score,accuracy_score","5cf2dc97":"model=LogisticRegression(solver='lbfgs',max_iter=200)\nmodel.fit(X_train,Y_train)","72d99cbf":"Y_predict_probs=model.predict_proba(X_test)\nY_predict_probs=Y_predict_probs[:,1]","32841e93":"lr_auc=roc_auc_score(Y_test,Y_predict_probs)\nprint(\"the area under the roc curve is \",lr_auc)","4493e425":"fpr,tpr,thresholds=roc_curve(Y_test,Y_predict_probs)","930fc1f3":"plt.plot([0,1], [0,1], linestyle='--', label='No Skill')\nplt.plot(fpr, tpr, marker='.', label='Logistic')\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.legend()\nplt.show()\nplt.savefig('roc_curve.jpg')","bebf84f6":"g_means= np.sqrt(tpr*(1-fpr))\nix=np.argmax(g_means)\nprint(\"the optimum threshold value for the given dataset is \", thresholds[ix])","cb171a74":"plt.plot([0,1], [0,1], linestyle='--', label='No Skill')\nplt.plot(fpr, tpr, marker='.', label='Logistic')\nplt.scatter(fpr[ix], tpr[ix], marker='o', color='black', label='Best')\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.legend()\nplt.show()\nplt.savefig('roc_curve_optimum_value.jpg')","96d46379":"THRESHOLD=thresholds[ix]\ny_predict=np.where(model.predict_proba(X_test)[:,1]>THRESHOLD ,1,0)\n","2b1bcc74":"acc=accuracy_score(Y_test,y_predict)\nprint(\"the accuracy of the model is \",acc)\n","c71ff181":"confusion_matrix(Y_test,y_predict)","a60ae3bd":"model2=LogisticRegression()\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.25)\nmodel2.fit(x_train,y_train)\npreds=model2.predict(x_test)\nprint(\"the accuracy of the model without feature engineering is \",accuracy_score(y_test,preds))","6f1e6396":"confusion_matrix(y_test,preds)","3938b12e":"distribution of pregnancies throughout the dataset","44113a82":"getting the false positive rate , true positive rate and different threshold value from the roc curve to find the most optimum threshold value","709390aa":"the different count of the counts of the classes","b4771e2b":"**performing anova test for feature selection and extraction. anova test is usefull when the output variable is categorical and input variable is numberical **","97ad46d5":"building the model without any feature engineering","7e276f0f":"By the plot we can see the mostly the women who have been 0 or 1 time pregnant are wihtin the dataset cluster","ca7de2f1":"peforming train and test split to keep both data points separate for effecive evaluation of the model after training\" ","9448e36d":"fitting the model","fa524955":"since from the above countplot it is visible that there are diffent number of outcome points . this will lead to imbalanced classification. to avoid this SMOTE technique has been used to get equal number of datapoint . this technique does not lead to gain in datapoint","ca14c43d":"finding the correlation matrix and the heat map to find the relation of the features with each other. The correlation matrix values tell how much a feature is related to other feature. this helps in ruling out useless features and keeing the importtant ones","4439cc6b":"getting the probabilities of the each daatpoint in the x_test data which will then be used for threshold tuning","82adfc16":"predicting the values according the new threshold value","ef756120":"transforming the x dataset acc to the 5 most important features in the dataset","ab9de8cc":"formulating the X_data and Y_data for training ","b145db6a":"making the x dataste by dropping the outcome column and y dataset","b715ae33":"making the logistic regression model for classification","a9e8d74e":"**by the above anova test on the  input features among outcome variable we can see that the 5 features namely pregnancy , glucose , bmi , diabetes_pedigree_function and age are the most important factors in the prediction of the outcome **","4ea4c3de":"gmeans tchniques is used to find the most optimumvalue of the threshold from the roc curve fpr and tpr values"}}