{"cell_type":{"d95f38e8":"code","548de150":"code","94e246d7":"code","698744e6":"code","3aa9c5d9":"code","bd8b9b3b":"code","2a75424c":"code","b1103f4c":"code","99a6c8b6":"code","114bc633":"code","88e607bc":"code","4c93d58d":"code","dc704dff":"code","e9c1739e":"code","dec98007":"code","44394662":"code","dddc851f":"markdown","e50dfb25":"markdown","384b0734":"markdown","a0fa56ca":"markdown"},"source":{"d95f38e8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","548de150":"data = pd.read_csv('\/kaggle\/input\/500-person-gender-height-weight-bodymassindex\/500_Person_Gender_Height_Weight_Index.csv')","94e246d7":"data.head()","698744e6":"data.describe()","3aa9c5d9":"data.info()","bd8b9b3b":"# importing visualization libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns","2a75424c":"sns.relplot(x='Height',y='Weight',data=data,hue='Gender')","b1103f4c":"data = pd.get_dummies(data)\n","99a6c8b6":"data.drop('Gender_Male',axis=1, inplace=True)\ndata.head()","114bc633":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_score","88e607bc":"X =data.drop('Index',axis=1)\ny = data['Index']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)","4c93d58d":"model = LogisticRegression()\nmodel.fit(X_train,y_train)","dc704dff":"y_pred = model.predict(X_test)","e9c1739e":"print(classification_report(y_test,y_pred))","dec98007":"print(confusion_matrix(y_test,y_pred))","44394662":"print(accuracy_score(y_test,y_pred))","dddc851f":"# Exploratory Data Analysis","e50dfb25":"# Model Building","384b0734":"# Preprocessing","a0fa56ca":"# Loading the data"}}