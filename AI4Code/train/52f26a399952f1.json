{"cell_type":{"b184af38":"code","2b819c80":"code","94961cfc":"code","2d63a77a":"code","2634c6d9":"code","e396f94e":"code","19564d74":"code","e436d9fb":"code","b90b0557":"code","f55ff122":"code","32ac5095":"code","762f64dc":"code","dc7011aa":"code","67c76bf7":"code","c5de4531":"code","0543d1c8":"code","31618176":"code","d17155eb":"code","24f426c2":"code","afa2cff3":"code","4176fe00":"code","b686d707":"code","63d1e1d3":"code","f534cd46":"code","af54d154":"code","c3f8db4b":"code","bfa2ce3f":"markdown"},"source":{"b184af38":"import pandas as pd\ndataset=pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ndataset.head()","2b819c80":"dataset.info()","94961cfc":"dataset.nunique().sort_values(ascending=False)[:5]","2d63a77a":"data = dataset.sample(frac=0.8, random_state=42)\ndata_unseen = dataset.drop(data.index)\ndata.reset_index(inplace=True, drop=True)\ndata_unseen.reset_index(inplace=True, drop=True)\nprint('Data for Modeling: ' + str(data.shape))","2634c6d9":"print('Unseen Data For Predictions: ' + str(data_unseen.shape))","e396f94e":"!pip install pycaret","19564d74":"from pycaret.classification import *","e436d9fb":"numeric_features=data.columns.tolist()\nnumeric_features.remove('label')\nnumeric_features[:5]","b90b0557":"data.label.value_counts()","f55ff122":"exp_clf101 = setup(data = data, target = 'label', session_id=42,\n                  normalize = True, \n                  transformation = True, \n                  log_experiment = True,\n                  handle_unknown_categorical = True, \n                  unknown_categorical_method = 'most_frequent',\n                  remove_multicollinearity = True, #rop one of the two features that are highly correlated with each other\n                  ignore_low_variance = True,#all categorical features with statistically insignificant variances are removed from the dataset.\n                  combine_rare_levels = True,# all levels in categorical features below the threshold defined in rare_level_threshold param are combined together as a single level\n                  numeric_imputation='median',\n                  categorical_imputation='mode',\n                   numeric_features=numeric_features)","32ac5095":"lightgbm = create_model('lightgbm')","762f64dc":"print(lightgbm)","dc7011aa":"tuned_lightgbm = tune_model(lightgbm,optimize = 'Recall')","67c76bf7":"plot_model(tuned_lightgbm, plot = 'auc')","c5de4531":"plot_model(tuned_lightgbm, plot = 'pr')","0543d1c8":"plot_model(tuned_lightgbm, plot='feature')","31618176":"plot_model(tuned_lightgbm, plot = 'confusion_matrix')","d17155eb":"evaluate_model(tuned_lightgbm)","24f426c2":"predict_model(tuned_lightgbm)","afa2cff3":"unseen_predictions = predict_model(tuned_lightgbm, data=data_unseen)\nunseen_predictions.head()","4176fe00":"print(\"Confidence Score :   {}\".format(round(unseen_predictions.Score.mean(),2)))#Confidence Score","b686d707":"test=pd.read_csv('..\/input\/digit-recognizer\/test.csv')\ntest.head()","63d1e1d3":"sol = predict_model(tuned_lightgbm, data=test)\nsol.head()","f534cd46":"final=pd.read_csv('..\/input\/digit-recognizer\/sample_submission.csv')\nfinal.head()","af54d154":"final.Label=sol.Label\nfinal.head()","c3f8db4b":"final.to_csv('final.csv', index=False)","bfa2ce3f":"#### Time is constant, so using model which will take less time to execute"}}