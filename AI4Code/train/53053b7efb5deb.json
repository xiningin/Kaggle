{"cell_type":{"613462b3":"code","60cea7e1":"code","d21ac291":"code","f7cd0c5a":"code","eea5a0ef":"code","ec986190":"code","4924054c":"code","aa4d885e":"code","a1c670a9":"code","f6460861":"code","33583fb7":"code","cc1a3cfd":"code","437ff37b":"code","536097d6":"code","f430262b":"code","f272b978":"code","65fd1698":"code","172ca986":"code","094e5530":"code","a2c7d83b":"code","fd256d31":"code","69d3f17b":"markdown","7a447636":"markdown","728a7668":"markdown","cd98968b":"markdown","ae0ab266":"markdown","fa113f50":"markdown","9c9b91e1":"markdown","500a6be6":"markdown","91fa6625":"markdown","8622313e":"markdown","24d5ce07":"markdown","f14c8565":"markdown","0f335e76":"markdown","61bb5f6b":"markdown","6e6930ed":"markdown","31fa444d":"markdown","d3cffe9e":"markdown","8f41a32e":"markdown","9a4eca5f":"markdown","1e6f4878":"markdown","29cf028c":"markdown","e6eed99a":"markdown","ce726265":"markdown","7f3aa514":"markdown","aad671e1":"markdown","46030fd7":"markdown","f052e4b6":"markdown","336ba7c8":"markdown","ab1aeac3":"markdown","e929b807":"markdown"},"source":{"613462b3":"import tensorflow as tf\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator, load_img\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D\nfrom tensorflow.keras.layers import Activation, Dropout, Flatten, Dense\n\nimport os\nimport numpy as np\nimport pandas as np\n\nimport matplotlib.pyplot as plt\n%matplotlib inline","60cea7e1":"print(os.listdir(\"..\/input\/chest-xray-pneumonia\/chest_xray\"))\n\nprint(os.listdir(\"..\/input\/chest-xray-pneumonia\/chest_xray\/train\"))\n\nprint(os.listdir(\"..\/input\/chest-xray-pneumonia\/chest_xray\/train\/\"))","d21ac291":"img_name = 'NORMAL2-IM-0588-0001.jpeg'\nimg_normal = load_img('..\/input\/chest-xray-pneumonia\/chest_xray\/train\/NORMAL\/' + img_name)\n\nprint('NORMAL')\nplt.imshow(img_normal)\nplt.show()","f7cd0c5a":"img_name = 'person63_bacteria_306.jpeg'\nimg_pneumonia = load_img('..\/input\/chest-xray-pneumonia\/chest_xray\/train\/PNEUMONIA\/' + img_name)\n\nprint('PNEUMONIA')\nplt.imshow(img_pneumonia)\nplt.show()","eea5a0ef":"img_width, img_height = 150, 150","ec986190":"train_data_dir = '..\/input\/chest-xray-pneumonia\/chest_xray\/train'\nvalidation_data_dir = '..\/input\/chest-xray-pneumonia\/chest_xray\/val'\ntest_data_dir = '..\/input\/chest-xray-pneumonia\/chest_xray\/test'\n\nnb_train_samples = 5217\nnb_validation_samples = 17\nepochs = 20\nbatch_size = 16","4924054c":"input_shape = (img_width, img_height, 3)","aa4d885e":"model = Sequential()\nmodel.add(Conv2D(32, (3, 3), input_shape=input_shape))\nmodel.add(Activation('relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\n\nmodel.add(Conv2D(32, (3, 3)))\nmodel.add(Activation('relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\n\nmodel.add(Conv2D(64, (3, 3)))\nmodel.add(Activation('relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\n\nmodel.add(Flatten())\nmodel.add(Dense(64))\nmodel.add(Activation('relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(1))\nmodel.add(Activation('sigmoid'))","a1c670a9":"model.layers","f6460861":"model.input","33583fb7":"model.output","cc1a3cfd":"model.compile(loss='binary_crossentropy',\n              optimizer='rmsprop',\n              metrics=['accuracy'])","437ff37b":"train_datagen = ImageDataGenerator(\n    rescale=1. \/ 255,\n    shear_range=0.2,\n    zoom_range=0.2,\n    horizontal_flip=True)","536097d6":"test_datagen = ImageDataGenerator(rescale=1. \/ 255)","f430262b":"train_generator = train_datagen.flow_from_directory(\n    train_data_dir,\n    target_size=(img_width, img_height),\n    batch_size=batch_size,\n    class_mode='binary')","f272b978":"validation_generator = test_datagen.flow_from_directory(\n    validation_data_dir,\n    target_size=(img_width, img_height),\n    batch_size=batch_size,\n    class_mode='binary')","65fd1698":"test_generator = test_datagen.flow_from_directory(\n    test_data_dir,\n    target_size=(img_width, img_height),\n    batch_size=batch_size,\n    class_mode='binary')","172ca986":"history = model.fit_generator(\n    train_generator,\n    steps_per_epoch=nb_train_samples \/\/ batch_size,\n    epochs=epochs,\n    validation_data=validation_generator,\n    validation_steps=nb_validation_samples \/\/ batch_size)","094e5530":"model.save_weights('model.h5')","a2c7d83b":"scores = model.evaluate_generator(test_generator)\nprint(\"\\n%s: %.2f%%\" % (model.metrics_names[1], scores[1]*100))","fd256d31":"plt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('Model accuracy')\nplt.ylabel('Accuracy')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Test'], loc='upper left')\nplt.show()\n\n# Plot training & validation loss values\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('Model loss')\nplt.ylabel('Loss')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Test'], loc='upper left')","69d3f17b":"## Let's now see all the availaible files","7a447636":"## Finally train model","728a7668":"And now let's make a plot","cd98968b":"## Conclusion","ae0ab266":"At the time this notebook was made `model.fit_generator` was widely used. It is scheduled to be deprecated, in so case please use `model.fit()`","fa113f50":"## Loading data","9c9b91e1":"Now let's specify our directory names and some hyperparameters","500a6be6":"### Save model`s weights","91fa6625":"Once we are done with augmentation let's load images","8622313e":"As we are doing binary classification we will have 1 neuron giving values between 0  and 1","24d5ce07":"We will first augment our images, made very easy with TensorFlow `ImageDataGenerator`.\n\nIt's super simple as simple as just passing in the values and name","f14c8565":"First specify the image height and width","0f335e76":"## Know the dataset\n\nContext\n\nhttp:\/\/www.cell.com\/cell\/fulltext\/S0092-8674(18)30154-5\n\n![image.png](attachment:image.png)\n\nFigure S6. Illustrative Examples of Chest X-Rays in Patients with Pneumonia, Related to Figure 6\nThe normal chest X-ray (left panel) depicts clear lungs without any areas of abnormal opacification in the image. Bacterial pneumonia (middle) typically exhibits a focal lobar consolidation, in this case in the right upper lobe (white arrows), whereas viral pneumonia (right) manifests with a more diffuse \u2018\u2018interstitial\u2019\u2019 pattern in both lungs.\nhttp:\/\/www.cell.com\/cell\/fulltext\/S0092-8674(18)30154-5\n\nContent\n\nThe dataset is organized into 3 folders (train, test, val) and contains subfolders for each image category (Pneumonia\/Normal). There are 5,863 X-Ray images (JPEG) and 2 categories (Pneumonia\/Normal).\n\nChest X-ray images (anterior-posterior) were selected from retrospective cohorts of pediatric patients of one to five years old from Guangzhou Women and Children\u2019s Medical Center, Guangzhou. All chest X-ray imaging was performed as part of patients\u2019 routine clinical care.\n\nFor the analysis of chest x-ray images, all chest radiographs were initially screened for quality control by removing all low quality or unreadable scans. The diagnoses for the images were then graded by two expert physicians before being cleared for training the AI system. In order to account for any grading errors, the evaluation set was also checked by a third expert.\nAcknowledgements\n\nData: https:\/\/data.mendeley.com\/datasets\/rscbjbr9sj\/2\n\nLicense: CC BY 4.0\n\nCitation: http:\/\/www.cell.com\/cell\/fulltext\/S0092-8674(18)30154-5","61bb5f6b":"This is the input shape our model expects","6e6930ed":"I have a pretty good experience with `RMSprop` for images but feel free to experiment with these-\n\n* Adam (does not work that well)\n* Adagrad\n* Adadelta","31fa444d":"Lets see the accuracy first","d3cffe9e":"### Augmentation","8f41a32e":"# Pneumonia prediction\n-[Rishit Dagli](rishit.tech)\n\n## About Me\n\n[Twitter](https:\/\/twitter.com\/rishit_dagli)\n\n[GitHub](https:\/\/github.com\/Rishit-dagli)\n\n[Medium](https:\/\/medium.com\/@rishit.dagli)","9a4eca5f":"## Getting our data in","1e6f4878":"### Model summaries","29cf028c":"Here is the model I created please feel free to experiment with it and play around and have fun :)","e6eed99a":"## Evaluating our model","ce726265":"This code peice is something which I have discovered pretty recently and is wonderful, it just prints out all your layers unlike `model.summary()` it does not need to be compiled first","7f3aa514":"Let's now take 2 images from the dataset at random and see them, to get an idea about the data","aad671e1":"This step is not at all mandatory but lets make a reference","46030fd7":"## Model","f052e4b6":"## Some Imports","336ba7c8":"Don't augment the test samples!","ab1aeac3":"\n\nIf you find the notebook useful and\/or learn something from it please upvote it, the complet repository for 10 Days of ML is available here -\n\nhttps:\/\/github.com\/Rishit-dagli\/10-Days-of-ML\n\nPlease Star to show your support\n\nThis Notebook is also a part of the 10 Days Of ML Challenge by TFUG Mumbai\n","e929b807":"Neural Networks, CNNs gave us a very good accuracy, we first augmented our images with the `ImageDataGenerator` and then we loaded our images into the runtime. We then created a model which was pretty good."}}