{"cell_type":{"900e316e":"code","bad42d80":"code","47ad105d":"code","4ddbe3ba":"code","dd7ec332":"code","ea6bc385":"code","3ada9d23":"code","bbc8c756":"code","944cd138":"code","6e719a5c":"code","199cad79":"code","e50ea93e":"code","92ecece3":"code","ce9a6ec7":"code","3f1b9d85":"markdown","6bae906c":"markdown"},"source":{"900e316e":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport scipy\nfrom matplotlib.pyplot import rcParams\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn import svm\nimport seaborn as sns\nsns.set(style=\"ticks\", color_codes=True)\ndf= pd.read_csv(\"..\/input\/dataset-covid19-in-egypt\/Egy-COVID-19.csv\", thousands=',')\ndf.head(100)","bad42d80":"df.info()","47ad105d":"df.loc[df['lockdown']=='No','lockdown']=0\ndf.loc[df['lockdown']=='Yes','lockdown']=1","4ddbe3ba":"df['lockdown']","dd7ec332":"# convert history\ndf['Date'] = pd.to_datetime(df['date']) # convert history at year, month and day\ndf['year'] = df['Date'].dt.year # select year \ndf['month'] = df['Date'].dt.month # # select month \ndf['day'] = df['Date'].dt.day # # select day\ndf[['date','year','month','day']].head()","ea6bc385":"rcParams['figure.figsize'] = 9, 9\ndf.hist()","3ada9d23":"df.loc[df['lockdown']==0,'lockdown']='No'\ndf.loc[df['lockdown']==1,'lockdown']='Yes'\nplt.rcParams['figure.figsize'] = [4, 4]\ndf['lockdown'].value_counts().plot(kind = 'bar',color='g')\nplt.title(\"lockdown\");\nplt.show()\nsns.distplot(df['lockdown_duration'],color='g')\nplt.title(\"lockdown duration\")\n","bbc8c756":"#Quantitative variables:\nquantitative = df.select_dtypes(include = [\"int64\",\"float64\"]).keys()\nprint(quantitative)","944cd138":"sns.pairplot(df,palette=\"husl\")","6e719a5c":"y = df.iloc[:,1] \nX = df.iloc[:,2:10] \n\nSVM = svm.LinearSVC()\nSVM.fit(X, y)\nSVM.predict(X.iloc[84:,:]) # prediction value\nround(SVM.score(X,y), 4)\n","199cad79":"LR = LogisticRegression(random_state=10, solver='newton-cg', multi_class='multinomial').fit(X, y) # \nLR.predict(X.iloc[84:,:]) # prediction value\n\nround(LR.score(X,y),4) # accuracy to first 4 number","e50ea93e":"NN = MLPClassifier(solver='adam', alpha=3e-4, hidden_layer_sizes=(10, 500), random_state=3)\nNN.fit(X, y)\nNN.predict(X.iloc[84:,:])# prediction value\nround(NN.score(X,y), 4)","92ecece3":"RF = RandomForestClassifier(n_estimators=12, max_depth=30, random_state=0)\nRF.fit(X, y)\nRF.predict(X.iloc[84:,:])# prediction value\nround(RF.score(X,y), 4)","ce9a6ec7":"plt.subplots(figsize=(6, 6))\nplt.pie([round(SVM.score(X,y), 4),round(LR.score(X,y),4),\n        round(NN.score(X,y), 4),round(RF.score(X,y), 4)],\n        explode = [0.0,0.0,0.0,0.1]\n        ,labels=('Support Vector Machines',\n                 'Logistic Regression','Neural Networks',\n                 'Random Forests'),\n       autopct ='%1.1f%%',shadow = True)\nplt.title('predictions',size=30,color='r')","3f1b9d85":"# Analyzing data for Corona virus and making a prediction of new cases in the state of Egypt","6bae906c":"# ![_110781016_coronavirusmedium.jpg](attachment:_110781016_coronavirusmedium.jpg)"}}