{"cell_type":{"8610e6e5":"code","86d8beac":"code","42071946":"code","ada3ca8a":"code","cef588c6":"code","6cf4d7ab":"code","55e2fe59":"code","8ada41df":"code","a7023bd1":"code","01c4f373":"code","8a8c9c18":"code","8055450e":"code","b6bd2c85":"code","fd83e956":"code","9e9ea78b":"code","e11adaf9":"code","4136dc1b":"code","69c8a638":"code","6f92a319":"code","fb3cabc6":"code","4bc9c0f3":"code","d9646a4e":"code","3290729d":"code","6ae6e57e":"code","f6ffe4f8":"code","32ae895b":"markdown","6d37390d":"markdown","8481f24c":"markdown","b69e4f6f":"markdown"},"source":{"8610e6e5":"import os\n\npath = '..\/input\/grocery\/GroceryStoreDataset-master\/dataset\/train\/'\n\nfile_list = []\n\nfor root, dirs, files in os.walk(path):\n#     print('Root : ', root)\n#     print('Dirs : ', dirs)\n#     print('Files : ', files)\n    for file in files:\n        file_list.append(os.path.join(root, file))\n\n        \n# print(file_list)\nprint(len(file_list))\n        \n","86d8beac":"path = '..\/input\/grocery\/GroceryStoreDataset-master\/dataset\/train\/Fruit\/Apple'\n\nfolder_list = []\n\nfor root, dirs, files in os.walk(path):\n#     print('Root : ', root)\n#     print('Dirs : ', dirs)\n#     print('Files : ', files)\n\n    if len(dirs) > 0:\n        folder_list.append(dirs)\n\n        \nprint(folder_list)\nprint(len(folder_list))","42071946":"import numpy as np  \nimport pandas as pd  \n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport cv2\nimport glob # to find files recursively\n\nimport keras \nimport tensorflow as tf\n\nfrom tensorflow.keras.preprocessing import image_dataset_from_directory\n","ada3ca8a":"# fruits = ['Pineapple' , 'Cocos']\n# for x, y in enumerate(fruits):\n#     print(\"X : \", x)\n#     print(\"Y : \", y)","cef588c6":"train_datagen = tf.keras.preprocessing.image.ImageDataGenerator(\n    rescale = 1.\/255., # Rescaling\n    rotation_range = 40, # for augmentation\n    width_shift_range = 0.2,\n    height_shift_range = 0.2,\n    shear_range = 0.2,\n    zoom_range = 0.2,\n    horizontal_flip = True\n)","6cf4d7ab":"train_path = '..\/input\/grocery\/GroceryStoreDataset-master\/dataset\/train\/'\nimage_size = (224, 224)\nbatch_size = 32\n\ntrain_generator = train_datagen.flow_from_directory(\n    train_path,\n    batch_size = batch_size,\n    class_mode = 'categorical',\n    target_size = image_size\n)\n\n# https:\/\/keras.io\/api\/preprocessing\/image\/#flowfromdirectory-method","55e2fe59":"train_generator","8ada41df":"train_generator[1]","a7023bd1":"train_generator[0][0][0]","01c4f373":"def plotImages(images_arr):\n    fig, axes = plt.subplots(1, 5, figsize=(20,20))\n    axes = axes.flatten()\n    for img, ax in zip( images_arr, axes):\n        ax.imshow(img)\n    plt.tight_layout()\n    plt.show()\n    \n    \naugmented_images = [train_generator[0][0][0] for i in range(10)]\nplotImages(augmented_images)","8a8c9c18":"labels = (train_generator.class_indices)\nlabels","8055450e":"labels = dict((v,k) for k,v in labels.items()) \nlabels","b6bd2c85":"no_classes = len(labels)","fd83e956":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Flatten, Conv2D\nfrom tensorflow.keras.losses import sparse_categorical_crossentropy\nfrom tensorflow.keras.optimizers import Adam","9e9ea78b":"# Create the model\nmodel = Sequential()\nmodel.add(Conv2D(16, kernel_size=(5, 5), activation='relu', input_shape=(224, 224, 3)))\nmodel.add(Conv2D(32, kernel_size=(5, 5), activation='relu'))\nmodel.add(Conv2D(64, kernel_size=(5, 5), activation='relu'))\nmodel.add(Conv2D(128, kernel_size=(5, 5), activation='relu'))\nmodel.add(Flatten())\nmodel.add(Dense(16, activation='relu'))\nmodel.add(Dense(no_classes, activation='softmax'))\n\n# Display a model summary\nmodel.summary()","e11adaf9":"# Compile the model\nmodel.compile(loss='categorical_crossentropy',\n              optimizer=Adam(),\n              metrics=['accuracy']\n             )\n\n# Start training\nmodel.fit(\n        train_generator,\n        epochs = 10,\n        shuffle = False\n)","4136dc1b":"test_datagen = tf.keras.preprocessing.image.ImageDataGenerator()\n\ntest_path = '..\/input\/grocery\/GroceryStoreDataset-master\/dataset\/test\/'\n\ntest_generator = test_datagen.flow_from_directory(\n    directory = test_path,\n    batch_size = batch_size,\n    class_mode = 'categorical',\n    target_size = image_size,\n    shuffle = False,\n    seed = 42\n)    ","69c8a638":"pred = model.predict_generator(\n    test_generator,\n    verbose=1\n)","6f92a319":"predicted_class_indices=np.argmax(pred,axis=1)","fb3cabc6":"predictions = [labels[k] for k in predicted_class_indices]","4bc9c0f3":"predictions","d9646a4e":"augmented_images = [test_generator[0][0][0] for i in range(10)]\nplotImages(augmented_images)","3290729d":"filenames = test_generator.filenames\nresults = pd.DataFrame({\"Filename\":filenames,\n                      \"Predictions\":predictions})\nresults.to_csv(\"results.csv\",index=False)","6ae6e57e":"results.head()","f6ffe4f8":"results.tail()","32ae895b":"# Test Dataset","6d37390d":"# Import Library","8481f24c":"# Get a list of all files and subdirectories","b69e4f6f":"# Grocery Dataset Product Image\nhttps:\/\/www.kaggle.com\/amoghmisra27\/grocery"}}