{"cell_type":{"c76187b0":"code","4fee29fb":"code","0261c3b8":"code","38f53bf6":"code","a0877e7b":"code","90d3e28e":"code","e40aba01":"code","16d1da3d":"code","3cfcdc12":"code","e7735e6a":"code","d2049803":"code","4df1ce1c":"code","f0c65dae":"code","b4bb1a6f":"code","fe2f5563":"code","0c402b6d":"code","91eab9e8":"code","02d8a4ee":"code","d9c3782f":"code","3710565c":"code","2ceb7f64":"code","335e017c":"code","3c499432":"code","dae5539f":"code","17035603":"code","3093591e":"code","d8079240":"code","25d146c5":"code","db578fd0":"code","56d0b3d3":"code","af04772e":"code","e89caa7d":"code","079b653d":"code","dcfb8802":"code","67c3d080":"code","9a46c7b9":"code","a4783acd":"code","e1164465":"markdown","09c00214":"markdown","333fe9a2":"markdown","8b8c73e6":"markdown","b60ef835":"markdown","170d947e":"markdown","293e29b8":"markdown","657913fb":"markdown","cd1c5a50":"markdown"},"source":{"c76187b0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","4fee29fb":"df = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')\ndf.head()","0261c3b8":"y_train = df.SalePrice.values","38f53bf6":"df.drop(columns = 'Id', inplace = True)\ndf_test.drop(columns = 'Id', inplace = True)","a0877e7b":"trainSize = df.shape[0]\nall_data = pd.concat((df, df_test)).reset_index(drop = True)\nall_data.drop(columns = \"SalePrice\", inplace = True)\nall_data.shape","90d3e28e":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.hist(y_train)\nplt.show()","e40aba01":"all_data.columns[all_data.isnull().sum() > 0]   ","16d1da3d":"for i in ('Alley', 'BsmtCond', 'BsmtExposure', 'BsmtFinType1', 'BsmtFinType2', 'BsmtQual', 'Fence', 'FireplaceQu', 'GarageCond', 'GarageFinish', 'GarageQual', 'GarageType', 'MasVnrType', 'MiscFeature', 'PoolQC'):\n    all_data[i].fillna('None', inplace = True)","3cfcdc12":"all_data.columns[all_data.isnull().sum() > 0] ","e7735e6a":"for h in ('BsmtFinSF1', 'BsmtFinSF2', 'BsmtUnfSF','TotalBsmtSF', 'BsmtFullBath', 'BsmtHalfBath'):\n    all_data[h].fillna(0, inplace = True)","d2049803":"all_data.columns[all_data.isnull().sum() > 0] ","4df1ce1c":"for j in ('GarageArea', 'GarageCars', 'GarageYrBlt', 'LotFrontage', 'MasVnrArea'):\n    all_data[j].fillna(0, inplace = True)","f0c65dae":"all_data.columns[all_data.isnull().sum() > 0] ","b4bb1a6f":"for k in ('Electrical', 'Exterior1st', 'Exterior2nd', 'Functional', 'KitchenQual', 'MSZoning', 'SaleType', 'Utilities'):\n    all_data[k].fillna(all_data[j].mode()[0], inplace = True)","fe2f5563":"all_data.columns[all_data.isnull().sum() > 0] ","0c402b6d":"factor = all_data.select_dtypes(include = 'object')\nnumeric = all_data.select_dtypes(include = 'number')","91eab9e8":"factor.head()","02d8a4ee":"numeric.head()","d9c3782f":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()","3710565c":"scaler.fit(numeric)","2ceb7f64":"numeric_std = scaler.transform(numeric)","335e017c":"numeric = pd.DataFrame(data = numeric_std, columns = numeric.columns)","3c499432":"numeric.head()","dae5539f":"all_data = pd.concat([factor,numeric], axis = 1)","17035603":"all_data.head()","3093591e":"all_data = pd.get_dummies(all_data)","d8079240":"train = all_data[:trainSize]\ntest = all_data[trainSize:]","25d146c5":"print(train.shape)\nprint(test.shape)","db578fd0":"from sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor","56d0b3d3":"#Creating the models\nKNN = KNeighborsRegressor(n_neighbors = 5)\ntree = DecisionTreeRegressor()\nforest = RandomForestRegressor(n_estimators = 500)","af04772e":"#Training the models\nKNN.fit(train, y_train)\ntree.fit(train, y_train)\nforest.fit(train, y_train)","e89caa7d":"y_knn = KNN.predict(test)\ny_tree = tree.predict(test)\ny_forest = forest.predict(test)","079b653d":"ind = np.array(range(1461,2920))","dcfb8802":"Yy = {'Id': ind, 'SalePrice': y_forest}","67c3d080":"pred = pd.DataFrame(data = Yy)","9a46c7b9":"my_submission = pred","a4783acd":"my_submission.to_csv('submission.csv', index = False)","e1164465":"**Data importation and Analysis**","09c00214":"**Missing Values**","333fe9a2":"**Making predictions**","8b8c73e6":"**Importing models**","b60ef835":"*Dropping Id, because is not important*","170d947e":"**Numeric X Factor**","293e29b8":"**Getting dummies and splitting training set from testing set**","657913fb":"**Stantardization**","cd1c5a50":"**Getting all data together again**"}}