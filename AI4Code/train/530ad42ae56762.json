{"cell_type":{"0b17bb30":"code","5ed3cb08":"code","124da2a5":"code","36e5b433":"code","125d0b66":"code","3f1717a3":"code","3136172e":"code","2ab2c01b":"code","fc9725fb":"code","0e82b9b4":"code","bec870f8":"code","7782a4cd":"code","c2a5b94b":"code","2356bc58":"code","77cfb919":"code","8324e64b":"code","57c67398":"code","afe5b4e8":"code","428803c6":"code","4135cbdf":"code","03b62120":"code","71a7ed81":"code","fc73ed6d":"code","555119e3":"code","4a0912cd":"code","ed42f6bb":"code","9ac5a98d":"code","b7415acc":"code","7dafdc92":"code","65f2bded":"code","db5bb364":"code","1e31a613":"code","73b5895d":"code","bd4e5c5f":"code","35994667":"code","df925d62":"code","b552367b":"code","0e7de9ad":"code","c2996894":"code","8ebd7915":"code","1e9293ef":"code","875e16ed":"code","d9e6dcfa":"code","385447ed":"code","5fc58d7e":"code","54735798":"code","b948a549":"code","82960453":"code","125a8a2a":"code","d8d90a80":"code","f7a946a2":"code","43b428b1":"code","83cc09a3":"code","1b2eb9c8":"code","088a2fb0":"code","71f6cee9":"code","e9d57e0c":"code","0e6c70e3":"code","01459690":"code","51c790d1":"code","3111b278":"code","88b0fb6b":"code","eee19265":"code","76c39e52":"code","f42ed29b":"code","3ab9f518":"code","3946f43f":"code","2110ae41":"code","447b259b":"code","3a9ac899":"code","8eb3aed4":"code","363c68e8":"markdown","a5718581":"markdown","5153c8fb":"markdown","bfb7271b":"markdown","7f7e0440":"markdown","1b213480":"markdown","0ac18b54":"markdown","926894c9":"markdown","b5aee35e":"markdown","b5036983":"markdown","6958f25b":"markdown","7934538d":"markdown","45715e35":"markdown","40b7ea62":"markdown","9fa295cb":"markdown","48f351c3":"markdown"},"source":{"0b17bb30":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5ed3cb08":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nfrom mpl_toolkits.mplot3d import Axes3D","124da2a5":"\ndf = pd.read_csv('\/kaggle\/input\/ibm-watson-marketing-customer-value-data\/WA_Fn-UseC_-Marketing-Customer-Value-Analysis.csv')\n","36e5b433":"df.head()","125d0b66":"df.columns","3f1717a3":"Response=df.groupby('Response')['Customer'].count()\nResponse","3136172e":"df.groupby('Response')['Customer'].count().plot(kind='bar', grid=True,\nfigsize=(10, 7),\ntitle='Marketing Responses').set_ylabel('Count')","2ab2c01b":"categorical_var=['State', 'Response', 'Coverage',\n       'Education', 'EmploymentStatus', 'Gender',\n       'Marital Status', 'Number of Policies', 'Policy Type',\n       'Policy', 'Renew Offer Type', 'Sales Channel',\n       'Vehicle Class', 'Vehicle Size']","fc9725fb":"for i in categorical_var:\n    df.groupby(i)['Customer'].count().plot(kind='bar', grid=True,\n    figsize=(10, 7)).set_ylabel('Count')\n    plt.show()","0e82b9b4":"categorical_var.remove('Response')\ncategorical_var","bec870f8":"for i in categorical_var:\n    cat_vs_cat=df.groupby(['Response', i])['Customer'].count()\n    cat_vs_cat = cat_vs_cat.unstack().fillna(0)\n    ax = (cat_vs_cat).plot(\n    kind='bar',\n    figsize=(10, 7),\n    grid=True\n    )\n    ax.set_ylabel('Count')\n    plt.show()","7782a4cd":"Education_vs_Emp=df[df['Response']=='Yes'].groupby(['Education', 'EmploymentStatus'])['Customer'].count()\nEducation_vs_Emp","c2a5b94b":"Education_vs_Emp = Education_vs_Emp.unstack().fillna(0)\nEducation_vs_Emp","2356bc58":"# Visualize this data in bar plot\nax = (Education_vs_Emp).plot(\nkind='bar',\nfigsize=(10, 7),\ngrid=True\n)\nax.set_ylabel('Count')\nplt.show()","77cfb919":"Offer_vs_Channel=df[df['Response']=='Yes'].groupby(['Renew Offer Type', 'Sales Channel'])['Customer'].count()\nOffer_vs_Channel","8324e64b":"Offer_vs_Channel = Offer_vs_Channel.unstack().fillna(0)\nOffer_vs_Channel","57c67398":"# Visualize this data in bar plot\nax = (Offer_vs_Channel).plot(\nkind='bar',\nfigsize=(10, 7),\ngrid=True\n)\nax.set_ylabel('Count')\nplt.show()","afe5b4e8":"Vehicle_vs_Size=df[df['Response']=='Yes'].groupby(['Vehicle Class', 'Vehicle Size'])['Customer'].count()\nVehicle_vs_Size","428803c6":"Vehicle_vs_Size = Vehicle_vs_Size.unstack().fillna(0)\nVehicle_vs_Size","4135cbdf":"# Visualize this data in bar plot\nax = (Vehicle_vs_Size).plot(\nkind='bar',\nfigsize=(10, 7),\ngrid=True\n)\nax.set_ylabel('Count')\nplt.show()","03b62120":"offer_vs_vclass=df[df['Response']=='Yes'].groupby(['Renew Offer Type', 'Vehicle Class'])['Customer'].count()\noffer_vs_vclass","71a7ed81":"offer_vs_vclass = offer_vs_vclass.unstack().fillna(0)\noffer_vs_vclass","fc73ed6d":"# Visualize this data in bar plot\nax = (offer_vs_vclass).plot(\nkind='bar',\nfigsize=(10, 7),\ngrid=True\n)\nax.set_ylabel('Count')\nplt.show()","555119e3":"channel_vs_vclass=df[df['Response']=='Yes'].groupby(['Sales Channel', 'Vehicle Class'])['Customer'].count()\nchannel_vs_vclass","4a0912cd":"channel_vs_vclass = channel_vs_vclass.unstack().fillna(0)\nchannel_vs_vclass","ed42f6bb":"# Visualize this data in bar plot\nax = (channel_vs_vclass).plot(\nkind='bar',\nfigsize=(10, 7),\ngrid=True\n)\nax.set_ylabel('Count')\nplt.show()","9ac5a98d":"channel_vs_gender=df[df['Response']=='Yes'].groupby(['Sales Channel', 'Gender'])['Customer'].count()\nchannel_vs_gender","b7415acc":"channel_vs_gender = channel_vs_gender.unstack().fillna(0)\nchannel_vs_gender","7dafdc92":"# Visualize this data in bar plot\nax = (channel_vs_gender).plot(\nkind='bar',\nfigsize=(10, 7),\ngrid=True\n)\nax.set_ylabel('Count')\nplt.show()","65f2bded":"offer_vs_gender=df[df['Response']=='Yes'].groupby(['Renew Offer Type', 'Gender'])['Customer'].count()\noffer_vs_gender","db5bb364":"offer_vs_gender = offer_vs_gender.unstack().fillna(0)\noffer_vs_gender","1e31a613":"# Visualize this data in bar plot\nax = (offer_vs_gender).plot(\nkind='bar',\nfigsize=(10, 7),\ngrid=True\n)\nax.set_ylabel('Count')\nplt.show()","73b5895d":"channel_vs_mstatus=df[df['Response']=='Yes'].groupby(['Sales Channel', 'Marital Status'])['Customer'].count()\nchannel_vs_mstatus","bd4e5c5f":"channel_vs_mstatus = channel_vs_mstatus.unstack().fillna(0)\nchannel_vs_mstatus","35994667":"# Visualize this data in bar plot\nax = (channel_vs_mstatus).plot(\nkind='bar',\nfigsize=(10, 7),\ngrid=True\n)\nax.set_ylabel('Count')\nplt.show()","df925d62":"offer_vs_mstatus=df[df['Response']=='Yes'].groupby(['Renew Offer Type', 'Marital Status'])['Customer'].count()\noffer_vs_mstatus","b552367b":"offer_vs_mstatus = offer_vs_mstatus.unstack().fillna(0)\noffer_vs_mstatus","0e7de9ad":"# Visualize this data in bar plot\nax = (offer_vs_mstatus).plot(\nkind='bar',\nfigsize=(10, 7),\ngrid=True\n)\nax.set_ylabel('Count')\nplt.show()","c2996894":"gender_vs_mstatus=df[df['Response']=='Yes'].groupby(['Gender', 'Marital Status'])['Customer'].count()\ngender_vs_mstatus","8ebd7915":"gender_vs_mstatus = gender_vs_mstatus.unstack().fillna(0)\ngender_vs_mstatus","1e9293ef":"# Visualize this data in bar plot\nax = (gender_vs_mstatus).plot(\nkind='bar',\nfigsize=(10, 7),\ngrid=True\n)\nax.set_ylabel('Count')\nplt.show()","875e16ed":"df.describe()","d9e6dcfa":"corrmat = df.corr()\nfig = plt.figure(figsize = (12, 9))\n\nsns.heatmap(corrmat, vmax = .8, square = True, annot = True)\nplt.show()","385447ed":"num_list=['Customer Lifetime Value', 'Income', 'Monthly Premium Auto',\n       'Months Since Last Claim', 'Months Since Policy Inception',\n       'Number of Open Complaints', 'Number of Policies', 'Total Claim Amount']\nnum_list","5fc58d7e":"for i in num_list:\n    plt.figure(figsize = (12, 9))\n    plt.hist(df[i], bins = 100)\n    plt.xlabel(i)\n    plt.ylabel('Count')\n    plt.show()","54735798":"import matplotlib.pyplot as plt\nplt.figure(figsize = (12, 9))\nplt.scatter(df['Monthly Premium Auto'], df['Customer Lifetime Value'])\nplt.ylabel('Customer Lifetime Value')\nplt.xlabel('Monthly Premium Auto')\nplt.show()","b948a549":"categorical_var=['State', 'Response', 'Coverage',\n       'Education', 'EmploymentStatus', 'Gender',\n       'Marital Status', 'Number of Policies', 'Policy Type',\n       'Policy', 'Renew Offer Type', 'Sales Channel',\n       'Vehicle Class', 'Vehicle Size']","82960453":"for i in categorical_var:\n    cats=df.groupby(i)['Customer'].count()\n    indx=cats.index\n    print(i)\n    for j in indx:\n        print(j)\n        plt.figure(figsize = (12, 9))\n        plt.scatter(df[df[i]==j]['Customer Lifetime Value'], df[df[i]==j]['Monthly Premium Auto'])\n        plt.xlabel('Customer Lifetime Value')\n        plt.ylabel('Monthly Premium Auto')\n        plt.show()  ","125a8a2a":"nop=df.groupby('Number of Policies')['Customer'].count()\nnop","d8d90a80":"nopi=nop.index","f7a946a2":"plt.figure(figsize = (12, 9))\nfor i in nopi:\n    plt.scatter(df[df['Number of Policies']==i]['Monthly Premium Auto'], df[df['Number of Policies']==i]['Customer Lifetime Value'])\nplt.xlabel('Customer Lifetime Value')\nplt.ylabel('Monthly Premium Auto')\nplt.show()","43b428b1":"import seaborn as seabornInstance \nfrom sklearn.model_selection import train_test_split \nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics\n%matplotlib inline","83cc09a3":"X = df['Monthly Premium Auto'].values.reshape(-1,1)\ny = df['Customer Lifetime Value'].values.reshape(-1,1)","1b2eb9c8":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","088a2fb0":"regressor = LinearRegression()  \nregressor.fit(X_train, y_train) #training the algorithm","71f6cee9":"\nprint(regressor.intercept_)\n#For retrieving the slope:\nprint(regressor.coef_)","e9d57e0c":"y_pred = regressor.predict(X_test)","0e6c70e3":"df_ = pd.DataFrame({'Actual': y_test.flatten(), 'Predicted': y_pred.flatten()})\ndf_","01459690":"df1 = df_.head(25)\ndf1.plot(kind='bar',figsize=(16,10))\nplt.grid(which='major', linestyle='-', linewidth='0.5', color='green')\nplt.grid(which='minor', linestyle=':', linewidth='0.5', color='black')\nplt.show()","51c790d1":"plt.scatter(X_test, y_test,  color='gray')\nplt.plot(X_test, y_pred, color='red', linewidth=2)\nplt.show()","3111b278":"print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","88b0fb6b":"df_pol_1=df[df['Number of Policies']==1]\ndf_pol_1","eee19265":"\nX = df_pol_1['Monthly Premium Auto'].values.reshape(-1,1)\ny = df_pol_1['Customer Lifetime Value'].values.reshape(-1,1)","76c39e52":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","f42ed29b":"regressor = LinearRegression()  \nregressor.fit(X_train, y_train) #training the algorithm","3ab9f518":"#To retrieve the intercept:\nprint(regressor.intercept_)\n#For retrieving the slope:\nprint(regressor.coef_)","3946f43f":"y_pred = regressor.predict(X_test)","2110ae41":"df_ = pd.DataFrame({'Actual': y_test.flatten(), 'Predicted': y_pred.flatten()})\ndf_","447b259b":"df1 = df_.head(25)\ndf1.plot(kind='bar',figsize=(16,10))\nplt.grid(which='major', linestyle='-', linewidth='0.5', color='green')\nplt.grid(which='minor', linestyle=':', linewidth='0.5', color='black')\nplt.show()","3a9ac899":"plt.scatter(X_test, y_test,  color='gray')\nplt.plot(X_test, y_pred, color='red', linewidth=2)\nplt.show()","8eb3aed4":"print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","363c68e8":"The rmse has been reduced.\n","a5718581":"Customer Lifetime Value is positively correlated with Monthly PremiuLm Audio.","5153c8fb":"Considering the customer only when the 'Response' is 'Yes'","bfb7271b":"Univariate analysis on Categorical Data","7f7e0440":"**Ways To Reduce the rmse**","1b213480":"'Number of Policies' seems to affect them highly","0ac18b54":"Categorical vs numerical","926894c9":"Bivariate Analysis of numerical variables.","b5aee35e":"Analysis on Categorical variables","b5036983":"Parameters that could affect Response","6958f25b":"Linear Regression (By filtering with 'Number of Policies')","7934538d":"To Find Categories affecting this","45715e35":"Linear Regression (For the Prediction of Customer Lifetime Value)","40b7ea62":"Analysis for Numerical variables","9fa295cb":"Univariate Analysis of Numerical Variables","48f351c3":"Bivariata Analysis for categorical vs categorical variables"}}