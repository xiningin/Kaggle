{"cell_type":{"cdcae6ba":"code","28c82de1":"code","cab07462":"code","ce667497":"code","6afaa0ca":"code","2a473997":"code","85482b84":"code","c24227f5":"code","987d0890":"code","9c1dc41b":"code","7bc9c637":"code","380bcd80":"code","3131059a":"code","0baf09a2":"code","b0d931ad":"code","fd50f8dd":"code","765ceace":"code","df057d34":"code","eee4df53":"code","de323b19":"code","3f7e85a9":"code","883e719c":"code","88642863":"code","fcb9b734":"code","426b3e81":"code","d98f39dd":"code","6a5de4a0":"code","30352975":"code","d396da9c":"code","b115d06a":"code","d6bccbcb":"code","44da6dd3":"code","f699ad55":"code","40a21966":"code","c4f3092b":"code","205b5d3b":"code","dd8f8dca":"code","d32bf59b":"code","2de70658":"markdown","2f53816f":"markdown","9eac5673":"markdown","471f3ca6":"markdown","31bb967b":"markdown","7a416e2f":"markdown","0d7f1854":"markdown","23a99941":"markdown","8a7e9db3":"markdown","71d4a4f2":"markdown","da050ec7":"markdown","341e9818":"markdown","993c33ab":"markdown","47a89589":"markdown"},"source":{"cdcae6ba":"import warnings\nwarnings.filterwarnings(\"ignore\")","28c82de1":"!pip install opendatasets\nimport opendatasets as od\nimport numpy as np\nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n%matplotlib inline ","cab07462":"download_url= \"https:\/\/www.kaggle.com\/unsdsn\/world-happiness\"\nod.download(download_url)","ce667497":"train_2015 = pd.read_csv(\".\/world-happiness\/2015.csv\")\ntrain_2016 = pd.read_csv(\".\/world-happiness\/2016.csv\")\ntrain_2017 = pd.read_csv(\".\/world-happiness\/2017.csv\")\ntrain_2018 = pd.read_csv(\".\/world-happiness\/2018.csv\")\ntrain_2019 = pd.read_csv(\".\/world-happiness\/2019.csv\")","6afaa0ca":"train_2015.head()","2a473997":"train_2015.describe()","85482b84":"train_2015.info()","c24227f5":"train_2015.nunique()","987d0890":"#Correlation Matrix\nsns.set_style(\"darkgrid\")\nplt.figure(figsize=(8,8))\n\n\nhm = sns.heatmap(train_2015.corr(), annot= True)\nhm.set(xlabel= \"features\", ylabel= \"features\", title = \"Correlation Matrix Of the 2015 data\")\n\n\nplt.show()\n","9c1dc41b":"#lets save the above heatmap\nplt.savefig(\"Correlation_Matrix_Of_Year_2015.png\")","7bc9c637":"#lets plot the graphs tp explore the data\nplt.title(\"Economy vs Happiness score\")\nsns.regplot(data= train_2015, x= \"Economy (GDP per Capita)\", y=\"Happiness Score\")\nplt.xlabel(\"Economy\")\nplt.ylabel(\"Happiness score\")","380bcd80":"plt.title(\"Family vs Happiness score\");\nsns.regplot(data= train_2015, x= \"Family\", y=\"Happiness Score\");\nplt.xlabel(\"Family\");\nplt.ylabel(\"Happiness score\");","3131059a":"plt.title(\"Economy vs Family\");\nsns.regplot(data= train_2015, x= \"Family\", y=\"Economy (GDP per Capita)\");\nplt.xlabel(\"Family\");\nplt.ylabel(\"Economy\");","0baf09a2":"plt.title(\"social support vs health\");\nsns.regplot(data= train_2015, x= \"Family\", y=\"Health (Life Expectancy)\");\nplt.xlabel(\"Family\");\nplt.ylabel(\"Health (Life Expectancy)\");","b0d931ad":"train_2016.head()","fd50f8dd":"train_2016.info()","765ceace":"#Correlation Matrix\nsns.set_style(\"darkgrid\")\nplt.figure(figsize=(8,8))\n\n\nhm = sns.heatmap(train_2016.corr(), annot= True)\nhm.set(xlabel= \"features\", ylabel= \"features\", title = \"Correlation Matrix Of the 2016 data\")\n\nplt.show()\n","df057d34":"#lets plot the graphs tp explore the data\nplt.title(\"Economy vs Happiness score\")\nsns.regplot(data= train_2016, x= \"Economy (GDP per Capita)\", y=\"Happiness Score\")\nplt.xlabel(\"Economy\")\nplt.ylabel(\"Happiness score\")","eee4df53":"plt.title(\"Economy vs Family\");\nsns.regplot(data= train_2016, x= \"Family\", y=\"Economy (GDP per Capita)\");\nplt.xlabel(\"Family\");\nplt.ylabel(\"Economy\");","de323b19":"plt.title(\"Family vs Happiness score\");\nsns.regplot(data= train_2016, x= \"Family\", y=\"Happiness Score\");\nplt.xlabel(\"Family\");\nplt.ylabel(\"Happiness score\");","3f7e85a9":"train_2017.head()","883e719c":"#Correlation Matrix\nsns.set_style(\"darkgrid\")\nplt.figure(figsize=(8,8))\n\n\nhm = sns.heatmap(train_2017.corr(), annot= True)\nhm.set(xlabel= \"features\", ylabel= \"features\", title = \"Correlation Matrix Of the 2017 data\")\n\nplt.show()","88642863":"train_2018.head()","fcb9b734":"#Correlation Matrix\nsns.set_style(\"darkgrid\")\nplt.figure(figsize=(8,8))\n\n\nhm = sns.heatmap(train_2018.corr(), annot= True)\nhm.set(xlabel= \"features\", ylabel= \"features\", title = \"Correlation Matrix Of the 2018 data\")\n\nplt.show()","426b3e81":"train_2019.head()","d98f39dd":"#Correlation Matrix\nsns.set_style(\"darkgrid\")\nplt.figure(figsize=(8,8))\n\n\nhm = sns.heatmap(train_2019.corr(), annot= True)\nhm.set(xlabel= \"features\", ylabel= \"features\", title = \"Correlation Matrix Of the 2019 data\")\n\nplt.show()","6a5de4a0":"#data cleaning for the year-2015\nt2015_df=train_2015.drop(['Country','Region','Happiness Rank','Standard Error','Dystopia Residual'], axis=1, inplace=False)\nt2016_df=train_2016.drop(['Country','Region','Happiness Rank','Lower Confidence Interval','Upper Confidence Interval','Dystopia Residual'],axis=1, inplace=False)\nt2017_df=train_2017.drop(['Country','Happiness.Rank','Whisker.high','Whisker.low','Dystopia.Residual'], axis=1, inplace=False)\nt2018_df=train_2018.drop(['Country or region','Overall rank'], axis=1, inplace=False)\nt2019_df=train_2019.drop(['Country or region','Overall rank'], axis=1, inplace=False)\n\n\n## Rearranging the columns of each data so that they can be joined.\n\ncolumn= t2017_df.pop('Trust..Government.Corruption.')\nt2017_df.insert(5, 'Trust..Government.Corruption.', column)\n\ncolumn= t2018_df.pop('Generosity')\nt2018_df.insert(6, 'Generosity', column)\n\ncolumn= t2019_df.pop('Generosity')\nt2019_df.insert(6, 'Generosity', column)\n\ndf=[t2015_df, t2016_df, t2017_df, t2018_df, t2019_df]\n\nfor data in df:\n  data.columns = ['Happiness Score', 'Economy(GDP per capita)','Social Support','Health(Life Expentency)','Freedom','Perceptions of corruption','Generosity']\n\nfinal_df= pd.concat([t2015_df, t2016_df, t2017_df, t2018_df, t2019_df], axis=0)\nfinal_df.shape","30352975":"final_df.describe()","d396da9c":"final_df","b115d06a":"input_cols = ['Economy(GDP per capita)',\t'Social Support',\t'Health(Life Expentency)',\t'Freedom','Perceptions of corruption',\t'Generosity']\ntarget_cols= ['Happiness Score']\nfinal_inputs= final_df[input_cols]\nfinal_targets= final_df[target_cols]\n","d6bccbcb":"final_df","44da6dd3":"final_df.isnull().sum()","f699ad55":"final_df.dropna(inplace=True)","40a21966":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(final_df[input_cols], final_df[target_cols], test_size= 0.2, random_state=45)","c4f3092b":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler().fit(final_df[input_cols])\nx_train[input_cols]=scaler.transform(x_train[input_cols])\nx_test[input_cols]=scaler.transform(x_test[input_cols])","205b5d3b":"from sklearn.linear_model import LinearRegression, Lasso, Ridge, SGDRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor, AdaBoostRegressor, GradientBoostingRegressor\nimport lightgbm as lgb\nfrom lightgbm import LGBMRegressor \nimport xgboost \nfrom xgboost import XGBRegressor\nfrom sklearn.metrics import mean_squared_error\n","dd8f8dca":"x_train.isnull().sum()","d32bf59b":"models =[LinearRegression(), \n          Lasso(), \n          Ridge(), \n          SGDRegressor(), \n          DecisionTreeRegressor(), \n          RandomForestRegressor(), \n          AdaBoostRegressor(), \n          GradientBoostingRegressor(),\n          LGBMRegressor (),\n          XGBRegressor()\n]\nfor model in models:\n  print(model)\n  mod=model.fit(x_train,y_train)\n  train_rmse=mean_squared_error(mod.predict(x_train),y_train)\n  test_rmse=mean_squared_error(mod.predict(x_test),y_test)\n  print(\"Training rmse:\", train_rmse)\n  print(\"Testing rmse:\", test_rmse)\n  print(\"\\n\")\n","2de70658":"### Analysis based on the Correlation Matrix\nBy the Help of the correlation Matrix lets try to analyze the columns with respect to the other columns","2f53816f":"## Analysis on the dataset of year-2018","9eac5673":"## PREPROCESSING","471f3ca6":"#### Economy vs Happiness Score","31bb967b":"## Analysis on the dataset of year-2016","7a416e2f":"This shows that the region of Sub-Saharan Africa has the highest number of countries in the ranking based on the happiness index","0d7f1854":"## Importing the important libraries and the datasset","23a99941":"The scatterplot shows that the Happiness score is linearly dependent in the Economy. Economy is playing an important factor. Country in which people are unable to afford  even their basic needs because of the decreasing economy cant be happy. On the other hand country having the good economy almost achieved a good happiness score.","8a7e9db3":"From the above correlation matrix, we can have the following major Conclusion:\n1. Happiness Rank has the negative correlation with the Happiness score.\n2. Happiness Score has the highest correlation with Economy followed by family.\n3. Economy has the highest Correlation with the Health Expectancy.","71d4a4f2":"## Analysis on the dataset of year-2017","da050ec7":"## Analysis on dataset of year-2015","341e9818":"A family always makes a good environment around them. An environment of joy is always there. This fact is also explained by the fact. having a family possess happiness. The Plot shows that the `Happiness score` is almost linearly dependent on the `Family` factor","993c33ab":"CHOOSE THE BEST MODEL WHICH HAS THE MINIMUM RMSE ","47a89589":"## Analysis on the dataset of year-2019"}}