{"cell_type":{"995df447":"code","73a097f2":"code","2400dc08":"code","84cf5a66":"code","433b00b5":"code","70361d20":"code","79e675c0":"code","6043502b":"code","1a264762":"code","4716a761":"code","26fb4249":"code","07e58929":"code","49a3eadb":"code","1ce14277":"code","bf95df86":"code","1691ac5e":"code","1795a471":"code","ec216948":"code","1350ff0a":"code","926d0d40":"code","73666dff":"code","e3799400":"code","998b5144":"code","a412779b":"code","64ef297a":"code","9ff31bec":"code","1c109773":"code","467b62fd":"code","c2cf651e":"code","9e5e9062":"code","6072e23e":"code","61280edf":"code","db3614d2":"code","7bf1244e":"code","76995f35":"code","884533dc":"code","ff4d18b4":"code","783a65eb":"code","9291d649":"code","c614af46":"code","9338cbd8":"code","6fbc64d7":"code","7e235425":"code","9ea17f20":"markdown","342f7bbf":"markdown","07aaa4a2":"markdown","ba3e92cb":"markdown","0ef0a483":"markdown"},"source":{"995df447":"import pandas as pd\nimport matplotlib. pyplot as plt\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import ExtraTreesRegressor, RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import GridSearchCV","73a097f2":"def chequeator(df_to_submit):\n    \"\"\"\n    Esta funci\u00f3n se asegura de que tu submission tenga la forma requerida por Kaggle.\n    \n    Si es as\u00ed, se guardar\u00e1 el dataframe en un `csv` y estar\u00e1 listo para subir a Kaggle.\n    \n    Si no, LEE EL MENSAJE Y HAZLE CASO.\n    \n    Si a\u00fan no:\n    - apaga tu ordenador, \n    - date una vuelta, \n    - enciendelo otra vez, \n    - abre este notebook y \n    - leelo todo de nuevo. \n    Todos nos merecemos una segunda oportunidad. Tambi\u00e9n t\u00fa.\n    \"\"\"\n    if df_to_submit.shape == sample.shape:\n        if df_to_submit.columns.all() == sample.columns.all():\n            if df_to_submit.id.all() == sample.id.all():\n                print(\"You're ready to submit!\")\n                submission.to_csv(\"submission_rfr.csv\", index = False) #muy importante el index = False\n                urllib.request.urlretrieve(\"https:\/\/i.kym-cdn.com\/photos\/images\/facebook\/000\/747\/556\/27a.jpg\", \"gfg.png\")     \n                img = Image.open(\"gfg.png\")\n                img.show()   \n            else:\n                print(\"Check the ids and try again\")\n        else:\n            print(\"Check the names of the columns and try again\")\n    else:\n        print(\"Check the number of rows and\/or columns and try again\")\n        print(\"\\nMensaje secreto de Clara: No me puedo creer que despu\u00e9s de todo este notebook hayas hecho alg\u00fan cambio en las filas de `diamonds_test.csv`. Lloro.\")","2400dc08":"### Para que funcione necesitas bajarte los archivos de datos de Kaggle \ntrain = pd.read_csv(\"diamonds_train.csv\", index_col=0)\ntest = pd.read_csv(\"diamonds_test.csv\")\ntrain","84cf5a66":"def a_numero(name_data):\n    le = preprocessing.LabelEncoder()\n    name_data[\"cut\"] = le.fit_transform(name_data[\"cut\"])\n    name_data[\"color\"] = le.fit_transform(name_data[\"color\"])\n    name_data[\"clarity\"] = le.fit_transform(name_data[\"clarity\"])\n    return name_data","433b00b5":"train = a_numero(train)\ntrain.head()","70361d20":"test = a_numero(test)\ntest.head()","79e675c0":"test.drop([\"Unnamed: 0\"], axis=1, inplace=True)\ntest.shape","6043502b":"X_train, X_test, y_train, y_test  = train_test_split(train.drop(columns=\"price\"),train.price, test_size=0.2)","1a264762":"train_split=[X_train, X_test, y_train, y_test ]","4716a761":"models_non_linear={\n    \"ExtraTreesRegressor\":ExtraTreesRegressor(),\n    \"RandomForestRegressor\":RandomForestRegressor()\n    }","26fb4249":"def datamodels(models,train_split):\n    for name, model in models.items():\n        print(f\"--------Training:{name}--------\")\n        model=model.fit(train_split[0],train_split[2])\n        y_predict=model.predict(train_split[1])\n        print(f\"RMSE->{mean_squared_error(y_predict,train_split[3])**0.5}\")","07e58929":"datamodels(models_non_linear,train_split)","49a3eadb":"print(f\"--------RandomForestRegressor--------\")\nmodel=RandomForestRegressor()\nmodel=model.fit(X_train,y_train)\ny_predict=model.predict(X_test)\nprint(f\"RMSE->{mean_squared_error(y_predict,y_test)**0.5}\")","1ce14277":"parameters = { \n    'bootstrap': [True],\n    'n_estimators': [200, 300, 400, 600],\n    'max_features': ['auto'],\n    'max_depth' : [10, 20, 30, 40, 50], \n    'min_samples_leaf': [1, 2, 4], \n    'min_samples_split': [2, 5, 10],\n    'random_state': [0], \n    'max_leaf_nodes': [5000],\n}","bf95df86":"rfc = RandomForestRegressor()\ngrid = GridSearchCV(estimator=rfc,param_grid=parameters,verbose=1,n_jobs=-1,cv=5)\ngrid.fit(X_train,y_train)","1691ac5e":"grid.best_params_","1795a471":"model=RandomForestRegressor(bootstrap=True,max_depth=40,max_features=\"auto\",n_estimators=300)\nmodel=model.fit(X_train,y_train)\ny_predict=model.predict(X_test)\nprint(f\"RMSE->{mean_squared_error(y_predict,y_test)**0.5}\")\n## RMSE->573.3059639683504","ec216948":"y_test_predicted=grid.predict(X_test)","1350ff0a":"mean_squared_error(y_test,y_test_predicted)**0.5","926d0d40":"r2_score(y_test,y_predict)","73666dff":"rfr_model=RandomForestRegressor(bootstrap=True,max_depth=40,max_features=\"auto\",n_estimators=300)","e3799400":"test = a_numero(test)\ntest.head()","998b5144":"rfr_model.fit(X_train,y_train)","a412779b":"predictions = rfr_model.predict(X_test)\nprint(predictions)","64ef297a":"np.sqrt(mean_squared_error(y_test, predictions))","9ff31bec":"predictions_submit = rfr_model.predict(test)\npredictions_submit","1c109773":"submission1 = pd.DataFrame({\"id\": range(len(predictions_submit)), \"price\": predictions_submit})","467b62fd":"submission1.head()","c2cf651e":"submission1.shape","9e5e9062":"sample = pd.read_csv(\"sample_submission.csv\")","6072e23e":"chequeator(submission1)","61280edf":"def chequeator(df_to_submit):\n    \"\"\"\n    Esta funci\u00f3n se asegura de que tu submission tenga la forma requerida por Kaggle.\n    \n    Si es as\u00ed, se guardar\u00e1 el dataframe en un `csv` y estar\u00e1 listo para subir a Kaggle.\n    \n    Si no, LEE EL MENSAJE Y HAZLE CASO.\n    \n    Si a\u00fan no:\n    - apaga tu ordenador, \n    - date una vuelta, \n    - enciendelo otra vez, \n    - abre este notebook y \n    - leelo todo de nuevo. \n    Todos nos merecemos una segunda oportunidad. Tambi\u00e9n t\u00fa.\n    \"\"\"\n    if df_to_submit.shape == sample.shape:\n        if df_to_submit.columns.all() == sample.columns.all():\n            if df_to_submit.id.all() == sample.id.all():\n                print(\"You're ready to submit!\")\n                submission.to_csv(\"submission_cd2.csv\", index = False) #muy importante el index = False\n                urllib.request.urlretrieve(\"https:\/\/i.kym-cdn.com\/photos\/images\/facebook\/000\/747\/556\/27a.jpg\", \"gfg.png\")     \n                img = Image.open(\"gfg.png\")\n                img.show()   \n            else:\n                print(\"Check the ids and try again\")\n        else:\n            print(\"Check the names of the columns and try again\")\n    else:\n        print(\"Check the number of rows and\/or columns and try again\")\n        print(\"\\nMensaje secreto de Clara: No me puedo creer que despu\u00e9s de todo este notebook hayas hecho alg\u00fan cambio en las filas de `diamonds_test.csv`. Lloro.\")","db3614d2":"print(f\"--------ExtraTreesRegressor--------\")\netr=ExtraTreesRegressor()\netr=etr.fit(X_train,y_train)\ny_predict=etr.predict(X_test)\nprint(f\"RMSE->{mean_squared_error(y_predict,y_test)**0.5}\")","7bf1244e":"params={\"n_estimators\":[260, 270, 280], \n        'max_features': ['auto'], \n        \"max_depth\":[17, 18, 19],\n        \"min_samples_split\":[6, 7, 8], \n        \"criterion\": ['mse'], \n        'bootstrap': [False],\n        'warm_start': [True]\n\n       }\nGSCV=GridSearchCV(estimator=ExtraTreesRegressor(n_estimators=200,max_depth=50,min_samples_split=10,min_samples_leaf=1,random_state=300),\n             scoring=\"neg_root_mean_squared_error\",verbose=1,n_jobs=-1,param_grid=params,cv=5)\n\nGSCV.fit(X_train,y_train)","76995f35":"GSCV.best_params_","884533dc":"y_test_predict_opt=GSCV.predict(X_test)\n\nRMSE=mean_squared_error(y_test,y_test_predict_opt)**0.5\n\n\nprint(f\"RMSE={RMSE}\")","ff4d18b4":"etr=ExtraTreesRegressor()\netr=etr.fit(X_train,y_train)\netr_predict=etr.predict(test)","783a65eb":"etr_predict","9291d649":"submission = pd.DataFrame({\"id\": range(len(etr_predict)), \"price\": etr_predict})","c614af46":"submission.shape","9338cbd8":"import urllib.request\nfrom PIL import Image","6fbc64d7":"sample = pd.read_csv(\"sample_submission.csv\")","7e235425":"chequeator(submission)","9ea17f20":"### Random Forest Regressor","342f7bbf":"#### Aqu\u00ed encontrar\u00e1s todo lo que necesitas saber: https:\/\/www.kaggle.com\/t\/ab8726f0cfc84544abbae69a6be88071","07aaa4a2":"## Mejora de los algortimos","ba3e92cb":"### Extra Trees Regressor","0ef0a483":"![image](competi.png)"}}