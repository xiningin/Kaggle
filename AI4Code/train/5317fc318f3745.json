{"cell_type":{"42ceba2d":"code","0c86c908":"code","3f07ff27":"code","1ef0bc4d":"code","472a02a2":"code","d42287ed":"code","24337227":"code","31468d93":"code","d7745ea0":"code","af3091f3":"code","43d2c4db":"code","65383029":"code","e1073cde":"code","bf4fb2bb":"code","99c3e95d":"code","cfe58ffe":"code","fe55bb5d":"markdown","d118dfa2":"markdown","f1ea5dd9":"markdown"},"source":{"42ceba2d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0c86c908":"import pandas as pd \nimport numpy as np \nimport pylab as pl \nimport matplotlib.pyplot as plt \nfrom sklearn.tree import DecisionTreeClassifier","3f07ff27":"my_data=pd.read_csv('\/kaggle\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')","1ef0bc4d":"my_data.head()","472a02a2":"my_data.describe()","d42287ed":"X = my_data[['age','sex','cp','trtbps','chol','fbs','restecg','thalachh','exng','oldpeak','slp','caa','thall']].values","24337227":"X.shape","31468d93":"y = my_data['output']\ny.shape","d7745ea0":"plt.scatter(my_data.age, my_data.output)\nplt.xlabel('Age')\nplt.ylabel('Output')\nplt.show()","af3091f3":"import seaborn as sns\nsns.set(rc={'figure.figsize':(7,5)})\nplt.hist(my_data.age, bins=100)\nplt.xlabel('Age')\nplt.ylabel('Number of People')","43d2c4db":"from sklearn.model_selection import train_test_split\nX_trainset, X_testset, y_trainset, y_testset = train_test_split(X, y, test_size = 30, random_state = 5)","65383029":"y_testset.shape","e1073cde":"y_trainset.shape","bf4fb2bb":"outputTree = DecisionTreeClassifier(criterion='entropy', max_depth=12)\noutputTree.fit(X_trainset, y_trainset)","99c3e95d":"predTree = outputTree.predict(X_testset)","cfe58ffe":"from sklearn import metrics\nprint('Accuracy: ',metrics.accuracy_score(y_testset, predTree))","fe55bb5d":"<h4> Accuracy comes out to be 0.9","d118dfa2":"<h2> Please give reviews so that I can understand it better. Thanks.","f1ea5dd9":"<h2> Using Decision Tree"}}