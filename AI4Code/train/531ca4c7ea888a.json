{"cell_type":{"757671d6":"code","1cd0729c":"code","9466394c":"code","ba2da298":"code","617cf436":"code","e3818506":"code","59b79534":"code","5c38b8fd":"code","1c26f30b":"code","8731bd50":"code","2051dc17":"code","421a0d11":"code","e377d986":"code","f8e26556":"code","f5c425c6":"code","6df6da81":"code","bf9b2239":"code","f08e8ad7":"code","b70789b2":"code","8f6b8be8":"code","d471a769":"code","7aff1b2b":"code","4b5b29b8":"code","d3afbc45":"code","d5e1375a":"code","713eb744":"code","5d25624a":"code","16342c96":"code","19fbdd86":"code","69e5e98c":"code","c8c382f6":"markdown","75f3ce18":"markdown","c2cd1099":"markdown","c3ea0b28":"markdown","2a49eb8b":"markdown","c111fa20":"markdown","d73b0464":"markdown","5cb5539f":"markdown","fdd3d2f0":"markdown","f9510c17":"markdown","b5d72a69":"markdown","0f35f8b4":"markdown","74777c64":"markdown","835b8788":"markdown","02d0b8d4":"markdown","6f17dc86":"markdown","f581b338":"markdown","dc5aee3e":"markdown","f18ace36":"markdown","fd812bfe":"markdown","585be8f9":"markdown","cc4f0856":"markdown","be7fffbc":"markdown","0ed158b7":"markdown"},"source":{"757671d6":"import geoplot\nimport geopandas as gpd\nimport mapclassify\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport re\nimport seaborn as sns\nimport warnings\n\nfrom shapely import *\n\n%matplotlib inline\n\nsns.set_theme(style=\"darkgrid\")\nwarnings.filterwarnings('ignore')","1cd0729c":"df = pd.read_csv(f'..\/input\/brasil-students-scholarship-prouni-20052019\/prouni_2005_2019.csv')\ndf_2019 = df[df['ANO_CONCESSAO_BOLSA'] == 2019]\n\nmunicipios = gpd.read_file(f'..\/input\/ibge-municipios-ufs-shape')\nmunicipios['NM_MUN'] = municipios['NM_MUN'].str.lower() \\\n                      .str.normalize('NFKD').str.encode('ascii', errors='ignore').str.decode('utf-8')","9466394c":"print(df.shape)\nprint(df.isnull().sum())\nprint(df.info())","ba2da298":"cols = ['TIPO_BOLSA', 'MODALIDADE_ENSINO_BOLSA',\n        'NOME_TURNO_CURSO_BOLSA', 'SEXO_BENEFICIARIO_BOLSA',\n        'RACA_BENEFICIARIO_BOLSA', 'BENEFICIARIO_DEFICIENTE_FISICO']\n\nfig, axs = plt.subplots(3, 2, figsize=(18, 9))#, sharey=True)\nfig.subplots_adjust(hspace = .7, wspace=.7)\naxs = axs.ravel()\n\nfor i in range(len(cols)):\n    series_inter = df[cols[i]].value_counts()\n    sns.barplot(ax=axs[i], x=series_inter.index, y=series_inter)\n    axs[i].set_title(cols[i])\n    \nfig.text(0.13, 0.95, 'Prouni - Overall',\n         fontsize=18, fontweight='bold', fontfamily='garamond') \nplt.show()","617cf436":"cols = ['TIPO_BOLSA', 'MODALIDADE_ENSINO_BOLSA',\n        'NOME_TURNO_CURSO_BOLSA', 'SEXO_BENEFICIARIO_BOLSA',\n        'RACA_BENEFICIARIO_BOLSA', 'BENEFICIARIO_DEFICIENTE_FISICO']\n\nfig, axs = plt.subplots(3, 2, figsize=(18, 9))#, sharey=True)\nfig.subplots_adjust(hspace = .7, wspace=.7)\naxs = axs.ravel()\n\nfor i in range(len(cols)):\n    series_inter = df_2019[cols[i]].value_counts()\n    sns.barplot(ax=axs[i], x=series_inter.index, y=series_inter)\n    axs[i].set_title(cols[i])\n\n    \nfig.text(0.13, 0.95, 'Prouni - 2019',\n         fontsize=18, fontweight='bold', fontfamily='garamond')   \nplt.show()","e3818506":"fig, axs = plt.subplots(1,2, figsize=(15, 5))\n\ninst_top_10 = df['NOME_IES_BOLSA'].value_counts()[:10]\nsns.barplot(ax=axs[0], x=inst_top_10.index, y=inst_top_10)\naxs[0].set_xticklabels(inst_top_10.index, rotation=90)\naxs[0].set_title('Overall')\n\ninst_top_10_2019 = df_2019['NOME_IES_BOLSA'].value_counts()[:10]\nsns.barplot(ax=axs[1], x=inst_top_10_2019.index, y=inst_top_10_2019)\naxs[1].set_xticklabels(inst_top_10_2019.index, rotation=90)\naxs[1].set_title('2019')\nplt.show()","59b79534":"fig, axs = plt.subplots(2,1, figsize=(15, 15))\n\ncurso_top_10 = df['NOME_CURSO_BOLSA'].value_counts()[:10]\nsns.barplot(ax=axs[0], x=curso_top_10.index, y=curso_top_10)\naxs[0].set_title('Overall')\n\ncurso_top_10_2019 = df_2019['NOME_CURSO_BOLSA'].value_counts()[:10]\nsns.barplot(ax=axs[1], x=curso_top_10_2019.index, y=curso_top_10_2019)\naxs[1].set_title('2019')\nplt.show()","5c38b8fd":"cols = ['ANO_CONCESSAO_BOLSA', 'SIGLA_UF_BENEFICIARIO_BOLSA']\n\nfig, axs = plt.subplots(2, 1, figsize=(18, 9))#, sharey=True)\nfig.subplots_adjust(hspace = .7, wspace=.7)\nfig.suptitle('Prouni - Overall')\naxs = axs.ravel()\n\nfor i in range(len(cols)):\n    series_inter = df[cols[i]].value_counts()\n    sns.barplot(ax=axs[i], x=series_inter.index, y=series_inter)\n    axs[i].set_title(cols[i])\nplt.show()","1c26f30b":"print(\"Overall: {0:.0%} of students from S\u00e3o Paulo.\".format(series_inter['SP'] \/ series_inter.sum()))","8731bd50":"fig, axs = plt.subplots(1, 1, figsize=(18, 4.5))#, sharey=True)\n\nfig.subplots_adjust(hspace = .7, wspace=.7)\nfig.suptitle('Prouni - 2019')\n\nseries_inter = df_2019['SIGLA_UF_BENEFICIARIO_BOLSA'].value_counts()\n\nsns.barplot(ax=axs, x=series_inter.index, y=series_inter)\nplt.show()","2051dc17":"print(\"2019: {0:.0%} of students from S\u00e3o Paulo.\".format(series_inter['SP'] \/ series_inter.sum()))","421a0d11":"geo_df = pd.merge(df, municipios[['NM_MUN', 'SIGLA_UF','geometry']], left_on='MUNICIPIO_BENEFICIARIO_BOLSA', right_on='NM_MUN', how='left')\ngeo_df['count'] = 1\ngeo_df.loc[geo_df['SIGLA_UF'].isna(), 'SIGLA_UF'] = geo_df[geo_df['SIGLA_UF'].isna()]['SIGLA_UF_BENEFICIARIO_BOLSA']\n\ngeo_df_2019 = pd.merge(df_2019, municipios[['NM_MUN', 'SIGLA_UF','geometry']], left_on='MUNICIPIO_BENEFICIARIO_BOLSA', right_on='NM_MUN', how='left')\ngeo_df_2019['count'] = 1\ngeo_df_2019.loc[geo_df_2019['SIGLA_UF'].isna(), 'SIGLA_UF'] = geo_df_2019[geo_df_2019['SIGLA_UF'].isna()]['SIGLA_UF_BENEFICIARIO_BOLSA']","e377d986":"geo_df_sp = geo_df[geo_df['SIGLA_UF'] == 'SP']\ngeo_df_sp_gb = geo_df_sp.groupby('NM_MUN').agg({'count' : 'sum', 'geometry' : 'first'}).reset_index()\n\ngeo_df_sp = gpd.GeoDataFrame(geo_df_sp)\ngeo_df_sp_gb = gpd.GeoDataFrame(geo_df_sp_gb)\n\ncapital_sao_paulo_coords = geo_df_sp_gb[geo_df_sp_gb['NM_MUN'] == 'sao paulo']['geometry'] \\\n                            .apply(lambda x: x.representative_point().coords[:]).values[0][0]\n\nscheme = mapclassify.Quantiles(geo_df_sp_gb['count'], k=5)\n\ngeo_df_sp_2019 = geo_df_2019[geo_df_2019['SIGLA_UF'] == 'SP']\ngeo_df_sp_2019_gb = geo_df_sp_2019.groupby('NM_MUN').agg({'count' : 'sum', 'geometry' : 'first'}).reset_index()\n\ngeo_df_sp_2019 = gpd.GeoDataFrame(geo_df_sp_2019)\ngeo_df_sp_2019_gb = gpd.GeoDataFrame(geo_df_sp_2019_gb)\n\ncapital_sao_paulo_coords_2019 = geo_df_sp_2019_gb[geo_df_sp_2019_gb['NM_MUN'] == 'sao paulo']['geometry'] \\\n                            .apply(lambda x: x.representative_point().coords[:]).values[0][0]\n\nscheme_2019 = mapclassify.Quantiles(geo_df_sp_2019_gb['count'], k=5)\n\nfig, axs = plt.subplots(1,2, figsize=(15, 8))\n\ngeoplot.choropleth(\n    geo_df_sp_gb, hue=geo_df_sp_gb['count'], scheme=scheme,\n    cmap='Reds', ax=axs[0]\n)\n\naxs[0].annotate('Capital City: S\u00e3o Paulo', xy=(capital_sao_paulo_coords), xytext=((-43, -20)),\n            arrowprops=dict(facecolor='black', shrink=0.05), fontweight='bold', fontfamily='garamond'\n            )\n\naxs[0].set_title('Overall')\n\ngeoplot.choropleth(\n    geo_df_sp_2019_gb, hue=geo_df_sp_2019_gb['count'], scheme=scheme_2019,\n    cmap='Reds', ax=axs[1]\n)\n\naxs[1].annotate('Capital City: S\u00e3o Paulo', xy=(capital_sao_paulo_coords_2019), xytext=((-43, -20)),\n            arrowprops=dict(facecolor='black', shrink=0.05), fontweight='bold', fontfamily='garamond'\n            )\naxs[1].set_title('2019')\n\nfig.text(0.13, 0.95, 'Distribution of Prouni Students by City in the State of S\u00e3o Paulo',\n         fontsize=18, fontweight='bold', fontfamily='garamond')   \nfig.text(0.131, 0.91, 'State View', fontsize=17,fontfamily='garamond')\nplt.show()","f8e26556":"geo_df_sp = geo_df[geo_df['SIGLA_UF'] == 'SP']\ngeo_df_sp_gb = geo_df_sp.groupby('NM_MUN').agg({'count' : 'sum', 'geometry' : 'first'}).reset_index()\n\ngeo_df_sp = gpd.GeoDataFrame(geo_df_sp)\ngeo_df_sp_gb = gpd.GeoDataFrame(geo_df_sp_gb)\ngeo_df_sp_gb = geo_df_sp_gb[geo_df_sp_gb['count'] > 100]\n\ncapital_sao_paulo_coords = geo_df_sp_gb[geo_df_sp_gb['NM_MUN'] == 'sao paulo']['geometry'] \\\n                            .apply(lambda x: x.representative_point().coords[:]).values[0][0]\n\nscheme = mapclassify.Quantiles(geo_df_sp_gb['count'], k=5)\n\ngeo_df_sp_2019 = geo_df_2019[geo_df_2019['SIGLA_UF'] == 'SP']\ngeo_df_sp_2019_gb = geo_df_sp_2019.groupby('NM_MUN').agg({'count' : 'sum', 'geometry' : 'first'}).reset_index()\n\ngeo_df_sp_2019 = gpd.GeoDataFrame(geo_df_sp_2019)\ngeo_df_sp_2019_gb = gpd.GeoDataFrame(geo_df_sp_2019_gb)\ngeo_df_sp_2019_gb = geo_df_sp_2019_gb[geo_df_sp_2019_gb['count'] > 100]\n\ncapital_sao_paulo_coords_2019 = geo_df_sp_2019_gb[geo_df_sp_2019_gb['NM_MUN'] == 'sao paulo']['geometry'] \\\n                            .apply(lambda x: x.representative_point().coords[:]).values[0][0]\n\nscheme_2019 = mapclassify.Quantiles(geo_df_sp_2019_gb['count'], k=5)\n\nfig, axs = plt.subplots(1,2, figsize=(15, 8))\n\n# Note: this code sample requires geoplot>=0.4.0.\ngeoplot.choropleth(\n    geo_df_sp_gb, hue=geo_df_sp_gb['count'], scheme=scheme,\n    cmap='Reds', ax=axs[0]\n)\n\naxs[0].annotate('Capital City: S\u00e3o Paulo', xy=(capital_sao_paulo_coords), xytext=((-43, -20)),\n            arrowprops=dict(facecolor='black', shrink=0.05), fontweight='bold', fontfamily='garamond'\n            )\n\naxs[0].set_title('Overall')\n\ngeoplot.choropleth(\n    geo_df_sp_2019_gb, hue=geo_df_sp_2019_gb['count'], scheme=scheme_2019,\n    cmap='Reds', ax=axs[1]\n)\n\naxs[1].annotate('Capital City: S\u00e3o Paulo', xy=(capital_sao_paulo_coords_2019), xytext=((-43, -20)),\n            arrowprops=dict(facecolor='black', shrink=0.05), fontweight='bold', fontfamily='garamond'\n            )\naxs[1].set_title('2019')\n\nfig.text(0.13, 0.95, 'Distribution of Prouni Students by City in the State of S\u00e3o Paulo',\n         fontsize=18, fontweight='bold', fontfamily='garamond')   \nfig.text(0.131, 0.91, '#Students per City > 100', fontsize=17,fontfamily='garamond')\nplt.show()","f5c425c6":"geo_df_mg = geo_df[geo_df['SIGLA_UF'] == 'MG']\ngeo_df_mg_gb = geo_df_mg.groupby('NM_MUN').agg({'count' : 'sum', 'geometry' : 'first'}).reset_index()\n\ngeo_df_mg = gpd.GeoDataFrame(geo_df_mg)\ngeo_df_mg_gb = gpd.GeoDataFrame(geo_df_mg_gb)\n\ncapital_belo_horizonte_coords = geo_df_mg_gb[geo_df_mg_gb['NM_MUN'] == 'belo horizonte']['geometry'] \\\n                            .apply(lambda x: x.representative_point().coords[:]).values[0][0]\n\nscheme = mapclassify.Quantiles(geo_df_mg_gb['count'], k=5)\n\ngeo_df_mg_2019 = geo_df_2019[geo_df_2019['SIGLA_UF'] == 'MG']\ngeo_df_mg_2019_gb = geo_df_mg_2019.groupby('NM_MUN').agg({'count' : 'sum', 'geometry' : 'first'}).reset_index()\n\ngeo_df_mg_2019 = gpd.GeoDataFrame(geo_df_mg_2019)\ngeo_df_mg_2019_gb = gpd.GeoDataFrame(geo_df_mg_2019_gb)\n\ncapital_belo_horizonte_coords_2019 = geo_df_mg_2019_gb[geo_df_mg_2019_gb['NM_MUN'] == 'belo horizonte']['geometry'] \\\n                            .apply(lambda x: x.representative_point().coords[:]).values[0][0]\n\nscheme_2019 = mapclassify.Quantiles(geo_df_mg_2019_gb['count'], k=5)\n\nfig, axs = plt.subplots(1,2, figsize=(15, 8))\n\ngeoplot.choropleth(\n    geo_df_mg_gb, hue=geo_df_mg_gb['count'], scheme=scheme,\n    cmap='Reds', ax=axs[0]\n)\n\naxs[0].annotate('Capital City: Belo Horizonte', xy=(capital_belo_horizonte_coords), xytext=((-39, -16)),\n            arrowprops=dict(facecolor='black', shrink=0.05), fontweight='bold', fontfamily='garamond'\n            )\n\naxs[0].set_title('Overall')\n\ngeoplot.choropleth(\n    geo_df_mg_2019_gb, hue=geo_df_mg_2019_gb['count'], scheme=scheme_2019,\n    cmap='Reds', ax=axs[1]\n)\n\naxs[1].annotate('Capital City: Belo Horizonte', xy=(capital_belo_horizonte_coords_2019), xytext=((-39, -16)),\n            arrowprops=dict(facecolor='black', shrink=0.05), fontweight='bold', fontfamily='garamond'\n            )\naxs[1].set_title('2019')\n\nfig.text(0.13, 0.95, 'Distribution of Prouni Students by City in the State of Minas Gerais',\n         fontsize=18, fontweight='bold', fontfamily='garamond')   \nfig.text(0.131, 0.91, 'State View', fontsize=17,fontfamily='garamond')\nplt.show()","6df6da81":"geo_df_mg = geo_df[geo_df['SIGLA_UF'] == 'MG']\ngeo_df_mg_gb = geo_df_mg.groupby('NM_MUN').agg({'count' : 'sum', 'geometry' : 'first'}).reset_index()\n\ngeo_df_mg = gpd.GeoDataFrame(geo_df_mg)\ngeo_df_mg_gb = gpd.GeoDataFrame(geo_df_mg_gb)\ngeo_df_mg_gb = geo_df_mg_gb[geo_df_mg_gb['count'] > 100]\n\ncapital_belo_horizonte_coords = geo_df_mg_gb[geo_df_mg_gb['NM_MUN'] == 'belo horizonte']['geometry'] \\\n                            .apply(lambda x: x.representative_point().coords[:]).values[0][0]\n\nscheme = mapclassify.Quantiles(geo_df_mg_gb['count'], k=5)\n\ngeo_df_mg_2019 = geo_df_2019[geo_df_2019['SIGLA_UF'] == 'MG']\ngeo_df_mg_2019_gb = geo_df_mg_2019.groupby('NM_MUN').agg({'count' : 'sum', 'geometry' : 'first'}).reset_index()\n\ngeo_df_mg_2019 = gpd.GeoDataFrame(geo_df_mg_2019)\ngeo_df_mg_2019_gb = gpd.GeoDataFrame(geo_df_mg_2019_gb)\ngeo_df_mg_2019_gb = geo_df_mg_2019_gb[geo_df_mg_2019_gb['count'] > 100]\n\ncapital_belo_horizonte_coords_2019 = geo_df_mg_2019_gb[geo_df_mg_2019_gb['NM_MUN'] == 'belo horizonte']['geometry'] \\\n                            .apply(lambda x: x.representative_point().coords[:]).values[0][0]\n\nscheme_2019 = mapclassify.Quantiles(geo_df_mg_2019_gb['count'], k=5)\n\nfig, axs = plt.subplots(1,2, figsize=(15, 8))\n\ngeoplot.choropleth(\n    geo_df_mg_gb, hue=geo_df_mg_gb['count'], scheme=scheme,\n    cmap='Reds', ax=axs[0]\n)\n\naxs[0].annotate('Capital City: Belo Horizonte', xy=(capital_belo_horizonte_coords), xytext=((-39, -16)),\n            arrowprops=dict(facecolor='black', shrink=0.05), fontweight='bold', fontfamily='garamond'\n            )\n\naxs[0].set_title('Overall')\n\ngeoplot.choropleth(\n    geo_df_mg_2019_gb, hue=geo_df_mg_2019_gb['count'], scheme=scheme_2019,\n    cmap='Reds', ax=axs[1]\n)\n\naxs[1].annotate('Capital City: Belo Horizonte', xy=(capital_belo_horizonte_coords_2019), xytext=((-39, -16)),\n            arrowprops=dict(facecolor='black', shrink=0.05), fontweight='bold', fontfamily='garamond'\n            )\naxs[1].set_title('2019')\n\nfig.text(0.13, 0.95, 'Distribution of Prouni Students by City in the State of Minas Gerais',\n         fontsize=18, fontweight='bold', fontfamily='garamond')   \nfig.text(0.131, 0.91, '#Students per City > 100', fontsize=17,fontfamily='garamond')\nplt.show()","bf9b2239":"bins= [0,18,22,25,30,35,40,45,50,55,60,70,100]\nlabels = ['0-18','18-21','22-24','25-29','30-34',\n          '35-39','40-44','45-49','50-54', '55-59',\n          '60-69', '70+']\n\ndf['AgeGroup'] = pd.cut(df['idade'], bins=bins, labels=labels, right=False)\n\ndata_gen_idade = df.groupby(['SEXO_BENEFICIARIO_BOLSA'])['AgeGroup'].value_counts().unstack().sort_index()\n\nman = -data_gen_idade.loc['M']\nwoman = data_gen_idade.loc['F']\n\nfig, ax = plt.subplots(1,1, figsize=(15, 8))\nax.bar(woman.index, woman, width=0.55, color='#990000', alpha=0.8, label='Female')\nax.bar(man.index, man, width=0.55, color='#004c70', alpha=0.8, label='Male')\n# ax.set_ylim(-1200, 3500)\n\nfor i in man.index:\n    ax.annotate(f\"{-man[i]}\", \n                   xy=(i, man[i] - 10000),\n                   va = 'center', ha='center',fontweight='bold', fontfamily='garamond',\n                   color='#4a4a4a')\n    \nfor i in woman.index:\n    ax.annotate(f\"{woman[i]}\", \n                   xy=(i, woman[i] + 10000),\n                   va = 'center', ha='center',fontweight='bold', fontfamily='garamond',\n                   color='#4a4a4a')    \n\nfor s in ['top', 'left', 'right', 'bottom']:\n    ax.spines[s].set_visible(False)\n\nax.set_xticklabels(data_gen_idade.columns, fontfamily='garamond')\nax.set_yticks([])    \nax.legend()\nfig.text(0.16, 0.95, 'Age \/ Gender Distribution', fontsize=18, fontweight='bold', fontfamily='garamond')\nfig.text(0.131, 0.91, 'Overall', fontsize=17,fontfamily='garamond')\nplt.show()","f08e8ad7":"bins= [0,18,22,25,30,35,40,45,50,55,60,70,100]\nlabels = ['0-18','18-21','22-24','25-29','30-34',\n          '35-39','40-44','45-49','50-54', '55-59',\n          '60-69', '70+']\n\ndf_2019['AgeGroup'] = pd.cut(df_2019['idade'], bins=bins, labels=labels, right=False)\n\ndata_gen_idade = df_2019.groupby(['SEXO_BENEFICIARIO_BOLSA'])['AgeGroup'].value_counts().unstack().sort_index()\ndata_gen_idade = data_gen_idade[[data_gen_idade.columns[-1]] + data_gen_idade.columns[:-1].tolist()]\n\nman = -data_gen_idade.loc['M']\nwoman = data_gen_idade.loc['F']\n\nfig, ax = plt.subplots(1,1, figsize=(15, 8))\nax.bar(woman.index, woman, width=0.55, color='#990000', alpha=0.8, label='Female')\nax.bar(man.index, man, width=0.55, color='#004c70', alpha=0.8, label='Male')\n# ax.set_ylim(-1200, 3500)\n\nfor i in man.index:\n    ax.annotate(f\"{-man[i]}\", \n                   xy=(i, man[i] - 2000),\n                   va = 'center', ha='center',fontweight='bold', fontfamily='garamond',\n                   color='#4a4a4a')\n    \nfor i in woman.index:\n    ax.annotate(f\"{woman[i]}\", \n                   xy=(i, woman[i] + 2000),\n                   va = 'center', ha='center',fontweight='bold', fontfamily='garamond',\n                   color='#4a4a4a')    \n\nfor s in ['top', 'left', 'right', 'bottom']:\n    ax.spines[s].set_visible(False)\n\nax.set_xticklabels(data_gen_idade.columns, fontfamily='garamond')\nax.set_yticks([])    \nax.legend()\nfig.text(0.16, 0.95, 'Age \/ Gender Distribution', fontsize=18, fontweight='bold', fontfamily='garamond')    \nplt.show()","b70789b2":"states_order = df['SIGLA_UF_BENEFICIARIO_BOLSA'].value_counts()[:10].index\ndata_gen_state = df[['SEXO_BENEFICIARIO_BOLSA', 'SIGLA_UF_BENEFICIARIO_BOLSA']] \\\n                .groupby('SIGLA_UF_BENEFICIARIO_BOLSA')['SEXO_BENEFICIARIO_BOLSA'] \\\n                .value_counts().unstack().loc[states_order]\n\ndata_gen_state['sum'] = data_gen_state.sum(axis=1)\ndata_gen_state_ratio = (data_gen_state.T \/ data_gen_state['sum']).T[['M', 'F']]","8f6b8be8":"fig, ax = plt.subplots(1,1,figsize=(12, 6),)\n\nax.barh(data_gen_state_ratio.index[::], data_gen_state_ratio['M'], \n        color='#004c70', alpha=0.7, label='M')\nax.barh(data_gen_state_ratio.index[::], data_gen_state_ratio['F'], left=data_gen_state_ratio['M'], \n        color='#990000', alpha=0.7, label='F')\n\nax.set_xlim(0, 1)\nax.set_xticks([])\nax.set_yticklabels(data_gen_state_ratio.index[::], fontfamily='garamond', fontsize=11)\n\n# male percentage\nfor i in data_gen_state_ratio.index:\n    ax.annotate(f\"{data_gen_state_ratio['M'][i]*100:.3}%\", \n                   xy=(data_gen_state_ratio['M'][i]\/2, i),\n                   va = 'center', ha='center',fontsize=15, fontweight='bold', fontfamily='garamond',\n                   color='white')\n# female percentage\nfor i in data_gen_state_ratio.index:\n    ax.annotate(f\"{data_gen_state_ratio['F'][i]*100:.3}%\", \n                   xy=(data_gen_state_ratio['M'][i]+data_gen_state_ratio['F'][i]\/2, i),\n                   va = 'center', ha='center',fontsize=15, fontweight='bold', fontfamily='garamond',\n                   color='white')\n    \n\nfig.text(0.13, 0.95, 'Top10 States : Gender Distribution', fontsize=18, fontweight='bold', fontfamily='garamond')   \nfig.text(0.131, 0.91, 'Percent Stacked Bar Chart - Overall', fontsize=17,fontfamily='garamond')   \n\n    \nax.legend(loc='lower center', ncol=3, bbox_to_anchor=(0.5, -0.1))\nplt.gca().invert_yaxis()\nplt.show()","d471a769":"states_order = df_2019['SIGLA_UF_BENEFICIARIO_BOLSA'].value_counts()[:10].index\ndata_gen_state = df_2019[['SEXO_BENEFICIARIO_BOLSA', 'SIGLA_UF_BENEFICIARIO_BOLSA']] \\\n                .groupby('SIGLA_UF_BENEFICIARIO_BOLSA')['SEXO_BENEFICIARIO_BOLSA'] \\\n                .value_counts().unstack().loc[states_order]\n\ndata_gen_state['sum'] = data_gen_state.sum(axis=1)\ndata_gen_state_ratio = (data_gen_state.T \/ data_gen_state['sum']).T[['M', 'F']]","7aff1b2b":"fig, ax = plt.subplots(1,1,figsize=(12, 6),)\n\nax.barh(data_gen_state_ratio.index[::], data_gen_state_ratio['M'], \n        color='#004c70', alpha=0.7, label='M')\nax.barh(data_gen_state_ratio.index[::], data_gen_state_ratio['F'], left=data_gen_state_ratio['M'], \n        color='#990000', alpha=0.7, label='F')\n\nax.set_xlim(0, 1)\nax.set_xticks([])\nax.set_yticklabels(data_gen_state_ratio.index[::], fontfamily='garamond', fontsize=11)\n\n# male percentage\nfor i in data_gen_state_ratio.index:\n    ax.annotate(f\"{data_gen_state_ratio['M'][i]*100:.3}%\", \n                   xy=(data_gen_state_ratio['M'][i]\/2, i),\n                   va = 'center', ha='center',fontsize=15, fontweight='bold', fontfamily='garamond',\n                   color='white')\n# female percentage\nfor i in data_gen_state_ratio.index:\n    ax.annotate(f\"{data_gen_state_ratio['F'][i]*100:.3}%\", \n                   xy=(data_gen_state_ratio['M'][i]+data_gen_state_ratio['F'][i]\/2, i),\n                   va = 'center', ha='center',fontsize=15, fontweight='bold', fontfamily='garamond',\n                   color='white')\n    \n\nfig.text(0.13, 0.95, 'Top10 States : Gender Distribution', fontsize=18, fontweight='bold', fontfamily='garamond')   \nfig.text(0.131, 0.91, 'Percent Stacked Bar Chart - 2019', fontsize=17,fontfamily='garamond')   \n\n    \nax.legend(loc='lower center', ncol=3, bbox_to_anchor=(0.5, -0.1))\nplt.gca().invert_yaxis()\nplt.show()","4b5b29b8":"curso_top_10 = df['NOME_CURSO_BOLSA'].value_counts()[:10].index\ndata_gen_course = df[['SEXO_BENEFICIARIO_BOLSA', 'NOME_CURSO_BOLSA']] \\\n                .groupby('NOME_CURSO_BOLSA')['SEXO_BENEFICIARIO_BOLSA'] \\\n                .value_counts().unstack().loc[curso_top_10]\n\ndata_gen_course['sum'] = data_gen_course.sum(axis=1)\ndata_gen_course_ratio = (data_gen_course.T \/ data_gen_course['sum']).T[['M', 'F']]","d3afbc45":"fig, ax = plt.subplots(1,1,figsize=(12, 6),)\n\nax.barh(data_gen_course_ratio.index[::], data_gen_course_ratio['M'], \n        color='#004c70', alpha=0.7, label='M')\nax.barh(data_gen_course_ratio.index[::], data_gen_course_ratio['F'], left=data_gen_course_ratio['M'], \n        color='#990000', alpha=0.7, label='F')\n\nax.set_xlim(0, 1)\nax.set_xticks([])\nax.set_yticklabels(data_gen_course_ratio.index[::], fontfamily='garamond', fontsize=11)\n\n# male percentage\nfor i in data_gen_course_ratio.index:\n    ax.annotate(f\"{data_gen_course_ratio['M'][i]*100:.3}%\", \n                   xy=(data_gen_course_ratio['M'][i]\/2, i),\n                   va = 'center', ha='center',fontsize=15, fontweight='bold', fontfamily='garamond',\n                   color='white')\n# female percentage\nfor i in data_gen_course_ratio.index:\n    ax.annotate(f\"{data_gen_course_ratio['F'][i]*100:.3}%\", \n                   xy=(data_gen_course_ratio['M'][i]+data_gen_course_ratio['F'][i]\/2, i),\n                   va = 'center', ha='center',fontsize=15, fontweight='bold', fontfamily='garamond',\n                   color='white')\n    \n\nfig.text(0.13, 0.95, 'Top10 Courses : Gender Distribution', fontsize=18, fontweight='bold', fontfamily='garamond')   \nfig.text(0.131, 0.91, 'Percent Stacked Bar Chart - 2019', fontsize=17,fontfamily='garamond')   \n\n    \nax.legend(loc='lower center', ncol=3, bbox_to_anchor=(0.5, -0.1))\nplt.gca().invert_yaxis()\nplt.show()","d5e1375a":"curso_top_10_2019 = df_2019['NOME_CURSO_BOLSA'].value_counts()[:10].index\ndata_gen_course_2019 = df_2019[['SEXO_BENEFICIARIO_BOLSA', 'NOME_CURSO_BOLSA']] \\\n                .groupby('NOME_CURSO_BOLSA')['SEXO_BENEFICIARIO_BOLSA'] \\\n                .value_counts().unstack().loc[curso_top_10_2019]\n\ndata_gen_course_2019['sum'] = data_gen_course_2019.sum(axis=1)\ndata_gen_course_2019_ratio = (data_gen_course_2019.T \/ data_gen_course_2019['sum']).T[['M', 'F']]","713eb744":"fig, ax = plt.subplots(1,1,figsize=(12, 6),)\n\nax.barh(data_gen_course_2019_ratio.index[::], data_gen_course_2019_ratio['M'], \n        color='#004c70', alpha=0.7, label='M')\nax.barh(data_gen_course_2019_ratio.index[::], data_gen_course_2019_ratio['F'], left=data_gen_course_2019_ratio['M'], \n        color='#990000', alpha=0.7, label='F')\n\nax.set_xlim(0, 1)\nax.set_xticks([])\nax.set_yticklabels(data_gen_course_2019_ratio.index[::], fontfamily='garamond', fontsize=11)\n\n# male percentage\nfor i in data_gen_course_2019_ratio.index:\n    ax.annotate(f\"{data_gen_course_2019_ratio['M'][i]*100:.3}%\", \n                   xy=(data_gen_course_2019_ratio['M'][i]\/2, i),\n                   va = 'center', ha='center',fontsize=15, fontweight='bold', fontfamily='garamond',\n                   color='white')\n# female percentage\nfor i in data_gen_course_2019_ratio.index:\n    ax.annotate(f\"{data_gen_course_2019_ratio['F'][i]*100:.3}%\", \n                   xy=(data_gen_course_2019_ratio['M'][i]+data_gen_course_2019_ratio['F'][i]\/2, i),\n                   va = 'center', ha='center',fontsize=15, fontweight='bold', fontfamily='garamond',\n                   color='white')\n    \n\nfig.text(0.13, 0.95, 'Top10 Courses : Gender Distribution', fontsize=18, fontweight='bold', fontfamily='garamond')   \nfig.text(0.131, 0.91, 'Percent Stacked Bar Chart - 2019', fontsize=17,fontfamily='garamond')   \n\n    \nax.legend(loc='lower center', ncol=3, bbox_to_anchor=(0.5, -0.1))\nplt.gca().invert_yaxis()\nplt.show()","5d25624a":"race_order = ['Indigena', 'Amarela', 'Branca', 'Parda', 'Preta', 'Nao Informada']\ndf['count'] = 1\nfig, ax = plt.subplots(1, 1, figsize=(12, 12))\nsns.heatmap(pd.pivot_table(df, values='count', index=['AgeGroup'], columns=['RACA_BENEFICIARIO_BOLSA'], aggfunc=np.sum)[race_order], \n            cmap=\"YlGnBu\",\n            square=True, \n            linewidth=2.5, \n            cbar=False, \n            ax=ax,\n            annot=True,\n            fmt=\"d\"\n           )\n\nax.spines['top'].set_visible(True)\n\nfig.text(0.48, 1, 'Pivot Table : Age Group & Race - Overall', fontweight='bold', fontfamily='garamond', fontsize=18)   \n\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='garamond', rotation = 0, fontsize=11)\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='garamond', rotation=90, fontsize=11)\n\nplt.tight_layout()\nplt.show()","16342c96":"race_order = ['Indigena', 'Amarela', 'Branca', 'Parda', 'Preta', 'Nao Informada']\ndf_2019['count'] = 1\nfig, ax = plt.subplots(1, 1, figsize=(12, 12))\nsns.heatmap(pd.pivot_table(df_2019, values='count', index=['AgeGroup'], columns=['RACA_BENEFICIARIO_BOLSA'], aggfunc=np.sum)[race_order], \n            cmap=\"YlGnBu\",\n            square=True, \n            linewidth=2.5, \n            cbar=False, \n            ax=ax,\n            annot=True,\n            fmt=\"d\"\n           )\n\nax.spines['top'].set_visible(True)\n\nfig.text(0.48, 1, 'Pivot Table : Age Group & Race - 2019', fontweight='bold', fontfamily='garamond', fontsize=18)   \n\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='garamond', rotation = 0, fontsize=11)\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='garamond', rotation=90, fontsize=11)\n\nplt.tight_layout()\nplt.show()","19fbdd86":"state_order = ['RS', 'SC', 'PR', 'SP', 'RJ', 'ES',\n             'MG', 'MT', 'MS', 'GO', 'DF', 'BA',\n             'SE', 'AL', 'PE', 'PB', 'RN', 'CE',\n             'PI', 'MA', 'TO', 'PA', 'AP', 'RR',\n             'AM', 'AC', 'RO']\n\npivot_table = pd.pivot_table(geo_df, values='count', index=['RACA_BENEFICIARIO_BOLSA'], columns=['SIGLA_UF'], aggfunc=np.sum).loc[race_order, state_order]\npivot_table = (pivot_table-pivot_table.min())\/(pivot_table.max()-pivot_table.min())\n\npivot_table_2019 = pd.pivot_table(geo_df_2019, values='count', index=['RACA_BENEFICIARIO_BOLSA'], columns=['SIGLA_UF'], aggfunc=np.sum).loc[race_order, state_order]\npivot_table_2019 = (pivot_table_2019-pivot_table_2019.min())\/(pivot_table_2019.max()-pivot_table_2019.min())","69e5e98c":"race_order = ['Indigena', 'Amarela', 'Branca', 'Parda', 'Preta', 'Nao Informada']\ngeo_df['count'] = 1\nfig, axs = plt.subplots(2, 1, figsize=(24, 12))\nsns.heatmap(pivot_table, \n            cmap=\"YlGnBu\",\n            square=True, \n            linewidth=2.5, \n            cbar=False, \n            ax=axs[0]\n           )\n\naxs[0].set_yticklabels(axs[0].get_yticklabels(), fontfamily='garamond', rotation = 0, fontsize=21)\naxs[0].set_xticklabels(axs[0].get_xticklabels(), fontfamily='garamond', rotation=90, fontsize=21)\naxs[0].set_title('Overall', size=18)\nsns.heatmap(pivot_table_2019, \n            cmap=\"YlGnBu\",\n            square=True, \n            linewidth=2.5, \n            cbar=False, \n            ax=axs[1]\n           ) \n\naxs[1].set_yticklabels(axs[1].get_yticklabels(), fontfamily='garamond', rotation = 0, fontsize=21)\naxs[1].set_xticklabels(axs[1].get_xticklabels(), fontfamily='garamond', rotation=90, fontsize=21)\naxs[1].set_title('2019', size=18)\nfig.text(0.38, 1, 'Normalized Race Distribution by State', fontweight='bold', fontfamily='garamond', fontsize=25)  \n\nplt.tight_layout()\nplt.show()","c8c382f6":"# 4. Geographic View <a id=\"Geo\"><\/a> <br> ","75f3ce18":"# 3. First Glance <a id=\"Started\"><\/a> <br> ","c2cd1099":"# 7. References <a id=\"Ref\"><\/a> <br> ","c3ea0b28":"#### S\u00e3o Paulo concentrates the scholarships\nS\u00e3o Paulo is the biggest state by population so it makes sense it is also the one that has the biggest amount of students participating in this program.","2a49eb8b":"#### It is interesting to notice how certain features have changed:\n* TIPO_BOLSA: the kind of scholarships nowadays are only full or partial (50%) the partial (25%) no longer exists\n* NOME_TURNO_CURSO_BOLSA: there has been an increase of classes being taken 'from distance' (and this was before the pandemic)\n* SEXO_BENEFICIARIO: the proportion between man and woman has been increasing in woman's favor\n* RACA_BENEFICIARIO_BOLSA: people self-declared 'Pardo Brazilians' have increased and now are more frequent than self-decalred white","c111fa20":"### Most popular courses","d73b0464":"# 2. Libraries <a id=\"Libraries\"><\/a> <br> ","5cb5539f":"### Most popular universities\nRemember, only private universities.","fdd3d2f0":"### Age\/Gender Distribution","f9510c17":"#### Increase of scholarships until 2016\nThere has been an increase of scholarships over the years but coincidently after 2016 (when president Dilma Rousseff got impeached) the amount has been slowly decreasing.","b5d72a69":"[Subin An - Kaggle 2020 Visualization Analysis](https:\/\/www.kaggle.com\/subinium\/kaggle-2020-visualization-analysis)","0f35f8b4":"# 1. Introduction <a id=\"Introduction\"><\/a> <br> \n## Basic Info\nThe Prouni - Programa Universidade para Todos (University for All Program) is an initiative created by the Brazilian government in 2005 with the objective to support students with full or partial scholarships to study in private universities.\n\nTo be able to apply for this program the student has to fulfill the following:\n\n|  Scholarship | Family Income  |\n|---|---|\n|**Full Support**|  1.5 * minimum wage |\n| **Partial Support** |  3 * minimum wage |\n\n**Minimum wage in Brazil as of October 2021**:\n\n* *BRZ 1,100.00 ~ USD 204.87*\n\nBesides that the students must not have an university degree, must have participated in the latest Enem (national exam for federal university's application) and reach a minimum score in it.\n\n## <font color=\"purple\">Happy to share this! Please give me your feedback! If you like it <b>UPVOTE<\/b> the code =)<\/font>","74777c64":"### Top10 States: Gender Distribution","835b8788":"Let's check out how our features distributions look like!!","02d0b8d4":"# Table of Contents:\n\n**1. [Objective and Introduction](#Introduction)** <br>\n**2. [Libraries](#Libraries)** <br>\n**3. [Getting Started](#Started)** <br>\n**4. [Geo Analysis](#Geo)** <br>\n**5. [Gender Analysis](#Gender)** <br>\n**6. [Race Analysis](#Race)** <br>\n**7. [References](#Ref)** <br>\n\n<b>Let's start this Analysis.<\/b>","6f17dc86":"### Age Group & Race","f581b338":"### A closer look!\nHere I choose to take a closer look in how the scholarships are distributed in the two biggest states in terms of # Prouni students, AKA S\u00e3o Paulo and Minas Gerais.\n\nLet's dig in!!","dc5aee3e":"#### An important thing to notice here is that the states are ordered geographically, from south of Brasil to north as you can see in this wikipedia article:\n\n[Wikipedia Article - Regions of Brazil](https:\/\/en.wikipedia.org\/wiki\/Regions_of_Brazil)","f18ace36":"#### I have already precleaned the dataset but it is always good to take a look at the data to see how it is:","fd812bfe":"#### For this analysis I'll be comparing the overall data (2005-2019) with the latest year (2019)","585be8f9":"# 6. Race Analysis <a id=\"Race\"><\/a> <br> ","cc4f0856":"# 5. Gender Analysis <a id=\"Gender\"><\/a> <br> ","be7fffbc":"### Year By Year \/ State Distribution","0ed158b7":"#### Map Colors...\nIt is important to notice that the color of the maps are dependent on how many studens are there in each and every city of the state so the scales varies but this brings an interesting visual effect showing more dark or white spots as the extreme cases appear in each picture."}}