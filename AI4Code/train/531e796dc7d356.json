{"cell_type":{"8c8fde55":"code","e54f0961":"code","88bde2b8":"code","a3a609e2":"code","2cba96ad":"code","6131a414":"code","b0fbf867":"code","14a480c1":"code","96d25a29":"code","84e66664":"code","ca77c7b3":"code","2efb69b3":"code","b0a13778":"code","daaa4e01":"code","296c2212":"code","4bd09e92":"code","cfe278f4":"code","330d0098":"code","4ba77d00":"code","71aa45f4":"code","4469c710":"code","f445f417":"code","4c929cd1":"code","0a346ff7":"code","afa8ccf4":"code","1deee661":"code","1e37cb8c":"code","10ec2ada":"code","25f76cec":"code","4fa87eeb":"code","7a4fd343":"code","1f6a2d03":"code","5c423685":"code","e87ccdfb":"code","52897d0b":"code","65fe79db":"code","19205d14":"code","ad0cd7aa":"code","982d9821":"code","45460a49":"code","73c1951f":"markdown","1ae90277":"markdown","315e6c65":"markdown","1c8715e1":"markdown","df1846ec":"markdown","6b0a2870":"markdown","9244f151":"markdown","d1df8c11":"markdown","9805e466":"markdown","95204c13":"markdown","fd73c1ea":"markdown","ab532b10":"markdown","b375d0af":"markdown","880a1b29":"markdown","ca4c9f7c":"markdown","062d18a1":"markdown"},"source":{"8c8fde55":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n%matplotlib inline\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\n# close warning\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","e54f0961":"gps = pd.read_csv('..\/input\/googleplaystore.csv')","88bde2b8":"gps.info()# Display the content of data","a3a609e2":"# shape gives number of rows and columns in a tuple\ngps.shape","2cba96ad":"gps.columns","6131a414":"gps.columns = [each.replace(\" \",\"_\") if(len(each.split())>1) else each for each in gps.columns]\nprint(gps.columns)","b0fbf867":"gps.columns = [each.lower() for each in gps.columns]\nprint(gps.columns)","14a480c1":"gps.rename(columns={\"size\":\"Size\"}, inplace=True)","96d25a29":"gps.head(10)","84e66664":"gps.tail()","ca77c7b3":"gps.sample(5)","2efb69b3":"gps.dtypes","b0a13778":"gps[gps.duplicated(keep='first')]","daaa4e01":"gps.drop_duplicates(subset='app', inplace=True)","296c2212":"gps = gps[gps['installs'] != 'Free']","4bd09e92":"print('Number of apps in the dataset : ' , len(gps))","cfe278f4":"# - Installs : Remove + and ,\n\ngps['installs'] = gps['installs'].apply(lambda x: x.replace('+', '') if '+' in str(x) else x)\ngps['installs'] = gps['installs'].apply(lambda x: x.replace(',', '') if ',' in str(x) else x)\ngps['installs'] = gps['installs'].apply(lambda x: int(x))\ngps.head()","330d0098":"# - Size : Remove 'M', Replace 'k' and divide by 10^-3\n\ngps['Size'] = gps['Size'].apply(lambda x: str(x).replace('Varies with device', 'NaN') if 'Varies with device' in str(x) else x)\n\ngps['Size'] = gps['Size'].apply(lambda x: str(x).replace('M', '') if 'M' in str(x) else x)\ngps['Size'] = gps['Size'].apply(lambda x: str(x).replace(',', '') if 'M' in str(x) else x)\ngps['Size'] = gps['Size'].apply(lambda x: float(str(x).replace('k', '')) \/ 1000 if 'k' in str(x) else x)\n\n#gps.Size = gps.Size.astype(float)\n#OR\ngps['Size'] = gps['Size'].apply(lambda x: float(x))\ngps['installs'] = gps['installs'].apply(lambda x: float(x))\n\ngps['price'] = gps['price'].apply(lambda x: str(x).replace('$', '') if '$' in str(x) else str(x))\ngps['price'] = gps['price'].apply(lambda x: float(x))\n\ngps['reviews'] = gps['reviews'].apply(lambda x: int(x))\ngps.head()","4ba77d00":"gps.info()","71aa45f4":"#gps.rating.value_counts(dropna =False) Nan 1463\ngps.rating.fillna(0.0,inplace=True)","4469c710":"# Display positive and negative correlation between columns\ngps.corr()","f445f417":"#sorts all correlations with ascending sort.\ngps.corr().unstack().sort_values().drop_duplicates()","4c929cd1":"#correlation map\nplt.subplots(figsize=(10,10))\nsns.heatmap(gps.corr(), annot=True, linewidths=1,linecolor=\"green\", fmt=\".2f\")\nplt.show()\n#figsize - image size\n#data.corr() - Display positive and negative correlation between columns\n#annot=True -shows correlation rates\n#linewidths - determines the thickness of the lines in between\n#cmap - determines the color tones we will use\n#fmt - determines precision(Number of digits after 0)\n#if the correlation between the two columns is close to 1 or 1, the correlation between the two columns has a positive ratio.\n#if the correlation between the two columns is close to -1 or -1, the correlation between the two columns has a negative ratio.\n#If it is close to 0 or 0 there is no relationship between them.","0a346ff7":"gps.category.value_counts()","afa8ccf4":"#Installs for each Category\n\ncategory_list = list(gps.category.unique())\ncategory_installs_ratio = []\nfor i in category_list:\n    x = gps[gps.category == i]\n    category_installs_rate = sum(x.installs)\/len(x)\n    category_installs_ratio.append(category_installs_rate)\ndata = pd.DataFrame({'category_list':category_list,'category_installs_ratio':category_installs_ratio})\ndata.sort_values('category_installs_ratio',ascending=False,inplace=True)\n\n# visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=data.category_list, y=category_installs_ratio)\nplt.xticks(rotation=90)\nplt.xlabel('Category')\nplt.ylabel('Rating')\nplt.title('Rating Given Category')","1deee661":"# Most common 15 Category Name\n\n#Counter(gps.category)\ncategoryName = Counter(gps.category)\nmostCommonCatName = categoryName.most_common(20)\nx,y = zip(*mostCommonCatName)\nx,y = list(x),list(y)\n\n# visualization\nplt.figure(figsize=(15,20))\nsns.barplot(x=x ,y=y , palette = sns.cubehelix_palette(len(x)))\nplt.xticks(rotation=90)\nplt.xlabel('Category')\nplt.ylabel('Frequency')\nplt.title('Most common 15 Category Name')","1e37cb8c":"#Reviews for each Category\n\ncategory_list = list(gps.category.unique())\ncategory_reviews_ratio = []\nfor i in category_list:\n    x = gps[gps.category == i]\n    category_reviews_rate = sum(x.reviews)\/len(x)\n    category_reviews_ratio.append(category_reviews_rate)\ndata2 = pd.DataFrame({'category_list':category_list,'category_reviews_ratio':category_reviews_ratio})\ndata2.sort_values('category_reviews_ratio',ascending=True,inplace=True)\n\n# visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=data2.category_list, y=category_reviews_ratio)\nplt.xticks(rotation=90)\nplt.xlabel('Category')\nplt.ylabel('Reviews')\nplt.title('Reviews Given Category')","10ec2ada":"# category rating ratio vs category reviews ratio of each Category\ndata['category_installs_ratio'] = data['category_installs_ratio']\/max(data['category_installs_ratio'])\ndata2['category_reviews_ratio'] = data2['category_reviews_ratio']\/max(data2['category_reviews_ratio'])\ncnc_data = pd.concat([data,data2['category_reviews_ratio']],axis=1)\ncnc_data.sort_values('category_installs_ratio',inplace=True)\n\n# visualize\nf,ax1 = plt.subplots(figsize =(20,20))\nsns.pointplot(x='category_list',y='category_installs_ratio',data=cnc_data,color='lime',alpha=0.8)\nsns.pointplot(x='category_list',y='category_reviews_ratio',data=cnc_data,color='red',alpha=0.8)\nplt.text(40,0.6,'category installs ratio',color='lime',fontsize = 17,style = 'italic')\nplt.text(40,0.55,'category reviews ratio',color='red',fontsize = 18,style = 'italic')\nplt.xticks(rotation=90)\nplt.xlabel('Category',fontsize = 15,color='blue')\nplt.ylabel('Values',fontsize = 15,color='blue')\nplt.title('category installs ratio  VS  category reviews ratio',fontsize = 20,color='blue')\nplt.grid()","25f76cec":"# joint kernel density\n# pearsonr= if it is 1, there is positive correlation and if it is, -1 there is negative correlation.\n# If it is zero, there is no correlation between variables\n\nfrom scipy import stats\ng = sns.jointplot(cnc_data.category_installs_ratio,cnc_data.category_reviews_ratio,kind=\"kde\", height=5)\ng = g.annotate(stats.pearsonr)\nplt.savefig('graph.png')\nplt.show()","4fa87eeb":"#you can change parameters of joint plot\n# kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }\n# Different usage of parameters but same plot with previous one\ng = sns.jointplot('category_installs_ratio', 'category_reviews_ratio', data=cnc_data,height=7, ratio=3, color=\"r\")","7a4fd343":"gps.content_rating.value_counts()","1f6a2d03":"gps = gps[gps['content_rating'] != 'Adults only 18+']\ngps = gps[gps['content_rating'] != 'Unrated']","5c423685":"#content rates according in category data \n\nlabels = gps.content_rating.value_counts().index\ncolors = ['red','green','blue','pink']\nexplode = [0.2,0.2,0.2,0.2]\nsizes = gps.content_rating.value_counts().values\n\n# visualization\nplt.figure(figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Content Rating',color = 'blue',fontsize = 15)","e87ccdfb":"# Visualization of category_installs_ratio rate vs category_reviews_ratio of each state with different style of seaborn code\n# lmplot \n# Show the results of a linear regression within each dataset\nsns.lmplot(x='category_installs_ratio',y='category_reviews_ratio',data=cnc_data)\nplt.show()","52897d0b":"# Visualization of category_installs_ratio rate vs category_reviews_ratio of each state with different style of seaborn code\nsns.kdeplot(cnc_data.category_installs_ratio,cnc_data.category_reviews_ratio,shade=True,cut=3)\nplt.show()","65fe79db":"# Show each distribution with both violins and points\n# Use cubehelix to get a custom sequential palette\npal = sns.cubehelix_palette(2, rot=-.5, dark=.3)\nsns.violinplot(data=cnc_data, palette=pal, inner=\"points\")\nplt.show()","19205d14":"plt.figure(figsize=(10,10))\nsns.boxplot(x=\"type\", y=\"rating\", hue=\"content_rating\", data=gps, palette=\"PRGn\")\nplt.show()","ad0cd7aa":"plt.figure(figsize=(10,10))\nsns.swarmplot(x=\"type\", y=\"rating\", hue=\"content_rating\", data=gps.head(3000), palette=\"PRGn\")\nplt.show()","982d9821":"# pair plot\nsns.pairplot(cnc_data)\nplt.show()","45460a49":"#frequency of free and paid\n\nplt.figure(figsize=(10,7))\nsns.countplot(gps.type)\nplt.title(\"Free-Paid\",color = 'blue',fontsize=15)","73c1951f":"<a id=\"1\"><\/a> \n## Bar Plot","1ae90277":"<a id=\"9\"><\/a> \n## Box Plot","315e6c65":"<a id=\"2\"><\/a>\n## Point Plot","1c8715e1":"<a id=\"8\"><\/a> \n## Heatmap","df1846ec":"<a id=\"4\"><\/a> \n## Pie Chart","6b0a2870":"<a id=\"11\"><\/a> \n## Pair Plot","9244f151":"![](https:\/\/playstoreindir.files.wordpress.com\/2013\/06\/google-play-store.png?w=600)","d1df8c11":"<a id=\"12\"><\/a> \n## Count Plot","9805e466":"<a id=\"10\"><\/a> \n## Swarm Plot","95204c13":"<a id=\"5\"><\/a> \n## Lm Plot","fd73c1ea":"# CONCLUSION\n**If you have any question, I will be happy to hear it!**","ab532b10":"<a id=\"3\"><\/a> \n## Joint Plot","b375d0af":"<a id=\"6\"><\/a> \n## Kde Plot","880a1b29":"# Data Cleaning\n* Convert all app sizes to MB\n* Remove '+' from 'Number of Installs' to make it numeric\n* Convert all review text to English language using Google Translator library**","ca4c9f7c":"Plot Contents:\n* [Bar Plot](#1)\n* [Point Plot](#2)\n* [Joint Plot](#3)\n* [Pie Chart](#4)\n* [Lm Plot](#5)\n* [Kde Plot](#6)\n* [Violin Plot](#7)\n* [Heatmap](#8)\n* [Box Plot](#9)\n* [Swarm Plot](#10)\n* [Pair Plot](#11)\n* [Count Plot](#12)","062d18a1":"<a id=\"7\"><\/a> \n## Violin Plot"}}