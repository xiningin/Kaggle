{"cell_type":{"e92b6e5d":"code","6f42e35b":"code","63366c1b":"code","e0efd086":"code","c9db12ed":"code","1032497b":"code","df51d282":"code","1063a8de":"code","938ac2c5":"code","035cbeba":"code","f448892c":"code","9bb2c831":"code","d8639b9c":"code","52f3bf3a":"code","5c405c9d":"code","56965ba0":"code","ca6500ab":"code","2d197017":"code","1dfc3288":"code","49d73263":"code","9e4f3657":"code","80098676":"code","c40221a4":"code","9d78e6d7":"code","f91e694b":"code","a9c6b9bc":"code","cd6d45b5":"code","fe0ea9eb":"code","d78a7621":"code","1a753173":"code","ee62db81":"code","96e3eb6d":"code","a9b5bc22":"code","f2786f08":"code","03bf3ae7":"code","83ca5705":"code","940b9cee":"code","58bc1b13":"code","dfb23fbb":"code","434572d9":"code","1127eec9":"code","4eddf64a":"code","18fc220c":"code","66eceb5c":"code","e03cc2f9":"code","4020bdd1":"code","5a907770":"code","a2a9ad27":"code","cb62196b":"code","13c878fd":"code","916af6ba":"code","48ff327a":"code","d85a2f84":"code","7f2dd346":"code","ea57357a":"code","5cf4c8af":"code","bd4f3117":"code","7a1b9924":"code","a770834e":"code","3cdd5d52":"code","f203794e":"code","b7931dbe":"code","1c2f42eb":"code","4f841b4e":"code","6723f5c2":"code","830f92f5":"code","9ea6fac1":"code","361b2f9e":"code","722f010b":"code","e9f7596b":"code","948b5a8f":"code","fe6524b5":"code","ee6cbb88":"code","e6050e78":"code","86aad283":"code","32128869":"code","acaefc91":"code","187fa9c3":"code","bea924a7":"code","53cf12fc":"code","e53679e9":"code","e53c0c24":"code","308ded77":"code","d6d10c74":"code","864aef3c":"code","054929b8":"code","2e3036df":"code","cc6c6412":"code","372da2b6":"code","96264747":"code","d010c2d2":"code","91ea68f4":"code","d62a1719":"code","8b68c774":"markdown","36e05b8b":"markdown","6e777ed3":"markdown","68f4c25b":"markdown","4914e7e0":"markdown","7c006bfd":"markdown","51bcd9d8":"markdown","f60a8342":"markdown","ba463b96":"markdown","21e912cb":"markdown","05eecc29":"markdown","93a23873":"markdown","3d682744":"markdown","86e13bed":"markdown","59369615":"markdown","9e10a579":"markdown","16621041":"markdown","648dfb62":"markdown","1dcfc3ba":"markdown","3ed4c737":"markdown","912d91fc":"markdown","d0756a90":"markdown","9daaa65f":"markdown","11f00c69":"markdown"},"source":{"e92b6e5d":"import pandas as pd\nimport numpy as np \nimport seaborn as sns \nimport matplotlib.pyplot as plt\nfrom sklearn.neighbors import NearestNeighbors\nfrom sklearn.preprocessing import StandardScaler\nimport plotly.express as px\nfrom sklearn.cluster import KMeans\nfrom sklearn.cluster import AgglomerativeClustering\nfrom numpy import isnan\nfrom pandas import read_csv\nfrom sklearn.impute import KNNImputer\nfrom scipy.cluster.hierarchy import linkage,dendrogram,cut_tree\nfrom sklearn.decomposition import KernelPCA\nimport sys\nimport numpy\nnumpy.set_printoptions(threshold=sys.maxsize)\n\nplt.rcParams['figure.figsize']=[12,8]","6f42e35b":"df=pd.read_csv('..\/input\/bangalore-house-price\/Bengaluru_House_Data.csv')\ndf.head()","63366c1b":"df.tail()","e0efd086":"df.shape","c9db12ed":"df.info()","1032497b":"df.isnull().sum()","df51d282":"sns.heatmap(df.isnull())","1063a8de":"(df.isnull().sum()\/len(df))*100","938ac2c5":"#40% of the data is missing so droping the column\ndf.drop('society',axis=1,inplace=True)","035cbeba":"df.location.replace(to_replace=np.NaN,value=df.location.mode()[0],inplace=True)\ndf.area_type.replace(to_replace=np.NaN,value=df.area_type.mode()[0],inplace=True)","f448892c":"df['size']=df['size'].str.split(' ',expand=True)[0].astype(np.number)\ndf.bath=df.bath.astype(np.number)","9bb2c831":"df.availability=(df.availability=='Ready To Move')\ndf.availability.replace({True:1,False:0},inplace=True)\ndf.availability=df.availability.astype(object)\ndf.availability.head()","d8639b9c":"df.isnull().sum() ","52f3bf3a":"df_cat=df.select_dtypes(object)\ndf_cat.head(1)","5c405c9d":"df_num=df.select_dtypes(np.number)\ndf_num.head(1)","56965ba0":"imputer = KNNImputer()\n\n# fit on the dataset\nimputer.fit(df_num)\n\n# transform the dataset\ndf_num_impute = pd.DataFrame(imputer.transform(df_num),columns=df_num.columns)","ca6500ab":"df=pd.concat([df_cat,df_num_impute],axis=1)","2d197017":"sns.heatmap(df.isnull())","1dfc3288":"(df.isnull().sum()\/len(df))*100","49d73263":"df.boxplot()","9e4f3657":"q1 = df.quantile(0.25)\nq3 = df.quantile(0.75)\nIQR = q3-q1\nIQR\n\ndf = df[~((df) > (q3 + (1.5 * IQR))).any(axis=1)]\n\ndf.head()","80098676":"df.boxplot()","c40221a4":"df.shape","9d78e6d7":"sns.violinplot(y = df.price)","f91e694b":"plt.bar(x=df[df['availability'] == 1].groupby('location')['availability'].agg('count').sort_values(ascending=False).head(10).index,height=df[df['availability'] == 1].groupby('location')['availability'].agg('count').sort_values(ascending=False).head(10))\nplt.xticks(rotation=45)\nplt.ylabel('Availability of Rooms')","a9c6b9bc":"sns.countplot(df.area_type)\nplt.xticks(rotation = 45)\nplt.show()","cd6d45b5":"plt.figure(figsize=(8,5))\nsns.countplot(df.availability)\nplt.show()","fe0ea9eb":"plt.figure(figsize=(15,5))\nsns.scatterplot(x=\"total_sqft\", y=\"price\", data=df)\nplt.show()","d78a7621":"df10 = df.copy()\ndf10['size'] = np.round(df10['size'])\nplt.bar(x=df10.groupby('size')['price'].agg('mean').sort_values(ascending=False).head(10).index,height=df10.groupby('size')['price'].agg('mean').sort_values(ascending=False).head(10))\nplt.ylabel('Average Price in Lakhs')\nplt.xlabel('Number of Bedrooms')","1a753173":"# Costliest locations in Bangalore","ee62db81":"plt.plot(df.groupby(by='location')['price'].agg('mean').sort_values(ascending=False).head(10))\nplt.xlabel('Locations in Bangalore')\nplt.ylabel('Average Price in Lakhs')\nplt.xticks(rotation=45)","96e3eb6d":"# Costliest Per sq.ft price in bglore","a9b5bc22":"df['per_sqft'] = df['price']\/df['total_sqft']","f2786f08":"plt.plot(df.groupby(by='location')['per_sqft'].agg('mean').sort_values(ascending=False).head(10))\nplt.xticks(rotation = 45)\nplt.xlabel('Locations in Bangalore')\nplt.ylabel('Average Price \/ Sq.ft in Lakhs')","03bf3ae7":"df = df.drop('per_sqft',axis=1)","83ca5705":"plt.figure(figsize=(10,8))\nsns.heatmap(df.corr(),annot=True,cbar=False)\nplt.show()","940b9cee":"df.head()","58bc1b13":"data_cat=df.select_dtypes(exclude=np.number)\ndata_num=df.select_dtypes(np.number)\ndata_cat=data_cat.reset_index()","dfb23fbb":"ss=StandardScaler()\ndata_num_scaled=pd.DataFrame(ss.fit_transform(data_num),columns=data_num.columns)\ndata_num_scaled=data_num_scaled.reset_index()\ndata_num_scaled.head()","434572d9":"data_scaled=pd.concat([data_num_scaled,data_cat],axis=1).drop('index',axis=1)\ndata_scaled.head()","1127eec9":"# Reference Table For Displaying Reason for Selecting\ndata_encoded_refernce=pd.get_dummies(df,columns=['area_type','location'])\ndata_encoded_refernce.head()","4eddf64a":"data_encoded_scaled=pd.get_dummies(data_scaled,columns=['area_type','location'])\ndata_encoded_scaled.head()","18fc220c":"d1 = data_encoded_scaled.copy()","66eceb5c":"data_cluster=data_encoded_refernce.copy()","e03cc2f9":"cls=d1[['total_sqft','price']]\nmergings=linkage(cls,method='ward',metric='euclidean')\ndendrogram(mergings,truncate_mode='lastp')\nplt.show()","4020bdd1":"cluster=cut_tree(mergings,n_clusters=3)","5a907770":"cluster_cut = pd.Series(cut_tree(mergings,n_clusters=3).reshape(-1))","a2a9ad27":"cluster_cut.value_counts()","cb62196b":"d1['cluster']=cluster","13c878fd":"data_cluster['cluster']=cluster","916af6ba":"sns.scatterplot(y=df.price,x=df['total_sqft'],hue=data_cluster['cluster'],palette='deep')","48ff327a":"ssd = []\nfor k in range(1,10):\n    kmeans = KMeans(n_clusters=k,random_state=4)\n    kmeans.fit(cls)\n    ssd.append(kmeans.inertia_)","d85a2f84":"plt.plot(range(1,10),ssd,marker='*',color='b')","7f2dd346":"from sklearn.metrics import silhouette_score\n\nscore = []\nfor k in range(2,10):\n    kmeans = KMeans(n_clusters=k,random_state=4)\n    kmeans.fit(cls)\n    labels = kmeans.labels_\n    ss = silhouette_score(d1,labels)\n    score.append(ss)","ea57357a":"plt.plot(range(2,10),score,marker='*',color='r')\nplt.ylabel('Average silhouette score')\nplt.xlabel('no of clusters')","5cf4c8af":"def svisualizer(x, ncluster):\n    import matplotlib.pyplot as plt\n    from sklearn.cluster import KMeans\n    import numpy as np\n    from matplotlib import cm\n    from sklearn.metrics import silhouette_samples\n\n    km = KMeans(n_clusters=ncluster, init='k-means++', n_init=10, max_iter=300, tol=1e-04, random_state=0)\n    y_km = km.fit_predict(x)\n\n    cluster_labels = np.unique(y_km)\n    n_clusters = cluster_labels.shape[0]\n    silhouette_vals = silhouette_samples(x, y_km, metric='euclidean')\n    y_ax_lower, y_ax_upper = 0, 0\n\n    yticks = []\n    for i, c in enumerate(cluster_labels):\n        c_silhouette_vals = silhouette_vals[y_km==c]\n        c_silhouette_vals.sort()\n        y_ax_upper += len(c_silhouette_vals)\n        color = cm.jet(i \/ n_clusters)\n        plt.barh(range(y_ax_lower, y_ax_upper), c_silhouette_vals, height=1.0, edgecolor='none', color=color)\n\n        yticks.append((y_ax_lower + y_ax_upper) \/ 2)\n        y_ax_lower += len(c_silhouette_vals)\n\n    silhouette_avg = np.mean(silhouette_vals)\n    plt.axvline(silhouette_avg, color=\"red\", linestyle=\"--\") \n\n    plt.yticks(yticks, cluster_labels + 1)\n    plt.ylabel('Cluster')\n    plt.xlabel('Silhouette coefficient')\n\n    plt.tight_layout()\n    plt.show()\t","bd4f3117":"svisualizer(cls,2)","7a1b9924":"svisualizer(cls,3)","a770834e":"svisualizer(cls,4)","3cdd5d52":"model=KMeans(n_clusters=3,random_state=10)\ncluster_kmeans=model.fit_predict(data_encoded_refernce)\ndata_cluster['kmeans_cluster']=cluster_kmeans\ndata_cluster.head()","f203794e":"df3 = data_cluster.iloc[:,[0,1,2,3,4,5,1119]]","b7931dbe":"df4 = df3.groupby(by='kmeans_cluster')\ndf4[['size','bath','balcony','total_sqft','price']].mean()","1c2f42eb":"df4[['size','bath','balcony','total_sqft','price']].mean().plot.bar()\nplt.show()","4f841b4e":"def cluster_plot(data, nclusters):\n    from sklearn.cluster import KMeans\n    import matplotlib.pyplot as plt\n    X = data.copy()\n    cols = list(X.columns)\n    km = KMeans(n_clusters=nclusters, init='random', n_init=10, max_iter=300, tol=1e-04, random_state=0)\n    y_km = km.fit_predict(X)\n\n\n    # Visualize it:\n    plt.figure(figsize=(8, 6))\n    plt.scatter(X.iloc[:,0], X.iloc[:,1], c=km.labels_.astype(float))\n\n    # plot the centroids\n    plt.scatter(km.cluster_centers_[:, 0], km.cluster_centers_[:, 1], s=250, marker='*', c='red', label='centroids')\n    plt.xlabel(cols[0])\n    plt.ylabel(cols[1])\n    plt.legend(scatterpoints=1)\n    plt.grid()\n    plt.show()","6723f5c2":"cluster_plot(cls,3)","830f92f5":"from sklearn.cluster import DBSCAN","9ea6fac1":"dbscan = DBSCAN(eps=0.25,min_samples=4)\n\ndbscan.fit(cls)\n\npd.Series(dbscan.labels_).value_counts()","361b2f9e":"lbl = pd.Series(dbscan.labels_)\nlbl.loc[lbl >= 0] = 0\nlbl.value_counts()","722f010b":"plt.scatter(cls['total_sqft'],cls['price'],c=lbl)","e9f7596b":"from sklearn.decomposition import PCA","948b5a8f":"d2 = data_num_scaled.drop(['index'],axis=1)","fe6524b5":"d2.head()","ee6cbb88":"from sklearn.decomposition import PCA\n\npca=PCA()\npca.fit(d2)\n\nprint(np.cumsum(pca.explained_variance_ratio_*100))","e6050e78":"pca=PCA(n_components=2)\npca.fit_transform(d2)\n\nprint(pca.explained_variance_ratio_*100)\n","86aad283":"components = pca.components_.T\npd.DataFrame(components,index=d2.columns,columns=['PC1','PC2'])","32128869":"data_pca=pd.DataFrame(pca.transform(d2),columns=['PC1','PC2'])\ndata_pca","acaefc91":"model=KMeans(n_clusters=3,random_state=10)\ncluster_kmeans=model.fit_predict(data_pca)\ndata_pca['km_cluster_pca']=cluster_kmeans","187fa9c3":"#cluster_kmeans=model.fit_predict(data_pca).reshape(-1,1)","bea924a7":"ssd = []\nfor k in range(1,10):\n    kmeans = KMeans(n_clusters=k,random_state=4)\n    kmeans.fit(data_pca)\n    ssd.append(kmeans.inertia_)\n\nplt.plot(range(1,10),ssd,marker='*',color='b')\nplt.axhline(15000)\nplt.show()","53cf12fc":"sns.scatterplot(x=data_pca['PC1'],y=data_pca['PC2'],hue=data_pca['km_cluster_pca'])","e53679e9":"model=NearestNeighbors(metric='cosine')\nmodel.fit(data_encoded_scaled)","e53c0c24":"selected=7","308ded77":"data_encoded_scaled.iloc[selected].values[0:8]","d6d10c74":"dist,index=model.kneighbors(data_encoded_scaled.iloc[selected].values.reshape(1,-1),n_neighbors=6)\nindex","864aef3c":"suggest=[]\nfor x in index:\n    suggest.append(x)\nsuggest","054929b8":"data_encoded_refernce = data_encoded_refernce.reset_index()\ndata_encoded_refernce = data_encoded_refernce.drop('index',axis=1)","2e3036df":"# Apartment user showed intrest in\nr=data_encoded_refernce.iloc[[selected]][data_encoded_refernce.iloc[[selected]]>0].dropna(axis=1)\nr","cc6c6412":"# Availabilty - 1           --> Ready to move\n# Size        - 2           --> 2 BKH Apartment\n# Total SqFt  - 1000        --> 1000 Sqft Apartment\n# Price       - 38          --> Apartment price 38\n# bath        - 2           --> Apartment with 2 bathrooms\n# balcony     - 1           --> Apartment with 1 Balcony\n# location    - JP Nagar    --> Apartment Near JP Nagar","372da2b6":"# Similar Reccomendations\ncol=r.columns\nfor x in index:\n    suggestions=data_encoded_refernce.iloc[list(x)][col]\nsuggestions","96264747":"selected=125\n\ndata_encoded_scaled.iloc[selected].values[0:8]\n\ndist,index=model.kneighbors(data_encoded_scaled.iloc[selected].values.reshape(1,-1),n_neighbors=6)\nindex\nsuggest=[]\nfor x in index:\n    suggest.append(x)\nsuggest","d010c2d2":"# Apartment user showed intrest in\nr=data_encoded_refernce.iloc[[selected]][data_encoded_refernce.iloc[[selected]]>0].dropna(axis=1)\nr","91ea68f4":"# Size        - 2                           --> 2 BKH Apartment\n# Total SqFt  - 1020                        --> 1020 Sqft Apartment\n# Price       - 30.6                        --> Apartment price 30.6\n# bath        - 2                           --> Apartment with 2 bathrooms\n# balcony     - 1                           --> Apartment with 1 Balcony\n# location    - Electronic City Phase II    --> Apartment Near Electronic City Phase II","d62a1719":"# Similar Reccomendations\ncol=r.columns\nfor x in index:\n    suggestions=data_encoded_refernce.iloc[list(x)][col]\nsuggestions","8b68c774":"<a id=\"hier\"><\/a>\n# 5.Hierarchical Clustering","36e05b8b":"<a id=\"lib\"><\/a>\n## 1. Import Libraries","6e777ed3":"<a id=\"DBScan\"><\/a>\n### 7.DBSCAN","68f4c25b":"## Encoding","4914e7e0":"## Numerical Variables","7c006bfd":"<a id=\"app\"><\/a>\n## Application:","51bcd9d8":"## Content Based Filter","f60a8342":"<a id=\"RS\"><\/a>\n# 9.Recommendation Systems","ba463b96":"<a id=\"read\"><\/a>\n## 3.1 Read Data","21e912cb":"<a id=\"outliers\"><\/a>\n## 3.3 Removing Outliers","05eecc29":"<a id=\"PCA\"><\/a>\n## 8.Principal Component Analysis(PCA)","93a23873":"<a id=\"kmeans\"><\/a>\n# 6.KMEANS Clustering","3d682744":"## Example 1","86e13bed":"# House Price Clustering and Content Based Recommendation System","59369615":"## Standardisation","9e10a579":"## Example 2","16621041":"<a id=\"eda\"><\/a>\n## 4.EDA","648dfb62":"\n## 3.2 Analysing Missing Values","1dcfc3ba":"<a id=\"about\"><\/a>\n## 2. About the Dataset\n##### AREA_TYPE : The type of the area where the property is located\n##### AVAILABILITY : Whether the property is available currently or not\n##### LOCATION : Location where the property is situtated\n##### SIZE : Number of Bedrooms\n##### SOCIETY : The type of society where the property is located\n##### TOTAL_SQFT : Total Square feet of the property\n##### BATH : Number of Bathrooms\n##### BALCONY : Number of Balconies\n##### PRICE : Price of the property in Lakhs","3ed4c737":"Suggesting product with similar features is an important feature that can be accomedated in any website that does any kind sales to provide customers with a variety of options that intrigue the customer as well hopefully landing a customer by showcasing the variety of options available with the seller.  ","912d91fc":"<a id=\"prep\"><\/a>\n## 3. Data Preperation","d0756a90":"## Table of Content\n\n1. **[Header Files](#lib)**\n2. **[About Data Set](#about)**\n3. **[Data Preparation](#prep)**\n    - 3.1 - **[Read Data](#read)**\n    - 3.2 - **[Analysing Missing Values](#miss)**\n    - 3.3 - **[Removing Outliers](#outliers)**\n4. **[Explarotary Data Analysis](#eda)**\n5. **[Hierarchial Clustering](#hier)**\n6. **[K Means Clustering](#kmeans)**\n7. **[Density Based Clustering](#DBScan)**\n8. **[Principal Component Analysis](#PCA)**\n9. **[Reccomendation System](#RS)**\n10. **[Application](#app)**\n\n","9daaa65f":"## Categorical Variables","11f00c69":"The Reccomendations given to the user are of apartments in the same location has similar number of bedrooms,balconies and bathrooms\nand available at a similar Price Tag."}}