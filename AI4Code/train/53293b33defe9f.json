{"cell_type":{"feae560f":"code","5f8b79d0":"code","9a32d60f":"code","764ce951":"code","d2e64c2c":"code","f3051695":"code","79e5a50f":"code","74d829eb":"code","c17dcf12":"code","af7bb43a":"code","2de6bddc":"code","ef49783f":"code","a6e1abe4":"code","c098d9b9":"code","5dffcb8d":"code","8799de27":"code","3b13f522":"code","25758a3e":"code","2fa347ff":"code","8778c2e0":"code","2c0f6664":"code","1a80b0a5":"code","b3696ff5":"code","718cca42":"code","e49b4fb9":"code","6450d926":"markdown","5f57222f":"markdown","06f1bfb1":"markdown"},"source":{"feae560f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","5f8b79d0":"df = pd.read_csv(\"..\/input\/fifa-18-demo-player-dataset\/CompleteDataset.csv\", index_col = 0)","9a32d60f":"df.head()","764ce951":"import copy, re\nimport numpy as np\n\nfootballers = df.copy()\nfootballers['Unit'] = footballers['Value'].str[-1]\nfootballers['Value (M)'] = np.where(footballers['Unit'] == '0', 0 , footballers['Value'].str[1:-1].replace(r'[a-zA-Z]', ''))\nfootballers['Value (M)'] = footballers['Value (M)'].astype(float)\nfootballers['Value (M)'] = np.where(footballers['Unit'] == 'M', footballers['Value (M)'], footballers['Value (M)']\/1000)\n\nfootballers = footballers.assign(Value =footballers['Value (M)'], Position = footballers['Preferred Positions'].str.split().str[0] )\n","d2e64c2c":"footballers.head()","f3051695":"import seaborn as sns","79e5a50f":"## FacetGrid\ndf = footballers[footballers['Position'].isin(['ST', 'GK'])]\ng = sns.FacetGrid(df, col=\"Position\")","74d829eb":"df = footballers[footballers['Position'].isin(['ST', 'GK'])]\ng = sns.FacetGrid(df, col=\"Position\")\ng.map(sns.kdeplot, \"Overall\")","c17dcf12":"g = sns.FacetGrid(footballers, col=\"Position\", col_wrap=6 )\ng.map(sns.kdeplot, \"Overall\")","af7bb43a":"df = footballers[footballers['Position'].isin(['ST', 'GK'])]\ndf = df[df['Club'].isin(['Real Madrid CF', 'FC Barcelona', 'Atl\u00e9tico Madrid'])]\ng = sns.FacetGrid(df, row='Position', col='Club')\ng.map(sns.violinplot, \"Overall\")","2de6bddc":"## specify the order\ndf = footballers[footballers['Position'].isin(['ST', 'GK'])]\ndf = df[df['Club'].isin(['Real Madrid CF', 'FC Barcelona', 'Atl\u00e9tico Madrid'])]\ng = sns.FacetGrid(df, row='Position', col='Club', row_order=['GK', 'ST'], col_order=['Atl\u00e9tico Madrid', 'FC Barcelona', 'Real Madrid CF'])\ng.map(sns.violinplot, \"Overall\")\n","ef49783f":"sns.pairplot(footballers[['Overall', 'Potential', 'Value']])","a6e1abe4":"##Multivariate scatter plots\nsns.lmplot(x=\"Value\", y='Overall', hue='Position', data=footballers.loc[footballers['Position'].isin(['ST', 'RW', 'LW'])], fit_reg=False)\n","c098d9b9":"sns.lmplot(x='Value', y='Overall', hue='Position', markers=['o', 'x', '*'], \n           data=footballers.loc[footballers['Position'].isin(['ST', 'RW', 'LW'])],fit_reg=False)","5dffcb8d":"f = (footballers\n         .loc[footballers['Position'].isin(['ST', 'GK'])]\n         .loc[:, ['Value', 'Overall', 'Aggression', 'Position']]\n    )\nf = f[f[\"Overall\"] >= 80]\nf = f[f[\"Overall\"] < 85]\nf['Aggression'] = f['Aggression'].astype(float)\n\nsns.boxplot(x=\"Overall\", y='Aggression', hue='Position', data=f)","8799de27":"#heatmap\nf = (\n    footballers.loc[:, ['Acceleration', 'Aggression', 'Agility', 'Balance', 'Ball control']]\n        .applymap(lambda v: int(v) if str.isdecimal(v) else np.nan)\n        .dropna()\n).corr()\n\nsns.heatmap(f, annot=True)","3b13f522":"##Parallel Coordinates\nfrom pandas.plotting import parallel_coordinates\nf = (\n    footballers.iloc[:, 12:17]\n        .loc[footballers['Position'].isin(['ST', 'GK'])]\n        .applymap(lambda v: int(v) if str.isdecimal(v) else np.nan)\n        .dropna()\n)\nf['Position'] = footballers['Position']\nf = f.sample(200)\n\nparallel_coordinates(f, 'Position')","25758a3e":"## Pokemon dataset\ndf = pd.read_csv(\"..\/input\/pokemon\/Pokemon.csv\", index_col=0)\ndf.head()\n","2fa347ff":"#FacetGrid on Legendary column values\ng = sns.FacetGrid(df, col='Legendary')\ng.map(sns.kdeplot, 'Attack')\n","8778c2e0":"g = sns.FacetGrid(df, row='Generation', col='Legendary')\ng.map(sns.kdeplot, 'Attack')","2c0f6664":"#pair plot\nsns.pairplot(df[['HP', 'Attack', 'Defense']])","1a80b0a5":"sns.lmplot(x=\"Attack\", y=\"Defense\", hue=\"Legendary\", markers=['x', 'o'], data=df, fit_reg=False)","b3696ff5":"sns.boxplot(x='Generation', y='Total', hue='Legendary', data=df)","718cca42":"sns.heatmap(df[['HP', 'Attack', 'Sp. Atk', 'Defense', 'Sp. Def', 'Speed' ]].corr(), annot=True)","e49b4fb9":"df = df[['Attack', 'Sp. Atk', 'Defense', 'Sp. Def', 'Type 1']]\ndf = df[df['Type 1'].isin([\"Psychic\", \"Fighting\"])]\nparallel_coordinates(df, 'Type 1')","6450d926":"> ### Adding more visual variables","5f57222f":"### Summarization techniques","06f1bfb1":"> ### Grouped Box plot\n\ndo Strikers score higher on \"Aggression\" than Goalkeepers do?"}}