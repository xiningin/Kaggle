{"cell_type":{"21fa0583":"code","a989ed78":"code","3a346a05":"code","6a8940d3":"code","c996d6d0":"code","e769968f":"code","fef7f307":"code","224e096d":"code","24922bc5":"code","de1a8472":"code","7ea0d43f":"code","d6281dad":"code","d4cde176":"code","26a34cc1":"code","8391d9c6":"code","9b6c70fa":"code","d9ef2566":"code","b271c541":"code","1c55d499":"code","d0358b5f":"code","bb2c3954":"code","474ad239":"code","22b59d72":"code","c52dd980":"code","b979cc2e":"code","c86cce68":"code","3a1ce40a":"code","c9cd3a05":"code","1d1bcae0":"code","3cd3303b":"code","9d3da736":"code","a0d18f6c":"code","2a0b52fd":"code","4107a082":"code","4be7f7ec":"code","4ded258f":"code","9d317cec":"code","1c04ea9f":"code","ee10407b":"code","bc08fc7c":"code","b2f2e162":"code","8843b440":"code","6ad06783":"code","21e1890a":"code","8211f79c":"code","fc6d3384":"code","b3ee5b62":"code","f18ee8ed":"code","19c82f14":"code","e791b07b":"code","57c75975":"code","9b31e52c":"code","ff5c9bc8":"code","2a91f866":"markdown","0455e540":"markdown","3007bd36":"markdown","49cdd2dc":"markdown","bea2a4c4":"markdown","510f6548":"markdown","e11e0f67":"markdown","459b2d31":"markdown","8bfdb981":"markdown","4297836f":"markdown","223b007e":"markdown","42df84fb":"markdown","6daa6fcb":"markdown","8f5e9216":"markdown","babbb3e0":"markdown","7659aa6f":"markdown","6a5a080b":"markdown","ee126fc3":"markdown","694118ba":"markdown","ca773d5f":"markdown","0c9500ae":"markdown","e635ce5a":"markdown","2d1cc751":"markdown","912dbe35":"markdown","9e333c4d":"markdown","bb63eac6":"markdown","213978a1":"markdown","2d8fabfb":"markdown","60515a53":"markdown","af7097b0":"markdown","2fdc302d":"markdown","866826ff":"markdown","e8c306cd":"markdown","416dd402":"markdown","ed092851":"markdown","09b06085":"markdown","5df287db":"markdown","3470b584":"markdown","fb0eb62e":"markdown","b71e6c0e":"markdown","c55aba32":"markdown","487efae2":"markdown","cf8df508":"markdown","fe532eb5":"markdown","068486df":"markdown","ebbf4928":"markdown"},"source":{"21fa0583":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a989ed78":"#supress warning\nimport warnings\nwarnings.filterwarnings('ignore')","3a346a05":"#import libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","6a8940d3":"#import data\ncountry_data = pd.read_csv('\/kaggle\/input\/country-socioeconomic-data\/Country-data.csv')\ncountry_data.head()","c996d6d0":"#Above dataset countrydata export,health,imoprt are in percentage. Findout the actual value.\n\ncountry_data['exports'] = country_data['exports']*country_data['gdpp']\/100\ncountry_data['health'] = country_data['health']*country_data['gdpp']\/100\ncountry_data['imports'] =country_data['imports']*country_data['gdpp']\/100\n\ncountry_data['exports'].apply(lambda x:round(x,2))\ncountry_data['health'].apply(lambda x:round(x,2))\ncountry_data['imports'].apply(lambda x:round(x,2))\n\ncountry_data.head()","e769968f":"country_data.info()","fef7f307":"country_data.shape","224e096d":"country_data.describe()","24922bc5":"#check whether any null value present or not.\n\ncountry_data.isnull().sum()","de1a8472":"#column\n\ncountry_data.columns","7ea0d43f":"#numeric analysis\n\nfeature = ['child_mort', 'exports', 'health', 'imports', 'income','inflation', 'life_expec', 'total_fer', 'gdpp']\nlist(enumerate(feature))","d6281dad":"plt.figure(figsize=(15,10))\nfeature = country_data.columns[1:10]\nfor i in enumerate(feature):\n    plt.subplot(3,3,i[0]+1)\n    sns.distplot(country_data[i[1]])","d4cde176":"plt.figure(figsize=(15,8))\n\nplt.subplot(1,2,1)\ntop10_child_mort = country_data[['country','child_mort']].sort_values('child_mort',ascending=False).head(10)\nsns.barplot(x='country',y='child_mort',data=top10_child_mort)\nplt.xticks(rotation=90)\nplt.title('Highest child Mortality counries')\n\nplt.subplot(1,2,2)\nbottom10_child_mort = country_data[['country','child_mort']].sort_values('child_mort',ascending=True).head(10)\nsns.barplot(x='country',y='child_mort',data=bottom10_child_mort)\nplt.xticks(rotation=90)\nplt.title('Lowest child Mortality counries')\n\nplt.show()","26a34cc1":"plt.figure(figsize=(15,8))\n\nplt.subplot(1,2,1)\nTop10_health = country_data[['country','health']].sort_values('health', ascending=False).head(10)\nsns.barplot(x='country',y='health',data=Top10_health,palette='husl')\nplt.xticks(rotation=90)\n\nplt.subplot(1,2,2)\nBottom10_health = country_data[['country','health']].sort_values('health', ascending=True).head(10)\nsns.barplot(x='country',y='health',data=Bottom10_health,palette='husl')\nplt.xticks(rotation=90)\n\nplt.show()\n","8391d9c6":"plt.figure(figsize=(15,8))\n\nplt.subplot(1,2,1)\nTop10_income = country_data[['country','income']].sort_values('income', ascending=False).head(10)\nsns.barplot(x='country',y='income',data=Top10_income,palette='YlOrBr')\nplt.xticks(rotation=90)\nplt.title('High Income Country')\n\nplt.subplot(1,2,2)\nBottom10_income = country_data[['country','income']].sort_values('income', ascending=True).head(10)\nsns.barplot(x='country',y='income',data=Bottom10_income,palette='gist_heat')\nplt.xticks(rotation=90)\nplt.title('Low Income Country')\n\nplt.show()","9b6c70fa":"plt.figure(figsize=(15,8))\n\nplt.subplot(1,2,1)\nTop10_inflation = country_data[['country','inflation']].sort_values('inflation', ascending=False).head(10)\nsns.barplot(x='country',y='inflation',data=Top10_inflation)\nplt.xticks(rotation=90)\nplt.title('High Inflation Country')\n\nplt.subplot(1,2,2)\nBottom10_inflation = country_data[['country','inflation']].sort_values('inflation', ascending=True).head(10)\nsns.barplot(x='country',y='inflation',data=Bottom10_inflation)\nplt.xticks(rotation=90)\nplt.title('Low Inflation Country')\n\nplt.show()","d9ef2566":"plt.figure(figsize=(15,8))\n\nplt.subplot(1,2,1)\nTop10_import = country_data[['country','imports']].sort_values('imports', ascending=False).head(10)\nsns.barplot(x='country',y='imports',data=Top10_import,palette='mako')\nplt.xticks(rotation=90)\nplt.title('High Import Country')\n\nplt.subplot(1,2,2)\nTop10_export = country_data[['country','exports']].sort_values('exports', ascending=False).head(10)\nsns.barplot(x='country',y='exports',data=Top10_export,palette='mako')\nplt.xticks(rotation=90)\nplt.title('High Export Country')\n\nplt.show()","b271c541":"plt.figure(figsize=(15,5))\n\nplt.subplot(1,2,1)\nTop10_gdpp = country_data[['country','gdpp']].sort_values('gdpp', ascending=False).head(10)\nsns.barplot(x='country',y='gdpp',data=Top10_gdpp,palette='YlOrBr')\nplt.xticks(rotation=90)\nplt.title('High GDPP Country')\n\nplt.subplot(1,2,2)\nplt.boxplot('gdpp',data=country_data)\n\nplt.show()","1c55d499":"plt.figure(figsize=(10,10))\nsns.heatmap(country_data.corr(),annot=True)\nplt.title('Correlation between all features')\nplt.show()","d0358b5f":"#check outliers for each column through box plot\n\nplt.figure(figsize=(15,15))\n\nfeatures = country_data.columns[1:10]\nfor i in enumerate(features):\n    plt.subplot(3,3,i[0]+1)\n    sns.boxplot(country_data[i[1]])","bb2c3954":"#for child mortality we will cap lower end as we required the upper end actual data.\n#for child_mort\nq1 = country_data['child_mort'].quantile(0.05)\ncountry_data['child_mort'][country_data['child_mort']<=q1] = q1\n\n#for export\nq4 = country_data['exports'].quantile(0.95)\ncountry_data['exports'][country_data['exports']>=q4] = q4\n\n#for health\nq4 = country_data['health'].quantile(0.95)\ncountry_data['health'][country_data['health']>=q4] = q4\n\n#for import\nq4 = country_data['imports'].quantile(0.95)\ncountry_data['imports'][country_data['imports']>=q4] = q4\n\n#for income\nq4 = country_data['income'].quantile(0.95)\ncountry_data['income'][country_data['income']>=q4] = q4\n\n#for inflation\nq4 = country_data['inflation'].quantile(0.95)\ncountry_data['inflation'][country_data['inflation']>=q4] =q4\n\n#for life expec\nq1 = country_data['life_expec'].quantile(0.05)\ncountry_data['life_expec'][country_data['life_expec']<=q1] = q1\n\n#for total_fer\nq4 = country_data['total_fer'].quantile(0.95)\ncountry_data['total_fer'][country_data['total_fer']>=q4] = q4\n\n#for gdpp\nq4 = country_data['gdpp'].quantile(0.95)\ncountry_data['gdpp'][country_data['gdpp']>=q4] = q4\n","474ad239":"#check whtehr outlier treatment has been done or not\n\ncountry_data.describe()","22b59d72":"#1st findout hopkins score for better result\n\nfrom sklearn.neighbors import NearestNeighbors\nfrom random import sample\nfrom numpy.random import uniform\nimport numpy as np\nfrom math import isnan\n \ndef hopkins(X):\n    d = X.shape[1]\n    #d = len(vars) # columns\n    n = len(X) # rows\n    m = int(0.1 * n) \n    nbrs = NearestNeighbors(n_neighbors=1).fit(X.values)\n \n    rand_X = sample(range(0, n, 1), m)\n \n    ujd = []\n    wjd = []\n    for j in range(0, m):\n        u_dist, _ = nbrs.kneighbors(uniform(np.amin(X,axis=0),np.amax(X,axis=0),d).reshape(1, -1), 2, return_distance=True)\n        ujd.append(u_dist[0][1])\n        w_dist, _ = nbrs.kneighbors(X.iloc[rand_X[j]].values.reshape(1, -1), 2, return_distance=True)\n        wjd.append(w_dist[0][1])\n \n    H = sum(ujd) \/ (sum(ujd) + sum(wjd))\n    if isnan(H):\n        print(ujd, wjd)\n        H = 0\n \n    return H","c52dd980":"#findout hopkins score\n\nhopkins(country_data.drop('country',axis=1))","b979cc2e":"#for scaling drop country column\n\ncountry_data1 = country_data.drop('country',axis=1)\ncountry_data1.head()","c86cce68":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\ncountry_data1 = scaler.fit_transform(country_data1)","3a1ce40a":"#convert series data to dataframe\n\ncountry_data1 = pd.DataFrame(country_data1)\ncountry_data1.columns = country_data.columns[1:10]\ncountry_data1.head()","c9cd3a05":"#silhoutte score\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\nss = []\nfor k in range(2,11):\n    kmeans = KMeans(n_clusters=k).fit(country_data1)\n    ss.append([k,silhouette_score(country_data1,kmeans.labels_)])\ntemp = pd.DataFrame(ss)\nplt.plot(temp[0],temp[1])","1d1bcae0":"#elbow curve\n\nssd = []\nfor k in range(2,11):\n    kmean = KMeans(n_clusters=k).fit(country_data1)\n    ssd.append([k,kmean.inertia_])\ntemp = pd.DataFrame(ssd)\nplt.plot(temp[0],temp[1])","3cd3303b":"range_n_cluster = [2,3,4,5,6,7,8]\n\nfor num_clusters in range_n_cluster:\n    \n    #initialise kmeans\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)\n    kmeans.fit(country_data1)\n    \n    cluster_labels = kmeans.labels_\n    \n    #silhouette score\n    silhouette_avg = silhouette_score(country_data1,cluster_labels)\n    print(\"For n_clusters={0}, the silhouette score is {1}\".format(num_clusters,silhouette_avg))","9d3da736":"#k=3\nkmean = KMeans(n_clusters = 3,random_state=101)\nkmean.fit(country_data1)","a0d18f6c":"label = pd.DataFrame(kmean.labels_, columns = ['labels'])\ncountry_data.kmean = country_data.copy()\ncountry_data.kmean = pd.concat([country_data.kmean,label],axis=1)\ncountry_data.kmean.head()","2a0b52fd":"#how many data points we have each cluster?\ncountry_data.kmean.labels.value_counts()","4107a082":"#plot\n\nplt.figure(figsize=(15,15))\n\nplt.subplot(2,2,1)\nsns.scatterplot(x='child_mort', y='income', hue='labels', data=country_data.kmean, palette='Set1')\nplt.title('Child_mort vs Income')\n\nplt.subplot(2,2,2)\nsns.scatterplot(x='child_mort', y='gdpp', hue='labels', data=country_data.kmean, palette='Set1')\nplt.title('Child_mort vs GDPP')\n\nplt.subplot(2,2,3)\nsns.scatterplot(x='income', y='gdpp', hue='labels', data=country_data.kmean, palette='Set1')\nplt.title('Income vs GDPP')\n\nplt.show()","4be7f7ec":"country_data.kmean.columns","4ded258f":"#cluster profiling\n\ncountry_data.kmean.drop(['country', 'exports', 'health', 'imports','inflation', 'life_expec', 'total_fer'],axis=1).groupby('labels').mean()","9d317cec":"#plot by barplot\n\nplt.figure(figsize=(15,10))\n\ncountry_data.kmean.drop(['country','exports','health','imports','inflation','life_expec','total_fer'],axis=1).groupby('labels').mean().plot(kind='bar')\nplt.show()","1c04ea9f":"#plot boxplot\n\nplt.figure(figsize=(15,10))\n\nplt.subplot(2,2,1)\nsns.boxplot(x='labels',y='child_mort',data=country_data.kmean)\n\nplt.subplot(2,2,2)\nsns.boxplot(x='labels',y='income',data=country_data.kmean)\n\nplt.subplot(2,2,3)\nsns.boxplot(x='labels',y='gdpp',data=country_data.kmean)\n\nplt.show()","ee10407b":"#filter the country name\n\ncountry_data.kmean[country_data.kmean['labels']==2]['country']","bc08fc7c":"country_data.kmean[country_data.kmean['labels']==2].sort_values(by=['child_mort','income','gdpp'],ascending=[False,True,True]).head(5)","b2f2e162":"#import libraries\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom scipy.cluster.hierarchy import cut_tree","8843b440":"country_data1.head()","6ad06783":"country_data.hirar = country_data.copy()\ncountry_data.hirar.head()","21e1890a":"merging = linkage(country_data1,method='single',metric='euclidean')\ndendrogram(merging)\nplt.show()","8211f79c":"merging = linkage(country_data1,method='complete',metric='euclidean')\ndendrogram(merging)\nplt.show()","fc6d3384":"#cuttree=4\n\ncluster_labels = cut_tree(merging, n_clusters=4).reshape(-1,)\ncluster_labels","b3ee5b62":"#assign cluster labels\n\ncountry_data.hirar['Cluster_label'] = cluster_labels\ncountry_data.hirar.head()","f18ee8ed":"country_data.hirar.Cluster_label.value_counts()","19c82f14":"#cluster profiling\ncountry_data.hirar.drop(['country','exports','health','imports','inflation','life_expec','total_fer'],axis=1).groupby('Cluster_label').mean()\n","e791b07b":"#Bar plot\n\nplt.figure(figsize=(20,15))\ncountry_data.hirar.drop(['country','exports','health','imports','inflation','life_expec','total_fer'],axis=1).groupby('Cluster_label').mean().plot(kind='bar')\nplt.show()","57c75975":"#box plot\nplt.figure(figsize=(30,20))\n\nplt.subplot(2,2,1)\nsns.boxplot(x='Cluster_label',y='child_mort',data=country_data.hirar)\n\nplt.subplot(2,2,2)\nsns.boxplot(x='Cluster_label', y='income',data=country_data.hirar)\n\nplt.subplot(2,2,3)\nsns.boxplot(x='Cluster_label',y='gdpp',data=country_data.hirar)\n\nplt.show()","9b31e52c":"#filter country name.\n\ncountry_data.hirar[country_data.hirar['Cluster_label']==0]['country']","ff5c9bc8":"#top-5 countries having high child_mort, low income & gdpp\n\ncountry_data.hirar[country_data.hirar['Cluster_label']==0].sort_values(by=['child_mort','income','gdpp'],ascending=[False,True,True]).head(5)","2a91f866":"## **Data Inspection**","0455e540":"Observation:\n* In health care best country is United states, continue to that Switzerland, Norway, Luxembourge, Denmark countries having good health care system.\n* Eritrea is having poor health care system.","3007bd36":"### **Health-Care Rate**","49cdd2dc":"Observation:\n* From above plots we conclude that in cluster-2, there is high child_mort, low income and low gdpp.","bea2a4c4":"Observation:\n* Top 5 countries for child_mort: Halti, Sierra Leone, Chad, Central African Republic, Mali.\n* Bottom 5 countries in child mortality : Iceland, Luxembourg, Singapore, Finland, Sweden.\n* In Malti the child mortality rate is 208, which is highest.\n* In Iceland child mortality rate is 2.6, which is lowest rate.","510f6548":"### **Net Income Rate**","e11e0f67":"We will do softrange capping i.e. 1:99 as per the requirements.","459b2d31":"**Hopkins Score**","8bfdb981":"**Observation**","4297836f":"## **Top-5 countries(from Hierarchical analysis)**","223b007e":"Observation:\n* We can check here import & export are having highly corelated.\n* Income is also good correlation between import & export.\n* Health & gdpp rate correlation value is 0.92, which is very good","42df84fb":"Observation:\n* From above plot we observe, all features are having outliers either from upper end or lower end.\n* All features are having some fluctuations and cluster happening.","6daa6fcb":"# **Problem Statement**","8f5e9216":"### **1. Single Linkage**","babbb3e0":"Observation:\n* Top-5 highest income countries are: Qatar,Luxembourg,Brunei,Kuwait,Singaore\n* Qatar is the highest income country.\n* Low income countries are as follows: Congo dem rep,Liberia, Burundi, Niger..","7659aa6f":"**Scaling**","6a5a080b":"### **Inflation Rate**","ee126fc3":"## **Clustering**\n### We will check two types of clustering\n### 1. K-means Clustering\n### 2. Hierarchical Clustering","694118ba":"### **2. Hierarchical clustering**","ca773d5f":"### **GDPP**","0c9500ae":"Observation:\n* Highest inflation rate country is Nigeria i.e.104\n* Lowest inflation rate country is Seychelles i.e. -4.2","e635ce5a":"![image.png](attachment:image.png)","2d1cc751":"### **2. Complete Linkage**","912dbe35":"**Top-5 countries from k-means clustering**","9e333c4d":"## **Outlier Analysis**","bb63eac6":"## **Data Cleaning**","213978a1":"### **Import and Export**","2d8fabfb":"## **Profiling**","60515a53":"Observation:\n1. There are huge outliers in every column expect life_expec.\n2. Hence it is required for outlier treatment.","af7097b0":"Observation:\n* Luxembourge country is highest among all other country for import & export.\n","2fdc302d":"### **Heatmap**","866826ff":"Hence we concluded that:\n* In both k-means & hierarchical clustering we have top-5 countries i.e. Halti, Sierra Leone, Chad, Central Africa Republic, Mali, where child moratality is highest and income & gdpp rate is lowest.\n* Hence these countries are in direst need of aid.","e8c306cd":"* We can observe cluster_label 0 having high child mortality value and low income & gdpp rate.\n* Thus,we can filter cluster_label 0.","416dd402":"HELP International is an international humanitarian NGO that is committed to fighting poverty and providing the people of backward countries with basic amenities and relief during the time of disasters and natural calamities. It runs a lot of operational projects from time to time along with advocacy drives to raise awareness as well as for funding purposes.\n\n \n\nAfter the recent funding programmes, they have been able to raise around $ 10 million. Now the CEO of the NGO needs to decide how to use this money strategically and effectively. The significant issues that come while making this decision are mostly related to choosing the countries that are in the direst need of aid. \n\n \n\nAnd this is where you come in as a data analyst. Your job is to categorise the countries using some socio-economic and health factors that determine the overall development of the country. Then you need to suggest the countries which the CEO needs to focus on the most.","ed092851":"**Scatter plot**","09b06085":"**K-value**","5df287db":"**Profiling**","3470b584":"## **Conclusion**","fb0eb62e":"### **Child Mortality Rate**","b71e6c0e":"### **1. K-Means Clustering**","c55aba32":"Silhouette Score","487efae2":"## **Data Visualization**","cf8df508":"Observation:\n* Highest GDPP country is Luxembourge.\n* It has highest gdpp rate of 105000.\n* Other countrie comes after Luxembourge are Norway, Switzerland, Qatar, Denmark, Sweden..","fe532eb5":"Observation:\n* There is no null value in our data set. Hence we can proceed.","068486df":"Observation:\n\n1. There are outliers in every columns.\n2. We can identify outliers in child_mort, export, health, imports, inflation, income, total_fer at upper end.\n3. In life_expec Outlier in lower end.\n4. There are huge number of outliers in gdpp & health column.","ebbf4928":"## **Outlier Tratment by Capping**"}}