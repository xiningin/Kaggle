{"cell_type":{"6c92ae44":"code","43518684":"code","c5e18a2d":"code","84c70a15":"code","6ce16a9e":"code","45f468ae":"code","a74d66f4":"code","575f8d59":"code","9df048d9":"code","81e48f87":"code","56bf3c56":"code","d5c95a0c":"code","15f8e331":"code","5cfc6396":"code","75ccf6d5":"code","b338dfea":"code","2c7867ec":"code","71b0661e":"code","af5191cc":"code","5b153365":"code","edbd3084":"code","2d5d85b0":"code","539d2cab":"code","02a346cf":"code","4004eab2":"code","071833bc":"code","596b0aec":"code","b97b5020":"code","5114c52d":"code","9695a59b":"code","d18d2c02":"code","cb307fdf":"code","86ab9c59":"code","6b8ba577":"code","872234e7":"code","0844202f":"markdown","46461316":"markdown","10a97918":"markdown","4110490b":"markdown","2962b1f7":"markdown","01bb80f4":"markdown"},"source":{"6c92ae44":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as py # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","43518684":"data = pd.read_csv(\"\/kaggle\/input\/rainfall-in-pakistan\/Rainfall_1901_2016_PAK.csv\")\ndata.info()","c5e18a2d":"data = data.rename({'Rainfall - (MM)':'rainfall', \n                    ' Year':'year', 'Month':'month'}, axis=1)\ndata.columns","84c70a15":"data.head()","6ce16a9e":"getmonths = data['month'].unique()\ngetyears = data['year'].unique()\nprint(\"Total Months: \", len(getmonths))\nprint(\"Total Years: \", len(getyears))\nprint(\"Maximum Rainfall: \", data['rainfall'].max() )\nprint(\"Minimum Rainfall: \", data['rainfall'].min() )","45f468ae":"print(\"Average Rainfall of Year 1901: \",\ndata[data.year == 1901][\"rainfall\"].sum()\/len(data[data.year == 1901][\"rainfall\"]) )\n\nprint(\"Mean Rainfall of Year 1901:    \",\n      data[data.year == 1901][\"rainfall\"].mean() )\n","a74d66f4":"yearData = pd.DataFrame(columns = [\"year\", \"meanRainfall\"])\nfor x in getyears:\n    avgRainfall = data[data.year == x][\"rainfall\"].mean()\n    df = {\"year\":x, \"meanRainfall\":avgRainfall}\n    yearData = yearData.append(pd.DataFrame([df]), ignore_index=True)\nyearData.head()","575f8d59":"monthData = pd.DataFrame(columns = [\"month\", \"meanRainfall\"])\nfor x in getmonths:\n    avgRainfall = data[data.month == x][\"rainfall\"].mean()\n    df = {\"month\":x, \"meanRainfall\":avgRainfall}\n    monthData = monthData.append(pd.DataFrame([df]), ignore_index=True)\nmonthData","9df048d9":"sns.set_style('whitegrid')\nplt.subplots(figsize=(20,8))\nplt.title(\"Monthly Average Rainfall\", fontsize=40)\nsns.barplot(x=\"month\", y=\"meanRainfall\", data=monthData)\nplt.xticks(rotation = 45)\nplt.xticks(fontsize=18)\nplt.ylabel(\"Mean Rainfall\",fontsize=20)\nplt.xlabel(\"Months\",fontsize=20)","81e48f87":"sns.set_style('whitegrid')\nplt.subplots(figsize=(20,8))\nplt.title(\"Yearly Average Rainfall\", fontsize=40)\nplt.xticks(rotation = 90)\nsns.barplot(x=\"year\", y=\"meanRainfall\", data=yearData)\nplt.ylabel(\"Mean Rainfall\",fontsize=20)\nplt.xlabel(\"Years\",fontsize=20)","56bf3c56":"filterYear = yearData['year'].max()-16\nlast5year = yearData[yearData['year']>=filterYear]\nlast5year","d5c95a0c":"sns.set_style('whitegrid')\nplt.subplots(figsize=(20,8))\nplt.title(\"Last 5-Years Rainfall\", fontsize=40)\nsns.barplot(x=\"year\", y=\"meanRainfall\", data=last5year)\nplt.xticks(rotation = 45, fontsize = 18)\nplt.xlabel(\"Years\", fontsize = 20)\nplt.yticks(fontsize = 18)\nplt.ylabel(\"Average Rain Fall\", fontsize = 20)","15f8e331":"plt.subplots(figsize=(20,8))\nypoints = py.array(yearData['meanRainfall'])\nplt.plot(ypoints, linestyle = 'solid')\nplt.show()","5cfc6396":"plt.subplots(figsize=(20,8))\nypoints = py.array(monthData['meanRainfall'])\nplt.plot(ypoints, linestyle = 'solid')\nplt.show()","75ccf6d5":"px.scatter(data.loc[(data.year >=2000)], x=\"year\", \n           y=\"rainfall\", animation_frame=\"year\", animation_group=\"month\",\n           size=\"rainfall\", color=\"month\", hover_name=\"month\", \n           title=' Rainfall in (mm) of each month from 2000 to 2016',\n           log_x=True, size_max=100, range_x=[1998,2018], range_y=[0,155])","b338dfea":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","2c7867ec":"indData = pd.read_csv(\"\/kaggle\/input\/rainfall-in-india\/rainfall in india 1901-2015.csv\")\nindData.info()","71b0661e":"indData = indData.rename({'SUBDIVISION':'subdivision', 'YEAR':'year', 'JAN':'jan', \n                    'FEB':'feb', 'MAR':'mar', 'APR':'apr', 'MAY':'may', \n                    'JUN':'jun', 'JUL':'jul', 'AUG':'aug', 'SEP':'sep', \n                    'OCT':'oct', 'NOV':'nov', 'DEC':'dec', \n                    'ANNUAL':'annual', 'Jan-Feb':'jan-feb', \n                    'Mar-May':'mar-may', 'Jun-Sep':'jun-sep', \n                    'Oct-Dec':'oct-dec'}, axis=1)\nprint(\"Columns Name: \", indData.columns)\n\ngetMonth = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', \n            'aug', 'sep', 'oct', 'nov', 'dec']\nprint (\"\\n\\nMonths: \", getMonth)","af5191cc":"print(\"Total Number of Years: \", len(indData.year.unique()))\ngetYears = indData.year.sort_values().unique()\ngetYears","5b153365":"indRainfall = pd.DataFrame(columns = [\"rainfall\", \"year\", \"month\"])\nfor x in getYears:\n    for y in getMonth:\n        getRainfall = round(indData[(indData.year == x)][y].sum(), 5)\n        df = {\"rainfall\":getRainfall, \"year\":x, \"month\":y}\n        indRainfall = indRainfall.append(pd.DataFrame([df]), ignore_index=True)\nprint(\"Yearly Monthwise Rainfall in India\")\nindRainfall","edbd3084":"monTranslate = {'jan':'January', 'feb':'February', 'mar':'March', \n                'apr':'April', 'may':'May', 'jun':'June', 'jul':'July', \n               'aug':'August', 'sep': 'September', 'oct':'October', \n               'nov':'November', 'dec':'December'}\nindRainfall.month = indRainfall.month.replace(monTranslate)\nindRainfall","2d5d85b0":"indRainfall.year = indRainfall.year.astype(int)\ndata.year = data.year.astype(int)\nindRainfall.info()","539d2cab":"print(\"Pakistan Rainfall Data Excluding Year 2016 as Indian Rainfall Data\")\npakData = data[data.year != 2016]\npakData","02a346cf":"print(\"Indian Rainfall Data\\n--------------------\"\n      \"\\nNumber of Unique Months: \", len(indRainfall.month.unique()), \n      \"\\nNumber of Unique Years: \", len(indRainfall.year.unique()) )\n\nprint(\"\\n\\n\\nPakistan Rainfall Data\\n--------------------\"\n      \"\\nNumber of Unique Months: \", len(pakData.month.unique()), \n      \"\\nNumber of Unique Years: \", len(pakData.year.unique()) )","4004eab2":"print (\"Pakistan Data Correlation\\n--------------------------\\n\", \n       pakData.corr(),\n      \"\\n\\n\\nIndian Data Correlation\\n------------------------\\n\", \n       indRainfall.corr() )","071833bc":"#pakData.corrwith(indRainfall.rainfall)\npakData[\"rainfall\"].corr(indRainfall.rainfall)","596b0aec":"sns.heatmap(pakData.corr())\nplt.show()","b97b5020":"sns.heatmap(indRainfall.corr())\nplt.show()","5114c52d":"#indRainfall.corrwith(pakData.rainfall)\nindRainfall[\"rainfall\"].corr(pakData.rainfall)","9695a59b":"plt.scatter(pakData['rainfall'], indRainfall['rainfall'])","d18d2c02":"sns.jointplot(x = \"rainfall\", y=\"year\", data=pakData, kind = 'kde'),\nsns.jointplot(x = \"rainfall\", y=\"year\", data=indRainfall, kind = 'kde')","cb307fdf":"pak = sns.pairplot(pakData, diag_kind=\"kde\")\npak.map_lower(sns.kdeplot, levels=4, color=\".2\")\n\nind = sns.pairplot(indRainfall, diag_kind=\"kde\")\nind.map_lower(sns.kdeplot, levels=4, color=\".2\")","86ab9c59":"joinData = pd.merge(pakData, indRainfall, how='outer', on=['year', 'month'])\njoinData","6b8ba577":"jData = sns.pairplot(joinData, diag_kind=\"kde\")\njData.map_lower(sns.kdeplot, levels=4, color=\".2\")","872234e7":"joinData_correlation = joinData.corr()\nsns.heatmap(joinData_correlation)\nplt.show()","0844202f":"# **Joining 2 Datasets**","46461316":"# **Neighbour Country Data - [INDIA]**","10a97918":"# Yearly Mean Rainfall","4110490b":"**Like -> Upvote ---> Motivation**\n\nStudent of Data Science\/Analysis try python code for learning, need all of your guys support and Appriciation with lots of love, looking for your guidance, Like, UPVOTES for Motivation. Previously Notebook comments and like\/Upvores highly appriciated and motivated. Thanks with lots of LOVE :)\n\nPlease visit also\n\nUber Drives - EDA & Viusalization\nhttps:\/\/www.kaggle.com\/methoomirza\/uber-drives-eda-viusalization\n\nPakistan-Temperature-Visualization\nhttps:\/\/www.kaggle.com\/methoomirza\/pakistan-temperature-visualization\n\nData Cleaning & Visualization\nhttps:\/\/www.kaggle.com\/methoomirza\/data-cleaning-visualization\n\nPakistan COVID19 - EDA & Visuallization of CoronaVirus\nhttps:\/\/www.kaggle.com\/methoomirza\/covid19-datavisualization-pakistan-till-june2020\n\ncities Visualization\nhttps:\/\/www.kaggle.com\/methoomirza\/cities-visualization\n\ncleaning of cities name\nhttps:\/\/www.kaggle.com\/methoomirza\/cleaning-of-cities-name\n\nvariant_name_of_pakistan\nhttps:\/\/www.kaggle.com\/methoomirza\/variant-name-of-pakistan\n\nTop10-Books\nhttps:\/\/www.kaggle.com\/methoomirza\/top10-books\n\nGufhtugu-Analysis\nhttps:\/\/www.kaggle.com\/methoomirza\/gufhtugu-analysis\n\n\n","2962b1f7":"# Monthly Mean Rainfall","01bb80f4":"# Last Five (5) Years"}}