{"cell_type":{"0fdc0dd9":"code","0de590c0":"code","236463e3":"code","153e74e8":"code","81b2e026":"code","6eac08dc":"code","bda149b1":"code","f486545b":"code","082dda18":"code","d475deab":"code","921b17e9":"code","5bf6d7ee":"code","65a3c4f1":"code","d887f12e":"code","a9b12346":"code","ea2ec71c":"code","fc7d2ea7":"markdown","03137c34":"markdown","9988f8c2":"markdown","c2406f22":"markdown","04a07ab4":"markdown","c60c9510":"markdown","b5364256":"markdown","a76198df":"markdown","c78dc4b3":"markdown","0632bb83":"markdown"},"source":{"0fdc0dd9":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","0de590c0":"df = pd.read_csv('..\/input\/classified-dataset\/Classified Data', index_col = 0)\ndf.head()","236463e3":"# Logistic Model training and Predicting\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report, confusion_matrix\n\nX = df[['WTT', 'PTI', 'EQW', 'SBI', 'LQE', 'QWG', 'FDJ', 'PJF', 'HQE', 'NXJ']]\ny = df['TARGET CLASS']\n\ntrain_X, test_X, train_y, test_y = train_test_split(X, y, test_size = 0.3, random_state = 100)\n\nmodel = LogisticRegression()\nmodel.fit(train_X, train_y)\n\nprediction = model.predict(test_X)","153e74e8":"# Finding Accuracy\n\nprint(confusion_matrix(test_y, prediction))\nprint('\\n')\nprint(classification_report(test_y, prediction))","81b2e026":"df.head()","6eac08dc":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nscaler.fit(df.drop(['TARGET CLASS'], axis = 1))\n\nscaled_feat = scaler.transform(df.drop(['TARGET CLASS'],axis = 1))\n\n#Final Standardised Data\ndf_feat = pd.DataFrame(scaled_feat, columns = df.columns[:-1])\ndf_feat.head()","bda149b1":"from sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix\n\ntrain_X,test_X, train_y, test_y = train_test_split(df_feat, df['TARGET CLASS'], test_size = 0.4, random_state = 100)\n\n\n# Model training\nmodel = KNeighborsClassifier(n_neighbors= 1) # Taking k value equals to 1\nmodel.fit(train_X, train_y)\n\npred = model.predict(test_X)","f486545b":"# Finding Accuracy\n\nprint(confusion_matrix(test_y, pred))\nprint('\\n')\nprint(classification_report(test_y, pred))","082dda18":"# Using elbow method\n\nerror_rate = []\nfor i in range(1, 60):\n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(train_X, train_y)\n    pred_i = knn.predict(test_X)\n    error_rate.append(np.mean(pred_i != test_y))","d475deab":"# Plotting various K values with respect to the error_rate, to find perfect K value\n\nsns.set_style('whitegrid')\nplt.figure(figsize=(10,6))\nplt.plot(range(1,60), error_rate, color = 'blue', linestyle = 'dashed', marker = 'o', markerfacecolor = 'red',markersize = 10)\nplt.title('Error rate vs K value')\nplt.xlabel('K')\nplt.ylabel('Error rate')","921b17e9":"# Prediction with K=35\n\nmodel = KNeighborsClassifier(n_neighbors=35)\nmodel.fit(train_X, train_y)\n\npredict = model.predict(test_X)","5bf6d7ee":"# Finding Accuracy\n\nprint(confusion_matrix(test_y, predict))\nprint('\\n')\nprint(classification_report(test_y, predict))","65a3c4f1":"# Importing SVM model and Predicting \n\nfrom sklearn.svm import SVC\n\nsvm_model = SVC()\nsvm_model.fit(train_X, train_y)\n\npredict = svm_model.predict(test_X)","d887f12e":"# Accuracy \n\nprint(confusion_matrix(test_y, predict))\nprint('\\n')\nprint(classification_report(test_y, predict))","a9b12346":"# Importing the Grid Search model and predicting\n\nfrom sklearn.model_selection import GridSearchCV\n\nparameters = {'C':[0.1, 1, 10, 100, 1000], 'gamma':[1, 0.1, 0.01, 0.001, 0.0001]}\n\ngrid = GridSearchCV(SVC(), param_grid=parameters)\n\n# Model Training\n\ngrid.fit(train_X, train_y)","ea2ec71c":"predict = grid.predict(test_X)\n\n# Finding Accuracy\n\nprint(confusion_matrix(test_y, predict))\nprint('\\n')\nprint(classification_report(test_y, predict))","fc7d2ea7":"# Choosing K value","03137c34":"We got 92% accuracy with K=1, let's find the perfect value for K to get more accuracy..","9988f8c2":"# Prediction with Logistic Regression","c2406f22":"Ooooooo....Now see, We got highest Accuracy with Grid Search... That's pretty good to see,,,haha","04a07ab4":"We got 94% accuracy with K=35...Actually we got same percent accuracy with Logistic Regression.\nSo we can minimise the error rate by choosing the K value...which implies increase in accuracy percentage...","c60c9510":"Yeah.. Now we got 93%, in between Logistic and KNN... Ok let's go into the deeper with Grid Search by changing the C and gamma values...\n","b5364256":"# Predicting using KNN model","a76198df":"# Prediction with SVM model","c78dc4b3":"We got 94% here with Logistic Regression...Let's go and check with other models accuracy..","0632bb83":"Let's take 35 is for K value to minimize the error rate"}}