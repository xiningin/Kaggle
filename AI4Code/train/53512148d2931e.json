{"cell_type":{"c4e8eb53":"code","02bf35d4":"code","d4fcd376":"code","b0e42ada":"code","284956d9":"code","6212215a":"code","a5c84cf9":"code","b330a0b0":"code","64efc291":"code","498e36f3":"code","b4651d47":"code","edb90db9":"code","5ea35d6c":"code","8596eb2b":"code","8316dbaf":"code","fc146a95":"code","080e4638":"code","886a8d1c":"code","a0ed59a2":"code","f1ac8032":"code","d286ec50":"code","7d8e1f80":"code","22813163":"code","9fb0013c":"code","762e5e24":"code","53720fcd":"code","7229a0ef":"code","276a5e54":"code","3db2259c":"code","7b3b4d68":"code","28d0a3b3":"code","f2a5e16c":"code","a4f8d06b":"code","7c577b48":"code","ba049406":"code","f54e2482":"markdown","cc832787":"markdown","e6228185":"markdown","4d4e22df":"markdown","eb753bee":"markdown","5b0ca815":"markdown","e461f6b8":"markdown","78d8508b":"markdown","7e83d2a0":"markdown","d4732955":"markdown","c0a46283":"markdown","7765db3b":"markdown","0af6e439":"markdown","d2e216c6":"markdown","11f32798":"markdown"},"source":{"c4e8eb53":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","02bf35d4":"# read the data into the notebook\nviddata = pd.read_csv('\/kaggle\/input\/5minute-crafts-video-views-dataset\/5-Minute Crafts.csv')","d4fcd376":"# let's see what the data looks like\nviddata.head()","b0e42ada":"# infomation about the columns in the dataset\nviddata.info()","284956d9":"# descriding the dataset\nviddata.describe()","6212215a":"# import visualization libraries\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","a5c84cf9":"# cheking for boxplots to visualize the outliers\nfig, axs = plt.subplots(nrows=viddata.describe().shape[1], figsize = (20,20))\nfig.tight_layout(pad=3.0)\nk = 0 # axis counter\nred = np.linspace(0.9,0.5,viddata.describe().shape[1]) # values for the red color\ngreen = np.linspace(0.7,0.9,viddata.describe().shape[1]) # values for the green color\nblue = np.linspace(0.4,0.6,viddata.describe().shape[1]) # values for the blue color\n\nfor i in viddata.describe().columns:\n    # print box plot for all the numerial atributes\n    sns.boxplot(x=viddata[i], orient='h',ax=axs[k], color=(red[k],green[k],blue[k]))\n    axs[k].set_title(i) # setting the \n    axs[k].set_xlabel('')\n    k += 1 # increasing the axis counter by 1","b330a0b0":"# distribution plots of numberical values\nk = 0 # axis counter\nfor i in viddata.describe().columns:\n    sns.displot(x=viddata[i], color=(red[k],green[k],blue[k]))\n    k += 1","64efc291":"# correlation plot\nplt.figure(figsize=(15,15))\nsns.heatmap(viddata.corr(),annot = True)","498e36f3":"# based on the correlation matrix, we can drop num_words and startswith_digits\nviddata2 = viddata.drop(['num_words','startswith_digits'], axis = 1)","b4651d47":"# check the new data\nviddata2.head()","edb90db9":"# correlation plot of new data\nplt.figure(figsize=(15,15))\nsns.heatmap(viddata2.corr(),annot = True)","5ea35d6c":"viddata2.info()","8596eb2b":"# we will only be using the numerical values. So, we can drop the non-numerical columns.\nviddata2.drop(['video_id', 'title'], axis = 1, inplace = True)","8316dbaf":"viddata2.columns","fc146a95":"# features used for predition\nX = viddata2[['active_since_days', 'duration_seconds', 'num_chars',\n              'num_punctuation', 'num_words_uppercase', 'num_words_lowercase',\n              'num_stopwords', 'avg_word_len', 'contain_digits', 'title_sentiment']]","080e4638":"# target variable\ny = viddata2['total_views']","886a8d1c":"from sklearn.model_selection import train_test_split","a0ed59a2":"# train test split, 0.3 for testing\nX_train, X_test, y_train, y_test = train_test_split(X, y, train_size = 0.7, random_state = 4242)","f1ac8032":"X_test.info()","d286ec50":"from sklearn.linear_model import LinearRegression","7d8e1f80":"# before modeling the data, we ought to scale the values of the features\nfrom sklearn.preprocessing import MinMaxScaler","22813163":"# scale all the numerical values\nscaler = MinMaxScaler()\nscaler.fit(X_train) # fit using the training set\nX_train = scaler.transform(X_train) # transform trianing set\nX_test = scaler.transform(X_test) # transform testing set","9fb0013c":"lin_model = LinearRegression() # create the model","762e5e24":"lin_model.fit(X_train, y_train) # fit the model using training set","53720fcd":"lin_model.intercept_ # intercept of regression","7229a0ef":"lin_model.coef_ # coefficints of each feature","276a5e54":"X.columns # columns","3db2259c":"# create a data frame of correlations\nceoff_df = pd.DataFrame(lin_model.coef_, X.columns, columns=['Coefficiant']) ","7b3b4d68":"ceoff_df","28d0a3b3":"pred = lin_model.predict(X_test) # predict the testing values","f2a5e16c":"sns.scatterplot(x=y_test, y=pred)\n# this plot is expected to be a generally linear model with y=x characteristics. However, the output shows that this is not the case\n# This is an indication that the model fails to explain a large amount of the variance in the total number of views.","a4f8d06b":"# check reseduals\nsns.displot(y_test-pred)","7c577b48":"from sklearn import metrics","ba049406":"# More evaluations of the model\nprint('MAE: ' , metrics.mean_absolute_error(y_test, pred))\nprint('MSE: ' , metrics.mean_squared_error(y_test, pred))\nprint('RMSE: ' , np.sqrt(metrics.mean_squared_error(y_test, pred)))","f54e2482":"* In addition, the resduals are not normally distributed.\n* In other words, the errors are skewed in one direction, which is another indication of the biase in the model and the failure of the model to explaint the variances in the data.","cc832787":"# Thank You!","e6228185":"As we can see from the correlation matrix, none of the features are strongly correlate with the total number of views. Let us try a regression model to see if the combination of the features can help determine the number of views.\n\nWe are assigning 'total_views' the role of the target variable because that is, presumably, the goal of the 5 minute craft franchise; the creators srive to achieve more views and reach a wider audiance.","4d4e22df":"## Train Test Split","eb753bee":"As we can see from the output, there are no missing or null values.","5b0ca815":"## Linear Regression - total number of views","e461f6b8":"## Model Predictions","78d8508b":"* The y_test=pred plot indicated that the relationship between the predict values and the test values is not linear.\n* This indicated that the linear regression model fails to explain a large amount of the varience in the data of the total views.\n* In other words, the perfomance of this model is low.","7e83d2a0":"From the correlation map, we see that num_words and num_chars are strongly correlated with a correlation value of 0.93. In addition, num_words is hightly correlated with num_stopwords.\n\nAnother pair of features that shows high correlation is startswith_digits and contains_digits.\n\nBased on the correlation matrix, we can drop num_words and startswith_digits to get a dataset with reduced dimentions.","d4732955":"## Create and Train Model","c0a46283":"From the box plot, here are a few observations:\n* The boxplot for the duration of the videos shows may outliers and a large variance. However, most videos are relatively short.\n* The total number of views are also right skewed. There are some videos once in a while that achieve hundreds of millions of views, but most videos only have millions of veiws.\n* The number of words in the video titles are short as well, with 75% percentile being 10 words. \n* There are usually none to few punctiations used in the videos.\n* The sentiments of the titles are generally positive. The outliers all have negative sentiments but a majority of the titles are positive.","7765db3b":"# 5 Min Craft Data\n\nThis data is found on kaggle.com and it contains data on 5 min craft videos. Some of the features are the title of the videos, the nature of the words and charachters in the titles, and the total number of views each has amassed.\n\nIn this notebook, I will exercise some visualization skills. I will also attempt to predict the total number of views on a video using other numerial features of the data with the help of a simple linear regression model.","0af6e439":"### Correlation Heatmaps","d2e216c6":"## Model Evaluation","11f32798":"### Distribution Plots"}}