{"cell_type":{"88b6ded8":"code","6e9f5736":"code","f6e24f39":"code","06dc5f91":"code","5532013b":"code","2de68c39":"code","5f3271ba":"code","29818454":"code","9c4e389d":"code","c5e6fa60":"code","c1294b04":"code","0288ee16":"code","22716c59":"code","c1721f62":"code","bff70f18":"code","9664744d":"code","319036e2":"code","f8d87549":"code","e0c006e3":"code","56f13bc6":"code","7695e145":"code","e1738153":"markdown","84ba3fa4":"markdown","8bed748a":"markdown","dbc7ec43":"markdown","f2fc6949":"markdown","b33dc920":"markdown","9eecb1e9":"markdown","8015e7f0":"markdown","38ff28d0":"markdown","8e6fa768":"markdown","113146ae":"markdown","9755c88e":"markdown"},"source":{"88b6ded8":"# \uc2dc\ud5d8\ud658\uacbd \uc138\ud305 (\ucf54\ub4dc \ubcc0\uacbd X, \uc2dc\ud5d8\ud658\uacbd\uacfc \uc720\uc0ac\ud558\uac8c \ud30c\uc77c\uc77d\uae30 \uad6c\ud604)\nimport pandas as pd\ndf = pd.read_csv('..\/input\/insurance\/insurance.csv', engine='python')\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test = train_test_split(df, test_size=0.2, shuffle=True, random_state=2021)\ny_train = X_train['charges']\nX_train = X_train.drop(columns=['charges'])\ny_test = X_test['charges']\nX_test = X_test.drop(columns=['charges'])\n\nX_train.shape, y_train.shape, X_test.shape, y_test.shape","6e9f5736":"import pandas as pd\nimport numpy as np","f6e24f39":"X_train.head()","06dc5f91":"X_test.head()","5532013b":"X_train.info()","2de68c39":"X_test.info()","5f3271ba":"X_train.isnull().sum()","29818454":"X_test.isnull().sum()","9c4e389d":"X_train.describe()","c5e6fa60":"# IQR\uc744 \ud1b5\ud55c \uc774\uc0c1\uce58 \ud30c\uc545\n# train\nnumeric_features = ['age', 'bmi', 'children']\n\nfor col in numeric_features:\n    q1 = X_train[col].quantile(q=0.25)\n    q3 = X_train[col].quantile(q=0.75)\n    iqr = q3 - q1\n    outliers = X_train[(X_train[col] < q1-(1.5*iqr)) | (X_train[col] > q3+(1.5*iqr))]\n    print(col, ':', len(outliers))","c1294b04":"# IQR\uc744 \ud1b5\ud55c \uc774\uc0c1\uce58 \ud30c\uc545\n# test\nnumeric_features = ['age', 'bmi', 'children']\n\nfor col in numeric_features:\n    q1 = X_test[col].quantile(q=0.25)\n    q3 = X_test[col].quantile(q=0.75)\n    iqr = q3 - q1\n    outliers = X_test[(X_test[col] < q1-(1.5*iqr)) | (X_test[col] > q3+(1.5*iqr))]\n    print(col, ':', len(outliers))","0288ee16":"# \uc774\uc0c1\uce58\ub97c \uc911\uc559\uac12\uc73c\ub85c \ucc44\uc6c1\ub2c8\ub2e4.\n# train\nnumeric_features = ['age', 'bmi', 'children']\n\nfor col in numeric_features:\n    q1 = X_train[col].quantile(q=0.25)\n    q3 = X_train[col].quantile(q=0.75)\n    iqr = q3 - q1\n    outliers = X_train[(X_train[col] < q1-(1.5*iqr)) | (X_train[col] > q3+(1.5*iqr))]\n    median = X_train[col].median()\n    \n    X_train[col].loc[outliers.index] = median","22716c59":"# test\nnumeric_features = ['age', 'bmi', 'children']\n\nfor col in numeric_features:\n    q1 = X_test[col].quantile(q=0.25)\n    q3 = X_test[col].quantile(q=0.75)\n    iqr = q3 - q1\n    outliers = X_test[(X_test[col] < q1-(1.5*iqr)) | (X_test[col] > q3+(1.5*iqr))]\n    median = X_test[col].median()\n    \n    X_test[col].loc[outliers.index] = median","c1721f62":"# numeric features \uc2a4\ucf00\uc77c\ub9c1\nfrom sklearn.preprocessing import StandardScaler\n\nstd = StandardScaler()\nX_train[numeric_features] = std.fit_transform(X_train[numeric_features])\nX_test[numeric_features] = std.transform(X_test[numeric_features])\n\nX_train.head()","bff70f18":"from sklearn.preprocessing import LabelEncoder\n\ncat_features = ['sex', 'smoker', 'region']\n\nlabel = LabelEncoder()\nX_train[cat_features] = X_train[cat_features].apply(label.fit_transform)\nX_test[cat_features] = X_test[cat_features].apply(label.fit_transform)\n\nX_train.head()","9664744d":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.metrics import mean_squared_error","319036e2":"# training - validation \ubd84\ub9ac\nX_tr, X_val, y_tr, y_val = train_test_split(X_train, y_train, test_size=0.15, random_state=2021)","f8d87549":"# \ubaa8\ub378 \ud3c9\uac00 - Decision Tree\ndt = DecisionTreeRegressor(random_state=2021)\ndt.fit(X_tr, y_tr)\ny_pred = dt.predict(X_val)\nmse = mean_squared_error(y_val, y_pred)\n\nprint('RMSE: %.4f' % (np.sqrt(mse)))","e0c006e3":"# \ubaa8\ub378 \ud3c9\uac00 - Random Forest\nrf = RandomForestRegressor(random_state=2021)\nrf.fit(X_tr, y_tr)\ny_pred = rf.predict(X_val)\nmse = mean_squared_error(y_val, y_pred)\n\nprint('RMSE: %.4f' % (np.sqrt(mse)))","56f13bc6":"# random forest \uc0ac\uc6a9\nrf.fit(X_train, y_train)\ny_pred = rf.predict(X_test)\ny_pred[:10]","7695e145":"mse = mean_squared_error(y_test, y_pred)\n\nprint('RMSE of test: %.4f' % np.sqrt(mse))","e1738153":"### \ub77c\ubca8 \uc778\ucf54\ub529","84ba3fa4":"# Model Test","8bed748a":"## \ub370\uc774\ud130 \uc804\ucc98\ub9ac","dbc7ec43":"## EDA","f2fc6949":"# \uc0ac\uc6a9\uc790 \ucf54\ub529","b33dc920":"# Model Selection","9eecb1e9":"# Insurance Prediction (Regression)\n\n\uc624\ub298 \uc800\ud76c\ub294 \uc758\ub8cc\ubcf4\ud5d8 \ub370\uc774\ud130\ub97c \ud65c\uc6a9\ud574 \ud55c \uc0ac\ub78c\uc774 \ubcf4\ud5d8\ub8cc\ub97c \uc5bc\ub9c8\ub098 \ub0bc\uc9c0\ub97c \uc608\uce21\ud558\ub294 \ud68c\uadc0 \ubb38\uc81c\ub97c \ub2e4\ub904\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc704\uc758 input\uc5d0 \ucd94\uac00\ub41c \ub370\uc774\ud130\uc5d0\uc11c \ubc14\ub85c \uc774\uc6a9\ud560 \uc218 \uc788\uace0, \ub370\uc774\ud130\ub97c \uc774\ub8e8\uace0 \uc788\ub294 column\ub4e4\uc5d0 \ub300\ud55c \uc124\uba85\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4.\n\n* Age: \ud53c\ubcf4\ud5d8\uc790\uc758 \ub098\uc774\n* Sex: \ud53c\ubcf4\ud5d8\uc790\uc758 \uc131\ubcc4\n* BMI: \ud53c\ubcf4\ud5d8\uc790\uc758 \uccb4\uc9c8\ub7c9 \uc9c0\uc218 - $\\frac{Weight\\:(kg)}{\\left(Height\\:(m)\\right)^{2}}$\n* Children: \ud53c\ubcf4\ud5d8\uc790\uc758 \uc790\ub140\uc758 \uc218\n* Smoker: \ud761\uc5f0 \uc5ec\ubd80 (yes \/ no)\n* Region: \ud53c\ubcf4\ud5d8\uc790\uac00 \uac70\uc8fc\ud558\ub294 \uc9c0\uc5ed (Southeast \/ Southwest \/ Northeast \/ Northwest)\n* Charges: \ubcf4\ud5d8\ub8cc","8015e7f0":"# Start","38ff28d0":"# \ucc38\uace0 \ub2f5\uc548","8e6fa768":"### \uc2a4\ucf00\uc77c\ub9c1","113146ae":"### \uc774\uc0c1\uce58 \ucc98\ub9ac","9755c88e":"## \ub77c\uc774\ube0c\ub7ec\ub9ac \ubc0f \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30"}}