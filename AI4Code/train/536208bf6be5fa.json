{"cell_type":{"a7122686":"code","5bcb487d":"code","8c547148":"code","61d0e4f8":"code","920c3780":"code","738caf26":"code","88c7a018":"code","95ea8f82":"code","ef87c203":"code","34a7eaf2":"code","8b8f6fa6":"code","dc14b9c5":"code","78bceaec":"code","1c0ff496":"code","9dbcd260":"code","75f44e9e":"code","fbe75805":"code","babe76a3":"code","d0af649f":"code","73c40fec":"code","2180b6ee":"code","a875df86":"code","6dbe9eff":"code","6e3dd251":"markdown","81fc943f":"markdown","ac064fe8":"markdown","39c782ac":"markdown","1df766fe":"markdown","48f59cf1":"markdown","127689c9":"markdown","80b89ea0":"markdown","c1ac96fa":"markdown","cb5e4d21":"markdown","c6c3684e":"markdown","aef36274":"markdown","b3068153":"markdown","ad79cb8b":"markdown","9d407885":"markdown","43b3293b":"markdown","6c9e0dfe":"markdown","c50b65d9":"markdown","36d3ebb1":"markdown","075fd15f":"markdown"},"source":{"a7122686":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n\ndf = pd.read_csv('..\/input\/heart-failure-prediction\/heart.csv')\ndf.head(5)\n","5bcb487d":"New_Stats = df\ndata = pd.get_dummies(New_Stats[\"Sex\"])\ndata.head(5)","8c547148":"New_Stats.drop('Sex', axis='columns')","61d0e4f8":"le = LabelEncoder()\nlabel_Sex = le.fit_transform(df[\"Sex\"])\nlabel_ChestPainType = le.fit_transform(df[\"ChestPainType\"])\nlabel_RestingECG = le.fit_transform(df[\"RestingECG\"])\nlabel_ExerciseAngina = le.fit_transform(df[\"ExerciseAngina\"])\nlabel_STSlope = le.fit_transform(df[\"ST_Slope\"])","920c3780":"le.classes_","738caf26":"data = df.drop(\"Sex\", axis='columns')\ndata[\"Sex\"] = label_Sex \ndata.head(5)","88c7a018":"data = data.drop(\"ChestPainType\", axis='columns')\ndata[\"ChestPainType\"] = label_ChestPainType\ndata.head(5)","95ea8f82":"data = data.drop(\"RestingECG\", axis='columns')\ndata[\"RestingECG\"] = label_RestingECG\ndata.head(5)","ef87c203":"data = data.drop(\"ExerciseAngina\", axis='columns')\ndata[\"ExerciseAngina\"] = label_RestingECG\ndata.head(5)","34a7eaf2":"data = data.drop(\"ST_Slope\", axis='columns')\ndata[\"ST_Slope\"] = label_STSlope\ndata.head(5)","8b8f6fa6":"data = data[['Age','RestingBP','Cholesterol','FastingBS','MaxHR','Oldpeak','Sex','ChestPainType','RestingECG','ExerciseAngina','ST_Slope','HeartDisease']]\ndata.head(5)","dc14b9c5":"from sklearn import datasets, linear_model\nfrom sklearn.model_selection import train_test_split\nx = data[[\"Age\", \"RestingBP\", \"Cholesterol\", \"FastingBS\",\"MaxHR\",\"Oldpeak\",\"Sex\",\"ChestPainType\",\"RestingECG\",\"ExerciseAngina\",\"ST_Slope\",]]\ny = data[\"HeartDisease\"]","78bceaec":"x_train, x_test, y_train, y_test = train_test_split(x,y, test_size = 0.20, random_state =5)\nlen(x_test)","1c0ff496":"from sklearn.linear_model import LogisticRegression\n\npun = LogisticRegression(random_state=0, multi_class='multinomial', penalty='none', solver='newton-cg').fit(x_train, y_train)\npreds = pun.predict(x_test)","9dbcd260":"pun.predict(x_test)","75f44e9e":"pun.score(x_test, y_test)*100","fbe75805":"y_pred = pun.predict(x_test)\ncf_matrix = confusion_matrix(y_test, y_pred)\nprint(cf_matrix)\ndisp = ConfusionMatrixDisplay(cf_matrix, display_labels = pun.classes_)\ndisp.plot()\nplt.show()","babe76a3":"from sklearn import tree \npun1 = tree.DecisionTreeClassifier(max_depth=16)\npun1.fit(x_train, y_train)\npun1.predict(x_test)","d0af649f":"pun1.score(x_test, y_test)*100","73c40fec":"y_pred = pun1.predict(x_test)\ncf_matrix = confusion_matrix(y_test, y_pred)\nprint(cf_matrix)\ndisp = ConfusionMatrixDisplay(cf_matrix, display_labels = pun1.classes_)\ndisp.plot()\nplt.show()","2180b6ee":" from sklearn.ensemble import RandomForestClassifier\n pun2 = RandomForestClassifier(n_estimators=99, max_depth=16, random_state=42)\n pun2.fit(x_train, y_train)\n pun2.predict(x_test)","a875df86":"pun2.score(x_test,y_test)*100","6dbe9eff":"y_pred = pun2.predict(x_test)\ncf_matrix = confusion_matrix(y_test, y_pred)\nprint(cf_matrix)\ndisp = ConfusionMatrixDisplay(cf_matrix, display_labels = pun2.classes_)\ndisp.plot()\nplt.show()","6e3dd251":"# **CONCLUSION**\n\n\n","81fc943f":"### **LABEL ENCODING**\nLabel Encoding refers to converting the labels into a numeric form so as to convert them into the machine-readable form. Machine learning algorithms can then decide in a better way how those labels must be operated. It is an important pre-processing step for the structured dataset in supervised learning.","ac064fe8":"### **Data Availability**\n\nThe data and features required for this model were sourced from Kaggle.\n(https:\/\/www.kaggle.com\/fedesoriano\/heart-failure-prediction)\n\nThe features present in this data are as follows:\n\n    ~Age\n    ~Sex\n    ~ChestPainType\n    ~RestingBP\n    ~Cholesterol\n    ~FastingBS\n    ~RestingECG\n    ~MaxHR\n    ~ExcerciseAngina\n    ~Oldpeak\n    ~ST_Slope\n    ~HeartDisease\n  ","39c782ac":"Data that can be inferred from this matrix:\n\nTrue-Positives: 99\n\nTrue-Negative: 64\n\nFalse-Positives: 9\n\nFalse-Negatives: 12","1df766fe":"**Downloading the Dataset from Kaggle**","48f59cf1":"### **LOGISTIC REGRESSION**\n\nLogistic Regression is used for predicting the categorical dependent variable using a given set of independent variables.\nIt predicts the output of a categorical dependent variable. Therefore, the outcome must be a categorical or discrete value. It can be either Yes or No, 0 or 1, true or False, etc. but instead of giving the exact value as 0 and 1, it gives the probabilistic values which lie between 0 and 1.","127689c9":"Data that can be inferred from this matrix:\n\nTrue-Positives: 99\n\nTrue-Negative: 67\n\nFalse-Positives: 6\n\nFalse-Negatives: 12","80b89ea0":"**Confusion Matrix (Logistic Regression Model)**","c1ac96fa":"### **DECISION TREE**\n\nDecision Tree is a Supervised learning technique that can be used for both classification and Regression problems, but mostly it is preferred for solving Classification problems. It is a tree-structured classifier, where internal nodes represent the features of a dataset, branches represent the decision rules and each leaf node represents the outcome.","cb5e4d21":"**CONFUSION MATRIX (RANDOM FOREST MODEL)**","c6c3684e":"### **Implementation of Machine Learning in the field of Medical Diagnosis using a Heart Failure Prediction Model**.\n\nMachine learning is the science of getting computers to act without being explicitly programmed. Scientists and researchers are using machine learning to churn out a number of smart solutions that can ultimately help in diagnosing and treating an illness. In medical diagnosis a doctor aims to explain a patient\u2019s symptoms by determining the diseases causing them. ML is capable of more accurately detecting a disease at an earlier stage, helping to reduce the number of readmissions in hospitals and clinics. This technology is benefitial for patients as it can improve their outcome by analyzing the best forms of treatment for them. Machine learning applied to medical records, in particular, can be an effective tool both to predict the survival of each patient having heart failure symptoms, and to detect the most important clinical features (or risk factors) that may lead to heart failure. However, existing machine learning approaches to diagnosis are purely associative, identifying diseases that are strongly correlated with a patients symptoms. Despite significant research efforts and renewed commercial interest, diagnostic algorithms have struggled to achieve the accuracy of doctors in differential diagnosis where there are multiple possible causes of a patients symptoms.\nTherefore, the aim of this project is to create a more accurate Machine Learning model that should be able to predict whether a person has a potential heart disease or not on the basis of the features that the user inputs.  \n","aef36274":"# **Heart Failure Prediction - A Machine Learning Model**","b3068153":"# **INTRODUCTION**","ad79cb8b":"**Confusion Matrix (Decision Tree Model)**","9d407885":"### **Data Pre-Processing**\n\nData Preprocessing includes the steps we need to follow to transform or encode data so that it may be easily parsed by the machine. \n\nThe main agenda for a model to be accurate and precise in predictions is that the algorithm should be able to easily interpret the data's features. ","43b3293b":"### **RANDOM FOREST**\n\nRandom Forest is a classifier that contains a number of decision trees on various subsets of the given dataset and takes the average to improve the predictive accuracy of that dataset.It can be used for both Classification and Regression problems in ML. It is based on the concept of ensemble learning, which is a process of combining multiple classifiers to solve a complex problem and to improve the performance of the model.","6c9e0dfe":"In summary, out of the 3 models we tested, we find the most accurate results with our 1st model (Logistic Regression).\n\nWe can also improve on our existing model by implementing methods of data engineering and feature selection during the pre-processing stage. Using neural networks should improve the accuracy and precision of the predictions.","c50b65d9":"### **TRAIN_TEST DATA SPLIT**\n\nThe train-test split procedure is used to estimate the performance of machine learning algorithms when they are used to make predictions on data not used to train the model.The process involves splitting the dataset into a training set (to train the model) and a test set (to evaluate the model performance).","36d3ebb1":"# **DIFFERENT MACHINE LEARNING MODELS AND THEIR RESPECTIVE ACCURACY**","075fd15f":"Data that can be inferred from this matrix:\n\nTrue-Positives: 89\n\nTrue-Negative: 57\n\nFalse-Positives: 16\n\nFalse-Negatives: 22"}}