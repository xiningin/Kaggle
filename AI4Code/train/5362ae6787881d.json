{"cell_type":{"045c9acd":"code","83597c2f":"code","908bd37e":"code","cf1b788c":"code","a743883e":"code","02141e1c":"code","626c8938":"code","cef95698":"code","edcb81af":"code","9c99223b":"code","18bb1f8a":"code","c10d1ef4":"code","63af0769":"code","fdc26457":"code","875013a7":"markdown","b51a9692":"markdown","d84be752":"markdown","221913c0":"markdown","af165393":"markdown","f23654dc":"markdown","a4c4c050":"markdown","23e12491":"markdown","81cf8839":"markdown","ddb196cc":"markdown","c9bf6a70":"markdown","f181be59":"markdown","c34b4627":"markdown","a8ae75f2":"markdown"},"source":{"045c9acd":"''' Importing all the necessary module '''\n\nimport numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns","83597c2f":"''' Reading the match file only. '''\n\nmatch_df = pd.read_csv('\/kaggle\/input\/ipl-data-set\/matches.csv')\nprint(match_df.shape)","908bd37e":"''' Glimps of data.. '''\n\nmatch_df.head()","cf1b788c":"''' lets check the season '''\nmatch_df['Season'].unique()","a743883e":"''' lets select the only thouse mathch where result comes. remove all the no result matchs. '''\n\nprint(\"possible result of the match.. = \", match_df['result'].unique())\nmatch_df = match_df[match_df['result'] !=  'no result']\nprint(\"shape of the match_df  after filtering = \", match_df.shape)","02141e1c":"''' Lets check the teams .. '''\n\nmatch_df['team1'].unique()","626c8938":"''' Combinding the below two combinations of team.. \n\nDeccan Chargers --> Sunrisers Hyderabad\nDelhi Daredevils --> Delhi Capitals\n  \n'''\nmatch_df['team1'] = match_df['team1'].apply(lambda x : 'Sunrisers Hyderabad' if x == 'Deccan Chargers' else x)\nmatch_df['team2'] = match_df['team2'].apply(lambda x : 'Sunrisers Hyderabad' if x == 'Deccan Chargers' else x)\n\nmatch_df['team1'] = match_df['team1'].apply(lambda x : 'Delhi Capitals' if x == 'Delhi Daredevils' else x)\nmatch_df['team2'] = match_df['team2'].apply(lambda x : 'Delhi Capitals' if x == 'Delhi Daredevils' else x)","cef95698":"''' Lets check the unique teams now... ''' \n\nmatch_df['team1'].unique()","edcb81af":"''' lets not consider the team who are not part of ipl currently. '''\n\ndepricated_team = ['Rising Pune Supergiant', 'Gujarat Lions', 'Pune Warriors', 'Kochi Tuskers Kerala', 'Rising Pune Supergiants']\n\nprint(\"shape of match_df before filtering = \", match_df.shape)\nmatch_df = match_df[~ match_df['team1'].isin(depricated_team) ]\nmatch_df = match_df[~ match_df['team2'].isin(depricated_team)]\nprint(\"shape of match_df after filtering = \", match_df.shape)","9c99223b":"''' Lets check the unique teams now.. '''\n\nmatch_df['team1'].unique()","18bb1f8a":"''' Lets check how many match played by each team. ''' \n\nteam1_df = pd.DataFrame({'home_count': match_df.groupby(['team1'])['id'].count()})\nteam1_df.reset_index(inplace = True)\nteam1_df.columns = ['team', 'home_count']\n\nteam2_df = pd.DataFrame({'away_count': match_df.groupby(['team2'])['id'].count()})\nteam2_df.reset_index(inplace = True)\nteam2_df.columns = ['team', 'away_count']\n\nteam_count_df = pd.merge(team1_df, team2_df, on = 'team')\n\nteam_count_df['total_count'] = team_count_df['home_count'] + team_count_df['away_count']\n\nplt.figure(figsize=(20, 8))\nsns.barplot(x = 'team', y = 'total_count', data = team_count_df, palette = 'tab20')","c10d1ef4":"def calculate_elo(team1_rating, team2_rating, winner = 'team1', k = 30):\n    team1_prob = team1_rating \/ (team1_rating + team2_rating) \n    team2_prob = team2_rating \/ (team1_rating + team2_rating) \n    \n    if winner == 'team1':\n        team1_rating = round(team1_rating + k * (1 - team1_prob))\n        team2_rating = round(team2_rating + k * (0 - team2_prob))\n    else:\n        team1_rating = round(team1_rating + k * (0 - team1_prob))\n        team2_rating = round(team2_rating + k * (1 - team2_prob))\n        \n    \n    return (team1_rating, team2_rating)","63af0769":"''' Assigning default rating of 1000 to each team starting of the tournament.. '''\n\nunique_team_list = list(match_df['team1'].unique())\nrating_dict = dict()\n\nfor team in unique_team_list:\n    rating_dict[team] = 1000\n    \n''' Setting the default value of k as 10 '''\n\nk = 30\n\n''' lets analysize season wise.. '''\n\nseason_list = ['IPL-2008', 'IPL-2009', 'IPL-2010', 'IPL-2011',\n       'IPL-2012', 'IPL-2013', 'IPL-2014', 'IPL-2015', 'IPL-2016', 'IPL-2017',\n       'IPL-2018', 'IPL-2019']\n\nfor season in season_list:\n    print(\"***************** ELO RATINGS OF TEAM AFTER \"+ season + \" ******************\")\n    match_temp = match_df[match_df['Season'] == season][['team1', 'team2', 'winner']]\n    \n    for index, row in match_temp.iterrows():\n        team1 = row['team1']\n        team2 = row['team2']\n        winner_team = row['winner']\n        \n        team1_rating = rating_dict[team1]\n        team2_rating = rating_dict[team2]\n        winner = 'team1'\n        \n        if winner_team == team2:\n            winner = 'team2'\n            \n        team1_rating, team2_rating = calculate_elo(team1_rating, team2_rating, winner, k)\n        \n        rating_dict[team1] = team1_rating\n        rating_dict[team2] = team2_rating\n        \n    keys = list(rating_dict.keys())\n    values = list(rating_dict.values())\n    plt.figure(figsize=(10, 5))\n    sns.barplot(y = keys, x = values, palette = 'tab20')\n    plt.show()","fdc26457":"rating_dict","875013a7":"### Mumbai Indians played height number of matchs.","b51a9692":"#### I would request you to keep play with the value of k . And check how the ratings of the team vary with the varying values of k.","d84be752":"# ELO RATING SYSTEM","221913c0":"## * After considering all the matches played between the above teams from 2008 to 2019. \n### * We came to a score where **Chennai Super Kings** is leading with a score of 1393. \n### * **Delhi Capitals** ranked last with a rating score of 462.  ","af165393":"                               Let's say there is a match between team A and team B. \n\n                               k = factor of shifting of rating = 30 \n                               r1 = Rating of Team A before match starts = 1100\n                               r2 = Rating of Team B before match starts = 900\n\n\n                               P1 = Probability of winning for Team A \n                                  = 1100 \/ (1100 + 900) \n                                  = 0.55\n                                  \n                               P2 = Probability of winning for Team A \n                                  = 900 \/ (1100 + 900) \n                                  = 0.45\n\n\n> Let's say team B win the match. Now the updated rating will be..\n\n                               r1_updated = r1 + k*(0-p1) \n                                          = 1100 + 30*(0-0.55) \n                                          =  1083.5\n                                          \n                               r2_updated = r2 + k*(1-p2) \n                                          = 900 + 30*(1-0.45) \n                                          = 916.5 ","f23654dc":"## Components of the Elo Ratings","a4c4c050":"### Example","23e12491":"## Introduction","81cf8839":" Elo Rating Algorithm is widely used rating algorithm that is used to rank players\/teams in many competitive games. It is widely used in chess. Players with higher ELO rating have a higher probability of winning a game than a player with lower ELO rating. After each game, ELO rating of players is updated. If a player with higher ELO rating wins, only a few points are transferred from the lower rated player. However if lower rated player wins, then transferred points from a higher rated player are far greater.","ddb196cc":"## ELO RATING CALCULATION","c9bf6a70":"#### In the below section of the code we will apply all the above mentioned technique to ipl teams and will check how the elo rating changes after each seasons","f181be59":"Elo is mainly designed to rate chess players. Here in our analysis we will apply the elo rating concept on ipl teams. \n<br>\nThere are mainly three main component of this rating system. \n> <br>\n<br>\n<b> 1. Intial Ratings <\/b> - At starting every players are assigned with a default score. This default score definitely has  influence on the ratings. The intials ratings are some sort of baseline . At any given point in time if a player's rating is below the intials ratings that means that player is performing badly. At the same time if a player's rating is eventually higher than the baseline rating then we can say this player is performing pretty well. \n\n> <br>\n<br>\n<b> 2. Probability of Winning <\/b> - In a match between two players the probability of winning will be same for both the player if the rating of the players are same. Now As we are analysing a cricket match we changed the formula for calculating the probablity of a team. \n\n                                     r1 = Rating of Team A. \n                                     r2 = Rating of Team B.\n                                     P1 = Probability of winning for Team A.\n                                     P2 = Probability of winning for Team B.\n\n> In our analysis we used the below formula for probability calculation..\n                                     \n                                     P1 = r1 \/ (r1+r2)\n                                     P2 = r2 \/ (r1+r2)\n\n> ** In actual elo rating system for chess player ranking, the probability calculation formula is bit different.\n\n> <br>\n> <b> 3. Rating Shifting Factor <\/b> - This is basically a parameter or factor by which rating's from lossing team to be shifted to wining team. It is denoted as <b>'K'<\/b>. \n> <br>\n> After every game the rating is updated for both team using the below formula.. \n> <br>\n> <br>\n\n                                     CASE-1 : Suppose Team A wins:\n                                     \n                                     r1 = r1 + k*(1 \u2013 P1) \n                                     r2 = r2 + k*(0 \u2013 P2)\n\n\n                                     CASE-2 : Suppose Team B wins:\n\n                                     r1 = r1 + k*(0 \u2013 P1) \n                                     r2 = r2 + k*(1 \u2013 P2)\n\n>  K is a constant. If K is of a lower value, then the rating is changed by a small fraction but if K is of a higher value,  then the changes in the rating are significant. Different organizations set a different value of K.\n<br>","c34b4627":"Here We take some default values to start our analysis. \n\n* **Intials rating of all the teams are set to 1000. Its basically the default rating just before the tournament starts on 2008.** \n* **The value of k is set to 30.** \n\nPlease feel free to choose any values as per your assumption. ","a8ae75f2":"#### In this notebook we will rate each ipl team using a technique called ELO Rating System. This technique is usally used in chess to rate various player. But here with cetain assumption and changes we will rate each ipl team based on all the matched they played starting from 2008 till 2019. \n\n   ![dhoni-759-6.jpg](attachment:dhoni-759-6.jpg)"}}