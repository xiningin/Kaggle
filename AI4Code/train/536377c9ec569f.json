{"cell_type":{"0564d726":"code","98e81752":"code","a953800a":"code","4ed90099":"code","54095c60":"code","ad62913f":"code","08540246":"code","5b3c7c0a":"code","4491b9a7":"code","a2baae25":"code","5cb53cef":"code","266b04e8":"code","c9b8aac2":"code","19ac89b1":"code","e1ad1f0c":"code","7b041ca1":"code","f14ea99e":"code","feda7496":"code","7dbfb530":"code","9670b7cc":"code","0792c6bd":"markdown","c604d2e9":"markdown","e275376b":"markdown","bc992929":"markdown","c1cf57a3":"markdown","e83e68b7":"markdown","359902ac":"markdown","9ef94e82":"markdown","4230ce0b":"markdown","c1fd6190":"markdown","48020805":"markdown","9d71238e":"markdown","9570fe43":"markdown","726dfcd6":"markdown"},"source":{"0564d726":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import svm\nimport seaborn as sns\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn import metrics\nfrom sklearn.ensemble import GradientBoostingClassifier","98e81752":"df=pd.read_csv('..\/input\/iris\/Iris.csv')\ndf.head(150)","a953800a":"df.rename(columns={'SepalLengthCm':'SL','SepalWidthCm':'SW','PetalLengthCm':'PL','PetalWidthCm':'PW'},inplace=True)","4ed90099":"sns.distplot(df['SL'],bins=50)","54095c60":"sns.distplot(df['PL'],bins=50,color='purple')","ad62913f":"sns.distplot(df['SW'],bins=50,color='green')","08540246":"sns.distplot(df['PW'],bins=50,color='red')","5b3c7c0a":"df.drop('Id',axis=1,inplace=True)","4491b9a7":"sns.boxplot(data=df.drop('Species',axis=1),palette='Set2')","a2baae25":"df.isna().sum()","5cb53cef":"df['Species'].value_counts()","266b04e8":"lenc=LabelEncoder()\ndf['Species']=lenc.fit_transform(df['Species'])\n\ndf.head()","c9b8aac2":"df['Species'].value_counts()","19ac89b1":"X=df.iloc[:,:-1]\ny=df['Species']","e1ad1f0c":"Xtrain,Xtest,ytrain,ytest=train_test_split(X,y,test_size=0.2,random_state=12)","7b041ca1":"scale=StandardScaler()\nXtrain=scale.fit_transform(Xtrain)\nXtest=scale.transform(Xtest)","f14ea99e":"logreg=LogisticRegression()\nlogreg.fit(Xtrain,ytrain)\nyprd=logreg.predict(Xtest)\nsc=accuracy_score(ytest,yprd)\nprint('Accuracy score: {}'.format(round(sc*100),2))","feda7496":"mod=svm.SVC()\nmod.fit(Xtrain,ytrain)\nyspred=mod.predict(Xtest)\nsco=accuracy_score(ytest,yspred)\nprint('Accuracy score: {}'.format(round(sco*100),2))","7dbfb530":"gb=GradientBoostingClassifier(n_estimators=20,learning_rate=0.1,max_depth=2)\ngb.fit(Xtrain,ytrain)\nypred=gb.predict(Xtest)\nscc=accuracy_score(ytest,ypred)\nprint('Learning rate: 0.1')\nprint('Accuracy score: {}'.format(round(scc*100),2))\nprint('Root Mean Squared Error:', round(np.sqrt(metrics.mean_squared_error(ytest,ypred)),2))","9670b7cc":"X_new=[[1,0.5,0.3,0.2]]\nygb=gb.predict(X_new)\nif ygb==[0]:\n    print('Iris-setosa')\nelif ygb==[1]:\n    print('Iris-versicolor')\nelse:\n    print('Iris-virginica')","0792c6bd":"# Visualizing the data","c604d2e9":"# Scaling the data","e275376b":"# Importing all the necessary modules","bc992929":"# Splitting the dataset into training and testing data","c1cf57a3":"Logistic Regression","e83e68b7":"Dropping the unwanted ID column","359902ac":"# Classifying different Iris species based on their sepal and petal characteristics","9ef94e82":"Gradient Boosting","4230ce0b":"**Reading the data and renaming columns for quicker access**","c1fd6190":"Support Vector Machine","48020805":"Converting the 3 different species from strings to numbers using Label encoding","9d71238e":"# Predicting the species of Iris flower for a given set of input values using Gradient Boosting","9570fe43":"Checking for null values ","726dfcd6":"# Using 3 different models and checking the accuracy of each one"}}