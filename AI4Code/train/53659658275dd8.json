{"cell_type":{"3b596cd9":"code","7e11648d":"code","5bbbf517":"code","430df87c":"code","42028d2d":"code","34c8634c":"code","78345147":"code","5c82efe4":"code","362fc025":"markdown","1267bb6b":"markdown","fc05ca95":"markdown","ba9b23ee":"markdown","b3db0a4d":"markdown","e8376189":"markdown","4bb31135":"markdown","a15802d0":"markdown","7c86485e":"markdown","e1446296":"markdown","9b9eb167":"markdown"},"source":{"3b596cd9":"import pandas as pd\nimport numpy as np","7e11648d":"dummy_data1 = {\n        'id': ['1', '2', '3', '4', '5'],\n        'Feature1': ['A', 'C', 'E', 'G', 'I'],\n        'Feature2': ['B', 'D', 'F', 'H', 'J']}\n\ndf1 = pd.DataFrame(dummy_data1, columns = ['id', 'Feature1', 'Feature2'])\n\ndf1","5bbbf517":"dummy_data2 = {\n        'id': ['1', '2', '6', '7', '8'],\n        'Feature1': ['K', 'M', 'O', 'Q', 'S'],\n        'Feature2': ['L', 'N', 'P', 'R', 'T']}\ndf2 = pd.DataFrame(dummy_data2, columns = ['id', 'Feature1', 'Feature2'])\n\ndf2","430df87c":"dummy_data3 = {\n        'id': ['1', '2', '3', '4', '5', '7', '8', '9', '10', '11'],\n        'Feature3': [12, 13, 14, 15, 16, 17, 15, 12, 13, 23]}\ndf3 = pd.DataFrame(dummy_data3, columns = ['id', 'Feature3'])\n\ndf3","42028d2d":"df_row = pd.concat([df1, df2],ignore_index=True)\n\ndf_row","34c8634c":"df_merge_col=pd.merge(df_row,df3,on='id')","78345147":"df_merge_col","5c82efe4":"df_merge_difkey = pd.merge(df_row, df3, left_on='id', right_on='id')\n\ndf_merge_difkey","362fc025":"<a id=\"section302\"><\/a>\n### 3.2 Merge DataFrames\n","1267bb6b":"You can notice that the DataFrames are now merged into a single DataFrame based on the __common values present__ in the __id column__ of both the DataFrames. \n    - For example, here id value 1 was present with both A, B and K, L in the DataFrame df_row hence this id got repeated twice in the final DataFrame df_merge_col with repeated value 12 of Feature3 which came from DataFrame df3.","fc05ca95":"[Read here more cases of concat](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/user_guide\/merging.html)","ba9b23ee":"### Case 2","b3db0a4d":"It might happen that the column on which you want to merge the DataFrames have different names (unlike in this case). For such merges, you will have to specify the arguments __left_on__ as the left DataFrame name and __right_on__ as the right DataFrame name, like :","e8376189":"<center><img src=\"https:\/\/storage.googleapis.com\/kagglesdsdata\/datasets%2F784297%2F1347930%2Fdata%20Merge.png?GoogleAccessId=databundle-worker-v2@kaggle-161607.iam.gserviceaccount.com&Expires=1595219747&Signature=s1q7hSdnci%2BMvhHymlBQq5idowG4%2BXokagmIMOAWMlt86xD2iPbGT65z2v7x%2FS%2B1HKWaaqqrUlyFSCebIWFqJ4EyuVP5LcfZ01E9HzwW751DBq0glWpJZkAO7HTGR8OcNSbgLks%2FjgaM%2BTGhAYrG7ZiY4EeSYoi9G764XQyUCdMWGpP5%2FNJysES6XoJtmFivN9PlM8sa1NKCqgqw%2FQHi8xdw701q2pEqrkfpIzqD3iGybV1f9WdCYa0zjCAF%2BPSRWHD%2Fw9Tqwnw9YfFsZu%2FgNdHjkiAgupe9pGJatda7uZO0U8Hsqb8c0Sofbvg0U0tc2YkpJ8Fywzd%2BVn5QPkeDiw%3D%3D\"\/><\/center>","4bb31135":"<img src=\"https:\/\/shanelynnwebsite-mid9n9g1q9y8tt.netdna-ssl.com\/wp-content\/uploads\/2017\/03\/pandas-merge-join-different-variable-names-copy-e1488722312527.jpg\"\/>","a15802d0":"<a id=\"section3\"><\/a>\n## 3. Create dataframe to perform different operations","7c86485e":"DataFrames df_row (which you created by concatenating __df1__ and __df2__ along the row) and __df3__ on the common column (or key) __id__.","e1446296":"<a id=\"section301\"><\/a>\n### 3.1 Concatenate DataFrames","9b9eb167":"### Case 1"}}