{"cell_type":{"f2a2f8e8":"code","d41e9010":"code","dc24c886":"code","d8f33991":"code","f15fae81":"code","17f0f6c2":"code","4e380285":"code","6e4d89c5":"code","1208ee19":"markdown","49a3843a":"markdown","b2fca530":"markdown","5ecdfff4":"markdown","5529e850":"markdown","3f9b0e32":"markdown"},"source":{"f2a2f8e8":"# !pip install pandas==1.1.3\n# !pip install numpy==1.18.5\n# !pip install matplotlib==3.2.1\n# !pip install ipython==7.13.0\n# !pip install lightgbm==2.3.1\n# !pip install scikit-learn==0.23.2","d41e9010":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nfrom lightgbm import LGBMRegressor as LGBM\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import RepeatedStratifiedKFold\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\npd.set_option('display.max_rows', 1500)","dc24c886":"train_df = pd.read_csv('..\/input\/bitgrit-part-1\/train_1.csv')\ntest_df = pd.read_csv('..\/input\/bitgrit-part-1\/test_1.csv')","d8f33991":"train_df['send_timestamp']=train_df.send_timestamp.apply(lambda x: pd.to_datetime(x))\ntest_df['send_timestamp']=test_df.send_timestamp.apply(lambda x: pd.to_datetime(x))\n\ntrain_df['date'] = train_df.send_timestamp.apply(lambda x: x.date())\ntest_df['date'] = test_df.send_timestamp.apply(lambda x: x.date())\n\ndef feature_eng(dd):\n    dd['dow'] = dd.send_timestamp.apply(lambda x: x.dayofweek)\n    dd['hr']  = dd.send_timestamp.apply(lambda x: x.hour)\n    dd['tp_mode'] = (dd.shipment_mode=='Air').to_numpy()*1.0\n    dd['day'] = dd.send_timestamp.apply(lambda x: (x-pd.to_datetime('2019-02-14 05:55:30')).days)\n    \n    return dd\n\ntrain_df = feature_eng(train_df)\ntest_df = feature_eng(test_df)\n\ntrain_df_1 = train_df[((train_df.shipment_mode=='Ocean')&(train_df.destination_country=='IN'))].sort_values(by='Unnamed: 0').reset_index(drop=True).copy()\ntrain_df_2 = pd.concat([train_df, train_df_1]).drop_duplicates(keep=False).sort_values(by='Unnamed: 0').reset_index(drop=True).copy()\n\nitems_every_day = pd.concat([train_df_2, test_df], axis=0).groupby(['date', 'shipping_company']).shipment_id.count().reset_index()\nitems_every_day['item_count'] = items_every_day['shipment_id']\nitems_every_day = items_every_day.drop(columns=['shipment_id'])\n\ntrain_df_2 = train_df_2.merge(items_every_day, on=['date', 'shipping_company'])\ntest_df = test_df.merge(items_every_day, on=['date', 'shipping_company'])\n\ntest_df = test_df.sort_values(by='Unnamed: 0').reset_index(drop=True)\ntrain_df_1 = train_df_1.sort_values(by='Unnamed: 0').reset_index(drop=True)\ntrain_df_2 = train_df_2.sort_values(by='Unnamed: 0').reset_index(drop=True)","f15fae81":"train_x = train_df_2[['item_count','day','hr','dow','freight_cost','tp_mode']].to_numpy()\ntrain_y = train_df_2.shipping_time.to_numpy()\ntest_x = test_df[['item_count','day','hr','dow','freight_cost','tp_mode']].to_numpy()\n\nskf = RepeatedStratifiedKFold(n_splits=3,n_repeats=1,random_state=3062)\nfor fold, (idx_train, idx_test) in enumerate(skf.split(train_x, train_df_2['shipment_mode'])):\n    X_train, y_train = train_x[idx_train], train_y[idx_train]\n    reg = LGBM(n_estimators=35,  max_depth=6, random_state=3062,subsample=0.44,subsample_freq=4,\n                        reg_alpha=0.01,reg_lambda=0.01,num_leaves=20,min_child_samples=10,\n                        boosting_type='gbdt',learning_rate=0.15)\n    reg.fit(X_train, y_train)\n    test_df[str(fold)] = reg.predict(test_x)\n    \ntest_df['preds'] = test_df[['0','1','2']].mean(axis=1)","17f0f6c2":"reg = LinearRegression(fit_intercept=True).fit(train_df_1.hr.to_numpy().reshape(-1,1), train_df_1.shipping_time.to_numpy().reshape(-1,1))\ntest_df['lr'] = reg.predict(test_df.hr.to_numpy().reshape(-1,1)).reshape(-1)\ntest_df.loc[(test_df.shipment_mode=='Ocean')&(test_df.destination_country=='IN'),'preds'] = test_df.loc[(test_df.shipment_mode=='Ocean')&(test_df.destination_country=='IN'),'lr']","4e380285":"test_df.preds.to_csv('Submission_1.csv', index=False, header=False)","6e4d89c5":"pd.read_csv('Submission_1.csv', header=None)","1208ee19":"# Step 3: Train Models","49a3843a":"### Model 1 - for samples with desination != India and mode != Ocean ","b2fca530":"### Model 2 - Linear reg model for samples with desination = India and mode = Ocean","5ecdfff4":"# Initialize Environment","5529e850":"# Step 1: Load Data","3f9b0e32":"# Step 2: Feature Engineering"}}