{"cell_type":{"c76b2683":"code","89a7e3e7":"code","7ccf49a9":"code","b588ede6":"code","11bda362":"code","c0bba727":"code","1d779e93":"code","5a8d8d5e":"code","ae431898":"code","f77da11e":"code","a1a4e0dd":"code","47b5ee79":"markdown","f15aeeef":"markdown","39715ffe":"markdown","6488c0cf":"markdown","a09c58d6":"markdown","a86fd46a":"markdown","b5e038af":"markdown"},"source":{"c76b2683":"#setting up out enviroment\nimport warnings\nwarnings.filterwarnings('ignore')\n\n#setting up our enviroment\n%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","89a7e3e7":"#importing libraries\nfrom fastai import *\nfrom fastai.vision import *\nfrom fastai.metrics import error_rate\nimport os\nimport pandas as pd\nimport numpy as np","7ccf49a9":"#initializing the data path\nx  = '..\/input\/natural-images\/natural_images\/'\npath = Path(x)\npath.ls()","b588ede6":"np.random.seed(40)\ndata = ImageDataBunch.from_folder(path, train = '.', valid_pct=0.2,\n                                  ds_tfms=get_transforms(), size=224,\n                                  num_workers=4).normalize(imagenet_stats)","11bda362":"data.classes","c0bba727":"data.show_batch(3, fig_size=(7,6))\ndata.classes","1d779e93":"learn = cnn_learner(data, models.resnet34, metrics=accuracy, callback_fns=ShowGraph)\n","5a8d8d5e":"learn.fit_one_cycle(4)","ae431898":"interp = ClassificationInterpretation.from_learner(learn)","f77da11e":"interp.plot_confusion_matrix(figsize=(12,12), dpi=60)","a1a4e0dd":"interp.plot_top_losses(9, figsize=(15,11))","47b5ee79":"**Results**\n\n\nTo interpret the results, we can use fastai\u2019s ClassificationInterpretation class. To create an interpretation object we need to call the from_learner method and pass it our learner\/model.","f15aeeef":"# Solving Natural_Image Classification using FastAI","39715ffe":"**Model creation and training**\n\n\nImage classification is usually done using convolutional neural networks. Fastai\u2019s learner lets you create models within few lines of code. Convolutional neural network can be directly created using method called cnn_learner. This method takes two arguments namely data and model architecture, but also supports additional arguments for customizing the model. For our model, we would be using resnet34 architecture with weights pretrained on imagenets. To fit the model, we would be using fit_one_cycle method which basically changes the learning rate to achieve better results. By default, only top fully connected layers are unfrozen (which can be trained).","6488c0cf":"We can observe that the final accuracy of the model is 99.7099% which is quite outstanding","a09c58d6":"**What is fast.ai?**\n\nIt is an opensource deep learning framework built on Pytorch co-founded by Jeremy Howard and Rachel Thomas. The motto of this framework is to make deep learning accessible to professionals from different backgrounds. It contains high-level components that can easily provide state-of-the-art results in standard deep learning domains.","a86fd46a":"**Viewing the data**\n\nFastai contains data objects called databunches to load the dataset and train the model. To view the image data, we would be using ImageDataBunch.from_folder().","b5e038af":"**Dataset**\n\nThe dataset contains images enclosed in six different folders labelled with their respective classes ['airplane', 'car', 'cat', 'dog', 'flower', 'fruit', 'motorbike', 'person']"}}