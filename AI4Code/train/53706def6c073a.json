{"cell_type":{"a45f9f3b":"code","0f63a554":"code","0b6a0d53":"code","41178173":"code","d2aec008":"code","4f0345c0":"code","960ad73d":"code","b4328ff3":"code","799a9678":"code","ee0167bc":"code","d4b872f8":"code","683d4218":"code","63c78894":"code","b026e840":"code","2fff7d53":"markdown","38bc5ed9":"markdown","a1dc64ef":"markdown","10e0b2ca":"markdown","0a8ead9c":"markdown","ac29ebf0":"markdown","b7ee6644":"markdown"},"source":{"a45f9f3b":"import pandas as pd\nimport numpy as np\nfrom scipy import stats\nfrom bokeh.io import output_file,show,output_notebook,push_notebook, curdoc\nfrom bokeh.plotting import figure\nfrom bokeh.models import ColumnDataSource,HoverTool,CategoricalColorMapper, LabelSet, Title, HoverTool, Label, Legend, Span, Scatter, Plot\nfrom bokeh.layouts import row,column,gridplot\nfrom bokeh.models.widgets import Tabs,Panel\noutput_notebook()\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","0f63a554":"df = pd.read_csv(\"\/kaggle\/input\/women-entrepreneurship-and-labor-force\/Dataset3.csv\", delimiter=';', encoding = \"ISO-8859-1\")\ndf.head()","0b6a0d53":"group_by_dev = df \\\n    .groupby('Level of development', as_index = False) \\\n    .agg({'No' : 'count'}) \\\n    .rename(columns = {'No' : 'count'})\n\ncurdoc().theme = 'dark_minimal'  # choose theme, link - https:\/\/docs.bokeh.org\/en\/latest\/docs\/reference\/themes.html#module-bokeh.themes\n\np = figure(\n    x_range = group_by_dev['Level of development'])    # create figure\n\np.vbar(\n    x = group_by_dev['Level of development'], # x\n    top = group_by_dev['count'], # y\n    width = 0.5, # bar width,\n    color = 'crimson', # bar color\n    line_color = 'white', # outline color\n    line_width = 1 # outline width\n    )\n\n# title\np.title.text = 'Number of countries by level of developmet'  # title text\np.title.align = 'left' # title location\np.title.text_color = 'white' # title color\np.title.text_font_size = '24px' # text size\np.title.text_font = 'Serif' # text font\np.title.offset = -50 # title location (x axis)\n\n# axis\np.yaxis.axis_label = 'Count' # text \np.yaxis.axis_label_text_color = 'white' # color\np.yaxis.axis_label_text_font_size = '20px' # text size\np.yaxis.axis_label_text_font = 'Serif' # text font (label)\np.yaxis.major_label_text_font = 'Serif' # text font (ticks)\n\np.xaxis.axis_label = 'Level of development' # text \np.xaxis.axis_label_text_color = 'white' # color\np.xaxis.axis_label_text_font_size = '20px' # text size\np.xaxis.axis_label_text_font = 'Serif' # text font (label)\np.xaxis.major_label_text_font = 'Serif' # text font (ticks)\n\n# annotation\nsource = ColumnDataSource(dict(\n    x = group_by_dev['Level of development'], \n    y = group_by_dev['count'])) # create dict for LabelSet\n\nlabels = LabelSet(\n    x = 'x', # location (x axis)\n    y = 'y', # location (y axis)\n    text = 'y', # text\n    x_offset = 0, # x axis offset\n    y_offset = 0, # y axis offset\n    source = source, # dict with data\n    text_font_size = {'value': '14px'}, # text size\n    text_color = 'white', # text color\n    text_font = 'Serif') # text font\n\n# annotation\n\nann_1 = Label(\n    text = str(group_by_dev['count'][0]),\n    x = 115,\n    x_units = 'screen',\n    y = 27,\n    text_color = 'white',\n    text_font = 'Serif',\n    text_font_size = '16px')\n\nann_2 = Label(\n    text = str(group_by_dev['count'][1]),\n    x = 380,\n    x_units = 'screen',\n    y = 24,\n    text_color = 'white',\n    text_font = 'Serif',\n    text_font_size = '16px')\n\np.xgrid.grid_line_color = None # off grid line (x axis)\n\np.add_layout(labels)\np.add_layout(ann_1)\np.add_layout(ann_2)\n\n\nshow(p)","41178173":"group_by_eum = df \\\n    .groupby('European Union Membership', as_index = False) \\\n    .agg({'No' : 'count'}) \\\n    .rename(columns = {'No' : 'count'})\n\ncurdoc().theme = 'dark_minimal'  # choose theme, link - https:\/\/docs.bokeh.org\/en\/latest\/docs\/reference\/themes.html#module-bokeh.themes\n\np = figure(x_range = group_by_eum['European Union Membership'])    # create figure\n\np.vbar(\n    x = group_by_eum['European Union Membership'], # x\n    top = group_by_eum['count'], # y\n    width = 0.5, # bar width,\n    color = 'crimson', # bar color\n    line_color = 'white', # outline color\n    line_width = 1 # outline width\n    )\n\n# title\np.title.text = 'Number of countries by European Union Membership'  # title text\np.title.align = 'left' # title location\np.title.text_color = 'white' # title color\np.title.text_font_size = '24px' # text size\np.title.text_font = 'Serif' # text font\np.title.offset = -50 # title location (x axis)\n\n# axis\np.yaxis.axis_label = 'Count' # text \np.yaxis.axis_label_text_color = 'white' # color\np.yaxis.axis_label_text_font_size = '20px' # text size\np.yaxis.axis_label_text_font = 'Serif' # text font (label)\np.yaxis.major_label_text_font = 'Serif' # text font (ticks)\n\np.xaxis.axis_label = 'European Union Membership' # text \np.xaxis.axis_label_text_color = 'white' # color\np.xaxis.axis_label_text_font_size = '20px' # text size\np.xaxis.axis_label_text_font = 'Serif' # text font (label)\np.xaxis.major_label_text_font = 'Serif' # text font (ticks)\n\n# annotation\n\nann_1 = Label(\n    text = str(group_by_eum['count'][0]),\n    x = 115,\n    x_units = 'screen',\n    y = 20,\n    text_color = 'white',\n    text_font = 'Serif',\n    text_font_size = '16px')\n\nann_2 = Label(\n    text = str(group_by_eum['count'][1]),\n    x = 380,\n    x_units = 'screen',\n    y = 31,\n    text_color = 'white',\n    text_font = 'Serif',\n    text_font_size = '16px')\n\np.xgrid.grid_line_color = None # off grid line (x axis)\n\np.add_layout(labels)\np.add_layout(ann_1)\np.add_layout(ann_2)\n\n\nshow(p)","d2aec008":"cross_dev_mem = pd.crosstab(df['Level of development'], df['European Union Membership']).reset_index()\n\nlevels = cross_dev_mem['Level of development']\nmembers = ['Member', 'Not Member']\ncolors = ['#f06580', 'crimson']\n\ndata = {'level' : levels,\n        'Member'   : cross_dev_mem['Member'],\n        'Not Member'   : cross_dev_mem['Not Member']}\n\np = figure(\n    x_range = levels)\n\np.vbar_stack(\n    members, \n    x='level', \n    width=0.5, \n    color=colors, \n    source=data,\n    legend_label = members,\n    line_color = 'white', # outline color\n    line_width = 1 # outline width\n    )\n\n# title\np.title.text = 'Member\/Not Member by Level of Development'  # title text\np.title.align = 'left' # title location\np.title.text_color = 'white' # title color\np.title.text_font_size = '24px' # text size\np.title.text_font = 'Serif' # text font\np.title.offset = -50 # title location (x axis)\n\n# legend\np.legend.label_text_font_size = '15px' # legend text size\np.legend.label_text_font = 'Serif' # legend text font\np.legend.background_fill_alpha = 0 # background opacity\np.legend.location = (390, 420) # legend location\n\n# axis\np.yaxis.axis_label = 'Count' # text \np.yaxis.axis_label_text_color = 'white' # color\np.yaxis.axis_label_text_font_size = '20px' # text size\np.yaxis.axis_label_text_font = 'Serif' # text font (label)\np.yaxis.major_label_text_font = 'Serif' # text font (ticks)\n\np.xaxis.axis_label = 'Level of Development' # text \np.xaxis.axis_label_text_color = 'white' # color\np.xaxis.axis_label_text_font_size = '20px' # text size\np.xaxis.axis_label_text_font = 'Serif' # text font (label)\np.xaxis.major_label_text_font = 'Serif' # text font (ticks)\n\n# annotation\nann_1 = Label(\n    text = str(cross_dev_mem['Member'][0]),\n    x = 115,\n    x_units = 'screen',\n    y = cross_dev_mem['Member'][0]-10,\n    text_color = 'white',\n    text_font = 'Serif',\n    text_font_size = '16px')\n\nann_2 = Label(\n    text = str(cross_dev_mem['Not Member'][0]),\n    x = 115,\n    x_units = 'screen',\n    y = cross_dev_mem['Not Member'][0] + 16,\n    text_color = 'white',\n    text_font = 'Serif',\n    text_font_size = '16px')\n\nann_3 = Label(\n    text = str(cross_dev_mem['Not Member'][1]),\n    x = 375,\n    x_units = 'screen',\n    y = cross_dev_mem['Not Member'][1]\/2,\n    text_color = 'white',\n    text_font = 'Serif',\n    text_font_size = '16px')\n\n\np.xgrid.grid_line_color = None # off grid line (x axis)\n\np.add_layout(ann_1)\np.add_layout(ann_2)\np.add_layout(ann_3)\n\nshow(p)","4f0345c0":"prob = 0.95\nstat, p, dof, expected = stats.chi2_contingency(pd.crosstab(df['Level of development'], df['European Union Membership']))\nalpha = 1.0 - prob\nif p <= alpha:\n    print('Reject H0')\nelse:\n    print('No reject H0')","960ad73d":"p = figure(width = 700)\n\nhist, edges = np.histogram(df['Women Entrepreneurship Index'], density=True, bins=10)\n\np.quad(\n    top = hist, \n    bottom=0, \n    left=edges[:-1], \n    right=edges[1:],\n    fill_color = 'crimson', \n    line_color = 'white',\n    line_width = 1)\n\n# title\np.title.text = 'Women Entrepreneurship Index'  # title text\np.title.align = 'left' # title location\np.title.text_color = 'white' # title color\np.title.text_font_size = '24px' # text size\np.title.text_font = 'Serif' # text font\np.title.offset = -50 # title location (x axis)\n\n# axis\np.yaxis.axis_label = 'Density' # text \np.yaxis.axis_label_text_color = 'white' # color\np.yaxis.axis_label_text_font_size = '20px' # text size\np.yaxis.axis_label_text_font = 'Serif' # text font (label)\np.yaxis.major_label_text_font = 'Serif' # text font (ticks)\n\np.xaxis.axis_label = 'Women Entrepreneurship Index' # text \np.xaxis.axis_label_text_color = 'white' # color\np.xaxis.axis_label_text_font_size = '20px' # text size\np.xaxis.axis_label_text_font = 'Serif' # text font (label)\np.xaxis.major_label_text_font = 'Serif' # text font (ticks)\n\n# line\nmedian = Span(\n    location = (df['Women Entrepreneurship Index'].median()),\n    dimension = 'height', \n    line_color = 'white',\n    line_dash = 'dashed', \n    line_width = 3)\n\n# annotation\nann = Label(\n    text = f'''median - {df['Women Entrepreneurship Index'].median()}''',\n    x = df['Women Entrepreneurship Index'].median() + 1,\n    y = 0.035,\n    text_color = 'white',\n    text_font = 'Serif',\n    text_font_size = '16px')\n\n\n\np.add_layout(median)\np.add_layout(ann)\n\nshow(p)","b4328ff3":"p = figure(width = 700)\n\nhist1, edges = np.histogram(df[df['European Union Membership'] == 'Member']['Women Entrepreneurship Index'], density=True, bins=10)\nhist2, edges = np.histogram(df[df['European Union Membership'] == 'Not Member']['Women Entrepreneurship Index'], density=True, bins=10)\n\np.quad(\n    top = hist1, \n    bottom=0, \n    left=edges[:-1], \n    right=edges[1:],\n    fill_color = '#f06580', \n    line_color = 'white',\n    line_width = 1,\n    legend_label = 'Member')\n\np.quad(\n    top = hist2, \n    bottom=0, \n    left=edges[:-1], \n    right=edges[1:],\n    fill_color = 'crimson', \n    line_color = 'white',\n    line_width = 1,\n    legend_label = 'Not Member')\n\n# title\np.title.text = 'Women Entrepreneurship Index By European Union Membership'  # title text\np.title.align = 'left' # title location\np.title.text_color = 'white' # title color\np.title.text_font_size = '24px' # text size\np.title.text_font = 'Serif' # text font\np.title.offset = -50 # title location (x axis)\n\n# axis\np.yaxis.axis_label = 'Density' # text \np.yaxis.axis_label_text_color = 'white' # color\np.yaxis.axis_label_text_font_size = '20px' # text size\np.yaxis.axis_label_text_font = 'Serif' # text font (label)\np.yaxis.major_label_text_font = 'Serif' # text font (ticks)\n\np.xaxis.axis_label = 'Women Entrepreneurship Index' # text \np.xaxis.axis_label_text_color = 'white' # color\np.xaxis.axis_label_text_font_size = '20px' # text size\np.xaxis.axis_label_text_font = 'Serif' # text font (label)\np.xaxis.major_label_text_font = 'Serif' # text font (ticks)\n\n# legend\np.legend.label_text_font_size = '15px' # legend text size\np.legend.label_text_font = 'Serif' # legend text font\np.legend.background_fill_alpha = 0 # background opacity\np.legend.location = (390, 390) # legend location\n\nshow(p)","799a9678":"alpha = 0.05\nstat, p = stats.mannwhitneyu(df[df['European Union Membership'] == 'Member']['Women Entrepreneurship Index'],\n                   df[df['European Union Membership'] == 'Not Member']['Women Entrepreneurship Index'])\nif p <= alpha:\n    print('Reject H0')\nelse:\n    print('No reject H0')","ee0167bc":"p = figure(width = 700)\n\nhist, edges = np.histogram(df['Entrepreneurship Index'], density=True, bins=10)\n\np.quad(\n    top = hist, \n    bottom=0, \n    left=edges[:-1], \n    right=edges[1:],\n    fill_color = 'crimson', \n    line_color = 'white',\n    line_width = 1)\n\n# title\np.title.text = 'Entrepreneurship Index'  # title text\np.title.align = 'left' # title location\np.title.text_color = 'white' # title color\np.title.text_font_size = '24px' # text size\np.title.text_font = 'Serif' # text font\np.title.offset = -50 # title location (x axis)\n\n# axis\np.yaxis.axis_label = 'Density' # text \np.yaxis.axis_label_text_color = 'white' # color\np.yaxis.axis_label_text_font_size = '20px' # text size\np.yaxis.axis_label_text_font = 'Serif' # text font (label)\np.yaxis.major_label_text_font = 'Serif' # text font (ticks)\n\np.xaxis.axis_label = 'Entrepreneurship Index' # text \np.xaxis.axis_label_text_color = 'white' # color\np.xaxis.axis_label_text_font_size = '20px' # text size\np.xaxis.axis_label_text_font = 'Serif' # text font (label)\np.xaxis.major_label_text_font = 'Serif' # text font (ticks)\n\n# line\nmedian = Span(\n    location = (df['Entrepreneurship Index'].median()),\n    dimension = 'height', \n    line_color = 'white',\n    line_dash = 'dashed', \n    line_width = 3)\n\n# annotation\nann = Label(\n    text = f'''median - {df['Entrepreneurship Index'].median()}''',\n    x = df['Entrepreneurship Index'].median() + 1,\n    y = 0.025,\n    text_color = 'white',\n    text_font = 'Serif',\n    text_font_size = '16px')\n\n\n\np.add_layout(median)\np.add_layout(ann)\n\nshow(p)","d4b872f8":"p = figure(width = 700)\n\nhist1, edges = np.histogram(df[df['European Union Membership'] == 'Member']['Entrepreneurship Index'], density=True, bins=10)\nhist2, edges = np.histogram(df[df['European Union Membership'] == 'Not Member']['Entrepreneurship Index'], density=True, bins=10)\n\np.quad(\n    top = hist1, \n    bottom=0, \n    left=edges[:-1], \n    right=edges[1:],\n    fill_color = '#f06580', \n    line_color = 'white',\n    line_width = 1,\n    legend_label = 'Member')\n\np.quad(\n    top = hist2, \n    bottom=0, \n    left=edges[:-1], \n    right=edges[1:],\n    fill_color = 'crimson', \n    line_color = 'white',\n    line_width = 1,\n    legend_label = 'Not Member')\n\n# title\np.title.text = 'Entrepreneurship Index By European Union Membership'  # title text\np.title.align = 'left' # title location\np.title.text_color = 'white' # title color\np.title.text_font_size = '24px' # text size\np.title.text_font = 'Serif' # text font\np.title.offset = -50 # title location (x axis)\n\n# axis\np.yaxis.axis_label = 'Density' # text \np.yaxis.axis_label_text_color = 'white' # color\np.yaxis.axis_label_text_font_size = '20px' # text size\np.yaxis.axis_label_text_font = 'Serif' # text font (label)\np.yaxis.major_label_text_font = 'Serif' # text font (ticks)\n\np.xaxis.axis_label = 'Entrepreneurship Index' # text \np.xaxis.axis_label_text_color = 'white' # color\np.xaxis.axis_label_text_font_size = '20px' # text size\np.xaxis.axis_label_text_font = 'Serif' # text font (label)\np.xaxis.major_label_text_font = 'Serif' # text font (ticks)\n\n# legend\np.legend.label_text_font_size = '15px' # legend text size\np.legend.label_text_font = 'Serif' # legend text font\np.legend.background_fill_alpha = 0 # background opacity\np.legend.location = (330, 390) # legend location\n\nshow(p)","683d4218":"alpha = 0.05\nstat, p = stats.mannwhitneyu(df[df['European Union Membership'] == 'Member']['Entrepreneurship Index'],\n                   df[df['European Union Membership'] == 'Not Member']['Entrepreneurship Index'])\nif p <= alpha:\n    print('Reject H0')\nelse:\n    print('No reject H0')","63c78894":"p = figure(width = 700)\nsource = ColumnDataSource(dict(\n    x = df['Entrepreneurship Index'], \n    y = df['Women Entrepreneurship Index']))\np.circle(x='x',\n         y='y',\n         source = source,\n         size = 10,\n         alpha=0.7,\n         color='crimson')\n\n# title\np.title.text = 'Relation between Entrepreneurship Index and  Women Entrepreneurship Index'  # title text\np.title.align = 'left' # title location\np.title.text_color = 'white' # title color\np.title.text_font_size = '24px' # text size\np.title.text_font = 'Serif' # text font\np.title.offset = -50 # title location (x axis)\n\n# axis\np.yaxis.axis_label = 'Women Entrepreneurship Index' # text \np.yaxis.axis_label_text_color = 'white' # color\np.yaxis.axis_label_text_font_size = '20px' # text size\np.yaxis.axis_label_text_font = 'Serif' # text font (label)\np.yaxis.major_label_text_font = 'Serif' # text font (ticks)\n\np.xaxis.axis_label = 'Entrepreneurship Index' # text \np.xaxis.axis_label_text_color = 'white' # color\np.xaxis.axis_label_text_font_size = '20px' # text size\np.xaxis.axis_label_text_font = 'Serif' # text font (label)\np.xaxis.major_label_text_font = 'Serif' # text font (ticks)\n\n\nshow(p)","b026e840":"p, corr = stats.spearmanr(df['Entrepreneurship Index'], df['Women Entrepreneurship Index'])\nalpha = 0.05\nif p <= alpha:\n    if corr < 0:\n        if -1 <= corr <= -0.9:\n            print(f'''p-value = {p}, correlation = {corr} (statistically significant very high negative relationship)''')\n        elif -0.9 < corr <= -0.7:\n            print(f'''p-value = {p}, correlation = {corr} (statistically significant high negative relationship)''')\n        elif -0.7 < corr <= -0.5:\n            print(f'''p-value = {p}, correlation = {corr} (statistically significant medium negative relationship)''')\n        elif -0.5 < corr <= 0.3:\n            print(f'''p-value = {p}, correlation = {corr} (statistically significant weak negative relationship)''')\n        else:\n            print(f'''p-value = {p}, correlation = {corr} (statistically significant very weak negative relationship)''')\n    else:\n        if 1 <= corr <= 0.9:\n            print(f'''p-value = {p}, correlation = {corr} (statistically significant very high positive relationship)''')\n        elif 0.9 < corr <= 0.7:\n            print(f'''p-value = {p}, correlation = {corr} (statistically significant high positive relationship)''')\n        elif 0.7 < corr <= 0.5:\n            print(f'''p-value = {p}, correlation = {corr} (statistically significant medium positive relationship)''')\n        elif 0.5 < corr <= 0.3:\n            print(f'''p-value = {p}, correlation = {corr} (statistically significant weak positive relationship)''')\n        else:\n            print(f'''p-value = {p}, correlation = {corr} (statistically significant very weak positive relationship)''')\n            \nif p > alpha:\n    if corr < 0:\n        if -1 <= corr <= -0.9:\n            print(f'''p-value = {p}, correlation = {corr} (statistically significant very high negative relationship)''')\n        elif -0.9 < corr <= -0.7:\n            print(f'''p-value = {p}, correlation = {corr} (statistically significant high negative relationship)''')\n        elif -0.7 < corr <= -0.5:\n            print(f'''p-value = {p}, correlation = {corr} (statistically significant medium negative relationship)''')\n        elif -0.5 < corr <= 0.3:\n            print(f'''p-value = {p}, correlation = {corr} (statistically significant weak negative relationship)''')\n        else:\n            print(f'''p-value = {p}, correlation = {corr} (statistically significant very weak negative relationship)''')\n    else:\n        if 1 <= corr <= 0.9:\n            print(f'''p-value = {p}, correlation = {corr} (statistically significant very high positive relationship)''')\n        elif 0.9 < corr <= 0.7:\n            print(f'''p-value = {p}, correlation = {corr} (statistically significant high positive relationship)''')\n        elif 0.7 < corr <= 0.5:\n            print(f'''p-value = {p}, correlation = {corr} (statistically significant medium positive relationship)''')\n        elif 0.5 < corr <= 0.3:\n            print(f'''p-value = {p}, correlation = {corr} (statistically significant weak positive relationship)''')\n        else:\n            print(f'''p-value = {p}, correlation = {corr} (statistically significant very weak positive relationship)''')","2fff7d53":"**Null hypothesis:** Level of Development and European Union Membership are independent Null hypothesis: Level of Development and European Union Membership are independent from each other","38bc5ed9":"**Null hypothesis:** There is no statistically significant difference between Meber and Not Member (Women Entrepreneurship Index)","a1dc64ef":"# Task 3. Is there a statistically significant relationship between Women's Entrepreneurship Index and Global Entrepreneurship Index values? (Method Spearman Correlation Coefficient)","10e0b2ca":"**Null hypothesis:** There is no statistically significant difference between Meber and Not Member (Entrepreneurship Index)","0a8ead9c":"# Task 1. Are European Union membership variable and development variable independent from each other? (Method Chi-Square Test and Crosstab)","ac29ebf0":"# Task 2. Do the Women Entrepreneurship Index and Global Entrepreneurship Index values show a statistically significant difference between the countries that are members of the European Union and not? (Method Mann-Whitney U)","b7ee6644":"![14a3d7.jpg](attachment:14a3d7.jpg)"}}