{"cell_type":{"d61e577d":"code","22f8e5d2":"code","d17b787a":"code","938c8e75":"code","54224c7f":"code","6e41882d":"code","9c73b172":"code","4260de8d":"code","34751669":"code","2cc21395":"code","aaba715e":"code","8865e99c":"code","39e2ace1":"code","04567993":"code","d71055ac":"code","8745836f":"code","3093f061":"markdown","69988d5a":"markdown","30cea0ec":"markdown","d617da61":"markdown","5fb37039":"markdown","6cd9d24f":"markdown","21e48cf7":"markdown"},"source":{"d61e577d":"import numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom keras.models import Sequential\nfrom keras.layers import Dense,BatchNormalization\nimport matplotlib.pyplot as plt","22f8e5d2":"data = pd.read_csv('..\/input\/heart.csv')","d17b787a":"data.shape","938c8e75":"data.head()","54224c7f":"catagorialList = ['sex','cp','fbs','restecg','exang','ca','thal']\nfor item in catagorialList:\n    data[item] = data[item].astype('object')","6e41882d":"data.dtypes","9c73b172":"data = pd.get_dummies(data, drop_first=True)","4260de8d":"data.head()","34751669":"y = data['target'].values\ny = y.reshape(y.shape[0],1)\nx = data.drop(['target'],axis=1)\nminx = np.min(x)\nmaxx = np.max(x)\nx = (x - minx) \/ (maxx - minx)\nx.head()","2cc21395":"x_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.2,random_state=0)","aaba715e":"model = Sequential()\nmodel.add(Dense(12, input_dim=21, activation='sigmoid'))\nmodel.add(BatchNormalization())\nmodel.add(Dense(1, activation='sigmoid'))","8865e99c":"model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])","39e2ace1":"output = model.fit(x_train, y_train,validation_split=0.2, epochs=200, batch_size=x_train.shape[0]\/\/2)","04567993":"scores = model.evaluate(x_test, y_test)\nprint(\"\\n%s: %.2f%%\" % (model.metrics_names[1], scores[1]*100))","d71055ac":"plt.plot(output.history['acc'])\nplt.plot(output.history['val_acc'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='upper left')\nplt.savefig('Accuracy.png',dpi=100)\nplt.show()","8745836f":"plt.plot(output.history['loss'])\nplt.plot(output.history['val_loss'])\nplt.title('model loss')\nplt.ylabel('loss')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='upper left')\nplt.savefig('Loss.png',dpi=100)\nplt.show()","3093f061":"We will normalize the input features to avoid any one feature to dominate the training of neural network.\nThe factor we use in normalization will be kept to make predictions.","69988d5a":"We reached an accuracy of 88.52%.\n\nDuring the tuning of hyperparameters, the sigmoid activation seems to have a more stable accuracy than Relu function. This is mainly becaus Relu don't learn from negative prediction and learn faster in a positive prediction, thus making the model easier to overfit.\n\nHere is the summary of accuracy and loss during training from https:\/\/keras.io\/visualization\/.","30cea0ec":"According to the information of data, most of variables are catagorial. We will then process those features with pd.get_dummies().","d617da61":"First we use pandas.read_csv() to read the data, check the size and take a glance. The data is not very large so a complex neural network is very likely to overfit. To reach a higher accuracy and F-score we need to choose architecture carefully.","5fb37039":"# Heart Disease Neural Network Classifier\n\nThe data of this project comes from Kaggle.com(https:\/\/www.kaggle.com\/ronitf\/heart-disease-uci\/kernels).\nThe originl data is from UCI's Macine Learning Repository (https:\/\/archive.ics.uci.edu\/ml\/datasets\/Heart+Disease).\n\nWith data of heart diease patient, we can build a neural network model and train the model with training set to make precise predictions.","6cd9d24f":"Since the dataset is not large, we will not use cross-validation set to let neural network model have enough data to train.","21e48cf7":"In keras, It is quite convenient to setup a neural network model.We will set 21 neurons as input layer, 12 neurons in the hidden layer and an output layer."}}