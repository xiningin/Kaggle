{"cell_type":{"c73711d3":"code","75e754b1":"code","11b840a7":"code","c36ade25":"code","4de5ff56":"code","d30c5f74":"code","5d6f2504":"code","5988a1f8":"code","bac2da6e":"code","0e4aff39":"code","df27893c":"code","e6df630f":"code","0d47198e":"code","8e97a665":"code","c2d39bc5":"code","43f66a26":"code","d02af568":"code","68de1e9a":"code","304487b4":"code","f693aab6":"code","1e79c8d9":"code","03a64dd8":"markdown","fe095acd":"markdown","f5a54684":"markdown","e595e452":"markdown","349b3c75":"markdown","aca18ee9":"markdown","ca1d8a83":"markdown","a3e144f0":"markdown","d82b5971":"markdown","aacc0f58":"markdown","dbbc7372":"markdown","48c91ba4":"markdown","448fce82":"markdown","addbf1c4":"markdown","86e821e8":"markdown","81db19a7":"markdown","6e61a0bc":"markdown","03a820a2":"markdown","e8ce3a0a":"markdown","407d3d83":"markdown","6f7fcffd":"markdown","55dd6eb5":"markdown","7dbdb7b2":"markdown","6affd866":"markdown"},"source":{"c73711d3":"# Import library\nimport pandas  as pd #Data manipulation\nimport numpy as np #Data manipulation\nimport matplotlib.pyplot as plt # Visualization\nimport seaborn as sns #Visualization\nplt.rcParams['figure.figsize'] = [8,5]\nplt.rcParams['font.size'] =14\nplt.rcParams['font.weight']= 'bold'\nplt.style.use('seaborn-whitegrid')","75e754b1":"# Import dataset\n#path ='dataset\/'\npath = '..\/input\/'\ndf = pd.read_csv(path+'insurance.csv')\nprint('\\nNumber of rows and columns in the data set: ',df.shape)\nprint('')\n\n#Lets look into top few rows and columns in the dataset\ndf.head()","11b840a7":"\"\"\" for our visualization purpose will fit line using seaborn library only for bmi as independent variable \nand charges as dependent variable\"\"\"\n\nsns.lmplot(x='bmi',y='charges',data=df,aspect=2,height=6)\nplt.xlabel('Boby Mass Index$(kg\/m^2)$: as Independent variable')\nplt.ylabel('Insurance Charges: as Dependent variable')\nplt.title('Charge Vs BMI');","c36ade25":"df.describe()","4de5ff56":"plt.figure(figsize=(12,4))\nsns.heatmap(df.isnull(),cbar=False,cmap='viridis',yticklabels=False)\nplt.title('Missing value in the dataset');","d30c5f74":"# correlation plot\ncorr = df.corr()\nsns.heatmap(corr, cmap = 'Wistia', annot= True);","5d6f2504":"f= plt.figure(figsize=(12,4))\n\nax=f.add_subplot(121)\nsns.distplot(df['charges'],bins=50,color='r',ax=ax)\nax.set_title('Distribution of insurance charges')\n\nax=f.add_subplot(122)\nsns.distplot(np.log10(df['charges']),bins=40,color='b',ax=ax)\nax.set_title('Distribution of insurance charges in $log$ sacle')\nax.set_xscale('log');","5988a1f8":"f = plt.figure(figsize=(14,6))\nax = f.add_subplot(121)\nsns.violinplot(x='sex', y='charges',data=df,palette='Wistia',ax=ax)\nax.set_title('Violin plot of Charges vs sex')\n\nax = f.add_subplot(122)\nsns.violinplot(x='smoker', y='charges',data=df,palette='magma',ax=ax)\nax.set_title('Violin plot of Charges vs smoker');","bac2da6e":"plt.figure(figsize=(14,6))\nsns.boxplot(x='children', y='charges',hue='sex',data=df,palette='rainbow')\nplt.title('Box plot of charges vs children');","0e4aff39":"df.groupby('children').agg(['mean','min','max'])['charges']","df27893c":"plt.figure(figsize=(14,6))\nsns.violinplot(x='region', y='charges',hue='sex',data=df,palette='rainbow',split=True)\nplt.title('Violin plot of charges vs children');","e6df630f":"f = plt.figure(figsize=(14,6))\nax = f.add_subplot(121)\nsns.scatterplot(x='age',y='charges',data=df,palette='magma',hue='smoker',ax=ax)\nax.set_title('Scatter plot of Charges vs age')\n\nax = f.add_subplot(122)\nsns.scatterplot(x='bmi',y='charges',data=df,palette='viridis',hue='smoker')\nax.set_title('Scatter plot of Charges vs bmi')\nplt.savefig('sc.png');","0d47198e":"# Dummy variable\ncategorical_columns = ['sex','children', 'smoker', 'region']\ndf_encode = pd.get_dummies(data = df, prefix = 'OHE', prefix_sep='_',\n               columns = categorical_columns,\n               drop_first =True,\n              dtype='int8')","8e97a665":"# Lets verify the dummay variable process\nprint('Columns in original data frame:\\n',df.columns.values)\nprint('\\nNumber of rows and columns in the dataset:',df.shape)\nprint('\\nColumns in data frame after encoding dummy variable:\\n',df_encode.columns.values)\nprint('\\nNumber of rows and columns in the dataset:',df_encode.shape)","c2d39bc5":"## Log transform\ndf_encode['charges'] = np.log(df_encode['charges'])","43f66a26":"from sklearn.model_selection import train_test_split\nX = df_encode.drop('charges',axis=1) # Independet variable\ny = df_encode['charges'] # dependent variable\n\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.3,random_state=23)","d02af568":"# Scikit Learn module\nfrom sklearn.linear_model import LinearRegression\nlin_reg = LinearRegression()\nlin_reg.fit(X_train,y_train)\n\n#Parameter\nsk_theta = [lin_reg.intercept_]+list(lin_reg.coef_)\nthetas = ['intercept']\nfor col in X_train.columns.tolist():\n    thetas.append(col)\ncoeffs = list(zip(thetas,sk_theta))\npd.DataFrame(coeffs,columns = [\"Coefficient\",\"Value\"])","68de1e9a":"# sklearn regression module\ny_pred_sk = lin_reg.predict(X_test)\n\n#Evaluvation: MSE\nfrom sklearn.metrics import mean_squared_error\nJ_mse_sk = mean_squared_error(y_pred_sk, y_test)\n\n# R_square\nR_square_sk = lin_reg.score(X_test,y_test)\nprint('The Mean Square Error(MSE) or J(theta) is: ',J_mse_sk)\nprint('R square obtain for scikit learn library is :',R_square_sk)","304487b4":"# Check for Linearity\nf = plt.figure(figsize=(14,5))\nax = f.add_subplot(121)\nsns.scatterplot(y_test,y_pred_sk,ax=ax,color='r')\nax.set_title('Check for Linearity:\\n Actual Vs Predicted value')\n\n# Check for Residual normality & mean\nax = f.add_subplot(122)\nsns.distplot((y_test - y_pred_sk),ax=ax,color='b')\nax.axvline((y_test - y_pred_sk).mean(),color='k',linestyle='--')\nax.set_title('Check for Residual normality & mean: \\n Residual eror');","f693aab6":"# Check for Multivariate Normality\n# Quantile-Quantile plot \nf,ax = plt.subplots(1,2,figsize=(14,6))\nimport scipy as sp\n_,(_,_,r)= sp.stats.probplot((y_test - y_pred_sk),fit=True,plot=ax[0])\nax[0].set_title('Check for Multivariate Normality: \\nQ-Q Plot')\n\n#Check for Homoscedasticity\nsns.scatterplot(y = (y_test - y_pred_sk), x= y_pred_sk, ax = ax[1],color='r') \nax[1].set_title('Check for Homoscedasticity: \\nResidual Vs Predicted');","1e79c8d9":"# Check for Multicollinearity\n#Variance Inflation Factor\nVIF = 1\/(1- R_square_sk)\nVIF","03a64dd8":"The model assumption linear regression as follows\n1. In our model  the actual vs predicted plot is curve so linear assumption fails\n2. The residual mean is zero and residual error plot right skewed\n3. Q-Q plot shows as value log value greater than 1.5 trends to increase\n4. The plot is exhibit heteroscedastic, error will insease after certian point.\n5. Variance inflation factor value is less than 5, so no multicollearity.","fe095acd":"## Model building\nIn this step we build model using sklearn. ","f5a54684":"The model returns $R^2$ value of 77.95%, so it fit our data test very well, but still we can imporve the the performance of by diffirent technique. Please make a note that we have transformer out variable by applying  natural log. When we put model into production antilog is applied to the equation.","e595e452":"## Model Validation\nIn order to validated model we need to check few assumption of linear regression model. The common assumption for *Linear Regression* model are following\n1. Linear Relationship: In linear regression the relationship between the dependent and independent variable to be *linear*. This can be checked by scatter ploting Actual value Vs Predicted value\n2. The residual error plot should be *normally* distributed.\n3. The *mean* of *residual error* should be 0 or close to 0 as much as possible\n4. The linear regression require all variables to be multivariate normal. This assumption can best checked with Q-Q plot.\n5. Linear regession assumes that there is little or no *Multicollinearity in the data. Multicollinearity occurs when the independent variables are too highly correlated with each other. The variance inflation factor *VIF* identifies correlation between independent variables and strength of that correlation. $\\mathbf{VIF = \\frac {1}{1-R^2}}$, If VIF >1 & VIF <5 moderate correlation, VIF < 5 critical level of multicollinearity.\n6. Homoscedasticity: The data are homoscedastic meaning the residuals are equal across the regression line. We can look at residual Vs fitted value scatter plot. If heteroscedastic plot would exhibit a funnel shape pattern.","349b3c75":"Now we have import dataset. When we look at the shape of dataset it has return as (1338,7).So there are $\\mathbf{m=1338}$ training exaple and $\\mathbf{n=7}$ independent variable. The target variable here is charges and remaining six variables such as age, sex, bmi, children, smoker, region are independent variable. There are multiple independent variable, so we need to fit Multiple linear regression. Then the hypothesis function looks like\n\n$$\\mathbf{ h_\\theta(x_{i}) = \\theta_0+\\theta_1 age + \\theta_2 sex + \\theta_3 bmi + \\theta_4 children + \\theta_5 smoker + \\theta_6 region }$$\n\nThis multiple linear regression equation for given dataset.  \nIf $\\mathbf{i=1}$ then \n$$\\mathbf{h_\\theta(x_{1}) = \\theta_0+\\theta_1 19 + \\theta_2 female + \\theta_3 27.900 + \\theta_4 1 + \\theta_5 yes + \\theta_6 southwest}$$ \n$$\\mathbf{y_1 = 16884.92400}$$\nIf $\\mathbf{i=3}$ then $$\\mathbf{h_\\theta(x_{3}) = \\theta_0+\\theta_1 28 + \\theta_2 male + \\theta_3 33.000 + \\theta_4 3 + \\theta_5 no + \\theta_6 northwest}$$ \n$$\\mathbf{y_3 = 4449.46200}$$\n*Note*: In python index starts from 0.\n$$\\mathbf{x_1 = \\left(\\begin{matrix} x_{11} & x_{12} & x_{13} & x_{14} & x_{15} & x_{16}\\end{matrix}\\right) = \\left(\\begin{matrix} 19 & female & 27.900 & 1 & no & northwest\\end{matrix}\\right) }$$","aca18ee9":">From left plot the minimum age person is insured is 18 year. There is slabs in policy most of non smoker take $1^{st}$ and $2^{nd}$ slab, for smoker policy start at $2^{nd}$ and $3^{rd}$ slab.\n\n>Body mass index (BMI) is a measure of body fat based on height and weight that applies to adult men and women. The minimum bmi is 16$kg\/m^2$ and maximum upto 54$kg\/m^2$","ca1d8a83":"###  Check for missing value","a3e144f0":"Thier no correlation among valiables.","d82b5971":"## Matrix Formulation\n\nIn general we can write above vector as $$ \\mathbf{ x_{ij}} = \\left( \\begin{smallmatrix} \\mathbf{x_{i1}} & \\mathbf{x_{i2}} &.&.&.& \\mathbf{x_{in}} \\end{smallmatrix} \\right)$$\n\nNow we combine all aviable individual vector into single input matrix of size $(m,n)$ and denoted it by $\\mathbf{X}$ input matrix, which consist of all training exaples,\n$$\\mathbf{X} = \\left( \\begin{smallmatrix} x_{11} & x_{12} &.&.&.&.& x_{1n}\\\\\n                                x_{21} & x_{22} &.&.&.&.& x_{2n}\\\\\n                                x_{31} & x_{32} &.&.&.&.& x_{3n}\\\\\n                                .&.&.&. &.&.&.& \\\\\n                                .&.&.&. &.&.&.& \\\\\n                                x_{m1} & x_{m2} &.&.&.&.&. x_{mn}\\\\\n                                \\end{smallmatrix} \\right)_{(m,n)}$$\n\nWe represent parameter of function and dependent variable in vactor form as  \n$$\\theta = \\left (\\begin{matrix} \\theta_0 \\\\ \\theta_1 \\\\ .\\\\.\\\\ \\theta_j\\\\.\\\\.\\\\ \\theta_n \\end {matrix}\\right)_{(n+1,1)} \n\\mathbf{ y } = \\left (\\begin{matrix} y_1\\\\ y_2\\\\. \\\\. \\\\ y_i \\\\. \\\\. \\\\ y_m \\end{matrix} \\right)_{(m,1)}$$\n\nSo we represent hypothesis function in vectorize form $$\\mathbf{ h_\\theta{(x)} = X\\theta}$$.\n\n","aacc0f58":"## Cost function\n\n  A cost function measures how much error in the model is in terms of ability to estimate the relationship between $x$ and $y$. \n  We can measure the accuracy of our hypothesis function by using a cost function. This takes an average difference of observed dependent variable in the given the dataset and those predicted by the hypothesis function.\n  \n$$\\mathbf{ J(\\theta) = \\frac{1}{m} \\sum_{i=1}^{m}(\\hat{y}_i - y_i)^2}$$\n$$\\mathbf{J(\\theta) =  \\frac{1}{m} \\sum_{i=1}^{m}(h_\\theta(x_i) - y_i)^2}$$\nTo implement the linear regression, take training example add an extra column that is $x_0$ feature, where $\\mathbf{x_0=1}$. $\\mathbf{x_{o}} = \\left( \\begin{smallmatrix} x_{i0} & x_{i1} & x_{i2} &.&.&.& x_{mi} \\end{smallmatrix} \\right)$,where $\\mathbf{x_{i0} =0}$ and input matrix will become as\n\n$$\\mathbf{X} = \\left( \\begin{smallmatrix} x_{10} & x_{11} & x_{12} &.&.&.&.& x_{1n}\\\\\n                                x_{20} & x_{21} & x_{22} &.&.&.&.& x_{2n}\\\\\n                                x_{30} & x_{31} & x_{32} &.&.&.&.& x_{3n}\\\\\n                                 .&.&.&.&. &.&.&.& \\\\\n                                 .&.&.&.&. &.&.&.& \\\\\n                                x_{m0} & x_{m1} & x_{m2} &.&.&.&.&. x_{mn}\\\\\n                                \\end{smallmatrix} \\right)_{(m,n+1)}$$  \nEach of the m input samples is similarly a column vector with n+1 rows $x_0$ being 1 for our convenience, that is $\\mathbf{x_{10},x_{20},x_{30} .... x_{m0} =1}$. Now we rewrite the ordinary least square cost function in matrix form as\n$$\\mathbf{J(\\theta) = \\frac{1}{m} (X\\theta - y)^T(X\\theta - y)}$$\n\nLet's look at the matrix multiplication concept,the multiplication of two matrix happens only if number of column of firt matrix is equal to number of row of second matrix. Here input matrix $\\mathbf{X}$ of size $\\mathbf{(m,n+1)}$, parameter of function is of size $(n+1,1)$ and dependent variable vector of size $\\mathbf{(m,1)}$. The product of matrix $\\mathbf{X_{(m,n+1)}\\theta_{(n+1,1)}}$ will return a vector of size $\\mathbf{(m,1)}$, then product of $\\mathbf{(X\\theta - y)^T_{(1,m})(X\\theta - y)_{(m,1)}}$ will return size of unit vector. ","dbbc7372":"# Definition & Working principle\nLet's build model using **Linear regression**.\n\nLinear regression is a **supervised learining** algorithm used when target \/ dependent variable  **continues** real number. It establishes relationship between dependent variable $y$ and one or more independent variable $x$ using best fit line.   It work on the principle of ordinary least square $(OLS)$ \/ Mean square errror $(MSE)$. In statistics ols is method to estimated unkown parameter of linear regression function, it's goal is to minimize sum of square difference between observed dependent variable in the given data set and those predicted by linear regression fuction. \n\n## Hypothesis representation\n\nWe will use $\\mathbf{x_i}$ to denote the independent variable and $\\mathbf{y_i}$ to denote dependent variable. A pair of $\\mathbf{(x_i,y_i)}$ is called training example. The subscripe $\\mathbf{i}$ in the notation is simply index into the training set. We have $\\mathbf{m}$ training example then $\\mathbf{i = 1,2,3,...m}$.\n\nThe goal of supervised learning is to learn a *hypothesis function $\\mathbf{h}$*, for a given training set that can used to estimate $\\mathbf{y}$ based on $\\mathbf{x}$. So hypothesis fuction represented as \n\n$$\\mathbf{ h_\\theta(x_{i}) = \\theta_0 + \\theta_1x_i }$$   \n$\\mathbf{\\theta_0,\\theta_1}$ are parameter of hypothesis.This is equation for **Simple \/ Univariate Linear regression**. \n\nFor **Multiple Linear regression** more than one independent variable exit then we will use $\\mathbf{x_{ij}}$ to denote indepedent variable and $\\mathbf{y_{i}}$ to denote dependent variable. We have $\\mathbf{n}$ independent variable then $\\mathbf{j=1,2,3 ..... n}$. The hypothesis function represented as\n\n$$\\mathbf{h_\\theta(x_{i}) = \\theta_0 + \\theta_1x_{i1} + \\theta_2 x_{i2} + ..... \\theta_j x_{ij} ...... \\theta_n  x_{mn} }$$\n$\\mathbf{\\theta_0,\\theta_1,....\\theta_j....\\theta_n }$ are parameter of hypothesis,\n$\\mathbf{m}$ Number of training exaples,\n$\\mathbf{n}$ Number of independent variable,\n$\\mathbf{x_{ij}}$ is $\\mathbf{i^{th}}$ training exaple of $\\mathbf{j^{th}}$ feature.\n","48c91ba4":"We will build a Linear regression model for Medical cost dataset. The dataset consists of age, sex, BMI(body mass index), children, smoker and region feature, which are independent and charge as a dependent feature. We will predict individual medical costs billed by health insurance.","448fce82":"There is no missing value in the data sex","addbf1c4":"From left plot the insurance charge for male and female is approximatley in same range,it is average around 5000 bucks. In right plot the insurance charge for smokers is much wide range compare to non smokers, the average charges for non smoker is approximately 5000 bucks. For smoker the minimum insurance charge is itself 5000 bucks.","86e821e8":"## Normal Equation\nThe normal equation is an analytical solution to the linear regression problem with a ordinary least square cost function. To minimize our cost function, take partial derivative of $\\mathbf{J(\\theta)}$ with respect to $\\theta$ and equate to $0$. The derivative of function is nothing but if a small change in input what would be the change in output of function.\n $$\\mathbf{min_{\\theta_0,\\theta_1..\\theta_n} J({\\theta_0,\\theta_1..\\theta_n})}$$\n $$\\mathbf{\\frac{\\partial J(\\theta_j)}{\\partial\\theta_j} =0}$$ \n where $\\mathbf{j = 0,1,2,....n}$\n \n Now we will apply partial derivative of our cost function,\n $$\\mathbf{\\frac{\\partial J(\\theta_j)}{\\partial\\theta_j} = \\frac{\\partial }{\\partial \\theta} \\frac{1}{m}(X\\theta - y)^T(X\\theta - y) }$$\n I will throw $\\mathbf{\\frac {1}{m}}$ part away since we are going to compare a derivative to $0$. And solve $\\mathbf{J(\\theta)}$,  \n \n $$\\mathbf{J(\\theta) = (X\\theta -y)^T(X\\theta - y)}$$\n $$\\mathbf{= (X\\theta)^T - y^T)(X\\theta -y)}$$   \n $$\\mathbf{= (\\theta^T X^T - y^T)(X\\theta - y)}$$\n $$\\mathbf{= \\theta^T X^T X \\theta - y^T X \\theta - \\theta^T X^T y + y^T y}$$\n $$\\mathbf{ = \\theta^T X^T X \\theta  - 2\\theta^T X^T y + y^T y}$$\n\nHere $\\mathbf{y^T_{(1,m)} X_{(m,n+1)} \\theta_{(n+1,1)} = \\theta^T_{(1,n+1)} X^T_{(n+1,m)} y_{(m,1)}}$ because unit vector.\n\n$$\\mathbf{\\frac{\\partial J(\\theta)}{\\partial \\theta} = \\frac{\\partial}{\\partial \\theta} (\\theta^T X^T X \\theta  - 2\\theta^T X^T y + y^T y )}$$\n$$\\mathbf{ = X^T X \\frac {\\partial \\theta^T \\theta}{\\partial\\theta} - 2 X^T y \\frac{\\partial \\theta^T}{\\partial\\theta} + \\frac {\\partial y^T y}{\\partial\\theta}}$$\nPartial derivative $\\mathbf{\\frac {\\partial x^2}{\\partial x} = 2x}$, $\\mathbf{\\frac {\\partial kx^2}{\\partial x} = kx}$,\n$\\mathbf{\\frac {\\partial Constact}{\\partial x} = 0}$\n\n$$\\mathbf{\\frac{\\partial J(\\theta)}{\\partial\\theta} = X^T X 2\\theta - 2X^T y +0}$$\n$$\\mathbf{ 0 = 2X^T X \\theta - 2X^T y}$$\n$$\\mathbf{ X^T X \\theta = X^T }$$\n$$\\mathbf{ \\theta = (X^TX)^{-1} X^Ty }$$\nthis the normal equation for linear regression","81db19a7":"### Plots","6e61a0bc":"## Data Preprocessing\n### Encoding\nMachine learning algorithms cannot work with categorical data directly, categorical data must be converted to number.\n 1. Label Encoding\n 2. One hot encoding\n 3. Dummy variable trap\n\n**Label encoding** refers to transforming the word labels into numerical form so that the algorithms can understand how to operate on them.\n\nA **One hot encoding** is a representation of categorical variable as binary vectors.It allows the representation of categorical data to be more expresive. This first requires that the categorical values be mapped to integer values, that is label encoding. Then, each integer value is represented as a binary vector that is all zero values except the index of the integer, which is marked with a 1.\n\nThe **Dummy variable trap** is a scenario in which the independent variable are multicollinear, a scenario in which two or more variables are highly correlated in simple term one variable can be predicted from the others.\n\nBy using *pandas get_dummies* function we can do all above three step in line of code. We will this fuction  to get dummy variable for sex, children,smoker,region features. By setting *drop_first =True* function will remove dummy variable trap by droping one variable and original variable.The pandas makes our life easy.","03a820a2":"## Exploratory data analysis","e8ce3a0a":"## Import Library and Dataset\nNow we will import couple of python library required for our analysis and import dataset ","407d3d83":"## Model evaluation\nWe will predict value for target variable by using our model parameter for test data set. Then compare the predicted value with actual valu in test set. We compute **Mean Square Error** using formula \n$$\\mathbf{ J(\\theta) = \\frac{1}{m} \\sum_{i=1}^{m}(\\hat{y}_i - y_i)^2}$$\n\n$\\mathbf{R^2}$ is statistical measure of how close data are to the fitted regression line. $\\mathbf{R^2}$ is always between 0 to 100%. 0% indicated that model explains none of the variability of the response data around it's mean. 100% indicated that model explains all the variablity of the response data around the mean.\n\n$$\\mathbf{R^2 = 1 - \\frac{SSE}{SST}}$$\n**SSE = Sum of Square Error**  \n**SST = Sum of Square Total**  \n$$\\mathbf{SSE = \\sum_{i=1}^{m}(\\hat{y}_i - y_i)^2}$$\n$$\\mathbf{SST = \\sum_{i=1}^{m}(y_i - \\bar{y}_i)^2}$$\nHere $\\mathbf{\\hat{y}}$ is predicted value and $\\mathbf{\\bar{y}}$ is mean value of $\\mathbf{y}$.","6f7fcffd":"In above plot we fit regression line into the variables.","55dd6eb5":"The original categorical variable are remove and also one of the one hot encode varible column for perticular categorical variable is droped from the column. So we completed all three encoding step by using get dummies function.","7dbdb7b2":"If we look at the left plot the charges varies from 1120 to 63500, the plot is right skewed. In right plot we will apply natural log, then plot approximately tends to normal. for further analysis we will apply log on target variable charges. ","6affd866":"## Train Test split"}}