{"cell_type":{"e0b07d64":"code","c8425c35":"code","7ffbf674":"code","789e03bd":"code","47c1bfcb":"code","bd1a21ee":"code","b1d9f989":"code","bd54540c":"code","07bd5184":"code","a193f5de":"code","9826b432":"code","10064d37":"code","87dac8b8":"markdown","303d234e":"markdown","20a98efc":"markdown","a49b7e7b":"markdown","efefa174":"markdown","c0994ee3":"markdown","c98e830a":"markdown","9cdb4e44":"markdown","40909d79":"markdown","fdf80550":"markdown","d790ce57":"markdown","d84ed1f2":"markdown","a7f3c6c4":"markdown","06d6077e":"markdown","dfebc5ee":"markdown","cbcc0f9b":"markdown","f3e388dc":"markdown"},"source":{"e0b07d64":"import re, os, csv\nimport numpy as np\nimport pandas as pd\nimport plotly.express as px\n\nPATH_root = '\/kaggle\/input\/' # --> '\/world-data-by-country-2020'\nos.chdir(PATH_root) # os.listdir()","c8425c35":"def show_data_on_map( df, arg_i, graphic_i ):\n    '''\n        Input  : clean dataframe per countries\n        --------------------------------------\n        Output : map visualization\n    '''\n\n    fig = px.choropleth(df, locations='ISO-code', color=arg_i, hover_name=\"Country\",\n                        color_continuous_scale=graphic_i, projection='natural earth')\n    fig.update_layout(title={'text':arg_i+' per country', 'y':0.95, 'x':0.5, 'xanchor':'center', 'yanchor':'top'})\n    fig.show()","7ffbf674":"# Initialize color pallete @ https:\/\/plotly.com\/python\/builtin-colorscales\/\ngraphix = []\ngraphix.append( px.colors.sequential.Sunset ) \ngraphix.append( px.colors.sequential.Bluered ) \ngraphix.append( px.colors.sequential.Electric )\ngraphix.append( px.colors.sequential.Viridis )\ngraphix.append( px.colors.sequential.Agsunset )\ngraphix.append( px.colors.sequential.Rainbow )\ngraphix.append( px.colors.sequential.thermal )","789e03bd":"arg_i = 'GDP per capita'\nshow_data_on_map( pd.read_csv( PATH_root+arg_i+'.csv' ), arg_i, graphix[5] )","47c1bfcb":"arg_i = 'Population growth'\ndf = pd.read_csv( PATH_root+arg_i+'.csv' )\nshow_data_on_map( df[df.iloc[:,1].astype(float) < 5], arg_i, graphix[1] )","bd1a21ee":"arg_i = 'Life expectancy'\nshow_data_on_map( pd.read_csv( PATH_root+arg_i+'.csv' ), arg_i, graphix[6] )","b1d9f989":"arg_i = 'Median age'\nshow_data_on_map( pd.read_csv( PATH_root+arg_i+'.csv' ), arg_i, graphix[3] )","bd54540c":"arg_i = 'Meat consumption'\nshow_data_on_map( pd.read_csv( PATH_root+arg_i+'.csv' ), arg_i, graphix[1] )","07bd5184":"arg_i = 'Sex-ratio'\ndf = pd.read_csv( PATH_root+arg_i+'.csv' )\nshow_data_on_map( df[ (df.iloc[:, 1]).astype(float) < 1.25 ], arg_i, graphix[2] )","a193f5de":"arg_i = 'Suicide rate'\nshow_data_on_map( pd.read_csv( PATH_root+arg_i+'.csv' ), arg_i, graphix[0] )","9826b432":"arg_i = 'Urbanization rate'\nshow_data_on_map( pd.read_csv( PATH_root+arg_i+'.csv' ), arg_i, graphix[0] )","10064d37":"arg_i = 'Fertility'\nshow_data_on_map( pd.read_csv( PATH_root+arg_i+'.csv' ), arg_i, graphix[0] )","87dac8b8":"<a id=\"5\"><\/a> \n#### $\\text{Meat consumption }$  [[$link$](https:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_meat_consumption)]\n","303d234e":"### $ \\text{Abstract}$\n\nThe kernel aims to visualize the extracted data from **Wikipedia**'s [**list of countries**](https:\/\/en.wikipedia.org\/wiki\/Category:Lists_of_countries) by category. The database itself, contains a HUGE amount of analyzed data at different **categories**, waiting anxiously for someone to present them elegantly ( \ud83d\ude0f ), and compare the trends between the different countries.\n\n<img src='https:\/\/github.com\/Daniboy370\/Machine-Learning\/blob\/master\/Misc\/Animation\/VID-out-Wiki.gif?raw=true' width=550 \/>","20a98efc":"<img src=https:\/\/upload.wikimedia.org\/wikipedia\/commons\/6\/63\/Wikipedia_logo_puzzle_globe_spins_horizontally_and_vertically%2C_revealing_the_contents_of_all_of_its_puzzle_pieces%2C_without_background.gif width=175 \/>","a49b7e7b":"<a id=\"8\"><\/a> \n#### $\\text{Urbanization rate }$  [[$link$](https:\/\/en.wikipedia.org\/wiki\/Urbanization_by_country)]","efefa174":"<a id=\"1\"><\/a> \n#### $\\text{GDP per capita }$  [[$link$](https:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_GDP_(PPP)_per_capita)]\n","c0994ee3":"### $ \\text{Chosen criteria}$\n\nThe list contains **143** analyses of countries with respect to a specific criterion. Practically, I will refer to several criteria that I found interesting, however the reader is free to add as much as he pleases :\n\n1. [**GDP per capita**](#1)\n\n2. [**Population growth**](#2)\n\n3. [**Life expectancy**](#3)\n\n4. [**Median age**](#4)\n\n5. [**Meat consumption**](#5)\n\n6. [**Sex-ratio**](#6)\n\n7. [**Suicide rate**](#7)\n\n8. [**Urbanization**](#8)\n\n9. [**Fertility rate**](#9)\n\n","c98e830a":"<a id=\"2\"><\/a> \n#### $\\text{Population growth }$  [[$link$](https:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_population_growth_rate)]\n","9cdb4e44":"$$\n\u2212fin\u2212\n$$","40909d79":"<a id=\"4\"><\/a> \n#### $\\text{Median age }$  [[$link$](https:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_median_age)]","fdf80550":"$\\text{Data visualization}$ : Projecting each dataframe (criterion) on a natural earth map.","d790ce57":"<a id=\"3\"><\/a> \n#### $\\text{Life expectancy }$  [[$link$](https:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_life_expectancy)]\n","d84ed1f2":"The extraction process (scraping and cleaning) is clrealy elaborated on one of my other notebooks - [**Tutorial : Web Scraping**](https:\/\/www.kaggle.com\/daniboy370\/tutorial-web-scraping). \n\nHowever, although scraping might seem as a **\"piece of cake\"** - just fill in URL and the rest will follow. No ?? No !! \n\nScraping is comprised mostly of a sensitive **heuristics**, where the extracted data should be examined and manually refined over and over ... until reaching a reasonable shape that can be worked with. After sufficient cleaning, you will be able to obtain such animation : \n\n<img src='https:\/\/github.com\/Daniboy370\/Temp_upload\/blob\/master\/VID-Globe.gif?raw=true' width=400 \/>","a7f3c6c4":"<a id=\"6\"><\/a> \n#### $\\text{Sex ratio }$  [[$link$](https:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_sex_ratio)]\n","06d6077e":"Presenting the cleaned dataframe on a world map using the amazing [**choropleth**](https:\/\/plotly.github.io\/plotly.py-docs\/generated\/plotly.express.choropleth.html) library \ud83d\uddfa\ufe0f :","dfebc5ee":"<a id=\"7\"><\/a> \n#### $\\text{Suicide rate }$  [[$link$](https:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_suicide_rate)]\n","cbcc0f9b":"$$\n\\circ \\text{ Comments (\ud83d\udcac) , feedback (\ud83e\udd14) and upvotes (\ud83d\udc4d) are much welcome ! } \\circ \n$$","f3e388dc":"<a id=\"9\"><\/a> \n#### $\\text{Fertility rate }$  [[$link$](https:\/\/en.wikipedia.org\/wiki\/List_of_sovereign_states_and_dependencies_by_total_fertility_rate)]\n"}}