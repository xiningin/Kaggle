{"cell_type":{"16bd6d80":"code","a0bb4732":"code","1628f0fe":"code","d9edc5e6":"code","17a38f96":"code","12993621":"code","87599025":"code","d9b227ed":"code","a9515c6e":"code","45bf96a8":"code","de0aeaae":"code","28fab541":"code","9dbf4b1f":"code","c9e9076b":"code","7e9a909c":"code","58c91abf":"code","b9d03e06":"code","fc5bd31f":"markdown","fe7ffbf7":"markdown","94f61e6e":"markdown","1e02e7d2":"markdown","531dc443":"markdown","a7838558":"markdown","3a5a8f5e":"markdown","db316cd5":"markdown","08e7f1a9":"markdown","81799639":"markdown","ab8b517e":"markdown","0a32250b":"markdown","68db8a3c":"markdown","1cd426ba":"markdown","e2860595":"markdown","a3073521":"markdown","6b954d74":"markdown","d7aabdd6":"markdown"},"source":{"16bd6d80":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","a0bb4732":"a = 25\nb = 15.20\nd =  9.322e-36j\nstr = \"this is a example of string\"\nprint(type(a)) # type() is use to check the type of variable.\nprint(type(b))\nprint(type(d))\nprint(type(str))","1628f0fe":"lst = [\"Abc\",1,23,546,\"fht\"]\ntpl = (1,2,4,5,\"abc\")\ndict1 = {\"a\":[1,2,3,4,5], \"b\": [4,5,6,7,8]}\nset1 = {1,2,4,(\"a\",\"b\")}\nprint(type(lst))\nprint(type(tpl))\nprint(type(dict1))\nprint(type(set1))","d9edc5e6":"print(\"Hello World\")","17a38f96":"def add(a,b):\n    return a+b\nadd(10,3)","12993621":"def square_root(num):\n    return num**0.5\nsquare_root(4)","87599025":"def area_of_triangle(a,b,c):\n    s = (a+b+c)\/2 #semiperimeter of triangle\n    ar = s*(s-a)*(s-b)*(s-c)\n    print(\"Area of triangle is:\",square_root(ar))\narea_of_triangle(4,4,5)","d9b227ed":"for i in range(1,10):\n    print(i, end = \",\")","a9515c6e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","45bf96a8":"for i in range(1,11):\n    print(i, end = \",\")\n    i = i+1","de0aeaae":"for i in range(2,100,2):\n    print(i, end = \",\")","28fab541":"for i in range(1,100,2):\n    print(i, end = \",\")","9dbf4b1f":"def fib(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)\nfib(12)","c9e9076b":"upper = 100\nlower = 2\ndef print_prime_number(number):\n    for number in range(lower, upper +1):\n        if number > 1:\n            for i in range(2, number):\n                if (number % i) == 0:\n                    break\n            else:\n                    print(number, end = \",\")\nprint_prime_number(100)","7e9a909c":"def check_prime_number(num):\n    if num > 1:\n        for i in range(2, num-1):\n            if (num%i) == 0:\n                print(num, \"is not a prime number\",\"it is divisible by\", i)\n                break\n        else:\n                print(num,\"is a prime number\")\n        \ncheck_prime_number(33)","58c91abf":"num = 152 #you can use any number of your choice\ndef check_num_armstrong(num):\n    sum = 0\n    temp = num\n    while temp > 0:\n        digit = temp%10\n        sum += digit**3\n        temp \/\/= 10\n    if num == sum:\n       print(num,\"is an Armstrong number\")\n    else:\n       print(num,\"is not an Armstrong number\")\ncheck_num_armstrong(num)","b9d03e06":"num = 5 #you can use any number of your choice\ndef factorial(num):\n    factorial = 1\n    if num == 0:\n        print(\"factorial of 0 number is 1\")\n    elif num < 0:\n        print(\"Sorry Factorial of negative number is not available\")\n    else:\n        for i in range(1, num +1):\n            factorial = factorial*i\n        print(\"Factorial of\", num, \"is\", factorial)\nfactorial(num)        \n    ","fc5bd31f":"<strong>Printing first 10 natural number<\/strong>","fe7ffbf7":"<strong>Find the Squareroot of numbers <\/strong>","94f61e6e":"<strong> check whether the number is prime or not<\/strong>","1e02e7d2":"<strong>The following  lists the arithmetic operators supported by Python::<\/strong>\n\n\na)   Arithmetic Operators<strong>(+, -, *, \/, \/\/, %)<\/strong>\n\nb)   Comparison (Relational) Operators<strong>(<,>,<>, ==, <=, >=, !=) <\/strong>\n\nc)   Assignment Operators<strong>( =, +=, -=, %=, \/=, **=, *=)<\/strong>\n\nd)   Logical Operators<strong>(AND, OR, NOR)<\/strong>\n\ne)   Bitwise Operators<strong> (&,~,^, <<,>>)<\/strong>\n\nf)   Membership Operators<strong>(in, not in)<\/strong>\n\ng)   Identity Operators<strong> (is, is not) <strong>","531dc443":"<strong>Fabonacci number<\/strong>","a7838558":"<strong> Print Hello world <\/strong>","3a5a8f5e":"<strong>Print prime number between 1 to 100<\/strong>","db316cd5":"<strong> Arithmetic Operators <\/strong>","08e7f1a9":"<strong>Print a certain range of number<\/strong>","81799639":"<strong> Add two numbers<\/strong>","ab8b517e":"<h2><strong> Hello Programmers!!! <\/strong> <h2>\n<h3> This is my first step towards learning python programming and want to share my experience and codes with all programmers who are new to Python. I'll try my best to complete all programs which  are the foundation of any programming language. So, stayed tunned  because i've planned to update this kernel everyday so that we can learn something about python  everyday. \nIf you like this Kernel please <strong>vote up <\/strong>. <h3>","0a32250b":"<strong> Factorial of a number <\/strong>","68db8a3c":"<strong>Print first 100 even number<strong>","1cd426ba":"<strong>Armstrong number<\/strong>\n153 = (1*1*1 + 5*5*5 + 3*3*3)","e2860595":"<strong> Index <\/strong>\n1.  Intoduction to python\n2. Datatypes in python\n3. Operators in python\n4. Print Hello World\n5. Add two numbers\n6. Find square root of number\n7. Area of triangle\n8. Print series of number\n      * Series from 1-10\n      * Even number\n      * Odd Number\n      * Prime Number\n      * Fabonacci Series\n9. Check whether the number is armstrong or not\n10. Factorial of any number\n      ","a3073521":"<strong>Area of triangle<\/strong>","6b954d74":"<strong>b) Non-Primitive Datatype<\/strong>\n1. List\nList contains items separated by commas and enclosed within square brackets ([]). To some extent, lists are similar to arrays in C. One difference between them is that all the items belonging to a list can be of different data type.\n\nEx- lst = [\"Abc\",1,23,546,\"fht\"]\n2. Tuple\nA tuple is another sequence data type that is similar to the list.  However, tuples are enclosed within parentheses. Onr more major difference between list and tuple are list is mutable whereas tuple is unmutable.\n\nEx- tuple = (1,2,4,5,\"abc\")\n3. Dictionary\nPython's dictionaries are kind of hash table type. They work like associative arrays or hashes found in Perl and consist of key-value pairs.\n\nEx- dict = {\"a\":[1,2,3,4,5], \"b\": [4,5,6,7,8]}\n4. Set\nA set is an unordered collection of items. Every element is unique (no duplicates).  Set itself is mutable. We can add or remove items from it.\n\nEx- set1 = {1,2,4,[\"a\",\"b\"]}\n\nSets can be used to perform mathematical set operations like union, intersection, symmetric difference etc.","d7aabdd6":"<strong> Data types in Python <\/strong>\n\nPython datatypes can be divided into two types primitive and non primitive. Primitive types are those which are not further divided, whereas non-primitive data can further divided or splitted.\n\n<strong>a) Primitive Data type<\/strong>\n1. Number\/Integer: (signed integer, Ex- 10, 789,-28)\n2. Float ( Decimal point real values, Ex- 15.20, -12.3)\n3. Complex( Imageninory number. Ex- 9.322e-36j, 3.14j)\n4. String(Characters, Ex- str = \"Hello\")\n5. Boolean"}}