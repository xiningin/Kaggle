{"cell_type":{"185b07ea":"code","59edf044":"code","a126b7aa":"code","1414abff":"code","2cbac857":"code","0241d38d":"code","4732a31a":"code","22afed82":"code","d2326f1b":"markdown"},"source":{"185b07ea":"class Node:\n    def __init__(self, val):\n        self.val = val\n        self.left = None\n        self.right = None\n    def convert(root):\n        if not root.left and not root.right:\n            return root\n        elif root.left and root.right:\n            root.right = root.right.convert()\n            root.left = root.left.convert()\n            return root\n        elif root.left:\n            return root.left.convert()\n        else:\n            return root.right.convert()\n            \n    ","59edf044":"a = Node(0)\nb = Node(1)\nc = Node(2)\nd = Node(3)\ne = Node(4)\nf = Node(5)\ng = Node(6)\nh = Node(7)\na.right = c\na.left = b\nb.left = d\nc.right = e\ne.left = g\ne.right = h\nd.right = f","a126b7aa":"a.convert()","1414abff":"a.left.val","2cbac857":"a.right.val","0241d38d":"e.convert()","4732a31a":"e.left.val","22afed82":"e.right.val","d2326f1b":"Good morning! Here's your coding interview problem for today.\n\nThis problem was asked by Yahoo.\n\nRecall that a full binary tree is one in which each node is either a leaf node, or has two children. Given a binary tree, convert it to a full one by removing nodes with only one child.\n\nFor example, given the following tree:\n```\n         0\n      \/     \\\n    1         2\n  \/            \\\n3                 4\n  \\             \/   \\\n    5          6     7\n\nYou should convert it to:\n\n     0\n  \/     \\\n5         4\n        \/   \\\n       6     7\n```"}}