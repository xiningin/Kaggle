{"cell_type":{"b6680134":"code","8314e2ca":"code","b73f6d9c":"code","c5e760ff":"code","73d32562":"code","cb2186c9":"code","20e3dd94":"code","66ea3459":"code","c8031dc0":"code","1c350099":"code","00ae8e66":"code","159165b4":"code","9cd6a636":"code","a7a6fade":"code","0f65517c":"code","5ad5c4f5":"code","581b4e81":"code","c9abf732":"code","8b9bf3c2":"code","18926f73":"code","42102c54":"code","b8858196":"code","62bad4cf":"code","456a73aa":"code","6523e18f":"code","26f8d151":"code","ae6d8c49":"code","b38cc94d":"code","8a55cb24":"code","35c24a32":"code","20cde260":"code","769891e1":"code","2edc7997":"code","3a8ee5d3":"code","ede0c0b4":"code","390f5e2c":"code","c0a53c42":"code","5519bcd5":"code","f0602747":"markdown","eb9ce266":"markdown","81ead510":"markdown","728df0b0":"markdown","aff809ec":"markdown","fe66881f":"markdown","cc6440cd":"markdown","5b1f6165":"markdown","a592e727":"markdown","3a9d2d4a":"markdown"},"source":{"b6680134":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8314e2ca":"import tensorflow as tf \nfrom tensorflow.keras import datasets,layers,models\nimport matplotlib.pyplot as plt\nimport numpy as np","b73f6d9c":"#loading cifar-10 dataset\n(X_train,y_train),(X_test,y_test)=datasets.cifar10.load_data()","c5e760ff":"print(\"X_train:\",X_train.shape)\nprint(\"X_test:\",X_test.shape)\nprint(\"y_train:\",y_train.shape)\nprint(\"y_test:\",y_test.shape)","73d32562":"y_train[:5]","cb2186c9":"y_train=y_train.reshape(-1,)\ny_train[:5]","20e3dd94":"classes =['airplane','automobile','bird','cat','deer','dog','frog','horse','ship','truck']","66ea3459":"plt.figure(figsize=(15,2))\nplt.imshow(X_train[1])","c8031dc0":"classes[y_train[1]]","1c350099":"def plot_sample(x,y,index):\n    \n    plt.figure(figsize=(15,2))\n    plt.imshow(X_train[index])\n    plt.xlabel(classes[y_train[index]])\n    ","00ae8e66":"plot_sample(X_train,y_train,0)\nplot_sample(X_train,y_train,4)\nplot_sample(X_train,y_train,3)","159165b4":"#normalizing the data\nX_train=X_train\/255\nX_test=X_test\/255","9cd6a636":"ann=models.Sequential([\n    layers.Flatten(input_shape=(32,32,3)),\n    layers.Dense(3000,activation='relu'),\n    layers.Dense(1000,activation='relu'),\n    layers.Dense(10,activation='softmax')\n    \n])\n\nann.compile(optimizer='SGD',loss='sparse_categorical_crossentropy',metrics=['accuracy'])\n\nann.fit(X_train,y_train,validation_data=(X_test,y_test),epochs=10)\n\n","a7a6fade":"cnn=models.Sequential([\n    #cnn\n    layers.Conv2D(filters=32,kernel_size=(3,3),activation='relu',input_shape=(32,32,3)),\n    layers.MaxPooling2D((2,2)),\n    \n    \n    layers.Conv2D(filters=64,kernel_size=(3,3),activation='relu',input_shape=(32,32,3)),\n    layers.MaxPooling2D((2,2)),\n    \n    #dense\n    layers.Flatten(),\n    layers.Dense(64,activation='relu'),\n    layers.BatchNormalization(),\n    layers.Dense(10,activation='softmax')\n])","0f65517c":"cnn.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=['accuracy'])","5ad5c4f5":"cnn.fit(X_train,y_train,validation_data=(X_test,y_test),epochs=10)","581b4e81":"y_pred = cnn.predict(X_test)\ny_pred[:5]","c9abf732":"y_classes = [np.argmax(element) for element in y_pred]\ny_classes[:5]\n","8b9bf3c2":"y_test=y_test.reshape(-1,)\ny_test[:5]","18926f73":"plot_sample(X_test, y_test,1)","42102c54":"import tensorflow as tf\nfrom tensorflow import keras\nimport matplotlib.pyplot as plt","b8858196":"(x_train, y_train), (x_test, y_test) = keras.datasets.mnist.load_data()","62bad4cf":"x_train.shape","456a73aa":"x_test.shape","6523e18f":"y_train = tf.keras.utils.to_categorical(y_train, num_classes=10)\ny_test = tf.keras.utils.to_categorical(y_test, num_classes=10)","26f8d151":"model=tf.keras.Sequential()\nmodel.add(tf.keras.layers.Reshape((28,28,1),input_shape=(28,28,)))\nmodel.add(tf.keras.layers.BatchNormalization())","ae6d8c49":"model.add(tf.keras.layers.Conv2D(32, \n                                 kernel_size=(3,3), \n                                 activation='relu'))\n\nmodel.add(tf.keras.layers.Conv2D(64, kernel_size=(3,3), activation='relu'))\n\nmodel.add(tf.keras.layers.MaxPool2D(pool_size=(2,2)))","b38cc94d":"#Flatten the output\nmodel.add(tf.keras.layers.Flatten())\n\n#Dense layer\nmodel.add(tf.keras.layers.Dense(128, activation='relu'))\n\n#Add another dropout layer\nmodel.add(tf.keras.layers.Dropout(0.25))\n\n#Output layer\nmodel.add(tf.keras.layers.Dense(10, activation='softmax'))","8a55cb24":"model.compile(optimizer='adam', \n              loss='categorical_crossentropy', metrics=['accuracy'])","35c24a32":"#Train the model\nmodel.fit(x_train,y_train,          \n          validation_data=(x_test,y_test),\n          epochs=10,\n          batch_size=32)","20cde260":"(X_train,y_train),(X_test,y_test)=tf.keras.datasets.fashion_mnist.load_data()","769891e1":"y_train = tf.keras.utils.to_categorical(y_train, num_classes=10)\ny_test = tf.keras.utils.to_categorical(y_test, num_classes=10)","2edc7997":"model=tf.keras.Sequential()\nmodel.add(tf.keras.layers.Reshape((28,28,1),input_shape=(28,28,)))\nmodel.add(tf.keras.layers.BatchNormalization())","3a8ee5d3":"model.add(tf.keras.layers.Conv2D(32, \n                                 kernel_size=(3,3), \n                                 activation='relu'))\n\nmodel.add(tf.keras.layers.Conv2D(64, kernel_size=(3,3), activation='relu'))\n\nmodel.add(tf.keras.layers.MaxPool2D(pool_size=(2,2)))","ede0c0b4":"#Flatten the output\nmodel.add(tf.keras.layers.Flatten())\n\n#Dense layer\nmodel.add(tf.keras.layers.Dense(128, activation='relu'))\n\n#Add another dropout layer\nmodel.add(tf.keras.layers.Dropout(0.25))\n\n#Output layer\nmodel.add(tf.keras.layers.Dense(10, activation='softmax'))","390f5e2c":"model.compile(optimizer='adam', \n              loss='categorical_crossentropy', metrics=['accuracy'])","c0a53c42":"model.summary()","5519bcd5":"#Train the model\nmodel.fit(X_train,y_train,          \n          validation_data=(X_test,y_test),\n          epochs=10,\n          batch_size=32)","f0602747":"* This dataset consists of 60000 32 x 32 colour images in 10 classes,with 6000 image per class","eb9ce266":"# CIFAR-10 dataset\n![cifar10_dataset.png](attachment:16f69fca-31f0-41f7-8789-4b2a80698109.png)\n","81ead510":"# Building the ANN model","728df0b0":"**AFTER PERFORMING CNN ON CIFAR-10 DATASET**\n* TRAINING_ACCURACY=75%\n* TESTING_ACCURACY=69%","aff809ec":"# PREDICTING MODEL","fe66881f":"**AFTER PERFORMING ANN ON CIFAR-10 DATASET**\n* TRAINING_ACCURACY=55%\n* TESTING_ACCURACY=48%","cc6440cd":"# BUILDING CNN MODEL","5b1f6165":"# # CNN on Digit Mnist ","a592e727":"# EXPLORING THE DATA","3a9d2d4a":"# # CNN on Fashion Mnist"}}