{"cell_type":{"95099faa":"code","d1b4d052":"code","75cbf226":"code","14ff88ce":"code","d6fd09c1":"code","01210290":"code","413760d5":"code","acad6a54":"code","981afc45":"code","88f2fdad":"code","e4858a4d":"markdown","682d0bc0":"markdown","201005da":"markdown","f0c1ae24":"markdown"},"source":{"95099faa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport os,pylab as pl,cv2\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d1b4d052":"dir_name='..\/input\/ai-covid19-from-cough-samples\/positive_Covid-19\/'","75cbf226":"file_list=sorted(os.listdir(dir_name))\nfiles=[f for f in file_list \n       if f[-4:]=='.jpg']\nprint(files,len(files))","14ff88ce":"def get_edges(file):\n    img=cv2.imread(file)\n    fig=pl.figure(figsize=(10,10))\n    pl.imshow(img,cmap='Greys'); pl.show()    \n    gray_img=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)\n    edges=cv2.Canny(gray_img,10,100) \n    cv2.waitKey(0)\n    fig=pl.figure(figsize=(10,10))\n    pl.imshow(edges,cmap='Greys'); pl.show()\n    return img,gray_img,edges\nimg,gray_img,edges=get_edges(dir_name+files[0])","d6fd09c1":"def get_closed(edges):\n    kernel=cv2.getStructuringElement(cv2.MORPH_RECT,(7,7)) \n    closed=cv2.morphologyEx(edges,cv2.MORPH_CLOSE,kernel) \n    cv2.waitKey(0)\n    fig=pl.figure(figsize=(10,10))\n    pl.imshow(closed,cmap='Greys'); pl.show()\n    return closed\nclosed=get_closed(edges)","01210290":"def get_contours(gray_img,closed):\n    (contours, _)=cv2.findContours(\n        closed.copy(),cv2.RETR_EXTERNAL,\n        cv2.CHAIN_APPROX_SIMPLE)\n    for c in contours: \n        arc=cv2.arcLength(c,True) \n        approx_pdp=cv2.approxPolyDP(c,.02*arc,True) \n        contours_img=cv2.drawContours(\n            gray_img,[approx_pdp],-1,(0,255,0),2) \n    cv2.waitKey(0) \n    fig=pl.figure(figsize=(10,10))\n    pl.imshow(contours_img,cmap='Greys'); pl.show()\n    return contours,contours_img\ncontours,contours_img=get_contours(gray_img,closed)","413760d5":"idx=0 \nfor c in contours: \n    x,y,w,h=cv2.boundingRect(c)\n    if w>30 and h>30: \n        new_img=img[y-3:y+h+3,\n                    x-3:x+w+3]\n        if min(new_img.shape[0],new_img.shape[1])>30:\n            new_img=cv2.resize(new_img,(32,32))\n            cv2.imwrite('01_00_00_%03d'%idx+'.png',\n                        new_img)\n        idx+=1 \n    pl.imshow(edges,cmap='Greens'); pl.show()     ","acad6a54":"image = cv2.imread('\/kaggle\/input\/ai-covid19-from-cough-samples\/positive_Covid-19\/positive_0_1042.jpg')\nimage = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\nplt.imshow(image)","981afc45":"import warnings\nimport seaborn as sns\n\nimport argparse\nimport cv2\nimport cv2 as cv\nimport pydicom as dicom\nfrom pydicom.filereader import dcmread\nimport pydicom\nimport re\nfrom PIL import Image\nfrom IPython.display import Image as show_gif\nfrom PIL import Image\nfrom IPython.display import Image as show_gif\nimport scipy.misc\nimport matplotlib\nfrom skimage import exposure\nimport numpy as np\nimport os\nimport matplotlib.pyplot as plt\nfrom glob import glob\nfrom mpl_toolkits.mplot3d.art3d import Poly3DCollection\nimport scipy.ndimage\nfrom skimage import morphology\nfrom skimage import measure\nfrom skimage.transform import resize\n\n\n#Code from Salman Faroz https:\/\/www.kaggle.com\/salmanfaroz\/fibrosis-let-s-talk-to-the-data\/notebook\n\n# Let's define our Kaggle Notebook size\nKNotebook = np.ones((5,5), np.uint8)\n#Image=image.pixel_array\nImage=image\nImage=exposure.equalize_adapthist(Image)\nplt.figure(figsize = (65,35))\nplt.axis('off')\n\nplt.subplot(341)\n\n# Now we erode\nerosion = cv2.erode(Image, KNotebook, iterations = 1)\nplt.axis('off')\nplt.title(\"Erosion\", fontsize=50)\n\nplt.imshow(erosion)\n\nplt.subplot(342, frameon=False)\n\nKNotebook = np.ones((5,5), np.uint8)\ndilation = cv2.dilate(Image, KNotebook, iterations = 1)\nplt.axis('off')\nplt.title(\"Dilation\", fontsize=50)\n\nplt.imshow(dilation)\n\nplt.subplot(343, frameon=False)\n\n# Opening - Good for removing noise\nopening = cv2.morphologyEx(Image, cv2.MORPH_OPEN, KNotebook)\nplt.axis('off')\nplt.title(\"Opening\", fontsize=50)\n\nplt.imshow(opening)\n\nplt.subplot(344, frameon=False)\n\n# Closing - Good for removing noise\nclosing = cv2.morphologyEx(Image, cv2.MORPH_CLOSE, KNotebook)\nplt.title(\"Closing\", fontsize=50)\nplt.axis('off')\n\nplt.imshow(closing)","88f2fdad":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Mar\u00edlia Prata, @mpwolke Was here' )","e4858a4d":"#Codes from Olga Belitskya  https:\/\/www.kaggle.com\/olgabelitskaya\/images-with-many-objects","682d0bc0":"#Why should I cover my cough?\n\nSerious respiratory illnesses like influenza, respiratory syncytial virus (RSV), whooping cough and Severe Acute Respiratory Syndrome (SARS) are spread by: Coughing or sneezing, Unclean hands.\n\nThese illnesses spread easily in crowded places where people are in close contact.\n\n#How do I stop the spread of germs if I am sick?\n\nCover your nose and mouth with a tissue every time you cough or sneeze. Throw the used tissue in a waste basket.If you don't have a tissue, sneeze or cough into your sleeve.\n\nIf you don't have a tissue, sneeze or cough into your sleeve. After coughing or sneezing, always clean your hands with soap & water or an alcohol-based hand cleaner.\n\nStay home when you are sick.\n\nDo not share eating utensils, drinking glasses, towels or other personal items.\nhttps:\/\/www.health.state.mn.us\/people\/cyc\/faq.html","201005da":"![](https:\/\/media3.giphy.com\/media\/ivpbT2qllzxuw\/giphy.webp?cid=ecf05e47fi6zzqv99nwrwb6gfs4nz65tthto18dvtrjjpmq9&rid=giphy.webp)https:\/\/www.health.state.mn.us\/people\/cyc\/index.html","f0c1ae24":"#Positive Covid-19 Cough Sample Image"}}