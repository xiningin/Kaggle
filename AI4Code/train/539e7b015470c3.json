{"cell_type":{"b4e4c1ca":"code","326b5ae6":"code","23213ab4":"code","4afe7a5a":"code","dbbc6790":"code","4d785dfe":"code","de8e6ad3":"code","cd7ddb73":"code","5bade359":"code","c04298c3":"code","7615b2eb":"code","7939a084":"code","6d9b6443":"code","578d452e":"code","f358e543":"code","f67c88b1":"code","2317a1fe":"code","d4499b70":"code","f8d9c7eb":"code","5e0553f9":"code","ef4eafe9":"code","ffed4450":"code","8ea6a2e4":"code","7f87839a":"code","65dfaee9":"code","87bf789c":"code","3cf67807":"code","faee0d7a":"code","23f21358":"code","a9530818":"code","cbef6441":"code","7e189a28":"code","5ad822eb":"markdown","f4eabd3e":"markdown","b14a632f":"markdown","758d4481":"markdown","0d602070":"markdown","9f0a34bc":"markdown","b55abe80":"markdown","dfe34dda":"markdown"},"source":{"b4e4c1ca":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport datetime as dt\nimport warnings\nimport matplotlib.pyplot as plt\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import train_test_split\n\n%matplotlib inline\n\nwarnings.filterwarnings('ignore')","326b5ae6":"df = pd.read_csv('..\/input\/equity-residential-apartment-data\/Equity_Apartments_Data.csv')","23213ab4":"df.head()","4afe7a5a":"df.shape","dbbc6790":"df.drop('Unnamed: 0',axis=1,inplace=True)","4d785dfe":"df.isnull().sum()","de8e6ad3":"df = df.drop(['URL','unit_id','building_id','Unique_ID','Amenity'], axis=1)","cd7ddb73":"df['Northern_Exposure']= df['Northern_Exposure'].fillna(df.Northern_Exposure.mean())\ndf['Southern_Exposure']= df['Southern_Exposure'].fillna(df.Southern_Exposure.mean())\ndf['Eastern_Exposure']= df['Eastern_Exposure'].fillna(df.Eastern_Exposure.mean())\ndf['Western_Exposure']= df['Western_Exposure'].fillna(df.Western_Exposure.mean())\ndf['Balcony']= df['Balcony'].fillna(df.Balcony.mean())\ndf['Walk_In_Closet']= df['Walk_In_Closet'].fillna(df.Walk_In_Closet.mean())\ndf['Fireplace']= df['Fireplace'].fillna(df.Fireplace.mean())\ndf['City_Skyline']= df['City_Skyline'].fillna(df.City_Skyline.mean())\ndf['Fireplace']= df['Fireplace'].fillna(df.Fireplace.mean())\ndf['Kitchen_Island']= df['Kitchen_Island'].fillna(df.Kitchen_Island.mean())\ndf['Stainless_Appliances']= df['Stainless_Appliances'].fillna(df.Stainless_Appliances.mean())\ndf['Renovated']= df['Renovated'].fillna(df.Renovated.mean())\ndf['Office_Space']= df['Office_Space'].fillna(df.Fireplace.mean())\ndf['Days_Till_Available']= df['Days_Till_Available'].fillna(df.Days_Till_Available.mean())\ndf['Move_in_date'] = pd.to_datetime(df.Move_in_date)\ndf['Day_Recorded'] = pd.to_datetime(df.Day_Recorded)","5bade359":"df.isnull().sum()","c04298c3":"New_date = []\nfor i in range(df.shape[0]):\n    Move_date = df.Day_Recorded[i]+dt.timedelta(days=df.Days_Till_Available[i])\n    New_date.append(Move_date)","7615b2eb":"df['Move_in_date(new)'] = New_date","7939a084":"df[['Move_in_date','Move_in_date(new)']]","6d9b6443":"df.drop('Move_in_date',axis=1,inplace=True)","578d452e":"df.isnull().sum()","f358e543":"plt.figure(figsize=(20,15))\nsns.heatmap(df.corr(),annot=True)","f67c88b1":"df2 = df.drop(['Northern_Exposure','Southern_Exposure','Eastern_Exposure','Western_Exposure','Balcony','Fireplace', 'City_Skyline', 'Kitchen_Island', 'Stainless_Appliances',\n       'Renovated', 'Office_Space','Address','Days_Till_Available','Day_of_the_week_recorded','Apartment Name','Walk_In_Closet','Estiamted_Vacancy','Units'],axis=1)","2317a1fe":"df2.head()","d4499b70":"plt.figure(figsize=(15,8))\nsns.distplot(df2.Price,kde=True)","f8d9c7eb":"plt.figure(figsize=(15,8))\nsns.distplot(df2.Beds,kde=True)","5e0553f9":"plt.figure(figsize=(15,8))\nsns.distplot(df2.Baths,kde=True)","ef4eafe9":"plt.figure(figsize=(15,8))\nsns.distplot(df2['sq.ft'],kde=True)","ffed4450":"df2.head()","8ea6a2e4":"cities = pd.get_dummies(df.City).drop(df.City.value_counts().tail(1).index[0],axis=1)\ncities.head()","7f87839a":"df3 = pd.concat([df2,cities],axis=1)","65dfaee9":"df3.head()","87bf789c":"plt.figure(figsize=(15,10))\nsns.heatmap(df3.corr(),annot=True)","3cf67807":"df3.columns","faee0d7a":"x = df3[['Beds','sq.ft','Floor','Boston', 'Denver', 'Los Angeles', 'New York City',\n       'Orange County', 'San Diego', 'San Francisco', 'Seattle',\n       'Washington DC']]\ny = df3.Price","23f21358":"x_train,x_test,y_train,y_test = train_test_split(x,y,random_state=0)","a9530818":"RFR = RandomForestRegressor(n_estimators = 100,random_state=0)","cbef6441":"RFR.fit(x_train,y_train)","7e189a28":"RFR.score(x_test,y_test)","5ad822eb":"# **Equity Residential Apartment Price Model Building**","f4eabd3e":"Date Column \"Move_in_date\" is have some missing values, But there is another Date Column which is Day_Recorded, which shows that when the Sale is Recorded and there is another Columns Days_Till_Available, which Shows that when they Move in so if we add the Days Recorded in Days Till Available, we will eventually get the Columns Move_in_date, without any Null values.  ","b14a632f":"Here We can see Old Column Move in date is completely identical with New Move In date without any null values, so we do not need old column.","758d4481":"### Model Building","0d602070":"### Data Cleaning","9f0a34bc":"Removing Un Necessary Columns.","b55abe80":"### Feature Engineering","dfe34dda":"Our Created Model have the Accuracy of **99.04%**."}}