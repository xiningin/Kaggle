{"cell_type":{"0fb84762":"code","fc292e5b":"code","32f38655":"code","e694b683":"code","063346b5":"code","5a8dd191":"code","899ee9b7":"code","8a59a7ff":"code","9fcf5aec":"code","c145c2ab":"code","f4c9b9ce":"code","a57e787d":"code","ea8a24f3":"code","257ff6ff":"code","8bfaa355":"code","bb6cfb34":"code","b6629393":"markdown","05532011":"markdown","985b0c5b":"markdown","6b44ba0b":"markdown","785c317a":"markdown","2d6f2279":"markdown","3360aeee":"markdown"},"source":{"0fb84762":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","fc292e5b":"import plotly.io as pio\nimport plotly.graph_objects as go\nfrom plotly.figure_factory import create_distplot\n\npio.templates[\"draft\"] = go.layout.Template(\n    layout_annotations=[\n        dict(\n            textangle=-30,\n            opacity=0.1,\n            font=dict(color=\"black\", size=100),\n            xref=\"paper\",\n            yref=\"paper\",\n            x=0.5,\n            y=0.5,\n            showarrow=False,\n        )\n    ]\n)\npio.templates.default = \"draft\"","32f38655":"data = pd.read_csv('\/kaggle\/input\/social-network-ads\/Social_Network_Ads.csv')\ndata","e694b683":"data.info()","063346b5":"fig = go.Figure()\n\nfig.add_trace(go.Histogram(x=data['Purchased'], histfunc='count', marker_color='#330C73'))\n\nfig.update_layout(title=\"Target Variable Countplot\",\n                  xaxis_title=\"Purchased\",\n                  yaxis_title=\"Count\",\n                  bargap=0.5)\n\nfig.show()","5a8dd191":"fig = go.Figure()\nfig.add_trace(go.Pie(labels=data['Purchased'].value_counts().index, values=data['Purchased'].value_counts().values,\n                     pull=[0.2, 0], textfont=dict(size=16)))\n\nfig.update_layout(title=\"Target Variable Pie Plot\",\n                 annotations=[dict(text='Purchased', x=0.45, y=0.65, font_size=14, showarrow=True)])\n\n\nfig.show()","899ee9b7":"# Put the cursor on a bar to see the corresponding Age\/Salary range.\n\nfig = go.Figure()\n\nfig.add_trace(go.Histogram(x=data['Age'], histfunc='count', marker_color='#330C73'))\nfig.add_trace(go.Histogram(x=data['EstimatedSalary'], histfunc='count', marker_color='#330C73', visible=False))\nfig.update_layout(title=\"Title Will be Updated Once You Select a Feature from the Left Button !\")\n\nbuttons = [dict(method=\"update\", \n                label=\"Age\",\n                args=[{\"type\":\"histogram\", \"x\":[data[\"Age\"]]},\n                      {\"title\":\"Age Histogram\", \"xaxis.title\":\"Age\"}]),\n          dict(method=\"update\", \n                label=\"Estimated Salary\",\n                args=[{\"type\":\"histogram\", \"x\":[data[\"EstimatedSalary\"]]},\n                     {\"title\":\"Estimated Salary Histogram\", \"xaxis.title\":\"Estimated Salary\"}])]\n\nfig.update_layout(updatemenus=[{\"buttons\":buttons, \"active\":0,\"showactive\":False, \"direction\":\"down\", 'x':0.1, 'y':1.2}],\n                  xaxis_title=\"Age\",\n                  yaxis_title=\"Count\",\n                  bargap=0.05)\n\nfig.show()","8a59a7ff":"fig = create_distplot([data['Age']], [\"Age\"], curve_type=\"normal\", show_curve=True, show_hist=True) # default curve_type is \"kde\"\n\nfig.update_layout(title=\"Age with Normal Distplot\")\n\nfig.show()","9fcf5aec":"fig = create_distplot([data['EstimatedSalary']], [\"Estimated Salary\"], curve_type=\"normal\", show_curve=True, show_hist=False) # default curve_type is \"kde\"\n\nfig.update_layout(title=\"Estimated Salary with Normal Distplot\")\n\nfig.show()","c145c2ab":"# Put the cursor on a bar to see the corresponding Age\/Salary range.\n\nfig = go.Figure()\n\nfig.add_trace(go.Box(y=data['Age'], marker_color='indianred', boxmean='sd' ,name=\"\"))\nfig.add_trace(go.Box(y=data['EstimatedSalary'], visible=False))\nfig.update_layout(title=\"Title Will be Updated Once You Select a Feature from the Left Button !\")\n\nbuttons = [dict(method=\"update\", \n                label=\"Age\",\n                args=[{\"type\":\"box\", \"y\":[data[\"Age\"]], \"boxes.name\":\"\"},\n                      {\"title\":\"Age Boxplot\", \"xaxis.title\":\"Age\"}]),\n          dict(method=\"update\", \n                label=\"Estimated Salary\",\n                args=[{\"type\":\"box\", \"y\":[data[\"EstimatedSalary\"]], \"boxes.name\":\"\"},\n                     {\"title\":\"Estimated Salary Boxplot\", \"xaxis.title\":\"Estimated Salary\"}])]\n\nfig.update_layout(updatemenus=[{\"buttons\":buttons, \"active\":0,\"showactive\":False, \"direction\":\"down\", 'x':0.1, 'y':1.2}],\n                  xaxis_title=\"Age\",\n                  yaxis_title=\"Count\",\n                  bargap=0.05)\n\nfig.show()","f4c9b9ce":"fig = go.Figure()\n\nx0, x1 = data.loc[data.Purchased==0, 'Age'].to_numpy(), data.loc[data.Purchased==1, 'Age'].to_numpy()\nx2, x3 = data.loc[data.Purchased==0, 'EstimatedSalary'].to_numpy(), data.loc[data.Purchased==1, 'EstimatedSalary'].to_numpy()\nfig.add_trace(go.Histogram(x=x0, histfunc='count', name=\"Not Purchased\", visible=True))\nfig.add_trace(go.Histogram(x=x1, histfunc='count', name=\"Purchased\", visible=True))\nfig.add_trace(go.Histogram(x=x2, histfunc='count', name=\"Not Purchased\", visible=False))\nfig.add_trace(go.Histogram(x=x3, histfunc='count', name=\"Purchased\", visible=False))\nfig.update_layout(title=\"Title Will be Updated Once You Select a Feature from the Left Button !\")\n\n\nbuttons = [dict(method=\"update\", label=\"Age\",\n               args=[{\"x\":[x0,x1], \"type\":\"histogram\"}, {\"title\":\"Age Histograms Over Purchased\", \"xaxis.title\":\"Age\"}]),\n          dict(method=\"update\", label=\"Estimated Salary\",\n               args=[{\"x\":[x2,x3], \"type\":\"histogram\"}, {\"title\":\"Estimated Salary Histograms Over Purchased\", \"xaxis.title\":\"Estimated Salary\"}])]\n\nfig.update_layout(updatemenus=[{\"buttons\":buttons, \"active\":0, \"showactive\":False, \"direction\":\"down\", 'x':0.1, 'y':1.2}])\n\nfig.show()","a57e787d":"fig = go.Figure()\n\nfig.add_trace(go.Box(y=x0, marker_color='lightgreen', boxmean='sd' ,name=\"Not Purchased\"))\nfig.add_trace(go.Box(y=x1, marker_color='darkgreen', boxmean='sd' ,name=\"Purchased\"))\n\nfig.update_layout(title=\"Age Boxplots Over Purchased\", yaxis_title=\"Age\")\n\nfig.show()","ea8a24f3":"fig = go.Figure()\n\nfig.add_trace(go.Box(y=x2, marker_color='lightgreen', boxmean='sd' ,name=\"Not Purchased\"))\nfig.add_trace(go.Box(y=x3, marker_color='darkgreen', boxmean='sd' ,name=\"Purchased\"))\n\nfig.update_layout(title=\"Estimated Salary Boxplots Over Purchased\", yaxis_title=\"Estimated Salary\")\n\nfig.show()","257ff6ff":"data","8bfaa355":"data['SalaryClass'] = pd.cut(x=data['EstimatedSalary'], bins=[0, 60000, 100000, 150000], labels=[1,2,3], include_lowest=True) # data['SalaryClass'] = ","bb6cfb34":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x=data['Age'], y=data['EstimatedSalary'], mode='markers', \n                         marker=dict(color=data['SalaryClass'].to_numpy(), size=15, showscale=True)))\n\nfig.update_layout(xaxis_title='Age', yaxis_title='Estimated Salary', title=\"Scatter Plot - Color = Salary Class\")\n\nfig.show()","b6629393":"## Boxplots","05532011":"## Target Variable: Purchased","985b0c5b":"## Distplots","6b44ba0b":"# EDA: Exploratory Data Analysis","785c317a":"# Reading Data","2d6f2279":"## Histograms","3360aeee":"## Features' Distributions Over Target Variable"}}