{"cell_type":{"f07fe763":"code","b455d05e":"code","3fefa7d8":"code","9f0c76d2":"code","cc92772c":"code","f78d2c24":"code","579a33f6":"code","37e4ddd2":"code","46187c1b":"code","fcc8a437":"code","b5057dc3":"code","0a3ceb85":"code","333edc71":"code","675a52ad":"markdown"},"source":{"f07fe763":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import r2_score\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b455d05e":"df=pd.DataFrame({\"bilet_price\":[100,80,70,60,50,40],\n                 \"trib\u00fcn_level\":[10,25,15,5,45,35]})\nprint(df)","3fefa7d8":"new_index=[1,2,3,4,5,6]\ndf[\"new_index\"]=new_index\ndf=df.set_index(\"new_index\")\nprint(df)","9f0c76d2":"df.info()","cc92772c":"print(df.describe())","f78d2c24":"dec_tree=DecisionTreeRegressor(random_state=42)\nrf=RandomForestRegressor(n_estimators=100,random_state=42)","579a33f6":"x=df.iloc[:,1].values.reshape(-1,1)\ny=df.iloc[:,0].values.reshape(-1,1)","37e4ddd2":"dec_tree.fit(x,y)\nrf.fit(x,y)","46187c1b":"r2_dec=dec_tree.predict(x)\nr2_rf=rf.predict(x)\n\nprint(\"r2 square for decision tree reg.:\", r2_score(y,r2_dec))\nprint(\"r2 square for random forest reg.:\", r2_score(y,r2_rf))","fcc8a437":"plt.scatter(x,y)\nplt.xlabel(\"tribun level\")\nplt.ylabel(\"bilette price\")\nplt.show()","b5057dc3":"x__=np.arange(min(x),max(x),0.01).reshape(-1,1)\n","0a3ceb85":"y_head_dec=dec_tree.predict(x__)\ny_head_rf=rf.predict(x__)","333edc71":"plt.plot(x__,y_head_dec,label=\"decision tree reg.\")\nplt.plot(x__,y_head_rf,label=\"random forest reg.\")\nplt.xlabel(\"trib\u00fcn level\")\nplt.ylabel(\"bilet price\")\nplt.legend()\nplt.show()","675a52ad":"***This kernel contains a simple notation about decision tree regression and random forest regression to compare***"}}