{"cell_type":{"37898171":"code","966c82c3":"code","c1f0b67d":"code","67c6e2e5":"code","dfa43985":"code","0d025100":"code","09b7dc07":"code","dd8082b9":"code","3eacfb6a":"code","aa842da4":"code","4d67cf62":"code","0fb98328":"code","8233e306":"code","8c5134ad":"code","6d815f34":"code","ad50489d":"code","9491bf3e":"code","73a6d95f":"code","a955d751":"code","118df0c7":"code","c4431fe8":"code","bbd8c9c8":"code","8b4ad297":"code","dd37cd9b":"code","76654df6":"code","d46f8e12":"code","15487b0a":"code","bebf80dc":"code","4bd6e761":"code","5b9856c3":"code","bbab415a":"code","c9a804bc":"code","b61c1512":"code","1696ad6f":"code","3f51641e":"code","a2762adf":"code","dbac1a34":"code","454b42ee":"code","401aa6c3":"code","d5f7928d":"code","66bfbc5c":"code","cf06d52e":"code","d5022faa":"code","afdd0dea":"code","fe1e901f":"markdown","8bebb0ad":"markdown","85ac6bf8":"markdown","5afe1fe5":"markdown","339a90bf":"markdown","3ec55975":"markdown","f1378d5d":"markdown","f0da036f":"markdown","662e0a8d":"markdown","2d2f2860":"markdown","41cc75e6":"markdown","ba586c54":"markdown","17dab3bd":"markdown","60420d34":"markdown","68494da8":"markdown"},"source":{"37898171":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","966c82c3":"# \ub77c\uc774\ube0c\ub7ec\ub9ac \ubc0f \ub370\uc774\ud130 \uc138\ud2b8 \ub85c\ub529\nimport numpy as np\nimport pandas as pd\nimport gc\nimport time\n\n%matplotlib inline\n\n# Suppress warnings \nimport warnings\nwarnings.filterwarnings('ignore')\n\n# matplotlib and seaborn for plotting\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\npd.set_option('display.max_rows', 100)\npd.set_option('display.max_columns', 200)","c1f0b67d":"# application-train \uacfc  application_test \ub370\uc774\ud130 read\napp_train = pd.read_csv('..\/input\/home-credit-default-risk\/application_train.csv')\n#app_test = pd.read_csv('..\/input\/home-credit-default-risk\/application_test.csv')","67c6e2e5":"# app_train \uacfc app_test\ub97c \ud568\uaed8 \uac00\uacf5\uc744 \ud574\uc57c\ud558\uae30 \ub54c\ubb38\uc5d0 concat \uc774\uc6a9\ud558\uc5ec \ud1b5\ud569\n\n#apps = pd.concat([app_train, app_test])\nprint(\"Size of application_train data\", app_train.shape)\n#print(\"Size of application_test data\", app_test.shape)\n#print(\"Size of apps\", apps.shape)","dfa43985":"# previous_application, bureau, bureau_balance \ub370\uc774\ud130 read\n\n#prev = pd.read_csv('..\/input\/home-credit-default-risk\/previous_application.csv')\nbureau = pd.read_csv('..\/input\/home-credit-default-risk\/bureau.csv')\nbureau_bal = pd.read_csv('..\/input\/home-credit-default-risk\/bureau_balance.csv')\n    ","0d025100":"#print(\"Size of previous_application data\", prev.shape)\nprint(\"Size of bureau data\", bureau.shape)\nprint(\"Size of bureau-balance data\", bureau_bal.shape)","09b7dc07":"# \uc778\ub371\uc2a4\ub97c \ud1b5\ud574\uc11c \ud655\uc778\ub3c4 \uac00\ub2a5\ud568\nprint(\"The number of features is :\",bureau.shape[1],\"The number of row is:\",bureau.shape[0])","dd8082b9":"# bureau \ub370\uc774\ud130\ub97c \ud655\uc778\n\nbureau.head(15)\n\n# day_credit\uc5d0\uc11c -497 \uacfc -208 \uac12\uc740 \uac19\uc740 ID 215354\uc5d0 \ud574\ub2f9","3eacfb6a":"# 215354 ID \uace0\uac1d\uc758 \uc774\uc804 \uc2e0\uc6a9 \uac70\ub798 \ud655\uc778\nbureau[bureau['SK_ID_CURR'] == 215354]","aa842da4":"# TARGET \uac12\uc744 \uac00\uc838\uc624\uae30 \uc704\ud574 bureau\ub97c apps\uc640 \uc870\uc778\napp_bureau = bureau.merge(app_train[['SK_ID_CURR', 'TARGET']], left_on='SK_ID_CURR', right_on='SK_ID_CURR', how='inner')\napp_bureau.shape","4d67cf62":"#import platform\n#import matplotlib.font_manager as fm\n\n#plt.rcParams['font.family']= \"Malgun Gothic\"\n#plt.rcParams['axes.unicode_minus'] = False\n\n#from IPython.display import set_matplotlib_formats\n\n#set_matplotlib_formats(\"retina\")###","0fb98328":"f,ax=plt.subplots(1,2,figsize=(12,6))\napp_train.TARGET.value_counts().plot.pie(explode=[0,0.1],autopct='%1.1f%%',ax=ax[0],shadow=True)\nax[0].set_title('Distribution of Target')\nax[0].set_ylabel('')\nsns.countplot('TARGET',data=app_train,ax=ax[1])\nax[1].set_title('Target count')\nplt.show()","8233e306":"# Null \uac12 \ud655\uc778 \uac00\ub2a5\ud55c \uc0ac\uc6a9\uc790 \ud568\uc218 (\ub370\uc774\ud130\uc5d0\uc11c \ube44\uc728)\n\ndef nulldata(data):\n    total = data.isnull().sum().sort_values(ascending = False)\n    percent = (data.isnull().sum()\/data.isnull().count()*100).sort_values(ascending = False)\n    ms=pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\n    ms= ms[ms[\"Percent\"] > 0]\n    f,ax =plt.subplots(figsize=(15,10))\n    plt.xticks(rotation='90')\n    fig=sns.barplot(ms.index, ms[\"Percent\"],color=\"green\",alpha=0.8)\n    plt.xlabel('Features', fontsize=15)\n    plt.ylabel('Percent of null values', fontsize=15)\n    plt.title('Percent null data by feature', fontsize=15)\n    return ms","8c5134ad":"# bureau \ub370\uc774\ud130\ub9cc \ud655\uc778\nnulldata(bureau)","6d815f34":"# \uc704 nulldata \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uba74 \uc88b\uc74c \uac70\uc774 \ubaa8\ub4e0 \ub370\uc774\ud130\uc5d0 \uc801\uc6a9 \uac00\ub2a5\n\nnulldata(app_train)","ad50489d":"# Numerical Features(\uc22b\uc790\ud615 \ud53c\ucc98) \uacfc Categorical Features(\ubc94\uc8fc\/object \ud53c\ucc98) \uad6c\ubd84 \ud568\uc218\n# \ub2e4\ub978 \ub370\uc774\ud130\uc5d0 \uc0ac\uc6a9 \uac00\ub2a5\ud558\ub2c8, \uae30\ub9d0\ud504\ub85c\uc81d\ud2b8\uc5d0 \uc0ac\uc6a9\ud574\ub3c4 \uc88b\uc740\n\ndef type_features(data):\n    categorical_features = data.select_dtypes(include = [\"object\"]).columns\n    numerical_features = data.select_dtypes(exclude = [\"object\"]).columns\n    print( \"categorical_features :\",categorical_features)\n    print('-----'*40)\n    print(\"numerical_features:\",numerical_features)","9491bf3e":"# bureau \ub370\uc774\ud130\uc5d0\ub9cc \uc801\uc6a9 \ud574 \ubcf4\uae30\ntype_features(bureau)","73a6d95f":"# \uc2dc\uac01\ud654 \ud568\uc218\ndef plot_re(df,t1='',t2=''):\n    f,ax=plt.subplots(1,2,figsize=(12,8))\n    df[[t1,t2]].groupby([t1]).count().plot.bar(ax=ax[0],color='Blue')\n    ax[0].set_title('count of customer on '+t1)\n    sns.countplot(t1,hue=t2,data=df,ax=ax[1],palette=\"spring\")\n    ax[1].set_title(t1+': Target 0 vs Target 1')\n    # Rotate x-labels\n    plt.xticks(rotation=-90)\n    a=plt.show()\n    return a","a955d751":"# \ud568\uc218 \ud638\ucd9c \n# \ub300\ucd9c \uc0c1\ud0dc\uc5d0 \ub530\ub978 Target\nplot_re(app_bureau,'CREDIT_ACTIVE','TARGET')\n\n# Closed \ub41c \uace0\uac1d \uadf8\ub8f9\uc5d0 \uc18d\ud55c \uace0\uac1d\ubcf4\ub2e4\ub294 \uc2e0\uc6a9 \ud65c\uc131(active) \uace0\uac1d\uc740 \ube44 \uc9c0\uae09 \uc790 \uc218\uac00 \ub9ce\uc74c","118df0c7":"# CREDIT_CURRENCY: \ub300\ucd9c \uae08\uc561 \ud654\ud3d0\uc720\ud615\uc5d0 \ub530\ub978 Target\nplot_re(app_bureau,'CREDIT_CURRENCY','TARGET')\n\n# currency 1\uc744 \uc0ac\uc6a9\ud558\ub294 CREDIT_CURRENCY \uace0\uac1d\uc740 \ube44 \uc9c0\uae09 \uc790 \uc218\uac00 \ub9ce\uc74c","c4431fe8":"# Credit type \ub530\ub978 Target\nplot_re(app_bureau,'CREDIT_TYPE','TARGET')\n\n# \uc8fc\uc5b4\uc9c4 \ud50c\ub86f\uc744 \ubc14\ud0d5\uc73c\ub85c CREDIT_TYPE \uc18c\ube44\uc790 \uc2e0\uc6a9(consumer credit)\uc774 \ub300\ucd9c\uc744\ubc1b\uc9c0 \uc54a\ub294 \uc0ac\ub78c\uc758 \uc218\uac00 \ub9ce\ub2e4\ub294 \uac83\uc774 \ubd84\uba85\ud568","bbd8c9c8":"f, ax = plt.subplots(2,3,figsize=(13, 10))\n\n\n# DAYS_CREDIT: \ud604\uc7ac \ub300\ucd9c \uc2e0\uccad \uc77c \uae30\uc900 \uacfc\uac70 \ub300\ucd9c \uc2e0\uccad \uc9c0\ub09c \uae30\uac04 \ubd84\ud3ec \ud655\uc778\nsns.distplot(app_bureau.DAYS_CREDIT.dropna(), kde=True, color=\"g\", \n             ax=ax[0,0]).set_title('DAYS CREDIT Distribution')\n\n# CREDIT_DAY_OVERDUE: \ub300\ucd9c \uc2e0\uccad \uc2dc CB \ud06c\ub808\ub527 \uc5f0\uccb4 \uc77c\uc218\nsns.distplot(app_bureau.CREDIT_DAY_OVERDUE.dropna(), kde=True, color=\"b\",\n             ax=ax[0,1]).set_title(' CREDIT DAY OVERDUE Distribution')\n\n\n# DAYS_CREDIT_UPDATE: \ub300\ucd9c \uc2e0\uccad\uc804 \ub9c8\uc9c0\ub9c9 \uc815\ubcf4 \ubc1b\uc740 \uae30\uac04\nsns.distplot(bureau.DAYS_CREDIT_UPDATE.dropna(), kde=True, \n             color=\"r\", ax=ax[0,2]).set_title('DAYS CREDIT UPDATE Distribution')\n\n\n# AMT_CREDIT_SUM_LIMIT: \uc2e0\uc6a9 \uce74\ub4dc \ud604\uc7ac \uc2e0\uc6a9\ud55c\ub3c4\nsns.distplot(bureau.AMT_CREDIT_SUM_LIMIT.dropna(), kde=True, color=\"g\", \n             ax=ax[1,0]).set_title(' Distribution')\n\n\n# AMT_CREDIT_SUM_DEBT: \ud604\uc7ac \ucc44\ubb34 \uae08\uc561 \ucd1d\uc561\nsns.distplot(bureau.AMT_CREDIT_SUM_DEBT.dropna(), kde=True, color=\"b\",\n             ax=ax[1,1]).set_title(' Distribution')\n\n \n# AMT_CREDIT_SUM_OVERDUE: \ucd5c\ub300 \uc5f0\uccb4\uae08\uc561\nsns.distplot(bureau.AMT_CREDIT_SUM_OVERDUE.dropna(), kde=True, \n             color=\"r\", ax=ax[1,2]).set_title('DAYS CREDIT UPDATE Distribution')","8b4ad297":"# \uc2e0\uc6a9 \ud55c\ub3c4\ub97c \ucd08\uacfc\ud558\uc5ec \uc5f0\uccb4 \ub41c \uace0\uac1d\uc774 \uc788\uc744\uae4c\uc694?\n\nsns.jointplot(x=\"AMT_CREDIT_SUM_LIMIT\", y=\"AMT_CREDIT_SUM_OVERDUE\", data=app_bureau)\nplt.show()\n\n# \uc5f0\uccb4 \ub41c \uc2e0\uc6a9 \ud55c\ub3c4\ub97c \ucd08\uacfc\ud558\ub294 \uace0\uac1d\uc774 \uc5c6\uc74c\uc744 \uc54c \uc218 \uc788","dd37cd9b":"# CNT_CREDIT_PROLONG \uc2e0\uc6a9 \uc5f0\uc7a5 \ud69f\uc218\uc5d0 \ub530\ub978 Target\nplot_re(app_bureau,'CNT_CREDIT_PROLONG','TARGET')","76654df6":"# \uc2e0\uc6a9(\ud06c\ub808\ub527)\uc774 \uba87 \ubc88 \uc5f0\uc7a5\uc744 \ud588\ub294\uc9c0, \uc5f0\uc7a5\ub418\uc5c8\ub2e4\uba74 \uc5b4\ub5a4 \ub300\ucd9c type \uc778\uc9c0 \uc54c\uc544\ubcf4\ub294 \uc2dc\uac01\ud654\n\n# CNT_CREDIT_PROLONG \uc2e0\uc6a9 \uc5f0\uc7a5 \ud69f\uc218\n# CREDIT_TYPE \ub300\ucd9c \uc720\ud615\n\nsns.stripplot(x=\"CNT_CREDIT_PROLONG\", y=\"CREDIT_TYPE\", data=app_bureau)\nplt.show()\n\n# \uacb0\uacfc: \uc2e0\uc6a9 \uce74\ub4dc \uc720\ud615 \uc2e0\uc6a9\uc774 \uc5f0\uc7a5 \ub41c \ucd5c\ub300 \ud69f\uc218\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc74c","d46f8e12":"# correlated features\n\ncorrmat = app_bureau.corr()\ntop_corr_features = corrmat.index[abs(corrmat[\"TARGET\"])>=0.03]\nplt.figure(figsize=(12,8))\ng = sns.heatmap(app_bureau[top_corr_features].corr(),annot=True,cmap=\"Oranges\")","15487b0a":"bureau_bal.head(15)","bebf80dc":"print(\"the number of columns\",bureau_bal.shape[1],\"the number of rows :\",bureau_bal.shape[0])","4bd6e761":"type_features(bureau_bal)","5b9856c3":"# null \uac12\uc744 \ud655\uc778\n\ntotal = bureau_bal.isnull().sum().sort_values(ascending = False)\npercent = (bureau_bal.isnull().sum()\/bureau_bal.isnull().count()*100).sort_values(ascending = False)\nms=pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nms= ms[ms[\"Percent\"] > 0]\nms","bbab415a":"f, ax = plt.subplots(figsize=(7,5))\n\n# Types of colors\ncolor_types = ['#78C850','#F08030','#6890F0','#A8B820','#A8A878','#A040A0','#F8D030',  \n                '#E0C068','#EE99AC','#C03028','#F85888','#B8A038','#705898','#98D8D8','#7038F8']\n\n# Count Plot \nsns.countplot(x='STATUS', data=bureau_bal,palette=color_types).set_title('count based on status type')","c9a804bc":"# \uc22b\ucc28\ub85c \ud655\uc778\nbureau_bal['STATUS'].value_counts()","b61c1512":"# bureau_bal \ub370\uc774\ud130\uc640 bureau \ub370\uc774\ud130 \uc0ac\uc774\uc988 \ud655\uc778\nprint(bureau_bal.shape, bureau.shape)","1696ad6f":"# bureau_bal \ub370\uc774\ud130\uc640 bureau \ub370\uc774\ud130\uc640 join\nbureau_bal = bureau_bal.merge(bureau[['SK_ID_CURR', 'SK_ID_BUREAU']], on='SK_ID_BUREAU', how='left')\nbureau_bal.shape\n","3f51641e":"bureau_bal.head()","a2762adf":"# \uace0\uac1d \ub2f9 \uacfc\uac70 \ub300\ucd9c \uc218\n\nbureau_fe1= bureau\nPAST_LOANS_PER_CUS= bureau_fe1[['SK_ID_CURR', 'DAYS_CREDIT']].groupby(by = ['SK_ID_CURR'])['DAYS_CREDIT'].count().reset_index().rename(index=str, columns={'DAYS_CREDIT': 'BUREAU_LOAN_COUNT'})\nbureau_fe1 = bureau_fe1.merge(PAST_LOANS_PER_CUS, on = ['SK_ID_CURR'], how = 'left')\nprint(bureau.shape)\nprint(bureau_fe1.shape)\nbureau_fe1.head(10)","dbac1a34":"# \uace0\uac1d \ub2f9 \uacfc\uac70 \ub300\ucd9c \uc720\ud615 \uc218\n\nBUREAU_LOAN_TYPES = bureau_fe1[['SK_ID_CURR', 'CREDIT_TYPE']].groupby(by = ['SK_ID_CURR'])['CREDIT_TYPE'].nunique().reset_index().rename(index=str, columns={'CREDIT_TYPE': 'BUREAU_LOAN_TYPES'})\nbureau_fe1 = bureau_fe1.merge(BUREAU_LOAN_TYPES, on = ['SK_ID_CURR'], how = 'left')\nprint(bureau_fe1.shape)\nbureau_fe1.head()","454b42ee":"# \uace0\uac1d \ub2f9 \uc720\ud615\ubcc4 \ud3c9\uade0 \uacfc\uac70 \ub300\ucd9c \uc218 = \uace0\uac1d \ub2f9 \uacfc\uac70 \ub300\ucd9c \uc218 \/ \uace0\uac1d \ub2f9 \uacfc\uac70 \ub300\ucd9c \uc720\ud615 \uc218\n# --> \uace0\uac1d\uc774 \ub2e4\uc591\ud55c \uc720\ud615\uc758 \ub300\ucd9c\uc744 \ubc1b\uac70\ub098 \ub2e8\uc77c \uc720\ud615\uc758 \ub300\ucd9c\uc5d0 \uc9d1\uc911\ud558\uace0 \uc788\ub294\uc9c0 \ud655\uc778\uac00\ub2a5\n\nbureau_fe1['AVERAGE_LOAN_TYPE'] = bureau_fe1['BUREAU_LOAN_COUNT']\/bureau_fe1['BUREAU_LOAN_TYPES']\n\nprint(bureau_fe1.shape)\nbureau_fe1.head(15)","401aa6c3":"# \ud544\uc694\uc5c6\ub294 \uceec\ub7fc\uc740 \uc0ad\uc81c\n\ndel bureau_fe1['BUREAU_LOAN_COUNT'], bureau_fe1['BUREAU_LOAN_TYPES']\nprint(bureau_fe1.shape)\nbureau_fe1.head()","d5f7928d":"# BUREAU \ub370\uc774\ud130\uc758 active \ub300\ucd9c \ube44\uc728 (CREDIT\uc774 ACTIVE \ub610\ub294 CLOSED\uc778\uc9c0)\n\n\nbureau_fe1['CREDIT_ACTIVE_CLOSED'] = bureau_fe1['CREDIT_ACTIVE']\n\n# Closed \uc778 \uacbd\uc6b0\uc5d0\ub294 y\uc5d0\ub294 0, ACTIVE \uc778\uacbd\uc6b0\uc5d0\ub294 Y=1 \ndef f(x):\n    if x == 'Closed':\n        y = 0\n    else:\n        y = 1    \n    return y\n\nbureau_fe1['CREDIT_ACTIVE_CLOSED'] = bureau_fe1.apply(lambda x: f(x.CREDIT_ACTIVE), axis = 1)\n\n# CUSTOMER \ub2f9 \ud65c\uc131 \uc0c1\ud0dc\uc778 \ud3c9\uade0 \ub300\ucd9c \uc218 \uacc4\uc0b0\ngrp = bureau_fe1.groupby(by = ['SK_ID_CURR'])['CREDIT_ACTIVE_CLOSED'].mean().reset_index().rename(index=str, columns={'CREDIT_ACTIVE_CLOSED':'ACTIVE_LOANS_PERCENTAGE'})\nbureau_fe1= bureau_fe1.merge(grp, on = ['SK_ID_CURR'], how = 'left')\n# \uc911\ubcf5\ub41c \uceec\ub7fc \uc0ad\uc81c\ndel bureau_fe1['CREDIT_ACTIVE_CLOSED']\nprint(bureau_fe1.shape)","66bfbc5c":"bureau_fe1[bureau_fe1['SK_ID_CURR'] == 215354]","cf06d52e":"# bureau \ucc44\ubb34 \uc644\ub8cc \ub0a0\uc9dc \ubc0f \ub300\ucd9c \uae08\uc561 \ub300\ube44 \ucc44\ubb34 \uae08\uc561 \uad00\ub828 \ud53c\ucc98 \uac00\uacf5\n\n# \uc608\uc815 \ucc44\ubb34 \uc2dc\uc791 \ubc0f \uc644\ub8cc\uc77c\uacfc \uc2e4\uc81c \ucc44\ubb34 \uc644\ub8cc\uc77c\uac04\uc758 \ucc28\uc774 \ubc0f \ub0a0\uc9dc \ube44\uc728 \uac00\uacf5.  \nbureau_fe1['BUREAU_ENDDATE_FACT_DIFF'] = bureau_fe1['DAYS_CREDIT_ENDDATE'] - bureau_fe1['DAYS_ENDDATE_FACT']\nbureau_fe1['BUREAU_CREDIT_FACT_DIFF'] = bureau_fe1['DAYS_CREDIT'] - bureau_fe1['DAYS_ENDDATE_FACT']\nbureau_fe1['BUREAU_CREDIT_ENDDATE_DIFF'] = bureau_fe1['DAYS_CREDIT'] - bureau_fe1['DAYS_CREDIT_ENDDATE']\n\n# \ucc44\ubb34 \uae08\uc561 \ub300\ube44\/\ub300\ucd9c \uae08\uc561 \ube44\uc728 \ubc0f \ucc28\uc774 \uac00\uacf5\nbureau_fe1['BUREAU_CREDIT_DEBT_RATIO'] = bureau_fe1['AMT_CREDIT_SUM_DEBT'] \/ bureau_fe1['AMT_CREDIT_SUM']\nbureau_fe1['BUREAU_CREDIT_DEBT_DIFF'] = bureau_fe1['AMT_CREDIT_SUM_DEBT'] - bureau_fe1['AMT_CREDIT_SUM']\n\nbureau_fe1.head()","d5022faa":"# \uc2e0\uc6a9 \uc5f0\uc7a5 \ud3c9\uade0 \ud69f\uc218 \nbureau_fe1['CNT_CREDIT_PROLONG'] = bureau_fe1['CNT_CREDIT_PROLONG'].fillna(0)\ngrp = bureau_fe1[['SK_ID_CURR', 'CNT_CREDIT_PROLONG']].groupby(by = ['SK_ID_CURR'])['CNT_CREDIT_PROLONG'].mean().reset_index().rename(index = str, columns = { 'CNT_CREDIT_PROLONG':'AVG_CREDITDAYS_PROLONGED'})\nbureau_fe1 = bureau_fe1.merge(grp, on = ['SK_ID_CURR'], how = 'left')\nprint(bureau_fe1.shape)\nbureau_fe1.head()","afdd0dea":"#bureau_fe1 = bureau_fe1.merge(bureau_bal, on='SK_ID_CURR', how='left')\n#print(bureau_fe1.shape)","fe1e901f":"![image.png](attachment:f0382e4d-e257-49fd-accd-8490b2861e7b.png)","8bebb0ad":"### Numerical Features(\uc22b\uc790\ud615 \ud53c\ucc98) \uacfc Categorical Features(\ubc94\uc8fc\/object \ud53c\ucc98) \uad6c\ubd84","85ac6bf8":"## EDA - Target \uc720\ud615\uc5d0 \ub530\ub77c bureau \ub370\uc774\ud130 \ube44\uad50\n- application_train \ub370\uc774\ud130\uc640 bureau \ub370\uc774\ud130 merge\n- NULL \uac12 \ud655\uc778(\ub370\uc774\ud130\uc5d0\uc11c NULL \uac12 \ube44\uc728) \n- Categorical date --> CREDIT ACTIVE, CREDIT_CURRENCY, CREDIT TYPE \uae30\ubc18 \ubd84\uc11d","5afe1fe5":"### Numerical Features & Categorical Feature \uc704\ud55c \uc2dc\uac01\ud654 \ud568\uc218\n- CREDIT_ACTIVE', 'CREDIT_CURRENCY', 'CREDIT_TYPE'","339a90bf":"## Bureau Feature Engineering \n- \uace0\uac1d \ub2f9 \ub300\ucd9c\uc740 \uba87 \uac74\uc785\ub2c8\uae4c? --> \ub9ce\uc744\uc218\ub85d \uc88b\ub2e4 ... \uc801\uc744\uc218\ub85d \uc88b\ub2e4??\n- \uace0\uac1d \ub2f9 \uacfc\uac70 \ub300\ucd9c \uc720\ud615 \uc218\ub294? \n- \uace0\uac1d \ub2f9 \uc720\ud615\ubcc4 \ud3c9\uade0 \uacfc\uac70 \ub300\ucd9c \uc218\ub294?\n- \ub300\ucd9c \uc0c1\ud0dc\uc758 \ud604\uc7ac \ud65c\uc131(active) \ub300\ucd9c \ube44\uc728\uc740?\n- \uace0\uac1d\uc774 \uacfc\uac70\uc5d0 \ub300\ucd9c\uc744 \uc5bc\ub9c8\ub098 \uc790\uc8fc \ubc1b\uc558\uc2b5\ub2c8\uae4c?\n    - \uc815\uae30\uc801\uc73c\ub85c \ub300\ucd9c\uc744 \ubc1b\uc558\uc2b5\ub2c8\uae4c? \uadf8\ub807\ub2e4\uba74 \uacc4\ud68d\ub41c \ub300\ucd9c \uc77c \uc218 \uc788\uc74c\n    - \uccab \ubc88\uc9f8 \ub300\ucd9c \ub0a0\uc9dc\uc640 \ub2e4\uc74c \ub300\ucd9c \ub0a0\uc9dc \uc0ac\uc774\uc758 \uac04\uaca9\uc774 \uc9e7\uc2b5\ub2c8\uae4c? \uadf8\ub807\ub2e4\uba74 \uc7ac\uc815\uc801\uc73c\ub85c \uc5b4\ub824\uc6c0\uc744 \uacaa\uace0 \uc788\ub2e4\uace0 \ud310\ub2e8\ud574\ub3c4 \ub420\uae4c\uc694...\n- \ub300\ucd9c \uc885\ub8cc\uc77c\uc774 \uc9c0\ub09c \uace0\uac1d \ub2f9 \ub300\ucd9c \ube44\uc728\uc740 \uc5bc\ub9c8\ub098 \ub420\uae4c?\n- ...","3ec55975":"### Numerical Feature \uc2dc\uac01\ud654\n- \ud568\uc218 \uc0ac\uc6a9\n- seaborn \uc0ac\uc6a9","f1378d5d":"### bureau_fe1, bureau_bal \uc870\uc778","f0da036f":"### CREDIT ACTIVE, CREDIT_CURRENCY, CREDIT TYPE \uae30\ubc18 EDA","662e0a8d":"### bureau_balance \uc5d0 \ub300\ud55c EDA","2d2f2860":"##### Application, previous, bureau, bureau_balance \ub370\uc774\ud130 \uac00\uacf5, \uc778\ucf54\ub529, \ud559\uc2b5\/\ud14c\uc2a4\ud2b8 \ubd84\ub9ac, \ud559\uc2b5 \uc218\ud589","41cc75e6":"### NULL\uac12 \ud655\uc778\n","ba586c54":"- PREVIOUS_APPLICATION \ub370\uc774\ud130\uc5d0\uc11c \ud53c\ucc98 \ucd94\ucd9c\ud558\uc5ec \ubaa8\ub378\ub9c1(Version_3)\n- ![image.png](attachment:cba3d316-7ad4-45d5-bf81-ea327eca1d55.png)","17dab3bd":"### Version_4 : bureau.scv, bureau_balance \ub370\uc774\ud130 \uc0ac\uc6a9\n- Credit Bureau(CB)\uc5d0 \uae30\ub85d\ub41c \ud0c0 \uae08\uc735 \uae30\uad00\uc5d0\uc11c \uc81c\uacf5\ubc1b\uc740 \ubaa8\ub4e0 \uace0\uac1d\uc758 \uc774\uc804 \uc2e0\uc6a9 \uac70\ub798\n- \ub300\ucd9c \uc2e0\uccad\uc77c \uc804\uc5d0 CB\uc5d0 \uae30\ub85d\ub41c \uace0\uac1d\uc774 \uac00\uc9c0\uace0 \uc788\ub358 \uc2e0\uc6a9 \uac70\ub798 \uc218\ub9cc\ud07c\uc758 \ud589\n\n    - *Credit Bureau\ub294 \uac1c\uc778\uc2e0\uc6a9\ud3c9\uac00\uae30\uad00\uc73c\ub85c \uc2e0\uc6a9\ub4f1\uae09\uc744 \uc870\ud68c\ud560 \ub54c \uc0ac\uc6a9\n    - *\uad6d\ub0b4\uc5d0\ub294 \ub098\uc774\uc2a4\ud3c9\uac00\uc815\ubcf4(NICE)\uc640 \ucf54\ub9ac\uc544\ud06c\ub808\ub527\ubdf0\ub85c(KCB)\uac00 \ub300\ud45c\uc801\uc784","60420d34":"#### bureau \ub370\uc774\ud130\uc5d0\uc11c \uc0c8\ub85c\uc6b4 FEATURE \ub9cc\ub4e4\uc5b4\uc11c APPLICATION_TRAIN, APPLICATION_TEST \uacfc PREVIOUS-APPLICATION \uacb0\ud569\ud558\uc5ec \ubaa8\ub378\ub9c1\n- APPLICATION_TRAIN, APPLICATION_TEST, PREVIOUS_APPLICATION, BUREAU, BUREAU_BALANCE \ub370\uc774\ud130 READ\n- APPLICATION_TRAIN \uacfc APPLICATION_TEST \ub370\uc774\ud130 CONCAT \ud568\uc218 \uc0ac\uc6a9\ud558\uc5ec APPS \uc774\ub984\uc73c\ub85c \ud1b5\ud569\n- PREVIOUS_APPLICATION \ub370\uc774\ud130\uc5d0\uc11c (\uc9c0\ub09c\uc218\uc5c5\uc5d0\ud588\ub358 \ubd80\ubd84) FEATURE APPS\uc5d0 \ucd94\uac00","68494da8":"##### \uc0c8\ub86d\uac8c \uae30\uc874 Application, previous \uac00\uacf5 \ub370\uc774\ud130 \uc138\ud2b8\uc640 bureau, bureau_balance \uac00\uacf5 \ub370\uc774\ud130 \uc138\ud2b8 \uacb0\ud569 "}}