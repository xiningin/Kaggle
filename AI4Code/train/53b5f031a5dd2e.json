{"cell_type":{"1f7cc202":"code","d0c3b152":"code","bc29f216":"code","3ebdb56d":"code","075bbe4e":"code","410c53d2":"code","818357b1":"code","fb5a290a":"code","4fb99cce":"code","914d1d1b":"code","1b829d11":"code","eacf6de8":"code","96da2cda":"code","286872b9":"code","d3eca9d4":"code","e770fc9e":"code","5604e795":"code","b2f35ef7":"code","d591dd3b":"code","e5abe1e9":"markdown"},"source":{"1f7cc202":"#Importing Librarires\nimport numpy as np\nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\n","d0c3b152":"path_train =\"..\/input\/cotton-disease-dataset\/Cotton Disease\/train\"\nplt.figure(figsize=(20,20))\nlis_disease = os.listdir(path_train)\ncount=0\nfor i in lis_disease:\n    path = path_train+\"\/\"+ i\n    lis2 = os.listdir(path)\n    print(\"Number of \"+i+\" in training dataset : \",len(lis2))\n    count+=1\n    plt.subplot(4,4,count) \n    image_path= path+\"\/\"+lis2[0]\n    \n    image = plt.imread(image_path)\n    plt.xlabel(i,size=15)\n    plt.imshow(image)\n    plt.xticks([])\n    plt.yticks([])\n    \n    ","bc29f216":"from tensorflow.keras.models import Model , load_model\nfrom tensorflow.keras.layers import Dense , Flatten\nfrom tensorflow.keras.applications.resnet50 import ResNet50\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.applications.resnet50 import preprocess_input\nfrom tensorflow.keras.applications.resnet_v2 import ResNet152V2\nfrom tensorflow.keras.optimizers import Adam \nfrom tensorflow.keras.callbacks import ModelCheckpoint , ReduceLROnPlateau , EarlyStopping","3ebdb56d":"import tensorflow\nprint(tensorflow.__version__)","075bbe4e":"#base_model = ResNet50(include_top=False,weights='imagenet',input_shape=(224,224,3),classes=4)\nbase_model= ResNet152V2(include_top=False,weights='imagenet',input_shape=(224,224,3),classes=4)","410c53d2":"base_model.trainable = False\n\nx=Flatten()(base_model.output)\nout=Dense(4,activation='softmax')(x)\n\nmodel = Model(inputs=base_model.input , outputs =out)\n\nmodel.summary()","818357b1":"train_datagen = ImageDataGenerator(rescale=1.\/255,\n                                   shear_range=0.2,\n                                   zoom_range=0.2,\n                                   horizontal_flip=True,\n                                   vertical_flip=True,\n                                   fill_mode='nearest',\n                                   width_shift_range=0.2,\n                                   height_shift_range=0.2)\n\nval_datagen = ImageDataGenerator(rescale=1.\/255)\n\n","fb5a290a":"path_train = \"..\/input\/cotton-disease-dataset\/Cotton Disease\/train\"\npath_val = \"..\/input\/cotton-disease-dataset\/Cotton Disease\/val\"\n\ntrain = train_datagen.flow_from_directory(directory=path_train,\n                                         batch_size=32,\n                                         target_size=(224,224),\n                                         class_mode='categorical')\n\nvalid = val_datagen.flow_from_directory(directory = path_val,\n                                       batch_size=32,\n                                       target_size=(224,224),class_mode='categorical')","4fb99cce":"es=EarlyStopping(monitor='val_accuracy',verbose=1,patience=7,mode='auto')\nmc=ModelCheckpoint(filepath='\/content',monitor='val_accuracy',verbose=1,save_best_only=True)\nlr=ReduceLROnPlateau(monitor='val_accuracy',verbose=1,patience=5,min_lr=0.001)","914d1d1b":"model.compile(optimizer=\"Adam\",loss='categorical_crossentropy',metrics=['accuracy'])","1b829d11":"history=model.fit(train,validation_data=valid,epochs=20,callbacks=[es,mc,lr])","eacf6de8":"#plt.figure(figsize=(10,5))\nfig=plt.figure(figsize=(10,5))\nfig.patch.set_color(\"#F2EDD7FF\")\n\nax=plt.axes()\nax.set_facecolor(\"#F2EDD7FF\")\nfig.patch.set_color(\"#F2EDD7FF\")\n\nplt.plot(history.history['loss'],color='b',label='Training Loss')\nplt.plot(history.history['val_loss'],color='r',label='Validation Loss')\n\nplt.xlabel(\"epochs\")\nplt.ylabel(\"loss_value\")\nplt.title(\"loss\")\nplt.legend()\nplt.show()","96da2cda":"#plt.figure(figsize=(10,5))\nfig=plt.figure(figsize=(10,5))\nfig.patch.set_color(\"#F2EDD7FF\")\n\nax=plt.axes()\nax.set_facecolor(\"#F2EDD7FF\")\nfig.patch.set_color(\"#F2EDD7FF\")\n\nplt.plot(history.history['accuracy'],color='b',label='Training Accuracy')\nplt.plot(history.history['val_accuracy'],color='r',label='Validation Accuracy')\n\nplt.xlabel(\"epochs\")\nplt.ylabel(\"loss_value\")\nplt.title(\"loss\")\nplt.legend()\nplt.show()","286872b9":"model.save(\"ResNet152V2.h5\")","d3eca9d4":"model_load = load_model(\"ResNet152V2.h5\")","e770fc9e":"test_datagen = ImageDataGenerator(rescale=1.\/255)\npath_test = \"..\/input\/cotton-disease-dataset\/Cotton Disease\/test\"\ntest = test_datagen.flow_from_directory(directory=path_test,batch_size=32,\n                                       target_size=(224,224),class_mode='categorical')","5604e795":"predictions = model_load.predict(test)","b2f35ef7":"print(predictions)\n\n\npredictions1 = np.argmax(predictions, axis=1)\n\nprint(\"Predictions with in 4 classes\",predictions1)","d591dd3b":"results=model_load.evaluate(test)\nprint(\"Loss ,\",\"Accuracy\",results)","e5abe1e9":"## **Data Preprocessing**"}}