{"cell_type":{"7917fdeb":"code","f1dbfded":"code","3b440324":"code","513c49f2":"code","f8ae76fd":"code","1d183f0c":"code","762a99e5":"code","1a89f690":"code","ec3d3a40":"code","938bf34f":"code","5a7743d5":"code","3ccfb2eb":"code","40793d93":"code","e6a714a1":"code","00bdc880":"code","9ad047ef":"code","40bbe75b":"code","23c10c0b":"code","cff15977":"code","0f73107f":"code","87c3fb57":"code","0f98a8f3":"code","26153dcb":"code","2dca57d4":"code","7633c84b":"code","e4e09603":"code","f89421de":"code","333c1f1c":"code","6c0bfe19":"code","8c8b3a71":"code","1f98ac54":"markdown","86fbe355":"markdown","070ff0c1":"markdown","23c1f4b6":"markdown","7d111934":"markdown","cb9f534b":"markdown","1fa6445a":"markdown","a3854925":"markdown","cbc48d5d":"markdown","2ab8c5aa":"markdown","752194e0":"markdown","09990bfb":"markdown","02c04e27":"markdown","7f5555c3":"markdown","94707a69":"markdown","6becb6d5":"markdown","b9fa9c78":"markdown","5e9b4f46":"markdown","6e31893c":"markdown","9c86e2fa":"markdown","41d6814c":"markdown","0fffc960":"markdown","d30f045c":"markdown","2a76a45b":"markdown","ab8a1fb6":"markdown","7f77fa00":"markdown","c640791d":"markdown","9279fe22":"markdown","97ed80e6":"markdown","68b029ff":"markdown"},"source":{"7917fdeb":"import matplotlib.pyplot as plt\nimport pandas as pd","f1dbfded":" from sklearn import datasets\n iris = datasets.load_iris()","3b440324":"Y = iris.target\nX = iris.data\ndata=pd.DataFrame(X,columns=['sepal length in cm\\n' , 'sepal width in cm\\n','petal length in cm\\n','petal width in cm\\n'  ])\ndata['target']=Y","513c49f2":"data.head()","f8ae76fd":"fig, ax = plt.subplots()\nax.hist(data['sepal length in cm\\n'])","1d183f0c":"data['sepal length in cm\\n'].plot.hist()","762a99e5":"import seaborn as sns","1a89f690":"sns.distplot(data['sepal length in cm\\n'])","ec3d3a40":"data['sepal width in cm\\n'].plot.hist()","938bf34f":"sns.distplot(data['sepal width in cm\\n'])","5a7743d5":"sns.distplot(data['petal length in cm\\n'],kde=False,bins=10)","3ccfb2eb":"sns.distplot(data['petal length in cm\\n'], hist=False, rug=True)","40793d93":"sns.distplot(data['petal length in cm\\n'], hist=False, rug=True, kde_kws={'shade':True})","e6a714a1":"sns.regplot(x='petal length in cm\\n',y='petal width in cm\\n', data=data)","00bdc880":"sns.lmplot(x='petal length in cm\\n',y='petal width in cm\\n', data=data)","9ad047ef":"sns.lmplot(x='petal length in cm\\n',y='petal width in cm\\n', data=data, hue=\"target\")","40bbe75b":"sns.lmplot(x='petal length in cm\\n',y='petal width in cm\\n', data=data, col=\"target\")","23c10c0b":"data['petal width in cm\\n'].plot.hist() #without sns.set()","cff15977":"sns.set() #with sns.set()\ndata['petal width in cm\\n'].plot.hist()\n#darkgrid theme","0f73107f":"for style in ['white', 'dark', 'whitegrid', 'darkgrid', 'ticks']:\n  sns.set_style(style)\n  sns.distplot(data['petal width in cm\\n'])\n  plt.show()","87c3fb57":"sns.set_style('white')\nsns.distplot(data['petal length in cm\\n'])\nsns.despine(left=True)","0f98a8f3":"sns.set(color_codes=True)\nsns.distplot(data['petal length in cm\\n'],color ='g')","26153dcb":"for p in sns.palettes.SEABORN_PALETTES:\n  sns.set_palette(p)\n  sns.distplot(data['sepal width in cm\\n'])\n  plt.title(p)\n  plt.show()","2dca57d4":"for p in sns.palettes.SEABORN_PALETTES:\n  sns.set_palette(p)\n  sns.palplot(sns.color_palette())\n  plt.title(p)\n  plt.show()","7633c84b":"sns.palplot(sns.color_palette(\"Paired\", 12))","e4e09603":"sns.palplot(sns.color_palette(\"Blues\", 12))","f89421de":"sns.palplot(sns.color_palette(\"BrBG\", 12))","333c1f1c":"fig, ax =plt.subplots()\nsns.distplot(data['sepal width in cm\\n'], ax=ax)\nax.set(xlabel=\"sepal width\")","6c0bfe19":"fig, ax =plt.subplots()\nsns.distplot(data['sepal width in cm\\n'], ax=ax)\nax.set(xlabel = \"sepal width\",\n      ylabel = 'Distribution', xlim=(0,6),\ntitle='visual of sepal width')","8c8b3a71":"fig, (ax0, ax1) = plt.subplots(1, 2, figsize=(7, 4), sharey=True)\nsns.distplot(data['sepal width in cm\\n'], ax=ax0)\nsns.distplot(data['sepal length in cm\\n'], ax=ax1)\nax1.axvline(x=6,label='six',linestyle='--')\nax1.legend()","1f98ac54":"# Combining Plots\n* It is possible to combine and configure multiple plots","86fbe355":"# Colours in seaborn\n\n\n*   Seaborn supports assigning colors to plot using **matplotlib** color codes\n\n\n\n","070ff0c1":"# Histogram vs Distplot","23c1f4b6":"# Seaborn Styles\n\n*   Seaborn has default configurations that can be applied with ***sns.set()***\n*   These styles can override matplotlib and pandas plots as well\n\n","7d111934":"There are several theme in seaborn and can be applyed by set_style()\n\n\n*   Example\n\n","cb9f534b":"# Removing axes with despine()\n\n*   Sometimes plots are improved by removing elements\n*   Seaborn contains a shortcut for removing the spines of a plot\n\n","1fa6445a":"# Creating a **histogram**\n\n\n*   Distplot function has multiple optional arguments\n*   In order to plot a simple histogram, you can disable the **KDE** and specify the number of bins to use\n\n","a3854925":"# Seaborn\n -> seaborn supports complex visualizations of data","cbc48d5d":"2. **Sequential colour** = when the data has a consistent range from high to low","2ab8c5aa":"# Regplot\n \n\n*   The **regplot** function generates a scatter plot with a regression line\n*   Usage is similar to the **distplot**\n*   The **data** and **x** annd **y** variables must be defined     \n\n","752194e0":"# **lmplot faceting**\n1.  Organize data by colors(***hue***)","09990bfb":"3.  **Diverging colors** = when both the low and high values are interesting","02c04e27":"# Alternative data distributions\n\n\n*   A **Rug Plot** is an alternative way to view the distribution of data\n*   A **KDE curve** and rug plot can be combined\n\n","7f5555c3":"# Displaying Palettes\n\n*  **sns.palplot()** *function displays a palette*\n*   **sns.color_palette()** *returms the current palette*\n\n","94707a69":" -> It is built on matplotlib and works best with pandas DataFrame","6becb6d5":"# Further Customizations\n\n*   The **distplot** function uses several functions including **kdeplot** and **rugplot**\n*   It is possible to further customize a plot bt passing arguments to the **bold** function\n\n","b9fa9c78":"# Defining Custom Plattes\n 1.  **Circular colors** = when the data is not ordered","5e9b4f46":"**Pandas Histogram**\n1.   Actual frequency of observation\n2.   No automatic labels\n3.   Wide bines\n\n\n\n\n","6e31893c":"#  Regression Plots in Seaborn","9c86e2fa":"In seaborn, their are more then one way to plot a same(or similar plot) \n*  like: **regplot** -low level and **lmplot** -high level(but lmplot is much more powerful)    ","41d6814c":"# Palettes\n\n\n*   Seaborn uses the **set_palette()** function to define a palette\n\n","0fffc960":"**seaborn distplot**\n\n1.   Automatic label on X axis\n2.   Muted color palette\n3.   KDE plot\n4.   Narrow bins\n","d30f045c":"**Further Customizations**\n* The axes object supports many common customizations","2a76a45b":"# Distplot\n -> The distplot is similar to the histogram shown in previous example. By default, generates a Gaussian Kernel Density Estimate(KDE)","ab8a1fb6":" -> It can also be used on its own to plot data","7f77fa00":"# Custimizing with matplotlib\n**Matplotlib Axes**\n* Most customization available through *matplotlib axes* object\n* *Axes* can be passed to seaborn functions","c640791d":"2. Organize data by columns(***col***)","9279fe22":"# Matplotlib\n -> providwa the raw building blocks for Seaborn's visualization\n","97ed80e6":" -> It also supports basic plotting capability","68b029ff":"# Pandas\n -> is a foundational library for analyzing data\n "}}