{"cell_type":{"546b4d53":"code","39a06927":"code","34f54238":"code","b4f21581":"code","c7c39347":"code","c0f0eb47":"code","b2210fc1":"code","6a9ba81b":"code","ce91c2ac":"code","02fca9f9":"code","64578b79":"code","c3d3a411":"code","42dd9a67":"code","6e1a5f7e":"code","db10660e":"code","de89e91f":"code","26659d66":"code","d568c7ad":"code","31a46400":"code","55d62555":"code","d93fd051":"code","7bb135ab":"markdown","38f78729":"markdown","9bc78521":"markdown","4d68a41b":"markdown","f2c73655":"markdown","38966f7d":"markdown","4b2f00a6":"markdown","d0444175":"markdown","4f4252eb":"markdown","e5825dbc":"markdown","81df7e97":"markdown"},"source":{"546b4d53":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","39a06927":"import seaborn as sns","34f54238":"df = pd.read_csv('..\/input\/titanic\/train.csv')\ndf","b4f21581":"df.head()","c7c39347":"df.describe()","c0f0eb47":"df.corr()","b2210fc1":"df.isna().sum()","6a9ba81b":"sns.set_style('whitegrid')\nsns.catplot(x = 'Sex', hue = 'Survived',data = df, kind = 'count')","ce91c2ac":"df.groupby(['Sex'])['Survived'].aggregate(lambda x : x.sum() \/ len(x))","02fca9f9":"group = df.groupby(['Survived','Pclass'])\ndata = group.size().unstack()\nsns.heatmap(data,annot = True , fmt = 'd')","64578b79":"s1 = df[df['Sex'] == 'female']\ns1","c3d3a411":"s1['Age'].plot(kind = 'hist')","42dd9a67":"s1['Age'].mean()","6e1a5f7e":"s2 = df[df['Sex'] == 'male']\ns2['Age'].plot(kind = 'hist')","db10660e":"s2['Age'].mean()","de89e91f":"df[df['Fare'] < 1]","26659d66":"len(df[df['Fare'] < 1])","d568c7ad":"sns.catplot(x = 'Survived',hue = 'Embarked',data = df,kind = 'count')","31a46400":"sns.catplot(x = 'Survived',col = 'Embarked',data = df,kind = 'count')","55d62555":"sns.catplot(x = 'Survived',hue = 'Sex',col = 'Pclass',data = df, kind = 'count')","d93fd051":"sns.boxplot(x = 'Pclass', y = 'Age', data = df)","7bb135ab":"**Histogram chart on Age feature and Sex = male**","38f78729":"**Corelation with corr method**\n**\u06a9\u0648 \u0648\u0627\u0631\u06cc\u0627\u0646\u0633 \u06cc\u0627 \u06a9\u0648 \u0631\u06cc\u0644\u06cc\u0634\u0646 \u06cc\u0639\u0646\u06cc \u0648\u0627\u0628\u0633\u062a\u06af\u06cc \u0641\u06cc\u0686\u0631\u0647\u0627 \u0628\u0627 \u0647\u0645**","9bc78521":"**Survived or not Survived on Embarked feature**","4d68a41b":"Show Sum of NaN Value for every features","f2c73655":"Survived or not Survived on Pclass feature","38966f7d":"**The Average of male's Age**","4b2f00a6":"**BoxPlot on Pclass and Age Feature**","d0444175":"**Histogram chart on Age feature and Sex = female**","4f4252eb":"Survived or not Survived on Sex Feature","e5825dbc":"**The Average of female's Age**","81df7e97":"**Percent of Survived or not Survived on Sex feature**"}}