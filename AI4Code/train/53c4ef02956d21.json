{"cell_type":{"089ad867":"code","fee9f8c9":"code","1353ac92":"code","75a5af21":"code","4b77f9a5":"code","5e617efe":"code","6deb6967":"code","8bd1d88f":"code","20f90204":"code","8a0f8f9e":"code","40fa7fe7":"markdown","aa124c48":"markdown","4817125e":"markdown","03f8f5ba":"markdown"},"source":{"089ad867":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fee9f8c9":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go \nimport matplotlib.cm as cm\nfrom matplotlib.colors import rgb2hex\n\n\n\n\ndf = pd.read_csv(\"..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv\")\ndf.head()","1353ac92":"questions = df.iloc[0, :]\nquestions","75a5af21":"df = df.iloc[1:, :].reset_index(drop = True)\ndf.head()","4b77f9a5":"df = df.sort_values(by = 'Q1', ascending = True)\nage_list = df.Q1.unique()\ndf.Q1.nunique()\nprint(\"Q1 : What is your age (# years)? : \\n Answer : [List of Age Values in Classes ] : \",age_list)\nprint(\"Number of Classes in age_list : \",len(age_list))","5e617efe":"q1_vcount = df['Q1'].value_counts()\nq1_graph = go.Figure()\nq1_graph.add_trace(go.Bar(x = q1_vcount.index, y = q1_vcount.values))\nq1_graph.show()","6deb6967":"gender_list = list(set(df.Q2))\nprint(\"Q2 :  What is your gender? : \\n Answer : [List of genders ] : \\n  \",gender_list)\nprint(\"Number of Genders : \",len(gender_list))","8bd1d88f":"cmap = cm.get_cmap('coolwarm_r',12) \ncol_def =[]\nfor i in range(cmap.N):\n    rgb = cmap(i)[:3]\n    col_def.append(rgb2hex(rgb))\n   \nfig, axes = plt.subplots(1,2, figsize=(12, 6))\nq2_vcount = df['Q2'].value_counts()\nsns.barplot(x = q2_vcount.values, y= q2_vcount.index, palette=col_def,\n            edgecolor = \"black\",ax=axes[0])\naxes[0].set_title(\"Gender\", fontsize=20)\naxes[1].pie(x= q2_vcount,labels = q2_vcount.index, colors=col_def,autopct='%.0f%%',\n           explode=[0.02, 0.05, 0.2, 0.6, 1.0])\naxes[1].add_artist(plt.Circle((0,0),0.4,fc='white'))\nplt.show()","20f90204":"country_list = list(set(df.Q3))\nprint(\"Q3 :  In which country do you currently reside ? : \\n Answer : [List of Country ] : \\n  \",country_list)\nprint(\"Number of Country : \",len(country_list))\n\n","8a0f8f9e":"education_list = list(set(df.Q4))\nprint(\"Q4 :What is the highest level of formal education that you have attained or plan to attain within the next 2 years? : \\n Answer : [List of the highest level of formal education ] : \\n  \",education_list)\nprint(\"Number of the highest level of formal education : \",len(education_list))","40fa7fe7":"# Q2. What is your gender? ","aa124c48":"# Q4 : What is the highest level of formal education that you have attained or plan to attain within the next 2 years?\n","4817125e":"# Q1 : What is your age (# years)?\n# Answer : [List of Values]","03f8f5ba":"# Q3. In which country do you currently reside?\n"}}