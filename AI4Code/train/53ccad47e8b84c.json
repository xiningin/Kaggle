{"cell_type":{"5d12d690":"code","1bbed23b":"code","4c7041ff":"code","25be855d":"code","3525e117":"code","2c92d46a":"code","eaa8e94b":"code","c23637fa":"code","c72a71dd":"code","d62c946d":"code","11ebaab9":"code","709471dd":"code","f2e1f46c":"code","b7567b9d":"code","83f13841":"code","d8b93a5e":"code","0a5eaaf3":"code","00f3bcee":"code","13844308":"code","5da7e23f":"code","844dde9e":"code","7dc3280f":"markdown","7ee14a02":"markdown","87f76885":"markdown","ce21c675":"markdown","9b205bcc":"markdown","1ec28677":"markdown","faecac97":"markdown","1faec19b":"markdown","bb6b6267":"markdown","66ceeecb":"markdown"},"source":{"5d12d690":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1bbed23b":"dataset = pd.read_csv('..\/input\/customer-personality-analysis\/marketing_campaign.csv', sep = '\\t')","4c7041ff":"dataset.head()","25be855d":"dataset.info()","3525e117":"dataset.dropna() # drop null values from data","2c92d46a":"from datetime import date\nyear = date.today().year\nage= year - dataset['Year_Birth'] # calculating age for better understanding of trend\ndataset['Age'] = age","eaa8e94b":"# as maritial_status many values with somewhat same meaning thus its not helpful to treat them different \n# replacing them with two category will be helpful\ndataset['Relationship'] = dataset[\"Marital_Status\"].replace({\"Married\":\"Partner\", \"Together\":\"Partner\", \"Absurd\":\"Alone\", \"Widow\":\"Alone\", \"YOLO\":\"Alone\", \"Divorced\":\"Alone\", \"Single\":\"Alone\",})","c23637fa":"# calculating total money spend\ndataset[\"Total_Spent\"] = dataset[\"MntWines\"]+ dataset[\"MntFruits\"]+ dataset[\"MntMeatProducts\"]+ dataset[\"MntFishProducts\"]+ dataset[\"MntSweetProducts\"]+ dataset[\"MntGoldProds\"]","c72a71dd":"# total children\ndataset[\"Children\"]=dataset[\"Kidhome\"]+dataset[\"Teenhome\"]\ndataset[\"Is_Parent\"] = np.where(dataset.Children> 0, 1, 0) # for data analysis purpose","d62c946d":"Plot1 = [\"Income\", \"Age\", \"Total_Spent\", \"Relationship\"]\nsns.pairplot(dataset[Plot1], hue = 'Relationship')","11ebaab9":"# droping outliers\ndataset = dataset[(dataset['Age']<100)]\ndataset = dataset[(dataset['Income']<600000)]","709471dd":"sns.pairplot(dataset[Plot1], hue = 'Relationship')","f2e1f46c":"Plot2 = ['MntWines', 'MntFruits', 'MntMeatProducts', 'MntFishProducts', 'MntSweetProducts', 'MntGoldProds', 'Is_Parent']\nsns.pairplot(dataset[Plot2], hue = 'Is_Parent')","b7567b9d":"Plot3 = ['NumStorePurchases', 'NumCatalogPurchases', 'NumWebPurchases']\nsns.barplot(x = Plot3, y = dataset[Plot3].sum())","83f13841":"from sklearn import preprocessing\nle = preprocessing.LabelEncoder()\ndataset['Relationship']=le.fit_transform(dataset['Relationship'])","d8b93a5e":"df_copy = dataset.copy()\ncols = ['Income', 'Children', 'Total_Spent', 'MntWines', 'MntFruits', 'MntMeatProducts', 'MntFishProducts', 'MntSweetProducts', 'MntGoldProds', 'Age']","0a5eaaf3":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\ndf_copy[cols] = sc.fit_transform(df_copy[cols])","00f3bcee":"target1 = ['Is_Parent']\nfeatures1 = ['MntWines', 'MntFruits', 'MntMeatProducts', 'MntFishProducts', 'MntSweetProducts', 'MntGoldProds']\nfrom sklearn.model_selection import train_test_split\nX_train1, X_test1, y_train1, y_test1 = train_test_split(df_copy[features1],df_copy[target1], test_size= 0.25)","13844308":"from sklearn.svm import SVC\nclf = SVC(kernel = 'rbf', random_state=0)\nclf.fit(X_train1, y_train1)","5da7e23f":"y_pred1 = clf.predict(X_test1)","844dde9e":"from sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(y_test1, y_pred1)\nprint(cm)\naccuracy_score(y_test1, y_pred1)\naccuracy_score(y_test1, y_pred1)","7dc3280f":"**Following points can be concluded with the help of above plot**\n1. Parents spend less money on wines or gold when compared to other products.\n2. Parents buy meat less when compared to fish, fruits, sweets. ","7ee14a02":"As this data was from 2014 when online shopping was picking up pace, so its fair to assume that today \"NumWebPurchase\" should be much higher and might be compareable to \"NumStorePurchase\"","87f76885":"**Importing Data**","ce21c675":"selecting columns for feature scaling","9b205bcc":"Reploting for the graph without outlier for better understanding","1ec28677":"# DATA VISUALIZATION","faecac97":"> **Feature Scaling**","1faec19b":"\nThe data contains outliers in both \"Age\" and \"Income\".\n","bb6b6267":"# DATA PREPROCESSING","66ceeecb":"**Following points can be concluded with the help of above plot**\n1. With increase in income people tend to spend more.\n2. No specific trend for people alone or have a partner, the data is even for both."}}