{"cell_type":{"aa1a7626":"code","7625f494":"code","346c97ce":"code","cdf086f9":"code","3c27ff17":"code","c8f76f3f":"code","f3e8e637":"code","4a701745":"code","7d0ed1b2":"code","c6032951":"code","609ae773":"code","c2a40627":"code","03e1d9b7":"code","f12e2525":"code","8e8374c9":"code","c6ae26f6":"code","7a4d2452":"code","4626a111":"code","2152e3c7":"code","7163a722":"code","cc340194":"code","dff281ab":"code","8cc1a635":"code","9d54e276":"code","d62b28e3":"code","64161fcb":"code","19e94413":"code","c61b7654":"code","e0379655":"code","83b79de6":"code","ff3bbb19":"code","39d52251":"code","be72d0a0":"code","899aa309":"code","8f4e0c00":"code","c5113c07":"code","f6478daa":"code","d666fc82":"code","de365bee":"code","a062f78a":"code","ba24632c":"code","b79c9080":"code","d4349b76":"code","37d07b37":"code","e8009935":"code","759487d4":"code","9574b73c":"code","074ac1b3":"code","2ec0a2cf":"code","a7331542":"code","855d268c":"code","e021ec50":"code","7ecdabcd":"code","1c189ccb":"code","f33db734":"code","11a9b1ca":"code","b4db9df4":"code","c27ffa2d":"code","7480e408":"code","9ba6a808":"code","eb861dd5":"code","e14ef7f6":"code","706142d9":"code","ddc738ac":"code","242f6e32":"code","c2904f7a":"markdown","46ef6587":"markdown","e71f7556":"markdown","66a4f3e1":"markdown","17df2e3b":"markdown","476a5228":"markdown","5d466c19":"markdown","8c97e091":"markdown","04cf80b5":"markdown"},"source":{"aa1a7626":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7625f494":"from warnings import filterwarnings\nfilterwarnings(\"ignore\")\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport scipy as sp\nfrom sklearn.cluster import KMeans\nimport mpl_toolkits\nfrom mpl_toolkits.mplot3d import Axes3D\nimport sklearn\nfrom scipy.cluster.hierarchy import linkage,dendrogram\nfrom sklearn.cluster import AgglomerativeClustering\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\nfrom yellowbrick.cluster import silhouette_visualizer\nimport yellowbrick\nfrom yellowbrick.cluster import KElbowVisualizer\nfrom yellowbrick.features import PCA\nfrom sklearn.metrics import silhouette_score\nfrom yellowbrick.cluster import InterclusterDistance","346c97ce":"data=pd.read_csv(\"\/kaggle\/input\/USArrests.csv\")\ndf=data.copy()\ndf.head()","cdf086f9":"df.index=df.iloc[:,0]","3c27ff17":"df.index","c8f76f3f":"df=df.iloc[:,1:5]","f3e8e637":"df.index.name=None\ndf.head()","4a701745":"df.isnull().sum()","7d0ed1b2":"df.info()","c6032951":"df.describe().T","609ae773":"df.hist(figsize=(12,5));","c2a40627":"sns.pairplot(df);","03e1d9b7":"kmeans=KMeans(n_clusters=4,random_state=42)\nkmeans","f12e2525":"kmeans.get_params()","8e8374c9":"k_fit=kmeans.fit(df)","c6ae26f6":"visualizer = InterclusterDistance(kmeans)\n\nvisualizer.fit(df)        \nvisualizer.show() ;","7a4d2452":"silhouette_score(df,labels=kmeans.labels_)","4626a111":"k_fit.inertia_ ","2152e3c7":"k_fit.cluster_centers_","7163a722":"k_fit.n_clusters","cc340194":"k_fit.labels_","dff281ab":"plt.scatter(df.iloc[:,0],df.iloc[:,1],c=k_fit.labels_);","8cc1a635":"centers=k_fit.cluster_centers_\nplt.scatter(df.iloc[:,0],df.iloc[:,1],c=k_fit.labels_);\nplt.scatter(centers[:,0],centers[:,1],c=\"red\",s=200,alpha=0.5);","9d54e276":"silhouette_visualizer(kmeans, df, colors='yellowbrick');","d62b28e3":"fig=plt.figure()\nax=Axes3D(fig)\nax.scatter(df.iloc[:,0],df.iloc[:,1],df.iloc[:,2],c=k_fit.labels_);\nax.scatter(centers[:,0],centers[:,1],centers[:,2],\n           marker=\".\",\n           c=\"red\",\n           s=1000);","64161fcb":"kmeans=KMeans(n_clusters=2,random_state=42)\nk_fit=kmeans.fit(df)\ncenters=k_fit.cluster_centers_\nplt.scatter(df.iloc[:,0],df.iloc[:,1],c=k_fit.labels_);\nplt.scatter(centers[:,0],centers[:,1],c=\"red\",s=200,alpha=0.5);","19e94413":"visualizer = InterclusterDistance(kmeans)\n\nvisualizer.fit(df)        \nvisualizer.show() ;","c61b7654":"silhouette_score(df,labels=kmeans.labels_)","e0379655":"k_fit.inertia_ ","83b79de6":"silhouette_visualizer(kmeans, df, colors='yellowbrick');","ff3bbb19":"fig=plt.figure()\nax=Axes3D(fig)\nax.scatter(df.iloc[:,0],df.iloc[:,1],df.iloc[:,2],c=k_fit.labels_);\nax.scatter(centers[:,0],centers[:,1],centers[:,2],\n           marker=\".\",\n           c=\"red\",\n           s=1000);","39d52251":"kmeans=KMeans(n_clusters=3,random_state=42)\nk_fit=kmeans.fit(df)\ncenters=k_fit.cluster_centers_\nplt.scatter(df.iloc[:,0],df.iloc[:,1],c=k_fit.labels_);\nplt.scatter(centers[:,0],centers[:,1],c=\"red\",s=200,alpha=0.5);","be72d0a0":"visualizer = InterclusterDistance(kmeans)\n\nvisualizer.fit(df)        \nvisualizer.show() ;","899aa309":"silhouette_score(df,labels=kmeans.labels_)","8f4e0c00":"k_fit.inertia_ ","c5113c07":"silhouette_visualizer(kmeans, df, colors='yellowbrick');","f6478daa":"fig=plt.figure()\nax=Axes3D(fig)\nax.scatter(df.iloc[:,0],df.iloc[:,1],df.iloc[:,2],c=k_fit.labels_);\nax.scatter(centers[:,0],centers[:,1],centers[:,2],\n           marker=\".\",\n           c=\"red\",\n           s=1000);","d666fc82":"pd.DataFrame({\"States\":df.index,\"Clusters\":k_fit.labels_})[:10]","de365bee":"kmeans=KMeans()\nvisualizer=KElbowVisualizer(kmeans,k=(2,20))\nvisualizer.fit(df)\nvisualizer.poof();","a062f78a":"kmeans=KMeans(n_clusters=4)\nk_fit=kmeans.fit(df)\npd.DataFrame({\"States\":df.index,\"Clusters\":k_fit.labels_})[:10]","ba24632c":"visualizer = InterclusterDistance(kmeans)\n\nvisualizer.fit(df)        \nvisualizer.show() ;","b79c9080":"hc_complete=linkage(df,\"complete\")\nhc_avg=linkage(df,\"average\")\nhc_single=linkage(df,\"single\")","d4349b76":"hc_complete[:10]","37d07b37":"hc_avg[:10]","e8009935":"hc_single[:10]","759487d4":"plt.figure(figsize=(20,10));\nplt.title(\"Hierarchical Clustering\")\nplt.xlabel(\"index\")\nplt.ylabel(\"distance\")\ndendrogram(hc_complete,leaf_font_size=10);","9574b73c":"plt.figure(figsize=(20,10));\nplt.title(\"Hierarchical Clustering\")\nplt.xlabel(\"index\")\nplt.ylabel(\"distance\")\ndendrogram(hc_complete,\n          truncate_mode=\"lastp\",\n          p=12,\n          show_contracted=True);","074ac1b3":"plt.figure(figsize=(20,10));\nplt.title(\"Hierarchical Clustering\")\nplt.xlabel(\"index\")\nplt.ylabel(\"distance\")\ndendrogram(hc_complete,\n          truncate_mode=\"lastp\",\n          p=4,\n          show_contracted=True);","2ec0a2cf":"cluster=AgglomerativeClustering(n_clusters=4,\n                               affinity=\"euclidean\",\n                               linkage=\"ward\")","a7331542":"cluster.fit_predict(df)","855d268c":"pd.DataFrame({\"States\":df.index,\"Clusters\":cluster.fit_predict(df)})[:10]","e021ec50":"df=StandardScaler().fit_transform(df)","7ecdabcd":"visualizer = PCA(scale=True, proj_features=True)\nvisualizer.fit_transform(df)\nvisualizer.show();","1c189ccb":"visualizer = PCA(scale=True, proj_features=True, projection=2,heatmap=True)\nvisualizer.fit_transform(df)\nvisualizer.show();","f33db734":"visualizer = PCA(scale=True, proj_features=True, projection=3)\nvisualizer.fit_transform(df)\nvisualizer.show();","11a9b1ca":"pca=sklearn.decomposition.PCA(n_components=2)\npca_fit=pca.fit_transform(df)","b4db9df4":"pca_fit[:10]","c27ffa2d":"pca_df=pd.DataFrame(pca_fit,\n             columns=[\"comp_1\",\"comp_2\"])\npca_df.head()","7480e408":"pca.explained_variance_ratio_","9ba6a808":"pca.explained_variance_","eb861dd5":"pca=sklearn.decomposition.PCA(n_components=3)\npca_fit=pca.fit_transform(df)","e14ef7f6":"pca_fit[:5]","706142d9":"pca_df=pd.DataFrame(pca_fit,\n             columns=[\"comp_1\",\"comp_2\",\"comp_3\"])\npca_df.head()","ddc738ac":"pca.explained_variance_ratio_","242f6e32":"pca=sklearn.decomposition.PCA().fit(df)\nplt.plot(np.cumsum(pca.explained_variance_ratio_));","c2904f7a":"### n_component=3","46ef6587":"## K-Means Clustering\n\n### n_clusters=4","e71f7556":"## Data Preprocessing","66a4f3e1":"### n_clusters=2","17df2e3b":"### Optimum Cluster Number with Elbow","476a5228":"## PCA","5d466c19":"## Hierarchical Clustering ","8c97e091":"### n_component=2","04cf80b5":"### Optimal Cluster Number"}}