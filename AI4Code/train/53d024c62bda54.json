{"cell_type":{"44525b83":"code","832404ad":"code","37c8120c":"code","2f08cbd6":"code","dda365fb":"code","580adb3c":"code","1e1abe81":"code","35d6a624":"code","93b6beb0":"code","ee649362":"code","d3371b11":"code","0f9510a0":"code","b5831255":"code","8a94c83a":"code","54578356":"code","4d743ff9":"code","8d161975":"code","dfc73944":"code","b5344952":"code","78f0729e":"code","ed358408":"code","58da91b8":"code","bb986b1b":"code","6cf2def6":"code","8cbd3168":"code","ae77b36b":"code","b3747eb7":"code","899e4065":"code","7ea32d5a":"code","3cc54bc2":"code","d0870974":"markdown","5b8d440b":"markdown","939ce12f":"markdown","0ffbf236":"markdown","2df3378d":"markdown","8bacded5":"markdown","af27739b":"markdown","eb61901d":"markdown","db7f37f3":"markdown","cd8b58d8":"markdown","1e8bd99d":"markdown","604f20fa":"markdown","24bc4af8":"markdown","8806b8f6":"markdown","b0f59903":"markdown","f0f1a84a":"markdown","117ba99d":"markdown","e3656750":"markdown","af7c186e":"markdown","af49dfd1":"markdown","f9654378":"markdown","2d6dd611":"markdown"},"source":{"44525b83":"import pandas as pd\n","832404ad":"df=pd.read_csv(\"..\/input\/bank_note_data.csv\")","37c8120c":"df.head()","2f08cbd6":"import seaborn as sns\nimport matplotlib as plt\n%matplotlib inline","dda365fb":"sns.countplot(data=df,x=\"Class\")","580adb3c":"sns.pairplot(data=df,hue=\"Class\")","1e1abe81":"from sklearn.preprocessing import StandardScaler","35d6a624":"scaler = StandardScaler()","93b6beb0":"scaler.fit(df.drop(\"Class\",axis=1))","ee649362":"scaled_fea = scaler.fit_transform(df.drop(\"Class\",axis=1))","d3371b11":"df_1=pd.DataFrame(scaled_fea,columns=df.columns[:-1])\ndf_1.head()","0f9510a0":"X=df_1","b5831255":"y=df[\"Class\"]","8a94c83a":"X=X.as_matrix()\ny=y.as_matrix()","54578356":"from sklearn.model_selection import train_test_split","4d743ff9":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)","8d161975":"import tensorflow as tf\nimport tensorflow.contrib.learn as learn","dfc73944":"feature_columns = [tf.contrib.layers.real_valued_column(\"\", dimension=1)]\nclassifier = learn.DNNClassifier(feature_columns=feature_columns,hidden_units=[10, 20, 10], n_classes=2)","b5344952":"classifier.fit(X_train, y_train, steps=200, batch_size=20)","78f0729e":"note_predictions = list(classifier.predict(X_test))","ed358408":"from sklearn.metrics import classification_report,confusion_matrix","58da91b8":"type(y_test)","bb986b1b":"print(confusion_matrix(y_test,note_predictions))","6cf2def6":"print(classification_report(y_test,note_predictions))","8cbd3168":"from sklearn.ensemble import RandomForestClassifier","ae77b36b":"rfc = RandomForestClassifier(n_estimators=200)","b3747eb7":"rfc.fit(X_train,y_train)","899e4065":"rfc_preds = rfc.predict(X_test)","7ea32d5a":"print(classification_report(y_test,rfc_preds))","3cc54bc2":"print(confusion_matrix(y_test,rfc_preds))","d0870974":"## Model Evaluation\n\n** Use the predict method from the classifier model to create predictions from X_test **","5b8d440b":"** Now create a classification report and a Confusion Matrix. Does anything stand out to you?**","939ce12f":"**Create a StandardScaler() object called scaler.**","0ffbf236":"** Create a Countplot of the Classes (Authentic 1 vs Fake 0) **","2df3378d":"** Use SciKit Learn to create training and testing sets of the data as we've done in previous lectures:**","8bacded5":" # Tensorflow  DNNClassifier\n\n\nWe'll use the [Bank Authentication Data Set](https:\/\/www.kaggle.com\/aariyan101\/bank-notes\/kernels) from the UCI repository.\n\nThe data consists of 5 columns:\n\n* variance of Wavelet Transformed image (continuous)\n* skewness of Wavelet Transformed image (continuous)\n* curtosis of Wavelet Transformed image (continuous)\n* entropy of image (continuous)\n* class (integer)\n\nWhere class indicates whether or not a Bank Note was authentic.\n\nThis sort of task is perfectly suited for Neural Networks and Deep Learning! Just follow the instructions below to get started!","af27739b":"## Get the Data\n\n** Use pandas to read in the bank_note_data.csv file **","eb61901d":"## EDA\n\nWe'll just do a few quick plots of the data.\n\n** Import seaborn and set matplolib inline for viewing **","db7f37f3":"** Use the .as_matrix() method on X and Y and reset them equal to this result. We need to do this in order for TensorFlow to accept the data in Numpy array form instead of a pandas series. **","cd8b58d8":"** Create an object called classifier which is a DNNClassifier from learn. Set it to have 2 classes and a [10,20,10] hidden unit layer structure:**","1e8bd99d":"\n\nThanks for looking my kernel.This project belongs to udemy - \"Data science and Machine learning Bootcamp\". If you like please upvote and comment your suggestion.\n","604f20fa":"## Data Preparation \n\nWhen using Neural Network and Deep Learning based systems, it is usually a good idea to Standardize your data, this step isn't actually necessary for our particular data set, but let's run through it for practice!\n\n### Standard Scaling\n\n** Import StandardScaler() from SciKit Learn**","24bc4af8":"## Train Test Split\n\n** Create two objects X and y which are the scaled feature values and labels respectively.**","8806b8f6":"** Check the head of the Data **","b0f59903":"**Fit scaler to the features.**","f0f1a84a":"**Convert the scaled features to a dataframe and check the head of this dataframe to make sure the scaling worked.**","117ba99d":"## Optional Comparison\n\n** You should have noticed extremely accurate results from the DNN model. Let's compare this to a Random Forest Classifier for a reality check!**\n\n**Use SciKit Learn to Create a Random Forest Classifier and compare the confusion matrix and classification report to the DNN model**","e3656750":"** It should have also done very well, but not quite as good as the DNN model. Hopefully you have seen the power of DNN! **","af7c186e":"# Contrib.learn\n\n** Import tensorflow.contrib.learn.python.learn as learn**","af49dfd1":"** Now fit classifier to the training data. Use steps=200 with a batch_size of 20. You can play around with these values if you want!**\n\n*Note: Ignore any warnings you get, they won't effect your output*","f9654378":"**Use the .transform() method to transform the features to a scaled version.**","2d6dd611":"** Create a PairPlot of the Data with Seaborn, set Hue to Class **"}}