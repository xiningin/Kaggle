{"cell_type":{"6bc82a45":"code","3abbd32c":"code","7f5993ec":"code","2567242f":"code","8dec2cfb":"code","6f041d5e":"code","87dfe71a":"code","0f37532d":"code","02e41440":"code","755bcd12":"code","cf6c20fa":"code","4f2828e5":"code","51dc683e":"code","f68725e1":"code","b593b38a":"code","e4756c94":"code","b4b86322":"code","c6db85f9":"code","0a52a371":"code","11d01b53":"code","2a8cbd6a":"code","b3db385f":"code","05d98501":"code","ddd418a9":"code","2c0a2e03":"code","93bca646":"markdown","48ba7ee3":"markdown","d00ac349":"markdown","0143bc4b":"markdown","93e79135":"markdown","65e9b1fa":"markdown","00236114":"markdown","28c341fe":"markdown"},"source":{"6bc82a45":"import numpy as np\nimport pandas as pd\nimport  matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.ensemble import  AdaBoostClassifier\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.gaussian_process import GaussianProcessClassifier","3abbd32c":"#Parsing and showing data\n\ndf=pd.read_csv('..\/input\/heart-disease-uci\/heart.csv')\n\ny=df.pop('target')\n\ncorrelation=df.corr()\nplt.figure(figsize=(12,12))\nsns.heatmap(correlation,annot=True)\nplt.show()","7f5993ec":"df.describe()\n","2567242f":"df.head()\n","8dec2cfb":"#showing the gender in the data\nval=[]\nmal=0\nfem=0\n\nsex=df['sex']\nclasses=np.unique(sex)\n\nfor c in classes:\n    val.append(np.count_nonzero(sex==c))","6f041d5e":"plt.title('Genders in the dataset')\nplt.bar(['female','male'],val,label='individuals')\nplt.legend()\nplt.show()","87dfe71a":"for r in range(len(y)):\n    if y[r]==1:\n        if sex[r]==1:\n            mal+=1\n        else:\n            fem+=1\nplt.bar(['female','male'],[fem,mal])\nplt.show()","0f37532d":"age_with=[]\nage_without=[]\nfor r in range(len(y)):\n    if y[r]==1:\n        age_with.append(df['age'][r])\n    else:\n        age_without.append(df['age'][r])\n\nprint('The oldest person to have a heart disease has the age of '+str(max(age_with)))\nprint('The youngest person to have a heart disease has the age of '+str(min(age_with))) \n\nprint('The oldest person to do not have a heart disease has the age of '+str(max(age_without)))\nprint('The youngest person to do not have a heart disease has the age of '+str(min(age_without))) \nplt.figure(figsize=(12,6))\nplt.bar(['Avg age with heart disease','Avg age without heart disease'],[np.mean(age_with),np.mean(age_without)])\nplt.bar(['Median age with heart disease','Median age  without heart disease'],[np.median(age_with),np.median(age_without)])\nplt.xticks(rotation = 45)\nplt.show()","02e41440":"X=df.values\nX_train, X_test, y_train, y_test=train_test_split(X,y,test_size=0.20)\n\nmodel=GradientBoostingClassifier()\nmodel.fit(X_train,y_train)\n\nprint(str(model.score(X_test,y_test))+' Score of Gradient Boosting')\n","755bcd12":"model=AdaBoostClassifier()\nmodel.fit(X_train,y_train)\nprint(str(model.score(X_test,y_test))+' Score of AdaBoost')","cf6c20fa":"model=MLPClassifier(activation='logistic',max_iter=10000)\nmodel.fit(X_train,y_train)\nprint(str(model.score(X_test,y_test))+' Score of Multi Layer Perceptron')","4f2828e5":"model=KNeighborsClassifier(n_neighbors=15)\nmodel.fit(X_train,y_train)\nprint(str(model.score(X_test,y_test))+' Score of KNeighbors')","51dc683e":"model=RandomForestClassifier()\nmodel.fit(X_train,y_train)\nprint(str(model.score(X_test,y_test))+' Score of Random Forest')","f68725e1":"model=DecisionTreeClassifier()\nmodel.fit(X_train,y_train)\nprint(str(model.score(X_test,y_test))+' Score of Decision Tree')","b593b38a":"model=GaussianNB()\nmodel.fit(X_train,y_train)\nprint(str(model.score(X_test,y_test))+' Score of Naive Bayes using gaussian')","e4756c94":"model=GaussianProcessClassifier()\nmodel.fit(X_train,y_train)\nprint(str(model.score(X_test,y_test))+' Score of Gaussian Process')","b4b86322":"from sklearn import preprocessing\nX_train=preprocessing.normalize(X_train)\nX_test=preprocessing.normalize(X_test)","c6db85f9":"model=GradientBoostingClassifier()\nmodel.fit(X_train,y_train)\n\nprint(str(model.score(X_test,y_test))+'Score of Gradient Boosting (Normalized)')","0a52a371":"model=AdaBoostClassifier()\nmodel.fit(X_train,y_train)\nprint(str(model.score(X_test,y_test))+' Score of AdaBoost(Normalized)')","11d01b53":"model=MLPClassifier(activation='logistic',max_iter=10000)\nmodel.fit(X_train,y_train)\nprint(str(model.score(X_test,y_test))+' Score of Multi Layer Perceptron(Normalized)')","2a8cbd6a":"model=KNeighborsClassifier(n_neighbors=15)\nmodel.fit(X_train,y_train)\nprint(str(model.score(X_test,y_test))+'Score of KNeighbors (Normalized)')","b3db385f":"model=RandomForestClassifier()\nmodel.fit(X_train,y_train)\nprint(str(model.score(X_test,y_test))+'Score of Random Forest (Normalized)')","05d98501":"model=DecisionTreeClassifier()\nmodel.fit(X_train,y_train)\nprint(str(model.score(X_test,y_test))+' Score of Decision Tree (Normalized)')","ddd418a9":"model=GaussianNB()\nmodel.fit(X_train,y_train)\nprint(str(model.score(X_test,y_test))+' Score of Naive Bayes using gaussian(Normalized)')","2c0a2e03":"model=GaussianProcessClassifier()\nmodel.fit(X_train,y_train)\nprint(str(model.score(X_test,y_test))+' Score of Gaussian Process (Normalized)')","93bca646":"# Conclusions \n* The greatest results came from the following algorithms :\n    * Naive Bayes\n    * Random Forest \n    * MLP (Multi Layer Perceptron)\n \nAs we could see the average age of the individuals in the dataset is around 55.\nThe youngest person with the disease has 29 years old and the oldest 77\nWe can see that with this dataset a lot of assumptions can be made but more data is nedded to make better classification models. Maybe weight and height of the person could improve the models, such as other health personal information. A lot of work still can be made and this is an starter notebook feel free to leave a comment on mistakes or improvements that can be made. If you enjoyed the notebook please give it an UP and Thank you for your attention.","48ba7ee3":"# Starting the analysis\n1. We start taking a look at the the data trying to see some insights ?\n2. At second we see wich model will perform with a better score ?","d00ac349":"# Now with Normalized data.\n","0143bc4b":"done this we are going to show the data","93e79135":"After reading the data let's see what are the number of individuals that are male and female in the dataset","65e9b1fa":"Now we are going to look at age. Does age has a relation with heart disease. if yes how much? if not why?","00236114":"This data brings another question: What are the distribution between males and females with heart diseases ? Does it follows the same distribution as in the dataset?","28c341fe":"# Now analysing the models \n\n* We are going to use Diferent regressor models including:\n    \n    * Gradient Boosting \n    * Multi Layer Perceptron\n    * Random Forest Classifier \n    * Naive Bayes\n    * KNeighboards\n    * AdaBoost \n    * Gaussian Process\n    * Random Forest "}}