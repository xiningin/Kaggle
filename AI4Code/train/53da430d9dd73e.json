{"cell_type":{"2b8dc9c9":"code","43836143":"code","c5d64d84":"code","65a2c22b":"code","b3f1b783":"code","0ba77486":"code","be2d22ac":"code","a9bb512c":"code","9bc12254":"code","351bd3ee":"code","22cb9344":"code","85751b15":"code","6104119e":"code","6733137a":"code","c98c032a":"code","f1de1ddc":"code","49912e18":"code","5e31cae7":"code","b027522e":"code","7343807e":"code","f034adb2":"code","2520c848":"code","c3ccc136":"code","ac40f1e1":"markdown","dff62c65":"markdown","46be264d":"markdown","73b8f5a6":"markdown","7eef0ab6":"markdown","d1db2b6a":"markdown","9167687d":"markdown"},"source":{"2b8dc9c9":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\nfrom sklearn.model_selection import train_test_split\n\nimport tensorflow as tf","43836143":"data = pd.read_csv('..\/input\/voicegender\/voice.csv')","c5d64d84":"data","65a2c22b":"data.info()","b3f1b783":"label_encoder = LabelEncoder()\n\ndata['label'] = label_encoder.fit_transform(data['label'])","0ba77486":"dict(enumerate(label_encoder.classes_))","be2d22ac":"data","a9bb512c":"y = data['label'].copy()\nX = data.drop('label', axis=1).copy()","9bc12254":"scaler = StandardScaler()\n\nX = scaler.fit_transform(X)","351bd3ee":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state=42)","22cb9344":"X.shape","85751b15":"inputs = tf.keras.Input(shape=(X.shape[1],))\n\nx = tf.keras.layers.Dense(64, activation='relu')(inputs)\nx = tf.keras.layers.Dense(64, activation='relu')(x)\n\noutputs = tf.keras.layers.Dense(1, activation='sigmoid')(x)\n\nmodel = tf.keras.Model(inputs, outputs)","6104119e":"model.summary()","6733137a":"model.compile(\n    optimizer='adam',\n    loss='binary_crossentropy',\n    metrics=[\n        'accuracy',\n        tf.keras.metrics.AUC(name='auc')\n    ]\n)\n\nhistory = model.fit(\n    X_train,\n    y_train,\n    validation_split=0.2,\n    batch_size=32,\n    epochs=100,\n    callbacks=[\n        tf.keras.callbacks.EarlyStopping(\n            monitor='val_loss',\n            patience=3,\n            restore_best_weights=True\n        )\n    ]\n)","c98c032a":"model.evaluate(X_test, y_test)","f1de1ddc":"X = tf.keras.preprocessing.sequence.pad_sequences(X, dtype=np.float, maxlen=25, padding='post')\nX = X.reshape(-1, 5, 5)\nX = np.expand_dims(X, axis=3)","49912e18":"X.shape","5e31cae7":"plt.figure(figsize=(12, 12))\n\nfor i in range(9):\n    plt.subplot(3, 3, i + 1)\n    plt.imshow(np.squeeze(X[i]))\n    plt.axis('off')\n    \nplt.show()","b027522e":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state=42)","7343807e":"inputs = tf.keras.Input(shape=(X.shape[1], X.shape[2], X.shape[3]))\n\nx = tf.keras.layers.Conv2D(16, 2, activation='relu')(inputs)\nx = tf.keras.layers.MaxPooling2D()(x)\n\nx = tf.keras.layers.Conv2D(32, 1, activation='relu')(x)\nx = tf.keras.layers.MaxPooling2D()(x)\n\nx = tf.keras.layers.Flatten()(x)\n\nx = tf.keras.layers.Dense(64, activation='relu')(x)\n\noutputs = tf.keras.layers.Dense(1, activation='sigmoid')(x)\n\nmodel = tf.keras.Model(inputs, outputs)","f034adb2":"model.summary()","2520c848":"model.compile(\n    optimizer='adam',\n    loss='binary_crossentropy',\n    metrics=[\n        'accuracy',\n        tf.keras.metrics.AUC(name='auc')\n    ]\n)\n\nhistory = model.fit(\n    X_train,\n    y_train,\n    validation_split=0.2,\n    batch_size=32,\n    epochs=100,\n    callbacks=[\n        tf.keras.callbacks.EarlyStopping(\n            monitor='val_loss',\n            patience=3,\n            restore_best_weights=True\n        )\n    ]\n)","c3ccc136":"model.evaluate(X_test, y_test)","ac40f1e1":"# Splitting and Scaling","dff62c65":"# Modeling and Training","46be264d":"# Encoding Labels","73b8f5a6":"# Getting Started","7eef0ab6":"# Task for Today  \n\n***\n\n## Gender Recognition From Vocal Data  \n\nGiven *vocal data from various people*, let's try to predict the **gender** of a given person.  \n  \nWe will use two different TensorFlow neural networks (one a CNN) to make our predictions.","d1db2b6a":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/wqQ_bBOSoH0","9167687d":"# Using 2D CNNs"}}