{"cell_type":{"d80a7843":"code","cc096b3a":"code","974983e4":"code","d18c5f2f":"code","06136de0":"code","b089d981":"code","25f28d83":"code","a8571e08":"code","55fb9bab":"code","7369fb01":"code","13b250ff":"code","726a981a":"code","741ed993":"code","464fc62c":"code","1d8b425a":"code","7bfadb0e":"code","469457e5":"markdown","f54cd449":"markdown","34db8b34":"markdown"},"source":{"d80a7843":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cc096b3a":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport folium\nimport difflib \nimport geopandas as gpd\nimport math ","974983e4":"# Reads in the Covid-19 data\ndf_covid19 = pd.read_csv(\"\/kaggle\/input\/bangladesh-district-level-covid19-dataset\/BD_COVID_19_Time_Series_Data.csv\")\nlowercase = df_covid19[\"DISTRICT\"].map(lambda x: x.title())\ndf_covid19 = df_covid19.set_index(lowercase)\ndf_covid19.head(3)","d18c5f2f":"total_confirmedcases = df_covid19['TOTAL'].sum()\nlast_update = df_covid19.columns[-1]\nprint(f'Total number of confirmed cases (as of {last_update} AM):', total_confirmedcases)","06136de0":"# Reads in the district coords data\ndistrict_coords = pd.read_csv('\/kaggle\/input\/bangladesh-administrative-maps-geocoordinates\/districts.csv')\nlowercase = district_coords[\"name\"].map(lambda x: x.title())\ndistrict_coords = district_coords.set_index(lowercase)\ndistrict_coords.head(3)","b089d981":"# Corrects for small variations in English spelling of district names between data frames (e.g Comilla and Cumilla) in preparation for joining\ndistrict_coords.index = district_coords.index.map(lambda x: difflib.get_close_matches(x, df_covid19.index)[0])\ndistrict_coords.head(3)","25f28d83":"# Combines the data frames of Covid dataset and district coord dataset\ndf_districts_cv19 = df_covid19.join(district_coords, how = 'outer') \ndf_districts_cv19.head(3)","a8571e08":"#Accounts for the difference in name between Chittagong and Chattogram in different data sets and checks output\n#(due to official English renaming of the city from Chittagong to Chattogram in 2018)\ndf_districts_cv19['geoname'] = df_districts_cv19['name']\ndf_districts_cv19.loc[df_districts_cv19['DIST_CODE']==15, 'geoname'] = 'Chittagong'\ndf_districts_cv19[df_districts_cv19['DIST_CODE']==15]","55fb9bab":"#Take log of number of cases \ndf_districts_cv19['logtotal'] = df_districts_cv19['TOTAL'].apply(lambda x: math.log10(x) if x > 0 else 1E-2)  ","7369fb01":"#Shapefiles for the divisional and district boundaries for mapping \ndistrict_geodata = gpd.read_file(\"\/kaggle\/input\/bangladesh-administrative-boundaries-shapefiles\/bgd_admbnda_adm2_bbs_20180410.shp\")\ndivision_geodata = gpd.read_file(\"\/kaggle\/input\/bangladesh-administrative-boundaries-shapefiles\/bgd_admbnda_adm1_bbs_20180410.shp\")","13b250ff":"#Matches the name of districts in the shapefile with the Covid-19 dataframe for combining datasets later\ndf_districts_cv19['geoname'] = df_districts_cv19['geoname'].apply(lambda x: difflib.get_close_matches(x, district_geodata['ADM2_EN'])[0])\ndf_districts_cv19['logtotal'] = df_districts_cv19['TOTAL'].apply(lambda x: math.log10(x) if x > 0 else 1E-2)","726a981a":"#Create a datframe of divisional Covid-19 data and coords\ndf_divisions = df_districts_cv19.groupby(by = 'DIVISION').sum()\ndf_divisions['lat'] = df_districts_cv19.groupby(by = 'DIVISION')['lat'].mean()\ndf_divisions['lon'] = df_districts_cv19.groupby(by = 'DIVISION')['lon'].mean()\ndf_divisions['division_id'] = df_districts_cv19.groupby(by = 'DIVISION')['division_id'].mean()\ndf_divisions['logtotal'] = df_divisions['TOTAL'].apply(lambda x: math.log10(x) if x > 0 else 1E-2)  \ndf_divisions['geoname'] = df_divisions.index\ndf_divisions['geoname'] = df_divisions['geoname'].apply(lambda x: x.title())\ndf_divisions.loc[df_divisions['division_id']==1, 'geoname'] = 'Chittagong'\ndf_divisions","741ed993":"#Create map of district and divisional case numbers which will include clorepleth and markers layered for each \n\nm = folium.Map(\n    location=[np.median(df_districts_cv19['lat']),np.median(df_districts_cv19['lon'])],\n    zoom_start=7, \n)\n\nlayer1=folium.FeatureGroup(name='District Markers', show=False)\nlayer2=folium.FeatureGroup(name='Division Markers', show=False)\n\nm.add_child(layer1)\nm.add_child(layer2)\n\nfor index,rows in df_districts_cv19.iterrows():\n    if rows['lat'] and rows['lon']:\n        folium.Marker([rows['lat'], rows['lon']], popup='District: '+(str(rows['name']))+'\\n\\nConfirmed cases: '+str(rows['TOTAL']), \n                      icon=folium.Icon(color='orange', icon='info-sign')                     \n                     ).add_to(layer1)\n\nfor index,rows in df_divisions.iterrows():\n    if rows['lat'] and rows['lon']:\n        folium.Marker([rows['lat'], rows['lon']], popup='Division: '+(str(rows['geoname']))+'\\n\\nConfirmed cases: '+str(rows['TOTAL']), \n                      icon=folium.Icon(color='darkpurple', icon='info-sign')                     \n                     ).add_to(layer2)\n        \nfolium.Choropleth(\n    geo_data = district_geodata,\n    name='District Chloropleth',\n    data=df_districts_cv19,\n    columns=['geoname', 'logtotal'],\n    key_on='feature.properties.ADM2_EN',\n    legend_name='Confirmed Cases of Covid-19 [log]',\n    fill_color='Oranges',\n    highlight = True, \n    #bins = [0.0001, math.log10(10),math.log10(25),math.log10(50),math.log10(100),math.log10(200),math.log10(400),math.log10(1000),math.log10(10000),math.log10(50000)]    \n).add_to(m)\n\nfolium.Choropleth(\n    geo_data = division_geodata,\n    name='Division Chloropleth',\n    data=df_divisions,\n    columns=['geoname', 'logtotal'],\n    key_on='feature.properties.ADM1_EN',\n    legend_name='Confirmed Cases of Covid-19 [log]',\n    fill_color='Purples',\n    highlight = True, \n    #bins = [0.0001, math.log10(10),math.log10(25),math.log10(50),math.log10(100),math.log10(200),math.log10(500),math.log10(1000),math.log10(5000),math.log10(10000),math.log10(15000)]    \n).add_to(m)\n\nfolium.LayerControl(collapsed = False).add_to(m)\n\nm.save('Covid19_GeographicDistribution_BD.html')\nm","464fc62c":"plt.figure(figsize = (12,6))\ndf_districts_cv19['logtotal'].plot.hist(bins = 20)\nplt.xlabel('District wise mumber of cases [$log_{10}(N)$]', fontsize = 20)\nplt.xlim(0,4)","1d8b425a":"plt.figure(figsize = (12,6))\ndf_divisions['logtotal'].plot.hist(bins = 20)\nplt.xlabel('Division wise mumber of cases [$log_{10}(N)$]', fontsize = 20)\nplt.xlim(0,4)","7bfadb0e":"#plt.figure(figsize = (6,6))\ng = sns.FacetGrid(df_districts_cv19,col='DIVISION')\ng = g.map(plt.hist,'logtotal', bins = 10)\nfor i in range(0,8):\n    g.axes[0,i].set_xlabel('District wise mumber of cases [$log_{10}(N)$]', fontsize = 10)","469457e5":"Dhaka division is the clear exception at a divisional level also. ","f54cd449":"Investigating the distribution of of cases per districts shows that the numbers are still concentrated in Dhaka, Narayanganj and Chattogram; true as of 20\/05\/20).","34db8b34":"# In this notebook we explore the geographical distribution of confirmed cases of Covid-19.   \n# There is a map showing the concentration and number of cases on a divisional and district level as well as some histograms comparing districs and divisions. "}}