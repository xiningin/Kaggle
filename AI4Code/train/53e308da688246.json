{"cell_type":{"3fa15ad5":"code","50209063":"code","bdebaf2f":"code","6fd0371e":"code","cdf794c0":"code","7d59394a":"code","5c51e189":"code","a053af60":"code","93a1d258":"markdown","3628b2ca":"markdown","6f17ddfa":"markdown","d9348991":"markdown"},"source":{"3fa15ad5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","50209063":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('whitegrid')\nplt.style.use(\"fivethirtyeight\")\n%matplotlib inline\n\n# For reading stock data from yahoo\nfrom pandas_datareader.data import DataReader\n\n# For time stamps\nfrom datetime import datetime\nfrom math import sqrt\n\n\n#ignore the warnings\nimport warnings\nwarnings.filterwarnings('ignore')","bdebaf2f":"!pip install fbprophet","6fd0371e":"from fbprophet.plot import plot_plotly\nfrom fbprophet import Prophet","cdf794c0":"def collect_data(Symbol, start_date):\n    stock_data = DataReader(Symbol, data_source='yahoo', start=start_date, end=datetime.now())\n    return stock_data    \n","7d59394a":"def plot_close_val(data_frame, column, stock):\n    plt.figure(figsize=(16,6))\n    plt.title(column + ' Price History for ' + stock )\n    plt.plot(data_frame[column])\n    plt.xlabel('Date', fontsize=18)\n    plt.ylabel(column + ' Price USD ($) for ' + stock, fontsize=18)\n    plt.show()","5c51e189":"def fb_prophet_plot(df, param, stock):\n    # Check the dataset\n    #df.head()\n    # Create Dataset based on the FB Prophet standard ds\/y\n    df2 = pd.DataFrame([], columns = ['ds', 'y'])\n    df2.columns=['ds','y']\n    df2['ds']=pd.to_datetime(df.index,format='%Y-%m')\n    #Assign the Parameter\n    df2['y']=df[param].values\n    #check the new DS\n    #df2.head()\n    \n    #create a new Prophet Model\n    model=Prophet(interval_width=0.95,yearly_seasonality=True)\n    \n    #Fit the Model\n    model.fit(df2)\n    #Predict the future\n    future=model.make_future_dataframe(periods=50, freq='MS')\n    forecast=model.predict(future)\n    #Save the predicted model\n    preds= forecast['yhat'][:-50]\n    #plot the graph\n    title = 'FB Prophet predictions for ==> ' + stock\n    plt.figure(figsize=(16,8))\n    plt.plot(df2.ds,preds,color='#555555',label=' Predictions')\n    plt.plot(df2.ds,df2.y,color='#1155FF',label='Actual')\n    plt.title(title)\n    plt.legend()\n    plt.show()\n    figure=model.plot(forecast,xlabel='Date',ylabel='Price')\n    figure.set_size_inches(16,8)\n    plt.title(title)\n    model.plot_components(forecast)\n    plt.show()","a053af60":"Symbols = ['3MINDIA.NS','ABB.NS','POWERINDIA.NS','ACC.NS',\n           'AIAENG.NS','APLAPOLLO.NS','AUBANK.NS','AARTIDRUGS.NS',\n           'AARTIIND.NS','AAVAS.NS','ABBOTINDIA.NS','ADANIENT.NS',\n           'ADANIGREEN.NS','ADANIPORTS.NS','ATGL.NS','ADANITRANS.NS',\n           'ABCAPITAL.NS','ABFRL.NS','ADVENZYMES.NS','AEGISCHEM.NS',\n           'AFFLE.NS','AJANTPHARM.NS','AKZOINDIA.NS','ALEMBICLTD.NS',\n           'APLLTD.NS','ALKEM.NS','ALKYLAMINE.NS','ALOKINDS.NS',\n           'AMARAJABAT.NS','AMBER.NS','AMBUJACEM.NS','ANGELBRKG.NS',\n           'APOLLOHOSP.NS','APOLLOTYRE.NS','ASAHIINDIA.NS','ASHOKLEY.NS',\n           'ASHOKA.NS','ASIANPAINT.NS','ASTERDM.NS','ASTRAZEN.NS',\n           'ASTRAL.NS','ATUL.NS','AUROPHARMA.NS','AVANTIFEED.NS',\n           'DMART.NS','AXISBANK.NS','BASF.NS','BEML.NS','BSE.NS',\n           'BAJAJ-AUTO.NS','BAJAJCON.NS','BAJAJELEC.NS','BAJFINANCE.NS',\n           'BAJAJFINSV.NS','BAJAJHLDNG.NS','BALAMINES.NS','BALKRISIND.NS',\n           'BALMLAWRIE.NS','BALRAMCHIN.NS','BANDHANBNK.NS','BANKBARODA.NS',\n           'BANKINDIA.NS','MAHABANK.NS','BATAINDIA.NS','BAYERCROP.NS',\n           'BERGEPAINT.NS','BDL.NS','BEL.NS','BHARATFORG.NS','BHEL.NS',\n           'BPCL.NS','BHARATRAS.NS','BHARTIARTL.NS','BIOCON.NS',\n           'BIRLACORPN.NS','BSOFT.NS','BLISSGVS.NS','BLUEDART.NS',\n           'BLUESTARCO.NS','BBTC.NS','BOSCHLTD.NS','BRIGADE.NS',\n           'BRITANNIA.NS','BURGERKING.NS','CCL.NS','CESC.NS',\n           'CRISIL.NS','CSBBANK.NS','CADILAHC.NS','CANFINHOME.NS',\n           'CANBK.NS','CAPLIPOINT.NS','CGCL.NS','CARBORUNIV.NS',\n           'CASTROLIND.NS','CEATLTD.NS','CENTRALBK.NS','CDSL.NS',\n           'CENTURYPLY.NS','CENTURYTEX.NS','CERA.NS','CHALET.NS',\n           'CHAMBLFERT.NS','CHOLAHLDNG.NS','CHOLAFIN.NS','CIPLA.NS',\n           'CUB.NS','COALINDIA.NS','COCHINSHIP.NS','COFORGE.NS',\n           'COLPAL.NS','CAMS.NS','CONCOR.NS','COROMANDEL.NS','CREDITACC.NS',\n           'CROMPTON.NS','CUMMINSIND.NS','CYIENT.NS','DCBBANK.NS',\n           'DCMSHRIRAM.NS','DLF.NS','DABUR.NS','DALBHARAT.NS',\n           'DEEPAKNTR.NS','DELTACORP.NS','DHANI.NS','DHANUKA.NS',\n           'DBL.NS','DISHTV.NS','DCAL.NS','DIVISLAB.NS','DIXON.NS',\n           'LALPATHLAB.NS','DRREDDY.NS','EIDPARRY.NS','EIHOTEL.NS',\n           'EPL.NS','EDELWEISS.NS','EICHERMOT.NS','ELGIEQUIP.NS',\n           'EMAMILTD.NS','ENDURANCE.NS','ENGINERSIN.NS','EQUITAS.NS',\n           'ERIS.NS','ESCORTS.NS','EXIDEIND.NS','FDC.NS','FEDERALBNK.NS',\n           'FINEORG.NS','FINCABLES.NS','FINPIPE.NS','FSL.NS','FORTIS.NS',\n           'FCONSUMER.NS','FRETAIL.NS','GAIL.NS','GEPIL.NS','GMMPFAUDLR.NS',\n           'GMRINFRA.NS','GALAXYSURF.NS','GRSE.NS','GARFIBRES.NS',\n           'GICRE.NS','GILLETTE.NS','GLAND.NS','GLAXO.NS','GLENMARK.NS',\n           'GODFRYPHLP.NS','GODREJAGRO.NS','GODREJCP.NS','GODREJIND.NS',\n           'GODREJPROP.NS','GRANULES.NS','GRAPHITE.NS','GRASIM.NS',\n           'GESHIP.NS','GREAVESCOT.NS','GRINDWELL.NS','GUJALKALI.NS',\n           'GAEL.NS','FLUOROCHEM.NS','GUJGASLTD.NS','GNFC.NS','GPPL.NS',\n           'GSFC.NS','GSPL.NS','GULFOILLUB.NS','HEG.NS','HCLTECH.NS',\n           'HDFCAMC.NS','HDFCBANK.NS','HDFCLIFE.NS','HFCL.NS','HAPPSTMNDS.NS',\n           'HATSUN.NS','HAVELLS.NS','HEIDELBERG.NS','HEMIPROP.NS',\n           'HEROMOTOCO.NS','HSCL.NS','HINDALCO.NS','HAL.NS','HINDCOPPER.NS',\n           'HINDPETRO.NS','HINDUNILVR.NS','HINDZINC.NS','HONAUT.NS',\n           'HUDCO.NS','HDFC.NS','HUHTAMAKI.NS','ICICIBANK.NS','ICICIGI.NS',\n           'ICICIPRULI.NS','ISEC.NS','IDBI.NS','IDFCFIRSTB.NS','IDFC.NS',\n           'IFBIND.NS','IIFL.NS','IIFLWAM.NS','IOLCP.NS','IRB.NS','IRCON.NS',\n           'ITC.NS','ITI.NS','INDIACEM.NS','IBULHSGFIN.NS','IBREALEST.NS',\n           'INDIAMART.NS','INDIANB.NS','IEX.NS','INDHOTEL.NS','IOC.NS',\n           'IOB.NS','IRCTC.NS','ICIL.NS','INDOCO.NS','IGL.NS','INDUSTOWER.NS',\n           'INDUSINDBK.NS','INFIBEAM.NS','NAUKRI.NS','INFY.NS','INGERRAND.NS',\n           'INOXLEISUR.NS','INTELLECT.NS','INDIGO.NS','IPCALAB.NS',\n           'JBCHEPHARM.NS','JKCEMENT.NS','JKLAKSHMI.NS','JKPAPER.NS',\n           'JKTYRE.NS','JMFINANCIL.NS','JSWENERGY.NS','JSWSTEEL.NS',\n           'JTEKTINDIA.NS','JAMNAAUTO.NS','JINDALSAW.NS','JSLHISAR.NS',\n           'JSL.NS','JINDALSTEL.NS','JCHAC.NS','JUBLFOOD.NS','JUSTDIAL.NS',\n           'JYOTHYLAB.NS','KPRMILL.NS','KEI.NS','KNRCON.NS','KPITTECH.NS',\n           'KRBL.NS','KSB.NS','KAJARIACER.NS','KALPATPOWR.NS','KANSAINER.NS',\n           'KARURVYSYA.NS','KSCL.NS','KEC.NS','KOTAKBANK.NS','L&TFH.NS',\n           'LTTS.NS','LICHSGFIN.NS','LAOPALA.NS','LAXMIMACH.NS','LTI.NS',\n           'LT.NS','LAURUSLABS.NS','LEMONTREE.NS','LINDEINDIA.NS','LUPIN.NS',\n           'LUXIND.NS','MASFIN.NS','MMTC.NS','MOIL.NS','MRF.NS','MGL.NS',\n           'MAHSCOOTER.NS','MAHSEAMLES.NS','M&MFIN.NS','M&M.NS','MAHINDCIE.NS',\n           'MHRIL.NS','MAHLOG.NS','MANAPPURAM.NS','MRPL.NS','MARICO.NS',\n           'MARUTI.NS','MFSL.NS','MAXHEALTH.NS','MAZDOCK.NS','METROPOLIS.NS',\n           'MINDTREE.NS','MINDACORP.NS','MINDAIND.NS','MIDHANI.NS',\n           'MOTILALOFS.NS','MPHASIS.NS','MCX.NS','MUTHOOTFIN.NS',\n           'NATCOPHARM.NS','NBCC.NS','NCC.NS','NESCO.NS','NHPC.NS',\n           'NLCINDIA.NS','NMDC.NS','NOCIL.NS','NTPC.NS','NH.NS',\n           'NATIONALUM.NS','NFL.NS','NAVINFLUOR.NS','NESTLEIND.NS',\n           'NETWORK18.NS','NILKAMAL.NS','NAM-INDIA.NS','OBEROIRLTY.NS',\n           'ONGC.NS','OIL.NS','OFSS.NS','ORIENTELEC.NS','PIIND.NS',\n           'PNBHOUSING.NS','PNCINFRA.NS','PVR.NS','PAGEIND.NS','PERSISTENT.NS',\n           'PETRONET.NS','PFIZER.NS','PHILIPCARB.NS','PHOENIXLTD.NS',\n           'PIDILITIND.NS','PEL.NS','POLYMED.NS','POLYCAB.NS','POLYPLEX.NS',\n           'PFC.NS','POWERGRID.NS','PRESTIGE.NS','PRINCEPIPE.NS',\n           'PRSMJOHNSN.NS','PGHL.NS','PGHH.NS','PNB.NS','QUESS.NS',\n           'RBLBANK.NS','RECLTD.NS','RHIM.NS','RITES.NS','RADICO.NS',\n           'RVNL.NS','RAIN.NS','RAJESHEXPO.NS','RALLIS.NS','RCF.NS',\n           'RATNAMANI.NS','RAYMOND.NS','REDINGTON.NS','RELAXO.NS',\n           'RELIANCE.NS','RESPONIND.NS','ROSSARI.NS','ROUTE.NS',\n           'SBICARD.NS','SBILIFE.NS','SIS.NS','SJVN.NS','SKFINDIA.NS',\n           'SRF.NS','SANOFI.NS','SCHAEFFLER.NS','SCHNEIDER.NS','SEQUENT.NS',\n           'SHARDACROP.NS','SFL.NS','SHILPAMED.NS','SCI.NS','SHOPERSTOP.NS',\n           'SHREECEM.NS','SHRIRAMCIT.NS','SRTRANSFIN.NS','SIEMENS.NS',\n           'SOBHA.NS','SOLARINDS.NS','SOLARA.NS','SONATSOFTW.NS','SPANDANA.NS',\n           'SPICEJET.NS','STARCEMENT.NS','SBIN.NS','SAIL.NS','SWSOLAR.NS',\n           'STLTECH.NS','STAR.NS','SUDARSCHEM.NS','SUMICHEM.NS','SPARC.NS',\n           'SUNPHARMA.NS','SUNTV.NS','SUNCLAYLTD.NS','SUNDARMFIN.NS',\n           'SUNDRMFAST.NS','SUNTECK.NS','SUPRAJIT.NS','SUPREMEIND.NS',\n           'SUPPETRO.NS','SUVENPHAR.NS','SUZLON.NS','SWANENERGY.NS',\n           'SYMPHONY.NS','SYNGENE.NS','TCIEXP.NS','TCNSBRANDS.NS',\n           'TTKPRESTIG.NS','TV18BRDCST.NS','TVSMOTOR.NS','TANLA.NS',\n           'TASTYBITE.NS','TATACHEM.NS','TATACOFFEE.NS','TATACOMM.NS',\n           'TCS.NS','TATACONSUM.NS','TATAELXSI.NS','TATAINVEST.NS',\n           'TATAMTRDVR.NS','TATAMOTORS.NS','TATAPOWER.NS','TATASTEEL.NS',\n           'TEAMLEASE.NS','TECHM.NS','NIACL.NS','RAMCOCEM.NS','THERMAX.NS',\n           'THYROCARE.NS','TIMKEN.NS','TITAN.NS','TORNTPHARM.NS','TORNTPOWER.NS',\n           'TRENT.NS','TRIDENT.NS','TRITURBINE.NS','TIINDIA.NS','UCOBANK.NS',\n           'UFLEX.NS','UPL.NS','UTIAMC.NS','UJJIVAN.NS','UJJIVANSFB.NS',\n           'ULTRACEMCO.NS','UNIONBANK.NS','UBL.NS','MCDOWELL-N.NS','VGUARD.NS',\n           'VMART.NS','VIPIND.NS','VSTIND.NS','VAIBHAVGBL.NS','VAKRANGEE.NS',\n           'VALIANTORG.NS','VTL.NS','VARROC.NS','VBL.NS','VEDL.NS','VENKEYS.NS',\n           'VINATIORGA.NS','IDEA.NS','VOLTAS.NS','WABCOINDIA.NS','WELCORP.NS',\n           'WELSPUNIND.NS','WESTLIFE.NS','WHIRLPOOL.NS','WIPRO.NS',\n           'WOCKPHARMA.NS','YESBANK.NS','ZEEL.NS','ZENSARTECH.NS',\n           'ZYDUSWELL.NS','ECLERX.NS'\n]\nstart_date='2019-01-01'\nprint(\"Let us evaluate for all of NSE-500 stocks from 2019\")\nfor stock in Symbols:\n    df = collect_data(stock,start_date) #Collect the data\n    plot_close_val(df, 'Close', stock) # Plot the Closing Price\n    fb_prophet_plot(df, 'Close', stock)\n\nprint(\"All forecasting done!\")","93a1d258":"<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#5642C5;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.8px\">\n<p style=\"padding: 32px;   color:white;\"><br><center>National Stock Exchange NSE-500 Stock Prediction Using Facebook Prophet<\/center><br><br>\n<\/p>\n<\/div>\n## Use of Facebook Prophet for Stock Forecasting\u00b6\n### NSE-500 Stock forecast\n\n<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:#01234FF;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.8px\">\n  \n<p style=\"padding: 12px;   color:white;\">\nThis kernel uses Facebook Prophet (which uses SKLEARN) library to predict stocks. This kernel splits the **NSE 500** stocks \n<\/p>\n<\/div>\n\n\n<div class=\"alert alert-block alert-info\"> \n    <b> Task-1 \ud83d\udccc<\/b> Yahoo! DataReader Download <br><br>\n    <b> Task-2 \ud83d\udccc<\/b> Facebook Prophet Modeling and Forecast<br><br>\n<\/div>\n\n###  Yahoo! DataReader Download\n<div class=\"alert alert-block alert-info\">\n<b>Step-1:<\/b> Download data using Yahoo! Finance Data Reader<\/div>\n\n###  Facebook Prophet Models\n<div class=\"alert alert-block alert-info\">\n<b>Step-2:<\/b> Build Facebook Prophet Input dataset<\/div>\n<div class=\"alert alert-block alert-info\">\n<b>Step-3:<\/b> Run Prophet Model<\/div>\n<div class=\"alert alert-block alert-info\">\n<b>Step-4:<\/b> Generate Model Visualization <\/div>\n<div class=\"alert alert-block alert-info\">\n<b>Step-5:<\/b> Generate the Image Files <\/div>\n<div class=\"alert alert-block alert-info\">\n<b>Step-6:<\/b> Consolidate Image Files for Facebook Prophet Model <\/div>\n\n","3628b2ca":"## Let us try Facebook Prophet","6f17ddfa":"## Let us define some functions first","d9348991":"## Let us try some real data"}}