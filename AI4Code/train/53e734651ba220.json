{"cell_type":{"96cb4d6c":"code","5b94416d":"code","2ac972c5":"code","900917ea":"code","51f1b4ca":"code","4dc180ab":"code","eed6b5c1":"code","6335cea4":"code","2cda346e":"code","da538b01":"code","8c9cb8cf":"code","254f7ae9":"code","5dc67130":"code","78be028d":"code","3f821be4":"code","fe174fe9":"code","c22f7df5":"code","4cea28f0":"code","4eed3854":"markdown","4e986579":"markdown","846f57cd":"markdown","fc19125f":"markdown","b30db735":"markdown","d8f2f607":"markdown","6bd2d62f":"markdown","3aa53818":"markdown","cf2e4696":"markdown","9b5f8208":"markdown","bccf40a7":"markdown","1bd9ed24":"markdown"},"source":{"96cb4d6c":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport geopandas as gpd\nimport gc\nimport fiona\nimport folium\nimport contextily as ctx\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nplt.style.use('ggplot')\nimport seaborn as sns\nimport os\nroot_path = '\/kaggle\/input\/a-small-covid19-dataset'\n[print(i) for i in list(map(lambda x: root_path+\"\/\"+x, os.listdir(root_path)))]","5b94416d":"df = pd.read_csv(os.path.join(root_path, 'Covid19 India (Jan 20 - Mar 20).csv'))\n\ndisplay(df.sample(3), df.info())","2ac972c5":"assert (df.Sno - 1 - df.index).sum() == 0","900917ea":"df.drop('Sno', axis = 1, inplace = True, errors = 'ignore') #I add 'ignore' if you re-execute the cell","51f1b4ca":"df['Date'] = pd.to_datetime(df['Date'], errors = 'raise', format = \"%d-%m-%Y\")","4dc180ab":"distinct_values_table = df.apply(lambda x: x.nunique(), axis = 0).rename('distinct_values').to_frame().T\nnan_values_table = df.isna().sum().rename('nan_values').to_frame().T\n\nplot_df = (distinct_values_table.T.reset_index().rename(columns = {'index': 'variable'})\n          .merge(nan_values_table.T.reset_index().rename(columns = {'index': 'variable'}),\n                 on = 'variable'))\n\nfig, ax = plt.subplots(1, 2, figsize = (16, 8), gridspec_kw={'width_ratios': [2.3, 1]})\n\nsns.set_context(rc = {'patch.linewidth': 2.0})\nsns.barplot(x = 'variable', \n            y = 'distinct_values',\n            data = plot_df,\n            ax = ax[0])\n\nfor index, row in plot_df.iterrows():\n    value = row.distinct_values\n    ax[0].text(index, value+1, value, color='black', ha=\"center\", fontsize = 15)\n\nax[0].legend(fontsize=18)\nax[0].set_title('Distinct values for each variable', fontsize = 20)\nax[0].tick_params(axis='both', which='major', labelsize=14)\nax[0].tick_params(axis='both', which='minor', labelsize=14)\nax[0].set_xlabel('')\nax[0].set_ylim(0, 55)\nax[0].set_xticklabels(ax[0].get_xticklabels(), rotation = 35, fontsize = 13, color = 'black')\nax[0].set_ylabel('distinct_values', fontsize = 18, color ='black')\nplt.subplots_adjust(hspace = 0.3)\n\nbbox=[-0.2, 0, 1.2, 0.9]\nax[1].axis('off')\nax[1].title.set_text('')\nax[1].title.set_size(12)\nccolors = plt.cm.BuPu(np.full(len(plot_df.columns), 0.1))\nmpl_table = ax[1].table(cellText = plot_df.values, bbox=bbox, colLabels=plot_df.columns, colColours=ccolors)\nmpl_table.auto_set_font_size(True)\nmpl_table.auto_set_column_width(col=list(range(len(plot_df.columns))))\n#mpl_table.set_fontsize(14)","eed6b5c1":"(df['State\/UnionTerritory'].value_counts().rename('distinct_values').to_frame()\n .reset_index().rename({'index': 'State\/UnionTerritory'}, axis=1)\n .style.set_properties(subset=['State\/UnionTerritory'], **{'font-weight': 'bold'})\n .background_gradient(subset='distinct_values'))","6335cea4":"df_no_dup = df.drop_duplicates(['Date', 'State\/UnionTerritory'])\n\nassert (df['State\/UnionTerritory'].value_counts().to_frame()\n       .equals(df_no_dup['State\/UnionTerritory'].value_counts().to_frame()))\n\ndel df_no_dup\ngc.collect() #you can delete objects, but it's always better to garbage collect after","2cda346e":"fig, ax = plt.subplots(1, 1, figsize = (16, 6))\n\nplot_df = (df.groupby(['Date'])['ConfirmedForeignNational', 'ConfirmedIndianNational', 'Cured'].sum())\n\nax.legend(fontsize=25)\nfig.suptitle('Number of Cases and Cured after aggregating by Date', fontsize = 20)\nplt.title('Basically we are looking at Covid cases in the whole India', fontsize = 12)\nax.tick_params(axis='both', which='major', labelsize=14)\nax.tick_params(axis='both', which='minor', labelsize=14)\nax.set_xlabel('Date', fontsize = 18, color ='black')\nax.set_ylabel('distinct_values', fontsize = 18, color ='black')\nplt.subplots_adjust(hspace = 0.3)\n\nplot_df.plot(ax = ax, linewidth = 3, alpha = 0.5)\n\nimport matplotlib.dates as mdates\nmyFmt = mdates.DateFormatter('%d')\nax.xaxis.set_major_formatter(myFmt)\n\n","da538b01":"fig = px.line(data_frame = plot_df.reset_index(drop = False), x=\"Date\",\n              y = ['ConfirmedForeignNational', 'ConfirmedIndianNational', 'Cured'],\n              title = 'Number of Cases and Cured after aggregating by Date')\n\nfig.update_layout(\n    title_font_size = 20,\n    xaxis_title=\"Date\",\n    yaxis_title=\"Count\"\n)\n    \nfig.show()","8c9cb8cf":"print(plot_df.Cured.is_monotonic_increasing, \n      plot_df.ConfirmedForeignNational.is_monotonic_increasing, \n      plot_df.ConfirmedIndianNational.is_monotonic_increasing)","254f7ae9":"fig = px.treemap(df.groupby('State\/UnionTerritory').ConfirmedIndianNational.sum().reset_index(), \n                 path=['State\/UnionTerritory'], values='ConfirmedIndianNational',\n                  color='ConfirmedIndianNational', hover_data=['State\/UnionTerritory'],\n                  title=\"Confirmed Indian National per State\/UnionTerritory\",\n                  color_continuous_scale='RdBu')\nfig.show()","5dc67130":"df.groupby('State\/UnionTerritory').ConfirmedForeignNational.sum().fillna(0).reset_index()","78be028d":"fig = px.treemap(df.groupby('State\/UnionTerritory').ConfirmedForeignNational.sum()\n                 .reset_index().query('ConfirmedForeignNational>0'), \n                 path=['State\/UnionTerritory'], values='ConfirmedForeignNational',\n                  color='ConfirmedForeignNational', hover_data=['State\/UnionTerritory'],\n                  title=\"Confirmed Foreign National per State\/UnionTerritory (just the ones with cases)\",\n                  color_continuous_scale='RdBu')\nfig.show()","3f821be4":"fig = px.treemap(df.assign(allConfirmed=lambda x: x.ConfirmedIndianNational+ x.ConfirmedForeignNational)\n                 .groupby('State\/UnionTerritory').allConfirmed.sum()\n                 .reset_index().query('allConfirmed>0'), \n                 path=['State\/UnionTerritory'], values='allConfirmed',\n                  color='allConfirmed', hover_data=['State\/UnionTerritory'],\n                  title=\"allConfirmed per State\/UnionTerritory\",\n                  color_continuous_scale='RdBu')\nfig.show()","fe174fe9":"geo_df = gpd.read_file(root_path + \"\/\"+ 'india-polygon.shx').drop(\"id\", axis = 1)\n\nprint(geo_df.shape)\n\ndisplay(geo_df.sample(2))\n\nset(geo_df.st_nm) - set(df['State\/UnionTerritory']), set(df['State\/UnionTerritory']) - set(geo_df.st_nm)","c22f7df5":"geo_df_plus_cases = geo_df.merge(df.assign(allConfirmed=lambda x: x.ConfirmedIndianNational+ x.ConfirmedForeignNational)\n                 .groupby('State\/UnionTerritory').allConfirmed.sum()\n                 .reset_index().query('allConfirmed>0'), left_on = 'st_nm',\n            right_on = 'State\/UnionTerritory')","4cea28f0":"# props to https:\/\/jingwen-z.github.io\/how-to-draw-a-variety-of-maps-with-folium-in-python\/#paint-areas-with-different-colors\nfrom branca.colormap import linear\nnbh_count_colormap = linear.YlGnBu_09.scale(min(geo_df_plus_cases['allConfirmed']),\n                                            max(geo_df_plus_cases['allConfirmed']))\n\nnbh_locs_map = folium.Map(location=[29, 75],\n                          zoom_start = 4, tiles='cartodbpositron')\n\nstyle_function = lambda x: {\n    'fillColor': nbh_count_colormap(x['properties']['allConfirmed']),\n    'color': 'black',\n    'weight': 1.5,\n    'fillOpacity': 0.7\n}\n\nfolium.GeoJson(\n    geo_df_plus_cases,\n    style_function=style_function,\n    tooltip=folium.GeoJsonTooltip(\n        fields=['State\/UnionTerritory', 'allConfirmed'],\n        localize=True\n    )\n).add_to(nbh_locs_map)\n\nnbh_count_colormap.add_to(nbh_locs_map)\nnbh_count_colormap.caption = 'Cases per State\/UnionTerritory'\nnbh_count_colormap.add_to(nbh_locs_map)\n\nnbh_locs_map","4eed3854":"<a id = \"geo\"> <\/a>","4e986579":"<a id = \"df\"><\/a>","846f57cd":"Let's set `Date` as a datetime","fc19125f":"They seem monotonically increasing, as if they were cumulative","b30db735":"No Nan Values, which is always good","d8f2f607":"From [wikipedia](https:\/\/en.wikipedia.org\/wiki\/COVID-19_pandemic_in_India#2020) we actually get that the first case in India was on the 30th of January 2020. ","6bd2d62f":"The assertion confirms it","3aa53818":"It seems that the number of distinct values depends on the number of distinct `Date` per that\n`State\/UnionTerritory`","cf2e4696":"So it is, let's drop it and continue the analysis","9b5f8208":"https:\/\/jingwen-z.github.io\/how-to-draw-a-variety-of-maps-with-folium-in-python\/#paint-areas-with-different-colors","bccf40a7":"<h1> India Covid Jan-Mar 2020: EDA <\/h1>\n<br>\n\nIn this notebook I'll perform some exploratory data analysis.\n\n<h4 style=\"background-color:#e6f7ff;\" align = 'center'><i>Table of Contents<\/i><\/h4>\n\n- [files available and some info](#files)\n- [Covid19 India (Jan 20 - Mar 20).csv](#df)\n- [india-polygon.shp (**WORK IN PROGRESS**)](#geo)\n","1bd9ed24":"It seems that `Sno` column is equal to `df.index` $+1$"}}