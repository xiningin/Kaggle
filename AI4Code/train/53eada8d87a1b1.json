{"cell_type":{"2b207aa0":"code","ec424680":"code","ead69318":"code","f5588fef":"code","f1e60b33":"code","3bb5945c":"code","cdd813e1":"code","ca1f1d72":"code","83275180":"code","54cc8331":"code","5b4890a5":"code","385d5ab0":"code","59f4ec43":"code","2e54cd73":"code","6a24cb38":"code","22299da0":"code","eba7bf71":"code","2a3e5003":"code","67b92fc7":"code","d6deac94":"markdown","c558538e":"markdown","58c288ef":"markdown","604a7354":"markdown","117c0c86":"markdown","65b1062b":"markdown","4ecfb939":"markdown","e7be0f3a":"markdown","6203df44":"markdown","4e38c809":"markdown","c7252a6a":"markdown","e9bef59a":"markdown","9a3ead5a":"markdown"},"source":{"2b207aa0":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport os\nplt.style.use('seaborn')","ec424680":"p = '\/kaggle\/input\/plant-seedlings-classification'\n\ndef df_of_images(folder_name,path='\/kaggle\/input\/plant-seedlings-classification'):\n    itms = list()\n    for x in os.listdir(os.path.join(path,folder_name)):\n        for img in os.listdir(os.path.join(path,folder_name,x)):\n            itms.append({\n                'label': x.lower().strip().replace(' ','_').replace('-','_'),\n                'image_path': os.path.join(path,folder_name,x,img)\n            })\n    return pd.DataFrame(itms)\n        \ntrain = df_of_images('train')\ntest = pd.DataFrame({ 'image_path': [ os.path.join(p,'test',i) for i in os.listdir('\/kaggle\/input\/plant-seedlings-classification\/test')]})","ead69318":"train.label.value_counts().plot.bar(rot=0,figsize=(25,7));","f5588fef":"from keras.applications.inception_v3 import InceptionV3, preprocess_input\nfrom keras.preprocessing import image\nfrom keras.models import Model","f1e60b33":"base_model = InceptionV3()\nmodel = Model(inputs=base_model.input, outputs=base_model.get_layer('avg_pool').output)\t","3bb5945c":"def extract_features_keras(image_path,model):\n\timg = image.load_img(image_path, target_size=(299, 299))\n\tx = image.img_to_array(img)\n\tx = np.expand_dims(x, axis=0)\n\tx = preprocess_input(x)\n\tpredictions = model.predict(x)\n\treturn np.squeeze(predictions)","cdd813e1":"%%time\ntrain['image_features'] = train.image_path.apply(lambda x: extract_features_keras(x,base_model) )\ntest['image_features'] = test.image_path.apply(lambda x: extract_features_keras(x,base_model) )","ca1f1d72":"from sklearn import metrics\nfrom sklearn.model_selection import train_test_split\nimport xgboost as xgb","83275180":"train_,test_ = train_test_split(train,test_size=0.33,random_state=42,stratify=train.label)","54cc8331":"'train:',train_.label.value_counts() \/ len(train_),'test:',test_.label.value_counts() \/ len(test_)","5b4890a5":"%%time\nxgc = xgb.XGBClassifier(objective='multi:softmax',num_class=train.label.nunique())\nxgc.fit(pd.DataFrame(train_['image_features'].values.tolist()),train_.label)","385d5ab0":"results = test_.copy()\nresults['y_pred'] = xgc.predict(pd.DataFrame(test_['image_features'].values.tolist()))","59f4ec43":"print(metrics.classification_report(results.label,results.y_pred))","2e54cd73":"sns.heatmap(metrics.confusion_matrix(results.label,results.y_pred),annot=True,fmt='d');","6a24cb38":"%%time\nxgc = xgb.XGBClassifier(objective='multi:softmax',num_class=train.label.nunique())\nxgc.fit(pd.DataFrame(train_['image_features'].values.tolist()),train_.label)","22299da0":"label_map = {x.lower().strip().replace(' ','_').replace('-','_'):x for x in os.listdir(os.path.join(p,'train'))}\nlabel_map","eba7bf71":"%%time\nresults = test.copy()\nresults['species'] = xgc.predict(pd.DataFrame(test['image_features'].values.tolist()))\nresults['species'] = results['species'].replace(label_map)\nresults['file'] = results.image_path.apply(lambda x: x.split('\/')[-1])","2a3e5003":"results[['file','species']]","67b92fc7":"results[['file','species']].to_csv('submission.csv',index=False)","d6deac94":"## Feature Extraction","c558538e":"## Quick EDA","58c288ef":"## Modelling","604a7354":"**Confusion Matrix**","117c0c86":"**Extract image features**","65b1062b":"**Submission**","4ecfb939":"**Classification Report**","e7be0f3a":"## Plants","6203df44":"# The ML Botanist","4e38c809":"**Inception V3**","c7252a6a":"**RE:Train on full data**","e9bef59a":"**Training the model**","9a3ead5a":"**Results**"}}