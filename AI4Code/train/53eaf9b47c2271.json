{"cell_type":{"1d1d2611":"code","de489b9e":"code","850c4b1b":"code","5b48e6ad":"code","bbbbbe78":"code","729d40ce":"code","58883397":"code","3cbfd1f6":"code","12fc209e":"code","fa1dac8d":"code","f7855627":"code","14433cd9":"code","3943222e":"code","16eeebc5":"code","1611a9bf":"code","cc738505":"code","9d14278f":"code","1d37aa87":"code","c59bdb7f":"code","0f0f2516":"code","c9713601":"code","f4578d99":"code","4242abcb":"code","adccbb52":"code","fe2a763a":"code","f0c69f69":"code","cdf5694a":"code","8a188ddb":"code","95fa7af0":"code","01f0fa02":"code","c644c4e0":"code","27e0c5c6":"code","d532b101":"code","6ef69402":"markdown","50197e05":"markdown","3be0629d":"markdown","4b9f6a36":"markdown","205e5839":"markdown","2d305165":"markdown","d6eb939e":"markdown","149934fd":"markdown","e8a73800":"markdown","3c959512":"markdown","a549aa3a":"markdown","6560e20b":"markdown","06afa01b":"markdown","76947348":"markdown","a2e25a7e":"markdown","d4f6bb01":"markdown","994ce437":"markdown","ceaa9a2a":"markdown","8777457f":"markdown","d7bba975":"markdown","97eedd35":"markdown","14539efd":"markdown","f0a777bb":"markdown","8396d8cb":"markdown","bee85377":"markdown","244b4234":"markdown"},"source":{"1d1d2611":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\n\npd.set_option('display.max_columns', 150)\n","de489b9e":"import plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport plotly.express as px","850c4b1b":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5b48e6ad":"fifa_original = pd.read_csv('\/kaggle\/input\/fifa-20-complete-player-dataset\/players_20.csv')\nfifa_original.head()","bbbbbe78":"fifa_original.set_index('short_name', inplace = True)","729d40ce":"position_attributes = fifa_original.loc[:, 'ls':].dropna()\nposition_attributes.columns  = [i.upper() for i in position_attributes.columns]\nposition_attributes.head()","58883397":"gk_attributes = fifa_original[['overall', 'potential', 'gk_diving', 'gk_handling', 'gk_speed', 'gk_reflexes', 'gk_kicking', 'gk_positioning', 'goalkeeping_diving', 'goalkeeping_handling', 'goalkeeping_kicking', 'goalkeeping_positioning', 'goalkeeping_reflexes']]\ngk_attributes = gk_attributes.dropna()\n\ngk_attributes.head()","3cbfd1f6":"gk_attributes.corr()","12fc209e":"plt.figure(figsize = (28,12))\nsns.set_context('poster',font_scale=1)\nsns.heatmap(gk_attributes.corr(), annot = True).set_title('GK Attributes')","fa1dac8d":"defense_pos = np.array(['CB','LB','RB'])\n\ndefenders = fifa_original[fifa_original['player_positions'].isin(i for i in defense_pos)]\n\ndefense_attributes = defenders[['overall', 'potential', 'defending', 'physic', 'pace', 'passing', 'dribbling', 'attacking_heading_accuracy', 'attacking_short_passing', 'skill_long_passing', 'skill_ball_control', 'movement_sprint_speed', 'movement_acceleration', 'movement_reactions', 'power_shot_power', 'power_jumping', 'power_stamina', 'power_strength', 'power_long_shots', 'defending_marking', 'defending_standing_tackle', 'defending_sliding_tackle',]]\ndefense_attributes= defense_attributes.dropna()\ndefense_attributes.corr()  ","f7855627":"plt.figure(figsize = (28,12))\nsns.set_context('poster',font_scale=.75)\nsns.heatmap(defense_attributes.corr(), annot = True, vmin = -1, vmax = 1, cmap= 'coolwarm')\n","14433cd9":"attack_pos = np.array(['LS','RS','ST','CF','CAM','RM','LM','RW','LW','LAM','RAM'])\nattackers = fifa_original[fifa_original['player_positions'].isin(i for i in attack_pos)]\nattack = attackers[['overall', 'potential', 'skill_moves', 'pace','shooting', 'passing', 'dribbling', 'physic',\n                   'attacking_crossing', 'attacking_finishing', 'attacking_heading_accuracy', 'attacking_short_passing',\n                   'attacking_volleys', 'skill_dribbling', 'skill_curve', 'skill_fk_accuracy', 'skill_long_passing',\n                   'skill_ball_control', 'movement_acceleration', 'movement_sprint_speed', 'movement_agility',\n                   'movement_reactions', 'movement_balance', 'power_shot_power', 'power_jumping', 'power_stamina',\n                   'power_strength', 'power_long_shots']]\nattack = attack.dropna()","3943222e":"attack_corr = attack.corr()\nattack_corr","16eeebc5":"fig = go.Figure(data=go.Heatmap(\n                   z=attack_corr,\n                   x=attack_corr.columns,\n                   y=attack_corr.columns, colorscale='Blues',\n                   hoverongaps = True))\nfig.show()","1611a9bf":"fifa_original = fifa_original[['long_name', 'age', 'club', 'nationality', 'overall', 'potential', 'value_eur',\n             'wage_eur', 'player_positions', 'preferred_foot', 'international_reputation', 'weak_foot', 'skill_moves', 'work_rate', 'body_type',\n             'release_clause_eur', 'team_position', 'team_jersey_number', 'nation_position', 'nation_jersey_number', 'pace', 'shooting', 'passing', 'dribbling', 'defending',\n             'physic', 'attacking_crossing', 'attacking_finishing', 'attacking_heading_accuracy', 'attacking_short_passing',\n             'attacking_volleys', 'skill_dribbling', 'skill_curve', 'skill_fk_accuracy', 'skill_long_passing', 'skill_ball_control',\n             'movement_acceleration', 'movement_sprint_speed', 'movement_agility', 'movement_reactions', 'movement_balance', 'power_shot_power', 'power_jumping',\n             'power_stamina', 'power_strength', 'power_long_shots', 'mentality_aggression', 'mentality_interceptions', 'mentality_positioning', 'mentality_vision', 'mentality_penalties',\n             'mentality_composure', 'defending_marking', 'defending_standing_tackle', 'defending_sliding_tackle', 'goalkeeping_handling']]\n\nfifa_original.columns = ['Full Name', 'Age', 'Club', 'Nationality', 'Overall', 'Potential', 'Value(Euro)', 'Wage(Euro)', 'Position(s)',\n                'Foot', 'International Reputation', 'Weak Foot', 'Skill Moves', 'Work Rate', 'Body Type', 'Release Clause', 'Team Pos', 'Jersey No.', 'National Pos', 'National Jersey No.',\n                'Pace', 'Shooting', 'Passing', 'Dribbling', 'Defending', 'Physic'] + [str(i) for i in fifa_original.columns[26:]] \nfifa_original.head()","cc738505":"fifa_original['Club'].fillna('No Club', inplace = True)\nfifa_original['Position(s)'].fillna('unknown', inplace = True)\nfifa_original['Work Rate'].fillna('Medium\/ Medium', inplace = True)\nfifa_original['Foot'].fillna('Right', inplace = True)\n\nfifa_original.head()","9d14278f":"fig = go.Figure()\n\nfig = go.Figure(data=go.Scatter(\n    x = fifa_original['Overall'],\n    y = fifa_original['Value(Euro)'],\n    mode='markers',\n    marker=dict(\n        size=16,\n        color=fifa_original['Age'], #set color equal to a variable\n        colorscale='Plasma', # one of plotly colorscales\n        showscale=True\n    ),\n    text= fifa_original.index,\n))\n\nfig.update_layout(title='Styled Scatter Plot (colored by Age) year 2020 - Overall Rating vs Value in Euros',\n                  xaxis_title='Overall Rating',\n                  yaxis_title='Value in Euros',\n                  paper_bgcolor='rgba(0,0,0,0)',\n                  plot_bgcolor='rgba(0,0,0,0)',\n                  font=dict(family='Cambria, monospace', size=12, color='#000000'))\nfig.show()","1d37aa87":"TopClubsInVal = fifa_original[['Club', 'Value(Euro)']]\nTopClubsInVal = TopClubsInVal.set_index(n for n in range(TopClubsInVal.shape[0]))\nTopClubsInVal = pd.DataFrame(TopClubsInVal.groupby('Club')['Value(Euro)'].sum()).sort_values('Value(Euro)', ascending = False).head(20)\n\nfig = go.Figure(\n        data = [go.Bar(y = TopClubsInVal['Value(Euro)'],\n                       x = TopClubsInVal.index)],\n        layout_title_text = \"Top 20 Clubs by Total Player Value(Euro) of Fifa 20\"\n        \n)\nfig.update_traces(marker_color='green')\nfig.show() ","c59bdb7f":"most_valued = fifa_original[['Value(Euro)', 'Club', 'Nationality']]\nmost_valued = most_valued.sort_values('Value(Euro)', ascending = False).head(30)\n\nfig = go.Figure(\n        data = [go.Bar(y = most_valued['Value(Euro)'],\n                       x = most_valued.index)],\n                       \n        \n        layout_title_text = 'Highest Valued Players of Fifa 20'\n)\n\nfig.show()","0f0f2516":"top_ratings = fifa_original[['Club', 'Overall', 'Potential', 'Value(Euro)']]\ntop_ratings = top_ratings.sort_values('Overall', ascending = False).head(30)\n\nfig = go.Figure(\n        data = [go.Bar(y = top_ratings['Overall'],\n                       x = top_ratings.index)],\n        layout_title_text = 'Top Rated Players of Fifa 20'\n)\nfig.update_traces(marker_color='#00A')\nfig.show()","c9713601":"GK = fifa_original[fifa_original['Position(s)'] == 'GK']\nGK = GK[['Club', 'Nationality', 'Overall', 'Potential']]","f4578d99":"GK = GK.sort_values('Overall', ascending = False).head(20)\n\nfig = go.Figure(\n        data = [go.Bar(y = GK['Overall'],\n                       x = GK.index)],\n        layout_title_text = \"Top Rated GK's of Fifa 20\"\n)\nfig.update_traces(marker_color='goldenrod')\nfig.show()","4242abcb":"sns.set(style = 'darkgrid')\nplt.figure(figsize = (35,15))\nsns.set_context('poster',font_scale=1.5)\nsns.countplot(x = 'Foot', data = fifa_original, palette = 'coolwarm').set_title('Left v\/s Right')","adccbb52":"best_fk = fifa_original[['skill_fk_accuracy']].sort_values('skill_fk_accuracy', ascending = False).head(30)\n\nx = best_fk.skill_fk_accuracy\nplt.figure(figsize=(12,8))\nplt.style.use('seaborn-paper')\nsns.set_context('poster',font_scale=.5)\n\nax = sns.barplot(x = x, y = best_fk.index, data = best_fk)\nax.set_xlabel(xlabel = \"Free-Kick Attributes\", fontsize = 16)\nax.set_ylabel(ylabel = 'Player Name(s)', fontsize = 16)\nax.set_title(label = \"Bar Plot of Best Free-Kick Takers\", fontsize = 20)\nplt.show()\n\n","fe2a763a":"top_clubs = np.array(['Real Madrid', 'Manchester City', 'Tottenham Hotspur', 'Napoli',\n             'FC Barcelona', 'Juventus', 'Paris Saint-Germain', 'Liverpool',\n             'Manchester United', 'Chelsea', 'Atl\u00e9tico Madrid', 'Arsenal',\n             'Borussia Dortmund', 'FC Bayern M\u00c3\u00bcnchen', 'West Ham United', 'FC Schalke 04',\n             'Roma', 'Leicester City', 'Inter', 'Milan'])","f0c69f69":"top_clubs.shape","cdf5694a":"condition_top20 = ((fifa_original['Potential'] - fifa_original['Overall']) >= 15) & (fifa_original['Potential'] >= 80) & (fifa_original['Club'].isin(top_clubs))  & (fifa_original['Age'] <= 20) \nyoung_players_top20 = fifa_original[condition_top20].sort_values('Potential', ascending = False)\n\nyoung_clubs_top20 = young_players_top20.Club\nyoung_clubs_top20 = pd.DataFrame(young_clubs_top20.value_counts())\nyoung_players_top20.shape","8a188ddb":"condition_all = ((fifa_original['Potential'] - fifa_original['Overall']) >= 15) & (fifa_original['Potential'] >= 80)   & (fifa_original['Age'] <= 20) \nyoung_players_all = fifa_original[condition_all].sort_values('Potential', ascending = False)\n\nyoung_clubs_all = young_players_all.Club\nyoung_clubs_all = pd.DataFrame(young_clubs_all.value_counts())\nyoung_players_all.shape","95fa7af0":"young_players_top20.head()","01f0fa02":"young_players_all.head()","c644c4e0":"fig = make_subplots(1, 2, specs=[[{'type':'domain'}, {'type':'domain'}]],\n                    subplot_titles=['From Top 20 Clubs', 'From All Clubs'])\nfig.add_trace(go.Pie(labels=young_clubs_top20.index, values= young_clubs_top20.Club, scalegroup='one',\n                     name=\"From Top 20 Clubs\"), 1, 1)\nfig.add_trace(go.Pie(labels=young_clubs_all.head(20).index, values=young_clubs_all.head(20).Club, scalegroup='one',\n                     name=\"From All Clubs\"), 1, 2)\n\nfig.update_layout(title_text='Count of Promising Young Players')\nfig.show()","27e0c5c6":"young_players_all_cheapest = young_players_all[['Age', 'Club', 'Nationality', 'Overall', 'Potential', 'Value(Euro)', 'Wage(Euro)', 'Position(s)']].sort_values('Value(Euro)', ascending = True) \n\nfig = go.Figure()\n\nfig = go.Figure(data=go.Scatter(\n    x = young_players_all_cheapest['Potential'],\n    y = young_players_all_cheapest['Value(Euro)'],\n    mode='markers',\n    marker=dict(\n        size=16,\n        color=young_players_all_cheapest['Age'], #set color equal to a variable\n        colorscale='Plasma', # one of plotly colorscales\n        showscale=True\n    ),\n    text= young_players_all_cheapest.index,\n))\n\nfig.update_layout(title='Scatter Plot of Potential of Promising Young Players vs Value in Euros',\n                  xaxis_title='Potential',\n                  yaxis_title='Value in Euros',\n                  paper_bgcolor='rgba(0,0,0,0)',\n                  plot_bgcolor='rgba(0,0,0,0)',\n                  font=dict(family='Cambria, monospace', size=12, color='#000000'))\nfig.show()","d532b101":"young_players_all_cheapest50 = young_players_all_cheapest.head(50)\n\nfig = go.Figure()\n\nfig = go.Figure(data=go.Scatter(\n    x = young_players_all_cheapest50['Potential'],\n    y = young_players_all_cheapest50['Value(Euro)'],\n    mode='markers',\n    marker=dict(\n        size=16,\n        color=young_players_all_cheapest50['Age'], #set color equal to a variable\n        colorscale='Plasma', # one of plotly colorscales\n        showscale=True\n    ),\n    text= young_players_all_cheapest50.index,\n))\n\nfig.update_layout(title='Scatter Plot of Potential of 50 Cheapest Promising Young Players vs Value in Euros',\n                  xaxis_title='Potential',\n                  yaxis_title='Value in Euros',\n                  paper_bgcolor='rgba(0,0,0,0)',\n                  plot_bgcolor='rgba(0,0,0,0)',\n                  font=dict(family='Cambria, monospace', size=12, color='#000000'))\nfig.show()","6ef69402":"### 8. Promising Young Players by Value","50197e05":"### 6. Best Free-kick takers","3be0629d":"### 4. Top 20 GK's","4b9f6a36":"## Relation between different attributes (Position-wise)","205e5839":"### 7. Count of Promising Young Players from All Clubs and Top Clubs","2d305165":"### 1. GK Attributes","d6eb939e":"\n### 3. Attacker\/Mid-fielder Attributes","149934fd":"Here we can see how different attacking\/mid-fielding attributes may be related to each other and how they may contribute to the overall attributes of an attacker\/mid-fielder.\nNOTE : It is not always necessary that 2 attributes who have a correlation close to 1 are always related to each other. There may be other factors involved for two properties to affect each other.","e8a73800":"##### Setting GK Attributes","3c959512":"#### There are 59 Players under 20 in the Top 20 Clubs who have high room of improvement and the potential to become some of Top players in the World. ","a549aa3a":"### 4. Top 30 Highest Rated Players","6560e20b":"##### Setting Defender Attributes","06afa01b":"Here we can see how different defense attributes may be related to each other and how they may contribute to the overall attributes of a Defender.\nNOTE : It is not always necessary that 2 attributes who have a correlation close to 1 are always related to each other. There may be other factors involved for two properties to affect each other.\n","76947348":"### 3. Top 30 Most Valued Players (Euro)","a2e25a7e":"Here we can see how different goal-keeping attributes may be related to each other and how they may contribute to the overall attributes of a GK.\nFor example, correlation between GK Handling and Overall attributes is 0.93 and that of Speed and Overall attributes is 0.48.\nThus, we can infer from this data that speed is not that of an important factor when it comes to judging the quality of a GK but handling is. \nNOTE : Correlation doesn't always imply causation i.e it is not always necessary that two attributes who have a correlation close to 1 are always related to each other nor that they are not related to each other if correlation is close to 0. There may be other factors involved for two properties to affect each other.","d4f6bb01":"##### Resetting Column Names","994ce437":"### 5. Number of Left\/Right Footed Players","ceaa9a2a":"Hey guys,\nthis is my first EDA notebook. Please upvote if you find it useful. Suggestions and feedback are very appreciated.","8777457f":"### 1. Scatter Plot of all Players in Fifa-20 ","d7bba975":"## Fifa 20 Attributes and Players Analysis","97eedd35":"### 2. Defense Attributes","14539efd":"#### Importing Necessary libraries for Analysis and Visualization","f0a777bb":"#### There are 321 Players under 20 from all Clubs who have high room of improvement and the potential to become some of the Top players in the World.","8396d8cb":"## Player and Club Stats","bee85377":"##### Setting Attacker\/Midfielder Attributes","244b4234":"### 2. Top 20 Clubs by Total Player Value (Euro)"}}