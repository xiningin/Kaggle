{"cell_type":{"4a2fad58":"code","78811b82":"code","0744890e":"code","692d8d34":"code","6c1edaa9":"code","929f1c3e":"code","8fdd33b8":"code","330ccb64":"code","b3c315f4":"code","7cc0265a":"code","1dab2716":"code","de7f6b6d":"code","b155ab10":"code","f456f2c5":"code","69448bb4":"code","59f79238":"code","5ee02266":"code","97c701cc":"code","d2913ebb":"code","4d967046":"code","27f897e6":"code","17743457":"code","5ca3e378":"markdown","ee0cf843":"markdown","728fa1fa":"markdown","3a20fe1d":"markdown","8598a739":"markdown","6292f64a":"markdown","904e10dc":"markdown"},"source":{"4a2fad58":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport os\nimport PIL\nimport cv2\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers,models","78811b82":"dataset_url = \"https:\/\/storage.googleapis.com\/download.tensorflow.org\/example_images\/flower_photos.tgz\"\ndata_dir = tf.keras.utils.get_file('flower_photos', origin=dataset_url,  cache_dir='.', untar=True)","0744890e":"data_dir","692d8d34":"import pathlib\ndata_dir=pathlib.Path(data_dir)\ndata_dir","6c1edaa9":"len(list(data_dir.glob('*\/*.jpg')))","929f1c3e":"roses=list(data_dir.glob('roses\/*.jpg'))\nroses[:5]","8fdd33b8":"PIL.Image.open(str(roses[0]))","330ccb64":"cv2.imread(str(roses[0]))","b3c315f4":"flower_images={\n    'roses' : list(data_dir.glob('roses\/*.jpg')),\n    'tulips': list(data_dir.glob('tulips\/*.jpg')),\n    'dandelin':list(data_dir.glob('dandelin\/*.jpg')),\n    'sunflowers':list(data_dir.glob('sunflowers\/*.jpg')),\n    'daisy':list(data_dir.glob('daisy\/*.jpg'))\n}","7cc0265a":"flower_labels={\n    'roses':0,\n    'tulips':1,\n    'dandelin':2,\n    'sunflowers':3,\n    'daisy':4\n}","1dab2716":"flower_images['roses'][:5]","de7f6b6d":"PIL.Image.open(str(flower_images['roses'][3]))","b155ab10":"cv2.imread(str(flower_images['roses'][1])).shape","f456f2c5":"x,y=[],[]\nfor flower_name,images in flower_images.items():\n    for image in images:\n        img = cv2.imread(str(image))\n        resized_img=cv2.resize(img,(180,180))\n        x.append(resized_img)\n        y.append(flower_labels[flower_name])","69448bb4":"x=np.array(x)\ny=np.array(y)","59f79238":"x=x\/255        # scaling of each image pixel","5ee02266":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,random_state=0)","97c701cc":"data_augmentation = keras.Sequential([\n    layers.experimental.preprocessing.RandomFlip(\"horizontal\", input_shape=(180, 180,3)),\n    layers.experimental.preprocessing.RandomRotation(0.1),\n    layers.experimental.preprocessing.RandomZoom(0.1)\n])","d2913ebb":"plt.imshow(x[0])                     # original image","4d967046":"plt.imshow(data_augmentation(x)[0])           # augmented image","27f897e6":"model = keras.Sequential([\n  data_augmentation,\n  layers.Conv2D(16, 3, padding='same', activation='relu'),\n  layers.MaxPooling2D(),\n  layers.Conv2D(32, 3, padding='same', activation='relu'),\n  layers.MaxPooling2D(),\n  layers.Conv2D(64, 3, padding='same', activation='relu'),\n  layers.MaxPooling2D(),\n  layers.Dropout(0.2),\n  layers.Flatten(),\n  layers.Dense(128, activation='relu'),\n  layers.Dense(5)\n])\n\nmodel.compile(optimizer='adam',\n              loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),\n              metrics=['accuracy'])\n              \nmodel.fit(x_train, y_train, epochs=30)","17743457":"model.evaluate(x_test,y_test)","5ca3e378":"## Data Augmentation","ee0cf843":"# Data Augmentation To Address Overfitting In Flower Classification CNN\n### In this notebook we will build a CNN to classify flower images. We will also see how our model overfits and how overfitting can be addressed using data augmentation. Data augmentation is a process of generating new training samples from current training dataset using transformations such as zoom, rotations, change in contrast etc.","728fa1fa":"## Downloading the flowers dataset from googleapis.com","3a20fe1d":"### Creating a Dictionary of each category of flower","8598a739":"### Resizing every image to 180x180 and creating X(having images) and Y(having labels of flower category) for model","6292f64a":"## Training of model using Dropout layers and Augmentaion ","904e10dc":"## Preprocessing of data"}}