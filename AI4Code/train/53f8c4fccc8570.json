{"cell_type":{"a41c787f":"code","62eec30a":"code","fb9023d4":"code","1e8e9b5d":"code","4792a141":"code","7304ac47":"code","3896a36c":"markdown","b7f47c11":"markdown","42cd4413":"markdown"},"source":{"a41c787f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.tree import export_graphviz\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n","62eec30a":"import os\n\ndata_path = \"\/kaggle\/input\/titanic-machine-learning-from-disaster\/\"\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n #   for filename in filenames:\n  #      print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\ntrain_data = pd.read_csv(data_path+\"train.csv\")\ntrain_data.head()","fb9023d4":"test_data = pd.read_csv(data_path+\"\/test.csv\")\ntest_data.head()","1e8e9b5d":"#percentage of women survived\nwomen = train_data.loc[train_data.Sex == 'female']['Survived']\nwomen_percentage_survived = sum(women)\/len(women)\nprint(\"% percentage of women survived:\" , women_percentage_survived)","4792a141":"#percentage of men survived\nmen = train_data.loc[train_data.Sex == 'male']['Survived']\nmen_percentage_survived = sum(men)\/len(men)\nprint(\"% percentage of men survived:\" , men_percentage_survived)","7304ac47":"from sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(max_features = 'sqrt',n_estimators=200, max_depth=7, random_state=1, oob_score='TRUE')\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")\n","3896a36c":"Calculating the accuracy of the model","b7f47c11":"Machine Learning Algorithm","42cd4413":"Percentage of women who survived"}}