{"cell_type":{"60cf5fd0":"code","b841acdb":"code","88eb9c1d":"code","c98bf520":"code","c4f38043":"code","7aa53686":"code","5199d605":"code","8492baf3":"code","589a946e":"code","66d76267":"code","3a532e6c":"code","5daf3397":"code","b25e298b":"code","1b537b3b":"code","a7318a8c":"markdown","1f2fcca6":"markdown"},"source":{"60cf5fd0":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","b841acdb":"def is_prime(n):\n    \"\"\"Determines if a positive integer is prime.\"\"\"\n\n    if n > 2:\n        i = 2\n        while i ** 2 <= n:\n            if n % i:\n                i += 1\n            else:\n                return False\n    elif n != 2:\n        return False\n    return True","88eb9c1d":"df = pd.read_csv(\"..\/input\/cities.csv\")","c98bf520":"df.head()","c4f38043":"df['Prime'] = df['CityId'].apply(is_prime)","7aa53686":"fig = plt.figure(figsize=(18,18))\nplt.scatter(df.X, df.Y, c=df['Prime'], marker=\".\", alpha=.5);","5199d605":"sub = pd.read_csv(\"..\/input\/sample_submission.csv\")","8492baf3":"sub.head()","589a946e":"df['xplusy'] = df.X + df.Y","66d76267":"df.sort_values('xplusy')['CityId'].values","3a532e6c":"sub['Path'] = np.append(0, df.sort_values('xplusy')['CityId'].values)","5daf3397":"sub.loc[24740] = 197338","b25e298b":"sub.loc[197769] = 0","1b537b3b":"sub.to_csv('simple_submission.csv', index=False)","a7318a8c":"Ensure that path ends at North Pole.","1f2fcca6":"Trip takes longer if every 10th step doesn't come from a prime, so it's important to be able to find the prime cities."}}