{"cell_type":{"877f1bb1":"code","d345b956":"code","90b27e0e":"code","7588d0ca":"code","03b84af6":"code","240bf651":"code","da98f458":"code","db7ce055":"code","1a8fa827":"code","d0c14fc9":"code","7bdb5c65":"code","50844f82":"code","4ecf07c8":"code","55a583b4":"code","651b92e8":"code","23341a85":"code","316ada1f":"code","70c3f907":"code","daf516f3":"code","f1961348":"code","4e7a1baa":"code","e9fd510a":"code","c8b51354":"code","1e9bd2ce":"code","63a00f6f":"code","73006e5a":"code","4d85f403":"code","618117f9":"code","ef619689":"code","92b6ba95":"code","2989d6a8":"code","13fddfe4":"code","5df2172b":"code","aa4175fc":"code","91654f8b":"code","96ac9a7f":"code","8bc43a6a":"code","6a9ac171":"markdown","011a9fe5":"markdown","8a26fbb6":"markdown","09710074":"markdown","fda0e30e":"markdown","2efb413f":"markdown","9bca027e":"markdown","5d8559df":"markdown","39e96107":"markdown","f5a13ff6":"markdown","9db5ab78":"markdown","edce29f5":"markdown","99d8e087":"markdown","ca812daf":"markdown","fb111750":"markdown","2d0ac09d":"markdown","de8479b7":"markdown","3251948f":"markdown","cf415d59":"markdown","3ab28a6d":"markdown"},"source":{"877f1bb1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d345b956":"fitrain=pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv\")\nfitest= pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')","90b27e0e":"fitrain['train']  = 1\nfitest['train']  = 0\ndf = pd.concat([fitrain, fitest], axis=0,sort=False)","7588d0ca":"df","03b84af6":"df.isnull().sum()","240bf651":"df.columns","da98f458":"df['SalePrice'].describe()","db7ce055":"df.info()","1a8fa827":"def show_missing_info(df):\n    missing_info = df.isna().sum().reset_index(drop=False)\n    missing_info.columns = [\"column\",\"rows\"]\n    missing_info[\"missing_pct\"] = (missing_info[\"rows\"]\/fitrain.shape[0])*100\n    missing_info = missing_info[missing_info[\"rows\"]>0].sort_values(by=\"missing_pct\",ascending=False)\n    return missing_info\nmissing_df = show_missing_info(fitrain)\nmissing_df","d0c14fc9":"df.drop(['Alley','PoolQC','Fence','MiscFeature','FireplaceQu'], axis=1,inplace=True)","7bdb5c65":"obj_cols = df.select_dtypes(include=['object'])\nnum_cols =df.select_dtypes(exclude=['object'])","50844f82":"obj_cols","4ecf07c8":"num_cols","55a583b4":"obj_cols.isna().sum()","651b92e8":"obj_cols =obj_cols.fillna(obj_cols.mode().iloc[0])","23341a85":"num_cols.isnull().sum()","316ada1f":"num_cols =num_cols.fillna(num_cols.mode().iloc[0])","70c3f907":"num_cols","daf516f3":"obj_cols = pd.get_dummies(obj_cols, columns=obj_cols.columns) ","f1961348":"obj_cols.head()","4e7a1baa":"df_final = pd.concat([obj_cols, num_cols], axis=1,sort=False)\ndf_final.head()","e9fd510a":"import matplotlib.pyplot as plt\ncor=fitrain.corr()\nimport seaborn as sns\nf,ax = plt.subplots(figsize=(30, 30))\nsns.heatmap(cor, annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","c8b51354":"cor[\"SalePrice\"].sort_values(ascending=False)\n","1e9bd2ce":"x_1 = df_final.assign(Age = df_final['YrSold']-df_final['YearBuilt']) ","63a00f6f":"drop_list2 = ['YrSold','YearBuilt']\nx_1 = x_1.drop(drop_list2,axis = 1 )       \nx_1.head()","73006e5a":"drop_list3=['OverallCond','EnclosedPorch', 'KitchenAbvGr']\nx_1 = x_1.drop(drop_list3,axis = 1 )        \nx_1.head()","4d85f403":"x_1.SalePrice.plot(kind = 'hist',bins = 50,figsize = (30,15))\nplt.show()","618117f9":"msval=fitrain['MSZoning'].value_counts()\nmsval.plot(kind = 'line',figsize = (30,10))\nplt.show()","ef619689":"\ncmap = sns.cubehelix_palette(dark=.3, light=.9, as_cmap=True)\nplt.figure(figsize=(20,20))\nsns.scatterplot(data=fitrain, x=\"SalePrice\", y=\"Neighborhood\", palette=cmap)\nplt.show()","92b6ba95":"sns.relplot(x=\"OverallQual\", y=\"SalePrice\",\n            size_order=[\"T1\", \"T2\"], palette=cmap,\n            height=10, aspect=1.75, facet_kws=dict(sharex=False),\n            kind=\"line\", legend=\"full\", data=df_final)","2989d6a8":"sns.relplot(x=\"Age\", y=\"SalePrice\",\n            size_order=[\"T1\", \"T2\"],\n            height=10, aspect=1.75, facet_kws=dict(sharex=False),\n            kind=\"line\", legend=\"full\", data=x_1)","13fddfe4":"\ndf_train = x_1[x_1['train'] == 1]\ndf_train = df_train.drop(['train',],axis=1)\n\n\ndf_test = x_1[x_1['train'] == 0]\ndf_test = df_test.drop(['SalePrice'],axis=1)\ndf_test = df_test.drop(['train',],axis=1)","5df2172b":"y_train= df_train['SalePrice']\nx_train = df_train.drop(['SalePrice'],axis=1)","aa4175fc":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.metrics import r2_score,mean_squared_error,make_scorer\nfrom sklearn.ensemble import RandomForestRegressor\nest = make_pipeline(StandardScaler(),  RandomForestRegressor(max_samples=1460, n_estimators=5000, min_samples_leaf=1, random_state=14))\nest.fit(x_train, y_train)\npred=est.predict(df_test)","91654f8b":"test=fitest['Id']\ntest.shape","96ac9a7f":"pred.shape","8bc43a6a":"result = pd.DataFrame()\nresult['Id']= test\nresult['SalePrice'] = pred\nresult.to_csv('submission.csv',index=False)","6a9ac171":"# 2-2 Transforming the Categorical Columns","011a9fe5":"**> Prices by Neighborhood**","8a26fbb6":"**Using 2 column for creating a new column**","09710074":"# Model Setup","fda0e30e":"**Filling Null Values in Categorical Columns with Most Frequent Value**","2efb413f":"**Encoding with One Hot**","9bca027e":"As we can see some old houses are more expensive than new houses.","5d8559df":"# Random Forest Regressor","39e96107":"**> Relation of House's quality and House Price**","f5a13ff6":"# 1- Data Analysis","9db5ab78":"# Data Load","edce29f5":"# 2-1-Determination of Missing Values","99d8e087":"# 3- Feature Engineering","ca812daf":"# To CSV","fb111750":"**Distribution of SalePrice**","2d0ac09d":"I dropped top 5","de8479b7":"# EDA","3251948f":"**> Price and Age Relation**","cf415d59":"# 4- Data Visualization","3ab28a6d":"# 2- Cleaning of Data\n"}}