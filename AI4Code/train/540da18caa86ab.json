{"cell_type":{"4536ca13":"code","cbda15a5":"code","d914d1b5":"code","61554bb9":"code","0936cea1":"code","63634284":"code","67cc1122":"code","170d1a9a":"code","8e812955":"code","a8e45a22":"code","1a580e65":"code","0a8fb8d9":"code","f2afa34a":"code","360d38b6":"code","900fda40":"code","92d7b1d7":"code","d262af18":"code","f4bc8dde":"code","f9a6325d":"code","c762b7ca":"code","7dd401dc":"code","993e5110":"code","d3ec9b17":"code","a446a617":"markdown","848766e4":"markdown","2bff2881":"markdown","cb483608":"markdown","505bb4ca":"markdown","3e2c93ac":"markdown","65edddf0":"markdown"},"source":{"4536ca13":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns ","cbda15a5":"df_student = pd.read_csv('..\/input\/engineering-placements-prediction\/collegePlace.csv')","d914d1b5":"df_student.head()","61554bb9":"len(df_student)","0936cea1":"set(df_student['Stream'])","63634284":"df_student.isnull().values.any() # no nans in the data","67cc1122":"values = df_student['Gender'].value_counts()\ncategories = values.index\nplt.figure(figsize = (8,8))\nplt.pie(values, labels = categories, autopct='%1.1f%%')\nplt.title('There are more than 4 times more Males than Females applying for Engernieering course ')\nplt.show()","170d1a9a":"df_barplot = df_student['Stream'].value_counts().sort_values().rename_axis('Stream').reset_index(name = 'number of students')\nplt.figure(figsize = (8,8))\nsns.barplot(data = df_barplot, x = 'Stream', y = 'number of students')\nplt.title('CS and IT streams dominate the selection processes', fontsize = 16)\nplt.xticks(rotation = 45,ha = 'right')\nplt.xlabel(xlabel = 'Stream', fontsize = 14)\nplt.ylabel(ylabel = 'number of students', fontsize = 14)\nplt.show()","8e812955":"df_student['Hostel'].unique()","a8e45a22":"df_student['CGPA'].unique()","1a580e65":"df_barplot = df_student['CGPA'].value_counts().rename_axis('CGPA').reset_index(name= 'number of students').sort_values(by = 'CGPA').reset_index(drop = True)\nplt.figure(figsize = (8,8))\nplot = sns.barplot(data = df_barplot, x = 'CGPA', y = 'number of students')\nfor index, row in df_barplot.iterrows():\n\n    plot.text(row.name,row['number of students']+5, row['number of students'], color = 'black', ha = \"center\")\n    \nplt.title('Distribution of CGPA seems to be close to normal', fontsize = 16)\nplt.xlabel(xlabel = 'CGPA', fontsize = 14)\nplt.ylabel(ylabel = 'number of students', fontsize = 14)\nplt.show()","0a8fb8d9":"df_pieplot = df_student['PlacedOrNot'].value_counts().rename_axis('Placed or not').reset_index(name= 'number of students')\ndf_pieplot['Placed or not'].replace({1:'Placed', 0:'Not placed'}, inplace = True)\nplt.figure(figsize=(8,8))\nplt.pie( df_pieplot['number of students'], labels = df_pieplot['Placed or not'], autopct='%1.1f%%', textprops={'fontsize': 14})\nplt.title('The dataset a little bit unbalanced', fontsize = 16)\nplt.xticks(rotation = 45,ha = 'right')\nplt.show()","f2afa34a":"\nplt.figure(figsize = (12,8))\nsns.heatmap(df_student.corr(), cmap = 'Greens', annot = True, annot_kws = {'size':14})\nplt.xlabel('PREDICTED', fontsize = 16, labelpad = 10)\nplt.ylabel('ACTUAL', fontsize = 16, labelpad = 10)\nplt.title('TARGET VALUE IS CORRELATED WITH CGPA AND N OF INTERNSHIPS', fontsize = 16)\nplt.show()\n","360d38b6":"df_student = pd.concat([df_student, pd.get_dummies(df_student['Gender'] )], axis = 1)\ndf_student.drop(columns = ['Gender', 'Male'], inplace = True) ","900fda40":"df_student = pd.concat([df_student, pd.get_dummies(df_student['Stream'] )], axis = 1)\ndf_student.drop(columns = 'Stream', inplace = True)","92d7b1d7":"from sklearn import preprocessing\nfrom sklearn.model_selection import train_test_split\nimport xgboost as xgb\nfrom sklearn.linear_model import LogisticRegression","d262af18":"y = df_student['PlacedOrNot']\nX = df_student.drop('PlacedOrNot',axis = 1)\n\nscaler = preprocessing.StandardScaler().fit(X)\nX = scaler.transform(X)\n","f4bc8dde":"#split for validation\nX_train,X_test,y_train,y_test= train_test_split(X, y, test_size=0.2, random_state=21)\n","f9a6325d":"lg = LogisticRegression()\nlg.fit(X_train, y_train)\nlg.score(X_test, y_test)","c762b7ca":"xgb1 = xgb.XGBClassifier(\n learning_rate =0.3,\n n_estimators=190,\n max_depth=6,\n objective= 'binary:logistic',\n scale_pos_weight=0.47,\n seed=27,\n use_label_encoder=False)\nxgb1.fit(X_train, y_train.to_numpy(),eval_metric = 'error')\n\n","7dd401dc":"from sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix\n\npreds = xgb1.predict(X_test)\n\nprint(f'XGBoost has {round(accuracy_score(y_test, preds),3)*100}% of accuracy on the validation dataset')\n\n\n","993e5110":"cm = confusion_matrix(y_test, preds)\ncm = (cm.T \/ cm.sum(axis=1)).T\ndf_cm = pd.DataFrame(cm,index = ['Placed', 'Not placed'],columns=['Placed', 'Not placed'])","d3ec9b17":"plt.figure(figsize=(6,6))\nsns.heatmap(df_cm, cmap='Greens', annot=True, annot_kws={'size':14})\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=14)\nplt.xlabel('PREDICTED', fontsize=16, labelpad=10)\nplt.ylabel('ACTUAL', fontsize=16, labelpad=10)\nplt.title('MODEL IS CONFUSED MORE WITH NOT PLACED', fontsize = 16)\nplt.show()\n","a446a617":"## Prepare dataset for model  \n I will use One-Hot encoding. You can read about it here:  \n https:\/\/machinelearningmastery.com\/why-one-hot-encode-data-in-machine-learning\/","848766e4":"Load the data","2bff2881":"EDA and checking the quality of data","cb483608":"## Let's see how different features correlate with the target value correlate with target value","505bb4ca":"## Standardize data  \n  \nStandardization of a dataset is a common requirement for many machine learning estimators: they might behave badly if the individual features do not more or less look like standard normally distributed data (e.g. Gaussian with 0 mean and unit variance).  \nhttps:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.preprocessing.StandardScaler.html\n","3e2c93ac":"Start with a LogisticReg as a baseline","65edddf0":"## XGBoost Guide  \nhttps:\/\/www.analyticsvidhya.com\/blog\/2016\/03\/complete-guide-parameter-tuning-xgboost-with-codes-python\/"}}