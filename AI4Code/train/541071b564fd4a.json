{"cell_type":{"5de6c74b":"code","8047e681":"code","83ac5518":"code","3da8e96c":"code","dae5adef":"code","e63681f3":"code","9c274964":"code","58b6ad52":"code","24756e09":"code","99be11be":"code","34b5f754":"code","955ebd74":"code","d42002a8":"code","a25cf20c":"code","a0d24b89":"code","2c86a4c1":"code","d489747d":"code","245dea0e":"code","dec1f552":"code","9b438a72":"code","cab342a6":"code","84fbe721":"code","a8782dbb":"code","df7b5e05":"code","34a1053a":"code","64bd4176":"code","c6ab41a1":"code","56678d55":"code","b528b30d":"markdown","0f00d6a8":"markdown","ffe8fe29":"markdown","2085d079":"markdown","109b9254":"markdown","2aa0e98d":"markdown","d9080dc0":"markdown","4e8aed90":"markdown","b071cfda":"markdown","a85598b5":"markdown","8f5721aa":"markdown","3e405a5e":"markdown","5a221c91":"markdown","ad6d5654":"markdown","8e3ba90b":"markdown","46879996":"markdown","377373d3":"markdown","a6d9968e":"markdown"},"source":{"5de6c74b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline","8047e681":"raw_data = pd.read_csv('..\/input\/diabetes.csv')\nraw_data.head()","83ac5518":"raw_data.describe()","3da8e96c":"raw_data.info()","dae5adef":"fig, axes = plt.subplots(2, 4, figsize=(20,10))\n\nsns.boxplot(  y='Pregnancies', data=raw_data, orient='v', ax=axes[0, 0])\nsns.boxplot(  y='Glucose', data=raw_data,  orient='v', ax=axes[0, 1])\nsns.boxplot(  y='BloodPressure', data=raw_data, orient='v', ax=axes[0,2])\nsns.boxplot(  y='SkinThickness', data=raw_data, orient='v', ax=axes[0,3])\nsns.boxplot(  y='Insulin', data=raw_data, orient='v', ax=axes[1,0])\nsns.boxplot(  y='BMI', data=raw_data, orient='v', ax=axes[1,1])\nsns.boxplot(  y='DiabetesPedigreeFunction', data=raw_data, orient='v', ax=axes[1,2])\nsns.boxplot(  y='Age', data=raw_data, orient='v', ax=axes[1,3])","e63681f3":"raw_data.hist(figsize=(18, 9))","9c274964":"# Finding the number of Zeros per columns\nfor col in raw_data:\n    print('{:>25}:{:>5}'.format(col, raw_data[col].loc[raw_data[col] == 0].count()))","58b6ad52":"# dataset with non zero values of critical attributes\n# ['Glucose', 'BloodPressure', 'SkinThickness', 'Insulin','BMI', 'Age']\n\nnon_zero_data = raw_data.loc[(raw_data['Glucose'] != 0) & (raw_data['BloodPressure'] != 0) \n                             & (raw_data['SkinThickness'] != 0) & (raw_data['BMI'] != 0)]\ncorr = non_zero_data.corr()\n\n# Generate a mask for the upper triangle\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\n\nplt.figure(figsize=(12,6))\nsns.heatmap(corr, mask=mask, annot=True, cmap='plasma',vmin=-1,vmax=1)","24756e09":"raw_data.groupby('Outcome')['Outcome'].count()","99be11be":"plt.figure(figsize=(8,4))\nax = sns.countplot(raw_data['Outcome'])\nplt.title('Distribution of OutCome')\nplt.xlabel('Outcomes')\nplt.ylabel('Frequency')","34b5f754":"fig, axes = plt.subplots(1, 2, figsize=(18, 6))\nsns.boxplot(x='Outcome', y='Pregnancies', data=raw_data, ax=axes[0])\nsns.countplot(raw_data['Pregnancies'], hue = raw_data['Outcome'], ax=axes[1])","955ebd74":"raw_data['age_group'] = pd.cut(raw_data['Age'], range(0, 100, 10))\ng = sns.catplot(x=\"age_group\", y=\"Pregnancies\", hue=\"Outcome\",\n               data=raw_data, kind=\"box\"\n              )\ng.fig.set_figheight(4)\ng.fig.set_figwidth(20)","d42002a8":"raw_data['age_group'] = pd.cut(raw_data['Age'], range(0, 100, 10))\ng = sns.catplot(x=\"age_group\", y=\"BMI\", hue=\"Outcome\",\n               data=raw_data, kind=\"box\"\n              )\ng.fig.set_figheight(4)\ng.fig.set_figwidth(20)","a25cf20c":"raw_data['age_group'] = pd.cut(raw_data['Age'], range(0, 100, 10))\ng = sns.catplot(x=\"age_group\", y=\"SkinThickness\", hue=\"Outcome\",\n               data=raw_data, kind=\"box\"\n              )\ng.fig.set_figheight(4)\ng.fig.set_figwidth(20)","a0d24b89":"raw_data['age_group'] = pd.cut(raw_data['Age'], range(0, 100, 10))\ng = sns.catplot(x=\"age_group\", y=\"Glucose\", hue=\"Outcome\",\n               data=raw_data, kind=\"box\"\n              )\ng.fig.set_figheight(4)\ng.fig.set_figwidth(20)","2c86a4c1":"raw_data.groupby('Outcome')['Glucose'].plot(kind='density', legend=True)","d489747d":"raw_data.groupby('Outcome')['SkinThickness'].plot(kind='density', legend=True)","245dea0e":"raw_data.groupby('Outcome')['Pregnancies'].plot(kind='density', legend=True)","dec1f552":"raw_data.groupby('Outcome')['BloodPressure'].plot(kind='density', legend=True)","9b438a72":"raw_data.groupby('Outcome')['Insulin'].plot(kind='density', legend=True)","cab342a6":"raw_data.groupby('Outcome')['DiabetesPedigreeFunction'].plot(kind='density', legend=True)","84fbe721":"raw_data.groupby('Outcome')['Age'].plot(kind='density', legend=True)","a8782dbb":"#import the model and datsplit and crossvalidation utilities\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import accuracy_score\n\nfeature_names = ['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'Insulin', 'BMI', 'DiabetesPedigreeFunction', 'Age']\nX = raw_data[feature_names]\nY = raw_data.Outcome\n\nlr = LogisticRegression(solver='liblinear')\n","df7b5e05":"X_train, X_test, y_train, y_test = train_test_split(X, Y, stratify = raw_data.Outcome, random_state=0)","34a1053a":"lr.fit(X_train, y_train)\ny_pred = lr.predict(X_test)","64bd4176":"accuracy_score(y_test, y_pred)","c6ab41a1":"from sklearn.model_selection import KFold\nkfold = KFold(n_splits=5, random_state=10)\nrecall = cross_val_score(lr, X, Y, cv=kfold, scoring='recall').mean()\naccuracy = cross_val_score(lr, X, Y, cv=kfold, scoring='accuracy').mean()\nprint('With {:0.2f}% Accuracy and {:0.2f}% true positive rate, the model is able to predict that a given patent have diabetes or not'.format(accuracy, recall))","56678d55":"cross_val_score(lr, X, Y, cv=kfold, scoring='precision').mean()","b528b30d":"<h2> Description of Pima Diabetes dataset <\/h2>\n\n<p> Several constraints were placed on the selection of these instances from a larger database. In particular, all patients here are females at least 21 years old of Pima Indian heritage. ADAP is an adaptive learning routine that generates and executes digital analogy of perceptron-like devices. It is a unique algorithm; see the paper for details.<\/p>\n\n<h3> Attribute Information:<\/h3>\n<ul>\n    <li> Number of times pregnant <\/li>\n    <li> Plasma glucose concentration a 2 hours in an oral glucose tolerance test <\/li>\n    <li> Diastolic blood pressure (mm Hg) <\/li>\n    <li> Triceps skin fold thickness (mm) <\/li>\n    <li> 2-Hour serum insulin (mu U\/ml) <\/li>\n    <li> Body mass index (weight in kg\/(height in m)^2) <\/li> \n    <li> Diabetes pedigree function <\/li>\n    <li> Age (years) <\/li>\n    <li> Class variable (0 or 1) ** <\/li>\n<\/ul>\n\n<div class=\"alert alert-info\">\n  <h2><strong>Important Note: <\/strong><\/h2>\n  <p> There are zeros in places where they are biologically impossible, such as the blood pressure attribute. It seems very likely that zero values encode missing data. However, since the dataset donors made no such statement, every individual are allowed to make there best judgement and state assumptions. <\/p>\n<\/div>","0f00d6a8":"<h4>Train and predict with the model<\/h4> ","ffe8fe29":"One by One will try to explore which attributes are affecting the outcome","2085d079":"<h4>Spliting the data into test and train<\/h4>","109b9254":"<h4>Checking the Accuracy<\/h4>","2aa0e98d":"The BMI doesn't seem to have any pattern across age groups, there are a few outliers because of missing values and some outliers are in upper range but not something major","d9080dc0":"SkinThickness can be a major indicator of diabetes","4e8aed90":"<h2> Trying Logistic Model for predecting the Outcome based on all the features<\/h2>\n<div class=\"alert alert-info\">\n  <h2><strong>Note: <\/strong><\/h2>\n  <p> we can use the age_group in place of age after doing one-hot-encoding but for now I am jsut using the default data i have got. Re-populating the zeros in the critical calumn with some kind of mean value based on age group, might provide better results<\/p>\n<\/div>\n","b071cfda":"From the boxplot, it is clear that the mean of the number of pregnancy is higher in diabetic patients. a similar observation can be seen in the histogram comparison, the number of women with more than 6 pregnancy are diabetic. \n\nSince the number of pregnancy correlation with age is more than 0.6, so it can't be said with confidence that pregnancy is the cause. ","a85598b5":"<h4>Cross-Validation<\/h4>\n\nFor cross-validation I am using K-Fold Algorithm, K-Flod, as the name suggests, splits the data into k equal batches and use one batch for test and rest of the batches for training, it runs the same K times each time selecting a different batch for testing.\n\nOne important thing to take care is its a CPU and Memory intensive task.","8f5721aa":"Based on these density visualisations of all the features against the Outcome, it is quite clear that the result is highly influenced with `DiabetesPedigreeFunction`, `Insulin`, `SkinThickness` and `Glucose`.","3e405a5e":"<h1>Data Description <\/h1>\n<p>Load the data and take a first look at the values<\/p>","5a221c91":"<p> From the above visualisation it can be clearly seen that there are outliers present on both the upper and lower range. <\/p>\n<p>For example, its highly unlikely to have been pregnant 17 times but the mean is slightly above 3 which shows the normal behaviour of the sample<\/p>","ad6d5654":"The count of Zeros in the columns like `Glucose` and `BloodPressure` is low we can ignore these but for `SkinThickness` its quite high(227 out of 768). we might have to find a way to fill these. \n\n\n`SkinThickness` have a fairly high correlation with the `BMI`, one possible way of filling this value could be based on the `BMI` column\n\nother correlations are normal, \n`Glucose` and `Insulin` correlation is fine\n`Age` and `Pregnancies` is obvious correlations\n\nOverall if we see `SkinThickness`, `Insulin`, `Glucose`, `BMI` and `Age` have a fairly high linear correlation ","8e3ba90b":"Higher Glucose seems to have been influencing diabetes.","46879996":"<h1>Data Exploration<\/h1>","377373d3":"It seems diabetes is distributed normally across age group, the highest diabetic patients can be seen in the 30, 60 age group. ","a6d9968e":"<h2> Five point Summary for the variables<\/h2> "}}