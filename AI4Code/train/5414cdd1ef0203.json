{"cell_type":{"5f3f95e5":"code","35edf424":"code","485fbc54":"code","d25b1fca":"code","fe05b609":"code","d1352c01":"code","e0be4215":"code","2dbe763d":"code","0c628057":"code","4a239f1d":"code","447d5ae5":"code","b3b2952e":"code","4412cd10":"markdown","bf4ff40d":"markdown","7327aa18":"markdown"},"source":{"5f3f95e5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","35edf424":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom collections import Counter\nimport seaborn as sns\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import StandardScaler","485fbc54":"train=pd.read_csv(\"..\/input\/digit-recognizer\/train.csv\")\ntest=pd.read_csv(\"..\/input\/digit-recognizer\/test.csv\",index_col = None)","d25b1fca":"train.head()","fe05b609":"train.shape","d1352c01":"trainx = train.drop('label',axis = 1)","e0be4215":"sc=StandardScaler()\ntrainx = sc.fit_transform(trainx)\ntestx = sc.fit_transform(test)","2dbe763d":"pca = PCA(n_components=2)\nprincipalComponents = pca.fit_transform(trainx)\nprincipalDf = pd.DataFrame(data = principalComponents, columns = ['principalcomponent1',\n                                                                  'principalcomponent2'])\nlabel = pd.DataFrame(data = train['label'])\nprincipalDf = pd.concat([principalDf,label],axis = 1,ignore_index=True)\n\nprincipalDf.columns = [\"principalcomponent1\", \"principalcomponent2\", \"label\"] ","0c628057":"sns.lmplot( x='principalcomponent1', y='principalcomponent2', data=principalDf, fit_reg=False, \n           hue='label', legend=False, palette=\"Blues\")\nplt.figure(figsize=(13,10))","4a239f1d":"pca2 = PCA(.95)\n\npca2.fit(trainx)\n\ntrain_2 = pca.transform(trainx)\ntest_2 = pca.transform(testx)","447d5ae5":"logr = LogisticRegression(solver = 'lbfgs') \nlogr.fit(train_2, train['label'])\ntest_pred=logr.predict(test_2)","b3b2952e":"submission = pd.DataFrame({\n        \"ImageId\": np.arange(1,28001),\n        \"Label\": test_pred\n    })\nsubmission.to_csv('submission.csv', index=False)","4412cd10":"PCA ","bf4ff40d":"Logistic Regression","7327aa18":"Submission"}}