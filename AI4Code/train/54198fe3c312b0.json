{"cell_type":{"9d2c3ad6":"code","d2a9d3f8":"code","10d7caa5":"code","b16d2c29":"code","80560747":"code","0bb204cd":"code","5ec91001":"code","cb598a98":"code","bf31b94d":"code","5ac2c8a1":"code","3005697f":"code","2c5dc84f":"code","b48a665b":"code","b21ece49":"code","21538eef":"code","1c4280fa":"code","05aa01b2":"code","54fe6f3b":"code","4ad23b9a":"code","b9ddddd4":"code","aa164263":"code","c1eebcd3":"code","c7b7636e":"code","8f6e7302":"code","50d4386c":"code","85ef6a6b":"code","38411806":"code","081c3dce":"code","65879c51":"code","b3440995":"code","f26ce1fc":"code","64a87192":"code","f41a3947":"code","7b28fd36":"markdown","f20be072":"markdown","73e45503":"markdown","062bc89f":"markdown","49620a5e":"markdown","68772da0":"markdown","f453d853":"markdown","8cfb6865":"markdown","0e0342f9":"markdown","041285de":"markdown","93b7e9f1":"markdown","0861d7fd":"markdown","c6c7b3a9":"markdown"},"source":{"9d2c3ad6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn import tree\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.datasets import make_classification\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import cross_val_predict\nfrom sklearn import metrics\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.model_selection import cross_val_score\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","d2a9d3f8":"df=pd.read_csv('..\/input\/FIFA 2018 Statistics.csv')\ndf.head()","10d7caa5":"df.info()","b16d2c29":"#dummy=pd.get_dummies(df.loc[:,'Man of the Match'])\n#df=df.merge(dummy,left_index=True,right_index=True)\ndf.head()","80560747":"df.corr()","0bb204cd":"df.describe()","5ec91001":"df.isnull().sum()","cb598a98":"for col in df.columns:\n    col.rstrip()","bf31b94d":"tree = DecisionTreeClassifier()\ndf.drop(['Own goal Time', 'Own goals', '1st Goal'], axis = 1, inplace= True)\ndf.drop(['Corners', 'Fouls Committed', 'On-Target'], axis = 1, inplace=True)\ndf.drop('Date', axis = 1, inplace=True)\none_hot_data = pd.get_dummies(df,drop_first=True)\n#one_hot_data.head()\none_hot_data.info()","5ac2c8a1":"#one_hot_data.dropna(inplace=True)\n#tree.fit(one_hot_data, one_hot_data.loc[:,'PSO_Yes'])","3005697f":"one_hot_data.info()","2c5dc84f":"def cal_accuracy(y_test, y_pred): \n      \n    print(\"Confusion Matrix: \", \n        confusion_matrix(y_test, y_pred)) \n      \n    print (\"Accuracy : \", \n    accuracy_score(y_test,y_pred)*100) \n      \n    print(\"Report : \", \n    classification_report(y_test, y_pred))","b48a665b":"#idx = pd.IndexSlice\n#one_hot_data.fillna(one_hot_data['Own goal Time'].mean(),inplace=True)\n#one_hot_data.fillna(value=0,inplace=True)","b21ece49":"one_hot_data.isnull().values.any()","21538eef":"one_hot_data.head()","1c4280fa":"df = one_hot_data.copy()\ndf.describe()","05aa01b2":"df = df.apply(LabelEncoder().fit_transform)\ndf.head()","54fe6f3b":"label = df['Man of the Match_Yes']\n\nfeatures = df.drop(['Man of the Match_Yes'], axis = 1)","4ad23b9a":"X_train, X_test, y_train, y_test = train_test_split(features, label, test_size = 0.20, random_state =0) ","b9ddddd4":"clf_gini = DecisionTreeClassifier(criterion = \"gini\", random_state = 100,max_depth=3, min_samples_leaf=5) \nclf_gini.fit(X_train, y_train)\n","aa164263":"y_pred = clf_gini.predict(X_test) \nprint(\"Predicted values:\") \nprint(y_pred) \n    \ncal_accuracy(y_test, y_pred)","c1eebcd3":"y_pred = clf_gini.predict(X_train) \nprint(\"Predicted values:\") \nprint(y_pred) \n    \ncal_accuracy(y_train, y_pred)","c7b7636e":"scores = cross_val_score(clf_gini, features, label, cv=5)\nscores  ","8f6e7302":"one_hot_data.head()","50d4386c":"model = GaussianNB()\nmodel.fit(X_train, y_train)","85ef6a6b":"y_pred = model.predict(X_test)\ncal_accuracy(y_test, y_pred)","38411806":"y_pred = model.predict(X_train)\ncal_accuracy(y_train, y_pred)","081c3dce":"scores = cross_val_score(model, features, label, cv=5)\nscores  ","65879c51":"clf = RandomForestClassifier(n_estimators=100, max_depth=1,random_state=0)\nclf.fit(X_train, y_train)","b3440995":"y_pred=clf.predict(X_test)\ncal_accuracy(y_test, y_pred)","f26ce1fc":"y_pred=clf.predict(X_train)\ncal_accuracy(y_train, y_pred)","64a87192":"scores = cross_val_score(clf, features, label, cv=5)\nscores  ","f41a3947":"models = pd.DataFrame({\n        'Model'          : ['Naive Bayes',  'Decision Tree', 'Random Forest'],\n        'Training_Score' : [model.score(X_train,y_train),  clf_gini.score(X_train,y_train), clf.score(X_train,y_train)],\n        'Testing_Score'  : [model.score(X_test,y_test), clf_gini.score(X_test,y_test), clf.score(X_test,y_test)]\n    })\nmodels.sort_values(by='Testing_Score', ascending=False)","7b28fd36":"# Function to calculate Accuracy as well as confusion matrix for the results","f20be072":"# Decision Tree Classifier","73e45503":"# Gaussion Naive Bayes","062bc89f":"# Splitting the Data into training and testing by 20%","49620a5e":"# Conclusion","68772da0":"### since, the columns \"own goals, own goal time, and 1st goal have 90% missing values. so rather we will drop these columns\"","f453d853":"# Visaulization of Data","8cfb6865":"# cross validation of Naive Bayes","0e0342f9":"# Cross Validation of Decesion Tree","041285de":"# Selecting Label and Features","93b7e9f1":"# Random Forest","0861d7fd":"# Cross Validation of Random Forest","c6c7b3a9":"## One hot encoding is done here after droping and cleaning the data as necessary"}}