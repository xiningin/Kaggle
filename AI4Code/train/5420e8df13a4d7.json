{"cell_type":{"099b7566":"code","0f2521ce":"code","8437e6df":"code","5fc77014":"code","718dbcdc":"code","f4ab5b4f":"code","0dc457b5":"code","711e991b":"code","141738e2":"code","cac3c825":"code","4c528f96":"code","3d20d3fd":"code","e9aadb0d":"markdown","0418e739":"markdown","9cd3c3d5":"markdown","fcf19ccd":"markdown","79edf29f":"markdown"},"source":{"099b7566":"import numpy as np \nimport pandas as pd \nimport seaborn as sns \nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import KFold,StratifiedKFold,train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.metrics import roc_auc_score\nfrom lightgbm import LGBMClassifier\nimport os\nimport eli5\nfrom eli5.sklearn import PermutationImportance\nimport warnings\nwarnings.filterwarnings('ignore')\n","0f2521ce":"path='..\/input\/av-janatahack-crosssell-prediction\/'\ntrain_df=pd.read_csv(os.path.join(path,'train.csv'))\ntest_df=pd.read_csv(os.path.join(path,'test.csv'))\nsubmission_df=pd.read_csv(os.path.join(path,'sample.csv'))","8437e6df":"#Check for duplicates and remove\n\nprint(train_df.shape)\n\ntrain_df=train_df.drop_duplicates(subset=[ele for ele in list(train_df.columns) if ele not in ['id']])\n\nprint(train_df.shape)","5fc77014":"sns.distplot(train_df['Annual_Premium'])","718dbcdc":"#Data is left Skewed as we can see from above distplot\ntrain_df['Annual_Premium']=np.log(train_df['Annual_Premium'])\nsns.distplot(train_df['Annual_Premium'])","f4ab5b4f":"#Checking correlation between features\nplt.figure(figsize=(10,10))\nsns.heatmap(train_df.corr(),annot=True)","0dc457b5":"sns.barplot(train_df['Response'],train_df['Response'].value_counts())","711e991b":"combine_set=pd.concat([train_df,test_df])\nle=LabelEncoder()\ncombine_set['Gender']=le.fit_transform(combine_set['Gender'])\ncombine_set['Vehicle_Damage']=le.fit_transform(combine_set['Vehicle_Damage'])\n\nfe=combine_set.groupby('Vehicle_Age').size()\/len(combine_set)\ncombine_set['Vehicle_Age']=combine_set['Vehicle_Age'].apply(lambda x: fe[x])#can even try Label encoding or OHE\n\ncombine_set.head(5)","141738e2":"#Data set Preparation\ntrain_df=combine_set[combine_set['Response'].isnull()==False]\ntest_df=combine_set[combine_set['Response'].isnull()==True]\nX=train_df.drop(['id','Response'],axis=1)\ny=train_df['Response'] \nX_main_test=test_df.drop(['id','Response'],axis=1)\n\nX_train,X_val,y_train,y_val=train_test_split(X,y,test_size=0.2,random_state=294)","cac3c825":"lg=LGBMClassifier(boosting_type='gbdt',n_estimators=500,depth=10,learning_rate=0.04,objective='binary',metric='auc',is_unbalance=True,\n                 colsample_bytree=0.5,reg_lambda=2,reg_alpha=2,random_state=294,n_jobs=-1)\n\nlg.fit(X_train,y_train)\nprint(roc_auc_score(y_val,lg.predict_proba(X_val)[:,1]))","4c528f96":"#Check for Permutation Importance of Features\nperm = PermutationImportance(lg,random_state=294).fit(X_val, y_val)\neli5.show_weights(perm,feature_names=X_val.columns.tolist())\n","3d20d3fd":"submission_df['Response']=np.array(lg.predict_proba(X_main_test)[:,1])\nsubmission_df.to_csv('main_test.csv',index=False)\nsubmission_df.head(5)","e9aadb0d":"# **Basic EDA**","0418e739":"# **Submission File**","9cd3c3d5":"# **If you find the notebook useful pls do UP Vote :)**","fcf19ccd":"# **Preprocessing**","79edf29f":"# **LGBM**"}}