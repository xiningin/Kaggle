{"cell_type":{"64f2ac59":"code","55731c80":"code","3446de66":"code","4b6374b0":"code","28bc1ea5":"code","e1e50bd8":"code","7b8e661e":"code","566cbf39":"code","0886eb71":"code","29f9ad32":"code","d343f4b3":"code","05d41ae1":"code","2484f0a9":"code","b05490db":"code","6c03f475":"code","3e9e3b7d":"code","cd80d1d1":"code","e07fc58a":"code","3591a8d0":"code","bab11bec":"code","d09cb621":"code","1860e71c":"code","bf987da4":"code","e25766b2":"code","ab8d2de8":"code","b4032732":"code","074822cf":"code","a99e5d4c":"markdown","eeb121b9":"markdown","247f16e7":"markdown","09c78be3":"markdown","51018232":"markdown","f3af7444":"markdown","5b890acc":"markdown","26e71dbd":"markdown","28f1b11a":"markdown"},"source":{"64f2ac59":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","55731c80":"fooddf=pd.read_csv('\/kaggle\/input\/indian-food-101\/indian_food.csv')\n\nfooddf","3446de66":"fooddf.info()","4b6374b0":"fooddf['prep_time']=fooddf['prep_time'].replace(-1,np.nan)\nfooddf['cook_time']=fooddf['cook_time'].replace(-1,np.nan)\nfooddf['region']=fooddf['region'].replace('-1',np.nan)\nfooddf['state']=fooddf['state'].replace('-1',np.nan)\nfooddf['flavor_profile']=fooddf['flavor_profile'].replace('-1',np.nan)\nfooddf.dropna()","28bc1ea5":"sns.countplot(x='diet',data=fooddf,hue='flavor_profile')","e1e50bd8":"sns.countplot(x='course',data=fooddf)","7b8e661e":"sns.countplot(x='course',data=fooddf,hue=\"diet\")","566cbf39":"sns.countplot(x='course',data=fooddf,hue='flavor_profile')","0886eb71":"sns.countplot(x='region',data=fooddf,hue='diet')","29f9ad32":"sns.countplot(x='region',data=fooddf,hue='course')","d343f4b3":"sns.countplot(x='region',data=fooddf,hue='flavor_profile')","05d41ae1":"from subprocess import check_output\nfrom wordcloud import WordCloud, STOPWORDS\n\n#mpl.rcParams['figure.figsize']=(8.0,6.0)    #(6.0,4.0)\nplt.rcParams['font.size']=12                #10 \nplt.rcParams['savefig.dpi']=100             #72 \nplt.rcParams['figure.subplot.bottom']=.1 \n\n\nstopwords = set(STOPWORDS)","2484f0a9":"flavour=fooddf.groupby(['flavor_profile','state']).sum()\nflavour.reset_index(inplace=True)","b05490db":"word_string=\" \".join(flavour[flavour['flavor_profile']=='bitter']['state'])\nwordcloud = WordCloud(stopwords=STOPWORDS,\n                          background_color='white', \n                      max_words=300\n                         ).generate(word_string)\nplt.clf()\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","6c03f475":"word_string=\" \".join(flavour[flavour['flavor_profile']=='sweet']['state'].head(10))\nwordcloud = WordCloud(stopwords=STOPWORDS,\n                          background_color='white', \n                      max_words=300\n                         ).generate(word_string)\nplt.clf()\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","3e9e3b7d":"word_string=\" \".join(flavour[flavour['flavor_profile']=='sour']['state'].head(10))\nwordcloud = WordCloud(stopwords=STOPWORDS,\n                          background_color='white', \n                      max_words=300\n                         ).generate(word_string)\nplt.clf()\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","cd80d1d1":"word_string=\" \".join(flavour[flavour['flavor_profile']=='spicy']['state'].head(10))\nwordcloud = WordCloud(stopwords=STOPWORDS,\n                          background_color='white', \n                      max_words=300\n                         ).generate(word_string)\nplt.clf()\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","e07fc58a":"categorical_cols = ['flavor_profile', 'course'] \ndf = pd.get_dummies(fooddf, columns = categorical_cols)","3591a8d0":"d=df.groupby('state').sum()\nd.reset_index(inplace=True)","bab11bec":"sns.barplot(x=\"flavor_profile_sweet\", y=\"state\",data=d)","d09cb621":"sns.barplot(x=\"flavor_profile_bitter\", y=\"state\",data=d)","1860e71c":"sns.barplot(x=\"flavor_profile_spicy\", y=\"state\",data=d)","bf987da4":"sns.barplot(x=\"flavor_profile_sour\", y=\"state\",data=d)","e25766b2":"sns.barplot(x=\"course_dessert\", y=\"state\",data=d)","ab8d2de8":"sns.barplot(x=\"course_snack\", y=\"state\",data=d)","b4032732":"sns.barplot(x=\"course_starter\", y=\"state\",data=d)","074822cf":"sns.barplot(x=\"course_main course\", y=\"state\",data=d)","a99e5d4c":"One-Hot Encoding by Flavor_profile and Course to visualize categorgy of Flavour profile\/course by states ","eeb121b9":"EDA- Indain FOOD\n\n     a) Vegeterian \/ Non-Vegetarian Diet over Flavours\n     b) Categorize Course \n     c) Course preference over Veg\/Non-Veg \n     d) Course preference over Flavours\n     e) Veg\/Non-Veg by Region\n     f) Course over Region\n     g) Flavours over Region\n     h) Top 10 State Interest towards flavours-Word cloud\n     i) State Interest towards Flavours\n     j) State Ineterst towards Course\n     ","247f16e7":"Distribution of Flavour over Region","09c78be3":"Distribution of course over Region","51018232":" Distribution by course over Flavours","f3af7444":"Distribution by course over Veg\/Non-Veg ","5b890acc":" Distribution by course ","26e71dbd":"a) **Distribution of Vegeterian \/ Non-Vegetarian Diet over Flavours :** Vegetarian foods takes lead over Non-Vegetarian and Preference of Flvaour Profile tends to be Spicy followed by Sweet,while Non-Vegetarin prefers Spicy over Bitter \/ Sour.   \n                                           \n    ","28f1b11a":"Distribution of Veg\/Non-Veg by Region"}}