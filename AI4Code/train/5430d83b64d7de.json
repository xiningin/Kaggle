{"cell_type":{"b5485633":"code","9ad3a96d":"code","0535a77a":"code","b9e34245":"code","00430721":"code","3b085ff2":"code","b3980907":"code","d0940acd":"code","48c9b26c":"code","342e7cf7":"code","4da7d689":"code","6103d4a2":"code","5a15d140":"code","c7ce0f37":"code","1462dcc9":"code","2ed7a8ae":"code","dfccb1e9":"code","0581d77a":"markdown","93146f9e":"markdown","4b666f4c":"markdown","5f9f4c69":"markdown","379358a5":"markdown","ffec14f8":"markdown","f7e07d7d":"markdown"},"source":{"b5485633":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9ad3a96d":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import f1_score, recall_score, precision_score, plot_confusion_matrix, accuracy_score, classification_report\nfrom sklearn.metrics import precision_recall_curve, plot_precision_recall_curve","0535a77a":"df_train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf_train","b9e34245":"df_train.describe()","00430721":"df_train.info()","3b085ff2":"corrMatrix = df_train.corr()\nsns.heatmap(corrMatrix, annot=True)\nplt.show()","b3980907":"df_test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ndf_test","d0940acd":"df_train.value_counts(df_train['Sex']).plot.bar()\nplt.title('Count of passenger for each gender ')\nplt.xlabel('Gender')\nplt.ylabel('counts')\nplt.legend('Jumlah')\nplt.show()","48c9b26c":"features = ['Pclass','SibSp','Parch']\nX = df_train[features]\nX_test = df_test[features]\ny = df_train[\"Survived\"]","342e7cf7":"model = KNeighborsClassifier(n_neighbors=4)\nmodel.fit(X, y)","4da7d689":"predict = model.predict(X_test)","6103d4a2":"output = pd.DataFrame({'PassengerId': df_test.PassengerId, 'Survived': predict})\noutput.to_csv('submission.csv', index=False)\nprint(\"Submission was successfully saved\")","5a15d140":"#training and test split # \nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1, stratify=y)","c7ce0f37":"clf = KNeighborsClassifier(n_neighbors=4)\nclf.fit(X_train, y_train)","1462dcc9":"predictions = clf.predict(X_test)","2ed7a8ae":"#calculating precision and reall\nprecision = precision_score(y_test, predictions)\nrecall = recall_score(y_test, predictions)\n \nprint('Precision: ',precision)\nprint('Recall: ',recall)\n \n#Plotting Precision-Recall Curve\ndisp = plot_precision_recall_curve(clf, X_test, y_test)","dfccb1e9":"plot_confusion_matrix(clf, X_test, y_test)  \nplt.show()","0581d77a":"## Correlation Heatmap","93146f9e":"## Model Accuracy","4b666f4c":"# **Import Library**","5f9f4c69":"# Data Test","379358a5":"# Data Train","ffec14f8":"# Predictions","f7e07d7d":"### Visualize data for each Gender"}}