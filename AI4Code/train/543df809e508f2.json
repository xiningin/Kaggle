{"cell_type":{"1a3418f0":"code","24c3bc61":"code","90a02ad6":"code","b302b3fd":"code","197f4025":"code","9e456242":"code","18a26731":"code","bcf44f84":"code","0adbe12a":"code","668ff03a":"code","5c05f5b4":"code","12066d78":"code","3b0e4ced":"code","408924de":"code","3969b731":"code","8e230723":"code","5a844b14":"code","5ad90905":"code","d345a49e":"code","ad8571f1":"code","0db3bad0":"code","60f8f7e2":"code","d73806af":"code","fcd0eb94":"code","a44a881e":"code","1fc5cdd7":"code","421143e2":"code","f5054343":"code","ec8cbea7":"code","3c914832":"code","c269162a":"code","e60d8455":"code","c2a38f3a":"code","ff8eb9cc":"code","8f2473e4":"code","5e9e2bf6":"code","c5924795":"code","6e4cc7f1":"markdown","368bf7b3":"markdown","d9caf1c5":"markdown","1433ddab":"markdown","b795d303":"markdown","9f6af3a0":"markdown"},"source":{"1a3418f0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","24c3bc61":"import tensorflow\nimport cv2 \nfrom keras.preprocessing.image import ImageDataGenerator\nimport matplotlib.pyplot as plt\nimport pandas as pd","90a02ad6":"plt.imshow(cv2.imread(\"\/kaggle\/input\/covid19-xray-dataset-train-test-sets\/xray_dataset_covid19\/train\/PNEUMONIA\/nejmoa2001191_f1-PA.jpeg\"))","b302b3fd":"plt.imshow(cv2.imread(\"..\/input\/covid19-xray-dataset-train-test-sets\/xray_dataset_covid19\/train\/NORMAL\/IM-0015-0001.jpeg\"))","197f4025":"plt.imshow(cv2.imread(\"..\/input\/covid19-xray-dataset-train-test-sets\/xray_dataset_covid19\/test\/NORMAL\/NORMAL2-IM-0123-0001.jpeg\"))","9e456242":"plt.imshow(cv2.imread(\"..\/input\/covid19-xray-dataset-train-test-sets\/xray_dataset_covid19\/test\/PNEUMONIA\/SARS-10.1148rg.242035193-g04mr34g09c-Fig9c-day27.jpeg\"))","18a26731":"train_datagen = ImageDataGenerator(rescale = 1.\/255,\n                                   shear_range = 0.2,\n                                   zoom_range = 0.2,\n                                   horizontal_flip = True)\ntraining_set = train_datagen.flow_from_directory('\/kaggle\/input\/covid19-xray-dataset-train-test-sets\/xray_dataset_covid19\/train',\n                                                 target_size = (64, 64),\n                                                 batch_size = 32,\n                                                 class_mode = 'binary')","bcf44f84":"test_datagen = ImageDataGenerator(rescale = 1.\/255)\ntest_set = test_datagen.flow_from_directory(\n    \"\/kaggle\/input\/covid19-xray-dataset-train-test-sets\/xray_dataset_covid19\/test\", # same directory as training data\n    target_size=(64, 64),\n    batch_size=32,\n    class_mode='binary')","0adbe12a":"image_gen = ImageDataGenerator(rotation_range=20, # rotate the image 20 degrees\n                               width_shift_range=0.10, # Shift the pic width by a max of 5%\n                               height_shift_range=0.10, # Shift the pic height by a max of 5%\n                               rescale=1\/255, # Rescale the image by normalzing it.\n                               shear_range=0.1, # Shear means cutting away part of the image (max 10%)\n                               zoom_range=0.1, # Zoom in by 10% max\n                               horizontal_flip=True, # Allo horizontal flipping\n                               fill_mode='nearest' # Fill in missing pixels with the nearest filled value\n                              )","668ff03a":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Activation, Dropout, Flatten, Dense, Conv2D, MaxPooling2D","5c05f5b4":"model = Sequential()\nimage_shape = (1000,1000,3)\n\nmodel.add(Conv2D(filters=32, kernel_size=(3,3),input_shape=image_shape, activation='relu',))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\n\nmodel.add(Conv2D(filters=64, kernel_size=(3,3),input_shape=image_shape, activation='relu',))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\n\nmodel.add(Conv2D(filters=64, kernel_size=(3,3),input_shape=image_shape, activation='relu',))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\n\n\nmodel.add(Flatten())\n\n\nmodel.add(Dense(128))\nmodel.add(Activation('relu'))\n\n# Dropouts help reduce overfitting by randomly turning neurons off during training.\n# Here we say randomly turn off 50% of neurons.\nmodel.add(Dropout(0.5))\n\n# Last layer, remember its binary so we use sigmoid\nmodel.add(Dense(1))\nmodel.add(Activation('sigmoid'))\n\nmodel.compile(loss='binary_crossentropy',\n              optimizer='adam',\n              metrics=['accuracy'])","12066d78":"model.summary()","3b0e4ced":"from tensorflow.keras.callbacks import EarlyStopping\nearly_stop = EarlyStopping(monitor='val_loss',patience=2)\nbatch_size = 16","408924de":"train_path='..\/input\/covid19-xray-dataset-train-test-sets\/xray_dataset_covid19\/train'\ntrain_image_gen = image_gen.flow_from_directory(train_path,\n                                               target_size=image_shape[:2],\n                                                color_mode='rgb',\n                                               batch_size=batch_size,\n                                               class_mode='binary')","3969b731":"test_path='..\/input\/covid19-xray-dataset-train-test-sets\/xray_dataset_covid19\/test'\ntest_image_gen = image_gen.flow_from_directory(test_path,\n                                               target_size=image_shape[:2],\n                                               color_mode='rgb',\n                                               batch_size=batch_size,\n                                               class_mode='binary',shuffle=False)","8e230723":"results = model.fit(train_image_gen,epochs=10,\n                              validation_data=test_image_gen,callbacks=[early_stop])","5a844b14":"losses = pd.DataFrame(model.history.history)","5ad90905":"losses.head()","d345a49e":"losses[['loss','val_loss']].plot()","ad8571f1":"losses[['accuracy','val_accuracy']].plot()","0db3bad0":"losses.plot()","60f8f7e2":"model.evaluate(test_image_gen)","d73806af":"pred_probabilities = model.predict_generator(test_image_gen)","fcd0eb94":"pred_probabilities","a44a881e":"test_image_gen.classes","1fc5cdd7":"predictions = pred_probabilities > 0.5","421143e2":"predictions","f5054343":"from sklearn.metrics import classification_report,confusion_matrix\nprint(classification_report(test_image_gen.classes,predictions))","ec8cbea7":"confusion_matrix(test_image_gen.classes,predictions)","3c914832":"predict_path='..\/input\/covid19-xray-dataset-train-test-sets\/xray_dataset_covid19\/test\/PNEUMONIA\/SARS-10.1148rg.242035193-g04mr34g0-Fig8a-day0.jpeg'","c269162a":"from tensorflow.keras.preprocessing import image","e60d8455":"my_image = image.load_img(predict_path,target_size=image_shape)","c2a38f3a":"my_image","ff8eb9cc":"my_image = np.expand_dims(my_image, axis=0)","8f2473e4":"my_image.shape","5e9e2bf6":"model.predict(my_image)","c5924795":"train_image_gen.class_indices","6e4cc7f1":"# Preview Images","368bf7b3":"# Covide Prediction","d9caf1c5":"this is person has covide ","1433ddab":"# Modeling","b795d303":"# Prediction","9f6af3a0":"# TRAINING DATASET "}}