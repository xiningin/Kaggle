{"cell_type":{"633af2a7":"code","12d6c3cd":"code","5ea8fc8c":"code","2ce0ff31":"code","5282ab0a":"code","40de002f":"code","77d755ec":"code","2089b439":"code","8da88c6a":"code","ec6aca71":"code","75eabecb":"code","a28cb2b3":"code","8457b45e":"code","fc313acd":"code","bc02598c":"code","9a54dcb1":"markdown","65e12dc9":"markdown","b45bd589":"markdown","423835b4":"markdown","36c28736":"markdown","15a38722":"markdown","fa12ca5c":"markdown"},"source":{"633af2a7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","12d6c3cd":"data = pd.read_csv('..\/input\/svm-classification\/UniversalBank.csv')\ndata.head()","5ea8fc8c":"# Drop columns which are not necessary\ndata.drop([\"ID\",\"ZIP Code\"],axis=1,inplace=True)\ndata.head()","2ce0ff31":"data.shape","5282ab0a":"data.info()","40de002f":"data.describe() # Summary Stats of the Data Set","77d755ec":"data[data['Experience'] < 0] = 0\ndata.describe()","2089b439":"# Plotting the Heatmap of the Dataset\nplt.rcParams['figure.figsize'] = (15, 15)\nplt.style.use('ggplot')\nsns.heatmap(data.corr() ,annot = True)\nplt.title('Heatmap', fontsize = 30)","8da88c6a":"sns.distplot(data['Age'])","ec6aca71":"sns.distplot(data['Experience'])","75eabecb":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import confusion_matrix,mean_squared_error,accuracy_score\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split\n\n# Split the data into X and y\nX = data.iloc[:,:-1]\ny = data[\"CreditCard\"]\n\n# Split the data into trainx, testx, trainy, testy \ntrainx, testx, trainy, testy = train_test_split(X, y, test_size=0.20)\n\n## Print the shape of X_train, X_test, y_train, y_test\nprint(trainx.shape)\nprint(testx.shape)\nprint(trainy.shape)\nprint(testy.shape)","a28cb2b3":"# Logistic Regression\nX = trainx\ny = trainy\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score \nmodel = LogisticRegression()\nmodel.fit(X , y)\npredicted_classes = model.predict(X)\naccuracy = accuracy_score(y,predicted_classes)\nparameters = model.coef_","8457b45e":"print(accuracy)\nprint(parameters)\nprint(model)","fc313acd":"model.fit(testx , testy)\npredicted_classes_test = model.predict(testx)\naccuracy = accuracy_score(testy,predicted_classes_test)\nprint(accuracy)","bc02598c":"from sklearn.naive_bayes import GaussianNB\n\nNB = GaussianNB()\n\nNB.fit(X , y)\n\nNB_train_pred = NB.predict(X)\nprint(accuracy_score(y,NB_train_pred))\n\nNB_test_pred = NB.predict(testx)\nprint(accuracy_score(testy,NB_test_pred))","9a54dcb1":"**Exploratory Data Analysis (EDA)**","65e12dc9":"The Mean, Standard Deviation and other statistics of each feature are displayed.\nIt can be observed that the minimum value of the Experience feature set is -3 which may be incorrect as Experience can't be expressed as a negative value. Hence, all negative experience values need to be changed to 0 (which means no experience).","b45bd589":"***MODELLING***","423835b4":"There is no missing value in the data set.","36c28736":"There are 5000 rows and 12 columns in the data set now. 14 columns were reduced to 12 as columns \"ID\" and \"ZIP Code\" were removed as they were unnecessary for Credit Card approval.","15a38722":"From the above heatmap, it can be seen that 'Age' and 'Experience' have very high correlation between them. The correlation between Income and CCAvg is also quite high.\nFor CreditCard, features 'Age', 'Experience','Family', 'CD Amount' are useful as they are more correlated compared to other features.","fa12ca5c":"**DATA VISUALIZATION**"}}