{"cell_type":{"7eada53e":"code","dcf96d03":"code","9553cc25":"code","55f547b3":"code","3f10124d":"code","56aafd93":"code","e2b18f19":"markdown","c3be056e":"markdown","e996369e":"markdown","84995613":"markdown"},"source":{"7eada53e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dcf96d03":"dataset = pd.read_csv(\"..\/input\/star-dataset\/6 class csv.csv\")","9553cc25":"dataset","55f547b3":"O = dataset[dataset[\"Spectral Class\"] == 'O']\nB = dataset[dataset[\"Spectral Class\"] == 'B']\nA = dataset[dataset[\"Spectral Class\"] == 'A']\nF = dataset[dataset[\"Spectral Class\"] == 'F']\nG = dataset[dataset[\"Spectral Class\"] == 'G']\nK = dataset[dataset[\"Spectral Class\"] == 'K']\nM = dataset[dataset[\"Spectral Class\"] == 'M']","3f10124d":"import matplotlib.pyplot as plt\nimport numpy as np\n\nplt.style.use('ggplot')","56aafd93":"plt.grid()\nplt.scatter(np.log(O[\"Temperature (K)\"]), np.log(O[\"Luminosity(L\/Lo)\"]),10, label = 'O')\nplt.scatter(np.log(B[\"Temperature (K)\"]), np.log(B[\"Luminosity(L\/Lo)\"]),8, label = 'B')\nplt.scatter(np.log(A[\"Temperature (K)\"]), np.log(A[\"Luminosity(L\/Lo)\"]),6, label = 'A')\nplt.scatter(np.log(F[\"Temperature (K)\"]), np.log(F[\"Luminosity(L\/Lo)\"]),4, label = 'F')\nplt.scatter(np.log(G[\"Temperature (K)\"]), np.log(G[\"Luminosity(L\/Lo)\"]),3, label = 'G')\nplt.scatter(np.log(K[\"Temperature (K)\"]), np.log(K[\"Luminosity(L\/Lo)\"]),2, label = 'K')\nplt.scatter(np.log(M[\"Temperature (K)\"]), np.log(M[\"Luminosity(L\/Lo)\"]),1, label = 'M')\nplt.gca().invert_xaxis()\nplt.title(\"Hertzsprung-Russell Diagram\")\nplt.ylabel(\"log Luminosity\")\nplt.xlabel(\"log T\")\nplt.legend()","e2b18f19":"You can see that the diagonal dots are the main sequence stars just like our sun, the clumpy bottom-right is red dwarf, the horizontal branch at the bottom is white dwarf, and the upper horizontal is giant branch. ","c3be056e":"Fortunately, spectral class is related to temperature, ","e996369e":"![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/6\/6b\/HRDiagram.png)","84995613":"# HR Diagram\n\nHR diagram is a big breakthrough in stellar astrophysics. The diagram maps the stars evolution and classification. \n\nActually, we could apply the temperature (which is related to temperature) as X-axis and Luminosity as Y-axis. "}}