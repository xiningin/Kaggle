{"cell_type":{"4e234097":"code","c4e4b08e":"code","26daff1f":"code","58fc5e79":"code","e71790bd":"code","189ea1c5":"code","4526ed32":"code","b5ca17be":"code","ea37a467":"code","c7612435":"code","a0548cc2":"code","941013d3":"code","642a808b":"markdown","11735927":"markdown","633b97ef":"markdown","25c568d8":"markdown","bb4dee46":"markdown"},"source":{"4e234097":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c4e4b08e":"df=pd.read_csv('\/kaggle\/input\/student-study-hour-v2\/Student Study Hour V2.csv')","26daff1f":"df","58fc5e79":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom sklearn.linear_model import LinearRegression,Ridge,Lasso\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score\nfrom sklearn.model_selection import train_test_split","e71790bd":"x=df.Hours.to_frame()\ny=df.Scores\nplt.scatter(x,y)","189ea1c5":"lr=LinearRegression()","4526ed32":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=123)","b5ca17be":"lr.fit(x_train,y_train)\nprint(lr.coef_)\nprint(lr.intercept_)","ea37a467":"lr.fit(x_train,y_train)\nprint(lr.coef_)\nprint(lr.intercept_)\n\ny_pred=lr.predict(x_test)\n\nprint(y_pred-y_test)\nprint('MAE:',mean_absolute_error(y_pred,y_test ))\nprint('MSE:',mean_squared_error(y_pred, y_test))\nprint('RMSE:',np.sqrt(mean_squared_error(y_pred, y_test)))\nprint('R2:',r2_score(y_pred, y_test))","c7612435":"lasso=Lasso(alpha=0.001,normalize=True)\nlasso.fit(x_train,y_train)\n\nprint(lasso.coef_)\nprint(lasso.intercept_)\n\ny_pred2=lasso.predict(x_test)\n\nprint(y_pred2-y_test)\nprint('MAE:',mean_absolute_error(y_pred2,y_test ))\nprint('MSE:',mean_squared_error(y_pred2, y_test))\nprint('RMSE:',np.sqrt(mean_squared_error(y_pred2, y_test)))\nprint('R2:',r2_score(y_pred2, y_test))","a0548cc2":"ridge=Ridge(alpha=0.01,normalize=True)\nridge.fit(x_train,y_train)\n\nprint(ridge.coef_)\nprint(ridge.intercept_)\n\ny_pred3=ridge.predict(x_test)\n\nprint(y_pred3-y_test)\nprint('MAE:',mean_absolute_error(y_pred3,y_test ))\nprint('MSE:',mean_squared_error(y_pred3, y_test))\nprint('RMSE:',np.sqrt(mean_squared_error(y_pred3, y_test)))\nprint('R2:',r2_score(y_pred3, y_test))","941013d3":"Hours=8.3\n\nScore=ridge.coef_*Hours+ridge.intercept_\nprint('Ridge Score',Score)\n\nScore2=lr.coef_*Hours+lr.intercept_\nprint('LR Score',Score2)\n\nScore3=lasso.coef_*Hours+lasso.intercept_\nprint('Lasso Score',Score3)","642a808b":"3.Ridge","11735927":"Ridge model is better than LinearRegression and Lasso Model.","633b97ef":"Prediction Comparison Sample","25c568d8":"1.Linear Regression","bb4dee46":"2. Lasso"}}