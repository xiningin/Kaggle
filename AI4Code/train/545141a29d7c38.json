{"cell_type":{"85327910":"code","c3f630c6":"code","d8b1ed3c":"code","c6269334":"code","7ab6472c":"code","07d6c94f":"code","d5fc161a":"code","ee2e90e0":"code","882bdc57":"code","74a0179f":"code","0766f5b1":"code","08181406":"code","2a347618":"code","be3704b1":"code","02e7e732":"code","392bd4af":"markdown","953939cf":"markdown","b6d35ed7":"markdown","374d79bc":"markdown","051b2e74":"markdown","2b1b792f":"markdown","48b9e735":"markdown","b53e2bdf":"markdown","f237cff2":"markdown","c0cd1aae":"markdown","bd3b3d76":"markdown","4ef6b755":"markdown"},"source":{"85327910":"import numpy as np \n# for scientific computation of multidimensional arrays\nimport pandas as pd \n# data structures dealing is done \nimport matplotlib.pyplot as plt \n# For plotting graphs\nimport seaborn as sns\n# Statistical Data Visualization\n%matplotlib inline\n# sets the backend of matplotlib to the 'inline' backend: With this backend, the output of plotting commands is displayed inline within frontends like the Jupyter notebook,\n","c3f630c6":"'''score_df'''\nd_df = pd.read_csv(\"..\/input\/deliveries.csv\")\n# OR - pd.read_csv(data_path+\"deliveries.csv\"), where data_path = \"..\/input\/\"\n# reading deliveries dataset  \n'''match_df'''\nm_df = pd.read_csv(\"..\/input\/matches.csv\")\n# OR - pd.read_csv(data_path+\"matches.csv\"), where data_path = \"..\/input\/\"\n# reading matches dataset\n# csv- Comma seperated values","d8b1ed3c":"d_df.head(5)\n# Printing the first five rows of the dataset to just look how the dataset is !","c6269334":"m_df.head(5)","7ab6472c":"print(\"Number of matches played: \",m_df.shape[0])\n# https:\/\/pandas.pydata.org\/pandas-docs\/version\/0.17.0\/generated\/pandas.DataFrame.shape.html\nprint(\"Number of seasons: \",len(m_df.season.unique()))\n# unique season values from dataset is printed.","07d6c94f":"sns.countplot(x='season',data=m_df)\n# counts the number of each season's value, i.e, counting the number of matches played per season\nplt.plot()\n# Plotting graph","d5fc161a":"plt.figure(figsize=(12,6))\n# Sets the figure(plot) size.\nsns.countplot(x='venue', data=m_df)\n# same as above\nplt.xticks(rotation='vertical')\n# x-axis names vertically is shown\nplt.plot()","ee2e90e0":"temp_df = pd.melt(m_df, id_vars=['id','season'], value_vars=['team1', 'team2'])\n# https:\/\/pandas.pydata.org\/pandas-docs\/version\/0.23.4\/generated\/pandas.melt.html\n# https:\/\/youtu.be\/qOkj5zOHwRE -> Video URL\nplt.figure(figsize=(12,6))\nsns.countplot(x='value', data=temp_df)\nplt.xticks(rotation='vertical')\nplt.show()\n","882bdc57":"plt.figure(figsize=(12,6))\nsns.countplot(x='winner',data=m_df)\nplt.xticks(rotation='vertical')\nplt.show()","74a0179f":"temp_df = m_df.drop_duplicates(subset=['season'],keep='last')[['season','winner']].reset_index(drop=True)\n# https:\/\/pandas.pydata.org\/pandas-docs\/stable\/generated\/pandas.DataFrame.drop_duplicates.html\n# https:\/\/stackoverflow.com\/questions\/44620465\/python-reset-indexdrop-true-function-erroneously-removed-column\n# https:\/\/stackoverflow.com\/questions\/33417991\/pandas-why-are-double-brackets-needed-to-select-column-after-boolean-indexing\ntemp_df","0766f5b1":"temp_series = m_df.toss_decision.value_counts()\n# https:\/\/pandas.pydata.org\/pandas-docs\/stable\/generated\/pandas.Series.value_counts.html\nlabels = (np.array(temp_series.index))\n# contains \"bat\" and \"field\"\n# https:\/\/docs.scipy.org\/doc\/numpy-1.15.0\/user\/basics.creation.html\n# https:\/\/pandas.pydata.org\/pandas-docs\/stable\/generated\/pandas.Series.index.html\nsizes = (np.array((temp_series\/temp_series.sum())*100))\n# calculating %ages\ncolors = ['Pink','SkyBlue']\nplt.pie(sizes,labels = labels,colors=colors,autopct='%1.1f%%',shadow=True,startangle=90)\n# https:\/\/www.commonlounge.com\/discussion\/9d6aac569e274dacbf90ed61534c076b#pie-chart\n# https:\/\/matplotlib.org\/api\/_as_gen\/matplotlib.pyplot.pie.html\nplt.title(\"Toss decision Percentage\")\nplt.show()\n","08181406":"plt.figure(figsize=(12,6))\nsns.countplot(x='season',hue='toss_decision',data=m_df)\n# https:\/\/seaborn.pydata.org\/generated\/seaborn.countplot.html\nplt.xticks(rotation='vertical')\nplt.show()","2a347618":"no_of_wins = (m_df.win_by_wickets>0).sum()\nno_of_loss = (m_df.win_by_wickets==0).sum()\nlabels = [\"Wins\", \"Loss\"]\ntotal = float(no_of_wins + no_of_loss)\nsizes = [(no_of_wins\/total)*100, (no_of_loss\/total)*100]\ncolors = ['gold', 'lightskyblue']\nplt.pie(sizes, labels=labels, colors=colors,\n        autopct='%1.1f%%', shadow=True, startangle=90)\nplt.title(\"Win percentage batting second\")\nplt.show()\n# Similar to last pie chart\n","be3704b1":"m_df[\"field_win\"] = \"win\"\n# made another column for win and loss only\nm_df[\"field_win\"].ix[m_df['win_by_wickets']==0] = \"loss\"\n# 'ix' will select the location where 'win_by_wickets ==0' and stores \"loss\" in \"field_win\" column at that position, and rest will be stored with \"win\"\nplt.figure(figsize=(12,6))\nsns.countplot(x='season', hue='field_win', data=m_df)\nplt.xticks(rotation='vertical')\nplt.show()\n","02e7e732":"temp_series = m_df.player_of_match.value_counts()[:10]\nprint(temp_series)\n# value_counts() arrange in descending order, [:10] picks the first ten(top 10).\nlabels = np.array(temp_series.index)\n# https:\/\/pandas.pydata.org\/pandas-docs\/stable\/generated\/pandas.Series.index.html\nind = np.arange(len(labels))\nwidth = 0.9\nfig, ax = plt.subplots()\nrects = ax.bar(ind, np.array(temp_series), width=width, color='y')\nax.set_xticks(ind+((width)\/2.))\nax.set_xticklabels(labels, rotation='vertical')\nax.set_ylabel(\"Count\")\nax.set_title(\"Top player of the match awardees\")\nplt.show()\n","392bd4af":"**<font size=\"3\">Matches per Season<\/font>**","953939cf":"**<font size=\"3\">Top players of the match<\/font>**","b6d35ed7":"**<font size=\"5\">Data Visualization<\/font>**","374d79bc":"**<font size=\"3\">Number of wins\/team<\/font>**","051b2e74":"**<font size=\"3\">Venue-wise Matches<\/font>**","2b1b792f":"**<font size=\"3\">Win %age of team BATTING second<\/font>**","48b9e735":"**<font size=\"5\">Reading DataFrames<\/font>**","b53e2bdf":"**<font size=\"3\">Number of matches played by each team<\/font>**","f237cff2":"**<font size=\"3\">Toss Decision<\/font>**","c0cd1aae":"**<font size=\"3\">Win by Year, batting second<\/font>**","bd3b3d76":"**<font size=\"3\">Champions each season<\/font>**","4ef6b755":"**<font size=\"3\">Toss decision Per Season<\/font>**"}}