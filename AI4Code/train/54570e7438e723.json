{"cell_type":{"dc7eb353":"code","a8a1bf6b":"code","d1263635":"code","b73d7888":"code","0159573d":"code","1aafc8bb":"code","ee126934":"code","81937776":"code","e590dc2d":"code","1f8476a8":"code","d5ef39e6":"code","5f922bc9":"code","e39d21ec":"code","d93685e4":"code","1113afa9":"code","5856a16a":"code","8a950654":"code","ed837278":"code","fe01d4ad":"code","67df284f":"code","2c64f066":"code","d2955f63":"code","c5ac187b":"markdown","47ec45d4":"markdown","33247a4d":"markdown","60ab55b6":"markdown","2b31327c":"markdown","149f8a7d":"markdown","246690a0":"markdown","5a65d77a":"markdown","27ad7235":"markdown","bf109bc6":"markdown","f82f8f32":"markdown","0fa5f47e":"markdown","654651f0":"markdown","4f3973a2":"markdown","67140355":"markdown","a6b0096e":"markdown","d173bd04":"markdown","96b177da":"markdown","8dde1c5f":"markdown","3c584eb5":"markdown","0b55ec8a":"markdown","4c65d3d7":"markdown","62a9ad0e":"markdown","887b8736":"markdown","5a912e4a":"markdown","58e53051":"markdown","035168db":"markdown","17b280f7":"markdown","c6f2fa6d":"markdown"},"source":{"dc7eb353":"import pandas as pd\nimport os","a8a1bf6b":"df= pd.read_csv(\"..\/input\/sales-analysis-panda\/Sales_April_2019.csv\")\n\nfiles=[file for file in os.listdir(\"..\/input\/sales-analysis-panda\")]\n\nall_data=pd.DataFrame()\n\nfor file in files:\n    df=pd.read_csv(\"..\/input\/sales-analysis-panda\/\"+file)\n    all_data=pd.concat([all_data,df])\n\nall_data.to_csv(\"all_data.csv\",index=False)","d1263635":"all_data=pd.read_csv(\"all_data.csv\")\nall_data.head()","b73d7888":"all_data=all_data.dropna(how='all')\nallna=all_data[all_data.isna().any(axis=1)]\nallna.shape","0159573d":"tempdf=all_data[all_data['Order Date'].str[0:2] == 'Or']\nprint(tempdf.shape)\nprint(all_data.shape)\ntempdf.head()","1aafc8bb":"all_data=all_data[all_data['Order Date'].str[0:2] != 'Or']\nprint(all_data.shape)\nall_data.head()","ee126934":"all_data['Quantity Ordered']=all_data[\"Quantity Ordered\"].astype(\"int32\")\nall_data['Price Each']=all_data[\"Price Each\"].astype(\"float64\")","81937776":"all_data['Month']=all_data['Order Date'].str[0:2]\n\n\nall_data['Month']=all_data['Month'].astype('int32')\nall_data.head()","e590dc2d":"all_data['Sales']=all_data['Quantity Ordered']*all_data['Price Each']\nall_data.head()","1f8476a8":"all_data[\"City\"]=all_data[\"Purchase Address\"].apply(lambda x : x.split(',')[1]+' '+ x.split(',')[2].split(' ')[1])\nall_data.head()","d5ef39e6":"all_data.groupby('Month').sum().sort_values('Sales',ascending=False)","5f922bc9":"all_data.groupby('Month').max()","e39d21ec":"import matplotlib.pyplot as plt\n\nhighestsales_month=all_data.groupby('Month').sum()\n\nmonths=range(1,13)\n\nplt.bar(months,highestsales_month['Sales'])\nplt.title('Total Sales per Month')\nplt.xlabel('Month')\nplt.ylabel('Sales Value')\n\nplt.show()","d93685e4":"highestsale_city=all_data.groupby('City').sum()\nhighestsale_city.head(10)\n","1113afa9":"all_data['City'].shape","5856a16a":"cities=[city for city,df in all_data.groupby('City')]\n\nplt.bar(cities,highestsale_city['Sales'])\nplt.xticks(cities,rotation='vertical',size=8)\nplt.xlabel('City Name')\nplt.title('City vs Sales')\nplt.ylabel('Sales')\nplt.show()","8a950654":"all_data['Order Date']=pd.to_datetime(all_data['Order Date'])\nall_data['Hour']=all_data['Order Date'].dt.hour\nall_data['Minute']=all_data['Order Date'].dt.minute\nall_data.head(10)","ed837278":"hours=[hour for hour,df in all_data.groupby('Hour')]\nminutes=[minute for minute,df in all_data.groupby('Minute')]\n\nplt.plot(hours,all_data.groupby(['Hour']).count())\nplt.xticks(hours,size=8)\nplt.xlabel('Hour')\nplt.ylabel('No of Purchases')\nplt.grid()\nplt.show()","fe01d4ad":"df=all_data[all_data['Order ID'].duplicated(keep=False)]\ndf['Grouped']=df.groupby('Order ID')['Product'].transform(lambda x: ', '.join(x))\ndf=df[[\"Order ID\",\"Grouped\"]].drop_duplicates()\ndf.head()\n\n","67df284f":"from itertools import combinations\nfrom collections import Counter\n\ncount =Counter()\n\nfor row in df['Grouped']:\n    row_list=row.split(',')\n    count.update(Counter(combinations(row_list,2)))\n    \nfor key,values in count.most_common(10):\n    print(key,values)\n    ","2c64f066":"product_group=all_data.groupby('Product')\nquantity_total= product_group['Quantity Ordered'].sum()\n\nproduct=[product for product,df in product_group]\n\nplt.bar(product,quantity_total)\nplt.xticks(product,rotation='vertical',size=8)\nplt.xlabel('Product',size=12)\nplt.ylabel('Quantity Sold',size=12)\nplt.title('Quantity of Products sold',size=15.0)\nplt.show()\n","d2955f63":"prices=all_data.groupby('Product').mean()['Price Each']\n\nfig,ax1= plt.subplots()\nax2=ax1.twinx()\nax1.bar(product,quantity_total,color='g')\nax2.plot(product,prices,'b-')\n\nax1.set_xlabel('Products')\nax1.set_xticklabels(product,rotation='vertical')\nax1.set_ylabel('Quantity',color='g')\nax2.set_ylabel('Price',color='b')\nplt.show()","c5ac187b":"# Finding the city with the highest sales","47ec45d4":"# Augmenting Data with additional columns","33247a4d":"The above code is run just as a fun fact to illustrate that every month the most expensive item sold was an iPhone :P","60ab55b6":"This project is to analyze hypothetical sales data. This project is done as an absolute beginner with inspiration from the youtube channel Keith Galli","2b31327c":"# Ideal time period to advertise product to maximize sales","149f8a7d":"Adding a column for Sales","246690a0":"Removing all NaN values","5a65d77a":"To address the task at hand, we can see that the group of products most sold together are {iPhone and Lightning Charging Cable}","27ad7235":"**Reading the Concatenated File**","bf109bc6":"Even though all NaN values have been removed, the dataframe does indicate the presence of duplicate\/invalid data such as title repitition in the data columns. This is demonstrated in the following cell.","f82f8f32":"These values have to be removed","0fa5f47e":"**From the above bar graph, it is clear that batteries( AA and AAA) have the highest sales. To find the reason for this, we try to analyze all the parameters from the dataset which may affect the quantity of products sold. One patent parameter is that the price of batteries are much cheaper compared to the other products sold.**\n**So lets try determining the correlation between the quantity of products sold with its corresponding price**","654651f0":"To include the majority of group purchases we group the values by combinations of 2. The same code can be implemented to find the combinations of 3 or more products as well.","4f3973a2":"# **Importing Essential Packages**","67140355":"# Data Cleaning","a6b0096e":"Comparing the shape of the \"all_data\" file before and after, we can see that all columns containing invalid\/duplicate values have been removed","d173bd04":"From the above display it is clear that December had the highest sales with roughly a value of 4.6 million","96b177da":"From the shape of \"allna\", we can see that all the NaN values have been removed","8dde1c5f":"From the graph above, it is evident that most purchases are made between 11:00 am - 12:00pm and later at around 7:00pm.\nThis would be a perfect time for advertising.","3c584eb5":"# Product with the most sales (with reason)","0b55ec8a":"# Products most often sold together","4c65d3d7":"Adding a column for month","62a9ad0e":"# Now, we want to find the month with the highest sales and its corresponding value (total price)","887b8736":"**Converting Columns to correct data type**","5a912e4a":"# Sales Analysis","58e53051":"#  **Merging all the sales files**","035168db":"Adding a column for city","17b280f7":"It is evident that San Francisco CA has the highest sales among all the other US cities.","c6f2fa6d":"**We can see that in most cases, products with higher prices have lower sales and vice versa.**"}}