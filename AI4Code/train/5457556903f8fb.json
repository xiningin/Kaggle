{"cell_type":{"90223773":"code","39236b96":"code","f8671834":"code","b6a675d4":"code","23c267f7":"code","77be5f35":"code","2e2eafab":"code","db51fbdf":"code","e962b0fa":"code","335be457":"code","86544af0":"code","ed2a2b3d":"code","57e149b4":"code","6f18dd2c":"code","bfad8845":"code","8abf77e7":"code","9166ac84":"code","b55f9694":"code","1d7e2f8a":"code","54072c55":"code","c1c9b2c2":"code","b8552434":"code","b42f3bf2":"code","5fbcc41f":"code","2550626e":"code","84880eaa":"code","b8115291":"code","58b7c9a0":"code","f14ab0d6":"code","ade2dd05":"code","4e53a17d":"code","d4732c20":"markdown","860ce4c6":"markdown","9c2b4371":"markdown","23f8a1a3":"markdown","6e0e8dd4":"markdown","2517fefa":"markdown","d4823887":"markdown","6cd3f300":"markdown","8c5c0e9a":"markdown","5f6feca7":"markdown","a6033795":"markdown","46d6c629":"markdown"},"source":{"90223773":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.style.use(\"seaborn-whitegrid\")\n\nfrom collections import Counter\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","39236b96":"train_df = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\n\ntest_PassengerId = test_df['PassengerId']","f8671834":"train_df.columns","b6a675d4":"train_df.head()","23c267f7":"train_df.describe()","77be5f35":"train_df.info()","2e2eafab":"def bar_plot(variable):\n    \"\"\"\n    input: variable = ex:'Sex'\n    output: bar plot & value count\n    \"\"\"\n    # get feature\n    var = train_df[variable]\n    # count number of categorical variable(value)\n    varValue = var.value_counts()\n    \n    #visualize\n    plt.figure(figsize = (9,3))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Fre\")\n    plt.title(\"Variable\")\n    plt.show()\n    \n    print(\"{}: \\n {}\".format(variable,varValue))\n    ","db51fbdf":"category1 = [\"Survived\",\"Sex\",\"Pclass\",\"Embarked\",\"Parch\",\"SibSp\"]\n\nfor i in category1:\n    bar_plot(i)","e962b0fa":"category2 = [\"Cabin\",\"Name\",\"Ticket\"]\n\nfor c in category2:\n    print(\"{} \\n\".format(train_df[c].value_counts()))","335be457":"def plot_hist(variable):\n    plt.figure(figsize = (9,3))\n    plt.hist(train_df[variable],bins=50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Fre\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()","86544af0":"numericVar = ['Fare','Age','PassengerId']\n\nfor i in numericVar:\n    plot_hist(i)","ed2a2b3d":"#Plcass vs. Survived\n\ntrain_df[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"],as_index=False).mean().sort_values(by='Survived',ascending=False)","57e149b4":"#Sex vs Survived\n\ntrain_df[[\"Sex\",\"Survived\"]].groupby([\"Sex\"],as_index=False).mean().sort_values(by='Survived',ascending=False)","6f18dd2c":"#Sibsp vs Survived\n\ntrain_df[[\"SibSp\",\"Survived\"]].groupby([\"SibSp\"],as_index=False).mean().sort_values(by='Survived',ascending=False)","bfad8845":"# People who have 2 or more siblings and spouses have lower survival rates.\ntrain1_df = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest1_df = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\n\ntrain1_df['Living_Rate'] = ['Low' if i > 2 else 'High' for i in train1_df['SibSp']]\n\ntrain1_df.loc[:10,['Living_Rate','SibSp']]","8abf77e7":"#Parch vs Survived\n\ntrain_df[[\"Parch\",\"Survived\"]].groupby([\"Parch\"],as_index=False).mean().sort_values(by='Survived',ascending=False)","9166ac84":"def detect_outlier(df,features):\n    outlier_indices = []\n    \n    for c in features:\n        # first quartile\n        Q1 = np.percentile(df[c],25)\n        # 3rd quartile\n        Q3 = np.percentile(df[c],75)\n        #iqr\n        IQR = Q3 - Q1\n        #outlier step\n        outlier_step = IQR * 1.5\n        #detect outlier and their indices\n        outlier_list_col = df[(df[c] < Q1 - outlier_step) | (df[c] > Q3 + outlier_step)].index\n        #store indices\n        outlier_indices.extend(outlier_list_col)\n    \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i, v in outlier_indices.items() if v > 2)\n    return multiple_outliers","b55f9694":"train_df.loc[detect_outlier(train_df,['Age','SibSp','Parch','Fare'])]","1d7e2f8a":"#drop outliers\n\ntrain_df = train_df.drop(detect_outlier(train_df,['Age','SibSp','Parch','Fare']), axis=0).reset_index(drop=True)","54072c55":"train_df_len = len(train_df)\ntrain_df = pd.concat([train_df,test_df],axis=0).reset_index(drop=True)","c1c9b2c2":"train_df.head()","b8552434":"train_df.columns[train_df.isnull().any()] #missing value find","b42f3bf2":"train_df.isnull().sum()","5fbcc41f":"train_df[train_df['Embarked'].isnull()] #find missing value Embarked","2550626e":"train_df.boxplot(column='Fare',by = 'Embarked')\nplt.show()","84880eaa":"train_df['Embarked'] = train_df['Embarked'].fillna(\"C\")\ntrain_df[train_df['Embarked'].isnull()] #find missing value Embarked","b8115291":"train_df[train_df['Fare'].isnull()] #find missing value Fare","58b7c9a0":"train_df[train_df['Pclass'] == 3]['Fare']","f14ab0d6":"np.mean(train_df[train_df['Pclass'] == 3]['Fare'])","ade2dd05":"train_df['Fare'] = train_df['Fare'].fillna(np.mean(train_df[train_df['Pclass'] == 3]['Fare']))","4e53a17d":"train_df[train_df['Fare'].isnull()] #find missing value Fare","d4732c20":"<a id=\"9\"><\/a>\n## Find Missing Value","860ce4c6":"<a id=\"10\"><\/a>\n## Fill Missing Value\n\n* Embarked has 2 missing value\n* Fare has only 1","9c2b4371":"* float64(2): Fare and Age\n* int64(5): Pclass, Sibsp, Parch, PassengerId and Survived\n* object(5): Name, Sex, Ticket, Cabin and Embarked","23f8a1a3":"<a id=\"1\"><\/a>\n# Load and Check Data","6e0e8dd4":"<a id=\"4\"><\/a>\n\n## Categorical Variable","2517fefa":"<a id=\"2\"><\/a>\n# Variable Descriptions\n\n1. PassengerId: unique id number to each passenger\n1. Survived: passenger survive(1) or died(0)\n1. Pclass: passengers class\n1. Name: passengers name\n1. Sex: gender of passengers\n1. Age: age of pessangers\n1. SibSp: number of siblings\/spouses\n1. Parch: number of parents\/children\n1. Ticket: ticket number\n1. Fare: amount of money spent on ticket\n1. Cabin: cabin category\n1. Embarked: port where passenger embarked(s,c,q)\n","d4823887":"# Introduction\nThe sinking of the Titanic was a bad accident and happened in 1912,Titanic sank after hitting an iceberg. 1502 people died in total, 2224 people and crew members on board\n\n<font color='blue'>\nContent:\n\n1. [Load and Check Data](#1)\n2. [Variable Descriptions](#2)\n    * [Univariate Variable Analysis](#3)\n        * [Categorical Variable Analysis](#4)\n        * [Numerical Variable Analysis](#5)\n3. [Basic Data Analysis](#6)\n4. [Outlier Detection](#7)\n5. [Missing Value](#8)\n    * [Find Missing Value](#9)\n    * [Fill Mising Value](#10)","6cd3f300":"<a id=\"3\"><\/a>\n# Univariate Variable Analysis\n\n* Categorical Variable: Survived, Sex, PClass, Embarked, Cabin, Name, Ticket, Sibsp and Parch\n* Numerical Variable: Age, PassengerId, Fare","8c5c0e9a":"<a id=\"7\"><\/a>\n# Outlier Detection","5f6feca7":"<a id=\"5\"><\/a>\n\n## Numerical Variable","a6033795":"<a id=\"8\"><\/a>\n# Missing Value\n\n* Find Missing Value\n* Fill Mising Value","46d6c629":"<a id=\"6\"><\/a>\n# Basic Data Analysis\n\n* Pclass - Survived\n* Sex - Survived\n* Sibsp - Survived\n* Parch - Survived"}}