{"cell_type":{"2c8847d2":"code","54dc3715":"code","18e9c494":"code","b8af3e1e":"code","209adf53":"code","1f36a5f1":"code","84984100":"markdown","4ab3092d":"markdown","b8e71796":"markdown","5e9989d6":"markdown","b2182c70":"markdown","5cdd24d7":"markdown","8b05ff34":"markdown","d1d2d2f8":"markdown","ae315d47":"markdown","b28e684b":"markdown"},"source":{"2c8847d2":"# Set up feedback system\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.sql.ex2 import *\nprint(\"Setup Complete\")","54dc3715":"from google.cloud import bigquery\n\n# Create a \"Client\" object\nclient = bigquery.Client()\n\n# Construct a reference to the \"openaq\" dataset\ndataset_ref = client.dataset(\"openaq\", project=\"bigquery-public-data\")\n\n# API request - fetch the dataset\ndataset = client.get_dataset(dataset_ref)\n\n# Construct a reference to the \"global_air_quality\" table\ntable_ref = dataset_ref.table(\"global_air_quality\")\n\n# API request - fetch the table\ntable = client.get_table(table_ref)\n\n# Preview the first five lines of the \"global_air_quality\" table\nclient.list_rows(table, max_results=5).to_dataframe()","18e9c494":"# Query to select countries with units of \"ppm\"\nfirst_query = \"\"\"\n        SELECT distinct country\n        FROM `bigquery-public-data.openaq.global_air_quality`\n        WHERE unit = 'ppm'\n        \"\"\" # Your code goes here\n\n# Set up the query (cancel the query if it would use too much of \n# your quota, with the limit set to 10 GB)\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)\nfirst_query_job = client.query(first_query, job_config=safe_config)\n\n# API request - run the query, and return a pandas DataFrame\nfirst_results = first_query_job.to_dataframe()\n\n# View top few rows of results\nprint(first_results.head())\n\n# Check your answer\nq_1.check()","b8af3e1e":"q_1.solution()","209adf53":"# Query to select all columns where pollution levels are exactly 0\nzero_pollution_query = \"\"\"\n        SELECT *\n        FROM `bigquery-public-data.openaq.global_air_quality`\n        WHERE value = 0\n        \"\"\" # Your code goes here\n\n# Set up the query\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)\nquery_job = client.query(zero_pollution_query, job_config=safe_config)\n\n# API request - run the query and return a pandas DataFrame\nzero_pollution_results = query_job.to_dataframe() # Your code goes here\n\nprint(zero_pollution_results.head())\n\n# Check your answer\nq_2.check()","1f36a5f1":"q_2.solution()","84984100":"That query wasn't too complicated, and it got the data you want. But these **SELECT** queries don't organizing data in a way that answers the most interesting questions. For that, we'll need the **GROUP BY** command. \n\nIf you know how to use [`groupby()`](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.groupby.html) in pandas, this is similar. But BigQuery works quickly with far larger datasets.\n\nFortunately, that's next.","4ab3092d":"The code cell below fetches the `global_air_quality` table from the `openaq` dataset.  We also preview the first five rows of the table.","b8e71796":"**[SQL Home Page](https:\/\/www.kaggle.com\/learn\/intro-to-sql)**\n\n---\n","5e9989d6":"# Keep going\n**[GROUP BY](https:\/\/www.kaggle.com\/dansbecker\/group-by-having-count)** clauses and their extensions give you the power to pull interesting statistics out of data, rather than receiving it in just its raw format.","b2182c70":"---\n**[SQL Home Page](https:\/\/www.kaggle.com\/learn\/intro-to-sql)**\n\n\n\n\n\n*Have questions or comments? Visit the [Learn Discussion forum](https:\/\/www.kaggle.com\/learn-forum\/161314) to chat with other Learners.*","5cdd24d7":"# Exercises\n\n### 1) Units of measurement\n\nWhich countries have reported pollution levels in units of \"ppm\"?  In the code cell below, set `first_query` to an SQL query that pulls the appropriate entries from the `country` column.\n\nIn case it's useful to see an example query, here's some code from the tutorial:\n\n```\nquery = \"\"\"\n        SELECT city\n        FROM `bigquery-public-data.openaq.global_air_quality`\n        WHERE country = 'US'\n        \"\"\"\n```","8b05ff34":"For the solution, uncomment the line below.","d1d2d2f8":"For the solution, uncomment the line below.","ae315d47":"### 2) High air quality\n\nWhich pollution levels were reported to be exactly 0?  \n- Set `zero_pollution_query` to select **all columns** of the rows where the `value` column is 0.\n- Set `zero_pollution_results` to a pandas DataFrame containing the query results.","b28e684b":"# Introduction\n\nTry writing some **SELECT** statements of your own to explore a large dataset of air pollution measurements.\n\nRun the cell below to set up the feedback system."}}