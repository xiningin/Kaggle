{"cell_type":{"2337cbc6":"code","2942c43b":"code","0a9f4c8c":"code","0153aeef":"code","d522cb3b":"code","7889fc4b":"code","a75b6139":"code","2a3ef4db":"code","1eceb54c":"code","b1b14139":"code","758fb88c":"code","d9afbe80":"code","d86e8910":"code","957f49fe":"code","19c716f8":"code","2c7f4e68":"code","1ffe1cc4":"code","af446380":"code","9c7733a2":"code","803e37f9":"code","2cb0cd30":"code","84059da9":"code","d49ecc7e":"code","14993bd2":"code","98f58c3a":"code","a88877ed":"code","8dcdca2e":"code","dc57b24d":"code","70e68cdc":"code","7279586f":"code","771efb73":"markdown","24ace5e2":"markdown","940dfb92":"markdown","3153753e":"markdown","715fd54c":"markdown","169b59c1":"markdown","111796b3":"markdown","c3a58e26":"markdown","cffc6996":"markdown","7da12b32":"markdown","4ffd9bdc":"markdown","71509e90":"markdown","4ce65cd1":"markdown"},"source":{"2337cbc6":"import numpy as np \nimport pandas as pd \nfrom IPython.display import display\nimport seaborn as sns\nimport plotly\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport plotly.express as px\nimport plotly.graph_objs as go\nplotly.offline.init_notebook_mode(connected=True)\nfrom plotly.subplots import make_subplots\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2942c43b":"games = pd.read_csv('\/kaggle\/input\/videogamesales\/vgsales.csv')","0a9f4c8c":"games","0153aeef":"sns.set_style('whitegrid')\nfig,(ax1) = plt.subplots(figsize=(20,11))\nplt.title('Number of different games per game platforms')\nsns.countplot(x='Platform', data=games, ax=ax1)\nplt.show()","d522cb3b":"top_10_publishers = games.Publisher.value_counts().sort_values(ascending=False).head(10)\nfig = px.pie(top_10_publishers,\n             values= top_10_publishers.values,\n             names= top_10_publishers.index,\n             title='Top 10 Games Publishers')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","7889fc4b":"def top_sales(df,region):\n    if region == 'JP_Sales':\n        japan = games.groupby('Name')['JP_Sales'].sum().reset_index().sort_values('JP_Sales', ascending=False).head(10)\n        return japan\n    elif region == 'EU_Sales':\n        eu = games.groupby('Name')['EU_Sales'].sum().reset_index().sort_values('EU_Sales', ascending=False).head(10)\n        return eu\n    elif region == 'NA_Sales':\n        na = games.groupby('Name')['NA_Sales'].sum().reset_index().sort_values('NA_Sales', ascending=False).head(10)\n        return na\n    elif region == 'Global_Sales':\n        globe = games.groupby('Name')['Global_Sales'].sum().reset_index().sort_values('Global_Sales', ascending=False).head(10)\n        return globe\n    else:\n        other = games.groupby('Name')['Other_Sales'].sum().reset_index().sort_values('Other_Sales', ascending=False).head(10)\n        return other\n    ","a75b6139":"top10_JP_sales = top_sales(games, 'JP_Sales')","2a3ef4db":"top10_EU_sales = top_sales(games, 'EU_Sales')","1eceb54c":"top10_NA_sales = top_sales(games, 'NA_Sales')","b1b14139":"top10_Global_sales = top_sales(games, 'Global_Sales')","758fb88c":"top10_Other_sales = top_sales(games, 'Other_Sales')","d9afbe80":"fig = go.Figure(\n    data=[go.Bar(x=top10_JP_sales.Name, y=top10_JP_sales.JP_Sales)],\n    layout_title_text = 'Top 10 Sales Games In Japan'\n)\nfig.show()","d86e8910":"fig = go.Figure(\n    data = [go.Bar(x=top10_EU_sales.Name, y=top10_EU_sales.EU_Sales)],\n    layout_title_text = 'Top 10 Sales Games In EU'\n)\nfig.show()","957f49fe":"fig = go.Figure(\n    data = [go.Bar(x=top10_NA_sales.Name, y=top10_NA_sales.NA_Sales)],\n    layout_title_text = 'Top 10 Sales Games In NA'\n)\nfig.show()","19c716f8":"fig = go.Figure(\n    data = [go.Bar(x=top10_Global_sales.Name, y=top10_Global_sales.Global_Sales)],\n    layout_title_text = 'Top 10 Sales Games Global'\n)\nfig.show()","2c7f4e68":"fig = go.Figure(\n    data = [go.Bar(x=top10_Other_sales.Name, y=top10_Other_sales.Other_Sales)],\n    layout_title_text = 'Top 10 Sales Games Other'\n)\nfig.show()","1ffe1cc4":"publication_distr = games.Year.value_counts().sort_values(ascending=False)\nfig = px.bar(publication_distr, \n             x=publication_distr.index, \n             y=publication_distr.values,\n             title= \"Year of Games Releasing & Distribution\")\nfig.show()","af446380":"top10_sales_games = games.groupby(['Name','Year'])['Global_Sales'].sum().reset_index().sort_values('Global_Sales', ascending=False).head(10)\nfig = px.pie(top10_sales_games,\n             values = top10_sales_games.Year,\n             names = top10_sales_games.Name,\n             title= 'Top 10 Worldwide Sales Games Globally')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","9c7733a2":"def genre_sales(df,region):\n    if region == 'JP_Sales':\n        japan = games.groupby('Genre')['JP_Sales'].sum().reset_index().sort_values('JP_Sales', ascending=False)\n        return japan\n    elif region == 'EU_Sales':\n        eu = games.groupby('Genre')['EU_Sales'].sum().reset_index().sort_values('EU_Sales', ascending=False)\n        return eu\n    elif region == 'NA_Sales':\n        na = games.groupby('Genre')['NA_Sales'].sum().reset_index().sort_values('NA_Sales', ascending=False)\n        return na\n    elif region == 'Global_Sales':\n        globe = games.groupby('Genre')['Global_Sales'].sum().reset_index().sort_values('Global_Sales', ascending=False)\n        return globe\n    else:\n        other = games.groupby('Genre')['Other_Sales'].sum().reset_index().sort_values('Other_Sales', ascending=False)\n        return other","803e37f9":"genre_sales_jp = genre_sales(games, 'JP_Sales')","2cb0cd30":"genre_sales_eu = genre_sales(games, 'EU_Sales')","84059da9":"genre_sales_na = genre_sales(games, 'NA_Sales')","d49ecc7e":"genre_sales_global = genre_sales(games, 'Global_Sales')","14993bd2":"genre_sales_other = genre_sales(games, 'Other_Sales')","98f58c3a":"fig = go.Figure(data=[\n    go.Bar(name='JP', x=genre_sales_jp.Genre, y=genre_sales_jp.JP_Sales),\n    go.Bar(name='EU', x=genre_sales_eu.Genre, y=genre_sales_eu.EU_Sales),\n    go.Bar(name='NA', x=genre_sales_na.Genre, y=genre_sales_na.NA_Sales),\n    go.Bar(name='Rest of the world', x=genre_sales_other.Genre, y=genre_sales_other.Other_Sales)\n])\n\nfig.update_layout(barmode='group')\nfig.show()","a88877ed":"fig = go.Figure(data=[go.Pie(\n     labels = genre_sales_global.Genre,\n     values = genre_sales_global.Global_Sales,\n     textinfo = 'percent+label',\n     insidetextorientation='radial')\n])\nfig.show()","8dcdca2e":"new_games_PC = games[(games.Year >= 2010) & (games.Platform == 'PC')].head(10)\nnew_games_PC","dc57b24d":"new_games_PS4 = games[(games.Year >= 2010) & (games.Platform == 'PS4')].head(10)\nnew_games_PS4","70e68cdc":"new_games_XOne = games[(games.Year >= 2010) & (games.Platform == 'XOne')].head(10)\nnew_games_XOne","7279586f":"fig = go.Figure(data=[\n    go.Bar(name='Xbox One', x=new_games_XOne.Name, y=new_games_XOne.Global_Sales),\n    go.Bar(name='PC', x=new_games_PC.Name, y=new_games_PC.Global_Sales),\n    go.Bar(name='PS4', x=new_games_PS4.Name, y=new_games_PS4.Global_Sales)\n])\n\nfig.update_layout(barmode='group', title_text='Xbox \/ PC \/ PS4 TOP 10 Games Each Game Platform')\nfig.show()","771efb73":"## Other","24ace5e2":"# TOP Games Genres Sales Worldwide","940dfb92":"## EU","3153753e":"# Top 10 Worldwide Sales Games Globally","715fd54c":"## Worldwide","169b59c1":"# Year of Games Releasing & Distribution","111796b3":"# Xbox \/ PC \/ PS4 TOP 10 Games Each Game Platform","c3a58e26":"# TOP Games Genres Sales In Each Region","cffc6996":"# Top 10 Games Publishers","7da12b32":"## Japan","4ffd9bdc":"## NA","71509e90":"# TOP 10 Sales Games In Each Region","4ce65cd1":"# Number of different games per game platforms"}}