{"cell_type":{"3e082eac":"code","536d62f3":"code","f149b266":"code","94d9e0f6":"code","451a907b":"code","363f0994":"code","4043b080":"code","fd8f9c9d":"markdown","8e9736d3":"markdown","fde21e68":"markdown","009ee1e3":"markdown","85ebf5f4":"markdown"},"source":{"3e082eac":"!pip install kaggle-environments -U","536d62f3":"from kaggle_environments import make\nimport json","f149b266":"# Run this if you are using kaggle notebooks\n!cp -r ..\/input\/lux-ai-2021\/* .","94d9e0f6":"def agent(observation, configuration):\n    global game_state\n    actions = []\n    # your code here\n    return actions","451a907b":"# run another match but with our empty agent\nenv = make(\"lux_ai_2021\", configuration={\"seed\": 562124210, \"loglevel\": 2}, debug=False)\nsteps = env.run([\".\/agent.py\", \"simple_agent\"])\n# Show the game\nenv.render(mode=\"ipython\", width=800, height=600)","363f0994":"# save the replay as a file. if working locally this should appear in your current directory, otherwise you can download\n# from this kaggle notebook by opening the output section of the data panel on the right\nreplay = env.toJSON()\nwith open(\"replay.json\", \"w\") as f:\n    json.dump(replay, f)\n# this replay can then be watched here https:\/\/2021vis.lux-ai.org\/","4043b080":"!tar -czf submission.tar.gz *","fd8f9c9d":"You can use this notebook as an empty starter template, if you want more detail on how to use actors' functions check this cool notebook: [https:\/\/www.kaggle.com\/thalesgaluchi\/lux-ai-first-approach](https:\/\/www.kaggle.com\/thalesgaluchi\/lux-ai-first-approach)","8e9736d3":"Get your code and strategy for your agent inside agent function.","fde21e68":"Or you can replay it on your browser [here](https:\/\/2021vis.lux-ai.org\/)","009ee1e3":"# Create submission file","85ebf5f4":"# Watch your agent play\n\nUse the next code block to visualize your agent playing against a simple agent."}}