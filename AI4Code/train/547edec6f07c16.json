{"cell_type":{"d1d9f215":"code","62a49cb2":"code","865a8403":"code","edc77b9b":"code","9dc8fed2":"code","9b0f8afc":"code","feb1ffbd":"code","4c563935":"code","ae200580":"code","fc77c076":"code","9d678698":"code","c6e59ee0":"code","a2b812da":"code","63084dc8":"code","f17148dd":"code","f27c1bbb":"code","cd8a0ae2":"code","05ccde0d":"code","ec05d055":"code","6c707ca7":"code","6f76bdb5":"code","0c7093fd":"markdown","af1c1efd":"markdown","bbb8e331":"markdown","ede6ac27":"markdown","435b1b0b":"markdown","ee6e87bb":"markdown","9f3ef9f6":"markdown","a4604f14":"markdown","1b642f38":"markdown","b38b7658":"markdown"},"source":{"d1d9f215":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport math\nimport time\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","62a49cb2":"train = pd.read_csv(\"\/kaggle\/input\/covid19-global-forecasting-week-1\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/covid19-global-forecasting-week-1\/test.csv\")\nsubmission = pd.read_csv(\"\/kaggle\/input\/covid19-global-forecasting-week-1\/submission.csv\")\ntrain.head()\n","865a8403":"train.info()","edc77b9b":"test.info()","9dc8fed2":"train.shape #No. of Rows and Columns in Training dataset","9b0f8afc":"test.shape #No. of Rows and Columns in Testing dataset","feb1ffbd":"train.describe()","4c563935":"print(f'Total reported cases are {len(train)}.')\nprint(f'Total confirmed cases are {int(train[\"ConfirmedCases\"].sum())}.')\nprint(f'Total fatality cases are {int(train[\"Fatalities\"].sum())}.')\nprint(f'Total countries are {len(train[\"Country\/Region\"].unique())}.')","ae200580":"# Format date\ntrain[\"Date\"] = train[\"Date\"].apply(lambda x: x.replace(\"-\",\"\"))\ntrain[\"Date\"]  = train[\"Date\"].astype(int)\ntrain.head()","fc77c076":"# drop nan's\ntrain = train.drop(['Province\/State'],axis=1)\ntrain = train.dropna()\ntrain.isnull().sum()","9d678698":"# Do same to Test data\ntest[\"Date\"] = test[\"Date\"].apply(lambda x: x.replace(\"-\",\"\"))\ntest[\"Date\"]  = test[\"Date\"].astype(int)\n# deal with nan's for lat and lon\n#test = test.dropna()\ntest.isnull().sum()\n\n","c6e59ee0":"x = train[['Lat', 'Long', 'Date']]\ny1 = train[['ConfirmedCases']]\ny2 = train[['Fatalities']]\nx_test = test[['Lat', 'Long', 'Date']]","a2b812da":"from sklearn.ensemble import RandomForestClassifier\nTree_model = RandomForestClassifier(max_depth=200, random_state=0)","63084dc8":"##\nTree_model.fit(x,y1)\npred1 = Tree_model.predict(x_test)\npred1 = pd.DataFrame(pred1)\npred1.columns = [\"ConfirmedCases_prediction\"]","f17148dd":"pred1.head()","f27c1bbb":"\n\n##\nTree_model.fit(x,y2)\npred2 = Tree_model.predict(x_test)\npred2 = pd.DataFrame(pred2)\npred2.columns = [\"Death_prediction\"]\n\n","cd8a0ae2":"\nSub = pd.read_csv(\"..\/input\/covid19-global-forecasting-week-1\/submission.csv\")\nsub_new = Sub[[\"ForecastId\"]]\nsub_new","05ccde0d":"# submit\n\nsubmit = pd.concat([pred1,pred2,sub_new],axis=1)\nsubmit.head()\n","ec05d055":"# Clean\nsubmit.columns = ['ConfirmedCases', 'Fatalities', 'ForecastId']\nsubmit = submit[['ForecastId','ConfirmedCases', 'Fatalities']]\n\nsubmit[\"ConfirmedCases\"] = submit[\"ConfirmedCases\"].astype(int)\nsubmit[\"Fatalities\"] = submit[\"Fatalities\"].astype(int)","6c707ca7":"\nsubmit.describe()\n","6f76bdb5":"#Preparing the Submission file.\n\nsubmit.to_csv('submission.csv', index=False)","0c7093fd":"### Prepare Training","af1c1efd":"## Import Data","bbb8e331":"### ***Show Your support by Upvoting this Post*** \ud83d\udc4d \n\n### ***Follow me on Kaggle for getting more of such resources.***","ede6ac27":"### Drop NaNs","435b1b0b":"### Prepare for Submission","ee6e87bb":"# Data Cleaning","9f3ef9f6":"**Basic Information**","a4604f14":"## Coronavirus disease (COVID-19) Pandemic Forecasting using Random Forest\n\n    This is a simple NoteBook using a random forest. Feature engineering and tuning will help performance.\n\nCoronavirus disease (COVID-19) is an infectious disease caused by a newly discovered coronavirus.\n","1b642f38":"### Train Deaths Tree","b38b7658":"### Train Confirmed Cases Tree"}}