{"cell_type":{"4520251a":"code","ec8df98c":"markdown"},"source":{"4520251a":"import json\nfrom pathlib import Path\n\ndata_path = Path('\/kaggle\/input\/abstraction-and-reasoning-challenge\/')\ntrain_path = data_path \/ 'training'\neval_path = data_path \/ 'evaluation'\ntest_path = data_path \/ 'test'\n\ntrain_tasks = { task.stem: json.load(task.open()) for task in train_path.iterdir() } \nvalid_tasks = { task.stem: json.load(task.open()) for task in eval_path.iterdir() }\neval_tasks = { task.stem: json.load(task.open()) for task in eval_path.iterdir() }\n\n# Correct wrong cases:\n# 025d127b\nfor i in range(9, 12):\n    for j in range(3, 8):\n        train_tasks['025d127b']['train'][0]['output'][i][j] = 0\nfor i in range(7, 10):\n    for j in range(3, 6):\n        train_tasks['025d127b']['train'][0]['output'][i][j] = 2\ntrain_tasks['025d127b']['train'][0]['output'][8][4] = 0\n# ef135b50\ntrain_tasks['ef135b50']['test'][0]['output'][6][4] = 9\n# bd14c3bf\nfor i in range(3):\n    for j in range(5):\n        if valid_tasks['bd14c3bf']['test'][0]['input'][i][j] == 1:\n            valid_tasks['bd14c3bf']['test'][0]['input'][i][j] = 2\n# a8610ef7\nfor i in range(6):\n    for j in range(6):\n        if valid_tasks['a8610ef7']['test'][0]['output'][i][j] == 8:\n            valid_tasks['a8610ef7']['test'][0]['output'][i][j] = 5\nvalid_tasks['a8610ef7']['train'][3]['input'][0][1] = 2\nvalid_tasks['a8610ef7']['train'][3]['input'][5][1] = 2\n# 54db823b\nvalid_tasks['54db823b']['train'][0]['output'][2][3] = 3\nvalid_tasks['54db823b']['train'][0]['output'][2][4] = 9\n# e5062a87\nfor j in range(3, 7):\n    train_tasks['e5062a87']['train'][1]['output'][1][j] = 2\n# 1b60fb0c\ntrain_tasks['1b60fb0c']['train'][1]['output'][8][8] = 0\ntrain_tasks['1b60fb0c']['train'][1]['output'][8][9] = 0\n# 82819916\ntrain_tasks['82819916']['train'][0]['output'][4][5] = 4\n# fea12743\nfor i in range(11, 16):\n    for j in range(6):\n        if valid_tasks['fea12743']['train'][0]['output'][i][j] == 2:\n            valid_tasks['fea12743']['train'][0]['output'][i][j] = 8\n# 42a50994\ntrain_tasks['42a50994']['train'][0]['output'][1][0] = 8\ntrain_tasks['42a50994']['train'][0]['output'][0][1] = 8\n# f8be4b64\nfor j in range(19):\n    if valid_tasks['f8be4b64']['test'][0]['output'][12][j] == 0:\n        valid_tasks['f8be4b64']['test'][0]['output'][12][j] = 1\nvalid_tasks['f8be4b64']['test'][0]['output'][12][8] = 0\n# d511f180\ntrain_tasks['d511f180']['train'][1]['output'][2][2] = 9\n# 10fcaaa3\ntrain_tasks['10fcaaa3']['train'][1]['output'][4][7] = 8\n# cbded52d\ntrain_tasks['cbded52d']['train'][0]['input'][4][6] = 1\n# 11852cab\ntrain_tasks['11852cab']['train'][0]['input'][1][2] = 3\n# 868de0fa\nfor j in range(2, 9):\n    train_tasks['868de0fa']['train'][2]['input'][9][j] = 0\n    train_tasks['868de0fa']['train'][2]['input'][10][j] = 1\n    train_tasks['868de0fa']['train'][2]['input'][15][j] = 0\n    train_tasks['868de0fa']['train'][2]['input'][16][j] = 1\ntrain_tasks['868de0fa']['train'][2]['input'][15][2] = 1\ntrain_tasks['868de0fa']['train'][2]['input'][15][8] = 1\n# 6d58a25d\ntrain_tasks['6d58a25d']['train'][0]['output'][10][0] = 0\ntrain_tasks['6d58a25d']['train'][2]['output'][6][13] = 4\n# a9f96cdd\ntrain_tasks['a9f96cdd']['train'][3]['output'][1][3] = 0\n# 48131b3c\nvalid_tasks['48131b3c']['train'][2]['output'][4][4] = 0\n# 150deff5\naux = train_tasks['150deff5']['train'][2]['output'].copy()\ntrain_tasks['150deff5']['train'][2]['output'] = train_tasks['150deff5']['train'][2]['input'].copy()\ntrain_tasks['150deff5']['train'][2]['input'] = aux\n# 17cae0c1\nfor i in range(3):\n    for j in range(3, 6):\n        valid_tasks['17cae0c1']['test'][0]['output'][i][j] = 9\n# e48d4e1a\ntrain_tasks['e48d4e1a']['train'][3]['input'][0][9] = 5\ntrain_tasks['e48d4e1a']['train'][3]['output'][0][9] = 0\n# 8fbca751\nvalid_tasks['8fbca751']['train'][1]['output'][1][3] = 2\nvalid_tasks['8fbca751']['train'][1]['output'][2][3] = 8\n# 4938f0c2\nfor i in range(12):\n    for j in range(6,13):\n        if train_tasks['4938f0c2']['train'][2]['input'][i][j]==2:\n            train_tasks['4938f0c2']['train'][2]['input'][i][j] = 0\nfor i in range(5,11):\n    for j in range(7):\n        if train_tasks['4938f0c2']['train'][2]['input'][i][j]==2:\n            train_tasks['4938f0c2']['train'][2]['input'][i][j] = 0\n# 9aec4887\ntrain_tasks['9aec4887']['train'][0]['output'][1][4] = 8\n# b0f4d537\nfor i in range(9):\n    valid_tasks['b0f4d537']['train'][0]['output'][i][3] = 0\n    valid_tasks['b0f4d537']['train'][0]['output'][i][4] = 1\nvalid_tasks['b0f4d537']['train'][0]['output'][2][3] = 3\nvalid_tasks['b0f4d537']['train'][0]['output'][2][4] = 3\nvalid_tasks['b0f4d537']['train'][0]['output'][5][3] = 2\n# aa300dc3\nvalid_tasks['aa300dc3']['train'][1]['input'][1][7] = 5\nvalid_tasks['aa300dc3']['train'][1]['output'][1][7] = 5\nvalid_tasks['aa300dc3']['train'][1]['input'][8][2] = 5\nvalid_tasks['aa300dc3']['train'][1]['output'][8][2] = 5\n# ad7e01d0\nvalid_tasks['ad7e01d0']['train'][0]['output'][6][7] = 0\n# a8610ef7\nvalid_tasks['a8610ef7']['train'][3]['input'][0][1] = 0\nvalid_tasks['a8610ef7']['train'][3]['input'][5][1] = 0\nvalid_tasks['a8610ef7']['train'][3]['output'][0][1] = 0\nvalid_tasks['a8610ef7']['train'][3]['output'][5][1] = 0\n# 97239e3d\nvalid_tasks['97239e3d']['test'][0]['input'][14][6] = 0\nvalid_tasks['97239e3d']['test'][0]['input'][14][10] = 0\n# d687bc17\ntrain_tasks['d687bc17']['train'][2]['output'][7][1] = 4","ec8df98c":"A [discussion thread](https:\/\/www.kaggle.com\/c\/abstraction-and-reasoning-challenge\/discussion\/131021) asks us to list any errors that we have found in the tasks. Since there are quite a few tasks with errors, I think that it's worth it to have them corrected. So I went through all of the tasks reported on that thread and corrected them manually. This is now the first step I take when I preprocess the data. You can find the code below. I hope you find it useful."}}