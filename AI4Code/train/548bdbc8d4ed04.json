{"cell_type":{"4891d306":"code","6f4a8c1d":"code","ca2631df":"code","873e5f9e":"code","3c93b40d":"code","005cc1ea":"code","e17f07ae":"code","d41a0063":"code","d743f544":"code","6c3af1e7":"code","cae95eab":"code","5406c367":"code","f518a79e":"code","f882efbb":"code","5d7caa2a":"code","3f75c419":"code","c6faa20c":"code","0cf2c8e0":"code","293b6466":"code","a1fe2a02":"code","1c2a9478":"code","11d76d78":"code","4553b18b":"code","33692502":"code","7e19d4d1":"code","019d4111":"code","d2aed17b":"code","381e3916":"code","0ca3c493":"code","51a3fc42":"code","84bdea1d":"code","83c2ddb9":"code","6fec51b6":"code","945fc6eb":"markdown","e523d6dc":"markdown","e74818a2":"markdown","76c20705":"markdown","abc4cbb8":"markdown","30a0a597":"markdown","8e76cdee":"markdown","4ad17434":"markdown","735aa148":"markdown","8b530af5":"markdown","db8d067b":"markdown","c2f0619c":"markdown"},"source":{"4891d306":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","6f4a8c1d":"data1=pd.read_csv('..\/input\/cwurData.csv')\nprint(data1.info())\n","ca2631df":"print(data1.head(50))\n","873e5f9e":"universities=data1['institution']\nprint(universities)","3c93b40d":"tr_uni=data1[data1.country==\"Turkey\"]\nprint(tr_uni)","005cc1ea":"import matplotlib.pyplot as plt\nnew=data1.head(20)\nplt.scatter(new.country,new.institution,) #scatter plot example\nplt.xlabel('countries')\nplt.ylabel('universities')\nplt.title('rank')\nplt.show()","e17f07ae":"filtered=tr_uni[(tr_uni.world_rank)&(tr_uni.year==2015)]\nplt.hist(filtered.world_rank,bins=20) #histogram\nplt.title('Universities of Turkey')\nplt.xlabel(\"rank of institutions\")\nplt.show()","d41a0063":"#is there any university top of worl rank from turkey\n\nprint(tr_uni.world_rank < 100) #return boolean value\n\n\n        ","d743f544":"#1st, 2nd and 3th universities from turkey\nilk_3=tr_uni.institution[0:3]\nprint(ilk_3)\n\n","6c3af1e7":"usa_uni=data1[data1.country==\"USA\"]\nunis1=usa_uni.institution\nunis2=tr_uni.institution\ncount_of_usa_uni=unis1.count() #573\ncount_of_tr_uni=unis2.count() #20\nsizes=[573,20]\nlabels=['usa','tr']\ncolors=['red','blue']\nplt.pie(sizes,labels=labels,colors=colors,autopct='%1.1f%%')\nplt.show()\n","cae95eab":"#universities and patents will show together\nlist1=data1.institution.head(10) #only first 10 universities\nlist2=data1.patents.head(10)\nz=zip(list1,list2)\nz_list=list(z)\nprint(z_list)","5406c367":"avg=sum(data1.publications)\/2100 #count of university\ndata1[\"publication_level\"]=[\"high\" if i<avg else \"low\" for i in data1.publications]\ndata1[[\"publication_level\",\"institution\"]]","f518a79e":"data1.describe()","f882efbb":"#melt()\nexp_data=data1.head(20)    #copy first 20 datas for melt example\nexp_data\n","5d7caa2a":"melted_data=pd.melt(frame=exp_data, id_vars='institution',value_vars=['country','world_rank'])\nmelted_data","3f75c419":"#create dataframes\nframe1=data1.head()\nframe2=data1.tail()\n","c6faa20c":"#conc in rows\nconc_data_row = pd.concat([frame1,frame2],axis =0,ignore_index =True) #axis=0 add rows\nconc_data_row","0cf2c8e0":"frame1 = data1['institution'].head()\nframe2= data1[['world_rank','publications']].head()\nconc_data_col = pd.concat([frame1,frame2],axis =1) #axis=1 : add columns\nconc_data_col","293b6466":"#plotting all data\nplot_example = data1[[\"world_rank\",\"quality_of_education\",\"score\"]]\nplot_example.plot()","a1fe2a02":"# subplots\nplot_example = data1[[\"world_rank\",\"quality_of_education\",\"score\"]]\nplot_example.plot(subplots=True)\nplt.show()","1c2a9478":"# scatter plot  \nplot_example.plot(kind = \"scatter\",x=\"world_rank\",y = \"score\")\nplt.show()","11d76d78":"# hist plot  \nplot_example.plot(kind = \"hist\",y =\"score\",bins = 50)","4553b18b":"# indexing using square brackets\ndata1[\"institution\"][1]","33692502":"# using column attribute and row label\ndata1.institution[1]","7e19d4d1":"# using loc accessor\ndata1.loc[1,[\"institution\"]]","019d4111":"# Selecting only some columns\ndata1[[\"world_rank\",\"institution\"]]","d2aed17b":"#difference\nprint(type(data1[\"institution\"]))     # series\nprint(type(data1[[\"institution\"]]))   # data frames","381e3916":"#slicing\ndata1.loc[0:20,\"institution\":\"national_rank\"]   # 0 to 20 and institution to national rank","0ca3c493":"# Reverse slicing \ndata1.loc[20:0:-1,\"institution\":\"national_rank\"] ","51a3fc42":"# From something to end\ndata1.loc[0:20,\"publications\":] ","84bdea1d":"#combining filters\nfilter1=data1.score>70\nfilter2=data1.country=='Japan'\ndata1[filter1&filter2]","83c2ddb9":"data1[(data1.country=='France') & (data1.publications >=500)]","6fec51b6":"#group by,aggregation and sorting\ndata1.groupby('institution').patents.sum().sort_values(ascending=True)","945fc6eb":"**Read data from csv file**","e523d6dc":"**MANIPULATING DATAFRAMES**","e74818a2":"Firs 50 rows","76c20705":"**VISUAL EXPLORATORY DATA ANALYSIS**\n\n* plot\n* subplot\n* histogram","abc4cbb8":"**Zip lists**\nzip()","30a0a597":"**CONCATENATING DATA**\n\nconcenating two data frames","8e76cdee":"**FILTERING DATAFRAMES**\n","4ad17434":"**EXPLORATORY DATA ANALYSIS**\n\nAbout some methods:\ncount, mean, std, min, 25%, 50%, 75%, max \n","735aa148":"**TIDY DATA**","8b530af5":"** LIST COMPREHENS\u0130ON**\n \n We can use loops for building lists in a single line.\n\n","db8d067b":"New list from institution column","c2f0619c":"**MATPLOTLIB**"}}