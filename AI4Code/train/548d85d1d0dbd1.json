{"cell_type":{"c85c9589":"code","c05f1362":"code","fac33736":"code","96dadcc5":"code","bf07be9a":"code","ca2f9941":"code","ab554328":"code","42c73443":"code","c847e611":"code","36e999e6":"code","8ba93400":"code","0b1dc80e":"code","0ad68e92":"code","f8c662d6":"code","42558505":"code","a2b3c787":"code","f7c8e8d1":"code","f2c93d98":"code","fb330336":"code","09fe8780":"code","bd938d3d":"code","dc9700d9":"code","5e8d8e3d":"code","3555cf69":"code","a4e7bf88":"code","39023488":"code","3c37a8d6":"code","c0feed88":"code","25a38d63":"code","565d95b4":"code","3ca93ae0":"code","41af764c":"code","17526f06":"code","b58104d6":"code","70532456":"code","03f29563":"code","f840b742":"code","72f48a14":"code","19cd67a7":"code","326ecb72":"code","bbef0e80":"code","ca40cc2f":"code","eb30e22a":"code","01793849":"code","0a954d11":"code","70c5d090":"code","81fa3b27":"code","eeba6b87":"code","a8411416":"code","bf9592bf":"code","cb3f8915":"code","12501480":"code","1edb9b12":"code","de5b3b56":"code","c1e47b9c":"code","42230e3b":"code","60e77f1a":"code","f6f828ee":"code","0bb1109f":"code","73d8b08b":"code","7010961a":"code","7a766ffa":"code","911e7e88":"code","be231025":"markdown","0fd42a8f":"markdown","6556321a":"markdown","c56715ec":"markdown","b90e00e8":"markdown","66013c28":"markdown","dda39f9e":"markdown","085dd224":"markdown","d1b8a66f":"markdown","141bc07c":"markdown","41d10913":"markdown","585e3d5a":"markdown","482b629e":"markdown","d4b5ad0b":"markdown","4cc9fd02":"markdown","3fedf45e":"markdown"},"source":{"c85c9589":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c05f1362":"df = pd.read_csv('\/kaggle\/input\/internet-articles-data-with-users-engagement\/articles_data.csv')","fac33736":"df.head()","96dadcc5":"df.shape","bf07be9a":"import seaborn as sns\nsns.heatmap(df.isnull())","ca2f9941":"percent_missing = df.isnull().sum() * 100 \/ len(df)\nmissing_value_df = pd.DataFrame({'column_name': df.columns,\n                                 'percent_missing': percent_missing})","ab554328":"missing_value_df","42c73443":"df = df.drop(['author','url_to_image','content'],axis=1)","c847e611":"df = df.dropna()","36e999e6":"df.shape","8ba93400":"df.reset_index(inplace=True)","0b1dc80e":"df.head()","0ad68e92":"percent_missing = df.isnull().sum() * 100 \/ len(df)\nmissing_value_df = pd.DataFrame({'column_name': df.columns,\n                                 'percent_missing': percent_missing})","f8c662d6":"missing_value_df","42558505":"import nltk\nnltk.download('vader_lexicon')\nfrom nltk.sentiment.vader import SentimentIntensityAnalyzer\nsid = SentimentIntensityAnalyzer()\n","a2b3c787":"df['scores'] = df['title'].apply(lambda Review  : sid.polarity_scores(Review ))","f7c8e8d1":"df['compound'] = df['scores'].apply(lambda score_dict : score_dict['compound'])\ndf['title_sentiment'] = df['compound'].apply(lambda c : 'pos' if c>=0 else 'neg')\ndf.head()","f2c93d98":"df['title_sentiment'].value_counts()","fb330336":"df['published_at'] = pd.to_datetime(df.published_at)","09fe8780":"df.head()","bd938d3d":"df['date'] = df['published_at'].dt.date\ndf['hour'] = df['published_at'].dt.hour\ndf['minute'] = df['published_at'].dt.minute\ndf['second'] = df['published_at'].dt.second","dc9700d9":"df.head()","5e8d8e3d":"df_new = df.copy()","3555cf69":"df_new.columns","a4e7bf88":"df_new = df_new.drop(['Unnamed: 0','url','scores','published_at','compound','minute','second'],axis=1)","39023488":"df_new.head()","3c37a8d6":"df_new['engagement_reaction_count'].value_counts()","c0feed88":"df_new.shape","25a38d63":"import seaborn as sns","565d95b4":"sns.catplot(x='top_article',y='hour',hue='title_sentiment',kind='bar',data=df_new)","3ca93ae0":"sns.catplot(y='engagement_comment_count',x='top_article',hue='title_sentiment',data=df_new)","41af764c":"sns.catplot(y='engagement_comment_count',x='top_article',hue='title_sentiment',data=df_new)","17526f06":"df_new.head()","b58104d6":"df_new['source_name'].value_counts()","70532456":"from sklearn import preprocessing\nlabel_encoder = preprocessing.LabelEncoder()\ndf_new['source_name'] = label_encoder.fit_transform(df_new['source_name'])","03f29563":"df_new['title_sentiment'] = label_encoder.fit_transform(df_new['title_sentiment'])","f840b742":"df_new.head()","72f48a14":"x = df_new[['source_name','engagement_reaction_count','engagement_comment_count','engagement_comment_plugin_count','engagement_share_count','title_sentiment','hour']]\ny = df_new['top_article']","19cd67a7":"x.head()","326ecb72":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.25,random_state=101,stratify=y)","bbef0e80":"from sklearn.linear_model import LogisticRegression\nlog = LogisticRegression()\nlog.fit(x_train,y_train)\nlog.score(x_test,y_test)","ca40cc2f":"from sklearn.metrics import classification_report,confusion_matrix\n","eb30e22a":"y_pred = log.predict(x_test)\ncf_matrix = confusion_matrix(y_test,y_pred)\n","01793849":"sns.heatmap(cf_matrix\/np.sum(cf_matrix), annot=True, \n            fmt='.2%', cmap='Blues')","0a954d11":"from sklearn.svm import SVC\nsvc = SVC()\nsvc.fit(x_train,y_train)\nsvc.score(x_test,y_test)","70c5d090":"y_pred = svc.predict(x_test)\ncf_matrix = confusion_matrix(y_test,y_pred)\nsns.heatmap(cf_matrix\/np.sum(cf_matrix), annot=True, \n            fmt='.2%', cmap='coolwarm')","81fa3b27":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors=30)\nknn.fit(x_train,y_train)\nknn.score(x_test,y_test)","eeba6b87":"y_pred = knn.predict(x_test)\ncf_matrix = confusion_matrix(y_test,y_pred)\nsns.heatmap(cf_matrix\/np.sum(cf_matrix), annot=True, \n            fmt='.2%', cmap='PiYG')","a8411416":"from sklearn.tree import DecisionTreeClassifier\ntree = DecisionTreeClassifier()\ntree.fit(x_train,y_train)\ntree.score(x_test,y_test)","bf9592bf":"y_pred = tree.predict(x_test)\ncf_matrix = confusion_matrix(y_test,y_pred)\nsns.heatmap(cf_matrix\/np.sum(cf_matrix), annot=True, \n            fmt='.2%', cmap='PuOr')","cb3f8915":"from sklearn.ensemble import RandomForestClassifier\nforest = RandomForestClassifier(n_estimators=200)\nforest.fit(x_train,y_train)\nforest.score(x_test,y_test)","12501480":"y_pred = forest.predict(x_test)\ncf_matrix = confusion_matrix(y_test,y_pred)\nsns.heatmap(cf_matrix\/np.sum(cf_matrix), annot=True, \n            fmt='.2%', cmap='Spectral')","1edb9b12":"forest.feature_importances_","de5b3b56":"x_train.head(1)","c1e47b9c":"#defining baseline models\nlevel0 = list()\nlevel0.append(('log',LogisticRegression()))\nlevel0.append(('svc',SVC()))\nlevel0.append(('knn',KNeighborsClassifier(n_neighbors=30)))\nlevel0.append(('tree',DecisionTreeClassifier()))\nlevel0.append(('forest',RandomForestClassifier()))\n","42230e3b":"from sklearn.ensemble import StackingClassifier\n# define meta learner model\nlevel1 = LogisticRegression()\n# define the stacking ensemble\nmodel = StackingClassifier(estimators=level0, final_estimator=level1, cv=5)","60e77f1a":"model.fit(x_train,y_train)","f6f828ee":"model.score(x_test,y_test)","0bb1109f":"y_pred = model.predict(x_test)\ncf_matrix = confusion_matrix(y_test,y_pred)\nsns.heatmap(cf_matrix\/np.sum(cf_matrix), annot=True, \n            fmt='.2%', cmap='Blues')","73d8b08b":"from sklearn.cluster import KMeans\nkm = KMeans(n_clusters=2)\nkm.fit(x_train)","7010961a":"y_pred = km.predict(x_test)","7a766ffa":"\ncf_matrix = confusion_matrix(y_test,y_pred)\nsns.heatmap(cf_matrix\/np.sum(cf_matrix), annot=True, \n            fmt='.2%', cmap='coolwarm')","911e7e88":"classification_report(y_test,y_pred)","be231025":"I will drop columns that have Missing Percentage more than 5 and others i would drop empty values","0fd42a8f":"# ENSEMBLE METHODS","6556321a":"# KNN","c56715ec":"FEATURE IMPORTANCES ACCORDING TO RANDOM FOREST ALGORITHM","b90e00e8":"Let's try and see if unsupervised learning could classify it or not","66013c28":"# STACKING ALL ALGORITHMS","dda39f9e":"Now our dataset is ready but we would like to see if Title is having a positive ore negative sentiment on reader , so we would do some sentiment analysis on Title , Title is the very first thing some one reads","085dd224":"MODEL BUILDING","d1b8a66f":"# DECISION TREE","141bc07c":"LET US REMOVE COLUMNS THAT ARE NOT OF MUCH USE","41d10913":"# SVM","585e3d5a":"TOP 3 most important features for our model to predict if article would be TOP ARTICLE OR NOT\n\n1.SOURCE NAME\n\n2.AT WHICH HOUR ARTICLE WAS PUBLISHED\n\n3.TOTAL SHARES FOR ARTICLE\n","482b629e":"# Using Vader Lexicon","d4b5ad0b":"Dealing With Time Stamp","4cc9fd02":"# LOGISTIC REGRESSION","3fedf45e":"Converting DATA to feed into model"}}