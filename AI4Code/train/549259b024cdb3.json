{"cell_type":{"3887a210":"code","2ed8e5f6":"code","1faa3101":"code","cc3dec7e":"code","63cd6931":"code","7457eae6":"markdown","6874726d":"markdown"},"source":{"3887a210":"import os\nimport pandas as pd\nimport warnings\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom IPython.display import display, Markdown\n\nsns.set()\nwarnings.filterwarnings('ignore')","2ed8e5f6":"ffr_df = pd.read_csv('..\/input\/freeFormResponses.csv')\nq38 = ffr_df[ffr_df['Q38_OTHER_TEXT'].notnull()]['Q38_OTHER_TEXT'].iloc[1:]\nprint(f'Number of non-null answers: {q38.shape[0]}')","1faa3101":"print(*q38.tolist()[:100], sep='\\n')","cc3dec7e":"infos = [\n    # name, matching pattern, url\n    ('Data Elixir', r'data\\s*elixir', 'https:\/\/dataelixir.com\/'),\n    ('Data Machina', r'data\\s*machina', 'https:\/\/www.getrevue.co\/profile\/datamachina'),\n    ('Analytics Vidhya', r'analytics\\s*vid[h]*ya', 'https:\/\/www.analyticsvidhya.com\/'),\n    ('DataCamp', r'data\\s*camp', 'https:\/\/www.datacamp.com'),\n    ('Data Science Weekly', r'data\\s*science\\s*weekly', 'https:\/\/www.datascienceweekly.org\/'),\n    ('SuperDataScience', r'super\\s*data\\s*science', 'https:\/\/www.superdatascience.com\/'),\n    ('Data Science Central', r'data\\s*science\\s*central', 'https:\/\/www.datasciencecentral.com\/'),\n    ('This Week in Machine Learning and AI Podcast', r'twiml', 'https:\/\/twimlai.com\/'),\n    ('DataFramed', r'data\\s*framed', 'https:\/\/www.datacamp.com\/community\/tags\/dataframed'),\n    ('Towards Data Science', r'towards\\s*data', 'https:\/\/towardsdatascience.com\/'),\n    ('R Bloggers', r'r[\\s-]*blogger', 'https:\/\/www.r-bloggers.com\/'),\n    ('ods.ai', r'ods.ai|open\\s*data\\s*science', 'https:\/\/opendatascience.slack.com'),\n    ('Two Minute Papers', r'two\\s*minutes*\\s*paper', 'https:\/\/www.youtube.com\/channel\/UCbfYPyITQ-7l4upoX8nvctg'),\n    ('Machine Learning Mastery', r'machine\\s*learning\\s*mastery', 'https:\/\/machinelearningmastery.com\/'),\n    ('sentdex', 'sentdex', 'https:\/\/www.youtube.com\/user\/sentdex'),\n    ('Habrahabr', 'habr', 'https:\/\/habr.com\/'),\n    ('Medium', 'medium', 'https:\/\/medium.com\/'),\n    ('GitHub', 'github', 'https:\/\/github.com\/'),\n    ('LinkedIn', 'linkedin', 'https:\/\/www.linkedin.com\/'),\n    ('Facebook', 'facebook', 'https:\/\/www.facebook.com\/'),\n    ('Stack Overflow', 'stack\\s*overflow', 'https:\/\/stackoverflow.com\/'),\n]\n\n# get the number of matches\nmatches = [q38[q38.str.lower().str.contains(pat)].shape[0] for _, pat, _ in infos]\n\n# sort the results\ninfos = [x for _, x in sorted(zip(matches, infos), reverse=True)]\nnames = [name for name, _, _ in infos]\nmatches = sorted(matches, reverse=True)\n\n# display the results in markdown\nmd_str = '''\n|Name|Matches|URL|\n|-|-|-|\n'''\n\nfor match, (name, _, url) in zip(matches, infos):\n    row = f'|{name}|{match}|{url}|\\n'\n    md_str += row\n\ndisplay(Markdown(md_str))","63cd6931":"x = list(reversed(range(len(matches))))\nplt.figure(figsize=(8, 10))\nplt.barh(x, matches)\nplt.yticks(x, names, fontsize=12)\nplt.xlabel('Number of Matches')\nplt.ylabel('Media Source');","7457eae6":"I subscribe to various kinds of websites and podcast channels related to data science and machine learning, and check them almost everyday.\nIn this kernel, I'll explore the 2018 Kaggle ML & DS Survey Challenge dataset, specifically Q38:\n## Q38: Who\/what are your favorite media sources that report on data science topics?","6874726d":"We find:\n- ods.ai and Analytics Vidhya dominate\n- People use LinkedIn a lot\n- Some youtube and podcast channels rank in"}}