{"cell_type":{"9328c1af":"code","46b83b14":"code","306cce44":"code","24ad9944":"code","b7e6c599":"code","d7a0754d":"code","ad1177cf":"code","b9a3ed94":"code","890cc74e":"code","c26e696c":"code","7e7a3ca3":"code","7e62a0da":"code","bbf17c43":"code","7ae98600":"code","e79b0054":"code","807a7f48":"code","7aad767b":"code","e0a2afba":"code","49e7e398":"code","4d2b9772":"code","e5d84798":"code","0c11b589":"code","f273ed1a":"code","9494ac85":"code","eb7be4b1":"code","c22e527b":"code","69ff5061":"code","aaac9ffc":"code","cc78cd97":"code","3e8a9397":"code","13baa0a0":"code","475457b9":"code","79142165":"code","b042ee04":"code","5446e280":"code","f14f21f9":"code","6bc3332d":"code","79c172d5":"code","415b5b37":"code","294b51f1":"code","74ad3bbe":"code","d803eb12":"code","587b1a38":"code","a9aafdf7":"code","9a4adc07":"code","6cfda4bb":"code","7aa65e71":"code","24f87d5f":"code","65104938":"markdown","d2dd0587":"markdown","ea17e875":"markdown","94bf6570":"markdown","0403d649":"markdown","56693872":"markdown","d802b14a":"markdown","908da9c8":"markdown","fda5b664":"markdown","02ade381":"markdown","3bff6d27":"markdown","ccbf39ff":"markdown","61cdaa96":"markdown","26a7a171":"markdown","f0f3aa04":"markdown","0104e1a1":"markdown","f1cabebd":"markdown","a3d4824e":"markdown","3828b168":"markdown","dfcb5dc9":"markdown","099f04c5":"markdown","19f10e4a":"markdown","fec805e5":"markdown","1dd9e6e6":"markdown","c4aa8de7":"markdown","69f38e81":"markdown","80114c36":"markdown","fb020273":"markdown","3a773c1d":"markdown","0033f0b5":"markdown","47073912":"markdown","663c7bca":"markdown","43ea836c":"markdown","373d90fd":"markdown","9ac49e42":"markdown","ed8c6a2f":"markdown","4cf3e254":"markdown","84bf93d7":"markdown","2b490013":"markdown","a8041a51":"markdown","a797a5a0":"markdown","ee44d065":"markdown"},"source":{"9328c1af":"import numpy as np\nimport pandas as pd\n\nimport plotly.express as px\n\nfrom iso3166 import countries\nfrom statsmodels.tsa.arima_model import ARIMA\nfrom statsmodels.tsa.seasonal import seasonal_decompose\n\nimport matplotlib\nimport matplotlib.pyplot as plt\n\nfrom datetime import datetime, timedelta\nfrom collections import OrderedDict","46b83b14":"df = pd.read_csv('\/kaggle\/input\/all-space-missions-from-1957\/Space_Corrected.csv')\n\ndf.columns = [\n    'Unnamed: 0', \n    'Unnamed: 0.1', \n    'Company Name', \n    'Location', \n    'Datum', \n    'Detail', \n    'Status Rocket', \n    'Rocket', \n    'Status Mission'\n]\n\ndf = df.drop(['Unnamed: 0', 'Unnamed: 0.1'], axis=1)\ndf.head()","306cce44":"missed = pd.DataFrame()\nmissed['column'] = df.columns\npercent = list()\n\nfor col in df.columns:\n    percent.append(round(100* df[col].isnull().sum() \/ len(df), 2))\n\nmissed['percent'] = percent\nmissed = missed.sort_values('percent')\nmissed = missed[missed['percent']>0]\n\nfig = px.bar(\n    missed, \n    x='percent', \n    y=\"column\", \n    orientation='h', \n    title='Missed values percent for every column (percent > 0)', \n    width=600,\n    height=200 \n)\n\nfig.show()","24ad9944":"ds = df['Company Name'].value_counts().reset_index()\n\nds.columns = [\n    'company', \n    'number of starts'\n]\n\nds = ds.sort_values(['number of starts'])\n\nfig = px.bar(\n    ds, \n    x='number of starts', \n    y=\"company\", \n    orientation='h', \n    title='Number of launches by every company', \n    width=800,\n    height=1000 \n)\n\nfig.show()","b7e6c599":"ds = df['Status Rocket'].value_counts().reset_index()\n\nds.columns = [\n    'status', \n    'count'\n]\n\nfig = px.pie(\n    ds, \n    values='count', \n    names=\"status\", \n    title='Rocket status', \n    width=500, \n    height=500\n)\n\nfig.show()","d7a0754d":"ds = df['Status Mission'].value_counts().reset_index()\n\nds.columns = [\n    'mission_status', \n    'count'\n]\n\nfig = px.bar(\n    ds, \n    x='mission_status', \n    y=\"count\", \n    orientation='v', \n    title='Mission Status distribution', \n    width=500,\n    height=500\n)\n\nfig.show()","ad1177cf":"df['Rocket'] = df['Rocket'].fillna(0.0).str.replace(',', '')\ndf['Rocket'] = df['Rocket'].astype(np.float64).fillna(0.0)\ndf['Rocket'] = df['Rocket'] * 1000000","b9a3ed94":"df.loc[df['Rocket']>4000000000, 'Rocket'] = 0.0\n\nfig = px.histogram(\n    df, \n    \"Rocket\", \n    nbins=50, \n    title='Rocket Value distribution', \n    width=700, \n    height=500\n)\n\nfig.show()","890cc74e":"countries_dict = {\n    'Russia' : 'Russian Federation',\n    'New Mexico' : 'USA',\n    \"Yellow Sea\": 'China',\n    \"Shahrud Missile Test Site\": \"Iran\",\n    \"Pacific Missile Range Facility\": 'USA',\n    \"Barents Sea\": 'Russian Federation',\n    \"Gran Canaria\": 'USA'\n}\n\ndf['country'] = df['Location'].str.split(', ').str[-1].replace(countries_dict)","c26e696c":"sun = df.groupby(['country', 'Company Name', 'Status Mission'])['Datum'].count().reset_index()\n\nsun.columns = [\n    'country', \n    'company', \n    'status', \n    'count'\n]\n\nfig = px.sunburst(\n    sun, \n    path=[\n        'country', \n        'company', \n        'status'\n    ], \n    values='count', \n    title='Sunburst chart for all countries',\n    width=600,\n    height=600\n)\n\nfig.show()","7e7a3ca3":"country_dict = dict()\nfor c in countries:\n    country_dict[c.name] = c.alpha3\n    \ndf['alpha3'] = df['country']\ndf = df.replace(\n    {\n        \"alpha3\": country_dict\n    }\n)\ndf.loc[df['country'] == \"North Korea\", 'alpha3'] = \"PRK\"\ndf.loc[df['country'] == \"South Korea\", 'alpha3'] = \"KOR\"\n\ndf","7e62a0da":"def plot_map(dataframe, target_column, title, width=800, height=600):\n    mapdf = dataframe.groupby(['country', 'alpha3'])[target_column].count().reset_index()\n    fig = px.choropleth(\n        mapdf, \n        locations=\"alpha3\", \n        hover_name=\"country\", \n        color=target_column, \n        projection=\"natural earth\", \n        width=width, \n        height=height, \n        title=title\n    )\n    fig.show()","bbf17c43":"plot_map(\n    dataframe=df, \n    target_column='Status Mission', \n    title='Number of starts per country'\n)","7ae98600":"fail_df = df[df['Status Mission'] == 'Failure']\nplot_map(fail_df, 'Status Mission', 'Number of Fails per country')","e79b0054":"data = df.groupby(['Company Name'])['Rocket'].sum().reset_index()\ndata = data[data['Rocket'] > 0]\n\ndata.columns = [\n    'company', \n    'money'\n]\n\nfig = px.bar(\n    data, \n    x='company', \n    y=\"money\", \n    orientation='v', \n    title='Total money spent on missions', \n    width=800,\n    height=600\n)\n\nfig.show()","807a7f48":"money = df.groupby(['Company Name'])['Rocket'].sum()\nstarts = df['Company Name'].value_counts().reset_index()\n\nstarts.columns = [\n    'Company Name', \n    'count'\n]\n\nav_money_df = pd.merge(money, starts, on='Company Name')\nav_money_df['avg'] = av_money_df['Rocket'] \/ av_money_df['count']\nav_money_df = av_money_df[av_money_df['avg']>0]\nav_money_df = av_money_df.reset_index()\n\nfig = px.bar(\n    av_money_df, \n    x='Company Name', \n    y=\"avg\", \n    orientation='v', \n    title='Average money per one launch', \n    width=800,\n    height=600\n)\n\nfig.show()","7aad767b":"df['date'] = pd.to_datetime(df['Datum'])\ndf['year'] = df['date'].apply(lambda datetime: datetime.year)\ndf['month'] = df['date'].apply(lambda datetime: datetime.month)\ndf['weekday'] = df['date'].apply(lambda datetime: datetime.weekday())","e0a2afba":"ds = df['year'].value_counts().reset_index()\n\nds.columns = [\n    'year', \n    'count'\n]\n\nfig = px.bar(\n    ds, \n    x='year', \n    y=\"count\", \n    orientation='v', \n    title='Missions number by year', \n    width=800\n)\n\nfig.show()","49e7e398":"ds = df['month'].value_counts().reset_index()\n\nds.columns = [\n    'month', \n    'count'\n]\n\nfig = px.bar(\n    ds, \n    x='month',\n    y=\"count\", \n    orientation='v', \n    title='Missions number by month', \n    width=800\n)\n\nfig.show()","4d2b9772":"ds = df['weekday'].value_counts().reset_index()\n\nds.columns = [\n    'weekday', \n    'count'\n]\n\nfig = px.bar(\n    ds, \n    x='weekday', \n    y=\"count\", \n    orientation='v',\n    title='Missions number by weekday', \n    width=800\n)\n\nfig.show()","e5d84798":"res = list()\nfor group in df.groupby(['Company Name']):\n    res.append(group[1][['Company Name', 'year']].head(1))\n\ndata = pd.concat(res)\ndata = data.sort_values('year')\ndata['year'] = 2020 - data['year']\n\nfig = px.bar(\n    data, \n    x=\"year\", \n    y=\"Company Name\", \n    orientation='h', \n    title='Years from last start',\n    width=900,\n    height=1000\n)\n\nfig.show()","0c11b589":"money = df[df['Rocket']>0]\nmoney = money.groupby(['year'])['Rocket'].mean().reset_index()\n\nfig = px.line(\n    money, \n    x=\"year\", \n    y=\"Rocket\",\n    title='Average money spent by year',\n    width=800\n)\n\nfig.show()","f273ed1a":"ds = df.groupby(['Company Name'])['year'].nunique().reset_index()\n\nds.columns = [\n    'company', \n    'count'\n]\n\nfig = px.bar(\n    ds, \n    x=\"company\", \n    y=\"count\", \n    title='Most experienced companies (years of launches)'\n)\n\nfig.show()","9494ac85":"data = df.groupby(['Company Name', 'year'])['Status Mission'].count().reset_index()\n\ndata.columns = [\n    'company', \n    'year', \n    'starts'\n]\n\ntop5 = data.groupby(['company'])['starts'].sum().reset_index().sort_values('starts', ascending=False).head(5)['company'].tolist()","eb7be4b1":"data = data[data['company'].isin(top5)]\n\nfig = px.line(\n    data, \n    x=\"year\", \n    y=\"starts\", \n    title='Dynamic of top 5 companies by number of starts', \n    color='company'\n)\n\nfig.show()","c22e527b":"data = df.groupby(['Company Name', 'year'])['Status Mission'].count().reset_index()\n\ndata.columns = [\n    'company', \n    'year', \n    'starts'\n]\n\ndata = data[data['year']==2020]","69ff5061":"fig = px.bar(\n    data, \n    x=\"company\", \n    y=\"starts\", \n    title='Number of starts for 2020', \n    width=800\n)\n\nfig.show()","aaac9ffc":"data = df[df['Status Mission']=='Failure']\ndata = data.groupby(['Company Name', 'year'])['Status Mission'].count().reset_index()\n\ndata.columns = [\n    'company', \n    'year', \n    'starts'\n]\n\ndata = data[data['year']==2020]\n\nfig = px.bar(\n    data, \n    x=\"company\", \n    y=\"starts\", \n    title='Failures in 2020', \n    width=600\n)\n\nfig.show()","cc78cd97":"data = df[df['Company Name'] == 'CASC']\ndata = data.groupby(['year'])['Company Name'].count().reset_index()\ndata = data[data['year'] < 2020]\n\ndata.columns = [\n    'year', \n    'launches'\n]\n\nfig = px.line(\n    data, \n    x=\"year\", \n    y=\"launches\", \n    title='Launches per year for CASC'\n)\n\nfig.show()","3e8a9397":"model = ARIMA(\n    data['launches'], \n    order=(2,2,1)\n)\n\nmodel_fit = model.fit(disp=0)\nmodel_fit.summary()","13baa0a0":"model_fit.plot_predict(dynamic=False)\nplt.show()","475457b9":"preds, _, _ = model_fit.forecast(6, alpha=0.05)\n\npreds = preds.tolist()\npreds = [int(item) for item in preds]\nmonths = [\n    '2020', \n    '2021', \n    '2022', \n    '2023', \n    '2024', \n    '2025'\n]\n\nnew_df = pd.DataFrame()\nnew_df['year'] = months\nnew_df['launches'] = preds\ndata = pd.concat([data, new_df])\n\nfig = px.line(\n    data, \n    x=\"year\", \n    y=\"launches\", \n    title='Launches per year prediction for CASC',\n    width=800\n)\n\nfig.show()","79142165":"cold = df[df['year'] <= 1991]\ncold['country'].unique()\ncold.loc[cold['country'] == 'Kazakhstan', 'country'] = 'USSR'\ncold.loc[cold['country'] == 'Russian Federation', 'country'] = 'USSR'\ncold = cold[(cold['country'] == 'USSR') | (cold['country'] == 'USA')]","b042ee04":"ds = cold['country'].value_counts().reset_index()\n\nds.columns = [\n    'contry', \n    'count'\n]\n\nfig = px.pie(\n    ds, \n    names='contry', \n    values=\"count\", \n    title='Number of launches', \n    width=500\n)\n\nfig.show()","5446e280":"ds = cold.groupby(['year', 'country'])['alpha3'].count().reset_index()\nds.columns = ['year', 'country', 'launches']\n\nfig = px.bar(\n    ds, \n    x=\"year\", \n    y=\"launches\", \n    color='country', \n    title='USA vs USSR: launches year by year',\n    width=800\n)\n\nfig.show()","f14f21f9":"ds = cold.groupby(['year', 'country'])['Company Name'].nunique().reset_index()\nds.columns = ['year', 'country', 'companies']\n\nfig = px.bar(\n    ds, \n    x=\"year\", \n    y=\"companies\", \n    color='country', \n    title='USA vs USSR: number of companies year by year',\n    width=800\n)\n\nfig.show()","6bc3332d":"ds = cold[cold['Status Mission'] == 'Failure']\nds = ds.groupby(['year', 'country'])['alpha3'].count().reset_index()\nds.columns = ['year', 'country', 'failures']\n\nfig = px.bar(\n    ds, \n    x=\"year\", \n    y=\"failures\", \n    color='country', \n    title='USA vs USSR: failures year by year', \n    width=800\n)\n\nfig.show()","79c172d5":"ds = df.groupby(['year', 'country'])['Status Mission'].count().reset_index().sort_values(['year', 'Status Mission'], ascending=False)\nds = pd.concat([group[1].head(1) for group in ds.groupby(['year'])])\nds.columns = ['year', 'country', 'launches']\n\nfig = px.bar(\n    ds, \n    x=\"year\", \n    y=\"launches\", \n    color='country', \n    title='Leaders by launches for every year (countries)'\n)\n\nfig.show()","415b5b37":"ds = df[df['Status Mission']=='Success']\nds = ds.groupby(['year', 'country'])['Status Mission'].count().reset_index().sort_values(['year', 'Status Mission'], ascending=False)\nds = pd.concat([group[1].head(1) for group in ds.groupby(['year'])])\nds.columns = ['year', 'country', 'launches']\n\nfig = px.bar(\n    ds, \n    x=\"year\", \n    y=\"launches\", \n    color='country', \n    title='Leaders by success launches for every year (countries)',\n    width=800\n)\n\nfig.show()","294b51f1":"ds = df.groupby(['year', 'Company Name'])['Status Mission'].count().reset_index().sort_values(['year', 'Status Mission'], ascending=False)\nds = pd.concat([group[1].head(1) for group in ds.groupby(['year'])])\nds.columns = ['year', 'company', 'launches']\n\nfig = px.bar(\n    ds, \n    x=\"year\", \n    y=\"launches\", \n    color='company', \n    title='Leaders by launches for every year (companies)',\n    width=800\n)\n\nfig.show()","74ad3bbe":"ds = df[df['Status Mission']=='Success']\nds = ds.groupby(['year', 'Company Name'])['Status Mission'].count().reset_index().sort_values(['year', 'Status Mission'], ascending=False)\nds = pd.concat([group[1].head(1) for group in ds.groupby(['year'])])\nds.columns = ['year', 'company', 'launches']\n\nfig = px.bar(\n    ds, \n    x=\"year\", \n    y=\"launches\", \n    color='company', \n    title='Leaders by success launches for every year (companies)',\n    width=800\n)\n\nfig.show()","d803eb12":"df['month_year'] = df['year'].astype(str) + '-' + df['month'].astype(str)\ndf['month_year'] = pd.to_datetime(df['month_year']).dt.to_period('M')\nds = df.groupby(['month_year'])['alpha3'].count().reset_index()\nds.columns = ['month_year', 'count']\nds['month_year'] = ds['month_year'].astype(str)\n\nfig = px.line(\n    ds, \n    x='month_year', \n    y='count', \n    orientation='v', \n    title='Launches by months' \n)\n\nfig.show()","587b1a38":"dates = ['1957-10-01', '2020-08-02']\nstart, end = [datetime.strptime(_, \"%Y-%m-%d\") for _ in dates]\ndd = pd.DataFrame(\n    list(\n        OrderedDict(((start + timedelta(_)).strftime(r\"%Y-%m\"), None) for _ in range((end - start).days)).keys()\n    ), \n    columns=['date']\n)\ndd['date'] = pd.to_datetime(dd['date'])\nds['month_year'] = pd.to_datetime(ds['month_year'])\nres = pd.merge(ds, dd, how='outer', left_on='month_year', right_on='date')\nres = res.sort_values('date')[['date', 'count']]\nres = res.fillna(0).set_index('date')","a9aafdf7":"result = seasonal_decompose(res, model='additive', freq=12)\nfig = result.plot()\nmatplotlib.rcParams['figure.figsize'] = [20, 15]\n\nplt.show()","9a4adc07":"ts = (result.trend + result.seasonal).reset_index()\nts.columns = ['date', 'count']\nts['origin'] = 'cleaned'\ndres = res.reset_index()\ndres['origin'] = 'original'\ndata = pd.concat([dres, ts])","6cfda4bb":"fig = px.line(\n    data, \n    x='date', \n    y='count', \n    color='origin', \n    orientation='v', \n    title='Original and cleaned time series', \n    width=800\n)\n\nfig.show()","7aa65e71":"model = ARIMA(ds['count'], order=(10,1,2))\nmodel_fit = model.fit()\n\nmodel_fit.plot_predict(dynamic=False)\n\nplt.show()","24f87d5f":"preds, _, _ = model_fit.forecast(16)\npreds = preds.tolist()\npreds = [int(item) for item in preds]\nmonths = [\n    '2020-09-01', '2020-10-01', '2020-11-01', '2020-12-01', \n    '2021-01-01', '2021-02-01', '2021-03-01', '2021-04-01', \n    '2021-05-01', '2021-06-01', '2021-07-01', '2021-08-01', \n    '2021-09-01', '2021-10-01', '2021-11-01', '2021-12-01'\n]\n\nnew_df = pd.DataFrame()\nnew_df['month_year'] = months\nnew_df['count'] = preds\ndata = pd.concat([ds, new_df])\n\nfig = px.line(\n    data, \n    x=\"month_year\", \n    y=\"count\", \n    title='Launches per month prediction'\n)\n\nfig.show()","65104938":"<a id=\"7\"><\/a>\n<h2 style='background:black; border:0; color:white'><center>7. Time series decomposition<center><h2>","d2dd0587":"<a id=\"4\"><\/a>\n<h2 style='background:black; border:0; color:white'><center>4. Predict dynamics for CASC<center><h2>","ea17e875":"Space race was an important part in the cold war between USA and USSR. So lets check the results of it. ","94bf6570":"Simple modeling","0403d649":"December 1971 is most active month for Launch attempts.","56693872":"<a id=\"5\"><\/a>\n<h2 style='background:black; border:0; color:white'><center>5. USA vs USSR analysis<center><h2>","d802b14a":"And as last part of this section, lets see Value distribution for Rockets. A lot of them have missed values so lets set `0` for this samples.","908da9c8":"Dynamics for some companies.","fda5b664":"How many Failures evry country has?","02ade381":"## Hello everyone!\n\n### In this kernel I am going to present basic EDA with interactive charts. Also we will see some interesting insights and prepare basic model for time series forecating. Let's do it!","3bff6d27":"<h1><center>Space missions data understanding, visualization and analysis<\/center><\/h1>\n\n<center><img src=\"https:\/\/specials-images.forbesimg.com\/imageserve\/5ec807d92ce8db0007986fb2\/960x0.jpg?fit=scale\"><\/center>","ccbf39ff":"From this short chart we can see that we have only 1 column that contains missed values. It is `Rocket` column with about 80% of missed values.","61cdaa96":"First we need to extract `country` feature and change some country names.","26a7a171":"What is the average price per launch for every year?","f0f3aa04":"Now we will check status distribution for all missions.","0104e1a1":"As we can see CASC company has the higher number of launches in 2020. So lets try to predict dynamics for next 5 years for this company using simple ARIMA model.","f1cabebd":"Let's drop noise from time series","a3d4824e":"Let's create traditional features based on Date.","3828b168":"<a id=\"1\"><\/a>\n<h2 style='background:black; border:0; color:white'><center>1. General dataset overview<center><h2>","dfcb5dc9":"Which companies are most experienced (years)?","099f04c5":"<a id=\"3\"><\/a>\n<h2 style='background:black; border:0; color:white'><center>3. Other interesting questions<center><h2>","19f10e4a":"What is weekday distribution?","fec805e5":"Number of starts for 2020.","1dd9e6e6":"Number of failures year by year.","c4aa8de7":"Total number of launches.","69f38e81":"Let's see witch countries and companies were the best for every year.","80114c36":"<a id=\"6\"><\/a>\n<h2 style='background:black; border:0; color:white'><center>6. Best every year<center><h2>","fb020273":"Now let's convert country name to Alpha3 format using iso3166 package.","3a773c1d":"What is months distribution?","0033f0b5":"Launches year by year.","47073912":"<a id=\"2\"><\/a>\n<h2 style='background:black; border:0; color:white'><center>2. Geo analysis<center><h2>","663c7bca":"How many years ago every company did last Rocket start?","43ea836c":"Let's see percent of NaNs for every column.","373d90fd":"How many launches every country has?","9ac49e42":"Number of companies year by year.","ed8c6a2f":"What about rocket's status?","4cf3e254":"Now let's see how many launches made every company presented in this dataset.","84bf93d7":"Let's do decomposition of time series of number of launches for every month.","2b490013":"How many launches were every year?","a8041a51":"How much money companies spent for missions?","a797a5a0":"Let's see sunburst chart for countries.","ee44d065":"<a id=\"top\"><\/a>\n\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:Black; border:0' role=\"tab\" aria-controls=\"home\"><center>Quick navigation<\/center><\/h3>\n\n* [1. General dataset overview](#1)\n* [2. Geo analysis](#2)\n* [3. Other imnteresting questions](#3)\n* [4. Predict dynamics for CASC](#4)\n* [5. USA vs USSR analysis](#5)\n* [6. Best every year](#6)\n* [7. Time series decomposition](#7)"}}