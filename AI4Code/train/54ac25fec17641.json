{"cell_type":{"f41ae255":"code","cb672df2":"code","8d2688db":"code","3e07707d":"code","07ebfe8f":"code","babef959":"code","9fd7c1a1":"code","9ad800cc":"code","d79e939d":"code","4eb6422e":"code","000ed028":"code","bc1a0204":"code","ca6b5f28":"code","dca9589a":"code","ca7e95c5":"code","19512824":"markdown","e86432c0":"markdown","3aaecb45":"markdown","1c1bbdd9":"markdown","2cb150c3":"markdown","2327fa3d":"markdown","490ed869":"markdown","0dad4873":"markdown"},"source":{"f41ae255":"import pandas as pd\nimport numpy as np","cb672df2":"data_set = pd.read_csv('..\/input\/data-set-abalone\/abalone.csv')\ndata_set.head()","8d2688db":"data_set.info()","3e07707d":"data_set.x1.unique()","07ebfe8f":"Sex = []\nx1 = 0\nx2 = 0\nx3 = 0\nfor i in data_set['x1']:\n  if data_set.x1.unique()[0] in i:\n    Sex.append(1)\n    x1 += 1\n  elif data_set.x1.unique()[1] in i:\n    Sex.append(2)\n    x2 +=1\n  else:\n    Sex.append(3)\n    x3 +=1\ndata_set['x1_v'] = Sex\ndata_set.head()","babef959":"print('Number of M:',x1)\nprint('Number of F:',x2)\nprint('Number of I:',x3)","9fd7c1a1":"data_olah = data_set[['x1_v','x2','x3','x4','x5','x6','x7','x8','y']]\ndata_olah.columns = [['x1','x2','x3','x4','x5','x6','x7','x8','y']]\ndata_olah.head()","9ad800cc":"data_olah.info()","d79e939d":"import seaborn as sn\nimport pylab as pl","4eb6422e":"sn.set_theme(style='darkgrid')\ndata_olah.hist(figsize=(20,20))\npl.show()","000ed028":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler","bc1a0204":"X = data_olah.iloc[:,0:-1] # 80%\ny = data_olah.iloc[:,-1]   # 20%\nX = StandardScaler().fit_transform(X)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)\nprint('X train:',X_train.shape)\nprint('X test :',X_test.shape)","ca6b5f28":"from sklearn.ensemble import BaggingRegressor\nfrom sklearn.metrics import r2_score\nimport numpy as np","dca9589a":"model = BaggingRegressor()\nmodel.fit(X_train, y_train)\ny_predic = model.predict(X_test)\nprint('MAE      :',np.mean(abs(y_test-y_predic)))\nprint('R-Square :',r2_score(y_test,y_predic))","ca7e95c5":"import pylab as pl\nimport seaborn as sn\nsn.set_theme(style='darkgrid')\n\npl.figure(figsize=(20,10))\nse = range(836)\npl.plot(se,y_predic, color = '#00ffff', label='y predict')\npl.plot(se,y_test, color = '#ff00ff', label='y actual')\npl.legend()","19512824":"# <font color ='coral'><center>**ON PREDICTING AGE OF ABALONE (HALIOSTIS SP.) USING THE BAGGING REGRETION METHOD**<\/center><\/font>\nUsing python","e86432c0":"Data Set link: https:\/\/archive.ics.uci.edu\/ml\/datasets\/abalone\n\nAttribute Information:\n\nGiven is the attribute name, attribute type, the measurement unit and a brief description. The number of rings is the value to predict: either as a continuous value or as a classification problem.\n\nName \/ Data Type \/ Measurement Unit \/ Description\n\n* x1 : Sex \/ nominal \/ -- \/ M, F, and I (infant)\n* x2 : Length \/ continuous \/ mm \/ Longest shell measurement\n* x3 : Diameter \/ continuous \/ mm \/ perpendicular to length\n* x4 : Height \/ continuous \/ mm \/ with meat in shell\n* x5 : Whole weight \/ continuous \/ grams \/ whole abalone\n* x6 : Shucked weight \/ continuous \/ grams \/ weight of meat\n* x7 : Viscera weight \/ continuous \/ grams \/ gut weight (after bleeding)\n* x8 : Shell weight \/ continuous \/ grams \/ after being dried\n* y : Rings \/ integer \/ -- \/ +1.5 gives the age in years","3aaecb45":"### <font color='coral'>Import library for visualisation data set<\/font>","1c1bbdd9":"### <font color='coral'>Split data set (data training & data testing)<\/font>","2cb150c3":"### <font color='coral'>Chek info data set<\/font>","2327fa3d":"### <font color='coral'>Load data set<\/font>","490ed869":"<font color='red'>! x1 type objek","0dad4873":"### <font color='coral'>Evaluate Bagging Algorithm for Regressor<\/font>"}}