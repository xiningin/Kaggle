{"cell_type":{"5abc72f2":"code","15af94ee":"code","1acd63bf":"code","2fd951d8":"code","4f8ccd5c":"code","bfdf3fc5":"code","6f227e39":"code","9ebc8608":"code","61fe4f7e":"code","c680c01a":"code","cdc8b681":"code","8fc0e029":"code","de622f7e":"code","456fd53b":"code","42a62f22":"code","60b924fd":"code","dae26efc":"code","34548a6f":"code","3daa832c":"code","9826f10a":"code","b7a68717":"code","0d74254e":"code","be11d496":"code","3db257dd":"code","fe082dd0":"code","db3a879d":"code","b3e8bba5":"code","33bdc90a":"code","9cc93534":"code","ec04122a":"markdown","9aa341b9":"markdown","ae0dc268":"markdown","ebf25996":"markdown","1fcd53f5":"markdown","93167ba4":"markdown","c4d8cf9a":"markdown","fd273456":"markdown","0727f639":"markdown","aa84fb42":"markdown","28d1de12":"markdown","df3afaa8":"markdown","4a505f16":"markdown","d73a488d":"markdown"},"source":{"5abc72f2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nplt.style.use(\"seaborn-pastel\")\n\nimport seaborn as sns\n\nfrom collections import Counter\n\nimport warnings\nwarnings.filterwarnings(\"ignore\") # pythondan kaynakl\u0131nn hatalar\u0131 gosterme\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","15af94ee":"# a = [1,2,3,4,5]\n# plt.plot(a)\n# plt.show()","1acd63bf":"train_df = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_PassengerId = test_df[\"PassengerId\"]","2fd951d8":"train_df.columns","4f8ccd5c":"\ntrain_df.head()","bfdf3fc5":"train_df.describe()","6f227e39":"train_df.info()","9ebc8608":"def bar_plot(variable):\n    \"\"\"\n        input: variable ex: \"Sex\"\n        output: bar plot & value count\n    \"\"\"\n    \n    #get feature\n    var = train_df[variable]    \n    #count number of categorical variable (value\/sample)\n    varValue = var.value_counts()\n    \n    #visualize\n    plt.figure(figsize = (9,3))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\") # ilgili feature'a ait kac tane sample oldugu\n    plt.title(variable)\n    plt.show()\n    print(\"{} :\\n {}\".format(variable,varValue))","61fe4f7e":"category1 = [\"Survived\",\"Sex\",\"Pclass\",\"Embarked\",\"SibSp\",\"Parch\"]\nfor c in category1:\n    bar_plot(c)","c680c01a":"def plot_hist(variable):\n    plt.figure(figsize =(9,3))\n    plt.hist(train_df[variable],bins=50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()","cdc8b681":"numericVar = [\"Fare\",\"Age\",\"PassengerId\"]\nfor n in numericVar:\n    plot_hist(n)","8fc0e029":"train_df[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"], as_index=False).mean()","de622f7e":"# Pclass - Survived\ntrain_df[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"], as_index=False).mean().sort_values(by=\"Survived\", ascending=False) #ascending azalan sirada","456fd53b":"# Sex - Survived\ntrain_df[[\"Sex\",\"Survived\"]].groupby([\"Sex\"], as_index=False).mean().sort_values(by=\"Survived\", ascending=False) #ascending azalan sirada","42a62f22":"# SibSp - Survived\ntrain_df[[\"SibSp\",\"Survived\"]].groupby([\"SibSp\"], as_index=False).mean().sort_values(by=\"Survived\", ascending=False) #ascending azalan sirada","60b924fd":"# Parch - Survived\ntrain_df[[\"Parch\",\"Survived\"]].groupby([\"Parch\"], as_index=False).mean().sort_values(by=\"Survived\", ascending=False) #ascending azalan sirada","dae26efc":"def detect_outliers(df, features):\n    outlier_indices = []\n    \n    for c in features:\n        \n        # 1st quartile\n        Q1 = np.percentile(df[c],25)\n        # 3rd quartile\n        Q3 = np.percentile(df[c],75)\n        # IQR\n        IQR = Q3 - Q1\n        # outlier step\n        outlier_step = IQR * 1.5\n        # detect outlier and their indeces\n        outlier_list_col = df[(df[c] < Q1 - outlier_step) | (df[c] < Q3 + outlier_step)].index\n        # store indeces\n        outlier_indices.extend(outlier_list_col)\n                               \n    outlier_indices = Counter(outlier_indices) # listedeki elemanlar kacar tane\n    multiple_outliers = list(i for i, v in outlier_indices.items() if v > 2) # bir sampleda 2den fazla outlier varsa cikart\n                               \n    return multiple_outliers","34548a6f":"train_df.loc[detect_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"])]","3daa832c":"#drop outliers\ntrain_df = train_df.drop(detect_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"]),axis = 0).reset_index(drop = True)","9826f10a":"train_df_len = len(train_df)\ntrain_df = pd.concat([train_df, test_df], axis = 0).reset_index(drop = True)","b7a68717":"train_df.head()","0d74254e":"train_df.columns[train_df.isnull().any()] # train dataframede missing value var m\u0131, hangi columnlarda var","be11d496":"train_df.isnull().sum() # toplam missing value","3db257dd":"train_df[train_df[\"Embarked\"].isnull()]","fe082dd0":"train_df.boxplot(column = \"Fare\", by = \"Embarked\")\nplt.show()","db3a879d":"train_df[\"Embarked\"] = train_df[\"Embarked\"].fillna(\"C\")\ntrain_df[train_df[\"Embarked\"].isnull()]","b3e8bba5":"train_df[train_df[\"Fare\"].isnull()]","33bdc90a":"train_df[\"Fare\"] = train_df[\"Fare\"].fillna(np.mean(train_df[train_df[\"Pclass\"] == 3][\"Fare\"]))","9cc93534":"train_df[train_df[\"Fare\"].isnull()]","ec04122a":"<a id=10><\/a><\/br>\n## Fill Missing Value\n* Embarked has 2 missing values\n* Fare has 2","9aa341b9":"<a id=9><\/a><\/br>\n## Find Missing Value","ae0dc268":"<a id = 6><\/a><\/br>\n# Basic Data Analysis\n\n\n* Pclass - Survived\n* Sex - Survived\n* SibSp - Survived\n* Parch - Survived","ebf25996":"<a id=8><\/a><\/br>\n# Missing Value\n    * Find Missing Value\n    * Fill Missing Value","1fcd53f5":"<a id = \"5\"><\/a><\/br>\n## Numerical Variable Analysis","93167ba4":"<a id = \"2\"><\/a><\/br>\n## Variable Description\n1.PassengerId : unique \u0131d number of each passenger\n\n2.Survived : passenger survived(1) or died(0)\n\n3.Pclass : passenger class\n\n4.Name : Name\n\n5.Sex : gender of passenger\n\n6.Age : age of passenger\n\n7.SibSp : number of siblings\/spouses\n\n8.Parch : number of parents\/children\n\n9.Ticket : ticket number\n\n10.Fare : amount of money spent on ticket\n\n11.Cabin : cabin category\n\n12.Embarked : port where passenger embarked (C = Cherbourg, Q = Queenstown, S = Southampton)","c4d8cf9a":"<a id = \"4\"><\/a><\/br>\n## Categorical Variable Analysis","fd273456":"* float64(2) : Fare and age\n* int64(5) : PassengerId, Survived, Pclass, SibSp, Parch\n* object(5) : Name, Sex, Ticket, Cabin, Embarked","0727f639":"yukar\u0131daki kay\u0131p Embarked valueleri doldurabilmek icin diger columnlardan yard\u0131m alabiliriz. Pclass, Fare, Cabin bize yard\u0131mc\u0131 olabilir. Simdi Embarkeda gore Fare s\u0131ralayal\u0131m","aa84fb42":"<a id = \"1\"><\/a><\/br>\n## Load and Check Data \n","28d1de12":"# Introduction\n\n\nThe ship slammed into the iceberg and sank terribly.\n\nWe will also learn about the possibility of people getting rid of this project.\n\nContent:\n\n1. [Load and Check Data](#1)\n\n1. [Variable Description](#2)    \n   * [Univariate Variable Analysis](#3)\n   \n       * [Categorical Variable Analysis](#4)    \n        \n       *  [Numerical Variable Analysis](#5)\n       \n1. [Basic Data Analysis](#6)   \n1. [Outlier Detection](#7)\n1. [Missing Value](#8)\n    * [Find Missing Value](#9)\n    * [Fill Missing Value](#10)\n","df3afaa8":"# plt.style.available\n","4a505f16":"<a id = \"3\"><\/a><\/br>\n# Univariate Variable Analysis\n\n* [Categorical Variable Analysis](#4)\n\n* [Numerical Variable Analysis](#4)","d73a488d":"<a id=\"7\"><\/a><\/br>\n# Outlier Detection\n"}}