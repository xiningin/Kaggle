{"cell_type":{"70e1cc0f":"code","4a5ebc03":"code","b2d94579":"code","69f56837":"code","a8be101c":"code","d8efb9cc":"code","5213b72c":"code","e4fdb2eb":"markdown","d164077c":"markdown","02e85f46":"markdown","86b49fc6":"markdown","365e839a":"markdown","130eeaa8":"markdown"},"source":{"70e1cc0f":"import pandas as pd","4a5ebc03":"# read the data into a pandas datafrome\ndf_train = pd.read_csv('..\/input\/train.csv')\ndf_test = pd.read_csv('..\/input\/test.csv')\n\nprint(df_train.shape)\nprint(df_test.shape)","b2d94579":"X = df_train.drop('label', axis=1)\ny = df_train['label']\n\nX_test = df_test\n\nprint(X.shape)\nprint(y.shape)\nprint(X_test.shape)","69f56837":"%%time\n\nfrom lightgbm import LGBMClassifier\n\nlgbm = LGBMClassifier(objective='multiclass', random_state=5)\n\nlgbm.fit(X, y)\n\ny_pred = lgbm.predict(X_test)\n","a8be101c":"y_pred.shape","d8efb9cc":"# The index should start from 1 instead of 0\ndf = pd.Series(range(1,28001),name = \"ImageId\")\n\nID = df\n\nsubmission = pd.DataFrame({'ImageId':ID, \n                           'Label':y_pred, \n                          }).set_index('ImageId')\n\nsubmission.to_csv('mnist_lgbm.csv', columns=['Label']) ","5213b72c":"submission.head()","e4fdb2eb":"### Define X and y","d164077c":"### LightGBM Classifier","02e85f46":"### Create a submission file","86b49fc6":"<hr>","365e839a":"Thank you for reading.","130eeaa8":"**I am experimenting with simple and fast solutions. This LightGBM model scored above 0.96 on the public leaderboard. It took approx. 2 minutes to train on a cpu. I did not do any parameter tuning.**\n\nIt's nice to discover that it's possible to get such a high accuracy with so little work."}}