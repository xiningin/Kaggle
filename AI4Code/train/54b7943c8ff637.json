{"cell_type":{"c79793bb":"code","13ad6d57":"code","4e23a129":"code","20be3e6e":"code","1bbc5b87":"code","841f0fd7":"code","cf1f4f51":"markdown","2533efed":"markdown","05f91bd8":"markdown","51f2a60e":"markdown","38af3ea8":"markdown"},"source":{"c79793bb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","13ad6d57":"train_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntrain_data.head(10)","4e23a129":"test_data = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntest_data.head(10)","20be3e6e":"women = train_data.loc[train_data.Sex == 'female']['Survived']\nrate_of_women = sum(women)\/len(women)\n\nprint(\"Percentage of women survived :\", rate_of_women)","1bbc5b87":"#  Importing RandomForestClassifier from ensemble module from sklearn library\n\nfrom sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\n# getting dummy variables column\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\n# training models and predicting the results\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\npredictions","841f0fd7":"# Saving to dataframe\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Submission was successfully saved!\")","cf1f4f51":"## Calculating percentage of women survived ","2533efed":"# Machine learning model using random forest model","05f91bd8":"> ## Displaying First ten row of train.set data :","51f2a60e":"## Importing Libraries","38af3ea8":"> ## Displaying First ten row of test.set data :"}}