{"cell_type":{"3c1445f7":"code","d62efdc5":"code","0841fe12":"code","f317d452":"code","037a0c4c":"code","80e8c615":"code","d6d7c030":"code","179e23c7":"code","2fd8c468":"code","1d545176":"code","d35b141c":"code","cd55c922":"code","21774b83":"code","c0e85c1d":"code","7c385585":"code","a887ff00":"code","1472d278":"code","f759e10f":"code","060dc3b5":"code","dee52ef4":"code","cb5ebb6b":"code","21af3245":"code","06489fa2":"code","96e171c9":"code","fd00fd45":"code","ca7d4fe0":"code","30695d4f":"code","ab97cd7d":"code","0ae00b3d":"code","4da3bcb3":"code","ae83ae03":"code","1b23379b":"code","07a4f3db":"code","805b55ca":"markdown"},"source":{"3c1445f7":"df = pd.read_csv(\"..\/input\/insurance.csv\")\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\ndf.plot(kind=\"hist\")","d62efdc5":"df.shape","0841fe12":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","f317d452":"df.columns","037a0c4c":"df.info()","80e8c615":"df.head(4)","d6d7c030":"df.isna().sum()","179e23c7":"df.expenses.duplicated().sum()","2fd8c468":"df_num=df.select_dtypes(include=np.number)\ndf_cat=df.select_dtypes(exclude=np.number) ","1d545176":"encode_cat_data=pd.get_dummies(df_cat)\nencode_cat_data.head(5).T\nfin_df=[df_num,encode_cat_data]\ndf1=pd.concat(fin_df,axis=1)\ndf1.describe().head(5)","d35b141c":"all_columns         = list(df)\nnumeric_columns     = ['age', 'bmi', 'children', 'expenses']\ncategorical_columns = [x for x in all_columns if x not in numeric_columns ]\ncols_to_transform = categorical_columns\nprint('\\nNumeric columns')\nprint(numeric_columns)\nprint('\\nCategorical columns')\nprint(categorical_columns)\nprint(cols_to_transform)","cd55c922":"df2=df1.drop(columns=\"expenses\")\n#df2\nax = sns.boxplot(data = df2, orient = \"v\", color = \"Violet\",)\nplt.show()","21774b83":"#df1=df\n\n#pd.get_dummies()","c0e85c1d":"y=df1[[\"expenses\"]]\nx=df1.drop(columns=[\"expenses\"])","7c385585":"x.head(5)","a887ff00":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split","1472d278":"train_x,test_x,train_y,test_y=train_test_split(x,y,test_size=0.3,random_state=100)","f759e10f":"model=LinearRegression()\nmodel.fit(train_x,train_y)\nprint(model.intercept_)","060dc3b5":"print(model.coef_)","dee52ef4":"from sklearn.metrics import mean_absolute_error,mean_squared_error,r2_score\nprint(\"predicting the train data\")\ntrain_predict = model.predict(train_x)\nprint(train_predict)","cb5ebb6b":"import numpy as np\nprint(\"RMSE\")\nprint(\"train : \",np.sqrt(mean_squared_error(train_y,train_predict)))\nprint(\"test : \",np.sqrt(mean_squared_error(test_y,test_predict)))","21af3245":"print(\"predictin the test data\")\ntest_predict = model.predict(test_x)\nprint(\"MAE\")\nprint(\"train : \",mean_absolute_error(train_y,train_predict))\nprint(\"test : \",mean_absolute_error(test_y,test_predict))\n\nprint(\"MSE\")\nprint(\"train : \",mean_squared_error(train_y,train_predict))\nprint(\"test : \",mean_squared_error(test_y,test_predict))","06489fa2":"print(\"Rsquare\")\nprint(\"train : \",r2_score(train_y,train_predict))\nprint(\"test : \",r2_score(test_y,test_predict))","96e171c9":"plt.figure(figsize = (12,8))\ng = sns.countplot(x=\"smoker\",data=df1,palette='hls')\ng.set_title(\"Expenses of Smokers and Non-Smokers\", fontsize=20)\ng.set_xlabel(\"smoker\", fontsize=15)\ng.set_ylabel(\"expenses\", fontsize=20)","fd00fd45":"plt.figure(figsize = (12,8))\ng = sns.countplot(x=\"age\",data=df1,palette='hls')\ng.set_title(\"Smoker in different ages\", fontsize=20)\ng.set_xlabel(\"age\", fontsize=15)\ng.set_ylabel(\"smoker\", fontsize=20)","ca7d4fe0":"plt.figure(figsize=(12,6))\ng = sns.distplot(df1[\"bmi\"])\ng.set_xlabel(\"bmi\", fontsize=12)\ng.set_ylabel(\"Frequency\", fontsize=12)\ng.set_title(\"Frequency Distribuition- bmi\", fontsize=20)","30695d4f":"#BOX PLOT Using SeaBorn\nplt.figure(figsize = (20,8))\nax = sns.boxplot(x=\"expenses\" ,y= \"smoker\", data=df1, linewidth=2.5)\nplt.show()","ab97cd7d":"plt.figure(figsize = (20,8))\nax = sns.boxplot(x=\"age\" ,y= \"expenses\", data=df1, linewidth=2.5)\nplt.show()","0ae00b3d":"correlation_m = df1.corr()\ncorrelation_m[\"expenses\"].sort_values(ascending=False)","4da3bcb3":"df1.region.value_counts().plot(kind=\"pie\")","ae83ae03":"df1.groupby(\"smoker\").expenses.agg([\"mean\",\"median\",\"count\"])","1b23379b":"# Set the width and height of the figure\nplt.figure(figsize=(20,10))\n\ncorr = df1.corr()\nax = sns.heatmap(corr,vmin=-1,vmax=1,center=0,annot=True)\n","07a4f3db":"import seaborn as sns\ng = sns.pairplot(df1)\ng.set(xticklabels=[])","805b55ca":"Observation: highest number of Smokers at the age 18 and second highest at the age 17. As the age increases, the number of smokers increase and decrease periodically. The lowest number of smokers is found to be the age 64."}}