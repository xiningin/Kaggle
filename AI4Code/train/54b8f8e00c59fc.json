{"cell_type":{"c13de6a1":"code","d4d98704":"code","d0aa2616":"code","36ed65f5":"code","71922de9":"code","c662c173":"code","d88151f9":"code","4d973065":"code","2f2f0e95":"code","9809a50b":"code","b24daac4":"code","b9b249eb":"code","a910c298":"code","ca2bbbc0":"code","8d329125":"code","a5fd9f58":"code","32fe77f5":"code","4ef32a93":"markdown","b497a292":"markdown","d27a1d1a":"markdown","9424fe7b":"markdown","0da2b6f9":"markdown"},"source":{"c13de6a1":"import catboost\nimport numpy as np\nimport pandas as pd","d4d98704":"def load_data(df, data_columns, cat_columns, target_column=None):\n    df = df[data_columns]\n    \n    df_columns = [c for c in df.columns if c != target_column]\n    cat_columns_idx = [i for i, c in enumerate(df_columns) if c in cat_columns]\n    cat_columns_names = [c for i, c in enumerate(df_columns) if i in cat_columns_idx]\n\n    for col_name in df.columns:\n        if col_name in cat_columns:\n            df[col_name].replace(np.nan, '', inplace=True)\n        else:\n            df[col_name].replace(np.nan, None, inplace=True)\n    \n    if target_column is None:\n        X_data = df.to_numpy()\n        return df, X_data\n    else:\n        X_data = df.loc[:, df.columns != target_column].to_numpy()\n        y_data = df[[target_column]].to_numpy().reshape(-1)\n        return df, X_data, y_data","d0aa2616":"df_train = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ndf_test = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')","36ed65f5":"data_columns = df_train.columns\ntarget_column = 'SalePrice'\n\n# Get categorical columns\ncat_columns = df_train.select_dtypes(exclude=np.number).columns","71922de9":"df_train, X_train, y_train = load_data(df_train, data_columns, cat_columns, target_column=target_column)\ndf_train.head()","c662c173":"test_data_columns = [x for x in data_columns if x != target_column]\ndf_test, X_test = load_data(df_test, test_data_columns, cat_columns)\ndf_test.head()","d88151f9":"# Remove IDs from training dataset, and store IDs from test dataset separately\nX_train = X_train[:,1:]\nX_test_idx = X_test[:,0]\nX_test = X_test[:,1:]","4d973065":"cat_columns_idx = [(i - 1) for i, x in enumerate(df_train.loc[:, df_train.columns != target_column]) if x in cat_columns]","2f2f0e95":"train_data = catboost.Pool(data=X_train, label=y_train, cat_features=cat_columns_idx)","9809a50b":"model = catboost.CatBoostRegressor(\n    random_seed=42,\n    eval_metric='RMSE',\n    verbose=False,)","b24daac4":"model.fit(train_data)","b9b249eb":"output_file = 'house_prices.cbm'","a910c298":"model.save_model(output_file, pool=train_data)","ca2bbbc0":"model = catboost.CatBoostRegressor() # Params not required\nmodel.load_model(output_file)","8d329125":"y_pred = model.predict(X_test)\ny_pred = y_pred.reshape(-1)","a5fd9f58":"data = {'Id': X_test_idx, 'SalePrice': y_pred}\nsubmission = pd.DataFrame(data) ","32fe77f5":"submission.to_csv('submission.csv', index=False)","4ef32a93":"## Load dataset","b497a292":"## Save & load","d27a1d1a":"# Basic CatBoost regression\n\nI just made this notebook to learn how to use CatBoost, so I didn't add any preprocess step to the dataset. Feel free to copy it and be creative with the dataset :)","9424fe7b":"##\u00a0Make predictions & submit","0da2b6f9":"## Train model"}}