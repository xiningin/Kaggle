{"cell_type":{"d5e103e6":"code","2f06ee24":"code","047d4390":"code","8ecb00cc":"code","2810e3fb":"code","489138e0":"code","e54a5ce1":"code","dc6235a5":"code","38bfdf0b":"code","264c7baf":"code","de880a3d":"code","ccda00da":"code","c0971b2d":"code","92f6ce81":"code","a3ab7335":"code","1e006dbd":"code","b0c2feb5":"code","1577d59f":"code","108c22f3":"code","6b8eae9e":"code","3b1fc686":"code","9b82a9bc":"code","c3e42ce2":"code","38e00101":"code","4ec67d24":"code","0b9332c7":"code","a3922789":"code","755aa206":"code","b2f0a74a":"code","fc59d131":"code","8854b857":"code","3d588fb0":"code","5581bab0":"code","830e7d29":"code","894632a0":"code","b2ea2c91":"code","f0146b9f":"code","934c06f2":"code","144f21dd":"code","83695703":"code","f25559db":"code","9820f28e":"code","84007ca4":"code","873f8d4e":"code","169a590e":"code","c164a8ba":"code","0f2cc00a":"code","390ea966":"code","a7aed713":"code","d9d298c2":"code","b4d3597f":"code","10c2b1ce":"code","d0841c2e":"code","b046de9a":"code","e79bccc2":"code","1863f08c":"code","a7bad845":"code","c302f143":"code","c0250f4a":"code","907aa1ce":"code","f30f5082":"code","99addeb3":"code","b0ddef33":"code","825e8a02":"code","62193489":"code","08f0522b":"code","7c0576e6":"code","c19bab7f":"code","710f738f":"code","4d1b2e56":"code","75545ab2":"code","0f409824":"code","873acf73":"code","98b4cb4c":"code","f2d53e6c":"code","088b51cf":"code","844d3e44":"code","960f8acf":"code","1996d56e":"code","e434d666":"code","cad88dd3":"code","d70dbefd":"code","cbd039fd":"code","1b9884bb":"code","589c15ff":"code","20cf18f1":"code","07ef6cff":"code","a8e84ece":"code","7ddc59a5":"code","e64a08b3":"code","e727225e":"code","4587af47":"code","19d6f03a":"code","d1b64a9d":"code","f41c205a":"code","14039b61":"code","4fedacfb":"code","e44deaec":"code","86441bb2":"code","f71e575b":"code","75e6512d":"code","0132140b":"code","1e04a3c2":"code","7c96df9a":"code","6d8edd89":"code","664dbf24":"code","f3116674":"code","6615f286":"code","c2489300":"code","27418517":"code","1d63ac56":"code","c19c5d13":"code","32d71a2b":"code","5fc354d2":"code","2df6fba4":"code","4f41a8e7":"code","7b2d8cf0":"code","9fde3fc1":"code","89e45b89":"code","38a2024b":"code","4008e64c":"code","841de22b":"code","f25e636c":"code","e0fdacbf":"code","aa78a63b":"code","506a5de4":"code","9c6bf725":"code","4768228b":"code","57446b7e":"code","23368897":"code","15d1734c":"code","c0966073":"code","e5087fde":"code","86acaba8":"code","91edc267":"code","9bc4391a":"code","aa9293a4":"code","b3cf1bf7":"code","081173a2":"code","9837c474":"code","16aa6f35":"code","e205dab6":"code","27258f7b":"code","0a4fcc4d":"code","09f45cb7":"code","c9b99d7c":"code","d8e63ee1":"code","08c87428":"code","79d852ef":"code","c749718f":"code","3bb27bb8":"code","394e5b04":"code","3d7bf586":"code","88ac3702":"code","d5b61aac":"code","f8bb1158":"code","5e0cd914":"code","6ba31b77":"code","5fd06770":"code","3e20ae65":"code","ae210354":"code","98404a9a":"code","8c2fb399":"code","2d311407":"code","24792c5a":"code","80f1c483":"code","c0507a80":"code","681005c1":"code","ac349db0":"code","f3ed723b":"code","8c03f3b4":"code","bc2b35e2":"code","05ad5f6a":"code","25d5ca3a":"markdown","23a0bb7c":"markdown","53b6040a":"markdown","701c1aeb":"markdown","f5a449f7":"markdown","f32d4c4d":"markdown","3fa90997":"markdown","b52a447f":"markdown","b8b89f00":"markdown","3a383297":"markdown","a8e426c8":"markdown","691cd7eb":"markdown","e3d366c3":"markdown","c96b7dd4":"markdown","2b4ae11c":"markdown","061b09a2":"markdown","6f9e7d78":"markdown","6742ce55":"markdown","12c85ccc":"markdown","73ba8f5e":"markdown","dd13e86f":"markdown","cb379702":"markdown","333aec1e":"markdown","c439c322":"markdown","3e21cd45":"markdown","32b3021b":"markdown","65d419fb":"markdown","ea45db55":"markdown","1a3b6751":"markdown","f81c894d":"markdown","a1f43aa0":"markdown","b986c901":"markdown","d67753f2":"markdown","8edb1701":"markdown","af252fcc":"markdown","7c3d7331":"markdown","f66235b9":"markdown","66fe61a2":"markdown","4fa145f1":"markdown","2255f738":"markdown","c7444c91":"markdown","58f86b41":"markdown","07b5512d":"markdown","162697e8":"markdown","5f5ae17c":"markdown","07d8077b":"markdown","b027a44f":"markdown","8502c813":"markdown","4b52fdc3":"markdown","f19dd609":"markdown","a0d3afe9":"markdown","716702a3":"markdown","3bc00b1e":"markdown","18b284fa":"markdown","920a566b":"markdown","b052db63":"markdown","7134746e":"markdown","98379437":"markdown","37f821f1":"markdown","a0d9aa43":"markdown","296352bc":"markdown","d1c54706":"markdown","4cab3f06":"markdown","84b7285d":"markdown","1d5d72d1":"markdown","fa0e859c":"markdown","a5fa4b96":"markdown","a057b14a":"markdown","9fbc826a":"markdown","2e383acf":"markdown","eb9f613d":"markdown","e8456eb1":"markdown","33be8de9":"markdown","93b7396c":"markdown","57b7a2aa":"markdown","49b6d0b2":"markdown","529a9706":"markdown","950d42c2":"markdown","f23ab8f2":"markdown","26229038":"markdown","08dda82c":"markdown","59aa441a":"markdown","f21587dd":"markdown","60ef64c2":"markdown","e0fde451":"markdown","9c7b4f56":"markdown","1437f2a7":"markdown","b870e4bd":"markdown","1e47a7c2":"markdown","ee0e1315":"markdown","954d82b0":"markdown","1f960455":"markdown","b2082ec2":"markdown","3ae7608e":"markdown","dbee260f":"markdown","ab36e04c":"markdown","66a81428":"markdown","e6a7cde7":"markdown","bdad7593":"markdown","6bda45d7":"markdown","6db0a142":"markdown","0a77244a":"markdown","dd4bcd47":"markdown","34947135":"markdown","13cc3ad5":"markdown","9e7cb2d7":"markdown","881ca6ef":"markdown","46f87f21":"markdown","d5decbde":"markdown","71a7b924":"markdown","52dcac2b":"markdown","f8f28ead":"markdown","cb347cdc":"markdown","3ae1b6ad":"markdown","a053060f":"markdown","e776016f":"markdown","26e89baa":"markdown","ae856670":"markdown","2caf15e5":"markdown","11b1e27e":"markdown","6271695a":"markdown","e34eff4d":"markdown","7a44c3a9":"markdown","d75aa818":"markdown","0c8a03fe":"markdown","4562c89b":"markdown","cabd72a3":"markdown","f0d0be13":"markdown","006ef5eb":"markdown","9a387036":"markdown","537997a4":"markdown","039c808b":"markdown","3c0038d7":"markdown","c3f56d0c":"markdown","0bf9fb39":"markdown","f1f991e3":"markdown","3d51f391":"markdown","fb5c655e":"markdown"},"source":{"d5e103e6":"# Pandas pour manipuler les tableaux de donn\u00e9es\nimport pandas as pd\npd.set_option('display.max_columns', 500)\n\n# Numpy pour les listes de donn\u00e9es num\u00e9riques et les fonctions classiques math\u00e9matiques\nimport numpy as np\n\n# scipy (librairie scientifique) pour les fonctions statistiques et autres utilisaires\nimport scipy\n\n# scikit learn pour les outils de machine learning\nimport sklearn\nfrom sklearn.preprocessing import OneHotEncoder, LabelEncoder, StandardScaler\n\n# librairies pour la visualisation de donn\u00e9es\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\n\n# et quelques options visuelles\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n%matplotlib inline\nsns.set(style=\"whitegrid\", color_codes=True)\nsns.set(rc={'figure.figsize':(15,8)})","2f06ee24":"# cette fonction \u00e9value la corr\u00e9lation entre variables qualitatives en \n# - \u00e9laboration du tableau de contingence des valeurs\n# - calcul du chi2 de cet tableau \n# - calcul du coefficient de cramer qui est une normalisation du coefficient chi2\ndef cramers_v(x, y):\n    confusion_matrix = pd.crosstab(x,y)\n    chi2 = scipy.stats.chi2_contingency(confusion_matrix)[0]\n    n = confusion_matrix.sum().sum()\n    phi2 = chi2\/n\n    r,k = confusion_matrix.shape\n    phi2corr = max(0, phi2-((k-1)*(r-1))\/(n-1))\n    rcorr = r-((r-1)**2)\/(n-1)\n    kcorr = k-((k-1)**2)\/(n-1)\n    return np.sqrt(phi2corr\/min((kcorr-1),(rcorr-1)))","047d4390":"# \u00e9laboration de deux listes de variables al\u00e9atoires\nx = np.random.randint(0,20, size=1000)\ny = np.random.randint(0,20, size=1000)","8ecb00cc":"# test pour deux listes d\u00e9corr\u00e9l\u00e9es\ncramers_v(x,y)","2810e3fb":"# test pour deux listes totalement corr\u00e9l\u00e9es\ncramers_v(x,x)","489138e0":"def eta_squared(x,y):\n    moyenne_y = y.mean()\n    classes = []\n    for classe in x.unique():\n        yi_classe = y[x==classe]\n        classes.append({'ni': len(yi_classe),\n                        'moyenne_classe': yi_classe.mean()})\n    SCT = sum([(yj-moyenne_y)**2 for yj in y])\n    SCE = sum([c['ni']*(c['moyenne_classe']-moyenne_y)**2 for c in classes])\n    return SCE\/SCT","e54a5ce1":"# les donn\u00e9es ont \u00e9t\u00e9 t\u00e9l\u00e9charg\u00e9es sur kaggle et enregistr\u00e9es en local \n# dans un r\u00e9pertoire similaire que celui en ligne sur kaggle, ainsi le script\n# pourra tourner aussi bien en ligne qu'en local\ntrain = pd.read_csv('..\/input\/titanic\/train.csv')\ntest =  pd.read_csv('..\/input\/titanic\/test.csv')\ntrain.head()","dc6235a5":"# affichage des 5 premi\u00e8res lignes du jeu de test\ntest.head()","38bfdf0b":"test['Survived']=np.nan\ndata=pd.concat([train,test],keys=['train','test'], join='inner')\ndata.index=data.index.droplevel(level=1)","264c7baf":"len(data)","de880a3d":"len(data.loc['test'])","ccda00da":"# affichage de la liste et format des diff\u00e9rentes variables\ndata.info()","c0971b2d":"# est-ce qu'il y a des doublons dans les identifiants\ndata.PassengerId.duplicated().sum()","92f6ce81":"# describe permet d'avoir quelques \u00e9l\u00e9ments statistiques sur les donn\u00e9es\ndata.PassengerId.describe()","a3ab7335":"# liste des valeurs prises par Survived, on utilise value_counts() qui permet de lister les valeurs prise \n# pas une variable donn\u00e9e ainsi que l'occurence de chaque valeur\ndata.Survived.value_counts()","1e006dbd":"sns.set(rc={'figure.figsize':(15,8)})\n_ = sns.countplot(x=\"Survived\", data=data)","b0c2feb5":"# liste des valeurs prises par Pclass\ndata.Pclass.value_counts()","1577d59f":"_ = sns.barplot(x=\"Pclass\",y=\"Survived\", data=data)","108c22f3":"correlation = {}\ncorrelation['Pclass']=cramers_v(data.loc['train','Pclass'],data.loc['train','Survived'])\nprint(correlation['Pclass'])","6b8eae9e":"pd.crosstab(data[\"Survived\"],data[\"Pclass\"])","3b1fc686":"data.Name[0]","9b82a9bc":"data['Title'] = data['Name'].str.split(\", \", expand=True)[1].str.split(\".\", expand=True)[0]","c3e42ce2":"data.Title.value_counts()","38e00101":"pd.crosstab(data.Title,data.Survived)","4ec67d24":"data['Title']=data['Title'].replace(['Major','Don','Jonkheer','Capt','Sir'], 'Mr')\ndata['Title']=data['Title'].replace(['Mlle'], 'Miss')\ndata['Title']=data['Title'].replace(['Lady','the Countess','Mme','Ms','Dona'], 'Mrs')\ndata.Title.value_counts()","0b9332c7":"# voyons si le titre a une influence sur la survie\npd.crosstab(data['Title'], data['Survived']).apply(lambda r: r\/r.sum(), axis=1)","a3922789":"correlation['Title']=cramers_v(data.loc['train']['Title'],data.loc['train']['Survived'])\nprint(correlation['Title'])","755aa206":"data['Last Name'] = data['Name'].str.split(\", \", expand=True)[0]","b2f0a74a":"data['Last Name'].describe()","fc59d131":"data.loc['train'].groupby('Last Name').agg({'Survived': 'var'}).mean()","8854b857":"data['randNumCol'] = np.random.choice(2,len(data))","3d588fb0":"data.loc['train'].groupby('Last Name').agg({'randNumCol': 'var'}).mean()","5581bab0":"data=data.drop('randNumCol',axis=1)","830e7d29":"from sklearn import preprocessing\nMyEncoder=preprocessing.LabelEncoder()\nMyEncoder.fit(data['Last Name'].sort_values())\ndata['LastNameNum'] = MyEncoder.transform(data['Last Name'])\ndata.head(1)","894632a0":"correlation['LastNameNum']=cramers_v(data['LastNameNum'],data['Survived'])\nprint(correlation['LastNameNum'])","b2ea2c91":"data['First Name'] = data['Name'].str.split(\"\\. \", expand=True)[1].str.split(\" \", expand=True)[0]","f0146b9f":"data['First Name'].head()","934c06f2":"gender = {'male': 1,'female': 0}\ndata.Sex = [gender[item] for item in data.Sex]","144f21dd":"correlation['Sex']=cramers_v(data.loc['train']['Sex'],data.loc['train']['Survived'])\nprint(correlation['Sex'])","83695703":"_ = sns.barplot(x=\"Sex\",y=\"Survived\", data=data)","f25559db":"sns.distplot(data.Age.dropna())","9820f28e":"data.Age.describe()","84007ca4":"scipy.stats.shapiro(data.Age.dropna())","873f8d4e":"sns.boxplot(x=\"Sex\", y=\"Age\",hue=\"Survived\", data=data)","169a590e":"# voyons en d\u00e9tail la r\u00e9partition des survivants par sexe et par age\nsns.set(style=\"darkgrid\", palette=\"pastel\", color_codes=True)\nax = sns.violinplot(x=\"Sex\", y=\"Age\", hue=\"Survived\",\n               palette={0.0: \"grey\", 1.0: \"white\"},\n               split=True, inner=\"quart\",\n               data=data)\nax.set_xticklabels(['Femme','Homme'])","c164a8ba":"dataTemp = data.loc['train'].dropna(subset=['Age'])\n\ncorrelation['Age']=eta_squared(dataTemp.Age,dataTemp.Survived)\nprint(correlation['Age'])","0f2cc00a":"data['TicketSibling'] = data.groupby('Ticket')['Ticket'].transform('count')","390ea966":"data.loc[(data.Age.isna())&(data['TicketSibling']==1),'Age']=30","a7aed713":"data.loc[(data.Age.notna())&(data.Title==\"Mrs\"),'Age'].mean()","d9d298c2":"data.loc[(data.Age.isna())&(data.Title==\"Mrs\"),'Age']=37","b4d3597f":"# les donn\u00e9es ont \u00e9t\u00e9 enregistr\u00e9es dans le fichier age.csv\nage = pd.read_csv('..\/input\/titanicdata\/age.csv')","10c2b1ce":"import unicodedata\n\ndef text_normalize(text):\n    text = unicodedata.normalize('NFD', text)\n    text = text.encode('ascii', 'ignore')\n    text = text.decode(\"utf-8\")\n    return str(text)\n\n# on va parcourir la liste des passagers et regarder si les nom de famille correspond, en cas de correspondance unique\n# on sait qu'on a trouv\u00e9 le bon passager et on lui attribue la valeur 1 en colonne Servant\n# sinon on croise aussi la donn\u00e9e prenom pour \u00eatre s\u00fbr\n\nfor _,passager in data[data.Age.isna()].iterrows():\n    for _,line in age.iterrows():\n        x = line['Surname'].split(' ')[0]\n        x = text_normalize(x)\n        LastName = passager['Last Name']\n        FirstName = passager['First Name']\n        y = line['First Name'].split(' ')[0]\n        y = text_normalize(y)\n        if ((x in LastName)&(y in FirstName)):\n            data.loc[data.PassengerId==passager.PassengerId,'Age'] = int(line['Age'])","d0841c2e":"data.Age.isna().sum()","b046de9a":"data[data.Ticket=='2661']","e79bccc2":"# ce sont tous les deux des enfants\ndata.loc[(data.Age.isna())&(data.Ticket=='2661'),'Age']=10","1863f08c":"data[data.Ticket=='371110']","a7bad845":"# il s'agit de l'\u00e9pouse de Mr MORAN, on va rire qu'elle a \u00e0 peu pr\u00e8s le m\u00eame age\ndata.loc[(data.Age.isna())&(data.Ticket=='371110'),'Age']=25","c302f143":"data[data.Ticket=='2668']","c0250f4a":"# ce sont tous les deux des enfants\ndata.loc[(data.Age.isna())&(data.Ticket=='2668'),'Age']=10","907aa1ce":"data[data.Ticket=='4133']","f30f5082":"# ce sont tous des enfants\ndata.loc[(data.Age.isna())&(data.Ticket=='4133'),'Age']=10","99addeb3":"data[data.Ticket=='2665']","b0ddef33":"# ce sont des enfants, deux soeurs\ndata.loc[(data.Age.isna())&(data.Ticket=='2665'),'Age']=10","825e8a02":"data[data.Ticket=='367230']","62193489":"# ce sont des adultes, deux soeurs\ndata.loc[(data.Age.isna())&(data.Ticket=='367230'),'Age']=25","08f0522b":"data[data.Ticket=='370365']","7c0576e6":"# ce sont des adultes, mari et femme\ndata.loc[(data.Age.isna())&(data.Ticket=='370365'),'Age']=30","c19bab7f":"data[data.Ticket=='2627']","710f738f":"# on ne peut pas \u00eatre sur mais on peut imaginer que ce sont deux adultes\ndata.loc[(data.Age.isna())&(data.Ticket=='2627'),'Age']=18","4d1b2e56":"data[data.Ticket=='PC 17757']","75545ab2":"# on ne peut pas \u00eatre sur mais on peut imaginer que c'est un adulte voyageant avec le reste de la famille\ndata.loc[(data.Age.isna())&(data.Ticket=='PC 17757'),'Age']=25","0f409824":"data[data.Ticket=='367226']","873acf73":"# certainement un adulte\ndata.loc[(data.Age.isna())&(data.Ticket=='367226'),'Age']=25","98b4cb4c":"data[data.Ticket=='370371']","f2d53e6c":"# certainement un adulte\ndata.loc[(data.Age.isna())&(data.Ticket=='370371'),'Age']=20","088b51cf":"data[data.Ticket=='CA. 2343']","844d3e44":"# certainement un enfant\ndata.loc[(data.Age.isna())&(data.Ticket=='CA. 2343'),'Age']=10","960f8acf":"data[data.Ticket=='A\/5. 851']","1996d56e":"# certainement un enfant\ndata.loc[(data.Age.isna())&(data.Ticket=='A\/5. 851'),'Age']=10","e434d666":"data.Age.isna().sum()","cad88dd3":"data['isParent']=np.nan\ndata['isEnfant']=np.nan","d70dbefd":"data.loc[(data.Parch==0),'isEnfant']=0\ndata.loc[(data.Parch==0),'isParent']=0\n\ndata.loc[(data.Age<14),'isEnfant']=1\ndata.loc[(data.Age<14),'isParent']=0\n\ndata.loc[(data.Parch>0)&(data.Title=='Mrs'),'isEnfant']=0\ndata.loc[(data.Parch>0)&(data.Title=='Mrs'),'isParent']=1\n\ndata.loc[(data.Parch>0)&(data.Title=='Mr'),'isEnfant']=0\ndata.loc[(data.Parch>0)&(data.Title=='Mr'),'isParent']=1","cbd039fd":"for x in data.LastNameNum.unique():\n    if len(data[(data.LastNameNum==x)&(data.Title=='Mrs')]):\n        data.loc[(data.LastNameNum==x)&(data.Title=='Miss'),'isParent']=0\n        data.loc[(data.LastNameNum==x)&(data.Title=='Miss'),'isEnfant']=1\n        data.loc[(data.LastNameNum==x)&(data.Title=='Master'),'isParent']=0\n        data.loc[(data.LastNameNum==x)&(data.Title=='Master'),'isEnfant']=1\n    \n    ageMax = data[data.LastNameNum==x].Age.max()\n    ageMin = data[data.LastNameNum==x].Age.min()\n    data.loc[(data.LastNameNum==x)&(data.Age<(ageMax-18)),'isEnfant']=1\n    data.loc[(data.LastNameNum==x)&(data.Age>(ageMin+18)),'isEnfant']=0\n    data.loc[(data.LastNameNum==x)&(data.Age<(ageMax-18)),'isParent']=0\n    data.loc[(data.LastNameNum==x)&(data.Age>(ageMin+18)),'isParent']=1\n","1b9884bb":"for x in data.Ticket.unique():\n    if len(data[(data.Ticket==x)&(data.Title=='Mrs')]):\n        data.loc[(data.Ticket==x)&(data.Title=='Miss'),'isParent']=0\n        data.loc[(data.Ticket==x)&(data.Title=='Miss'),'isEnfant']=1\n        data.loc[(data.Ticket==x)&(data.Title=='Master'),'isParent']=0\n        data.loc[(data.Ticket==x)&(data.Title=='Master'),'isEnfant']=1\n    \n    ageMax = data[data.Ticket==x].Age.max()\n    ageMin = data[data.Ticket==x].Age.min()\n    data.loc[(data.Ticket==x)&(data.Age<(ageMax-18)),'isEnfant']=1\n    data.loc[(data.Ticket==x)&(data.Age>(ageMin+18)),'isEnfant']=0\n    data.loc[(data.Ticket==x)&(data.Age<(ageMax-18)),'isParent']=0\n    data.loc[(data.Ticket==x)&(data.Age>(ageMin+18)),'isParent']=1\n","589c15ff":"data.loc[(data.SibSp>1),'isParent']=0\ndata.loc[(data.SibSp>1),'isEnfant']=1\n\ndata.loc[(data.Parch>2),'isParent']=1\ndata.loc[(data.Parch>2),'isEnfant']=0","20cf18f1":"data.isParent.isna().sum()","07ef6cff":"data[data.isParent.isna()]","a8e84ece":"data.loc[data.PassengerId==137,'isParent']=0\ndata.loc[data.PassengerId==137,'isEnfant']=1\n\ndata.loc[data.PassengerId==418,'isParent']=0\ndata.loc[data.PassengerId==418,'isEnfant']=1\n\ndata.loc[data.PassengerId==540,'isParent']=0\ndata.loc[data.PassengerId==540,'isEnfant']=1\n\ndata.loc[data.PassengerId==1130,'isParent']=0\ndata.loc[data.PassengerId==1130,'isEnfant']=1\n\ndata.loc[data.PassengerId==1041,'isParent']=1\ndata.loc[data.PassengerId==1041,'isEnfant']=0","7ddc59a5":"_ = sns.barplot(x=\"isEnfant\",y=\"Survived\", data=data)","e64a08b3":"correlation['isEnfant']=cramers_v(data.loc['train']['isEnfant'],data.loc['train']['Survived'])\nprint(correlation['isEnfant'])","e727225e":"data['AgeBin']=pd.cut(data['Age'],bins=[0,5,30,65,100],labels=[0,1,2,3],include_lowest=True).astype(int)","4587af47":"cramers_v(data.loc['train']['AgeBin'],data.loc['train']['Survived'])","19d6f03a":"sns.barplot(x=\"AgeBin\",y=\"Survived\", data=data)","d1b64a9d":"correlation['AgeBin']=cramers_v(data.loc['train']['AgeBin'],data.loc['train']['Survived'])\nprint(correlation['AgeBin'])","f41c205a":"data['Age']=StandardScaler().fit_transform(data['Age'].values.reshape(-1, 1))","14039b61":"correlation['Age']=cramers_v(data.loc['train']['Age'],data.loc['train']['Survived'])\nprint(correlation['Age'])","4fedacfb":"data.SibSp.describe()","e44deaec":"data.SibSp.value_counts()","86441bb2":"sns.barplot(x=\"SibSp\",y=\"Survived\", data=data)","f71e575b":"correlation['SibSp']=cramers_v(data.loc['train']['SibSp'],data.loc['train']['Survived'])\nprint(correlation['SibSp'])","75e6512d":"data.Parch.value_counts()","0132140b":"sns.barplot(x=\"Parch\",y=\"Survived\", data=data)","1e04a3c2":"correlation['Parch']=cramers_v(data.loc['train']['Parch'],data.loc['train']['Survived'])\nprint(correlation['Parch'])","7c96df9a":"data[['Cabin','PassengerId']].info()","6d8edd89":"data['Cabin']=data['Cabin'].fillna('X').astype(str).str[0]","664dbf24":"sns.barplot(x=\"Cabin\",y=\"Survived\", data=data)","f3116674":"_ = sns.countplot(x=\"Cabin\", data=data)","6615f286":"correlation['Cabin']=cramers_v(data.loc['train']['Cabin'],data.loc['train']['Survived'])\nprint(correlation['Cabin'])","c2489300":"data = data.drop(['Cabin'],axis=1)","27418517":"data.Ticket.describe()","1d63ac56":"data.groupby('Ticket').agg({'Survived': 'var'}).Survived.value_counts()","c19c5d13":"correlation['Ticket']=cramers_v(data.loc['train']['Ticket'],data.loc['train']['Survived'])\nprint(correlation['Ticket'])","32d71a2b":"data.Embarked.value_counts()","5fc354d2":"data.Embarked.isna().sum()","2df6fba4":"data[data.Embarked.isna()]","4f41a8e7":"data[data.Ticket==42]","7b2d8cf0":"# pareil pour le port d'embarquement (Embarked), il n'en manque que deux (dans train pas dans test)\n# plutot que de faire de fausses hypoth\u00e8ses on supprime les donn\u00e9es manquantes\ndata = data.dropna(subset=['Embarked'])","9fde3fc1":"_ = sns.barplot(x=\"Embarked\",y=\"Survived\", data=data)","89e45b89":"_=sns.countplot(x=\"Embarked\", data=data)","38a2024b":"correlation['Embarked']=cramers_v(data.loc['train']['Embarked'],data.loc['train']['Survived'])\nprint(correlation['Embarked'])","4008e64c":"port = {'C': 0,'Q': 1,'S':2}\ndata.Embarked = [port[item] for item in data.Embarked]","841de22b":"data.Fare.describe()","f25e636c":"# nombre de valeurs manquantes\ndata.Fare.isna().sum()","e0fdacbf":"data[data.Fare.isna()]","aa78a63b":"data[data.Pclass==3].Fare.describe()","506a5de4":"# on remplace donc la valeur manquante par la moyenne de la 3e classe\ndata.Fare=data.Fare.fillna(13)","9c6bf725":"_= sns.distplot(data.Fare)","4768228b":"(data.Fare==0.0).sum()","57446b7e":"data[data.Fare==0]","23368897":"ax = sns.boxplot(x=\"Pclass\", y=\"Fare\", data=data[(data.Title==\"Mr\")&(data.Embarked==2)&(data.AgeBin==1)&(data.SibSp==0)&(data.Parch==0)])","15d1734c":"for classe in data.Pclass.unique():\n    PrixMoyen = data[(data.Title==\"Mr\")&\n         (data.Embarked==2)&\n         (data.AgeBin==1)&\n         (data.SibSp==0)&\n         (data.Parch==0)&\n         (data.Fare!=0.0)&\n         (data.Pclass==classe)].Fare.mean()\n    print(\"Prix moyen de la classe \",classe,\" = \",PrixMoyen)","c0966073":"data.loc[(data.Fare==0.0)&\n         (data.Pclass==1),'Fare']=37\ndata.loc[(data.Fare==0.0)&\n         (data.Pclass==2),'Fare']=16\ndata.loc[(data.Fare==0.0)&\n         (data.Pclass==3),'Fare']=9","e5087fde":"_= sns.distplot(data.Fare)","86acaba8":"eta_squared(data.loc['train'].Survived,data.loc['train'].Fare)","91edc267":"scipy.stats.skew(data.Fare.dropna())","9bc4391a":"_= sns.distplot(np.log1p(data.Fare))","aa9293a4":"eta_squared(data.loc['train'].Survived,np.log1p(data.loc['train'].Fare))","b3cf1bf7":"data.Fare=np.log1p(data.Fare)","081173a2":"data['Fare']=StandardScaler().fit_transform(data['Fare'].values.reshape(-1, 1))","9837c474":"correlation['Fare']=cramers_v(data.loc['train']['Fare'],data.loc['train']['Survived'])\nprint(correlation['Fare'])","16aa6f35":"data['FareBin']=pd.qcut(data.Fare,5, labels=False)","e205dab6":"sns.barplot(x=data['FareBin'],y=data.Survived)","27258f7b":"correlation['FareBin']=cramers_v(data.loc['train']['FareBin'],data.loc['train']['Survived'])\nprint(correlation['FareBin'])","0a4fcc4d":"# on regroupe par tickets, calcule le nombre d'occurences de chaque tickets et si l'occurence est > 1\n# on renvoie 1 (personne ne voyageant pas seule)\nVoyageSeul = (data.Ticket.groupby(data.Ticket).transform('count')==1)*1","09f45cb7":"data['IsAlone']=(((data.SibSp+data.Parch)==0)&VoyageSeul)*1","c9b99d7c":"sns.barplot(x=\"IsAlone\",y=\"Survived\", data=data)","d8e63ee1":"correlation['IsAlone']=cramers_v(data['IsAlone'],data['Survived'])\nprint(correlation['IsAlone'])","08c87428":"data['FamilySize']=data.Parch+data.SibSp+1","79d852ef":"data['FamilySize']=data[['FamilySize', 'TicketSibling']].values.max(1)","c749718f":"correlation['FamilySize']=cramers_v(data['FamilySize'],data['Survived'])\nprint(correlation['FamilySize'])","3bb27bb8":"# les donn\u00e9es ont \u00e9t\u00e9 enregistr\u00e9es dans le fichier accompagnants.csv\naccompagnants = pd.read_csv('..\/input\/titanicdata\/accompagnants.csv')","394e5b04":"data[\"Servant\"]=0","3d7bf586":"import unicodedata\n\ndef strip_accents(text):\n    text = unicodedata.normalize('NFD', text)\n    text = text.encode('ascii', 'ignore')\n    text = text.decode(\"utf-8\")\n    return str(text)\n\n# on va parcourir la liste des passagers et regarder si les nom de famille correspond, en cas de correspondance unique\n# on sait qu'on a trouv\u00e9 le bon passager et on lui attribue la valeur 1 en colonne Servant\n# sinon on croise aussi la donn\u00e9e prenom pour \u00eatre s\u00fbr\nfor _,line in accompagnants.iterrows():\n    x = line['Surname'].split(' ')[0]\n    x = strip_accents(x)\n    y = line['First Name'].split(' ')[0]\n    y = strip_accents(y)\n    result = len(data[(data['Last Name'].str.contains(x))&(data['FamilySize']==1)])\n    if result==0:next\n    if result==1:\n        data.loc[(data['Last Name'].str.contains(x))&(data['FamilySize']==1),'Servant']=1\n    if result>1:\n        data.loc[(data['First Name'].str.contains(y))&(data['Last Name'].str.contains(x))&(data['FamilySize']==1),'Servant']=1\n       \n","88ac3702":"correlation['Servant']=cramers_v(data['Servant'],data['Survived'])\nprint(correlation['Servant'])","d5b61aac":"pd.crosstab(data['Servant'],data['Survived'])","f8bb1158":"# on va cr\u00e9er de nouvelles variables pour indiquer si la m\u00e8re a surv\u00e9cu, le p\u00e8re a surv\u00e9cu et les enfants ont surv\u00e9cu,\n# ou s'ils sont d\u00e9c\u00e9d\u00e9s\ndata['parentSurvived']=0\ndata['childrenSurvived']=0\ndata['parentDied']=0\ndata['childrenDied']=0\ndata['SiblingDied']=0\ndata['SiblingSurvived']=0","5e0cd914":"for x in data.Ticket.unique():\n    if len(data[data.Ticket==x])<2:continue\n        \n    # on cr\u00e9er une variable childrenSurvived qui pour chaque famille correspond au nombre d'enfants ayant surv\u00e9cu\n    if len(data.loc['train'][(data.loc['train'].Ticket==x)&(data.loc['train'].isEnfant==1)]):\n        y = data.loc['train'][(data.loc['train'].Ticket==x)&(data.loc['train'].isEnfant==1)].Survived.sum()\n\n        # si x est d\u00e9fini\n        if y==y:\n            if y==0:\n                data.loc[(data.Ticket==x)&(data.isParent==1),'childrenDied'] = 1\n            if y>0:\n                data.loc[(data.Ticket==x)&(data.isParent==1),'childrenSurvived'] = y\n\n                \n    if len(data.loc['train'][(data.loc['train'].Ticket==x)&(data.loc['train'].isParent==1)]):\n        # on cr\u00e9er une variable parentSurvived qui pour chaque famille correspond \u00e0 la survie d'au moins un des parents\n        y = data.loc['train'][(data.loc['train'].Ticket==x)&(data.loc['train'].isParent==1)].Survived.max()\n        # si x est d\u00e9fini\n        if y==y:\n            if y==0:\n                data.loc[(data.Ticket==x)&(data.isEnfant==1),'parentDied'] = 1\n            if y>0:\n                data.loc[(data.Ticket==x)&(data.isEnfant==1),'parentSurvived'] = y\n","6ba31b77":"# et pareil pour la survie des freres et soeurs\nfor x in data.Ticket.unique():\n    if len(data[data.Ticket==x])<2:continue\n    # il faut aussi qu'il y ait plusieurs enfants \n    if len(data[(data.Ticket==x)&(data.isEnfant==1)])<2:continue\n    if len(data.loc['train'][(data.loc['train'].Ticket==x)&(data.loc['train'].isEnfant==1)])==0:continue\n\n    y = data.loc['train'][(data.loc['train'].Ticket==x)&(data.loc['train'].isEnfant==1)].Survived.sum()\n\n    # si y est d\u00e9fini\n    if y==y:\n        data.loc[(data.Ticket==x)&(data.isEnfant==1),'SiblingSurvived'] = y\n        \n    y = (data.loc['train'][(data.loc['train'].Ticket==x)&(data.loc['train'].isEnfant==1)].Survived==0).sum()\n\n    # si y est d\u00e9fini\n    if y==y:\n        data.loc[(data.Ticket==x)&(data.isEnfant==1),'SiblingDied'] = y\n","5fd06770":"cramers_v(data.loc[(data.isParent==1)&(data.Sex==0),'childrenSurvived'],data.loc[(data.isParent==1)&(data.Sex==0),'Survived'])","3e20ae65":"pd.crosstab(data.loc[(data.isParent==1)&(data.Sex==0),'childrenSurvived'],data.loc[(data.isParent==1)&(data.Sex==0),'Survived'])","ae210354":"cmap = sns.diverging_palette(h_neg=10,h_pos=240,as_cmap=True)\ncorr = data.drop(['PassengerId'],axis=1).corr(method='pearson')\nmask = np.triu(np.ones_like(corr, dtype=bool))\nsns.heatmap(corr, mask=mask,center=0, cmap=cmap, linewidths=1,annot=True, fmt=\".2f\")","98404a9a":"dataForML=data.drop(['Name','Last Name','First Name'],axis=1)\ndataForML.head(2)","8c2fb399":"MyEncoder=preprocessing.LabelEncoder()\nMyEncoder.fit(data['Ticket'].sort_values())\ndataForML['Ticket'] = MyEncoder.transform(dataForML['Ticket'])\nMyEncoder.fit(data['Title'].sort_values())\ndataForML['Title'] = MyEncoder.transform(dataForML['Title'])\ndataForML.head(2)","2d311407":"y=dataForML.loc['train','Survived'].astype('int')","24792c5a":"X=dataForML.loc['train'].drop(['Survived'],axis=1)","80f1c483":"X_test=dataForML.loc['test'].drop(['Survived'],axis=1)","c0507a80":"def evalue(fonction,X,y):\n    from sklearn import model_selection\n\n    cv_split = model_selection.ShuffleSplit(n_splits = 5, test_size = .2, train_size = .8, random_state = 42 ) \n    cv_results = model_selection.cross_validate(fonction, X, y, cv  = cv_split)\n\n    #print(\"train score : \",cv_results['train_score'].mean())\n    #print(\"test score : \",cv_results['test_score'].mean())\n    return cv_results['test_score'].mean()","681005c1":"from sklearn.ensemble import RandomForestClassifier\nmodel2=RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',\n            max_depth=35, max_features='auto', max_leaf_nodes=None,\n            min_impurity_decrease=0.0001, min_impurity_split=None,\n            min_samples_leaf=1, min_samples_split=2,\n            min_weight_fraction_leaf=0.0, n_estimators=50, n_jobs=-1,\n            oob_score=True, random_state=0, verbose=0,\n            warm_start=False)\nscore = evalue(model2,X,y)\nscore","ac349db0":"result=pd.Series()\n\nfor depth in range(5,50):\n    model2=RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',\n                max_depth=depth, max_features='auto', max_leaf_nodes=None,\n                min_impurity_decrease=0.0001, min_impurity_split=None,\n                min_samples_leaf=1, min_samples_split=2,\n                min_weight_fraction_leaf=0.0, n_estimators=50, n_jobs=-1,\n                oob_score=True, random_state=0, verbose=0,\n                warm_start=False)\n    result = result.set_value(depth,evalue(model2,X,y))","f3ed723b":"sns.lineplot(result.index, result.values)","8c03f3b4":"model2=RandomForestClassifier(bootstrap=True, class_weight=None, criterion='entropy',\n            max_depth=11, max_features='auto', max_leaf_nodes=None,\n            min_impurity_decrease=0.0001, min_impurity_split=None,\n            min_samples_leaf=1, min_samples_split=2,\n            min_weight_fraction_leaf=0.0, n_estimators=70, n_jobs=-1,\n            oob_score=True, random_state=0, verbose=0,\n            warm_start=False)\n\nscore = evalue(model2,X,y)\nscore","bc2b35e2":"model2.fit(X,y)","05ad5f6a":"y_cible = model2.predict(X_test[X_test.columns])\nsample=pd.DataFrame()\nsample['PassengerId'] = data.loc['test','PassengerId']\nsample['Survived'] = y_cible\nsample.Survived=sample.Survived.astype(int)\nsample=sample.reset_index(drop=True)\nsample.to_csv('submission.csv', index=False)","25d5ca3a":"## 6.6.2 identification des adultes et des enfants","23a0bb7c":"# 6. Analyse et mise en forme des donn\u00e9es","53b6040a":"## 5.1 Chargement des librairies python","701c1aeb":"Les donn\u00e9es sont num\u00e9riques (0 pour les passagers disparus, 1 pour les survivants), c'est la donn\u00e9e cible, il n'y a pas de valeurs aberrantes. Voici visuellement la r\u00e9partition des survivants et des victimes :","f5a449f7":"Il y a 17 valeurs nulles plus exactement, voyons le profil des passagers en question :","f32d4c4d":"La corr\u00e9lation est assez faible, on peut essayer de l'am\u00e9liorer toutefois. Sur le graphique on voie que qu'il y a une forte assym\u00e9trie dans la distribution, on peut d'ailleurs calculer le coefficient d'asym\u00e9trie (skewness en anglais) par la fonction \"skew\" de scipy (qui doit \u00eatre de zero si la r\u00e9partition est sym\u00e9trique ):","3fa90997":"Le nom (champ Name) est peu exploit\u00e9 dans les kernels publi\u00e9s sur KAggle, pourtant on peut en tirer au moins 3 informations int\u00e9ressantes :\n- le \"Titre\" (Mr, Col, ...)\n- le Nom de famille qui permettra de cr\u00e9er des groupes (potentiellement regrouper les passagers par famille)\n- le Prenom, \u00e0 priori donn\u00e9e inutile mais le Pr\u00e9nom est souvent utilis\u00e9 en Data mining pour essayer d'\u00e9valuer l'age de la personne quand cette donn\u00e9e n'existe pas, en effet les pr\u00e9noms sont \u00e0 la mode pendant une certaine p\u00e9riode, si on connait le prenom on peut estimer l'age le plus probable en fonction de la p\u00e9riode ou le prenom en question \u00e9tait \u00e0 la mode !! (m\u00e9thode tr\u00e8s approximative mais si on n'a rien d'autre c'est toujours \u00e7\u00e0)","b52a447f":"On va d\u00e9j\u00e0 remplacer les valeurs manquantes par un \"X\"","b8b89f00":"Ce sont tous des hommes voyangeant seul, ayant embarqu\u00e9 au dernier port (2), et ayant pour la grande majorit\u00e9 entre 30 et 40 ans, voyons la r\u00e9partition des prix pour ces profils, en fonction de la classe : ","3a383297":"### 5.1.1 Ajout de fonctions utiles","a8e426c8":"Renseignement de l'information \"Age\" manquante","691cd7eb":"Et bien manque de bol ... ce sont deux femmes voyageant seul et ensemble, et qui ont surv\u00e9cu, elles n'apportent pas grand chose au jeu de donn\u00e9es, on va les supprimer","e3d366c3":"## 6.6.1 Estimation de l'age pour les donn\u00e9es manquantes","c96b7dd4":"La corr\u00e9lation est tr\u00e8s faible, mais am\u00e9lior\u00e9e, on applique cette transformation","2b4ae11c":"Cr\u00e9ation de la colonne \"servant\" ","061b09a2":"# 9. Machine learning","6f9e7d78":"# 2. Le Challenge du Titanic\n\nLe challenge du titanic est disponible en ligne sur le site de Kaggle : https:\/\/www.kaggle.com\/c\/titanic\n","6742ce55":"**Objectif du challenge :**\nLe 15 Avril 1912, pendant la voyage inaugural, le titanic sombra apr\u00e8s une collision avec un iceberg, parmis les 2224 passagers et membres d'\u00e9quipage, 1502 p\u00e9rirent.\nL'une des raisons de ce d\u00e9sastre \u00e9tait le manque de canots de sauvetage. Les survivants doivent leur salut \u00e0 la chance mais pas seulement, les femmes et les enfants ont \u00e9t\u00e9 sauv\u00e9s en premier par exemple.\nDans ce challenge il faut justement analyser quelles cat\u00e9gories de personnes ont surv\u00e9cu, et appliquer cette analyse \u00e0 un jeu de test (liste de passagers sans information de survie).\n\n**Donn\u00e9es d'entr\u00e9e**\nUn jeu de donn\u00e9es d'entrainement de 891 lignes est fourni (train.csv), au format csv (comma separated values), il comporte 12 colonnes :\n- PassengerId (identifiant passager)\n- Survived (0 : d\u00e9c\u00e9d\u00e9, 1 : a surv\u00e9cu)\n- Pclass (classe, de 1 \u00e0 3)\n- Name (Nom, pr\u00e9nom et titre)\n- Sex (male\/female)\n- Age (en ann\u00e9es)\n- SibSp (nombre de fr\u00e8re, soeur, beau-fr\u00e8re, belle soeur, mari ou femme)\n- Parch (nombre de parents et d'enfants)\n- Ticket (num\u00e9ro du ticket)\n- Fare (prix du ticket)\n- Cabin (num\u00e9ro de cabine)\n- Embarked (port d'emarquement : C - Cherbourg, S - Southampton, Q = Queenstown)\n\nUn jeu de test de 418 lignes est fourni (test.csv), il comporte 11 colonnes, les m\u00eames que pour le jeu d'entrainement sans la colonne \"Survived\" \u00e9videmment puisque c'est celle qu'il faut deviner.\n\n**Donn\u00e9es de sortie \u00e0 fournir**\nLe r\u00e9sultat de la pr\u00e9diction est \u00e0 fournir au format csv aussi, comportant 418 lignes (pour les 418 passagers du jeu de test) et deux colonnes : \nPassengerId (identifiant passager)\nSurvived (0 : d\u00e9c\u00e9d\u00e9, 1 : a surv\u00e9cu)\nexemple : 892,0 893,0 894,0 895,0 896,0 897,0\n\n\n**Type de probl\u00e8me**\nIl s'agit d'un probl\u00e8me de classification binaire, qu'on peut traiter via des outils d'apprentissage supervis\u00e9s puisqu'on dispose d'un jeu d'entrainement.\n\n\n**Evaluation du r\u00e9sultat**\nLe fichier csv produit est mis en ligne sur kaggle (il faut \u00eatre inscrit sur le site)\n\nLe score est tout simplement la pr\u00e9cision de la pr\u00e9diction autrement dit le nombre de bonnes pr\u00e9dictions (passagers ayant surv\u00e9cu ou non) rapport\u00e9 au nombre total de passagers du jeu de test (418)\n\nPr\u00e9cision = (TP+TN)\/(TP+TN+FP+FN)\n\nAvec : TP = True positive; FP = False positive; TN = True negative; FN = False negative \n\n**Recherche de donn\u00e9es compl\u00e9mentaires**\nDans les challenges et plus g\u00e9n\u00e9ralement en science des donn\u00e9es il n'est pas interdit de mener sa propre enquete pour recueillir toute information permettant d'am\u00e9liorer la comprehension du probl\u00e8me voire sa r\u00e9solution.\nLa page wikipedia https:\/\/en.wikipedia.org\/wiki\/RMS_Titanic du titanic donne plusieurs informations int\u00e9ressantes :\n- La page donne un tableau du nombre de survivants, auquel il faut retirer les membres d'\u00e9quipage puisque notre challenge ne porte que sur les passagers. Il en ressort que sur les 1316 passagers 498 ont surv\u00e9cu, nombre \u00e0 retenir pour essayer d'am\u00e9liorer notre pr\u00e9diction.\n- il y avait 107 enfants \u00e0 bord\n- l'ampleur du d\u00e9sastre est due \u00e0 la d\u00e9sorganisation et au fait qu'il n'y avait pas assez de canots pour sauver tout le monde\n- Les officiers s'occupent de faire monter les femmes et les enfants en priorit\u00e9 dans les canots, et les premi\u00e8re et deuxi\u00e8me classes, \u00e9tant plus pr\u00e8s des canots, y ont plus facilement acc\u00e8s.","12c85ccc":"On conserve cette nouvelle variable, elle apporte une bonne corr\u00e9lation avec la survie, il faudra comparer la performance des algorithmes de classification en prenant l'age en tant que donn\u00e9e quantitative ou l'age transform\u00e9 en classes d'age.","73ba8f5e":"<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/6\/6e\/St%C3%B6wer_Titanic.jpg\">","dd13e86f":"## 6.4. Exploitation du nom","cb379702":"## 6.10. Ticket","333aec1e":"Et enfin nous allons centrer et r\u00e9duire l'age (valeur num\u00e9rique quantitative initiale) pour am\u00e9liorer son interpr\u00e9tation par les algorithmes d'apprentissage.","c439c322":"## 6.2. Survived","3e21cd45":"# 3. M\u00e9thodologie propos\u00e9e","32b3021b":"Si on ajoute les deux param\u00e8tres SibSp (\u00e9pouses + fr\u00e8res et soeurs) et Parch (parents + enfants) on peut estimer la taille de la famille voyageant \u00e0 bord, ce param\u00e8tre nous facilitera ult\u00e9rieurement la recherche des membres d'une famille.","65d419fb":"Pour effectuer une analyse statistique il est n\u00e9cessaire de pr\u00e9-traiter les donn\u00e9es :\n- identifier et traiter les valeurs aberrantes\n- identifier et traiter valeurs manquantes\n- formats : adaptation des donn\u00e9es textuelles ou de type objet (donn\u00e9es qualitatives)\n- si n\u00e9cessaire, on peut centrer et r\u00e9duire les donn\u00e9es, ou \u00e9liminer les assym\u00e9tries\n- supprimer les donn\u00e9es jug\u00e9es inutiles, sans correlation avec la cible","ea45db55":"Il y a beaucoup d'informations manquantes (ou alors beaucoup de passagers n'ayant pas de cabine, ce qui est moins cr\u00e9dible) , on va essayer d'utiliser cette information malgr\u00e9 tout.","1a3b6751":"Le test de shapiro va permettre de v\u00e9rifier si la r\u00e9partition des ages est une r\u00e9partition normale :","f81c894d":"D\u00e9j\u00e0 tout le monde a un ticket, toutes les informations sont pr\u00e9sentes. Ensuite il y a des \"groupes de tickets\" c'est \u00e0 dire des personnes qui ont le m\u00eame num\u00e9ro de ticket et qui voyagaient ensemble, ceci peut \u00eatre une information int\u00e9ressante, il peut y avoir corr\u00e9lation dans la destin\u00e9e des personnes voyageant ensemble, calculons la variance au sein de chaque groupe de billets","a1f43aa0":"Dans un premier temps nous conservons toutes les autres variables, bien que certaines ont tr\u00e8s peu de corr\u00e9lation avec la valeur cible comme nous l'avons vu plus haut, on fera une s\u00e9lection des variables les plus pertinentes dans un second temps, nous supprimons simplement la valeur  'PassengerId', qui n'a aucun int\u00e9r\u00eat pour l'apprentissage, ainsi que 'Name','Last Name','First Name' qui ne sont pas utiles","b986c901":"On ne va pas en faire grand chose \u00e0 priori, on conserve le Prenom uniquement s'il fallait identifier une personne en particulier, comme on le verra plus tard pour les domestiques.","d67753f2":"Pour les valeurs 'Ticket' et 'Title' il faut les transformer en valeurs num\u00e9riques :","8edb1701":"## 9.1. Pr\u00e9paration des donn\u00e9es","af252fcc":"## 5.2 Lecture des donn\u00e9es","7c3d7331":"Dans le \u00a74 on avait vu que 498 passagers avaient surv\u00e9cu, dans le jeu de test il y en a 342, on devrait donc en trouver 156 dans le jeu de test.","f66235b9":"## 9.2. RandomForestClassifier","66fe61a2":"## Nom de famille","4fa145f1":"Informations sur cette variable :","2255f738":"Il n'y a pas de doublons ni de valeurs aberrantes, les identifiants vont de 1 \u00e0 1309, on conserve cette caract\u00e9ristique telle quelle, elle ne servira pas pour l'apprentissage mais pour identifier de mani\u00e8re unique les passagers","c7444c91":"## 6.8. Parch","58f86b41":"Est-ce qu'on a une meilleure corr\u00e9lation entre cette nouvelle variable et la survie (par rapport \u00e0 la corr\u00e9lation Age\/Survie)","07b5512d":"## 6.9. Cabine","162697e8":"## 7.1. Personnes seules","5f5ae17c":"Il est toujours possible de s\u00e9parer les donn\u00e9es d'entrainement et de test :","07d8077b":"## 6.6. Age","b027a44f":"Il y a tr\u00e8s peu de variance pour les profils en question et dans chaque classe, on va donc remplacer (inf\u00e9rer) les prix nuls par les moyennes des profils similaires de chaque classe :","8502c813":"Il y a donc corr\u00e9lation au sein d'une famille, en effet si le nom de famille n'avait aucune influence, la variance moyenne devrait \u00eatre de 0.25 environ, pour le prouver nous allons g\u00e9n\u00e9rer un jeu de variables binaires al\u00e9atoire et refaire le calcul","4b52fdc3":"Logiquement on a une forte corr\u00e9lation entre les variables un peu articifielles que nous avons cr\u00e9\u00e9es :\n- FamilySize et SibSp\/Parch\n- AgeBin et IsAdult\nelles sont potentiellement redondantes, on verra s'il est utile de les conserver ou non en testant des apprentissages avec ou sans ces variables.\n\nForte corr\u00e9lation aussi entre le prix du billet (Fare) et la classe ou le fait d'avoir une cabine, ce qui semble logique.\n","f19dd609":"Voyons si la corr\u00e9lation est meilleure avec la donn\u00e9e Fare d\u00e9-sym\u00e9tris\u00e9e","a0d3afe9":"## 5.3 Structure des donn\u00e9es","716702a3":"On va ajouter une fonction permettant de calculer le coefficient de Cramer, afin de mesurer la corr\u00e9lation entre variables qualitatives, c'est une fonction qui n'est pas impl\u00e9ment\u00e9e de mani\u00e8re native dans les librairies charg\u00e9es ci-dessus :","3bc00b1e":"## 7.2. Taille de la famille","18b284fa":"Le nouveau jeu de donn\u00e9es comportet 1309 lignes.","920a566b":"Il y a trop peu de donn\u00e9es sur la cabine, par ailleurs la classe du passager d\u00e9finit l'emplacement de sa cabine, pour ne pas g\u00e9n\u00e9rer trop de bruit nous allons supprimer cette variable","b052db63":"Extraction du pr\u00e9nom, et affectation de ce pr\u00e9nom \u00e0 une nouvelle colonne \"First Name\"","7134746e":"## 6.5. Champ \"sex\"","98379437":"Voici les valeurs trouv\u00e9es et leur occurence :","37f821f1":"## 6.11. Port d'embarquement","a0d9aa43":"On va v\u00e9rifier que pour des listes de valeurs al\u00e9atoires on a un coefficient proche de zero et pour des listes corr\u00e9l\u00e9es on a un coefficient de 1 :","296352bc":"## Prenom","d1c54706":"on constate une bosse en bas de graphique, entre 0 et 10 ans, les enfants de sexe masculin ont un meilleur taux de survie, voyons la corr\u00e9lation. Pour mesurer la corr\u00e9lation on va comparer l'age de la population ayant surv\u00e9cu et l'age de la population ayant succomb\u00e9 au nauffrage, et pour comparer ces deux populations on va utiliser la quantit\u00e9 ETA\u00b2 pour calculer le degr\u00e9 de correlation :","4cab3f06":"Voyons si le port d'embarquement joue sur la survie :","84b7285d":"La corr\u00e9lation peut \u00eatre calcul\u00e9e par le calcul du coefficient de cramer :","1d5d72d1":"certaines familles ont voyag\u00e9 avec leur domestique(s), le jeu de donn\u00e9es ne les distingue pas, mais si on peut les identifier, ce pourrait \u00eatre une information int\u00e9ressante aussi. Les informations ont \u00e9t\u00e9 r\u00e9cup\u00e9r\u00e9es sur le site https:\/\/titanicfacts.net\/titanic-passenger-list\/ grace au script pr\u00e9sent\u00e9 en Annexe 1.","fa0e859c":"**Hypoth\u00e8se** : Pour les passagers dont le titre est \"Mrs\", c'est \u00e0 dire une femme mari\u00e9e, on va renseigner la valeur moyenne de l'age des femmes mari\u00e9es.","a5fa4b96":"Et le niveau de corr\u00e9lation :","a057b14a":"Calcul de la corr\u00e9lation :","9fbc826a":"puis calculer et publier le r\u00e9sultat","2e383acf":"Visuellement il y a une forte d\u00e9pendance entre classe et survie, voyons quel est le niveau de corr\u00e9lation. Beaucoup de participants aux challenges Kaggle font l'erreur, ou du moins l'approximation de calculer la corr\u00e9lation entre tout type de variables (qualitative ordinale\/nominale -- quantitative ...) par le coefficient de pearson, mais ce calcul n'est en r\u00e9alit\u00e9 valable que pour deux variables quantitatives. Ici on va utiliser le crit\u00e8re de cramer qui calcule un chi2 normalis\u00e9 :","eb9f613d":"On va tout d'abord entrainer le mod\u00e8le sur tout le jeu de donn\u00e9es","e8456eb1":"Encore quelqu'un voyageant seul on ne peut pas comparer aux autres membres de la famille, on va regarder le cout moyen de la 3e classe :","33be8de9":"## 6.12. Fare","93b7396c":"## 7.4. Enfants","57b7a2aa":"Le premier probl\u00e8me \u00e0 traiter ce sont les donn\u00e9es manquantes, on va chercher \u00e0 remplir ces donn\u00e9es, il y a plusieurs possibilit\u00e9s : \n- remplacer les donn\u00e9es vides par la moyenne\n- supprimer les lignes comportant des donn\u00e9es manquantes\n\nMais ces m\u00e9thodes ne sont pas optimales, on perd de l'information, on va estimer au mieux l'age de ces passagers.\n\n**Hypoth\u00e8se** : Pour les passagers voyageant seuls on va consid\u00e9rer que ce sont des adultes, et pour identifier les passagers voyageant seul l'indication la plus fiable est de compter pour chaque num\u00e9ro de ticket, combien de personnes ont ce m\u00eame num\u00e9ro, on va ajouter une colonne \u00e0 notre jeu de donn\u00e9es avec cette indication, en groupant les donn\u00e9es par ticket, en comptant les effectifs et en extrayant la valeur obtenue dans une nouvelle colonne","49b6d0b2":"On va concat\u00e9ner les jeux de tests train et test pour pouvoir les transformer et les analyser ensemble, le nouveau jeu de donn\u00e9es sera nomm\u00e9 \"data\", pour cela on cr\u00e9e la colonne \"Survived\" dans \"test\" avec la valeur np.nan (not a number ... valeur ind\u00e9termin\u00e9e)","529a9706":"Voyons quel est le passager en question :","950d42c2":"Et enfin on va cr\u00e9er aussi une valeur num\u00e9rique pour le nom de famille afin de pouvoir les traiter plus facilement","f23ab8f2":"Et voyons la corr\u00e9lation entre type de cabine et taux de survie :","26229038":"Pour les personnes dont on ne sait pas ou elles ont embarqu\u00e9 ... rien de plus facile on va regarder o\u00f9 ont embarqu\u00e9 les autres membres de la famille","08dda82c":"On va pour l'instant conserver cette variable telle quelle.","59aa441a":"On a l\u00e9g\u00e8rement am\u00e9lior\u00e9 la corr\u00e9lation mais l'age reste un crit\u00e8re assez peu int\u00e9ressant. On va cr\u00e9er des classes d'age pour voir si on peut am\u00e9liorer la situation :","f21587dd":"## 6.7. SibSp","60ef64c2":"## 6.1 PassengerId","e0fde451":"Pour les 18 passagers qui n'ont toujours pas d'age on va analyser chaque cas \u00e0 la main en essayant de reconstituer les familles","9c7b4f56":"Nous avons pass\u00e9 en revue toutes les variables existantes, mais on peut en cr\u00e9er de nouvelles pour aider nos algorithmes de machine learning. ","1437f2a7":"Le niveau de correlation est int\u00e9ressant, on va toutefois conserver la variable initiale pour comparer les performance de classification en utilisant l'une ou l'autre des variables (comme pour l'age)","b870e4bd":"La valeur cible est donc d\u00e9pendante de la \"classe\", on conserve donc cette information.","1e47a7c2":"# 7. Cr\u00e9ation de nouvelles variables","ee0e1315":"### Liste des variables\n\n**Qualitatives:**\n- **Nominales** variables qui ont deux valeurs ou plus mais sans ordre d\u00e9fini.\n   > - **Cabin** : num\u00e9ro de cabine : donn\u00e9es tr\u00e8s incompl\u00e8tes, il faudra voir si on peut en tirer quelque chose\n   > - **Embarked** Port d'embarquement \n            C(Cherbourg)\n            Q(Queenstown) \n            S(Southampton)\n        \n- **Dichotomiques** Variables nominale prenant deux valeurs\n   > - **Sex**\n            Female\n            Male\n- **Ordinales**(variables qui ont deux valeurs ou plus avec un ordre bien d\u00e9fini, pour lesquelles on tpeut onc d\u00e9finir un ordre croissant ou dcraoissant.)\n   > - **Pclass** la premi\u00e8re classe est la plus prestigieuse, suivi des 2e et 3e\n            1(Upper)\n            2(Middle) \n            3(Lower)\n***\n**Quantitatives:**\n- **Discr\u00e9tes**\n  >  - **Passenger ID** identifiant passager: ne sera pas utilis\u00e9 pour l'apprentissage, mais doit \u00eatre conserv\u00e9 pour g\u00e9n\u00e9rer le fichier r\u00e9sultat dans lequel on doit fournir \"PassengerId + Survived\"\n  >  - **SibSp** nombre de fr\u00e8re, soeur, beau-fr\u00e8re, belle soeur, mari ou femme : donn\u00e9es num\u00e9riques et compl\u00e8tes\n  >  - **Parch** nombre de parents et d'enfants : donn\u00e9es num\u00e9riques et compl\u00e8tes\n  >  - **Survived** 0 : d\u00e9c\u00e9d\u00e9, 1 : a surv\u00e9cu, c'est la cible, fournie uniquement pour le jeu de donn\u00e9e d'entrainement \u00e9videmment\n\n- **Continues**\n>  - **Age** en ann\u00e9es : donn\u00e9es num\u00e9riques, mais incompl\u00e8tes (1046\/1309)\n>  - **Fare** prix du ticket : donn\u00e9es num\u00e9riques et incompl\u00e8tes (il n'en manque qu'une)\n***\n**Variable Textuelle**\n> - **Ticket** num\u00e9ro du ticket : donn\u00e9es non num\u00e9riques et compl\u00e8tes\n> - **Name** au format \"Nom, Titre prenom\", par exemple \"Allen, Mr. William Henry\" \n\n","954d82b0":"Le num\u00e9ro de ticket est \u00e0 priori une donn\u00e9e al\u00e9atoire et peu utile, mais en y regardant de plus pr\u00e8s :","1f960455":"## 6.3 Pclass","b2082ec2":"L\u00e0 aussi on transforme les valeurs de type caract\u00e8re en valeurs num\u00e9rique.","3ae7608e":"# 1. La plate-forme KAGGLE\n\nKaggle est une plateforme web organisant des comp\u00e9titions en science des donn\u00e9es. Sur cette plateforme, les entreprises proposent des probl\u00e8mes en science des donn\u00e9es et offrent un prix aux data-scientists obtenant les meilleures performances. L'entreprise a \u00e9t\u00e9 cr\u00e9\u00e9e en 2010 par Anthony Goldbloom.\n- L\u2019animateur de la comp\u00e9tition pr\u00e9pare les donn\u00e9es ainsi qu'une description du probl\u00e8me. Kaggle propose un service de conseil, encadre le concours et anonymise les donn\u00e9es\u2026\n- Les participants exp\u00e9rimentent avec diff\u00e9rentes techniques et s'affrontent pour produire le meilleur mod\u00e8le. Dans la plupart des comp\u00e9titions, les observations sont not\u00e9es imm\u00e9diatement (la note se base sur leur valeur pr\u00e9dictive par rapport \u00e0 un fichier de solution cach\u00e9e) qui donne un classement en direct.\n- \u00c0 la fin de la comp\u00e9tition, l\u2019animateur distribue le lot (argent, proposition de poste) en \u00e9change de \"a worldwide, perpetual, irrevocable and royalty free license [...] to use the winning Entry\", c'est-\u00e0-dire le droit d'utiliser gratuitement et sans limite de temps l'algorithme et le logiciel \u00e9labor\u00e9s, de fa\u00e7on \"non exclusive sauf indication contraire\".\n\nLa plate-forme h\u00e9berge aussi des challenges non r\u00e9mun\u00e9r\u00e9s qu'on peut voir comme des moyens de s'entrainer sans contraintes et de se comparer \u00e0 d'autres data-scientists, c'est sur un tel challenge que nous allons baser le rapport ci-joint : la Challenge du Titanic.\n\nMon profil est consultable sur la page suivante : https:\/\/www.kaggle.com\/djousto","dbee260f":"Pour le reste des passagers \"sans Age\" j'ai r\u00e9cup\u00e9r\u00e9 les donn\u00e9es du site internet : https:\/\/titanicfacts.net\/titanic-passenger-list\/ (voir script annexe)","ab36e04c":"Les for\u00eats d'arbres d\u00e9cisionnels1 (ou for\u00eats al\u00e9atoires de l'anglais random forest classifier) ont \u00e9t\u00e9 formellement propos\u00e9es en 2001 par Leo Breiman et Ad\u00e8le Cutler. Elles font partie des techniques d'apprentissage automatique. Cet algorithme combine les concepts de sous-espaces al\u00e9atoires et de bagging. L'algorithme des for\u00eats d'arbres d\u00e9cisionnels effectue un apprentissage sur de multiples arbres de d\u00e9cision entra\u00een\u00e9s sur des sous-ensembles de donn\u00e9es l\u00e9g\u00e8rement diff\u00e9rents","66a81428":"Voyons la forme de la distribution apr\u00e8s ces corrections :","e6a7cde7":"Voyons maintenant la distribution de cette variable :","bdad7593":"## 2.1. L'histoire\n\nLe naufrage du Titanic est l\u2019un des plus c\u00e9l\u00e8bres de l\u2019histoire. Le 15 avril 1912, lors de son voyage inaugural, le Titanic a sombr\u00e9 apr\u00e8s \u00eatre entr\u00e9 en collision avec un iceberg, tuant 1502 passagers et membres d\u2019\u00e9quipage sur 2224. Cette trag\u00e9die a choqu\u00e9 la communaut\u00e9 internationale et conduit \u00e0 de meilleures r\u00e8gles de s\u00e9curit\u00e9 pour les navires.\n\nL\u2019une des raisons pour lesquelles le naufrage a caus\u00e9 tant de morts est qu\u2019il n\u2019y avait pas assez de canots de sauvetage pour les passagers et l\u2019\u00e9quipage. Survivre au naufrage ou non comporte une certaine proportion de chance, certains groupes de personnes \u00e9taient plus susceptibles de survivre que d\u2019autres, comme les femmes, les enfants et les classes sup\u00e9rieures.\n\n## 2.2. Objectif du challenge\n\nDans ce d\u00e9fi, l'objectif est de r\u00e9cup\u00e9rer un jeu de donn\u00e9es d'entrainement (liste de personnes, caract\u00e9ristiques, survivants ou non ...) , de l'analyser et de pr\u00e9dire sur le jeu de donn\u00e9es de test quels passagers ont surv\u00e9cu \u00e0 la trag\u00e9die.\nIl est malheureusement assez facile de tricher \u00e0 ce challenge puisque la liste des passagers (dont les survivants) est disponible sur internet : https:\/\/titanicfacts.net\/titanic-passenger-list\/\nUne fois le travail effectu\u00e9 le r\u00e9sultat de la \"pr\u00e9diction\" est publi\u00e9 sur le site et compar\u00e9 aux autres participants, un classement est ainsi \u00e9tabli afin de comparer l'efficience des diff\u00e9rentes solutions.","6bda45d7":"Petite correlation, mais c'est mieux que l'Age par exemple, on va conserver cette donn\u00e9e.","6db0a142":"# 8. Bilan avec les nouvelles variables","0a77244a":"***corr\u00e9lation entre enfants et parents***","dd4bcd47":"***ETA\u00b2*** : Et on cr\u00e9e aussi une fonction eta\u00b2 permettant de calculer la corr\u00e9lation entre variable qualitative et quantitative.","34947135":"Il manque beaucoup de donn\u00e9es, et pas question de supprimer les passagers pour lesquels il manque l'age. On pourrait utiliser les algorithmes classiques d'imputation (sklearn imputers) mais ils sont assez basiques et remplacent les donn\u00e9es manquantes par la moyenne ou autre m\u00e9thode trop approximative, voyons d'abord quelle est l'importance de cette variable et si n\u00e9cessaire on va estimer les donn\u00e9es manquantes.","13cc3ad5":"Le r\u00e9sultat est int\u00e9ressant : pour une majorit\u00e9 des cas il y a forte corr\u00e9lation entre num\u00e9ro de billet et survie. ","9e7cb2d7":"Et enfin, comme on l'a vu plus haut, il n'y a pas de forte corr\u00e9lation entre l'age et la survie, on va simplement distinguer enfants et adultes en cr\u00e9ant une nouvelle variable \"isParent\", ce qui n'est pas chose ais\u00e9e, on n'est pas adulte \u00e0 un age bien d\u00e9fini, le but est plutot de distinguer ici :\n- les enfants (moins de 14 ans)\n- les adultes (plus de 20 ans)\n- et entre ces deux, quelqu'un de 18 ans par exemple peut \u00eatre parent au sens ou il a embarqu\u00e9 avec ses enfants, ou \u00eatre enfant au sens ou il a embarqu\u00e9 avec ses parents, et comme du coup il peut \u00eatre parent et enfant il faut cr\u00e9er deux varialbes, isParent, et isEnfant","881ca6ef":"Voyons si la survie des enfants a une influence sur la survie de la m\u00e8re","46f87f21":"Essayons de d\u00e9terminer la profondeur optimale de l'arbre par une boucle calculant le score pour des valeurs allant de 5 \u00e0 50","d5decbde":"Et enfin on va centrer et r\u00e9duire cette variable :","71a7b924":"# 4. Cerner le probl\u00e8me","52dcac2b":"## Title (titre du type Mr, Miss ...)","f8f28ead":"Et voici visuellement sur un tableau crois\u00e9 comment se r\u00e9partissent les donn\u00e9es :","cb347cdc":"## Valeurs nulles","3ae1b6ad":"## 3.2 Outils utilis\u00e9s\n\nLangage : \n- Python (version 3.7.1), qui avec R fait partie des langages les plus utilis\u00e9s en data science.\n\nLibrairies : \n- Pandas : traitement (manipulation, analyse) des tableaux de donn\u00e9es mixtes (variables num\u00e9riques, textuelles, bool\u00e9ens ..)\n- Numpy : manipulation des matrices ou tableaux multidimensionnels ainsi que des fonctions math\u00e9matiques op\u00e9rant sur ces tableaux.\n- SciKit Learn : librairie destin\u00e9e \u00e0 l'apprentissage automatique. Elle est d\u00e9velopp\u00e9e par de nombreux contributeurs notamment dans le monde acad\u00e9mique par des instituts fran\u00e7ais d'enseignement sup\u00e9rieur et de recherche comme l'Inria et T\u00e9l\u00e9com ParisTech. Elle comprend notamment des fonctions pour estimer des for\u00eats al\u00e9atoires, des r\u00e9gressions logistiques, des algorithmes de classification, et les machines \u00e0 vecteurs de support. Elle est con\u00e7ue pour s'harmoniser avec d'autres biblioth\u00e8ques libres Python, notamment NumPy et SciPy. \n- Et pour la visualisation : matplotlib et seaborn\n\nOutils de pr\u00e9sentation :\n- Jupyter (pour la r\u00e9alisation du pr\u00e9sent document) : une application web utilis\u00e9e pour programmer dans plus de 40 langages de programmation, dont: Python, Julia, Ruby, R, ou encore Scala2. Jupyter est une \u00e9volution du projet IPython. Jupyter permet de r\u00e9aliser des calepins ou notebooks, c'est-\u00e0-dire des programmes contenant \u00e0 la fois du texte en markdown et du code en Julia, Python, R... Ces notebooks sont tr\u00e8s utilis\u00e9s en science des donn\u00e9es car ils permettent de fusionner donn\u00e9es, code et texte, et permettent une mise en ligne tr\u00e8s ais\u00e9e des travaux.","a053060f":"L\u00e0 on a une assez forte corr\u00e9lation, c'est pour l'instant la variable la plus d\u00e9terminante, s'il fallait par exemple passer par un arbre de d\u00e9cision ce serait surement le premier crit\u00e8re \u00e0 prendre en compte. Visuellement si on regarde le taux de survie en fonction du Sexe c'est flagrant :","e776016f":"Il n'y a pas de valeurs aberrantes. Par contre il y a deux donn\u00e9es manquantes :","26e89baa":"Pr\u00e9paration des donn\u00e9es (X : tableau des variables pr\u00e9dictives, y : vecteur cible et X_cible : les variables pr\u00e9dictives sur lesquelles on doit faire notre pr\u00e9diction)","ae856670":"Afin de voir s'il y a une corr\u00e9lation de la survie entre les membres d'une famille, on va faire le calcul suivant :\n    - grouper les donn\u00e9es par nom de famille (fonction groupby)\n    - pour chaque groupe appliquer une fonction (.agg) qui calculera la variance de la survie ('Survived': 'var')\n    - et enfin calculer la moyenne de cette variance","2caf15e5":"L\u00e0 aussi, cette variable semble int\u00e9ressante, on la conserve telle quelle","11b1e27e":"Fare est le prix pay\u00e9 par la personne.","6271695a":"Sex est un objet, on remplace par une valeur num\u00e9rique binaire","e34eff4d":"Il y a beaucoup de titres peu fr\u00e9quents, on va fusionner les titres pour lesquels on n'a qu'une ou deux valeurs puisque statistiquement on ne pourra rien en tirer","7a44c3a9":"Voyons quelles sont les corr\u00e9lations entre les diff\u00e9rentes variables initiales ainsi que celles qu'on a cr\u00e9\u00e9 :","d75aa818":"La corr\u00e9lation n'est pas flagrante","0c8a03fe":"Pclass prend 3 valeurs, 1,2 ou 3, il n'y a pas de valeur aberrante ni de valeurs manquantes.","4562c89b":"On peut imaginer que les personnes seules (sans famille) ont laiss\u00e9 leur place aux personnes ayant une famille, cr\u00e9ons donc une variable \"IsAlone\", une personne seule est une personne qui n'a ni parent, ni enfant, ni fr\u00e8re et soeur, ni \u00e9pouse, donc SibSp+Parch == 0, mais certaines personnes ont pu voyager avec un membre de la famille autre que parent direct, ou avec un ami, pour cela il faut voir si on a plusieurs personnes ayant le m\u00eame num\u00e9ro de billet si c'est le cas ce ne sont pas des personnes seules.","cabd72a3":"On a affaire \u00e0 deux enfants qui voyagent avec leur m\u00e8re","f0d0be13":"## 3.1. Workflow\n- Cerner\/d\u00e9tourer le probl\u00e8me\n- R\u00e9cup\u00e9rer et explorer les donn\u00e9es\n- Preparer \/ mettre en forme \/ r\u00e9parer les donn\u00e9es\n- R\u00e9cup\u00e9rer ou cr\u00e9er des donn\u00e9es suppl\u00e9mentaires pour aider les algorithmes\n- Comparer et s\u00e9lectionner les outils de pr\u00e9dictions les plus adapt\u00e9s\n- Choix des variables les plus pertinentes\n- Optimisation de la ou des solutions les plus prometteuses\n- Mise en ligne et r\u00e9sultats","006ef5eb":"Et donc si la valeur en question vaut 1 on peut consid\u00e9rer que nous avaons affaire \u00e0 un Adulte","9a387036":"La p-value (2e argument retourn\u00e9) est largement inf\u00e9rieure \u00e0 0.05, on peut consid\u00e9rer la r\u00e9partition comme normale, la variable pourrait \u00eatre utilis\u00e9e telle quelle, en la r\u00e9duisant au besoin, voyons le niveau de corr\u00e9lation entre age et survie","537997a4":"# 10. publication du r\u00e9sultat","039c808b":"Comme \u00e0 la SNCF, il y a plusieurs classes dans le Titanic, la premi\u00e8re classe est la plus prestigieuse.\nVoyons quel est le taux de survie par classe, sns.barplot permet de g\u00e9n\u00e9rer un diagramme en barres de y(Survived) en fonction de la valeur x (ici Pclass)","3c0038d7":"## 7.3. Domestiques","c3f56d0c":"# 5. R\u00e9cup\u00e9ration et premi\u00e8re analyse des donn\u00e9es","0bf9fb39":"# KAGGLE Challenge : Titanic","f1f991e3":"voyons par ailleurs si on peut l'am\u00e9liorer en cr\u00e9ant des classes de prix. On va utiliser la fonction qcut qui cr\u00e9e des classes \u00e0 iso-effectifs, plutot que de d\u00e9couper \u00e0 des valeurs donn\u00e9es. ","3d51f391":"On va pouvoir utiliser cette caract\u00e9ristique, par exemple les Mr ont une tr\u00e8s faible esp\u00e9rance de survie, une fois recoup\u00e9e avec d'autres variables on devrait pouvoir en tirer quelques conclusions int\u00e9ressantes, visuellement on peut d\u00e9j\u00e0 noter certaines r\u00eagles, qu'on v\u00e9rifiera \u00e0 la fin sur notre jeu de test pour voir si la pr\u00e9diction est correcte :","fb5c655e":"Cette variable repr\u00e9sente le nombre de fr\u00e8res+soeurs+\u00e9pouses, il varie entre 0 et 8"}}