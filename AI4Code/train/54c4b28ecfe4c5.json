{"cell_type":{"cfe9f68b":"code","aaf8610f":"code","ceadc762":"code","a34fe3a5":"code","a90fa61c":"code","704cf8af":"code","4a4e9602":"code","bb4fb9df":"code","01bc660b":"code","826265a3":"code","04344a86":"code","e706784a":"code","dbe43f3e":"code","932c7ae7":"code","6e182cf2":"code","e076f7a7":"code","dcd95364":"code","34418e49":"code","d938520d":"code","cc944c22":"code","3e79c446":"code","d8dac0ea":"code","9b4939b5":"code","b738d3bd":"code","32024898":"code","79a75562":"code","b7b9c5ea":"code","57a2c74f":"code","a6157434":"code","f7a60060":"markdown"},"source":{"cfe9f68b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.impute import SimpleImputer\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aaf8610f":"data = pd.read_csv('\/kaggle\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv')","ceadc762":"data.head()","a34fe3a5":"import missingno as msno","a90fa61c":"msno.bar(data)","704cf8af":"msno.matrix(data)\n","4a4e9602":"data.columns","bb4fb9df":"# First total cell:\ntotal_cell = np.product(data.shape)\n# Second Count missing values :\nmissing_values_count = data.isnull().sum()\ntotal_missing = missing_values_count.sum()\n# value \npercent_missing = (total_missing\/total_cell)*100\nprint(percent_missing)\n","01bc660b":"data.info()\n","826265a3":"# count how many rows are in the dataset\n\ntotal_rows = len(data.index)\nprint(total_rows)\n","04344a86":"##Drop Nans Rows\ndrop_data = data.dropna()\ndrop_data\n#reindex \ndrop_data.reset_index(drop=True)\ntotal_drop_data= len(drop_data)\nnumber_of_rows = total_rows-total_drop_data\nprint(\"total rows lots if drop all data\", number_of_rows )","e706784a":"#percent of data lost \npercent = (total_drop_data\/total_rows)*100\nprint(percent)","dbe43f3e":"data['last_new_job'] = data.last_new_job.replace(\"never\", \"0\")","932c7ae7":"data","6e182cf2":"# If just drop the gender NAN \ntotal_rows2 = len(data.index)\n##Drop Nans Rows\ndrop_data_gender = data.dropna(subset=['gender'])\n#reindex \ntotal_drop_data_gender= len(drop_data_gender)\nprint(\"total rows lots if drop all data\", total_rows2-total_drop_data_gender )","e076f7a7":"count = data.groupby('gender').gender.count()\ncount","dcd95364":"len(data.index)","34418e49":"data = data.dropna(subset=['gender'])","d938520d":"print((len(data.index)\/total_rows)*100)","cc944c22":"data['gender'] =data['gender'].replace({'Male': 0, 'Female': 1, 'Other': 2})","3e79c446":"data.gender.astype('int64')","d8dac0ea":"data['last_new_job'] = data.last_new_job.replace(\"never\", \"0\")","9b4939b5":"data.head(20)","b738d3bd":"def check_nan_rows(columns_0):\n    index_list= []\n    for i in range(data.shape[0]):\n           if data[columns_0].isnull().iloc[i]:\n               index_list.append(i)\n    return index_list\n","32024898":"#test_df.apply(lambda x: x.count(), axis=1)\n#https:\/\/datascience.stackexchange.com\/questions\/12645\/how-to-count-the-number-of-missing-values-in-each-row-in-pandas-dataframe\n#df = df[df.isnull().sum(axis=1) < 7]","79a75562":"data.columns","b7b9c5ea":"list_relevent_experience_nan =check_nan_rows(\"relevent_experience\")\nlist_enrolled_university_nan=check_nan_rows(\"enrolled_university\")\nlist_education_level_nan=check_nan_rows(\"education_level\")\nlist_major_discipline_nan=check_nan_rows(\"major_discipline\")\nlist_experience_nan=check_nan_rows(\"experience\")\nlist_company_size_nan=check_nan_rows(\"company_size\")\nlist_company_type_nan=check_nan_rows(\"company_type\")\nlist_last_new_job_nan=check_nan_rows(\"last_new_job\")\nlist_training_hours_nan=check_nan_rows(\"training_hours\")\n\n","57a2c74f":"#check if have rows empty complety\ndef count_nan_rows(column_1 , column_2, column_3, column_4):\n    # check Biggest row of NAN\n    list_triple_nan =[]\n    list_fourth_nan =[]\n    for x in column_1:\n        for y in column_2:\n            for n in column_3:\n                for p in column_4:\n                    if x == y and x == n and p == x:\n                        list_fourth_nan.append(x)\n                    elif x== y and x == n:\n                        list_triple_nan.append(x)\n                    elif x==p and x == n:\n                        list_triple_nan.append(x)\n                    elif p == n and y == p:\n                        list_triple_nan.append(x)\n    return  list_triple_nan, list_fourth_nan\n\n\n                   \n    \n            \n","a6157434":"list_compare_1, list_comapre_2 = count_nan_rows(list_relevent_experience_nan,list_enrolled_university_nan,list_education_level_nan,list_major_discipline_nan)\nlist_compare_3, list_compare_4 = count_nan_rows(list_experience_nan, list_company_size_nan,list_company_type_nan, list_last_new_job_nan)\n","f7a60060":"# change gender for number \n# male = 0 , Female= 1, other= 2"}}