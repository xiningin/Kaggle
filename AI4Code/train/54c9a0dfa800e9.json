{"cell_type":{"de1890f9":"code","1c9892ef":"code","5308a908":"code","8666e286":"code","5dc017eb":"code","2b113967":"code","1d641179":"code","66e82ee0":"code","ff1295fd":"code","884261f6":"code","f20c2545":"code","af7b2176":"code","014cf237":"code","3e673f9d":"code","7aa348b0":"code","3631e828":"code","84476e0d":"code","19470759":"code","c799c5ae":"code","03a9f564":"code","7b1964dd":"code","ff93393f":"code","689cd618":"code","a107b47e":"code","bbbe27a4":"code","1ac3677b":"code","a0c3ae26":"code","b9b2072e":"code","15915150":"code","52c1b7d6":"code","4fd6e71f":"code","b7616035":"markdown","a0f64495":"markdown","a63236ee":"markdown","77a09944":"markdown","92f45a8f":"markdown","3d1c489d":"markdown","200d4c68":"markdown"},"source":{"de1890f9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1c9892ef":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","5308a908":"# Reading Data\ndata = pd.read_csv(\"..\/input\/diamonds\/diamonds.csv\")","8666e286":"# Displaying data\ndata.head()","5dc017eb":"# Removing Unnamed: 0 column\n\ndata.drop(columns=\"Unnamed: 0\", axis=1, inplace=True)","2b113967":"# Viewing data again after removing first column\ndata.head()","1d641179":"data.shape","66e82ee0":"# EDA\n\ndata.info()","ff1295fd":"# Checking for null data\ndata.isnull().any()","884261f6":"data.describe()","f20c2545":"# Let's see how many zero values we are having in the data\n\ndata = data.replace(0.00, np.nan)","af7b2176":"data.isnull().any()","014cf237":"data.isnull().sum()","3e673f9d":"data.dropna(inplace=True)","7aa348b0":"data.hist(bins=50, figsize=(8,8));","3631e828":"sns.pairplot(data, diag_kind='kde');","84476e0d":"sns.heatmap(data.corr(), annot=True, cmap='coolwarm')","19470759":"corr_mat = data.corr()\ncorr_mat['price'].sort_values(ascending=False).plot(kind='bar');","c799c5ae":"# Now let's work on the categorical feature.\n\ninput_cat_columns = data.select_dtypes(include = ['object']).columns.tolist()\n\ninput_cat_columns","03a9f564":"for col in input_cat_columns:\n    sns.catplot(x=col, y=\"price\", kind='box', dodge=False, height=5, aspect=3, data=data)","7b1964dd":"data_one_hot_encoding = pd.get_dummies(data)\ndata_one_hot_encoding.head()","ff93393f":"copy = data_one_hot_encoding.copy()","689cd618":"copy.drop(columns=['price','depth','x','y','z'], inplace=True)","a107b47e":"copy.head()","bbbe27a4":"X = copy.values\ny = data_one_hot_encoding['price'].values","1ac3677b":"# importing libraries for our model\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error","a0c3ae26":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)","b9b2072e":"reg_all = LinearRegression()","15915150":"reg_all.fit(X_train, y_train)","52c1b7d6":"y_pred = reg_all.predict(X_test)","4fd6e71f":"# Let's find out the R^2 score\nprint('R^2 : {}'.format(reg_all.score(X_test, y_test)))","b7616035":"As you can see here that \"x\"(length), \"y\"(width) & \"z\"(depth) column is having minimum value zero - which does not make any sense.","a0f64495":"We can see that x,y,z is having correlation with our Target Feature \"Price\".\n\nLet's make a heatmap plot.","a63236ee":"As we can see here there are not that much NaN values so we can drop them.","77a09944":"There is no null data in this dataset.","92f45a8f":"Now, let's implement one-hot encoding for our categorical features","3d1c489d":"Before dropping we were having 53940 rows\n\nAfter dropping we are having 53920 rows","200d4c68":"Here we can see that from numerical feature: \n\ndepth feature is minimumly correlated with Price. So, we can drop it."}}