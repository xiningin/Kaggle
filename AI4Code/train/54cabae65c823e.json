{"cell_type":{"8c76976c":"code","b3e1b36d":"code","40b44c80":"code","06638823":"code","e38fa39c":"code","c056210b":"code","3b00cda6":"code","33f13108":"markdown","1875dc98":"markdown"},"source":{"8c76976c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport cv2\nfrom matplotlib import pyplot\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b3e1b36d":"# load image\nfrom matplotlib import pyplot\n\nfrom PIL import Image\nimage = Image.open('..\/input\/tomthecat\/catNN.jpeg')\n# horizontal flip\nhoz_flip = image.transpose(Image.FLIP_LEFT_RIGHT)\n# vertical flip\nver_flip = image.transpose(Image.FLIP_TOP_BOTTOM)\n# plot all three images using matplotlib\npyplot.subplot(311)\npyplot.imshow(image)\npyplot.subplot(312)\npyplot.imshow(hoz_flip)\npyplot.subplot(313)\npyplot.imshow(ver_flip)\npyplot.show()","40b44c80":"# load image\nimage = Image.open('..\/input\/tomthecat\/catNN.jpeg')\n# plot original image\npyplot.subplot(311)\npyplot.imshow(image)\n# rotate 45 degrees\npyplot.subplot(312)\npyplot.imshow(image.rotate(45))\n# rotate 90 degrees\npyplot.subplot(313)\npyplot.imshow(image.rotate(90))\npyplot.show()\n#rotates 270 degrees\npyplot.imshow(image.rotate(270))\npyplot.show()","06638823":"#Codes from Bulent Siyah https:\/\/www.kaggle.com\/bulentsiyah\/learn-opencv-by-examples-with-python\n#Sharpening\n\nimage = cv2.imread('\/kaggle\/input\/tomthecat\/catNN.jpeg')\nimage = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n\nplt.figure(figsize=(20, 20))\nplt.subplot(1, 2, 1)\nplt.title(\"Original\")\nplt.imshow(image)\n\n# Create our shapening kernel, we don't normalize since the \n# the values in the matrix sum to 1\nkernel_sharpening = np.array([[-1,-1,-1], \n                              [-1,9,-1], \n                              [-1,-1,-1]])\n\n# applying different kernels to the input image\nsharpened = cv2.filter2D(image, -1, kernel_sharpening)\n\n\nplt.subplot(1, 2, 2)\nplt.title(\"Image Sharpening\")\nplt.imshow(sharpened)\n\nplt.show()","e38fa39c":"from PIL import Image\n# load image\nimage = Image.open('..\/input\/tomthecat\/catNN.jpeg')\n# create a cropped image\ncropped = image.crop((100, 100, 200, 200))\n# show cropped image\npyplot.imshow(cropped)","c056210b":"from PIL import Image\n\nimage = Image.open(\"..\/input\/tomthecat\/catNN.jpeg\")\nimage","3b00cda6":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('MEOW! Mar\u00edlia Prata, @mpwolke Was here' )","33f13108":"#Right Apache, Wrong Cat. Here, Tom the Cat is just a kitten. ","1875dc98":"![](https:\/\/concani3.files.wordpress.com\/2012\/03\/apache-tomcat_logo.jpg?w=584)concani3.wordpress.com"}}