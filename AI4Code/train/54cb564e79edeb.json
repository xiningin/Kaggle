{"cell_type":{"b6856073":"code","4c490c0e":"code","5a79d9ac":"code","e44c4ef1":"code","2cc2f5ab":"code","eba0e598":"code","59c7f6ff":"code","dd7b93bb":"code","0a2a7844":"code","9911fec9":"code","3aab52ad":"code","272804af":"code","33870537":"code","b2b19dfa":"code","f9d6b037":"code","f8514513":"code","557a77d0":"code","f08463ad":"code","515f58e9":"code","a11b640d":"code","cb70e822":"code","4e3f6dd2":"code","6e49f6f7":"code","a50abcf0":"code","7d0d24d7":"code","80c1645a":"code","76d941e0":"code","cf56e1f6":"code","7fb40af9":"code","a69f0c93":"code","653c8bbd":"code","ba28697c":"code","6aeef4c8":"code","e464c6d1":"code","b90eec31":"code","9f491294":"code","89e42f45":"code","b0473e9d":"code","5306f142":"code","b0171916":"code","27c2dc76":"code","5eb06711":"code","39c4bc09":"code","fc4c049d":"code","de95e5f8":"code","ac129985":"code","c4933c77":"code","ecf27b14":"code","aa31d723":"code","6c95b3d9":"code","3506a7a6":"code","1914f626":"code","acadb5dd":"code","88801d4e":"code","a9feb6ba":"code","08f7def7":"code","b8b7e764":"code","f2298399":"code","d01750c7":"code","3c0ffcd7":"code","86f57ee8":"code","1e33de9b":"code","b2d697ee":"code","d8ccc0c1":"code","890eb90e":"code","622a61ef":"code","62ccb558":"code","3a0e1e66":"code","b2569489":"code","1e863c43":"code","eb4d434e":"code","9160b1e4":"code","d593f50c":"code","114394c1":"code","2256581b":"code","d2c904f0":"code","22de4db4":"code","72445a7c":"code","b1549093":"code","082772ff":"code","81b4a7ea":"code","e4e36129":"code","f7b2bb1b":"code","d42322cf":"code","15dcd68f":"code","24b59261":"code","08616d1a":"code","47dbbb79":"code","80af5af6":"code","33e9a9ba":"code","a96bff85":"code","2fb0601b":"code","d828a93b":"code","63ad155c":"markdown","b27cccf1":"markdown","c146c304":"markdown","58037359":"markdown","d0a82884":"markdown","844f13ff":"markdown","6203a3cc":"markdown","5409519d":"markdown","54f87126":"markdown","8297a116":"markdown","ad569168":"markdown","8241dfb7":"markdown","89366f22":"markdown","47ac5630":"markdown","1d93f825":"markdown","7d06a874":"markdown"},"source":{"b6856073":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\n## matplotlib\uc758 \uc2a4\ud0c0\uc77c \uc911 seaborn \uc2a4\ud0c0\uc77c \uc0ac\uc6a9\nplt.style.use('seaborn')\n# \uc77c\uc77c\ud788 \ud3f0\ud2b8 \uc0ac\uc774\uc988 \uc8fc\ub294\uac8c \uc544\ub2c8\ub77c \uc544\ub798\ucc98\ub7fc\ud558\uba74 plot\uc758 \ubaa8\ub4e0 #\n#\uae00\uc790\uc0ac\uc774\uc988 2.5\ub85c \ud1b5\uc77c#\nsns.set(font_scale=2.5)\n\n# data set\uc758 null\ub370\uc774\ud130\ub97c \uc27d1\uac8c \ubcf4\uc5ec\uc904 \uc218 \uc788\ub294 library\nimport missingno as msno\n# \uc4f8\ubaa8 \uc5c6\ub294 warning \ubb34\uc2dc\ud558\uae30 (warning \ub728\ub294 \uac70 \uc804\uccb4 \ubb34\uc2dc\uc778\ub4ef)\nimport warnings\nwarnings.filterwarnings('ignore')\n\n#inline\uc73c\ub85c \ud558\uba74 \uc0c8\ub85c\uc6b4 \ucc3d\uc5d0 \ub728\ub294\uac8c \uc544\ub2c8\ub77c \ubc14\ub85c\ubc14\ub85c \ubcf4\uc774\uac8c \ud558\ub294\uac70\n%matplotlib inline\n","4c490c0e":"# input \uc740 \ud558\uc704\ub514\ub809\ud1a0\ub9ac \ub9d0\ud558\uace0 \n#\ubcf4\ud1b5 data set\ub4e4\uc740 \ub2e4 input\uc5d0 \ub2f4\uc544\uc838 \uc788\uc74c\ndf_train= pd.read_csv('..\/input\/train.csv')\ndf_test = pd.read_csv('..\/input\/test.csv')","5a79d9ac":"df_train.head(10)","e44c4ef1":"#shape\uc740 ()\uc5c6\uc774 \uc0ac\uc6a9 \uc774\uac70 \uc790\uc8fc\uc500\ndf_train.shape\n","2cc2f5ab":"#\uc704\uc5d0 \ubcf4\uba74 \ud589 891\uac1c\uc778\ub370 age\uc758 \ud589 count\uac00 714\n# \uc77c\ub2e8 age\uc5d0 null\uc788\ub294 \uac70 \uc54c \uc218 \uc788\uc74c\n# decribe \ud558\uace0 head\ud574\uc11c \ub0b4\uc6a9 \uac04\ub2e8\ud788 \ubcf4\ub294 \uac70\ud558\uace0 \ub458\ub2e4 \ud574\uc918\uc57c \ud558\ub294\uac8c \n# decribe\ub294 \uc5f0\uc18d\ud615\ubcc0\uc218(\uc22b\uc790)\uc5d0 \ub300\ud55c \uc694\uc57d\uc774\ub77c  \uc774\uc0b0\ud615\ubcc0\uc218\uc5d0 \ub300\ud55c \ub0b4\uc6a9\uc740 \uc544\uc608 \ub098\ud0c0\ub098\uc9c8 \uc54a\uc74c\n# \uadf8\ub7ec\ub2c8 \uc774\uc0b0\ud615\ubcc0\uc218 \ud30c\uc545 \uae4c\uba39\uc9c0 \ub9d0\uace0 head \ub3c4 \ubc18\ub4dc\uc2dc \uc9c4\ud589\ud560 \uac83 \ndf_train.describe()","eba0e598":"df_test.describe()","59c7f6ff":"df_train.columns","dd7b93bb":"for col in df_train.columns:\n    #\uc624\ub978\ucabd > \uc815\ub82c \/\/  \uc67c\ucabd < \uc815\ub82c \/\/\uc5c6\uc73c\uba74 \uc815\ub82c \uc548\ud568\n    \n    # df_train[col].shape[0] :for\uc5d0\uc11c \ub4e4\uc5b4\uc628\uac70 col\ub85c \ubcf4\ub0b4\uc8fc\uba74 df_train\uc758 \uceec\ub7fc\uba85\uc758 shape->\uba87\ud589 \uba87\uc5f4\uc778\ub370 0\uc774\ub2c8\uae4c \ud589\ub9cc\n    msg = 'column: {:>10}\\t Percent of NaN value: {:.2f}%'.format(col,100*(df_train[col].isnull().sum()\/df_train[col].shape[0]))\n    print(msg)","0a2a7844":"for col in df_test.columns:\n    msg = 'column: {:>10}\\t Percent of NaN value: {:.2f}%'.format(col,100*(df_test[col].isnull().sum()\/df_test[col].shape[0]))\n    print(msg)","9911fec9":"# iloc -> index location(pandas\ubb38\ubc95)\uc758 \uc904\uc784\ub9d0\n# iloc : \uc6d0\ud558\ub294 \uc704\uce58\uc5d0 \uc788\ub294 \ub370\uc774\ud130\ud504\ub808\uc784\ub0b4\uc758 \uac83\uc744 indexing\ud558\ub294 \ubb38\ubc95\n# iloc[:]  :\ub294 \ucca8\ubd80\ud130 \ub05d\uae4c\uc9c0 2: \ub294 2\ubd80\ud130  [3:5] 3\ubd80\ud130 4 \ub9c8\uc9c0\ub9c9 \uc81c\uc678\n# \uc5ec\uae30\uc11c \uc0ac\uc2e4 iloc\uac00 \uc804\uccb4\uac00 \uc120\ud0dd\uc774\ub2c8 \uadf8\ub0e5 df = df_train\ub9cc \uc918\ub3c4 \uc9c4\ud589\ub428\n# color\ub294 RGB\uc758 \uac01\uac01 \uc21c\uc11c\ub300\ub85c R,G,B 0~1\uae4c\uc9c0 \nmsno.matrix(df= df_train.iloc[: , :],figsize=(8,8), color = (0.8,0.5,0.2))","3aab52ad":"#\uc704\uc5d0\uac70\ub294 \uc5b4\ub290 \uc704\uce58\uc5d0 null\uc778\uc9c0 \ubcf4\uae30 \ud3b8\ud558\uace0 \uc544\ub798\uac70\ub294 \ud37c\uc13c\ud2b8\ub97c \uc880 \uc2dc\uac01\uc801\uc73c\ub85c \ubcfc\uc218\uc788\ub294 \ub290\ub08c\nmsno.bar(df= df_train.iloc[: , :],figsize=(8,8), color = (0.8,0.5,0.2))","272804af":"# 1\ud5892\uc5f4\uc9dc\ub9ac \ubc11\ubc14\ud0d5 \uadf8\ub9bc(subplot)\uc744 \uadf8\ub824\ub77c #figsize\ub294 \uae30\ubcf8 \ubc14\ud0d5\uc758 \ud06c\uae30 \uc800 \uc0ac\uc774\uc988\ub97c \uc881\ud788\uba74 \uc77c\uc815\uc22b\uc790 \uc774\ud558\ub098 \uc774\uc0c1\uc77c\uacbd\uc6b0 \uac04\uaca9\uc22b\uc790\ub3c4 \ubc14\ub01c\nf,ax =plt.subplots(1,2,figsize=(18,8))\n\n#df_train\uc758 Survived\uce7c\ub7fc\uc758 \uac01 value\uac01\uc758 count\ub97c pie plot\uc73c\ub85c \uadf8\ub824\ub77c \n# explode ->\uc0ac\uc774\uac04\uaca9\ubc8c\ub9ac\uae30 autopct=-> %\uc758\ud615\n# ax\uc5d0 2\uac1c\uac00 \ub4e4\uc5b4\uc788\ub294\ub370 ax=ax[0]\uc740 \uc67c\ucabd0 \uc624\ub978\ucabd 1\uc758 \uc21c\uc11c\ub300\ub85c \uc911\uc5d0 \uc5b4\ub5a0\uac83\uc744 pie\ucc28\ud2b8\ub85c \ud560\uac70\ub0d0 ax[0]\ubc88\uc9f8\uac70\n#shadow\ub294 \uadf8\ub9bc\uc790 \ndf_train['Survived'].value_counts().plot.pie(explode=[0,0.1],autopct='%1.1f%%',ax=ax[0],shadow=True)\n#df_train['Survived'].value_counts()\ub294 series\ud615\ud0dc\uc774\uace0 (type\ud574\ubd10) series\ud615\ud0dc\ub4e4\uc740 plot\uc744 \uac00\uc9c0\uace0 \uc788\ub2e4\n#df_train['Survived'].value_counts().plot()\uc73c\ub85c \ud655\uc778\uac00\ub2a5 == plt.plot(df_train('Survived').value_counts())\n\n## ***\ubc88\uc678\ub85c \uc704\uc758\uac83 pd.DataFrame(df_train['Survived'].value_counts()) \uc774\ub807\uac8c \ud558\uba74 Series type\uc774 \uc544\ub2cc\n## Data Frame type\uc73c\ub85c \uac00\ub2a5 \n\n\n\n\n\n#ax[0]\uc758 title\uc801\uace0  label\uc740 \uc5c6\uc774 \uac00\uaca0\ub2e4\nax[0].set_title('Pie plot - Survied')\nax[0].set_ylabel('')\n\n#seaborn(=sns)\uc758 countplot\ub294 \uceec\ub7fc\uc774\ub984(Survived)\uc744 \uccab\ubc88\uc9f8\ub85c \uc8fc\uace0 data\ub97c \ub450\ubc88\uc9f8 ax\ub85c \uc704\uce58\ub97c \uc138\ubc88\uc9f8\nsns.countplot('Survived',data=df_train,ax=ax[1])\nax[1].set_title('Count plot - Survived')\nplt.show()","33870537":"# df_train[[]] \uc774\ub807\uac8c \ub9ac\uc2a4\ud2b8 \ud615\ud0dc\ub85c\ud558\uace0 \uc548\uc5d0 \ub450\uac1c\uc774\uc0c1 \uc4f0\uba74pandas.core.frame.DataFrame \ucc98\ub7fc dataframe\uc758 \uceec\ub7fc\ub4e4\uc774 \ub098\uc624\uace0\n# df_train[] \ud55c\uac1c\ub294 pandas.core.series.Series \ucc98\ub7fc series\uac00 \ub098\uc634\n# \uadf8\ub798\uc11c [] \ud55c\uac1c\uc9dc\ub9ac\ub294 \uc548\uc5d0 \uc5ec\ub7ec\uac1c\ub97c \ub123\uc744 \uc218\uac00 \uc5c6\uc74c series\ub2c8\uae4c \ub2e8\uc77c \ud55c\uac1c\uc5d0 \ub300\ud574\uc11c\ub9cc \ub098\uc634\ndf_train[['Pclass','Survived']].groupby(['Pclass'], as_index= True).count()\n\n#df_train[['Pclass','Survived']].groupby(['Pclass']) \uae4c\uc9c0\ub9cc \uc4f0\uba74 groupby\ub97c pclass\uae30\uc900\uc73c\ub85c \ud558\uac9f\ub2e4.\n# \uadf8\ub7ec\uba74 data frame groupby \uac1d\uccb4\uac00 \ud558\ub098 \ub9cc\ub4e4\uc5b4\uc9c0\ub294 \uac83\n# \ub9cc\ub4e4\uc5b4\uc9c4 \uac1d\uccb4\ub294 \uc218\ub9ce\uc740 \ub9e4\uc18c\ub4dc\ub97c \uac00\uc9c0\uace0 \uc788\uc74c df_train[['Pclass','Survived']].groupby(['Pclass']).\uac01\uc885\ub9e4\uc18c\ub4dc\n\n","b2b19dfa":"#\ubd80\uac00\n# crosstab \ub9e4\uc18c\ub4dc \uac01\uac01 cross table\ub85c \ubcf4\uc5ec\uc90c \npd.crosstab(df_train['Pclass'],df_train['Survived'], margins=True)","f9d6b037":"#\ubd80\uac00\n# crosstab \uc5d0 \uc2a4\ud0c0\uc77c \uc8fc\uace0 gradient \uae30\uc6b8\uc5b4\uc9c0\ub294 \uc815\ub3c4\uc5d0 \ub530\ub77c \uc0c9\uae54\uc744 \ub2ec\ub9ac \ud558\uaca0\ub2e4. summer_r,jet,winter\ub4f1 \ub2e4\uc591\n# \uc885\ub958\ub294 color map scheme \ub97c google\uc5d0 \uac80\uc0c9\ud558\uba74 \ub9ce\uc774 \ub098\uc634\npd.crosstab(df_train['Pclass'],df_train['Survived'], margins=True).style.background_gradient(cmap='summer_r')","f8514513":"# as_index\ud558\uba74 Pcalss\ub97c \uc778\ub371\uc2a4 \uc5f4\ub85c \ub458\uac70\ub0d0 \ub9d0\uac70\ub0d0 \ndf_train[['Pclass','Survived']].groupby(['Pclass'], as_index=True).mean()\n#\ub9cc\uc57d \uc704\ucc98\ub7fc \ud55c\uac8c \uc548\uadf8\ub824\uc9c0\uba74\n#df_train[['Pclass','Survived']].groupby(['Pclass'], as_index=True).mean().sort_values(by='Survived', ascending=False)#\uc624\ub984\ucc28\uc21c\ub3c4 \uac00\ub2a5)","557a77d0":"df_train[['Pclass','Survived']].groupby(['Pclass'], as_index=True).mean().plot()\ndf_train[['Pclass','Survived']].groupby(['Pclass'], as_index=False).mean().plot()\n# \uc704\uc640 \uc544\ub798\uc758 \ucc28\uc774\ub294 index\ub85c \uc5ec\ubd80\uc5d0 \ub530\ub77c \ub450\uac1c\uc758 series\uac00 \uc788\ub0d0 \uc5c6\ub0d0\uc5d0 \ub530\ub77c \uadf8\ub9bc\uc774 \ubcc0\ud568 ","f08463ad":"df_train[['Pclass','Survived']].groupby(['Pclass'], as_index=True).mean().plot.bar()\n#\ubcf4\uae30 \ud3b8\ud558\uac8c bar\ub85c\ub3c4 \uac00\ub2a5 ","515f58e9":"#y_position \uc704\uce58 \uc9c0\uc815\ub54c\ubb38\uc5d0 \ubbf8\ub9ac \uc22b\uc790\ub300\uc785\ud574\ub193\ub294 \uac74\ub370 \uc0ac\uc2e4\uc0c1 \uc548\ud558\uace0 \uc9c1\uc811\uc785\ub825\ud574\ub3c4 \ubb34\ubc29\ny_position = 1.02\n#\uc55e\uc804\uacfc \ub3d9\uc77c\nf,ax= plt.subplots(1,2, figsize=(18,8))\ndf_train['Pclass'].value_counts().plot.bar(color=['#CD7F32','#DDFD00','#D3D3D3'], ax=ax[0])\n\n# title \uc704\uce58 \uc815\ud558\ub824\uace0 y= y_position \ud558\ub294\ub370 \uc774\uac70 \uc548\ud558\uace0 \uadf8\ub0e5 \uace0\ub300\ub85c \uc22b\uc790 \ub300\uc785\ud574\ub3c4 \ub428\nax[0].set_title('Number of passengers by Pcalss', y = y_position)\n\n# hue\uc5c6\uc774\uba74 Pclass\uc758 \ube48\ub3c4\uc218\ub9cc but hue\ud558\uba74 Pclass\uc5d0 \ub530\ub978 Survived\uc758 \ube48\ub3c4\uc218   \/\/\n# \uac19\uc740 Pclass\ub0b4\uc758 Survived(=hue)\ub97c \uc0c9\uae54\ubcc4\ub85c \ub2e4\ub974\uac8c \ub098\ud0c0\ub0b4\uaca0\ub2e4\nsns.countplot('Pclass',data= df_train, ax=ax[1],hue='Survived')\n# y_position \uc704\uc640 \ub3d9\uc77c\nax[1].set_title('Pclass: Survived cs Dead', y= y_position)\nplt.show()","a11b640d":"f,ax = plt.subplots(1,2, figsize= (18,8))\ndf_train[['Sex','Survived']].groupby(['Sex'], as_index=True).mean().plot.bar(ax=ax[0])\nax[0].set_title('Survived vs Sex')\nsns.countplot('Sex', hue= 'Survived', data= df_train, ax= ax[1])\nax[1].set_title('Sex: Suvived vs Dead')\nplt.show()","cb70e822":"df_train[['Sex','Survived']].groupby(['Sex'],  as_index=False).mean()","4e3f6dd2":"pd.crosstab(df_train['Sex'],df_train['Survived'], margins=True).style.background_gradient(cmap='summer_r')","6e49f6f7":"# x\ucd95\uc5d0 Pclass y\ucd95\uc5d0 Survived   hue\uc5d0 \uc0c9\uae54\ub123\uc744 \uae30\uc900 \nsns.factorplot('Pclass','Survived',hue= 'Sex', data = df_train, size = 6, aspect = 1.5)\n\n## \uc544\ub798 \ud45c\uc5d0\uc11c \ubcf4\ub4ef\uc774 \uc5ec\uc131\uc774 \uc0dd\uc874\ub960\uc774 \ub192\uace0 \/ Pclass\uac00 1->2->3 \uc21c\uc73c\ub85c \uc0dd\uc874\ub960 \uc548\uc88b\uc544\uc9d0\n## \uac01  point\uc5d0 \uc138\ub85c\uc120\uc774 error bar \uc778\ub370 \n## error bar \ud06c\uba74 \uc2e0\ub8b0\ub3c4\uac00 \ub0ae\ub2e4 \/\/ error bar\uac00 \uc791\uc73c\uba74 \uc2e0\ub8b0\ub3c4\uac00 \ub192\ub2e4\ub85c \ubcfc \uc218 \uc788\ub2e4\n## error bar \uc624\ucc28\uad6c\uac04 ","a50abcf0":"# \ud074\ub798\uc2a4 \ubcc4\ub85c \ub098\ub220\uc838\uc11c \ubcf4\uc774\uac8c \ub418\ub294 \uac83\n# \uc544\ub798\uc5d0 col\uc778\uc790\ub97c \uc9c0\uc6b0\uace0 hue\ub85c \ubc14\uafd4\uc11c \ub300\uccb4\ud558\uba74 \ud55c\uadf8\ub798\ud504\ub85c \ub2e4\ub4e4\uc5b4\uac10\nsns.factorplot(x='Sex', y= 'Survived' , col= 'Pclass', data = df_train,saturation =5,\n             size=9, aspect = 1)","7d0d24d7":"print('\uc81c\uc77c \ub098\uc774 \ub9ce\uc740 \ud0d1\uc2b9\uac1d {:.1f} years'.format(df_train['Age'].max()))\nprint('\uc81c\uc77c \uc5b4\ub9b0 \ud0d1\uc2b9\uac1d : {:.1f}years'.format(df_train['Age'].min()))\nprint('\ud0d1\uc2b9\uac1d \ud3c9\uade0 \ub098\uc774 : {:.1f}years'.format(df_train['Age'].mean()))","80c1645a":"fig, ax = plt.subplots(1, 1, figsize=(9, 5))\n\n# kdeplot --> seaborn \uc2a4\ud0c0\uc77c\uc911 \ud558\ub098\ub85c 1\ucc28\uc6d0 \uc2e4\uc218 \ubd84\ud3ec plot\uc784(\ucee4\ub110\ubc00\ub3c4 \ucd94\uc815\ud568\uc218)\n# https:\/\/blog.naver.com\/loiu870422\/220660847923 \uc774\uacf3\uc5d0 \uc798\ub098\uc634 \nsns.kdeplot(df_train[df_train['Survived'] == 1]['Age'], ax=ax)\nsns.kdeplot(df_train[df_train['Survived'] == 0]['Age'], ax=ax)\n# df_train['Survived'] == 1 \ud574\ub2f9\ub9cc\uc871\ud558\ub294 \uc870\uac74\ub9cc TRUE\uac12\uc73c\ub85c \ucd9c\ub825\ub418\ub294\ub370\n# df_train[  ---- ] []\uc548\uc5d0 \ub123\uc5b4\uc8fc\uba74 TRUE\uc778 \uac12\ub9cc \ubc18\ud658\ud574\uc90c  **\uacb0\uad6d \uc870\uac74\uc73c\ub85c filtering\ud558\ub294 \uac70\n\nplt.legend(['Survived == 1', 'Survived == 0'])\nplt.show()","76d941e0":"#\ub9c8\ucc2c\uac00\uc9c0\ub85c kdeplot\uadf8\ub9b4\uac74\ub370 \ub2e4\ub978\ubc29\ubc95\uc73c\ub85c \uadf8\ub9b4\uac70\uc784\nplt.figure(figsize=(8,6))\n# Pclass\uac00 1\uc778\uc0ac\ub78c\ub4e4\uc758 age\ub97c \ucee4\ub110\ubc00\ub3c4 \ud568\uc218(kde) \ub85c \uadf8\ub9b0\uac83\ndf_train['Age'][df_train['Pclass']==1].plot(kind='kde')\ndf_train['Age'][df_train['Pclass']==2].plot(kind='kde')\ndf_train['Age'][df_train['Pclass']==3].plot(kind='kde')\n\nplt.xlabel('Age')\nplt.title('Age Distribution within classes')\nplt.legend(['1st Class', '2nd Class', '3rd Class'])","cf56e1f6":"#\ub9c8\ucc2c\uac00\uc9c0\ub85c histplot\uadf8\ub9b4\uac74\ub370 \ub2e4\ub978\ubc29\ubc95\uc73c\ub85c \uadf8\ub9b4\uac70\uc784\nplt.figure(figsize=(8,6))\n# Pclass\uac00 1\uc778\uc0ac\ub78c\ub4e4\uc758 age\ub97c \ud788\uc2a4\ud1a0\uadf8\ub7a8 \ud568\uc218(hist) \ub85c \uadf8\ub9b0\uac83\n#\uacb9\uce58\uba74 \uc548\ubcf4\uc784 \ndf_train['Age'][df_train['Pclass']==1].plot(kind='hist')\ndf_train['Age'][df_train['Pclass']==2].plot(kind='hist')\ndf_train['Age'][df_train['Pclass']==3].plot(kind='hist')\n\nplt.xlabel('Age')\nplt.title('Age Distribution within classes')\nplt.legend(['1st Class', '2nd Class', '3rd Class'])","7fb40af9":"fig, ax = plt.subplots(1, 1, figsize=(9, 5))\n\n\n# Pclass\uac00 1\uc77c \ub54c \uc8fd\uc740 \uc0ac\ub78c , \uc0b0 \uc0ac\ub78c \uac01\uac01 \ubcf8\uac70 \nsns.kdeplot(df_train[  (df_train['Survived'] == 1) & (df_train['Pclass']==1) ]['Age'], ax=ax)\nsns.kdeplot(df_train[  (df_train['Survived'] == 0) & (df_train['Pclass']==1) ]['Age'], ax=ax)\n\nplt.legend(['Survived == 0', 'Survived == 1'])\nplt.title('1st Pclass')\nplt.show()","a69f0c93":"fig, ax = plt.subplots(1, 1, figsize=(9, 5))\n\n\n# Pclass\uac00 2\uc77c \ub54c \uc8fd\uc740 \uc0ac\ub78c , \uc0b0 \uc0ac\ub78c \uac01\uac01 \ubcf8\uac70 \nsns.kdeplot(df_train[  (df_train['Survived'] == 1) & (df_train['Pclass']==2) ]['Age'], ax=ax)\nsns.kdeplot(df_train[  (df_train['Survived'] == 0) & (df_train['Pclass']==2) ]['Age'], ax=ax)\n\nplt.legend(['Survived == 0', 'Survived == 1'])\nplt.title('2nd Pclass')\nplt.show()","653c8bbd":"fig, ax = plt.subplots(1, 1, figsize=(9, 5))\n\n\n# Pclass\uac00 3\uc77c \ub54c \uc8fd\uc740 \uc0ac\ub78c , \uc0b0 \uc0ac\ub78c \uac01\uac01 \ubcf8\uac70 \nsns.kdeplot(df_train[  (df_train['Survived'] == 1) & (df_train['Pclass']==3) ]['Age'], ax=ax)\nsns.kdeplot(df_train[  (df_train['Survived'] == 0) & (df_train['Pclass']==3) ]['Age'], ax=ax)\n\nplt.legend(['Survived == 0', 'Survived == 1'])\nplt.title('3rd Pclass')\nplt.show()","ba28697c":"#age\uc758 range\ub97c \ub2e4\ub974\uac8c \ud560\ub54c \uc5b4\ub5bb\uac8c \ub098\uc62c\uae4c \ubcf4\ub824\uace0 \ud558\ub294 \uac83\nchange_age_range_survival_ratio = []\n\n# 1~80\uc0b4\uae4c\uc9c0 \uc0dd\uc874\ub960 \nfor i in range(1,80):\n    change_age_range_survival_ratio.append( df_train[ df_train['Age'] < i ]['Survived'].sum() \/ len(df_train[df_train['Age']<i]['Survived']) )\n\nplt.figure(figsize=(7,7))\nplt.plot(change_age_range_survival_ratio)\nplt.title('Survival rate change depending on range of Age', y=1.02)\nplt.ylabel('Survival rate')\nplt.xlabel('Range of Age(0~x)')\n    ","6aeef4c8":"\nf,ax = plt.subplots(1,2, figsize= (18,8))\n\n# split\uc744 False\ub85c \ud558\uba74 \ubd99\uc5b4\uc788\ub294\uac8c \ub5a8\uc5b4\uc838\uc11c \uadf8\ub824\uc9d0  - \uc774\uac8c \ubc14\uc774\uc62c\ub9b0 \ubaa8\uc591\uc774\ub77c \uc774\ub984\n# sclae \uc740 area,count,width \uc774\ub807\uac8c 3\uc885\ub958 \uc778\uc790\ubc1b\uc744 \uc218 \uc788\uc74c\n# area\ub85c \ud558\uba74 \uac19\uc740\ub113\uc774 \ub0b4\uc5d0\uc11c \ud558\uac8c\ub418\uc11c distribution\uc744 \uac01 \ud574\ub2f9\uac1c\uccb4\ubcc4\ub85c \uc54c\uc218\uc788\uc74c\n# count\nsns.violinplot('Pclass','Age',hue='Survived', data= df_train, scale='width', split=True, ax=ax[0])\n\nax[0].set_title('Pclass and Age vs Survived')\n#y\ucd95 0\ubd80\ud130 110 \uae4c\uc9c0 10\ub2e8\uc704\uace0 \uad6c\uac04 \nax[0].set_yticks(range(0,110,10))\n\n\nsns.violinplot('Sex','Age',hue='Survived', data= df_train, scale='count', split=True, ax=ax[1])\n\nax[1].set_title('Pclass and Age vs Survived')\nax[1].set_yticks(range(0,110,10))\nplt.show()","e464c6d1":"f, ax= plt.subplots(1,1, figsize=(7,7))\n# sort_values \uc55e\uc758 \ud3c9\uade0\uc744 \uad6c\ud558\uac83\uc744 by\uae30\uc900\uc73c\ub85c \uc815\ub82c\ndf_train[['Embarked','Survived']].groupby(['Embarked'], as_index=True).mean().sort_values(by='Survived',ascending=False).plot.bar(ax=ax)","b90eec31":"f,ax= plt.subplots(2,2, figsize=(20,15))\n\n# \uc704\uac00 2,2 \uc758 \ub3c4\ud654\uc9c0\ub2c8\uae4c ax\ub3c4 0\ubc88\uc7ac \ub85c\uc6b0 0\ubc88\uc9f8 \ud589\ub82c\uc5d0 \uadf8\ub9b0\ub2e4\uc758 \uc758\ubbf8\nsns.countplot('Embarked', data=df_train, ax=ax[0,0])\nax[0,0].set_title('(1) No. Of Passengers Boarded')\n\nsns.countplot('Embarked', hue='Sex', data=df_train, ax=ax[0,1])\nax[0,1].set_title('(2) Male-Female Split for Embarked')\n\nsns.countplot('Embarked', hue='Survived', data=df_train, ax=ax[1,0])\nax[1,0].set_title('(3) Embarked vs Survived')\n\nsns.countplot('Embarked', hue='Pclass', data=df_train, ax=ax[1,1])\nax[1,1].set_title('(4) Embarked vs Pclass')\n\n# ()\uc548\uc758 \uc778\uc790\ub4e4\uc740 \uc88c\uc6b0 , \uc0c1\ud558 \uac04\uaca9\ub9de\ucdb0\uc8fc\ub294 \uac83 \nplt.subplots_adjust(wspace=0.2, hspace=0.5)\nplt.show()\n","9f491294":"# Pandas Series \ud615\ud0dc\ub07c\ub9ac\ub294 \ub354\ud558\uae30 \uac00\ub2a5 (\ubb3c\ub860 \uac19\uc740 int\ud615\ud0dc )\n# \ubcf8\uc778\ub3c4 \ud3ec\ud568 \uc704\ud574 +1 \ud574\uc8fc\uae30\ndf_train['FamilySize']=df_train['SibSp']+ df_train['Parch']+1\ndf_test['FamilySize']= df_test['SibSp']+ df_test['Parch']+1","89e42f45":"print(\"Maximum size of Family: \", df_train['FamilySize'].max())\nprint(\"Minimum size of Family: \", df_train['FamilySize'].min())","b0473e9d":"f,ax=plt.subplots(1, 3, figsize=(40,10))\nsns.countplot('FamilySize', data=df_train, ax=ax[0])\nax[0].set_title('(1) No. Of Passengers Boarded', y=1.02)\n\nsns.countplot('FamilySize', hue='Survived', data=df_train, ax=ax[1])\nax[1].set_title('(2) Survived countplot depending on FamilySize',  y=1.02)\n\ndf_train[['FamilySize', 'Survived']].groupby(['FamilySize'], as_index=True).mean().sort_values(by='Survived', ascending=False).plot.bar(ax=ax[2])\nax[2].set_title('(3) Survived rate depending on FamilySize',  y=1.02)\n\nplt.subplots_adjust(wspace=0.2, hspace=0.5)\nplt.show()","5306f142":"fig, ax = plt.subplots(1, 1, figsize=(8, 8))\n# displot\uc740 series\uadf8\ub9ac\uba74 series\uc758 histogram\uadf8\ub824\uc8fc\ub294 \uac83\n# Skewness \uc65c\ub3c4  \uc88c\uce21-> \uc591\uc218 \/\/\uc6b0\uce21 -> \uc74c\uc218\ng = sns.distplot(df_train['Fare'], color='b', label='Skewness: {:.2f}'.format(df_train['Fare'].skew()), ax=ax)\ng = g.legend(loc='best')\n\n\n# \ud604\uc7ac \uc65c\ub3c4\uac00 \ud55c\ucabd\uc73c\ub85c \uce58\uc6b0\uccd0\uc9c4 \uc0c1\ud0dc\ub77c \uc774\ub300\ub85c \ubaa8\ub378\uc5d0 \ub300\uc785\ud558\uba74 \ubaa8\ub378\uc774 \uc798\ubabb\ud559\uc2b5\ud558\uc5ec \uc131\ub2a5\uc774 \ub0ae\uc544\uc9c8 \uc218 \uc788\ub2e4\n# \ubaa8\ub378\uc774\ub77c\ub294\uac8c dataset\uc744 \ud45c\ud604\ud558\ub294 \uac74\ub370 \uce58\uc6b0\uccd0\uc9c4 \uc0c1\ud0dc\uc5d0\uc11c \uc4f0\uba74 \uc548\ub41c\ub2e4. \n# \uc5ec\ub7ec\uac00\uc9c0 \uc791\uc5c5\uc73c\ub85c skewness\ub97c \uc870\uc815\ud574\uc8fc\ub294\ub370 \n# \uc5ec\uae30\uc11c\ub294 log\ub97c \ucde8\ud574\uc11c \uc9c4\ud589 \n","b0171916":"#log\ucde8\ud574\uc8fc\uae30 \n# lamda - \ud55c\uc904\uc9dc\ub9ac funtion method\n# \ud2b9\uc815 series\uc758 value\ub4e4\uc758 \ub3d9\uc77c\ud55c opertation\uc801\uc6a9\ud558\ub824\uba74 map\uacfc apply\ub97c \uc4f0\uace0 \ud568\uc218\ub97c \ub123\uc5b4\uc8fc\uba74 \ub428","27c2dc76":"# test set\uc5d0 null\uac12\uc788\ub294 \uac83 \ud3c9\uade0\uac12\uc73c\ub85c \uce58\ud658  \ndf_test.loc[df_test.Fare.isnull(), 'Fare'] = df_test['Fare'].mean()\n# i\uac00 0\ubcf4\ub2e4 \ud06c\uba74 np.log(i) \uc801\uc6a9 \uc544\ub2c8\uba74 \uadf8\ub0e5 0\ndf_train['Fare']= df_train['Fare'].map(lambda i: np.log(i) if i>0 else 0)\n\n# test set\ub3c4 \uac19\uc774 \uc9c4\ud589\ndf_test['Fare']= df_test['Fare'].map(lambda i: np.log(i) if i>0 else 0)","5eb06711":"fig, ax = plt.subplots(1, 1, figsize=(8, 8))\ng = sns.distplot(df_train['Fare'], color='b', label='Skewness : {:.2f}'.format(df_train['Fare'].skew()), ax=ax)\ng = g.legend(loc='best')","39c4bc09":"#Cabin\uc740 null data\uac00 \ub108\ubb34 \ub9ce\uc544 \uc5ec\uae30\uc11c\ub294 \ube7c\uace0 \uc9c4\ud589","fc4c049d":"df_train['Ticket'].value_counts()","de95e5f8":"df_train['Age'].isnull().sum()","ac129985":"df_train['Age'].count()","c4933c77":"df_train['Name'].head()","ecf27b14":"#extract \uc815\uaddc\ud45c\ud604\uc2dd \ud568\uc218 ->\ub300\/\uc18c\ubb38\uc790 A\ubd80\ud130 z\uae4c\uc9c0 1\uac1c\uc774\uc0c1\uc758 \ub2e8\uc5b4\uc5d0 .\uc774 \ubd99\uc740\uac70 ex) Mr. Mrs. Ms.\ndf_train['initial']=df_train['Name'].str.extract('([A-Za-z]+)\\.')\ndf_test['initial']=df_test['Name'].str.extract('([A-Za-z]+)\\.')","aa31d723":"pd.crosstab(df_train['initial'],df_train['Sex']).T.style.background_gradient(cmap='summer_r')\n#\ud574\ub2f9 \uacb0\uacfc\ub97c \uac00\uc9c0\uace0 \uba87\uac00\uc9c0 \uacb0\uacfc\ub85c \uc555\ucd95 ","6c95b3d9":"#initial\uc5d0 \uc788\ub294 \uac83\ub4e4 [] \uc55e\uc5d0 \uc788\ub294 \uac83\ub4e4\uc744 []\ub4a4\uc5d0 \ub0b4\uc6a9\uc73c\ub85c \uce58\ud658\ud558\uaca0\ub2e4.\n# 1:1\uce58\ud658\n# \ub4a4\uc5d0 inplace\uc778\uc790\uac00  df_train['initial']=df_train['initial'].replace\uc774\ub807\uac8c =\uc744 \ub530\ub85c \ud574\uc904\ud544\uc694\uc5c6\uc774\n# \ud55c\ubc88\uc5d0 \ubc14\uafd4\uc8fc\ub294\uac8c inplace\uc778\uc790\ndf_train['initial'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don', 'Dona'],\n                        ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr', 'Mr'],inplace=True)\n\ndf_test['initial'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don', 'Dona'],\n                        ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr', 'Mr'],inplace=True)","3506a7a6":"df_train.groupby(['initial']).mean()","1914f626":"# \uac15\uc758\uc5d0\uc11c\ub294 df_train.groupby('initial')['Survived'].mean().plot.bar() \uc774\ub807\uac8c \uc801\uc5c8\ub294\ub370\n#\uc544\ub798\ub294 \ub0b4\uac00 \uc801\uc740\uac70 \ub458\uc774 \ub098\ud0c0\ub0b4\ub294 \uac74 \ub611\uac19\uc74c\ndf_train.groupby('initial').mean()['Survived'].plot.bar()","acadb5dd":"# \ubcf8\uaca9\uc801\uc73c\ub85c null value\ucc3e\uc744 \uac70\uace0 train\uacfc test \ub450\uac1c data set\uc0ac\uc6a9\ud574\uc11c \ucc3e\uc744\uac70\uace0\n# \ub370\uc774\ud130 \ud504\ub808\uc784 \ud569\uce58\ub294 \uac74 concat \uacfc merge\n# \ub458\uc774 \ube44\uc2b7\ud55c \uae30\ub2a5\uc778\ub370 concat\uc744 \ub370\uc774\ud130\ud504\ub808\uc784\uc744 \uc313\ub294 \ub290\ub08c merge\ub294 \uac19\uc740 \uceec\ub7fc\uc5d0 \ucd94\uac00\ud558\ub294 \ubc29\uc2dd\ndf_all=pd.concat([df_train,df_test])","88801d4e":"# \uadf8\ub0e5 concat\ud558\uba74 index\uac00 \uc21c\uc11c\ub300\ub85c \ud569\uccd0\uc9c0\ub294\uac8c \uc544\ub2c8\ub77c \ub2e8\uc21c \ubcd1\ud569\ub9cc\ub418\uc5b4\uc11c\n# reset_index\ub85c index number \uc870\uc815\n# drop\uc778\uc790\ub294 \ubcc4\ub3c4\uc758 index\uc5f4\uc744 \ub9cc\ub4dc\ub294\uac8c \uc544\ub2c8\ub77c \n# index\uc790\uccb4 \ubc88\ud638\ub97c \ubc14\uafb8\uace0 \uc2f6\uc744\ub54c True\ub85c \uc8fc\ub294 \uc778\uc790\ndf_all.reset_index(drop=True)\n","a9feb6ba":"df_all.groupby(['initial']).mean()","08f7def7":"# loc \uc6d0\ud558\ub294 \ubd80\ubd84 indexing\ud558\ub294 \ud568\uc218\n# loc\uc548\uc5d0 \uc870\uac74\ub4e4 \ub4e4\uc5b4\uac04\uac70\uace0 ,\ud558\uace0 Age\ub294 \uc55e\uc758 \uc870\uac74\ub4e4 \ub9cc\uc871\ud558\ub294 \uac83\ub4e4\uc911\uc5d0 Age\uceec\ub7fc\ub9cc \ubcf4\uc5ec\uc90c\n# \ub530\ub77c\uc11c \ud574\ub2f9\uc870\uac74\uc744 \ub9cc\uc871\ud558\ub294 Age\uceec\ub7fc\uc5d0 Mr\uc778\uc0ac\ub78c\ub4e4\uc758 \ud3c9\uade0\uce58\uc778 33\uc138\uac00 \ub4e4\uc5b4\uac10\ndf_train.loc[(df_train['Age'].isnull()) & (df_train['initial'] == 'Mr') , 'Age'] =33","b8b7e764":"df_train.loc[(df_train.Age.isnull())&(df_train.initial=='Mr'),'Age'] = 33\ndf_train.loc[(df_train.Age.isnull())&(df_train.initial=='Mrs'),'Age'] = 37\ndf_train.loc[(df_train.Age.isnull())&(df_train.initial=='Master'),'Age'] = 5\ndf_train.loc[(df_train.Age.isnull())&(df_train.initial=='Miss'),'Age'] = 22\ndf_train.loc[(df_train.Age.isnull())&(df_train.initial=='Other'),'Age'] = 45\n\ndf_test.loc[(df_test.Age.isnull())&(df_test.initial=='Mr'),'Age'] = 33\ndf_test.loc[(df_test.Age.isnull())&(df_test.initial=='Mrs'),'Age'] = 37\ndf_test.loc[(df_test.Age.isnull())&(df_test.initial=='Master'),'Age'] = 5\ndf_test.loc[(df_test.Age.isnull())&(df_test.initial=='Miss'),'Age'] = 22\ndf_test.loc[(df_test.Age.isnull())&(df_test.initial=='Other'),'Age'] = 45","f2298399":"#Age\uc758 null data\uac00 \uc815\uc0c1\uc801\uc73c\ub85c \ubaa8\ub450 \ub4e4\uc5b4\uac04\uac83\uc744 \ud655\uc778\ud588\ub2e4.\ndf_train['Age'].isnull().sum()","d01750c7":"df_train['Embarked'].isnull().sum()\n# 2\uac1c \ubc16\uc5d0 \uc548\ub418\ub2c8 \uadf8\ub0e5 \ub300\uccb4","3c0ffcd7":"# fillna ->  null\uac12 \ucc44\uc6cc\uc8fc\ub294 \ud568\uc218\ndf_train['Embarked'].fillna('S', inplace=True)","86f57ee8":"# continuous feature\ub97c categorical feature\ub85c \ub9cc\ub4e4\ub824\uace0\ud55c\ub2e4.\n# \uc704\uc758 \uacfc\uc815\uc744 \uc790\uce6b \uc798\ubabb\ud558\uba74 \uc815\ubcf4\uc190\uc2e4 \ubc1c\uc0dd\uac00\ub2a5\n#\uc5b4\ub5a4\uc0dd\ud669\uc5d0\uc11c\ub294 \uc624\ud788\ub824 \uc798 \ub9de\uc744 \uc218\ub3c4 \uc788\uc74c\ndf_train['Age_cat'] = 0","1e33de9b":"df_train.head()","b2d697ee":"#\ub098\uc774\ub97c 10\ub2e8\uc704\uc758 \uad6c\uac04\uc73c\ub85c \uc790\ub974\uae30 \n\ndf_train.loc[df_train['Age'] < 10, 'Age_cat'] = 0\ndf_train.loc[(10 <= df_train['Age']) & (df_train['Age'] < 20), 'Age_cat'] = 1\ndf_train.loc[(20 <= df_train['Age']) & (df_train['Age'] < 30), 'Age_cat'] = 2\ndf_train.loc[(30 <= df_train['Age']) & (df_train['Age'] < 40), 'Age_cat'] = 3\ndf_train.loc[(40 <= df_train['Age']) & (df_train['Age'] < 50), 'Age_cat'] = 4\ndf_train.loc[(50 <= df_train['Age']) & (df_train['Age'] < 60), 'Age_cat'] = 5\ndf_train.loc[(60 <= df_train['Age']) & (df_train['Age'] < 70), 'Age_cat'] = 6\ndf_train.loc[70 <= df_train['Age'], 'Age_cat'] = 7\n\ndf_test['Age_cat'] = 0\ndf_test.loc[df_test['Age'] < 10, 'Age_cat'] = 0\ndf_test.loc[(10 <= df_test['Age']) & (df_test['Age'] < 20), 'Age_cat'] = 1\ndf_test.loc[(20 <= df_test['Age']) & (df_test['Age'] < 30), 'Age_cat'] = 2\ndf_test.loc[(30 <= df_test['Age']) & (df_test['Age'] < 40), 'Age_cat'] = 3\ndf_test.loc[(40 <= df_test['Age']) & (df_test['Age'] < 50), 'Age_cat'] = 4\ndf_test.loc[(50 <= df_test['Age']) & (df_test['Age'] < 60), 'Age_cat'] = 5\ndf_test.loc[(60 <= df_test['Age']) & (df_test['Age'] < 70), 'Age_cat'] = 6\ndf_test.loc[70 <= df_test['Age'], 'Age_cat'] = 7","d8ccc0c1":"### \uc774 \uc704\uc5d0\uae4c\uc9c0\uac00 hard cording\ud55c \ubc29\ubc95 \n### \uc544\ub798\ubd80\ud130\ub294 \uac19\uc740\ub0b4\uc6a9\uc778\ub370 \ud568\uc218 \uc0ac\uc6a9\ud560\uac70 ","890eb90e":"# \ud568\uc218\uc0dd\uc131\ndef category_age(x):\n    if x < 10:\n        return 0\n    elif x < 20:\n        return 1\n    elif x < 30:\n        return 2\n    elif x < 40:\n        return 3\n    elif x < 50:\n        return 4\n    elif x < 60:\n        return 5\n    elif x < 70:\n        return 6\n    else:\n        return 7    ","622a61ef":"df_train['Age_cat_2'] = df_train['Age'].apply(category_age)","62ccb558":"df_train.head()","3a0e1e66":"# all \ubaa8\ub4e0\uac8c True\uc77c\ub54c Ture\ubc18\ud658\n# any\ub294 \ud558\ub098\ub77c\ub3c4 True\uac00 \uc788\uc73c\uba74 True \ubc18\ud658\n(df_train['Age_cat'] == df_train['Age_cat_2']).all()","b2569489":"#\uc774\uc81c \ub2e4 \ud574\ubd24\uc73c\ub2c8 \ud544\uc694\ud55c Age_cat\ub9cc \ub0a8\uae30\uace0 \ub0a0\ub9ac\uae30\n# axis =1 -> \ucd95\uc744 \uc138\ub85c\ub85c \ub46c\uc11c \uc138\ub85c\uc904 \uc790\uccb4\uac00 \ub0a0\ub77c\uac00\ub294\uac70 \ndf_train.drop(['Age','Age_cat_2'], axis=1 , inplace= True )\ndf_test.drop(['Age'], axis=1 , inplace= True)","1e863c43":"df_train['initial'].unique()\n# \ud574\ub2f9 value\ub4e4\uc744 \ubcc0\ud658","eb4d434e":"# mapping \uc2dc\ucf1c\uc90c (\uce58\ud658)\ndf_train['initial'] = df_train['initial'].map({'Master': 0, 'Miss': 1, 'Mr': 2, 'Mrs': 3, 'Other': 4})\ndf_test['initial'] = df_test['initial'].map({'Master': 0, 'Miss': 1, 'Mr': 2, 'Mrs': 3, 'Other': 4})","9160b1e4":"# \uc544\ub798\uc904\uacfc \ud574\ub2f9\uc904\uc740 \uce74\ud14c\uace0\ub9ac \ubb50\uc788\ub294\uc9c0 \ubcfc\ub54c \uc4f0\ub294 \uac83\ub4e4\n# \uc704\uc560\uac74 numpy array \uc544\ub798\uac74 panda series type\ndf_train['Embarked'].unique()","d593f50c":"df_train['Embarked'].value_counts()","114394c1":"df_train['Embarked'] = df_train['Embarked'].map({'C': 0, 'Q': 1, 'S': 2})\ndf_test['Embarked'] = df_test['Embarked'].map({'C': 0, 'Q': 1, 'S': 2})","2256581b":"df_train['Sex'].unique()","d2c904f0":"df_train['Sex']=df_train['Sex'].map({'female':0,'male':1})\ndf_test['Sex']=df_test['Sex'].map({'female':0,'male':1})","22de4db4":"# \uc0c1\uad00\uad00\uacc4 \ubcf4\ub824\uace0 pearson correaltion\uad6c\ud558\ub294 \uacfc\uc815\n# \ud544\uc694\ud55c \uceec\ub7fc \uac00\uc838\uc640\uc11c heatmap\uadf8\ub9ac\uace0\nheatmap_data = df_train[['Survived', 'Pclass', 'Sex', 'Fare', 'Embarked', 'FamilySize', 'initial', 'Age_cat']] \n\n# matplt\n#colormap \uc740 \uc0c9\uae54\uc758 \ubab8\ud1b5 ? \uc774\ub7f0\ub290\ub08c\uc774\ub798 \ncolormap = plt.cm.viridis\nplt.figure(figsize=(10, 8))\nplt.title('Pearson Correlation of Features', y=1.05, size=15)\n\n# astype-> heatmap\ub0b4\uc758 \uc790\ub8cc\ub4e4\uc744 \ubaa8\ub450 float\ud615\ud0dc\ub3c4 \ubc14\uafd4\uc8fc\uaca0\ub2e4\n# corr -> pandas dataframe\uc758 correlation\uc744 \ubaa8\ub450 \uad6c\ud574\uc90c\n# linewidths -> \ub124\ubaa8 \uce78\ub9c8\ub2e4\uc758 \uac70\ub9ac\n# vmax ->\uc0d0\uae54 \ubc94\uc704\uc758 \ubcc0\ud654\n# annot ->\uc548\uc758 \uc22b\uc790\n# fmt -> \uc548\uc758 \uc22b\uc790 \uc790\ub9ac\uc218 \n\nsns.heatmap(heatmap_data.astype(float).corr(), linewidths=0.1, vmax=1.0,\n           square=True, cmap=colormap, linecolor='white', annot=True, annot_kws={\"size\": 16},fmt='.2f')\n\ndel heatmap_data","72445a7c":"# \uc704\uc5d0 \uadf8\ub9bc\uc5d0\uc11c \uc720\ucd94\ud560 \uc218 \uc788\ub294\uac83 \n# \uadf8\ub9bc\uc5d0\uc11c \ubcf4\uc558\uc744\ub54c \uc0dd\uac01\ubcf4\ub2e4 \uac15\ud55c \uc0c1\uad00\uad00\uacc4\ub97c \uadf8\ub9ac\uace0 \uc788\ub294 \uac83\uc774 \uc5c6\ub2e4.\n# \uc774\uac83\uc740 \uc6b0\ub9ac\uac00 \ubaa8\ub378\uc744 \ud559\uc2b5\uc2dc\ud0ac \ub54c, \ubd88\ud544\uc694\ud55c(redundant, superfluous) feature \uac00 \uc5c6\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\n# 1 \ub610\ub294 -1 \uc758 \uc0c1\uad00\uad00\uacc4\ub97c \uac00\uc9c4 feature A, B \uac00 \uc788\ub2e4\uba74, \uc6b0\ub9ac\uac00 \uc5bb\uc744 \uc218 \uc788\ub294 \uc815\ubcf4\ub294 \uc0ac\uc2e4 \ud558\ub098\n# redundant, superfluius\uc5d0 \ub300\ud574\uc11c\ub294 \uc870\uae08 \ub354 \uacf5\ubd80\ud558\uae30 ","b1549093":"df_train.head()","082772ff":"df_test.head()","81b4a7ea":"# pandas\uc758 one-hot encording \ud568\uc218 get_dummies\uc0ac\uc6a9\n#dataframe\uc744 \uc9c1\uc811\ub2e4\ub8f0\ub54c\ub294 \uc774\uac70\uc4f0\ub294\uac8c \ub0ab\uace0 \n# sklearn.preprocessing\uc5d0\ub3c4 Onehotencording \uc774 \ub530\ub85c \uc788\uc74c\n#prefix -->\n# get_dummies\uc4f0\uba74 initial column\uc774 \ub0a0\uc544\uac04\ub2e4 \ndf_train = pd.get_dummies(df_train, columns=['initial'], prefix='initial')\ndf_test = pd.get_dummies(df_test, columns=['initial'], prefix='initial')\n\n# \uce74\ud14c\uace0\ub9ac\uac00 \ub9ce\uc544\uc11c one-hot encording\uc2dc  column\uc774 100\uac1c\ucc98\ub7fc \uacfc\ub3c4\ud558\uac8c \ub9ce\uc544\uc9c0\ub294 \uacbd\uc6b0\n# \uc624\ud788\ub824 \uacfc\ub3c4\ud55c columns\ub54c\ubb38\uc5d0 \ud559\uc2b5\uc5d0 \uc9c0\uc7a5\uc744 \uc904 \uc218 \uc788\uc74c. \uadf8\ub798\uc11c \uc774\ub7f0\uacbd\uc6b0 \ub2e4\ub978\ubc29\uc2dd\uc758 encording \ubc29\ubc95\uc788\uc74c\n# \uc720\ud55c\ub2d8\uc758 \ub2e4\ub978 \ubc29\uc1a1\uc5d0 \uc788\uc74c \ud3ec\ub974\ud22c competition \ud560\ub54c \uacaa\uc5c8\ub358 \ubb38\uc81c\ub798","e4e36129":"#\uc774\uc81c \uba38\uc2e0\ub7ec\ub2dd \ubaa8\ub378 \uc138\uc6cc\uc11c \uc791\uc5c5\ub4e4\uc5b4\uac08\uac74\ub370 \uadf8 \uc804\uc5d0 \ub370\uc774\ud130 \uc815\ub9ac\uac00 \ud544\uc694\ud568 \n#\uc774\uc81c\ubd80\ud130 \uc815\ub9ac\uc2dc\uc791 \ud558\uace0 \ubaa8\ub378 \ud559\uc2b5\uc2dc\uc791 \ndf_train.head()\n# passengerID \ubbf8\uc0ac\uc6a9\uc73c\ub85c \uc81c\uac70\n# Names, Ticket,Cabin\ubbf8\uc0ac\uc6a9\uc73c\ub85c \uc81c\uac70\n# Sibsp,Parch \ub294 family columns \ub9cc\ub4e4\uc5c8\uc73c\ubbc0\ub85c \uc81c\uac70","f7b2bb1b":"df_train = pd.get_dummies(df_train, columns=['Embarked'], prefix='Embarked')\ndf_test = pd.get_dummies(df_test, columns=['Embarked'], prefix='Embarked')","d42322cf":"#axis\ub97c 1\ub85c \ud574\uc57c \ubaa8\ub450 \ub0a0\uc544\uac04\ub300\ndf_train.drop(['PassengerId', 'Name', 'SibSp', 'Parch', 'Ticket', 'Cabin'], axis=1, inplace=True)\ndf_test.drop(['PassengerId', 'Name',  'SibSp', 'Parch', 'Ticket', 'Cabin'], axis=1, inplace=True)","15dcd68f":"df_train.head()","24b59261":"# \uc774\uc9c4\ubd84\ub958 \ubb38\uc81c\ub77c\uc11c classfier # \nfrom sklearn.ensemble import RandomForestClassifier\n# metric \ubaa8\ub378\ud3c9\uac00\ud558\ub294 \ud568\uc218\ub4e4 \uc8fc\ub294 \uac83 \nfrom sklearn import metrics\n# train set , valid set test set\ub098\ub20c\ub54c\n# train set\uc744 train \uacfc valid \ub450\uac1c\ub85c \ub098\ub208\ub2e4 \nfrom sklearn.model_selection import train_test_split","08616d1a":"# \ud0c0\uac9f\uc774 Survived\ub2c8\uae4c \uc81c\uc678\ud558\uace0 \uc5f4\uae30\uc900\uc774\ub77c axis\uac00 1\nX_train= df_train.drop(['Survived'],axis=1).values\ntarget_label = df_train['Survived'].values\nX_test = df_test.values\n\n#\uc704\uc5d0\ucc98\ub7fc\ud558\uba74 dataframe\uc774 \uc544\ub2cc arry\ubc30\uc5f4\ub85c \ub4e4\uc5b4\uac10","47dbbb79":"# y_tr\uc774 target label \uc778\ub370 \uc774\uac8c \uc9c0\ub3c4 \ud559\uc2b5\uc774\ub77c \n# X_tr\uc73c\ub85c \uc720\ucd94\ud55c Survived\uc758 \uac12 \uc989, \ud0c0\uac9f\uac12\uc744 y_tr\uc5d0 \ub123\uc5b4\uc8fc\ub294\uac83\n# train data 891\uac1c\uc911  \ub294 vld\ub97c  30 \ud37c\uc13c\ud2b8\ub9cc \uc0ac\uc6a9 \ub098\uba38\uc9c0\ub97c X_tr\uc5d0 \uc0ac\uc6a9 \nX_tr, X_vld, y_tr, y_vld = train_test_split(X_train, target_label, test_size=0.3, random_state=2018)","80af5af6":"# RandomForest\uc758 Classifier\uc0ac\uc6a9\nmodel = RandomForestClassifier()\n#X_tr\uacfc y_tr\uc774\uc6a9 \ud559\uc2b5\nmodel.fit(X_tr, y_tr)\n# vld set\uc73c\ub85c \uc608\uce21\nprediction = model.predict(X_vld)","33e9a9ba":"# \uc717\uc904\uc758 prediction = model.predict(X_vld) \uc2e4\uc81c\uc608\uce21\uac12\ud558\uace0 \uc6b0\ub9ac\uac00 \ub530\ub85c \ub5f4\uc5b4\ub193\uc740 y_vld\ub791 \ube44\uad50\uc5d0\uc11c \n# \uc5bc\ub9c8\ub098 \uc815\ud655\ud55c\uc9c0 \ud655\uc778\ud558\ub294 \ucf54\ub4dc\nprint('\ucd1d {}\uba85 \uc911 {:.2f}% \uc815\ud655\ub3c4\ub85c \uc0dd\uc874\uc744 \ub9de\ucda4'.format(y_vld.shape[0], 100 * metrics.accuracy_score(prediction, y_vld)))\n","a96bff85":"from pandas import Series\n#model.feature_importances_ \uc774\uac70\ub294 \ud559\uc2b5\uc2dc\ud0a8 \ubaa8\ub378\uc740 \ubb34\uc870\uac74 importance\ub97c \uac00\uc9d0 \nfeature_importance = model.feature_importances_\nSeries_feat_imp = Series(feature_importance, index=df_test.columns)","2fb0601b":"plt.figure(figsize=(8, 8))\nSeries_feat_imp.sort_values(ascending=True).plot.barh()\nplt.xlabel('Feature importance')\nplt.ylabel('Feature')\nplt.show()","d828a93b":"submission = pd.read_csv('..\/input\/gender_submission.csv')","63ad155c":"## Both sex and Pclass","b27cccf1":"## 2.1.1 Visualization (variety of visualization method )","c146c304":"# Fare ,Cabin,ticket","58037359":"#  Age,Sex,Pclass (about Violin plot)","d0a82884":"# Age","844f13ff":"#  Feature importance","6203a3cc":"# Feature engineering (Fill Null in Embarked and categorize Age)","5409519d":"# Feature engineering (Change string to categorical and Pearson coefficient)   **one-hot-encording\uacfc\ub294 \ub2e4\ub978\uac1c\ub150","54f87126":"#  Model develpment (Randomforest)","8297a116":"# Emarked","ad569168":"\n# Feature enginerring (one-hot encording on the initial and embarked)","8241dfb7":"## 2.2 Sex - EDA","89366f22":"# RandomForest","47ac5630":"## 2.1 Pclass","1d93f825":"#  Family - Sibsp+Parch (Making New feature)","7d06a874":"# Feature engineering (Fill Null in Age)"}}