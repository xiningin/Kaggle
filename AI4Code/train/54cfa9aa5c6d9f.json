{"cell_type":{"cda82dfc":"code","3cb8b1bd":"code","de1dca0e":"code","b4539f8d":"code","4ab43923":"code","967612e4":"code","1c61066e":"code","f38e2374":"code","ae5e37d9":"code","ecffbbd5":"code","0350014d":"code","3eed14e4":"code","87820f19":"code","1c0259d8":"code","ddbbed5e":"code","5e5eee7b":"markdown","ca6240a9":"markdown","e4383ea2":"markdown","b5d98e60":"markdown","fd6a4871":"markdown","33642569":"markdown","5ab272d0":"markdown","48b532b7":"markdown","d8b906c2":"markdown","aa20ac43":"markdown","2b566266":"markdown","9a7fd2d9":"markdown","4de8f078":"markdown"},"source":{"cda82dfc":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics import confusion_matrix, accuracy_score","3cb8b1bd":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","de1dca0e":"dataset           = pd.read_csv('\/kaggle\/input\/uomcse2021\/cse_DS_Intro3TRAIN.csv')\ndataset           = dataset.set_index('ID')\ndataset_eval      = pd.read_csv('\/kaggle\/input\/uomcse2021\/cse_DS_Intro3TEST.csv')\ndataset_eval      = dataset_eval.set_index('ID')","b4539f8d":"X = dataset.iloc[:, :-1].values\ny = dataset.iloc[:, -1].values\n\nfrom sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ny = le.fit_transform(y)","4ab43923":"X_train = X\ny_train = y","967612e4":"#Appling feature scaling as this involves knn\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)","1c61066e":"from sklearn.model_selection import cross_val_score\nfrom sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier()\naccuracies = cross_val_score(estimator = rf, X = X_train, y = y_train, cv = 10)\n","f38e2374":"print(accuracies)\nprint('mean: ' + str(accuracies.mean())+' std: '+ str(accuracies.std()) )","ae5e37d9":"!pip install catboost","ecffbbd5":"from sklearn.model_selection import cross_val_score\nfrom catboost import CatBoostClassifier\ncatB = CatBoostClassifier(verbose=0)\naccuracies = cross_val_score(estimator = catB, X = X_train, y = y_train, cv = 10)","0350014d":"print('mean: ' + str(accuracies.mean())+' std: '+ str(accuracies.std()) )\nprint(accuracies)","3eed14e4":"from sklearn.model_selection import cross_val_score\nfrom sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',\n                     metric_params=None, n_jobs=None, n_neighbors=6, p=2,\n                     weights='distance')\naccuracies = cross_val_score(estimator = knn, X = X_train, y = y_train, cv = 10)\n","87820f19":"print(accuracies)\nprint('mean: ' + str(accuracies.mean())+' std: '+ str(accuracies.std()) )","1c0259d8":"from sklearn.ensemble import RandomForestClassifier, VotingClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom catboost import CatBoostClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\n\neclf1 = VotingClassifier(estimators=[('KNN', knn),  ('RandomForest',rf), ('CatBoost', catB)], voting='soft')\naccuracies = cross_val_score(estimator = eclf1, X = X_train, y = y_train, cv = 10)\n","ddbbed5e":"print(accuracies)\nprint('mean: ' + str(accuracies.mean())+' std: '+ str(accuracies.std()) )","5e5eee7b":"### 4.2.2 Train Set Cross Validation Score","ca6240a9":"## 4.2 Catboost","e4383ea2":"### 4.1.1 Train Set Cross Validation Score","b5d98e60":"# 2. Preparing dataset","fd6a4871":"## 4.3 KNN ","33642569":"# 1. Data and Library Imports ","5ab272d0":"### 4.2.1 Install","48b532b7":"### 4.4.1 CrossValidation","d8b906c2":"## 4.4 VotingClassifier","aa20ac43":"# 3. Splitting Dataset","2b566266":"### 4.3.1 Crossvalidation","9a7fd2d9":"# 4. Training","4de8f078":"## 4.1 Random Forest"}}