{"cell_type":{"eaa548c3":"code","3744f40d":"code","97422d94":"code","f442a394":"code","100fbe83":"code","c019c232":"code","19486b83":"code","89d5682d":"code","f54d54e3":"code","7a2f48a0":"code","638784f6":"code","5b6e7ae7":"code","9e5a75b6":"code","97575f22":"code","b5817933":"code","8b3f90a7":"code","352356d4":"code","006608a3":"code","5079c393":"code","3f88f6f0":"code","0f27be00":"code","b5be8738":"code","b34e04d5":"code","0a740118":"code","635d6b0b":"code","1eecf3d6":"code","0d148289":"code","9ed23c82":"code","c14fb1c1":"code","787d4cb5":"code","c67f50c1":"code","94d84e36":"code","ec31ddbc":"code","efb20757":"code","eee3e124":"code","446de14d":"code","4e356eb6":"markdown","a07f998c":"markdown","d01d6362":"markdown","e7082b90":"markdown","9f44348c":"markdown","ad89197f":"markdown","227e5610":"markdown","394a35fb":"markdown","95b0465d":"markdown","095564c4":"markdown","50b19135":"markdown","c7ec81aa":"markdown","e6e551f8":"markdown","c4c5d866":"markdown","61fbf716":"markdown","0f75c603":"markdown","3177b70a":"markdown"},"source":{"eaa548c3":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport random\nfrom scipy.stats import norm,probplot\nfrom sklearn.preprocessing import QuantileTransformer","3744f40d":"%%time\ntrain = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv',header=0,index_col=0)\ntest = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv',header=0,index_col=0)\ntrain_data = train.copy()\ntest_data = test.copy()","97422d94":"train_data.shape,test_data.shape","f442a394":"# \u62fc\u63a5\u5728\u4e00\u8d77\uff0c\u4e00\u8d77\u5904\u7406\ndf = pd.concat([train_data.iloc[:,:-1],test_data])\ndf","100fbe83":"# \u67e5\u770b\u4e0a\u9762\u6311\u9009\u51fa\u7684\u5217\u4e2d\u662f\u5426\u6709\u7f3a\u5931\u503c\nuse_columns = ['OverallQual','GrLivArea','GarageArea','TotalBsmtSF','FullBath','YearBuilt','YearRemodAdd'] + ['Foundation','BsmtQual','KitchenQual']\ndf[use_columns].isnull().sum()","c019c232":"# \u53d1\u73b0BsmtQual\u7684\u7f3a\u5931\u8f83\u591a\uff0c\u4f7f\u7528\u968f\u673a\u62bd\u6837\u6cd5\u8865\u5145\u7f3a\u5931\u503c\nset(df['BsmtQual'])","19486b83":"df['BsmtQual'].value_counts()","89d5682d":"null_col = ['BsmtQual','KitchenQual']\n# \u5229\u7528\u6982\u7387\u7edf\u8ba1\u4e2d\u7684\u6982\u5ff5\u5bf9\u7c7b\u522b\u53d8\u91cf\u7684\u7f3a\u5931\u503c\u8fdb\u884c\u586b\u5145\nfreqDict = {}\ntotal = df.shape[0]\nfor col in null_col:\n    for v in set(df[col]):\n        # \u6bcf\u4e00\u4e2a\u7c7b\u522b\u7684df\n        vdf = df[df[col] == v][col]\n        # \u6bcf\u4e00\u4e2a\u7c7b\u522b\u7684\u6982\u7387\n        freqDict[v] = vdf.shape[0] \/ total\n    freqTuple = list(freqDict.items())\n    freqList = [i[1] for i in freqTuple]\n    freqCumsum = np.cumsum(freqList)\n\n\n    for i in range(total):\n        if df.loc[i+1,col] != df.loc[i+1,col]:  # \u8bf4\u660e\u4e3a\u7a7a\u503c\n            # \u8fd9\u4e00\u90e8\u5206\u8fd0\u7528\u4e86\u6982\u7387\u7edf\u8ba1\u4e2d\u7684\u6982\u5ff5\n            a = random.random()\n            for k in range(len(freqCumsum)-1):\n                if freqCumsum[k]<a<=freqCumsum[k+1]:\n                    position = k+1\n            df.loc[i+1,col] = freqTuple[position][0]","f54d54e3":"df['BsmtQual'].isnull().sum()","7a2f48a0":"df['KitchenQual'].isnull().sum()","638784f6":"# GarageArea\uff0cTotalBsmtSF\u8fd9\u4e24\u4e2a\u8fde\u7eed\u53d8\u91cf\u5747\u53ea\u6709\u4e00\u4e2a\u7f3a\u5931\u503c\uff0c\u6240\u4ee5\u7528\u5747\u503c\u6765\u586b\u5145\uff08\u6b63\u5e38\u6765\u8bf4\u8981\u5148\u5254\u9664\u5f02\u5e38\u70b9\uff0c\u56e0\u4e3a\u7f3a\u5931\u7684\u4e0d\u591a\uff0c\u6240\u4ee5\u8fd9\u4e00\u6b65\u5c31\u8df3\u8fc7\u4e86\uff09\ndf.loc[df['GarageArea'].isnull(),'GarageArea'] = df['GarageArea'].mean()\ndf.loc[df['TotalBsmtSF'].isnull(),'TotalBsmtSF'] = df['TotalBsmtSF'].mean()","5b6e7ae7":"df['GarageArea'].isnull().sum()","9e5a75b6":"df['TotalBsmtSF'].isnull().sum()","97575f22":"num_columns = ['OverallQual','GrLivArea','GarageArea','TotalBsmtSF','FullBath','YearBuilt','YearRemodAdd']\ncat_columns = ['Foundation','BsmtQual','KitchenQual']\nfor var in num_columns:\n    fig,ax = plt.subplots(figsize=(8,8))\n    df[var].hist(bins=50,ax=ax)\n    ax.set_xlabel(var)\n                        ","b5817933":"# \u753b\u76f4\u65b9\u56fe\u4e0e\u8fde\u7eed\u6982\u7387\u4f30\u8ba1\uff0cfit\u53c2\u6570\u4f20\u5165norm-\u6807\u51c6\u6b63\u6001\u5206\u5e03\nsns.distplot(df['GrLivArea'], fit=norm);\nfig = plt.figure()\n# probplot\uff0c\u6837\u672c\u6570\u636e\u76f8\u5bf9\u4e8e\u6307\u5b9a\u7684\u7406\u8bba\u5206\u5e03(\u9ed8\u8ba4\u4e3a\u6b63\u6001\u5206\u5e03)\u7684\u5206\u4f4d\u6570\u7684\u6982\u7387\u3002probplot\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6570\u636e\u7684\u6700\u4f73\u62df\u5408\u7ebf\u3002\u8fd9\u4e2a\u56fe\u662f\u7528\u6765\u770b\u7ebf\u6027\u5ea6\u7684\nres = probplot(df['GrLivArea'], plot=plt)","8b3f90a7":"# \u753b\u76f4\u65b9\u56fe\u4e0e\u8fde\u7eed\u6982\u7387\u4f30\u8ba1\uff0cfit\u53c2\u6570\u4f20\u5165norm-\u6807\u51c6\u6b63\u6001\u5206\u5e03\nsns.distplot(np.log(df['GrLivArea']), fit=norm);\nfig = plt.figure()\n# probplot\uff0c\u6837\u672c\u6570\u636e\u76f8\u5bf9\u4e8e\u6307\u5b9a\u7684\u7406\u8bba\u5206\u5e03(\u9ed8\u8ba4\u4e3a\u6b63\u6001\u5206\u5e03)\u7684\u5206\u4f4d\u6570\u7684\u6982\u7387\u3002probplot\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6570\u636e\u7684\u6700\u4f73\u62df\u5408\u7ebf\u3002\u8fd9\u4e2a\u56fe\u662f\u7528\u6765\u770b\u7ebf\u6027\u5ea6\u7684\nres = probplot(np.log(df['GrLivArea']), plot=plt)","352356d4":"# \u753b\u76f4\u65b9\u56fe\u4e0e\u8fde\u7eed\u6982\u7387\u4f30\u8ba1\uff0cfit\u53c2\u6570\u4f20\u5165norm-\u6807\u51c6\u6b63\u6001\u5206\u5e03\nsns.distplot(np.sqrt(df['GrLivArea']), fit=norm);\nfig = plt.figure()\n# probplot\uff0c\u6837\u672c\u6570\u636e\u76f8\u5bf9\u4e8e\u6307\u5b9a\u7684\u7406\u8bba\u5206\u5e03(\u9ed8\u8ba4\u4e3a\u6b63\u6001\u5206\u5e03)\u7684\u5206\u4f4d\u6570\u7684\u6982\u7387\u3002probplot\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6570\u636e\u7684\u6700\u4f73\u62df\u5408\u7ebf\u3002\u8fd9\u4e2a\u56fe\u662f\u7528\u6765\u770b\u7ebf\u6027\u5ea6\u7684\nres = probplot(np.sqrt(df['GrLivArea']), plot=plt)","006608a3":"# \u753b\u76f4\u65b9\u56fe\u4e0e\u8fde\u7eed\u6982\u7387\u4f30\u8ba1\uff0cfit\u53c2\u6570\u4f20\u5165norm-\u6807\u51c6\u6b63\u6001\u5206\u5e03\nsns.distplot(df['GarageArea'], fit=norm);\nfig = plt.figure()\n# probplot\uff0c\u6837\u672c\u6570\u636e\u76f8\u5bf9\u4e8e\u6307\u5b9a\u7684\u7406\u8bba\u5206\u5e03(\u9ed8\u8ba4\u4e3a\u6b63\u6001\u5206\u5e03)\u7684\u5206\u4f4d\u6570\u7684\u6982\u7387\u3002probplot\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6570\u636e\u7684\u6700\u4f73\u62df\u5408\u7ebf\u3002\u8fd9\u4e2a\u56fe\u662f\u7528\u6765\u770b\u7ebf\u6027\u5ea6\u7684\nres = probplot(df['GarageArea'], plot=plt)","5079c393":"df['GarageArea'].kurtosis(),df['GarageArea'].skew()","3f88f6f0":"dfg = QuantileTransformer(n_quantiles = 300,output_distribution='normal', random_state=0).fit_transform(df['GarageArea'].values.reshape(-1,1))","0f27be00":"dfg = pd.Series(dfg.flatten())","b5be8738":"# \u753b\u76f4\u65b9\u56fe\u4e0e\u8fde\u7eed\u6982\u7387\u4f30\u8ba1\uff0cfit\u53c2\u6570\u4f20\u5165norm-\u6807\u51c6\u6b63\u6001\u5206\u5e03\nsns.distplot(dfg, fit=norm);\nfig = plt.figure()\n# probplot\uff0c\u6837\u672c\u6570\u636e\u76f8\u5bf9\u4e8e\u6307\u5b9a\u7684\u7406\u8bba\u5206\u5e03(\u9ed8\u8ba4\u4e3a\u6b63\u6001\u5206\u5e03)\u7684\u5206\u4f4d\u6570\u7684\u6982\u7387\u3002probplot\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6570\u636e\u7684\u6700\u4f73\u62df\u5408\u7ebf\u3002\u8fd9\u4e2a\u56fe\u662f\u7528\u6765\u770b\u7ebf\u6027\u5ea6\u7684\nres = probplot(dfg, plot=plt)","b34e04d5":"dfg.kurtosis(),dfg.skew()","0a740118":"# # \u4e3a\u65b0\u53d8\u91cf\u521b\u9020\u4e00\u4e2a\u5217'HasGarage',\u5982\u679c'GarageArea'>0\u5219\u4e3a1\uff0c\u5176\u4f59\u4e3a0\n# df['HasGarage'] = pd.Series(len(df['GarageArea']), index=df.index)\n# df['HasGarage'] = 0 \n# df.loc[df['GarageArea']>0,'HasGarage'] = 1\n# # \u5982\u679c'HasGarage'=1\uff0c\u5219\u505a\u5bf9\u6570\u53d8\u6362\n# df.loc[df['HasGarage']==1,'GarageArea'] = np.log(df['GarageArea'])\n# # \u753b\u56fe\n# sns.distplot(df[df['HasGarage']>0]['GarageArea'], fit=norm);\n# fig = plt.figure()\n# res = probplot(df[df['HasGarage']>0]['GarageArea'], plot=plt)","635d6b0b":"# df['GarageArea'].kurtosis(),df['GarageArea'].skew()","1eecf3d6":"sns.distplot(df['TotalBsmtSF'],bins=50,color='k')","0d148289":"df['TotalBsmtSF'].kurtosis(),df['TotalBsmtSF'].skew()","9ed23c82":"dfgt = QuantileTransformer(n_quantiles = 300,output_distribution='normal', random_state=0).fit_transform(df['TotalBsmtSF'].values.reshape(-1,1))\ndfgt = pd.Series(dfgt.flatten())","c14fb1c1":"# \u753b\u76f4\u65b9\u56fe\u4e0e\u8fde\u7eed\u6982\u7387\u4f30\u8ba1\uff0cfit\u53c2\u6570\u4f20\u5165norm-\u6807\u51c6\u6b63\u6001\u5206\u5e03\nsns.distplot(dfgt, fit=norm);\nfig = plt.figure()\n# probplot\uff0c\u6837\u672c\u6570\u636e\u76f8\u5bf9\u4e8e\u6307\u5b9a\u7684\u7406\u8bba\u5206\u5e03(\u9ed8\u8ba4\u4e3a\u6b63\u6001\u5206\u5e03)\u7684\u5206\u4f4d\u6570\u7684\u6982\u7387\u3002probplot\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6570\u636e\u7684\u6700\u4f73\u62df\u5408\u7ebf\u3002\u8fd9\u4e2a\u56fe\u662f\u7528\u6765\u770b\u7ebf\u6027\u5ea6\u7684\nres = probplot(dfgt, plot=plt)","787d4cb5":"dfgt.kurtosis(),dfgt.skew()","c67f50c1":"# \u5bf9\u5927\u4e8e\u7b49\u4e8e0\u7684\u6570\u5f00\u6839\u53f7\ndf['HasBsmt'] = pd.Series(len(df['TotalBsmtSF']), index=df.index)\ndf['HasBsmt'] = 0 \ndf.loc[df['TotalBsmtSF']>0,'HasBsmt'] = 1\ndf.loc[df['HasBsmt']==1,'TotalBsmtSF'] = np.sqrt(df['TotalBsmtSF'])\nsns.distplot(df[df['HasBsmt']>0]['TotalBsmtSF'], fit=norm);\nfig = plt.figure()\nres = probplot(df[df['HasBsmt']>0]['TotalBsmtSF'], plot=plt)","94d84e36":"df['TotalBsmtSF'].kurtosis(),df['TotalBsmtSF'].skew()","ec31ddbc":"df_process = df[num_columns]\ndf_process.loc[:,'GrLivArea'] = np.log1p(df.loc[:,'GrLivArea'])\ndummy =[]\nfor var in cat_columns:\n    dummy_df = pd.get_dummies(df[var],prefix=var)\n    dummy.append(dummy_df)\ndf_process = pd.concat([df_process,dummy[0]],axis=1)\ndf_process = pd.concat([df_process,dummy[1]],axis=1)\ndf_process = pd.concat([df_process,dummy[2]],axis=1)\ndf_process","efb20757":"df_process.to_csv('df_dummy.csv')","eee3e124":"df_process_1 = df[num_columns]\ndf_process_1.loc[:,'GrLivArea'] = np.log1p(df.loc[:,'GrLivArea'])\nfreq_dict = {}  # \u9891\u7387\u5b57\u5178\nfor var in cat_columns:\n    for v in set(df[var]):\n        vdf = df.loc[df.loc[:,var] == v][var]\n        freq_dict[v] = vdf.shape[0] \/ df.shape[0]\n    for i in range(df.shape[0]):\n        df.loc[i+1,var] = freq_dict[df.loc[i+1,var]]\ndf_process_1 = pd.concat([df_process_1,df[cat_columns]],axis=1)\ndf_process_1","446de14d":"df_process_1.to_csv('df_freq.csv')","4e356eb6":"### GarageArea","a07f998c":"### \u5bf9'GrLivArea'\uff0c'GarageArea'\uff0c'TotalBsmtSF'\u8c03\u6574\u5176\u6982\u7387\u5206\u5e03","d01d6362":"### \u5bf9\u6bd4\u53d1\u73b0\uff0c\u5bf9\u6570\u6548\u679c\u66f4\u597d\u4e00\u70b9\uff0c\u9009\u62e9\u5bf9\u6570","e7082b90":"## 1.\u7f3a\u5931\u503c\u5904\u7406","9f44348c":"## \u7531\u4e0a\u7bc7\u6587\u7ae0[kaggle\u623f\u4ef7\u9884\u6d4b\u3010\u4e2d\u6587\u601d\u8def\u3011\u4e4bEDA](https:\/\/www.kaggle.com\/mywishisworldpeace\/kaggle-eda)\uff0c\u6211\u4eec\u5f97\u51fa\uff1a\n* \u8fde\u7eed\u578b\u53d8\u91cf\u9009\u62e9['OverallQual','GrLivArea','GarageAreas','TotalBsmtSF','FullBath','YearBulit','YearRemodAdd']\n* \u7c7b\u522b\u578b\u53d8\u91cf\u9009\u62e9['Foundation','BsmtQual','KitchenQual']\n\n### \u5bf9\u4ee5\u4e0a\u53d8\u91cf\u8fdb\u884c\u64cd\u4f5c","ad89197f":"## \u7ecf\u8fc7\u4e0a\u8ff0\u5206\u6790\uff0c\u8981\u505a\u7684\u64cd\u4f5c\u7edf\u8ba1\u5982\u4e0b\uff1a\n### 1.np.log1p(df['GrLivArea'])\n### 2.\u5c06\u7c7b\u522b\u53d8\u91cf\u7684one-hot\u8ddf\u5b83\u4eec\u62fc\u63a5\u5728\u4e00\u8d77\n### 3.\u5c06\u76ee\u6807\u53d8\u91cfnp.log1p(train_data['SalePrice'])","227e5610":"## \u8fd8\u672a\u5c1d\u8bd5\u7684\u70b9\uff1a\n### 1.\u6ca1\u6709\u5206\u6790\u8fde\u7eed\u578b\u53d8\u91cf\u4e0e\u7c7b\u522b\u578b\u53d8\u91cf\u662f\u5426\u6709\u5171\u7ebf\u6027\uff0c\u53ea\u80fd\u8bf4\u53ef\u80fd\u4f1a\u6709\u628a\uff0c\u6bd4\u5982KitchenQual\u4e0eOverallQual\uff0c\u4f46\u6211\u5206\u6790\u6570\u636e\u540e\u89c9\u5f97\u6ca1\u6709\uff0c\u56e0\u4e3a\u4e0d\u540c\u7684OverallQual\u4f1a\u51fa\u73b0\u76f8\u540c\u7684KitchenQual\uff0c\u540e\u9762\u5982\u679c\u6709\u65f6\u95f4\u5728\u5c1d\u8bd5\u4e00\u4e0b\n### 2.\u6ca1\u6709\u505a\u7279\u5f81\u7ec4\u5408\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5c06YearRemodAdd-YearBuilt\uff0c\u5b83\u7684\u542b\u4e49\u662f\uff1f\u6709\u53ef\u80fd\u6709\u6548\u679c\u5427","394a35fb":"### \u5f00\u65b9\u6548\u679c\u597d\u4e00\u70b9","95b0465d":"## \u7ecf\u8fc7\u4e0a\u8ff0\u5206\u6790\uff0c\u8981\u505a\u7684\u64cd\u4f5c\u7edf\u8ba1\u5982\u4e0b\uff1a\n### 1.np.log1p(df['GrLivArea'])\n### 2.np.sqrt(df['TotalBsmtSF'])\n### 3.\u5c06\u7c7b\u522b\u53d8\u91cf\u4ee5\u5b83\u7684\u7c7b\u522b\u9891\u7387\u4ee3\u66ff\u5b83\u7684\u7c7b\u522b\u8ddf\u5b83\u4eec\u62fc\u63a5\u5728\u4e00\u8d77\n### 4.\u5c06\u76ee\u6807\u53d8\u91cfnp.log1p(train_data['SalePrice'])","095564c4":"## 2.\u91cd\u65b0\u770b\u4e00\u4e0b\u53d8\u91cf\u7684\u5206\u5e03\n\u8fd9\u4e00\u90e8\u5206\u5b66\u4e60\u4e86\u4e00\u4e0b\u8fd9\u7bc7notebook\u7684\u64cd\u4f5c\n[Comprehensive data exploration with Python](https:\/\/www.kaggle.com\/pmarcelino\/comprehensive-data-exploration-with-python)","50b19135":"## \u63a5\u4e0b\u6765\u8981\u505a\u7684\u70b9\uff1a\n### 1.\u6811\u6a21\u578b\u5c1d\u8bd5\u4e24\u4e2a\uff0cGBDT\u4e0eXGboost\n### 2.\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u6a21\u578b\u5c1d\u8bd5\u4e24\u4e2a\uff0cmlp\u4e0eresnet\n### 3.\u5206\u522b\u5728\u6811\u6a21\u578b\u4e0e\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u4e2d\u9009\u4e00\u4e2a\u6548\u679c\u597d\u7684\uff0c\u7136\u540e\u505a\u6a21\u578b\u7684\u878d\u5408\u8bd5\u8bd5\uff01\u770b\u770b\u6548\u679c\u662f\u5426\u6709\u63d0\u5347","c7ec81aa":"### \u5e73\u65b9\u6839","e6e551f8":"### \u8fd9\u4e2a\u6570\u636e\u5448\u73b0\u591a\u5cf0\u6001\n[\u8fd9\u7bc7\u535a\u5ba2\u8bb2\u8ff0\u4e86\u53cc\u5cf0\u6001\u7684\u89e3\u51b3\u529e\u6cd5\uff0c\u6211\u5c1d\u8bd5\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u4e0d\u884c\uff0c\u5c1d\u8bd5\u5982\u4e0b:](https:\/\/blog.csdn.net\/weixin_41013322\/article\/details\/107264912?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161647617216780264061032%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=161647617216780264061032&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-18-107264912.pc_search_result_cache&utm_term=%E5%81%8F%E6%80%81%E4%B8%8E%E5%B3%B0%E6%80%81)","c4c5d866":"### 'GrLivArea'","61fbf716":"### \u53d8\u6362-\u5bf9\u6240\u6709\u975e\u96f6\u89c2\u6d4b\u503c\u8fdb\u884c\u5bf9\u6570\u53d8\u6362\uff0c\u5ffd\u7565\u90a3\u4e9b\u503c\u4e3a\u96f6\u7684\u89c2\u6d4b\u503c\n\u53d1\u73b0\u539f\u5206\u5e03\u6548\u679c\u8fd8\u5dee","0f75c603":"### \u53ef\u4ee5\u770b\u51fa\u5b83\u53f3\u504f\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5bf9\u6570\u6216\u5e73\u65b9\u6839\n### \u5bf9\u6570","3177b70a":"### 'TotalBsmtSF'"}}