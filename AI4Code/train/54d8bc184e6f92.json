{"cell_type":{"f0ae0000":"code","e2f76db6":"code","7747ceb1":"code","ef76809f":"code","b2d7857b":"code","94c3ac3d":"code","2dff0654":"code","e57d7485":"code","55347993":"code","feb8f2be":"code","5701c66b":"code","e343c79b":"code","ce956bbd":"code","39552af4":"code","3e09a633":"code","5eca1c1f":"code","954fc496":"code","3da513ce":"code","7f683bb8":"code","90481624":"code","7b98b208":"code","43b6fb30":"markdown","8aa5f84d":"markdown","5f98e15f":"markdown","e1d9c087":"markdown","fb1175c7":"markdown","e2032358":"markdown","5ff5f6e8":"markdown","00775242":"markdown"},"source":{"f0ae0000":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","e2f76db6":"data_set = pd.read_csv('..\/input\/league-of-legends-diamond-ranked-games-10-min\/high_diamond_ranked_10min.csv')\ndata_set.head()","7747ceb1":"data_set.describe()","ef76809f":"data_set.info()","b2d7857b":"plt.figure(figsize = (30,30))\nsns.heatmap(data_set.corr(),annot = True,cmap = plt.cm.Blues)\nplt.show()","94c3ac3d":"data_set = data_set.drop(['gameId','redKills','redDeaths','blueGoldDiff','redGoldDiff','blueExperienceDiff','redExperienceDiff','blueCSPerMin','redCSPerMin','blueAssists','redAssists','blueWardsPlaced','redWardsPlaced','blueWardsDestroyed','redWardsDestroyed','redFirstBlood','blueAvgLevel',\n                          'redAvgLevel','blueHeralds','redHeralds','blueTotalJungleMinionsKilled',\n                          'redTotalJungleMinionsKilled','blueTowersDestroyed','redTowersDestroyed'],axis = 1)","2dff0654":"plt.figure(figsize = (15,15))\nsns.heatmap(data_set.corr(),annot = True,cmap = plt.cm.Blues)\nplt.show()","e57d7485":"grid = sns.PairGrid(data=data_set, vars=['blueKills', 'blueTotalExperience', 'blueTotalGold','blueDeaths','blueTotalMinionsKilled'], hue='blueWins', height=5, palette='Set1')\ngrid.map_diag(plt.hist)\ngrid.map_offdiag(plt.scatter)","55347993":"grid1 = sns.PairGrid(data=data_set, vars=['blueGoldPerMin', 'blueTotalExperience', 'blueTotalGold'], hue='blueKills', height=3, palette='Set1')\ngrid1.map_diag(plt.hist)\ngrid1.map_offdiag(plt.scatter)","feb8f2be":"data_set","5701c66b":"y = data_set.iloc[:,0].values\nx = data_set.iloc[:,1:].values","e343c79b":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y, test_size = 0.2)\nfrom sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nx_train = scaler.fit_transform(x_train)\nx_test = scaler.transform(x_test)\nx_test","ce956bbd":"from xgboost import XGBClassifier\nclassifier = XGBClassifier(n_estimators = 300,learning_rate = 0.1)\nclassifier.fit(x_train,y_train)\ny_pred = classifier.predict(x_test)","39552af4":"from sklearn.metrics import confusion_matrix,accuracy_score\n\ncm = confusion_matrix(y_test, y_pred)\naccuracy = accuracy_score(y_test, y_pred)\nprint(cm,\"\\n accuracy:\",accuracy)","3e09a633":"from sklearn.decomposition import PCA\npca = PCA(n_components = 1)\nreduction = pca.fit_transform(x_train)\nreduction_test = pca.transform(x_test)\nprint(pca.explained_variance_ratio_)","5eca1c1f":"data_reduced = pd.DataFrame(data = reduction,columns = ['pc1'])","954fc496":"data_reduced","3da513ce":"reduction_test","7f683bb8":"x_reduced = data_reduced.iloc[:,:].values","90481624":"reduced_class = XGBClassifier(n_estimators = 300,learning_rate = 0.01)\nreduced_class.fit(x_reduced,y_train)\ny_reduced_pred = reduced_class.predict(reduction_test)","7b98b208":"from sklearn.metrics import confusion_matrix,accuracy_score\n\ncm = confusion_matrix(y_test, y_reduced_pred)\naccuracy = accuracy_score(y_test, y_reduced_pred)\nprint(cm,\"\\n accuracy:\",accuracy)","43b6fb30":"# Modal_Selection - XGboost","8aa5f84d":"# metrics #2","5f98e15f":"# Dimensionality_Reduction","e1d9c087":"#  co-relation matrix","fb1175c7":"# Exploratory_Data_analysis","e2032358":"### dropping un-necessary variables\nvariables that are not related and negetively corelated","5ff5f6e8":"# Metrics #1","00775242":"# Data Preprocessing"}}