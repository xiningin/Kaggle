{"cell_type":{"20e24976":"code","db893417":"code","8daa25b5":"code","01372f3f":"code","c22b3f4b":"code","ef8a3cd8":"code","dcfac321":"code","f934c3ab":"code","dd371550":"code","2b41ab60":"code","e62997e9":"markdown"},"source":{"20e24976":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","db893417":"# Import Libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","8daa25b5":"# Import dataset\ndataset = pd.read_csv('\/kaggle\/input\/svr-salary-prediction\/Position_Salaries.csv')\nX = dataset.iloc[:,1:-1].values\ny = dataset.iloc[:,[-1]].values","01372f3f":"# As both dependent and independent variable is not in same range of value, so we will standardize\n# both the features and bring them to common range.\nfrom sklearn.preprocessing import StandardScaler\nsc_X = StandardScaler()\nsc_y = StandardScaler()\nX = sc_X.fit_transform(X)\ny = sc_y.fit_transform(y)","c22b3f4b":"print(X)","ef8a3cd8":"print(y)","dcfac321":"# Train SVR model on entire dataset\nfrom sklearn.svm import SVR\nregressor = SVR(kernel= 'rbf')\nregressor.fit(X,y)","f934c3ab":"# Predicting a new result\nsc_y.inverse_transform(regressor.predict(sc_X.transform([[6.5]])))","dd371550":"# Visualizing the SVR result\nplt.scatter(sc_X.inverse_transform(X),sc_y.inverse_transform(y), color='red')\nplt.plot(sc_X.inverse_transform(X),sc_y.inverse_transform(regressor.predict(X)),color='blue')\nplt.title(\"Support Vector Regression\")\nplt.xlabel('Position')\nplt.ylabel('Salary')","2b41ab60":"# Visualizing SVR result with high resolution\nx_grid = np.arange(min(sc_X.inverse_transform(X)), max(sc_X.inverse_transform(X)),0.1)\nx_grid = x_grid.reshape(len(x_grid),1)\nplt.scatter(sc_X.inverse_transform(X),sc_y.inverse_transform(y), color='red')\nplt.plot(x_grid,sc_y.inverse_transform(regressor.predict(sc_X.transform(x_grid))),color='blue')\nplt.title(\"Support Vector Regression\")\nplt.xlabel('Position')\nplt.ylabel('Salary')\nplt.show()","e62997e9":"This dataset holds the salary for different levels. For new hiring how HR will decide the salary based on the no. of exprience holding by the employee. Here we have to train the model with SVR and find salary for unknown data."}}