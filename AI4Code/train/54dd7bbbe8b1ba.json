{"cell_type":{"7e674e4b":"code","d462be61":"code","7f1fc6a1":"code","ef828869":"code","42ce6c84":"code","d63b6e51":"code","9010dacb":"code","daf2a135":"code","d785cce6":"code","3d1a03f3":"code","37cd8dba":"code","4ccd8b87":"code","6a01d867":"markdown","189e6289":"markdown","34afbb16":"markdown","cdfb4125":"markdown","4a10843a":"markdown","bfdcde88":"markdown","84b8e3ad":"markdown"},"source":{"7e674e4b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)","d462be61":"# read csv files\ntrain = pd.read_csv('\/kaggle\/input\/siim-isic-melanoma-classification\/train.csv')\ntrain","7f1fc6a1":"# understand the train dataset\ntrain.info()","ef828869":"#find the ratio of men to total ratio:\nno_of_male = (train['sex'] == 'male').sum()\nno_of_values = (train['sex'].notna()).count()\nprint(no_of_male\/no_of_values)","42ce6c84":"train['sex'] = train['sex'].fillna('male')\nprint('no. of na values in sex = ', train['sex'].isna().sum() )","d63b6e51":"train['age_approx'] = train['age_approx'].fillna( train['age_approx'].median() )\n\nprint('no. of na values in age_approx = ', train['age_approx'].isna().sum() )","9010dacb":"most_freq_site = train['anatom_site_general_challenge'].value_counts().idxmax()\n\ntrain['anatom_site_general_challenge'].fillna( most_freq_site, inplace = True)\n\nprint('no. of na values in anatom_site_general_challenge = ', train['anatom_site_general_challenge'].isna().sum() )","daf2a135":"train.drop('diagnosis', axis = 1, inplace = True)\ntrain.info()","d785cce6":"# lets clean this table for data analysis\n\n# 1. Lets create a separate dataframe for this purpose\np_data = train.copy()  # p_data as in person data\n\n# 2. Lets drop the columns image_name and patient_id\n#         we'll access the image_name from the train dataset \n#         and since patient_id doens't represent any probability of being malignant or benign, \n#                     - we'll treat column id as new patient id\n\np_data.drop(['image_name', 'patient_id'],axis = 1, inplace = True)\n\n# if you want to preserve patient_id to be the id instead use:\n\n# p_data.drop('image_name',axis = 1, inplace = True)\n# p_data.set_index('patient_id')","3d1a03f3":"# convert sex into a bool column\np_data['is_male'] = (p_data['sex'] == 'male')\np_data.drop('sex', axis = 1, inplace = True)\n\n#convert benign_malignant into a bool column'\np_data['is_malignant'] = p_data['target']\np_data.drop(['benign_malignant', 'target'], axis = 1, inplace = True)\n\n\np_data","37cd8dba":"#convert anatom_site_general_challenge into categories\n\n#note: we inclued all the sites except for the final site cause in the final dataframe if we have false for\n#all the included sites it means true automatically for the last site so adding it will only ceate redundancy\n\nregions = p_data['anatom_site_general_challenge'].unique()[:-1]\n\nfor region in regions:\n    p_data['is_' + region] = (p_data['anatom_site_general_challenge'] == region)\n    print(region)\n\np_data.drop('anatom_site_general_challenge', axis = 1,  inplace = True)\np_data","4ccd8b87":"# normalize age\np_data['normalized_age'] = p_data['age_approx']\/p_data['age_approx'].max()\np_data.drop('age_approx', axis = 1, inplace = True)\n\np_data","6a01d867":"## 1. Sex:\nlets fill in with either male or female according to which gender is more common","189e6289":"## lets convert all categorical data into bool type!","34afbb16":"## 2. age_approx:\n\nlet's follow the best practice and replace na values with median age","cdfb4125":"since the ratio of males > 0.5, let's fill na values with male","4a10843a":"## Diagnosis:\nThis column will not be available in the test dataset, so we cannot use it for prediction directly but only for EDA, so let's drop the Diagnosis column for now","bfdcde88":"### **Total number of records: 33126**\n\n\n\n***Therefore columns with null entries are:***\n* sex\n* age_approx\n* anatom_site_general_challenge  ","84b8e3ad":"## 3. anatom_site_general_challenge:\nfill it with the most common site as it is the mst probable !"}}