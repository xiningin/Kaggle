{"cell_type":{"f32887ce":"code","1c10245b":"code","ad00f0a2":"code","63752d89":"code","cc9b74d3":"code","8137948e":"code","7c1cf2df":"code","5096bef2":"code","64d1badd":"code","e2c0344c":"code","7abf43b8":"code","0e11f0d0":"code","e8907635":"code","dc78d130":"code","2370d539":"code","eb53e6af":"code","8b08f08d":"code","91fba5d0":"code","bfede050":"code","1af1063d":"code","6a034c5e":"code","a60f1fb6":"code","94a816e8":"code","0d423d6e":"code","cce2ddbb":"code","42d07d41":"code","90133fc4":"code","bbd0d3d2":"code","ac9b2b78":"code","4252b97f":"code","968c7d89":"code","4ce399b2":"code","1252170c":"code","86ff0163":"code","d675c51f":"code","f1a6de77":"code","54710710":"code","af52c6a4":"code","1c21da83":"code","a7d399db":"code","97e95fe7":"code","a6f4777c":"code","43bc90db":"code","76a0d960":"code","f00e1a62":"code","977fe796":"code","b3c6ff85":"code","28cbca63":"code","89ef4aa6":"code","5670a860":"code","21406e30":"code","b04b6321":"markdown","88c1ca2b":"markdown","be99e84b":"markdown","607a8823":"markdown","3d0ffa23":"markdown","38027d6f":"markdown","8c09f9f1":"markdown","978fc3e2":"markdown","31429a23":"markdown","8ab9ffd7":"markdown"},"source":{"f32887ce":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n%matplotlib inline\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n\n# Any results you write to the current directory are saved as output.","1c10245b":"# Verileri al\u0131yoruz.\nmedian_house_hold_in_come = pd.read_csv('..\/input\/MedianHouseholdIncome2015.csv', encoding=\"windows-1252\")\npercentage_people_below_poverty_level = pd.read_csv('..\/input\/PercentagePeopleBelowPovertyLevel.csv', encoding=\"windows-1252\")\npercent_over_25_completed_highSchool = pd.read_csv('..\/input\/PercentOver25CompletedHighSchool.csv', encoding=\"windows-1252\")\nshare_race_city = pd.read_csv('..\/input\/ShareRaceByCity.csv', encoding=\"windows-1252\")\nkill = pd.read_csv('..\/input\/PoliceKillingsUS.csv', encoding=\"windows-1252\")","ad00f0a2":"percentage_people_below_poverty_level.head()","63752d89":"percentage_people_below_poverty_level.info()","cc9b74d3":"percentage_people_below_poverty_level.poverty_rate.value_counts()","8137948e":"percentage_people_below_poverty_level[\"Geographic Area\"].unique()","7c1cf2df":"#Her eyaletin yoksulluk oran\u0131n\u0131 tespit edip azalan de\u011ferlere g\u00f6re s\u0131ral\u0131yoruz.\n#Ge\u00e7ersiz de\u011ferleri datasetten \u00e7\u0131kar\u0131yoruz.\npercentage_people_below_poverty_level.poverty_rate.replace([\"-\"],0.0,inplace = True)\n#poverty_rate s\u00fctununun veri tipini ondal\u0131k say\u0131ya \u00e7eviriyoruz.\npercentage_people_below_poverty_level.poverty_rate=percentage_people_below_poverty_level.poverty_rate.astype(float)\n#Geographic Area s\u00fctunundaki benzersiz de\u011ferler ile area_list isimli bir liste olu\u015fturuyoruz.\narea_list = list(percentage_people_below_poverty_level[\"Geographic Area\"].unique())\narea_poverty_ratio=[]\nfor i in area_list:\n    x=percentage_people_below_poverty_level[percentage_people_below_poverty_level[\"Geographic Area\"]==i]\n#her bir benzersiz Geographic Area de\u011feri i\u00e7in ortalama al\u0131yoruz \n    area_poverty_rate=sum(x.poverty_rate)\/len(x)\n    area_poverty_ratio.append(area_poverty_rate)\ndata = pd.DataFrame({\"area_list\":area_list,\"area_poverty_ratio\":area_poverty_ratio})\n#area_poverty_ratio s\u00fctununu azalan de\u011ferlere g\u00f6re s\u0131ral\u0131yoruz\nnew_index =(data[\"area_poverty_ratio\"].sort_values(ascending=False)).index.values\nsorted_data=data.reindex(new_index)\n#g\u00f6rselle\u015ftirme\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data[\"area_list\"],y=sorted_data[\"area_poverty_ratio\"])\nplt.xticks(rotation=45)\nplt.xlabel(\"Eyaletler\")\nplt.ylabel(\"Yoksulluk Oran\u0131\")\nplt.title(\"Eyaletlerin Yoksulluk Oranlar\u0131\")","5096bef2":"kill.head()","64d1badd":"kill.name.value_counts()","e2c0344c":"# Most common 15 Name or Surname of killed people\nseparate = kill.name[kill.name != 'TK TK'].str.split() \na,b = zip(*separate)                    \nname_list = a+b                         \nname_count = Counter(name_list)         \nmost_common_names = name_count.most_common(15)  \nx,y = zip(*most_common_names)\nx,y = list(x),list(y)\n# \nplt.figure(figsize=(15,10))\nax= sns.barplot(x=x, y=y,palette = sns.cubehelix_palette(len(x)))\nplt.xlabel('Name or Surname of killed people')\nplt.ylabel('Frequency')\nplt.title('Most common 15 Name or Surname of killed people')","7abf43b8":"percent_over_25_completed_highSchool.head()","0e11f0d0":"percent_over_25_completed_highSchool.info()","e8907635":"percent_over_25_completed_highSchool.percent_completed_hs.value_counts()","dc78d130":"# High school graduation rate of the population that is older than 25 in states\npercent_over_25_completed_highSchool.percent_completed_hs.replace(['-'],0.0,inplace = True)\npercent_over_25_completed_highSchool.percent_completed_hs = percent_over_25_completed_highSchool.percent_completed_hs.astype(float)\narea_list = list(percent_over_25_completed_highSchool['Geographic Area'].unique())\narea_highschool = []\nfor i in area_list:\n    x = percent_over_25_completed_highSchool[percent_over_25_completed_highSchool['Geographic Area']==i]\n    area_highschool_rate = sum(x.percent_completed_hs)\/len(x)\n    area_highschool.append(area_highschool_rate)\n# sorting\ndata = pd.DataFrame({'area_list': area_list,'area_highschool_ratio':area_highschool})\nnew_index = (data['area_highschool_ratio'].sort_values(ascending=True)).index.values\nsorted_data2 = data.reindex(new_index)\n# visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data2['area_list'], y=sorted_data2['area_highschool_ratio'])\nplt.xticks(rotation= 90)\nplt.xlabel('States')\nplt.ylabel('High School Graduate Rate')\nplt.title(\"Percentage of Given State's Population Above 25 that Has Graduated High School\")","2370d539":"share_race_city.head()","eb53e6af":"share_race_city.info()","8b08f08d":"# Percentage of state's population according to races that are black,white,native american, asian and hispanic\nshare_race_city.replace(['-'],0.0,inplace = True)\nshare_race_city.replace(['(X)'],0.0,inplace = True)\nshare_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']] = share_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']].astype(float)\narea_list = list(share_race_city['Geographic area'].unique())\nshare_white = []\nshare_black = []\nshare_native_american = []\nshare_asian = []\nshare_hispanic = []\nfor i in area_list:\n    x = share_race_city[share_race_city['Geographic area']==i]\n    share_white.append(sum(x.share_white)\/len(x))\n    share_black.append(sum(x.share_black) \/ len(x))\n    share_native_american.append(sum(x.share_native_american) \/ len(x))\n    share_asian.append(sum(x.share_asian) \/ len(x))\n    share_hispanic.append(sum(x.share_hispanic) \/ len(x))\n\n# visualization\nf,ax = plt.subplots(figsize = (9,15))\nsns.barplot(x=share_white,y=area_list,color='green',alpha = 0.5,label='White' )\nsns.barplot(x=share_black,y=area_list,color='blue',alpha = 0.7,label='African American')\nsns.barplot(x=share_native_american,y=area_list,color='cyan',alpha = 0.6,label='Native American')\nsns.barplot(x=share_asian,y=area_list,color='yellow',alpha = 0.6,label='Asian')\nsns.barplot(x=share_hispanic,y=area_list,color='red',alpha = 0.6,label='Hispanic')\n\nax.legend(loc='lower right',frameon = True)     # legendlarin gorunurlugu\nax.set(xlabel='Percentage of Races', ylabel='States',title = \"Percentage of State's Population According to Races \")","91fba5d0":"# high school graduation rate vs Poverty rate of each state\nsorted_data['area_poverty_ratio'] = sorted_data['area_poverty_ratio']\/max( sorted_data['area_poverty_ratio'])\nsorted_data2['area_highschool_ratio'] = sorted_data2['area_highschool_ratio']\/max( sorted_data2['area_highschool_ratio'])\ndata = pd.concat([sorted_data,sorted_data2['area_highschool_ratio']],axis=1)\ndata.sort_values('area_poverty_ratio',inplace=True)\n\n# visualize\nf,ax1 = plt.subplots(figsize =(20,10))\nsns.pointplot(x='area_list',y='area_poverty_ratio',data=data,color='lime',alpha=0.8)\nsns.pointplot(x='area_list',y='area_highschool_ratio',data=data,color='red',alpha=0.8)\nplt.text(40,0.6,'high school graduate ratio',color='red',fontsize = 17,style = 'italic')\nplt.text(40,0.55,'poverty ratio',color='lime',fontsize = 18,style = 'italic')\nplt.xlabel('States',fontsize = 15,color='blue')\nplt.ylabel('Values',fontsize = 15,color='blue')\nplt.title('High School Graduate  VS  Poverty Rate',fontsize = 20,color='blue')\nplt.grid()","bfede050":"data.head()","1af1063d":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# joint kernel density\n# pearsonr= if it is 1, there is positive correlation and if it is, -1 there is negative correlation.\n# If it is zero, there is no correlation between variables\n# Show the joint distribution using kernel density estimation \ng = sns.jointplot(data.area_poverty_ratio, data.area_highschool_ratio, kind=\"kde\", size=7)\nplt.savefig('graph.png')\nplt.show()","6a034c5e":"# you can change parameters of joint plot\n# kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }\n# Different usage of parameters but same plot with previous one\ng = sns.jointplot(\"area_poverty_ratio\", \"area_highschool_ratio\", data=data,size=5, ratio=3, color=\"r\")","a60f1fb6":"kill.race.head(15)","94a816e8":"kill.race.value_counts()","0d423d6e":"#Race rates according in kill data\nkill.race.dropna(inplace=True)\nlabels=kill.race.value_counts().index\ncolors=[\"grey\",\"blue\",\"red\",\"yellow\",\"green\",\"brown\"]\nexplode=[0,0,0.1,0,0,0]\nsizes=kill.race.value_counts().values\n#visual\nplt.figure(figsize=(7,7))\nplt.pie(sizes, explode=explode,labels=labels, colors=colors,autopct=\"%1.1f%%\")\nplt.title(\"Killed People According to Races\",color=\"blue\",fontsize=15)","cce2ddbb":"data.head()","42d07d41":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# lmplot \n# Show the results of a linear regression within each dataset\nsns.lmplot(x=\"area_poverty_ratio\",y=\"area_highschool_ratio\",data=data)\nplt.show()","90133fc4":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# cubehelix plot\nsns.kdeplot(data.area_poverty_ratio,data.area_highschool_ratio, shade=False,cut=2)\nplt.show()","bbd0d3d2":"data.head()","ac9b2b78":"pal=sns.cubehelix_palette(2,rot=-0.5,dark=0.3)\nsns.violinplot(data=data,palette=pal,inner=\"points\")\nplt.show()","4252b97f":"data.corr()","968c7d89":"f,ax=plt.subplots(figsize=(5,5))\nsns.heatmap(data.corr(),annot=True,linewidths=0.5,linecolor=\"red\",fmt=\".1f\",ax=ax)\nplt.show()","4ce399b2":"kill.head()","1252170c":"kill.manner_of_death.unique()","86ff0163":"sns.boxplot(x=\"gender\",y=\"age\",hue=\"manner_of_death\",data=kill,palette=\"PRGn\")\nplt.show()","d675c51f":"kill.head()","f1a6de77":"sns.swarmplot(x=\"gender\",y=\"age\",hue=\"manner_of_death\",data=kill)\nplt.show","54710710":"data.head()","af52c6a4":"sns.pairplot(data)\nplt.show()","1c21da83":"kill.gender.value_counts()","a7d399db":"kill.head()","97e95fe7":"sns.countplot(kill.gender)\nplt.title(\"gender\",color=\"blue\",fontsize=15)\nplt.show()","a6f4777c":"armed=kill.armed.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=armed[:7].index,y=armed[:7].values)\nplt.ylabel(\"Number Of Weapon\")\nplt.xlabel(\"Weapon Types\")\nplt.title(\"Kill weapon\",color=\"blue\",fontsize=15)\nplt.show()","43bc90db":"above25=[\"above25\" if i >=25 else \"below25\"for i in kill.age]\ndf=pd.DataFrame({\"age\":above25})\nsns.countplot(x=df.age)\nplt.ylabel(\"Number of killed People\")\nplt.title(\"Age of killed people\",color=\"blue\",fontsize=15)\nplt.show()","76a0d960":"sns.countplot(data=kill,x=\"race\")\nplt.title(\"Race of killed people\",color=\"blue\",fontsize=15)\nplt.show()","f00e1a62":"city=kill.city.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=city[:12].index,y=city[:12].values)\nplt.xticks(rotation=75)\nplt.title(\"Most dangerous cities\",color=\"blue\",fontsize=15)\nplt.show()","977fe796":"state=kill.state.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=state[:20].index,y=state[:20].values)\nplt.title(\"Most Dangerous state\",color=\"blue\",fontsize=15)\nplt.show()","b3c6ff85":"sns.countplot(kill.signs_of_mental_illness)\nplt.xlabel(\"Mental illness\")\nplt.ylabel(\"Number of Mental illness\")\nplt.title(\"Having mental illness or not\", color=\"blue\",fontsize=15)\nplt.show()","28cbca63":"sns.countplot(kill.threat_level)\nplt.xlabel(\"Threat Types\")\nplt.title(\"Threat types\",color=\"blue\",fontsize=15)\nplt.show()","89ef4aa6":"sns.countplot(kill.flee)\nplt.xlabel(\"Flee Types\")\nplt.title(\"Flee types\",color=\"blue\",fontsize=15)\nplt.show()","5670a860":"sns.countplot(kill.body_camera)\nplt.xlabel(\"Having Body Cameras\")\nplt.title(\"Having body cameras or not on police\",color=\"blue\",fontsize=15)\nplt.show()","21406e30":"sta=kill.state.value_counts()\nsns.barplot(x=sta.index[:10],y=sta.values[:10])\nplt.title(\"Kill Numbers from states\",color=\"blue\",fontsize=15)\nplt.show()","b04b6321":"Geographic Area s\u00fctunundaki benzersiz de\u011ferleri okuyoruz.","88c1ca2b":"**Kde Plot**","be99e84b":"**Lm Plot**","607a8823":"**Bar Plot**","3d0ffa23":"Veri tiplerininin say\u0131sal olup olmad\u0131\u011f\u0131n\u0131 kontrol ediyoruz.","38027d6f":"Hangi de\u011ferden ka\u00e7 tane var \u015feklinde bakarak bo\u015f de\u011ferleri tespit ediyoruz.","8c09f9f1":"**Joint Plot**","978fc3e2":"**Violin Plot**","31429a23":"**Point Plot**","8ab9ffd7":"**Pie Chart**"}}