{"cell_type":{"2475d449":"code","99b15078":"code","b5c18faa":"code","43788b12":"code","bbddbf46":"code","d8cfa7c8":"code","372b0a00":"code","b112d1b8":"code","f9d8dc6b":"code","df167ced":"code","19d5ecf8":"code","92ddec9e":"code","4b492a00":"code","f0e5defe":"code","181afdba":"code","d9bffa25":"code","736b5b84":"code","1e5454e2":"code","780145ff":"code","8ac1e0ec":"code","2ecbdd22":"code","3a2f9d0f":"code","02c21bb0":"code","295ce7ff":"code","67177bd9":"code","8019ba02":"code","de1cf4e7":"code","08320d84":"code","d580032b":"code","3e2d820f":"code","a4aeed88":"code","8a23729b":"code","78ee97cd":"code","b4372871":"code","64a34b3d":"code","d6c3c20f":"code","66be4eff":"code","40802c99":"code","1522a060":"code","6b0d2b73":"code","f211dbdf":"code","1f7227e4":"code","2a95a5bc":"code","e7a6c67b":"code","097d93e5":"code","367e3741":"code","b439158c":"markdown","e619366b":"markdown","b0384434":"markdown","c7163854":"markdown","d4fb8993":"markdown","a0172959":"markdown","6fe2d7a4":"markdown","bbe722bc":"markdown","0889355f":"markdown","536c5a26":"markdown","20c9d1c5":"markdown","26bd382d":"markdown","e815d794":"markdown","779a977d":"markdown","4f04fdc7":"markdown"},"source":{"2475d449":"\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n!pip3 -q install autoviz\n!pip3 -q install xlrd\n\nfrom autoviz.AutoViz_Class import AutoViz_Class\n","99b15078":"df = pd.read_csv('..\/input\/hepatitis-c-virus-blood-biomarkers\/hcvdat0.csv')\ndf.head()","b5c18faa":"df[\"Category\"].value_counts()","43788b12":"df.nunique()","bbddbf46":"df.describe()","d8cfa7c8":"autoviz = AutoViz_Class().AutoViz('..\/input\/hepatitis-c-virus-blood-biomarkers\/hcvdat0.csv')","372b0a00":"df = pd.read_csv('..\/input\/hepatitis-c-virus-blood-biomarkers\/hcvdat0.csv')\ndf = df[df.columns[1:]]\ndf.head()","b112d1b8":"Value_list = df['Category'].unique()\n\nfor x in range(len(Value_list)):\n    df.Category[df['Category'] == Value_list[x]] = x\n\ndf.head()","f9d8dc6b":"Value_list = df['Sex'].unique()\n\nfor x in range(len(Value_list)):\n    df.Sex[df['Sex'] == Value_list[x]] = x\n\ndf.head()","df167ced":"df = df.fillna(0)\n#df.head()","19d5ecf8":"df_copy = df.copy()","92ddec9e":"column_list = ['Age', 'ALB', 'ALP', 'ALT', 'AST', 'BIL', 'CREA', 'GGT', 'PROT']\n\nfor column in column_list:\n    Nmax = int(df[column].max())\n    Nmin = int(df[ column].min())\n\n    labels = []\n    \n    #bin_lenght = max(df[column].max() , 2 )\n    bin_lenght = min(df[column].max() - df[column].min() , 10)\n    #print(bin_lenght , column)\n\n    for i in range(Nmin, Nmax, bin_lenght):\n        labels.append(i)\n\n    labels = labels[:-1]\n\n    df_copy[column] = pd.cut(df[column], bins =  range(Nmin, Nmax , bin_lenght),  right=False, labels=labels)\n","4b492a00":"column_list = ['CHE','CHOL']\n\nfor column in column_list:\n    Nmax = int(df[column].max())\n    Nmin = int(df[ column].min())\n\n    labels = []\n    \n    #bin_lenght = max(df[column].max() , 2 )\n    bin_lenght = min(df[column].max() - df[column].min() , 4)\n    #print(bin_lenght , column)\n\n    for i in range(Nmin, Nmax, bin_lenght):\n        labels.append(i)\n\n    labels = labels[:-1]\n\n    df_copy[column] = pd.cut(df[column], bins =  range(Nmin, Nmax , bin_lenght),  right=False, labels=labels)\n\ndf_copy.head()","f0e5defe":"import plotly.express as px\n\nfig = px.parallel_categories(df_copy)\n\nfig.show()","181afdba":"sns.set(rc={'figure.figsize':(11.7,8.27)})\n\ndf = pd.read_csv('..\/input\/hepatitis-c-virus-blood-biomarkers\/hcvdat0.csv')","d9bffa25":"sns.histplot(df['Age'])","736b5b84":"sns.displot(data = df , x = 'ALP',  bins=20, hue = 'Category')","1e5454e2":"sns.displot(data = df , x = 'ALP',  bins=20, hue = 'Category' , log_scale=True)","780145ff":"sns.heatmap(df.corr() , annot = True)","8ac1e0ec":"g = sns.PairGrid(df)\ng.map_upper(sns.histplot)\ng.map_lower(sns.kdeplot, fill=True)\ng.map_diag(sns.histplot, kde=True)","2ecbdd22":"g = sns.PairGrid(df)\ng.map_upper(sns.histplot , log_scale = True)\ng.map_lower(sns.kdeplot, fill=True , log_scale = True)\ng.map_diag(sns.histplot, kde=True , log_scale = True)","3a2f9d0f":"sns.relplot(x=\"AST\", y=\"ALT\", hue=\"Category\", style=\"Sex\", data=df);","02c21bb0":"#sns.set(rc={'figure.figsize':(11.7,8.27)})\n\nfig = plt.figure(figsize= (20,20))\n\nsns.displot(data = df , x = 'ALP', y = 'AST' ,  hue = 'Category' , binwidth=(10, 10))","295ce7ff":"#sns.set(rc={'figure.figsize':(11.7,8.27)})\n\nfig = plt.figure(figsize= (20,20))\n\nsns.displot(data = df , x = 'ALP', y = 'AST' ,  hue = 'Category' , log_scale=(True, True))","67177bd9":"sns.jointplot(data = df , x = 'ALP', y = 'AST', hue=\"Category\" , kind = 'kde' , log_scale = True)","8019ba02":"sns.relplot(x=\"AST\", y=\"ALT\", kind=\"line\", ci=\"sd\", data=df);","de1cf4e7":"sns.relplot(x=\"AST\", y=\"ALT\",\n            hue=\"Category\", style=\"Sex\", kind=\"line\", data=df);","08320d84":"sns.regplot(x=\"AST\", y=\"ALT\", data=df );\nsns.regplot(x=\"AST\", y=\"ALT\", data=df ,logistic=True);","d580032b":"sns.lmplot(x=\"ALT\", y=\"AST\", hue=\"Category\", data=df,\n           markers=[\"o\", \"x\" , '.' , '+' , ''], palette=\"Set1\" );","3e2d820f":"sns.lmplot(x=\"ALT\", y=\"AST\", hue=\"Category\", data=df,\n           markers=[\"o\", \"x\" , '.' , '+' , ''], palette=\"Set1\" , logistic = True);","a4aeed88":"'''df1 = df.dropna()\n\n\npd.plotting.parallel_coordinates(df1[df.columns[4:]] , df.columns[5])\n\nimport plotly.figure_factory as ff\nimport numpy as np\nnp.random.seed(1)\n\n#X = np.random.rand(15, 12) # 15 samples, with 12 dimensions each\nfig = ff.create_dendrogram(df1)\nfig.update_layout(width=800, height=500)\nfig.show()'''","8a23729b":"!python3 -q -m pip install autogluon","78ee97cd":"from autogluon.tabular import TabularDataset , TabularPredictor \n\nfrom sklearn.model_selection import train_test_split","b4372871":"df = pd.read_csv('..\/input\/hepatitis-c-virus-blood-biomarkers\/hcvdat0.csv')\ndf\n\ntrainData , testData = train_test_split(df , test_size = 0.2 , shuffle = True)","64a34b3d":"trainData","d6c3c20f":"label = 'Category'\nsavePath  = '.\/'\npredictor = TabularPredictor(label = label , path=savePath).fit(trainData)","66be4eff":"testData_label = testData['Category']\ntestData_df = testData.drop(columns = ['Category'])\n","40802c99":"predictor = TabularPredictor.load(savePath)","1522a060":"y_pred = predictor.predict(testData_df)\nperf = predictor.evaluate_predictions(testData_label , y_pred)\nperf","6b0d2b73":"from sklearn.metrics import confusion_matrix#Fit the model\n\ny_pred = predictor.predict(testData_df)\ncf_matrix = confusion_matrix(testData_label.to_list() , y_pred)\ncf_matrix","f211dbdf":"#https:\/\/medium.com\/@dtuk81\/confusion-matrix-visualization-fc31e3f30fea\n\nimport seaborn as sns\nsns.heatmap(cf_matrix, annot=True , cmap='Blues')","1f7227e4":"predictor.leaderboard(testData , silent = True)","2a95a5bc":"y_pred = predictor.predict_proba(testData_df)\ny_pred","e7a6c67b":"y_pred[y_pred['3=Cirrhosis'] >= 0.5]","097d93e5":"y_pred[y_pred['2=Fibrosis'] >= 0.5]","367e3741":"y_pred[y_pred['1=Hepatitis'] >= 0.5]","b439158c":"# Hepatitis C\n\n\nHi, I am Dr. Amrit. In this notebook, we will try to dive deep into this dataset.\n\nHepatitis C is one of the most commonly spread infections during Blood donation. Its detection is often complex, expensive and time-taking.\n\nSo rather than going through traditional pathway, new approaches are trying to detect Hepatitis C status using Blood biomarkers. In certain cases, attempts have been made to even sub-categorize the stage of Hepatitis C.\n\nHepatitis C is a dangerous disease, with high fatility, hence prevention is the best remedy the keep in mind.\n\n\n![hepatitis_cells_colorful_stain.jpg](attachment:98b822bc-a765-4f4a-9587-22c5fed97dab.jpg)\n\nDataset - https:\/\/www.kaggle.com\/amritpal333\/hepatitis-c-virus-blood-biomarkers\n\n","e619366b":"# Exploratory data analysis","b0384434":"### Lets fo deeper","c7163854":"## Our interpretation from Data\n\n### There seems to be some correlations in Biomarker levels. Lets first note them done, and then lets try to make sense out of them.\n\n### More than 0.5 \n - Prot - ALB\n\n### 0.4 - 0.5 \n - ALP - GGT\n - AST - GGT\n \n\n### Less than 0 \/ Negative values\n - CHOL \/ ALB \/ CHE - GGT\n - CHOL \/Age \/ ALB \/ CHE - CREA\n - BIL \/ ALB - CHE\n \n       ","d4fb8993":"## Our interpretation from Data\n\n### There seems to be a lot of noise\/ certain outliers.\n\nSo, lets remove outliers(qnantile 0.95) and then normalize data for easier analysis.","a0172959":" ## Our interpretation from Data\n \n The data now seems like \"Normalized\" , so we can interpret the results using their distribution, without keeping their values in mind. ","6fe2d7a4":"All the values seeem logical.\nAge is in logical range.\n\nALB \tALP \tALT \tAST \tBIL \tCHE \tCHOL \tCREA \tGGT \tPROT - Seem in medically possible ranges(healthy or Diseased patient)","bbe722bc":"# Next Steps \n\n- Parallel category plots\n- Normalize data","0889355f":"### Using AutoViz for quick start","536c5a26":"Each cell in the correlation matrix is a \u2018correlation coefficient\u2018 between the two variables corresponding to the row and column of the cell.\n\n## A **Correlation coefficient** is a number that denotes the strength of the relationship between two variables.\n\nThere are several correlation coefficients, \n\n1. Pearson\u2019s coefficient(denotted by \u03c1 (rho)) - most common used \nIt is defined as the covariance between two variables divided by the product of the standard deviations of the two variables.\n\n## Formula for correlation coefficient between two variables\n\nWhere the covariance between X and Y COV(X, Y) is further defined as the \u2018expected value of the product of the deviations of X and Y from their respective means\u2019.\n\n- The value of \u03c1 lies between -1 and +1.\n- Values nearing +1 indicate the presence of a strong positive relation between X and Y, whereas those nearing -1 indicate a strong negative relation between X and Y.\n- Values near to zero mean there is an absence of any relationship between X and Y.\n","20c9d1c5":"# AutoML \nWe will install Autogluon package, a popular AutoML library \nhttps:\/\/auto.gluon.ai\/stable\/install.html","26bd382d":"This dataset contains 14 columns, labelled into 4 classes.\n\n## 4 Classes\n\n1. Blood donors\n2. Hepatitis C \n   - 'just' Hepatitis C\n   - with Fibrosis\n   - with Cirrhosis\n   \n(values: '0=Blood Donor', '0s=suspect Blood Donor', '1=Hepatitis', '2=Fibrosis', '3=Cirrhosis')","e815d794":"## Now lets look at the same plot using Log scale, to understand the data distributions and relations","779a977d":"# 14 columns \n\n1. X (Patient ID\/No.)\n2. Category (diagnosis) \n3. Age (in years)\n4. Sex (f,m)\n5. ALB\n6. ALP\n7. ALT\n8. AST\n9. BIL\n10. CHE\n11. CHOL\n12. CREA\n13. GGT\n14. PROT","4f04fdc7":"Lets get started by importing things we need"}}