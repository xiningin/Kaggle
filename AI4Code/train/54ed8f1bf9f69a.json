{"cell_type":{"8f079369":"code","33e9e3c8":"code","ce4f870f":"code","8b91ae4d":"code","4421e1c6":"code","f4cfc42b":"code","f5ea0f63":"code","376daded":"code","636994ee":"code","8d2b16b6":"code","5b58a597":"code","f318acf2":"code","deca50c3":"markdown","31e7a288":"markdown","2bad5ecc":"markdown"},"source":{"8f079369":"import os\nimport math\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport cv2\nfrom tqdm import tqdm","33e9e3c8":"DATA_PATH = '..\/input\/made-cv-2021-contest-01-facial-landmarks\/contest01_data\/train\/images\/'\nLAND_PATH = '..\/input\/made-cv-2021-contest-01-facial-landmarks\/contest01_data\/train\/landmarks.csv'\n\nIMAGE_PATHS = np.array([os.path.join(DATA_PATH, f) for f in os.listdir(DATA_PATH)])\nLANDMARKS = pd.read_csv(LAND_PATH, sep='\\t').set_index('file_name')","ce4f870f":"def show_image(file, title, rad=1, ax=None):\n    src = cv2.imread(DATA_PATH + file)\n    src = cv2.cvtColor(src, cv2.COLOR_BGR2RGB)\n    landmark = LANDMARKS.loc[file, :].values.reshape(971, 2)\n    for i, (x, y) in enumerate(landmark):\n        cv2.circle(src, (int(x), int(y)), rad, (0, 255, 0), -1)\n        \n    ax = ax or plt.gca()\n    ax.set_title(title)\n    ax.imshow(src)","8b91ae4d":"fig, axes = plt.subplots(1, 3, figsize=(15,10))\n\nshow_image('3e53c6ef5324d601b02c084e95ea4147.jpg', title='shift\/scale', rad=3, ax=axes[0])\nshow_image('225a1d2faaa8f94e046f19546dc389ca.jpg', title='partially incorrect', ax=axes[1])\nshow_image('9bf446840146e01c50fc0556f456b66b.jpg', title='noisy', ax=axes[2])","4421e1c6":"def angle_variation(ps):\n    dps = np.diff(ps, axis=0)\n    angles = []\n    for i in range(len(dps) - 1):\n        e1, e2 = dps[i], dps[i+1]\n        x = np.clip(e1.dot(e2)\/(np.linalg.norm(e1) * np.linalg.norm(e2) + 0.00001), -1, 1)\n        angle = math.acos(x)*180\/math.pi\n        angles.append(angle)\n\n    return np.mean(angles)","f4cfc42b":"stats = []\n\nfor image in tqdm(IMAGE_PATHS):\n    img_file = image.split('\/')[-1]\n    img_landmark = LANDMARKS.loc[img_file].values.reshape(971, 2)\n    stat1 = angle_variation(img_landmark[:64,:])\n    stat2 = angle_variation(img_landmark[64:128,:])\n    stats.append((img_file, stat1, stat2))\n\nstats = np.array(stats)\nstats = pd.DataFrame({'file': stats[:,0], \n                      'stat1': stats[:, 1].astype(float), \n                      'stat2': stats[:, 2].astype(float)})","f5ea0f63":"fig, axes = plt.subplots(1, 2, figsize=(15,6))\n\naxes[0].scatter(stats['stat1'].values[:10000], stats['stat2'].values[:10000], alpha=0.3)\naxes[1].hist(stats['stat1'].values, bins=50)\nplt.show()","376daded":"smooth = stats[(stats['stat1'] < 40) & (stats['stat2'] < 40)].reset_index()\nnoisy = stats[(stats['stat1'] > 70) & (stats['stat2'] > 70)].reset_index()","636994ee":"fig, axes = plt.subplots(1, 3, figsize=(15,10))\n\nshow_image(smooth['file'].values[0], title='smooth', rad=1, ax=axes[0])\nshow_image(smooth['file'].values[1], title='smooth', rad=1,ax=axes[1])\nshow_image(smooth['file'].values[2], title='smooth', rad=1,ax=axes[2])","8d2b16b6":"fig, axes = plt.subplots(1, 3, figsize=(15,10))\n\nshow_image(noisy['file'].values[0], title='noisy', rad=1, ax=axes[0])\nshow_image(noisy['file'].values[1], title='noisy', rad=1,ax=axes[1])\nshow_image(noisy['file'].values[2], title='noisy', rad=1,ax=axes[2])","5b58a597":"noisy.shape","f318acf2":"noisy['file'].values","deca50c3":"\u041f\u043e\u0434\u0445\u043e\u0434\u043e\u0432 \u043f\u043e \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u044e \u0437\u0430\u0448\u0443\u043c\u043b\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u043a \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u0434\u0443\u043c\u0430\u0442\u044c \u043c\u043d\u043e\u0433\u043e. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043f\u0440\u043e\u0441\u0442\u0443\u044e \u0438\u0434\u0435\u044e - \u0432 \u0437\u0430\u0448\u0443\u043c\u043b\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u043a\u0430\u0445 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432\u0435\u043a\u0442\u043e\u0440\u0430 \u043c\u0435\u0436\u0434\u0443 \u0434\u0432\u0443\u043c\u044f \u0441\u043e\u0441\u0435\u0434\u043d\u0438\u043c\u0438 \u0442\u043e\u0447\u043a\u0430\u043c\u0438 \u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0435 \u043f\u043b\u0430\u0432\u043d\u043e, \u0430 \u0441\u0438\u043b\u044c\u043d\u043e \u0441\u043a\u0430\u0447\u0435\u0442 \u043e\u0442 \u0442\u043e\u0447\u043a\u0435 \u043a \u0442\u043e\u0447\u043a\u0435. \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043c\u0435\u0440\u044b \u0442\u0430\u043a\u043e\u0439 \u0445\u0430\u043e\u0442\u0438\u0447\u043d\u043e\u0441\u0442\u0438 \u0432\u043e\u0437\u044c\u043c\u0435\u043c **\u0441\u0440\u0435\u0434\u043d\u044e\u044e \u0432\u0430\u0440\u0438\u0430\u0446\u0438\u044e \u0443\u0433\u043b\u0430 \u0432\u0435\u043a\u0442\u043e\u0440\u0430**, \u0442\u043e \u0435\u0441\u0442\u044c \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442 \u043c\u043e\u0434\u0443\u043b\u0435\u0439 \u0443\u0433\u043b\u043e\u0432 \u043c\u0435\u0436\u0434\u0443 \u0432\u0435\u043a\u0442\u043e\u0440\u0430\u044f\u043c\u0438, \u0441\u043e\u0435\u0434\u0438\u043d\u044f\u044e\u0449\u0438\u043c\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u043e\u0447\u043a\u0438 \u043c\u0435\u0442\u043e\u043a \u043b\u0438\u0446\u0430.","31e7a288":"\u041a\u0430\u043a \u0438 \u043e\u0436\u0438\u0434\u0430\u043b\u043e\u0441\u044c, \u044f\u0432\u043d\u043e \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u044b \u0434\u0432\u0430 \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u0430 - \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441 \u0433\u043b\u0430\u0434\u043a\u0438\u043c\u0438 \u043c\u0435\u0442\u043a\u0430\u043c\u0438 (\u043c\u0430\u043b\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432\u0430\u0440\u0438\u0430\u0446\u0438\u0438 \u0443\u0433\u043b\u043e\u0432) \u0438 \u0437\u0430\u0448\u0443\u043c\u043b\u0435\u043d\u043d\u044b\u043c\u0438 (\u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432\u0430\u0440\u0438\u0430\u0446\u0438\u0438).<br>\n\u0424\u0438\u043b\u044c\u0442\u0440\u0443\u044f, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043f\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u044e \"\u0432\u0430\u0440\u0438\u0430\u0446\u0438\u044f \u0443\u0433\u043b\u0430 > 70\", \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c 3992 \u0441\u0438\u043b\u044c\u043d\u043e \u0437\u0430\u0448\u0443\u043c\u043b\u0435\u043d\u043d\u044b\u0445 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439. \u041c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0438\u0445 \u0432\u044b\u0431\u0440\u043e\u0441\u0438\u0442\u044c)","2bad5ecc":"## Noisy People\n\n\u0415\u0449\u0435 \u0440\u0430\u0437 \u043e \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0439 \u0440\u0430\u0437\u043c\u0435\u0442\u043a\u0435... \u0411\u043e\u0440\u0435\u043c\u0441\u044f \u0441 \u0448\u0443\u043c\u043e\u043c.\n<br>\n<br>\n\n\u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u0447\u0442\u043e \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0442\u0440\u0438 \u0433\u043b\u0430\u0432\u043d\u044b\u0445 \u0442\u0438\u043f\u0430 \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0439 \u0440\u0430\u0437\u043c\u0435\u0442\u043a\u0438:\n- \u0441\u0434\u0432\u0438\u0433 \u0438 \u0440\u0430\u0441\u0442\u044f\u0436\u0435\u043d\u0438\u0435 \u043c\u0435\u0442\u043e\u043a\n- \u0447\u0430\u0441\u0442\u0438\u0447\u043d\u043e \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0435 \u043c\u0435\u0442\u043a\u0438\n- \u0441\u0438\u043b\u044c\u043d\u044b\u0439 \u0448\u0443\u043c\n\n\u041f\u043e\u0434\u0445\u043e\u0434 \u0434\u043b\u044f \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0438 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u0442\u0438\u043f\u043e\u0432 \u043e\u043f\u0438\u0441\u0430\u043d [\u0437\u0434\u0435\u0441\u044c](https:\/\/www.kaggle.com\/c\/made-cv-2021-contest-01-facial-landmarks\/discussion\/232806). \n\n\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u0435 \u043e\u0448\u0438\u0431\u043e\u043a \u0442\u0440\u0435\u0442\u044c\u0435\u0433\u043e \u0442\u0438\u043f\u0430. "}}