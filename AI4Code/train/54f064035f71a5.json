{"cell_type":{"f9f2079b":"code","57e57637":"code","2de5fffe":"code","9d9b8098":"code","e9f2ab45":"code","7a7844d8":"code","9613c0e9":"code","d7fe40bb":"code","5e73289a":"code","9c9fc7d7":"code","6ee5bb31":"code","6ed29171":"code","1b79f75c":"code","a87386e6":"code","58aa1051":"code","708a7dd6":"code","16d3c979":"code","7edf5fb5":"markdown","f1ef9610":"markdown","d66ed7da":"markdown","25d2d26b":"markdown","6c8ed8e3":"markdown"},"source":{"f9f2079b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error, r2_score\nimport math","57e57637":"df = pd.read_csv('..\/input\/salary-data-simple-linear-regression\/Salary_Data.csv')","2de5fffe":"df.head()","9d9b8098":"df.info()","e9f2ab45":"df.describe().transpose()","7a7844d8":"df.shape","9613c0e9":"#check for null values\ndf.isnull().sum()","d7fe40bb":"sns.set_style('darkgrid')\nsns.lmplot(x = 'YearsExperience', y = 'Salary', data = df, palette = 'coolwarm')","5e73289a":"sns.distplot(df['Salary'])","9c9fc7d7":"#plot correlation using seaborn heatmap\nsns.heatmap(df.corr(), annot = True)","6ee5bb31":"X, y = df.iloc[:, :-1], df.iloc[:, [-1]]","6ed29171":"#function for manual calculation of errors\ndef MSE(y_test, y_pred):\n    return np.square(np.subtract(y_test,y_pred)).mean()\n\ndef RMSE(mse):\n    return math.sqrt(mse)","1b79f75c":"#classifier plotting function\ndef clf_plot(clf, X_test, y_test):\n    plt.scatter(X_test, y_test,  color='red', marker = 'x')\n    plt.plot(X_test, clf.predict(X_test), color='green', linewidth=3)","a87386e6":"#function for training and testing model\ndef fit_model(X, y, split_ratio):\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = split_ratio)\n    clf = LinearRegression()\n    clf.fit(X_train, y_train)\n    y_pred = clf.predict(X_test)\n    \n    print(\"Regression Coefficient: \", clf.coef_)\n    \n    mse_sklearn = mean_squared_error(y_test, y_pred)\n    print(\"Mean Square Error using sklearn: \", mse_sklearn)\n    print(\"Root Mean Square Error using sklearn:\", RMSE(mse_sklearn))\n    \n    mse = MSE(y_test, y_pred)\n    print(\"Mean Square Error: \", mse)\n    print(\"Root Mean Square Error:\", RMSE(mse))\n    print(\"R2 Score: \", r2_score(y_test, y_pred))\n    \n    clf_plot(clf, X_test, y_test)\n    \n    return None","58aa1051":"fit_model(X, y, 0.5)","708a7dd6":"fit_model(X, y, 0.3)","16d3c979":"fit_model(X, y, 0.2)","7edf5fb5":"### Visualize the dataset","f1ef9610":"### Now check output for various split ratios","d66ed7da":"### Read and discover the dataset","25d2d26b":"### Classification using Linear Regression","6c8ed8e3":"### Import All Useful Libraries"}}