{"cell_type":{"e115857d":"code","11a44bdc":"code","224a04d0":"code","42cf1d00":"code","5731f920":"code","d89d92ed":"code","2fe9e290":"code","0c05df4c":"code","07a4435e":"code","a0d8f8e2":"code","256d4663":"code","3fca8c55":"code","1817288b":"code","d81ca64a":"code","bf080b64":"code","d3ba3f02":"code","b6d03a5b":"code","70fda000":"code","e6673120":"code","bdff4a07":"code","4a114ee5":"code","4eade0df":"code","f4c507da":"code","a6d1e51a":"code","ac852572":"code","3c214f7e":"code","261d4e46":"code","190dff91":"code","a126c594":"code","d47af6ac":"code","3a9b4f25":"code","163d1cd3":"code","bdf6cde0":"code","5f316bae":"code","b9f0c7f6":"code","f2595315":"code","4a8a0790":"code","e5c9aad5":"code","e5dd02cb":"code","41fe0f2d":"code","67736d37":"code","fa76298e":"code","d2263737":"code","d867090f":"code","b717bac0":"code","b4c96eb2":"code","f6404fc6":"code","89af0b60":"code","539f0651":"code","9baa3586":"code","bd8059de":"code","47c09838":"code","7960b095":"markdown","c72ef977":"markdown","c644bc25":"markdown","e566d8b0":"markdown","93da198f":"markdown","bb513923":"markdown","c01cc1e0":"markdown","06285571":"markdown","4ef00c1b":"markdown","675def3d":"markdown","0656c71b":"markdown","d2b975f0":"markdown","a348d231":"markdown","90d0a826":"markdown","0c7b718a":"markdown","f03f7876":"markdown","3e4e98f8":"markdown","68207da6":"markdown","feaa253c":"markdown","9f6d1ac2":"markdown","7ccb7a7a":"markdown","f16c1655":"markdown","1be7836e":"markdown","03f709b8":"markdown","1354e62c":"markdown","dce06261":"markdown","5d1206b2":"markdown","989e1412":"markdown","fc36fa79":"markdown","4328a1d0":"markdown","587fc98d":"markdown","04c25218":"markdown","a14ca9d3":"markdown","a6cfaff1":"markdown","8b6a8bc8":"markdown","72a94e9e":"markdown","ed65796e":"markdown","45bf72e7":"markdown","78ce8bc6":"markdown","7c453769":"markdown","c6f58168":"markdown","8a686444":"markdown","22cfc242":"markdown","5b58d151":"markdown","a862b279":"markdown","c957bd16":"markdown","8beb2190":"markdown","8cf74b8c":"markdown","3b5abf21":"markdown","04d8edbe":"markdown","0348615b":"markdown","7b91c9e0":"markdown","605505d5":"markdown"},"source":{"e115857d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\nimport seaborn as sns\n\nfrom collections import Counter\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","11a44bdc":"data = pd.read_csv('..\/input\/fish-market\/Fish.csv')\nprint(plt.style.available)\nplt.style.use('ggplot')","224a04d0":"data.head()","42cf1d00":"data.columns = ['Species', 'Weight', 'SL', 'FL', 'TL', 'BD', 'BT']\ndata.head()","5731f920":"data.info()","d89d92ed":"print(str('Is there any NaN value in the dataset: '), data.isnull().values.any())","2fe9e290":"data.describe()","0c05df4c":"sp = data['Species'].value_counts()\nsp = pd.DataFrame(sp)\nsp.T","07a4435e":"sns.barplot(x=sp.index, y=sp['Species']);\nplt.xlabel('Species')\nplt.ylabel('Counts of Species')\nplt.show()","a0d8f8e2":"fig, ax = plt.subplots(figsize=(10,10)) \nsns.heatmap(data[[\"Weight\", \"SL\", \"FL\", \"TL\", \"BD\", \"BT\",]].corr(), annot = True)\nplt.show()","256d4663":"def corr(species):\n    data1 = data[data['Species'] == species]\n    fig, ax = plt.subplots(figsize=(5,5)) \n    sns.heatmap(data1[[\"Weight\", \"SL\", \"FL\", \"TL\", \"BD\", \"BT\",]].corr(), annot = True)\n    plt.title(\"Correlation heat map of {} \".format(species))\n    plt.show()","3fca8c55":"species_list = list(data['Species'].unique())\nfor s in species_list:\n    corr(s)","1817288b":"g = sns.pairplot(data, kind='scatter', hue='Species')\ng.fig.set_size_inches(10,10)","d81ca64a":"def detect_outliers(df,features):\n    outlier_indices = []\n    \n    for c in features:\n        # 1st quartile\n        Q1 = np.percentile(df[c],25)\n        # 3rd quartile\n        Q3 = np.percentile(df[c],75)\n        # IQR\n        IQR = Q3 - Q1\n        # Outlier step\n        outlier_step = IQR * 1.5\n        # detect outlier and their indeces\n        outlier_list_col = df[(df[c] < Q1 - outlier_step) | (df[c] > Q3 + outlier_step)].index\n        # store indeces\n        outlier_indices.extend(outlier_list_col)\n    \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i, v in outlier_indices.items() if v > 2)\n    \n    return multiple_outliers","bf080b64":"data.loc[detect_outliers(data,[\"Weight\", \"SL\", \"FL\", \"TL\", \"BD\", \"BT\"])]","d3ba3f02":"df_pike = data[data['Species'] == 'Pike']\ndf_pike.loc[detect_outliers(df_pike,[\"Weight\", \"SL\", \"FL\", \"TL\", \"BD\", \"BT\"])]","b6d03a5b":"species_list = list(data['Species'].unique())\nprint(species_list)","70fda000":"df_s = data[data['Species'] == 'Bream']\ndf_s.loc[detect_outliers(df_s,[\"Weight\", \"SL\", \"FL\", \"TL\", \"BD\", \"BT\"])]","e6673120":"df_s = data[data['Species'] == 'Roach']\ndf_s.loc[detect_outliers(df_s,[\"Weight\", \"SL\", \"FL\", \"TL\", \"BD\", \"BT\"])]","bdff4a07":"df_s = data[data['Species'] == 'Whitefish']\ndf_s.loc[detect_outliers(df_s,[\"Weight\", \"SL\", \"FL\", \"TL\", \"BD\", \"BT\"])]","4a114ee5":"df_s = data[data['Species'] == 'Parkki']\ndf_s.loc[detect_outliers(df_s,[\"Weight\", \"SL\", \"FL\", \"TL\", \"BD\", \"BT\"])]","4eade0df":"df_s = data[data['Species'] == 'Perch']\ndf_s.loc[detect_outliers(df_s,[\"Weight\", \"SL\", \"FL\", \"TL\", \"BD\", \"BT\"])]","f4c507da":"df_s = data[data['Species'] == 'Smelt']\ndf_s.loc[detect_outliers(df_s,[\"Weight\", \"SL\", \"FL\", \"TL\", \"BD\", \"BT\"])]","a6d1e51a":"data1 = data.drop([35, 54, 157,158])\ndata1.info()","ac852572":"data1.columns[data1.isnull().any()]","3c214f7e":"data1.head()","261d4e46":"df_bream = data1[data1['Species'] == 'Bream']\n\nfrom sklearn.linear_model import LinearRegression\n\nlinear_reg = LinearRegression()\n\nx = df_bream.TL.values.reshape(-1,1)\ny = df_bream.Weight.values.reshape(-1,1)\n\nlinear_reg.fit(x,y)\ny_head = linear_reg.predict(x)\n\nplt.scatter(df_bream.TL,df_bream.Weight)\nplt.plot(x,y_head,color= \"black\")\nplt.xlabel(\"Total Length\")\nplt.ylabel(\"Weight\")\nplt.show()","190dff91":"print('The weight of a 36 cm Bream is: ', linear_reg.predict([[36]]), 'grams')","a126c594":"y = df_bream['Weight'] # Dependant Var\nX = df_bream.iloc[:,[4,5]]","d47af6ac":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)","3a9b4f25":"print('Samples in the test and train datasets are:')\nprint('X_train: ', np.shape(X_train))\nprint('y_train: ', np.shape(y_train))\nprint('X_test: ', np.shape(X_test))\nprint('y_test: ', np.shape(y_test))","163d1cd3":"ML_reg = LinearRegression()\nML_reg.fit(X_train, y_train)","bdf6cde0":"print('y = ' + str('%.2f' % ML_reg.intercept_) + ' + ' + str('%.2f' % ML_reg.coef_[0]) + '*X1 ' + ' + ' + str('%.2f' % ML_reg.coef_[1]) + '*X2 ')","5f316bae":"print('The weight of a TL=31cm and BD=12cm Bream is: ', ML_reg.predict(np.array([[30,11.52]])), 'grams')","b9f0c7f6":"x = df_bream.TL.values.reshape(-1,1)\ny = df_bream.Weight.values.reshape(-1,1)\n\nlinear_reg.fit(x,y)\ny_head = linear_reg.predict(x)\n\nfrom sklearn.preprocessing import PolynomialFeatures\nPL_reg = PolynomialFeatures(degree = 2)\n\nx_polynomial = PL_reg.fit_transform(x)\n\nL_reg = LinearRegression()\nL_reg.fit(x_polynomial,y)\ny_head2 = L_reg.predict(x_polynomial)","f2595315":"plt.scatter(df_bream.TL,df_bream.Weight)\nplt.plot(x,y_head,color= \"orange\")\nplt.plot(x,y_head2,color= \"green\")\nplt.xlabel(\"Total Length\")\nplt.ylabel(\"Weight\")\nplt.show()","4a8a0790":"data1.head()","e5c9aad5":"x1 = data1.iloc[:,1].values.reshape(-1,1)\ny1 = data1.iloc[:,4].values.reshape(-1,1)\n\nfrom sklearn.tree import DecisionTreeRegressor\ntree_reg = DecisionTreeRegressor()\ntree_reg.fit(x1,y1)\n\nx1_ = np.arange(min(x1), max(x1), 0.01).reshape(-1,1)\ny1_head = tree_reg.predict(x1_)","e5dd02cb":"plt.scatter(x1,y1, color = \"red\")\nplt.plot(x1_,y1_head,color = \"green\")\nplt.xlabel(\"Total Length\")\nplt.ylabel(\"Weight\")\nplt.show()","41fe0f2d":"x2 = data1.iloc[:,1].values.reshape(-1,1)\ny2 = data1.iloc[:,4].values.reshape(-1,1)\n\nfrom sklearn.ensemble import RandomForestRegressor\nrf = RandomForestRegressor(n_estimators = 100, random_state = 42)\nrf.fit(x2,y2)\n\nx2_ = np.arange(min(x2),max(x2),0.01).reshape(-1,1)\ny2_head = rf.predict(x2_)\n\nplt.scatter(x2,y2,color = \"red\")\nplt.plot(x2_,y2_head,color = \"green\")\nplt.xlabel(\"Total Length\")\nplt.ylabel(\"Weight\")\nplt.show()","67736d37":"# Separate variables\ny = df_bream['Weight']\nX = df_bream.iloc[:,[4,5]]\n\n# Divide dataset for train and test\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)\n\n# Regression model\nML_reg = LinearRegression()\nML_reg.fit(X_train, y_train)\n\n#Predict weight values from train dataset\ny_head = ML_reg.predict(X_train)","fa76298e":"from sklearn.metrics import r2_score\nr2_score(y_train, y_head)","d2263737":"from sklearn.model_selection import cross_val_score\ncross_val_score_train = cross_val_score(ML_reg, X_train, y_train, cv=4, scoring='r2')\nprint(cross_val_score_train)","d867090f":"cross_val_score_train.mean()","b717bac0":"y_pred = ML_reg.predict(X_test)\nprint(r2_score(y_test, y_pred))","b4c96eb2":"plt.scatter(X_test['TL'], y_test, color='red', alpha=0.4) #Real data\nplt.scatter(X_test['TL'], y_pred, color='blue', alpha=0.4) #Predicted data\nplt.xlabel('Total Length in cm')\nplt.ylabel('Weight of the fish in grams')\nplt.title('Linear Regression Model for Weight Estimation');","f6404fc6":"# Separate variables\nyRF = data1.iloc[:,1].values.reshape(-1,1)\nXRF = data1.iloc[:,4].values.reshape(-1,1)\n\n# Divide dataset for train and test\nfrom sklearn.model_selection import train_test_split\nXRF_train, XRF_test, yRF_train, yRF_test = train_test_split(XRF, yRF, test_size=0.2, random_state=1)\n\n# Regression model\nfrom sklearn.ensemble import RandomForestRegressor\nrf = RandomForestRegressor(n_estimators = 100, random_state = 42)\nrf.fit(XRF_train,yRF_train)\n\n#Predict weight values from train dataset\nyRF_head = rf.predict(XRF_train)","89af0b60":"r2_score(yRF_train, yRF_head)","539f0651":"from sklearn.model_selection import cross_val_score\ncross_val_score_train = cross_val_score(rf, XRF_train, yRF_train, cv=10, scoring='r2')\nprint(cross_val_score_train)","9baa3586":"cross_val_score_train.mean()","bd8059de":"yRF_pred = rf.predict(XRF_test).reshape(-1,1)\nprint(r2_score(yRF_test, yRF_pred))","47c09838":"plt.scatter(XRF_test, yRF_test, color='red', alpha=0.4) #Real data\nplt.scatter(XRF_test, yRF_pred, color='blue', alpha=0.4) #Predicted data\nplt.xlabel('Total Length in cm')\nplt.ylabel('Weight of the fish in grams')\nplt.title('Random Forest Regression Model for Weight Estimation');","7960b095":"Lets check the model for a bream of which the TL=31 cm and BD=12 cm","c72ef977":"#### Average of Cross Validation","c644bc25":"No outliers in Bream","e566d8b0":"Lets visualize the difference between linear and polynomial regressions. There is a very slight difference in this study.","93da198f":"There are 2 outliers in Roach. I will drop these.","bb513923":"There are 2 outliers in Roach. I will drop these.","c01cc1e0":"It is obvious that the different lengths of fish are correlated. But our aim is to estimate the weigth of the fish from the other features. so the most important thing is the correlation of weigth with the other features. Weigth is correlated with all types of length as well as BT and BD.","06285571":"<a id = \"14\"><\/a><br>\n### Polinomial Lineer Regression\nIn this regression I will estimate the weight of Bream according to TL\n\nThe formula for this type of regression is:\n\ny = b0 + b1X^1 + b2X^2\n\ny: Dependent (Target) variable\n\nb0: constant\n\nb1,b2: coefficient\n\nX1,X2: Independent variables","4ef00c1b":"<a id = \"5\"><\/a><br>\n# BASIC DATA ANALYSIS","675def3d":"<a id = \"11\"><\/a><br>\n## Regression Models\nAs we analyzed above, the correlation of the features vary according to the species. So it is not logical to make a single regression model to fit on every fish species. We have to create different regression models for each species unless we can not make a close estimation.\n\nIn this study I will try to show you how to work with following regression models:\n* Lineer Regression\n* Multiple Lineer Regression\n* Polinomial Lineer Regression\n* Decision Tree Regression\n* Random Forest Regression\n* Evaluation Regression Models\n","0656c71b":"Let's analyze the features:\n\nIn order to understand the meanings of the features, we need to know about fish measurements. Following figures are explanatory.\n\n![1](http:\/\/fishionary.fisheries.org\/wp-content\/uploads\/2014\/04\/scup_lengths.png)\n(figure from: https:\/\/fishionary.fisheries.org\/wp-content\/uploads\/2014\/04\/scup_lengths.png; date accessed: 09.05.2020)\n\n![2](https:\/\/www.researchgate.net\/profile\/Harrison_Charo-Karisa\/publication\/40123354\/figure\/fig6\/AS:669473098977283@1536626233163\/Body-measurements-taken-on-each-fish-total-length-TL-standard-length-SL-body-depth_W640.jpg)\n(figure from: https:\/\/www.researchgate.net\/profile\/Harrison_Charo-Karisa\/publication\/40123354\/figure\/fig6\/AS:669473098977283@1536626233163\/Body-measurements-taken-on-each-fish-total-length-TL-standard-length-SL-body-depth_W640.jpg; date accessed: 09.05.2020)\n","d2b975f0":"<a id = \"16\"><\/a><br>\n### Random Forest Regression\nThis regression model is similar to Decision Tree. We will chose the number of trees to run estimation model.\n\nLets use the same data that I used for Decision Tree.","a348d231":"<a id = \"10\"><\/a><br>\n# MACHINE LEARNING\nI will use sklearn as ML library","90d0a826":"As you see, there are no outliers for Pike fish. The main reason of the difference is there are 7 different species in the data and each has different body sizes. So we should check for outliers for each spesies.","0c7b718a":"#### Cross Validation","f03f7876":"Now lets find out the missing constant (b0) and coefficient (b1,b2) values of the formula given above.","3e4e98f8":"## Individual Fish Weight Estimation from Body Size\n<font color = 'blue'>\nContent:\n\n1. [LOAD AND CHECK DATA](#1)\n1. [VARIABLE DESCRIPTION](#2)\n    * [Categorical Variable](#3)\n    * [Numerical Variable](#4)\n1. [BASIC DATA ANALYSIS](#5)\n1. [OUTLIER DETECTION](#6)\n1. [MISSING VALUE](#8)\n    * [Find Missing Value](#8)\n    * [Fill Missing Value](#8)\n1. [VISUALIZATION](#9)\n1. [MACHINE LEARNING](#10)\n    1. [Regression Models](#11)\n        1. [Lineer Regression](#12)\n        1. [Multiple Lineer Regression](#13)\n        1. [Polinomial Lineer Regression](#14)\n        1. [Decision Tree Regression](#15)\n        1. [Random Forest Regression](#16)\n    1. [Evaluation Regression Models](#17)\n1. [CONCLUSION](#18)","68207da6":"### Evaluation of Random Forest Regression Model","feaa253c":"No outliers in Parkki","9f6d1ac2":"Only the Species feature is object and the others are float.\nIt is also seen that there are no missing values. Lets double check it","7ccb7a7a":"#### Cross Validation","f16c1655":"<a id = \"8\"><\/a><br>\n# Missing Value\n    * Find Missing Value\n    * Fill Missing Value","1be7836e":"<a id = \"17\"><\/a><br>\n### Evaluation Regression Models\nLets evaluate the models and see how trustworthy they are. ","03f709b8":"<a id = \"3\"><\/a><br>\n## Categorical Variables\n* Species","1354e62c":"#### Average of Cross Validation","dce06261":"### Visualize the predictions","5d1206b2":"There are no missing values. So we don't need to fill the missing data. If you are keen to learn about how to fill the missing values, you can check my other kernels here\n\nhttps:\/\/www.kaggle.com\/albatros1602\/albatros-titanic-eda\/edit\/run\/32433379","989e1412":"#### Analyze the success of the model","fc36fa79":"#### Predict weights by means of test dataset","4328a1d0":"<a id = \"15\"><\/a><br>\n### Decision Tree Regression\nThis model splits the data into leaves and makes regression for each leaf","587fc98d":"<a id = \"12\"><\/a><br>\n### Lineer Regression\nIn this model I will estimate the weight of Bream from TL.\nThe formula for this type of regression is:\n\ny = b0 + b1*x","04c25218":"<a id = \"2\"><\/a><br>\n# VARIABLE DESCRIPTION\n\n1. Species: The species of fish\n1. Weight: Weight of fish is grams\n1. SL: Standard length of fish in cm\n1. FL: Fork length of fish in cm\n1. TL: Total length of fish in cm\n1. BD: Body depth (height) of fish in cm\n1. BT: Body thickness (width) of fish in cm\n","a14ca9d3":"<a id = \"18\"><\/a><br>\n# Conclusion\n\nFor this dataset, linear regression models fit very well as long as the dataset is divided into species. Otherwise the data of Pike (which is a bigger fish) or Smelt (which is a smaller fish) will lead the model to a false prediction. \n\nOn the other hand rnadom forest regression model splits the data and make predictions from the data located at each leaf, and gives a better result.\n\nYou can try the models with different species or different features and compare the results.\n\nI hope you enjoy it. Your comments are appreciated.\n\nIhsan\n\nTo make this study I got inspired from:\n\nhttps:\/\/www.kaggle.com\/akdagmelih\/multiplelinear-regression-fish-weight-estimation\n\nhttps:\/\/www.kaggle.com\/kanncaa1\/dataiteam-titanik-eda\n\nhttps:\/\/www.kaggle.com\/kanncaa1\/machine-learning-tutorial-for-beginners","a6cfaff1":"### Visualize the predictions","8b6a8bc8":"Does the heat map change according to the species of fish?","72a94e9e":"<a id = \"1\"><\/a><br>\n# LOAD AND CHECK DATA","ed65796e":"Index number 142, 143 and 144 are the outliers of this data. We may think about dropping these lines. But before that I will divide the data I will take only the Pike fish and check for the outliers again.","45bf72e7":"<a id = \"13\"><\/a><br>\n### Multiple Lineer Regression\n\nIn this regression I will estimate the weight of Bream according to TL and BD\n\nThe formula for this type of regression is:\n\ny = b0 + b1*x1 + b2*x2\n\ny: Dependent (Target variable\n\nb0: constant\n\nb1,b2: coefficient\n\nX1,X2: Independent variables\n","78ce8bc6":"Now we can continue to analize the data","7c453769":"### Divide Data into Train and Test Data","c6f58168":"<a id = \"9\"><\/a><br>\n# Visualization\nIn this kernel I'll not get deep in data visualization. In order to understand the relations between the features of the dataset we usse some visualization tools. If you are keen to learn about how to visualise the data, you can check my other kernels here \n\nhttps:\/\/www.kaggle.com\/albatros1602\/albatros-titanic-eda\/edit\/run\/32433379\n\nhttps:\/\/www.kaggle.com\/albatros1602\/visualization-for-hearth-disease-prediction\n\nhttps:\/\/www.kaggle.com\/albatros1602\/a-quick-comparison-of-covid-19-cases-in-nyc-vs-la\n","8a686444":"I will use the same data that we used for linear regression","22cfc242":"As seen in the figures above biological measurements of a fish and the coreesponding feature in the data are listed below:\n(Actually there is not enough explanations about the length1, length2 and length3 features of the data, but they are assumed as listed)\n* SL: Standard Length---Length1\n* FL: Fork Length--------Length2\n* TL: Total Length-------Length3\n* BT: Body Thickness----Height\n* BD: Body Depth--------Width\n\nNow I change the column names according to the explanation","5b58d151":"<a id = \"4\"><\/a><br>\n## Numerical Variables\n* Weight\n* SL\n* FL\n* TL\n* BD\n* BT","a862b279":"### Separate Dependant and Independant Variables","c957bd16":"### Evaluation of Multiple Linear Regression Model ","8beb2190":"<a id = \"6\"><\/a><br>\n# OUTLIER DETECTION","8cf74b8c":"No outliers in Perch","3b5abf21":"Lets check the model for a bream of which the TL=36 cm","04d8edbe":"No outliers in Whitefish","0348615b":"#### Predict weights by means of test dataset","7b91c9e0":"#### Analyze the success of the model","605505d5":"Correlation of the features:"}}