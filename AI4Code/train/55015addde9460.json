{"cell_type":{"369f0131":"code","03b9da36":"code","1f5f19f3":"code","20c92be7":"code","92e54253":"code","930f1f38":"code","1ee06647":"code","6b91afe6":"code","8bab07cd":"code","13885380":"code","b1402cce":"code","39727f63":"code","a4cda193":"code","e567a5ed":"markdown","40ad5f04":"markdown","6e8162f0":"markdown","d1e22cc0":"markdown","915da705":"markdown","435f8023":"markdown","b4f0512a":"markdown","28b179b0":"markdown","23f0c2ca":"markdown"},"source":{"369f0131":"import pandas as pd\n\ntrain_dataform = pd.read_csv(\n    '\/kaggle\/input\/digit-recognizer\/train.csv',\n)\n\n# \u8a66\u3057\u306b\u4e2d\u8eab\u3092\u898b\u3066\u307f\u308b\ntrain_dataform.head()","03b9da36":"test_dataform = pd.read_csv(\n    '\/kaggle\/input\/digit-recognizer\/test.csv',\n)\n\n# \u4e2d\u8eab\u3092\u898b\u3066\u307f\u308b\ntest_dataform.head()","1f5f19f3":"# \u8a13\u7df4\u30c7\u30fc\u30bf\u304b\u3089\u6b63\u89e3\u30e9\u30d9\u30eb\u3092\u843d\u3068\u3059\ntrain_input_dataform = train_dataform.drop(['label'], axis=1)\ntrain_input_dataform.head()","20c92be7":"# \u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u30e9\u30d9\u30eb\u3060\u3051\u3092\u53d6\u3063\u3066\u304d\u3066\u6b63\u89e3\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3059\u308b\ntrain_output = train_dataform.label\ntrain_output.head()","92e54253":"from tensorflow.keras.utils import to_categorical\n\n# \u6b63\u89e3\u3092\u6570\u5b57\u304b\u3089 one-hot \u8868\u73fe\u306b\u5909\u63db\ntrain_output_onehot = to_categorical(train_output.values, num_classes=10)\ntrain_output_onehot","930f1f38":"# \u753b\u50cf\u3092\u8868\u793a\u3057\u3066\u307f\u308b\n%matplotlib inline\nimport matplotlib.pyplot as plt\n\nfig = plt.figure(figsize=(9, 15))\nfig.subplots_adjust(left=0, right=1, bottom=0, top=0.5, hspace=0.05, wspace=0.05)\n\nfor i in range(9):\n    ax = fig.add_subplot(1, 9, i + 1, xticks=[], yticks=[])\n    ax.set_title(str(train_output[i]))\n    # 28x28 \u306b reshape \u3057\u3066\u3084\u308b\u5fc5\u8981\u304c\u3042\u308b\n    ax.imshow(train_input_dataform.values[i].reshape(28, 28), cmap='gray')","1ee06647":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Activation, Input\nfrom tensorflow.keras.optimizers import Adam\n\nmodel = Sequential()\n\n# \u30b7\u30f3\u30d7\u30eb\u306b\u5168\u7d50\u5408\u30ec\u30a4\u30e4\u30fc\u3044\u304f\u3064\u304b\nmodel.add(Input(shape=(784, )))\nmodel.add(Dense(units=256, activation='relu'))\nmodel.add(Dense(units=100, activation='relu'))\nmodel.add(Dense(units=10, activation=\"softmax\"))\n\nmodel.compile(\n    loss='categorical_crossentropy',\n    optimizer=Adam(),\n    metrics=['accuracy']\n)\n\nmodel.fit(\n    train_input_dataform.values, \n    train_output_onehot,\n    batch_size=2000, \n    epochs=5, \n    verbose=1,\n)","6b91afe6":"from IPython.display import SVG\nfrom tensorflow.python.keras.utils.vis_utils import model_to_dot\n\nSVG(model_to_dot(model, show_shapes=True).create(prog='dot', format='svg'))","8bab07cd":"# \u8a13\u7df4\u30c7\u30fc\u30bf\u3067\u8a55\u4fa1\u3057\u3066\u307f\u308b\nmodel.evaluate(train_input_dataform.values, train_output_onehot)","13885380":"# \u9069\u5f53\u306b\u8a13\u7df4\u30c7\u30fc\u30bf\u3067predict\u3057\u3066\u4e2d\u8eab\u3092\u898b\u3066\u307f\u308b\nsample_results = model.predict(train_input_dataform, batch_size=10000)\nsample_results","b1402cce":"import numpy as np\n\n# \u4e88\u6e2c\nresults = model.predict(test_dataform, batch_size=10000)\n\n# np.array \u306b\u5909\u63db\nresults_nparray = np.array([np.argmax(result) for result in results])\nresults_nparray","39727f63":"submit_dataframe = pd.DataFrame({\n    'ImageId': pd.array(range(1, 28001)), # ImageId \u306f1\u59cb\u307e\u308a\u3089\u3057\u3044\n    'Label': results_nparray\n})\nsubmit_dataframe.head()","a4cda193":"submit_dataframe.to_csv('submission.csv', index=False)","e567a5ed":"## \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3067\u4e88\u6e2c","40ad5f04":"### \u8a66\u3057\u306b\u753b\u50cf\u3092\u8868\u793a","6e8162f0":"## \u7d50\u679c\u3092\u6574\u5f62","d1e22cc0":"\u30e2\u30c7\u30eb\u3092\u56f3\u3067\u8868\u793a\u3057\u3066\u307f\u308b","915da705":"### \u30e2\u30c7\u30eb\u306e\u78ba\u8a8d","435f8023":"## \u5b66\u7fd2","b4f0512a":"### \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf","28b179b0":"## \u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\n\n### \u8a13\u7df4\u30c7\u30fc\u30bf","23f0c2ca":"## \u30c7\u30fc\u30bf\u306e\u6574\u5f62"}}