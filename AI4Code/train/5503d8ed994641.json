{"cell_type":{"577c561e":"code","1cd28e39":"code","6e2a9154":"code","cb2ef25f":"code","151eff2d":"code","a44752a0":"code","9e69c581":"code","4373a478":"code","4d5755ae":"code","499891bb":"code","ef00b6c8":"code","1f6fa815":"code","16d7a1d2":"code","a55743e9":"code","bb3eab48":"code","f64b6c17":"code","7c545204":"code","45489bf9":"code","88abab09":"code","66804508":"code","fae317a8":"code","c35406c9":"markdown","a0cc72e0":"markdown","464ac7fa":"markdown"},"source":{"577c561e":"# install pycaret\n!pip install pycaret","1cd28e39":"# import libraries\nimport pandas as pd\nimport numpy as np","6e2a9154":"# read csv data\ndata = pd.read_csv('..\/input\/telco-customer-churn\/WA_Fn-UseC_-Telco-Customer-Churn.csv')\ndata.head()","cb2ef25f":"# check data types\ndata.dtypes","151eff2d":"# replace blanks with np.nan\ndata['TotalCharges'] = data['TotalCharges'].replace(' ', np.nan)\ndata.isnull().sum()","a44752a0":"# convert to float64\ndata['TotalCharges'] = data['TotalCharges'].astype('float64')\ndata.info()","9e69c581":"!pip install pandas-profiling","4373a478":"from pandas_profiling import ProfileReport\nprofile = ProfileReport(data, title=\"EDA Report\")\nprofile","4d5755ae":"# check missing values\ndata.isnull().sum()","499891bb":"round(data.Churn.value_counts()*100 \/ len(data),2)","ef00b6c8":"categorical = []\nfor i in data.columns:\n    if (data[i].dtype=='object'):\n        categorical.append(i)\nprint(\"Categorical Attribute : {}\\n \".format(len(categorical)))\nfor x in range(len(categorical)): \n    print(categorical[x])","1f6fa815":"data[categorical].nunique()","16d7a1d2":"for i in categorical[1:]:\n    print(i)\n    print(data[i].unique())\n    print(\"\\n\")","a55743e9":"# init setup\nfrom pycaret.classification import *\ntelecom = setup(data, target = 'Churn', ignore_features = ['customerID'],\n                ordinal_features = {'Contract' : ['Month-to-month' ,'One year', 'Two year']},\n                fix_imbalance = True,\n               transformation = True,#Transformation changes the shape of the distribution such that the transformed data can be represented by normal distribution\n                  normalize = True, #rescale the values of numeric columns\n                  handle_unknown_categorical = True, \n                  unknown_categorical_method = 'most_frequent',\n                  remove_multicollinearity = True, #rop one of the two features that are highly correlated with each other\n                  ignore_low_variance = True,#all categorical features with statistically insignificant variances are removed from the dataset.\n                  combine_rare_levels = True,# all levels in categorical features below the threshold defined in rare_level_threshold param are combined together as a single level\n                numeric_imputation='median',\n                categorical_imputation='mode',)","bb3eab48":"ada= create_model('ada')","f64b6c17":"print(ada)","7c545204":"tuned_ada = tune_model(ada,optimize = 'MCC') #tuned on MCC","45489bf9":"evaluate_model(tuned_ada) #Graphical plot ","88abab09":"predict_model(tuned_ada)# Test data evaluation ","66804508":"final_ada = finalize_model(tuned_ada) # Final model \nfinal_ada","fae317a8":"predict_model(final_ada)#final test model evaluation ","c35406c9":"# Exploratory Data Analysis","a0cc72e0":"# Missing Values","464ac7fa":"# Data Preparation"}}