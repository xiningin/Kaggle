{"cell_type":{"80e59bbb":"code","0dd913c3":"code","ebf77a40":"code","0f9f47bf":"code","452f3fb7":"code","4f65aee8":"code","f135796b":"code","44e07aed":"code","d1f62586":"code","43ae5863":"code","3ed38b3d":"code","db3ad12b":"code","3123a277":"code","7fa30696":"code","74a6eb5b":"code","1dc0d534":"code","2990d3f8":"code","0c407d95":"code","cd54ba56":"code","48a1590a":"code","63e8a6c5":"code","91eab7bd":"code","1ee739cc":"code","155229be":"code","5e55ee15":"code","554ad247":"code","002286c2":"code","73446321":"code","8d44184b":"code","e6e23f0d":"code","59f52c6f":"code","88914890":"code","c17ebc93":"code","4bce65d2":"code","142a88be":"code","14a0c64c":"code","283dee84":"code","4a95ab81":"code","313be0f6":"code","5627a890":"code","ea6db2df":"code","36128c29":"code","b4af12a6":"code","142e6846":"code","5dfc3978":"code","629e1385":"code","bd7c000f":"code","7bbd179e":"code","e88ce288":"code","c168d884":"code","cf35332d":"code","36f6f151":"code","c9778ef3":"code","93604bc5":"code","6254a4aa":"code","815c29c2":"code","138f6add":"code","28003c42":"code","72bbaa58":"code","dc94f503":"code","a3c07e26":"code","680d9f2c":"code","fe0a8332":"code","777d26bb":"code","4ba85666":"code","e45a3944":"code","af6c5afd":"code","6501e043":"code","81872add":"code","03a7f30d":"code","a6ed1a74":"code","9d2d838b":"code","9834b08e":"code","d81a739d":"code","40cf4ced":"code","73b8f037":"code","416d5bdc":"code","53408dae":"code","44cb73e6":"code","d9cbc7d2":"code","f4756559":"code","9b7aca4b":"code","fe445c62":"code","ae84bf18":"code","3b73623b":"code","7045bb68":"code","ca34c2ec":"code","9be5a055":"code","8f082859":"code","4a1f7161":"code","30192b7e":"code","1228e45e":"code","00e66e59":"code","3e96f29a":"code","e2d90141":"code","daeeadb3":"code","a86b5b1f":"code","c51158a0":"code","27e1cc4d":"code","c712fba1":"code","69c8c086":"code","e40dfb0f":"code","6ca4fda2":"code","3e22d302":"code","48012d26":"code","c44dc22f":"code","8ad1f6bf":"code","71dd7352":"code","97c19226":"code","b13dcb54":"code","78a232ff":"code","cbc219d5":"code","80c3c583":"code","f02ab689":"code","ef13ee81":"code","d50435da":"code","0ff077fa":"code","544984f3":"code","23a32392":"code","2a448022":"code","6937c22a":"code","fb2b25f8":"code","01f4b3b7":"code","1db059ca":"code","2a439e1a":"code","abf18d47":"code","e19db2b6":"code","5a21d454":"code","40c48b81":"code","7d92566c":"code","4692fde0":"code","3fa5de9b":"code","ed8c0070":"code","305347b9":"code","e7f11b47":"code","135e8834":"code","fdd85c9c":"code","dfc005fe":"code","333f9e38":"code","f5114c00":"code","6eb28996":"code","af289d58":"code","f801d89b":"code","8982f4b9":"markdown","42ddd2ff":"markdown","8a8b9a53":"markdown","8a32c99c":"markdown","8bdfef00":"markdown","219f3bce":"markdown","e539caf9":"markdown","8d26dd70":"markdown","9855dfb8":"markdown","bc35e03b":"markdown","848768df":"markdown","d2560083":"markdown","6e89d0e3":"markdown","6356af41":"markdown","92d67d26":"markdown","f9d8ae92":"markdown","ddb836c6":"markdown","a0ffd470":"markdown","266bdfb7":"markdown","0980417c":"markdown","aaa6105d":"markdown","029307f7":"markdown","18b10160":"markdown","1452c10a":"markdown","f0238d3d":"markdown"},"source":{"80e59bbb":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","0dd913c3":"train = pd.read_csv(\"\/kaggle\/input\/loan-prediction-analytics-vidhya\/train_ctrUa4K.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/loan-prediction-analytics-vidhya\/test_lAUu6dG.csv\")","ebf77a40":"print(\"Train Shape :\", train.shape)\nprint(\"Test Shape  :\", test.shape)","0f9f47bf":"train.head()","452f3fb7":"test.head()","4f65aee8":"train.isnull().sum()","f135796b":"test.isnull().sum()","44e07aed":"sns.heatmap(train.isnull())","d1f62586":"sns.heatmap(test.isnull())","43ae5863":"train.describe()","3ed38b3d":"test.describe()","db3ad12b":"train.info()","3123a277":"test.info()","7fa30696":"train['Loan_Status'].value_counts()","74a6eb5b":"sns.countplot(train['Loan_Status'])\nplt.grid()\nplt.show()","1dc0d534":"loan_status_map = {'Y':1,'N':0}\ntrain['Loan_Status'] = train['Loan_Status'].map(loan_status_map)","2990d3f8":"train.head()","0c407d95":"train.info()","cd54ba56":"train['Gender'].value_counts()","48a1590a":"sns.countplot(train['Gender'])\nplt.grid()","63e8a6c5":"test['Gender'].value_counts()","91eab7bd":"print(sns.countplot(test['Gender']))\nplt.grid()","1ee739cc":"Gender_vs_LoanStatus = pd.crosstab(train.Gender, train.Loan_Status)\nGender_vs_LoanStatus","155229be":"sns.countplot('Gender', data = train, hue = 'Loan_Status')\nplt.grid()\nplt.show()","5e55ee15":"print(\"Train Data Null Values:\", train['Gender'].isnull().sum())\nprint(\"Test Data Null Values :\",test['Gender'].isnull().sum() )","554ad247":"train['Gender'] = train['Gender'].fillna('Male')\ntest['Gender'] = test['Gender'].fillna('Male')","002286c2":"print(\"Train Data Null Values:\", train['Gender'].isnull().sum())\nprint(\"Test Data Null Values :\",test['Gender'].isnull().sum() )","73446321":"gender_map = {'Male':0,'Female':1}\ntrain['Gender'] = train['Gender'].map(gender_map)\ntest['Gender'] = test['Gender'].map(gender_map)","8d44184b":"train['Gender'].value_counts()","e6e23f0d":"test['Gender'].value_counts()","59f52c6f":"train['Married'].value_counts()","88914890":"sns.countplot(train['Married'])","c17ebc93":"test['Married'].value_counts()","4bce65d2":"sns.countplot(test['Married'])","142a88be":"Married_vs_LoanStatus = pd.crosstab(train.Married, train.Loan_Status)\nMarried_vs_LoanStatus","14a0c64c":"sns.countplot('Married', data = train, hue = 'Loan_Status')\nplt.grid()\nplt.show()","283dee84":"Married_vs_Gender = pd.crosstab(train.Married, train.Gender)\nMarried_vs_Gender","4a95ab81":"sns.countplot('Married', data = train, hue = 'Gender')\nplt.grid()","313be0f6":"print(\"Train Data Null Values:\", train['Married'].isnull().sum())\nprint(\"Test Data Null Values :\",test['Married'].isnull().sum() )","5627a890":"train['Married'][train['CoapplicantIncome']==0.0] = train['Married'].fillna('No')","ea6db2df":"train['Married'] = train['Married'].fillna('Yes')","36128c29":"train['Married'].isnull().sum()","b4af12a6":"married_map = {'Yes':1,'No':0}\ntrain['Married'] = train['Married'].map(married_map)\ntest['Married'] = test['Married'].map(married_map)","142e6846":"train['Married'].value_counts()","5dfc3978":"test['Married'].value_counts()","629e1385":"train['Dependents'].value_counts()","bd7c000f":"sns.countplot(train['Dependents'])\nplt.grid()","7bbd179e":"test['Dependents'].value_counts()","e88ce288":"sns.countplot(test['Dependents'])\nplt.grid()","c168d884":"Dependents_vs_LoanStatus = pd.crosstab(train.Dependents, train.Loan_Status)\nDependents_vs_LoanStatus","cf35332d":"sns.countplot('Dependents', data = train, hue = 'Loan_Status')\nplt.grid()","36f6f151":"Dependents_vs_Married = pd.crosstab(train.Dependents, train.Married)\nDependents_vs_Married","c9778ef3":"sns.countplot('Dependents', data = train, hue = 'Married')\nplt.grid()","93604bc5":"dependent_map = {'0':0,'1':1,'2':2,'3+':3}\ntrain['Dependents'] = train['Dependents'].map(dependent_map)\ntest['Dependents'] = test['Dependents'].map(dependent_map)","6254a4aa":"print(\"Train Data Null Values:\", train['Dependents'].isnull().sum())\nprint(\"Test Data Null Values :\",test['Dependents'].isnull().sum() )","815c29c2":"train['Dependents'] = train['Dependents'].fillna(0.0)\ntest['Dependents'] = test['Dependents'].fillna(0.0)","138f6add":"print(\"Train Data Null Values:\", train['Dependents'].isnull().sum())\nprint(\"Test Data Null Values :\",test['Dependents'].isnull().sum() )","28003c42":"train['Education'].value_counts()","72bbaa58":"sns.countplot(train['Education'])\nplt.grid()","dc94f503":"test['Education'].value_counts()","a3c07e26":"sns.countplot(test['Education'])\nplt.grid()","680d9f2c":"Education_vs_LoanStatus = pd.crosstab(train.Education, train.Loan_Status)\nEducation_vs_LoanStatus","fe0a8332":"sns.countplot('Education', data = train, hue = 'Loan_Status')\nplt.grid()","777d26bb":"Education_map = {'Graduate':1,'Not Graduate':0}\ntrain['Education'] = train.Education.map(Education_map)\ntest['Education'] = test['Education'].map(Education_map)","4ba85666":"train['Education'].value_counts()","e45a3944":"test['Education'].value_counts()","af6c5afd":"print(\"Train Data Null Values:\", train['Education'].isnull().sum())\nprint(\"Test Data Null Values :\",test['Education'].isnull().sum() )","6501e043":"train['Self_Employed'].value_counts()","81872add":"sns.countplot(train.Self_Employed)\nplt.grid()","03a7f30d":"test['Self_Employed'].value_counts()","a6ed1a74":"sns.countplot(test.Self_Employed)","9d2d838b":"Self_Employed_vs_LoanStatus = pd.crosstab(train.Self_Employed, train.Loan_Status)\nSelf_Employed_vs_LoanStatus","9834b08e":"sns.countplot('Self_Employed', data = train, hue = 'Loan_Status')\nplt.grid()","d81a739d":"Self_Employed_vs_Gender = pd.crosstab(train.Self_Employed, train.Gender)\nSelf_Employed_vs_Gender","40cf4ced":"sns.countplot('Self_Employed', data = train, hue = 'Gender')\nplt.grid()","73b8f037":"print(\"Train Data Null Values:\", train['Self_Employed'].isnull().sum())\nprint(\"Test Data Null Values :\",test['Self_Employed'].isnull().sum() )","416d5bdc":"train['Self_Employed'] = train['Self_Employed'].fillna('No')\ntest['Self_Employed'] = test['Self_Employed'].fillna('No')","53408dae":"print(\"Train Data Null Values:\", train['Self_Employed'].isnull().sum())\nprint(\"Test Data Null Values :\",test['Self_Employed'].isnull().sum() )","44cb73e6":"Self_Employed_map = {'Yes':1,'No':0}\ntrain['Self_Employed'] = train['Self_Employed'].map(Self_Employed_map)\ntest['Self_Employed'] = test['Self_Employed'].map(Self_Employed_map)","d9cbc7d2":"train.Self_Employed.value_counts()","f4756559":"test.Self_Employed.value_counts()","9b7aca4b":"train.info()","fe445c62":"sns.boxplot(y = 'ApplicantIncome', data = train)","ae84bf18":"ax = sns.boxplot(x = 'Loan_Status', y = 'ApplicantIncome', data = train)","3b73623b":"ax = sns.boxplot(x = 'Education', y = 'ApplicantIncome', data = train)","7045bb68":"sns.distplot(train.ApplicantIncome)","ca34c2ec":"sns.boxplot(y = 'CoapplicantIncome', data =train)","9be5a055":"ax = sns.boxplot(x = 'Loan_Status', y = 'CoapplicantIncome', data = train)","8f082859":"ax = sns.boxplot(x = 'Dependents', y = 'CoapplicantIncome',data = train)","4a1f7161":"sns.distplot(train.CoapplicantIncome)","30192b7e":"sns.distplot(train.LoanAmount)","1228e45e":" ax = sns.boxplot(x = 'Loan_Status', y = 'LoanAmount', data = train)","00e66e59":"sns.boxplot(x = 'Education', y = 'LoanAmount', data = train)","3e96f29a":"print(\"Train Data Null Values:\", train['LoanAmount'].isnull().sum())\nprint(\"Test Data Null Values :\",test['LoanAmount'].isnull().sum() )","e2d90141":"train['LoanAmount'] = train['LoanAmount'].fillna(train['LoanAmount'].mean())\ntest['LoanAmount'] = test['LoanAmount'].fillna(test['LoanAmount'].mean())","daeeadb3":"print(\"Train Data Null Values:\", train['Self_Employed'].isnull().sum())\nprint(\"Test Data Null Values :\",test['Self_Employed'].isnull().sum() )","a86b5b1f":"sns.distplot(train.Loan_Amount_Term)","c51158a0":"print(\"Train Data Null Values:\", train['Loan_Amount_Term'].isnull().sum())\nprint(\"Test Data Null Values :\",test['Loan_Amount_Term'].isnull().sum() )","27e1cc4d":"train['Loan_Amount_Term'] = train['Loan_Amount_Term'].fillna(train['Loan_Amount_Term'].mean())\ntest['Loan_Amount_Term'] = test['Loan_Amount_Term'].fillna(test['Loan_Amount_Term'].mean())","c712fba1":"print(\"Train Data Null Values:\", train['Loan_Amount_Term'].isnull().sum())\nprint(\"Test Data Null Values :\",test['Loan_Amount_Term'].isnull().sum() )","69c8c086":"train['Credit_History'].value_counts()","e40dfb0f":"sns.countplot(train.Credit_History)\nplt.grid()","6ca4fda2":"test['Credit_History'].value_counts()","3e22d302":"sns.countplot(test.Credit_History)\nplt.grid()","48012d26":"Credit_History_vs_LoanStatus = pd.crosstab(train.Credit_History, train.Loan_Status)\nCredit_History_vs_LoanStatus","c44dc22f":"sns.countplot(x = 'Credit_History', data = train, hue = 'Loan_Status')","8ad1f6bf":"Credit_History_vs_Loan_Amount_Term = pd.crosstab(train.Loan_Amount_Term, train.Credit_History)\nCredit_History_vs_Loan_Amount_Term","71dd7352":"print(\"Train Data Null Values:\", train['Credit_History'].isnull().sum())\nprint(\"Test Data Null Values :\",test['Credit_History'].isnull().sum() )","97c19226":"train['Credit_History'] = train['Credit_History'].fillna(1.0)\ntest['Credit_History']  = test['Credit_History'].fillna(1.0)","b13dcb54":"print(\"Train Data Null Values:\", train['Credit_History'].isnull().sum())\nprint(\"Test Data Null Values :\",test['Credit_History'].isnull().sum() )","78a232ff":"train['Property_Area'].value_counts()","cbc219d5":"sns.countplot(train.Property_Area)\nplt.grid()","80c3c583":"test.Property_Area.value_counts()","f02ab689":"sns.countplot(test.Property_Area)\nplt.grid()","ef13ee81":"Property_Area_vs_loanStatus = pd.crosstab(train.Property_Area, train.Loan_Status)\nProperty_Area_vs_loanStatus","d50435da":"sns.countplot('Property_Area', data = train, hue = 'Loan_Status')\nplt.grid()","0ff077fa":"print(\"Train Data Null Values:\", train['Property_Area'].isnull().sum())\nprint(\"Test Data Null Values :\",test['Property_Area'].isnull().sum() )","544984f3":"Property_Area_map = {'Semiurban':0,'Urban':1,'Rural':2}\ntrain['Property_Area'] = train['Property_Area'].map(Property_Area_map)\ntest['Property_Area']  = test['Property_Area'].map(Property_Area_map)","23a32392":"train.Property_Area.value_counts()","2a448022":"test.Property_Area.value_counts()","6937c22a":"X_train = train.drop(['Loan_Status','Loan_ID'], axis = 1)\ny_train = train.Loan_Status\nX_test = test.drop('Loan_ID',axis = 1)","fb2b25f8":"X_train.shape","01f4b3b7":"y_train.shape","1db059ca":"X_test.shape","2a439e1a":"from sklearn.linear_model import LogisticRegression\nlog_Reg = LogisticRegression()\nlog_Reg.fit(X_train,y_train)\nlog_Reg.score(X_train,y_train)","abf18d47":"LR_pred = log_Reg.predict(X_test)","e19db2b6":"LR_pred","5a21d454":"from sklearn.tree import DecisionTreeClassifier\nDT_cls = DecisionTreeClassifier()\nDT_cls.fit(X_train,y_train)\nDT_cls.score(X_train, y_train)","40c48b81":"DT_pred = DT_cls.predict(X_test)","7d92566c":"DT_pred","4692fde0":"from sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier(n_estimators=100)\nrf.fit(X_train,y_train)\nrf.score(X_train,y_train)","3fa5de9b":"rf_pred = rf.predict(X_test)","ed8c0070":"rf_pred","305347b9":"from sklearn.neighbors import KNeighborsClassifier\nknn_cls = KNeighborsClassifier()\nknn_cls.fit(X_train, y_train)\nknn_cls.score(X_train, y_train)","e7f11b47":"knn_pred = knn_cls.predict(X_test)","135e8834":"knn_pred","fdd85c9c":"Submission_data = pd.read_csv(\"\/kaggle\/input\/loan-prediction-analytics-vidhya\/sample_submission_49d68Cx.csv\")\nSubmission_data","dfc005fe":"rf_pred","333f9e38":"Submission_data['Loan_Status'] = rf_pred","f5114c00":"Submission_data","6eb28996":"loan_status_map = {1:'Y',0:'N'}\nSubmission_data['Loan_Status'] = Submission_data['Loan_Status'].map(loan_status_map)","af289d58":"Submission_data","f801d89b":"Submission_data.Loan_Status.value_counts()","8982f4b9":"## Co_Applicant_Income","42ddd2ff":"## Loan Status","8a8b9a53":"#### Submission Data","8a32c99c":"Import Train Data and Test Data","8bdfef00":"## Gender","219f3bce":"## Property_Area","e539caf9":"## Dependents","8d26dd70":"## Import Required Lib","9855dfb8":"## Loan_Amount_Term","bc35e03b":"### Logistic Regression","848768df":"# Loan Prediction-Analytics Vidhya","d2560083":"## Loan_Amount","6e89d0e3":"### Random Forest","6356af41":"### Handling Miss values","92d67d26":"## Model Buliding ","f9d8ae92":"Understing the Data EDA ","ddb836c6":"## Self_Employed","a0ffd470":"## Credit_History","266bdfb7":"## Married","0980417c":"## Applicant_Income","aaa6105d":"### K-NN Model","029307f7":"## Education","18b10160":"### Decision Tree Model","1452c10a":"### Data Cleaning and Analysis, plotting Column wise","f0238d3d":"## Spliting the Data"}}