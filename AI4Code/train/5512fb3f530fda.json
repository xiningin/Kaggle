{"cell_type":{"cb4deea7":"code","694296bb":"code","4c7679b1":"code","3230f5da":"code","0eb250be":"code","dda47d16":"code","11b219d1":"code","908348fa":"code","779f6661":"code","83c427ac":"code","850527fc":"code","9e2eecf2":"code","afb267a6":"code","e25b3b0c":"code","c95e3ee4":"code","2fe3b0a2":"code","6c035ca8":"code","087db3e2":"code","df92578c":"code","c0c8f3c6":"code","49783c20":"code","c580c53f":"code","a3f3e0a7":"code","129edcf1":"code","d2fb5dde":"code","140cab77":"code","6513f183":"code","09135e73":"code","1ce1c010":"code","ea3c3596":"markdown","4df74031":"markdown","c06b4237":"markdown","c0bb4b30":"markdown","1b9b074e":"markdown","8269606e":"markdown","bc443965":"markdown","10181dfb":"markdown","6423a774":"markdown","e03be830":"markdown","f3c73fc5":"markdown","a2bba98f":"markdown","f47427da":"markdown","6d034d82":"markdown","e9e8aa72":"markdown"},"source":{"cb4deea7":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","694296bb":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","4c7679b1":"from fastai import *\nfrom fastai.vision import *\nfrom fastai.callbacks.hooks import *\nimport matplotlib.pyplot as plt","3230f5da":"path = Path('\/kaggle\/input\/cell-images-for-detecting-malaria\/cell_images')\npath","0eb250be":"path.ls()","dda47d16":"k = path\/'cell_images'\nk.ls()","11b219d1":"imglist = ImageList.from_folder(k)","908348fa":"print(len(imglist.items))\n\nprint(imglist[125].shape)\n\n\nprint(imglist[120].shape)","779f6661":"np.random.seed(20)\n\nsrc = imglist.split_by_rand_pct(0.2).label_from_folder()","83c427ac":"tfms = get_transforms(flip_vert= True, max_warp= 0)\ndata = (src.transform(tfms, size = 128).databunch(bs = 16).normalize(imagenet_stats))","850527fc":"data.show_batch(rows = 3, figsize= (15,11))","9e2eecf2":"print(f\"\"\"names of the classes in the data are: {data.classes}\\n\n        Size of the training set is: {data.train_ds}\\n\n        Size of the validation set is: {data.valid_ds}\\n\n        \"\"\")","afb267a6":"learn = create_cnn(data, models.resnet34, metrics = accuracy, model_dir = '\/kaggle\/working\/')","e25b3b0c":"learn.lr_find()","c95e3ee4":"learn.recorder.plot()","2fe3b0a2":"learn.fit_one_cycle(4, slice(1e-3))","6c035ca8":"learn.save('stage-1')","087db3e2":"interp = ClassificationInterpretation.from_learner(learn)","df92578c":"interp.plot_confusion_matrix(figsize = (7,7), dpi = 60)","c0c8f3c6":"interp.plot_top_losses(9, figsize = (10,10))","49783c20":"learn.unfreeze()\n","c580c53f":"learn.lr_find()","a3f3e0a7":"learn.recorder.plot()","129edcf1":"learn.fit_one_cycle(3, max_lr= slice(1e-5, 1e-4))","d2fb5dde":"learn.save('stage -2')","140cab77":"interp = ClassificationInterpretation.from_learner(learn)","6513f183":"interp.plot_confusion_matrix(figsize = (8,8), dpi = 60)","09135e73":"interp.plot_top_losses(9, figsize = (10,10))","1ce1c010":"learn.show_results()","ea3c3596":"Using \"show_batch\" function we can see the sample images from the dataset.","4df74031":"An interpreter is created to show the losses and metrics of the learner","c06b4237":"Now, I have created a ImageList variable from that path, by using the function from_folder. This function searches the given path and its subfolders for the images and includes them in the variable.","c0bb4b30":"Using lr_find we can find the optimal learning rate to our model given the database.","1b9b074e":"This Kaggle dataset gives us the uninfected and parasitized images taken from blood samples. We will use these images to build a model to best classify these images.","8269606e":"As you can see from above there are different sizes for different images. So assigning a single size to all the images i necessary as we have to send them through the network.","bc443965":"Now, we can create a learner which takes images from the datablock \"data\" and uses resnet34 model. \n\nWe are intrested in the accuracy of the prediction. The model thus created is saved in the directory \"\/kaggle\/working\/","10181dfb":"# Malaria Detection Using Fastai Library","6423a774":"Now a training and validation set are created from this imagelist and they are divided at a ratio of 0.2 and the labels are selected from the folder names. A random seed is set so that a same validation set is selected every time.","e03be830":"The losses include wrong predictions and false negatives also, so we should fine tune the algorithm even more to get better validation accuracy.","f3c73fc5":"In this plot we can see that all of these losses are correctly predicted but labeled falsely. So this is a good model to classify parasitized and uninfected malaria samples.","a2bba98f":"Creating a path variable is important to locate the images. But as you can see below the cell_images folder has a sub folder which is also cell_images. this will create problems.\n\nSo, I have chosen the image directory as that sub folder which inturn consists of all the images in the dataset and stored it in \"k\".","f47427da":"Malaria parasites can be identified by examining under the microscope a drop of the patient's blood, spread out as a \u201cblood smear\u201d on a microscope slide. Prior to examination, the specimen is stained (most often with the Giemsa stain) to give the parasites a distinctive appearance. This technique remains the gold standard for laboratory confirmation of malaria. However, it depends on the quality of the reagents, of the microscope, and on the experience of the laboratorian.","6d034d82":"From the above graph, we can see that the loss is minimum at 1e-02. So, we can start the learning from one logarithmic place before it.\n\n\"fit_one_cycle\" function in Fastai is used for training the model for one cycle of learning rates. ","e9e8aa72":"The weights are unfreezed now, we can train those weights to get better acucracy."}}