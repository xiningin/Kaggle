{"cell_type":{"ab6978e5":"code","1f0bee62":"code","cf4d54d7":"code","46dd3edc":"code","41158a7e":"code","6a77a472":"code","348e48e3":"code","5ae676e8":"code","ddd3a8af":"code","fc80032a":"code","e05bf484":"code","f5a3c828":"code","c6e938cc":"code","c8555dee":"code","2c741f5d":"code","6fe42f47":"code","cb0bfd8b":"code","d10cc6ec":"code","7e20cb63":"code","ddf96c0c":"code","905543cf":"code","f38963b8":"code","43968430":"code","295c07b0":"code","e3ad487d":"code","da3a92e2":"code","528d22c4":"code","9e2b2ee1":"code","a556052f":"code","c223876d":"code","fa78b3e9":"code","6edab8c2":"code","4781f98e":"code","26b7788d":"code","8f5ff86f":"code","930cc7ba":"code","9459005e":"code","c4544804":"code","98650b42":"code","8c66e37e":"code","7d13a20e":"code","1f8aaee4":"code","aa857d30":"code","c5a4d73f":"code","281ab0f4":"code","2bf3289d":"markdown","5a7d9978":"markdown","ff5adb6c":"markdown","1d1c97f0":"markdown","e158d163":"markdown","1597e218":"markdown","a6c242e0":"markdown","72cce73a":"markdown","a38512ad":"markdown","600baee1":"markdown","fd1a8965":"markdown","598caf17":"markdown","681b6ef1":"markdown","b8347c48":"markdown"},"source":{"ab6978e5":"import pandas as pd\n\nimport numpy as np\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport seaborn as sns\n\nfrom datetime import datetime ","1f0bee62":"train_df = pd.read_csv('..\/input\/walmart-sales-prediction\/train.csv')\nstores_df = pd.read_csv('..\/input\/walmart-sales-prediction\/stores.csv')\nfeatures_df = pd.read_csv('..\/input\/walmart-sales-prediction\/features.csv')\ntest_df = pd.read_csv('..\/input\/walmart-sales-prediction\/test.csv')","cf4d54d7":"train_df.head()","46dd3edc":"train_df.info()","41158a7e":"train_df.describe()","6a77a472":"train_df.isnull().sum()","348e48e3":"test_df.head()","5ae676e8":"test_df.describe()","ddd3a8af":"test_df.isnull().sum()","fc80032a":"features_df.head(10)","e05bf484":"features_df.info()","f5a3c828":"features_df.describe()","c6e938cc":"features_df.isnull().sum()","c8555dee":"stores_df.head()","2c741f5d":"stores_df.isnull().sum()","6fe42f47":"dataset_m = features_df.merge(stores_df, how = 'inner', on = 'Store')\ndataset_m","cb0bfd8b":"dataset_m.head()","d10cc6ec":"dataset_m.info()","7e20cb63":"#CONVERTING DATE FROM OBJECT TO DATETIME \n\ndataset_m['Date'] = pd.to_datetime(dataset_m['Date'])\ntrain_df['Date'] = pd.to_datetime(train_df['Date'])\ntest_df['Date'] = pd.to_datetime(test_df['Date'])\n","ddf96c0c":"#EXTRACTING WEEK AND YEAR FROM THE DATA AND MAKE MAKE THEM INTO NEW COLUMNS\n\ndataset_m['week'] = dataset_m.Date.dt.isocalendar().week\ndataset_m['year'] = dataset_m.Date.dt.isocalendar().year\n","905543cf":"dataset_m.tail()","f38963b8":"train_df_1 = train_df.merge(dataset_m, how = 'inner', on = ['Store','Date','IsHoliday']).sort_values(by = ['Store','Dept','Date']).reset_index(drop = True)\ntrain_df_1","43968430":"train_df_1.head()","295c07b0":"def scatter(train_df_1,column):\n  \n  #plot the figure\n  plt.figure()\n\n  #plot the scatter plot with data from the specified column in x axis and weekly sales in y axis\n  plt.scatter(train_df_1[column],train_df_1['Weekly_Sales'])\n\n  #give y label as Weekly Sales\n  plt.ylabel('Weekly_Sales')\n\n  #give the x label as the column specified as parameter in the function\n  plt.xlabel(column)","e3ad487d":"#plot a scatter plot using the scatter function a scatter plot of weekly sales with respect to store\nscatter(train_df_1,'Store')","da3a92e2":"#plot a scatter plot using the scatter function a scatter plot of weekly sales with respect to department\nscatter(train_df_1,'Dept')","528d22c4":"#Filtering out mean weekly sales for the year 2010\nweekly_sales_2010 = train_df_1[train_df_1['year']==2010]['Weekly_Sales'].groupby(train_df_1['week']).mean()\n\n#Plot a line plot with week on x axis and sales for that particular week of the filtered year in y axis \nsns.lineplot(weekly_sales_2010.index, weekly_sales_2010.values, color = 'crimson')","9e2b2ee1":"#Filtering out mean weekly sales for the year 2011\nweekly_sales_2011 = train_df_1[train_df_1['year']==2011]['Weekly_Sales'].groupby(train_df_1['week']).mean()\n\n#Plot a line plot with week on x axis and sales for that particular week of the filtered year in y axis \nsns.lineplot(weekly_sales_2011.index, weekly_sales_2011.values, color = 'navy')","a556052f":"#Filtering out mean weekly sales for the year 2012\nweekly_sales_2012 = train_df_1[train_df_1['year']==2012]['Weekly_Sales'].groupby(train_df_1['week']).mean()\n\n#Plot a line plot with week on x axis and sales for that particular week of the filtered year in y axis \nsns.lineplot(weekly_sales_2012.index, weekly_sales_2012.values, color = 'darkgreen')","c223876d":"#plotting a figure\nplt.figure(figsize = (20,10))\n\n#plotting three lineplots for weekly sales for each year\nsns.lineplot(weekly_sales_2010.index, weekly_sales_2010.values, color = 'crimson')\nsns.lineplot(weekly_sales_2011.index, weekly_sales_2011.values, color = 'navy')\nsns.lineplot(weekly_sales_2012.index, weekly_sales_2012.values, color = 'darkgreen')\n\nplt.grid()\n\n#plot labels and legends\nplt.xticks(np.arange(1,60,step = 1))\nplt.title('Average weekly sales per year', fontsize = 22)\nplt.xlabel('week', fontsize = 18)\nplt.ylabel('sales', fontsize = 18)\nplt.legend(['2010','2011','2012'], fontsize = 18)","fa78b3e9":"sns.distplot(train_df_1['Weekly_Sales'], color = 'orangered')","6edab8c2":"train_df_1['Weekly_Sales'].kurt()\n\n#kutosis is a measure of whether the data is heavy-tailed or light-tailed to normal distribution","4781f98e":"weekly_sales_store = train_df_1['Weekly_Sales'].groupby(train_df_1['Store']).mean()\nweekly_sales_store","26b7788d":"weekly_sales_store.head()","8f5ff86f":"weekly_sales_store_df = pd.DataFrame(weekly_sales_store)","930cc7ba":"weekly_sales_store_df.sort_values('Weekly_Sales', ascending = False).style.bar(align = 'left', width = 98, color = 'cyan')","9459005e":"weekly_sales_store_df.sort_values('Weekly_Sales').style.bar(align = 'left', width = 98, color = 'cyan')","c4544804":"#plotting the figure\nplt.figure(figsize = (20,10))\n\n#create a barplot with stores in x axis and mean weekly sales in y axis \nsns.barplot(weekly_sales_store.index, weekly_sales_store.values, palette = 'bright')\nplt.grid()\nplt.title('Average weekly sales per store', fontsize = 22)\nplt.xlabel('Store Number', fontsize = 18)\nplt.ylabel('Sales per store', fontsize = 18) \n","98650b42":"weekly_sales_dept = train_df_1['Weekly_Sales'].groupby(train_df_1['Dept']).mean()","8c66e37e":"weekly_sales_dept_df = pd.DataFrame(weekly_sales_dept)","7d13a20e":"weekly_sales_dept_df.head()","1f8aaee4":"#Sorting the dataframe with respect to weekly sales in descending order\nweekly_sales_dept_df.sort_values('Weekly_Sales', ascending = False).style.bar(align = 'left', width = 98, color = 'lime')","aa857d30":"#plotting the figure\nplt.figure(figsize = (20,10))\n\n#create a barplot with department in x axis and mean weekly sales for each department in y axis \nsns.barplot(weekly_sales_dept.index, weekly_sales_dept.values, palette = 'bright')\nplt.grid()\nplt.title('Average weekly sales per department', fontsize = 22)\nplt.xlabel('Store Number', fontsize = 18)\nplt.ylabel('Sales per store', fontsize = 18) ","c5a4d73f":"#plotting the normal distribution where sales is greater than zero\ntrain_sales = train_df_1[train_df_1['Weekly_Sales'] > 0]\ntrain_lessthanzero = train_df_1[train_df_1['Weekly_Sales'] <= 0]\n\n#take natural log of data for sales more than zero \nsalesgreaterthanzero = np.log1p(train_sales['Weekly_Sales'])\n\nsns.distplot(salesgreaterthanzero)","281ab0f4":"plt.figure(figsize = (20,15))\nsns.heatmap(train_df_1.corr(), annot = True )","2bf3289d":"### 2) Line plots for weekly sales for each year","5a7d9978":"####Data Analysis and Visualization ","ff5adb6c":"### Creating a new dataframe by merging (inner) the train_df and newly merged dataframe dataset_m on store, date and isholiday columns and sorting the values by store, department and date","1d1c97f0":"## Visualizations","e158d163":"### 4) Histogram","1597e218":"Task is to analyze the sales of the walmart with the data given \n(Eg - analyzing weekly sales, which store or department sells most etc)","a6c242e0":"###Merging (inner) the features_df and stores_df on store","72cce73a":"### 3) Combined line plots for each year (2010,2011,2012) plotting the weekly sales for years 2010,2011,2012 on a single plot to compare the sales values with respect to week on each of these specified year ","a38512ad":"### 5) Bar chart on data frame","600baee1":"### Grouping the train_df_1 by department and computing the mean of weekly sales for each department ","fd1a8965":"### plotting a bar graph with store number as x values and mean weekly sales for that store as y values\n","598caf17":"### 1) Scatter Plot","681b6ef1":"### Heatmap","b8347c48":"### WALMART DATA ANALYSIS\n"}}