{"cell_type":{"76618a20":"code","e1d7e0a2":"code","c20775ac":"code","04b19d22":"code","e5ef1413":"code","80111da4":"code","0273526a":"code","23b6f482":"code","4bd3cc70":"code","8daf21ba":"code","e6c61015":"code","8dacfd76":"code","0d4c5890":"code","b0bc20a3":"code","dfaf5c01":"code","ad0e9d3c":"code","14669f77":"code","33d60ce0":"code","94ea232c":"code","a064008c":"code","3593c565":"code","9e4d0934":"code","1be64064":"code","5754939b":"code","3ba269fc":"code","fb896c62":"code","13338a3f":"code","fdb923cb":"code","32dfb7a9":"code","1250c35c":"code","1025afc0":"code","d8a47a28":"code","a4472e50":"code","1b520342":"code","dc1b97df":"code","ad84fb0c":"code","c09046eb":"code","296de777":"code","1c032215":"code","3e353114":"code","3cbbe325":"code","e19fe8ce":"code","48eb81d3":"code","d0239bf0":"code","1af18e55":"code","daea4e6f":"code","3c8352bf":"code","d92928cb":"code","e0c9da75":"code","f701defa":"code","668e26e6":"code","18a5ab56":"code","3c40d6b9":"code","f3a637ff":"code","b6f586d5":"code","86d51ee4":"code","2d53b5dd":"code","f11dc45c":"markdown"},"source":{"76618a20":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","e1d7e0a2":"df = pd.read_csv('..\/input\/dota2_2019_survey.csv')","c20775ac":"df.head(3)","04b19d22":"df.columns","e5ef1413":"age_coder= {'<13':0, '13-17':1, '18-20':2, '21-23':3, '24-26':4, '27-29':5, '30-35':6, \n            '36-40':7,'>40':8, '19-22':3, '23-29':4, '30-40':6}\ngender_coder= {'Female':0, 'Male':1, 'Prefer not to say':1, 'Other':1, 'Trans female':1, 'Trans-male':1}\nyears_dota2_coder= {\"I don't play\":0, '< 6 months':1, '6 months - 1 year':2, '1 - 3 years':3,\n                    '3 - 5 years':4, '5 - 10 years':5, '10+ years':6}\ngames_week_coder= {'0':0, '0 - 1 (play less than a game a week but still play)':1, '1 - 5':2, '6 - 10':3, \n                   '11 - 20':4, '20 - 30':5,  '30 - 40':6, '> 40':7}\nbadge_coder= {\"I'm not ranked.\":0, 'Herald':1, 'Guardian':2, 'Crusader':3, 'Archon':4, 'Legend':5,\n              'Ancient':6, 'Divine':7, 'Immortal':8}\ngame_mode_coder= {'All Pick\/Single Draft\/Random Draft\/':0,'All Pick\/Single Draft\/Random Draft':0, \n                  'Custom Games':1, 'Turbo':1, 'Captains Mode\/Captains Draft':1, 'Ability Draft':1}\nrole_coder= {'Mid':2, 'Carry':3, 'Support (4\/5)':0, 'Offlane':1}\nsubreddit_years_coder= {'<3 Months':0, '3 - 6 Months':1, '6 Months - 1 Year':2, '1 - 2 Years':3, '2 - 3 Years':4\n                        , '3+ Years':5,  '3 - 5 Years':5,  '+5 Years':6}\nsubreddit_check_coder= {'Only when something is happening (New Patch Drama, etc.)':0, 'Once a month or less':1, \n                        'Once a week':2, 'Once a day':3, 'Multiple times a day':4}\npost_freq_coder= {'Never':0, 'Seldom':1, 'Sometimes':2, 'Often':3, None:0}\ncomment_freq_coder= {'Never':0, 'Seldom':1, 'Sometimes':2, 'Often':3, None:0}\npatch_news_importance_coder= {'Very important':3, 'Sort of important':3, '4 = Very Important':3, '3':2,'2':1, '1 = Not Important':0}\nbug_reports_importance_coder= {'Very important':3, 'Sort of important':3, '4 = Very Important':3, '3':2,'2':1, '1 = Not Important':0}\nuser_created_content_coder= {'Very important':3, 'Sort of important':3, '4 = Very Important':3, '3':2,'2':1, '1 = Not Important':0}\neports_news_coder= {'Very important':3, 'Sort of important':3, '4 = Very Important':3, '3':2,'2':1, '1 = Not Important':0}\ngamplay_discuss_coder= {'Very important':3, 'Sort of important':3, '4 = Very Important':3, '3':2,'2':1, '1 = Not Important':0}\ngamplay_highlights_coder= {'Very important':3, 'Sort of important':3, '4 = Very Important':3, '3':2,'2':1, '1 = Not Important':0}\nguides_tips_coder= {'Very important':3, 'Sort of important':3, '4 = Very Important':3, '3':2,'2':1, '1 = Not Important':0}\ncomedy_posts_coder= {'Very important':3, 'Sort of important':3, '4 = Very Important':3, '3':2,'2':1, '1 = Not Important':0}\nrequests_suggestions_complaints_coder= {'Very important':3, 'Sort of important':3, '4 = Very Important':3, '3':2,'2':1, '1 = Not Important':0}\nsidebar_usage_coder= {'Never':0, 'Seldom':1, 'Sometimes':2, 'Often':3, None:0}\nrate_d2tournamentthreads_coder= {'Meh':0, None:1,'Okay':2, 'Like em':3, 'Love em':4}\nrate_competitive_hero_trends_coder= {'Meh':0, None:1,'Okay':2, 'Like em':3, 'Love em':4}\nrate_findbattlecupparty_coder= {'Meh':0, None:1,'Okay':2, 'Like em':3, 'Love em':4}\nrate_competitive_player_spotlights_coder= {'Meh':0, None:1,'Okay':2, 'Like em':3, 'Love em':4}\nrate_competitive_team_discussion_coder= {'Meh':0, None:1,'Okay':2, 'Like em':3, 'Love em':4}\nrate_hero_discussions_coder= {'Meh':0, None:1,'Okay':2, 'Like em':3, 'Love em':4}\nrate_item_discussions_coder= {'Meh':0, None:1,'Okay':2, 'Like em':3, 'Love em':4}\nrate_free_talk_threads_coder= {'Meh':0, None:1,'Okay':2, 'Like em':3, 'Love em':4}\nrate_news_megathreads_coder= {'Meh':0, None:1,'Okay':2, 'Like em':3, 'Love em':4}\nrate_this_week_learned_coder= {'Meh':0, None:1,'Okay':2, 'Like em':3, 'Love em':4}\nrate_stupid_questions_coder= {'Meh':0, None:1,'Okay':2, 'Like em':3, 'Love em':4}\nshow_case_badge_coder= {\"I don't care\":0, \"It shouldn't be done at all\":1, \n                        \"It should only be allowed for very high ranked players.\":2, \n                        \"It should be allowed for everyone\":3}\nfollow_dota_esports_coder= {\"I don't watch at all\":0, 'I only watch The International': 1, \n                            'I watch some events and the highlights for the ones I miss': 2, 'I follow only the major tournaments (more than just The International)': 3, \n                            'I watch nearly every event':4}","80111da4":"df['age_encoder']= df['age'].map(age_coder)\ndf['gender_encoder']= df['gender'].map(gender_coder)\ndf['years_dota2_encoder']= df['years_dota2'].map(years_dota2_coder)\ndf['games_week_encoder']= df['games_week'].map(games_week_coder)\ndf['badge_encoder']= df['badge'].map(badge_coder)\ndf['game_mode_encoder']= df['game_mode'].map(game_mode_coder)\ndf['role_encoder']= df['ingame_role'].map(role_coder)\ndf['subreddit_years_encoder']= df['subreddit_years'].map(subreddit_years_coder)\ndf['subreddit_check_encoder']= df['subreddit_check'].map(subreddit_check_coder)\ndf['post_freq_encoder']= df['post_freq'].map(post_freq_coder)\ndf['comment_freq_encoder']= df['comment_freq'].map(comment_freq_coder)\ndf['patch_news_importance_encoder']= df['patch_news_importance'].map(patch_news_importance_coder)\ndf['bug_reports_importance_encoder']= df['bug_reports_importance'].map(bug_reports_importance_coder)\ndf['user_created_content_encoder']= df['user_created_content_imp'].map(user_created_content_coder)\ndf['eports_news_encoder']= df['eports_news_imp'].map(eports_news_coder)\ndf['gamplay_discuss_encoder']= df['gamplay_discuss_imp'].map(gamplay_discuss_coder)\ndf['gamplay_highlights_encoder']= df['gamplay_highlights_imp'].map(gamplay_highlights_coder)\ndf['guides_tips_encoder']= df['guides_tips_imp'].map(guides_tips_coder)\ndf['comedy_posts_encoder']= df['comedy_posts_imp'].map(comedy_posts_coder)\ndf['requests_suggestions_complaints_encoder']= df['requests_suggestions_complaints_imp'].map(requests_suggestions_complaints_coder)\ndf['sidebar_usage_encoder']= df['sidebar_usage'].map(sidebar_usage_coder)\ndf['rate_d2tournamentthreads_encoder']= df['rate_d2tournamentthreads'].map(rate_d2tournamentthreads_coder)\ndf['rate_competitive_hero_trends_encoder']= df['rate_competitive_hero_trends'].map(rate_competitive_hero_trends_coder)\ndf['rate_findbattlecupparty_encoder']= df['rate_findbattlecupparty'].map(rate_findbattlecupparty_coder)\ndf['rate_competitive_player_spotlights_encoder']= df['rate_competitive_player_spotlights'].map(rate_competitive_player_spotlights_coder)\ndf['rate_competitive_team_discussion_encoder']= df['rate_competitive_team_discussion'].map(rate_competitive_team_discussion_coder)\ndf['rate_hero_discussions_encoder']= df['rate_hero_discussions'].map(rate_hero_discussions_coder)\ndf['rate_item_discussions_encoder']= df['rate_item_discussions'].map(rate_item_discussions_coder)\ndf['rate_free_talk_threads_encoder']= df['rate_free_talk_threads'].map(rate_free_talk_threads_coder)\ndf['rate_news_megathreads_encoder']= df['rate_news_megathreads'].map(rate_news_megathreads_coder)\ndf['rate_this_week_learned_encoder']= df['rate_this_week_learned'].map(rate_this_week_learned_coder)\ndf['rate_stupid_questions_encoder']= df['rate_stupid_questions'].map(rate_stupid_questions_coder)\ndf['show_case_badge_encoder']= df['show_case_badge'].map(show_case_badge_coder)\ndf['follow_dota_esports_encoder']= df['follow_dota_esports'].map(follow_dota_esports_coder)","0273526a":"plt.figure(figsize=(12,8))\ndf_age= df['age_encoder'].value_counts()\nax= sns.barplot(y=df_age.values, x=df_age.index)\nax.set(xticklabels=['<13', '13-17', '18-20', '21-23', '24-26', '27-29', '30-35', '36-40','>40'])\nax.set(xlabel='Age Brackets', ylabel='Count')\nplt.show()","23b6f482":"plt.figure(figsize=(12,8))\ndf_gender= df['gender_encoder'].value_counts()\nax= sns.barplot(y=df_gender.values, x=df_gender.index)\nax.set(xticklabels=['Female', 'Male'])\nax.set(xlabel='Gender', ylabel='Count')\nplt.show()","4bd3cc70":"plt.figure(figsize=(12,8))\ndf_years_dota2= df['years_dota2_encoder'].value_counts()\nax= sns.barplot(y=df_years_dota2.values, x=df_years_dota2.index)\nax.set(xticklabels=[\"I don't play\", '< 6 months', '6 months - 1 year', '1 - 3 years',\n                    '3 - 5 years', '5 - 10 years', '10+ years'])\nax.set(xlabel='Years Playing Dota', ylabel='Count')\nplt.show()","8daf21ba":"plt.figure(figsize=(12,8))\ndf_games_week= df['games_week_encoder'].value_counts()\nax= sns.barplot(y=df_games_week.values, x=df_games_week.index)\nax.set(xticklabels=['None', '0 - 1', '1 - 5', '6 - 10', \n                   '11 - 20', '20 - 30',  '30 - 40', '> 40'])\nax.set(xlabel='Games played per day', ylabel='Count')\nplt.show()","e6c61015":"plt.figure(figsize=(12,8))\ndf_badge= df['badge_encoder'].value_counts()\nax= sns.barplot(y=df_badge.values, x=df_badge.index)\nax.set(xticklabels=[\"None\", 'Herald', 'Guardian', 'Crusader', 'Archon', 'Legend',\n              'Ancient', 'Divine', 'Immortal'])\nax.set(xlabel='Ranked Badge', ylabel='Count')\nplt.show()","8dacfd76":"plt.figure(figsize=(12,8))\ndf_game_mode= df['game_mode_encoder'].value_counts()\nax= sns.barplot(y=df_game_mode.values, x=df_game_mode.index)\nax.set(xticklabels=['All Pick\/Single Draft\/Random Draft', 'Others'])\nax.set(xlabel='Played Game Mode', ylabel='Count')\nplt.show()","0d4c5890":"plt.figure(figsize=(12,8))\ndf_role= df['role_encoder'].value_counts()\nax= sns.barplot(y=df_role.values, x=df_role.index)\nax.set(xticklabels=['Support (4\/5)','Offlane', 'Mid', 'Carry'])\nax.set(xlabel='Preferred Role', ylabel='Count')\nplt.show()","b0bc20a3":"plt.figure(figsize=(12,8))\ndf_subreddit_years= df['subreddit_years_encoder'].value_counts()\nax= sns.barplot(y=df_subreddit_years.values, x=df_subreddit_years.index)\nax.set(xticklabels=['<3 Months', '3 - 6 Months', '6 Months - 1 Year', '1 - 2 Years', '2 - 3 Years'\n                       ,  '3 - 5 Years',  '+5 Years'])\nax.set(xlabel='How long have you subscribed to the subreddit', ylabel='Count')\nplt.show()","dfaf5c01":"plt.figure(figsize=(12,8))\ndf_subreddit_check= df['subreddit_check_encoder'].value_counts()\nax= sns.barplot(y=df_subreddit_check.values, x=df_subreddit_check.index)\nax.set(xticklabels=['Only when Trending', 'Once a month', \n                        'Once a week', 'Once a day', 'Multiple times a day'])\nax.set(xlabel='How often do you check the subreddit', ylabel='Count')\nplt.show()","ad0e9d3c":"'Never':0, 'Seldom':1, 'Sometimes':2, 'Often':3, None:0","14669f77":"plt.figure(figsize=(12,8))\ndf_post_freq= df['post_freq_encoder'].value_counts()\nax= sns.barplot(y=df_post_freq.values, x=df_post_freq.index)\nax.set(xticklabels=['Never', 'Seldom', 'Sometimes', 'Often'])\nax.set(xlabel='How often do you post on the subreddit', ylabel='Count')\nplt.show()","33d60ce0":"plt.figure(figsize=(12,8))\ndf_comment_freq= df['comment_freq_encoder'].value_counts()\nax= sns.barplot(y=df_comment_freq.values, x=df_comment_freq.index)\nax.set(xticklabels=['Never', 'Seldom', 'Sometimes', 'Often'])\nax.set(xlabel='How often do you comment on the subreddit', ylabel='Count')\nplt.show()","94ea232c":"'Very important':3, 'Sort of important':3, '4 = Very Important':3, '3':2,'2':1, '1 = Not Important'","a064008c":"plt.figure(figsize=(12,8))\ndf_patch_news_importance= df['patch_news_importance_encoder'].value_counts()\nax= sns.barplot(y=df_patch_news_importance.values, x=df_patch_news_importance.index)\nax.set(xticklabels=['Not Important', 'Sort of Important', 'Important', 'Very Important'])\nax.set(xlabel='Patch News Important?', ylabel='Count')\nplt.show()","3593c565":"plt.figure(figsize=(12,8))\ndf_bug_reports_importance= df['bug_reports_importance_encoder'].value_counts()\nax= sns.barplot(y=df_bug_reports_importance.values, x=df_bug_reports_importance.index)\nax.set(xticklabels=['Not Important', 'Sort of Important', 'Important', 'Very Important'])\nax.set(xlabel='Bug Reports Important?', ylabel='Count')\nplt.show()","9e4d0934":"plt.figure(figsize=(12,8))\ndf_user_created_content= df['user_created_content_encoder'].value_counts()\nax= sns.barplot(y=df_user_created_content.values, x=df_user_created_content.index)\nax.set(xticklabels=['Not Important', 'Sort of Important', 'Important', 'Very Important'])\nax.set(xlabel='User Created Content Important?', ylabel='Count')\nplt.show()","1be64064":"plt.figure(figsize=(12,8))\ndf_eports_news= df['eports_news_encoder'].value_counts()\nax= sns.barplot(y=df_eports_news.values, x=df_eports_news.index)\nax.set(xticklabels=['Not Important', 'Sort of Important', 'Important', 'Very Important'])\nax.set(xlabel='Esports News Important?', ylabel='Count')\nplt.show()","5754939b":"plt.figure(figsize=(12,8))\ndf_gamplay_discuss= df['gamplay_discuss_encoder'].value_counts()\nax= sns.barplot(y=df_gamplay_discuss.values, x=df_gamplay_discuss.index)\nax.set(xticklabels=['Not Important', 'Sort of Important', 'Important', 'Very Important'])\nax.set(xlabel='Gameplay Discussions Important?', ylabel='Count')\nplt.show()","3ba269fc":"plt.figure(figsize=(12,8))\ndf_gamplay_highlights= df['gamplay_highlights_encoder'].value_counts()\nax= sns.barplot(y=df_gamplay_highlights.values, x=df_gamplay_highlights.index)\nax.set(xticklabels=['Not Important', 'Sort of Important', 'Important', 'Very Important'])\nax.set(xlabel='Gameplay Highlights Important?', ylabel='Count')\nplt.show()","fb896c62":"plt.figure(figsize=(12,8))\ndf_guides_tips= df['guides_tips_encoder'].value_counts()\nax= sns.barplot(y=df_guides_tips.values, x=df_guides_tips.index)\nax.set(xticklabels=['Not Important', 'Sort of Important', 'Important', 'Very Important'])\nax.set(xlabel='Guides and Tips Important?', ylabel='Count')\nplt.show()","13338a3f":"plt.figure(figsize=(12,8))\ndf_comedy_posts= df['comedy_posts_encoder'].value_counts()\nax= sns.barplot(y=df_comedy_posts.values, x=df_comedy_posts.index)\nax.set(xticklabels=['Not Important', 'Sort of Important', 'Important', 'Very Important'])\nax.set(xlabel='Comedy Posts Important?', ylabel='Count')\nplt.show()","fdb923cb":"plt.figure(figsize=(12,8))\ndf_requests_suggestions_complaints= df['requests_suggestions_complaints_encoder'].value_counts()\nax= sns.barplot(y=df_requests_suggestions_complaints.values, x=df_requests_suggestions_complaints.index)\nax.set(xticklabels=['Not Important', 'Sort of Important', 'Important', 'Very Important'])\nax.set(xlabel='Requests and Suggestions Important?', ylabel='Count')\nplt.show()","32dfb7a9":"plt.figure(figsize=(12,8))\ndf_sidebar_usage= df['sidebar_usage_encoder'].value_counts()\nax= sns.barplot(y=df_sidebar_usage.values, x=df_sidebar_usage.index)\nplt.show()","1250c35c":"'Meh':0, None:1,'Okay':2, 'Like em':3, 'Love em':4","1025afc0":"plt.figure(figsize=(12,8))\ndf_rate_d2tournamentthreads= df['rate_d2tournamentthreads_encoder'].value_counts()\nax= sns.barplot(y=df_rate_d2tournamentthreads.values, x=df_rate_d2tournamentthreads.index)\nax.set(xticklabels=['Meh','Blank' ,'Okay', 'Like em', 'Love em'])\nax.set(xlabel='Rate: Dota2 Tournament Threads', ylabel='Count')\nplt.show()","d8a47a28":"plt.figure(figsize=(12,8))\ndf_rate_competitive_hero_trends= df['rate_competitive_hero_trends_encoder'].value_counts()\nax= sns.barplot(y=df_rate_competitive_hero_trends.values, x=df_rate_competitive_hero_trends.index)\nax.set(xticklabels=['Meh','Blank' ,'Okay', 'Like em', 'Love em'])\nax.set(xlabel='Rate: Competitive Hero Threads', ylabel='Count')\nplt.show()","a4472e50":"plt.figure(figsize=(12,8))\ndf_rate_findbattlecupparty= df['rate_findbattlecupparty_encoder'].value_counts()\nax= sns.barplot(y=df_rate_findbattlecupparty.values, x=df_rate_findbattlecupparty.index)\nax.set(xticklabels=['Meh','Blank' ,'Okay', 'Like em', 'Love em'])\nax.set(xlabel='Rate: Competitive Hero Threads', ylabel='Count')\nplt.show()","1b520342":"plt.figure(figsize=(12,8))\ndf_rate_competitive_player_spotlights= df['rate_competitive_player_spotlights_encoder'].value_counts()\nax= sns.barplot(y=df_rate_competitive_player_spotlights.values, x=df_rate_competitive_player_spotlights.index)\nax.set(xticklabels=['Meh','Blank' ,'Okay', 'Like em', 'Love em'])\nax.set(xlabel='Rate: Competitive Player Spotlights Threads', ylabel='Count')\nplt.show()","dc1b97df":"plt.figure(figsize=(12,8))\ndf_rate_competitive_team_discussion= df['rate_competitive_team_discussion_encoder'].value_counts()\nax= sns.barplot(y=df_rate_competitive_team_discussion.values, x=df_rate_competitive_team_discussion.index)\nax.set(xticklabels=['Meh','Blank' ,'Okay', 'Like em', 'Love em'])\nax.set(xlabel='Rate: Competitive Team Discussion Threads', ylabel='Count')\nplt.show()","ad84fb0c":"plt.figure(figsize=(12,8))\ndf_rate_hero_discussions= df['rate_hero_discussions_encoder'].value_counts()\nax= sns.barplot(y=df_rate_hero_discussions.values, x=df_rate_hero_discussions.index)\nax.set(xticklabels=['Meh','Blank' ,'Okay', 'Like em', 'Love em'])\nax.set(xlabel='Rate: Hero DiscussionThreads', ylabel='Count')\nplt.show()","c09046eb":"plt.figure(figsize=(12,8))\ndf_rate_item_discussions= df['rate_item_discussions_encoder'].value_counts()\nax= sns.barplot(y=df_rate_item_discussions.values, x=df_rate_item_discussions.index)\nax.set(xticklabels=['Meh','Blank' ,'Okay', 'Like em', 'Love em'])\nax.set(xlabel='Rate: Item Discussion Threads', ylabel='Count')\nplt.show()","296de777":"plt.figure(figsize=(12,8))\ndf_rate_free_talk_threads= df['rate_free_talk_threads_encoder'].value_counts()\nax= sns.barplot(y=df_rate_free_talk_threads.values, x=df_rate_free_talk_threads.index)\nax.set(xticklabels=['Meh','Blank' ,'Okay', 'Like em', 'Love em'])\nax.set(xlabel='Rate: Free Talk Threads', ylabel='Count')\nplt.show()","1c032215":"plt.figure(figsize=(12,8))\ndf_rate_news_megathreads= df['rate_news_megathreads_encoder'].value_counts()\nsns.barplot(y=df_rate_news_megathreads.values, x=df_rate_news_megathreads.index)\nax.set(xticklabels=['Meh','Blank' ,'Okay', 'Like em', 'Love em'])\nax.set(xlabel='Rate: News Megathreads', ylabel='Count')\nplt.show()","3e353114":"plt.figure(figsize=(12,8))\ndf_rate_news_megathreads= df['rate_news_megathreads_encoder'].value_counts()\nsns.barplot(y=df_rate_news_megathreads.values, x=df_rate_news_megathreads.index)\nplt.show()","3cbbe325":"plt.figure(figsize=(12,8))\ndf_rate_this_week_learned= df['rate_this_week_learned_encoder'].value_counts()\nax= sns.barplot(y=df_rate_this_week_learned.values, x=df_rate_this_week_learned.index)\nax.set(xticklabels=['Meh','Blank' ,'Okay', 'Like em', 'Love em'])\nax.set(xlabel='Rate: This Week I Learned Threads', ylabel='Count')\nplt.show()","e19fe8ce":"plt.figure(figsize=(12,8))\ndf_rate_stupid_questions= df['rate_stupid_questions_encoder'].value_counts()\nax= sns.barplot(y=df_rate_stupid_questions.values, x=df_rate_stupid_questions.index)\nax.set(xticklabels=['Meh','Blank' ,'Okay', 'Like em', 'Love em'])\nax.set(xlabel='Rate: Stupid Questions Threads', ylabel='Count')\nplt.show()","48eb81d3":"\"I don't care\":0, \"It shouldn't be done at all\":1, \n                        \"It should only be allowed for very high ranked players.\":2, \n                        \"It should be allowed for everyone\":3","d0239bf0":"plt.figure(figsize=(12,8))\ndf_show_case_badge= df['show_case_badge_encoder'].value_counts()\nax= sns.barplot(y=df_show_case_badge.values, x=df_show_case_badge.index)\nax.set(xticklabels=[\"I don't care\", \"It should not be done\", \"Only for very high ranks\", \"Allowed for Everyone\"])\nax.set(xlabel='Rate: Stupid Questions Threads', ylabel='Count')\nplt.show()","1af18e55":"\"I don't watch at all\":0, 'I only watch The International': 1, \n                            'I watch some events and the highlights for the ones I miss': 2, 'I follow only the major tournaments (more than just The International)': 3, \n                            'I watch nearly every event':4","daea4e6f":"plt.figure(figsize=(12,8))\ndf_follow_dota_esports= df['follow_dota_esports_encoder'].value_counts()\nax= sns.barplot(y=df_follow_dota_esports.values, x=df_follow_dota_esports.index)\nax.set(xticklabels=[\"Don't Watch\", \"Only The International\", \"Some events\/Watch Highlights\", \"Only the Majors\", \"Watch All Events\"])\nax.set(xlabel='How much do you follow Dota 2 Esports', ylabel='Count')\nplt.show()\n","3c8352bf":"plt.figure(figsize=(12,8))\ndf_behaviour= df['behaviour'].value_counts()\nsns.barplot(y=df_behaviour.values, x=df_behaviour.index)\nplt.show()","d92928cb":"plt.figure(figsize=(12,8))\ndf_solo_party= df['solo_party'].value_counts()\nsns.barplot(y=df_solo_party.values, x=df_solo_party.index)\nplt.show()","e0c9da75":"plt.figure(figsize=(12,8))\ndf_unranked_ranked= df['unranked_ranked'].value_counts()\nsns.barplot(y=df_unranked_ranked.values, x=df_unranked_ranked.index)\nplt.show()","f701defa":"plt.figure(figsize=(12,8))\ndf_least_favorite_content= df['least_favorite_content'].value_counts()\nsns.barplot(y=df_least_favorite_content.values, x=df_least_favorite_content.index)\nplt.show()","668e26e6":"plt.figure(figsize=(12,8))\ndf_subreddit_years= df['subreddit_years_encoder'].value_counts()\nsns.barplot(y=df_subreddit_years.values, x=df_subreddit_years.index)\n\nplt.show()","18a5ab56":"plt.figure(figsize=(12,8))\ndf_subreddit_years= df['subreddit_years_encoder'].value_counts()\nax= sns.barplot(y=df_subreddit_years.values, x=df_subreddit_years.index)\nax.set(xticklabels=['<3 Months', '3 - 6 Months', '6 Months - 1 Year', '1 - 2 Years', '2 - 3 Years'\n                       ,  '3 - 5 Years',  '+5 Years'])\nax.set(xlabel='How long have you subscribed to the subreddit', ylabel='Count')\nplt.show()","3c40d6b9":"df['years_dota2_encoder']= df['years_dota2'].map(years_dota2_coder)","f3a637ff":"df_veteran_encoder= {0:'less than 5 yrs' ,1:'less than 5 yrs', 2:'less than 5 yrs', 3:'less than 5 yrs', 4:'less than 5 yrs', 5:'more than 5 yrs', 6:'more than 5 yrs'}\ndf['dota_veteran'] = df['years_dota2_encoder'].map(df_veteran_encoder)\nplt.figure(figsize=(12,8))\ndf_subreddit_veteran= df['dota_veteran'].value_counts()\nsns.barplot(y=df_subreddit_veteran.values, x=df_subreddit_veteran.index)\n\nplt.show()","b6f586d5":"ax= sns.catplot(x='badge_encoder', kind='count', hue='dota_veteran',data=df)\nax.set(xticklabels=[\"None\", 'Herald', 'Guardian', 'Crusader', 'Archon', 'Legend',\n              'Ancient', 'Divine', 'Immortal'])\nax.set(xlabel='Ranked Badge', ylabel='Count')\nax.set_xticklabels(rotation=90)\nplt.show()","86d51ee4":"ax= sns.catplot(x='subreddit_check_encoder', kind='count', hue='dota_veteran',data=df)\nax.set(xticklabels=['Only when Trending', 'Once a month', \n                        'Once a week', 'Once a day', 'Multiple times a day'])\nax.set(xlabel='How often do you check the subreddit', ylabel='Count')\nax.set_xticklabels(rotation=90)\nplt.show()","2d53b5dd":"ax= sns.catplot(x='games_week_encoder', kind='count', hue='dota_veteran',data=df)\nax.set(xticklabels=['None', '0 - 1', '1 - 5', '6 - 10', \n                   '11 - 20', '20 - 30',  '30 - 40', '> 40'])\nax.set(xlabel='Games played per week', ylabel='Count')\nax.set_xticklabels(rotation=90)\nplt.show()","f11dc45c":"{'Very important':3, 'Sort of important':3, '4 = Very Important':3, '3':2,'2':1, '1 = Not Important':0}"}}