{"cell_type":{"cc272c8f":"code","9009980a":"code","8083fb9d":"code","fc2b8700":"code","56e597f4":"code","af991c32":"code","c3e6c1af":"code","25f8f0f8":"code","68cdfd63":"code","9eeab29c":"code","a1eff14f":"code","993e40f6":"code","e9a9113e":"code","ac91315d":"code","fa15aca2":"code","b1960109":"code","d47b6b5d":"code","9eb8156e":"code","a25c54b2":"code","b9913ed7":"code","ce3ba65d":"code","7537a989":"code","d4e56a32":"code","f3e261b9":"code","dbc601d9":"code","17715fe0":"code","d6667948":"code","59ac48ff":"code","250e187c":"code","1d13726e":"code","a32d4ced":"code","9154cb57":"code","ed826b36":"code","85e968e3":"code","0ba3dd66":"code","7598297a":"code","b9cc0a0e":"code","a2a66735":"code","ba08ff39":"code","8160685d":"code","0de31028":"code","b8064484":"code","e33b35ad":"code","067e0a8f":"code","29293264":"code","b138517f":"code","5faeebc5":"code","841ac0b4":"code","b747e010":"code","9ad31718":"code","3373297c":"code","3128c9cf":"code","74a094ef":"code","e5a36e50":"code","935c65b7":"code","ab78ecef":"code","17f133f6":"code","99e2fd58":"code","8e1a4127":"code","fbca0e3e":"code","f3c769af":"code","b7e527b9":"code","0637e0f4":"code","e7daf766":"code","547e49b9":"code","1e3c47d2":"code","7dc5e70a":"code","6564b280":"code","96e015a2":"markdown"},"source":{"cc272c8f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9009980a":"df = pd.read_csv(\"\/kaggle\/input\/youtube-new\/DEvideos.csv\")","8083fb9d":"df.head()","fc2b8700":"df.describe()","56e597f4":"views = list(df[\"views\"].dropna())","af991c32":"from matplotlib import pyplot as plt","c3e6c1af":"sorted_views = list(reversed(sorted(views)))","25f8f0f8":"sorted_views[:10]","68cdfd63":"bin_count = []","9eeab29c":"fig1, ax1 = plt.subplots()\nax1.boxplot(views)","a1eff14f":"bin_edges = []\nfor i in range(30):\n    edge = 1.4** i + 200_000 * i \n    bin_edges.append(edge)","993e40f6":"plt.hist(views, bins=bin_edges)","e9a9113e":"fig1, ax1 = plt.subplots()\nax1.set_title(\"Youtube Video Views\")\nax1.set_xlabel(\"Views\")\nax1.set_ylabel(\"Count\")\nax1.hist(views, bins=bin_edges)","ac91315d":"# which tags or description, kind of videos get in trends","fa15aca2":"tags = list(df[\"tags\"].dropna())","b1960109":"all_tags = []","d47b6b5d":"for tag in tags:\n    tags_splitted = tag.split(\"|\")\n    all_tags.extend(tags_splitted)","9eb8156e":"all_tags = list(map(lambda x: x.replace(\"\\\"\", \"\"), all_tags))","a25c54b2":"all_tags[:10]","b9913ed7":"unique_tags = list(set(all_tags))","ce3ba65d":"count_tag = {unique_tag:0 for unique_tag in unique_tags }","7537a989":"for tag in all_tags:\n    count_tag[tag] += 1","d4e56a32":"del count_tag['[none]']","f3e261b9":"counts = list(count_tag.items())","dbc601d9":"counts.sort(key=lambda x: x[1], reverse=True)","17715fe0":"counts[:10]","d6667948":"fig1, ax1 = plt.subplots()\nxs = list(range(10))\nmost_used_tags = counts[:10]\nys = list(reversed(list(map(lambda x: x[1], most_used_tags))))\nlabels = list(reversed(list(map(lambda x: x[0], most_used_tags))))\nax1.set_title(\"Most trending youtube tags in germany\")\nax1.set_xlabel(\"times trended\")\nax1.barh(xs, ys, tick_label=labels)","59ac48ff":"### Youtubers","250e187c":"df.head()","1d13726e":"channels = list(df[\"channel_title\"])","a32d4ced":"unique_channels = list(set(channels))","9154cb57":"channels_count = {c: 0 for c in unique_channels}","ed826b36":"for c in channels:\n    channels_count[c] += 1\n    ","85e968e3":"sorted_channels = list(reversed(sorted(list(channels_count.items()), key = lambda x: x[1])))","0ba3dd66":"sorted_channels[:10]","7598297a":"channels_most_trending = sorted_channels[:10]","b9cc0a0e":"fig1, ax1 = plt.subplots()\nxs = list(range(10))\nys = list(reversed(list(map(lambda x: x[1], channels_most_trending))))\nlabels = list(reversed(list(map(lambda x: x[0], channels_most_trending))))\nax1.set_title(\"Most trending youtube channels in Germany\")\nax1.set_xlabel(\"times trended\")\nax1.barh(xs, ys, tick_label=labels)","a2a66735":"df.head()","ba08ff39":"views_likes = df[[\"views\", \"likes\"]]","8160685d":"views_likes.head()","0de31028":"views_likes = views_likes.dropna()","b8064484":"views_likes.sort()","e33b35ad":"views = list(views_likes[\"views\"])\nlikes = list(views_likes[\"likes\"])","067e0a8f":"v_l = list(sorted(list(zip(views, likes)), key= lambda x: x[0]))","29293264":"sort_views, sort_likes = zip(*v_l)","b138517f":"fig1, ax1 = plt.subplots(figsize=(10,8))\nax1.set_title(\"Correlation Views\/Likes\")\nax1.set_xlabel(\"Views\")\nax1.set_ylabel(\"Likes\")\nax1.scatter(sort_views, sort_likes, s=0.4)","5faeebc5":"import numpy as np\nfrom sklearn.linear_model import LinearRegression","841ac0b4":"x = np.array(sort_views).reshape((-1, 1))\ny = np.array(sort_likes)","b747e010":"model = LinearRegression()\n","9ad31718":"model.fit(x,y)","3373297c":"print(model.intercept_)\nprint(model.coef_)","3128c9cf":"# Im Durschnitt hat ein Video 3% likes, der views","74a094ef":"test_x = list(range(0, 100_000_000, 10_000))","e5a36e50":"test_y = model.predict(np.array(test_x).reshape((-1, 1)))","935c65b7":"fig1, ax1 = plt.subplots(figsize=(10,8))\nax1.set_title(\"Correlation Views\/Likes\")\nax1.set_xlabel(\"Views\")\nax1.set_ylabel(\"Likes\")\nax1.plot(test_x, test_y)\nax1.scatter(sort_views, sort_likes, s=0.4)","ab78ecef":"vid_popularity = df[[\"views\",\"likes\", \"dislikes\"]].dropna()","17f133f6":"views = list(vid_popularity[\"views\"])\nlikes = list(vid_popularity[\"likes\"])\ndislikes = list(vid_popularity[\"dislikes\"])","99e2fd58":"like_dislike = list(map(lambda x: x[0] \/ (x[1] + 1),zip(likes, dislikes)))","8e1a4127":"like_dislike","fbca0e3e":"df[\"like\/dislike\"] = like_dislike","f3c769af":"df.head()","b7e527b9":"df[\"like\/dislike\"].describe()","0637e0f4":"df[df[\"like\/dislike\"] < 200][\"like\/dislike\"].hist(bins=200)","e7daf766":"views_likes = list(map(lambda x: (x[0] \/ (x[1] + 1)) * 100,zip(likes, views)))","547e49b9":"df[\"likes%\/views\"] = views_likes","1e3c47d2":"df = df.drop(\"views\/likes\", axis=1)","7dc5e70a":"df.head()","6564b280":"df[\"likes%\/views\"].hist(bins = 100)","96e015a2":"## Youtubers Most Trending Videos\n"}}