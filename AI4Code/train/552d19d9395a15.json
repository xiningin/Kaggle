{"cell_type":{"403de634":"code","0d3c73be":"code","724dfe17":"code","be8ca8f1":"code","edfc7ba7":"code","b8bc275d":"code","2d2dd71c":"code","737c4220":"code","c4337667":"code","e5287c0f":"code","97d856b8":"code","c5c84547":"code","d1cc9a0f":"code","fa6fef03":"code","68f4a547":"code","ac25e608":"code","ff3e6ede":"code","53aa5e7a":"code","1c0c4b8b":"code","ccc9e3a5":"code","98c0c5ad":"code","772e440e":"code","4c6fbd31":"code","cf0e38cc":"code","48d89fb2":"code","4ad206c6":"code","b5d4fb0c":"code","924fd660":"code","923ea2ea":"markdown","10f9e0b2":"markdown","9922355f":"markdown","3911d99f":"markdown","aa063090":"markdown","5237bc59":"markdown","f4c477d6":"markdown","aea3a190":"markdown","739e548e":"markdown","e1bd93a7":"markdown","aa17b857":"markdown","daa017ca":"markdown","93252858":"markdown","5c1b9ea9":"markdown","94cdc9c3":"markdown","f6abbf0e":"markdown","5044446c":"markdown","591a9a3d":"markdown","f380441c":"markdown","ceafac58":"markdown"},"source":{"403de634":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0d3c73be":"import pandas as pd\ndf1 = pd.read_csv('..\/input\/solar-power-generation-data\/Plant_1_Generation_Data.csv')\ndf2 = pd.read_csv('..\/input\/solar-power-generation-data\/Plant_2_Generation_Data.csv')\ndf3 = pd.read_csv('..\/input\/solar-power-generation-data\/Plant_1_Weather_Sensor_Data.csv')\ndf4 = pd.read_csv('..\/input\/solar-power-generation-data\/Plant_2_Weather_Sensor_Data.csv')","724dfe17":"df1.head() # Displays Dataset of Generation data","be8ca8f1":"df2.head() # Dataset of Weather Sensor Data","edfc7ba7":"df1.columns","b8bc275d":"df2.columns","2d2dd71c":"df3.columns","737c4220":"df4.columns","c4337667":"df1.nunique()","e5287c0f":"df2.nunique()","97d856b8":"df1.describe()","c5c84547":"df2.describe()","d1cc9a0f":"dy_mean = df1['DAILY_YIELD'].mean()\nprint(f'The mean value of Daily Yield is {dy_mean}')","fa6fef03":"dy_ambient_temp = df3['AMBIENT_TEMPERATURE'].max()\nprint(f'The maximum ambient temperature is {dy_ambient_temp}')","68f4a547":"dy_module_temp = df3['MODULE_TEMPERATURE'].max()\nprint(f'The maximum module temperature is {dy_module_temp}')","ac25e608":"df1['SOURCE_KEY'].nunique()","ff3e6ede":"dy_max_dc = df1['DC_POWER'].max()\nprint(f'The Maximum DC Power Generated is {dy_max_dc}')","53aa5e7a":"dy_min_dc = df1['DC_POWER'].min()\nprint(f'The Minimum DC Power Generated is {dy_min_dc}')","1c0c4b8b":"dy_max_ac = df1['AC_POWER'].max()\nprint(f'The Maximum AC Power Generated is {dy_max_ac}')","ccc9e3a5":"dy_min_ac = df1['AC_POWER'].min()\nprint(f'The Minimum AC Power Generated is {dy_min_ac}')","98c0c5ad":"df1[df1['DC_POWER']==df1['DC_POWER'].max()]","772e440e":"df1['DC_POWER']","4c6fbd31":"df1['DC_POWER']==df1['DC_POWER'].max()","cf0e38cc":"df1[df1['DC_POWER']==df1['DC_POWER'].max()]['SOURCE_KEY']","48d89fb2":"import pandas as pd\ndata = pd.read_csv('..\/input\/solar-power-generation-data\/Plant_1_Generation_Data.csv')\ndata[\"DC_POWER\"] = data [\"DC_POWER\"].rank()\ndata.sort_values(\"DC_POWER\", ascending = False)\nprint(data)","4ad206c6":"data = pd.read_csv('..\/input\/solar-power-generation-data\/Plant_1_Generation_Data.csv')\ndata[\"AC_POWER\"] = data [\"AC_POWER\"].rank(numeric_only=None)\ndata.sort_values(\"AC_POWER\", ascending = False)\nprint(data)","b5d4fb0c":"print(\"Is there a null value in the Generation data? {}\".format(df1.isnull().sum().any()))\nprint(\"Is there a null value in the Generation data? {}\".format(df2.isnull().sum().any()))","924fd660":"print(\"Is there a null value in the Weather data? {}\".format(df3.isnull().sum().any()))\nprint(\"Is there a null value in the Weather data? {}\".format(df4.isnull().sum().any()))","923ea2ea":"Min. DC Power","10f9e0b2":"# Rank the inverters based on the DC\/AC power they produce","9922355f":"# Maximum Module Temperature","3911d99f":"# Null or Missing Value Check","aa063090":"# What is the Maximum Ambient and Module Temperature?","5237bc59":"Max. DC and AC Power","f4c477d6":"# What is the maximum\/minimum amount of DC\/AC Power generated","aea3a190":"Max. DC Power","739e548e":"# Number of inverters present for each plant?","e1bd93a7":"For Weather Data","aa17b857":"# What is the mean value of daily yield?","daa017ca":"= means assignment == means check if equal","93252858":"# 1. Load the data from the CSV files","5c1b9ea9":"For Generation Data","94cdc9c3":"# Which inverter (source_key) has produced maximum DC\/AC power?","f6abbf0e":"#Take the max value of DC Power column and check it in a DataFrame column of DC Power","5044446c":"# Maximum Ambient Temperature","591a9a3d":"Min. AC Power","f380441c":"# 2. Explore each dataset - columns, counts, basic stats","ceafac58":"Max. AC Power"}}