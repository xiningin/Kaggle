{"cell_type":{"ae9dc516":"code","f9cc82df":"code","9c59a29c":"code","4719811c":"code","a54aa44b":"code","5bae2120":"code","526ec2bb":"code","e415d77e":"code","4aa32104":"code","aadbaed2":"code","b8008e73":"code","ddde8979":"code","437d617e":"code","f7025acf":"code","037ee25e":"code","02203ddd":"code","b11eaf03":"code","44cd1765":"code","5ba6ae24":"code","de06ccc8":"markdown","4e1d8d93":"markdown","6a758d70":"markdown","3eceb80c":"markdown"},"source":{"ae9dc516":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f9cc82df":"path = '\/kaggle\/input\/sanfranciso-crime-dataset\/Police_Department_Incidents_-_Previous_Year__2016_.csv'\ndf = pd.read_csv(path)\ndf.head()","9c59a29c":"df.Date.min(), df.Date.max()","4719811c":"df.shape","a54aa44b":"df.Descript.nunique()","5bae2120":"from collections import Counter\nCounter(df.Category).most_common()","526ec2bb":"dict_day = dict(Counter(df.DayOfWeek).most_common())\nimport matplotlib.pyplot as plt","e415d77e":"x_axis = [d[:3] for d in dict_day.keys()]","4aa32104":"plt.bar(x_axis, dict_day.values())","aadbaed2":"BBox = [df.Y.min(), df.Y.max(), df.X.min(), df.X.max()]\nBBox","b8008e73":"sf_map = plt.imread('\/kaggle\/input\/sanfranciscomappng\/map.png')","ddde8979":"def plot_crime(df):\n    \"\"\"df should contain X and Y columns\"\"\"\n    fig, ax = plt.subplots(figsize = (8,7))\n    ax.scatter(df.Y, df.X, zorder=1, alpha= 0.2, c='b', s=10)\n    ax.set_title('Plotting Spatial Data on San Francisco Map')\n    ax.set_xlim(BBox[0],BBox[1])\n    ax.set_ylim(BBox[2],BBox[3])\n    ax.imshow(sf_map, zorder=0, extent=BBox, aspect='equal')\nplot_crime(df)","437d617e":"df['day'] = [date[3:5] for date in df['Date']]\ndf['month'] = [date[:2] for date in df['Date']]\ndf['year'] = [date[6:10] for date in df['Date']]","f7025acf":"df.head()","037ee25e":"df_jan = df[df['month'] == '01']","02203ddd":"plot_crime(df_jan)","b11eaf03":"df_jan['day'] = df_jan['day'].astype('int')\ndf_jan_1_15 = df_jan[df_jan['day'] <= 15]","44cd1765":"plot_crime(df_jan_1_15)","5ba6ae24":"df_suicide = df[df['Category'] == 'SUICIDE']\nplot_crime(df_suicide)","de06ccc8":"There is too much observations on this plot. Let's try to plot a more specific period of time (currently the period is from 1st of January 2016 to 31th of December 2016).","4e1d8d93":"We have latitude and longitude on the dataset! You can do nice plots with Python, Matplotlib and openstreemap using this  [tutorial](https:\/\/towardsdatascience.com\/easy-steps-to-plot-geographic-data-on-a-map-python-11217859a2db)","6a758d70":"Where does suicide happen in SF?","3eceb80c":"There is still a lot of points. Let's try to plot the first two weeks of January."}}