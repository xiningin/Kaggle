{"cell_type":{"fcb63a73":"code","4dd8343e":"code","7961cc3c":"code","c59e5206":"code","52923a36":"code","6484776e":"code","e57f3525":"code","bde3cb60":"code","93089ba0":"code","f2341e6c":"code","94da1002":"code","2b02a183":"code","46fd2741":"code","1c331e5a":"code","02522460":"code","280b7723":"code","8da9cfca":"code","332c82f5":"markdown","748bcd77":"markdown","42a1c7d5":"markdown","940ea277":"markdown","c47377b2":"markdown","abce892b":"markdown","95774110":"markdown","18516b1c":"markdown","63a9605e":"markdown","b2f0c320":"markdown","e301a018":"markdown","12be4cef":"markdown","05031d94":"markdown"},"source":{"fcb63a73":"import numpy as np\nimport pandas as pd\nimport tensorflow as tf","4dd8343e":"# Checking the version of TensorFlow\ntf.__version__","7961cc3c":"train = pd.read_csv('\/kaggle\/input\/fashionmnist\/fashion-mnist_train.csv')\ntrain.head()","c59e5206":"# Creating a list of variables\nfeatures = train.columns.tolist()\nfeatures.remove('label')","52923a36":"test = pd.read_csv('\/kaggle\/input\/fashionmnist\/fashion-mnist_test.csv')\ntest.head()","6484776e":"X_train = np.array(train[features])\ny_train = np.array(train['label'])","e57f3525":"X_test = np.array(test[features])\ny_test = np.array(test['label'])","bde3cb60":"X_train = X_train \/ 255.0\nX_test = X_test \/ 255.0","93089ba0":"model = tf.keras.models.Sequential()","f2341e6c":"model.add(tf.keras.layers.Dense(units = 128,activation = 'relu',input_shape = (784,)))","94da1002":"model.add(tf.keras.layers.Dropout(0.2))","2b02a183":"model.add(tf.keras.layers.Dense(units = 10,activation = 'softmax'))","46fd2741":"model.compile(optimizer = 'adam', loss = 'sparse_categorical_crossentropy', metrics = ['sparse_categorical_accuracy'])","1c331e5a":"model.summary()","02522460":"model.fit(X_train,y_train, epochs = 10)","280b7723":"test_loss, test_acc = model.evaluate(X_test, y_test)","8da9cfca":"print('Test Accuracy : {}%'.format(test_acc*100))","332c82f5":"# Data Preprocessing","748bcd77":"## Adding a second layer with Dropout\n\nDropout is a Regularization technique where we randomly set neurons in a layer to zero which means that during training those neurons will not be updated. This reduces the chance for overfitting.","42a1c7d5":"## Compiling the model\n\n* Optimizer = Adam\n* Loss = Sparse Categorical Crossentropy","940ea277":"## Adding the output layer\n\n* Number of neurons = 10 (corresponding to the number of classes)\n* Activation Function = Softmax","c47377b2":"## Adding a first Dense or Fully-connected hidden layer\n\nLayer hyper-parameters:\n* Number of neurons = 128\n* Activation Function = ReLU\n* Input Shape = (784,)","abce892b":"# Importing the Libraries","95774110":"## Converting the Dataframes into NumPy arrays","18516b1c":"## Model evaluation and prediction","63a9605e":"## Defining the model\n\nWe define an object of the Sequential model.","b2f0c320":"## Training the model","e301a018":"# Loading the Dataset","12be4cef":"# Building an Artificial Neural Network","05031d94":"## Normalizing the images\n\nWe divide the value of each pixel in the training and test datasets by the maximum value of pixels (255).\n\nIn this way, each pixel will be in the range of 0 and 1, which allows the ANN to train faster."}}