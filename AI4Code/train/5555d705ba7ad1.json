{"cell_type":{"8efa7ee9":"code","c7b8ff2d":"code","889eaf19":"code","569035e5":"code","a3c3fc75":"code","50ee1de7":"code","094cc418":"code","950827d6":"code","f8a81bec":"code","fdfedaac":"code","cbeedb6b":"code","defcd136":"code","de928bd3":"code","6f12737f":"code","25553e60":"code","f7ac71a6":"code","fccb24b6":"code","87508ea8":"code","a74a2891":"code","3f479669":"code","017fb822":"code","db070ef3":"code","7fbb4503":"code","940d0739":"code","5782b8fe":"code","b083eefb":"code","d616a020":"code","8966d088":"code","aa3f97a3":"code","488e7092":"code","e8262d82":"code","74d92041":"code","d8aed95f":"code","b5744794":"code","db7115ff":"code","967827b9":"code","469758e0":"markdown","c61476a2":"markdown","d45eac78":"markdown","211d6b10":"markdown","32f0e278":"markdown","3f52cc8a":"markdown","2ca841f9":"markdown","ac5c41e1":"markdown","325aa746":"markdown","e7da3ccd":"markdown","c1d49829":"markdown","7f962180":"markdown","fc3792ca":"markdown","5632d6c0":"markdown","3978733a":"markdown","bfe369ab":"markdown","ba732009":"markdown","8fb60c88":"markdown","756b2fb5":"markdown","bd222acf":"markdown","c48dc28c":"markdown","dc396b1f":"markdown","adc05801":"markdown","6f37ac22":"markdown","d874030c":"markdown","b8ef179c":"markdown","fd531b6d":"markdown","9f6f2a52":"markdown","1b7b2cb4":"markdown","d78780c0":"markdown","df9386cf":"markdown","1588c611":"markdown","6404bd2e":"markdown"},"source":{"8efa7ee9":"# Pandas : librairie de manipulation de donn\u00e9es\n# NumPy : librairie de calcul scientifique\n# MatPlotLib : librairie de visualisation et graphiques\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.metrics import mean_squared_error, r2_score","c7b8ff2d":"#lecture du dataset\ndf = pd.read_csv(\"..\/input\/housesalesprediction\/kc_house_data.csv\")","889eaf19":"df.head(10).T","569035e5":"df.info()","a3c3fc75":"df.plot(kind=\"scatter\", x=\"long\", y=\"lat\", c=\"price\", cmap=\"rainbow\", s=3, figsize=(12,12))","50ee1de7":"df.count()","094cc418":"df['year'] = pd.DatetimeIndex(df['date']).year\ndf['month'] = pd.DatetimeIndex(df['date']).month","950827d6":"df.groupby(['year','month'])['price'].mean().plot(kind = 'bar', figsize=(12,8))","f8a81bec":"df.groupby(['year','month'])['price'].count().plot(kind = 'bar', figsize=(12,8))","fdfedaac":"df = df.drop(['id','date'], axis=1)","cbeedb6b":"tabcorr = df.corr()     # on peut utiliser aussi bos.corr(method='pearson') par exemple","defcd136":"tabcorr","de928bd3":"plt.figure(figsize=(12,12))\nsns.heatmap(abs(tabcorr), cmap=\"coolwarm\")","6f12737f":"sns.clustermap(abs(tabcorr), cmap=\"coolwarm\")","25553e60":"from scipy.cluster import hierarchy as hc\n\ncorr = 1 - df.corr()\ncorr_condensed = hc.distance.squareform(corr)\nlink = hc.linkage(corr_condensed, method='ward')\nplt.figure(figsize=(12,12))\nden = hc.dendrogram(link, labels=df.columns, orientation='left', leaf_font_size=10)","f7ac71a6":"correlations = tabcorr.price\nprint(correlations)","fccb24b6":"correlations = correlations.drop(['price'],axis=0)","87508ea8":"print(abs(correlations).sort_values(ascending=False))","a74a2891":"df.columns","3f479669":"continuous_features = ['sqft_living','sqrt_log','sqft_above','sqft_basement','sqft_living15','sqrt_lot15','lat','long']\ndiscrete_features = ['month','year','bedrooms','bathrooms','floors','waterfront','view','condition',\n                     'grade','yr_built','yr_renovated','zipcode']","017fb822":"df1 = df[df.price<1000000].drop(discrete_features, axis=1)","db070ef3":"X = df1.drop(['price'], axis=1)\ny = df1.price\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=1)","7fbb4503":"from sklearn.linear_model import LinearRegression","940d0739":"lm = LinearRegression()\nlm.fit(X_train, y_train)            # apprentissage\ny_pred = lm.predict(X_test)         # pr\u00e9diction sur l'ensemble de test","5782b8fe":"plt.figure(figsize=(12,12))\nplt.scatter(y_test, y_pred)\nplt.plot([y_test.min(),y_test.max()],[y_test.min(),y_test.max()], color='red', linewidth=3)\nplt.xlabel(\"Prix\")\nplt.ylabel(\"Prediction de prix\")\nplt.title(\"Prix reels vs predictions\")","b083eefb":"sns.distplot(y_test-y_pred)","d616a020":"print(np.sqrt(mean_squared_error(y_test, y_pred)))","8966d088":"scoreR2 = r2_score(y_test, y_pred)\nprint(scoreR2)","aa3f97a3":"lm.score(X_test,y_test)","488e7092":"X = df.drop(['price'], axis=1)\ny = df.price\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=1)","e8262d82":"from sklearn import ensemble\nrf = ensemble.RandomForestRegressor()\nrf.fit(X_train, y_train)\ny_rf = rf.predict(X_test)\nprint(rf.score(X_test,y_test))","74d92041":"plt.figure(figsize=(12,12))\nplt.scatter(y_test, y_rf)\nplt.plot([y_test.min(),y_test.max()],[y_test.min(),y_test.max()], color='red', linewidth=3)\nplt.xlabel(\"Prix\")\nplt.ylabel(\"Prediction de prix\")\nplt.title(\"Prix reels vs predictions\")","d8aed95f":"sns.distplot(y_test-y_rf)","b5744794":"print(np.sqrt(mean_squared_error(y_test, y_rf)))","db7115ff":"rf.score(X_test,y_test)","967827b9":"import xgboost as XGB\nxgb  = XGB.XGBRegressor()\nxgb.fit(X_train, y_train)\ny_xgb = xgb.predict(X_test)\nprint(xgb.score(X_test,y_test))\n\nplt.figure(figsize=(12,12))\nplt.scatter(y_test, y_xgb)\nplt.plot([y_test.min(),y_test.max()],[y_test.min(),y_test.max()], color='red', linewidth=3)\nplt.xlabel(\"Prix\")\nplt.ylabel(\"Prediction de prix\")\nplt.title(\"Prix reels vs predictions\")","469758e0":"On peut tracer uniquement le **dendrogramme** des corr\u00e9lations entre les caract\u00e9ristiques. On utilise une forme \"condens\u00e9e\" de la matrice de corr\u00e9lation. *linkage* permet de calculer les distances entre caract\u00e9ristiques \u00e0 partir des corr\u00e9lations","c61476a2":"**Exercice** : donner l'importance des caract\u00e9ristiques","d45eac78":"## Exercice : utiliser le dataset de la valeur des maisons \u00e0 Boston\nhttps:\/\/www.kaggle.com\/schirmerchad\/bostonhoustingmlnd","211d6b10":"Pour visualiser l'ensemble du tableau de corr\u00e9lations, on utilise une \"carte de temp\u00e9ratures\" (*heatmap*) :","32f0e278":"On \u00e9limine la ligne MV elle-m\u00eame (qui est forc\u00e9ment \u00e0 1) :","3f52cc8a":"On peut aussi regrouper les param\u00e8tres par *clusters* class\u00e9s par proximit\u00e9 :","2ca841f9":"- id\n- date: Date house was sold(String)\n- price: Price of the sold house\n- bedrooms: Numer of Bedrooms\n- bathrooms: Numer of bathrooms\n- sqft_living: Square footage of the living room\n- sqrt_log: Square footage of the log\n- floors: Total floors in the house\n- waterfront: Whether the house has a view a waterfront(1: yes, 0: not)\n- view: unknown\n- condition: Condition of the house\n- grade: unknown\n- sqft_above: Square footage of house apart from basement\n- sqft_basement: Square footage of the basement\n- yr_built: Built year\n- yr_renovated: Year when the house was renovated\n- zipcode: zipcode of the house\n- lat: Latitude coordinate\n- long Longitude coordinate\n- sqft_living15: Living room area in 2015(implies some renovations)\n- sqrt_lot15: Lot area in 2015(implies some renovations)","ac5c41e1":"On trace le nuage de points pour comparer la pr\u00e9diction et les r\u00e9sultats attendus :","325aa746":"On utilise la fonction de r\u00e9gression lin\u00e9aire multiple de *sklearn* :","e7da3ccd":"## Recherche de corr\u00e9lations","c1d49829":"## Lecture du fichier","7f962180":"## R\u00e9gression par for\u00eats al\u00e9atoires","fc3792ca":"et le nombre de maisons vendues :","5632d6c0":"On va utiliser les for\u00eats al\u00e9atoires pour la r\u00e9gression. On conserve l'ensemble des caract\u00e9ristiques","3978733a":"# Exemple d'analyse d'un dataset : prix des maisons \u00e0 Seattle","bfe369ab":"qu'on peut \u00e9crire plus simplement :","ba732009":"Les corr\u00e9lations fortement n\u00e9gatives sont aussi significatives que les positives ; on consid\u00e8re donc les valeurs absolues, et on trie par ordre d\u00e9croissant :","8fb60c88":"ou on peut visualiser la distribution de l'erreur avec *seaborn* :","756b2fb5":"On supprime du dataset l'identifiant id, et la date (que nous avons convertie en mois et ann\u00e9e)","bd222acf":"Pour la r\u00e9gression lin\u00e9aire, on se limite aux maisons de moins de 1M$, et on \u00e9limine les *features* discr\u00e8tes :","c48dc28c":"On dispose des statistiques de vente des maisons du district de Seattle ","dc396b1f":"On s'int\u00e9resse plus pr\u00e9cis\u00e9ment \u00e0 la valeur des maisons :","adc05801":"Ou le *score R2* (rapport des variances estim\u00e9e\/r\u00e9elle) :\n(https:\/\/fr.wikipedia.org\/wiki\/Coefficient_de_d%C3%A9termination)","6f37ac22":"On a vu assez clairement la corr\u00e9lation entre le nombre de pi\u00e8ces et la valeur.  \nOn va utiliser la fonction *corr* pour calculer syst\u00e9matiquement le degr\u00e9 de corr\u00e9lation entre deux param\u00e8tres :","d874030c":"On voit que la plus forte corr\u00e9lation concerne la surface","b8ef179c":"**Exemple de r\u00e9gressions**","fd531b6d":"**Exercice** : visualiser les maisons par quartiers (zipcode)  \n**Exercice** : visualiser les maisons de moins de 1 million de dollars par prix. On pourra aussi faire varier la taille du point en fonction de la surface de la propri\u00e9t\u00e9\n**Exercice** : visualiser la densit\u00e9 des propri\u00e9t\u00e9s avec *jointplot*","9f6f2a52":"# R\u00e9gression lin\u00e9aire multiple","1b7b2cb4":"## Importations des librairies courantes","d78780c0":"On s\u00e9pare les caract\u00e9ristiques continues et discr\u00e8tes :","df9386cf":"On peut calculer l'erreur sur les moindres carr\u00e9s :","1588c611":"<img src=\"https:\/\/sightline-wpengine.netdna-ssl.com\/wp-content\/uploads\/2012\/04\/Sprawl_Walkability_CS06m_hi.jpg\">","6404bd2e":"On affiche un graphique montrant l'\u00e9volution du prix moyen en fonction de la date :"}}