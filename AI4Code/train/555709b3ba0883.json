{"cell_type":{"e8a5b005":"code","6d4e893e":"code","72d77bb9":"code","44ff5932":"code","f9fa742f":"code","2c67e5b6":"code","cbffd91a":"code","f286d6be":"code","6db99c45":"code","ce826794":"code","206bbbde":"code","ea306552":"code","b43fd007":"markdown","fdb6a41c":"markdown"},"source":{"e8a5b005":"import numpy as np \n\nimport pandas as pd\npd.options.mode.chained_assignment = None  # default='warn'\n\nimport ast","6d4e893e":"# Importando dados\ndf_filmes = pd.read_csv('..\/input\/the-movies-dataset\/movies_metadata.csv', low_memory=False)\n\n# Listando as 5 primeiras linhas do arquivo importado\ndf_filmes.head()","72d77bb9":"# Exibindo informa\u00e7\u00f5es do arquivo importado\ndf_filmes.info()","44ff5932":"# Corrige datas de lan\u00e7amento inexistentes para o ano de 1870 para serem futuramente ignoradas\ndf_filmes['release_date'] = df_filmes['release_date'].fillna('1870-01-01')\n\n# Cria\u00e7\u00e3o da coluna Ano de produ\u00e7\u00e3o\n# Utilizando o campo release_date\ndf_filmes['ano'] = pd.to_datetime(df_filmes['release_date'], errors='coerce').apply(lambda x: str(x).split('-')[0] if x != np.nan else np.nan)\n\n# Transforma a dura\u00e7ao do filme para 0, quando inexistente\ndf_filmes['runtime'] = df_filmes['runtime'].fillna('0.0')\n\n# Remove os itens duplicados\ndf_filmes = df_filmes.drop_duplicates(subset='id', keep=\"first\")","f9fa742f":"# Cria um dataframe de dimens\u00e3o pais produtor do filme\n# Transofrma o campo production_countries, que est\u00e1 no formato JSON\ndf_pais = df_filmes[['id', 'production_countries']]\ndf_pais['production_countries'] = df_pais['production_countries'].fillna('[]').apply(ast.literal_eval).apply(lambda x: [i['name'] for i in x] if isinstance(x, list) else [])\n\n# Cria um dataframe com o ID do filme e o pa\u00eds produtor\n# O ID do filme pode se repetir uma vez que um filme pode ter v\u00e1rios pa\u00edses produtores em conjunto\nrows = []\n_ = df_pais.apply(lambda row: [rows.append([row['id'], nn]) \n                         for nn in row.production_countries], axis=1)\ndf_pais = pd.DataFrame(rows, columns=df_pais.columns)","2c67e5b6":"# Cria um dataframe de dimens\u00e3o g\u00eanero do filme\n# Transofrma o campo genres, que est\u00e1 no formato JSON\ndf_genero_filmes = df_filmes[['id', 'genres']]\ndf_genero_filmes['genres'] = df_genero_filmes['genres'].fillna('[]').apply(ast.literal_eval).apply(lambda x: [i['id'] for i in x] if isinstance(x, list) else [])\n\n# Cria um dataframe com o ID do filme e o ID do genero\n# O ID do filme pode se repetir uma vez que um filme pode ter v\u00e1rios g\u00eaneros\nrows = []\n_ = df_genero_filmes.apply(lambda row: [rows.append([row['id'], nn]) \n                         for nn in row.genres], axis=1)\ndf_genero_filmes = pd.DataFrame(rows, columns=df_genero_filmes.columns)","cbffd91a":"# Cria um dataframe de dimens\u00e3o tipos_genero\ndf_genero = df_filmes['genres'].dropna().apply(ast.literal_eval)\ndf_genero = pd.concat([pd.DataFrame(x) for x in df_genero], sort=False)\n\n# Remove os itens duplicados e gera o dataframe final com o ID do genero e sua descri\u00e7\u00e3o\ndf_genero =  df_genero.groupby(by=[\"id\"], as_index=False).first()","f286d6be":"# Cria um dataframe de dimens\u00e3o produtor do filme\n# Transofrma o campo production_companies, que est\u00e1 no formato JSON\ndf_produtor_filmes = df_filmes[['id', 'production_companies']]\ndf_produtor_filmes['production_companies'] = df_produtor_filmes['production_companies'].fillna('[]').apply(ast.literal_eval).apply(lambda x: [i['id'] for i in x] if isinstance(x, list) else [])\n\n# Cria um dataframe com o ID do filme e o ID do produtor\n# O ID do filme pode se repetir uma vez que um filme pode ter sido produzido por vairos produtores\nrows = []\n_ = df_produtor_filmes.apply(lambda row: [rows.append([row['id'], nn]) \n                         for nn in row.production_companies], axis=1)\ndf_produtor_filmes = pd.DataFrame(rows, columns=df_produtor_filmes.columns)","6db99c45":"# Cria um dataframe de dimens\u00e3o produtores\n# Cada produtor ter\u00e1 um ID\ndf_produtor = df_filmes['production_companies'].dropna().apply(ast.literal_eval)\ndf_produtor =  df_produtor[df_produtor.astype(bool) & df_produtor.notnull()]\n\ndf_produtor = pd.concat([pd.DataFrame(x) for x in df_produtor], sort=False)\n\n# Remove os itens duplicados e gera o dataframe final com o ID do genero e sua descri\u00e7\u00e3o\ndf_produtor =  df_produtor.groupby(by=[\"id\"], as_index=False).first()","ce826794":"# Limpeza de colunas desnecess\u00e1rias\ndf_filmes = df_filmes.drop(['imdb_id', 'homepage', 'original_title', 'production_companies', 'genres', 'production_countries', 'belongs_to_collection', 'video', 'popularity', 'adult', 'spoken_languages'], axis=1)\n\n# Limpeza do texto da descri\u00e7\u00e3o\ndf_filmes['overview'] = df_filmes['overview'].str.replace(';',',').str.replace('\\n','', regex=True)\n\n# Limpeza do texto do resumo\ndf_filmes['tagline'] = df_filmes['tagline'].str.replace(';',',').str.replace('\\n','', regex=True)","206bbbde":"# Exporta DataFrames para arquivos CSV\n\ndf_pais.to_csv('df_pais.csv', sep=';', index=False)\ndf_genero_filmes.to_csv('df_genero_filmes.csv', sep=';', index=False)\ndf_genero.to_csv('df_genero.csv', sep=';', index=False)\ndf_produtor_filmes.to_csv('df_produtor_filmes.csv', sep=';', index=False)\ndf_produtor.to_csv('df_produtor.csv', sep=';', index=False)\ndf_filmes.to_csv('df_filmes.csv', sep=';', index=False)","ea306552":"# Gera link CSV\n#from IPython.display import HTML\n#def create_download_link(filename):  \n#    title = \"Download CSV file\" \n#    html = '<a href={filename}>{title}<\/a>'\n#    html = html.format(title=title,filename=filename)\n#    return HTML(html)\n\n# create a link to download the dataframe which was saved with .to_csv method\n#create_download_link('df_filmes.csv')","b43fd007":"### **(E)**xtract\n\nImporta\u00e7\u00e3o da base de filmes do The Movies DataSet, projeto opensource presente no projeto do kaggle, dispon\u00edvel em: https:\/\/www.kaggle.com\/rounakbanik\/the-movies-dataset\n\nA base foi incorporada ao projeto e est\u00e1 presente na pasta ..\/input, de onse se far\u00e1 a importa\u00e7\u00e3o.\n","fdb6a41c":"### **(T)**ransform"}}