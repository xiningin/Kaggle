{"cell_type":{"3d7dde71":"code","b5e7af62":"code","5150589e":"code","3f37fd05":"code","cee7b890":"code","fddd395a":"code","2287dd63":"code","853ce5a2":"code","a5c2fc0b":"code","67330eea":"code","6fff2dec":"code","1a11b75a":"code","fd25c1e3":"code","85fee5bd":"code","003ff892":"code","419b0685":"code","5e567913":"code","b1dd5dfc":"markdown","844b0485":"markdown","cb470d76":"markdown"},"source":{"3d7dde71":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b5e7af62":"import warnings\nwarnings.filterwarnings('ignore')\nfrom PIL import ImageFile\nImageFile.LOAD_TRUNCATED_IMAGES = True","5150589e":"from fastai.vision.all import *","3f37fd05":"path = Path('..\/input\/yoga-classes\/DATASET')","cee7b890":"data = ImageDataLoaders.from_folder(path, train='TRAIN', valid='TEST', valid_pct=None, seed=None, vocab=None, item_tfms=Resize(400), batch_tfms=aug_transforms(size=224, min_scale=0.75), bs=20, val_bs=None, shuffle_train=True, device=None)","fddd395a":"data.show_batch()","2287dd63":"learn = cnn_learner(data,resnet34,metrics=[accuracy])","853ce5a2":"learn.model_dir='\/kaggle\/output'\nlearn.lr_find()","a5c2fc0b":"learn.fine_tune(4,base_lr=1e-3,freeze_epochs=2)","67330eea":"intrep = ClassificationInterpretation.from_learner(learn)","6fff2dec":"intrep.most_confused(min_val=5)","1a11b75a":"intrep.plot_top_losses(5, nrows=1)","fd25c1e3":"learn.save('stage1-96%-1e-3')","85fee5bd":"learn.load('stage1-96%-1e-3')","003ff892":"learn.fine_tune(2,1e-6)","419b0685":"learn.save('stage2-97%')","5e567913":"learn.model_dir='\/kaggle\/output'","b1dd5dfc":"# Load Data","844b0485":"# Load pretrained model\nI have used transfer learning on Resnet34 which has 34 layers.","cb470d76":"# Import Libraries"}}