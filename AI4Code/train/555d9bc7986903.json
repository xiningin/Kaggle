{"cell_type":{"3d32e286":"code","c591f6b7":"code","6f696a4b":"code","85003450":"code","1886dbcb":"code","233c9068":"code","45e1e115":"code","9d662bf4":"code","d19fab5a":"code","6ef502df":"code","ac9b145b":"code","e4e465c8":"code","c8ea0570":"code","fcc9b0b1":"code","47a20ee2":"code","1eeaaf28":"code","0f979eba":"code","92c04dc4":"code","667ad6c9":"code","4cf1224f":"code","ae305b16":"code","ee8dddbe":"code","bfd01959":"code","5737bac4":"code","0e40c1ed":"code","77f0d33b":"code","8fc1f745":"code","5f54bc31":"code","94f1e47b":"code","969e5785":"code","b403b01c":"code","8d9b4930":"code","a8014437":"code","eb088490":"code","6868be49":"code","c5eb9409":"code","c1460824":"code","574bf3b4":"code","0dbf6ee5":"code","02b22c41":"code","375b1c51":"code","e567ed49":"code","395b36ce":"code","d6479038":"code","3c90a59e":"code","52f9ec3b":"code","5ac3ac69":"code","317fac5c":"markdown","4e2aebb6":"markdown","5fd7d45a":"markdown","ccb34f69":"markdown","c2e5a973":"markdown","335b4f6f":"markdown","943162e9":"markdown","7753f003":"markdown","cef45cfb":"markdown","76da01a6":"markdown","ec9e7f1e":"markdown","379455ee":"markdown","7db25c64":"markdown","ab739f80":"markdown","6c31fbf3":"markdown","568e3b38":"markdown","7c44a9a0":"markdown","f136013f":"markdown","ca9a0668":"markdown"},"source":{"3d32e286":"#  import the necessary libraries and load the files needed for Exploratory Data Analysis\n\nimport pandas as pd  # data manipulation\nimport numpy as np   # linear algebra\nimport seaborn as sns \nimport matplotlib.pyplot as plt # matplotlib for plotting graphs\n\n# %matplotlib inline renders plot inline on your page\n%matplotlib inline","c591f6b7":"pip install hvplot","6f696a4b":"import hvplot.pandas\nfrom scipy import stats","85003450":"# read the csv file and load to a dataframe\n#Pre-requisite\n\n#Location of dataset file\nfile = \"..\/input\/prediction-of-sepsis\/Dataset.csv\"\n\ndf = pd.read_csv(file)","1886dbcb":"# By default , python displays few rows and columns. \n# Set the below parameters so that all rows and columns would be visible\n\npd.set_option(\"display.max_columns\", None)\npd.set_option(\"display.max_rows\", None)","233c9068":"#Calculate the number of rows and columns in the sheet\n\ndf.shape","45e1e115":"df.head()","9d662bf4":"df.tail()","d19fab5a":"# display datatype of each column\ndf.dtypes","6ef502df":"#check the statistics of all columns\n\ndf.describe(include=\"all\",datetime_is_numeric=True)","ac9b145b":"round(100*(df.isnull().sum()\/len(df.index)),2).plot.bar(figsize=(15,5))","e4e465c8":"# get the list of patients who have sepsis\nseptic_shock_patients=df['Patient_ID'][df['SepsisLabel']==1].unique()","c8ea0570":"# construct dataframe of patients with sepsis alone\nseptic_df=df[df.Patient_ID.isin(septic_shock_patients)]","fcc9b0b1":"# get the list of patients who have sepsis before admission to ICU\nadmitted_with_sepsis_patients=df['Patient_ID'][(df['SepsisLabel']==1) & (df['Hour']==0)]","47a20ee2":"# construct dataframe of patients who have sepsis before admission to ICU\nadmitted_with_sepsis_df=df[df.Patient_ID.isin(admitted_with_sepsis_patients)]","1eeaaf28":"# construct dataframe of patients who have sepsis after admission to ICU\nsepsis_after_adm_df=septic_df.merge(admitted_with_sepsis_df, how = 'outer' ,indicator=True).loc[lambda x : x['_merge']=='left_only']","0f979eba":"# construct dataframe of patients who have no sepsis\nnon_septic_df = df.merge(septic_df, how = 'outer' ,indicator=True).loc[lambda x : x['_merge']=='left_only']","92c04dc4":"# add a new column sepsisType in dataframe with value null\ndf['sepsisType']=np.nan","667ad6c9":"# update sepsisType to SepsisBeforeAdm for patients who were admitted to ICU with sepsis\ndf.loc[df.Patient_ID.isin(admitted_with_sepsis_patients), 'sepsisType'] = 'SepsisBeforeAdm'","4cf1224f":"# update sepsisType to SepsisAfterAdm for patients who contracted sepsis after admission to ICU\ndf.loc[df.Patient_ID.isin(septic_shock_patients) & df['sepsisType'].isnull(), 'sepsisType'] = 'SepsisAfterAdm'","ae305b16":"# update sepsisType to NonSepsis for patients who never got Sepsis\ndf.loc[df['sepsisType'].isnull(), 'sepsisType'] = 'NonSepsis'","ee8dddbe":"df['sepsisType'].value_counts()","bfd01959":"df['sepsisType'].value_counts().plot.bar()","5737bac4":"df.head()","0e40c1ed":"#total no:of patients\nlen(pd.unique(df['Patient_ID']))","77f0d33b":"#total number of septic patients whose are sepsis after admission\nlen(pd.unique(sepsis_after_adm_df['Patient_ID']))\n\nlen(pd.unique(non_septic_df['Patient_ID']))","8fc1f745":"#total no:of septic patients\nlen(pd.unique(septic_df['Patient_ID']))","5f54bc31":"#total number of septic patients whose are sepsis before admission\nlen(pd.unique(admitted_with_sepsis_df['Patient_ID']))","94f1e47b":"#df['hasSIRS'] = np.where(df['Temp']!= '[]', True, False)\ncondition=(np.isnan(df['Temp'])& np.isnan(df['HR'])& np.isnan(df['Resp']) &np.isnan(df['WBC']))","969e5785":"df['hasSIRS'] = np.where(condition, 1, 0)","b403b01c":"df['hasSIRS'].value_counts()","8d9b4930":"condition_temp=(df['Temp']>38) |( df['Temp']<36)\ncondition_HR=(df['HR']>90)\ncondition_Resp=(df['Resp']>20) |( df['PaCO2']<32)\ncondition_wbc=(df['WBC']>12000) |( df['WBC']<4000)","a8014437":"df['SIRS_Score']=np.where(condition_temp, 1, 0)+np.where(condition_HR, 1, 0)+np.where(condition_Resp, 1, 0)+np.where(condition_wbc, 1, 0)","eb088490":"df['SIRS_Score'].value_counts()","6868be49":"df['SIRS_Score'].value_counts().plot.bar()","c5eb9409":"#df.to_csv('sepsistype_updated_df.csv')","c1460824":"df.SepsisLabel.value_counts().hvplot.bar(\n    title=\"Sepsis Count\", xlabel='Sepsis Lebel', ylabel='Count', \n    width=500, height=350\n)","574bf3b4":"have_disease = df.loc[df['SepsisLabel']==1, 'Gender'].value_counts().hvplot.bar(alpha=0.4) \nno_disease = df.loc[df['SepsisLabel']==0, 'Gender'].value_counts().hvplot.bar(alpha=0.4) \n\n(no_disease * have_disease).opts(\n    title=\"Sepsis by Gender\", xlabel='Gender', ylabel='Count',\n    width=500, height=450, legend_cols=2, legend_position='top_right'\n)","0dbf6ee5":"sns.histplot(data=septic_df, x=\"Lactate\",hue=\"SepsisLabel\", kde=True,bins=20)","02b22c41":"sns.histplot(data=septic_df, x=\"BaseExcess\",hue=\"SepsisLabel\", kde=True,bins=20)","375b1c51":"sns.histplot(data=septic_df, x=\"Alkalinephos\",hue=\"SepsisLabel\", kde=True,bins=20)","e567ed49":"df[['Alkalinephos','BaseExcess','Lactate']].plot(kind='box')","395b36ce":"# Let's make our correlation matrix a little prettier\ncorr_matrix = df[['Alkalinephos','BaseExcess','Lactate']].corr()\nfig, ax = plt.subplots(figsize=(10, 10))\nax = sns.heatmap(corr_matrix,\n                 annot=True,\n                 linewidths=0.5,\n                 fmt=\".10f\",\n                 cmap=\"YlGnBu\");\nbottom, top = ax.get_ylim()\nax.set_ylim(bottom + 0.5, top - 0.5)","d6479038":"df.drop('SepsisLabel', axis=1).corrwith(df.SepsisLabel).hvplot.barh(\n    width=600, height=650, \n    title=\"Correlation between Sepsis and Numeric Features\", \n    ylabel='Correlation', xlabel='Numerical Features',\n)","3c90a59e":"data1=df.loc[:, ['BaseExcess', 'Lactate','Alkalinephos','SepsisLabel']]","52f9ec3b":"data1.drop('SepsisLabel', axis=1).corrwith(data1.SepsisLabel).hvplot.barh(\n    width=400, height=400, \n    title=\"Correlation between Sepsis and Numeric Features\", \n    ylabel='Correlation', xlabel='Numerical Features',\n)","5ac3ac69":"sns_plot=sns.pairplot(df,vars=['Lactate','Alkalinephos','BaseExcess'])\n#sns_plot.savefig(\"pairplot.png\")","317fac5c":"<p style=\"padding: 10px;\n          color:#FFFFFF;\n          font-weight: bold;\n          text-align: center;\n          background-color:#006400;\n          font-size:260%;\">\nOverview of Data\n     <\/p>","4e2aebb6":"<p style=\"padding: 10px;\n          color:#FFFFFF;\n          font-weight: bold;\n          text-align: center;\n          background-color:#006400;\n          font-size:260%;\">\nData Preprocessing\n     <\/p>","5fd7d45a":"<p style=\"padding: 10px;\n          color:#000000;\n          font-weight: bold;\n          text-align: center;\n          background-color:#FFFFFF;\n          font-size:150%;\">\nCalculate SIRS\n     <\/p>","ccb34f69":"<p style=\"padding: 10px;\n          color:#FFFFFF;\n          font-weight: bold;\n          text-align: center;\n          background-color:#006400;\n          font-size:260%;\">\nLoading Data\n     <\/p>","c2e5a973":"columns belong to int , float , datetime and object datatypes.","335b4f6f":"<p style=\"padding: 10px;\n          color:#FFFFFF;\n          font-weight: bold;\n          text-align: center;\n          background-color:#006400;\n          font-size:260%;\">\nExploratory Data Analysis\n     <\/p>","943162e9":"<p style=\"padding: 10px;\n          color:#000000;\n          font-weight: bold;\n          text-align: center;\n          background-color:#FFFFFF;\n          font-size:150%;\">\nBoxplot\n     <\/p>","7753f003":"<p style=\"padding: 10px;\n          color:#FFFFFF;\n          font-weight: bold;\n          text-align: center;\n          background-color:#006400;\n          font-size:260%;\">\nAnalysis of Missing Values\n     <\/p>","cef45cfb":"<p style=\"padding: 10px;\n          color:#000000;\n          font-weight: bold;\n          text-align: center;\n          background-color:#FFFFFF;\n          font-size:150%;\">\nCorrelation\n     <\/p>","76da01a6":"<p style=\"padding: 10px;\n          color:#000000;\n          font-weight: bold;\n          text-align: center;\n          background-color:#FFFFFF;\n          font-size:150%;\">\nBar Charts\n     <\/p>","ec9e7f1e":"<p style=\"padding: 10px;\n          color:#000000;\n          font-weight: bold;\n          text-align: center;\n          background-color:#FFFFFF;\n          font-size:150%;\">\nDivide patients to 3 types - NonSepsis, SepsisAfterAdm , SepsisBeforeAdm\n     <\/p>","379455ee":"<p style=\"padding: 10px;\n          color:#000000;\n          font-weight: bold;\n          text-align: center;\n          background-color:#FFFFFF;\n          font-size:150%;\">\nHistograms\n     <\/p>","7db25c64":"### For all lab values , more than 80% of data are missing","ab739f80":"<p style=\"padding: 10px;\n          color:#FFFFFF;\n          font-weight: bold;\n          text-align: center;\n          background-color:#006400;\n          font-size:260%;\">\nImporting Libraries\n     <\/p>","6c31fbf3":"<b>Problem Statement:<\/b> <p> Sepsis is a life-threatening condition that occurs when the body's response to infection causes tissue damage, organ failure, or death (Singer et al., 2016). In the U.S., nearly 1.7 million people develop sepsis and 270,000 people die from sepsis each year; over one third of people who die in U.S. hospitals have sepsis (CDC).<\/p>\n\n<p>Early detection and antibiotic treatment of sepsis are critical for improving sepsis outcomes, where each hour of delayed treatment has been associated with roughly an 4-8% increase in mortality.<\/p>\n\n<b>Overal Goal: <\/b><p>\n**<span style=\"color:#008000;\">The goal of this Hackathon series is the early detection of sepsis using physiological data.<\/span>**<\/p>\n\n<b>Hackathon Part 2 Goal: <\/b><p>\n**<span style=\"color:#008000;\">The goal of this week hackathon is to analyse the effect of BASE EXCESS , ALKALINE PHOS and LACTATE on Sepsis Incidence<\/span>**<\/p>","568e3b38":"<p style=\"padding: 10px;\n          color:#000000;\n          font-weight: bold;\n          text-align: center;\n          background-color:#FFFFFF;\n          font-size:150%;\">\nExport CSV with SepsisType and SIRS Score\n     <\/p>","7c44a9a0":"Important parameters like minimum value , maximum value , count , mean etc of all the columns can be seen using describe command.","f136013f":"<p style=\"padding: 10px;\n          color:#FFFFFF;\n          font-weight: bold;\n          text-align: center;\n          background-color:#006400;\n          font-size:260%;\">\nEarly Prediction of Sepsis\n     <\/p>","ca9a0668":"As we can see from the plot, it is a case of severe data imbalance . There are multiple methods that we could try to balance it (Over sampling or Undersampling) or even proceed without balancing\nbut we chose to select only the patients who contracted sepsis before or after admission to ICU"}}