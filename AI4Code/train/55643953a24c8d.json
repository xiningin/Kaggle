{"cell_type":{"58997a08":"code","4342396c":"code","0b252435":"code","ffde02aa":"code","0cb06fcd":"code","86a52584":"code","9570641a":"code","e6e3035a":"code","2313dd1f":"code","c4344b53":"code","88130a6c":"code","fd0995b9":"code","8d983ebf":"code","8a414663":"code","b5638f31":"code","5f31937c":"code","f954d770":"code","c49a0eb9":"code","624b92f3":"code","c7c5b103":"code","badf366c":"code","b44f528e":"code","89971dda":"code","a57286f6":"code","31ca0de0":"code","db2212f5":"code","e770522e":"code","a132bad9":"code","64ab2f02":"code","902e49e3":"code","7cc1cc77":"code","9bd910ee":"code","3f694fe8":"code","93b7c60c":"code","a1e00357":"code","9cef2e12":"code","9b107b9a":"code","88e7de4c":"code","ba6adf6f":"code","2a030a62":"code","cea6dfde":"code","27dab2e8":"code","4c8cce5f":"code","74189697":"code","0a0ba3ae":"code","09a2c4b2":"code","2fee7b0e":"code","48f36494":"code","17a74df1":"code","330a3742":"code","a8a73d85":"code","c6c8344b":"code","e11b66a5":"code","01a12eaa":"code","599e023f":"markdown","bb5a8ad4":"markdown","7e2fecc0":"markdown","0a601510":"markdown","ba4afb04":"markdown","b3060d85":"markdown","c6350036":"markdown","9306225e":"markdown","6ad273b4":"markdown","023221b2":"markdown","9814fb7a":"markdown","3790743c":"markdown"},"source":{"58997a08":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('darkgrid')\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4342396c":"df = pd.read_csv(\"..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv\")","0b252435":"df","ffde02aa":"df.head()","0cb06fcd":"df.tail()","86a52584":"df.info()","9570641a":"df.describe()","e6e3035a":"categorical_df = df.select_dtypes(include = [\"object\"])\ncategorical_df","2313dd1f":"categorical_df.describe()","c4344b53":"df.columns","88130a6c":"unique_list = []\nfor i in df.columns:\n    unique_list.append(np.unique(df[i]))","fd0995b9":"unique_list","8d983ebf":"for i in df.columns:\n    plt.figure(figsize = (10,6))\n    plt.title(\"Count vs \"+i)\n    sns.histplot(data = df, x = i, element = 'bars')","8a414663":"plt.figure(figsize = (10,6))\nplt.title(\"id\")\nsns.regplot(x = df['id'], y = df['stroke'])","b5638f31":"plt.figure(figsize = (10,6))\nsns.lineplot(x = df['stroke'], y = df['id'])","5f31937c":"plt.figure(figsize = (10,6))\nplt.title(\"\")\nsns.regplot(x = df['avg_glucose_level'], y = df['stroke'])","f954d770":"sns.lmplot(data = df, x = 'avg_glucose_level', y = 'stroke', hue = 'smoking_status')","c49a0eb9":"plt.figure(figsize = (10,6))\nsns.histplot(df, x=\"stroke\", hue = \"gender\", element = 'poly')","624b92f3":"plt.figure(figsize = (10,6))\nsns.swarmplot(x = df['gender'], y = df['bmi'])","c7c5b103":"sns.lineplot(x = df['gender'], y = df['bmi'])","badf366c":"plt.figure(figsize = (10,6))\nsns.lineplot(x = df['age'], y = df['bmi'])","b44f528e":"plt.figure(figsize = (10,6))\nsns.lineplot(x = df['work_type'], y = df['bmi'])","89971dda":"plt.figure(figsize = (10,6))\nsns.barplot(x = df['gender'], y = df['bmi'])","a57286f6":"plt.figure(figsize = (10,6))\nplt.title(\"age vs bmi\")\n#plt.xlabel(\"\")\n#plt.ylabel(\"\")\nsns.scatterplot(x = df[\"age\"], y = df[\"bmi\"], hue = df['gender'])","31ca0de0":"plt.figure(figsize = (10,6))\nplt.title(\"\")\n#plt.xlabel(\"\")\n#plt.ylabel(\"\")\nsns.barplot(x = df[\"hypertension\"], y = df[\"age\"])","db2212f5":"plt.figure(figsize = (10,6))\nplt.title(\"\")\n#plt.xlabel(\"\")\n#plt.ylabel(\"\")\nsns.barplot(x = df[\"heart_disease\"], y = df[\"age\"])","e770522e":"plt.figure(figsize = (6,6))\nplt.title(\"\")\n#plt.xlabel(\"\")\n#plt.ylabel(\"\")\nsns.barplot(y = df[\"stroke\"], x = df[\"smoking_status\"], hue = df[\"gender\"])","a132bad9":"plt.figure(figsize = (6,6))\nplt.title(\"\")\n#plt.xlabel(\"\")\n#plt.ylabel(\"\")\nsns.barplot(y = df[\"stroke\"], x = df[\"smoking_status\"], hue = df[\"heart_disease\"])","64ab2f02":"plt.figure(figsize = (10,6))\nplt.title(\"\")\n#plt.xlabel(\"\")\n#plt.ylabel(\"\")\nsns.barplot(x = df[\"stroke\"], y = df[\"bmi\"], hue = df[\"gender\"])","902e49e3":"plt.figure(figsize = (10,6))\nplt.title(\"\")\n#plt.xlabel(\"\")\n#plt.ylabel(\"\")\nsns.barplot(x = df[\"stroke\"], y = df[\"avg_glucose_level\"], hue = df[\"gender\"])","7cc1cc77":"plt.figure(figsize = (15,15))\nsns.pairplot(df)","9bd910ee":"plt.figure(figsize = (15,15))\nsns.pairplot(df, kind = 'hist')","3f694fe8":"plt.figure(figsize = (15,15)) \nsns.pairplot(df, kind = 'kde')","93b7c60c":"plt.figure(figsize = (15,15))\nsns.pairplot(df, x_vars = ['bmi', 'avg_glucose_level', 'age'], y_vars = ['bmi', 'avg_glucose_level', 'age'], hue = 'stroke', diag_kind = 'hist')","a1e00357":"plt.figure(figsize = (15,15))\nsns.pairplot(df, x_vars = ['bmi', 'avg_glucose_level', 'age'], y_vars = ['bmi', 'avg_glucose_level', 'age'], hue = 'hypertension', diag_kind = 'hist')","9cef2e12":"plt.figure(figsize = (15,15))\nsns.pairplot(df, x_vars = ['bmi', 'avg_glucose_level', 'age'], y_vars = ['bmi', 'avg_glucose_level', 'age'], hue = 'heart_disease', diag_kind = 'hist')","9b107b9a":"df.drop(columns='id', inplace = True)","88e7de4c":"df","ba6adf6f":"df.isnull().sum()","2a030a62":"percent_null = ((df.isnull().sum())\/df.isnull().count()).sort_values(ascending=False) * 100\npercent_null","cea6dfde":"df['bmi'][df['gender'] == 'Other']","27dab2e8":"other = df['gender'][df['gender'] == 'Other']\nother","4c8cce5f":"male_bmi = df['bmi'][df['gender'] == 'Male']\nfemale_bmi = df['bmi'][df['gender'] == 'Female']\nmale_bmi_mean = male_bmi.mean()\nfemale_bmi_mean = female_bmi.mean()\nmale_bmi.fillna(male_bmi_mean, inplace = True)\nfemale_bmi.fillna(female_bmi_mean, inplace = True)","74189697":"temp = pd.concat([male_bmi, female_bmi])","0a0ba3ae":"df['bmi'] = temp","09a2c4b2":"df.isnull().sum()","2fee7b0e":"df['bmi'].values","48f36494":"df['bmi'].isnull().sum()","17a74df1":"df","330a3742":"df.dropna(axis = 0, inplace = True)","a8a73d85":"df['bmi'].isnull().sum()","c6c8344b":"categorical_df","e11b66a5":"df = pd.get_dummies(df)","01a12eaa":"df","599e023f":"# Data Cleaning","bb5a8ad4":"so, if we will think somewhat that every person who have weight and height will have BMI, Means this values are missing beacause it is not recorded. So, we will fill this values. Now, there are option like -> we will fill this values either by mean of BMI or by correlation of gender, age of any other columns. For this we will observe or visualization.","7e2fecc0":"# Data Examining and Visualization","0a601510":"From here we can see that who suffer from stroke generally have high BMI but its not like those who have large BMI will suffer stroke.","ba4afb04":"I observed here with ploting the regression plots, that we have to predict our data as 0 and 1 and we are seeing in this plots also how points are plotted as either 0 or 1 and there regression line. so, its not a good idea to implement mutiple linear regreession on this model.\n  we have to think for the other classification algorithms like SVM or logistic regression etc.","b3060d85":"BMI have very less null value so we will just fill that values, but before that we have to do some research like why this values are missing i.e., missing beacause not recorded or missing beacause does not exist.","c6350036":"Finally we came up with a dataset with no null values.","9306225e":"This plot is pritty clear and we can observe that dataset is quite imbalanced, the number of stroke is very less then the non stroke.\n   Females are more stroke suffering then males according to the graph.","6ad273b4":"id is only the unique identifier and nothing else. It is not directly showing any correlation with the stroke and i think it is of no use in our model.","023221b2":"### we need to convert the categorical features.","9814fb7a":"# Data Loading","3790743c":"we can see from plots that BMI is best predited by gender."}}