{"cell_type":{"e1cf56f0":"code","4de1056b":"code","0cfdba4e":"code","6b7a4a4d":"code","d563cd76":"code","1c24eba1":"code","dc970a25":"code","d87ef215":"code","7aeae2d4":"code","fb48b629":"code","6b9b72e5":"code","0b42fa00":"code","bbb46604":"code","23d9d284":"code","61e6caac":"code","fed3ef50":"code","feb46a05":"code","aa5a4faa":"code","bc6baea1":"code","ee031df6":"code","0a692ad0":"code","ad9ef051":"code","66f5a0b3":"code","3e55e1ba":"code","3f47f92b":"code","2fd8ffb0":"code","adcd0b08":"code","e291d114":"code","7a6564bb":"code","85feeffe":"code","0db168a8":"code","e11f60bf":"code","9ba068c6":"code","4453a1b6":"markdown","a692ee8d":"markdown","629dc84d":"markdown","d93a0643":"markdown","313e04df":"markdown","72f4a617":"markdown","4ad11907":"markdown","5e1ea0da":"markdown","c12e7916":"markdown","7f9cee71":"markdown","8ec60308":"markdown","d0e79842":"markdown","937a62c3":"markdown","03da590e":"markdown","5dea8b35":"markdown","c79f9324":"markdown","6b61d316":"markdown","f39d7020":"markdown","d42f094e":"markdown","ea5267a4":"markdown","a470b096":"markdown","70c63b45":"markdown","fa0cc6f7":"markdown","a03b9055":"markdown","23c05dd3":"markdown"},"source":{"e1cf56f0":"import pandas as pd","4de1056b":"df = pd.read_csv(\"https:\/\/raw.githubusercontent.com\/dphi-official\/Datasets\/master\/iris.csv\")","0cfdba4e":"df.head()","6b7a4a4d":"df.info()","d563cd76":"df.isnull().sum()","1c24eba1":"iris = df\niris.describe()","dc970a25":"print(df.shape)","d87ef215":"print(\"What categories are there and how many instances for each category?\\n\")\nprint(iris[\"variety\"].value_counts())\nprint(\"\\n\\nWhat are the unique categories?\")\nprint(iris[\"variety\"].unique())\n# How many unique values are there\nprint(\"\\n\\nHow many unique categories there are?\")\nprint(iris[\"variety\"].nunique())\nprint(\"\\n\\nWhat is the shape of our dataframe?\")\nprint(iris.shape)","7aeae2d4":"iris.loc[iris[\"variety\"] == \"Iris-setosa\", [\"variety\"]] = \"Setosa\"\niris.loc[iris[\"variety\"] == \"Iris-virginica\", [\"variety\"]] = \"Virginica\"\niris.loc[iris[\"variety\"] == \"Iris-versicolor\", [\"variety\"]] = \"Versicolor\"\niris.head()","fb48b629":"import seaborn as sns\nsns.countplot(x='variety', data=iris)","6b9b72e5":"import matplotlib.pyplot as plt\nplt.figure(figsize=(8,6))\nsns.scatterplot(x = 'sepal.length' ,y='sepal.width', data=iris)","0b42fa00":"plt.figure(figsize=(8,6))\nsns.scatterplot(x='sepal.length', y='sepal.width', data=iris, hue='variety')","bbb46604":"plt.figure(figsize=(15,8))\nplt.subplot(1,2,1)\nsns.scatterplot(x='sepal.length', y='sepal.width', hue='variety', data=iris)\nplt.subplot(1,2,2)\nsns.scatterplot(x='sepal.width', y='sepal.length', hue='variety', data=iris)","23d9d284":"plt.figure(figsize=(15,8))\nplt.subplot(1,2,1)\nsns.scatterplot(x='petal.length', y='petal.width', hue='variety', data=iris)\nplt.subplot(1,2,2)\nsns.scatterplot(x='petal.width', y='petal.length', hue='variety', data=iris)","61e6caac":"# height parameter decides the size of the plot here\nsns.lmplot(x=\"sepal.length\", y=\"sepal.width\", hue=\"variety\", data=iris, height=8, markers=[\"o\", \"x\", \"^\"])","fed3ef50":"sns.lmplot(x=\"petal.length\", y=\"petal.width\", hue=\"variety\", data=iris, height=8)","feb46a05":"#We will use median of each feature and try to compare them \nspecies = [\"Setosa\", \"Versicolor\", \"Virginica\"]\nfeatures = [\"sepal.length\", \"sepal.width\", \"petal.length\", \"petal.width\"]\nd = {\"Median\":[], \"Features\":[],  \"Species\":[]}\nfor s in species:\n    for f in features:\n        d[\"Median\"].append(iris[iris[\"variety\"] == s][f].mean())\n        d[\"Features\"].append(f)\n        d[\"Species\"].append(s)\n\n        \nnew_df = pd.DataFrame(data=d)\nnew_df","aa5a4faa":"plt.figure(figsize=(12, 6))\nsns.lineplot(x=\"Features\", y=\"Median\", hue=\"Species\", data=new_df)","bc6baea1":"plt.figure(figsize=(12, 6))\nsns.pointplot(x=\"Features\", y=\"Median\", hue=\"Species\", data=new_df)","ee031df6":"#univariate analysis\nplt.figure(figsize=(8, 6))\nsns.stripplot(x=\"variety\", y=\"sepal.length\", data=iris, jitter=True, size=7)","0a692ad0":"plt.figure(figsize=(8, 6))\nplt.subplot(2, 2, 1)\nsns.stripplot(x=\"variety\", y=\"petal.length\", data=iris, jitter=True, size=7)\nplt.subplot(2, 2, 2)\nsns.stripplot(x=\"variety\", y=\"petal.width\", data=iris, jitter=True, size=7)\nplt.subplot(2, 2, 3)\nsns.stripplot(x=\"variety\", y=\"sepal.length\", data=iris, jitter=True, size=7)\nplt.subplot(2, 2, 4)\nsns.stripplot(x=\"variety\", y=\"sepal.width\", data=iris, jitter=True, size=7)","ad9ef051":"plt.figure(figsize=(8, 6))\nplt.subplot(2, 2, 1)\nsns.stripplot(x=\"variety\", y=\"petal.length\", data=iris, jitter=False, size=7)\nplt.subplot(2, 2, 2)\nsns.stripplot(x=\"variety\", y=\"petal.width\", data=iris, jitter=False, size=7)\nplt.subplot(2, 2, 3)\nsns.stripplot(x=\"variety\", y=\"sepal.length\", data=iris, jitter=False, size=7)\nplt.subplot(2, 2, 4)\nsns.stripplot(x=\"variety\", y=\"sepal.width\", data=iris, jitter=False, size=7)","66f5a0b3":"plt.figure(figsize=(10, 10))\nplt.subplot(2, 2, 1)\nsns.swarmplot(x=\"variety\", y=\"petal.length\", data=iris, size=7)\nplt.subplot(2, 2, 2)\nsns.swarmplot(x=\"variety\", y=\"petal.width\", data=iris, size=7)\nplt.subplot(2, 2, 3)\nsns.swarmplot(x=\"variety\", y=\"sepal.length\", data=iris, size=7)\nplt.subplot(2, 2, 4)\nsns.swarmplot(x=\"variety\", y=\"sepal.width\", data=iris, size=7)","3e55e1ba":"sns.set(style='whitegrid')\nplt.figure(figsize=(10, 10))\nplt.subplot(2, 2, 1)\nsns.violinplot(x=\"variety\", y=\"petal.length\", data=iris, size=7)\nplt.subplot(2, 2, 2)\nsns.violinplot(x=\"variety\", y=\"petal.width\", data=iris, size=7)\nplt.subplot(2, 2, 3)\nsns.violinplot(x=\"variety\", y=\"sepal.length\", data=iris, size=7)\nplt.subplot(2, 2, 4)\nsns.violinplot(x=\"variety\", y=\"sepal.width\", data=iris, size=7)","3f47f92b":"plt.figure(figsize=(10, 10))\nbinsize = 10\nplt.subplot(2, 2, 1)\nsns.distplot(a=iris[\"petal.length\"], bins=binsize)\nplt.subplot(2, 2, 2)\nsns.distplot(a=iris[\"petal.width\"], bins=binsize)\nplt.subplot(2, 2, 3)\nsns.distplot(a=iris[\"sepal.length\"], bins=binsize)\nplt.subplot(2, 2, 4)\nsns.distplot(a=iris[\"sepal.width\"], bins=binsize)","2fd8ffb0":"sns.jointplot(x=\"sepal.length\", y=\"sepal.width\", kind='hex', data=iris[iris[\"variety\"] == \"Setosa\"])","adcd0b08":"X = iris.drop(['variety'], axis=1)\ny = iris['variety']\n# print(X.head())\nprint(X.shape)\n# print(y.head())\nprint(y.shape)","e291d114":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.4, random_state=5)\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","7a6564bb":"from sklearn import metrics\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import LogisticRegression","85feeffe":"k_range = list(range(1,26))\nscores = []\nfor k in k_range:\n    knn = KNeighborsClassifier(n_neighbors=k)\n    knn.fit(X_train, y_train)\n    y_pred = knn.predict(X_test)\n    \n\nprint(metrics.accuracy_score(y_test, y_pred))","0db168a8":"logreg = LogisticRegression()\nlogreg.fit(X_train, y_train)\ny_pred = logreg.predict(X_test)\nprint(metrics.accuracy_score(y_test, y_pred))","e11f60bf":"from sklearn import svm\nmodel = svm.SVC()\nmodel.fit(X_train,y_train) \nprediction=model.predict(X_test) \nprint(metrics.accuracy_score(y_test,y_pred))","9ba068c6":"from sklearn.tree import DecisionTreeClassifier\nmodel = DecisionTreeClassifier()\nmodel.fit(X_train,y_train) \nprediction=model.predict(X_test) \nprint(metrics.accuracy_score(y_test,y_pred))","4453a1b6":"So what did we learn so far?\n\n    We have a dataset of 150 rows and 5 columns\n\n    Only one column is categorical and the rest are numerical.\n\n    There are 3 different categories and they all have equal number of instances, 50.\n\n    There are no null values.\n\n    25% of the flowers have sepallength value lower than or equal to 5.1 and similarly we can check for others.\n\n","a692ee8d":"#  2. Analyze Data","629dc84d":"# 3. Model Evaluation","d93a0643":"We can observe that\n\nFor setosa, max. sepal length is less than 6 cm -> smaller sepal length However, sepalwidth is largest than other two categories\n\nFor Versicolor, majority of sepal length is between 5.5 and 6.5 -> quite smaller sepal length as well\n\nFor Virginica, sepal length is the largest\n","313e04df":"**SVM**","72f4a617":"no null values, great!","4ad11907":"What we have done is that for every Species and for every Feature (sepal's and petal's dimensions) we have created a value which is median of that feature.","5e1ea0da":"Splitting train and test data","c12e7916":"What we can observe is that the median of lengths is greater than the median of widths\n\nSepal length, Petal length, Petal width:\n\nVirginica -> Versicolor -> Setosa\n\nSepal width: Setosa -> Virginica -> Versicolor\n\nClearly, sepals are larger for Iris flowers than petals\n","7f9cee71":"# 1. Load dataset","8ec60308":"Let's make the species simpler without the prefix Iris","d0e79842":"It gives the regression line\n\nWe can say from the graph that the value of sepal.width for Setosa changes rapidly with respect to sepal.length than the other two categories\n","937a62c3":"**Visualization**\n","03da590e":"just double checking","5dea8b35":"**Decision Tree**","c79f9324":"**Logistic Regression**","6b61d316":"Here, the slope is steeper for Versicolor than the other two","f39d7020":"Wherever you see darker colour, that means there have been high density of points there. ","d42f094e":"Both petal length and width tend to have positive corelation as well !\n\nSetosa -> smallest length\n\nVersicolor -> length is larger than setosa but smaller than virginica\n\nVerginica -> largest length\n","ea5267a4":"**KNN**","a470b096":"In swarmplot, all the points are visible and pasted side by side. It shows that which particular values are coming how many times. For a dataset small (and cute) like Iris, its actually good. Swarmplot might not be able to do justice to larger datasets.","70c63b45":"Declaring features and target variable","fa0cc6f7":"Roughly, we can say that sepal.length and sepal.width are positively correlated(as width increases with length)","a03b9055":"Here, 25% -> quantile value and thus, 25% of the flowers have sepallength value lower than or equal to 5.1 and similarly we can check for others.\n\n50% -> median value and this,50% of the flowers have sepallength lower than or equal to 5.8 and similarly we can check for others.\n","23c05dd3":"This is a basic implementation of Data visualization and EDA techniques, ofcourse I have added only those techniques that were suitable and needed for this dataset. There are many other techniques that are out there which can be more useful! This is just something you can start off with.\n\nI have used https:\/\/www.kaggle.com\/gadaadhaarigeek\/another-eda-on-iris-dataset as a reference, if you have time to check their notebook out as well!\n\nThank you for going through this notebook. I hope you found this useful and if you did, please upvote it!\n"}}