{"cell_type":{"836af0c0":"code","d0444528":"code","efa494f2":"code","2c1ae342":"code","e925f438":"code","034260b2":"code","070ca87a":"code","901303a3":"code","7bdb1865":"markdown","44391b8f":"markdown","6377902a":"markdown","c32cd1a6":"markdown","613323c3":"markdown","1097113b":"markdown","496e0aa3":"markdown"},"source":{"836af0c0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d0444528":"import pandas as pd","efa494f2":"df=pd.read_csv(\"..\/input\/titanic\/train.csv\")","2c1ae342":"def NF(dataset):\n    if max(dataset.isnull().sum())==0:\n        print(\"There are no missing values\")\n    else:\n        for i in dataset.columns:\n            if dataset[i].isnull().sum()!=0:\n                print(\"The number of missing values in column\",i,\" :\",dataset[i].isnull().sum(),\"  \",dataset[i].dtype)","e925f438":"NF(df)","034260b2":"def FN(dataset):\n    list1=[]\n    for f in dataset.columns:\n        if dataset[f].dtype=='object':\n            list1.append(f)\n    list1[:2] \n    for f in dataset.columns:\n        if f in list1:\n             if dataset[f].isnull().sum()!=0:\n                t=dataset[f].describe().top\n                dataset[f].fillna(t,inplace=True)\n        else:\n            m=dataset[f].mean()\n            dataset[f].fillna(m,inplace=True)","070ca87a":"FN(df)","901303a3":"NF(df)","7bdb1865":"Checking that there are no missing values after we apply the function to the dataframe","44391b8f":"# Here a function is defined that calculates the number and type of missing values","6377902a":"# We will define a new function that will replace the missing text values with the most frequent value and the many values with the mean","c32cd1a6":"#  Let's call the function we knew earlier and apply it to our dataframe","613323c3":"> Everything is okay","1097113b":"![](https:\/\/atrium.ai\/wp-content\/uploads\/2021\/06\/data_missing1.jpg)","496e0aa3":"> We have three columns with missing values Age and type of values in it are numeric and the other two are text values"}}