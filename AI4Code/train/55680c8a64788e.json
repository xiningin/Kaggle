{"cell_type":{"a478e240":"code","29ab94ed":"code","4c8e4037":"code","c8c00903":"code","d67b5f33":"code","0bc194ac":"code","1791d36e":"code","343325d7":"code","b9738c07":"code","2339882d":"code","02b8cde8":"code","c170c82d":"code","51872fbb":"code","594d6272":"code","25c41ccf":"code","0c81c393":"code","4047ee50":"code","c7c393a3":"code","6624931f":"code","7246ca30":"code","fab5189b":"code","014aecf5":"code","aeff3313":"code","7cc90204":"code","e4eb4243":"code","fd286d0d":"code","41034b56":"code","662a61b2":"code","999fb3fd":"markdown","466bd485":"markdown","3078a76e":"markdown","c27d37dc":"markdown","a50f3f3a":"markdown","65b6806f":"markdown","f2a48add":"markdown","08051005":"markdown","4287a427":"markdown","a4ec6904":"markdown","b1892e36":"markdown","21751495":"markdown","54b6ac2b":"markdown","45840362":"markdown","f29c3133":"markdown","8fb0e654":"markdown","9f144e7a":"markdown","3ce88601":"markdown","af2050b4":"markdown","b2487212":"markdown","71961481":"markdown","2f7d54cf":"markdown"},"source":{"a478e240":"import numpy as np \nimport pandas as pd \n\nimport os\nprint(os.listdir(\"..\/input\"))","29ab94ed":"dataset = pd.read_csv('..\/input\/train.csv')","4c8e4037":"dataset.head()","c8c00903":"#So we need to first study of our data\n\n#So first of all\n# 1 - PassengerId - Column does not depend on survive   \n# 2 - Pclacss - it's needed for prediction      [--Select--]\n# 4 - Name - it's not useful for our prediction\n# 5 - Sex - Male\/ Female depends on survived because female always get a first chance   [--Select--]\n# 6 - Age - Age depends on survivde  [--Select--]\n# 7 - SibSp - Having siblings\/spouse depends on survived  [--Select--]\n# 8 - Parch - Number of childs depends on survived  [--Select--]\n# 9 - Ticket - Ticket not create impact on survived\n#10 - Fare - Fare create impact om survived because who have a costly tickets ,that person have more chance to get first in lifeboat  [--Select--]\n#11 - Cabin - Cabin have more null values and its not create any impact on survived\n#12 - Embarked - it's create impact on survived  [--Select--]","d67b5f33":"##Let's create funcition for barplot\ndef bar_chart(feature):\n    survived = dataset[dataset['Survived']==1][feature].value_counts()\n    dead = dataset[dataset['Survived']==0][feature].value_counts()\n    df = pd.DataFrame([survived,dead])\n    df.index = ['Survived','Dead']\n    df.plot(kind='bar',stacked=True, figsize=(15,7))\n    \nbar_chart('Sex')","0bc194ac":"##Now let's see a barplot of Pclass\nbar_chart('Pclass')","1791d36e":"##Let's see for SibSp\nbar_chart('SibSp')","343325d7":"##Let's see for Parch\nbar_chart('Parch')","b9738c07":"##Let's plot the Embarked\nbar_chart('Embarked')","2339882d":"##Now let's make a list of our features matrix list\nfeatures= [ 'Pclass','Sex','Age','SibSp','Parch','Fare','Embarked']\n##Let's devide in X and Y\nx = dataset[features]\ny = dataset['Survived']","02b8cde8":"x.head()","c170c82d":"x.isnull().sum()","51872fbb":"##Now fill the null values\nx['Age'] = x['Age'].fillna(x['Age'].median())\nx['Embarked']= x['Embarked'].fillna(x['Embarked'].value_counts().index[0])","594d6272":"x.isnull().sum()","25c41ccf":"###Now let's enocde categorical values \nfrom sklearn.preprocessing import LabelEncoder\nLE = LabelEncoder()\nx['Sex'] = LE.fit_transform(x['Sex'])\nx['Embarked'] = LE.fit_transform(x['Embarked'])","0c81c393":"##let's see x\nprint(x)","4047ee50":"##Now let's check null values in Y\ny.isnull().sum()","c7c393a3":"##Now everything is ok \n##Now let's Split the Data\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.1,random_state =0)","6624931f":"##Now we fit our model\nfrom xgboost import XGBClassifier\nclassifier = XGBClassifier(colsample_bylevel= 0.9,\n                    colsample_bytree = 0.8, \n                    gamma=0.99,\n                    max_depth= 5,\n                    min_child_weight= 1,\n                    n_estimators= 10,\n                    nthread= 4,\n                    random_state= 2,\n                    silent= True)\nclassifier.fit(x_train,y_train)\nclassifier.score(x_test,y_test)","7246ca30":"##Now take the test data for prediction\ntest_data = pd.read_csv('..\/input\/test.csv')\ntest_x = test_data[features]","fab5189b":"##test_x is our testing data which we will give to our model for prediction\ntest_x.head()","014aecf5":"test_x.isnull().sum()","aeff3313":"##Let's fill values\ntest_x['Age'] = test_x['Age'].fillna(test_x['Age'].median())\ntest_x['Fare'] = test_x['Fare'].fillna(test_x['Fare'].median())","7cc90204":"test_x.isnull().sum()","e4eb4243":"##Let's enocde categorical values\ntest_x['Sex'] = LE.fit_transform(test_x['Sex'])\ntest_x['Embarked'] = LE.fit_transform(test_x['Embarked'])","fd286d0d":"test_x.head()","41034b56":"##Now we predict the values\nprediction = classifier.predict(test_x)","662a61b2":"##Now according to rules we have to store a prediction in csv file\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId,'Survived': prediction})\noutput.to_csv('submission.csv', index=False)\noutput.head()\n##Submission.csv is a file which we have to submit in a competition","999fb3fd":"* **According to Barchart females survived more than male**","466bd485":"## Now check the null values & fill it","3078a76e":"## Now visualize the data","c27d37dc":"# Now we have to split the data into training & testing","a50f3f3a":"## Now we have to get a Test data in Dataframe","65b6806f":"# Let's encode a categorical value in Test Data","f2a48add":"## Let's devide data into X & Y","08051005":"# Let' convert our prediction int Submission.csv","4287a427":"**The Chart confirms a person aboarded with more than 2 parents or children are survived**\n\n**The Chart confirms a person aboarded alone are dead**","a4ec6904":"# Now we have to create a Machine Learning Model ","b1892e36":"## Let's check the data","21751495":"## Let's first important data","54b6ac2b":"# Let's predict a Testing data with our XGB Model","45840362":"# Let's fill NULL values","f29c3133":"**That's good we got a 0.85 accuracy**","8fb0e654":"## Check the x","9f144e7a":"# Let's check NULL values in Test dataset","3ce88601":"## Let's encode the categorical values","af2050b4":"**The Chart confirms a person aboarded from C slightly more likely survived**\n\n**The Chart confirms a person aboarded from Q more likely dead**\n\n**The Chart confirms a person aboarded from S more likely dead**","b2487212":"**The Chart confirms a person aboarded with more than 2 siblings or spouse are survived**\n\n**The Chart confirms a person aboarded without siblings or spouse are dead**","71961481":"# Now the check NULL values in Y","2f7d54cf":"**The Chart confirms 1st class people more survivied than other classes**\n\n**The Chart confirms 3rd class people more dead than other classes**"}}