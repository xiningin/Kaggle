{"cell_type":{"916edca4":"code","61f1d258":"code","915d0ef1":"code","47881abc":"code","3d0fabe2":"markdown","85bfd19c":"markdown","9b428b47":"markdown","c0d342c7":"markdown"},"source":{"916edca4":"import os\nimport pandas as pd\njson_paths = []\npaths = ['\/kaggle\/input\/10gomatch']\nfor path in paths:\n    for dirname, _, filenames in os.walk(path):\n        for filename in filenames:\n            json_paths.append(os.path.join(dirname, filename))","61f1d258":"def json_to_v115(json_path):\n    raw_data = pd.read_json(json_path,\n                        lines=True,\n                        orient='columns')\n    # Getting the final rewards of each player\n    rewards = pd.DataFrame([_ for _ in raw_data.rewards])\n    # Checking if there is an ERROR\n    if rewards.iloc[0,0] is not None and rewards.iloc[0,1] is not None:\n        # Getting steps features\n        steps = pd.DataFrame([_ for _ in raw_data.steps])\n\n        split_players = []\n        for i in range(3002):\n            temp = pd.DataFrame([_ for _ in steps[i]])\n            split_players.append(temp)\n        split_players = pd.concat(split_players)\n        print(rewards.iloc[0,0])\n        print(rewards.iloc[0,1])\n        \n        # Getting the winning player point of view\n        if rewards.iloc[0,0] > rewards.iloc[0,1]:\n            play1_feedback = split_players[0]  \n        else:\n            play1_feedback = split_players[1]\n        print(play1_feedback.name)\n\n        play1_feedback = play1_feedback.apply(pd.Series)\n        \n        # Getting player action\n        play1_action = pd.DataFrame([_ for _ in play1_feedback.action])\n        play1_action = play1_action.fillna(0)\n        play1_action = play1_action.astype(int)\n        play1_action = play1_action.rename(columns={play1_action.columns[0]: \"Action\"})\n        \n        # Getting player observations\n        play1_obs = pd.DataFrame([_ for _ in play1_feedback.observation])\n\n        play1_obs_raw = pd.DataFrame([_ for _ in play1_obs.players_raw])\n\n        play1_obs_raw2 = pd.Series(play1_obs_raw[0], index=play1_obs_raw.index)\n        obs_final = []\n        for i,_ in play1_obs_raw2.items():\n            temp = pd.DataFrame.from_dict(_,orient='index')\n            obs_final.append(temp)\n        obs_final = pd.concat(obs_final,axis=1)\n        \n        # Dropping unnecessary features\n\n        obs_final = obs_final.drop(['designated', 'left_team_yellow_card','left_team_active','right_team_yellow_card','right_team_active','ball_owned_player',\n                                'right_team_tired_factor','left_team_tired_factor','steps_left','score',\n                                'right_team_roles','left_team_roles','sticky_actions','ball_rotation'], axis=0)\n\n        obs_final = obs_final.transpose()\n        \n        # Extracting and adding necessary features\n\n        ball = obs_final\n        ball[['ball_x','ball_y','ball_z']] = pd.DataFrame(obs_final.ball.tolist(),index=obs_final.index)\n\n        ball_dir = obs_final\n        ball_dir[['ball_x_dir','ball_y_dir','ball_z_dir']] = pd.DataFrame(obs_final.ball_direction.tolist(),index=obs_final.index)\n\n        left_coor = obs_final\n        left_coor[['left1_coor','left2_coor','left3_coor','left4_coor','left5_coor','left6_coor','left7_coor','left8_coor','left9_coor',\n                   'left10_coor','left11_coor']] = pd.DataFrame(obs_final.left_team.tolist(),index=obs_final.index)\n        left_coor.head()\n\n        left_coor[['left1_x','left1_y']] = pd.DataFrame(obs_final.left1_coor.tolist(),index=obs_final.index)\n        left_coor[['left2_x','left2_y']] = pd.DataFrame(obs_final.left2_coor.tolist(),index=obs_final.index)\n        left_coor[['left3_x','left3_y']] = pd.DataFrame(obs_final.left3_coor.tolist(),index=obs_final.index)\n        left_coor[['left4_x','left4_y']] = pd.DataFrame(obs_final.left4_coor.tolist(),index=obs_final.index)\n        left_coor[['left5_x','left5_y']] = pd.DataFrame(obs_final.left5_coor.tolist(),index=obs_final.index)\n        left_coor[['left6_x','left6_y']] = pd.DataFrame(obs_final.left6_coor.tolist(),index=obs_final.index)\n        left_coor[['left7_x','left7_y']] = pd.DataFrame(obs_final.left7_coor.tolist(),index=obs_final.index)\n        left_coor[['left8_x','left8_y']] = pd.DataFrame(obs_final.left8_coor.tolist(),index=obs_final.index)\n        left_coor[['left9_x','left9_y']] = pd.DataFrame(obs_final.left9_coor.tolist(),index=obs_final.index)\n        left_coor[['left10_x','left10_y']] = pd.DataFrame(obs_final.left10_coor.tolist(),index=obs_final.index)\n        left_coor[['left11_x','left11_y']] = pd.DataFrame(obs_final.left11_coor.tolist(),index=obs_final.index)\n\n        left_coor_dir = obs_final\n        left_coor_dir[['left1_coor_dir','left2_coor_dir','left3_coor_dir','left4_coor_dir','left5_coor_dir','left6_coor_dir','left7_coor_dir','left8_coor_dir','left9_coor_dir',\n                   'left10_coor_dir','left11_coor_dir']] = pd.DataFrame(obs_final.left_team_direction.tolist(),index=obs_final.index)\n\n\n        left_coor_dir[['left1_x_dir','left1_y_dir']] = pd.DataFrame(obs_final.left1_coor_dir.tolist(),index=obs_final.index)\n        left_coor_dir[['left2_x_dir','left2_y_dir']] = pd.DataFrame(obs_final.left2_coor_dir.tolist(),index=obs_final.index)\n        left_coor_dir[['left3_x_dir','left3_y_dir']] = pd.DataFrame(obs_final.left3_coor_dir.tolist(),index=obs_final.index)\n        left_coor_dir[['left4_x_dir','left4_y_dir']] = pd.DataFrame(obs_final.left4_coor_dir.tolist(),index=obs_final.index)\n        left_coor_dir[['left5_x_dir','left5_y_dir']] = pd.DataFrame(obs_final.left5_coor_dir.tolist(),index=obs_final.index)\n        left_coor_dir[['left6_x_dir','left6_y_dir']] = pd.DataFrame(obs_final.left6_coor_dir.tolist(),index=obs_final.index)\n        left_coor_dir[['left7_x_dir','left7_y_dir']] = pd.DataFrame(obs_final.left7_coor_dir.tolist(),index=obs_final.index)\n        left_coor_dir[['left8_x_dir','left8_y_dir']] = pd.DataFrame(obs_final.left8_coor_dir.tolist(),index=obs_final.index)\n        left_coor_dir[['left9_x_dir','left9_y_dir']] = pd.DataFrame(obs_final.left9_coor_dir.tolist(),index=obs_final.index)\n        left_coor_dir[['left10_x_dir','left10_y_dir']] = pd.DataFrame(obs_final.left10_coor_dir.tolist(),index=obs_final.index)\n        left_coor_dir[['left11_x_dir','left11_y_dir']] = pd.DataFrame(obs_final.left11_coor_dir.tolist(),index=obs_final.index)\n\n        right_coor = obs_final\n        right_coor[['right1_coor','right2_coor','right3_coor','right4_coor','right5_coor','right6_coor','right7_coor','right8_coor','right9_coor',\n                   'right10_coor','right11_coor']] = pd.DataFrame(obs_final.right_team.tolist(),index=obs_final.index)\n\n\n        right_coor[['right1_x','right1_y']] = pd.DataFrame(obs_final.right1_coor.tolist(),index=obs_final.index)\n        right_coor[['right2_x','right2_y']] = pd.DataFrame(obs_final.right2_coor.tolist(),index=obs_final.index)\n        right_coor[['right3_x','right3_y']] = pd.DataFrame(obs_final.right3_coor.tolist(),index=obs_final.index)\n        right_coor[['right4_x','right4_y']] = pd.DataFrame(obs_final.right4_coor.tolist(),index=obs_final.index)\n        right_coor[['right5_x','right5_y']] = pd.DataFrame(obs_final.right5_coor.tolist(),index=obs_final.index)\n        right_coor[['right6_x','right6_y']] = pd.DataFrame(obs_final.right6_coor.tolist(),index=obs_final.index)\n        right_coor[['right7_x','right7_y']] = pd.DataFrame(obs_final.right7_coor.tolist(),index=obs_final.index)\n        right_coor[['right8_x','right8_y']] = pd.DataFrame(obs_final.right8_coor.tolist(),index=obs_final.index)\n        right_coor[['right9_x','right9_y']] = pd.DataFrame(obs_final.right9_coor.tolist(),index=obs_final.index)\n        right_coor[['right10_x','right10_y']] = pd.DataFrame(obs_final.right10_coor.tolist(),index=obs_final.index)\n        right_coor[['right11_x','right11_y']] = pd.DataFrame(obs_final.right11_coor.tolist(),index=obs_final.index)\n\n        right_coor_dir = obs_final\n        right_coor_dir[['right1_coor_dir','right2_coor_dir','right3_coor_dir','right4_coor_dir','right5_coor_dir','right6_coor_dir','right7_coor_dir','right8_coor_dir','right9_coor_dir',\n                   'right10_coor_dir','right11_coor_dir']] = pd.DataFrame(obs_final.right_team_direction.tolist(),index=obs_final.index)\n\n\n        right_coor_dir[['right1_x_dir','right1_y_dir']] = pd.DataFrame(obs_final.right1_coor_dir.tolist(),index=obs_final.index)\n        right_coor_dir[['right2_x_dir','right2_y_dir']] = pd.DataFrame(obs_final.right2_coor_dir.tolist(),index=obs_final.index)\n        right_coor_dir[['right3_x_dir','right3_y_dir']] = pd.DataFrame(obs_final.right3_coor_dir.tolist(),index=obs_final.index)\n        right_coor_dir[['right4_x_dir','right4_y_dir']] = pd.DataFrame(obs_final.right4_coor_dir.tolist(),index=obs_final.index)\n        right_coor_dir[['right5_x_dir','right5_y_dir']] = pd.DataFrame(obs_final.right5_coor_dir.tolist(),index=obs_final.index)\n        right_coor_dir[['right6_x_dir','right6_y_dir']] = pd.DataFrame(obs_final.right6_coor_dir.tolist(),index=obs_final.index)\n        right_coor_dir[['right7_x_dir','right7_y_dir']] = pd.DataFrame(obs_final.right7_coor_dir.tolist(),index=obs_final.index)\n        right_coor_dir[['right8_x_dir','right8_y_dir']] = pd.DataFrame(obs_final.right8_coor_dir.tolist(),index=obs_final.index)\n        right_coor_dir[['right9_x_dir','right9_y_dir']] = pd.DataFrame(obs_final.right9_coor_dir.tolist(),index=obs_final.index)\n        right_coor_dir[['right10_x_dir','right10_y_dir']] = pd.DataFrame(obs_final.right10_coor_dir.tolist(),index=obs_final.index)\n        right_coor_dir[['right11_x_dir','right11_y_dir']] = pd.DataFrame(obs_final.right11_coor_dir.tolist(),index=obs_final.index)\n        \n        # One-Hot Encoding \n\n        ball_owning_labels = ['left_team_owning_ball','none_owning_ball','right_team_owning_ball']\n        obs_final['ball_owning_cat'] = pd.cut(obs_final['ball_owned_team'],3,labels=ball_owning_labels)\n        ball_owning_oh = pd.get_dummies(obs_final['ball_owning_cat'])\n\n        active_labels = ['player0','player1','player2','player3','player4','player5','player6','player7','player8','player9','player10']\n        obs_final['active_cat'] = pd.cut(obs_final['active'],11,labels=active_labels)\n        active_oh = pd.get_dummies(obs_final['active_cat'])\n\n        game_mode_labels = ['Normal','KickOff','GoalKick','FreeKick','Corner','ThrowIn','Penalty']\n        obs_final['game_mode_cat'] = pd.cut(obs_final['game_mode'],7,labels=game_mode_labels)\n        game_mode_oh = pd.get_dummies(obs_final['game_mode_cat'])\n        \n        # Dropping unnecessary features\n\n        right_coor_drop = ['right1_coor','right1_coor','right2_coor','right3_coor','right4_coor','right5_coor','right6_coor','right7_coor','right8_coor','right9_coor','right10_coor','right11_coor']\n        right_coor_dir_drop = ['right1_coor_dir','right1_coor_dir','right2_coor_dir','right3_coor_dir','right4_coor_dir','right5_coor_dir','right6_coor_dir','right7_coor_dir','right8_coor_dir','right9_coor_dir','right10_coor_dir','right11_coor_dir']\n        left_coor_drop = ['left1_coor','left1_coor','left2_coor','left3_coor','left4_coor','left5_coor','left6_coor','left7_coor','left8_coor','left9_coor','left10_coor','left11_coor']\n        left_coor_dir_drop = ['left1_coor_dir','left1_coor_dir','left2_coor_dir','left3_coor_dir','left4_coor_dir','left5_coor_dir','left6_coor_dir','left7_coor_dir','left8_coor_dir','left9_coor_dir','left10_coor_dir','left11_coor_dir']\n        others_drop = ['right_team','right_team_direction','left_team','left_team_direction','active_cat','ball','game_mode_cat','ball_owning_cat','ball_direction','ball_owned_team','active','game_mode']\n        obs_final = obs_final.drop(right_coor_drop,axis=1)\n        obs_final = obs_final.drop(right_coor_dir_drop,axis=1)\n        obs_final = obs_final.drop(left_coor_drop,axis=1)\n        obs_final = obs_final.drop(left_coor_dir_drop,axis=1)\n        obs_final = obs_final.drop(others_drop,axis=1)\n\n        obs_final = pd.concat([obs_final,ball_owning_oh,active_oh,game_mode_oh],axis=1)\n        obs_final.index = range(3002)\n        obs_final = obs_final.join(play1_action)\n        cols = ['left1_x','left1_y','left2_x','left2_y','left3_x','left3_y','left4_x','left4_y','left5_x','left5_y','left6_x','left6_y','left7_x','left7_y','left8_x','left8_y','left9_x','left9_y','left10_x','left10_y','left11_x','left11_y', \n                'left1_x_dir','left1_y_dir','left2_x_dir','left2_y_dir','left3_x_dir','left3_y_dir','left4_x_dir','left4_y_dir','left5_x_dir','left5_y_dir','left6_x_dir','left6_y_dir','left7_x_dir','left7_y_dir','left8_x_dir','left8_y_dir','left9_x_dir','left9_y_dir','left10_x_dir','left10_y_dir','left11_x_dir','left11_y_dir',\n                'right1_x','right1_y','right2_x','right2_y','right3_x','right3_y','right4_x','right4_y','right5_x','right5_y','right6_x','right6_y','right7_x','right7_y','right8_x','right8_y','right9_x','right9_y','right10_x','right10_y','right11_x','right11_y',\n                'right1_x_dir','right1_y_dir','right2_x_dir','right2_y_dir','right3_x_dir','right3_y_dir','right4_x_dir','right4_y_dir','right5_x_dir','right5_y_dir','right6_x_dir','right6_y_dir',\n                'right7_x_dir','right7_y_dir','right8_x_dir','right8_y_dir','right9_x_dir','right9_y_dir','right10_x_dir','right10_y_dir','right11_x_dir','right11_y_dir', \n                'ball_x','ball_y','ball_z','ball_x_dir','ball_y_dir','ball_z_dir',\n                'left_team_owning_ball','none_owning_ball','right_team_owning_ball',\n                'player0','player1','player2','player3','player4','player5','player6','player7','player8','player9','player10',\n                'Normal','KickOff','GoalKick','FreeKick','Corner','ThrowIn','Penalty','Action'\n                ]\n        obs_final = obs_final[cols]\n\n        return obs_final\n   \n    else:\n        return pd.DataFrame() ","915d0ef1":"data = []\nfor _ in json_paths:\n    print(_)\n    to_app = json_to_v115(_)\n    if to_app.empty:\n        print('NoneType')\n    else:\n        data.append(to_app)\ndata = pd.concat(data,axis=0)\ndata","47881abc":"compression_opts = dict(method='zip',\n                        archive_name='out.csv')  \ndata.to_csv('out.zip', index=False,\n          compression=compression_opts) ","3d0fabe2":"The json_to_v115 function extracts the features of a step and produces a v115 representation of it","85bfd19c":"We add to our DataFrame the valid episodes","9b428b47":"We start by getting all the json files paths","c0d342c7":"Converting into a csv format and zipping"}}