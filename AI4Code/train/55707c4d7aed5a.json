{"cell_type":{"39c3e3ee":"code","30a99322":"code","0c015bc5":"code","2a5f23b2":"code","676a85d4":"code","17fa53b3":"code","6b3eed8f":"code","3f019546":"code","adaa5374":"code","bba83197":"code","a877d775":"code","20630cd3":"code","52beb6de":"code","aa5450a9":"code","cba35592":"code","ea11f61d":"code","dfff4057":"code","9195e1f8":"code","bb67b91d":"code","731be4b2":"code","64e16479":"code","69e71715":"code","00115505":"code","be1eda72":"code","01053137":"code","bc3cf053":"code","7688d883":"code","cd0d9c2a":"code","72a8848e":"code","37bb78e9":"code","9d941601":"code","0f30b49d":"code","d263b8ba":"code","1812dbab":"code","397be530":"code","ff7caf8e":"code","d41b09b1":"code","339dd552":"code","d3bebeb8":"code","29b550ba":"code","e33c9598":"code","98f794a1":"code","91ec5fbf":"code","b75abe49":"code","34250bbc":"code","d8807e48":"code","a9c080e1":"code","c9db2237":"code","88e53982":"code","8b9c831f":"code","8d7ccaa8":"code","032ee282":"code","33804a26":"code","bb9e0b5a":"code","eb0ce645":"code","0d4be100":"code","ea4e3d70":"code","bcf351a4":"code","4327f82c":"code","2792c4a3":"code","a32d1eca":"code","1ed4dbf5":"code","2d98727c":"code","4677735d":"code","83a1301d":"code","9c1cdb63":"code","bbe82266":"code","2d497e31":"code","80614eb8":"code","a6ff404f":"code","c0be79fa":"code","c348c51f":"code","f434c7f3":"code","5597632c":"code","c448a734":"code","f66ffa1a":"code","431e2d96":"code","a72a7af2":"code","3a66894f":"code","f5f2c3dd":"code","ff1b16b1":"code","df319aa1":"code","fe12bc4f":"code","158a5b38":"code","b238a3fc":"code","c11ed78c":"code","5f2a5815":"code","485de75f":"code","c34af67e":"code","b5ab3952":"markdown"},"source":{"39c3e3ee":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np \nimport seaborn as sns\n\ndf1 = pd.read_csv('pharmacies.csv')\ndf1.columns = ['Delivery date', 'Delivery time', 'Pharmacy number', 'Pharmacy postcode', 'YOB', 'Gender', 'CNK', 'Product name', 'ATC code', 'Units', 'Price', 'Contribution']","30a99322":"df1.shape","0c015bc5":"df5 = df1.sample(frac=0.020212)","2a5f23b2":"df5.shape","676a85d4":"df5.isnull().sum()","17fa53b3":"df5.head()","6b3eed8f":"df5['Price'].describe()","3f019546":"df5['Gender'].replace([3], 'N\/A', inplace=True)\ndf5['Gender'].replace([1], 'Male', inplace=True)\ndf5['Gender'].replace([2], 'Female', inplace=True)\ndf5['Gender'].replace([0], 'N\/A', inplace=True)","adaa5374":"df5['Contribution'].describe()","bba83197":"df5.head()","a877d775":"mask = df5.Units == 0\ndf5.loc[mask, 'Units'] = 1","20630cd3":"df5.tail()","52beb6de":"df5.sort_values('Price', ascending=False)","aa5450a9":"plt.hist(df5['Gender']);","cba35592":"plt.figure(figsize=(16,10))\ncorrelation_matrix=df5.corr()\nsns.heatmap(correlation_matrix,annot=True);","ea11f61d":"df5.sort_values('YOB', ascending=False)","dfff4057":"df5.sort_values('YOB', ascending=False)","9195e1f8":"df5['YOB'].count()","bb67b91d":"df5.sort_values('Contribution', ascending=False)","731be4b2":"df5[df5['Gender']=='N\/A']","64e16479":"df5['Product name'].str.split('X')","69e71715":"df5['Product name'].str.rsplit(\"X\", expand=True).rename(columns={0:'Product name', 1:'Amount'})\ndf5","00115505":"nonprs = df5[df5['Price'] == df5['Contribution']]","be1eda72":"nonprs","01053137":"df5[df5['Units'] == 1]","bc3cf053":"df5.sort_values('YOB', ascending=False)","7688d883":"df5.sort_values('Units', ascending=False)","cd0d9c2a":"df5.head()","72a8848e":"df5['Prescribed'] = np.where(df5['Price']== df5['Contribution'], 'Yes', 'No')","37bb78e9":"df5.head()","9d941601":"kleuren = [\"r\", \"g\"]\nsns.factorplot('Pharmacy postcode',data=df5,kind='count',hue='Prescribed' ,size=15, palette=kleuren)","0f30b49d":"df5['Year'] = pd.DatetimeIndex(df5['Delivery date']).year\ndf5.head()","d263b8ba":"plt.figure(figsize=(12,10))\nsns.set(style=\"darkgrid\")\nax = sns.countplot(y=\"Product name\", data=df5, palette=\"Set2\", order=df5['Product name'].value_counts().index[0:15])\n","1812dbab":"df5.isnull().sum()","397be530":"plt.figure(figsize=(14,7))\ndf5[\"Prescribed\"].value_counts().plot(kind=\"pie\",shadow=True,autopct = '%1.1f%%')\nplt.title('Prescibed medication?', size=17);","ff7caf8e":"df5.value_counts().nlargest(20).plot(kind='bar', figsize=(10,5))","d41b09b1":"df5['Prescribed'].value_counts().plot(kind='bar', figsize=(10,5))","339dd552":"df5['Product name'].value_counts().nlargest(10).plot(kind='bar', figsize=(10,5))","d3bebeb8":"brk = df5.groupby('Product name')['Price'].sum()\nbrk.nlargest(10).plot(kind='bar')","29b550ba":"brk = df5.groupby('Prescribed')['Price'].sum()\nbrk.nlargest(10).plot(kind='bar')","e33c9598":"df5[df5[\"Gender\"] == \"Male\"][\"Price\"].hist(alpha=0.5)\ndf5[df5[\"Gender\"] == \"Female\"][\"Price\"].hist(alpha=0.5)\nplt.xlim(0, 500)\nplt.legend([\"Male\", \"Female\"]);","98f794a1":"df5.head()","91ec5fbf":"print(len(df5['Product name'].unique()))","b75abe49":"def extractWords(text):\n    words = []\n    word = ''\n    \n    for character in text:\n        if character.isspace():\n            words.append(word)\n            word = ''\n        if character.isdigit():\n            continue\n        if character == ',':\n            continue\n        if character == '+':\n            continue\n        else:\n            word += character\n            \n    return words       ","34250bbc":"def extractRelevant(words):\n    relevant = []\n\n    for word in words:\n        word = word.replace(' ', '')\n        if len(word) > 5:\n            relevant.append(word)\n            \n    return relevant","d8807e48":"words = extractWords('ELOCTA 2000IE PDR+SOLV VOOR OPL INJ 1')","a9c080e1":"relevant = extractRelevant(words)","c9db2237":"for rel in relevant:\n    rel.strip()\n    print(rel)","88e53982":"print(len(relevant[1]))","8b9c831f":"def simplifyName(text):\n    words = extractWords(text)\n    relevant = extractRelevant(words)\n    result = ''\n    \n    for st in relevant:\n        result += st + \" \"\n    \n    return result","8d7ccaa8":"print(simplifyName(\"TOUJEO SOLOSTAR 300E\/ML OPL INJ VOORGEVULDE PEN 5\"))","032ee282":"df5['Simplified_name'] = df5['Product name'].apply(simplifyName)","33804a26":"df5.head(500)","bb9e0b5a":"print(len(df5['Simplified_name'].unique()))","eb0ce645":"def intTryParse(value):\n    try:\n        return int(value)\n    except ValueError:\n        return value","0d4be100":"def getMG(text):\n    inx = text.find('MG')\n    inl = text.find('ML')\n    \n    if (inx == 0 and inl == 0):\n        return 0\n    \n    stri = ''\n    rep = ''\n    \n    if inx != 0:\n        stri = text[0: inx]\n    if inl != 0:\n        stri = text[0: inl]\n    \n    det = False\n    \n    for character in reversed(stri):\n        if character.isdigit():\n            if len(rep) < 3:\n                if det == False:\n                    rep += character\n                else:\n                    break\n        if character == 'X':\n                det = True            \n                    \n    reprev = rep[::-1]   \n    \n    reprev.strip()\n    \n    if (reprev == ''):\n        return 0\n                    \n    result = intTryParse(reprev)\n    \n    return result\n            ","ea4e3d70":"print(getMG(\"AUGMENTIN 875 MG TABL 20X875MG\"))","bcf351a4":"df5['MG'] = df5['Product name'].apply(getMG)","4327f82c":"df5['MG'] = df5['MG'].astype('float64')","2792c4a3":"df5[\"Simplified_name\"].astype(\"string\")","a32d1eca":"df5.head(20)","1ed4dbf5":"prod = df5[df5['Simplified_name'].str.contains('DALACIN')]\nprod.head()","2d98727c":"df5['Simplified_name'] = df5['Simplified_name'].str.strip()\n\nprod = df5[df5['Simplified_name'] == 'DALACIN']\nprod.head()","4677735d":"import datetime","83a1301d":"def date_to_nth_day(date):\n    import datetime\n    today = datetime.datetime.now()\n    day_of_year = (date - datetime.datetime(date.year, 1, 1)).days + 1\n    return day_of_year","9c1cdb63":"df5['Delivery date'] = pd.to_datetime(df5['Delivery date'])","bbe82266":"df5['DayOfTheYear'] = df5['Delivery date'].apply(date_to_nth_day)","2d497e31":"pharmacy = df5[df5['Pharmacy postcode'] == 20]\n\npharmacy = pharmacy[pharmacy['DayOfTheYear'] < 30]\n\npharmacy.head(10)","80614eb8":"pharmacy['Delivery date'] = pd.to_datetime(pharmacy['Delivery date'])","a6ff404f":"pharmacy['DayOfTheYear'] = pharmacy['Delivery date'].apply(date_to_nth_day)","c0be79fa":"from sklearn.model_selection import train_test_split","c348c51f":"X = pharmacy[['DayOfTheYear', 'CNK', 'Price', 'Year', 'Pharmacy number', 'Contribution']]\ny = pharmacy.Units","f434c7f3":"pharmacy.head()","5597632c":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 42)","c448a734":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error\n\nreg = LinearRegression()\n\nreg.fit(X_train, y_train)\n\nreg.score(X, y)\n\ny_predict = reg.predict(X_test)\nprint('Mean Absolute Error: %.3f' % (mean_absolute_error(y_test, y_predict)))\nprint('Mean Squared Error: %.3f' % (mean_squared_error(y_test, y_predict)))\nprint('R^2 Score: %.3f' % (r2_score(y_test, y_predict)))\nerror7 = pd.DataFrame({'Current': np.array(y_test).flatten(), 'Predicted': y_predict.flatten()})\nerror7","f66ffa1a":"plt.figure(figsize=(16,10))\ncorrelation_matrix=pharmacy.corr()\nsns.heatmap(correlation_matrix,annot=True);","431e2d96":"def forAllMonths(clf, target, predictors, time, table):\n    results = []\n    \n    for i in range(0, 12):\n        start = i\n        \n        if (i != 0):\n            start = i * 30\n        \n        end = (i + 1) * 30\n        \n        temp = table[table[time] > start]\n        temp = temp[temp[time] < end]\n    \n        X = temp[predictors]\n        y = temp[target].values\n            \n        X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 42)\n        \n        clf.fit(X_train, y_train)\n        \n        score = clf.score(X, y)\n        \n        results.append(score)\n        \n    return results    ","a72a7af2":"from sklearn.linear_model import LinearRegression\n\nreg = LinearRegression()\n\nmonths = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\nresult = forAllMonths(reg, 'Units', ['DayOfTheYear', 'CNK', 'Price', 'Year', 'Pharmacy number', 'Contribution'], \n                      'DayOfTheYear', df5)\n\nfor i in range(0, len(result)):\n    print(f'{months[i]} - accuracy: {round(result[i] * 100, 1)}%')","3a66894f":"from sklearn.model_selection import train_test_split\n\nX = df5[['Simplified_name', 'Year', 'Delivery date', 'Price', 'Pharmacy postcode', 'MG', 'Gender', 'CNK', 'Prescribed']]\ny = df5.Units\n\nX = X.apply(pd.to_numeric, errors='coerce')\ny = y.apply(pd.to_numeric, errors='coerce')\n\nX.fillna(0, inplace=True)\ny.fillna(0, inplace=True)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","f5f2c3dd":"df5.head()","ff1b16b1":"df5.dtypes","df319aa1":"new = pd.read_csv(\"ds2020.csv.gz\")","fe12bc4f":"new.columns = ['Delivery date', 'Delivery time', 'Pharmacy number', 'Pharmacy postcode', 'YOB', 'Gender', 'CNK', 'Product name', 'ATC code', 'Units', 'Price', 'Contribution']","158a5b38":"new.head()","b238a3fc":"new.shape","c11ed78c":"len(new['CNK'].unique())","5f2a5815":"sns.countplot(x = 'Gender', data = new)","485de75f":"plt.figure(figsize=(16,10))\ncorrs = new.corr()\nsns.heatmap(data = corrs, annot = True)","c34af67e":"kleuren = [\"r\", \"g\"]\nnew['Prescribed'] = np.where(new['Price']== new['Contribution'], 'Yes', 'No')\nsns.factorplot('Pharmacy postcode',data=new,kind='count',hue='Prescribed' ,size=15, palette=kleuren)","b5ab3952":"sns.countplot(x = 'Simplified_name', data = df5)\nplt.title('things')\nplt.show()"}}