{"cell_type":{"b191fe17":"code","653ba9c5":"code","8bea74e3":"code","066c482b":"code","56ba1bbe":"code","785a4830":"code","9b44ee29":"code","85418ae4":"code","619054bc":"code","d9e4bfa4":"code","d88e39c4":"code","7038bbee":"code","adf0b8a3":"code","8e07f7ef":"code","8fbffbd2":"code","e46b0374":"code","09b72dff":"code","c7566223":"code","cb97352c":"code","06e6f5b2":"code","c372b01a":"code","d6fe984a":"code","cb3bb8cd":"code","d61cf29c":"code","d379bb9a":"code","8ec642ba":"code","73983881":"code","ce77938a":"code","eda6b200":"code","6c76fe54":"code","db9df699":"code","dfc6df6c":"code","27ad9212":"code","377d4d27":"code","19159aee":"code","92d97791":"code","fdfa980a":"code","6b879227":"code","d12b0863":"code","1e541080":"code","d398899f":"markdown","262cc182":"markdown","e07dc015":"markdown","aabbd5f9":"markdown","ffa45e7d":"markdown","897b20cd":"markdown","d49ffb69":"markdown","49d5bc4e":"markdown","ed478267":"markdown","063f79a8":"markdown","5a988e1d":"markdown","6b6a7cd9":"markdown","da601233":"markdown"},"source":{"b191fe17":"import pandas as pd\nimport sklearn\nimport matplotlib.pyplot as plt","653ba9c5":"import os\ncwd = os.getcwd()\ncwd","8bea74e3":"os.listdir('..\/input')","066c482b":"train_data = \"..\/input\/ucidata\/adult_data.csv\"\ntest_data = \"..\/input\/ucidata\/adult_test.csv\"","56ba1bbe":"adult = pd.read_csv(train_data, skipinitialspace = True, na_values = \"?\")","785a4830":"adult.shape","9b44ee29":"adult.head()","85418ae4":"list(adult)","619054bc":"adult[\"target\"].value_counts().plot(kind=\"bar\")","d9e4bfa4":"adult[\"relationship\"].value_counts().plot(kind=\"bar\")","d88e39c4":"adult[\"marital_status\"].value_counts().plot(kind=\"bar\")","7038bbee":"adult[\"age\"].value_counts().plot(kind=\"bar\")","adf0b8a3":"adult[\"sex\"].value_counts().plot(kind=\"bar\")","8e07f7ef":"adult[\"education_num\"].value_counts().plot(kind=\"bar\")","8fbffbd2":"adult[\"occupation\"].value_counts().plot(kind=\"bar\")","e46b0374":"adult[\"hours_per_week\"].value_counts().plot(kind=\"bar\")","09b72dff":"nadult = adult.dropna()","c7566223":"nadult.shape","cb97352c":"test_adult = pd.read_csv(test_data, skipinitialspace = True)","06e6f5b2":"test_adult.shape","c372b01a":"ntest_adult = test_adult","d6fe984a":"ntest_adult.shape","cb3bb8cd":"from sklearn import preprocessing","d61cf29c":"attributes = [\"age\", \"workclass\", \"education_num\", \"marital_status\", \"relationship\", \"capital_gain\", \"capital_loss\", \"hours_per_week\"]","d379bb9a":"train_adult_x = nadult[attributes].apply(preprocessing.LabelEncoder().fit_transform)","8ec642ba":"train_adult_y = nadult.target","73983881":"test_adult_x = test_adult[attributes].apply(preprocessing.LabelEncoder().fit_transform)","ce77938a":"test_adult_y = test_adult.target","eda6b200":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import accuracy_score","6c76fe54":"# columns = ['neighbors', 'cross', 'accuracy']\n# results = [columns]\n# for n in range (30, 60):\n#     neighbors = n\n#     cross = 10\n#     knn = KNeighborsClassifier(n_neighbors = neighbors)\n#     scores = cross_val_score(knn, train_adult_x, train_adult_y, cv = cross)\n# #     scores\n#     knn.fit(train_adult_x, train_adult_y)\n#     test_pred_y = knn.predict(test_adult_x)\n# #     test_pred_y\n#     acc = accuracy_score(test_adult_y, test_pred_y)\n#     results.append([neighbors,cross, acc])","db9df699":"# results","dfc6df6c":"neighbors = 59\ncross = 10\nknn = KNeighborsClassifier(n_neighbors = neighbors)\nscores = cross_val_score(knn, train_adult_x, train_adult_y, cv = cross)\nscores","27ad9212":"knn.fit(train_adult_x, train_adult_y)\ntest_pred_y = knn.predict(test_adult_x)\ntest_pred_y","377d4d27":"accuracy_score(test_adult_y, test_pred_y)","19159aee":"kaggle_data = '..\/input\/kaggle-data\/test_data.csv'\nkaggle_adult = pd.read_csv(kaggle_data)","92d97791":"kaggle_adult_x = kaggle_adult[attributes].apply(preprocessing.LabelEncoder().fit_transform)\nkaggle_pred_y = knn.predict(kaggle_adult_x)\nkaggle_pred_y","fdfa980a":"len(kaggle_pred_y)","6b879227":"id_index = pd.DataFrame({'Id' : list(range(len(kaggle_pred_y)))})\nincome = pd.DataFrame({'income' : kaggle_pred_y})","d12b0863":"result = id_index.join(income)\nresult","1e541080":"result.to_csv(\"submission.csv\", index = False)","d398899f":"The block below is a loop to find the best value of nearest neighbors","262cc182":"Training data","e07dc015":"### Data Analysis\nUsing pandas lib, we can do some analysis of the data available and plotting it to have a better grasp of which attributes are","aabbd5f9":"### Data preparation","ffa45e7d":"### Implementation of kNN algotithm","897b20cd":"Using kaggle data","d49ffb69":"Set a list of attributes and tried different combinations, and the one below is the one which gave best results","49d5bc4e":"Trying to debug kaggle directory structure","ed478267":"Testing different values for neighbors, it had the best performance with 59","063f79a8":"## PMR3508 - Aprendizado de M\u00e1quina e Reconhecimento de Padr\u00f5es\n\n### Trabalho 1 - Base Adult","5a988e1d":"Saving result to csv","6b6a7cd9":"Test data","da601233":"back to code"}}