{"cell_type":{"f5239dfb":"code","6454a7d1":"code","84438708":"code","f60c8fdf":"code","bb63d871":"code","9f31ffaa":"code","16ced6bf":"code","6c406a7f":"code","38de356d":"code","e4a131b0":"code","5a0bf581":"code","5a083a8e":"code","254d4c69":"code","b8d8dc3a":"code","5bb80b82":"code","eed4a5e9":"code","c129dcfd":"code","a29bac87":"code","61a1650e":"code","bb082d2f":"code","30701bb0":"code","cf421d23":"markdown","3942d8ac":"markdown","49fcb3a1":"markdown","d0acdf5f":"markdown","b501673f":"markdown","8a69f118":"markdown","6868f2e9":"markdown","4a0e360f":"markdown","4de9010a":"markdown","2ab642f3":"markdown","ddc2ce0b":"markdown","3cca97a4":"markdown","2cb3f9d2":"markdown","d9b95694":"markdown"},"source":{"f5239dfb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6454a7d1":"train = pd.read_json('..\/input\/plain-text-wikipedia-202011\/enwiki20201020\/0266c1a8-c9e9-4fe5-b271-85269772e88e.json', encoding='ISO-8859-2')\ntrain.head()","84438708":"df.isnull().sum()","f60c8fdf":"#Code by Ion Mosnoi https:\/\/www.kaggle.com\/mosnoiion\/countvectorizer-multinomialnb\n\n#We don't have test\/submission. Only train\/df.\n\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.feature_extraction.text import TfidfTransformer\n\ncount_vect = CountVectorizer()\nX_train_counts = count_vect.fit_transform(train['text'])\n#X_test_counts = count_vect.transform(test['text'])\n\ntf_transformer = TfidfTransformer(use_idf=True).fit(X_train_counts)\nX_train_tf = tf_transformer.transform(X_train_counts)\n#X_train_test = tf_transformer.transform(X_test_counts)\n\n\nX_train_counts.shape","bb63d871":"#Code by Ion Mosnoi https:\/\/www.kaggle.com\/mosnoiion\/countvectorizer-multinomialnb\n\nlabels = train['title'].unique().tolist()\ntrain['label'] = train['title'].apply(lambda x:labels.index(x))\ntrain.head()","9f31ffaa":"#from sklearn.naive_bayes import MultinomialNB\n#clf = MultinomialNB().fit(X_train_tf, train['label'])","16ced6bf":"df = pd.read_json('..\/input\/plain-text-wikipedia-202011\/enwiki20201020\/0104b39c-7aa4-45cd-8d28-b05dc6bafdf2.json', encoding='ISO-8859-2')\ndf.head()","6c406a7f":"!pip install dataprep","38de356d":"#Second row, second column \n\ndf.iloc[2,1]","e4a131b0":"#Code by https:\/\/docs.dataprep.ai\/user_guide\/clean\/clean_text.html\n\ndf = pd.DataFrame(\n    {\n        \"text\": [\n            \"A California Romance is a 1922 American comedy film directed\", \"by Jerome Storm\", \"and written by Charles E. Banks.\", \"The film stars John Gilbert,\", \"Estelle Taylor, George Siegmann, Jack McDonald and C.E. Anderson.\", \"The film was released on December 24, 1922, by Fox Film Corporation.\", \"==Cast== *John Gilbert as Don Patricio Fernando\", \"*Estelle Taylor as Donna Dolores\", \"*George Siegmann as Don Juan Diego\", \"*Jack McDonald as Don Manuel Casca\", \"*C.E. Anderson as Steve\", \"==References== ==External links==\", \"* Category:1922 films Category:American films\", \"Category: English-language films\", \"Category: American comedy films\", \"Category: Fox Film films\", \"Category: Films directed by Jerome Storm\", \"Category: American silent feature films\", \"Category: American black-and-white films\", \"Category: 1922 comedy films\",\n            123,\n            np.nan,\n            \"NULL\",\n        ]\n    }\n)\ndf","5a0bf581":"#Second row, second column \n\ndf.iloc[3]","5a083a8e":"#Code by https:\/\/docs.dataprep.ai\/user_guide\/clean\/clean_text.html\n\nfrom dataprep.clean import clean_text\nclean_text(df, \"text\")","254d4c69":"#Code by https:\/\/docs.dataprep.ai\/user_guide\/clean\/clean_text.html\n\nimport re\n\ndef split(text: str) -> str:\n    return str(text).split()\n\ndef replace_z(text: str, value: str) -> str:\n    return re.sub(r\"z\", value, str(text), flags=re.I)\n\ncustom_pipeline = [\n    {\"operator\": \"lowercase\"},\n    {\"operator\": \"remove_digits\"},\n    {\"operator\": split},\n    {\"operator\": replace_z, \"parameters\": {\"value\": \"*\"}},\n    {\"operator\": \"remove_whitespace\"},\n]\nclean_text(df, \"text\", pipeline=custom_pipeline)","b8d8dc3a":"#Code by https:\/\/docs.dataprep.ai\/user_guide\/clean\/clean_text.html\n\ncustom_pipeline = [{\"operator\": \"uppercase\"}]\nclean_text(df, \"text\", pipeline=custom_pipeline)","5bb80b82":"#Code by https:\/\/docs.dataprep.ai\/user_guide\/clean\/clean_text.html\n\ncustom_pipeline = [{\"operator\": \"remove_punctuation\"}]\nclean_text(df, \"text\", pipeline=custom_pipeline)","eed4a5e9":"#Code by https:\/\/docs.dataprep.ai\/user_guide\/clean\/clean_text.html\n\ncustom_pipeline = [\n    {\"operator\": \"replace_punctuation\", \"parameters\": {\"value\": \"<PUNC>\"}}\n]\nclean_text(df, \"text\", pipeline=custom_pipeline)","c129dcfd":"#Code by https:\/\/docs.dataprep.ai\/user_guide\/clean\/clean_text.html\n\ncustom_pipeline = [{\"operator\": \"remove_stopwords\"}]\nclean_text(df, \"text\", pipeline=custom_pipeline)","a29bac87":"#Code by https:\/\/docs.dataprep.ai\/user_guide\/clean\/clean_text.html\n\ncustom_pipeline = [\n    {\"operator\": \"remove_stopwords\", \"parameters\": {\"stopwords\": {\"a\", \"or\", \"of\", \"and\", \"as\"}}}\n]\nclean_text(df, \"text\", pipeline=custom_pipeline)","61a1650e":"#Code by https:\/\/docs.dataprep.ai\/user_guide\/clean\/clean_text.html\n\ncustom_pipeline = [{\"operator\": \"replace_stopwords\", \"parameters\": {\"value\": \"<S>\"}}]\nclean_text(df, \"text\", pipeline=custom_pipeline)","bb082d2f":"from dataprep.clean import clean_headers\nclean_headers(train)","30701bb0":"clean_headers(train, case=\"pascal\")","cf421d23":"#uppercase\n\nConvert all characters to uppercase.","3942d8ac":"#remove_stopwords\n\nRemove common words. By default, the set of stopwords to remove is NLTK\u2019s English stopwords.","49fcb3a1":"#Create a label Column.","d0acdf5f":"#The function clean_headers() cleans column headers in a DataFrame, and standardizes them in a desired format.","b501673f":"#replace_stopwords\n\nReplace common words with the value. By default, the set of stopwords to replace is NLTK\u2019s English stopwords","8a69f118":"\"John Gilbert (July 10, 1897 \u2013 January 9, 1936) was an American actor, screenwriter and director.\"\n\n\"Gilbert's career declined precipitously when silent pictures gave way to talkies. Though Gilbert was often cited as one of the high-profile examples of an actor who was unsuccessful in making the transition to sound films, his decline as a star had far more to do with studio politics and money than with the sound of his screen voice, which was rich and distinctive.\"\n\nhttps:\/\/en.wikipedia.org\/wiki\/John_Gilbert_(actor)\n\n![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcQqmSU2koIE_GU6MHon1StJnQOMyZ-Ab35tHA&usqp=CAU)classicmoviefavorites.com","6868f2e9":"#To use a custom set of words, pass the set into the stopwords parameter.","4a0e360f":"Default clean_text()\nThe default pipeline for the clean_text() function is the following:\n\nfillna: Replace all null values with NaN.\n\nlowercase: Convert all characters to lowercase.\n\nremove_digits: Remove numbers.\n\nremove_html Remove HTML tags.\n\nremove_urls: Remove URLs.\n\nremove_punctuation: Remove punctuation marks.\n\nremove_accents: Remove accent marks.\n\nremove_stopwords: Remove stopwords.\n\nremove_whitespace: Remove extra spaces, and tabs and newlines.\n\nhttps:\/\/docs.dataprep.ai\/user_guide\/clean\/clean_text.html","4de9010a":"#remove_punctuation\n\nRemove all punctuation marks defined in Python\u2019s string.punctuation.","2ab642f3":"#Thanks Again to Dataprep Clean - SFU Data Science Research Group - SIMON FRASER UNIVERSITY\n\n#https:\/\/docs.dataprep.ai\/user_guide\/clean\/introd","ddc2ce0b":"#Users can also define and pass in their own functions using the pipeline parameter.","3cca97a4":"#replace_punctuation\n\nReplace all punctuation marks defined in string.punctuation with the value.","2cb3f9d2":"#Your Notebook tried to allocate more memory than is avaiable. It has restarted.\n\nLet's try another script.","d9b95694":"#Dataprep Clean\n\nDataPrep.Clean provides functions for quickly and easily cleaning and validating your data.\n\nSection Contents: Column Headers, Country Names, Dates and Times, Duplicate Values, Email Addresses,\n\nGeographic Goordinates, IP Addresses, Phone Numbers, Text, URLs, US Street Addresses, Whole DataFrame\n\nDataprep is an initiative by SFU Data Science Research Group to speed up Data Science.\n\nAcknowlegdements\n\nSFU Data Science Research Group - SIMON FRASER UNIVERSITY\n\nhttps:\/\/docs.dataprep.ai\/user_guide\/clean\/clean_text.html\n\nhttps:\/\/dataprep.ai\/"}}