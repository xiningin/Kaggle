{"cell_type":{"daaef072":"code","c2892440":"code","3f34b220":"code","1bd5cdfc":"code","c593e2b8":"code","c4bc2d87":"code","b03244d4":"code","01edc4be":"code","c079d5fa":"code","289b2ab3":"code","7425c88a":"code","dccef03b":"code","7d8dc31b":"code","d2e6bda5":"code","0f1e7cf5":"code","ccbafd44":"code","d4f86f24":"code","f02647c2":"code","d4e8c88b":"code","83435d03":"code","85afe540":"code","7cc3dfcd":"code","54bd4d09":"code","52effce2":"code","df2e4f4b":"code","8fe455ea":"code","c6e569c5":"code","69bfc7a4":"code","a4fa45c0":"code","902d86a6":"code","bcb0064d":"code","7f27e470":"code","1424962a":"code","6b9adbf2":"code","97256ed7":"code","8f33acca":"code","270006da":"code","18185795":"code","f1b70969":"code","46e56a71":"code","2dba1d61":"code","f8d6a065":"code","c65043ea":"code","678ecd2c":"code","1ffdfa0a":"code","beea0f59":"code","ffbd8380":"code","41d4b4d7":"code","05f29597":"code","1e3cfcbd":"code","e88d5af1":"code","9f60215d":"code","c34e9ef1":"code","9730acda":"code","3892d695":"code","46050069":"code","b5b05bab":"markdown","8ac9efc1":"markdown","f7aaec74":"markdown","e979671c":"markdown","41aaf9fd":"markdown","8586cd06":"markdown","8680d572":"markdown","48256695":"markdown","02cab8b2":"markdown","ae8d6af8":"markdown"},"source":{"daaef072":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c2892440":"#Load important libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport matplotlib.patches as mpatches\n%pip install bs4\nimport requests\nfrom bs4 import BeautifulSoup\nwarnings.filterwarnings('ignore')","3f34b220":"data=pd.read_csv('..\/input\/covid-world-vaccination-progress\/country_vaccinations.csv')","1bd5cdfc":"data.head(100)","c593e2b8":"data.info()","c4bc2d87":"data.shape","b03244d4":"data.isnull().sum()","01edc4be":"data.describe(include='all')","c079d5fa":"#Dropping source name and source website as they are not imperative enough to answer the questions.\ndata.drop(['source_name','source_website'],axis=1,inplace=True)","289b2ab3":"data.head(10)","7425c88a":"#Showing Country name without duplicates.\ndata['country'].unique()","dccef03b":"data=data[data['country'].apply(lambda x: x not in ['England','Wales','Northern Ireland','Scotland'])]","7d8dc31b":"#Making a list to store the total occurence of each country in our dataset.\nl=[]\nfor i in range(94):\n    l.append(data['country'].value_counts()[i])","d2e6bda5":"#United kingdom has the highest occurence (69) in our dataset and Saint Helena and Greenland has the lowest occurence (1).\nfig = px.pie(data, values=l, names=data['country'].value_counts().index)\nfig.update_traces(textposition='inside', textfont_size=14)\nfig.show()","0f1e7cf5":"#Number of unique vaccines with their total use.\ndata['vaccines'].value_counts().unique","ccbafd44":"#Plot to show the counts of vaccines. Clearly, \nplt.figure(figsize=(12,14))\nsns.countplot(y=data['vaccines'],order=data['vaccines'].value_counts().index)\nplt.show()","d4f86f24":"#Zero null values are present in vaccines.\ndata['vaccines'].isnull().sum()","f02647c2":"df1=data[['country','iso_code','vaccines']]","d4e8c88b":"df1","83435d03":"# Map showing the use of different vaccines by each country.\nfig = px.choropleth(df1, locations='iso_code',color=df1['vaccines'],hover_name=\"country\", # column to add to hover information\n                    color_continuous_scale=px.colors.sequential.Plasma,width=1500,height=700)\nfig.show()","85afe540":"data.head(10)","7cc3dfcd":"#Total null values in all columns\ndata.isnull().sum()","54bd4d09":"df2=data[['country','daily_vaccinations']]","52effce2":"#Grouping the data on country column by sum of daily vaccinations in each country. \ndf2a=df2.groupby('country').sum().sort_values('daily_vaccinations',ascending=False)","df2e4f4b":"df2a=df2a.reset_index()","8fe455ea":"df2a","c6e569c5":"#United states has the highest number of vaccinations given so far.\nfig = px.bar(df2a.head(10), y=\"daily_vaccinations\",color='daily_vaccinations', x=\"country\",title='Country vs Total daily vaccinations')\nfig.show()","69bfc7a4":"fig = go.Figure(data=go.Choropleth(\n    locationmode = \"country names\",\n    locations = df2a['country'],\n    z = df2a['daily_vaccinations'],\n    text = df2a['daily_vaccinations'],\n   # colorscale=colors,\n    autocolorscale=True,\n    reversescale=False,\n    colorbar_title = 'Total of daily vaccinations',\n))\n\nfig.update_layout(\n    title_text='Total of daily vaccinations by each country',\n    geo=dict(\n        showcoastlines=True,\n    ),\n)","a4fa45c0":"URL=requests.get('https:\/\/www.worldometers.info\/world-population\/population-by-country\/')","902d86a6":"URL.status_code","bcb0064d":"content=BeautifulSoup(URL.text,'html.parser')","7f27e470":"table=content.find('table',class_=\"table table-striped table-bordered\")\n","1424962a":"#Scrapping the id,country and population column from the website's table.\nfor i in table.find_all('tbody'):\n    rows=i.find_all('tr')\n    l1=[]\n    l2=[]\n    l3=[]\n    for j in rows:\n        #print(j)\n        l1.append(j.find('td').text)\n        l2.append(j.find('a').text)\n        l3.append(j.find('td',style=\"font-weight: bold;\").text)","6b9adbf2":"#Making a new dataframe which will contain the scraped data.\npopulation_df=pd.DataFrame({'Country':l2,'Population':l3})","97256ed7":"#Total 235 contries are present in our scraped data.\npopulation_df['Country'].shape","8f33acca":"l=[]\nfor i in range(94):\n    l.append(population_df[population_df['Country']==df2a['country'][i]].values)","270006da":"for i in range(len(l)):\n    if l[i].shape[0]==0:\n        to_fill=np.array([[np.nan],[0]])\n        arr=l[i]\n        l[i]=np.append(arr,to_fill).reshape(1,2)","18185795":"sl=[]\nfor i in range(len(l)):\n    sl.append(str(l[i][0][1]))","f1b70969":"df2a=df2a.assign(population=sl)","46e56a71":"df2a","2dba1d61":"#Their are some countries with population=0. So, I have made a list which contain those countries.\nmissing_countries_pop=[]\nfor i in range(df2a.shape[0]):\n    if df2a.loc[i][2]=='0.0':\n        missing_countries_pop.append(df2a.loc[i][0])","f8d6a065":"missing_countries_pop","c65043ea":"#Adding population values of each contries with population=0\nmiss_con_pop=['10,600,000','97,857','1,207,359','63,155','44,543']","678ecd2c":"d=dict(zip(df2a['country'],df2a['population']))","1ffdfa0a":"j=0\nfor i in d:\n    if d[i]=='0.0':\n        d[i]=miss_con_pop[j]\n        j+=1","beea0f59":"df2a['population']=df2a['country'].map(d)","ffbd8380":"df2a['daily_vaccinations']=df2a[['daily_vaccinations']].astype(int)","41d4b4d7":"la=[]\nfor i in range(df2a.shape[0]):\n    la.append(int(float(df2a['population'][i].replace(',',''))))","05f29597":"df2b=df2a.drop('population',axis=1)","1e3cfcbd":"df2b=df2b.assign(population=la)","e88d5af1":"df2b","9f60215d":"#Function to calculate the vaccination by population ratio.\ndef per_vacc(data_frame1):\n    x=[]\n    for i in range(data_frame1.shape[0]):\n        x.append(data_frame1.iloc[i][1]*100\/int(data_frame1.iloc[i][2]))\n    new_x=np.round(x,decimals=3)\n    return new_x","c34e9ef1":"#Provided df2b as an argument in our function.\nper=per_vacc(df2b)","9730acda":"#Assigning new column 'percentage' to our df2b dataframe.\ndf2b=df2b.assign(percentage=per)","3892d695":"\nfig = px.bar(df2b.head(10), y='percentage',color='percentage',x='country',hover_data=['population','daily_vaccinations'],\n             title='Top 10 countries with vaccinations by population ratio',\n            labels={'daily_vaccinations':'Total vaccinations'})\nfig.show()","46050069":"for col in df2b.columns:\n    df2b[col] = df2b[col].astype(str)\ndf2b['text'] =df2b['country'] + '<br>' + \\\n            ' Total vaccinations '  + df2b['daily_vaccinations'] + '<br>' + \\\n            ' Population ' + df2b['population']\nfig = go.Figure(data=go.Choropleth(\n    locationmode = \"country names\",\n    locations = df2b['country'],\n    z =df2b['percentage'],\n    text=df2b['text'],\n    colorscale='Reds',\n    autocolorscale=True,\n    reversescale=True,\n    marker_line_color='darkgray',\n    marker_line_width=0.5,\n    colorbar_title = 'percentage',\n))\n\nfig.update_layout(\n    title_text='Vaccinations by Population ratio distribution of each country.',\n    geo=dict(\n        showcoastlines=True\n    )\n)","b5b05bab":"The use of Moderna, Oxford\/AstraZeneca, Pfizer\/BioNTech is maximum (1013) and Johnson&Johnson is minimum (4).\n","8ac9efc1":"**Making a piechart inorder to show the total occurence of each unique country in our dataset.**","f7aaec74":"Top 10 countries with total of daily vaccinations","e979671c":"Removing England,Wales,Northern Ireland and Scotland from country column because they all come under UK(United Kingdom).","41aaf9fd":"Israel has the highest percentage in terms of number of vaccinations provided given the population of Israel.","8586cd06":"We have to choose those countries from our scraped data which are present in our dataset.(line-60 to line-66 )","8680d572":"I have done web scrapping to obtained the data containing population of each country in our dataset inorder to calculate the vaccination by population ratio.","48256695":"# Which country has vaccinated more people?","02cab8b2":"# Which country is using what vaccine?","ae8d6af8":"# Which country has vaccinated a larger percent from its population?"}}