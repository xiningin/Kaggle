{"cell_type":{"6e22311f":"code","941c1f06":"code","d3158272":"code","1282534f":"code","34eda006":"code","40ff5d94":"code","298546c1":"code","aab29747":"code","eba92d0c":"code","89483228":"code","507ed2fc":"code","225ae361":"code","def8e8d6":"code","8e377ae7":"code","f239760d":"code","bd6ca3c9":"code","37267258":"code","b51a4237":"code","e3245afe":"code","24087749":"code","6cf38e48":"code","c7158bde":"code","4d811aaa":"code","40f33203":"code","4dfe99f5":"code","b13e93a6":"code","34d3b6ee":"code","43fd6113":"code","7bec5884":"code","b3cbfac8":"code","58ec8590":"code","47eaeac6":"code","e3fcc732":"code","c76e2bd2":"code","d26a783e":"code","2e22dd3a":"code","7f3ca0c4":"code","2b7eb34d":"code","5949d5ba":"code","3756718e":"code","8dccc15a":"code","54de5f8c":"code","71107b7a":"code","fe2d636c":"code","6d81259e":"code","cdef02df":"code","48d557b3":"code","d0e12043":"code","3f1c6b42":"code","d4dfceb0":"code","f2f27662":"code","04e342b7":"code","abe7727f":"code","8bd120fa":"code","2e3091f3":"code","4bc387a7":"code","fe3ec149":"code","aa302d63":"markdown","8dcbcc29":"markdown","2c21f41b":"markdown","6968aff9":"markdown","a0b5867c":"markdown","4ebd7c81":"markdown","f7259328":"markdown","4f71dfa3":"markdown","06443953":"markdown","47c11d96":"markdown","2999f94b":"markdown","f42cb1b0":"markdown","8e6fff08":"markdown","36159a06":"markdown","6031326b":"markdown","70f3fe47":"markdown","8e7a2bfc":"markdown","d2a8d494":"markdown"},"source":{"6e22311f":"import seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nimport warnings\nwarnings.filterwarnings('ignore')\nimport plotly.express as ex\nsns.set_style('darkgrid')\nfrom IPython.display import Image","941c1f06":"Image('..\/input\/heart-image\/heart.jpg')","d3158272":"heart = pd.read_csv(\"\/kaggle\/input\/heart-disease-uci\/heart.csv\")\nprint(\"shape of th dataframe  : \",heart.shape)","1282534f":"# renaming columns for readablity purpose\nheart.columns = ['age','sex','chest_pain','person_blood_pressure','cholestrol','fasting_blood_sugar','resting_ecg','max_hrate','exang'\n                ,'oldpeak','slope','ca','thal','target']\ndf  = heart.copy()","34eda006":"# We Don't Have any Null value's here .\nheart.isnull().sum()","40ff5d94":"# top 5 rows\nheart.head(5)","298546c1":"heart.info()","aab29747":"sns.countplot(heart['target'])\nplt.title(\"Target Observation \")\nplt.show()","eba92d0c":"ones  = heart[heart['target']==1] # people with heart disease\nzeros = heart[heart['target']==0] # people without heart disease","89483228":"Image('..\/input\/heartgif\/heart.gif')","507ed2fc":"plt.rcParams['figure.figsize'] = (14,5)\nplt.subplot(1,2,1)\nsns.kdeplot(heart['age'][heart.target == 1],shade = True,color = \"red\")\nplt.title('People With Heart Disease ')\nplt.xlabel('Age distribution of people with heart disease ')\nplt.subplot(1,2,2)\nsns.kdeplot(heart['age'][heart.target == 0],shade = True,color = \"green\")\nplt.title('People Without  Heart Disease ')\nplt.xlabel('Age distribution of people with heart disease ')\n","225ae361":"pd.crosstab(heart.age,heart.target).plot(kind = 'bar',figsize = (15,7))\nplt.title(\"Age v\/s target\")\nplt.ylabel(\"Frequency\")","def8e8d6":"# sex 1 being male ,0 being female\nheart['sex'][heart['sex']==1]='male'\nheart['sex'][heart['sex']==0]='female'\n\n# renaming chest pain column\nheart['chest_pain'][heart['chest_pain']==0]= 'typical angina'\nheart['chest_pain'][heart['chest_pain']==1]= 'atypical angina'\nheart['chest_pain'][heart['chest_pain']==2]= 'non-anginal pain'\nheart['chest_pain'][heart['chest_pain']==3]= 'asymptomatic'\n\n\n# renaming fasting_blood_sugar \nheart[\"fasting_blood_sugar\"][heart[\"fasting_blood_sugar\"]==1]= 'higher than 120mg\/ml'\nheart[\"fasting_blood_sugar\"][heart[\"fasting_blood_sugar\"]==0]= 'lower than 120mg\/ml'\n\n#renaming  slope \nheart['slope'][heart['slope']==0]= 'upsloping'\nheart['slope'][heart['slope']==1]= 'flat'\nheart['slope'][heart['slope']==2]= 'downsloping'\nheart['slope'] = heart['slope'].astype('object')","8e377ae7":"plt.rcParams['figure.figsize'] = (8,3)\nsns.countplot(heart['sex'][heart.target == 1],palette  = 'BrBG')\nplt.ylabel(\"Heart Diesease frequency\")","f239760d":"sns.countplot(heart['sex'],hue = heart['target'])\nplt.title(\"Gender V\/S Heart Disease\")","bd6ca3c9":"sns.boxplot(heart['target'],heart['person_blood_pressure'])\nplt.title(\"person_blood_pressure v\/s target \")","37267258":"plt.rcParams['figure.figsize'] = (8,3)\nsns.boxenplot(heart['target'],heart['cholestrol'])\nplt.title(\"cholestrol v\/s target \")","b51a4237":"pd.crosstab(heart['fasting_blood_sugar'],heart['target']).plot(kind = 'bar',figsize=(10,4),color=['#FFC300','#581845'])\nplt.title(\"fasting_blood_sugar v\/s target\")","e3245afe":"pd.crosstab(heart[\"chest_pain\"],heart['target']).plot(kind = 'bar',figsize = (16,4),color = [\"red\",\"green\"])\nplt.title(\"Chest pain v\/s Target\")  ","24087749":"# From below chart now ,it's clearly confirmed that male's suffer more from heart disease than female's .\npd.pivot_table(heart,index = [\"sex\",\"chest_pain\"],values = [\"target\"],aggfunc = \"count\").plot(kind = 'bar',figsize = (16,4),colormap = 'PRGn')\nplt.title(\"Sex v\/s ChestPain\")","6cf38e48":"# Relationship between Heart v\/s Age .\nplt.rcParams['figure.figsize'] = (12,6)\n# from below scatter we can conclude that people with heart disease has Higher Heart rate compared to the people who don't have . \nplt.scatter(x = heart.age[(heart.target == 1)] , y = heart.max_hrate[(heart.target == 1)])\nplt.scatter(x = heart.age[(heart.target == 0)] , y = heart.max_hrate[(heart.target == 0)])\nplt.legend([ \"with heart disease\",\"without heart disease\"])\nplt.title(\"Relationship between Heart Rate with Age \")\nplt.xlabel(\"age\")\nplt.ylabel(\"Max Heart\")","c7158bde":"pd.crosstab(heart.exang,heart.target).plot(kind = 'bar',colormap = 'Wistia')\nplt.title(\"Relationship of excercise  Angina with Target \")\nplt.ylabel(\"Target Frequency \")","4d811aaa":"# From the below chart we can conclude that ,\n# people with heart disease have more blood pressure compared to people who do not have .\nsns.boxplot(heart[\"target\"],heart[\"person_blood_pressure\"],hue = heart[\"sex\"],palette = 'viridis')\nplt.title(\"Blood Pressure v\/s Target\")","40f33203":"# From the below chart we conclude that people with or without heart disease tend to have  very less resting ecg value = 2 , \n# but people with heart disease tend to have  very high value for resting ecg = 0 \npd.crosstab(heart['target'], heart['resting_ecg']).plot(kind = 'bar')","4dfe99f5":"plt.rcParams['figure.figsize'] = (12,4)\n# relationship Between Major vessel's with target\n# from below chart we can conclude that poeple with heart disease have more major cell type = 0,\n# compared to people who do not have heart disease . \npd.crosstab(heart['target'],heart['ca']).plot(kind = 'bar',colormap = 'Blues_r')\nplt.title(\"Relationship Between Major vessel's (CA) with Target\")\nplt.ylabel(\"CA Freaquency\")","b13e93a6":"# Relationship Between Slope v\/s Target .\n\n# 0: Upsloping: better heart rate with excercise (uncommon)\n# 1: Flatsloping: minimal change (typical healthy heart)\n# 2: Downslopins: signs of unhealthy heart\n\n# From Below chart it is clearly visible that people with heart diesease Have More value For Downsloping \n# (which indicates sign of unhealthy heart ) .\n\npd.crosstab(heart['target'],heart['slope']).plot(kind = 'bar',color = ['r','g','y'])\nplt.title(\"Relationship Between Slope v\/s Target\")","34d3b6ee":"# Relationship Between thal (thalium stress result) with Target .\n# thal :  is Blood Disorder .\n# 0,1  : normal\n# 2    : fixed defect: used to be defect but ok now\n# 3    :  reversable defect: no proper blood movement when excercising\n\n# it is clearly visible that People with heart disease are more likely to not suffer from this Blood disorder (Thalessemia) \n# compared with people who are not having heart disease . \n\nsns.boxenplot(heart['target'],heart['thal'])\nplt.title(\"Relationship Between thal (thalium stress result) with Target \")","43fd6113":"# Let's See The Correlation Among The Features .\n\n# Below chart is used to visualize how one feature is correlated with every other Features Present in the dataset .\n# if we have two highly correlated features then we will consider only one of them to avoid overfitting .\n\n# since in our Dataset There is now two  features which are highly correlated ,\n# hence we have consider all the features for training our Model .\n\n\nplt.rcParams['figure.figsize'] = (18, 10)\nsns.heatmap(df.corr(),annot = True ,cmap = 'rainbow_r',annot_kws = {\"Size\":14})\nplt.title( \"Chart Shows Correlation Among Features   : \")","7bec5884":"# Converting Data Type From Int to Object .\n\nheart['age']    = heart['age'].astype(int)\nheart['resting_ecg'] = heart['resting_ecg'].astype('str')\nheart['exang'] = heart['exang'].astype('str')\nheart['thal']  = heart['thal'].astype('str')\nheart['ca']    = heart['ca'].astype('str')","b3cbfac8":"heart.info()","58ec8590":"# Model Building ","47eaeac6":"x = heart.drop(['target'],axis = 1)\ny = heart.target\nprint(x.shape)","e3fcc732":"x.columns","c76e2bd2":"x = pd.get_dummies(x,drop_first = True) # for converting categorical to Numerical value .\nprint(x.shape)","d26a783e":"x.columns","2e22dd3a":"x.head() # dataset after applying get dummies function","7f3ca0c4":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report,confusion_matrix\nfrom sklearn.metrics import roc_auc_score,roc_curve\n\nxtrain,xtest,ytrain,ytest = train_test_split(x,y,test_size = 0.3,random_state = 33)\nprint(\"Train Set Size : \",xtrain.shape)\nprint(\"Train Target Set Size : \",ytrain.shape)\nprint(\"Test  Set Size : \",xtest.shape)\nprint(\"Test  Target Set Size : \",ytest.shape)","2b7eb34d":"# Applying Scaling Standardiztion to all of the features in order to bring them into common scale .\n# Standardiztion : is preferred when most of the featues are not following gaussian distribution . \n\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nxtrain = pd.DataFrame(sc.fit_transform(xtrain))\nxtest  = pd.DataFrame(sc.fit_transform(xtest))","5949d5ba":"# Importing GridSearchCv from sklearn in order to find out the optimal Parameter for given Algorithm\n# that gives best result .\n\nfrom sklearn.model_selection import GridSearchCV","3756718e":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression(random_state = 33 )\n\n# Setting Parameters for Logistic Regression . \n\nparams = {    # Regularization Params\n             'penalty' : ['l1','l2','elasticnet'],\n              # Lambda Value \n             'C' : [0.01,0.1,1,10,100]\n         }\n\nlog_reg = GridSearchCV(lr,param_grid = params,cv = 10)\nlog_reg.fit(xtrain,ytrain)\nlog_reg.best_params_","8dccc15a":"# Make Prediction of test data \nypred = log_reg.predict(xtest)\nprint(classification_report(ytest,ypred))","54de5f8c":"plt.rcParams['figure.figsize'] = (6,4)\nclass_names = [1,0]\ntick_marks = np.arange(len(class_names))\nplt.xticks(tick_marks,class_names)\nplt.yticks(tick_marks,class_names)\n\n#create a heat map\nsns.heatmap(pd.DataFrame(confusion_matrix(ytest,ypred)), annot = True, cmap = 'BuGn_r',\n           fmt = 'g')\nplt.tight_layout()\nplt.title('Confusion matrix for Logistic Regression  Model', y = 1.1)\nplt.ylabel('Actual label')\nplt.xlabel('Predicted label')\nplt.show()","71107b7a":"plt.rcParams['figure.figsize'] = (10,6)\n\n# Get predicted probabilites from the model\ny_proba = log_reg.predict_proba(xtest)[:,1]\n\n# display auc value for log_reg\nauc_log_reg = roc_auc_score(ytest,ypred)\nprint(\"roc_auc_score value for log reg is : \",roc_auc_score(ytest,ypred))\n\n# Create true and false positive rates\nfpr_log_reg,tpr_log_reg,thershold_log_reg_model = roc_curve(ytest,y_proba)\nplt.plot(fpr_log_reg,tpr_log_reg)\nplt.plot([0,1],ls='--')\n#plt.plot([0,0],[1,0],c='.5')\n#plt.plot([1,1],c='.5')\nplt.title('Reciever Operating Characterstic For Logistic Regregression')\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.show()","fe2d636c":"from sklearn.tree import DecisionTreeClassifier \n\ndt = DecisionTreeClassifier(random_state = 33)\n\n\n# Setting Parameters for DecisionTreeClassifier . \n\nparams = {  \n             'criterion'    : [\"gini\", \"entropy\"],\n             'max_features' : [\"auto\", \"sqrt\", \"log2\"],\n              'min_samples_split' :[i for i in range(4,16)],\n              'min_samples_leaf' : [i for i in range(4,16)]\n         }\n\ndt_clf = GridSearchCV(dt,param_grid = params,cv = 10)\ndt_clf.fit(xtrain,ytrain)\ndt_clf.best_params_","6d81259e":"# Make Prediction of test data \nypred = dt_clf.predict(xtest)\nprint(classification_report(ytest,ypred))","cdef02df":"plt.rcParams['figure.figsize'] = (6,4)\nclass_names = [1,0]\ntick_marks = np.arange(len(class_names))\nplt.xticks(tick_marks,class_names)\nplt.yticks(tick_marks,class_names)\n\n#create a heat map\nsns.heatmap(pd.DataFrame(confusion_matrix(ytest,ypred)), annot = True, cmap = 'BuGn_r',\n           fmt = 'g')\nplt.tight_layout()\nplt.title('Confusion matrix for DecisionTreeClassifier   Model', y = 1.1)\nplt.ylabel('Actual label')\nplt.xlabel('Predicted label')\nplt.show()","48d557b3":"plt.rcParams['figure.figsize'] = (10,6)\n\n# Get predicted probabilites from the model\ny_proba = dt_clf.predict_proba(xtest)[:,1]\n\ndt_clf_auc_score = roc_auc_score(ytest,ypred)\n# display auc value for DecisionTreeClassifier\nprint(\"roc_auc_score value for log reg is : \",roc_auc_score(ytest,ypred))\n\n# Create true and false positive rates\nfpr_dt_clf,tpr_dt_clf,thershold_dt_clf_model = roc_curve(ytest,y_proba)\nplt.plot(fpr_dt_clf,tpr_dt_clf)\nplt.plot([0,1],ls='--')\nplt.plot([0,0],[1,0],c='.5')\nplt.plot([1,1],c='.5')\nplt.title('Reciever Operating Characterstic For DecisionTreeClassifier ')\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.show()","d0e12043":"from sklearn.ensemble import RandomForestClassifier\nrf_clf = RandomForestClassifier(n_estimators = 150,min_samples_split = 20,min_samples_leaf = 5,random_state = 33)\nrf_clf.fit(xtrain,ytrain)\nyperd = rf_clf.predict(xtest)","3f1c6b42":"# Make Prediction of test data \nypred = rf_clf.predict(xtest)\nprint(classification_report(ytest,ypred))","d4dfceb0":"plt.rcParams['figure.figsize'] = (6,4)\nclass_names = [1,0]\ntick_marks = np.arange(len(class_names))\nplt.xticks(tick_marks,class_names)\nplt.yticks(tick_marks,class_names)\n\n#create a heat map\nsns.heatmap(pd.DataFrame(confusion_matrix(ytest,ypred)), annot = True, cmap = 'BuGn_r',\n           fmt = 'g')\nplt.tight_layout()\nplt.title('Confusion matrix for RandomForestClassifier   Model', y = 1.1)\nplt.ylabel('Actual label')\nplt.xlabel('Predicted label')","f2f27662":"plt.rcParams['figure.figsize'] = (10,6)\n\n# Get predicted probabilites from the model\ny_proba = dt_clf.predict_proba(xtest)[:,1]\n\nrf_auc_score = roc_auc_score(ytest,ypred)\n\n# display auc value for RandomForestClassifier\nprint(\"roc_auc_score value for log reg is : \",roc_auc_score(ytest,ypred))\n\n# Create true and false positive rates\nfpr_rf_clf,tpr_rf_clf,thershold_rf_clf_model = roc_curve(ytest,y_proba)\nplt.plot(fpr_rf_clf,tpr_rf_clf)\nplt.plot([0,1],ls='--')\nplt.plot([0,0],[1,0],c='.5')\nplt.plot([1,1],c='.5')\nplt.title('Reciever Operating Characterstic For RandomForestClassifier ')\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.show()","04e342b7":"from sklearn.neighbors import KNeighborsClassifier\n\nknn = KNeighborsClassifier(n_jobs = -1)\n\n# set params\n\nparams = {\n             \"n_neighbors\" : [i for i in range(15)],\n               'p' : [1,2] ,\n              'leaf_size' : [i for i in range(15)],\n               \n          }\nknn = GridSearchCV(knn,param_grid = params, cv = 5)\nknn.fit(xtrain,ytrain)\nknn.best_params_","abe7727f":"# Make Prediction of test data \nypred = knn.predict(xtest)\nprint(classification_report(ytest,ypred))","8bd120fa":"plt.rcParams['figure.figsize'] = (6,4)\nclass_names = [1,0]\ntick_marks = np.arange(len(class_names))\nplt.xticks(tick_marks,class_names)\nplt.yticks(tick_marks,class_names)\n\n#create a heat map\nsns.heatmap(pd.DataFrame(confusion_matrix(ytest,ypred)), annot = True, cmap = 'BuGn_r',\n           fmt = 'g')\nplt.tight_layout()\nplt.title('Confusion matrix for KNN Algorithm   Model', y = 1.1)\nplt.ylabel('Actual label')\nplt.xlabel('Predicted label')","2e3091f3":"plt.rcParams['figure.figsize'] = (10,6)\n\n# Get predicted probabilites from the model\ny_proba = knn.predict_proba(xtest)[:,1]\n\nknn_auc_score = roc_auc_score(ytest,ypred)\n\n\n# display auc value for KNN Algorithm\nprint(\"roc_auc_score value for log reg is : \",roc_auc_score(ytest,ypred))\n\n# Create true and false positive rates\nfpr_KNN,tpr_KNN,thershold_KNN_model = roc_curve(ytest,y_proba)\nplt.plot(fpr_KNN,tpr_KNN)\nplt.plot([0,1],ls='--')\nplt.plot([0,0],[1,0],c='.5')\nplt.plot([1,1],c='.5')\nplt.title('Reciever Operating Characterstic For KNN Algorithm ')\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.show()","4bc387a7":"plt.figure(figsize=(10,6))\nplt.title('Reciever Operating Characterstic Curve')\nplt.plot(fpr_log_reg,tpr_log_reg,label='LogisticRegression')\nplt.plot(fpr_dt_clf,tpr_dt_clf,label='DecisionTreeClassifier')\nplt.plot(fpr_rf_clf,tpr_rf_clf,label='RandomForestClassifier')\nplt.plot(fpr_KNN,tpr_KNN,label='KNearestNeighbors ')\nplt.plot([0,1],ls='--')\nplt.plot([0,0],[1,0],c='.5')\nplt.plot([1,1],c='.5')\nplt.ylabel('True positive rate')\nplt.xlabel('False positive rate')\nplt.legend()\nplt.show()\n","fe3ec149":"print(\"Area Under Curve Score values for Different algorithms : \")\nprint(\"LogisticRegression          : \",auc_log_reg)\nprint(\"DecisionTreeClassfier       : \",dt_clf_auc_score)\nprint(\"RandomForest Classifier     : \",rf_auc_score)\nprint(\"KnearestNeighborsClassifier : \",knn_auc_score)","aa302d63":"# let's visual the relationship between fasting_blood_sugar and target ","8dcbcc29":"# exang == 0 ,means person who does not do any exercise or stressfull work .\n# exang == 1 ,means person who does  exercise or stressfull work .\n\n\n# Angina is often brought on by exercise and other strenuous activities and gets better with rest.\n# When the body requires the heart to pump more blood, \n# the heart muscle is asked to do more work and that can cause it to outstrip its energy supply. \n# When the body rests, angina should start to subside","2c21f41b":"DataSet Source : https:\/\/www.kaggle.com\/ronitf\/heart-disease-uci\/download","6968aff9":"#  let's visual the relationship between person_blood_pressure and target ","a0b5867c":"#  let's visual the relationship between sex and target ","4ebd7c81":"# Decision Tree Classifier","f7259328":"Thank You :) Please Up vote if you like my work .","4f71dfa3":"#  let's visual the relationship between cholestrol and target","06443953":"# KNN Algorithm","47c11d96":"# let's see which gender suffer's more from heart disease,\n# from the chart it's clearly visible that men's are more likely to have heart disease than female's.","2999f94b":"# Logistic Regression ","f42cb1b0":"# most of people with heart disease are in the range of 40 - 65 ,and \n# we know that people above than age 75 years are less in terms of population ,","8e6fff08":"#Low blood pressure that causes an inadequate flow of blood to the body's organs can cause strokes,\n# heart attacks, and kidney failure.","36159a06":"# target = 1 , means person having heart disease\n# target = 0 , means person not having heart disease\n# our dataset seems balanced .","6031326b":"# the boxplot shows that blood pressure of people without  heart diesease is slighlty more than the\n# person with  heart disease . ","70f3fe47":"# RandomForestClassifier","8e7a2bfc":"# High  cholesterol levels are a risk factor for heart disease ,from the below chart we can conclude that\n# people with heart disease have high cholesterol rate .","d2a8d494":"# Note : Older people are at greater risk of having heart disease ,let's see by plotting distribution\n# plot, to get get better intitution .\n\n# it's seems from the first distplot that,most of people with heart disease are in the range of 45 - 65 ,and \n#we know that people above than age 75 years are less in terms of population ,\n# and also people less than 35 years are not much prone to heart disease's . "}}