{"cell_type":{"e04a24b9":"code","67f30b03":"code","b3ece3a8":"code","b5d0023d":"code","e465d798":"code","05e7576f":"code","b3a8cce6":"code","f53c98c3":"code","8707ea65":"code","53bf9d4f":"code","1338fbd6":"code","2d28ae7d":"code","500adaa8":"code","da29bd86":"code","93782db2":"code","c09f200e":"code","f4e0bcf8":"code","18353728":"code","d4e68275":"code","01850a63":"code","73b5263a":"code","dd1c754b":"code","0664c156":"code","482e427b":"code","ce1623b8":"code","b88a45ba":"code","f1ab6748":"code","cd9fecea":"code","796c98a3":"code","a26e6ac8":"code","89f2daab":"code","9cbd7a6e":"code","3b291b64":"code","36839801":"code","a1476dd7":"code","c85c0605":"code","45f396fb":"code","91603234":"code","dddc17c3":"code","8aa6765f":"code","d767c8c2":"code","fd8ff043":"code","65591f9a":"code","724dd503":"code","2736b3fb":"code","3bce0012":"code","5fb6d7b4":"code","92de8989":"code","681c6b07":"code","38c3d6e2":"code","13c6d9a6":"code","c7176dc1":"code","082a3465":"code","ec4e3d88":"code","9161e573":"code","d519cdf6":"code","8e367cfe":"code","f5c40810":"code","a19e8942":"code","f3a5d8ca":"code","fe39f5b6":"code","ea8671f9":"code","76fa113e":"code","4e33a3f9":"code","b0c7c4e6":"code","4ab45f82":"code","ad3b4748":"code","ec2c3e67":"code","c85c319c":"code","028ed2e9":"code","798e0c04":"code","517b962a":"code","3b8bdaa4":"code","d3bdf48b":"code","c716bc69":"code","f4f94b79":"code","ff49dd55":"code","4a752a37":"code","8083edb6":"code","0257a010":"code","2831cf6e":"code","e305eaa8":"code","49ed1a52":"code","dc7694b5":"code","77b9d81e":"code","2abdc220":"code","daf9b57e":"code","468f8dd8":"code","09c7ece2":"code","31e4492a":"code","ea7aab30":"code","7bf1ff68":"code","0a185cea":"code","e8f08557":"code","e2dc6f1c":"code","1a332392":"code","92295f6e":"code","c387b8c2":"code","0b72c11a":"code","4af5f545":"code","e6cd3459":"code","5ec8d327":"code","2bfa8aa5":"code","eb2a4a07":"code","ec2f9d28":"code","dd66dc71":"code","132c02a9":"code","ac04edf8":"code","e0ccfddb":"code","4bacbea9":"code","183b1194":"code","a5fa173c":"code","d61a8128":"code","73bfb52d":"code","c7fd99d8":"code","1d5f0c06":"code","cada910d":"markdown","e0150e80":"markdown","a4195ce5":"markdown","d2f83099":"markdown","32759bda":"markdown","facf0bc9":"markdown","e14c5f38":"markdown","95a1229e":"markdown","5067ae1d":"markdown","5e44eaed":"markdown","483ade28":"markdown","9a72f9d8":"markdown","2d6f5f9d":"markdown","f36ed0bd":"markdown","9976def6":"markdown","ea8d7f98":"markdown","94278e34":"markdown","20d9e009":"markdown","7659f418":"markdown","e37a9352":"markdown","d15fd5fa":"markdown","e9330f4b":"markdown","5574f4f9":"markdown","597abe01":"markdown","9a2cf659":"markdown","99ac2f06":"markdown","5aecf836":"markdown","5b1946c9":"markdown","c428780a":"markdown","2a74f0e7":"markdown","7c4c649e":"markdown","376b906a":"markdown","e47f1ca1":"markdown","28036fd1":"markdown","90a76fec":"markdown","9712fa9f":"markdown","6ce5f901":"markdown","83fbd716":"markdown","a1a07274":"markdown","f98409fe":"markdown","8a1638fa":"markdown","6175b6ed":"markdown","9836e547":"markdown","c8d191b9":"markdown","6ca759b9":"markdown","0bf55573":"markdown","9fbfd24d":"markdown"},"source":{"e04a24b9":"import numpy as np\nimport pandas as pd","67f30b03":"populasyon = np.random.randint(0, 80, 10000)","b3ece3a8":"populasyon[0:10]","b5d0023d":"#orneklem cekimi\nnp.random.seed(115)\norneklem = np.random.choice(a = populasyon, size = 100)\norneklem[0:10]","e465d798":"orneklem.mean()","05e7576f":"populasyon.mean()","b3a8cce6":"#orneklem da\u011f\u0131l\u0131m\u0131","f53c98c3":"np.random.seed(10)\norneklem1 = np.random.choice(a = populasyon, size = 100)\norneklem2 = np.random.choice(a = populasyon, size = 100)\norneklem3 = np.random.choice(a = populasyon, size = 100)\norneklem4 = np.random.choice(a = populasyon, size = 100)\norneklem5 = np.random.choice(a = populasyon, size = 100)\norneklem6 = np.random.choice(a = populasyon, size = 100)\norneklem7 = np.random.choice(a = populasyon, size = 100)\norneklem8 = np.random.choice(a = populasyon, size = 100)\norneklem9 = np.random.choice(a = populasyon, size = 100)\norneklem10 = np.random.choice(a = populasyon, size = 100)","8707ea65":"(orneklem1.mean() + orneklem2.mean() + orneklem3.mean() + orneklem4.mean() + orneklem5.mean() \n+ orneklem6.mean() + orneklem7.mean() + orneklem8.mean() + orneklem9.mean() + orneklem10.mean() )  \/ 10","53bf9d4f":"orneklem1.mean()","1338fbd6":"orneklem2.mean()","2d28ae7d":"import seaborn as sns\ntips = sns.load_dataset(\"tips\")\ndf = tips.copy()\ndf.head()","500adaa8":"df.describe().T","da29bd86":"!pip install researchpy # \u00f6nemli\nimport researchpy as rp","93782db2":"rp.summary_cont(df[[\"total_bill\",\"tip\",\"size\"]]) # say\u0131sal de\u011fi\u015fkenleri se\u00e7me","c09f200e":"rp.summary_cat(df[[\"sex\",\"smoker\",\"day\"]]) # kategorik de\u011fi\u015fkenler i\u00e7in","f4e0bcf8":"df[[\"tip\",\"total_bill\"]].cov() #kovaryans bilgisi","18353728":"df[[\"tip\",\"total_bill\"]].corr() #korelasyon bilgisi","d4e68275":"import numpy as np # ceo bilimsel bir dayanak ve esneklik isteniyor. +al\u0131c\u0131 var sat\u0131c\u0131 var \u00fcr\u00fcn var +al\u0131c\u0131lara ne kadar \u00fccret \u00f6derdiniz diye soruluyor +optimumu fiyat belirlenmek isteniyor.\nfiyatlar = np.random.randint(10,110, 1000)","01850a63":"fiyatlar.mean()","73b5263a":"import statsmodels.stats.api as sms # yeni\n","dd1c754b":"sms.DescrStatsW(fiyatlar).tconfint_mean() # g\u00fcven aral\u0131\u011f\u0131 alma !!","0664c156":"from scipy.stats import bernoulli #scipy import etme\n\n","482e427b":"p = 0.6","ce1623b8":"rv = bernoulli(p)\nrv.pmf(k = 0) # pmf olas\u0131l\u0131k k\u00fctle fonksiyonu","b88a45ba":"import numpy as np\nrng = np.random.RandomState(123)\nfor i in np.arange(1,21):\n    deney_sayisi = 2**i\n    yazi_turalar = rng.randint(0, 2, size = deney_sayisi)\n    yazi_olasiliklari = np.mean(yazi_turalar)\n    print(\"At\u0131\u015f Say\u0131s\u0131:\",deney_sayisi,\"---\",'Yaz\u0131 Olas\u0131l\u0131\u011f\u0131: %.2f' % (yazi_olasiliklari * 100))","f1ab6748":"rng.randint(0, 2, size = 5)","cd9fecea":"1\/5","796c98a3":"from scipy.stats import binom","a26e6ac8":"###\u00e7e\u015fitli yerlere reklamlar veriliyor t\u0131klanma ve gerid\u00f6n\u00fc\u015f oranlar\u0131 optimize edilmeye \u00e7al\u0131\u015f\u0131l\u0131yor,buna y\u00f6nelik belirli mecralarda\n###\u00e7e\u015fitli senaryolara g\u00f6re reklama t\u0131klanma olas\u0131l\u0131klar\u0131 hesaplanmak isteniyor.\n###detaylar:*bir mecrada reklam verilecek *da\u011f\u0131l\u0131m ve reklama t\u0131klanma olas\u0131l\u0131\u011f\u0131 biliniyor(0.01)\n###soru:reklam\u0131 100 ki\u015fi g\u00f6rd\u00fc\u011f\u00fcnde 1,5,10 t\u0131klanma olas\u0131l\u0131\u011f\u0131 nedir ?\n\np = 0.01\nn = 100\nrv = binom(n, p)\nprint(rv.pmf(1))\nprint(rv.pmf(5))\nprint(rv.pmf(10))","89f2daab":"from scipy.stats import poisson","9cbd7a6e":"#hatal\u0131 ilan giri\u015fi olas\u0131l\u0131klar\u0131 hesaplanmak isteniyor.\n#detaylar:*bir y\u0131l \u00f6l\u00e7\u00fcm yap\u0131l\u0131yor.Da\u011f\u0131l\u0131m biliniyor(poisson) ve lambda(ortalama hata say\u0131s\u0131) 0.1\n#hi\u00e7 hata olmamas\u0131,3 hata ve 5 hata olma olas\u0131l\u0131\u011f\u0131?\nlambda_ = 0.1","3b291b64":"rv = poisson(mu = lambda_)\nprint(rv.pmf(k = 0))","36839801":"print(rv.pmf(k = 3))","a1476dd7":"print(rv.pmf(k = 5))","c85c0605":"from scipy.stats import norm\n#problem:bir yat\u0131r\u0131m \u00f6ncesi gelecek ay ile ilgili sat\u0131\u015flar\u0131n belirli de\u011ferlerde ger\u00e7ekle\u015fme olas\u0131klar\u0131n\u0131 belirlenmek istiyor.\n#detaylar:*da\u011f\u0131l\u0131m\u0131n normal oldu\u011fu biliniyor.*ayl\u0131k ortalama sat\u0131\u015f 80k,ss 5k.\n#soru:90kdan fazla sat\u0131\u015f yapma olas\u0131l\u0131\u011f\u0131?","45f396fb":"#90'dan fazla olmas\u0131 \n1-norm.cdf(90, 80, 5)#cdf : k\u00fcm\u00fclatif yo\u011funluk fonksiyonu","91603234":"#70'den fazla olmas\u0131\n1-norm.cdf(70, 80, 5) # fazla derken 1 den c\u0131kart\u0131yoruz","dddc17c3":"#73'den az olmas\u0131\nnorm.cdf(73, 80, 5)# az derken 1den c\u0131kartm\u0131yoruz","8aa6765f":"#85 ile 90 aras\u0131nda olmas\u0131\nnorm.cdf(90, 80, 5) - norm.cdf(85, 80, 5) # kendisinden c\u0131kar\u0131yoruz","d767c8c2":"#web sitesinde ge\u00e7irilen s\u00fcrenin 170 saniye olup olmad\u0131\u011f\u0131n\u0131 test ediyoruz.\nimport numpy as np\n\nolcumler = np.array([17, 160, 234, 149, 145, 107, 197, 75, 201, 225, 211, 119, \n              157, 145, 127, 244, 163, 114, 145,  65, 112, 185, 202, 146,\n              203, 224, 203, 114, 188, 156, 187, 154, 177, 95, 165, 50, 110, \n              216, 138, 151, 166, 135, 155, 84, 251, 173, 131, 207, 121, 120])","fd8ff043":"olcumler[0:10]","65591f9a":"import scipy.stats as stats","724dd503":"stats.describe(olcumler) # skewness \u00e7arp\u0131kl\u0131k,kurtosis bas\u0131kl\u0131k","2736b3fb":"#normallik varsay\u0131m\u0131","3bce0012":"#histogram\npd.DataFrame(olcumler).plot.hist();","5fb6d7b4":"#qqplot\nimport pylab\nstats.probplot(olcumler, dist=\"norm\", plot=pylab)\npylab.show()","92de8989":"from scipy.stats import shapiro","681c6b07":"shapiro(olcumler)","38c3d6e2":"print(\"T Hesap \u0130statisti\u011fi: \" + str(shapiro(olcumler)[0]))\nprint(\"Hesaplanan P-value: \" + str(shapiro(olcumler)[1]))","13c6d9a6":"stats.ttest_1samp(olcumler, popmean = 170)","c7176dc1":"#da\u011f\u0131l\u0131m normal de\u011filse da\u011f\u0131n\u0131ksa kullan\u0131r\u0131z.\nfrom statsmodels.stats.descriptivestats import sign_test","082a3465":"sign_test(olcumler, 170)","ec4e3d88":"#d\u00f6n\u00fc\u015f\u00fcm oran\u0131 testi\n#problem:bir reklam veriliyor,reklama ili\u015fkin yaz\u0131l\u0131m taraf\u0131ndan 0.125 d.o elde ediliyor fakat gelirlerle \u00f6rt\u00fc\u015fm\u00fcyor kontrol et.\n#detaylar:500 ki\u015fi mecrada reklama t\u0131klam\u0131\u015f,40 tanesi siteye gelip al\u0131\u015fveri\u015f yapm\u0131\u015f.\n#\u00f6rnek \u00fczerinden d.o:500\/40=0.08\n\nfrom statsmodels.stats.proportion import proportions_ztest","9161e573":"count = 40\nnobs = 500\nvalue = 0.125","d519cdf6":"proportions_ztest(count, nobs, value)","8e367cfe":"#VERI TIPI I\n#ML modeli ba\u015far\u0131 testi\n#a eski b yeni sistem","f5c40810":"A = pd.DataFrame([30,27,21,27,29,30,20,20,27,32,35,22,24,23,25,27,23,27,23,\n        25,21,18,24,26,33,26,27,28,19,25])\n\nB = pd.DataFrame([37,39,31,31,34,38,30,36,29,28,38,28,37,37,30,32,31,31,27,\n        32,33,33,33,31,32,33,26,32,33,29])\n\n\nA_B = pd.concat([A, B], axis = 1)\nA_B.columns = [\"A\",\"B\"]\n\nA_B.head()","a19e8942":"#VERI TIPI II\n#en k\u00f6t\u00fc b\u00f6yle yap hata veriyorsa","f3a5d8ca":"A = pd.DataFrame([30,27,21,27,29,30,20,20,27,32,35,22,24,23,25,27,23,27,23,\n        25,21,18,24,26,33,26,27,28,19,25])\n\nB = pd.DataFrame([37,39,31,31,34,38,30,36,29,28,38,28,37,37,30,32,31,31,27,\n        32,33,33,33,31,32,33,26,32,33,29])\n\n#A ve A'n\u0131n grubu\nGRUP_A = np.arange(len(A))\nGRUP_A = pd.DataFrame(GRUP_A)\nGRUP_A[:] = \"A\"\nA = pd.concat([A, GRUP_A], axis = 1)\n\n#B ve B'nin Grubu\nGRUP_B = np.arange(len(B))\nGRUP_B = pd.DataFrame(GRUP_B)\nGRUP_B[:] = \"B\"\nB = pd.concat([B, GRUP_B], axis = 1)\n\n#Tum veri\nAB = pd.concat([A,B])\nAB.columns = [\"gelir\",\"GRUP\"]\nprint(AB.head())\nprint(AB.tail())","fe39f5b6":"import seaborn as sns\nsns.boxplot(x = \"GRUP\", y = \"gelir\", data = AB);","ea8671f9":"A_B.head()","76fa113e":"AB.head()","4e33a3f9":"#normallik varsay\u0131m\u0131 yap\u0131yoz shapiro kullan\u0131caz","b0c7c4e6":"from scipy.stats import shapiro","4ab45f82":"shapiro(A_B.A)","ad3b4748":"shapiro(A_B.B)","ec2c3e67":"#varyans homojenligi varsay\u0131m\u0131 levene kullan\u0131l\u0131r.","c85c319c":"stats.levene(A_B.A, A_B.B)","028ed2e9":"stats.ttest_ind(A_B[\"A\"], A_B[\"B\"], equal_var = True)","798e0c04":"test_istatistigi, pvalue = stats.ttest_ind(A_B[\"A\"], A_B[\"B\"], equal_var=True)\nprint('Test \u0130statisti\u011fi = %.4f, p-de\u011feri = %.4f' % (test_istatistigi, pvalue))","517b962a":"stats.mannwhitneyu(A_B[\"A\"], A_B[\"B\"])","3b8bdaa4":"test_istatistigi, pvalue = stats.mannwhitneyu(A_B[\"A\"], A_B[\"B\"])\nprint('Test \u0130statisti\u011fi = %.4f, p-de\u011feri = %.4f' % (test_istatistigi, pvalue))","d3bdf48b":"#problem:Al\u0131nan e\u011fitimin katma de\u011fer sa\u011flay\u0131p sa\u011flamad\u0131\u011f\u0131 \u00f6l\u00e7\u00fclmek isteniyor.(ba\u011f\u0131ml\u0131 \u00f6rneklem t testi)\n#detaylar:\u00f6nce ve sonra gerekli \u00f6l\u00e7\u00fcmler yap\u0131l\u0131yor.\n# h0 farkyok\n# h1 fark var\noncesi = pd.DataFrame([123,119,119,116,123,123,121,120,117,118,121,121,123,119,\n            121,118,124,121,125,115,115,119,118,121,117,117,120,120,\n            121,117,118,117,123,118,124,121,115,118,125,115])\n\nsonrasi = pd.DataFrame([118,127,122,132,129,123,129,132,128,130,128,138,140,130,\n             134,134,124,140,134,129,129,138,134,124,122,126,133,127,\n             130,130,130,132,117,130,125,129,133,120,127,123])","c716bc69":"oncesi[0:5]","f4f94b79":"sonrasi[0:5]","ff49dd55":" np.arange(len(oncesi))","4a752a37":"#BIRINCI VERI SETI\nAYRIK = pd.concat([oncesi, sonrasi], axis = 1)\nAYRIK.columns = [\"ONCESI\",\"SONRASI\"]\nprint(\"'AYRIK' Veri Seti: \\n\\n \", AYRIK.head(), \"\\n\\n\")\n\n\n#IKINCI VERI SETI\n#ONCESI FLAG\/TAG'INI OLUSTURMA\nGRUP_ONCESI = np.arange(len(oncesi))\nGRUP_ONCESI = pd.DataFrame(GRUP_ONCESI)\nGRUP_ONCESI[:] = \"ONCESI\"\n#FLAG VE ONCESI DEGERLERINI BIR ARAYA GETIRME\nA = pd.concat([oncesi, GRUP_ONCESI], axis = 1)\n#SONRASI FLAG\/TAG'INI OLUSTURMA\nGRUP_SONRASI = np.arange(len(sonrasi))\nGRUP_SONRASI = pd.DataFrame(GRUP_SONRASI)\nGRUP_SONRASI[:] = \"SONRASI\"\n\n#FLAG VE SONRASI DEGERLERINI BIR ARAYA GETIRME\nB = pd.concat([sonrasi, GRUP_SONRASI], axis = 1)\n\n#TUM VERIYI BIR ARAYA GETIRME\nBIRLIKTE = pd.concat([A,B])\nBIRLIKTE\n\n#ISIMLENDIRME\nBIRLIKTE.columns = [\"PERFORMANS\",\"ONCESI_SONRASI\"]\nprint(\"'BIRLIKTE' Veri Seti: \\n\\n\", BIRLIKTE.head(), \"\\n\")","8083edb6":"import seaborn as sns\nsns.boxplot(x = \"ONCESI_SONRASI\", y = \"PERFORMANS\", data = BIRLIKTE);","0257a010":"from scipy.stats import shapiro","2831cf6e":"shapiro(AYRIK.ONCESI)","e305eaa8":"shapiro(AYRIK.SONRASI) # yani normal da\u011f\u0131lm\u0131\u015f ! #1.varsay\u0131m sa\u011flan\u0131yor","49ed1a52":"import scipy.stats as stats\nstats.levene(AYRIK.ONCESI, AYRIK.SONRASI) #p < 0.05 varyanslar homojen de\u011fildir demek.#2. varsay\u0131m sa\u011flanm\u0131yor fakat biz g\u00f6z ard\u0131 ediyoruz \u015fuanl\u0131k.","dc7694b5":"#ba\u011f\u0131ml\u0131 2 \u00f6rneklem t testi uyguluyoruz.\nstats.ttest_rel(AYRIK.ONCESI, AYRIK.SONRASI)","77b9d81e":"test_istatistigi, pvalue = stats.ttest_rel(AYRIK[\"ONCESI\"], AYRIK[\"SONRASI\"])\nprint('Test \u0130statisti\u011fi = %.5f, p-de\u011feri = %.5f' % (test_istatistigi, pvalue)) #h0 reddedilir,e\u011fitim i\u015fe yaram\u0131\u015ft\u0131r.","2abdc220":"stats.mannwhitneyu(AYRIK.ONCESI, AYRIK.SONRASI)\ntest_istatistigi, pvalue =stats.mannwhitneyu(AYRIK.ONCESI, AYRIK.SONRASI)\nprint('Test \u0130statisti\u011fi= %.4f, P de\u011feri= %.4f'% (test_istatistigi, pvalue))","daf9b57e":"#varsayal\u0131m normallik ve varyan homojenli\u011fi varsay\u0131m\u0131 sa\u011flanmad\u0131.bu durumda:\nstats.wilcoxon(AYRIK.ONCESI, AYRIK.SONRASI)","468f8dd8":"test_istatistigi, pvalue = stats.wilcoxon(AYRIK[\"ONCESI\"], AYRIK[\"SONRASI\"])\n\nprint('Test \u0130statisti\u011fi = %.4f, p-de\u011feri = %.4f' % (test_istatistigi, pvalue))","09c7ece2":"#iki oran aras\u0131nda test yapmak i\u00e7in kullan\u0131l\u0131r.\nfrom statsmodels.stats.proportion import proportions_ztest\n#varsay\u0131mlar n1>30 n2>30 ise\n","31e4492a":"#Problem:kullan\u0131c\u0131 aray\u00fcz\u00fc de\u011ferlendirme(mavi buton,ye\u015fil buton)\n#detaylar:k\u0131rm\u0131z\u0131 butonu 1100 ki\u015fi g\u00f6rm\u00fc\u015f 250 ki\u015fi t\u0131klam\u0131\u015f,ye\u015fili 1000 ki\u015fi g\u00f6rm\u00fc\u015f 300 ki\u015fi t\u0131klam\u0131\u015f.\nimport numpy as np\nbasari_sayisi = np.array([300, 250])\ngozlem_sayilari = np.array([1000, 1100])","ea7aab30":"proportions_ztest(count = basari_sayisi, nobs = gozlem_sayilari)#p 0.5den k\u00fc\u00e7\u00fck reddettik o y\u00fczden.","7bf1ff68":"#anasayfada ge\u00e7irilen s\u00fcre art\u0131r\u0131lmak isteniyor.\n#A:Do\u011fal B:Y\u00f6nlendirici C:\u0130lgi \u00c7ekici\n\nA = pd.DataFrame([28,33,30,29,28,29,27,31,30,32,28,33,25,29,27,31,31,30,31,34,30,32,31,34,28,32,31,28,33,29])\n\nB = pd.DataFrame([31,32,30,30,33,32,34,27,36,30,31,30,38,29,30,34,34,31,35,35,33,30,28,29,26,37,31,28,34,33])\n\nC = pd.DataFrame([40,33,38,41,42,43,38,35,39,39,36,34,35,40,38,36,39,36,33,35,38,35,40,40,39,38,38,43,40,42])\n\ndfs = [A, B, C]\n\nABC = pd.concat(dfs, axis = 1)\nABC.columns = [\"GRUP_A\",\"GRUP_B\",\"GRUP_C\"]\nABC.head()","0a185cea":"from scipy.stats import shapiro #normallik i\u00e7in shapiro","e8f08557":"shapiro(ABC[\"GRUP_A\"])","e2dc6f1c":"shapiro(ABC[\"GRUP_B\"])","1a332392":"shapiro(ABC[\"GRUP_C\"]) # normallik varsay\u0131m\u0131 sa\u011fland\u0131.","92295f6e":"stats.levene(ABC[\"GRUP_A\"], ABC[\"GRUP_B\"],ABC[\"GRUP_C\"]) # varyans homojenli\u011fi i\u00e7in levene varsay\u0131m sa\u011fland\u0131.","c387b8c2":"from scipy.stats import f_oneway","0b72c11a":"f_oneway(ABC[\"GRUP_A\"], ABC[\"GRUP_B\"],ABC[\"GRUP_C\"])","4af5f545":"print('{:.5f}'.format(f_oneway(ABC[\"GRUP_A\"], ABC[\"GRUP_B\"],ABC[\"GRUP_C\"])[1]))","e6cd3459":"ABC.describe().T","5ec8d327":"from scipy.stats import kruskal #normallik ve varyans homojenli\u011fi sa\u011flanmazsa kruskal","2bfa8aa5":"kruskal(ABC[\"GRUP_A\"], ABC[\"GRUP_B\"],ABC[\"GRUP_C\"]) #istatiksel bir farkl\u0131l\u0131k vard\u0131r.h0 red ediyoruz","eb2a4a07":"#bah\u015fi\u015f ile \u00f6denen hesap aras\u0131nda korelasyon var m\u0131 ?\nimport seaborn as sns\ntips = sns.load_dataset('tips')\ndf = tips.copy()\ndf.head()","ec2f9d28":"df[\"total_bill\"] = df[\"total_bill\"] - df[\"tip\"]","dd66dc71":"df.head()","132c02a9":"df.plot.scatter(\"tip\",\"total_bill\");","ac04edf8":"from scipy.stats import shapiro # normallik i\u00e7in shapiro","e0ccfddb":"test_istatistigi, pvalue = shapiro(df[\"tip\"])\nprint('Test \u0130statisti\u011fi = %.4f, p-de\u011feri = %.4f' % (test_istatistigi, pvalue))\n\ntest_istatistigi, pvalue = shapiro(df[\"total_bill\"])\nprint('Test \u0130statisti\u011fi = %.4f, p-de\u011feri = %.4f' % (test_istatistigi, pvalue)) #h0 red edildi.","4bacbea9":"df[\"tip\"].corr(df[\"total_bill\"]) # anlaml\u0131 ve anlams\u0131z m\u0131 bilmiyoruz \u015fuan.","183b1194":"df[\"tip\"].corr(df[\"total_bill\"], method = \"spearman\")","a5fa173c":"from scipy.stats.stats import pearsonr","d61a8128":"test_istatistigi, pvalue = pearsonr(df[\"tip\"],df[\"total_bill\"])\n\nprint('Korelasyon Katsay\u0131s\u0131 = %.4f, p-de\u011feri = %.4f' % (test_istatistigi, pvalue))#h0 red ediyoruz,anlaml\u0131 ili\u015fki var demek.","73bfb52d":"from scipy.stats import stats\nstats.spearmanr(df[\"tip\"],df[\"total_bill\"]) # varsay\u0131mlar sa\u011flanm\u0131yorsa spearman yada kendalltau kullan\u0131caz.h0 red edilir.","c7fd99d8":"test_istatistigi, pvalue = stats.spearmanr(df[\"tip\"],df[\"total_bill\"])\n\nprint('Korelasyon Katsay\u0131s\u0131 = %.4f, p-de\u011feri = %.4f' % (test_istatistigi, pvalue))","1d5f0c06":"test_istatistigi, pvalue = stats.kendalltau(df[\"tip\"],df[\"total_bill\"])\n\n\nprint('Korelasyon Katsay\u0131s\u0131 = %.4f, p-de\u011feri = %.4f' % (test_istatistigi, pvalue))","cada910d":"Oransal bir ifade test edilmek istenildi\u011finde kullan\u0131l\u0131r.\n\nHO: p = 0.125 \n\nH1: p != 0.125","e0150e80":"# \u00d6rnek Teorisi","a4195ce5":"## Hipotez Testi","d2f83099":"## Poisson Da\u011f\u0131l\u0131m\u0131\n\n${\\displaystyle f(x,\\lambda )={\\frac {\\lambda ^{x}e^{-\\lambda }}{x!}}\\,\\!}$,  x = 0,1,2,...,n\n^^\nPoisson da\u011f\u0131l\u0131m\u0131, (okunu\u015fu: puason da\u011f\u0131l\u0131m\u0131) olas\u0131l\u0131k kuram\u0131 ve istatistik bilim kollar\u0131nda bir ayr\u0131k olas\u0131l\u0131k da\u011f\u0131l\u0131m\u0131 olup belli bir sabit zaman birim aral\u0131\u011f\u0131nda meydana gelme say\u0131s\u0131n\u0131n olas\u0131l\u0131\u011f\u0131n\u0131 ifade eder.\n\nx = ilgilendi\u011fimiz olay\u0131n orataya c\u0131kma say\u0131s\u0131\n\n\u00d6rnekler: 10 bin kelimeden olu\u015fan kitapta hatal\u0131 kelime say\u0131s\u0131\nKredi kart\u0131 i\u015flemlerinde sahtekarl\u0131k olmas\u0131\nR\u00f6tara d\u00fc\u015fen u\u00e7u\u015f seferi say\u0131s\u0131\n\nn:b\u00fcy\u00fck\np:k\u00fc\u00e7\u00fck\n\nnadir olay olmas\u0131 i\u00e7in\nn > 50\nn*p < 5\n\nrassal denemeler 2 sonuclu olmal\u0131d\u0131r\nayn\u0131 kosullar olmal\u0131d\u0131r\nrassal denemeler birbirinden ba\u011f\u0131ms\u0131z olmal\u0131d\u0131r.\n","32759bda":"# Tek \u00d6rneklem Oran Testi","facf0bc9":"## Korelasyon Analizi\nDe\u011fi\u015fkenler aras\u0131 ili\u015fkinin y\u00f6n\u00fc ve \u015fiddetini g\u00f6sterir.\nKorelasyon anlaml\u0131l\u0131\u011f\u0131 testi yapaca\u011f\u0131z.\n\nVarsay\u0131mlar:\n\n\u0130ki de\u011fi\u015fken i\u00e7inde normallik varsay\u0131m\u0131.  Varsay\u0131m sa\u011flan\u0131yorsa: Pearson Korelasyon Katsay\u0131s\u0131 Varsay\u0131m sa\u011flanm\u0131yorsa: Spearman Korelasyon katsay\u0131s\u0131n\u0131 kullan\u0131caz","e14c5f38":"### Korelasyon Katsay\u0131s\u0131","95a1229e":"## Normal Da\u011f\u0131l\u0131m","5067ae1d":"## B\u00fcy\u00fck Say\u0131lar Yasas\u0131","5e44eaed":"## Ba\u011f\u0131ms\u0131z \u0130ki \u00d6rneklem T Testi(AB Testi)\n\n2 grup aras\u0131nda kar\u015f\u0131la\u015ft\u0131rma yap\u0131lmak istenildi\u011finde kullan\u0131l\u0131r.\n\n### Varsay\u0131mlar\n+Normallik\n\n+Varyans Homojenli\u011fi","483ade28":"## Nonparametrik Hipotez Testi","9a72f9d8":"## Binom Da\u011f\u0131l\u0131m\u0131","2d6f5f9d":"## Varsay\u0131m Kontrolleri ","f36ed0bd":"# Tek \u00d6rneklem T Testi\n\n\u00d6rnek ortalamas\u0131na ili\u015fkin test yapmak i\u00e7in kullan\u0131l\u0131r.\n\n**Hipotezler:**\n\n<d><i>H<\/i><sub>0<\/sub>: <i>\u03bc<\/i> = <i>50<\/i><\/d>   \n<d><i>H<\/i><sub>1<\/sub>: <i>\u03bc<\/i> \u2260 <i>50<\/i><\/d><br><br>\n\n<d><i>H<\/i><sub>0<\/sub>: <i>\u03bc<\/i> <= <i>50<\/i><\/d><br>\n<d><i>H<\/i><sub>1<\/sub>: <i>\u03bc<\/i> > <i>50<\/i><\/d><br><br>\n\n<d><i>H<\/i><sub>0<\/sub>: <i>\u03bc<\/i> >= <i>50<\/i><\/d><br>\n<d><i>H<\/i><sub>1<\/sub>: <i>\u03bc<\/i> < <i>50<\/i><\/d><br><br>\n\n\n\n\n<table><\/table>\n\n**Test \u0130statisti\u011fi:**\n\n${\\displaystyle t={\\frac {{\\bar {x}}-\\mu _{0}}{\\frac {s}{\\sqrt {n}}}}}$\n\n\nP value de\u011feri < 0.05 olmal\u0131 genelde baz\u0131 istisnalar hari\u00e7 (h0 reddetmek i\u00e7in)\n\n1-anak\u00fctle standart sapmas\u0131 biliniyorsa z istatisti\u011fi kullan\u0131r.\n\n2-anak\u00fctle standart sapmas\u0131 bilinmiyorsa ve n > 30 ise z istatisti\u011fi kullan\u0131l\u0131r.\n\n3-anak\u00fctle standart sapmas\u0131 bilinmiyorsa ve n < 30 ise t istatisti\u011fi kullan\u0131l\u0131r.","9976def6":"# Ba\u011f\u0131ml\u0131 \u0130ki \u00d6rneklem T Testi","ea8d7f98":"H0: Varyanslar Homojendir\n\nH1: Varyanslar Homojen De\u011fildir","94278e34":"# \u0130\u015f Uygulamas\u0131: Fiyat Stratejisi Karar Destek","20d9e009":"## Hipotez Testinin Uygulanmas\u0131","7659f418":"### Korelasyonunu Anlaml\u0131l\u0131\u011f\u0131n\u0131n Testi","e37a9352":"H0: Web sitemizde ge\u00e7irilen ortalama s\u00fcre 170'tir\nH1: .. de\u011fi\u015ftir","d15fd5fa":"**Bir rassal de\u011fi\u015fkenin uzun vadeli kararl\u0131l\u0131\u011f\u0131n\u0131 tan\u0131mlayan olas\u0131l\u0131k teoremidir.**","e9330f4b":"## Nonparametrik Hipotez Testi","5574f4f9":"## Hipotez Testi","597abe01":"# Olas\u0131l\u0131k Da\u011f\u0131l\u0131mlar\u0131","9a2cf659":"${\\displaystyle f(k;n,p)={n \\choose k}p^{k}(1-p)^{n-k}}$, k = 0, 1, 2, ...,n\n\n\n${\\displaystyle \\operatorname {E} (X)=np}$\n\n\n${\\displaystyle \\operatorname {Var} (X)=np(1-p)}$\n\nn deneme say\u0131s\u0131 p ba\u015far\u0131 say\u0131s\u0131 k sorulan olas\u0131l\u0131k\ne(x) beklenen de\u011fer \nvar(x) varyans","99ac2f06":"${\\displaystyle f(x\\mid \\mu ,\\sigma ^{2})={\\frac {1}{\\sqrt {2\\pi \\sigma ^{2}}}}e^{-{\\frac {(x-\\mu )^{2}}{2\\sigma ^{2}}}}}$\n\n* $\\mu$  ortalama ya da da\u011f\u0131l\u0131m\u0131n beklenen de\u011feri\n\n* ${\\displaystyle \\sigma }$  standart sapma\n\n* ${\\displaystyle \\sigma ^{2}}$ varyans","5aecf836":"# Varsay\u0131m Kontrol\u00fc","5b1946c9":"## Varsay\u0131mlar","c428780a":"# Hipotez Testi","2a74f0e7":"## Shapiro-Wilks Testi","7c4c649e":"## Varsay\u0131m Kontrol\u00fc","376b906a":"## \u0130ki \u00d6rneklem Oran Testi","e47f1ca1":"Bah\u015fi\u015f veri seti:\n\ntotal_bill: yeme\u011fin toplam fiyat\u0131 (bah\u015fi\u015f ve vergi dahil)\n\ntip: bah\u015fi\u015f\n\nsex: \u00fccreti \u00f6deyen ki\u015finin cinsiyeti (0=male, 1=female)\n\nsmoker: grupta sigara i\u00e7en var m\u0131? (0=No, 1=Yes)\n\nday: g\u00fcn (3=Thur, 4=Fri, 5=Sat, 6=Sun)\n\ntime: ne zaman? (0=Day, 1=Night)\n\nsize: grupta ka\u00e7 ki\u015fi var?","28036fd1":"H0: M1 = M2 \n\nH1: M1 != M2","90a76fec":"# Varyans Analizi","9712fa9f":"# Veri Bilimi i\u00e7in \u0130statistik","6ce5f901":"## Nonparametrik Ba\u011f\u0131ml\u0131 \u0130ki \u00d6rneklem Testi","83fbd716":"# Betimsel \u0130statistikler","a1a07274":"## Nonparametrik Ba\u011f\u0131ms\u0131z \u0130ki \u00d6rneklem Testi","f98409fe":"## Nonparametrik Tek \u00d6rneklem Testi","8a1638fa":"## Nonparametrik Ba\u011f\u0131ms\u0131z \u0130ki \u00d6rneklem Testi","6175b6ed":"# Bernoulli Da\u011f\u0131l\u0131m\u0131","9836e547":"${\\displaystyle f(k;p)=p^{k}(1-p)^{1-k}\\quad {\\text{for }}k\\in \\{0,1\\}}$\n\n\n${\\displaystyle \\operatorname {E} \\left(X\\right)=p}$\n\n$\\operatorname {Var} [X]=pq=p(1-p)$\n\n(Ayn\u0131 ko\u015fullar alt\u0131nda tekrarlanan bir rassal deney veya g\u00f6zlem sonu\u00e7lar\u0131 olumlu-olumsuz, ba\u015far\u0131l\u0131-ba\u015far\u0131s\u0131z, ge\u00e7erli-ge\u00e7ersiz gibi yaln\u0131z iki \u015fekilde ele al\u0131ns\u0131n)","c8d191b9":"\u0130kiden fazla grup varsa kullan\u0131l\u0131r.\nH0: M1 = M2 = M3 (grup ortalamalari arasinda ist anl. farklilik yoktur) \n\nH1: Fark vardir.\n\n### Varsay\u0131mlar\nG\u00f6zlemlerin birbirinden ba\u011f\u0131ms\u0131z olmas\u0131.\n\nNormal da\u011f\u0131l\u0131m\n\nVaryans homojenli\u011fi","6ca759b9":"H0: \u00d6rnek da\u011f\u0131l\u0131m\u0131 ile teorik normal da\u011f\u0131l\u0131m aras\u0131nda ist. ol. anl. bir fark. yoktur\n\nH1: ... fark vard\u0131r","0bf55573":"## Hipotez Testi","9fbfd24d":"## Varsay\u0131m Kontrol\u00fc"}}