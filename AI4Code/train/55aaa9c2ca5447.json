{"cell_type":{"14405789":"code","78e7709d":"code","277503d9":"code","671856dc":"code","95db4390":"code","8cebd61f":"code","d4916311":"code","c36005c4":"code","94318686":"code","0458937a":"code","6242696e":"code","743d2b65":"code","a576c252":"markdown","8a8626d6":"markdown","3dd2107e":"markdown","39d20725":"markdown","879aea99":"markdown","6e405727":"markdown","03fd641e":"markdown"},"source":{"14405789":"#Importing libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","78e7709d":"df = pd.read_csv(\"..\/input\/data.csv\", sep=',')\ndf","277503d9":"X = df.iloc[:,[0,1,2]].values\ny = df.iloc[:,3].values","671856dc":"X","95db4390":"y","8cebd61f":"from sklearn.impute import SimpleImputer\nimputer = SimpleImputer(missing_values=np.nan,strategy=\"mean\")\nimputer.fit(X[:,1:3])\nX[:,1:3] = imputer.transform(X[:,1:3])\nX","d4916311":"#independent variables\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\n\nct = ColumnTransformer(transformers=[('endoer', OneHotEncoder(), [0])], remainder='passthrough')\nX = ct.fit_transform(X)\nX = np.array(X)\nX","c36005c4":"#dependent variables\nfrom sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ny = le.fit_transform(y)\ny","94318686":"from sklearn.model_selection import train_test_split  #(for python2)\n#from sklearn.model_selection import train_test_split  (for python3)\nX_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.2, random_state=0)\nprint('X_train.shape: ', X_train.shape)\nprint('X_test.shape:  ', X_test.shape)\nprint('y_train.shape: ', y_train.shape)\nprint('y_test.shape:  ', y_test.shape)","0458937a":"from sklearn.preprocessing import StandardScaler\nsc_X = StandardScaler()\nX_train = sc_X.fit_transform(X_train)\nX_test = sc_X.transform(X_test)","6242696e":"X_train","743d2b65":"X_test","a576c252":"## Handling missing values","8a8626d6":"## Import Libraries","3dd2107e":"## Read Dataset","39d20725":"## Split data into training and testing dataset","879aea99":"### Follow me for more upcoming ML episode series. Upvote if you like this kernel. Thank you!","6e405727":"## Feature scaling","03fd641e":"## Encoding variables"}}