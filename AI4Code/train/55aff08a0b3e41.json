{"cell_type":{"019dce51":"code","9d31dcab":"code","9788ade2":"code","f1ea398b":"code","51916af8":"code","8e55cf80":"code","9c435b2c":"code","5b22a926":"code","1870959d":"code","6b218339":"code","27d7e417":"markdown","7b1c0396":"markdown","4bc87639":"markdown","d51e3d5e":"markdown","77d3b198":"markdown","5fa3742a":"markdown","da5a9ae7":"markdown","df6a8b90":"markdown"},"source":{"019dce51":"import numpy as np\nimport pandas as pd","9d31dcab":"dataset=pd.read_csv('..\/input\/california-housing-prices\/housing.csv')","9788ade2":"dataset.head()","f1ea398b":"def costFun(x,y,theta,lamb):\n    h=np.dot(theta,x.T)\n    J=(1\/(2*len(x)))*np.sum(np.square(h-y))+(lamb\/(2*len(x)))*np.sum(np.square(theta[1:]))\n    return J\n   ","51916af8":"def gradient_decent(x,y,theta,alpha,total_iter,lamb):\n    m=len(x)\n    for i in range(0,total_iter):\n        h=np.dot(theta,x.T)\n        theta[0]-=(alpha\/m)*np.sum((h-y)*x.iloc[:,0])\n        for j in range(1,len(x.columns)):\n            theta[j]-=((alpha\/m)*(np.sum((h-y)*x.iloc[:,j])+(lamb)*theta[j]))\n    return theta","8e55cf80":"X=dataset.drop(columns=[\"ocean_proximity\",\"median_house_value\"])\nY=dataset[\"median_house_value\"]\nfor i in range(0,len(X.columns)):\n    X.iloc[:,i]=(X.iloc[:,i]-min(X.iloc[:,i]))\/((max(X.iloc[:,i])-min(X.iloc[:,i])))\nY=(Y-min(Y))\/(max(Y)-min(Y))\n","9c435b2c":"X = pd.concat([pd.Series(1, index = X.index, name = '00'), X], axis=1)","5b22a926":"def predictHousePrice(x,alpha,theta,num_iter,lamb):\n   \n    predict_price=np.dot(theta,x.T)\n    return predict_price","1870959d":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=0.2,random_state=123)","6b218339":"alpha=.001\nlamb=1\ntotal_iter=5000\n\ntrain_theta= gradient_decent(x_train,y_train,[.5]*len(X.columns),alpha,total_iter,lamb)\ncost=costFun(x_test,y_test,train_theta,lamb)\nprint(cost)\n    ","27d7e417":"plzz..do some comment on my work that i can improve and gain confident.","7b1c0396":"**Regularized linear regression gradient**\nthe partial derivative of regularized linear regression's cost for  is defined as:\n   \n   \n   ![image.png](attachment:image.png)","4bc87639":"main motive behinde this implementation of code was  to learn basic of linear regration algorithm.","d51e3d5e":"I will implement code to model linear regration for predicting house price. in this model i will use california housing price data.\n","77d3b198":"afer taking 5000 nomber of iteration and learning rate 0.001, and setting regularization coefficient=1, i calculated cost function that is .02325... which is acceptable. ","5fa3742a":"**cost function**:regularized linear regression has the following cost function:\n!(http:\/\/)![image.png](attachment:image.png)","da5a9ae7":"**Fitting linear regression**: \nOnce my cost function and gradient are working correctly, the code in this section will run the code in training linear ligration to compute the optimal values of theta","df6a8b90":"**Data preprocessing**"}}