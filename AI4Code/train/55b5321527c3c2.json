{"cell_type":{"959a2b0d":"code","94ab9acc":"code","11e3b7a2":"code","4eeaded8":"markdown","29b12525":"markdown","1e99ad01":"markdown","d0715480":"markdown"},"source":{"959a2b0d":"import numpy as np\nimport pandas as pd\nimport folium\nfrom folium import plugins\n\ndef initMap(lat, lon):\n    location = [lat, lon]\n    Map = folium.Map(location=location, zoom_start=6)\n    return Map\n\ndef add_ee_layer(self, ee_image_object, vis_params, name):\n  map_id_dict = ee.Image(ee_image_object).getMapId(vis_params)\n  folium.raster_layers.TileLayer(\n    tiles = map_id_dict['tile_fetcher'].url_format,\n    attr = \"Map Data \u00a9 Google Earth Engine\",\n    name = name,\n    overlay = True,\n    control = True\n  ).add_to(self)\n    \nfolium.Map.add_ee_layer = add_ee_layer\n\n# Connect to Earth Engine\nimport ee\nfrom kaggle_secrets import UserSecretsClient\nfrom google.oauth2.credentials import Credentials\n\n# Trigger the authentication flow.\n#ee.Authenticate()\n\n# Retrieve your refresh token.\n#!cat ~\/.config\/earthengine\/credentials\n\nuser_secret = \"earth_engine\" # Your user secret, defined in the add-on menu of the notebook editor\nrefresh_token = UserSecretsClient().get_secret(user_secret)\ncredentials = Credentials(\n        None,\n        refresh_token=refresh_token,\n        token_uri=ee.oauth.TOKEN_URI,\n        client_id=ee.oauth.CLIENT_ID,\n        client_secret=ee.oauth.CLIENT_SECRET,\n        scopes=ee.oauth.SCOPES)\n\n# Initialize GEE\nee.Initialize(credentials=credentials)","94ab9acc":"## Use this cell to define the collection to see\n\nstartdate = '2019-08-14'\nfinishdate = '2019-09-01'\n\n#Sentinel-5P OFFL NO2: Offline Nitrogen Dioxide\nee_s5p_no2 = (ee.ImageCollection('COPERNICUS\/S5P\/OFFL\/L3_NO2')\n              .select('NO2_column_number_density')\n              .filterDate(startdate, finishdate)\n             )\nband_viz_s5p_no2 = {\n    'min': 0,\n    'max': 0.000125,\n    'palette': ['black', 'blue', 'purple', 'cyan', 'green', 'yellow', 'red']}\n\nlat = 37.773972; lon = -122.431297\n\nMap = initMap(lat = lat, lon = lon)\nMap.add_ee_layer(ee_s5p_no2.mean(), band_viz_s5p_no2, 'S5P_NO2')\nMap.add_child(folium.LayerControl())\nMap","11e3b7a2":"## Use this cell to define the collection to see\n\nstartdate = '2020-08-14'\nfinishdate = '2020-09-01'\n\n#Sentinel-5P OFFL NO2: Offline Nitrogen Dioxide\nee_s5p_no2 = (ee.ImageCollection('COPERNICUS\/S5P\/OFFL\/L3_NO2')\n              .select('NO2_column_number_density')\n              .filterDate(startdate, finishdate)\n             )\nband_viz_s5p_no2 = {\n    'min': 0,\n    'max': 0.000125,\n    'palette': ['black', 'blue', 'purple', 'cyan', 'green', 'yellow', 'red']}\n\nMap = initMap(lat = lat, lon = lon)\nMap.add_ee_layer(ee_s5p_no2.mean(), band_viz_s5p_no2, 'S5P_NO2')\nMap.add_child(folium.LayerControl())\nMap","4eeaded8":"*Step 3: Plot NO2 emissions from September 2020*","29b12525":"*Step 2: Plot NO2 emissions from September 2019*","1e99ad01":"*Step 1: Import Python Modules and Connect to the Earth Engine API*","d0715480":"# NO2 emissions from wildfires in California\n* Using data from the Earth Engine API.  See [tutorial notebook](https:\/\/www.kaggle.com\/paultimothymooney\/how-to-get-started-with-the-earth-engine-data) for more detail.  \n* Note that these plots remain for only 48 hours after the most recent commit due to the limited duration of the secret refresh token.  Also note that you can toggle on and off the NO2 layer on top of the map layer."}}