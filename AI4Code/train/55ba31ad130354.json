{"cell_type":{"96ba6974":"code","498f83c4":"code","20d47a8b":"code","c11dc959":"code","b93d5c2b":"code","8bd964b0":"code","ad48be79":"code","53fe9a10":"code","2bc93b6c":"code","a741636e":"code","fd144d6a":"code","7c11df9f":"code","5de18891":"code","9fd20322":"code","59444458":"code","d60fc853":"code","5b8983ee":"code","c9f680f3":"code","39162fa7":"code","09274f90":"code","c5cbdc23":"code","0c19dc43":"code","2001edc7":"code","5303eecd":"code","5121be51":"markdown","a4557fcf":"markdown"},"source":{"96ba6974":"!pip install japanize-matplotlib","498f83c4":"%matplotlib inline\nfrom IPython.display import SVG, Image\nfrom keras.utils.vis_utils import model_to_dot\n\nimport re\nimport itertools\nimport random\n\nimport numpy as np\nimport scipy\nimport pandas as pd\nimport gensim\n\nfrom sklearn import datasets\nfrom sklearn import preprocessing\nfrom sklearn.decomposition import PCA\nfrom sklearn import cluster, datasets, mixture\nfrom sklearn.datasets import load_digits\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder\nfrom sklearn.metrics import f1_score, classification_report, confusion_matrix\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import decomposition\n\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import ListedColormap\nimport seaborn as sns\n\nfrom keras.utils import to_categorical","20d47a8b":"img_cnt = 0","c11dc959":"def save_img():\n    global img_cnt\n    img_cnt += 1\n    img_name = 'img_{0:03}.png'.format(img_cnt)\n    print(img_name)\n    plt.savefig(img_name)","b93d5c2b":"def hexbin(x, y, color, **kwargs):\n    cmap = sns.light_palette(color, as_cmap=True)\n    plt.hexbin(x, y, cmap=cmap, **kwargs)\ndef scatter(x, y, color, **kwargs):\n    plt.scatter(x, y, marker='.')\n\nimport japanize_matplotlib\nplt.rcParams['font.family']","8bd964b0":"df_part = pd.read_csv('..\/input\/ks2020-encode-data-001\/encoded_01.csv', index_col=0)\ndf_part.head()","ad48be79":"df_out_wgt_user = pd.read_csv('..\/input\/ks2020-lowcol-fet12-001\/out_user.csv', index_col=0)\nwgt_user = df_out_wgt_user.values\ndf_out_wgt_user.head()","53fe9a10":"df_out_wgt_col = pd.read_csv('..\/input\/ks2020-lowcol-fet12-001\/out_col.csv', index_col=0)\nwgt_prod = df_out_wgt_col.values\ndf_out_wgt_col.head()","2bc93b6c":"plt.style.use('seaborn')\n%config InlineBackend.figure_format = 'retina'","a741636e":"ix, jx = 0,1\nplt.figure(figsize=(12,12))\nax = sns.kdeplot(wgt_user[:,ix], wgt_user[:,jx],\n                 cmap=\"Blues\", shade=True, thresh=0.05)\nax.scatter(wgt_prod[:,ix], wgt_prod[:,jx])\nfor ii, col in enumerate(df_part.columns):\n    if re.match('Q1_', col):\n        text = col\n        xy = (wgt_prod[ii,ix], wgt_prod[ii,jx])\n        ax.scatter(xy[0], xy[1], marker='X', s=400, c='orange')\n        ax.annotate(text, xy=xy, size=18)\n\nsave_img()","fd144d6a":"ix, jx = 0,1\nplt.figure(figsize=(12,12))\nax = sns.kdeplot(wgt_user[:,ix], wgt_user[:,jx],\n                 cmap=\"Blues\", shade=True, thresh=0.05)\nax.scatter(wgt_prod[:,ix], wgt_prod[:,jx])\nfor ii, col in enumerate(df_part.columns):\n    if re.match('Q2_', col):\n        text = col\n        xy = (wgt_prod[ii,ix], wgt_prod[ii,jx])\n        ax.scatter(xy[0], xy[1], marker='X', s=400, c='orange')\n        ax.annotate(text, xy=xy, size=18)\n\nsave_img()","7c11df9f":"ix, jx = 0,1\nplt.figure(figsize=(12,12))\nax = sns.kdeplot(wgt_user[:,ix], wgt_user[:,jx],\n                 cmap=\"Blues\", shade=True, thresh=0.05)\nax.scatter(wgt_prod[:,ix], wgt_prod[:,jx])\nfor ii, col in enumerate(df_part.columns):\n    if re.match('Q3_', col):\n        text = col\n        xy = (wgt_prod[ii,ix], wgt_prod[ii,jx])\n        ax.scatter(xy[0], xy[1], marker='X', s=400, c='orange')\n        ax.annotate(text, xy=xy, size=18)\n\nsave_img()","5de18891":"ix, jx = 0,1\nplt.figure(figsize=(12,12))\nax = sns.kdeplot(wgt_user[:,ix], wgt_user[:,jx],\n                 cmap=\"Blues\", shade=True, thresh=0.05)\nax.scatter(wgt_prod[:,ix], wgt_prod[:,jx])\nfor ii, col in enumerate(df_part.columns):\n    if re.match('Q4_', col):\n        text = col\n        xy = (wgt_prod[ii,ix], wgt_prod[ii,jx])\n        ax.scatter(xy[0], xy[1], marker='X', s=400, c='orange')\n        ax.annotate(text, xy=xy, size=18)\n\nsave_img()","9fd20322":"ix, jx = 0,1\nplt.figure(figsize=(12,12))\nax = sns.kdeplot(wgt_user[:,ix], wgt_user[:,jx],\n                 cmap=\"Blues\", shade=True, thresh=0.05)\nax.scatter(wgt_prod[:,ix], wgt_prod[:,jx])\nfor ii, col in enumerate(df_part.columns):\n    if re.match('Q5_', col):\n        text = col\n        xy = (wgt_prod[ii,ix], wgt_prod[ii,jx])\n        ax.scatter(xy[0], xy[1], marker='X', s=400, c='orange')\n        ax.annotate(text, xy=xy, size=18)\n\nsave_img()","59444458":"ix, jx = 0,1\nplt.figure(figsize=(12,12))\nax = sns.kdeplot(wgt_user[:,ix], wgt_user[:,jx],\n                 cmap=\"Blues\", shade=True, thresh=0.05)\nax.scatter(wgt_prod[:,ix], wgt_prod[:,jx])\nfor ii, col in enumerate(df_part.columns):\n    if re.match('Q6_', col):\n        text = col\n        xy = (wgt_prod[ii,ix], wgt_prod[ii,jx])\n        ax.scatter(xy[0], xy[1], marker='X', s=400, c='orange')\n        ax.annotate(text, xy=xy, size=18)\n\nsave_img()","d60fc853":"ix, jx = 0,1\nplt.figure(figsize=(12,12))\nax = sns.kdeplot(wgt_user[:,ix], wgt_user[:,jx],\n                 cmap=\"Blues\", shade=True, thresh=0.05)\nax.scatter(wgt_prod[:,ix], wgt_prod[:,jx])\nfor ii, col in enumerate(df_part.columns):\n    if re.match('Q7_', col):\n        text = col\n        xy = (wgt_prod[ii,ix], wgt_prod[ii,jx])\n        ax.scatter(xy[0], xy[1], marker='X', s=400, c='orange')\n        ax.annotate(text, xy=xy, size=18)\n\nsave_img()","5b8983ee":"ix, jx = 0,1\nplt.figure(figsize=(12,12))\nax = sns.kdeplot(wgt_user[:,ix], wgt_user[:,jx],\n                 cmap=\"Blues\", shade=True, thresh=0.05)\nax.scatter(wgt_prod[:,ix], wgt_prod[:,jx])\nfor ii, col in enumerate(df_part.columns):\n    if re.match('Q8_', col):\n        text = col\n        xy = (wgt_prod[ii,ix], wgt_prod[ii,jx])\n        ax.scatter(xy[0], xy[1], marker='X', s=400, c='orange')\n        ax.annotate(text, xy=xy, size=18)\n\nsave_img()","c9f680f3":"ix, jx = 0,1\nplt.figure(figsize=(12,12))\nax = sns.kdeplot(wgt_user[:,ix], wgt_user[:,jx],\n                 cmap=\"Blues\", shade=True, thresh=0.05)\nax.scatter(wgt_prod[:,ix], wgt_prod[:,jx])\nfor ii, col in enumerate(df_part.columns):\n    if re.match('Q9_', col):\n        text = col\n        xy = (wgt_prod[ii,ix], wgt_prod[ii,jx])\n        ax.scatter(xy[0], xy[1], marker='X', s=400, c='orange')\n        ax.annotate(text, xy=xy, size=18)\n\nsave_img()","39162fa7":"ix, jx = 0,1\nplt.figure(figsize=(12,12))\nax = sns.kdeplot(wgt_user[:,ix], wgt_user[:,jx],\n                 cmap=\"Blues\", shade=True, thresh=0.05)\nax.scatter(wgt_prod[:,ix], wgt_prod[:,jx])\nfor ii, col in enumerate(df_part.columns):\n    if re.match('Q10_', col):\n        text = col\n        xy = (wgt_prod[ii,ix], wgt_prod[ii,jx])\n        ax.scatter(xy[0], xy[1], marker='X', s=400, c='orange')\n        ax.annotate(text, xy=xy, size=18)\n\nsave_img()","09274f90":"wgt = np.r_[wgt_prod, wgt_user]\nfrom sklearn import decomposition\npca = decomposition.PCA(n_components=12)\npca.fit(wgt)","c5cbdc23":"f = pca.transform(wgt)\nf_prod = f[:wgt_prod.shape[0],]\nf_user = f[wgt_prod.shape[0]:,]","0c19dc43":"sns.pairplot(pd.DataFrame(f[:,:5]), markers=['.'], height=2.2)\nsave_img()","2001edc7":"ix, jx = 0,1\nplt.figure(figsize=(12,12))\nax = sns.kdeplot(f_user[:,ix], f_user[:,jx],\n                 cmap=\"Reds\", shade=True, thresh=0.05)\nax.scatter(f_prod[:,ix], f_prod[:,jx])\nfor ii, col in enumerate(df_part.columns):\n    text = col\n    xy = (f_prod[ii,ix], f_prod[ii,jx])\n    ax.annotate(text, xy=xy)\n\nsave_img()","5303eecd":"ix, jx = 0,2\nplt.figure(figsize=(12,12))\nax = sns.kdeplot(f_user[:,ix], f_user[:,jx],\n                 cmap=\"Reds\", shade=True, thresh=0.05)\nax.scatter(f_prod[:,ix], f_prod[:,jx])\nfor ii, col in enumerate(df_part.columns):\n    text = col\n    xy = (f_prod[ii,ix], f_prod[ii,jx])\n    ax.annotate(text, xy=xy)\n\nsave_img()","5121be51":"[WordAndDoc2vec](https:\/\/github.com\/darecophoenixx\/wordroid.sblo.jp\/wiki\/WordAndDoc2vec)","a4557fcf":"## PCA"}}