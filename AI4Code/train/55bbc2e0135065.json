{"cell_type":{"74fbbc99":"code","8590539a":"code","2aea3a74":"code","2199ca2a":"code","fef3697b":"code","95495912":"code","7bd97afa":"code","56ce1aa7":"code","3dac8ccd":"code","9da32eff":"code","e00af1ef":"code","20a8e01b":"code","aa5d25d3":"code","44ffe7ce":"code","e6bcdbd2":"code","79aea596":"code","20c93084":"code","d9716d20":"code","5b874f5f":"code","cc096607":"code","1be9f6d7":"markdown"},"source":{"74fbbc99":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        break\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8590539a":"from tensorflow.keras.layers import Input, Lambda, Dense, Flatten\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.applications.vgg16 import VGG16\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator,load_img\nfrom tensorflow.keras.models import Sequential","2aea3a74":"import tensorflow as tf","2199ca2a":"vgg = tf.keras.applications.vgg16.VGG16(input_shape=(224,224,3),weights='imagenet',include_top=False)","fef3697b":"for layer in vgg.layers:\n    layer.trainable= False","95495912":"from tensorflow.keras.models import Model","7bd97afa":"vgg_last_layer= Flatten()(vgg.output)","56ce1aa7":"final_layer= Dense(5,activation='softmax')(vgg_last_layer)","3dac8ccd":"model= Model(inputs= vgg.input, outputs = final_layer)","9da32eff":"model.summary()","e00af1ef":"data_generator=tf.keras.preprocessing.image.ImageDataGenerator(rescale=1\/255,\n                                                              horizontal_flip=True,\n                                                              vertical_flip=True, rotation_range=90,\n                                                              shear_range=0.2, zoom_range=0.2)","20a8e01b":"model.compile(\n  loss='categorical_crossentropy',\n  optimizer='adam',\n  metrics=['accuracy']\n)","aa5d25d3":"trdata1 = data_generator.flow_from_directory('..\/input\/agriculture-crop-images\/kag2',\n                                     target_size=(224,224)\n                                     ,batch_size=3)\n\ntrdata2 = data_generator.flow_from_directory('..\/input\/agriculture-crop-images\/crop_images',\n                                      \n                                     target_size=(224,224)\n                                      \n                                     ,batch_size=3)\n","44ffe7ce":"tsdata = data_generator.flow_from_directory('..\/input\/agriculture-crop-images\/some_more_images\/some_more_images',\n                                     target_size=(224,224),batch_size=3)","e6bcdbd2":"model.fit_generator(trdata1,epochs=50)","79aea596":"model.evaluate(trdata1)","20c93084":"model.evaluate_generator(trdata2)","d9716d20":"model.evaluate(tsdata)","5b874f5f":"from tensorflow.keras.models import load_model\n\nmodel.save('model_vgg16.h5')","cc096607":"model=load_model('model_vgg16.h5')","1be9f6d7":"A. Use Sufficient Number of Conv Layers, Activation functions and Loss functions\nB. Train the model using 80% data and save trained model in .h5 format\nC. Write a function to get output for a given input crop image.\n"}}