{"cell_type":{"829bfe48":"code","d94fa7a4":"code","a9c6ab00":"code","68f0dad8":"code","3da581d0":"code","7908b7ba":"code","d8a62487":"code","1241bd8d":"code","af300f6a":"code","05e57676":"code","11963d6a":"code","3ad2efbd":"code","3a399d4b":"code","2cc82191":"code","4702b5a8":"code","033e33d5":"code","bec6a32c":"code","2f6bc365":"code","d2bc5856":"code","4581a080":"code","8611dc79":"code","eba8c7b4":"code","6204ab5d":"code","7ae6a8b7":"markdown"},"source":{"829bfe48":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndata = pd.read_csv('..\/input\/kaggle-survey-2018\/multipleChoiceResponses.csv')\ndf = pd.DataFrame(data)","d94fa7a4":"from plotly import tools\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot","a9c6ab00":"pd.set_option('display.max_columns',20)\npd.set_option('display.max_rows',30)","68f0dad8":"df_country = df['Q3'].value_counts().reset_index()\ndf_country.columns = ['country','People']\nprint(df_country)","3da581d0":"df_country = df_country.replace('United Kingdom of Great Britain and Northern Ireland','UK')\ndf_country = df_country.replace('Iran, Islamic Republic of...','Iran')\ndf_country = df_country.replace('I do not wish to disclose my location','NotDisclosed')\ndf_country = df_country.replace('United States of America','USA')\ndf_country = df_country.replace('Viet Nam','Vietnam')\ndf_country = df_country[df_country.country != 'In which country do you currently reside?']\nprint(df_country)","7908b7ba":"plt.figure(figsize = (16,9))\ndf_top_country = df_country.head(15)\nsns.barplot(df_top_country.country, df_top_country.People, palette = 'RdYlGn')\nplt.title('Top Countries with Maximum numbers of Kaggle Users', fontsize = 20)\nplt.xlabel('Countries', fontsize = 12)\nplt.ylabel('Numbers of Users', fontsize = 12)\nplt.show()","d8a62487":"country_code = pd.read_csv(\"..\/input\/plotly-country-code-mapping\/2014_world_gdp_with_codes.csv\")\nprint(country_code)\ncountry_code.columns = [i.lower() for i in country_code.columns]\ncountry_code = country_code.replace({'United States':'USA', 'United Kingdom':'UK'})\ndf_country = pd.merge(df_country, country_code, on = 'country')\nprint(df_country.head())","1241bd8d":"data = [ dict(type = 'choropleth',locations = df_country['code'], z = df_country['People'], text = df_country['country'],\n        colorscale = 'inferno',autocolorscale = False, reversescale = True, marker = dict(line = dict (color = 'rgb(180,180,180)',width = 0.5)),\n        colorbar = dict(autotick = False, title = 'Responders'))]\n\nlayout = dict(title = 'Responders by country',geo = dict(showframe = True, showcoastlines = True, projection = dict(type = 'Mercator')))\n\nfig = dict( data=data, layout=layout )\niplot( fig, validate=False, filename='WorldMap_kagglers' )","af300f6a":"df_age = df['Q2'].value_counts().reset_index()\ndf_age.columns = ['Age_group','Respondents']\ndf_age = df_age[df_age['Age_group'] != 'What is your age (# years)?']\nprint(df_age)","05e57676":"plt.figure(figsize = (16,9))\nsns.barplot('Age_group','Respondents', data = df_age, palette = 'bright')","11963d6a":"df = df[df['Q2'] != 'What is your age (# years)?'] \npd.crosstab(df.Q3, df.Q2).plot.bar(stacked = True, color = sns.color_palette('inferno',3))\nfig = plt.gcf()\nfig.set_size_inches(16,9)\nplt.title('Age Groups by Country')\nplt.show()","3ad2efbd":"print(df['Q5'].unique())","3a399d4b":"df = df.replace({'Engineering (non-computer focused)':'Engineering(NonComp)', 'Computer science (software engineering, etc.)':'Comp. Sci.',\n                'Social sciences (anthropology, psychology, sociology, etc.)':'Social Science','Mathematics or statistics': 'Math & Stats','Physics or astronomy': 'Phy & Astro',\n                 'Information technology, networking, or system administration':'Info. Tech.', 'A business discipline (accounting, economics, finance, etc.)': 'Business Descipline',\n                 'Environmental science or geology':'Env. Science', 'Medical or life sciences (biology, chemistry, medicine, etc.)':'Medical','I never declared a major': 'NotDeclared',\n                 'Humanities (history, literature, philosophy, etc.)': 'Humanities','Fine arts or performing arts':'Fine arts'})\nprint(df['Q5'].unique())","2cc82191":"df_top = df[df['Q3'].isin(df['Q3'].value_counts()[0:14].index)]\nprint(df_top['Q3'].unique())","4702b5a8":"df_top = df_top[df_top['Q3'] != 'I do not wish to disclose my location']","033e33d5":"df_top = df_top.replace({'United Kingdom of Great Britain and Northern Ireland':'UK','United States of America':'USA'})\nprint(df_top['Q3'].unique())","bec6a32c":"pd.crosstab(df_top.Q2 , df_top.Q3).plot(color = sns.color_palette('bright',9))\nfig = plt.gcf()\nfig.set_size_inches(16,9)\nplt.show()","2f6bc365":"df_top = df_top.replace({'Master\u2019s degree':'Masters', 'Doctoral degree':'Phd','Bachelor\u2019s degree':'Bachelor','Professional degree':'Professional','Some college\/university study without earning a bachelor\u2019s degree':'SomeColStudy','No formal education past high school':'High School','I prefer not to answer':'NoAnswer'})\n#df_top = df_top[df_top['Q4'] != 'I prefer not to answer']\ndf_top['Q4'].unique()","d2bc5856":"pd.crosstab(df_top.Q4 , df_top.Q3).plot(color = sns.color_palette('bright',9))\nfig = plt.gcf()\nfig.set_size_inches(16,9)\n\n\npd.crosstab(df_top.Q3, df_top.Q4).plot.bar(stacked = True, color = sns.color_palette('RdYlGn',7))\nfig = plt.gcf()\nfig.set_size_inches(16,9)\nplt.title('Age Groups by Country')\nplt.show()","4581a080":"df_top = df_top[df_top['Q1'] != 'What is your gender? - Selected Choice']\ndf_top['Q1'].unique()","8611dc79":"pd.crosstab(df_top.Q3, df_top.Q1).plot.bar(stacked = True, color = sns.color_palette('bright',7))\nfig = plt.gcf()\nfig.set_size_inches(16,9)\nplt.title('Age Groups by Country')\nplt.show()","eba8c7b4":"pd.crosstab(df_top.Q3, df_top.Q2).plot.bar(stacked = True, color = sns.color_palette('bright',3))\nfig = plt.gcf()\nfig.set_size_inches(16,9)\nplt.title('Age Groups by Top 15 Countries')\nplt.show()","6204ab5d":"pd.crosstab(df_top.Q3, df_top.Q5).plot.bar(stacked = True, color = sns.color_palette('pastel',3))\nfig = plt.gcf()\nfig.set_size_inches(16,9)\nplt.title('Different Streams by Country')\nplt.show()","7ae6a8b7":"Age Groups in Top 15 Countries."}}