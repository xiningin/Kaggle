{"cell_type":{"4f5af69c":"code","8d3791cd":"code","9ca9be9d":"code","a2d877f5":"code","02b51b45":"code","f95c194a":"code","c5d09e36":"code","0bd68da1":"code","ea77f96b":"code","89ed44d1":"code","a859e8da":"code","199421f9":"code","f26158fd":"code","5eb8f15d":"code","d438616b":"code","29250ebe":"code","130d78bd":"code","3064f8be":"code","77e2a6b8":"code","6cb3f2ab":"code","fe6c6c69":"code","9521925c":"code","04be97d0":"code","fcc76f15":"code","f200cf2f":"code","bdcc977a":"code","8f609f92":"code","f7850a0d":"code","cf531154":"code","a0d9674e":"code","9fc5d059":"code","d758eaee":"code","c048b86b":"code","cf1c2ce0":"code","53c79a60":"code","ee144225":"code","9279d372":"code","a92ed005":"code","085d2e8e":"code","ea0fd5b6":"code","3227d046":"code","feb4cd8d":"code","61a17174":"code","8b0524dc":"code","85eb51cf":"code","c26c794f":"code","bfb3dba8":"code","25d75a9b":"code","74f98032":"code","39715ff8":"code","16cad68b":"code","aee6fc4f":"code","eda4d1ec":"code","335e29ad":"code","9b7af6f5":"code","f5ee7547":"code","f1f241c4":"code","02d30a11":"code","e9e206bc":"code","f4c8d204":"code","d5b8f38d":"code","b24ec286":"code","52728b25":"code","87b83ef2":"code","bb647a46":"code","19c766e9":"code","4821ee62":"code","370851dc":"code","914c70cf":"code","242c3838":"code","e4a586ff":"code","09272262":"code","5c133a14":"code","2950d3da":"code","68b0ec06":"code","435875ef":"code","d3bf0360":"code","e7efc4cc":"markdown","927abf7e":"markdown","ef0f4c0d":"markdown","93ee773b":"markdown","8fa142b2":"markdown","4891475f":"markdown","aaf2bacb":"markdown","07a09ee3":"markdown","841b4917":"markdown","ec3d79c1":"markdown","2dc41162":"markdown","0fcc000b":"markdown","b7657960":"markdown","03e236b6":"markdown","9ca394d8":"markdown","b1b10e4d":"markdown"},"source":{"4f5af69c":"import pandas as pd\nimport category_encoders as ce\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_predict\nimport numpy as np\nfrom sklearn.preprocessing import RobustScaler, label_binarize\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.feature_selection import SelectFromModel\nfrom sklearn.decomposition import PCA\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report, roc_curve\nimport catboost as cb\n\n%matplotlib inline","8d3791cd":"sns.set_style('darkgrid')","9ca9be9d":"df = pd.read_csv('..\/input\/terrabluext-intern-test-data\/Test_Data.csv')","a2d877f5":"df.shape","02b51b45":"df.head(20)","f95c194a":"df.info()","c5d09e36":"df.isna().sum()","0bd68da1":"pd.set_option('display.max_columns', 90)","ea77f96b":"df.describe()","89ed44d1":"def describe_plot(label):\n    print(df[label].describe())\n    print(df.shape)\n    sns.boxplot(df[label])","a859e8da":"def remover_plot(label, outlier):\n    df.drop(df[df[label] > outlier].index, inplace=True)\n    print(df.shape)\n    sns.boxplot(df[label])","199421f9":"# Class A\ndescribe_plot('A')","f26158fd":"# Class E\ndescribe_plot(\"E\")","5eb8f15d":"remover_plot('E', 280)","d438616b":"# Class F\ndescribe_plot('F')","29250ebe":"remover_plot('F', 138)","130d78bd":"# Class G\ndescribe_plot('G')","3064f8be":"remover_plot('G', 105)","77e2a6b8":"# Class j\ndescribe_plot('J')","6cb3f2ab":"remover_plot('J', 32)","fe6c6c69":"# Class L\ndescribe_plot('L')","9521925c":"remover_plot('L', 325)","04be97d0":"# Class O\ndescribe_plot('O')","fcc76f15":"remover_plot('O', 2.2)","f200cf2f":"# Class P\ndescribe_plot('P')","bdcc977a":"remover_plot('P', 0.78)","8f609f92":"#  Class\ndescribe_plot('R')","f7850a0d":"remover_plot('R', 35000)","cf531154":"# Class X1\ndescribe_plot('X1')","a0d9674e":"remover_plot('X1', 18000)","9fc5d059":"# Class\ndescribe_plot('X2')","d758eaee":"remover_plot('X2', 10.0)","c048b86b":"# Class X\ndescribe_plot('X9')","cf1c2ce0":"remover_plot('X9', 0.6)","53c79a60":"# Class Y1\ndescribe_plot('Y1')","ee144225":"remover_plot('Y1', 4.7)","9279d372":"# Class Y2\ndescribe_plot('Y2')","a92ed005":"df = df.drop(df[df['Y2'] < -3.480000e-05].index)\nsns.boxplot(df['Y2'])","085d2e8e":"# Class Y4\ndescribe_plot('Y4')","ea0fd5b6":"df = df.drop(df[df['Y4'] < 0.012].index)\nsns.boxplot(df['Y4'])","3227d046":"# Class y5\ndescribe_plot('Y5')","feb4cd8d":"remover_plot('Y5', 0.021)","61a17174":"df = df.drop(df[df['Y5'] < -0.02].index)\nsns.boxplot(df['Y5'])","8b0524dc":"# Class Y6\ndescribe_plot('Y6')","85eb51cf":"remover_plot('Y6', 0.6)","c26c794f":"# Class Y7\ndescribe_plot('Y7')","bfb3dba8":"df = df.drop(df[df['Y7'] < -0.35].index)\nsns.boxplot(df['Y7'])","25d75a9b":"# Class Y8\ndescribe_plot('Y8')","74f98032":"remover_plot('Y8', 0.020)","39715ff8":"# Class Y9\ndescribe_plot('Y9')","16cad68b":"remover_plot('Y9', 0.25)","aee6fc4f":"# Class Z2\ndescribe_plot('Z2')","eda4d1ec":"remover_plot('Z2', 0.035)","335e29ad":"# Class Z3\ndescribe_plot('Z4')","9b7af6f5":"remover_plot('Z4', 0.08)","f5ee7547":"# Class Z5\ndescribe_plot('Z6')","f1f241c4":"remover_plot('Z6', 0.0003)","02d30a11":"corr_mat = df.corr(method='pearson')","e9e206bc":"fig, ax = plt.subplots(figsize=(12, 12))\nsns.heatmap(corr_mat, vmax=0.99, vmin=0.5, ax=ax, square=True, cmap='Blues')","f4c8d204":"sns.catplot(x='Class', kind='count', data=df)","d5b8f38d":"df.shape","b24ec286":"Y = df['Class']","52728b25":"X = df.drop('Class', axis=1)","87b83ef2":"print('Size of label and target',X.shape, Y.shape)","bb647a46":"X = np.log1p(X)","19c766e9":"x_train, x_test, y_train, y_test = train_test_split(X, Y, random_state=42, stratify=Y)","4821ee62":"sns.countplot(y_train.sort_values(ascending=True))","370851dc":"sns.countplot(y_test.sort_values(ascending=True))","914c70cf":"Rs = RobustScaler()","242c3838":"x_train = Rs.fit_transform(x_train)","e4a586ff":"x_test = Rs.transform(x_test)","09272262":"def grid_search(estimator, param):\n\n    grid = GridSearchCV(estimator, param, n_jobs=-1, cv=5)\n    grid.fit(x_train, y_train)\n    print('Best parameter', grid.best_params_)\n    model = grid.best_estimator_\n    pred = model.predict(x_test)\n    return model, pred","5c133a14":"def metrics_evaluate(y_pred):\n    con_mat = confusion_matrix(y_test, y_pred)\n    print(con_mat)\n    fig, ax = plt.subplots(figsize=(12, 12))\n    sns.heatmap(con_mat, ax=ax, square=True, vmax=500, vmin=60)\n    \n    # Classification report\n    class_report = pd.DataFrame(data=classification_report(y_test, y_pred, output_dict=True))\n    print(class_report.head())\n    \n    # Accuracy\n    accuracy = accuracy_score(y_test, y_pred)    \n    print('Accuracy Test', accuracy*100)","2950d3da":"cat_boost = cb.CatBoostClassifier()","68b0ec06":"cat_param = {}","435875ef":"model_cat, pred_cat = grid_search(cat_boost, cat_param)","d3bf0360":"metrics_evaluate(pred_cat)","e7efc4cc":"# Dealing with outliers","927abf7e":"# Separating label and feature and taking log to decrease skewness in data","ef0f4c0d":"CATBOOST\nCatboost is an advanced boosting algorithm which can easily work on Categorical feature. It also requires almost no hyperparameter tunning as it optimize itself to approximately best solution according to dataset.\nPrecision, recall and accuracy provided by catboost is good compared to random forests 91%","93ee773b":"There are total 43 columns inclduing Target columns and 5839 rows, Target is a categorical value and all others are numerical data. No null data in dataset so we don't need to impute missing data.\nClass is not symetrical hence we need to split data startified.","8fa142b2":"# Exploring data","4891475f":"Converting class in one-hot values to find correlation","aaf2bacb":"# Metrics","07a09ee3":"1. Pca reduces dimesnionality of the dataset but it also discards some valuable info hence using Pca on such small dataset is not viable\n2. Feature selection using Random forest decreased Precision and recall of the model as it also removed some usefull features","841b4917":"# Train , Test Split stratify on Class due to imbalanced distibution","ec3d79c1":"# Models","2dc41162":"# Reason not to use PCA and Feature selection","0fcc000b":"# Grid Search","b7657960":"# Correlation","03e236b6":"# Importing Files","9ca394d8":"we will clear outliers one by one a long and tedious process but this will ensure minimum data loss.\nThis Dataset have high value of outliers in multiple columns","b1b10e4d":"# Scaling data"}}