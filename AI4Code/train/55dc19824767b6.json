{"cell_type":{"3b3fffbf":"code","00e0d423":"code","b69d4773":"code","c4eab34d":"code","d875f5d3":"code","884dbfb5":"code","726d6111":"code","4569861c":"code","fa339f85":"code","13dc0435":"code","b9a00f20":"code","820109ac":"code","3231fe67":"code","4e2c0b57":"code","550c889f":"code","4a166d11":"code","4ac183e7":"code","31bb0a93":"markdown","a32c28af":"markdown","1edf201c":"markdown","5087b5f3":"markdown"},"source":{"3b3fffbf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","00e0d423":"AMZN = pd.read_csv('..\/input\/amazon-stock-price-all-time\/Amazon.csv')","b69d4773":"AMZN.info()","c4eab34d":"AMZN.describe()","d875f5d3":"AMZN.isna().sum()","884dbfb5":"AMZN.head()","726d6111":"AMZN.tail()","4569861c":"AMZN['Date'] =  pd.to_datetime(AMZN['Date'],\n                              format='%Y-%m-%d')","fa339f85":"AMZN.set_index('Date', inplace=True)","13dc0435":"AMZN.head()","b9a00f20":"AMZN.info()","820109ac":"import matplotlib.pyplot as plt\nAMZN.plot(subplots=True, figsize=(10,12))\nplt.title('Amazon stock attributes')\nplt.savefig('stocks.png')\nplt.show()","3231fe67":"AMZN['2017':'2021'].plot(subplots=True, figsize=(10,12))\nplt.title('Amazon stock attributes')\nplt.savefig('stocks.png')\nplt.show()","4e2c0b57":"AMZN['MA for 20 days'] = AMZN['Open'].rolling(20).mean()\nAMZN['MA for 50 days'] = AMZN['Open'].rolling(50).mean()","550c889f":"AMZN.truncate(before='2020-01-01', after='2021-01-01')[['Adj Close','MA for 20 days','MA for 50 days']].plot(subplots=False,figsize=(12,5))","4a166d11":"AMZN['Daily Return'] = AMZN['Adj Close'].pct_change()\nAMZNR10 = AMZN.sort_values(by=['Daily Return'],ascending=False)","4ac183e7":"AMZNR10 = AMZNR10[0:10]\nAMZNR10[['Daily Return']]","31bb0a93":"# Let\u2019s check out the moving average for stocks over a 20 and 50 day period of time. ","a32c28af":"# let's take a look at the data from 2017-2021","1edf201c":"# 10 days ever with the biggest daily return for Amazon","5087b5f3":"# As you can see the column **'Date'** is a type object. We need to transform it into a **Datetime** column and **set it as index**. it will be needed to make good visualizations."}}