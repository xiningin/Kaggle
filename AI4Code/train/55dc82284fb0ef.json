{"cell_type":{"965fd6d5":"code","a5ada1af":"code","8b5693c4":"code","bedb69a6":"code","c19437bd":"code","821e76ab":"code","2c464943":"code","ef866f46":"code","56cda370":"code","3477aa35":"code","5ddda4fd":"code","2783cc9c":"code","18dae7c4":"code","a44232fa":"code","de8057f6":"code","efb15655":"code","8f46b446":"code","3acc9c25":"code","79e47310":"code","59b1a626":"code","5fe02a94":"code","1ad5549a":"code","3867c013":"code","a663bc65":"code","76bdcbce":"code","33992578":"code","d7e6af23":"code","57b5b140":"code","442df040":"markdown","426ade86":"markdown","03b38bb6":"markdown","2e89968b":"markdown","aad8e52a":"markdown","8104fd3a":"markdown","a8f75de6":"markdown","809dd7e8":"markdown","ed802e68":"markdown","0272ff52":"markdown","c64c4d9c":"markdown","05fab144":"markdown","69462dcf":"markdown","cc270fa1":"markdown","5315c7cc":"markdown","a9e6834f":"markdown","a9d7eebb":"markdown","f43fefc4":"markdown","70ee909b":"markdown"},"source":{"965fd6d5":"#importing libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv\nimport matplotlib.pylab as plt\nimport seaborn as sns\n","a5ada1af":"#importing data\ndata = pd.read_csv(\"..\/input\/best-volleyball-players-2019\/2019volleyball.csv\")\ndata.head()","8b5693c4":"data.info()","bedb69a6":"data[\"Dominant hand\"] = data[\"Dominant hand\"].fillna(\"Unknown\")\ndata[\"Dominant hand\"].unique()","c19437bd":"data[\"Country Point\"] = data[\"Country Point\"].fillna(data[\"Country Point\"].mean())\ndata[\"Country Point\"].isnull().sum()","821e76ab":"#converting birthdate from object to datetime\nfrom datetime import datetime, date\ndate_of_birth = []\nfor i in range(data.shape[0]):\n    date_of_birth.append(datetime.strptime(data[\"Birthdate\"][i], \"%Y-%m-%d\"))\ndata[\"Birthdate\"] = date_of_birth\ndata[\"Birthdate\"]","2c464943":"#measuring ages from birthdates\ntoday = date.today()\nages=[]\nfor i in range(data.shape[0]):\n    ages.append(today.year - date_of_birth[i].year - ((today.month, today.day) < (date_of_birth[i].month, date_of_birth[i].day)))\n    \n#inserting new column called Age\ndata[\"Age\"]= ages\ndata[\"Age\"]","ef866f46":"#converting objects to integer\n\ndata[[\"Ranking All\", \"Ranking in 2020\"]]= data[[\"Ranking All\", \"Ranking in 2020\"]].astype(int)\n#Also there are some \"0\" values in Ranking in 2020 column. When i  web scaped these values, i converted the nan values to zero\n","56cda370":"data[\"Height\"]= data[\"Height\"].astype(int)\n#If you try to convert Height values to integer, you will get this error because it is combined with the text.","3477aa35":"#parsing number from text for columns : Height, Weight, Spike, Block\nimport re\nr = re.compile(\"([0-9]+)([a-zA-Z]+)\")\nnums1= []\nnums2= []\nnums3=[]\nnums4=[]\nfor i in range(30):\n    nums1.append(r.match(data[\"Height\"][i]).group(1))\n    nums2.append(r.match(data[\"Weight\"][i]).group(1))\n    nums3.append(r.match(data[\"Spike\"][i]).group(1))\n    nums4.append(r.match(data[\"Block\"][i]).group(1))\ndata[\"Height\"]=nums1\ndata[\"Weight\"]=nums2\ndata[\"Spike\"]=nums3\ndata[\"Block\"]=nums4\ndata.head()","5ddda4fd":"# we will use the index for inserting a new row called: Ranking 2019\ndata[\"Ranking 2019\"] = np.array(data.index+1)\n","2783cc9c":"data[[\"Height\", \"Weight\", \"Spike\", \"Block\"]] = data[[\"Height\", \"Weight\", \"Spike\", \"Block\"]].astype(int)\ndata.info()\n#we completed data types transformation","18dae7c4":"data.describe()","a44232fa":"#creating correlation matrix\n\ncorr = data.corr()\n# Generate a mask for the upper triangle\nmask = np.triu(np.ones_like(corr, dtype=np.bool))\n\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(11, 9))\n\n# Generate a custom diverging colormap\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr,annot= True, mask=mask, cmap= 'coolwarm', vmax=.9, center=0,\n            square=True, linewidths=.5, fmt= '.1f', cbar_kws={\"shrink\": .5})","de8057f6":"sns.pairplot(data=data)","efb15655":"#creating regression plot to understand the features' relationship with \"Points\"\n\nfeatures_to_analyse = ['Ranking All', 'Ranking 2019','Ranking in 2020','Height', 'Weight', 'Spike', 'Block','Age','Country Point', 'Points']\nfig, ax = plt.subplots(round(len(features_to_analyse) \/ 3), 3, figsize = (18, 12))\nfor i, ax in enumerate(fig.axes):\n    if i < len(features_to_analyse) - 1:\n        sns.regplot(x=features_to_analyse[i],y='Points', data=data[features_to_analyse], ax=ax)","8f46b446":"from scipy import stats\n\njoint = sns.jointplot(data[\"Country Point\"], data[\"Points\"],kind = \"kde\")\njoint.annotate(stats.pearsonr)\nplt.show()","3acc9c25":"#visualizing the positions' distribution in data\n\nsns.countplot(data[\"Position\"], order = data[\"Position\"].value_counts().index)\nplt.xticks(rotation=90)\nplt.show()","79e47310":"labels = data.Position.value_counts().index\ncolors = ['purple','blue','red','yellow','green']\nexplode = [0,0,0,0,0]\nsizes = data.Position.value_counts().values\n\n# visual\nplt.figure(figsize = (10,10))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Country Distribution of Best Players ',color = 'blue',fontsize = 15)","59b1a626":"sns.barplot(x=data.groupby(\"Position\")[\"Points\"].sum().index,y=data.groupby(\"Position\")[\"Points\"].sum(), order = data[\"Position\"].value_counts().index)\nplt.xlabel('Position')\nplt.ylabel(\"Points Mean\")\nplt.xticks(rotation=90)\nplt.title(\"Position Points Mean\")\n\nplt.show()","5fe02a94":"#Analysing Opposite Spikers' Dominant hand distribution\n\nsns.barplot(x=data[data[\"Position\"]==\"Opposite\"].groupby(\"Dominant hand\")[\"Points\"].sum().index,y=data[data[\"Position\"]==\"Opposite\"].groupby(\"Dominant hand\")[\"Points\"].sum())\nplt.xlabel('Dominant Hand')\nplt.ylabel(\"Points Mean\")\nplt.title(\"Opposite Dominant Hand\")\n\nplt.show()","1ad5549a":"#detecting outliers from Height values\n\nplt.figure(figsize = (10, 6))\nax = sns.boxplot(x='Position', y='Height', data=data)\nplt.setp(ax.artists, alpha=.5, linewidth=2, edgecolor=\"k\")\nplt.xticks(rotation=45)","3867c013":"hitter = data[data[\"Position\"]==\"Outside Hitter\"]\nz = np.abs(stats.zscore(hitter[\"Height\"]))\nhitter[\"Height\"][(z >2)]","a663bc65":"hitter.loc[7,:]\n# She is 173 cm from Japan.","76bdcbce":"#looking for the quantiles for Height of Outside Hitters\na = hitter[\"Height\"].quantile([0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1])\nplt.grid()\nplt.plot(a)","33992578":"#measuring the outside spikers' jump height\nplt.plot(hitter[\"Spike\"] - hitter[\"Height\"])\nplt.xlabel(\"Ranking 2019\")\nplt.ylabel(\"Jump Height\")\nplt.show()","d7e6af23":"#visualizing the Age affect on Points\n\nsns.barplot(x=data.groupby(\"Age\")[\"Points\"].sum().index,y=data.groupby(\"Age\")[\"Points\"].sum())\nplt.xlabel('Age')\nplt.ylabel(\"Points Mean\")\nplt.xticks(rotation=90)\nplt.title(\"Points Mean by Age\")\nplt.show()","57b5b140":"#visualizing the Nationality affect on Points\n\nsns.countplot(data[\"Nationality\"], order = data[\"Nationality\"].value_counts().index)\nplt.xticks(rotation=90)\nplt.show()","442df040":"This graph shows from the min to the max value and distribution of all values.","426ade86":"These graphs shows us Outside Spikers have the highest number of people in data and also have the 1st place in average score ranking.","03b38bb6":"As we can see, there is null values in \"Dominant Hand\" column which means there is no information for dominant hand of 3 players. In volleyball, dominant hand is generally important for spikers so we fill the missing values with \"unknown\".\nAlso \"Country Point\" column has 7 null values. We fill them with the column mean.","2e89968b":"## Brief Information\nThis dataset is generated from https:\/\/women.volleybox.net\/ and some other websites by web scraping. It includes top 30 players in 2019 women volleyball and their information. The point here is to understand what makes them best so that I tried to analyze some features and their distributions.\nGithub code : https:\/\/github.com\/beyzanurarslan\/Best-Volleyball-Players-EDA","aad8e52a":"There is no significant high correlation between the features and \"Points\". The higher one here is with Country Point (0.3).","8104fd3a":"Outside Hitter category has an outlier approximately 175 cm height. Now, we detect who is the outlier.","a8f75de6":"p-value is greater than 0.05, then we can not say there is a significant relationship between them, but we can see their distribution together here. When Country Point is about to 200, players' Points are around 400.","809dd7e8":"# Insights & Conclusion","ed802e68":"We can say that having left-hand dominance as a opposite spiker has a bit higher advantage here.","0272ff52":"# Exploratory Data Analysis (EDA)","c64c4d9c":"# Importing Data","05fab144":"20s are more than 30s for players. The common age here is 25.","69462dcf":"Hope you all enjoy my very first Kernel :)","cc270fa1":"The data types are not correct. We need to convert some objects to integers.","5315c7cc":"## Missing Value Imputation","a9e6834f":"Strong correlations can be seen here too. Also the histograms show how each column is distributed in all rows. For example 'Ranking 2019' is uniformly distributed because it is sequential.","a9d7eebb":"Correlation matrix tells us \"Height, Weight, Spike ,Block\" columns are highly correlated which can be predictable. Also Ranking 2019 and Points are strong negatively correlated which is a must because of the inverse proportion. Age and Ranking have a bit high negative correlation that means while age is increasing, your ranking is getting higher\/better (because of your points increase by years of play).","f43fefc4":"At the end, age and height are not the main factors in determining the total score. Nationality and position distributions can show us there is a dominance for some countries and some positions to have better rankings. ","70ee909b":"# Visualization"}}