{"cell_type":{"23f123bd":"code","17d546f2":"code","7493365a":"code","5f71dcd2":"code","a79ee2d3":"code","3c1a4e7a":"code","c7433154":"code","86daf6c1":"code","3fba5195":"code","0474118e":"code","a2b6ef65":"code","b3d97893":"code","39e760db":"code","b05e4c35":"code","fbf1a24c":"markdown","f986d99f":"markdown","27efb49d":"markdown","5cc1a101":"markdown","0969df0c":"markdown","3d372bad":"markdown","4f35cb40":"markdown","fab3d4a0":"markdown","9b2c4fa1":"markdown","cc0e0239":"markdown","0ebf1338":"markdown","c4bf9244":"markdown","0a71f924":"markdown","d6bc1e9a":"markdown"},"source":{"23f123bd":"import numpy as np\nimport pandas as pd \nimport seaborn as sns \nimport matplotlib.pyplot as plt\n\n# from IPython.core.display import display, HTML\n# display(HTML(\"<style>.container { width:90% !important; }<\/style>\"))\nfrom bokeh.plotting import figure\nfrom bokeh.layouts import gridplot, column\nfrom bokeh.models import ColumnDataSource, LinearColorMapper, Div\nfrom bokeh.io import output_notebook, show, curdoc\nfrom bokeh.resources import INLINE\n\ncurdoc().theme = 'dark_minimal'\noutput_notebook(resources=INLINE)","17d546f2":"data = pd.read_csv(\"..\/input\/accelerometer-data-set\/accelerometer.csv\")","7493365a":"data.info()","5f71dcd2":"data.groupby(['wconfid', 'pctid']).count()","a79ee2d3":"def l2(s):\n    return (s.loc['x']**2 + s.loc['y'] + s.loc['z']**2)**0.5\n\ndata['l2'] = data.apply(l2, axis=1)\ndata.head()","3c1a4e7a":"my_pal = {1: \"r\", 2: \"b\", 3:\"g\"}\nfor ax_name in ['x', 'y', 'z', 'l2']:   \n    plt.figure(figsize=(20,12))\n    ax = sns.boxplot(x=\"pctid\", y=ax_name, hue=\"wconfid\", data=data, palette=my_pal)\n    plt.title(f'Vibration along {ax_name} axis VS rotation speed')\n    plt.show()\n","c7433154":"plot_axis = \"l2\"\n\ndf_iter = iter(data.groupby(['wconfid']))\nconfiguration = {1:'Red', 2:'Blue', 3:'Green'}\n\nfor _, df in df_iter:\n    plt.figure(figsize=(15,8))\n    ax = sns.boxplot(x=\"pctid\", y=plot_axis, data=df)\n    plt.title(f'Configuration value {configuration[df.wconfid.iloc[0]]}')\n    plt.show()","86daf6c1":"def plot_sequence(df, title):\n    plot_width, plot_height = (1500, 300)\n    p1 = figure(width=plot_width, height=plot_height, title=f'{title}: Total Acceleration (L2)')\n    p1.line(df.index, df.l2, color=\"Magenta\", legend_label=\"L2\", line_width=1, line_alpha=1, )\n\n    p2 = figure(x_range=p1.x_range, width=plot_width, height=plot_height, title=f'{title}: Acceleration along X axis')\n    p2.line(df.index, df.x, color=\"OrangeRed\", legend_label=\"X\", line_width=1, line_alpha=1, )\n\n    p3 = figure(x_range=p1.x_range, width=plot_width, height=plot_height, title=f'{title}: Acceleration along Y axis')\n    p3.line(df.index, df.y, color=\"MediumSeaGreen\", legend_label=\"Y\", line_width=1, line_alpha=1, )\n\n    p4 = figure(x_range=p1.x_range, width=plot_width, height=plot_height, title=f'{title}: Acceleration along Z axis')\n    p4.line(df.index, df.z, color=\"Gold\", legend_label=\"Z\", line_width=1, line_alpha=1, )\n\n    grid = gridplot([p1, p2, p3, p4], ncols=1, ) \n    show(grid)\n\ndf_iter = iter(data.groupby(['wconfid']))\nfor conf, df in df_iter:\n    plot_sequence(df, configuration[conf])\n","3fba5195":"def plot_sequence(df, title):\n    plot_width, plot_height = (1500, 300)\n    df['VAL'] = range(len(df))\n    color_mapper = LinearColorMapper(palette='Plasma256', low=0, high=100)\n\n    source = ColumnDataSource(df)\n\n    p1 = figure(width=plot_width, height=plot_height, title=f'{title}: Total Acceleration (L2)')  \n    p1.scatter(x='VAL', y='l2', source=source, color={'field': 'pctid', 'transform': color_mapper}, legend_field='pctid', radius=5)\n    p1.legend.orientation = \"horizontal\"\n    \n\n    p2 = figure(x_range=p1.x_range, width=plot_width, height=plot_height, title=f'{title}: Acceleration along X axis')\n    p2.scatter(x='VAL', y='x', source=source, color={'field': 'pctid', 'transform': color_mapper}, legend_field='pctid', radius=5)\n    p2.legend.orientation = \"horizontal\"\n    \n    p3 = figure(x_range=p1.x_range, width=plot_width, height=plot_height, title=f'{title}: Acceleration along Y axis')\n    p3.scatter(x='VAL', y='y', source=source, color={'field': 'pctid', 'transform': color_mapper}, legend_field='pctid', radius=5)\n    p3.legend.orientation = \"horizontal\"\n    \n    p4 = figure(x_range=p1.x_range, width=plot_width, height=plot_height, title=f'{title}: Acceleration along Z axis')\n    p4.scatter(x='VAL', y='z', source=source, color={'field': 'pctid', 'transform': color_mapper}, legend_field='pctid', radius=5)\n    p4.legend.orientation = \"horizontal\"\n    \n    grid = gridplot([p1, p2,p3, p4], ncols=1, ) \n    show(grid)\n\ndf_iter = iter(data.groupby(['wconfid']))\nfor conf, df in df_iter:\n    plot_sequence(df, configuration[conf])\n","0474118e":"def plot_group(group):\n    style = {'x':'-', 'y':'--', 'z':'-.'}\n\n    plt.figure(figsize=(20,12))\n    for ax_name in ['x', 'y', 'z']:   \n        plt.plot(group.loc[1][ax_name], style[ax_name], c='r', label=f'{ax_name} - Red')\n        plt.plot(group.loc[2][ax_name], style[ax_name], c='b', label=f'{ax_name} - Blue')\n        plt.plot(group.loc[3][ax_name], style[ax_name], c='g', label=f'{ax_name} - Green')\n\n    plt.title(f'Vibration profile')\n    plt.legend()\n    plt.show()","a2b6ef65":"group  = data.groupby(['wconfid', 'pctid']).mean()\nplot_group(group)","b3d97893":"group = data.abs().groupby(['wconfid', 'pctid']).mean()\nplot_group(group)","39e760db":"group  = data.groupby(['wconfid', 'pctid']).std()\nplot_group(group)","b05e4c35":"plt.figure(figsize=(15,8))\nsns.pairplot(data.drop(['pctid'], axis=1), hue='wconfid', height=2.5)\nplt.show()","fbf1a24c":"### Mean Value","f986d99f":"## Plot values in a sequence\nPlot values in the CSV file in a line plot. To see if provided data is in sequence and can be treated as time series you should zoom to a closer range.  \n\nAll speeds are plotted in the same graph. As speed increases with increasing index lower speeds are located on the left and higher speeds on the right.\n\nWe can not see a clear pattern and smooth transition from one point to another in the plot. We can conclude that data is not time series, or measurements in one second were not high enough to capture vibration profiles. ","27efb49d":"# Simple EDA","5cc1a101":"### Standard deviation\nInstead of an Absolute Value plot, we can use Standard Deviation to see increase of vibrations as speed increases. \n\n","0969df0c":"## Pair Plot\nLastly, plot pairs to see how different configurations are distributed. ","3d372bad":"## Total acceleration\nAs we have separate x, y, z accelerations we can create total acceleration (L2).","4f35cb40":"### Mean Absolute Value\nAs vibrations are symmetrical mean value is not a suitable parameter for observing. On the other hand, the Absolute Value plot shows a sufficient increase of vibrations as speed increases. ","fab3d4a0":"### Please Comment if you have any thoughts and ideas.\n### If you like my notebook dont forget to Upwote.\n","9b2c4fa1":"## Vibration VS rotation speed\nPlot`x`, `y` and `z` coordinate vibration values separately.\n\nColors represent configuration:\n* 1 - 'red' - normal configuration: two weight pieces positioned on neighboring blades; <br>\n* 2 - 'blue' - perpendicular configuration: two weight pieces positioned on blades forming a 90\u00b0 angle; <br>\n* 3 - 'green' - opposite configuration: two weight pieces positioned on opposite blades. <br>\n\nAs expected, `red` configuration has the biggest vibrations for all speeds and axes. It is followed by `blue`, and `green` is last with several times weaker vibration.\n\nVibrations have almost the same maximum on each axis.","cc0e0239":"## Value Counts & Missing Values\n\nThere are no missing values in the dataset. \n\nParameter `wconfid` 3 unique values `[1, 2, 3]`. \n1) 'red' - normal configuration: two weight pieces positioned on neighboring blades; <br>\n2) 'blue' - perpendicular configuration: two weight pieces positioned on blades forming a 90\u00b0 angle; <br>\n3) 'green' - opposite configuration: two weight pieces positioned on opposite blades. <br>\n\nParameter `pctid` has 17 unique values for rotation speed: `[20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100]` <br>\n\nEach `wconfid` and `pctid` pair has 3000 data ponts. There are 153000 `(3*17*3000)` total rows in the dataset. <br> \n","0ebf1338":"## Configurations\nPlot individual configurations separately as there is a big difference in vibration amplitudes for different configurations. \n\nYou can change `plot_axis` parameter to `x, y, z, l2` to see different axis. ","c4bf9244":"## Load Dataset\n","0a71f924":"Lets Scatter plot the same graphs with color-coding different speeds.","d6bc1e9a":"## Vibration profile dependance on speed\nColor represents the same axis. Dash style represents configuration. "}}