{"cell_type":{"1dce296b":"code","1fb46ae1":"code","e0a10ce9":"code","14a2daad":"code","08d6f1c3":"code","5a3392a7":"code","e2d83662":"code","2f3c1452":"code","013d1f4e":"code","af0a3d6d":"code","913aeac3":"code","52e1b76d":"code","c6a06791":"code","e5d4e39c":"code","48e52b67":"code","480f1f9e":"code","d067729c":"code","caae6abb":"code","abc71494":"code","25dcd0a6":"code","5af8ad82":"code","a71f8dea":"code","f42afc5b":"code","d11bd8fe":"code","858ec1ec":"code","eb0d5d3a":"code","6ca22134":"code","b377e17d":"code","954a3bdf":"code","8a4736ac":"code","fc8490d1":"code","c81ea33d":"code","6c0a4ac4":"code","6f1d2453":"code","7601757c":"code","51ecc370":"markdown","48996af5":"markdown","c3d6c3a0":"markdown"},"source":{"1dce296b":"import pandas as pd\npd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport numpy as np\nplt.style.use('seaborn')\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import metrics","1fb46ae1":"housing_filepath= \"..\/input\/housing-dataset\/melbourne_housing.csv\" #creates the path\ndf=pd.read_csv(housing_filepath) #loads the data","e0a10ce9":"df.head() #shows the first 5 rows","14a2daad":"df.info()","08d6f1c3":"df.isnull().sum() #checks for the sum of missing values","5a3392a7":"df.describe()","e2d83662":"df.dropna(inplace=True) #handling missing values","2f3c1452":"df.isnull().sum()","013d1f4e":"df.head()","af0a3d6d":"#Visualize Region name\nplt.figure(figsize=(8,8))\ndf['Regionname'][0:8000].value_counts().sort_values().plot(kind='barh',color='red')\nplt.xlabel(\"Count\")\nplt.ylabel(\"Regionname\")\nplt.title(\"Melbourne Regionname\")\nplt.rcParams.update({'font.size':5})\nplt.show()","913aeac3":"#visualize Regionname & Price\nplt.figure(figsize=(10,8))\nchart=sns.swarmplot(data=df, x='Regionname', y='Price')\nchart.set_xticklabels(chart.get_xticklabels(), rotation=45)\nplt.title(\"Price against Regionname\")\nplt.show()","52e1b76d":"plt.figure(figsize=(10,8))\nchart=sns.boxplot(data=df, x='Regionname', y='Price')\nchart.set_xticklabels(chart.get_xticklabels(), rotation=45)\nplt.show()","c6a06791":"#Visualize Suburbs in Melbourne\nplt.figure(figsize=(10,8))\ndf['Suburb'][0:800].value_counts().sort_values().plot(kind='barh', color='orange')\nplt.xlabel(\"count\")\nplt.ylabel(\"Suburb\")\nplt.title(\"Suburbs in Melbourne\")\nplt.rcParams.update({'font.size':5})\nplt.show()","e5d4e39c":"#Visualize the sellers of the houses\nplt.figure(figsize=(8,6))\nsns.countplot(df['SellerG'][0:14])\nplt.title(\"Sellers of the houses in Melbourne\")\nplt.show()","48e52b67":"#visualize the types of the houses\nplt.figure(figsize=(8,6))\nsns.countplot(df['Type'], palette = 'Set1')\nplt.title(\"Types of the houses in Melbourne\")\nplt.show()","480f1f9e":"#Visualize the type of the house and the price\nplt.figure(figsize=(8,6))\nsns.boxplot(data=df, x='Type', y='Price', palette='Set2')\nplt.title(\"Type of the houses against their prices\")\nplt.show()","d067729c":"#Visualize the method\nplt.figure(figsize=(8,6))\nsns.countplot(df['Method'])\nplt.title(\"Method of selling the house\")\nplt.show()","caae6abb":"#Visualize the method against the price\nplt.figure(figsize=(8,6))\nsns.boxplot(data=df, x='Method', y='Price', palette='Set1')\nplt.title(\"Method of selling against the price\")\nplt.show()","abc71494":"first_column=df.pop('Price')\ndf.insert(0, 'Price', first_column)\ndf.head(10)","25dcd0a6":"#Handle categorical data\nfor i in df.columns.tolist():\n    df[i]=df[i].astype('category').cat.codes","5af8ad82":"df.head()","a71f8dea":"plt.figure(figsize=(12,10))\nsns.set(font_scale=1)\ncor=df.corr()\nsns.heatmap(df.corr(),fmt='.2f', square=True, annot_kws={'size': 10},annot=True)\nplt.title('Correlation matrix of coefficients', color='r')\nplt.tight_layout()\nplt.show()","f42afc5b":"#split the data into training set and validation set\nX=df.drop('Price', axis=1)\ny=df['Price']\nX_train, X_test, y_train, y_test= train_test_split(X,y,test_size=0.30, random_state=0)\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","d11bd8fe":"#Linear Regression\nregressor=LinearRegression()\nmodel=regressor.fit(X_train, y_train) # Generates the model","858ec1ec":"model.intercept_","eb0d5d3a":"cor_target=abs(cor[\"Price\"])\nrelevant_features=cor_target[cor_target>0.5]\nprint(relevant_features)","6ca22134":"#Build model\nlr=LinearRegression()\n%time lr.fit(X_train, y_train)\nlr.score(X_test, y_test)","b377e17d":"#Predict the model\ny_pred=regressor.predict(X_test)\ndf_fitted=pd.DataFrame({'Price (Actual)': y_test, 'Price (Predicted)':y_pred})\nprint(df_fitted.head())","954a3bdf":"#Visualize the regression model\nx=y_test\ny=y_pred\n\nplt.figure(figsize=(8,6))\nsns.regplot(x,y)\nplt.title(\"Linear Regression Model\")\nplt.plot(x,y,'1')\n\nm,b=np.polyfit(x,y, 1)\nplt.plot(x, m*x+b)\n","8a4736ac":"#Distribution of the price\nplt.figure(figsize=(8,6))\nsns.distplot(df['Price'], color='darkorange')\nplt.title(\"Distribution of the price\")\nplt.show()","fc8490d1":"#Density distribution plot\nplt.figure(figsize=(8,6))\nsns.kdeplot(data=df['Price'] ,shade=True)\nplt.title(\"Kde plot of the price distribution\")\nplt.show()\n","c81ea33d":"#Import\nimport statsmodels.api as sm\nfrom sklearn import ensemble","6c0a4ac4":"clf=ensemble.GradientBoostingRegressor(n_estimators=400, max_depth=5, min_samples_split=2, learning_rate=0.1, loss='ls')","6f1d2453":"clf.fit(X_train, y_train)","7601757c":"clf.score(X_test, y_test)","51ecc370":"Gradient Boosting Regression","48996af5":"DATA EXTRACTION","c3d6c3a0":"VISUALIZATION"}}