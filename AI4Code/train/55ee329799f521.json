{"cell_type":{"74c991d9":"code","78925a91":"code","791b1aa1":"code","2ca923ef":"code","a78f9095":"code","ddc62526":"code","7a91d0c2":"code","93897ac7":"code","2def4121":"code","8796a7fb":"code","03a19f20":"code","37207d33":"markdown"},"source":{"74c991d9":"!pip install pandas-profiling","78925a91":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport pandas_profiling # fast EDA tool\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n\nimport os\nprint(os.listdir(\"..\/input\"))","791b1aa1":"from sklearn.model_selection import GroupKFold\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.ensemble import RandomForestRegressor\n","2ca923ef":"train = pd.read_csv('..\/input\/train.csv', index_col='id')\ntest = pd.read_csv('..\/input\/test.csv', index_col='id')","a78f9095":"display(train.head())","ddc62526":"structures = pd.read_csv('..\/input\/structures.csv')\ndisplay(structures.head())","7a91d0c2":"# Map the atom structure data into train and test files\n\ndef map_atom_info(df, atom_idx):\n    df = pd.merge(df, structures, how = 'left',\n                  left_on  = ['molecule_name', f'atom_index_{atom_idx}'],\n                  right_on = ['molecule_name',  'atom_index'])\n    \n    df = df.drop('atom_index', axis=1)\n    df = df.rename(columns={'atom': f'atom_{atom_idx}',\n                            'x': f'x_{atom_idx}',\n                            'y': f'y_{atom_idx}',\n                            'z': f'z_{atom_idx}'})\n    return df\n\ntrain = map_atom_info(train, 0)\ntrain = map_atom_info(train, 1)\n\ntest = map_atom_info(test, 0)\ntest = map_atom_info(test, 1)","93897ac7":"train.head()","2def4121":"test.head()","8796a7fb":"pandas_profiling.ProfileReport(train)","03a19f20":"pandas_profiling.ProfileReport(test)","37207d33":"This is just a report generated by [pandas-profiling](https:\/\/github.com\/pandas-profiling\/pandas-profiling), in which gives a quick overview of the data, still more informative than pandas `df.describe()`.\n\nNote that not all the functions are available when you browse this public kernel.\nFork it, so you can see some interactive functions."}}