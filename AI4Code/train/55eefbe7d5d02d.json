{"cell_type":{"3a58062e":"code","602d7d73":"code","aebf38a9":"code","3202c283":"code","098afca3":"code","ce49d2cb":"code","46ecfb3b":"code","1213b9a9":"code","99371867":"code","17ae2a72":"code","5b71187e":"code","9ac9287c":"code","d5895b60":"code","77be690d":"code","d4733226":"code","211ba9c9":"code","345b4270":"code","7a4ddf20":"code","a18d2690":"code","67e13e01":"code","344dac11":"code","5547eb3f":"code","3d388294":"code","c0f4bfbe":"code","d6b78574":"code","28ab26e1":"code","0bf0dd3f":"code","384ace0b":"markdown","19e3ad6c":"markdown","614e5305":"markdown","b309cf65":"markdown","0e6dae07":"markdown","4a4fe172":"markdown","48bd3c64":"markdown","b15da288":"markdown","04422596":"markdown","97dab8e9":"markdown","2de3838d":"markdown","5ae925bc":"markdown","19eda1e7":"markdown","9145982a":"markdown","4042010d":"markdown"},"source":{"3a58062e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport seaborn as sns\nfrom wordcloud import WordCloud\nimport pandas_profiling as pp\nimport warnings\nimport os\n\nwarnings.filterwarnings('ignore')\n%matplotlib inline\n\n\nprint(os.listdir(\"..\/input\"))\n","602d7d73":"data=pd.read_csv('..\/input\/data-analyst-jobs\/DataAnalyst.csv')","aebf38a9":"data.head(2)","3202c283":"data.info","098afca3":"data.describe()","ce49d2cb":"pp.ProfileReport(data)","46ecfb3b":"data.drop(['Unnamed: 0'], axis=1,inplace=True)","1213b9a9":"def missing_values_table(df):\n        # Total missing values\n        mis_val = df.isnull().sum()\n        \n        # Percentage of missing values\n        mis_val_percent = 100 * df.isnull().sum() \/ len(df)\n        \n        # Make a table with the results\n        mis_val_table = pd.concat([mis_val, mis_val_percent], axis=1)\n        \n        # Rename the columns\n        mis_val_table_ren_columns = mis_val_table.rename(\n        columns = {0 : 'Missing Values', 1 : '% of Total Values'})\n        \n        # Sort the table by percentage of missing descending\n        mis_val_table_ren_columns = mis_val_table_ren_columns[\n            mis_val_table_ren_columns.iloc[:,1] != 0].sort_values(\n        '% of Total Values', ascending=False).round(1)\n        \n        # Print some summary information\n        print (\"Your selected dataframe has \" + str(df.shape[1]) + \" columns.\\n\"      \n            \"There are \" + str(mis_val_table_ren_columns.shape[0]) +\n              \" columns that have missing values.\")\n        \n        # Return the dataframe with missing information\n        return mis_val_table_ren_columns","99371867":"data.isnull().sum()","17ae2a72":"data['Easy Apply'].value_counts()","5b71187e":"data['Competitors'].value_counts()","9ac9287c":"data['Rating'].value_counts()[:5]","d5895b60":"data=data.replace(-1,np.nan)\ndata=data.replace(-1.0,np.nan)\ndata=data.replace('-1',np.nan)","77be690d":"missing_values_table(data)","d4733226":"data['Easy Apply']=data['Easy Apply'].fillna(False).astype('bool')","211ba9c9":"df_easy_apply=data[data['Easy Apply']==True]\ndf=df_easy_apply.groupby('Company Name')['Easy Apply'].count().reset_index()\ncompany_opening_df=df.sort_values('Easy Apply',ascending=False).head(10)","345b4270":"plt.figure(figsize=(10,5))\nchart = sns.barplot(\n    data=company_opening_df,\n    x='Company Name',\n    y='Easy Apply',\n    palette='Set1'\n)\nchart=chart.set_xticklabels(\n    chart.get_xticklabels(), \n    rotation=65, \n    horizontalalignment='right',\n    fontweight='light',\n \n\n)","7a4ddf20":"df=data['Size'].value_counts()","a18d2690":"df=pd.DataFrame(df)\ndf['employee_size']=df.index","67e13e01":"df.reset_index(inplace=True)\ndf.drop(['index'],axis=1,inplace=True)","344dac11":"df=df.rename(columns={\"Size\": \"No_of_companies\"})","5547eb3f":"plt.figure(figsize=(10,5))\nchart = sns.barplot(\n    data=df,\n    x='employee_size',\n    y='No_of_companies',\n    palette='Set1'\n)\nchart=chart.set_xticklabels(\n    chart.get_xticklabels(), \n    rotation=65, \n    horizontalalignment='right',\n    fontweight='light',\n \n)","3d388294":"job_title=data['Job Title'][~pd.isnull(data['Job Title'])]\nwordCloud = WordCloud(width=450,height= 300).generate(' '.join(job_title))\nplt.figure(figsize=(19,9))\nplt.axis('off')\nplt.title(data['Job Title'].name,fontsize=20)\nplt.imshow(wordCloud)\nplt.show()","c0f4bfbe":"count=data.groupby('Rating')['Company Name'].count()","d6b78574":"df=pd.DataFrame(count).rename(columns={'Company Name': 'Count'}).reset_index()","28ab26e1":"df=df.sort_values('Rating',ascending=False).head(20)","0bf0dd3f":"plt.figure(figsize=(10,5))\nchart = sns.barplot(\n    data=df,\n    x='Rating',\n    y='Count',\n    palette='Set1'\n)\nchart.set_xticklabels(\n    chart.get_xticklabels(), \n    rotation=65, \n    horizontalalignment='right',\n    fontweight='light',\n \n)\nchart.axes.yaxis.label.set_text(\"No. of companies\")","384ace0b":"# Word Cloud of job Title","19e3ad6c":"# Ratings","614e5305":"![image.png](attachment:image.png)","b309cf65":"# Current openings","0e6dae07":"check for missing values","4a4fe172":"These are the top 10 companies hiring for Data analyst roles","48bd3c64":"# Import Libraries and dataset","b15da288":"# Data cleaning","04422596":"# visualize data analyst jobs","97dab8e9":"Now you can see there are lots of missing values in the dataset. 'Easy Apply' and 'Competitors' has maximum number of missing values (> 50%)\n\nMost companies has null values in easy apply because they are not hiring .\n\n","2de3838d":"# Size of Employees Vs No of Companies\n","5ae925bc":"# Remove the unnamed column","19eda1e7":"As some of the columns contains -1 or '-1.0' or '-1' etc . We need to clean this(This is kind of null values)","9145982a":"# Lets explore the data","4042010d":"Replace -1 or -1.0 or '-1' to NaN"}}