{"cell_type":{"4001204c":"code","d9b8784d":"code","72be7717":"code","c6660547":"code","52a0364e":"code","5cd29506":"code","069812bf":"code","507f30fb":"code","e9bc28ee":"code","5d3bc35d":"code","456c073d":"code","04f57d63":"code","629c513b":"code","8ead39c9":"code","db97528c":"code","9238612a":"code","63400ca2":"markdown","e770455b":"markdown","2ab75677":"markdown","099585fb":"markdown"},"source":{"4001204c":"from fastai import *\nfrom fastai.tabular import *\nimport pandas as pd","d9b8784d":"path = Path('..\/input\/credit-card\/UCI_Credit_Card.csv')","72be7717":"df = pd.read_csv('..\/input\/credit-card\/UCI_Credit_Card.csv')\ndf.head()","c6660547":"df.isnull().sum()\n","52a0364e":"df_clean = df.dropna()\ndf.head()","5cd29506":"df.corr()\n","069812bf":"# joining all pay_amt column in one, aslo all bill_amt is one column\ndf['PAY_AMT'] = df['PAY_AMT1'] + df['PAY_AMT2']+ df['PAY_AMT4']+df['PAY_AMT5']+ df['PAY_AMT6']\ndf['BILL_AMT'] = df['BILL_AMT1'] +  df['BILL_AMT2']+  df['BILL_AMT3']+df['BILL_AMT4']+  df['BILL_AMT5']+  df['BILL_AMT6']","507f30fb":"df","e9bc28ee":"dep_var = 'LIMIT_BAL'\ncont_names = [\"SEX\",\"EDUCATION\",\"AGE\",\"PAY_AMT\",\"BILL_AMT\"]\n# cont_names = [\"AGE\",\"PAY_AMT\",\"BILL_AMT\"]\n# procs = [FillMissing, Categorify, Normalize]","5d3bc35d":"test = TabularList.from_df(df = df, path=path, cont_names=cont_names)","456c073d":"# data= (TabularList.from_df(df, path=path, cont_names=cont_names)\ndata= (TabularList.from_df(df, path=path, cont_names=cont_names, procs=procs)\n# data= (TabularList.from_df(df, path=path, cont_names=cont_names)\n                           .split_by_idx(list(range(800, 1000)))\n                            .label_from_df(cols=dep_var)\n#                            .add_test(test, label=0)\n                           .databunch()\n      )\n                        \n       \n                                                       \n      \n      \n      ","04f57d63":"data.show_batch(rows=20)","629c513b":"# learn = tabular_learner(data, layers=[100,50], metrics=accuracy)\nlearn = tabular_learner(data, layers=[200,100], metrics=mse)\nlearn.fit(7, 1e-6)\n# learn.save('..mini-train')","8ead39c9":"learn.model_dir='\/kaggle\/working\/'\nlearn.unfreeze() # must be done before calling lr_find\nlearn.lr_find()\nlearn.recorder.plot()","db97528c":"learn.fit_one_cycle(5, max_lr=(1e-5))","9238612a":"learn.model_dir='\/kaggle\/working\/'\nlearn.save('..credit-cards-stage1')","63400ca2":"#### correlation between different columns**","e770455b":"#### joining all pay_amt column in one, aslo all bill_amt is one column\n","2ab75677":"# Preprocessing\n### Dealing with missing data","099585fb":"### deleting nan values"}}