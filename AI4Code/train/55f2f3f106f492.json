{"cell_type":{"d32db989":"code","d6a3fd54":"code","4641e39f":"code","301dce7c":"code","aaec5061":"code","4d92c299":"code","85a8217d":"code","fe29c628":"code","ea15c66b":"code","6c0f7d7f":"code","6958e4f6":"code","4d5bd459":"code","602671cf":"code","53dd8a6b":"code","e7773bab":"markdown","9458c02a":"markdown"},"source":{"d32db989":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d6a3fd54":"#reading the files\ntrain = pd.read_csv(\"..\/input\/learn-together\/train.csv\")\ntest = pd.read_csv(\"..\/input\/learn-together\/test.csv\")\nprint(train.columns)","4641e39f":"a = (train[train.columns[15:-1]]==1).sum() \nb = (test[test.columns[15:]]==1).sum() \nprint(pd.concat([a.rename('train'),b.rename('test')], axis=1))","301dce7c":"#Seems like cols Soil_Type7 and Soil_Type15 can be dropped without much affecting accuracy\nc = (train[train.columns[11:15]]==1).sum() \nd = (test[test.columns[11:15]]==1).sum() \nprint(pd.concat([c.rename('train'),d.rename('test')], axis=1))","aaec5061":"#The distribution of Wilderness Area appears to be ok.\n#dropping Soil_Type7 and Soil_Type15\ntrain = train.drop(['Id','Soil_Type7', 'Soil_Type15'], axis = 1)\ntest_id = test['Id']\ntest = test.drop(['Id','Soil_Type7', 'Soil_Type15'], axis = 1)","4d92c299":"#prepare data for training the model\nX = train.drop(['Cover_Type'], axis = 1)\ny = train.Cover_Type","85a8217d":"#reducing Soil_Type cols to single col \nX = X.iloc[:, :14].join(X.iloc[:, 14:].dot(range(1,39)).to_frame('Soil_Type1'))\ntest = test.iloc[:, :14].join(test.iloc[:, 14:].dot(range(1,39)).to_frame('Soil_Type1'))\nprint(X.columns)","fe29c628":"#reducing Wilderness_Area to single col \nX = X.iloc[:,:10].join(X.iloc[:,10:-1].dot(range(1,5)).to_frame('Wilderness_Area1')).join(X.iloc[:,-1])\ntest = test.iloc[:,:10].join(test.iloc[:,10:-1].dot(range(1,5)).to_frame('Wilderness_Area1')).join(test.iloc[:,-1])\nprint(X.columns)","ea15c66b":"#horizontal and vertical distance to hydrology can be easily combined\ncols = ['Horizontal_Distance_To_Hydrology', 'Vertical_Distance_To_Hydrology']\nX['Distance_to_hydrology'] = X[cols].apply(np.linalg.norm, axis=1)\nX = X.drop(cols, axis = 1)\ntest['Distance_to_hydrology'] = test[cols].apply(np.linalg.norm, axis=1)\ntest = test.drop(cols, axis = 1)","6c0f7d7f":"#another shot in the dark - convert Hillshade like colour tuples to grayscale\ncols = ['Hillshade_9am', 'Hillshade_Noon', 'Hillshade_3pm']\nweights = pd.Series([0.299, 0.587, 0.114], index=cols)\nX['Hillshade'] = (X[cols]*weights).sum(1)\nX = X.drop(cols, axis = 1)\ntest['Hillshade'] = (test[cols]*weights).sum(1)\ntest = test.drop(cols, axis=1)","6958e4f6":"from sklearn.model_selection import train_test_split\n#split data\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, stratify=y)","4d5bd459":"#preparing model\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV\nmodel = RandomForestClassifier()\nparams_rf = {'n_estimators': [10, 50, 75]}\nrf_gs = GridSearchCV(model, params_rf, cv=8)\nrf_gs.fit(X_train,y_train)","602671cf":"from sklearn.metrics import mean_absolute_error\n#get the error rate\nval_predictions = rf_gs.predict(X_val)\nval_mae = mean_absolute_error(y_val,val_predictions)\nprint('Fifth try mae with RFClassifier: ', val_mae)","53dd8a6b":"test_preds = rf_gs.predict(test)\noutput = pd.DataFrame({'Id': test_id, 'Cover_Type': test_preds.astype(int)})\noutput.to_csv('submission.csv', index=False)","e7773bab":"# Some more feature reduction - milking it for all it's worth.","9458c02a":"## Running out of ideas."}}