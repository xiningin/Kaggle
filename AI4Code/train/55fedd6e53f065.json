{"cell_type":{"91ccbf50":"code","156a8d9b":"code","0b8d039c":"code","2c369915":"code","14f03be3":"code","8e29236e":"code","d5f670b6":"code","0c015884":"code","e2b09240":"code","0045af78":"code","4c1977e7":"code","096fac88":"code","ee3035a9":"code","f11e228a":"code","73075a6c":"markdown","a0c87c4b":"markdown","67093df1":"markdown","252a24b3":"markdown","7f9ace73":"markdown"},"source":{"91ccbf50":"#Importing required libraries\nimport pandas as pd\nimport numpy as np\n!pip install pycaret\nimport pycaret as pc","156a8d9b":"#Loading the dataset\ndf_cc=pd.read_csv('..\/input\/credit-card-customers\/BankChurners.csv')","0b8d039c":"#Deleting last 2 columns as suggested in Data description\ndf_cc=df_cc.drop(['Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1', 'Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2'], axis = 1) ","2c369915":"#Information about columns and datatype\ndf_cc.info()","14f03be3":"#Checking unique values of Attrition_flag\ndf_cc['Attrition_Flag'].unique()","8e29236e":"#Changing Attrition_flag to numeric\ndf_cc.loc[df_cc['Attrition_Flag'] == 'Existing Customer', 'Attrition_Flag'] = 0\ndf_cc.loc[df_cc['Attrition_Flag'] == 'Attrited Customer', 'Attrition_Flag'] = 1\ndf_cc.Attrition_Flag = df_cc.Attrition_Flag.astype(int)","d5f670b6":"#One hot encoding for Categorical variables\ndf_cc_encoded = pd.get_dummies(df_cc)","0c015884":"#Dropping client ID which will not be useful for predicting\ndf_cc_encoded=df_cc_encoded.drop(['CLIENTNUM'], axis = 1) ","e2b09240":"#Building PyCaret model with defualt hyperparameters\nfrom pycaret.classification import *\npycar = setup(df_cc_encoded, target = 'Attrition_Flag',silent=True,fix_imbalance = True)#, fix_imbalance_method = 'SMOTE')#,train_size = 0.6,categorical_features = ['gender'],\n#ignore_features = ['company_size'],ordinal_features = {'experience' : ['low', 'medium', 'high']},high_cardinality_features = ['city'],normalize = True,normalize_method = 'minmax',\n#transformation = True,feature_interaction = True, feature_ratio = True,polynomial_features = True)","0045af78":"#Comparing different model performance\ncompare_models()","4c1977e7":"lgbm=create_model('lightgbm')","096fac88":"#Plotting model Output\nplot_model(lgbm, plot = 'boundary')","ee3035a9":"#Calibrate the model\ncalib_lgbm = calibrate_model(lgbm)","f11e228a":"#Evaluate Model\nevaluate_model(lgbm)","73075a6c":"**Light GBM is providing highest recall here**","a0c87c4b":"**Overview:**\n\n* Import required libraries\n* Use PyCaret library to build a classifier\n* Visualize the model output and provide insights","67093df1":"**Data Anlysis and EDA:**\n\nAlready shared here: https:\/\/www.kaggle.com\/ashoksuthar\/credit-card-customers-why-are-they-churning","252a24b3":"# Prediction of Customers who are expected to Churn","7f9ace73":" **Objective**:\n \n We would like to predict what would be probability of a Customer who is going to churn.\n \n **Business Value:**\n Once identified, Business can provide lucarative offers and works on leading indicators to retain customer who are about to churn. Hence the metric which would define best model will be Recall, that means we would like predict maximuj potentail churn customer even at the cost of wrong calssify non-churn customer as churn."}}