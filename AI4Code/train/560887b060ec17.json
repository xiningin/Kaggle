{"cell_type":{"f47a0bac":"code","0310e656":"code","de1ce323":"code","746ee6af":"code","57682148":"code","725c03e3":"code","90f0b8ca":"code","90eb95f1":"code","8dfa717c":"code","74655553":"code","31a85efa":"code","5c4882f6":"code","dd091b3a":"code","5ea21c52":"code","3b489e63":"code","84ee5274":"code","48375f63":"code","ff269785":"code","a214a5e5":"code","b0424771":"code","61c93128":"code","e47da9a1":"code","6c5d4d03":"code","4082c48a":"code","5a4fb961":"code","3c4156e1":"code","f6667a33":"markdown","2b8d5669":"markdown"},"source":{"f47a0bac":"import warnings\nwarnings.filterwarnings('ignore')","0310e656":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix","de1ce323":"from keras.utils.np_utils import to_categorical\nfrom keras.models import Sequential\nfrom keras.layers import Conv2D,MaxPooling2D,Flatten,Dense\nfrom keras.preprocessing.image import ImageDataGenerator","746ee6af":"train=pd.read_csv('\/kaggle\/input\/digit-recognizer\/train.csv')\n\ntest=pd.read_csv('\/kaggle\/input\/digit-recognizer\/test.csv')\n\nsubmission=pd.read_csv('\/kaggle\/input\/digit-recognizer\/sample_submission.csv')","57682148":"train.head()","725c03e3":"test.head()","90f0b8ca":"# We check if there are any missing values in the dataset\n\ntrain.isnull().any().describe()","90eb95f1":"test.isnull().any().describe()","8dfa717c":"# We create the X_train dataset after removing the label columns and y_train with the label column.\nX_train=train.drop(columns='label')\n\ny_train=train['label']","74655553":"# We plot the count plot for the label column.\nplt.figure(figsize=(8,6))\nsns.countplot(y_train)","31a85efa":"# We normalize the train and test dataset by 255 \n\nX_train=X_train\/255\n\ntest=test\/255","5c4882f6":"y_train=to_categorical(y_train,num_classes=10)","dd091b3a":"# We reshape the dataset in 3 dimesnions\n\nX_train=X_train.values.reshape(-1,28,28,1)\n\ntest=test.values.reshape(-1,28,28,1)","5ea21c52":"# We Split the dataset to train and test set\nX_train,X_val,y_train,y_val=train_test_split(X_train,y_train,test_size=0.1,random_state=0)","3b489e63":"plt.imshow(X_train[0][:,:,0])","84ee5274":"# We Start building our CNN Model by creating an convoltion layer and max pooling layer\n\nclassifier = Sequential()\n\nclassifier.add(Conv2D(filters=32,kernel_size=(3,3),input_shape=(28,28,1),activation='relu'))\n\nclassifier.add(MaxPooling2D(pool_size=(2,2)))\n\n# We add a second convolution and Max Pooling layer\nclassifier.add(Conv2D(filters=32,kernel_size=(3,3),activation='relu'))\n\nclassifier.add(MaxPooling2D(pool_size=(2,2)))\n\nclassifier.add(Flatten())\n\nclassifier.add(Dense(units=128,activation='relu'))\n\nclassifier.add(Dense(units=10,activation='softmax'))\n\nclassifier.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])","48375f63":"# We create the image genarator\n\ndatagen=ImageDataGenerator(rotation_range=10,zoom_range = 0.1,width_shift_range=0.1,height_shift_range=0.1)\n\ndatagen.fit(X_train)","ff269785":"hist= classifier.fit_generator(datagen.flow(X_train,y_train,batch_size=32),epochs=2,validation_data=(X_val,y_val), steps_per_epoch=len(X_train)\/32)","a214a5e5":"hist.history['val_accuracy']","b0424771":"# We plot the acuracy plot \nplt.plot(range(2), hist.history['accuracy'],label='Train_Accuracy')\nplt.plot(range(2), hist.history['val_accuracy'],label='Val_Accuracy')\nplt.legend()","61c93128":"plt.plot(range(2), hist.history['loss'],label='Train_Loss')\nplt.plot(range(2), hist.history['val_loss'],label='Val_Loss')\nplt.legend()","e47da9a1":"# We predict for the test dataset\ny_pred=classifier.predict(test)\n\ny_pred=np.argmax(y_pred,axis=1)","6c5d4d03":"# We convert it to dataframe\ny_pred=pd.DataFrame(y_pred,columns=['Label'])","4082c48a":"submission['Label']=y_pred","5a4fb961":"submission.head()","3c4156e1":"submission.to_csv('Submission.csv',index=False)","f6667a33":"As there are no missing values in the train and test dataset","2b8d5669":"We got a good accuracy for the model"}}