{"cell_type":{"c1e39448":"code","b05c1b8e":"code","421eb04c":"code","5be1115b":"code","ac610a79":"code","c05715e9":"code","8ea3d340":"code","9f76c8cd":"code","65cf5468":"code","c9146eda":"code","443ba4ec":"code","ad653e3f":"code","5d1c748c":"code","2888d040":"code","b144576e":"code","0ddd659d":"code","92f7c709":"code","101cc0c8":"markdown","bfde1b89":"markdown","951adf71":"markdown","baf9eccc":"markdown","9ed048b2":"markdown","1e066ca0":"markdown","897e2cfd":"markdown","8aab71a6":"markdown","0eaa9e62":"markdown","24c32fcc":"markdown","edca8ca6":"markdown"},"source":{"c1e39448":"# import files \nimport numpy as np \nimport pandas as pd \nimport tensorflow as tf \nimport matplotlib.pyplot as plt \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report","b05c1b8e":"df = pd.read_csv(\"..\/input\/digit-recognizer\/train.csv\")","421eb04c":"df.head()","5be1115b":"df.shape","ac610a79":"# print a digit \ndigit = df.iloc[1][1:].values.reshape(28,28)\nplt.imshow(digit,cmap='binary')\nprint(\"digit is \",df.iloc[1][0])","c05715e9":"# print 25 no \nplt.figure(figsize=(10,10))\nfor i in range(25):\n    plt.subplot(5,5,i+1)\n    digit = df.iloc[i][1:].values.reshape(28,28)\n    plt.imshow(digit, cmap = 'binary')\n    plt.title(df.iloc[i][0])","8ea3d340":"x  = df.drop(\"label\",axis=1)\ny = df['label']","9f76c8cd":"# normalise the input \nx = x\/255.0","65cf5468":"x_train , x_test ,y_train , y_test = train_test_split(x,y,test_size = 0.2 )","c9146eda":"model = tf.keras.Sequential([\n    tf.keras.layers.Dense(128,activation ='relu',input_shape=(784,)),\n    tf.keras.layers.Dense(64,activation = 'relu'),\n    tf.keras.layers.Dense(32,activation = 'relu'),\n    tf.keras.layers.Dense(16,activation='relu'),\n    tf.keras.layers.Dense(10,activation = 'softmax')\n])","443ba4ec":"# model \nmodel.summary()","ad653e3f":"model.compile(optimizer='adam',loss=\"sparse_categorical_crossentropy\",metrics=['accuracy'])","5d1c748c":"model.fit(x_train,y_train , epochs=20, validation_data =( x_test,y_test))","2888d040":"# classification matrix \ny_pred= model.predict(x_test)\ny_pred = np.argmax(y_pred,axis=1)\nprint(classification_report(y_pred,y_test))","b144576e":"X_test = pd.read_csv('..\/input\/digit-recognizer\/test.csv')","0ddd659d":"submit = pd.DataFrame(np.argmax(model.predict(X_test), axis=1), columns=['Label'], \n                      index=pd.read_csv('..\/input\/digit-recognizer\/sample_submission.csv')['ImageId'])\n\nsubmit.index.name = 'ImageId'\nsubmit.to_csv('submittion.csv')","92f7c709":"submit","101cc0c8":"## softmax \nSoftmax converts a real vector to a vector of categorical probabilities.\n\nother activation function https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/keras\/activations\n","bfde1b89":"# Digit Recognition Using Neural Network using tensorflow 2.0\n* this notebook is for beginner i have included various link to study from.\n* **plz upvote if find useful **","951adf71":"learn more about dense layer \nhttps:\/\/www.tensorflow.org\/api_docs\/python\/tf\/keras\/layers\/Dense","baf9eccc":"# submit data ","9ed048b2":"## Display digit ","1e066ca0":"# Normalise data :\nnormalization reduces the complexity of the problem your network is trying to solve.\nBring data in range of(0-1).This can potentially increase the accuracy of your model and speed up the training. You bring the data on the same scale and reduce variance. None of the weights in the network are wasted on doing a normalization for you, meaning that they can be used more efficiently to solve the actual task at hand.","897e2cfd":"## Dense Layer :\nDense layer is the regular deeply connected neural network layer. It is most common and frequently used layer. Dense layer does the below operation on the input and return the output.\n\n\n*  **units** :  Positive integer, dimensionality of the output space.    \n*  **use_bias**\t: Boolean, whether the layer uses a bias vector. \n*  **activation** : represent the activation function.\n* **input_shape** : sape of input \n\n<a href=\"https:\/\/ibb.co\/hsS14p\"><img src=\"https:\/\/preview.ibb.co\/evzsAU\/fullyc.jpg\" alt=\"fullyc\" border=\"0\"><\/a>","8aab71a6":"## Epoch \nan epoch refers to one cycle through the full training data ","0eaa9e62":"## optimizer \n- Optimizers are algorithms or methods used to change the attributes of your neural network such as weights and learning rate in order to reduce the losses check out this note book \n* https:\/\/www.kaggle.com\/residentmario\/keras-optimizers","24c32fcc":"## Activation function\nIn artificial neural networks, the activation function of a node defines the output of that node given an input or set of inputs\n\nhttps:\/\/towardsdatascience.com\/activation-functions-neural-networks-1cbd9f8d91d6\n","edca8ca6":"## Loss \n* sparse_categorical_crossentropy(...): Computes the sparse categorical crossentropy loss.\n* https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/keras\/losses"}}