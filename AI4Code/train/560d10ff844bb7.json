{"cell_type":{"7d7bbfa6":"code","dd1ceb15":"code","2a66103b":"code","83fd2886":"code","f480ed53":"code","f693bd9a":"code","c8001734":"code","47d527dc":"markdown","c7beb9d6":"markdown","c8298711":"markdown"},"source":{"7d7bbfa6":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nimport glob\nfrom datetime import datetime\nimport re","dd1ceb15":"input_path=\"..\/input\/cityofla\/CityofLA\/\"","2a66103b":"job_bulletein_path=input_path+\"Job Bulletins\/\"\njob_bulletein_path","83fd2886":"files=glob.glob(job_bulletein_path+\"\/*.txt\")\nprint(\"Number of files in Job Bulletein path \",len(files))","f480ed53":"data=pd.DataFrame()\njob_class_title=[]\njob_class_number=[]\nopen_date=[]\nrevised_date=[]\nfile_name=[]\n\nfor __file__ in files:\n\n    file_name.append(__file__.replace(job_bulletein_path,\"\"))\n    jp=__file__.replace(job_bulletein_path,\"\").upper()\n    jp=jp.replace(\"DRAFT.TXT\",\"\")\n    jp=jp.replace(\".TXT\",\"\")\n    jp=re.sub(r\"\\d+\",\"\",jp)\n    jp=jp.replace(\"REVISED\",\"\")\n    jp=jp.replace(\"REV\",\"\")\n    jp=jp.replace(\"()\",\"\").strip()\n    jp=jp.replace(\"BULLETIN FINAL\",\"\")\n    \n    \n    job_class_title.append(jp)\n    \n    ## Get job_class_number - it is either length 3 or length 4\n    \n    class_regex = ' \\d{3,4} '\n    class_num = re.findall(class_regex, __file__)\n    #print(class_num)\n    job_class_number.append(class_num)\n\n    ### Get open date and Revised Date\n    \n    date_regex='\\d{5,6}'\n    dates_search=re.findall(date_regex,__file__)\n    if len(dates_search)>1:\n        revised_date.append(dates_search[1])\n    else:\n        revised_date.append(\"\")\n    \n    if len(dates_search)>0:\n        open_date.append(dates_search[0])\n    else:\n        open_date.append(\"\")","f693bd9a":"data['JOB_CLASS_TITLE']=job_class_title\ndata['JOB_CLASS_NO']=job_class_number\ndata['FILE_NAME']=file_name\ndata['OPEN_DATE']=open_date\ndata['REVISED_DATE']=revised_date","c8001734":"data.to_excel(\"JobBulleteins_version1.xlsx\")","47d527dc":"### Let us concatenate the text files and create a dataframe\n","c7beb9d6":"**Help the City of Los Angeles to structure and analyze its job descriptions**\n\nThe City of Los Angeles faces a big hiring challenge: 1\/3 of its 50,000 workers are eligible to retire by July of 2020. The city has partnered with Kaggle to create a competition to improve the job bulletins that will fill all those open positions.\n\n### Problem Statement\nThe content, tone, and format of job bulletins can influence the quality of the applicant pool. Overly-specific job requirements may discourage diversity. The Los Angeles Mayor\u2019s Office wants to reimagine the city\u2019s job bulletins by using text analysis to identify needed improvements.\n\nThe goal is to convert a folder full of plain-text job postings into a structured CSV file and then to use this data to: (1) identify language that can negatively bias the pool of applicants; (2) improve the diversity and quality of the applicant pool; and\/or (3) make it easier to determine which promotions are available to employees in each job class.\n\n### Data Description\n\nThe job bulletins will be provided as a folder of plain-text files, one for each job classification.\n\n Job Bulletins [Folder]\n \n- 683 plain-text job postings\n\nInstructions and Additional Documents [Folder]\n\n- Job Bulletins with Annotations\n\n- Annotation Descriptions.docx\n\n- City Job Paths\n\n- PDFs\n\n- Description of promotions in job bulletins.docx\n\n- Job_titles.csv\n\n- Kaggle_data_dictionary.csv\n\n- Sample job class export template.csv","c8298711":"### Let us extract Job Class Title, Job Class No, Open Date and Revised Date if present from the filename"}}