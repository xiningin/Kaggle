{"cell_type":{"32765b4a":"code","7b3e1df2":"code","a91e4174":"code","ed34401c":"code","730a056d":"code","d677024d":"code","5bb6a20f":"code","383876c0":"code","ae18f6bd":"code","851992a6":"code","b0ed30b5":"code","f1a0e653":"code","13e141b7":"code","57f62071":"markdown","f2b56c67":"markdown","4e191647":"markdown","80952958":"markdown","3412a238":"markdown","c589b585":"markdown","b473268e":"markdown","c3078482":"markdown","180d24c9":"markdown","c7dfd8de":"markdown","2b909970":"markdown","81bba31f":"markdown","9b12d502":"markdown"},"source":{"32765b4a":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nfrom scipy.stats import norm\nfrom sklearn.preprocessing import StandardScaler\nfrom scipy import stats\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\ndf = pd.read_csv('..\/input\/StudentsPerformance.csv')\n# Any results you write to the current directory are saved as output.","7b3e1df2":"df.head(10) #summary\n","a91e4174":"df.columns #names of columns","ed34401c":"plt.figure(figsize=(12,6))\ndf.gender.value_counts()\nsns.countplot(x=\"gender\", data=df, palette=\"bwr\")\nplt.show()","730a056d":"df.gender.value_counts()\nplt.figure(figsize=(12,6))\nsns.countplot(x=\"parental level of education\", data=df, palette=\"bwr\")\nplt.show()","d677024d":"pd.crosstab(df.gender,df['test preparation course']).plot(kind=\"bar\",figsize=(15,6),color=['#1CA53B','#AA1111' ])\nplt.title('Completed Pre-test divided by gender')\nplt.xlabel('Sex (0 = Female, 1 = Male)')\nplt.xticks(rotation=0)\nplt.legend([\"Completed\", \"Not Completed\"])\nplt.ylabel('Frequency')\nplt.show()","5bb6a20f":"df['test preparation course'].value_counts()\nplt.figure(figsize=(12,6))\n\nsns.countplot(x=\"test preparation course\", data=df, palette=\"bwr\")\nplt.show()","383876c0":"plt.figure(figsize=(8,6))\ndf['race\/ethnicity'].value_counts().head(10).plot.bar()\n","ae18f6bd":"df_treat = pd.get_dummies(df)\ndf_treat.dtypes.value_counts()\ndf_treat.head(10)","851992a6":"fig = plt.figure(figsize=(8,10))\nax1 = fig.add_subplot(311)\nax2 = fig.add_subplot(312)\nax3 = fig.add_subplot(313)\nsns.distplot(df['math score'],ax=ax1,color=\"y\")\nsns.distplot(df['writing score'],ax=ax2,color=\"r\")\nsns.distplot(df['reading score'],ax=ax3)\n","b0ed30b5":"g = sns.FacetGrid(df, hue='gender', size = 7)\ng.map(plt.scatter, 'math score','reading score', edgecolor=\"w\")\ng.add_legend()","f1a0e653":"g = sns.FacetGrid(df, hue='test preparation course', size = 7)\ng.map(plt.scatter, 'math score','reading score', edgecolor=\"w\")\ng.add_legend()","13e141b7":"p = sns.FacetGrid(data = df, hue = 'gender', size = 5, legend_out=True)\np = p.map(sns.kdeplot, 'math score')\nplt.legend()\np = sns.FacetGrid(data = df, hue = 'gender', size = 5, legend_out=True)\np = p.map(sns.kdeplot, 'reading score')\nplt.legend()\np = sns.FacetGrid(data = df, hue = 'gender', size = 5, legend_out=True)\np = p.map(sns.kdeplot, 'writing score')\n\nplt.legend()","57f62071":"**Gender Count**","f2b56c67":"\n**A SIMPLE DATA EXPLORATION.\n**\nUsing a dataset on kaggle I tried to do a little data exploration by using the most common plot","4e191647":"**# 'Completed Pre-test divided by gender'**","80952958":"Distribution of tests scoring by gender","3412a238":"**SUMMARY OF DATASET**","c589b585":"**Treating the categorical variables**\nOne hot econding","b473268e":"The distribution plot confirm: girls are better than mens as you can see!!","c3078482":"**PARENTAL LEVEL OF EDUCATION\n**","180d24c9":"**# TEST PREPARATION COURSE\n**","c7dfd8de":"Distribution by ethnicity","2b909970":"**SCATTER PLOT**","81bba31f":"**# DISTRIBUTION OF TESTS SCORING\n**","9b12d502":"Of course the girl are better in math than the men!!!!!!!!"}}