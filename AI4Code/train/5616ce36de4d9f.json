{"cell_type":{"a1fddc58":"code","6ccd09d2":"code","8307503e":"code","e45366ba":"code","80550c02":"code","8493b8dc":"code","ce6e7d6d":"code","aff7baae":"code","bfc8a708":"code","6967e45c":"code","08f77089":"code","ef228d30":"code","31842dc4":"code","e72d2a2e":"code","47f09d56":"code","cf34467c":"code","8f0d8385":"code","161f31dc":"code","540b94d3":"code","630a8c01":"code","f55dd0dd":"code","39eec781":"code","1ed1d19f":"code","3eccd920":"code","a47da357":"code","84cee4cc":"code","003475bf":"code","9de4e390":"code","b9a1a695":"code","e02c3538":"code","dbc2b70b":"code","3c2869ac":"code","e14673cc":"code","fb743b63":"code","34a76ad4":"code","74e0f901":"code","9d431164":"code","4dde014c":"code","60e7e906":"code","1f3b157a":"code","2e8e185a":"code","a2c75eb7":"code","c6fa60f1":"code","87d7aa92":"code","cb943e5c":"code","51eeb86d":"code","2ea0db80":"code","de8216ed":"code","78b0b594":"code","f9fec91b":"code","fd645edf":"code","ec5ee40d":"code","85d35fd8":"code","3dc0bde7":"code","83033fa0":"code","e7e8d7b9":"code","40c7b272":"code","ad7dfd33":"code","a76e1310":"code","0f9905c3":"code","36758627":"code","62832dcb":"code","56d8ddb7":"code","997f1d3a":"markdown","3b878618":"markdown","c3a3bbe1":"markdown","b6b8e0a5":"markdown","ff1af6e3":"markdown","6513e086":"markdown","df1068e6":"markdown","96911a73":"markdown","23fcdfcf":"markdown","330aceac":"markdown","607b3411":"markdown","803b541e":"markdown","09805d8f":"markdown","8bdec6df":"markdown","ee31d03c":"markdown","e6edafba":"markdown","c738fb54":"markdown","ef7448be":"markdown","5a85084a":"markdown","16ab96ad":"markdown","5e1707e2":"markdown","23633f08":"markdown","dd2e46ad":"markdown","e11f9dca":"markdown","f103da2f":"markdown","e0ffb712":"markdown","700efc66":"markdown","fa0fd41b":"markdown","5e66d530":"markdown","940fc59f":"markdown","746e15ac":"markdown","e6bdbd6c":"markdown","8f21c5ef":"markdown","502f257d":"markdown","f6cc3e9f":"markdown","59c23a0f":"markdown","bc7b73c6":"markdown","c3de4a05":"markdown","cf72640d":"markdown","44f7433d":"markdown","943315c3":"markdown","10efa710":"markdown","64151e8a":"markdown","921126e7":"markdown","0371a21d":"markdown","6a93d7c4":"markdown","5b1b0f67":"markdown","54da1673":"markdown","41c42b19":"markdown","dc721618":"markdown","a25a72f5":"markdown","a38a90f7":"markdown","a700ebe9":"markdown","20a53e00":"markdown","d9044f54":"markdown","55d14293":"markdown","3ef6e9cc":"markdown","6eab8604":"markdown","a0089e70":"markdown","280c90cc":"markdown","cf7c2491":"markdown","20a420e8":"markdown","ab97e981":"markdown","e93698af":"markdown","cc6c8237":"markdown","92a24232":"markdown","1d5e3e66":"markdown","1bfb0a11":"markdown","7f7827bc":"markdown","7b5d7f8b":"markdown","84f1884c":"markdown","278d9184":"markdown","bd1c5913":"markdown","342c2e5f":"markdown","44c2a213":"markdown","542d71e3":"markdown","2a23aa90":"markdown","61f99ee9":"markdown","3c19ce82":"markdown","b9e9e09a":"markdown","1350ac07":"markdown","e5eed8ea":"markdown"},"source":{"a1fddc58":"import numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport pandas as pd\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport itertools","6ccd09d2":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","8307503e":"application_data = pd.read_csv(r'\/kaggle\/input\/loan-defaulter\/application_data.csv')\nprevious_application = pd.read_csv(r'\/kaggle\/input\/loan-defaulter\/previous_application.csv')\ncolumns_description = pd.read_csv(r'\/kaggle\/input\/loan-defaulter\/columns_description.csv',skiprows=1)","e45366ba":"application_data=application_data.drop([ 'EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3',\n       'APARTMENTS_AVG', 'BASEMENTAREA_AVG', 'YEARS_BEGINEXPLUATATION_AVG',\n       'YEARS_BUILD_AVG', 'COMMONAREA_AVG', 'ELEVATORS_AVG', 'ENTRANCES_AVG',\n       'FLOORSMAX_AVG', 'FLOORSMIN_AVG', 'LANDAREA_AVG',\n       'LIVINGAPARTMENTS_AVG', 'LIVINGAREA_AVG', 'NONLIVINGAPARTMENTS_AVG',\n       'NONLIVINGAREA_AVG', 'APARTMENTS_MODE', 'BASEMENTAREA_MODE',\n       'YEARS_BEGINEXPLUATATION_MODE', 'YEARS_BUILD_MODE', 'COMMONAREA_MODE',\n       'ELEVATORS_MODE', 'ENTRANCES_MODE', 'FLOORSMAX_MODE', 'FLOORSMIN_MODE',\n       'LANDAREA_MODE', 'LIVINGAPARTMENTS_MODE', 'LIVINGAREA_MODE',\n       'NONLIVINGAPARTMENTS_MODE', 'NONLIVINGAREA_MODE', 'APARTMENTS_MEDI',\n       'BASEMENTAREA_MEDI', 'YEARS_BEGINEXPLUATATION_MEDI', 'YEARS_BUILD_MEDI',\n       'COMMONAREA_MEDI', 'ELEVATORS_MEDI', 'ENTRANCES_MEDI', 'FLOORSMAX_MEDI',\n       'FLOORSMIN_MEDI', 'LANDAREA_MEDI', 'LIVINGAPARTMENTS_MEDI',\n       'LIVINGAREA_MEDI', 'NONLIVINGAPARTMENTS_MEDI', 'NONLIVINGAREA_MEDI',\n       'FONDKAPREMONT_MODE', 'HOUSETYPE_MODE', 'TOTALAREA_MODE',\n       'WALLSMATERIAL_MODE', 'EMERGENCYSTATE_MODE',\"OWN_CAR_AGE\",\"OCCUPATION_TYPE\"],axis=1)\nprevious_application=previous_application.drop([ 'AMT_DOWN_PAYMENT', 'RATE_DOWN_PAYMENT', 'RATE_INTEREST_PRIMARY',\n       \"RATE_INTEREST_PRIVILEGED\"],axis=1)","80550c02":"pd.set_option(\"display.max_rows\", None, \"display.max_columns\", None)\ncombined_df= pd.merge(application_data, previous_application, on='SK_ID_CURR', how='inner')\n\ncombined_df.sort_values(by=['SK_ID_CURR','SK_ID_PREV'],ascending=[True,True],inplace=True)\ndisplay(combined_df.head(10))","8493b8dc":"combined_df.drop_duplicates(subset='SK_ID_CURR',inplace=True,keep='last')\ncombined_df.head()","ce6e7d6d":"combined_df['DAYS_BIRTH'] = abs(combined_df['DAYS_BIRTH'])\ncombined_df['DAYS_ID_PUBLISH'] = abs(combined_df['DAYS_ID_PUBLISH'])\ncombined_df['DAYS_ID_PUBLISH'] = abs(combined_df['DAYS_ID_PUBLISH'])\ncombined_df['DAYS_LAST_PHONE_CHANGE'] = abs(combined_df['DAYS_LAST_PHONE_CHANGE'])","aff7baae":"corrmat = combined_df.corr() \n  \nf, ax = plt.subplots(figsize =(8, 8)) \nsns.heatmap(corrmat, ax = ax, cmap =\"rainbow\") \nplt.show()","bfc8a708":"corrmat = combined_df.corr() \ncorrdf = corrmat.where(np.triu(np.ones(corrmat.shape), k=1).astype(np.bool))\ncorrdf = corrdf.unstack().reset_index()\ncorrdf.columns = ['Var1', 'Var2', 'Correlation']\ncorrdf.dropna(subset = ['Correlation'], inplace = True)\ncorrdf['Correlation'] = round(corrdf['Correlation'], 2)\ncorrdf['Correlation'] = abs(corrdf['Correlation'])\ncorrdf.sort_values(by = 'Correlation', ascending = False).head(10)","6967e45c":"fig = plt.figure(figsize=(13,6))\nplt.subplot(121)\ncombined_df[\"CODE_GENDER\"].value_counts().plot.pie(autopct = \"%1.0f%%\",colors = [\"red\",\"yellow\"],startangle = 60,\n                                                                        wedgeprops={\"linewidth\":2,\"edgecolor\":\"k\"},explode=[.05,0,0],shadow =True)\nplt.title(\"Distribution of gender\")\nplt.show()","08f77089":"plt.figure(figsize=(14,7))\nplt.subplot(121)\ncombined_df[\"TARGET\"].value_counts().plot.pie(autopct = \"%1.0f%%\",colors = sns.color_palette(\"prism\",7),startangle = 60,labels=[\"repayer\",\"defaulter\"],\n                                                                        wedgeprops={\"linewidth\":2,\"edgecolor\":\"k\"},explode=[.1,0],shadow =True)\nplt.title(\"Distribution of target variable\")\n\nplt.subplot(122)\nax = combined_df[\"TARGET\"].value_counts().plot(kind=\"barh\")\n\nfor i,j in enumerate(combined_df[\"TARGET\"].value_counts().values):\n    ax.text(.7,i,j,weight = \"bold\",fontsize=20)\n\nplt.title(\"Count of target variable\")\nplt.show()","ef228d30":"plt.figure(figsize=(14,7))\nplt.subplot(121)\ncombined_df[\"NAME_CONTRACT_TYPE_x\"].value_counts().plot.pie(autopct = \"%1.0f%%\",colors = [\"orange\",\"red\"],startangle = 60,\n                                                                        wedgeprops={\"linewidth\":2,\"edgecolor\":\"white\"},shadow =True)\ncirc = plt.Circle((0,0),.7,color=\"white\")\nplt.gca().add_artist(circ)\nplt.title(\"distribution of contract types in combined_df\")\n\nplt.show()","31842dc4":"fig = plt.figure(figsize=(13,6))\nplt.subplot(121)\ncombined_df[\"CODE_GENDER\"].value_counts().plot.pie(autopct = \"%1.0f%%\",colors = [\"red\",\"yellow\"],startangle = 60,\n                                                                        wedgeprops={\"linewidth\":2,\"edgecolor\":\"k\"},explode=[.05,0,0],shadow =True)\nplt.title(\"Distribution of gender\")\nplt.show()","e72d2a2e":"fig  = plt.figure(figsize=(13,6))\nplt.subplot(121)\nax = sns.countplot(\"NAME_CONTRACT_TYPE_x\",hue=\"CODE_GENDER\",data=combined_df,palette=[\"r\",\"b\",\"g\"])\nax.set_facecolor(\"lightgrey\")\nax.set_title(\"Distribution of Contract type by gender -application_data\")\n\n\nplt.show()\n","47f09d56":"fig = plt.figure(figsize=(13,6))\n\nplt.subplot(121)\ncombined_df[\"FLAG_OWN_CAR\"].value_counts().plot.pie(autopct = \"%1.0f%%\",colors = [\"gold\",\"orangered\"],startangle = 60,\n                                                                        wedgeprops={\"linewidth\":2,\"edgecolor\":\"k\"},explode=[.05,0],shadow =True)\nplt.title(\"distribution of client owning a car\")\n\nplt.subplot(122)\ncombined_df[combined_df[\"FLAG_OWN_CAR\"] == \"Y\"][\"CODE_GENDER\"].value_counts().plot.pie(autopct = \"%1.0f%%\",colors = [\"b\",\"orangered\"],startangle = 90,\n                                                                        wedgeprops={\"linewidth\":2,\"edgecolor\":\"k\"},explode=[.05,0,0],shadow =True)\nplt.title(\"distribution of client owning a car by gender\")\n\nplt.show()","cf34467c":"plt.figure(figsize=(13,6))\nplt.subplot(121)\ncombined_df[\"FLAG_OWN_REALTY\"].value_counts().plot.pie(autopct = \"%1.0f%%\",colors = [\"skyblue\",\"gold\"],startangle = 90,\n                                              wedgeprops={\"linewidth\":2,\"edgecolor\":\"k\"},explode=[0.05,0],shadow =True)\nplt.title(\"Distribution of client owns a house or flat\")\n\nplt.subplot(122)\ncombined_df[combined_df[\"FLAG_OWN_REALTY\"] == \"Y\"][\"CODE_GENDER\"].value_counts().plot.pie(autopct = \"%1.0f%%\",colors = [\"orangered\",\"b\"],startangle = 90,\n                                                                        wedgeprops={\"linewidth\":2,\"edgecolor\":\"k\"},explode=[.05,0,0],shadow =True)\nplt.title(\"Distribution of client owning a house or flat by gender\")\nplt.show()","8f0d8385":"fig = plt.figure(figsize=(12,10))\nplt.subplot(211)\nsns.countplot(combined_df[\"CNT_CHILDREN\"],palette=\"Set1\",hue=combined_df[\"TARGET\"])\nplt.legend(loc=\"upper center\")\nplt.title(\" Distribution of Number of children client has  by repayment status\")\nplt.subplot(212)\nsns.countplot(combined_df[\"CNT_FAM_MEMBERS\"],palette=\"Set1\",hue=combined_df[\"TARGET\"])\nplt.legend(loc=\"upper center\")\nplt.title(\" Distribution of Number of family members client has  by repayment status\")\nfig.set_facecolor(\"lightblue\")","161f31dc":"default = combined_df[combined_df[\"TARGET\"]==1][[ 'NAME_CONTRACT_TYPE_x', 'CODE_GENDER','FLAG_OWN_CAR', 'FLAG_OWN_REALTY']]\nnon_default = combined_df[combined_df[\"TARGET\"]==0][[ 'NAME_CONTRACT_TYPE_x', 'CODE_GENDER','FLAG_OWN_CAR', 'FLAG_OWN_REALTY']]\n\nd_cols = ['NAME_CONTRACT_TYPE_x', 'CODE_GENDER','FLAG_OWN_CAR', 'FLAG_OWN_REALTY']\nd_length = len(d_cols)\n\nfig = plt.figure(figsize=(16,4))\nfor i,j in itertools.zip_longest(d_cols,range(d_length)):\n    plt.subplot(1,4,j+1)\n    default[i].value_counts().plot.pie(autopct = \"%1.0f%%\",colors = sns.color_palette(\"prism\"),startangle = 90,\n                                        wedgeprops={\"linewidth\":1,\"edgecolor\":\"white\"},shadow =True)\n    circ = plt.Circle((0,0),.7,color=\"white\")\n    plt.gca().add_artist(circ)\n    plt.ylabel(\"\")\n    plt.title(i+\"-Defaulter\")\n\n\nfig = plt.figure(figsize=(16,4))\nfor i,j in itertools.zip_longest(d_cols,range(d_length)):\n    plt.subplot(1,4,j+1)\n    non_default[i].value_counts().plot.pie(autopct = \"%1.0f%%\",colors = sns.color_palette(\"prism\",3),startangle = 90,\n                                           wedgeprops={\"linewidth\":1,\"edgecolor\":\"white\"},shadow =True)\n    circ = plt.Circle((0,0),.7,color=\"white\")\n    plt.gca().add_artist(circ)\n    plt.ylabel(\"\")\n    plt.title(i+\"-Repayer\")","540b94d3":"cols = [ 'AMT_INCOME_TOTAL', 'AMT_CREDIT_x','AMT_ANNUITY_x', 'AMT_GOODS_PRICE_x']\nlength = len(cols)\ncs = [\"r\",\"b\",\"g\",\"k\"]\n\nax = plt.figure(figsize=(18,18))\nax.set_facecolor(\"lightgrey\")\nfor i,j,k in itertools.zip_longest(cols,range(length),cs):\n    plt.subplot(2,2,j+1)\n    sns.distplot(combined_df[combined_df[i].notnull()][i],color=k)\n    plt.axvline(combined_df[i].mean(),label = \"mean\",linestyle=\"dashed\",color=\"k\")\n    plt.legend(loc=\"best\")\n    plt.title(i)\n    plt.subplots_adjust(hspace = .2)","630a8c01":"df = combined_df.groupby(\"TARGET\")[cols].describe().transpose().reset_index()\ndf = df[df[\"level_1\"].isin([ 'mean', 'std', 'min', 'max'])] \ndf_x = df[[\"level_0\",\"level_1\",0]]\ndf_y = df[[\"level_0\",\"level_1\",1]]\ndf_x = df_x.rename(columns={'level_0':\"amount_type\", 'level_1':\"statistic\", 0:\"amount\"})\ndf_x[\"type\"] = \"REPAYER\"\ndf_y = df_y.rename(columns={'level_0':\"amount_type\", 'level_1':\"statistic\", 1:\"amount\"})\ndf_y[\"type\"] = \"DEFAULTER\"\ndf_new = pd.concat([df_x,df_y],axis = 0)\n\nstat = df_new[\"statistic\"].unique().tolist()\nlength = len(stat)\n\nplt.figure(figsize=(20,20))\n\nfor i,j in itertools.zip_longest(stat,range(length)):\n    plt.subplot(2,2,j+1)\n    fig = sns.barplot(df_new[df_new[\"statistic\"] == i][\"amount_type\"],df_new[df_new[\"statistic\"] == i][\"amount\"],\n                hue=df_new[df_new[\"statistic\"] == i][\"type\"],palette=[\"g\",\"r\"])\n    plt.title(i + \"--Defaulters vs Non defaulters\")\n    plt.subplots_adjust(hspace = .4)\n    fig.set_facecolor(\"lightgrey\")","f55dd0dd":"cols = [ 'AMT_INCOME_TOTAL', 'AMT_CREDIT_x','AMT_ANNUITY_x', 'AMT_GOODS_PRICE_x']\n\ndf1 = combined_df.groupby(\"CODE_GENDER\")[cols].mean().transpose().reset_index()\n\ndf_f   = df1[[\"index\",\"F\"]]\ndf_f   = df_f.rename(columns={'index':\"amt_type\", 'F':\"amount\"})\ndf_f[\"gender\"] = \"FEMALE\"\ndf_m   = df1[[\"index\",\"M\"]]\ndf_m   = df_m.rename(columns={'index':\"amt_type\", 'M':\"amount\"})\ndf_m[\"gender\"] = \"MALE\"\ndf_xna = df1[[\"index\",\"XNA\"]]\ndf_xna = df_xna.rename(columns={'index':\"amt_type\", 'XNA':\"amount\"})\ndf_xna[\"gender\"] = \"XNA\"\n\ndf_gen = pd.concat([df_m,df_f,df_xna],axis=0)\n\nplt.figure(figsize=(12,5))\nax = sns.barplot(\"amt_type\",\"amount\",data=df_gen,hue=\"gender\",palette=\"Set1\")\nplt.title(\"Average Income,credit,annuity & goods_price by gender\")\nplt.show()","39eec781":"fig = plt.figure(figsize=(10,8))\nplt.scatter(combined_df[combined_df[\"TARGET\"]==0]['AMT_ANNUITY_x'],combined_df[combined_df[\"TARGET\"]==0]['AMT_CREDIT_x'],s=35,\n            color=\"b\",alpha=.5,label=\"REPAYER\",linewidth=.5,edgecolor=\"k\")\nplt.scatter(combined_df[combined_df[\"TARGET\"]==1]['AMT_ANNUITY_x'],combined_df[combined_df[\"TARGET\"]==1]['AMT_CREDIT_x'],s=35,\n            color=\"r\",alpha=.2,label=\"DEFAULTER\",linewidth=.5,edgecolor=\"k\")\nplt.legend(loc=\"best\",prop={\"size\":15})\nplt.xlabel(\"AMT_ANNUITY\")\nplt.ylabel(\"AMT_CREDIT\")\nplt.title(\"Scatter plot between credit amount and annuity amount\")\nplt.show()","1ed1d19f":"amt = combined_df[[ 'AMT_INCOME_TOTAL','AMT_CREDIT_x',\n                         'AMT_ANNUITY_x', 'AMT_GOODS_PRICE_x',\"TARGET\"]]\namt = amt[(amt[\"AMT_GOODS_PRICE_x\"].notnull()) & (amt[\"AMT_ANNUITY_x\"].notnull())]\nsns.pairplot(amt,hue=\"TARGET\",palette=[\"b\",\"r\"])\nplt.show()","3eccd920":"plt.figure(figsize=(18,12))\nplt.subplot(121)\nsns.countplot(y=combined_df[\"NAME_TYPE_SUITE_x\"],\n              palette=\"Set2\",\n              order=combined_df[\"NAME_TYPE_SUITE_x\"].value_counts().index[:5])\nplt.title(\"Distribution of Suite type\")\n\nplt.subplot(122)\nsns.countplot(y=combined_df[\"NAME_TYPE_SUITE_x\"],\n              hue=combined_df[\"CODE_GENDER\"],palette=\"Set2\",\n              order=combined_df[\"NAME_TYPE_SUITE_x\"].value_counts().index[:5])\nplt.ylabel(\"\")\nplt.title(\"Distribution of Suite type by gender\")\nplt.subplots_adjust(wspace = .4)","a47da357":"plt.figure(figsize=(18,12))\nplt.subplot(121)\nsns.countplot(y=combined_df[\"NAME_INCOME_TYPE\"],\n              palette=\"Set2\",\n              order=combined_df[\"NAME_INCOME_TYPE\"].value_counts().index[:4])\nplt.title(\"Distribution of client income type\")\n\nplt.subplot(122)\nsns.countplot(y=combined_df[\"NAME_INCOME_TYPE\"],\n              hue=combined_df[\"CODE_GENDER\"],\n              palette=\"Set2\",\n              order=combined_df[\"NAME_INCOME_TYPE\"].value_counts().index[:4])\nplt.ylabel(\"\")\nplt.title(\"Distribution of client income  type by gender\")\nplt.subplots_adjust(wspace = .4)","84cee4cc":"plt.figure(figsize=(25,25))\nplt.subplot(121)\ncombined_df[combined_df[\"TARGET\"]==0][\"NAME_EDUCATION_TYPE\"].value_counts().plot.pie(fontsize=12,autopct = \"%1.0f%%\",\n                                                                                                 colors = sns.color_palette(\"Set1\"),\n                                              wedgeprops={\"linewidth\":2,\"edgecolor\":\"white\"},shadow =True)\ncirc = plt.Circle((0,0),.7,color=\"white\")\nplt.gca().add_artist(circ)\nplt.title(\"Distribution of Education type for Repayers\",color=\"b\")\n\nplt.subplot(122)\ncombined_df[combined_df[\"TARGET\"]==1][\"NAME_EDUCATION_TYPE\"].value_counts().plot.pie(fontsize=12,autopct = \"%1.0f%%\",\n                                                                                                 colors = sns.color_palette(\"Set1\"),\n                                              wedgeprops={\"linewidth\":2,\"edgecolor\":\"white\"},shadow =True)\ncirc = plt.Circle((0,0),.7,color=\"white\")\nplt.gca().add_artist(circ)\nplt.title(\"Distribution of Education type for Defaulters\",color=\"b\")\nplt.ylabel(\"\")\nplt.show()","003475bf":"edu = combined_df.groupby(['NAME_EDUCATION_TYPE','NAME_INCOME_TYPE'])['AMT_INCOME_TOTAL'].mean().reset_index().sort_values(by='AMT_INCOME_TOTAL',ascending=False)\nfig = plt.figure(figsize=(13,7))\nax = sns.barplot('NAME_INCOME_TYPE','AMT_INCOME_TOTAL',data=edu,hue='NAME_EDUCATION_TYPE',palette=\"seismic\")\nax.set_facecolor(\"k\")\nplt.title(\" Average Earnings by different professions and education types\")\nplt.show()","9de4e390":"plt.figure(figsize=(16,8))\nplt.subplot(121)\ncombined_df[combined_df[\"TARGET\"]==0][\"NAME_FAMILY_STATUS\"].value_counts().plot.pie(autopct = \"%1.0f%%\",\n                                                             startangle=120,colors = sns.color_palette(\"Set2\",7),\n                                              wedgeprops={\"linewidth\":2,\"edgecolor\":\"white\"},shadow =True,explode=[0,.07,0,0,0])\n\nplt.title(\"Distribution of Family status for Repayers\",color=\"b\")\n\nplt.subplot(122)\ncombined_df[combined_df[\"TARGET\"]==1][\"NAME_FAMILY_STATUS\"].value_counts().plot.pie(autopct = \"%1.0f%%\",\n                                                    startangle=120,colors = sns.color_palette(\"Set2\",7),\n                                              wedgeprops={\"linewidth\":2,\"edgecolor\":\"white\"},shadow =True,explode=[0,.07,0,0,0])\n\n\nplt.title(\"Distribution of Family status for Defaulters\",color=\"b\")\nplt.ylabel(\"\")\nplt.show()","b9a1a695":"plt.figure(figsize=(20,20))\nplt.subplot(121)\ncombined_df[combined_df[\"TARGET\"]==0][\"NAME_HOUSING_TYPE\"].value_counts().plot.pie(autopct = \"%1.0f%%\",fontsize=10,\n                                                             colors = sns.color_palette(\"Spectral\"),\n                                              wedgeprops={\"linewidth\":2,\"edgecolor\":\"white\"},shadow =True)\n\nplt.title(\"Distribution of housing type  for Repayer\",color=\"b\")\n\nplt.subplot(122)\ncombined_df[combined_df[\"TARGET\"]==1][\"NAME_HOUSING_TYPE\"].value_counts().plot.pie(autopct = \"%1.0f%%\",fontsize=10,\n                                                    colors = sns.color_palette(\"Spectral\"),\n                                              wedgeprops={\"linewidth\":2,\"edgecolor\":\"white\"},shadow =True)\n\n\nplt.title(\"Distribution of housing type for Defaulters\",color=\"b\")\nplt.ylabel(\"\")\nplt.show()","e02c3538":"fig = plt.figure(figsize=(13,8))\n\nplt.subplot(121)\nsns.violinplot(y=combined_df[combined_df[\"TARGET\"]==0][\"REGION_POPULATION_RELATIVE\"]\n               ,x=combined_df[combined_df[\"TARGET\"]==0][\"NAME_CONTRACT_TYPE_x\"],\n               palette=\"Set1\")\nplt.title(\"Distribution of region population for Non Default loans\",color=\"b\")\nplt.subplot(122)\nsns.violinplot(y = combined_df[combined_df[\"TARGET\"]==1][\"REGION_POPULATION_RELATIVE\"]\n               ,x=combined_df[combined_df[\"TARGET\"]==1][\"NAME_CONTRACT_TYPE_x\"]\n               ,palette=\"Set1\")\nplt.title(\"Distribution of region population  for  Default loans\",color=\"b\")\n\nplt.subplots_adjust(wspace = .2)\nfig.set_facecolor(\"lightgrey\")","dbc2b70b":"fig = plt.figure(figsize=(13,15))\n\nplt.subplot(221)\nsns.distplot(combined_df[combined_df[\"TARGET\"]==0][\"DAYS_BIRTH\"],color=\"b\")\nplt.title(\"Age Distribution of repayers\")\n\nplt.subplot(222)\nsns.distplot(combined_df[combined_df[\"TARGET\"]==1][\"DAYS_BIRTH\"],color=\"r\")\nplt.title(\"Age Distribution of defaulters\")\n\nplt.subplot(223)\nsns.lvplot(combined_df[\"TARGET\"],combined_df[\"DAYS_BIRTH\"],hue=combined_df[\"CODE_GENDER\"],palette=[\"b\",\"grey\",\"m\"])\nplt.axhline(combined_df[\"DAYS_BIRTH\"].mean(),linestyle=\"dashed\",color=\"k\",label =\"average age of client\")\nplt.legend(loc=\"lower right\")\nplt.title(\"Client age vs Loan repayment status(hue=gender)\")\n\nplt.subplot(224)\nsns.lvplot(combined_df[\"TARGET\"],combined_df[\"DAYS_BIRTH\"],hue=combined_df[\"NAME_CONTRACT_TYPE_x\"],palette=[\"r\",\"g\"])\nplt.axhline(combined_df[\"DAYS_BIRTH\"].mean(),linestyle=\"dashed\",color=\"k\",label =\"average age of client\")\nplt.legend(loc=\"lower right\")\nplt.title(\"Client age vs Loan repayment status(hue=contract type)\")\n\nplt.subplots_adjust(wspace = .2,hspace = .3)\n\nfig.set_facecolor(\"lightgrey\")","3c2869ac":"fig = plt.figure(figsize=(13,5))\n\nplt.subplot(121)\nsns.distplot(combined_df[combined_df[\"TARGET\"]==0][\"DAYS_EMPLOYED\"],color=\"b\")\nplt.title(\"days employed distribution of repayers\")\n\nplt.subplot(122)\nsns.distplot(combined_df[combined_df[\"TARGET\"]==1][\"DAYS_EMPLOYED\"],color=\"r\")\nplt.title(\"days employed distribution of defaulters\")\n\nfig.set_facecolor(\"ghostwhite\")","e14673cc":"fig = plt.figure(figsize=(13,5))\n\nplt.subplot(121)\nsns.distplot(combined_df[combined_df[\"TARGET\"]==0][\"DAYS_REGISTRATION\"],color=\"b\")\nplt.title(\"registration days distribution of repayers\")\n\nplt.subplot(122)\nsns.distplot(combined_df[combined_df[\"TARGET\"]==1][\"DAYS_REGISTRATION\"],color=\"r\")\nplt.title(\"registration days distribution of defaulter\")\n\nfig.set_facecolor(\"ghostwhite\")","fb743b63":"x   = combined_df[['FLAG_MOBIL', 'FLAG_EMP_PHONE', 'FLAG_WORK_PHONE', 'FLAG_CONT_MOBILE',\n       'FLAG_PHONE', 'FLAG_EMAIL',\"TARGET\"]]\nx[\"TARGET\"] = x[\"TARGET\"].replace({0:\"repayers\",1:\"defaulters\"})\nx  = x.replace({1:\"YES\",0:\"NO\"})\n\ncols = ['FLAG_MOBIL', 'FLAG_EMP_PHONE', 'FLAG_WORK_PHONE', 'FLAG_CONT_MOBILE',\n       'FLAG_PHONE', 'FLAG_EMAIL']\nlength = len(cols)\n\nfig = plt.figure(figsize=(15,12))\nfig.set_facecolor(\"lightgrey\")\n\nfor i,j in itertools.zip_longest(cols,range(length)):\n    plt.subplot(2,3,j+1)\n    sns.countplot(x[i],hue=x[\"TARGET\"],palette=[\"r\",\"g\"])\n    plt.title(i,color=\"b\")","34a76ad4":"fig = plt.figure(figsize=(13,13))\nplt.subplot(221)\ncombined_df[combined_df[\"TARGET\"]==0][\"REGION_RATING_CLIENT\"].value_counts().plot.pie(autopct = \"%1.0f%%\",fontsize=12,\n                                                             colors = sns.color_palette(\"Pastel1\"),\n                                              wedgeprops={\"linewidth\":2,\"edgecolor\":\"white\"},shadow =True)\n\nplt.title(\"Distribution of region rating  for Repayers\",color=\"b\")\n\nplt.subplot(222)\ncombined_df[combined_df[\"TARGET\"]==1][\"REGION_RATING_CLIENT\"].value_counts().plot.pie(autopct = \"%1.0f%%\",fontsize=12,\n                                                    colors = sns.color_palette(\"Pastel1\"),\n                                              wedgeprops={\"linewidth\":2,\"edgecolor\":\"white\"},shadow =True)\n\n\nplt.title(\"Distribution of region rating  for Defaulters\",color=\"b\")\nplt.ylabel(\"\")\n\nplt.subplot(223)\ncombined_df[combined_df[\"TARGET\"]==0][\"REGION_RATING_CLIENT_W_CITY\"].value_counts().plot.pie(autopct = \"%1.0f%%\",fontsize=12,\n                                                             colors = sns.color_palette(\"Paired\"),\n                                              wedgeprops={\"linewidth\":2,\"edgecolor\":\"white\"},shadow =True)\n\nplt.title(\"Distribution of city region rating   for Repayers\",color=\"b\")\n\nplt.subplot(224)\ncombined_df[combined_df[\"TARGET\"]==1][\"REGION_RATING_CLIENT_W_CITY\"].value_counts().plot.pie(autopct = \"%1.0f%%\",fontsize=12,\n                                                    colors = sns.color_palette(\"Paired\"),\n                                              wedgeprops={\"linewidth\":2,\"edgecolor\":\"white\"},shadow =True)\n\n\nplt.title(\"Distribution of city region rating  for Defaulters\",color=\"b\")\nplt.ylabel(\"\")\nfig.set_facecolor(\"ivory\")","74e0f901":"org = combined_df.groupby(\"TARGET\").agg({\"ORGANIZATION_TYPE\":\"value_counts\"})\norg = org.rename(columns = {\"ORGANIZATION_TYPE\":\"value_counts\"}).reset_index()\norg_0 = org[org[\"TARGET\"] == 0]\norg_1 = org[org[\"TARGET\"] == 1]\norg_0[\"percentage\"] = org_0[\"value_counts\"]*100\/org_0[\"value_counts\"].sum()\norg_1[\"percentage\"] = org_1[\"value_counts\"]*100\/org_1[\"value_counts\"].sum()\n\norganization = pd.concat([org_0,org_1],axis=0)\norganization = organization.sort_values(by=\"ORGANIZATION_TYPE\",ascending=True)\n\norganization[\"TARGET\"] = organization[\"TARGET\"].replace({0:\"repayers\",1:\"defaulters\"})\n\norganization\nplt.figure(figsize=(13,7))\nax = sns.pointplot(\"ORGANIZATION_TYPE\",\"percentage\",\n                   data=organization,hue=\"TARGET\",palette=[\"b\",\"r\"])\nplt.xticks(rotation=90)\nplt.grid(True,alpha=.3)\nax.set_facecolor(\"k\")\nax.set_title(\"Distribution in organization types for repayers and defaulters\")\nplt.show()","9d431164":"fig = plt.figure(figsize=(20,20))\nplt.subplot(421)\nsns.boxplot(data=combined_df,x='TARGET',y='OBS_30_CNT_SOCIAL_CIRCLE',\n            hue=\"TARGET\", palette=\"Set3\")\nplt.title(\"Client's social surroundings with observable 30 DPD (days past due) def\",color=\"b\")\nplt.subplot(422)\nsns.boxplot(data=combined_df,x='TARGET',y='DEF_30_CNT_SOCIAL_CIRCLE',\n            hue=\"TARGET\", palette=\"Set3\")\nplt.title(\"Client's social surroundings defaulted on 30 DPD (days past due)\",color=\"b\")\nplt.subplot(423)\nsns.boxplot(data=combined_df,x='TARGET',y='OBS_60_CNT_SOCIAL_CIRCLE',\n            hue=\"TARGET\", palette=\"Set3\")\nplt.title(\"Client's social surroundings with observable 60 DPD (days past due) default\",color=\"b\")\nplt.subplot(424)\nsns.boxplot(data=combined_df,x='TARGET',y='DEF_60_CNT_SOCIAL_CIRCLE',\n            hue=\"TARGET\", palette=\"Set3\")\nplt.title(\"Client's social surroundings defaulted on 60 DPD (days past due)\",color=\"b\")\nfig.set_facecolor(\"ghostwhite\")","4dde014c":"plt.figure(figsize=(13,7))\nplt.subplot(121)\nax = sns.violinplot(combined_df[\"TARGET\"],\n                    combined_df[\"DAYS_LAST_PHONE_CHANGE\"],palette=[\"g\",\"r\"])\nax.set_facecolor(\"oldlace\")\nax.set_title(\"days before application client changed phone -violin plot\")\nplt.subplot(122)\nax1 = sns.lvplot(combined_df[\"TARGET\"],\n                 combined_df[\"DAYS_LAST_PHONE_CHANGE\"],palette=[\"g\",\"r\"])\nax1.set_facecolor(\"oldlace\")\nax1.set_ylabel(\"\")\nax1.set_title(\"days before application client changed phone -box plot\")\nplt.subplots_adjust(wspace = .2)","60e7e906":"cols = [ 'FLAG_DOCUMENT_2', 'FLAG_DOCUMENT_3',\n       'FLAG_DOCUMENT_4', 'FLAG_DOCUMENT_5', 'FLAG_DOCUMENT_6',\n       'FLAG_DOCUMENT_7', 'FLAG_DOCUMENT_8', 'FLAG_DOCUMENT_9',\n       'FLAG_DOCUMENT_10', 'FLAG_DOCUMENT_11', 'FLAG_DOCUMENT_12',\n       'FLAG_DOCUMENT_13', 'FLAG_DOCUMENT_14', 'FLAG_DOCUMENT_15',\n       'FLAG_DOCUMENT_16', 'FLAG_DOCUMENT_17', 'FLAG_DOCUMENT_18',\n       'FLAG_DOCUMENT_19', 'FLAG_DOCUMENT_20', 'FLAG_DOCUMENT_21']\n\ndf_flag = combined_df[cols+[\"TARGET\"]]\n\nlength = len(cols)\n\ndf_flag[\"TARGET\"] = df_flag[\"TARGET\"].replace({1:\"defaulter\",0:\"repayer\"})\n\nfig = plt.figure(figsize=(13,24))\nfig.set_facecolor(\"lightgrey\")\nfor i,j in itertools.zip_longest(cols,range(length)):\n    plt.subplot(5,4,j+1)\n    ax = sns.countplot(df_flag[i],hue=df_flag[\"TARGET\"],palette=[\"r\",\"b\"])\n    plt.yticks(fontsize=5)\n    plt.xlabel(\"\")\n    plt.title(i)\n    ax.set_facecolor(\"k\")","1f3b157a":"cols = ['AMT_REQ_CREDIT_BUREAU_HOUR', 'AMT_REQ_CREDIT_BUREAU_DAY',\n       'AMT_REQ_CREDIT_BUREAU_WEEK', 'AMT_REQ_CREDIT_BUREAU_MON',\n       'AMT_REQ_CREDIT_BUREAU_QRT', 'AMT_REQ_CREDIT_BUREAU_YEAR']\ncombined_df.groupby(\"TARGET\")[cols].max().transpose().plot(kind=\"barh\",\n                                                                 figsize=(10,5),width=.8)\nplt.title(\"Maximum enquries made by defaulters and repayers\")\ncombined_df.groupby(\"TARGET\")[cols].mean().transpose().plot(kind=\"barh\",\n                                                                  figsize=(10,5),width=.8)\nplt.title(\"average enquries made by defaulters and repayers\")\ncombined_df.groupby(\"TARGET\")[cols].std().transpose().plot(kind=\"barh\",\n                                                                 figsize=(10,5),width=.8)\nplt.title(\"standard deviation in enquries made by defaulters and repayers\")\nplt.show()","2e8e185a":"cnts = combined_df[\"NAME_CONTRACT_TYPE_y\"].value_counts()\nimport squarify\nplt.figure(figsize=(8,6))\nsquarify.plot(cnts.values,label=cnts.keys(),value=cnts.values,linewidth=2,edgecolor=\"k\",alpha=.8,color=sns.color_palette(\"Set1\"))\nplt.axis(\"off\")\nplt.title(\"Contaract types collected from previous applications\")\nplt.show()","a2c75eb7":"plt.figure(figsize=(20,20))\nplt.subplot(211)\nax = sns.kdeplot(combined_df[\"AMT_APPLICATION\"],color=\"b\",linewidth=3)\nax = sns.kdeplot(combined_df[combined_df[\"AMT_CREDIT_y\"].notnull()][\"AMT_CREDIT_y\"],color=\"r\",linewidth=3)\nplt.axvline(combined_df[combined_df[\"AMT_CREDIT_y\"].notnull()][\"AMT_CREDIT_y\"].mean(),color=\"r\",linestyle=\"dashed\",label=\"AMT_APPLICATION_MEAN\")\nplt.axvline(combined_df[\"AMT_APPLICATION\"].mean(),color=\"b\",linestyle=\"dashed\",label=\"AMT_APPLICATION_MEAN\")\nplt.legend(loc=\"best\")\nplt.title(\"Previous loan amounts applied and loan amounts credited.\")\nax.set_facecolor(\"k\")\n\nplt.subplot(212)\ndiff = (combined_df[\"AMT_CREDIT_y\"] - combined_df[\"AMT_APPLICATION\"]).reset_index()\ndiff = diff[diff[0].notnull()]\nax1 = sns.kdeplot(diff[0],color=\"g\",linewidth=3,label = \"difference in amount requested by client and amount credited\")\nplt.axvline(diff[0].mean(),color=\"white\",linestyle=\"dashed\",label = \"mean\")\nplt.title(\"difference in amount requested by client and amount credited\")\nax1.legend(loc=\"best\")\nax1.set_facecolor(\"k\")","c6fa60f1":"mn = combined_df.groupby(\"NAME_CONTRACT_TYPE_y\")[[\"AMT_APPLICATION\",\"AMT_CREDIT_y\"]].mean().stack().reset_index()\ntt = combined_df.groupby(\"NAME_CONTRACT_TYPE_y\")[[\"AMT_APPLICATION\",\"AMT_CREDIT_y\"]].sum().stack().reset_index()\nfig = plt.figure(figsize=(10,13))\nfig.set_facecolor(\"ghostwhite\")\nplt.subplot(211)\nax = sns.barplot(0,\"NAME_CONTRACT_TYPE_y\",data=mn[:6],hue=\"level_1\",palette=\"inferno\")\nax.set_facecolor(\"k\")\nax.set_xlabel(\"average amounts\")\nax.set_title(\"Average amounts by contract types\")\n\nplt.subplot(212)\nax1 = sns.barplot(0,\"NAME_CONTRACT_TYPE_y\",data=tt[:6],hue=\"level_1\",palette=\"magma\")\nax1.set_facecolor(\"k\")\nax1.set_xlabel(\"total amounts\")\nax1.set_title(\"total amounts by contract types\")\nplt.subplots_adjust(hspace = .2)\nplt.show()","87d7aa92":"plt.figure(figsize=(14,5))\nplt.subplot(121)\ncombined_df.groupby(\"NAME_CONTRACT_TYPE_y\")[\"AMT_ANNUITY_y\"].sum().plot(kind=\"bar\")\nplt.xticks(rotation=0)\nplt.title(\"Total annuity amount by contract types in previous applications\")\nplt.subplot(122)\ncombined_df.groupby(\"NAME_CONTRACT_TYPE_y\")[\"AMT_ANNUITY_y\"].mean().plot(kind=\"bar\")\nplt.title(\"average annuity amount by contract types in previous applications\")\nplt.xticks(rotation=0)\nplt.show()","cb943e5c":"ax = pd.crosstab(combined_df[\"NAME_CONTRACT_TYPE_y\"],combined_df[\"NAME_CONTRACT_STATUS\"]).plot(kind=\"barh\",figsize=(10,7),stacked=True)\nplt.xticks(rotation =0)\nplt.ylabel(\"count\")\nplt.title(\"Count of application status by application type\")\nax.set_facecolor(\"k\")","51eeb86d":"hr = pd.crosstab(combined_df[\"WEEKDAY_APPR_PROCESS_START_x\"],combined_df[\"NAME_CONTRACT_STATUS\"]).stack().reset_index()\nplt.figure(figsize=(12,8))\nax = sns.pointplot(hr[\"WEEKDAY_APPR_PROCESS_START_x\"],hr[0],hue=hr[\"NAME_CONTRACT_STATUS\"],palette=[\"g\",\"r\",\"b\",\"orange\"],scale=1)\nax.set_facecolor(\"k\")\nax.set_ylabel(\"count\")\nax.set_title(\"Contract status by weekdays\")\nplt.grid(True,alpha=.2)","2ea0db80":"hr = pd.crosstab(combined_df[\"HOUR_APPR_PROCESS_START_x\"],combined_df[\"NAME_CONTRACT_STATUS\"]).stack().reset_index()\nplt.figure(figsize=(12,8))\nax = sns.pointplot(hr[\"HOUR_APPR_PROCESS_START_x\"],hr[0],hue=hr[\"NAME_CONTRACT_STATUS\"],palette=[\"g\",\"r\",\"b\",\"orange\"],scale=1)\nax.set_facecolor(\"k\")\nax.set_ylabel(\"count\")\nax.set_title(\"Contract status by day hours.\")\nplt.grid(True,alpha=.2)","de8216ed":"hr = pd.crosstab(combined_df[\"HOUR_APPR_PROCESS_START_x\"],combined_df[\"WEEKDAY_APPR_PROCESS_START_x\"]).stack().reset_index()\nplt.figure(figsize=(12,8))\nax = sns.pointplot(hr[\"HOUR_APPR_PROCESS_START_x\"],hr[0],hue=hr[\"WEEKDAY_APPR_PROCESS_START_x\"],palette=[\"g\",\"r\",\"b\",\"orange\"],scale=1)\nax.set_facecolor(\"k\")\nax.set_ylabel(\"count\")\nax.set_title(\"Peak hours for week days\")\nplt.grid(True,alpha=.2)","78b0b594":"combined_df[[\"NAME_CASH_LOAN_PURPOSE\",\"NAME_CONTRACT_STATUS\"]]\npurpose = pd.crosstab(combined_df[\"NAME_CASH_LOAN_PURPOSE\"],combined_df[\"NAME_CONTRACT_STATUS\"])\npurpose[\"a\"] = (purpose[\"Approved\"]*100)\/(purpose[\"Approved\"]+purpose[\"Canceled\"]+purpose[\"Refused\"]+purpose[\"Unused offer\"])\npurpose[\"c\"] = (purpose[\"Canceled\"]*100)\/(purpose[\"Approved\"]+purpose[\"Canceled\"]+purpose[\"Refused\"]+purpose[\"Unused offer\"])\npurpose[\"r\"] = (purpose[\"Refused\"]*100)\/(purpose[\"Approved\"]+purpose[\"Canceled\"]+purpose[\"Refused\"]+purpose[\"Unused offer\"])\npurpose[\"u\"] = (purpose[\"Unused offer\"]*100)\/(purpose[\"Approved\"]+purpose[\"Canceled\"]+purpose[\"Refused\"]+purpose[\"Unused offer\"])\npurpose_new = purpose[[\"a\",\"c\",\"r\",\"u\"]]\npurpose_new = purpose_new.stack().reset_index()\npurpose_new[\"NAME_CONTRACT_STATUS\"] = purpose_new[\"NAME_CONTRACT_STATUS\"].replace({\"a\":\"accepted_percentage\",\"c\":\"cancelled_percentage\",\n                                                               \"r\":\"refused_percentage\",\"u\":\"unused_percentage\"})\n\nlst = purpose_new[\"NAME_CONTRACT_STATUS\"].unique().tolist()\nlength = len(lst)\ncs = [\"lime\",\"orange\",\"r\",\"b\"]\n\nfig = plt.figure(figsize=(14,18))\nfig.set_facecolor(\"lightgrey\")\nfor i,j,k in itertools.zip_longest(lst,range(length),cs):\n    plt.subplot(2,2,j+1)\n    dat = purpose_new[purpose_new[\"NAME_CONTRACT_STATUS\"] == i]\n    ax = sns.barplot(0,\"NAME_CASH_LOAN_PURPOSE\",data=dat.sort_values(by=0,ascending=False),color=k)\n    plt.ylabel(\"\")\n    plt.xlabel(\"percentage\")\n    plt.title(i+\" by purpose\")\n    plt.subplots_adjust(wspace = .7)\n    ax.set_facecolor(\"k\")","f9fec91b":"plt.figure(figsize=(13,6))\nsns.violinplot(y= combined_df[\"DAYS_DECISION\"],\n               x = combined_df[\"NAME_CONTRACT_STATUS\"],palette=[\"r\",\"g\",\"b\",\"y\"])\nplt.axhline(combined_df[combined_df[\"NAME_CONTRACT_STATUS\"] == \"Approved\"][\"DAYS_DECISION\"].mean(),\n            color=\"r\",linestyle=\"dashed\",label=\"accepted_average\")\nplt.axhline(combined_df[combined_df[\"NAME_CONTRACT_STATUS\"] == \"Refused\"][\"DAYS_DECISION\"].mean(),\n            color=\"g\",linestyle=\"dashed\",label=\"refused_average\")\nplt.axhline(combined_df[combined_df[\"NAME_CONTRACT_STATUS\"] == \"Cancelled\"][\"DAYS_DECISION\"].mean(),color=\"b\",\n            linestyle=\"dashed\",label=\"cancelled_average\")\nplt.axhline(combined_df[combined_df[\"NAME_CONTRACT_STATUS\"] == \"Unused offer\"][\"DAYS_DECISION\"].mean(),color=\"y\",\n            linestyle=\"dashed\",label=\"un used_average\")\nplt.legend(loc=\"best\")\n\nplt.title(\"Contract status relative to decision made about previous application.\")\nplt.show()","fd645edf":"plt.figure(figsize=(8,12))\nplt.subplot(211)\nrej = combined_df[\"CODE_REJECT_REASON\"].value_counts().reset_index()\nax = sns.barplot(\"CODE_REJECT_REASON\",\"index\",data=rej[:6],palette=\"husl\")\nfor i,j in enumerate(np.around((rej[\"CODE_REJECT_REASON\"][:6].values*100\/(rej[\"CODE_REJECT_REASON\"][:6].sum())))):\n    ax.text(.7,i,j,weight=\"bold\")\nplt.xlabel(\"percentage\")\nplt.ylabel(\"CODE_REJECT_REASON\")\nplt.title(\"Reasons for application rejections\")\n\nplt.subplot(212)\npay = combined_df[\"NAME_PAYMENT_TYPE\"].value_counts().reset_index()\nax1 = sns.barplot(\"NAME_PAYMENT_TYPE\",\"index\",data=pay,palette=\"husl\")\nfor i,j in enumerate(np.around((pay[\"NAME_PAYMENT_TYPE\"].values*100\/(pay[\"NAME_PAYMENT_TYPE\"].sum())))):\n    ax1.text(.7,i,j,weight=\"bold\")\nplt.xlabel(\"percentage\")\nplt.ylabel(\"NAME_PAYMENT_TYPE\")\nplt.title(\"Clients payment methods\")\nplt.subplots_adjust(hspace = .3)","ec5ee40d":"plt.figure(figsize=(20,20))\nplt.subplot(121)\ncombined_df[\"NAME_TYPE_SUITE_x\"].value_counts().plot.pie(autopct = \"%1.1f%%\",fontsize=12,\n                                                             colors = sns.color_palette(\"inferno\"),\n                                              wedgeprops={\"linewidth\":2,\"edgecolor\":\"white\"},shadow =True)\ncirc = plt.Circle((0,0),.7,color=\"white\")\nplt.gca().add_artist(circ)\nplt.title(\"NAME_TYPE_SUITE\")\n\nplt.subplot(122)\ncombined_df[\"NAME_CLIENT_TYPE\"].value_counts().plot.pie(autopct = \"%1.1f%%\",fontsize=12,\n                                                             colors = sns.color_palette(\"inferno\"),\n                                              wedgeprops={\"linewidth\":2,\"edgecolor\":\"white\"},shadow =True)\ncirc = plt.Circle((0,0),.7,color=\"white\")\nplt.gca().add_artist(circ)\nplt.title(\"NAME_CLIENT_TYPE\")\nplt.show()","85d35fd8":"goods = combined_df[\"NAME_GOODS_CATEGORY\"].value_counts().reset_index()\ngoods[\"percentage\"] = round(goods[\"NAME_GOODS_CATEGORY\"]*100\/goods[\"NAME_GOODS_CATEGORY\"].sum(),2)\nfig = plt.figure(figsize=(12,5))\nax = sns.pointplot(\"index\",\"percentage\",data=goods,color=\"yellow\")\nplt.xticks(rotation = 80)\nplt.xlabel(\"NAME_GOODS_CATEGORY\")\nplt.ylabel(\"percentage\")\nplt.title(\"popular goods for applying loans\")\nax.set_facecolor(\"k\")\nfig.set_facecolor('lightgrey')\n\n","3dc0bde7":"plt.figure(figsize=(20,20))\nplt.subplot(121)\ncombined_df[\"NAME_PORTFOLIO\"].value_counts().plot.pie(autopct = \"%1.1f%%\",fontsize=12,\n                                                             colors = sns.color_palette(\"prism\",5),\n                                              wedgeprops={\"linewidth\":2,\"edgecolor\":\"white\"},\n                                                               shadow =True)\nplt.title(\"previous applications portfolio\")\nplt.subplot(122)\ncombined_df[\"NAME_PRODUCT_TYPE\"].value_counts().plot.pie(autopct = \"%1.1f%%\",fontsize=12,\n                                                             colors = sns.color_palette(\"prism\",3),\n                                              wedgeprops={\"linewidth\":2,\"edgecolor\":\"white\"},\n                                                                  shadow =True)\nplt.title(\"previous applications product types\")\nplt.show()","83033fa0":"app = pd.crosstab(combined_df[\"CHANNEL_TYPE\"],combined_df[\"NAME_CONTRACT_STATUS\"])\napp1 = app\napp1[\"approval_rate\"] = app1[\"Approved\"]*100\/(app1[\"Approved\"]+app1[\"Refused\"]+app1[\"Canceled\"])\napp1[\"refused_rate\"]  = app1[\"Refused\"]*100\/(app1[\"Approved\"]+app1[\"Refused\"]+app1[\"Canceled\"])\napp1[\"cacelled_rate\"] = app1[\"Canceled\"]*100\/(app1[\"Approved\"]+app1[\"Refused\"]+app1[\"Canceled\"])\napp2 = app[[\"approval_rate\",\"refused_rate\",\"cacelled_rate\"]]\nax = app2.plot(kind=\"barh\",stacked=True,figsize=(10,7))\nax.set_facecolor(\"k\")\nax.set_xlabel(\"percentage\")\nax.set_title(\"approval,cancel and refusal rates by channel types\")\nplt.show()","e7e8d7b9":"fig = plt.figure(figsize=(13,5))\nplt.subplot(121)\nare = combined_df.groupby(\"SELLERPLACE_AREA\")[\"AMT_CREDIT_y\"].sum().reset_index()\nare = are.sort_values(by =\"AMT_CREDIT_y\",ascending = False)\nax = sns.barplot(y= \"AMT_CREDIT_y\",x =\"SELLERPLACE_AREA\",data=are[:15],color=\"r\")\nax.set_facecolor(\"k\")\nax.set_title(\"Highest amount credited seller place areas\")\n\nplt.subplot(122)\nsell = combined_df.groupby(\"NAME_SELLER_INDUSTRY\")[\"AMT_CREDIT_y\"].sum().reset_index().sort_values(by = \"AMT_CREDIT_y\",ascending = False)\nax1=sns.barplot(y = \"AMT_CREDIT_y\",x = \"NAME_SELLER_INDUSTRY\",data=sell,color=\"b\")\nax1.set_facecolor(\"k\")\nax1.set_title(\"Highest amount credited seller industrys\")\nplt.xticks(rotation=90)\nplt.subplots_adjust(wspace = .5)\nfig.set_facecolor(\"lightgrey\")","40c7b272":"plt.figure(figsize=(13,5))\nax = sns.countplot(combined_df[\"CNT_PAYMENT\"],palette=\"Set1\",order=combined_df[\"CNT_PAYMENT\"].value_counts().index)\nax.set_facecolor(\"k\")\nplt.xticks(rotation = 90)\nplt.title(\"popular terms of previous credit at application\")\nplt.show()","ad7dfd33":"plt.figure(figsize=(10,8))\nsns.countplot(y = combined_df[\"PRODUCT_COMBINATION\"],order=combined_df[\"PRODUCT_COMBINATION\"].value_counts().index)\nplt.title(\"Detailed product combination of the previous application -count\")\nplt.show()","a76e1310":"plt.figure(figsize=(12,6))\nplt.subplot(121)\ncombined_df[\"NFLAG_INSURED_ON_APPROVAL\"].value_counts().plot.pie(autopct = \"%1.1f%%\",fontsize=8,\n                                                             colors = sns.color_palette(\"prism\",4),\n                                              wedgeprops={\"linewidth\":2,\"edgecolor\":\"white\"},shadow =True)\ncirc = plt.Circle((0,0),.7,color=\"white\")\nplt.gca().add_artist(circ)\nplt.title(\"client requesting insurance\")\n\nplt.subplot(122)\ncombined_df[\"NAME_YIELD_GROUP\"].value_counts().plot.pie(autopct = \"%1.1f%%\",fontsize=8,\n                                                             colors = sns.color_palette(\"prism\",4),\n                                              wedgeprops={\"linewidth\":2,\"edgecolor\":\"white\"},shadow =True)\ncirc = plt.Circle((0,0),.7,color=\"white\")\nplt.gca().add_artist(circ)\nplt.title(\"interest rates\")\nplt.show()","0f9905c3":"cols = ['DAYS_FIRST_DRAWING', 'DAYS_FIRST_DUE', 'DAYS_LAST_DUE_1ST_VERSION','DAYS_LAST_DUE', 'DAYS_TERMINATION']\nplt.figure(figsize=(12,6))\nsns.heatmap(combined_df[cols].describe()[1:].transpose(),\n            annot=True,linewidth=2,linecolor=\"k\",cmap=sns.color_palette(\"inferno\"))\nplt.show()","36758627":"df_repayer = combined_df[combined_df['TARGET'] == 0]\ndf_defaulter = combined_df[combined_df['TARGET'] == 1]","62832dcb":"corrmat = df_repayer.corr() \ncorrdf = corrmat.where(np.triu(np.ones(corrmat.shape), k=1).astype(np.bool))\ncorrdf = corrdf.unstack().reset_index()\ncorrdf.columns = ['Var1', 'Var2', 'Correlation']\ncorrdf.dropna(subset = ['Correlation'], inplace = True)\ncorrdf['Correlation'] = round(corrdf['Correlation'], 2)\ncorrdf['Correlation'] = abs(corrdf['Correlation'])\ncorrdf.sort_values(by = 'Correlation', ascending = False).head(10)","56d8ddb7":"corrmat = df_defaulter.corr() \ncorrdf = corrmat.where(np.triu(np.ones(corrmat.shape), k=1).astype(np.bool))\ncorrdf = corrdf.unstack().reset_index()\ncorrdf.columns = ['Var1', 'Var2', 'Correlation']\ncorrdf.dropna(subset = ['Correlation'], inplace = True)\ncorrdf['Correlation'] = round(corrdf['Correlation'], 2)\ncorrdf['Correlation'] = abs(corrdf['Correlation'])\ncorrdf.sort_values(by = 'Correlation', ascending = False).head(10)","997f1d3a":"### Average Earnings by different professions and education types","3b878618":"\n## Comparing summary statistics between defaulters and non - defaulters for loan amounts.\n\n","c3a3bbe1":"### Point to infer from the graph\n\n\nConsumer loan applications are maximum followed by cash loan applications in previous loan.","b6b8e0a5":"\n## Top 10 Correlation Fields for Repayer","ff1af6e3":"## Average Income,credit,annuity & goods_price by gender","6513e086":"### Point to infer from the graph\n\nSUBPLOT 1 : Distribution of client owning a house or flat . 71% of clients own a flat or house .\n\nSUBPLOT 2 : Distribution of client owning a house or flat by gender . Out of total clients who own house 67% are female and 33% are male.","df1068e6":"### Annuity of previous application\n\nAMT_ANNUITY - Annuity of previous application","96911a73":"### Contract status by weekdays\n\nWEEKDAY_APPR_PROCESS_START - On which day of the week did the client apply for previous application","23fcdfcf":"\n#### Distribution in Client suite type & client type.\n\nNAME_TYPE_SUITE - Who accompanied client when applying for the previous application.\n\nNAME_CLIENT_TYPE - Was the client old or new client when applying for the previous application.\n\n","330aceac":"# Converting negative values to absolute values","607b3411":"\n### Popular terms of previous credit at application.\n\nCNT_PAYMENT - Term of previous credit at application of the previous application.","803b541e":"### Highest amount credited seller areas and industries.\n\nSELLERPLACE_AREA - Selling area of seller place of the previous application.\n\nNAME_SELLER_INDUSTRY - The industry of the seller.","09805d8f":"### Previous loan amounts applied and loan amounts credited.\n\nAMT_APPLICATION-For how much credit did client ask on the previous application.\n\nAMT_CREDIT-Final credit amount on the previous application. This differs from AMT_APPLICATION in a way that the AMT_APPLICATION is the amount for which the client initially applied for, but during our approval process he could have received different amount - AMT_CREDIT.","8bdec6df":"\n### Approval,canceled and refusal rates by channel types.\n\nCHANNEL_TYPE - Through which channel we acquired the client on the previous application.\n\nNAME_CONTRACT_STATUS- Contract status (approved, cancelled, ...) of previous application.\n\n","ee31d03c":"### Documents provided by the clients.\n\nFLAG_DOCUMENT - Did client provide documents.(1,0)","e6edafba":"## Top 10 Correlation Fields ","c738fb54":"### Point to infer from the graph\n\n#### Income of client -\n\n1 . Average income of clients who default and who do not are almost same.\n\n2 . Standard deviation in income of client who default is very high compared to who do not default.\n\n3 . Clients who default also has maximum income earnings\n\n#### Credit amount of the loan ,Loan annuity,Amount goods price -\n\n1 . Statistics between credit amounts,Loan annuity and Amount goods price given to cilents who default and who dont are almost similar.","ef7448be":"TARGET :Target variable (1 - client with payment difficulties: he\/she had late payment more than X days on at least one of the first Y installments of the loan in sample, 0 - all other cases)\n","5a85084a":"## Distribution of Number of children and family members of client by repayment status.\n\nCNT_CHILDREN - Number of children the client has.\n\nCNT_FAM_MEMBERS - How many family members does client have.","16ab96ad":"## Distribution of client owning a house or flat and by gender\n\nFLAG_OWN_REALTY - Flag if client owns a house or flat","5e1707e2":"\n### Count of application status by application type.\n\nNAME_CONTRACT_TYPE -Contract product type (Cash loan, consumer loan [POS] ,...) of the previous application.\n\nNAME_CONTRACT_STATUS -Contract status (approved, cancelled, ...) of previous application.","23633f08":"### Distribution of days employed for target variable.\n\nDAYS_EMPLOYED - How many days before the application for target variable the person started current employment","dd2e46ad":"# Distribution of Suite type\n\nNAME_TYPE_SUITE - Who was accompanying client when he was applying for the loan.","e11f9dca":"\n\n## Imbalace percentage","f103da2f":"\n### Distribution of Housing type by loan repayment status\n\nNAME_HOUSING_TYPE - What is the housing situation of the client (renting, living with parents, ...)","e0ffb712":"### Distribution in contact information provided by client\n\nFLAG_MOBIL - Did client provide mobile phone (1=YES, 0=NO)\n\nFLAG_EMP_PHONE - Did client provide work phone (1=YES, 0=NO)\n\nFLAG_WORK_PHONE - Did client provide home phone (1=YES, 0=NO)\n\nFLAG_CONT_MOBILE - Was mobile phone reachable (1=YES, 0=NO)\n\nFLAG_PHONE - Did client provide home phone (1=YES, 0=NO)\n\nFLAG_EMAIL - Did client provide email (1=YES, 0=NO)","700efc66":"### Point to infer from the graph\n\nOn average approved contract types have higher number of decision days compared to cancelled and refused contracts.","fa0fd41b":"### Point to infer from the graph\n\nMorning 10'o clock have maximum number of approvals.\n\nMorning 10'o clock have maximum number of refused and cancelled contracts.","5e66d530":"\n### Distribution normalized population of region where client lives by loan repayment status\n\nREGION_POPULATION_RELATIVE - Normalized population of region where client lives (higher number means the client lives in more populated region).","940fc59f":"### Contract status relative to decision made about previous application.\n\nDAYS_DECISION - Relative to current application when was the decision about previous application made.\n\n","746e15ac":"### Point to infer from the graph\n\nPercentage of males is 10% more in defaults than non defaulters.\n\nPercentage of Cash Loans is 3% more in defaults than Revolving Loans.","e6bdbd6c":"### Point to infer from the graph\n\nSUBPLOT 1 : Distribution of client owning a car. 34% of clients own a car .\n\nSUBPLOT 2 : Distribution of client owning a car by gender. Out of total clients who own car 57% are male and 43% are female.","8f21c5ef":"\n\n## Gender Distribution","502f257d":"### Point to infer from the graph\n\nPercentage of single people are more in defaulters than non defaulters.","f6cc3e9f":"## Distribution of Contract type by gender","59c23a0f":"### Point to infer from the graph\n\nCash loans is always prefered over Revolving loans by both genders","bc7b73c6":"\n## Distribution of contract type ,gender ,own car ,own house with respect to Repayment status(Target variable)","c3de4a05":"### Distribution client's social surroundings with observed and defaulted 30 DPD (days past due)\n\nOBS_30_CNT_SOCIAL_CIRCLE- How many observation of client's social surroundings with observable 30 DPD (days past due) default.\n\nDEF_30_CNT_SOCIAL_CIRCLE-How many observation of client's social surroundings defaulted on 30 DPD (days past due) .\n\nOBS_60_CNT_SOCIAL_CIRCLE - How many observation of client's social surroundings with observable 60 DPD (days past due) default.\n\nDEF_60_CNT_SOCIAL_CIRCLE - How many observation of client's social surroundings defaulted on 60 (days past due) DPD.","cf72640d":"### Point to infer from the graph\nIt's non balanced data","44f7433d":"### Point to infer from the graph\n\nAverage days of defaulters phone change is less than average days of repayers phone change.","943315c3":"### Peak hours for week days for applying loans.","10efa710":"### Distribution of registration days for target variable.\n\nDAYS_REGISTRATION How many days before the application did client change his registration","64151e8a":"### Contract status by hour of the day\n\nHOUR_APPR_PROCESS_START - Approximately at what day hour did the client apply for the previous application.\n\n","921126e7":"### Point to infer from the graph\n\nThe percentage of revolving loans and cash loans are 9% & 91%.","0371a21d":"### Point to infer from the graph\n8% out of total client population have difficulties in repaying loans.","6a93d7c4":"\n# Corelation between variables","5b1b0f67":"### Point to infer from the graph\n\nAverage clients age is comparatively less in non repayers than repayers in every aspect.\n\nYounger people tend to default more than elder people.","54da1673":"### Point to infer from the graph\n\nAround 87% of rejected applications the reason is XAP.\n\n67% of chose to pay through cash by bank for previous applications.","41c42b19":"\n### Client's age\n\nDAYS_BIRTH - Client's age in days at the time of application.","dc721618":"\n### Point to infer from the graph\nXNA ,Mobiles ,Computers and consumer electronics are popular goods for applying loans","a25a72f5":"### Number of days before application client changed phone .\n\nDAYS_LAST_PHONE_CHANGE - How many days before application did client change phone.","a38a90f7":"### Equiries to Credit Bureau about the client before application.\n\nAMT_REQ_CREDIT_BUREAU_HOUR - Number of enquiries to Credit Bureau about the client one hour before application.\n\nAMT_REQ_CREDIT_BUREAU_DAY - Number of enquiries to Credit Bureau about the client one day before application (excluding one hour before application).\n\nAMT_REQ_CREDIT_BUREAU_WEEK - Number of enquiries to Credit Bureau about the client one week before application (excluding one day before application).\n\nAMT_REQ_CREDIT_BUREAU_MON - Number of enquiries to Credit Bureau about the client one month before application (excluding one week before application).\n\nAMT_REQ_CREDIT_BUREAU_QRT - Number of enquiries to Credit Bureau about the client 3 month before application (excluding one month before application).\n\nAMT_REQ_CREDIT_BUREAU_YEAR - Number of enquiries to Credit Bureau about the client one day year (excluding last 3 months before application).","a700ebe9":"\n## Distribution of Target variable","20a53e00":"### Point to infer from the graph\n\nPopular term of previous credit are 6months ,10months ,1year ,2years & 3 years.","d9044f54":"### Point to infer from the graph\n\nChannel types like Stone ,regional and country-wide have maximum approval rates.\n\nChannel of coorporate sales have maximum refusal rate.\n\nCredit-cash centres and Contact centres have maximum cancellation rates.","55d14293":"### Distribution of amount data\n\nAMT_INCOME_TOTAL - Income of the client\n\nAMT_CREDIT - Credit amount of the loan\n\nAMT_ANNUITY - Loan annuity\n\nAMT_GOODS_PRICE - For consumer loans it is the price of the goods for which the loan is given","3ef6e9cc":"\n### Contract types collected from previous applications\n\nNAME_CONTRACT_TYPE Contract product type (Cash loan, consumer loan [POS] ,...) of the previous application.\n","6eab8604":"### Distribution of client income type\n\nNAME_INCOME_TYPE Clients income type (businessman, working, maternity leave,\u2026)","a0089e70":"### Point to infer from the graph\n\nPercentage of defaulters are less in 1-rated regions compared to repayers.\n\nPercentage of defaulters are more in 3-rated regions compared to repayers.","280c90cc":"\n### Distribution of Education type by loan repayment status\n\nNAME_FAMILY_STATUS - Family status of the client","cf7c2491":"\n### Percentage of applications accepted,cancelled,refused and unused for different loan purposes.\n\nNAME_CASH_LOAN_PURPOSE - Purpose of the cash loan.\n\nNAME_CONTRACT_STATUS - Contract status (approved, cancelled, ...) of previous application.","20a420e8":"### Point to infer from the graph\n\nClients who default have proportionally 8% less higher education compared to clients who do not default.","ab97e981":"### Point to infer from the graph\nPurposes like XAP ,electronic eqipment ,everey day expences and education have maximum loan acceptance.\n\nLoan puposes like Hobby, payment of other loans ,refusal to name goal ,buying new home or car have most refusals.\n\n37.5% of XNA purpose loans are cancalled.","e93698af":"\n### Frequency distribution of intrest rates and client insurance requests\n\nNAME_YIELD_GROUP - Grouped interest rate into small medium and high of the previous application.\n\nNFLAG_INSURED_ON_APPROVAL - Did the client requested insurance during the previous application.","cc6c8237":"\n### Distribution in organization types for repayers and defaulters\n\nORGANIZATION_TYPE - Type of organization where client works.","92a24232":"### Point to infer from the graph\n\nOrganizations like Business Entity Type 3,Construction,Self-employed percentage of defaulters are higher than repayers.","1d5e3e66":"## Distribution in Contract types \n\nNAME_CONTRACT_TYPE : Identification if loan is cash , consumer or revolving","1bfb0a11":"### Total and average amounts applied and credited in previous applications\n\nAMT_APPLICATION-For how much credit did client ask on the previous application. >AMT_CREDIT-Final credit amount on the previous application. This differs from AMT_APPLICATION in a way that the AMT_APPLICATION is the amount for which the client.","7f7827bc":"\n### Distribution of registration days for target variable.\n\nREGION_RATING_CLIENT - Home credit rating of the region where client lives (1,2,3).\n\nREGION_RATING_CLIENT_W_CITY - Home credit rating of the region where client lives with taking city into account (1,2,3). Percentage of defaulters are less in 1-rated regions compared to repayers.","7b5d7f8b":"### Point to infer from the graph\n\nFemale : 66% \n\nMale : 34% ","84f1884c":"### Point to infer from the graph\nAbout 81.2% clients are un-accompained when applying for loans.\n\n55.4% clients are old clients","278d9184":"## Scatter plot between credit amount and annuity amount","bd1c5913":"### Days variables - Relative to application date of current application\n\nDAYS_FIRST_DRAWING - Relative to application date of current application when was the first disbursement of the previous application.\n\nDAYS_FIRST_DUE - Relative to application date of current application when was the first due supposed to be of the previous application.\n\nDAYS_LAST_DUE_1ST_VERSION - Relative to application date of current application when was the first due of the previous application.\n\nDAYS_LAST_DUE -Relative to application date of current application when was the last due date of the previous application.\n\nDAYS_TERMINATION - Relative to application date of current application when was the expected termination of the previous application.","342c2e5f":"\n\n### Client payment methods & reasons for application rejections\n\nNAME_PAYMENT_TYPE - Payment method that client chose to pay for the previous application.\n\nCODE_REJECT_REASON - Why was the previous application rejected.\n\n","44c2a213":"\n## Popular goods for applying loans\n\nNAME_GOODS_CATEGORY - What kind of goods did the client apply for in the previous application.\n","542d71e3":"### Point to infer from the graph\n\nIn High population density regions people are less likely to default on loans.","2a23aa90":"### Detailed product combination of the previous application","61f99ee9":"## Pair Plot between amount variables\n\nAMT_INCOME_TOTAL - Income of the client\n\nAMT_CREDIT - Credit amount of the loan\n\nAMT_ANNUITY - Loan annuity\n\nAMT_GOODS_PRICE - For consumer loans it is the price of the goods for which the loan is given","3c19ce82":"\n### Distribution of Education type by loan repayment status\n\nNAME_EDUCATION_TYPE Level of highest education the client achieved..","b9e9e09a":"## Distribution of client owning a car and by gender\n\nFLAG_OWN_CAR Flag if the client owns a car .","1350ac07":"1st file contains detailed analysis (EDA) on application_data to identify the important features which help us to identify the defaulters\n\nPart 1 Solution is available at https:\/\/www.kaggle.com\/gauravduttakiit\/risk-analytics-in-banking-financial-services-1","e5eed8ea":"### Point to infer from the graph\n\nConsumer loan applications are most approved loans and cash loans are most cancelled and refused loans."}}