{"cell_type":{"5d15ba0a":"code","ad74cb3d":"code","54ebe592":"code","58649764":"code","2a1cb84f":"code","8bfcec1b":"code","7a5598c3":"code","bf370462":"code","3133ff78":"code","f7ff7367":"code","eb304d94":"code","d9d7a20e":"code","8634405d":"code","3ad30968":"code","907267ff":"code","1fa1c51c":"code","ead3b91e":"code","5dbbf99e":"code","b73eb043":"code","975a8ed4":"code","a2b18927":"code","079a71d0":"code","4c634196":"code","aab62ce3":"code","91cc994e":"code","eda674d1":"code","8c91f8fa":"code","5caee8fd":"code","38befe3b":"code","554558fe":"code","8bcd2833":"code","c3ef76a8":"code","20624b35":"code","a5e93895":"code","c50366a6":"code","ca616f1f":"code","4bbc6885":"code","fae80f55":"code","4c789b63":"code","790f88fb":"code","c691462c":"code","10600420":"code","097accb2":"code","f4240cf3":"code","145cd910":"code","bbea4689":"code","beaa797a":"code","8e8ace56":"code","8648a523":"code","3c144973":"code","ae3e507f":"code","8882ad88":"code","b5d5ab61":"code","c023098b":"code","a0dd123a":"code","f4029a2a":"code","59ca3080":"code","baefa323":"code","c741cfb5":"code","bdf022cd":"code","d62b0d03":"code","176c8b35":"code","4f76a63a":"code","118b329b":"code","7f01739a":"code","2ae089ab":"code","0ec640d0":"code","7ef45187":"code","5e3d7fdc":"code","dc1616bb":"code","b127a857":"code","e81f6e8c":"code","dbf2abf8":"code","0bd43a60":"code","6d8254fc":"code","785e9f4a":"code","f8126325":"code","ac82cea7":"code","9069f5f9":"code","41ef44f1":"code","d76bc50f":"code","71347063":"code","9403b14f":"code","42d183bc":"markdown","19e72fd5":"markdown","b400c9d1":"markdown","f8865701":"markdown","136c8d0c":"markdown","f96f1b23":"markdown","2b7da738":"markdown","28e00644":"markdown","46f872ab":"markdown","4303f96b":"markdown","ade4ac1b":"markdown"},"source":{"5d15ba0a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ad74cb3d":"df_train=pd.read_csv('..\/input\/titanic\/train.csv')\ndf_test=pd.read_csv('..\/input\/titanic\/test.csv')\nSubmission=pd.read_csv('..\/input\/titanic\/gender_submission.csv')","54ebe592":"df_train.head(10)","58649764":"df_test.head(10)","2a1cb84f":"df_train.info()","8bfcec1b":"df_test.info()","7a5598c3":"df_train.describe()","bf370462":"df_test.describe()","3133ff78":"df_train.nunique()","f7ff7367":"df_test.nunique()","eb304d94":"df_train = df_train.iloc[:, :12]\ndf_train","d9d7a20e":"df_test = df_test.iloc[:, :12]\ndf_test","8634405d":"df_train.isnull().sum()","3ad30968":"df_test.isnull().sum()","907267ff":"df_train.drop(\"Cabin\", axis=1, inplace=True)","1fa1c51c":"df_test.drop(\"Cabin\", axis=1, inplace=True)","ead3b91e":"df_train.head()","5dbbf99e":"df_test.head(10)","b73eb043":"df_train['Age'] = df_train['Age'].fillna(df_train['Age'].median())\ndf_test['Age'] = df_test['Age'].fillna(df_test['Age'].median())","975a8ed4":"df_train.head(10)","a2b18927":"df_test.head(10)","079a71d0":"df_test.isnull().sum()","4c634196":"df_train.shape","aab62ce3":"df_test.shape","91cc994e":"df_train = df_train.dropna()\ndf_train = df_train.reset_index(drop = True)\ndf_train","eda674d1":"df_train.shape","8c91f8fa":"df_train.isnull().sum()","5caee8fd":"df_train['Embarked'].replace({'S':1, 'C':2, 'Q':3}, inplace=True)\ndf_train['Sex'].replace({'male':0, 'female':1}, inplace=True)","38befe3b":"df_train.head(10)","554558fe":"df_train.drop(['Ticket','PassengerId','Name',\"Fare\"],axis=1,inplace=True)","8bcd2833":"df_train.head()","c3ef76a8":"df_test['Embarked'].replace({'S':1, 'C':2, 'Q':3}, inplace=True)\ndf_test['Sex'].replace({'male':0, 'female':1}, inplace=True)","20624b35":"df_test.head(10)","a5e93895":"df_test.drop(['Ticket','PassengerId','Name',\"Fare\"],axis=1,inplace=True)\ndf_test.head()","c50366a6":"X = df_train.drop(['Survived'], axis='columns')","ca616f1f":"y = df_train['Survived']","4bbc6885":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X, y, test_size=0.2, random_state=42)","fae80f55":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import accuracy_score, roc_auc_score, mean_absolute_error, mean_squared_error, r2_score, confusion_matrix, classification_report \nfrom sklearn.metrics import plot_confusion_matrix, precision_recall_curve, plot_precision_recall_curve, plot_roc_curve","4c789b63":"model_lr = LinearRegression()\nmodel_lr.fit(X_train, y_train)\npred = model_lr.predict(X_test)\nlr_acc1 = mean_absolute_error(pred, y_test)\nlr_acc2 = mean_squared_error(pred, y_test)\nlr_acc3 = r2_score(pred, y_test)\nlr_acc4 = accuracy_score(pred.round(), y_test)\nprint('mean_absolute_error :', lr_acc1)\nprint('mean_squared_error :', lr_acc2)\nprint('r2_score :', lr_acc3)\nprint('accuracy_score :', lr_acc4)","790f88fb":"print('Coefficients: \\n', model_lr.coef_)","c691462c":"print('Variance score: %.2f' % model_lr.score(X_test, y_test))","10600420":"from sklearn.linear_model import LogisticRegression","097accb2":"model_log = LogisticRegression()\nmodel_log.fit(X_train, y_train)\npred2 = model_log.predict(X_test)\nlog_acc1 = accuracy_score(pred2.round(), y_test)\nlog_acc2 = roc_auc_score(pred2.round(), y_test)\nprint('accuracy_score :',log_acc1)\nprint('roc_auc_score :',log_acc2)","f4240cf3":"print('Coefficients: \\n', model_log.coef_)","145cd910":"confusion_matrix(pred2.round(), y_test)","bbea4689":"plot_confusion_matrix(model_log, X_test, y_test)","beaa797a":"print(classification_report(pred2.round(), y_test))","8e8ace56":"plot_precision_recall_curve(model_log, X_test, y_test)","8648a523":"plot_roc_curve(model_log, X_test, y_test)","3c144973":"from sklearn.neighbors import KNeighborsClassifier","ae3e507f":"model_knn = KNeighborsClassifier(n_neighbors=9)\nmodel_knn.fit(X_train, y_train)\npred_k3 = model_knn.predict(X_test)\nknn_acc = accuracy_score(pred_k3, y_test)\nprint('accuracy_score :',knn_acc)","8882ad88":"print(classification_report(y_test, pred_k3))","b5d5ab61":"df_train['Survived'].value_counts()","c023098b":"test_error_rates = []\n\nfor k in range(1, 30):\n    knn_model = KNeighborsClassifier(n_neighbors=k)\n    knn_model.fit(X_train, y_train)\n    pred_k4 = knn_model.predict(X_test)\n    test_error = 1 - accuracy_score(pred_k4, y_test)\n    test_error_rates.append(test_error)","a0dd123a":"print('test_error_rates :', test_error_rates)","f4029a2a":"plt.plot(range(1, 30), test_error_rates)\nplt.ylabel('ERROE RATE')\nplt.xlabel('K NN')","59ca3080":"knn_acc_elbow = accuracy_score(pred_k4, y_test)\nprint('accuracy_score :',knn_acc_elbow)","baefa323":"print(classification_report(y_test, pred_k4))","c741cfb5":"from sklearn.preprocessing import StandardScaler","bdf022cd":"scaler = StandardScaler()","d62b0d03":"knn = KNeighborsClassifier()","176c8b35":"knn.get_params().keys()","4f76a63a":"operations = [('scaler', scaler), ('knn', knn)]","118b329b":"from sklearn.pipeline import Pipeline","7f01739a":"pipe = Pipeline(operations)","2ae089ab":"from sklearn.model_selection import GridSearchCV","0ec640d0":"k_values = list(range(1, 20))\nk_values","7ef45187":"param_grid = {'knn__n_neighbors': k_values}","5e3d7fdc":"full_cv_classifier = GridSearchCV(pipe, param_grid, cv=5,\n                                 scoring='accuracy')","dc1616bb":"full_cv_classifier.fit(X_train, y_train)","b127a857":"full_cv_classifier.best_estimator_.get_params()","e81f6e8c":"full_pred = full_cv_classifier.predict(X_test)","dbf2abf8":"knn_acc_gridsearchCV = accuracy_score(full_pred, y_test)\nprint('accuracy_score :',knn_acc_gridsearchCV)","0bd43a60":"confusion_matrix(y_test, full_pred)","6d8254fc":"plot_confusion_matrix(full_cv_classifier, X_test, y_test)","785e9f4a":"print(classification_report(y_test, full_pred))","f8126325":"print(\"Accuracy of Linear Regression : \",lr_acc4)\nprint(\"Accuracy of Logistic Regression : \",log_acc1)\nprint(\"Accuracy of KNN Classifier : \",knn_acc)\nprint(\"Accuracy of KNN Classifier using elbow : \",knn_acc_elbow)\nprint(\"Accuracy of KNN Classifier using gridsearchCV : \",knn_acc_gridsearchCV)\nmodels_acc=[lr_acc4,log_acc1,knn_acc,knn_acc_elbow,knn_acc_gridsearchCV]\nnames_of_models=['Linear Regression','Logistic Regression','KNN Classifier','KNN Classifier using elbow', 'KNN Classifier using gridsearchCV']\nsns.barplot(y=names_of_models,x=models_acc)\nplt.gcf().set_size_inches(8,4)\nplt.xlim([0.6,1.0])","ac82cea7":"full_cv_classifier.fit(X, y)","9069f5f9":"df_test","41ef44f1":"final_pred = full_cv_classifier.predict(df_test)","d76bc50f":"submission=pd.DataFrame({\"PassengerId\": Submission[\"PassengerId\"],\"Survived\":final_pred})","71347063":"submission","9403b14f":"submission.to_csv('submission.csv',index=False)","42d183bc":"# EDA","19e72fd5":"KNN Classifies Using GridSearchCV Performs Better with an Accuracy of 80%","b400c9d1":"# KNN with Evaluation","f8865701":"# Data preprocessing","136c8d0c":"# Linear Regression with Evaluation","f96f1b23":"# Using Elbow method to choose the resanoable K-Value","2b7da738":"# Model Building","28e00644":"# Logistic Regression with Evaluation","46f872ab":"# Import the Dependencies","4303f96b":"# Using GridSearchCV","ade4ac1b":"# Load the Dataset"}}