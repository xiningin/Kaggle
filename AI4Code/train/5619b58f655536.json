{"cell_type":{"b47a97a2":"code","fb673ba4":"code","608b7bcf":"code","bca0334a":"code","f557c7ae":"code","bdc81a7d":"code","c4fc6d6b":"code","62b0dce9":"code","17baff10":"code","f316cb05":"code","8486ba1b":"code","f077260b":"code","9ec476b6":"code","dc6e0b4c":"code","e515b55e":"code","f3808dfb":"code","98a81a25":"code","7badd858":"code","c19c0fc6":"code","29620833":"code","90c5b7c6":"code","fa836b81":"code","7aebc735":"code","55f28b91":"code","995ec40d":"code","075b6317":"code","c43bd766":"code","432343c8":"code","9803cfcd":"code","cfabd3b1":"code","9fc4fb14":"code","db9cd75f":"code","4a14bf02":"code","6913b7f7":"code","a7a067c8":"code","3a65bf97":"code","a7b209ad":"code","73f7bf98":"code","1cf0e604":"code","6bc6cf76":"code","2c9ea10b":"code","cbb08394":"code","ab9da350":"code","4082ea84":"code","35622c27":"code","ff4a704b":"code","c311c8b5":"code","947f62c9":"code","3ee58e19":"code","20b6c840":"code","b735acdd":"code","ddd017da":"code","a3ba47b9":"markdown","038c81eb":"markdown","f42f76a7":"markdown","f09bb515":"markdown","d5885535":"markdown","0393db07":"markdown"},"source":{"b47a97a2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fb673ba4":"data = pd.read_csv('\/kaggle\/input\/fraudulent-claim-on-cars-physical-damage\/training data\/training data.csv')\ndata","608b7bcf":"\ndata.isnull().sum()","bca0334a":"data.claim_est_payout=data.claim_est_payout.fillna(0)\ndata.witness_present_ind=data.witness_present_ind.fillna(0)\ndata.age_of_vehicle=data.age_of_vehicle.fillna(0)\ndata.marital_status=data.marital_status.fillna(0)","f557c7ae":"data.isnull().sum()","bdc81a7d":"data[['claim_day_of_week','accident_site']]","c4fc6d6b":"data.dtypes","62b0dce9":"import pandas as pd","17baff10":"data.columns","f316cb05":"x = data.drop(columns = ['policy_report_filed_ind'])","8486ba1b":"x.claim_date=pd.to_datetime(x.claim_date,dayfirst=False)","f077260b":"x[['month']] = pd.DataFrame(x.claim_date.dt.month)\nx[['day']] = pd.DataFrame(x.claim_date.dt.day)\nx[['year']] = pd.DataFrame(x.claim_date.dt.year)","9ec476b6":"x.head()","dc6e0b4c":"x = data.drop(columns = ['claim_date'])\n\nx.head()","e515b55e":"y = data[['policy_report_filed_ind']]\n\ny.head()","f3808dfb":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3)","98a81a25":"x.head()","7badd858":"nom_cols =[2,8,10,11,15,21]\nord_cols = [19]\nnum_cols=[0,3,4,5,6,7,9,12,13,14,16,17,18,20,22]\n#Kbin_cols=[0,1,4]\nbinarizer_cols=[1]","c19c0fc6":"from sklearn.preprocessing import OneHotEncoder, OrdinalEncoder,KBinsDiscretizer,Binarizer\nfrom sklearn.compose import make_column_transformer\nfrom sklearn import set_config\nfrom sklearn.preprocessing import StandardScaler\n\ntrans = make_column_transformer((OneHotEncoder(sparse=False),nom_cols),\n                                 (OrdinalEncoder(), ord_cols),(StandardScaler(),num_cols)\n                                 ,(Binarizer(threshold=55),binarizer_cols),remainder= 'passthrough')\nset_config(display= 'diagram')\ntrans","29620833":"from sklearn.neighbors import KNeighborsClassifier\nalgorithm27 = KNeighborsClassifier(5) #\nalgorithm27","90c5b7c6":"from sklearn.pipeline import make_pipeline\npipe14 = make_pipeline(trans,algorithm27)\npipe14","fa836b81":"pipe14.fit(x_train,y_train)","7aebc735":"pred27=pipe14.predict(x_test)\npred27","55f28b91":"from sklearn.metrics import accuracy_score\naccuracy_score(pred27,y_test)*100","995ec40d":"from sklearn.svm import SVC\nmodel1=SVC(kernel='linear')\npipe_1 = make_pipeline(trans,algorithm27)\npipe_1\npipe_1.fit(x_train,y_train)\npred_1=pipe14.predict(x_test)\naccuracy_score(pred_1,y_test)*100","075b6317":"from imblearn.over_sampling import RandomOverSampler\nover= RandomOverSampler()\no_x , o_y = over.fit_resample(x,y)\no_y.value_counts()","c43bd766":"from imblearn.over_sampling import SMOTE\nover= RandomOverSampler()\no_x , o_y = over.fit_resample(x,y)\no_y.value_counts()","432343c8":"from imblearn.pipeline import make_pipeline\ns = SMOTE()\nn_pipe = make_pipeline(trans,s,algorithm27)\nn_pipe","9803cfcd":"accuracy_score(pred27,y_test)*100","cfabd3b1":"from sklearn.linear_model import LogisticRegression as lr\nalgorithm_2 = lr(solver='liblinear')\npipe_2 = make_pipeline(trans,algorithm_2)\npipe_2","9fc4fb14":"pipe_2.fit(x_train,y_train)","db9cd75f":"pred_2 = pipe_2.predict(x_test)\npred_2","4a14bf02":"accuracy_score(pred_1,y_test)*100","6913b7f7":"x.head()","a7a067c8":"from sklearn.preprocessing import StandardScaler \nimport seaborn as sns\ns=StandardScaler()\nx.vehicle_price=pd.DataFrame(s.fit_transform(x[['vehicle_price']]))\nsns.distplot(x.vehicle_price)","3a65bf97":"data.annual_income.min()","a7b209ad":"data.annual_income.max()","73f7bf98":"from sklearn.preprocessing import MinMaxScaler\nm= MinMaxScaler()\ndata['annual_income']=m.fit_transform(data[['annual_income']])","1cf0e604":"data.annual_income.min()","6bc6cf76":"data.annual_income.max()","2c9ea10b":"x.head()","cbb08394":"x[(x.gender=='M')&(x.channel=='Online')&(x.living_status=='Rent')].count()[1]","ab9da350":"x[(x.gender=='M')&(x.channel=='Online')&(x.living_status=='Rent')].count()","4082ea84":"x[(x.fraud==1)].mean()[4]","35622c27":"x[(x.gender=='F')&(x.fraud==1)].count()","ff4a704b":"data[(data.fraud==1)].groupby('gender').count().iloc[:,0]","c311c8b5":"data[(data.fraud==1)].groupby('marital_status').count()","947f62c9":"x.head(2)","3ee58e19":"data[data.channel==\"Broker\"].groupby('vehicle_category').mean()[[\"claim_est_payout\"]]>4999","20b6c840":"data[data.fraud==1].gender.value_counts(normalize=True)[0]","b735acdd":"data.head(2)","ddd017da":"data[data.fraud==1].groupby('gender').count().iloc[:1,0]","a3ba47b9":"**1.How many males who ordered online live on rent?**","038c81eb":"**2.What is the average annual income of fraudsters?**","f42f76a7":"**3.which gender has done most fraud?**","f09bb515":"**What percentage of men and women are fraud?**","d5885535":"**Married or unmarried fraud more ?**","0393db07":"**Which vehicle category taken from broker have average claim estimate payout more than 7000?**"}}