{"cell_type":{"292ca8b5":"code","34344ce5":"code","f42c234d":"code","1d60c786":"code","5e29c372":"code","38e9917d":"code","58de6a61":"code","a74a9049":"code","3f27868c":"code","d19afcd5":"code","6d429bdb":"code","06329b4d":"code","c91df636":"code","d999c58b":"code","8966dbb3":"code","722b6e8b":"code","3af0296b":"code","537264a1":"code","ded994b9":"code","5b1beff9":"code","248fdeee":"code","1c28306a":"code","7ee219c0":"code","724c3917":"code","ed26c6da":"code","7ccec5c3":"code","7e4a1de0":"code","e70f1b3d":"code","d00e77f1":"code","22e1ba36":"code","7a6141a9":"code","ca3daff9":"code","36400ad0":"code","a9ffb7e2":"markdown","67941bb5":"markdown","16ecad7b":"markdown","0eebcd66":"markdown","3f124d57":"markdown","e12492d5":"markdown","f5be5780":"markdown","195f8cf8":"markdown","800566f1":"markdown","1594a366":"markdown","1a4778c9":"markdown","8c0838c1":"markdown","6ba80df4":"markdown","7a4eec1d":"markdown","2917bb3c":"markdown","6b5a73cd":"markdown"},"source":{"292ca8b5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","34344ce5":"%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n## Display all the columns and rows  of the dataframe\n\npd.pandas.set_option('display.max_rows',None)\npd.pandas.set_option('display.max_columns',None)","f42c234d":"train=pd.read_csv(r\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ntest=pd.read_csv(r\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv\")","1d60c786":"train.head()","5e29c372":"train.shape","38e9917d":"features_with_nan=[features for features in train.columns if train[features].isnull().sum()>0]","58de6a61":"len(features_with_nan)","a74a9049":"nan_list=[]\nfor features in features_with_nan:\n    nan_list.append([features,train[features].isnull().sum()])\n","3f27868c":"nan_list.sort(key=lambda x:x[1])","d19afcd5":"#print the missing value columns based on sorted order\nfor i in nan_list:\n    print(i[0],\"--->\",i[1])","6d429bdb":"#Let's plot some diagram for this relationship\n","06329b4d":"data=train.copy()\n#data.head()","c91df636":"for features in features_with_nan:\n    data[features]=np.where(data[features].isnull(),1,0)\n    data.groupby(features)['SalePrice'].median().plot.bar()\n    plt.title(features)\n    plt.show()","d999c58b":"# list of numerical variables\nnumerical_features = [feature for feature in train.columns if train[feature].dtypes != 'O']# 'O' means object\n\nprint('Number of numerical variables: ', len(numerical_features))\n\n# visualise the numerical variables\ntrain[numerical_features].head()","8966dbb3":"year_feature = [feature for feature in numerical_features if 'Yr' in feature or 'Year' in feature]\n\nyear_feature","722b6e8b":"# let's explore the content of these year variables\nfor feature in year_feature:\n    print(feature, train[feature].unique())","3af0296b":"## Lets analyze the Temporal Datetime Variables\n## We will check whether there is a relation between year the house is sold and the sales price\n\ntrain.groupby('YrSold')['SalePrice'].median().plot()\nplt.xlabel('Year Sold')\nplt.ylabel('Median House Price')\nplt.title(\"House Price vs YearSold\")","537264a1":"\nfor feature in year_feature:\n    if feature!='YrSold':\n        plt.scatter(train[feature],train['SalePrice'],color='b')\n        #sns.regplot(x=train[feature], y=train['SalePrice'],color='r')\n        plt.xlabel(feature)\n        plt.ylabel('SalePrice')\n        plt.show() ","ded994b9":"\n\ndiscrete_feature=[feature for feature in numerical_features if len(train[feature].unique())<25 and feature not in year_feature+['Id']]\nprint(\"Discrete Variables Count: {}\".format(len(discrete_feature)))","5b1beff9":"train[discrete_feature].head()","248fdeee":"#Use bar plots for discrete type of data","1c28306a":"## Lets Find the realtionship between them and Sale PRice\nfor feature in discrete_feature:\n    data=train.copy()\n    data.groupby(feature)['SalePrice'].median().plot.bar()\n    plt.xlabel(feature)\n    plt.ylabel('SalePrice')\n    plt.title(feature)\n    plt.show()","7ee219c0":"\n\ncontinuous_feature=[feature for feature in numerical_features if feature not in discrete_feature+year_feature+['Id']]\nprint(\"Continuous feature Count {}\".format(len(continuous_feature)))","724c3917":"train[continuous_feature].head()","ed26c6da":"## Lets analyse the continuous values by creating histograms to understand the distribution\n\n##A histogram is a plot that lets you discover and show the underlying frequency distribution\n## (shape) of a set of continuous data.\n##This allows the inspection of the data for its underlying distribution (e.g., normal distribution), outliers, skewness\ndata=train.copy()\nfor feature in continuous_feature:\n \n    data[feature].hist(bins=25)\n    plt.xlabel(feature)\n    plt.ylabel(\"Count\")\n    plt.title(feature)\n    plt.show()","7ccec5c3":"\n## We will be using logarithmic transformation\n\ndata=train.copy()\ndata['SalePrice']=np.log(data['SalePrice'])\nfor feature in continuous_feature:\n    \n    if 0 in data[feature].unique():\n        pass\n    else:\n        data[feature]=np.log(data[feature])\n        \n        plt.scatter(data[feature],data['SalePrice'])\n        plt.xlabel(feature)\n        plt.ylabel('SalesPrice')\n        plt.title(feature)\n        plt.show()","7e4a1de0":"#boxplot is only used for contious variables","e70f1b3d":"data=train.copy()\nfor feature in continuous_feature:\n    \n    if 0 in data[feature].unique():\n        pass\n    else:\n        data[feature]=np.log(data[feature])\n        data.boxplot(column=feature)\n        plt.ylabel(feature)\n        plt.title(feature)\n        plt.show()","d00e77f1":"# the black small round circles are outliers","22e1ba36":"# Categorial variables\ncategorical_features=[feature for feature in train.columns if train[feature].dtypes=='O']\ncategorical_features","7a6141a9":"train[categorical_features].head()","ca3daff9":"for feature in categorical_features:\n    print('The feature is {} and number of categories are {}'.format(feature,len(train[feature].unique())))","36400ad0":"data=train.copy()\nfor feature in categorical_features:\n    \n    data.groupby(feature)['SalePrice'].median().plot.bar()  #the reason to take median is that we have seen there are lot outliers\n    plt.xlabel(feature)\n    plt.ylabel('SalePrice')\n    plt.title(feature)\n    plt.show()","a9ffb7e2":"### In Exploratory Data Analysis We will Analyze To Find out the below stuff\n1. Missing Values\n2. All The Numerical Variables\n3. Distribution of the Numerical Variables\n4. Categorical Variables\n5. Cardinality of Categorical Variables\n6. Outliers\n7. Relationship between independent and dependent feature(SalePrice )","67941bb5":"**So by observing the above graphs we can say that nan value having records are also verymuch impotant therefor we cant simply drop them and we have to put someting in those places**","16ecad7b":"** Numerical variables are usually of 2 type:**\n 1. Discrete Variables and \n 2. Continous variable ","0eebcd66":"**The above data is a skewed data therefore we have to convert the data into a normal distribution. Logarithmic transformation is a convenient means of transforming a highly skewed variable into a more normalized dataset.**","3f124d57":"***Here as the year is increasing the price of the house is decreasing,this just cant be true.Therefore we have to explore the data more***","e12492d5":"### Numerical variables","f5be5780":"# Exploratory Data Analysis","195f8cf8":"#### Discrete Variables ","800566f1":"# Outliers","1594a366":"#### continous variables","1a4778c9":"### Temporal Variables(Eg: Datetime Variables)","8c0838c1":"### Check for Missing values","6ba80df4":"**Since there are many missing values,so lets  find the relationship between missing values and Sales Price**","7a4eec1d":"## Numerical Variales","2917bb3c":"**lets observe the distribution of categorical variable vs dependent feature SalesPrice**","6b5a73cd":"**Suppose in a particular distribution if there is a  very high or very low value beyond the avg value\nthose are basically called outliers**"}}