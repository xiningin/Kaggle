{"cell_type":{"21671629":"code","18227f9f":"code","39d6e2f4":"code","e859176e":"code","215f0ed0":"code","9d2bf98a":"code","badeb557":"code","cb20c192":"code","fbc42b5c":"code","912bd113":"markdown","2ac82349":"markdown","d708aa87":"markdown","2bc2a838":"markdown","9de3c106":"markdown","3a88275d":"markdown","5e2dd1bb":"markdown","40c3e4db":"markdown","56e4597c":"markdown","ba0b6824":"markdown","2c7b4bb4":"markdown","e389d719":"markdown","aa4491cf":"markdown","1eeb9741":"markdown","bc23e584":"markdown"},"source":{"21671629":"from scipy import stats\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nnp.random.seed(123)","18227f9f":"# 1. one sample t-test\n# =====================\n\n# population:\nmu, sigma = 100, 30 # mean and std-dev\npopulation = np.random.normal(mu, sigma, 1000)\n# Note:\n# Population mean will be known before hyp-test.\n# Infact, we will be checking if  `mu = s_bar`\n\n# sample:\nsample_norm = np.random.choice(population, size=30)\n\n# check if sample is normally distributed\n# can use q-q plot. (Avoiding it cz, as \n# it is randomly sample from uniform distribution to\n# >>sufficient size<<, it will be normally distributed too)\n# In real data, check it cz, we may not know population\n# (Must follow assumptions for t-test)\nsns.distplot(sample_norm)\nplt.title(\"sample\")\nplt.show()","39d6e2f4":"# Define,\n# H_o: s_bar = mu\n# H_a: s_bar != mu\n# level_of_significance = 5% = 0.05\n\n# one sample t-test -- generates p-val\nstats.ttest_1samp(sample_norm, mu) # note: mu (population mean) -- checks if `s_bar == mu`","e859176e":"# Let us check with another sample w\/ \n# mean little shifted from population mean.\n# As sample_mean is shifted from population\n# _mean, it should return lesser p-val\n# ----------------------------------------\n\n# sample 2:\nsample_norm_2 = np.random.normal(mu+10, sigma, 30)\n\n# it is normally distributed.\n# No need to check\n\n# H_o: s_bar = mu\n# H_a: s_bar != mu\n# level_of_significance = 5% = 0.05\n\n# one sample t-test -- generates p-val\nstats.ttest_1samp(sample_norm_2, mu)","215f0ed0":"# 2. two sample independant t-test\n# ================================\n\n# population:\nmu, sigma = 100, 30 # mean and std-dev\npopulation = np.random.normal(mu, sigma, 1000)\n# Note:\n# Population mean will not be known before hyp-test.\n# only norm_sample1 and norm_sample2 will be known\n# We will be checking if  `s_bar_1 = s_bar_2`\n\n\n# sample1 and sample 2:\nnorm_sample_1 = np.random.choice(population, size=70)\nnorm_sample_2 = np.random.choice(population, size=70)\n\n# Note: as randomly sampled from normal distribution\n# to >>sufficient size<<, they are normal as well. If real\n# world data, have to check if normal or not using\n# q-q plot or any other method.\n# Here, as we already know, not checking","9d2bf98a":"# Define,\n# H_o: s_bar_1 = s_bar_2\n# H_a: s_bar_1 != s_bar_2\n# level_of_significance = 5% = 0.05\n\n# two sample independant t-test\nstats.ttest_ind(norm_sample_1, norm_sample_2)","badeb557":"# 2. two sample paired\/relational t-test\n# ======================================\n\n# sample_1 and sample_2\nsample_1_before_pill = [68,45,46,34,23,67,80,120,34,54,68] \nsample_2_after_pill  = [28,25,26,24,13,37,30,30,54,34,38]","cb20c192":"# assumption: must be guassian norm.\n# check using q-q plot or k-s test\nfig, axarr = plt.subplots(1, 2)\nfig.set_size_inches(15,4)\n\nstats.probplot(sample_1_before_pill, dist=\"norm\", plot=axarr[0])\naxarr[0].title.set_text(\"sample_1_before_pill\")\n\nstats.probplot(sample_2_after_pill, dist=\"norm\", plot=axarr[1])\naxarr[1].title.set_text((\"sample_2_after_pill\"))\n\nplt.show()","fbc42b5c":"# Define,\n# H_o: s_bar_1 = s_bar_2\n# H_a: s_bar_1 != s_bar_2\n# level_of_significance = 5% = 0.05\n\n# two sample paired\/relational t-test\nstats.ttest_rel(sample_1_before_pill, sample_2_after_pill)","912bd113":"As p-val is `3%`% reject $H_o$ so, select $H_a$ (\ud835\udc60\u00af \u2260  \ud835\udf07 ) where $\\bar{s}$ is `sample_norm_2`","2ac82349":"As p-val is `29`% accept $H_o$ i.e (\ud835\udc60\u00af=\ud835\udf07 ) where $\\bar{s}$ is `sample_norm`","d708aa87":"**Note:** Never forget to consider *statistical assumptions* for a given test!","2bc2a838":"<br>","9de3c106":"**2. Two Sample Independant T-Test**\n\n> scipy.stats.ttest_ind(norm_sample_1, norm_sample_2)\n\nReturns `p-val` indicating if sample mean 1 and 2 are same i.e `s_bar_1 = s_bar_2`","3a88275d":"# Hypothesis Testing\n\n> Making a Yes (Significant) or No (Not Significant) decision **about population** using statastics -- **using a sample** of population data","5e2dd1bb":"> While learning about transforming multiple distributons to guassian normal distribution like *box-cox transforms, log-transforms or CLT*, you might have wondered why are we mostly converting to normal distribution. Because guassian normal distributions have been studied for decades and we know so much about them.\n>\n> Here, in tests like t-tests(result of decades of research), we always assume sample is guassian distributed. Hence, those transforms will be helpful.","40c3e4db":"As p-val is `72`% accept \ud835\udc3b\ud835\udc5c  i.e $(\\bar{s}_1 = \\bar{s}_2)$\n\n> Try changing sample size from `70` to `30` **p-value drastically decreases** (cz, NOT **sufficient size** --> NOT normal distribution --> Failed assumption )","56e4597c":"**1. One Sample T-Test**\n\n> scipy.stats.(normal_sample, population_mean)\n\nReturns `p-val` indicating if sample mean `s_bar = mu`","ba0b6824":"As p-val is `0.8`% reject \ud835\udc3b\ud835\udc5c so, accept $H_a$ $(\\bar{s}_1 \\ne \\bar{s}_2)$ **i.e** **pills are effective**","2c7b4bb4":"# 01. T-Tests\n\n- **One Sample T-Test:** Single sample\n- **Two Sample Independent T-Test:** Two independant samples\n- **Two Sample Paired\/Relational T-Test:** Two dependant samples (eg. before consuming pill and after consuming pill tests)\n\n### Assumptions\n\n- Test for mean(s)\n    - **$H_o$** is always **$(\\bar{s} = \\mu$)** and **$H_a$** is always **$(\\bar{s} \\ne \\mu)$** (changes w\/ num of samples)\n- samples are normally distributed\n- population mean $\\mu$ and population standard deviation $\\sigma$ are known\n\n\n> **Note:** For two or more samples, make sure sample sizes are same","e389d719":"> As data-points are less, q-q plot doesn't work effectively. Better to check again with k-s test (stronger results). But for now skipping as both fairly looks normal distbn.","aa4491cf":"### Types of Hypothesis Tests\n\n![image2.png](https:\/\/miro.medium.com\/max\/450\/1*620UIGQx3RVbZUsF76-Img.jpeg)\n\n### Hypothesis Tests Based on Feature Data\n**Note:** `median` in below figure must be `rank`. `median` is special case of `rank`\n![image.png](http:\/\/www.processma.com\/resource\/images\/htest.gif)\n\n[Image Source 1](https:\/\/medium.com\/analytics-vidhya\/statistical-hypothesis-tests-126cd39ee93b)\n[Image Source 2](http:\/\/www.processma.com\/resource\/images\/htest.gif)\n\n**Non Parametric Tests** do **not** make any assumptions about underlying distribution.\n\n> *Covering All tests is not feasible. Only limited hypothesis tests (t-tests) covered*","1eeb9741":"### Terminology\n\n- **Null Hypothesis:** $H_o$ yes\/no type statement \n- **Alt. Hypothesis:** $H_a$ yes\/no type statement against $H_o$ \n- **Level of Significance \/ P-Value:** Usually 5%. If `p < level_of_significance`, reject $H_o$ \n- **[$\\alpha$] Type I Error:** **Rejecting** $H_o$ by mistake\n- **[$\\beta$] Type II Error:** **Accepting** $H_o$ by mistake","bc23e584":"**2. Two Sample Paired\/Relational T-Test**\n\n> scipy.stats.ttest_rel(norm_sample_1, norm_sample_2)\n\nReturns `p-val` indicating if sample mean 1 and 2 are same i.e `s_bar_1 = s_bar_2`\n\n> *Two samples must be dependant. Example, temps before consuming pill and after consuming pill*"}}