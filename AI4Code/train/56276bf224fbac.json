{"cell_type":{"b4007df7":"code","50d80f77":"code","8145bd49":"code","40c0321f":"code","5a58b188":"code","3922351e":"code","e9baef97":"code","e92c9d3c":"code","08c70a25":"code","8e27242a":"code","f0ead27c":"code","ef9075b7":"code","7265429d":"code","ffe589e0":"code","665eccc1":"code","496e8ddf":"code","25ca5266":"code","1df5b0c9":"code","223243bc":"code","88ca21b9":"markdown","b64d88cf":"markdown","c4098715":"markdown","6454b1c1":"markdown","3e41c926":"markdown","2c4757be":"markdown","945004c6":"markdown","dddf869e":"markdown","dd8a8474":"markdown","ecce9242":"markdown","6acbe415":"markdown"},"source":{"b4007df7":"import numpy as np\nimport pandas as pd\nfrom sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_squared_error\nimport matplotlib\nfrom sklearn.metrics import accuracy_score\n","50d80f77":"df = pd.read_csv('..\/input\/train.csv')\ntest = pd.read_csv('..\/input\/test.csv')","8145bd49":"df['nota_mat'] = np.log(df['nota_mat'])","40c0321f":"df = df.append(test, sort=False)","5a58b188":"df.shape","3922351e":"for c in df.columns:\n    if (df[c].dtype == 'object') & (c != 'codigo_mun'):\n        df[c] = df[c].astype('category').cat.codes","e9baef97":"#Retirando a string ID_ID_ da Coluna\ndf['codigo_mun'] = df['codigo_mun'].str.replace('ID_ID_','')","e92c9d3c":"# -2 para a separa\u00e7\u00e3o posterior das bases\ndf['nota_mat'].fillna(-2, inplace=True)","08c70a25":"df.fillna(0, inplace=True)","8e27242a":"df, test = df[df['nota_mat']!=-2], df[df['nota_mat']==-2]","f0ead27c":"train, valid = train_test_split(df, random_state=42)","ef9075b7":"rf = RandomForestRegressor(random_state=42, n_estimators=100)","7265429d":"feats = [c for c in df.columns if c not in ['nota_mat']]","ffe589e0":"rf.fit(train[feats], train['nota_mat'])","665eccc1":"valid_preds = rf.predict(valid[feats])","496e8ddf":"mean_squared_error(valid['nota_mat'], valid_preds)**(1\/2)","25ca5266":"mean_squared_error(valid['nota_mat'], valid_preds)**(1\/2)","1df5b0c9":"test['nota_mat'] = np.exp(rf.predict(test[feats]))","223243bc":"test[['codigo_mun','nota_mat']].to_csv('rf1.csv', index=False)","88ca21b9":"### 01. Importar Bibliotecas","b64d88cf":"### 10. Fazer previs\u00f5es","c4098715":"### Enviar pro Kaggle","6454b1c1":"### 09. Treinar o modelo\n","3e41c926":"### 02. Abrir arquivos","2c4757be":"### 07. Separar as bases de volta em `test` e `df`\n\n","945004c6":"### 03. Transformar a coluna `nota_mat` em log","dddf869e":"### 05. Transformar texto em n\u00famero, exceto a codigo_num","dd8a8474":"### 08. Criar os conjuntos de treino e valida\u00e7\u00e3o\n","ecce9242":"### 06. Preencher Valores em Branco","6acbe415":"### 04. Juntar os 2 DataFrames em uma \u00fanica vari\u00e1vel"}}