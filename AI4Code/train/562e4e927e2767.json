{"cell_type":{"e3a2c4e2":"code","7fdbe8c5":"code","920970fc":"code","05162aec":"code","49f56bb6":"code","1182d998":"code","4143d68e":"code","7effe369":"code","4710b0d7":"code","b15019a1":"code","fb9c6f0f":"code","94269a36":"code","0d4c4cbe":"code","752df25b":"code","9eb6cb25":"code","d13c9386":"code","7d867756":"code","fb5caeab":"code","7f8f6724":"code","a185f510":"code","4007a0fb":"code","ba984564":"code","7fead36b":"code","be3223ca":"code","181d9c25":"code","d83a04c0":"markdown","62f147aa":"markdown","391b8a6a":"markdown","8037e471":"markdown","41e6cc16":"markdown"},"source":{"e3a2c4e2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7fdbe8c5":"# https:\/\/i.moscow\/company\/projects\/eaf1e16b158b404883c9631751d42f1b\nname = \"\u0414\u0440\u043e\u043d-\u0442\u0430\u043a\u0441\u0438 \u00abHOVER\u00bb\"\ndesc = \"\u041c\u044b \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \u043d\u043e\u0432\u0443\u044e \u0444\u043e\u0440\u043c\u0443\u043b\u0443 \u043b\u0435\u0442\u0430\u044e\u0449\u0435\u0433\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u0442 \u0432\u0441\u0435 \u043f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u0430 \u0432 \u043e\u0434\u043d\u043e\u0439 \u043a\u043e\u043d\u0446\u0435\u043f\u0446\u0438\u0438: \u00ab\u0423\u0434\u043e\u0431\u0441\u0442\u0432\u043e. \u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c. \u0421\u043a\u043e\u0440\u043e\u0441\u0442\u044c\u00bb. \u041c\u044b \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043b\u0438 \u044d\u0442\u0443 \u0444\u043e\u0440\u043c\u0443\u043b\u0443 \u043d\u0430 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0435, \u0434\u043e\u043a\u0430\u0437\u0430\u0432 \u0435\u0435 \u043b\u0435\u0433\u0438\u0442\u0438\u043c\u043d\u043e\u0441\u0442\u044c.\"\nuniq = \"\u041b\u0435\u0442\u0430\u044e\u0449\u0438\u0439 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c, \u043d\u0435\u0442 \u0430\u043d\u0430\u043b\u043e\u0433\u043e\u0432 \u0432 \u043c\u0438\u0440\u0435\"\nintel = \"\u041d\u0430\u043b\u0438\u0447\u0438\u0435 \u043f\u0430\u0442\u0435\u043d\u0442\u043e\u0432 \u043d\u0430 \u0438\u0437\u043e\u0431\u0440\u0435\u0442\u0435\u043d\u0438\u044f\"\nprob = \"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u0430\u0434\u0451\u0436\u043d\u043e\u0433\u043e \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0433\u043e \u0431\u0435\u0441\u043f\u0438\u043b\u043e\u0442\u043d\u043e\u0433\u043e \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0441\u043a\u043e\u0433\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0431\u0443\u0434\u0443\u0449\u0438\u0445 \u0441\u0438\u0441\u0442\u0435\u043c \u0433\u043e\u0440\u043e\u0434\u0441\u043a\u043e\u0439 \u0432\u043e\u0437\u0434\u0443\u0448\u043d\u043e\u0439 \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u0438. \u0421\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u2013 \u0432\u0435\u0440\u0442\u043e\u043b\u0451\u0442\u044b, \u0442\u0440\u0435\u0431\u0443\u044e\u0442 \u0432\u044b\u0441\u043e\u043a\u043e\u0439 \u043a\u0432\u0430\u043b\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043f\u0438\u043b\u043e\u0442\u043e\u0432 \u0438 \u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b, \u0434\u043e\u0440\u043e\u0433\u0438\u0435, \u0448\u0443\u043c\u043d\u044b\u0435, \u0441\u043b\u043e\u0436\u043d\u044b\u0435 \u0432 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u043d\u0438\u0438 \u2013 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0432 \u0433\u043e\u0440\u043e\u0434\u0430\u0445 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043e \u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0432\u0430\u0436\u043d\u044b\u043c\u0438 \u0438\u0437 \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u0440\u0430\u0437\u0432\u0438\u0442\u0438\u044f \u043c\u0438\u0440\u043e\u0432\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430 \u0432\u0435\u0440\u0442\u043e\u043b\u0435\u0442\u043d\u043e\u0439 \u0442\u0435\u0445\u043d\u0438\u043a\u0438 \u0432 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0438 \u0441 \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438 \u043c\u0443\u043b\u044c\u0442\u0438\u043a\u043e\u043f\u0442\u0435\u0440\u0430\u043c\u0438: \u041f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u043d\u043e\u0441\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0432\u0438\u0434\u043e\u0432 \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u0430 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043f\u0435\u0440\u0435\u0432\u043e\u0437\u043a\u0438 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432 \u0434\u043b\u044f \u0430\u0432\u0438\u0430\u0446\u0438\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 4-12 \u0442\u044b\u0441. \u043a\u043c. \u0414\u043b\u044f \u0432\u0435\u0440\u0442\u043e\u043b\u0435\u0442\u043e\u0432 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 300-600 \u043a\u043c \u0430 \u0434\u043b\u044f \u0433\u0440\u0443\u0437\u043e\u0432\u044b\u0445 \u0434\u0440\u043e\u043d\u043e\u0432 \u043e\u0447\u0435\u0432\u0438\u0434\u043d\u043e \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u0430\u044f \u0434\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u0430 \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u0442 150-250 \u043a\u043c \u0417\u0430\u0442\u0440\u0430\u0442\u044b \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043d\u0430 \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0443 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432 \u0438 \u0433\u0440\u0443\u0437\u043e\u0432 \u0434\u043b\u044f \u0434\u0440\u043e\u043d\u043e\u0432 \u043d\u0430 30% \u043d\u0438\u0436\u0435 \u043f\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044e \u0441 \u043d\u0430\u0437\u0435\u043c\u043d\u044b\u043c\u0438 \u0442\u0430\u043a\u0441\u0438, \u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0441\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0432 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u043e\u043c \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435 \u043c\u0435\u0433\u0430\u043f\u043e\u043b\u0438\u0441\u043e\u0432 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432 \u0417\u0430\u0442\u0440\u0430\u0442\u044b \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u044b\u0445 \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432 \u043d\u0430 \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0443 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u043d\u0430 30% \u043c\u0435\u043d\u044c\u0448\u0435 \u0432 \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u0438 \u043a\u0438\u043b\u043e\u043c\u0435\u0442\u0440\u0430 \u0447\u0435\u043c \u0434\u043b\u044f \u0432\u0435\u0440\u0442\u043e\u043b\u0435\u0442\u043e\u0432 \u043f\u0440\u0438 \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u0438 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u0432 \u0434\u0432\u0430 \u0440\u0430\u0437\u0430 \u043d\u0438\u0436\u0435. \u0417\u0430\u0442\u0440\u0430\u0442\u044b \u0447\u0435\u043b\u043e\u0432\u0435\u0447\u0435\u0441\u043a\u0438\u0445 \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432 \u043d\u0430 \u043f\u0435\u0440\u0435\u0432\u043e\u0437\u043a\u0443 \u0433\u0440\u0443\u0437\u043e\u0432 \u0441\u043c\u0435\u0449\u0435\u043d\u044b \u0432 \u0441\u0442\u043e\u0440\u043e\u043d\u0443 \u044d\u043a\u0441\u043f\u043b\u0443\u0430\u0442\u0430\u0446\u0438\u0438 \u0433\u0440\u0443\u0437\u043e\u0432\u044b\u0445 \u0434\u0440\u043e\u043d\u043e\u0432, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0433\u0440\u0443\u0437\u043e\u0432\u044b\u043c\u0438 \u0434\u0440\u043e\u043d\u0430\u043c\u0438 \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043f\u0438\u043b\u043e\u0442 \u0422\u0435\u043c \u0441\u0430\u043c\u044b\u043c \u0440\u044b\u043d\u043e\u043a \u0433\u0440\u0443\u0437\u043e\u0432\u044b\u0445 \u0434\u0440\u043e\u043d\u043e\u0432 \u0441 \u043f\u043e\u043b\u0435\u0437\u043d\u043e\u0439 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u043e\u0439 \u043f\u043e \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u0443 \u0434\u043e 200 \u043a\u0433 \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u0431\u0438\u0440\u0430\u0442\u044c \u043f\u043e\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u0435\u0439 \u0443 \u0440\u044b\u043d\u043a\u0430 \u043b\u0435\u0433\u043a\u0438\u0445 \u0432\u0435\u0440\u0442\u043e\u043b\u0435\u0442\u043e\u0432 \u0432 \u0441\u0435\u0433\u043c\u0435\u043d\u0442\u0435 \u043a\u043e\u0440\u043e\u0442\u043a\u0438\u0445 \u0434\u0438\u0441\u0442\u0430\u043d\u0446\u0438\u0439 \u043f\u0440\u0438 \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0441\u0442\u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u0432\u0438\u0434\u043e\u0432 \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u0430. \u041f\u0440\u0438 \u0441\u043d\u0438\u0436\u0435\u043d\u0438\u0438 \u0431\u0430\u0440\u044c\u0435\u0440\u043e\u0432 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0433\u0440\u0443\u0437\u043e\u0432\u044b\u0445 \u0434\u0440\u043e\u043d\u043e\u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0449\u0438\u043c \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043c \u0440\u0430\u0437\u0432\u0438\u0442\u0438\u044f \u0441\u0442\u0430\u043d\u0435\u0442 \u0440\u044b\u043d\u043e\u043a \u0442\u0430\u043a\u0441\u0438 \u0432 \u043c\u0435\u0433\u0430\u043f\u043e\u043b\u0438\u0441\u0430\u0445.\"\nmarket = \"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u043f\u0430\u043a\u0442\u043d\u043e\u0433\u043e \u0431\u0435\u0441\u043f\u0438\u043b\u043e\u0442\u043d\u043e\u0433\u043e \u043b\u0435\u0442\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u0430 \u043f\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u043d\u044b\u043c \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0430\u043c \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f, \u0434\u043b\u044f \u043c\u043d\u043e\u0433\u043e\u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u0435\u043d\u0438\u0435 \u0440\u044b\u043d\u043a\u0430 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0441\u043a\u0438\u0445 \u043f\u0435\u0440\u0435\u0432\u043e\u0437\u043e\u043a \u0432 \u043c\u0435\u0433\u0430\u043f\u043e\u043b\u0438\u0441\u0430\u0445 \u0441 \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u043e\u0439 \u043d\u0430\u0437\u0435\u043c\u043d\u043e\u0439 \u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u043e\u0439, \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u044f \u043d\u043e\u0432\u044b\u0439 \u0440\u044b\u043d\u043e\u043a \u0432\u043e\u0437\u0434\u0443\u0448\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u0432\u043e\u0437\u043e\u043a, \u0431\u043e\u043b\u0435\u0435 \u0448\u0438\u0440\u043e\u043a\u0438\u0439 \u0447\u0435\u043c \u0440\u044b\u043d\u043e\u043a \u0432\u0435\u0440\u0442\u043e\u043b\u0435\u0442\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u0432\u043e\u0437\u043e\u043a.\"\ntarg = \"\u0420\u044b\u043d\u043e\u043a \u0433\u043e\u0440\u043e\u0434\u0441\u043a\u043e\u0439 \u0432\u043e\u0437\u0434\u0443\u0448\u043d\u043e\u0439 \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0412 2018 \u0433\u043e\u0434\u0443 \u043c\u0438\u0440\u043e\u0432\u043e\u0439 \u0440\u044b\u043d\u043e\u043a \u0433\u043e\u0440\u043e\u0434\u0441\u043a\u043e\u0439 \u0432\u043e\u0437\u0434\u0443\u0448\u043d\u043e\u0439 \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u043b\u0441\u044f \u0432 5,4 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\u0430 \u0434\u043e\u043b\u043b\u0430\u0440\u043e\u0432 \u0421\u0428\u0410, \u0438 \u043e\u0436\u0438\u0434\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u043a 2027 \u0433\u043e\u0434\u0443 \u043e\u043d \u043f\u0440\u0435\u0432\u044b\u0441\u0438\u0442 14,6 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\u0430 \u0434\u043e\u043b\u043b\u0430\u0440\u043e\u0432 \u0421\u0428\u0410. \u041e\u0436\u0438\u0434\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e CAGR \u0440\u044b\u043d\u043a\u0430 \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u0442 \u043e\u043a\u043e\u043b\u043e 11,23%, \u0442\u043e \u0435\u0441\u0442\u044c \u0432 2019-2027 \u0433\u043e\u0434\u0430\u0445, \u0432 \u0441\u0432\u044f\u0437\u0438 \u0441 \u0440\u0430\u0441\u0442\u0443\u0449\u0438\u043c \u0441\u043f\u0440\u043e\u0441\u043e\u043c. \u0434\u043b\u044f \u0431\u0435\u0441\u043f\u0438\u043b\u043e\u0442\u043d\u044b\u0445 \u043b\u0435\u0442\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u043e\u0432 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0438 \u0433\u0440\u0430\u0436\u0434\u0430\u043d\u0441\u043a\u043e\u0433\u043e \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438 \u0440\u0430\u0441\u0442\u0443\u0449\u0435\u0439 \u043f\u043e\u0442\u0440\u0435\u0431\u043d\u043e\u0441\u0442\u0438 \u0432 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u0432\u043e\u0437\u043a\u0430\u0445. \u041f\u043e \u043e\u0446\u0435\u043d\u043a\u0435 Airbus, \u0440\u044b\u043d\u043e\u043a \u0433\u043e\u0440\u043e\u0434\u0441\u043a\u043e\u0439 \u0432\u043e\u0437\u0434\u0443\u0448\u043d\u043e\u0439 \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u0442 \u043f\u043e\u0440\u044f\u0434\u043a\u0430 $50 \u043c\u043b\u0440\u0434 \u043a 2030, \u043f\u043e\u043b\u043e\u0432\u0438\u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u2013 \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043b\u0435\u0442\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u043e\u0432 \u041f\u043e \u043e\u0446\u0435\u043d\u043a\u0435 \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u043e\u0432 \u0431\u0430\u043d\u043a\u0430 Morgan Stanley, \u043a 2040 \u0433\u043e\u0434\u0443 \u0440\u044b\u043d\u043e\u043a \u0433\u043e\u0440\u043e\u0434\u0441\u043a\u0438\u0445 \u0430\u0432\u0438\u0430\u043f\u0435\u0440\u0435\u0432\u043e\u0437\u043e\u043a \u0431\u0443\u0434\u0435\u0442 \u0438\u043c\u0435\u0442\u044c \u043e\u0431\u043e\u0440\u043e\u0442 \u043e\u0442 0.6 \u0434\u043e 2,9 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d\u0430 \u0434\u043e\u043b\u043b\u0430\u0440\u043e\u0432 \u0432 \u0433\u043e\u0434, \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u043e \u043e\u043f\u0442\u0438\u043c\u0438\u0441\u0442\u0438\u0447\u043d\u043e\u043c\u0443 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044e $1,9 \u0442\u0440\u043b\u043d \u2013 \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0438\u043c\u0435\u043d\u043d\u043e \u043d\u0430 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0441\u043a\u0438\u0435 \u0430\u0432\u0438\u0430\u043f\u0435\u0440\u0435\u0432\u043e\u0437\u043a\u0438 Hoversurf \u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043d\u0430 \u0440\u044b\u043d\u043e\u043a \u043b\u0435\u0442\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u043e\u0432 \u0434\u043b\u044f \u0433\u043e\u0440\u043e\u0434\u0441\u043a\u043e\u0439 \u0432\u043e\u0437\u0434\u0443\u0448\u043d\u043e\u0439 \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u0438 (\u043e\u0442 $25 \u043c\u043b\u0440\u0434 \u0432 \u0433\u043e\u0434 \u043a 2030 \u0433). \u0412 \u043f\u0435\u0440\u0432\u0443\u044e \u043e\u0447\u0435\u0440\u0435\u0434\u044c \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u044f \u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043d\u0430 \u0440\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0439 \u0440\u044b\u043d\u043e\u043a \u2013 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0433\u043e\u0440\u043e\u0434\u0441\u043a\u043e\u0439 \u0432\u043e\u0437\u0434\u0443\u0448\u043d\u043e\u0439 \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0432 \u041c\u043e\u0441\u043a\u0432\u0435. \u041e\u0446\u0435\u043d\u043a\u0430 \u0435\u043c\u043a\u043e\u0441\u0442\u0438 \u0440\u044b\u043d\u043a\u0430 \u041c\u043e\u0441\u043a\u0432\u044b \u043d\u0430 2025 \u0433\u043e\u0434 \u2013 37-74 \u043c\u043b\u043d $ (\u0430\u044d\u0440\u043e\u0442\u0430\u043a\u0441\u0438 \u043c\u0435\u0436\u0434\u0443 \u0430\u044d\u0440\u043e\u043f\u043e\u0440\u0442\u0430\u043c\u0438 \u0438 \u0433\u043e\u0440\u043e\u0434\u043e\u043c) \u0412 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c \u2013 \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0430 \u0437\u0430\u0440\u0443\u0431\u0435\u0436\u043d\u044b\u0435 \u0440\u044b\u043d\u043a\u0438, \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u0435 \u0433\u043e\u0440\u043e\u0434\u0441\u043a\u043e\u0439 \u0432\u043e\u0437\u0434\u0443\u0448\u043d\u043e\u0439 \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0432 \u00ab\u043c\u0435\u0433\u0430\u0433\u043e\u0440\u043e\u0434\u0430\u0445\u00bb \u043f\u043e \u0432\u0441\u0435\u043c\u0443 \u043c\u0438\u0440\u0443.\"\ncomp = \"E-Hang, Lilium, Volocopter\"\nres = \"\u0421\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u044b\"\nstat = \"\u041d\u0430\u043b\u0438\u0447\u0438\u0435 \u043e\u043f\u044b\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u0440\u0430\u0437\u0446\u0430\"\nmod = \"\u041d\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e\"\nplan = \"\u041d\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e\"","920970fc":"source = name+desc+uniq+intel+prob+market+targ+comp+res+stat+mod+plan","05162aec":"# \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430\n!pip install git+https:\/\/github.com\/LIAAD\/yake","49f56bb6":"import yake","1182d998":"# \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\n# \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u043a \u043c\u0435\u043d\u044c\u0448\u0435 - \u043b\u0443\u0447\u0448\u0435.\nlanguage = \"ru\" # \u042f\u0437\u044b\u043a \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u0442\u043e\u043f \u0441\u043b\u043e\u0432.\n# max_ngram_size = 2\n#deduplication_thresold = 0.2\ndeduplication_algo = 'seqm'\nwindowSize = 1\nnumOfKeywords = 20\n\nfor n in range(0,4):\n    for i in np.arange(0,1.0,0.3):\n        custom_kw_extractor = yake.KeywordExtractor(lan=language, n=n, dedupLim=i, dedupFunc=deduplication_algo, windowsSize=windowSize, top=numOfKeywords, features=None)\n        keywords = custom_kw_extractor.extract_keywords(source)\n        for kw in keywords:\n            print(kw)\n        print(\"Dedup = \" + str(i))\n        print(\"_________________________\")\n    print(\"Max ngram = \" + str(n))\n    print(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\")\n#for kw in keywords:\n    #print(kw)","4143d68e":"# pip install keybert[all]","7effe369":"# \u0421\u0442\u043e\u043f \u0441\u043b\u043e\u0432\u0430 \u0434\u043b\u044f \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u044f\u0437\u044b\u043a\u0430.\nimport nltk\n# nltk.download(\"stopwords\")\nfrom nltk.corpus import stopwords","4710b0d7":"from keybert import KeyBERT","b15019a1":"# \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043a extract_keywords\nkeyphrase_ngram_range=(1, 1)\nstop_words=stopwords.words(\"russian\")\nuse_maxsum=True \nnr_candidates=20 \ntop_n=10\nuse_mmr=True\ndiversity=0.7","fb9c6f0f":"for n in range (1, 3):\n    for i in np.arange(0, 1, 0.3):\n        kw_model = KeyBERT('distilbert-base-nli-mean-tokens')\n        keywords = kw_model.extract_keywords(source, keyphrase_ngram_range=(n,n), stop_words=stop_words, use_maxsum=use_maxsum, \n                                                 nr_candidates=nr_candidates, top_n=top_n, use_mmr=use_mmr, diversity=i)\n        print('diversity: ' + str(i))\n        print(keywords)\n    print(\"ngram: \" + str(n))","94269a36":"# \u0414\u0440\u0443\u0433\u043e\u0439 \u0441\u0435\u043c\u043f\u043b \u0442\u0435\u043a\u0441\u0442\u0430:\n\nsource1 = name + desc + uniq + prob","0d4c4cbe":"# \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\n# \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u043a \u043c\u0435\u043d\u044c\u0448\u0435 - \u043b\u0443\u0447\u0448\u0435.\nlanguage = \"ru\" # \u042f\u0437\u044b\u043a \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u0442\u043e\u043f \u0441\u043b\u043e\u0432.\nmax_ngram_size = 1\n#deduplication_thresold = 0.2\ndeduplication_algo = 'seqm'\nwindowSize = 1\nnumOfKeywords = 20\n\n\nfor i in np.arange(0,1.1,0.2):\n    custom_kw_extractor = yake.KeywordExtractor(lan=language, n=max_ngram_size, dedupLim=i, dedupFunc=deduplication_algo, windowsSize=windowSize, top=numOfKeywords, features=None)\n    keywords = custom_kw_extractor.extract_keywords(source1)\n    for kw in keywords:\n        print(kw)\n    print(\"Dedup = \" + str(i))\n    print(\"_________________________\")","752df25b":"# \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043a extract_keywords\nkeyphrase_ngram_range=(1, 1)\nstop_words=stopwords.words(\"russian\")\nuse_maxsum=True \nnr_candidates=20 \ntop_n=10\nuse_mmr=True\ndiversity=0.7\n\n\nfor i in np.arange(0, 1, 0.3):\n    kw_model = KeyBERT('distilbert-base-nli-mean-tokens')\n    keywords = kw_model.extract_keywords(source1, keyphrase_ngram_range=keyphrase_ngram_range, stop_words=stop_words, use_maxsum=use_maxsum, \n                                             nr_candidates=nr_candidates, top_n=top_n, use_mmr=use_mmr, diversity=i)\n    print('diversity: ' + str(i))\n    print(keywords)\n","9eb6cb25":"from sentence_transformers import SentenceTransformer\n\nfor i in np.arange(0, 1, 0.3):\n    sentence_model = SentenceTransformer(\"distilbert-base-nli-mean-tokens\", device=\"cpu\")\n    kw_model2 = KeyBERT(model=sentence_model)\n    keywords = kw_model2.extract_keywords(source1, keyphrase_ngram_range=keyphrase_ngram_range, stop_words=stop_words, use_maxsum=use_maxsum, \n                                             nr_candidates=nr_candidates, top_n=top_n, use_mmr=use_mmr, diversity=i)\n    print('diversity: ' + str(i))\n    print(keywords)\n","d13c9386":"from flair.embeddings import TransformerDocumentEmbeddings\n\nfor i in np.arange(0, 1, 0.3):\n    roberta = TransformerDocumentEmbeddings('roberta-base')\n    kw_model3 = KeyBERT(model=roberta)\n    keywords = kw_model3.extract_keywords(source1, keyphrase_ngram_range=keyphrase_ngram_range, stop_words=stop_words, use_maxsum=use_maxsum, \n                                             nr_candidates=nr_candidates, top_n=top_n, use_mmr=use_mmr, diversity=i)\n    print('diversity: ' + str(i))\n    print(keywords)","7d867756":"# \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\n# \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u043a \u043c\u0435\u043d\u044c\u0448\u0435 - \u043b\u0443\u0447\u0448\u0435.\nlanguage = \"ru\" # \u042f\u0437\u044b\u043a \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u0442\u043e\u043f \u0441\u043b\u043e\u0432.\nmax_ngram_size = 1\ndeduplication_thresold = 0.3\ndeduplication_algo = 'seqm'\nwindowSize = 1\nnumOfKeywords = 20\n\n\ncustom_kw_extractor = yake.KeywordExtractor(lan=language, n=max_ngram_size, dedupLim=deduplication_thresold, dedupFunc=deduplication_algo, windowsSize=windowSize, top=numOfKeywords, features=None)\nkeywords = custom_kw_extractor.extract_keywords(source)\nfor kw in keywords:\n    print(kw)\n","fb5caeab":"# \u041b\u0435\u043c\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u044f\nimport pymorphy2 # pip install pymorphy2\n\ntemp = [item[0] for item in keywords]\nprint(\"\u0411\u044b\u043b\u043e: \" + str(temp) + \"\\n\")\n\nmorph = pymorphy2.MorphAnalyzer()\n\nres = list()\n\nfor t in temp:\n    p = morph.parse(t)[0]\n    res.append(p.normal_form)\nprint(\"\u0421\u0442\u0430\u043b\u043e: \" + str(res))","7f8f6724":"# \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0447\u0430\u0441\u0442\u0435\u0439 \u0440\u0435\u0447\u0438, \u043b\u0438\u0448\u043d\u0435\u0435 \u043c\u043e\u0436\u043d\u043e \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u0442\u044c.\n\ntemp = [item[0] for item in keywords]\nprint(\"\u0411\u044b\u043b\u043e: \" + str(temp) + \"\\n\")\n\nmorph = pymorphy2.MorphAnalyzer()\n\nres2 = list()\n\nfor t in temp:\n    p = morph.parse(t)[0]\n    w = p.normal_form\n    j = p.tag.POS\n    k = (w,j)\n    res2.append(k)\n\nprint(\"\u0421\u0442\u0430\u043b\u043e: \" + str(res2))\n\noutput = []\nfor r in res2:\n    output.append(r[0])","a185f510":"# \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0442\u0430\u043a:\n\nres3 = list()\n\nfor pair in res2:\n    if pair[1] != \"VERB\":\n        res3.append(pair)\n\nprint(res3)","4007a0fb":"# \u041c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u044b\u0432\u0430\u0442\u044c \u0440\u0430\u0437\u0431\u0438\u0442\u044c \u0442\u0435\u043a\u0441\u0442 \u043d\u0430 \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u044b\u0435 \u043f\u043e\u043b\u044f \u0438 \u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u043e \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0432\u044b\u0447\u043b\u0435\u043d\u0438\u0442\u044c \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u0441\u043b\u043e\u0432\u0430.\nsource = [name,desc,uniq,prob,market]","ba984564":"language = \"ru\" # \u042f\u0437\u044b\u043a \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u0442\u043e\u043f \u0441\u043b\u043e\u0432.\nmax_ngram_size =1\ndeduplication_thresold = 0.7\ndeduplication_algo = 'seqm'\nwindowSize = 1\nnumOfKeywords = 2\n\nkeyw = []\nfor s in source:\n    custom_kw_extractor = yake.KeywordExtractor(lan=language, n=max_ngram_size, dedupLim=deduplication_thresold, dedupFunc=deduplication_algo, windowsSize=windowSize, top=numOfKeywords, features=None)\n    keywords = custom_kw_extractor.extract_keywords(s)\n    for kw in keywords:\n        keyw.append(kw[0])\n        print(kw)\nprint(keyw)","7fead36b":"# \u041b\u0435\u043c\u043c\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u044f\n#!pip install pymorphy2\nimport pymorphy2\n\ntemp = [item[0] for item in keyw]\nprint(\"\u0411\u044b\u043b\u043e: \" + str(temp) + \"\\n\")\n\nmorph = pymorphy2.MorphAnalyzer()\n\nres = list()\n\nfor t in temp:\n    p = morph.parse(t)[0]\n    res.append(p.normal_form)\nprint(\"\u0421\u0442\u0430\u043b\u043e: \" + str(res))","be3223ca":"# \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0447\u0430\u0441\u0442\u0435\u0439 \u0440\u0435\u0447\u0438, \u043b\u0438\u0448\u043d\u0435\u0435 \u043c\u043e\u0436\u043d\u043e \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u0442\u044c.\n\n#temp = [item[0] for item in res]\n#print(\"\u0411\u044b\u043b\u043e: \" + str(temp) + \"\\n\")\n\nmorph = pymorphy2.MorphAnalyzer()\n\nres2 = list()\n\nfor t in keyw:\n    p = morph.parse(t)[0]\n    w = p.normal_form\n    j = p.tag.POS\n    k = (w,j)\n    res2.append(k)\n\nprint(\"\u0421\u0442\u0430\u043b\u043e: \" + str(res2))\n\noutput = []\nfor r in res2:\n    output.append(r[0])","181d9c25":"# \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0442\u0430\u043a:\n\nres3 = list()\n\nfor pair in res2:\n    if pair[1] != \"VERB\":\n        res3.append(pair[0])\n\nprint(res3)","d83a04c0":"#  KeyBERT algorithm","62f147aa":"# YAKE algorithm","391b8a6a":"https:\/\/github.com\/MaartenGr\/KeyBERT\n\n@misc{grootendorst2020keybert,\n  author       = {Maarten Grootendorst},\n  title        = {KeyBERT: Minimal keyword extraction with BERT.},\n  year         = 2020,\n  publisher    = {Zenodo},\n  version      = {v0.3.0},\n  doi          = {10.5281\/zenodo.4461265},\n  url          = {https:\/\/doi.org\/10.5281\/zenodo.4461265}\n}","8037e471":"# \u0418\u0442\u043e\u0433\u043e\u0432\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c","41e6cc16":"https:\/\/github.com\/LIAAD\/yake\n\nPlease cite the following works when using YAKE\n\nIn-depth journal paper at Information Sciences Journal\n\nCampos, R., Mangaravite, V., Pasquali, A., Jatowt, A., Jorge, A., Nunes, C. and Jatowt, A. (2020). YAKE! Keyword Extraction from Single Documents using Multiple Local Features. In Information Sciences Journal. Elsevier, Vol 509, pp 257-289. pdf\n\nECIR'18 Best Short Paper\n\nCampos R., Mangaravite V., Pasquali A., Jorge A.M., Nunes C., and Jatowt A. (2018). A Text Feature Based Automatic Keyword Extraction Method for Single Documents. In: Pasi G., Piwowarski B., Azzopardi L., Hanbury A. (eds). Advances in Information Retrieval. ECIR 2018 (Grenoble, France. March 26 \u2013 29). Lecture Notes in Computer Science, vol 10772, pp. 684 - 691. pdf\n\nCampos R., Mangaravite V., Pasquali A., Jorge A.M., Nunes C., and Jatowt A. (2018). YAKE! Collection-independent Automatic Keyword Extractor. In: Pasi G., Piwowarski B., Azzopardi L., Hanbury A. (eds). Advances in Information Retrieval. ECIR 2018 (Grenoble, France. March 26 \u2013 29). Lecture Notes in Computer Science, vol 10772, pp. 806 - 810. pdf"}}