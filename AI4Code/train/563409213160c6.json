{"cell_type":{"f454695e":"code","7035ef08":"code","8ff9db7a":"code","370ea5ba":"code","629a5cc8":"code","07df0bfd":"code","11d0d425":"code","9acc5c97":"code","583fc186":"code","6d7c7674":"code","b488e0c3":"code","cb80117a":"code","df602b6a":"code","d7cd4b85":"code","7aab3374":"code","70445801":"code","e3a5a342":"code","3d0b7b9a":"code","dd81d790":"code","546cab0f":"code","55ae7e27":"code","2b8b8bfa":"code","cdac7b14":"code","b133ac20":"code","e391bae0":"code","0ad9657a":"code","fe4236b8":"code","6ff53f65":"code","4546bc85":"code","5f48b9a5":"code","232ade59":"markdown","3a40fb64":"markdown","fe6b22a6":"markdown","fc3617d1":"markdown","2ba1f565":"markdown","a6b670a1":"markdown","4f45fced":"markdown","b0af4299":"markdown","ef354935":"markdown","4f89b00e":"markdown","d4a11dd6":"markdown","55f7fb85":"markdown","3969eca7":"markdown","332af551":"markdown","633112ed":"markdown"},"source":{"f454695e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7035ef08":"import matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport os\nfrom datetime import datetime\nimport pandas as pd\n\nmpl.rcParams['figure.figsize'] = (10, 8)\nmpl.rcParams['axes.grid'] = False","8ff9db7a":"def parse(x):\n    return datetime.strptime(x,'%m\/%d\/%Y')","370ea5ba":"df=pd.read_csv('https:\/\/raw.githubusercontent.com\/srivatsan88\/YouTubeLI\/master\/dataset\/electricity_consumption.csv',\n              parse_dates=['Bill_Date'],date_parser=parse)","629a5cc8":"df.head()","07df0bfd":"bill_df=df.set_index('Bill_Date')","11d0d425":"bill_df.head()","9acc5c97":"bill_18=bill_df['2016':'2018'][['Billed_amount']]","583fc186":"bill_18","6d7c7674":"bill_18['ma_roll3']=bill_18['Billed_amount'].rolling(window=3).mean().shift(1)","b488e0c3":"bill_18","cb80117a":"bill_18.plot()","df602b6a":"def wma(weights):\n    def calc(x):\n        return (weights*x).mean()\n    return calc","d7cd4b85":"bill_18['wma_roll3']=bill_18['Billed_amount'].rolling(window=3).apply(wma(np.array([0.5,1,1.5]))).shift(1)","7aab3374":"bill_18","70445801":"bill_18.plot()","e3a5a342":"bill_18['ema_win3']=bill_18['Billed_amount'].ewm(span=3,adjust=False,min_periods=0).mean().shift(1)","3d0b7b9a":"bill_18","dd81d790":"bill_18.plot()","546cab0f":"bill_18['ews_alpha']=bill_18['Billed_amount'].ewm(alpha=0.7,adjust=False,min_periods=3).mean().shift(1)","55ae7e27":"bill_18","2b8b8bfa":"bill_18.plot()","cdac7b14":"bill_18['ews_alpha_3']=bill_18['Billed_amount'].ewm(alpha=0.3,adjust=False,min_periods=3).mean().shift(1)","b133ac20":"bill_18[['Billed_amount','ews_alpha_3']].plot()","e391bae0":"bill_18[['Billed_amount','ews_alpha','ews_alpha_3']].plot()","0ad9657a":"((bill_18['Billed_amount']-bill_18['ma_roll3'])**2).mean()**0.5","fe4236b8":"((bill_18['Billed_amount']-bill_18['wma_roll3'])**2).mean()**0.5","6ff53f65":"((bill_18['Billed_amount']-bill_18['ema_win3'])**2).mean()**0.5","4546bc85":"((bill_18['Billed_amount']-bill_18['ews_alpha'])**2).mean()**0.5","5f48b9a5":"((bill_18['Billed_amount']-bill_18['ews_alpha_3'])**2).mean()**0.5","232ade59":"**So the exponential weighting average of alpha value with 0.7 is the better fit**","3a40fb64":"# Root Mean square error ","fe6b22a6":"**Although the moving average doesn't capture the exact pattern, it somewhat has the rise and fall of the data**","fc3617d1":"**Where span is the time period**","2ba1f565":"**Lowereing the alpha value smoothes the value of the data**","a6b670a1":"**Used to evaluate the performance of each Moving average techniques**","4f45fced":"# Exponential smoothing","b0af4299":"**Lower value of RMSE indicates the better fit of the values**","ef354935":"# Simple Moving average","4f89b00e":"**Simple moving average = (t + (t-1) + (t-2) + ... + (t-n)) \/ n**","d4a11dd6":"# Weighted moving average","55f7fb85":"# Exponential moving average","3969eca7":"**Exponential moving average = (Close - previous EMA) * (2\/(span+1)) + previous EMA**","332af551":"**Setting the bill_date as index, Indexing the date column, can able to analysis, sub string search easily**","633112ed":"**Square root(E (y-yi)^2\/n))**"}}