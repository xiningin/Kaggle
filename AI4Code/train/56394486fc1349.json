{"cell_type":{"b4c4f74d":"code","c8945f0d":"code","1d1e7dd9":"code","b2193c54":"code","6df0d9d5":"code","f9c6214d":"code","006192f6":"code","8c474cd1":"code","416b5be3":"code","62a52276":"markdown"},"source":{"b4c4f74d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c8945f0d":"data=pd.read_csv('..\/input\/the-movies-dataset\/movies_metadata.csv')\ndata.head(5)\nplt.show()","1d1e7dd9":"data.info()","b2193c54":"data.corr()","6df0d9d5":"b,ax = plt.subplots(figsize=(8, 8))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","f9c6214d":"data.columns","006192f6":"data.vote_average.plot(kind='line',color='r',label='revenue',alpha=0.5,grid = True,linestyle = ':',linewidth=1)\ndata.runtime.plot(kind='line',color='g',alpha=0.5,grid = True,linestyle = '-.',linewidth=1)\nplt.legend(loc='upper right')   \nplt.xlabel('x axis')              \nplt.ylabel('y axis')\nplt.title('Line Plot')            \nplt.show()","8c474cd1":"# Scatter Plot \ndata.plot(kind='scatter', x='revenue', y='vote_count',alpha = 0.5,color = 'red')\nplt.xlabel('revenue')              \nplt.ylabel('vote_count')\nplt.title('Scatter Plot')   \nplt.show()","416b5be3":"# Histogram\ndata.vote_average.plot(kind = 'hist',bins = 50,figsize = (8,8))\nplt.show()","62a52276":"Tablodan elde edilen bilgiye g\u00f6re 1 degerine en yak\u0131n olan degerlerden oy say\u0131s\u0131 ile gelir aras\u0131nda bir orant\u0131\noldu\u011funu s\u00f6yleyebiliriz.(Ayn\u0131 \u015fekilde oy ortalamas\u0131 ile gelir aras\u0131nda da bir orant\u0131 oldu\u011fu s\u00f6ylenebilir.)"}}