{"cell_type":{"53e0befc":"code","e557d880":"code","c818cba5":"code","e568d9cc":"code","c958a52d":"code","af409b7a":"code","b5c9ed12":"code","88383de3":"code","83ddd26e":"code","728ed2a2":"code","dba20d56":"code","7e0574ea":"code","83684509":"code","7bc24d57":"code","b4f4da3b":"code","69f407b4":"code","11638428":"code","d5fe1d67":"code","f7fe37a1":"markdown","1489f731":"markdown"},"source":{"53e0befc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e557d880":"X_full = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv', index_col='Id')\nX_test = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv', index_col='Id')","c818cba5":"X_full.head()","e568d9cc":"X_test.head()","c958a52d":"X = X_full.drop(['SalePrice'], axis=1)\nfeature_names = X_full.columns.values\ny = X_full.SalePrice","af409b7a":"ordinal_features = ['ExterCond', 'BsmtQual','BsmtCond', 'HeatingQC', 'KitchenQual',\n                    'FireplaceQu','GarageQual', 'GarageCond','PoolQC']\nnominal_features= list(set(X.select_dtypes(include='object').columns.values) - set(ordinal_features))\nnumerical_features = X.select_dtypes(exclude='object').columns.values","b5c9ed12":"from sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OneHotEncoder, OrdinalEncoder, MinMaxScaler, StandardScaler\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error","88383de3":"numerical_transformer = SimpleImputer(strategy='median')\n\nnominal_transformer = Pipeline(steps=[\n    ('imputer', SimpleImputer(strategy='most_frequent')),\n    ('onehot', OneHotEncoder(handle_unknown='ignore'))\n])\n\nordinal_transformer = Pipeline(steps=[\n    ('imputer', SimpleImputer(strategy='most_frequent')),\n    ('ordinal', OrdinalEncoder(handle_unknown='ignore'))\n])\n\npreprocessor = ColumnTransformer(\n                transformers=[\n                    ('num', numerical_transformer, numerical_features),\n                    ('cat_nom', nominal_transformer, nominal_features),\n                    ('ord_nom', ordinal_transformer, ordinal_features)\n                ])\n\npipe = Pipeline(steps=[\n        ('preprocessor', preprocessor),\n        ('minmaxscaler', MinMaxScaler()),\n        ('stdscaler',  StandardScaler()),\n        ('regressor', DecisionTreeRegressor(random_state=0, criterion='mse'))\n    \n])","83ddd26e":"X_train, X_val, y_train, y_val = train_test_split(X, y, train_size=0.8, random_state=3)","728ed2a2":"pipe.fit(X_train, y_train)","dba20d56":"val_predictions = pipe.predict(X_val)","7e0574ea":"mean_squared_error(y_val, val_predictions, squared=False)","83684509":"mean_absolute_error(y_val, val_predictions)","7bc24d57":"pd.DataFrame({'y_val': y_val,\n            'val_pred': val_predictions,\n             'abs_err': abs(val_predictions-y_val)}).describe()","b4f4da3b":"scores = -1 * cross_val_score(pipe, X, y, cv=5, scoring='neg_mean_absolute_error')","69f407b4":"scores","11638428":"scores.mean()","d5fe1d67":"scores.std()","f7fe37a1":"## Carregando os dados","1489f731":"## Validando o modelo"}}