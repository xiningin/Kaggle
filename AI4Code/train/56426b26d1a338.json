{"cell_type":{"b87d700e":"code","fd0a5003":"code","f964195e":"code","af43f0d3":"code","fba9498b":"code","83aaae48":"code","58f9169a":"code","213f1ddc":"code","5c13d716":"code","a578df91":"code","cde40d0f":"code","5a186cbc":"code","9c930612":"code","9c8f272a":"code","96e3f030":"code","0eaa4b90":"code","b281433e":"code","6c849a52":"code","b67eb914":"code","540b1173":"code","dfa272c1":"code","3e90a53b":"code","e7ab89a9":"code","cf945d09":"code","0abd7724":"code","d33bb52f":"code","a57bfea1":"code","966b8299":"code","1226e64e":"code","71c9876b":"code","1061c9a0":"code","dac29405":"markdown","539fc340":"markdown","7a50dfe7":"markdown","eb7123b9":"markdown","32e1076c":"markdown","03fa570f":"markdown","8e2462cb":"markdown","c75e763f":"markdown","3cf1c682":"markdown","2356846a":"markdown","e8f28faf":"markdown","b11acd6e":"markdown","4e27ce55":"markdown","97e1036a":"markdown","731f243b":"markdown","9bbaad89":"markdown","52d2de43":"markdown","02a42f09":"markdown","e93a410e":"markdown"},"source":{"b87d700e":"import random\n\nimport pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom wordcloud import WordCloud\n\nimport datetime\n\nimport warnings             # to get rid of warnings\nwarnings.filterwarnings(\"ignore\")","fd0a5003":"data = pd.read_csv(\"..\/input\/climate-change-earth-surface-temperature-data\/GlobalLandTemperaturesByMajorCity.csv\" , parse_dates=[\"dt\"])\nprint(data.shape)\ndata.head()","f964195e":"data.isna().sum()","af43f0d3":"missing_values = data[data[\"AverageTemperature\"].isna() == True ]\nprint(missing_values.shape)\nmissing_values.head(5)","fba9498b":"missing_values[\"City\"].value_counts()","83aaae48":"data.dropna(inplace=True)\ndata.shape","58f9169a":"# Q1 . What are the most common Countries in our data set ?\nmost_countries = data[\"Country\"].value_counts()[:20]\ncwc = []\nfor i in zip(most_countries.index , most_countries.values):\n    cit = i[0]+\"  \"+str(i[1])\n    cwc.append(cit)\nplt.figure(figsize=(10,7))\nplt.barh(cwc , most_countries.values)\nplt.axvline(x=data[\"Country\"].value_counts().values.mean() , color=\"red\" ,linestyle=\"--\" )\nplt.title(\"The most common countries\" , fontsize=25)\nplt.xlabel(\"(The red line referes to the Mean)\" , c=\"red\" , fontsize=15)","213f1ddc":"maj_count = []\ncwc = []\nfor i in most_countries.index:\n    temp = data[data[\"Country\"] == i][\"City\"]\n    maj_count.append(len(temp.unique()))\n    cit = i+\"  \"+str(len(temp.unique()))\n    cwc.append(cit)\n    ","5c13d716":"plt.figure(figsize=(10,7))\nplt.barh(cwc , maj_count)\nplt.axvline(x=(int(sum(maj_count)\/len(maj_count))) , color=\"red\" ,linestyle=\"--\" )\ntex = \"Major cities  \\n of the most common countries\" \nplt.title(tex, fontsize=25 )\nplt.xlabel(\"(The red line referes to the Mean)\" , c=\"red\" , fontsize=15)\nxticks = plt.xticks(range(16))","a578df91":"temp = data.groupby([\"Country\" , \"City\"]).mean()\nhottest = temp.sort_values([\"AverageTemperature\"] , ascending=False)[:20]\nhottest = hottest.sort_values([\"AverageTemperature\"] , ascending=True)\ncoldest = temp.sort_values([\"AverageTemperature\"] , ascending=True)[:20]\ncoldest = coldest.sort_values([\"AverageTemperature\"] , ascending=False)\n\n\n\nhottest_index = []\nfor i in hottest.index:\n    cit = i[1] + \" , \" + i[0]\n    hottest_index.append(cit)\n    \ncoldest_index = []\nfor i in coldest.index:\n    cit = i[1] + \" , \" + i[0]\n    coldest_index.append(cit)","cde40d0f":"plt.figure(figsize=(14,6))\n\nplt.bar(hottest_index , hottest.values[:,0]\n        , color=sns.color_palette(\"Blues\" , len(hottest) ))\nplt.axhline(y=temp[\"AverageTemperature\"].mean() , color=\"red\" , linestyle=\"--\")\nplt.yticks(np.arange(0,35,2))\nplt.xticks(rotation=90)\nplt.xlabel(\"City\")\nplt.ylabel(\"Mean Temprature\")\nplt.title(\"Hottest Cities in the world\")\nplt.text(6,17,\"(Global average temprature)\" , color=\"red\" , fontsize=15 )\n","5a186cbc":"plt.figure(figsize=(14,6))\n\nplt.bar(coldest_index , coldest.values[:,0]\n        , color=sns.color_palette(\"Blues\" , len(coldest) ))\nplt.axhline(y=temp[\"AverageTemperature\"].mean() , color=\"red\" , linestyle=\"--\")\nplt.yticks(np.arange(0,21,2))\nplt.xticks(rotation=90)\nplt.xlabel(\"City\")\nplt.ylabel(\"Mean Temprature\")\nplt.title(\"Coldest Cities in the world\")\nplt.text(6,17,\"(Global average temprature)\" , color=\"red\" , fontsize=15 )","9c930612":"egypt_data = data[data[\"Country\"] == \"Egypt\"]\negypt_data[\"Month\"] = pd.DatetimeIndex(egypt_data[\"dt\"]).month\negypt_data.drop(columns=[\"Country\"] , axis=1 , inplace=True)\negypt_data.head(5)","9c8f272a":"egypt_data[\"AverageTemperature\"].describe()","96e3f030":"alex = egypt_data[egypt_data[\"City\"] == \"Alexandria\"]\nalex.drop(columns=[\"City\" , \"Latitude\" , \"Longitude\"] , axis=1 , inplace=True)\nalex.head(5)","0eaa4b90":"alex[\"AverageTemperature\"].describe()","b281433e":"fig = plt.boxplot(alex[\"AverageTemperature\"])","6c849a52":"fig , ax = plt.subplots(2,figsize=(15,8))\nax[0].plot(alex[\"dt\"] ,alex[\"AverageTemperature\"])\nax[0].xaxis.set_major_locator(plt.MaxNLocator(12))\nax[0].axhline(y = alex[\"AverageTemperature\"].mean() , color=\"red\" , linestyle=\"--\")\nax[0].set_title(\"Average temprature in Alexandria\")\nax[0].set_xlabel(\"Date\")\nax[0].set_ylabel(\"Average temprature\")\nax[0].grid()\n\nax[1].plot(alex[\"dt\"] ,alex[\"AverageTemperatureUncertainty\"])\nax[1].xaxis.set_major_locator(plt.MaxNLocator(12))\n#ax[0].axhline(y = alex[\"AverageTemperatureUncertainty\"].mean() , color=\"red\" , linestyle=\"--\")\nax[1].set_title(\"Average temprature Uncertainty in Alexandria\")\nax[1].set_xlabel(\"Date\")\nax[1].set_ylabel(\"Average temprature Uncertainty\")\nax[1].grid()","b67eb914":"sns.displot(alex[\"AverageTemperature\"] , kde=True)","540b1173":"alex = alex[alex[\"dt\"] >=  pd.Timestamp('1900-01-01 00:00:00')]","dfa272c1":"fig , ax = plt.subplots(2,figsize=(15,8))\nax[0].plot(alex[\"dt\"] ,alex[\"AverageTemperature\"])\nax[0].xaxis.set_major_locator(plt.MaxNLocator(12))\nax[0].axhline(y = alex[\"AverageTemperature\"].mean() , color=\"red\" , linestyle=\"--\")\nax[0].set_title(\"Average temprature in Alexandria\")\nax[0].set_xlabel(\"Date\")\nax[0].set_ylabel(\"Average temprature\")\nax[0].grid()\n\nax[1].plot(alex[\"dt\"] ,alex[\"AverageTemperatureUncertainty\"])\nax[1].xaxis.set_major_locator(plt.MaxNLocator(12))\n#ax[0].axhline(y = alex[\"AverageTemperatureUncertainty\"].mean() , color=\"red\" , linestyle=\"--\")\nax[1].set_title(\"Average temprature Uncertainty in Alexandria\")\nax[1].set_xlabel(\"Date\")\nax[1].set_ylabel(\"Average temprature Uncertainty\")\nax[1].grid()","3e90a53b":"sns.displot(alex[\"AverageTemperature\"] , kde=True)","e7ab89a9":"temp = alex.groupby([\"Month\"]).mean()\ntemp.drop(columns=[\"AverageTemperatureUncertainty\"] , axis=1 , inplace=True)\ntemp = temp.sort_values([\"AverageTemperature\"])","cf945d09":"plt.figure(figsize=(10,6))\nplt.bar(temp.index , temp[\"AverageTemperature\"].values , color=sns.color_palette(\"YlOrBr\",len(temp.index) ))\n\nplt.axhline(y=temp[\"AverageTemperature\"].values.min() , color=\"red\")\nplt.text(.3,temp[\"AverageTemperature\"].values.min()+1 , \"(Minimum)\" , color='red')\nplt.axhline(y=temp[\"AverageTemperature\"].values.max() , color=\"green\")\nplt.text(.3,temp[\"AverageTemperature\"].values.max()-1 , \"(Maximum)\" , color='green')\n\nxticks = plt.xticks(range(13))\nyticks = plt.yticks(np.arange(1 , 30 ,2))\nplt.xlabel(\"Month\")\nplt.ylabel(\"Temprature\")\nplt.title(\"Average Temprature per Month in Alexandria\" , fontsize=20)","0abd7724":"cairo = egypt_data[egypt_data[\"City\"] == \"Cairo\"]\ncairo.drop(columns=[\"City\" , \"Latitude\" , \"Longitude\"] , axis=1 , inplace=True)\n\n#chossing only data after 1900\ncairo = cairo[cairo[\"dt\"] >=  pd.Timestamp('1900-01-01 00:00:00')]\ncairo.head(5)","d33bb52f":"alex[\"AverageTemperature\"].describe()","a57bfea1":"fig = plt.boxplot(cairo[\"AverageTemperature\"])","966b8299":"fig , ax = plt.subplots(2,figsize=(15,8))\nax[0].plot(cairo[\"dt\"] ,cairo[\"AverageTemperature\"])\nax[0].xaxis.set_major_locator(plt.MaxNLocator(12))\nax[0].axhline(y = cairo[\"AverageTemperature\"].mean() , color=\"red\" , linestyle=\"--\")\nax[0].set_title(\"Average temprature in Alexandria\")\nax[0].set_xlabel(\"Date\")\nax[0].set_ylabel(\"Average temprature\")\nax[0].grid()\n\nax[1].plot(cairo[\"dt\"] ,cairo[\"AverageTemperatureUncertainty\"])\nax[1].xaxis.set_major_locator(plt.MaxNLocator(12))\n#ax[0].axhline(y = alex[\"AverageTemperatureUncertainty\"].mean() , color=\"red\" , linestyle=\"--\")\nax[1].set_title(\"Average temprature Uncertainty in Alexandria\")\nax[1].set_xlabel(\"Date\")\nax[1].set_ylabel(\"Average temprature Uncertainty\")\nax[1].grid()","1226e64e":"sns.displot(alex[\"AverageTemperature\"] , kde=True)","71c9876b":"temp = cairo.groupby([\"Month\"]).mean()\ntemp.drop(columns=[\"AverageTemperatureUncertainty\"] , axis=1 , inplace=True)\ntemp = temp.sort_values([\"AverageTemperature\"])","1061c9a0":"plt.figure(figsize=(10,6))\nplt.bar(temp.index , temp[\"AverageTemperature\"].values , color=sns.color_palette(\"YlOrBr\",len(temp.index) ))\n\nplt.axhline(y=temp[\"AverageTemperature\"].values.min() , color=\"red\")\nplt.text(.3,temp[\"AverageTemperature\"].values.min()+1 , \"(Minimum)\" , color='red')\nplt.axhline(y=temp[\"AverageTemperature\"].values.max() , color=\"green\")\nplt.text(.3,temp[\"AverageTemperature\"].values.max()-1 , \"(Maximum)\" , color='green')\n\nxticks = plt.xticks(range(13))\nyticks = plt.yticks(np.arange(1 , 30 ,2))\nplt.xlabel(\"Month\")\nplt.ylabel(\"Temprature\")\nplt.title(\"Average Temprature per Month in Cairo\" , fontsize=20)","dac29405":"## Check for outliers","539fc340":"## The first step is to try to extract some main features of climate in Cairo \n* Q1 , what is the hottest month of the year ? and what is the coldest month of the year ?","7a50dfe7":"   knowen that : Cairo lies in **Latitude:29.74N** and **Longitude:31.38E**   \nwe droped thier two columns ...","eb7123b9":"knowen that : Alex lies in **Latitude:31.35N** and **Longitude:30.16E**   \nwe droped thier two columns ...","32e1076c":"### Sience , Egypt has three cities in our dataset then we will study the main two cities (Alexandria , Cairo) separatelly","03fa570f":"## First , let's get a highlight about the climate of Egypt \n","8e2462cb":"## Assumed that , the missing values not signeficant in our dataset \n* so , we decided to drop them","c75e763f":"### Check for outliers ","3cf1c682":"## Q1 . What are the most common Countries in our data set ?\n## Q2 . How many major cities they have ?\n## Q3 . What are the hottest cities and, What are the coldest ones ?","2356846a":"# let's perform some descriptive analysis on our data set","e8f28faf":"## The first step is to try to extract some main features of climate in Alexandria \n* Q1 , what is the hottest month of the year ? and what is the coldest month of the year ?","b11acd6e":"## Check data accuracy\n","4e27ce55":"***it's clear that , January is the coldest month in the year , and August is the hottest one***","97e1036a":"# Now , let's study the climate of my country , **Egypt** .\n* ADDED a new column \"Month\" to the dataframe which we need in our analysis\n* knowen that , the country here is Egypt so that dropped the column \"Country\"","731f243b":"**As showen in the previous plot the uncertainty before 1900 is very high so that we will drop it to get real resulst about the climate in Alexandria**","9bbaad89":"## Loading the data from the file\n**didn't forget to parse the column \"dt\" to datestamp** ","52d2de43":"## let's check this missing values properties","02a42f09":"# **Cairo** (the capital)","e93a410e":"# **Alexandria**"}}