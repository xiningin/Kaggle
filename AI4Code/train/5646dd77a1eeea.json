{"cell_type":{"d0e354df":"code","b338178b":"code","6bc2f28b":"code","a248fba0":"code","19c4266d":"code","aa24390b":"code","e998e169":"code","2135e298":"code","bf223720":"code","63a9cc88":"code","2b6eacbf":"code","788dc338":"code","71dba4ad":"code","036c8a6f":"code","6a58094e":"code","bdd54481":"code","99c5fca9":"code","bad328e3":"code","7f028e4f":"code","b3fe8937":"code","40d7ee48":"code","ad0824df":"code","5e11f01b":"code","6c4b59b8":"code","1c26add4":"code","f38c78b6":"code","cb176160":"code","d21b3cc7":"code","18785ee1":"code","5fec3621":"code","f044788c":"code","f926c3a8":"code","57da6353":"code","47b17783":"code","44235243":"code","9bdd28d2":"code","2d673e77":"code","6ed6eca9":"markdown","a0541f37":"markdown","cc2b4f6e":"markdown","b026fa90":"markdown","bebc57f9":"markdown","c598623d":"markdown","501b35c0":"markdown","1e89dfd0":"markdown","cd8e945c":"markdown","be34f7c3":"markdown","b9a694d7":"markdown","63395266":"markdown","574650ef":"markdown","f84e58ff":"markdown","2a836be1":"markdown","2c1ac093":"markdown","f2db0e2f":"markdown"},"source":{"d0e354df":"import pandas as pd\nimport numpy as np","b338178b":"df = pd.read_csv('..\/input\/dummy-advertising-and-sales-data\/Dummy Data HSS.csv')","6bc2f28b":"df","a248fba0":"df.info()","19c4266d":"xdf = df.copy()","aa24390b":"xdf['Id'] = xdf.index + 1","e998e169":"xdf.isnull().sum()","2135e298":"# listing them all\n\ntotal = xdf.isnull().sum().sort_values(ascending = False)\npercent = ((xdf.isnull().sum() \/ xdf.shape[0]) * 100).sort_values(ascending = False)\npercent = np.round(percent, 3)\ntypes = xdf[percent.index].dtypes\n\nmissing_data = pd.concat([total, percent, types], axis = 1, keys = [\"Total\",\"Percent\",\"Type\"])\nmissing_data.head(5)","bf223720":"# drop na rows from 'Sales'\n\nmissing_rows = xdf[xdf['Sales'].isna()].index\nxdf = xdf.drop(missing_rows, axis = 0).reset_index(drop = True)","63a9cc88":"# imputing 'median' on other attributes\n\ncols = ['TV','Radio','Social Media']\n\nfor i in cols:\n    xdf[i].fillna(xdf[i].median(), inplace = True)","2b6eacbf":"xdf.isnull().sum()","788dc338":"df['Sales'].describe()","71dba4ad":"import seaborn as sns\nsns.set_style('darkgrid')\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')","036c8a6f":"# distribution plot\n\nsns.displot(x = 'Sales', data = df, aspect = 2, height = 6, kde = True);","6a58094e":"numerical_df = df.select_dtypes(exclude = 'object')","bdd54481":"for i in numerical_df:\n    sns.displot(x = i, data = df, aspect = 2, height = 6, kde = True);","99c5fca9":"# Scatterplot\n\nfor i in numerical_df:\n    plt.figure(figsize = (8,6))\n    sns.scatterplot(x = i, y = 'Id', data = xdf);","bad328e3":"# Boxplots\n\nfor i in numerical_df:\n    plt.figure(figsize = (8,6))\n    sns.boxplot(x = i, data = xdf);","7f028e4f":"# Let's fix the distribution of 'SocialMedia'\n# Since it's left skewed, we will use sqrt transformation\n\ndef sqrt_transform(data):\n    return np.sqrt(data)\n\n","b3fe8937":"xdf['Social Media'] = xdf['Social Media'].map(sqrt_transform)","40d7ee48":"# Let's confirm it\n\nsns.displot(x = 'Social Media', data = xdf, kde = True);","ad0824df":"#scatter plot\n\nfor i in numerical_df:\n    plt.figure(figsize = (8,6))\n    sns.scatterplot(y = 'Sales', x = i, data = xdf);","5e11f01b":"xdf['Influencer'].value_counts()","6c4b59b8":"# let's see it's role in Sales\n\nplt.figure(figsize = (8,6))\nsns.violinplot(x = 'Influencer', y = 'Sales', data = xdf);","1c26add4":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline","f38c78b6":"X = xdf.drop('Sales', axis = 1)\ny = xdf['Sales']","cb176160":"X = pd.get_dummies(X)","d21b3cc7":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\n\nX1 = scaler.fit_transform(X)\nX = pd.DataFrame(data = X1, columns = X.columns)","18785ee1":"X.head()","5fec3621":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)\n","f044788c":"from sklearn.metrics import r2_score, mean_squared_error, mean_absolute_error\nimport math","f926c3a8":"from sklearn.linear_model import LinearRegression","57da6353":"lr = LinearRegression(normalize = True)\nlr.fit(X_train, y_train)","47b17783":"lr_predict = lr.predict(X_test)","44235243":"yp = lr.predict(X_test)\nprint(\"R2 Score:\", r2_score(y_test, lr_predict))\nprint(\"Mean Squarred Error:\", mean_squared_error(y_test, lr_predict))\nprint(\"RMSE:\", math.sqrt(mean_squared_error(y_test, lr_predict)))\nprint(\"Mean Absolute Error : \" + str(mean_absolute_error(y_test,lr_predict)))","9bdd28d2":"from xgboost import XGBRegressor\n\nxgb = XGBRegressor(n_estimators = 1000, learning_rate = 0.05)\nxgb.fit(X_train, y_train)\n\npredict = xgb.predict(X_test)","2d673e77":"print(\"R2 Score:\", r2_score(y_test, predict))\nprint(\"Mean Squarred Error:\", mean_squared_error(y_test, predict))\nprint(\"RMSE:\", math.sqrt(mean_squared_error(y_test, predict)))\nprint(\"Mean Absolute Error : \" + str(mean_absolute_error(y_test,predict)))","6ed6eca9":"All of them are highly postively correlated with 'Sales'.","a0541f37":"# Modeling and Evaluation Metrics","cc2b4f6e":"### Scaling Dataset","b026fa90":"- Social Media is left skewed.","bebc57f9":"## Exploratory Data Analysis","c598623d":"### Linear Regression","501b35c0":"### Splitting Dataset","1e89dfd0":"# Mutlivariate Analysis \n\nLet's check all the numerical variables in term of 'Sales'","cd8e945c":"## Univariate Analysis (Independent Attributes)","be34f7c3":"Every one has almost equal significance on 'Sales'","b9a694d7":"### Analysis Categorical Attribute","63395266":"## Check Missing Values","574650ef":"## Univariate Analysis (Target Attribute)","f84e58ff":"### Encoding","2a836be1":"### Imputing Missing Values\n\n'Sales' is the target variable, we don't want to keep a random variable there, so we will drop them. However, 'TV','Social Media','Radio' are numerical attribute. We will use 'median' to impute the missing values.\n","2c1ac093":"### XGBoost Regressor","f2db0e2f":"## Dataset Preparation"}}