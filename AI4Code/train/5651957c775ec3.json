{"cell_type":{"1418eea4":"code","71775d98":"code","7820c2b2":"code","9ffe0113":"code","234adad2":"code","5f1ee4be":"code","5dc4b666":"code","99b39e06":"code","94e02d39":"code","53780c7e":"code","fcb8fd7a":"code","64aa76b4":"code","6833bea8":"code","c923dae0":"code","c483fb5c":"code","ed1396d4":"code","467122c5":"code","668f9b3a":"code","dcde022d":"code","c0447947":"code","34872759":"code","5fda4167":"code","8f3a18bd":"code","50426f7d":"code","0e75c05e":"markdown","3e449deb":"markdown","614400fc":"markdown","17dcab3a":"markdown","b5537419":"markdown","f255e4f2":"markdown","f18062d3":"markdown","fd353454":"markdown","89d387cb":"markdown","768f902c":"markdown"},"source":{"1418eea4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","71775d98":"import numpy as np\nimport pandas as pd","7820c2b2":"trainingData = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\ncompetitionData = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')","9ffe0113":"trainingData.shape","234adad2":"competitionData.shape","5f1ee4be":"trainingData.head()","5dc4b666":"trainingData.set_index('Id',inplace = True)\ncompetitionData.set_index('Id',inplace = True)","99b39e06":"trainingDataColumns = list(trainingData) \n  \nfor c in trainingDataColumns: \n    if trainingData[c].dtype == 'O':\n        trainingData[c].fillna(value = 'Missing', inplace = True)\n    else :\n        trainingData[c].fillna(0, inplace = True)\n\ntrainingData.head()\n","94e02d39":"competitionDataColumns = list(competitionData) \n  \nfor f in competitionDataColumns: \n    if competitionData[f].dtype == 'O':\n        competitionData[f].fillna(value = 'Missing', inplace = True)\n    else :\n        competitionData[f].fillna(0, inplace = True)\n\ncompetitionData.head()","53780c7e":"trainingData = pd.get_dummies(trainingData)\ncompetitionData = pd.get_dummies(competitionData)","fcb8fd7a":"trainingData.head()","64aa76b4":"trainingData.shape\ncompetitionData.shape","6833bea8":"sp = trainingData['SalePrice']","c923dae0":"missingFeatures = list(set(trainingData.columns.values) - set(competitionData.columns.values))\ntrainingData = trainingData.drop(missingFeatures,axis=1)","c483fb5c":"missingFeatures = list(set(competitionData.columns.values) - set(trainingData.columns.values))\ncompetitionData = competitionData.drop(missingFeatures,axis=1)","ed1396d4":"trainingData.shape","467122c5":"competitionData.shape","668f9b3a":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(trainingData, sp, random_state=0)","dcde022d":"## Load ML algorithm","c0447947":"\nfrom sklearn.linear_model import Lasso","34872759":"myModel = Lasso(alpha=298.4).fit(X_train,y_train)","5fda4167":"submission = pd.DataFrame(myModel.predict(competitionData), columns=['SalePrice'], index = competitionData.index)","8f3a18bd":"display(submission.head())","50426f7d":"submission.to_csv(\"submission-lv.csv\")","0e75c05e":"## Load data","3e449deb":"### Handle misiing value","614400fc":"Copy label into variable sp","17dcab3a":"## dropping the features that are not present in both sets","b5537419":"### Determine size","f255e4f2":"### All set...now generate csv file for submission","f18062d3":"## Transform discrete values to columns with numbers","fd353454":"## Now we should split data into training and testing","89d387cb":"### Make id as index","768f902c":"# All done, Now just we need to upload this submission file."}}