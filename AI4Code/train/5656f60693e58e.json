{"cell_type":{"dea03710":"code","1ed0db21":"code","371a64fe":"code","ee9a558a":"code","07958dae":"code","14c3e88f":"code","4378b3a0":"code","7754a8f8":"code","90bcb3b9":"code","7e661d06":"code","ab28eff3":"code","07b2b612":"code","4497ef90":"code","a58f1005":"code","66ef8010":"code","a4422039":"code","87cba70e":"code","da5c2aac":"code","0f287319":"code","a93c031b":"code","cd30d135":"code","3f7ce755":"code","9fedb695":"code","ffd0fec4":"code","0c42ee1b":"code","6c272aed":"code","ce41f80b":"code","32df5ef9":"code","ef742ce0":"code","f217c220":"code","de80880f":"code","8bf1c8b8":"code","b329f99d":"markdown","e08e61fd":"markdown","8a4bce8d":"markdown","b871c749":"markdown","d71b360d":"markdown","a90ff6de":"markdown","a207064d":"markdown","619cf06b":"markdown","bcd43bc8":"markdown","5bdd3158":"markdown","a79064e8":"markdown","4ae714f2":"markdown","40189636":"markdown","9bca4058":"markdown","6b192eaa":"markdown","a30a7ad7":"markdown","2a2c39f9":"markdown","27da9484":"markdown","f5cae090":"markdown","80f5e013":"markdown","27f2edf0":"markdown","562ce736":"markdown","c6bb8b5a":"markdown","397e73c5":"markdown","3d7a9394":"markdown"},"source":{"dea03710":"# packages\n\n# standard\nimport numpy as np\nimport pandas as pd\n\n# plots\nimport matplotlib.pyplot as plt\nimport seaborn as sns","1ed0db21":"# import training data file\ndf = pd.read_csv('..\/input\/vinbigdata-chest-xray-abnormalities-detection\/train.csv')\ndf.head()","371a64fe":"# dimensions\ndf.shape","ee9a558a":"# image id\ndf.image_id.value_counts()","07958dae":"# image id - plot frequencies (top 25)\nfig = plt.figure(figsize = (12,4))\ndf.image_id.value_counts()[0:25].plot(kind='bar', color='darkred')\nplt.title('25 images with most rows in train.csv')\nplt.ylabel('Number of rows in train.csv')\nplt.grid()\nplt.show()","14c3e88f":"# classes (name)\nprint(df.class_name.value_counts())\ndf.class_name.value_counts().plot(kind='bar')\nplt.title('Class Name')\nplt.grid()\nplt.show()","4378b3a0":"# radiologists\nprint(df.rad_id.value_counts())\ndf.rad_id.value_counts().plot(kind='bar', color='darkgreen')\nplt.title('Radiologists')\nplt.grid()\nplt.show()","7754a8f8":"# let's pick an image with lots of labels\ndf_example = df[df.image_id=='fa109c087e46fe1ea27e48ce6d154d2f']\ndf_example","90bcb3b9":"# classes for this image\ndf_example.class_name.value_counts()","7e661d06":"# radiologists for this image\ndf_example.rad_id.value_counts()","ab28eff3":"# cross table\npd.crosstab(df_example.class_name, df_example.rad_id)","07b2b612":"# cross table of classes \/ radiologists\nctab = pd.crosstab(df.class_name, df.rad_id)\nctab","4497ef90":"# visualize as heatmap\nfig = plt.figure(figsize = (18,10))\nsns.heatmap(ctab, annot=True)\nplt.show()","a58f1005":"# normalize each column\nctab_norm_rad = ctab \/ ctab.sum()\n# and visualize result as heatmap\nfig = plt.figure(figsize = (18,10))\nsns.heatmap(ctab_norm_rad, annot=True)\nplt.show()","66ef8010":"# let's plot the individual distributions again as bar charts\nmy_list = ['R11','R12','R13','R14','R15','R16','R17']\nfor rad in my_list:\n    ctab_norm_rad[rad].plot(kind='bar')\n    plt.title(rad)\n    plt.grid()\n    plt.show()","a4422039":"# let's plot the individual distributions again as bar charts\nmy_list = ['R8','R9','R10']\nfor rad in my_list:\n    ctab_norm_rad[rad].plot(kind='bar')\n    plt.title(rad)\n    plt.grid()\n    plt.show()","87cba70e":"# normalize each row\nctab_norm_class = (ctab.transpose() \/ ctab.sum(axis=1)).transpose()\n# and visualize result as heatmap\nfig = plt.figure(figsize = (18,10))\nsns.heatmap(ctab_norm_class, annot=True)\nplt.show()","da5c2aac":"# example: pick the row of \"No finding\"\nnofind_dist_on_rad = ctab_norm_class[ctab_norm_class.index=='No finding']\n\nfig = plt.figure(figsize = (12,4))\nplt.bar(x=nofind_dist_on_rad.columns.to_list(),\n        height=np.asarray(nofind_dist_on_rad).flatten(),\n        color='darkgreen')\nplt.title('Distribution of no findings across radiologists (sum=100%)')\nplt.grid()\nplt.show()","0f287319":"df_pivot_class = pd.pivot_table(data=df[['image_id','class_name','class_id']],\n                                # class_id is used as dummy column for counting only\n                                index='image_id', # group by image_id\n                                columns=['class_name'], # new columns created from classes\n                                fill_value=0,\n                                aggfunc='count' # count values\n                               )\ndf_pivot_class = df_pivot_class.class_id\n# add count of labels\ndf_pivot_class['sum_labels'] = df_pivot_class.sum(axis=1)\n\n# preview\ndf_pivot_class.head(10)","a93c031b":"df_empty = df_pivot_class[df_pivot_class['No finding'] == df_pivot_class.sum_labels]\ndf_empty","cd30d135":"# visualize (subset of) pivot table\nn_sub = 50\nplt.figure(figsize=(8,12))\nsns.heatmap(df_pivot_class.iloc[0:n_sub,0:15])\nplt.show()","3f7ce755":"df_pivot_rad = pd.pivot_table(data=df[['image_id','rad_id','class_id']],\n                              # class_id is used as dummy column for counting only\n                              index='image_id', # group by image_id\n                              columns=['rad_id'], # new columns created from rad_id's\n                              fill_value=0,\n                              aggfunc='count' # count values\n                             )\ndf_pivot_rad = df_pivot_rad.class_id\n\n# add distinct count of radiologists and count of labels\ntemp1 = np.count_nonzero(df_pivot_rad, axis=1)\ntemp2 = df_pivot_rad.sum(axis=1)\ndf_pivot_rad['n_rads'] = temp1\ndf_pivot_rad['sum_labels'] = temp2\n\n# preview\ndf_pivot_rad.head(10)","9fedb695":"df_pivot_rad.n_rads.value_counts() # check counts","ffd0fec4":"# visualize (subset of) pivot table\nn_sub = 50\nplt.figure(figsize=(8,12))\nsns.heatmap(df_pivot_rad.iloc[0:n_sub,0:17])\nplt.show()","0c42ee1b":"# make pivot tables available for download\ndf_pivot_class.to_csv('df_pivot_class.csv')\ndf_pivot_rad.to_csv('df_pivot_rad.csv')","6c272aed":"# use only rows having findings\ndfxy = df[df.class_name != 'No finding'].copy()","ce41f80b":"# define some new features\ndfxy['dx'] = dfxy.x_max - dfxy.x_min   # width\ndfxy['dy'] = dfxy.y_max - dfxy.y_min   # height\ndfxy['dxdy'] = dfxy.dx * dfxy.dy       # pixel area\ndfxy['dy_over_dx'] = dfxy.dy \/ dfxy.dx # aspect ratio\n\nfeatures_num = ['x_min', 'x_max', 'y_min', 'y_max', \n                'dx', 'dy', 'dxdy', 'dy_over_dx']","32df5ef9":"# basic stats\ndfxy[features_num].describe()","ef742ce0":"for f in features_num:\n    plt.figure(figsize=(10,4))\n    dfxy[f].plot(kind='hist', bins=200)\n    plt.grid()\n    plt.title(f)\n    plt.show()","f217c220":"sns.pairplot(data=dfxy[features_num],\n             plot_kws={'alpha': 0.1})\nplt.show()","de80880f":"# use only the main features\nsns.pairplot(dfxy[['class_name','x_min','x_max','y_min','y_max']], \n             hue='class_name',\n             plot_kws={'alpha': 0.5})\nplt.show()","8bf1c8b8":"dfxy_sub = dfxy[dfxy.class_name.isin(['Cardiomegaly','Aortic enlargement'])]\n\nsns.pairplot(dfxy_sub[['class_name','rad_id','x_min','x_max','y_min','y_max']], \n             hue='class_name',\n             plot_kws={'alpha': 0.5})\nplt.show()","b329f99d":"### Nice from an aesthetic perspective, but probably too much information. Let's reduce the plot to only two classes:","e08e61fd":"#### R1, R3, R4, R5, R6 and R7 have no findings at all. R2 has only 3 findings.","8a4bce8d":"## Plot coordinate based features","b871c749":"<a id='5'><\/a>\n# Geometry","d71b360d":"#### We can use this to find out the images w\/o relevant labels:","a90ff6de":"#### We want to reduce the training data to 15'000 rows corresponding to the 15'000 distinct images. For this we aggregate the labels and store the counts in new columns. Of course, we are losing information by doing this!","a207064d":"<a id='1'><\/a>\n# Univariate Frequencies","619cf06b":"# > Normalize table for each radiologist (column)","bcd43bc8":"#### R11, R12, R13, R14, R15, R16 and R17 have mostly (>= 80%) no findings.\n","5bdd3158":"#### We have 67'914 rows of data, but only 15'000 unique images. Each image occurs at least 3 times in train.csv.","a79064e8":"#### We always have exactly 3 radiologist looking at an image (see also data description):","4ae714f2":"#### Only R8, R9 and R10 show a somewhat diversified labelling.","40189636":"## Scatter Plots","9bca4058":"# Table of Contents:\n* [Univariate Frequencies](#1)\n* [Check structure for an invididual Image](#2)\n* [Bivariate Perspective (Classes\/Radiologists)](#3)\n* [Pivot Tables for Classes and Radiologists](#4)\n* [Geometry](#5)","6b192eaa":"### Now colored by class","a30a7ad7":"#### Conclusion: 10'606 of 15'000 images (70.7%) have no (non-trivial) labels!","2a2c39f9":"#### R8, R9, R10 did much more labelling than the other radiologists.","27da9484":"# > Normalize table for each class (row)","f5cae090":"### Classes","80f5e013":"### Pivot Table for radiologists:","27f2edf0":"<a id='3'><\/a>\n# Bivariate perspective","562ce736":"### Straight pairwise scatter plot","c6bb8b5a":"<a id='4'><\/a>\n# Pivot Tables for classes and radiologists","397e73c5":"### Radiologists","3d7a9394":"<a id='2'><\/a>\n# Check structure for an individual image"}}