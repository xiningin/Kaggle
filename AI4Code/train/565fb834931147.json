{"cell_type":{"b4181cb4":"code","c5125ee2":"code","61f38609":"code","9e2b6009":"code","503e86be":"code","23036bb2":"code","fca43950":"code","832b1521":"code","8c44fd37":"code","a7310867":"code","0906b593":"code","b5c06e8b":"code","f75d5adf":"code","35bc9e4d":"code","f21489b0":"code","03f6f69e":"code","11ded167":"code","ff2f77ac":"markdown","94277a44":"markdown","6fe32b98":"markdown","8ed50865":"markdown","6f1986c8":"markdown","a938ba00":"markdown","237ec0de":"markdown","23e9fcb4":"markdown","2fbb0c47":"markdown","580677bf":"markdown","44f37c9f":"markdown","60207efd":"markdown","42b9e58c":"markdown","b46ac549":"markdown","d4c38a09":"markdown","b7b009a1":"markdown","f6c54881":"markdown","8abbb64d":"markdown","6d7e3ff1":"markdown","5da7c964":"markdown","f0c715f3":"markdown","1f782e65":"markdown","c2f0d48f":"markdown","a54913cd":"markdown","17a080d4":"markdown"},"source":{"b4181cb4":"import matplotlib.pyplot as plt\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","c5125ee2":"df = pd.read_csv('https:\/\/storage.googleapis.com\/dqlab-dataset\/data_retail.csv', sep=';')\n\nprint('Lima data teratas:')\nprint(df.head())\n\nprint('\\nInfo dataset:')\nprint(df.info())","61f38609":"# Kolom First_Transaction\ndf['First_Transaction'] = pd.to_datetime(df['First_Transaction']\/1000, unit='s', origin='1970-01-01')\n# Kolom Last_Transaction\ndf['Last_Transaction'] = pd.to_datetime(df['Last_Transaction']\/1000, unit='s', origin='1970-01-01')\n\nprint('Lima data teratas:')\nprint(df.head())\n\nprint('\\nInfo dataset:')\nprint(df.info())","9e2b6009":"# Pengecekan transaksaksi terakhir dalam dataset\nprint(max(df['Last_Transaction']))\n\n# Klasifikasikan customer yang berstatus churn atau tidak dengan boolean\ndf.loc[df['Last_Transaction']<='2018-08-01', 'is_churn'] = True\ndf.loc[df['Last_Transaction']>'2018-08-01', 'is_churn'] = False \n\nprint('Lima data teratas:')\nprint(df.head())\n\nprint('\\nInfo dataset:')\nprint(df.info())","503e86be":"# Hapus kolom-kolom yang tidak diperlukan\ndel df['no']\ndel df['Row_Num']\n\n# Cetak lima data teratas\nprint(df.head())","23036bb2":"# Kolom tahun transaksi pertama\ndf['Year_First_Transaction'] = df['First_Transaction'].dt.year\n# Kolom tahun transaksi terakhir\ndf['Year_Last_Transaction'] = df['Last_Transaction'].dt.year\n\ndf_year = df.groupby(['Year_First_Transaction'])['Customer_ID'].count()\ndf_year.plot(x='Year_First_Transaction', y='Customer_ID', kind='bar', title='Graph of Customer Acquisition')\nplt.xlabel('Year_First_Transaction')\nplt.ylabel('Num_of_Customer')\nplt.tight_layout()\nplt.show()","fca43950":"plt.clf()\ndf_year = df.groupby(['Year_First_Transaction'])['Count_Transaction'].sum()\ndf_year.plot(x='Year_First_Transaction', y='Count_Transaction', kind='bar', title='Graph of Transaction Customer')\nplt.xlabel('Year_First_Transaction')\nplt.ylabel('Num_of_Transaction')\nplt.tight_layout()\nplt.show()","832b1521":"plt.clf()\nsns.pointplot(data = df.groupby(['Product', 'Year_First_Transaction']).mean().reset_index(),\nx='Year_First_Transaction',\ny='Average_Transaction_Amount',\nhue='Product')\nplt.tight_layout()\nplt.show()","8c44fd37":"plt.clf()\n# Melakukan pivot data\ndf_piv = df.pivot_table(index='is_churn',\ncolumns='Product',\nvalues='Customer_ID',\naggfunc='count',\nfill_value=0)\n# Mendapatkan Proportion Churn by Product\nplot_product = df_piv.count().sort_values(ascending=False).head(5).index\n# Plot pie chartnya\ndf_piv = df_piv.reindex(columns=plot_product)\ndf_piv.plot.pie(subplots=True,\nfigsize=(10, 7),\nlayout=(-1, 2),\nautopct='%1.0f%%',\ntitle='Proportion Churn by Product')\nplt.tight_layout()\nplt.show()","a7310867":"plt.clf()\n\n# Kategorisasi jumlah transaksi\ndef func(row):\n    if row['Count_Transaction'] == 1:\n        val = '1. 1'\n    elif (row['Count_Transaction'] >1 and row['Count_Transaction'] <= 3):\n        val ='2. 2 - 3'\n    elif (row['Count_Transaction'] >3 and row['Count_Transaction'] <= 6):\n        val ='3. 4 - 6'\n    elif (row['Count_Transaction'] >6 and row['Count_Transaction'] <= 10):\n        val ='4. 7 - 10'\n    else:\n        val ='5. >10'\n    return val\n\n# Tambahkan kolom baru\ndf['Count_Transaction_Group'] = df.apply(func, axis=1)\n\ndf_year = df.groupby(['Count_Transaction_Group'])['Customer_ID'].count()\ndf_year.plot(x='Count_Transaction_Group', y='Customer_ID', kind='bar', title='Customer Distribution by Count Transaction Group')\nplt.xlabel('Count_Transaction_Group')\nplt.ylabel('Num_of_Customer')\nplt.tight_layout()\nplt.show()","0906b593":"plt.clf()\n# Kategorisasi rata-rata besar transaksi\ndef f(row):\n    if (row['Average_Transaction_Amount'] >= 100000 and row['Average_Transaction_Amount'] <=200000):\n        val ='1. 100.000 - 250.000'\n    elif (row['Average_Transaction_Amount'] >250000 and row['Average_Transaction_Amount'] <= 500000):\n        val ='2. >250.000 - 500.000'\n    elif (row['Average_Transaction_Amount'] >500000 and row['Average_Transaction_Amount'] <= 750000):\n        val ='3. >500.000 - 750.000'\n    elif (row['Average_Transaction_Amount'] >750000 and row['Average_Transaction_Amount'] <= 1000000):\n        val ='4. >750.000 - 1.000.000'\n    elif (row['Average_Transaction_Amount'] >1000000 and row['Average_Transaction_Amount'] <= 2500000):\n        val ='5. >1.000.000 - 2.500.000'\n    elif (row['Average_Transaction_Amount'] >2500000 and row['Average_Transaction_Amount'] <= 5000000):\n        val ='6. >2.500.000 - 5.000.000'\n    elif (row['Average_Transaction_Amount'] >5000000 and row['Average_Transaction_Amount'] <= 10000000):\n        val ='7. >5.000.000 - 10.000.000'\n    else:\n        val ='8. >10.000.000'\n    return val\n\n# Tambahkan kolom baru\ndf['Average_Transaction_Amount_Group'] = df.apply(f, axis=1)\n\ndf_year = df.groupby(['Average_Transaction_Amount_Group'])['Customer_ID'].count()\ndf_year.plot(x='Average_Transaction_Amount_Group', y='Customer_ID',kind='bar', title='Customer Distribution by Average Transaction Amount Group')\nplt.xlabel('Average_Transaction_Amount_Group')\nplt.ylabel('Num_of_Customer')\nplt.tight_layout()\nplt.show()","b5c06e8b":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import confusion_matrix\nimport numpy as np\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score","f75d5adf":"# Feature column: Year_Diff\ndf['Year_Diff']=df['Year_Last_Transaction']-df['Year_First_Transaction']\n\n# Nama-nama feature columns\nfeature_columns = ['Average_Transaction_Amount', 'Count_Transaction', 'Year_Diff']\n\n# Features variable\nX = df[feature_columns]\n\n# Target variable\ny = df['is_churn']\ny = y.astype('int')","35bc9e4d":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=0)","f21489b0":"# Inisiasi model logreg\nlogreg = LogisticRegression()\n\n# fit the model with data\nlogreg.fit(X_train, y_train)\n\n# Predict model\ny_pred=logreg.predict(X_test)\n\n# Evaluasi model menggunakan confusion matrix\ncnf_matrix = confusion_matrix(y_test, y_pred)\nprint('Confusion Matrix:\\n', cnf_matrix)","03f6f69e":"plt.clf()\n# name of classes\nclass_names = [0, 1]\nfig, ax = plt.subplots()\n\ntick_marks = np.arange(len(class_names))\nplt.xticks(tick_marks, class_names)\nplt.yticks(tick_marks, class_names)\n\n# create heatmap\nsns.heatmap(pd.DataFrame(cnf_matrix), annot=True, cmap='YlGnBu', fmt='g')\nax.xaxis.set_label_position('top')\nplt.title('Confusion matrix', y=1.1)\nplt.ylabel('Actual')\nplt.xlabel('Predicted')\nplt.tight_layout()\nplt.show()","11ded167":"#Menghitung Accuracy, Precision, dan Recall\nprint('Accuracy :', accuracy_score(y_test, y_pred))\nprint('Precision:', precision_score(y_test, y_pred, average='micro'))\nprint('Recall :', recall_score(y_test, y_pred, average='micro'))","ff2f77ac":"<h1 style=\"text-align:center\">   \n      <font color = black > Sport Center Market Research - Case Study <\/font>    \n<\/h1>   \n<h3 style=\"text-align:center\">   \n      <font color = gray > (Both case study and dataset are provided by dqlab.id) <\/font>    \n<\/h3>\n<hr style=\"width:100%;height:5px;border-width:0;color:gray;background-color:gray\">\n<center><img style = \"height:450px;\" src=\"https:\/\/media.istockphoto.com\/vectors\/people-shopping-for-shoes-in-a-sporting-store-vector-id488412196?k=6&m=488412196&s=612x612&w=0&h=tJVoOM81DxWoIQIflx7BNy0thoC0uHLfstFYcbLmCqo=\"><\/center>\n","94277a44":"Calculate accuracy, Precision, dan Recall","6fe32b98":"Visualization of churned customer proportion for each product","8ed50865":"# Content\n1. [Load Data](#1)\n2. [Variable Description](#2)\n3. [Data Preparation](#3)\n4. [Data Visualization](#4)\n5. [Modelling](#5)","6f1986c8":"# Introduction","a938ba00":"<a id = \"3\" ><\/a>\n# Data Preparation","237ec0de":"Distribution of transaction average category, based on following table.","23e9fcb4":"Train, predict dan evaluate","2fbb0c47":"<a id = \"4\" ><\/a>\n# Data Visualization","580677bf":"Identify churn customer","44f37c9f":"Trend of customer acquisition by year","60207efd":"<a id = \"1\" ><\/a>\n# Load Data","42b9e58c":"Distribution of customer cateogry, based on following table.","b46ac549":"![](https:\/\/i.ibb.co\/YXHKj0g\/Capture.png)","d4c38a09":"<a id = \"2\" ><\/a>\n# Variable Description\n\n1. No                         : row number\n2. Row_Num: row number\n3. Customer_ID: ID of customer\n4. Product: product type\n5. First_Transaction: date of transaction when customer first time buying the certain product type\n6. Last_Transaction: date of transaction when customer last time buying the certain product type\n7. Average_Transaction_Amount: average of transaction amount\n8. Count_Transaction: how many times the transaction has occured","b7b009a1":"<a id = \"5\" ><\/a>\n# Modelling","f6c54881":"![](https:\/\/i.ibb.co\/8XTj970\/Capture.png)","8abbb64d":"Visualisation of Confusion Matrix using heatmap from seaborn","6d7e3ff1":"Plot of average transaction amount by year\n","5da7c964":"DQLab sport center is a shop that sells a variety of sports needs such as jackets, clothes, bags and shoes. This store started selling since 2013, so it has had regular customers for a long time, and is still trying to get new customers to this day.\n\nAt the beginning of 2019, there was a problem at the store, which is the decreasing number of customers who come back into the store. A customer is no longer called a customer (churn) when he or she is no longer transacting to the shop up to the last 6 months from the last available data update. The main objective of this study is to manage the market research with provided data to solve the mentioned problem.\n\n(Both case study and dataset are provided by dqlab.id)","f0c715f3":"Remove column 'no' and 'Row_num' (uneccessary columns)","1f782e65":"Visualization of transaction by year","c2f0d48f":"Split X and y to train and test set","a54913cd":"* Create 'Year_Diff' column by substracting Year_First_Transaction from Year_Last_Transaction\n* Identify column 'Average_Transaction_Amount', 'Count_Transaction', and 'Year_Diff' as feature columns\n* Column 'is_churn' as target variable","17a080d4":"Convert column 'First_Transaction' and 'Last_Transaction' to datetime type"}}