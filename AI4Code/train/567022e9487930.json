{"cell_type":{"d45211fc":"code","354d051b":"code","4026b0bd":"code","43588e14":"code","122c032a":"code","d9fb03e5":"code","178ae5c5":"code","537f37db":"code","8bc1a350":"code","edd240a4":"code","2cd58f06":"code","c2739a03":"code","b6c5833d":"code","afeb0304":"code","5d49e4ef":"code","0f7dfa43":"code","6960cde8":"code","5928a7b8":"code","93a14dc5":"code","3db6ab03":"code","a0b7e2a6":"code","88da2d0b":"code","8fe97616":"code","71fc69a5":"code","2c5fead3":"code","246f27cb":"code","0089b182":"code","5c2d34b9":"code","152f90b9":"code","8896b0ff":"code","4487d501":"code","dce44889":"code","ab3ebe2b":"code","ea57987a":"code","73f88c66":"code","685844b0":"code","cead05fc":"code","e52463e5":"code","0c40d121":"code","9788e3fa":"code","74782d5e":"code","a584bcce":"code","9a944e11":"code","941d433f":"code","725afa88":"code","cd360314":"code","a05f120e":"code","196ff0d5":"code","3f6ac07d":"code","c40ffce6":"code","b8a84a85":"code","722c00fa":"code","b0d32355":"code","aa7ae5c1":"code","3fa6186c":"code","09a4115a":"code","7d7af948":"code","6957b1ae":"code","6a33c6c3":"code","8eb6638f":"code","a19cfb28":"code","ae2b0dbe":"markdown"},"source":{"d45211fc":"import numpy as np # linear algebra\nimport pandas as pd # Data preprocessing\n\n# Visualization\nimport seaborn as sns \nimport matplotlib.pyplot as plt\nimport missingno as mn\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","354d051b":"train = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv\")","4026b0bd":"train.head()","43588e14":"mn.matrix(train, figsize = (30,10))","122c032a":"train.shape","d9fb03e5":"train.info()","178ae5c5":"train['LotFrontage'] = train['LotFrontage'].fillna(train['LotFrontage'].mean())","537f37db":"train.drop(['Alley'], axis = 1, inplace = True)","8bc1a350":"train['BsmtCond'] = train['BsmtCond'].fillna(train['BsmtCond'].mode()[0])\ntrain['BsmtQual'] = train['BsmtQual'].fillna(train['BsmtQual'].mode()[0])","edd240a4":"train['FireplaceQu'] = train['FireplaceQu'].fillna(train['FireplaceQu'].mode()[0])\ntrain['GarageType'] = train['GarageType'].fillna(train['GarageType'].mode()[0])","2cd58f06":"train.drop(['GarageYrBlt'], axis = 1, inplace = True)","c2739a03":"train['GarageFinish'] = train['GarageFinish'].fillna(train['GarageFinish'].mode()[0])\ntrain['GarageQual'] = train['GarageQual'].fillna(train['GarageQual'].mode()[0])\ntrain['GarageCond'] = train['GarageCond'].fillna(train['GarageCond'].mode()[0])","b6c5833d":"train.drop(['PoolQC','Fence','MiscFeature', 'Id'], axis = 1, inplace = True)","afeb0304":"train.shape","5d49e4ef":"train.isnull().sum().sum()","0f7dfa43":"train['MasVnrType'] = train['MasVnrType'].fillna(train['MasVnrType'].mode()[0])\ntrain['MasVnrArea'] = train['MasVnrArea'].fillna(train['MasVnrArea'].mode()[0])","6960cde8":"mn.matrix(train, figsize = (30, 10))","5928a7b8":"train['BsmtExposure'] = train['BsmtExposure'].fillna(train['BsmtExposure'].mode()[0])\ntrain['BsmtFinType2'] = train['BsmtFinType2'].fillna(train['BsmtFinType2'].mode()[0])","93a14dc5":"train.dropna(inplace = True)","3db6ab03":"train.shape","a0b7e2a6":"train.head()","88da2d0b":"#Categorical columns:\ncolumns=['MSZoning','Street','LotShape','LandContour','Utilities','LotConfig','LandSlope','Neighborhood',\n         'Condition2','BldgType','Condition1','HouseStyle','SaleType',\n        'SaleCondition','ExterCond',\n         'ExterQual','Foundation','BsmtQual','BsmtCond','BsmtExposure','BsmtFinType1','BsmtFinType2',\n        'RoofStyle','RoofMatl','Exterior1st','Exterior2nd','MasVnrType','Heating','HeatingQC',\n         'CentralAir',\n         'Electrical','KitchenQual','Functional',\n         'FireplaceQu','GarageType','GarageFinish','GarageQual','GarageCond','PavedDrive']","8fe97616":"len(columns)","71fc69a5":"def category_onehot_multcols(multcolumns):\n    df_final = final_df\n    i = 0\n    for fields in multcolumns:\n        \n        print(fields)\n        df1 = pd.get_dummies(final_df[fields], drop_first = True)\n        \n        final_df.drop([fields], axis=1, inplace=True)\n        if i == 0:\n            df_final = df1.copy()\n        else:\n            \n            df_final = pd.concat([df_final, df1], axis=1)\n        i = i + 1 \n       \n        \n    df_final = pd.concat([final_df, df_final], axis=1)\n        \n    return df_final","2c5fead3":"main = train.copy()","246f27cb":"# Handle test data","0089b182":"test_df.shape","5c2d34b9":"test_df.head()","152f90b9":"test_df.isnull().sum()","8896b0ff":"test_df['LotFrontage']=test_df['LotFrontage'].fillna(test_df['LotFrontage'].mean())\ntest_df['MSZoning']=test_df['MSZoning'].fillna(test_df['MSZoning'].mode()[0])\ntest_df['BsmtCond']=test_df['BsmtCond'].fillna(test_df['BsmtCond'].mode()[0])\ntest_df['BsmtQual']=test_df['BsmtQual'].fillna(test_df['BsmtQual'].mode()[0])\ntest_df['FireplaceQu']=test_df['FireplaceQu'].fillna(test_df['FireplaceQu'].mode()[0])\ntest_df['GarageType']=test_df['GarageType'].fillna(test_df['GarageType'].mode()[0])\ntest_df['GarageFinish']=test_df['GarageFinish'].fillna(test_df['GarageFinish'].mode()[0])\ntest_df['GarageQual']=test_df['GarageQual'].fillna(test_df['GarageQual'].mode()[0])\ntest_df['GarageCond']=test_df['GarageCond'].fillna(test_df['GarageCond'].mode()[0])","4487d501":"test_df.drop(['PoolQC','Fence','MiscFeature', 'Alley', 'GarageYrBlt', 'Id'],axis=1,inplace=True)","dce44889":"test_df['MasVnrType']=test_df['MasVnrType'].fillna(test_df['MasVnrType'].mode()[0])\ntest_df['MasVnrArea']=test_df['MasVnrArea'].fillna(test_df['MasVnrArea'].mode()[0])","ab3ebe2b":"test_df.shape","ea57987a":"mn.matrix(test_df, figsize = (30, 10))","73f88c66":"test_df['BsmtExposure'] = test_df['BsmtExposure'].fillna(test_df['BsmtExposure'].mode()[0])\ntest_df['BsmtFinType2'] = test_df['BsmtFinType2'].fillna(test_df['BsmtFinType2'].mode()[0])","685844b0":"mn.matrix(test_df, figsize = (30, 10))","cead05fc":"test_df.loc[:, test_df.isnull().any()].head()","e52463e5":"test_df['Utilities']=test_df['Utilities'].fillna(test_df['Utilities'].mode()[0])\ntest_df['Exterior1st']=test_df['Exterior1st'].fillna(test_df['Exterior1st'].mode()[0])\ntest_df['Exterior2nd']=test_df['Exterior2nd'].fillna(test_df['Exterior2nd'].mode()[0])\ntest_df['BsmtFinType1']=test_df['BsmtFinType1'].fillna(test_df['BsmtFinType1'].mode()[0])\ntest_df['BsmtFinSF1']=test_df['BsmtFinSF1'].fillna(test_df['BsmtFinSF1'].mean())\ntest_df['BsmtFinSF2']=test_df['BsmtFinSF2'].fillna(test_df['BsmtFinSF2'].mean())\ntest_df['BsmtUnfSF']=test_df['BsmtUnfSF'].fillna(test_df['BsmtUnfSF'].mean())\ntest_df['TotalBsmtSF']=test_df['TotalBsmtSF'].fillna(test_df['TotalBsmtSF'].mean())\ntest_df['BsmtFullBath']=test_df['BsmtFullBath'].fillna(test_df['BsmtFullBath'].mode()[0])\ntest_df['BsmtHalfBath']=test_df['BsmtHalfBath'].fillna(test_df['BsmtHalfBath'].mode()[0])\ntest_df['KitchenQual']=test_df['KitchenQual'].fillna(test_df['KitchenQual'].mode()[0])\ntest_df['Functional']=test_df['Functional'].fillna(test_df['Functional'].mode()[0])\ntest_df['GarageCars']=test_df['GarageCars'].fillna(test_df['GarageCars'].mean())\ntest_df['GarageArea']=test_df['GarageArea'].fillna(test_df['GarageArea'].mean())\ntest_df['SaleType']=test_df['SaleType'].fillna(test_df['SaleType'].mode()[0])","0c40d121":"test_df.shape","9788e3fa":"test_df.head()","74782d5e":"final_df = pd.concat([train, test_df], axis = 0)","a584bcce":"final_df['SalePrice']","9a944e11":"final_df.shape","941d433f":"final_df = category_onehot_multcols(columns)","725afa88":"final_df.shape","cd360314":"final_df = final_df.loc[:, ~final_df.columns.duplicated()]","a05f120e":"final_df","196ff0d5":"df_train = final_df.iloc[:1422, :]\ndf_test = final_df.iloc[1422:, :]","3f6ac07d":"df_train.head()","c40ffce6":"df_test.head()","b8a84a85":"df_train.shape","722c00fa":"df_test.drop(['SalePrice'], axis = 1, inplace = True)","b0d32355":"Xtrain = df_train.drop(['SalePrice'], axis = 1)\nytrain = df_train['SalePrice']","aa7ae5c1":"from keras import backend as K\ndef root_mean_squared_error(y_true, y_pred):\n        return K.sqrt(K.mean(K.square(y_pred - y_true)))","3fa6186c":"import keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.layers import LeakyReLU,PReLU,ELU\n\n# Initialising the ANN\nclassifier = Sequential()\n\n# Adding the input layer and the first hidden layer\nclassifier.add(Dense(units = 50, kernel_initializer = 'he_uniform',activation='relu',input_dim = 174))\n\n# Adding the second hidden layer\nclassifier.add(Dense(units = 25, kernel_initializer = 'he_uniform',activation='relu'))\n\n# Adding the third hidden layer\nclassifier.add(Dense(units = 50, kernel_initializer = 'he_uniform',activation='relu'))\n\n# Adding the output layer\nclassifier.add(Dense(units = 1, kernel_initializer = 'he_uniform'))\n\n# Compiling the ANN\nclassifier.compile(loss=root_mean_squared_error, optimizer='Adamax')\n\n# Fitting the ANN in the training set\nmodel_history=classifier.fit(Xtrain.values, ytrain.values,validation_split=0.20, batch_size = 10, epochs = 3000)","09a4115a":"ann_pred=classifier.predict(df_test.values)","7d7af948":"sub = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv\")","6957b1ae":"submission = pd.DataFrame()\nsubmission['Id'] = sub['Id']\nsubmission['SalePrice'] = ann_pred\nsubmission.head()","6a33c6c3":"sub.head()","8eb6638f":"sub.shape == submission.shape","a19cfb28":"submission.to_csv(\"my_submission.csv\", index = False)\nprint(\"Send\")","ae2b0dbe":"# Kaggle House Prices Prediction"}}