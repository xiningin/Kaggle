{"cell_type":{"3794e047":"code","88177027":"code","c994682a":"code","6ccb9cf7":"code","63e79308":"code","d072fcf6":"code","0b942765":"code","71592379":"code","46eff8af":"code","535b2b80":"code","bed46bae":"code","6d7f5971":"code","c2d77954":"code","8f89d45d":"code","6604aa11":"code","427fb478":"code","4d8fe4bf":"code","bf2f8755":"code","c2870ae0":"code","259be137":"code","c8543976":"code","bf8a8313":"code","120d5d59":"code","68f28996":"code","3ddaf0fd":"code","735546a6":"code","1ccc2d0a":"code","2a3c83b2":"code","e43d3e90":"code","5b12a210":"code","31da77ca":"code","92d48a18":"code","35b930a8":"code","400d9300":"code","b7104d1a":"code","7881dd07":"code","ad7f7106":"code","077bf17b":"code","85f0a6cc":"code","9714d6b6":"code","d088f2c6":"code","65eac3d0":"code","40c3f387":"code","92b6005c":"code","7183ba8b":"code","2b731f65":"markdown","47182f6c":"markdown","3728c2e7":"markdown","391ca2f3":"markdown","31e09415":"markdown","37e1ae49":"markdown","616109ee":"markdown","0a8f4554":"markdown","cf413779":"markdown","6d769830":"markdown"},"source":{"3794e047":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","88177027":"train_data = pd.read_csv('..\/input\/nlp-getting-started\/train.csv')\ntest_data = pd.read_csv('..\/input\/nlp-getting-started\/test.csv')\n\nprint(f'train shape => {train_data.shape}')\nprint(f'test shape => {test_data.shape}')","c994682a":"train_data.sample(5)","6ccb9cf7":"test_data.sample(5)","63e79308":"train_data.describe(include=['O'])","d072fcf6":"test_data.describe(include=['O'])","0b942765":"def missing_values(data: pd.DataFrame) -> pd.DataFrame:\n    miss_value_percent = data.isna().sum() \/ data.shape[0] * 100\n    return pd.DataFrame(miss_value_percent, columns=['Missing_percent']).query('Missing_percent > 0')","71592379":"missing_values(train_data)","46eff8af":"missing_values(test_data)","535b2b80":"sns.countplot(train_data.target);\nplt.ylabel('Samples');","bed46bae":"train_data.query('target == 0').text.values[0]","6d7f5971":"train_data.query('target == 1').text.values[0]","c2d77954":"train_data.location.unique()","8f89d45d":"train_data.location.nunique()","6604aa11":"sns.barplot(y=train_data['location'].value_counts()[:10].index,\n            x=train_data['location'].value_counts()[:10]);","427fb478":"train_data.text.values","4d8fe4bf":"import re\nimport unidecode","bf2f8755":"url = re.compile('https?:\/\/\\S+|www\\.\\S+')","c2870ae0":"url.sub('', 'M1.94 [01:04 UTC]?5km S of Volcano Hawaii. http:\/\/t.co\/zDtoyd8EbJ')","259be137":"url.sub('', 'M1.94 [01:04 UTC]?5km S of Volcano Hawaii. http:\/\/t.co\/zDtoyd8EbJ')","c8543976":"import string","bf8a8313":"def preprocessing(text):\n    text = text.lower()\n    text = unidecode.unidecode(text)\n    \n    text = re.sub('\\[.*?\\]', '', text)\n    \n    text_without_url = re.sub('https?:\/\/\\S+|www\\.\\S+', '', text)\n    \n    text_without_tag = re.sub('<.*?>+', '', text_without_url)\n    \n    text = re.sub(f'[{re.escape(string.punctuation)}]', '', text_without_tag)\n    \n    text = re.sub('\\n', '', text)\n    text = re.sub('\\w*\\d\\w*', '', text)\n    \n    return text","120d5d59":"train_data = pd.read_csv('..\/input\/nlp-getting-started\/train.csv')\ntest_data = pd.read_csv('..\/input\/nlp-getting-started\/test.csv')","68f28996":"train_data.text = train_data.text.apply(preprocessing)\ntest_data.text = test_data.text.apply(preprocessing)","3ddaf0fd":"train_data.text","735546a6":"import nltk","1ccc2d0a":"tokenizer = nltk.tokenize.RegexpTokenizer(r'\\w+')","2a3c83b2":"train_data.text = train_data.text.apply(tokenizer.tokenize)\ntest_data.text = test_data.text.apply(tokenizer.tokenize)","e43d3e90":"train_data","5b12a210":"from nltk.corpus import stopwords","31da77ca":"train_data.text = train_data.text.apply(lambda text: [w for w in text if w not in stopwords.words('english')])\ntest_data.text = test_data.text.apply(lambda text: [w for w in text if w not in stopwords.words('english')])","92d48a18":"train_data.text = train_data.text.apply(lambda text: ' '.join(text))\ntest_data.text = test_data.text.apply(lambda text: ' '.join(text))","35b930a8":"train_data.text","400d9300":"from sklearn.feature_extraction.text import TfidfVectorizer","b7104d1a":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(train_data.text.values,\n                                                    train_data.target.values,\n                                                    stratify=train_data.target.values,\n                                                    test_size=0.2, random_state=1)","7881dd07":"tfidf = TfidfVectorizer(min_df=2, max_df=0.5, ngram_range=(1, 2))\ntrain_tfidf = tfidf.fit_transform(X_train)\ntest_tfidf = tfidf.transform(X_test)\ntest = tfidf.transform(test_data.text)","ad7f7106":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import f1_score\nfrom sklearn.model_selection import cross_val_score","077bf17b":"# def grid_params_model(model, params, X_train, y_train, X_dev, y_dev):\n# #     clf = Pipeline(steps=[('preprocessor', preprocessor),\n# #                       ('model', model)\n# #                      ])\n#     print(clf.get_params().keys())\n#     grid_search = GridSearchCV(clf, params, cv=5, scoring='f1')\n#     grid_search.fit(X_train, y_train)\n\n#     model_gs_best = grid_search.best_estimator_ \n\n#     metrics_name = [\"Mean cross-validated score\", \"f1_score train\", \"f1_score dev\"]\n#     metrics_values = [grid_search.best_score_,\n#                     f1_score(y_train, model_gs_best.predict(X_train)),\n#                     f1_score(y_dev, model_gs_best.predict(X_dev))\n#                      ]\n\n#     metrics_res = {k : v for k, v in zip(metrics_name, metrics_values)}\n\n#     return model_gs_best, metrics_res","85f0a6cc":"clf = LogisticRegression(C=1.0)\nscores = cross_val_score(clf, train_tfidf, y_train, cv=5, scoring=\"f1\")\nscores","9714d6b6":"clf.fit(train_tfidf, y_train)","d088f2c6":"f1_score(y_test, clf.predict(test_tfidf))","65eac3d0":"clf.predict(test)","40c3f387":"pd.read_csv('..\/input\/nlp-getting-started\/test.csv').id.values","92b6005c":"submission = pd.DataFrame({'id': pd.read_csv('..\/input\/nlp-getting-started\/test.csv').id.values,\n                           'target': clf.predict(test)})","7183ba8b":"submission.to_csv('submission.csv', index=False)","2b731f65":"# Describe","47182f6c":"# Examples tweets","3728c2e7":"# Missing data","391ca2f3":"# Distribution of the target variable","31e09415":"# Tokenization","37e1ae49":"# Examples data","616109ee":"# Load Data","0a8f4554":"# Preprocessing","cf413779":"# Remove stopwords","6d769830":"# Distribution of the target variable"}}