{"cell_type":{"c0727c25":"code","e765bf26":"code","5234e223":"code","14501814":"code","9d6255f2":"code","4c10a3b1":"code","0e8f2846":"code","6a537e9c":"code","8a8293e4":"code","70a649b1":"code","5c0139ed":"code","ce31ce9f":"code","a0624047":"code","09b64330":"code","e959ee6c":"code","2d34c4a8":"code","23f33812":"code","4c31d724":"code","3930094b":"code","ce59de5e":"code","04204abc":"code","b8e106dd":"code","8b49ae53":"code","5ce3dad3":"code","62da9adb":"code","54c8382b":"code","cb1d8973":"code","4f797dbb":"code","95659457":"code","be231ecc":"code","949195b2":"code","2248d241":"code","b6a7f937":"code","064b11fb":"markdown","d005957d":"markdown","1c9afd0c":"markdown","c2c70017":"markdown","f1f1427b":"markdown","4135eaa9":"markdown","c37dfda2":"markdown","b6f83137":"markdown","53b973f7":"markdown","ddd4ea91":"markdown","24862a40":"markdown","ef75e499":"markdown","c6b11fc9":"markdown","baddb980":"markdown","fd5975e0":"markdown","1d570af2":"markdown","87c997fb":"markdown"},"source":{"c0727c25":"import pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_samples, silhouette_score\nimport plotly.express as px\nimport warnings\nwarnings.filterwarnings('ignore')","e765bf26":"df = pd.read_csv('..\/input\/clicks-conversion-tracking\/KAG_conversion_data.csv')\nprint(df.columns)\nprint(df.shape)\ndf.head()","5234e223":"df.columns = df.columns.str.upper()\ndf.columns","14501814":"df.info()","9d6255f2":"# Investigating variables\nfor i in df.columns:\n    if df[i].nunique() < 10:\n        print(f'The column \"{i}\" is __{df[i].dtype}__ \\nhas __{df[i].nunique()}__ unique values: \\n{df[i].value_counts()}')\n        print(10*'==')\n    else:\n        print(f'The column \"{i}\" is __{df[i].dtype}__ \\nhas __{df[i].nunique()}__ unique values')\n        print(10*'==')","4c10a3b1":"# Summary statistics\ndf.describe()","0e8f2846":"print('Total ADS: {}'.format(df.shape[0]))\n\nprint('Number of ADS with 0 clicks: {}'.format(len(df.loc[df['CLICKS'] == 0])))\nprint('Number of 0 paids to FACEBOOK for showing ADS: {}'.format(len(df.loc[df['SPENT'] == 0])))\nprint('Number of ADS with 0 enquires about their product: {}'.format(len(df.loc[df['TOTAL_CONVERSION'] == 0])))\nprint('Number of ADS with 0 buys: {}'.format(len(df.loc[df['APPROVED_CONVERSION'] == 0])))","6a537e9c":"# Features variance \ndf.var()","8a8293e4":"df_c = df.copy()\ndf_c.head()","70a649b1":"categories = ['AD_ID', 'FB_CAMPAIGN_ID','AGE', 'GENDER', 'XYZ_CAMPAIGN_ID', 'INTEREST']\ndf_c[categories] = df_c[categories].astype('category')","5c0139ed":"# Distribution of categorical variables, except AD_ID & FB_CAMPAIGN_ID\nx=0\nfig=plt.figure(figsize=(20,15))\nplt.subplots_adjust(wspace = 0.5)\n\nfor i in df_c[categories[2:]]:\n    ax = plt.subplot(241+x)\n    ax = sns.countplot(data=df_c, y=i, color = '#A194B6')\n    plt.grid(axis='x')\n    ax.set_title(f'Distribution of {i}')\n    x+=1","ce31ce9f":"fig=plt.figure(figsize=(12,7))\n\nsns.countplot(data=df_c, x='AGE', hue='GENDER', palette=['#C873FB', '#5663FF'])\nplt.title('Age distribution by GENDER')\nplt.grid(axis='y')","a0624047":"fig=plt.figure(figsize=(15,7))\n\nsns.countplot(data=df_c, x='INTEREST', hue='GENDER', palette=['#C873FB', '#5663FF'])\nplt.title('Interest topic distribution by GENDER')\nplt.grid(axis='y')","09b64330":"fig=plt.figure(figsize=(12,7))\n\nsns.countplot(data=df_c, x='XYZ_CAMPAIGN_ID', hue='GENDER', palette=['#C873FB', '#5663FF'])\nplt.title('XYZ_CAMPAIGN_ID distribution by GENDER')\nplt.grid(axis='y')","e959ee6c":"# Correlation matrix\ncorr = df_c.corr()\n\nmask = np.zeros_like(corr)\nmask[np.triu_indices_from(mask)]=True\nwith sns.axes_style('white'):\n    fig, ax = plt.subplots(figsize=(18,10))\n    sns.heatmap(corr,  mask=mask, annot=True, cmap='coolwarm', center=0, square=True)","2d34c4a8":"# Relationships between numerical features\nsns.pairplot(df_c, corner=True)\nplt.suptitle(\"Relathionships between numerical features\", x=0.5 ,y=0.95, size=18, weight='bold')","23f33812":"sns.pairplot(df_c, corner=True, hue='GENDER', palette=['#C873FB', '#5663FF'])\nplt.suptitle(\"Relathionships between numerical features by GENDER\", x=0.5 ,y=0.95, size=18, weight='bold')","4c31d724":"sns.pairplot(df_c, corner=True, hue = 'AGE')\nplt.suptitle(\"Relathionships between numerical features by AGE category\", x=0.5 ,y=0.95, size=18, weight='bold')","3930094b":"# Show axes\nplt.rcParams['axes.spines.left'] = True\nplt.rcParams['axes.spines.right'] = True\nplt.rcParams['axes.spines.top'] = True\nplt.rcParams['axes.spines.bottom'] = True\n\n# Distribution of our numerical variables using boxplots\nfig, axes = plt.subplots(2, 3, figsize=(14, 7), constrained_layout =True)\nplt.subplots_adjust(wspace = 0.5, hspace=0.8)\naxes[-1, -1].axis('off') # hide axes\n \nax = sns.boxplot(ax = axes[0,0], data=df_c, x='IMPRESSIONS', color='#5E4489')\nax.set_title(f'Distribution of \"IMPRESSIONS\"')\n \nax1 = sns.boxplot(ax = axes[0,1], data=df_c, x='CLICKS', color='#5E4489')\nax1.set_title(f'Distribution of \"CLICKS\"')\n \nax2 = sns.boxplot(ax = axes[0,2], data=df_c, x='SPENT', color='#5E4489')\nax2.set_title(f'Distribution of \"SPENT\"')\n \nax3 = sns.boxplot(ax = axes[1,0], data=df_c, x='TOTAL_CONVERSION', color='#5E4489')\nax3.set_title(f'Distribution of \"TOTAL_CONVERSION\"')\n \nax4 = sns.boxplot(ax = axes[1,1], data=df_c, x='APPROVED_CONVERSION', color='#5E4489')\nax4.set_title(f'Distribution of \"APPROVED_CONVERSION\"')","ce59de5e":"avg_spending_age = df_c.groupby('AGE')['SPENT'].mean().sort_values().reset_index()\navg_spending_gender = df_c.groupby('GENDER')['SPENT'].mean().sort_values().reset_index()\navg_spengind_xyz = df_c.groupby('XYZ_CAMPAIGN_ID')['SPENT'].mean().sort_values().reset_index()\n\nfig, axes = plt.subplots(1,3, figsize=[15,6], constrained_layout=True)\nplt.subplots_adjust(wspace = 0.5, hspace=0.8)\n\n# First plot\nax = sns.barplot(ax = axes[0], data=avg_spending_age, x='AGE', y='SPENT', color = '#A194B6')\nax.set_title('Mean spending on ads by AGE')\nax.set_yticks([])\nax.set_ylabel('')\ni = 0\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2., height + 1,\n        round(avg_spending_age['SPENT'][i], 2),ha=\"center\")\n    i += 1\n\n# Second plot\nax1 = sns.barplot(ax = axes[1], data=avg_spending_gender, x='GENDER', y='SPENT', color = '#5E4489')\nax1.set_title('Mean spending on ads by GENDER')\nax1.set_yticks([])\nax1.set_ylabel('')\ni = 0\nfor p in ax1.patches:\n    height = p.get_height()\n    ax1.text(p.get_x()+p.get_width()\/2., height + 1,\n        round(avg_spending_gender['SPENT'][i], 2),ha=\"center\")\n    i += 1\n\n# Third plot\nax2 = sns.barplot(ax = axes[2], data=avg_spengind_xyz, x='XYZ_CAMPAIGN_ID', y='SPENT', color = '#A194B6')\nax2.set_title('Mean spending on ads by XYZ_CAMPAIGN_ID')\nax2.set_yticks([])\nax2.set_ylabel('')\ni = 0\nfor p in ax2.patches:\n    height = p.get_height()\n    ax2.text(p.get_x()+p.get_width()\/2., height + 1,\n        round(avg_spengind_xyz['SPENT'][i], 2),ha=\"center\")\n    i += 1","04204abc":"# Hide spines (black border of the plot)\nplt.rcParams['axes.spines.left'] = False\nplt.rcParams['axes.spines.right'] = False\nplt.rcParams['axes.spines.top'] = False\nplt.rcParams['axes.spines.bottom'] = False\n\navg_spending_topic = df_c.groupby('INTEREST')['SPENT'].mean().reset_index()\n\nfig, axes = plt.subplots(1,1, figsize=[18,6], constrained_layout=True)\n\n# First plot\nax = sns.barplot(ax = axes, data=avg_spending_topic, x='INTEREST', y='SPENT', color = '#A194B6')\nax.set_title('Mean spending on ads by INTEREST topic')\nax.set_yticks([])\ni = 0\nax.set_ylabel('')\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2., height + 1,\n        round(avg_spending_topic['SPENT'][i], 2),ha=\"center\")","b8e106dd":"df_c.head()","8b49ae53":"total_conversion_df = df_c.groupby('FB_CAMPAIGN_ID')[['IMPRESSIONS', 'CLICKS', 'SPENT']].mean()\ndata = pd.DataFrame(total_conversion_df)\ndata","5ce3dad3":"features = total_conversion_df.values","62da9adb":"# Standardization\nscaler = StandardScaler()\nscaled_features = scaler.fit_transform(features)\nscaled_features","54c8382b":"ks = range(2, 6)\ninertias = []\n\nfor k in ks:\n    model = KMeans(n_clusters= k)\n    clusters =  model.fit(scaled_features)\n    inertias.append(model.inertia_)\n    \n# Plot ks vs inertias\nplt.figure(figsize=(12,6))\nplt.plot(ks, inertias, '-o')\nplt.xlabel('number of clusters, k')\nplt.ylabel('inertia')\nplt.xticks(ks)\nplt.show()","cb1d8973":"ks = range(2,6)\nresults = []\n\nfor k in ks:\n    model = KMeans(n_clusters= k)\n    cluster_l = model.fit_predict(scaled_features)\n    silh_avg = silhouette_score(scaled_features, cluster_l)\n    results.append([k, silh_avg])\n\nresult = pd.DataFrame(results, columns = ['n_clusters', 'silhouette_score'])\npivot_km = pd.pivot_table(result, index='n_clusters', values='silhouette_score')\n\nplt.figure(figsize=(5,8))\nsns.heatmap(pivot_km, annot=True, linewidths=.5, fmt='.3f', cmap = 'rocket_r')","4f797dbb":"MODEL = KMeans(n_clusters=3)\nMODEL.fit(scaled_features)","95659457":"data['Cluster'] = MODEL.predict(scaled_features)\ndata.head()","be231ecc":"plt.figure(figsize=(15,8))\nsns.scatterplot(data=data, x='IMPRESSIONS', y='CLICKS', hue = 'Cluster', palette=['#FF0000', '#00FF00', '#000080'])\nplt.show()","949195b2":"plt.figure(figsize=(15,8))\nsns.scatterplot(data=data, x='IMPRESSIONS', y='SPENT', hue = 'Cluster',  palette=['#FF0000', '#00FF00', '#000080'])\nplt.show()","2248d241":"plt.figure(figsize=(15,8))\nsns.scatterplot(data=data, x='SPENT', y='CLICKS', hue = 'Cluster', palette=['#FF0000', '#00FF00', '#000080'])\nplt.show()","b6a7f937":"px.scatter_3d(data_frame=data, x='IMPRESSIONS', y='CLICKS', z='SPENT', color='Cluster', color_continuous_scale=['#FF0000', '#00FF00', '#000080'])","064b11fb":"ELBOW METHOD","d005957d":"<p style=\"font-family: Fantasy, fantasy; line-height: 1.3;font-size: 30px; letter-spacing: 5px;  color: #009ACD\">Task <\/p>","1c9afd0c":"1.) ad_id: an unique ID for each ad.\n\n2.) xyzcampaignid: an ID associated with each ad campaign of XYZ company.\n\n3.) fbcampaignid: an ID associated with how Facebook tracks each campaign.\n\n4.) age: age of the person to whom the ad is shown.\n\n5.) gender: gender of the person to whim the add is shown\n\n6.) interest: a code specifying the category to which the person\u2019s interest belongs (interests are as mentioned in the person\u2019s Facebook public profile).\n\n7.) Impressions: the number of times the ad was shown.\n\n8.) Clicks: number of clicks on for that ad.\n\n9.) Spent: Amount paid by company xyz to Facebook, to show that ad.\n\n10.) Total conversion: Total number of people who enquired about the product after seeing the ad.\n\n11.) Approved conversion: Total number of people who bought the product after seeing the ad.\n","c2c70017":"SILHOUETTE SCORE","f1f1427b":"#<p style=\"font-family: Fantasy, fantasy; line-height: 3.3; font-size: 40px; letter-spacing: 5px; text-align: center; color: #009ACD\">Clustering: Facebook ads campaigns<\/p>\n![](https:\/\/cdn.searchenginejournal.com\/wp-content\/uploads\/2019\/04\/shutterstock_456779230.png)","4135eaa9":"## **Answering few questions**\nWhat is the MEAN spending on ads by age group?\n\nWhat is the MEAN spending on ads by gender? ","c37dfda2":"## **Data information & exploration**","b6f83137":"## **Clustering**","53b973f7":"According to our results, 2 seems to be the number of clusters with highest silhouette score for our features.\n\nLet's consider using 3 clusters.","ddd4ea91":"What is the MEAN spending on ads by topic?","24862a40":"We observe that our features are highly skewed to the lower values.","ef75e499":"<p style=\"font-family: Fantasy, fantasy; line-height: 1.3;font-size: 30px; letter-spacing: 5px;  color: #009ACD\">Dataset information <\/p>","c6b11fc9":"## **Data reading**","baddb980":"## **Choosing the number of K**","fd5975e0":"Grouping ads based on their IMPRESSION, CLICKS, SPENT.","1d570af2":"## **Importing libraries**","87c997fb":"## **Preprocessing**"}}