{"cell_type":{"1a630db0":"code","75c4e8f7":"code","689bbd82":"code","8fafb9de":"code","8bf7ace9":"code","7e996f39":"code","0aed3cbd":"code","8375bc1e":"code","78a4a088":"code","05afd50a":"code","151ef9a5":"code","a5bf9baa":"code","d06a8e95":"markdown","42d000fa":"markdown","0705b2bd":"markdown"},"source":{"1a630db0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.linear_model import LinearRegression\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","75c4e8f7":"# sample_submission = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv\")\ntrain_df = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")\n\ntrain_df.head()","689bbd82":"feature_selected = ['LotArea', 'YearBuilt', '1stFlrSF', \n                    '2ndFlrSF', 'FullBath', 'BedroomAbvGr', \n                    'TotRmsAbvGrd', 'MSSubClass', 'OverallCond','KitchenQual']\ntrain_df[feature_selected]","8fafb9de":"y_train = train_df.SalePrice\n\ntemp_train = train_df[feature_selected]","8bf7ace9":"#get the dummies for text data\ntemp_train = pd.get_dummies(temp_train, columns=['KitchenQual'])\n#fill empty spaces with zero\ntemp_train.fillna(value=0.0, inplace=True)\ntemp_train.head()","7e996f39":"X_train = temp_train\n#scaling the data\nscaler = MinMaxScaler()\nX_train = scaler.fit_transform(X_train)\nX_train","0aed3cbd":"#splitting data\nstate = 12  \ntest_size = 0.20  \n  \nX_train, X_val, y_train, y_val = train_test_split(X_train, y_train,\n                                                  test_size=test_size, random_state=state)","8375bc1e":"# Define the model. Set random_state to 1\nrf_model = RandomForestRegressor(random_state=12)\nrf_model.fit(X_train, y_train)\nrf_val_predictions = rf_model.predict(X_val)\nrf_val_mae = mean_absolute_error(rf_val_predictions, y_val)\n\nprint(\"Validation MAE for Random Forest Model: {:,.0f}\".format(rf_val_mae))","78a4a088":"#to predict on test data\ntest = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/test.csv\")\n\ntest_feature_selected = ['LotArea', 'YearBuilt', '1stFlrSF', \n                    '2ndFlrSF', 'FullBath', 'BedroomAbvGr', \n                    'TotRmsAbvGrd', 'MSSubClass', 'OverallCond','KitchenQual']\n\nX_test = test[test_feature_selected]\ntemp_test = X_test\nX_test.head()","05afd50a":"#get the dummies for text data\ntemp_test = pd.get_dummies(temp_test, columns=['KitchenQual'])\n#fill empty spaces with zero\ntemp_test.fillna(value=0.0, inplace=True)\n\nX_test = temp_test\n\nX_test = scaler.fit_transform(X_test)\nX_test","151ef9a5":"#Initialize the Intercept and slope of linear regression\nlnr_reg_model = LinearRegression().fit(X_train, y_train)\nprint('score on training data: ', lnr_reg_model.score(X_train,y_train))\nprint('co-efficient of X: ', lnr_reg_model.coef_)\nprint('Intercept of model: ', lnr_reg_model.intercept_)\n\n#Predicting validation data\nreg_model_pred = lnr_reg_model.predict(X_val)\nmae_reg = mean_absolute_error(reg_model_pred, y_val)\nprint(\"Validation MAE for Linear Regression Model: {:,.0f}\".format(mae_reg))\nprint('Score on validation: ', lnr_reg_model.score(X_val, y_val))","a5bf9baa":"test_preds = rf_model.predict(X_test)\noutput = pd.DataFrame({'Id': test.Id,\n                       'SalePrice': test_preds})\noutput.to_csv('submission.csv', index=False)","d06a8e95":"**Random Forest vs Linear Regression**\n\nIn this notebook, a comparison between **Random forest** algorithm and **Linear Regression** has been portrayed. Furthermore, Mean Absolute Error is calculated for both the approaches and it is clear that the random forest regressor performs better than the linear regression for the given feature set\n\nThe data is pre-processed to scale it and bring it in the range 0,1 and it is achieved via MinMaxScaler function. Also, the empty places in the data are filled with zeros there by bringing the data to a standard form.","42d000fa":"**LINEAR REGRESSION**","0705b2bd":"**RANDOM FOREST REGRESSOR**"}}