{"cell_type":{"e09a5b82":"code","ef442afb":"code","28bad81c":"code","6873f283":"code","ad220b76":"code","fc86c0eb":"code","e4a88592":"code","f65d86ca":"code","287dc167":"code","7e1e553d":"code","d8bf438b":"code","c393737c":"code","1033d869":"code","9a79f71e":"code","0cb6a6fa":"code","859529f0":"code","47b98352":"code","0a4588c1":"code","3e482ebe":"code","044599a0":"code","d6f095c8":"code","bbda7090":"code","ab14d362":"code","cbaf9f38":"code","f0fedb49":"code","9f7653bb":"code","aff47af0":"code","11c5def4":"code","d84b7189":"code","43fb4a48":"code","ff88c662":"code","5d524cd6":"code","58e24cf0":"code","b085dd60":"code","56462280":"code","56ead173":"code","fd367595":"markdown","6a6c0ef7":"markdown","6afdf4c6":"markdown","9deaff16":"markdown","1e0cf198":"markdown","b1fabfb9":"markdown","2fb3b886":"markdown","33f98282":"markdown","a1c8fc15":"markdown","ae3330a9":"markdown","a69267b3":"markdown","c780cbc6":"markdown","28bb2d86":"markdown","a2d39293":"markdown","83c98bcc":"markdown","64ed7936":"markdown","3075320a":"markdown","ba0d4045":"markdown","ee9c0a7d":"markdown","6ecc5ebd":"markdown","53c1faad":"markdown","e50c57f5":"markdown","affae059":"markdown","9418e610":"markdown"},"source":{"e09a5b82":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","ef442afb":"import os \npath='\/kaggle\/input\/covid19-global-forecasting-week-1\/'","28bad81c":"datas=pd.read_csv(os.path.join(path,'train.csv'))\ndatas.head() # an overview of the  spreading virus up to March 18,2020","6873f283":"test=pd.read_csv(os.path.join(path,'test.csv'))\ntest.head()","ad220b76":"submission=pd.read_csv(os.path.join(path,'submission.csv'))\nsubmission.head()","fc86c0eb":"# the heureunder code intend to analyse the confirmed cases analyse around the world .\nimport plotly.express as px \ndf = datas.groupby(\"Date\").sum().reset_index()\nfig=px.line(df,x=\"Date\",y=\"ConfirmedCases\")\nfig.update_layout(title={'text':\"Evolution of confirmed cases around the world\",'x':0.5,'y':0.9,'xanchor':\"center\",\\\n                         'yanchor':\"top\"})\nfig.show()","e4a88592":"# Heureunder we will identify the most affected country until the  21-03-2020.\ntff=datas.groupby([\"Country\/Region\",\"Date\"]).sum().reset_index()\ntf=tff[tff[\"Date\"]==\"2020-03-21\"]\nfig=px.choropleth(tf,locations=\"Country\/Region\",color=\"ConfirmedCases\",hover_name=\"Country\/Region\",\\\n                 locationmode=\"country names\")\nfig.update_layout(title={'text':\"Confirmed cases by country until 21\/03\",\\\n                         'x':0.475,'y':0.9,'xanchor':'center','yanchor':'top'})\n\nfig.show()","f65d86ca":"# Let's now control the spread of this virus in each country over the course of period between 22\/01 to 21\/03.\ndff=datas.groupby([\"Date\",\"Country\/Region\"]).sum().reset_index()\nfig=px.choropleth(dff,locations=\"Country\/Region\",color=\"ConfirmedCases\",hover_name=\"Country\/Region\",\\\n                 locationmode='country names',animation_frame=\"Date\")\ntext=\"<br>The spread of virus in each country over <br> the course of period between 22\/01 to 21\/03\"\nfig.update_layout(title={'text':text,'x':0.5,'y':1,'xanchor':'center','yanchor':'top'})\nfig.show()\n                   \n","287dc167":"#hereunder , we will draw a bar plot recapitilaze the ten most affected country by the corona virus until 21\/03.\nimport matplotlib.pyplot as plt \nplt.subplots(figsize=(15,15))\nx=tf['ConfirmedCases'].sort_values(ascending=False)[:10]\ny=tf.loc[x.index]['Country\/Region']\nplt.barh(y,x,color='orange')\nplt.xlabel('Confirmed cases',fontsize=26,color='blue')\nplt.ylabel('Country',fontsize=26,color='blue')\nplt.title(\"the confirmed cases number by country until 21\/03\",fontsize=26,color='orange')\nplt.legend(fontsize=16)\nplt.show()","7e1e553d":"tc=tff[tff[\"Country\/Region\"]==\"China\"]\nfig=px.line(tc,x=\"Date\",y=\"ConfirmedCases\")\nfig.update_layout(title={'text':\"<br> Evolution of confirmed cases in china over <br> course the period between \\\n22\/01 and 21\/03\",'x':0.5,'y':1,'xanchor':'center','yanchor':'top'})\nfig.show()","d8bf438b":"cr=datas.groupby(['Country\/Region','Lat','Long','Date']).sum().reset_index()\nch=cr[cr['Country\/Region'].str.lower()=='china']\nchr=ch[ch['Date']=='2020-03-21']\nplt.scatter(chr['Lat'],chr['Long'],c=chr['ConfirmedCases'])\nplt.xlabel('Latitude',fontsize=24,color='green')\nplt.ylabel('Longitude',fontsize=24,color='green')\nplt.title(' Region repartitions of \\n china confirmed cases ',fontsize=16,color='orange')\nplt.colorbar()\nplt.show()","c393737c":"ti=tff[tff[\"Country\/Region\"]==\"Italy\"]\nfig=px.line(ti,x='Date',y='ConfirmedCases')\nfig.update_layout(title={'text': \"<br> Evolution of italy confirmed cases over course <br> the period between 22\/01\\\nand 21\/03\",'x':0.5,'y':1,'xanchor':'center','yanchor':'top'})\nfig.show()","1033d869":"tu=tff[tff['Country\/Region'].str.lower()==\"us\"]\nfig=px.line(tu,x='Date',y='ConfirmedCases')\nfig.update_layout(title={'text':\"<br> USA Evolution of confirmed cases over course <br> the period between 22\/01 and 21\/03\",\\\n                        'x':0.5,'y':1,'xanchor':'center','yanchor':'top'})\nfig.show()","9a79f71e":"ur=cr[cr['Country\/Region'].str.lower()=='us']\nus=ur[ur['Date']==\"2020-03-21\"]\nplt.scatter(us['Lat'],us['Long'],c=us['ConfirmedCases'])\nplt.xlabel('Latitude',fontsize=24,color='green')\nplt.ylabel('Longitude',fontsize=24,color='green')\nplt.title('Confirmed cases repartitions on \\n USA states ',color='orange',fontsize=16)\nplt.colorbar()\n","0cb6a6fa":"fig=px.line(df,x=\"Date\",y=\"Fatalities\")\nfig.update_layout(title={'text':\"<br> Evolution of fatalities in the world <br> over the course the period \\\nbetween 22\/01 and 21\/03\",\"x\":0.5,\"y\":0.9,\"xanchor\":\"center\",\"yanchor\":\"top\"})\nfig.show()","859529f0":"fig=px.scatter_geo(tf,locations=\"Country\/Region\",hover_name=\"Country\/Region\",color=\"Fatalities\",\\\n                  locationmode=\"country names\",projection=\"natural earth\")\nfig.update_layout(title={'text':\"<br> The total number of death by country <br> over course the period between\\\n22\/01 and 21\/03\",\"x\":0.5,\"y\":1,\"xanchor\":\"center\",\"yanchor\":\"top\"})\nfig.show()","47b98352":"mf=dff[(dff['Country\/Region'].str.lower()=='china') | (dff['Country\/Region'].str.lower()=='us')\\\n| (dff['Country\/Region'].str.lower()=='italy') | (dff['Country\/Region'].str.lower()=='spain')\\\n| (dff['Country\/Region'].str.lower()=='germany') | (dff['Country\/Region'].str.lower()=='france')\\\n| (dff['Country\/Region'].str.lower()=='korea,south') | (dff['Country\/Region'].str.lower()=='iran')]\n\nmf['death rate']=[(mf.loc[i]['Fatalities']\/mf.loc[i]['ConfirmedCases']) if mf.loc[i]['ConfirmedCases'] > 0 \\\n                  else 0 for i in mf.index]\nfig=px.scatter(mf,x=\"Country\/Region\",y=\"Country\/Region\",color='Country\/Region',size='death rate',\\\n               animation_frame=\"Date\",hover_name='Country\/Region')\nfig.update_layout(title={'text':\"The evolution of death rate in each country by the time\",'x':0.5,'y':0.9,\\\n                        'xanchor':'center','yanchor':'top'})\nfig.show()","0a4588c1":"# we create a function which can allow to transform the variable date to a feature enginering which give the \n# number of elapsed days from the date to the first day of our study which is 2020-01-22.\nfrom datetime import datetime\ndate0=\"2020-01-22\"\ndate0=datetime.strptime(date0, \"%Y-%m-%d\")\ndef encoded_date(df):\n    df['Date']=pd.to_datetime(df['Date'])\n    df['Date']=[(c-date0).days for c in df['Date']]\n","3e482ebe":"encoded_date(datas)\nencoded_date(test)","044599a0":"def firstday_confirmedcases(datas,i):\n    bf=datas[(datas['Country\/Region']==datas.loc[i]['Country\/Region']) & (datas['Lat']==datas.loc[i]['Lat'])\\\n                         & (datas['Long']==datas.loc[i]['Long'])]\n    ex=(bf[bf['ConfirmedCases']>0]).index\n    if len(ex)> 0 :\n       d=(datas.loc[ex[0]])['Date']\n    else :\n       d=61\n    return d","d6f095c8":"datas['first_day']=[firstday_confirmedcases(datas,i) for i in datas.index]\ndatas['eldays']=[max(0,datas.loc[i]['Date']- datas.loc[i]['first_day']) for i in datas.index]","bbda7090":"def rec_firstday(i):\n    reg=test.loc[i]['Country\/Region']\n    lat=test.loc[i]['Lat']\n    long=test.loc[i]['Long']\n    d=datas[(datas['Country\/Region']==reg) & (datas['Lat']==lat) & (datas['Long']==long)]['first_day']\n    d=d.to_numpy()\n    d=d[0]\n    return d","ab14d362":"test['first_day']=[rec_firstday(i) for i in test.index]","cbaf9f38":"test['eldays']=[max(0,test.loc[i]['Date']- test.loc[i]['first_day']) for i in test.index]","f0fedb49":"from sklearn.preprocessing import LabelEncoder\nlb=LabelEncoder()\nlb_transformer=lb.fit(datas['Country\/Region'])\ndatas['Country\/Region']=lb_transformer.transform(datas['Country\/Region'])\ntest['Country\/Region']=lb_transformer.transform(test['Country\/Region'])","9f7653bb":"# delete useless column \ndel(datas['Province\/State'])\ndel(datas['Id'])\ndel(test['Province\/State'])","aff47af0":"# Splitting datas.\nsplitting_date=\"2020-03-18\"\nsplitting=(datetime.strptime(splitting_date,\"%Y-%m-%d\") -date0).days\nTrain=datas[datas['Date']<splitting]\nvalidation=datas[datas['Date'] >= splitting]","11c5def4":"Xtr=Train[['Country\/Region','Lat','Long','eldays','Date']].to_numpy()\nYtr=Train['ConfirmedCases'].to_numpy()\nZtr=Train['Fatalities'].to_numpy()\nXts=validation[['Country\/Region','Lat','Long','eldays','Date']].to_numpy()\nYts=validation['ConfirmedCases'].to_numpy()\nZts=validation['Fatalities'].to_numpy()","d84b7189":"from keras.layers import Dense,Input,BatchNormalization,Dropout\nfrom keras.models import Model \nfrom keras.optimizers import Adam\nInputs=Input(shape=(5,))\nmodel=Dense(128,input_shape=(5,),activation='relu')(Inputs)\nmodel=BatchNormalization(momentum=0.15)(model)\nmodel=Dropout(0.2)(model)\nmodel=Dense(256,activation='relu')(model)\nmodel=BatchNormalization(momentum=0.15)(model)\nmodel=Dropout(0.3)(model)\nmodel=Dense(256,activation='relu')(model)\nmodel=BatchNormalization(momentum=0.15)(model)\nmodel=Dropout(0.25)(model)\nmodel=Dense(256,activation='relu')(model)\nmodel=BatchNormalization(momentum=0.15)(model)\nccases=Dense(1,activation='linear')(model)\ndeaths=Dense(1,activation='linear')(model)\nmodel=Model(inputs=Inputs,outputs=[ccases,deaths])","43fb4a48":"from keras.utils import plot_model\nplot_model(model,to_file='model.png',show_shapes=True)","ff88c662":"from keras.losses import mean_squared_logarithmic_error\nmodel.compile(loss=\"mean_squared_logarithmic_error\",optimizer='Adam',metrics=['mean_squared_logarithmic_error'])","5d524cd6":"from keras.callbacks import ReduceLROnPlateau\nlr=ReduceLROnPlateau(monitor='dense_5_loss',patience=3,factor=0.2,min_lr=0.001)\nlm=ReduceLROnPlateau(monitor='dense_6_loss',patience=3,factor=0.2,min_lr=0.001)","58e24cf0":"batch_size=32\nmd=model.fit(Xtr,{'dense_5':Ytr,'dense_6':Ztr},batch_size=batch_size,epochs=200,validation_data=(Xts,\\\n                                                                            [Yts,Zts]),callbacks=[lr,lm])","b085dd60":"pred=test[['Country\/Region','Lat','Long','eldays','Date']].to_numpy()\nprediction=model.predict(pred)","56462280":"submission['ConfirmedCases']=prediction[0]\nsubmission['Fatalities']=prediction[1]","56ead173":"submission.to_csv('submission.csv',index=False)","fd367595":"##### <font color=redblue> We notice from the chart above for example that italy hase the highest number of death ,wheras it not has the highest number of confirmed cases . This will lead us to analyse the rate of death by country .","6a6c0ef7":"#### 1.2.3 USA :","6afdf4c6":"\n<font color=redblue>  \n##### The charte above shows that the following countries : \n##### * China with 81.305k confirmed cases .\n##### * Italy with 53.578k confirmed cases .\n##### * USA with 25.489k confirmed cases.\n##### * Spain with 25.374k confirmed cases .\n##### * Germany with 22.213k confirmed cases .\n##### * Iran  with 20.61 confirmed cases.   \n\n##### are respectively the most affected by the corona virus until the 21\/03\/2020. ","9deaff16":"# Importing datas:","1e0cf198":"## 1. Confirmed cases analysis :","b1fabfb9":"##### <font color=redblue> The evolution of the confirmed cases curve , shows that these number had accelerated from 23\/02 in short time to reach more than 10k cases on 10 march which means in less than 18 days . This confirm that italy autority  had not  token  the threaten at  seriously and had not token a necessary precautions to avoid such spread of virus in such time .","2fb3b886":"# Prediction :","33f98282":"# Data explorations:","a1c8fc15":"# <center>  <font color=blackyellow> ** COVID-19 **\n![](https:\/\/www.digital-discovery.tn\/wp-content\/uploads\/2020\/03\/covid19.jpg)","ae3330a9":"##### <font color=redblue> The above curve shows that china start to control the spread of the virus from the 01\/03 . Starting from this date , the number of confirmed had stopped to be increased which confirm that china autority had taken the control of the spread of the corona virus.","a69267b3":"### 1.1 world wide analysis :","c780cbc6":"##### <font color=redblue> We can notice from the chart above that the most cases enregistred in USA , are mostly focused in some neighbors states , which means that theses cases come from contamination between local citizen . Thus, the USA autority had not token necessary measures to limit the spread of this virus on theses states . Henceforth , USA should take a specific measures to avoid the spread of the virus on other states.","28bb2d86":"# NN model :","a2d39293":"# Data preparation :","83c98bcc":"#### 1.2.1 China :","64ed7936":"## 2.Fatalities analysis :","3075320a":"This Notebook ,  intends to analyse datas over course the period between 22-01-2020 to 21-03-2020 ,in order to extract insights that can allow to modelate a pattern , that helps to predict  confirmed cases and fatalities between March 25 nd april 22 by region .","ba0d4045":"##### <font color=redblue> We will focus in the next of this part to analyse the spread of the this virus in theses countries : China ,Italy ,USA and France .","ee9c0a7d":"##### <font color= redblue> Accordingly to the animated chart above , we notice that the number of confirmed cases had rapidly increased in Iran ,Spain, Germany, USA and specially Italy in compare with his surface . This will lead us to make virus  spreading analysis in theses countries.","6ecc5ebd":"##### <font color=redblue> We can notice from the chart above that the death rate increase by the time in each country .","53c1faad":"### 1.2 Country analysis :","e50c57f5":"##### <font color=redblue> We notice from the curve above , that USA situation start to be worrying from the date of 10 march , when the affected person number had rapidly increased . In the next curve , we will study  the distribution of theses number around USA states which allow us to figure out the situation stage of corona virus in USA.","affae059":"# Introduction :","9418e610":"#### 1.2.2 Italy :"}}