{"cell_type":{"64e003b9":"code","7f54d7c2":"code","b0249006":"code","e0de602a":"code","82d1fbbf":"code","646962f1":"code","bea4cc24":"code","44d09fad":"code","3a270160":"code","a1b45db2":"code","24229529":"code","c9cbccb5":"code","bfd34ad3":"code","1296c72b":"code","37f6f0ea":"code","69689c75":"code","398a26cb":"code","a87e30b1":"code","778e71db":"code","f32362a3":"code","f5063db0":"code","beae5981":"code","0581e44b":"code","f565f93e":"code","a4a9ae79":"code","56ea238b":"code","929480af":"code","deffdc4f":"code","b19971e8":"code","7a84e2c7":"code","80ef9fe5":"code","035ae35f":"code","4e54ceab":"code","7f783549":"code","3c14e2ff":"code","3291a9d3":"code","06457f8d":"code","284d3c0d":"code","045f5ea1":"code","e38dd58e":"code","441cca7e":"code","f45bf965":"code","cec0e9dd":"code","8565e00a":"code","28ea5088":"markdown","8755d5b0":"markdown","b2d64a63":"markdown","5b500bb8":"markdown","1794fbd1":"markdown"},"source":{"64e003b9":"project_name = \"basketball-player-analysis\" # change this","7f54d7c2":"!pip install jovian --upgrade -q","b0249006":"import jovian","e0de602a":"jovian.commit(project=project_name)","82d1fbbf":"#Importing all the required libraries\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport matplotlib.pyplot as plt\n%matplotlib inline","646962f1":"#Reading the dataset\ndf = pd.read_csv(\"..\/input\/basketball-players-stats-per-season-49-leagues\/players_stats_by_season_full_details.csv\")","bea4cc24":"#Looking at the first 5 entires of the dataset\ndf.head()","44d09fad":"#Looking at the general info of the dataset column-wise\ndf.info()","3a270160":"#Checking the shape of the dataset\ndf.shape","a1b45db2":"#Checking all the columns present in the dataset\ndf.columns","24229529":"#Describint the dataset\ndf.describe().T","c9cbccb5":"#Checking for null values in the dataset\ndf.isnull().values.any()","bfd34ad3":"#Checking which columns have null values on the dataset\ndf.isnull().sum()","1296c72b":"#Dropping the column \"high_school\" since it has 30247 null values out of 53798 making it a useless column\ndf = df.drop(labels=['high_school'], axis = 1)","37f6f0ea":"#Dropping all the rows with null values in any column (we can do this because we have >50000 row values and only about 4500 valued null rows)\ndf = df.dropna(axis=0)","69689c75":"#Checking the shape of the dataset after removing all the data preprocessing\ndf.shape","398a26cb":"import jovian","a87e30b1":"jovian.commit(project=project_name)","778e71db":"#Feature Generation for Analysis\ndf['gameper_min']=df['MIN']\/df['GP']\ndf['gameper_pts']=df['PTS']\/df['GP']\ndf['gameper_reb']=df['REB']\/df['GP']\ndf['gameper_ast']=df['AST']\/df['GP']\ndf['gameper_blk']=df['BLK']\/df['GP']\ndf['gameper_pf']=df['PF']\/df['GP']\ndf['gameper_tov']=df['TOV']\/df['GP']\ndf['gameper_stl']=df['STL']\/df['GP']\ndf['gameper_3pm']=df['3PM']\/df['GP']\ndf['gameper_2fgm']=df['FGM']\/df['GP']\ndf['gameper_1ftm']=df['FTM']\/df['GP']\ndf['ratio_1ftm']=df['FTM']\/df['FTA']\ndf['ratio_2fgm']=df['FGM']\/df['FGA']\ndf['ratio_3pm']=df['3PM']\/df['3PA']\ndf['age']=2020-df['birth_year']","f32362a3":"#Looking at the general info of the dataset column-wise\ndf.info()","f5063db0":"#NBA 2009-2010 Regular Season Players Mean Statistics\ndf_nba_regs_09_10=df[(df['League']=='NBA')&(df['Stage']=='Regular_Season')&(df['Season']=='2009 - 2010')]\ndf_nba_regs_09_10=df_nba_regs_09_10.drop(['League','Stage','Season'],axis=1)\n\navg_game=df_nba_regs_09_10.GP.mean()\n\navg_min=df_nba_regs_09_10.MIN.mean()\n\navg_pts=df_nba_regs_09_10.PTS.mean()\n\navg_ast=df_nba_regs_09_10.AST.mean()\n\navg_reb=df_nba_regs_09_10.REB.mean()\n\nfig = go.Figure()\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value =  avg_game,\n    domain = {'x': [0.25, 1], 'y': [0.1, 0.2]},\n    title = {'text': \"Players Mean Game\",'font':{'color': 'black','size':15}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None, 100]},\n        'bar': {'color': \"blue\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = avg_min,\n    domain = {'x': [0.25, 1], 'y': [0.3, 0.4]},\n    title = {'text': \"Players Mean Minutes\",'font':{'color': 'black','size':15}},\n    number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,2250]},\n        'bar': {'color': \"cyan\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = avg_pts,\n    domain = {'x': [0.25, 1], 'y': [0.5, 0.6]},\n    title = {'text' :\"Players Mean Points\",'font':{'color': 'black','size':15}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,1000]},\n        'bar': {'color': \"darkblue\"}}\n))\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = avg_ast,\n    domain = {'x': [0.25, 1], 'y': [0.7, 0.8]},\n    title = {'text' :\"Players Mean Assists\",'font':{'color': 'black','size':15}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,250]},\n        'bar': {'color': \"darkcyan\"}}\n))\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = avg_reb,\n    domain = {'x': [0.25, 1], 'y': [0.9,1]},\n    title = {'text' :\"Players Mean Rebounds\",'font':{'color': 'black','size':15}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,400]},\n        'bar': {'color': \"red\"}}\n))\nfig.update_layout(title=\" NBA 2009-2010 Regular Season Players Mean Statistics \",title_x=0.5)\nfig.show()","beae5981":"#NBA 2010-2011 Regular Season Players Mean Statistics\ndf_nba_regs_10_11=df[(df['League']=='NBA')&(df['Stage']=='Regular_Season')&(df['Season']=='2010 - 2011')]\ndf_nba_regs_10_11=df_nba_regs_10_11.drop(['League','Stage','Season'],axis=1)\ndf_nba_regs_10_11\n\n\navg_game=df_nba_regs_10_11.GP.mean()\n\navg_min=df_nba_regs_10_11.MIN.mean()\n\navg_pts=df_nba_regs_10_11.PTS.mean()\n\navg_ast=df_nba_regs_10_11.AST.mean()\n\navg_reb=df_nba_regs_10_11.REB.mean()\n\nfig = go.Figure()\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value =  avg_game,\n    domain = {'x': [0.25, 1], 'y': [0.1, 0.2]},\n    title = {'text': \"Players Mean Game\",'font':{'color': 'black','size':15}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None, 100]},\n        'bar': {'color': \"blue\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = avg_min,\n    domain = {'x': [0.25, 1], 'y': [0.3, 0.4]},\n    title = {'text': \"Players Mean Minutes\",'font':{'color': 'black','size':15}},\n    number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,2250]},\n        'bar': {'color': \"cyan\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = avg_pts,\n    domain = {'x': [0.25, 1], 'y': [0.5, 0.6]},\n    title = {'text' :\"Players Mean Points\",'font':{'color': 'black','size':15}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,1000]},\n        'bar': {'color': \"darkblue\"}}\n))\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = avg_ast,\n    domain = {'x': [0.25, 1], 'y': [0.7, 0.8]},\n    title = {'text' :\"Players Mean Assists\",'font':{'color': 'black','size':15}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,250]},\n        'bar': {'color': \"darkcyan\"}}\n))\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = avg_reb,\n    domain = {'x': [0.25, 1], 'y': [0.9,1]},\n    title = {'text' :\"Players Mean Rebounds\",'font':{'color': 'black','size':15}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,400]},\n        'bar': {'color': \"red\"}}\n))\nfig.update_layout(title=\" NBA 2010-2011 Regular Season Players Mean Statistics \",title_x=0.5)\nfig.show()","0581e44b":"#NBA 2009-2010 Regular Season Statistics\ndf_nba_regs_09_10=df[(df['League']=='NBA')&(df['Stage']=='Regular_Season')&(df['Season']=='2009 - 2010')]\n\ndf_nba_regs_09_10=df_nba_regs_09_10.drop(['League','Stage','Season'],axis=1)\n\nsum_pts=df_nba_regs_09_10.PTS.sum()\n\nsum_ast=df_nba_regs_09_10.AST.sum()\n\nsum_reb=df_nba_regs_09_10.REB.sum()\n\nsum_blk=df_nba_regs_09_10.BLK.sum()\n\nsum_stl=df_nba_regs_09_10.STL.sum()\n\nfig = go.Figure()\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value =  sum_stl,\n    domain = {'x': [0.25, 1], 'y': [0.1, 0.2]},\n    title = {'text': \"Season Sum Steals\",'font':{'color': 'black','size':15}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None, 15000]},\n        'bar': {'color': \"blue\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = sum_pts,\n    domain = {'x': [0.25, 1], 'y': [0.3, 0.4]},\n    title = {'text': \"Season Sum Points\",'font':{'color': 'black','size':15}},\n    number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,200000]},\n        'bar': {'color': \"cyan\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = sum_ast,\n    domain = {'x': [0.25, 1], 'y': [0.5, 0.6]},\n    title = {'text' :\"Season Sum Assists\",'font':{'color': 'black','size':15}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,40000]},\n        'bar': {'color': \"darkblue\"}}\n))\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = sum_reb,\n    domain = {'x': [0.25, 1], 'y': [0.7, 0.8]},\n    title = {'text' :\"Season Sum  Rebounds\",'font':{'color': 'black','size':15}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,80000]},\n        'bar': {'color': \"darkcyan\"}}\n))\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = sum_blk,\n    domain = {'x': [0.25, 1], 'y': [0.9,1]},\n    title = {'text' :\"Season Sum Blocks\",'font':{'color': 'black','size':15}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,9000]},\n        'bar': {'color': \"red\"}}\n))\nfig.update_layout(title=\" NBA 2009-2010 Regular Season Statistics \",title_x=0.5)\nfig.show()","f565f93e":"#NBA 2010-2011 Regular Season Statistics\ndf_nba_regs_10_11=df[(df['League']=='NBA')&(df['Stage']=='Regular_Season')&(df['Season']=='2010 - 2011')]\ndf_nba_regs_10_11=df_nba_regs_10_11.drop(['League','Stage','Season'],axis=1)\ndf_nba_regs_10_11\n\n\nsum_pts=df_nba_regs_10_11.PTS.sum()\n\nsum_ast=df_nba_regs_10_11.AST.sum()\n\nsum_reb=df_nba_regs_10_11.REB.sum()\n\nsum_blk=df_nba_regs_10_11.BLK.sum()\n\nsum_stl=df_nba_regs_10_11.STL.sum()\n\nfig = go.Figure()\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value =  sum_stl,\n    domain = {'x': [0.25, 1], 'y': [0.1, 0.2]},\n    title = {'text': \"Season Sum Steals\",'font':{'color': 'black','size':15}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None, 15000]},\n        'bar': {'color': \"blue\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = sum_pts,\n    domain = {'x': [0.25, 1], 'y': [0.3, 0.4]},\n    title = {'text': \"Season Sum Points\",'font':{'color': 'black','size':15}},\n    number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,200000]},\n        'bar': {'color': \"cyan\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = sum_ast,\n    domain = {'x': [0.25, 1], 'y': [0.5, 0.6]},\n    title = {'text' :\"Season Sum Assists\",'font':{'color': 'black','size':15}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,40000]},\n        'bar': {'color': \"darkblue\"}}\n))\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = sum_reb,\n    domain = {'x': [0.25, 1], 'y': [0.7, 0.8]},\n    title = {'text' :\"Season Sum  Rebounds\",'font':{'color': 'black','size':15}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,80000]},\n        'bar': {'color': \"darkcyan\"}}\n))\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = sum_blk,\n    domain = {'x': [0.25, 1], 'y': [0.9,1]},\n    title = {'text' :\"Season Sum Blocks\",'font':{'color': 'black','size':15}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,9000]},\n        'bar': {'color': \"red\"}}\n))\nfig.update_layout(title=\" NBA 2010-2011 Regular Season Statistics \",title_x=0.5)\nfig.show()","a4a9ae79":"#Top 10 Players Total Matches Played\ndf_maxgame=df_nba_regs_09_10.sort_values('GP',ascending=\"False\")\n\ndf_maxgame=df_maxgame[197:207]\n\nfig = go.Figure(go.Funnel(\n    y =  list(df_maxgame['Player']),\n    x = list(df_maxgame['GP']))) \nfig.update_layout(title = \"Top 10 Players Total Matches Played\",title_x=0.5)\nfig.show()","56ea238b":"#Top 10 Players Season Total Field Goals Made\ndf_maxpoints=df_nba_regs_09_10.sort_values('FGM',ascending=\"False\")\ndf_maxpoints=df_maxpoints[197:207]\n\n\nfig = go.Figure(go.Funnel(\n    y =  list(df_maxpoints['Player']),\n    x = list(df_maxpoints['FGM']))) \nfig.update_layout(title = \"Top 10 Players Season Total Field Goals Made\",title_x=0.5)\nfig.show()","929480af":"#Top 10 Players Season Total Assists\ndf_maxassists=df_nba_regs_09_10.sort_values('AST',ascending=\"False\")\ndf_maxassists=df_maxassists[197:207]\n\n\nfig = go.Figure(go.Bar(\n    x=df_maxassists['Player'],y=df_maxassists['AST'],\n    marker={'color': df_maxassists['AST'], \n    'colorscale': 'balance'},  \n    text=df_maxassists['AST'],\n    textposition = \"outside\",\n))\n\nfig.update_layout(title = \"Top 10 Players Season Total Assists\",title_x=0.5)\nfig.show()","deffdc4f":"#Top 10 Players Season Total Rebounds\ndf_maxrebounds=df_nba_regs_09_10.sort_values('REB',ascending=\"False\")\n\ndf_maxrebounds=df_maxrebounds[197:207]\n\nfig = go.Figure(go.Bar(\n    y=df_maxrebounds['Player'],x=df_maxrebounds['REB'],orientation=\"h\",\n    marker={'color': df_maxrebounds['REB'], \n    'colorscale': 'fall'},  \n    text=df_maxrebounds['REB'],\n    textposition = \"outside\",\n))\nfig.update_layout(title = \"Top 10 Players Season Total Rebounds\",title_x=0.5)\nfig.show()","b19971e8":"#Top 10 Players  Minutes Played Per Game\ndf_game_min=df_nba_regs_09_10.sort_values('gameper_min',ascending=\"False\")\ndf_game_min=df_game_min[197:207]\n\n\nfig = go.Figure(go.Bar(\n    y=df_game_min['Player'],x=df_game_min['gameper_min'],orientation=\"h\",\n    marker={'color': df_game_min['gameper_min'], \n    'colorscale': 'curl'},  \n    text=df_game_min['gameper_min'],\n    textposition = \"outside\",\n))\nfig.update_layout(title = \"Top 10 Players  Minutes Played Per Game\",title_x=0.5)\nfig.show()","7a84e2c7":"#Distribution Of Players Points Per Game\nfig = go.Figure(data=[go.Histogram(x=df['gameper_pts'],  # To get Horizontal plot ,change axis - y=campus_computer\n                                  marker_color=\"CadetBlue\",\n                      xbins=dict(\n                      start=0, #start range of bin\n                      end=50,  #end range of bin\n                      size=5    #size of bin\n                      ))])\nfig.update_layout(title=\"Distribution Of Players Points Per Game\",xaxis_title=\"Points\",yaxis_title=\"Counts\",title_x=0.5)\nfig.show()","80ef9fe5":"#Top 10 Teams And Number Of Players In The Team\ndf_nba_regs_09_10=df[(df['League']=='NBA')&(df['Stage']=='Regular_Season')&(df['Season']=='2009 - 2010')]\n\ndf_team=df_nba_regs_09_10['Team'].value_counts().to_frame().reset_index().rename(columns={'index':'Team','Team':'Count'})\n\nfig = go.Figure([go.Pie(labels=df_team['Team'][0:10], values=df_team['Count'][0:10])])\n\nfig.update_traces(hoverinfo='value+percent', textinfo='label+percent', textfont_size=12,insidetextorientation='radial')\n\nfig.update_layout(title=\" Top 10 Teams And Number Of Players In The Team\",title_x=0.5)\nfig.show()","035ae35f":"#Three Points Throws Success Rate & Top 10 Players Three Points Attempts\ndf_nba_regs_09_10_Rat=df_nba_regs_09_10.copy()\ndf_nba_regs_09_10_Rat=df_nba_regs_09_10_Rat.dropna(subset=['ratio_3pm'])\n\ndf_ratio_3ftm=df_nba_regs_09_10_Rat.sort_values('ratio_3pm',ascending=\"False\")\ndf_ratio_3ftm=df_ratio_3ftm[189:199]\n\nfig = make_subplots(rows=2, cols=1,\n                   subplot_titles=(\"Top 10 Players Three Points Success Rate\",\n                                   \"Top 10 Players Three Points Attempts\",))  # Subplot titles\n\nfig.add_trace(go.Bar(\n    y=df_ratio_3ftm['Player'],x=df_ratio_3ftm['ratio_3pm'],orientation=\"h\",\n    marker={'color': df_ratio_3ftm['ratio_3pm'], \n    'colorscale': 'ylorrd'},  \n    text=df_ratio_3ftm['ratio_3pm'],\n    textposition = \"outside\"),\n    row=1, col=1         \n)\nfig.add_trace(go.Bar(\n    y=df_ratio_3ftm['Player'],x=df_ratio_3ftm['3PA'],orientation=\"h\",\n    marker={'color': df_ratio_3ftm['3PA'], \n    'colorscale': 'twilight'},  \n    text=df_ratio_3ftm['3PA'],\n    textposition = \"outside\"),\n    row=2, col=1           \n)\nfig.update_layout(height=800, width=600,title = \"Three Points Throws\",title_x=0.5)\nfig.show()","4e54ceab":"#Number Of Nationality Players\ndf_Euro_16_17=df[(df['League']=='Euroleague')&(df['Stage']=='International')&(df['Season']=='2016 - 2017')]\n\ndf_nati=df_Euro_16_17.nationality.value_counts().to_frame().reset_index().rename(columns={'index':'nationality','nationality':'Count'})[0:12]\ndf_nati=df_nati.sort_values('Count',ascending=\"False\")\n\n\nfig = go.Figure(go.Bar(\n    y=df_nati['nationality'],x=df_nati['Count'],orientation=\"h\",\n    marker={'color': df_nati['Count'], \n    'colorscale': 'curl'},  \n    text=df_nati['Count'],\n    textposition = \"outside\",\n))\nfig.update_layout(title = \"Number Of Nationality Players \",title_x=0.5)\nfig.show()","7f783549":"import jovian","3c14e2ff":"jovian.commit(project=project_name)","3291a9d3":"print(\"Q1. What is the height distributon of the players?\")\nprint(\"Answer: \\n\")\n\nb = df[['Player', 'height_cm']]\nbb = b.groupby('height_cm').size()\nbbb = bb[bb.values > 3000]\nfig = plt.figure(figsize=(14, 3), dpi=100)\nax = fig.add_subplot(111)\nmean = df['height_cm'].mean()\nax.bar(bb.index, bb.values, width=0.8, color='lightsteelblue')\nax.bar(bbb.index, bbb.values, width=0.8, color='royalblue')\nax.set_xticks(np.arange(165.0, 230.0, 1))\nax.set_xticklabels(np.arange(165.0, 230.0, 1), rotation=90)\nax.set_xlim(164,230)\nfor x,y in zip(bb.index, bb.values):\n    ax.text(x, y+200, y, fontsize=10, rotation=45, horizontalalignment='center')\nax.set_ylim(0,5000)\nax.set_title('Player Height Distribution', fontsize=16, y=1.02)\nax.set_xlabel('Height (CM)', fontsize=12)\nax.set_ylabel('Player Counts', fontsize=12)\nax.yaxis.grid(alpha=0.4, ls='--')\nplt.show()","06457f8d":"print(\"Q2. What is the nationality of the top 20 players?\")\nprint(\"Answer: \\n\")\n\nc = df[['Player', 'nationality']]\ncc = c.sort_values(by=['Player', 'nationality']).reset_index(drop=True)\nccc = cc.groupby('Player', as_index=False).first()\ncccc = ccc.groupby('nationality', as_index=False).count().sort_values(by='Player').tail(20)\nccccc = cccc.tail(5)\nfig = plt.figure(figsize=(6,8), dpi=100)\nax = fig.add_subplot(111)\nax.barh(cccc['nationality'], cccc['Player'], color='lightsteelblue', height=0.8)\nfor x,y in zip(cccc['nationality'], cccc['Player']):\n    ax.text(y+60, x, y, fontsize=10, horizontalalignment='left')\nax.barh(ccccc['nationality'], ccccc['Player'], color='royalblue', height=0.8)\nax.set_xlim(0,4500)\nax.xaxis.grid(alpha=0.4, ls='--', color='lightsteelblue')\nax.set_title('Player Nationality Distribution', fontsize=16, y=1.02)\nax.set_xlabel('Number of Players', fontsize=12)\nax.set_ylabel('Country of Players', fontsize=12)\nplt.show()","284d3c0d":"print(\"Q3. What is the Career Score Statistics of the NBA players?\")\nprint(\"Answer: \\n\")\n\ne = df.groupby('Player')['PTS'].sum().sort_values(ascending=False)\nee = e.describe()\nfig = plt.figure(figsize=(14,4), dpi=100)\nax = fig.add_subplot(111)\nax.boxplot(e.values, widths=0.1, labels=['PTS'], vert=False, sym='+', patch_artist=False, meanline=True, showmeans=True, showcaps=True, showbox=True, showfliers=True)\nax.set_xticks(np.arange(0,30001,2000))\nax.set_xlabel('Total Scores of Player', fontsize=12)\nax.set_title('NBA Players Career Total Score Distribution', fontsize=16, y=1.02)\nax.grid(alpha=0.2)\nplt.show()","045f5ea1":"print(\"Q4. How has the performance of each player been in NBA?\")\nprint(\"Answer: \\n\")\n\ne1 = df['3PM']\ne2 = df['FTM']\ne3 = df['REB']\ne4 = df['AST']\nfig = plt.figure(figsize=(4,8), dpi=100)\nax = fig.add_subplot(111)\nax.boxplot([e1.values, e2.values, e3.values, e4.values], widths=0.2, labels=['3PM', 'FTM', 'REB', 'AST'], sym='.', patch_artist=False, vert=True)\nax.set_xlabel('Data Categories', fontsize=12)\nax.set_title('Player data performance distribution in each season', fontsize=14, y=1.02)\nax.set_ylabel('Values', fontsize=12)\nax.set_yticks(np.arange(0,1400,50))\nax.yaxis.grid(alpha=0.2, ls='--')\nplt.show()","e38dd58e":"print(\"Q5. How has the performance of the Top 20 players w.r.t. Three Pointers, Free Throws and Rebounds?\")\nprint(\"Answer: \\n\")\n\nf = df.groupby('Player')['PTS'].sum().sort_values(ascending=False).head(20)\nff = df.loc[df['Player'].isin(f.index)]\nfig = plt.figure(figsize=(6,10), dpi=100)\nax = fig.add_subplot(111)\nax.scatter(ff['3PM'], ff['Player'], label='Three Pointer', marker='o', alpha=0.6, color='limegreen')\nax.scatter(ff['FTM'], ff['Player'], label='Free Throw', marker='o', alpha=0.6, color='firebrick')\nax.scatter(ff['REB'], ff['Player'], label='Rebounds', marker='o', alpha=0.6, color='steelblue')\nax.set_xticks(np.arange(0,1001,50))\nax.set_xticklabels(np.arange(0,1001,50), rotation=45)\nax.xaxis.grid(alpha=0.4, ls='--')\nax.set_title('Data Distribution of TOP20 NBA Players', fontsize=16, y=1.01)\nax.set_xlabel('Players\\' Performance Per Game', fontsize=12)\nax.set_ylabel('TOP20 Players', fontsize=12)\nax.legend()\nplt.show()","441cca7e":"import jovian","f45bf965":"jovian.commit(project=project_name)","cec0e9dd":"import jovian","8565e00a":"jovian.commit(project=project_name)","28ea5088":"## Exploratory Analysis and Visualization","8755d5b0":"## Inferences and Conclusion\n\nIn this notebook, I analyzed a Basketball Player Dataset where I visualized the perfomance of each and every player as well as other attributes.\n\nIf the visualizations are not visible on Jovian.ml, please see the notebook here: https:\/\/www.kaggle.com\/krishnasashank\/notebookc9b9034e13","b2d64a63":"# Basketball Player Analysis\n\nI am using a Kaggle Dataset of BasketBall players. I will visualize it and answer some questions from the dataset.\n\nIf the visualizations are not visible on Jovian.ml, please see the notebook here:\nhttps:\/\/www.kaggle.com\/krishnasashank\/notebookc9b9034e13\n\nAs a first step, let's upload our Jupyter notebook to [Jovian.ml](https:\/\/jovian.ml).","5b500bb8":"## Data Preparation and Cleaning","1794fbd1":"## Asking and Answering Questions"}}