{"cell_type":{"3637cafa":"code","13ab65b1":"code","7bc4a9d9":"code","df7d3de9":"code","87ae1ffd":"code","e97535fd":"code","a584f0c9":"code","91648d80":"code","05e468cf":"code","da6e3b15":"code","070be1b9":"code","e75f39d8":"code","5d8001fc":"code","49643dde":"code","377bbbe4":"code","9b213ff0":"markdown","79230646":"markdown","fa28a71d":"markdown","97bf09f0":"markdown","55a8f47f":"markdown","fc15362f":"markdown","46f79824":"markdown","9f1af6f3":"markdown","93e22715":"markdown","c50bbb87":"markdown","b4b95384":"markdown","fabf0cb1":"markdown","081a1cdb":"markdown"},"source":{"3637cafa":"#Import the required modules for our excercise\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nprint(\"Setup is complete\")","13ab65b1":"#First load the dataframe\ndata = pd.read_csv(\"..\/input\/iris-data\/iris_data.csv\")\n#Take a quick look into the data frame \ndata.head()\n#Number of data points\ndata.shape\n#Columns names and data types for each columns\ndata.info(show_counts=True)","7bc4a9d9":"#Solution\n#We may also replace multiple values (strings,integers,etc.) in one line of code \n#(even if that value doesn't even exist)\ndata['species'].replace('Iris','Setosa',inplace=True)\n#A quick check for our results\ndata['species'].unique() \n#(Optional) We may select specific rows from a dataframe using the below method  \n# data['species'][data['species'] =='setosa']","df7d3de9":"#Solution\ndata['species'].value_counts()\nstatistics=data.describe(exclude='object')\n#If we want to rename a specific index\nstatistics.rename(index={'50%':'median'},inplace=True)\n#A quick Check  \nstatistics","87ae1ffd":"#Solution\n#If we want to add a new row to our dataframe (hint: we must use .loc[] for specifying index values because \n#the index in our dataframe aren't list of integers 0,1,2,...)\nstatistics.loc['range']=statistics.loc['max']-statistics.loc['min']\nstatistics.loc['trial']=[15,12,20,13]\n#We may also change the index order in our dataframe as shown below\n#We must assign a new variable to the rearranged index to save the changes we did, as shown below\nstatistics=statistics.reindex(['trial','count', 'mean', 'std','25%','median','75%',  \n       'min','max','range'])\nstatistics","e97535fd":"#Solution\n#if we want to show more than one statistic (mean,sum,etc.) in a single table\ndata.groupby('species').agg(['sum','mean','median','count'])\n","a584f0c9":"#We can show different stats for different columns as follows\n#First, we define the variable in the form of dictionary \nagg_dic={stat:['mean','median'] for stat in data.loc[:,'sepal_length':'petal_width']}\n#then we specify the exceptions (or whatever we may call it)\nagg_dic['sepal_width']=['min']\nagg_dic['petal_length']=['max','mean','median']\n#Now let's check the results \ndata.groupby('species').agg(agg_dic)","91648d80":"#An alternate way to the above code is to sepcify the desired stats for each cloumn in case of few columns\nagg_dic1={'sepal_length':'median','sepal_width':['mean','max'],'petal_width':'median'}\ndata.groupby('species').agg(agg_dic1)","05e468cf":"plt.scatter(data['sepal_length'],data['sepal_width'],marker='s')\nplt.xlabel('Sepal_Length')\nplt.ylabel('Sepal_Width')\nplt.title('Length VS Width',c='r')","da6e3b15":"plt.hist(data['petal_width'],bins=30,color='#5796')\nplt.xlabel('Petal_Width',c='#5246',fontdict={'fontsize':18})\nplt.ylabel('Frequency',c='#5246',fontdict={'fontsize':20})\nplt.title('An Example of a histogram')\nplt.xkcd(False)","070be1b9":"plt.hist(data[['sepal_length','sepal_width','petal_length','petal_width']],color=['#3D969D','#923D9D','#3D639D','#3D9D3D'])\nplt.xlabel('Measurements',c='#5246')\nplt.ylabel('Frequency',c='#5246')\nplt.title('An Example of a histogram')\nplt.legend(['sepal_length','sepal_width','petal_length','petal_width'])\nplt.xkcd(scale=0.01)","e75f39d8":"#For example, if we want to plot the petal length and sepal length for each of the three species\ndata.boxplot(by='species',column=['petal_length','petal_width','sepal_length','sepal_width'],fontsize=8,\n             figsize=(10,10),)\n#Set the title and its horizontal & vertical location as follows \nplt.suptitle('Comparison between the three species for each measurement',y=0.96,x=0.5,c='#923D9D')","5d8001fc":"#Now let's try display the boxplots using seaborn and see which one is better \nf, axes = plt.subplots(1, 4,figsize=(25,10))\n#Adjust the distance\/pad width between supblots to avoid overlapping \nplt.subplots_adjust(wspace=0.3)\nfor n,a in zip(['petal_length','petal_width','sepal_length','sepal_width'],[0,1,2,3]):\n    bp=sns.boxplot(x='species',y=n,order=['virginica','setosa','versicolor']\n                ,data=data,ax=axes[a],palette=['#9D3D54','#40576D','#D16A2B']\n                 ,flierprops=dict(marker='X',markerfacecolor='r',markersize=12))\n#Set the the labels size,color,style,etc. (optional)    \n    bp.set_xlabel('Species',fontsize=30,color='#631B18',style='italic')\n    bp.set_ylabel(n.upper(),fontsize=25,color='#631B18',style='italic')","49643dde":"#First we need to change our dataframe to the format shown above\nnew_df=data.melt(id_vars='species',var_name='measurement',value_name='size')\n#You may try new_df.head() to see how the dataframe has become \n\n#Now we can make our box plot using the same way as above \n#What we want to do this time, is to display the four measurements on the X-axis ,the value of each measurement on \n#the Y-axis for each of the three species\nf,ax=plt.subplots(1,1,figsize=(15,12))\nbp2=sns.boxplot(x='measurement',y='size',hue='species',ax=ax\n                ,data=new_df,palette=['#9D3D54','#40576D','#D16A2B']\n                 ,flierprops=dict(marker='X',markerfacecolor='r',markersize=12))  \nbp2.set_xlabel('Measurement',fontsize=30,color='#631B18',style='italic')\nbp2.set_ylabel('Size',fontsize=25,color='#631B18',style='italic')","377bbbe4":"sns.pairplot(data,hue='species',palette=['#9D3D54','#40576D','#D16A2B'])","9b213ff0":"# Question 9\n\nNow make a single boxplot where the features are separated in the x-axis and species are colored with different hues. \n\nNote: Seaborn is very picky about data format--for this plot to work, the input dataframe will need to be manipulated so that each row contains a single data point (a species, a measurement type, and the measurement value). Check out Pandas [stack](http:\/\/pandas.pydata.org\/pandas-docs\/stable\/generated\/pandas.DataFrame.stack.html) method as a starting place.\n\nHere is an example of a data format that will work:\n\n|   | species | measurement  | size |\n| - | ------- | ------------ | ---- |\n| 0\t| setosa  | sepal_length | 5.1  |\n| 1\t| setosa  | sepal_width  | 3.5  |","79230646":"## Question 1\n\nLoad the data from the file using the techniques learned today. Examine it.\n\nDetermine the following:\n\n* The number of data points (rows). (*Hint:* check out the dataframe `.shape` attribute.)\n* The column names. (*Hint:* check out the dataframe `.columns` attribute.)\n* The data types for each column. (*Hint:* check out the dataframe `.dtypes` attribute.)","fa28a71d":"## Question 7\n\nNow create a single plot with histograms for each feature (`petal_width`, `petal_length`, `sepal_width`, `sepal_length`) overlayed. If you have time, next try to create four individual histogram plots in a single figure, where each plot contains one feature.\n","97bf09f0":"## Introduction\n\nWe will be using the iris data set for this tutorial. This is a well-known data set containing iris species and sepal and petal measurements. The data we will use are in a file called `iris_data.csv` found in the [data](data\/) directory.","55a8f47f":"## Question 5\n\nMake a scatter plot of `sepal_length` vs `sepal_width` using Matplotlib. Label the axes and give the plot a title.","fc15362f":"## Question 2\n\nExamine the species names and note that they all begin with 'Iris-'. Remove this portion of the name so the species name is shorter. \n","46f79824":"## Question 10\n\nMake a [pairplot](http:\/\/seaborn.pydata.org\/generated\/seaborn.pairplot.html) with Seaborn to examine the correlation between each of the measurements.\n","9f1af6f3":"## Question 4\n\nCalculate the following **for each species** in a separate dataframe:\n\n* The mean of each measurement (sepal_length, sepal_width, petal_length, and petal_width).\n* The median of each of these measurements.\n\n*Hint:* you may want to use Pandas [`groupby` method](http:\/\/pandas.pydata.org\/pandas-docs\/stable\/generated\/pandas.DataFrame.groupby.html) to group by species before calculating the statistic.","93e22715":"## Question 3\n\nDetermine the following:  \n* The number of each species present. (*Hint:* check out the series `.value_counts` method.)\n* The mean, median, and quantiles and ranges (max-min) for each petal and sepal measurement.\n\n*Hint:* for the last question, the `.describe` method does have median, but it's not called median. It's the *50%* quantile. `.describe` does not have range though, and in order to get the range, you will need to create a new entry in the `.describe` table, which is `max - min`.","c50bbb87":"# Exploratory Data Analysis Exercise for ML beginners\nThis exercise is intended to check your ability to perform basic EDA processes\n\nit's made by IBM. Feel free to check out the (Exploratory Data Analysis for Machine Learning) course on COURSERA for more details\n\nBelow is my answer to its ten questions,that i decided to share with you. If you have ideas for better approaches, \ndon't hesitate to comment and share it with us  \n\nThat Said let's begin ","b4b95384":"# That's it for now\n\nHope you learned new stuff from it\n\nIf you have any suggestions, kindly let me know\n\nkeep on shaping the future \ud83d\ude09 \ud83d\ude09 ","fabf0cb1":"## Question 8\n\nUsing Pandas, make a boxplot of each petal and sepal measurement. Here is the documentation for [Pandas boxplot method](http:\/\/pandas.pydata.org\/pandas-docs\/version\/0.18.1\/visualization.html#visualization-box).","081a1cdb":"## Question 6\n\nMake a histogram of any one of the four features. Label axes and title it as appropriate. "}}