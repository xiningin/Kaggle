{"cell_type":{"810d0c03":"code","9fee93e9":"code","c37fdb47":"code","59ab485b":"code","20d78aec":"code","c3a5b37c":"code","362a3f76":"code","3e54c0de":"code","27f386eb":"code","447a37f9":"code","92f724df":"code","069d5c3d":"code","a7db7e4e":"code","82f0da30":"code","701d6ed9":"code","55323eb8":"code","40404735":"code","7a62f020":"code","89556c0c":"code","741c1972":"code","202fce31":"code","acd7c851":"code","cfd26f18":"code","82edc540":"code","db081a94":"code","3f282667":"markdown"},"source":{"810d0c03":"!pip install investpy\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nimport investpy\nplt.style.use('fivethirtyeight')","9fee93e9":"df = investpy.get_stock_historical_data(stock=\"ASELS\",country=\"Turkey\",from_date=\"01\/01\/2013\",to_date=\"06\/08\/2021\")\ndf.drop(columns='Currency',inplace=True)","c37fdb47":"plt.figure(figsize=(20,10))\nplt.plot(df[\"Close\"])","59ab485b":"gelecek_g\u00fcn = 145\ndf['Predicted'] = df[['Close']].shift(-gelecek_g\u00fcn)\ndf","20d78aec":"X = np.array(df.drop(['Predicted'],1))[:-gelecek_g\u00fcn]\nX","c3a5b37c":"Y = np.array(df['Predicted'])[:-gelecek_g\u00fcn]\nY","362a3f76":"x_train, x_test, y_train, y_test = train_test_split(X,Y, test_size=25)","3e54c0de":"tree = DecisionTreeRegressor().fit(x_train,y_train)\nlr = LinearRegression().fit(x_train,y_train)","27f386eb":"x_gelecek = df.drop(['Predicted'],1)[:-gelecek_g\u00fcn:]\nx_gelecek = x_gelecek.tail(gelecek_g\u00fcn)\nx_gelecek = np.array(x_gelecek)\nx_gelecek","447a37f9":"tree_pred = tree.predict(x_gelecek)\ntree_pred\nlr_pred = lr.predict(x_gelecek)\nlr_pred","92f724df":"valid = df[X.shape[0]:]\nvalid['tree_pred'] = tree_pred\nplt.figure(figsize=(15,8))\nplt.plot(df['Close'])\nplt.plot(valid[['Close', 'tree_pred']])\nplt.legend(['Original','Value','Tree Prediction'],fontsize=20)\nplt.xticks(rotation=45)\nplt.show()","069d5c3d":"valid","a7db7e4e":"plt.figure(figsize=(15,8))\nplt.plot(valid[['Close', 'tree_pred']])\nplt.legend(['Original','Tree Prediction'],fontsize=20)\nplt.xticks(rotation=45)\nplt.show()","82f0da30":"valid = df[X.shape[0]:]\nvalid['lr_pred'] = lr_pred\nplt.figure(figsize=(15,8))\nplt.plot(df['Close'])\nplt.plot(valid[['Close', 'lr_pred']])\nplt.legend(['Original','Value','Lr Prediction'], fontsize=20)\nplt.xticks(rotation=45)\nplt.show()","701d6ed9":"plt.figure(figsize=(15,8))\nplt.plot(valid[['Close', 'lr_pred']])\nplt.legend(['Original','Lr Prediction'],fontsize=20)\nplt.xticks(rotation=45)\nplt.show()","55323eb8":"valid['tree_pred'] = tree_pred\nvalid['lr_pred'] = lr_pred","40404735":"plt.figure(figsize=(15,8))\nplt.plot(valid[['Close', 'tree_pred', 'lr_pred']])\nplt.legend(['Original','Tree','Linear'],fontsize=20)\nplt.xticks(rotation=45)\nplt.show()","7a62f020":"np_corr_tree = np.corrcoef(valid['tree_pred'], valid['Close'])\nnp_corr_lr = np.corrcoef(valid['lr_pred'], valid['Close'])\nnp_corr_tree_lr = np.corrcoef(valid['tree_pred'], valid['lr_pred'])","89556c0c":"np_corr_lr","741c1972":"np_corr_tree","202fce31":"np_corr_tree_lr","acd7c851":"corr_of_lr = np_corr_lr[0,1]\ncorr_of_tree = np_corr_tree[0,1]","cfd26f18":"x = [\"Corr. Of Linear\",\"Corr. Of Tree\"]\nh = [corr_of_lr,corr_of_tree]\nplt.figure(figsize=(8,6))\nplt.bar(x,h)\nplt.show()","82edc540":"valid.drop(['Predicted'],axis=1,inplace=True)","db081a94":"valid","3f282667":"!pip install investpy"}}