{"cell_type":{"b1646a60":"code","6f42b419":"code","b7a45d51":"code","95ca32ed":"code","b3d88c4d":"code","65d0371e":"code","dd829fa0":"code","0cd20d1d":"code","b9443b01":"code","6fc01d25":"code","26d643ac":"code","c38e4e24":"code","4ff5fcef":"code","ea25241f":"code","b85a0e1e":"code","4b2cc8fd":"code","5445f10a":"code","ab42ff1a":"code","f711f030":"code","3871d3de":"code","0ddeeb73":"code","ac89d681":"code","706fabda":"code","c43667f4":"code","22242eda":"markdown","83d22bf6":"markdown","f747feb1":"markdown","5b968ed0":"markdown","4aee9563":"markdown","68b46490":"markdown","fa86f2a9":"markdown","1dd2d5a1":"markdown"},"source":{"b1646a60":"from tensorflow.compat.v1 import ConfigProto\nfrom tensorflow.compat.v1 import InteractiveSession\n\nconfig = ConfigProto()\nconfig.gpu_options.per_process_gpu_memory_fraction = 0.5\nconfig.gpu_options.allow_growth = True\nsession = InteractiveSession(config=config)","6f42b419":"from tensorflow.keras.layers import Input, Lambda, Dense, Flatten\nfrom tensorflow.keras.models import Model\nfrom keras.applications.vgg16 import VGG16\nfrom tensorflow.keras.applications.inception_v3 import preprocess_input\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator,load_img\nfrom tensorflow.keras.models import Sequential\nimport numpy as np\nfrom glob import glob","b7a45d51":"# Re-sizing all the Images \nIMAGE_SIZE = [224, 224]\n\ntrain_path = '\/kaggle\/input\/cotton-disease-dataset\/Cotton Disease\/train'\nvalid_path = '\/kaggle\/input\/cotton-disease-dataset\/Cotton Disease\/test'\n","95ca32ed":"# Here we will be using imagenet weights\n\nvgg16 = VGG16(input_shape=IMAGE_SIZE + [3], weights='imagenet', include_top=False)","b3d88c4d":"# don't train existing weights\nfor layer in vgg16.layers:\n    layer.trainable = False","65d0371e":"# useful for getting number of output classes\nfolders = glob('\/kaggle\/input\/cotton-disease-dataset\/Cotton Disease\/train\/*')","dd829fa0":"# Flatten the input\nx = Flatten()(vgg16.output)","0cd20d1d":"prediction = Dense(len(folders), activation='softmax')(x)\n\n#create a model object\nmodel = Model(inputs=vgg16.input, outputs=prediction)","b9443b01":"# Model Summary\nmodel.summary()","6fc01d25":"# Compile the Model\nmodel.compile( loss='categorical_crossentropy',\n               optimizer='adam',\n               metrics=['accuracy'])","26d643ac":"# Use the Image Data Generator to import the images from the dataset\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n\ntrain_datagen = ImageDataGenerator(rescale = 1.\/255,\n                                   shear_range = 0.2,\n                                   zoom_range = 0.2,\n                                   horizontal_flip = True)\n\ntest_datagen = ImageDataGenerator(rescale = 1.\/255)","c38e4e24":"# Make sure you provide the same target size as initialied for the image size\ntraining_set = train_datagen.flow_from_directory('\/kaggle\/input\/cotton-disease-dataset\/Cotton Disease\/train',\n                                                 target_size = (224, 224),\n                                                 batch_size = 32,\n                                                 class_mode = 'categorical')","4ff5fcef":"test_set = test_datagen.flow_from_directory('\/kaggle\/input\/cotton-disease-dataset\/Cotton Disease\/test',\n                                            target_size = (224, 224),\n                                            batch_size = 32,\n                                            class_mode = 'categorical')","ea25241f":"# Fit the model\nr = model.fit_generator( training_set,\n                         validation_data=test_set,\n                        epochs=20,\n                        steps_per_epoch=len(training_set),\n                         validation_steps=len(test_set))","b85a0e1e":"import matplotlib.pyplot as plt","4b2cc8fd":"#Ploting Acuracy & Loss\nimport matplotlib.pyplot as plt\nplt.plot(r.history['accuracy'])\nplt.plot(r.history['val_accuracy'])\nplt.plot(r.history['loss'])\nplt.plot(r.history['val_loss'])\nplt.title(\"Model Accuracy\")\nplt.ylabel(\"Accuracy\")\nplt.xlabel(\"Epoch\")\nplt.legend([\"Accuracy\",\"Validation Accuracy\",\"loss\",\"Validation Loss\"])\nplt.show()","5445f10a":"#Save the model as h5 file\nfrom tensorflow.keras.models import load_model\nmodel.save('model_inception.h5')","ab42ff1a":"#Example 1\n\nimport numpy as np\nfrom tensorflow.keras.preprocessing import image\ntest_image = image.load_img('\/kaggle\/input\/cotton-disease-dataset\/Cotton Disease\/test\/fresh cotton plant\/dsd (140)_iaip.jpg', target_size = (224, 224))\nimgplot = plt.imshow(test_image)\ntest_image = image.img_to_array(test_image)\ntest_image=test_image\/255\ntest_image = np.expand_dims(test_image, axis = 0)\npreds = model.predict(test_image)","f711f030":"preds","3871d3de":"preds = np.argmax(preds, axis=1)","0ddeeb73":"if preds==0:\n  print(\"The leaf is diseased cotton leaf\")\nelif preds==1:\n  print(\"The leaf is diseased cotton plant\")\nelif preds==2:\n  print(\"The leaf is fresh cotton leaf\")\nelse:\n  print(\"The leaf is fresh cotton plant\")","ac89d681":"#Example 2\n\nimport numpy as np\nfrom tensorflow.keras.preprocessing import image\ntest_image = image.load_img('\/kaggle\/input\/cotton-disease-dataset\/Cotton Disease\/test\/diseased cotton leaf\/dis_leaf (153)_iaip.jpg', target_size = (224, 224))\nimgplot = plt.imshow(test_image)\ntest_image = image.img_to_array(test_image)\ntest_image=test_image\/255\ntest_image = np.expand_dims(test_image, axis = 0)\npreds = model.predict(test_image)","706fabda":"preds = np.argmax(preds, axis=1)","c43667f4":"if preds==0:\n  print(\"The leaf is diseased cotton leaf\")\nelif preds==1:\n  print(\"The leaf is diseased cotton plant\")\nelif preds==2:\n  print(\"The leaf is fresh cotton leaf\")\nelse:\n  print(\"The leaf is fresh cotton plant\")","22242eda":"### Example 1","83d22bf6":"# Transfer Learning VGG16 using Keras","f747feb1":"# **The End**","5b968ed0":"### Importing the libraries","4aee9563":"### Example 2","68b46490":"### Import the Vgg 16 library","fa86f2a9":"# **Testing**","1dd2d5a1":"# InceptionV3, ResNet152V2 Present on my github\n# https:\/\/github.com\/Prachi-Gopalani13\/Cotton-Leaf-disease-prediction"}}