{"cell_type":{"802ee207":"code","ceb64133":"code","bc7d827f":"code","0bcd1044":"code","23f44514":"code","79553d68":"code","15d9595e":"code","940222e6":"code","63c776f8":"code","798c5272":"code","45bd7efc":"code","2836ed8e":"code","d7dbd68e":"code","586a9573":"code","7bc9f55d":"code","e7966a3c":"code","1443ad02":"code","c1139d46":"code","78a655cf":"code","f99d12c2":"code","4ca30056":"code","59c8d33d":"code","250d0c58":"code","2dc739f7":"code","b7fff18e":"code","e387d9e4":"code","db178347":"code","fc51de98":"code","97654cdd":"code","2714aca0":"code","2ed50437":"code","029dfe15":"code","4a1f5d12":"code","d3bcf694":"code","b3206d85":"code","026c3180":"code","f1458861":"code","7b1a1de3":"code","3b1d6702":"code","12af0e8d":"code","ab64954f":"code","e3f0a334":"code","003e0dfe":"code","267ca43e":"code","a6298dfd":"code","537af226":"code","b783f371":"code","3083e861":"code","5eaf94f8":"code","19110dce":"code","2b1bcab2":"code","671454db":"code","d20053cb":"code","ba559723":"code","a1c30f0c":"code","206f14e8":"code","34954d6b":"code","43a71e0d":"code","0af69334":"code","45266efa":"code","1b38c8e4":"code","15501904":"code","a9074b15":"code","8e3a123c":"code","65c07601":"code","a01cab72":"code","dd755b66":"code","9eeae4b6":"code","a9122501":"code","c1a204c7":"code","2cc8ab63":"code","72e29f6f":"code","efcf24f2":"code","61cd984d":"code","57a5edb7":"code","f96623f8":"code","fbbd7a11":"markdown","5a78cc95":"markdown","eeb957af":"markdown","bef81398":"markdown","927d9d69":"markdown","bc09badf":"markdown","7238d527":"markdown","4cd32990":"markdown","fafa77a2":"markdown","3afe9e0a":"markdown","421711d2":"markdown","1f199e43":"markdown","e249ec97":"markdown","ea9486a9":"markdown","729dad29":"markdown","565e70c7":"markdown","89c35257":"markdown","b64b0c42":"markdown","c8b0c090":"markdown","e922a56c":"markdown","40e9ae7e":"markdown","1366398e":"markdown","a2c180ef":"markdown","26bce7c9":"markdown","eb05752d":"markdown","5064cbe1":"markdown","9f624fef":"markdown","942f7148":"markdown","ceefed29":"markdown","5fabc07a":"markdown","5aa2c354":"markdown","784a38c9":"markdown","89b14c97":"markdown","1b1b34fc":"markdown","7c174f5e":"markdown","c9f3a756":"markdown","f4f32bc2":"markdown"},"source":{"802ee207":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","ceb64133":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","bc7d827f":"pd.set_option('display.max_columns',None)","0bcd1044":"df=pd.read_csv('\/kaggle\/input\/onelasttrain\/TRAIN.csv',na_values=['None','?'])","23f44514":"df.head()","79553d68":"df.info()","15d9595e":"miss_val=(df.isna().sum()\/len(df)*100).sort_values(ascending=False)\nmiss_val[miss_val>0]","940222e6":"dropped=[]\nfor col in df.columns:\n    if df[col].isna().sum() > 20000:\n        dropped.append(col)","63c776f8":"df=df.drop(columns=dropped)","798c5272":"df.describe()","45bd7efc":"df.head()","2836ed8e":"df['readmitted_NO'].value_counts()","d7dbd68e":"df.gender.value_counts()","586a9573":"df[df['gender']=='Unknown\/Invalid']","7bc9f55d":"df=df.drop(30506)\ndf=df.reset_index(drop=True)","e7966a3c":"pd.crosstab(df.age,df.readmitted_NO)","1443ad02":"pd.crosstab(df.diabetesMed,df.insulin)","c1139d46":"pd.crosstab(df.diabetesMed,df.readmitted_NO)","78a655cf":"plt.rcParams['figure.figsize'] = (10,6)\nsns.countplot(df['number_diagnoses'],palette='twilight_shifted')\nplt.show()","f99d12c2":"sns.countplot(df['time_in_hospital'])\nplt.show()","4ca30056":"sns.countplot(df.race,palette='Spectral')\nplt.show()","59c8d33d":"sns.countplot(df.age,palette = 'Dark2_r')\nplt.show()","250d0c58":"df.info()","2dc739f7":"df.race=df.race.fillna(df.race.mode())","b7fff18e":"df.diag_1=pd.to_numeric(df.diag_1,errors='coerce')\ndf.diag_2=pd.to_numeric(df.diag_2,errors='coerce')\ndf.diag_3=pd.to_numeric(df.diag_3,errors='coerce')","e387d9e4":"sns.set(style = 'whitegrid')\nsns.distplot(df.diag_1)\nplt.show()","db178347":"sns.set(style = 'whitegrid')\nsns.distplot(df.diag_2)\nplt.show()","fc51de98":"sns.set(style = 'whitegrid')\nsns.distplot(df.diag_3)\nplt.show()","97654cdd":"df.diag_1=df.diag_1.fillna(df.diag_1.mean())\ndf.diag_2=df.diag_2.fillna(df.diag_2.mean())","2714aca0":"df.diag_3.mode()","2ed50437":"df.diag_3=df.diag_3.fillna(250)","029dfe15":"fig,(ax1,ax2)=plt.subplots(1,2)\nax1.scatter(x='num_lab_procedures',y='num_medications',data=df[df['readmitted_NO']==0],color='b')\nax2.scatter(x='num_lab_procedures',y='num_medications',data=df[df['readmitted_NO']==1],color='r')\nax1.set_xlabel('Number of lab procedures')\nax1.set_ylabel('Number of medications')\nplt.show()","4a1f5d12":"sns.stripplot(df['age'], df['num_lab_procedures'], palette = 'Purples', size = 10)\nplt.show()","d3bcf694":"sns.boxplot(df.readmitted_NO, df.num_lab_procedures)\nplt.show()","b3206d85":"cat=['metformin','repaglinide','nateglinide','chlorpropamide','glimepiride','acetohexamide',\n     'glipizide','glyburide','tolbutamide','pioglitazone','rosiglitazone','acarbose','miglitol',\n     'troglitazone','tolazamide','examide','citoglipton','insulin','glyburide-metformin',\n    'glipizide-metformin','glimepiride-pioglitazone','metformin-rosiglitazone',\n     'metformin-pioglitazone','change','diabetesMed','race','gender','age']","026c3180":"for col in cat:\n    df[col]=df[col].astype('category')\n    df[col]=df[col].cat.codes","f1458861":"df.head()","7b1a1de3":"df.info()","3b1d6702":"from sklearn.decomposition import PCA\npca=PCA()","12af0e8d":"pca.fit(df)","ab64954f":"transformed=pca.transform(df)","e3f0a334":"features=range(pca.n_components_)\nplt.bar(features,pca.explained_variance_)\nplt.xticks(features)\nplt.show()","003e0dfe":"from sklearn.feature_selection import SelectKBest   #for feature selection\nfrom sklearn.feature_selection import f_classif","267ca43e":"test = SelectKBest(score_func=f_classif, k=20)\nfit = test.fit(df.drop(columns=['readmitted_NO']), df['readmitted_NO'])\nprint(sorted(zip(fit.scores_,df.columns),reverse=True))","a6298dfd":"to_drop=['metformin-pioglitazone','metformin-rosiglitazone','glimepiride-pioglitazone',\n       'chlorpropamide','troglitazone','insulin','acetohexamide','glipizide-metformin',\n       'tolbutamide','glimepiride','glyburide-metformin','citoglipton','examide','miglitol',\n       'diag_1','tolazamide','admission_type_id','rosiglitazone','nateglinide','diag_2',\n       'glyburide','acarbose','glipizide']","537af226":"data=df.drop(columns=to_drop)","b783f371":"from sklearn.preprocessing import StandardScaler","3083e861":"data_scale=StandardScaler().fit_transform(data)","5eaf94f8":"data_scale=pd.DataFrame(data_scale,columns=data.columns)","19110dce":"x_scale=data_scale.drop(columns=['readmitted_NO'])","2b1bcab2":"x=data.drop(columns=['readmitted_NO'])","671454db":"from sklearn.cluster import KMeans","d20053cb":"model=KMeans(n_clusters=2)","ba559723":"model.fit(x)\nlabels=model.predict(x)","a1c30f0c":"pd.crosstab(labels,df['readmitted_NO'])","206f14e8":"metrics.accuracy_score(labels,df['readmitted_NO'])","34954d6b":"model.fit(x_scale)","43a71e0d":"labels_scale=model.predict(x_scale)","0af69334":"pd.crosstab(labels_scale,df['readmitted_NO'])","45266efa":"from sklearn import metrics\nmetrics.accuracy_score(labels_scale,df['readmitted_NO'])","1b38c8e4":"from scipy.cluster.vq import whiten","15501904":"data_whiten=whiten(data)\ndata_whiten=pd.DataFrame(data_whiten,columns=data.columns)","a9074b15":"x_whiten=data_whiten.drop(columns=['readmitted_NO'])","8e3a123c":"model.fit(x_whiten)\nlabels_whiten=model.predict(x_whiten)","65c07601":"pd.crosstab(labels_whiten,df['readmitted_NO'])","a01cab72":"metrics.accuracy_score(labels_whiten,df['readmitted_NO'])","dd755b66":"test=pd.read_csv('\/kaggle\/input\/onelasttrain\/TEST.csv',na_values=['None','?'])","9eeae4b6":"test.info()","a9122501":"test=test.drop(columns=dropped)\ntest.race=test.race.fillna('Caucasian')\ntest.diag_1=pd.to_numeric(test.diag_1,errors='coerce')\ntest.diag_2=pd.to_numeric(test.diag_2,errors='coerce')\ntest.diag_3=pd.to_numeric(test.diag_3,errors='coerce')\ntest.diag_1=test.diag_1.fillna(test.diag_1.mean())\ntest.diag_2=test.diag_2.fillna(test.diag_2.mean())\ntest.diag_3=test.diag_3.fillna(250)","c1a204c7":"cat=['metformin','repaglinide','nateglinide','chlorpropamide','glimepiride','acetohexamide',\n     'glipizide','glyburide','tolbutamide','pioglitazone','rosiglitazone','acarbose','miglitol',\n     'troglitazone','tolazamide','examide','citoglipton','insulin','glyburide-metformin',\n    'glipizide-metformin','glimepiride-pioglitazone','metformin-rosiglitazone',\n     'metformin-pioglitazone','change','diabetesMed','race','gender','age']\nfor col in cat:\n    test[col]=test[col].astype('category')\n    test[col]=test[col].cat.codes","2cc8ab63":"to_drop=['metformin-pioglitazone','metformin-rosiglitazone','glimepiride-pioglitazone',\n       'chlorpropamide','troglitazone','insulin','acetohexamide','glipizide-metformin',\n       'tolbutamide','glimepiride','glyburide-metformin','citoglipton','examide','miglitol',\n       'diag_1','tolazamide','admission_type_id','rosiglitazone','nateglinide','diag_2',\n       'glyburide','acarbose','glipizide']\ntest=test.drop(columns=to_drop)","72e29f6f":"test=test.drop(columns=['index'])","efcf24f2":"test_w=whiten(test)\ntest_w=pd.DataFrame(test_w,columns=test.columns)\ntarget=model.predict(test_w)","61cd984d":"sub=pd.DataFrame(target,columns=['target'])","57a5edb7":"sub=sub.reset_index()","f96623f8":"sub.to_csv('submission_c.csv',index=False)","fbbd7a11":"## Picking the most unrelevant features to drop ","5a78cc95":"## So we get here that is about just 3 columns and applying this would affect the data badly so we tried another method","eeb957af":"# Visualizing the data","bef81398":"## And we finished and after submission we get the same accuracy about 53%","927d9d69":"## And the ages are about > 50 years and it's predicted as it's for diabetes","bc09badf":"## The relation between both numbers of medications and lab procedures are about the same for readmitted","7238d527":"# Preparing the data for the model","4cd32990":"## There is no clear bias towards any specific value","fafa77a2":"# Preparing the test set","3afe9e0a":"# Dealing with missing values","421711d2":"## It's obvious that ages more than 50 take more medications but the lab procedures isn't in the same range ","1f199e43":"## Let's see the results without any scaling first","e249ec97":"## And the readmitted doesn't depend on lab procedures as well","ea9486a9":"## Let's try SelectKBest for feature selection","729dad29":"## Our model for clustering would be KMeans","565e70c7":"> **Notes** : whiten is more stable to get the accurecy than standard scaler ","89c35257":"## Calculating the percentage of missing values and dropping the columns with more than about 20% missing","b64b0c42":"## We'd better use \"whiten\" to scale","c8b0c090":"# Scaling the data using different types of scaling","e922a56c":"## There is a lot of 9 diagnoses","40e9ae7e":"## Let's see mode or mean !","1366398e":"## Caucasian is the most frequant in this data ","a2c180ef":"## We get about 53% with standarization ","26bce7c9":"## The majority didn't stay in the hospital for a long ","eb05752d":"## And we get 53% again","5064cbe1":"## Using PCA to get the most important features","9f624fef":"## Using whiten to scale the data","942f7148":"## Dropping the columns and getting the set ready to be clustered :\"","ceefed29":"## Converting into numeric values so as we could fill the NaN values","5fabc07a":"## With standarization","5aa2c354":"## Showing some insights like number of each unique value","784a38c9":"## First let's try standarization","89b14c97":"### There is an invalid value to drop","1b1b34fc":"## Encoding categorical columns","7c174f5e":"# Getting the data and explore it","c9f3a756":"## Great, the diag_1 and 2 are better filled with mean, but 3's mode is more suitable for it","f4f32bc2":"## 47% , we could do better"}}