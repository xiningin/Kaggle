{"cell_type":{"bf67f5fa":"code","39c4c384":"code","d8dd72d9":"code","66a9af44":"code","baa5b036":"code","86689c26":"code","cdd798fe":"code","a8ffe9e2":"code","efcf371e":"code","6bc1e124":"code","76e04626":"code","499e3899":"code","851b852b":"code","01360876":"code","e76d6f77":"code","720b2c15":"code","1f208298":"code","e79b7045":"code","19ef12b8":"code","e940d02d":"code","3ef0221e":"code","6e8db975":"code","24cf05e0":"code","c352bcb3":"code","097ca325":"code","aeb537f8":"code","c27d19a3":"code","bed0a16f":"code","07ae6906":"code","5b4626f5":"markdown","6f1ac8cd":"markdown","756e4808":"markdown","55da8a0d":"markdown","4c019ee8":"markdown","3401fe77":"markdown","2c00e29f":"markdown","4b51b74f":"markdown"},"source":{"bf67f5fa":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\nimport plotly.express as px\n\n!pip install openpyxl\n\nimport warnings\nwarnings.filterwarnings('ignore')","39c4c384":"teams = pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Teams.xlsx')\nathletes = pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Athletes.xlsx')\ncoaches = pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Coaches.xlsx')\nmedals = pd.read_excel('..\/input\/2021-olympics-in-tokyo\/Medals.xlsx')\nentriesgenders = pd.read_excel('..\/input\/2021-olympics-in-tokyo\/EntriesGender.xlsx')\ncontinents = pd.read_excel('..\/input\/continent-list-for-2021-olympics-in-tokyo-dataset\/Continent List.xlsx')","d8dd72d9":"entriesgenders.head()","66a9af44":"male = entriesgenders[\"Male\"].sum()\nfemale = entriesgenders[\"Female\"].sum()","baa5b036":"fig = go.Figure(data=[go.Pie(labels=['Male','Female'],values=[male, female])],)\n\nfig.update_traces(hoverinfo='value', textinfo='percent')\n\nfig.update_layout(template=\"seaborn\", font_family=\"Rockwell\", font_size=16, title=\"Male\/female athletes\",\n                 title_font_size=24,hoverlabel=dict(bgcolor=\"white\",font_size=12,font_family=\"Rockwell\"))\n\nfig.show()","86689c26":"athletes.head()","cdd798fe":"athletes = athletes.replace(\"People's Republic of China\", \"China\")\nathletes = athletes.replace(\"United States of America\", \"USA\")\nathletes_count = athletes[\"NOC\"].value_counts()","a8ffe9e2":"athletes_count.head()","efcf371e":"fig = go.Figure(go.Bar(x=athletes_count.values[:10],y=athletes_count.index[:10],orientation='h'))\n\nfig.update_layout(template=\"seaborn\", font_family=\"Rockwell\", font_size=16, title=\"Nations with most athletes\",\n                title_font_size=24, hoverlabel=dict(bgcolor=\"white\",font_size=12,font_family=\"Rockwell\"))\n\nfig.update_traces(textfont_size=12, hovertemplate='<b>%{y} - %{x} athletes<\/b><extra><\/extra>')\n\nfig.show()","6bc1e124":"continents.head()","76e04626":"continents = continents.rename(columns={\"Country\":\"NOC\"})","499e3899":"continents.head()","851b852b":"continents = continents.replace(\"United States\", \"USA\")\ncontinents = continents.replace(\"Russian Olympic Committee\", \"ROC\")\ncontinents = continents.replace(\"Russian Olympic Committee\", \"ROC\")\ncontinents = continents.fillna('Other')\ncontinent_athletes = pd.merge(continents, athletes, on=\"NOC\")","01360876":"continent_athletes.head()","e76d6f77":"continent_athletes = continent_athletes[\"Continent\"].value_counts()","720b2c15":"fig = go.Figure(go.Treemap(values = continent_athletes.values,labels = continent_athletes.index,\n                parents = ['','','','','','','','',''],textinfo = \"label+percent entry\"))\n\nfig.update_layout(template=\"seaborn\", font_family=\"Rockwell\", font_size=16, title=\"Athletes distribution\",\n                title_font_size=24, margin = dict(t=50, l=25, r=25, b=25),\n                hoverlabel=dict(bgcolor=\"white\",font_size=12,font_family=\"Rockwell\"))\n\nfig.update_traces(hoverinfo='value')\n\nfig.show()","1f208298":"entriesgenders = entriesgenders.sort_values(\"Total\", ascending=True)","e79b7045":"fig = go.Figure(go.Bar(x=entriesgenders[\"Total\"],y=entriesgenders[\"Discipline\"],orientation='h'))\n                \nfig.update_layout(template=\"seaborn\", font_family=\"Rockwell\", font_size=8, height=1000,\n                title=\"Athletes per disciplines\",xaxis_title=\"Athletes\", title_font_size=24,\n                hoverlabel=dict(bgcolor=\"white\",font_size=12,font_family=\"Rockwell\"))\n\nfig.update_traces(textfont_size=12, hovertemplate='<b>%{y} - %{x} athletes<\/b><extra><\/extra>')\n\nfig.show()","19ef12b8":"medals.head()","e940d02d":"medals = medals.replace(\"People's Republic of China\", \"China\")\nmedals = medals.replace(\"United States of America\", \"USA\")\nathletes_count = athletes_count.to_frame()\nathletes_count.index.name = \"Team\/NOC\"","3ef0221e":"athletes_count.head()","6e8db975":"total_medal =  pd.merge(medals, athletes_count, on=\"Team\/NOC\")","24cf05e0":"total_medal.head()","c352bcb3":"total_medal = total_medal.rename(columns={\"NOC\": \"Athletes Count\"})\ntop10medal = total_medal[:10].sort_values(by=\"Total\", ascending=False)","097ca325":"fig = go.Figure(data=[\n    go.Bar(x=top10medal[\"Team\/NOC\"], y=top10medal[\"Bronze\"], name=\"Bronze\" ,hovertext=['Bronze']),\n    go.Bar(x=top10medal[\"Team\/NOC\"], y=top10medal[\"Silver\"], name=\"Silver\" ,hovertext=['Silver']),\n    go.Bar(x=top10medal[\"Team\/NOC\"], y=top10medal[\"Gold\"], name=\"Gold\" ,hovertext=['Gold'])])\n\nfig.update_layout(template=\"seaborn\", colorway=[\"#ac896a\",\"#c1c1c1\",\"#e6b11a\"], font_family=\"Rockwell\", \n                font_size=16, title=\"TOP 10\",title_font_size=24, barmode=\"stack\",\n                hoverlabel=dict(bgcolor=\"white\",font_size=12,font_family=\"Rockwell\"))\n\nfig.update_traces(textfont_size=12, hoverinfo='y')\n\nfig.show()","aeb537f8":"total_medal.head()","c27d19a3":"total_medal = total_medal[total_medal[\"Athletes Count\"]>100]\ntotal_medal[\"Medal\/Athletes\"] = (total_medal[\"Total\"]\/total_medal[\"Athletes Count\"]).round(3)\ntotal_medal[\"Gold ratio\"] = (total_medal[\"Gold\"]\/total_medal[\"Total\"]).round(3)\ntotal_medal = total_medal.rename(columns={\"Team\/NOC\":\"NOC\"})\ntotal_medal = pd.merge(total_medal, continents, on=\"NOC\")\ntotal_medal = total_medal.sort_values(by=[\"Medal\/Athletes\"], ascending=False)","bed0a16f":"total_medal.head(15)","07ae6906":"fig = px.scatter(total_medal[:15], x=\"Medal\/Athletes\", y=\"Gold ratio\", color=\"Continent\", size=\"Total\", \n                text=\"NOC\", size_max=30, \n                color_discrete_sequence=[\"#dd8453\", \" #55a868\", \"#c44d51\",\"#4b72b0\", \"#8171b3\"])\n\nfig.update_layout(template=\"seaborn\", font_family=\"Rockwell\", font_size=16, title_font_size=24,\n                title=\"Medal ratio<br><sup>Size of scatter represents the number of total medal<\/sup>\",\n                xaxis_title=\"Medal \/ athletes\", yaxis_title=\"Gold medal \/ total medal\",\n                hoverlabel=dict(bgcolor=\"white\",font_size=12,font_family=\"Rockwell\"))\n                 \nfig.update_traces(textposition='top center', textfont_size=12, \n                hovertemplate='<b>%{text}<\/b><br>Medal ratio: %{x:,}<br>Gold Medal Ratio: %{y:,}<extra><\/extra>')\n\nfig.update_xaxes(showspikes=True,tick0=0.05, dtick=0.025)\nfig.update_yaxes(showspikes=True,tick0=0.1, dtick=0.1)\n\nfig.show()","5b4626f5":"Well Europe give almost the half of the athletes!\nAnd what are the main disciplines?","6f1ac8cd":"<h1>Analysis<\/h1>\n\n<p>First, lets see a gender ratio.<\/p>","756e4808":"Yes, the big ones are here, but there are some small countries with a really good performance. ","55da8a0d":"<h1>Introduction<\/h1>\n<p>Hey! It's my first project here on kaggle. I'm new on this field, the code and solutions can be weird so any feedback will be helpful for me.<\/p>","4c019ee8":"<p>Where are the most athletes from?<\/p>","3401fe77":"Of course from the largest countries... And how about continents?","2c00e29f":"Sure, athletics on the top.\nNow let's see something more intresting. How did the nations perform? (TOP 10 nations base on medal count)","4b51b74f":"Hm the same nations as in the second chart... If we compare the count of medals to the count of athletes, we can see this from another perspective."}}