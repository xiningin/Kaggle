{"cell_type":{"495484aa":"code","ed1c3652":"code","71d3f464":"code","35196d75":"code","b9d71833":"code","eda50c97":"code","b63b9413":"code","7df6d391":"code","212c2818":"code","cf695e07":"code","c87c16f4":"code","d408a2cb":"code","64c557b9":"code","c7e8f01f":"code","9d216a32":"code","305b4f13":"code","266bcb30":"code","e9439bab":"code","8dabf4fc":"code","7c6789eb":"code","00c96f2a":"code","dcd75371":"code","ff7abdc7":"code","f6dc9b3c":"code","a4c934a1":"code","142fb880":"code","6804d366":"code","0f503524":"code","ce2117c0":"code","a3a8605a":"code","476cbf5c":"code","a2c64a06":"code","6e0acda2":"code","e3d762e9":"code","12cf266b":"code","162620d3":"code","27918980":"code","66765db0":"code","aa17bb2e":"code","b34f0d22":"code","03956577":"code","e37ae4b8":"code","edd6684d":"code","55bf5239":"code","26e035b9":"code","acedea86":"code","faf38419":"markdown"},"source":{"495484aa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set()\nfrom scipy import stats\nfrom sklearn.model_selection import KFold\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","ed1c3652":"train = pd.read_csv('\/kaggle\/input\/ods-mlclass-dubai-2019-03-lecture3-hw\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/ods-mlclass-dubai-2019-03-lecture3-hw\/test.csv')\nprint(train.shape,test.shape)","71d3f464":"# print(train.workclass.value_counts())\ntrain[\"workclass\"] =np.where(train[\"workclass\"].isin([' ?']),\"unknown\",train[\"workclass\"])\ntrain[\"occupation\"] =np.where(train[\"occupation\"].isin([' ?']),\"unknown\",train[\"occupation\"])\ntrain[\"native-country\"] =np.where(train[\"native-country\"].isin([' ?']),\"unknown\",train[\"native-country\"])\n","35196d75":"plt.figure(figsize=(25,10))\nplt.subplot(2,5,1)\nsns.countplot(x=\"education\",hue=\"target\",data=train)\nplt.ylabel(\"Count\")\nplt.xticks(rotation=90)\nplt.subplot(2,5,2)\nsns.countplot(x=\"workclass\",hue=\"target\",data=train)\nplt.ylabel(\"\")\nplt.xticks(rotation=90)\nplt.subplot(2,5,3)\nsns.countplot(x=\"marital-status\",hue=\"target\",data=train)\nplt.ylabel(\"\")\nplt.xticks(rotation=90)\nplt.subplot(2,5,4)\nsns.countplot(x=\"occupation\",hue=\"target\",data=train)\nplt.ylabel(\"\")\nplt.xticks(rotation=90)\nplt.subplot(2,5,5)\nsns.countplot(x=\"relationship\",hue=\"target\",data=train)\nplt.ylabel(\"\")\nplt.xticks(rotation=90)\n","b9d71833":"plt.figure(figsize=(25,10))\nplt.subplot(2,3,1)\nsns.countplot(x=\"race\",hue=\"target\",data=train)\nplt.ylabel(\"Count\")\nplt.xticks(rotation=90)\nplt.subplot(2,3,2)\nsns.countplot(x=\"native-country\",hue=\"target\",data=train)\nplt.ylabel(\"\")\nplt.xticks(rotation=90)\nplt.subplot(2,3,3)\nsns.countplot(x=\"sex\",hue=\"target\",data=train)\nplt.ylabel(\"\")\nplt.xticks(rotation=90)\n\n","eda50c97":"list_cols=[]\nlist_cols=[pd.get_dummies(train[\"workclass\"],prefix=\"workclass\"),\n                 pd.get_dummies(train[\"education\"],prefix=\"education\"),\n                 pd.get_dummies(train[\"marital-status\"],prefix=\"marital\"),\n                 pd.get_dummies(train[\"occupation\"],prefix=\"occupation\"),\n                 pd.get_dummies(train[\"relationship\"],prefix=\"relationship\"),\n                 pd.get_dummies(train[\"race\"],prefix=\"race\"),\n                 pd.get_dummies(train[\"native-country\"],prefix=\"country\"),\n                 pd.get_dummies(train[\"sex\"],prefix=\"sex\")]\nlist_cols_df=pd.concat(list_cols, axis=1)\nlist_cols_df.head(1)\ntrain_dmy=pd.concat([train,list_cols_df],axis=1)\n# list_cols_df.columns\ntrain_dmy.shape","b63b9413":"def woe_cat(indep,dep):\n    temp=train[[indep,dep]].groupby(indep)[dep].agg({'count',np.sum,np.mean})\n    temp[indep]=temp.index\n    temp=temp.rename(columns={\"sum\":\"event\"})\n    temp[\"eventrate\"]=temp[\"event\"]\/temp[\"event\"].sum()\n    temp[\"nonevent\"]=temp[\"count\"]-temp[\"event\"]\n    temp[\"noneventrate\"]=(temp[\"count\"]-temp[\"event\"])\/(temp[\"count\"]-temp[\"event\"]).sum()\n    temp[\"woe\"]=np.log(temp[\"eventrate\"]\/temp[\"noneventrate\"])\n    temp=temp.replace({\"woe\":{np.inf:0,-np.inf:0}})\n    temp=temp.sort_values(by=\"woe\",ascending=False)\n    temp[\"iv\"]=(temp[\"woe\"]* (temp[\"eventrate\"]-temp[\"noneventrate\"])).sum()\n    temp=temp.reset_index(drop=True)\n    return temp","7df6d391":"df = woe_cat(\"workclass\",\"target\")\nplt.plot(df[\"workclass\"],df[\"woe\"],ls=\"dashed\",marker=\"o\")\nplt.xticks(rotation=90)\ntrain_dmy[\"workclass_local_selfempnot_state\"]=train_dmy[\"workclass_ Self-emp-not-inc\"] + train_dmy[\"workclass_ Local-gov\"] + train_dmy[\"workclass_ State-gov\"]\ntrain_dmy[\"workclass_never_without_private\"]=train_dmy[\"workclass_ Never-worked\"] + train_dmy[\"workclass_ Without-pay\"] + train_dmy[\"workclass_ Private\"]\ntrain_dmy[\"workclass_sunk\"]= train_dmy[\"workclass_unknown\"]\nprint(df)\nlist_class =[ \"workclass_ Self-emp-inc\" , \"workclass_ Federal-gov\" , \"workclass_local_selfempnot_state\",   \"workclass_never_without_private\" ]\n# dummyto ignore : train_dmy[\"workclass_sunk\"]","212c2818":"df = woe_cat(\"education\",\"target\")\nplt.plot(df[\"education\"],df[\"woe\"],ls=\"dashed\",marker=\"o\")\nplt.xticks(rotation=90)\nprint(df)\ntrain_dmy[\"education_doc_prof\"] = train_dmy[\"education_ Doctorate\"] + train_dmy[\"education_ Prof-school\"]\ntrain_dmy[\"education_voc_acdm_preschool\"] = train_dmy[\"education_ Assoc-voc\"] + train_dmy[\"education_ Assoc-acdm\"] + train_dmy[\"education_ Preschool\"]\ntrain_dmy[\"education_coll_hsgrad\"] = train_dmy[\"education_ Some-college\"] + train_dmy[\"education_ HS-grad\"] \ntrain_dmy[\"education_xii_iiv_x\"] = train_dmy[\"education_ 12th\"] + train_dmy[\"education_ 7th-8th\"]  + train_dmy[\"education_ 10th\"]\ntrain_dmy[\"education_ix_xi_v_vi_i_iv\"] = train_dmy[\"education_ 9th\"] + train_dmy[\"education_ 11th\"]  + train_dmy[\"education_ 5th-6th\"] + train_dmy[\"education_ 1st-4th\"]\nlist_edu = [\"education_doc_prof\", \"education_ Masters\", \"education_ Bachelors\" , \"education_voc_acdm_preschool\", \"education_coll_hsgrad\", \"education_xii_iiv_x\"]\n# dummy ignore: \"education_ix_xi_v_vi_i_iv\"","cf695e07":"df = woe_cat(\"marital-status\",\"target\")\nplt.plot(df[\"marital-status\"],df[\"woe\"],ls=\"dashed\",marker=\"o\")\nplt.xticks(rotation=90)\nprint(df)\ntrain_dmy[\"marital_married_civ_af\"] = train_dmy[\"marital_ Married-civ-spouse\"] + train_dmy[\"marital_ Married-AF-spouse\"]\ntrain_dmy[\"marital_widow_spos_abs\"] = train_dmy[\"marital_ Widowed\"] + train_dmy[\"marital_ Married-spouse-absent\"]\nlist_marrital = [\"marital_married_civ_af\", \"marital_widow_spos_abs\" , \"marital_ Divorced\",\"marital_ Separated\"]\n# dummy ignore: \"marital_ Never-married\"","c87c16f4":"df = woe_cat(\"occupation\",\"target\")\nplt.plot(df[\"occupation\"],df[\"woe\"],ls=\"dashed\",marker=\"o\")\nplt.xticks(rotation=90)\ntrain_dmy[\"occupation_exec_prof\"] = train_dmy[\"occupation_ Exec-managerial\"]+train_dmy[\"occupation_ Prof-specialty\"]\ntrain_dmy[\"occupation_prot_tech\"] = train_dmy[\"occupation_ Protective-serv\"]+train_dmy[\"occupation_ Tech-support\"]\ntrain_dmy[\"occupation_crft_trans\"] = train_dmy[\"occupation_ Craft-repair\"]+train_dmy[\"occupation_ Transport-moving\"]\ntrain_dmy[\"occupation_adm_machine_farming_armed_unk\"] = train_dmy[\"occupation_ Adm-clerical\"]+train_dmy[\"occupation_ Machine-op-inspct\"]+train_dmy[\"occupation_ Farming-fishing\"]+train_dmy[\"occupation_ Armed-Forces\"]\\\n+train_dmy[\"occupation_unknown\"]\ntrain_dmy[\"occupation_oth_priv\"] = train_dmy[\"occupation_ Priv-house-serv\"]+train_dmy[\"occupation_ Other-service\"]\nlist_occu = [\"occupation_exec_prof\",\"occupation_prot_tech\",\"occupation_ Sales\",\"occupation_crft_trans\",\"occupation_adm_machine_farming_armed_unk\",\"occupation_ Handlers-cleaners\"]\n# dummy ignore : \"occupation_oth_priv\"\ndf","d408a2cb":"train_dmy.columns[train_dmy.columns.str.startswith(\"relat\")]","64c557b9":"df = woe_cat(\"relationship\",\"target\")\nplt.plot(df[\"relationship\"],df[\"woe\"],ls=\"dashed\",marker=\"o\")\nplt.xticks(rotation=90)\ntrain_dmy[\"relationship_wife_husband\"] = train_dmy[\"relationship_ Husband\"] + train_dmy[\"relationship_ Wife\"]\nlist_relat=[\"relationship_wife_husband\",\"relationship_ Not-in-family\",\"relationship_ Unmarried\",\"relationship_ Other-relative\"]\n# dummyignore : \"relationship_ Own-child\"\ndf","c7e8f01f":"df = woe_cat(\"race\",\"target\")\nplt.plot(df[\"race\"],df[\"woe\"],ls=\"dashed\",marker=\"o\")\nplt.xticks(rotation=90)\ndf\nlist_race = ['race_ Amer-Indian-Eskimo', 'race_ Asian-Pac-Islander',       'race_ Black', 'race_ Other', 'race_ White']","9d216a32":"train_dmy.columns[train_dmy.columns.str.startswith(\"country\")]","305b4f13":"df = woe_cat(\"native-country\",\"target\")\nplt.plot(df[\"native-country\"],df[\"woe\"],ls=\"dashed\",marker=\"o\")\nplt.xticks(rotation=90)\ndf\ntrain_dmy[\"country_irn_fran_ind_taiw_jap_yugo_camb\"] = train_dmy['country_ Iran'] + train_dmy['country_ France'] + train_dmy['country_ India']\\\n+train_dmy['country_ Taiwan']+train_dmy['country_ Japan']+train_dmy['country_ Yugoslavia']+train_dmy['country_ Cambodia']\ntrain_dmy[\"country_itl_eng_can_germ_phi_hon\"] = train_dmy['country_ Italy']+ train_dmy['country_ England']+ train_dmy['country_ Canada'] +\\\ntrain_dmy['country_ Germany']+train_dmy['country_ Philippines'] + train_dmy['country_ Hong']\ntrain_dmy[\"country_gree_chi_cub_unk_scot_us\"] = train_dmy['country_ Greece'] + train_dmy['country_ China'] + train_dmy['country_ Cuba']+train_dmy['country_unknown']\\\n+train_dmy['country_ Scotland'] + train_dmy['country_ United-States']\ntrain_dmy[\"country_hol_out_hun_ire_sout_pol\"] = train_dmy['country_ Holand-Netherlands'] + train_dmy['country_ Outlying-US(Guam-USVI-etc)'] + \\\ntrain_dmy['country_ Hungary']+train_dmy['country_ Ireland'] + train_dmy['country_ South'] + train_dmy['country_ Poland']\ntrain_dmy[\"country_thai_ecu_jam_laos_por_tri_pue\"] = train_dmy['country_ Thailand'] + train_dmy['country_ Ecuador'] + train_dmy['country_ Jamaica'] + \\\ntrain_dmy['country_ Laos'] + train_dmy['country_ Portugal'] + train_dmy['country_ Trinadad&Tobago'] + train_dmy['country_ Puerto-Rico']\nlist_coun = [\"country_irn_fran_ind_taiw_jap_yugo_camb\", \"country_itl_eng_can_germ_phi_hon\" ,\"country_gree_chi_cub_unk_scot_us\" ,\"country_hol_out_hun_ire_sout_pol\",\"country_thai_ecu_jam_laos_por_tri_pue\"]","266bcb30":"def woe_num(indep,dep):\n    temp=train_dmy[[indep,dep]].groupby(indep)[dep].agg({'count',np.sum,np.mean})\n    temp[indep]=temp.index\n    temp=temp.rename(columns={\"sum\":\"event\"})\n    temp[\"eventrate\"]=temp[\"event\"]\/temp[\"event\"].sum()\n    temp[\"nonevent\"]=temp[\"count\"]-temp[\"event\"]\n    temp[\"noneventrate\"]=(temp[\"count\"]-temp[\"event\"])\/(temp[\"count\"]-temp[\"event\"]).sum()\n    temp[\"woe\"]=np.log(temp[\"eventrate\"]\/temp[\"noneventrate\"])\n    temp=temp.replace({\"woe\":{np.inf:0,-np.inf:0}})\n#     temp=temp.sort_values(by=\"woe\",ascending=False)\n    temp[\"iv\"]=(temp[\"woe\"]* (temp[\"eventrate\"]-temp[\"noneventrate\"])).sum()\n    temp=temp.reset_index(drop=True)\n    return temp","e9439bab":"train_dmy[\"education-num\"].unique()\ndf = woe_num(\"education-num\",\"target\")\nplt.plot(df[\"education-num\"],df[\"woe\"],ls=\"dashed\",marker=\"o\")\nplt.xticks(rotation=90)\ntrain_dmy[\"education-num_enc\"]=train_dmy[\"education-num\"].replace({1.0:0.0,2.0:-2.147591,3.0:-1.838067,4.0:-1.569754,5.0:-1.744181,6.0:-1.494261,7.0:-1.774019,8.0:-1.346711,9.0:-0.513642,10.0:-0.300241,11.0:0.108586,\\\n                                                                  12.0:0.040867,13.0:0.803894,14.0:1.375570,15.0:2.165181,16.0:2.199003}) \nprint(train_dmy[\"education-num_enc\"].unique())\ntrain_dmy[\"education-num_1_3\"] = np.where(train_dmy[\"education-num\"]<=3,1,0)\ntrain_dmy[\"education-num_4_8\"] = np.where((train_dmy[\"education-num\"]>3) & (train_dmy[\"education-num\"]<=8),1,0)\ntrain_dmy[\"education-num_9_10\"] = np.where((train_dmy[\"education-num\"]>8) & (train_dmy[\"education-num\"]<=10),1,0)\ntrain_dmy[\"education-num_11\"] = np.where(train_dmy[\"education-num\"]==11,1,0)\ntrain_dmy[\"education-num_12\"] = np.where(train_dmy[\"education-num\"]==12,1,0)\ntrain_dmy[\"education-num_13\"] = np.where(train_dmy[\"education-num\"]==13,1,0)\ntrain_dmy[\"education-num_14_16\"] = np.where((train_dmy[\"education-num\"]>13) & (train_dmy[\"education-num\"]<=16),1,0)\n# train_dmy[\"education_\"]\nlist_edunum = [\"education-num_1_3\",\"education-num_4_8\",\"education-num_9_10\",\"education-num_11\",\"education-num_12\",\"education-num_13\",\"education-num_14_16\"]\ndf","8dabf4fc":"train_dmy[\"agefact\"] = pd.qcut(train_dmy[\"age\"],10)\ntrain_dmy[\"agefact\"].value_counts()\ndf = woe_num(\"agefact\",\"target\")\ndf\n# plt.plot(df[\"agefact\"],df[\"woe\"],ls=\"dashed\",marker=\"o\")\n# plt.xticks(rotation=90)\ntrain_dmy['age_lt22'] = np.where(train_dmy[\"age\"]<= 22 , 1 , 0)\ntrain_dmy['age_bt_22_26'] = np.where(((train_dmy[\"age\"]> 22) & (train_dmy[\"age\"]<= 26)) , 1 , 0)\ntrain_dmy['age_bt_26_30'] = np.where(((train_dmy[\"age\"]> 26) & (train_dmy[\"age\"]<= 30)) , 1 , 0)\ntrain_dmy['age_bt_30_33'] = np.where(((train_dmy[\"age\"]> 30) & (train_dmy[\"age\"]<= 33)) , 1 , 0)\ntrain_dmy['age_bt_33_37'] = np.where(((train_dmy[\"age\"]> 33) & (train_dmy[\"age\"]<= 37)) , 1 , 0)\ntrain_dmy['age_bt_37_41'] = np.where(((train_dmy[\"age\"]> 37) & (train_dmy[\"age\"]<= 41)) , 1 , 0)\ntrain_dmy['age_bt_41_58'] = np.where(((train_dmy[\"age\"]> 41) & (train_dmy[\"age\"]<= 58)) , 1 , 0)\ntrain_dmy['age_bt_58_90'] = np.where(((train_dmy[\"age\"]> 58) & (train_dmy[\"age\"]<= 90)) , 1 , 0)\n# train_dmy[\"ageenc\"]= np.where\nlist_age= ['age_bt_22_26','age_bt_26_30','age_bt_30_33','age_bt_33_37','age_bt_37_41','age_bt_41_58','age_bt_58_90']\ndf","7c6789eb":"plt.figure(figsize=(30,15))\nplt.subplot(2,4,1)\nsns.boxplot(y=\"target\",x=\"age\",data=train,orient='h')\n# medianage in >50k is high than <50k\nplt.subplot(2,4,2)\nsns.boxplot(y=\"target\",x=\"fnlwgt\",data=train,orient='h')\n# medianage in >50k is high than <50k\nplt.subplot(2,4,3)\nsns.boxplot(y=\"target\",x=\"education-num\",data=train,orient='h')\n# median education in >50k is high than <50k\nplt.subplot(2,4,4)\nsns.boxplot(y=\"target\",x=\"hours-per-week\",data=train,orient='h')\n","00c96f2a":"plt.figure(figsize=(30,15))\nplt.subplot(2,4,1)\nsns.boxplot(y=\"target\",x=\"capital-loss\",data=train,orient='h')\n# medianage in >50k is high than <50k\nplt.subplot(2,4,2)\nsns.boxplot(y=\"target\",x=\"capital-gain\",data=train,orient='h')\n# medianage in >50k is high than <50k\n\n","dcd75371":"train_dmy[\"capfact\"] = pd.cut(train_dmy[\"capital-gain\"],bins=10)\ntrain_dmy[\"capfact\"].value_counts()\ndf = woe_num(\"capfact\",\"target\")\ndf\n# plt.plot(df[\"agefact\"],df[\"woe\"],ls=\"dashed\",marker=\"o\")\n# plt.xticks(rotation=90)\n\ntrain_dmy[\"capfact_enc\"]=np.where(train_dmy[\"capital-gain\"]<=9999.9,-0.100820,\\\n                                  np.where(((train_dmy[\"capital-gain\"]>9999)& (train_dmy[\"capital-gain\"]<=19999.8)),5.592856,\\\n                                          np.where(( train_dmy[\"capital-gain\"] >19999.8 ), 5.602594,0)\\\n                                          ))\ndf","ff7abdc7":"train_dmy[\"caplsfact\"] = pd.cut(train_dmy[\"capital-loss\"],bins=10)\ntrain_dmy[\"caplsfact\"].value_counts()\ndf = woe_num(\"caplsfact\",\"target\")\ndf\n# plt.plot(df[\"agefact\"],df[\"woe\"],ls=\"dashed\",marker=\"o\")\n# plt.xticks(rotation=90)\n\ntrain_dmy[\"caplsfact_enc\"]=np.where(train_dmy[\"capital-loss\"]<=1306.8,-0.073605,\\\n                                  np.where(((train_dmy[\"capital-loss\"]>1306.8)& (train_dmy[\"capital-loss\"]<=3049.2)),2.940006,\\\n                                          np.where(( train_dmy[\"capital-loss\"] >3049.2 ), 5.602594,0)\\\n                                          ))\ndf","f6dc9b3c":"plt.figure(figsize=(8,8))\ncols=train.drop(['uid'],axis=1).corr()['target'].index\n# corr = np.corrcoef()\ncorr=np.corrcoef(train[cols].values.T)\nsns.set(font_scale=1.2)\nsns.heatmap(corr,cmap='YlGnBu',cbar=True,square=True,annot=True,fmt='.2f',annot_kws={'size':10},yticklabels=cols.values,xticklabels=cols.values)","a4c934a1":"# dummylist_cat = list_class + list_edu + list_marrital + list_occu + list_relat + ['sex_ Male','uid','target'] + list_coun \n# numrics = [\"capital-gain\",\"age\",\"hours-per-week\"]\n# feature_list  = dummylist_cat + numrics\n# feature_list","142fb880":"pd.options.display.max_rows=500\npd.crosstab(train_dmy[\"capital-gain\"],train_dmy[\"target\"])","6804d366":"edu=train_dmy.groupby(\"education\")[\"target\"].agg({np.mean,np.std})\nedu[\"education\"]=edu.index\nedu=edu.reset_index(drop=True)\nedu\nmrt=train_dmy.groupby(\"marital-status\")[\"target\"].agg({\"mean1\":np.mean,\"stdd\":np.std})\nmrt[\"marital-status\"]=mrt.index\nmrt=mrt.reset_index(drop=True)\nmrt\nwrk=train_dmy.groupby(\"workclass\")[\"target\"].agg({\"mean11\":np.mean,\"stdd1\":np.std})\nwrk[\"workclass\"]=wrk.index\nwrk=wrk.reset_index(drop=True)\nwrk\nocc=train_dmy.groupby(\"occupation\")[\"target\"].agg({\"mean111\":np.mean,\"stdd11\":np.std})\nocc[\"occupation\"]=occ.index\nocc=occ.reset_index(drop=True)\nocc\ntrain_dmy=pd.merge(train_dmy,edu,on=\"education\",how=\"left\")\ntrain_dmy=pd.merge(train_dmy,mrt,on=\"marital-status\",how=\"left\")\n# train_dmy=pd.merge(train_dmy,occ,on=\"occupation\",how=\"left\")\n# train_dmy=pd.merge(train_dmy,wrk,on=\"workclass\",how=\"left\")","0f503524":"train_dmy.columns[train_dmy.columns.str.startswith(\"occ\")]","ce2117c0":"# dummylist_cat = list_class  + list_marrital   + ['sex_ Male','uid','target','capfact_enc',\"relationship_ Husband\",\"education_ Bachelors\"] +list_race +list_occu \ndummylist_cat = list_class     + ['sex_ Male','uid','target','capfact_enc',\"relationship_ Husband\",\"marital_married_civ_af\",\"occupation_exec_prof\",\"occupation_ Sales\", \"occupation_prot_tech\"] +list_race  \nnumrics = [\"capital-gain\",\"age\",\"hours-per-week\",\"capital-loss\",\"education-num\"]\nfeature_list  = dummylist_cat + numrics\n# feature_list","a3a8605a":"from sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score ,f1_score, roc_auc_score , confusion_matrix , classification_report, roc_curve, auc , log_loss\nfrom sklearn.model_selection import GridSearchCV,LeaveOneOut,cross_val_score,cross_val_predict,KFold","476cbf5c":"train_model=train_dmy[['uid', 'age',  'fnlwgt', 'education-num',  'capital-gain', 'capital-loss', 'hours-per-week',  'target', 'workclass_ Federal-gov', \n'workclass_ Local-gov', 'workclass_ Never-worked', 'workclass_ Private', 'workclass_ Self-emp-inc', 'workclass_ Self-emp-not-inc', 'workclass_ State-gov', \n'workclass_ Without-pay', 'workclass_unknown', 'education_ 10th', 'education_ 11th', 'education_ 12th', 'education_ 1st-4th', 'education_ 5th-6th', \n'education_ 7th-8th', 'education_ 9th', 'education_ Assoc-acdm', 'education_ Assoc-voc', 'education_ Bachelors', 'education_ Doctorate', 'education_ HS-grad',\n'education_ Masters', 'education_ Preschool', 'education_ Prof-school', 'education_ Some-college', 'marital_ Divorced', 'marital_ Married-AF-spouse', \n'marital_ Married-civ-spouse', 'marital_ Married-spouse-absent', 'marital_ Never-married', 'marital_ Separated', 'marital_ Widowed', 'occupation_ Adm-clerical', \n'occupation_ Armed-Forces', 'occupation_ Craft-repair', 'occupation_ Exec-managerial', 'occupation_ Farming-fishing', 'occupation_ Handlers-cleaners',\n 'occupation_ Machine-op-inspct', 'occupation_ Other-service', 'occupation_ Priv-house-serv', 'occupation_ Prof-specialty', 'occupation_ Protective-serv',\n 'occupation_ Sales', 'occupation_ Tech-support', 'occupation_ Transport-moving', 'occupation_unknown', 'relationship_ Husband', 'relationship_ Not-in-family',\n 'relationship_ Other-relative', 'relationship_ Own-child', 'relationship_ Unmarried', 'relationship_ Wife', 'race_ Amer-Indian-Eskimo', 'race_ Asian-Pac-Islander',\n 'race_ Black', 'race_ Other', 'race_ White', 'country_ Cambodia', 'country_ Canada', 'country_ China', 'country_ Columbia', 'country_ Cuba', \n 'country_ Dominican-Republic', 'country_ Ecuador', 'country_ El-Salvador', 'country_ England', 'country_ France', 'country_ Germany', 'country_ Greece',\n 'country_ Guatemala', 'country_ Haiti', 'country_ Holand-Netherlands', 'country_ Honduras', 'country_ Hong', 'country_ Hungary', 'country_ India', 'country_ Iran', \n 'country_ Ireland', 'country_ Italy', 'country_ Jamaica', 'country_ Japan', 'country_ Laos', 'country_ Mexico', 'country_ Nicaragua', \n 'country_ Outlying-US(Guam-USVI-etc)', 'country_ Peru', 'country_ Philippines', 'country_ Poland', 'country_ Portugal', 'country_ Puerto-Rico', 'country_ Scotland',\n 'country_ South', 'country_ Taiwan', 'country_ Thailand', 'country_ Trinadad&Tobago', 'country_ United-States', 'country_ Vietnam', 'country_ Yugoslavia', \n 'country_unknown', 'sex_ Female', 'sex_ Male', 'workclass_local_selfempnot_state', 'workclass_never_without_private', 'workclass_sunk', 'education_doc_prof',\n 'education_voc_acdm_preschool', 'education_coll_hsgrad', 'education_xii_iiv_x', 'education_ix_xi_v_vi_i_iv', 'marital_married_civ_af', 'marital_widow_spos_abs',\n 'occupation_exec_prof', 'occupation_prot_tech', 'occupation_crft_trans', 'occupation_adm_machine_farming_armed_unk', 'occupation_oth_priv', \n 'relationship_wife_husband', 'country_irn_fran_ind_taiw_jap_yugo_camb', 'country_itl_eng_can_germ_phi_hon', 'country_gree_chi_cub_unk_scot_us', \n 'country_hol_out_hun_ire_sout_pol', 'country_thai_ecu_jam_laos_por_tri_pue', 'education-num_enc', 'education-num_1_3', 'education-num_4_8', 'education-num_9_10',\n'age_bt_30_33', 'age_bt_33_37', 'age_bt_37_41', 'age_bt_41_58', 'age_bt_58_90','capfact_enc', 'caplsfact_enc', 'mean', 'std', 'mean1', 'stdd'\n                       \n                      ]]","a2c64a06":" feature_list=['relationship_wife_husband', 'education-num_enc', 'capital-gain', 'age', 'occupation_exec_prof', 'hours-per-week', 'capital-loss', 'mean', 'std', \n 'education_ Masters','occupation_ Farming-fishing', 'occupation_ Sales','target','uid','workclass_local_selfempnot_state','marital_married_civ_af']","6e0acda2":"train_model=train_dmy[feature_list]\ntrain_model.shape","e3d762e9":"x_train,x_test,y_train,y_test = train_test_split(train_model.drop(['target','uid'],axis=1), train_model[\"target\"],test_size=0.2,random_state=5)\nprint(x_train.shape,y_train.shape)\nprint(x_test.shape,y_test.shape)","12cf266b":"# params = {'max_leaf_nodes':list(range(40,50)),'min_samples_split':list(range(5,10)),'max_depth':list(range(4,10)),'criterion':['entropy','gini'],'max_features':list(range(5,15))}\n# Grid_Search_CV=GridSearchCV(DecisionTreeClassifier(random_state= 10),params,verbose=1,cv=5)\n# Grid_Search_CV.fit(x_train,y_train)","162620d3":"clf = DecisionTreeClassifier(criterion='gini',\n    splitter='best',\n    max_depth=9,max_leaf_nodes = 48, min_samples_split=2,random_state=10)\nclf.fit(x_train,y_train)\nprint(clf)\npred= clf.predict(x_train)\npredprob = clf.predict_proba(x_train)\n# print(accuracy_score(pred,y_train))\n# print(confusion_matrix(pred,y_train))\nprint(classification_report(pred,y_train))\n# print(predprob,pred)\nfalse_positive_rate, true_positive_rate, thresholds = roc_curve(pred,y_train)\nprint(auc(false_positive_rate, true_positive_rate))\nlog_loss(y_train,predprob[:,1])","27918980":"import shap\nexplainer = shap.TreeExplainer(clf)\nshap_values = explainer.shap_values(x_train)\nexplainer\n# i = 1\n# shap.force_plot(explainer.expected_value[i], shap_values[i])\nshap.summary_plot(shap_values, features=x_train)","66765db0":"test_pred=clf.predict(x_test)\ntest_predprob1=clf.predict_proba(x_test)\nprint(accuracy_score(test_pred,y_test))\nprint(confusion_matrix(test_pred,y_test))\nprint(classification_report(test_pred,y_test))\nfalse_positive_rate, true_positive_rate, thresholds = roc_curve(test_pred,y_test)\nprint(auc(false_positive_rate, true_positive_rate))\nlog_loss(y_test,test_predprob1[:,1])","aa17bb2e":"test[\"workclass\"] =np.where(test[\"workclass\"].isin([' ?']),\"unknown\",test[\"workclass\"])\ntest[\"occupation\"] =np.where(test[\"occupation\"].isin([' ?']),\"unknown\",test[\"occupation\"])\ntest[\"native-country\"] =np.where(test[\"native-country\"].isin([' ?']),\"unknown\",test[\"native-country\"])","b34f0d22":"list_cols=[]\nlist_cols=[pd.get_dummies(test[\"workclass\"],prefix=\"workclass\"),\n                 pd.get_dummies(test[\"education\"],prefix=\"education\"),\n                 pd.get_dummies(test[\"marital-status\"],prefix=\"marital\"),\n                 pd.get_dummies(test[\"occupation\"],prefix=\"occupation\"),\n                 pd.get_dummies(test[\"relationship\"],prefix=\"relationship\"),\n                 pd.get_dummies(test[\"race\"],prefix=\"race\"),\n                 pd.get_dummies(test[\"native-country\"],prefix=\"country\"),\n                 pd.get_dummies(test[\"sex\"],prefix=\"sex\")]\nlist_cols_df=pd.concat(list_cols, axis=1)\nlist_cols_df.head(1)\ntest_dmy=pd.concat([test,list_cols_df],axis=1)\n# list_cols_df.columns\ntest_dmy.shape\n","03956577":"test_dmy[\"workclass_local_selfempnot_state\"]=test_dmy[\"workclass_ Self-emp-not-inc\"] + test_dmy[\"workclass_ Local-gov\"] + test_dmy[\"workclass_ State-gov\"]\ntest_dmy[\"workclass_never_without_private\"]=test_dmy[\"workclass_ Never-worked\"] + test_dmy[\"workclass_ Without-pay\"] + test_dmy[\"workclass_ Private\"]\ntest_dmy[\"workclass_sunk\"]= test_dmy[\"workclass_unknown\"]\n\ntest_dmy[\"education_doc_prof\"] = test_dmy[\"education_ Doctorate\"] + test_dmy[\"education_ Prof-school\"]\ntest_dmy[\"education_voc_acdm_preschool\"] = test_dmy[\"education_ Assoc-voc\"] + test_dmy[\"education_ Assoc-acdm\"] + test_dmy[\"education_ Preschool\"]\ntest_dmy[\"education_coll_hsgrad\"] = test_dmy[\"education_ Some-college\"] + test_dmy[\"education_ HS-grad\"] \ntest_dmy[\"education_xii_iiv_x\"] = test_dmy[\"education_ 12th\"] + test_dmy[\"education_ 7th-8th\"]  + test_dmy[\"education_ 10th\"]\ntest_dmy[\"education_ix_xi_v_vi_i_iv\"] = test_dmy[\"education_ 9th\"] + test_dmy[\"education_ 11th\"]  + test_dmy[\"education_ 5th-6th\"] + test_dmy[\"education_ 1st-4th\"]\n\ntest_dmy[\"marital_married_civ_af\"] = test_dmy[\"marital_ Married-civ-spouse\"] + test_dmy[\"marital_ Married-AF-spouse\"]\ntest_dmy[\"marital_widow_spos_abs\"] = test_dmy[\"marital_ Widowed\"] + test_dmy[\"marital_ Married-spouse-absent\"]\n\ntest_dmy[\"relationship_wife_husband\"] = test_dmy[\"relationship_ Husband\"] + test_dmy[\"relationship_ Wife\"]\n\ntest_dmy[\"occupation_exec_prof\"] = test_dmy[\"occupation_ Exec-managerial\"]+test_dmy[\"occupation_ Prof-specialty\"]\ntest_dmy[\"occupation_prot_tech\"] = test_dmy[\"occupation_ Protective-serv\"]+test_dmy[\"occupation_ Tech-support\"]\ntest_dmy[\"occupation_crft_trans\"] = test_dmy[\"occupation_ Craft-repair\"]+test_dmy[\"occupation_ Transport-moving\"]\ntest_dmy[\"occupation_adm_machine_farming_armed_unk\"] = test_dmy[\"occupation_ Adm-clerical\"]+test_dmy[\"occupation_ Machine-op-inspct\"]+test_dmy[\"occupation_ Farming-fishing\"]+test_dmy[\"occupation_ Armed-Forces\"]\\\n+test_dmy[\"occupation_unknown\"]\ntest_dmy[\"occupation_oth_priv\"] = test_dmy[\"occupation_ Priv-house-serv\"]+test_dmy[\"occupation_ Other-service\"]\ntest_dmy[\"education-num_enc\"]=train_dmy[\"education-num\"].replace({1.0:0.0,2.0:-2.147591,3.0:-1.838067,4.0:-1.569754,5.0:-1.744181,6.0:-1.494261,7.0:-1.774019,8.0:-1.346711,9.0:-0.513642,10.0:-0.300241,11.0:0.108586,\\\n                                                                  12.0:0.040867,13.0:0.803894,14.0:1.375570,15.0:2.165181,16.0:2.199003}) \ntest_dmy['country_ Holand-Netherlands']=0\ntest_dmy[\"country_irn_fran_ind_taiw_jap_yugo_camb\"] = test_dmy['country_ Iran'] + test_dmy['country_ France'] + test_dmy['country_ India']\\\n+test_dmy['country_ Taiwan']+test_dmy['country_ Japan']+test_dmy['country_ Yugoslavia']+test_dmy['country_ Cambodia']\ntest_dmy[\"country_itl_eng_can_germ_phi_hon\"] = test_dmy['country_ Italy']+ test_dmy['country_ England']+ test_dmy['country_ Canada'] +\\\ntest_dmy['country_ Germany']+test_dmy['country_ Philippines'] + test_dmy['country_ Hong']\ntest_dmy[\"country_gree_chi_cub_unk_scot_us\"] = test_dmy['country_ Greece'] + test_dmy['country_ China'] + test_dmy['country_ Cuba']+test_dmy['country_unknown']\\\n+test_dmy['country_ Scotland'] + test_dmy['country_ United-States']\ntest_dmy[\"country_hol_out_hun_ire_sout_pol\"] = test_dmy['country_ Holand-Netherlands'] + test_dmy['country_ Outlying-US(Guam-USVI-etc)'] + \\\ntest_dmy['country_ Hungary']+test_dmy['country_ Ireland'] + test_dmy['country_ South'] + test_dmy['country_ Poland']\ntest_dmy[\"country_thai_ecu_jam_laos_por_tri_pue\"] = test_dmy['country_ Thailand'] + test_dmy['country_ Ecuador'] + test_dmy['country_ Jamaica'] + \\\ntest_dmy['country_ Laos'] + test_dmy['country_ Portugal'] + test_dmy['country_ Trinadad&Tobago'] + test_dmy['country_ Puerto-Rico']\nlist_coun = [\"country_irn_fran_ind_taiw_jap_yugo_camb\", \"country_itl_eng_can_germ_phi_hon\" ,\"country_gree_chi_cub_unk_scot_us\" ,\"country_hol_out_hun_ire_sout_pol\",\"country_thai_ecu_jam_laos_por_tri_pue\"]\n\ntest_dmy[\"capfact_enc\"]=np.where(test_dmy[\"capital-gain\"]<=9999.9,-0.100820,\\\n                                  np.where(((test_dmy[\"capital-gain\"]>9999)& (test_dmy[\"capital-gain\"]<=19999.8)),5.592856,\\\n                                          np.where(( test_dmy[\"capital-gain\"] >19999.8 ), 5.602594,0)\\\n                                          ))","e37ae4b8":"test_dmy=pd.merge(test_dmy,edu,on=\"education\",how=\"left\")\ntest_dmy=pd.merge(test_dmy,mrt,on=\"marital-status\",how=\"left\")\n# train_dmy=pd.merge(train_dmy,occ,on=\"occupation\",how=\"left\")\n# train_dmy=pd.merge(train_dmy,wrk,on=\"workclass\",how=\"left\")\n","edd6684d":"dummylist_cat = list_class  + list_marrital   + ['sex_ Male','capfact_enc'] +list_race +list_occu\nnumrics = [\"capital-gain\",\"age\",\"hours-per-week\",\"capital-loss\",\"education-num\"]\nfeature_list  = dummylist_cat + numrics\n# feature_list\ntest_dmy[feature_list].shape\nfeature_list","55bf5239":" feature_list=['relationship_wife_husband', 'education-num_enc', 'capital-gain', 'age', 'occupation_exec_prof', 'hours-per-week', 'capital-loss', 'mean', 'std', \n 'education_ Masters','occupation_ Farming-fishing', 'occupation_ Sales','workclass_local_selfempnot_state','marital_married_civ_af']","26e035b9":"predoot= clf.predict(test_dmy[feature_list])\npredproboot = clf.predict_proba(test_dmy[feature_list])\ntest_dmy[\"predoot\"]=predoot\ntest_dmy[\"predproboot0\"]=predproboot[:,0]\ntest_dmy[\"predproboot1\"]=predproboot[:,1]\ntest_dmy.head()\npredproboot[:,0]","acedea86":"test_dmy[[\"uid\",\"predproboot1\"]].to_csv(\"result2.csv\")","faf38419":"### vooraguptha@gmail.com"}}