{"cell_type":{"864b0164":"code","5eb2d7c0":"code","98b67fc3":"code","dc3c516a":"code","d5563485":"code","812d048f":"code","45977d36":"code","bc29dd74":"code","dcf6ae07":"code","bc258611":"code","6ae56b4f":"code","24feb537":"code","099f7558":"code","b6aa62fc":"code","81ec46d8":"code","3b3838de":"markdown","040087ca":"markdown","53d1b18a":"markdown","ea3670ea":"markdown","9ea6cb53":"markdown","604ad3ce":"markdown","ac5bab5b":"markdown","4c5d430e":"markdown","6c52a411":"markdown","d8f194d3":"markdown","e937789f":"markdown","64451f96":"markdown","fda44e70":"markdown","d3ec0158":"markdown","99f0a99c":"markdown","302877e9":"markdown","1f1d4a31":"markdown","79b565aa":"markdown"},"source":{"864b0164":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5eb2d7c0":"import warnings\nwarnings.simplefilter(action=\"ignore\", category=FutureWarning)","98b67fc3":"df = pd.read_csv('\/kaggle\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')","dc3c516a":"## understanding data\n\ndf.columns","d5563485":"# Now that the columns are well-described, look at the first 10 rows of dataset.\ndf.head(10)","812d048f":"print('Shape of the dataframe is: ' ,df.shape)","45977d36":"#checking summary of dataset\n\ndf.describe()","bc29dd74":"# checking NaN values\n\ndf.isna().sum()","dcf6ae07":"dict = {}\nfor x in list(df.columns):\n    dict[x] = df[x].value_counts().shape[0]\n\npd.DataFrame(dict, index=[\"Unique Counts\"]).transpose()","bc258611":"import seaborn as sns\nimport matplotlib\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nsns.set_style('darkgrid')\nmatplotlib.rcParams['font.size'] = 14\nmatplotlib.rcParams['figure.figsize'] = (9, 5)\nmatplotlib.rcParams['figure.facecolor'] = '#00000000'","6ae56b4f":"fig, axes = plt.subplots(4,2, figsize=(18,18))\n\n#use the axis for plotting\naxes[0, 0].set_title('(Plot.1.1) SEX')\nsns.countplot(df.sex,\n              palette = 'Set3',\n              edgecolor=sns.color_palette(\"Set3\", 4),\n              linewidth=2,\n             ax=axes[0,0]);\n\n\n#use the axis for plotting\naxes[0, 1].set_title('(Plot.1.2)CP')\nsns.countplot(df.cp,\n              palette = 'Set1',\n              edgecolor=sns.color_palette(\"Set1\", 2),\n              linewidth=2,\n             ax=axes[0,1]);\n\n\n#use the axis for plotting\naxes[1, 0].set_title('(Plot.1.3)FBS')\nsns.countplot(df.fbs,\n              palette = 'Set2',\n              edgecolor=sns.color_palette(\"Set2\", 2),\n              linewidth=2,\n             ax=axes[1,0]);\n\n\n#use the axis for plotting\naxes[1, 1].set_title('(Plot.1.4)REST-ECG')\nsns.countplot(df.restecg,\n              palette = 'Blues_r',\n              edgecolor=sns.color_palette('Blues_r', 4),\n              linewidth=2,\n             ax=axes[1,1]);\n\n\n#use the axis for plotting\naxes[2, 0].set_title('(Plot.1.5)EXNG')\nsns.countplot(df.exng,\n              palette = 'Oranges_r',\n              edgecolor=sns.color_palette('Oranges_r', 4),\n              linewidth=2,\n             ax=axes[2,0]);\n\n\n#use the axis for plotting\naxes[2, 1].set_title('(Plot.1.6)SLOPE')\nsns.countplot(df.slp,\n              palette = 'autumn_r',\n              edgecolor=sns.color_palette('autumn_r', 2),\n              linewidth=2,\n             ax=axes[2,1]);\n\n\n#use the axis for plotting\naxes[3, 0].set_title('(Plot.1.7)CAA')\nsns.countplot(df.caa,\n              palette = 'icefire_r',\n              edgecolor=sns.color_palette('icefire_r', 2),\n              linewidth=2,\n             ax=axes[3,0]);\n\n\naxes[3, 1].set_title('(Plot.1.8)THALL')\nsns.countplot(df.thall,\n              palette = 'summer',\n              edgecolor=sns.color_palette('summer', 4),\n              linewidth=2,\n             ax=axes[3,1]);\n\nplt.tight_layout(pad=3);","24feb537":"fig, axes = plt.subplots(2,3, figsize=(15,12))\n\n#use the axis for plotting\naxes[0, 0].set_title('(Plot.2.1)AGE')\nsns.boxenplot(y=df.age,\n            palette='Greens', \n            color='red',\n           linewidth=3,\n           ax=axes[0,0]);\n\n\n#use the axis for plotting\naxes[0,1].set_title('(Plot.2.2)TRTBPS')\nsns.boxenplot(y=df.trtbps,\n            palette='prism', \n            color='red',\n           linewidth=2,\n           ax=axes[0,1]);\n\n\n#use the axis for plotting\naxes[0, 2].set_title('(Plot.2.3)CHOL')\nsns.boxenplot(y=df.chol,\n            palette='viridis',\n           linewidth=1,\n           ax=axes[0,2]);\n\n\n#use the axis for plotting\naxes[1, 0].set_title('(Plot.2.4)THALACHH')\nsns.boxenplot(y=df.thalachh,\n            palette='Blues_r', \n            color='red',\n           linewidth=3,\n           ax=axes[1,0]);\n\n\n#use the axis for plotting\naxes[1, 1].set_title('(Plot.2.5)OLDPEAK')\nsns.boxenplot(y=df.oldpeak,\n            palette='RdPu', \n            color='red',\n           linewidth=3,\n           ax=axes[1,1]);\n\n\n#use the axis for plotting\naxes[1, 2].set_title('(Plot.2.6)OUTPUT')\nsns.countplot(df.output,\n             palette = 'vlag_r',\n             saturation=0.50,\n             ax=axes[1,2]);\n\nplt.tight_layout(pad=3);","099f7558":"fig, axes = plt.subplots(4,2, figsize=(20,18))\n\n#use the axis for plotting\naxes[0, 0].set_title('(Plot.3.1)AGE and OUTPUT')\nsns.kdeplot(x=df.age,\n            hue=df.output,\n            fill=True,\n            palette= 'Set2',\n            ax=axes[0,0])\n\n#use the axis for plotting\naxes[0, 1].set_title('(Plot.3.2) BLOOD PRESSURE DISTRIBUTION')\nsns.kdeplot(x=df.trtbps,\n            hue=df.output,\n            fill=True,\n            palette= 'Set2',\n            ax=axes[0,1])\n\n\n#use the axis for plotting\naxes[1, 0].set_title('(Plot.3.3) CHOLESTROL DISTRIBUTION')\nsns.kdeplot(x=df.chol,\n            hue=df.output,\n            fill=True,\n            palette= 'Set2',\n            ax=axes[1,0])\n\n\n#use the axis for plotting\naxes[1, 1].set_title('(Plot.3.4) HEART RATE DISTRIBUTION')\nsns.kdeplot(x=df.thalachh,\n            hue=df.output,\n            fill=True,\n            palette= 'Set2',\n            ax=axes[1,1])\n\n\n#use the axis for plotting\naxes[2, 0].set_title('(Plot.3.5) CHEST PAIN DISTRIBUTION')\nsns.kdeplot(x=df.cp,\n           hue=df.output,\n           fill= True,\n           palette = 'Set2',\n           ax= axes[2,0])\n\n\n#use the axis for plotting\naxes[2, 1].set_title('(Plot.3.6) THALL DISTRIBUTION')\nsns.kdeplot(x=df.thall,\n           hue=df.output,\n           fill= True,\n           palette = 'Set2',\n           ax= axes[2,1])\n\n\n#use the axis for plotting\naxes[3, 0].set_title('(Plot.3.7) RESTECG DISTRIBUTION')\nsns.kdeplot(x=df.restecg,\n           hue=df.output,\n           fill= True,\n           palette = 'Set2',\n           ax= axes[3,0])\n\n\n#use the axis for plotting\naxes[3, 1].set_title('(Plot.3.6) EXNG DISTRIBUTION')\nsns.kdeplot(x=df.exng,\n           hue=df.output,\n           fill= True,\n           palette = 'Set2',\n           ax= axes[3,1])\n\n\nplt.tight_layout(pad=3);","b6aa62fc":"plt.figure(figsize = (12,10))\nplt.title('(Plot.4.1) Correlation between variables')\nsns.heatmap(df.corr(), fmt='.1f', annot=True, cmap= \"bone_r\");","81ec46d8":"print('(Plot.5.1)')\nsns.pairplot(df, hue='output', palette=\"tab10\");","3b3838de":"#### Here's my another exploratory data analysis [notebook](https:\/\/www.kaggle.com\/tanushagupta\/superstore-eda). Do check and review.","040087ca":"Our dataset contain a total of 14 columns, with abbreviations in their column names.\n\nLets look at what every column contains information.","53d1b18a":"## Exploratory Analysis and Visualization\n\nNow, we will be analyzing our data, graphically.\n\nLet's begin by importing`matplotlib.pyplot` and `seaborn` and setting the theme to `darkgrid`.","ea3670ea":"## 1. Univariate Analysis of Categorical Variables","9ea6cb53":"#### Columns Description:\n\n1. `'age'`= Age of the person (in years)\n2. `'sex'` =  Gender of the person (1=Male ; 0=Female)\n3. `'cp'` = Chest Pain type\n      * Value 0: typical angina\n      * Value 1: atypical angina\n      * Value 2: non-anginal pain\n      * Value 3: asymptomatic\n4. `'trtbps'` = resting blood pressure (in mm Hg on admission to the hospital)\n5. `'chol'` = cholestoral in mg\/dl (fetched via BMI sensor)\n6. `'fbs'` = (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)\n7. `'restecg'` = resting electrocardiographic results\n      * Value 0: normal\n      * Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV)\n      * Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria\n8. `'thalachh'` = maximum heart rate achieved\n9. `'exng'` = exercise induced angina (1 = yes; 0 = no)\n10. `'oldpeak'` = Previous peak or ST depression induced by exercise relative to rest\n11. `'slp'` = The slope of the peak exercise ST segment\n     * Value 0: upsloping\n     * Value 1: flat\n     * Value 2: downsloping\n12. `'caa'` = number of major vessels\n13. `'thall'` = Thal rate\n14. `'output'` = Target variable OR diagnosis of heart disease (angiographic disease status)\n     * Value 0: < 50% diameter narrowing\n     * Value 1: > 50% diameter narrowing","604ad3ce":"## 3. Bivariate Analysis\n\nIn this block, we will be analyzing variables to `output variable`\n * age and output\n * bloop pressure and output\n * cholestrol and output\n * heart rate and output\n * chest pain and output\n * thall and output\n * electrocardiograph and output\n * angina and output","ac5bab5b":"\"<a href=\"https:\/\/ibb.co\/7kBRNR4\"><img src=\"https:\/\/i.ibb.co\/jJqWZWR\/3-D-illustration-of-Heart-Part-of-Human-Organic.jpg\" alt=\"3-D-illustration-of-Heart-Part-of-Human-Organic\" border=\"0\"><\/a><br \/>","4c5d430e":"# Heart Attack Analysis using Python- A Case Study\n\nWhen a heart attack occurs, the heart muscle that has lost blood supply begins to suffer injury. The amount of damage to the heart muscle depends on the size of the area supplied by the blocked artery and the time between injury and treatment. Heart muscle damaged by a heart attack heals by forming scar tissue.\n    \n   In this session, we are taken a popular dataset from **Kaggle**, `Heart_Attack_Analysis` and will be analyzing this dataset based on the information provided. At the end we will get to many conclusions that for what are the reasons which can effect the heart attack from this **Exploratory Data Analysis**.","6c52a411":"## Inferences and Conclusion\n\nSo, after concluding we may say that factors that don't affect Heart attack much are:\n * age\n * sex\n * blood pressure\n * cholestrol\n \nAnd factors that do affect to Heart Attack are:\n * chest pain(non-anginal)\n * fasting blood sugar(when more than 120 mg\/dl)\n * electrocardiograph (with abnormal ST-T wave)\n * high heart rate\n * angina induced by exercise\n * old peak\n * downsloping peak exercise ST segement\n * majoe vessels (when it is 1)\n * thall rate","d8f194d3":"### Conclusion:-\n        - Male patients are more than number of female patients.\n        - Most of the patient are suffering with typical anginal chest pain (cp=0).\n        - Most people have their fasting blood sugar lesser than 120mg\/dl.\n        - Most people have either normal or abnormal ST-T electrocardiographic wave.\n        - Lesser people are suffering with exercise induced angina.\n        - Almost 125 people have 0 major vessel.","e937789f":"### Conclusions:\n        - There is no significant relationship between age and heart attack. So, the intuition of older age to heart attack is rejected\n        - Blood pressure and cholestrol doesn't contribute to prone to heart attack.\n        - Patients with higher heart rate are more prone to heart attack\n        - Patients with non-anginal chest pain are more prone\n        - Patients with abnormal ST-T electrocardiographic wave are more prone.","64451f96":"### Conclusions:\n        - Most patient are between the age (48-61)\n        - Most patient have their blood pressure between (120-140)\n        - Most patient have their cholestrol level between (220-260)\n        - Most patient have their heart rate between (135-165)","fda44e70":"### Conclusions:\n    There isn't any strong correlation between any variables, but few variable is showing upto 0.4 correlation as positive and negative association. So, they can be considered as affecting the target variable than any other variables.\n    Variables with 0.4 (positive and negative) association are:\n   * chest pain\n   * heart rate\n   * exercise induced angina\n   * old peak\n   * caa","d3ec0158":"## 5. Multivariate Analysis","99f0a99c":"## 2. Univariate Analysis of Continuous and Target Variables","302877e9":"## 4. Correlation Between Variables","1f1d4a31":"\n##  Final Conclusions:\n\n1. There is no **NaN** values in our dataset. (shown in `In[17]`)\n2. The dataset consists of more the number of **male** than **female**. (shown in `Plot.1.1`)\n3. There are outliers in almost every continous variables. (shown in `Plot.2.1` to `Plot.2.5`)\n4. There is no strong relationship between **age** and Heart Attack. (shown in `Plot.3.1`)\n5. **Blood pressure** and **cholestrol** doesn't have much contribute to Heart Attack. (shown in `Plot.3.2` and `Plot.3.3`)\n6. People with **higher heart rate** is more prone to Heart Attack. (shown in `Plot.3.4`)\n7. People with **non-anginal chest pain** i.e. cp=2 are more likely(shown in `Plot.3.5`)\n8. People with **thall rate = 2** are more likely (shown in `Plot.3.6`)\n9. People with **restecg = 1** i.e. having abnormal ST-T wave are more prone (shown in `Plot.3.7`)\n10. People with **exng = 0** i.e. no exercise induced angina are more prone (shown in `Plot.3.8`)\n11. There is no apparent linear correlation between continuous variable according to the heatmap. (shown in `Plot.4.1`)\n12. Also, (according to `Plot.5.1`):\n\n       * **Male** is more prone to heart attacks than **Female** (with a less significance difference)\n       * Heart Attack is less prone when **fasting blood sugar** is less than 120 mg\/dl\n       * **Oldpeak** at 0 is more prone\n       * **Slope** at 2 i.e. at downsloping is more prone\n       * **Caa** or number of major vessels at 1 is more prone","79b565aa":"## IMPORTING LIBRARIES\n\nList of all the python libraries that are required:\n\n* Library `pandas` will be required to work with data in tabular representation.\n* Library `numpy` will be required to round the data in the correlation matrix.\n* Library `warning` will be required to ignore all warnings.\n* Library `matplotlib`, `seaborn`, `plotly` required for data visualization."}}