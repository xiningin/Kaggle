{"cell_type":{"572bd74c":"code","1e431351":"code","0912ad2f":"code","a537d6b6":"code","0ac7f213":"code","c728434b":"code","34e1389b":"code","06964880":"code","72db9602":"code","5cb1a05e":"code","70f246d7":"code","b71ca3ba":"code","ff7a383f":"code","b9670563":"code","c26be6d1":"code","674534b3":"code","16d893af":"code","740bffe6":"code","4d9ca764":"code","7daa4a40":"code","28430dfb":"code","7bf59864":"code","a683fd26":"code","dc100998":"code","d25d1daf":"code","1090af0f":"code","89f82221":"code","9ecade55":"code","2501552e":"code","f0e305d0":"code","4b8eddf1":"code","2eef4d72":"code","33ef2586":"code","3efc8ce0":"code","20e9b07d":"code","e7a08a28":"code","b792803f":"code","4cadc677":"code","0bd94dd2":"code","3b86bb0a":"code","ed3cfe58":"code","1c39189d":"code","b48d3e25":"code","7ac307fe":"code","260c8a9b":"code","400560fe":"code","0ada0947":"code","d50d0324":"code","990fae6e":"code","13494f06":"code","154ca7dd":"code","47254f12":"code","b99ec20d":"code","fd25b4ff":"code","7b6a021b":"code","f669ac9a":"code","e471d53f":"code","25fdb85d":"code","dcadd4ac":"code","a4196f6b":"code","b9edb8f4":"code","85f75a91":"code","5bd14400":"code","516303c8":"code","0ccb1cec":"code","ea545ae7":"code","af418a26":"code","065448fb":"code","bdc35401":"code","017b88e3":"code","2a0c9e03":"code","a57b8c20":"code","6a92884d":"code","e8760ab3":"code","70271460":"code","10983338":"code","8fc21361":"code","8baedaec":"code","fad43265":"code","cc09029f":"code","edee031a":"markdown","8a93cad7":"markdown","5a47a3c6":"markdown","8350e87e":"markdown","6abf43fb":"markdown","201e6f38":"markdown","96152417":"markdown","b54376a0":"markdown","1faf20ee":"markdown","21851349":"markdown","ccdd44b8":"markdown","751df471":"markdown","274000f2":"markdown","aba01050":"markdown","e44c7656":"markdown","afb9e6ed":"markdown","4574c418":"markdown","b669de1d":"markdown","1f23a5d0":"markdown","29064134":"markdown","070da98b":"markdown","dba86708":"markdown","9c0cc14d":"markdown","eb45cf3c":"markdown","d6c1e47f":"markdown","e2b26d2d":"markdown","8b98fe59":"markdown","3bbfdc6e":"markdown","ffde6308":"markdown","e1ce3fee":"markdown","08edef88":"markdown","b558f6cb":"markdown","2b1a6d05":"markdown","7a601d62":"markdown","143dafaf":"markdown","914dc81d":"markdown","ebc77869":"markdown","824cc5ce":"markdown","de50a0ca":"markdown","aceaa68c":"markdown","9ba5a8dc":"markdown","aad8e3ed":"markdown","a690be09":"markdown","41264512":"markdown","1114cea0":"markdown","1c2199bb":"markdown"},"source":{"572bd74c":"#importing the libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","1e431351":"#Reading the dataset\ndf=pd.read_csv('..\/input\/boombikes\/day.csv')\ndf.head()","0912ad2f":"# Check the number of rows and columns in the dataframe\ndf.shape","a537d6b6":"# Check the column-wise info of the dataframe\ndf.info()","0ac7f213":"# Check the summary for the numeric columns \ndf.describe()","c728434b":"#checking for missing values\ndf.isnull().sum()","34e1389b":"# Converting date to Pandas datetime format\ndf['dteday'] = pd.to_datetime(df['dteday'])","06964880":"df.head()","72db9602":"#Changing the season, weathersit, mnth, weekday columns from numerical values to categorical strings\ndf.season=df.season.map({1:'spring', 2:'summer', 3:'fall', 4:'winter'})\ndf.weathersit=df.weathersit.map({1:'Best', 2:'Neutral', 3:'Bad', 4:'Worse'})\ndf.mnth=df.mnth.map({1:'Jan',2:'Feb',3:'Mar',4:'Apr',5:'May',6:'June',7:'Jul',8:'Aug',9:'Sep',10:'Oct',11:'Nov',12:'Dec'})\ndf.weekday=df.weekday.map({1:'Mon',2:'Tue',3:'Wed',4:'Thu',5:'Fri',6:'Sat',0:'Sun'})\ndf.head()","5cb1a05e":"#The column 'instant' is very insignificant. Hence dropping that column.\ndf=df.drop('instant',axis=1)\ndf.shape","70f246d7":"#Inserting a new variable day in the dataframe.\ndf.insert(4,'day','')\ndf['day']=pd.DatetimeIndex(df['dteday']).day\ndf.head()","b71ca3ba":"print('------------------day values------------------')\nprint(df.day.value_counts())\nprint('--------------workingday values---------------')\nprint(df.workingday.value_counts())\nprint('----------------weekday values----------------')\nprint(df.weekday.value_counts())","ff7a383f":"#dropping dteday\ndf=df.drop('dteday', axis=1)\ndf.shape","b9670563":"# Univariate analysis of few seemingly significant categorical variables:\nunivariate_categorical_cols=['season','holiday','workingday','weathersit']\nplt.style.use('ggplot')\nfor column in univariate_categorical_cols:\n    plt.figure(figsize=(20,4))\n    plt.subplot(121)\n    df[column].value_counts().plot(kind='bar')\n    plt.title(column)","c26be6d1":"print('Number of holidays in 2018: ',len(df[(df['holiday']==1) & (df['yr']==0)]))\nprint('Number of holidays in 2019: ',len(df[(df['holiday']==1) & (df['yr']==1)]))","674534b3":"# Univariate analysis of few seemingly significant continuous variables:\nunivariate_numerical_cols=df.select_dtypes(include=np.number)\nunivariate_numerical_cols=list(univariate_numerical_cols)\nunivariate_numerical_cols\nunivariate_continuous_var=[i for i in univariate_numerical_cols if i not in ['yr',\n 'mnth',\n 'day',\n 'holiday',\n 'weekday',\n 'workingday']]\nunivariate_continuous_var","16d893af":"for column in univariate_continuous_var:\n    plt.figure(figsize=(20,5))\n    plt.subplot(121)\n    sns.distplot(df[column])\n    plt.title(column)","740bffe6":"df_continuous=df[univariate_continuous_var]","4d9ca764":"#Bivariate analysis of continuos variables with cnt\nsns.pairplot(df_continuous,diag_kind='kde')\nplt.show()","7daa4a40":"#Bivariate analysis of categorical variables with cnt\nplt.figure(figsize=(30,48))\nplt.subplot(8,2,1)\nsns.boxplot(x='yr', y='cnt', data=df)\n\nplt.subplot(8,2,2)\nsns.barplot(x='season', y='cnt', data=df)\n\nplt.subplot(8,2,3)\nsns.boxplot(x='holiday', y='cnt', data=df)\n\nplt.subplot(8,2,4)\nsns.boxplot(x='weathersit', y='cnt', data=df)\n\nplt.subplot(8,2,5)\nsns.barplot(x='weathersit', y='windspeed', data=df)\n\nplt.subplot(8,2,6)\nsns.boxplot(x='workingday', y='cnt', data=df)\n\nplt.subplot(8,2,7)\nsns.barplot(x='mnth', y='windspeed', data=df)\n\nplt.subplot(8,2,8)\nsns.barplot(x='season', y='windspeed', data=df)\n\nplt.subplot(8,2,9)\nsns.lineplot(x='day', y='cnt', data=df)\n\nplt.subplot(8,2,10)\nsns.boxplot(x = 'mnth', y = 'cnt', data = df)\n\nplt.subplot(8,2,11)\nsns.barplot(x='mnth', y='cnt', data=df)\n\nplt.subplot(8,2,12)\nsns.barplot(x='weekday', y='cnt', data=df)\n\nplt.subplot(8,2,13)\nsns.barplot(x='mnth', y='casual', data=df)\n\nplt.subplot(8,2,14)\nsns.barplot(x='weekday', y='casual', data=df)\n\nplt.subplot(8,2,15)\nsns.barplot(x='mnth', y='registered', data=df)\n\nplt.subplot(8,2,16)\nsns.barplot(x='weekday', y='casual', data=df)\n\nplt.show()","28430dfb":"print('------------Winter Months-------------------------')\nprint('Months')\nprint(df[df['season']=='winter'].mnth.value_counts())\nprint('------------Spring Months-------------------------')\nprint('Months')\nprint(df[df['season']=='spring'].mnth.value_counts())\nprint('------------Summer Months-------------------------')\nprint('Months')\nprint(df[df['season']=='summer'].mnth.value_counts())\nprint('--------------Fall Months-------------------------')\nprint('Months')\nprint(df[df['season']=='fall'].mnth.value_counts())","7bf59864":"#Checking the colinearlity amongst the variables\nplt.figure(figsize=(12,8))\nsns.heatmap(df.corr(),annot=True,cmap=\"YlGnBu\")\nplt.show()","a683fd26":"df=df.drop(['casual', 'registered'],axis=1)\ndf.head()","dc100998":"df=df.drop('atemp',axis=1,)","d25d1daf":"df.head()","1090af0f":"#Creating Dummy variables\n\ndef dummies(x,dataframe):\n    temp = pd.get_dummies(dataframe[x], drop_first = True)\n    dataframe = pd.concat([dataframe, temp], axis = 1)\n    dataframe.drop([x], axis = 1, inplace = True)\n    return dataframe\n# Applying the function to the bikeSharing\n\ndf = dummies('season',df)\ndf = dummies('mnth',df)\ndf = dummies('weekday',df)\ndf = dummies('weathersit',df)\ndf.head()","89f82221":"df.shape","9ecade55":"df.describe()","2501552e":"import sklearn\nfrom sklearn.model_selection import train_test_split\n\ndf_train, df_test= train_test_split(df,train_size=0.7, random_state=100)\nprint(df_train.shape)\nprint(df_test.shape)","f0e305d0":"#Rescaling even the target variables since a target variable with a large spread of values, in turn, may result \n#in large error gradient values causing weight values to change dramatically, making the learning process unstable.\n\nfrom sklearn.preprocessing import MinMaxScaler\nscaler=MinMaxScaler()\n\nneed_rescale=['temp','hum','windspeed','cnt']\ndf_train[need_rescale]=scaler.fit_transform(df_train[need_rescale])\n\ndf_train.describe()","4b8eddf1":"y_train=df_train.pop('cnt')\nX_train=df_train","2eef4d72":"#Since the total number of variables are 30, using RFE to calculate the best 15 variables to be used for model building\n\nfrom sklearn.feature_selection import RFE\nfrom sklearn.linear_model import LinearRegression\n\nlm=LinearRegression()\nlm.fit(X_train,y_train)\n\nrfe=RFE(lm, 15)\nrfe=rfe.fit(X_train,y_train)\n\nlist(zip(X_train.columns,rfe.support_,rfe.ranking_))","33ef2586":"col = X_train.columns[rfe.support_]\ncol","3efc8ce0":"X_train.columns[~rfe.support_]","20e9b07d":"X_train_rfe=X_train[X_train.columns[rfe.support_]]\nX_train_rfe.head()","e7a08a28":"#Defining 2 functions model and VIF to train model and calculate VIF repeatatively.\nimport statsmodels.api as sm\n\ndef model(X,y):\n    X=sm.add_constant(X)\n    lm_model=sm.OLS(y,X).fit()\n    print(lm_model.summary())\n    return X\n\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor\n\ndef VIF(X):\n    vif=pd.DataFrame()\n    vif['Features']=X.columns\n    vif['VIF']=[variance_inflation_factor(X.values, i) for i in range(X.shape[1])]\n    vif['VIF']=round(vif['VIF'],2)\n    vif=vif.sort_values(by='VIF', ascending=False)\n    return vif","b792803f":"#Training the first model\nX_train1=model(X_train_rfe,y_train)","4cadc677":"#Calculating Variance Inflation Factor\nVIF(X_train1)","0bd94dd2":"#VIF of Best > 10. But according to experience it seems people are more likely to use bikes in the best weather situations\n# andhence seems significant.\n#Let's drop Dec to see the difference in the significance of other variables and R squared\nX_train1=X_train1.drop('Dec',axis=1)","3b86bb0a":"X_train1=model(X_train1,y_train)","ed3cfe58":"VIF(X_train1)","1c39189d":"#R squared remained almost the same. Variable Nov seems insignificant","b48d3e25":"X_train1=X_train1.drop('Nov',axis=1)","7ac307fe":"X_train1=model(X_train1,y_train)","260c8a9b":"VIF(X_train1)","400560fe":"#R squared remained almost the same. Variable Jan seems insignificant","0ada0947":"X_train1=X_train1.drop('Jan',axis=1)","d50d0324":"X_train1=model(X_train1,y_train)","990fae6e":"VIF(X_train1)","13494f06":"#All the variables seems significant now after evaluating P>|t| and VIF\n\n#R squared from model summary is 0.842\nr2=0.842\n\n#Calculating adjusted R squared:\nn = X_train1.shape[0]\n\n# Number of features (predictors, p) is the shape along axis 1\np = X_train1.shape[1]\n\n# We find the Adjusted R-squared using the formula\n\nadjusted_r2 = 1-(1-r2)*(n-1)\/(n-p-1)\nadjusted_r2","154ca7dd":"X_train1=X_train1.drop('Best',axis=1)","47254f12":"X_train1=model(X_train1,y_train)","b99ec20d":"#The value of R squared decreased and value of F-statistic dropped significantly which shows that the fourth model was more\n#fit then the fifth. Still trying to drop spring to see if better model can be achieved.","fd25b4ff":"VIF(X_train1)","7b6a021b":"X_train1=X_train1.drop('spring',axis=1)","f669ac9a":"X_train1=model(X_train1,y_train)","e471d53f":"#The value of R squared remained the same but the value of F-statistic has increased and almost similar to our ideal fourth model.\n#This can be our another ideal model. \n#Even though Neutral is one more vital variable for our ideal fourth model, its p-value is higher. \n#Let's try to drop that variable.","25fdb85d":"VIF(X_train1)","dcadd4ac":"X_train1=X_train1.drop('Neutral',axis=1)","a4196f6b":"X_train1=model(X_train1,y_train)","b9edb8f4":"VIF(X_train1)","85f75a91":"#Rebuilding the seventh model\nlm_model7=sm.OLS(y_train,X_train1).fit()\ny_train_pred7=lm_model7.predict(X_train1)","5bd14400":"%matplotlib inline\nfig = plt.figure()\nsns.distplot((y_train - y_train_pred7), bins = 20)\nfig.suptitle('Error Terms', fontsize = 20)                  # Plot heading \nplt.xlabel('Errors', fontsize = 18) ","516303c8":"#Rebuilding the fourth model\nX_train_rfe=sm.add_constant(X_train_rfe)\nX_train_rfe.head()","0ccb1cec":"X_train_rfe.drop(['Dec','Nov','Jan'], axis=1, inplace=True)\nX_train_rfe.head()","ea545ae7":"lm_model4=sm.OLS(y_train,X_train_rfe).fit()\ny_train_pred4=lm_model4.predict(X_train_rfe)","af418a26":"fig = plt.figure()\nsns.distplot((y_train - y_train_pred4), bins = 20)\nfig.suptitle('Error Terms', fontsize = 20)                  # Plot heading \nplt.xlabel('Errors', fontsize = 18) ","065448fb":"df_test.head()","bdc35401":"#rescaling columns from the list need_rescale=['temp','hum','windspeed','cnt']\n\ndf_test[need_rescale]=scaler.transform(df_test[need_rescale])\n\ndf_train.head()","017b88e3":"df_test.describe()","2a0c9e03":"y_test=df_test.pop('cnt')\nX_train_rfe=X_train_rfe.drop('const',axis=1)\nX_test_model4=df_test[X_train_rfe.columns]\nX_test_model4.head()","a57b8c20":"X_test_model4.shape","6a92884d":"#Adding constant to dataframe\nX_test_model4=sm.add_constant(X_test_model4)","e8760ab3":"#Prediction\ny_test_pred_model4=lm_model4.predict(X_test_model4)","70271460":"#Calculating Test data R-squared:\nfrom sklearn.metrics import r2_score \nr2=r2_score(y_test, y_test_pred_model4)\nprint(r2)","10983338":"#Calculating adjusted R squared:\nn = X_test_model4.shape[0]\n\n# Number of features (predictors, p) is the shape along axis 1\np = X_test_model4.shape[1]\n\n# Calculating Adjusted R-squared using the formula\n\nadjusted_r2 = 1-(1-r2)*(n-1)\/(n-p-1)\nadjusted_r2","8fc21361":"#Checking Homoscedasticity for train and test data\nplt.figure(figsize=(12,8))\nplt.subplot(1,2,1)\nsns.scatterplot(y=y_train - y_train_pred4, x=y_train_pred4)\nplt.subplot(1,2,2)\nsns.scatterplot(y=y_test - y_test_pred_model4, x=y_test_pred_model4)\nplt.show()","8baedaec":"# Evaluating the Algorithm\nfrom sklearn import metrics\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_test_pred_model4))\nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_test_pred_model4))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_test_pred_model4)))","fad43265":"# understanding the spread.\nfig = plt.figure()\nsns.scatterplot(y_test,y_test_pred_model4)\nfig.suptitle('y_test vs y_pred', fontsize=20)              # Plot heading \nplt.xlabel('y_test', fontsize=18)                          # X-label\nplt.ylabel('y_test_pred_model4', fontsize=16)  ","cc09029f":"print(lm_model4.summary())","edee031a":"#### Also temp and atemp are very highly corelated and their respective colinearities with cnt are also same. Hence dropping atemp since feeling temperature can be relatively less accurate compared to temperature.","8a93cad7":"#### Inferences\n1. The cnt in the year 2019 was way more than that in 2018. The 75th percentile of the cnt in 2018 is almost equivalent to 25 percentile in 2019.\n2. Number of bikes booked according to seasons in a decreasing order: Fall, Summer, Winter and Spring.\n3. The trend of increasing use of bike starts from january(lowest) till June then stays almost the same till september and then starts dropping. There's a scope to increase the bike usage in the months from january till May and from October to december. The drop of bike usage from october till December might be explained by the winter season and less bike usage from January to April might be explained by higher windspeed.\n4. Days of the week doesn't matter much. Almost similar number of bikes are rented same number of times everyday in a week but Monday and tuesday have relatively less bookings.\n5. The average count of bikes rented is more during non-public holidays.\n6. The average count of bikes rented when the weather is situation is 'Clear, Few clouds, Partly cloudy, Partly cloudy' or 'Mist + Cloudy, Mist + Broken clouds, Mist + Few clouds, Mist' termed as 'Best' and 'Neutral' is much more compared to other situations termed as 'Bad' and 'Worse'- Wind speed during the bad weather situations is more than 'Best' and 'neautral' weather situations and hence more number of bikes are rented in such situations.\n7. The line-graph trend shows that the count of bikes rented is least from 1st-4th day, peaks from 6th-10th day in a month and again dips till 13th day and kind of stays almost constant throughout the month.\n8. <font color='brown'>  There was a drop of bike rents by casual users in the winters and in the first 2 months of spring and less drop in the registered users. These people may be regular office going people or fitness enthusiasts.<\/font>","5a47a3c6":"<h1 align=\"center\"><font color=\"brown\"> Boom-Bikes Bike Rentals. <\/font><\/h1>","8350e87e":"### Lower values of MAE, MSE and RMSE shows vouches for the good performance of the model.","6abf43fb":"#### Residual Analysis shows that error terms for both the models gives almost a normal distribution but the R squared value is better for the fourth model compared to the seventh model. Also normality of error distribution is slightly better for fourth model compared to seventh model.\n### Hence selecting the fourth model for prediction.","201e6f38":"## Hypothesis Testing\n#### Null hypothesis states that there is no relationship between the X variables and the Y variables meaning the coefficients of the independent variables is zero. From the final model summary, it is evident that all our coefficients are not equal to zero which means <font color='brown'> We REJECT the NULL HYPOTHESIS<\/font>","96152417":"#### Train R squared: 0.842\n#### Train Adjusted R squared: 0.8378588709677419\n#### Test R squared: 0.8378588709677419\n#### Test Adjusted R squared: 0.8035100851613118","b54376a0":"### 3. Preparing data for modelling","1faf20ee":"#### Fifth Model","21851349":"#### Second Model:","ccdd44b8":"### 4. Model Building","751df471":"#### First Model:","274000f2":"<h1 align=\"center\"> Business Use Case. <\/h1>\n\nA US bike-sharing provider BoomBikes has recently suffered considerable dips in their revenues due to the ongoing Corona pandemic. The company is finding it very difficult to sustain in the current market scenario. So, it has decided to come up with a mindful business plan to be able to accelerate its revenue as soon as the ongoing lockdown comes to an end, and the economy restores to a healthy state. They also want to expand their business outside US. Hence they want their potential partners to forecast the number of bikes rented by customers in various conditions.","aba01050":"#### There are 2 models that can be considered as the best fits:\n#### Fourth model and the Seventh model","e44c7656":"#### Since we have casual+registered=cnt and inferences are built from casual and registered records, let's drop them since these columns seem irrelevant for the model. Also it is a given that increasing casual or registered users both will be profitable factor for the business.","afb9e6ed":"This model again has lesser R squared than the fourth model but the F-statistic is much more than that.","4574c418":"#### 6.2 Prediction with model 4","b669de1d":"## Awaiting valuable feedbacks.","1f23a5d0":"#### <font color='brown'> The variables Best has a VIF slightly greater than 10. But best case weather scenario must be kept while building the model. Hence considering the above model to be the ideal one. But let's drop a few more variables to see the changes in R squared, F-statistic and Prob (F-statistic) and if we could come up with a better model<\/font>","29064134":"#### The company should focus on the following factors:\n1. People are less likely to use their service at low or extreme temperatures. So either the company can function to half the capacity or minimum capacity to reduce operational costs for better profits and provide service for regular registered customers mostly. Similarly in days with increase in humidity and windspeed. Discounts or offers won't help as well since it's inconvenient to commute using bikes in such situations.\n2. There will be increase in the number of users with increase in year since people will start adapting to renting bikes more often. There might be chances that because of covid just been around the corner, the trend might not follow immediately but giving a year more will definitely see rise in number of users.\n3. People are more likely to use their service in the best or the neutral weather environments i.e;Clear, Few clouds, Partly cloudy, Partly cloudy OR Mist + Cloudy, Mist + Broken clouds, Mist + Few clouds, Mist.","070da98b":"#### There is no clustering or pattern below or above 0.0 on the Y-axis. This model is giving best results compared to other 6 models formed earlier while training.","dba86708":"### 1. Inspecting the dataframe","9c0cc14d":"#### Fourth Model","eb45cf3c":"\n## Technologies and IDEs Used.\n\n![](https:\/\/forthebadge.com\/images\/badges\/made-with-python.svg)\n\n[<img target=\"_blank\" src=\"https:\/\/flask.palletsprojects.com\/en\/1.1.x\/_images\/flask-logo.png\" width=170>](https:\/\/flask.palletsprojects.com\/en\/1.1.x\/) [<img target=\"_blank\" src=\"https:\/\/number1.co.za\/wp-content\/uploads\/2017\/10\/gunicorn_logo-300x85.png\" width=280>](https:\/\/gunicorn.org) [<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/en\/a\/a9\/Heroku_logo.png\" width=\"180\" height=\"73\">](https:\/\/en.wikipedia.org\/wiki\/Heroku) [<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/6\/61\/HTML5_logo_and_wordmark.svg\/120px-HTML5_logo_and_wordmark.svg.png\" width=\"100\" height=\"100\">](https:\/\/en.wikipedia.org\/wiki\/HTML) [<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/d\/d5\/CSS3_logo_and_wordmark.svg\/120px-CSS3_logo_and_wordmark.svg.png\" width=\"75\" height=\"100\">](https:\/\/en.wikipedia.org\/wiki\/CSS)\n\n[<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/e\/ed\/Pandas_logo.svg\/300px-Pandas_logo.svg.png\" width=\"180\">](https:\/\/en.wikipedia.org\/wiki\/Pandas_(software)) [<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/3\/31\/NumPy_logo_2020.svg\/220px-NumPy_logo_2020.svg.png\" width=\"180\">](https:\/\/en.wikipedia.org\/wiki\/NumPy) [<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/en\/thumb\/5\/56\/Matplotlib_logo.svg\/300px-Matplotlib_logo.svg.png\" width=\"180\" height=\"80\">](https:\/\/en.wikipedia.org\/wiki\/Matplotlib) [<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/0\/05\/Scikit_learn_logo_small.svg\/220px-Scikit_learn_logo_small.svg.png\">](https:\/\/en.wikipedia.org\/wiki\/Scikit-learn)\n\n[<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/3\/38\/Jupyter_logo.svg\/250px-Jupyter_logo.svg.png\" width=\"88\" height=\"100\">](https:\/\/en.wikipedia.org\/wiki\/Project_Jupyter) &nbsp; &nbsp; [<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/en\/thumb\/d\/d2\/Sublime_Text_3_logo.png\/150px-Sublime_Text_3_logo.png\" width=\"100\" height=\"100\">](https:\/\/en.wikipedia.org\/wiki\/Sublime_Text) &nbsp; &nbsp; [<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/a\/a1\/PyCharm_Logo.svg\/64px-PyCharm_Logo.svg.png\" width=\"100\" height=\"100\">](https:\/\/en.wikipedia.org\/wiki\/PyCharm)\n\n## Machine learning Engineer and Developer\n[<img alt=\"image-url\" src=\"https:\/\/storage.googleapis.com\/kaggle-avatars\/images\/5623686-kg.png\" width=200 height=260>](https:\/\/www.linkedin.com\/in\/souvik-ganguly-4a9924105\/)|","d6c1e47f":"#### Based on the very close value of R squared and Adjusted R squared values of the train and test data sets and based on y_test and y_pred graph, it can be infereed that the our linear regression model has the below equation for it's best fitted line:\n#### <font color='brown'> cnt= 0.0478 + 0.2294 yr -0.0969 holiday + 0.5299 temp -0.1726 hum -0.1822 windspeed -0.0564 spring + 0.0531 summer+ 0.0976 winter -0.0572 Jul + 0.0833 sept + 0.2369 (Clear, Few clouds, Partly cloudy, Partly cloudy) + 0.1843 (Mist + Cloudy, Mist + Broken clouds, Mist + Few clouds, Mist)<\/font>","e2b26d2d":"### 2. Data Cleaning and Analysis","8b98fe59":"#### 3.2 Rescalling the features:","3bbfdc6e":"#### 3.3 Splitting train dataset into X and y","ffde6308":"#### 3.1 Spliting the data into test and train","e1ce3fee":"#### Inferences:\n1. Even though the margin is minimum, the number of days in fall is maximum and winter is minimum. Number of days as per season in decreasing order: Fall, Summer, Spring, Winter.\n2. The number of public holidays is 21 in 2 years. Number of holidays in 2018 and 2019 are 10 and 11 respectively\n3. The number of non-working days(Public holidays+weekends) is slightly less than half the number of working days which can be favourable for bike renting for exploring different places during non working days but can be non-favourable as well since the daily commute to office during the working days can be hampered.  \n4. Weather situation is mostly best case scenario and neutral compared to bad and worse which is favourable for renting bikes.","08edef88":"### 5. Residual Analysis of the trained data","b558f6cb":"### 6. Making Predictions","2b1a6d05":"#### Inferences:\n1. Values of temperature and feeling temperature are differently distributed.\n2. Humidity is almost randomly distributed with a mean of around 61-63.\n3. The KDE of windspeed is almost a normal distribution with a right skew because of a few days with windspeed over 30.\n4. The spread of casual users is not normally distributed where as that of registered users is normally distributed ultimately leading to cnt to be spread normally distributed.","7a601d62":"#### 2.2 Bivariate Analysis","143dafaf":"#### Sixth Model","914dc81d":"#### Seventh Model","ebc77869":"<h1 align=\"center\"> Project Description. <\/h1>\n\nThis project is an end to end Machine learning solution along with deployment using heroku.\nIt's divided into 3 parts:\n1. [Building the model.](https:\/\/www.kaggle.com\/dssouvikganguly\/10-boom-bikes-bike-rentals\/)\n2. [Making a web application using Flask Web framework.](https:\/\/github.com\/ds-souvik\/Prediction-of-Bike-Rental-Count-Linear-Regression-and-Deployment-along-with-deployment\/blob\/master\/app.py)\n3. [Deployment using Heroku.](https:\/\/github.com\/ds-souvik\/Prediction-of-Bike-Rental-Count-Linear-Regression-and-Deployment-along-with-deployment\/blob\/master\/Heroku%20deployment.docx)\n\nFor complete details of the application [Click on the github link.](https:\/\/github.com\/ds-souvik\/Prediction-of-Bike-Rental-Count-Linear-Regression-and-Deployment-along-with-deployment)\n\nTo see the logs and execution time of training and prediction without the EDA and inferences [click here](https:\/\/www.kaggle.com\/dssouvikganguly\/11-model-training-boombikes-bike-rentals)\n\nApplication is available [here.](https:\/\/boombikes-prediction-api.herokuapp.com\/)","824cc5ce":"<h1 align=\"center\"> Business Goal.<\/H1>\n\nThe objective of this project is to model the demand for shared bikes with the available independent variables. It will be used by the management and potential partners to understand how exactly the demands vary with different features. They can accordingly manipulate the business strategy to meet the demand levels and meet the customer's expectations. Further, the model will be a good way for management to understand the demand dynamics of a new market.","de50a0ca":"#### Note: For the column weathersit, the alias is\n#### Best   : \nClear, Few clouds, Partly cloudy, Partly cloudy\n\n#### Neutral: \nMist + Cloudy, Mist + Broken clouds, Mist + Few clouds, Mist\n\n#### Bad    : \nLight Snow, Light Rain + Thunderstorm + Scattered clouds, Light Rain + Scattered clouds\n\n#### Worse  : \nHeavy Rain + Ice Pallets + Thunderstorm + Mist, Snow + Fog","aceaa68c":"#### 2.1 Univariate Analysis","9ba5a8dc":"#### 6.1 Preparing data for prediction.","aad8e3ed":"#### Third model","a690be09":"Columns of X_train_rfe are similar to the fourth model","41264512":"#### Inference\n1. Huge corelation between temp and atemp. Hence only one of the 2 variables will be in the model.\n2. temp\/atemp shows some linear relationship with cnt.\n3. hum and windspeed doesn't show much of a linear relationship with cnt.\n4. Casual and registered shows linear relationship with cnt out of which the linear relationship shown by registered users is very significant.\n5. Rest there are not any significant linear relationships.","1114cea0":"#### Visualization","1c2199bb":"#### After minimizing the number of variables using RFE, using statsmodel to build an optimized model."}}