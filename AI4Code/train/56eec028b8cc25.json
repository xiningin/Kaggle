{"cell_type":{"ba198887":"code","c71f2ab3":"code","1ae1ada9":"code","a8538271":"code","9cab8775":"code","115b3de7":"code","547ce04a":"code","51d90596":"code","d06cbb08":"code","0b704c04":"code","493dc424":"code","3fa7ac07":"code","db91b6ba":"code","f248d030":"code","120ed590":"code","fa750cd2":"code","85750c53":"code","8532a6d7":"code","a27855c7":"code","db5556ff":"code","aacc745d":"code","6afa52c6":"code","a956f639":"code","80fe4dcc":"code","59dd5c73":"code","e1190c1c":"code","ede53dd3":"code","2fefee60":"code","b7be35ee":"code","2f69ac04":"markdown","eaba05a5":"markdown","71f874c7":"markdown","8883f0e7":"markdown","951f4f3e":"markdown"},"source":{"ba198887":"# This Anaysis is Performed by Shubham S Kale as a Personal Project \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","c71f2ab3":"data=pd.read_csv('..\/input\/data.csv',encoding = \"ISO-8859-1\")\ndata.head()","1ae1ada9":"data.tail()","a8538271":"data.size","9cab8775":"data.columns","115b3de7":"data.info()","547ce04a":"data.describe()","51d90596":"# columns : ['stn_code', 'sampling_date','agency','location_monitoring_station'] seems to be useless , so lets drop them\ndata.drop(['stn_code', 'sampling_date','agency','location_monitoring_station'],axis=1,inplace=True)\ndata.head()","d06cbb08":"data.tail(10)","0b704c04":"#dropping last three rows as most of the values are \"NaN\" & forming a new dataframe 'data_new'\ndata_new=data.drop(range(435739,435742))","493dc424":"data_new.tail(10)","3fa7ac07":"data_new.columns","db91b6ba":"data_new.dtypes","f248d030":"data_new.describe()","120ed590":"#converting object types to string\ndata_new['state']=data_new.state.astype('str',inplace=True)\ndata_new['location']=data_new.location.astype('str',inplace=True)\ndata_new['type']=data_new.type.astype('str',inplace=True)\ndata_new['date']=data_new.date.astype('str',inplace=True)\ndata_new.info()","fa750cd2":"#replacing \"NaN\" values in above described columns with zero\nimport numpy as np\ndata_new.fillna(0.0,inplace=True)\ndata_new.head(10)","85750c53":"data_new.tail(10)","8532a6d7":"#Exploring relationship between proportion of Sulphur dioxide & Nitrogen dioxide\nimport seaborn as sns\nsns.regplot(x=data_new['so2'],y=data_new['no2'],data=data_new)","a27855c7":"#Exploring air pollution state-wise\nstates=data_new.groupby(['state','location'],as_index=False).mean()\nstates","db5556ff":"#location with highest Sulphur dioxide,Nitrogen dioxide, RSPM and SPM separately content in air\nprint(\"Location with highest SO2 content in air :-\\n\\n\")\nprint(states[states['so2']==(states['so2'].max())])\nprint(\"Location with highest NO2 content in air :-\\n\\n\")\nprint(states[states['no2']==(states['no2'].max())])\nprint(\"Location with highest RSPM content in air :-\\n\\n\")\nprint(states[states['rspm']==(states['rspm'].max())])\nprint(\"Location with highest SPM content in air :-\\n\\n\")\nprint(states[states['spm']==(states['spm'].max())])","aacc745d":"state=states.groupby(['state'],as_index=False).mean()","6afa52c6":"#new dataframe with data related to states only\nstate","a956f639":"#adding a column of total to the 'state' dataframe\nstate['total']=state.sum(axis=1)\nstate.head()","80fe4dcc":"print(\"The State with highest amount of air-pollution is :-\\n\\n\")\nprint(state[state['total']==(state['total'].max())])","59dd5c73":"print(\"The State with lowest amount of air-pollution is :-\\n\\n\")\nprint(state[state['total']==(state['total'].min())])","e1190c1c":"state=state.sort_values(['total'],ascending=False)\nprint(\"Top 5 Most Populated States are :-\\n\\n\")\nstate.head()","ede53dd3":"print(\"Top 5 Least Populated States are :-\\n\\n\")\nstate.tail().sort_values(['total'],ascending=True)","2fefee60":"import folium","b7be35ee":"india_map=folium.Map(location=[20.5937,78.9629],zoom_start=5,tiles='Stamen Terrain')\nairp = folium.map.FeatureGroup()\n\n# Highest Pollution\nairp.add_child(\n    folium.features.CircleMarker(\n            [28.6139, 77.2090],\n            radius=5, # define how big you want the circle markers to be\n            color='yellow',\n            fill=True,\n            fill_color='blue',\n            fill_opacity=0.6\n        )\n    )\nfolium.Marker([28.6139, 77.2090], popup='Highly Poluted State').add_to(india_map)  \n# Lowest Pollution\nairp.add_child(\n    folium.features.CircleMarker(\n            [23.1645, 92.9376],\n            radius=5, # define how big you want the circle markers to be\n            color='yellow',\n            fill=True,\n            fill_color='blue',\n            fill_opacity=0.6\n        )\n    )\nfolium.Marker([23.1645, 92.9376], popup='Least Poluted State').add_to(india_map)  \n    \n# add incidents to map\nindia_map.add_child(airp)","2f69ac04":"Pandas only has a few specific data types that mainly handle numeric values. \nFor everything else it uses the object type. Strings fit into the latter category, and \nso it is likely that your data is already strings, even though the data type is listed as object.","eaba05a5":"So in India Least Air Polluted state  is  **Mizoram**","71f874c7":"Above Map shows locations of highly air polluted state and least air polluted state","8883f0e7":"Above plot shows that over the years there has been continuos increase in proportion of Sulphur dioxide and Nitrogen dioxide","951f4f3e":"So in India Highest Air Pollution is in **New Delhi**"}}