{"cell_type":{"88fa811b":"code","8dea5aaf":"code","4bd6fd20":"code","f8d49a62":"code","673bd859":"code","35bafe25":"code","2b1c3722":"code","303199bd":"code","5cb5746f":"code","70b91f29":"code","c19f8db3":"code","35ac29e2":"code","2d480c5a":"code","24d83c00":"code","17bf2cb3":"code","50a48b3a":"code","eb18a703":"code","c78cc0ba":"code","2ef21697":"code","54e50922":"code","f83aae16":"markdown","51949638":"markdown","a3de916c":"markdown","2ba67e60":"markdown"},"source":{"88fa811b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8dea5aaf":"import io #The io module provides Python\u2019s main facilities for dealing with various types of I\/O.\nimport json #JSON (JavaScript Object Notation) is a lightweight data-interchange format\nimport cv2 # cv2.imread(), cv2.imshow() , cv2.imwrite()\nimport numpy as np #create a NumPy array, use broadcasting, access values, manipulate arrays, and much more\nimport requests #Make a request to a web page, and print the response text\nimport matplotlib.pyplot as plt  #Matplotlib is a comprehensive library for creating static, animated, and interactive visualizations in Python.","4bd6fd20":"#import the necessary libraries and load the image using matplotlib. \n#\nimg = cv2.imread(\"..\/input\/cusersmarildownloads23375jpeg\/23375.jpeg\")\nheight, width, _ = img.shape\nheight\nwidth,height","f8d49a62":"plt.imshow(img)","673bd859":"url_api = \"https:\/\/api.ocr.space\/parse\/image\"","35bafe25":"# Ocr\nurl_api = \"https:\/\/api.ocr.space\/parse\/image\"\n_, compressedimage = cv2.imencode(\".jpg\", img, [1, 90])\nfile_bytes = io.BytesIO(compressedimage)","2b1c3722":"#you execute this code \n\"\"\"\nresult = requests.post(url_api,\n              files = {\"screenshot.jpg\": file_bytes},\n              data = {\"apikey\": \"YOURAPIKEYHERE\",\n                      \"language\": \"eng\"})\n\n\"\"\"","303199bd":"result = requests.post(url_api,\n              files = {\"..\/input\/cusersmarildownloads23375jpeg\/23375.jpeg\": file_bytes},\n              data = {\"apikey\": \"eb516eb1f288957\",\n                      \"language\": \"eng\"})","5cb5746f":"result = result.content.decode()\nresult = json.loads(result)","70b91f29":"result","c19f8db3":"parsed_results = result.get(\"ParsedResults\")[0]\ntext_detected = parsed_results.get(\"ParsedText\")\ntext_detected","35ac29e2":"# Generic Libraries\nfrom PIL import Image\nimport os\nimport pandas as pd\nimport numpy as np\nimport re,string,unicodedata\n\n#Tesseract Library\nimport pytesseract\n\n#Warnings\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n#Garbage Collection\nimport gc\n\nimport cv2\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport os\nimport pytesseract","2d480c5a":"# Let's start with a simple image\nimg = cv2.imread(\"..\/input\/cusersmarildownloads23375jpeg\/23375.jpeg\") # image in BGR format\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nfig = plt.figure(figsize = [10,10])\nheight,width,channel = img.shape\nplt.imshow(img)\nprint(type(img))\nprint(height,width,channel)","24d83c00":"# as the image is simple enough, image_to_string method reads all characters almost perfectly!\ntext = pytesseract.image_to_string(img)\nprint(text)","17bf2cb3":"# the output of OCR can be saved in a file in necessary\nfile = open('output.txt','a') # file opened in append mode\nfile.write(text)\nfile.close()","50a48b3a":"!pip install https:\/\/github.com\/myhub\/tr\/archive\/1.5.1.zip","eb18a703":"from tr import *\nfrom PIL import Image, ImageDraw, ImageFont","c78cc0ba":"img_pil = Image.open(\"..\/input\/cusersmarildownloads23375jpeg\/23375.jpeg\")\nMAX_SIZE = 2000\nif img_pil.height > MAX_SIZE or img_pil.width > MAX_SIZE:\n    scale = max(img_pil.height \/ MAX_SIZE, img_pil.width \/ MAX_SIZE)\n\n    new_width = int(img_pil.width \/ scale + 0.5)\n    new_height = int(img_pil.height \/ scale + 0.5)\n    img_pil = img_pil.resize((new_width, new_height), Image.BICUBIC)\n\nprint(img_pil.width, img_pil.height)\n# img_pil","2ef21697":"gray_pil = img_pil.convert(\"L\")\n\nrect_arr = detect(img_pil, FLAG_RECT)\n\nimg_draw = ImageDraw.Draw(img_pil)\ncolors = ['red', 'green', 'blue', \"yellow\", \"pink\"]\n\nfor i, rect in enumerate(rect_arr):\n    x, y, w, h = rect\n    img_draw.rectangle(\n        (x, y, x + w, y + h),\n        outline=colors[i % len(colors)],\n        width=4)\n\nimg_pil","54e50922":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Thanks for your patience \u2013 please keep coming back to see my improvements, @mpwolke Was Here.' )","f83aae16":"#Credits to : https:\/\/www.kaggle.com\/ggck43\/ocr-using-pytesseract-bengali-english\n#Naim Mhedhbi.  https:\/\/www.kaggle.com\/naim99\/ocr-text-recognition-ocr-space-api-tesseract\/data\n\nThis kaggle Notebook consists in code to recognize text from a picture using python and OCR.space API.\n\nThe acronym API corresponds to the English words \u201c Application Programming Interface \u201c.\n\nThey are a way of integrating systems, enabling benefits such as data security, ease of exchange between information with different programming languages and monetization of access. \n\nAPIs are a type of \u201cbridge\u201d that connect applications, which can be used for the most varied types of business, by companies of different market niches or sizes.\n\nMost people don't know what an API is . This is because they are invisible to the average user, who sees only the interface of software and applications. However, programming professionals know this technology inside, which is the result of the evolution of different systems and tools. Applications and software of different types can only be built using the standards and specifications provided by the APIs.\n\nAPIs provide the integration between systems that have totally different languages in an agile and secure way. In other forms of systems integration, the professional who performs the work often needs to install resources compatible with the system in which the integration is sought, generating a great deal of work and, consequently, delay in generating business and productive processes. a company.\n\nThe possibilities provided by the use of APIs provide software and application developers with the possibility of connecting heterogeneous technologies, such as different databases, for example. In addition, it is possible to make specific features and tools for certain applications used in others, without causing any difficulty.\n\nhttps:\/\/translate.google.com.br\/translate?hl=en&sl=pt&u=http:\/\/blog.vertigo.com.br\/o-que-e-api-entenda-de-uma-maneira-simples&prev=search&pto=aue\n\n\n#I don't know what is an API,OCR and tesseract I've applied in my pdf work. Though I still don't know what it really is too!\n\n\n#All script by Naim Mhedhbi. ","51949638":"#Extract text using tesseract ","a3de916c":"#Third Method","2ba67e60":"#Understand what is an API\n\n![](https:\/\/vertigo.com.br\/wp-content\/uploads\/Entenda-o-que-%C3%A9-uma-API.png)https:\/\/blog.vertigo.com.br\/entenda-o-que-e-uma-api\/"}}