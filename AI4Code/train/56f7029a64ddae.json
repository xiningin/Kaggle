{"cell_type":{"94c68473":"code","206a3a91":"code","31d2e51b":"code","64bea08a":"code","9e5ae580":"code","0e1156c6":"code","5b7b0184":"code","48e027d3":"code","f0867fef":"code","05e78d69":"code","306e6253":"code","7d268b0b":"code","9d7ac2ab":"code","a704f032":"code","a93a3b7b":"code","9f38ed36":"code","2492205b":"code","8c8723ba":"code","6643168c":"code","820c860d":"code","684a0ef8":"code","99127faf":"code","7230c9a4":"code","965fdf0e":"code","8f5411a0":"code","457acf97":"code","a42a8cec":"code","827c9d72":"code","b17fd2af":"code","b9fc2e50":"code","de1b0e4d":"code","3fbefea9":"code","f985742e":"code","966bec46":"code","f9e56293":"code","bbd9c43d":"code","54a6471b":"code","5409cc8c":"code","388ad710":"code","6ad4e097":"code","d8e2f021":"code","50bfee38":"code","0dac0f1e":"code","1687a348":"code","0c6497d0":"code","a29bdc86":"code","ba8e0451":"code","8b5f588d":"code","025de615":"code","d097ce15":"code","a1cf68ba":"code","2b4c93ec":"code","7e5ccdf3":"code","7715ea88":"code","97139473":"code","48024a6c":"code","a4e2d1f9":"code","bcff2447":"code","779b9644":"code","4e3c12ce":"code","3d86e4a6":"code","3d64492a":"markdown","bc6afc09":"markdown","e6cb81ed":"markdown","c2263548":"markdown","9454d3bd":"markdown","e21054bb":"markdown","17280bcb":"markdown","51dea115":"markdown","22bfd2da":"markdown","89655883":"markdown","ccc48eb4":"markdown","bdb0fe04":"markdown","35e492e7":"markdown","9f986935":"markdown","4688625f":"markdown","e34d70ee":"markdown","8c22e0f1":"markdown","06f51fa8":"markdown","4ff21629":"markdown","5268dba8":"markdown","246f4e24":"markdown","4bc49d07":"markdown","89eaa8ad":"markdown","973fa17b":"markdown"},"source":{"94c68473":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","206a3a91":"pip install kaggle","31d2e51b":"train = pd.read_csv('..\/input\/mercedes-benz-greener-manufacturing\/train.csv.zip')\ntest=pd.read_csv(\"..\/input\/mercedes-benz-greener-manufacturing\/test.csv.zip\")","64bea08a":"print(\"Train shape :\", train.shape)\nprint(\"Test shape :\" ,test.shape)","9e5ae580":"train.head()","0e1156c6":"import matplotlib.pyplot as plt","5b7b0184":"plt.figure(figsize=(8,6))\nplt.scatter(range(train.shape[0]), np.sort(train.y.values))\nplt.xlabel('value')\nplt.ylabel('y')\nplt.grid()\nplt.show()","48e027d3":"train[\"y\"].max()","f0867fef":"train[\"y\"].min()","05e78d69":"train[\"y\"].mean()","306e6253":"print(train.columns)","7d268b0b":"train.describe()","9d7ac2ab":"import seaborn as sns","a704f032":"train['X0'].unique()","a93a3b7b":"train.groupby('X0')['ID'].nunique()","9f38ed36":"col_sort_order = np.sort(train['X0'].unique()).tolist()\nplt.figure(figsize=(14,6))\nsns.stripplot(x='X0', y='y', data=train,order=col_sort_order)\nplt.xlabel('X0', fontsize=14)\nplt.ylabel('y', fontsize=14)\nplt.title(\"Distb. of y variable with X0\")\nplt.grid()\nplt.show()","2492205b":"col_sort_order = np.sort(train['X0'].unique()).tolist()\nplt.figure(figsize=(14,6))\nsns.boxplot(x='X0', y='y', data=train, order=col_sort_order)\nplt.xlabel('X0', fontsize=14)\nplt.ylabel('y', fontsize=14)\nplt.grid()\nplt.title(\"Distb. of y variable with X0\")\nplt.show()","8c8723ba":"train['X1'].unique()","6643168c":"train.groupby('X1')['ID'].nunique()","820c860d":"col_sort_order = np.sort(train['X1'].unique()).tolist()\nplt.figure(figsize=(14,6))\nsns.stripplot(x='X1', y='y', data=train,order=col_sort_order)\nplt.xlabel('X1', fontsize=14)\nplt.ylabel('y', fontsize=14)\nplt.title(\"Distb. of y variable with X1\")\nplt.grid()\nplt.show()","684a0ef8":"col_sort_order = np.sort(train['X1'].unique()).tolist()\nplt.figure(figsize=(14,6))\nsns.boxplot(x='X1', y='y', data=train, order=col_sort_order)\nplt.xlabel('X1', fontsize=14)\nplt.ylabel('y', fontsize=14)\nplt.grid()\nplt.title(\"Distb. of y variable with X1\")\nplt.show()","99127faf":"train['X2'].unique()","7230c9a4":"train.groupby('X2')['ID'].nunique()","965fdf0e":"col_sort_order = np.sort(train['X2'].unique()).tolist()\nplt.figure(figsize=(14,6))\nsns.stripplot(x='X2', y='y', data=train,order=col_sort_order)\nplt.xlabel('X2', fontsize=14)\nplt.ylabel('y', fontsize=14)\nplt.title(\"Distb. of y variable with X2\")\nplt.grid()\nplt.show()","8f5411a0":"col_sort_order = np.sort(train['X2'].unique()).tolist()\nplt.figure(figsize=(14,6))\nsns.boxplot(x='X2', y='y', data=train, order=col_sort_order)\nplt.xlabel('X2', fontsize=14)\nplt.ylabel('y', fontsize=14)\nplt.grid()\nplt.title(\"Distb. of y variable with X2\")\nplt.show()","457acf97":"train['X3'].unique()","a42a8cec":"train.groupby('X3')['ID'].nunique()","827c9d72":"col_sort_order = np.sort(train['X3'].unique()).tolist()\nplt.figure(figsize=(14,6))\nsns.stripplot(x='X3', y='y', data=train,order=col_sort_order)\nplt.xlabel('X3', fontsize=14)\nplt.ylabel('y', fontsize=14)\nplt.title(\"Distb. of y variable with X3\")\nplt.grid()\nplt.show()","b17fd2af":"col_sort_order = np.sort(train['X3'].unique()).tolist()\nplt.figure(figsize=(14,6))\nsns.boxplot(x='X3', y='y', data=train, order=col_sort_order)\nplt.xlabel('X3', fontsize=14)\nplt.ylabel('y', fontsize=14)\nplt.grid()\nplt.title(\"Distb. of y variable with X3\")\nplt.show()","b9fc2e50":"train['X4'].unique()","de1b0e4d":"train.groupby('X4')['ID'].nunique()","3fbefea9":"col_sort_order = np.sort(train['X4'].unique()).tolist()\nplt.figure(figsize=(14,6))\nsns.stripplot(x='X4', y='y', data=train,order=col_sort_order)\nplt.xlabel('X4', fontsize=14)\nplt.ylabel('y', fontsize=14)\nplt.title(\"Distb. of y variable with X4\")\nplt.grid()\nplt.show()","f985742e":"col_sort_order = np.sort(train['X4'].unique()).tolist()\nplt.figure(figsize=(14,6))\nsns.boxplot(x='X4', y='y', data=train, order=col_sort_order)\nplt.xlabel('X4', fontsize=14)\nplt.ylabel('y', fontsize=14)\nplt.grid()\nplt.title(\"Distb. of y variable with X4\")\nplt.show()","966bec46":"train['X5'].unique()","f9e56293":"train.groupby('X5')['ID'].nunique()","bbd9c43d":"col_sort_order = np.sort(train['X5'].unique()).tolist()\nplt.figure(figsize=(14,6))\nsns.stripplot(x='X5', y='y', data=train,order=col_sort_order)\nplt.xlabel('X5', fontsize=14)\nplt.ylabel('y', fontsize=14)\nplt.title(\"Distb. of y variable with X5\")\nplt.grid()\nplt.show()","54a6471b":"col_sort_order = np.sort(train['X5'].unique()).tolist()\nplt.figure(figsize=(14,6))\nsns.boxplot(x='X5', y='y', data=train, order=col_sort_order)\nplt.xlabel('X5', fontsize=14)\nplt.ylabel('y', fontsize=14)\nplt.grid()\nplt.title(\"Distb. of y variable with X5\")\nplt.show()","5409cc8c":"train['X6'].unique()","388ad710":"train.groupby('X6')['ID'].nunique()","6ad4e097":"col_sort_order = np.sort(train['X6'].unique()).tolist()\nplt.figure(figsize=(14,6))\nsns.stripplot(x='X6', y='y', data=train,order=col_sort_order)\nplt.xlabel('X6', fontsize=14)\nplt.ylabel('y', fontsize=14)\nplt.title(\"Distb. of y variable with X6\")\nplt.grid()\nplt.show()","d8e2f021":"col_sort_order = np.sort(train['X6'].unique()).tolist()\nplt.figure(figsize=(14,6))\nsns.boxplot(x='X6', y='y', data=train, order=col_sort_order)\nplt.xlabel('X6', fontsize=14)\nplt.ylabel('y', fontsize=14)\nplt.grid()\nplt.title(\"Distb. of y variable with X6\")\nplt.show()","50bfee38":"train['X8'].unique()","0dac0f1e":"train.groupby('X8')['ID'].nunique()","1687a348":"col_sort_order = np.sort(train['X8'].unique()).tolist()\nplt.figure(figsize=(14,6))\nsns.stripplot(x='X8', y='y', data=train,order=col_sort_order)\nplt.xlabel('X8', fontsize=14)\nplt.ylabel('y', fontsize=14)\nplt.title(\"Distb. of y variable with X8\")\nplt.grid()\nplt.show()","0c6497d0":"col_sort_order = np.sort(train['X8'].unique()).tolist()\nplt.figure(figsize=(14,6))\nsns.boxplot(x='X8', y='y', data=train, order=col_sort_order)\nplt.xlabel('X8', fontsize=14)\nplt.ylabel('y', fontsize=14)\nplt.grid()\nplt.title(\"Distb. of y variable with X8\")\nplt.show()","a29bdc86":"! pip install pycaret","ba8e0451":"from pycaret.regression import *","8b5f588d":"train.info()","025de615":"reg = setup(data = train, \n             target = 'y',\n             categorical_features = ['X0','X1','X2','X3','X4','X5','X6','X8'],\n              normalize = True,\n             numeric_imputation = 'mean',\n             pca=True,\n             silent = True)\n","d097ce15":"compare_models()","a1cf68ba":"br=create_model('br')","2b4c93ec":"br","7e5ccdf3":"tuned_dt = tune_model(br)","7715ea88":"plot_model(br)","97139473":"tuned_br = tune_model(br, optimize = 'R2')","48024a6c":"tuned_br","a4e2d1f9":"final_br= finalize_model(tuned_br)","bcff2447":"save_model(final_br, 'br_saved1126082020')","779b9644":"#sample= pd.read_csv('..\/input\/sample\/sample.csv')","4e3c12ce":"#predictions = predict_model(tuned_br, data = test)\n#sample['y'] = predictions['Label']","3d86e4a6":"#sample.head()","3d64492a":"## Column X5","bc6afc09":"### Column X0","e6cb81ed":"## Observation\n\n* 11 cataegories are having the outliers as the datapoints in the column out of 12.","c2263548":"## Observation\n\n* 24 cataegories are having the outliers as the datapoints out of 26 column.","9454d3bd":"## Column x3","e21054bb":"the min time for y is 72.11 , max time is 265.32 and the mean is 100.669","17280bcb":"Here we can observe that most of the values of y lies in 50-170.\n","51dea115":"## Column X6","22bfd2da":"* Here we can observe that  X0 ,X1,X2,X3,X4,X5,X6 AND X8 the column are cateogorical values .\n* Reaming coloumn are numerical ","89655883":"we can obsereve that the train and test data is splited into 50-50%\n","ccc48eb4":"## Observation\n* There are 17 different cateogires with single digit count.\n* 24 cataegories are having the outliers as the datapoints.","bdb0fe04":"Observation\n\n* 6 cataegories are having the outliers as the datapoints in the column .","35e492e7":"## Observation\n\n* 1 category  are having the outliers as the datapoints in the column.","9f986935":"#### Observation\n* there are 8 different cateogires with single digit count \n* 38 cataegories are having the outliers as the datapoints ","4688625f":"lets look into the data ","e34d70ee":"lets explore something about the target \"y\"","8c22e0f1":"## Categorical data visualization","06f51fa8":"## Column X4","4ff21629":"# Lets try the pycaret approach .","5268dba8":"### Observation \n* There are 5 different cateogires with single digit count.\n* 16 cataegories are having the outliers as the datapoints","246f4e24":"## Column X1","4bc49d07":"## Column X2","89eaa8ad":"## Observation\n* There are 6 different cateogires with single digit count.\n* 19 cataegories are having the outliers as the datapoints.","973fa17b":"## Column X8"}}