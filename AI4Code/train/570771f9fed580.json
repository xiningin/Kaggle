{"cell_type":{"5fd406ae":"code","4ec65bda":"code","4a66c5d1":"code","2a13d773":"code","7319f2da":"code","e95b0208":"code","2bcca8d8":"code","dae85fe7":"code","0bb94030":"code","b6b8ba8f":"code","357ae90f":"code","7b750847":"code","162bb2dd":"code","1d87429b":"code","939c7a1c":"code","b385cc70":"code","0352d07b":"code","0eb9d829":"code","f546d51f":"code","215ff1c9":"code","eaaa7b56":"code","c008698c":"code","1486ba69":"code","ffd74f45":"code","4cda0b60":"code","b300ec5a":"code","dbcac357":"code","6942b711":"code","becb5b90":"code","3135aa44":"code","5bd11600":"code","ef490b26":"code","c140b5d8":"code","389dda0b":"code","6d836398":"code","3618f7d0":"code","92437a69":"code","64bb875f":"code","4a70a73c":"code","e7f90ed5":"code","171680a2":"code","1c4ce760":"code","f9116a60":"code","8501aec6":"code","8d435230":"code","ae66798d":"code","66b83947":"code","1e250b6f":"code","32ce2c85":"code","19b7baa1":"code","db771012":"code","e5b18390":"code","d9cb0589":"code","6ba490d6":"code","8a64b191":"code","4bdf02ef":"code","e92b6967":"code","041f1ea5":"code","460e701e":"code","0c860c6b":"code","b59a37fe":"code","f20ec6b7":"code","5fa790f0":"code","3635dec3":"code","75a0f0a0":"code","5b773059":"code","9f9308c6":"code","bfb85635":"code","5921e8bc":"code","e0b9c230":"code","7d3cb122":"code","26e0820b":"code","61b9ba61":"code","51607681":"code","8b5ee863":"code","799341f5":"code","477fc739":"code","60e53f62":"code","98deb4da":"code","be751887":"code","eb2fde3d":"code","a0b73b07":"code","74c3e257":"code","465d8aa6":"code","8de92d8c":"code","7a3ef5d5":"code","e43421b8":"code","cd52ef21":"code","36cd053a":"markdown","4d6a406c":"markdown","351a57f7":"markdown","718900b7":"markdown","6af841b2":"markdown","7cac69cc":"markdown","160c73c8":"markdown","a3873850":"markdown","aa7b949c":"markdown","2bc29b6b":"markdown","0cfe361d":"markdown","91e001e1":"markdown","952eef7c":"markdown","e6581636":"markdown","74c7776c":"markdown","9be5dcf1":"markdown","7a9406e9":"markdown","5a2ac97f":"markdown","253895dc":"markdown","c82e669a":"markdown","36b6dd2f":"markdown","564068d2":"markdown","78d7b1b0":"markdown","447bf6b0":"markdown","7171c6c3":"markdown","313916df":"markdown","286f3081":"markdown","d1edc6da":"markdown","573b6b05":"markdown","deb21753":"markdown","e02ac6d8":"markdown","f14b880c":"markdown","21e530e7":"markdown","e46e8fc8":"markdown","02cb5069":"markdown","b171fa17":"markdown","361fa361":"markdown","dcebd74c":"markdown","e757ac35":"markdown","5c5aa299":"markdown","ea90c425":"markdown","48342e83":"markdown","cd6aa01e":"markdown","f6ccc261":"markdown","b82dc604":"markdown","08acce47":"markdown","7b809f1b":"markdown","b220fc25":"markdown","4bd21e44":"markdown","eb64b50a":"markdown","b1647b9f":"markdown","ab4dde58":"markdown","3042bcf6":"markdown","fb3a8b0c":"markdown"},"source":{"5fd406ae":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","4ec65bda":"df = pd.read_csv(\"\/kaggle\/input\/weather-dataset-rattle-package\/weatherAUS.csv\")","4a66c5d1":"df.info()","2a13d773":"df.describe(include='object')","7319f2da":"#cr\u00e9ation de quelques variables de date et num\u00e9risation des variables Rain*\ndf['RainToday_Num'] = (df['RainToday'] ==  'Yes')*1\ndf['RainTomorrow_Num'] = (df['RainTomorrow'] ==  'Yes')*1\ndf['Date'] = pd.to_datetime(df['Date'])\ndf['Mois'] = df['Date'].dt.month\ndf['Trimestre'] = df['Date'].dt.quarter\ndf['Annee'] = df['Date'].dt.year","e95b0208":"df.head(10)","2bcca8d8":"df.tail()","dae85fe7":"print(\"Taille du jeu de donn\u00e9es :\",df.shape)\nprint(\"\\n\")\ndf.info()","0bb94030":"#1e analyse statistique des variables num\u00e9riques\ndf.describe()","b6b8ba8f":"#1e analyse statistique des variables cat\u00e9gorielles\ndf.describe(include=['object'])","357ae90f":"#D\u00e9compte des valeurs manquantes\ndf.isna().sum(axis=0).sort_values()","7b750847":"#pourcentages de valeurs manquantes\npercent_na = df.isna().sum() * 100 \/ len(df)\npercent_na.sort_values()","162bb2dd":"print(df.Location.value_counts())\nprint(\"Nombre de valeurs uniques =\", df.Location.value_counts().shape[0])\nprint(\"Moyenne =\", df.Location.value_counts().mean())","1d87429b":"df.Location.value_counts(normalize=True)","939c7a1c":"plt.figure(figsize=(16,8))\ndf['Location'].value_counts().plot(kind='bar')\nplt.title(\"Nombre d'observations pour chaque station\");","b385cc70":"print(\"Value counts :\")\nprint(df.WindGustDir.value_counts())\nprint(\"Nombre de valeurs uniques =\", df.WindGustDir.value_counts().shape[0])\nprint(\"Moyenne =\", df.WindGustDir.value_counts().mean())","0352d07b":"df.WindGustDir.value_counts(normalize=True)","0eb9d829":"plt.figure(figsize=(16,8))\ndf['WindGustDir'].value_counts().plot(kind='bar')\nplt.title(\"Nombre d'observations pour chaque direction de la rafale la plus forte (WindGustDir)\");","f546d51f":"print(\"Value counts :\")\nprint(df.WindDir9am.value_counts())\nprint(\"Nombre de valeurs uniques =\", df.WindDir9am.value_counts().shape[0])\nprint(\"Moyenne =\", df.WindDir9am.value_counts().mean())","215ff1c9":"df.WindDir9am.value_counts(normalize=True)","eaaa7b56":"plt.figure(figsize=(16,8))\ndf['WindDir9am'].value_counts().plot(kind='bar')\nplt.title(\"Nombre d'observations pour chaque direction du vent \u00e0 9h (WindDir9am)\");","c008698c":"print(\"Value counts :\")\nprint(df.WindDir3pm.value_counts())\nprint(\"Nombre de valeurs uniques =\", df.WindDir3pm.value_counts().shape[0])\nprint(\"Moyenne =\", df.WindDir3pm.value_counts().mean())","1486ba69":"df.WindDir3pm.value_counts(normalize=True)","ffd74f45":"plt.figure(figsize=(16,8))\ndf['WindDir3pm'].value_counts().plot(kind='bar')\nplt.title(\"Nombre d'observations pour chaque direction du vent \u00e0 15h (WindDir3pm)\");","4cda0b60":"print(\"Value counts :\")\nprint(df.Cloud9am.value_counts().sort_index())\nprint(\"Nombre de valeurs uniques =\", df.Cloud9am.value_counts().shape[0])\nprint(\"Moyenne =\", df.Cloud9am.value_counts().mean())","b300ec5a":"df.Cloud9am.value_counts(normalize=True).sort_index()","dbcac357":"plt.figure(figsize=(16,8))\ndf['Cloud9am'].value_counts().sort_index().plot(kind='bar')\nplt.title(\"Nombre d'observations pour chaque valeur d'octas - couverture nuageuse \u00e0 9h (Cloud9am)\");","6942b711":"print(\"Value counts :\")\nprint(df.Cloud3pm.value_counts().sort_index())\nprint(\"Nombre de valeurs uniques =\", df.Cloud3pm.value_counts().shape[0])\nprint(\"Moyenne =\", df.Cloud3pm.value_counts().mean())","becb5b90":"df.Cloud3pm.value_counts(normalize=True).sort_index()","3135aa44":"plt.figure(figsize=(16,8))\ndf['Cloud3pm'].value_counts().sort_index().plot(kind='bar')\nplt.title(\"Nombre d'observations pour chaque valeur d'octas - couverture nuageuse \u00e0 15h (Cloud3pm)\");","5bd11600":"print(\"Value counts :\")\nprint(df.RainToday.value_counts())\nprint(\"Nombre de valeurs uniques =\", df.RainToday.value_counts().shape[0])","ef490b26":"df.RainToday.value_counts(normalize=True)","c140b5d8":"total = float(len(df))\nax = sns.countplot(x=\"RainToday\", data=df) \nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}'.format(height\/total),\n            ha=\"center\")","389dda0b":"print(\"Value counts :\")\nprint(df.RainTomorrow.value_counts())\nprint(\"Nombre de valeurs uniques =\", df.RainTomorrow.value_counts().shape[0])","6d836398":"df.RainTomorrow.value_counts(normalize=True)","3618f7d0":"total = float(len(df))\nax = sns.countplot(x=\"RainTomorrow\", data=df) \nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}'.format(height\/total),\n            ha=\"center\")","92437a69":"print(\"Temp\u00e9ratures - Histogrammes & kde\")\nplt.figure(figsize=(10,10))\nplt.subplot(221)\nsns.histplot(df.MaxTemp, kde=True)\n\nplt.subplot(222)\nsns.histplot(df.MinTemp, kde=True)\n\nplt.subplot(223)\nsns.histplot(df.Temp9am, kde=True)\n\nplt.subplot(224)\nsns.histplot(df.Temp3pm, kde=True);","64bb875f":"print(\"Temp\u00e9ratures - Boites \u00e0 moustaches\")\nplt.figure(figsize=(10,10))\nplt.subplot(221)\ndf.boxplot(column='MaxTemp')\n\nplt.subplot(222)\ndf.boxplot(column='MinTemp')\n\nplt.subplot(223)\ndf.boxplot(column='Temp9am')\n\nplt.subplot(224)\ndf.boxplot(column='Temp3pm');","4a70a73c":"print(\"Vitesse du vent - Histogrammes & kde\")\nplt.figure(figsize=(20,5))\nplt.subplot(131)\nsns.histplot(df.WindGustSpeed, kde=True)\n\nplt.subplot(132)\nsns.histplot(df.WindSpeed9am, kde=True)\n\nplt.subplot(133)\nsns.histplot(df.WindSpeed3pm, kde=True);","e7f90ed5":"print(\"Vitesse du vent - Boites \u00e0 moustaches\")\nplt.figure(figsize=(20,5))\nplt.subplot(131)\ndf.boxplot(column='WindGustSpeed')\n\nplt.subplot(132)\ndf.boxplot(column='WindSpeed9am')\n\nplt.subplot(133)\ndf.boxplot(column='WindSpeed3pm');","171680a2":"print(\"Histogrammes & kde\")\nplt.figure(figsize=(20,5))\nplt.subplot(131)\nsns.histplot(df.Rainfall, kde=True, bins=50)\n\nplt.subplot(132)\nsns.histplot(df.Evaporation, kde=True)\n\nplt.subplot(133)\nsns.histplot(df.Sunshine, kde=True);","1c4ce760":"print(\"Boites \u00e0 moustaches\")\nplt.figure(figsize=(20,5))\nplt.subplot(131)\ndf.boxplot(column='Rainfall')\n\nplt.subplot(132)\ndf.boxplot(column='Evaporation')\n\nplt.subplot(133)\ndf.boxplot(column='Sunshine');","f9116a60":"print(\"Humidit\u00e9 - Histogrammes & kde\")\nplt.figure(figsize=(20,5))\nplt.subplot(121)\nsns.histplot(df.Humidity9am, kde=True, bins=50)\n\nplt.subplot(122)\nsns.histplot(df.Humidity3pm, kde=True);","8501aec6":"print(\"Humidit\u00e9 - Boites \u00e0 moustaches\")\nplt.figure(figsize=(20,5))\nplt.subplot(121)\ndf.boxplot(column='Humidity9am')\n\nplt.subplot(122)\ndf.boxplot(column='Humidity3pm');","8d435230":"print(\"Pression atmosph\u00e9rique - histogrammes & kde\")\nplt.figure(figsize=(20,5))\nplt.subplot(121)\nsns.histplot(df.Pressure9am, kde=True, bins=50)\n\nplt.subplot(122)\nsns.histplot(df.Pressure3pm, kde=True);","ae66798d":"print(\"Pression atmosph\u00e9rique - Boites \u00e0 moustaches\")\nplt.figure(figsize=(20,5))\nplt.subplot(121)\ndf.boxplot(column='Pressure9am')\n\nplt.subplot(122)\ndf.boxplot(column='Pressure3pm');","66b83947":"print(\"Couverture nuageuse - histogrammes & kde\")\nplt.figure(figsize=(20,5))\nplt.subplot(121)\nsns.histplot(df.Cloud9am, kde=True, bins=50)\n\nplt.subplot(122)\nsns.histplot(df.Cloud3pm, kde=True);","1e250b6f":"print(\"Couverture nuageuse - Boites \u00e0 moustaches\")\nplt.figure(figsize=(20,5))\nplt.subplot(121)\ndf.boxplot(column='Cloud9am')\n\nplt.subplot(122)\ndf.boxplot(column='Cloud3pm');","32ce2c85":"df2 = df.replace([\"Yes\", \"No\"], [1, 0])","19b7baa1":"fig, ax = plt.subplots(figsize=(12,12))\ncor = df2.corr()\nsns.heatmap(cor, ax=ax, annot=True, cmap='coolwarm')\nplt.title(\"Carte thermique du jeu de donn\u00e9es - coefficients de corr\u00e9lation de Pearson\");","db771012":"df_HPT = df[['MinTemp', 'MaxTemp', 'Humidity9am', 'Humidity3pm', 'Pressure9am', 'Pressure3pm', 'Temp9am', 'Temp3pm', 'Rainfall']]\ndf_HPT.head()","e5b18390":"sns.pairplot(df_HPT, diag_kind='kde');","d9cb0589":"sns.catplot(data=df, y=\"MinTemp\", x=\"RainTomorrow\", kind='boxen')\nsns.catplot(data=df, y=\"MaxTemp\", x=\"RainTomorrow\", kind='boxen')\nsns.catplot(data=df, y=\"Temp9am\", x=\"RainTomorrow\", kind='boxen')\nsns.catplot(data=df, y=\"Temp3pm\", x=\"RainTomorrow\", kind='boxen')\nsns.catplot(data=df, y=\"Sunshine\", x=\"RainTomorrow\", kind='boxen')\nsns.catplot(data=df, y=\"Rainfall\", x=\"RainTomorrow\", kind='boxen')\nsns.catplot(data=df, y=\"Evaporation\", x=\"RainTomorrow\", kind='boxen')\nsns.catplot(data=df, y=\"WindGustSpeed\", x=\"RainTomorrow\", kind='boxen')\nsns.catplot(data=df, y=\"WindSpeed9am\", x=\"RainTomorrow\", kind='boxen')\nsns.catplot(data=df, y=\"WindSpeed3pm\", x=\"RainTomorrow\", kind='boxen')\nsns.catplot(data=df, y=\"Humidity9am\", x=\"RainTomorrow\", kind='boxen')\nsns.catplot(data=df, y=\"Humidity3pm\", x=\"RainTomorrow\", kind='boxen')\nsns.catplot(data=df, y=\"Pressure9am\", x=\"RainTomorrow\", kind='boxen')\nsns.catplot(data=df, y=\"Pressure3pm\", x=\"RainTomorrow\", kind='boxen')\nsns.catplot(data=df, y=\"Cloud9am\", x=\"RainTomorrow\", kind='boxen')\nsns.catplot(data=df, y=\"Cloud3pm\", x=\"RainTomorrow\", kind='boxen');","6ba490d6":"fig = plt.figure(figsize=(20,10))\n\nax1 = fig.add_subplot(241)\nax1.set_title(\"Temp\u00e9rature Minimale\")\ng = sns.violinplot(ax=ax1,data=df,x=\"RainTomorrow\", y=\"MinTemp\",palette=\"Set2\")\n\nax2 = fig.add_subplot(242)\nax2.set_title(\"Temp\u00e9rature Maximale\")\ng = sns.violinplot(ax=ax2,data=df,x=\"RainTomorrow\", y=\"MaxTemp\",palette=\"Set2\")\n\nax3 = fig.add_subplot(243)\nax3.set_title(\"Temp\u00e9rature 9am\")\ng = sns.violinplot(ax=ax3,data=df,x=\"RainTomorrow\", y=\"Temp9am\",palette=\"Set2\")\n\nax4 = fig.add_subplot(244)\nax4.set_title(\"Temp\u00e9rature 3pm\")\ng = sns.violinplot(ax=ax4,data=df,x=\"RainTomorrow\", y=\"Temp9am\",palette=\"Set2\")\n\n\nax5 = fig.add_subplot(245)\nax5.set_title(\"Sunshine\")\ng = sns.violinplot(ax=ax5,data=df,x=\"RainTomorrow\", y=\"Sunshine\",palette=\"Set2\")\n\nax6 = fig.add_subplot(246)\nax6.set_title(\"Rainfall\")\ng = sns.violinplot(ax=ax6,data=df,x=\"RainTomorrow\", y=\"Rainfall\",palette=\"Set2\")\n\nax7 = fig.add_subplot(247)\nax7.set_title(\"Evaporation\")\ng = sns.violinplot(ax=ax7,data=df,x=\"RainTomorrow\", y=\"Evaporation\",palette=\"Set2\")\n\nax8 = fig.add_subplot(248)\nax8.set_title(\"Humidity9am\")\ng = sns.violinplot(ax=ax8,data=df,x=\"RainTomorrow\", y=\"Humidity9am\",palette=\"Set2\")","8a64b191":"fig = plt.figure(figsize=(20,4))\nax1 = fig.add_subplot(141)\nax1.set_title(\"Humidity3pm\")\ng = sns.violinplot(ax=ax1,data=df,x=\"RainTomorrow\", y=\"Humidity3pm\",palette=\"Set2\")\n\nax2 = fig.add_subplot(142)\nax2.set_title(\"WindGustSpeed\")\ng = sns.violinplot(ax=ax2,data=df,x=\"RainTomorrow\", y=\"WindGustSpeed\",palette=\"Set2\")\n\nax3 = fig.add_subplot(143)\nax3.set_title(\"WindSpeed9am\")\ng = sns.violinplot(ax=ax3,data=df,x=\"RainTomorrow\", y=\"WindSpeed9am\",palette=\"Set2\")\n\nax4 = fig.add_subplot(144)\nax4.set_title(\"WindSpeed3pm\")\ng = sns.violinplot(ax=ax4,data=df,x=\"RainTomorrow\", y=\"WindSpeed3pm\",palette=\"Set2\")","4bdf02ef":"fig = plt.figure(figsize=(20,4))\nax1 = fig.add_subplot(141)\nax1.set_title(\"Pressure9am\")\ng = sns.violinplot(ax=ax1,data=df,x=\"RainTomorrow\", y=\"Pressure9am\",palette=\"Set2\")\n\nax2 = fig.add_subplot(142)\nax2.set_title(\"Pressure3pm\")\ng = sns.violinplot(ax=ax2,data=df,x=\"RainTomorrow\", y=\"Pressure3pm\",palette=\"Set2\")\n\nax3 = fig.add_subplot(143)\nax3.set_title(\"Cloud9am\")\ng = sns.violinplot(ax=ax3,data=df,x=\"RainTomorrow\", y=\"Cloud9am\",palette=\"Set2\")\n\nax4 = fig.add_subplot(144)\nax4.set_title(\"Cloud3pm\")\ng = sns.violinplot(ax=ax4,data=df,x=\"RainTomorrow\", y=\"Cloud3pm\",palette=\"Set2\")","e92b6967":"print(\"99e centile de Rainfall\",df['Rainfall'].quantile(.99))\nprint(\"99e centile de Evaporation\",df['Evaporation'].quantile(.99))\n\ndf['Rainfall_Ecr'] = df[\"Rainfall\"].apply(lambda x: x if x < 37.4 else 37.4 )\ndf['Evaporation_Ecr'] = df[\"Evaporation\"].apply(lambda x: x if x < 18.4 else 18.4 )\n\nfig = plt.figure(figsize=(20,4))\nax1 = fig.add_subplot(121)\nax1.set_title(\"Rainfall_Ecr\")\ng = sns.violinplot(ax=ax1,data=df,x=\"RainTomorrow\", y=\"Rainfall_Ecr\",palette=\"Set2\")\n\nax2 = fig.add_subplot(122)\nax2.set_title(\"Evaporation_Ecr\")\ng = sns.violinplot(ax=ax2,data=df,x=\"RainTomorrow\", y=\"Evaporation_Ecr\",palette=\"Set2\")","041f1ea5":"#Distribution des valeurs de RainTomorrow en fonction de RainToday (% affich\u00e9s en haut des barres)\nplt.figure(figsize=(10,5))\nplt.gcf().subplots_adjust(left = 0.2, bottom = 0.2, right = 0.9, top = 0.9, wspace = 0.5, hspace = 0)\n\nplt.subplot(121)\ntotal = float(len(df.loc[df.RainToday=='No']))\nax = sns.countplot(x=\"RainTomorrow\", data=df.loc[df.RainToday=='No']) \nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}'.format(height\/total),\n            ha=\"center\")\nplt.title('RainToday = No')\n\n    \nplt.subplot(122)\ntotal = float(len(df.loc[df.RainToday=='Yes']))\nax = sns.countplot(x=\"RainTomorrow\", data=df.loc[df.RainToday=='Yes'])\nfor p in ax.patches:\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2.,\n            height + 3,\n            '{:1.2f}'.format(height\/total),\n            ha=\"center\")\nplt.ylim([0,95000])\nplt.title('RainToday = Yes');","460e701e":"#table de contingence\ncontingence = pd.crosstab(df[\"RainToday\"],df[\"RainTomorrow\"])\ncontingence","0c860c6b":"#test du chi2\nfrom scipy.stats import chi2_contingency\n\nchi2 = chi2_contingency(contingence)\nprint(\"Test du chi2 entre RainToday et RainTomorrow :\")\nprint(\"statistique du test chi2 =\",chi2[0],\"\\n\")\nprint(\"p-value du test chi2 =\",chi2[1],\"\\n\")\nprint(\"degr\u00e9 de libert\u00e9 du test chi2 =\",chi2[2],\"\\n\")\n\n#calcul du V de Cramer\ndef V_Cramer (table, N):\n    \"\"\"\n    Calcule le V de Cramer corrig\u00e9 d'un tableau de contingence\n    \n    Param\u00e8tres :\n    table : tableau de contingence\n    N : nombre d'observations\n    \n    Renvoie : la valeur du V de Cramer\n    \"\"\"\n    \n    chi2 = chi2_contingency(table)[0]\n    k = table.shape[0]\n    r = table.shape[1]\n    phi2 = np.max([0 , chi2\/N - (k-1)*(r-1)\/(N-1)])\n    ktil = k - (k-1)**2\/(N-1)\n    rtil = r - (r-1)**2\/(N-1)\n    V = np.sqrt( phi2 \/ np.min([ktil-1 , rtil-1]))\n    return V\n\nprint(\"V de Cramer :\", V_Cramer(contingence,df.shape[0]))","b59a37fe":"df1 = df.groupby('Cloud3pm')['RainToday'].value_counts(normalize=True)\ndf1 = df1.mul(100)\ndf1 = df1.rename('pourcentage').reset_index()\n\ng = sns.catplot(x='Cloud3pm',y='pourcentage',hue='RainToday',kind='bar',data=df1)\ng.ax.set_ylim(0,100)\n\nfor p in g.ax.patches:\n    txt = str(p.get_height().round(2)) + '%'\n    txt_x = p.get_x() \n    txt_y = p.get_height()\n    g.ax.text(txt_x,txt_y,txt)","f20ec6b7":"df1 = df.groupby('Cloud3pm')['RainTomorrow'].value_counts(normalize=True)\ndf1 = df1.mul(100)\ndf1 = df1.rename('pourcentage').reset_index()\n\ng = sns.catplot(x='Cloud3pm',y='pourcentage',hue='RainTomorrow',kind='bar',data=df1)\ng.ax.set_ylim(0,100)\n\nfor p in g.ax.patches:\n    txt = str(p.get_height().round(2)) + '%'\n    txt_x = p.get_x() \n    txt_y = p.get_height()\n    g.ax.text(txt_x,txt_y,txt)","5fa790f0":"climats = pd.read_csv('..\/input\/climatsaus-v2\/climatsAUS_v2.csv', sep=\";\")\nclimats.info()","3635dec3":"df = df.merge(right=climats, on=\"Location\", how=\"outer\")\ndf.info()\ndf.head()","75a0f0a0":"#nombre de valeurs\ndf.groupby(df.Climat).count()","5b773059":"#pourcentages de valeurs manquantes\ndf.groupby(df.Climat).apply(lambda x: 100*round(1 - (x.count() \/ x['Location'].count()), 2))","9f9308c6":"#moyennes\ndf.groupby(df.Climat).mean()","bfb85635":"#m\u00e9dianes\ndf.groupby(df.Climat).median()","5921e8bc":"#\u00e9carts-type\ndf.groupby(df.Climat).std()","e0b9c230":"# Pour simplifier, on regroupe les climats en 4 cat\u00e9gories : chaud_humide, temp\u00e9r\u00e9_froid, sec et m\u00e9diterran\u00e9en. On pourra ainsi faire des visualisations plus facilement.\n\nclimats_type = {'Am':'chaud_humide',\n                'Aw':'chaud_humide',\n                'Cfa':'chaud_humide',\n                'Cfb':'temp\u00e9r\u00e9_froid', \n                'Cfc':'temp\u00e9r\u00e9_froid', \n                'BSh':'sec',\n                'BSk':'sec',\n                'Bsk':'sec', \n                'Bwh':'sec',\n                'Csa':'m\u00e9diterran\u00e9en',\n                'Csb':'m\u00e9diterran\u00e9en'              \n               }\n\nclimatsaus['Clim_type']=climatsaus['Climat_Koppen'].map(climats_type)","7d3cb122":"#pourcentages de valeurs manquantes\ndf.groupby(df.Clim_type).apply(lambda x: 100*round(1 - (x.count() \/ x['Location'].count()), 2))","26e0820b":"#moyennes\ndf.groupby(df.Clim_type).mean()","61b9ba61":"colors = sns.color_palette('pastel')[0:5]\n\n#create pie chart\nplt.pie(x=df.Clim_type.value_counts(), labels = df.Clim_type.value_counts().index, colors = colors, autopct='%.0f%%');\nplt.title(\"Diagramme circulaire de r\u00e9partition des observations par climat\")","51607681":"sns.catplot(data=df, x=\"Mois\", y=\"Rainfall\", hue=\"Clim_type\", kind='bar',  height=8.27)\nplt.title(\"Distribution annuelle des pluies par climat\");","8b5ee863":"sns.relplot(data=df, x=\"Mois\", y=\"Rainfall\", hue=\"Clim_type\", kind='line',  height=8.27)\nplt.title(\"Distribution annuelle des pluies par climat\");","799341f5":"sns.displot(data=df, x=\"RainToday_Num\", col=\"Clim_type\",hue=\"RainTomorrow\",kind=\"kde\")\nsns.displot(data=df, x=\"Rainfall\", col=\"Clim_type\",hue=\"RainTomorrow\",kind=\"kde\")\nsns.displot(data=df, x=\"MinTemp\", col=\"Clim_type\",hue=\"RainTomorrow\",kind=\"kde\")\nsns.displot(data=df, x=\"MaxTemp\", col=\"Clim_type\",hue=\"RainTomorrow\",kind=\"kde\")\nsns.displot(data=df, x=\"Sunshine\", col=\"Clim_type\",hue=\"RainTomorrow\",kind=\"kde\")\nsns.displot(data=df, x=\"Pressure3pm\", col=\"Clim_type\",hue=\"RainTomorrow\",kind=\"kde\")\nsns.displot(data=df, x=\"Pressure9am\", col=\"Clim_type\",hue=\"RainTomorrow\",kind=\"kde\")\nsns.displot(data=df, x=\"Evaporation\", col=\"Clim_type\",hue=\"RainTomorrow\",kind=\"kde\")\nsns.displot(data=df, x=\"WindGustSpeed\", col=\"Clim_type\",hue=\"RainTomorrow\",kind=\"kde\");","477fc739":"sns.catplot(data=df, y=\"Rainfall\", x=\"RainTomorrow\", col=\"Clim_type\", kind='boxen')\nsns.catplot(data=df, y=\"MinTemp\", x=\"RainTomorrow\", col=\"Clim_type\", kind='boxen')\nsns.catplot(data=df, y=\"MaxTemp\", x=\"RainTomorrow\", col=\"Clim_type\", kind='boxen')\nsns.catplot(data=df, y=\"Sunshine\", x=\"RainTomorrow\", col=\"Clim_type\", kind='boxen')\nsns.catplot(data=df, y=\"Pressure3pm\", x=\"RainTomorrow\", col=\"Clim_type\", kind='boxen')\nsns.catplot(data=df, y=\"Pressure9am\", x=\"RainTomorrow\", col=\"Clim_type\", kind='boxen')\nsns.catplot(data=df, y=\"Evaporation\", x=\"RainTomorrow\", col=\"Clim_type\", kind='boxen')\nsns.catplot(data=df, y=\"WindGustSpeed\", x=\"RainTomorrow\", col=\"Clim_type\", kind='boxen')\nsns.catplot(data=df, y=\"Cloud9am\", x=\"RainTomorrow\", col=\"Clim_type\", kind='boxen')\nsns.catplot(data=df, y=\"Cloud3pm\", x=\"RainTomorrow\", col=\"Clim_type\", kind='boxen');","60e53f62":"print(\"Influence des variables atmosph\u00e9riques sur RainTomorrow pour chaque climat\")\n\nsns.catplot(data=df, y=\"Rainfall\", x=\"RainTomorrow\", col=\"Clim_type\", kind='violin', palette='Set1')\nsns.catplot(data=df, y=\"MinTemp\", x=\"RainTomorrow\", col=\"Clim_type\", kind='violin', palette='Set1')\nsns.catplot(data=df, y=\"MaxTemp\", x=\"RainTomorrow\", col=\"Clim_type\", kind='violin', palette='Set1')\nsns.catplot(data=df, y=\"Sunshine\", x=\"RainTomorrow\", col=\"Clim_type\", kind='violin', palette='Set1')\nsns.catplot(data=df, y=\"Pressure3pm\", x=\"RainTomorrow\", col=\"Clim_type\", kind='violin', palette='Set1')\nsns.catplot(data=df, y=\"Pressure9am\", x=\"RainTomorrow\", col=\"Clim_type\", kind='violin', palette='Set1')\nsns.catplot(data=df, y=\"Evaporation\", x=\"RainTomorrow\", col=\"Clim_type\", kind='violin', palette='Set1')\nsns.catplot(data=df, y=\"WindGustSpeed\", x=\"RainTomorrow\", col=\"Clim_type\", kind='violin', palette='Set1')\nsns.catplot(data=df, y=\"Cloud9am\", x=\"RainTomorrow\", col=\"Clim_type\", kind='violin', palette='Set1')\nsns.catplot(data=df, y=\"Cloud3pm\", x=\"RainTomorrow\", col=\"Clim_type\", kind='violin', palette='Set1');","98deb4da":"plt.figure(figsize=(12,5))\n\nplt.subplot(121)\nsns.countplot(x=\"RainTomorrow\", data=df.loc[df.RainToday=='No'], hue='Clim_type') \nplt.title('RainToday = No')\n\n    \nplt.subplot(122)\nsns.countplot(x=\"RainTomorrow\", data=df.loc[df.RainToday=='Yes'], hue='Clim_type')\nplt.ylim([0,37000])\nplt.title('RainToday = Yes');","be751887":"#cr\u00e9ation d'un dictionnaire associant la direction du vent \u00e0 l'angle correspondant (en degr\u00e9s) sur le cercle trigonom\u00e9trique (ie. E=0\u00b0 et rotation dans le sens direct)\nangles = {'E':0, \n          'ENE':22.5, \n          'NE':45, \n          'NNE':67.5, \n          'N':90, \n          'NNW':112.5, \n          'NW':135, \n          'WNW':157.5, \n          'W':180, \n          'WSW':202.5, \n          'SW':225, \n          'SSW':247.5, \n          'S':270, \n          'SSE':292.5, \n          'SE':315, \n          'ESE':337.5}","eb2fde3d":"#ajout des variables indiquant l'angle du vent au DF\ndf['WindGust_Ang']=df['WindGustDir'].map(angles)\ndf['Wind9am_Ang'] = df['WindDir9am'].map(angles)\ndf['Wind3pm_Ang'] = df['WindDir3pm'].map(angles)\ndf.head()","a0b73b07":"#ajout de variables correspondant au cosinos de l'angle (abscisse des coordonn\u00e9es trigo). Un cosinus n\u00e9gatif correspond \u00e0 un vent d'ouest, un cosinus positif \u00e0 un vent d'est.\ndf['WindGust_cos'] = np.cos(np.radians(df['WindGust_Ang']))\ndf['Wind9am_cos'] = np.cos(np.radians(df['Wind9am_Ang']))\ndf['Wind3pm_cos'] = np.cos(np.radians(df['Wind3pm_Ang']))","74c3e257":"#ajout de variables correspondant au sinus de l'angle (ordonn\u00e9e des coordonn\u00e9es trigo). Un sinus n\u00e9gatif correspond \u00e0 un vent de sud, un sinus positif \u00e0 un vent de nord.\ndf['WindGust_sin'] = np.sin(np.radians(df['WindGust_Ang']))\ndf['Wind9am_sin'] = np.sin(np.radians(df['Wind9am_Ang']))\ndf['Wind3pm_sin'] = np.sin(np.radians(df['Wind3pm_Ang']))\ndf.head()","465d8aa6":"print(\"Direction de la rafale la plus forte, coordonn\u00e9es de l'angle - Histogrammes & kde\")\nplt.figure(figsize=(20,5))\nplt.subplot(121)\ndf['WindGust_cos'].value_counts().sort_index().plot(kind='bar')\nplt.title(\"cosinus - WE\")\n\n\nplt.subplot(122)\ndf['WindGust_sin'].value_counts().sort_index().plot(kind='bar')\nplt.title(\"sinus - SN\");","8de92d8c":"print('\\033[1m' + 'Direction du vent en fonction du climat et de la variable RainTomorrow' + '\\033[0m')\n\nfig = plt.figure(figsize=(15,20))\n\nax1 = fig.add_subplot(321)\nax1.set_title(\"Direction W\/E de la rafale la plus forte\")\ng = sns.boxplot(ax=ax1, data=df, y=\"WindGust_cos\", x=\"Clim_type\", hue=\"RainTomorrow\")\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nbox = g.get_position()\ng.set_position([box.x0, box.y0, box.width * 0.85, box.height])\ng.legend(loc='center right', bbox_to_anchor=(1.25, 0.5), ncol=1)\n\nax2 = fig.add_subplot(322)\nax2.set_title(\"Direction S\/N de la rafale la plus forte\")\ng = sns.boxplot(ax=ax2, data=df, y=\"WindGust_sin\", x=\"Clim_type\", hue=\"RainTomorrow\", palette='husl')\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nbox = g.get_position()\ng.set_position([box.x0, box.y0, box.width * 0.85, box.height])\ng.legend(loc='center right', bbox_to_anchor=(1.25, 0.5), ncol=1)\n\nax3 = fig.add_subplot(323)\nax3.set_title(\"Direction W\/E du vent \u00e0 9h\")\ng = sns.boxplot(ax=ax3, data=df, y=\"Wind9am_cos\", x=\"Clim_type\", hue=\"RainTomorrow\")\nbox = g.get_position()\ng.set_position([box.x0, box.y0, box.width * 0.85, box.height])\ng.legend(loc='center right', bbox_to_anchor=(1.25, 0.5), ncol=1)\n\nax4 = fig.add_subplot(324)\nax4.set_title(\"Direction S\/N du vent \u00e0 9h\")\ng = sns.boxplot(ax=ax4, data=df, y=\"Wind9am_sin\", x=\"Clim_type\", hue=\"RainTomorrow\", palette='husl')\nbox = g.get_position()\ng.set_position([box.x0, box.y0, box.width * 0.85, box.height])\ng.legend(loc='center right', bbox_to_anchor=(1.25, 0.5), ncol=1)\n\nax5 = fig.add_subplot(325)\nax5.set_title(\"Direction W\/E du vent \u00e0 15h\")\ng = sns.boxplot(ax=ax5, data=df, y=\"Wind3pm_cos\", x=\"Clim_type\", hue=\"RainTomorrow\")\nbox = g.get_position()\ng.set_position([box.x0, box.y0, box.width * 0.85, box.height])\ng.legend(loc='center right', bbox_to_anchor=(1.25, 0.5), ncol=1) \n\nax6 = fig.add_subplot(326)\nax6.set_title(\"Direction S\/N du vent \u00e0 15h\")\ng = sns.boxplot(ax=ax6, data=df, y=\"Wind3pm_sin\", x=\"Clim_type\", hue=\"RainTomorrow\", palette='husl')\nbox = g.get_position()\ng.set_position([box.x0, box.y0, box.width * 0.85, box.height])\ng.legend(loc='center right', bbox_to_anchor=(1.25, 0.5), ncol=1);","7a3ef5d5":"sns.catplot(data=df, y=\"WindGust_cos\", x=\"RainTomorrow\", col=\"Clim_type\", kind='violin')\nsns.catplot(data=df, y=\"WindGust_sin\", x=\"RainTomorrow\", col=\"Clim_type\", kind='violin', palette='husl');\n\nsns.catplot(data=df, y=\"Wind9am_cos\", x=\"RainTomorrow\", col=\"Clim_type\", kind='violin')\nsns.catplot(data=df, y=\"Wind9am_sin\", x=\"RainTomorrow\", col=\"Clim_type\", kind='violin', palette='husl');\n\nsns.catplot(data=df, y=\"Wind3pm_cos\", x=\"RainTomorrow\", col=\"Clim_type\", kind='violin')\nsns.catplot(data=df, y=\"Wind3pm_sin\", x=\"RainTomorrow\", col=\"Clim_type\", kind='violin', palette='husl');","e43421b8":"sns.relplot(data=df[df.Clim_type == 'med'], x=\"Mois\", y=\"WindGust_cos\", hue=\"RainTomorrow\", kind='line',  height=8.27)\nplt.title(\"Distribution annuelle de la direction des vents W\/E en climat m\u00e9diterran\u00e9en en fonction de RainTomorrow\");","cd52ef21":"sns.relplot(data=df[df.Clim_type == 'med'], x=\"Mois\", y=\"WindGust_sin\", hue=\"RainTomorrow\", kind='line',  height=8.27)\nplt.title(\"Distribution annuelle de la direction des vents S\/N en climat m\u00e9diterran\u00e9en en fonction de RainTomorrow\");","36cd053a":"##### Temp\u00e9ratures","4d6a406c":"##### Boxenplots des variables quantitatives en fonction de la valeur de la cible","351a57f7":"# Quelques stats par climat","718900b7":"Jours de pluie minoritaires (22 %).","6af841b2":"Les variables d\u00e9crivant la couverture nuageuse, l'ensoleillement et l'\u00e9vaporation poss\u00e8dent une proportion tr\u00e8s \u00e9lev\u00e9e de valeurs manquantes (>38 %).\n\nComment g\u00e9rer les valeurs manquantes du dataset ? L'absence de valeurs pour une vairable est-elle ind\u00e9pendante des valeurs prises par les autres variables explicatives (MCAR) ?\n--> imputation par moyenne, m\u00e9diane,... ? ","7cac69cc":"## Vents et climats","160c73c8":"##### Pr\u00e9cipitations, \u00e9vaporation, ensoleillement","a3873850":"R\u00e9partition \u00e9quilibr\u00e9e des observations.","aa7b949c":"##### Couverture nuageuse (variable discr\u00e8te)","2bc29b6b":"# Influence de RainToday sur RainRomorrow par climat","0cfe361d":"##### Vitesse du vent","91e001e1":"Mesure d'association - test du chi2 :","952eef7c":"##### Pluie demain ? - RainTomorrow","e6581636":"R\u00e9partition \u00e9quilibr\u00e9e des observations","74c7776c":"##### Pluie aujourd'hui ? - RainToday","9be5dcf1":"* Pas de corr\u00e9lation forte entre la target et les features\n\n* Corr\u00e9lations positives \u00e9lev\u00e9es >60% :\n    - entre les variables correspondant \u00e0 une m\u00eame grandeur mesur\u00e9e (temp\u00e9ratures, vitesse du vent...) \n\n* Corr\u00e9lations n\u00e9gatives \u00e9lev\u00e9es >60% :\n    - entre l'ensoleillement et la couverture nuageuse (9h et 15 h)\n    - entre l'ensoleillement et l'humidit\u00e9 (15h)","7a9406e9":"## Importation des packages et du jeu de donn\u00e9es","5a2ac97f":"Le jeu de donn\u00e9es poss\u00e8dent 145 460 entr\u00e9es et 23 colonnes dont :\n- La date de l'observation.\n- La ville dans laquelle se situe la station m\u00e9t\u00e9o.\n- 20 variables d\u00e9crivant les conditions atmosph\u00e9riques du jour de l'observation.*\n- la variable cible RainTomorrow dont la valeur (Yes ou No) indique s'il a plu le lendemain de l'observation.\n\n*Le jeu de donn\u00e9es contient un m\u00e9lange de variables explicatives cat\u00e9gorielles (type object) et de variables explicatives num\u00e9riques (type float64) :\n- 14 variables continues : MinTemp, MaxTemp, Rainfall, Evaporation, Sunshine, WindGustSpeed, WindSpeed9am, WindSpeed3pm, Humidity9am, Humidity3pm, Pressure9am, Pressure3pm, Temp9am, Temp3pm\n- 2 variables discr\u00e8tes (Nombre d'octas, de 0 \u00e0 9) : Cloud9am, Cloud3pm\n- 4 variables cat\u00e9gorielles non-num\u00e9riques : WinGustDir, WindDir3am, WindDir3pm, RainToday.\n\nLes valeurs de la variable RainToday (Yes, No) sont d\u00e9finies par la variable Rainfall (Yes si pr\u00e9cipitations > 1mm)\n\nPlusieurs variables poss\u00e8dent de nombreuses valeurs manquantes qu'il faudra g\u00e9rer.","253895dc":"#####  Pression atmosph\u00e9rique","c82e669a":"### Visualisation des valeurs manquantes","36b6dd2f":"##### Humidit\u00e9 de l'air","564068d2":"Rainfall et Evaporation : Ces variables comportent beaucoup de valeurs extr\u00eames \u00e9lev\u00e9es. ","78d7b1b0":"# Ajout d'une variable climat","447bf6b0":"R\u00e9partition \u00e9quilibr\u00e9e des observations - direction Nord sensiblement plus fr\u00e9quente","7171c6c3":"### Analyse univari\u00e9e des variables cat\u00e9gorielles et discr\u00e8tes","313916df":"# Influence pour la pr\u00e9vision des pluies par climat","286f3081":"Le jeu de donn\u00e9es comporte 3436 journ\u00e9es d'observations m\u00e9t\u00e9orologiques (entre d\u00e9cembre 2008 et juin 2017) r\u00e9alis\u00e9es par 49 stations m\u00e9t\u00e9o (Location).","d1edc6da":"### Analyse univari\u00e9e des variables quantitatives","573b6b05":"La variable cible poss\u00e8de 3267 valeurs manquantes -> suppression des entr\u00e9es concern\u00e9es ?","deb21753":"##### Villes - Location","e02ac6d8":"Distributions normales avec valeurs extr\u00eames.","f14b880c":"### Analyse multivari\u00e9e","21e530e7":"##### Direction de la rafale la plus forte - WindGustDir\nThe direction of the strongest wind gust in the 24 hours to midnight","e46e8fc8":"M\u00eame r\u00e9partition que Cloud9am.","02cb5069":"* pas de pluie aujourd'hui -> pas de pluie demain dans 84% des cas\n* pluie aujourd'hui -> pluie demain dans 46% des cas","b171fa17":"##### Couverture nuageuse \u00e0 15h - Cloud3pm","361fa361":"Ces variables comportent beaucoup de valeurs extr\u00eames \u00e9lev\u00e9es. ","dcebd74c":"Jours de pluie minoritaires (22 %).","e757ac35":"##### Direction du vent \u00e0 15h - WindDir3pm","5c5aa299":"##### Heatmap","ea90c425":"##### Relations entre couverture nuageuse et pluies","48342e83":"##### Direction du vent \u00e0 9h - WindDir9am","cd6aa01e":"Les stations Nhil, Katherine et Uluru poss\u00e8dent beaucoup moins d'observations que les autres stations. Pour les autres stations, le nombre d'observations est \u00e9quilibr\u00e9.","f6ccc261":"## Premi\u00e8re exploration du jeu de donn\u00e9es","b82dc604":"Les variables ne sont pas ind\u00e9pendantes, association faible.","08acce47":"##### Pairplot entre les variables de temp\u00e9rature, humidit\u00e9 de l'air et pression atmosph\u00e9rique","7b809f1b":"##### RainToday et RainTomorrow","b220fc25":"Humidit\u00e9 \u00e0 9h : pr\u00e9sence de valeurs extr\u00e8mes faibles.","4bd21e44":"Pr\u00e9sence de valeurs extr\u00eames dans les deux cas.","eb64b50a":"##### Couverture nuageuse \u00e0 9h - Cloud9am","b1647b9f":"Observations : Le climat m\u00e9diterran\u00e9en se d\u00e9marque des autres concernant la distribution de la direction W-E des vents\n\nInterpr\u00e9tation possible :\n\n**- med (cos < 0 si RainTomorrow): le climat m\u00e9diterran\u00e9en est marqu\u00e9 par une saison s\u00e8che en \u00e9t\u00e9 et une saison humide avec de fortes pluies en hiver. Ces r\u00e9gions sont situ\u00e9es principalement au sud-ouest et au sud de l'Australie. Les pluies sont apport\u00e9es par un front nuageux venant de l'ouest, surtout en hiver, en raison de la migration vers le nord de la cr\u00eate subtropicale.**\n\n***The subtropical ridge is a belt of high pressure systems that circles the southern hemisphere midlatitudes\u2014the region of the globe between about 23\u00b0S and 66\u00b0S. It is a dominant influence on the climate of Australia. The belt of high pressure is associated with blue skies for the parts of the country that sit beneath it. During our summer it tends to sit over southern Australia, bringing generally dry weather. But in the winter it usually migrates north, allowing cold fronts and low pressure systems to move up from the Southern Ocean and bring rainfall to southern Australia*.**","ab4dde58":"R\u00e9partition bimodale des valeurs :\n* Couverture nuageuse = 1 octa (ciel presque enti\u00e8rement d\u00e9gag\u00e9) pour 18% des observations.\n* Couverture nuageuse = 7 octas (ciel presque enti\u00e8rement couvert) pour 22% des observations.\nLes autres valeurs sont moins fr\u00e9quentes.\n\nLa valeur 9 octas (ciel obscurci avec obstruction de la visibilit\u00e9) est extr\u00e8mement rare (seulement 2 observations).","3042bcf6":"# Num\u00e9risation de la direction des vents","fb3a8b0c":"# 1e Exploration et visualisations"}}