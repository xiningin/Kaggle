{"cell_type":{"369b91bb":"code","700882d6":"code","69dfe039":"code","caa6531a":"code","0f19cf7a":"code","14dacf66":"code","883c5afa":"code","65133807":"markdown","5b5814c0":"markdown","903e57fc":"markdown","dcfca911":"markdown","2712ed89":"markdown"},"source":{"369b91bb":"import pandas as pd\nimport warnings\nwarnings.filterwarnings('ignore')\n\ndf = pd.read_csv(\"https:\/\/labfile.oss.aliyuncs.com\/courses\/1321\/mushrooms.csv\")\ndf.tail()","700882d6":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import cross_val_score\nimport joblib\n\nX = pd.get_dummies(df.iloc[:, 1:])  # \u8bfb\u53d6\u7279\u5f81\u5e76\u72ec\u70ed\u7f16\u7801\ny = df['class']  # \u76ee\u6807\u503c\n\nmodel = RandomForestClassifier()  # \u968f\u673a\u68ee\u6797\nprint(cross_val_score(model, X, y, cv=5).mean())  # \u4ea4\u53c9\u9a8c\u8bc1\u7ed3\u679c\n\nmodel.fit(X, y)  # \u8bad\u7ec3\u6a21\u578b\njoblib.dump(model, \"mushrooms.pkl\")  # \u4fdd\u5b58\u6a21\u578b\nprint(\"model saved.\")","69dfe039":"%%writefile predict.py\n# \u5c06\u6b64\u5355\u5143\u683c\u4ee3\u7801\u5199\u5165 predict.py \u6587\u4ef6\u65b9\u4fbf\u540e\u9762\u6267\u884c\nimport joblib\nimport pandas as pd\nfrom flask import Flask, request, jsonify\n\napp = Flask(__name__)\n\n@app.route(\"\/\", methods=[\"POST\"])  # \u8bf7\u6c42\u65b9\u6cd5\u4e3a POST\ndef inference():\n    query_df = pd.DataFrame(request.json)  # \u5c06 JSON \u53d8\u4e3a DataFrame\n    \n    df = pd.read_csv(\"https:\/\/labfile.oss.aliyuncs.com\/courses\/1321\/mushrooms.csv\")  # \u8bfb\u53d6\u6570\u636e\n    X = pd.get_dummies(df.iloc[:, 1:])  # \u8bfb\u53d6\u7279\u5f81\u5e76\u72ec\u70ed\u7f16\u7801\n    query = pd.get_dummies(query_df).reindex(columns=X.columns, fill_value=0)  # \u5c06\u8bf7\u6c42\u6570\u636e DataFrame \u5904\u7406\u6210\u72ec\u70ed\u7f16\u7801\u6837\u5f0f\n    \n    clf = joblib.load('mushrooms.pkl')  # \u52a0\u8f7d\u6a21\u578b\n    prediction = clf.predict(query)  # \u6a21\u578b\u63a8\u7406\n    return jsonify({\"prediction\": list(prediction)})  # \u8fd4\u56de\u63a8\u7406\u7ed3\u679c","caa6531a":"import time\nimport subprocess as sp\n\n# \u542f\u52a8\u5b50\u8fdb\u7a0b\u6267\u884c Flask app\nserver = sp.Popen(\"FLASK_APP=predict.py flask run\", shell=True)\ntime.sleep(5)  # \u7b49\u5f85 5 \u79d2\u4fdd\u8bc1 Flask \u542f\u52a8\u6210\u529f\nserver","0f19cf7a":"import json\n\n# \u4ece\u6d4b\u8bd5\u6570\u636e\u4e2d\u53d6 1 \u6761\u7528\u4e8e\u6d4b\u8bd5\u63a8\u7406\ndf_test = pd.read_csv(\"https:\/\/labfile.oss.aliyuncs.com\/courses\/1321\/mushrooms_test.csv\")\nsample_data = df.sample(1).to_json(orient='records')\nsample_json = json.loads(sample_data)\nsample_json","14dacf66":"import json\nimport requests\n\nrequests.post(url=\"http:\/\/localhost:5000\", json=sample_json).content  # \u5efa\u7acb POST \u8bf7\u6c42\uff0c\u5e76\u53d1\u9001\u6570\u636e\u8bf7\u6c42","883c5afa":"server.terminate()  # \u7ed3\u675f\u5b50\u8fdb\u7a0b\uff0c\u5173\u95ed\u7aef\u53e3\u5360\u7528","65133807":"## \u8611\u83c7\u5206\u7c7b\u6a21\u578b\u90e8\u7f72\u548c\u63a8\u7406\u53c2\u8003\u7b54\u6848","5b5814c0":"### \u6a21\u578b\u8bad\u7ec3\u548c\u4fdd\u5b58","903e57fc":"### \u6784\u5efa Flask Web","dcfca911":"### Notebook \u4e2d\u5fc5\u987b\u4ee5\u5b50\u8fdb\u7a0b\u624d\u80fd\u6b63\u5e38\u542f\u52a8 Flask","2712ed89":"### \u52a0\u8f7d\u6570\u636e\u96c6"}}