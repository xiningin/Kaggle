{"cell_type":{"b20de4f2":"code","e07f5aae":"code","432ba4e1":"code","e973813f":"code","b588fd12":"code","645ceda5":"code","8397cbdc":"code","8eee835a":"code","69f9c0b1":"code","38e661cc":"code","eec370b5":"code","b1c5cd6f":"code","bd4dfbe9":"code","25c0d728":"code","ef303adc":"code","acc0355e":"markdown","982cb7b4":"markdown","fdba64d8":"markdown","2a1a6100":"markdown","6f3ccbce":"markdown","b0e0e2cb":"markdown","101066b3":"markdown","f201dbe1":"markdown","5546dab6":"markdown","ef021db6":"markdown","8cffd1d3":"markdown","a1005621":"markdown","1e8c637b":"markdown","b64bef18":"markdown","7a1ac4d6":"markdown","2029e2de":"markdown","b174bd5c":"markdown","4758f556":"markdown"},"source":{"b20de4f2":"import numpy as np \nimport pandas as pd\nimport seaborn as sns\n\nimport matplotlib.pyplot as plt\nimport plotly.figure_factory as ff\nimport plotly.express as px\n\n%matplotlib inline","e07f5aae":"DF1 = pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/train.csv')\n\nDF2 = pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/test.csv')\n\nSAM = pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/sample_submission.csv')","432ba4e1":"y = DF1.loss\n\ndisplay(y, y.min(), y.max())","e973813f":"y.value_counts().plot(figsize=(16, 8), kind='bar')","b588fd12":"hist_data = [ y ]  \n\ngroup_labels = ['y']\n    \nfig = ff.create_distplot(hist_data, group_labels, bin_size=.2, show_hist=False, show_rug=False) \n\nfig.show()","645ceda5":"path0 = '..\/input\/2-tps8-smart-ensembling\/submission2.csv' \n\nsub_received = pd.read_csv(path0)","8397cbdc":"yp = sub_received.loss\n\ndisplay(yp, yp.min(), yp.max())","8eee835a":"int_yp = yp.copy()\n\nfor i in range(len(yp)):\n    int_yp[i] = np.int(yp[i])\n    \ndisplay(int_yp) ","69f9c0b1":"int_yp.value_counts().plot(figsize=(8, 4), kind='bar')","38e661cc":"hist_data = [ yp ]  \n\ngroup_labels = ['yp: Result Received']\n    \nfig = ff.create_distplot(hist_data, group_labels, bin_size=.2, show_hist=False, show_rug=False) \n\nfig.show()","eec370b5":"hist_data = [y, yp, int_yp] \ngroup_labels = ['y', 'yp: Result Received', 'int_yp: Integer Received']\n    \nfig = ff.create_distplot(hist_data, group_labels, bin_size=.2, show_hist=False, show_rug=False)\nfig.show() ","b1c5cd6f":"guide = np.mean(y)\n# np.sum(y) \/ len(y)\ndisplay(guide)","bd4dfbe9":"def coordinate(main, guide, coeff1, coeff2, R):   \n    \n    sub  = main.copy() \n    subv = sub.values    \n    suba = subv[:, 1]\n    \n    coor  = main.copy()    \n    coorv = coor.values\n    guide = guide - R\n    \n    for i in range (len(main)):\n        \n        if (suba[i] <= guide):\n            per = (suba[i] * coeff1) + (guide * (1.0 - coeff1))\n            coorv[i, 1] = per\n            \n        if (suba[i] > guide):\n            per = (suba[i] * coeff2) + (guide * (1.0 - coeff2)) \n            coorv[i, 1] = per        \n        \n    coor.iloc[:, 1] = coorv[:, 1] \n    \n    ###############################   \n    X = suba\n    Y = coor.iloc[:, 1]\n    g = guide   \n    \n    plt.style.use('seaborn-whitegrid') \n    plt.figure(figsize=(9, 9), facecolor='lightgray')\n    plt.title(f'\\nC O O R D I N A T E\\n')   \n            \n    plt.scatter(X, X, s=2.0, label='Main(X=Y)')\n    plt.scatter(X, Y, s=2.0, label='Coordinated-1')\n    plt.scatter(g, g, s=100, label='Guide') \n    \n    plt.legend(fontsize=12, loc=2)\n    #plt.savefig('Coordinate_1.png')\n    plt.show()     \n    ###############################   \n    coor.iloc[:, 1] = coor.iloc[:, 1].astype(float)\n    hist_data = [suba, coor.iloc[:, 1]] \n    group_labels = ['Main', 'Coordinated-1']\n    \n    fig = ff.create_distplot(hist_data, group_labels, bin_size=.2, show_hist=False, show_rug=False)\n    fig.show()   \n    ###############################       \n    print()\n    print(':::::::::::::::: Main Values ::::::::::::::::')\n    print(f'Min:{suba.min()}   Max:{suba.max()}\\n')\n    print(':::::::::::: Coordinated Values :::::::::::::')\n    print(f'Min:{coor.iloc[: ,1].min()}   Max:{coor.iloc[: ,1].max()}\\n')     \n    ###############################    \n    \n    return coor   ","25c0d728":"sub = coordinate(sub_received, guide, 1.16, 1.10 , 0.50)","ef303adc":"sub.to_csv(\"submission.csv\",index=False)\n!ls","acc0355e":"### This notebook is the continuation of our third notebook. So be sure to take a look at the previous notebook.\n\n### [[3] TPS Aug 21 - Results & RMSE Evaluation ](https:\/\/www.kaggle.com\/somayyehgholami\/3-tps-aug-21-results-rmse-evaluation\/edit\/run\/72760656)\n\n### In this notebook, we decide to improve the results of our second notebook. Of course, you can use any other notebook and replace the results with \"Result Received\" of this notebook. You may just have to change some coefficients.\n\n\n### [[2] TPS8 - Smart Ensembling](https:\/\/www.kaggle.com\/somayyehgholami\/2-tps8-smart-ensembling)\n\n\n### Our goal is to increase the dispersion of the output values. Because they are too close just to optimize \"RMSE\", but we are sure that this low scatter value is not correct. Of course, as we said in the previous notebook, unfortunately, even the order and sort of results are not very accurate. That is, if we increase the distances only based on the current sort, we get the opposite result and our notebook score gets worse. You can try it yourself.\n\n### So improving the score is probably a small amount, and our methods should be based on the \"RMSE\" equation. We introduced a basic method in the previous notebook. That method may not be as good as the public score in the private score, because improvement does not happen for all points. But the results of this notebook are better. Of course, we will probably share other methods later.\n\n### Our idea is to \"Snap to Curve\" based on a \"Guide Point\". The best \"Guide Point\" is determined based on the evaluation equation \"RMSE\". The value \"np.mean (yy)\" is appropriate here, but we do not know what that number is. So first we consider \"np.mean (y)\" and then we modify its value with a number \"R\".\n\n### Obviously, the values of the coefficients \"coeff1\" and \"coeff2\" must be greater than one. Because we want to do \"Snap to Curve\". That is, we want to replace the percentage of a value (point on the curve) with the same percentage of \"Guide_Point\". But coefficients smaller than one are usually used for averaging.\n\n### By sharing these notebooks that contain our own initiatives; We hope these notebooks will be used more. You can easily replace your \"sub_received\" notebook. You can even change the coefficients and the value of \"R\" to get better results.\n\n## Good Luck.\n","982cb7b4":"<div>    \n    <h1 align=\"center\">Guide Point & Coordinate<\/h1>\n    <h1 align=\"center\">.:::::::::::::::: Snap to Curve ::::::::::::::::.<\/h1>\n    <h1 align=\"center\">Tabular Playground Series - Aug 2021<\/h1> \n    <h4 align=\"center\">By: Somayyeh Gholami & Mehran Kazeminia<\/h4>\n<\/div>","fdba64d8":"<div class=\"alert alert-success\">  \n<\/div>","2a1a6100":"## Result Received\n\n## [[2] TPS8 - Smart Ensembling](https:\/\/www.kaggle.com\/somayyehgholami\/2-tps8-smart-ensembling)\n","6f3ccbce":"<div class=\"alert alert-success\">\n    <h1 align=\"center\">If you find this work useful, please don't forget upvoting :)<\/h1>\n<\/div>","b0e0e2cb":"<div class=\"alert alert-success\">  \n<\/div>","101066b3":"<div class=\"alert alert-success\">\n    <h1 align=\"center\">Guide Point & Coordinate<\/h1>\n<\/div>","f201dbe1":"<div class=\"alert alert-success\">  \n<\/div>","5546dab6":"## Data Set of Challenge","ef021db6":"## Guide Point","8cffd1d3":"## Submission","a1005621":"## Coordinate\n\n> #### [ main ] : Result Received.\n\n> #### [ guide ] : Guide Point.\n\n> #### [ coeff1 ] : The coefficient for any value is smaller than the Guide_Point.\n\n> #### [ coeff2 ] : The coefficient for any value is greater than the Guide_Point.\n\n> #### [ R ] : Value modification for Guide_Point.","1e8c637b":"#### Submissions are scored on the root mean squared error.\n\n#### For this reason, scattering in all results is far from reality.","b64bef18":"## Comparison","7a1ac4d6":"<div class=\"alert alert-success\">  \n<\/div>","2029e2de":"<div class=\"alert alert-success\">  \n<\/div>","b174bd5c":"<div class=\"alert alert-success\">  \n<\/div>","4758f556":"<div class=\"alert alert-success\">  \n<\/div>"}}