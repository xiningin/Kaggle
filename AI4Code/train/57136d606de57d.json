{"cell_type":{"35a6250d":"code","7efe813d":"code","a430296d":"code","0d1636db":"code","56835b34":"code","4e8efe0a":"code","22a1d315":"code","f8b401a8":"code","c37a9f85":"code","3a723b9b":"code","eff684fa":"code","f8257724":"code","c9c0103e":"code","0a664f25":"code","6fcbda0d":"code","3e04eb6a":"code","0cf34c2d":"code","4062592a":"code","2d5ad64c":"code","be4eb3de":"code","6162fbfd":"code","f57a8164":"code","7d0ea3d7":"code","4a4a166d":"code","300e6a90":"code","a6d48f4e":"markdown","1fc20ef7":"markdown","f366a72a":"markdown","276c4a84":"markdown","6774e520":"markdown","0ecf80ae":"markdown","91ae14af":"markdown","8711ed7a":"markdown","02288239":"markdown","abf3c4af":"markdown","0034e751":"markdown","edb61c4e":"markdown","5102d5ba":"markdown","e578c267":"markdown","21e9e1c9":"markdown","b0992c30":"markdown","f13a2cb5":"markdown","742a8598":"markdown","07589e4e":"markdown"},"source":{"35a6250d":"import warnings\nimport itertools\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport pandas as pd\nimport statsmodels.api as sm\nimport matplotlib\n\nfrom sklearn.metrics import mean_squared_error\nfrom math import sqrt\n","7efe813d":"# Usei desta forma no Windows 10\n#import os\n#os.chdir('C:\\\\Users\\\\rgosd\\\\Google Drive\\\\000hotlearn\\\\serpro-kaggle\\\\serpro-weather')\n#wseries = pd.read_csv(\"input\/weather-train.csv\", header=0, index_col=0, names=['date', 'temperature'], parse_dates=True, squeeze=True)\n\n# importar e visualizar base de dados\nprefixo_arquivos = '..\/input\/serpro-weather\/'\nwseries = pd.read_csv(prefixo_arquivos + 'weather-train.csv', header=0, index_col=0, names=['date', 'temperature'], parse_dates=True, squeeze=True)","a430296d":"print(wseries.describe())\nprint(str(wseries.size))\nprint(wseries.head())","0d1636db":"wseries[wseries.isnull()]","56835b34":"wseries.index.get_loc('2013-03-01')","4e8efe0a":"wseries = wseries.interpolate()\nwseries.iloc[wseries.index.get_loc('2013-03-01')]","22a1d315":"# definindo valores default de plotagem\nmatplotlib.rcParams['axes.labelsize'] = 14\nmatplotlib.rcParams['xtick.labelsize'] = 12\nmatplotlib.rcParams['ytick.labelsize'] = 12\nmatplotlib.rcParams['text.color'] = 'k'\n\nwarnings.filterwarnings(\"ignore\")\nplt.style.use('fivethirtyeight')","f8b401a8":"wseries.plot(figsize=(15, 4))\nplt.show()","c37a9f85":"from pylab import rcParams\nrcParams['figure.figsize'] = 18, 9\n\ndecomposition = sm.tsa.seasonal_decompose(wseries, model='additive', freq=365)\nfig = decomposition.plot()\nplt.show()","3a723b9b":"wseries.columns = ['temperature']","eff684fa":"wseries.head()","f8257724":"# obs: ocorreram alguns erros na instala\u00e7\u00e3o do fbprophet em windows 10, usei dicas da primeira resposta de https:\/\/stackoverflow.com\/questions\/53178281\/installing-fbprophet-python-on-windows-10","c9c0103e":"from fbprophet import Prophet\nfrom fbprophet.plot import plot_plotly\n","0a664f25":"# lendo novamente o csv para facilitar colocar no formato prophet\ndf = pd.read_csv(prefixo_arquivos + \"weather-train.csv\")\ndf['ds'] = df['date']\ndf['y'] = df['temperature']\ndf.drop(['date','temperature'],axis = 1, inplace = True)\ndf.head()","6fcbda0d":"m = Prophet(yearly_seasonality = True, seasonality_prior_scale=0.1)\nm.fit(df)\n","3e04eb6a":"# usei para previs\u00e3o o tamanho do test set: 378 dias\nfuture = m.make_future_dataframe(periods=378)\nforecast = m.predict(future)\nm.plot(forecast);\nm.plot_components(forecast);","0cf34c2d":"forecast.tail()\n","4062592a":"# usando op\u00e7\u00e3o de plotagem dos changepoints\nfrom fbprophet.plot import add_changepoints_to_plot\nfig = m.plot(forecast)\na = add_changepoints_to_plot(fig.gca(), m, forecast)","2d5ad64c":"# Arbitrado aqui tamanho do conjunto de testes = tamanho a ser enviado (75%)\n\n# tamanho inicial: 1508\n# tamanho do test: 378\n# tamanho do treino = 1508 - 378 = 1130\ntrain_size = 1130\n\ntrain, test = df[0:train_size], df[train_size:]\nprint(train.shape)\nprint(train.head())\nprint(train.tail())\nprint(test.shape)\nprint(test.head())\nprint(test.tail())","be4eb3de":"m = Prophet(yearly_seasonality = True, seasonality_prior_scale=0.04, n_changepoints=4)\nm.fit(train)\nfuture = m.make_future_dataframe(periods=378)\nforecast = m.predict(future)\nfig = m.plot(forecast)\na = add_changepoints_to_plot(fig.gca(), m, forecast)","6162fbfd":"m.plot_components(forecast);","f57a8164":"predictions = list()\ntestset = list()\n# faz a previs\u00e3o\nyhat = forecast['yhat']\n#predi\u00e7\u00f5es: seleciona o conjunto al\u00e9m do treino\npredictions.append(yhat[train_size:])\n#seleciona os valores conhecidos\ntestset.append(test['y'])\nrmse = sqrt(mean_squared_error(testset, predictions))\nprint(rmse)","7d0ea3d7":"# Agora usa o conjunto de treino total para gerar o modelo final\nmfinal = Prophet(yearly_seasonality = True, seasonality_prior_scale=0.04, n_changepoints=2)\nmfinal.fit(df)\nfuture = mfinal.make_future_dataframe(periods=378)\nforecast = mfinal.predict(future)\n","4a4a166d":"fc = forecast[['ds','yhat']]\nfc.columns = ['date', 'temperature']\nfc.set_index('date')\nsubmission_test = fc[1508:]\nprint(submission_test.head())\nsubmission_test.shape\n","300e6a90":"submission_test.to_csv('RG_serpro_weather_01v2_2cp.csv', index=False)","a6d48f4e":"## Avalia\u00e7\u00e3o\/tuning do modelo","1fc20ef7":"## Gera o arquivo a submeter","f366a72a":"## Decomposi\u00e7\u00e3o da s\u00e9rie\n\n### Decomposi\u00e7a\u00f5 da s\u00e9rie em componentes de tend\u00eancia, sazonalidade e valores residuais (ru\u00eddo)\n","276c4a84":"## Alguns links de apoio ao uso do Prophet\n\n\nAlgumas dicas sobre instala\u00e7\u00e3o em Windows 10\nhttps:\/\/stackoverflow.com\/questions\/53178281\/installing-fbprophet-python-on-windows-10\n\nTrying Facebook Prophet for Time Series Model\nhttps:\/\/towardsdatascience.com\/trying-facebook-prophet-for-time-series-model-3170cfd416fa\n\nProphet quick start\nhttps:\/\/facebook.github.io\/prophet\/docs\/quick_start.html\n\nGenerate Quick and Accurate Time Series Forecasts using Facebook\u2019s Prophet (with Python & R codes)\nhttps:\/\/www.analyticsvidhya.com\/blog\/2018\/05\/generate-accurate-forecasts-facebook-prophet-python-r\/\n\nForecasting with Prophet\nhttps:\/\/towardsdatascience.com\/forecasting-with-prophet-d50bbfe95f91\n\nProphet plot explained\nhttps:\/\/www.mikulskibartosz.name\/prophet-plot-explained\/\n\nVisual Parameter Tuning with Facebook Prophet and Python\nhttps:\/\/medium.com\/@Psr1\/visual-parameter-tuning-with-facebook-prophet-and-python-8f50719c7318\n\nDiagnostics https:\/\/facebook.github.io\/prophet\/docs\/diagnostics.html\n\nImplementing Facebook Prophet efficiently\nhttps:\/\/towardsdatascience.com\/implementing-facebook-prophet-efficiently-c241305405a3\n\nVisual Parameter Tuning with Facebook Prophet and Python\nhttps:\/\/medium.com\/@Psr1\/visual-parameter-tuning-with-facebook-prophet-and-python-8f50719c7318\n\nForecasting at Scale (Prophet)\nhttps:\/\/peerj.com\/preprints\/3190.pdf\n\nMaking a Prophet\nhttp:\/\/www.degeneratestate.org\/posts\/2017\/Jul\/24\/making-a-prophet\/\n","6774e520":"# SERPRO - Weather\n## Previs\u00e3o de temperaturas m\u00e9dias com base em dados hist\u00f3ricos\n\nhttps:\/\/www.kaggle.com\/c\/serpro-weather\/data","0ecf80ae":"### Predi\u00e7\u00e3o e plotagem da s\u00e9rie e seus componentes","91ae14af":"## Visualizando a s\u00e9rie de temperaturas","8711ed7a":"### Verificando missing values e interpolando","02288239":"## Prepara a previs\u00e3o final a enviar","abf3c4af":"### Data Description\nOs dados foram divididos em dois grupos:\n\nconjunto de treinamento (weather-train.csv)\nconjunto de testes (weather-test.csv)\nO conjunto de treinamento deve ser usado para construir seus modelos de aprendizado de m\u00e1quina. Para o conjunto de treinamento, fornecemos o resultado (tamb\u00e9m conhecido como a \u201cverdade fundamental\u201d) para cada observa\u00e7\u00e3o (neste caso, a temperatura m\u00e9dia di\u00e1ria - campo temperature). Seu modelo preditivo ser\u00e1 baseado nos atributos ou features (neste caso, somente a data - especialmente m\u00eas e dia).\n\nO conjunto de testes deve ser usado para medir o desempenho do seu modelo em dados desconhecidos. Para o conjunto de testes, n\u00e3o fornecemos a verdade b\u00e1sica para cada observa\u00e7\u00e3o (neste caso, o valor exato da temperatura m\u00e9dia). \u00c9 seu trabalho predizer esses resultados. Para cada observa\u00e7\u00e3o do teste, use o modelo que voc\u00ea treinou para prever a temperatura m\u00e9dia di\u00e1ria.\n\nTamb\u00e9m inclu\u00edmos o arquivo weather-example.csv, um conjunto de previs\u00f5es fict\u00edcio (com resultados aleat\u00f3rios), como um exemplo de como deve ser um arquivo de envio (submiss\u00e3o) a ser automaticamente avaliado. Esse arquivo possui apenas dois campos: date (a data) e temperature (o valor da temperatura em graus Celsius).","0034e751":"#### Coment\u00e1rios sobre o ajuste de par\u00e2metros\nNo gr\u00e1fico de inicial trends foram detectados supostamente 7 changepoists pelo algoritmo. Foram experimentados  alguns valores entre 5 e 1, para tentar minimizar poss\u00edvel overfitting, e valores 4 e 2 resultaram em melhores  RMSE na previs\u00e3o). \n5 4.7861149223251624<br>\n4 4.780148645408221<br>\n3 4.782473450427869<br>\n2 4.780187568936885<br>\n1 4.813429984479389<br>\n\nExperimentados alguns valores de *seasonality_prior_scale* tamb\u00e9m. <br>","edb61c4e":"## Usando  Facebook Prophet\n\n**Prophet** is a procedure for **forecasting time series** data based on an additive model where **non-linear trends are fit with yearly, weekly, and daily seasonality, plus holiday effects**. It **works best** with time series that have **strong seasonal effects and several seasons of historical data**. Prophet is **robust to missing data and shifts in the trend**, and typically **handles outliers** well.\n\nhttps:\/\/facebook.github.io\/prophet\/<br>\n\nhttps:\/\/facebook.github.io\/prophet\/docs\/quick_start.html#python-api","5102d5ba":"### Exame inicial da s\u00e9rie","e578c267":"## Usa a previs\u00e3o e avalia o RMSE","21e9e1c9":"## Pr\u00e9-processamento","b0992c30":"### Descri\u00e7\u00e3o da competi\u00e7\u00e3o\n\nQuem de n\u00f3s n\u00e3o fala um pouco sobre a previs\u00e3o do tempo de vez em quando? Ser\u00e1 que amanh\u00e3 vai chover e ficar frio de tremer o queixo ou ser\u00e1 vai fazer aquele sol de rachar? Ser\u00e1 que o aquecimento global existe?\n\nNeste desafio, voc\u00ea aplicar\u00e1 ferramentas de aprendizado de m\u00e1quina para prever a temperatura m\u00e9dia de uma determinada cidade baseando-se em dados hist\u00f3ricos coletados ao longo de 5 anos.\n\n### Sobre o conjunto de dados\n\nO conjunto de dados em quest\u00e3o foi produzido a partir da base Historical Hourly Weather Data, a qual consiste de cerca de 5 anos de medi\u00e7\u00f5es hor\u00e1rias de v\u00e1rios atributos clim\u00e1ticos (ex: temperatura, umidade, press\u00e3o do ar) de 30 cidades dos EUA e Canad\u00e1.\n\nA partir dessa rica base de dados, foi feito um recorte selecionando-se apenas a cidade de Detroit (EUA), destacando somente a temperatura, convertendo-a para graus Celsius e mantendo apenas um valor para cada data (correspondendo \u00e0 temperatura m\u00e9dia durante o dia - per\u00edodo das 9h \u00e0s 17h).\n\nAdicionalmente, os valores de temperatura sofreram artificialmente um acr\u00e9scimo gradual de alguns graus Celsius ao longo do per\u00edodo disponibilizado. Com isso simularemos um pequeno aquecimento global (ou seria local?)\u2026\n\nEm resumo, o conjunto de dados disponibilizado cont\u00e9m as temperaturas m\u00e9dias di\u00e1rias (coletadas durante o dia), acrescidas artificialmente de um certo valor, da cidade de Detroit, no per\u00edodo compreendido entre Outubro de 2012 e Novembro de 2017.\n\nO objetivo deste conjunto de dados \u00e9 prever o valor da temperatura m\u00e9dia di\u00e1ria artificialmente aquecida de Detroit no per\u00edodo de 17\/11\/2016 a 29\/11\/2017. Para tal, ser\u00e3o usados os dados anteriores de temperatura fornecidos para o treinamento (de 01\/10\/2012 a 16\/11\/2016).","f13a2cb5":"### Observa\u00e7\u00e3o importante: formato de entrada para o Prophet\n\nThe **input** to Prophet is always a **dataframe with two columns: ds and y**.<br> \nThe ds (datestamp) column should be of a format expected by Pandas, ideally YYYY-MM-DD for a date or YYYY-MM-DD HH:MM:SS for a timestamp. <br>\nThe y column must be numeric, and represents the measurement we wish to forecast.","742a8598":"## Modelagem","07589e4e":"### Visualiza\u00e7\u00e3o dos changepoints da tend\u00eancia inferida"}}