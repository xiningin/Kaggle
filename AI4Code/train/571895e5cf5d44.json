{"cell_type":{"650bebb8":"code","becde5f3":"code","91f017d6":"code","c8764ba9":"code","ca72259d":"code","0902e06b":"code","7ce4247a":"code","8554a162":"code","d725edcf":"code","7b506323":"code","19b84935":"code","33685882":"code","4a9114dc":"code","3534dede":"code","0514826a":"code","0f62ff96":"code","348d1095":"code","01b6f740":"code","2f373317":"code","ab044a99":"code","2908237b":"code","35b84a80":"code","a48de364":"code","5ddc0392":"code","c5ebfae0":"markdown","beec445b":"markdown","bb57be11":"markdown","70c12137":"markdown","51cf1873":"markdown","e85945b0":"markdown","2e021947":"markdown","c152f13d":"markdown","02797362":"markdown","3f65aa79":"markdown","58500a1f":"markdown","caa33303":"markdown","94f44345":"markdown","5a2d9963":"markdown","ce891ef5":"markdown","d869bfd9":"markdown","c656244c":"markdown","01f3feeb":"markdown","16f9123c":"markdown","fa526c6d":"markdown","632d15de":"markdown"},"source":{"650bebb8":"# importing necessary libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport seaborn as sns\n\n# map libraries\nimport cartopy.crs as ccrs\nimport cartopy.feature as cf\nimport folium\n\n\nfrom scipy.stats import zscore\nfrom ipywidgets import interactive, IntSlider, Play\nfrom IPython.display import display\nfrom urllib.request import urlopen\nfrom plotly.offline import init_notebook_mode, iplot\n\nimport warnings\nimport json\n\nwarnings.filterwarnings('ignore')\ninit_notebook_mode(connected=True)","becde5f3":"# preparing the data\ndata = pd.read_csv('..\/input\/gtd\/globalterrorismdb_0718dist.csv', encoding=\"ISO-8859-1\")\n\n# we also take some demographics data to see some population density charachteristics\npopulation = pd.read_csv('..\/input\/world-population-19602018\/population_total_long.csv')\npop_density = pd.read_csv('..\/input\/world-population-19602018\/population_density_long.csv')\n\n# make the data a little bit more tidy\n# we will use 'Country' columns to merge dataframes, so it's useful for them to have same names\npop_density.rename(columns={'Count': 'Density', 'Country Name':'Country'}, inplace=True)\npopulation.rename(columns={'Count':'Population', 'Country Name':'Country'}, inplace=True)\ndata.rename(columns={'iyear':'Year','imonth':'Month','iday':'Day','country_txt':'Country',\n                     'region_txt':'Region','attacktype1_txt':'AttackType','target1':'Target',\n                     'nkill':'Killed','nwound':'Wounded','summary':'Summary','gname':'Group',\n                     'targtype1_txt':'TargetType','weaptype1_txt':'WeaponType','motive':'Motive',\n                     'city':'City', 'latitude':'Latitude','longitude':'Longitude'},\n            inplace=True)\n\n# pop_density and population have other country names, so we wrangle this a little bit\ncountries_old = ['Bahamas, The', 'Bosnia and Herzegovina', 'Brunei Darussalam', 'Congo, Dem. Rep',\n                 'Egypt, Arab Rep.', 'Gambia, The', 'Hong Kong SAR, China', 'Iran, Islamic Rep.', \n                 'Kyrgyz Republic', 'Lao PDR', 'Macao SAR, China', 'Congo, Rep.', 'Russian Federation',\n                 'Syrian Arab Republic', 'West Bank and Gaza', 'Yemen, Rep.', 'Korea, Dem. People\u2019s Rep.',\n                 'Korea, Rep.']\ncountries_new = ['Bahamas', 'Bosnia-Herzegovina', 'Brunei', 'Democratic Republic of the Congo',\n                'Egypt', 'Gambia', 'Hong Kong', 'Iran', 'Kyrgyzstan', 'Laos', 'Macau',\n                'Republic of the Congo', 'Russia','Syria', 'West Bank and Gaza Strip', 'Yemen',\n                'North Korea', 'South Korea']\n\nfor i, country in enumerate(countries_old):\n    population.loc[population['Country'] == country, 'Country'] = countries_new[i]\n    pop_density.loc[pop_density['Country'] == country, 'Country'] = countries_new[i]    \n    \n# our final dataset\nterror = data[['Year','Month','Day','Country','Region','City','Latitude','Longitude','AttackType',\n               'Killed','Wounded','Target','Summary','Group','TargetType','WeaponType','Motive']]\nterror['Casualties'] = terror['Killed'] + terror['Wounded']","91f017d6":"n1 = terror.isnull().sum()  # count missing cells\nn2 = n1 \/ terror.shape[0]   # find relative missing count\n\nmiss_df = pd.concat((n1,n2),axis=1)\nmiss_df.columns = ['Missing', 'Percentage']\nmiss_df = miss_df.sort_values(by='Missing',ascending=False).round(2)\n\ndisplay(miss_df[miss_df['Missing']>0].T)","c8764ba9":"motives_df = data['Motive'].value_counts(normalize=True).to_frame().rename(columns={'Motive':'Ratio'})\nmotives_df['Motive'] = motives_df.index\nmotives_df.reset_index(inplace=True, drop=True)\n\ndisplay(motives_df[['Motive','Ratio']].head())","ca72259d":"print('Country with maximum number of attacks: ', terror['Country'].value_counts().index[0])\nprint('Region with most number of attacks: ', terror['Region'].value_counts().index[0])\nprint('Maximum people killed in an attack are:', terror['Killed'].max(), \n      'that took place in ',terror.loc[terror['Killed'].idxmax()].Country,\n      'in ', terror.loc[terror['Killed'].idxmax()].Year)","0902e06b":"# count the world population for each year\nworld_pop = population.groupby(by='Year', as_index=False).sum().rename(columns={'Count':'Population'})\n\n# create merged df with number of attacks and world population\nby_year = terror.groupby(by='Year', as_index=False)['Country'].count().rename(columns={'Country':'Count'})\nby_year = by_year.merge(world_pop, on='Year')\n\n# create columns for variables of interest\nby_year['Casualties'] = terror.groupby(by='Year').sum().reset_index()['Casualties']\nby_year['RelCount'] = by_year['Count'] \/ by_year['Population'] * 100000\nby_year['RelCasualties'] = by_year['Casualties'] \/ by_year['Population'] * 100000\nby_year['CasPerAttack'] = by_year['Casualties'] \/ by_year['Count']","7ce4247a":"# make edges visible\nplt.rcParams['patch.force_edgecolor'] = True\n\n# create four plots\nf, (ax1, ax2, ax3, ax4) = plt.subplots(4, 1, figsize=(18,20), gridspec_kw={'hspace': 0.3})\n\nsns.countplot('Year', data=terror, color='firebrick', ax=ax1)\nax1.tick_params(axis='x', labelrotation=90)\nax1.set_title('Number Of Terrorist Activities Each Year')\n\nsns.barplot(x='Year', y='Casualties', data=by_year, color='darkorange', ax=ax2)\nax2.tick_params(axis='x', labelrotation=90)\nax2.set_title('Total Casualties from Terrorist Attacks by Year')\n\nsns.barplot(x='Year', y='RelCount',data=by_year, color='salmon', ax=ax3)\nax3.tick_params(axis='x', labelrotation=90)\nax3.set_title('Terrorist Attacks per 100 000 people')\n\nsns.barplot(x='Year', y='RelCasualties',data=by_year, color='wheat', ax=ax4)\nax4.tick_params(axis='x', labelrotation=90)\nax4.set_title('Casualties per 100 000 people')\n\nplt.show()","8554a162":"bins = [0, 10, 100, 200, 400, 800, 1600, 3200, 6400, 12800]\nlabels = ['0-10', '10-100', '100-200', '200-400', '400-800', \n          '800-1600', '1600-3200', '3200-6400', '6400-12800']\n\n# create casualties distribution\ncas_distrib = pd.cut(terror['Casualties'], bins = bins,labels = labels).value_counts()\ncas_distrib = cas_distrib.sort_index().to_frame()\n\n# convert to logarithmic scale\ncas_distrib['LogCasualties'] = np.log1p(cas_distrib['Casualties'])\n\n# create two plots\nf, (ax1, ax2) = plt.subplots(1, 2, figsize=(15,5), gridspec_kw={'width_ratios': [4,1]})\n\nsns.barplot(x='Year', y='CasPerAttack',data=by_year, ec = 'firebrick', color='wheat', ax=ax1)\nax1.set_title('Casualties per one Attack')\nax1.tick_params(axis='x',labelrotation=90)\n\ncas_distrib['LogCasualties'].plot(kind='barh', width=0.8, ec='firebrick', color='wheat', ax=ax2)\nax2.invert_yaxis()\nax2.set_title('Logarithmic Distribution of Attacks by Casualties')\n\nf.tight_layout()\nplt.show()","d725edcf":"plt.subplots(figsize=(18,6))\n\nplt.subplot(121)\nsns.countplot('Region', data=terror, palette='RdYlGn', edgecolor=sns.color_palette('dark',7),\n              order = terror['Region'].value_counts().index)\nplt.xticks(rotation=90)\nplt.title('Number Of Terrorist Activities by Region')\n\nplt.subplot(122)\nsns.barplot(terror['Country'].value_counts().index[:15],\n            terror['Country'].value_counts().values[:15],\n            palette='inferno')\nplt.xticks(rotation=90)\nplt.title('Top Affected Countries')\n\nplt.show()","7b506323":"terror_region = pd.crosstab(terror['Year'], terror['Region'])\nterror_region.plot(color=sns.color_palette('Set2', 12))\nfig=plt.gcf()\nfig.set_size_inches(18,6)\nplt.show()","19b84935":"# create cross table\nby_region = pd.crosstab(terror['Year'], terror['Region'])\nby_region.plot(kind='bar', stacked=True, width=0.8, colormap='tab20c');\nfig = plt.gcf()\nfig.set_size_inches(15,7)\nplt.title(\"Terrorist Activities Distribution by Region\")\nplt.show()","33685882":"plt.rcParams['patch.force_edgecolor'] = False\nby_region = pd.crosstab(terror['Year'], terror['Region'], normalize='index')\nby_region.plot(kind='bar', stacked=True, width=1,colormap='tab20c');\nfig = plt.gcf()\nfig.set_size_inches(15,7)\nplt.title(\"Terrorist Activities Distribution by Region\")\nplt.legend(bbox_to_anchor=(-0.01, -0.2), loc='upper left', ncol=6)\nplt.show()","4a9114dc":"# number of attacks by country and by year\nby_country = terror.groupby(by=['Year','Country'], as_index=False)['Month'].count()\nby_country.rename(columns={'Month':'Count'},inplace=True)\n# casualties by country and by year\ncas_coun_year_df = terror.groupby(by=['Year','Country'])['Casualties'].sum()\n# to one df\nby_country = by_country.merge(cas_coun_year_df, on=['Country','Year'])\n\n# merge with pop_density and with population dataframes\nby_country = pop_density.merge(by_country, on=['Country','Year'])\nby_country = population.merge(by_country, on=['Country','Year'])\n\n# create columns with relative variables:\nby_country['RelCount'] = by_country['Count'] \/ by_country['Population'] * 100000\nby_country['RelCasualties'] = by_country['Casualties'] \/ by_country['Population'] * 100000\n\n# take only last ten years\nten_years_df = by_country[by_country['Year'] >= 2010]\nten_years_df = ten_years_df.groupby(by='Country', as_index=False).agg('mean')\n# get rid of outliers (for plotting)\n# ten_years_df = ten_years_df[(np.abs(zscore(ten_years_df[['Density','Count']])) < 3).all(axis=1)]","3534dede":"f, (ax1, ax2) = plt.subplots(1, 2, figsize=(18,8), gridspec_kw={'wspace':0.5})\n\nsns.countplot('AttackType', data=terror, palette='inferno',\n              order=terror['AttackType'].value_counts().index,\n             ax=ax1)\nax1.set_title('Terrorists` Methods of Attack')\nax1.tick_params(axis='x', labelrotation=90)\n\npd.crosstab(terror.Region, terror.AttackType).plot.barh(stacked=True, width=1, color=sns.color_palette('RdYlGn', 9),\n                                                       ax=ax2)\nax2.set_title('Terrorist Attack Types in Different Regions')\nax2.tick_params(axis='x', labelrotation=90)\n\nplt.show()","0514826a":"by_attack = pd.crosstab(terror['Year'], terror['AttackType'], normalize='index')\nby_attack.plot(kind='bar', stacked=True, width=1, colormap='tab10')\nfig = plt.gcf()\nfig.set_size_inches(18,7)\nplt.title(\"Terrorist Activities Distribution by Attack Type\")\nplt.legend(bbox_to_anchor=(-0.01, -0.2), loc='upper left', ncol=5)\nplt.show()","0f62ff96":"sns.countplot('TargetType', data=terror, palette='tab20c',\n              order=terror['TargetType'].value_counts().index)\nfig = plt.gcf()\nfig.set_size_inches(18,5)\nplt.xticks(rotation=90)\nplt.title('Terrorists` Primary Targets of Attack')\nplt.show()","348d1095":"by_target = pd.crosstab(terror['Year'], terror['TargetType'], normalize='index')\nby_target.plot(kind='bar', stacked=True, width=1, colormap='tab20c')\nfig = plt.gcf()\nfig.set_size_inches(18,7)\nplt.title(\"Terrorist Activities Distribution by Target Type\")\nplt.legend(bbox_to_anchor=(0.01, -0.2), loc='upper left', ncol=5)\nplt.show()","01b6f740":"def map_world(year):\n    year_df = terror[terror['Year']==year]\n    long_100 = list(year_df[year_df['Casualties']>=75]['Longitude'])\n    lat_100 = list(year_df[year_df['Casualties']>=75]['Latitude'])\n    sizes = list(year_df[year_df['Casualties']>=75]['Casualties']\/10)\n\n    long_ = list(year_df[year_df['Casualties']<75]['Longitude'])\n    lat_ = list(year_df[year_df['Casualties']<75]['Latitude'])\n    \n    ax = plt.axes(projection=ccrs.Miller())\n    # without whis line the map would be scaled to the data\n    # ax.set_global()\n    ax.set_ylim([-90,90])\n    ax.set_xlim([-180,180])\n    ax.coastlines()\n    ax.add_feature(cf.LAND, color='green')\n    ax.add_feature(cf.OCEAN, color='lightskyblue')\n    ax.set_title(\"Terrorists` Attacks around the world in {}\".format(year))\n\n    plt.scatter(long_, lat_, color='white', marker='o',\n                s=2, transform=ccrs.Miller())\n\n    plt.scatter(long_100, lat_100, color='salmon', marker='o',\n                s=sizes, ec='firebrick', \n                transform=ccrs.Miller())\n\n    plt.legend(loc='lower left', handles=[mpatches.Patch(color='white', label=\"<75 casualties\"),\n                                          mpatches.Patch(color='firebrick', label=\">75 casualties\")])\n    fig = plt.gcf()\n    fig.set_size_inches((15,15))\n    plt.show()\n    \ninteractive_plot = interactive(map_world, year=IntSlider(value=1970, min=1970, max=2017,continuous_update=False))\ndisplay(interactive_plot)","2f373317":"terror_fol = terror.copy()\nterror_fol.dropna(subset=['Latitude','Longitude'], inplace=True)\nterror_fol.sort_index(ascending=False, inplace=True)\nlocation_fol = terror_fol[['Latitude','Longitude']][:2000]\ncountry_fol = terror_fol['Country'][:2000]\ncity_fol = terror_fol['City'][:2000]\nyear_fol = terror_fol['Year'][:2000]\nmonth_fol = terror_fol['Month'][:2000]\nday_fol = terror_fol['Day'][:2000]\nkilled_fol = terror_fol['Killed'][:2000]\nwound_fol = terror_fol['Wounded'][:2000]\n\ndef color_point(x):\n    if x>=75: color = 'firebrick'\n    elif ((x>0 and x<75)): color = 'navy'\n    else: color = 'green'\n    \n    return color\n\ndef point_size(x):\n    if x>75: size = x\/10\n    else: size = 2\n        \n    return size\n\nmap_fol = folium.Map(location=[30,0], tiles='OpenStreetMap', zoom_start=3,\n                     min_zoom=3)\nfor point in location_fol.index:\n    info = '<b>Country: <\/b>' + str(country_fol[point]) + \\\n           '<br><b>City: <\/b>' + str(city_fol[point]) + \\\n           '<br><b>Date: <\/b>' + str(year_fol[point]) + \\\n                           '-' + str(month_fol[point]) + \\\n                           '-' + str(day_fol[point]) + \\\n           '<br><b>Killed: <\/b>' + str(killed_fol[point]) + \\\n           '<br><b>Wounded: <\/b>' + str(wound_fol[point])\n    iframe = folium.IFrame(html=info, width=200, height=200)\n    folium.CircleMarker(list(location_fol.loc[point].values),\n                       popup = folium.Popup(iframe),\n                       radius = point_size(killed_fol[point]),\n                       color = color_point(killed_fol[point]),\n                       fill = True,\n                       fillColor = 'salmon').add_to(map_fol)\n\nmap_fol","ab044a99":"map_country_df = terror.groupby(by='Country', as_index=False)['Casualties'].sum()\n\ndata = dict(type='choropleth',\n            locations = map_country_df['Country'],\n            locationmode = 'country names', z = map_country_df['Casualties'],\n            text = map_country_df['Country'], colorbar = {'title':'Casualties'},\n            colorscale=[[0, 'aliceblue'],\n                        [0.03, 'dodgerblue'],\n                        [0.06, 'cadetblue'], [0.125, 'khaki'],\n                        [0.25, 'gold'], [0.5, 'darkorange'],\n                        [1, 'firebrick']],    \n            reversescale = False)\n\nlayout = dict(title='WorldCasualties',\n              geo = dict(showframe = True, projection={'type':'miller'}),\n              autosize=False,\n              width=750, height=600)\n\nchoromap = go.Figure(data = [data], layout = layout)\niplot(choromap, validate=False)","2908237b":"data = dict(type='choropleth',\n            locations = ten_years_df['Country'],\n            locationmode = 'country names', z = ten_years_df['RelCount'],\n            text = ten_years_df['Country'], colorbar = {'title':'RelCount'},\n            colorscale=[[0, 'aliceblue'],\n                        [0.003, 'dodgerblue'],\n                        [0.007, 'cadetblue'], [0.02, 'khaki'],\n                        [0.1, 'gold'], [0.5, 'darkorange'],\n                        [1, 'firebrick']],    \n            reversescale = False)\n\nlayout = dict(title='Terrorist Attacks per 100 000 people over the last 10 years',\n              geo = dict(showframe = True, projection={'type':'miller'}),\n              autosize=False,\n              width=750, height=600)\n\nchoromap = go.Figure(data = [data], layout = layout)\niplot(choromap, validate=False)","35b84a80":"data = dict(type='choropleth',\n            locations = ten_years_df['Country'],\n            locationmode = 'country names', z = ten_years_df['RelCasualties'],\n            text = ten_years_df['Country'], colorbar = {'title':'Rel. Casualties'},\n            colorscale=[[0, 'aliceblue'], [0.0016, 'cadetblue'], \n                        [0.008, 'khaki'], [0.04, 'gold'], \n                        [0.2, 'darkorange'], [1, 'firebrick']],    \n            reversescale = False)\n\nlayout = dict(title='Casualties per 100 000 people over the last 10 years',\n              geo = dict(showframe = True, projection={'type':'miller'}),\n              autosize=False,\n              width=750, height=600)\n\nchoromap = go.Figure(data = [data], layout = layout)\niplot(choromap, validate=False)","a48de364":"sns.barplot(terror['Group'].value_counts()[1:15].values, \n            terror['Group'].value_counts()[1:15].index,\n            palette=('inferno'))\nplt.xticks(rotation=90)\nfig = plt.gcf()\nfig.set_size_inches(10, 8)\nplt.title('Terrorist Groups with Highest Terror Attacks')\nplt.show()","5ddc0392":"top_groups10 = terror[terror['Group'].isin(terror['Group'].value_counts()[1:11].index)]\npd.crosstab(top_groups10['Year'],top_groups10['Group']).plot(color=sns.color_palette('Paired', 10))\nfig = plt.gcf()\nfig.set_size_inches(18,6)\nplt.show()","c5ebfae0":"This plot gives us little but still some info. We can already see the regions that have suffered the most from the terrorists' attacks: Middle East & North Africa and South Asia. Let's look at some dynamics - how terrorist activity changed over time in different regions.","beec445b":"## Distribution of Terrorist Activities by Attack Type <a id='AttackType'><\/a> [[\u21e7](#TOC)]\nFirst, let's see what does the distribution look like overall, through all years since 1970. What are the most frequent attack methods:","bb57be11":"# Global Terrorism EDA\n_Hello, fellow Kagglers! This is my attempt to create an EDA. I'm trying to become stronger and I would bery appreciate each comment, advice and correction. This notebook is a some sort of replica of a fantastic EDA analysis [Terrorist Activities Around The World](https:\/\/www.kaggle.com\/ash316\/terrorism-around-the-world), however I tried to reproduce it on my own and made some changes. However, kudos must go to [Ashwini Swain](https:\/\/www.kaggle.com\/ash316)_\n\nThe primary goal of this notebook is to get a good understanding of the tendencies underlying the data. Some secondary goals are:\n* To practice plotting and data wrangling\n* To learn how to plot maps via different Python libraries\n\n## Table of Contents <a id='TOC'><\/a>\n1. [Questions for the Data](#Questions)\n2. [Basic Descriptive Exploration](#Basics)\n3. [Distribution by Region and Country](#Region)\n4. [Distribution by Attack Type](#AttackType)\n5. [Distribution by Target Type](#TargetType)\n6. [Maps](#Maps)\n7. [Notorious Terrorist Groups](#Groups)\n","70c12137":"### Interactive Plotly Maps\n\nNext three maps show different distributions of terrorist attacks. The first one shows overall casualties over the whole timeframe since 1970 to 2017 by each country. The second shows number of attacks per 100 000 people in each country. And the third one shows casualties per 100 000 population in each country. All data is shown for the last ten years.\n\nSurprisingly enough, for example, Ukraine seems to suffer more from terrorism than India, since the relative attack number and relative casualties are higher in Ukraine, although absolute numbers are greater for India.\n\nAlso, Norway surpised me as well with relative numbers similar to Turkey and Egypt and more than ten times bigger than India.","51cf1873":"## Maps <a id='Maps'><\/a> [[\u21e7](#TOC)]\n\nThis section is primarily for exercises with Folium, Cartopy, ipywidgets and plotly libraries. However, we can still get some valuable insights looking at this data.\n\n### Interactive Cartopy Map\nThis map shows us the distribution of terrorist attack in the world by year. We can see where and when which attack happened.","e85945b0":"## Basic descriptive exploration <a id='Basics'><\/a> [[\u21e7](#TOC)]\n\n### Missing Data\nFirst of all, let't take a look, whether all of our data is in place:","2e021947":"And now, let's see, how this distribution changes over time.","c152f13d":"## Distribution by Region and Country <a id='Region'><\/a> [[\u21e7](#TOC)]\nMy next question is how these activities are distributed across the globe and whether the distribution is changing over time. Let's start with the basic overview of different regions and see what how active were terrorists in each region","02797362":"### Motives\nIt seems like most of the time we don't know the motive of the terrorists attacks. And a lot of the summary column is missing. But what do we see, when we know them?","3f65aa79":"Now this is disturbing. Not only the number of attacks is increasing by year but also the frequency and deadliness of these attacks. And what about casualties per one attack during the year?","58500a1f":"This is somewhat interesting. Our data has 72% percent of `Motive` missing and when it is not missing about 60% of the time the \"specific motive for the attack is unknown or was not reported\". That is very suggestive of the fact that we don't know our enemy at all.\n\nNow let's dig out some basic facts from out dataframe:","caa33303":"Now here what I find interesting is the increase in the __\"Unknown\"__ category. Also it seems interesting that transport is no more a target for terrorists as well as diplomatic targets.","94f44345":"## Distribution of Terrorist Attacks by Target Type <a id='TargetType'><\/a> [[\u21e7](#TOC)]\nLet's find out what are the main targets for terrorists","5a2d9963":"We can see massive increase in terrorist attacks in South Asia since 1980 and although terrorism in the Middle East & North Africa region was always present since 1970 both absolute and relative numbers greatly increased there since 1990s. Another salient region is Sub-Saharan Africa.","ce891ef5":"We can see that there was an increased deadliness of attackd during the 2000s, but then the average casualties during one attack went down, which may not be good news since the frequency of attacks more than quintupled since 2001. Also we can see that on a logarithmic scale number of casualties per one terrorist attack is almost linear. This really seems like a distribution with a fat tail. We can make a guess that we have not yet seen the attack from the `12800-25600` bin category and it is yet to come and we should be prepared.","d869bfd9":"Now this plot is more vivid, however several lines are squeezed to the bottom of the plot. But here we can see, how the Middle East & North Africa over time became the most dangerous region in the world considering terrorism.","c656244c":"## Questions for the Data <a id='Questions'><\/a> [[\u21e7](#TOC)]\n\nFirst we need to decide what we would like to know. Having a lot of data is no good if you don't know what you want to get out of it.\nMy first inquiry is __whether overall terrorism situation in the world is getting better or worse__, i.e:\n\n* Do terrorist attacks become more or less frequent?\n* Do average casualties per one terrorist attack get bigger or smaller?\n* Do terrorist attacks per 100,000 population of the world get bigger or smaller?\n\nThe last subquestion seems important to me, because I think it is logical that as the population of the world increases the absolute number of terrorist attacks should also increase. And so if the number of attacks per 100 000 people would decrease but the absolute number would increase, it would still mean that the situation is getting better overall.\n\nMy second question is: __What is the distribution of terrorist attacks by casualties. It seems that this distribution should have a fat tail. My prior is that the distribution is lognormal__.\n\n_<span style='color:darkgreen'>Here I have doubts about the distribution, because lognormal distribution PDF is defined for $x>0$ and it seems that most of terrorist attacks have casualties $x = 0$. Thus it seems for similar to exponential distribution, but exponential does not have a fat tail as far as I understand.<\/span>_\n\nMy third question is: What is the distribution of terrorist attacks by country and region.\n\n* Are there any correlations with population density?\n\nMy fourth question is: __What are the primary targets of terrorists and are they changing over time?__","01f3feeb":"### Do terrorist attacks become more or less frequent?","16f9123c":"We can see that assasination became much less frequent method of terrorism over the years as well as facility\/infractructure attack and armed assault became more frequent.","fa526c6d":"### Interactive Folium Map\nTwo thousand latest attacks are plotted on this map. Circle sizes correspond to number of deaths during each attack.","632d15de":"## Notorious Terrorist Groups <a id='Groups'><\/a> [[\u21e7](#TOC)]"}}