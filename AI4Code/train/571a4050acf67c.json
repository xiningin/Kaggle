{"cell_type":{"d433a7b3":"code","7210b2c6":"code","4a9c41d1":"code","266a7267":"code","01383a3a":"code","48bba760":"code","bd395fcf":"code","2922f7dd":"markdown","4ff45138":"markdown","dd26ce0d":"markdown","658f186e":"markdown","06d811cb":"markdown","a4850da5":"markdown","797dadd8":"markdown","34b4a282":"markdown","4a78a92f":"markdown"},"source":{"d433a7b3":"# Set up feedback system\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.sql.ex3 import *\nprint(\"Setup Complete\")","7210b2c6":"from google.cloud import bigquery\n\n# Create a \"Client\" object\nclient = bigquery.Client()\n\n# Construct a reference to the \"hacker_news\" dataset\ndataset_ref = client.dataset(\"hacker_news\", project=\"bigquery-public-data\")\n\n# API request - fetch the dataset\ndataset = client.get_dataset(dataset_ref)\n\n# Construct a reference to the \"comments\" table\ntable_ref = dataset_ref.table(\"comments\")\n\n# API request - fetch the table\ntable = client.get_table(table_ref)\n\n# Preview the first five lines of the \"comments\" table\nclient.list_rows(table, max_results=5).to_dataframe()","4a9c41d1":"# Query to select prolific commenters and post counts\nprolific_commenters_query = \"\"\"SELECT author, COUNT(1) AS NumPosts\nFROM `bigquery-public-data.hacker_news.comments`\nGROUP BY author\nHAVING COUNT(1) > 10000\n\"\"\"\n\n# Set up the query (cancel the query if it would use too much of \n# your quota, with the limit set to 1 GB)\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)\nquery_job = client.query(prolific_commenters_query, job_config=safe_config)\n\n# API request - run the query, and return a pandas DataFrame\nprolific_commenters = query_job.to_dataframe()\n\n# View top few rows of results\nprint(prolific_commenters.head())\n\n# Check your answer\nq_1.check()","266a7267":"#q_1.solution()","01383a3a":"# Write your query here and figure out the answer\ndeleted_post = \"\"\"SELECT *\nFROM `bigquery-public-data.hacker_news.comments`\nWHERE deleted=True\n\"\"\"\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)\nquery_job = client.query(deleted_post, job_config=safe_config)\ndeleted_post = query_job.to_dataframe()\n# print(len(deleted_post))","48bba760":"num_deleted_posts = len(deleted_post) # Put your answer here\n\n# Check your answer\nq_2.check()","bd395fcf":"#q_2.solution()","2922f7dd":"The code cell below fetches the `comments` table from the `hacker_news` dataset.  We also preview the first five rows of the table.","4ff45138":"**This notebook is an exercise in the [SQL](https:\/\/www.kaggle.com\/learn\/intro-to-sql) course.  You can reference the tutorial at [this link](https:\/\/www.kaggle.com\/dansbecker\/group-by-having-count).**\n\n---\n","dd26ce0d":"# Keep Going\n**[Click here](https:\/\/www.kaggle.com\/dansbecker\/order-by)** to move on and learn about the **ORDER BY** clause.","658f186e":"# Exercises\n\n### 1) Prolific commenters\n\nHacker News would like to send awards to everyone who has written more than 10,000 posts. Write a query that returns all authors with more than 10,000 posts as well as their post counts. Call the column with post counts `NumPosts`.\n\nIn case sample query is helpful, here is a query you saw in the tutorial to answer a similar question:\n```\nquery = \"\"\"\n        SELECT parent, COUNT(1) AS NumPosts\n        FROM `bigquery-public-data.hacker_news.comments`\n        GROUP BY parent\n        HAVING COUNT(1) > 10\n        \"\"\"\n```","06d811cb":"For the solution, uncomment the line below.","a4850da5":"### 2) Deleted comments\n\nHow many comments have been deleted? (If a comment was deleted, the `deleted` column in the comments table will have the value `True`.)","797dadd8":"# Introduction\n\nQueries with **GROUP BY** can be powerful. There are many small things that can trip you up (like the order of the clauses), but it will start to feel natural once you've done it a few times. Here, you'll write queries using **GROUP BY** to answer questions from the Hacker News dataset.\n\nBefore you get started, run the following cell to set everything up:","34b4a282":"---\n\n\n\n\n*Have questions or comments? Visit the [Learn Discussion forum](https:\/\/www.kaggle.com\/learn-forum\/161314) to chat with other Learners.*","4a78a92f":"For the solution, uncomment the line below."}}