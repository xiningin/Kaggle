{"cell_type":{"b033e170":"code","b653df37":"code","0f5ce9b1":"code","52867262":"code","3c3a19df":"code","2e0a42cc":"code","eab9048e":"code","3892b881":"code","97d02cd7":"code","1527d975":"code","50987532":"code","9ce23b56":"code","ed009d1b":"code","55bd2af9":"code","de3bf6e0":"code","c36e42ef":"code","560288c2":"code","c2758cea":"code","144b327f":"code","debc7a74":"code","2360662f":"code","876cd36d":"code","a483a901":"code","9ef4fe3f":"markdown","10f2da28":"markdown","44c17c9e":"markdown","8c0dcdec":"markdown","7bd218e5":"markdown","6f93eb2d":"markdown"},"source":{"b033e170":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","b653df37":"bottle = pd.read_csv('..\/input\/calcofi\/bottle.csv')","0f5ce9b1":"bottle.head()","52867262":"bottle = bottle[['T_degC','Salnty']]\nbottle.rename(columns={'T_degC':'Temp','Salnty':'Salinity'},inplace=True)\nbottle.head()","3c3a19df":"bottle.shape","2e0a42cc":"bottle.isnull().sum()","eab9048e":"bottle.fillna(bottle.median(),inplace=True)","3892b881":"data = bottle.sample(frac=0.003,random_state=2)\nX = data.Temp.values.reshape(-1,1)\ny = data.Salinity.values.reshape(-1,1)\n","97d02cd7":"data.shape","1527d975":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2, random_state=2)","50987532":"from sklearn.linear_model import LinearRegression\nlr = LinearRegression()\nlr.fit(X_train,y_train)\nlr_score = lr.score(X_test,y_test)","9ce23b56":"print(lr_score)","ed009d1b":"lr_sc = lr.score(X_train,y_train)\nlr_sc","55bd2af9":"X_pred = lr.predict(X_test)\nplt.scatter(x=X_test,y=y_test,color='b')\nplt.scatter(x=X_test,y=X_pred,color='r',alpha=0.5)\n\nplt.show()","de3bf6e0":"data['Temp2'] = data.Temp ** 2\ndata['Temp3'] = data.Temp ** 3","c36e42ef":"X = data[['Temp','Temp2','Temp3']]\ny = data['Salinity']\n\nX_train2, X_test2, y_train2, y_test2 = train_test_split(X,y,test_size=0.2, random_state=42)","560288c2":"lr_2 = LinearRegression()\nlr_2.fit(X_train2,y_train2)\nlr_2.score(X_test2,y_test2)","c2758cea":"X_pred2 = lr_2.predict(X_test2)\nplt.scatter(X_test2.Temp,y_test2,color='b')\nplt.scatter(X_test2.Temp,X_pred2,color='r',alpha=0.5)\nplt.show()","144b327f":"from sklearn.model_selection import KFold\nkf = KFold(n_splits=5)","debc7a74":"scores = []\nlr_3 = LinearRegression()\nfig = plt.figure(figsize=(20,20))\n\nfor fold, (train_index, test_index) in enumerate(kf.split(X)):\n    X_train3, X_test3 = X[train_index], X[test_index]\n    y_train3, y_test3 = y[train_index], y[test_index]\n    \n    lr_3.fit(X_train3,y_train3)\n    scores.append(lr_3.score(X_test3,y_test3))\n    X_pred = lr_3.predict(X_test3)\n    fig.add_subplot(3,2,fold+1)\n    plt.scatter(X_test3,y_test3,color='b')\n    plt.scatter(X_test3,X_pred,color='r',alpha=0.5)\n    plt.title(f'{scores[fold]}')\nplt.show()","2360662f":"np.array(scores).mean()","876cd36d":"scores2 = []\nlr_3 = LinearRegression()\nfig = plt.figure(figsize=(20,20))\n\nfor fold, (train_index, test_index) in enumerate(kf.split(X)):\n    X_train3, X_test3 = X.iloc[train_index], X.iloc[test_index]\n    y_train3, y_test3 = y.iloc[train_index], y.iloc[test_index]\n    \n    lr_3.fit(X_train3,y_train3)\n    scores2.append(lr_3.score(X_test3,y_test3))\n    X_pred = lr_3.predict(X_test3)\n    fig.add_subplot(3,2,fold+1)\n    plt.scatter(X_test3.Temp,y_test3,color='b')\n    plt.scatter(X_test3.Temp,X_pred,color='r',alpha=0.5)\n    plt.title(f'{scores2[fold]}')\nplt.show()","a483a901":"np.array(scores2).mean()","9ef4fe3f":"### Maybe we should choose another model ?","10f2da28":"### Really bad Q_Q","44c17c9e":"## K-Fold","8c0dcdec":"### Last time 0.47336409415720837  ","7bd218e5":"### Last time we get 0.2976305131739525  \n### how about new feature ?","6f93eb2d":"## Add Features"}}