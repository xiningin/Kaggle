{"cell_type":{"9bd84a41":"code","bd143769":"code","c3f526c8":"code","bf330391":"code","e3b59964":"code","1735b614":"code","124178b9":"code","74bddafb":"code","481b3f4a":"code","b566c902":"code","2cacecd0":"code","800ad046":"code","2112627a":"code","3f37f92a":"code","e8e3b221":"markdown"},"source":{"9bd84a41":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bd143769":"!pip install xlrd","c3f526c8":"!pip install openpyxl","bf330391":"#Code by Chennoju Bhuvan Kumar https:\/\/www.kaggle.com\/bhuvanchennoju\/netflix-content-visualization\n\ndf = pd.read_excel('\/kaggle\/input\/investigating-the-job-status-of-programmersjadi\/-------_--jadi.net-98-Responses.xlsx')\ndf.head().style.set_properties(**{'background-color':'black',\n                                     'color': 'red'})","e3b59964":"df.shape","1735b614":"df.describe","124178b9":"df.isnull().sum()","74bddafb":"df[\"\u0686\u06af\u0648\u0646\u0647 \u06a9\u0627\u0631 \u0645\u06cc \u06a9\u0646\u06cc\u062f\u061f\"].value_counts()","481b3f4a":"sns.countplot(data = df, x = '\u062f\u0631 \u06a9\u062f\u0627\u0645 \u0645\u062d\u062f\u0648\u062f\u0647 \u0633\u0646\u06cc \u0647\u0633\u062a\u06cc\u062f\u061f')\nplt.title('\u062f\u0631 \u06a9\u062f\u0627\u0645 \u0645\u062d\u062f\u0648\u062f\u0647 \u0633\u0646\u06cc \u0647\u0633\u062a\u06cc\u062f\u061f')","b566c902":"sns.countplot(data = df, x = '\u0632\u0628\u0627\u0646\u200c\u0647\u0627\u06cc \u0628\u0631\u0646\u0627\u0645\u0647\u200c\u0646\u0648\u06cc\u0633\u06cc \u0645\u0648\u0631\u062f \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u0645\u0627 \u062f\u0631 \u067e\u0631\u0648\u0698\u0647\u200c\u0647\u0627 \u06a9\u062f\u0627\u0645\u0646\u062f\u061f')\nplt.title('\u0632\u0628\u0627\u0646\u200c\u0647\u0627\u06cc \u0628\u0631\u0646\u0627\u0645\u0647\u200c\u0646\u0648\u06cc\u0633\u06cc \u0645\u0648\u0631\u062f \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u0645\u0627 \u062f\u0631 \u067e\u0631\u0648\u0698\u0647\u200c\u0647\u0627 \u06a9\u062f\u0627\u0645\u0646\u062f\u061f')","2cacecd0":"df[\"\u0628\u0647 \u062c\u0632 \u0632\u0628\u0627\u0646\u200c\u0647\u0627\u06cc \u0641\u0639\u0644\u06cc\u200c\u062a\u0627\u0646\u060c \u062f\u0648\u0633\u062a \u062f\u0627\u0631\u06cc\u062f \u0628\u0627 \u0686\u0647 \u0632\u0628\u0627\u0646 \u0628\u0631\u0646\u0627\u0645\u0647 \u0627\u06cc \u0646\u0648\u06cc\u0633\u06cc \u06a9\u0627\u0631 \u06a9\u0646\u06cc\u062f\u061f\"].value_counts()[:10].plot.barh(title= 'Database', figsize =(8,6), color = 'r')","800ad046":"df[\"\u0632\u0628\u0627\u0646\u200c\u0647\u0627\u06cc \u0628\u0631\u0646\u0627\u0645\u0647\u200c\u0646\u0648\u06cc\u0633\u06cc \u0645\u0648\u0631\u062f \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u0645\u0627 \u062f\u0631 \u067e\u0631\u0648\u0698\u0647\u200c\u0647\u0627 \u06a9\u062f\u0627\u0645\u0646\u062f\u061f\"].value_counts()[:10].plot.barh(title= 'Programming Languages', figsize =(8,6), color = 'g')","2112627a":"df[\"\u0648 \u0648\u0642\u062a\u06cc \u0635\u062d\u0628\u062a \u0627\u0632 \u062a\u0644\u0641\u0646 \u0647\u0645\u0631\u0627\u0647 \u0628\u0627\u0634\u062f...\"].value_counts()[:10].plot.barh(title= 'Operating System', figsize =(8,6), color = 'purple')","3f37f92a":"df.dtypes","e8e3b221":"#Since I have No clue about the language and there was no explanations about the Dataset columns. I'll wait for someone #that can understand what is written in that data. "}}