{"cell_type":{"7531ffbf":"code","4b99141e":"code","ad856e5e":"code","f93208c4":"code","c6fbe0d9":"code","1bac8ea1":"code","502d60d0":"code","ea834016":"code","64082eed":"code","0215278a":"code","01c5626d":"code","647b3faa":"code","2f1e8084":"code","e8646ca9":"code","82e2de7c":"code","0f5c26c7":"code","0f87d7b4":"code","1321449b":"code","f37aadc7":"code","46df5aaf":"code","b4e94285":"code","59f82db4":"code","68d0493e":"code","c9fb0713":"code","74a3d9f0":"code","16524c82":"code","e728f346":"markdown","3d717a1f":"markdown","a7c7b2db":"markdown","93f89367":"markdown","ec8db783":"markdown","58b51200":"markdown","61423e39":"markdown","b4f775d5":"markdown","6d237547":"markdown","d8341d52":"markdown","80f8a8bf":"markdown","3deb6672":"markdown"},"source":{"7531ffbf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")                # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4b99141e":"df = pd.read_csv('\/kaggle\/input\/pubg-winner-prediction\/train_V2.csv')","ad856e5e":"df.info()","f93208c4":"df.describe()","c6fbe0d9":"df.dtypes","1bac8ea1":"df.sample(6) #print random six row from the dataset","502d60d0":"print(\"The average person kills {:.4f} players, 99% of people have {} kills or less, while the most kills ever recorded is {}.\".format(df['kills'].mean(),df['kills'].quantile(0.99), df['kills'].max()))","ea834016":"df.columns","64082eed":"# set the background style of the plot \nsns.set_style('whitegrid') \nsns.distplot(df['matchDuration'], kde = False, color ='red', bins = 30) ","0215278a":"plt.title(\"MatchDuration Distance Distribution\",fontsize=15)\nsns.distplot(df['matchDuration'])\nplt.show()","01c5626d":"fig, ax = plt.subplots(1, 2, figsize=(12, 4))\n# there are two types of maps?\ndf['matchDuration'].hist(bins=50, ax=ax[0])\ndf.query('matchDuration >= 1400 & matchDuration <= 1800')['matchDuration'].hist(bins=50, ax=ax[1])","647b3faa":"#min matchDuration\ndf[df['matchDuration'] == df['matchDuration'].min()].head()","2f1e8084":"#max matchDuration\ndf[df['matchDuration'] == df['matchDuration'].max()].head()","e8646ca9":"# set the background style of the plot \nsns.set_style('whitegrid') \nsns.distplot(df['walkDistance'], kde = False, color ='orange', bins = 30)","82e2de7c":"plt.title(\"Walking Distance Distribution\",fontsize=15)\nsns.distplot(df['walkDistance'])\nplt.show()","0f5c26c7":"fig,axs=plt.subplots(2,1)\nsns.distplot(df.matchDuration,ax=axs[0]);\nsns.distplot(df.walkDistance,ax=axs[1]);","0f87d7b4":"fig,axs=plt.subplots(1,2)\nsns.distplot(df.matchDuration,ax=axs[0]);\nsns.distplot(df.walkDistance,ax=axs[1]);","1321449b":"df.matchType.nunique()","f37aadc7":"df.matchType.value_counts()","46df5aaf":"df.select_dtypes(exclude=['number'])","b4e94285":"sns.barplot(df.matchType,df.killPoints);\nplt.xticks(rotation=70);","59f82db4":"sns.barplot(df.matchType,df.weaponsAcquired);\nplt.xticks(rotation=70);","68d0493e":"sns.boxplot(df.matchDuration,df.matchType);\nplt.xticks(rotation=70);","c9fb0713":"df['KILL']=(df.headshotKills+df.roadKills+df.teamKills)\nkd=pd.DataFrame(df[['headshotKills','roadKills','teamKills','KILL']])\nprint(kd.head())","74a3d9f0":"df['winPlacePerc']=round(df['winPlacePerc'],2)\ndf['winPlacePerc']","16524c82":"x = []\nfor i in range(100):\n    x.append(df['damageDealt'].sample(50).mean())\nmeans = np.array(x)\nsns.distplot(means);","e728f346":"# Plot a boxplot of \u2018matchType\u2019 vs \u2018winPlacePerc\u2019. Write your inferences","3d717a1f":"**It's like a normal distribution in which mean is 0 and variance is 1**","a7c7b2db":"# THANK YOU","93f89367":"# Interences:-\nThe Normal-squad-fpp and normal-squad-fpp match types has the most kill points solo-fpp and solo match types has the less kill points.","ec8db783":"# Change the orientation of the above plot to horizontal","58b51200":"# The average person kills how many players? 5. 99% of people have how many kills?  6. The most kills ever recorded are how much?","61423e39":"# Find the Categorical column","b4f775d5":"# Take a sample of size 50 from the column damageDealt for 100 times and calculate its mean. Plot it on a histogram and comment on its distribution","6d237547":"# Round off column \u2018winPlacePerc\u2019 to 2 decimals","d8341d52":"# Inference:-\nIn crashtpp and crashfpp match types weapons acquired by players are very less In normal-solo-fpp and normal-squad-fpp match types weapons acquired by players are more.","80f8a8bf":"# Plot a boxplot of \u2018matchType\u2019 vs \u2018matchDuration\u2019. Write your inferences","3deb6672":"# Add a new column called \u2018KILL\u2019 which contains the sum of following columns viz. headshotKills,teamKills, roadKills"}}