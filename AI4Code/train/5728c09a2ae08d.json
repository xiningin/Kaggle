{"cell_type":{"ad468e25":"code","bcf08d17":"code","69128612":"code","c305a044":"code","9104c781":"code","24864d72":"code","78364734":"code","2b58f8f3":"code","7f1e449b":"code","92755c46":"code","59a6034f":"code","3d9bdb61":"code","9eb78343":"code","cc6ed9db":"code","b33abcd8":"code","0e592fe5":"code","4ff18850":"code","03f46858":"code","2270ba56":"code","6c991d63":"code","7302c573":"code","606d4ed7":"code","584fe220":"code","59154bcc":"code","80327e3e":"code","7198fc89":"markdown","1e0cee70":"markdown","1153b594":"markdown","57ef1dbe":"markdown","e850a449":"markdown","a6d410be":"markdown","54be8aa0":"markdown","4d3223ce":"markdown","477317ab":"markdown","6fb9beb8":"markdown","77460b84":"markdown","21c94dfc":"markdown","97db1da5":"markdown"},"source":{"ad468e25":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","bcf08d17":"groceries = pd.read_csv('..\/input\/groceries-dataset\/Groceries_dataset.csv')","69128612":"groceries.head()","c305a044":"groceries.info()","9104c781":"sns.heatmap(groceries.isnull())","24864d72":"groceries.head()\ngroceries['DateTime'] = pd.to_datetime(groceries['Date'])","78364734":"#date variables\n\ngroceries['Month'] = groceries['DateTime'].dt.month\ngroceries['Year'] = groceries['DateTime'].dt.year\ngroceries['Day'] = groceries['DateTime'].dt.day\ngroceries['WeekDay'] = groceries['DateTime'].dt.weekday\ngroceries['WeekDay'] = groceries['WeekDay'].replace((0,1,2,3,4,5,6), \n('Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'))","2b58f8f3":"#transaction id\n\ngroceries['Transaction'] = groceries.groupby(['Member_number', 'Date']).grouper.group_info[0]","7f1e449b":"groceries.head()","92755c46":"fig = plt.figure(figsize=(15,5))\ncolors = sns.color_palette(\"YlOrRd\", 25)\nnames = groceries.itemDescription.value_counts().head(25).index\nvalues = groceries.itemDescription.value_counts().head(25)\nsns.barplot(x = names, y = values, palette = colors)\nplt.xticks(rotation=60)","59a6034f":"countByMonth = groceries.groupby('Month')['Transaction'].count().reset_index()\ncountByMonth.sort_values('Month',inplace=True)","3d9bdb61":"colors = sns.color_palette(\"YlOrRd\", 18)\nfig = plt.figure(figsize=(12,5))\nsns.barplot(x=countByMonth['Month'], y=countByMonth['Transaction'], palette = colors)","9eb78343":"countByWeekday = groceries.groupby('WeekDay')['Transaction'].count().reset_index()\ncountByWeekday.loc[:,\"orderOfDays\"] = [4,0,5,6,3,1,2]\ncountByWeekday.sort_values(\"orderOfDays\",inplace=True)","cc6ed9db":"colors = sns.color_palette(\"YlOrRd\", 7)\nfig = plt.figure(figsize=(12,5))\nsns.barplot(x=countByWeekday['WeekDay'], y=countByWeekday['Transaction'], palette = colors)","b33abcd8":"countByDay = groceries.groupby('Day')['Transaction'].count().reset_index()\ncountByDay.sort_values('Day',inplace=True)","0e592fe5":"colors = sns.color_palette(\"YlOrRd\", 31)\nfig = plt.figure(figsize=(12,5))\nsns.barplot(x=countByDay['Day'], y=countByDay['Transaction'], palette = colors)","4ff18850":"transactions = groceries.groupby(['Transaction','itemDescription'])['itemDescription'].count().reset_index(name='Number of Items')\ntable = transactions.pivot_table(index='Transaction', columns='itemDescription', values='Number of Items', aggfunc='sum').fillna(0)","03f46858":"table.head()","2270ba56":"def hot_encode(x): \n    if(x==0): \n        return False\n    if(x>0): \n        return True","6c991d63":"final_table = table.applymap(hot_encode) ","7302c573":"final_table.head()","606d4ed7":"from mlxtend.frequent_patterns import apriori\nfrom mlxtend.frequent_patterns import association_rules","584fe220":"frequence = apriori(final_table, min_support=0.0005, use_colnames=True)\nrules = association_rules(frequence, metric=\"lift\", min_threshold=1)","59154bcc":"rules.head()","80327e3e":"rules.sort_values('confidence', ascending = False, inplace=True)\nrules.head(20)","7198fc89":"#### Importing the Dataset","1e0cee70":"### Data Visualization","1153b594":"#### Top 25 sold items","57ef1dbe":"The dataset has 38765 rows and 3 columns of the purchase orders of people from the grocery stores.\n\n* Member_number - ID of the customer\n* Date - Purchase Order Date\n* ItemDescription - Description of the purchase item","e850a449":"There aren't null values","a6d410be":"#### Transactions by Weekday","54be8aa0":"#### Transactions By Month Day","4d3223ce":"### Apriori Algorithm","477317ab":"#### Getting the Libraries","6fb9beb8":"#### Dataset Description","77460b84":"### Data Pre Processing","21c94dfc":"#### Transactions By Month","97db1da5":"Extracting some more variables from the original columns"}}