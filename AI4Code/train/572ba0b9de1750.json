{"cell_type":{"cf3adc00":"code","2cede9d0":"code","9bcb5878":"code","0fa26a6d":"code","4c72841b":"code","cc088e1a":"code","bd2578bf":"code","d99b6c70":"code","48d7ee50":"code","0cc93112":"code","1e700b5a":"code","c70e3a30":"code","0a1bd8eb":"code","86978767":"code","ea832cce":"code","1494439f":"code","3c5458d2":"code","06b96ce3":"code","ab25a2f8":"code","0bc1be63":"code","8f085af5":"code","055f8ba9":"markdown","edeec1e2":"markdown","524348e6":"markdown","79b28661":"markdown","8661be12":"markdown","0640ac13":"markdown","41827803":"markdown","3ab1fc27":"markdown","4867e28a":"markdown","3617bed3":"markdown","af0a8db4":"markdown"},"source":{"cf3adc00":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","2cede9d0":"df= pd.read_csv(\"..\/input\/BRAZIL_CITIES.csv\", sep=\";\", decimal=\",\")","9bcb5878":"df.head()","0fa26a6d":"df.info()","4c72841b":"df.fillna(0., inplace=True)","cc088e1a":"# Amount of states plus Federal District\ndf[\"STATE\"].value_counts().shape","bd2578bf":"# States and cities per state\ndf[\"STATE\"].value_counts()","d99b6c70":"# remove zero values\nmask1= df[\"LONG\"] != 0\nmask2 = df[\"LAT\"] !=0 \n\nx = df[mask1&mask2][\"LONG\"]\ny = df[mask1&mask2][\"LAT\"]\nz = df[mask1&mask2][\"IDHM\"]\n \n# use the scatter function\nplt.figure(figsize=(10,10))\nplt.title(\"Cities Latitude and Longitude\")\nplt.xlabel(\"Longitude\")\nplt.ylabel(\"Latitude\")\nplt.scatter(x, y, s=z, alpha=1)\nplt.show()","48d7ee50":"# remove zero values\nmask1= df[\"LONG\"] != 0\nmask2 = df[\"LAT\"] !=0 \nmask3 = df['CAPITAL'] ==1\n \n# use the scatter function\nplt.figure(figsize=(10,10))\nplt.title(\"Population per Latitude and Longitude\")\nplt.xlabel(\"Longitude\")\nplt.ylabel(\"Latitude\")\nscale_factor = 10000\nplt.scatter(df[mask1&mask2&mask3][\"LONG\"], df[mask1&mask2&mask3][\"LAT\"], s=df[mask1&mask2&mask3][\"ESTIMATED_POP\"]\/scale_factor, alpha=1, label='Capital city')\nplt.scatter(df[mask1&mask2&~mask3][\"LONG\"], df[mask1&mask2&~mask3][\"LAT\"], s=df[mask1&mask2&~mask3][\"ESTIMATED_POP\"]\/scale_factor, alpha=1, label='Other')\nplt.legend()\nplt.show()","0cc93112":"# total population (2018)\nprint(f\"total population (2018): {df['ESTIMATED_POP'].sum():10.0f}\")\n\n# % growth between 2010 and 2018\nprint(f\"% population growth between 2010 and 2018: {((df['ESTIMATED_POP'].sum()-df['IBGE_RES_POP'].sum())\/df['IBGE_RES_POP'].sum()*100):2.2f}\")","1e700b5a":"# population by state (2018)\ndf[['STATE','ESTIMATED_POP']].groupby(by=\"STATE\").sum().sort_values(by=\"ESTIMATED_POP\", ascending=False)","c70e3a30":"# Fastest growing states\nfastest_growing_states = df[['STATE','IBGE_RES_POP','ESTIMATED_POP']].groupby(by=\"STATE\").sum()\nfastest_growing_states['%GROWTH'] = (fastest_growing_states['ESTIMATED_POP']-fastest_growing_states['IBGE_RES_POP'])\/fastest_growing_states['IBGE_RES_POP']*100\nfastest_growing_states.sort_values(by=\"%GROWTH\", ascending=False)","0a1bd8eb":"# Fastest growing capital cities\nfastest_growing_capitals = df[df['CAPITAL']==1][['CITY','STATE','IBGE_RES_POP','ESTIMATED_POP']]\nfastest_growing_capitals['%GROWTH'] = (fastest_growing_capitals['ESTIMATED_POP']-fastest_growing_capitals['IBGE_RES_POP'])\/fastest_growing_capitals['IBGE_RES_POP']*100\nfastest_growing_capitals.sort_values(by=\"%GROWTH\", ascending=False)","86978767":"# % people living in capital cities\n","ea832cce":"# total foreign population\nprint(f\"total foreign population: {df['IBGE_RES_POP_ESTR'].sum():10.0f}\")\n\n# % of foreign population\nprint(f\"% of foreign population {(df['IBGE_RES_POP_ESTR'].sum()\/df['IBGE_RES_POP'].sum()*100):10.2f}\")","1494439f":"# remove zero values\nmask1= df[\"LONG\"] != 0\nmask2 = df[\"LAT\"] !=0 \nmask3 = df[\"CAPITAL\"] ==1 \n \n# use the scatter function\nplt.figure(figsize=(10,10))\nplt.title(\"Foreign population (2010)\")\nplt.xlabel(\"Longitude\")\nplt.ylabel(\"Latitude\")\nscale_factor = 100\nplt.scatter(df[mask1&mask2&mask3][\"LONG\"], df[mask1&mask2&mask3][\"LAT\"], s=df[mask1&mask2&mask3][\"IBGE_RES_POP_ESTR\"]\/scale_factor, alpha=1, label='Capital city')\nplt.scatter(df[mask1&mask2&~mask3][\"LONG\"], df[mask1&mask2&~mask3][\"LAT\"], s=df[mask1&mask2&~mask3][\"IBGE_RES_POP_ESTR\"]\/scale_factor, alpha=1, label='Other')\nplt.legend()\nplt.show()","3c5458d2":"# remove zero values\nmask1= df[\"LONG\"] != 0\nmask2 = df[\"LAT\"] !=0 \nmask3 = df[\"STATE\"] =='PR' \n \n# use the scatter function\nplt.figure(figsize=(10,10))\nplt.title(\"Parana population (2018)\")\nplt.xlabel(\"Longitude\")\nplt.ylabel(\"Latitude\")\nscale_factor = 3000\nplt.scatter(df[mask1&mask2&mask3][\"LONG\"], df[mask1&mask2&mask3][\"LAT\"], s=df[mask1&mask2&mask3][\"ESTIMATED_POP\"]\/scale_factor, alpha=1)\nplt.show()","06b96ce3":"df[['CITY','ESTIMATED_POP']][df[\"STATE\"] =='PR'].sort_values(by=\"ESTIMATED_POP\", ascending=False)","ab25a2f8":"# remove zero values\nmask1= df[\"GDP_CAPITA\"] != 0\nmask2 = df[\"IDHM\"] !=0 \n \n# create data\nx = df[mask1&mask2][\"GDP_CAPITA\"]\ny = df[mask1&mask2][\"IDHM\"]\nz = df[mask1&mask2][\"ESTIMATED_POP\"]\n \n# use the scatter function\nplt.figure(figsize=(15, 8))\nplt.title(\"HDI Human Development Index per Gross Domestic Product per capita per Estimated Population 2018\")\nplt.xlabel(\"Gross Domestic Product\")\nplt.ylabel(\"HDI Human Development Index\")\nplt.scatter(x, y, s=z\/5000, alpha=0.5)\nplt.show()","0bc1be63":"mask1= df[\"LONG\"] != 0\nmask2 = df[\"LAT\"] !=0 \nmask3 = df[\"CATEGORIA_TUR\"] != 0.\n\nsns.lmplot( x=\"LONG\", y=\"LAT\", data=df[mask1&mask2&mask3], \n           fit_reg=False, hue='CATEGORIA_TUR', legend=True, scatter_kws={\"s\": 30},\n          height=10)","8f085af5":"mask1= df[\"GDP_CAPITA\"] != 0\nmask2 = df[\"BEDS\"] !=0 \n\nsns.lmplot( x=\"GDP_CAPITA\", y=\"BEDS\", data=df[mask1&mask2], \n           fit_reg=False, hue='UBER', legend=True, scatter_kws={\"s\": 30},\n          height=7)","055f8ba9":"## Basic information","edeec1e2":"# What about UBER ?","524348e6":"# Where is the population ?","79b28661":"# How is tourism distributed ?","8661be12":"## Read","0640ac13":"# Where are the cities ?","41827803":"## Parana population","3ab1fc27":"#  Do cities with higher Gross Domestic Product have better Human Development Index ?\n","4867e28a":"## Nan values","3617bed3":"## Foreign population","af0a8db4":"# Population analysis"}}