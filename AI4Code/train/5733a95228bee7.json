{"cell_type":{"9efdfbd7":"code","fbeadf87":"code","5091fc07":"code","5ddb3d7f":"code","e851131d":"code","89c51ed6":"code","1dabf799":"code","a367dea7":"code","4398a8b9":"markdown","cc3d3dcc":"markdown","21188ab3":"markdown","db96713b":"markdown"},"source":{"9efdfbd7":"!pip install kaggle-environments --upgrade -q","fbeadf87":"%%writefile thompson.py\n\nimport numpy as np\n\npost_a = None\npost_b = None\nbandit = None\ntotal_reward = 0\nc = 3\n\n\ndef agent(observation, configuration):\n    global reward_sums, total_reward, bandit, post_a, post_b, c\n    \n    n_bandits = configuration.banditCount\n\n    if observation.step == 0:\n        post_a = np.ones(n_bandits)\n        post_b = np.ones(n_bandits)\n    else:\n        r = observation.reward - total_reward\n        total_reward = observation.reward\n\n        # Update Gaussian posterior\n        post_a[bandit] += r\n        post_b[bandit] += (1 - r)\n\n    samples = np.random.beta(post_a, post_b)\n    bandit = int(np.argmax(samples))\n    \n    return bandit","5091fc07":"from kaggle_environments import make\n\nenv = make(\"mab\", debug=True)","5ddb3d7f":"env.run([\"..\/input\/santa-2020\/submission.py\", \"thompson.py\"])\nenv.render(mode=\"ipython\", width=800, height=500)","e851131d":"def print_rounds(file1, file2, N=5):\n    env = make(\"mab\", debug=True)\n\n    for i in range(N):\n        env.run([file1, file2])\n        p1_score = env.steps[-1][0]['reward']\n        p2_score = env.steps[-1][1]['reward']\n        env.reset()\n        print(f\"Round {i+1}: {p1_score} - {p2_score}\")","89c51ed6":"print('Default vs Thompson Sampling')\nprint_rounds(\"..\/input\/santa-2020\/submission.py\", \"thompson.py\")","1dabf799":"print('Bayesian UCB vs Thompson Sampling')\nprint_rounds(\"..\/input\/santa-2020-ucb-and-bayesian-ucb-starter\/bayesian_ucb.py\", \"thompson.py\")","a367dea7":"print('epsilon-greedy+decay vs Thompson Sampling')\nprint_rounds(\"..\/input\/santa-2020-epsilon-greedy-starter\/epsilon_greedy_decay.py\", \"thompson.py\")","4398a8b9":"## Thompson Sampling\n\nBased on Lilian's blog post: https:\/\/lilianweng.github.io\/lil-log\/2018\/01\/23\/the-multi-armed-bandit-problem-and-its-solutions.html","cc3d3dcc":"## 5-round comparison","21188ab3":"References:\n* [Santa 2020 starter](https:\/\/www.kaggle.com\/isaienkov\/santa-2020-starter\/): Re-used writefile magic command and make_env function for creating a simulation.  ","db96713b":"## Simulations"}}