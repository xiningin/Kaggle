{"cell_type":{"334696ef":"code","8e5c161f":"code","c6327317":"code","839aedaa":"code","6e5eacb3":"code","8beb64df":"code","3d051b23":"code","835012c4":"code","db30d88c":"code","97f5ac07":"code","d2d91b64":"code","64534cf6":"code","bdb70b45":"code","ddcdf7ec":"code","d3ef135a":"markdown","2ed87518":"markdown","4c56059a":"markdown","7d2e48e3":"markdown","60c77056":"markdown","44caa4e2":"markdown","f9dc341b":"markdown","3d7c8c1f":"markdown","ca7f175b":"markdown","281c7904":"markdown","77c4f94c":"markdown","7effe3fa":"markdown","434186df":"markdown"},"source":{"334696ef":"from sklearn.datasets import load_breast_cancer\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","8e5c161f":"data=load_breast_cancer()","c6327317":"X=data.data\ny=data.target","839aedaa":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import precision_recall_curve\n","6e5eacb3":"X_train,X_test, y_train, y_test=train_test_split(X,y, test_size=0.35, random_state=12)","8beb64df":"model=LogisticRegression(solver='lbfgs')\nmodel.fit(X_train, y_train)","3d051b23":"y_test_prob=model.predict_proba(X_test)[:,1]","835012c4":"no_skill=len(y==1)\/len(y)","db30d88c":"plt.figure(figsize=(10,8))\nplt.plot([0,1],[no_skill, no_skill], label=\"No Skill\")\nprecision, recall,_ =precision_recall_curve(y_test, y_test_prob)\nplt.plot(recall, precision, marker='',label=\"Logistic Regression\")\nplt.xlabel(\"Recall\")\nplt.ylabel(\"Precision\")\nplt.title(\"Recall-Precision Curve\")\nplt.legend()\nplt.show()\n","97f5ac07":"from sklearn import metrics","d2d91b64":"auc_score=metrics.auc(recall, precision)*100\nprint('Logistic PR-AUC: %.3f'% auc_score)","64534cf6":"from sklearn.metrics import roc_curve","bdb70b45":"plt.figure(figsize=(10,8))\nplt.plot([0,1],[0,1], label=\"No Skill\")\nfpr, tpr,_ =roc_curve(y_test, y_test_prob)\nplt.plot(fpr, tpr, marker='',label=\"Logistic Regression\")\nplt.xlabel(\"False Positive rate\")\nplt.ylabel(\"True Positive rate\")\nplt.title(\"ROC-AUC curve\")\nplt.legend()\nplt.show()","ddcdf7ec":"roc_score=metrics.roc_auc_score(y_test, y_test_prob)*100\nprint('Logistic PR-AUC: %.3f'% roc_score)","d3ef135a":"# Conclusion\n* The accuracy is high with PR curve\n* SInce this is almost balanced dataset \n* Hence both metrics performs very well","2ed87518":"# Precision-Recall Curves and AUC\n* Precision-Recall Curves and AUC\n* It is calculated as the number of true positives divided by the total number of true positives and false positives.\n   >Precision = TruePositives \/ (TruePositives + FalsePositives)\n   >Recall = TruePositives \/ (TruePositives + FalseNegatives)","4c56059a":"# Loading the Breast Cancer Dataset","7d2e48e3":"# ROC-Score \n* To find out the accuracy using this metrics ","60c77056":"# ROC-AUC \n* This is the method toplot ROC-AUC curve\n* x- False Positive Rate\n* y- True Positive Rate\n* And plot","44caa4e2":"# Using Logistic Regression \n* It is a classification problem \n","f9dc341b":"# Recall-Precision Score \n* Method to find out the score of model using the metrics","3d7c8c1f":"# Breast Cancer \n* It has binary output\n* Loading the dataset from sklearn \n* Visualize the ROC and PR curve","ca7f175b":"* x- feature of the dataset\n* y- target of dataset","281c7904":"# Recall-Precision curve\n* Here \n* X- axis is Recall\n* Y-axis is Precision\n* Plot the curve","77c4f94c":"# ROC Curves and ROC AUC\n* An ROC curve (or receiver operating characteristic curve) is a plot that summarizes the performance of a binary classification model on the positive class.\n* The x-axis indicates the False Positive Rate and the y-axis indicates the True Positive Rate\n   >ROC Curve: Plot of False Positive Rate (x) vs. True Positive Rate (y).\n* The true positive rate is a fraction calculated as the total number of true positive predictions divided by the sum of the true positives and the false negatives (e.g. all examples in the positive class). The true positive rate is referred to as the sensitivity or the recall.\n  >TruePositiveRate = TruePositives \/ (TruePositives + False Negatives)\n  >FalsePositiveRate = FalsePositives \/ (FalsePositives + TrueNegatives)\n  ","7effe3fa":"# Predicted Value ","434186df":"# Fitting the model with Logistic Regression"}}