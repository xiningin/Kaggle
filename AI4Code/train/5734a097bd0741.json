{"cell_type":{"8bac2edf":"code","ee3dc28d":"code","d8f0a244":"code","b8e6b542":"code","d36bdaa4":"code","20b5827c":"code","9dcbc9a7":"code","6688fb7a":"code","6dbe6cd2":"code","ae6018d0":"code","084c053c":"code","59d64686":"code","86e41b73":"code","cfcb524c":"code","81160c14":"code","b842e63d":"code","7cbac3b1":"code","182d5da6":"code","adf1ce79":"markdown","eacb14a1":"markdown","8a3a6888":"markdown","553e8528":"markdown","93093700":"markdown","156912fd":"markdown","d0596812":"markdown","9d64ac19":"markdown","060e4842":"markdown","3ebd52ca":"markdown","acf9eab5":"markdown","b9e48056":"markdown","7e0dce68":"markdown","577fc944":"markdown","0bdf9128":"markdown","cdd5e99d":"markdown"},"source":{"8bac2edf":"import pandas as pd\nimport numpy as np\nimport os\nfrom glob import glob\nimport random\nimport matplotlib.pylab as plt\npd.set_option('display.max_colwidth', None)","ee3dc28d":"train_paths=[]\nfor name in glob('..\/input\/6000-store-items-images-classified-by-color\/train\/*'):\n    train_paths.append(name)","d8f0a244":"train_img=[]\ntrain_labels=[]\nfor i in train_paths:\n    l=i.split('\/')[-1]\n    for j in glob(i+'\/*'):\n        train_img.append(j)\n        train_labels.append(l)","b8e6b542":"len(train_img),len(train_labels)","d36bdaa4":"set(train_labels)","20b5827c":"img_path = pd.Series(train_img).astype(str)\nlabels=pd.Series(train_labels)\ndata = pd.concat([img_path,labels],axis=1)\ndata.sample(5)","9dcbc9a7":"import matplotlib.pyplot as plt\nimport seaborn as sns\nplt.figure(figsize=(15,5))\nsns.countplot(x=data[1])","6688fb7a":"from sklearn.model_selection import train_test_split\ntrain_set , test_set = train_test_split(data,test_size=0.2,random_state=11)\ntrain_set.shape,test_set.shape","6dbe6cd2":"import tensorflow as tf\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow import keras","ae6018d0":"train_gen = ImageDataGenerator(validation_split=0.25)\ntest_gen = ImageDataGenerator()\n\ntrain_data = train_gen.flow_from_dataframe(\n    dataframe = train_set,\n    x_col = 0,\n    y_col = 1,\n    target_size = (227,227),\n    color_mode = 'rgb',\n    class_mode = 'categorical',\n    shuffle = True,\n    subset = 'training',\n)\n\nval_data = train_gen.flow_from_dataframe(\n    dataframe = train_set,\n    x_col = 0,\n    y_col = 1,\n    target_size = (227,227),\n    color_mode = 'rgb',\n    class_mode = 'categorical',\n    shuffle = False,\n    subset = 'validation',\n)\n\ntest_data = test_gen.flow_from_dataframe(\n    dataframe = test_set,\n    x_col = 0,\n    y_col = 1,\n    target_size = (227,227),\n    color_mode = 'rgb',\n    class_mode = 'categorical',\n    shuffle = False,\n)","084c053c":"model = keras.models.Sequential([\n    keras.layers.Conv2D(filters=96, kernel_size=(11,11), strides=(4,4), activation='relu', input_shape=(227,227,3)),\n    keras.layers.BatchNormalization(),\n    keras.layers.MaxPool2D(pool_size=(3,3), strides=(2,2)),\n    keras.layers.Conv2D(filters=256, kernel_size=(5,5), strides=(1,1), activation='relu', padding=\"same\"),\n    keras.layers.BatchNormalization(),\n    keras.layers.MaxPool2D(pool_size=(3,3), strides=(2,2)),\n    keras.layers.Conv2D(filters=384, kernel_size=(3,3), strides=(1,1), activation='relu', padding=\"same\"),\n    keras.layers.BatchNormalization(),\n    keras.layers.Conv2D(filters=384, kernel_size=(3,3), strides=(1,1), activation='relu', padding=\"same\"),\n    keras.layers.BatchNormalization(),\n    keras.layers.Conv2D(filters=256, kernel_size=(3,3), strides=(1,1), activation='relu', padding=\"same\"),\n    keras.layers.BatchNormalization(),\n    keras.layers.MaxPool2D(pool_size=(3,3), strides=(2,2)),\n    keras.layers.Flatten(),\n    keras.layers.Dense(4096, activation='relu'),\n    keras.layers.Dropout(0.5),\n    keras.layers.Dense(4096, activation='relu'),\n    keras.layers.Dropout(0.5),\n    keras.layers.Dense(12, activation='softmax')\n])\nmodel.compile(\n    optimizer=tf.optimizers.Adam(lr=0.000001),\n    loss='categorical_crossentropy',\n    metrics=['accuracy','Recall']\n)","59d64686":"history = model.fit(train_data,epochs=40,validation_data=val_data)","86e41b73":"import matplotlib.pyplot as plt\n#plotting the Accuracy of test and training sets\nplt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('Model Accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='upper left')\nplt.show()","cfcb524c":"#plotting the loss of test and training sets\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('Model Loss')\nplt.ylabel('loss')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='upper left')\nplt.show()","81160c14":"y_pred = model.predict(test_data)\ny_pred = np.argmax(y_pred,axis=1)","b842e63d":"from sklearn.metrics import classification_report, confusion_matrix\nprint(classification_report(test_data.labels,y_pred))","7cbac3b1":"classes=[i for i in range(12)]\ncon_mat_df = pd.DataFrame(confusion_matrix(test_data.labels,y_pred),\n                     index = classes, \n                     columns = classes)","182d5da6":"import seaborn as sns\nfigure = plt.figure(figsize=(12, 6))\nsns.heatmap(con_mat_df, annot=True,cmap=plt.cm.cool,fmt='d')\nplt.tight_layout()\nplt.ylabel('Actual')\nplt.xlabel('Predicted')\nplt.show()","adf1ce79":"# Classification Report","eacb14a1":"# Getting the iamge paths as well as their image labels","8a3a6888":"# Epochs vs Loss","553e8528":"# Checking the unique image color labels","93093700":"# Image data generator for getting image data from dataset","156912fd":"# So checking if the number of image paths and their labels are same","d0596812":"# Detailed HeatMap","9d64ac19":"# Defining the model","060e4842":"# Converting the paths and labels to Dataframe","3ebd52ca":"# Epochs vs Accuracy","acf9eab5":"# Welcome to Image Classifier By Color","b9e48056":"# Conclusion","7e0dce68":"# It seems the images dataset is unbalanced","577fc944":"# Dividing the data into train ans test set","0bdf9128":"# Getting All image sub folders Paths","cdd5e99d":"**It seems that we got around 70% accuracy in test data. But considering the train accuracy and validation accuracy as well as the f1 scores for the classes, it is not certain**"}}