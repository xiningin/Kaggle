{"cell_type":{"7ecca578":"code","ef4d5d44":"code","06e0d1bf":"code","60a2176f":"code","1a97801b":"code","89d8f8b4":"code","520b799a":"code","b7f89830":"code","997f22b5":"code","8e018a75":"code","f9be2be5":"code","4da74cf5":"code","06fc1646":"code","a9fc3606":"code","fc34e993":"markdown","3e1aab72":"markdown","75694618":"markdown","159c9bef":"markdown","dee1d177":"markdown"},"source":{"7ecca578":"import numpy as np\nimport matplotlib.pyplot\nimport pandas as pd\nimport warnings\nwarnings.filterwarnings('ignore')","ef4d5d44":"# Import dataframe named dataset and displying top 10 students\ndataset = pd.read_csv('..\/input\/students-performance-in-exams\/StudentsPerformance.csv')\ndataset.head(10)","06e0d1bf":"#It is important to Organise and properly name the columns,i used the below code for that sake\ndataset.columns = ['Gender','Race_Ethnicity', 'Parental_Education', 'Lunch','Test_Preparation_Course', 'Math_Score', 'Reading_Score','Writing_Score']\ndataset.head(10)","60a2176f":"# Difine titles object as a list to make is easy to swap columns,that is to make Math_Score a \"Deep End variable\" (Dependent Variable)\ntitles = list(dataset.columns)\ntitles","1a97801b":"# Swaped places : Writing_Score with Math_Score,now [Math_Score is a Deep End Variable]\ntitles[5],titles[7] = titles[7],titles[5]\ndataset = dataset[titles]\ndataset.head()","89d8f8b4":"# Obtaining matrics of Features (x) and dependent variable (y) from the Dataframe\nx = dataset.iloc[:,:-1].values\ny = dataset.iloc[:,-1].values","520b799a":"print(x)","b7f89830":"print(y)","997f22b5":"from sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\nct = ColumnTransformer(transformers=[('encoder',OneHotEncoder(),[0,1,2,3,4])],remainder='passthrough')\nx = ct.fit_transform(x)\nprint(x)","8e018a75":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,train_size=0.20,random_state=0)","f9be2be5":"from sklearn.linear_model import LinearRegression\nregression = LinearRegression()\nregression.fit(x_train,y_train)","4da74cf5":"np.set_printoptions(precision=2)\npredictor = regression.predict(x_test)\nModel_Math_Score = predictor.reshape(len(x_test),1)\nActual_Math_Score = y_test.reshape(len(y_test),1)\nprint(np.concatenate((Actual_Math_Score,Model_Math_Score),1))","06fc1646":"from sklearn.metrics import r2_score\nprint((round(r2_score(y_train,regression.predict(x_train)),2))*100)","a9fc3606":"print('The model is 90% accurate,reasonable and looks as if its not bias and low variance')","fc34e993":"****Feature Engineering : From x, i decided to OneHotEncode column 1 to 5. Taking Care of dummy Variables","3e1aab72":"****Selecting the model as Linear regression and training the model","75694618":"**Splitting the Dataset for training and testing the model, 20% training and 80% training**","159c9bef":"****Comparing Math_Scores for Actual(x_training) and Predicted sets i.e Model Predictions","dee1d177":"****Testing Performance of the Model Using the Adjusted R squared"}}