{"cell_type":{"91408436":"code","ffa4a765":"code","784e1be4":"code","33f3763b":"code","90df3c63":"code","a453f018":"code","987158a0":"code","0d560c6b":"code","b4388b6c":"code","29e0dd35":"code","52c1ee0d":"code","10e0f191":"code","e9f390bd":"code","bdad3544":"code","f1c0d237":"code","6727503a":"code","7ac8faaf":"code","810966c4":"code","7c2f83df":"code","bd7c6933":"code","6ecb996f":"markdown","42de862f":"markdown","b3c1e05b":"markdown","6da3420a":"markdown","eecddf77":"markdown","9959a696":"markdown","8721aa7c":"markdown","c20b2539":"markdown","ad6b5aca":"markdown","d059babd":"markdown","ca2d3ec7":"markdown","0ae30ee3":"markdown","b5819029":"markdown","ca955f1d":"markdown","76bd21cc":"markdown","7a33f1c8":"markdown","dad41f1c":"markdown","4607f3f7":"markdown"},"source":{"91408436":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ffa4a765":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.set_style('whitegrid')","784e1be4":"data=pd.read_csv('..\/input\/all-space-missions-from-1957\/Space_Corrected.csv')\ndata.head()","33f3763b":"#removeing unwanted columns\ndata.drop(['Unnamed: 0','Unnamed: 0.1'],axis=1,inplace=True)\ndata.head()","90df3c63":"#converting to datetime obj\ndata['DateTime']=pd.to_datetime(data['Datum'])\n#Dropping the datum column\ndata.drop(['Datum'],axis=1,inplace=True)\ndata.head(5)","a453f018":"data['Year']=data['DateTime'].apply(lambda x: x.year)\ndata.head()","987158a0":"data.drop(['DateTime'],axis=1,inplace=True)","0d560c6b":"data.head()","b4388b6c":"data['Country']=data['Location'].apply(lambda x: x.split(', ')[-1])\ndata.head()","29e0dd35":"data.drop(['Location'],axis=1,inplace=True)","52c1ee0d":"data.head()","10e0f191":"sns.heatmap(data.isnull(),yticklabels=False)   ","e9f390bd":"data.drop([' Rocket','Detail'],axis='columns',inplace=True)\ndata.head()","bdad3544":"data.head()","f1c0d237":"def show_values_on_bars(axs, h_v=\"v\", space=0.4):\n    def _show_on_single_plot(ax):\n        if h_v == \"v\":\n            for p in ax.patches:\n                _x = p.get_x() + p.get_width() \/ 2\n                _y = p.get_y() + p.get_height()\n                value = int(p.get_height())\n                ax.text(_x, _y, value, ha=\"center\") \n        elif h_v == \"h\":\n            for p in ax.patches:\n                _x = p.get_x() + p.get_width() + float(space)\n                _y = p.get_y() + p.get_height()\n                value = int(p.get_width())\n                ax.text(_x, _y, value, ha=\"left\")\n\n    if isinstance(axs, np.ndarray):\n        for idx, ax in np.ndenumerate(axs):\n            _show_on_single_plot(ax)\n    else:\n        _show_on_single_plot(axs)","6727503a":"fig=plt.figure(figsize=(9,16))\naxes=fig.add_axes([0,0,1,1])\nsns.countplot(y='Company Name',data=data,order=data['Company Name'].value_counts().index)\nshow_values_on_bars(axes, \"h\", 0.3)\naxes.set_title('Company vs Launches',fontsize=20)\naxes.set_xlabel('Launches',fontsize=16)\naxes.set_ylabel('Company Name',fontsize=16)\n","7ac8faaf":"fig=plt.figure(figsize=(9,16))\naxes=fig.add_axes([0,0,1,1])\nsns.countplot(y='Country',data=data,order=data['Country'].value_counts().index)\nshow_values_on_bars(axes, \"h\", 0.3)\naxes.set_title('Country v\/s Launches',fontsize=20)\naxes.set_xlabel('Launches',fontsize=16)\naxes.set_ylabel('Country',fontsize=16)\n","810966c4":"fig=plt.figure(figsize=(5,5))\naxes=fig.add_axes([0,0,1,1])\nsns.countplot(x='Status Rocket',data=data,order=data['Status Rocket'].value_counts().index)\naxes.set_title('Rocket Status',fontsize=20)\naxes.set_xlabel('Status',fontsize=16)\naxes.set_ylabel('Count',fontsize=16)\nshow_values_on_bars(axes, \"v\", 0.3)\n","7c2f83df":"fig=plt.figure(figsize=(5,5))\naxes=fig.add_axes([0,0,1,1])\nsns.countplot(x='Status Mission',data=data,order=data['Status Mission'].value_counts().index)\naxes.set_title('Mission Status',fontsize=20)\naxes.set_xlabel('Status',fontsize=16)\naxes.set_ylabel('Count',fontsize=16)\nshow_values_on_bars(axes, \"v\", 0.3)\n","bd7c6933":"fig=plt.figure(figsize=(20,20))\naxes=fig.add_axes([0,0,1,1])\nsns.countplot(y='Year',data=data)\naxes.set_title('Launch by Year',fontsize=20)\naxes.set_xlabel('Launches',fontsize=16)\naxes.set_ylabel('Year',fontsize=16)\nshow_values_on_bars(axes, \"h\", 0.3)","6ecb996f":"per Year launches","42de862f":"# **Visualizing the data**","b3c1e05b":"Country wise Launches","6da3420a":"checking the null values by heatmap","eecddf77":"Reading the Data","9959a696":"Data cleaning \/ pre - processing","8721aa7c":"Space company Launches","c20b2539":"Dropping the date time column\n","ad6b5aca":"This is the function for  labeling horizontal barplot graph\nparameters: \n\nh_v - : Whether the barplot is horizontal or vertical. \"h\" represents the horizontal barplot, \"v\" represents the vertical barplot.\n\nspace - :The space between value text and the top edge of the bar. Only works for horizontal mode.","d059babd":"Drooping the Location column ","ca2d3ec7":"Adding year column","0ae30ee3":"adding to datetime column to extract year ","b5819029":"Importing Lib","ca955f1d":"Rocket status vs count","76bd21cc":"as we can see the rocket column containmore then 70% null values hence this is useless now \nso we are going to srop Rocket and Detail column","7a33f1c8":"Thank you.\ni m newbie to this \njust learning basics","dad41f1c":"Mission status Count","4607f3f7":"Location is too specific , thats why we need to add country column to simplify the data"}}