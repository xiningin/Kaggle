{"cell_type":{"7a35e287":"code","fd877b1c":"code","036dba0b":"code","70cf382c":"code","fb0ecc0e":"code","9e961026":"code","2b8a604e":"code","fac04d03":"code","1f94922f":"code","d5e5e1a6":"code","f9d28523":"code","a627b13a":"markdown","ffa5bc84":"markdown","a8b0a191":"markdown"},"source":{"7a35e287":"! pip install ..\/input\/mmdetectionv260\/addict-2.4.0-py3-none-any.whl","fd877b1c":"! pip install ..\/input\/mmdetectionv260\/mmcv_full-latesttorch1.6.0cu102-cp37-cp37m-manylinux1_x86_64.whl","036dba0b":"! pip install ..\/input\/mmdetectionv260\/mmpycocotools-12.0.3-cp37-cp37m-linux_x86_64.whl","70cf382c":"! pip install ..\/input\/mmdetectionv260\/mmdet-2.6.0-py3-none-any.whl","fb0ecc0e":"import copy\nimport os.path as osp\nfrom glob import glob\nfrom tqdm import tqdm\n\n# Check Pytorch installation\nimport torch, torchvision\nprint(torch.__version__, torch.cuda.is_available())\n\n# Check MMDetection installation\nimport mmdet\nprint(mmdet.__version__)\n\n# Check mmcv installation\nimport mmcv\nfrom mmcv.ops import get_compiling_cuda_version, get_compiler_version\nfrom mmcv import Config\nprint(get_compiling_cuda_version())\nprint(get_compiler_version())\n\nfrom mmdet.datasets import build_dataset\nfrom mmdet.models import build_detector\nfrom mmdet.datasets.builder import DATASETS\nfrom mmdet.datasets.custom import CustomDataset\nfrom mmdet.apis import train_detector, set_random_seed, init_detector, inference_detector\n\nfrom pycocotools.coco import COCO\nfrom pycocotools.cocoeval import COCOeval\n\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nimport nflimpact","9e961026":"# Specify the path to model config and checkpoint file\nconfig_file = '..\/input\/nflbaselinecascadercnn\/cascade_rcnn_r50_fpn.py'\ncheckpoint_file = '..\/input\/nflbaselinecascadercnn\/epoch_9.pth'\n\n# build the model from a config file and a checkpoint file\nmodel = init_detector(config_file, checkpoint_file, device='cuda:0')","2b8a604e":"test_lists = glob('..\/input\/nfl-impact-detection\/test\/*.mp4')","fac04d03":"gameKey = []\nplayID = []\nview = []\nvideo_name = []\nframe_num = []\nleft = []\nwidth = []\ntop = []\nheight = []\n\n\nfor test_list in tqdm(test_lists):\n    file_name = test_list\n    video = mmcv.VideoReader(file_name)\n    \n    for i, frame in enumerate(video):\n        result = inference_detector(model, frame)\n        for j in range(len(result[0])):\n            gameKey.append(int(file_name.split('_')[0].split('\/')[-1]))\n            playID.append(int(file_name.split('_')[1]))\n            view.append(file_name.split('_')[2][:-4])\n            video_name.append(file_name.split('\/')[-1])\n            frame_num.append(i+1)\n            left.append(int(result[0][j][0]))\n            top.append(int(result[0][j][1]))\n            width.append(int(abs(result[0][j][2] - result[0][j][0])))\n            height.append(int(abs(result[0][j][3] - result[0][j][1])))","1f94922f":"submission = pd.DataFrame({'gameKey': gameKey,\n             'playID': playID,\n             'view': view,\n             'video': video_name,\n             'frame': frame_num,\n             'left': left,\n             'width': width,\n             'top': top,\n             'height': height}\n             )","d5e5e1a6":"submission.head()","f9d28523":"env = nflimpact.make_env()\nenv.predict(submission) ","a627b13a":"# Install MMdetection from scratch\n\n**Version info.**\n\n- MMdetection 2.6.0\n- mmcv-full 1.2.0, torch 1.6, cu102\n\nBecause this Competetion is [Notebook Competetion](https:\/\/www.kaggle.com\/docs\/competitions#notebooks-only-FAQ), we need to inference .mp4 video without interent. \n\nSo I made `*.whl` files to install MMdetection, mmcv-full without internet. you can use this files from [mmdetection-v2.6.0 dataset](https:\/\/www.kaggle.com\/jinssaa\/mmdetectionv260).","ffa5bc84":"# Introduction\n\n**Main Topic**\n\nThis notebook is for **Inference using [MMdetection](https:\/\/github.com\/open-mmlab\/mmdetection) without internet** for submition.\n\nHope to be help to someone who need.\n\n**References**\n\n**Chris Deotte, Grand master** : [How to Install Without Internet](https:\/\/www.kaggle.com\/c\/severstal-steel-defect-detection\/discussion\/113195)\n\n[**MMdetection Official Documents**](https:\/\/mmdetection.readthedocs.io\/)\n","a8b0a191":"## Model build\nIn this notebook, I used cascade_rcnn_r50_fpn for baseline. I trained 9epochs and I got a `0.0601` public LB score.\nconfig_file is from [nfl_baseline_cascade_rcnn dataset](https:\/\/www.kaggle.com\/jinssaa\/nflbaselinecascadercnn) which is that I made for this Notebook.\n\nI saved 9epochs pretrained model with configs"}}