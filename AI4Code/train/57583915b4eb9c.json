{"cell_type":{"c6e8c9f5":"code","c82f7f5d":"code","1fd8885c":"code","9ef75266":"markdown"},"source":{"c6e8c9f5":"#import stuff\nimport numpy as np, pandas as pd, matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns; sns.set()","c82f7f5d":"#function to write words\ndef make_hello(N=100, rseed=42):\n    #define an image (this will be used later)\n    fig, ax = plt.subplots(figsize=(5,1))\n    fig.subplots_adjust(left=0,right=1,bottom=0,top=1)\n    ax.axis('off')\n    #ax.text(0.5,0.4, 'Kaggle', va='center', ha='center',weight='bold', size=85)\n    ax.text(0.5,0.4, 'Kaggle', ha='center',weight='bold', size=50)\n    \n    #save the image\n    fig.savefig('Kaggle.png')\n    plt.close(fig)\n    \n    from matplotlib.image import imread\n    data = imread('Kaggle.png')[::-1, :, 0].T\n    rng = np.random.RandomState(rseed)\n    X = rng.rand(4 * N, 2)\n    i, j = (X * data.shape).astype(int).T\n    mask = (data[i, j] < 1)\n    X = X[mask]\n    X[:,0] *= (data.shape[0] \/ data.shape[1])\n    X = X[:N]\n    return X[np.argsort(X[:, 0])]","1fd8885c":"X = make_hello(10000)\ncolorize = dict(c=X[:,0], cmap=plt.cm.get_cmap('rainbow', 5))\nplt.scatter(X[:,0],X[:,1], **colorize)\nplt.axis('equal');","9ef75266":"Welcome!!\n\nThis notbook will teach you how to creat words with isometric mapping, and how to make different custom words. Happy coding!\n\nConnect with the community: https:\/\/discord.gg\/2M3q7GkCCC\n\nPlease upvote!"}}