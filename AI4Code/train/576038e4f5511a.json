{"cell_type":{"e1f57374":"code","855c6305":"code","4bb9fa7a":"code","282712ae":"code","5d99fdcd":"code","1f457237":"code","194a29ad":"code","e0e6f406":"code","47da96af":"code","6d7b156b":"code","0e0de82a":"code","9efa7599":"code","bd7c7e82":"code","aafb2d77":"code","74021695":"code","91c4f1f9":"code","51cb73b3":"code","7e820b3b":"code","2b92d26a":"code","d65f73a0":"code","fbd9d2fb":"code","6605343a":"code","5fb8ff1c":"code","0ab4319b":"code","8881e92c":"code","1a995e58":"code","16f8b17a":"code","38ea81af":"code","a8eeed58":"code","0884475e":"code","a685143c":"code","aa64cbb4":"code","aab9a9e8":"code","c6e40387":"code","344007bf":"code","29e0ff31":"code","0af27243":"code","77b41d65":"code","ce3e88ac":"code","3dabefa9":"code","f7e3d0d8":"code","c5c697e5":"code","cfefd67a":"markdown","19283311":"markdown"},"source":{"e1f57374":"!pip install catboost","855c6305":"import numpy as np\nimport pandas as pd\nfrom pandas_profiling import ProfileReport\n#import libraries for visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\npd.options.display.max_columns = 100\n# libraries for machine learning\nfrom sklearn.model_selection import train_test_split \nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score","4bb9fa7a":"amsterdam_airbnb = pd.read_csv('..\/input\/dphi-amsterdam-airbnb-data\/airbnb_listing_train.csv')","282712ae":"amsterdam_airbnb.columns","5d99fdcd":"amsterdam_airbnb.info()","1f457237":"amsterdam_airbnb.head()","194a29ad":"amsterdam_airbnb.describe()","e0e6f406":"amsterdam_airbnb.isnull().sum()","47da96af":"#dropping name and host_name as we have id and host_id\n#dropping neighbourhood_group as entire column has missing value\namsterdam_airbnb.drop(['name','host_name','neighbourhood_group'], axis=1, inplace =True)","6d7b156b":"#dropping last_review and reviews_per_month as we have number_of_reviews which is more relevant compare to previous two columns\namsterdam_airbnb.drop(['last_review','reviews_per_month'], axis=1, inplace =True)","0e0de82a":"#convert to category dtype\namsterdam_airbnb['neighbourhood'] = amsterdam_airbnb['neighbourhood'].astype('category')","9efa7599":"#use .cat.codes to create new colums with encoded value\namsterdam_airbnb['neighbourhood'] = amsterdam_airbnb['neighbourhood'].cat.codes","bd7c7e82":"amsterdam_airbnb['neighbourhood'].value_counts()","aafb2d77":"amsterdam_airbnb['room_type'].value_counts()","74021695":"#convert categorical variable into dummy\/indicator variables for ML\namsterdam_airbnb = pd.get_dummies(amsterdam_airbnb, columns=['room_type'])","91c4f1f9":"#Convert longitude and latitude into cartesian coordinates. Assume the earth as sphere not ellipsoid\nR = 6371000 #Approximate mean radius of earth (in m)\n #lons and lats must be in radians\nlon,lat = map(np.radians, [amsterdam_airbnb['longitude'], amsterdam_airbnb['latitude']])\n\n# 'Single-point' Haversine formula\na = np.sin(lat\/2)**2 + np.cos(lat) * np.sin(lon\/2)**2\ndistance = 2 * R * np.arcsin(np.sqrt(a))\n\n#creating new column distance and dropping longitude and latitude column\namsterdam_airbnb['distance'] = distance\namsterdam_airbnb.drop(['latitude', 'longitude'], axis = 1, inplace = True)","51cb73b3":"amsterdam_airbnb.columns","7e820b3b":"amsterdam_airbnb.dtypes","2b92d26a":"amsterdam_airbnb.info()","d65f73a0":"amsterdam_airbnb.groupby('price').mean()","fbd9d2fb":"X = amsterdam_airbnb.drop('price', axis = 1)\ny = amsterdam_airbnb['price']","6605343a":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=5)","5fb8ff1c":"from catboost import CatBoostRegressor\nfrom sklearn.model_selection import GridSearchCV","0ab4319b":"model = CatBoostRegressor(random_seed = 42 )\nparameters = {'depth'         : [6,8,10,21],\n                  'learning_rate' : [0.01, 0.05, 0.1],\n                  'iterations'    : [30, 50, 100]\n              }\ngrid = GridSearchCV(estimator=model, param_grid = parameters, cv = 2, n_jobs=-1)\ngrid.fit(X_train, y_train)\n","8881e92c":"pred = grid.predict(X_test)","1a995e58":"grid.score(X_test, y_test)","16f8b17a":"r2_score(y_test, pred)","38ea81af":"#evaluating the performance of the model\n#MAE\nprint(mean_absolute_error(y_test, pred), end='\\n')\n#MSE\nprint(mean_squared_error(y_test, pred), end='\\n')\n#RMSE\nprint(np.sqrt(mean_squared_error(y_test, pred)))","a8eeed58":"test_new = pd.read_csv('..\/input\/dphi-amsterdam-airbnb-data\/airbnb_listing_validate.csv')","0884475e":"test_new.columns","a685143c":"test_new.info()","aa64cbb4":"test_new.drop(['name','host_name','neighbourhood_group', 'last_review','reviews_per_month'], axis=1, inplace =True)","aab9a9e8":"#convert to category dtype\ntest_new['neighbourhood'] = test_new['neighbourhood'].astype('category')\ntest_new.dtypes","c6e40387":"#use .cat.codes to create new colums with encoded value\ntest_new['neighbourhood'] = test_new['neighbourhood'].cat.codes","344007bf":"#convert categorical variable into dummy\/indicator variables for ML\ntest_new = pd.get_dummies(test_new, columns=['room_type'])","29e0ff31":"#Convert longitude and latitude into cartesian coordinates. Assume the earth as sphere not ellipsoid\nR = 6371000 #Approximate mean radius of earth (in m)\n #lons and lats must be in radians\nlon,lat = map(np.radians, [test_new['longitude'], test_new['latitude']])\n\n# 'Single-point' Haversine formula\na = np.sin(lat\/2)**2 + np.cos(lat) * np.sin(lon\/2)**2\ndistance = 2 * R * np.arcsin(np.sqrt(a))\n\n#creating new column distance and dropping longitude and latitude column\ntest_new['distance'] = distance\ntest_new.drop(['latitude', 'longitude'], axis = 1, inplace = True)","0af27243":"test_new.columns","77b41d65":"test_new.dtypes","ce3e88ac":"test_new.info()","3dabefa9":"newmodel = CatBoostRegressor(random_seed = 42 )\nnewparameters = {'depth'         : [6,8,10,21],\n                  'learning_rate' : [0.01, 0.05, 0.1],\n                  'iterations'    : [30, 50, 100]\n              }\nnewgrid = GridSearchCV(estimator=newmodel, param_grid = newparameters, cv = 2, n_jobs=-1)\nnewgrid.fit(X, y)","f7e3d0d8":"testnew_pred = newgrid.predict(test_new)","c5c697e5":"res = pd.DataFrame(testnew_pred) #preditcions are nothing but the final predictions of your model on input features of your new unseen test data\nres.index = test_new.index # its important for comparison # its important for comparison. Here \"test_new\" is your new test dataset\nres.index = test_new['id'] # format for Kaggle\nres.columns = ['price']\n# To download the csv file locally\nres.to_csv('\/kaggle\/working\/sample_submission.csv')         ","cfefd67a":"# Context\n\nAirbnb, Inc. is an American vacation rental online marketplace company based in San Francisco, California, United States. Airbnb offers arrangements for lodging, primarily homestays, or tourism experiences. The company does not own any of the real estate listings, nor does it host events; it acts as a broker, receiving commissions from each booking. [Reference](<https:\/\/en.wikipedia.org\/wiki\/Airbnb>)\n\nSince 2008, guests and hosts have used Airbnb to travel in a more unique, personalized way.\n\n# Objective\n\nImagine you are Data Scientist who would help find the price for lodging or homestays based on different attributes mentioned in their listings. Oh wait, what are listings? Listings can include written descriptions, photographs with captions, and a user profile where potential guests can get to know a bit about the hosts.\n\nAnd you are given the listings of one of the most popular cities in central Europe: Amsterdam. Now your job is to build a machine learning model that will automatically predict the price for lodging or homestays.\n\n# Acknowledgement\n\nThis dataset is part of Airbnb Inside, and the original source can be found [here](<http:\/\/insideairbnb.com\/get-the-data.html>).","19283311":"# Feature Description\n\n|Column Name|Description|\n|:----|:----|\n|id|The id of each lodge or home or listing|\n|name|The name\/description of the lodge\/home|\n|host_id|The id of the host|\n|host_name|Name of the host|\n|neighbourhood|Name of the neighbourhood place|\n|neighbourhood_group|Group in the neighbourhood|\n|latitude|Latitude of the location|\n|longitude|Longitude of the location|\n|room_type|Type of the room that consumer booked, for example, private room or an entire home, etc.|\n|minimum_nights|The minimum number of nights customer will stay|\n|number_of_reviews|Number of reviews given to the lodge\/home|\n|last_review|The date of the last review given to the lodge\/home|\n|reviews_per_month|Average reviews per month|\n|calculated_host_listings_count|The count of the listing that each host has|\n|availability_365|The number of days (out of 365 days) for which lodge\/home is available|\n|price|Price for the lodging\/homestays in USD - the target variable|\n\n"}}