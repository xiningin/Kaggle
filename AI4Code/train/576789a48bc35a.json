{"cell_type":{"cd4ca404":"code","f3a26a74":"code","56a34dba":"code","8c1b7404":"code","18d7ec69":"code","8da076a4":"code","0f94ef63":"code","66841b69":"code","63673d8a":"code","2f9b7475":"code","40bbeaab":"code","67d4078c":"code","9f0d1522":"code","206d281e":"code","bc6e4cd3":"code","16d24e47":"code","429268a2":"code","42de51a2":"code","eb19eb10":"code","e21ccf9c":"code","65bedde6":"code","166c5c0c":"code","8134fcd6":"code","ce36a94b":"code","3abb1f56":"code","5b3d0e9a":"code","f0b1fd3a":"code","13479e65":"code","7656a472":"code","1e9e937e":"code","9549f5a3":"code","d57eef4a":"code","23ba4240":"code","c48fc3cf":"code","a3523dc2":"code","660ab584":"code","2ca264fc":"code","4cafa0f6":"code","1c01d7d6":"code","5eb8d967":"code","4926ea8b":"code","bb5f4fda":"code","3cf6c3b7":"code","bd8bcd31":"code","0e981b9a":"code","b07d3241":"code","69116be6":"code","0851faa7":"code","b951fb32":"code","7bd41f33":"code","889bd0f0":"code","bdf29fc8":"code","43b1f62b":"code","ffa77f08":"code","22bcb7f9":"code","c2cf72b5":"code","56241464":"markdown","043ecab8":"markdown","387abc33":"markdown","a7d0cd84":"markdown","e76a08a3":"markdown","944bad7f":"markdown","bf908bf3":"markdown","8068f5ef":"markdown","79e71f57":"markdown","d0ebfe65":"markdown","f4d95f42":"markdown","46cdeed9":"markdown","a716eaf4":"markdown","e1112609":"markdown","cf866f36":"markdown","dfce7c15":"markdown","71813118":"markdown","460fd01e":"markdown","26ffff76":"markdown","4f756f1c":"markdown"},"source":{"cd4ca404":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f3a26a74":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px","56a34dba":"#Import library which need for prediciton\n\nimport numpy as np                     #Pandas is used to analyze data\nimport pandas as pd                    #This library contains a large number of mathematical, algebraic, and transformation functions\nfrom sklearn import metrics\n#matplotlib inline sets the backend of matplotlib to the 'inline' backend\n%matplotlib inline                     \nimport matplotlib.pyplot as plt        # Used for Visualization of data\nfrom sklearn.model_selection import train_test_split         # Used for splitting data into train data and test data","8c1b7404":"import pandas as pd","18d7ec69":"data =  pd.read_csv(\"..\/input\/saham-mnc-bank-2014-2021-indonesia-stock\/SahamMNCBank.csv\")","8da076a4":"data","0f94ef63":"stock = data","66841b69":"stock","63673d8a":"stock.shape","2f9b7475":"stock.info()","40bbeaab":"#change the date format \n\nstock['Date'] = pd.to_datetime(stock.Date)","67d4078c":"stock.info()","9f0d1522":"stock.head()","206d281e":"stock.isnull().sum()","bc6e4cd3":"# find categorical variables\n# https:\/\/colab.research.google.com\/drive\/1IQtBTvTv0qA9TQuntPbadPHA6m2xOYoR#scrollTo=XJWmOghZSbs-\n\ncategorical = [var for var in stock.columns if stock[var].dtype=='O']\n\n# atau menggunakan != 'O'] untuk mencari O object atau bukan di dalam data pandas dataframe\n\nprint('There are {} categorical variables\\n'.format(len(categorical)))\n\nprint('The categorical variables are :', categorical)","16d24e47":"#remove unnecessary columns from the stock dataset (because only categorize on Change column on stock data market )\n\nlist_drop = ['Change']\nstock.drop(list_drop,axis = 1, inplace = True)","429268a2":"# find categorical variables\n# https:\/\/colab.research.google.com\/drive\/1IQtBTvTv0qA9TQuntPbadPHA6m2xOYoR#scrollTo=XJWmOghZSbs-\n\ncategorical = [var for var in stock.columns if stock[var].dtype=='O']\n\n# atau menggunakan != 'O'] untuk mencari O object atau bukan di dalam data pandas dataframe\n\nprint('There are {} categorical variables\\n'.format(len(categorical)))\n\nprint('The categorical variables are :', categorical)","42de51a2":"#change Last koma to numerical\nstock.replace(',','', regex=True, inplace=True)","eb19eb10":"stock = stock.replace('#DIV\/0!', np.nan)","e21ccf9c":"stock['Interval_Open_From_LastDay(%)'] = stock['Interval_Open_From_LastDay(%)'].fillna(0)","65bedde6":"# convert Volume column Object to numeric\nstock[\"Volume\"] = pd.to_numeric(stock[\"Volume\"])\nstock[\"Value(T)\"] = pd.to_numeric(stock[\"Value(T)\"])","166c5c0c":"# convert Interval_Open_From_LastDay(%)  column Object to numeric \nstock[\"Interval_Open_From_LastDay(%)\"] = pd.to_numeric(stock[\"Interval_Open_From_LastDay(%)\"])","8134fcd6":"# find categorical variables\n# https:\/\/colab.research.google.com\/drive\/1IQtBTvTv0qA9TQuntPbadPHA6m2xOYoR#scrollTo=XJWmOghZSbs-\n\ncategorical = [var for var in stock.columns if stock[var].dtype=='O']\n\n# atau menggunakan != 'O'] untuk mencari O object atau bukan di dalam data pandas dataframe\n\nprint('There are {} categorical variables\\n'.format(len(categorical)))\n\nprint('The categorical variables are :', categorical)","ce36a94b":"stock.info()","3abb1f56":"#Visualize the Open price data\n\nplt.figure(figsize=(16,8))\nplt.title('AXISBANK')\nplt.xlabel('Date')\nplt.ylabel('Close price IND (\u20b9)')\nplt.plot(stock['Open'])\nplt.show()","5b3d0e9a":"# Identification outliers data from all features\n\nfig = plt.figure(figsize=(30,15))\nsns.boxplot(data = stock)","f0b1fd3a":"import missingno as msno\nmsno.matrix(stock)","13479e65":"# describe() : is used to view some basic statistical details like percentile,mean, std, etc\n\nstock.describe()","7656a472":"# Instead of Writing all the histogram seprately we can use\n\nstock.hist(figsize=(12,8),bins=50)","1e9e937e":"# Checking for Null Values using isnull() it return whole dataset with boolean value (False- Notnull value and True- Null Value)\n\nstock.isnull().sum()","9549f5a3":"\n# We are just plotting  of Open value\n\nstock['Open'].plot(figsize=(12,8))","d57eef4a":"#here we created a dependent and independent variables\n\nX = stock[['Open','High','Low','Volume']]\ny = stock['Close']","23ba4240":"# Spliting data into train data and test data\n\nX_train,X_test,y_train,y_test=train=train_test_split(X,y,random_state=0)","c48fc3cf":"# Printing the size of X training dataset\nX_train.shape","a3523dc2":"X_test.shape","660ab584":"# Printing the size of Y training dataset\ny_train.shape","2ca264fc":"# Printing the size of Y testing dataset\ny_test.shape","4cafa0f6":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import confusion_matrix, accuracy_score","1c01d7d6":"# Creating instance of LinearRegression\nmodel=LinearRegression()","5eb8d967":"# Fitting the data in the LinearRegression \nmodel.fit(X_train,y_train)","4926ea8b":"#calculate the Regression coefficients values\nprint(model.coef_)","bb5f4fda":"print(model.intercept_)","3cf6c3b7":"predicted = model.predict(X_test)","bd8bcd31":"print(X_test)","0e981b9a":"predicted.shape","b07d3241":"dframe = pd.DataFrame(y_test,predicted)","69116be6":"dfr = pd.DataFrame({'Actual':y_test,'predicted':predicted})","0851faa7":"dfr","b951fb32":"dfr.head()","7bd41f33":"\nmodel.score(X_test,y_test)","889bd0f0":"import math","bdf29fc8":"print('Mean Absolute Error:',metrics.mean_absolute_error(y_test,predicted))","43b1f62b":"print('Mean Squared Error:',metrics.mean_squared_error(y_test,predicted))","ffa77f08":"print('Root Mean Squared Error:',math.sqrt(metrics.mean_squared_error(y_test,predicted)))","22bcb7f9":"graph=dfr.head(25)","c2cf72b5":"graph.plot(kind = 'bar')","56241464":"# 6. Model Building","043ecab8":"# **5. Data Preprocessing**","387abc33":"# **1. Workflow**\n\nMNC Bank Stock Data ---> Data Preprocessing ---> Train Test Split ---> Model Fiting ---> Prediction","a7d0cd84":"# **Table of Content :**\n1. WorkFlow\n2. What is Linear Regression\n3. Importing Library\n4. Loading Dataset\n5. Data Preprocessing\n6. Model Building\n7. Model Evaluation\n8. Conclusion","e76a08a3":"Conclusion :\nThis Algorithm performed well\n\nsimple linear regression means that we can predict a dependent variable from an independent one, so whenever we need to know from the beginning each time we add information\nWe created custom input and tested it, in Building Predictive System section it also worked properly\n\n","944bad7f":"# **2. What is Linear Regression?**\nLinear Regression is a machine learning algorithm based on *supervised learning.*\nIt is a statistical method that is used for predictive analysis. Linear regression is useful for finding relationship between two continuous variables. One is independent variable and other is dependent variable. Linear regression makes predictions for continuous or real or numeric variables such as sales, salary, age, etc","bf908bf3":"# **7. Data Evaluation******","8068f5ef":"# **3. Importing Library**","79e71f57":"![image.png](attachment:6d60962f-e60f-46ec-80c7-feb7ec1228b8.png)","d0ebfe65":"> after we training data we must to compare value from predict value form machine learning and data testing 30% to test its truth","f4d95f42":"Column there is no object type column filled anymore","46cdeed9":"30% for machine testing the algorithm","a716eaf4":"> the code below to show you spliting data training and data testing for algorithm learning 70% bu data and 30% data for testing after machine learn from previous data*","e1112609":"> Visualization to show missing value using missingno library","cf866f36":"**4. Loading Dataset**","dfce7c15":"See this data show much my data is leaning to the left, because the mean mean lower than median value","71813118":"> see machine learning can learning 70% dataset after tested using 30% data testing from X_test  we found the value very satisfactory, machine can learn well.","460fd01e":"![Screen Shot 2021-09-30 at 7.10.08 PM.png](attachment:73f24930-9264-4c5b-8674-8435d336ffd9.png)","26ffff76":"70% data for machine learning ","4f756f1c":"Converting cateogerical value to numeric value"}}