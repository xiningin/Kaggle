{"cell_type":{"096d7dd2":"code","33274671":"code","63288ede":"code","a119927f":"code","4bf7119b":"code","f2f43a76":"code","5d904d39":"code","1aac24e4":"code","f63791d1":"code","2c3bb3f3":"code","30842264":"markdown","fa6e9db5":"markdown","dd4a7a5d":"markdown","69d8acd5":"markdown","b01191af":"markdown","08ed3c62":"markdown","4f1ab651":"markdown","f3e7be35":"markdown","d9609730":"markdown","8a99731a":"markdown","860c959c":"markdown","75bb31c2":"markdown","c96070c4":"markdown","40166295":"markdown","2106349f":"markdown","4f66a064":"markdown","0a89584a":"markdown"},"source":{"096d7dd2":"import pandas as pd\nimport os\nimport matplotlib.pyplot as plt","33274671":"dataset_path = '\/kaggle\/input\/seoul-bike-rental-ai-pro-iti\/'\n\ndf = pd.read_csv(os.path.join(dataset_path, 'train.csv'))\n\nprint(\"The shape of the dataset is {}.\\n\\n\".format(df.shape))\n\ndf.head()","63288ede":"df.drop(columns='ID').describe()","a119927f":"from sklearn.model_selection import train_test_split\n\ntrain_df, val_df = train_test_split(df, test_size=0.2, random_state=42) # Try adding `stratify` here\n\nX_train = train_df.drop(columns=['ID', 'y'])\ny_train = train_df['y']\n\nX_val = val_df.drop(columns=['ID', 'y'])\ny_val = val_df['y']","4bf7119b":"# This cell is used to select the numerical features only. IT SHOULD BE REMOVED AS YOU DO YOUR WORK.\nX_train = X_train[['Hour', 'Temperature(\ufffdC)', 'Humidity(%)', 'Wind speed (m\/s)', 'Visibility (10m)','Dew point temperature(\ufffdC)', 'Solar Radiation (MJ\/m2)','Rainfall(mm)', 'Snowfall (cm)']]\nX_val = X_val[['Hour', 'Temperature(\ufffdC)', 'Humidity(%)', 'Wind speed (m\/s)', 'Visibility (10m)','Dew point temperature(\ufffdC)', 'Solar Radiation (MJ\/m2)','Rainfall(mm)', 'Snowfall (cm)']]","f2f43a76":"from sklearn.ensemble import RandomForestRegressor\n\n# Create an instance of the classifier\nRegressor = RandomForestRegressor(max_depth=2, random_state=0)\n\n# Train the classifier\nRegressor = Regressor.fit(X_train, y_train)","5d904d39":"print(\"The accuracy of the Regressor on the validation set is \", (Regressor.score(X_val, y_val)))","1aac24e4":"test_df = pd.read_csv(os.path.join(dataset_path, 'test.csv'))\n\nprint(test_df.shape)\n\ntest_df.head()","f63791d1":"X_test = test_df.drop(columns=['ID'])\n\n# You should update\/remove the next line once you change the features used for training\nX_test = X_test[['Hour', 'Temperature(\ufffdC)', 'Humidity(%)', 'Wind speed (m\/s)', 'Visibility (10m)','Dew point temperature(\ufffdC)', 'Solar Radiation (MJ\/m2)','Rainfall(mm)', 'Snowfall (cm)']]\n\ny_test_predicted = Regressor.predict(X_test)\n\ntest_df['y'] = y_test_predicted.astype(int)\n\ntest_df.head()","2c3bb3f3":"test_df[['ID', 'y']].to_csv('\/kaggle\/working\/submission.csv', index=False)","30842264":"# Data Splitting\n","fa6e9db5":"# Model Training\nLet's train a model with the data! We'll train a Random Forest Classifier to demonstrate the process of making submissions.","dd4a7a5d":"## Introduction\n\nIn the competition, it's required to predict the `y` `Rented Bike count (Target), Count of bikes rented at each hour` .\n\nThis is the getting started notebook. Things are kept simple so that it's easier to understand the steps and modify it.\n\nFeel free to `Fork` this notebook and share it with your modifications **OR** use it to create your submissions.","69d8acd5":"Data fields\n- ID - an ID for this instance\n- Date - year-month-day\n- Hour - Hour of he day\n- Temperature - Temperature in Celsius\n- Humidity - %\n- Windspeed - m\/s\n- Visibility - 10m\n- Dew point temperature - Celsius\n- Solar radiation - MJ\/m2\n- Rainfall - mm\n- Snowfall - cm\n- Seasons - Winter, Spring, Summer, Autumn\n- Holiday - Holiday\/No holiday\n- Functional Day - NoFunc(Non Functional Hours), Fun(Functional hours)\n- y - Rented Bike count (Target), Count of bikes rented at each hour","b01191af":"The output shows desciptive statistics for the numerical features, y, Hour, Temperature(\ufffdC), Humidity(%), Wind speed (m\/s), Visibility (10m), Dew point temperature(\ufffdC), Solar Radiation (MJ\/m2), Rainfall(mm), Snowfall (cm).\n\n","08ed3c62":"What about descriptive statistics?","4f1ab651":"Now let's test our classifier on the validation dataset and see the accuracy.","f3e7be35":"# Submission File Generation\n\nWe have built a model and we'd like to submit our predictions on the test set! In order to do that, we'll load the test set, predict the class and save the submission file.\n\nFirst, we'll load the data.","d9609730":"Now we're ready to generate the submission file. The submission file needs the columns ID and Severity only.","8a99731a":"*You can submit up to 2 submissions per day. You can select only one of the submission you make to be considered in the final ranking.*\n","860c959c":"The remaining steps is to submit the generated file and are as follows.\n\nPress Save Version on the upper right corner of this notebook.\nWrite a Version Name of your choice and choose Save & Run All (Commit) then click Save.\nWait for the saved notebook to finish running the go to the saved notebook.\nScroll down until you see the output files then select the submission.csv file and click Submit.\nNow your submission will be evaluated and your score will be updated on the leaderboard! CONGRATULATIONS!!","75bb31c2":"## Import the libraries\n\nWe'll use `pandas` to load and manipulate the data. Other libraries will be imported in the relevant sections.","c96070c4":"## Exploratory Data Analysis\n\nLet's load the data using `pandas` and have a look at the generated `DataFrame`.","40166295":"Now it's time to split the dataset for the training step. Typically the dataset is split into 3 subsets, namely, the training, validation and test sets. In our case, the test set is already predefined. So we'll split the \"training\" set into training and validation sets with 0.8:0.2 ratio.\n\nNote: a good way to generate reproducible results is to set the seed to the algorithms that depends on randomization. This is done with the argument random_state in the following command","2106349f":"We've got 5760 examples in the dataset with 15 featues.\n\nBy looking at the features and a sample from the data, the features look of numerical and catogerical types.","4f66a064":"Note that the test set has the same features and doesn't have the `y` column.\nAt this stage one must **NOT** forget to apply the same processing done on the training set on the features of the test set.\n\n**Note** y is `Rented Bike count (Target), Count of bikes rented at each hour` .\n\nNow we'll add `y` column to the test `DataFrame` and add the values of the predicted class to it.\n\n**I'll select the numerical features here as I did in the training set. DO NOT forget to change this step as you change the preprocessing of the training data.**","0a89584a":"# Conclusion\nIn this notebook, we have demonstrated the essential steps that one should do in order to get \"slightly\" familiar with the data and the submission process. We chose not to go into details in each step to keep the welcoming notebook simple and make a room for improvement.\n\nYou're encourged to `Fork` the notebook, edit it, add your insights and use it to create your submission.\n\n"}}