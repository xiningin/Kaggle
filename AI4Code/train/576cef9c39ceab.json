{"cell_type":{"783afeac":"code","50b9b988":"code","895d453f":"code","2efcfe2f":"code","848a74ec":"code","aec53b71":"code","0bd8b217":"code","a5f85df2":"code","004407f6":"code","115d75e5":"code","946bf99c":"code","98287ddb":"code","4b00959c":"code","fdee5a13":"code","c20802aa":"code","695c38a0":"code","045668a7":"code","08452333":"code","f6c4fc10":"code","93ef565b":"code","89161a04":"code","e77bb5b1":"code","674271ce":"code","4dd57f0f":"code","565e035a":"code","4e7a908d":"code","02c73589":"code","11a43906":"code","39329f4b":"code","2177bffc":"code","2dc28149":"code","23dd0907":"code","8652698b":"code","4f01a13b":"code","3ab6ea14":"code","c0b46b25":"code","2710e950":"code","d9ed4e68":"markdown","bb701e29":"markdown","08663e77":"markdown","cf00c71b":"markdown","f0578473":"markdown","a6f4ee05":"markdown","f6c33625":"markdown","71e89ac2":"markdown","bc802b63":"markdown","e5c6ca8f":"markdown","a9ce791e":"markdown","50aed6ef":"markdown","9ac89ef8":"markdown","96c90a39":"markdown","56febf16":"markdown","30d199b2":"markdown","4f676b3c":"markdown","3cea5645":"markdown","03ccbc0d":"markdown","b1ece414":"markdown","91dc47a6":"markdown","0d202f95":"markdown","4824fc27":"markdown","5c650639":"markdown","72c783a7":"markdown","301f6d79":"markdown","72f897a6":"markdown","5a2d2239":"markdown","67bd7eac":"markdown","a1c70344":"markdown","ce37db7e":"markdown","3cd11a1f":"markdown","2a362243":"markdown","95e6d1a5":"markdown","e3613e32":"markdown","f767f966":"markdown","4e5439b7":"markdown","465b2436":"markdown","8e62df94":"markdown","a01f47e9":"markdown","bba1f170":"markdown","6c94beb9":"markdown","8d31eaf8":"markdown","af418390":"markdown","6853ccdd":"markdown","028ecf41":"markdown","d566317c":"markdown","e02cb25a":"markdown","65da62bf":"markdown","fb95def7":"markdown","a5d5d1ba":"markdown","9a78a911":"markdown","18ba1244":"markdown","d8a6a41a":"markdown","0c966aea":"markdown","66142e07":"markdown","a5f63622":"markdown","34020319":"markdown","20469065":"markdown","ca079845":"markdown","1939e4e9":"markdown","433b5a34":"markdown","788f7093":"markdown","65009a42":"markdown","b02ce1e7":"markdown"},"source":{"783afeac":"import numpy as np \nimport pandas as pd \nimport os\nfrom fbprophet import Prophet\nfrom matplotlib import pyplot as plt\nimport plotly.express as px\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error\nimport warnings\nwarnings.filterwarnings('ignore')\nnp.random.seed(42)","50b9b988":"itc = pd.read_csv(\"\/kaggle\/input\/nifty50-stock-market-data\/ITC.csv\")\nitc.set_index(\"Date\", drop=False, inplace=True)\nitc.head()","895d453f":"print(f'There are {itc.shape[0]} rows and {itc.shape[1]} columns')","2efcfe2f":"itcv = itc.VWAP.reset_index()\nfig = px.line(itcv, x=\"Date\", y=\"VWAP\", title='VMAP of ITC over the years')\nfig.show()","848a74ec":"df_vwap = itc[['Date','VWAP']]\ndf_vwap['Date'] = df_vwap['Date'].apply(pd.to_datetime)\ndf_vwap.set_index(\"Date\", inplace = True)\ndf_vwap.head()","aec53b71":"vwap_2005 = df_vwap['2005':'2006']\nvwap_2005 = vwap_2005.reset_index()\nfig = px.line(vwap_2005, x=\"Date\", y=\"VWAP\", title='VMAP of ITC over the years')\nfig.show()","0bd8b217":"itcv = itc.VWAP.reset_index()\nfig = px.line(itcv, x=\"Date\", y=\"VWAP\", title='VMAP of ITC over the years')\nfig.show()","a5f85df2":"vwap_itc_2020 = df_vwap['2019-04':'2020-05']\nvwap_itc_2020['mavg_12'] = vwap_itc_2020['VWAP'].rolling(window = 12).mean().shift(1)\npd.set_option('display.float_format', lambda x: '%.2f'% x)\nmayd = vwap_itc_2020.tail(19)\nmayd = mayd.reset_index()","004407f6":"import plotly.graph_objects as go\nfig = go.Figure()\n\nfig.add_trace(go.Scatter(\n    x=mayd['Date'],\n    y=mayd['VWAP'],\n    name=\"Actual VWAP\"\n))\n\nfig.add_trace(go.Scatter(\n    x=mayd['Date'],\n    y=mayd['mavg_12'],\n    name=\"Moving Average\"\n))\n\nfig.update_layout(\n    title=\"VWAP - Actual vs Moving Average of ITC for the Month of May 2020\",\n    xaxis_title=\"Date\",\n    yaxis_title=\"VWAP\",\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=12,\n        color=\"#7f7f7f\"\n    )\n)\n\nfig.show()","115d75e5":"def get_mape(actual, predicted):\n    y_true, y_pred = np.array(actual), np.array(predicted)\n    return np.round( np.mean(np.abs((actual - predicted)\/ actual)) * 100, 2)","946bf99c":"get_mape(mayd['VWAP'].values, mayd['mavg_12'].values)","98287ddb":"from sklearn.metrics import mean_squared_error \nnp.sqrt(mean_squared_error(mayd['VWAP'].values, mayd['mavg_12'].values))","4b00959c":"vwap_itc_2020['ewm'] = vwap_itc_2020['VWAP'].ewm(alpha = 0.2 ).mean()\npd.set_option('display.float_format', lambda x: '%.2f'% x)\nemayd = vwap_itc_2020.tail(19)\nemayd = emayd.reset_index()","fdee5a13":"import plotly.graph_objects as go\nfig = go.Figure()\n\nfig.add_trace(go.Scatter(\n    x=emayd['Date'],\n    y=emayd['VWAP'],\n    name=\"Actual VWAP\"\n))\n\nfig.add_trace(go.Scatter(\n    x=emayd['Date'],\n    y=emayd['ewm'],\n    name=\"Exponential Smoothing\"\n))\n\nfig.update_layout(\n    title=\"VWAP - Actual vs Exponential Smoothing of ITC for the Month of May 2020\",\n    xaxis_title=\"Date\",\n    yaxis_title=\"VWAP\",\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=8,\n        color=\"#7f7f7f\"\n    )\n)\n\nfig.show()","c20802aa":"import plotly.graph_objects as go\nfig = go.Figure()\n\nfig.add_trace(go.Scatter(\n    x=emayd['Date'],\n    y=emayd['VWAP'],\n    name=\"Actual VWAP\"\n))\n\n\nfig.add_trace(go.Scatter(\n    x=emayd['Date'],\n    y=emayd['mavg_12'],\n    name=\"Moving Average\"\n))\n\nfig.add_trace(go.Scatter(\n    x=emayd['Date'],\n    y=emayd['ewm'],\n    name=\"Exponential Smoothing\"\n))\n\nfig.update_layout(\n    title=\"VWAP - Actual vs vs Moving Average vs Exponential Smoothing of ITC for the Month of May 2020\",\n    xaxis_title=\"Date\",\n    yaxis_title=\"VWAP\",\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=8,\n        color=\"#7f7f7f\"\n    )\n)\n\nfig.show()","695c38a0":"vwap_itc_20201 = vwap_itc_2020.reset_index()\nfrom statsmodels.tsa.seasonal import seasonal_decompose\n\n# Multiplicative Decomposition \nresult_mul = seasonal_decompose(vwap_itc_2020['VWAP'], model='multiplicative', extrapolate_trend = 'freq', freq=12)\n\n# Additive Decomposition\nresult_add = seasonal_decompose(vwap_itc_2020['VWAP'], model='additive', extrapolate_trend = 'freq', freq=12)\n\n# Plot\nplt.rcParams.update({'figure.figsize': (10,10)})","045668a7":"result_mul.plot().suptitle('Multiplicative Decompose', fontsize=15)","08452333":"result_add.plot().suptitle('Additive Decompose', fontsize=15)","f6c4fc10":"vwap_itc_2020['mul_seasonal'] = result_mul.seasonal\nvwap_itc_2020['mul_trend'] = result_mul.trend\n\nvwap_itc_2020['add_seasonal'] = result_add.seasonal\nvwap_itc_2020['add_trend'] = result_add.trend","93ef565b":"import plotly.graph_objects as go\nfig = go.Figure()\n\nvwap_itc_2020d = vwap_itc_2020.reset_index()\n\nfig.add_trace(go.Scatter(\n    x=vwap_itc_2020d['Date'],\n    y=vwap_itc_2020d['mul_seasonal'],\n    name=\"Multiplicative Seasonal Component\"\n))\n\nfig.add_trace(go.Scatter(\n    x=vwap_itc_2020d['Date'],\n    y=vwap_itc_2020d['add_seasonal'],\n    name=\"Additive Seasonal Component\"\n))\n\nfig.update_layout(\n    title=\"Seasonal Component\",\n    xaxis_title=\"Date\",\n    yaxis_title=\"VWAP\",\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=12,\n        color=\"#7f7f7f\"\n    )\n)\n\nfig.show()","89161a04":"import plotly.graph_objects as go\nfig = go.Figure()\n\nvwap_itc_2020d = vwap_itc_2020.reset_index()\n\nfig.add_trace(go.Scatter(\n    x=vwap_itc_2020d['Date'],\n    y=vwap_itc_2020d['mul_trend'],\n    name=\"Multiplicative Trend\"\n))\n\nfig.add_trace(go.Scatter(\n    x=vwap_itc_2020d['Date'],\n    y=vwap_itc_2020d['add_trend'],\n    name=\"Additive Trend\"\n))\n\nfig.update_layout(\n    title=\"Trend Component\",\n    xaxis_title=\"Date\",\n    yaxis_title=\"VWAP\",\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=12,\n        color=\"#7f7f7f\"\n    )\n)\n\nfig.show()","e77bb5b1":"#ACF plot to show auto-correlation upto lag of 20\n    \nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\nplt.rcParams.update({'figure.figsize': (10,6)})\nacf_plot = plot_acf(vwap_itc_2020d.VWAP, lags=20)","674271ce":"plt.rcParams.update({'figure.figsize': (10,6)})\n\nacf_plot = plot_pacf(vwap_itc_2020d.VWAP, lags=20)","4dd57f0f":"from statsmodels.tsa.arima_model import ARIMA\narima = ARIMA(vwap_itc_2020.VWAP[0:265].astype(np.float64), order = (1,0,0))\narima1 = ARIMA(vwap_itc_2020.VWAP[0:265].astype(np.float64), order = (0,0,0))\nar_model = arima.fit()\nar_model1 = arima1.fit()\nar_model.summary2()","565e035a":"forecast_arima = ar_model.predict(265, 283)\nforecast_arima1 = ar_model1.predict(265, 283)\n\nget_mape(vwap_itc_2020.VWAP[265:285].values, forecast_arima.values)","4e7a908d":"get_mape(vwap_itc_2020.VWAP[265:285].values, forecast_arima1.values)","02c73589":"arima = ARIMA(vwap_itc_2020.VWAP[0:265].astype(np.float64), order = (0,0,1))\nma_model = arima.fit()\nma_model.summary2()","11a43906":"forecast_arima = ma_model.predict(265, 283)\n\nget_mape(vwap_itc_2020.VWAP[265:285].values, forecast_arima.values)","39329f4b":"arima = ARIMA(vwap_itc_2020.VWAP[0:265].astype(np.float64), order = (1,0,1)) \narma_model = arima.fit() \narma_model.summary2()","2177bffc":"forecast_arma = arma_model.predict(265, 283)\nget_mape(vwap_itc_2020.VWAP[265:285].values, forecast_arma.values)","2dc28149":"from statsmodels.tsa.stattools import adfuller\n\ndef adfuller_test(ts): \n    adfuller_result = adfuller(ts, autolag=None)\n    adfuller_out = pd.Series(adfuller_result[0:4],\n                             index=['Test Statistic', 'p-value', 'Lags Used', 'Number of Observations Used'])\n    print(adfuller_out)","23dd0907":"adfuller_test(vwap_itc_2020.VWAP)","8652698b":"vwap_itc_2020['vdiff'] = vwap_itc_2020.VWAP - vwap_itc_2020.VWAP.shift(1)\nvwap_itc_2020.head(5)\nvwap_itc_2020 = vwap_itc_2020.dropna()","4f01a13b":"import plotly.graph_objects as go\nfig = go.Figure()\n\nvwap_itc_20201 = vwap_itc_2020.reset_index()\n\nfig.add_trace(go.Scatter(\n    x=vwap_itc_20201['Date'],\n    y=vwap_itc_20201['vdiff'],\n    name=\"First-Order Differencing\"\n))\n\nfig.update_layout(\n    xaxis_title=\"Date\",\n    yaxis_title=\"First-order difference\",\n    font=dict(\n        family=\"Courier New, monospace\",\n        size=12,\n        color=\"#7f7f7f\"\n    )\n)\n\nfig.show()","3ab6ea14":"pacf_plot = plot_acf(vwap_itc_20201.vdiff.dropna(), lags=10)","c0b46b25":"arima = ARIMA(vwap_itc_2020.VWAP[0:265].astype(np.float64), order = (1,1,1)) \narima_model = arima.fit()\narima_model.summary2()","2710e950":"predict, stderr, ci = arima_model.forecast(steps=7)\nget_mape(vwap_itc_2020.VWAP[265:285].values, predict)","d9ed4e68":"<div class=\"alert alert-block alert-warning\">\n\n### End of Basics - Will add more approaches(ARIMAX\/SARIMAX, NN's) to this notebook. Do upvote! ","bb701e29":"<div class=\"alert alert-block alert-warning\">\n\n<a id=\"cmp\"><\/a>\n\n### Components of Time-Series Data","08663e77":"<div class=\"alert alert-block alert-warning\">\n\nAuto-regressive (AR) and moving average (MA) models are popular models that are frequently used for forecasting.\nAR and MA models are combined to create models such as auto-regressive moving average (ARMA) and auto-regressive\nintegrated moving average (ARIMA) models. \n\nARMA models are basically regression models. \n\nAuto-regression simply means regression of a variable on itself measured at different time periods. We will discuss each component in the subsequent sections.","cf00c71b":"### The ACF plot for the same","f0578473":"<div class=\"alert alert-block alert-warning\">\n\nFirst difference between consecutive Yt values can be computed by subtracting the previous day\u2019s value from that day\u2019s value.\n\nWe can use shift() function in Pandas to shift the values before subtracting. ","a6f4ee05":"<div class=\"alert alert-block alert-info\">\n\n<a id=\"dts\"><\/a>\n\n### DECOMPOSING TIME SERIES","f6c33625":"<div class=\"alert alert-block alert-warning\">\n\n### Mean Absolute Percentage Error\n\n\nMean absolute percentage error (MAPE) is the average of absolute percentage error.\nAssume that the validation data has n observations and forecasting is carried out on these n observations. \nThe mean absolute percentage error is given by\n\n![](https:\/\/github.com\/rakash\/images1\/blob\/master\/mape.png?raw=true)","71e89ac2":"<div class=\"alert alert-block alert-info\">\n\n<a id=\"arima\"><\/a>\n\n### AUTO-REGRESSIVE INTEGRATED MOVING AVERAGE MODELS","bc802b63":"<a id=\"vitc\"><\/a>\n![](https:\/\/lh3.googleusercontent.com\/proxy\/YINfgR9lpvMaA7OkTVtML679-6em_cIsiEa5FQ8mXUFWnHiunYrda0ObEQ7UaUnarDTHa22-LRmvB4-gV82l04q3-YpVf9vtj2WB7Sa6NbR27vSVIg)","e5c6ca8f":"<div class=\"alert alert-block alert-info\">\n\n### Visualizing Trend and Seasonal Component for the last year of ITC VWAP","a9ce791e":"### Multiplicative Decompose","50aed6ef":"The shaded area represents the upper and lower bounds for critical values, where the null hypothesis cannot be\nrejected (auto-correlation value is 0). ","9ac89ef8":"<div class=\"alert alert-block alert-warning\">\n\nThe time-series data can be modelled as addition or product of trend, seasonality, cyclical, and irregular components.\nThe additive time-series model is given by \n\n        Yt = Tt + St + Ct + It\n\nThe additive models assume that the seasonal and cyclical components are independent of the trend component.\nAdditive models are not very common, since in many cases the seasonal component may not be independent of the trend. \n\nA small example:\n\nThe seasonality effect on sales during festival times like Diwali does not result in constant increase in sales over the years. For example, the increase in sales of cars during festival season is not just 100 units every year. The seasonality effect has a multiplicative effect on sales based on the trend over the years like 10% additional units based on the trend in the current year. So, in many cases the seasonality effect is multiplied with the trend and not just added as in additive model. \n\nThe multiplicative time-series model is given by\n\n        Yt = Tt \u00d7 St \u00d7 Ct \u00d7 It\n        \n \n \nFor decomposing a time-series data, we can leverage the following libraries:\n1. statsmodel.tsa provides various features for time-series analysis. \n2. seasonal_decompose() in statsmodel.tsa.seasonal decomposes a time series into trend, seasonal, and residuals. It takes frequency parameters; for example, the frequency is 12 for monthly data.","96c90a39":"<div class=\"alert alert-block alert-info\">\n\n<a id=\"ma\"><\/a>\n\n### Building an MA Model","56febf16":"<div class=\"alert alert-block alert-warning\">\n\n### Root mean square error (RMSE)\n\nis the square root of average of squared error calculated over the validation dataset, and is the standard deviation of the errors for unbiased estimator.\n\nRMSE is given by\n\n![](https:\/\/github.com\/rakash\/images1\/blob\/master\/rmse.png?raw=true)\n\n\nLower RMSE implies better prediction. However, it depends on the scale of the time-series data.\n\nMSE (Mean Squared Error) can be calculated using mean_squared_error() method in sklearn.metrics.\n\nWe can pass MSE value to np.sqrt() to calculate RMSE.","30d199b2":"<div class=\"alert alert-block alert-info\">\n\n<a id=\"arma\"><\/a>\n\n### Building an ARMA MODEL","4f676b3c":"<div class=\"alert alert-block alert-info\">\n\n#### What is Stationary data?\n\nTime-series data should satisfy the following conditions to be stationary: \n    \n1. The mean values of Yt at different values of t are constant. \n2. The variances of Yt at different time periods are constant (Homoscedasticity). \n3. The covariance of Yt and Yt\u2212k for different lags depend only on k and not on time t.","3cea5645":"<div class=\"alert alert-block alert-info\">\n\n<a id=\"exps\"><\/a>\n\n### Forecasting using Exponential Smoothing","03ccbc0d":"<div class=\"alert alert-block alert-warning\">\n#### Across the following sections, we will consider VMAP as the target variable and look at the basic approaches to forecast that, but first lets look at how it has performed over the years.\n\n#### So What is VWAP? \n\n#### The volume weighted average price (VWAP) is a trading benchmark used by traders that gives the average price a security has traded at throughout the day, based on both volume and price. It is important because it provides traders with insight into both the trend and value of a security. You can read more [here](https:\/\/en.wikipedia.org\/wiki\/Volume-weighted_average_price)","b1ece414":"<div class=\"alert alert-block alert-info\">\n\n### Something happened between Sep 20 and Sep 22nd, 2005.\n\n### So, The Face value had dropped from 10 to 1, and guess the date? Yep, Sep 21, 2005. More on it [here](https:\/\/www.moneycontrol.com\/company-facts\/itc\/splits\/itc)","91dc47a6":"<div class=\"alert alert-block alert-info\">\n\nThere are several techniques, the famous ones being;\n    - Moving average, \n    - Exponential smoothing, and \n    - AutoRegressive Integrated Moving Average (ARIMA)\n    \nMoving average and exponential smoothing predict the future value of a time-series data as a function of past observations. \n\nThe regression-based models such as auto-regressive (AR), auto-regressive and moving average (ARMA), \nauto-regressive integrated moving average (ARIMA) use more sophisticated regression models. ","0d202f95":"### There is a sharp decline in 2005. Lets see what happened there.","4824fc27":"<div class=\"alert alert-block alert-warning\">\n### So, The ARIMA model with first-order differencing gives forecast accuracy of ~10%.","5c650639":"#### The Mape seems to be the same as AR(1) model. ","72c783a7":"<div class=\"alert alert-block alert-info\">\n\n<a id=\"arimaa\"><\/a>\n\n### ARIMA Model","301f6d79":"### Additive Decompose","72f897a6":"<div class=\"alert alert-block alert-info\">\n\n<a id=\"mv\"><\/a>\n\n### Forecasting using Moving Average","5a2d2239":"#### The MAPE in this case is 7.21. So, forecasting using moving average gives us a MAPE of 7.2%. I would say its a decent number. ","67bd7eac":"<div class=\"alert alert-block alert-info\">\n\n### Extracting only the seasonal and trend component for the last 1 year","a1c70344":"<div class=\"alert alert-block alert-info\">\n\nITC Limited is an Indian multinational conglomerate company headquartered in Kolkata, West Bengal.\n\nEstablished in 1910 as the Imperial Tobacco Company of India Limited, the company was renamed as the India Tobacco Company Limited in 1970 and later to I.T.C. The Company now stands rechristened to ITC Limited, where 'ITC' is today no longer an acronym or an initialised form.\n\nIt employs over 30,000 people at more than 60 locations across India and is part of Forbes 2000 list.\n\nSource - [Here](https:\/\/en.wikipedia.org\/wiki\/ITC_Limited)","ce37db7e":"<div class=\"alert alert-block alert-warning\">\n\nAuto-regression is a regression of a variable on itself measured at different time points. Auto-regressive model with lag 1,\nAR (1), is given by\n\n\n![](https:\/\/github.com\/rakash\/images1\/blob\/master\/ar1.png?raw=true)\n\nThe above equation can be generalized to include p lags and is called a AR(p) model. The Equation can be re-written as;\n\n\n![](https:\/\/github.com\/rakash\/images1\/blob\/master\/ar2.png?raw=true)\n\n\nwhere et+1 is a sequence of uncorrelated residuals assumed to follow the normal distribution with zero mean and constant standard deviation. \n\n(Yt \u2212 m) can be interpreted as a deviation from mean value m; it is known as mean centered series.\n\nOne of the important tasks in using the AR model in forecasting is model identification, which is, identifying the value of p (the number of lags). \n\nOne of the standard approaches used for model identification is using\n    - auto-correlation function (ACF) and \n    - partial auto-correlation function (PACF)","3cd11a1f":"<div class=\"alert alert-block alert-warning\">\n\nMA processes are regression models in which the past residuals are used for forecasting future values of the time-series data. \n\nA moving average process of lag 1 can be written as\n\n\n![](https:\/\/github.com\/rakash\/images1\/blob\/master\/ma1.png?raw=true)\n\nThe value of q (number of lags) in a moving average process can be identified using the following rules:\n\n1. Auto-correlation value is significant for first q lags and cuts off to zero. \n\n2. The PACF decreases exponentially. \n\nBuilding a baseline with q=1","2a362243":"<div class=\"alert alert-block alert-warning\">\n\n### In this Notebook, we will look at(Theory & Code),\n\n1. Various components of time-series data such as trend, seasonality, cyclical component, and random component. \n\n2. Moving Average, Exponenial Smoothing, Auto-Regressive (AR), Moving Average (MA), and Auto-Regressive Integrated Moving Average (ARIMA) models.\n\n3. Building forecasting models in Python.","95e6d1a5":"### Forecast with P = 0 ","e3613e32":"<div class=\"alert alert-block alert-info\">\n\n### ACF","f767f966":"<div class=\"alert alert-block alert-warning\">\n\nstatsmodels.tsa.arima_model.ARIMA can be used to build AR model.\n\nIt takes the following two parameters:\n\n1. endog: list of values \u2013 It is the endogenous variable of the time series. \n\n2. order: The (p, d, q) \u2013 ARIMA model parameters. Order of AR is given by the value p, the order of integration is d, and the order of MA is given by q.","4e5439b7":"### A little higher than the moving average Mape value","465b2436":"<div class=\"alert alert-block alert-warning\">\n\nAuto-correlation of lag k is the correlation between Yt and Yt\u2013k measured at different k values \n(e.g., Yt and Yt\u22121 or Yt and Yt\u22122). \n\nA plot of auto-correlation for different values of k is called an auto-correlation function \n(ACF) or correlogram. \n\n#### statsmodels.graphics.tsaplots.plot_acf plots the autocorrelation plot.","8e62df94":"<div class=\"alert alert-block alert-info\">\n### Finding if a series is Stationary","a01f47e9":"<div class=\"alert alert-block alert-info\">\n\n### PACF","bba1f170":"<div class=\"alert alert-block alert-info\">\n\n### Differencing","6c94beb9":"<div class=\"alert alert-block alert-info\">\n\n- The time-series data Y(t) is a random variable, usually collected at regular time intervals and in chronological order.\n- If the time-series data contains observations of just a single variable (such as demand of a product at time t), \nthen it is termed as univariate time-series data. \n\n- If the data consists of more than one variable, \nfor example, demand for a product at time t, price at time t, amount of money spent by the company on promotion at time t, \ncompetitors\u2019 price at time t, etc., then it is called multivariate timeseries data. \n\nA time-series data can be broken into the four following components:\n\n- Trend Component - Trend is the consistent long-term upward or downward movement of the data. \n- Seasonal Component (St): Seasonal component (measured using seasonality index) is the repetitive upward or downward movement (or fluctuations) from the trend that occurs within a calendar year at fixed intervals (i.e., time between seasons is fixed) such as seasons, quarters, months, days of the week, etc. The upward or downward fluctuation may be caused due to festivals, customs within a society,  school holidays, business practices within the market such as \u201cend of season sale\u201d, and so on.\n- Cyclical Component (Ct): Cyclical component is fluctuation around the trend line at random interval \n   (i.e., the time between cycles is random) that happens due to macro-economic changes such as recession, unemployment,\n   etc. Cyclical fluctuations have repetitive patterns with time between repetitions of more than a year.\n   Whereas in the case of seasonality, the fluctuations are observed within a calendar year and are driven by factors such as     festivals and customs that exist in a society. A major difference between seasonal fluctuation and cyclical fluctuation is that seasonal fluctuation occurs at fixed period within a calendar year, whereas cyclical fluctuations have random time between fluctuations. That is, the periodicity of seasonal fluctuations is constant, whereas the periodicity of cyclical fluctuations is not constant.\n- Irregular Component (It): Irregular component is the white noise or random uncorrelated changes that follow a normal distribution with mean value of 0 and constant variance.    ","8d31eaf8":"<div class=\"alert alert-block alert-warning\">\n\nARMA models can be used only when the time-series data is stationary. \nARIMA models are used when the time-series data is non-stationary. \nTime-series data is called stationary if the mean, variance, and covariance are constant over time. \n\n\nARIMA has the following three components and is represented as ARIMA (p, d, q): \n1. AR component with p lags AR(p). \n2. Integration component (d). \n3. MA with q lags, MA(q).\n\n\nThe main objective of the integration component is to convert a non-stationary time-series process to a stationary process so that the AR and MA processes can be used for forecasting.","af418390":"<div class=\"alert alert-block alert-info\">\n\n### Calculating Forecast Accuracy\n\n\nRoot mean square error (RMSE) and mean absolute percentage error (MAPE) are the two most popular accuracy measures of forecasting. We will be discussing these measures in this section.","6853ccdd":"<div class=\"alert alert-block alert-info\">\n### Forecasting using the d component","028ecf41":"<div class=\"alert alert-block alert-info\">\n\n### Forecasting and measuring accuracy","d566317c":"<div class=\"alert alert-block alert-info\">\n\n<a id=\"arma\"><\/a>\n\n### Building the ARMA Model","e02cb25a":"<div class=\"alert alert-block alert-warning\">\n\nPartial auto-correlation of lag k is the correlation between Yt and Yt\u2212k when the influence of all \nintermediate values (Yt\u22121, Yt\u22122, \u2026, Yt\u2212k+1) is removed (partial out) from both Yt and Yt\u2212k. \n\nA plot of partial auto-correlation for different values of k is called partial auto-correlation function (PACF). \n\nstatsmodels.graphics.tsaplots.plot_pacf plots the partial auto-correlation plot.","65da62bf":"# CONTENTS\n\n1. [What is VMAP & ITC](#vitc)\n2. [Components of Time series](#cmp)\n3. [Models](#tc)\n\n   3.1 [Moving Average](#mv)\n   3.2 [Exponential Smoothing](#exps)\n\n4. [Decomposing Time Series](dts)\n\n5. [ARIMA](#arima)\n\n   5.1 [AR Model](#ar)\n   5.2 [MA Model](#ma)\n   5.3 [ARMA](#arma)\n   5.4 [ARIMA](#arimaa)\n\n6. [Summary](#summ)","fb95def7":"#### IMPORTANT: Moving average and Exponential smoothing assume a fairly steady time-series data with no significant trend, seasonal or cyclical components, that is, the data is stationary.\n\n#### However, many dataset will have trend and seasonality.","a5d5d1ba":"<div class=\"alert alert-block alert-info\">\n\n### We build a basic arima model with d=1(first-order differencing)","9a78a911":"<div class=\"alert alert-block alert-warning\">\n\nTo find out if a time series is stationary, Dickey\u2212Fuller test can also be conducted.\n\nDickey\u2013Fuller test checks whether the b in the equation in AR model section above is equal to 1 or less than equal to 1. \n\nEquation: ![](https:\/\/github.com\/rakash\/images1\/blob\/master\/ar1.png?raw=true)\n\nIt is a hypothesis test in which the null hypothesis and alternative hypothesis are given by,\n\nH0: b = 1 (the time series is non-stationary)\nHA: b < 1 (the time series is stationary)\n    \nstatsmodels.tsa.stattools.adfuller is a Dicky\u2212Fuller test and returns test statistics and p-value for the test of the null hypothesis.\n\nIf the p-value is less than 0.05, the time series is stationary.","18ba1244":"<div class=\"alert alert-block alert-warning\">\n\nTo select the appropriate p in the AR model, the following thumb rule can be used:\n\n1. The partial auto-correlation is significant for first p-values (first p lags) and cuts off to zero.\n\n2. The ACF decreases exponentially. (Signs of stationarity).","d8a6a41a":"<div class=\"alert alert-block alert-warning\">\n\nMoving average is one of the simplest forecasting techniques which forecasts the future value of a timeseries data using average (or weighted average) of the past N observations. \n\nForecasted value for time t +1 using the simple moving average is given by\n        \n![](https:\/\/github.com\/rakash\/images1\/blob\/master\/fma.png?raw=true)\n            \nPandas has a function rolling() which can be used with an aggregate function like mean() for calculating moving average for a time window. \n\nFor example, to calculate 12 month\u2019s moving average using last 12 months\u2019 data starting from last month (previous period), rolling() will take a parameter window, which is set to 12 to indicate moving average of 12-months data, and then use Pandas\u2019 shift() function, which takes parameter 1 to specify that the 12-months data should start from last month. \n\nshift(1) means calculating moving average for the specified window period starting from previous observation (in this case last month).\n\n\nHere, we will take data from 2018 April to 2019 April, to forecast VWAP of May 2019 using Moving Average","0c966aea":"<div class=\"alert alert-block alert-info\">\n\n#### Building an AR Model","66142e07":"<div class=\"alert alert-block alert-info\">\n\n<a id=\"ar\"><\/a>\n\n### AR Models","a5f63622":"<div class=\"alert alert-block alert-info\">\n\n<a id=\"summ\"><\/a>\n\n### Summary:\n\n1. Several techniques such as moving average, exponential smoothing, and auto-regressive models are used for forecasting future value of Yt. \n\n2. The forecasting models are mostly validated using accuracy measures such as RMSE and MAPE. \n\n3. Auto-regressive (AR) models are regression-based models in which dependent variable is Yt and the independent variables are Yt\u22121, Yt\u22122, etc. \n\n4. AR models can be used only when the data is stationary.\n\n5. Moving average (MA) models are regression models in which the independent variables are past error values. \n\n6. Auto-regressive integrated moving average (ARIMA) has three components: \n    a. Auto-regressive component with p lags \u2212 AR(p) \n    b. Moving average component with q lags \u2212 MA(q) \n    c. Integration which is differencing the original data to make it stationary (denoted by d)","34020319":"<div class=\"alert alert-block alert-warning\">\n\n<a id=\"tc\"><\/a>\n\n### Forecasting Techniques","20469065":"<div class=\"alert alert-block alert-info\">\n\n### Plotting the first-order difference values","ca079845":"![](https:\/\/f4.bcbits.com\/img\/a1460053395_10.jpg)","1939e4e9":"<div class=\"alert alert-block alert-warning\">\n\nAuto-regressive moving average (ARMA) is a combination auto-regressive and moving average process. \nARMA(p, q) process combines AR(p) and MA(q) processes.\nThe values of p and q in an ARMA process can be identified using the following thumb rules:\n    \n1. Auto-correlation values are significant for first q values (first q lags) and cuts off to zero. \n2. Partial auto-correlation values are significant for first p values and cuts off to zero.","433b5a34":"### The mape is high","788f7093":"#### Been noticing people go gaga over ITC stock, especially on twitter.\n\n### So, lets look into it","65009a42":"<div class=\"alert alert-block alert-warning\">\n\nThe p-value (>0.05) indicates that we cannot reject the null hypothesis and hence, the series is not stationary. \n\nDifferencing the original time series is an usual approach for converting the non-stationary process into a stationary process (called difference stationarity). \n\nFor example, the first difference (d = 1) is the difference between consecutive values of the time series (Yt). That is, the first difference is given by\n\n![](https:\/\/github.com\/rakash\/images1\/blob\/master\/dk1.png?raw=true)","b02ce1e7":"<div class=\"alert alert-block alert-warning\">\n\nOne of the drawbacks of the simple moving average technique is that it gives equal weight to all the previous observations used in forecasting the future value. Exponential smoothing technique (also known as simple exponential smoothing; SES) assigns differential weights to past observations;\n\nEquation:\n\n![](https:\/\/github.com\/rakash\/images1\/blob\/master\/exp.png?raw=true)\n\n\nwhere \u03b1 is called the smoothing constant, and its value lies between 0 and 1. Ft+1 is the forecasted value at time t + 1 using actual value Yt at time t and forecasted values Ft of time t. But the model applies differential weights to both the inputs using smoothing constant \u03b1.\n\n\nThe ewm() method in Pandas provides the features for computing the exponential moving average taking alpha as a parameter."}}