{"cell_type":{"8175c5b3":"code","c9bd4de7":"code","ee0e2c72":"code","e6c647c0":"code","46936969":"code","d56c51eb":"code","b3074e3e":"code","df83bf6e":"code","cdc5a2e1":"code","6c11ac09":"markdown"},"source":{"8175c5b3":"import os\nimport random\nimport cv2\nimport matplotlib.pyplot as plt","c9bd4de7":"common_dir = '\/kaggle\/input\/brain-mri-images-for-brain-tumor-detection\/brain_tumor_dataset\/'","ee0e2c72":"path = os.path.join(common_dir, 'no\/')\nim_loc = random.choice(os.listdir(path))\nim = cv2.imread(os.path.join(path, im_loc))\nprint('Shape of Image:',im.shape)","e6c647c0":"# displaying healthy brain image:\npath_0 = os.path.join(common_dir, 'no\/')\nplt.figure(figsize=(15,15))\nprint('-'*20, 'Healthy Brain Images','-'*20)\nfor i in range(1,9):\n    plt.subplot(2,4,i)\n    img_loc = random.choice(os.listdir(path_0))\n    img = cv2.imread(os.path.join(path_0, img_loc))\n    plt.imshow(img)\n    plt.xticks([]), plt.yticks([])","46936969":"# displaying tumor brain image:\npath_1 = os.path.join(common_dir, 'yes\/')\nplt.figure(figsize=(15,15))\nprint('-'*20, 'Tumor Brain Images','-'*20)\nfor i in range(1,9):\n    plt.subplot(2,4,i)\n    img_loc = random.choice(os.listdir(path_1))\n    img = cv2.imread(os.path.join(path_1, img_loc))\n    plt.imshow(img)\n    plt.xticks([]), plt.yticks([])","d56c51eb":"# Importing Libraries for training the model:\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom keras.layers import Dense, Dropout, Flatten, BatchNormalization\nfrom keras.models import Model, Sequential\nfrom keras.applications import MobileNetV2","b3074e3e":"datagen = ImageDataGenerator(rescale=1.0\/255.0,\n                            brightness_range=[0.2,1],\n                            zoom_range=(0.2,1),\n                            vertical_flip=True,\n                            horizontal_flip=True,\n                            validation_split=0.1)\n\ntrain_set = datagen.flow_from_directory(common_dir,\n                                       target_size=(224,224),\n                                       class_mode='binary',\n                                       subset='training')\n\ntest_set = datagen.flow_from_directory(common_dir,\n                                      target_size=(224,224),\n                                      class_mode='binary',\n                                      subset='validation')","df83bf6e":"base_model = MobileNetV2(weights='imagenet',input_shape=(224,224,3), include_top=False,pooling='avg.')\n\nbase_model.trainable=False\nmodel = Sequential()\nmodel.add(base_model)\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dropout(0.2))\nmodel.add(Flatten())\nmodel.add(BatchNormalization()) # faster computational.\nmodel.add(Dense(1, activation='sigmoid'))\n\nmodel.compile(optimizer='adam',loss='binary_crossentropy', metrics=['accuracy'])","cdc5a2e1":"model.fit(train_set, epochs=20)","6c11ac09":"## Training Model"}}