{"cell_type":{"4379fc33":"code","0535874e":"code","d77b9656":"code","a90e4dbd":"code","34503b88":"code","301df077":"code","a5afde1b":"code","6ecb71a2":"code","801b89a8":"code","0fdb7fe1":"code","c633d09c":"code","8c10240a":"markdown","87d52769":"markdown","b7fda8fa":"markdown","46524455":"markdown","1d4868c6":"markdown","d78a57c8":"markdown","6ee74c5a":"markdown","33b8d483":"markdown","d563b076":"markdown"},"source":{"4379fc33":"import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n#You may use other aliases, but this is the most common one","0535874e":"\ndf=pd.read_csv('..\/input\/best-artworks-of-all-time\/artists.csv')","d77b9656":"df.sample(frac=.1).head()","a90e4dbd":"df.describe(include='all')","34503b88":"df.info()","301df077":"df.groupby(['name']).agg({'paintings':'sum'}).head()\n#gives you the numebr of paintings by each artists by summing it up","a5afde1b":"df.merge(df,on=['id'],how='left',suffixes=['','_x'])","6ecb71a2":"df.shape\n#tells you the number of rows and columns in a dataframe","801b89a8":"df.tail(n=5)\n#prints the last n rows of a dataframe","0fdb7fe1":"df.plot(kind='line')\n#for quick plots","c633d09c":"df.columns\n#View a list of columns","8c10240a":"<h1>5. Others<\/h1>","87d52769":"An allied function if pd.info, which tells you the count of non nulls in each columns","b7fda8fa":"<h1>4.Groupby<\/h1>\nIf you have a flat file structure and you need to perfom a computation across groups, you use groupby function to create those groups, chained with .agg function with spefici aggregation methods. You may also look at pd.pivot_table, but I like this one as its more granular","46524455":"<h1>Foreword<\/h1>\n<div class=\"alert alert-block alert-warning\">\nHi, Hope you're all doing great.\nWhen starting out with learning to code, its easy to get lost in the sea of information available.\nI'm a huge believer in Pareto principle(80-20 rule), that 20% expertise in a field is enough to get 80% things done.\nThis notebook is aimed at introducing you to most frequently used Pandas commands in data science problems.\nBasis the feedback, I'll make similar notebooks for other libraries.\nDo let me know if you find this useful and if you have questions\/suggestions.\nThanks and regards,\nKriti","1d4868c6":"<h1>2. Viewing a sample of the Dataframe <\/h1>\ndf is a Dataframe, an instance of a class in Pandas. For now, think of it as a Table. Loading it is okay, but I want to see what the file looks like.So here,'I'll use two function, one to grab a random sample and another to display it","d78a57c8":"<h1> 5.Merge\/Join<\/h1>\nWhen we need to combine two dataframes, we use join or merge. I prefer using merge because merge works on column to column.I'll do a self join here, which is joining a dataframe to itself","6ee74c5a":"<h1> 1. Reading an input file <\/h1>\nThis is  a csv, but there are option to read other formats like Excel,pickle,clipboard etc as well.\n\n[More about the formats supported here](https:\/\/pandas.pydata.org\/docs\/reference\/io.html\/).\n\nBest part? Writing works in a similar way. Just change read_ to write_ and you're done.","33b8d483":"<h1> Importing Pandas and reading the dataset <\/h1>\n<img src = https:\/\/miro.medium.com\/max\/3600\/1*6d5dw6dPhy4vBp2vRW6uzw.png>","d563b076":"<h1>3. View summary statistics of a dataframe<\/h1>\nMean, median mode etc tell us a lot about the data. Let's use one command to compute all of those for multiple columns"}}