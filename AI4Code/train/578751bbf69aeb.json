{"cell_type":{"482c2b1f":"code","af72827e":"code","e9b71412":"code","8290e744":"code","b7695a9b":"code","d0d9da53":"code","205677b5":"code","5c46e70d":"code","2c820c76":"code","d5c2cf55":"code","13e4b323":"code","dbe17a0b":"code","47f975d6":"code","02c551d3":"code","c863621b":"code","e0c014d1":"code","f698663b":"code","c0f695a7":"code","0cd98e8e":"code","a417b4ce":"code","b439c5ed":"code","a6a41d5b":"code","fbd45405":"code","aede3a48":"code","6fb7d68f":"code","5dd644a3":"code","06633b3d":"code","e2c6e248":"code","9e0aaa5a":"code","bf334725":"code","46965d28":"code","8340c76a":"markdown","49e12a04":"markdown","61ed5654":"markdown","795499ba":"markdown","b2ff5fa0":"markdown","8d205ebf":"markdown","1b4ec2fb":"markdown","e2873e22":"markdown","ae14cb98":"markdown","89f5d57c":"markdown","b333d193":"markdown","6643cd46":"markdown","7dfb5623":"markdown","56febc48":"markdown","28bf85cd":"markdown","d5e6f0a6":"markdown","e371a4ae":"markdown","85a5ce79":"markdown","5d37a346":"markdown","241b1cec":"markdown","cad50918":"markdown","56df0c25":"markdown","ecacb77d":"markdown","d9e7fae3":"markdown","149ee7d1":"markdown","feee7827":"markdown","c08cba33":"markdown","7b0e9eb8":"markdown","9c3ba6fe":"markdown"},"source":{"482c2b1f":"import pandas as pd\nimport numpy as np\nimport sys\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nfrom plotly import tools\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)","af72827e":"data_df = pd.read_csv('..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv', low_memory=False)","e9b71412":"print(\"Multiple choice response - rows: {} columns: {}\".format(data_df.shape[0], data_df.shape[1]))","8290e744":"multiple_df = data_df.loc[data_df.Q3==\"Romania\"]\nprint(f\"Data entries about Romania: {multiple_df.shape[0]}. Percent from total answers: {round(multiple_df.shape[0] \/ data_df.shape[0],4) * 100}%\")","b7695a9b":"us_responses = data_df.loc[data_df.Q3=='United States of America'].shape[0]\nchina_responses = data_df.loc[data_df.Q3=='China'].shape[0]\nindia_responses = data_df.loc[data_df.Q3=='India'].shape[0]\nprint(f\"Data entries about USA: {us_responses}. Percent from total answers: {round(us_responses \/ data_df.shape[0],4) * 100}%\")\nprint(f\"Data entries about China: {china_responses}. Percent from total answers: {round(china_responses \/ data_df.shape[0],4) * 100}%\")\nprint(f\"Data entries about India: {india_responses}. Percent from total answers: {round(india_responses \/ data_df.shape[0],4) * 100}%\")","d0d9da53":"tmp = pd.DataFrame(multiple_df.columns.values)\ncolumns = []\nfor i in range(1,50):\n    var = \"Q{}\".format(i)\n    l = len(list(tmp[tmp[0].str.contains(var)][0]))\n    if(l == 1):\n        columns.append(var)\n\nprint(\"The columns with only one item in the column group are:\\n\",columns)","205677b5":"def get_categories(data, val):\n    tmp = data[1::][val].value_counts()\n    return pd.DataFrame(data={'Number': tmp.values}, index=tmp.index).reset_index()","5c46e70d":"df = get_categories(multiple_df, 'Q1')","2c820c76":"def draw_trace_bar(data, title, xlab, ylab,color='Blue'):\n    trace = go.Bar(\n            x = data['index'],\n            y = data['Number'],\n            marker=dict(color=color),\n            text=data['index']\n        )\n    data = [trace]\n\n    layout = dict(title = title,\n              xaxis = dict(title = xlab, showticklabels=True, tickangle=15,\n                          tickfont=dict(\n                            size=9,\n                            color='black'),), \n              yaxis = dict(title = ylab),\n              hovermode = 'closest'\n             )\n    fig = dict(data = data, layout = layout)\n    iplot(fig, filename='draw_trace')","d5c2cf55":"draw_trace_bar(df, 'Number of people\/age interval', 'Age interval', 'Number of people' )","13e4b323":"draw_trace_bar(get_categories(multiple_df,'Q2'), \"Number of people in each gender\", \"Gender\", \"Number of people\", \"Green\")","dbe17a0b":"df = get_categories(data_df, 'Q3')\ndf.head()","47f975d6":"trace = go.Choropleth(\n            locations = df['index'],\n            locationmode='country names',\n            z = df['Number'],\n            text = df['index'],\n            autocolorscale =False,\n            reversescale = True,\n            colorscale = 'rainbow',\n            marker = dict(\n                line = dict(\n                    color = 'rgb(0,0,0)',\n                    width = 0.5)\n            ),\n            colorbar = dict(\n                title = 'Respondents',\n                tickprefix = '')\n        )\n\ndata = [trace]\nlayout = go.Layout(\n    title = 'Number of respondents per country',\n    geo = dict(\n        showframe = True,\n        showlakes = False,\n        showcoastlines = True,\n        projection = dict(\n            type = 'natural earth'\n        )\n    )\n)\n\nfig = dict( data=data, layout=layout )\niplot(fig)","02c551d3":"undata_df = pd.read_csv(\"..\/input\/undata-country-profiles\/country_profile_variables.csv\")\nundata_df['country'] = undata_df['country'].apply(lambda x: x.replace('United Kingdom', 'United Kingdom of Great Britain and Northern Ireland'))\nundata_df['country'] = undata_df['country'].apply(lambda x: x.replace('Iran (Islamic Republic of)', 'Iran, Islamic Republic of...'))\ndata_df['country'] = data_df['Q3']\ndata_df = data_df.merge(undata_df, on='country')","c863621b":"agg_data_df = data_df.groupby(['country', 'Population in thousands (2017)', 'GDP per capita (current US$)', 'Education: Government expenditure (% of GDP)', 'Region'])['Q1'].count().reset_index()\nagg_data_df.columns = ['country', 'Population', 'GDP_per_capita', 'Education: Government expenditure (% of GDP)', 'Region','Answers']\ntotal_population = np.sum(agg_data_df.Population)\ntotal_answers = np.sum(agg_data_df.Answers)\n#print(total_population, total_answers)\nagg_data_df['Answers Factor'] = (agg_data_df['Answers'] \/ total_answers) \/ (agg_data_df['Population'] \/ total_population)\nagg_data_df.head()","e0c014d1":"import plotly.express as px\n\nfig = px.scatter(agg_data_df, x=\"Answers Factor\", y=\"GDP_per_capita\", size=\"Answers\", color=\"Region\",\n           hover_name=\"country\", size_max=60)\nfig.show()","f698663b":"trace = go.Choropleth(\n            locations = agg_data_df['country'],\n            locationmode='country names',\n            z = agg_data_df['Answers Factor'],\n            text = agg_data_df['country'],\n            autocolorscale =False,\n            reversescale = True,\n            colorscale = 'viridis',\n            marker = dict(\n                line = dict(\n                    color = 'rgb(0,0,0)',\n                    width = 0.5)\n            ),\n            colorbar = dict(\n                title = 'Answers factor',\n                tickprefix = '')\n        )\n\ndata = [trace]\nlayout = go.Layout(\n    title = 'Answer factor (percent of respondents from total \/ percent of population from total) per country',\n    geo = dict(\n        showframe = True,\n        showlakes = False,\n        showcoastlines = True,\n        projection = dict(\n            type = 'natural earth'\n        )\n    )\n)\n\nfig = dict( data=data, layout=layout )\niplot(fig)","c0f695a7":"draw_trace_bar(get_categories(multiple_df,'Q4'), \"Highest level of formal education\", \"Education\", \"Number of people\", \"Magenta\")","0cd98e8e":"draw_trace_bar(get_categories(multiple_df,'Q5'), \"Current job title\", \"Current job title\", \"Number of respondents\", \"Tomato\")","a417b4ce":"draw_trace_bar(get_categories(multiple_df,'Q6'), \"Years of experience\", \"Years of experience\", \"Number of respondents\", \"Red\")","b439c5ed":"draw_trace_bar(get_categories(multiple_df,'Q8'), \n               \"What programming language would you recommend an aspiring data scientist to learn first?\", \n               \"Programming language\", \"Number of respondents\", \"Lightblue\")","a6a41d5b":"draw_trace_bar(get_categories(multiple_df,'Q11'), \n               \"What type of computing platform do you use most often for your data science projects?\", \n               \"Computing platform\", \"Number of respondents\", \"Orange\")","fbd45405":"draw_trace_bar(get_categories(multiple_df,'Q22'), \n               multiple_df['Q22'].values[0], \n               \"ML methods included in the business\", \"Number of respondents\", \"Lightgray\")","aede3a48":"draw_trace_bar(get_categories(multiple_df,'Q21'), \n               multiple_df['Q21'].values[0], \n               \"Individuals involved in Data Science\", \"Number of respondents\", \"Darkgreen\")","6fb7d68f":"def get_categories_group(data, val_group, val):\n    tmp = data[1::].groupby(val_group)[val].value_counts()\n    return pd.DataFrame(data={'Number': tmp.values}, index=tmp.index).reset_index()","5dd644a3":"def draw_trace_group_bar(data_df, val_group, val, title, xlab, ylab,color='Blue'):\n    data = list()\n    groups = (data_df.groupby([val_group])[val_group].nunique()).index\n    for group in groups:\n        data_group_df = data_df[data_df[val_group]==group]\n        trace = go.Bar(\n                x = data_group_df[val],\n                y = data_group_df['Number'],\n                name = group,\n                #marker=dict(color=color),\n                text=data_group_df[val]\n            )\n        data.append(trace)\n\n    layout = dict(title = title,\n              xaxis = dict(title = xlab, showticklabels=True, tickangle=15,\n                          tickfont=dict(\n                            size=9,\n                            color='black'),), \n              yaxis = dict(title = ylab),\n              hovermode = 'closest'\n             )\n    fig = dict(data = data, layout = layout)\n    iplot(fig, filename='draw_trace')","06633b3d":"df = get_categories_group(multiple_df, 'Q1', 'Q2')\ndraw_trace_group_bar(df, 'Q1', 'Q2', 'Number of respondents by Sex and age', 'Sex', 'Number of respondents')","e2c6e248":"df = get_categories_group(multiple_df, 'Q1', 'Q4')\ndraw_trace_group_bar(df, 'Q1', 'Q4', 'Number of respondents by Age and Highest level of formal education', 'Highest level of formal education', 'Number of respondents')","9e0aaa5a":"df = get_categories_group(multiple_df, 'Q1', 'Q6')\ndraw_trace_group_bar(df, 'Q1', 'Q6', 'Number of respondents by Age and number of years of experience', \n                     'Number of years of experience', 'Number of respondents')","bf334725":"df = get_categories_group(multiple_df, 'Q4', 'Q6')\ndraw_trace_group_bar(df, 'Q4', 'Q6', 'Number of respondents by Highest level of formal education and Current yearly compensation', 'Current yearly compensation', 'Number of respondents')","46965d28":"df = get_categories_group(multiple_df, 'Q6', 'Q4')\ndraw_trace_group_bar(df, 'Q6', 'Q4', 'Number of respondents by Current title and years of experience', 'Current title', 'Number of respondents')","8340c76a":"We will make sure to include these columns in the following, besides the obvious options `Q1`, `Q2` ... `Q7`.","49e12a04":"<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n\n## Individuals responsible for data science at your place of business?","61ed5654":"\n<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n## Age interval\n\nLet's show the age interval, as declared by respondents. \nWe will create here also a function to count categories for categorical data and a function to draw barplots using Plotly.","795499ba":"## Highest level of formal education and current yearly compensation","b2ff5fa0":"\n<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n## Highest level of formal education","8d205ebf":"<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n\n## What computing platform use most often?","1b4ec2fb":"With 0.3% of the answers, seems that Romania is a bit better represented than other countries (since the percent from respondents is larger than Romania's population percent from entire World population). But let's compare the percent with US.","e2873e22":"\n<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n\n\n## Country\n\nWe will show here how Romania ranks between countries in the World in terms of number of answers.","ae14cb98":"## Current title and years of experience","89f5d57c":"\n<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n\n\n## Gender\n\nLet's explore the gender groups.","b333d193":"## Number of respondents by Age and Highest level of formal education","6643cd46":"Let's use UN Data to try to understand if there are correlations between GDP, GDP per capita, or other development indicators and percent of answers\/country.","7dfb5623":"## Age and number of years of experience","56febc48":"\n\n<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n## Columns to visualize\n\n\nSome of the following columns are grouped, to capture the multiple choice answers where the order of the answer gives the order of preferences. \nLet's check which columns groups have only one item in the group (columns with multiple items in the group will be called like `Q11_Part1`, `Q11_Part2`[...]. For this we will compose filters like `Q1`, `Q2`, ..., `Q11`, `Q12` etc. and filter the columns containing these values and count the items. We separate only the group of columns with one item in the group. These will be the columns we will further represent.\n\n","28bf85cd":"# <a id='2'>Prepare the data analysis<\/a>   \n\n\nBefore starting the analysis, we need to make few preparation: load the packages, load and inspect the data.\n\n","d5e6f0a6":"<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n\n# <a id='22'>Load the data<\/a>  \n","e371a4ae":"# <a id='1'>Introduction<\/a>  \n\nWe will analyze the dataset `2020 Kaggle ML & DS Survey` with answers provided by the respondents to the survey of Kaggle users in 2020.  \n\nFrom the total data, we will only focus on Romanian respondents. Romania is a small country in Europe, with a population of 19.2 milllion (according to last UN data estimates).\n\nAs a percent from entire World population, Romania population represents 0.25%.\n\n\n","85a5ce79":"Majority of the respondents from Romania are men (80%), with 20% only being women.","5d37a346":"# <a id='21'>Load packages<\/a>\n\nWe load the packages used for the analysis.","241b1cec":"There are three dataset files. Let's load the responses only.","cad50918":"<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n\n## What programming language to learn first?","56df0c25":"<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n\n## What computing platform use most often?","ecacb77d":"\n<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n\n## Years of experience writting code\n\nThe next question is about the description of the title.","d9e7fae3":"## Current job title\n\nThe next question is about the description of the industry of the current employer.","149ee7d1":"\n<a href=\"#0\"><font size=\"1\">Go to top<\/font><\/a>  \n\n\n# <a id='3'>Data exploration<\/a>  \n\n\nWe will first select only data from Romanian contributors.\n\nWe will also glimpse the free format response dataset.\n\n## Glimpse the data","feee7827":"It looks like there is not a large correlation between GDP per capita and the answer factor (calculated as ratio between percent of answers and percent of population). \n\nIn the same time, with the exception of Saudi Arabia and Republic of Korea, there are no countries with GDP per capita larger than 20,000$ and answer factor under one. \n\nAs for countries with GDP per capita larger than 40,000 $, with the exception of Germany and Belgium, all the countries have answer factor > 2. The largest answer factor is from Singapore, with allmost 9.\n\n\nRomania is placed, with his GDP per capita (as for 2017) < 10,000$, with an answer factor of 1.04.","c08cba33":"\n# <a id='4'>Combine the features<\/a>\n\n\nLet's visualize some of the dimmensions presented previously in combination. For example, let's see the combined distribution of sex and age to see how these two are distributed.\n\n## Number of respondents by Sex and Age","7b0e9eb8":"<h1><center><font size=\"6\">Is Romania on the Kaggle map?<\/font><\/center><\/h1>\n\n<center><img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/c\/c5\/EU-Romania_%28orthographic_projection%29.svg\/1024px-EU-Romania_%28orthographic_projection%29.svg.png\" width=\"400\"><\/img><\/center>  \n\n\n## <a id='0'>Content<\/a>\n\n- <a href='#1'>Introduction<\/a>  \n- <a href='#2'>Prepare the data analysis<\/a>  \n - <a href='#21'>Load packages<\/a>  \n - <a href='#21'>Load the data<\/a>  \n- <a href='#3'>Data exploration<\/a>   \n- <a href='#4'>Combine the features<\/a>   \n- <a href='#5'>Final note<\/a>   \n\n","9c3ba6fe":"Since USA population of 331 millions accounts for 4.25% of the World population and has 11.16% of the total answers, we see that actually Romania, with 120% factor of supra-representation on Kaggle, is well behind USA, with 260%.  \n\nIt is better represented by China, which, at a percent from World population of 18.47%, is underrepresented in the survey. This might be due to multiple factors: under-representation of China on Kaggle (we know that they have a lot on competitions locally) or reluctance of Chinese Kagglers to fill a survey.\n\nIt ranks lower than India, which have 29.2% of answers, whilst India population accounts for 17.7% of World population.\n\nI will use UN Data to get more insight into these disparities."}}