{"cell_type":{"453f95a5":"code","97756135":"code","8b7c4ce4":"code","dd33b824":"code","a6111326":"code","7a2da623":"code","d60e381f":"code","11d557c2":"code","258ca1b7":"code","321c0304":"code","ce7dcd27":"code","01aac91b":"code","3c96cc49":"code","74af0d42":"code","19b6e867":"code","57efe546":"code","e6757cba":"code","b948dab2":"code","9cb668eb":"code","fc519260":"code","928f1357":"code","13506846":"code","fb277970":"code","60d80be6":"code","6e6e1e44":"code","fb4c18ea":"code","22b8b2bd":"code","98507a4f":"code","8d91fea5":"code","651b28ec":"code","6364192b":"code","fa616ce0":"code","cc821f2e":"code","f462e98a":"code","d01cb159":"code","945f668b":"code","3fd04ddb":"code","05ae1879":"code","0c329c04":"code","11400c07":"code","befee72a":"code","125afdc4":"code","7096a24e":"code","85e192d9":"code","1dde518a":"markdown","77ada953":"markdown","c664f350":"markdown","7ec3d1d0":"markdown","94eaa170":"markdown","27b2c92b":"markdown","e94fd251":"markdown","8c030b72":"markdown","c9d3eec3":"markdown","a82160b1":"markdown","b5efa0a8":"markdown","dee07ebf":"markdown","fba8a78e":"markdown","2fb5992b":"markdown","a9f926d9":"markdown","5267b0d4":"markdown","0a71ecac":"markdown"},"source":{"453f95a5":"import warnings\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning)\nwarnings.filterwarnings(\"ignore\", category=FutureWarning)","97756135":"import pandas as pd\nimport numpy as np\nfrom sklearn import preprocessing\nimport matplotlib.pyplot as plt \nfrom sklearn.linear_model import LogisticRegression\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.metrics import roc_curve\nfrom sklearn.metrics import auc","8b7c4ce4":"heart=pd.read_csv(\"..\/input\/heart.csv\")\nheart.shape","dd33b824":"heart.head(5)","a6111326":"heart.dtypes","7a2da623":"heart['sex'][heart['sex'] == 0] = 'Female'\nheart['sex'][heart['sex'] == 1] = 'Male'\n\nheart['cp'][heart['cp'] == 1] = 'Typical angina'\nheart['cp'][heart['cp'] == 2] = 'Atypical angina'\nheart['cp'][heart['cp'] == 3] = 'Non-anginal pain'\nheart['cp'][heart['cp'] == 4] = 'Asymptomatic'\n\nheart['fbs'][heart['fbs'] == 0] = 'Lower than 120mg\/ml'\nheart['fbs'][heart['fbs'] == 1] = 'Greater than 120mg\/ml'\n\nheart['restecg'][heart['restecg'] == 0] = 'Normal'\nheart['restecg'][heart['restecg'] == 1] = 'ST-T wave abnormality'\nheart['restecg'][heart['restecg'] == 2] = 'Left ventricular hypertrophy'\n\nheart['exang'][heart['exang'] == 0] = 'No'\nheart['exang'][heart['exang'] == 1] = 'Yes'\n\nheart['slope'][heart['slope'] == 1] = 'Upsloping'\nheart['slope'][heart['slope'] == 2] = 'Flat'\nheart['slope'][heart['slope'] == 3] = 'Downsloping'\n\nheart['thal'][heart['thal'] == 1] = 'Normal'\nheart['thal'][heart['thal'] == 2] = 'Fixed defect'\nheart['thal'][heart['thal'] == 3] = 'Reversable defect'","d60e381f":"heart['sex']=heart['sex'].astype('object')\nheart['fbs']=heart['fbs'].astype('object')\nheart['restecg']=heart['restecg'].astype('object')\nheart['exang']=heart['exang'].astype('object')\nheart['thal']=heart['thal'].astype('object')\nheart['target']=heart['target'].astype('object')","11d557c2":"heart.dtypes","258ca1b7":"heart.describe()","321c0304":"heart['ca'].unique()","ce7dcd27":"heart['thal'].unique()","01aac91b":"heart['target'].value_counts()","3c96cc49":"sns.countplot(x='target',data=heart,palette='hls')\nplt.show()","74af0d42":"sns.distplot(heart['age'])","19b6e867":"sns.distplot(heart['chol'])","57efe546":"sns.distplot(heart['trestbps'])","e6757cba":"sns.distplot(heart['thalach'])","b948dab2":"sns.distplot(heart['ca'])","9cb668eb":"count_no = len(heart[heart['target']==0])\ncount_yes = len(heart[heart['target']==1])\npct_of_no = count_no\/(count_no+count_yes)\nprint(\"Percentage of people not having heart disease is\", pct_of_no*100)\npct_of_yes = count_yes\/(count_no+count_yes)\nprint(\"Percentage of people having heart disease is\", pct_of_yes*100)","fc519260":"heart.groupby('sex').mean()","928f1357":"heart.groupby('cp').mean()","13506846":"heart.groupby('fbs').mean()","fb277970":"heart.groupby('thal').mean()","60d80be6":"heart.groupby('ca').mean()","6e6e1e44":"pd.crosstab(heart.sex,heart.target).plot(kind='bar')\nplt.title('Heart disease frequency in gender')\nplt.xlabel('Sex')\nplt.ylabel('Frequency of Heart Disease')","fb4c18ea":"heart.age.hist()\nplt.title('Histogram of Age')\nplt.xlabel('Age')\nplt.ylabel('Frequency')","22b8b2bd":"correlation=heart.corr()\ncorrelation","98507a4f":"heart= pd.get_dummies(heart, drop_first=True)","8d91fea5":"heart.head(4)","651b28ec":"x=heart.iloc[:,0:13]\ny=heart['target_1']\nx_train, x_test, y_train, y_test = train_test_split(x,y,test_size = .2, random_state=10) ","6364192b":"print(x_train.shape)\nprint(x_test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","fa616ce0":"x_train.head(3)","cc821f2e":"y_train.head()","f462e98a":"import statsmodels.api as sm\nlogit_model = sm.Logit(y, x)\nresult=logit_model.fit()\nprint(result.summary())","d01cb159":"logreg=LogisticRegression()\nlogreg.fit(x_train,y_train)\npred = logreg.predict(x_test)\nprint('Accuracy of logistic regression classifier on test set: {:.2f}'.format(logreg.score(x_test, y_test)))","945f668b":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, pred))","3fd04ddb":"cols=['thalach', 'oldpeak', 'ca', 'sex_Male', 'cp_Atypical angina', \n      'cp_Non-anginal pain', 'cp_Typical angina'] \nX=x_train[cols]\nY=y_train\nlogit_model=sm.Logit(Y,X)\nresult=logit_model.fit()\nprint(result.summary2())","05ae1879":"logreg=LogisticRegression()\nlogreg.fit(X,Y)\npred = logreg.predict(X)","0c329c04":"print('Accuracy of logistic regression classifier on test set: {:.2f}'.format(logreg.score(X, Y)))","11400c07":"from sklearn.metrics import confusion_matrix\nconfusion_matrix = confusion_matrix(Y, pred)\nprint(confusion_matrix)","befee72a":"total=sum(sum(confusion_matrix))\n\nsensitivity = confusion_matrix[0,0]\/(confusion_matrix[0,0]+confusion_matrix[1,0])\nprint('Sensitivity : ', sensitivity )\n\nspecificity = confusion_matrix[1,1]\/(confusion_matrix[1,1]+confusion_matrix[0,1])\nprint('Specificity : ', specificity)","125afdc4":"fpr, tpr, thresholds = roc_curve(Y, pred)\n\nfig, ax = plt.subplots()\nax.plot(fpr, tpr)\nax.plot([0, 1], [0, 1], transform=ax.transAxes, ls=\"--\", c=\".3\")\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.0])\nplt.rcParams['font.size'] = 12\nplt.title('ROC curve for diabetes classifier')\nplt.xlabel('False Positive Rate (1 - Specificity)')\nplt.ylabel('True Positive Rate (Sensitivity)')\nplt.grid(True)","7096a24e":"auc(fpr, tpr)","85e192d9":"from sklearn.metrics import classification_report\nprint(classification_report(Y, pred))","1dde518a":"Splitting the data into train and test dataset","77ada953":"# Logistic Regression On Heart Disease dataset","c664f350":"**id:** patient identification number \n<br>**age:** age in years\n<br>**sex:**(1 = male; 0 = female)\n<br>**cpchest:** pain type\n<br>**trestbps:** resting blood pressure (in mm Hg on admission to the hospital)\n<br>**chol:** serum cholestoral in mg\/dl\n<br>**fbs:** (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)\n<br>**restecg:** resting electrocardiographic results\n<br>**thalach:** maximum heart rate achieved\n<br>**exang:** exercise induced angina (1 = yes; 0 = no)\n<br>**oldpeak:** ST depression induced by exercise relative to rest\n<br>**slope:** the slope of the peak exercise ST segment\n<br>**ca:** number of major vessels (0-3) colored by flourosopy\n<br>**thal:** 3 = normal; 6 = fixed defect; 7 = reversable defect\n<br>**target:**  1= Yes. Has heart disease, 0=No. Does not have heart disease.","7ec3d1d0":"### Creating Dummy Variables ","94eaa170":"### Identifying the area under curve","27b2c92b":"Importing the required libraries","e94fd251":"# Building the logistic model","8c030b72":"From the output we can see that the frequency of heart disease in Females(sex=0) is less as compared to Males(sex=1).","c9d3eec3":"Checking the dimension of the dataset","a82160b1":"### Sensitivity and Specificity","b5efa0a8":"Data description-","dee07ebf":"### Removing variables having p-values>0.05 and rebuilding the model","fba8a78e":"Predicting the test result and calculating the accuracy","2fb5992b":"### Confusion Matrix","a9f926d9":"The output tells that there are 79 + 125 correct predictions and 14 + 24 incorrect predictions.","5267b0d4":"### Precision, Recall, F-score and Support","0a71ecac":"**Precision:** is the ratio TP \/ (TP + FP) where TP is number of true positives and FP number of false positives. The precision is intuitively the ability of the classifier to not label a sample as positive if it is negative.\n\n<br>**Recall:** is the ratio TP \/ (TP + FN) where TP is the number of true positives and FN number of false negatives. The recall is intuitively the ability of the classifier to find all the positive samples.\n\n<br>**F-score:** can be interpreted as a weighted harmonic mean of the precision and recall, where an F score reaches its best value at 1 and worst score at 0. The F score weights the recall more than the precision by a factor of beta. beta = 1.0 means recall.\n\n<br>**Support:** is the number of occurrences of each class in y_test."}}