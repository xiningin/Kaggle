{"cell_type":{"533765ba":"code","94110749":"code","11ee4800":"code","15ab40e5":"code","c6f37b93":"code","a394e1e3":"code","6b6567b4":"code","a9055fab":"code","d3478d01":"code","8f428c2b":"code","6fc7e1ab":"code","d5c98277":"code","8060f18e":"code","adc72121":"code","7a5eddf9":"code","1988ea77":"code","b3d64c42":"code","4b8f90ce":"code","64233487":"code","82a08436":"code","43cd0096":"code","df1156b9":"code","f116ad82":"code","8ecd3f3b":"code","f43322c3":"code","3a275fda":"code","33fcc108":"code","d34a5798":"code","6f9dd71c":"code","1d4811d0":"code","1f08498d":"markdown","cebfb984":"markdown","c15f1b6a":"markdown","e87147bc":"markdown","ad8cdc1d":"markdown","db4fb34c":"markdown","acc2cc52":"markdown","1c013f85":"markdown","a4163c35":"markdown","d99bb944":"markdown","da91ddd7":"markdown","e6033a85":"markdown","a6ea9bf0":"markdown","b3da043b":"markdown","31d2a972":"markdown","bfd8de9a":"markdown","e6bb2053":"markdown","728b02f4":"markdown","3aef63e7":"markdown","c287cfd8":"markdown","31889087":"markdown"},"source":{"533765ba":"import warnings\nwarnings.filterwarnings('ignore')\n \nimport pandas            as pd\nimport numpy             as np\nimport matplotlib.pyplot as plt\nimport seaborn           as sns\n \nfrom collections import Counter \n \nplt.style.use('seaborn-whitegrid')","94110749":"data = pd.read_csv('..\/input\/titanic\/train.csv')","11ee4800":"data.head()","15ab40e5":"data.info()","c6f37b93":"data.columns","a394e1e3":"data.dtypes","6b6567b4":"def bar_plot(variable):\n    '''\n    input: variable ex: 'age'\n    output: bar blot & value count\n    ''' \n    colors = ['#fe4a49','#2ab7ca','#fed766','#e6e6ea','#f4f4f8']\n   \n    var = data[variable]\n    varValue = var.value_counts()\n    plt.figure(figsize = (8,5))\n    b = plt.bar(varValue.index, varValue, color = colors)\n    for i in b: \n        height = i.get_height()\n        plt.text(i.get_x() + i.get_width()\/2, height, height, ha = 'center', va = 'bottom')\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.title(variable)\n    plt.tight_layout()  \n    plt.show()","a9055fab":"category1 = ['Survived', 'Pclass', 'Sex','SibSp', 'Parch', 'Embarked']\nfor i in category1:\n    bar_plot(i)","d3478d01":"category2 = ['Name', 'Cabin', 'Ticket'] \nfor n in category2:\n    print (data[n].value_counts())","8f428c2b":"def plot_hist(variable):\n    plt.figure(figsize=(8,5))\n    data[variable].hist(bins = 50, color = '#4990fe')\n    plt.xlabel(variable)\n    plt.title(f\"{variable} dist with histogram\") \n    plt.show()","6fc7e1ab":" \nnumericVar = [ 'Age', 'Fare']\nfor n in numericVar:\n    plot_hist(n)","d5c98277":"data.groupby('Sex', as_index = False )['Survived'].mean().sort_values( by = ['Survived'], ascending = False ) ","8060f18e":"data.groupby('Pclass', as_index = False )['Survived'].mean().sort_values(by = ['Survived'], ascending = False)","adc72121":" data.groupby('SibSp', as_index = False).Survived.mean().sort_values(by = 'Survived', ascending = False)","7a5eddf9":" data.groupby('Parch', as_index = False ).Survived.mean().sort_values(by = 'Survived', ascending = False )","1988ea77":"def outlier_det(df, features):\n    outliers_in = []\n    for i in features :\n \n        Q1 = np.percentile(df[i], 25)\n        Q3 = np.percentile(df[i], 75)\n        IQR = Q3 - Q1\n        outlier_step = IQR * 1.5\n        \n        outlier_col = df[(df[i] < Q1 - outlier_step) | (df[i] > Q3 + outlier_step)].index\n        \n        outliers_in.extend(outlier_col)\n    \n    outliers_in = Counter(outliers_in)\n    multiple_outliers = [ i for i, v in outliers_in.items() if v > 2]\n  \n    return multiple_outliers","b3d64c42":"data.loc[outlier_det(data, ['Age', 'SibSp', 'Fare', 'Parch'])]","4b8f90ce":"data.isnull().sum()","64233487":"data[data.Age.isnull()]","82a08436":"data[data.Embarked.isnull()] ","43cd0096":"round(data.Age[data.Sex == 'male'].mean())","df1156b9":"round(data.Age[data.Sex == 'female'].mean())","f116ad82":"data.Age[(data.Sex == 'male') & (data.Age.isnull())]   = 31\ndata.Age[(data.Sex == 'female') & (data.Age.isnull())] = 28","8ecd3f3b":"data.isnull().sum()","f43322c3":"data[data.Embarked.isnull()]","3a275fda":"plt.figure(figsize = (8,5)) \ndata.boxplot( column = 'Fare', by = 'Embarked')  \nplt.show()  ","33fcc108":"data.groupby('Embarked')['Fare'].mean()","d34a5798":"data[data.Embarked.isnull()] ","6f9dd71c":"data.Embarked.fillna('C', inplace = True) ","1d4811d0":"data.iloc[[61,829]]","1f08498d":"<a id='1'><\/a><br>\n# Import necessary libraries","cebfb984":"<a id = '7'><\/a>\n## Numerical Variable","c15f1b6a":"<a id = '3'><\/a> \n# Data dictionary \n \n* PassengerId - id of passenger\n* Survived    - survived 1(yes)\/0(no)\n* Pclass      - ticket class 1\/2\/3 \n* Name        - name of passenger\n* Sex         - gender male\/female\n* Age         - age of passenger\n* SibSp       - number of sibling\/spouses\n* Parch       - number of parents\/children\n* Ticket      - ticket number \n* Fare        - passenger fare\n* Cabin       - cabin number\n* Embarked    - port  C - Cherbourg, Q - Queenstown, S - Southampton","e87147bc":"_Median of Cherbourg(C) is equal to 59.95 and this value is close to 80. I decided to fill missing values of Embarked column with 'C'_","ad8cdc1d":"# **Introduction**\n_Titanic was a British passenger liner operated by the White Star Line that sank in the North Atlantic Ocean in the early morning hours of 15 April 1912, after striking an iceberg during her maiden voyage from Southampton to New York City. Of the estimated 2,224 passengers and crew aboard, more than 1,500 died, making the sinking one of modern history's deadliest peacetime commercial marine disasters._","db4fb34c":"_There are 177 missed values in 'Age' colunm. We will fill these values  with avarage age of all passengers(by male\/female)._","acc2cc52":"_In this section I'll show gouping data by Survived._","1c013f85":"<a id = '9'><\/a>\n# Outlier detection","a4163c35":"int = PassengerID, Survived, Pclass, SibSp, Parch<br>\nfloat = Age, Fare<br>\nobject = Name, Sex, Ticket, Cabin, Embarked","d99bb944":"* Age\n* Embarked","da91ddd7":" \n<a id = '11'><\/a> \n## Find missing values","e6033a85":"_Avarage age for males is 31 and for females 28._","a6ea9bf0":" \n<a id = '4'><\/a>\n# Variable description","b3da043b":"<a id='2'><\/a>  \n# Load and check data","31d2a972":" _There are 2 missing values in Embarked column. I'll fill them with the help of Fare column._","bfd8de9a":" \n<a id = '6'><\/a>\n# Categorical Variable","e6bb2053":" \n<a id='12'><\/a>\n## Fill missed values","728b02f4":" \n<a id='10'><\/a> \n#  Working with missing values\n* Find missing values\n* Fill missing values","3aef63e7":"\n<a id = '8'><\/a>\n# Basic data analysis","c287cfd8":" \n## Contents:\n \n1. [Import necessary libraries](#1)\n1. [Load and check data](#2)\n1. [Data dictionary](#3) \n1. [Variable description](#4)\n    * [Univariate Variable Analysis](#5)\n        * [Categorical Variable](#6)\n        * [Numerical Variable](#7) \n1. [Basic data analysis](#8)\n1. [Outlier detection](#9) \n1. [Working with missing values](#10) \n    * [Find missing values](#11)\n    * [Fill missing values](#12)","31889087":" \n<a id = '5'><\/a>\n# Univariate Variable Analysis\n * Categorical variable: Survived, Pclass, Sex, SibSp, Parch, Ticket, Cabin, Embarked\n * Numerical variable: PassengerID, Age and Fare"}}