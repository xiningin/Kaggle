{"cell_type":{"1d21b03f":"code","8e4f37e8":"code","decf12aa":"code","29dbfd74":"code","60018a22":"code","9cb22669":"code","fb227f73":"code","61ee1486":"code","31697950":"code","91004e62":"code","e8391944":"code","43a40bc7":"code","4585420f":"code","05255b32":"code","997843e9":"code","f2dd678f":"code","13b3e8e8":"code","a71b3d83":"code","15ea5a22":"code","d91173d2":"code","3aea0c3e":"code","7f6be90f":"code","773e94f2":"code","77d85f6a":"code","f10f15fd":"code","a2bde123":"code","92b91c48":"code","2cbe2a46":"code","cf52d551":"markdown","1ff39539":"markdown"},"source":{"1d21b03f":"# Importing all the libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","8e4f37e8":"# Loading the files\ntrain = pd.read_csv(\"..\/input\/slashing-the-lowest-prices\/Train.csv\")\ntest = pd.read_csv(\"..\/input\/slashing-the-lowest-prices\/Test.csv\")","decf12aa":"# Printing them\ntrain.head()","29dbfd74":"test.head()","60018a22":"# Changing the type\ntest['Demand'] = test['Demand'].astype('int64')\n","9cb22669":"# # Changing the type\ntrain['Demand'] = train['Demand'].astype('int64')","fb227f73":"# Fixing the X_train and dropping columns\nX_train = train.drop(['Item_Id', 'Date', 'Low_Cap_Price'],axis = 1)\nX_train.columns","61ee1486":"# Same process like above\nX_test = test.drop(['Item_Id', 'Date'], axis = 1)\nX_test.columns","31697950":"# Setting the predict variabkle here and the shape\ny_train = train['Low_Cap_Price']","91004e62":"X_train.shape","e8391944":"# Trying LR\nfrom sklearn.linear_model import LinearRegression\nclf = LinearRegression()\nclf.fit(X_train, y_train)","43a40bc7":"preds = clf.predict(X_test)\npreds","4585420f":"#submission = pd.DataFrame({'Item_Id':test['Item_Id'], 'Low_Cap_Price':preds})\n#submission.to_csv('SumissionFile.csv', index=False)","05255b32":"# Trying RF\n\nfrom sklearn.ensemble import RandomForestRegressor\nclf2 = RandomForestRegressor(bootstrap= True,max_depth=10, max_features=6, n_estimators=400,min_samples_leaf=6\n                             ,min_samples_split=12, random_state=10,ccp_alpha=0,n_jobs=-1) \nclf2.fit(X_train,y_train)","997843e9":"preds2 = clf2.predict(X_test)\npreds2","f2dd678f":"#submission = pd.DataFrame({'Item_Id':test['Item_Id'], 'Low_Cap_Price':preds2})\n#submission.to_csv('SubmissionFile.csv', index=False)","13b3e8e8":"# Trying Standart scaler\nfrom sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler().fit(X_train)\nrescaled_X_train = scaler.transform(X_train)","a71b3d83":"# Trying Knn\nfrom sklearn.neighbors import KNeighborsRegressor\nclf3 = KNeighborsRegressor(algorithm='brute')\n\nclf3.fit(X_train,y_train)\n#from sklearn.neighbors import KNeighborsRegressor\n\n","15ea5a22":"preds3 = clf3.predict(X_test)\npreds3","d91173d2":"#submission = pd.DataFrame({'Item_Id':test['Item_Id'], 'Low_Cap_Price':preds3})\n#submission.to_csv('Submission Files.csv', index=False)","3aea0c3e":"# trying svr\nfrom sklearn.svm import SVR\nclf4 = SVR(kernel = 'linear')\nclf4.fit(X_train,y_train)\n","7f6be90f":"preds4 = clf4.predict(X_test)\npreds4","773e94f2":"#submission = pd.DataFrame({'Item_Id':test['Item_Id'], 'Low_Cap_Price':preds4})\n#submission.to_csv('Submission Files.csv', index=False)","77d85f6a":"#submission = pd.DataFrame({'Item_Id':test['Item_Id'], 'Low_Cap_Price':preds5})\n#submission.to_csv('Submission Files.csv', index=False)","f10f15fd":"# Selecting the best params\n\nfrom sklearn.model_selection import GridSearchCV\n# Create the parameter grid based on the results of random search \nparam_grid = {\n    'bootstrap': [True],\n    'max_depth': [10,50,80, 90, 100, 110],\n    'max_features': [2, 3,5,6],\n    'min_samples_leaf': [3, 4, 5],\n    'min_samples_split': [8, 10, 12],\n    'n_estimators': [100, 200,400, 300, 1000]\n}\n# Create a based model\nrf = RandomForestRegressor()\n# Instantiate the grid search model\ngrid_search = GridSearchCV(estimator = rf, param_grid = param_grid, \n                          cv = 10, n_jobs = -1, verbose = 2)","a2bde123":"grid_search.fit(X_train, y_train)","92b91c48":"grid_search.best_params_\n","2cbe2a46":"# The settings by which we got the best result\n\n#from sklearn.ensemble import RandomForestRegressor\n#clf2 = RandomForestRegressor(bootstrap= True,max_depth=10, max_features=6, n_estimators=400,min_samples_leaf=5\n                             #,min_samples_split=12, random_state=10) \n#clf2.fit(X_train,y_train)\n\n#This got me 99.84988 ","cf52d551":"## Competition: HackerEarth Machine Learning challenge: Slashing prices for the biggest sale day\n\n### Task: Predict the lowest price\n\nA leading global leader of e-commerce has over 150 million paid subscription users. One of the many perks of the subscription is the privilege of buying products at lower prices. For an upcoming sale, the organization has decided to promote local artisans and their products, to help them through these tough times. However, slashed prices may impact local artists.\n\nTo not let discounts affect local artists, the company has decided to determine the lowest price at which a particular good can be sold. Your task is to build a predictive model using Machine Learning that helps them set up a lowest-pricing model for these products.\n\nYou have to predict the Low_Cap_Price column.\n\nThe dataset folder consists of the following files:\n\n- Train.csv: Contains training data [9798 x 9] that must be used to build the model\n- Test.csv: Contains test data [5763 x 8] to be predicted on\n- sample_submission.csv: Contains sample submission format with dummy values filled for test data","1ff39539":"# Author: Kazi Amit Hasan\n\nDepartment of Computer Science & Engineering, <br\/>\nRajshahi University of Engineering & Technology (RUET) <br\/>\nWebsite: https:\/\/amithasanshuvo.github.io\/ <br\/>\nResearchGate:\u00a0https:\/\/www.researchgate.net\/profile\/Kazi_Amit_Hasan <br\/>\nLinkedin: hhttps:\/\/www.linkedin.com\/in\/kazi-amit-hasan\/<br\/>\nEmail: kaziamithasan89@gmail.com <hr>\n\n## Position: 33th out of 487 participants (Top 6%) \nLeaderboard: [Link](https:\/\/www.hackerearth.com\/challenges\/competitive\/hackerearth-machine-learning-challenge-predict-the-lowest-price\/leaderboard\/predict-the-lowest-price-8-9ffabe00\/page\/1\/)"}}