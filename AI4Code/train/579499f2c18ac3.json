{"cell_type":{"339d0f96":"code","3d7e0f4e":"code","eeb69dc2":"code","b2649400":"code","3e4806ef":"code","9868251c":"code","7870c952":"code","d1c8e158":"code","ab628f4a":"code","20fd385a":"code","4a68669c":"code","3a726d73":"code","43c8f818":"code","21824ecc":"code","406b5186":"code","22255c13":"code","eef28f8f":"code","fb875ea2":"code","066b365b":"code","aae71d67":"code","bef12d57":"code","fdb2d797":"code","09d33812":"code","48a2bc43":"code","56e66bca":"code","1dadf1f7":"code","379bd356":"code","310792d8":"code","c982b7f7":"code","ce69d56c":"code","15f403d5":"code","d3224399":"code","2668f70c":"markdown"},"source":{"339d0f96":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3d7e0f4e":"data = pd.read_csv('\/kaggle\/input\/sanfranciso-crime-dataset\/Police_Department_Incidents_-_Previous_Year__2016_.csv')\ndata.head()","eeb69dc2":"data.info()","b2649400":"data.describe()","3e4806ef":"data.shape","9868251c":"# data.iloc[data.isnull().sum()>0]\ndata[data.isnull().sum(axis = 1)>0]","7870c952":"data.PdDistrict.value_counts()","d1c8e158":"data['PdDistrict'].fillna(data['PdDistrict'].mode()[0], inplace = True)\n\ndata[data.isnull().sum(axis = 1)>0]","ab628f4a":"# #Missing Values\n# from sklearn.experimental import enable_iterative_imputer\n# from sklearn.impute import IterativeImputer\n# help(IterativeImputer)","20fd385a":"# it = IterativeImputer()\n# new_data = it.fit_transform(data)\n# new_data","4a68669c":"import datetime as dt","3a726d73":"data.dtypes","43c8f818":"data.Date = pd.to_datetime(data.Date)\ndata.Date","21824ecc":"data.Time = pd.to_datetime(data.Time).dt.time\ndata.Time","406b5186":"data.info()","22255c13":"data.head()","eef28f8f":"# col_objects = ['Category','Descript','DayOfWeek','Time','PdDistrict','Resolution','Address','Location']\n\n# for col in col_objects:\n#     data[col] = data[col].astype(str)\n# data.info()","fb875ea2":"import matplotlib.pyplot as plt\nimport seaborn as sns","066b365b":"plt.rcParams['figure.figsize'] = (20,9)\nplt.style.use('dark_background')\n\nsns.countplot(data['Category'],palette = 'gnuplot')\n\nplt.title('Major Crimes in Sanfrancisco', fontweight = 30, fontsize =20)\nplt.xticks(rotation = 90)\nplt.show()","aae71d67":"data.Descript.value_counts(normalize=True)","bef12d57":"data.DayOfWeek.value_counts(normalize=True)","fdb2d797":"sns.catplot(data = data, x = 'DayOfWeek', kind = 'count',palette = 'gnuplot', aspect = 1.8,\n            order = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'])\n\nplt.title('Day of the week', fontweight = 30, fontsize =20)\n# plt.xticks(rotation = 90)\nplt.show()","09d33812":"data.Time.value_counts().plot.line()\nplt.show()","48a2bc43":"sns.catplot(data = data, x = 'PdDistrict', kind = 'count',palette = 'gnuplot', aspect = 2.8)\n\nplt.title('District', fontweight = 30, fontsize =20)\n# plt.xticks(rotation = 90)\nplt.show()","56e66bca":"data.Resolution.value_counts()","1dadf1f7":"import folium","379bd356":"# San Francisco latitude and longitude values\nlatitude = 37.77\nlongitude = -122.42\n\n# create map and display it\nsanfran_map = folium.Map(location=[latitude, longitude], zoom_start=12)\n\n# display the map of San Francisco\nsanfran_map","310792d8":"# get the first 100 crimes in the df_incidents dataframe\nlimit = 100\ndf_incidents = data.iloc[0:limit, :]\n\n# instantiate a feature group for the incidents in the dataframe\nincidents = folium.map.FeatureGroup()\n\n# loop through the 100 crimes and add each to the incidents feature group\nfor lat, lng, in zip(df_incidents.Y, df_incidents.X):\n    incidents.add_child(\n        folium.CircleMarker(\n            [lat, lng],\n            radius=5, # define how big you want the circle markers to be\n            color='yellow',\n            fill=True,\n            fill_color='blue',\n            fill_opacity=0.6\n        )\n    )\n\n# add incidents to map\nsanfran_map.add_child(incidents)\nsanfran_map","c982b7f7":"# instantiate a feature group for the incidents in the dataframe\nincidents = folium.map.FeatureGroup()\n\ndf_incidents = data\n\n# loop through the 100 crimes and add each to the incidents feature group\nfor lat, lng, in zip(df_incidents.Y, df_incidents.X):\n    incidents.add_child(\n        folium.CircleMarker(\n            [lat, lng],\n            radius=5, # define how big you want the circle markers to be\n            color='yellow',\n            fill=True,\n            fill_color='blue',\n            fill_opacity=0.6\n        )\n    )\n\n# add pop-up text to each marker on the map\nlatitudes = list(df_incidents.Y)\nlongitudes = list(df_incidents.X)\nlabels = list(df_incidents.Category)\n\nfor lat, lng, label in zip(latitudes, longitudes, labels):\n    folium.Marker([lat, lng], popup=label).add_to(sanfran_map)    \n    \n# add incidents to map\nsanfran_map.add_child(incidents)\nsanfran_map","ce69d56c":"data.PdDistrict.value_counts(normalize=True)","15f403d5":"data.PdDistrict.value_counts(normalize=True).plot.pie()","d3224399":"data.groupby('PdDistrict')['PdId'].count().plot(kind = 'bar')","2668f70c":"1. ### **Data Visualisation**"}}