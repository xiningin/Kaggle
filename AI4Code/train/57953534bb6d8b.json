{"cell_type":{"c05c67a4":"code","37a4be42":"code","542aee5d":"code","5ac6dbc1":"code","9c3bdce9":"code","c6f3edbc":"code","5c7bdd60":"code","a702113a":"code","82115e23":"code","33e14933":"code","577993f8":"code","5c97e372":"code","07ef3277":"code","29bf5e5e":"code","a0f753ca":"code","581d7a01":"code","97f3fd31":"code","59de41e1":"code","b7ab2c30":"code","2a02699b":"code","55dc20b6":"code","3dc8da44":"code","47e89a97":"code","c2ae26f3":"code","0a5e4280":"code","55e46b42":"code","9e378c91":"code","79bbe10a":"code","e7f3b7fb":"code","3ade2072":"code","f747a353":"code","9fbab88e":"code","468b6cc0":"code","6067dde0":"markdown","29de61b0":"markdown","a2d9e9af":"markdown","19a7a974":"markdown","c62b7e66":"markdown"},"source":{"c05c67a4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","37a4be42":"df=pd.read_csv(\"..\/input\/heart-disease-uci\/heart.csv\")","542aee5d":"df","5ac6dbc1":"df[\"sex\"].value_counts()","9c3bdce9":"df[\"target\"].value_counts()","c6f3edbc":"df1=df.iloc[1:,1:13]","5c7bdd60":"df2=df.iloc[1:,13:14]","a702113a":"import matplotlib.pyplot as plt\nimport seaborn as sns","82115e23":"sns.countplot(x=\"target\",data=df)","33e14933":"sns.countplot(x=\"sex\",data=df)","577993f8":"plt.figure(figsize=(20,20))\n\nsns.heatmap(df.corr())","5c97e372":"df.corr()","07ef3277":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split","29bf5e5e":"x_tr,x_te,y_tr,y_te=train_test_split(df1,df2,test_size=.2)","a0f753ca":"de=DecisionTreeClassifier()","581d7a01":"de.fit(x_tr,y_tr)","97f3fd31":"from sklearn.metrics import plot_confusion_matrix\nfrom sklearn.metrics import accuracy_score","59de41e1":"y_pred=de.predict(x_te)","b7ab2c30":"plot_confusion_matrix(de,x_te,y_te)","2a02699b":"print(\"acc_score=\")\nprint(accuracy_score(y_te,y_pred)*100)","55dc20b6":"from sklearn.svm import SVC\nprint(y_te)","3dc8da44":"v=SVC(kernel='rbf').fit(x_tr,y_tr)\ny_pred1=v.predict(x_te)","47e89a97":"plot_confusion_matrix(v,x_te,y_te)","c2ae26f3":"print(\"acc_score=\")\nprint(accuracy_score(y_te,y_pred1)*100)","0a5e4280":"from sklearn.ensemble import RandomForestClassifier","55e46b42":"rf=RandomForestClassifier()","9e378c91":"rf.fit(x_tr,y_tr)","79bbe10a":"y_pred2=rf.predict(x_te)","e7f3b7fb":"print(\"acc score for random forest::\")\nprint(accuracy_score(y_te,y_pred2)*100)\n","3ade2072":"from sklearn.neighbors import KNeighborsClassifier","f747a353":"acc = []\n# Will take some time\nfrom sklearn import metrics\nfor i in range(1,40):\n    neigh = KNeighborsClassifier(n_neighbors = i).fit(x_tr,y_tr)\n    yhat = neigh.predict(x_te)\n    acc.append(metrics.accuracy_score(y_te, yhat))","9fbab88e":"x=np.linspace(1,39,39)\nplt.plot(x,acc)","468b6cc0":"print(\"the highest accouracy score for KNN is::\")\nprint(acc[18]*100)","6067dde0":"# decision tree","29de61b0":"df[\"sex\"].count()","a2d9e9af":"# Random forest","19a7a974":"# KNN","c62b7e66":"# svm"}}