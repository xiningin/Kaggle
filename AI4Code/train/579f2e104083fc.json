{"cell_type":{"cc213547":"code","404d57b4":"code","107f5a3b":"code","6d29ba1b":"code","627719c1":"code","4306fcd9":"code","bbae1c4a":"code","2dc6ea7f":"code","5d8b352b":"code","8a290609":"code","5e15989e":"code","9e4a6a07":"code","fae8ec6e":"code","656fd0c6":"code","c335811f":"code","8ea3a137":"code","8613aa89":"code","d434c3ef":"code","e279895b":"code","ffb76a0e":"code","192b5fac":"code","aa010a4f":"code","0691c72f":"markdown","175e3e39":"markdown","7dad96b3":"markdown","bfcd69e3":"markdown","dd74e767":"markdown","6f386deb":"markdown","313b4893":"markdown","8a0c09c3":"markdown","947d0b24":"markdown","d242a06c":"markdown","40013d6b":"markdown","c1d0ca1c":"markdown","fd5bdc83":"markdown","596dacd5":"markdown","55c8ec17":"markdown","b0a5bd76":"markdown","b6834547":"markdown","28cdcf85":"markdown","472a7ddf":"markdown","2d0ea881":"markdown","2b9b5fcf":"markdown","aa4418f4":"markdown","7ad46dd1":"markdown"},"source":{"cc213547":"import pandas as pd\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport numpy as np\nimport yaml\nfrom collections import Counter\nfrom sklearn.preprocessing import OneHotEncoder, LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.manifold import TSNE\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV, cross_val_score\nfrom sklearn.metrics import accuracy_score","404d57b4":"def split_to_onehot(df, col):\n    \"\"\"\n    This method converts features separated by '|' into one-hot vectors.\n    Additionally it drops unnecessary values, which present only in\n    test set \/ train set or have only one value.\n    \"\"\"\n    # Getting all unique ganres values.\n    unique = []\n    for i in df.index:\n        unique.extend(df.loc[i, col].split(\"|\"))\n    if \"\" in unique:\n        unique.remove(\"\")\n    unique = list(set(unique))\n\n    # Putting values into binary form\n    onehot = df.loc[:, [\"Category\"]]\n    onehot[unique] = np.zeros((len(unique),), dtype=np.int8)\n    for i in df.index:\n        g = set(df.loc[i, col].split(\"|\"))\n        for j in g:\n            if j != \"\":\n                onehot.loc[i, j] = 1\n\n    # Dropping unnecessary values\n    _a = onehot.groupby(\"Category\").sum()\n    only_one = list(_a.sum()[_a.sum() == 1].index)\n    only_train = list(_a.loc[\"none\"][_a.loc[\"none\"] == 0].index)\n    only_test = list(_a.loc[[\"like\", 'dislike']].sum()[_a.loc[[\"like\", 'dislike']].sum() == 0].index)\n    _a = set(only_one + only_train + only_test)\n    onehot = onehot.drop(_a, axis=1)\n\n    return onehot\n\n\ndef onehot_to_tsne2(df, title):\n    \"\"\"\n    This method converts one-hot representation into two tsne values.\n    Such operation is needed to shrink the dimentionality of the dataset\n    \"\"\"\n    onehot = df.drop(\"Category\", axis=1)\n    embedding = TSNE(n_components=2, init=\"pca\")\n    embedded = embedding.fit_transform(onehot)\n    embedded = pd.DataFrame(embedded, columns=[f\"{title}_tsne1\", f\"{title}_tsne2\"]).astype('float64')\n    return embedded","107f5a3b":"train = pd.read_csv(\"..\/input\/mymusicalprefrences\/train.csv\")\ntest = pd.read_csv(\"..\/input\/mymusicalprefrences\/test.csv\")\ndf = pd.concat([train, test]).reset_index(drop=True)\ntr_mask = ~df.Category.isna()","6d29ba1b":"df[\"Category\"] = df[\"Category\"].fillna(\"none\").replace({0:\"dislike\",1:\"like\"}) ","627719c1":"df[\"isMajor\"], df[\"Key\"] = df[\"Key\"].apply(lambda x: x.split(\" \")[1]), df[\"Key\"].apply(lambda x: x.split(\" \")[0])\ndf = pd.get_dummies(df, columns=[\"Key\"], prefix=[\"Key\"])\ndf.loc[:,\"isMajor\"] = (df[\"isMajor\"]==\"Major\").astype(int)","4306fcd9":"# Lets create the decade feature, to detect some music of 80th, 90th etc. as a specific janre\ndf.loc[:,\"Release_decade\"] = (df.loc[:,\"Release_year\"]\/\/10 * 10)\n# Cause of the small number of values, we will put all <90th toone value, called 80th\ndf.loc[df.loc[:,\"Release_decade\"]<1990,\"Release_decade\"] = 1980 ","bbae1c4a":"ganres_onehot = split_to_onehot(df, \"Artists_Genres\")\ngenres_embedded = onehot_to_tsne2(ganres_onehot, \"Genres\")\ndf = pd.concat([df,genres_embedded], axis=1)\ndf = df.drop(\"Artists_Genres\", axis=1)","2dc6ea7f":"df[\"BPM\"] = df[\"BPM\"].apply(lambda x: str(x)[1:] if str(x)[0]=='`' else x)\ndf[['Energy', 'Happiness', 'Dancebility','BPM']] = df[['Energy', 'Happiness', 'Dancebility','BPM']].fillna(0)\ndf[['Energy%', 'Happiness%', 'Dancebility%']] = df[['Energy', 'Happiness', 'Dancebility']].apply(lambda x: x\/sum(x), axis=1)\ndf[['Energy%', 'Happiness%', 'Dancebility%']] = df[['Energy%', 'Happiness%', 'Dancebility%']].fillna(0)","5d8b352b":"df.Labels = df.Labels.fillna('NA')\nlabels_onehot = split_to_onehot(df, \"Labels\")\nlabels_embedded = onehot_to_tsne2(labels_onehot, \"Labels\")\ndf = pd.concat([df,labels_embedded[[\"Labels_tsne1\",\"Labels_tsne2\"]]], axis=1)\ndf = df.drop(\"Labels\", axis=1)","8a290609":"df.Artists = df.Artists.fillna(\"NA\")\nallstars = []\nfor i in df.index:\n    allstars.extend(df.loc[i, \"Artists\"].split(\"|\"))\n# We will put some threshold, not to put some rare artists into one-hot vector.\nthreshold = 3\nothers = Counter(allstars)\nothers = [k for k in others if others[k]<=threshold]\nin_train, in_test = [], []\nfor i in df.loc[tr_mask].index:\n    in_train.extend(df.loc[i, \"Artists\"].split(\"|\"))\nfor i in df.loc[~tr_mask].index:\n    in_test.extend(df.loc[i, \"Artists\"].split(\"|\"))\n\nonly_test = set(in_test) - set(in_train)\nonly_train = set(in_train) - set(in_test)\nallstars = list(set(allstars) - set(others) - only_test - only_train)\nothers = set(others) | only_test | only_train\n\nres = []\ndef prune(x):\n    vector = np.zeros(len(allstars)+1) #for others\n    x = [i for i in x.split(\"|\")]\n    for i in range(len(allstars)):\n        vector[i]=1 if allstars[i] in x else 0\n    if len(x)>sum(vector):\n        vector[-1]=1\n    res.append(vector)\n\ndf[\"Artists\"].apply(prune)\nonehot_artists = pd.DataFrame(res, columns = allstars+[\"Others\"], index=df.index)\n\ndf[\"Other_Artists\"] = onehot_artists[\"Others\"]\nonehot_artists = onehot_artists.drop(\"Others\", axis=1)\nonehot_artists[\"Category\"] = df[\"Category\"]\n\nartists_embedded = onehot_to_tsne2(onehot_artists, \"Artists\")\n\ndf = pd.concat([df,artists_embedded[[\"Artists_tsne1\",\"Artists_tsne2\"]]], axis=1)\ndf = df.drop(\"Artists\", axis=1)","5e15989e":"artists_encoder = LabelEncoder()\ndf[\"Track\"] = artists_encoder.fit_transform(df[\"Track\"])","9e4a6a07":"df[\"Version\"] = df[\"Version\"].fillna(\"NA\")\nversions = set(df[\"Version\"])\ndf[list(versions)] = OneHotEncoder().fit_transform(df[[\"Version\"]]).toarray()\ndf = df.drop([\"Version\",\"NA\"], axis=1)","fae8ec6e":"df[\"Album_type\"] = df[\"Album_type\"].fillna(\"NA\")\nversions = set(df[\"Album_type\"])\ndf[list(versions)] = OneHotEncoder().fit_transform(df[[\"Album_type\"]]).toarray()\ndf = df.drop([\"Album_type\",\"NA\"], axis=1)","656fd0c6":"df[\"Album\"] = df[\"Album\"].fillna(\"NA\")\nganres_onehot = split_to_onehot(df, \"Album\")\nalbum_embedded = onehot_to_tsne2(onehot_artists, \"Album\")\ndf = pd.concat([df,album_embedded[[\"Album_tsne1\",\"Album_tsne2\"]]], axis=1)\ndf = df.drop(\"Album\", axis=1)","c335811f":"df[\"Vocal \"] = df[\"Vocal \"].fillna('NA')\nonehot = np.zeros((len(df),2))\nfor i in range(len(df)):\n    v = df.iloc[i][\"Vocal \"]\n    if v == 'F':\n        onehot[i] = [1,0]\n    elif v == 'M':\n        onehot[i] = [0,1]\n    elif v == 'F|M':\n        onehot[i] = [1,1]\ndf[[\"Fem_voc\",\"Mal_voc\"]] = onehot\ndf = df.drop(\"Vocal \",axis=1)","8ea3a137":"df[\"Country\"] = df[\"Country\"].fillna(\"NA\")\ncountry_onehot = split_to_onehot(df, \"Country\")\ncountry_onehot = country_onehot.drop(\"Category\", axis=1)\ndf = pd.concat([df,country_onehot], axis=1)\ndf = df.drop(\"Country\", axis=1)\n\ndf = df.drop([\"Track\", \"Release_year\", \"BPM\", \"Energy\", \"Dancebility\", \"Happiness\"], axis=1)","8613aa89":"df","d434c3ef":"x, y = df.loc[tr_mask].iloc[:,2:], df.loc[tr_mask,\"Category\"]\ndeploy = df.loc[~tr_mask].iloc[:,2:]\n\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.1, shuffle=True, random_state=0)","e279895b":"parameter_grid = dict(n_estimators=list(range(50, 500, 50)),\n                      criterion=['gini','entropy'],\n                      max_depth= list(range(5, 25, 5)))\n\n# Creata a random forest object\nrandom_forest = RandomForestClassifier(random_state=0, n_jobs=-1)\n\n# clf = RandomForestClassifier(n_estimators=400, max_depth=10, random_state=0, criterion='gini',n_jobs=-1)\n\n# Create a gridsearch object with 5-fold cross validation, and uses all cores (n_jobs=-1)\nclf = GridSearchCV(estimator=random_forest, param_grid=parameter_grid, cv=5, verbose=1, n_jobs=-1)\n\n# Nest the gridsearchCV in a 3-fold CV for model evaluation\ncv_scores = cross_val_score(clf, X_train, y_train)\n\n# Print results\nprint('Accuracy scores:', cv_scores)","ffb76a0e":"# Retrain the model on the whole dataset\nclf.fit(X_train, y_train)\n\nprint(clf.best_params_)\nprint('The best accuracy achieved after parameter tuning via grid search is : ', clf.best_score_)","192b5fac":"# Predict who survived in the test dataset\npredictions = clf.predict(X_test)\n\naccuracy = accuracy_score(y_test, predictions)\nprint('Accuracy is : ', accuracy)","aa010a4f":"sample = pd.read_csv(\"..\/input\/mymusicalprefrences\/sample_submition.csv\")\nsample[\"Category\"] = clf.predict(deploy)\nsample[\"Category\"] = (sample[\"Category\"]==\"like\").astype(int)\nsample.to_csv(\".\/deploy.csv\", index=False)","0691c72f":"# Release Year-feature\n\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u0442\u043e\u043b\u0431\u0435\u0446 Release_decade, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0434\u0435\u043a\u0430\u0434\u044b \u043e\u0442 \u043b\u0430\u0439\u043a\u0430\/\u0434\u0438\u0437\u043b\u0430\u0439\u043a\u0430","175e3e39":"# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\n\n1.  \u042d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u043a\u043e\u043c \"|\" \u0432 \u0433\u043e\u0440\u044f\u0447\u0438\u0435 \u0432\u0435\u043a\u0442\u043e\u0440\u044b.\n     \u041a\u0440\u043e\u043c\u0435 \u0442\u043e\u0433\u043e, \u043e\u043d \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u043d\u0435\u043d\u0443\u0436\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0432\n     test\/train datasets \u0438\u043b\u0438 \u0438\u043c\u0435\u044e\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.\n2. \u042d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 onehot vector \u0432 \u0434\u0432\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f tsne (\u0442\u0440\u0430\u043d\u0441\u043f\u043e\u043d\u0438\u0440\u0443\u0435\u0442 onehot vector n-\u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f \u0432 2-\u043c\u0435\u0440\u043d\u043e\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u043e).\n     \u0422\u0430\u043a\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0443\u043c\u0435\u043d\u044c\u0448\u0435\u043d\u0438\u044f \u0440\u0430\u0437\u043c\u0435\u0440\u043d\u043e\u0441\u0442\u0438 \u043d\u0430\u0431\u043e\u0440\u0430 \u0434\u0430\u043d\u043d\u044b\u0445.\n     ","7dad96b3":"# \u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0432 .csv \u0444\u0430\u0439\u043b","bfcd69e3":"# Energy,Happiness,Dancebility, BPM - features\n\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0432\u044b\u0435 Energy%  Happiness%  Dancebility%\n","dd74e767":"# \u0412\u044b\u0431\u043e\u0440 \u043c\u043e\u0434\u0435\u043b\u0438 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f\n\n\u0412\u044b\u0432\u0435\u0434\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 dataframe \u043d\u0430 \u044d\u043a\u0440\u0430\u043d","6f386deb":"# \u041f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u043e\u0439 \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043e\u043a\n\u0427\u0442\u043e\u0431\u044b \u0443\u043f\u0440\u043e\u0441\u0442\u0438\u0442\u044c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 \u043d\u0430\u0431\u043e\u0440\u043e\u043c \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0435\u0433\u043e \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e - \u043c\u044b \u0441\u043e\u0431\u0435\u0440\u0435\u043c \u0432\u0441\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043c\u0430\u0441\u043a\u0443, \u0447\u0442\u043e\u0431\u044b \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u043d\u0430\u0431\u043e\u0440\u044b \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u041c\u0430\u0441\u043a\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u0443\u044e \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u043f\u043e \u043b\u0430\u0439\u043a\u0430\u043c\/\u0434\u0430\u0437\u043b\u0438\u0430\u0439\u043a\u0430\u043c. \u0422\u0430\u043c \u0433\u0434\u0435 Nan - \u0442\u0435\u0441\u0442\u043e\u0432\u0430\u044f, \u0442.\u043a. \u043e\u043d\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442","313b4893":"# \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438","8a0c09c3":"# \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043c\u043e\u0434\u0435\u043b\u0438\n\u0412\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u0441\u044f \u043c\u043e\u0434\u0435\u043b\u044c\u044e RandomForestClassifier \n\nparameter_grid -- \u0442\u043e\u0442 \u043f\u0443\u043b \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0445\u043e\u0442\u0438\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0438 \u043d\u0430\u0439\u0442\u0438 \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \n\n\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u043b\u0430\u0441\u0441\u0430  RandomForestClassifier\n\n\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442 gridsearch \u0441 5-\u043a\u0440\u0430\u0442\u043d\u043e\u0439 \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0435\u0439 \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0432\u0441\u0435 \u044f\u0434\u0440\u0430 (n_jobs = -1). (\u041d\u0435 \u0437\u043d\u0430\u044e, \u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u044d\u0442\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0432 \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u0430\u0445)\n\n\u041e\u0446\u0435\u043d\u0438\u043c \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430\n\nn_estimators=400, max_depth=10, criterion='gini' -- \u043b\u0443\u0447\u0448\u0438\u0435 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e gridsearch\n\n\u0412 \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u0435 \u043f\u043e\u0438\u0441\u043a \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0441 GridSearch \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u0442 ~ 15 \u043c\u0438\u043d\u0443\u0442, \u0434\u0430\u0431\u044b \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u043a \u044d\u0442\u043e \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442, \u044f \u0440\u0430\u0441\u043a\u043e\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043b \u0432\u0441\u0435 \u044d\u0442\u0438 \u043f\u0443\u043d\u043a\u0442\u044b. \u041d\u043e \u0432 \u0446\u0435\u043b\u043e\u043c \u043f\u043e\u0434\u043e\u0431\u0440\u0430\u0432 \u043b\u0443\u0447\u0448\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e \u0438\u0445 \u0432 RandomForestClassifier, \u043a\u043e\u043c\u0435\u043d\u0442\u0438\u0440\u0443\u044f gridsearch \u0438 \u043f\u0440\u043e\u0447\u0438\u0435 \u043f\u043e\u0431\u043e\u0447\u043d\u044b\u0435 \u0448\u0430\u0433\u0438. ","947d0b24":"\u0414\u0435\u043b\u0438\u043c \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0443 \u043d\u0430 \u0432\u0445\u043e\u0434\u044b\u0435 \u0438 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u0441\u0442\u0443\u043f\u0430\u0442\u044c \u043d\u0430 \u0432\u0445\u043e\u0434 \u043c\u043e\u0434\u0435\u043b\u0438, \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0432 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u0443\u044e \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0440\u0430\u043d\u0435\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u0439 \u043c\u0430\u0441\u043a\u0438\n\n\u0422\u0430\u043a\u0436\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u043c \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0443 \u043d\u0430 2:\n* \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u0430\u044f: _train\n* \u0432\u044b\u0431\u043e\u0440\u043a\u0443 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438: _test\n\n10% \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0438 90% \u0432 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0432\u0447\u043d\u043e\u0439\n\n\u0412\u0430\u0440\u044c\u0438\u0440\u043e\u0432\u0430\u043b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 0.05 \u0438 0.3 -- \u043b\u0443\u0447\u0448\u0435 \u0432\u0441\u0435\u0433\u043e \u043c\u043e\u0434\u0435\u043b\u044c \u043f\u043e\u043a\u0430\u0437\u0430\u043b\u0430 \u0441\u0435\u0431\u044f \u043f\u0440\u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432 10%","d242a06c":"# \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445\n1. \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0432\u0441\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0441\u0442\u0440\u043e\u043a \u0432 \u0447\u0438\u0441\u043b\u0430 \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \"split_to_onehot\" \u0438 \"onehot_to_tsne2\"\n2. \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u0444\u0438\u0447\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043b\u0447\u0448\u0435 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442 \u043d\u0430\u0448\u0438 \u0434\u0430\u043d\u043d\u044b\u0435\n3. \u0423\u0434\u0430\u043b\u0438\u043c \u0447\u0430\u0441\u0442\u044c \u043d\u0435\u043d\u0443\u0436\u043d\u044b\u0445 \u0444\u0438\u0447\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u0435\u0448\u0430\u044e\u0442 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0443 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f (\u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u043e \u2714)","40013d6b":"# Labels-features\n\u0420\u0430\u0437\u0431\u0438\u043b\u0438 \u043d\u0430 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u043b\u0435\u0439\u0431\u043b\u043e\u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 split_to_onehot, \u0430 \u043f\u043e\u0442\u043e\u043c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043b\u0438 \u043f\u043e t-SNE \u043d\u0430 2 \u0441\u0442\u043e\u043b\u0431\u0446\u0430 (2 \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f) \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438 onehot_to_tsne2 \u043d\u0435 \u0442\u0435\u0440\u044f\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438, \u0434\u0440\u043e\u043f\u043d\u0443\u043b\u0438 \u0441\u0442\u043e\u043b\u0438\u0431\u043a \u043b\u0435\u0439\u0431\u043b\u043e\u0432","c1d0ca1c":"# Vocal-feature\n\u0420\u0430\u0437\u0434\u0435\u043b\u0438\u043b \u0432\u043e\u043a\u0430\u043b \u043d\u0430 \u043c\u0443\u0436\u0441\u043a\u043e\u0439 \u0438 \u0436\u0435\u043d\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c&\u0436, \u0434\u043e\u0431\u0430\u0432\u0438\u043b \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u044b \u043a dataframe","fd5bdc83":"# 3. Album_type\n\u0410\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f\u043c \u0432 versions","596dacd5":"# Key-feature\nC \u043f\u043e\u043c\u043e\u0449\u044c\u044e get_dummies \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u044e \u0441\u0442\u043e\u043b\u0431\u0435\u0446 Key \u043d\u0430 onehot vector\n\n\u0422\u0430\u043a\u0436\u0435 \u0432\u044b\u0434\u0435\u043b\u044f\u044e \u0441\u0442\u043e\u043b\u0431\u0435\u0446 isMajor, \u0441\u0442\u0440\u043e\u043a\u0438 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043c\u043e\u0433\u0443\u0442 \u0432\u0430\u0440\u044c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430\u043c\u0438 major=1 \/ minor=0","55c8ec17":"\u041e\u0431\u0443\u0447\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u0438 \u043d\u0430\u0439\u0434\u0435\u043c \u043b\u0443\u0447\u0448\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\n\n\u0422\u0430\u043a\u0436\u0435 \u0432\u044b\u0432\u0435\u0434\u0435\u043c \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043d\u0430\u0438\u043b\u0443\u0447\u0448\u0435\u0439 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438, \u0434\u043e\u0441\u0442\u0438\u0433\u0430\u0435\u043c\u043e\u0439 \u043f\u043e\u0441\u043b\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e grid search","b0a5bd76":"# 4. \u0424\u0438\u0447\u0430 Album\n\u0420\u0430\u0437\u0431\u0438\u043b\u0438 \u043d\u0430 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u0430\u043b\u044c\u0431\u043e\u043c\u043e\u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 split_to_onehot, \u0430 \u043f\u043e\u0442\u043e\u043c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043b\u0438 \u043f\u043e t-SNE \u043d\u0430 2 \u0441\u0442\u043e\u043b\u0431\u0446\u0430 (2 \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f) \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438 onehot_to_tsne2 \u043d\u0435 \u0442\u0435\u0440\u044f\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438, \u0434\u0440\u043e\u043f\u043d\u0443\u043b\u0438 \u0441\u0442\u043e\u043b\u0438\u0431\u043a \u0430\u043b\u044c\u0431\u043e\u043c\u043e\u0432","b6834547":"# Tracks, Version, Album_type-features\n","28cdcf85":"# Artists-feature\n\u0421\u0435\u0440\u044c\u0435\u0437\u043d\u0430\u044f \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0430\u0440\u0442\u0438\u0441\u0442\u043e\u0432, \u043d\u0435 \u043c\u0435\u043d\u044f\u043b \u0430\u043b\u0433\u043e\u0440\u0442\u043c\u0430. \u041e\u0442\u0441\u0435\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432, \u043e\u0441\u0442\u0430\u044e\u0442\u0441\u044f \u0441\u0430\u043c\u044b\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u044b\u0435","472a7ddf":"# Country-feature\n\u0414\u0435\u043b\u0430\u044e onehot vector \u0441\u0442\u0440\u0430\u043d\n\n\u0422\u0430\u043a\u0436\u0435 \u044f \u043f\u0440\u043e\u0431\u043e\u0432\u0430\u043b \u0443\u0431\u0438\u0440\u0430\u0442\u044c \u0438 \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0444\u0438\u0447\u0438 [\"Track\", \"Release_year\", \"BPM\", \"Energy\", \"Dancebility\", \"Happiness\"] , \u043f\u0443\u0442\u0435\u043c \u043f\u0440\u043e\u0431 \u0438 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438 \u043f\u043e \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435, \u043f\u0440\u0438\u0448\u0435\u043b \u043a \u0432\u044b\u0432\u043e\u0434\u0443, \u0447\u0442\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u0441\u0442\u043e\u043b\u0431\u0446\u044b \u043b\u0443\u0447\u0448\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0438\u0437 dataframe - \u0431\u0435\u0437 \u043d\u0438\u0445 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0440\u0435\u0448\u0430\u044e\u0449\u0438\u0445 \u0434\u0435\u0440\u0435\u0432\u044c\u0435\u0432 \u0441\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0443\u0447\u0448\u0435 (\u0433\u0440\u0430\u0434\u0438\u0435\u043d\u0442\u043d\u043e\u0433\u043e \u0431\u0443\u0441\u0442\u0438\u043d\u0433\u0430 \u0442\u043e\u0436\u0435)","2d0ea881":"# 1. Tracks\n\nLabaelEncoder - \u043c\u0435\u043d\u044f\u0435\u0442 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u043f\u0435\u0440\u0435\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0435","2b9b5fcf":"# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438","aa4418f4":"# 2. Version\n\u0412\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 OneHotEncoder, \u0447\u0442\u043e\u0431\u044b \u0438\u0437\u0432\u043b\u0435\u0447\u044c \u0432\u0435\u0440\u0441\u0438\u0438 \u0432 onehot vector","7ad46dd1":"# Genres-feature\n\u0420\u0430\u0437\u0431\u0438\u043b\u0438 \u043d\u0430 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u0436\u0430\u043d\u0440\u043e\u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 split_to_onehot, \u0430 \u043f\u043e\u0442\u043e\u043c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043b\u0438 \u043f\u043e t-SNE \u043d\u0430 2 \u0441\u0442\u043e\u043b\u0431\u0446\u0430 (2 \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f) \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u0438 onehot_to_tsne2 \u043d\u0435 \u0442\u0435\u0440\u044f\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438, \u0434\u0440\u043e\u043f\u043d\u0443\u043b\u0438 \u0441\u0442\u043e\u043b\u0438\u0431\u043a \u0436\u0430\u043d\u0440\u043e\u0432"}}