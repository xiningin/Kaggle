{"cell_type":{"20672ba0":"code","0d738385":"code","32a8f73e":"code","bc9945db":"code","870b332a":"markdown"},"source":{"20672ba0":"import pandas as pd\nimport numpy as np\nfrom numba import jit\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","0d738385":"sub0 = '..\/input\/tps12-pseudolabels\/subs\/subs\/0.95696.csv'\nsub1 = '..\/input\/tps12-pseudolabels\/subs\/subs\/0.95690.csv'\nsub2 = '..\/input\/tps12-pseudolabels\/subs\/subs\/0.95687.csv'\nsub3 = '..\/input\/tps12-pseudolabels\/subs\/subs\/0.95686.csv'\nsub4 = '..\/input\/tps12-pseudolabels\/subs\/subs\/0.95683.csv'\nsub6 = '..\/input\/tps12-pseudolabels\/subs\/subs\/0.95673.csv'\n\n\n\nresult = pd.concat([pd.read_csv(sub0, index_col = \"Id\"),\n                    pd.read_csv(sub1, index_col = \"Id\"),\n                    pd.read_csv(sub2, index_col = \"Id\"),\n                    pd.read_csv(sub3, index_col = \"Id\"),\n                    pd.read_csv(sub4, index_col = \"Id\"),], axis=1)","32a8f73e":"%%time\n\n@jit(nopython=True)\ndef np_blending(row):\n    return np.argmax(np.bincount(row))\n\nresult['Result'] = result.apply(lambda row: np_blending(row.values), axis=1)","bc9945db":"sub = pd.DataFrame(result['Result']).rename(columns={'Result': 'Cover_Type'})\nsub.to_csv(\"tps12-fast-blend.csv\")\nsub.tail(3)","870b332a":"* Super fast blending tool \n* Code minimal\n* Could be improved for better score but this is good starting point\n\nThis is demo only - I am too lazy for blending files :) "}}