{"cell_type":{"2b7e3a79":"code","e808deb6":"code","80dc43a4":"code","6d73d7a9":"code","4d0b59e6":"code","74f9ba1b":"code","d8a071a5":"code","99e2a334":"code","8cc927bb":"code","0f3f1983":"code","7ee69cb7":"markdown","af3d1caf":"markdown","c6a1def1":"markdown","e304e9f1":"markdown","71b04b77":"markdown"},"source":{"2b7e3a79":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e808deb6":"import seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\ndata1 = pd.read_csv('\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\narg_kag = data1[data1['Q3']=='Argentina']\n","80dc43a4":"year_prog = pd.DataFrame(arg_kag['Q6'].value_counts())\nyear_prog = year_prog.sort_values(by='Q6')\nfig = px.bar(y=year_prog.index,\n             x=year_prog.Q6,\n             text=round(year_prog.Q6\/sum(year_prog.Q6)*100,2),\n            title='Years of Coding Experience')\nfig.add_shape(type='rect',\n             x0=0,\n             y0=5.5,\n             x1=28.2,\n             y1=6.5,)\nfig.add_shape(type='rect',\n             x0=0,\n             y0=0.5,\n             x1=14.2,\n             y1=1.5,)\nfig.add_shape(type='line',\n             x0=27,\n             y0=3.5,\n             x1=27,\n             y1=5.5,\n             line={'dash':'dot'})\nfig.add_shape(type='line',\n             x0=14.2,\n             y0=1,\n             x1=27,\n             y1=1,\n             line={'dash':'dot'})\nfig.add_shape(type='line',\n             x0=27,\n             y0=1,\n             x1=27,\n             y1=2,\n             line={'dash':'dot'})\nfig.add_annotation(\n        x=27,\n        y=2.8,\n        xref=\"x\",\n        yref=\"y\",\n        text='Over 32% have less than 1 year of coding experience',\nshowarrow=False,\nfont_size=9)\nfig.update_traces(marker_color='#4d8bd6'\n                 )\nfig.update_layout(\n    title_font_size=15,\n    font_color='Black',\n    plot_bgcolor='rgba(0,0,0,0)',\n    xaxis_title = '% of Valid Answers',\n    yaxis_title = '',\n    width=1000,\n    height=400)\n\nfig.show()","6d73d7a9":"Profs = arg_kag[arg_kag['Q5']!=('Student' and 'Other')]\ntemp_5 = pd.DataFrame(Profs['Q8'].value_counts())\ntemp_5=temp_5.sort_values(by='Q8',ascending=True)\n#temp_5_per={%:.0}(temp_5.Q8\/sum(temp_5.Q8))*100\nfig = px.bar(y=temp_5.index,x=temp_5.Q8,\n            title='What do professionals recommend?',\n            text=round(temp_5.Q8\/sum(temp_5.Q8)*100,2),)\nfig.update_traces(marker_color='#4d8bd6'\n                 )\nfig.update_layout(\n    title_font_size=22,\n    font_color='Black',\n    plot_bgcolor='rgba(0,0,0,0)',\n    xaxis_title = '% of Valid Answers',\n    yaxis_title = '')\nfig.add_annotation(\n        x=40,\n        y=4,\n        xref=\"x\",\n        yref=\"y\",\n        text='Over 90% of all answers recommend either Python or R as the language to learn for beginners',\n        ax=22,\n        ay=-2,\nfont_size=9)\nfig.add_shape(type=\"rect\",\n    x0=0, y0=4.5, x1=83, y1=6.44,\n             line_color='rgba(0,0,0,0)',\n             fillcolor='beige',\n             opacity=0.3,\n             )\nfig.show()","4d0b59e6":"year_prog = pd.DataFrame(arg_kag['Q24'].value_counts())\ntemp_series = np.array(year_prog.index.values)\ntemp_series = pd.Series(temp_series)\nyear_prog['NumericValue'] = np.array(temp_series.str.split('-',expand=True)[1])\nyear_prog['NumericValue'] = year_prog['NumericValue'].str.replace(',','').astype(int)\nyear_prog = year_prog.sort_values(by='NumericValue',ascending=True)\nfig = px.bar(y=year_prog.Q24,x=year_prog.index,\n            title='Annual Income')\n#24000 es el ingreso mediano a Julio\/2020\n#24000*12 = ingreso mediano anual, como esto incluye cuentapropista y trabajos en negro no se incluye sac y queda por 12.\n#288000 seria el mediano anual\n#TC Oficial: 87 => 3300\n#TC Oficial+impuestos: 144.38 => 1994\nfig.add_vline(x=2.8,line_dash='dash',line_color='lightgray')\nfig.add_vline(x=1.5,line_dash='dash',line_color='lightgray')\nfig.add_annotation(x=3,\n                   y=14.5,\n                   text=r'Argentina Median Income at Official Exchange Rate (~3300 USD)',\n                  showarrow=False,\n                  textangle=90,\n                  font_size=8,)\nfig.add_annotation(x=1.7,\n                   y=14.5,\n                   text=r'Argentina Median Income at Official Exchange Rate + Tax (~2000 USD)',\n                  showarrow=False,\n                  textangle=90,\n                  font_size=8)\nfig.update_xaxes(title_text='Income Range (USD)')\nfig.update_yaxes(title_text='Answer Counts ')\nfig.update_layout(plot_bgcolor='rgba(0,0,0,0)',\n                 font_color='Black')\nfig.update_traces(marker_color='steelblue')\nfig.show()","74f9ba1b":"not_arg_kag = data1[data1['Q3']!='Argentina']","d8a071a5":"Gender_RW=not_arg_kag[['Q2']].iloc[1:,:].value_counts()\nGender_RW=Gender_RW\/len(not_arg_kag[['Q2']].iloc[1:,:])\nGender_RW","99e2a334":"Gender_Arg=arg_kag[['Q2']].iloc[1:,:].value_counts()\nGender_Arg=Gender_Arg\/len(arg_kag[['Q2']].iloc[1:,:])\nGender_Arg","8cc927bb":"Gender=pd.DataFrame([Gender_RW,Gender_Arg])\nGender=Gender.T\nGender.columns=['Rest of World','Argentina']\nGender=pd.DataFrame(Gender.to_records())\nGender=Gender.fillna(0)\nGender['Rest of World']=Gender['Rest of World'].astype('float32')\nGender['Argentina']=Gender['Argentina'].astype('float32')\nGender=Gender.sort_values('Rest of World')","0f3f1983":"Gender['Rest of World %']=(Gender['Rest of World']*100).round(4).astype('str') + '%'\nGender['Argentina %']=(Gender['Argentina'].round(4)*100).astype('str') + '%'\nfig = go.Figure()\nfig.add_trace(go.Bar(y=Gender['Q2'], x=Gender['Rest of World'],orientation='h',\n                    text=Gender['Rest of World %'],\n                    textposition='outside',\n                    name='Rest of World'))\nfig.add_trace(go.Bar(y=Gender['Q2'], x=Gender['Argentina']*-1,orientation='h',\n                    text=Gender['Argentina %'],\n                    textposition='outside',\n                    name='Argentina',\n                    marker_color='steelblue'))\nfig.update_xaxes(showticklabels=False,\n                title='% of All Answers')\nfig.update_layout(plot_bgcolor='rgba(0,0,0,0)',\n                 font_color='Black',\n                 title_text='Gender by Answers',\n                 width=1000,\n                 height=500,\n                 font_size=9)\nfig.update_layout(\n    legend_x=0.5,\n    legend_y=-0.3,\n    legend_orientation='h'\n)\nfig.show()","7ee69cb7":"This is a small EDA with basic insights from Respondents from Argentina. (Or at least those that answered Q3 with \"Argentina\")","af3d1caf":"While the results are a bit skewed due to the high prevalence of students in the survey.\nA majority of the surveyees earn more than at least, 50% of the coutry.","c6a1def1":"More than a third of the respondents are beginners when it comes to coding.","e304e9f1":"### Version 1","71b04b77":"Python and R continue to be the most recommened languages to learn for beginners. Even by those who are already working in the industry."}}