{"cell_type":{"e8b24aa1":"code","57ff14e3":"code","06928dbf":"code","2f35e466":"code","e0ee2065":"code","be317f96":"code","b42be26d":"code","56957104":"code","23246c46":"code","b8f7fc59":"code","6b940ac6":"code","a87a84bd":"code","1e4a797f":"code","7a5f9495":"code","b20f247c":"code","691608f3":"code","e168002e":"code","364aa827":"code","552c9604":"code","1e5cff5a":"code","1b9318d3":"code","5fb3032f":"code","c38e627d":"code","ce2780e5":"code","6c99a4af":"code","df6995ef":"code","649479f5":"code","cc96101e":"code","000803ff":"code","9fe0f895":"code","e888b536":"markdown","fb574dea":"markdown","4d4cbd79":"markdown","e6078129":"markdown","2e6adda0":"markdown","2e38c9e9":"markdown","81acfd73":"markdown","417f54f0":"markdown","65c83f6d":"markdown","986aee3c":"markdown","0e35ab34":"markdown","b8b31cbd":"markdown","613059d8":"markdown","febbbcc4":"markdown","80d0800a":"markdown","8317327b":"markdown","23fdd04f":"markdown","23154209":"markdown","58c6e637":"markdown","7d1e8e69":"markdown"},"source":{"e8b24aa1":"import numpy as np \nimport pandas as pd \n\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","57ff14e3":"data = pd.read_csv('..\/input\/iris\/Iris.csv')\ndata.head()","06928dbf":"data['Species'].unique()","2f35e466":"fig, axs = plt.subplots(2, 2, figsize=(2*6, 2*4))\ni=0\n\nfor column in ['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm']:\n    axs[i\/\/2,i%2].scatter(x = 'Id' , y = column, data = data[data['Species'] == 'Iris-setosa'], s = 5, color = '#731DD8')\n    axs[i\/\/2,i%2].scatter(x = 'Id' , y = column, data = data[data['Species'] == 'Iris-versicolor'], s = 5, color = '#48A9A6')\n    axs[i\/\/2,i%2].scatter(x = 'Id' , y = column, data = data[data['Species'] == 'Iris-virginica'], s = 5, color = '#DE6C83')\n    axs[i\/\/2,i%2].set_title(column)\n    \n    i += 1\n    \nplt.show()","e0ee2065":"data['SepalArea'] = data['SepalLengthCm'] * data['SepalWidthCm']\ndata['PetalArea'] = data['PetalLengthCm'] * data['PetalWidthCm']\n\nfig, axs = plt.subplots(1, 2, figsize=(2*6, 4))\ni = 0\n\nfor column in ['SepalArea', 'PetalArea']:\n    axs[i%2].scatter(x = 'Id' , y = column, data = data[data['Species'] == 'Iris-setosa'], s = 5, color = '#731DD8')\n    axs[i%2].scatter(x = 'Id' , y = column, data = data[data['Species'] == 'Iris-versicolor'], s = 5, color = '#48A9A6')\n    axs[i%2].scatter(x = 'Id' , y = column, data = data[data['Species'] == 'Iris-virginica'], s = 5, color = '#DE6C83')\n    axs[i%2].set_title(column)\n    \n    i += 1\n    \nplt.show()","be317f96":"data.loc[data['Species'] == 'Iris-setosa' , 'PetalArea'].max()","b42be26d":"data['PetalPersantageWidth'] = data['SepalWidthCm'] \/ data['PetalWidthCm']\ndata['PetalPersantageLength'] = data['SepalLengthCm'] \/ data['PetalLengthCm']\n\nfig, axs = plt.subplots(1, 2, figsize=(2*6, 4))\ni = 0\n\nfor column in ['PetalPersantageWidth', 'PetalPersantageLength']:\n    axs[i%2].scatter(x = 'Id' , y = column, data = data[data['Species'] == 'Iris-setosa'], s = 5, color = '#731DD8')\n    axs[i%2].scatter(x = 'Id' , y = column, data = data[data['Species'] == 'Iris-versicolor'], s = 5, color = '#48A9A6')\n    axs[i%2].scatter(x = 'Id' , y = column, data = data[data['Species'] == 'Iris-virginica'], s = 5, color = '#DE6C83')\n    axs[i%2].set_title(column)\n    \n    i += 1\n    \nplt.show()","56957104":"data['PetalPersantageArea'] = data['PetalPersantageWidth'] * data['PetalPersantageLength']\n\nplt.scatter(x = 'Id' , y = 'PetalPersantageArea', data = data[data['Species'] == 'Iris-setosa'], s = 5, color = '#731DD8')\nplt.scatter(x = 'Id' , y = 'PetalPersantageArea', data = data[data['Species'] == 'Iris-versicolor'], s = 5, color = '#48A9A6')\nplt.scatter(x = 'Id' , y = 'PetalPersantageArea', data = data[data['Species'] == 'Iris-virginica'], s = 5, color = '#DE6C83')\nplt.title('PetalPersantageArea')\n    \nplt.show()","23246c46":"#plt.scatter(x = 'Id' , y = 'PetalArea', data = data[data['Species'] == 'Iris-setosa'], s = 5, color = '#731DD8')\nplt.scatter(x = 'Id' , y = 'PetalPersantageArea', data = data[data['Species'] == 'Iris-versicolor'], s = 5, color = '#48A9A6')\nplt.scatter(x = 'Id' , y = 'PetalPersantageArea', data = data[data['Species'] == 'Iris-virginica'], s = 5, color = '#DE6C83')\nplt.title('PetalPersantageArea')\n    \nplt.show()","b8f7fc59":"a = data.loc[data['Species'] == 'Iris-versicolor' , 'PetalPersantageArea'].min()\nb = data.loc[data['Species'] == 'Iris-virginica' , 'PetalPersantageArea'].max()\n\nlen(data[(data['PetalPersantageArea'] >= a) & (data['PetalPersantageArea'] <= b)])","6b940ac6":"#plt.scatter(x = 'Id' , y = 'PetalArea', data = data[data['Species'] == 'Iris-setosa'], s = 5, color = '#731DD8')\nplt.scatter(x = 'Id' , y = 'PetalArea', data = data[data['Species'] == 'Iris-versicolor'], s = 5, color = '#48A9A6')\nplt.scatter(x = 'Id' , y = 'PetalArea', data = data[data['Species'] == 'Iris-virginica'], s = 5, color = '#DE6C83')\nplt.title('PetalPersantageArea')\n    \nplt.show()","a87a84bd":"a = data.loc[data['Species'] == 'Iris-versicolor' , 'PetalArea'].max()\nb = data.loc[data['Species'] == 'Iris-virginica' , 'PetalArea'].min()\n\nlen(data[(data['PetalArea'] <= a) & (data['PetalArea'] >= b)])","1e4a797f":"fig, axs = plt.subplots(1, 2, figsize=(2*6, 4))\ni = 0\n\nfor column in ['PetalPersantageWidth', 'PetalPersantageLength']:\n    #axs[i%2].scatter(x = 'Id' , y = column, data = data[data['Species'] == 'Iris-setosa'], s = 5, color = '#731DD8')\n    axs[i%2].scatter(x = 'Id' , y = column, data = data[data['Species'] == 'Iris-versicolor'], s = 5, color = '#48A9A6')\n    axs[i%2].scatter(x = 'Id' , y = column, data = data[data['Species'] == 'Iris-virginica'], s = 5, color = '#DE6C83')\n    axs[i%2].set_title(column)\n    \n    i += 1\n    \nplt.show()","7a5f9495":"a = data.loc[data['Species'] == 'Iris-versicolor' , 'PetalPersantageWidth'].min()\nb = data.loc[data['Species'] == 'Iris-virginica' , 'PetalPersantageWidth'].max()\n\nlen(data[(data['PetalPersantageWidth'] >= a) & (data['PetalPersantageWidth'] <= b)])","b20f247c":"a = data.loc[data['Species'] == 'Iris-versicolor' , 'PetalPersantageLength'].min()\nb = data.loc[data['Species'] == 'Iris-virginica' , 'PetalPersantageLength'].max()\n\nlen(data[(data['PetalPersantageLength'] >= a) & (data['PetalPersantageLength'] <= b)])","691608f3":"fig, axs = plt.subplots(1, 2, figsize=(2*6, 4))\ni = 0\n\nfor column in ['PetalLengthCm', 'PetalWidthCm']:\n    #axs[i%2].scatter(x = 'Id' , y = column, data = data[data['Species'] == 'Iris-setosa'], s = 5, color = '#731DD8')\n    axs[i%2].scatter(x = 'Id' , y = column, data = data[data['Species'] == 'Iris-versicolor'], s = 5, color = '#48A9A6')\n    axs[i%2].scatter(x = 'Id' , y = column, data = data[data['Species'] == 'Iris-virginica'], s = 5, color = '#DE6C83')\n    axs[i%2].set_title(column)\n    \n    i += 1\n    \nplt.show()","e168002e":"a = data.loc[data['Species'] == 'Iris-versicolor' , 'PetalLengthCm'].max()\nb = data.loc[data['Species'] == 'Iris-virginica' , 'PetalLengthCm'].min()\n\nlen(data[(data['PetalLengthCm'] <= a) & (data['PetalLengthCm'] >= b)])","364aa827":"a = data.loc[data['Species'] == 'Iris-versicolor' , 'PetalWidthCm'].max()\nb = data.loc[data['Species'] == 'Iris-virginica' , 'PetalWidthCm'].min()\n\nlen(data[(data['PetalWidthCm'] <= a) & (data['PetalWidthCm'] >= b)])","552c9604":"data.head()","1e5cff5a":"fig, axs = plt.subplots(5, 2, figsize=(2*6, 4*5))\ni = 0\n\nfor column in data.columns:\n    if column != 'Species' and column != 'Id':\n        axs[i\/\/2,i%2].scatter(x = 'Id' , y = column, data = data[data['Species'] == 'Iris-setosa'], s = 5, color = '#731DD8')\n        axs[i\/\/2,i%2].scatter(x = 'Id' , y = column, data = data[data['Species'] == 'Iris-versicolor'], s = 5, color = '#48A9A6')\n        axs[i\/\/2,i%2].scatter(x = 'Id' , y = column, data = data[data['Species'] == 'Iris-virginica'], s = 5, color = '#DE6C83')\n        axs[i\/\/2,i%2].set_title(column)\n\n        i += 1\n    \nplt.show()","1b9318d3":"data = data.drop(['SepalArea'], axis = 1)","5fb3032f":"for column in data.columns:\n    if column != 'Species' and column != 'Id':\n        max_ = data[column].max()\n        min_ = data[column].min()\n        \n        data[column] = (data[column] - min_) \/ (max_ - min_)","c38e627d":"fig, axs = plt.subplots(4, 2, figsize=(2*6, 4*4))\ni = 0\n\nfor column in data.columns:\n    if column != 'Species' and column != 'Id':\n        axs[i\/\/2,i%2].scatter(x = 'Id' , y = column, data = data[data['Species'] == 'Iris-setosa'], s = 5, color = '#731DD8')\n        axs[i\/\/2,i%2].scatter(x = 'Id' , y = column, data = data[data['Species'] == 'Iris-versicolor'], s = 5, color = '#48A9A6')\n        axs[i\/\/2,i%2].scatter(x = 'Id' , y = column, data = data[data['Species'] == 'Iris-virginica'], s = 5, color = '#DE6C83')\n        axs[i\/\/2,i%2].set_title(column)\n\n        i += 1\n    \nplt.show()","ce2780e5":"data['y'] = 0\ndata.loc[data['Species'] == 'Iris-versicolor', 'y'] = 1\ndata.loc[data['Species'] == 'Iris-virginica', 'y'] = 2\n\ndata = data.drop(['Id', 'Species'], axis = 1)","6c99a4af":"data.head()","df6995ef":"from sklearn.model_selection import train_test_split\n\nX, y = data.drop(['y'], axis = 1), data['y']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, stratify = y)","649479f5":"from sklearn.neighbors import KNeighborsClassifier\n\nclf = KNeighborsClassifier()\nclf.fit(X_train, y_train)\nclf.predict(X_test)","cc96101e":"from sklearn.metrics import accuracy_score\n\naccuracy_score(y_test, clf.predict(X_test))","000803ff":"X_original = X[['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm']]\n\nX_original.head()","9fe0f895":"X_train, X_test, y_train, y_test = train_test_split(X_original, y, test_size = 0.20, stratify = y)\n\nclf = KNeighborsClassifier()\nclf.fit(X_train, y_train)\n\naccuracy_score(y_test, clf.predict(X_test))","e888b536":"As we can notice Iris-setosa (purple dots) stand out of other two species on graphs 'PetalLengthCm' and 'PetalWidthCm'. Basicly we can define this specie just by one of these two parameter.\n\nBut then I got an idea of creating other variables, which will be showing sepal and petal area. Of course they don't have rectangular to find area just by multiplying length and width, but I think this parameter still can be usefull (especially petal area)","fb574dea":"So now Iris-setosa stand out even more (on the PetalArea graph). But SepalArea graph is useless: data is very chaotic on every specie and we can't distinguish one specie from another by this graph.","4d4cbd79":"For example, if we work only with input data, situation would be worse:","e6078129":"So now we have this dataset:","2e6adda0":"## 3 Prepairing data","2e38c9e9":"## 4 Training the Model","81acfd73":"Here is the opposite situation: Iris-versicolor and Iris-virginica stand out, but data on Iris-setosa is very chaotic\n\nAnd the last variable, which I made is how big is sepal relatively to petal by area","417f54f0":"These number is a bit bigger if working only with 'PetalArea':","65c83f6d":"Now we can say, that if PetalArea is less or equal than 0.96, then it would be definitely Iris-setosa\n\nAnother variable, which I made: how big is sepal relatively to petal by width and length","986aee3c":"Next I found how much flowers can be indentified wrong if working just with 'PetalPersantageArea' column:","0e35ab34":"## 2.1 Why creating new features can help","b8b31cbd":"I will work with kNN. So I'll do some more preraration:\n1. I'll delete 'SepalArea' because data is chaotic and I think it won't help our model\n2. I'll normalise the data (because there are different values in every column: PetalWidthCm is from 0 to 2.5 and PetalPersantageArea is from 0 to 140)","613059d8":"## 1 Reading Data","febbbcc4":"So our new data can be usefull and give more accurate results. ","80d0800a":"## 2 Creating new features","8317327b":"But much smaller if wokring with 'PetalPersantageWidth' and 'PetalPersantageLength'","23fdd04f":"last steps: drop 'Id' and label 'Species'","23154209":"## 4.1 Proving that new features really helped\n\nthe best way to prove is to compare","58c6e637":"Previous situation became more expressive: Iris-versicolor and Iris-virginica stand out more, but data on Iris-setosa now is more chaotic.","7d1e8e69":"So let's see only Iris-versicolor and Iris-virginica:"}}