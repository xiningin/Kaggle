{"cell_type":{"ca71694a":"code","d703c302":"code","acc13856":"code","a6082585":"code","f7444fd5":"code","46769ca4":"code","38bdc428":"code","24ddc131":"code","36d71094":"code","044cfb08":"code","fcbb3cc8":"code","1738619d":"code","a2b9a186":"code","ee362a66":"code","a166c01c":"code","b8abd5ec":"code","a13e2b6e":"code","04535678":"code","0c925302":"code","6c662503":"code","4ee256cd":"code","514cb425":"code","d48c6ac8":"code","654d1790":"code","fbbc48ad":"code","e4702f8d":"code","ec445c55":"code","b7b7540c":"code","43c3d482":"code","04147fcf":"code","2c1fd8af":"code","f34bf529":"code","4f0877ca":"code","39c62ff9":"markdown","180a5d45":"markdown","ef38454a":"markdown","98ef65fd":"markdown","de91c676":"markdown","4f140444":"markdown","0023ac3c":"markdown","65b20d58":"markdown","fe575904":"markdown","5059721a":"markdown","f67dc19a":"markdown","d6bacd6a":"markdown","52adc5ff":"markdown","67372b0f":"markdown","ed08de77":"markdown","b3aedf69":"markdown","0bf24265":"markdown","9d33b99a":"markdown","4aae7b16":"markdown","51647260":"markdown","53d84757":"markdown","bce8427d":"markdown","91a733c9":"markdown","bed347df":"markdown","5eb82b49":"markdown","a87d3f80":"markdown","0a68e866":"markdown","312ac634":"markdown","24af1b04":"markdown","b9256d28":"markdown","e72dde42":"markdown"},"source":{"ca71694a":"# imports\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# scikit-learn for naive-bayes classifier\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\n\n# random forest classifier\nfrom sklearn.ensemble import RandomForestClassifier\n\n# support vector machine\nfrom sklearn import svm","d703c302":"starcraft = pd.read_csv(\"..\/input\/SkillCraft.csv\")\nstarcraft.head()","acc13856":"# missing data check\nstarcraft.apply(lambda x: sum(x.isnull()), axis=0)","a6082585":"# dataset summary\nstarcraft.describe()","f7444fd5":"# Age by League\nsns.set(style = \"whitegrid\", rc = {\"figure.figsize\":(11.7, 8.27)})\nax = sns.boxplot(x = \"LeagueIndex\", y = \"Age\", data = starcraft).set_title(\"Age by League\")","46769ca4":"# HoursPerWeek by League\nax = sns.boxplot(x = \"LeagueIndex\", y = \"HoursPerWeek\", data = starcraft).set_title(\"HoursPerWeek by League\")","38bdc428":"# TotalHours by League\nax = sns.boxplot(x = \"LeagueIndex\", y = \"TotalHours\", data = starcraft).set_title(\"TotalHours by League\")","24ddc131":"# APM per league\nax = sns.boxplot(x = \"LeagueIndex\", y = \"APM\", data = starcraft).set_title(\"APM by League\")","36d71094":"# SelectByHotkeys per league\nax = sns.boxplot(x = \"LeagueIndex\", y = \"SelectByHotkeys\", data = starcraft).set_title(\"SelectByHotkeys per League\")","044cfb08":"# AssignToHotkeys per League\nax = sns.boxplot(x = \"LeagueIndex\", y = \"AssignToHotkeys\", data = starcraft).set_title(\"AssignToHotkeys by League\")","fcbb3cc8":"# UniqueHotkeys by League\nax = sns.boxplot(x = \"LeagueIndex\", y = \"UniqueHotkeys\", data = starcraft).set_title(\"UniqueHotkeys by League\")","1738619d":"# MinimapAttacks by League\nax = sns.boxplot(x = \"LeagueIndex\", y = \"MinimapAttacks\", data = starcraft).set_title(\"MinimapAttakcs by League\")","a2b9a186":"# MinimapRightClicks by League\nax = sns.boxplot(x = \"LeagueIndex\", y = \"MinimapRightClicks\", data = starcraft).set_title(\"MinimapRightClicks by League\")","ee362a66":"# NumberOfPACs by League\nax = sns.boxplot(x = \"LeagueIndex\", y = \"NumberOfPACs\", data = starcraft).set_title(\"NumberOfPACs by League\")","a166c01c":"# GapBetweenPACs by League\nax = sns.boxplot(x = \"LeagueIndex\", y = \"GapBetweenPACs\", data = starcraft).set_title(\"GapBetweenPACs by League\")","b8abd5ec":"# ActionLatency by League\nax = sns.boxplot(x = \"LeagueIndex\", y = \"ActionLatency\", data = starcraft).set_title(\"ActionLatency by League\")","a13e2b6e":"# ActionsInPAC by League\nax = sns.boxplot(x = \"LeagueIndex\", y = \"ActionsInPAC\", data = starcraft).set_title(\"ActionsInPAC by League\")","04535678":"# TotalMapExplored by League\nax = sns.boxplot(x = \"LeagueIndex\", y = \"TotalMapExplored\", data = starcraft).set_title(\"TotalMapExplored by League\")","0c925302":"# WorkersMade by League\nax = sns.boxplot(x = \"LeagueIndex\", y = \"WorkersMade\", data = starcraft).set_title(\"WorkersMade by League\")","6c662503":"# UniqueUnitsMade by League\nax = sns.boxplot(x = \"LeagueIndex\", y = \"UniqueUnitsMade\", data = starcraft).set_title(\"UniqueUnitsMade by League\")","4ee256cd":"# ComplexUnitsMade by League\nax = sns.boxplot(x = \"LeagueIndex\", y = \"ComplexUnitsMade\", data = starcraft).set_title(\"ComplexUnitsMade by League\")","514cb425":"# ComplexAbilitiesUsed by League\nax = sns.boxplot(x = \"LeagueIndex\", y = \"ComplexAbilitiesUsed\", data = starcraft).set_title(\"ComplexAbilitiesUsed by League\")","d48c6ac8":"# feature cleanup\ndrops = [\"GameID\", \"Age\", \"TotalHours\", \"UniqueUnitsMade\", \"ComplexUnitsMade\", \"ComplexAbilitiesUsed\"]\n\nstarcraft.drop(drops, axis = 1, inplace = True)\nstarcraft.head()","654d1790":"# split into training and test sets\ny = starcraft.LeagueIndex\nX_train, X_test, y_train, y_test = train_test_split(starcraft, y, test_size = 0.2)\n\n# remove the target from the training data\nX_train.drop(\"LeagueIndex\", axis = 1, inplace = True)\nX_test.drop(\"LeagueIndex\", axis = 1, inplace = True)\n\n# easy to read statements\nprint(\"X_train: \", X_train.shape) \nprint(\"y_train: \", y_train.shape)\nprint(\"X_test: \", X_test.shape) \nprint(\"y_test: \", y_test.shape)","fbbc48ad":"# fit the model\nclf = MultinomialNB()\n\n# train the model\nmodel_1 = clf.fit(X_train, y_train)","e4702f8d":"# predictions\npredictions_1 = clf.predict(X_test)\n\n# view predictions\npredictions_1[:10]","ec445c55":"# compare results\nprint(\"Classification Accuracy: \", round(accuracy_score(y_test, predictions_1), 2))","b7b7540c":"# build the model\nclf2 = RandomForestClassifier(n_estimators = 64, random_state = 123)\n\n# fit the model\nmodel_2 = clf2.fit(X_train, y_train)","43c3d482":"# predictions\npredictions_2 = clf2.predict(X_test)\n\n# view them\npredictions_2[:10]","04147fcf":"# compare results\nprint(\"Classification Accuracy: \", round(accuracy_score(y_test, predictions_2), 2))","2c1fd8af":"# build the model\nclf3 = svm.SVC(gamma = 0.00001, decision_function_shape = \"ovr\")\n\n# fit the model\nmodel_3 = clf3.fit(X_train, y_train)","f34bf529":"# predictions\npredictions_3 = clf3.predict(X_test)\n\npredictions_3[:10]","4f0877ca":"# compare results\nprint(\"Classification Accuracy: \", round(accuracy_score(y_test, predictions_3), 2))","39c62ff9":"### Summary Statistics\n\nBasic overview of the data.","180a5d45":"Not much correlation here.  There are only so many different units you can build for each race so there won't be a huge difference.","ef38454a":"From starcraft guides, the \"select all army\" hotkey is most frequently used, leading to less hotkeys used overall.  More hotkeys, though, means better microing of your army.  Shows here as a higher leagues placement relative to number of hotkeys assigned.","98ef65fd":"### Random Forest Classification\n\nWe can borrow the train and test data splits from the Naive Bayes Classification to run a random forest classifier.","de91c676":"### Support Vector Machine","4f140444":"Shorter gaps means less time spent thinking about what to do and more time spent doing.  Shorter gap leads to a higher league.","0023ac3c":"## Clean Up\n\nSome checking to see if there exists any null data.  Clean up if there is.","65b20d58":"The time required between moving camera to an area and then initiating an action.  Lower Action Latency likely means better understanding of the game\/better muscle memory which leads to a higher league.","fe575904":"Selecting more things by hotkeys means more efficient movement since constantly clikcing the buttons instead of using hotkeys makes a player slower.","5059721a":"More map explored leads to a higher league.  This is likely due to greater emphasis on scouting as the league increases.  If you don't know what your opponent is doing, then you won't be able to counter what they're doing.","f67dc19a":"### Naive Bayes Classification\n\nA simple model for multinomial classification here.  We drop some columns as our analysis indicates that they will not have a suitable impact on the result.","d6bacd6a":"Unsurprisngly, playing the game more results in a better league.  More practice.","52adc5ff":"Higher APM leads to higher league placement.  ","67372b0f":"The mean rises while the interquartile ranges stay about the same.","ed08de77":"We need to split the data into training and test sets to train and test the model respectively.","b3aedf69":"Consistent worker production leads to a higher league placement.  More workers means more mining and building so that makes pretty good sense.","0bf24265":"## Modelling\n\nWe can attempt to model the dataset.  Since there are 7 classes for targets, we are looking at a multinomial classification problem and can select our models accordingly.","9d33b99a":"## Imports\n\nImport useful libraries and the data itself.  ","4aae7b16":"## Conclusions\n\nThe models explored here are fairly simple, especially considering the lack of feature engineering (outside of removing some columns) to make the features better explain variance in the data.  For better classification, more feature engineering is likely required as well as hyperparameter tuning to attain a better classification rate.","51647260":"Attacking by clicking on the minimap seems to increase with league.  Likely due to allowing a player to do other things while assigning their army to attack somewhere.","53d84757":"Age has a fairly even distribution between leagues.","bce8427d":"Perception Action Cycle(PAC) or basically the ability to move the camera to an area, execute actions and then changes camera to another location.  Higher PACs means a shorter time to figure out what needs to be done in each area, leading to a higher league.","91a733c9":"# Skillcraft\n\nStarcraft is a Real Time Strategy (RTS) game developed by Blizzard that is played competitively.  There is a ranked system within the game that divides players into leagues (Bronze, Silver, Gold, Platinum, Diamond, Master and Grandmaster).  These have been indexed into 7 leagues from 1-7.  \n\nThe dataset can be obtained from here: https:\/\/www.kaggle.com\/danofer\/skillcraft\n\nThe goal of this notebook is to do an exploratory data analysis of the data as well as conduct some basic multinomial classification modelling on the data.","bed347df":"Total hours played by everyone appears to be about the same.  Makes sense when viewed from the lens of \"work smarter, not harder\".","5eb82b49":"And we can finally build the naive-bayes model.","a87d3f80":"### Feature Plotting\n\nBoxplots give us a good idea of the distribution of features within each league and how they compare between leagues.","0a68e866":"Complex units include ghosts, infestors and high templar.  Units that require greater skill than just A-clicking the ground with them given their abilities.  On the other hand, there's a greater range as the league increases but the mean number built stays at roughly the same, around 0.","312ac634":"## Analysis\n\nVisualizing and describing the dataset helps us to see if there are any features worth removing from the get-go before modelling itself.  It also helps to show if there is a correlation between the League a player is in and their stats.","24af1b04":"Not much correlation with higher league likely due to it being more important to take less time to execute actions versus more actions on each screen.  ","b9256d28":"The right clicks allow for movement.  Again, more efficiency and multi-tasking allowed with this method.","e72dde42":"Also not a huge correlation.  Complex actions require extra input (like specific targetting) so the amount used increases with league, but not by a huge amount."}}