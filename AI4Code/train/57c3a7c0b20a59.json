{"cell_type":{"641f9f81":"code","0cf6347b":"code","d5d352f8":"code","89b56e25":"code","df974b54":"code","8cc844b7":"code","2208cf92":"code","0740b4f4":"code","83d524b5":"code","c25a94e8":"code","e8d9fee5":"code","abe55ee9":"code","a548cb18":"code","b2dd68f9":"code","8ee832b4":"code","e87db9b2":"code","0d505ae4":"code","dc791460":"code","b55c0cbc":"code","a1dba5a5":"code","88bdeec7":"code","da1e1a7a":"code","a5fb1254":"code","5bd174d4":"code","809948e7":"code","1391f7b5":"code","b831878e":"code","728848d7":"code","b4fddb0c":"code","b2cc271d":"code","caa4f74e":"code","cbf82b79":"code","0cf0138b":"code","3abb9f2d":"code","f92efeb8":"code","89d58b85":"code","462fd00a":"code","22433cd7":"code","ac0a043b":"code","85e2abf4":"code","c90674fd":"code","94ccac12":"code","7ffd98e4":"code","c2132332":"code","0d954dfa":"code","233d823c":"code","efa2347c":"code","2523b86e":"code","6356cfc6":"code","900459b8":"code","7376021c":"code","a8b846a7":"code","742f159b":"code","257eb0f7":"code","a61ad778":"code","fe58a1f4":"code","44ad2e74":"code","8acb83ca":"code","d61b336c":"code","479a1d52":"code","29ff1948":"code","025cfb7b":"code","23335a90":"code","e0644322":"code","dd2d1626":"code","7b48961b":"code","0574cefa":"code","61be612d":"code","6def4caa":"code","a615c22f":"code","9c1eb257":"code","79fbf6fd":"code","95e64c2c":"code","4943c675":"code","0ee1cef7":"code","8ba8b6ab":"code","53d5272d":"code","c64e07ab":"code","771e4c6b":"code","2bd98298":"code","14b58840":"code","ce2044aa":"code","66198187":"markdown","3428195d":"markdown","a924076f":"markdown","4b0f2afa":"markdown","a758a97e":"markdown","0e44d82a":"markdown","1754f9f0":"markdown","26b503d3":"markdown"},"source":{"641f9f81":"from pandas import Series,DataFrame\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set_style(\"whitegrid\")\nimport statistics","0cf6347b":"df=pd.read_csv(\"2015.csv\")","d5d352f8":"df.tail(2)","89b56e25":"def cntry(c,df):\n    for i in np.arange(len(df[\"Country\"])):\n        if df[\"Country\"][i]==c:\n            ind=(df[\"Happiness Rank\"][i])\n            break\n        else:\n            ind=\"not obtained\"\n    print(\"The happyness index for\",c,'was',ind)","df974b54":"cntry(\"India\",df)","8cc844b7":"df[\"score\"]=np.arange((len(df[\"Country\"])),0,-1)","2208cf92":"df1=DataFrame([df[\"Economy (GDP per Capita)\"],df[\"Family\"],df[\"Health (Life Expectancy)\"],df[\"Freedom\"],df[\"Trust (Government Corruption)\"],df[\"score\"]]).T","0740b4f4":"\ndf1.head()","83d524b5":"df2=df1.corr()\ndf2","c25a94e8":"sns.pairplot(df1)","e8d9fee5":"sns.heatmap(df2,annot=True)","abe55ee9":"df_16=pd.read_csv(\"2016.csv\")\ndf_17=pd.read_csv(\"2017.csv\")\ndf_18=pd.read_csv(\"WorldHappiness2018_Data.csv\")\ndf_19=pd.read_csv(\"world-happiness-report-2019.csv\")","a548cb18":"df_16[\"score\"]=np.arange((len(df_16[\"Country\"])),0,-1)\ndf_17[\"score\"]=np.arange((len(df_17[\"Country\"])),0,-1)\ndf_18[\"score\"]=np.arange((len(df_18[\"Country\"])),0,-1)\ndf_19[\"score\"]=np.arange((len(df_19[\"Country (region)\"])),0,-1)","b2dd68f9":"df_19.columns","8ee832b4":"df1_16=DataFrame([df_16[\"Economy (GDP per Capita)\"],df_16[\"Family\"],df_16[\"Health (Life Expectancy)\"],df_16[\"Freedom\"],df_16[\"Trust (Government Corruption)\"],df_16[\"score\"]]).T\ndf1_17=DataFrame([df_17[\"Economy..GDP.per.Capita.\"],df_17[\"Family\"],df_17[\"Health..Life.Expectancy.\"],df_17[\"Freedom\"],df_17[\"Trust..Government.Corruption.\"],df_17[\"score\"]]).T\ndf1_18=DataFrame([df_18[\"GDP_Per_Capita\"],df_18[\"Social_Support\"],df_18[\"Healthy_Life_Expectancy\"],df_18[\"Freedom_To_Make_Life_Choices\"],df_18[\"score\"]]).T\ndf1_19=DataFrame([df_19['Log of GDP\\nper capita'],df_19[\"Social support\"],df_19[\"Healthy life\\nexpectancy\"],df_19[\"Freedom\"],df_19[\"score\"]]).T","e87db9b2":"sns.heatmap(df1_19.corr(),annot=True)","0d505ae4":"sns.heatmap(df1_16.corr(),annot=True)","dc791460":"#country_wise_study_nature of factors_associated_with_their_rank","b55c0cbc":"def info_15(c):\n    for i in np.arange(len(df[\"Country\"])):\n        if df[\"Country\"][i]==c:\n            rank=df[\"Happiness Rank\"][i]\n            eco=df[\"Economy (GDP per Capita)\"][i]\n            fam=df[\"Family\"][i]\n            hel=df[\"Health (Life Expectancy)\"][i]\n            fre=df[\"Freedom\"][i]\n            break\n        else:\n            rank=0\n            eco=0\n            fam=0\n            hel=0\n            fre=0\n    v=[rank,eco,fam,hel,fre]\n    return (v)","a1dba5a5":"def info_16(c):\n    for i in np.arange(len(df_16[\"Country\"])):\n        if df_16[\"Country\"][i]==c:\n            rank=df_16[\"Happiness Rank\"][i]\n            eco=df_16[\"Economy (GDP per Capita)\"][i]\n            fam=df_16[\"Family\"][i]\n            hel=df_16[\"Health (Life Expectancy)\"][i]\n            fre=df_16[\"Freedom\"][i]\n            break\n        else:\n            rank=0\n            eco=0\n            fam=0\n            hel=0\n            fre=0\n    v=[rank,eco,fam,hel,fre]\n    return (v)","88bdeec7":"def info_17(c):\n    for i in np.arange(len(df_17[\"Country\"])):\n        if df_17[\"Country\"][i]==c:\n            rank=df_17[\"Happiness.Rank\"][i]\n            eco=df_17[\"Economy..GDP.per.Capita.\"][i]\n            fam=df_17[\"Family\"][i]\n            hel=df_17[\"Health..Life.Expectancy.\"][i]\n            fre=df_17[\"Freedom\"][i]\n            break\n        else:\n            rank=0\n            eco=0\n            fam=0\n            hel=0\n            fre=0\n    v=[rank,eco,fam,hel,fre]\n    return (v)","da1e1a7a":"def info_18(c):\n    for i in np.arange(len(df_18[\"Country\"])):\n        if df_18[\"Country\"][i]==c:\n            rank=df_18[\"Rank\"][i]\n            eco=df_18[\"GDP_Per_Capita\"][i]\n            fam=df_18[\"Social_Support\"][i]\n            hel=df_18[\"Healthy_Life_Expectancy\"][i]\n            fre=df_18[\"Freedom_To_Make_Life_Choices\"][i]\n            break\n        else:\n            rank=0\n            eco=0\n            fam=0\n            hel=0\n            fre=0\n    v=[rank,eco,fam,hel,fre]\n    return (v)","a5fb1254":"def info_19(c):\n    for i in np.arange(len(df_19[\"Country (region)\"])):\n        if df_19[\"Country (region)\"][i]==c:\n            rank=df_19[\"Ladder\"][i]\n            eco=df_19[\"Log of GDP\\nper capita\"][i]\n            fam=df_19[\"Social support\"][i]\n            hel=df_19[\"Healthy life\\nexpectancy\"][i]\n            fre=df_19[\"Freedom\"][i]\n            break\n        else:\n            rank=0\n            eco=0\n            fam=0\n            hel=0\n            fre=0\n    v=[rank,eco,fam,hel,fre]\n    return (v)","5bd174d4":"info_19(\"Finland\")","809948e7":"def info(c):\n    a_15=info_15(c)\n    a_16=info_16(c)\n    a_17=info_17(c)\n    a_18=info_18(c)\n    a_19=info_19(c)\n    a_df=DataFrame([a_15,a_16,a_17,a_18,a_19],index=[2015,2016,2017,2018,2019],columns=[\"Rank\",\"GDP\",\"Family\",\"Life_expectency\",\"Freedom\"])\n    return(a_df)","1391f7b5":"info(\"India\")[\"Rank\"].plot()\ninfo(\"Pakistan\")[\"Rank\"].plot()\nplt.title(\"Rank of country corrosponding to year\",fontsize=20)\nplt.xlabel(\"year\",fontsize=20)\nplt.ylabel(\"Happiness Rank\",fontsize=20)\nplt.legend([\"India\",\"Pakistan\"])","b831878e":"info(\"India\")[\"Family\"][:-1].plot()\ninfo(\"Pakistan\")[\"Family\"][:-1].plot()","728848d7":"info(\"Switzerland\")[\"Rank\"].plot()\ninfo(\"Iceland\")[\"Rank\"].plot()\ninfo(\"Denmark\")[\"Rank\"].plot()\ninfo(\"Norway\")[\"Rank\"].plot()\nplt.title(\"Rank of country corrosponding to year\",fontsize=20)\nplt.xlabel(\"year\",fontsize=20)\nplt.ylabel(\"Happiness Rank\",fontsize=20)\nplt.legend([\"Switzerland\",\"Iceland\",\"Denmark\",\"Norway\"])","b4fddb0c":"info(\"United Kingdom\")[\"Rank\"].plot()\ninfo(\"United States\")[\"Rank\"].plot()\nplt.legend([\"UK\",\"US\"])","b2cc271d":"info(\"Switzerland\")","caa4f74e":"#now i'm gonna predict the factors like gdp,family and based upon those predictions u have to predict the  rank you can use 2019 as test data","cbf82b79":"from sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures","0cf0138b":"from sklearn.linear_model import LinearRegression,LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier,AdaBoostClassifier,GradientBoostingClassifier\nimport xgboost as xgb\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score,confusion_matrix,mean_squared_error","3abb9f2d":"def reg_le(c,fac):\n    #model_le=LinearRegression()\n    model_le=xgb.XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n       colsample_bynode=1, colsample_bytree=1, gamma=0,\n       importance_type='gain', learning_rate=0.1, max_delta_step=0,\n       max_depth=18, min_child_weight=1, missing=None, n_estimators=100,\n       n_jobs=1, nthread=None, objective='reg:linear', random_state=0,\n       reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,\n       silent=None, subsample=1, verbosity=1)\n    info_df=info(c)\n    x=info_df.index.values.reshape(-1,1)[:-1]\n    y=info_df[fac].values.reshape(-1,1)[:-1]\n    model_le.fit(x,y)\n    y_test=np.array([2019,2020])\n    y_pre=model_le.predict(y_test.reshape(-1,1))\n    return(y_pre)","f92efeb8":"reg_le(\"Switzerland\",\"Family\")[1]","89d58b85":"(np.append(info(\"Switzerland\")[\"Life_expectency\"][:-1],reg_le(\"Switzerland\",\"Life_expectency\")))","462fd00a":"factors=info(\"India\").columns[1:]\ndf_20=DataFrame([],index=factors)\nv2=[]\nfor i in df[\"Country\"]:\n    v1=[]\n    for j in factors:\n        v1=np.append(v1,reg_le(i,j)[1])\n    df_20[i]=v1","22433cd7":"df_20=df_20.T","ac0a043b":"x_test=df_20","85e2abf4":"x_test.head()","c90674fd":"df1=df1.drop(\"Trust (Government Corruption)\",1)","94ccac12":"df1_16=df1_16.drop(\"Trust (Government Corruption)\",1)","7ffd98e4":"df1_17=df1_17.drop(\"Trust..Government.Corruption.\",1)","c2132332":"df_train1=DataFrame(df1.values).append(DataFrame(df1_16.values)).append(DataFrame(df1_17.values))","0d954dfa":"df_train=df_train1.append(DataFrame(df1_18.values))","233d823c":"df_train.columns=df1.columns","efa2347c":"y_train=df_train[\"score\"].values.reshape(-1,1)\nx_train=(df_train.drop(\"score\",1)).values","2523b86e":"model_le=LinearRegression()","6356cfc6":"model_le.fit(x_train,y_train)","900459b8":"y_pre=model_le.predict(x_test.values)","7376021c":"import xgboost as xgb","a8b846a7":"model_xg=xgb.XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n       colsample_bynode=1, colsample_bytree=1, gamma=0,\n       importance_type='gain', learning_rate=0.1, max_delta_step=0,\n       max_depth=18, min_child_weight=1, missing=None, n_estimators=100,\n       n_jobs=1, nthread=None, objective='reg:linear', random_state=0,\n       reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,\n       silent=None, subsample=1, verbosity=1)","742f159b":"model_xg.fit(x_train,y_train)","257eb0f7":"y_prexg=model_xg.predict(x_test.values)","a61ad778":"y_pre1=[]\nfor i in (y_pre):\n    y_pre1=np.append(y_pre1,np.round(i))","fe58a1f4":"y_pre1","44ad2e74":"x_test[\"score\"]=y_pre1","8acb83ca":"df1_20=x_test.sort_values(by=\"score\",axis=0,ascending=False)","d61b336c":"df1_20[\"rank\"]=np.arange(1,len(df1_20[\"score\"])+1)","479a1d52":"df1_20       #this is the predicted happines report for 2020","29ff1948":"info(\"India\")[\"Rank\"][::-1].plot()","025cfb7b":"def rank20(c):\n    for i in np.arange(len(df1_20[\"rank\"])):\n        if df1_20.index[i]==c:\n            print(\"The rank of \",c,\"in 2020 would be\",df1_20[\"rank\"][i])","23335a90":"rank20(\"India\")","e0644322":"r19=[]\nr20=[]\nc_name=[]\nfor i in np.arange(len(df_19[\"Ladder\"])):\n    for j in np.arange(len(df1_20[\"rank\"])):\n        if df_19[\"Country (region)\"][i]==df1_20.index[j]:\n            c_name=np.append(c_name,df_19[\"Country (region)\"][i])\n            r19=np.append(r19,df_19[\"Ladder\"][i])\n            r20=np.append(r20,df1_20[\"rank\"][j])\ndf_1920=DataFrame([r19,r20],columns=c_name,index=[\"rank_2019\",\"rank_2020le\"]).T","dd2d1626":"df_1920.head()","7b48961b":"df_1920[\"rank_2019\"].plot(figsize=(20,6),kind=\"line\")\ndf_1920[\"rank_2020le\"].plot(figsize=(20,6))\nplt.title(\"Rank of country corrosponding to year\",fontsize=20)\nplt.xlabel(\"country_name\",fontsize=20)\nplt.ylabel(\"Happiness Rank\",fontsize=20)\nplt.legend([\"rank in year 2019\",\"predicted rank for year 2020\"])","0574cefa":"y_pre11=[]\nfor i in y_prexg:\n    y_pre11=np.append(y_pre11,int(i))","61be612d":"x_test[\"scorexg\"]=y_pre11","6def4caa":"df2_20=df1_20","a615c22f":"df2_20=x_test.sort_values(by=\"scorexg\",axis=0,ascending=False)","9c1eb257":"df2_20[\"rank\"]=np.arange(1,len(df2_20[\"scorexg\"])+1)","79fbf6fd":"df2_20[10:20]    #this is the predicted happines report for 2020","95e64c2c":"r19=[]\nr20=[]\nc_name=[]\nfor i in np.arange(len(df_19[\"Ladder\"])):\n    for j in np.arange(len(df1_20[\"rank\"])):\n        if df_19[\"Country (region)\"][i]==df2_20.index[j]:\n            c_name=np.append(c_name,df_19[\"Country (region)\"][i])\n            r19=np.append(r19,df_19[\"Ladder\"][i])\n            r20=np.append(r20,df2_20[\"rank\"][j])\ndf2_1920=DataFrame([r19,r20],columns=c_name,index=[\"rank_2019\",\"rank_2020xg\"]).T","4943c675":"df2_1920[\"rank_2019\"].plot(figsize=(20,6),kind=\"line\")\ndf2_1920[\"rank_2020xg\"].plot(figsize=(20,6))\nplt.title(\"Rank of country corrosponding to year\",fontsize=20)\nplt.xlabel(\"country_name\",fontsize=20)\nplt.ylabel(\"Happiness Rank\",fontsize=20)\nplt.legend([\"rank in year 2019\",\"predicted rank for year 2020\"])","0ee1cef7":"df_m=pd.merge(df_1920,df2_1920)\ndf_m.index=df_1920.index","8ba8b6ab":"sns.jointplot(df_m[\"rank_2019\"].values,df_m[\"rank_2020le\"],kind=\"reg\")","53d5272d":"sns.jointplot(df_m[\"rank_2019\"].values,df_m[\"rank_2020xg\"],kind=\"reg\")","c64e07ab":"sns.lmplot(\"rank_2019\",\"rank_2020le\",df_m,order=2,\n           scatter_kws={\"marker\":\"o\",\"color\":\"red\"},\n              line_kws={\"linewidth\":1,\"color\":\"blue\"})","771e4c6b":"sns.lmplot(\"rank_2019\",\"rank_2020xg\",df_m,order=2,\n           scatter_kws={\"marker\":\"o\",\"color\":\"green\"},\n              line_kws={\"linewidth\":2,\"color\":\"blue\"})","2bd98298":"df_m.corr()","14b58840":"sns.heatmap(df_m.corr(),annot=True)","ce2044aa":"df_m","66198187":"model_xg1=xgb.XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n       colsample_bynode=1, colsample_bytree=1, gamma=0,\n       importance_type='gain', learning_rate=0.1, max_delta_step=0,\n       max_depth=18, min_child_weight=1, missing=None, n_estimators=100,\n       n_jobs=1, nthread=None, objective='reg:linear', random_state=0,\n       reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,\n       silent=None, subsample=1, verbosity=1)\nmodel_xg1.fit(x_train,y_train)","3428195d":"df1_18=df1_18.drop(\"score\",1)","a924076f":"# Data preprocessing and visualization","4b0f2afa":"here we have predicted the factors for year 2020","a758a97e":"# ML Methods","0e44d82a":"#clearly the above prediction made upon the besis of linear regression is not so accurate ,we proceed forward to use any other powerfil ML algorithm","1754f9f0":"df1[\"rank\"]=np.arange(1,len(df1[\"score\"])+1)\ndf1_16[\"rank\"]=np.arange(1,len(df1_16[\"score\"])+1)\ndf1_17[\"rank\"]=np.arange(1,len(df1_17[\"score\"])+1)\ndf1_18[\"rank\"]=np.arange(1,len(df1_18[\"score\"])+1)","26b503d3":"#now one would love to see if the gdp,family,expected life,freedom,trust are any way related with the happyness of the nation\n#country_wise_study\n#regression"}}