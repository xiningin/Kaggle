{"cell_type":{"cf4b13ef":"code","d552dee1":"code","26188d77":"code","4b69cadc":"code","ddaebe09":"code","a741b592":"code","f988a64e":"code","6fe28bad":"code","c73b9b2b":"code","7b371fc1":"code","63295261":"code","dcf6a4b7":"code","b051eb7c":"code","f970dfa7":"code","770c728b":"code","ecb2a274":"markdown","6f8ce6ce":"markdown","23350a51":"markdown","c6ce0221":"markdown","115b97a3":"markdown","34358cea":"markdown","dc7170a0":"markdown","76de8ffb":"markdown","109e626b":"markdown","faac261f":"markdown","d3e47f2d":"markdown","ce23e31a":"markdown","609b86cf":"markdown","d25b4a7e":"markdown"},"source":{"cf4b13ef":"import pandas as pd\nimport numpy as np\nimport sqlite3 as sql\nimport matplotlib.pyplot as plt\n%matplotlib inline","d552dee1":"db = '..\/input\/chinook-music-store-data\/chinook.db'","26188d77":"def run_query(q):\n    with sql.connect(db) as conn:\n        return pd.read_sql_query(q, conn)","4b69cadc":"def run_commnad(q):\n    with sql.connect(db) as conn:\n        sql.isolation_level = None # tells SQLite to autocommit any changes \n        return conn.execute(q)","ddaebe09":"def show_table():\n    q = \"\"\"Select name, type from sqlite_master where type IN ('table','View') \"\"\"\n    return run_query(q)","a741b592":"show_table()","f988a64e":"# a query that returns each genre, with the number of tracks sold in the USA:\n# in absolute numbers\n# in percentages.\n\nq = \"\"\"With usa_sold AS (Select g.name genre, COUNT(il.track_id) tracks_sold \n       from genre g \n       Left join track t\n       ON t.genre_id = g.genre_id \n       Inner Join invoice_line il\n       ON il.track_id = t.track_id\n       Inner Join invoice inv\n       ON inv.invoice_id = il.invoice_id\n       Inner join customer c\n       On c.customer_id = inv.customer_id\n       Where c.country = \"USA\"\n       Group by 1\n       Order by 2 Desc)\n       \n       Select genre, tracks_sold, \n       Cast(tracks_sold as float)\/(select sum(tracks_sold) from usa_sold) percentage_sold from usa_sold\n       Limit 10\n       \"\"\"\n\nrun_query(q)","6fe28bad":"genre_sales_usa = run_query(q)\n\ngenre_sales_usa.set_index(\"genre\", inplace = True, drop = True)\ngenre_sales_usa[\"tracks_sold\"].plot.barh(title = \"Top Selling Genres in the USA\", \n                                         xlim = (0,600),\n                                         colormap = plt.cm.Accent)\nplt.ylabel(\"\")\n\nfor i, label in enumerate(genre_sales_usa.index):\n    score = genre_sales_usa.loc[label,\"tracks_sold\"]\n    label = (genre_sales_usa.loc[label,\"percentage_sold\"]*100).astype(int).astype(str) + \"%\"\n    plt.annotate(label,(score +10, i-0.15))\n","c73b9b2b":"# Altenate of above\n# annotating using ax.text() method\n\nax = genre_sales_usa[\"tracks_sold\"].plot.barh(title = \"Top Selling Genres in the USA\", \n                                         xlim = (0,700),\n                                         colormap = plt.cm.Accent)\nplt.ylabel(\"\")\n\nfor i, label in enumerate(genre_sales_usa.index):\n    score = genre_sales_usa.loc[label,\"tracks_sold\"]\n    label = (genre_sales_usa.loc[label,\"percentage_sold\"]*100).astype(int).astype(str) + \"%\"\n    ax.text(score +10, i-0.15,label)\n\n\nplt.show()","7b371fc1":"# Query that finds the total dollar amount of sales assigned to each sales support agent within the company.\n\nq = \"\"\"Select e.first_name || '' || e.last_name employee, e.hire_date, \n        SUM(inv.total) total_sales from employee e\n        left join customer c\n        ON c.support_rep_id = e.employee_id \n        Inner Join invoice inv\n        On inv.customer_id = c.customer_id\n        Group by 1\"\"\"\n\nrun_query(q)","63295261":"employee_sales = run_query(q)\nemployee_sales.set_index(\"employee\", inplace = True)\nemployee_sales.sort_values(by = \"total_sales\", inplace = True)\nemployee_sales[\"total_sales\"].plot.barh(colormap = plt.cm. Accent,\n                                        xlim = (0,1750), \n                                        title = 'Sales Breakdown by Employee')\nplt.ylabel(\"\")\nplt.show()","dcf6a4b7":"# query that collates data on purchases from different countries\n# For each country, include:\n# total number of customers\n# total value of sales\n# average value of sales per customer\n# average order value\n\nq = \"\"\"With purchase_data As (\n       Select \n       c.country, \n       COUNT(Distinct(inv.customer_id)) customers, \n       SUM(inv.total) total_sales, \n       SUM(inv.total)\/COUNT(inv.customer_id) average_order,\n       SUM(inv.total)\/COUNT(Distinct(inv.customer_id)) customer_lifetime_value\n       From customer c\n       Inner Join invoice inv\n       ON c.customer_id = inv.customer_id\n       Group BY 1\n       Order By 3 Desc),\n       \n      purchases As ( \n       Select \n       CASE \n       when customers = 1 Then \"other\"\n       Else country \n       End As country,\n       customers, \n       total_sales, \n       average_order,\n       customer_lifetime_value\n       from purchase_data),\n       \n       updated As(\n       Select country,Sum(customers) customers, Sum(total_sales) total_sales, \n       Sum(average_order)\/Count(average_order) average_order,\n       Sum(customer_lifetime_value)\/count(customer_lifetime_value) customer_lifetime_value\n       from purchases\n       Group by 1\n       Order BY 3 Desc),\n       \n       final as (Select *, \n       Case When country = \"other\" Then 1\n       Else 0 \n       End as ord \n       From updated order by ord)\n       \n       Select country,customers,total_sales,average_order,\n       customer_lifetime_value\n       From final\n       \"\"\"\n\nrun_query(q)","b051eb7c":"country_metrics = run_query(q)\ncountry_metrics.set_index(\"country\", drop=True, inplace=True)\ncolors = [plt.cm.Accent(i) for i in np.linspace(0, 1, \n                                                country_metrics.shape[0])]\n\nfig, axes = plt.subplots(nrows=2, ncols=2, figsize=(9, 10))\nax1, ax2, ax3, ax4 = axes.flatten()\nfig.subplots_adjust(hspace=.5, wspace=.3)\n\n\n# top left\nsales_breakdown = country_metrics[\"total_sales\"].copy().rename('')\nsales_breakdown.plot.pie(\n    ax=ax1,\n    startangle=-90,\n    counterclock=False,\n    title='Sales Breakdown by Country,\\nNumber of Customers',\n    colormap=plt.cm.Accent,\n    fontsize=8,\n    wedgeprops={'linewidth':0})\n\n# top right\ncvd_cols = [\"customers\",\"total_sales\"]\ncusts_vs_dollars = country_metrics[cvd_cols].copy()\ncusts_vs_dollars.index.name = \"\"\n\nfor c in cvd_cols:\n    custs_vs_dollars[c] \/= custs_vs_dollars[c].sum() \/ 100\n\ncusts_vs_dollars.plot.bar(ax = ax2, colormap = plt.cm.Set1, title = \"Pct Customers vs Sales\")\nax2.tick_params(top = \"off\", left = \"off\", right = \"off\", bottom = \"off\")\nax2.spines[\"top\"].set_visible(False)\nax2.spines[\"right\"].set_visible(False)\nax2.legend(loc = \"upper center\")\n\n\n# bottom left\navg_order = country_metrics[\"average_order\"].copy()\navg_order.index.name = ''\n\ndifference_from_avg = avg_order*100\/avg_order.mean() -100\ndifference_from_avg.drop(\"other\", inplace = True)\n\ndifference_from_avg.plot.bar(ax = ax3, color = colors,\n                             title = \"Average Order,\\nPct Difference from Mean\")\nax3.axhline(0)\nax3.spines[\"top\"].set_visible(False)\nax3.spines[\"right\"].set_visible(False)\nax3.spines[\"bottom\"].set_visible(False)\n\n# bottom right\nltv = country_metrics[\"customer_lifetime_value\"].copy()\nltv.index.name = ''\nltv.drop(\"other\", inplace = True)\nltv.plot.bar(ax = ax4, color = colors, \n             title = \"Customer Lifetime Value, Dollars\")\nax4.spines[\"top\"].set_visible(False)\nax4.spines[\"right\"].set_visible(False)\nax4.spines[\"bottom\"].set_visible(False)\nax4.tick_params(left = \"off\", bottom = \"off\")\n\nplt.show()","f970dfa7":"q = '''\nWITH invoice_first_track AS\n    (\n     SELECT\n         il.invoice_id invoice_id,\n         MIN(il.track_id) first_track_id\n     FROM invoice_line il\n     GROUP BY 1\n    ),\n\n   Album_purchased  as (\n    SELECT\n        ifs.*,\n        CASE\n            WHEN\n                 (\n                  SELECT t.track_id FROM track t\n                  WHERE t.album_id = (\n                                      SELECT t2.album_id FROM track t2\n                                      WHERE t2.track_id = ifs.first_track_id\n                                     ) \n\n                  EXCEPT \n\n                  SELECT il2.track_id FROM invoice_line il2\n                  WHERE il2.invoice_id = ifs.invoice_id\n                 ) IS NULL\n             AND\n                 (\n                  SELECT il2.track_id FROM invoice_line il2\n                  WHERE il2.invoice_id = ifs.invoice_id\n\n                  EXCEPT \n\n                  SELECT t.track_id FROM track t\n                  WHERE t.album_id = (\n                                      SELECT t2.album_id FROM track t2\n                                      WHERE t2.track_id = ifs.first_track_id\n                                     ) \n                 ) IS NULL\n             THEN \"yes\"\n             ELSE \"no\"\n         END AS \"album_purchase\"\n     FROM invoice_first_track ifs)\n     \n     SELECT\n    album_purchase,\n    COUNT(invoice_id) number_of_invoices,\n    CAST(count(invoice_id) AS FLOAT) \/ (\n                                         SELECT COUNT(*) FROM invoice\n                                      ) percent\n                                      \n    from album_purchased \n    group by 1\n     ;\n'''\n\nrun_query(q)","770c728b":"# Alternate to above query\n\nq = '''\nWITH invoice_first_track AS\n    (\n     SELECT\n         il.invoice_id invoice_id,\n         MIN(il.track_id) first_track_id\n     FROM invoice_line il\n     GROUP BY 1\n    )\n\nSELECT\n    album_purchase,\n    COUNT(invoice_id) number_of_invoices,\n    CAST(count(invoice_id) AS FLOAT) \/ (\n                                         SELECT COUNT(*) FROM invoice\n                                      ) percent\nFROM\n    (\n    SELECT\n        ifs.*,\n        CASE\n            WHEN\n                 (\n                  SELECT t.track_id FROM track t\n                  WHERE t.album_id = (\n                                      SELECT t2.album_id FROM track t2\n                                      WHERE t2.track_id = ifs.first_track_id\n                                     ) \n\n                  EXCEPT \n\n                  SELECT il2.track_id FROM invoice_line il2\n                  WHERE il2.invoice_id = ifs.invoice_id\n                 ) IS NULL\n             AND\n                 (\n                  SELECT il2.track_id FROM invoice_line il2\n                  WHERE il2.invoice_id = ifs.invoice_id\n\n                  EXCEPT \n\n                  SELECT t.track_id FROM track t\n                  WHERE t.album_id = (\n                                      SELECT t2.album_id FROM track t2\n                                      WHERE t2.track_id = ifs.first_track_id\n                                     ) \n                 ) IS NULL\n             THEN \"yes\"\n             ELSE \"no\"\n         END AS \"album_purchase\"\n     FROM invoice_first_track ifs\n    )\nGROUP BY album_purchase;\n'''\n\n\nrun_query(q)","ecb2a274":"![image.png](attachment:aa957edf-f462-4993-83d0-2c9befe2b6eb.png)","6f8ce6ce":"# Analyzing Sales by Country\n\n\nOur next task is to analyze the sales data for customers from each different country. We have been given guidance to use the country value from the `customers` table, and ignore the country from the billing address in the `invoice` table.\n\nIn particular, we have been directed to calculate data, for **each country**, on the:\n\n* total number of customers\n* total value of sales\n* average value of sales per customer\n* average order value\n\n\nBecause there are a number of countries with only one customer, we should group these customers as **Other** in our analysis.","23350a51":"We have been asked to find out what percentage of purchases are individual tracks vs whole albums, so that management can use this data to understand the effect this decision might have on overall revenue.","c6ce0221":"The store does not let customers purchase a whole album, and then add individual tracks to that same purchase (unless they do that by choosing each track manually). When customers purchase albums they are charged the same price as if they had purchased each of those tracks separately.","115b97a3":"### Selecting New Albums to Purchase\n\nThe Chinook record store has just signed a deal with a new record label, and we've been tasked with selecting the first three albums that will be added to the store, from a list of four. All four albums are by artists that don't have any tracks in the store right now - we have the **artist names**, and **the genre of music** they produce:\n\n![image.png](attachment:image.png)\n\nThe record label specializes in artists from the USA, and they have given Chinook some money to advertise the new albums in the USA, so we're interested in finding out which genres sell the best in the USA.","34358cea":"Management are currently considering changing their purchasing strategy to save money. The strategy they are considering is to purchase only the most popular tracks from each album from record companies, instead of purchasing every track from an album.","dc7170a0":"While there is a **20%** difference in sales between **Jane** (the top employee) and **Steve** (the bottom employee), the difference roughly corresponds with the differences in their **hiring dates**.","76de8ffb":"The Chinook store is setup in a way that allows customer to make purchases in one of the two ways:\n\n1. purchase a whole album\n2. purchase a collection of one or more individual tracks.","109e626b":"# Albums vs Individual Tracks","faac261f":"\nIt is very common when we are performing an analysis to have 'edge cases' which prevent us from getting a 100% accurate answer to our question. In this instance, we have two edge cases to consider:\n\n* Albums that have only one or two tracks are likely to be purchased by customers as part of a collection of individual tracks.\n* Customers may decide to manually select every track from an album, and then add a few individual tracks from other albums to their purchase.","d3e47f2d":"# Analyzing Employee Sales Performance\n\n\nEach customer for the Chinook store gets assigned to a **sales support agent** within the company when they first make a purchase. We have been asked to analyze the purchases of customers belonging to each employee to see if any **sales support agent** is performing either better or worse than the others.\n\nWe might like to consider whether any extra columns from the employee table explain any variance we see, or whether the variance might instead be indicative of employee performance.","ce23e31a":"Based on the sales of tracks across different genres in the USA, we should purchase the new albums by the following artists:\n\n* Red Tone (Punk)\n* Slim Jim Bites (Blues)\n* Meteor and the Girls (Pop)\n\nIt's worth keeping in mind that combined, these three genres only make up only 17% of total sales, so we should be on the lookout for artists and albums from the 'rock' genre, which accounts for 53% of sales.","609b86cf":"Based on the data, there may be opportunity in the following countries:\n\n* Czech Republic\n* United Kingdom\n* India\n\nIt's worth keeping in mind that because the amount of data from each of these countries is relatively low. Because of this, we should be cautious spending too much money on new marketing campaigns, as the sample size is not large enough to give us high confidence. A better approach would be to run small campaigns in these countries, collecting and analyzing the new customers to make sure that these trends hold with new customers.","d25b4a7e":"If we'd like more practice, we can look at the schema and come up with some more business questions, and then write queries to answer them. Here are a few to get started:\n\n* Which artist is used in the most playlists?\n* How many tracks have been purchased vs not purchased?\n* Is the range of tracks in the store reflective of their sales popularity?\n* Do protected vs. non-protected media types have an effect on popularity?"}}