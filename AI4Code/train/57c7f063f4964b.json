{"cell_type":{"6feacf65":"code","e50b7728":"code","81343665":"code","e89f9310":"code","d848c14c":"code","eae5ab05":"code","090f29d9":"code","2179c81a":"code","f4920257":"code","477ae8d4":"code","921a16dd":"code","5b9d7c6b":"code","333f2206":"code","1dab70b4":"code","b483a961":"code","78b6dc39":"markdown"},"source":{"6feacf65":"\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        ","e50b7728":"import pandas as pd \nimport matplotlib.pyplot as plt\nimport numpy as np \n\nimport pickle\nimport time\n\nfrom sklearn.multiclass import OneVsRestClassifier\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.preprocessing import StandardScaler, LabelEncoder\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.model_selection import KFold\nfrom sklearn.metrics import log_loss, accuracy_score\n","81343665":"test_features = pd.read_csv('\/kaggle\/input\/lish-moa\/test_features.csv')\ntrain_features = pd.read_csv('\/kaggle\/input\/lish-moa\/train_features.csv')\ntt_nonscored = pd.read_csv('\/kaggle\/input\/lish-moa\/train_targets_nonscored.csv')\ntt_scored = pd.read_csv('\/kaggle\/input\/lish-moa\/train_targets_scored.csv')\nss = pd.read_csv('\/kaggle\/input\/lish-moa\/sample_submission.csv')","e89f9310":"g_cols = [col for col in train_features if 'g-' in col]\nc_cols = [col for col in train_features if 'c-' in col]\n\ntr_gene_df = train_features.loc[:, 'g-0':'g-771']\ntr_cell_df = train_features.loc[:, 'c-0':]\n\ntr_cols = train_features.loc[:, 'cp_type':]\ntr_cols.shape, tt_scored.shape\n\ntest_cols = test_features.loc[:, 'cp_type':]\ntr_cols.shape, tt_scored.shape, test_cols.shape","d848c14c":"full_dfs = [train_features, test_features, tt_scored]\ndef col_drop(df):\n    df = df.drop(columns=['sig_id'], axis=1, inplace=True)\n    return df\n    \n    \nfor df in full_dfs:\n    col_drop(df)\n\n    \ndfs = [tr_cols, test_cols]\n\n\ndef cleaner(df):\n    df['cp_type'] = df['cp_type'].map({'ctl_vehicle': 0, 'trt_cp': 1})\n    df['cp_time'] = df['cp_time'].map({24: 1, 48: 2, 72: 3})\n    df['cp_dose'] = df['cp_dose'].map({'D1': 0 , 'D2': 1})\n    return df\n\n\nfor df in dfs:\n    cleaner(df)","eae5ab05":"tr_cols","090f29d9":"#keep_idx_test = test_features[test_features.cp_type != 0].index\n#keep_idx_train = train_features[train_features.cp_type != 0].index\n\n#test_cols = test_cols.loc[keep_idx_test]\n#tr_cols = tr_cols.loc[keep_idx_train]\n#tt_scored = tt_scored.loc[keep_idx_train]","2179c81a":"col_list = ['g-496', 'g-333', 'g-676', 'g-127', 'g-39', 'g-360', 'g-28', 'g-19', 'g-184', 'g-110', 'g-687', 'g-216',\n            'g-15', 'g-626', 'g-393', 'g-667', 'g-164', 'g-688', 'g-754', 'g-557', 'g-363', 'g-132', 'g-435', 'g-536',\n            'g-550', 'g-481','g-611', 'g-18', 'g-756', 'g-331', 'g-618', 'g-718', 'g-370', 'g-219','g-153','g-46','g-238',\n            'g-23','g-707','g-213','g-307','g-104']\ndfs = [tr_cols,test_cols]\n \ndef outlier_drop(df, col):\n    df = df.drop([col], axis=1, inplace=True)\n    return df\nfor col in col_list:\n    for df in dfs:\n        outlier_drop(df, col)","f4920257":"tr_cols.shape, test_cols.shape","477ae8d4":"X, y, test = np.array(tr_cols), np.array(tt_scored), np.array(test_cols)","921a16dd":"model = pickle.load(open('..\/input\/moa-train-model\/OvR', 'rb'))","5b9d7c6b":"model","333f2206":"kf = KFold(n_splits=10, shuffle=True, random_state=22)","1dab70b4":"\nfor k_f, (tr_idx, t_idx) in enumerate(kf.split(X, y)):\n    fold_start = time.time()\n    \n    X_train, X_val = X[tr_idx], X[t_idx]\n    y_train, y_val = y[tr_idx], y[t_idx]\n    \n    val_preds = model.predict_proba(X_val)\n    val_preds = np.array(val_preds)\n    \n    loss = log_loss(np.ravel(y_val), np.ravel(val_preds))\n    \n    preds = model.predict_proba(test)\n    \n    fold_end = time.time()\n    print('Fold ', k_f, ',', ' log loss: ', loss)\n    print('fold time: ', fold_end - fold_start)","b483a961":"ss.iloc[:,1:] = preds\nss.to_csv('submission.csv', index=False)","78b6dc39":"**Drug Discovery -- Mechanism of Action**\n\n**Gene Expression**\n\nGene expression is the process by which information from a gene is used to synthesize a functional gene product, i.e. a protein. These proteins ultimately create a person's phenotype, which is the observable traits that are expressed through someone's genotype. With the correct molecular formulation, genetic transcription pathways can be inhibited or catalyzed by a given medication, and by manipulating these pathways humans are able to alter the chemistry within our bodies and fight cancer or treat hypertension for example.\n\nRecording and cataloging gene expression data is especially important for pharmaceutical development since the goal of any medication is to modulate a transcriptional pathway, and through repetition or trials, trends may be observed to determine its safety or lack thereof within an in vitro and then in-human setting.\n\n**Cell Viability**\n\nCell viability is a measurement of the total live, healthy cells within a given sample. Assays are used to quantify factors such as metabolic activity, presence of ATP and cell proliferation, and also the toxicity or markers signifying the death of a cell. When introducing investigational compounds within an in-vitro environment, possessing the ability to quantify the enhancement or inhibition of certain cellular processes becomes extremely important because these metrics are used to scale the effectiveness and\/or harmfulness of the compound within the human body. Understanding how well a compound is absorbed may be of particular concern to clinical researchers, because a negative downstream effect could be blood toxicity due to compounds that cannot be metabolized, or a positive downstream effect from proper absorption could be the proliferation of healthy cells vs. harmful cells.\n\nFor example, a PD-L1 checkpoint inhibitor is a class of drugs meant to interupt the binding of PD-L1 to a PD-1 receptor. Cancer cells express the PD-L1 protein and they use it to bind to an immune cell's PD-1 receptor, thus helping the cancer cells avoid being detected as a foreign\/threatening object. So PD-L1 receptors act as an inhibiting force, preventing the binding of the molecules and leaving the cancer cells open to immune system eradication.\n"}}