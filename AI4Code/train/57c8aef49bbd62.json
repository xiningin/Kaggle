{"cell_type":{"d1794be8":"code","0360d4e9":"code","f8c0c228":"code","6702fdc7":"code","92830d8f":"code","2198acd6":"code","e75c92d2":"code","07d46d0d":"code","6998f5f2":"code","01c23e7e":"code","8904a32c":"code","ff1de5d1":"code","cb3b0717":"code","98b29464":"code","e7ee2bea":"code","9d39c433":"code","2d34193d":"code","5d55dd65":"code","0533acef":"code","4cf180e6":"code","99eccbab":"markdown","53a1609c":"markdown","e72e7616":"markdown","bd4c44f3":"markdown","39f9c6ad":"markdown","77faa93b":"markdown","bf386afa":"markdown"},"source":{"d1794be8":"import os\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as p\nimport PIL as pil\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.utils import to_categorical,normalize\nfrom sklearn.model_selection import train_test_split\nfrom tqdm import tqdm\nfrom keras import regularizers\nimport seaborn as sns\n%matplotlib inline\nimport seaborn as sns\nfrom tensorflow.keras.layers import Flatten,Dense,Dropout,BatchNormalization,Conv2D,MaxPooling2D\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.metrics import Recall\nfrom tensorflow.keras.optimizers import RMSprop\nfrom tensorflow.keras.callbacks import EarlyStopping,ReduceLROnPlateau\nfrom sklearn.metrics import classification_report,confusion_matrix\n\n","0360d4e9":"base='\/kaggle\/input\/skin-cancer-mnist-ham10000'","f8c0c228":"metadata=pd.read_csv(os.path.join(base,'HAM10000_metadata.csv'))\nmetadata.info()","6702fdc7":"#To analyse basics of Dataset we study first 5 rows of HAAM10000 Dataset\nmetadata.head()","92830d8f":"#Checking for NA\nmetadata.isna().isna().sum()","2198acd6":"metadata.describe(include='all')","e75c92d2":"\n# We need to predict the cancer type, let's check the distribution of the values\ng = sns.catplot(x=\"dx\", kind=\"count\", palette='bright', data=metadata)\ng.fig.set_size_inches(16, 8)\n\ng.ax.set_title('Visualization of Output Classes', fontsize=20)\ng.set_xlabels('Classes of Skin Cancer', fontsize=14)\ng.set_ylabels('Frequency', fontsize=14)","07d46d0d":"df=pd.read_csv(os.path.join(base,'hmnist_28_28_RGB.csv'))\nx=df.drop('label',axis=1)\ny=df['label']\nx=x.to_numpy()\nx=x\/255\ny=to_categorical(y)","6998f5f2":"df","01c23e7e":"#Since there are 7 classes only, we can label them manually \nlabel={\n    ' Actinic keratoses':0,\n    'Basal cell carcinoma':1,\n    'Benign keratosis-like lesions':2,\n    'Dermatofibroma':3,\n    'Melanocytic nevi':4,\n    'Melanoma':5,\n    'Vascular lesions':6\n}","8904a32c":"x=x.reshape(-1,28,28,3)\np.figure(figsize=(50,30))\nfor i in range(30):\n    p.subplot(6,5,i+1)\n    img=x[i]\n    p.imshow(img)","ff1de5d1":"trainx,trainy,testx,testy = train_test_split(x,y,test_size=0.02,random_state=42)","cb3b0717":"data_generator=ImageDataGenerator(rotation_range=20, # rotate the image 20 degrees\n                               width_shift_range=0.10, # Shift the pic width by a max of 5%\n                               height_shift_range=0.10, # Shift the pic height by a max of 5%\n                               rescale=1\/255, # Rescale the image by normalzing it.\n                               shear_range=0.1, # Shear means cutting away part of the image (max 10%)\n                               zoom_range=0.1, # Zoom in by 10% max\n                               horizontal_flip=True,\n                               vertical_flip=True,\n                               fill_mode='nearest')","98b29464":"data_generator.fit(trainx)","e7ee2bea":"#input_shape=(28,28,3)\n\nmodel=Sequential()\n\n\nmodel.add(Conv2D(64,(2,2),input_shape=(28,28,3),activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(BatchNormalization())\n\n\nmodel.add(Conv2D(512,(2,2),input_shape=(28,28,3),activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\n\n\n\nmodel.add(Dropout(0.3))\n\nmodel.add(Conv2D(1024,(2,2),input_shape=(28,28,3),activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(BatchNormalization())\n\n\nmodel.add(Dropout(0.4))\n\nmodel.add(Conv2D(1024,(1,1),input_shape=(28,28,3),activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(1, 1)))\n\n\n\nmodel.add(Dropout(0.4))\n\nmodel.add(Flatten())\n\nmodel.add(Dense(256,activation='relu',kernel_regularizer=regularizers.l2(0.01)))\nmodel.add(Dropout(0.5))\n\n\nmodel.add(Dense(7,activation='softmax'))\n\nmodel.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy',Recall()])","9d39c433":"#Reviewing our CNN model\nmodel.summary()","2d34193d":"early=EarlyStopping(monitor='accuarcy',patience=4,mode='auto')","5d55dd65":"#Training our CNN\nmodel.fit(trainx,testx,epochs=50,batch_size=90,validation_data=(trainy, testy),callbacks=[early])","0533acef":"#Visualizing Training and Validation Accuracy\np.figure(figsize=(15,5))\nloss=pd.DataFrame(model.history.history)\nloss=loss[['accuracy','val_accuracy']]\nloss.plot()","4cf180e6":"#Building a report \npredictions=model.predict_classes(trainy)\n\ncheck=[]\nfor i in range(len(testy)):\n    for j in range(7):\n        if(testy[i][j]==1):\n            check.append(j)\ncheck=np.asarray(check)\n\nprint(classification_report(check,predictions))","99eccbab":"# Spliting of Dataset ","53a1609c":"# Image Augmentation to expand Train data ","e72e7616":"# CNN Model","bd4c44f3":"# **Accessing Dataset**","39f9c6ad":"# **Images**","77faa93b":"# Getting trainable from CSV file","bf386afa":"# **Data Visualization**"}}