{"cell_type":{"8e492089":"code","578860ae":"code","ca6cefab":"code","5124fabd":"code","6af6437c":"code","f0ccbd21":"code","47335281":"code","7b6d32d1":"code","8b1bbb07":"code","564b99bc":"code","47e52c35":"code","54d82751":"code","5da680d7":"code","af9fae9b":"code","2a50d50c":"code","4fb24914":"markdown","16b0a27b":"markdown","16beb655":"markdown","36886ed8":"markdown","b4dbad55":"markdown","1309c69b":"markdown","474f56bc":"markdown"},"source":{"8e492089":"import pandas as pd, numpy as np\nimport joblib","578860ae":"# Load the test data set\npd.set_option('max_columns', None)\ntest = pd.read_csv('..\/input\/forest-cover-type-prediction\/test.csv')\n# Print the shape of the test set \nprint(test.shape)","ca6cefab":"# view \ntest.head()","5124fabd":"# remove ID column from set\ntest = test.iloc[:, 1:]\ntest.head()","6af6437c":"# add new features from feature engineering\ntest['Elev_to_Horizontal_Hyd'] = test.Elevation - 0.2 * test.Horizontal_Distance_To_Hydrology \ntest['Elev_to_Horizontal_Road'] = test.Elevation - 0.05 * test.Horizontal_Distance_To_Roadways  \ntest['Elev_to_Verticle_Hyd'] = test.Elevation - test.Vertical_Distance_To_Hydrology \ntest['Mean_Horizontal_Dist'] = (test.Horizontal_Distance_To_Fire_Points + test.Horizontal_Distance_To_Hydrology + \n                                 test.Horizontal_Distance_To_Roadways)\/3 \ntest['Mean_Fire_Hydro'] = (test.Horizontal_Distance_To_Fire_Points + test.Horizontal_Distance_To_Hydrology)\/2","f0ccbd21":"# check for missing values\ntest.isnull().values.any()","47335281":"# dimensions of data set \nprint(test.shape) # 59 columns\n# column names\nprint(test.columns)","7b6d32d1":"# create cat and num\nX_cat = test.iloc[:, 10:54].values\nB = test.iloc[:, 54:59]\nA = test.iloc[:, 0:10]\nX_num = pd.concat([A, B], axis = 1).values","8b1bbb07":"# load scaler\nscaler = joblib.load('..\/input\/forest-cover-models\/forest_cover_scaler2.joblib')\n# apply scaler to test data\nX_num = scaler.transform(X_num)","564b99bc":"# combine num and cat\nX = np.hstack((X_num, X_cat))\nprint(X.shape)","47e52c35":"# load model\nmodel = joblib.load('..\/input\/g2-forestcovertype-finalmodels\/tree_model_final.joblib')","54d82751":"# make predictions using model\ny_pred = model.predict(X)","5da680d7":"# write to submission\nsubmission = pd.read_csv('..\/input\/forest-cover-type-prediction\/sampleSubmission.csv')\n# view first few rows\nsubmission.head()","af9fae9b":"# add predictions to file\nsubmission['Cover_Type'] = y_pred\n# view first few rows\nsubmission.head()","2a50d50c":"# export to csv file\nsubmission.to_csv('submission.csv', index = False, header = True)","4fb24914":"# Submission","16b0a27b":"# Preprocessing","16beb655":"# Check for Missing Values","36886ed8":"# Forest Cover Type","b4dbad55":"# Load Data","1309c69b":"# Import Statements","474f56bc":"# Model Predictions"}}