{"cell_type":{"066f91af":"code","b9fc5c31":"code","64449041":"code","6bcc46ad":"code","40b444d2":"code","bcc95629":"code","452a76d5":"code","219409a4":"code","27839b8b":"code","b61dfc72":"code","6b1bd4e0":"code","8488202d":"code","3552dc1d":"code","d4f96e52":"code","0e3932e9":"code","8b0034c0":"code","00cff7ea":"code","1f853af9":"code","8d945b9a":"code","1f98a265":"code","d0090528":"code","528db1e8":"code","c0aad12f":"code","8b92d21b":"code","a8591b50":"code","713cdcaf":"code","b6e7c97a":"code","74699c38":"code","c6a44b7b":"code","5678edbd":"code","61b8465d":"markdown","56e5df62":"markdown"},"source":{"066f91af":"import pandas as pd\nwater=pd.read_csv('..\/input\/water-potability\/water_potability.csv')\nwater.head()","b9fc5c31":"water.info()","64449041":"water.describe()","6bcc46ad":"Potability_0=water[water.Potability==0]\nPotability_0.head()","40b444d2":"round(Potability_0.isnull().sum()*100\/len(Potability_0),2).sort_values(ascending=False)","bcc95629":"Potability_0.describe()","452a76d5":"Potability_0.fillna(Potability_0.median(), inplace=True)\nPotability_0.describe()","219409a4":"Potability_1=water[water.Potability==1]\nPotability_1.head()","27839b8b":"round(Potability_1.isnull().sum()*100\/len(Potability_1),2).sort_values(ascending=False)","b61dfc72":"Potability_1.fillna(Potability_1.median(), inplace=True)\nPotability_1.describe()","6b1bd4e0":"import numpy as np\nwater=pd.concat([Potability_1, Potability_0], axis=0)\nwater = water.iloc[np.random.permutation(len(water))]\nwater=water.reset_index(drop=True)\nwater.head()","8488202d":"water.nunique()","3552dc1d":"round(water.Potability.value_counts()*100\/len(water),2)","d4f96e52":"data = water.sample(frac=0.8, random_state=42)\ndata_unseen = water.drop(data.index)\ndata.reset_index(inplace=True, drop=True)\ndata_unseen.reset_index(inplace=True, drop=True)\nprint('Data for Modeling: ' + str(data.shape))","0e3932e9":"print('Unseen Data For Predictions: ' + str(data_unseen.shape))","8b0034c0":"round(data.Potability.value_counts()*100\/len(data),2)","00cff7ea":"!pip install pycaret","1f853af9":"from pycaret.classification import *","8d945b9a":"water_test= setup(data = data, target = 'Potability', session_id=42,\n                  normalize = True, \n                  transformation = True, \n                  log_experiment = True,\n                  handle_unknown_categorical = True, \n                  unknown_categorical_method = 'most_frequent',\n                  remove_multicollinearity = True, #rop one of the two features that are highly correlated with each other\n                  ignore_low_variance = True,#all categorical features with statistically insignificant variances are removed from the dataset.\n                  combine_rare_levels = True,\n                  fix_imbalance = True\n                 )","1f98a265":"gbc = create_model('gbc')","d0090528":"print(gbc)","528db1e8":"tuned_gbc = tune_model(gbc,optimize = 'Recall')","c0aad12f":"plot_model(tuned_gbc, plot = 'auc')","8b92d21b":"plot_model(tuned_gbc, plot = 'pr')","a8591b50":"plot_model(tuned_gbc, plot='feature')","713cdcaf":"plot_model(tuned_gbc, plot = 'confusion_matrix')","b6e7c97a":"evaluate_model(tuned_gbc)","74699c38":"predict_model(tuned_gbc)","c6a44b7b":"unseen_predictions = predict_model(tuned_gbc, data=data_unseen)\nunseen_predictions.head()","5678edbd":"print(\"Confidence Score :   {}\".format(round(unseen_predictions.Score.mean(),2)))#Confidence Score","61b8465d":"#### Treating Missing value for Potability_0 records","56e5df62":"#### Treating Missing value for Potability_1 records"}}