{"cell_type":{"195c9fca":"code","f272502b":"code","26d69e29":"code","66c0fb4e":"code","9869cf82":"code","409b45fa":"code","dcae2024":"code","befdc463":"code","97e0a30d":"code","acae9edb":"code","7295b9d1":"code","ba143569":"markdown","a77d3ba8":"markdown","0f39eda4":"markdown","c768c6a0":"markdown","7de5195b":"markdown","a473b283":"markdown","f9f3a0f8":"markdown","762adcd1":"markdown","aa0bd767":"markdown"},"source":{"195c9fca":"from datetime import datetime\n\nprint('Executed at:', datetime.utcnow().strftime('%Y\/%m\/%d %H:%M:%S (UTC)'))","f272502b":"from kaggle_secrets import UserSecretsClient\nimport requests\n\n# get the zipped public LB data\nPLB_DATA_URL = 'https:\/\/www.kaggle.com\/c\/18599\/publicleaderboarddata.zip'\n# resp = session.get(PLB_DATA_URL)","26d69e29":"from zipfile import ZipFile\n# from io import BytesIO\nimport pandas as pd\n\n# convert the data to a dataframe<div class=\"ListItemHeader_NameText-sc-1pyomlz cEwhBG\">m5-forecasting-accuracy-publicleaderboard.xls<\/div>\n# z = ZipFile(BytesIO(resp.content))\ndf = pd.read_csv(\"..\/input\/lbdata\/m5-forecasting-accuracy-publicleaderboard.xls\")\ndf = df.assign(SubmissionDate=pd.to_datetime(df['SubmissionDate']))\ndf = df.sort_values('Score', ascending=False)\ndf.head(10)","66c0fb4e":"df.shape","9869cf82":"df.info()","409b45fa":"# get the best score of each team\nbest_scores = (\n    df.groupby('TeamId')\n    .agg({'TeamName': 'last', 'Score': 'min'})\n    .reset_index()\n    .sort_values('Score', ascending=False)\n    .reset_index(drop=True)\n    .assign(rank=lambda df: -df.index +3771)\n)","dcae2024":"best_scores.shape","befdc463":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n\nthresh = 0.53\n\nfig, ax = plt.subplots(1, 1, figsize=(16, 8))\nsns.distplot(best_scores[best_scores['Score'] < thresh]['Score'], ax=ax)\nax.set_title(f'Score (< {thresh}) distribution of the public LB', fontsize=20)\nax.set_xlabel('Score', fontsize=20)\nax.tick_params(axis='both', which='major', labelsize=15)","97e0a30d":"top = best_scores.tail(20)  # more than gold\ntop","acae9edb":"top_sbms = (\n    pd.merge(top[['TeamId', 'rank']], df, on='TeamId', how='inner')\n    .sort_values(['rank', 'SubmissionDate'])\n)\ntop_sbms[top_sbms['TeamName']=='BUAA_Stat']","7295b9d1":"import matplotlib.pyplot as plt\nfrom IPython.core.pylabtools import figsize \nfigsize(18, 8)\nplt.rcParams['font.sans-serif'] = ['Microsoft YaHei']\n\nvalve = 0.48\n\nfor team_id, team in top_sbms.groupby('TeamId', sort=False):\n    x=team[team[\"Score\"]<valve]['SubmissionDate']\n    y=team[team[\"Score\"]<valve]['Score']\n    plt.plot(x, y,label=str(team['TeamName'].iloc[0]))\n    \n\nplt.legend() \nplt.show()","ba143569":"# If you like it, please upvote it\n\n\nReiterate no cheat! the method from below url","a77d3ba8":"# Convert to dataframe","0f39eda4":"# Plot submission histories","c768c6a0":"## score < 0.48!****","7de5195b":"# Top rankers","a473b283":"# Get the best score of each team","f9f3a0f8":"### **Thanks https:\/\/www.kaggle.com\/harupy\/score-distribution-of-the-public-lb in DBS, that's fun\uff01**","762adcd1":"**Public data!!!!!!!!!!!!!!!!!!!!**\n\n**no cheat**","aa0bd767":"# Download the public LB data"}}