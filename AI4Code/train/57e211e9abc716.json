{"cell_type":{"4d62a1e6":"code","f03ff11f":"code","3ee32c44":"code","1df0ce62":"code","091bb435":"code","f753640d":"code","beabe9b3":"code","c342e7fa":"code","2879d442":"code","12040409":"code","bb1e605d":"code","9ba5e470":"code","c1dac4cd":"code","335e068d":"code","606e7b25":"code","7cef2bd3":"code","be6bff95":"code","79985d89":"code","1a334f82":"code","ea4418fe":"code","f2dbca3b":"code","30b5950b":"markdown"},"source":{"4d62a1e6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","f03ff11f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","3ee32c44":"df=pd.read_csv('..\/input\/googleplaystore.csv')","1df0ce62":"df.head()","091bb435":"df.shape","f753640d":"df.drop_duplicates(subset='App',inplace=True)","beabe9b3":"df.isnull().sum()","c342e7fa":"df = df[df['Android Ver'] != np.nan]\ndf = df[df['Android Ver'] != 'NaN']","2879d442":"df.isnull().sum()","12040409":"df = df[df['Installs'] != 'Free']\ndf = df[df['Installs'] != 'Paid']","bb1e605d":"df['Installs']=df['Installs'].apply(lambda x:x.replace('+','') if '+' in str(x) else x)\ndf['Installs']=df['Installs'].apply(lambda x:x.replace(',','') if ',' in str(x) else x)\ndf['Installs']=df['Installs'].apply(lambda x:int(x))\n","9ba5e470":"df.head()","c1dac4cd":"df['Size'] = df['Size'].apply(lambda x: str(x).replace('Varies with device', 'NaN') if 'Varies with device' in str(x) else x)\n\ndf['Size'] = df['Size'].apply(lambda x: str(x).replace('M', '') if 'M' in str(x) else x)\ndf['Size'] = df['Size'].apply(lambda x: str(x).replace(',', '') if 'M' in str(x) else x)\ndf['Size'] = df['Size'].apply(lambda x: float(str(x).replace('k', '')) \/ 1000 if 'k' in str(x) else x)\n\n\ndf['Size'] = df['Size'].apply(lambda x: float(x))\ndf['Installs'] = df['Installs'].apply(lambda x: float(x))\n\ndf['Price'] = df['Price'].apply(lambda x: str(x).replace('$', '') if '$' in str(x) else str(x))\ndf['Price'] = df['Price'].apply(lambda x: float(x))\n\ndf['Reviews'] = df['Reviews'].apply(lambda x: int(x))","335e068d":"df.head()","606e7b25":"df.isnull().sum()","7cef2bd3":"total_values=df['Category'].value_counts().sort_values(ascending=True)","be6bff95":"import plotly.graph_objs as go\nimport plotly\nplotly.offline.init_notebook_mode(connected=True)","79985d89":"data=[go.Pie(labels=total_values.index,values=total_values.values,hoverinfo='label+value')]","1a334f82":"data","ea4418fe":"plotly.offline.iplot(data, filename='pie_graph')\n","f2dbca3b":"df['Rating'].hist()\nprint(np.mean(df['Rating']))","30b5950b":"The pie graph shows that the apps of **Family** and **Game** category have high market share."}}