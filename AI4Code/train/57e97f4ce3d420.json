{"cell_type":{"6058d3ed":"code","c67131f4":"code","9f37d893":"code","96216f7e":"code","8bb5f8fe":"code","5617385f":"code","3943257a":"code","0ac9e422":"code","1242f8fc":"code","ba876fac":"code","244e5a04":"code","b5f59bc4":"code","5e2adf24":"code","9c13d41a":"code","27835c44":"code","96a006e6":"code","72466635":"code","5d68420b":"code","ec7f0728":"code","f1a44338":"code","ad8c4a61":"code","74cc45f2":"code","4e2aa422":"code","1f4bf685":"code","0bd898bf":"code","8a1c7889":"code","75d69d3a":"code","51d6d0ba":"code","3639140d":"code","2f36f8ed":"code","cc989c35":"code","7e886be6":"code","ee8bc4f4":"code","ea4b1739":"code","1df05c87":"code","32219658":"code","edad12a7":"code","7525bb25":"code","4dc4bd22":"code","f3f0675f":"code","25245d83":"code","d76f8190":"code","d21f096d":"code","4c8816f7":"code","d6cb41eb":"code","bfb73a37":"code","18716d99":"code","af065c93":"code","fce3bbe5":"code","60c747f9":"code","401e8757":"code","b39d9cc4":"markdown","92207e3a":"markdown","9165ac7b":"markdown","11e61ab0":"markdown","aca5c5a5":"markdown","238fa8d1":"markdown","3e4d84f8":"markdown","8dedca49":"markdown","0b935646":"markdown","845d7302":"markdown","1327b306":"markdown","38db474c":"markdown"},"source":{"6058d3ed":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns","c67131f4":"df = pd.read_csv('..\/input\/adult-income-dataset\/adult.csv')","9f37d893":"df.head()","96216f7e":"df.info()","8bb5f8fe":"df.describe()","5617385f":"df.isnull().sum().sum()","3943257a":"df['income'].value_counts()","0ac9e422":"df['income'] = df['income']==('<=50K')\ndf['income'] = df['income'].astype(int)","1242f8fc":"df['income']","ba876fac":"df['income'].value_counts()","244e5a04":"df_cat = df.select_dtypes(include='object')\ndf_nums = df.select_dtypes(exclude='object')","b5f59bc4":"df_nums","5e2adf24":"df_nums.columns\n","9c13d41a":"for i in ['age', 'fnlwgt', 'educational-num', 'capital-gain', 'capital-loss','hours-per-week']:\n    sns.displot(df[i],kde=True,bins=30)\n    plt.show()","27835c44":"sns.pairplot(df_nums,x_vars=['age','hours-per-week'],y_vars=['age', 'hours-per-week'],hue='income')","96a006e6":"df_nums.columns","72466635":"for i in ['age', 'fnlwgt', 'educational-num', 'capital-gain', 'capital-loss','hours-per-week']:\n    df_nums[i] = (df_nums[i]-np.mean(df_nums[i]))\/(np.std(df_nums[i]))","5d68420b":"df_nums","ec7f0728":"df_cat.columns","f1a44338":"for i in ['workclass', 'education', 'marital-status', 'occupation','relationship', 'race', 'gender', 'native-country']:\n    sns.countplot(x=i,data=df_cat)\n    plt.xticks(rotation=90)\n    plt.show()","ad8c4a61":"df_cat = df_cat.replace(to_replace =\"?\",value =\"Private\")","74cc45f2":"df_cat","4e2aa422":"sns.countplot(x='workclass',data=df_cat)\nplt.xticks(rotation=90)\nplt.show()","1f4bf685":"df_cat = pd.get_dummies(df_cat)","0bd898bf":"df_cat","8a1c7889":"df_cat.isnull().sum().sum()","75d69d3a":"df = pd.concat([df_nums,df_cat], axis=1)","51d6d0ba":"df.head()","3639140d":"from sklearn.model_selection import train_test_split","2f36f8ed":"x = df.drop('income',axis=1)","cc989c35":"y = df['income']","7e886be6":"x_train, x_test, y_train, y_test  = train_test_split(x,y,test_size=0.05,random_state=101)","ee8bc4f4":"from sklearn.neighbors import KNeighborsClassifier","ea4b1739":"knn = KNeighborsClassifier(n_neighbors=1)","1df05c87":"knn.fit(x_train,y_train)","32219658":"pred = knn.predict(x_test)","edad12a7":"from sklearn.metrics import accuracy_score,classification_report,plot_confusion_matrix,confusion_matrix,plot_precision_recall_curve,plot_roc_curve","7525bb25":"accuracy_score(y_test,pred)","4dc4bd22":"print(classification_report(y_test, pred))","f3f0675f":"confusion_matrix(y_test, pred)","25245d83":"plot_confusion_matrix(knn,x_test,y_test)","d76f8190":"error= []\n\nfor i in range(1,30):\n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(x_train,y_train)\n    pred = knn.predict(x_test)\n    error.append(1-(accuracy_score(y_test,pred)))","d21f096d":"\nplt.plot(range(1,30),error,'r-',marker='o')\nplt.xlabel('Values of K')\nplt.ylabel('Error')\nplt.title('Error vs K')","4c8816f7":"knn = KNeighborsClassifier(n_neighbors=15)","d6cb41eb":"knn.fit(x_train,y_train)","bfb73a37":"pred = knn.predict(x_test)","18716d99":"accuracy_score(y_test,pred)","af065c93":"plot_confusion_matrix(knn,x_test,y_test)","fce3bbe5":"plot_precision_recall_curve(knn,x_test,y_test)","60c747f9":"plot_roc_curve(knn,x_test,y_test)","401e8757":"print(classification_report(y_test, pred))","b39d9cc4":"# Plot distributions for num columns","92207e3a":"# Change income column into 0's and 1's","9165ac7b":"# KNN","11e61ab0":"# Check null values","aca5c5a5":"# Imports","238fa8d1":"# CATEGORICAL COLUMNS","3e4d84f8":"# Create dummy variables for different categories","8dedca49":"# Create 2 sep data frames one with numerical data, other with categorical data","0b935646":"# x = x - mean\/std\n# Using this result standardise the numerical data","845d7302":"# Now I'm choosing K=15 as my optimal K value","1327b306":"# Now concatenate both the data frames into final data frame","38db474c":"# Elbow method for finding optimal value of K\n Here what we do is take some k values, train the model using that k and find the error (1 - accuracy), then choose the value of K with least error\n \n \n This may take a while to run, go grab a cup of coffee"}}