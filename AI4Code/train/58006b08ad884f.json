{"cell_type":{"543502e5":"code","6bb356fb":"code","bd77d9de":"code","dfef326d":"code","ef8671b4":"code","00f0b803":"code","cf1e4545":"code","dac99771":"code","e2c6be27":"code","636e35ee":"code","08583914":"code","8c3fe3e0":"code","94affffe":"code","89f1d98b":"code","90b37589":"code","971dbf9d":"code","a1acce64":"code","71281180":"code","5069d29a":"code","9866fb59":"code","b94024d9":"code","ba53b593":"code","f3d75c04":"code","6d472531":"code","cc20e73f":"code","ece3d20b":"code","ffad93fe":"code","d7bc7d3d":"code","44c29026":"code","07264767":"code","4c0cdb30":"code","0db47179":"code","8bf713f3":"code","cc7dd6b3":"code","95c8f2dc":"code","38245085":"code","06f525da":"code","59c8d4d1":"code","00b66533":"code","33e864ff":"code","b1dafad6":"code","57b64ba4":"code","e97fe068":"code","0b52f68c":"code","8e042e61":"code","08185df5":"code","9bdf4a2e":"code","ffb5ecbb":"code","b6f88044":"code","5a789119":"code","8742d85c":"code","e2495f44":"code","5a3fb6a8":"code","cac9a549":"code","2d20ed72":"code","9d92107f":"code","f3599f20":"code","cdc63562":"code","e54cb22a":"code","f6611fec":"code","63054f73":"code","a9e2cfeb":"code","410552da":"code","c8ea59b1":"code","5ed26994":"code","d07566fc":"markdown","dd28017f":"markdown","13694214":"markdown","396949af":"markdown","ee71f6a2":"markdown","12019174":"markdown","4e1b1410":"markdown","c950418d":"markdown","96a45d77":"markdown","73e9b0aa":"markdown","75dd13a2":"markdown","653e51b4":"markdown","8275a049":"markdown","efcfe57d":"markdown","ec10d64e":"markdown","c6cc23b8":"markdown","ffac28c1":"markdown","3740e1b0":"markdown","c22fe68d":"markdown","3231bc60":"markdown","29ebbf6d":"markdown","0edd1061":"markdown","6f50bd05":"markdown","f73e3c15":"markdown","57e1c0b4":"markdown","27c5ff95":"markdown","1e10f980":"markdown","a5ffd0f6":"markdown","3fd47167":"markdown","0297421b":"markdown","2d9d985d":"markdown","7463b405":"markdown","276f4781":"markdown","2d14c6c3":"markdown","2d31eb61":"markdown","01b01f60":"markdown","bf98689f":"markdown","f0152bcc":"markdown","038713be":"markdown","6525817e":"markdown","cb7af883":"markdown","6791a195":"markdown","ca818d1d":"markdown","435bd416":"markdown","205882fc":"markdown","789aa9b5":"markdown","c7810603":"markdown","ff8c8dac":"markdown","47972135":"markdown","111d80a7":"markdown","a16f8b29":"markdown","7edc0600":"markdown","a81f46ba":"markdown","ce04ab4f":"markdown","d6d5d6b7":"markdown","1d24c75a":"markdown","583689e8":"markdown","1cd8a805":"markdown","358a4519":"markdown","f6ee6370":"markdown","c6417bd3":"markdown","7c7c5e34":"markdown","4ef63b6b":"markdown","78209c95":"markdown","9cea8125":"markdown","df02bc43":"markdown","2cf68a7d":"markdown","0a3da9e5":"markdown","84b025cc":"markdown","3d0d1159":"markdown","aeb79fdf":"markdown","ecc3651b":"markdown"},"source":{"543502e5":"# Install stargazer - a package to visualize regression results in academic paper format\n# This requires Kaggle's 'internet' option turned on under settings\n!pip install stargazer","6bb356fb":"import pandas as pd\nfrom pandas import Timestamp\n\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\n\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nfrom matplotlib.dates import MonthLocator\nimport matplotlib.ticker as ticker\nfrom matplotlib.ticker import MaxNLocator\nimport datetime\n\nfrom numpy.polynomial.polynomial import polyfit\nimport numpy as np\nfrom scipy import stats\n\nimport warnings\n\nfrom stargazer.stargazer import Stargazer\nfrom IPython.core.display import HTML","bd77d9de":"electricity = pd.read_csv(\"..\/input\/buildingdatagenomeproject2\/electricity_cleaned.csv\", index_col = \"timestamp\", parse_dates=True)\nmetadata = pd.read_csv(\"..\/input\/buildingdatagenomeproject2\/metadata.csv\")\nweather = pd.read_csv(\"..\/input\/buildingdatagenomeproject2\/weather.csv\", index_col = \"timestamp\", parse_dates=True)","dfef326d":"# Since all the coordinates are the same for each location, condense the dataset by taking the first row for each site.\nlocations = metadata.loc[:,['site_id', 'lat', 'lng']].groupby('site_id').first()","ef8671b4":"# Subset to Panther and Cockatoo only\npanther_cockatoo_locations = locations.loc[['Panther', 'Cockatoo'],:]\n\n# Plot map\npanther_cockatoo_map = go.Figure(go.Scattergeo(lat = panther_cockatoo_locations['lat'], lon = panther_cockatoo_locations['lng'],\n                                               text = 'Location: ' + panther_cockatoo_locations.index,\n                                               mode = 'markers',\n                                               marker = dict(size = 10, color = ['#2a77db', '#ca0020'])))\n\n\n# Update title and land colour\npanther_cockatoo_map.update_layout(title_text = 'Locations of Panther and Cockatoo', geo = dict(landcolor = \"rgb(218, 220, 224)\"))\n\n# Update projection type to give a more 'globe' look\npanther_cockatoo_map.update_geos(projection_type = \"natural earth\")\n\npanther_cockatoo_map.show()","00f0b803":"# Create a Gantt chart to visualize the schedule\npanther_schedule = pd.DataFrame([\n    dict(Term=\"Spring\", Start='2017-01-09', Finish='2017-05-02', Type = 'Single-session'),\n    dict(Term=\"Summer A\", Start='2017-05-15', Finish='2017-06-23', Type = 'Multi-session'),\n    dict(Term=\"Summer B\", Start='2017-06-26', Finish='2017-08-04', Type = 'Multi-session'),\n    dict(Term=\"Summer C\", Start='2017-05-15', Finish='2017-08-04', Type = 'Multi-session'),\n    dict(Term=\"Summer D\", Start='2017-05-15', Finish='2017-07-15', Type = 'Multi-session'),\n    dict(Term=\"Fall\", Start='2017-08-21', Finish='2017-12-09', Type = 'Single-session')\n])\n\nfig = px.timeline(panther_schedule, x_start=\"Start\", x_end=\"Finish\", y=\"Term\", color = 'Type', width=650, height=300, \n                  category_orders=dict(Term=[\"Spring\", \"Summer A\", \"Summer B\", \"Summer C\", \"Summer D\", \"Fall\"]), \n                  color_discrete_map = {'Single-session': '#7ea5d9', 'Multi-session': '#2a77db'}, template = 'plotly_white')\nfig.show()","cf1e4545":"# Get weather data for Panther in 2017\npanther_weather_2017 = weather[weather.site_id == \"Panther\"].truncate(before = \"2017-01-01\")\n\n# Convert hourly timestamps to monthly timestamps\npanther_weather_2017['month'] = panther_weather_2017.index.to_period('M').to_timestamp()\n# Convert hourly timestamps to daily timestamps\npanther_weather_2017['day'] = panther_weather_2017.index.to_period('D').to_timestamp()","dac99771":"# Get a list of strings from Jan to Dec for the x axis labels\nmonths_str = pd.date_range(start = \"2017-01-01\", end = \"2017-12-31\", freq = 'M').strftime(\"%b\")\n\nfig, ax = plt.subplots(figsize = (13, 8))\nsns.set_theme(style = \"whitegrid\")\n# Plot the monthly mean air temperature with 95% confidence interval\nsns.lineplot(data = panther_weather_2017, x = \"month\", y = \"airTemperature\", ax = ax, linewidth = 4).set(xlabel = 'Month', ylabel = \"Air Temperature (\u00b0C)\", xticklabels = months_str)\n# Plot the daily mean air temperature with 95% confidence interval\nsns.lineplot(data = panther_weather_2017, x = \"day\", y = \"airTemperature\", ax = ax, color = \"#92b2d4\", alpha = 0.3).set(title = \"Air Temperature in Panther (2017)\", xlabel = 'Month', ylabel = \"Air Temperature (\u00b0C)\", xticklabels = months_str)\n# Sets the frequency of the ticks to be one month\nax.xaxis.set_major_locator(MonthLocator())\n\nax.set_title(\"Air Temperature in Panther (2017)\", fontsize=13)\nax.xaxis.set_tick_params(labelsize=12)\nax.yaxis.set_tick_params(labelsize=12)\nax.xaxis.get_label().set_fontsize(12)\nax.yaxis.get_label().set_fontsize(12)\n\n# Add custom legend to the plot\nplt.legend([\"Monthly mean with 95% CI\", \"Daily mean with 95% CI\"], loc=0, fontsize = 11)","e2c6be27":"# Create a copy of the weather dataframe and convert the month to numbers\npanther_weather_2017_2 = panther_weather_2017.copy()\npanther_weather_2017_2['month'] = panther_weather_2017_2['month'].dt.month\n\n# Define a dictionary to match the month number to its string\nmonth_dict = {1: 'January',\n              2: 'February',\n              3: 'March',\n              4: 'April',\n              5: 'May',\n              6: 'June',\n              7: 'July',\n              8: 'August',\n              9: 'September',\n              10: 'October',\n              11: 'November',\n              12: 'December'}\n\n# Convert the numbers to string\npanther_weather_2017_2['month'] = panther_weather_2017_2['month'].map(month_dict)\n\n# The monthly mean for each month is calculated and will be used later for colors in the FacetGrid plot.\nmonth_mean_series = panther_weather_2017_2.groupby('month')['airTemperature'].mean()\npanther_weather_2017_2['mean_month'] = panther_weather_2017_2['month'].map(month_mean_series)","636e35ee":"sns.set_theme(style=\"white\", rc={\"axes.facecolor\": (0, 0, 0, 0)})\n# Generate a color palette with Seaborn.color_palette()\npal = sns.color_palette(palette='coolwarm', n_colors=12)\n\n# In the sns.FacetGrid class, the 'hue' argument is the one that is the one that will be represented by colors with 'palette'\ng = sns.FacetGrid(panther_weather_2017_2, row='month', hue = 'mean_month', aspect=13, height=0.75, palette=pal)\n\n# Add the densities kdeplots for each month\ng.map(sns.kdeplot, 'airTemperature',\n      bw_adjust=1, clip_on=False,\n      fill=True, alpha=1, linewidth=1.5)\n\n# Add a white line that represents the contour of each kdeplot\ng.map(sns.kdeplot, 'airTemperature', \n      bw_adjust=1, clip_on=False, \n      color=\"w\", lw=2)\n\n# Add a horizontal line for each plot\ng.map(plt.axhline, y=0,\n      lw=2, clip_on=False)\n\n# Loop over the FacetGrid figure axes (g.axes.flat) and add the month as text with the right color\nfor i, ax in enumerate(g.axes.flat):\n    ax.text(-15, 0.02, month_dict[i+1],\n            fontweight='bold', fontsize=14,\n            color=ax.lines[-1].get_color())\n    \n# Use matplotlib.Figure.subplots_adjust() function to get the subplots to overlap\ng.fig.subplots_adjust(hspace=-0.3)\n\n# Remove axes titles, yticks and spines\ng.set_titles(\"\")\ng.set_ylabels(\"\")\ng.set(yticks=[])\ng.despine(bottom=True, left=True)\n\n# Plot the figure\nplt.setp(ax.get_xticklabels(), fontsize=14)\nplt.xlabel('Air temperature (\u00b0C)', fontsize=14)\ng.fig.suptitle('Daily average temperature in Panther per month',\n               ha='center',\n               fontsize=15,\n               fontweight=15)\n\nplt.show()","08583914":"def temp_diff(x):\n  '''\n  Calculates the temperature difference from the base temperature\n  Parameter:\n    x (float): The hourly temperature\n  Returns:\n    diff (float): The temperature difference\n  '''\n  base_temp = 18.3\n\n  # Calculate either the HDH or CDH\n  if x > base_temp:\n    # Then calculate CDH\n    diff = x - base_temp\n  else: \n    # Then calculate HDH\n    diff = base_temp - x\n  return diff\n\ndef sum_hdh_cdh(hourly_temps):\n  '''\n  Calculates the sum of the HDHs and CDHs in a day\n  Parameter:\n    hourly_temps (array): Hourly temperatures in a day\n  Returns:\n    sum_deg_hours (float): Sum of HDHs and CDHs in a day\n  '''\n  sum_deg_hours = 0\n  # Finds the sum of the degree hours after calculating the temperature difference\n  for x in hourly_temps:\n    sum_deg_hours += temp_diff(x)\n  return sum_deg_hours","8c3fe3e0":"# Use the weather normalization functions on Panther's air Temperature\npanther_sum_hdh_cdh = panther_weather_2017.airTemperature.to_frame().resample('D').apply(sum_hdh_cdh)\n\n# Rename the column\npanther_sum_hdh_cdh = panther_sum_hdh_cdh.rename(columns = {\"airTemperature\":\"sum_hdh_cdh\"})","94affffe":"# Convert hourly timestamps to monthly timestamps\npanther_sum_hdh_cdh['month'] = panther_sum_hdh_cdh.index.to_period('M').to_timestamp()","89f1d98b":"fig, ax = plt.subplots(figsize=(13,8))\nsns.set_theme(style = \"whitegrid\")\n# Plot on a monthly basis with 95% confidence interval\nsns.lineplot(data = panther_sum_hdh_cdh, x = \"month\", y = \"sum_hdh_cdh\", ax = ax, linewidth = 3).set(xlabel = 'Month', ylabel = \"Sum of HDHs and CDHs\", xticklabels = months_str)\n# Plot on a daily basis\nsns.lineplot(data = panther_sum_hdh_cdh, x = \"timestamp\", y = \"sum_hdh_cdh\", ax = ax, color = '#92b2d4', alpha = 0.5).set(title = \"Panther's Sum of Heating and Cooling Hours (2017)\", xlabel = 'Month', ylabel = \"Sum of HDHs and CDHs\", xticklabels = months_str)\n# Sets the frequency of the ticks to be one month\nax.xaxis.set_major_locator(MonthLocator())\n\nax.set_title(\"Panther's Sum of Heating and Cooling Hours (2017)\", fontsize=13)\nax.xaxis.set_tick_params(labelsize=12)\nax.yaxis.set_tick_params(labelsize=12)\nax.xaxis.get_label().set_fontsize(12)\nax.yaxis.get_label().set_fontsize(12)\n\n# Add custom legend to the plot\nplt.legend([\"Monthly mean with 95% CI\", \"Daily mean\"], loc=0, fontsize = 11)","90b37589":"# Obtain daily data for Panther in 2017 \npanther_elec_d = electricity.loc[:,electricity.columns.str.contains(\"Panther\")].resample('D').mean().truncate(before = \"2017-01-01\")\n\n# Obtain data for only education buildings\npanther_edu_elec_d = panther_elec_d.loc[:, panther_elec_d.columns.str.contains(\"education\")]","971dbf9d":"# Normalize the electricity data\npanther_edu_elec_d_weather_norm = panther_edu_elec_d.apply(lambda x: x.div(panther_sum_hdh_cdh.sum_hdh_cdh), axis = 0)","a1acce64":"# Plot the original, unnormalized time series\npanther_edu_elec_avg = panther_edu_elec_d.apply(lambda x: x.mean(), axis = 1)\n\nfig, ax = plt.subplots(figsize=(13,8))\nsns.set_theme(style = \"whitegrid\")\nsns.lineplot(data = panther_edu_elec_avg).set(xlabel = 'Month', ylabel = \"Electricity (kWh)\", xticklabels = months_str) \n# Sets the frequency of the ticks to be one month\nax.xaxis.set_major_locator(MonthLocator())\n\nax.set_title(\"Panther Education Unnormalized Electricity Consumption (2017)\", fontsize=13)\nax.xaxis.set_tick_params(labelsize=12)\nax.yaxis.set_tick_params(labelsize=12)\nax.xaxis.get_label().set_fontsize(12)\nax.yaxis.get_label().set_fontsize(12)\n\n# Draw lines to delineate each term\nax.text(Timestamp('2017-02-23'), 195, \"Spring\", color = 'black', fontsize=12)\nplt.axvline(pd.to_datetime('2017-01-09'), color='black', linestyle='--', lw=1.5)\nplt.axvline(pd.to_datetime('2017-05-02'), color='black', linestyle='--', lw=1.5)\n\nax.text(Timestamp('2017-06-14'), 195, \"Summer\", color = 'black', fontsize=12)\nplt.axvline(pd.to_datetime('2017-05-15'), color='black', linestyle='--', lw=1.5)\nplt.axvline(pd.to_datetime('2017-08-04'), color='black', linestyle='--', lw=1.5)\n\nax.text(Timestamp('2017-10-10'), 195, \"Fall\", color = 'black', fontsize=12)\nplt.axvline(pd.to_datetime('2017-08-21'), color='black', linestyle='--', lw=1.5)\nplt.axvline(pd.to_datetime('2017-12-09'), color='black', linestyle='--', lw=1.5)","71281180":"# Plot the weather normalized time series\npanther_edu_elec_avg_weather_norm = panther_edu_elec_d_weather_norm.apply(lambda x: x.mean(), axis = 1)\n\nfig, ax = plt.subplots(figsize=(13,8))\nsns.set_theme(style = \"whitegrid\")\nsns.lineplot(data = panther_edu_elec_avg_weather_norm).set(xlabel = 'Month', ylabel = \"Electricity per degree hour (kWh\/degree hour)\", xticklabels = months_str) \n# Sets the frequency of the ticks to be one month\nax.xaxis.set_major_locator(MonthLocator()) \n\nax.set_title(\"Panther Education Weather-Normalized Electricity Consumption (2017)\", fontsize=13)\nax.xaxis.set_tick_params(labelsize=12)\nax.yaxis.set_tick_params(labelsize=12)\nax.xaxis.get_label().set_fontsize(12)\nax.yaxis.get_label().set_fontsize(12)\n\n# Draw lines to delineate each term\nax.text(Timestamp('2017-02-23'), 5.5, \"Spring\", color = 'black', fontsize=12)\nplt.axvline(pd.to_datetime('2017-01-09'), color='black', linestyle='--', lw=1.5)\nplt.axvline(pd.to_datetime('2017-05-02'), color='black', linestyle='--', lw=1.5)\n\nax.text(Timestamp('2017-06-13'), 5.5, \"Summer\", color = 'black', fontsize=12)\nplt.axvline(pd.to_datetime('2017-05-15'), color='black', linestyle='--', lw=1.5)\nplt.axvline(pd.to_datetime('2017-08-04'), color='black', linestyle='--', lw=1.5)\n\nax.text(Timestamp('2017-10-10'), 5.5, \"Fall\", color = 'black', fontsize=12)\nplt.axvline(pd.to_datetime('2017-08-21'), color='black', linestyle='--', lw=1.5)\nplt.axvline(pd.to_datetime('2017-12-09'), color='black', linestyle='--', lw=1.5)","5069d29a":"# Change Series to Dataframe and rename the column\npanther_edu_elec_avg_weather_norm_df = panther_edu_elec_avg_weather_norm.to_frame()\npanther_edu_elec_avg_weather_norm_df = panther_edu_elec_avg_weather_norm_df.rename(columns = {0:'electricity'})\n\n# Assign each date range to their respective terms\npanther_edu_elec_avg_weather_norm_df.loc[pd.date_range('2017-01-01', '2017-01-08'), 'term'] = 'Winter break 1'\npanther_edu_elec_avg_weather_norm_df.loc[pd.date_range('2017-01-09', '2017-05-02'), 'term'] = 'Spring'\npanther_edu_elec_avg_weather_norm_df.loc[pd.date_range('2017-05-03', '2017-05-14'), 'term'] = 'Spring break'\npanther_edu_elec_avg_weather_norm_df.loc[pd.date_range('2017-05-15', '2017-08-04'), 'term'] = 'Summer'\npanther_edu_elec_avg_weather_norm_df.loc[pd.date_range('2017-08-05', '2017-08-20'), 'term'] = 'Summer break'\npanther_edu_elec_avg_weather_norm_df.loc[pd.date_range('2017-08-21', '2017-12-09'), 'term'] = 'Fall'\npanther_edu_elec_avg_weather_norm_df.loc[pd.date_range('2017-12-10', '2017-12-31'), 'term'] = 'Fall break 2'","9866fb59":"# Keep only the terms\npanther_edu_elec_avg_weather_norm_df_terms = panther_edu_elec_avg_weather_norm_df[panther_edu_elec_avg_weather_norm_df.term.isin(['Spring', 'Summer', 'Fall'])]\n\n# Plot boxplot to compare the weather-normalized electricity consumption (without showing outliers) \nfig, ax = plt.subplots(figsize=(13,10))\nsns.set_theme(style = \"whitegrid\")\n# Create custom palette\npalette2 = {'Spring':'#7ea5d9',\n            'Summer':'#2a77db',\n            'Fall':'#7ea5d9'}\n\n# Plot the boxplot. Outliers are not shown in the figure, and the means are represented by the white circles.\nsns.boxplot(data = panther_edu_elec_avg_weather_norm_df_terms, x = 'term', y = 'electricity', palette = palette2, showfliers = False, showmeans = True,\n            meanprops = {\"marker\":\"o\",\n                         \"markerfacecolor\":\"white\", \n                         \"markeredgecolor\":\"black\",\n                         \"markersize\":\"10\"}).set(xlabel = \"Terms\", ylabel = 'Electricity per degree hour (kWh\/degree hour)')\n\nax.set_title(\"Weather-normalized electricity consumption per term (2017)\", fontsize=13)\nax.xaxis.set_tick_params(labelsize=12)\nax.yaxis.set_tick_params(labelsize=12)\nax.xaxis.get_label().set_fontsize(12)\nax.yaxis.get_label().set_fontsize(12)","b94024d9":"# Create a Gantt chart to visualize the schedule\ncockatoo_schedule = pd.DataFrame([\n    dict(Term=\"Spring\", Start='2017-01-25', Finish='2017-05-23', Type = 'Single-session'),\n    dict(Term=\"Summer 3W\", Start='2017-05-31', Finish='2017-06-23', Type = 'Multi-session'),\n    dict(Term=\"Summer 8W\", Start='2017-06-12', Finish='2017-08-08', Type = 'Multi-session'),\n    dict(Term=\"Summer 6W\", Start='2017-06-26', Finish='2017-08-08', Type = 'Multi-session'),\n    dict(Term=\"Fall\", Start='2017-08-22', Finish='2017-12-14', Type = 'Single-session')\n])\n\nfig = px.timeline(cockatoo_schedule, x_start=\"Start\", x_end=\"Finish\", y=\"Term\", color = 'Type', width=650, height=300, \n                  category_orders=dict(Term=[\"Spring\", \"Summer 3W\", \"Summer 8W\", \"Summer 6W\", \"Fall\"]), \n                  color_discrete_map = {'Single-session': '#cf7a87', 'Multi-session': '#ca0020'}, template = 'plotly_white')\nfig.show()","ba53b593":"cockatoo_weather_2017 = weather[weather.site_id == \"Cockatoo\"].truncate(before = \"2017-01-01\")\n\n# Use the weather normalization functions on cockatoo's air Temperature\ncockatoo_sum_hdh_cdh = cockatoo_weather_2017.airTemperature.to_frame().resample('D').apply(sum_hdh_cdh)\n# Rename the column\ncockatoo_sum_hdh_cdh = cockatoo_sum_hdh_cdh.rename(columns = {\"airTemperature\":\"sum_hdh_cdh\"})\n\n# Obtain daily data for Panther in 2017 \ncockatoo_elec_d = electricity.loc[:,electricity.columns.str.contains(\"Cockatoo\")].resample('D').mean().truncate(before = \"2017-01-01\")\n\n# Obtain data for only education buildings\ncockatoo_edu_elec_d = cockatoo_elec_d.loc[:, cockatoo_elec_d.columns.str.contains(\"education\")]\n\n# Normalize the electricity data\ncockatoo_edu_elec_d_weather_norm = cockatoo_edu_elec_d.apply(lambda x: x.div(cockatoo_sum_hdh_cdh.sum_hdh_cdh), axis = 0)","f3d75c04":"# Plot the original, unnormalized time series\ncockatoo_edu_elec_avg = cockatoo_edu_elec_d.apply(lambda x: x.mean(), axis = 1)\n\nfig, ax = plt.subplots(figsize=(13,8))\nsns.set_theme(style = \"whitegrid\")\nsns.lineplot(data = cockatoo_edu_elec_avg, color = \"#d96f6f\").set(xlabel = 'Month', ylabel = \"Electricity (kWh)\", xticklabels = months_str) \n# Sets the frequency of the ticks to be one month\nax.xaxis.set_major_locator(MonthLocator())\n\nax.set_title(\"Cockatoo Education Unnormalized Electricity Consumption (2017)\", fontsize=13)\nax.xaxis.set_tick_params(labelsize=12)\nax.yaxis.set_tick_params(labelsize=12)\nax.xaxis.get_label().set_fontsize(12)\nax.yaxis.get_label().set_fontsize(12)\n\n\n# Draw lines to delineate each term\nax.text(Timestamp('2017-03-15'), 222, \"Spring\", color = 'black', fontsize=12)\nplt.axvline(pd.to_datetime('2017-01-25'), color='black', linestyle='--', lw=1.5)\nplt.axvline(pd.to_datetime('2017-05-23'), color='black', linestyle='--', lw=1.5)\n\nax.text(Timestamp('2017-06-20'), 222, \"Summer\", color = 'black', fontsize=12)\nplt.axvline(pd.to_datetime('2017-05-31'), color='black', linestyle='--', lw=1.5)\nplt.axvline(pd.to_datetime('2017-08-08'), color='black', linestyle='--', lw=1.5)\n\nax.text(Timestamp('2017-10-10'), 222, \"Fall\", color = 'black', fontsize=12)\nplt.axvline(pd.to_datetime('2017-08-22'), color='black', linestyle='--', lw=1.5)\nplt.axvline(pd.to_datetime('2017-12-14'), color='black', linestyle='--', lw=1.5)","6d472531":"# Plot the weather normalized time series\ncockatoo_edu_elec_avg_weather_norm = cockatoo_edu_elec_d_weather_norm.apply(lambda x: x.mean(), axis = 1)\n\nfig, ax = plt.subplots(figsize=(13,8))\nsns.set_theme(style = \"whitegrid\")\nsns.lineplot(data = cockatoo_edu_elec_avg_weather_norm, color = \"#d96f6f\").set(xlabel = 'Month', ylabel = \"Electricity per degree hour (kWh\/degree hour)\", xticklabels = months_str) \n# Sets the frequency of the ticks to be one month\nax.xaxis.set_major_locator(MonthLocator()) \n\nax.set_title(\"Cockatoo Education Weather-Normalized Electricity Consumption (2017)\", fontsize=13)\nax.xaxis.set_tick_params(labelsize=12)\nax.yaxis.set_tick_params(labelsize=12)\nax.xaxis.get_label().set_fontsize(12)\nax.yaxis.get_label().set_fontsize(12)\n\n# Draw lines to delineate each term\nax.text(Timestamp('2017-03-15'), 8.5, \"Spring\", color = 'black', fontsize=12)\nplt.axvline(pd.to_datetime('2017-01-25'), color='black', linestyle='--', lw=1.5)\nplt.axvline(pd.to_datetime('2017-05-23'), color='black', linestyle='--', lw=1.5)\n\nax.text(Timestamp('2017-06-20'), 8.5, \"Summer\", color = 'black', fontsize=12)\nplt.axvline(pd.to_datetime('2017-05-31'), color='black', linestyle='--', lw=1.5)\nplt.axvline(pd.to_datetime('2017-08-08'), color='black', linestyle='--', lw=1.5)\n\nax.text(Timestamp('2017-10-10'), 8.5, \"Fall\", color = 'black', fontsize=12)\nplt.axvline(pd.to_datetime('2017-08-22'), color='black', linestyle='--', lw=1.5)\nplt.axvline(pd.to_datetime('2017-12-14'), color='black', linestyle='--', lw=1.5)","cc20e73f":"# Change Series to Dataframe and rename the column\ncockatoo_edu_elec_avg_weather_norm_df = cockatoo_edu_elec_avg_weather_norm.to_frame()\ncockatoo_edu_elec_avg_weather_norm_df = cockatoo_edu_elec_avg_weather_norm_df.rename(columns = {0:'electricity'})\n\n# Assign each date range to their respective terms\ncockatoo_edu_elec_avg_weather_norm_df.loc[pd.date_range('2017-01-01', '2017-01-24'), 'term'] = 'Fall break 1'\ncockatoo_edu_elec_avg_weather_norm_df.loc[pd.date_range('2017-01-25', '2017-05-23'), 'term'] = 'Spring'\ncockatoo_edu_elec_avg_weather_norm_df.loc[pd.date_range('2017-05-24', '2017-05-30'), 'term'] = 'Spring break'\ncockatoo_edu_elec_avg_weather_norm_df.loc[pd.date_range('2017-05-31', '2017-08-08'), 'term'] = 'Summer'\ncockatoo_edu_elec_avg_weather_norm_df.loc[pd.date_range('2017-08-09', '2017-08-21'), 'term'] = 'Summer break'\ncockatoo_edu_elec_avg_weather_norm_df.loc[pd.date_range('2017-08-22', '2017-12-14'), 'term'] = 'Fall'\ncockatoo_edu_elec_avg_weather_norm_df.loc[pd.date_range('2017-12-15', '2017-12-31'), 'term'] = 'Fall break 2'","ece3d20b":"# Keep only the terms\ncockatoo_edu_elec_avg_weather_norm_df_terms = cockatoo_edu_elec_avg_weather_norm_df[cockatoo_edu_elec_avg_weather_norm_df.term.isin(['Spring', 'Summer', 'Fall'])]\n\n# Plot boxplot to compare the weather-normalized electricity consumption (without showing outliers) \nfig, ax = plt.subplots(figsize=(13,10))\nsns.set_theme(style = \"whitegrid\")\n# Create custom palette\npalette2 = {'Spring':'#d16d7a',\n            'Summer':'#ca0020',\n            'Fall':'#d16d7a'}\n\n# Plot the boxplot. Outliers are not shown in the figure, and the means are represented by the white circles.\nsns.boxplot(data = cockatoo_edu_elec_avg_weather_norm_df_terms, x = 'term', y = 'electricity', palette = palette2, showfliers = False, showmeans = True,\n            meanprops = {\"marker\":\"o\",\n                         \"markerfacecolor\":\"white\", \n                         \"markeredgecolor\":\"black\",\n                         \"markersize\":\"10\"}).set(xlabel = \"Terms\", ylabel = 'Electricity per degree hour (kWh\/degree hour)')\n\n\nax.set_title(\"Weather-normalized electricity consumption per term (2017)\", fontsize=13)\nax.xaxis.set_tick_params(labelsize=12)\nax.yaxis.set_tick_params(labelsize=12)\nax.xaxis.get_label().set_fontsize(12)\nax.yaxis.get_label().set_fontsize(12)","ffad93fe":"warnings.filterwarnings(\"ignore\")\ndef melt_join(df):\n  '''\n  Melts the dataframe containing several buildings, then joins the dataframe with only the relevant metadata information.\n  Also calculates the age of the building based on the year built attribute, based on the current year (2021).\n  Parameter:\n    df (Dataframe): Dataframe containing the electricity consumption of each building in each column\n  Returns:\n    df_melt_joined (Dataframe): Dataframe containing consumption data melted into one column, with joined metadata information\n  '''\n  df = df.reset_index()\n\n  # Melt the dataframe\n  df_melt= df.melt(id_vars = \"timestamp\", var_name=\"building_id\",value_name=\"elec\")\n\n  # Subset the metadata to only the relevant columns\n  metadata_join = metadata.loc[:,[\"building_id\",\"yearbuilt\",\"sqm\",\"primaryspaceusage\",\"sub_primaryspaceusage\",\"site_id\"]]\n\n  # Join with the subsetted metadata \n  df_melt_joined = df_melt.join(metadata_join.set_index(\"building_id\"),on=\"building_id\") \n\n  # Calculate the building age based on the year 2021\n  df_melt_joined[\"building_age\"] = 2021 - df_melt_joined[\"yearbuilt\"]\n  return df_melt_joined","d7bc7d3d":"# Joining the metadata information with the electricity consumption dataset\npanther_edu_elec_d_weather_norm_melt_joined = melt_join(panther_edu_elec_d_weather_norm)\n# Barplot to show the number of classrooms compared to research (that have electricity data)\nfig, ax = plt.subplots(1,2, figsize = (13,5))\nsns.set_theme(style = \"whitegrid\")\nsns.countplot(x=\"sub_primaryspaceusage\", data=panther_edu_elec_d_weather_norm_melt_joined.groupby('building_id').first(), ax = ax[0]).set(title = \"Number of classrooms and research labs in Panther\", xlabel = \"Usage type\", ylabel = \"Count\")\n# Forces the y axis to be integers\nax[0].yaxis.set_major_locator(MaxNLocator(integer=True))\n# Changes the tick frequency of the y axis\nax[0].yaxis.set_major_locator(ticker.MultipleLocator(2))\n# Change the axis limits to ensure the axis is the same for both subplots\nax[0].set_ylim(0, 24)\n\n\n# Joining the metadata information with the electricity consumption dataset\ncockatoo_edu_elec_d_weather_norm_melt_joined = melt_join(cockatoo_edu_elec_d_weather_norm)\n# Barplot to show the number of classrooms compared to research (that have electricity data)\nsns.countplot(x=\"sub_primaryspaceusage\", data=cockatoo_edu_elec_d_weather_norm_melt_joined.groupby('building_id').first(), ax = ax[1], order = ['College Classroom', 'College Laboratory', 'Student Union']).set(title = \"Number of classrooms, research labs and \\n student union rooms in Cockatoo\", xlabel = \"Usage type\", ylabel = \"Count\")\n# Forces the y axis to be integers\nax[1].yaxis.set_major_locator(MaxNLocator(integer=True))\n# Changes the tick frequency of the y axis\nax[1].yaxis.set_major_locator(ticker.MultipleLocator(2))\n","44c29026":"## PANTHER\n# Plot the electricity consumption for each education type\nfig, ax = plt.subplots(2, 1, figsize=(12,15))\nsns.set_theme(style=\"whitegrid\")\nsns.lineplot(data=panther_edu_elec_d_weather_norm_melt_joined, x=\"timestamp\", y=\"elec\", hue=\"sub_primaryspaceusage\",palette=\"tab10\", linewidth=1.5, ax = ax[0]).set(ylabel = 'Electricity per degree hour (kWh\/degree hour)', xlabel = 'Month', xticklabels = months_str)\n# Sets the frequency of the ticks to be one month\nax[0].xaxis.set_major_locator(MonthLocator())\nax[0].legend(title = 'Usage type', loc = 'upper right', bbox_to_anchor=(1.18, 1))\n\n# Draw lines to delineate the terms\nax[0].text(Timestamp('2017-02-23'), 10.5, \"Spring\", color = 'black', fontsize=12)\nax[0].axvline(pd.to_datetime('2017-01-09'), color='black', linestyle='--', lw=2)\nax[0].axvline(pd.to_datetime('2017-05-02'), color='black', linestyle='--', lw=2)\n\nax[0].text(Timestamp('2017-06-15'), 10.5, \"Summer\", color = 'black', fontsize=12)\nax[0].axvline(pd.to_datetime('2017-05-15'), color='black', linestyle='--', lw=2)\nax[0].axvline(pd.to_datetime('2017-08-04'), color='black', linestyle='--', lw=2)\n\nax[0].text(Timestamp('2017-10-10'), 10.5, \"Fall\", color = 'black', fontsize=12)\nax[0].axvline(pd.to_datetime('2017-08-21'), color='black', linestyle='--', lw=2)\nax[0].axvline(pd.to_datetime('2017-12-09'), color='black', linestyle='--', lw=2)\n\nax[0].set_title(\"Panther weather-normalized electricity consumption for each educational use type (2017)\", fontsize=13)\nax[0].xaxis.set_tick_params(labelsize=12)\nax[0].yaxis.set_tick_params(labelsize=12)\nax[0].xaxis.get_label().set_fontsize(12)\nax[0].yaxis.get_label().set_fontsize(12)\n\n\n## COCKATOO\nsns.lineplot(data=cockatoo_edu_elec_d_weather_norm_melt_joined, x=\"timestamp\", y=\"elec\", hue=\"sub_primaryspaceusage\",palette=\"tab10\", linewidth=1.5, ax = ax[1]).set(ylabel = 'Electricity per degree hour (kWh\/degree hour)', xlabel = 'Month', xticklabels = months_str)\n# Sets the frequency of the ticks to be one month\nax[1].xaxis.set_major_locator(MonthLocator())\nax[1].legend(title = 'Usage type', loc = 'upper right', bbox_to_anchor=(1.25, 1))\n\n# Draw lines to delineate the terms\nax[1].text(Timestamp('2017-03-10'), 18, \"Spring\", color = 'black', fontsize=12)\nax[1].axvline(pd.to_datetime('2017-01-25'), color='black', linestyle='--', lw=1.5)\nax[1].axvline(pd.to_datetime('2017-05-23'), color='black', linestyle='--', lw=1.5)\n\nax[1].text(Timestamp('2017-06-21'), 18, \"Summer\", color = 'black', fontsize=12)\nax[1].axvline(pd.to_datetime('2017-05-31'), color='black', linestyle='--', lw=1.5)\nax[1].axvline(pd.to_datetime('2017-08-08'), color='black', linestyle='--', lw=1.5)\n\nax[1].text(Timestamp('2017-10-10'), 18, \"Fall\", color = 'black', fontsize=12)\nax[1].axvline(pd.to_datetime('2017-08-22'), color='black', linestyle='--', lw=1.5)\nax[1].axvline(pd.to_datetime('2017-12-14'), color='black', linestyle='--', lw=1.5)\n\nax[1].set_title(\"Cockatoo weather-normalized electricity consumption for each educational use type (2017)\", fontsize=13)\nax[1].xaxis.set_tick_params(labelsize=12)\nax[1].yaxis.set_tick_params(labelsize=12)\nax[1].xaxis.get_label().set_fontsize(12)\nax[1].yaxis.get_label().set_fontsize(12)\n","07264767":"## PANTHER\n# Join with the terms for each timestamp\npanther_edu_d_weather_norm_melt_joined2 = panther_edu_elec_d_weather_norm_melt_joined.merge(panther_edu_elec_avg_weather_norm_df['term'], how='left', on = 'timestamp')\n\n# Only keep the terms, remove the breaks\npanther_edu_d_weather_norm_melt_joined2_terms = panther_edu_d_weather_norm_melt_joined2[panther_edu_d_weather_norm_melt_joined2.term.isin(['Spring', 'Summer', 'Fall'])]\n\n# Plot boxplot to compare the weather-normalized electricity consumption (without showing outliers) \nfig, ax = plt.subplots(1, 2, figsize=(13,10))\nsns.set_theme(style = \"whitegrid\")\n\n# Plot the boxplot. Outliers are not shown in the figure, and the means are represented by the white circles.\nsns.boxplot(data = panther_edu_d_weather_norm_melt_joined2_terms, x = 'term', y = 'elec', hue = 'sub_primaryspaceusage', palette = \"tab10\", ax = ax[0], showfliers = False, showmeans = True,\n            meanprops = {\"marker\":\"o\",\n                         \"markerfacecolor\":\"white\", \n                         \"markeredgecolor\":\"black\",\n                         \"markersize\":\"10\"}).set(xlabel = \"Terms\", ylabel = 'Electricity per degree hour (kWh\/degree hour)')\n# Change legend name and position\nax[0].legend(title = 'Usage type', loc = 'upper right', fontsize = 11)\n# Change axis limits to ensure that the limits are the same for both subplots\nax[0].set_ylim(0, 13)\n\nax[0].set_title(\"Panther\\'s weather-normalized \\n electricity consumption per term (2017)\", fontsize=13)\n\n## COCKATOO\n\n# Join with the terms for each timestamp\ncockatoo_edu_d_weather_norm_melt_joined2 = cockatoo_edu_elec_d_weather_norm_melt_joined.merge(cockatoo_edu_elec_avg_weather_norm_df['term'], how='left', on = 'timestamp')\n\n# Only keep the terms, remove the breaks\ncockatoo_edu_d_weather_norm_melt_joined2_terms = cockatoo_edu_d_weather_norm_melt_joined2[cockatoo_edu_d_weather_norm_melt_joined2.term.isin(['Spring', 'Summer', 'Fall'])]\n\n# Plot the boxplot. Outliers are not shown in the figure, and the means are represented by the white circles.\nsns.boxplot(data = cockatoo_edu_d_weather_norm_melt_joined2_terms, x = 'term', y = 'elec', hue = 'sub_primaryspaceusage', palette = \"tab10\", ax = ax[1], showfliers = False, showmeans = True,\n            meanprops = {\"marker\":\"o\",\n                         \"markerfacecolor\":\"white\", \n                         \"markeredgecolor\":\"black\",\n                         \"markersize\":\"10\"}).set(xlabel = \"Terms\", ylabel = 'Electricity per degree hour (kWh\/degree hour)')\n# Change legend name and position\nax[1].legend(title = 'Usage type', loc = 'upper right', fontsize = 11)\n# Change axis limits to ensure that the limits are the same for both subplots\nax[1].set_ylim(0, 13)\n\nax[1].set_title(\"Cockatoo\\'s weather-normalized \\n electricity consumption per term (2017)\", fontsize=13)","4c0cdb30":"# Visualize the steepness of the drops\/increases\nfig, ax = plt.subplots(1,2, figsize=(11,5))\nsns.set_theme(style = \"whitegrid\")\n# Assign the terms as a categorical variable with a certain order\npanther_edu_d_weather_norm_melt_joined2_terms['term'] = pd.Categorical(panther_edu_d_weather_norm_melt_joined2_terms['term'], categories = ['Spring', 'Summer', 'Fall'], ordered = True)\ncockatoo_edu_d_weather_norm_melt_joined2_terms['term'] = pd.Categorical(cockatoo_edu_d_weather_norm_melt_joined2_terms['term'], categories = ['Spring', 'Summer', 'Fall'], ordered = True)\n\nsns.lineplot(data = panther_edu_d_weather_norm_melt_joined2_terms.groupby(['term', 'sub_primaryspaceusage']).mean(), y = 'elec', x = 'term', hue = 'sub_primaryspaceusage', ax = ax[0]).set(ylabel = 'Electricity per degree hour (kWh\/degree hour)', xlabel = 'Terms')\nax[0].legend(title = 'Usage type', loc = 'upper right')\n# Change axis limits to ensure that the limits are the same for both subplots\nax[0].set_ylim(0,4)\n\nax[0].set_title(\"Panther\\'s mean consumption per term\", fontsize=13)\n\nsns.lineplot(data = cockatoo_edu_d_weather_norm_melt_joined2_terms.groupby(['term', 'sub_primaryspaceusage']).mean(), y = 'elec', x = 'term', hue = 'sub_primaryspaceusage', ax = ax[1], sort = False).set(ylabel = 'Electricity per degree hour (kWh\/degree hour)', xlabel = 'Terms')\nax[1].legend(title = 'Usage type', loc = 'upper right', bbox_to_anchor=(1.57, 1))\n# Change axis limits to ensure that the limits are the same for both subplots\nax[1].set_ylim(0,4)\n\nax[1].set_title(\"Cockatoo\\'s mean consumption per term\", fontsize=13)","0db47179":"# Calculate the mean electricity consumption for each building\npanther_edu_elec_mean_weather_norm = panther_edu_elec_d_weather_norm_melt_joined.groupby('building_id').mean()\ncockatoo_edu_elec_mean_weather_norm = cockatoo_edu_elec_d_weather_norm_melt_joined.groupby('building_id').mean()","8bf713f3":"# Calculates various values for the best fit line\nslope, intercept, r_value, pv, se = stats.linregress(panther_edu_elec_mean_weather_norm['sqm'], panther_edu_elec_mean_weather_norm['elec'])\n\n# Plot jointplot\np = sns.jointplot(x=\"sqm\", y=\"elec\", data=panther_edu_elec_mean_weather_norm, kind = 'reg')\nplt.suptitle('Panther - Building size vs Weather-normalized electricity consumption ' + '(r = %.3f' % r_value + ')', y = 1)\np.set_axis_labels('Floor area (sqm)', 'Electricity per degree hour (kWh\/degree hour)')","cc7dd6b3":"# Calculates various values for the best fit line\nslope, intercept, r_value, pv, se = stats.linregress(cockatoo_edu_elec_mean_weather_norm['sqm'], cockatoo_edu_elec_mean_weather_norm['elec'])\n\n# Plot jointplot\np = sns.jointplot(x=\"sqm\", y=\"elec\", data=cockatoo_edu_elec_mean_weather_norm, kind = 'reg', color = \"red\")\nplt.suptitle('Cockatoo - Building size vs Weather-normalized electricity consumption ' + '(r = %.3f' % r_value + ')', y = 1)\np.set_axis_labels('Floor area (sqm)', 'Electricity per degree hour (kWh\/degree hour)')","95c8f2dc":"## PANTHER\n# Group the df by building id and term, then sort it according to the building size\npanther_ordered = panther_edu_d_weather_norm_melt_joined2_terms.groupby(['building_id', 'term']).mean().sort_values(by = 'sqm').reset_index()\n\n# Assign the terms as a categorical variable with a certain order\npanther_ordered['term'] = pd.Categorical(panther_ordered['term'], categories = ['Spring', 'Summer', 'Fall'], ordered = True)\n\n# Plot the lineplot for each building. As it is sorted by building size, more blue = smaller sized, more red = larger sized.\nfig, ax = plt.subplots(1, 3, figsize = (13, 10), gridspec_kw={'width_ratios': [1, 1, 0.05]})\nsns.lineplot(data = panther_ordered, x = 'term', y = 'elec', hue = 'building_id', palette = 'RdBu_r', ax = ax[0]).set(ylabel = 'Electricity per degree hour (kWh\/degree hour)', xlabel = 'Terms')\nax[0].get_legend().remove()\n# Change the axis limits to ensure that the limits are the same for both subplots\nax[0].set_ylim(0,14)\n\nax[0].set_title(\"Panther\\'s mean consumption per term\", fontsize=13)\n\n## COCKATOO\n# Group the df by building id and term, then sort it according to the building size\ncockatoo_ordered = cockatoo_edu_d_weather_norm_melt_joined2_terms.groupby(['building_id', 'term']).mean().sort_values(by = 'sqm').reset_index()\n\n# Assign the terms as a categorical variable with a certain order\ncockatoo_ordered['term'] = pd.Categorical(cockatoo_ordered['term'], categories = ['Spring', 'Summer', 'Fall'], ordered = True)\n\n# Plot the lineplot for each building. As it is sorted by building size, more blue = smaller sized, more red = larger sized.\nsns.lineplot(data = cockatoo_ordered, x = 'term', y = 'elec', hue = 'building_id', palette = 'RdBu_r', ax = ax[1]).set(ylabel = 'Electricity per degree hour (kWh\/degree hour)', xlabel = 'Terms')\nax[1].get_legend().remove()\n# Change the axis limits to ensure that the limits are the same for both subplots\nax[1].set_ylim(0,14)\n\nax[1].set_title(\"Cockatoo\\'s mean consumption per term\", fontsize=13)\n\n\n# Plot a colormap as the legend\ncmap = mpl.cm.RdBu_r\nnorm = mpl.colors.Normalize(vmin=1, vmax=2)\n\ncb = fig.colorbar(mpl.cm.ScalarMappable(norm=norm, cmap=cmap), cax=ax[2], orientation='vertical')\n\n# Change the number of bins for the ticks\ntick_locator = ticker.MaxNLocator(nbins=1)\ncb.locator = tick_locator\ncb.update_ticks()\n\n# Change the labels for the ticks\ncb.ax.set_yticklabels(['Small floor area', 'Large floor area']) \n\nplt.subplots_adjust(wspace=0.3)\n","38245085":"def calculate_eui(elec_data):\n  '''\n  Calculates the EUI of each building by dividing the electricity consumption by the floor area (sqm)\n  Parameter:\n    elec_data (Dataframe): Dataframe containing the electricity consumed for each building as each column\n  Returns:\n    eui (Dataframe): Dataframe containing the normalized electricity consumption (i.e. EUI)\n  '''\n\n  eui = elec_data.copy()\n  for col in elec_data.columns:\n    sqm = metadata.loc[metadata.building_id == col,'sqm'].item()\n    eui[col] = eui[col]\/sqm\n  return eui","06f525da":"# Calculate EUI, join with metadata, then calculate the mean for each building.\npanther_edu_elec_mean_weather_norm_eui = melt_join(calculate_eui(panther_edu_elec_d_weather_norm)).groupby('building_id').mean()\ncockatoo_edu_elec_mean_weather_norm_eui = melt_join(calculate_eui(cockatoo_edu_elec_d_weather_norm)).groupby('building_id').mean()","59c8d4d1":"# Calculates various values for the best fit line\nslope, intercept, r_value, pv, se = stats.linregress(panther_edu_elec_mean_weather_norm_eui['sqm'], panther_edu_elec_mean_weather_norm_eui['elec'])\n\n# Plot jointplot\np = sns.jointplot(x=\"building_age\", y=\"elec\", data=panther_edu_elec_mean_weather_norm_eui, kind = 'reg')\nplt.suptitle('Panther - Building age vs EUI ' + '(r = %.3f' % r_value + ')', y = 1)\np.set_axis_labels('Building age', 'EUI per degree hour (kWh\/degree hour\/sqm)')","00b66533":"# Calculates various values for the best fit line\nslope, intercept, r_value, pv, se = stats.linregress(cockatoo_edu_elec_mean_weather_norm_eui['sqm'], cockatoo_edu_elec_mean_weather_norm_eui['elec'])\n\n# Plot jointplot\np = sns.jointplot(x=\"building_age\", y=\"elec\", data=cockatoo_edu_elec_mean_weather_norm_eui, kind = 'reg', color = 'red')\nplt.suptitle('Cockatoo - Building age vs EUI ' + '(r = %.3f' % r_value + ')', y = 1)\np.set_axis_labels('Building age', 'EUI per degree hour (kWh\/degree hour\/sqm)')","33e864ff":"# Create the dataframe for EUI that is merged with the periods of the terms and breaks, and filter to only the terms \npanther_eui = melt_join(calculate_eui(panther_edu_elec_d_weather_norm)).merge(panther_edu_elec_avg_weather_norm_df['term'], how='left', on = 'timestamp')\npanther_eui_terms = panther_eui[panther_eui.term.isin(['Spring', 'Summer', 'Fall'])]\n\ncockatoo_eui = melt_join(calculate_eui(cockatoo_edu_elec_d_weather_norm)).merge(cockatoo_edu_elec_avg_weather_norm_df['term'], how='left', on = 'timestamp')\ncockatoo_eui_terms = cockatoo_eui[cockatoo_eui.term.isin(['Spring', 'Summer', 'Fall'])]","b1dafad6":"## PANTHER\n# Group the df by building id and term, then sort it according to the building size\npanther_ordered2 = panther_eui_terms.groupby(['building_id', 'term']).mean().sort_values(by = 'building_age').reset_index()\n\n# Assign the terms as a categorical variable with a certain order\npanther_ordered2['term'] = pd.Categorical(panther_ordered2['term'], categories = ['Spring', 'Summer', 'Fall'], ordered = True)\n\n# Plot the lineplot for each building. As it is sorted by building size, more blue = smaller sized, more red = larger sized.\nfig, ax = plt.subplots(1, 3, figsize = (13, 10), gridspec_kw={'width_ratios': [1, 1, 0.03]})\nsns.lineplot(data = panther_ordered2, x = 'term', y = 'elec', hue = 'building_id', palette = 'RdBu_r', ax = ax[0]).set(ylabel = 'EUI per degree hour (kWh\/degree hour\/sqm)', xlabel = 'Terms')\nax[0].get_legend().remove()\n# Change the axis limits to ensure that the limits are the same for both subplots\nax[0].set_ylim(0,0.002) \n\nax[0].set_title(\"Panther\\'s mean consumption per term\", fontsize=13)\n\n## COCKATOO\n# Group the df by building id and term, then sort it according to the building size\ncockatoo_ordered2 = cockatoo_eui_terms.groupby(['building_id', 'term']).mean().sort_values(by = 'building_age').reset_index().dropna(subset = ['building_age'], axis = 0)\n\n# Assign the terms as a categorical variable with a certain order\ncockatoo_ordered2['term'] = pd.Categorical(cockatoo_ordered2['term'], categories = ['Spring', 'Summer', 'Fall'], ordered = True)\n\n# Plot the lineplot for each building. As it is sorted by building size, more blue = smaller sized, more red = larger sized.\nsns.lineplot(data = cockatoo_ordered2, x = 'term', y = 'elec', hue = 'building_id', palette = 'RdBu_r', ax = ax[1]).set(ylabel = 'EUI per degree hour (kWh\/degree hour\/sqm)', xlabel = 'Terms')\nax[1].get_legend().remove()\n# Change the axis limits to ensure that the limits are the same for both subplots\nax[1].set_ylim(0,0.002) \n\nax[1].set_title(\"Cockatoo\\'s mean consumption per term\", fontsize=13)\n\n\n# Plot a colormap as the legend\ncmap = mpl.cm.RdBu_r\nnorm = mpl.colors.Normalize(vmin=1, vmax=2)\n\ncb = fig.colorbar(mpl.cm.ScalarMappable(norm=norm, cmap=cmap), cax=ax[2], orientation='vertical')\n\n# Change the number of bins for the ticks\ntick_locator = ticker.MaxNLocator(nbins=1)\ncb.locator = tick_locator\ncb.update_ticks()\n\n# Change the labels for the ticks\ncb.ax.set_yticklabels(['Built recently', 'Built several \\n years ago']) \n\nplt.subplots_adjust(wspace=0.45)\n","57b64ba4":"def multi_term_panther(d_time):\n  '''\n  Identifies if the date falls in a summer term or a non-summer term for Panther\n  Parameter:\n    d_time (Timestamp): Date in Y-m-d format\n  Returns:\n    0: Date is not within the summer term\n    1: Date is within the summer term\n  ''' \n  summer_s = datetime.datetime.strptime('2017-05-15','%Y-%m-%d') \n  summer_e = datetime.datetime.strptime('2017-08-04','%Y-%m-%d') \n\n\n  if d_time > summer_s and d_time < summer_e:\n    return 1\n  else:\n    return 0","e97fe068":"def multi_term_cockatoo(d_time):\n  '''\n  Identifies if the date falls in a summer term or a non-summer term for Cockatoo\n  Parameter:\n    d_time (Timestamp): Date in Y-m-d format\n  Returns:\n    0: Date is not within the summer term\n    1: Date is within the summer term\n  ''' \n  summer_s = datetime.datetime.strptime('2017-05-31','%Y-%m-%d') \n  summer_e = datetime.datetime.strptime('2017-08-08','%Y-%m-%d') \n\n  if d_time > summer_s and d_time < summer_e:\n    return 1\n  else:\n    return 0","0b52f68c":"# Add a column to state if it is a summer term or not\nfor i in range(len(panther_edu_elec_d_weather_norm_melt_joined)):\n  panther_edu_elec_d_weather_norm_melt_joined.loc[panther_edu_elec_d_weather_norm_melt_joined.index[i],'summer'] = multi_term_panther(panther_edu_elec_d_weather_norm_melt_joined.timestamp[i])\n\nfor i in range(len(cockatoo_edu_elec_d_weather_norm_melt_joined)):\n  cockatoo_edu_elec_d_weather_norm_melt_joined.loc[cockatoo_edu_elec_d_weather_norm_melt_joined.index[i],'summer'] = multi_term_cockatoo(cockatoo_edu_elec_d_weather_norm_melt_joined.timestamp[i])","8e042e61":"# Construct an OLS model for Panther\nfrom statsmodels.formula.api import ols\n\nlm1 = ols('elec ~ sqm + building_age + sub_primaryspaceusage + summer', data=panther_edu_elec_d_weather_norm_melt_joined).fit()\nlm1.summary()","08185df5":"d1 = pd.get_dummies(panther_edu_elec_d_weather_norm_melt_joined['sub_primaryspaceusage'])\npanther_edu_elec_d_weather_norm_melt_joined['Research']=d1['Research']","9bdf4a2e":"dfData = panther_edu_elec_d_weather_norm_melt_joined.loc[:,['building_age','sqm','summer','Research']].corr()\nsns.heatmap(dfData, annot=True, vmax=1, square=True, cmap=\"Blues\")","ffb5ecbb":"lm1 = ols('elec ~ sqm', data=panther_edu_elec_d_weather_norm_melt_joined).fit()\nlm1.summary()","b6f88044":"panther_edu_elec_d_weather_norm_melt_joined['sqm_scaled'] = panther_edu_elec_d_weather_norm_melt_joined['sqm']\/1000","5a789119":"cockatoo_edu_elec_d_weather_norm_melt_joined['sqm_scaled'] = cockatoo_edu_elec_d_weather_norm_melt_joined['sqm']\/1000","8742d85c":"lm1 = ols('elec ~ sqm_scaled + building_age + sub_primaryspaceusage + summer ', data=panther_edu_elec_d_weather_norm_melt_joined).fit()\nlm1.summary()","e2495f44":"lm2 = ols('elec ~ sqm_scaled + building_age + sub_primaryspaceusage ', data=panther_edu_elec_d_weather_norm_melt_joined).fit()\nlm3 = ols('elec ~ sqm_scaled + building_age + summer', data=panther_edu_elec_d_weather_norm_melt_joined).fit()\nlm4 = ols('elec ~ sqm_scaled + sub_primaryspaceusage + summer ', data=panther_edu_elec_d_weather_norm_melt_joined).fit()\nlm5 = ols('elec ~ building_age + sub_primaryspaceusage + summer ', data=panther_edu_elec_d_weather_norm_melt_joined).fit()","5a3fb6a8":"stargazer = Stargazer([lm1,lm2, lm3, lm4, lm5])\nHTML(stargazer.render_html())","cac9a549":"lm1 = ols('elec ~  sqm_scaled + building_age + sub_primaryspaceusage + summer', data=cockatoo_edu_elec_d_weather_norm_melt_joined).fit()\nlm1.summary()","2d20ed72":"lm2 = ols('elec ~ sqm_scaled + building_age + sub_primaryspaceusage ', data=cockatoo_edu_elec_d_weather_norm_melt_joined).fit()\nlm3 = ols('elec ~ sqm_scaled + building_age + summer', data=cockatoo_edu_elec_d_weather_norm_melt_joined).fit()\nlm4 = ols('elec ~ sqm_scaled + sub_primaryspaceusage + summer ', data=cockatoo_edu_elec_d_weather_norm_melt_joined).fit()\nlm5 = ols('elec ~ building_age + sub_primaryspaceusage + summer ', data=cockatoo_edu_elec_d_weather_norm_melt_joined).fit()","9d92107f":"stargazer = Stargazer([lm1,lm2, lm3, lm4, lm5])\nHTML(stargazer.render_html())","f3599f20":"# Subset to Crow and Cockatoo only\ncrow_cockatoo_locations = locations.loc[['Crow', 'Cockatoo'],:]\n\n# Plot map\ncrow_cockatoo_map = go.Figure(go.Scattergeo(lat = crow_cockatoo_locations['lat'], lon = crow_cockatoo_locations['lng'],\n                                               text = 'Location: ' + crow_cockatoo_locations.index,\n                                               mode = 'markers',\n                                               marker = dict(size = 10, color = ['#2a77db', '#ca0020'])))\n\n\n# Update title and land colour\ncrow_cockatoo_map.update_layout(title_text = 'Locations of Crow and Cockatoo', geo = dict(landcolor = \"rgb(218, 220, 224)\"))\n\n# Update projection type to give a more 'globe' look\ncrow_cockatoo_map.update_geos(projection_type = \"natural earth\")\n\ncrow_cockatoo_map.show()","cdc63562":"# Visualize Crow and Cockatoo's academic calendar schedule\ncrow_cockatoo_schedule = pd.DataFrame([\n    dict(Term=\"Winter Crow\", Start='2017-01-03', Finish='2017-04-25', School = 'Crow'),\n    dict(Term=\"Summer Crow\", Start='2017-05-01', Finish='2017-08-25', School = 'Crow'),\n    dict(Term=\"Fall Crow\", Start='2017-09-01', Finish='2017-12-22', School = 'Crow'),\n    dict(Term=\"Winter Cockatoo\", Start='2017-01-03', Finish='2017-01-21', School = 'Cockatoo'),\n    dict(Term=\"Spring Cockatoo\", Start='2017-01-25', Finish='2017-05-23', School = 'Cockatoo'),\n    dict(Term=\"Summer 3W Cockatoo\", Start='2017-05-31', Finish='2017-06-22', School = 'Cockatoo'),\n    dict(Term=\"Summer 8W Cockatoo\", Start='2017-06-12', Finish='2017-08-08', School = 'Cockatoo'),\n    dict(Term=\"Summer 6W Cockatoo\", Start='2017-07-28', Finish='2017-08-08', School = 'Cockatoo'),\n    dict(Term=\"Fall Cockatoo\", Start='2017-08-22', Finish='2017-12-14', School = 'Cockatoo')\n])\n\nfig = px.timeline(crow_cockatoo_schedule, x_start=\"Start\", x_end=\"Finish\", y=\"Term\", color = \"School\", width=700, height=300,\n                  color_discrete_map = {'Cockatoo': '#ca0020', 'Crow': '#0571b0'}, template = 'plotly_white')\nfig.update_yaxes(autorange=\"reversed\") # otherwise tasks are listed from the bottom up\nfig.show()\n","e54cb22a":"# Get weather data for Cockatoo and Crow in 2017\ncockatoo_weather_2017 = weather[weather.site_id == \"Cockatoo\"].truncate(before = \"2017-01-01\")\ncrow_weather_2017 = weather[weather.site_id == \"Crow\"].truncate(before = \"2017-01-01\")\n\n# Convert hourly timestamps to monthly timestamps\ncockatoo_weather_2017['month'] = cockatoo_weather_2017.index.to_period('M').to_timestamp()\ncrow_weather_2017['month'] = crow_weather_2017.index.to_period('M').to_timestamp()\n\n# Convert hourly timestamps to daily timestamps\ncockatoo_weather_2017['day'] = cockatoo_weather_2017.index.to_period('D').to_timestamp()\ncrow_weather_2017['day'] = crow_weather_2017.index.to_period('D').to_timestamp()","f6611fec":"fig, ax = plt.subplots(figsize = (13, 8))\nsns.set_theme(style = \"whitegrid\")\n# Plot the monthly mean air temperature with 95% confidence interval\nsns.lineplot(data = pd.concat([cockatoo_weather_2017, crow_weather_2017]).reset_index(), x = \"month\", y = \"airTemperature\", hue = 'site_id', ax = ax, linewidth = 4,\n             palette = {'Cockatoo': '#ca0020', 'Crow': '#0571b0'}).set(xlabel = 'Month', ylabel = \"Air Temperature (\u00b0C)\", xticklabels = months_str)\n# Plot the daily mean air temperature with 95% confidence interval\nsns.lineplot(data = pd.concat([cockatoo_weather_2017, crow_weather_2017]).reset_index(), x = \"day\", y = \"airTemperature\", hue = 'site_id',  ax = ax, \n             palette = {'Cockatoo': '#ca0020', 'Crow': '#0571b0'}, alpha = 0.2, legend = False).set(xlabel = 'Month', ylabel = \"Air Temperature (\u00b0C)\", xticklabels = months_str)\n# Sets the frequency of the ticks to be one month\nax.xaxis.set_major_locator(MonthLocator()) \n\nax.set_title(\"Air Temperature in Cockatoo and Crow (2017)\", fontsize=13)\nax.xaxis.set_tick_params(labelsize=12)\nax.yaxis.set_tick_params(labelsize=12)\nax.xaxis.get_label().set_fontsize(12)\nax.yaxis.get_label().set_fontsize(12)\n\n# Set legend\nax.legend(['Monthly mean (Cockatoo) with 95% CI','Monthly mean (Crow) with 95% CI','Daily mean (Cockatoo) with 95% CI','Daily mean (Crow) with 95% CI'], loc = 'lower center', fontsize = 11)","63054f73":"# Get Cockatoo and Crow's original electricity consumption data\ncockatoo_edu_elec_d = electricity.loc[:,electricity.columns.str.contains(\"Cockatoo\") & electricity.columns.str.contains(\"education\")].resample('D').mean().truncate(before = '2017-01-01')\ncrow_edu_elec_d = electricity.loc[:,electricity.columns.str.contains(\"Crow\") & electricity.columns.str.contains(\"education\")].resample('D').mean().truncate(before = '2017-01-01')","a9e2cfeb":"# Get Cockatoo and Crow's weather-normalized EUI\ncockatoo_edu_d_eui = calculate_eui(cockatoo_edu_elec_d)\ncrow_edu_elec_d_eui = calculate_eui(crow_edu_elec_d)","410552da":"# Calculate average EUI across all buildings\ncrow_edu_elec_d_eui_avg = crow_edu_elec_d_eui.mean(axis = 1).to_frame().rename(columns = {0:'Crow'})\ncockatoo_edu_elec_d_eui_avg = cockatoo_edu_d_eui.mean(axis = 1).to_frame().rename(columns = {0:'Cockatoo'})\n\n# Join to one dataframe\ncrow_cockatoo_edu_elec_d_eui_avg = crow_edu_elec_d_eui_avg.join(cockatoo_edu_elec_d_eui_avg)\n\n# Truncate to the fall season \ncrow_cockatoo_edu_elec_d_eui_avg_fall = crow_cockatoo_edu_elec_d_eui_avg.truncate(before = '2017-08-22')\n\n# Make rows for Crow before 8 Sep NaN to allow the visualization for the fall term to be clearer\ncrow_cockatoo_edu_elec_d_eui_avg_fall.loc[pd.date_range(start = '2017-08-22', end = '2017-09-08'),'Crow'] = None","c8ea59b1":"# Plot EUI of Crow vs Cockatoo for the Fall term\nfig, ax = plt.subplots(figsize=(13,8))\nsns.set_theme(style=\"whitegrid\")\nsns.lineplot(data = crow_cockatoo_edu_elec_d_eui_avg_fall, dashes = False, palette = {'Cockatoo': '#ca0020', 'Crow': '#0571b0'}, linewidth = 2).set(xlabel = 'Month', ylabel = \"Weather-normalized EUI (kWh\/degree hour\/sqm)\")\n\n# Set xticks\nplt.xticks(ticks = [Timestamp('2017-08-22'), Timestamp('2017-09-09'), Timestamp('2017-10-01'), Timestamp('2017-11-01'), Timestamp('2017-12-01')],\n           labels = ['8 Aug \\n(Cockatoo Start)', '9 Sep \\n(Crow Start)', 'Oct', 'Nov', 'Dec'])\n\nax.set_title(\"Crow vs Cockatoo Fall EUI 2017\", fontsize=13)\nax.xaxis.set_tick_params(labelsize=12)\nax.yaxis.set_tick_params(labelsize=12)\nax.xaxis.get_label().set_fontsize(12)\nax.yaxis.get_label().set_fontsize(12)\n\nax.legend(fontsize = 11)","5ed26994":"# Plot boxplot to compare Crow and Cockatoo for the Fall term (without showing outliers) \nfig, ax = plt.subplots(figsize=(13,10))\nsns.set_theme(style = \"whitegrid\")\n\n# Plot the boxplot. Outliers are not shown in the figure, and the means are represented by the white circles.\nsns.boxplot(data = crow_cockatoo_edu_elec_d_eui_avg_fall,showfliers = False, showmeans = True, palette = {'Cockatoo': '#ca0020', 'Crow': '#0571b0'},\n            meanprops = {\"marker\":\"o\",\n                         \"markerfacecolor\":\"white\", \n                         \"markeredgecolor\":\"black\",\n                         \"markersize\":\"10\"}).set(xlabel = \"University\", ylabel = 'Weather-normalized EUI (kWh\/degree hour\/sqm)')\n\nax.set_title(\"Weather-normalized EUI for the Fall term (2017)\", fontsize=13)\nax.xaxis.set_tick_params(labelsize=12)\nax.yaxis.set_tick_params(labelsize=12)\nax.xaxis.get_label().set_fontsize(12)\nax.yaxis.get_label().set_fontsize(12)","d07566fc":"# **7. Cross-verification using regression**\nThe team decided to cross-verify the previous findings using Ordinary Least Squares (OLS) regression.","dd28017f":">###  **3.5.2. Visualizing Cockatoo's unnormalized electricity data**","13694214":"# **1. Introduction**\n\n","396949af":"## 4.2. Difference in electricity consumption per term for research and classroom\n\nTo better understand the shift in electricity consumption for each term, boxplots and line plots were used.","ee71f6a2":"> ### **4.1.1. Determining the number of classrooms and research labs in Panther and Cockatoo**\n\nThe two universities have different ratios of classrooms to research laboratories. From the figures below, we can see that:\n* Panther has two times as many classrooms than research laboratories\n* Cockatoo has 1.2 times more research laboratories than classrooms","12019174":"## 3.3. Comparing the Multi-session and Single-session terms' electricity consumption","4e1b1410":"**The team noticed that Crow was missing data towards the end of the year and had with debatable trends from the above chart**\n\nDuring September to October, Crow has a huge spike in EUI followed by missing data from late November 2017. The team was not able to determine plausible reasons, and thus suspected possible data quality issues.","c950418d":"## 6.4. Conclusion - Building age vs electricity consumption\n\nAnalysis of the line plots above informs us of the following:\n* **There is no clear relationship between building age and electricity consumption**\n    * Unlike the line plots generated for building size, the above line plots do not show any distinct trend between building age and electricity consumption\n    * This is consistent with what was observed in the scatter plots\n* **There is no clear trend between building age and the extent of change in consumption between the terms**\n    * No observable pattern can be seen between building age and the steepness of the slopes in the line plot\n\nAs such, building age is seen to have a weaker effect than building type and building size on electricity consumption.","96a45d77":"**Interpretation of regression results for Panther**\n\n**Regression Model 1:**\n\n40.3% of the variation of electricity consumption can be explained by the four variables***(building age, building size, building type, curriculum type (i.e. whether it is a summer (multi-session) term).***\n\nOn average,\n- For every one year increment in building age, 0.012 kWh\/degree hour less electricity is used daily\n- For every 1 sqm\/1000 increase in floor area, electricity consumption increases by 0.248 kWh\/degree hour\n- Research buildings consume 1.123 kWh\/degree hour more electricity than classrooms\n- Multi-session terms consumes 0.534 kWh\/degree hour less electricity than single-session terms daily\n\nAll the results are statistically significant.\n\nThe results of the regression analysis are consistent with the findings of our previous analysis.","73e9b0aa":"## 3.5. Is this trend consistent among other universities? - Cockatoo\n\nTo see if this trend holds true, the team analysed another university that has a multi-session summer term. The selected university is Cornell University (Cockatoo), located in Cornell, New York. Similar analyses that were conducted for Panther were conducted for Cockatoo to determine if the same trend (i.e. that multi-session terms use less energy) can be observed.","75dd13a2":"> ### **3.2.4. Anomaly Observed & Explained** \n\nFrom the figure above, an anomaly for the daily sum of HDHs and CDHs can be observed, with the sum of HDHs and CDHs being extremely high (>250 hours).\n\nUpon researching, the day corresponds to 8 January 2017. This coincides with the December 2017-January 2018 North American cold wave. This extreme weather event recorded extremely low temperatures, causing Panther to experience temperatures as low as 2\u00b0C on this day.\n\nMore details can be found at: https:\/\/www.currentresults.com\/Yearly-Weather\/USA\/FL\/Orlando\/extreme-annual-orlando-low-temperature.php","653e51b4":"**Interpretation of regression results for Cockatoo**\n\n**Regression Model 2:**\n\n37.3% of the variation of electricity consumption can be explained by the four variables***(building age, building size, building type, curriculum type (i.e. whether it is a summer (multi-session) term).***\n\nOn average,\n- For every one year increment in building age, 0.011 kWh\/degree hour less electricity is used daily\n- For every 1 sqm\/1000 increase in floor area, electricity consumption increases by 0.168 kWh\/degree hour\n- Research buildings consume 0.645 kWh\/degree hour more electricity than classrooms or student union\n- Student union buildings consume 0.209 kWh\/degree hour less than research or classroom\n- a summer day consume 1.535 more electricity than an otherwise season.\n\nAll the results are statistically significant.\n\nThe results of the regression analysis are consistent with the findings of our previous analysis.","8275a049":"## 3.4. Conclusion - Energy consumption variation between the various types of terms in Panther\n\nBy comparing the results above, it is clear that education buildings in Panther uses lesser energy during the Summer term.\n\n\n **This finding aligned with the team's hypothesis that multi-session terms would use lesser energy than single-session terms.**  \n\nAnalyzing a single university is not enough to determine if our hypothesis holds true. As such, another university with a similar academic calendar was analyzed.\n","efcfe57d":"> ### **3.5.1. Understanding Cockatoo's academic calendar**","ec10d64e":"## 5.3. Conclusion - Building size and effect on electricity consumption\n\nAnalysis of the line plots above informs us of the following:\n* **Buildings with a larger floor area generally consume more energy**\n    * This can be seen from the general congregation of the red lines (representing buildings with large floor areas) at the upper parts of the plot, while the blue lines (representing buildings with small floor areas) are generally at the lower parts of the plot\n    * This is consistent with the positive moderate correlation that was observed in the scatter plots\n* **Different building sizes may result in different extents of change in consumption between the terms**\n    * This can be seen from the different steepness of the slopes between the terms. Generally, the red lines have steeper slopes, thus greater extents of change in consumption between the terms\n    * On the other hand, the blue lines are generally rather flat, indicating that the consumption between the terms for smaller buildings do not change that much\n\nAs seen from the results above, when implementing a multi-session term structure, universities that consist of many small buildings will see less of a difference in electricity consumption between the different terms. A university that has more larger buildings would be able to see a larger difference.\n","c6cc23b8":"# **2. Preparation for the analyses**","ffac28c1":"With occupancy behaviour in mind, this project aims to investigate the effects of universities' academic calendar on the electrical usages of educational buildings. The team has identified two main methods that could potentially reduce consumption levels:## 1.2. Objectives\n\nWith occupancy in mind, this project aims to investigate the effects of universities' academic calendar on the electrical usages of educational buildings. The team has identified two main methods that could potentially reduce consumption levels:\n\n\n\n1. Switching from **single-session terms to multi-session terms** ([Section 3 - Single-session vs Multi-session terms](#3.-Single-session-vs-Multi-session-terms))\n2. Having a **later starting date** for the Fall term ([Section 8 - Adjustment to semester start dates](#8.-Alternative-Solution---Adjustment-to-Semester-Start-Date))\n\nThe effects of having these different configurations of calendar schedules will be investigated in the sections below.\n\nGiven the complexity of these educational campuses, factors such as building usage type, building size and building age were subsequently analysed to give a better understanding on the impacts on energy consumption. By providing a better understanding through detailed analyses, the results could potentially aid in decision-making for universities that are considering a change in the acadamic calendar to reduce consumption levels.","3740e1b0":"## 7.2. Constructing an OLS model for Panther","c22fe68d":"# **6. Building age vs electricity consumption**\n\n<div align=\"center\">\n    <img src=\"https:\/\/image.freepik.com\/free-vector\/city-downtown-concept_1284-12699.jpg\" width=\"500\" \/>\n<\/div>\n\nApart from building type and size, the team also checked against the building age for any possible effect on electricity consumption.","3231bc60":"# **9. Final Conclusion**\n\n<div align=\"center\">\n    <img src=\"https:\/\/image.freepik.com\/free-vector\/electric-power_1284-19036.jpg\" width=\"400\" \/>\n<\/div>\n\n\n**1. Does an university's curriculum structure have any impact on the electrical usages of educational buildings? If so, which structure\/setting is recommended to reduce energy consumption?**\n\nCurrent findings:\n* **Curriculum structure**\n    * Multi-session lesson terms uses lesser energy than fixed-lesson terms\n\n\n* **Building type**\n    * Research has consistently higher electricity consumption than classroom for the entire year\n    * Building type has an effect on the extent of change in consumption between the terms\n\n\n* **Building size**\n    * Building size has an impact on eletricity consumption, with smaller building sizes having lower energy consumption\n    * Larger buildings experience a greater extent of change in consumption between the terms\n    \n    \n* **Building age**\n    * Building age does not have a very noticable impact on eletricity consumption as compared to building type and building size\n\n\n**Answer: Yes, a university curriculum structure does have an impact on electrical usage on educational building. However, the degree of impact varies, with many factors coming into play.**\n\n**2. Does having a later starting date for the Fall term result in lowered electricity consumption?**\n\nCurrent findings:\n* Comparisons done between Crow and Cockatoo show that having a later starting date does not necessarily reduce consumption levels\n* However, many factors could not be normalized before the comparison\n* Further analysis into these factors could not be conducted due to the lack of data for Crow\n* As such, results from the comparison should only be taken with a grain of salt\n\n**Answer: Further research is required to determine the feasibility of adjusting term starting dates to achieve energy saving** ","29ebbf6d":"**An alternative visualization of the annual air temperature distribution**\n\nA ridgeline graph is plotted below to give a better understanding on the **distribution of temperatures per month** for Panther.\n\nA Ridgelineplot, formerly Joyplot, allows users study the distribution of a numeric variable for several groups. In order to do so, Seaborn FacetGrid object with kdeplots is required to generate a ridgeline graph. The code below is adapted from: https:\/\/www.python-graph-gallery.com\/ridgeline-graph-seaborn","0edd1061":"> ### **3.1.2. Understanding Panther's annual air temperature fluctuations** \n\nLocated in Florida with a sub-tropical climate, Panther is expected to have slight fluctuations in air temperature throughout the year. Florida experiences hot summers with temperatures peaking in August and mild winters with temperatures dipping in January and December. ","6f50bd05":"# **4. Type of education buildings and its effects on energy consumption**\n\n<div align=\"center\">\n    <img src=\"https:\/\/img.freepik.com\/free-vector\/high-school-isometric-people-composition-with-class-room-interior-characters-female-teacher-students-illustration_1284-27270.jpg?size=626&ext=jpg\" width=\"360\" \/>\n    <img src=\"https:\/\/image.freepik.com\/free-vector\/isometric-biological-science-laboratory-template_1284-40638.jpg\" width=\"300\" \/>\n<\/div>\n\nThe complexity in energy consumption for higher educational campuses lies in the various types of building uses within these campuses. Taking for instance, the electricity usage of research buildings may not strictly follow the academic calendar since certain research and experiments have to be done on a daily basis. As such, the consumption in research buildings could potentially be similar throughout the year.\n\nWith this, the team looks into the different types of education buildings and their electricity consumption in each term.","f73e3c15":"# **Building Data Genome Project 2 (BDG2) - Task 2**\n\nIn reference to the task \"[what are the factors that influence building energy consumption and how can we identify them?](https:\/\/www.kaggle.com\/claytonmiller\/buildingdatagenomeproject2\/tasks?taskId=5939*)\", the team investigates the possible factors that influence building electricity consumption of several selected educational buildings within universities. By analysing the findings, the team will then provides recommendations that may improve the consumption levels.","57e1c0b4":"> ### **3.3.1. Baseline Reference - Visualizing unnormalized electricity data**\n\nServing as a baseline reference, the figure below shows the unnormalized electricity data for 2017","27c5ff95":"## 4.1. Visualizing weather-normalized electricity consumption for each education type:  Research & Classroom\n\nThe major types of education buildings in both Panther and Cockatoo are research laboratories and classrooms.","1e10f980":"> ### **3.3.3. Visualizing the difference in electricity consumption across the terms**\n\nAlthough it is easily observable from the figure above that the summer term uses lesser energy than the other two terms, a boxplot is used to visualize the summarized the values for each term. This allows for a clearer and more definitive comparison, since the consumption levels fluctuate a lot throughout the days.\n","a5ffd0f6":"> ### **3.1.1. Understanding Panther's academic calendar**\n\nTo better understand Panther's academic calendar, the start and end dates of each term are visualized below.\n","3fd47167":"## 5.1. Correlation between building size and electricity consumption for Panther and Cockatoo\n\nUsing a joint plot which combines a scatter plot and histogram for each axis, the team analysed the correlation between building size and the weather-normalized electricity consumption values. A moderate to strong correlation between building size and electricity consumption can be observed, with Panther having a correlation coefficient of 0.666 and Cockatoo having a correlation coefficient of 0.805.","0297421b":"## 7.3. Constructing an OLS model for Cockatoo","2d9d985d":"## 8.3. Visualizing Crow and Cockatoo's EUI over the fall term\n\nThe EUI of both universities is visualized for the Fall term below to study the trends of EUI.","7463b405":"HELLO, EVERYONE! Welcome to this Kaggle notebook!\n\nThis notebook was created by **Group 6** for the module **BPS5229**. \n\nGroup members:\n* Denise Huang\n* Shermaine Neo\n* Chen Shuting\n* Fan Baoli\n* Ting Shi An","276f4781":"**High condition number**\n\nThe initial OLS model in Section 7.2 has an extremely high condition number. This may be due to the high sensitivity in the fitted parameters when all the data are far to one side of x = 0, thus resulting in a high condition number. Notice that the sqm values are very high compared with other variables. To reduce the high-condition number, the sqm column was rescsaled with the formula: sqm_scaled = sqm\/1000. After running the regression with the sqm_scaled column, the WARNING disappears.\n\nReference: https:\/\/stats.stackexchange.com\/questions\/243000\/cause-of-a-high-condition-number-in-a-python-statsmodels-regression","2d14c6c3":"> ### **8.1.1. Understanding Cockatoo and Crow's Academic Calendar**\n\nThe universities have a two week difference between the start of their Fall term. Using this, the team plans to investigate the difference in electricity consumption during the Fall term.\n","2d31eb61":"## 3.2. Normalizing electricity consumption with air temperature\n\nIt is widely understood that air temperature is a factor that affects electricity consumption, where extreme temperatures can potentially cause sharp increase in electricity usage.\n\nTo ensure a fair comparison of electricity consumption between the educational buildings throughout the year, the team normalized the electricity consumption with air temperature. This is done using the concept of Heating Degree Hours and Cooling Degree Hours.","01b01f60":"# **5. Building size vs electricity consumption**\n\n<div align=\"center\">\n    <img src=\"https:\/\/image.freepik.com\/free-vector\/isometric-university-big-composition-with-campus-yard-lanes-houses-with-shadows-football-playgro_1284-16290.jpg\" width=\"500\" \/>\n<\/div>\n\n\nAfter considering the type of buildings, another potential factor that may be affecting electricity consumption is the floor area of the buildings.","bf98689f":"> ### **3.2.2. Calculating the sum of HDH and CDH for Panther**\n\nUsing the daily sum of HDH & CDH, the team is able to normalize Panther's electricity consumption.","f0152bcc":"## 3.6. Conclusion - Findings from Cockatoo are different from Panther's\n\nIt can be seen from the figures above that unlike Panther, electricity consumption for Cockatoo appears to be higher during the multi-session term as compared to the single-session terms. **This finding different from the team's hypothesis.** \n\nThere are many other variables that come into play when analyzing electricity consumption, which could cause the difference this difference in findings between Panther and Cockatoo. As such, the team decided to analyze further, looking at other factors such as building type, building size, and building age.","038713be":"<div align=\"center\">\n    <img src=\"https:\/\/www.evolutioninfosystem.com\/wp-content\/uploads\/2019\/09\/booking-a-schedule-isometric-vector-illustration.jpg\" width=\"600\" \/>\n<\/div>","6525817e":"## 5.2. Effects of building size on changes in consumption between the terms\n\nAs it has been established that building size could have an effect on energy consumption, the team went on to visualize the extents of change in consumption between each term for buildings of different sizes.\n","cb7af883":"**Multicollinearity issue**\n\nThere is a WARNING of a possible multicollinearity problem. To check this issue, the correlation matrix of independent variables was visualized. The matrix confirms that there is no strong correlation between the independent variables.","6791a195":"> ### **3.5.3. Visualizing Cockatoo's normalized electricity data**","ca818d1d":"## 8.1. Selecting universities for comparison\n\nFor this analysis, two universities with the same climate (ASHRAE Climate Zone 6A), but different start times for the Fall term were chosen. The universities are:\n\n**Cornell University**\n*   Located in Cornell, New York\n*   Site_ID = Cockatoo\n*   Fall term starts earlier (22 Aug 2017)\n\n\n\n**Carleton University**\n*   Located in Ottawa, Ontario\n*   Site_ID = Crow\n*   Fall term starts later (9 Sep 2017)\n\nThe locations of these two universities are shown below.","435bd416":"> ### **4.1.2. Plotting the time-series of electricity consumption for each education type**\n\nWith the time-series plotted below, the team observed that both universities exhibit different trends for the various types of education buildings.\n\n\n\n*   For Panther, both the classroom and research types exhibit a rather gentle decrease during the summer term.\n*   However in Cockatoo, the electricity consumption for research laboratories peak during the summer term, with the other two usage types only increase slightly.\n\n  \n\nThese trends can be clearly observed in section 4.2 as well.","205882fc":"## 4.3. Conclusion - Electricity consumption of different building types\n\n**Research buildings consume more electricity than classrooms**\n\nFrom the analyses, it. is evident that research buildings consistently use more electricity than classroom buildings for the entire year.\n\nThis finding is plausible as one will expect research buildings to have more sophisticated technology and equipment which require more electricity to operate.\n\n**Usage of research buildings may not be independent of the academic calendar**\n\nThe team expects that research buildings will have a rather consistent electricity usage throughout the year, since these buildings may have critical equipment that are operating 24\/7 regardless of the time of the year. However, results from Panther and Cockatoo show otherwise; that there are changes in electricity consumption between the terms.\n\n**Usage type and the academic calendar**\n\nOccupancy behaviour of the various buildings may differ across different universities, depending on the academic requirements based on the curriculum structure of the term.\n\nIn Panther, the Spring, Summer and Fall terms are seen as 'normal' school terms where it is comupulsory for students to attend classes to fulfil their academic requirement. In Cockatoo, however, the Summer term is an optional semester, where students can decide if they would like to take lessons during this term to lighten their workload over the other two terms.\n\nIt is speculated that as a result of Cockatoo's optional semester, the number of lessons occurring during Cockatoo's Summer term could be much lower as compared to Panther, which allows the staff and students of Cockatoo to avail themselves for more research work, therefore resulting in a large peak in electricity consumption for the research buildings. Furthermore, it is also possible that the optional semester resulted in an increase in the electricity consumption for student union buildings as students are now more available to conduct activities in those buildings.\n\nHowever the increase in the electricity consumptions for classrooms cannot be easily explained. The team can only speculate that it is due to an increase in student-organized activities using the classrooms as venues, hence the increase in electricity consumption.\n\nAll-in-all, for universities that are considering to undertake a multi-session term structure, it is crucial that careful considerations are given to the type of buildings and the occupancy-behavior related factors such as the universities academic requirements are accounted for prior to the implementation.\n\n----\n\nA similar finding can be seen in the paper [*'Reducing university energy use beyond energy retrofitting: The academic calendar impacts'*](https:\/\/doi.org\/10.1016\/j.enbuild.2020.110647). The paper investigated the changes in energy use between a semester and trimester schedule. They observed that when the university switched to a trimester schedule, energy use in research buildings increased as the lessons were more spread out, thus the professors and students had more time to conduct research.\n\n\n\n","789aa9b5":"## 6.2. Correlation between building age and electricity consumption for Panther and Cockatoo\n\nSimilar to the previous section, a jointplot was used to understand the correlation between building age and electricity for both universities below.\n\nFrom the plot below, a weak to moderate correlation between building age and electricity consumption can been seen, with Panther having a correlation coefficient of -0.348 and Cockatoo having a correlation coefficient of 0.129.","c7810603":"## 8.4. Conclusion - Ajustment start date\n\nAlthough the team expected Crow (whose Fall term starts later) to have a lower mean electricity consumption, the results show otherwise.\n\nThis could be due to many other factors that cannot be normalized before comparison. This includes factors such as building use type and building age. However, the team is unable to investigate these factors further as Crow does not provide information on the specific subprimary function and age of the buildings.\n\nAnother possible reason for the above results could be that the difference in electricity consumption is only more prominent for climates with warmer summers. For Crow and Cockatoo, air temperatures peak in July, and have already started to decrease during the start of their Fall terms in late August.\n\n**Although the team is not able to give a conclusive answer, the adjustment start date may be worth looking into, for universities planning for semester starting dates**\n","ff8c8dac":"## 7.1. Identifying dates that fall within the Summer term\n\nThe summer terms dates are first identified and defined","47972135":"# **3. Single-session vs Multi-session terms**\n\n<div align=\"center\">\n    <img src=\"https:\/\/image.freepik.com\/free-vector\/isometric-university-education-concept-with-professor-giving-lecture-students-auditorium-isolated_1284-39075.jpg\" width=\"500\" \/>\n<\/div>\n\nTo investigate the differences in electricity consumption during single-session and multi-session terms, the universities **Panther** and **Cockatoo** were selected. The map below shows the locations of these two universities.","111d80a7":"> ### **3.2.1. Heating Degree Hours (HDHs) & Cooling Degree Hours (CDHs)**\n\nHDHs and CDHs are measurements used to assess the heating and cooling needs during different seasons of the year. It is commonly used to normalize buildings' energy consumption to compare buildings from different climatic zones or to compare a building across different seasons.\n\nAlthough the concept of heating and cooling degree days is more common, the team uses HDHs and CDHs instead to fully utilise available hourly data so that finer trends on a daily (rather than monthly) basis can be captured.\n\nHDH and CDHs are calculated relative to a base temperature, where it's assumed to require no heating or cooling. For the United States, the commonly used base temperature is 18.3\u00b0C.\n\nThe steps to normalize electricity consumption with air temperature are as follows:\n\n\n1.   For each hour, calculate the absolute difference between the air temperature and the base temperature. Temperatures above the base temperature are CDHs since cooling is required, while temperatures below the base temperature as HDHs since heating is required.\n2.   For each day, obtain the sum of HDHs and CDHs.\n3.   Divide the daily energy consumption by the daily sum of HDHs and CDHS.\n\n\nAs seen from the annual air temperature trend in Panther, the site mainly requires cooling throughout the year since it has a higher range of air temperatures (> 18.3\u00b0C).","a16f8b29":"> ### **8.3.2. Plotting a time-series for the fall term in Crow and Cockatoo**","7edc0600":"> ### **7.3.1. Displaying the results of Cockatoo's OLS model**","a81f46ba":"## 8.2. Normalizing electricity consumption with floor area\nAs per the analysis earlier in section 5, the floor area of a building has influence on the amount of electricity consumed. Generally, a building with a larger floor area would consume more electricity.\n\nTo ensure a fair comparison between the buildings, the electricity consumption of each building is thus normalized with the floor area of each building. From this, the energy use intensity (EUI) of each building can be obtained.","ce04ab4f":"## 1.1. University academic calendar schedules and its effects on electricity  consumption\n\nTertiary educational campuses are unique in terms of usage and consumption as they follow a certain schedule each year - the **university's academic calendar**. Futhermore, a university campus consists of different building uses and types, and this further adds to the complexity of the energy consumption levels. \n\nThe common measures taken to reduce energy consumptions are usually focused on dealing with physical aspects of the building, such as efficient management of heating, cooling or lighting demand, using more energy-efficient systems or offsetting the consumption with on-site renewable energy generation. As a result, more behavioural orientated factors such as occupancy factors are often overlooked and not taken into account.\n\n\n\n\n","d6d5d6b7":"> ### **3.2.3. Visualizing Panther's Sum of Heating And Cooling Hours in 2017**\n\nA visualization of total sum of HDH & CDH daily for 2017 is seen below. The graph peaks in the summer and falls during the winter as the site experiences hot summers but rather mild winters.","1d24c75a":"## 2.1 Importing and installing relevant libraries\n\nFirst, the notebook is set up with all the relevant libraries installed and imported for the analyses.","583689e8":"To further investigate the cause of the WARNING message, a regression model with a single independent variable was used for problem diagnosis. The result shows that the WARNING message is still present when sqm is used as the single independent variable. Since there is only one independent variable, it can be ruled out that multicollinearity is causing this WARNING.","1cd8a805":"> ### **3.2.5. Obtaining Panther's electricity data**\n\nThe follow filters were applied on the intial electricity dataset to obtain the relevant data:\n\n*   Only containing buildings from Panther\n*   Only data from 2017-01-01 onwards\n*   Only contains education buildings within Panther\n\nThe resulting data was also resampled to the daily mean.","358a4519":"> ### **8.3.1. Calculating the average EUI For education buildings in Crow and Cockatoo**","f6ee6370":"# **8. Alternative Solution - Adjustment to Semester Start Date**\n\n<div align=\"center\">\n    <img src=\"https:\/\/mcvt-comet-37.fra1.cdn.digitaloceanspaces.com\/\/previews\/69237\/thumb_69237.webp\" width=\"500\" \/>\n<\/div>\n\nFor certain universities, adopting a multi-session lesson term may not be feasible. An alternative solution to reduce electricity consumption is to adjust the semester start dates. This could be especially effective for the Fall term, where the semester could either start earlier during the summer period, or start later when the temperatures start to fall\n\nIn fact, [a bill has been passed in Arizona](https:\/\/www.azcentral.com\/story\/news\/local\/arizona\/2015\/02\/05\/arizona-school-bill-labor-day-start-date\/22940077\/) that mandates schools (excluding higher educational institutions) to start only after the first Monday in September.\n","c6417bd3":"**Differing degrees of change**\n\n\nThe line plot below makes it clearer that in Panther, both classroom and research types of buildings exhibit a similar degree of decrease from the Spring to Summer term, and a similar degree of increase from the Summer to Winter term.\n\nOn the other hand, in Cockatoo, the consumption of research laboratories peak drastically during the Summer as compared to the other two types of buildings.","7c7c5e34":"> ### **3.3.2. Visualizing normalized electricity data**\n\nTo understand the electricity consumption across the terms, the weather-normalized electricity for Panther's Education building is visualized in the figure below.","4ef63b6b":"> ### **7.2.2. Displaying the results of Panther's OLS model**","78209c95":"## 1.3. Hypotheses\n\nOur hypotheses are as follows:\n\n**1. Multi-session terms will have a lower electricity consumption than single-session terms**\n\nA multi-session academic term is expected to have lower electricity consumption as compared to single-session term mainly due to the lower concentration of student in any given space. As a result, shaving the peak-load and spreads the electrical load across different days.\n\nTo analyze this hypothesis, the team will be investigating two different universities, \"Panther\" and \"Cockatoo\".\n\n**2. Having a later starting date for the Fall term will result in a lower electricity consumption**\n\nStarting later would mean that a smaller proportion of the lessons are held during the summer period, where temperatures are higher. As such, starting the term only after the temperatures have lowered would result in lower electricity consumption.\n\nTo analyze this hypothesis, the team will be investigating the consumption trends of \"Cockatoo\" and \"Crow\".\n\n\n\n","9cea8125":"## 3.1 The first selected university - Panther\n\nThe first selected university for this section of analysis is the **University of Central Florida (UCF)**, located in Orlando, Florida. Its site ID in the BDG2 dataset is **Panther**. UCF was chosen as it has two distinct curriculum structures throughout the year.\n\nDuring **Spring** and **Fall**, the university offers ***fixed-dates single-session lesson terms***.\nThis means that all lessons are only offered once during the stipulated dates for the semester, and students attend lessons throughout the term.\n\n*   Spring (2017): 9th January - 2nd May\n*   Fall (2017): 21th August - 9th December\n\n\nHowever during **Summer**, the university offers a ***multi-session lesson term***. Instead of having lessons throughout the Summer term, students are able to choose one or more sessions as long as they are able to fufill their academic requirements. \n\n*   Summer (2017) Session A: 15th May - 23rd June\n*   Summer (2017) Session B: 26th June - 4th August\n*   Summer (2017) Session C: 15th May - 4th August\n*   Summer (2017) Session D: 15th May - 15th July\n\n","df02bc43":"## 6.3. Effects of building age on changes in consumption between the terms\n\nAlthough there is only a weak to moderate correlation between building age and electricity consumption, the relationship between the extent of change in consumption and building age was still analyzed using the line plots below.","2cf68a7d":"## 2.2. Importing and reading raw data files\n\nWith the libraries imported, the team then imports the relevant raw data files. The electricity dataset has been cleaned, having outlier values removed and measurement units normalized.","0a3da9e5":"> ### **3.2.6. Normalizing Panther's electricity data**\n\nThe electricity usage of education buildings within Panther is normalized using the sum of HDH and CDHs to obtain weather-normalized data.","84b025cc":"## 6.1. Normalizing the weather-normalized electricity consumption with floor area\n\nSince the buildings have different floor areas, it is best to get the energy use intensity (EUI) of each building before comparing their building age.","3d0d1159":"> ### **8.1.2. Understanding Cockatoo and Crow's annual air temperature**\n\nSince the two sites are in the same climate zone, there exists only slight differences in air temperature. The annual air temperature for both Crow and Cockatoo are shown in the figure below.","aeb79fdf":"> ### **3.5.4. Visualizing the difference electricity consumption across the terms**\n\nIt can be observed from the line plot above that the summer term has rather high consumption levels, showing the opposite trend as what was observed in Panther. The difference between the terms can be better compared using the box plot below.","ecc3651b":"> ### **7.2.1. Resolving the problem of multicollinearity and a high condition number in the model above**"}}