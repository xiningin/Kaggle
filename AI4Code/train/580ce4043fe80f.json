{"cell_type":{"63f3320b":"code","77a725c4":"code","8c7f19d4":"code","1e05dcc4":"markdown","e1daa652":"markdown","19c3736b":"markdown","3ee00d96":"markdown","7bf4e2bf":"markdown"},"source":{"63f3320b":"import os\nimport pandas as pd\n\ndef generate_data(folder, sect):\n\n    print(\"Collecting data.... \", end='')\n    data = []\n    count = 0\n    \n    for file in os.listdir(folder):\n        if file == sect:\n            for file in os.listdir(folder + sect):\n                try:\n                    text = ''\n                    name = file\n                    myfile = open(folder+sect+'\/'+file, \"r\")\n                    text = myfile.read()\n                    mylist = [name, text]\n                    count +=1\n                    data.append(mylist)\n                except:\n                    continue\n\n    print(\"collected!\")\n    print(str(count) + \" text files found in \"+ sect + \" folder.\")\n    print(\"Data generated\")\n    return (data, count)","77a725c4":"def match_data(data_text, data_summary, count, name):\n    \n    print(\"Creating dataframe.....\", end='')\n    df_text = pd.DataFrame(data_text, columns = ['File', 'Text'])\n    df_sum = pd.DataFrame(data_summary, columns = ['File', 'Summary'])\n    print(\"DONE!\")\n    \n    print(\"Joining dataframes.....\", end='')\n    df_final = pd.merge(df_text, df_sum, on='File')\n    print(\"DONE!\")\n    \n    df_final.to_csv(name + '.csv')\n    print(name+ \".csv Saved\")\n    \n    return df_final","8c7f19d4":"directory_text = '\/kaggle\/input\/bbc-news-summary\/BBC News Summary\/News Articles\/'\ndirectory_sum = '\/kaggle\/input\/bbc-news-summary\/BBC News Summary\/Summaries\/'\n\ndata_business, count = generate_data( directory_text, 'business')\ndata_business_summary, count = generate_data( directory_sum, 'business')\ndf_business = match_data(data_business, data_business_summary, count, \"business\")\n\ndata_entertainment, count = generate_data( directory_text, 'entertainment')\ndata_entertainment_summary, count = generate_data( directory_sum, 'entertainment')\ndf_entertainment = match_data(data_entertainment, data_entertainment_summary, count, \"entertainment\")\n\ndata_politics, count = generate_data( directory_text, 'politics')\ndata_politics_summary, count = generate_data( directory_sum, 'politics')\ndf_politics = match_data(data_politics, data_politics_summary, count, \"politics\")\n\ndata_sport, count = generate_data( directory_text, 'sport')\ndata_sport_summary, count = generate_data( directory_sum, 'sport')\ndf_sport = match_data(data_sport, data_sport_summary, count, \"sport\")\n\ndata_tech, count = generate_data( directory_text, 'tech')\ndata_tech_summary, count = generate_data( directory_sum, 'tech')\ndf_tech = match_data(data_tech, data_tech_summary, count, \"tech\")","1e05dcc4":"## Final step: Run the functions","e1daa652":"## Results\nYou can directly download the csv files from the output section of this notebook\nThanks!","19c3736b":"## Part 1 : Collecting data\nWe will collect all the data and store it in a list format.\n\nThis function is completely reusable for any data folder, just make changes to listdir\n\nIt will collect the summary data and text data in different lists and return it. ","3ee00d96":"# Data to CSV \/ dataframe\nHey guys\nI have created this kernel to convert the data into a csv\/ dataframe format so that it becomes easy to perform learning on it.\nIt will be done in 3 parts\n1. Collect data\n2. Match the data\n3. Convert data into csv file","7bf4e2bf":"## Part 2 and 3 : Match Data and convert to csv file\nAfter collecting both the summary data and text data, we need to \n1. Convert the lists into dataframes\n2. Join the two dataframes on file name\n3. Save it as csv files\n\nThis function is completely reusable for any data folder, just make changes to listdir"}}