{"cell_type":{"216079ad":"code","1020e3d0":"code","0fed827e":"code","0353e9cb":"code","24c4dda7":"code","af96b683":"code","206a67a7":"code","5e338098":"code","8a99a8fc":"code","470fa25e":"code","c66d6623":"code","ccff8720":"code","3c6949a8":"code","388f670c":"code","53a5c3c6":"code","7c7dd19a":"code","90fe073c":"code","3fda5a4f":"code","551a6ce7":"code","dd783c53":"code","eccab61c":"code","35ab3fb0":"code","b640ff91":"code","30d8d8df":"markdown","17321f0d":"markdown"},"source":{"216079ad":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1020e3d0":"import sys, gc\nprint(sys.version)","0fed827e":"pd.__version__","0353e9cb":"import sys\n!cp ..\/input\/rapids\/rapids.0.16.0 \/opt\/conda\/envs\/rapids.tar.gz\n!cd \/opt\/conda\/envs\/ && tar -xzvf rapids.tar.gz > \/dev\/null\nsys.path = [\"\/opt\/conda\/envs\/rapids\/lib\/python3.7\/site-packages\"] + sys.path\nsys.path = [\"\/opt\/conda\/envs\/rapids\/lib\/python3.7\"] + sys.path\nsys.path = [\"\/opt\/conda\/envs\/rapids\/lib\"] + sys.path \n!cp \/opt\/conda\/envs\/rapids\/lib\/libxgboost.so \/opt\/conda\/lib\/","24c4dda7":"train = pd.read_csv('\/kaggle\/input\/riiid-test-answer-prediction\/train.csv',\n                   usecols=[7, 8, 9],\n                   dtype={\n                          'answered_correctly':'int8',\n                          'prior_question_elapsed_time': 'float32',\n                          'prior_question_had_explanation': 'boolean'}\n                   )\ntrain.shape","af96b683":"time_mean = train.prior_question_elapsed_time.mean()\ntime_since_median = train.prior_question_elapsed_time.median()\ntime_total = train.prior_question_elapsed_time.sum()\ntime_cnt = train.prior_question_elapsed_time.notnull().sum()\nprint (time_mean, time_since_median, time_total, time_cnt)\n\nprint( 'global mean:', 2513876000000.0 \/ train.shape[0] )\nprint( 'not-null mean', 2513876000000.0 \/ time_cnt )","206a67a7":"import cudf\nprint( cudf.__version__ )","5e338098":"train_cudf = cudf.read_csv('\/kaggle\/input\/riiid-test-answer-prediction\/train.csv',\n                   usecols=[7, 8, 9],\n                   dtype={\n                          'answered_correctly':'int8',\n                          'prior_question_elapsed_time': 'float32',\n                          'prior_question_had_explanation': 'boolean'\n                   }\n                   )\n\ntrain_cudf.shape","8a99a8fc":"time_mean = train_cudf.prior_question_elapsed_time.mean()\ntime_since_median = train_cudf.prior_question_elapsed_time.median()\ntime_total = train_cudf.prior_question_elapsed_time.sum()\ntime_cnt = train_cudf.prior_question_elapsed_time.count()\nprint (time_mean, time_since_median, time_total, time_cnt)\n\nprint( 'global mean:', 2513876000000.0 \/ train_cudf.shape[0] )\nprint( 'not-null mean', 2513876000000.0 \/ time_cnt )","470fa25e":"print(train['prior_question_elapsed_time'].head(12))","c66d6623":"print(train_cudf['prior_question_elapsed_time'].head(12))","ccff8720":"train.dtypes","3c6949a8":"train_cudf.dtypes","388f670c":"print('pdas',train.prior_question_elapsed_time.sum() )\n\nprint('cudf',train_cudf.prior_question_elapsed_time.sum() )\n\ntmp = train['prior_question_elapsed_time'].values\ntmp = tmp[~np.isnan(tmp)]\nprint('nup1',np.sum(tmp))\n\ntmp = train['prior_question_elapsed_time'].values\nprint('nup2',np.nansum(tmp))","53a5c3c6":"print('pdas',train.prior_question_elapsed_time.mean() )\n\nprint('cudf',train_cudf.prior_question_elapsed_time.mean() )\n\ntmp = train['prior_question_elapsed_time'].values\ntmp = tmp[~np.isnan(tmp)]\nprint('nup1',np.mean(tmp))\n\ntmp = train['prior_question_elapsed_time'].values\nprint('nup2',np.nanmean(tmp))","7c7dd19a":"train.iloc[:605].prior_question_elapsed_time.cumsum().tail(10)","90fe073c":"train_cudf.iloc[:605].prior_question_elapsed_time.cumsum().tail(10)","3fda5a4f":"train.iloc[:605].prior_question_elapsed_time.tail(10)","551a6ce7":"train_cudf.iloc[:605].prior_question_elapsed_time.tail(10)","dd783c53":"print( train.iloc[:12].prior_question_elapsed_time )","eccab61c":"(37000.0+55000.0+19000.0+11000.0+5000.0+17000.0+17000.0+16000.0+16000.0+17000.0+22000.0)\/11","35ab3fb0":"print('pdas',train.iloc[:12].prior_question_elapsed_time.mean() )\n\nprint('cudf',train_cudf.iloc[:12].prior_question_elapsed_time.mean() )\n\ntmp = train['prior_question_elapsed_time'].values[:12]\ntmp = tmp[~np.isnan(tmp)]\nprint('nup1',np.mean(tmp))\n\ntmp = train['prior_question_elapsed_time'].values[:12]\nprint('nup2',np.nanmean(tmp))","b640ff91":"print('pdas',train.iloc[:12].prior_question_elapsed_time.sum() )\n\nprint('cudf',train_cudf.iloc[:12].prior_question_elapsed_time.sum() )\n\ntmp = train['prior_question_elapsed_time'].values[:12]\ntmp = tmp[~np.isnan(tmp)]\nprint('nup1',np.sum(tmp))\n\ntmp = train['prior_question_elapsed_time'].values[:12]\nprint('nup2',np.nansum(tmp))","30d8d8df":"# Manually calculate the mean average of top 12 notnull values","17321f0d":"# Top 12 rows in DataFrames"}}