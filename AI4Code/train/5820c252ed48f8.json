{"cell_type":{"4ae2d642":"code","ce9bbae1":"code","1007a8ef":"code","32b25b03":"code","fb10eb48":"code","3468cd29":"code","d9c3a5a6":"code","37a94c45":"code","5066a3a9":"code","c20e0214":"code","1f23d8f1":"code","69fdd53f":"code","5f0c9c10":"code","7144f0fd":"code","c38bf1b6":"code","d882c206":"code","adc80453":"code","07653035":"code","20e7dfdf":"code","79832cf2":"code","7b93901e":"code","6e05691c":"code","e349793a":"code","04eef65b":"code","8e8e3c0e":"code","bd8ceaba":"code","ee9e1aa4":"code","625f2d83":"code","7d429a9e":"code","b905edcd":"code","760cb4fb":"code","4622de9e":"code","24cf6592":"code","05c667a4":"code","82e3f823":"code","f860ebfe":"code","1fb77040":"code","1b0a84ba":"code","799017e5":"code","09c85fcd":"code","1a42d4f8":"code","2b6a7f58":"markdown","08921cd7":"markdown","023b7a0b":"markdown","ab7c4cd9":"markdown","fa09e691":"markdown","36377d81":"markdown","e788012d":"markdown","7732a017":"markdown","df6ceedc":"markdown","2e65c647":"markdown","c9f2fa25":"markdown","fe484cfb":"markdown","d6fb7cdc":"markdown","12cc7de8":"markdown"},"source":{"4ae2d642":"import numpy as np\nimport pylab as pl\nimport pandas as pd\nimport matplotlib.pyplot as plt \n%matplotlib inline\nimport seaborn as sns\nfrom sklearn.utils import shuffle\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import confusion_matrix,classification_report\nfrom sklearn.model_selection import cross_val_score, GridSearchCV\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory","ce9bbae1":"week1 = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/week1.csv')\nweek2 = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/week2.csv')\nweek3 = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/week3.csv')\nweek4 = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/week4.csv')\nweek5 = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/week5.csv')\nweek6 = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/week6.csv')\nweek7 = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/week7.csv')\nweek8 = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/week8.csv')\nweek9 = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/week9.csv')\nweek10 = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/week10.csv')\nweek11 = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/week11.csv')\nweek12 = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/week12.csv')\nweek13 = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/week13.csv')\nweek14 = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/week14.csv')\nweek15 = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/week15.csv')\nweek16 = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/week16.csv')\nweek17 = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/week17.csv')\n\nData= week1.append([week1,week2,week3,week4,week5,week6,week7,week8,week9,week10,week11,week12,week13,week14,week15,week16,week17])\nx = Data.iloc[:, [3]].values","1007a8ef":"Data.head(50)","32b25b03":"Data.groupby(['position']).count()[['playDirection']]\n","fb10eb48":"Data.groupby(['playDirection']).count()[['position']]\n","3468cd29":"Data.groupby(['position']).count()[['playDirection']].plot(kind='bar')\n","d9c3a5a6":"plays = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/plays.csv')\nplays\n","37a94c45":"print(plays.yardlineNumber.unique())\n","5066a3a9":"play_Type = plays['playType'].value_counts()  [:50]\nplt.figure(figsize=(6,4))\nsns.barplot(play_Type.index, play_Type.values, alpha=0.8)\nplt.ylabel('Number of playType', fontsize=12)\nplt.xlabel('playType', fontsize=9)\nplt.xticks(rotation=90)\nplt.show();","c20e0214":"from bokeh.plotting import figure, show\nfrom bokeh.models import ColumnDataSource, FactorRange, FixedTicker\nfrom bokeh.io import output_notebook\nfrom collections import Counter\nfrom bokeh.transform import factor_cmap\nfrom bokeh.palettes import Paired, Spectral\nimport itertools\npd.set_option('display.max_columns', 150)\noutput_notebook()\n\n# define range of yards to go I want to look at\ny2g = range(1,50000)\n\n# filter down the total team_df to just third downs\npossessionTeam = plays.loc[plays['down'] == 3]\n\n# create list of Counters of PlayType for each yard in my rage of interest\npossessionTeam = [Counter(plays.loc[plays['yardsToGo'] == yrd]['playType']) for yrd in y2g]\n\n# x-axis is y2g, defined above\nx = y2g\n\n# extract the sack count for each yard\ny_sack = [play['play_type_sack'] for play in possessionTeam]\n\n# extract the pass count for each yard\ny_pass = [play['play_type_pass'] for play in possessionTeam]\n\n# get the figure ready and put my lines on it\np = figure(title='Third Down Play Type by Yard to Go', toolbar_location=None, tools='',\n           plot_height=350, plot_width=750)\np.line(x, y_pass, color='#2b83ba', legend='Pass', line_width=4)\np.line(x, y_sack, color='#abdda4', legend='Sack', line_width=4)\np.legend.location = 'top_left'\nshow(p)","1f23d8f1":"#drop overtime\nplays = plays[~(plays['quarter'] == 5)]\nprint(len(plays))\n\n#convert time\/quarters\ndef translate_game_clock(row):\n    raw_game_clock = row['GameClock']\n    quarter = row['quarter']\n    minutes, seconds_raw = raw_game_clock.partition(':')[::2]\n\n    seconds = seconds_raw.partition(':')[0]\n\n    total_seconds_left_in_quarter = int(seconds) + (int(minutes) * 60)\n\n    if quarter == 3 or quarter == 1:\n        return total_seconds_left_in_quarter + 900\n    elif quarter == 4 or quarter == 2:\n        return total_seconds_left_in_quarter\n\nif 'GameClock' in list (plays.columns):\n    plays['secondsLeftInHalf'] = plays.apply(translate_game_clock, axis=1)\n\nif 'quarter' in list(plays.columns):\n    plays['half'] = plays['quarter'].map(lambda q: 2 if q > 2 else 1)","69fdd53f":"#filter rows\nplays = plays[(plays.possessionTeam=='ATL') & (plays.down.isin([1.0, 2.0, 3.0, 4.0])) & ((plays.playType=='play_type_sack') | (plays.playType == 'play_type_pass'))]","5f0c9c10":"#filter columns\nplays = plays[['down','yardsToGo','possessionTeam','playType','yardlineSide','yardlineNumber','offenseFormation','passResult','playResult']]\nplays.head()","7144f0fd":"players = pd.read_csv('..\/input\/nfl-big-data-bowl-2021\/players.csv')\nplayers","c38bf1b6":"players['birthDate'] = pd.to_datetime(players['birthDate'])\nplayers","d882c206":"now = pd.Timestamp('now')\nplayers['Age'] = (now - players['birthDate']).astype('<m8[Y]').astype(int)\nplayers\n","adc80453":"players_age = players['Age'].value_counts()  [:50]\nplt.figure(figsize=(6,4))\nsns.barplot(players_age.index, players_age.values, alpha=0.8)\nplt.ylabel('Number of Age', fontsize=12)\nplt.xlabel('Age', fontsize=9)\nplt.xticks(rotation=90)\nplt.show();","07653035":"display(players[[\"weight\",\"collegeName\",\"Age\",]].groupby([\"collegeName\"]).agg([\"max\",'mean',\"min\"]).style.background_gradient(cmap=\"cool\"))","20e7dfdf":"display(players[[\"nflId\",\"height\",\"weight\",\"collegeName\",\"displayName\",\"Age\"]].groupby([\"nflId\",\"collegeName\",\"displayName\",\n                                                        \"Age\", ]).agg(\"sum\").sort_values(by=\"Age\",\n                                                          ascending = False).head(100).style.background_gradient(cmap='autumn'))","79832cf2":"def NFL_2021(x):\n    y = players[[\"nflId\",\"height\",\"weight\",\"birthDate\",\"collegeName\",\"position\",\"displayName\",\"Age\"]][players[\"position\"] == x]\n    y = y.sort_values(by=\"nflId\",ascending=False)\n    return y.head(100)","7b93901e":"NFL_2021(\"CB\")","6e05691c":"NFL_2021(\"SS\")","e349793a":"NFL_2021(\"MLB\")","04eef65b":"NFL_2021(\"OLB\")","8e8e3c0e":"NFL_2021(\"FS\")","bd8ceaba":"NFL_2021(\"WR\")","ee9e1aa4":"NFL_2021(\"QB\")","625f2d83":"NFL_2021(\"TE\")","7d429a9e":"NFL_2021(\"RB\")","b905edcd":"NFL_2021(\"DE\")","760cb4fb":"NFL_2021(\"LB\")","4622de9e":"NFL_2021(\"FB\")","24cf6592":"NFL_2021(\"ILB\")","05c667a4":"NFL_2021(\"DB\")","82e3f823":"NFL_2021(\"S\")","f860ebfe":"NFL_2021(\"HB\")","1fb77040":"\nNFL_2021(\"NT\")","1b0a84ba":"NFL_2021(\"P\")","799017e5":"\nNFL_2021(\"LS\")","09c85fcd":"\nNFL_2021(\"K\")","1a42d4f8":"\nNFL_2021(\"DT\")","2b6a7f58":"Tracking data\nEach of the 17 week[week].csv files contain player tracking data from all passing plays during Week [week] of the 2018 regular season. Nearly all plays from each [gameId] are included; certain plays or games with insufficient data are dropped. Each team and player plays no more than 1 game in a given week.\n\n* time: Time stamp of play (time, yyyy-mm-dd, hh:mm:ss)\n\n* x: Player position along the long axis of the field, 0 - 120 yards. See Figure 1 below. (numeric)\n\n* y: Player position along the short axis of the field, 0 - 53.3 yards. See Figure 1 below. (numeric)\n\n* s: Speed in yards\/second (numeric)\n\n* a: Acceleration in yards\/second^2 (numeric)\n \n* dis: Distance traveled from prior time point, in yards (numeric)\n\n* o: Player orientation (deg), 0 - 360 degrees (numeric)\n\n* dir: Angle of player motion (deg), 0 - 360 degrees (numeric)\n\n* event: Tagged play details, including moment of ball snap, pass release, pass catch, tackle, etc (text)\n\n* nflId: Player identification number, unique across players (numeric)\n\n* displayName: Player name (text)\n\n* jerseyNumber: Jersey number of player (numeric)\n\n* position: Player position group (text)\n\n* team: Team (away or home) of corresponding player (text)\n\n* frameId: Frame identifier for each play, starting at 1 (numeric)\n\n* gameId: Game identifier, unique (numeric)\n\n* playId: Play identifier, not unique across games (numeric)\n\n* playDirection: Direction that the offense is moving (text, left or right)\n\n* route: Route ran by offensive player (text)\n\n\n\n","08921cd7":"# On Progress :)","023b7a0b":"# Counting Age each Players","ab7c4cd9":"## References\n\n* Visualisation Bokeh : https:\/\/j253.github.io\/blog\/fun-with-nfl-stats.html","fa09e691":"##  What does data tell us about defending the pass play? Let's find out.","36377d81":"playType","e788012d":"# players","7732a017":"yardlineNumber unique","df6ceedc":"# plays","2e65c647":"Here we are comparing the weight of players with each Age, first group the collegeName and get the max, min, and mean of weight and age players","c9f2fa25":"When a quarterback takes a snap and drops back to pass, what happens next may seem like chaos. As offensive players move in various patterns, the defense works together to prevent successful pass completions and then to quickly tackle receivers that do catch the ball. In this year\u2019s Kaggle competition, your goal is to use data science to better understand the schemes and players that make for a successful defense against passing plays.\n\n![https:\/\/storage.googleapis.com\/kaggle-competitions\/kaggle\/15696\/logos\/thumb76_76.png?t=2019-10-04-16-17-46](https:\/\/storage.googleapis.com\/kaggle-competitions\/kaggle\/15696\/logos\/thumb76_76.png?t=2019-10-04-16-17-46)\n\nIn American football, there are a plethora of defensive strategies and outcomes. The National Football League (NFL) has used previous Kaggle competitions to focus on offensive plays, but as the old proverb goes, \u201cdefense wins championships.\u201d Though metrics for analyzing quarterbacks, running backs, and wide receivers are consistently a part of public discourse, techniques for analyzing the defensive part of the game trail and lag behind. Identifying player, team, or strategic advantages on the defensive side of the ball would be a significant breakthrough for the game.\n\nThis competition uses NFL\u2019s Next Gen Stats data, which includes the position and speed of every player on the field during each play. You\u2019ll employ player tracking data for all drop-back pass plays from the 2018 regular season. The goal of submissions is to identify unique and impactful approaches to measure defensive performance on these plays. There are several different directions for participants to \u2018tackle\u2019 (ha)\u2014which may require levels of football savvy, data aptitude, and creativity. As examples:\n\n* What are coverage schemes (man, zone, etc) that the defense employs? What coverage options tend to be better performing?\n* Which players are the best at closely tracking receivers as they try to get open?\n* Which players are the best at closing on receivers when the ball is in the air?\n* Which players are the best at defending pass plays when the ball arrives?\n* Is there any way to use player tracking data to predict whether or not certain penalties \u2013 for example, defensive pass interference \u2013 will be called?\n* Who are the NFL\u2019s best players against the pass?\n* How does a defense react to certain types of offensive plays?\n* Is there anything about a player \u2013 for example, their height, weight, experience, speed, or position \u2013 that can be used to predict their performance on defense?","fe484cfb":"## Looking at play type by down\n","d6fb7cdc":"# Players: Position Groupings","12cc7de8":"# Players: Age Groupings"}}