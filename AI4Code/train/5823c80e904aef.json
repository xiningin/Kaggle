{"cell_type":{"1404b6c7":"code","30eb0b62":"code","15ba14a5":"code","45693179":"code","c6d90866":"code","05c852fa":"code","a947d686":"code","2ad1056b":"code","dfe1874f":"code","2d75d9f3":"code","458ca0ef":"code","c86c6f56":"code","abab8673":"code","07a73bc8":"code","d88b9fa1":"code","9afa3565":"code","25062782":"code","da7073f5":"code","d50f991b":"code","6e081472":"code","d873b407":"code","b419e401":"code","e50389f5":"code","ccee4ea9":"code","d7559837":"code","4e963901":"code","9a311bd1":"code","417342d5":"code","57553db3":"code","3e8594e5":"code","ed288b33":"code","22552ed8":"code","56579df2":"code","0f31f05b":"code","e386a8b8":"code","2b34bce1":"code","30f03a19":"code","6164d5bb":"code","a216ef75":"code","d7ab3b6a":"code","d63092cb":"code","8ccb4406":"code","9d26a36c":"code","90caa931":"code","83a087a1":"code","861234f4":"code","64d81a80":"code","16571f05":"code","bd83daab":"code","3868ccc8":"code","130cf530":"code","95abd01d":"markdown","d67d6511":"markdown","29a92644":"markdown","bf35afa1":"markdown","f87603f3":"markdown","87141540":"markdown","4aafa0d3":"markdown","6c812ed2":"markdown","9f7ab440":"markdown","abd8ea35":"markdown","7dce20cd":"markdown","9a3b8c6b":"markdown","9c045ab4":"markdown","e866985b":"markdown","6585e950":"markdown","4f46ac86":"markdown","b94cee30":"markdown","02c6ac01":"markdown","c405467e":"markdown","f27048ac":"markdown","95395064":"markdown","221902ce":"markdown","7dc1803d":"markdown","f5f9f35f":"markdown","e0595364":"markdown","06c32e1e":"markdown","1b2f010b":"markdown","782c0a70":"markdown","eec26228":"markdown","5bd93620":"markdown","9c8bbc0c":"markdown","bed48128":"markdown","010b59a9":"markdown","ebdfe36f":"markdown","83ea2d1b":"markdown","424bc8d9":"markdown"},"source":{"1404b6c7":"import numpy as np\nimport scipy as sp\nimport pandas as pd\nimport seaborn as sns\n#import matplotlib as mpl\nimport matplotlib.pyplot as plt\n#import matplotlib.font_manager as fm\nimport plotly.offline as py\nimport colorlover as cl\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport plotly.graph_objs as go\nimport cufflinks as cf","30eb0b62":"py.offline.init_notebook_mode(connected=True)\npd.set_option('float_format', '{:.4f}'.format)\ninit_notebook_mode(connected=True)\n\ncf.set_config_file(offline=True, world_readable=True, theme='ggplot')\n\n# colab \ud658\uacbd\uc5d0\uc11c \uc0ac\uc6a9\n#mpl.rc('font', family='nanumgothic')\n#mpl.rc('axes', unicode_minus=False)","15ba14a5":"train = pd.read_csv('..\/input\/2019-2nd-ml-month-with-kakr\/train.csv')","45693179":"train.info()","c6d90866":"train[train['id'].duplicated()]","05c852fa":"dataCorr_10 = abs(train.corr(method='spearman')).nlargest(10, 'price').index\ncm = np.array(sp.stats.spearmanr(train[dataCorr_10].values))[0]\nplt.figure(figsize=(15,10))\nsns.heatmap(cm, annot=True, linewidths=.5, yticklabels=dataCorr_10.values, xticklabels=dataCorr_10.values)","a947d686":"price = train['price']","2ad1056b":"price.describe()","dfe1874f":"price.T.iplot(kind='histogram', bins=100, histnorm='percent')","2d75d9f3":"seoul = pd.read_csv('..\/input\/2014-seoul-house-price\/2014.csv')","458ca0ef":"seoul.info()","c86c6f56":"seoul['\ubb3c\uac74\uae08\uc561'] = seoul['\ubb3c\uac74\uae08\uc561'].div(1000)","abab8673":"seoul['\ubb3c\uac74\uae08\uc561'].describe()","07a73bc8":"seoul['\ubb3c\uac74\uae08\uc561'].sort_values().tail(10)","d88b9fa1":"pd.DataFrame({\n    'King County': price,\n    '\uc11c\uc6b8\ud2b9\ubcc4\uc2dc': seoul[seoul['\ubb3c\uac74\uae08\uc561'] < 8000000]['\ubb3c\uac74\uae08\uc561']\n}).iplot(kind='histogram', bins=100, histnorm='percent')","9afa3565":"train['grade'].value_counts().sort_index()","25062782":"grade_df = []\ngrade = train[['grade', 'price']]\ngrade[grade['grade'] == 0]['price'].reset_index(drop=True).values\n\nfor i in range(1, 14):\n    grade_df.append(pd.DataFrame({i: grade[grade['grade'] == i]['price'].values}))\n\ngrade_df=pd.concat(grade_df)","da7073f5":"grade_df.iplot(kind='box', boxpoints='outliers')","d50f991b":"sqft_living = train[['sqft_living', 'price']]\nsqft_living.head()","6e081472":"sqft_living.describe()","d873b407":"f, ax = plt.subplots(figsize=(12, 10))\nfig = sns.regplot(x='sqft_living', y=\"price\", data=sqft_living)","b419e401":"asd = train[['sqft_living', 'sqft_lot', 'lat', 'long', 'price']]\nasd.head()","e50389f5":"trace1 = go.Scatter3d(\n    x=asd.long,\n    y=asd.lat,\n    z=asd.price,\n    mode='markers',\n    marker=dict(\n            size=1.8,\n            cmax=asd.sqft_living.quantile(0.99),\n            cmin=asd.sqft_living.quantile(0.01),\n            color=asd.sqft_living,\n            colorbar=dict(\n                title='Colorbar'\n            ),\n            colorscale='Viridis'\n    )\n)\n\ndata = [trace1]\nlayout = go.Layout(\n    margin=dict(\n        l=0,\n        r=0,\n        b=0,\n        t=0\n    )\n)\n\nfig = dict(data=data, layout=layout)\n\npy.iplot(fig)","ccee4ea9":"asd['sqft_per_floors'] = train['sqft_living'] \/ train['floors']","d7559837":"trace1 = go.Scatter3d(\n    x=asd.long,\n    y=asd.lat,\n    z=asd.price,\n    mode='markers',\n    marker=dict(\n            size=1.8,\n            cmax=asd.sqft_per_floors.quantile(0.99),\n            cmin=asd.sqft_per_floors.quantile(0.01),\n            color=asd.sqft_per_floors,\n            colorbar=dict(\n                title='Colorbar'\n            ),\n            colorscale='Viridis'\n    )\n)\n\ndata = [trace1]\nlayout = go.Layout(\n    margin=dict(\n        l=0,\n        r=0,\n        b=0,\n        t=0\n    )\n)\n\nfig = dict(data=data, layout=layout)\n\npy.iplot(fig)","4e963901":"(train['sqft_lot']-train['sqft_living']).describe()","9a311bd1":"asd['without_living'] = train['sqft_lot'] - train['sqft_living']\nasd.head()","417342d5":"asd.without_living.describe()","57553db3":"asd['wl_cut'] = pd.qcut(asd['without_living'], q=1000, labels=list(range(1000))).astype(int)","3e8594e5":"asd.plot(kind='scatter', x='lat', y='long', c='wl_cut', colormap='viridis', alpha=0.1)","ed288b33":"trace1 = go.Scatter3d(\n    x=asd.long,\n    y=asd.lat,\n    z=asd.price,\n    mode='markers',\n    text=asd.without_living,\n    marker=dict(\n            size=2,\n            cmax=asd.wl_cut.quantile(0.99),\n            cmin=asd.wl_cut.quantile(0.01),\n            color=asd.wl_cut,\n            colorbar=dict(\n                title='Colorbar'\n            ),\n            colorscale='Viridis'\n    )\n)\n\ndata = [trace1]\nlayout = go.Layout(\n    margin=dict(\n        l=0,\n        r=0,\n        b=0,\n        t=0\n    )\n)\n\nfig = dict(data=data, layout=layout)\n\npy.iplot(fig)","22552ed8":"trace1 = go.Scatter3d(\n    x=asd.long,\n    y=asd.lat,\n    z=asd.price,\n    mode='markers',\n    text=asd.without_living,\n    marker=dict(\n            size=2,\n            cmax=1,\n            cmin=0,\n            color=(asd.sqft_per_floors \/ asd.sqft_lot),\n            colorbar=dict(\n                title='Colorbar'\n            ),\n            colorscale='Viridis'\n    )\n)\n\ndata = [trace1]\nlayout = go.Layout(\n    margin=dict(\n        l=0,\n        r=0,\n        b=0,\n        t=0\n    )\n)\n\nfig = dict(data=data, layout=layout)\n\npy.iplot(fig)","56579df2":"train.sort_values('date')[['date', 'price']].head()","0f31f05b":"train[['date', 'price']].groupby(train['date'].str[:6]).size()","e386a8b8":"train_month = sorted(train['date'].str[:6].unique())\ntrain_month","2b34bce1":"top5_zipcode = train.zipcode.value_counts().nlargest(5).index.tolist()\ntop5_zipcode","30f03a19":"top5_monthly = []\n\nfor i in train_month: #\uc6d4\n    monthly_price = []\n    for j in top5_zipcode: #\uc9d1\ucf54\ub4dc\n        monthly_price.append(train[(train.date.str[:6] == i) & (train.zipcode == j)].price.mean())\n    top5_monthly.append(monthly_price)","6164d5bb":"top5_monthly = pd.DataFrame(top5_monthly).T\ntop5_monthly","a216ef75":"data = []\nfor i in range(5):\n    data.append(go.Scatter(\n        x = [i for i in range(12)], \n        y = top5_monthly.iloc[i], \n        name = top5_zipcode[i],\n        mode = 'lines+markers'\n    ))\nlayout= go.Layout(\n    title= '\uac70\ub798\ub7c9 \uc0c1\uc704 5\uac1c \uc9c0\uc5ed \uc6d4\ubcc4 \ud3c9\uade0\uac70\ub798\uac00 \ubcc0\ub3d9',\n    xaxis=go.layout.XAxis(\n        ticktext=train_month,\n        tickvals=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n    ),\n    yaxis=dict(\n        title= '',\n        ticklen= 5,\n        gridwidth= 2,\n    )\n)\nfig = go.Figure(data, layout)\npy.iplot(fig)","d7ab3b6a":"loc_price = train[['lat', 'long', 'price']]","d63092cb":"loc_price.head()","8ccb4406":"loc_price['price_cut'] = pd.qcut(loc_price['price'], q=10, labels=list(range(10))).astype(int)","9d26a36c":"loc_price.head()","90caa931":"loc_price.plot(kind='scatter', x='lat', y='long', c='price_cut', cmap=plt.get_cmap('viridis'), alpha=0.1)","83a087a1":"floors = train[['price', 'floors', 'lat', 'long']]","861234f4":"floors.floors.value_counts()","64d81a80":"trace1 = go.Scatter3d(\n    x=floors.long,\n    y=floors.lat,\n    z=floors.price,\n    mode='markers',\n    marker=dict(\n            size=2,\n            cmax=4,\n            cmin=0,\n            color=floors.floors,\n            colorbar=dict(\n                title='Colorbar'\n            ),\n            colorscale='Viridis'\n    )\n)\n\ndata = [trace1]\nlayout = go.Layout(\n    margin=dict(\n        l=0,\n        r=0,\n        b=0,\n        t=0\n    )\n)\n\nfig = dict(data=data, layout=layout)\n\npy.iplot(fig)","16571f05":"floors_list = []\ndata = []\n\nfloors_list.append(floors[floors.floors == 1])\nfloors_list.append(floors[floors.floors == 1.5])\nfloors_list.append(floors[floors.floors == 2])\nfloors_list.append(floors[floors.floors == 2.5])\nfloors_list.append(floors[floors.floors == 3])\nfloors_list.append(floors[floors.floors == 3.5])\nfor i in range(0,6):\n    data.append(\n        go.Scatter3d(\n        x=floors_list[i].long,\n        y=floors_list[i].lat,\n        z=floors_list[i].floors,\n        text=floors_list[i].price,\n        name=['1', '1.5', '2', '2.5', '3', '3.5'][i],\n        mode='markers',\n        marker=dict(\n                size=2,\n                cmax=pd.concat(floors_list).price.quantile(0.99),\n                cmin=pd.concat(floors_list).price.quantile(0.01),\n                color=floors_list[i].price,\n                colorbar=dict(\n                    title='\uac00\uaca9'\n                ),\n                colorscale='Viridis'\n        )\n    )\n    )\nlayout = go.Layout(\n    margin=dict(\n        l=0,\n        r=0,\n        b=0,\n        t=0\n    ),\n    legend=dict(\n        x=0,\n        y=1,\n        traceorder='normal',\n        font=dict(\n            family='sans-serif',\n            size=12,\n            color='#000'\n        ),\n        bgcolor='#E2E2E2',\n        bordercolor='#FFFFFF',\n        borderwidth=2\n    ),\n    yaxis=dict(scaleanchor=\"x\", scaleratio=1)\n)\n\nfig = dict(data=data, layout=layout)\n\npy.iplot(fig)","bd83daab":"top5_monthly.set_index(pd.Series(top5_zipcode), inplace=True, drop=True)\ntop5_monthly.columns = train_month\ntop5_monthly","3868ccc8":"top5_df = train[train.zipcode.isin(top5_monthly.index)]","130cf530":"data = []\nfor i in top5_monthly.index:\n    data.append(\n        go.Scatter(\n        x=top5_df[top5_df.zipcode == i].long,\n        y=top5_df[top5_df.zipcode == i].lat,\n        text=top5_df[top5_df.zipcode == i].price,\n        name=i,\n        mode='markers',\n        marker=dict(\n                size=2,\n                cmax=top5_df.price.quantile(0.99),\n                cmin=top5_df.price.quantile(0.01),\n                color=top5_df[top5_df.zipcode == i].price,\n                colorbar=dict(\n                    title='\uac00\uaca9'\n                ),\n                colorscale='Viridis'\n        )\n    )\n    )\n    \nlayout = go.Layout(\n    title='\uac70\ub798\ub7c9 \uc0c1\uc704 5\uac1c \uc9c0\uc5ed',\n    legend=dict(\n        x=0,\n        y=1,\n        traceorder='normal',\n        font=dict(\n            family='sans-serif',\n            size=12,\n            color='#000'\n        ),\n        bgcolor='#E2E2E2',\n        bordercolor='#FFFFFF',\n        borderwidth=2\n    ),\n    yaxis=dict(scaleanchor=\"x\", scaleratio=1)\n)\nfig = go.Figure(data, layout)\npy.iplot(fig)","95abd01d":"\ud655\uc2e4\ud788 \uc8fc\uac70\uacf5\uac04\uc5d0 \ube44\ud574 \ubd80\uc9c0\ub113\uc774\uac00 \ud070 \uc9c0\uc5ed\uc740 \uc8fc\ub85c \uc678\uacfd\uc5d0 \uc704\uce58\ud574\uc788\ub2e4.","d67d6511":"\uc804 \ubc84\uc804\uc758 \ub370\uc774\ud130\uc5d0 id \uc911\ubcf5 \ubb38\uc81c\uac00 \uc788\uc5c8\ub2e4\uace0 \ud55c\ub2e4.  \n\ud639\uc2dc \ubab0\ub77c \uac80\uc0ac\ud574\ubd24\ub2e4 :)","29a92644":"\ub113\uace0 \uc800\ub834\ud55c \uc9d1\uc774 \ube44\ub3c4\uc2dc\uad8c\uc5d0 \ub9ce\uc744 \uac70\ub77c \uc608\uc0c1\ud588\uc9c0\ub9cc \ub113\uc740 \uc9d1\ub4e4\ub3c4 \ub2e4 \ubd80\ucd0c\uc5d0 \ubab0\ub824\uc788\ub2e4. (47.6, 122.2~112.4)  \n\uce35\uc218\uc758 \uc601\ud5a5\uc774 \ud070 \uac74 \uc544\ub2d0\uae4c? \uac70\uc8fc\uacf5\uac04 \ub113\uc774\ub97c \uce35\uc218\ub85c \ub098\ub204\uc5b4 \ub2e4\uc2dc \uadf8\ub824\ubcf4\uc790","bf35afa1":"### \ub108\ube44, \uc704\uce58, \uac00\uaca9\n\ub113\uc740 \uc9d1\ub4e4\uc774 \uc8fc\ub85c \uc704\uce58\ud574\uc788\ub294 \uc9c0\uc5ed\uc740 \uc5b4\ub514\uc77c\uae4c?  \n\uc0c1\ub300\uc801\uc73c\ub85c \ub113\uc740 \uc9d1\ub4e4\uc774 \uc8fc\ub85c \ubd84\ud3ec\ub41c \uc9c0\uc5ed\uc774 \uc5b4\ub518\uc9c0, \ub610 \uac00\uaca9\uc740 \uc5b4\ub5a4\uc9c0 \ub098\ud0c0\ub0b4\ubcf4\uc558\ub2e4.","f87603f3":"## Settings","87141540":"### \ubd80\uc9c0\uac00 \ub113\uc9c0\ub9cc \uac70\uc8fc\uacf5\uac04\uc758 \ud06c\uae30\uac00 \uc791\uc740 \ubb3c\uac74\uc758 \ubd84\ud3ec\n\ubd80\uc9c0\uac00 \ub113\uc9c0\ub9cc \uac70\uc8fc\uacf5\uac04\uc758 \ud06c\uae30\uac00 \uc791\uc740 \ubb3c\uac74\ub4e4\uc774 \uc5ec\ub7ff \ubcf4\uc600\ub2e4.  \n\uc544\ubb34\ub798\ub3c4 \uac70\uc8fc\uacf5\uac04\uc774 \uc544\ub2c8\ub77c \ud1a0\uc9c0\uac70\ub798?\uac00 \ubaa9\uc801\uc778 \ub4ef..?  \n\uadf8\ub807\ub2e4\uba74 \uc8fc\ub85c \uc678\uacfd\uc9c0\uc5ed\uc5d0 \uc774\ub7f0 \ubb3c\uac74\ub4e4\uc774 \ubab0\ub824\uc788\uc9c0 \uc54a\uc744\uae4c?","4aafa0d3":"#### \uc9c0\uc5ed\ubcc4 \uc6d4\ubcc4 \uac70\ub798\ud3c9\uade0\uac00 \ubcc0\ub3d9","6c812ed2":"## \ub370\uc774\ud130 \ud655\uc778","9f7ab440":"### \uc11c\uc6b8\uacfc \uc9d1\uac12 \ucc28\uc774\ub294 \uc5bc\ub9c8\ub098 \ub0a0\uae4c?\n\ub3c4\uc2dc \uc815\ubcf4 \uc0ac\uc774\ud2b8\uc778 [\ub2c8\uce58](https:\/\/www.niche.com\/places-to-live\/c\/king-county-wa\/rankings\/)\ub97c \ucc38\uace0\ud574\ubcf4\ub2c8 \ud0b9 \uce74\uc6b4\ud2f0\uac00 \uc6cc\uc2f1\ud134 \uc8fc\uc758 \uad70 \uc911 \uc5ec\ub7ec \ubd84\uc57c(\uac00\uc871\uacfc \uc0b4\uae30\uc88b\uc740, \uc80a\uc740 \uc804\ubb38\uac00\uac00 \uc0b4\uae30 \uc88b\uc740 \ub4f1)\uc5d0\uc11c 1,2\uc704\ub85c \uc120\uc815\ub418\uc5c8\ub2e4.\n\n\uadf8\ub7fc \uad6d\ub0b4 \uc9d1\uac12\uc774\ub791 \uc5b4\ub5a4 \ucc28\uc774\uac00 \uc788\uc744\uae4c?\n\uadf8\ub098\ub9c8 \ud55c\uad6d \ub0b4\uc5d0\uc11c \ud0b9 \uad70\uacfc \ube44\uc2b7\ud55c \ub3c4\uc2dc\ub97c \ucc3e\ub2e4, \uc2f1\uac00\ud3ec\ub974\uc758 \uae08\uc735\ud68c\uc0ac Value Champion\uc758 ['\uc544\u30fb\ud0dc \uc9c0\uc5ed \ubc00\ub808\ub2c8\uc5bc \uc138\ub300\uac00 \uc0b4\uae30 \uc88b\uc740 \ub3c4\uc2dc'](https:\/\/www.valuechampion.sg\/top-5-millennial-friendly-cities-asia-pacific#nogo)\uc5d0\uc11c \uc0c1\uc704\uad8c\uc744 \uae30\ub85d\ud55c \uc11c\uc6b8\uacfc \ube44\uad50\ud574\ubcf4\uc790.  \n\uc790\ub8cc \ucd9c\ucc98: [\uc11c\uc6b8\uc5f4\ub9b0\ub370\uc774\ud130\uad11\uc7a5-\uc11c\uc6b8\ud2b9\ubcc4\uc2dc \ubd80\ub3d9\uc0b0 \uc2e4\uac70\ub798\uac00 \uc815\ubcf4](http:\/\/data.seoul.go.kr\/dataList\/datasetView.do?infId=OA-15551&srvType=A&serviceKind=1&currentPageNo=1)","abd8ea35":"## Date","7dce20cd":"98038 \uc9c0\uc5ed\uc774 \uac70\ub798\ub7c9\uc774 \ub9ce\uc74c\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0 \uac00\uaca9\uc774 \ub0ae\uc740 \uc774\uc720\ub294 \uc704\uce58\uc801\uc778 \uc694\uc778\uc774 \uac00\uc7a5 \ud070 \uac83 \uac19\ub2e4.  \nunitedstateszipcodes\ub97c \ucc38\uace0\ud558\uc5ec [98103](https:\/\/www.unitedstateszipcodes.org\/98103\/)\uacfc [98038](https:\/\/www.unitedstateszipcodes.org\/98038\/)\uc744 \ube44\uad50\ud574\ubcf4\uc558\ub2e4.   \n98103\uc740 1\uc778\uac00\uad6c, \ub610\ub294 \ub8f8\uba54\uc774\ud2b8\uc640 \uac19\uc774 \uc0ac\ub294 \uac00\uad6c\uac00 \uc555\ub3c4\uc801\uc73c\ub85c \ub192\uace0, \ub098\uc774\ub300\ub3c4 24~31\uc774 \ud070 \ube44\uc911\uc744 \ucc28\uc9c0\ud55c\ub2e4.  \n\uc9d1\uac12\uc740 98103\uc774 \ub354 \ub192\uc9c0\ub9cc, \uc18c\ub4dd \uc911\uc559\uac12\uc740 98038\uc774 15~20% \uc815\ub3c4 \ud06c\ub2e4.  \n\uc774\ub7f0 \uc810\uc73c\ub85c \ubcf4\uc544 98103\uacfc \uadf8 \uc8fc\ubcc0 \uc9c0\uc5ed\uc740 \ub300\ud559\uc774 \uc704\uce58\ud574\uc788\uc5b4 \ube44\uc2fc \uc9d1\uac12\uacfc \ub9ce\uc740 \uac70\ub798\ub7c9\uc774 \ud615\uc131\ub41c \uac83\uc73c\ub85c \ubcf4\uc778\ub2e4.  \n\uc6b0\ub9ac\ub098\ub77c\uc758 \uc218\ub3c4\uad8c \uc8fc\ubcc0 \ub3c4\uc2dc(98038)\uc640 \uc11c\uc6b8(98103)\uc744 \ubcf4\ub294 \ub290\ub08c\uc774\ub2e4.","9a3b8c6b":"## Price\n\n\ubb3c\uac74\uc758 \ud310\ub9e4 \uac00\uaca9\uc774 \ubbf8\uad6d \ub2ec\ub7ec \ub2e8\uc704\ub85c \ub2f4\uace0 \uc788\ub294 \ubcc0\uc218\ub2e4.","9c045ab4":"291\uc5b5... \uc0c1\uc704 \uac12\ub4e4\uc744 \ud55c\ubc88 \ubd10\uc57c\uaca0\ub2e4","e866985b":"\uc804\uccb4\uc801\uc73c\ub85c \uc8fc\uac70\uacf5\uac04\uc774 \ub113\uc744 \uc218\ub85d \uac00\uaca9\uc774 \uc0c1\uc2b9\ud558\ub294 \uac83\uc744 \uc54c \uc218 \uc788\ub2e4.","6585e950":"2019\/03\/15 - \uae30\ubcf8\uc124\uc815 \ubc0f \ubcc0\uc218\ud0d0\uc0c9  \n2019\/03\/22 - \uc804\uccb4\uc801\uc73c\ub85c \ub2e4\ub4ec\uace0 \uc124\uba85 \ucd94\uac00, \uad6d\ub0b4 \ub370\uc774\ud130\uc640 \ube44\uad50, \uc704\uce58\uc640 \uac00\uaca9\ub300 \uad00\ub828 \ubd84\uc11d  \n2019\/04\/05 - \ubd88\ud544\uc694\ud55c \ubd80\ubd84 \uc0ad\uc81c, \ub0a0\uc9dc\uc640 \uc704\uce58 \ubd84\uc11d \ucd94\uac00\n2019\/04\/12 - sqft \uad00\ub828 \ubd84\uc11d \ucd94\uac00  \n2019\/07\/19 - \ucf54\ub4dc \ub2e4\ub4ec\uace0 Location \uad00\ub828 \ub0b4\uc6a9 \ucd94\uac00","4f46ac86":"\ud655\uc2e4\ud788 \uc678\uacfd \uc9c0\uc5ed\uc758 \uc0c9\uc774 \ubcc0\ud55c \uac83\uc774 \ubcf4\uc778\ub2e4.  \n\uc544\ubb34\ub798\ub3c4 2\uce35 \uc774\uc0c1 \uc8fc\ud0dd\uc774 \uc8fc\ub85c \ubd80\ucd0c \uc9c0\uc5ed\uc5d0 \ubc00\uc9d1\ub418\uc5b4 \uc788\uc744 \uac83\uc73c\ub85c \uc608\uc0c1\ub41c\ub2e4.","b94cee30":"\ub9c9\uc0c1 \ub098\ud0c0\ub0b4\ubcf4\ub2c8 \uac00\uaca9\uc774 \uad81\uae08\ud558\ub2e4.","02c6ac01":"\uac70\ub798\ub7c9 \uc0c1\uc704 5\uac1c \uc9c0\uc5ed","c405467e":"price\uc640\uc758 \uc0c1\uad00\uad00\uacc4\uac00 \ub192\uc740 \uc0c1\uc704 10\uac1c \ubcc0\uc218\ub97c \ub098\ud0c0\ub0b8 \ud788\ud2b8\ub9f5.  \n\ubd80\ub3d9\uc0b0 \uc9c0\uc2dd\uc774 \ubd80\uc871\ud574\uc11c... \uadf8\ub098\ub9c8 \uacc4\uc218\uac00 \ub192\uc544 \uc9c1\uad00\uc801\uc73c\ub85c \uc774\ud574\ud560 \uc218 \uc788\uc744 \uac83 \uac19\uc740 grade\uc640 sqft_living \uc704\uc8fc\ub85c price\uc640\uc758 \uad00\uacc4\ub97c \ubd84\uc11d\ud558\uace0,  \n\uc2dc\uac01 \uc790\ub8cc\ub85c \ub098\ud0c0\ub0b4\uae30 lat,long\uacfc date\ub97c \uc0b4\ud3b4\ubcfc \uacc4\ud68d\uc774\ub2e4!  \n\n\uadf8\ub9ac\uace0 grade\ub098 sqft_living\uc758 \uac12\uc774 \uc791\uc74c\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0 \uc9c0\ub098\uce58\uac8c \ube44\uc2fc \uc9d1 \uba87 \uac1c\ub97c \uc120\uc815\ud574\uc11c \uadf8 \uc774\uc720\ub97c \ucc3e\uc544\ubcfc \uac83\uc774\ub2e4. (\uac01 \uce74\ud14c\uace0\ub9ac\ubcc4 \uc0c1\uc704 n\uac1c \uc774\uc0c1\uce58)","f27048ac":"## Sqft_living\n\ngrade \ub2e4\uc74c\uc73c\ub85c price\uc640 \uc0c1\uad00\uacc4\uc218\uac00 \ud070 \ubcc0\uc218\ub2e4.  ","95395064":"### \ubcc0\uc218 \ud655\uc778  \n\n#### Data fields\n\n* **ID** : \uc9d1\uc744 \uad6c\ubd84\ud558\ub294 \ubc88\ud638\n* **date** : \uc9d1\uc744 \uad6c\ub9e4\ud55c \ub0a0\uc9dc\n* **price** : \uc9d1\uc758 \uac00\uaca9(Target variable)\n* **bedrooms** : \uce68\uc2e4\uc758 \uc218\n* **bathrooms** : \uce68\uc2e4 \uac1c\uc218 \ub2f9 \ud654\uc7a5\uc2e4\uc758 \uc218(\ud654\uc7a5\uc2e4\uc758 \uc218 \/ \uce68\uc2e4\uc758 \uc218 )\n* **sqft_living** : \uc8fc\uac70 \uacf5\uac04\uc758 \ud3c9\ubc29 \ud53c\ud2b8(\uba74\uc801)\n* **sqft_lot** : \ubd80\uc9c0\uc758 \ud3c9\ubc29 \ud53c\ud2b8(\uba74\uc801)\n* **floors** : \uc9d1\uc758 \uce35 \uc218\n* **waterfront** : \uc9d1\uc758 \uc804\ubc29\uc5d0 \uac15\uc774 \ud750\ub974\ub294\uc9c0 \uc720\ubb34 (a.k.a. \ub9ac\ubc84\ubdf0)\n* **view** : \uc9d1\uc774 \uc5bc\ub9c8\ub098 \uc88b\uc544 \ubcf4\uc774\ub294\uc9c0\uc758 \uc815\ub3c4\n* **condition** : \uc9d1\uc758 \uc804\ubc18\uc801\uc778 \uc0c1\ud0dc\n* **grade** : King County grading \uc2dc\uc2a4\ud15c \uae30\uc900\uc73c\ub85c \ub9e4\uae34 \uc9d1\uc758 \ub4f1\uae09\n* **sqft_above** : \uc9c0\ud558\uc2e4\uc744 \uc81c\uc678\ud55c \ud3c9\ubc29 \ud53c\ud2b8(\uba74\uc801)\n* **sqft_basement** : \uc9c0\ud558\uc2e4\uc758 \ud3c9\ubc29 \ud53c\ud2b8(\uba74\uc801)\n* **yr_built** : \uc9c0\uc5b4\uc9c4 \ub144\ub3c4\n* **yr_renovated** : \uc9d1\uc744 \uc7ac\uac74\ucd95\ud55c \ub144\ub3c4\n* **zipcode** : \uc6b0\ud3b8\ubc88\ud638\n* **lat** : \uc704\ub3c4\n* **long** : \uacbd\ub3c4\n* **sqft_living15** : 2015\ub144 \uae30\uc900 \uc8fc\uac70 \uacf5\uac04\uc758 \ud3c9\ubc29 \ud53c\ud2b8(\uba74\uc801, \uc9d1\uc744 \uc7ac\uac74\ucd95\ud588\ub2e4\uba74, \ubcc0\ud654\uac00 \uc788\uc744 \uc218 \uc788\uc74c)\n* **sqft_lot15** : 2015\ub144 \uae30\uc900 \ubd80\uc9c0\uc758 \ud3c9\ubc29 \ud53c\ud2b8(\uba74\uc801, \uc9d1\uc744 \uc7ac\uac74\ucd95\ud588\ub2e4\uba74, \ubcc0\ud654\uac00 \uc788\uc744 \uc218 \uc788\uc74c)","221902ce":"#### \uace0\uce35 \uac74\ubb3c\uc774 \ub9ce\uc740 \uc9c0\uc5ed","7dc1803d":"colormap\uc744 \uc0ac\uc6a9\ud574\uc11c \ub098\ud0c0\ub0b4\uba74 \uad6c\ubd84\uc774 \uc5b4\ub824\uc6b8 \uac83 \uac19\uc544 qcut\uc73c\ub85c \ubc94\uc704 \uc9c0\uc815\uc744 \ud574\uc92c\ub2e4.","f5f9f35f":"## Index\n* [Settings](#Settings)\n* [\ub370\uc774\ud130 \ud655\uc778](#\ub370\uc774\ud130-\ud655\uc778)\n    * [\ubcc0\uc218 \ud655\uc778](#\ubcc0\uc218-\ud655\uc778)\n    * [ID \uc911\ubcf5\uac12 \ud655\uc778](#id-\uc911\ubcf5\uac12-\ud655\uc778)\n* [\ubcc0\uc218 \uc0b4\ud3b4\ubcf4\uae30](#\ubcc0\uc218-\uc0b4\ud3b4\ubcf4\uae30)\n    * [Price](#Price)\n    * [Grade](#Grade)\n    * [Sqft_living](#Sqft_living)\n    * [Date](#Date)\n    * [Location](#Location)","e0595364":"## id \uc911\ubcf5\uac12 \ud655\uc778","06c32e1e":"### Location","1b2f010b":"\uc6d4\ubcc4 \ud3c9\uade0 \uac70\ub798\uac00\uc5d0\uc11c \uc0c8\ub85c\uc6b4 \uac00\uc124\uc744 \uc138\uc6b8\ub9cc\ud55c \uc810\uc740 \ucc3e\uc744 \uc218 \uc5c6\ub294 \uac83 \uac19\ub2e4.  \n\uc804\uccb4\uc801\uc73c\ub85c 98038\uc758 \ud3c9\uade0\uac70\ub798\uac00\uac00 \ub0ae\uc740 \uac83\uc744 \uc54c \uc218 \uc788\ub2e4.  \nLocation \ucc55\ud130\uc5d0\uc11c \ub098\uba38\uc9c0 4\uac1c \uc9c0\uc5ed\uc5d0 \ube44\ud574 98038\uc758 \uac00\uaca9\uc774 \uc800\ub834\ud55c \uc774\uc720\ub97c \ud55c\ubc88 \ucc3e\uc544\ubcf4\uc790","782c0a70":"\uc8fc\uac70\uacf5\uac04 \ube44\uc728\ub85c \ub098\ud0c0\ub0b4\ub2c8 \ucc28\uc774\uac00 \ud6e8\uc52c \ud655\uc5f0\ud558\uac8c \ub4dc\ub7ec\ub098\ub294 \uac70 \uac19\ub2e4!","eec26228":"\ud0b9 \uad70 \uadf8\ub798\ud504\uc640 \ube44\uad50\ud560 \uc218 \uc788\uac8c 80\uc5b5\uc6d0 \uc774\uc0c1 \ub9e4\ubb3c\uc740 \uc0dd\ub7b5\ud558\uaca0\ub2e4 \u3160","5bd93620":"### \uc6d4 \ubcc4 \uac70\ub798\uc218","9c8bbc0c":"\uc74c\uc218\uac12\uc774 \uc788\ub294 \uac78\ub85c \ubd10\uc11c \uc544\ubb34\ub798\ub3c4 \uce35\uc218\uac00 \uc788\uc5b4 \uac70\uc8fc\uacf5\uac04\uc774 \ubd80\uc9c0\ubcf4\ub2e4 \ud070 \ubb3c\uac74\uc774 \uc788\ub294 \uac83 \uac19\ub2e4.  \n\uac70\uc8fc\uacf5\uac04 \ub113\uc774\ub97c \uce35\uc218\ub85c \ub098\ub208 \ud6c4 \ub098\ud0c0\ub0b4\ubd24\ub2e4.","bed48128":"15\ub144 5\uc6d4\uc5d0 \ubb34\uc2a8 \uc77c\uc774 \uc788\ub358 \uac78\uae4c...?","010b59a9":"\uc804\uccb4\uc801\uc73c\ub85c \uc11c\uc6b8\ud2b9\ubcc4\uc2dc\uac00 \ud0b9 \uad70\ubcf4\ub2e4 \uc9d1\uac12\uc774 \uc800\ub834\ud55c \uac83\uc744 \uc54c \uc218 \uc788\ub2e4.  \n\uadf8\ub7ec\ub098 [\ud0b9 \uad70\uc758 \uc5f0\ubd09 \uc911\uc559\uac12](https:\/\/www.niche.com\/places-to-live\/c\/king-county-wa\/#working-in)\uacfc [2014\ub144 \uc11c\uc6b8 \ub0a9\uc138\uc790 \uc5f0\ubd09 \uc911\uc559\uac12](http:\/\/news.chosun.com\/misaeng\/site\/data\/html_dir\/2017\/01\/20\/2017012000627.html)\uc744 \ube44\uad50\ud574\ubcfc \ub54c, \uc11c\uc6b8 \uc9d1\uac12\uc774 \uac70\uc8fc\uc790 \uc18c\ub4dd \ub300\ube44 \ub9e4\uc6b0 \ube44\uc2f8\ub2e4\uace0 \uc9d0\uc791\ud574\ubcfc \uc218 \uc788\ub2e4.  \n\ubb3c\ub860 \ud0b9 \uad70\uc758 \uc5f0\ubd09 \uc911\uc559\uac12\uc758 \ucd9c\ucc98\ub144\ub3c4\uac00 \ucd5c\uadfc\uc73c\ub85c \uc9d0\uc791\ub418\ub2c8 \ucc38\uace0\ud574\uc57c\ud560 \ub4ef \uc2f6\ub2e4.","ebdfe36f":"## \ubcc0\uc218 \uc0b4\ud3b4\ubcf4\uae30","83ea2d1b":"## Grade","424bc8d9":"#### 98038"}}