{"cell_type":{"a4b0d9d0":"code","b8ba3a98":"code","92cbe0ae":"code","ba02860b":"code","9bf2d286":"code","c9a00a8e":"code","f0e7b53a":"code","6d56b256":"code","5f04200a":"code","d0ca9232":"code","cd52f1b2":"code","c8e1c152":"code","2ca30cd3":"markdown","056bed3d":"markdown"},"source":{"a4b0d9d0":"test_dir=\"\/kaggle\/input\/dog vs cat\/dataset\/test_set\"\ntrain_dir=\"\/kaggle\/input\/dog vs cat\/dataset\/training_set\"","b8ba3a98":"from keras.preprocessing.image import ImageDataGenerator\n\ntrain_datagen = ImageDataGenerator(rescale = 1.\/255)\n\ntest_datagen = ImageDataGenerator(rescale = 1.\/255)\n\nbatch_size=64\n\ntraining_set = train_datagen.flow_from_directory(train_dir,\ntarget_size = (100, 100),\nbatch_size = batch_size,\ncolor_mode='rgb',\nclass_mode = 'binary',\nshuffle=True)\n\ntest_set = test_datagen.flow_from_directory(test_dir,\ntarget_size = (100, 100),\nbatch_size = batch_size,\ncolor_mode='rgb',\nclass_mode = 'binary')","92cbe0ae":"import keras\nfrom keras.models import Sequential\nfrom keras.layers import Conv2D, Activation, MaxPooling2D, Flatten, Dense\nfrom keras.optimizers import adam\nimport numpy as np","ba02860b":"# Initialising the CNN\nclassifier = Sequential()\n\n# Step 1 - Convolution\nclassifier.add(Conv2D(32, (3, 3), input_shape = (100, 100, 3)))\nclassifier.add(Activation(\"relu\"))\nclassifier.add(MaxPooling2D(pool_size = (3, 3)))\nclassifier.add(Conv2D(64, (3, 3), input_shape = (100, 100, 3)))\nclassifier.add(Activation(\"relu\"))\nclassifier.add(MaxPooling2D(pool_size = (3, 3)))\n\nclassifier.add(Flatten())\n\nclassifier.add(Dense(64))\nclassifier.add(Activation(\"relu\")) \nclassifier.add(Dense(128))\nclassifier.add(Activation(\"relu\")) \nclassifier.add(Dense(activation = 'sigmoid', units=1))","9bf2d286":"classifier.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])","c9a00a8e":"classifier.summary()","f0e7b53a":"classifier.fit_generator(training_set,\n                        steps_per_epoch=np.ceil(training_set.samples \/ batch_size),\n                        epochs=20,\n                        validation_steps=np.ceil(test_set.samples \/ batch_size),\n                         validation_data=test_set\n                        )","6d56b256":"import matplotlib.pyplot as plt\nfrom tensorflow.keras.preprocessing import image\ntest_image = image.load_img(\"\/kaggle\/input\/dog vs cat\/dataset\/training_set\/dogs\/dog.1056.jpg\", target_size = (100, 100)) \nplt.imshow(test_image)\nplt.grid(None) \nplt.show()","5f04200a":"res_list= [\"It's a cat !\",\"It's a dog !\"]","d0ca9232":"test_image = image.img_to_array(test_image)\ntest_image = np.expand_dims(test_image, axis = 0)","cd52f1b2":"print(res_list[int(classifier.predict(test_image))])","c8e1c152":"classifier.predict(test_image)","2ca30cd3":"**Very simple cats vs dogs classification using keras**\n\nView the whole guide here: [saffatbokul.com\/machine-learning\/keras-cats-vs-dog-classification-for-absolute-begginers\/](http:\/\/https:\/\/saffatbokul.com\/machine-learning\/keras-cats-vs-dog-classification-for-absolute-begginers\/)","056bed3d":"Find detailed tutorial on saffatbokul.com\/machine-learning\/"}}