{"cell_type":{"79ebff3d":"code","db77931d":"code","061942a0":"code","02fda34a":"code","e4ef28ff":"code","a9f03954":"code","43f0bb17":"code","527804aa":"code","f1862b7b":"code","eacf22d7":"code","28420fb7":"code","d818eb1f":"code","c04c48fc":"code","c555f880":"code","ad8a7fdb":"code","40bfa843":"code","a8c95734":"code","24923016":"code","ab2e50e4":"markdown","f38094a8":"markdown","48f9e0f2":"markdown","5d51c3ed":"markdown","3a9da28e":"markdown","b5bfe96e":"markdown","bbe1c7dd":"markdown","f56c3790":"markdown","96934191":"markdown","fc17c47e":"markdown","12ba4ab6":"markdown","bf67d008":"markdown","28cc27ba":"markdown"},"source":{"79ebff3d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport nltk \nimport seaborn as sns\nfrom nltk.tokenize import word_tokenize\nfrom nltk.corpus import stopwords\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\npd.set_option('display.max_colwidth', 100)","db77931d":"df = pd.read_csv('\/kaggle\/input\/sinhala-unicode-hate-speech\/sinhala-hate-speech-dataset.csv', encoding='utf8')","061942a0":"df.shape","02fda34a":"df.columns","e4ef28ff":"df.head()","a9f03954":"count = df.isna().sum()\nprecentange = df.isna().mean().round(4) * 100\n\ndfMissing = pd.DataFrame({'count': count, 'precentange': precentange})\ndfMissing.sort_values('count', ascending=False)","43f0bb17":"df.groupby(['label'])['label'].describe()[['count']]","527804aa":"sns.countplot(x='label', data=df).set_title('Hate Speech Distribution')\ndf.label.value_counts(normalize=True) * 100","f1862b7b":"df['length'] = df['comment'].apply(len)\ndf.head()","eacf22d7":"df.hist(column='length',by='label',figsize=(15,6), bins=150)","28420fb7":"df[df['label'] == 1]['length'].describe()","d818eb1f":"del df['id']","c04c48fc":"exclude = set(\",.:;'\\\"-?!\/\u00b4`%\")\ndef removePunctuation(txt):\n    return ''.join([(c if c not in exclude else \" \") for c in txt])\n    \ndef removeNumbers(txt):\n    return ''.join(c for c in txt if not c.isnumeric())","c555f880":"df['cleaned'] = df['comment'].apply(lambda x: removePunctuation(x))\ndf.head()","ad8a7fdb":"df['cleaned'] = df['cleaned'].apply(lambda x: removeNumbers(x))\ndf.head()","40bfa843":"from collections import Counter\n\nplt.rc('font', family='Lohit Devanagari')\n\nresults = Counter()\ndf.cleaned.str.split().apply(results.update)\n\nmost = results.most_common()\nprint(most[:10])","a8c95734":"words = [word for i in df[df['label'] == 1]['cleaned'].str.split() for word in i]\n\ncounter = Counter(words)\nmost = counter.most_common(20)\n    \nmost","24923016":"words = [word for i in df[df['label'] == 0]['cleaned'].str.split() for word in i]\n\ncounter = Counter(words)\nmost = counter.most_common(20)\n    \nmost","ab2e50e4":"Let's remove numbers first and assign cleaned data to new column.\n","f38094a8":"Dataset contains 6345 rows and 3 columns.","48f9e0f2":"Let's see most common 20 words of both hate and normal comments.","5d51c3ed":"We don' need id colum therefore let's remove that.","3a9da28e":"Let's, check missing values.","b5bfe96e":"Okay, I think that's the only cleaning we need. Therefore let's tokenize the comments. Let's check most common 10 words.\n","bbe1c7dd":"54% of comments are labelled as hate speeches and 45% of comments are labelled as non hate speeches. Okay now we have some idea about comments. let's calcualte length of comments.","f56c3790":"Let's explore the dataset :)","96934191":"Okay, we can see now punctuations have been removed from the comments. As a second step, let's remove numbers and assign cleaned data to new column.\n","fc17c47e":"It's time to preprocess the data, we can see there are some unwanted data in the comments such as numbers, punctuations which do not add significant meaning to the data. Therefore let's write functions to remove numbers and punctuations.\n","12ba4ab6":"Let's see how data has been distributed.","bf67d008":"Good news, dataset doesn't contain any missing values.","28cc27ba":"According to the histograms, cannot see significant different between length of hate and normal comments."}}