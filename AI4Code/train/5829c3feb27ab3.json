{"cell_type":{"3c479813":"code","5a2f4632":"code","85d95328":"code","9215a481":"code","e1bf83c2":"code","ad135905":"code","b6571cf2":"code","9d43badd":"code","f3f70673":"code","7f09f0a5":"code","02bd4013":"code","3be565c6":"code","c6df5c90":"code","d3d41e7f":"code","17548d35":"code","edf37242":"code","b309e433":"code","ff4d70ed":"code","051450c3":"code","0bfcf1a2":"code","fdb0708b":"code","c81f5520":"markdown","3aba7614":"markdown","55ec0927":"markdown","401e048a":"markdown","35ec47db":"markdown","46814b83":"markdown","19ed177c":"markdown","3c81fe8c":"markdown","e3abf806":"markdown","a8348ab8":"markdown","1f83a401":"markdown","d56346b4":"markdown","b4e3ca92":"markdown","44b4e3d3":"markdown","2b6005cb":"markdown"},"source":{"3c479813":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \nimport seaborn as sns \n\nimport warnings \nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing ,Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5a2f4632":"#Loading Datas\ntrain = pd.read_csv(\"\/kaggle\/input\/digitrecognizer\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/digitrecognizer\/test.csv\")","85d95328":"print(train.shape) #42000 image size, 784pix (24x24) and 1 label \ntrain.head()","9215a481":"print(test.shape) #28000 image size \ntest.head()","e1bf83c2":"Y_train=train[\"label\"]\nX_train =train.drop(labels=[\"label\"],axis=1)","ad135905":"#Visualising number of Digits Class \nprint(Y_train.value_counts())\nplt.figure(figsize=(15,8))\nsns.countplot(Y_train,palette = \"RdYlBu\")\nplt.title(\"Number of Digits' Label Pixels\")","b6571cf2":"#plotting some of the samples  \nimg = X_train.iloc[0].to_numpy()\nimg = img.reshape((28,28))\nplt.imshow(img,cmap='gray')\nplt.title(train.iloc[0,0])\nplt.axis(\"off\")\nplt.show()","9d43badd":"img = X_train.iloc[3].to_numpy()\nimg = img.reshape((28,28))\nplt.imshow(img,cmap='gray')\nplt.title(train.iloc[3,0])\nplt.axis(\"off\")\nplt.show()","f3f70673":"X_train = X_train \/ 255.0\ntest = test \/ 2500.0\nprint(\"X_train shape :\",X_train.shape)\nprint(\"Test Shape :\",test.shape)","7f09f0a5":"#Reshape \nX_train = X_train.values.reshape(-1,28,28,1)\ntest = test.values.reshape(-1,28,28,1)\nprint(\"X_train shape: \",X_train.shape)\nprint(\"Test shape: \",test.shape)","02bd4013":"#Label Encoding - Keras provied encoding like we showed in upper description\nfrom keras.utils.np_utils import to_categorical #Convert to one hot encoding \nY_train = to_categorical(Y_train,num_classes = 10)","3be565c6":"from sklearn.model_selection import train_test_split\nX_train, X_val, Y_train, Y_val = train_test_split(X_train,Y_train, test_size = 0.1, random_state = 2)\nprint(\"X_train shape\",X_train.shape)\nprint(\"X_val shape\",X_val.shape)\nprint(\"Y_train shape\",Y_train.shape)\nprint(\"Y_val shape\",Y_val.shape)","c6df5c90":"from sklearn.metrics import confusion_matrix \nimport itertools \n\nfrom keras.utils.np_utils import to_categorical #Converting to one hot encoding \nfrom keras.models import Sequential\nfrom keras.layers import Dense,Dropout,Flatten,Conv2D,MaxPool2D\nfrom keras.optimizers import RMSprop,Adam\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom keras.callbacks import ReduceLROnPlateau\n\nmodel = Sequential()\n#\nmodel.add(Conv2D(filters = 16, kernel_size = (5,5),padding = 'Same', \n                 activation ='relu', input_shape = (28,28,1))) #8 filtre 5x5 boyutlu \n                #ilk shape verilmeli \nmodel.add(MaxPool2D(pool_size=(2,2))) #Pooling size k\u00fc\u00e7\u00fcltt\u00fc ve yo\u011funla\u015ft\u0131rd\u0131\n                                    \nmodel.add(Dropout(0.25)) #nodelar\u0131n y\u00fczde 25 i deactive (ezberi engeller)\n#\nmodel.add(Conv2D(filters = 16, kernel_size = (3,3),padding = 'Same', \n                 activation ='relu'))\nmodel.add(MaxPool2D(pool_size=(2,2), strides=(2,2)))\nmodel.add(Dropout(0.25))\n# fully connected\nmodel.add(Flatten())\nmodel.add(Dense(256, activation = \"relu\")) #Hidden layer 1\nmodel.add(Dropout(0.5))\nmodel.add(Dense(128, activation = \"relu\")) #Hidden layer 2\nmodel.add(Dropout(0.5))\nmodel.add(Dense(10, activation = \"softmax\")) #Softmax Sigmoid in genelle\u015fmi\u015f halidir. \n                                            #Sigmoid binary classification(2 label) yaparken softmax multi class ","d3d41e7f":"optimizer = Adam(lr=0.001, beta_1 = 0.9, beta_2= 0.999)","17548d35":"model.compile(optimizer = optimizer, loss = \"categorical_crossentropy\", metrics=[\"accuracy\"])\n#ikiden fazla class varsa categorical crossentropy kullan\u0131l\u0131r \n#Binary de ise 2 class vard\u0131 ","edf37242":"epochs = 15\nbatch_size = 250  #Epochs artt\u0131kca ve Batch size k\u00fc\u00e7\u00fcld\u00fckce i\u015flem s\u00fcresi artar ancak accuracy de artabilir\n#\u00c7\u00fcnk\u00fc batch size k\u00fc\u00e7\u00fcld\u00fck\u00e7e her a\u015famada daha az veri tarar ve bu nedenle toplam iterasyon artar ","b309e433":"#data augmentation \ndatagen = ImageDataGenerator(\n        featurewise_center=False,  # set input mean to 0 over the dataset\n        samplewise_center=False,  # set each sample mean to 0\n        featurewise_std_normalization=False,  # divide inputs by std of the dataset\n        samplewise_std_normalization=False,  # divide each input by its std\n        zca_whitening=False,  # dimesion reduction\n        rotation_range=0.2,  # randomly rotate images in the range 5 degrees\n        zoom_range = 0.2, # Randomly zoom image 5%\n        width_shift_range=0.2,  # randomly shift images horizontally 5%\n        height_shift_range=0.2,  # randomly shift images vertically 5%\n        horizontal_flip=False,  # randomly flip images\n        vertical_flip=False)  # randomly flip images\n\ndatagen.fit(X_train)    ","ff4d70ed":"history = model.fit_generator(datagen.flow(X_train, Y_train, batch_size = batch_size),\n                             epochs = epochs, validation_data = (X_val,Y_val),\n                             steps_per_epoch = X_train.shape[0] \/\/ batch_size)","051450c3":"# BU \u015eEK\u0130LDE VE BATCH SIZE 150 epochs 20 iken de\u011ferler Yakla\u015f\u0131k Y\u00fczde 95 Do\u011frulukta oluyor \n# BU SEK\u0130LDE BATCH SIZE 250 ve Epochs 15 + 1 hidden layer (Yani 2 Hidden layer) daha eklenince Y\u00fczde 94 do\u011frulukta oluyor \n# BU SEK\u0130LDE BATCH SIZE VE EPOCHS B\u0130R ONCEK\u0130 \u0130LE AYNI \u0130KEN DATA AUGMENTATION KISMINDAK\u0130 O.5 leri k\u00fc\u00e7\u00fcltelim Sonu\u00e7 Y\u00fczde 97.6 ya ula\u015ft\u0131k Yani Data Augmentation da i\u015flemi s\u0131k\u0131la\u015ft\u0131rd\u0131k\u00e7a modelimizin accuracy art\u0131yor \n\n\n# model = Sequential()\n# #\n# model.add(Conv2D(filters = 8, kernel_size = (5,5),padding = 'Same', \n#                  activation ='relu', input_shape = (28,28,1))) #8 filtre 5x5 boyutlu \n#                 #ilk shape verilmeli \n# model.add(MaxPool2D(pool_size=(2,2))) #Pooling size k\u00fc\u00e7\u00fcltt\u00fc ve yo\u011funla\u015ft\u0131rd\u0131\n#                                     \n# model.add(Dropout(0.25)) #nodelar\u0131n y\u00fczde 25 i deactive (ezberi engeller)\n# #\n# model.add(Conv2D(filters = 16, kernel_size = (3,3),padding = 'Same', \n#                  activation ='relu'))\n# model.add(MaxPool2D(pool_size=(2,2), strides=(2,2)))\n# model.add(Dropout(0.25))\n# # fully connected\n# model.add(Flatten())\n# model.add(Dense(256, activation = \"relu\")) #Hidden layer 1\n# model.add(Dropout(0.5))\n# model.add(Dense(10, activation = \"softmax\")) #Softmax Sigmoid in genelle\u015fmi\u015f halidir. \n#                                             #Sigmoid binary classification(2 label) yaparken softmax multi class ","0bfcf1a2":"# Plot the loss and accuracy curves for training and validation \nplt.plot(history.history['val_loss'], color='b', label=\"validation loss\")\nplt.title(\"Test Loss\")\nplt.xlabel(\"Number of Epochs\")\nplt.ylabel(\"Loss\")\nplt.legend()\nplt.show()","fdb0708b":"# confusion matrix\nimport seaborn as sns\n# Predict the values from the validation dataset\nY_pred = model.predict(X_val)\n# Convert predictions classes to one hot vectors \nY_pred_classes = np.argmax(Y_pred,axis = 1) \n# Convert validation observations to one hot vectors\nY_true = np.argmax(Y_val,axis = 1) \n# compute the confusion matrix\nconfusion_mtx = confusion_matrix(Y_true, Y_pred_classes) \n# plot the confusion matrix\nf,ax = plt.subplots(figsize=(8, 8))\nsns.heatmap(confusion_mtx, annot=True, linewidths=0.01,cmap=\"Greens\",linecolor=\"gray\", fmt= '.1f',ax=ax)\nplt.xlabel(\"Predicted Label\")\nplt.ylabel(\"True Label\")\nplt.title(\"Confusion Matrix\")\nplt.show()","c81f5520":"### Implementing with Keras \n- Create Model >> Conv - Max Pooling - Dropout - Conv - Max Pool Dropout - Fully Connected \n- Dropout is a technique where randomly selected neurons are ignored during training - Overfitting i engeller ","3aba7614":"**Epochs and Batch Size**\n- 10 adet resmin olsun ve batch size = 2 olsun o zaman 2 resmi her ad\u0131mda forward ve backward propagation yap\u0131yoruz o halde totalde 5 kez batch yapar\u0131z ki 10 resmi taras\u0131n. \n- Bu d\u00f6ng\u00fcn\u00fcn bir kere tamamlanmas\u0131 da 1 epoch olmaktad\u0131r. \n- epochs = 3 verirsek bu i\u015flemi 3 kere tamamlar 10\/2 = 5 den her epochs da 5 iterasyon yapar anlam\u0131na gelir ","55ec0927":"Yukar\u0131daki modele 2 hidden layer daha ekledim ve Data Augmentation de\u011ferlerini k\u00fc\u00e7\u00fclt\u00fcp daha fazla varyasyonu model ile e\u011fittim Ayr\u0131ca Epochs ve Batch Size i da artt\u0131rd\u0131m ve Val_Accuracy imiz cok daha yavas sekilde 95 lere ula\u015fabildi o y\u00fczden son de\u011ferde b\u0131rak\u0131yorum. ","401e048a":"Bu k\u0131s\u0131mda Validation Loss umuzun zamanla de\u011fi\u015fimini g\u00f6r\u00fcyoruz e\u011fer sabit bir e\u011fri yakalayabilirsek bu model i\u00e7in optimum epoch ve batch size de\u011ferinde oldu\u011fumuzu s\u00f6yleyebiliriz.","35ec47db":"### Normalisation - Reshaping - Label Encoding \n- Normalisation \n    - If we don't do normalisation \u0131t may cause problems also CNN algorithm will be faster \n- Reshape \n    - When we want to use Keras we need to reshape our data as 3d (28x28x1)     \n- Label Encoding \n    - We got 10 labels (0,1,2,.....,9) \n    - 2 >> [0,0,1,0,0,0,0,0,0,0] #Second index is 1 others 0 \n    - 4 >> [0,0,0,0,1,0,0,0,0,0] #Fourth index is 1 others 0","46814b83":"**Defining Optimizer**\n- Burada \u00f6\u011frenme a\u015famas\u0131n\u0131 yapar\u0131z. Adam optimizer ile Learning Rate de oynamalar yapabiliriz \n- \u00d6rne\u011fin cok yava\u015f ilerlerse LR artt\u0131r\u0131r e\u011fer \u00e7ok yava\u015fsa da h\u0131zland\u0131r\u0131r","19ed177c":"**Data Augmentation**\n<a href=\"https:\/\/ibb.co\/sv8M9tv\"><img src=\"https:\/\/i.ibb.co\/N6cH276\/augment.jpg\" alt=\"9\" border=\"0\"><\/a>\n- Overfitting i engellemek i\u00e7in training data da \u00e7e\u015fitli de\u011fi\u015fiklikler yaparak farkl\u0131 varyasyonlar olu\u015fturup modeli e\u011fitiyoruz ","3c81fe8c":"- Bu k\u0131s\u0131mda ye\u015fil k\u00f6\u015fegen i\u00e7erisinde yer alan de\u011ferler Ger\u00e7ek ve Tahmin de\u011ferlerimizin tuttu\u011fu adedi g\u00f6steriyor \u00d6rne\u011fin 3 de\u011ferini 3 olarak 408 kere tahmin etmi\u015fiz. \n- K\u00f6\u015fegen d\u0131\u015f\u0131nda kalanlar ise hatal\u0131 tahminlerimiz Mesela 1 de\u011ferini modelimiz 4 kez 2 zannetmi\u015f \n- Burda hatalara bakarak kar\u0131\u015ft\u0131r\u0131lan veriler \u00fczerinde \u00e7al\u0131\u015f\u0131p accuracy artt\u0131r\u0131labilir","e3abf806":"### Train Test Split ","a8348ab8":"**Evaluate The Model**","1f83a401":"In dataset Train and Test already splitted but this is real life problem that's why we need to split our train data as train and Validation data \n- %10 Validation \n- %90 Train","d56346b4":"**Fit the Model**\n- Model Train edelim ","b4e3ca92":"**Compile Model**","44b4e3d3":"# CNN\n<a href=\"https:\/\/ibb.co\/sKHpTLb\"><img src=\"https:\/\/i.ibb.co\/8rcnyFN\/gec2.jpg\" alt=\"9\" border=\"0\"><\/a>","2b6005cb":"- G\u00f6r\u00fcld\u00fc\u011f\u00fc gibi Y\u00fczde 98 Val_Accuracy de\u011ferini yakalad\u0131k. ve Val_loss de\u011ferimiz de 0.07 de\u011ferinde bu ger\u00e7ekten iyi bir model oldu"}}