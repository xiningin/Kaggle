{"cell_type":{"00af6c66":"code","7236aa2d":"code","fea527df":"code","c6138c12":"code","67685db5":"code","97e8b811":"code","64df2600":"code","740baf24":"code","fb484f7e":"code","e29464db":"code","aa70fd05":"code","b204ba51":"code","1fb76ab4":"code","417a82d8":"code","4ac0b0ce":"code","74af1e7e":"code","d9b94661":"code","0dbc3277":"code","a621d9e0":"code","580da522":"code","a2582fa9":"code","00002110":"code","6fb8e8cf":"code","7117221e":"code","597f8cd0":"code","a0b77f33":"code","31ec7089":"code","423cc001":"code","2661b4a3":"code","7fa66e80":"code","eb5a1ecf":"code","1ec6d043":"code","8563cd51":"code","c346c0bc":"code","51ef9449":"code","0aab1ec2":"code","967c7b49":"code","c46a3709":"code","43ff112a":"code","c6693f69":"code","2e3b0a2d":"code","0a994f34":"code","39bb53a6":"code","ad53ca82":"code","51f0eb7f":"code","1ff1b688":"code","fe735edb":"code","7933b1fc":"code","c8a0925a":"code","90cc42cc":"code","68593ed1":"code","0618e846":"code","18cc6939":"code","4e469d9d":"code","87baa605":"code","99c65b52":"code","56f607b2":"code","aae7c816":"code","3f903864":"code","53a75963":"markdown","cb975d63":"markdown","90053ad2":"markdown","31090350":"markdown","57981347":"markdown","6699435f":"markdown","9c9e7d86":"markdown","254ba70c":"markdown","18a7f953":"markdown","6bc26e90":"markdown","6d05557a":"markdown","1b73ac2b":"markdown","3a2257a4":"markdown","e24de819":"markdown","98bf2d94":"markdown","91fdade7":"markdown","fb97fc6a":"markdown"},"source":{"00af6c66":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","7236aa2d":"train = pd.read_csv(\"..\/input\/application_train.csv\")\ntest = pd.read_csv(\"..\/input\/application_test.csv\")\nbureau = pd.read_csv(\"..\/input\/bureau.csv\")\nbureau_bal = pd.read_csv(\"..\/input\/bureau_balance.csv\")\ncredit_card_bal = pd.read_csv(\"..\/input\/credit_card_balance.csv\")\ninstallment_payments = pd.read_csv(\"..\/input\/installments_payments.csv\")\npos_cash_bal = pd.read_csv(\"..\/input\/POS_CASH_balance.csv\")\nprevious_application = pd.read_csv(\"..\/input\/previous_application.csv\")\nsample_application = pd.read_csv(\"..\/input\/sample_submission.csv\")","fea527df":"trainCopy = train.copy()\ntestCopy = test.copy()\nbureauCopy = bureau.copy()\nbureau_balCopy = bureau_bal.copy()\ncredit_card_balCopy = credit_card_bal.copy()\ninstallment_paymentsCopy = installment_payments.copy()\npos_cash_balCopy = pos_cash_bal.copy()\nprevious_applicationCopy = previous_application.copy()","c6138c12":"previous_applicationCopy.head()","67685db5":"bureauCopy = bureauCopy.drop('CREDIT_ACTIVE', axis = 1)\nbureauCopy = bureauCopy.drop('CREDIT_CURRENCY', axis = 1)\nbureauCopy = bureauCopy.drop('CREDIT_TYPE', axis = 1)\nbureau_summarise = bureauCopy.groupby(['SK_ID_CURR']).agg([np.min, np.max, np.mean]).reset_index()\nbureau_summarise.columns = ['_'.join(col).strip() for col in bureau_summarise.columns.values]\nbureau_summarise = bureau_summarise.rename(columns={'SK_ID_CURR_':'SK_ID_CURR'})\nbureau_summarise.head()","97e8b811":"credit_card_balCopy =  credit_card_balCopy.drop('NAME_CONTRACT_STATUS', axis = 1)\ncredit_card_balCopy = credit_card_bal.drop('SK_ID_PREV', axis = 1)\ncredit_card_bal_summarise = credit_card_bal.groupby(['SK_ID_CURR']).agg([np.mean, np.min, np.max]).reset_index()\ncredit_card_bal_summarise.columns = ['_'.join(col).strip() for col in credit_card_bal_summarise.columns.values]\ncredit_card_bal_summarise = credit_card_bal_summarise.rename(columns={'SK_ID_CURR_':'SK_ID_CURR'})\ncredit_card_bal_summarise.head()","64df2600":"installment_paymentsCopy = installment_paymentsCopy.drop('SK_ID_PREV', axis=1)\ninstallment_payments_summarise = installment_paymentsCopy.groupby(['SK_ID_CURR']).agg([np.mean, np.min, np.max]).reset_index()\ninstallment_payments_summarise.columns = ['_'.join(col).strip() for col in installment_payments_summarise.columns.values]\ninstallment_payments_summarise = installment_payments_summarise.rename(columns={'SK_ID_CURR_':'SK_ID_CURR'})\ninstallment_payments_summarise.head()","740baf24":"pos_cash_balCopy =  pos_cash_balCopy.drop('NAME_CONTRACT_STATUS', axis = 1)\npos_cash_balCopy = pos_cash_balCopy.drop('SK_ID_PREV', axis=1)\npos_cash_bal_summarise = pos_cash_balCopy.groupby(['SK_ID_CURR']).agg([np.mean, np.min, np.max]).reset_index()\npos_cash_bal_summarise.columns = ['_'.join(col).strip() for col in pos_cash_bal_summarise.columns.values]\npos_cash_bal_summarise = pos_cash_bal_summarise.rename(columns={'SK_ID_CURR_':'SK_ID_CURR'})\npos_cash_bal_summarise.head()","fb484f7e":"curr_bureau_map_id = bureau.loc[:,['SK_ID_CURR', 'SK_ID_BUREAU']]\ncurr_bureau_map_id = curr_bureau_map_id.drop_duplicates()\ncurr_bureau_map_id.head()","e29464db":"bureau_bal_summarise = bureau_balCopy.groupby(['SK_ID_BUREAU']).aggregate([np.min,np.max,np.mean]).reset_index()\nbureau_bal_summarise.columns = ['_'.join(col).strip() for col in bureau_bal_summarise.columns.values]\nbureau_bal_summarise = bureau_bal_summarise.rename(columns={'SK_ID_BUREAU_':'SK_ID_BUREAU'})\nbureau_bal_summarise = bureau_bal_summarise.merge(curr_bureau_map_id, on = \"SK_ID_BUREAU\", how = \"inner\")\nbureau_bal_summarise = bureau_bal_summarise.drop('SK_ID_BUREAU', axis = 1)\nbureau_bal_summarise = bureau_bal_summarise.groupby(['SK_ID_CURR']).aggregate([np.mean]).reset_index()\nbureau_bal_summarise.columns = ['_'.join(col).strip() for col in bureau_bal_summarise.columns.values]\nbureau_bal_summarise = bureau_bal_summarise.rename(columns={'SK_ID_CURR_':'SK_ID_CURR'})\nbureau_bal_summarise.head()","aa70fd05":"previous_applicationCopy = previous_applicationCopy.drop('SK_ID_PREV', axis = 1)\nprevious_applicationCopy = previous_applicationCopy.drop('NAME_CONTRACT_TYPE', axis = 1)\nprevious_applicationCopy = previous_applicationCopy.drop('WEEKDAY_APPR_PROCESS_START', axis = 1)\nprevious_applicationCopy = previous_applicationCopy.drop('NAME_SELLER_INDUSTRY', axis = 1)\nprevious_applicationCopy = previous_applicationCopy.drop('NAME_YIELD_GROUP', axis = 1)\nprevious_applicationCopy = previous_applicationCopy.drop('PRODUCT_COMBINATION', axis = 1)\nprevious_application_summarise = previous_applicationCopy.groupby(['SK_ID_CURR']).aggregate([np.min,np.max,np.mean]).reset_index()\nprevious_application_summarise.columns = ['_'.join(col).strip() for col in previous_application_summarise.columns.values]\nprevious_application_summarise = previous_application_summarise.rename(columns={'SK_ID_CURR_':'SK_ID_CURR'})\nprevious_application_summarise.head()","b204ba51":"from sklearn import preprocessing\nle = preprocessing.LabelEncoder()\n\ntrainCopy['NAME_CONTRACT_TYPE'] = trainCopy['NAME_CONTRACT_TYPE'].fillna(\"Unknown\")\nle.fit(trainCopy['NAME_CONTRACT_TYPE'])\nle.classes_\ntrainCopy['NAME_CONTRACT_TYPE'] = le.transform(trainCopy['NAME_CONTRACT_TYPE'])\n\ntrainCopy['CODE_GENDER'] = trainCopy['CODE_GENDER'].fillna(\"Unknown\")\nle.fit(trainCopy['CODE_GENDER'])\nle.classes_\ntrainCopy['CODE_GENDER'] = le.transform(trainCopy['CODE_GENDER'])\n\ntrainCopy['FLAG_OWN_CAR'] = trainCopy['FLAG_OWN_CAR'].fillna(\"Unknown\")\nle.fit(trainCopy['FLAG_OWN_CAR'])\nle.classes_\ntrainCopy['FLAG_OWN_CAR'] = le.transform(trainCopy['FLAG_OWN_CAR'])\n\ntrainCopy['FLAG_OWN_REALTY'] = trainCopy['FLAG_OWN_REALTY'].fillna(\"Unknown\")\nle.fit(trainCopy['FLAG_OWN_REALTY'])\nle.classes_\ntrainCopy['FLAG_OWN_REALTY'] = le.transform(trainCopy['FLAG_OWN_REALTY'])\n\n\ntrainCopy['NAME_TYPE_SUITE'] = trainCopy['NAME_TYPE_SUITE'].fillna(\"Unknown\")\nle.fit(trainCopy['NAME_TYPE_SUITE'])\nle.classes_\ntrainCopy['NAME_TYPE_SUITE'] = le.transform(trainCopy['NAME_TYPE_SUITE'])\n\ntrainCopy['NAME_INCOME_TYPE'] = trainCopy['NAME_INCOME_TYPE'].fillna(\"Unknown\")\nle.fit(trainCopy['NAME_INCOME_TYPE'])\nle.classes_\ntrainCopy['NAME_INCOME_TYPE'] = le.transform(trainCopy['NAME_INCOME_TYPE'])\n\ntrainCopy['NAME_EDUCATION_TYPE'] = trainCopy['NAME_EDUCATION_TYPE'].fillna(\"Unknown\")\nle.fit(trainCopy['NAME_EDUCATION_TYPE'])\nle.classes_\ntrainCopy['NAME_EDUCATION_TYPE'] = le.transform(trainCopy['NAME_EDUCATION_TYPE'])\n\ntrainCopy['NAME_FAMILY_STATUS'] = trainCopy['NAME_FAMILY_STATUS'].fillna(\"Unknown\")\nle.fit(trainCopy['NAME_FAMILY_STATUS'])\nle.classes_\ntrainCopy['NAME_FAMILY_STATUS'] = le.transform(trainCopy['NAME_FAMILY_STATUS'])\n\ntrainCopy['NAME_HOUSING_TYPE'] = trainCopy['NAME_HOUSING_TYPE'].fillna(\"Unknown\")\nle.fit(trainCopy['NAME_HOUSING_TYPE'])\nle.classes_\ntrainCopy['NAME_HOUSING_TYPE'] = le.transform(trainCopy['NAME_HOUSING_TYPE'])\n\ntrainCopy['OCCUPATION_TYPE'] = trainCopy['OCCUPATION_TYPE'].fillna(\"Unknown\")\nle.fit(trainCopy['OCCUPATION_TYPE'])\nle.classes_\ntrainCopy['OCCUPATION_TYPE'] = le.transform(trainCopy['OCCUPATION_TYPE'])\n\ntrainCopy['ORGANIZATION_TYPE'] = trainCopy['ORGANIZATION_TYPE'].fillna(\"Unknown\")\nle.fit(trainCopy['ORGANIZATION_TYPE'])\nle.classes_\ntrainCopy['ORGANIZATION_TYPE'] = le.transform(trainCopy['ORGANIZATION_TYPE'])\n\ntrainCopy['WEEKDAY_APPR_PROCESS_START'] = trainCopy['WEEKDAY_APPR_PROCESS_START'].fillna(\"Unknown\")\nle.fit(trainCopy['WEEKDAY_APPR_PROCESS_START'])\nle.classes_\ntrainCopy['WEEKDAY_APPR_PROCESS_START'] = le.transform(trainCopy['WEEKDAY_APPR_PROCESS_START'])\n\ntrainCopy['FONDKAPREMONT_MODE'] = trainCopy['FONDKAPREMONT_MODE'].fillna(\"Unknown\")\nle.fit(trainCopy['FONDKAPREMONT_MODE'])\nle.classes_\ntrainCopy['FONDKAPREMONT_MODE'] = le.transform(trainCopy['FONDKAPREMONT_MODE'])\n\ntrainCopy['HOUSETYPE_MODE'] = trainCopy['HOUSETYPE_MODE'].fillna(\"Unknown\")\nle.fit(trainCopy['HOUSETYPE_MODE'])\nle.classes_\ntrainCopy['HOUSETYPE_MODE'] = le.transform(trainCopy['HOUSETYPE_MODE'])\n\ntrainCopy['WALLSMATERIAL_MODE'] = trainCopy['WALLSMATERIAL_MODE'].fillna(\"Unknown\")\nle.fit(trainCopy['WALLSMATERIAL_MODE'])\nle.classes_\ntrainCopy['WALLSMATERIAL_MODE'] = le.transform(trainCopy['WALLSMATERIAL_MODE'])\n\ntrainCopy['EMERGENCYSTATE_MODE'] = trainCopy['EMERGENCYSTATE_MODE'].fillna(\"Unknown\")\nle.fit(trainCopy['EMERGENCYSTATE_MODE'])\nle.classes_\ntrainCopy['EMERGENCYSTATE_MODE'] = le.transform(trainCopy['EMERGENCYSTATE_MODE'])","1fb76ab4":"bureau_encoding = bureau.loc[:,[\"SK_ID_CURR\", \"CREDIT_ACTIVE\", \"CREDIT_CURRENCY\", \"CREDIT_TYPE\"]]\nCREDIT_ACTIVE = pd.get_dummies(bureau_encoding[\"CREDIT_ACTIVE\"], prefix=\"CREDIT_ACTIVE\")\nbureau_encoding = bureau_encoding.drop('CREDIT_ACTIVE', axis = 1)\nbureau = bureau.drop('CREDIT_ACTIVE', axis = 1)\nbureau_encoding = pd.concat([bureau_encoding, CREDIT_ACTIVE], axis = 1)\nCREDIT_CURRENCY = pd.get_dummies(bureau_encoding[\"CREDIT_CURRENCY\"], prefix=\"CREDIT_CURRENCY\")\nbureau_encoding = bureau_encoding.drop('CREDIT_CURRENCY', axis = 1)\nbureau = bureau.drop('CREDIT_CURRENCY', axis = 1)\nbureau_encoding = pd.concat([bureau_encoding, CREDIT_CURRENCY], axis = 1)\nCREDIT_TYPE = pd.get_dummies(bureau_encoding[\"CREDIT_TYPE\"], prefix=\"CREDIT_TYPE\")\nbureau_encoding = bureau_encoding.drop('CREDIT_TYPE', axis = 1)\nbureau = bureau.drop('CREDIT_TYPE', axis = 1)\nbureau_encoding = pd.concat([bureau_encoding, CREDIT_TYPE], axis = 1)","417a82d8":"bureau_encoding_summarise = bureau_encoding.groupby(['SK_ID_CURR']).sum().reset_index()\nbureau_encoding.head()","4ac0b0ce":"bureau_bal_encoding = bureau_bal.loc[:, [\"SK_ID_BUREAU\",\"STATUS\"]]\nSTATUS = pd.get_dummies(bureau_bal_encoding[\"STATUS\"], prefix=\"STATUS\")\nbureau_bal_encoding = bureau_bal_encoding.drop('STATUS', axis = 1)\nbureau_bal_encoding = pd.concat([bureau_bal_encoding, STATUS], axis = 1)","74af1e7e":"#bureau_bal_encoding.head()\nbureau_bal_encoding_summaries = bureau_bal_encoding.groupby(['SK_ID_BUREAU']).sum().reset_index()","d9b94661":"#bureau_bal_encoding_summaries.head()\nbureau_bal_encoding_summaries = bureau_bal_encoding_summaries.merge(curr_bureau_map_id, on = \"SK_ID_BUREAU\", how = \"left\")","0dbc3277":"bureau_bal_encoding_summaries = bureau_bal_encoding_summaries.drop('SK_ID_BUREAU', axis = 1)\nbureau_bal_encoding_summaries = bureau_bal_encoding_summaries.groupby(['SK_ID_CURR']).mean().reset_index()\nbureau_bal_encoding_summaries.head()","a621d9e0":"curr_bureau_map_id['SK_ID_BUREAU'] = curr_bureau_map_id['SK_ID_BUREAU'].astype(str)\ncurr_bureau_map_id['SK_ID_CURR'] = curr_bureau_map_id['SK_ID_CURR'].astype(str)","580da522":"credit_card_bal_encoding = credit_card_bal.loc[:, [\"SK_ID_CURR\",\"NAME_CONTRACT_STATUS\"]]\nNAME_CONTRACT_STATUS = pd.get_dummies(credit_card_bal_encoding[\"NAME_CONTRACT_STATUS\"], prefix=\"NAME_CONTRACT_STATUS_CC\")\ncredit_card_bal_encoding = credit_card_bal_encoding.drop('NAME_CONTRACT_STATUS', axis = 1)\ncredit_card_bal_encoding = pd.concat([credit_card_bal_encoding, NAME_CONTRACT_STATUS], axis = 1)\ncredit_card_bal_encoding.head()","a2582fa9":"credit_card_bal_encoding_summaries = credit_card_bal_encoding.groupby(['SK_ID_CURR']).sum().reset_index()","00002110":"pos_cash_bal_encoding = pos_cash_bal.loc[:, [\"SK_ID_CURR\",\"NAME_CONTRACT_STATUS\"]]\nNAME_CONTRACT_STATUS = pd.get_dummies(pos_cash_bal_encoding[\"NAME_CONTRACT_STATUS\"], prefix=\"NAME_CONTRACT_STATUS_POS\")\npos_cash_bal_encoding = pos_cash_bal_encoding.drop('NAME_CONTRACT_STATUS', axis = 1)\npos_cash_bal_encoding = pd.concat([pos_cash_bal_encoding, NAME_CONTRACT_STATUS], axis = 1)","6fb8e8cf":"pos_cash_bal_encoding_summarise =  pos_cash_bal_encoding.groupby(['SK_ID_CURR']).sum().reset_index()\npos_cash_bal_encoding_summarise.head()","7117221e":"previous_applicationEncoding = previous_application.loc[:,['SK_ID_CURR', 'NAME_CONTRACT_TYPE', 'FLAG_LAST_APPL_PER_CONTRACT', 'WEEKDAY_APPR_PROCESS_START',\n                                                          'NAME_CASH_LOAN_PURPOSE', 'NAME_CONTRACT_STATUS', 'NAME_PAYMENT_TYPE', 'CODE_REJECT_REASON',\n                                                          'NAME_TYPE_SUITE', 'NAME_CLIENT_TYPE', 'NAME_GOODS_CATEGORY', 'NAME_PORTFOLIO','NAME_PRODUCT_TYPE',\n                                                          'CHANNEL_TYPE', 'NAME_YIELD_GROUP', 'PRODUCT_COMBINATION', 'NAME_SELLER_INDUSTRY']]","597f8cd0":"from sklearn import preprocessing\nle = preprocessing.LabelEncoder()\n\nprevious_applicationEncoding['NAME_CONTRACT_TYPE'] = previous_applicationEncoding['NAME_CONTRACT_TYPE'].fillna(\"Unknown\")\nle.fit(previous_applicationEncoding['NAME_CONTRACT_TYPE'])\nle.classes_\nprevious_applicationEncoding['PREV_NAME_CONTRACT_TYPE'] = le.transform(previous_applicationEncoding['NAME_CONTRACT_TYPE'])\nprevious_applicationEncoding = previous_applicationEncoding.drop('NAME_CONTRACT_TYPE', axis = 1)\n\nprevious_applicationEncoding['FLAG_LAST_APPL_PER_CONTRACT'] = previous_applicationEncoding['FLAG_LAST_APPL_PER_CONTRACT'].fillna(\"Unknown\")\nle.fit(previous_applicationEncoding['FLAG_LAST_APPL_PER_CONTRACT'])\nle.classes_\nprevious_applicationEncoding['PREV_FLAG_LAST_APPL_PER_CONTRACT'] = le.transform(previous_applicationEncoding['FLAG_LAST_APPL_PER_CONTRACT'])\nprevious_applicationEncoding = previous_applicationEncoding.drop('FLAG_LAST_APPL_PER_CONTRACT', axis = 1)\n\nprevious_applicationEncoding['WEEKDAY_APPR_PROCESS_START'] = previous_applicationEncoding['WEEKDAY_APPR_PROCESS_START'].fillna(\"Unknown\")\nle.fit(previous_applicationEncoding['WEEKDAY_APPR_PROCESS_START'])\nle.classes_\nprevious_applicationEncoding['PREV_WEEKDAY_APPR_PROCESS_START'] = le.transform(previous_applicationEncoding['WEEKDAY_APPR_PROCESS_START'])\nprevious_applicationEncoding = previous_applicationEncoding.drop('WEEKDAY_APPR_PROCESS_START', axis = 1)\n\nprevious_applicationEncoding['NAME_CASH_LOAN_PURPOSE'] = previous_applicationEncoding['NAME_CASH_LOAN_PURPOSE'].fillna(\"Unknown\")\nle.fit(previous_applicationEncoding['NAME_CASH_LOAN_PURPOSE'])\nle.classes_\nprevious_applicationEncoding['PREV_NAME_CASH_LOAN_PURPOSE'] = le.transform(previous_applicationEncoding['NAME_CASH_LOAN_PURPOSE'])\nprevious_applicationEncoding = previous_applicationEncoding.drop('NAME_CASH_LOAN_PURPOSE', axis = 1)\n\nprevious_applicationEncoding['NAME_CONTRACT_STATUS'] = previous_applicationEncoding['NAME_CONTRACT_STATUS'].fillna(\"Unknown\")\nle.fit(previous_applicationEncoding['NAME_CONTRACT_STATUS'])\nle.classes_\nprevious_applicationEncoding['PREV_NAME_CONTRACT_STATUS'] = le.transform(previous_applicationEncoding['NAME_CONTRACT_STATUS'])\nprevious_applicationEncoding = previous_applicationEncoding.drop('NAME_CONTRACT_STATUS', axis = 1)\n\nprevious_applicationEncoding['NAME_PAYMENT_TYPE'] = previous_applicationEncoding['NAME_PAYMENT_TYPE'].fillna(\"Unknown\")\nle.fit(previous_applicationEncoding['NAME_PAYMENT_TYPE'])\nle.classes_\nprevious_applicationEncoding['PREV_NAME_PAYMENT_TYPE'] = le.transform(previous_applicationEncoding['NAME_PAYMENT_TYPE'])\nprevious_applicationEncoding = previous_applicationEncoding.drop('NAME_PAYMENT_TYPE', axis = 1)\n\nprevious_applicationEncoding['CODE_REJECT_REASON'] = previous_applicationEncoding['CODE_REJECT_REASON'].fillna(\"Unknown\")\nle.fit(previous_applicationEncoding['CODE_REJECT_REASON'])\nle.classes_\nprevious_applicationEncoding['PREV_CODE_REJECT_REASON'] = le.transform(previous_applicationEncoding['CODE_REJECT_REASON'])\nprevious_applicationEncoding = previous_applicationEncoding.drop('CODE_REJECT_REASON', axis = 1)\n\nprevious_applicationEncoding['NAME_TYPE_SUITE'] = previous_applicationEncoding['NAME_TYPE_SUITE'].fillna(\"Unknown\")\nle.fit(previous_applicationEncoding['NAME_TYPE_SUITE'])\nle.classes_\nprevious_applicationEncoding['PREV_NAME_TYPE_SUITE'] = le.transform(previous_applicationEncoding['NAME_TYPE_SUITE'])\nprevious_applicationEncoding = previous_applicationEncoding.drop('NAME_TYPE_SUITE', axis = 1)\n\nprevious_applicationEncoding['NAME_CLIENT_TYPE'] = previous_applicationEncoding['NAME_CLIENT_TYPE'].fillna(\"Unknown\")\nle.fit(previous_applicationEncoding['NAME_CLIENT_TYPE'])\nle.classes_\nprevious_applicationEncoding['PREV_NAME_CLIENT_TYPE'] = le.transform(previous_applicationEncoding['NAME_CLIENT_TYPE'])\nprevious_applicationEncoding = previous_applicationEncoding.drop('NAME_CLIENT_TYPE', axis = 1)\n\nprevious_applicationEncoding['NAME_GOODS_CATEGORY'] = previous_applicationEncoding['NAME_GOODS_CATEGORY'].fillna(\"Unknown\")\nle.fit(previous_applicationEncoding['NAME_GOODS_CATEGORY'])\nle.classes_\nprevious_applicationEncoding['PREV_NAME_GOODS_CATEGORY'] = le.transform(previous_applicationEncoding['NAME_GOODS_CATEGORY'])\nprevious_applicationEncoding = previous_applicationEncoding.drop('NAME_GOODS_CATEGORY', axis = 1)\n\nprevious_applicationEncoding['NAME_PORTFOLIO'] = previous_applicationEncoding['NAME_PORTFOLIO'].fillna(\"Unknown\")\nle.fit(previous_applicationEncoding['NAME_PORTFOLIO'])\nle.classes_\nprevious_applicationEncoding['PREV_NAME_PORTFOLIO'] = le.transform(previous_applicationEncoding['NAME_PORTFOLIO'])\nprevious_applicationEncoding = previous_applicationEncoding.drop('NAME_PORTFOLIO', axis = 1)\n\nprevious_applicationEncoding['NAME_PRODUCT_TYPE'] = previous_applicationEncoding['NAME_PRODUCT_TYPE'].fillna(\"Unknown\")\nle.fit(previous_applicationEncoding['NAME_PRODUCT_TYPE'])\nle.classes_\nprevious_applicationEncoding['PREV_NAME_PRODUCT_TYPE'] = le.transform(previous_applicationEncoding['NAME_PRODUCT_TYPE'])\nprevious_applicationEncoding = previous_applicationEncoding.drop('NAME_PRODUCT_TYPE', axis = 1)\n\nprevious_applicationEncoding['CHANNEL_TYPE'] = previous_applicationEncoding['CHANNEL_TYPE'].fillna(\"Unknown\")\nle.fit(previous_applicationEncoding['CHANNEL_TYPE'])\nle.classes_\nprevious_applicationEncoding['PREV_CHANNEL_TYPE'] = le.transform(previous_applicationEncoding['CHANNEL_TYPE'])\nprevious_applicationEncoding = previous_applicationEncoding.drop('CHANNEL_TYPE', axis = 1)\n\nprevious_applicationEncoding['NAME_YIELD_GROUP'] = previous_applicationEncoding['NAME_YIELD_GROUP'].fillna(\"Unknown\")\nle.fit(previous_applicationEncoding['NAME_YIELD_GROUP'])\nle.classes_\nprevious_applicationEncoding['PREV_NAME_YIELD_GROUP'] = le.transform(previous_applicationEncoding['NAME_YIELD_GROUP'])\nprevious_applicationEncoding = previous_applicationEncoding.drop('NAME_YIELD_GROUP', axis = 1)\n\nprevious_applicationEncoding['PRODUCT_COMBINATION'] = previous_applicationEncoding['PRODUCT_COMBINATION'].fillna(\"Unknown\")\nle.fit(previous_applicationEncoding['PRODUCT_COMBINATION'])\nle.classes_\nprevious_applicationEncoding['PREV_PRODUCT_COMBINATION'] = le.transform(previous_applicationEncoding['PRODUCT_COMBINATION'])\nprevious_applicationEncoding = previous_applicationEncoding.drop('PRODUCT_COMBINATION', axis = 1)\n\nprevious_applicationEncoding['NAME_SELLER_INDUSTRY'] = previous_applicationEncoding['NAME_SELLER_INDUSTRY'].fillna(\"Unknown\")\nle.fit(previous_applicationEncoding['NAME_SELLER_INDUSTRY'])\nle.classes_\nprevious_applicationEncoding['PREV_NAME_SELLER_INDUSTRY'] = le.transform(previous_applicationEncoding['NAME_SELLER_INDUSTRY'])\nprevious_applicationEncoding = previous_applicationEncoding.drop('NAME_SELLER_INDUSTRY', axis = 1)\n","a0b77f33":"previous_applicationEncoding_summarise = previous_applicationEncoding.groupby(['SK_ID_CURR']).mean().reset_index()","31ec7089":"bureauCount = bureau[['SK_ID_CURR','SK_ID_BUREAU']].groupby('SK_ID_CURR').count().reset_index()\nprevCount = previous_application[['SK_ID_CURR', 'SK_ID_PREV']].groupby('SK_ID_CURR').count().reset_index()\nprevCount.head()","423cc001":"trainData = trainCopy.merge(bureau_summarise, on = 'SK_ID_CURR', how = \"left\")","2661b4a3":"trainData = trainData.merge(credit_card_bal_summarise, on = 'SK_ID_CURR', how = 'left')","7fa66e80":"trainData = trainData.merge(installment_payments_summarise, on = 'SK_ID_CURR', how = 'left')","eb5a1ecf":"trainData = trainData.merge(pos_cash_bal_summarise, on = 'SK_ID_CURR', how = 'left')","1ec6d043":"trainData = trainData.merge(bureau_bal_summarise, on = 'SK_ID_CURR', how = 'left')","8563cd51":"trainData = trainData.merge(previous_application_summarise, on = 'SK_ID_CURR', how = 'left')","c346c0bc":"trainData = trainData.merge(bureau_encoding_summarise, on = 'SK_ID_CURR', how = 'left')","51ef9449":"trainData = trainData.merge(bureau_bal_encoding_summaries, on = 'SK_ID_CURR', how = 'left')","0aab1ec2":"trainData = trainData.merge(credit_card_bal_encoding_summaries, on = 'SK_ID_CURR', how = 'left')","967c7b49":"trainData = trainData.merge(pos_cash_bal_encoding_summarise, on = 'SK_ID_CURR', how = 'left')","c46a3709":"trainData = trainData.merge(previous_applicationEncoding_summarise, on = 'SK_ID_CURR', how = 'left')","43ff112a":"trainData = trainData.merge(bureauCount, on = 'SK_ID_CURR', how = 'left')","c6693f69":"trainData = trainData.merge(prevCount, on = 'SK_ID_CURR', how = 'left')","2e3b0a2d":"trainData.head()","0a994f34":"testCopy = test.copy()\ntraintestCopy = train.copy()","39bb53a6":"from sklearn import preprocessing\nle = preprocessing.LabelEncoder()\n\ntestCopy['NAME_CONTRACT_TYPE'] = testCopy['NAME_CONTRACT_TYPE'].fillna(\"Unknown\")\ntraintestCopy['NAME_CONTRACT_TYPE'] = traintestCopy['NAME_CONTRACT_TYPE'].fillna(\"Unknown\")\nle.fit(traintestCopy['NAME_CONTRACT_TYPE'])\nle.classes_\ntestCopy['NAME_CONTRACT_TYPE'] = le.transform(testCopy['NAME_CONTRACT_TYPE'])\n\n\ntestCopy['CODE_GENDER'] = testCopy['CODE_GENDER'].fillna(\"Unknown\")\ntraintestCopy['CODE_GENDER'] = traintestCopy['CODE_GENDER'].fillna(\"Unknown\")\nle.fit(traintestCopy['CODE_GENDER'])\nle.classes_\ntestCopy['CODE_GENDER'] = le.transform(testCopy['CODE_GENDER'])\n\n\ntestCopy['FLAG_OWN_CAR'] = testCopy['FLAG_OWN_CAR'].fillna(\"Unknown\")\ntraintestCopy['FLAG_OWN_CAR'] = traintestCopy['FLAG_OWN_CAR'].fillna(\"Unknown\")\nle.fit(traintestCopy['FLAG_OWN_CAR'])\nle.classes_\ntestCopy['FLAG_OWN_CAR'] = le.transform(testCopy['FLAG_OWN_CAR'])\n\n\ntestCopy['FLAG_OWN_REALTY'] = testCopy['FLAG_OWN_REALTY'].fillna(\"Unknown\")\ntraintestCopy['FLAG_OWN_REALTY'] = traintestCopy['FLAG_OWN_REALTY'].fillna(\"Unknown\")\nle.fit(traintestCopy['FLAG_OWN_REALTY'])\nle.classes_\ntestCopy['FLAG_OWN_REALTY'] = le.transform(testCopy['FLAG_OWN_REALTY'])\n\n\ntestCopy['NAME_TYPE_SUITE'] = testCopy['NAME_TYPE_SUITE'].fillna(\"Unknown\")\ntraintestCopy['NAME_TYPE_SUITE'] = traintestCopy['NAME_TYPE_SUITE'].fillna(\"Unknown\")\nle.fit(traintestCopy['NAME_TYPE_SUITE'])\nle.classes_\ntestCopy['NAME_TYPE_SUITE'] = le.transform(testCopy['NAME_TYPE_SUITE'])\n\n\ntestCopy['NAME_INCOME_TYPE'] = testCopy['NAME_INCOME_TYPE'].fillna(\"Unknown\")\ntraintestCopy['NAME_INCOME_TYPE'] = traintestCopy['NAME_INCOME_TYPE'].fillna(\"Unknown\")\nle.fit(traintestCopy['NAME_INCOME_TYPE'])\nle.classes_\ntestCopy['NAME_INCOME_TYPE'] = le.transform(testCopy['NAME_INCOME_TYPE'])\n\n\ntestCopy['NAME_EDUCATION_TYPE'] = testCopy['NAME_EDUCATION_TYPE'].fillna(\"Unknown\")\ntraintestCopy['NAME_EDUCATION_TYPE'] = traintestCopy['NAME_EDUCATION_TYPE'].fillna(\"Unknown\")\nle.fit(traintestCopy['NAME_EDUCATION_TYPE'])\nle.classes_\ntestCopy['NAME_EDUCATION_TYPE'] = le.transform(testCopy['NAME_EDUCATION_TYPE'])\n\n\ntestCopy['NAME_FAMILY_STATUS'] = testCopy['NAME_FAMILY_STATUS'].fillna(\"Unknown\")\ntraintestCopy['NAME_FAMILY_STATUS'] = traintestCopy['NAME_FAMILY_STATUS'].fillna(\"Unknown\")\nle.fit(traintestCopy['NAME_FAMILY_STATUS'])\nle.classes_\ntestCopy['NAME_FAMILY_STATUS'] = le.transform(testCopy['NAME_FAMILY_STATUS'])\n\n\ntestCopy['NAME_HOUSING_TYPE'] = testCopy['NAME_HOUSING_TYPE'].fillna(\"Unknown\")\ntraintestCopy['NAME_HOUSING_TYPE'] = traintestCopy['NAME_HOUSING_TYPE'].fillna(\"Unknown\")\nle.fit(traintestCopy['NAME_HOUSING_TYPE'])\nle.classes_\ntestCopy['NAME_HOUSING_TYPE'] = le.transform(testCopy['NAME_HOUSING_TYPE'])\n\n\ntestCopy['OCCUPATION_TYPE'] = testCopy['OCCUPATION_TYPE'].fillna(\"Unknown\")\ntraintestCopy['OCCUPATION_TYPE'] = traintestCopy['OCCUPATION_TYPE'].fillna(\"Unknown\")\nle.fit(traintestCopy['OCCUPATION_TYPE'])\nle.classes_\ntestCopy['OCCUPATION_TYPE'] = le.transform(testCopy['OCCUPATION_TYPE'])\n\n\ntestCopy['ORGANIZATION_TYPE'] = testCopy['ORGANIZATION_TYPE'].fillna(\"Unknown\")\ntraintestCopy['ORGANIZATION_TYPE'] = traintestCopy['ORGANIZATION_TYPE'].fillna(\"Unknown\")\nle.fit(traintestCopy['ORGANIZATION_TYPE'])\nle.classes_\ntestCopy['ORGANIZATION_TYPE'] = le.transform(testCopy['ORGANIZATION_TYPE'])\n\n\ntestCopy['WEEKDAY_APPR_PROCESS_START'] = testCopy['WEEKDAY_APPR_PROCESS_START'].fillna(\"Unknown\")\ntraintestCopy['WEEKDAY_APPR_PROCESS_START'] = traintestCopy['WEEKDAY_APPR_PROCESS_START'].fillna(\"Unknown\")\nle.fit(traintestCopy['WEEKDAY_APPR_PROCESS_START'])\nle.classes_\ntestCopy['WEEKDAY_APPR_PROCESS_START'] = le.transform(testCopy['WEEKDAY_APPR_PROCESS_START'])\n\n\ntestCopy['FONDKAPREMONT_MODE'] = testCopy['FONDKAPREMONT_MODE'].fillna(\"Unknown\")\ntraintestCopy['FONDKAPREMONT_MODE'] = traintestCopy['FONDKAPREMONT_MODE'].fillna(\"Unknown\")\nle.fit(traintestCopy['FONDKAPREMONT_MODE'])\nle.classes_\ntestCopy['FONDKAPREMONT_MODE'] = le.transform(testCopy['FONDKAPREMONT_MODE'])\n\n\ntestCopy['HOUSETYPE_MODE'] = testCopy['HOUSETYPE_MODE'].fillna(\"Unknown\")\ntraintestCopy['HOUSETYPE_MODE'] = traintestCopy['HOUSETYPE_MODE'].fillna(\"Unknown\")\nle.fit(traintestCopy['HOUSETYPE_MODE'])\nle.classes_\ntestCopy['HOUSETYPE_MODE'] = le.transform(testCopy['HOUSETYPE_MODE'])\n\n\ntestCopy['WALLSMATERIAL_MODE'] = testCopy['WALLSMATERIAL_MODE'].fillna(\"Unknown\")\ntraintestCopy['WALLSMATERIAL_MODE'] = traintestCopy['WALLSMATERIAL_MODE'].fillna(\"Unknown\")\nle.fit(traintestCopy['WALLSMATERIAL_MODE'])\nle.classes_\ntestCopy['WALLSMATERIAL_MODE'] = le.transform(testCopy['WALLSMATERIAL_MODE'])\n\n\ntestCopy['EMERGENCYSTATE_MODE'] = testCopy['EMERGENCYSTATE_MODE'].fillna(\"Unknown\")\ntraintestCopy['EMERGENCYSTATE_MODE'] = traintestCopy['EMERGENCYSTATE_MODE'].fillna(\"Unknown\")\nle.fit(traintestCopy['EMERGENCYSTATE_MODE'])\nle.classes_\ntestCopy['EMERGENCYSTATE_MODE'] = le.transform(testCopy['EMERGENCYSTATE_MODE'])","ad53ca82":"testData = testCopy.merge(bureau_summarise, on = 'SK_ID_CURR', how = \"left\")","51f0eb7f":"testData = testData.merge(credit_card_bal_summarise, on = 'SK_ID_CURR', how = 'left')","1ff1b688":"testData = testData.merge(installment_payments_summarise, on = 'SK_ID_CURR', how = 'left')","fe735edb":"testData = testData.merge(pos_cash_bal_summarise, on = 'SK_ID_CURR', how = 'left')","7933b1fc":"testData = testData.merge(bureau_bal_summarise, on = 'SK_ID_CURR', how = 'left')","c8a0925a":"testData = testData.merge(previous_application_summarise, on = 'SK_ID_CURR', how = 'left')","90cc42cc":"testData = testData.merge(bureau_encoding_summarise, on = 'SK_ID_CURR', how = 'left')","68593ed1":"testData = testData.merge(bureau_bal_encoding_summaries, on = 'SK_ID_CURR', how = 'left')","0618e846":"testData = testData.merge(credit_card_bal_encoding_summaries, on = 'SK_ID_CURR', how = 'left')","18cc6939":"testData = testData.merge(pos_cash_bal_encoding_summarise, on = 'SK_ID_CURR', how = 'left')","4e469d9d":"testData = testData.merge(previous_applicationEncoding_summarise, on = 'SK_ID_CURR', how = 'left')","87baa605":"testData = testData.merge(bureauCount, on = 'SK_ID_CURR', how = 'left')","99c65b52":"testData = testData.merge(prevCount, on = 'SK_ID_CURR', how = 'left')","56f607b2":"testData.head()","aae7c816":"del train, trainCopy, bureau, bureau_bal, bureau_bal_encoding, bureau_bal_encoding_summaries, bureau_bal_summarise, trainData\ndel bureau_balCopy, bureau_encoding, bureau_encoding_summarise, bureau_summarise\ndel credit_card_bal, credit_card_bal_encoding, credit_card_bal_encoding_summaries, credit_card_bal_summarise, credit_card_balCopy\ndel installment_payments, installment_payments_summarise, installment_paymentsCopy\ndel previous_application, previous_application_summarise, previous_applicationCopy, previous_applicationEncoding, previous_applicationEncoding_summarise\ndel pos_cash_bal, pos_cash_bal_encoding, pos_cash_bal_encoding_summarise, pos_cash_bal_summarise, pos_cash_balCopy\ndel test, testCopy, testData","3f903864":"#from guppy import hpy; h=hpy()\n#h.heap()","53a75963":"# Joining All Count Variables","cb975d63":"### Pos_cash_bal:\nNAME_CONTRACT_STATUS","90053ad2":"# Label Encoding for Categorical Variables","31090350":"# Joining All Labels","57981347":"# Similarly Creating Features For Test Data","6699435f":"# Reading The Data","9c9e7d86":"### Bureau:\nCREDIT_ACTIVE,\nCREDIT_CURRENCY,\nCREDIT_TYPE","254ba70c":"### Installment_payments:\nNA","18a7f953":"# Joining All Numeric Variables\n","6bc26e90":"### Bureau_bal:\nSTATUS","6d05557a":"### Credit_card_bal:\nNAME_CONTRACT_STATUS","1b73ac2b":"# Creating a copy of Data","3a2257a4":"* This Notebook Explains about feature engineering techniques used in this comeptition by me. I created approximately 300 new features. They gave a score of 0.784 using XGBoost modelling without any Hyper parameter Tuning. Since I don't have a machine which is capable of training all these features, I believe this could help others going forward in this competition.","e24de819":"# Numeric Feature Creation","98bf2d94":"### Following Features Will be used for Label Encoding,","91fdade7":"\n### Train:\nNAME_CONTRACT_TYPE,\nCODE_GENDER,\nFLAG_OWN_CAR,\nFLAG_OWN_REALTY,\nNAME_TYPE_SUITE,\nNAME_INCOME_TYPE,\nNAME_EDUCATION_TYPE,\nNAME_FAMILY_STATUS,\nNAME_HOUSING_TYPE,\nOCCUPATION_TYPE,\nORGANIZATION_TYPE,\nWEEKDAY_APPR_PROCESS_START,\nFONDKAPREMONT_MODE,\nHOUSETYPE_MODE,\nWALLSMATERIAL_MODE,\nEMERGENCYSTATE_MODE","fb97fc6a":"# Counts"}}