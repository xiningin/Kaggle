{"cell_type":{"452a3c5c":"code","83a07951":"code","6b601da2":"code","8bbc3701":"code","09900471":"code","5d177f74":"code","453e9c61":"code","1f5cf987":"code","3a45f8dd":"code","89819ec9":"code","c11df6e1":"code","3416967e":"code","0d1b48b5":"code","7d640016":"code","55f8cc23":"code","f249b0dd":"code","17713281":"code","2c330394":"code","c89b4f62":"code","7d312682":"code","3a1198fe":"markdown","8af02754":"markdown","ebce8adb":"markdown","cae4c141":"markdown","70535960":"markdown","b0afe8e3":"markdown","08f47e6f":"markdown","b413865f":"markdown","e01b471b":"markdown","495cf129":"markdown","8a4b49aa":"markdown","5bce1d29":"markdown","abb4ba9f":"markdown","e9abb435":"markdown","dc32a238":"markdown"},"source":{"452a3c5c":"import requests\nimport pandas as pd\nfrom bs4 import BeautifulSoup\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom scipy.stats import pearsonr\nfrom scipy.stats import f_oneway\nfrom statsmodels.stats.multicomp import MultiComparison\nfrom statsmodels.stats.multicomp import pairwise_tukeyhsd\nimport math\n\n#Current Year, 2020\n#url = 'https:\/\/www.espn.com\/nba\/player\/gamelog\/_\/id\/3012\/kyle-lowry'\n\n#2019\nurl = 'https:\/\/www.espn.com\/nba\/player\/gamelog\/_\/id\/3012\/type\/nba\/year\/2019'\n\n#2018\n#url = 'https:\/\/www.espn.com\/nba\/player\/gamelog\/_\/id\/3012\/type\/nba\/year\/2018'\n\n\nsoup = BeautifulSoup(requests.get(url).content, 'html.parser')\ncolumns = ['Date','OPP','Result','MIN','FG','FG%','3PT','3P%','FT','FT%','REB','AST','BLK','STL','PF','TO', 'PTS']\n\nall_data = []\nfor row in soup.select('.Table__TR'):\n    tds = [td.get_text(strip=True, separator=' ') for td in row.select('.Table__TD')]\n    if len(tds) != 17:\n        continue\n    all_data.append(tds)\n\ndf = pd.DataFrame(all_data, columns=columns)\n\n\n","83a07951":"df.info()\ndf.dtypes","6b601da2":"df.PTS = pd.to_numeric(df.PTS)\ndf.AST = pd.to_numeric(df.AST)\ndf.MIN = pd.to_numeric(df.MIN)\ndf.head()\n","8bbc3701":"sns.lmplot(x=\"MIN\", y=\"PTS\", data=df)\nplt.show()","09900471":"sns.lmplot(x=\"MIN\", y=\"AST\", data=df)\nplt.show()","5d177f74":"print('Kyle Lowry Mean Points is %.3f' % df['PTS'].mean())","453e9c61":"X = df[['MIN']]\nY = df[['PTS']]\n#df = pd.get_dummies(df)\n\n# Build linear regression model\nlr_model = LinearRegression(fit_intercept=True, normalize=False)\nlr_model.fit(X, Y)\nsc = lr_model.score(X, Y)\nprint('R2 score: %.3f' % sc)","1f5cf987":"y_pred = lr_model.predict(X)\nrmse = math.sqrt(mean_squared_error(Y, y_pred))\nprint('Root Mean Square Error is %.3f. Data STD is %.3f' % (rmse, Y.std()))","3a45f8dd":"# Calculate Pearson correlation coefficient between the two variables\ncorr, _ = pearsonr(df['PTS'], df['AST'])\nprint('Pearson correlation coefficient: %.3f' % corr)","89819ec9":"# Calculate Pearson correlation coefficient between the two variables, PTS and MITS\ncorr, _ = pearsonr(df['PTS'], df['MIN'])\nprint('Pearson correlation coefficient: %.3f' % corr)","c11df6e1":"# Calculate Pearson correlation coefficient between the two variables, AST and MIN\ncorr, _ = pearsonr(df['AST'], df['MIN'])\nprint('Pearson correlation coefficient: %.3f' % corr)","3416967e":"df.columns","0d1b48b5":"y = df.PTS","7d640016":"lowry_features = ['MIN','FG%','3P%','FT%','TO']\nX = df[lowry_features]","55f8cc23":"X.describe()","f249b0dd":"X.head()","17713281":"lowry_model = DecisionTreeRegressor(random_state=1)\nlowry_model.fit(X, y)\nprint(\"Making predictions for the following 5 stat lines:\")\nprint(X.head())\nprint(\"The predictions are\")\nprint(lowry_model.predict(X.head()))","2c330394":"y.head()","c89b4f62":"predicted_points = lowry_model.predict(X)\nmean_absolute_error(y, predicted_points)","7d312682":"train_X, val_X, train_y, val_y = train_test_split(X, y, random_state = 0)\nlowry_model = DecisionTreeRegressor()\nlowry_model.fit(train_X, train_y)\npts_predictions = lowry_model.predict(val_X)\nprint(mean_absolute_error(val_y, pts_predictions))\n","3a1198fe":"Fistly, we display a scatterplot of the MIN vs PTS which also fits a linear model where the MIN acts as the independent variable(the variable we will be changing) and the PTS as the dependent variable(dependent on MIN, we are measuring PTS).","8af02754":"**Scope of the analysis**\n\nI am dedicating this notebook to the greatest raptor of all Time, Kyle Lowry. I want to explore Kyle\u2019s performance and if it is possible to predict Kyles PPG and AST.","ebce8adb":"Not really close to one here, meaning no association between the two. Curios to try PTS and MINS","cae4c141":"**Selecting Data for modelling**","70535960":"> **Read the data**\n\ndoing some basic changing of data types and previewing some of the data.\n","b0afe8e3":"Lets checkout X","08f47e6f":"WHY IS MAE 0!","b413865f":"Less correlated then PTS is!","e01b471b":"In Mean absolute Error is 0, Out Mean absolute error is 4.","495cf129":"**Web Scraping**\n\nTo get our data , I built a small web scrapper to get the data from espn. \n\n","8a4b49aa":"Kind of makes sense as you see the predictions of Points are higher when MIN , FG%, 3p%, are better.","5bce1d29":"Features! I will choose features that seem to have an affect on PPG, such as Minutes, FG%, TO, etc.","abb4ba9f":"**Pearson Correlation Coefficient**\n\na measure of the linear association between two variables X and Y. It has a value between -1 and 1 .","e9abb435":"Selecting prediction Target!  We want to Predict Points or PPG. We will name this y.","dc32a238":"Perfect Correlation is 1, so this is somewhat corellated."}}