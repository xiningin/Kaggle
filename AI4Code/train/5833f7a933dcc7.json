{"cell_type":{"c67dd057":"code","daaf719a":"code","886c1a10":"code","ec2d7c1e":"code","33374579":"code","167d8768":"code","135e8be1":"code","250d6f66":"code","c4ec922f":"code","4f4639f2":"code","e1457d06":"code","c42a1c7d":"code","e7e6abad":"code","075a1568":"code","3bf1af25":"code","980e6fe7":"code","28dcafe6":"code","4ae2ac79":"code","a822c328":"code","4d8e1667":"code","9eaec43f":"code","bbb66f94":"code","0e4cb06c":"code","7c07ff95":"code","c42d3dfb":"code","d06cab4c":"code","7b12f57b":"code","cdb27f94":"markdown","c104b59e":"markdown","960915cc":"markdown","184ae7ea":"markdown","6212dfb9":"markdown","954b225d":"markdown","e42b306e":"markdown","27b1dbd0":"markdown"},"source":{"c67dd057":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","daaf719a":"!pwd","886c1a10":"import matplotlib.pyplot as plt\nimport plotly.graph_objs as go\nfrom plotly.subplots import make_subplots","ec2d7c1e":"df = pd.read_csv('\/kaggle\/input\/chennai-water-management\/chennai_reservoir_levels.csv',\n                parse_dates = ['Date'], dayfirst =True)\n#df['Date'] = pd.to_datetime(df['Date'], format='%d-%m-%Y')\ndf.head()","33374579":"df.dtypes","167d8768":"df.isna().sum()","135e8be1":"df.Date.dt.year.min(), df.Date.dt.year.max()","250d6f66":"fig = make_subplots(rows=2, cols=2,\n                   subplot_titles=['Poondi Resoviour (in mcft)',\n                                  'Redhills Resoviour (in mcft)'])\n\nfig.add_trace(go.Scatter(x= df.Date, y=df.POONDI, name='Poondi'), row=1, col=1)\nfig.add_trace(go.Scatter(x= df.Date, y=df.REDHILLS, showlegend=False), row=1, col=2)\nfig.add_trace(go.Scatter(x= df.Date, y=df.CHEMBARAMBAKKAM), row=2, col=1)\nfig.add_trace(go.Scatter(x= df.Date, y=df.CHOLAVARAM), row=2, col=2)\n\nfig.update_layout(title_text = \"Water availability in Chennai's four major reserviours {}-{}\".format(df.Date.dt.year.min(), df.Date.dt.year.max()))\n\nfig.show()","c4ec922f":"df_tidy = df.melt(id_vars = ['Date'], var_name='Resoviour', value_name='Water_Level')\ndf_tidy.head()","4f4639f2":"import plotly.express as px\n\npx.line(df_tidy, \n        x=\"Date\",\n        y='Water_Level',\n        facet_col=\"Resoviour\",\n        facet_col_wrap=2,\n        color='Resoviour',\n        title=\"Water availability in Chennai's four major reserviours {}-{}\".format(df.Date.dt.year.min(), df.Date.dt.year.max()))","e1457d06":"fig = px.line(df.melt(id_vars=['Date'],var_name='Resoviour',value_name='Water_Level'), \n              x=\"Date\", \n              y=\"Water_Level\", \n              color=\"Resoviour\",                  \n              facet_col=\"Resoviour\",\n              facet_col_wrap=1,\n              height=1200, width=1200,\n             )\nfig.update_yaxes(matches=None)\nfig.show()","c42a1c7d":"df['total'] = df.drop(columns='Date').sum(axis=1)\ndf.head()","e7e6abad":"px.line(df,\n       x='Date',\n       y='total',\n       title='Total water availability from all four reserviours in mcft')","075a1568":"rain_df = pd.read_csv('\/kaggle\/input\/chennai-water-management\/chennai_reservoir_rainfall.csv',\n                     parse_dates=['Date'], dayfirst=True)\nrain_df.head()","3bf1af25":"rain_df.dtypes","980e6fe7":"px.line(rain_df.melt(id_vars=['Date'], var_name='Resoviour', value_name='Rainfall'), \n        x=\"Date\",\n        y='Rainfall',\n        facet_col=\"Resoviour\",\n        facet_col_wrap=2,\n        color='Resoviour',\n        )","28dcafe6":"rain_df['YearMonth'] = pd.to_datetime(rain_df.Date.dt.year.astype(str) + rain_df.Date.dt.month.astype(str), format='%Y%m') \nrain_df.head()","4ae2ac79":"rain_df.YearMonth.value_counts()","a822c328":"rain_df['total'] = rain_df.drop(columns=['Date', 'YearMonth']).sum(axis=1)\nrain_df","4d8e1667":"rain_df.groupby('YearMonth').total.sum().reset_index()","9eaec43f":"px.bar(rain_df.groupby('YearMonth').total.sum().reset_index(),\n       x='YearMonth',\n       y='total',\n       #color='season'\n      )","bbb66f94":"rain_df['Year'] = pd.to_datetime(rain_df.Date.dt.year.astype(str), format='%Y') \nrain_df.head()","0e4cb06c":"montly_rain_df = rain_df.groupby('YearMonth').total.sum().reset_index()\nmontly_rain_df","7c07ff95":"month_to_season = {1: 'winter', 2: 'winter', 3: 'summer', 4: 'summer', 5: 'summer', 6: 'monsoon', 7: 'monsoon', 8: 'monsoon', 9: 'monsoon',\n 10: 'post-monsoon', 11: 'post-monsoon', 12: 'post-monsoon'}","c42d3dfb":"montly_rain_df['season'] = montly_rain_df.YearMonth.dt.month.map(month_to_season) \nmontly_rain_df","d06cab4c":"px.bar(montly_rain_df,\n       x='YearMonth',\n       y='total',\n       color='season',\n       title='Yearly rainfall in the four major resoviour regions in mm'\n      )","7b12f57b":"px.bar(df.query(\"Date.dt.month == 3 and Date.dt.day== 1\"),\n       x='Date',\n       y='total',\n       title='Availability of water in total at the begining of summer ')","cdb27f94":"Activity\n\nCan you think of a similar urban large scale problem having a real time affect that you would like to analyze and solve with the help data? Note them, break down the possible ways and steps to solve the same","c104b59e":"*Compare the water levels over time periods*","960915cc":"2. Look at the overall water levels","184ae7ea":"*4. Water Shortage estimation*","6212dfb9":"Inference:\n\nWe could clearly see that evey year there is a decremental phase and a replenishment phase (mainly during october to december)\nThere was a very bad water scarcity phase seen during 2004.\nWe can also see a bad phase during 2014-15 but there was to water availability in two reservoirs (Redhills and Chembarambakkam) and so it was a savior.\nNow coming to recent times, the data shows that there is no water availability in any of the four major reservoirs.","954b225d":"https:\/\/stackoverflow.com\/a\/51289428\/8210613","e42b306e":"3. Rainfall levels","27b1dbd0":"3. Total yearly rainfall"}}