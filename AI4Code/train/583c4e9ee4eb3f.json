{"cell_type":{"0e57af2f":"code","bb7e59f3":"code","672b1915":"code","90a70b21":"code","85432c95":"code","9a4a1da3":"code","1e295e5f":"code","4642d7ed":"code","36b54fef":"code","036ea748":"code","bcdd9f4d":"code","d74956da":"code","45f36b11":"code","266567c7":"code","6e39436e":"code","35650719":"code","1acd8f36":"markdown"},"source":{"0e57af2f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport math\nimport matplotlib as mpl\nfrom matplotlib import pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bb7e59f3":"forbes_data= pd.read_csv('..\/input\/forbes-billionaires-2021-30\/forbes_billionaires_geo.csv')\nforbes_data.head()","672b1915":"forbes_data.isnull().sum()","90a70b21":"forbes_data['Country'].value_counts()[:20]","85432c95":"plt.figure(figsize=(12,5))\ncountry_data= forbes_data['Country'].value_counts()[:20]\ncountry_data.plot.bar()\nplt.title('Top 20 Billionaires Country', fontsize=15)\nplt.xlabel(\"Country\",fontsize=15)\nplt.ylabel(\"Number of Billionaires\",fontsize=15)","9a4a1da3":"plt.figure(figsize=(12,5))\nsns.barplot(y=\"Name\", x=\"NetWorth\", data=forbes_data[:10])\nplt.title('Top 10 Billionaires', fontsize=15)\nplt.xlabel(\"NetWorth: USD (bilions)\",fontsize=15)\nplt.ylabel(\"Name\",fontsize=15)\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","1e295e5f":"Self_made_status= len(forbes_data[forbes_data['Self_made']==True])\nNot_Self_made_status=len(forbes_data[forbes_data['Self_made']==False])\nplt.figure(figsize=(12,5))\nSelf_made_pie = [Self_made_status,Not_Self_made_status]\nlabels = 'Self Made','Not Self made'\nplt.pie(Self_made_pie,labels=labels,autopct='%1.1f%%')\nplt.title('Self Made Rate',fontsize=15)","4642d7ed":"forbes_data['Status'].unique()","36b54fef":"plt.figure(figsize=(12,5))\nsns.countplot(forbes_data['Status'],order = forbes_data['Status'].value_counts().index)\nplt.title('Marriage Status Rate',fontsize=15)\nplt.show()\n\nplt.figure(figsize=(12,5))\nstatus_data=[]\nfor i in range(len(forbes_data['Status'].unique())):\n    if i == 4:\n        continue\n    status_data.append(len(forbes_data[forbes_data['Status']==forbes_data['Status'].unique()[i]]))\nlabels = 'In Relationship', 'Married', 'Divorced', 'Widowed, Remarried','Widowed', 'Single', 'Separated', 'Engaged'\nplt.pie(status_data,labels=labels,autopct='%1.1f%%')","036ea748":"forbes_data= forbes_data.dropna(subset=['Age'])\ndef Age(age):\n    if age >= 90 : return '90 years old'\n    if age >= 80 : return '80 years old'\n    if age >= 70 : return '70 years old'\n    if age >= 60 : return '60 years old'\n    if age >= 50 : return '50 years old'\n    if age >= 40 : return '40 years old'\n    if age >= 30 : return '30 years old'\n    if age >= 20 : return '20 years old'\n    else: return 'Teenager'\nforbes_data['age_group'] = forbes_data.apply(lambda x: Age(x[\"Age\"]), axis = 1)","bcdd9f4d":"plt.figure(figsize=(12,5))\ng = sns.countplot(forbes_data['age_group'],order = forbes_data['age_group'].value_counts().index)\nplt.title('Forbes Billionaires Age',fontsize=15)\nplt.xlabel(\"Age\", fontsize=15)","d74956da":"plt.figure(figsize=(12,5))\nsns.countplot(forbes_data['Children'],order = forbes_data['Children'].value_counts().index)\nplt.title('Forbes Billionaires Children',fontsize=15)\nplt.xlabel(\"Number of Children\", fontsize=12)","45f36b11":"forbes_data['Education'].unique()","266567c7":"import re\ndropout_highschool = forbes_data.Education.str.contains('Drop Out, High School', flags = re.IGNORECASE, regex = True, na = False)\nuniversity= forbes_data.Education.str.contains('University', flags = re.IGNORECASE, regex = True, na = False)\nbaschelor_science= forbes_data.Education.str.contains('Bachelor of Science', flags = re.IGNORECASE, regex = True, na = False)\nbaschelor_art_science= forbes_data.Education.str.contains('Bachelor of Arts\/Science', flags = re.IGNORECASE, regex = True, na = False)\nMaster_of= forbes_data.Education.str.contains('Master of', flags = re.IGNORECASE, regex = True, na = False)\ndropout = forbes_data.Education.str.contains('Drop Out', flags = re.IGNORECASE, regex = True, na = False)\n\nprint(\"Drop out High School: \"+ str(len(forbes_data[dropout_highschool]['Education'])))\nprint(\"Drop out: \"+ str(len(forbes_data[dropout]['Education'])))\nprint(\"University: \"+ str(len(forbes_data[university]['Education'])-len(forbes_data[dropout]['Education'])))\nprint(\"University with baschelor_science: \"+ str(len(forbes_data[baschelor_science]['Education'])))\nprint(\"University with Art\/science: \"+ str(len(forbes_data[baschelor_art_science]['Education'])))\nprint(\"Master: \"+ str(len(forbes_data[Master_of]['Education'])))","6e39436e":"Drop_out = len(forbes_data[dropout]['Education'])\nUniversity = len(forbes_data[university]['Education'])-len(forbes_data[dropout]['Education'])\nMaster = len(forbes_data[Master_of]['Education'])\nEducation = [Drop_out, University, Master]\n\nlabels = 'Drop_out','University', 'Master'\nplt.pie(Education,labels=labels,autopct='%1.1f%%')\nplt.title('Forbes Billionaires Education',fontsize=15)","35650719":"top_10_billionaires = forbes_data[:10]\nprint(\"Drop out: \"+ str(len(top_10_billionaires[dropout]['Education'])))\nprint(top_10_billionaires[dropout]['Education'])","1acd8f36":"Throughout Top 10 billionaries, there are 4 drop out university from Harvard, Stanford, University of Chicago"}}