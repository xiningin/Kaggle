{"cell_type":{"8358f255":"code","218e4866":"code","b78e8f02":"code","9b7f64b1":"code","95892b11":"code","504486a9":"code","6fd97cac":"code","c80574f4":"code","2ffd257a":"code","00edcb12":"code","79dfd112":"code","7c9daebf":"code","cd830f86":"code","bed40f4b":"code","3ff3aa08":"code","43712f70":"code","7ad5b9c9":"code","6afec54a":"code","5fa2a860":"code","7e3d5ceb":"code","9a12b667":"code","d43f24b3":"code","264a9d9c":"code","114e4d17":"code","da6a9afe":"code","3f64eb32":"code","02e15ebc":"code","733f948e":"code","2dda1a5c":"code","d552faff":"code","ac36b432":"code","17222aff":"code","92ca178a":"code","3c71f647":"code","4d171d30":"code","16815460":"code","d3b3f2a1":"code","c8342e1d":"code","65e4549b":"code","ff232aff":"code","10c9f842":"markdown","b69c7d05":"markdown","fbe79bdd":"markdown","08b624cb":"markdown","eec4510a":"markdown","2b72dcf1":"markdown","a255a33c":"markdown","34e1f995":"markdown","eb68695d":"markdown","3795c1d5":"markdown","7c93f730":"markdown","dcaea265":"markdown","f3b4d5a2":"markdown","64290c87":"markdown"},"source":{"8358f255":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nfrom scipy import stats\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import accuracy_score,confusion_matrix\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier,plot_tree\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB,MultinomialNB\nwarnings.filterwarnings('ignore')\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","218e4866":"df= pd.read_csv('..\/input\/heart-disease-uci\/heart.csv')\ndf.head()","b78e8f02":"print('shape of data:',df.shape)","9b7f64b1":"catgorical_column = [i for i in df.columns if df[i].nunique()<10]\nprint(catgorical_column)\nnumerical_column = [i for i in df.columns if df[i].nunique()>10]\nprint(numerical_column)","95892b11":"print('Null values:',df.isna().sum().sum())","504486a9":"target=df['target'].value_counts()","6fd97cac":"plt.pie(target,\n       autopct='%1.2f%%',\n       labels=['0','1'])\nplt.legend()\nplt.show()","c80574f4":"sns.countplot(df['sex'],)\nplt.legend()\nplt.show()","2ffd257a":"sns.pairplot(df)","00edcb12":"df[['cp','target']].groupby(['cp'],as_index=False).mean()","79dfd112":"df['trestbps_grp']=pd.cut(df['trestbps'],7)\ndf[['trestbps_grp','target']].groupby(['trestbps_grp'],as_index=False).mean()","7c9daebf":"df['chol_grp']=pd.cut(df['chol'],5)\ndf[['chol_grp','target']].groupby(['chol_grp'],as_index=False).mean()","cd830f86":"df[['fbs','target']].groupby(['fbs'],as_index=False).mean()","bed40f4b":"df[['restecg','target']].groupby(['restecg'],as_index=False).mean()","3ff3aa08":"df['thalach_grp']=pd.cut(df['thalach'],4)\ndf[['thalach_grp','target']].groupby(['thalach_grp'],as_index=False).mean()","43712f70":"num =df[['age', 'trestbps', 'chol', 'thalach', 'oldpeak',]]","7ad5b9c9":"sns.swarmplot(x='fbs',y='oldpeak',data=df,hue='target')\nplt.show()","6afec54a":"fig,(a1,a2,a3)=plt.subplots(1,3,figsize=(10,5))\nsns.boxplot(y=df['age'],ax=a1)\nsns.boxplot(y=df['trestbps'],ax=a2)\nsns.boxplot(y=df['chol'],ax=a3)\nplt.show()\nfig,(a1,a2)=plt.subplots(1,2,figsize=(8,5))\nsns.boxplot(y=df['thalach'],ax=a1)\nsns.boxplot(y=df['oldpeak'],ax=a2)","5fa2a860":"z=np.abs(stats.zscore(df[numerical_column]))\nprint(z)\nprint(np.where(z>3))","7e3d5ceb":"z_price = df[(z<3).all(axis=1)]\ndf.shape,z_price.shape","9a12b667":"z_price.head()","d43f24b3":"X = df.iloc[:,3:-4]\ny = df['target']\nmm= StandardScaler()\nX=pd.DataFrame(mm.fit_transform(X))\n","264a9d9c":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.20,random_state=5,stratify =y)","114e4d17":"X_train.shape,X_test.shape,y_train.shape,y_test.shape","da6a9afe":"wt = {'uniform':[],'distance':[]}\nfor i in wt.keys():\n    for j in range(1,21,2):\n        knn = KNeighborsClassifier(n_neighbors=j,weights=i)\n        knn.fit(X_train,y_train)\n        y_predict=knn.predict(X_test)\n        wt[i].append(accuracy_score(y_test,y_predict))","3f64eb32":"plt.plot(wt['uniform'],marker='o',c='r')\nplt.plot(wt['distance'],marker='o',c='g')\nplt.show()","02e15ebc":"wt = {'1':[],'2':[]}\nfor i in wt.keys():\n    for j in range(1,21,2):\n        knn = KNeighborsClassifier(n_neighbors=j,weights='uniform',p=int(i))\n        knn.fit(X_train,y_train)\n        y_predict=knn.predict(X_test)\n        wt[i].append(accuracy_score(y_test,y_predict))","733f948e":"plt.plot(wt['1'],marker='o',c='r')\nplt.plot(wt['2'],marker='o',c='g')\nplt.show()","2dda1a5c":"knn = KNeighborsClassifier(n_neighbors=j,weights='uniform',p=1)\nknn.fit(X_train,y_train)\ny_predict=knn.predict(X_test)\nknn.score(X_test,y_test)","d552faff":"KNN_con=confusion_matrix(y_test,y_predict)","ac36b432":"knn_score = round(knn.score(X_test,y_test)*100)\nknn_score","17222aff":"dec = DecisionTreeClassifier(criterion='entropy',min_samples_split=2,max_features=2,max_depth=3)\ndec.fit(X_train,y_train)\ny_predict = dec.predict(X_test)\nprint('test',confusion_matrix(y_test,y_predict))\nprint('test:',dec.score(X_test,y_test))\nprint('train:',dec.score(X_train,y_train))\n\ndec_con=confusion_matrix(y_test,y_predict)\ndecission_tree=round(dec.score(X_test,y_test)*100)","92ca178a":"plt.figure(figsize=[10,10])\n_ = plot_tree(dec,filled=True,node_ids=True)","3c71f647":"rnd =RandomForestClassifier(n_estimators=15,criterion='entropy',min_samples_split=2,max_features=2,max_depth=3)\nrnd.fit(X_train,y_train)\ny_predict = rnd.predict(X_test)\nprint('train:-',rnd.score(X_train,y_train))\nprint('test:-',rnd.score(X_test,y_test))\nrnd_con=confusion_matrix(y_test,y_predict)","4d171d30":"random_forest= round(rnd.score(X_test,y_test)*100)\nrandom_forest","16815460":"guss=GaussianNB()\nguss.fit(X_train,y_train)\ny_predict = guss.predict(X_test)\nprint(confusion_matrix(y_test,y_predict))\nprint(accuracy_score(y_test,y_predict))\ngussian=accuracy_score(y_test,y_predict)*100\n\nnavi_con=confusion_matrix(y_test,y_predict)","d3b3f2a1":"model=pd.DataFrame({\n    'model':['KNN','Decission Tree','Random forest','Navi bayes'],\n    'score':[knn_score,decission_tree,random_forest,gussian]\n})","c8342e1d":"model.sort_values(by='score',ascending=False)","65e4549b":"sns.barplot(x='model',y='score',data=model)","ff232aff":"plt.figure(figsize=[10,10])\n\n\n\nplt.subplot(2,2,1)\nplt.title('KNN')\nsns.heatmap(KNN_con,annot=True,cbar=False)\n\nplt.subplot(2,2,2)\nplt.title('Decission tree')\nsns.heatmap(dec_con,annot=True,cbar=False)\n\nplt.subplot(2,2,3)\nsns.heatmap(rnd_con,annot=True,cbar=False)\nplt.title('Random Forest',)\n\nplt.subplot(2,2,4)\nsns.heatmap(navi_con,annot=True,cbar=False)\nplt.title('Navi bayes',)\n\nplt.suptitle('Confusion Matrix')","10c9f842":"# Load dataset","b69c7d05":"**Check null values**","fbe79bdd":"***KNN***","08b624cb":"# Conclusion","eec4510a":"# Comparing model","2b72dcf1":"# Prepare data for traning and testing","a255a33c":"#  Kindly give feedback and do upvote if you feel its good","34e1f995":"***Identify caterofical and numerical data columns***","eb68695d":"# Navi Bayes","3795c1d5":"# Random-forest","7c93f730":"# EDA","dcaea265":"# Decission Tree","f3b4d5a2":"# Remove outliers","64290c87":"# ML"}}