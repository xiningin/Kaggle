{"cell_type":{"2f1086a6":"code","23b4b359":"code","0dc93698":"code","00da81e3":"code","3591beff":"code","578d6d42":"code","cb9c6ff9":"code","8acd6727":"code","6fd03a6f":"code","cdc865ec":"code","ac730585":"code","bc0a0f6b":"code","26c284e0":"code","551bd64a":"code","c2e3d629":"code","d286a137":"code","a7340a79":"code","ba1ab2fd":"code","9704c36d":"code","fde6cd56":"code","c58942a7":"code","c0688189":"code","912fb629":"code","0a2c1793":"code","1b5c11e6":"code","99bb4ead":"code","8b50c422":"code","36ce3987":"markdown","8f923ef4":"markdown","c2fa0f94":"markdown","23f19bef":"markdown","5feb7cf1":"markdown","1ede4422":"markdown","4f8d4a79":"markdown","a1cef33f":"markdown","e7535750":"markdown","b31cac32":"markdown"},"source":{"2f1086a6":"# data processing\nimport pandas as pd","23b4b359":"# Load file (this machine can't handle more)\ndf = pd.read_csv(\"\/kaggle\/input\/airline-delay-and-cancellation-data-2009-2018\/2018.csv\")","0dc93698":"# Let's get familiar with the dataset\ndf.info()","00da81e3":"# 7.2M records and 28 columns\n# We have (technical) data on airlines, airport, flight number, etc\n# Pretty much all other data is time-related (in minutes)","3591beff":"# Set to see all columns\npd.set_option('display.max_columns', None)","578d6d42":"df.head()","cb9c6ff9":"# Check unique values in OP_CARRIER (airline) column\ndf.OP_CARRIER.unique()","8acd6727":"# Renaming airline codes to company names\n# Source: https:\/\/en.wikipedia.org\/wiki\/List_of_airlines_of_the_United_States\n\ndf['OP_CARRIER'].replace({\n    'UA':'United Airlines',\n    'AS':'Alaska Airlines',\n    '9E':'Endeavor Air',\n    'B6':'JetBlue Airways',\n    'EV':'ExpressJet',\n    'F9':'Frontier Airlines',\n    'G4':'Allegiant Air',\n    'HA':'Hawaiian Airlines',\n    'MQ':'Envoy Air',\n    'NK':'Spirit Airlines',\n    'OH':'PSA Airlines',\n    'OO':'SkyWest Airlines',\n    'VX':'Virgin America',\n    'WN':'Southwest Airlines',\n    'YV':'Mesa Airline',\n    'YX':'Republic Airways',\n    'AA':'American Airlines',\n    'DL':'Delta Airlines'\n},inplace=True)","6fd03a6f":"# Quality check\ndf.OP_CARRIER.unique()","cdc865ec":"# Total number of canceled flights\ndf.CANCELLED.sum()","ac730585":"# Let's explore column CANCELLED\ndf.CANCELLED.unique()","bc0a0f6b":"# From above we see it's binary: 0 or 1, let's see how it looks like\ncanceled = df[(df['CANCELLED'] > 0)]","26c284e0":"canceled.head(3)","551bd64a":"# OPTIONAL: Leaving only non-canceled flights\n# df = df[(df['CANCELLED'] == 0)]","c2e3d629":"# Departure delay data (in minutes)\ndf.DEP_DELAY.head()","d286a137":"# Arrival delay data (in minutes)\ndf.ARR_DELAY.head()","a7340a79":"# To do this analysis right, let's filter all negative numbers in ARR_DELAY column\n# Number of delayed flights \ndf[df.ARR_DELAY > 0 ].count()","ba1ab2fd":"# Filter out non-delayed flights < 0 DEP_DELAY\ndf = df[(df['ARR_DELAY'] > 0)]","9704c36d":"# Minutes to hours \ndf['ARR_DELAY'] = df['ARR_DELAY'] \/ 60\n\n# Minutes to hours \ndf['DEP_DELAY'] = df['DEP_DELAY'] \/ 60","fde6cd56":"# Down from 7.2 to 2.5 million (relevant) records\ndf.info()","c58942a7":"# Check if FL_DATE is DateTime type\ntype(df['FL_DATE'])","c0688189":"# Convert string to DateTime\npd.to_datetime(df.FL_DATE)","912fb629":"# Month variable\ndf['FL_DATE_month'] = pd.to_datetime(df['FL_DATE']).dt.month\n# Weekday variable\ndf['FL_DATE_weekday'] = pd.to_datetime(df['FL_DATE']).dt.weekday_name","0a2c1793":"import matplotlib.pyplot as plt\n%matplotlib inline","1b5c11e6":"# Arrival and departure delays by month of the year\nplt.figure(figsize=(25, 12)).subplots_adjust(hspace = 0.5)\n\nplt.subplot(2, 2 ,1)\ndf.groupby('FL_DATE_month').ARR_DELAY.sum().plot.bar().set_title('ARRIVAL delays by month')\nplt.title('ARRIVAL delays by month', fontsize=16)\nplt.ylabel('Hours', fontsize=14)\nplt.xlabel('Month of the year', fontsize=14)\n\nplt.subplot(2, 2 ,2)\ndf.groupby('FL_DATE_month').DEP_DELAY.sum().plot.bar()\nplt.title('DEPARTURE delays by month', fontsize=16)\nplt.ylabel('Hours', fontsize=14)\nplt.xlabel('Month of the year', fontsize=14)\n\nplt.show()","99bb4ead":"# Delays by airlines\nplt.figure(figsize=(20, 6))\ndf.groupby('OP_CARRIER').ARR_DELAY.sum().sort_values(ascending=False).plot.bar()\nplt.title('Delays by AIRLINES', fontsize=16)\nplt.xlabel('Airline', fontsize=14)\nplt.ylabel('Hours', fontsize=14)\nplt.show()","8b50c422":"# Delays by City\ncity_by_delay = df.groupby('ORIGIN').ARR_DELAY.sum().sort_values(ascending=False)\nplt.figure(figsize=(20, 6))\ncity_by_delay[:15].plot.bar()\nplt.title('Delays by City', fontsize=16)\nplt.xlabel('City', fontsize=14)\nplt.ylabel('Hours', fontsize=14)\nplt.show()","36ce3987":"# Arrival and departure delays by month of the year","8f923ef4":"# Departure delay and Arrival delay exploration","c2fa0f94":"# Canceled flights exploration","23f19bef":"# Conclusion\n- Canceled flights are not delayed flights\n- If canceled, the flight didn't happen, and values are NaN\n- We can filter out Canceled Flights for out analysis\n- DEP_DELAY Actual Departure Time\n- ARR_DELAY Total Delay on Arrival in minutes\n- If both of these numbers are negative =>> there was no delay","5feb7cf1":"- If a number is positive = flight delayed\n- Since that we're exploring only delayed flights, non-delayed should be disregarded\n- The danger of keeping those is if we summarise for plotting for example, we'll get false data\n- Sum of Delayed minutes will be less because of the negative numbers that will subtract the real delays\n- BUT\n- Let's first define what a delayed flight is:\n- A Delayed flight is a flight that arrives late at its destination\n- Flight can be delayed on departure but still, arrive on time = not a delayed flight","1ede4422":"# Analysis: Airline delays in the U.S.","4f8d4a79":"# Data Visualisation","a1cef33f":"# Delays by airlines","e7535750":"# DateTime data manipulation","b31cac32":"# Delays by City"}}