{"cell_type":{"ed87a61f":"code","1bfe3a9a":"code","9009a862":"code","4683393f":"code","33f70047":"code","68e097a8":"code","5539d063":"code","4e96f9c9":"code","72f71d59":"code","9e9b8f87":"code","eefa1afa":"code","ee20c59e":"code","9315b41e":"code","044c8ed4":"code","d5ad6d7e":"code","3787135d":"code","31fa6656":"code","d3214272":"code","b3cd5fbd":"code","b36f61c6":"code","97054717":"code","a29aacfd":"code","4c350d3d":"code","75f108f5":"code","58bc5192":"code","cb2e9d9f":"code","372153d1":"code","e3aa39e9":"code","f53f063e":"code","30187a3b":"code","baca7b80":"code","793a1dec":"code","3dc9f1dc":"code","0fc04a1f":"code","9f0e1643":"code","ed8c04f4":"markdown","6c3ebb41":"markdown","4181ed26":"markdown","99043e8a":"markdown","dd18ae23":"markdown"},"source":{"ed87a61f":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","1bfe3a9a":"df = pd.read_csv('..\/input\/google-play-store-apps\/googleplaystore.csv')\ndf.tail()","9009a862":"type(df)","4683393f":"df.shape","33f70047":"df.describe().T","68e097a8":"df.boxplot()","5539d063":"df.hist()","4e96f9c9":"df.info()","72f71d59":"df.isnull()","9e9b8f87":"df.isnull().sum()","eefa1afa":"df[df.Rating>5]","ee20c59e":"df.drop([10472], inplace=True)","9315b41e":"df[10470:10475]","044c8ed4":"df.boxplot()","d5ad6d7e":"df.hist()","3787135d":"threshold = len(df)*0.1\nthreshold","31fa6656":"df.dropna(thresh=threshold, axis=1, inplace=True)","d3214272":"df.isnull().sum()","b3cd5fbd":"def input_median(series):\n    return series.fillna(series.median())","b36f61c6":"df.Rating = df['Rating'].transform(input_median)","97054717":"df.isnull().sum()","a29aacfd":"df['Type'].mode()","4c350d3d":"df['Current Ver'].mode()","75f108f5":"df['Android Ver'].mode()","58bc5192":"df['Type'].fillna(str(df['Type'].mode().values[0]), inplace=True)\ndf['Current Ver'].fillna(str(df['Current Ver'].mode().values[0]), inplace=True)\ndf['Android Ver'].fillna(str(df['Android Ver'].mode().values[0]), inplace=True)","cb2e9d9f":"df.isnull().sum()","372153d1":"# convert Price, Reviews and Ratings into Numerical Values\ndf['Price'] = df['Price'].apply(lambda x: str(x).replace('$', '') if '$' in str(x) else str(x))\ndf['Price'] = df['Price'].apply(lambda x: float(x))\ndf['Reviews'] = pd.to_numeric(df['Reviews'], errors='coerce')","e3aa39e9":"df['Installs'] = df['Installs'].apply(lambda x: str(x).replace('+', '') if '+' in str(x) else str(x))\ndf['Installs'] = df['Installs'].apply(lambda x: str(x).replace(',', '') if ',' in str(x) else str(x))\ndf['Installs'] = df['Installs'].apply(lambda x: float(x))","f53f063e":"df.head()","30187a3b":"df.describe()","baca7b80":"df.info()","793a1dec":"grp = df.groupby('Category')\nx = grp['Rating'].agg(np.mean)\ny = grp['Price'].agg(np.sum)\nz = grp['Reviews'].agg(np.mean)\nprint(x)\nprint(y)\nprint(z)","3dc9f1dc":"plt.figure(figsize=(16,5))\nplt.plot(x,'ro', color='r')\nplt.xticks(rotation=90)\nplt.title('Category wise Rating')\nplt.xlabel('Categories-->')\nplt.ylabel('Rating-->')\nplt.show()","0fc04a1f":"plt.figure(figsize=(16,5))\nplt.plot(y,'r--', color='b')\nplt.xticks(rotation=90)\nplt.title('Category wise Pricing')\nplt.xlabel('Categories-->')\nplt.ylabel('Prices-->')\nplt.show()","9f0e1643":"plt.figure(figsize=(16,5))\nplt.plot(z,'g^', color='g')\nplt.xticks(rotation=90)\nplt.title('Category wise Reviews')\nplt.xlabel('Categories-->')\nplt.ylabel('Reviews-->')\nplt.show()","ed8c04f4":"# Data Cleaning","6c3ebb41":"# Data Analysis of Google App's Ratings\n\n### Imports","4181ed26":"# Data Visualization","99043e8a":"# More To come....\ud83d\udda5\ufe0f","dd18ae23":"## Data Imputation and Manipulation"}}