{"cell_type":{"9ddd61cc":"code","c7e23479":"code","3fc9a957":"code","8ec9b008":"code","d4b278f9":"code","bd886e1d":"code","5c1347a9":"code","d463e9d5":"code","2eed7151":"code","f0f9a72f":"code","8383e6ae":"code","ae91861c":"markdown"},"source":{"9ddd61cc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c7e23479":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntrain_data.head()","3fc9a957":"test_data= pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head()","8ec9b008":"train_data.info()","d4b278f9":"test_data.info()","bd886e1d":"418+891","5c1347a9":"women = train_data.loc[train_data.Sex == 'female']['Survived']\nwomen","d463e9d5":"rate_women = sum(women)\/len(women)\nprint(\"% of women who survied:\", rate_women)","2eed7151":"men= train_data.loc[train_data.Sex=='male'][\"Survived\"]\nmen","f0f9a72f":"rate_men= sum(men)\/len(men)\nprint(\"% of men who survived \",rate_men)","8383e6ae":"from sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","ae91861c":"Using maxhine learning Algorithm RandomForetClassifier"}}