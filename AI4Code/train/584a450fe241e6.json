{"cell_type":{"d058cbc8":"code","505e791b":"code","a97ba949":"code","3d626bbd":"code","1f29b466":"code","e5e6a97d":"code","7ef12d82":"code","2525c283":"code","02ac3816":"code","bf04a6da":"code","319ad82f":"code","0cf5a194":"code","48a4782c":"code","cb225267":"code","b4154971":"code","bf3d2962":"code","76a9218d":"code","31a6d0b3":"code","c7fd46f6":"code","6f0f53b3":"code","eb2de842":"code","efe3a93a":"code","562f9649":"code","89eafae1":"markdown","7500b777":"markdown","ef77e13f":"markdown","d2a29ce9":"markdown","8a896c81":"markdown","f723be70":"markdown","5493f93c":"markdown","fd61bf74":"markdown","15930d25":"markdown","df1d142a":"markdown","fa0fbb47":"markdown","91e0e72d":"markdown","a918ad6d":"markdown","3dc33f54":"markdown","d17cfebc":"markdown","385b15bb":"markdown","189d69e4":"markdown"},"source":{"d058cbc8":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","505e791b":"df=pd.read_csv('\/kaggle\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\ndf.head(10)","a97ba949":"df.describe()","3d626bbd":"dup = pd.concat(g for _, g in df.groupby(\"Name\") if len(g) > 1)\nprint(dup.head(5))\nprint(dup.shape)","1f29b466":"df_filtered=df.drop_duplicates(subset='Name',keep = 'last',inplace = False)\ndf_filtered.shape","e5e6a97d":"df_filtered.duplicated('Name').sum()","7ef12d82":"df_filtered.loc[df_filtered['Price'] == 0]","2525c283":"df_filtered.nunique() #Count unique values of each column from the dataframe","02ac3816":"top10 = df_filtered.value_counts('Author')\ntop10 = top10[:10,]\nplt.figure(figsize=(15,5))\nsns.barplot(top10.index, top10.values, alpha=0.8)\nplt.xticks(rotation=45)\nplt.title('Top 10 Authors w. Most Books In Amazon Best Seller 2009-2019')\nplt.ylabel('# Of Books')\nplt.show()","bf04a6da":"b = df_filtered['Reviews'].min()\nC = df_filtered['User Rating'].mean()","319ad82f":"all_author=df_filtered.value_counts('Author')\nauthor_index=all_author.index\nall_qty=all_author.values","0cf5a194":"sum_rating=np.zeros(len(all_author))\na=np.zeros(len(all_author))\nS=np.zeros(len(all_author))\nw_rating=np.zeros(len(all_author))\n\nfor i in range(0,len(all_author)):\n    sum_rating[i]=df_filtered.loc[df_filtered['Author'] == author_index[i], 'User Rating'].sum()\n    S[i]=sum_rating[i]\/all_qty[i]\n    a[i]=df_filtered.loc[df_filtered['Author'] == author_index[i], 'Reviews'].sum()\n    \n    w_rating[i]=(S[i] * a[i]\/(a[i]+b))+(C * b\/(a[i]+b))","48a4782c":"author_rating=pd.DataFrame({'Author': author_index[:,],'Books Written': all_qty[:,],'Reviews': a[:,],'Average Rating': S[:,], 'Weighted Rating': w_rating[:,]})\nauthor_rating['Average Rating']=author_rating['Average Rating'].round(decimals=2)\nauthor_rating","cb225267":"top10_rating=author_rating.nlargest(10,['Weighted Rating'])\nplt.figure(figsize=(15,5))\nsns.barplot(top10_rating['Author'], top10_rating['Weighted Rating'], alpha=0.8)\nplt.title('Top 10 Authors w. Best Ratings In Amazon Best Seller 2009-2019')\nplt.xticks(rotation=45)\nplt.ylim(top10_rating['Weighted Rating'].min()-0.001,top10_rating['Weighted Rating'].max()+0.001)\nplt.ylabel('Weighted Ratings')\nplt.show()","b4154971":"top=author_rating.loc[(author_rating['Books Written'] >= 6) & (author_rating['Weighted Rating'] >= 4.4), 'Author']\n\nfig=plt.figure(figsize=(20,10))\nax=fig.add_subplot(1,1,1)\nplt.scatter(author_rating['Weighted Rating'],author_rating['Books Written'])\nplt.plot([4.4,4.4],[0,12], linewidth=0.2, color='red')\nplt.plot([3.8,5.0],[6,6], linewidth=0.2, color='red')\nplt.xlim(3.8,5.0)\nplt.ylim(0,12)\n\nfor i in range(0,len(top)):\n    getx=author_rating.loc[author_rating['Author'] == top[i], 'Weighted Rating']\n    gety=author_rating.loc[author_rating['Author'] == top[i], 'Books Written']\n    plt.text(getx, gety-0.3,top[i],fontsize=8,ha='center')\n\nplt.text(3.9, 3,'Regular Best Sellers',fontsize=12,ha='left')\nplt.text(3.9, 9,'The Gamblers',fontsize=12,ha='left')\nplt.text(4.9, 3,'The Planners',fontsize=12,ha='right')\nplt.text(4.9, 9,'The Special Ones',fontsize=12,ha='right')\n\nax.set(title='Amazon Best Selling Author Distribution',xlabel='Weighted Ratings',ylabel='Books Written')\nplt.show()","bf3d2962":"genre_reviews = df_filtered.groupby(\"Genre\")[\"Reviews\"].sum()\ngenre_ratings = df_filtered.groupby(\"Genre\")[\"User Rating\"].sum()\ngenre_reviews_avg = df_filtered.groupby(\"Genre\")[\"Reviews\"].mean()\ngenre_ratings_avg = df_filtered.groupby(\"Genre\")[\"User Rating\"].mean()","76a9218d":"genre_table=pd.DataFrame({'Genre': ['Fiction', 'Non Fiction'],\n                          'Total Reviews': genre_reviews.values[:,],\n                          'Total Ratings': genre_ratings.values[:,],\n                          'Average Reviews': genre_reviews_avg.values[:,],\n                          'Average Ratings': genre_ratings_avg.values[:,]})\ngenre_table","31a6d0b3":"a = genre_reviews\nb = df_filtered['Reviews'].min()\nC = df_filtered['User Rating'].mean()\nS = genre_ratings_avg\nw_rating=np.zeros(2)\n\nfor i in range(0,len(genre_reviews.index)):\n    w_rating[i]=(S[i] * a[i]\/(a[i]+b))+(C * b\/(a[i]+b))","c7fd46f6":"fig=plt.figure(figsize=(20,5))\nfig.add_subplot(1,2,1)\nplt.pie(genre_reviews,labels=genre_reviews.index, autopct='%1.2f%%')\nplt.title('Amazon Best Selling Books 2009-2019 Genre Distribution')\nfig.add_subplot(1,2,2)\nsns.barplot(genre_reviews.index,w_rating,alpha=0.8)\nplt.ylim(w_rating.min()-0.01,w_rating.max()+0.01)\nplt.title('Amazon Best Selling Books 2009-2019 Genre Weighted Rating Comparison')\nplt.show()","6f0f53b3":"df_filtered2=df_filtered\nprint('Before: ',df_filtered.shape)\ndf_filtered2.drop(df_filtered2.loc[df_filtered2['Price'] == 0].index, inplace = True) \ndf_filtered2.reset_index(drop=True, inplace=True)\nprint('After: ',df_filtered2.shape)","eb2de842":"book_reviews = df_filtered2[\"Reviews\"]\nbook_ratings = df_filtered2[\"User Rating\"]\nbook_reviews_avg = df_filtered2[\"Reviews\"].mean()\n\nb = df_filtered2['Reviews'].min()\nC = df_filtered2['User Rating'].mean()\na = book_reviews\nS = book_ratings\n\nw_rating=np.zeros(len(df_filtered2['Name']))\n\nfor i in range(0,len(df_filtered2['Name'])):\n    w_rating[i]=(S[i] * a[i]\/(a[i]+b))+(C * b\/(a[i]+b))\n\ndf_filtered2['Weighted Rating']=w_rating\ndf_filtered2","efe3a93a":"fig=plt.figure(figsize=(20,10))\nax=fig.add_subplot(1,1,1)\nplt.scatter(df_filtered2['Weighted Rating'],df_filtered2['Price'])\nplt.plot([4.1,4.1],[0,110], linewidth=0.2, color='red')\nplt.plot([3.2,5.0],[55,55], linewidth=0.2, color='red')\nplt.xlim(3.2,5.0)\nplt.ylim(0,110)\n\n\nplt.text(3.6, 30,'The Lucky Ones That Made It',fontsize=12,ha='center')\nplt.text(3.6, 80,'Not Worth It',fontsize=12,ha='center')\nplt.text(4.6, 30,'Worth It',fontsize=12,ha='center')\nplt.text(4.6, 80,'Deservedly Expensive',fontsize=12,ha='center')\n\nax.set(title='Amazon Best Selling Book Price - Value Distribution',xlabel='Weighted Ratings',ylabel='Price')\nplt.show()","562f9649":"topbooks=df_filtered2.loc[(df_filtered2['Price'] <= 30) & (author_rating['Weighted Rating'] > 4.85), :]\ntopbooks.sort_values(['Weighted Rating','Price'],ascending=False)","89eafae1":"### Freebies\n\nWe can see in the dataframe description that some items are priced at 0. These can pose a misrepresentation later when we analyze the price and value performance.","7500b777":"We see above that there are 295 rows containing books with same names and different publishing year. The rating and reviews are identical so we can simply pick the newest version\/latest year. The years are already sorted, so we can just pick the **last entry** of each duplicate.\n\nRef: https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.duplicated.html\n\n","ef77e13f":"## Exploratory Data Analysis\n\n### The Authors\n\nLet's explore the data by examining the authors. How many authors got into the list? How many books did they write? How many reviews did they get? ","d2a29ce9":"We can see in the figures above that Fiction genre trumps Non Fiction both in popularity and ratings. Although the difference in reviews received are large, the gap between the weighted ratings are very close (below 0.1).","8a896c81":"### The Genre\n\nSince we have only two genres: Fiction and Non-fiction, let's try to compare this two.","f723be70":"Now we confirm that no more duplicates are found.","5493f93c":"### Cream of The Crop\n\nLooking at the figure above, the majority of best sellers are priced well. Now we'll dive deeper and find the cream of the crop: books under 30 USD with ratings above 4.85","fd61bf74":"We can now rank the authors based on the weighted ratings.","15930d25":"## Importing Resources\nWe will start by importing relevant libraries and the dataset.","df1d142a":"As seen above, the ranking based on rating looks nothing like the one based on the amount of books published. Dav Pilkey tops the chart with a score of 4.899757.\n\nNow let's look at the distribution of the authors by scattering them in quadrants.","fa0fbb47":"We see the top 10 authors with the most books published within the timespan, with Jeff Kinney leading the ranks, followed by Rick Riordan. We'll see if quantity does matter. For this step, we will consider 4 variables as threshold:\n\n1. a = # reviews received by the author\n2. b = # least number of reviews received\n3. S = mean rating received by the author\n4. C = mean rating of the dataset\n\nThen we calculate the weighted rating using Bayesian Average:\n\nW_Rating = (S * a \/ a + b ) + ( C * b \/ a + b)","91e0e72d":"### The Price and Value of Books\n\nNow let's analyze the books themselves. Using the same approach, we measure their weighted ratings, and we consider the price also. However, we will consider books priced in 0 USD in the dataset as abnormal data points.","a918ad6d":"So, there are 248 authors in this list, and they dished out 351 best selling books between 2009 and 2019. *Not bad at all!*","3dc33f54":"## Visible Issues\n\n### Duplicates\nIt's very common for bestselling books to get reissued\/republished. It is necessary to filter out this kind of noise by either eliminating or merging.","d17cfebc":"# Amazon 2009-2019 Best Selling Book EDA\n\n## Introduction\nAs a gargantuan company, Amazon provides a wide selection of books for its customers. Books are never judged by its cover, but everyone should also be able to rate books (not just journalists or editors). Amazon enables customers to rate books by giving them scores between 1-5 and a detailed review text to help others decide whether to purchase a particular book or not.\n\nIn this notebook, we will attempt to explore the dataset consisting of books that are on the list of Amazon's best selling book between 2009 and 2019. We will analyze the authors, the genres and lastly, the most worthy book for purchase.","385b15bb":"We see that the majority of authors are placed in the bottom right quadrant. These group represents authors that take their time to perfect their books, which got them high ratings with lower amount books published.\n\nOn the other hand, we see also some special ones, who dished out plenty of books and consistently getting top ratings.","189d69e4":"As seen above, we have successfully found the best books in terms of price-value performance."}}