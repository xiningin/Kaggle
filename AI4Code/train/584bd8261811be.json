{"cell_type":{"57b03dd0":"code","baa24897":"code","113b8979":"code","b809253a":"code","6fc0547f":"code","d8672731":"code","37bea085":"code","4e02fbe9":"code","ae98ac5e":"code","87d53269":"code","59b2a7a7":"code","494fa3dd":"code","3e3795c7":"markdown","b1b413cf":"markdown","0195a83e":"markdown","d1a9e5f5":"markdown","ed382bb6":"markdown"},"source":{"57b03dd0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","baa24897":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split","113b8979":"salary = pd.read_csv(\"..\/input\/salary\/Salary.csv\")","b809253a":"salary.shape","6fc0547f":"salary.head()","d8672731":"#Selecting Corresponding Features\nX = salary['YearsExperience'].values\ny = salary['Salary'].values\n\nX = X.reshape(-1,1)\ny = y.reshape(-1,1)","37bea085":"# X_feature - Years of Experience\n# y_output - Salary in $\nx_train, x_test, y_train, y_test = train_test_split(X,y,train_size=0.8,test_size=0.2,random_state=100)","4e02fbe9":"print(f\"X_train shape {x_train.shape}\")\nprint(f\"y_train shape {y_train.shape}\")\nprint(f\"X_test shap {x_test.shape}\")\nprint(f\"y_test shape {y_test.shape}\")","ae98ac5e":"%matplotlib inline\nplt.scatter(x_train,y_train,color='blue')\nplt.xlabel('Years of experience')\nplt.ylabel('Salary in $')\nplt.title('Training data')\nplt.show()","87d53269":"lm = LinearRegression()\nlm.fit(x_train,y_train)\ny_predict = lm.predict(x_test)\nprint(f\"Train accuracy {round(lm.score(x_train,y_train)*100,2)} %\")\nprint(f\"Test accuracy {round(lm.score(x_test,y_test)*100,2)} %\")","59b2a7a7":"plt.scatter(x_train,y_train,color='blue')\nplt.plot(x_test,y_predict)\nplt.xlabel(\"Years of Experience\")\nplt.ylabel(\"Salary in $\")\nplt.title(\"Trained model plot\")\nplt.plot","494fa3dd":"sample = np.array([15,1.5,7.3,9.65])\nsample = sample.reshape(-1,1)\nsample_salary = lm.predict(sample)\nfor salary in sample_salary:\n    print(f\"$ {salary}\")","3e3795c7":"Building Linear Regression Model using Sklearn","b1b413cf":"Plotting the Linear Model","0195a83e":"Exploring data by ploting","d1a9e5f5":"Predicting with custom data","ed382bb6":"Divide data into train and test test\n\n\nThe most common train and test split size is 80% data for train set and 20 % data for test set"}}