{"cell_type":{"f0ae25e8":"code","b2950f5e":"code","47f74979":"code","dce48cf8":"code","a2e3adad":"code","15422f52":"code","6f9d7f22":"code","8f28356c":"code","cb1af807":"code","e748387d":"code","500243f3":"code","b9b05dd3":"code","c89403da":"code","5ca23e60":"code","b8e29327":"code","06850e80":"code","cc630d3f":"code","afd2c8be":"code","bd3482f3":"code","6d8757c0":"code","6cf7c9a3":"code","99ec311a":"code","db3c1878":"code","91db5639":"code","c5788c52":"code","a1666c48":"code","a1276e8c":"code","890f8911":"code","efca1be8":"code","80d4af23":"code","eea3078d":"code","f1ab69e2":"code","34209e90":"code","598170db":"code","78cab738":"code","113aa1b5":"code","1ddc5c09":"code","504cef50":"code","2801de6a":"code","27fd9251":"code","9f6cb09c":"code","80d48134":"code","5d5aa7af":"code","6d59ee78":"code","d1a6bfc3":"code","9628796c":"code","87cb7d27":"code","c552aa6f":"code","79d64fd1":"code","33f95528":"code","ea7b9bd5":"code","e6f72efe":"code","d6e027ca":"code","0f833bd4":"code","136433ca":"code","698745ef":"code","5d2cbe23":"code","90c7817c":"code","d362caf4":"code","1a6e3762":"code","504bbe8b":"code","af59e4d9":"code","ccf8e933":"code","7314d19c":"code","dcb89344":"code","b0eb4a83":"code","66c198f3":"code","05487759":"code","d2ef7e28":"code","76ea94c3":"code","e1e329d1":"code","c289346f":"code","f37eb51e":"code","2b0947ab":"code","57554085":"code","75e55f5a":"code","d3480ad8":"code","2f23b5e4":"code","4f3f1bc3":"code","ce64c9f3":"code","e772f23e":"code","c2853fe5":"code","0b58e5c6":"code","87f411a0":"code","868d8fed":"code","432a5826":"code","c1e4a19b":"code","c5f1643b":"code","f3501809":"code","fffe42c5":"code","b3611780":"code","36eeb959":"code","6a52b883":"code","52d3797e":"markdown","f34687ce":"markdown","a70ef777":"markdown","00789f28":"markdown","aefdc0d3":"markdown","0e7557ae":"markdown","75b23666":"markdown","fdc38a7b":"markdown","ba186bfa":"markdown","e71e4856":"markdown","56d893cc":"markdown","5764177c":"markdown","d9e65be0":"markdown","7ba7c7cb":"markdown","e27c46ae":"markdown","28469ec6":"markdown","3f9ee368":"markdown","517eb612":"markdown","a6290fc9":"markdown","b4e86716":"markdown","c8cd9e1c":"markdown","173d0878":"markdown","ef05f7e1":"markdown","50442f27":"markdown","3bcc2c3b":"markdown","1021af7e":"markdown","d4d62285":"markdown","3ec7641e":"markdown","1cafafc4":"markdown","c83ee139":"markdown","877db82e":"markdown","f6afc8dc":"markdown","688eef8f":"markdown","feb54ed9":"markdown","c133b06f":"markdown","460e4387":"markdown"},"source":{"f0ae25e8":"import pandas as pd\npd.set_option('display.max_rows', 130, 'display.max_columns', 130)\npd.options.display.float_format = '{:,.2f}'.format\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport numpy as np\nimport plotly           #(version 4.5.4) #pip install plotly==4.5.4\nimport plotly.express as px\nimport plotly.io as pio","b2950f5e":"loan_df = pd.read_csv('..\/input\/loancsv\/loan.csv',low_memory=False)","47f74979":"loan_df.head()","dce48cf8":"loan_df.shape","a2e3adad":"round(100*(loan_df.isnull().sum()\/len(loan_df.index)), 2).sort_values(ascending=False).head(56)","15422f52":"loan_df = loan_df.dropna(axis=1,how='all') #axis 1 for column\nloan_df = loan_df.drop(['mths_since_last_record','mths_since_last_delinq','next_pymnt_d'], axis=1)\nloan_df.shape","6f9d7f22":"## Deleting column having all values as same. So not adding any importance in analysis\n#loan_df = loan_df.drop(['delinq_amnt', 'acc_now_delinq', 'application_type',\n#                                                           'policy_code', 'pymnt_plan', 'initial_list_status', 'chargeoff_within_12_mths',\n #                                                          'tax_liens', 'collections_12_mths_ex_med','url'], axis=1)\n#loan_df.shape","8f28356c":"# Removing customer behavior column\n\nloan_df = loan_df.drop(['last_pymnt_amnt','last_pymnt_d','acc_now_delinq','delinq_2yrs','delinq_amnt'\n                        ,'policy_code','revol_bal','revol_util',\n                        'url','last_pymnt_d','last_pymnt_d','last_pymnt_d','last_pymnt_d','last_pymnt_d','tax_liens',\n                       'emp_title','initial_list_status','pymnt_plan','id','member_id','collections_12_mths_ex_med',\n                       'chargeoff_within_12_mths','pub_rec_bankruptcies','pub_rec','out_prncp_inv','desc','application_type','out_prncp'],\n                       axis=1)\nloan_df.shape","cb1af807":"#loan_df = loan_df.drop(['out_prncp_inv'],axis=1)\n#loan_df = loan_df.drop(['desc'], axis=1)\n#loan_df['application_type'].unique()\n#loan_df['application_type'].value_counts()","e748387d":"loan_df.head()","500243f3":"loan_df.shape","b9b05dd3":"loan_df = loan_df.dropna(axis=0,how='all')\nloan_df.shape","c89403da":"loan_df = loan_df[loan_df.isnull().sum(axis=1)<5]\nloan_df.shape","5ca23e60":"loan_df = loan_df[~(loan_df.loan_status=='Current')]","b8e29327":"loan_df.shape","06850e80":"loan_df.loan_status.value_counts()","cc630d3f":"paid_vs_chargedOff = loan_df.loan_status.value_counts()\npx.bar(paid_vs_chargedOff)\nbarchart = px.bar(\n    data_frame=paid_vs_chargedOff,\n    x=paid_vs_chargedOff.index,\n    y=paid_vs_chargedOff.values,\n    color = paid_vs_chargedOff.index,\n    color_discrete_map={\n                \"Fully Paid\": \"skyblue\",\n                \"Charged Off\": \"orange\"}, # differentiate color of marks\n    #opacity=0.9,                  # set opacity of markers (from 0 to 1)\n    orientation=\"v\",              # 'v','h': orientation of the marks\n    labels={\"index\":\"Loan Distribution By Status\",\n    \"y\":\"Count\"}, \n    title='Loan Status',\n    text=paid_vs_chargedOff.values,\n    template='presentation',\n)\nbarchart.update_layout(uniformtext_minsize=5, uniformtext_mode='show'),\nbarchart.update_traces(textposition='auto'),\npio.show(barchart)","afd2c8be":"# default_loan_by_year = pd.pivot_table(data=loan_df,index='issue_d_year',values='loan_status_binary',aggfunc=[sum,'count',func])\n# default_loan_by_year.plot.line()\n# plt.title('No of Loan Granted vs No of Defaulter over the years ')\n# plt.xlabel('Loan Issue Year')\n# plt.ylabel('Count')\n# plt.legend(['No of Defaulters','No of Loan Granted','Default Rate by Year'])\n# plt.show()","bd3482f3":"#default_loan_by_year","6d8757c0":"loan_df.info()","6cf7c9a3":"loan_df['int_rate'] = loan_df.int_rate.str.rstrip('%').astype('float64')\nloan_df['term'] = loan_df['term'].str.rstrip(' months').astype('int32')","99ec311a":"#loan_df.info()","db3c1878":"import re\n\nphone_number = ' < .5 + :years'\nphone_number = re.sub(r\"\\D\", \"\", phone_number)\nprint(phone_number)","91db5639":"# you can see there are 1033 records empty where we can not convert dtype to int. \n#we have to get the emp length based on Age \n#loan_df.emp_length = loan_df.emp_length.apply(lambda x : re.sub(r\"\\D\",\"\",str(x))) #.astype('int32')","c5788c52":"loan_df.emp_length.value_counts()","a1666c48":"loan_df['emp_length_years'] = loan_df['emp_length'].str.rstrip('years ') #.str.replace('10+','10')\nloan_df['emp_length_years'].str.replace('10+','10')\nloan_df['emp_length_years'][loan_df['emp_length_years'] == '< 1'] = '0.5'\ndel loan_df['emp_length']\n#loan_df.emp_length_years.value_counts()\n#loan_df['emp_length_years'] = loan_df['emp_length_years'].str.replace('+','')\nloan_df['emp_length_years'] = loan_df['emp_length_years'].str.rstrip('+')\nloan_df['emp_length_years'] = loan_df.emp_length_years.astype('float32')","a1276e8c":"#loan_df['emp_length_years'] = loan_df.emp_length_years.astype('float32')","890f8911":"loan_df['issue_d_month'], loan_df['issue_d_year'] = loan_df['issue_d'].str.split('-').str\n#loan_df.issue_d_year = loan_df.issue_d_year.apply(lambda x : '20' + str(x))\nloan_df['issue_d_year'] = '20' + loan_df['issue_d_year']","efca1be8":"loan_df['loan_status_binary'] = loan_df.loan_status.apply(lambda x: 0 if x =='Fully Paid' else 1)\nloan_df['loan_status_binary'].count()\nloan_df['loan_status_binary'].value_counts()","80d4af23":"# Creating Interest Rate Bins \nloan_df['Int_Rate_Bucket'] = pd.cut(loan_df.int_rate, bins=3,  \n       labels=['<10', '<20', '>20'])\nloan_df['Int_Rate_Bucket'].value_counts()","eea3078d":"# Creating Loan_Amount_Bucket Bins \nloan_df['Loan_Amount_Bucket'] = pd.cut(loan_df.loan_amnt, bins=3,  \n       labels=['Less', 'Medium', 'Big'])\nloan_df['loan_amnt'].value_counts()","f1ab69e2":"# Creating DTI  Bins \nloan_df['dti_bucket'] = pd.cut(loan_df.dti, bins=6,  \n       labels=['VL','L','M', 'H','VH','VVH'])\nloan_df['dti_bucket'].value_counts()","34209e90":"plt.boxplot(loan_df.annual_inc)\nplt.show()\nloan_df.shape","598170db":"# Creating annual_inc  Bins \nloan_df['annual_inc_bucket'] = pd.qcut(loan_df.annual_inc, [0,0.2,0.4,0.6,0.8,1],['VL','L','M','H','VH'])\nloan_df.head(10)","78cab738":"#loan_term_by_status = loan_df.groupby(['term','loan_status'])['loan_status'].count()\n#loan_term_by_status\n#loan_term_by_status.unstack().plot(kind='bar', stacked=True, figsize=(10, 5))\n#loan_term_by_status_info = loan_df.groupby(['term'])['loan_status_binary'].sum()\n#loan_term_by_status_info\n#func = lambda x: int(sum(x) \/ len(x) * 100)\n#lambda x: int(sum(x) \/ len(x) * 100)\n#d1_pivot = pd.pivot_table(data=loan_df,values=\"loan_status_binary\",index=\"term\", aggfunc=[func])\n#print(d1_pivot)\n#diff = d1_pivot.values.max() - d1_pivot.values.min()\n#d1_pivot.plot(kind='bar', stacked=False, figsize=(10, 5))\n#loan_term_by_status.unstack().plot(kind='bar', stacked=False, figsize=(10, 5))\n#plt.show()\n# plt.figure(figsize=(15,5))\n# splot = sns.barplot(x='term', y='loan_status_binary',estimator=lambda x: int(sum(x) \/ len(x) * 100),data=loan_df,palette=\"RdYlBu\")\n# #plt.show()\n# for p in splot.patches:\n#     splot.annotate(format(p.get_height(), '.1f'), \n#                    (p.get_x() + p.get_width() \/ 2., p.get_height()), \n#                    ha = 'center', va = 'center', \n#                    xytext = (0, 9), \n#                    textcoords = 'offset points')\n# plt.xlabel(\"Term in Months\", size=14)\n# plt.ylabel(\"Default Rate in %\", size=14)\n# d1_pivot = pd.pivot_table(data=loan_df,index=\"term\",columns='loan_status', aggfunc=['count'])\n# d1_pivot\n# sns.countplot(x= loan_df[\"loan_status\"])\n# plt.show()","113aa1b5":"def graph_bar(x_val):\n    result = loan_df.groupby([x_val])['loan_status_binary'].aggregate(sum).reset_index().sort_values('loan_status_binary')\n    splot = sns.barplot(x=x_val, y='loan_status_binary',estimator=lambda x: sum(x) \/ len(x) * 100,\n                        data=loan_df,order=result[x_val],palette=\"RdYlBu\")\n    for p in splot.patches:\n        splot.annotate(format(p.get_height(), '.1f'),\n                       (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                       ha = 'center', va = 'center',\n                       xytext = (0, 10),\n                       textcoords = 'offset points')\n    plt.ylabel(\"Default Rate in %\", size=14)\n    #print(result)","1ddc5c09":"def graph_bar_without_perc(x_val):\n    result_1 = loan_df.groupby([x_val])['loan_status_binary'].aggregate(sum).reset_index().sort_values('loan_status_binary')\n    splot_1 = sns.barplot(x=x_val, y='loan_status_binary',\n                        data=loan_df,order=result_1[x_val],estimator=sum,palette=\"RdYlBu\")\n    for p in splot_1.patches:\n        splot_1.annotate(format(p.get_height(), '.1f'),\n                       (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                       ha = 'center', va = 'center',\n                       xytext = (0, 10),\n                       textcoords = 'offset points')\n    plt.ylabel(\"Default Rate in %\", size=14)\n    #print(result_1)","504cef50":"graph_bar('term')\nplt.xlabel(\"Term in Months\", size=14)","2801de6a":"plt.figure(figsize=(10,5))\ngraph_bar('grade')\nplt.xlabel(\" Interest Rate Grade\", size=14)\n","27fd9251":"graph_bar_without_perc('grade')","9f6cb09c":"loan_interest_grade_by_status = loan_df.groupby(['grade','loan_status'])['loan_status'].count()\nloan_interest_grade_by_status","80d48134":"plt.figure(figsize=(14,8))\nplt.xticks(rotation=90)\ngraph_bar('purpose')\nplt.xlabel(\"Purpose of Loan\", size=14)\n","5d5aa7af":"plt.figure(figsize=(14,8))\ndefault_loan_by_purpose = pd.pivot_table(data=loan_df,index='purpose',values='loan_status_binary',aggfunc=[sum,'count'])\ndefault_loan_by_purpose.plot.bar(figsize=(14, 8))\nplt.title('No of Loan Granted vs No of Defaulter over the Purpose ')\nplt.xlabel('Purpose')\nplt.ylabel('Count')\nplt.legend(['No of Defaulters','No of Loan Granted'])\nplt.show()","6d59ee78":"plt.figure(figsize=(10,5))\ngraph_bar('issue_d_year')\nplt.xlabel(\" Loan Year\", size=14)","d1a6bfc3":"plt.figure(figsize=(15,8))\ngraph_bar('issue_d_month')\nplt.xlabel(\" Loan Month\", size=14)","9628796c":"plt.figure(figsize=(15,5))\ngraph_bar('emp_length_years')\nplt.xlabel(\" Employeement in Years\", size=14)","87cb7d27":"loan_emp_length_years_by_status = loan_df.groupby(['emp_length_years','loan_status'])['loan_status'].count()\nloan_emp_length_years_by_status","c552aa6f":"plt.figure(figsize=(20,10))\ngraph_bar('sub_grade')\nplt.xlabel(\" Interest Rate Sub Grade\", size=14)","79d64fd1":"plt.figure(figsize=(20,10))\ngraph_bar_without_perc('sub_grade')\nplt.xlabel(\" Interest Rate Sub Grade\", size=14)\nplt.ylabel(\"Number of Defaulters\", size=14)","33f95528":"loan_sub_grade_by_status = loan_df.groupby(['sub_grade','loan_status'])['loan_status'].count()\n#loan_sub_grade_by_status","ea7b9bd5":"graph_bar('home_ownership')\nplt.xlabel(\" Home Owernership\", size=14)","e6f72efe":"func = lambda x: int(sum(x) \/ len(x) * 100)\ndefault_loan_by_home_owenership = pd.pivot_table(data=loan_df,index='home_ownership',values='loan_status_binary',aggfunc=[sum,'count',func])\ndefault_loan_by_home_owenership.plot.bar(figsize=(14, 8))\nplt.title('No of Loan Granted vs No of Defaulter over the Home Ownership ')\nplt.xlabel('Home Ownership')\nplt.ylabel('Count')\nplt.legend(['No of Defaulters','No of Loan Granted'])\nplt.show()","d6e027ca":"graph_bar('Int_Rate_Bucket')\nplt.xlabel(\" Interest Rate\", size=14)","0f833bd4":"graph_bar('Loan_Amount_Bucket')\nplt.xlabel(\" Loan Amount\", size=14)","136433ca":"loan_dti_by_status = loan_df.groupby(['dti_bucket','loan_status'])['loan_status'].count()\nloan_dti_by_status","698745ef":"graph_bar('dti_bucket')\nplt.xlabel(\" Debt To Income\", size=14)","5d2cbe23":"#result_state = loan_df.groupby['addr_state'].aggregate(sum).reset_index().sort_values('loan_status_binary')\nplt.figure(figsize=(18,8))\nsplot = sns.barplot(x='addr_state', y='loan_status_binary',estimator=sum,\n                    data=loan_df,palette=\"RdYlBu\")\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha = 'center', va = 'center',\n                   xytext = (0, 10),\n                   textcoords = 'offset points')\nplt.ylabel(\"Default Rate in %\", size=14)\nplt.xlabel(\" Defaulter By State\", size=14)\nplt.show()","90c7817c":"plt.figure(figsize=(10,6))\ngraph_bar('verification_status')\nplt.xlabel(\" Verification Status\", size=14)","d362caf4":"plt.figure(figsize=(10,6))\ngraph_bar('annual_inc_bucket')\nplt.xlabel(\" Employee Income\", size=14)","1a6e3762":"def graph_bar_biv(x_val,hue):\n    result = loan_df.groupby([x_val])['loan_status_binary'].aggregate(sum).reset_index().sort_values('loan_status_binary')\n    splot = sns.barplot(x=x_val, y='loan_status_binary',hue=hue,estimator=lambda x: sum(x) \/ len(x) * 100,\n                        data=loan_df,order=result[x_val],palette=\"RdYlBu\")\n    for p in splot.patches:\n        splot.annotate(format(p.get_height(), '.1f'),\n                       (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                       ha = 'center', va = 'center',\n                       xytext = (0, 10),\n                       textcoords = 'offset points')\n    plt.ylabel(\"Default Rate in %\", size=14)\n    #print(result)","504bbe8b":"plt.figure(figsize=(10,6))\ngraph_bar_biv('term','annual_inc_bucket')\nplt.xlabel(\" Loan term with Annual Inc\", size=14)","af59e4d9":"plt.figure(figsize=(10,6))\ngraph_bar_biv('term','grade')\nplt.xlabel(\" Loan Term with Grade\", size=14)","ccf8e933":"plt.figure(figsize=(10,6))\ngraph_bar_biv('dti_bucket','term')\nplt.xlabel(\" Loan Term with dti_bucket\", size=14)","7314d19c":"plt.figure(figsize=(10,6))\ngraph_bar_biv('term','Loan_Amount_Bucket')\nplt.xlabel(\" Loan Term with Loan_Amount_Bucket\", size=14)","dcb89344":"plt.figure(figsize=(10,6))\ngraph_bar_biv('term','Int_Rate_Bucket')\nplt.xlabel(\" Loan Term wrt Interest Rate\", size=14)","b0eb4a83":"plt.figure(figsize=(10,6))\ngraph_bar_biv('Loan_Amount_Bucket','Int_Rate_Bucket')\nplt.xlabel(\" Loan_Amount_Bucket with Int_Rate_Bucket\", size=14)","66c198f3":"plt.figure(figsize=(12,8))\ngraph_bar_biv('Int_Rate_Bucket','dti_bucket')\nplt.xlabel(\" DTI with Int_Rate_Bucket\", size=14)","05487759":"plt.figure(figsize=(12,8))\ngraph_bar_biv('Loan_Amount_Bucket','dti_bucket')\nplt.xlabel(\" Loan_Amount_Bucket with DTI\", size=14)","d2ef7e28":"# top 5 purpose dataset\n\nloan_df.purpose.value_counts()","76ea94c3":"top5_purpose = pd.pivot_table(data=loan_df,index=\"purpose\", values=\"loan_status_binary\", aggfunc=sum)\ntop5_purpose = top5_purpose.sort_values(by='loan_status_binary', ascending=False)\ntop5_purpose = top5_purpose.iloc[:5,:].round(1)\ntop5_purpose_df = loan_df[loan_df.purpose.isin(['debt_consolidation','other','credit_card',\n                                                'small_business','home_improvement'])]","e1e329d1":"def graph_bar_biv_purpose(x_val,hue):\n    result = loan_df.groupby([x_val])['loan_status_binary'].aggregate(sum).reset_index().sort_values('loan_status_binary')\n    splot = sns.barplot(x=x_val, y='loan_status_binary',hue=hue,estimator=lambda x: sum(x) \/ len(x) * 100,\n                        data=top5_purpose_df,order=result[x_val],palette=\"RdYlBu\")\n    for p in splot.patches:\n        splot.annotate(format(p.get_height(), '.1f'),\n                       (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                       ha = 'center', va = 'center',\n                       xytext = (0, 10),\n                       textcoords = 'offset points')\n    plt.ylabel(\"Default Rate in %\", size=14)\n    #print(result)","c289346f":"plt.figure(figsize=(12,8))\ngraph_bar_biv_purpose('term','purpose')\nplt.xlabel(\" Term with Purpose\", size=14)","f37eb51e":"plt.figure(figsize=(20,10))\ngraph_bar_biv_purpose('Loan_Amount_Bucket','purpose')\nplt.xlabel(\" Loan_Amount_Bucket with Purpose\", size=14)","2b0947ab":"plt.figure(figsize=(20,10))\ngraph_bar_biv_purpose('emp_length_years','Int_Rate_Bucket')\nplt.xlabel(\" Employeement Length with Int_Rate_Bucket\", size=14)","57554085":"plt.figure(figsize=(20,10))\ngraph_bar_biv_purpose('grade','purpose')\nplt.xlabel(\" Grade with Purpose\", size=14)","75e55f5a":"plt.figure(figsize=(20,10))\ngraph_bar_biv_purpose('Int_Rate_Bucket','purpose')\nplt.xlabel(\" Int_Rate_Bucket with Purpose\", size=14)","d3480ad8":"plt.figure(figsize=(18,10))\ngraph_bar_biv('grade','sub_grade')\nplt.xlabel(\" DTI with Int_Rate_Bucket\", size=14)","2f23b5e4":"sns.pairplot(loan_df[['loan_amnt','term','int_rate','annual_inc','dti','emp_length_years',\"loan_status_binary\"]])\nplt.show()","4f3f1bc3":"plt.figure(figsize=(15,15))\ncont_var= ['loan_amnt', 'term','int_rate', 'installment','grade','sub_grade','addr_state',\n       'dti', 'purpose','emp_length_years','loan_status_binary','annual_inc']\ncorr = loan_df.corr()\nsns.heatmap(corr, annot=True, center=0.5,cmap=\"Greens\")","ce64c9f3":"default_loan_by_year = pd.pivot_table(data=loan_df,index='issue_d_year',values='loan_status_binary',aggfunc=[sum,'count',func])\ndefault_loan_by_year.plot.line()\nplt.title('No of Loan Granted vs No of Defaulter over the years ')\nplt.xlabel('Loan Issue Year')\nplt.ylabel('Count')\nplt.legend(['No of Defaulters','No of Loan Granted','Default Rate by Year'])\nplt.show()","e772f23e":"info_content_pred = {}\nfunc = lambda x: int(sum(x) \/ len(x) * 100)\n#lambda x: int(sum(x) \/ len(x) * 100)\ndef get_information(x_val):\n    d1_pivot = pd.pivot_table(data=loan_df,values=\"loan_status_binary\",index=x_val, aggfunc=[func])\n    diff = d1_pivot.values.max() - d1_pivot.values.min()\n    #print(d1_pivot)\n    #print(diff)\n    #print(x_val)\n    info_content_pred[x_val] = diff\n    #return diff\n    #d1_pivot.plot(kind='bar', stacked=False, figsize=(10, 5))","c2853fe5":"info_content_pred_aray = [get_information('grade'),get_information('term'),get_information('Loan_Amount_Bucket'),\n                          get_information('dti_bucket'),get_information('Int_Rate_Bucket'),get_information('emp_length_years')\n                          #,get_information('sub_grade')\n                          ,get_information('annual_inc_bucket'),get_information('purpose')\n                          ,get_information('issue_d_year'),get_information('issue_d_month'),\n                          get_information('home_ownership')\n                          #,get_information('addr_state')\n                         ]\n\ninfo_content_pred\n","0b58e5c6":"## Sorting by values \n\n## Converting diconary into Dataframe\n\n\ninfo_content_pred_df = pd.DataFrame.from_dict([info_content_pred])\ninfo_content_pred_df_T = info_content_pred_df.T\ninfo_content_pred_df_T.sort_values(by=0,ascending = False)\n#info_content_pred_df_T.sort_index(axis=0,ascending = False)","87f411a0":"plt.figure(figsize=(12,8))\ninfo_content_pred_df_T.sort_values(by=0,ascending = False).plot(kind='bar')\nplt.xlabel(\"Top Features\")\nplt.ylabel(\"% Differanc in Default Rate \")\nplt.legend(['Top Driving Factor behind Loan Defaulter'])\nplt.show()\n","868d8fed":"default_loan_by_home_owenership = pd.pivot_table(data=loan_df,index='home_ownership',values='loan_status_binary',aggfunc=[sum,'count',func])\ndefault_loan_by_home_owenership.plot.bar()\nplt.title('No of Loan Granted vs No of Defaulter over the years ')\nplt.xlabel('Loan Issue Year')\nplt.ylabel('Count')\nplt.legend(['No of Defaulters','No of Loan Granted','Default Rate by Year'])\nplt.show()","432a5826":"plt.figure(figsize=(22,10))\nsplot = sns.barplot(x='addr_state', y='loan_status_binary',estimator=sum,\n                    data=loan_df,palette=\"RdYlBu\")\nfor p in splot.patches:\n    splot.annotate(format(p.get_height(), '.1f'),\n                   (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                   ha = 'center', va = 'center',\n                   xytext = (0, 10),\n                   textcoords = 'offset points')\n    plt.ylabel(\"Default Rate in %\", size=14)\nplt.show()","c1e4a19b":"#result = loan_df.groupby(['emp_length_years'])['loan_status_binary'].aggregate(sum).reset_index().sort_values('loan_status_binary')\n#result['percentage'] = \n#result","c5f1643b":"loan_df.loan_amnt.max()","f3501809":"loan_term_by_emp_length = loan_df.groupby(['emp_length_years','loan_status'])['loan_status'].count()\nloan_term_by_emp_length","fffe42c5":"#?pd.qcut\n#?pd.cut","b3611780":"loan_df['Int_Rate_Bucket'] = pd.cut(loan_df.int_rate, bins=3,  \n       labels=['low', 'medium', 'high'])\nloan_df.int_rate.value_counts()","36eeb959":"loan_df.head()","6a52b883":"loan_df","52d3797e":"#### 10. Default Rate wrt Debt To Income\n\n#### It clearly shows that The Person who has high DTI  they are pron to deaulter than  Less Loan Amount applicant ","f34687ce":"#### 13. Default Rate wrt Employee Income Bucket\n\n#### Applicant who has less salary are more prone to be defaulters -- Values are in %","a70ef777":"#### 9. Default Rate wrt Int_Rate_Bucket\n\n#### It clearly shows that Person who applied for high Interest Rate  they are more pron to get deaulter as well compare to Less Interest Rate applicant ","00789f28":"#### Now Removing Rows with multiple nulls","aefdc0d3":"#### Analysis 1 Term Vs Annual Income Vs Default Rate\n\n##### Those having more income are more Defaulter rate","0e7557ae":"#### Creating a function which we can use multiple time for Categorical Dataset","75b23666":"### Bivariate Analysis","fdc38a7b":"#### Analysis 6 DTI Vs Interest Rate Vs Default Rate\n\n##### HighDTI with High Interest Rate applicants are more Prone to be Defaulter","ba186bfa":"### Univariate Analysis","e71e4856":"#### Analysis 2 Term Vs DTI Vs Default Rate\n\n##### 60 term loan applicant with higher DTI  are more prone to be Defaulter. The highest is for Bucket VH 20+ for Defaulter rate","56d893cc":"### Exploratory Data Analysis","5764177c":"#### 11. Default Rate wrt State\n\n#### This is interesting to know that the person from California states are more defaulter than any other state.","d9e65be0":"#### 7. Default Rate wrt Sub Grade\n\n#### It clearly shows that Person who applied for high terms they are deaulter as well compare to Less Term applicant ","7ba7c7cb":"#### 5. Default Rate wrt issue_d_month\n\n#### It clearly shows that Person who applied for high terms they are deaulter as well compare to Less Term applicant ","e27c46ae":"### DATA Cleaning \n\n##### As we can see there are many column with only null so we are going to drop them with use of dronna function\n\n#### So more than 90% null column we are removing \n\n#### df=df.dropna(axis=1,how='all')","28469ec6":"#### Removing the rows where Loan is still going on. it means they are nether defaulter nor fully paid. it is not going to help us","3f9ee368":"## Project Brief\nSolving this assignment will give you an idea about how real business problems are solved using EDA. In this case study, apart from applying the techniques you have learnt in EDA, you will also develop a basic understanding of risk analytics in banking and financial services and understand how data is used to minimise the risk of losing money while lending to customers.\n\n## Business Understanding\n\nYou work for a consumer finance company which specialises in lending various types of loans to urban customers. When the company receives a loan application, the company has to make a decision for loan approval based on the applicant\u2019s profile. Two types of risks are associated with the bank\u2019s decision:\n\nIf the applicant is likely to repay the loan, then not approving the loan results in a loss of business to the company\n\nIf the applicant is not likely to repay the loan, i.e. he\/she is likely to default, then approving the loan may lead to a financial loss for the company\n\n \n\nThe data given below contains the information about past loan applicants and whether they \u2018defaulted\u2019 or not. The aim is to identify patterns which indicate if a person is likely to default, which may be used for taking actions such as denying the loan, reducing the amount of loan, lending (to risky applicants) at a higher interest rate, etc.\n\n \n\nIn this case study, you will use EDA to understand how <b>consumer attributes<\/b> and <b>loan attributes<\/b> influence the tendency of default.\n\n\n<p>\n<img src =\"https:\/\/cdn.upgrad.com\/UpGrad\/temp\/7afbce98-8ecc-41c6-96d8-981cba7d343f\/Loan_image.png\" alt='Figure 1'>\n<center> <b>Figure 1. Loan Data Set<\/b> <\/center> \n <\/br>  \n<\/p>\n\nWhen a person applies for a loan, there are <b>two types of decisions<\/b> that could be taken by the company:\n\n\n1. <b>Loan accepted:<\/b> If the company approves the loan, there are 3 possible scenarios described below:\n\n    - <b>Fully paid:<\/b> Applicant has fully paid the loan (the principal and the interest rate)\n    - <b>Current:<\/b> Applicant is in the process of paying the instalments, i.e. the tenure of the loan is not yet completed. These candidates are not labelled as 'defaulted'.\n    -  <b>Charged-off:<\/b> Applicant has not paid the instalments in due time for a long period of time, i.e. he\/she has defaulted on the loan \n<p><\/p>\n2. <b>Loan rejected:<\/b>The company had rejected the loan (because the candidate does not meet their requirements etc.). Since the loan was rejected, there is no transactional history of those applicants with the company and so this data is not available with the company (and thus in this dataset)\n\n\n## Business Objectives \nThis company is the largest online loan marketplace, facilitating personal loans, business loans, and financing of medical procedures. Borrowers can easily access lower interest rate loans through a fast online interface. \n\n \n\nLike most other lending companies, lending loans to \u2018risky\u2019 applicants is the largest source of financial loss (called credit loss). The credit loss is the amount of money lost by the lender when the borrower refuses to pay or runs away with the money owed. In other words, borrowers who <b>default<\/b> cause the largest amount of loss to the lenders. In this case, the customers labelled as 'charged-off' are the 'defaulters'. \n\n \n\nIf one is able to identify these risky loan applicants, then such loans can be reduced thereby cutting down the amount of credit loss. Identification of such applicants using EDA is the aim of this case study.\n\n \n\nIn other words, the company wants to understand the <b>driving factors (or driver variables)<\/b> behind loan default, i.e. the variables which are strong indicators of default.  The company can utilise this knowledge for its portfolio and risk assessment. \n\n\n","517eb612":"#### 1. Default Rate wrt Term\n\n#### It clearly shows that Person who applied for high terms they are deaulter as well compare to Less Term applicant ","a6290fc9":"#### Analysis 2 Term Vs Grades Vs Default Rate\n\n##### 60 term is higher we already checked earlier and in that F grade is highest for Defaulter rate","b4e86716":"#### 3. Default Rate wrt Purpose of Loan\n\n#### It clearly shows that Person who applied for Small Businesses  they are deaulter compare to other Purpose ","c8cd9e1c":"#### 9. Default Rate wrt Loan_Amount_Bucket\n\n#### It clearly shows that Person who applied for high Loan Amount they are deaulter than  Less Loan Amount applicant ","173d0878":"#### 12. Default Rate wrt Verification Status\n\n#### Interesting Loan that get varified are more defaulter in %","ef05f7e1":"#### Analysis 5 Loan_Amount_Bucket Vs Interest Rate Vs Default Rate\n\n##### Loan amount with High Interest Rate applicants are more Prone to be Defaulter","50442f27":"#### Since there are many features in wrong dtype lets change them ","3bcc2c3b":"#### Analysis 7 Loan_Amount_Bucket Vs DTI Vs Default Rate\n\n##### Loan amount with High DTI  applicants are more Prone to be Defaulter","1021af7e":"#### Analysis 8  Purpose Vs InterestRate,Loan_Amount_Bucket, Term  Vs Default Rate\n\n##### Loan application for Small business are more prone to defalter if they have High Rate, High Amount","d4d62285":"#### Analysis 3 Term Vs Loan_Amount_Bucket Vs Default Rate\n\n##### 60 term with high Loan_Amount_Bucket is more prone to  Defaulter ","3ec7641e":"#### 2. Default Rate wrt Interest rate Grade\n\n#### It clearly shows that Applicant which has high Grade they have  deaulter Rate also high as well compare to Grade A applicant \n\nresult = loan_df.groupby([\"grade\"])['loan_status_binary'].aggregate(np.median).reset_index().sort_values('loan_status_binary')\nsns.barplot(x='grade', y=\"loan_status_binary\", estimator=lambda x: int(sum(x) \/ len(x) * 100),data=loan_df, order=result['grade']) #formerly: sns.barplot(x='Id', y=\"Speed\", data=df, palette=colors, order=result['Id'])\nplt.show()","1cafafc4":"#### 1. Default Rate wrt Term\n\n#### It clearly shows that Person who applied for high terms they are deaulter as well compare to Less Term applicant ","c83ee139":"#### 6. Default Rate wrt emp_length_years\n\n#### It clearly shows that Person who applied for high terms they are deaulter as well compare to Less Term applicant ","877db82e":"### DATA Preparation","f6afc8dc":"### Data Undersatnding","688eef8f":"#### 8. Default Rate wrt home_ownership\n\n#### Applicant having there home rented or on mortgage have almost equal tendancy to default the loan","feb54ed9":"#### Analysis 4 Term Vs Interest Rate Vs Default Rate\n\n##### 60 term with high Interest Rate is more prone to  Defaulter ..... in 36 Terms as well same","c133b06f":"### Calculate Information Content to find top 10 Pridictors","460e4387":"#### 4. Default Rate wrt issue_d_year\n\n#### It clearly shows that Person who applied for high terms they are deaulter as well compare to Less Term applicant "}}