{"cell_type":{"65581223":"code","dc41d1d1":"code","2f988a96":"code","8720691d":"code","b2feb949":"code","5cd5bf6f":"code","3e461ded":"code","4f95491a":"code","c35ce10c":"code","1fcb3564":"code","1d993191":"code","b870974e":"code","e49e977b":"code","df758582":"code","883aa85e":"code","23f26745":"code","38cc9b54":"code","8cc3937b":"code","a70951fb":"code","11438cfa":"code","f2d77b2b":"code","068c5748":"code","3da1ebc3":"code","d67943f4":"code","8831fddc":"code","88a0d8a9":"code","a5e0e4de":"code","11323c41":"code","239264f2":"code","675e2832":"code","372ded69":"code","ba4ba3b9":"code","37a57526":"code","894eb143":"code","c3462490":"code","be818228":"code","41d4b273":"code","b05bda2d":"code","c300820c":"code","ee1cf343":"code","02db08d1":"code","b3ee5e18":"code","9fdb5d20":"code","8ae1d234":"code","552e62d7":"code","9bdecd29":"code","65e2fb36":"code","64e3a485":"code","c6a57cd6":"code","ac9563f5":"code","9cb97aa5":"code","cc88a9ea":"code","8d4c55ab":"code","425cdeaf":"code","b48ae274":"code","360514e8":"code","424a3a1d":"code","77485de7":"code","f9ddd4e9":"markdown","db381cdf":"markdown","eed86671":"markdown","177626dd":"markdown","86e4f3b7":"markdown","7bd1291f":"markdown","1c419ea2":"markdown","ce816a11":"markdown","671500be":"markdown","7c7ff25b":"markdown","7cb09057":"markdown","bab787de":"markdown","48122179":"markdown","770fff3c":"markdown","5a506126":"markdown","0892ad05":"markdown","63ad3cb7":"markdown","76c4d423":"markdown","bab3f57c":"markdown","874705fc":"markdown","8bde5c32":"markdown"},"source":{"65581223":"# Version v01-02\n# Import all libraries\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport numpy as np # linear algebra\nimport matplotlib.pyplot as plt # ploting the data\nimport seaborn as sns # ploting the data\nimport math # calculation","dc41d1d1":"# Set up color blind friendly color palette\n# The palette with grey:\ncbPalette = [\"#999999\", \"#E69F00\", \"#56B4E9\", \"#009E73\", \"#F0E442\", \"#0072B2\", \"#D55E00\", \"#CC79A7\"]\n# The palette with black:\ncbbPalette = [\"#000000\", \"#E69F00\", \"#56B4E9\", \"#009E73\", \"#F0E442\", \"#0072B2\", \"#D55E00\", \"#CC79A7\"]\n\n# sns.palplot(sns.color_palette(cbPalette))\n# sns.palplot(sns.color_palette(cbbPalette))\n\nsns.set_palette(cbPalette)\n#sns.set_palette(cbbPalette)","2f988a96":"# Load the dataset\n#price_less = pd.read_csv('Data\/MELBOURNE_HOUSE_PRICES_LESS.csv')\nprice_less = pd.read_csv('..\/input\/melbourne-housing-market\/MELBOURNE_HOUSE_PRICES_LESS.csv')\n# price_full = pd.read_csv('Data\/Melbourne_housing_FULL.csv')","8720691d":"price_less.info()","b2feb949":"# price_full.info()","5cd5bf6f":"price_less.head(10)","3e461ded":"# price_full.head(10)","4f95491a":"# Determine the number of missing values for every column\nprice_less.isnull().sum()","c35ce10c":"# Exclude rows with missing prices\ndata_filtered = price_less.loc[price_less['Price'] > 0]\ndata_filtered.isnull().sum()","1fcb3564":"# price_full.isnull().sum()","1d993191":"data = data_filtered.copy()","b870974e":"data.describe()","e49e977b":"data.columns","df758582":"data['Price'].describe()","883aa85e":"x = 'Price'\nsns.set_palette(\"muted\")\nsns.distplot(data[x])\nplt.ioff()\nsns.set_palette(cbPalette)","23f26745":"# Log transform the Price variable to approach a normal distribution\nx = np.log10(data[\"Price\"])\nsns.set_palette(\"muted\")\nsns.distplot(x)\nplt.ioff()\nsns.set_palette(cbPalette)","38cc9b54":"# data[\"Price\"] = np.log10(data.loc[:, \"Price\"].values)","8cc3937b":"# data[\"Price\"] = np.log10(data.loc[:, \"Price\"].values)","a70951fb":"x = 'Rooms'\nsns.set_palette(\"muted\")\nsns.distplot(data[x])\nplt.ioff()\nsns.set_palette(cbPalette)","11438cfa":"x = 'Propertycount'\nsns.set_palette(\"muted\")\nsns.distplot(data[x])\nplt.ioff()\nsns.set_palette(cbPalette)","f2d77b2b":"x = 'Distance'\nsns.set_palette(\"muted\")\nsns.distplot(data[x])\nplt.ioff()\nsns.set_palette(cbPalette)","068c5748":"data.head()","3da1ebc3":"# data.shape","d67943f4":"# data.columns","8831fddc":"#  https:\/\/www.datacamp.com\/community\/tutorials\/categorical-data\ndata['Suburb'].value_counts().count()","88a0d8a9":"#  https:\/\/www.datacamp.com\/community\/tutorials\/categorical-data\ndata['Address'].value_counts().count()","a5e0e4de":"# https:\/\/seaborn.pydata.org\/generated\/seaborn.countplot.html\ntitle = 'Count of properties per Region'\nsns.countplot(y = data['Regionname'])\nplt.title(title)\nplt.ioff()","11323c41":"# https:\/\/seaborn.pydata.org\/generated\/seaborn.countplot.html\ntitle = ''\nsns.countplot(y = data['Type'])\nplt.title(title)\nplt.ioff()","239264f2":"#  https:\/\/www.datacamp.com\/community\/tutorials\/categorical-data\n# data['Method'].value_counts()","675e2832":"title = ''\nsns.countplot(y = data['Method'])\nplt.title(title)\nplt.ioff()","372ded69":"#  https:\/\/www.datacamp.com\/community\/tutorials\/categorical-data\n# price_less['CouncilArea'].value_counts().count()","ba4ba3b9":"# price_less['CouncilArea'].value_counts()","37a57526":"title = ''\nplt.figure(figsize=(20,10))\nsns.countplot(y = price_less['CouncilArea'])\nplt.title(title)\nplt.ioff()","894eb143":"# title = ''\n# plt.figure(figsize=(20,10))\n# sns.countplot(y = price_less['SellerG'])\n# plt.title(title)\n# plt.ioff()","c3462490":"data['SellerG'].value_counts().count()","be818228":"data['Postcode'].value_counts().count()","41d4b273":"data.head()","b05bda2d":"data.columns","c300820c":"# see https:\/\/seaborn.pydata.org\/generated\/seaborn.scatterplot.html\nsns.set_palette(\"muted\")\nx = 'Rooms'\n# x = np.log10(data[\"Rooms\"])\n# y = 'Price'\ny = np.log10(data[\"Price\"])\n\ntitle = ''\nf, ax = plt.subplots(figsize=(8, 6))\nsns.scatterplot(x=x, y=y, data=data)\nplt.title(title)\nplt.ioff()\nsns.set_palette(cbPalette)","ee1cf343":"sns.set_palette(\"muted\")\nx = \"Distance\"\ny = np.log10(data[\"Price\"])\n\ntitle = ''\nf, ax = plt.subplots(figsize=(8, 6))\nsns.scatterplot(x=x, y=y, data=data)\nplt.title(title)\nplt.ioff()\nsns.set_palette(cbPalette)","02db08d1":"sns.set_palette(\"muted\")\nx = np.log10(data[\"Price\"] \/ data[\"Rooms\"])\ny = np.log10(data[\"Price\"])\n\ntitle = ''\nf, ax = plt.subplots(figsize=(8, 6))\nsns.scatterplot(x=x, y=y, data=data)\nplt.title(title)\nplt.ioff()\nsns.set_palette(cbPalette)","b3ee5e18":"sns.set_palette(\"muted\")\nx = np.log10(data['Propertycount'])\n# x = np.log10(data['Propertycount'] \/ data[\"Rooms\"])\ny = np.log10(data[\"Price\"])\n\ntitle = ''\nf, ax = plt.subplots(figsize=(8, 6))\nsns.scatterplot(x=x, y=y, data=data)\nplt.title(title)\nplt.ioff()\nsns.set_palette(cbPalette)","9fdb5d20":"data.head()","8ae1d234":"data.columns","552e62d7":"y=\"Type\"\nx=np.log10(data[\"Price\"])\n\ntitle = \"\"\nf, ax = plt.subplots(figsize=(8, 6))\nsns.boxplot(x=x, y=y, data=data, notch=True, showmeans=True,\n           meanprops={\"marker\":\"s\",\"markerfacecolor\":\"white\", \"markeredgecolor\":\"black\"})\nplt.title(title)\nplt.ioff()","9bdecd29":"y=\"Regionname\"\nx=np.log10(data[\"Price\"])\n# x=\"Price\"\n\ntitle = \"\"\nf, ax = plt.subplots(figsize=(8, 6))\nsns.boxplot(x=x, y=y, data=data, notch=True, showmeans=True,\n           meanprops={\"marker\":\"s\",\"markerfacecolor\":\"white\", \"markeredgecolor\":\"black\"})\nplt.title(title)\nplt.ioff()","65e2fb36":"y=\"Method\"\nx=np.log10(data[\"Price\"])\n# x=\"Price\"\n\ntitle = \"\"\nf, ax = plt.subplots(figsize=(8, 6))\nsns.boxplot(x=x, y=y, data=data, notch=True, showmeans=True,\n           meanprops={\"marker\":\"s\",\"markerfacecolor\":\"white\", \"markeredgecolor\":\"black\"})\nplt.title(title)\nplt.ioff()","64e3a485":"sns.set_palette(\"muted\")\ny=\"CouncilArea\"\nx=np.log10(data[\"Price\"])\n# x=\"Price\"\n\ntitle = \"\"\nf, ax = plt.subplots(figsize=(25, 10))\nsns.boxplot(x=x, y=y, data=data, notch=False, showmeans=True,\n           meanprops={\"marker\":\"s\",\"markerfacecolor\":\"white\", \"markeredgecolor\":\"black\"})\nplt.title(title)\nplt.ioff()\nsns.set_palette(cbPalette)","c6a57cd6":"# https:\/\/stackoverflow.com\/questions\/31468176\/setting-values-on-a-copy-of-a-slice-from-a-dataframe\ndata['Price\/Rooms'] = (data.loc[:, \"Price\"] \/ data.loc[:, \"Rooms\"])","ac9563f5":"data.columns","9cb97aa5":"data.drop(['Date', 'Address'], axis=1, inplace=True)","cc88a9ea":"data.head()","8d4c55ab":"# Encoding categorical data\n# https:\/\/pbpython.com\/categorical-encoding.html\ndata = pd.get_dummies(data, columns=['Suburb', 'Rooms', 'Type',  'Method', 'SellerG', 'Regionname', 'CouncilArea'], drop_first=True)","425cdeaf":"data.info()","b48ae274":"# Split the dataset\nX = data.drop('Price', axis=1).values\ny = data['Price'].values\ny = np.log10(y)","360514e8":"# Splitting the dataset into the Training set and Test set\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 0)\n\n# Fitting Multiple Linear Regression to the Training set\nfrom sklearn.linear_model import LinearRegression\nlr = LinearRegression()\nlr.fit(X_train, y_train)\n\n# Predicting the Test set results\ny_pred = lr.predict(X_test)","424a3a1d":"# Compare predicted and actual values\n# https:\/\/towardsdatascience.com\/a-beginners-guide-to-linear-regression-in-python-with-scikit-learn-83a8f7ae2b4f\n# https:\/\/stackoverflow.com\/questions\/19100540\/rounding-entries-in-a-pandas-dafaframe\ndf = pd.DataFrame({'Actual': np.round(y_test, 2), \n                   'Predicted': np.round(y_pred, 2)})\ndf.head(10)","77485de7":"# https:\/\/towardsdatascience.com\/a-beginners-guide-to-linear-regression-in-python-with-scikit-learn-83a8f7ae2b4f\n# https:\/\/www.theanalysisfactor.com\/assessing-the-fit-of-regression-models\/\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn import metrics\nfrom sklearn.metrics import r2_score\n\nprint('Price mean:', np.round(np.mean(y), 2))  \nprint('Price std:', np.round(np.std(y), 2))\nprint('RMSE:', np.round(np.sqrt(metrics.mean_squared_error(y_test, lr.predict(X_test))), 2))\nprint('R2 score train:', np.round(r2_score(y_train, lr.predict(X_train), multioutput='variance_weighted'), 2))\nprint('R2 score test:', np.round(r2_score(y_test, lr.predict(X_test), multioutput='variance_weighted'), 2))","f9ddd4e9":"## 2. Exploratory Data Analysis","db381cdf":"### 2.1 Explore the dataset structure","eed86671":"### 4.1 Data Preprocessing","177626dd":"Dataset downloaded from Kaggle on the 2020\/01\/05","86e4f3b7":"## 1. Dataset","7bd1291f":"* Suburb: Suburb\n* Address: Address\n* Rooms: Number of rooms\n* Price: Price in Australian dollars\n* Method: S - property sold; SP - property sold prior; PI - property passed in; PN - sold prior not disclosed; SN - sold not disclosed; NB - no bid; VB - vendor bid; W - withdrawn prior to auction; SA - sold after auction; SS - sold after auction price not disclosed. N\/A - price or highest bid not available.\n* Type: br - bedroom(s); h - house,cottage,villa, semi,terrace; u - unit, duplex; t - townhouse; dev site - development site; o res - other residential.\n* SellerG: Real Estate Agent\n* Date: Date sold\n* Distance: Distance from CBD in Kilometres\n* Regionname: General Region (West, North West, North, North east ...etc)\n* Propertycount: Number of properties that exist in the suburb.\n* Bedroom2 : Scraped # of Bedrooms (from different source)\n* Bathroom: Number of Bathrooms\n* Car: Number of carspots\n* Landsize: Land Size in Metres\n* BuildingArea: Building Size in Metres\n* YearBuilt: Year the house was built\n* CouncilArea: Governing council for the area\n* Lattitude: Self explanitory\n* Longtitude: Self explanitory","1c419ea2":"EDA - Visualization - Modeling","ce816a11":"## 6. References","671500be":"* https:\/\/www.kaggle.com\/lpuglisi\/visualizing-melbourne-real-estate \n* https:\/\/www.kaggle.com\/anthonypino\/price-analysis-and-linear-regression\n* https:\/\/www.kaggle.com\/emanueleamcappella\/random-forest-hyperparameters-tunings\n* https:\/\/www.datacamp.com\/community\/tutorials\/categorical-data\n* https:\/\/towardsdatascience.com\/a-beginners-guide-to-linear-regression-in-python-with-scikit-learn-83a8f7ae2b4f\n* https:\/\/www.theanalysisfactor.com\/assessing-the-fit-of-regression-models\/\n* https:\/\/pbpython.com\/categorical-encoding.html","7c7ff25b":"## 4. Models","7cb09057":"## 3.2 Price vs categorical variables","bab787de":"### 2.1 Explore the categorical variables","48122179":"# Melbourne Housing Market: Multiple Linear Regression","770fff3c":"## 3.1 Price vs continous variables","5a506126":"## 3. Visualization","0892ad05":"### 4.2 Multiple Linear Regression","63ad3cb7":"## 5. Conclusions\n* Price is clearly proportional to the Distance and Rooms number variables\n* Multiple linear regression performs well on this dataset","76c4d423":"<img src=\"https:\/\/i.imgur.com\/dXIK3yX.jpg\" width=\"600px\">","bab3f57c":"https:\/\/www.kaggle.com\/anthonypino\/melbourne-housing-market","874705fc":"Photo by [Breno Assis](https:\/\/unsplash.com\/photos\/r3WAWU5Fi5Q) on Unsplash","8bde5c32":"### 2.2 Explore the continous variables"}}