{"cell_type":{"684fb11e":"code","257a8bbe":"code","9912aeb5":"code","0c7ad0a3":"code","0053da1e":"code","5dd77540":"code","be74dc19":"code","d38c3c58":"code","80b12e82":"code","5645b3cd":"code","b244a451":"code","6c12cc7d":"code","87a7b59b":"code","c36783a7":"code","74cf2db4":"code","b2ac0cbd":"code","3a6d7dfe":"code","c8b8709e":"code","6eb496f7":"code","ec951cef":"code","211ac465":"code","89af9700":"code","c812e06c":"code","838960dc":"code","d322a519":"markdown"},"source":{"684fb11e":"# Libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px","257a8bbe":"# Load data\npath = \"..\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv\"\ndf = pd.read_csv(path)\ndf = df.infer_objects()\ndf.head()","9912aeb5":"# Drop sl_no and fill NaN in salary as 0\ndf.drop(\"sl_no\", axis=1, inplace=True)\ndf[\"salary\"].fillna(value=0, inplace=True)\ndf.info()","0c7ad0a3":"# Gender vs Status\nsns.countplot(x=\"gender\", hue=\"status\", data=df)\nplt.show()","0053da1e":"# Placed\/Notplaced\ndf_placed = df.loc[df[\"status\"] == \"Placed\"]\ndf_notplaced = df.loc[df[\"status\"] == \"Not Placed\"]","5dd77540":"df_placed.head()","be74dc19":"df_notplaced.head()","d38c3c58":"# Male vs Female among placed candidates\npx.pie(values=df_placed[\"gender\"].value_counts().tolist(), \n        names=list(dict(df_placed[\"gender\"].value_counts())), \n        title=\"Male v Female\", \n        color_discrete_sequence=[\"purple\", \"pink\"])","80b12e82":"# Distribution of salary among placed candidates over gender\nfig = plt.figure(figsize=(18, 6))\nsns.kdeplot(df_placed.salary[df.gender==\"M\"])\nsns.kdeplot(df_placed.salary[df.gender==\"F\"])\nplt.legend([\"Male\", \"Female\"])\nplt.xlabel(\"salary\")\nplt.title(\"Distribution of salary among placed candidates over gender\")\nplt.show()","5645b3cd":"# Distribution of SSC% among placed and non-placed candidates\nfig = plt.figure(figsize=(18, 6))\nsns.kdeplot(df_placed[\"ssc_p\"])\nsns.kdeplot(df_notplaced[\"ssc_p\"])\nplt.legend([\"Placed\", \"Non-placed\"])\nplt.xlabel(\"ssc_p\")\nplt.title(\"Distribution of SSC% among placed and non-placed candidates\")\nplt.show()","b244a451":"# Distribution of ssc_b among placed candidates\npx.pie(values=df_placed[\"ssc_b\"].value_counts().tolist(), \n        names=list(dict(df_placed[\"ssc_b\"].value_counts())), \n        title=\"Distribution of SSC board among placed candidates\",\n        color_discrete_sequence=[\"purple\", \"pink\"])","6c12cc7d":"# Distribution of HSC% among placed and non-placed candidates\nfig = plt.figure(figsize=(18, 6))\nsns.kdeplot(df_placed[\"hsc_p\"])\nsns.kdeplot(df_notplaced[\"hsc_p\"])\nplt.legend([\"Placed\", \"Non-placed\"])\nplt.xlabel(\"hsc_p\")\nplt.title(\"Distribution of HSC% among placed and non-placed candidates\")\nplt.show()","87a7b59b":"# Distribution of hsc_b among placed candidates\npx.pie(values=df_placed[\"hsc_b\"].value_counts().tolist(), \n        names=list(dict(df_placed[\"hsc_b\"].value_counts())), \n        title=\"Distribution of HSC board among placed candidates\",\n        color_discrete_sequence=[\"purple\", \"pink\"])","c36783a7":"# Distribution of hsc_s among placed candidates\npx.pie(values=df_placed[\"hsc_s\"].value_counts().tolist(), \n        names=list(dict(df_placed[\"hsc_s\"].value_counts())), \n        title=\"Distribution of HSC streams among placed candidates\",\n        color_discrete_sequence=[\"purple\", \"pink\", \"maroon\"])","74cf2db4":"# Distribution of Degree% among placed and non-placed candidates\nfig = plt.figure(figsize=(18, 6))\nsns.kdeplot(df_placed[\"degree_p\"])\nsns.kdeplot(df_notplaced[\"degree_p\"])\nplt.legend([\"Placed\", \"Non-placed\"])\nplt.xlabel(\"degree_p\")\nplt.title(\"Distribution of Degree% among placed and non-placed candidates\")\nplt.show()","b2ac0cbd":"# Distribution of degree_t among placed candidates\npx.pie(values=df_placed[\"degree_t\"].value_counts().tolist(), \n        names=list(dict(df_placed[\"degree_t\"].value_counts())), \n        title=\"Distribution of Degree streams among placed candidates\",\n        color_discrete_sequence=[\"purple\", \"pink\", \"maroon\"])","3a6d7dfe":"# Distribution of workex among placed candidates\npx.pie(values=df_placed[\"workex\"].value_counts().tolist(), \n        names=list(dict(df_placed[\"workex\"].value_counts())), \n        title=\"Distribution of work experience among placed candidates\",\n        color_discrete_sequence=[\"purple\", \"pink\"])","c8b8709e":"# Distribution of Etest% among placed and non-placed candidates\nfig = plt.figure(figsize=(18, 6))\nsns.kdeplot(df_placed[\"etest_p\"])\nsns.kdeplot(df_notplaced[\"etest_p\"])\nplt.legend([\"Placed\", \"Non-placed\"])\nplt.xlabel(\"etest_p\")\nplt.title(\"Distribution of Etest% among placed and non-placed candidates\")\nplt.show()","6eb496f7":"# Distribution of specialisation among placed candidates\npx.pie(values=df_placed[\"specialisation\"].value_counts().tolist(), \n        names=list(dict(df_placed[\"specialisation\"].value_counts())), \n        title=\"Distribution of specialisation among placed candidates\",\n        color_discrete_sequence=[\"purple\", \"pink\"])","ec951cef":"# Distribution of MBA% among placed and non-placed candidates\nfig = plt.figure(figsize=(18, 6))\nsns.kdeplot(df_placed[\"mba_p\"])\nsns.kdeplot(df_notplaced[\"mba_p\"])\nplt.legend([\"Placed\", \"Non-placed\"])\nplt.xlabel(\"mba_p\")\nplt.title(\"Distribution of MBA% among placed and non-placed candidates\")\nplt.show()","211ac465":"# Encoding categorical features\nfrom sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\n\ncat_features = [\"gender\", \"ssc_b\", \"hsc_b\", \"hsc_s\", \"degree_p\", \"degree_t\", \"workex\", \"specialisation\", \"status\"]\ndf[cat_features] = df[cat_features].apply(le.fit_transform)\ndf.head()","89af9700":"# Correlation among all the features\nplt.figure(figsize=(18, 15))\nsns.heatmap(data=df.corr(), annot=True)","c812e06c":"# Effect of different fearure on each other\nplt.figure(figsize=(18, 15))\nsns.pairplot(data=df)","838960dc":"# Most important features\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_selection import SelectKBest, f_classif\n\nX = df.drop([\"status\", \"salary\"], axis=1)\ny = df[\"status\"]\nX_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y)\n\nselector = SelectKBest(f_classif)\nselector.fit(X_train, y_train)\n\nprint(*zip(X.columns, selector.scores_))","d322a519":"If you found this notebook helpful then please give an upvote and don't budge from giving any suggestions to improve the notebook.\nThanks. Stay safe!!"}}