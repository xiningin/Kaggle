{"cell_type":{"9b0e09f7":"code","9d7c1698":"code","4e32136d":"code","daae8b90":"code","bcf62400":"code","28c59122":"code","b6cfb9ae":"code","0323ba35":"code","9e9d4e40":"code","91833f16":"code","8129f970":"code","88b0b7a8":"code","2999156c":"code","82f319c0":"code","e5cf956d":"code","7c48f4dd":"code","e563135d":"code","e46ed500":"code","f1ee4fb5":"code","0260cf5f":"markdown","d7e1a613":"markdown"},"source":{"9b0e09f7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9d7c1698":"s_data = pd.read_csv('\/kaggle\/input\/tabular-playground-series-dec-2021\/sample_submission.csv')\ns_data.head()","4e32136d":"train_data = pd.read_csv('\/kaggle\/input\/tabular-playground-series-dec-2021\/train.csv')\ntrain_data.set_index('Id', inplace = True)\ntrain_data.head()","daae8b90":"test_data = pd.read_csv('\/kaggle\/input\/tabular-playground-series-dec-2021\/test.csv')\ntest_data.head()","bcf62400":"train_data.describe()","28c59122":"train_data.info()","b6cfb9ae":"print('Shape of Train DF -', train_data.shape)\nprint('Shape of Test DF -',test_data.shape)\nprint('NA values in Train DF :', train_data.isna().sum().sum())\nprint('NA values in Test DF :', test_data.isna().sum().sum())","0323ba35":"target = 'Cover_Type'\nfeatures = [col for col in train_data.columns if col not in ['id' , target]]\nfeatures","9e9d4e40":"X = train_data.drop([target], axis = 1)\ny = train_data[target]","91833f16":"print(f'Shape of data X - {X.shape}, y - {y.shape} ')","8129f970":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state= 42, test_size = 0.2)","88b0b7a8":"catb_params = {\n    \"objective\": \"MultiClass\",\n    \"task_type\": \"GPU\",\n}","2999156c":"from catboost import CatBoostClassifier\nmodel = CatBoostClassifier(**catb_params)\nmodel.fit(X_train, y_train,early_stopping_rounds=200,verbose=0)","82f319c0":"preds = model.predict(X_test)","e5cf956d":"from sklearn import metrics\nacc = metrics.accuracy_score(y_test, preds)\nprint('Accuracy of this Model - ', acc)","7c48f4dd":"report = metrics.classification_report(y_test, preds)\nprint(report)","e563135d":"predict = model.predict(test_data)","e46ed500":"predictions = pd.DataFrame()\npredictions['Id'] = test_data['Id']\npredictions[\"Cover_Type\"] = predict\npredictions.to_csv(\"submission.csv\", index=False)","f1ee4fb5":"predictions.head()","0260cf5f":"**EDA**","d7e1a613":"**Data-Loading!**"}}