{"cell_type":{"9c6bf24d":"code","89517be0":"code","d8514ae7":"code","8de5e613":"code","ce9b827e":"code","e5952b3c":"code","1dc2b226":"code","d5c5398f":"code","e85adf49":"code","7029d4c0":"code","248fd66c":"code","82452d8f":"code","af2bc299":"code","69a03e56":"code","4e9111bc":"code","b63c438a":"code","fe6cb942":"markdown","94487244":"markdown","70cc6557":"markdown","ae97bb27":"markdown","7d05986a":"markdown","b1af1dc6":"markdown","5ab094d7":"markdown","3f731e89":"markdown","ce0360b3":"markdown","e1043779":"markdown","f50bfffa":"markdown","a7c205a4":"markdown","5ef475e5":"markdown","a852b2fc":"markdown","f5f07e5a":"markdown","d32ba471":"markdown","d617222c":"markdown","0c00656b":"markdown","d62e8811":"markdown"},"source":{"9c6bf24d":"\n\n\n\n\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nimport tensorflow as tf\nfrom tensorflow.keras import models, layers\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.callbacks import ModelCheckpoint, EarlyStopping, ReduceLROnPlateau\nfrom tensorflow.keras.applications import EfficientNetB3\nfrom tensorflow.keras.optimizers import Adam\n\n# ignoring warnings\nimport warnings\nwarnings.simplefilter(\"ignore\")\n\nimport os, cv2, json\nfrom PIL import Image","89517be0":"import os \n\n\nWORK_DIR = '..\/input\/cassava-leaf-disease-classification'\nos.listdir(WORK_DIR)","d8514ae7":"print('Train images: %d' %len(os.listdir(\n    os.path.join(WORK_DIR, \"train_images\"))))","8de5e613":"with open(os.path.join(WORK_DIR, \"label_num_to_disease_map.json\")) as file:\n    print(json.dumps(json.loads(file.read()), indent=4))","ce9b827e":"train_labels = pd.read_csv(os.path.join(WORK_DIR, \"train.csv\"))\ntrain_labels.head()","e5952b3c":"# target size and number of epochs can be tuned to your needs for obtaining better accuracy\n\n\n\nBATCH_SIZE = 8\nSTEPS_PER_EPOCH = len(train_labels)*0.8 \/ BATCH_SIZE\nVALIDATION_STEPS = len(train_labels)*0.2 \/ BATCH_SIZE\nEPOCHS = 20\nTARGET_SIZE = 350","1dc2b226":"\n\n\n\n\ntrain_labels.label = train_labels.label.astype('str')\n\ntrain_datagen = ImageDataGenerator(validation_split = 0.2,\n                                     preprocessing_function = None,\n                                     rotation_range = 45,\n                                     zoom_range = 0.2,\n                                     horizontal_flip = True,\n                                     vertical_flip = True,\n                                     fill_mode = 'nearest',\n                                     shear_range = 0.1,\n                                     height_shift_range = 0.1,\n                                     width_shift_range = 0.1)\n\n\ntrain_generator = train_datagen.flow_from_dataframe(train_labels,\n                         directory = os.path.join(WORK_DIR, \"train_images\"),\n                         subset = \"training\",\n                         x_col = \"image_id\",\n                         y_col = \"label\",\n                         target_size = (TARGET_SIZE, TARGET_SIZE),\n                         batch_size = BATCH_SIZE,\n                         class_mode = \"sparse\")\n\n\nvalidation_datagen = ImageDataGenerator(validation_split = 0.2)\n\nvalidation_generator = validation_datagen.flow_from_dataframe(train_labels,\n                         directory = os.path.join(WORK_DIR, \"train_images\"),\n                         subset = \"validation\",\n                         x_col = \"image_id\",\n                         y_col = \"label\",\n                         target_size = (TARGET_SIZE, TARGET_SIZE),\n                         batch_size = BATCH_SIZE,\n                         class_mode = \"sparse\")","d5c5398f":"def create_model():\n    conv_base = EfficientNetB3(include_top = False, weights = None,\n                               input_shape = (TARGET_SIZE, TARGET_SIZE, 3))\n    model = conv_base.output\n    model = layers.GlobalAveragePooling2D()(model)\n    model = layers.Dense(5, activation = \"softmax\")(model)\n    model = models.Model(conv_base.input, model)\n\n    model.compile(optimizer = Adam(lr = 0.001),\n                  loss = \"sparse_categorical_crossentropy\",\n                  metrics = [\"acc\"])\n    return model","e85adf49":"model = create_model()\nmodel.summary()","7029d4c0":"print('Our EfficientNet CNN has %d layers' %len(model.layers))","248fd66c":"model.load_weights('..\/input\/cassava-leaf-disease-models\/basic_EfNetB0_imagenet_512.h5')","82452d8f":"model_save = ModelCheckpoint('.\/EffNetB0_512_8_best_weights.h5', \n                             save_best_only = True, \n                             save_weights_only = True,\n                             monitor = 'val_loss', \n                             mode = 'min', verbose = 1)\nearly_stop = EarlyStopping(monitor = 'val_loss', min_delta = 0.001, \n                           patience = 5, mode = 'min', verbose = 1,\n                           restore_best_weights = True)\nreduce_lr = ReduceLROnPlateau(monitor = 'val_loss', factor = 0.3, \n                              patience = 2, min_delta = 0.001, \n                              mode = 'min', verbose = 1)\n\n\nhistory = model.fit(\n    train_generator,\n    steps_per_epoch = STEPS_PER_EPOCH,\n    epochs = EPOCHS,\n    validation_data = validation_generator,\n    validation_steps = VALIDATION_STEPS,\n    callbacks = [model_save, early_stop, reduce_lr]\n)","af2bc299":"model.save('.\/EffNetB0_512_8.h5')","69a03e56":"submission = pd.read_csv(os.path.join(WORK_DIR, \"sample_submission.csv\"))\nsubmission","4e9111bc":"preds = []\n\nfor image_id in submission.image_id:\n    image = Image.open(os.path.join(WORK_DIR,  \"test_images\", image_id))\n    image = image.resize((TARGET_SIZE, TARGET_SIZE))\n    image = np.expand_dims(image, axis = 0)\n    preds.append(np.argmax(model.predict(image)))\n\nsubmission['label'] = preds\nsubmission","b63c438a":"submission.to_csv('submission.csv', index = False)","fe6cb942":"SUMMARY","94487244":"If you like the notebook give me a upvote ","70cc6557":"IMAGEDATAGENERATOR","ae97bb27":"# **STAGES OF BUILDING A MODEL**","7d05986a":"1. ** PROVIDING PATH FOR THE DIRECTORY**","b1af1dc6":"SELECT YOUR MODEL ACCORDINGLY\n\n\n\nimportant thing to remmember : chose a model with lesser parameters and higher accuracy\n#here i have taken effeciantnetB0","5ab094d7":"SAVE THE MODEL","3f731e89":"TRAINING","ce0360b3":"# PREDICTION\n","e1043779":"# **BASIC LOOK INTO THE DATA**","f50bfffa":"# **IMPORT RELEVANT LIBRARIES**","a7c205a4":"PARAMETERS","5ef475e5":"![](https:\/\/designshop-6aa0.kxcdn.com\/photos\/have-a-happy-day-greeting-card-balloon-quote-postcard-2411_21.jpg)","a852b2fc":"![](https:\/\/www.bing.com\/images\/search?view=detailV2&ccid=LnFdsek3&id=304C6B3F770790F5BC0604B8AB370F975A7AE3B8&thid=OIP.LnFdsek3pT7Ed_vrgBv2kQHaE6&mediaurl=http%3a%2f%2fgondwanaecotours.com%2fwp-content%2fuploads%2f2016%2f01%2fcassava-1280x850.jpg&exph=850&expw=1280&q=cassava+leaf&simid=608055820647793674&ck=C7F803AB5B29A6DFAD14B6F61A022DB5&selectedIndex=2&FORM=IRPRST&ajaxhist=0)","f5f07e5a":"Cassava originated in South America and was introduced to Africa in relatively recent times. It is known to be a very drought-tolerant crop with the ability to yield even when planted in poor soils. When cassava was first grown in Africa, it was used for subsidiary purposes though it is now considered to be one of the most important food staple crops on the continent. Its production is moving toward an industrialized system in which plant material is used for a variety of products including starch, flour, and animal feed.","d32ba471":"MODEL","d617222c":"![](https:\/\/howtocure.com\/wp-content\/uploads\/2019\/10\/Cassava-Leaves.jpg)","0c00656b":"![](https:\/\/miro.medium.com\/max\/828\/0*09AED_CjE-PUFxKC.png)","d62e8811":"As the second-largest provider of carbohydrates in Africa, cassava is a key food security crop grown by smallholder farmers because it can withstand harsh conditions. At least 80% of household farms in Sub-Saharan Africa grow this starchy root, but viral diseases are major sources of poor yields. With the help of data science, it may be possible to identify common diseases so they can be treated.\n\nExisting methods of disease detection require farmers to solicit the help of government-funded agricultural experts to visually inspect and diagnose the plants. This suffers from being labor-intensive, low-supply and costly. As an added challenge, effective solutions for farmers must perform well under significant constraints, since African farmers may only have access to mobile-quality cameras with low-bandwidth."}}