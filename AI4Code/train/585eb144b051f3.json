{"cell_type":{"22d2540e":"code","f725ce3e":"code","a5c85d2e":"code","528bc458":"code","2444fe2a":"code","8553d1ef":"code","17674899":"code","0fe8bc05":"code","45d46d2e":"code","7caa71ec":"code","e8ce9d9b":"code","92dc6c7e":"code","c74df886":"markdown","84a24284":"markdown","53cefffc":"markdown","05b51404":"markdown","67550dc8":"markdown","35986cce":"markdown","f8a2cf01":"markdown","288a52d1":"markdown","2de0e0db":"markdown","a8cfabd9":"markdown","bc097599":"markdown"},"source":{"22d2540e":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns","f725ce3e":"data = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')\ndata['CurrentCases'] = data['Confirmed']-data['Deaths']-data['Recovered']\ndata.head()","a5c85d2e":"# Get a few contries to compare\ndata_fr = data[data['Country\/Region']=='France'].groupby(['Country\/Region','ObservationDate'], as_index=False).sum()\ndata_br = data[data['Country\/Region']=='Brazil'].groupby(['Country\/Region','ObservationDate'], as_index=False).sum()\ndata_it = data[data['Country\/Region']=='Italy'].groupby(['Country\/Region','ObservationDate'], as_index=False).sum()\ndata_ca = data[data['Country\/Region']=='Canada'].groupby(['Country\/Region','ObservationDate'], as_index=False).sum()\ndata_jp = data[data['Country\/Region']=='Japan'].groupby(['Country\/Region','ObservationDate'], as_index=False).sum()\ndata_us = data[data['Country\/Region']=='US'].groupby(['Country\/Region','ObservationDate'], as_index=False).sum()\ndata_gr = data[data['Country\/Region']=='Germany'].groupby(['Country\/Region','ObservationDate'], as_index=False).sum()\ndata_uk = data[data['Country\/Region']=='UK'].groupby(['Country\/Region','ObservationDate'], as_index=False).sum()\ndata_kr = data[data['Country\/Region']=='South Korea'].groupby(['Country\/Region','ObservationDate'], as_index=False).sum()\ndata_sp = data[data['Country\/Region']=='Spain'].groupby(['Country\/Region','ObservationDate'], as_index=False).sum()","528bc458":"# Adjusting the date of the first case to be the same for all countries\ndata_fr = data_fr[data_fr.Confirmed != 0]\ndata_br = data_br[data_br.Confirmed != 0]\ndata_it = data_it[data_it.Confirmed != 0]\ndata_ca = data_ca[data_ca.Confirmed != 0]\ndata_jp = data_jp[data_jp.Confirmed != 0]\ndata_us = data_us[data_us.Confirmed != 0]\ndata_gr = data_gr[data_gr.Confirmed != 0]\ndata_uk = data_uk[data_uk.Confirmed != 0]\ndata_kr = data_kr[data_kr.Confirmed != 0]\ndata_sp = data_sp[data_sp.Confirmed != 0]","2444fe2a":"# Number of tests from https:\/\/en.wikipedia.org\/wiki\/COVID-19_testing as of 25-Mar-2020 (note: some of this numbers are out-of-date.)\ntests_fr = 36747 #As of 15-Mar. Too out-of-date. I'll remove France from the analysis\ntests_br = 45708\ntests_it = 324445\ntests_ca = 142154\ntests_jp = 24430\ntests_us = 472820\ntests_gr = 167000\ntests_uk = 90436\ntests_kr = 364942\ntests_sp = 355000\n\n#Population \/ 1000\npop_br = 209300\npop_it = 60480\npop_ca = 37590\npop_jp = 126800\npop_us = 327200\npop_gr = 82790\npop_uk = 66440\npop_kr = 51470\npop_sp = 46660","8553d1ef":"# Correction factor. I've used the simplest one: Number of tests per day of disease. \n# We can add population, age, number of hospital beds, etc.\ncorrection_fr = tests_fr\/data_fr.size\ncorrection_br = tests_br\/data_br.size\ncorrection_it = tests_it\/data_it.size\ncorrection_ca = tests_ca\/data_ca.size\ncorrection_jp = tests_jp\/data_jp.size\ncorrection_us = tests_us\/data_us.size\ncorrection_gr = tests_gr\/data_gr.size\ncorrection_uk = tests_uk\/data_uk.size\ncorrection_kr = tests_kr\/data_kr.size\ncorrection_sp = tests_sp\/data_sp.size\n\nnormalizing_factor = max(correction_br,correction_it,correction_ca,correction_jp,correction_us,correction_gr,correction_uk,correction_kr)","17674899":"plt.figure(num=None, figsize=(18, 15), dpi=80, facecolor='w', edgecolor='k')\nplt.subplot(2, 1, 1)\n\n#plt.plot(data_fr.index,(data_fr['CurrentCases']), label='Cases France')\nplt.plot(data_br.index,(data_br['CurrentCases']), label='Cases Brazil')\nplt.plot(data_it.index,(data_it['CurrentCases']), label='Cases Italy')\nplt.plot(data_ca.index,(data_ca['CurrentCases']), label='Cases Canada')\nplt.plot(data_jp.index,(data_jp['CurrentCases']), label='Cases Japan')\nplt.plot(data_us.index,(data_us['CurrentCases']), label='Cases US')\nplt.plot(data_gr.index,(data_gr['CurrentCases']), label='Cases Germany')\nplt.plot(data_uk.index,(data_uk['CurrentCases']), label='Cases UK')\nplt.plot(data_kr.index,(data_kr['CurrentCases']), label='Cases Korea')\nplt.plot(data_sp.index,(data_sp['CurrentCases']), label='Cases Spain')\nplt.grid()\nplt.legend(loc='upper left')\nplt.title('Without Correction')\nplt.xlabel('Days')\nplt.ylabel('Cases')\nplt.show()\n\nplt.figure(num=None, figsize=(18, 15), dpi=80, facecolor='w', edgecolor='k')\nplt.subplot(3, 1, 2)\n#plt.plot(data_fr.index,(data_fr['CurrentCases']\/correction_fr*normalizing_factor), label='Cases France')\nplt.plot(data_br.index,(data_br['CurrentCases']\/correction_br*normalizing_factor), label='Cases Brazil')\nplt.plot(data_it.index,(data_it['CurrentCases']\/correction_it*normalizing_factor), label='Cases Italy')\nplt.plot(data_ca.index,(data_ca['CurrentCases']\/correction_ca*normalizing_factor), label='Cases Canada')\nplt.plot(data_jp.index,(data_jp['CurrentCases']\/correction_jp*normalizing_factor), label='Cases Japan')\nplt.plot(data_us.index,(data_us['CurrentCases']\/correction_us*normalizing_factor), label='Cases US')\nplt.plot(data_gr.index,(data_gr['CurrentCases']\/correction_gr*normalizing_factor), label='Cases Germany')\nplt.plot(data_uk.index,(data_uk['CurrentCases']\/correction_uk*normalizing_factor), label='Cases UK')\nplt.plot(data_kr.index,(data_kr['CurrentCases']\/correction_kr*normalizing_factor), label='Cases Korea')\nplt.plot(data_sp.index,(data_sp['CurrentCases']\/correction_sp*normalizing_factor), label='Cases Spain')\nplt.xticks(rotation='vertical')\nplt.grid()\nplt.legend(loc='upper left')\nplt.title('Reconstructed Cases using Germany as Reference with Correction ')\nplt.xlabel('Days')\nplt.ylabel('Estimated Cases')\nplt.show()","0fe8bc05":"plt.figure(num=None, figsize=(14, 10), dpi=80, facecolor='w', edgecolor='k')\nplt.subplot(2, 1, 1)\n#plt.plot(data_fr.index,np.log(data_fr['CurrentCases']), label='Cases France')\nplt.plot(data_br.index,np.log(data_br['CurrentCases']), label='Cases Brazil')\nplt.plot(data_it.index,np.log(data_it['CurrentCases']), label='Cases Italy')\nplt.plot(data_ca.index,np.log(data_ca['CurrentCases']), label='Cases Canada')\nplt.plot(data_jp.index,np.log(data_jp['CurrentCases']), label='Cases Japan')\nplt.plot(data_us.index,np.log(data_us['CurrentCases']), label='Cases US')\nplt.plot(data_gr.index,np.log(data_gr['CurrentCases']), label='Cases Germany')\nplt.plot(data_uk.index,np.log(data_uk['CurrentCases']), label='Cases UK')\nplt.plot(data_kr.index,np.log(data_kr['CurrentCases']), label='Cases Korea')\nplt.plot(data_sp.index,np.log(data_sp['CurrentCases']), label='Cases Spain')\nplt.xticks(rotation='vertical')\nplt.title('Without Correction')\nplt.xlabel('Days')\nplt.ylabel('log(Cases)')\nplt.grid()\nplt.legend()\nplt.show()\n\nplt.figure(num=None, figsize=(14, 10), dpi=80, facecolor='w', edgecolor='k')\nplt.subplot(2, 1, 2)\n#plt.plot(data_fr.index,np.log(data_fr['CurrentCases']\/normalizing_factor), label='Cases France')\nplt.plot(data_br.index,np.log(data_br['CurrentCases']\/normalizing_factor), label='Cases Brazil')\nplt.plot(data_it.index,np.log(data_it['CurrentCases']\/normalizing_factor), label='Cases Italy')\nplt.plot(data_ca.index,np.log(data_ca['CurrentCases']\/normalizing_factor), label='Cases Canada')\nplt.plot(data_jp.index,np.log(data_jp['CurrentCases']\/normalizing_factor), label='Cases Japan')\nplt.plot(data_us.index,np.log(data_us['CurrentCases']\/normalizing_factor), label='Cases US')\nplt.plot(data_gr.index,np.log(data_gr['CurrentCases']\/normalizing_factor), label='Cases Germany')\nplt.plot(data_uk.index,np.log(data_uk['CurrentCases']\/normalizing_factor), label='Cases UK')\nplt.plot(data_kr.index,np.log(data_kr['CurrentCases']\/normalizing_factor), label='Cases Korea')\nplt.plot(data_sp.index,np.log(data_sp['CurrentCases']\/normalizing_factor), label='Cases Spain')\nplt.xticks(rotation='vertical')\nplt.title('With Correction')\nplt.xlabel('Days')\nplt.ylabel('Normalized log(Cases)')\nplt.grid()\nplt.legend()\nplt.show()","45d46d2e":"df_normalized = pd.DataFrame()\ndf_normalized['Countries'] = ['Brazil','Italy','Canada','Japan','US','Germany','UK','Korea','Spain']\ndf_normalized['Deaths'] = [data_br['Deaths'].iloc[-1],data_it['Deaths'].iloc[-1],data_ca['Deaths'].iloc[-1],data_jp['Deaths'].iloc[-1],\n                           data_us['Deaths'].iloc[-1],data_gr['Deaths'].iloc[-1],data_uk['Deaths'].iloc[-1],data_kr['Deaths'].iloc[-1],\n                           data_sp['Deaths'].iloc[-1]]\n\ndf_normalized['Official Cases'] = [data_br['Confirmed'].iloc[-1],data_it['Confirmed'].iloc[-1],data_ca['Confirmed'].iloc[-1],\n                                   data_jp['Confirmed'].iloc[-1],data_us['Confirmed'].iloc[-1],data_gr['Confirmed'].iloc[-1],\n                                   data_uk['Confirmed'].iloc[-1],data_kr['Confirmed'].iloc[-1],data_sp['Confirmed'].iloc[-1]]\n\ndf_normalized['Number of Tests'] = [tests_br,tests_it,tests_ca,tests_jp,tests_us,tests_gr,tests_uk,tests_kr,tests_sp]\n\ndf_normalized['Tests \/ 1000 Population'] = [tests_br\/pop_br,tests_it\/pop_it,tests_ca\/pop_ca,tests_jp\/pop_jp,tests_us\/pop_us,tests_gr\/pop_gr,tests_uk\/pop_uk,tests_kr\/pop_kr,tests_sp\/pop_sp]\n\ndf_normalized['Normalized Cases'] = [data_br['Confirmed'].iloc[-1]\/correction_br*normalizing_factor,data_it['Confirmed'].iloc[-1]\/correction_it*normalizing_factor,data_ca['Confirmed'].iloc[-1]\/correction_ca*normalizing_factor,\n                                     data_jp['Confirmed'].iloc[-1]\/correction_jp*normalizing_factor,data_us['Confirmed'].iloc[-1]\/correction_it*normalizing_factor,data_gr['Confirmed'].iloc[-1]\/correction_gr*normalizing_factor,\n                                     data_uk['Confirmed'].iloc[-1]\/correction_uk*normalizing_factor,data_kr['Confirmed'].iloc[-1]\/correction_kr*normalizing_factor,data_sp['Confirmed'].iloc[-1]\/correction_sp*normalizing_factor]\n\ndf_normalized['Death \/ Official Cases'] = df_normalized['Deaths']\/df_normalized['Official Cases']*100\n\ndf_normalized['Death \/ Normalized Cases'] = df_normalized['Deaths']\/df_normalized['Normalized Cases']*100\ndf_normalized","7caa71ec":"plt.figure(num=None, figsize=(14, 10), dpi=80, facecolor='w', edgecolor='k')\nplt.plot(df_normalized['Countries'],df_normalized['Death \/ Official Cases'], label='Official Cases')\nplt.plot(df_normalized['Countries'],df_normalized['Death \/ Normalized Cases'], label='Normalized Cases')\nplt.xticks(rotation='vertical')\nplt.title('Covid-19 - Fatality rate')\nplt.xlabel('Countries')\nplt.ylabel('Fatality rate %')\nplt.grid()\nplt.legend()\nplt.show()","e8ce9d9b":"import scipy\ndays = np.array(range(36))\nplt.figure(num=None, figsize=(10, 8), dpi=80, facecolor='w', edgecolor='k')\nplt.plot(data_it.index,(data_it['CurrentCases']\/correction_it), label='Normalized Cases Italy', color='black', linestyle='-')\nplt.plot(data_br.index,(data_br['CurrentCases']\/correction_br), label='Normalized Cases Brazil', color = 'black', linestyle='--')\n(a,b,c),_ = scipy.optimize.curve_fit(lambda t,a,b,c: c*a**(b*t)-c,  data_br.index,  data_br['CurrentCases']\/correction_br,  p0=(4, 0.1, 0.1))\n#(a,b),_ = scipy.optimize.curve_fit(lambda t,a,b: a**(b*t)-1,  data_br.index,  data_br['CurrentCases'],  p0=(4, 0.1))\n#plt.plot(days,a**(b*days)-1, label='Brazil Projection', color = 'black', linestyle='-.')\nplt.plot(days,c*a**(b*days)-c, label='Brazil Projection', color = 'black', linestyle='-.')\nplt.xticks(rotation='vertical')\nplt.grid()\nplt.title('Projection of cases')\nplt.ylabel('Cases')\nplt.xlabel('Days')\nplt.legend()\nplt.show()","92dc6c7e":"import scipy\ndays = np.array(range(40))\nplt.figure(num=None, figsize=(10, 8), dpi=80, facecolor='w', edgecolor='k')\nplt.plot(data_it.index,(data_it['CurrentCases']), label='Normalized Cases Italy', color='black', linestyle='-')\nplt.plot(data_br.index,(data_br['CurrentCases']), label='Normalized Cases Brazil', color = 'black', linestyle='--')\n(a,b),_ = scipy.optimize.curve_fit(lambda t,a,b: a**(b*t)-1,  data_br.index,  data_br['CurrentCases'],  p0=(4, 0.1))\nplt.plot(days,a**(b*days)-1, label='Brazil Projection', color = 'black', linestyle='-.')\nplt.xticks(rotation='vertical')\nplt.grid()\nplt.title('Projection of cases')\nplt.ylabel('Cases')\nplt.xlabel('Days')\nplt.legend()\nplt.show()","c74df886":"## Using normalized results to foresee what will happen to other countries\nWe can also use it to try to foresee when a country will have the approximate number of cases as another one.\n\nAs an example, let's take a look at Brazil's data and compare it to Italy's.\n\nFitting an exponential curve to Brazil's normalized data will result in getting to the same (real) number of cases Italy has today in 8 days which is the day at which the fitted curve has the same number of cases as Italy has today minus the number of days since the first case in Brazil.","84a24284":"## Reading Dataset","53cefffc":"# Comparison between countries with and without the correction factor\n\nNote that, with the correction, some countries change places when we compare the plots with and without correction. \n\nAlso, some places have a more pronounced behavior with the correction, which indicates that the cases are growing faster than we might think. \n\nThis means that some conclusions we draw from the comparison without correction may not be accurate.\n\nI have used two different scales for the sake of visualization.","05b51404":"## Discrepancy in the number of Deaths","67550dc8":"# The effect of the number of tests in comparison between countries \n\n## The number of tests is extremely important\nEveryone is comparing the number of cases between different countries. \n\nThe problem is that different countries have very different numbers of tests performed. If you don't test anyone you have 0 cases, right? \n\n\nWith that in mind, this notebook is intended to show how the number of tests can be taken into consideration when comparing the number of Covid-19 cases between different countries and how to draw some conclusions about the results.","35986cce":"## Comparison between countries with and without the correction factor - log scale","f8a2cf01":"That also explains why the number of deaths are discrepant in some cases.\n\nIf we consider the normalization usign the number of tests, (apart from Italy and Spain that seem to have reached a critical point with so many cases that they can't handle it anymore) the fatality is more uniform.\n\nThat's also why the WHO recommendation is: Test, test and test. **The test numbers are extremely important and are being disregarded in most analysis.**","288a52d1":"## Conclusion\nThe number of tests cannot be disregarded in comparative analysis of number of cases between different countries as it may lead to wrong conclusions.","2de0e0db":"\n\nThe same analysis without normalization would result in a different result. It would take 12 days for the (real) number of cases to be the same.","a8cfabd9":"## Correction Factor\nThe idea is to use the number of tests to normalize the data. Since different Countries started facing the virus in different moments, I also used the number of days since the first case. \nThe correction factor is simply the number of tests divided by the number of days since first case.\nThe next step is to divide the number of official cases by the correction factor.\nI also multiply the results by the maximum correction factor so we can have a sense of how many cases we should have if every country tested at the same rate.","bc097599":"## Number of Tests\nIt's getting harder to find test numbers. Numbers below are approximate."}}