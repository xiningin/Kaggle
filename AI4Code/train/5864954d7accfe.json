{"cell_type":{"7a42b149":"code","aa9abd41":"code","ab9f6033":"code","7c0fc50f":"code","818d0341":"code","4815a645":"markdown","f6472588":"markdown","5d8807ed":"markdown"},"source":{"7a42b149":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","aa9abd41":"df = pd.read_csv('..\/input\/crimes-in-boston\/crime.csv', encoding='latin-1')","ab9f6033":"offence_groups = set(df['OFFENSE_CODE_GROUP'].tolist())\noffence_groups = list(offence_groups)\nprint(offence_groups)","7c0fc50f":"Latitudes = {}\nLongitudes = {}\n\nfor offence in offence_groups:\n    localLatitude = []\n    localLongitude = []\n    for location in df[df['OFFENSE_CODE_GROUP'] == offence]['Location']:\n        Coordinates = location[1:-1].split(', ')\n        latitude, longitude = float(Coordinates[0]),float(Coordinates[1])\n\n        if latitude > 20:\n            localLatitude.append(latitude)\n        if longitude < -40:    \n            localLongitude.append(longitude)\n    \n    Latitudes[offence] = localLatitude\n    Longitudes[offence] = localLongitude","818d0341":"%matplotlib notebook\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation\n\nfig, ax = plt.subplots(figsize=(8,6))\n\nscat = ax.scatter(Longitudes[offence_groups[0]], Latitudes[offence_groups[0]], s=1, color='r')\n \ndef animate(i):\n    x_i = Longitudes[offence_groups[i]]\n    y_i = Latitudes[offence_groups[i]]\n    scat.set_offsets(np.c_[x_i, y_i])\n    \nanim = FuncAnimation(\n    fig, animate, interval=500, frames=len(offence_groups)-1)\nplt.show()\n\nanim.save('filename.gif', writer='imagemagick')","4815a645":"**Create Scatter Plot animation**","f6472588":"**Get Offense Groups in the right format**","5d8807ed":"**Read CSV contents**"}}