{"cell_type":{"c63bdd70":"code","2b04e9b0":"code","026bb03d":"code","86d720c6":"code","b31d5643":"code","02e9da84":"code","f40fd789":"code","c9e1e32d":"code","83680025":"code","f983569e":"code","0c784eca":"code","998644bb":"code","47121bb7":"code","cfcc08a1":"code","3ffe3f7d":"code","19f25af9":"code","ae3394b8":"code","150d1fc2":"code","8314131d":"code","f287efc8":"code","90355052":"code","023e64d2":"code","f46cc2e6":"code","132b4ea1":"code","fc0df1b7":"code","bb98f36b":"code","91e76cb5":"code","8f9071e4":"code","b9172d5b":"code","53a38685":"code","56bfc9bc":"code","bfea0a85":"code","f411f2e1":"code","c39b2feb":"code","cb3683b0":"code","40a3050e":"code","dc93f9fc":"code","08a93e0a":"code","499ba02d":"code","f7b54aa6":"code","e2ed1cda":"code","d70dab3e":"code","8fe50b7e":"code","98dd40db":"code","0435c26f":"markdown","4bf52df1":"markdown","295b4c7e":"markdown","aa0d3401":"markdown","3540ff6f":"markdown","a02f0911":"markdown","0aa45313":"markdown","5a09b64d":"markdown","4c9a041a":"markdown","f0c23070":"markdown","e5375457":"markdown","30ceda10":"markdown","e9e69e7f":"markdown"},"source":{"c63bdd70":"import numpy as np\nimport pandas as pd\nimport seaborn as sns \nimport matplotlib.pyplot as plt \nimport plotly.express as px\nimport plotly\nimport plotly.graph_objects as go\nplotly.offline.init_notebook_mode()","2b04e9b0":"df1 = pd.read_csv('..\/input\/car-dataset\/car-mpg.csv')\ndf1.head()#printing the first 5 rows to view the data","026bb03d":"#printing the shape of the data\nprint('Shape of dataframe:',df1.shape)\nprint('Number of rows: ',df1.shape[0])\nprint('Number of Columns: ',df1.shape[1])","86d720c6":"#printing information of columns type and how many rows are there and the memory size utilized\ndf1.info()","b31d5643":"#As we noted ['Hp'] attribute values are missing","02e9da84":"df1.replace(to_replace='?',value=np.NAN, inplace=True)","f40fd789":"df1[df1.hp.isna()==True]","c9e1e32d":"df1.dropna(inplace=True)","83680025":"df1[df1.hp.isna()==True]","f983569e":"# we see the different attributes of car data set","0c784eca":"df1.columns","998644bb":"# replacing column names","47121bb7":"new_names =  {'mpg': 'Mile_per_gallon',\n               'cyl': 'Cylinder',\n               'disp': 'Display',\n                'hp': 'Horse_Power',\n               'wt': 'Weight',\n               'acc': 'Acceleration',\n               'yr': 'Year',\n               'origin': 'Car_origin',\n               'car_name': 'Car_Name'}","cfcc08a1":"df1.rename(columns=new_names, inplace=True)\ndf1.head()","3ffe3f7d":"df1.isna().sum()","19f25af9":"df1[\"Car_Name\"].is_unique","ae3394b8":"#describe the summary statistics of the data\n\ndf1.describe()","150d1fc2":"#no of cars based on the car origin\ndfcar_origin = df1.Car_origin.value_counts()\ndfcar_origin","8314131d":"#no of cars based on year \ndfcar_yr_count = df1.Year.value_counts()\ndfcar_yr_count","f287efc8":"unique_Horse_power = df1.Horse_Power.unique()\nprint('No .of Horse_Power ',unique_Horse_power.size)\nunique_Acceleration = df1.Acceleration.unique()\nprint('No .of Acceleration ',unique_Acceleration.size)\nunique_Weight = df1.Weight.unique()\nprint('No .of Weight ',unique_Weight.size)\nunique_Display = df1.Display.unique()\nprint('No .of Display ',unique_Display.size)\nunique_Cylinder = df1.Cylinder.unique()\nprint('No .of Cylinder ',unique_Cylinder.size)\nunique_Car_Name = df1.Car_Name.unique()\nprint('No .of Car_Name ',unique_Car_Name.size)\nunique_Car_origin = df1.Car_origin.unique()\nprint('No .of Car_origin ',unique_Car_origin.size)\nunique_Year = df1.Year.unique()\nprint('No .of Year ',unique_Year.size)\nunique_Mile_per_gallon = df1.Mile_per_gallon.unique()\nprint('No .of Mile_per_gallon ',unique_Mile_per_gallon.size)","90355052":"#looking at the above no of unique values for each column the best \n#grouping column can be done on year, car origin and cylinder","023e64d2":"#grouping on year and car_origin\ndfgyear = df1.groupby(by=['Year'])\ndfgyear.count() ","f46cc2e6":"#grouping on year and car_origin\ndfgcylinder = df1.groupby(by=['Cylinder'])\ndfgcylinder.count() ","132b4ea1":"dfgCar_origin = df1.groupby(by=['Car_origin'])\ndfgCar_origin.count() ","fc0df1b7":"#grouping on horse_power\ndfg = df1.groupby(by='Horse_Power')\ndfg.count()","bb98f36b":"#grouping on horse power results more no of groouped data where as Horse power is not a categorical data\ndfghmax = df1.groupby(by='Horse_Power').max()\ndfghmax","91e76cb5":"dfghmin = df1.groupby(by='Horse_Power').min()\ndfghmin","8f9071e4":"dfghmean = df1.groupby(by='Horse_Power').mean()\ndfghmean","b9172d5b":"#grouping on Mile_per_gallon results more no of grouped data where as Mile_per_gallon is not a categorical data\ndfgmmax = df1.groupby(by='Mile_per_gallon').max()\ndfgmmax","53a38685":"#Ploting the Count of Cars based on origin","56bfc9bc":"\nfig = go.Figure(go.Pie(\n    name = '',\n    values = dfcar_origin,\n    labels = dfcar_origin.index, \n    text =  dfcar_origin.index,texttemplate = \"%{label}:<br> Count:%{value:s} <br>(%{percent})\",\n    hovertemplate =  \"Car Origin:%{label} <br>Count: %{value:s} <\/br> Percent:%{percent}\" ,\n    title = 'Count of Cars based on car origin'\n))\nfig.update_layout(\n    autosize=False,\n    width=500,\n    height=500\n)\n\nfig.show() ","bfea0a85":"#Ploting the Count of Cars based on Years","f411f2e1":"dfcar_yr_count.index.name='Year'\nfig = go.Figure(go.Pie(\n    name = '',\n    values = dfcar_yr_count,\n    labels = dfcar_yr_count.index, \n    text =  dfcar_yr_count.index,texttemplate = \"%{label}:<br> Count:%{value:s} <br>(%{percent})\",\n    hovertemplate =  \"Year:%{label} <br>Count: %{value:s} <\/br> Percent:%{percent}\" ,\n    title = 'Count Of Cars Year Wise'\n))\nfig.update_layout(\n    autosize=False,\n    width=600,\n    height=600\n)\n\nfig.show() ","c39b2feb":"#Plotting the box plot for Horse power to see   min max and outliers \nfig = px.box(data_frame= df1, y=\"Horse_Power\",title='Box Plot for Horse Power')\nfig.show()","cb3683b0":"#Plotting the box plot for Miles pergallon to see   min max and outliers \nfig = px.box(data_frame= df1, y=\"Mile_per_gallon\",title='Box Plot for Mile Per Gallon')\nfig.show()\n","40a3050e":"fig = px.scatter(data_frame= df1, y= \"Horse_Power\", x=\"Cylinder\",title='Plot b\/w Horse Power and Cylinder')\nfig.show()","dc93f9fc":"df_car_8 = df1[(df1['Horse_Power']=='230')& (df1['Cylinder']==8) ]\ndf_car_6 = df1[(df1['Horse_Power']=='165') & (df1['Cylinder']==6)]\ndf_car_5 = df1[(df1['Horse_Power']=='103') & (df1['Cylinder']==5)]\ndf_car_4 = df1[(df1['Horse_Power']=='115') & (df1['Cylinder']==4)]\ndf_car_3 = df1[(df1['Horse_Power']=='110') & (df1['Cylinder']==3)]\ndf_sprt_car_cyl = pd.concat([df_car_8,df_car_6,df_car_5,df_car_4,df_car_3])\ndf_sprt_car_cyl","08a93e0a":"fig = px.bar(df_sprt_car_cyl, x='Cylinder', y='Horse_Power',\n             labels ={'Car_Name' : 'Car Name', 'Car_origin': 'Origin Of Car','Horse_Power':'Horse Power','Mile_per_gallon':'Mile Per Gallon'},\n             text = 'Horse_Power',hover_data=['Car_Name','Car_origin','Mile_per_gallon','Year'],\n             height=600,orientation='v',\n             title='Top Sports Car in Each Cylinder')\n\nfig.update_traces(texttemplate='%{text:s}', textposition='outside')\nfig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\nfig.show()","499ba02d":"#As per the Probelm statment to figure out the best sports car form \n#the attributes consider with max Mile Per Gallon for each cylinder type","f7b54aa6":"fig = px.scatter(data_frame= df1, y= \"Mile_per_gallon\", x=\"Cylinder\",title='Plot b\/w Mile Per Gallon and Cylinder')\nfig.show()","e2ed1cda":"df_car_8 = df1[(df1['Mile_per_gallon']==26.6)& (df1['Cylinder']==8) ]\ndf_car_6 = df1[(df1['Mile_per_gallon']==38) & (df1['Cylinder']==6)]\ndf_car_5 = df1[(df1['Mile_per_gallon']==36.4) & (df1['Cylinder']==5)]\ndf_car_4 = df1[(df1['Mile_per_gallon']==46.6) & (df1['Cylinder']==4)]\ndf_car_3 = df1[(df1['Mile_per_gallon']==23.7) & (df1['Cylinder']==3)]\ndf_economic_car_cyl = pd.concat([df_car_8,df_car_6,df_car_5,df_car_4,df_car_3])\ndf_economic_car_cyl","d70dab3e":"fig = px.bar(df_economic_car_cyl, x='Cylinder', y='Mile_per_gallon',\n             labels ={'Car_Name' : 'Car Name', 'Car_origin': 'Origin Of Car','Horse_Power':'Horse Power','Mile_per_gallon':'Mile Per Gallon'},\n             text = 'Mile_per_gallon',hover_data=['Car_Name','Car_origin','Horse_Power','Year'],\n             height=600,\n             title='Top Economical Cars In Each Cylinder Category')\n\nfig.update_traces(texttemplate='%{text:s}', textposition='outside')\nfig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\nfig.show()","8fe50b7e":"fig = px.scatter(data_frame= df1, y= \"Mile_per_gallon\", x=\"Car_origin\",title='Best Milage Car in Origin Wise',\n                hover_data ={'Cylinder','Car_Name','Horse_Power','Year'})\nfig.show()","98dd40db":"fig = px.scatter(data_frame= df1, y= \"Horse_Power\", x=\"Car_origin\",title='Best Horse Power providing Car in Origin Wise',\n                hover_data ={'Cylinder','Car_Name','Mile_per_gallon','Year'})\nfig.show()","0435c26f":"SPORTS CAR:\nSports car with the horse power\nkeeping cylnder as the base attribute for comparision \n\nECONOMICAL CAR:\nEcnomical car with the miles per gallon\nkeeping cylnder as the base attribute for comparision ","4bf52df1":"# Data cleaning ","295b4c7e":"# PROBLEM STATEMENT","aa0d3401":"# APPROCH TO THE PROBLEM STATEMENT","3540ff6f":"<h3>Based on the Cylinder and horse power These are the top sports cars within the cylinder wise<\/h3>","a02f0911":"To find the best sports and economical car from the given data sets of car.\n\nWe have data of different cars details between the year 70's and 80's and provided attributes are like : Milage_per_gallon, Cylinder, Display, Horse_Power, Weight, Acceleration, Year, Car_origin and Car_Name","0aa45313":"# Exploring grouping which suites the problem ","5a09b64d":"# DATA EXPLORATION","4c9a041a":"This analysis is a team work by.\n\nHarika Y (me)<br>\nHarsha kushtagi<br>\n<a href=\"https:\/\/www.linkedin.com\/in\/isac-kulakudy-ab4899157\">Isac Kulakudy<\/a><br>\nSmunak Hatti\n","f0c23070":"<h3>Based on the Cylinder and Mile_per_gallon These are the top Econonmical Cars within the cylinder wise<\/h3>","e5375457":"<h3>As per the Probelm statment to figure out the best sports car form \nthe attributes consider with max horse power for each cylinder type<\/h3>","30ceda10":"Loading all the required modules","e9e69e7f":"# VISUALIZATION"}}