{"cell_type":{"64a9806f":"code","69910ac3":"code","eb46f6ec":"code","9d3e7ba4":"code","b53724b9":"code","fb9b3381":"code","18e8c4c2":"code","a0a7cfa6":"code","69066121":"code","7aa24217":"code","99f66b9f":"code","ce7aac5c":"code","42f153f2":"code","0863a964":"code","b257f52f":"code","aee6351d":"code","dd80c449":"code","ee448db0":"code","3cc3244d":"code","a28af780":"code","39df531c":"code","605c9f68":"code","19077e48":"code","d5c2ba8f":"markdown","545167b7":"markdown","79c76ef2":"markdown","b0bcb4db":"markdown","68cb3ab6":"markdown","cee64b98":"markdown","f7487560":"markdown"},"source":{"64a9806f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","69910ac3":"train  = pd.read_csv('\/kaggle\/input\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/test.csv')","eb46f6ec":"print(train.isnull().sum())","9d3e7ba4":"train['Embarked'] = train['Embarked'].fillna(value = 'S')\ntrain['Age'] = train['Age'].fillna(train['Age'].mean())","b53724b9":"print(train.isnull().sum())","fb9b3381":"test.isnull().sum()","18e8c4c2":"test['Age'] = test['Age'].fillna(test['Age'].mean())\ntest['Fare'] = test['Fare'].fillna(test['Fare'].mean())","a0a7cfa6":"test.isnull().sum()","69066121":"train = train[['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked', 'Survived']]\nX_test = test[['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked']]","7aa24217":"X_train = train[['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked']]\ny_train = train['Survived']","99f66b9f":"X_train.head()","ce7aac5c":"X_test.head()","42f153f2":"X_train['Sex'].replace(['female', 'male'], [0,1], inplace = True)\nX_train['Embarked'].replace(['Q', 'S', 'C'], [0, 1, 2], inplace = True)\nX_train.head()","0863a964":"X_test['Sex'].replace(['female', 'male'], [0,1], inplace = True)\nX_test['Embarked'].replace(['Q', 'S', 'C'], [0, 1, 2], inplace = True)\nX_test.head()","b257f52f":"from sklearn.preprocessing import StandardScaler\nsc_x = StandardScaler()\nX_train = sc_x.fit_transform(X_train)\nX_test = sc_x.fit_transform(X_test)","aee6351d":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import Perceptron\nfrom xgboost import XGBClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.model_selection import KFold, cross_val_score","dd80c449":"seed = 0\nmodels = []\nmodels.append(('Decission Tree', DecisionTreeClassifier(random_state = seed)))\nmodels.append(('Random forest', RandomForestClassifier(random_state = seed)))\nmodels.append(('Logistic Regresion', LogisticRegression(random_state = seed)))\nmodels.append(('SVM',SVC(random_state=seed)))\nmodels.append(('KNN',KNeighborsClassifier()))\nmodels.append(('Perceptron',perceptron.Perceptron()))\nmodels.append(('Adaboost',AdaBoostClassifier(random_state=seed)))\nmodels.append(('Naive Bayes',GaussianNB()))\nmodels.append(('XGBoost',XGBClassifier()))","ee448db0":"from sklearn.metrics import confusion_matrix","3cc3244d":"for name, model in models:\n    model.fit(X_train, y_train)\n    y_pred = model.predict(X_test)","a28af780":"svc = SVC()\nsvc.fit(X_train, y_train)\ny_pred = svc.predict(X_test)","39df531c":"y_pred","605c9f68":"output = pd.DataFrame({\n    'PassengerId': test['PassengerId'],\n    'Survived': y_pred\n})\n\noutput.to_csv('submission.csv', index=False)","19077e48":"pd.read_csv('submission.csv')","d5c2ba8f":"## 3. Select vaiables","545167b7":"## 1. Import data","79c76ef2":"## 7. Results Models with confusion matrix and R3 of each model","b0bcb4db":"## 4. Create vaiables Dummy","68cb3ab6":"## 6. Import models","cee64b98":"## 2. Clean NA's","f7487560":"## 5. Scale variables for classifier"}}