{"cell_type":{"4b04b4b9":"code","dbf5bbee":"code","c0776c14":"code","1bc41148":"code","87aaf76e":"code","93d92225":"code","de3698a1":"code","2609bbd2":"code","7175a3e3":"code","9f8495ae":"code","d880dc08":"code","66487fc9":"code","a8d7e2af":"code","453481bf":"markdown","4acf7ac3":"markdown","6bd9283d":"markdown"},"source":{"4b04b4b9":"import gc\nfrom tqdm import tqdm\n#from tqdm._tqdm import trange\nimport numpy as np\nimport pandas as pd\nfrom pylab import rcParams\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import mean_squared_error\nfrom scipy.stats import probplot\n\nimport datetime as dt\nfrom datetime import date\nfrom datetime import timedelta\nfrom fbprophet import Prophet\n\n%matplotlib inline\nimport os\nimport warnings\nwarnings.filterwarnings(\"ignore\")","dbf5bbee":"data0=pd.read_csv('..\/input\/weather-in-kobe\/kobe_weather_2015-2021.csv')\ndata0","c0776c14":"data1=data0[['Date','Temparature']]","1bc41148":"item1=data1\n\nitem1.columns = ['ds','y']\nitem1.y = item1.y.astype('float')\nitem1.ds = item1.ds.astype('datetime64')\n\nrcParams['figure.figsize'] = 20, 5\nplt.plot(item1.ds, item1.y)","87aaf76e":"train_item=item1[0:-60]\nvalidation_item=item1[-60:]","93d92225":"ph = Prophet()\nph.fit(item1)\nforecast = ph.predict(item1[['ds']])\nfigure = ph.plot(forecast)\nfigure.show()","de3698a1":"from datetime import timedelta\nstart0 = dt.datetime.strptime('2021-01-01', '%Y-%m-%d').date()\nend0   = dt.datetime.strptime('2022-12-31', '%Y-%m-%d').date()\nprint((end0-start0).days)","2609bbd2":"def daterange(start,end):\n    for i in range((end-start).days):\n        return start+timedelta(i)  ","7175a3e3":"dates0=[]\nfor i in range((end0-start0).days):\n    dates0+=[(start0+timedelta(i)).strftime('%Y-%m-%d') ]\nprint(dates0)","9f8495ae":"dates0_df=pd.DataFrame(dates0)\ndates0_df.columns=['ds']\ndates0_df","d880dc08":"ph = Prophet()\nph.fit(item1[-365:])\nforecast3=ph.predict(dates0_df)\nfigure = ph.plot(forecast3)\nfigure.show()","66487fc9":"ph = Prophet()\nph.fit(item1[-365*2:])\nforecast3=ph.predict(dates0_df)\nfigure = ph.plot(forecast3)\nfigure.show()","a8d7e2af":"ph = Prophet()\nph.fit(item1[-365*3:])\nforecast3=ph.predict(dates0_df)\nfigure = ph.plot(forecast3)\nfigure.show()","453481bf":"# fit past and predict past","4acf7ac3":"# fit past and predict future","6bd9283d":"# To learn yearly cycles, 3-year data (3 cycles) are needed at least. "}}