{"cell_type":{"f5526db3":"code","a8f5a2f6":"code","9610c499":"code","cc462d43":"code","21a63321":"code","e9d4459a":"code","71c39df6":"code","83b36286":"code","05b59330":"code","2be472f4":"code","e9194e5f":"code","000bb885":"code","4b862273":"code","9d5ffe10":"code","9d7a582d":"code","35783c70":"code","78a52df3":"code","0abbe3e7":"code","fc5ce0a1":"code","911ac89a":"code","50e9c5c5":"code","6c9c2d29":"code","ba277cc7":"code","299768d0":"code","7d29a435":"code","a770e3ea":"code","111b7887":"markdown","cc4d411a":"markdown","c22aaeb5":"markdown","ed8b259a":"markdown","8b2b5e92":"markdown","15c3f546":"markdown","4b182ce5":"markdown","82855528":"markdown","23095469":"markdown","f6d45959":"markdown","7901659c":"markdown","4b9205c8":"markdown","8a291b06":"markdown","7d69ddfa":"markdown","5ea35c45":"markdown","125b8292":"markdown","47dd116e":"markdown"},"source":{"f5526db3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a8f5a2f6":"import Bio\nfrom Bio.Seq import Seq\nfrom Bio import SeqIO\nfrom Bio.SeqUtils.ProtParam import ProteinAnalysis\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport pandas as pd\n","9610c499":"ncov_record = SeqIO.read(\"\/kaggle\/input\/covid19-genome-sequence\/sequence.fasta\", \"fasta\")","cc462d43":"ncov_dna = ncov_record.seq","21a63321":"#Protein Synthesis\nncov_mrna = ncov_dna.transcribe()\nncov_mrna","e9d4459a":"ncov_protein = ncov_mrna.translate()\nncov_protein","71c39df6":"len(ncov_protein)","83b36286":"ncov_aa = ncov_protein.split(\"*\")\nncov_aa[0:10]","05b59330":"ncov_clean = [ str(i) for i in ncov_aa]","2be472f4":"#Identify all the Proteins (chains of amino acids)\nProteins = ncov_protein.split('*')\nProteins[0:10]","e9194e5f":"#Remove chains smaller than 20 amino acids long\nfor i in Proteins[:]:\n    if len(i) < 20:\n        Proteins.remove(i)","000bb885":"df = pd.DataFrame({\"amino_acids\":ncov_clean})","4b862273":"df['count'] = df['amino_acids'].str.len()","9d5ffe10":"df.nlargest(10, \"count\")","9d7a582d":"#protein of interest\nsoi=df['amino_acids'].iloc[705]\nseq_oi=Seq(soi)\nseq_oi","35783c70":"#cleaning\nsoi1=''\nfor i in soi:\n    if(i!='X'):\n        soi1=soi1+i\nprint(len(soi1))","78a52df3":"a=ProteinAnalysis(soi1)\na","0abbe3e7":"MW=a.molecular_weight()\nMW","fc5ce0a1":"aromaticity=a.aromaticity()\naromaticity","911ac89a":"IsoElectric=a.isoelectric_point()\nIsoElectric","50e9c5c5":"def amino_acid_composition(protein_seq):\n    amino_acids_dict = {'Y': 0, 'A': 0, 'Q': 0, 'D': 0, 'C': 0, 'G': 0, 'V': 0, 'T': 0, 'E': 0, 'N': 0, \n                       'K': 0, 'R': 0, 'S': 0, 'I': 0, 'H': 0, 'M': 0, 'F': 0, 'L': 0, 'W': 0, 'P': 0}\n    for amino_acid in amino_acids_dict:\n        amino_acids_dict[amino_acid] = protein_seq.count(amino_acid)\/len(protein_seq)*100\n    return amino_acids_dict","6c9c2d29":"ac = amino_acid_composition(ncov_protein)\namc = pd.DataFrame.from_dict(ac, orient ='index')\namc = amc.reset_index()\namc = amc.rename(columns={\"index\": \"amino_acid\", 0: \"composition\"})","ba277cc7":"r = amc.sort_values(by='composition', ascending=False)\nr.style.bar(subset=[\"composition\"],color='#').background_gradient(cmap='Purples')","299768d0":"ax = sns.barplot(x=\"amino_acid\", y=\"composition\", data=r,\n                 palette=\"Blues_d\")","7d29a435":"#ORF\norf_strands = []\n# generate ORFs\nfor seq in ncov_protein.split(\"STOP\"):\n    for nu in range(len(seq)-1, -1, -1):\n        if seq[nu] == \"M\":\n            orf_strands.append(seq[nu:]+\"STOP\")\n\norf_strands[0:10]","a770e3ea":"len(orf_strands)\n#Conclusion: This is how I got Started with BioPython Packages","111b7887":"# **Amino Acid Composition**","cc4d411a":"**Cleaning the List of Proteins**","c22aaeb5":"**Aromaticity**\n\nIn chemistry, aromaticity is a property of cyclic (ring-shaped), planar (flat) structures with pi bonds in resonance (those containing delocalized electrons) that gives increased stability compared to other geometric or connective arrangements with the same set of atoms. Aromatic rings are very stable and do not break apart easily. Organic compounds that are not aromatic are classified as aliphatic compounds\u2014they might be cyclic, but only aromatic rings have enhanced stability.\n> ![image.png](attachment:image.png)","ed8b259a":"**Remove chains smaller than 20 amino acids long**","8b2b5e92":"**Finding the Amino Acids from the Protein Structure.**","15c3f546":"**Considering the Amino Acid of the highest length for the Analysis**","4b182ce5":"**Total Number of ORF Strands**","82855528":"# Imitating Protein Synthesis\nThe process by which DNA is copied to RNA is called transcription, and that by which RNA is used to produce proteins is called translation. Transcription takes place in the nucleus. It uses DNA as a template to make an RNA molecule. RNA then leaves the nucleus and goes to a ribosome in the cytoplasm, where translation occurs. Translation reads the genetic code in mRNA and makes a protein.\n![image.png](attachment:image.png)","23095469":"**Transcription**","f6d45959":"# **Protein Analysis**","7901659c":"# Finding the ORF\nIn molecular genetics, an open reading frame is the part of a reading frame that has the ability to be translated. An ORF is a continuous stretch of codons that begins with a start codon and ends at a stop codon. An ATG codon within the ORF may indicate where translation starts.\n![image.png](attachment:image.png)","4b9205c8":"**Molecular Weight**","8a291b06":"This notebook is the continuation of the work https:\/\/www.kaggle.com\/sreshta140\/looking-into-a-dna-sequence","7d69ddfa":"**IsoElectric Point**\n\nThe isoelectric point (pI) is the pH value at which the molecule carries no electrical charge. The concept is particularly important for zwitterionic molecules such as amino acids, peptides, and proteins.\n![image.png](attachment:image.png)\n","5ea35c45":"**Number of Proteins**","125b8292":"**Translation**","47dd116e":"Reading the FASTA"}}