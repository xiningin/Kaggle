{"cell_type":{"6698fa5a":"code","74c4951c":"code","dce6669d":"code","e7635a38":"code","84ad657e":"code","ed3571e4":"code","fa23d662":"code","b8d37fed":"code","212d7cc4":"code","546dfdb3":"code","667523ac":"code","4de301df":"code","21a0f74a":"code","6e65be31":"code","ab9a27ae":"code","012e34a0":"code","ef8f1dc1":"code","aa4c4492":"code","83b3b7f5":"code","721ae41f":"code","6eb1d3a9":"code","0815a2c6":"code","f2e7fd78":"code","e73f5357":"code","6bdb2363":"code","b4436bdf":"code","cefbfb85":"code","c0ce8b86":"code","222d55b5":"code","60ee933a":"code","21901763":"code","a6a02795":"code","e19866fd":"code","2a590179":"code","8ba976f4":"code","91ef83e0":"code","2f8ba07b":"code","bc501933":"code","1d9d1644":"code","9f7a2e7e":"code","7c5ae48f":"code","b54b91eb":"code","188293c5":"code","68bebd16":"code","7d8b2c2d":"code","61995f5a":"code","b97bea03":"code","9450d767":"code","534f1262":"markdown","47aa8773":"markdown","2e75edea":"markdown","833dc715":"markdown","c9c81ddd":"markdown","e9e40005":"markdown","02954c26":"markdown","ccca786c":"markdown","c98a622e":"markdown","96c4f5af":"markdown","440fc542":"markdown","92148719":"markdown","bcc25619":"markdown","f34a8e13":"markdown","a72159d5":"markdown","ad2bbd32":"markdown","a2af325c":"markdown","3dbb5b2a":"markdown","2dce88ce":"markdown","2d7bee59":"markdown","34ad50ce":"markdown","1c91ab1d":"markdown","313bd5be":"markdown","8e3505d9":"markdown","7f8668f3":"markdown","b3ab265a":"markdown","238d98b6":"markdown","d1928483":"markdown","b54e6760":"markdown","f3ca70eb":"markdown","36efa554":"markdown","d288ee27":"markdown","f2937ea6":"markdown","52e8f155":"markdown","64eb6d7c":"markdown"},"source":{"6698fa5a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","74c4951c":"!pwd","dce6669d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom sklearn.model_selection import train_test_split","e7635a38":"test_size = 400 #@param {type:\"number\"}\nrandom_state = 1 #@param {type:\"number\"}\n\ndef prepare_data(*, test_size=0.2, random_state=None):\n  data = pd.read_csv('\/kaggle\/input\/text-similarity\/train.csv', encoding='utf-8')\n  # make origin_index for finding original data\n  data.columns.values[0] = 'origin_index'\n\n  train, test = train_test_split(data, test_size=test_size, random_state=random_state)\n  return data, train, test\n\nRAW, DATA, TEST = prepare_data(test_size=test_size, random_state=random_state) \nprint(\"RAW:\", RAW.shape, '\\n', RAW['same_security'].value_counts())\nprint(\"DATA:\", DATA.shape, '\\n', DATA['same_security'].value_counts())\nprint(\"TEST:\", TEST.shape, '\\n', TEST['same_security'].value_counts())","84ad657e":"RAW.tail()","ed3571e4":"X, Y = DATA.drop(['same_security'], axis=1), DATA['same_security']\nTEST_X, TEST_Y = TEST[['description_x', 'description_y']], TEST['same_security']","fa23d662":"test_size = 0.2 #@param {type:\"number\"}\nrandom_state =  1#@param {type:\"number\"}\n\n# Train \/ Validate Split\nTRAIN_X, VALID_X, TRAIN_Y, VALID_Y = train_test_split(X, Y, test_size=test_size, random_state=random_state)","b8d37fed":"print(\"All Data from train.csv (RAW = DATA + TEST) :\", RAW.shape)\nprint()\nprint(\"Data for Train and Validate (DATA = [X,Y]) :\", DATA.shape)\nprint(\"X :\", X.shape)\nprint(\"Y :\", Y.shape)\nprint()\nprint(\"Data for Test (TEST = [TEST_X, TEST_Y]) :\", TEST.shape)\nprint(\"TEST_X :\", TEST_X.shape)\nprint(\"TEST_Y :\", TEST_Y.shape)\nprint()\nprint(\"TRAIN_X, TRAIN_Y (from X, Y) :\", TRAIN_X.shape, TRAIN_Y.shape)\nprint(\"VALID_X, VALID_Y (from X, Y) :\", VALID_X.shape, VALID_Y.shape)","212d7cc4":"TRAIN_X.tail()","546dfdb3":"TRAIN_Y.tail()","667523ac":"def make_description_ticker_data(data_x):\n  df_x = pd.DataFrame({\"description\":data_x['description_x'].values, \"ticker\":data_x['ticker_x'].values})\n  df_y = pd.DataFrame({\"description\":data_x['description_y'].values, \"ticker\":data_x['ticker_y'].values})\n  res_df = pd.concat([df_x, df_y], axis=0, ignore_index=True)\n  # There are some duplicated descriptions. so, let's drop those. \n  res_df = res_df.drop_duplicates(['description']).reset_index(drop=True)\n  return res_df","4de301df":"DT_DATA = make_description_ticker_data(TRAIN_X)\nprint(DT_DATA.tail())\nprint()\nprint(\"description\/ticker\")\nprint(DT_DATA.describe())\nprint()\nprint(\"description Column\")\nprint(DT_DATA.description.str.len().describe())","21a0f74a":"def product_merge(df1, df2, *, verbose=False):\n  res_df = pd.DataFrame(columns=df1.columns.to_list()+df2.columns.to_list())\n  for i in range(df2.shape[0]):\n    combi_df2 = pd.concat([df2.iloc[i:], df2.iloc[:i]], axis=0, ignore_index=True)\n    combi_current = pd.concat([df1.reset_index(drop=True),combi_df2.reset_index(drop=True)], axis=1, ignore_index=False)\n    res_df = pd.concat([res_df,combi_current], axis=0, ignore_index=True)\n    if verbose:\n      print (i, \"\/\", df2.shape[0], \": Data Count =\", len(res_df))\n  return res_df\n\ndef regenerate_data(data_x):\n  res_df = make_description_ticker_data(data_x)\n\n  raw_x = res_df.rename(columns={'description':'description_x', 'ticker':'ticker_x'})\n  raw_y = res_df.rename(columns={'description':'description_y', 'ticker':'ticker_y'})\n  x_df = product_merge(raw_x, raw_y, verbose=False)\n  x_df = pd.merge(data_x, x_df, how='right')\n  x_df = x_df[data_x.columns]\n\n  # Labeling\n  y = x_df['ticker_x'] == x_df['ticker_y']\n\n  return x_df, y","6e65be31":"TRAIN_SPACE_X, TRAIN_SPACE_Y = regenerate_data(TRAIN_X)","ab9a27ae":"print(\"== TRAIN ==\")\nprint(TRAIN_Y.value_counts())\nprint(\"TRAIN_X, TRAIN_Y\", TRAIN_X.shape, TRAIN_Y.shape)\nprint()\n\nprint(\"== TRAIN SPACE ==\")\nprint(TRAIN_SPACE_Y.value_counts())\nprint(\"TRAIN_SPACE_X, TRAIN_SPACE_Y\", TRAIN_SPACE_X.shape, TRAIN_SPACE_Y.shape)","012e34a0":"# Use TRAIN Data as self\ndef get_sample_origin():\n  return TRAIN_X, TRAIN_Y\n\n# Use all combination of descriptions\ndef get_sample_all():\n  return TRAIN_SPACE_X, TRAIN_SPACE_Y\n\n# Random Sampling from all combinations (Considering Class Equality)\ndef get_sample_random(class_count=7000, random_state=2):\n  sample_index = np.concatenate([TRAIN_SPACE_Y[TRAIN_SPACE_Y].sample(n=class_count, random_state=random_state).index, \n                                TRAIN_SPACE_Y[~TRAIN_SPACE_Y].sample(n=class_count, random_state=random_state).index],\n                                axis=0)\n  return  TRAIN_SPACE_X.loc[sample_index], TRAIN_SPACE_Y.loc[sample_index]\n\n# Random Sampling from False Only (Considering Class Equality)\ndef get_sample_add(random_state=2):\n  origin_target_y = TRAIN_SPACE_Y[TRAIN_SPACE_X.origin_index.notnull()]\n  v_count = origin_target_y.value_counts()\n  small_label = v_count[True] < v_count[False]\n  lack_count = abs(v_count[True] - v_count[False])\n\n  sample_target_y = TRAIN_SPACE_Y[TRAIN_SPACE_X.origin_index.isnull()]\n  sample_target_y = sample_target_y[sample_target_y==small_label]\n\n  sample_index = np.concatenate([origin_target_y.index,\n                                sample_target_y.sample(n=lack_count, random_state=random_state).index],\n                                axis=0)\n  return  TRAIN_SPACE_X.loc[sample_index], TRAIN_SPACE_Y.loc[sample_index]","ef8f1dc1":"train_X, train_Y = get_sample_origin() #@param [\"get_sample_origin()\", \"get_sample_all()\", \"get_sample_random(7230)\", \"get_sample_random(3000)\", \"get_sample_add()\"] {type:\"raw\"}\n\ntrain_Y.value_counts()","aa4c4492":"from sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.feature_extraction.text import TfidfVectorizer\n\n# dictionary\ndef get_Vectorizer(data):\n  vect = TfidfVectorizer(analyzer='char', ngram_range=(1,10)) #@param [\"CountVectorizer()\", \"TfidfVectorizer()\", \"CountVectorizer(analyzer='char', ngram_range=(1,10))\", \"TfidfVectorizer(analyzer='char', ngram_range=(1,10))\"] {type:\"raw\", allow-input: true}\n  vect.fit(np.concatenate([data.description_x, data.description_y], axis=0))\n  return vect","83b3b7f5":"def getFeaturesMap(vect, data):\n  from sklearn.metrics import pairwise\n\n  df = pd.DataFrame(index=data.index)\n\n  bow_x = vect.transform(data.description_x)\n  bow_y = vect.transform(data.description_y)\n\n  df['__cos'] = pairwise.paired_cosine_distances(bow_x, bow_y)\n  df['__euc'] = pairwise.paired_euclidean_distances(bow_x, bow_y)\n  df['__man'] = pairwise.paired_manhattan_distances(bow_x, bow_y)\n\n  return df","721ae41f":"from sklearn.preprocessing import MinMaxScaler\n\nvect = get_Vectorizer(train_X)\ntrain_features = getFeaturesMap(vect, train_X)\nscaler = MinMaxScaler()\nscaler.fit(train_features)\n\nconvert_features = lambda x : scaler.transform(getFeaturesMap(vect, x))","6eb1d3a9":"def plot_3d_feature(dataX, dataY, *, title=None, figure=None, subplot_idx=111, azim=-45, elev=45):\n  from mpl_toolkits.mplot3d import Axes3D\n  input_features = convert_features(dataX)\n\n  if not figure:\n    figure = plt.figure(figsize=(10,10))\n  ax = figure.add_subplot(subplot_idx, projection='3d') # Axe3D object\n  ax.scatter(input_features[:,0], input_features[:,1], input_features[:,2], c = dataY.astype('int'), s=20, alpha=0.5)\n  ax.set_xlabel(\"__cos\")\n  ax.set_ylabel(\"__euc\")\n  ax.set_zlabel(\"__man\")\n  ax.view_init(azim=azim, elev=elev)\n  if title:\n    ax.set_title(title)","0815a2c6":"fig = plt.figure(figsize=(15,12))\nplot_3d_feature(train_X, train_Y, title=\"train\", figure=fig, subplot_idx=221)\nplot_3d_feature(TRAIN_X, TRAIN_Y, title=\"TRAIN\", figure=fig, subplot_idx=222)\nplot_3d_feature(VALID_X, VALID_Y, title=\"VALID\", figure=fig, subplot_idx=223)\nplot_3d_feature(TEST_X, TEST_Y, title=\"TEST\", figure=fig, subplot_idx=224)\nplt.show()","f2e7fd78":"from sklearn.metrics import *\n\ndef show_result(model, data_X, data_Y, pred_Y):\n  print(confusion_matrix(data_Y, pred_Y))\n  print(classification_report(data_Y, pred_Y))\n  fig = plt.figure(figsize=(15,5))\n  plot_3d_feature(data_X, data_Y, title=\"Truth\", figure=fig, subplot_idx=121)\n  plot_3d_feature(data_X, pred_Y, title=\"Prediction\", figure=fig, subplot_idx=122)\n  plt.show()\n\ndef train_and_show(model):\n  convert_func = convert_features\n  model.fit(convert_func(train_X), train_Y)\n  print(\"== train ==\")\n  pred_Y = model.predict(convert_func(train_X))\n  show_result(model, train_X, train_Y, pred_Y)\n  print()\n  print(\"== VALID ==\")\n  pred_Y = model.predict(convert_func(VALID_X))\n  show_result(model, VALID_X, VALID_Y, pred_Y)\n  print()\n  print(\"== TEST ==\")\n  pred_Y = model.predict(convert_func(TEST_X))\n  show_result(model, TEST_X, TEST_Y, pred_Y)\n\n#   print()\n#   print(\"== TRAIN ==\")\n#   pred_Y = model.predict(convert_func(TRAIN_X))\n#   show_result(model, TRAIN_X, TRAIN_Y, pred_Y)\n  # print()\n  # print(\"== TRAIN_SPACE ==\")\n  # pred_Y = model.predict(convert_features(TRAIN_SPACE_X))\n  # show_result(model, TRAIN_SPACE_X, TRAIN_SPACE_Y)","e73f5357":"compareResult = pd.DataFrame(columns=['Model', 'Accuracy', 'prec_for_False', 'recall_for_False', 'f1_for_False'])\n\ndef add_result(name, true_Y, pred_Y):\n    acc = accuracy_score(true_Y, pred_Y)\n    prec = precision_score(true_Y, pred_Y, pos_label=0)\n    recall = recall_score(true_Y, pred_Y, pos_label=0)\n    f1 = f1_score(true_Y, pred_Y, pos_label=0)\n    compareResult.loc[len(compareResult)] = [name, acc, prec, recall, f1]","6bdb2363":"from sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression()\nprint(model)\ntrain_and_show(model)\nadd_result(\"LR\", TEST_Y, model.predict(convert_features(TEST_X)))","b4436bdf":"from sklearn.neighbors import KNeighborsClassifier\nmodel = KNeighborsClassifier(n_neighbors=5)\nprint(model)\ntrain_and_show(model)\nadd_result(\"kNN\", TEST_Y, model.predict(convert_features(TEST_X)))","cefbfb85":"from sklearn.naive_bayes import GaussianNB\nmodel = GaussianNB()\nprint(model)\ntrain_and_show(model)\nadd_result(\"GaussianNB\", TEST_Y, model.predict(convert_features(TEST_X)))","c0ce8b86":"from sklearn.neural_network import MLPClassifier\nmodel = MLPClassifier(hidden_layer_sizes=(100,100,100), learning_rate_init=0.001, max_iter=5000)\nprint(model)\ntrain_and_show(model)\nadd_result(\"MLP\", TEST_Y, model.predict(convert_features(TEST_X)))","222d55b5":"compareResult","60ee933a":"try:\n  # %tensorflow_version only exists in Colab.\n  %tensorflow_version 2.x\nexcept Exception:\n  pass\n\nimport tensorflow as tf\nprint(tf.__version__)","21901763":"class CharEncoder(object):\n\n  def __init__(self, *, max_length=100, padding='end'):\n    self.CHARS_TOKENS = ['<PAD>', '<START>','<END>', '<UNK>']\n    self.CHARS_ALPHA_UPPER = [chr(x) for x in range(0x0041, 0x005b)] #\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    self.CHARS_ALPHA_LOWER = [chr(x) for x in range(0x0061, 0x007b)] #\"abcdefghijklmnopqrstuvwxyz\"\n    self.CHARS_NUMBERS = [x for x in '0123456789']\n    self.CHARS_PUNCTUATIONS  = [x for x in '!\"#$%&\\'()*+,-.\/:;<=>?@[\\]^_`{|}~']\n    self.CHARS_WHITESPACES = [x for x in '\\t\\n ']\n    self.CHARS = ( self.CHARS_TOKENS \n                + self.CHARS_ALPHA_UPPER\n                + self.CHARS_ALPHA_LOWER\n                + self.CHARS_NUMBERS\n                + self.CHARS_PUNCTUATIONS\n                + self.CHARS_WHITESPACES )\n    self.INDEXES = {c:i for i,c in enumerate(self.CHARS)}\n    self.MAX_LENGTH = max_length\n    self.PADDING = padding\n    self.LEN = len(self.CHARS)\n  \n\n  def text_to_idx(self, s, *, max_length=None, padding=None):\n    idx_array = [self.INDEXES['<START>']]\n    idx_array += [self.INDEXES[c] if c in self.CHARS else self.INDEXES['<UNK>']\n                  for c in s]\n    idx_array += [self.INDEXES['<END>']]\n\n    if not max_length:\n      max_length = self.MAX_LENGTH\n\n    if not padding:\n      padding = self.PADDING\n\n    pad_size = max_length - len(idx_array)\n    if 0 < pad_size and padding == 'start':\n      idx_array = [self.INDEXES['<PAD>'] for _ in range(pad_size)] + idx_array\n    elif 0 < pad_size and padding=='end':\n      idx_array = idx_array + [self.INDEXES['<PAD>'] for _ in range(pad_size)]\n\n    return list(idx_array[:max_length])\n\n  def idx_to_text(self, idxes, *, with_token=False):\n    char_list = [self.CHARS[i] for i in idxes if i < len(self.CHARS)]\n    if with_token != True:\n      char_list = [c for c in char_list if c not in self.CHARS_TOKENS]\n    return ''.join(char_list)\n\n  def to_idx(self, s_list, *, max_length=None, padding=None):\n    return [self.text_to_idx(s, max_length=max_length, padding=padding) \n              for s in s_list]\n    \n  def to_text(self, idxes_list, *, with_token=False):\n    return [self.idx_to_text(idxes, with_token=with_token)\n              for idxes in idxes_list]","a6a02795":"enc = CharEncoder(max_length=10, padding='end')\n\ntest = ['abcd', 'efg', 'ssss']\ntest2 = np.array(enc.to_idx(test))\ntest3 = np.array(enc.to_text(test2))\ntest4 = np.array(enc.to_text(test2, with_token=True))\n\nprint(test)\nprint(test2)\nprint(test3)\nprint(test4)","e19866fd":"enc = CharEncoder(max_length=100, padding='end')\ntest = np.array(enc.to_idx(train_X.description_x))\nprint(test.shape)\nprint(train_X.description_x[:3])\nprint(test[:3])\nprint(enc.to_text(test)[:3])\n","2a590179":"class Config(object):\n\n  PADDING = \"end\"\n  \n  MAX_TEXT_LEN = 100\n  VECTOR_SIZE = 256\n\n  EMBEDDING_DIM = 32\n\n  CONV_FILTER_NUMS = [64, 64, 64, 64] \n  CONV_FILTER_SIZES = [4, 6, 8, 10]\n\n  LSTM_HIDDEN_NUM = 64\n  LSTM_DROPOUT = 0.3\n\n  ENC_DENSE_DROPOUT = 0.3\n  ENC_DENSE_NUM = VECTOR_SIZE\n\n  LAST_DENSE_DROPOUT = 0.3\n  LAST_DENSE_NUM = 32\n\n  LEARNING_RATE = 0.001\n  BATCH_SIZE = 256\n  EPOCHS = 100\n\n  def __init__(self):\n    self.ENCODER = CharEncoder(max_length=self.MAX_TEXT_LEN, padding=self.PADDING)\n    self.NUM_WORDS = self.ENCODER.LEN","8ba976f4":"import tensorflow.keras as keras\nfrom tensorflow.keras import layers\nfrom tensorflow.keras import models\nfrom tensorflow.keras import backend\n\ndef _obtain_input_shape(max_text_len):\n    if not (isinstance(max_text_len, int)):\n        raise(ValueError('`max_text_len` should be' +\n                         'a single integer.'))\n    input_shape = (max_text_len, )\n        \n    return input_shape\n\ndef _conv_block(inputs,\n                filter_nums,\n                filter_sizes):\n    if not all(isinstance(x, int) for x in filter_nums):\n        raise(ValueError('`filter_nums` should be a list ' +\n                         'of integers.'))\n    if not all(isinstance(x, int) for x in filter_sizes):\n        raise(ValueError('`filter_sizes` should be a list ' +\n                         'of integers.'))\n    if not len(filter_nums) == len(filter_sizes):\n        raise(ValueError('`filter_nums` and `filter_sizes` should ' +\n                         'have the same size.'))\n\n    conv_blocks = []    \n    for fn, fs in zip(filter_nums, filter_sizes):\n        conv = layers.Conv1D(filters=fn,\n                             kernel_size=fs,\n                             padding='same',\n                             activation='relu',\n                             strides=1)(inputs)\n\n        conv_blocks.append(conv)\n\n    return conv_blocks\n\n#@title Encoder Model\n\ndef VectEncoder(weights=None, config=None): \n    input_shape = _obtain_input_shape(config.MAX_TEXT_LEN)\n    inputs = layers.Input(shape=input_shape)\n\n    x = layers.Embedding(config.NUM_WORDS, \n                         config.EMBEDDING_DIM,\n                         input_length=config.MAX_TEXT_LEN)(inputs)\n    conv_blocks = _conv_block(x, config.CONV_FILTER_NUMS,\n                                 config.CONV_FILTER_SIZES)\n    x = layers.Concatenate()(conv_blocks)\n    x = layers.Bidirectional(layers.LSTM(config.LSTM_HIDDEN_NUM, dropout=config.LSTM_DROPOUT, return_sequences=True))(x)\n    x = layers.TimeDistributed(layers.Dense(4, activation='relu'))(x)\n    x = layers.Flatten()(x)\n    x = layers.Dropout(config.ENC_DENSE_DROPOUT)(x)\n    x = layers.Dense(config.ENC_DENSE_NUM, activation='relu')(x)\n\n    model = models.Model(inputs, x)\n\n    if weights is not None:\n        model.load_weights(weights)\n \n    return model\n\ndef VectSimilarityEstimator(weights=None, config=None):\n  input_shape = _obtain_input_shape(config.VECTOR_SIZE)\n  inputs1 = layers.Input(shape=input_shape)\n  inputs2 = layers.Input(shape=input_shape)\n\n  x = layers.Lambda(lambda tensors:backend.abs(tensors[0] - tensors[1]))([inputs1, inputs2])\n  x = layers.Dropout(config.LAST_DENSE_DROPOUT)(x)\n  x = layers.Dense(config.LAST_DENSE_NUM, activation='relu')(x)\n  x = layers.Dense(1, activation='sigmoid')(x)\n\n  model = models.Model([inputs1, inputs2], x)\n\n  if weights is not None:\n        model.load_weights(weights)\n \n  return model\n\ndef SentenceSimilarityEstimator(weights=None, config=None):\n  input_shape = _obtain_input_shape(config.MAX_TEXT_LEN)\n  sent1 = layers.Input(shape=input_shape)\n  sent2 = layers.Input(shape=input_shape)\n\n  encoder_1 = VectEncoder(config=config)\n  encoder_2 = VectEncoder(config=config)\n  estimator = VectSimilarityEstimator(config=config)\n\n  vect1 = encoder_1(sent1)\n  vect2 = encoder_2(sent2)\n  similarity = estimator([vect1, vect2])\n\n  model = models.Model([sent1, sent2], similarity)\n\n  if weights is not None:\n        model.load_weights(weights)\n\n  return model, encoder_1, encoder_2, estimator","91ef83e0":"import pickle\nimport gzip\n\nclass MyDLModel(object):\n  def __init__(self, *, config=None, load_file_prefix=None):\n    if load_file_prefix:\n      cf,wf = self.__get_file(load_file_prefix)\n      self.config = self.__load_config(cf)\n      weight_file = wf\n    else:\n      self.config = config if config else Config()\n      weight_file = None\n    \n    model, encoder_1, encoder_2, estimator = SentenceSimilarityEstimator(config=self.config, weights=weight_file)\n    self.model = model\n    self.encoder_1 = encoder_1\n    self.encoder_2 = encoder_2\n    self.estimator = estimator\n\n    self.model.compile(optimizer=keras.optimizers.Adam(self.config.LEARNING_RATE),\n                        loss='binary_crossentropy',\n                        metrics=['accuracy'])\n  \n  def __get_file(self, prefix):\n    config_name = prefix+\"_config.pkl\"\n    weight_name = prefix+\"_weight.hd5\"\n    return config_name, weight_name\n\n  def __load_config(self, load_file):\n    with gzip.open(load_file, 'rb') as f:\n      config = pickle.load(f)\n    return config\n\n  def __save_config(self, save_file):\n    with gzip.open(save_file, 'wb') as f:\n      config = pickle.dump(self.config, f)\n    return config\n\n  def save_model(self, file_name_prefix):\n    cf,wf = self.__get_file(file_name_prefix)\n    self.model.save_weights(wf)\n    self.__save_config(cf)\n    print(file_name_prefix,\"Saved\")\n\n  def summary(self, recusive=False):\n    self.model.summary()\n    if recusive:\n      print()\n      print(\"== encoder_1 ==\")\n      self.encoder_1.summary()\n      print()\n      print(\"== encoder_2 ==\")\n      self.encoder_2.summary()\n      print()\n      print(\"== estimator ==\")\n      self.estimator.summary()\n\n  def encodeSents(self, data_X):\n    enc = self.config.ENCODER\n    sents1 = np.array(enc.to_idx(data_X.description_x))\n    sents2 = np.array(enc.to_idx(data_X.description_y))\n    return [sents1, sents2]\n\n  def makeInt(self, data_Y):\n    y = np.array(data_Y.astype('int'))\n    return y\n\n  def fit(self, train_X, train_Y, *, valid=None, epochs=None, batch_size=None):\n    if valid:\n      validation_data = (self.encodeSents(valid[0]), self.makeInt(valid[1]))\n    else:\n      validation_data = None\n\n    if not epochs:\n      epochs = self.config.EPOCHS\n    if not batch_size:\n      batch_size = self.config.BATCH_SIZE\n\n    history = self.model.fit(self.encodeSents(train_X), self.makeInt(train_Y),\n                   epochs=epochs, batch_size=batch_size,\n                   validation_data=validation_data)\n    \n    return history\n\n  def evaluate(self, data_X, data_Y):\n    self.model.evaluate(self.encodeSents(data_X), self.makeInt(data_Y))\n\n  def predict_proba(self, data_X):\n    y = self.model(self.encodeSents(data_X))\n    y = np.array(y).reshape(-1,)\n    return y\n    \n  def predict(self, data_X):\n    return 0.5 < self.predict_proba(data_X)","2f8ba07b":"model = MyDLModel()\nmodel.summary(True)","bc501933":"model.evaluate(train_X, train_Y)","1d9d1644":"def show_learning_curve(hist):\n  fig, loss_ax = plt.subplots()\n  acc_ax = loss_ax.twinx()\n\n  loss_ax.plot(hist.history['loss'], 'y', label='train loss')\n  loss_ax.plot(hist.history['val_loss'], 'r', label='val loss')\n  loss_ax.set_xlabel('epoch')\n  loss_ax.set_ylabel('loss')\n  loss_ax.legend(loc='lower left')\n\n  acc_ax.plot(hist.history['accuracy'], 'b', label='train acc')\n  acc_ax.plot(hist.history['val_accuracy'], 'g', label='val acc')\n  acc_ax.set_ylabel('accuracy')\n  acc_ax.legend(loc='upper left')\n\n  plt.show()\n\nlearn_hists = []\ndef train_and_show_for_DL(model):\n  hist = model.fit(train_X, train_Y, valid=(VALID_X, VALID_Y), epochs=100)\n  learn_hists.append(hist)\n  print(\"== learning curve ==\")\n  show_learning_curve(hist)\n  print(\"== train ==\")\n  pred_Y = model.predict(train_X)\n  show_result(model, train_X, train_Y, pred_Y)\n  print()\n  print(\"== VALID ==\")\n  pred_Y = model.predict(VALID_X)\n  show_result(model, VALID_X, VALID_Y, pred_Y)\n  print()\n  print(\"== TEST ==\")\n  pred_Y = model.predict(TEST_X)\n  show_result(model, TEST_X, TEST_Y, pred_Y)\n#   print()\n#   print(\"== TRAIN ==\")\n#   pred_Y = model.predict(TRAIN_X)\n#   show_result(model, TRAIN_X, TRAIN_Y, pred_Y)\n  # print()\n  # print(\"== TRAIN_SPACE ==\")\n  # pred_Y = model.predict(TRAIN_SPACE_X)\n  # show_result(model, TRAIN_SPACE_X, TRAIN_SPACE_Y)","9f7a2e7e":"model = MyDLModel()\ntrain_and_show_for_DL(model)\nadd_result(\"MyDLModel(100)\", TEST_Y, model.predict(TEST_X))","7c5ae48f":"train_and_show_for_DL(model)\nadd_result(\"MyDLModel(200)\", TEST_Y, model.predict(TEST_X))","b54b91eb":"train_and_show_for_DL(model)\nadd_result(\"MyDLModel(300)\", TEST_Y, model.predict(TEST_X))","188293c5":"train_and_show_for_DL(model)\nadd_result(\"MyDLModel(400)\", TEST_Y, model.predict(TEST_X))","68bebd16":"train_and_show_for_DL(model)\nadd_result(\"MyDLModel(500)\", TEST_Y, model.predict(TEST_X))","7d8b2c2d":"compareResult","61995f5a":"def getVector1(model, descriptions):\n  return  np.array(model.encoder_1(np.array(model.config.ENCODER.to_idx(descriptions))))\n\ndef getVector2(model, descriptions):\n  return np.array(model.encoder_2(np.array(model.config.ENCODER.to_idx(descriptions))))\n\ndef getVectors(model, dataX):\n  vector_x = getVector1(model, dataX.description_x)\n  vector_y = getVector2(model, dataX.description_y)\n  vector_arr = np.array([vector_x, vector_y])\n  return np.swapaxes(vector_arr,0,1)","b97bea03":"from sklearn.manifold import TSNE\n\nmodel_tsne = TSNE(learning_rate=100, random_state=1)\n\nvectors1 =getVector1(model, DT_DATA.description)\nvectors2 =getVector2(model, DT_DATA.description)\ntfidf = TfidfVectorizer(analyzer='char', ngram_range=(1,2)).fit_transform(DT_DATA.description)\nprint(DT_DATA.description.shape, vectors1.shape, vectors2.shape, tfidf.shape)\n\ntfidf_tsne = model_tsne.fit_transform(tfidf.toarray())\nvectors1_tsne = model_tsne.fit_transform(vectors1)\nvectors2_tsne = model_tsne.fit_transform(vectors2)\n","9450d767":"fig = plt.figure(figsize=(25,7))\n\nax = fig.add_subplot(131)\nax.scatter(tfidf_tsne[:,0],tfidf_tsne[:,1])\nax.set_title(\"TFIDF\")\n\nax = fig.add_subplot(132)\nax.scatter(vectors1_tsne[:,0],vectors1_tsne[:,1])\nax.set_title(\"VECTOR_1\")\n\nax = fig.add_subplot(133)\nax.scatter(vectors2_tsne[:,0],vectors2_tsne[:,1])\nax.set_title(\"VECTOR_2\")\nplt.show()","534f1262":"#### Inspired ```Siamese Network```\n\nhttps:\/\/www.cs.cmu.edu\/~rsalakhu\/papers\/oneshot1.**pdf**\n\n![image.png](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAicAAAEPCAYAAACZR2QbAAAgAElEQVR4Aey9B3xdxZn3LzdaICF589mSdzfv7v\/dZDdl9w8pm4QNAQIESELKAmEhQIAYG0ilu2NjOrbBQBaWFEIoNpAKCb0Yd1u9XHU32ZZ0i245\/dyi3\/v5PeeOdC0syZauJF9r7uczmlNm5hxN\/Z7neWamDPo3oTmQy+WQyWTkHXp7ezF79mxcdtll+NGPfoSrrroKs2bN0m7M8mAmrp75fVw984oCx\/PvY9bMq8RdPWs26GZfdbW4WVddi6tmXiNu5lWzceWsq3DF7O9PSnfl7O\/jqtkzMWvWftzsKzFrv+4KzJp9Ba6adTmumnVFPq6u47qd6zowGevA1VdfLWPezJkz+3yOexz\/yiZ0ZNYPRzablVwgpPi+j2uvvRaWZcFxHNi2rd0Y54HrWHAdA75N3+rzXdtBoXMsloW7j7N47jowPQvmJPRt14LlMF\/MfD0NfMdh\/Q1ccI\/X+53lpArOdR3X7VzXgclaBzjW8X+nH41GZTzkOHjFFVdoODkU+IiFQUghoJCeKUlJJBLwPE8KjQWn3VjmgQHbDNJXvmUZGMyZtgHLUYOtDYKLY7mTzg86FQembcG0CnzLAcGNTq7znuX1uZStzh1dr3Xb1nVgEteBVColH+XqY5xjHse\/iy66SMPJRMMJgURJT\/guFHMRTAgsLDgWmnZjlweDf7EE8KEkAOK7Bmw6LyW+4xoiXfFtB5PRUbIkgJIHEZEkOR5scWnYThqW7ecdj9MwnUy\/c9NwHE\/Xb93GdR2Y5HXAMAyk02mYpomenh7ccMMNGk4mGk7U813XlcNLL71UOnyeEE60xGQsJSZWfiBVA6onahqqaqiyCNQWKVANYdpJmE4i73pg2HGYVhy2lYRtGZPWBdIlK5CeUIKinEhLlITEQ8ry8y6DlKWcD4tSlkn85aj\/97Ft3zp\/D+385Uc4wYQf4LFYTMY+Ago\/0rXNiaKDCfJpBEswYeHwR2MgHrOABv+q1zraouWNE3zhB1\/7hXDSDyiUlhBQLDcprh9SErDs5KDqn8HUQofbdWVPolRd9GmLQqfUOpSgGE6\/owSFkpXAjkfX56LV5zG20dLvqetqMetAMsn+05Kxj5ITOo6HF154oYaTCWKSfR5LQOGPurYrr7yyT52jiFKrdcZOrdOvdghsJMRWIj+wcnAN8j5v4EmVDo05847AYjg2DMedlE6MYZ0UHDvvqOZyDFDdpZwCF\/Hz0ihKpBzPDdwkF2frtj12bVvn7aGft4WqHGoKlHrnJz\/5iYaTfShhAk9YSPxxKrEqIDauYlKqTuvdXz3qy36gP5g4uD8PA5sUGncmHQeT0U\/ZFBlTpUXVVuD6QMXOQ5yVFOmS3C8Au33h5d3l0p\/P+p7OC10HDtc6wH6WWgJ+oNOnQSz\/1+9973saTorBI8xYZdSqZt2otUsOJn2mw9k6h2tFLJX\/i1Do2p64YBYOZ+K82\/H\/oQTA8unbk87n\/8yZSp5lg1OxB7pgirYBy0zAtRJw7CR8z4RLGx6jB2mf0wi1+rJU2oV+Tw1Jxa4D7GsJKErKxWM+gx\/p2ubkYOhhP2Ep8VBgom6T\/vgbeF3dH8zXcDLxjZ+DbbC+yUA48eFYAx1thaw+FYaSBkwan\/+7QJsPzwzgjb64PLT0pn1kXAeelYJrJmEmYvBtA8h5Ai2OhhP9MaLtZCZtHdBwMhgNFPk61TEKSBSgHMwjNJyMP5xwcNzH9cFJsAjbwIXXCs85MA+UFkyuc0eAzbbScMw0xB8AcD3ROCzDFmDJeVm4pgUjnkDacQUCg8Xtxr\/ci\/0FqNPTZajrwMHXAQ0nB0MIBxmW65QQStSPU6P4Y6Yf7E\/DycFX7tF2CPuACUGFC6oVGGkyfTXzpN\/nbJT8Oih5CQFVG5PNEc5sS61jsq\/P63S+l0M2DZgpB2bcQtbNwLc8WAkTnuNP2i\/G0dZbHX\/8+wqd58XPcw0nB0sJIwhP9Q5BhU79DlZ6ouGk+JX\/4DsUs2+NE1lwzTVgenQpcYafgpFOiOM1LiLmWplJ6Rw7LXY2ZtpEn5O84hoxnIrtwLBMmKYNz0vDSJqwDBcZv1d819ZTiQ++fh4KbUS\/gy634tQBDSeKFsbAp+GrkpJQakLAoGpHzb45mEdqOClOhT\/YjkOmxPZJSMxgrxzPAEEk5cfzLoZEOiIungmDjudJN4GUY0xKx\/+deaDyQ+VJIh0L8sxLws06CEe7BfhYvwkqAitOBoQbvc7JxNT5g20jOrwup7GoAxpODoYQRhlW2Zwo\/2CS03Ay\/h0A1zXhOiWBb8NwTRh+ACbJdALJTA8S2SgS2QjiuW7Ec52I9+5BvHe3uJ7cTkxmF8MOxLANgb8rny97EM90IZEOw87F4cJANBmWJf+9tAvuTUSo5+qwY9Hh6TTHvx3pPNd5PpI6MCSclJWVQbvR5QEBhJ1t4fRhgsbB\/jScjH8Dl0XX8nvDBIup2XnJSUrA5OEnV+DBp+7Fg08tK3D34sGn78GDT9+BlauWYuWqJZPUX4r75f9nHizFg88sxcqn7sTKp+7GQ0\/eg4d+cx9WPn4njN4IrHQSPYkI0lkXhpFEOpvJ72g8\/mU+kk5Ux9HlpOtA8evAsHDCQXQkg+nBDr6HY3iCXbHyT8NJ8Sv\/cB0KGwcd1Qt9oOLYcB0Lpt+D+1fdhfrEFtSFK9EUaUSouwENXfUIdVWjKVyNULgq72omnV8fqUF9tBYN0Vo0hivR3F2F5q46NHY1INRdJ\/lBgItnO5BykpLHslmg2gGadil6GqnOA10HJm0d0HAyhlSk4WT8gaKYAxohJNhdV808caWj4C7Dph\/FitVLUWVsRG2kEqFoI0JdTWjg4NtVi6ZwrcAKgWUyuvpwA+ojjaiPhtDYXYPmrho0d4bQ2BVCfXcIddEqkSr19G4XmxxONeZMHVvDyaQdjIrZdnVapd33svw0nGg40Z3hIF9nGk5GDlYaTkp\/cNADvC7DiawDGk40nGg40XBSdOmOhhM9sE3kwKafXfr1T8OJhhMNJxpONJwMUgf0IFf6g5wuw9IsQw0nGk40nAwyMGm1jlbr6IGtNAc2XW6lX24aTjScaDjRcKIlJ4PUAT3Ilf4gp8uwNMtQw4mGEw0ngwxMWnKiJSd6YCvNgU2XW+mXm4YTDScaTjScaMnJIHVAD3KlP8gdrmVomiZqampwwgknYMqUKZg+fTquvPJKRKNRWJaF119\/Hd\/\/\/veRSqXAsNzPjRvRctDnMX3XdeW+yqNkMin3GJ9hGY7HXES0p6dHtl7hNYbnOX\/0mQ5XPmcc3mMcps9nMy6fzzDcxoVheK6eOZiv4UTDybCVZLDKc7hf15ITLTk53Ou4\/v9KF75CoRA+9rGPCYRwv7ZEIoGFCxfimmuuEUAhBHCz2VgsJkDAMHSEFwJGJBIRiOAQSHBQIEJfAYSCCEIL4xIYCCO8Xgga6joBhfd4Tp\/nBBXGZV2Lx+OSNuMOV\/c0nGg4GbaSDFeJDtf7Gk40nByudVv\/X6ULJarsXnvtNXzlK19Bd3e3gAmv19XV4ZRTTkFtbS3eeecdXHrppQIRO3bswJe\/\/GWRsBxzzDGYN2+egENzczPOPPNMLFu2TCQv\/\/zP\/4xXXnkFZ599tmxds2TJEgELwkp1dTX+7d\/+Ta5\/85vfxO7duwVACByXX345ZsyYIfd++ctfgjDDOOvWrevbAmfmzJl94KL+h6F8DScaTjScDCLS13Ci4WSozlPfK\/0BvpTLcO\/evTj11FPxiU98QtQ7VJ8otQz\/rzfffBPnnXeewAvB4LHHHhMJyZYtW3DaaaehsrISPP7c5z6HlStXivrlzjvvxCc\/+Uk0NjYKjBB+Nm\/eLFIWQs9LL70ksHLdddcJkFA68vOf\/xy33XabSEUISldddRXC4bDE\/9KXviTARNCgiunWW28VqQqlPMPlvYYTDSfDVpLhKtHhel\/DiYaTw7Vu6\/+r9MGKIMJyXLVqVZ904sQTT0RFRYVACOHkxz\/+scCJGuipTqFa5tvf\/jYaGhoEIE4\/\/XSRtDCtX\/3qV5g\/f75Azp49ewRuqqqqRArDcJSSUAVEeLnwwgvR2tqKRx99FIQagop6J6pymNZPf\/pTdHV1SZw\/\/\/nPIsmhikfZrQxVD9U701fHDD979mz+v8XbuG4MGeCQTbqY+ac3\/hv\/zkTDiYaToTpPfW\/826TO8\/48pz0HYYM2JWqwp0rmjDPOQGdnp0g5OJDz\/htvvNEHMByXPv3pT4M2K5s2bcIFF1wg4Zm3Dz\/8MJYuXSrpUfpByQtVRAQLGt0yrvIpYWlraxOJyw033CBqId5\/6623BEYoUeG5cscddxwIOAQb9b5DlacCEg0nY4A4LBT+irGrs4aT\/kY5VIUu5j0NJxpOilmfdFrj34YP5zz\/xS9+IaoaDvQcH6gq2bVrFy677DJR2RASrr76atTX14ttSnl5ucyeoa0IbUY404fXaC9CyKCNyOOPPw7amVAKQskJJSyEE9qOfO973+szruUzCQ2UlFCaQlDiOeNQokJpC21PFi1aJGMg06MhLg10GZfSl+HKRsPJGECJSlLDSWl3RhpONJwM14Hq+6Xdxku5\/AgXZ511lqhxCCZUl1BaQcnJzp07xebkiiuuQHt7u1z7y1\/+IjNnnnjiCZl+zPgEF0pHOjo6BBgUUDBfmIYCje3bt0saa9asESAhxNAehfEIM\/\/zP\/8jadMOhka4lNzQOJdhaNdCICGo0PaFQKPUP0Plv4YTRRJj4Gs4Ke2OS8OJhpOhOk99r7Tbd6mXHwdvSig+9alP9albaOhKUOHgT8kJ4YTHtP+YNm2ahHvkkUdkPRSqgJqamkQ6QpigdIOQsXjxYpGi0FbknHPOQUtLi4AHYebjH\/+4qHU4a4fP5jtQ\/XPyySf3pU8VEvOWkpi3334bU6dOFUfjWMIMn8N4w+W\/hpMxgBKVpIaT0u68NJxoOBmuA9X3S7uNl3L5UVJC8OBCZxzI6fOccEI1C9Ut\/BESeJ1GqlSrKJUK7VUYhrN8GIbSjcJ1SXjOMAxPR6jgM5kOHfOOPp9Ln+F5TBUTfabFdyG88Me0eJ3hNJxIlkzcHw0npd1xaTjRcFLKg5d+99Luf4YrPwIDB3wCAyGDgz7BQK3YSujgQmsEEsKAAgICgzpWAEF44TWmp0CG54QWGtQSTJg2n0PA4LMV1DAMjwkoDMfnK1BhOL4fAYU+7\/P\/Us8f6n9kGKZJXx0zvJ6tUwSm0XBS2p2DhhMNJ0N1nvpeabfvUi8\/rilCCCAAcBBXEKAgQQ3q9AkU6jrDESjoCCeFwKCuMwzj8Zw\/hqFBK+FFSVeYJu\/zHdSMIUIKw\/A60yDMKIBifqt7vD5c\/isgUf8H359xNJxoOBm28gxXuUr9voYTDSelXof1+x++AMUhimBASQfhgZDC8lbAwWsEBCUJITjwGkGCP4IC79FX4MJjFY73mCYlLfTpFLwo2KFUhnEUSDAO34HPoc+49AkjjMvn8J0pheH1oZxKU8NJEWBkYBJacjJ05RuqYh4K9zScaDg5FOqhfofS7kfGqvw44CsI4DM4+BMseF0N6IX2HgQDQgXjMCyPGZ7H\/DEsrzEuoYJgo4CEafJHlQ2vE0qYDsFEAQihg+GYJtPhOxGUmJ6ydeF1Pq\/wvQfLH8bjO6v\/hccMqyUnUhSj+6PhpLQ7FQ0nGk4G6zj19dJu24dD+REcOMuGU4e5LDxBQaleuAYKp\/gSDijNIDQQCjjAExQUIDAel7UnYDAsAYOOaSmIoZRDAQufScBgePo8Z14yPcbnNYbl2ijf+ta3ZP8dhiXU8Nn88X0YZrgyYBgNJ6NjkEFjazgp7Q5Mw4mGk+E6UH2\/tNt4KZcf4YELqnGtk4985COyHL2CCq5DMmfOHIEAggOlHYQOHnPQZ1z6XKqe04wJGeo6gYCO4RUcMB7D8Bp9Ot5juvSZj+o5POcmgf\/1X\/8lU4eZrpLCEF6YhpacDIoN43NDw0lpd1waTjSclPLgpd+9tPuf4cqPgMAVWbn8\/A9+8ANRd3B2DiHhN7\/5jSx6pmDl5ZdfxhFHHCHrnHBjPkpSCCUco7gcPdc3UavBEh54jxv1MS2qe7heyuuvvy775Fx77bUSj3G58zFhRC0Ix0XXuBkhr19yySXYtm2bgAsXYOMKs3wuHZ8x3P9HqGHa9NUx42i1ThH4RcNJaXcOGk40nAzXger7pd3GS7n8CA6UnFB9QkkFoYO7BhNauNIrpSIMw0XUuDgbF03jYH\/xxRdjwYIFAggLFy7EU089JWoaAgQXZqNUgxv5ESZ27NghAERQ4bO47w5BheojLmn\/T\/\/0T\/JsqnG4OzIXYKN0hKvD8r04o4jP4vvQFoWQwZ+WnBQBMEaThIaT0u64NJxoOCnlwUu\/e2n3PwdSfpSccC8d7kT82muv4Wtf+5rABHcKJnjQ3oNL2lOywlk6dIQK7rnDuLQ54YqxSlpyxx13gEvQ\/+xnP5PdhrnC66uvvirhaCtCKQ3PKZHhCrLc9ZjxCSfc1K+yslJm4hCEvvvd70q8ZcuWic0JJSZU79A\/kP9NSUu05GQ0FDJIXA0npd05aDjRcHIgnagOU9rtvFTLj4DAfXNo28EN\/CgxIZD8+te\/FkfJCY1UKbXgWDRjxgxR4VCNw+XmCScMQ+NZGr0ScAgxBI3bb79dpCA0lqX9CtOkFOTrX\/+6qHf4bELDvHnzRPJCtQ7fQ+1STEj513\/9VxB2KIGh4S7BhHnNeJToDJfvGk4GAYtiXNZwUtqdloYTDSfDdaD6fmm38VIuP0o7CBhUnxAsOAuHEguqcK677jrccsstokqhZIMzdyj5IMBQ7UK44DFVOQQQqlloWzJ37lw8\/fTTAiRMk5BCKQuBhWodgsaGDRtEEsJn0\/6D8NPQ0CDvQQhhnjIubVhoA0P7FaqD+HxKbghMfP5wea\/hpBgUMkgaGk5Ku+PScKLhZLgOVN8v7TZeyuVHmKCKhBILwgMHfEIGYYNjD4GAU3hpj0JQIFQQSAgqV155pYDCjTfeiFWrVokkg\/GpguHUZKqICBOUrFx\/\/fVynzBE+xHuOsznrF27VqQjmzdvxvr163H55ZfL7Bw+s7m5WWxbuNEfjWLPP\/982WSQNi\/Mc6Y9XN5rOBkELIpxWcNJaXdcGk40nAzXger7pd3GS7n8OHjTMPXcc88VA1QCAwd\/wgElGlS58Bqhg4aq06dPF7UOpx4TGggqnNXDcYrSDYalQSxn3FAqwnPCCMPQDkXNsCEMqR2OufMxJTZqd+Ndu3YJdFCC89WvflVsXvh8zhaaNWuWnBNMGGe4vNdwUgwKGSQNDSel3XFpOCkWnNShuYuuAY1dIdR3h1AXqcHKVUvQ07sdKScJ2\/LhWx5sM7\/jqTv8Ik3DdW76fmm3P11+w5cfAYKQQaem3dJXjmBAGFADvQrLcxrLEhJoC8JjtRYJ0+R95j\/Toc90eExbEdqnME3CCs8Znk6tTquWpuc5w6k01DvxHfi84cpXvTN9dcw4RZlKzH+cL6p+\/OfVr\/Ceuq50UQyj4jED+OPLqeuMqxyvMRMYXsVhOurHcLzPX+Ez1bGKq+4rX72TRBzhn6lTp8oz1fuoNFnQB\/orfHcaKzE\/WOCqMqoC135\/gzzQvGADYZ1RjZd5Sn2sylvCiWPZ8Lw0PDeLZCpotL3pDHrMvbjv6cWoMjaiLlqFULQRjd3NaI42oylcj8buGoS6Rz64M259uA4NkXpJu2pPNVp7WiTNyp0VaIo0omJHOXZZO1G7pxatPa0y8Ic6G9AcbkJ1RxVqOqtR112L2q4aSac90YL6zho0dNWjMRxCqLNeXHuiTcI3R0Oo3LkVLYlmefZo3r8+3IC6SOCaukNo6Q7l4aQBDeFG1EfrsXLVUljYi5jRDdf1kXGysE1uUpaA4w3fMQ\/XubEc2W8wnOpAC+tGYafH+wzH++p4uPT1\/dGXkc5DnYeD1QEFJIXtlGGLAifs+AkBHJQVBLDDUIM07ylXOFjzBfhjWAUcapBWPu9zkFcDP8\/VMyRy\/g\/TUD81GA2EA74Pn0PH9AqfoeKOxFeSk8K46v\/hNfXMwXwVRsWnMRLzhu9PXxWa9gOyPth8YN1QxM+4K1asEFChWJT5m8um4docLE0YKQeZbG\/wteGnYfpRLF91G6rNTQInDZEQGjob0dDVgFBXLZrCtUWBk8ZYCC2JVhBOavfUoC3eKq4l1gw6AkRjmKBSgW3xdhBO2mKtAjKtyRbQhaINKN+1VcBjt9Mh6dR31qE53BgASncD6vbWCvB02DtQubtCgKZ4cNK4XzhZ9ptFIjkxfW7h7sEzfXhOBrZtwnaHt+ZnGQ3lWLaEDdVWWN7KsbzVVx\/v8zrBn47HvD9U2vre0Hmv80fnz2jrANsg2y99dcw0iwIn+wMPPmzgTw3Y7BTUTx0TFBQsKKhgeHWf4dkJFf749cswKh6\/jHnM91E\/HvMfVWCgritJjQIodX0kPuGE6RN4lK\/S5\/lwP74jw6n3JpwoS2vV8TI\/tRtZHrAOKfEiKz8Nyd73vveJBTutzE0jCTNlwPczfZITGqDl8nBy\/7O3C5zUx6rR1NOMUFcT6imN6KpFS7R+1HBC6UhztEkkJASFHcZ2VO2qFEnJ1m1b0RptQXn7VuxIbkf9HsJGE+p212JzyyYBFMKMkrIwbt3uGrm\/PbENTd2NfceMS+kGpTCUqNTuqUJbPACfkQLKvpKT\/cPJg6tvRyTTBidLEHHhGl4fnDheIMkYTQfHtqY6NbYXwohyPGe75H3Vlvgs1gleY58xmmfruHpw1nVgdHVAtV366ph5WhQ4KRx8b7vtNpmexGsccNlxqIGaHYKSgKhrDMdjhiUo8OX4U8DBYzVoD0xPAub\/KKDhKY+ZFtNgHPXj1ClOqeJPvYdKW4UZiX\/00UfvA1GFQMXnH4jjc9W7Uq2jCkkVmPZHJjVhvrE86FQnQlD5x3\/8RzEQe8973oOFC+Yh0RMXyYlpuEhnAimgY5hI2F0iOalMbRDJSXO8Bc2RVoS6KUGpKYrkhGBAQCE0EFJqdgfSk\/Nnn4+y48tQ9v4y\/P+n\/hs2Nm0QOGmJNOMHC67Fqd8+BW9Vvynw0hptxp83vIiTvvYFgRYe\/81H\/xr3\/vweNO6pF0ChpOWaeVdj8cpFKN++FVTvUP0zUjBhvAOBk4eevSOwOXF7RHJCOHEsX9Q6rj8y4BwM1FUZ02fZs29hWMIKfV7nMX3WCXWtMJ4+Ht1go\/NP59\/B1AG2U7ZDNcapNlkUOFEDPDsCzp\/+\/e9\/L2O8Gmx5omBADf4EB37JqJ9KQ\/m8zpfkj9cKJRwqDCGEx+xkmJ4KU\/gsBUGco33kkUfK4jUqHOOpY\/UeI\/EpOSl8pgIrvlthHgyWtgpDn+nMnDlTOlVKT1SBaX\/kcEIYYb5yUGKesly4miLLjdbo06dNwbHHvAdz5sxDLJrsszmxkimkYWDF6qWoSK5HTbiiz+ZEwUmoq3pUgzsHeLEd2VklUo6GvfWo2FaOb1\/5LcyeM6vv2pN\/\/g0+\/5XPYX3dOrR0NePaOdeg7Igy3P\/LFWjtbkHdzmq8vuU1nHPh2djcuAkvrf8LPvbZj+EzX\/40qtsqEdrdgIaOWvxk8Y9x3y\/uQW1HNXaaOwKblFHYzBwInNzz+HwksBNxKyLSKSflwrXTMIwkvPToO3IlEWF7Zp9QCCS8R+mI6gdYD9hx8jrbFMMfTEeqw46+vHQe6jwsrANsh2MGJxx0VePn3OonnnhCYIFzokk\/P\/nJT2QQOPPMM2Ve9Yknnggakb744osyeLPDUFOdOFh89KMflcVemC6nUDEeBxJuRMR51Fwtj8\/bvn07TjjhBEmb05n4T7KD4o\/H\/HHA51SrH\/7wh7LpEadM8Rrjc5CiG+3vqKOOkiQIOgpMeHyg4MP\/nz++C+Nfc801fYWlOl4WnnYjywPWCZY384\/HyjD2Qx\/6kNTDKdwUq6wMxx77XrznmPfhppvniBrIs2wxiH3guTtQY23ex+aE9h+N3XVFkZwQSCgNoSOoPPvaanzy5E9gfWidnPM+VTs\/WfhjLLl\/MZo7m3D94utwybXfxYmnnIA\/vf1HbI+047mXnsNZ552FddXr8PK6l3H2+WfjW5d8C9fcdA12RLehflcdZt80E3c9eidaIk1if0KV0FhLTh753T2I5bYh5fYInFgJG75LSAhsTthWR+NYpuzsWL702WYIoYRRpquAhao6tWGailPYSepjPWjqOjD+dYBtlG1X9QGqHRdNcsJBlYlzQRhuMMTfmjVrBCo2bdokgy43LOLcay6Pu2XLFnz+85+XQYCLxpx99tnSsTAel+blcrj8UQ3DzYk4uDz55JMCI1z4hR0Pl+bduHGjQACfy02L2BERCgqlEUyHAMCv5bvuukvSZed0oPAgEYb4Q3CiOovvSsd3514GBDUeL168eEjHuHx\/hufxpz\/9aQEqnhOmmB\/ajTwPKM3jIkQsB4Iqy4bnXLCIZUcwmVo2BWVlUzFt6pGYPuNIkbLdtuhW7I1uw71P3SpwEorXiuSkfm9IjFObIw1ojtSNanBXkhPCB+1I6Cgx+eHCH2B7bJtISbZF21HVXom2cKtIQHhOycmtyxfjgV+tFPjYE9+N1ze8ga9\/51yUhyrw4pt\/xpnf\/Are2Pg6Tv36qVhT8ZbAyTW3zMKyX96H2o4abEu2gwazYw0nsxdehOtuuxJzFt2IBQsWYd5N87FwPstiDubOv1nKhOUyUscFpLhtPFfKZFkzHbYXrnq5fPly6Te4QJWSmrEpcxAirLBf0QPS+A9IOs91nqs6MKZwor78OdhzcKZtB69x4yHCCKUfvMfO4plnnpFhPhQKycpy7CAIEpQaMAwh59lnn5UBhAR13nnnobW1Ve4zLCUnXEKXq9WptJkgr1144YWySZHiCAIIf+r9+GwOTIU\/da\/w2sEeqy2qKf66FuUAACAASURBVPXhYEdXeKyuDeZzDwQ6dZ97I6hjSpjUsfaDvD3YfGAeDiwPSrtUOoSTI6bPwNFHvwdlZdMFUiROWRk+\/E9\/hYWPXI8tPe9AwUndHk4dDonkpFhqnaodlX2zcAgntBWhKoYqnKa9jX3HO+M78pBxtYDJO9Vr8YXTT8Izf1yFF954Eeec91VsrNmEd8rX4oxvnIkt9Vux7NFl+MbF30BDRz1m3zQLdz5yByiNodGtmgk0UkA5ELXO6Rd9FmXHlaFsBrdtn4YjphyJKZLPZZg6fWRlqspuoM9yLmxLqv2wTR1\/\/PGyYdqf\/vSnPlWPlqDoQVINktqfmLowpnCiBnNChlLr8JgSEa7XT2kGoYNSBKp8+GtsbBTQoIidgEBVBjsaNYjwK5er0HH\/AEpK+ON6\/QQQwgrhhOELO6JPfvKTfeogBR1KgsJzwgklE+pXLMkJOz5+uVEqQwDj15v6ciMMDSc5IdApyQvjfvGLXxSJifoKHOkXpY4XfI2zbFgeN910k5QTpVEsF0rrWH9ocyKqnSmEywBOaCi7eMFC7OxsFpsTrnNSG6kUyQln6xRzKjEXLGvvaRMVDiUalJpcPXc2GveE0B5pE592JZScEFaUzckdD92Jlq5WPPviczj\/sgvw+1f+IHBS0ViJl9a8LMeUooR2hQROfvPHJ\/DDeT\/APY\/dLbYsXCOFBrgjBRPGOxA4+cGSS0VyctP860Rycsv1c7BowRJcf\/1PiyI5Ue2N9f3mm2+WpbhZvtx35JJLLsGXv\/xlfOADH5D+Qn1IsI1xNUzaI6nOUQ1OlMoqWxTeU9e1PzGDl873wzvfVfujr45Z5kVR66jBngDAQfa5554TSQdVLlyHn6JTOsIJVT4MR8C4+OKLZflcblhEexJlA0LJCdUc3FzooosukrD8wuEeA9\/5zndkCV2qirhvQKHNSOEx30kBivIHztZR4KLef6Q+IUk9eyDwDDwf6hkqDf5f7DT5Y0epG+foGifLgIONqvzMU9ol\/P3f\/70s9Tx1SqDamTHjSBx37PsxZ+58sU3gbB0fqTGHE07xpTqHkML1S55\/4zmc+OUTxLCV0hNCCoHkjodux63LFwmwzLrxKtz93\/egtbsNFc0VuPCK7+Dya6\/A6eeeAQUnlJxsrNmAhp0N+N2rz+Pfz\/gsvv29bwic8FlcS2U81Do\/e\/4udLpNyICq1KxMJUYv22calpMadf2mhJX9A\/sYljGPWd70WdZcz4a\/nTt34hvf+IYAKT+CPvzhD8s9hi3cqEzpvFlHmJ5uf6Nrfzr\/dP4NVQcUkKj+WbW\/osCJGlQ52POLhRIKAgHX3VfGnbxH4KDkhMeUnBBOKDkhzBBO+A9wL4Cvfe1rAjkMR0kEJRI8Jlx85jOfkbi0W+HeAFQdsXNZvXo1Tj\/9dAEYDkZ8Pt+LEhvG5Y8bH1GKwZ96Z+XLxRH+4dc3fwooeFyYLo+HcnxXvqf6XXbZZdKp8v+gKmuogtX3hm\/4HJzoWPmZzxzEVq5cCU4BJ1hScvLeY4\/DjTfejGgkAcsOBrq04yKa2j3mcML1SAgoBAZCCtc0OW\/mf+Kqm2cG65h01OB3b\/0Wf\/fx\/40N9etFPSMSkEfulmMayL6+6VX8wyf\/AWd++0ysqViDVze8inMvOhflTeVo2t2E9u5WkZpwhg\/VOpx6zJVnuWrsWEtOOFsnhQ4YXhzJpAEzbsFIciqvDdMe\/TojhAg61anxmP0Kz9mG6HjO9snyf+mll\/De974XlKKcdNJJEpf3GU6lQbBRx7qNDd\/GdB7pPBppHRhTOOGgqgZXqnV+\/etfCxBwEyIawRIe+KM4\/Q9\/+IOAAzcQohSEkEHH7aA5UJx66qkyi4eza2jAxg6FtiUEAO6k+M1vflN2P2R6tDPhzB\/aD\/zLv\/yLXCeIEATUMznw85jv9\/jjjws8KVhhB1SM3zHHHCP\/Lzs3\/tg58rnqXQ7kGXw\/xqHj7pAsMCVeVkSp\/ZHN6mDeqjJhneJA9JGPfETq2\/vf\/37MnXMzeqKxYOA0XJhWsNEWJSdZWGMOJwQTSkyUeodwQkg5\/6rzUHZkGcreW4YPfuR\/4Y2tr6OitRy0Qfnpop\/gtgeWiKqHqp\/Ktq1Y8YvlMnvnneo1Mq34jG+dITDT2tksNivlLZvx72d9Fnc+cjtqdnEBtlZZ4n6s4eS\/f3s3TOzpm0qMDGAZXHvGlqnEo63XbN8qDSWlJViwzHmd7ZwdJ++x\/HnMDyJl2\/XCCy9Iu1MSNcZlWPqMP9JOV8fTA7auA8PXAbYx1dbUMfOtKJITNSizk+Dgyp+6pgZcBS\/sMPgrlCzwnC9VGFfBBe+xo+CPM3zOOeecPqNX\/gP8EQLo1DML46prCkgkQsH7qfdS10fiE6oKf+p\/U2mr9xvMZ1yG5f\/PMN\/97nclP9hZqk6W+abdyPKAdYASKBpmM08pvaNxJO0TeN2xTdlbx7IcZDOA4wabX\/m2I1OJuc7JWNqccAE2OrVsPffW4b44tGup21snM2uUZEUBzNa2LWI3wunHXAW2fk+gFuJCax3mLoGb3akOWTOlLdyMyu0VAj9cZZZ77fBZLbFGNIZHt8LtgdicrHhqMbr9FpGcyP5Fpg\/bpArGErVOMep1IViwL1GdHK\/zA4fnrAdsT+w36CubI0pg2e4IrWyDfB\/eZ1z2JXqAGX6A0Xmk82ikdUC11cJ2y7SKAiccXNXAy2M1OBMq1ADNRq+uq\/C8xvuFcRXg8DpfltODKX6l5ITSkba2NgmvgIXh1TOYLjsW9Q4Mo8IxLT6HPwUsypeLo\/hD9QB\/7NDUuzBt9ewDSVq9G8NeccUV0kmqLz762o08D5TNgapTVOnIsvV58X\/ad2X5eg6c8R4Dhhl8ZVOt4\/Umx1xywv1uCCSc2stjggNXiW2Lt2Fbchuo9lF76dBwlqBBCKGr3lklILM9tU0WVKOqhkvUczZOza5q7EztkGPGC65VyTNoCFu3t3pc4OSxPy5DNNsON8edVX0YPabACSUnXL5+tHWbbZ7tW7UXtkMes\/3RZ7\/Da4QPSk54nef19fU49thjRb3HOkKIUWF5nx2kSnOkHa+OpwdtXQeGrgNsu2xv9NUx86wocFI4sPJ44KCvoISDgwrLMIUDubquYEPF4WCt0uM9\/lQ8hlHxeKzu81h1ShKhwDiW5yptwlExfkpyot5F\/Q\/qWbw+lFPh2GmyUGinw682Fhj\/92J8WU7mNFgXlIqQ+cvy4UCkBi\/CiW1SlJ+GY6dFrcPwGddD0ukeczgJNv1rxsb2TWhLtQtkUOVCacrWbVsEVAgt1R3VaE+0y4JsBA+qfgRKYiFU7akE0+EGgDW7KwV0CDyMty3eJivCUhrDvXcIJly2nrsY0421Woe7End5zSI54f5F3JWYi7ARTrjx32jrJsuUZcyOTaWl4IL3WNbqOts+y53ti3G41hKNY9euXSt1RHWO9FlPGI9paKfzQNeBsakDhW1OHTOviwonagDmYKsGfoJE4bEaiNVArkCDL6WgQd1TPuOwQ+GPnYX6qbg8V\/d5TR3zOp+t0uW5SlP5hfdUugfrK4NYlaZ6L+UPl57KHxVu1qxZAiYsoMJOVjeOkTcO1gnWHdYzDlbMc\/qSx2YKvsuvbB+JuAnXC8DZiCdgZ3rGBU5qOqtlV2KqSbgpHx1hgoDBYxquUsUjGw52NogqhxIVrlXSEKlHc7wJ1Xur5LgpwnVY6gRqGJeSFKpyCDycPsx7lJpwF+P6cDEXYQvtd1diGsQa2A07kwr2L4pbsAxKpxw43sjLVLUHQgSPFdATOljevMYyV8cMRzUey53tngDKdZT4cfGzn\/1MwqnOkfcYnmmq52h\/9GWl81Dn4cA6oNocfXXMMEWBEzWoTlZ\/oORkNPlAwCGcDCxAfT52jdp1LLg2DR9d2JYvs3WY37Q5Mf3omMPJaCQXEx2XMFUfaUR9NFiUrrmrDs1dgXFvfXcIdZEarFy1JNj4z0lK\/vqWJ5IqAW937A1O+Rx2egpOeU6JJAGEHSAXauMq1OqaksLQ1+1u7Nqdzludt6wDCkg0nIyGHAaJq+GktBuZhhNKWkbm9oWTGjR31aC5MyTGtwIn0aoCODFgW2mMN5yw0yNoKDihNITSFF6\/4YYbRHLCWYYMQ7sU+gpoBKC0WkdDmq4DY1YHNJwMAhbFuKzhRMPJSAf3Uo9XKnDCDpBwQvCgxEQBC5c3YPulTxBRtigMq7\/sS7td6\/IrjfLTcFIMChkkDQ0npdEIBuustORkZFITglUpwAmhg47AoYxclUSEmway\/XLpe3VN2Zqw06QbrN7o66Xd7nX5HRrlp+FkELAoxmUNJ4dGJR9pZ6Ph5PCGE9YLggmlIrQrUbBCn1DC9sv9eXhOyUohnIy0Tul4pd0n6PIbv\/LTcFIMChkkDQ0n41eRx6LT0HByeMOJsiFRtiZKZcNOUal1uDkk6xav0VH1w3gq7FjUO51mafcbuvyKU34aTgYBi2Jc1nBSnEo6UY1dw8nhDScKOAgaBA5CCq\/xeH9wQgkKwygJykTVS\/3c0u5XdPkdWPlpOCkGhQyShoaTA6uEh2pj1XByeMMJoUQBCoGDUhFVFykxUWodFYZwwjhcp0hLTkq7baty1v6hW44aTgYBi2Jc1nBy6Fb8A+mUNJwc3nDCOqDsSejzXHWIyuaEvlLjqHsq3oHUIR2mtPsAXX4TV36qvdFXxywPvQhbEehEw8nEVexidCoaTjScaDgp7TZcjH5ApzExdUABiYaTIsDIwCQ0nExMpS5WZ6LhRMOJhpPSbsPF6gt0OuNfDzScDCSKIp5rOBn\/Cl3MTkTDiYYTDSel3YaL2R\/otMa3Lmg4KSKMDExKw8n4VuZidx4aTjScaDgp7TZc7D5Bpzd+9UHDyUCiKOK5hpPxq8hj0WloONFwouGktNvwWPQLOs3xqRMaTooIIwOT0nAyPpV4rDoLDScaTjSclHYbHqu+Qac79vVCw8lAoijiuYaTsa\/AY9lJCJw4nGLqirPEt+HbFkw\/iuXPLkWVsRE1kUqEIk0IdTWhoasBoa5aNIXrR7yjb6lv+id763SHUB9pFNfYXYfmrrp9dyWO1OD+1UvQ07sdKScJ2\/Lh2h5sk\/vdGLDdYGrvWJYv09ZTiUu7jY51\/dDpT1z90HBSRBgZmJSGk4mr2MXoVBzbBF0fnDg2LMfsg5Nlq2\/rg5P67hAaOhvzgEIwqcvDSQih7snnmB+1kSZxhLbGrpA45kVdOIS6SB1WPHMbooQTPw7LcuBYLhzLhu2kYDlcEG3sdwDWcFLabbQY7VyncWjWAQ0nA4miiOcaTg7NSn+gndHwcLK4H07CDQGcEFK6agvgZOSqkVKWoLwbTggoQV68G05iIsFwLF8AReDETWo4sUu7\/RxoO9PhdDnvrw5oOCkijAxMSsNJaTe6\/cEJv+aVWmfZasLJetREK1AfrkNDV30wAHdVIxSuQihcI9d5bzK62kgD6iIEEkpNGkS1QxVPACc1IjkRtY4fD1ZnzcOJQ1Waa2g40XDSt53A\/gYvfa20+9fhyk\/DyUCiKOK5hpPSbjwCJ1QzWL64d9mcrL4VNam1qI1sFRChrQkH31BXJRrDlWiM1KIhUj9pHVU3dFRxBXYnNWjsrhFgqYsEcBLHDlHrUHXmWhmI9MRxtM2JBhMNJpO8Dmg4KSKMDExKw0mJw4llBzYQlg\/LpqNhbIFB7H7gpLmrBk1dFQGchAkmoUnrCCD1kQBImC\/N3VVo7K4SKdK74IQGsVYOjpmG43iwXWdcBidtc1LabXS4r299v3TLV8PJQKIo4rmGk9JtGOzUxDiTXy8HCCdNnbWiumii5IQDcTiEhnDj5HSREOqjtWiIcuZSLVq6a9ESrkZTuFpgjfdWrlqKeO8upLz8bB2Bk6yGk0n+xayBorT7zWKVn4aTIsLIwKQ0nJR2Iwtm6gwBJ6sWoya1HrWRCpmZ07S3QabLNu\/NQwptLcKT01FiVB8NVFot3fVo7apHKwGlu1ZgjfcUnBg0fs1LTkR6oiUn4yI1KtYgotMp7X7uUC0\/DScDiaKI5xpOSrvRFhrEUqVjOcH\/ExjE9mD5qttQk9yE2nC1TCEO7W1Gc2cLmgkpXQ2B\/Une3kLZXUwmX6m0Wroa0doVEkBp4WymcKOAy8pn7hDJyb5wktGSEy050XCm6wAOCE44XudyORm20+m0+NlstojD+OGZlIaTUoYTrnGSgm0lZZorDTYJJ2wwnmXD8GJYsfoO1Ka2oiHGacTNaOxsF9fQEcKOnvb87JQa0N6ChqCTy68DpxPXdzehqasVrd0taOVxd6Nc4yyelc\/chXjvblHrOHYanp0VmxP5ktOLsOkBWg\/Qk7oODAkn06dP7wMRQokCFN\/3D0+aKPJ\/peGk9OGEgEKjSVmIzXUETnzbgeHFsXz1HdgcXYfqrlq0xnaiJdKB5q6daNjTgqa9jSI9EUNQro5Kg9BJ5HPqcF1XI+q6CG1taOlqRQuPu0JyvTZcj\/tX3YWeXEcAJ44XwAlnRnHxNT2VeFIPTIeqqkG\/1\/j16UPCCQdXBshkMjJs9\/b2wnXdPmAp8lh+2CWn4WT8KnLxOw0TrmME0hP5gnODGSSuAwUnDzx\/N2qtCtTHGhEKb0P1zkbU72kVUGnY04TmcAuaw5PTbwq3oC7chPpIMxq7W\/vyopEqnUizTCe+f9UdiPbulKnEnKEjkhMNJxpKtMRE1wFOSHCcYHFGJ\/goDD4SbcyePRtl06ZN6wMG0zT7jnmg1Tr7ZMd+TzScHEZwkjfSdDxX4MT0e3D3U4tQZW5GdawGjT1tAiiN0Xa09WyTPXa4nD3VPZPRUWpS3V2PmnA96roa+vYc4kJ1td0NqA7XYMXqpfvCiROsc6IlJ6XcbvS7F\/9DaXLm6ZBwwsHVMAwZeKnSUWodZr7+DZ8DGk5Ku1Fx479gxo4LuwBOeN1IR7Hid7ejytqATXs2oLqrGk2JFpEIVO0tRx2NZLkZYKRlUrqGaBNqempRG69BQ6wOoVgNmqI14tf3NKAuVo0Vq5fk99aJyVeSa6dhm55W62jJgZYc6DpwYJITz\/NkJFbSEkKKMowdfoievCE0nJQ4nNjcjK5\/KnEAKJaoe1LpMO59diFqvPWoM8pRFd6KmnAFGhO1qIlsQkO8XM6rw1Wo6a7CZPMrIxWoiG0SVx3hjKbA1YS3oDpcgcpIOVY8uxhRtCPpRQfASbDB4nh8gepF2Eq7jY5HHdHPmJg6MqzkRElMlBGskp7Q\/kT\/hs4BDScTU6mL1ZkQTLhTrmV6skJsP5ykkErvxd3PzcE7kRfQYG9FXXIrqsIb0erUoC6+AdWxNahPrkdtcv2k9Ln+C\/cdoqtPbERD3tUnNqE2UYnaBOFkESJoRdILy5eyb2XgGj5sc3xWh2U90XBS2m20WG1dp3Po1YNh4WTKlCmgmzFjBjjY0k2dOlWuqXPtB\/myv3wgvhQD5JjGrFmztLhzHMWdBBMOlISTYJVYGsVS1ZOC4Yfx4G\/vwLLnb8W9Ty3Bw8+vwPIn7sBDq+\/BsicW46Fnl+L+1Utw\/+rFk9JRZbP8WbqloOHrA0\/fjpVP3S7Th+9\/5l7c\/8w94DonMlvH7cnDSRqu4Wk4Gcc6rgflQ29Q1mUSlMmQcDK0XEDfHc8c0HAykZ0I99QJ9tUJOg4TlpNCyo8hkY7IbJOUHx\/gx+Q+w0xWl0gzf\/j\/B3nD6ddy7CX3uWY5psAJYVCAcBwHZy05mch2pZ+tQWTwOqDhZDwJYxTP0nAyeCXWDVznzUjrgIYTXXdGWnd0vLGtOxpORgEM4xlVw8nYNgTd0UzO\/NVwMjnLXbf3Q7\/cNZyMJ2GM4lkaTg79xqQ7vNIrIw0npVdmup1NjjLTcDIKYBjPqBpOJkeD1B3v+JazhpPxzW9dv3V+H2gd0HAynoQximdpONGN+kAbtQ534HVFw8mB55WuVzqvxrMOaDgZBTCMZ1QNJ7pjGM+OYbI8S8OJbleTpa6X2v+p4WQ8CWMUz9JwojvRUutcSuF9NZzodlUK9XQyvqOGk1EAw3hG1XCiO9HJ2EGN9f+s4US3q7GuYzr9kdUxDSfjSRijeJaGk5FVcN0x6Hwbqg5oONH1Y6j6oe9NXP3QcDIKYBjPqBpOJq6R6A7q8M17DSeHb9nqdlvaZavhZDwJYxTP0nBS2g1Nd5SHZvlpODk0y0W3F10uGk5GAQzjGVXDiW6susMufh3QcFL8PNX1VOdpMeqAhpPxJIxRPEvDiW7wxWjwOo1965GGk33zQ9cPnR+HSh3QcDIKYBjPqBpOdKdxqHQah9N7aDjR7epwqs+H0\/+i4WQ8CWMUz9JwojvRw6njOVT+l1KAE8ey0edsE56VgmObsGwXhuOLbzk2Cl2QvyZs25Sw4+\/bwXvZbt878J3pbLnmyvsW1gP+j4Xn+jgovyAfmI+BC\/JJ3aO\/v3wzpc7wnsrXIO\/3Fy9It7\/+mLCcIJyqd\/3voJ5VmI56h\/53fPc7qTAqvvIL4\/BYXbeh4WQUwDCeUTWc9Ffawgqsj3W+jKYOHMpw4lgu6DzThWfZ4nwrhZwRQ9pOIWGlEfeBpO0jZTtw0hmYrgfDcWG7DhybEJOEZyfH3ScMpSwfSctFJu3At+LwzAT4\/pbpwfWy8q58T9exBFr4P7r8PxwHtmvtM1CNpoxLM64J20uIk\/ywfDhmGo7lSz1g2dpO3rmOgCDhhfU5gMAUXNOQY9+24LmsPynYVgK23QOXcQkujgfHzcB20lJvUo6BlJeC5ZuwraSk4VmmlIvrZCQ841l2Mng3PwnHNQSc+H6ulYNrp4Pwdn\/ZBnUxgFOWsZSz1G8ftlXg+D\/kQVvDyXgSxiiepeFED8Kl2cke2uVWanCSMVOAEUHGTCKVBsIukPSBqOmgx3DgZICUn0XS9oLB3\/FgT4Az3TSSVk7eiQNizk\/CS0WRtg2k\/V4kzeD9TM8SOOEAqOGkoK0QHgbAiWem4ZmEEw7yeTChJIpw4gRxLcuQ+wyTzfgCJ0YqAdOIBwDomvBtQksKhBbXMeC5BjwvCdePw\/EisL0uWPZu5NJhZJ1uuGYETqoHrmnBtT1x7IsMMw7TUi4ByyJ0BABlpgIAUeAZwEkg8Xs3nKT7AUXDySgoYYKiajgpaLgFoj89YOt8GU0dOJThRP1fSrROn1+\/WTMmfsQFtsV7EfMAIwP0OEDCAyJmFsk00G0BXRPk+GynF8gA6OrsQNrpAXwTGbZdy4dhpwWeCCeOlpzsR0pEyQkBJRVIkux+CVqheoySD8KJSJqclEg0CHmUuKVMA5K\/GVvum4YLK5WGm8rAN3xkWZesLmTsbcg6jej1GgE\/BKQb0OvXIutW5s93Al430mYP3FRK4mZsIOcCHqUpbgquH4PthmGYUZGM+R7gEFQoBZP+ul8NxGvB9bxKZ4DkpK\/eO04gCcqHZ1vlvdmzZ6NsgsZh\/dj95ICGEz0Iq0ar\/eLVhUMdTvq+iPNfxhyYMlZc7Ahue+CXWPzgM5h31yOYf9fPsHjZY1h6\/+NYcPejWHTfLzDv3icw974nJ8TNu+9xXL9oBXqsLHzfRdY3RBXFL\/pkwoblZmF4XjB4ajjZP5xQteUS3oIBPpAuBaoRwodtpUUdE8CJAduJi6qHqh\/eS1omEnYKhm\/AzXrwfT9Q05hJwI3DjDYjunM9ttX8DtVrH8WGV5Zh3V\/uFrfh5Xux6Y0VKF\/7CBqrnkXX9rdhxxuQs3YjY0ThxhPwUj6MmAMjmUI6YyODFCw3BsNKidpO1DV5O5n+Pmug7clAm5N+uxP+32yfCmY0nOwHDA6FSxpOijcg9TcUneZkz4tDGk5cSwZvAopBPbx09LbYkPD4lrsfRdWeDLYngNZwFs1daTR3ZdEWAVoivWgO59A0Qa45nMHi5b+E3Qv0JOJi69CbCWwQeuIm3DQ0nAwnARaJiJIymFLuYgwtkhECSBa2kwmkJpSyuDHYTjKwTbFz8LI5qT\/xZAKJZBS+2w3fa8XejldRuekRbHr7ATRsegydTb+F2\/k6EN8IJLcA8Qqgpwp+91bY3RsR2fECGiv+B5vfvhuVGx9E966XAW874KSQNTLwUoBNZ6VhOSmYfhRWOhaomiwabA802u43uO3vf94NKRpODgXyOIB30HCiQaK\/Ieu8KFZelAKcmK6DwHnS4XOA4iyd+cufwDYbaIoCtbs8tEaAtijQHgOaunrR1J1FUzeBJT3ufnO3h3n3PoZ4BoGBrpNCKhlD2vORyQDxlKfhZDg4ydsKUe1F41caN4vtBmc1cdDPwwlVNybhRCQnSTGape2HaSTFlgS5FDy7A9taX8amdQ+jeusDCO96EjnzFcB4E0itAxKbgNgmILIVCFcC0Rog2YjeRBWyibXIGa8hnXwB8T3PoLX2UWx55yF0tb0DL74H8IC0BaTiPgzTDsCkD07y0h2HfqCCCgxe+9U8NJ7ub8\/9kKLh5ADA4FAIouFED8j9DVjnRbHy4lCHE4r1FZjQyJQSE6p2aLNx4z2\/Ql0MaIgATWGgNQaEuoD6Pb0CKtsiOWwPZ7CzOzMh\/q33P47dqcA4N4eszBhJpfjuWRhuTsPJkHDiBiobJx3MhqFEpA9OqNLx8\/cD1ZjpUa0TGMnSNiltWfCTYcDbi1R4A+oqfoG68oeR6v4DkF4PuO8A9hrAfgcw1wOpzUCyGkg2AKkmwGgEzDogVQEkNwRhnA2AtQbpnleQ6vw9KtcuQ3PNbxDu2Ajf6EbWzcBj2Zo2DItT3SkxIZQEs4E4I4iAouCE05UpaZH37gOUYIaazFTTap1DAT2GfwcNJ3pALtaArNPpr0uHMpzwy1HsCZz8zBYFJ5aNlJPFvPufQnUEaI4D9d051O\/NCKA0dgPN3UB7Vw7bOzMT4tq7Mph\/7y8R9YGE6yORisPzPHheGikrI++\/f5sTL7CxmPRTiQknwaAuU3UdNf9UsAAAIABJREFUzrYJZrsImBBO8oawlJyoqdcEV04dzzoRIL0H26t\/j61vPoC9LU8D9tsiKUnHXg9gg1BirkNvagN6ja2AUYNesx7ZVC0yqSrArASMzeilqie5CUgxzCbAXAtYbwKZt7Gt7jFsXvMgdra+hrTVLbOxLMOG7\/UG0h1bQZSSoHgC2AGYFMCJTG2mBIVw4geOIKNtToaHg4kOoeGkf0DRg6vOi2LWASU+dl1XBkbTNLFgwQKUlZVh0aJFMAyu42AjlUohk8mIz7DFfIfB0wrE3H1fofl1Lih9mHvf46iNAnVdWbREIaqb1mhO\/JZIFi3duQl185f9GnssIOGnwfUzgv\/RfZfkhNNNA2PPYJZJ8GU92eu4K1IHljvtSMSWhIvYKUNY1oOMhaQZgcm1bNI+LMOFnUoi41Fi0obO1udQ8cY96Ar9DvCbgXgVMtEtgFeN3sRGwCgXAMlZlcja5cg5W5FxNyPj0t+KXrccvTaBpBogrCTKgeRWILURSG0QdVAu8RacyCuo3PDfaK37PZDugJuMIMPZRY4v66JwijFn7himi5RhwfPzdjJi8GvAcpOBBEUt0Gd6sE1CqoaTieaOA3q+hpPJ3lnp\/3\/wAXzkeVMoOeExHeFk3rx5mDp1KubMmSODKmGE1\/n1T1gZDzgR0fY+C1UF60FwqijhZN6yXwuc1Hdn0BrNoKnbQ2ssDdp7tETSoFEqDWKVYex4+3y\/AE4oKRkKTtTaHP1wQgPgsSjv0kmTcBIYkvbBCeuCyTqQFglDwggjnTPQk4iIRMo1PGQcE8juRnvD71C+5l4g+YZMDc50b0VvT72obbKxcsCqDqDDqEYAJ1uQdjYh7WyE725C2gsgJedUIGfWoDdFlQ9dFZCkqqcCiG8G3Apk42\/Cjb6M2i2PYlfLn5EzdsqMnozHhdwMmc1DiRkXcUsZwYJxnOYs0h53IJzYAiYaTg4ICw6NQBpOJntnpf\/\/sRhYCBwKNHisnjF37lxMmzYNN910k0hTCCW8p+BFnavwY+HvD04o8vZNvkcWlEzURWhnEsBJc7eL1oiL1i4XLWEPzdE0GgkrE+Dzme+GEzP\/NZyF6eTyK8TmFwLLL8LG\/1nNThqLPC2lNGlfxLwI4CQVqDr64ITbFURh2t1IZxwkeuLIOh567Ri2Nb2M6s2\/QLJrDeDUIJvcCL9nA+A3AkYt3O5ywA6hV1Q3BJVNyNmbkLO2IGeVixSFkpSMU4WcXSNwAoP2J3VAojaAlEQ1kCCobAX8CnixN9BrrMXG11cg3P4q4LTBSXYg7SaRdoIVZilB4erAnp8LZp7tV3Ki4eTQII6DeAsNJ3pwLqWOtRTeleqcQikIwYPQQVihxIRqHap3VBhe57EKN9b\/IyUkXLo+EOX78sVcCCcLlj+B+mg\/nBBK2iMuWjodgZOWqC9gQlCYCDd\/xeN9ah3DJZgEa1bQSNJ0uNR+sHiYrFJaCCeyZ1CwV9BY5\/Ghmr5SbckU8j5D12AJ+2D9EBuen0IqFYbnmsi4NICNIhVuxJt\/Xo5E16tAOgQ\/VYm0uUXgw0\/StqQiDya1Ig3hOe1NApuTysDOxCwPpClWDbKWgpMa9AGKkqCkKpHt2YhcfBNglSOXXI90zxq8\/odb4cY3IOfuQM7vgWf2yKKBXF1W4MTNimon+B8DuxMxjM0bxfZBuVbrHAQhTGBQDScaTg7VjrRU34uwoaQlBA7CipKIUHJCOFm6dCmSyWTfPYYvlLaM5f8ucJJf7VM2faMRJHX5ebUOpxIHcJIDbU1auzy0h3207nXR1u2jPZydMMd1VxYsfxydnGLqZ8SmgBDCpctlPQxZIbYQTlJ9IMa9gehEajDkjJbDt0\/ogxO3f02QvkFbVH2UMAT76NipOJBNIWd3oHL90+hoehZIb4KbXI+cVwWk65CxtiJrbkavsxkwtyBLiUeyFkiEApesB1IEEALKlsAexahDzmgQQ1mxO6HtCY1kTdqqbEFvaj3gV8KL0Fi2DrBCcMNrkdz7B5S\/swzItiPj7IbZswsZxwC47krKQSoZ2KAEkiENJxOIFcV5tIaTw7cjGssBTqc9eL1R6hylqlHnNHylISzh5JZbbumbMaDAhXAiM2nGeODsX6Zc7fC7L5zMW\/abwOakC2iNAq1daYGRts40OFtmW3d2whzBaOGyPJzQWNNJyT4uNH6VNTpo6CmSE0M2oePaLYGUyBcw0XCSX3Les\/JTb22ZQs46QTsO23RgJl2k7Qx8i7NzOtG58y2Ur\/sZkNmKTOJNwN8K39oKN7EVGbMC8GsAezMyyXWARTihoWuDrGciPuFDjGTzcEJYIXT0QYkCkwBOmFaaC7e5IZGqpKMVQXxvLeq3PIw97a8gbW2Xpe8zVkzUkbSLod0MJShKbdU3pVhLTooDC+OdioaTwQcZPQDrvBlpHSCQEE6oriF80Kdbvnw5pkyZgvPOO0+W\/VaSFUKJkraM9JkHFs\/sW7eCi1TJlzRtEGSqpY2U3Ys5y57qh5MI0NrZi21c76SzF+3dvWjrzogEhVKUiXALl\/9SJCem78v+K7Q94GZzVE3JLBTunOxqONlffeCAbbvB3jjKMDaYSpyU3YIJJ3a8V\/a3MeOcHbMN69+8H07PS0DqLWSjbwYAQkmHWysSDze8EbnEVsCllIMgwqnCedCgtCTvaHcCqyIvQSGoKElKMLsHVhV6qfIxqsWlaRzrVAr4ZLmgm7sFRucb2PT2z2HH64DemKyDYsXj8K000i6nGXPNHkIr1XeB9EQtxtYnIdJqnfHGjJE9T8OJHoD314npayOvF4QMAomCk3Q6LWBCAPn5z38ukpNPfepTyGazMn1YSUzGB074f\/WvoslOXKQJAieuwMkt9z0ZTCXu7BXJCZeu74cTDIATD23dB+L6QaYl7EO5frhhGgwz0A\/iMTzv01eSEysdLCQ2LJzkVVgEsMDWYuRle1i0C7V9QX7bggBOUiI5oeSBS8b7Zg5ZK4zObW+hofJ\/AOdN5BJrxAaE4EEY6U2q2Tk1QKIycKm8+sakvcjGwNmbZepwr12FXptwsjlY14RwwjVOZJ0TxqMEpg69ZgiwGhDASTl6zQ2AzXVQtohEpW7jLxDbswZufJvsBwXfl12VjZQLk4D6LjDJG6TL3kBqGrLeW2dkxDCOsTScTPKOaoxVCIdFZ36QeaRgg5IS\/v+EFAIKr7\/55psiOXnf+97XN4OHYRhWQcxgecb4Ks3BwvB6T0+P9CDd3d190hm+Ax2hyXfTSKUCFZJpGzJgywqbho2kBZGcVHGxtRRQ05FEeyyDpi4XzXvSAilNnRm0R3sR2uPK9W09uX7YiGbQHsvK+Y4E0LDHwvZ4L1q6M6jvsLEtBjR2ZdDeA5mS3LDbwc4EUL\/bRFNnAB9Mm9OWaV\/C+3IezsjzeLxw2RPYnQAsPwfXtRHviSKbzsCxM7LmRTA4BcuyU63DWUi+nd9Lxg02fVP5cTj6rCesS4lEQsqfG\/NRpUgY5jWutJrJcf+cFJKpGDzHlTrB3YVdLwuuGGwYEVnRtWXrk9i77beAvxmwavP2I\/npwmInQilJoSsXqUlvahMyPRsBmzsQ14JSkVyKMFMVrA5rczG2KsCqDBZjo6TFqEQuWRkY1HKKsVET2KIoKQxVRvYGpPY+j4q1K2WTQT9pI01JiahzgpWOZcdlNyHSM1miX9ogpxoHkjW9zsk4AsZoHqXhRMPJUAOdvnfw9YMDnrIdUYurcVDg4BCLxXD00UfLdOIXX3xRZvAMDK\/iqoGTZUA1EcGCjveHcnwOjW35Y7iLL74Y27dvlwGrpych6z34blZgyfFsOGK7YSOX6UUilcPC+1ehqhOo2W1hlwm0xRyE9hrYFYfACVU7BAlCRVseRggoBArCCB1hhlDC+wxLt8cEQnt8AZOaXbask7IjiWCPnk4fHSkIxNTtsrDbCI7bIjnZcJC2L6FO7uWTxa0rnkbMA+JmsGCd7zmwDBOmQXuDdH62DtU6BnzbCJZc74OT\/i\/mofKwlO+x7AkkhJR4PC4+zx966CE552JlkVgUphVDrteBmbJkefhE3ILtc1dnB7bTjd54JWrfWClSi7S5CZkkbUUaZApwzlRGrO8GE1HpONUAWuHFNsLo5NTj+mCKsVMv047hNsDqXBcAilcPP7oesAkjhBdOJabdCg1plZqIkhXOCFoHr+d51G5YCTe8Hekk12BJyyJshA+ZqcVVb72eflukvNoyuJ\/Wi7CNBhjGM66Gk4MffPSArfNsqDrAgY33OTgQTnjOAYPH\/KI988wzcdRRR+FjH\/uY3GNYDiIMR59QwmtqgFRp8euX6ShoGcxnPEIQJSds35dccoks\/HbaaaehtbVdbDNSiUCSQjjpSSXh+h5cw4FhAfOXP42GGNAczQqUtIUtbI+5aOv0EOqw+wxkG3c72B7NimvYlcKueC86EsDuJLCT0pROR\/xQh4nmvQwbQA0lIgSb7T0QaUoLwSUFNO62JBzjN+wywHgEHMLKjjgEcBjnljt\/jogD2OleWJYhe+vw699zuc5FGinbktVNbSsJ10zCMyy4ZpCnIlXJS5EGy79Sv04Q4f9An\/WN9Yb+o48+iuOPPx4LFt4qOzq7XhKm0QMjacI2fDEoplTFdD1k0z3oCv0JzeseBjKVQDqwBelN1b4bTvYjQaHaJxMvB3rbAt8LiR1Jr1ULL0obk3rAb0K6Z2sww8ethRdbL+uncJ0UWStFwKQAgmivYnMfnlfQWvUL7GnaiKxlION6fXBieVyePy5OZnHRUFrDyXgiRfGepeFED7Qc\/LQrXh5wYKCEgyoYdUzJBx0lKC+88ILYnRx55JH41a9+JYMIYYJtUX3xMh4hQ8Ur9HlvKMd4TKdQanPEEUcIoJSVTcWXvngatm\/rQNJIQal1\/EwavuXBtIFbVz6L8t05bIsDzZ0pvFnegA98+OO48Ps3CKBwtg4hpLI1igtn3oi\/+r+fxlvlbWIv0kQ1TjSDqrZoH5zQVmRbJDCi5aaBhBECCqGDcEMYqd0eR\/32pEBKy54Aehiv0wSa9tgCJgQUqpKo1tnVk4GXo2TIQiIeQ282J3BCm4PCdU4CyYkj\/xvF+ZzJo6DvcPVZ7wjGrDOsB\/Sj0agAyt\/+7d9i6rQZOOaYY3DD9T9Cd1dHsN6N6SGdpqrHg5vphWt3Y2fVM\/D2\/AHpnneQNSsCyHA4Bbga+0hO9gMnSDfAi26GnygPFltz6uEnKuDGKmQJfJiNcLlTMVU3dp1ACY1ls0lOSaY0Jq86eteMnk2A844soR\/a8ifknJgYQ3P5er47y96yE7LAXN8U8zyciOrSo81JoNpT5c+2xP5v9uzZKCve0KpTGm0OaDgp3qCkB3idl6wDHByUxIRfrQo0CCy8z99\/\/Md\/CKBwkLj33nv7jGMpOWE4DigMy0FGDTbsTHlvOKdUSByYGJfxLr\/8cnnesce+F2Vl0zFj+tE45bRT0dreIpAidTdpieRk7n1PoqqzFw17bexKpPHaphqc9rULcMa5l+DFt6uxOw40dhh4bWMjzj5\/Jk76ynfwyvo6AYZtYRc7or64jngWbV02toV9bI+k0d7tiWqIMNLS6QqU8F7LXhu7Ezns6elF8x4D7Xsd7OrJoaY9Jn7TblPWWiEQtYfTWPLAk+g0gITlIpN1YRpx+K4nah1uarcvnFhIW14\/nDjDq8XUoFWqPsudEjbWHdofUWrCa\/x\/HnvsMRBQqVo87tij8P7jj8Xi+bdi9649EsfxXCQMF4CF6rceQGr7U7KBH7wGwK5GJsHZN1SxDO5EYkLjVrMWlJTAaUTOqkeWuxH7rUjHG5CO1QHpHfAJK2atSE9yqS2AQ1uU\/Oyd\/T6DM3zWIbXnZVSsfRw5rwOOGYfJfXY8V7YzsGzuGcQp5law\/s0+cBLsc6XaJPNEw8loKWKM4ms40QOqDExaelJU6ZGCC+YtO0D67AQJFpFIBHv37sXf\/d3fiXqHy9mffvrpaGxslFauOk4FIaoD5WDDe\/SHckqFpMBIpcP1VTgwHXnEewRQyqaUYcaR03HyKV8SmxQrwVlGwM13\/hLbaGsSzaBxdwwvvrlR4OTWux\/B3St\/g8YdSXTEe3HXQ0\/ipiX340tf\/S+8uqEeLXtNvLW1GX\/zT59C2bEfwglf\/CoqW7qwM5bFqhfX4QtnXoAPffTfce5F14DAsezR1Sib9n587FOn4bszb8DMHy3AzrCH9r2WnJdN+QDKpn4AL7xVJYAT2mmIBOam2x9BIgPEaWicceB7FoxUItgbhvusiFrHkKmxrmnATdlwOJPDtMUYlHl4ODvWF5Z5LpeTekf1HgFF1ckPf\/gfBFSnlJWB7ogpM\/C\/\/+pDuHXRAnR0dMC2c\/DtCCrfvBeI\/j6Y+tvbBqPzLcDNG6nuFxzywEIg8RvhxLYgnapBfO96nP3l\/w\/vmVGG90wvwwePKsNxZWX4zEePxZ7GV5GJczXZYEXZfjgZBFCMctlc0Iu+g81vP4xcugVWqltm6FBFmbRTfbPRBsIJVXoEV9We6Ktjtk8tORkjyBhpshpONJxoOCluHeAgoEBCDRT0KcWgUwNFW1sbTj75ZDGOJThwQ8APfvCD+MQnPoETTzwRn\/\/85+X+Kaecgi996Uty\/MUvfhE8H8oRdCiZ4XTls846C6eeeqqk9X\/+z\/8ROKHk5KgjjwXhpGxqGaZMm4rp06fjtP84GbW1bbjtwWdR05lDa8RHR8LDmq31+Nr5l+KRX\/0eF11+PULbe7Ar4uOKa+fi+T+vw2lfvQhvbKxDe6eBT\/77l\/H8X97BjrCNa29cjP+85Go0bItJuP\/7yf\/AO1tb0BFNY82WZpx40jl4a1MjttbuwudO+ToW3fkQ2nYn8ZNbbsfl196MPT1ZPPnb1\/H3H\/0s3i5vQWsn1T0ZfOGci3DTkuWYs2gR5i+4BQsXzMGcW27CooVLMXferZi3aCEWLJqPRQvnYvGC+Vgy\/1Ysnr8EC+YvxvwFi7Bw4cLD2t1www2y2N+NN94o\/uLFi2UvJ246SXfet8\/H9KnTcMTUKZhWVoZpZVMxvWyagMrxx78X1103H1ayCxWv34VM9zNAphbpZCVEssEZM4NJNvKqGIalo8TEjlXi7FP+AU\/\/agmQ24mezgpcecEZePCOGwFnJ6xwJZBpFrVROrU5vw8P9+IJ9uPh2ijcQFA5kdgkymUm0Po37kPGr4FjdeUX3rP6NoJke+OqwbJysLI5IZx4gbqUcMowdDzWcDJSghjDeBpOijsw6YFe56f6KleQQkkG6wXP+UVLiQY7RYraCTFcNVZsAaZOlS9aggoXaqMLpB2UeASOAKOOB\/NVmOOOO07C8pzSGYafOnU6ppTNEDdtxnSBk6nTg3vTy8pw5JHvxyU\/uA31XcD2eA7Ne+N4a1MNTv\/6BXhrfQPO+sbleGtDCC+vqcbl18zB+sp2fPX8y\/Hqumo88fzL+OJX\/hOVTbsFVF7fUIuzvn2pwAwh44tnno8tdbtEMnLfw09i9k9vRVcS2NFl4b6Hfi1QsrVuBz578lfxwmubJFxLRwrnX\/pDgRSqemjT8sVzLkbZjPejjHkxpQzTpgaurGwGxE2biinTyjB1Shn4P80om4bp+f+5bAr\/1+HzcLC8LYXrBM2grPv\/T5a\/uj6lbKqACMFkxpQyHDn1CIEUSlEYj3Xgr\/\/XMXjhiR8Axh9FUtFLA1aCibFxWDgJVDn16LUb8etH5uDqK86Al2pAMloFeLuw+Y3f4txTT0B3O1eBbZNZQGmudZKpQ8ZQGwUOASdGLdKxDVjz6h1I++ViH0OpCe2nFHzQvqgPTmiHxM0BuaaP7MWkbU7GECmKl7SGEz2YaqAqbh1QX2VK9UIIUUCioITAsnv3bnzuc5+TQUOByAc+8AF8\/OMfx2c+85k+qQmlK5SY0KejFGUod9JJJ8n9L3zhCzjjjDNAn+H\/5m\/+BtOnHyEqHUIKB3YZxKdPwfTpU3HSZ\/4djY07cdvK1ajq4NomnG3j4NW15Tjj6xeitqkLP7j+dvzuz+ux7GdP4dobbhOpyCnnXIC3Njdg9QtvoWzqe1E27X0oO+qDcvzPJ56M19bVYfWf1uCiK69DbWsYe3vSuPqnC\/Hjm5diZ7eN7Z0m7n\/kKfz4xsWoaewQKUrZlPeibDoB5H0om3I8VjzyjNim7IhlcfJXv4vrF92LG+bOxcJFczF\/3s1YuGAe5s29VSQncxbMx7wF+etz52DRnAVYOGcR5s1dhLnzFmCeuECKoKQJh5PPTSUJvDfffLNsMDl\/\/vw+CQr3drrgvO8InBw9Y7pACaUmR00nsJbhuOPegzlzbkN4bzsqXr8DiP8WsCuCacTWVtmEbzjJSY72Jm4DvEQNls77Lu5eMhNpswnI7IIZbUDPrlpccf4ZaK54CelEfZC2Xwc\/SWNXSkqGlpxkolsBrxZvv3I7PHcLPCcMP+MhZSZh+WqWm4aT4lHCBKWk4aS4A5Me6HV+qjqgdPyEFYIKzwknNHqlzQkhREk5uJz9jh07ZMYOQUZJWugrFZFKR6U\/mM9nKMe0KK1hXPXVH9icTMX0I6bhiKOm4d9O+Fe0tDTBSRrIZgObk1AUsgNxe9jA21vq8ZVvXIRQewzP\/nEtLp11Cy647Ef47V\/WY3PtTnz9gpkCJ0\/\/4XVcPPOnaNubwq6oKz5VPXvjOTz34lqc+52rxKakrcPAg4+twk\/n3CFgsjvqieTkhrl3CJycee7F2FTdLioeqod2xzJiz9LW5YrkZMnKJ7Az5sHJchdaC6lkTPaH4VRih+u3DNiV2DddWUFUdt3ljJ3D3L5K2RyxDqg6R8NYqhRZD\/72rz+Eo488SsCEgCJwMu1IUY9Fo2EuuArXjKDqzXuA2HPIJbmYGmfUcIovV2odzB7k\/7X3JmCSHdWdb2vFIGzMm\/G8scd+3\/jNw5\/9Bo\/hgbE9Y8aAxWZAFgbDxzJiV4OE0VhGoiW11taulkRLBsZsQlJLrQUBgwRYoK2l3peqzMrK2qvXqsqtcr17LvV\/3\/\/cjOrsVnfXkplVmV3nfl9U3Lo37pIRJyJ+98SJE+EMGy9LV\/b9gD8icHLDFZ+Em4\/ByfUDwSHs79uMz3\/0XRjtfRqVQr+k5bBNhR5jvT1zwgmsXliTz2HXixtkWIdwwqnwJbsocMLyld+uwzrLRBUteqzCiXamp3pjvdS\/jx0COwHTMTSCCfdpqEhfJ4SF3\/qt38Jzzz0nAMIGlTNtjAEr\/+d9+P68F4NpeHnuRMEACW1b2CFx5tDnPve5WbU+bU7OPvvX8Oa3vAkjY4PSqPu+i6ofIJ22ceXt96M\/DcQnHYwmi3j6pb141\/mfRM9gEv+6uQ\/\/6fVvlRk6PSNp7B6cxLnnX4CnXuhBdDyD\/++\/vx\/3P\/Erma1z+zc34k\/+23tl1s39TzyL8z\/5ZcT2ZwVWfvbcXvzluR\/EM1ui6B2cwF+8\/TysvmQtDqZcGd7h\/v6kh2e29uN3X\/cW\/PhXuzGW4IrIZVx523eRsIAyncx5pVk4sa0A+QLd8YfrqtAtOw1i\/ZILLgxn\/F0stTws9fMoQ2zXKR+EEsbcCC0PPPDA7Gyds886Da84+3RcvWYt3KIj\/mKYnoBqFyYxvPObmEk\/EcKJGwsX46MjtBMZw5rpv1YUKA\/CSe\/Bxu+sxT9d9AG4+T5ZD6dij2D384\/iA\/\/9jzC9bwtmuGoxpydbezFTogdYGtUSfk4EQDy+C9kDP0dk+3fFINZ3pmWmjkyL944szaAGsS2ChOW6jcKJwslSN56n+vMMnBAsGNg5GFDg\/0888YSAyVlnnYUf\/ehHkoZ+Trgxb4zhLCHDfO3yOK81\/5t7Hy82mhKm5T3YWRl7A2pq3v52zgwaAsfp\/XLYkZdKBXHx7vjA2rseRlzcywcYz7h4bteA2JL0DKQwdNjBeR+7GF+58nYxUN0aPYh3\/d1n8ezOQdFuvLBnBL\/7h2\/BqjP\/D\/ynP3kr+H9sf17g4n986QpEx7MYOWxjX8LF7Rvul2Gbt77z73DVuq8LlHCYZ3D\/tAwBcThn1Zn\/Fnf+y6Oyrg59pdAF\/g0bNiLlAJZfkSmj5cBBJSiL+3pqThrhxLcthJoTgl19gcOTgN2JgK+bjnMYkWVu5IX\/Gyd\/tG06o+7n5GuXX4pMekqc7xVyoR0UNRCp6SJqQQ779t6H6eH7wqnEQVzcz4sL+jngxEvTV0kUcOIoTG7HX7353+Mnm25HuRCHOx3FpReeh+v\/6WOAOypp\/MzO0K29H6kD0AnARJ67E9Xc8ygc\/jn6d21C1TsI3ynA88tiFMvZOjqVeLloosXPVThRODnVYWGpfx87BaPlMFoMdm6EBXYU73\/\/+0Ewee973zs7ZGMMZfmuRktiNCiMecx0kOb8iWJqZ\/gcAhHDBRdcIE63OPuHM4S4OqsMFbkWpnMpMRL0yx7ckoWCVcVlt9yH3gQQPWRjcLKEkaQDemeJH7AxlqhgZDIQPyWEhZGEh6QDDE064nStb39eZtRwAb\/4Ibq85yrGAaL78tg\/XRMvsPR5kitD7FU462fkcAl\/94mLQCPZ0QkLQwcLmCgAk0XM+jchlNAFPt3ar7nlu3KOfk64iGE58GAVSyjkHdDPCacSi4rfysMt5eFxHaEih8doNDn3VGzmTTcHyomRAcoIZYoydN999+Gcc84RD7GJRAKuU5BQ9iviNZhGpLLuDoBKMI3pkZ9idPs9YgTLRfu4MJ\/x3MphmJdpUMwaOxhDrdCDcpbr6gwjOf483ve2\/xuvOXMVzlm1Cusu+zhQHkdxgi7r6Sl2QNzci9ZENCdzOGErPYuxyA8wMfQCqk5GtGOuFwigFGxLnbC1mBGW7XYKJwonS915n+rPI4SwMyAgcJ+\/lyp1dhpUm1OLwTA8PDyrWSHEGIBh+kaNCDsa3ofHmKbx3PH2mZ7H+Q68L93XR6NRaWPoYyWfLaDcgDD8AAAgAElEQVRWqUKGcmYCmX6ZzU+j6lVm3ddTczJK7UnSA13Tc5ZMdIz+TYCDWUJDGWOpqjhVI3gQUujNlY7SuD+eLktMA1a6rp8s0YFaVcLIpAcO85z2qt\/GqrN\/SwxeL1lzi0wxpgM3+kUh5IwkfBla4mJ\/+\/KQdXWih1xcc+cD4ufErYQeYn3PkbV1OKxT4qq6gQ\/Xt+B7FrhiccXxUKZ7e0Ie3fTXh8hO1Zjyw3KnzJl1lig\/XBGbPk\/ERb1jww\/oqKyIYr6EWhngwn9cublgOygVDgOFPeh5+nbA3YEZb6\/4LRGHalavTO09EZyUJjajlg+dq9HdPb3BVouEkPFwxWFrQDQmAiZ0Zz+9DQhi9anKoet6A0HiKdZoaoz7eveXeOkXN6GSGwc8B06xJLNx\/KAmYKru65cNJ1r7YIUThZNTHRaW4\/cREKi1ICTw+ewo+P+LL74o03rpe4TwwuEcAzJUxTMN0xvoMO\/O\/wkmTMv4ZMFAkemcTCdM1T7rO2rAdDqDbC4lwzp5rkETuPDdALlCFWvvDBf+G0rPYCxXxcCUI2vc7EsDI1MzGE3UsHcsj4MF4FAptE0ZIYyky4gcKIjzNq5IzMX\/uNqwcTs\/lKhicMLDgUxNZt4QQoYmbFlhmDYk\/QdC52770+F6PaPJijxjYLKMHcNZedaBAnDV7ffLsE62FNroWKUCXNtBOQDovp5fzyU7L55jnWIOLsGQCwMS8uxiV2tF+BvmCpQZljllxIAy9ykXvJZahuoM1yHKomRlZEVi36kiO10S1\/VW4KFcycoCfX3P3oPC5C+AWhQ+NSGy8N8xcGI0JiYOCB99qGZDQKnkeoBSH0oTNKYdQJmzbeiozY7CSbwIVAZkajDsXlRzO+dc+C93+H5EtnwdsJKAOwOHno0tBy7h2qX2TBf+ay0lLNPdFE4UTkwHqHFrZIGdADUkBgoYM28JHt\/4xjfE3uS8886TYzxH4CCYcF86jwbtiIEQwgk7Gp6fq5yYlvfk1zONYc11\/IrmMQ6BSGdecWHZedhuEbZrybGSC3ztjo2ITUN8nXAlYC62N5QoY+BQGWOZcJ+ajL5DJYxkKiAwxBNOOLuHLuszZcQmLYxnqxiZLov2g6sP9x92QWjhgoAcKqJDtaEpC9SuDCfsWW0LYYjXDky5iE+5sorxUKqCeDJA34SPtXfej4wH2EEN5bIvGhICCmfrcFiHa6g4nl1flZju612xp\/E8R+xs5sq\/bj9PmaGcUA4pB5RFA7X8baIdKRXh+SUxKObCf65ThkfX\/1xfyaPxcAZBOgbr8GZEdnwbbn4z4MdluIbr6lTrjtFmDVcNmJR6MVPYi5k8h4H6MZOPSKD9ifxf7BVj2fL0dsjqxTJctAe1\/I4QTLhqcSEK0FC22A8U+8J1dmgg6+wA3K3o2boepdRzcKcPC5xwVWVZN8kth55ivSJcLy+\/jXnB3yx+TpxAfjvTGtjnee4zjXqIXSYIOdFjFU5a0yF1e4Om799aOTCAQODgvvn\/lltuETj5yle+IqDAToN5T2jgvgGZdpYHnVO5DsfmwzVIHK8ET4ZB6KSqhjXrH0I0BcSmgOE0NSDASJpQMiML9g2lfQxmXAyl3QXHvCYM9glic\/7I\/fms2ZAmnNyHKRuwgkAWeAvcPLjAn2uz8ynDccvSWRHAfAbLE\/Di77T8koBYO\/O30+9NEGUI3zMEZwPB7Lhdd0bskspWBqgksPnpf4aVeRbV\/IuAsxM1dw8Ce48M9VSdneEUYK6J4\/SiyuEcgYsokI\/VA2GjVwLBJRwOotErDWGpTSGo7JBhJOQiQG4AyI8CuREgPyALDgbFl4DKLmQmfo4tL3wPgXcAvp2SVae5fEGxmBcYYz3iStUM\/H2yCrXM3nLqXmSPeIU1v1nh5ER0sMzHFU5a2yl1esOk79f+8majZzQgJr\/5PxvBa6+9VnybXHrppfK\/gRdqN5YCTPg+Aie2yQcr1DL4lmgaSk4Za9ZvRDQdwgmhhHAyyiGdhC8u7QknyxmOwIknKnyBE7d4HDihf5MwEFQIJpYfaolMuazI2LOlzDl7KQyUhRBWCCe+BzilCsKZTgmkD25BdOt3gPJu+NPPAH4vak4EQSH04go\/ItOAZVFA+kPhlOJiZDbQfkSCrJ8TrqNzFKAQUhhKu8MhHWpMCoOoZPoBe0SGiGqlLZhxfonIrm9ibGQzgiAL207DcbIIfAulIrVDZg0rakO4OnFoQ2MAhdo0BqMtUThZZviY6\/EKJ6aR1nhFNtRtcMhFyDDDLwQSNoLMWwIIPXTSlfjXvvY1gRHTUDI9NSfmK659ZeHBsysSxCkZO6j6MAi1DyU3wJXrf4A++jlJ1DCaroUGrhkXo8kCxtOWzL6h3clyhOFkDWvv+IFoTorlALaXg+flBazCqcKh5oS\/ibOSjsCJJ67NVXNytAYhhJIGLYodyPAYtVBlahwKk+JyPrp9I\/ZFHwLKexGk6Ml1CMhTO9KDGS7clwu9tlbzW0UbUnO2gaHqbkPZ3Y7A3SneXMvOblnkD4We+pBNBJwJNOPsQs3bjqq7Bajshp15AbD7AKc\/fJ63A4nRe9G36zb49iCCgFOl03DdHIKyLcOT\/C0h7IdwYuBL4WQuCujQ8wonCiXt6whXZt4SOAycMG\/ZYIaNpi0Lr9FVPSHFwIgBEtoItL8sPPhuJfQJIkMgdRsDz4VPD5tOgKvW\/0CcsA1M1WQV4NGEg31pF+OJgizox+nEY1NYljCaANbe8YDAScEvw\/YKMuPEc6nGJ2iVQ5sJrj571LCOgRNbVP3tz+cOln2XAOeLjxjHNav4OhBYtUPbE8okh0sqXg5VZxJ2uhcv\/vzrsBPPAm4fvImXAJs2ITHMZOkZNgo\/ybVyIrNwQtAoe1sQeNsQeNvhe7tlOAjFnnCYR+xJQjjhUFHN3YGKvxWBtRkz\/g5Zy0e805Z2wj78M2z7+VUo554BKpOw7WnRmvj1IUmCCetc+CFgNEJhbODEDGeZDwLGZp\/yoDYnHQYpCicd3Ii04at+RTfKS5SfpsFjzPw2jSD3ue4JPcNyLRcCC7UpRrti7E\/aXUbmfVw3VHNzsTQ23CGclHHVHQ+gPwUMTAHjKWB0qooDyRr2TfrYzynEs1oT1LUnSxcPJyHvN2ED+aCCkhg\/0gCyJGp8yyOcuKH63uFvMjYnntgc8Bw7q3bncefe34Njl0MQIZi4XJSSmhOCHY2JK+JtNZ\/PytIA1cBGxZ5GzZ1AYt\/z2PrMvfDyLyAoviiL9MGNgdOFa3m6tx9FNRcNh3Nk+i+1JDtQtXaFoRQO74j9CQGlPpwjmhM7ghk7IsNFNLiVdXaCHZgpPYda4VfoefYepPqfB\/JJVDnLqDgtBr20lZq1LxEtZegJ2GhNwjgsb4WTDoOPuV5H4WQlN1T629vZiRhtCeHDBAMnXIzNwEk73+F49z4CJ+zE62PzLo1H2UnVcNUdG0M4mazDySRwIAGMT1YxnqRTtQqGlykMpcL3O2wZOOHU2BIEtERrciycWHWDWBrPUksUAuPx8mVlHCOcVF8GJ+FslxBO\/DKnlGfEVww1K7WyA68wBZQnMTbwU2x9\/k6gsgVVeyvc7BbAHwBKnI0zhFq2YZaN2J1w+Mb4LunFDGfrlCL1GTjGIJZO1yJAPh7O0rH6AG83KoVfws89id2b12Nq+Gm6T4afpMdfankKCMpsvywxJmfZhca8Cidz9fldc17hRDvoldEoL305N8IJ85iAQo0JNScGTqiKPjZde8uDM1eC+rBOTWDEls6qjMDmTA1qJh46Ck7o22RfXYNCR2pDqQCD6eUKFVy5fqN4is37NfFua+CEWpMSg2+L8SvX1iFwhbN1CCf1IZ8l0qC1txwXK8+elD2HcDhji3nEWN5VhnvKsH1P8rXkhX5h6IHXtXIo21MAJjA58kNs+dcb4WWeBvzdsggf\/ZrI9GGZ\/svhnnoo0UC2D1ypmKFi9aLiRFGmlsTqDWfu0P4k2wdMDwI0gs1vB4rPwkk\/hm3P3ojkgWfgZA+gavkIrFpoS+RzSCaE\/nAIlUOngRjCHq01CWcjhWXB3xkO\/RhtJUGd+zyvwzodhi0KJ4ut5HpdZza+nVEubPAMdLABNEM2Bk4Ym4bR2JoYUGlvvnpwLB+uVYZn1+A6tfqXdAgntjeDK9c\/UDeIBUbqfk1oGEtfJ3S0FsKJj0FOKV7yQDh54AicuPxiptGxjZfDSUGGqhrhRGwtZJZKZ8hJe8v6eL+RcMJ1iMrhrC0BlLDT5rtwyItO7PxqfRkAN7SZorfdml+CV9gnXl5To09hyy\/uwIHYw0CwByhuQS33EsCFAUvRUJNSHASKAyGoCKDQP0ovKm5EAmFFZvbQJwodtmV2AxmCyYtIDT2Arb+8AalDTyGw94ldUS5bgh\/MCICwPpkhUd8Pp44TTopF\/pajbU6O5LHCSYfhx8lfR+HkeBVYjx2p0JoXi8mLRjjh9QZEGuGE8GKM+MzXm4kX88z5XsMvZbNiK99LGnPLlo6cDriuvPO7iGRmEJl0MZqrCoDEpmyMF2YwmOR0YrquX54wkqpi7foHkXKBglcTd\/S0OWBnlS04sIPqrOaE9hSiPRE\/J9QU1A1BVzScsD6HnbcngOKHkEL7o7ozPtsPUKITP8onDYtdOrSjfFioWEXUCmnAnUJpYif6tn0fsZ3\/DDv9Y6D8PKrFXwElAgb9mnBKMH2WxENnbIW9qBZ2oGLvQNnajmphF0DnbbIC8UtA\/seoZh5GdPM6HOi7H1ZyF2ruYfhBCiU\/F76PT0dx9anCdl12XwYjBk6ObbsUTk5OAx12VuHkWAHW\/+fbyWm6E8tK58JJaPgauFxXxZaOieXImS2BTQPJMtbe\/X0MFIFIIsCegyXE0xUMZYE4fZ9MVjCcAkaWLczMTiUuOAGCio98blogzysDRZfDOq74MwnhhNoT\/j6Fk2Prq0wpr2tQZLaTWxBvwQRUDo8RTsQdvPgGsSUPfStAUHAQ5HOAnwGC\/Tg4\/FNsfvpW9Gy9C6XUT1ArPYOZwvOiTUFxG1CkS\/p6sLiOzhbAe7HugG0HqtkXkT3wQ4zsuRM7nr0a+cP\/G3ZqJyrFBCquJQ4CC14BOb+AvG\/J4o3ix0ThpMNoosWvo3By4g7m2Mqs\/2tezVcGOhdOQsNXfgV7Dr+aOXOjKsM8QSmAawP\/tO572HkAGC8Ao9NcOwfonwBih8PFAGNcsTi5PKE\/CVxz94PIV4FskdOHLVQrARyL07crsNzKCeAkHM7QYR3WYWoQnFl\/N3TKF8JJTqZmE044RHYETkKDYw4FynAgVwCmVqVUgF2cxkw5D1SnkJ54AXu33YNdL16P+J7rMTW6Hm7qO0DxccD6GZB\/Fsg9DTe5CXb6IWT2P4jBPd\/EtmfuwO4Xv4Op8RcAbwJVN40y7YWs+swiB+GQXTmDUpCqL7fA32E0JMfGx2+nCOAS6nYm1BoajSbzQ21OWgwXzd5O4eT4gjzfTkjTaf4dTwY6GU7EENKmp9jQ9oRw4ltlVEp00AbcsOERXP+Nn+Dym7+Hr938PVy27nu49s7HcM0dj+NrNz+EK25\/WNbf4Ro8Sx2uuON+XL7uXmTdWrh4nUXX9bYsXseZRrmiX4eTkkyTdR2jOWmEk5Uss+HQhhiG1mFDOmwnnFbMdZYIcHTG1wgn4lnVIsiWUa5w0UAPthXCrVdyYeXS8Iv7gfII3MILyCYex\/6Be9G7bR22Pn01Nj91LbY8eSu2\/ew29D5\/ByIvrcfQnm8jOfZTePndmPEPIHDSsAv50NOvRfsRrupd5SQdWdTPDQpwgsyi4UQgjEs3KJw0iw1Lc73CyUpuqPS3Hw8sWnGso+GE9gVmhobD2TueLIxXtXJid5L2ajhglZF0PTiYQc4PkPUCpC0fWbeCggdwgcDlCHy2CyDvlZHLp1HxLZQ526LgwnMAx4fYS9AT7JFhnXBRw3C6bLiWUSvKuDvv0QAndlj2MuxFeajbnHB6OYdzJHjh8gY8JkNjdoBcKi9aDQQ11LyKLKxYtVxULRtBMQ+\/kEVQmgbX5qk6GVS8DKr+NKpBGvCTgDMBWIcBawo1KyXpfCcHzy\/Ar9gouiUUHRtFxxengIQlampoMzTrlr6+Xs58fNYYKDGxwsnSsEXTT1E40Q66OxvZzi63boITalDKTgk1K43AmUaWNgcArJojhohezYLjF5HNp1Gu0ostp6AuT2BnlLNcTJdKqFZclJ08vFweZauMwAOKdk08xCqcnLh+mNlNRoMmjupEk1bXKrjWkanEAifhcdG02R5q\/gyoLbHzFpxiSfyOVJwANXcGMz5QcYDAAXwbMkzIqeoF20PRKqBUKsDLFeFni\/DzNvySK1PYCQ7U2pScnDxb\/NFw9WA6zCM0cSE\/cR5XDrU2CidN9\/0dfwOFkxNXYu20NW8WKwOdDCfieI2NuxOIMy7anZRtqkLyoPZkuujArkEctOWprqdztmIBxekCKvSFYR1xKsffuZTBcmzRjNhlH75fgFNMApUAFbsCqziDohXaJ9DrrQzpyLCO0ZyETucWW6anynWhrUWYP6EvGHrRDcT+iNolQgKXBSi6eQEFDuHwOAGCQ0BGe0GNhjlH+w+r5KGQtwUiLDtAyfJDKKEWxC\/CKVtwK45MB\/a48jGv5wrC9dWxZVaQR\/g1NiR8VgmWVYcTanfMooX12Hh9ZRxqA4\/EfFejLQlj\/gb68gl9m4T5oH5OOhZSFE6WqwMOG0w2eKxE82v4WGmPXgacXxYrLZw8r9g4MT8b4yMN1pHj883zxaXreDhhZ2L7AidUl9MBW80qylRRGpXm+ZXqeKj6Hmb8MqpuGTW3JsMnHAY6eRksLs\/mc0\/KetFxpdPkgn9uMYMqDRsLNqqcrVMMxHhSbCTEwVjoiE3sKjhtesV7iDXLKRyBE8kbOxAD2XDoK4QTy83LsgaUA4ET+pOhR1aLC0R64JRjBkKK6wXwg4oEsxow85qQaFaD5orQ\/L\/kVMPAexgX+owtW3zwcO0n3yUs0VDXDEFadVuT4lGAslA44X0VTjoWR45+MYWT9jWkJ2psZQqnWxJDPu7ToM9M6zRfJ2GDEY4Jz35J2IF8qZixYPHgSC+OKywc9yup7oiL3kIFQNjY1cfRqRY+KsyCS\/vKvqPhZNZDqvlCpZyFs3jY+cx2LnVwDmWREG3ksX35dqI603jcwDjL1wxN8B3NKst8\/zB9CKVybvY3L++7N\/6O5d830M48MbLAfXOc8fHzy5QB4xOl4fEwHcHCBGrsvDDItcc+q\/E9jr23SXvs8YX9r3ByNAN07H8KJwsT7JNVxPmekwa17lqb+1SbNzayRzoDvpuprGEsDa\/5IlmBMb+IwwbRNJxhPDuO3vCl1djIyhfabKPb\/jLvDjhpfz7Mt05oOi2LpZIBhZOOxZGjX0zhZLkaheMN65gvg5fH5stDvhZdzkxgCMeBV1LMhoXAJl9kDTFVyybMfpk51DSFQdTQsk\/Ia3+ZK5y0P4+Xohz1GadeOSqcHM0AHfufwkknVb6XQ0k4vS8cAw7HZ4sCJoHjyvTPlRYTythhHAGQUEUcggndk9Oa30AJ98so1QNtKehcKtRGtbfcFU7am78KDZq\/i5UBhZOOxZGjX0zhZBkqecNXvnSqNNKTYIuxl1jLi8+BOpR4Bdhe6L2RvhvozTG0W6nbqtTXvlgpx8LhGjOeHcaSf\/V8NXByBEpqsFwTKgonS6A5WmzHodctQ3u0wuRB4eRoBujY\/xROlqExqC9NboYhQjA5AijhEE5xdkofp\/U1BjHunLWfOI62ZQWdmzWOlamFYR4e0aoE4umS2hIJbkU0K6o5WQaZX2EdoEJW58qYwknH4sjRL6ZwsvSVyHzZH+lE6zYU9WnBYcNWh45jZppQqxJ6b+SiXCsviDGsW5TVZumjgaDGmLN0TGg0hD3aL8LSTSXVYZ2lr1cKBJrn85EBhZOjGaBj\/1M4WfoKfRSUmGl1s9MfT\/Y+IbAQSsJ1L1ZeTDATo+C6DwsBE4cr7HKoqw4oJ4AWwovnG03TyfK5+XMKJ83n4Xw6Gk2j+bxQGVA4aTOOECqq1ao8hXGtVkOlUlnwUxVOOqNys8KEs278WX8Sxq9EY8yK6Poe7ICxs+Ji\/mZOtabLbVnwjYu+NQQCSuCUYFt5eHZevIQGvgXPLcIqZVEOjFOn9pa7wkl783ehHZKm1\/IwMqBwsmBMmP8F5XJ5FkzMVb7vy64BFnN8rljhZPkrLTvbI1ODG+GES9gfG+it0Z4dwjBDGSsm5m8XZ2CBLD7GfS6tLqEOLTPlABXPlUXsPKsAKz8twIKaL9BCnzKmoWpXrHCy\/PWqXWWr9+3uslU4mYsKWnS+xAWw6hoUAygLubXCydJXtNAJW8PCabNwEvovOdbxWuP\/7IwbNQUrbz9cHZWLgLn1JdyPBbhsJge7xPVCuEhZFZ5lo8TF4VxPIHApPIYqnCx9vVJo0DyfjwwonCyEEBaYlkM4hBKzBUEgu8z0hW4KJ0tfoY8HJyw7E1jBQrfPjXHo\/lnsLeoaArOa6EqKCWd0U37EqPjIvrgvtwMEfk3WWbGKLqycjapXkbVjuIoq19aYTwPWbBqFk6WvV82WmV6\/MspM4WShlLCI9BzeIagwmG2h2hOFk06okI2rbZbgeKWjFssqBUWUynkJXDxLFuGyK7JQl7fCYi5SR3sbq2wdCT7ziz5iwtk4JduCZTnw\/TJKBQt2yUMlmJGYK\/DqVOJOkHl9B4Wh5ZEBhRNDC22IafjKDOZGrQkBg0M7hJWFbgony1NBwvVhjGbEml29kyBSDHL1MI18OS0hV0mBgf8XvDyKbmlFBv525oHJD5Mn+fJ0mGd+AV7VRSqTFId2lG+CisCKWwHhRuFkeWReO2PN906QAYWThVJCE+mNzYmJF3IrhZOlbzA4lThc64WxE64qHJRAMCmU8yhUsshXM8hX08jVksjVppCbmUBu5rCEbO0AVnKYxn5MYxxhfLCeLxPIVRLIl1Nwajl4KCFTSIkWyi97sJySzGaz7dD9fbsbSR3WWfp61e4y1fufGmV6UjhZtWoVNDSXBwQQalAapw8TNBa6KZwsfYVr9HMSOlJz6pqTooDJPz94F+7ZeDvu2bi+IdyOex66Dfc8dBM2bFqHDZuuX6HxOtwtv595sA73PLwOGzbejA0bb8W9D96Gex+4AxvuuxmlmTTscgHZfBrlqodSqYBytVJf0bj9Za5w0v48VljQPF6MDMwJJ+xEF9OZLrTzPRXTE+xalX8KJ0tfwVk5GDi8MAsqriPr5VhBFndvugWx\/E70pfZiMD2AeLIf\/YkY4oleDKZ6EU\/11ENkxcWxdASxTBT9mSgGUnsxlOzBUKIPA4l+xJN9kh8EuFz1EIpuQfJYFgu0bBAYxC5lCVypK5wsfb1aTEel16y8clI4aSMVKZx0d4WSBfpkdV0z88STGSRcYdgKMrjrkXXoKW1DNL0X8cwA4olB9LPzTUQxmIoKrBBYVmKIpfoRSw8gloljIBnBUCKCoak4BhJxxJJx9GV6RKuUndknNjmcchzYPhyFkyWZpaSdfXe3TSuh\/BROFE60MTzBF7rCyeLBSuFEO7+V0IHqb2yfnCucKJwonCictFy7o3DSvkZbO0TN25UgAwonCicKJwonCie0c+F6SK4rNi9XXnmlTAZg7HkeLMuaPcd0YhdzArlZCR2H\/kYFpHbLgKmLjM0+n7l69WrWzdYZdLaRATr21q3MPzWIXfrGQId1dFhH4WTp6127Oz29f3eUqQEShZM2II7CSXdUghM1VgonCicKJ91dh09Ut\/V455erwkkboMTcUuGk8yvAyRophROFE4WT7q7DJ6vfeq6zy1bhxJBEG2KFk84W\/rkaJ4UThROFk+6uw3PVcT3fueWrcNIGKDG3VDjpXMGfT6OkcKJwonDS3XV4PvVc03RmGSucGJJoQ6xw0plCP9\/GSOFE4UThpLvr8HzruqbrvHJWOGkDlJhbKpx0nsAvpBFSOFE4UTjp7jq8kPquaTurrBVODEm0IVY46SxhX2jjo3CicKJw0t11eKF1XtN3TnkrnLQBSswtFU46R9AX0+gonCicKJx0dx1eTL3XazqjzBVODEm0IVY46QwhX2xjo3CicKJw0t11eLF1X69b\/nJXOGkDlJhbKpwsv4A308gonCicKJx0dx1upv7rtctb9gonhiTaECucLK9wN9u4KJwonCicdHcdbrYN0OuXr\/wVTtoAJeaWCifLJ9itaFQUThROFE66uw63oh3QeyyPDCicGJJoQ6xwsjxC3arGROFE4UThpLvrcKvaAr3P0suBwkkboMTcUuFk6QW6lY2IwonCicJJd9fhVrYHeq+llQWFE0MSbYgVTpZWmFvdeCicKJwonHR3HW51m6D3Wzp5UDhpA5SYWyqcLJ0gt6PRUDhROFE46e463I52Qe+5NDKhcGJIog2xwsnSCHG7GguFE4UThZPursPtahv0vu2XC4WTNkCJuaXCSfsFuJ2NhMKJwonCSXfX4Xa2D3rv9sqGwokhiTbECiftFd52Nw4KJ6c2nJjGr1gsIggCMOYxz\/OwZs0anHbaabj22mthWdbscSNztm3D7Gvc3fVcy68zy8\/UT8Zmn2W1evVqrGpl59qGvr\/jb9nK\/JuZmcGFF16oDaKzdBVJ4eTUhhM2dGz0GBNICoXC7P9XXXUVTj\/9dFBzQjghjDQ2kNqhLV091LxemXlt6htjs09ZUDhpAfoonHR3pVI4ObXhhA2eARPCR6lUgu\/7EhNKzjzzTFx++eXSMBJQmLYRVLTT7O76reXX2eVngEThpAUwcuwtFE46W\/jnapwUTk5tOCGIcCjHQAcbQTO8c8UVV+Css87CZZddJscaNSdmfy750fPdXf+1\/Ja3\/BROjiWKFv6vcLK8wt1s46JwcmrDCUGEQ6LdJUYAACAASURBVDlGTji0YxrEtWvXis0JbU94nGlMrHDS3fXalLfGnV2Opi4yNvssMx3WaQGkKJx0tvDP1TgpnJzacELY4FAOYwZCB2GFGhVqTFh\/r7vuOjneKCsKJ91drxvLUvc7tywNkCictABGjr2FwknnCv58GiWFk1MbTigDBjRMQ8hhHoLKRz7yEYGTu+++WwDGnDfXzEd+NE13138tv+UtP1PnFE6OJYsW\/K9wsrzC3WzjonDSKjjpw1CCoR8DiThiyTj60hFs2HQ9sjP7UHQLcOwAge3DsexQU+GFxqrNluHJrieY8Dy1J9wnlLAhpNHrm9\/8Zpxxxhn47ne\/K+eoTTHpjVHsye6t57q77mv5LX\/5tRVOarUaOAXWbOVy2eyi8Zw5Xq1WxfiMicx1bBS48UXNcV5rAo9VKhVJb67hfbiZmPscX+Y13MzzuG+OmbSN5yRxE384FZH3P\/befJf5bvxt3Hifiy++WFTOVD0bNTQbTA2Ly4N8Pi9yY6aQMk\/Nl7N0Vq4N13bg+2X4XhWFYujvYqZcQdaaxB0PXYee0jb0ZXoQzwxgIDmEocwQBlMxDCQjiCcX37nz2liqD\/3pmNy7Z6IXI9lhuefeA3swmB7Anv27cdA+gOhEFCPZEen441P9GEoNovdQDyJTvehLRhFNROQ+Y\/lhxKYi6E\/EMJCKIz4VkzCWH5X0Q5k49h7YheH8kDy7mfePpfrRlw7DYDKO4WS8Dif96E8NIJaJYcOmdbAxielSEp4XoOJW4VguisU8XL81jSNBgvDBmB2O+QpjbGCEcsA0rPuZTEbq26\/92q8JnGzevHlWJlgXKR+UF6bVDqw1ZaT5qPl4PBloK5wQFtipsiIbgGCDYACA50xo7Kz5otyY1gCH6aRNzPPs5E3Hz\/\/NM+Tihj+8DzeT1gCPuTf\/5zlznPvmHRpus+BdozlpvNA8k8e4f7Jg0pjrP\/WpT8l78Xfz\/RobWt0PjaYWkg+UC3ZalBted9ddd0nHk81mJX9r1TI8h52lhVLRRaU6A3ZktaAMK8jgzk03oNfaLnDSn46jf2oA\/Yl+xBNRDKaiLYGTgek4hvMjIJxEJyIYzY1IGJ4eAgMBYiBFUNmD8dwYCCej0yMCMiOFYTDEM\/3YfXCXgMdh95DcJzbVh6HUQAgoyX70TUYFeA45+7H38B4BmtbBycBx4WT9A9eI5sQK8nBdH74VwHcrcBwLjleSMjheozXfYyxT1mnWF7Y53OcxgqfRfvAYy9\/ACfd\/\/OMfy0wdztZheVNO+ExCCe\/F\/3mP+b6HptPOV2Vg4TJg6ipjs898bIlB7PHAg5X62M102AYieN7ss7Fg4MaGgRvTm\/P8nw1N48avG6ZhegMk5ry5jo3VsedMGr53KzbCCd+DzzGxASD+P9fG92A68z6EE\/42\/i7TuDI\/NSwuDygL7Hwo8BT+b3\/723jNa16Da665Bul0GlapAKtYQhBUZjUnuVxuFk7ufvRGgZPYdC8Gs0OIJwYRozYiEcVwJtY0nFA7MpQZFA0JQWF\/aR96Du4VTcmu8V0YyQxj99gu7C\/sQ2yCsDGIvsNR7BjeLoBCmDFaFl7bdzgi5\/flxzGYHJjd57XUblALQ41KdKIHo7kQfBYLKEdrTo4PJ\/c8ciPSlVG4VYKIB6\/kz8KJ64eajmYbdUIHy5iBdcY0dLwvy591h+fYHhBKWb9e\/\/rXi73J3\/zN30gV5XVGVhjz\/2bfS69feGelebay8swAiamzrKuUgZbASWPne8MNN+C+++6TQ+xw2UmbjpoV3oCCOcaE3GdaNhx8QW4GVLhvOu1j7ycJ639MesZseLiZZ9x0000yXZBuqt\/61rdiampKnsc0zIRmt1e+8pVHQRR\/p9n4zvMJTM903Disc2yBmYLTeHGaE5aJafTYSf3+7\/++dEznnHMOrl57JfLZnGhOrJKHciXUArolC3knIZqTvcWtojkZyg1jKD2CeJIalEhLNCcEAwIKoYGQEjkcak8+vPrDWPWbq7DqtavwJ2\/7L9g2uFXgZDg9hIvXXoS3ffCv8FzvswIvI5khPLX1SfzX9\/2FQAv3\/\/0f\/J+4\/Tu3YWAiJoBCTcuXrvwirttwDXbv2wUO73D4Z7FgwuvmAyf3PnpTaHPiZUVzQjhxbbqRz8MLFgecjaDOOsHyJcw3Bh4nYDDwONsXpiOcbNq0ScqfHxa\/\/OUvBVzYbvC8aRz5P9sQIzcar6xOU8t7acqb9ZR1zvRtpv61BE4MPLAi06nRj370I+lkTWfLfwyUyIk6fLDRMJu5h4l5nC\/JjcfYsJjNpGGDY\/YZGxgx1zDetWsXbr311lnouf3227Fu3Tq5FTOjFRsbuMbfZ0CJ79SYByd6lknDmPf5\/Oc\/L7+FjaMpMI0XDiUmzwgjzFd+XTNPWS7f+c53pHOiMeSZZ5yGV7\/qHKxZcyWmM4VZmxO7UEQZJdz1yDrsKWxBJLVn1ubEwEk80dtU584OXmxHDvSIlqN\/MoY947vxwc+ej9VrLpw99uBTD+DP3\/Vn2NL3EoYTQ7hozZew6uxVuPt7d2EkOYy+A7341c5f4r0ffQ92DGzHz7f8DH\/0p3+EN7\/jTegd3Yv44X70H4rikuu+gju+exuih3pxwNof2qQ0YTMzHzi57b6rkMcB5Oy0aKfcogfPKaNUKsAvN98AGlsitgdsM\/g\/AzsXHmP5Ezp4jG3Ov\/zLv4hX2LPPPhtvf\/vbJc309PQsmPAeBmS0g2q+fDQPNQ9PJgNsp1nnTHvNfaZvCZyw0zVgcP311+P+++8XzceWLVvkAZdccokYnb3zne+Ur5Q3vvGNsp7Fk08+KZ03O44HHnhgtrP4gz\/4A\/T390tfTsM1XkcAuOiii\/DhD38YY2Nj8rx9+\/bhDW94g5z74Ac\/OKsRYSfPRon3JSgwNhDzzDPP4AMf+IA0WHwA0zW70aiOGxs0AybcbwSqkz2D78eN78jrv\/SlL80WFhtTFpaGxecBOybKJ\/PQdFKsCL\/zO78jcnjaqlVgePWrfwPnvOo1uOzyNSIfvu2IQezXH7sJEXvHUTYntP8YSPa1RHNCIKE2hIGg8ugvH8Hr3\/qfsSX+kvzP8xzaueTqr+D6u6\/D0NQgLr3uH\/HJiz6BN\/7VG\/C\/n\/8J9qXH8NjPH8O7P\/RuvNT7En7x0i\/wng+\/B+d\/8nx86bIvYX9mHLGDfVh92edxy\/+6GcPpQbE\/4ZBQuzUn33riNkzXxlH0sgIndt5B4NHeK7Q5MY3SYmOWrdF4EEBZzuYY6w\/rIRu7AwcO4Nxzz5X2gi7rf\/u3fxuHDh2Sc0zf2IDyXfg\/79V4XPe1o1UZaK0MsK6xnpn6b+pcS+DEdKq8ObUSGzdulM72hRdekIZg+\/bt0ul+4QtfwLvf\/W4kk0ns3LkTf\/7nfy6dwNatW\/Ge97xHGgFeePXVV4NDMdxoF3DzzTdLY\/Pggw8KjAwNDclXMIdotm3bJuno6fFzn\/ucwE4jFLDjN5oJdvyPP\/64pDPW+uac3GSRfwhOHM7iuzLw3bnKKUGN+3TwdLLAa5lvTM\/9N73pTbIQGf\/n72J+aFh8HlCb99WvflXKgGupsGz4P4GWZUcwOX3VaVi16nSccforcOZZr8ArXvEK3HDNtZjMjOP2jdcKnMRzUdGcxCbjYpw6lO7HULqvqc7daE4IH7QjYaDG5MtXX4x90+OiJRnPjKFnbC9GUyOiAeH\/1Jxce+d1+Pr3Nwh8TOQO41dbn8H7P\/IB7I7vwZPPPoV3\/u278My2X+Ft738bXtjznMDJl752IdZ\/7w5ED0UwXhgDDWbbDSerr\/4Y\/vGGz2LNNV\/F2rXX4MrLrsLVV12HK69cgyuuulxkneWy2MDyZaCXVy7kx\/Jlvfnyl7+MT3ziE\/jLv\/xLvPa1r5UyZXkz8INnYmJCGkQO87BtoGbFgCw1bEZzqZ1RazsjzU\/Nz0YZaCucmC9\/QgE754ceeki0FS+99JLACEGA52688UY8\/PDDggDxeBwf\/\/jHQcNDAgIBh2nYSDz66KPSwJCgPvShD2FkZETOMy01J9Sq7NixY\/bevIZfQH\/\/938vBo58gNGU8N4GVgYHB\/GOd7wD+\/fvl3doBJdFcolcRvUwGzwOEZjGr3HfHDtRTFsYBnOeswfMPqcpm32Nw45lofnAPDy2PKjtMvchnJx95ll45SvPwapVZwqkyDWrVuH\/+n\/+Ha7+1qXYmd0MAyd9E5w6HBfNSauGdXr2752dhUM4oa0Ih2I4hDM4OTC7fyC3vw4ZXxQw2dz7Iv7ir\/8rHv7JJvz0mSfx3g\/9DbZFtmPz7hdx7nnvxM7YLqz\/X+tx3sfPQ\/+hGFZfdiFu\/tZNoDaGRrdmJtBiAWU+wzp\/\/bE\/xapfX4VVZ63CaaedgbNPewVOk3xehdPPXFyZmrIzMcursa6wPrHMTb3iPgHlfe97H5566qnZYR+2MQZIuE9NC7WpbDB5vLER1X3tVFUGWi8DbYUT07ETBMywDvepEfniF78olZ0AQS0Ch3y4DQwMCGjwa4WQwKEMNjSmE6Gm4eDBgzImTE0JN44Lf\/SjHxVYIZwwPRsfqmi5\/8d\/\/McCHnwWNwIK34Mb78HzRovDhsekkZ0m\/hAm+NV2yy23CIDxK46aDsIYv+JOpjXhOQKd0bzwWn7p8cuP+4v9mtTrjnyJs2xYHnRVzn3mLcuF2jqRnzNOE+0JO04DJzSUvW7t1TgwNSQ2J\/RzEk3vFc0JZ+u0cioxHZaNZUdlCIcaDWpNvnjFagxMxDGWHpWYdiXUnBBWjM3JTffejOHECB598jF8+IK\/x4\/+9ccCJ3sG9uLnL\/xC9qlFiR+MC5w88JP78eUrL8Zt375VbFnoI4UGuIsFE143Hzi5+Pr\/IZqTy676R9GcfO3SNbhm7fW49NL\/2RLNCcuT5WrKlrLPfbZF9PzKj6Wenh7RtprhPXYybBQ5DKQdTus7HM1TzdP5ysCSwAkhg53sY489JmDAIZdPf\/rTMiTDRoFwwiEfpqM2hJoTqla\/9a1viT0JYYKBmhMOc3BWzcc+9jFJS5hIpVLibpoaEELGZz\/7WUnP+3Hjl4\/Z+IPN\/Ti89Gd\/9megtsakZTqjqTHXLDYmGPFZ5p6N9zFam8ZjJ9o39+DvohEfN208m6\/kLAPzNWw6JH4h\/97v\/Z6A7emnhUM7Z531Cvz6q1+LNVdcJRo4ztYJUGw7nHCKL4dzCCn0X\/L4M4\/hje94gxi2UntCSCGQ3HTvjbj2zmsEWC786hdw6zdvw0hyFHuG9uCjn\/kIPn3RZ\/DXHzgXBk6oOdkW2Yr+A\/144unH8ZZz\/xQf\/NR5Aid8Fn2pLMWwzjcevwVT3iAqoO+jqkwlxgyN5Muw3XC14Pk2ZMdLx7aBdZ\/njLaDQzJGC8LjLH+eM8M1PEZZYJrj3VOPNV\/vNA81D+cjA22FE9OpUkvBL1IO3RAC+LVijDt5jsBBzQn3qTkhnFBzQpihsSt\/CIdnqHol5DAdtQ\/USHCfX0B0N81rabfyrne9Cxw6YqPzxBNPyHW8nmnNNjo6CvoxiEajAiM8ZwBlIeBg7ne8mF\/f3AxQcN\/kidnn\/ycKfB+j7WH6Cy64QKCE78ehrPkUsKY5cUNAmwIGVgLmM0F5w4YN4BRwgiVn6\/zGq38dX\/3q5cik87Cd0IC27HrIFA+3HU7oj4SAQmAgpNCnyYc+\/3f4wuWfD\/2YHIrgied+iN\/9f\/8Dtsa2yPCMaEC+davs00D2V9ufxn98\/X\/EOz\/4Tryw5wU8vfVpfOBjH8Duwd0YPDyIseSIaE04w4fDOpx6TM+z9Brbbs0JZ+sUcQglP4dCoQQrZ6NUIEg4sJwjqwU3I8OEEwaWMQPvRfAg3BtgMedZ\/uZYM8\/Ua09c5zRvNG\/mKwNthRN2qKZzpSr1Bz\/4gQACZ8bQCNbMiKH6lV4Z2RlT+8FFtwgZDOeff750FG9729vAWTw0ZuNXDjt8GtESANavX4+\/\/du\/xfj4OB8ptiec+UMV\/Ote9zoQRMxmwOP73\/++3Jd2IcaWg\/Bz+PBhSWre21y3mPhVr3qV\/F7zTDaK\/I0EoUZIOdm9+R68huHSSy+VBpYNa+MXv2l4NV7YtGLmrSkTyhSBmPJCMKEdwhVrLkc2Mx12nCUPlu2Ke3NqTqqw2w4nBBNqTMzwDuGEkPLhL3wIq16xCqt+YxX+7ev+DZ7Z9SvsGdkN2qD8z2suwQ1fv16Gejj0s3d0F+767p0ye2dz7wsyrfjc888VmBmZGhKbld3DO\/CWd\/8pbv7WjYgcpAO2EXFx3244+eYPb4WFidmpxKgAdokrBDsylbhV8szGsBFACCG8N8ub5c7z5pjRmLDOzrcR1XTa4aoMtF4GWEdNvTX7zOeWzNYxnTI7Unau3Mwx0+EaCGCjwO3YTpsv1XitARqmZYPCjTN83vve9yKRSMj\/\/AHcGtNy36Q3zyQkMPAZjc81QCA3aeIPO7nGzTzj2Oeb9zg25rXmXXiOMwz4roQTFhrzTMPi84CySA0UDbOZp9Te\/eZv\/iYuv\/xyOe46lqytY9suqhXA9UJ\/GYHjylRi+jlpp80JHbAxGLf1XFuH6+LQrqVvsk9m1hjNigGYXaM7xW6E04\/pBTY2EQ4L0dHaIeugwM3h4iHxmTKaGsLefXsEfuhllmvt8FnD0wMYSDXn4XY+Nid3bbwOyWBYNCeyfpEVwLEIDrYM6zQr26wjbAsYs3wJIryn+d+0CaxTpnPhORPMMY1b3\/FonmqeziUDrJesi4zNPq9pCZywczUdLvdN50xIMB00wcMcN+l5jOcbr2VDYo7zRTk9mFoPak7+8A\/\/ULQjTG8ApBFMeF\/zP5\/F+\/Ae3EzMjornzHMa30kSLuIPhwe4MYPN7+VzzDvO55b8TWb7zGc+I+9uVM+MNSw+Dzikw41lQzngkI64rbcs+aouB564r2fHmcuWULLCL2wO6\/gzhbZrTrjeDYGEU3u5T3Cgl9jR3CjGC+PgsI9ZS4eGswQNQghD74EeAZl9xXFxqMahGrqo52ycyMFeHCjul31eFx7rkWfQELZvsndJ4OTbP1mPTHUMXo3u4QOUspbACTUndF\/frGyzIWNdY51m3Hg\/ljeBxcAK6yjTM405N1fjqee1g1UZaJ8MsB62DU4aO1buG62J6WwNABgQ4XGmaezIzT3YwPC4ucakZWzAw1zHNLyOgSBiYIAxj5l78Jy5D4+Z\/3nMpJEEi\/xjNCfH\/gZzf\/OOJ4pNOr43KwHtdIzWhPnU7JflSr+eHZEZImT+Uo44XGg6MsKJY9FxVxmuU5ZhHaaveD4KbrLtcBIu+jeEbWPbMVocE8jgkAu1KbvGdwqoEFp6D\/ViLD8mDtkIHhz6ESiZjqNnYi94Hy4AGDm8V0CHwMPrxnOj4hGW2hiuvUMwodt6rmLM0O5hHa5KnPCHRHPC9Yu4KjGdsBFOuPBfs\/LJsjLaEtOJmHuy0TPlzEaQx03dolywfplrNG5fB6R5q3l7IhlYEjgxnS87WwMABInGfdMRm47cgAZf0ICCOWdiXsMGhhsbF7OZaxthyNyD57jPwOczmHOMDQSZezUTG4NY877mvUw8171N\/ph0F154oZAkC9N86Z2oYPX4\/Co95YeyQzkjmDDPGUseW0UEHr+4A+RzFjw\/BOdSLg+nkl0SOIlM9cqqxBwm4aJ8DIQJAgb3abjKIR5ZcHCqX4ZyqFGhr5L+dAxDuUH0TvbI\/mCaflj6BGp4LTUpHMoh8HD6MM9Ra8JVjGOpVjphix93VWIaxJZwGE6FEGGJQaxdorbDhevPr\/xOJuesy8dr4MzXGGMDMAQSk94MAZ3s3nqu+fLRPNQ8PJkMHK\/uMn3LhnVMx7oS42M1J83kAQGHcHKywtRzra3snmvDc2iP4MGxA5mtwzymzYkVZNoOJ81oLpb7WsJULD2AWCZ0SjeU6MNQIjTujSXj6EtHsGHT9eHCf25B8jewfdFUCXh7R+xAVK5bK9ean5qf3SADCifNEMMc1yqcdHcjoHBCTcviwtFwEsFQIoKhqbgY3wqcZHoa4KQExy5D4aS760s3dHj6jt0jYwoncwBGM6cVTrqnIhyv0VI4WRyYEGgUTrpb9o9XH\/SYlulSyoDCSTP0Mce1CifdXZkVThROlrIx1md1d3uh5dfa8lM4mQMwmjmtcNJaYV3qyq9wonCy1DKnz+vuNkPLr3Xlp3DSDH3Mca3CSesEdTkqvcKJwslyyJ0+s7vbDS2\/1pSfwskcgNHMaYWT1gjpclV2hROFk+WSPX1ud7cdWn7Nl5\/CSTP0Mce1CifNC+hyVnKFE4WT5ZQ\/fXZ3tx9afs2Vn8LJHIDRzGmFk+aEc7krt8KJwslyy6A+v7vbEC2\/xZefwkkz9DHHtQonixfMTqjUCicKJ50gh\/oO3d2OaPktrvwUTuYAjGZOK5wsTig7pTIrnCicdIos6nt0d1ui5bfw8lM4aYY+5rhW4WThAtlJlVjhROGkk+RR36W72xMtv4WVn8LJHIDRzGmFk4UJY6dVXoUThZNOk0l9n+5uU7T85l9+CifN0Mcc1yqczF8QO7HSKpwonHSiXOo7dXe7ouU3v\/JTOJkDMJo5rXAyPyHs1MqqcKJw0qmyqe\/V3W2Llt\/c5adw0gx9zHGtwsncAtjJlVTgxLXhOJ4EW2IHgWPDCjK489F16CltQyS9F\/H0IOKJQfQn+hFPRDGYii16Rd\/FrgTcSddx5eFYekDCQLIPQ4m+o1clTkdw9yPXIzuzD0W3AMcO4Dk+HMuGbZfgeMz37pYffX8tP5WBxcuAwskcgNHMaYWTxQtmJ1Rq17HAMAsnrgPbtWbhZP0jN8zCCTvj\/qmBOqAQTPrqcBJHPLnyAvMjmh6UQGgbSMQlMC\/6UnH0pftw18M3IEM4CXKwbReu7cG1HThuEbZbhCN5390y1AlyrO+gMtSNMqBw0gx9zHGtwkl3Nwpzw8l1R+Ak1R\/CCSElEW2Ak8UPjXSSJmSh7\/JyOCGghHnxcjiZhm3bcO1AAEXgxCsonKjmSLVnK1gGFE7mAIxmTiucnHpwwq95M6yz\/hHCyRZEMnsQS\/WhPxELO+BEL+KpHsRTETnOcysxRNP96EsTSKg16ZehHQ7xhHASEc2JDOsEOemEDJy4HErzSgonK7hj6sYvfX3n1rb3CifN0Mcc1yqctFZYl7ryi+aEwwx2IOFlNiePXItI8UVE07sERGhrws43ntiLgdReDKSj6E\/HVmzg0A0Dh7hCu5MIBpIRAZa+dAgnOeyXYR0OnXl2JdSeuK7anCiYqNZkhcuAwskcgNHMaYWTLocT2wltIOwAtsNAw9gGg9jjwMlQIoLBxJ4QTlIEk\/iKDQSQWDoEEubLULIHA8ke0SK9DE5oEGvX4FpluK4Px3O1c1rhndNSf4zo8zqrvVY4aYY+5rhW4aSzhH2hjY8YZ7KDmCecDE5FZehikJoTdsSpOPpTAyszpOOIZaLoz3DmUhTDySiGU70YTPUKrPHchk3rkJs5iKJfn60jcFJVOFEoUTBVGYDCyRyA0cxphZMuhxMzW+REcLLpOkSKWxBN75GZOYOT\/TJddmiyDim0tUitzECNUSwTDmkNJ2MYScQwQkBJRgXWeM7ASYnGr3XNiWhPVHOinbN2ziteBhROmqGPOa5VOOl+ODFTiTmkY7vh7wkNYrO4c9MNiBS2I5rqlSnE8ckhDE0NY4iQkugP7U\/q9hbG7mIlxWZIazgxgJFEXABlmLOZUgMCLhsevkk0J0fDSUU1J9oxr\/iOeaFa3lMx\/bzghH1wrVaTrrhcLktcrVbn6Jr1tMJJN8MJfZwU4dgFmeZKg03CCSuMbzso+dO465GbEC3uQv80pxEPYWBqTEL\/oTj2Z8fqs1MioL0FDUFXVtwHccSWHMRgYgQjyWGMcD85gFhyUIxiNzx8C3Izh2VYx3XK8J2q2JxIQ6tO2LSDVkhb0TJwUjg588wzZ0GEUGIAJQgCJY955IDCSffDCQGFPjjEEZvnCpwEjouSn8Odj9yEHZmX0JuIYmT6AIbThzCUOID+iWEMTg6I9kQMQekdlQahKyjm1OG+xAD6EoS2UQwnRjDM\/URcjkdTMdy96RZka4dCOHH9EE44M4rDaTqVeEV3TKeiJkB\/08L6g5PCCTtXJqhUKtIVz8zMwPO8WWCZR\/+8opMonCxMGDur8lrw3FKoPZEvOC+cQeK5MHDy9cdvRdTeg9j0AOKpcfQeGEBsYkRApX9iEEOpYQylVmY8mBpGX2oQsfQQBpIjs3kxwCGd9JBoTu7edBMyMwdkKjFn6IjmROFEoUQ1JioDTqilFueMbvhRGH4kOli9ejVWnXHGGbNwYVnW7D53dFjnqOw47j8KJ6cQnNSNNF3fEzixgixu3XgNeqwd6J2OYCA7KoAykBnDaHZc1tihO3sO96zEQK1JbzKGSCqGvkT\/7JpDdFQXTfajNxXBXY+sOxpO3NDPiWpOurne6Lt31kdW95bHnJqTUqkkHS+HdMywDjNft7lzQOGkeysGZZwL\/xmDWKcBTni8VM7griduRI+9FdsntqI30YvB\/LBoBHomd6OPRrJcDDA9vCJDf2YQkWwU0VwE\/dN9iE9HMJiJSBzL9qNvuhd3PXJ9fW2dadHQek4ZjuXrsI5qDlRzoDIgbcKcmhPf96UnNtoSQooxjJ27i165KRROuhxOHC5Gd8TPSQgotgz3FMsp3P7o1Yj4W9BX2o2e1C5EUnswkI8ikt6O\/txu+b831YNIsgcrLd6b3oM909sl9KY5oykMkdRO9Kb2YG96N+569DpkMIaCnzkGTsIFFvULtLvrj5afll8zMjCn5sRoTIwRrNGe0P5Et5PngMJJd1dOgglXyrUtXzzEHoGTIorlSdz62BpsTv8U\/c4u9BV2oSe1DSNuBH25reidfgGxwhZEC1tWZEz\/L1x3iCGW34b+eojltyOa34toD5uPFQAAA2BJREFUnnByDdIYQcFPyZdyYFfglQI4lnqHbaZR12u7u93R8gvLb044Oe2008Bw1llngZ0tw+mnny7HzP8ah\/lyvHwgvrQC5HiPCy+8UNWdS6juJJiwoySchF5iaRTLoZ4iSkEK9\/zwJqx\/\/FrcvvF6\/PPjd+HO+2\/CvY\/chvX3X4d7H12Hux+5Hnc\/ct2KDByyufNRhnWg4evXH7oRGzbeCE4fvvvh23H3w7eBfk5kto6XrcNJGV7JVzhZQhnXjlBBplNl4KRwcnK9gJ5dyhxQOFnORoRr6oTr6oQV2YLtFlEMppEvp2W2STHIHRNPy3mmWakhX2b+8PeHecPp17LvF446ZruWwAlhUIBQO2f9CFEZWPEyoHCylITRxLMUTpYTTvTZnfp1pe+lsqkycGrKgMJJE8CwlJcqnJyaFVAbVi1XlQGVAZWBl8uAwslSEkYTz1I4ebnwaoXWPFEZUBlQGTg1ZUDhpAlgWMpLFU5OzQqoDauWq8qAyoDKwMtlQOFkKQmjiWcpnLxceLVCa56oDKgMqAycmjKgcNIEMCzlpQonp2YF1IZVy1VlQGVAZeDlMqBwspSE0cSzFE5eLrxaoTVPVAZUBlQGTk0ZUDhpAhjafSmXCyCUMHD7whe+AK51xEUYuaSAVspTs1JquWq5qgyoDKx0GWBfxzzwPA+5XE6WzOGyORdccAFWtbvz1fvPnQMGTEiRX\/nKV5DP52UBxkKhoHCijppUBlQGVAZUBk5JGSCUcCsWi+ACgAQVQsqll16qcDI3OrQ3hVlc0Sy8aDQnLDRqTwgsGjQPVAZUBlQGVAZONRkglExPT4MjCOwLDaB86lOfUjhpL3rMffdKpTI7pMP9z3zmM0KRLCwK4kpX++nvV9W3yoDKgMrAqSkD7OdYthwlIJjwI50f5pdcconCydz40P4UhBKzXXTRReDq0ByLo3pLK+WpWSm1XLVcVQZUBla6DLCPY1\/HPs9oTZLJJD772c8qnBgoWK6YBWM2qrU+\/elPi4qLBEnNCQtMg+aByoDKgMqAysCpJgPs+zi0QzjJZrNia8l+78tf\/rLCiQGD5YxZOGYjMVJ78slPfhKrV6\/GhRdeqEHzQGVAZUBlQGXglJOBT3ziE\/iHf\/gH0ZTQ3pL7F198sfR\/\/z\/2LC6z7SjQDQAAAABJRU5ErkJggg==)\n\n","47aa8773":"#### Encoder\n\n(Refer to https:\/\/github.com\/fuzzythecat\/awesome-spacer)\n\n1. Encoding and Embedding character by character\n2. Use 4,6,8,10 Conv1D to extract meaning between words\n3. Use Bidirectional LSTM to understand context meaning\n4. Reduce dimensions with TimeDistributed (Dense) to preserve the information of all time steps as much as possible\n5. Final Vector Output","2e75edea":"## Feature Extraction as simple","833dc715":"# Summary Data Split","c9c81ddd":"Deep Learning Approach is doing better than ML in this data.","e9e40005":"F1 Scores of 'False' are bad. Accuracy is just to original distribution of class. Therefore, approaches using conventional ML seems to be not optimal way.","02954c26":"Thank you for reading.","ccca786c":"## Implementation","c98a622e":"### Train","96c4f5af":"## Plot train data","440fc542":"# Split Test Data","92148719":"Both shape of Vector_1 and Vetctor2 are showing like kind of symmetric. It means that the two encoders are doing same manners.","bcc25619":"# Train and Test as Conventional Machine Learning (and Simple) Manner","f34a8e13":"#### CharEncoder","a72159d5":"This is my first article in Kaggle. Thanks for finding, and hope to enjoy.","ad2bbd32":"# EDA for TRAIN Data","a2af325c":"## kNN","3dbb5b2a":"![image.png](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAlkAAALRCAYAAABoG7byAAAgAElEQVR4Ae2dO7IUS5KGaYGXChvoHbCEQTosAGHYASvADGUUZAZDZYSRsJav0K2M2WgIV7zCCFirjchVEFBr7E\/KD15BPTIrwjPj8aVZkZWZER4en3t6\/RVVp7izY1udwN\/\/\/vfd06dPd3fu3OEBg6wcUB6xQcAToL5QV0u9tlBf\/J113fM713Wj17UEVAB1A2jPBoFcAsolNggYAeqLkWBfggD1JZ8iFTqf4WwLFMDZqGg4kwBFcCaoAZpRXwYI8spTpL7kA0dk5TOcZYECOAsTjRYSoAguBNZpc+pLp4HdeFrUl\/wAILLyGV60QAG8iIgGVxKgCF4JrqNu1JeOglnZVKgv+QFBZOUzPGuBAngWDxczCVAEMwE23p360ngAK3ef+pIfIERWPsOTFiiAJ9FwoRABimAhkA2aob40GLTGXKa+5AcMkZXP8KgFCuBRLJwsTIAiWBhoI+aoL40EqnE3qS\/5AURk5TP8xQIF8BcknAgiQBEMAluxWepLxcHpzDXqS35AEVn5DA8stFwAP3\/+vHvy5Mntj2O+fPly9\/3794P5LTn4+vXr7sWLFzvZrWF78+bN7uPHjzW4UswHimAxlE0Yor78DFMN9UX1UXVS96EeuTXz5+zqeEZ9yY8DIiuf4a0FFcC\/\/OUvTf7QqAmsT58+3c5HoiSnaNRQBG0ymosKBiLLiLBvjUAPAqu3+qJ6YjXFBJcdt5Zfx\/xFZB2jsuwcImsZr5OtWxZYmpSK37Nnz3YSRrZJeN3c3NyuRKmNbjo9THxZYTERo2t6bud1rNUx2fLndN4Krq5pxcu\/I7Rr8sUEoB\/XfNa59Lz5r72NKZ\/06KkAan6aO1v\/BFoWWIpOr\/UlzTzVF6uN6bUWj6kv+VGjQucznFauWl3BsulLXElkmSCy87b3gssLF3tuhUXF1GykK1kmdGTTtzMRZQJI7czeMRtqd8of8\/fYHpF1jArnaifQusAS3xHqi+bpa1zteTXHP0TWHErn2yCyzvO5ePUf\/\/hHsx8RHpucBIxuLD1MLKld+g5NIklC6M8\/\/5z2JpC8KEqfS8SpnzYTZzr2gknXzLba+OdTx\/0\/p\/xRn1MbIusUGc7XSqAHgeXZ9lxfVKvSTwP83Ft8jsjKjxoiK5Oh\/pdyFcIeN180fHE0EaaC8uXLl0lkqa22VFjZF9\/tnaz1tb3sSmSpndpo88IqFVNTg73oMxu2v1TgEFlGj30rBKgvbdQX1Sz\/prSV\/Lrkp2orWx4BCObx6+Y7MRIzevjNCyZdk0hJN78ipWu+z6nnqY1zIssLLt\/vlD++TfockZUS4bh2Ar28yPVcXzS3S2\/was+zU\/71kn+n5rfGeURWJuVekjD9yE5YfPFIr0uw+I8LL61kyZ76mFCTPb3zU79zIuvYuLJx7Lx9j+tUSNVPc+pp6yX\/eopJybn0Et\/0fhWjHuqL6levAksx6iX\/St6TS20hspYSS9r3lIQqhBI+mpMeafFQQUmvnVvJsmu2jG7HZsMEj8Y99XGhcPtxvZDy51NfkzBNh4isY1Q4VzMB3Su9bD3WF9UUq2e29zWq9dj1lH9bxaKfO3gjgiThRuAZdiJA\/vWdCMS37\/jWPjvyLz9CiKxMhiRhJkC6ZxEg\/7LwVd+Z+FYfoq4dJP\/yw4vIymRIEmYCpHsWAfIvC1\/1nYlv9SHq2kHyLz+8iKxMhiRhJkC6ZxEg\/7LwVd+Z+FYfoq4dJP\/yw4vIymRIEmYCpHsWAfIvC1\/1nYlv9SHq2kHyLz+8iKxMhiMmof5K6NWrV9Ovtmfim37Swf7K0GzZX+zYXyXaef3ulv6KUMz9X\/DorwzVZ8RtxPwbKc4jxpf6Uk+Gj5h\/pekjsjKJjpaE+hkGCSwVwtzNxJQXWXpuAkriyX6awX7+wdqqrxdWeq72o22j5R\/x7ZsA9aWu+FJf8uOByMpkOFoS+lUjEz4mlsTCC59TaH0\/tTfhpPb+2FauNKb\/9Xi18wJMxyXf\/Z7yu8bzo+VfjTGI9Gm0+FJfIrNpue3R8m85ocs9EFmXGZ1tMVoSSgSpEGozseRXntKP+M7CS0SV2UvtS4RJRPkfLNXxzc3N7Yqa+pZaYbvkc03XR8u\/mtiv4cto8aW+rJFV88cYLf\/mk5nfEpE1n9XRliMlYSpkTBTZSlS62nQUWHLy1MqVmnn7x1auvMhSe1+gk2G6PRwp\/7oN4pmJjRRf6suZRNjo0kj5F4UYkZVJdqQkTEWUiSBbeUqvz0HrRVZqz47nrGRpLETWHOK0aYkA9eXl7co59WX9zB0p\/6LoIrIyyY6UhKfeaZYSWQqFF10qqvriu+ynBTZd2bK+5ktmWJvpPlL+NROUgo6OFF\/qS8HEKWRqpPwrhOwXM4isX5AsOzFaEvrVIltpMmGTCqE5JL2oUnutWvnveM3968K0QM8Zu4c2o+VfDzFbMofR4kt9WZId8W1Hy78IooisTKqjJaEElQqhtnMia67gSkWW7OqcuKZforeVLV0zIWbh468LjQT7nghQX45\/XEh9WSfLR8u\/CKqIrEyqoyXhkhWj33777fav\/zIxX+zu3wFfbNxRg9Hyr6PQzZrKaPGlvsxKi9UajZZ\/EWARWZlUR0zCOatGKpYfPnwo8qvwl0LkV9cute3t+oj511sMz81nxPhSX85lxLrXRsy\/0oQRWZlEScJMgHTPIkD+ZeGrvjPxrT5EXTtI\/uWHF5GVyZAkzARI9ywC5F8Wvuo7E9\/qQ9S1g+RffngRWZkMScJMgHTPIkD+ZeGrvjPxrT5EXTtI\/uWHF5GVyZAkzARI9ywC5F8Wvuo7E9\/qQ9S1g+RffngRWZkMScJMgHTPIkD+ZeGrvjPxrT5EXTtI\/uWHF5GVyZAkzARI9ywC5F8Wvuo7E9\/qQ9S1g+RffngRWZkMScJMgHTPIkD+ZeGrvjPxrT5EXTtI\/uWHF5GVyfDp06fTr5MrGXnAYO0cUP6x9UuA+kJNWbum+PGoL\/m1BZGVzxALGQR0Q7NBAAIQiCBAfYmgis0lBHiFW0KLtsUJUASLI8UgBCCwJ0B9IRW2JoDI2joCg49PERw8AZg+BAIJUF8C4WJ6FgFE1ixMNIoiQBGMIotdCECA+kIObE0AkbV1BAYfnyI4eAIwfQgEEqC+BMLF9CwCiKxZmGgURYAiGEUWuxCAAPWFHNiaACJr6wgMPj5FcPAEYPoQCCRAfQmEi+lZBBBZszDRKIoARTCKLHYhAAHqCzmwNQFE1tYRGHx8iuDgCcD0IRBIgPoSCBfTswggsmZholEUAYpgFFnsQgAC1BdyYGsCiKytIzD4+BTBwROA6UMgkAD1JRAupmcRQGTNwkSjKAIUwSiy2IUABKgv5MDWBBBZW0dg8PEpgoMnANOHQCAB6ksgXEzPIoDImoWJRlEEKIJRZLELAQhQX8iBrQkgsraOwODjUwQHTwCmD4FAAtSXQLiYnkUAkTULE42iCFAEo8hiFwIQoL6QA1sTQGRtHYHBx6cIDp4ATB8CgQSoL4FwMT2LACJrFiYaRRGgCEaRxS4EIEB9IQe2JoDI2joCg49PERw8AZg+BAIJUF8C4WJ6FgFE1ixMNIoiQBGMIotdCECA+kIObE0AkbV1BAYfnyI4eAIwfQgEEqC+BMLF9CwCiKxZmGgURYAiGEUWuxCAAPWFHNiaACJr6wgMPj5FcPAEYPoQCCRAfQmEi+lZBBBZszDRKIoARTCKLHYhAAHqCzmwNQFE1tYRGHx8iuDgCcD0IRBIgPoSCBfTswggsmZholEUAYpgFFnsQgAC1BdyYGsCiKytIzD4+BTBwROA6UMgkAD1JRAupmcRQGTNwkSjKAIUwSiy2IUABKgv5MDWBBBZW0dg8PEpgoMnANOHQCAB6ksgXEzPIoDImoWJRlEEKIJRZLELAQhQX8iBrQkgsraOwGDjv337dvfgwYPd+\/fvp5lbEdSxzus6GwQgAIFrCFBfrqFGn0gCiKxIutj+hcC3b992d+\/e3T18+HD3+PHjnUTWo0ePpmOd13U2CEAAAtcQoL5cQ40+kQQQWZF0sX2UwOvXr3f37t2bBJZElh461nk2CEAAAjkEqC859OhbmgAiqzRR7F0koHeb9+\/fPxBZOmYV6yI6GkAAAhcIUF8uAOLyqgQQWaviZjAj4N9tsoplVNhDAAIlCFBfSlDERgkCiKwSFLGxmIB\/t8kq1mJ8dIAABM4QoL6cgcOlVQkgslbFzWCegN5t6svu2rNBAAIQKEmA+lKSJrauJYDIupYc\/bIJ6N3m8+fP+S5WNkkMQAACKQHqS0qE4y0IVC+y7K\/P2P\/4Kzw4wKG1HNiisM0dszWW+Mv9Tw4c5sDce32rdk2IrK3gMC4EIJBHQC8INW+1+1czO3yDwNYEWrh\/666Au930Z\/5bB5LxIQCB6wjUXgRr9+866vSCwBgEWrh\/EVlj5CKzhMAmBGovgrX7t0nQGBQCjRBo4f5FZDWSTLgJgRYJ1F4Ea\/evxZjjMwTWItDC\/YvIWisbGAcCAxKovQjW7t+AKcOUITCbQAv3LyJrdjhpCAEILCVQexGs3b+lvGkPgZEItHD\/IrJGykjmCoGVCdReBGv3b+VwMRwEmiLQwv2LyFo5pT5\/\/rx78uTJwX+OrER59uzZ7uvXr6t48+nTp2l87b9\/\/757+fLl9NDzkpvsf\/z4cZHJHH\/8vBYNSuMwArUXwdr9WxoY6st5YtSX83xau9rC\/YvIWjmrrAguFR8l3VxDjGwxzzXmVTIOI9iqvQjW7t\/SHNnivkt9XOM+3GKea8wrZcnxeQIt3L+IrPMxLH71UnGwG\/nDhw+3K15ekFl\/JZceam\/buWuyYX3evHlz2zd9Z3dp\/FN2zAfttSKnlTk\/ns6f88\/6l\/Qn9cNY2Rw1Fxvv1Eqin69WIDUHbWbDWP7Hf\/zHtBr44sWLnR7W9lh\/80t9bdPzUz5Ymxb3yoGat9r9W8rO7jHl3bHN8pb68nK69y\/x8Pev3evqo83uY6tzdt5sqi\/15VgWljvXwv1bdwXs8MdI5xZBewH2L752U1sB9ddSu2pjL\/R2zdtUcqoYWBHQR4Z6bgXCt7UX\/3N20tvG2pqv6bH3z\/ct5U9qJx1P8xOfV69e3QpO74eey2cJJnE39qc42XjG\/FJ\/HzuzbcxTP1o+rr0I1u7f0tin91na\/9z9bXlo96zP0dSuv5\/smuWv9tQX6kuaexHHLdy\/iKyIyJ+xaQVJyeEfVqCsCFqh88VM1\/yLuB\/Gt9N5K5iym16zMbQ3cZCKh2Pj65wVT43h7Xhf9NzmecxO6p\/vu9Qfz8P7k45vx2rj\/dN8bO7eD\/\/c5u3b+rHUNvV7Sf\/Ulu\/b+nMxq3mr3b+l7CzPNS\/\/oL78IJnep3bvHatTOkd9WZqB67Zv4f6tuwIOvJJlYsDf6P55msoqorbipGu5ImvO+FagrK33yYq9Fa9z\/vl+p4qgjeEZ+Oey4f2x5\/6FRs\/NH7WXTzpntr0f3p5EmHhqb4LM7Fvf1O9L\/S0+8idlk\/rR8nHtRbB2\/5bGPr3v0v5p3vp7yD9P+6U5avmr82k\/P0Z6X\/hrGsP39c91LW3rfUrnec4\/36+UP+ab8sc\/NAfb5JOuqe2xzWxQX47RmXeuhfsXkTUvlsVapcUhNWw3nt2YvvCk13xf307n0yLob3ZvZ2nROWXH+6Ln6TzP+ef7lvInHd+PoefGQPPx4tS384X7kl\/pddk519+u23e41LbHrfYiWLt\/S3Nibt5TXw6\/HnGMh2rWqXo3lzP1ZWkGL2vfwv2LyFoW0+zWc2\/OYze9F05yxAuX1O6xa\/ZCrr0Vj1QcmPg4Nr6Nof7Wz+ykYKyt\/NCWHnv\/fF+ze2rFyPczm3Pm5fsZR43xP\/\/zPxMLs+F98X2Myym\/Ur9l51x\/XTebpxh6X1p9XnsRrN2\/pXG3e0K5d2yznDt2f9t9YfeCz9\/U7rFr1k97y+n0vjg3vo2h\/tbP7KRzsbY2z\/TY++f7mt1T97HvZzbnzMv3M47UF08+5nkL9y8iKyb2J63ajavk8A\/77P9cEZLRtL8Vy\/Sa2TNHzK7GvLYIypaKifnt7dg4trdiprZW0LzvqX9pP+tjfts8fTFTH7uezkvXrNiZv96Gztmx5nHMH99f129ubm5XvWxcs2HzNb\/T8dP+\/vqplTS1aX0T55q32v1bys7fY5b32lt+p3mb3k9pf8tv+eGvmT3zz+xqLF8X0vvC2pnddHzqy4\/fS0w5pRzF\/Vx98tepL5al2+zrroAdfidrmzCXGdWKrAqhtrRAlhllHCtWJPWi1OtWu4ip3b9e8+LYvKgvx6hcf476cj27kj0RWSVpDmDL3qXqxUkPE1wDTL3oFI1jz+8yBax2EVO7f0WTrgFjdl9QX\/KCZRypL3kcS\/RGZJWgiA0IQOAogdpFTO3+HYXKSQhAYCLQwv2LyCJZIQCBMAK1F8Ha\/QsLDIYh0AGBFu5fRFYHicYUIFArgdqLYO3+1RpX\/IJADQRauH8RWTVkSkM+2Jcp7a+Dclw\/9hczspf+hZGNYWPrxvJ\/3SRfev\/ugTFobV97Eazdv9bineuv3ePUl1ySY\/Rv4f5FZI2Ri8VmKQFUQtBYMdVN4n\/2wP7CSEXWntuX6\/VlTmur5+aH2bJ2xSaLoWwCtRfB2v3LDkBjBqgvjQVsY3dbuH8RWRsnSUvDm5iRwNFmIujdu3eT4FHC27Vz8zI7aq+HCSf1UZG1VSq\/0vXly5dpDLMvEaa+9o7Xi65zY3NtXQKKUc1b7f7VzK60b1YX7B6nvpQm3J+9Fu7fuitgA38C3l\/anp6RFT0TNnZsIskLpNNWfvyIngrpv\/71r0k4WX\/1ScWSHf\/++++T+LLVKhvbjuWTibNzY3NtXQK1F8Ha\/Vs3WtuOZvc09WXbOLQ0egv3LyKrpYza2FcVPyV1WgTtnWd6\/ZK79s61lMjyvl0am+vrEKi9CNbu3zpRqmOUtH6Y6KK+1BGfGr1o4f5FZNWYOZX6pFUjL2SsCPrVJH\/90jQiRJb5cmlsrq9DoPYiWLt\/60SpjlGoL3XEoSUvWrh\/EVktZdTGvp56p2nCJr1+yd1jIku27GO\/Jd\/JWjr2Jd+4XoZA7UWwdv\/KRKENK+k9HPEmjvrSRi7M9bKF+xeRNTeatLv9oruJqnNF0AskPT+2HRNZZlMF167bePrYwD5a1Dn760LZVnsTZ8fG4tw2BGovgrX7t03UthnV7n2739NjL8KoL9vEqLZRW7h\/EVm1ZU3F\/pjose9IRBRBTd+KqW4gG0vnrbDqfCqo1M6LrooxDuVa7UWwdv9GShbqy0jRLjPXFu5fRFaZWA9jRe8ybTXp0qQlwl69ejWJo0ttc66b+LJ3wDm26FuWQO1FsHb\/ykajfmvUl\/pjVJOHLdy\/iKyaMqYBX+zdplabzm0SPhJYElrRm3xhFSua8nX2ay+Ctft3HfV2e1Ff2o3dFp63cP8isrbIDMaEwCAEai+Ctfs3SJowTQhcRaCF+xeRdVVo6QQBCMwhUHsRrN2\/OYxpA4FRCbRw\/yKyRs1O5g2BFQjUXgRr92+FEDEEBJol0ML9i8hqNr1wHAL1E6i9CNbuX\/0RxkMIbEeghfsXkbVdfjAyBLonUHsRrN2\/7hOECUIgg0AL9y8iKyPAdIUABM4TqL0I1u7febpchcDYBFq4fxFZY+cos4dAKIHai2Dt\/oUGB+MQaJxAC\/dvEyJLIHnAgBxoMwdqruPkVJs5RdyIm+VAzfVFvlUvsmoHiH95BHSjsEEAAhCIIEB9iaCKzSUEeIVbQou2xQlQBIsjxSAEILAnQH0hFbYmgMjaOgKDj08RHDwBmD4EAglQXwLhYnoWAUTWLEw0iiJAEYwii10IQID6Qg5sTQCRtXUEBh+fIjh4AjB9CAQSoL4EwsX0LAKIrFmYaBRFgCIYRRa7EIAA9YUc2JoAImvrCAw+PkVw8ARg+hAIJEB9CYSL6VkEEFmzMNEoigBFMIosdiEAAeoLObA1AUTW1hEYfHyK4OAJwPQhEEiA+hIIF9OzCCCyZmGiURQBimAUWexCAALUF3JgawKIrK0jMPj4FMHBE4DpQyCQAPUlEC6mZxFAZM3CRKMoAhTBKLLYhQAEqC\/kwNYEEFlbR2Dw8SmCgycA04dAIAHqSyBcTM8igMiahYlGUQQoglFksQsBCFBfyIGtCSCyto7A4ONTBAdPAKYPgUAC1JdAuJieRQCRNQsTjaIIUASjyGIXAhCgvpADWxNAZG0dgcHHpwgOngBMHwKBBKgvgXAxPYsAImsWJhpFEaAIRpHFLgQgQH0hB7YmgMjaOgKDj08RHDwBmD4EAglQXwLhYnoWAUTWLEw0iiJAEYwii10IQID6Qg5sTQCRtXUEBh+fIjh4AjB9CAQSoL4EwsX0LAKIrFmYaBRFgCIYRRa7EIAA9YUc2JoAImvrCAw+PkVw8ARg+hAIJEB9CYSL6VkEEFmzMNEoigBFMIosdiEAAeoLObA1AUTW1hEYfHyK4OAJwPQhEEiA+hIIF9OzCCCyZmGiURQBimAUWexCAALUF3JgawKIrK0jMPj4FMHBE4DpQyCQAPUlEC6mZxFAZM3CRKMoAhTBKLLYhQAEqC\/kwNYEEFlbR2Dw8SmCgycA04dAIAHqSyBcTM8igMiahYlGUQQoglFksQsBCFBfyIGtCSCyto7A4ONTBAdPAKYPgUAC1JdAuJieRQCRNQsTjUoRePv27e7Bgwe79+\/fTyatCOpY53WdDQIQgMA1BKgv11CjTyQBRFYkXWz\/QuDbt2+7u3fv7h4+fLh7\/PjxTiLr0aNH07HO6zobBCAAgWsIUF+uoUafSAKIrEi62D5K4PXr17t79+5NAksiSw8d6zwbBCAAgRwC1JccevQtTQCRVZoo9i4S0LvN+\/fvH4gsHbOKdREdDSAAgQsEqC8XAHF5VQKIrFVxM5gR8O82WcUyKuwhAIESBKgvJShiowQBRFYJithYTMC\/22QVazE+OkAAAmcIUF\/OwOHSqgQQWaviZjBPQO829WV37dkgAAEIlCRAfSlJE1vXEkBkXUuOftkE9G7z+fPnfBcrmyQGIACBlAD1JSXC8RYEqhdZ9tdn7H\/8FR4c4NBaDmxR2OaO2RpL\/OX+JwcOc2Duvb5VuyZEViQcJSwbBEYlEJ3\/0fZz4xbtX7T93PnTHwKRBKLzP9p+CTbVK4xoiNH2SwQJGxCIIhCd\/9H2c7lE+xdtP3f+9IdAJIHo\/I+2X4INIouVrBJ5hI1GCUQXqWj7udij\/Yu2nzt\/+kMgkkB0\/kfbL8EGkYXIKpFH2GiUQHSRirafiz3av2j7ufOnPwQiCUTnf7T9EmwQWYisEnmEjUYJRBepaPu52KP9i7afO3\/6QyCSQHT+R9svwQaRhcgqkUfYaJRAdJGKtp+LPdq\/aPu586c\/BCIJROd\/tP0SbBBZiKwSeYSNRglEF6lo+7nYo\/2Ltp87f\/pDIJJAdP5H2y\/BBpGFyCqRR9holEB0kYq2n4s92r9o+7nzpz8EIglE53+0\/RJsEFmIrBJ5hI1GCUQXqWj7udij\/Yu2nzt\/+kMgkkB0\/kfbL8EGkYXIKpFH2GiUQHSRirafiz3av2j7ufOnPwQiCUTnf7T9EmwQWYisEnmEjUYJRBepaPu52KP9i7afO3\/6QyCSQHT+R9svwQaRhcgqkUfYaJRAdJGKtp+LPdq\/aPu586c\/BCIJROd\/tP0SbBBZiKwSeYSNRglEF6lo+7nYo\/2Ltp87f\/pDIJJAdP5H2y\/BBpGFyCqRR9holEB0kYq2n4s92r9o+7nzpz8EIglE53+0\/RJsEFmIrBJ5hI1GCUQXqWj7udij\/Yu2nzt\/+kMgkkB0\/kfbL8EGkYXIKpFH2GiUQHSRirafiz3av2j7ufOnPwQiCUTnf7T9EmwQWYisEnmEjUYJRBepaPu52KP9i7afO3\/6QyCSQHT+R9svwQaRhcgqkUfYaJRAdJGKtp+LPdq\/aPu586c\/BCIJROd\/tP0SbBBZiKwSeYSNRglEF6lo+7nYo\/2Ltp87f\/pDIJJAdP5H2y\/BBpGFyCqRR9holEB0kYq2n4s92r9o+7nzpz8EIglE53+0\/RJsEFmIrBJ5hI1GCUQXqWj7udij\/Yu2nzt\/+kMgkkB0\/kfbL8EGkYXIKpFH2GiUQHSRirafiz3av2j7ufOnPwQiCUTnf7T9EmwQWYisEnmEjUYJRBepaPu52KP9i7afO3\/6QyCSQHT+R9svwQaRhcgqkUfYaJRAdJGKtp+LPdq\/aPu586c\/BCIJROd\/tP0SbBBZiKwSeYSNRglEF6lo+7nYo\/2Ltp87f\/pDIJJAdP5H2y\/BBpGFyCqRR9holEB0kYq2n4s92r9o+7nzpz8EIglE53+0\/RJsEFmIrBJ5hI1GCUQXqWj7udij\/Yu2nzt\/+kMgkkB0\/kfbL8EGkYXIKpFH2GiUQHSRirafiz3av2j7ufOnPwQiCUTnf7T9EmwQWYisEnmEjUYJRBepaPu52KP9i7afO3\/6QyCSQHT+R9svwQaRhcgqkUfYaJRAdJGKtp+LPdq\/aPu586c\/BCIJROd\/tP0SbBBZiKwSeYSNRglEF6lo+7nYo\/2Ltp87f\/pDIJJAdP5H2y\/BBpGFyCqRR9holEB0kYq2n4s92r9o+7nzpz8EIglE53+0\/RJsEFmIrBJ5hI1GCUQXqWj7udij\/Yu2nzt\/+kMgkkB0\/kfbL8EGkYXIKpFH2GiUQHSRirafiz3av2j7ufOnPwQiCUTnf7T9EmwQWYisEnmEjUYJRBepaPu52KP9i7afO3\/6QyCSQHT+R9svwQaRhcgqkUfYaJRAdJGKtp+LPdq\/aPu586c\/BCIJROd\/tP0SbBBZiKwSeYSNRglEF6lo+7nYo\/2Ltp87f\/pDIJJAdP5H2y\/BBpGFyDqbR1+\/ft09e\/Zsp2T2jydPnuw+f\/58tm+pi+bDmzdvSpnEzp5AdJVxm8gAACAASURBVJGKtp8byGj\/ou3nzn\/r\/nZvi5N\/UF+2jkyZ8aPzP9p+CQqILETW2TyyIrilwKnBh7OQGr4YXaSi7eeij\/Yv2n7u\/LfuX8O9XYMPW8chavzo\/I+2X4ILIguRdTaPLhUgrWbpXee7d+9uV7y8IPv+\/fvu5cuXt+9S\/TWzrRtFj48fP976YnZ1Xv21mub7qq3103WNY2O9ePFip8ea74ZvHW\/siRhGbtH2c32P9i\/afu78t+5vNcDf294nqwPUF0+lnefR+R9tvwTp2ApbwMNoiNH2CyDY1MTcImhCR+LHixsVT7v26dOnSRhpn9r110wsSVipnV2zQmzHqR3r58ffFF4Dg0fnf7T9XMTR\/kXbz53\/1v3TOpD6YyLLagj1JSVU93F0\/kfbL0EXkRX8Tr5EkLa0YUVQyewfVvSsCJ4TQH6FyubihZLOmUCS3T\/++GMSatbPfLAxtDcBpr46Vr8\/\/\/xz2ptvNhb70wSii1S0\/dMzm3cl2r9o+\/NmWW8ru7fFyT\/sHqa+1Bu7OZ5F53+0\/TlzvNQGkYXIOpsjVgRN4KSNrQiaIPLiKb3m+6bvSOeKLGvnC7KeS3R9+fIFkeUhz3geXaSi7c+Y4tkm0f5F2z87uQYuUl8aCFKGi9H5H20\/Y+q3XRFZiKzbZDj2JKcInuvrxZjGNfHkV7JM2KV20pUs89vb0HO2ywSii1S0\/cszPN8i2r9o++dnV\/\/V9N5OPU7fqPm6ca6vbyebvjbYSjn1JaVd\/jg6\/6PtlyCCyEJknc2jc4VMHc8VQV33gsi3Te36omgF0T4StGtWFO1Ye2\/H+tlHDWcnxsWJQHSRirafG8Zo\/6Lt585\/6\/7+\/j3mi68Zuu7vfR1TX45Rq+dcdP5H2y9BEpGFyDqbR1YElczpQwXvUhE04WN9TShp0NS27Nnmr0k0SXD5vvq40WyaqLKx7NhssT9NQAwjt2j7ub5H+xdtP3f+W\/f397lY+Qf1Zevo5I8fnf\/R9vMJ7HaxFbaAh9EQo+0XQIAJCIQRiM7\/aPu5YKL9i7afO3\/6QyCSQHT+R9svwQaRFfxOvkSQsAGBKALRRSrafi6XaP+i7efOn\/4QiCQQnf\/R9kuwQWQhskrkETYaJRBdpKLt52KP9i\/afu786Q+BSALR+R9tvwQbRBYiq0QeYaNRAtFFKtp+LvZo\/6Lt586f\/hCIJBCd\/9H2S7BBZCGySuQRNholEF2kou3nYo\/2L9p+7vzpD4FIAtH5H22\/BBtEFiKrRB5ho1EC0UUq2n4u9mj\/ou3nzp\/+EIgkEJ3\/0fZLsEFkIbJK5BE2GiUQXaSi7edij\/Yv2n7u\/OkPgUgC0fkfbb8EG0QWIqtEHmGjUQLRRSrafi72aP+i7efOn\/4QiCQQnf\/R9kuwQWQhskrkETYaJRBdpKLt52KP9i\/afu786Q+BSALR+R9tvwQbRBYiq0QeYaNRAtFFKtp+LvZo\/6Lt586f\/hCIJBCd\/9H2S7BBZCGySuQRNholEF2kou3nYo\/2L9p+7vzpD4FIAtH5H22\/BBtEFiKrRB5ho1EC0UUq2n4u9mj\/ou3nzp\/+EIgkEJ3\/0fZLsEFkIbJK5BE2GiUQXaSi7edij\/Yv2n7u\/OkPgUgC0fkfbb8EG0QWIqtEHmGjUQLRRSrafi72aP+i7efOn\/4QiCQQnf\/R9kuwQWQhskrkETYaJRBdpKLt52KP9i\/afu786Q+BSALR+R9tvwQbRBYiq0QeYaNRAtFFKtp+LvZo\/6Lt586f\/hCIJBCd\/9H2S7BBZCGySuQRNholEF2kou3nYo\/2L9p+7vzpD4FIAtH5H22\/BBtEFiKrRB5ho1EC0UUq2n4u9mj\/ou3nzp\/+EIgkEJ3\/0fZLsEFkIbJK5BE2GiUQXaSi7edij\/Yv2n7u\/OkPgUgC0fkfbb8EG0QWIqtEHmGjUQLRRSrafi72aP+i7efOn\/4QiCQQnf\/R9kuwQWQhskrkETYaJRBdpKLt52KP9i\/afu786Q+BSALR+R9tvwQbRBYiq0QeYaNRAtFFKtp+LvZo\/6Lt586f\/hCIJBCd\/9H2S7BBZCGySuQRNholEF2kou3nYo\/2L9p+7vzpD4FIAtH5H22\/BBtEFiKrRB5ho1EC0UUq2n4u9mj\/ou3nzp\/+EIgkEJ3\/0fZLsEFkIbJK5BE2GiUQXaSi7edij\/Yv2n7u\/OkPgUgC0fkfbb8EG0QWIqtEHmGjUQLRRSrafi72aP+i7efOn\/4QiCQQnf\/R9kuwQWQhskrkETYaJRBdpKLt52KP9i\/afu786Q+BSALR+R9tvwQbRBYiq0QeYaNRAtFFKtp+LvZo\/6Lt586f\/hCIJBCd\/9H2S7BBZCGySuQRNholEF2kou3nYo\/2L9p+7vzpD4FIAtH5H22\/BBtEFiKrRB5ho1EC0UUq2n4u9mj\/ou3nzp\/+EIgkEJ3\/0fZLsEFkIbJK5BE2GiUQXaSi7edij\/Yv2n7u\/OkPgUgC0fkfbb8EG0QWIqtEHmGjUQLRRSrafi72aP+i7efOn\/4QiCQQnf\/R9kuwQWQhskrkETYaJRBdpKLt52KP9i\/afu786Q+BSALR+R9tvwSbJkSWQPKAATnQZg6UKFRRNsipNnOKuBE3y4Go2lDKbvUiq9REsVMnAd0obBCAAAQiCFBfIqhicwkBXuGW0KJtcQIUweJIMQgBCOwJUF9Iha0JILK2jsDg41MEB08Apg+BQALUl0C4mJ5FAJE1CxONoghQBKPIYhcCEKC+kANbE0BkbR2BwcenCA6eAEwfAoEEqC+BcDE9iwAiaxYmGkURoAhGkcUuBCBAfSEHtiaAyNo6AoOPTxEcPAGYPgQCCVBfAuFiehYBRNYsTDSKIkARjCKLXQhAgPpCDmxNAJG1dQQGH58iOHgCMH0IBBKgvgTCxfQsAoisWZhoFEWAIhhFFrsQgAD1hRzYmgAia+sIDD4+RXDwBGD6EAgkQH0JhIvpWQQQWbMw0SiKAEUwiix2IQAB6gs5sDUBRNbWERh8fIrg4AnA9CEQSID6EggX07MIILJmYaJRFAGKYBRZ7EIAAtQXcmBrAoisrSMw+PgUwcETgOlDIJAA9SUQLqZnEUBkzcJEoygCFMEostiFAASoL+TA1gQQWVtHYPDxKYKDJwDTh0AgAepLIFxMzyKAyJqFiUZRBCiCUWSxCwEIUF\/Iga0JILK2jsDg41MEB08Apg+BQALUl0C4mJ5FAJE1CxONoghQBKPIYhcCEKC+kANbE0BkbR2BwcenCA6eAEwfAoEEqC+BcDE9iwAiaxYmGkURoAhGkcUuBCBAfSEHtiaAyNo6AoOPTxEcPAGYPgQCCVBfAuFiehYBRNYsTDSKIkARjCKLXQhAgPpCDmxNAJG1dQQGH58iOHgCMH0IBBKgvgTCxfQsAoisWZhoFEWAIhhFFrsQgAD1hRzYmgAia+sIDD4+RXDwBGD6EAgkQH0JhIvpWQQQWbMw0SiKAEUwiix2IQAB6gs5sDUBRNbWERh8fIrg4AnA9CEQSID6EggX07MIILJmYaJRFAGKYBRZ7EIAAtQXcmBrAoisrSMw+PgUwcETgOlDIJAA9SUQLqZnEUBkzcJEo1IE3r59u3vw4MHu\/fv3k0krgjrWeV1ngwAEIHANAerLNdToE0kAkRVJF9u\/EPj27dvu7t27u4cPH+4eP368k8h69OjRdKzzus4GAQhA4BoC1JdrqNEnkgAiK5Iuto8SeP369e7evXuTwJLI0kPHOs8GAQhAIIcA9SWHHn1LE0BklSaKvYsE9G7z\/v37ByJLx6xiXURHAwhA4AIB6ssFQFxelQAia1XcDGYE\/LtNVrGMCnsIQKAEAepLCYrYKEEAkVWCIjYWE\/DvNlnFWoyPDhCAwBkC1JczcLi0KgFE1qq4GcwT0LtNfdldezYIQAACJQlQX0rSxNa1BBBZ15KjXzYBvdt8\/vw538XKJokBCEAgJUB9SYlwvAUBRNYG1P\/+97\/vnj59evDFb\/srO\/Y\/\/toQDvM4KI\/YIOAJUF\/m3TvUmMucqC\/+zrruOSLrOm5X91IB1M2tPRsEcgkol9ggYASoL0aCfQkC1Jd8ilTofIazLVAAZ6Oi4UwCFMGZoAZoRn0ZIMgrT5H6kg8ckZXPcJYFCuAsTDRaSIAiuBBYp82pL50GduNpUV\/yA4DIymd40QIF8CIiGlxJgCJ4JbiOulFfOgpmZVOhvuQHBJGVz\/CsBQrgWTxczCRAEcwE2Hh36kvjAazcfepLfoAQWfkMT1qgAJ5Ew4VCBCiChUA2aIb60mDQGnOZ+pIfMERWPsOjFiiAR7FwsjABimBhoI2Yo740EqjG3aS+5AcQkZXP8BcLPRbAjx8\/7l6+fLn7\/v37wXxPnT9odOTg69evuxcvXuw+f\/585OryU7Ije7I70kYRHCnaP+ZKfbkc81L15dOnTwe\/Z6jjkTbqS360EVn5DA8s9FgANUGJmJubmwNRJMEl4SWhtXQrVQTNtydPnuyePXuGyFoaCNo3RYD6Mi9cJeqLbKi+aa9NAmu0GoPImpdv51ohss7RWXhNBfAvf\/lLlz80ekxQeeFl13VT6uHf8alIqTjpvPZfvnyZipeOJY5k51R\/G0MC71iB0ziy8dtvv7GStTBfad4WgV4FlqJg979\/w2b3\/rn6oL6R9cVniI3ja5u\/3uNz1Wi2PAIQzON327tngWWTTD8a1PGbN2+my9rbcxM+vjhaYbI+Klj+40L1tY8jfX\/ZkIiy\/uZLulc7Pi5MqXDcC4GeBZbFqOb6Ih9VY9LVfPO91z0iKz+yiKx8htPKVa8rWB6PFzL2zlPiJ32H56\/5Pt6WF1m+vdrYsYru3MJ2ahw\/Zo\/PKYI9RvVwTiMILM3Y38NWA2qpL+aPatJIG\/UlP9qIrEyG\/\/jHP7r9iDBFY4VGhU8P+\/jORJZuSP9QQfLtvD0vsqy\/2tqmlS0TWXNWqHyBNhsj7CmCfUd5FIGlKNZaX8wvW6nvO+MOZ0d9OeRxzREi6xpqro\/+l3IVwlE2FRp72Ls6L5hSDqfEj+9jRcxElh0jslKavx5TBH9l0tMZ6suP71z5rxb4+EbXF3sDaLXOjz3Cc+pLfpQRWZkMR0tCCSHN2b6wbvhMeOlYhc++R2VFygSUipW+e6Uvv\/vCqf6nvpPFSpZR\/nU\/Wv79SqDvM6PFt6b64t\/s9Z1lp2c3Wv6dJnH9FUTW9eymnqMloYkmE0SGzwqSeOjh3\/mZ6NJ5+4jR2ptYs2Prb6Ls1DtVG9f2c9tZ+1724sXWL4HR4ltTffF1y+qS9lab+s26nzMbLf9+zrzcMyp0JkuSMBMg3bMIkH9Z+KrvTHyrD1HXDpJ\/+eFFZGUyJAkzAdI9iwD5l4Wv+s7Et\/oQde0g+ZcfXkRWJkOSMBMg3bMIkH9Z+KrvTHyrD1HXDpJ\/+eFFZGUyJAkzAdI9iwD5l4Wv+s7Et\/oQde0g+ZcfXkRWJkOSMBMg3bMIkH9Z+KrvTHyrD1HXDpJ\/+eFFZGUyHDEJ9Vc3r169mn488Bp86V8S+r9UTP+ix\/4aUePYXx6Juf1Vos7rr330ExAjbiPm30hxHjG+1Jd6MnzE\/CtNH5GVSXS0JJRAksBSIbx208872E88mOCyYwkmL7psjEvtJLJG+tNq4zJa\/tm8R9mPFl\/qS12ZPVr+RdBHZGVSHS0J\/aqRCR8JHHHQ45oVJQksE1Z6fszGpXe3l65nhrna7qPlX7WBCHJstPhSX4IS6Uqzo+XflZjOdkNkncVz+eJoSehXjExkmUBSgfQf412m96OFbJqw0l5M7WGrU9prBU1j6Vo6Tol3wHP9randaPlXE\/s1fBktvtSXNbJq\/hij5d98MvNbIrLmszracqQkTIWMiSz7qE\/fmfL\/Vc5RYMlJiSf73lVqz4s2PRdr7bX51S8z6Qu0net9P1L+9R7LY\/MbKb7Ul2MZsO25kfIvijQiK5PsSEmYiigTRSZ80uuX0HoRdayt2ZegUltbMVNbfTx4c3Nz8N0wRNYxipxrmQD15eXtGyvqy\/qZPFL+RdFFZGWSHSkJT73TvEZkSTjZCtapEJjIkn2JKv8fRSOyflAbKf9O5UnP50eKL\/WlvkweKf+i6COyMsmOloR+tciLIGGc+05ToumYwEr7+3bpWPLDr2ylBTozrM10Hy3\/mglMIUdHiy\/1pVDiFDIzWv4VwnZgBpF1gGP5wWhJKOGjQqgtFT5eJPnnKVX1Fzf\/MMGkFSp9qV3X0i+3y6bEma6lIk39cn67K\/WxlWOxYOuXwGjxpb7Ulcuj5V8EfSp0JtXRknDJitFvv\/128J2pTNRnu\/t3wGcbdnZxtPzrLHwXpzNafKkvF1Ni1Qaj5V8EXERWJtURk3DOqpGK5YcPH67+VfglYfHvfpf066HtiPnXQ9zmzmHE+FJf5mZHfLsR8680VURWJlGSMBMg3bMIkH9Z+KrvTHyrD1HXDpJ\/+eFFZGUyJAkzAdI9iwD5l4Wv+s7Et\/oQde0g+ZcfXkRWJkOSMBMg3bMIkH9Z+KrvTHyrD1HXDpJ\/+eFFZGUyJAkzAdI9iwD5l4Wv+s7Et\/oQde0g+ZcfXkRWJkOSMBMg3bMIkH9Z+KrvTHyrD1HXDpJ\/+eFFZGUyJAkzAdI9iwD5l4Wv+s7Et\/oQde0g+ZcfXkRWJkOSMBMg3bMIkH9Z+KrvTHyrD1HXDpJ\/+eFFZGUyfPr06cEvlyspecBgrRxQ\/rH1S4D6Qi1Zq5YcG4f6kl9bEFn5DLGQQUA3NhsEIACBCALUlwiq2FxCgFe4JbRoW5wARbA4UgxCAAJ7AtQXUmFrAoisrSMw+PgUwcETgOlDIJAA9SUQLqZnEUBkzcJEoygCFMEostiFAASoL+TA1gQQWVtHYPDxKYKDJwDTh0AgAepLIFxMzyKAyJqFiUZRBCiCUWSxCwEIUF\/Iga0JILK2jsDg41MEB08Apg+BQALUl0C4mJ5FAJE1CxONoghQBKPIYhcCEKC+kANbE0BkbR2BwcenCA6eAEwfAoEEqC+BcDE9iwAiaxYmGkURoAhGkcUuBCBAfSEHtiaAyNo6AoOPTxEcPAGYPgQCCVBfAuFiehYBRNYsTDSKIkARjCKLXQhAgPpCDmxNAJG1dQQGH58iOHgCMH0IBBKgvgTCxfQsAoisWZhoFEWAIhhFFrsQgAD1hRzYmgAia+sIDD4+RXDwBGD6EAgkQH0JhIvpWQQQWbMw0SiKAEUwiix2IQAB6gs5sDUBRNbWERh8fIrg4AnA9CEQSID6EggX07MIILJmYaJRFAGKYBRZ7EIAAtQXcmBrAoisrSMw+PgUwcETgOlDIJAA9SUQLqZnEUBkzcJEoygCFMEostiFAASoL+TA1gQQWVtHYPDxKYKDJwDTh0AgAepLIFxMzyKAyJqFiUZRBCiCUWSxCwEIUF\/Iga0JILK2jsDg41MEB08Apg+BQALUl0C4mJ5FAJE1CxONoghQBKPIYhcCEKC+kANbE0BkbR2BwcenCA6eAEwfAoEEqC+BcDE9iwAiaxYmGkURoAhGkcUuBCBAfSEHtiaAyNo6AoOPTxEcPAGYPgQCCVBfAuFiehYBRNYsTDSKIkARjCKLXQhAgPpCDmxNAJG1dQQGH58iOHgCMH0IBBKgvgTCxfQsAoisWZhoFEWAIhhFFrsQgAD1hRzYmgAia+sIDD4+RXDwBGD6EAgkQH0JhIvpWQQQWbMw0SiKAEUwiix2IQAB6gs5sDUBRNbWERh8fIrg4AnA9CEQSID6EggX07MIILJmYaJRFAGKYBRZ7EIAAtQXcmBrAoisrSMw+PgUwcETgOlDIJAA9SUQLqZnEUBkzcJEoygCFMEostiFAASoL+TA1gQQWVtHYPDxKYKDJwDTh0AgAepLIFxMzyKAyJqFiUZRBCiCUWSxCwEIUF\/Iga0JILK2jsDg41MEB08Apg+BQALUl0C4mJ5F4M7Tp093SkQedTD461\/\/SizIR3KAHCAHyAFyoPEc2OsrFrNmydGVGo34zmvEOa+UTgwDgaEJUFuGDv\/mk98vXiGyNo+Ec2DEojDinF3IeQoBCAQRoLYEgcXsLAKIrFmY1m00YlEYcc7rZhWjQWBMAtSWMeNey6wRWbVEwvkxYlEYcc4u5DyFAASCCFBbgsBidhYBRNYsTOs1+r\/\/+7+dvig32kYhHC3izBcC6xCgtqzDmVGOE0BkHeey2dlnz57t\/vM\/\/3Oz8bcamEK4FXnGhUDfBKgtfce39tkhsiqK0Lt373Y3NzcVebSeKxTC9VgzEgRGIkBtGSna9c21mMj6+PHjwe95fPr0aZrt9+\/fdy9fvtzZcSkEsie7sq\/nmsiTJ092f\/vb327PLx3r69evuxcvXuw+f\/482Y3w+5RP+phQc9B+xI1COGLUmTME4glQW+IZM8JpAsq\/O7lJKIGlj7kkUrRpr2OJnyiR5aek8fXI3bzIyrW1tP+oHxMap9wcNDvsIQABCHgC1BZPg+drE8gWWV5QeedtpenPP\/88WMmyVaf9wLcrXCbG7LyJplPnzf5\/\/\/d\/366gvXnzZrJnK1zyR+fMpvpoM5\/tvNr4cbQi9scffxz4rdUtnVcfLyhlU6tfeuia2qjtkm3kjwmNk9ixQQACEChNgNpSmij2lhBQ\/mWtZElkeNGRDm7iRe0kPvSdIxMhElImiPRcYkebRJDOa3\/qvOwd63vqvMaUEPry5cvUz0Sc90njHfu40ESZ9ZGfNrbGE0Ttba42j5TFsePRPyY0JhRCI8EeAhAoSYDaUpImtpYSKCKyTHAcG9yEh0RIup0SRL6dF1n+\/Km+dj5dQfN9\/XMvrPxz77cJNF3X5oWZxvMi85S\/fkz\/fPSPCY0FhdBIsIcABEoSoLaUpImtpQSKiCwvMlIHvFjRNa3y7Aed9l6g+WsSL7YdO29iSva9sLHzWrGSX96O2dM574N9xHdKZKm9n6NvZ+PJD23eFxvv1J6PCX+SoRD+ZMEzCECgHAFqSzmWWFpOYK81rv8+jATHMTGj1Z5Xr17t\/IpSKlZSgWLuexFj57T3531fL2zsvB83teH99Tb9cy8OL61keaHoffHjps\/5mPCQCIXwkAdHEIBAGQLUljIcsXIdgWyRpWElLNKVHh3rvBcrXmTZeRMoWq1Se20SOzqv\/anzJqZkxwsbf1599dBmH\/H9\/vvvB6JQfS+tZMkPm49syab57cfTNe\/LNPCJf2RvxB8dPYFjWlk8dY3zEIAABK4lgMi6lhz9ShAoIrLkiMTF3ti017E2E1MSI\/Zc7SRsfvvtt+mL5hIxJmTMhtprO3XeixsvbPx5P57smk3v64cPHybBpGvWXr4t+etCE1zy1\/syTeDIP3xM+CsUxYcNAhCAQGkC1JbSRLG3hMBe0\/ACtwRaTls+JjxOj0J4nAtnIQCBPALUljx+9M4jgMjK47e4Nx8THkdGITzOhbMQgEAeAWpLHj965xFAZOXxW9SbjwlP46IQnmbDFQhA4HoC1Jbr2dEzn8Aksv76178efJ9qr7w49+OXWotx+Ld\/+7dh\/2\/CS6lKIbxEiOsQgMA1BKgt11CjTykCez3Fd7JKAcXOdQQohNdxoxcEIHCeALXlPB+uxhJAZMXyxfpMAhTCmaBoBgEILCJAbVmEi8aFCSCyCgPF3HUEKITXcaMXBCBwngC15TwfrsYSQGTF8sX6TAIUwpmgaAYBCCwiQG1ZhIvGhQkgsgoDxdx1BCiE13GjFwQgcJ4AteU8H67GEkBkxfLF+kwCFMKZoGgGAQgsIkBtWYSLxoUJILIKA8XcdQQohNdxoxcEIHCeALXlPB+uxhJAZMXyxfpMAhTCmaBoBgEILCJAbVmEi8aFCSCyCgPF3HUEKITXcaMXBCBwngC15TwfrsYSQGTF8sX6TAIUwpmgaAYBCCwiQG1ZhIvGhQkgsgoDxdx1BCiE13GjFwQgcEjg7du3uwcPHuzev38\/XbDaomOd13U2CKxFAJG1FmnGOUvACuHZRlyEAAQgcIHAt2\/fdnfv3t09fPhw9\/jx4+n\/nn306NF0rPO6zgaBtQggstYizTgHBHi3eYCDAwhAoCCB169f7+7duzcJrP2L3HSs82wQWJMAImtN2ox1S4B3m7coeAIBCBQmoPpy\/\/79A5GlY1axCoPG3EUCiKyLiGgQRYB3m1FksQsBCPj6olUtVrHIiS0IILK2oM6YEwHebZIIEIBAFAFfX1jFiqKM3UsEEFmXCHE9lADvNkPxYhwCQxNQfdGX3VnFGjoNNp08ImtT\/AzOu01yAAIQiCKg+vL8+XO+ixUFGLsXCSCyLiKiQTQB3m1GE8Y+BCAAAQhsQaAJkbV38uAvRTh3Bx53YMB9QA6QA+TA6DmwhXiaO+Y+Nnfmtt+knZxkgwAEIAABCEAAAp5A7foAkeWjxXMIQAACEIAABJohgMgqEKraIRaYIiYgAAEIQAACEFhIoHZ9wErWwoDSHAIQgAAEIACBOgggsgrEoXaIBaaICQhAAAIQgAAEFhKoXR+wkrUwoDSHAAQgAAEIQKAOAoisAnGoHWKBKWICAhCAAAQgAIGFBGrXB6xkLQwozSEwIoHPnz\/vnjx5svv48ePJ6X\/\/\/n338uXL6aHnl7Y3b9788ltv6m9954xpY6jtu3fv7JA9BCAwCAFEVoFA1w6xwBQxAYGqCVwSPF+\/ft09e\/ZsEk1eKJ2blESW+qivNrMxt7\/Ztn6yxwYBCIxFoHZ9wErWWPnIbCFwFYFzIstEzr6YLFrJ8iJLjn369GkSatqnY9qxjaM2tnpm50ygacXNzmkFTn29\/Q8fPkwrc2rjV+eOjWHAvE0bx66xhwAEtiGge7jmbV+H6neyZoj4BoHeCZj48ILE5iyRpVWkf\/3rX9PK1FwBkq5kyZ4fxz83MWW2fV8TebaSpX4vXryYVsbsmvUzEWdtj9mxOfpr1k97s2k2jAN7CEBgfQKIrALMa4dYYIqYgEDVBLzg7ieHlQAAIABJREFUOeWoiQ8TNKfa2XkvYuycH8c\/N5GlWpDat3FT0XNs5cnEkgkp7W2lS9fsuflj+9RXHad+WFv2EIDAegRq1wfy704LTq4XMkaCAARSAl7wpNfs2MTOXPGRChfZ8eP457pmAmlftG5Fjo1rIsvayQ9d0958smvaa\/Miyz+fLu7\/8QLPxtY+\/ajT9+E5BCCwDoEW9Asia51cYBQINEsgFTzHJmJixwTNsTb+3DGR5UXQqTFtHBVXCSM7NpHl7ZpAMp+8ffnihVV67ZKv\/jrPIQCBbQggsgpwrx1igSliAgJVEzgleLzTJnZM0Phrx557MaTrqSDyY5ptE1JeEKXXjgkn88n305i+7Rw76p+2OzY3zkEAAusQqF0fyD9WstbJBUaBQLMETPDsC8btX+6Z6NHETHyYoLk0WfVN7fm+NqaEkDY7tj5+bLOlj\/D++c9\/3v6chL5jdXNzc\/vR3jmRdWwMtbdNftjY3k+7zh4CEFifgO7Jmrd9zajfyZoh4hsEIAABCEAAAusTQGQVYF47xAJTxAQEuiNgq0b7d3K3q0A69qtQ3U2cCUEAAqsRqF0f7OsfK1mrZQQDQQACEIAABCBQhAAiqwDG2iEWmCImIAABCEAAAhBYSKB2fcBK1sKA0hwCEIAABCAAgToIILIKxKF2iAWmiAkIdEvA\/urQ\/6XeNZP1f92X\/jK7\/XXh\/l3jwXe+\/DX7S0X5wo+JXhMF+kCgLgK164N9TeI7WXWlDd5AoB8CEja5gsZ+vsFEkoST\/YyC\/b7WsS\/T+3bqa+LMhJ\/Z64c2M4HAWAQQWQXiXTvEAlPEBAS6JGBixgSQiaV3797d\/paVXVsCYI5gsrFPCSmNmyv+lvhMWwhAoDyB2vUBK1nlY45FCEBgT8BElX1UaMe2CuXF0lxoJp5MIJnNfTG7FU52XmLKrpkfGkvPbWVr7ti0gwAE6iKAyCoQj9ohFpgiJiDQJQEJGd2\/Jm688NGE0+uXINhHg7JpK2BeqJkAk4j7448\/JhF1StAtHfuSb1yHAATWJ1C7PpB\/\/Lc66+cFI0JgCAISQMdEln2Et1To2KqUrWIdg2gfA\/7++++TyErHOnV8zBbnIACBugkgsgrEp3aIBaaICQh0SSAVUbaSlQodtbu0qY9qwaWP+Exk2f9haGPljH3JN65DAALbEKhdH8g\/VrK2yQ1GhUD3BFJhkx57EWYfBdrHex6O9VPBSgWZRJQJL\/u40D5KNMGl876dbMuO9fNj8RwCEGiHACKrQKxqh1hgipiAQJcEUtFjYslWl+aKLLXfvyO83ZtAMnFm171IS695geYFWJfwmRQEBiBQuz7Y1yV+J2uAXGSKENiEgASSFz7nnJAIe\/Xq1U7iKHIz8WViL3IsbEMAAnEEEFkF2NYOscAUMQGBbgnYapZfRTo2WQkfCSwJrehNvpz78nz0+NiHAATKEKhdH7CSVSbOWIEABCAAAQhAYGUCiKwCwGuHWGCKmIAABCAAAQhAYCGB2vUBK1kLA0pzCEAAAhCAAATqIIDIKhCH2iEWmCImIAABCEAAAhBYSKB2fcBK1sKA0hwCEIAABCAAgToIILIKxKF2iAWmiAkIQAACEIAABBYSqF0fsJK1MKA0hwAEIAABCECgDgKIrAJx2CvB21965nj6v5Dg8eP\/hIIDHMgBcoAcGDgHCsiMMBNNrGSFzR7DEIBAcwRqf+faHFAchgAEwgggssLQYhgCEIgggMiKoIpNCEAgggAiK4IqNiEAgTACiKwwtBiGAAQKE0BkFQaKOQhAIJYAIiuWL9YhAIFyBBBZ5VhiCQIQWIEAImsFyAwBAQgUIYDIKoIRIxCAwFoEEFlrkWYcCEAglwAiK5cg\/SEAgVUJILJWxc1gEIBABgFEVgY8ukIAAusTQGStz5wRIQCB6wggsq7jRi8IQGAjAoisjcAzLAQgsJgAImsxMjpAAAJbEkBkbUmfsSEAgSUEEFlLaNEWAhDYnAAia\/MQ4AAEIDCTACJrJiiaQQACdRBAZNURB7yAAAQuE0BkXWZECwhAoCICiKyKgoErEIDAWQKIrLN4uAgBCNRGAJFVW0TwBwIQOEUAkXWKDOchAIEqCSCyqgwLTkEAAkcIILKOQOEUBCBQLwFEVr2xwTMIQOCQACLrkAdHEIBA5QQQWZUHCPcgAIFbAoisWxQ8gQAEWiCAyGohSvgIAQiIACKLPIAABJoigMhqKlw4C4GhCSCyhg4\/k4dAewQQWe3FDI8hMCoBRNaokWfeEGiUACKr0cDhNgQGJIDIGjDoTBkCLRNAZLUcPXyHwFgEEFljxZvZQqB5Aois5kPIBCAwDAFE1jChZqIQ6IMAIquPODILCIxAAJE1QpSZIwQ6IoDI6iiYTAUCnRNAZHUeYKYHgd4IILJ6iyjzgUC\/BBBZ\/caWmUGgSwKIrC7DyqQg0CUBRFaXYWVSEOiXACKr39gyMwj0RgCR1VtEmQ8EOieAyOo8wEwPAh0RQGR1FEymAoERCCCyRogyc4RAHwQQWX3EkVlAYBgCiKxhQs1EIdA8AURW8yFkAhDom8Dbt293Dx482L1\/\/36aqIksHeu8rrNBAAIQqJEAIqvGqOATBCBwS+Dbt2+7u3fv7h4+fLh7\/PjxTkXr0aNH07HO6zobBCAAgRoJILJqjAo+QQACBwRev369u3fv3iSw9kVrOtZ5NghAAAK1EkBk1RoZ\/IIABG4JaLXq\/v37ByJLx6xi3SLiCQQgUCEBRFaFQcElCEDgVwJ+NUurWqxi\/cqIMxCAQF0EEFl1xQNvIACBEwT8aharWCcgcRoCEKiKACKrqnDgDAQgcI6AVq\/0ZXdWsc5R4hoEIFALAURWLZHADwhA4CIBrWY9f\/6c72JdJEUDCECgBgJNiKy9kwdfeuXcHXjcgQH3ATlADpADo+dADWLqlA\/72Nw5db2K83KSDQIQgAAEIAABCHgCtesDRJaPFs8hAAEIQAACEGiGACKrQKhqh1hgipiAAAQgAAEIQGAhgdr1AStZCwNKcwhAAAIQgAAE6iCAyCoQh9ohFpgiJiAAAQhAAAIQWEigdn3AStbCgNIcAhCAAAQgAIE6CCCyCsShdogFpogJCEAAAhCAAAQWEqhdH7CStTCgNIdAFIHPnz\/vnjx58svvn3369ClqyMV237x5s9NDW+qv91Nt9sVl9+zZs93Xr18Xj3Wug+zPsatx1c77ds7u3GsfP36cYiUGNW3fv3+f4lOad01zxBcIeAKILE\/jyue1Q7xyWnSDwAEBEy16AbdNz5X\/pUWC2V+yN\/\/ki17MX758OT3shd1Ej66bz9bOhNmS8c61nSuyZENt5at8KbXVKrKWcCnFAjsQ2JJA7fpA\/t1pwcktg8jYEFiDgIkYL7JMpJhIsOP9jbuztnZe7V69ejWJHBM98t1WdNJ+x66dEnTnXsCvvWZczf8XL17s9NCKnniYyJTfxkB9\/Hhe1OlaKoDS6zam7W1sz8uu+b3GlB\/yTYzNR+uf+m7xNObGNW1vNtXeNj9v71c6Fz9X38d8M3vsIdArAd0\/NW\/7+79+J2uGiG8QKEHAXpT1Yuk3Lyj8c\/+Cay\/c9uKa2vL9\/Auz9TMB4695H6yd7PjNzlt\/f03PzY9T16292TH\/dd7Pz0Sije\/n49upXzoH65tyTcf2Ysau2d7GkI3U1\/RYfWzeNqb3KW1v\/hmjY23tmvmhvTbfVseey9SAfyDQOQFEVoEA1w6xwBQxAYFfXpgNib1w\/vOf\/5y+X2RCw16c9UJrL9wmFOyatdVe95FdN9upGLBjexG3dqk9O2\/79MVe562PxtX1c5v5b2JCbW3esmPHdt1fuyQ8zA9jYX7YefnnH17oWVs\/ns75+R7z3V9XextLds61\/+OPPw4+hlVfPz\/\/PPVDx6mfOscGgZ4J6N6tedvXlvqdrBkivkGgBAETOKkgsRfO33\/\/ffqIygsCPT\/2wu1f1OWb2ba+JrbsRdvO2z71wfprrGObXbd+JiRkz4TRsX52ztpbWzs2f2xvfhsTzdPmoL22UwLHbNuYtrexzLad93s\/ns77May\/t5+29\/E41t7sKcbyw3P28\/PPUz90nI7r58BzCPRIQLWh5m1fu+p3smaI+AaBEgRSoSKb\/gX5y5cvv7wA27i+nZ77F3Vr4+3pxtcL8rExfXt7fsqeXU9f\/GVbY5wTLtZX+9R\/nTsnGPy1dGwTLJqbtku+29jnfNV4foXLj2H9vcjy11MfzrVnJWsKGf9AYDYBRNZsVKcb1g7xtOdcgcB8AscETyogTomL9IXbC4v0mh8nvZaKA\/M+beftq80xv7woMTu+nZ3TPrWvc37u58Y7Nh8\/tvXV3K7dzBfZMF9tDDv2Isv7pDE9V2uvuia75p\/1P9bWrnm7Zsf80Din+F47b\/pBoHYCtesD+cdfF9aeRfg3BAF7Ad3flLffE9ILsW32wmptTDjYeXsxthduvehqs2PrZ+2OXfPj2bjapy\/gJjxkM32ht3Fsb6tEqQ2zn\/pv5zU\/s+F9Tu3o2Pzwf\/knO+bnqXnZWJf25ovm6sc45buPp+fj2x\/7S1D5YWNpTn7eujZnruqXO99LPLgOgRoIKNdr3uQfIqvmCOEbBCohINFwc3MzfcR4rUsSexIN2q+1SbCkQmWtsY+N40WWnrNBAALXE0BkXc\/utmftEG8d5QkEOiegVRQ9rt3Ud80VFlvBW3PMS2wQWZcIcR0C8wnUrg9YyZofS1pCAAIQgAAEIFARAURWgWDUDrHAFDEBAQhAAAIQgMBCArXrA1ayFgaU5hCAAAQgAAEI1EEAkVUgDrVDLDBFTEBgGAK53+sSKP+Xe6oP\/jtX\/i\/z\/F\/11fYF+GECzkQhEEigdn0g\/\/jrwsAEwDQEIPCTgIkjL4p+Xp33LP3iuESb\/USE2Zeg0qZr9peFdi1n7Hke0goCEFiLACKrAOnaIRaYIiYgMAQBL4i8WDr1e1FzoHibaXuJLVvN8uPpORsEINA+gdr1AStZ7ecYM4BAEwRM5EgUabNjE0G20mSrUJcmZf1tpSptbz\/fYKtcui7b\/jjtwzEEINAWAURWgXjVDrHAFDEBge4JmOhJRZaJnvT6XCB+tcr6mABT7bDxdO1YW+vDHgIQaI9A7fpA\/vGdrPbyCo8h0BwBW6ky0WNCyFairhVZZtevgGkMFTcTcAZLbXSe72UZEfYQaJsAIqtA\/GqHWGCKmIBA9wRSEVVKZEkweeFkQso+hvRgWcnyNHgOgfYJ1K4P5B8rWe3nGTOAQPUEUlGVHqciLBVPNsG0nVatbMXKVrW86LJ+2ktkWVt\/nucQgECbBBBZBeJWO8QCU8QEBIYg4AXRtSJLoEyAqTb4FStbxdJ5e9j1dLwhgDNJCHROoHZ9sK9Dd6oOQ+0Qq4aHcxCoiIBWmm5ubqYfE53jlkRZqe9P2QpYKXtz\/KcNBCAQS6B2fYDIio0\/1iEAgYSAhJMelzaJoTntLtmx61rlsi\/Z2zn2EIBA2wQQWQXiVzvEAlPEBAQgAAEIQAACCwnUrg9YyVoYUJpDAAIQgAAEIFAHAURWgTjUDrHAFDEBAQhAAAIQgMBCArXrA1ayFgaU5hCAAAQgAAEI1EEAkVUgDrVDLDBFTEAAAhCAAAQgsJBA7fqAlayFAaU5BCAAAQhAAAJ1EEBkFYhD7RALTBETEIAABCAAAQgsJFC7PmhmJWvv6O2vOHP88xetYQELcoAcIAfIgVFzYKEuW7X5PiZ1\/+L7qkQYDAIQqJqAihYbBCAAgRYIILJaiBI+QgACtwQQWbcoeAIBCFROAJFVeYBwDwIQOCSAyDrkwREEIFAvAURWvbHBMwhA4AgBRNYRKJyCAASqJIDIqjIsOAUBCJwigMg6RYbzEIBAbQQQWbVFBH8gAIGzBBBZZ\/FwEQIQqIgAIquiYOAKBCBwmQAi6zIjWkAAAnUQQGTVEQe8gAAEZhJAZM0ERTMIQGBzAoiszUOAAxCAwBICiKwltGgLAQhsSQCRtSV9xoYABBYTQGQtRkYHCEBgIwKIrI3AMywEIHAdAUTWddzoBQEIrE8AkbU+c0aEAAQyCCCyMuDRFQIQWJUAImtV3AwGAQjkEkBk5RKkPwQgsBYBRNZapBkHAhAoQgCRVQQjRiAAgRUIILJWgMwQEIBAOQKIrHIssQQBCMQSQGTF8sU6BCBQmAAiqzBQzEEAAmEEEFlhaDEMAQhEEEBkRVDFJgQgEEEAkRVBFZsQgEAYAURWGFoMQwAChQkgsgoDxRwEIBBLAJEVyxfrEIBAOQKIrHIssQQBCKxAAJG1AmSGgAAEihBAZBXBiBEIQGAtAoistUgzDgQgkEsAkZVLkP4QgMCqBBBZq+JmMAhAIIMAIisDHl0hAIH1CSCy1mfOiBCAwHUEEFnXcaMXBCCwEQFE1kbgGRYCEFhMAJG1GBkdIACBLQkgsrakz9gQgMASAoisJbRoCwEIbE4AkbV5CHAAAhCYSQCRNRMUzSAAgToIILLqiANeQAAClwkgsi4zogUEIFARAURWRcHAFQhA4CwBRNZZPFyEAARqI4DIqi0i+AMBCJwigMg6RYbzEIBAlQQQWVWGBacgAIEjBBBZR6BwCgIQqJcAIqve2OAZBCBwSACRdciDIwhAoDICb9++3T148GD3\/v37yTMTWTrWeV1ngwAEIFAjAURWjVHBJwhA4JbAt2\/fdnfv3t09fPhw9\/jx452K1qNHj6Zjndd1NghAAAI1EkBk1RgVfIIABA4IvH79enfv3r1JYO2L1nSs82wQgAAEaiWAyKo1MvgFAQjcEtBq1f379w9Elo5ZxbpFxBMIQKBCAoisCoOCSxCAwK8E\/GqWVrVYxfqVEWcgAIG6CCCy6ooH3kAAAicI+NUsVrFOQOI0BCBQFQFEVlXhwBkIQOAcAa1e6cvurGKdo8Q1CECgFgKIrFoigR8QgMBFAlrNev78Od\/FukiKBhCAQA0EmhBZeycPvvTKuTvwuAMD7gNygBwgB0bPgRrE1Ckf9rG5c+p6FeflJBsEIAABCEAAAhDwBGrXB4gsHy2eQwACEIAABCDQDAFEVoFQ1Q6xwBQxAQEIQAACEIDAQgK16wNWshYGlOYQgAAEIAABCNRBAJFVIA61QywwRUxAAAIQgAAEILCQQO36gJWshQGlOQQgAAEIQAACdRBAZBWIQ+0QC0wRExCAAAQgAAEILCRQuz5gJWthQGkOgV4IvHnz5pffWnv58uXu+\/fvVUzx8+fPu5ubm532pzb5Kp\/X9Fv+PHnyZPfx48df3Pr69evu2bNnO7HVpjZr+vaLQ5yAQOcEEFkFAlw7xAJTxAQEVicgISBBIGGgzQRCLaJA\/tXiy9zgGEMTWSbIPn36NNcE7SAAgQUEatcHrGQtCCZNIdATgVRkaW4SAyoKJgrsWOe8ILPzHz58mFZ1dN2v7Oj5vrgc9NMY\/topEWXixNuUv2bT+h1bybJ2Wm169erV5J\/sHfNZbX17tbPNfLAxjYmdN9\/sWO3kl1\/JOuaf2WcPAQjkE9B9V\/O2rx\/1O1kzRHyDQIsEJC68cNIcTDBIQPjnqVgwwSIb2rwt3y9d2bF+2qfXPENdl0iSLW2+n7d\/yi\/5b9fMjtnwPqsAqq35YuLNj6Hx1cbs+Gs2hnFMx7C+dn2aDP9AAALFCCCyCqCsHWKBKWICAqsT8MLIBvcCwgsLXdexiQUTEzpn11IRYgLGbGufjqljEza+XTq2jSebem6biRyzIXvmh9p4O2bD+vtrqR1\/TXZMhMm+Z+Sfp+3Mx9SWnWcPAQjkE6hdH8i\/Oy04mR8KLEAAAp5AKnh0zYsGXd8XiNu9CZhzgkV20r4SGiZkUpsm3FLfbCydP9ZXPth5L7K8PS9wzvl8yU6uyNKcTdz5efIcAhDII9CCfkFk5cWY3hBoksAxkeWFiBco6QR9O1071dbamWA6NmZq+5w9u6bCKjH15cuXaSXMiywby9rasfmifXotFVnpfC6JLM1Lm283nTjDxq6zhwAErieAyLqe3W3P2iHeOsoTCDREIBU8qdDwq1rptXOCJb3mx\/HXjgkSw+fb6ZwXPd6XP\/\/880BkWT+1N\/vXiCw\/93R8f818sdUzG99El\/W16zY\/9hCAQBkCtesD+cdKVplYYwUCTRGQENgXgNu9rQjZREw0qJ0XCnZee21eBNmxt23t0mvpeJOx5GNLO+f9NeFkIsfbsXZqc+yvC80X7\/MxOyamNA8bT77YefXXZmJO7eSHOJnIOmbX5sMeAhDIJ6D7ruZtXwfrd7JmiPgGAQiUJyChYmJlrvVU\/Km\/F4dz7ZRqZwLMhF0pu9iBAAR+EEBkFciE2iEWmCImIACBhIBWjC794nvS5faL8Pt3j9MK3ZYCR6tdfpUt9ZdjCEAgj0Dt+mBfi1jJygszvSEAAQhAAAIQWJsAIqsA8dohFpgiJiAAAQhAAAIQWEigdn3AStbCgNIcAhCAAAQgAIE6CCCyCsShdogFpogJCAxN4JrvX50CZl82ty\/N2\/GW38065SvnIQCBPAK16wNWsvLiS28IQKAAAQmiEl8Qt59XUGEzkSX3StkvMFVMQAACBQkgsgrArB1igSliAgLDEjBhZL87ZT\/D8OHDh+n3qXT\/27VzkMyO2uvhRZbZZDXrHEGuQaA9ArXrg3094q8L20stPIZAHwQkfPyPfZogMpGk\/ZzfupLIevfu3e2PhVp\/UbKPDOeItT6oMgsIjEEAkVUgzrVDLDBFTEBgWAISPsdElgmi9PolULaidUxk+XOX7HAdAhCon0Dt+oCVrPpzCA8h0DUBCZ9jIss+2ispskp876vrYDA5CDRGAJFVIGC1QywwRUxAYBgCEk37d3fT96ZSEWUfF0aILFayhkkzJjoIgdr1wb7W8Z2sQfKRaUKgOgKpqEqPvQizjwJ17tRmbbyg4jtZp2hxHgJtE0BkFYhf7RALTBETEBiWgIkiE04RIiu1OSxsJg6BzgjUrg9Yyeos4ZgOBFokoFUnv\/J0bg4SYybIzrXz19Se72N5IjyHQB8EEFkF4lg7xAJTxAQEhiag1aybm5vp5xfOgVC7V69e7b5\/\/36u2cE1+6hQq1lsEIBAXwRq1wesZPWVb8wGAhCAAAQgMAwBRFaBUNcOscAUMQEBCEAAAhCAwEICtesDVrIWBpTmEIAABCAAAQjUQQCRVSAOtUMsMEVMQAACEIAABCCwkEDt+oCVrIUBpTkEIAABCEAAAnUQQGQViEPtEAtMERMQgAAEIAABCCwkULs+YCVrYUBpDgEIQAACEIBAHQQQWQXisFeCt\/\/fGcd3YHEHBtwH5AA5QA6QA\/X\/t4B3FCQ2CEAAAi0QoF61ECV8hAAERGAvghFZpAMEINAGAURWG3HCSwhAAJFFDkAAAo0RQGQ1FjDchcDABFjJGjj4TB0CLRJAZLUYNXyGwJgEEFljxp1ZQ6BZAoisZkOH4xAYjgAia7iQM2EItE0AkdV2\/PAeAiMRQGSNFG3mCoEOCCCyOggiU4DAIAQQWYMEmmlCoBcCiKxeIsk8INA\/AURW\/zFmhhDoigAiq6twMhkIdE0AkdV1eJkcBPojgMjqL6bMCAK9EkBk9RpZ5gWBTgkgsjoNLNOCQIcEEFkdBpUpQaBnAoisnqPL3CDQFwFEVl\/xZDYQ6J4AIqv7EDNBCHRDAJHVTSiZCATGIIDIGiPOzBICPRBAZPUQReYAgYEIILIGCjZThUDjBBBZjQcQ9yEwGgFE1mgRZ74QaJcAIqvd2OE5BIYkgMgaMuxMGgJNEkBkNRk2nIbAuAQQWePGnplDoDUCiKzWIoa\/EBicACJr8ARg+hBoiAAiq6Fg4SoEILDbIbLIAghAoBUCiKxWIoWfEIDARACRRSJAAAKtEEBktRIp\/IQABCYCiCwSAQIQaIUAIquVSOEnBCAwEUBkkQgQgEArBBBZrUQKPyEAgYkAIotEgAAEWiGAyGolUvgJAQhMBBBZJAIEINAKAURWK5HCTwhAYCKAyCIRIACBVgggslqJFH5CAAITAUQWiQABCLRCAJHVSqTwEwIQmAggskgECECgFQKIrFYihZ8QgMBEAJFFIkAAAq0QQGS1Ein8hAAEJgKILBIBAhBohQAiq5VI4ScEIDARQGSRCBCAQCsEEFmtRAo\/IQCBiQAii0SAAARaIYDIaiVS+AkBCEwEEFkkAgQg0AoBRFYrkcJPCEBgIoDIIhEgAIFWCCCyWokUfkIAAhMBRBaJAAEItEIAkdVKpPATAhCYCCCySAQIQKAVAoisViKFnxCAwEQAkUUiQAACrRBAZLUSKfyEAAQmAogsEgECEGiFACKrlUjhJwQgMBFAZJEIEIBAKwQmkfX06dPdXm2xv3MHBjAgB8gBcoAcIAfIgewcmPRVK4oQPyEAAQiwkkUOQAACLRG405Kz+AoBCIxNAJE1dvyZPQRaI4DIai1i+AuBgQkgsgYOPlOHQIMEEFkNBg2XITAqAUTWqJFn3hBokwAiq8244TUEhiSAyBoy7EwaAs0SQGQ1Gzoch8B4BBBZ48WcGUOgZQKIrJajh+8QGIwAImuwgDNdCDROAJHVeABxHwIjEUBkjRRt5gqB9gkgstqPITOAwDAEEFnDhJqJQqALAoisLsLIJCAwBgFE1hhxZpYQ6IUAIquXSDIPCAxAAJE1QJCZIgQ6IoDI6iiYTAUCvRNAZPUeYeYHgb4IILL6iiezgUDXBBBZXYeXyUGgOwKIrO5CyoQg0C8BRFa\/sWVmEOiRACKrx6gyJwh0SgCR1WlgmRYEOiWAyOo0sEwLAj0SQGT1GFXmBIF+CSCy+o0tM4NAdwQQWd2FlAlBoGsCiKyuw8vkINAXAURWX\/FkNhDonQAiq\/cIMz8IdEQAkdVRMJkKBAYggMgaIMhMEQK9EEBk9RJJ5gGBMQggssaIM7OEQBcEEFldhJFJQGAYAoisYULNRCHQPgFEVvsxZAYQGIkRoZYWAAAIIklEQVQAImukaDNXCDROAJHVeABxHwKDEUBkDRZwpguBlgkgslqOHr5DYDwCiKzxYs6MIdAsAURWs6HDcQgMSQCRNWTYmTQE2iSAyGozbngNgVEJILJGjTzzhkCDBBBZDQYNlyEwMAFE1sDBZ+oQaI0AIqu1iOEvBMYmgMgaO\/7MHgJNEUBkNRUunIXA8AQQWcOnAAAg0A4BRFY7scJTCEBgt0NkkQUQgEAzBBBZzYQKRyEAgR0iiySAAAQqJvD27dvdgwcPdu\/fv5+8NJGlY53XdTYIQAACtRJgJavWyOAXBCCw+\/bt2+7u3bu7hw8f7h4\/fryTyHr06NF0rPO6zgYBCECgVgKIrFojg18QgMBE4PXr17t79+5NAksiSw8d6zwbBCAAgZoJILJqjg6+QQAC02rV\/fv3D0SWjlnFIjkgAIHaCSCyao8Q\/kEAAtOqla1msYpFQkAAAq0QQGS1Ein8hMDABLRqZatZrGINnAhMHQKNEUBkNRYw3IXAqAT0HSx92Z3vYo2aAcwbAu0RQGS1FzM8hsCQBLSa9fz5c76LNWT0mTQE2iSAyGozbng9EIG\/\/\/3vu6dPnx588dv+yo79j782hMM8DsojNghAYD0CiKz1WDMSBBYTkMCSgNCeDQK5BJRLbBCAwHoEuOPWY81IEFhEAIG1CBeNZxBAZM2ARBMIFCSAyCoIE1MQKEUAgVWKJHY8AUSWp8FzCMQTQGTFM2YECCwigMBahIvGCwggshbAoikEChBAZBWAiAkIlCKAwCpFEjvHCCCyjlHhHATiCCCy4thiGQKLCCCwFuGi8RUEEFlXQKMLBDIIILIy4NEVAqUIILBKkcTOOQKIrHN0uAaB8gQQWeWZYhECiwj0JrA+f\/68e\/Lkye3ver18+XL3\/fv3icmnT592\/vgSKPVTe\/WT3RcvXuy+fv16qdvtdd9f\/dRfdkbdEFmjRp55b0UAkbUVecaFwG43\/f6VXvgktHrYTGBJFNn25s2bRcLK+qX7a0SWt4HI2k3C1zPhOQQgEEsAkRXLF+sQOEmgtxUsTVTi6tmzZwerTRJHNzc30wqSrWT9+eefk\/D68OHD7arXx48fdxJkEp1mw69EpSJL7dVWD62c6bq1\/\/d\/\/\/fp\/P\/+7\/9O49je2v7tb387EH7q++rVq9sVt5NBa\/yC5s8GAQisR4A7bj3WjASBWwI9CixNTqtFEkgmem4nvH+Siiz76FDnJQAknEwo+ee67kWWjk2IybTEmR7WV8+12bHa+5Us\/1ztNJYevW+IrN4jzPxqI4DIqi0i+NM9gV4Flg+cBIte0PXwgktiR8LKVrJM2HgBJTsSSbrmRVLaJh3Piyyz6\/unwkrt5Y\/aaBVL9nvfEFm9R5j51UYAkVVbRPCnawIjCKw0gH7VKRVZOtaWCqhLIsvEkwk57b3IMrvWTsepyNI59dHYI3xUKM6IrDQ7OYZALAFEVixfrEPggMDTp0+7+ZL7wcT2B1pBslUku+7FjYSNX8kyMbRUZGkM+6hR4+h4qciSX7Lx7t27X3w233vbI7J6iyjzqZ0AIqv2COFfVwR6f5GTWLIvuVvgJIDs+1MRIktiSfaXiiz5pz7+40zzudd97\/nXa9yYV7sEEFntxg7PGyQwwouchJaEi+aqhwkshauUyDJhZfZ\/++23oytk\/uNCe+5FlfmjayNsI+TfCHFkju0QQGS1Eys87YAAL3J1BVErWenHm3V5WNYb8q8sT6xB4BIBRNYlQlyHQEECvMgVhJlhyla1\/Pe6Msw105X8ayZUONoJAURWJ4FkGm0Q4EWujTj16iX512tkmVetBBBZtUYGv7okwItcl2FtZlLkXzOhwtFOCCCyOgkk02iDAC9ybcSpVy\/Jv14jy7xqJYDIqjUy+NUlAV7kDsOqL52X+OJ5+jtbOh7lB0YPiZ4\/Iv\/O8+EqBEoTQGSVJoo9CJwhwIvcTzilhJD9ZIT\/qQiNUkrA\/fS4\/WfkX\/sxZAZtEUBktRUvvG2cAC9yPwOon09If\/Fdf+0nRnrYtZ89fn2mNvrdK\/1O1osXL6b\/Osda2S+6a8\/2gwD5RyZAYF0CiKx1eTPa4AR4kfuRAKkAstUo++hQAmzJzyuofyqyNJIXcoOn3jR98o8sgMC6BBBZ6\/JmtMEJ8CL3IwHSjwp17P87nqW\/xH5KZPGR4eENR\/4d8uAIAtEEEFnRhLEPAUeAF7kfMFIRlYqk9LpDePRp2t8aIbKMxI89+XfIgyMIRBNAZEUTxj4EHAFe5H7AkCjyf\/2XiiRElkuagk\/Jv4IwMQWBGQQQWTMg0QQCpQjwIveD5LHvZPnvVJUSWXwn6zBzyb9DHhxBIJoAIiuaMPYh4AjwIvcThhdA51ay0ms\/Lfx8dqxNKuR+th73Gfk3buyZ+TYEEFnbcGfUQQnwIvcz8BJG\/iPDn1d+ffZf\/\/VfBz\/P8GuLX8\/wfaxfmZB\/vzLhDAQiCSCyIuliGwIJAV7kDoHMEUJakZLIWrItEXBL7LbelvxrPYL43xoBRFZrEcPfpgnwItd0+Jp3nvxrPoRMoDECiKzGAoa7bRPgRa7t+LXuPfnXegTxvzUCiKzWIoa\/TRPgRa7p8DXvPPnXfAiZQGMEEFmNBQx32ybAi1zb8Wvde\/Kv9Qjif2sEEFmtRQx\/mybAi1zT4WveefKv+RAygcYIILIaCxjutk2AF7m249e69+Rf6xHE\/9YIILJaixj+Nk2AF7mmw9e88+Rf8yFkAo0RQGQ1FjDcbZvA06dPd3qh4wGDLXJA+ccGAQisR+D\/AeCc4pFGGb+6AAAAAElFTkSuQmCC)","2dce88ce":"## Logistic Regression","2d7bee59":"Using Original Data is show good result. So let's use get_sample_origin() ","34ad50ce":"## Result Overview of Conventional Machine Learning Methods","1c91ab1d":"## MLP","313bd5be":"#### Network Model","8e3505d9":"# Split Train\/Valid Data","7f8668f3":"#### Working Model","b3ab265a":"# Train and Test as Deep Learning Manner","238d98b6":"#### Configuration","d1928483":"## Define train and validate process","b54e6760":"#### overall structure\n\n1. Embedding after encoding by character unit\n\u00a0\u00a0 -Since the maximum length of description is 79, the input array is 100\n2. Design Encoder to change sentence to Vector into DL\n3. After changing the Encoder DL with the same structure to Vector, find the likelyhood of True through DenseNet","f3ca70eb":"# Comparison","36efa554":"# Define function for selecting training data","d288ee27":"## Gaussian Naive Bayes","f2937ea6":"![image.png](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAlkAAANKCAYAAAC5zVvGAAAgAElEQVR4Aeyd3atlWVfe603s7moTFbslSDBGCaIRsYImiEhiR5Iqb\/SmA2\/9AUpdeOFFKOgbbwohgXSKInhh5br+gL7wA5U3CVKEViN2NNF6myQk6VZRq0SaUBGJ7PDsdz+nx5m19sfaa661x5zrt+D0+phzjjnGb4y11lPz7LP7xoYNAhBITeDnfu7nNu+8887mxo0b\/MBgUg2ojtggAIHlCNxYbipmggAExhKQwJK40p4NAlMJqJbYIACB5Qhwxy3HmpkgMIoAAmsULjqfQACRdQIkukCgIgFEVkWYmIJALQIIrFoksRMJILIiDY4hMD8BRNb8jJkBAqMIILBG4aLzCAKIrBGw6AqBCgQQWRUgYgICtQggsGqRxM4QAUTWEBWuQWA+Aois+dhiGQKjCCCwRuGi8xkEEFlnQGMIBCYQQGRNgMdQCNQigMCqRRI7hwggsg7RoQ0C9QkgsuozxSIERhHoSWA9e\/Zsc+vWravvcrp3797m5cuXo3jEzs+fP9\/cvXt3I7ts0wkgsqYzxAIExhBAZI2hRV8IVCbQo8B6+vTpFaUHDx5spggtRNYVyioHiKwqGDECgZMJILJORkVHCNQlIIH1hS98oZsvGpW4unPnzkbCyJtWoG7fvn21EqU+etHrx+JLK106liBzm459Xde0OiZb8ZquW9CpTStesmMbbpMvavcKm+fV9SF\/7HuPe7FhgwAEliPAHbcca2aCwBWB3gSWApO4ksiyILoKdncQBZfFUhRTFj8SPrZRrmSpv360xX4WUU+ePNm2qY\/tDdlQv33+7NztcofI6jKtBJWYACIrcXJwrU8CPQqsmCkJGK8mWSypXdctfHQukaTzFy9ebPcWSFEUlccScRqnzUJN51EwRdvq43l0HLd9\/pT94pjWjxFZrWcQ\/1sjgMhqLWP42zSBn\/\/5n+\/qV4THkiGB418hRvFlEaa2Tz\/9dCuyLJ5KYeUPvuu6+nus97IrkaV+6qMtCqtSTNnnff7Yhvv1tEdk9ZRNYmmBACKrhSzhYzcE3nnnnW4+g1UmRaJFP3GLgklt\/lVf7BNXpHQ9jtl3HMfr+JDIioIrjtvnT+zT2zEiq7eMEk92Aois7BnCv64I9PySK39lp8RJyHglq2z356b868JjK1mypzEWarKnX0dq3CGRNTSvbAxdj7\/O7KrwdsH0XH895ouY2ieAyGo\/h0TQEIHeX3IWPopTPxZYTpEEUdl2aCXLbf5sl89twytnh0SW5o7zRiEVr5e+2uee9uLGBgEILEeAO2451swEga3AAAMELkUAkXUp8sy7VgKIrLVmnrgvQoCX3EWwM+mOAPVHKUBgWQKIrGV5M9vKCfCSW3kBXDh86u\/CCWD61RFAZK0u5QR8SQK85C5Jn7mpP2oAAssSQGQty5vZVk6Al9zKC+DC4VN\/F04A06+OACJrdSkn4EsSWONLTn\/5d\/\/+\/e03tE9lr69e8F8U2pauiav\/AtHX9R1b\/vLS8i8K\/TUQ7ruW\/Rrrby25Jc6cBBBZOfOCV50SWNtLTl+5IIEloTV1s5iKIkvHFlD6OgZ\/DYO\/6sF9NTYKKx2r\/9q2tdXf2vJLvPkIILLy5QSPOiawtpechIzFjYWPzsVBP247lPI4Tv0tnDQmnnvlSnPGb4pXvyjAdF5zde2Q79na1lZ\/2fjjz\/oIILLWl3MiviCBtb3kJIK8YmSxFFeeyl\/xHUtNFFW2V9qXCCu\/nFTnt2\/fvlpR09haK2zHfM7Uvrb6y8QeX9ZJAJG1zrwT9YUIrOklVwoZiyKvRJWrTaekJIqsuHKlsdH+0MpVFFnqHwXgKXP30GdN9ddDvoihfQKIrPZzSAQNEVjTS64UURZBXnkq209JYxRZpT2fn7KSpbkQWacQpw8EIDCFACJrCj3GQmAkgTWJLIme+Cs5i6BaIkvoo+iKK1ulgCtXtjzWvoxMY7Pd11R\/zSYJx7sigMjqKp0Ek53A2l5ycbVoDpGlVav4Ga9T\/7qwFIDZ66aWf2urv1rcsAOBcwkgss4lxzgInEFgbS85rRRJaGk7JLLKlad9aOPKlfvomriWH6L3ypbaLMQ8hr8uNAn2EIDAnAQQWXPSxTYECgJrE1ljVow++OCDq7\/+K7BVP40rbNWNJza4tvpLnApcWwkBRNZKEk2YOQis8SV3yqqRxNjjx4+rfCv8sUzH1bVjfXtrX2P99ZZD4mmLACKrrXzhbeMEeMk1nsDG3af+Gk8g7jdHAJHVXMpwuGUCvORazl77vlN\/7eeQCNoigMhqK1942zgBXnKNJ7Bx96m\/xhOI+80RQGQ1lzIcbpkAL7mWs9e+79Rf+zkkgrYIILLayhfeNk6Al1zjCWzcfeqv8QTifnMEEFnNpQyHWybAS67l7LXvO\/XXfg6JoC0CiKy28oW3jRPgJdd4Aht3n\/prPIG43xwBRFZzKcPhlgm88847228n18uOHxgsXQOqPzYIQGA5Aois5VgzEwQgMJEAKzETATIcAhBYlAAia1HcTAYBCEwhgMiaQo+xEIDA0gQQWUsTZz4IQOBsAoiss9ExEAIQuAABRNYFoDMlBCBwHgFE1nncGAUBCFyGACLrMtyZFQIQOIMAIusMaAyBAAQuRgCRdTH0TAwBCIwlgMgaS4z+EIDAJQkgsi5Jn7khAIFRBBBZo3DRGQIQuDABRNaFE8D0EIDA6QQQWaezoicEIHB5Aoisy+cADyAAgRMJILJOBEU3CEAgBQFEVoo04AQEIHAKAUTWKZToAwEIZCGAyMqSCfyAAASOEkBkHUVEBwhAIBEBRFaiZOAKBCBwmAAi6zAfWiEAgVwEEFm58oE3EIDAAQKIrANwaIIABNIRQGSlSwkOQQAC+wggsvaR4ToEIJCRACIrY1bwCQIQGCSAyBrEwkUIQCApAURW0sTgFgQg8CoBRNarTLgCAQjkJYDIypsbPIMABAoCiKwCCKcQgEBqAois1OnBOQhAIBJAZEUaHEMAAtkJILKyZwj\/IACBKwKIrCsUHEAAAg0QQGQ1kCRchAAEvkIAkUUlQAACLRFAZLWULXyFwMoJILJWXgCED4HGCCCyGksY7kJgzQQQWWvOPrFDoD0CiKz2cobHEFgtAUTWalNP4BBokgAiq8m04TQE1kkAkbXOvBM1BFolgMhqNXP4DYEVEkBkrTDphAyBhgkgshpOHq5DYG0EEFlryzjxQqBtAoistvOH9xBYFQFE1qrSTbAQaJ4AIqv5FBIABNZDAJG1nlwTKQR6IIDI6iGLxACBlRBAZK0k0YQJgU4IILI6SSRhQGANBBBZa8gyMUKgHwKIrH5ySSQQ6J4AIqv7FBMgBLoigMjqKp0EA4G+CSCy+s4v0UGgNwKIrN4ySjwQ6IjA+++\/v7l58+bm0aNH26gssnSu62pngwAEIJCVACIra2bwCwIQ2Hz22Web1157bfPmm29u3n777Y1E1ltvvbU913W1s0EAAhDISgCRlTUz+AUBCGwJvPfee5vXX399K7AksvSjc11ngwAEIJCZACIrc3bwDQIQ2K5WvfHGG9dEls5ZxaI4IACB7AQQWdkzhH8QgMB21cqrWaxiURAQgEArBBBZrWQKPyGwYgJatfJqFqtYKy4EQodAYwQQWY0lDHchsFYC+gyWPuzOZ7HWWgHEDYH2CCCy2ssZHkNglQS0mvXuu+\/yWaxVZp+gIdAmgfQiy39NxP4rf1UFBzhQA9QANUANUANfqYHs0qsJkZUdIv5BAAIQgAAEILAsAQnN7Ft6D1uAmD3J+AcBCEAAAhDojUAL+gCR1VvVEQ8EIAABCEBgBQQQWRWS3ALECmFiAgIQgAAEIACBEQRa0AesZI1IKF0hAAEIQAACEMhBAJFVIQ8tQKwQJiYgAAEIQAACEBhBoAV9wErWiITSFQIQgAAEIACBHAQQWRXy0ALECmFiAgKDBJ49e7a5devWtf85su6JO3fubJ4\/fz44pvbFp0+fbufX\/uXLl5t79+5tf3Rcc5P9J0+ejDI5xZ8Y16hJ6QwBCKQg0II+YCUrRangBASGCVhkjRUfw9bOu7qEGLlEnEvEdR5xRkEAAqcQQGSdQulInxYgHgmBZgicTeCY+LBQePz48dWKVxRkHq\/7SD\/q7+1Qm2x4zIMHD67GlitHx+bfZ8c+aK8VOa3Mxfl0\/ZB\/Hl\/Tn9IPs3KMisXz7VtJjPFqBVIxaLMNs\/ypn\/qp7Wrg3bt3N\/px36Hx9ktjvel4nw\/uwx4CvRPQMyP7lt7DFiBmTzL+tUvAQkMv36EtvrzVHl++fjl7bGwr7aqPX\/Ru80tde92HmssiQ78y1PGh+Q\/ZKWNxX\/tankf\/4tha\/pR2yvnEQHzu379\/xSL6oWP5LMEk7ma\/j5PnM\/Nj42PubNv5Kf3gHAJrIdCCPkBkraUaibNJAhYbepjEH79gLXIsTqI4UFt8iUcAsZ+uxxd32eY5tLc4KMXD0Py6ZnGmOaKd6IuOHeeQndK\/OHasP5FH9Kec3+fqE\/1TPI49+hGPHXfsG+dS39LvMeNLW3EsxxBYEwHdY9m39B62ADF7kvGvXQJ+2Vt8lJGUL1z1s5CIx+W4uDKitqkiy2IkzhmPNUfpa\/SpjPOQf3FcKVbKOaIP8bj0x+P0vIk\/GuNNPqnNsfq697YhESae2luQuc1jS79lw32Gxjs\/8qdk4\/nZQ2BtBFrQB4istVUl8TZFoBQfpfN+MfvlHYVE2RbHxn667pe4XuBqi2Ii2inFQWyTnWj3kJ3oi47LOKOd0r84tpY\/5fxxDh07TnHZ91moKH6O+VW2a45D493uz3CpLxsE1k4AkVWhAlqAWCFMTEBgkMCpL3+JAG1RnEThVLaVduM4t\/lFrr1FVykOLD6G5o92PM52ymDdV35oK8+jf3Gs7e5bMYrjbPOUuOI4c9Qcv\/zLv7xlYRvRlzjGXPb5VfotO4fGq9029zGMvnAMgTUQaEEfsJK1hkokxmYJWBjoYRJ\/\/CtBv3iHRI6CLse7X9lmewZlu5rzXJElWxIO9jva8TzeW3Sor4VJ9L30rxznMfbbcUbhojFuL+NSm8WU\/Y02dM3nimPInzhe7bdv375a9fK8tuF47Xc5fzk+tu9bSVMfNgisiYDuy+xbeg9bgJg9yfgHgUsQsEiS0NFWCp5L+NTynBZxQ6toLceF7xA4l0AL+gCRdW52GQcBCBwl4NUrPQz1Y8F1dCAdrhEwR1axrmHhZOUEEFkVCqAFiBXCxAQEIAABCEAAAiMItKAPWMkakVC6QgACEIAABCCQgwAiq0IeWoBYIUxMQAACEIAABCAwgkAL+oCVrBEJpSsEIDCOgD+s7b+qGzf6eu+hv8hTD33OSw9b\/cQPhXtuXY9\/DShf+GzTdbacQaBFAoisCllrAWKFMDEBgS4JSADVEDRRMMWvPfBfMEo4+dgfrpfgcl8d2w\/bcr8uwRMUBFZAoAV9wErWCgqRECFwCQIWM15dsgh6+PDhVvDoAem2Q\/7Zjvrrx8JJYySUvEoVV7o+\/fTT7Ry2LxGmsV5Ri6Lr0Ny0QQACeQnons6+pfewBYjZk4x\/ELgEAYsqCxufWyRFgXTIP4ksiaJPPvlkK5w8XmNKseTzDz\/8cCu+vFrluX0unyzODs1NGwQgkJdAC\/oAkZW3fvAMAk0TKFePLHQkhLSV7ceC9YpWLZEVV7aOzU07BCCQjwAiq0JOWoBYIUxMQKA7Alo1ikLGIiuuJsX2YwDmEFn25djctEMAAvkItKAPWMnKVzd4BIEuCJQrVXOILIkk\/9pvzGeySt+6AE4QEFgZAURWhYS3ALFCmJiAQHcESlFVnkehEwWSjoe2oZUs25Qtt3t1Sr+W9K8Wdc1\/XSjb6m9xNjQX1yAAgfwEWtAHrGTlryM8hECTBCx6\/BksCyKLoBoiS2BsRw9cz6XrFm66Xgoq9Yuiq0nAOA2BlRNAZFUogBYgVggTExDokoAElVeTjgUoEXb\/\/v2tODrWd0q7xZfF3hRbjIUABC5HoAV9wErW5eqDmSHQPQGvZmm16dAm4SOBJaE19yZfWMWamzL2ITA\/AURWBcYtQKwQJiYgAAEIQAACEBhBoAV9wErWiITSFQIQgAAEIACBHAQQWRXy0ALECmFiAgIQgAAEIACBEQRa0AesZI1IKF0hAAEIQAACEMhBAJFVIQ8tQKwQJiYgAAEIQAACEBhBoAV9wErWiITSFQIQgAAEIACBHAQQWRXy0ALECmFiAgIQgAAEIACBEQRa0AdNrGQJJD8woAaoAWqAGqAGqIFYAyM02UW6phdZF6HCpBCAQEoCeriyQQACEGiFAE+sVjKFnxCAwHZFGwwQgAAEWiGAyGolU\/gJAQggsqgBCECgKQKIrKbShbMQWDcBfl247vwTPQRaI4DIai1j+AuBFRNAZK04+YQOgQYJILIaTBouQ2CtBBBZa808cUOgTQKIrDbzhtcQWCUBRNYq007QEGiWACKr2dThOATWRwCRtb6cEzEEWiaAyGo5e\/gOgZURQGStLOGEC4HGCSCyGk8g7kNgTQQQWWvKNrFCoH0CiKz2c0gEEFgNAUTWalJNoBDoggAiq4s0EgQE1kEAkbWOPBMlBHohgMjqJZPEAYEVEEBkrSDJhAiBjgggsjpKJqFAoHcCiKzeM0x8EOiLACKrr3wSDQS6JoDI6jq9BAeB7gggsrpLKQFBoF8CiKx+c0tkEOiRACKrx6wSEwQ6JYDI6jSxhAWBTgkgsjpNLGFBoEcCiKwes0pMEOiXACKr39wSGQS6I4DI6i6lBASBrgkgsrpOL8FBoC8CiKy+8kk0EOidACKr9wwTHwQ6IoDI6iiZhAKBFRBAZK0gyYQIgV4IILJ6ySRxQGAdBBBZ68gzUUKgCwKIrC7SSBAQWA0BRNZqUk2gEGifACKr\/RwSAQTWRACRtaZsEysEGieAyGo8gbgPgZURQGStLOGEC4GWCSCyWs4evkNgfQQQWevLORFDoFkCiKxmU4fjEFglAUTWKtNO0BBokwAiq8284TUE1koAkbXWzBM3BBokgMhqMGm4DIEVE0BkrTj5hA6B1gggslrLGP5CYN0EEFnrzj\/RQ6ApAoisptKFsxBYPQFE1upLAAAQaIcAIqudXOEpBCCw2SCyqAIIQKAZAoisZlKFoxCAwAaRRRFAAAINEUBkNZQsXIUABFjJogYgAIF2CCCy2skVnkIAAqxkUQMQgEBDBBBZDSULVyEAAVayqAEIQKAdAoisdnKFpxCAACtZ1AAEINAQAURWQ8nCVQhAgJUsagACEGiHACKrnVzhKQQgsNnceOeddzZ6cPFzncG3fMu3wIS6oAaoAWqAGqAGqIGzamCnr\/iqrCG1zb+Yh6hwDQKXJcB9eVn+zA4BCJxOYLd4hcgaQsbDfIgK1yBwWQLcl5flz+wQgMDpBBBZB1jxMD8AhyYIXIgA9+WFwDMtBCAwmgAi6wAyHuYH4NAEgQsR4L68EHimhQAERhNAZO1B9l\/+y3\/Z6ANrbBCAQC4CiKxc+cAbCEBgPwFE1h42d+7c2fzrf\/2v97RyGQIQuBQBRNalyDMvBCAwlgAia4DYw4cPN7dv3x5o4RIEIHBpAoisS2eA+SEAgVMJnC2ynj17trl169Yr3xuhFaDnz5+fOv9Z\/Z4+fbqZax79mlBQtGeDAATyEUBk5csJHkEAAsMEJoksrfZIbC29zSmy+DXh0tlkPgiMI4DIGseL3hCAwOUIzCayJITu3r27\/dEkWvWKguzBgwdXq2Dqq+3ly5ebe\/fuvXJdbXHlTGPjSpbG7wLZjpcd2\/riF7+4bfMch1Dza8JDdGiDQA4CiKwcecALCEDgOIFZRZaMS9xY8EgcaXvy5MnGxxJPEmP6FaOuSWSpv8ZZmKlNokrjtEWRpfFeUYvzxOPtoCP\/4deERwDRDIEkBBBZSRKBGxCAwFECk0TW0GeyLJ4kkuJqk4WVxU+5slRe97nGRSGmiOK52i3M1Ca7On\/x4sV2b2F2jAS\/JjxGiHYI5CCAyMqRB7yAAASOE5gksryCNDSNxY7EkjaLLK9KlSJr6LoEm8apbxRspcjaBXH1K0P1\/fTTT7ciq5xnyFd+TThEhWsQyEkAkZUzL3gFAQi8SmBxkeUVqlL8lNd9LpEVRZVCiOcWb2VoHl\/OU\/bj14QlEc4hkJsAIit3fvAOAhD4nMDiIktTa4XKv1aUYPKKmK75V38SR\/5MlgWTBJXHe2Urjndb\/HXhMZHFrwm3SPkPBJohgMhqJlU4CoHVE5gksoY+k2VhJHFjwSTKccXJomk3+fbXgeqz77raJKY8n369J9v6FaM2zWVbFl+2dUhk8WvCLT7+A4GmCCCymkoXzkJg1QTOFlmtU+PXhK1nEP\/XSgCRtdbMEzcE2iOwWpHFrwnbK1Y8hoAIILKoAwhAoBUCqxRZ\/JqwlfLETwi8SgCR9SoTrkAAAjkJbEXWt3zLt1x9pmmnuro+\/8Ef\/EH+34Q56xGvIHCUACLrKCI6QAACSQjsNNWNJO7gBgQgAIHDBBBZh\/nQCgEI5CGAyMqTCzyBAAROIIDIOgESXSAAgRQEEFkp0oATEIDAqQQQWaeSoh8EIHBpAoisS2eA+SEAgVEEEFmjcNEZAhC4IAFE1gXhMzUEIDCeACJrPDNGQAAClyGAyLoMd2aFAATOJIDIOhMcwyAAgcUJILIWR86EEIDAFAKIrCn0GAsBCCxJAJG1JG3mggAEJhNAZE1GiAEIQGAhAoishUAzDQQgUIcAIqsOR6xAAALzE0Bkzc+YGSAAgYoEEFkVYWIKAhCYlQAia1a8GIcABGoTQGTVJoo9CEBgLgKIrLnIYhcCEJiFACJrFqwYhQAEZiCAyJoBKiYhAIF6BN5\/\/\/3NzZs3N48ePdoatcjSua6rnQ0CEIBARgKIrIxZwScIQOCKwGeffbZ57bXXNm+++ebm7bff3uih9dZbb23PdV3tbBCAAAQyEkBkZcwKPkEAAtcIvPfee5vXX399K7B2D63tua6zQQACEMhKAJGVNTP4BQEIXBHQatUbb7xxTWTpnFWsK0QcQAACCQkgshImBZcgAIFXCcTVLK1qsYr1KiOuQAACuQggsnLlA28gAIE9BOJqFqtYeyBxGQIQSEUAkZUqHTgDAQgcIqDVK33YnVWsQ5RogwAEshBAZGXJBH5AAAJHCWg169133+WzWEdJ0QECEMhAoAmRtXPy2odeuXYDHjdgwH1ADVAD1MDaayCDmNrnwy43N\/a1p7guJ9kgAAEIQAACEIBAJJBdHyCyYrY4hgAEIAABCECgGQKIrAqpyg6xQoiYgAAEIAABCEBgJIHs+oCVrJEJpTsEIAABCEAAAjkIILIq5CE7xAohYgICEIAABCAAgZEEsusDVrJGJpTuEIAABCAAAQjkIIDIqpCH7BArhIgJCEAAAhCAAARGEsiuD1jJGplQukNg7QQePHgw+B1tT548GYXm2bNnm1u3bm3Gjisnefr06dYf7cvt+fPnmzt37mzks7ZDfcuxnEMAAvkJILIq5Cg7xAohYgICzRCQYJFwkYCZsl1CZE3xl7EQgEA+Atn1AStZ+WoGjyCQmsAhkeWVo\/v372\/u3bu3XWGSIPvggw+uVr+8cmWRpb5a0dLDSGNevny5jd+2dg+p7SqUwciGr3tlzStZtmt7+1ay3O\/hw4db0aj+XvHSPG4fsmM\/2EMAApcloPsz8yb\/brTgZGaI+AaBNRE4RWR5pcu\/nrN40lgJKgkYixi3ua8ElISWrrtN18pxFkTa6xmm8R5Xzu++nkP7cv44xzE7a8o3sUIgM4EW9AsiK3MF4RsEkhGwqNn9C20rcCyAvPpkUWMhIwGjLQqZss3CRsLqo48+uvZ5LfeVOIo2ZHNIOHm+0p+hvvb1UFtpJ1lKcAcCqyWAyKqQ+uwQK4SICQg0Q0CixCtFpdOlGLE4suiJAqlsiyLrS1\/60tWvA6OY0\/hoQ\/MPiSPPV\/pzqO+httJOGTfnEIDAZQhk1we751f+32leJn3MCgEIlASWEFnlSlb0QQJKDy6JIm1D4sirU6U4GuprQTbUts9O9IdjCEDgcgQQWRXYZ4dYIURMQKAZArVFllfFLHIkeuKqlo51zb+S9AqYBZD2Fl0eV9p0X8+hve0MiazSjvpoDttpJlk4CoHOCWTXB\/KPz2R1XoSEB4GaBCxqdg+PrfiwAClXjkohMySW4l8XRhFjW55HwsibxZLn1d7tcZw+3yXBZbsep33pW2zTPG6X7dKO\/WAPAQhcloDuz8yb\/ENkZc4QvkEAAosT8EqW\/7rRgsurXos7xIQQgMAgAUTWIJZxF7NDHBcNvSEAgRYIeGVr9y\/Rq6+TaMF3fITAWghk1we750f+5ba1FAxxQgACEIAABCBwGgFE1mmcDvbKDvGg8zRCAAIQgAAEIDALgez6gJWsWdKOUQhAAAIQgAAE5iaAyKpAODvECiFiAgLNEfBf8emzS1O38oPmtuevTtAzwH8hqDbPrev+agePObSPfxnpD7Wrvz\/YLnv68QfcFZu\/DuKQXdogAIHLEND9mnnbPVPyO5kZIr5BYI0EJERqCJAomIaEj4SORZDFj8SS++r4FD\/8QfbSXinw1G7hZt887xrzTMwQyEwAkVUhO9khVggRExBoioDFh1eXLIIePny4FTy6Z912KDDb2f1r70o4aYyEjcVOFEKffvrpdg7bj+Lp0Fyxzf4Oiaey7VQRF+1zDAEILEMguz7YPdtYyVqmHJgFAn0QsBCRwNHmc68uRYF0KGKJLImYTz75ZCucPF5jSnHj8w8\/\/HArviyQPLfPD82ntmOiTPPowejYtLfYO2abdghAYFkCiKwKvLNDrBAiJiDQFIFSqFjoSKBoK9uPBecVrSVElnzxfPbX\/kmo6XkTf\/04NhbbYg8BCMxPILs+kH984\/v8dcAMEOiKgMWIBIg2iyyvJo0VJhY9S4ks+eyVMc2tzT7roXHhZtgAACAASURBVOi44nXHtu3MfyAAgRQEEFkV0pAdYoUQMQGBpghYkFiMzCGyJGr8a7ran8mK9nRs\/\/WsKcVUGWtTicJZCHROILs+kH+sZHVehIQHgdoELEosSMrzKExKQTPky9BKlm3Klts9n1ahvOqla\/71nse4X5xL1yzaYj\/7p4dh+etDjdf8HhftcQwBCFyeACKrQg6yQ6wQIiYg0BQBix6LkihaFEgNkRXtlAIoCqMogEo\/ItQ4JtrzGF2LPxZq5a8Vo02OIQCByxLQPZt52z1T8juZGSK+QWCNBCRCvJp0LH4Jmfv3728kdObe5JcF0tS5LMxq2ZvqD+MhAIHrBBBZ13mcdZYd4llBMQgCjRPwapZWrQ5tEioSWBJac2+1xZxi868i5\/Yd+xCAwHgC2fUBK1njc8oICEAAAhCAAAQSEEBkVUhCdogVQsQEBCAAAQhAAAIjCWTXB6xkjUwo3SEAAQhAAAIQyEEAkVUhD9khVggRExCAAAQgAAEIjCSQXR+wkjUyoXSHAAQgAAEIQCAHAURWhTxkh1ghRExAAAIQgAAEIDCSQHZ9wErWyITSHQIQgAAEIACBHAQQWRXysFOC176NmWvXv50aHvCgBqgBaoAaWGMNVJAZs5nY5SP3N77PFj2GIQCB5gjoocUGAQhAoAUCiKwWsoSPEIDAFQFE1hUKDiAAgeQEEFnJE4R7EIDAdQKIrOs8OIMABPISQGTlzQ2eQQACAwQQWQNQuAQBCKQkgMhKmRacggAE9hFAZO0jw3UIQCAbAURWtozgDwQgcJAAIusgHhohAIFEBBBZiZKBKxCAwHECiKzjjOgBAQjkIIDIypEHvIAABE4kgMg6ERTdIACBixNAZF08BTgAAQiMIYDIGkOLvhCAwCUJILIuSZ+5IQCB0QQQWaORMQACELgQAUTWhcAzLQQgcB4BRNZ53BgFAQgsTwCRtTxzZoQABCYQQGRNgMdQCEBgUQKIrEVxMxkEIDCVACJrKkHGQwACSxFAZC1FmnkgAIEqBBBZVTBiBAIQWIAAImsByEwBAQjUI4DIqscSSxCAwLwEEFnz8sU6BCBQmQAiqzJQzEEAArMRQGTNhhbDEIDAHAQQWXNQxSYEIDAHAUTWHFSxCQEIzEYAkTUbWgxDAAKVCSCyKgPFHAQgMC8BRNa8fLEOAQjUI4DIqsfyqKV33nlnswPO\/sYNGMDgrBr4whe+cNY47j3uOWrg8xrQ+4htfgKIrPkZX80g2GwQOJUA9XIqKfqJAPVCHYwhQL2MoXV+X3G+AezzAY4ZCecxtOhLvVADYwhQL2No0Zd6WaYGxBmRtQxr\/qW5EOdepuEh2Esml4mDelmGcy+zUC\/LZBKRtQzn7SwU9YKwO5iKeukgiQuGQL0sCLuDqaiXZZIozqxkLcOalayFOPcyDQ\/BXjK5TBzUyzKce5mFelkmk4isZThvZ6GoF4TdwVTUSwdJXDAE6mVB2B1MRb0sk0RxZiVrGdasZC3EuZdpeAj2ksll4qBeluHcyyzUyzKZRGQtw3k7C0W9IOwOpqJeOkjigiFQLwvC7mAq6mWZJIozK1nLsGYlayHOvUzDQ7CXTC4TB\/WyDOdeZqFelskkImsZzttZKOoFYXcwFfXSQRIXDIF6WRB2B1NRL8skUZxZyZqJ9fvvv7+5efPm5tGjR9sZXNQ613W1s0HABKgXk2B\/CgHq5RRK9DEB6sUklt0jsmbk\/dlnn21ee+21zZtvvrl5++23t78ufOutt7bnuq52NgiYAPViEuxPIUC9nEKJPiZAvZjEsntE1sy833vvvc3rr7++FVg72NtzXWeDQEmAeimJcH6IAPVyiA5tJQHqpSQy\/zkia2bG+tfDG2+8cU1k6VzX2SBQEqBeSiKcHyJAvRyiQ1tJgHopicx\/jsian\/Em\/utBq1o6Z4PAPgLUyz4yXB8iQL0MUeHaPgLUyz4y81xHZM3D9ZrV+K8HVrGuoeFkgAD1MgCFS3sJUC970dAwQIB6GYAy4yVE1oxwo2n960EfdteeDQLHCFAvxwjRHglQL5EGx8cIUC\/HCNVrR2TVY3nQkv718O677\/JZrIOUaDQB6sUk2J9CgHo5hRJ9TIB6MYn5902IrJ2T1z48zrXtF5xdjMn8pXn+DNTGZWtjiP\/52Zx\/5JC\/XLtsDc2f9fNnoDYuWxtD\/M\/P5vwjd\/7emH+mCTPISbY8BLLnI7t\/eTK5jCfZ85Hdv2WylGeW7PnI7l+eTC7jSfZ8yL\/03\/ieHeIypZRnluz5yO5fnkwu40n2fGT3b5ks5Zklez6y+5cnk8t4kj0f8g+RtUwtdDNLC0XdDewOAqFeOkjigiFQLwvC7mCqFuoFkdVBoS0ZQgtFvSQP5jpMgHo5zIfW6wSol+s8ODtMoIV6QWQdziGtBYEWirpwmdMLEqBeLgi\/wamplwaTdkGXW6gXRNYFC6TFqVso6ha59uoz9dJrZueJi3qZh2uvVluoF0RWr9U3U1wtFPVMoWP2DALUyxnQVjyEellx8s8IvYV6WZ3Ievbs2ebWrVtX3zF1586dzfPnz89I7\/ghT5482c4tH7RpXs2vQok\/6rdv85inT59e66IxsuHrOr93797m5cuX1\/pNPWmhqKfGGMf3Vi+uH+VR94FrkXqJWT\/\/uLd60fPEz6b4rKRezq8RP6vN9cGDB+cbGzFS7wK9E+J7oaxX++T3yJB5jbl9+\/bVs0N9\/FyJsfha+ayR7VhLQ3Ocek22M287nvmdrAXRDwwVuTcVRXzZ+HrtveYpi81FGAtzyMfoi3wvC9R2ZN83h28en0cbU45bKOop8cWxQ7louV5cJ6qh8oFLvcTMn3fcW724JlQvrh2\/oN3G82VcrZTPj5LrOGun9\/Y8en47hxrtPMZ3oo7ju6ScRTEM2dCY+C6L\/XTs95Z9iXOWc5x63sL7aDUrWeVLZV8SXQBKnn5cCHH8\/fv3t20umtimY22xqHRse1HQeS61xy2OjdcP9bd9P\/SGfIq2zj3WPJm3Wv6dys85Mf\/M9aLaiPUX83hqvHHMKce18nHKXOf0qeXfqfxaqxfxUd04vkPPvHP4l2Nq5aO0W+t8in9DgmbIL\/fTXOavfr7+8OHDq9+A+N2hHA311fOorLkhgeTnluZxrmM\/+2kf3N\/n9tX+eE6fl\/7te8d5nlP3mjfztuOS38kaEF0MLo4hm4cKw4Xnl1RpT3b9ACrt6KZQfxWWx2v+sp99kq3Yz9c9pwrWm47V9\/Hjx9duMrVHn9x\/6r6Fop4ao8abdU\/14nrQw1N5dL2al9tVl7U26uVzkuX9Hl88GZ8v9ld14WO\/NBUV9fJ5bk85Eq+h53ocWz534hi3WfzENudH17SVbcrbJ598sr3nPV79bNPj7Ms+EeT3jcZ5vN9vis31Udotz0s7nnfsvoXny2pWssokDyUzPvTU7gefivLFixfbJVK\/mFzUZVHJRmnHc6lvvMlKG+4XbxBf0760a\/9kt2xT\/312os2xxy0U9diYhvr3WC+qB+VPe9dOfOBSL0OVcNq1HutFkTsu1Y2fdSZCvZjEaftTeJV94jvCuXAeyme+rut+1hjt470tD20rXrdNzRs32fK7Ll4v\/XOb7dg3n9tueV76bjtj9y28jxBZIatlAcUXkUWWC9QF66JyX53vK1BdnyKy5J+KSgWqTee+EYaKtuwfQj37sIWiPju4MLB8KISmq8MW6yXWX1mP1MtVakcf9FgvMSY\/3\/z8EyDqZVyZlM+LodHluyO+Z2I+NLZ85utc9\/cHH3yw3Wu+uNlWzGFp0\/1LP+L1+AzxddvROG0+tw\/luX13u+2M3bfwPlqNyBp6SJQJdeK11xbHHBNZ6u+bSH954WKLc+haLFAXfdlX5xZPcXz0z76pyMof+29\/VOC1thaKukas5hsfSKXdmA+1xTHZ6kX+yd9Yf2V9lOdlvOecUy+fU2utXsp6OHb+eaTnH\/VcL6XQGKJUMo7viHJ8WU\/u+8UvfvHafe553B6faaVN9Y3PMR3HrfTPbbbjd5nn8nnpa3luO2P3LdTLakSWkufEqlC8qQj84jlUGGXhlX1lz4WmxGuucotzqe2Qjeij7dj+UJtji\/Oq35BYs71z9i0U9TlxDY0x08g75rDMn\/trn7Feor+lf4qfehmqgtOvOf+91EuMx\/USnyfUy+m14Z7x+aFrvictfMpnvBj7\/VS2OT\/ae5N9PaNtz9eH5tK10qauDdm1nX1ttqP5venYfpS1IjuOy\/3P2bfwPlqVyFISXQxKjn7KRLvo3e4C9kPGReN+sajcJz6IYuGob5zPNjyX9\/EhHce7f5zT7WXx2xf7635T9\/Ix81bbv97qJcYT65R6qVPVka9qMd7vmsH3sO\/17M8XPYvsa4yFejm\/XiJTsS2f0bGGInNf9\/uhfObLI19zn+ilay\/OZ5vOsfeuyzhex+5f2vf1+G5yjchmjEN21C8+f8p5Tj2X7czbjmd+JzNDXNo3FXe8SfbN7xtq382yb9yx6y0U9bEY1tROvRzOdvZ6Pux9\/Vbq5TBT6uUrAimKqcPEXm21+CqF2qs9j1\/Jng\/5t7qVrONpy93jVPF06sNybLQtFPXYmHruT70czm72ej7sff1W6uUwU+rlK6tZ5Te+H6Z2vVX\/8K+xiiWr2fMh\/xBZ1\/PP2RECLRT1kRBoXpAA9bIg7A6mol46SOKCIbRQL4isBQuih6laKOoeOPcSA\/XSSyaXiYN6WYZzL7O0UC+IrF6qbaE4WijqhVAwzQkEqJcTINHligD1coWCgxMItFAvqxNZp37m4IT8vvJn+h6jz0Mp+fqJHxD03Lpe\/rWFxw7t\/ZcbGjf0u2y3e66av\/Mu\/ZEPmbfa\/jlnNf6AwB\/4LP9wgXq5XEVRL5\/\/xRjPl+N1SL1QL8er5PMeqpfViSy90IaEyudYTjvyy1cQ40vTgkcvZR9rTm0SQe6r41P8sA3Z85wWU\/ZU5\/LD193P87pfjX3th0wNn6KN2v5RL5Hu+OPa+RjvweERtf2jXg7zPtZaOx\/H5hvbXts\/6mVsBq73r52P69ann8m\/VYksiw+LEQuYof+r+SG8trMDeCWcNEY3jVep4srFp59+uhVVnluiSeOPrZAcuwltR7ZsW37o+BQRdyjOoTbNk3mr6Z\/zbK7Uy\/jM18zH+NmPj6jpH\/VynPexHjXzcWyuc9pr+ke9nJOB62Nq5uO65Tpn8m9VIssvSQsbn3t1KQqkQ4h1c+jFO\/R\/NS\/Fjc8\/\/PDDrfjSHNo8t8\/3zafxd+\/e3f4oYfZV\/X2TWiSqrzfFaLHnazX2LRR1jThlwzmiXs4nSr3curpneb4cryPqhXo5XiWf92ihXlYlsrzqU740LU7K9s9TOXxkkROFj0WV2rT5fIrIUiHJN89nf\/XQ1mrVl7\/85WurZJp3bCzDEb56tYWiftXr866UDC26zL9sPzaL80e9HCO1XHvNei7rgXoZn8ea+Rg\/+\/ERNf2jXo7zPtajZj6OzXVOu\/xblciSKFHQKm5tfgh6Naks+mNQl3pp+td+\/vWjzi3a5LP98MtffjsWx3YsllPbWyjqU2M51o96OUboeDv1cmv7EQKR8j2p\/Smb7+u5RTnPl1Oy8ZU+NeuZ58vp3Pf1rJmPfXNMuS7\/ViWyyofcHCJLN45\/TWdRpIdkrc9keWXsZ3\/2Z7eCcZfEq2MLrTLWKYUSx7ZQ1NHfKcclQ+plPE3qpa7I4vkyvgZrjqhZzzxfpmemZj6me\/OqBfm3KpFVviTL81j0USDpeGgb+pembcqW2\/Vg1CYB5H+V6pr\/Bekx7hfnim22ZyHlfkPXNb\/FnvvV2LdQ1DXilI3IfuicejlOmnoZFlk8X4Zrh3qhXoYrY\/hqC\/WyKpFVipHyJVrjpalSsB0VQBREfrDqehRApR9lOUV7FmmxTxmX2jSvRVzsO\/W4haKeGqPHl1zLPDkv2ju3Q\/kp7ZV9bId6Manl9jXrmXqZnrea+ZjuzasWavpHvbzKd+yVmvkYO\/cp\/eXfqkSWoGi1qHzJ7YOll+r9+\/e3L9B9fWpdl19DK1nn2PcLv5a96EMLRR39nXpMvUwjSL3s58fz5VU21MurTHyFejGJz\/ct1MvqRJb\/9aDVg0ObhIoElgp77q32zaPY5ljFEocWirpmvqiXaTSpl2F+PF+GuVAvw1yol2EuLdTL6kTWcKq4eiqBFor61FjoNz8B6mV+xj3NQL30lM35Y2mhXhBZ89dBVzO0UNRdAW88GOql8QQu7D71sjDwxqdroV4QWY0X2dLut1DUSzNhvv0EqJf9bGh5lQD18ioTruwn0EK9ILL254+WAQItFPWA21y6EAHq5ULgG52Wemk0cRdyu4V6QWRdqDhanbaFom6VbY9+Uy89ZnW+mKiX+dj2aLmFekFk9Vh5M8bUQlHPGD6mRxKgXkYCW3l36mXlBTAy\/BbqBZE1Mqlr795CUa89R5nip14yZSO\/L9RL\/hxl8rCFemlCZAkkP3kYZLrJSl+okzx14lyUOcp0bh\/Z56mbTPVR+kKd5KkT56LMUabznY83MvnUrS+CzQaBUwlQL6eSop8IUC\/UwRgC1MsYWuf3Fef0K1nnh5drJEWdKx\/ZvaFesmcol3\/US658ZPeGelkmQ+KMyFqGNf\/SXIhzL9PwEOwlk8vEQb0sw7mXWaiXZTKJyFqG83YWinpB2B1MRb10kMQFQ6BeFoTdwVTUyzJJFGdWspZhzUrWQpx7mYaHYC+ZXCYO6mUZzr3MQr0sk0lE1jKct7NQ1AvC7mAq6qWDJC4YAvWyIOwOpqJelkmiOLOStQxrVrIW4tzLNDwEe8nkMnFQL8tw7mUW6mWZTCKyluG8nYWiXhB2B1NRLx0kccEQqJcFYXcwFfWyTBLFmZWsZVizkrUQ516m4SHYSyaXiYN6WYZzL7NQL8tkEpG1DOftLBT1grA7mIp66SCJC4ZAvSwIu4OpqJdlkijOrGQtw5qVrIU49zIND8FeMrlMHNTLMpx7mYV6WSaTiKxlOG9noagXhN3BVNRLB0lcMATqZUHYHUxFvSyTRHFmJWsZ1qxkLcS5l2l4CPaSyWXioF6W4dzLLNTLMplEZC3DeTsLRb0g7A6mol46SOKCIVAvC8LuYCrqZZkkijMrWcuwZiVrIc69TMNDsJdMLhMH9bIM515moV6WySQiaxnO21ko6gVhdzAV9dJBEhcMgXpZEHYHU1EvyyRRnFnJWoY1K1kLce5lGh6CvWRymTiol2U49zIL9bJMJhFZy3DezkJRLwi7g6molw6SuGAI1MuCsDuYinpZJonizErWMqxZyVqIcy\/T8BDsJZPLxEG9LMO5l1mol2UyichahvN2Fop6QdgdTEW9dJDEBUOgXhaE3cFU1MsySRRnVrKWYc1K1kKce5mGh2AvmVwmDuplGc69zEK9LJNJRNYynLezUNQLwu5gKuqlgyQuGAL1siDsDqaiXpZJojizkrUMa1ayFuLcyzQ8BHvJ5DJxUC\/LcO5lFuplmUwispbhvJ2Fol4QdgdTUS8dJHHBEKiXBWF3MBX1skwSxZmVrGVYs5K1EOdepuEh2Esml4mDelmGcy+zUC\/LZBKRtQzn7SwU9YKwO5iKeukgiQuGQL0sCLuDqaiXZZIozqxkLcOalayFOPcyDQ\/BXjK5TBzUyzKce5mFelkmk4isZThvZ6GoF4TdwVTUSwdJXDAE6mVB2B1MRb0sk0RxZiVrGdasZC3EuZdpeAj2ksll4qBeluHcyyzUyzKZRGQtw3k7C0W9IOwOpqJeOkjigiFQLwvC7mAq6mWZJIozK1nLsGYlayHOvUzDQ7CXTM4Tx\/vvv7+5efPm5tGjR9sJXC8613W1s0FgHwHXy752rtchgMiqw3HQCg\/BQSxc3EOAetkDhsuDBD777LPNa6+9tnnzzTc3b7\/99vYfcW+99db2XNfVzgaBfQQQWfvI1L2OyKrL85o1HoLXcHByhAD1cgQQza8QeO+99zavv\/76VmDtHubbc11ng0AkwD\/iIo3ljhFZM7PmITgz4M7MUy+dJXTmcCTM33jjjWsiS+esYs0MvkHz\/CPuMklDZM3MnYfgzIA7M0+9dJbQBcKJwlyrWqxiLQC90SlirbDyuUwSEVkLcI6FzUNwAeCNT0G9NJ7Ahd2PwpxVrIXhNzZdrBWLLGpm3iQisublu7UeC5uCXgB441NQL40n8ALuS5jrw+7as0HgEAH+EXeITv02RFZ9poMWeQgOYuHiHgLUyx4wXB4kIGH+7rvv8lmsQTpcjAT4R1ykMf8xImt+xtsZeAguBLqTaaiXThJJGBBISIB\/xC2XlCZE1s7Ja39Bw7Xtt8jC5CvfpgsHOFAD1AA1sNIaWE4yjZ+pGZE1PjRGQAACEIAABCDQMwGJmMwbIitzdvANAhCAAAQgAIG9BBBZe9Gc3pAd4umR0BMCEIAABCAAgVoEsusDVrJqZRo7EIAABCAAAQgsSgCRVQF3dogVQsQEBCAAAQhAAAIjCWTXB6xkjUwo3SEAAQhAAAIQyEEAkVUhD9khVggRExCAAAQgAAEIjCSQXR+wkjUyoXSHwFoJPHny5Nr3ED148OCiKJ4+fbqRT3NtL1++3CjG58+fzzUFdiEAgYkEEFkTAWp4dogVQsQEBFITkNi4devW5tmzZ1s\/JTzu3LmzuXfv3kZiZOlNfsifOUWWYlaMiKyls8t8EDidQHZ9wErW6bmkJwRWSeBUQeN+u4fKRitN2nz94cOHW9Gi9rgKJpEmseZxsS2unlnkWeCV\/WNfiz\/b1vn9+\/e3c5TCSfPZltuirX3zOr5VFgVBQyAJAd27mbfdsyW\/k5kh4hsEeiYgwWGhsS9OCyn11RbHuM3CJ7apr0SO2yRc9FDSXuPu3r27XUmysHI\/2\/R8cZz7yq5Flv0fGlfatMjT3qLLdty3jGEfF65DAALzEkBkVeCbHWKFEDEBgbQEThEUZZ8odCxsLF6GBJHF0hAEte3+NXglxmzT46Igkg2dSxC9ePFiu7dYin7FudTfc9jPaLOcz+eKhQ0CELgcgez6YPdcYSXrciXCzBDITaAUUEPeRkGi9ihmLEgsiKLIKtuibfeTWJI97b2SFMd5lckiyXsJq08\/\/fTauOiX5rKAk\/9lW4zJvti2944p+s0xBCCwHAHdi5m33bMiv5OZIeIbBHomEAXNvjhLIRYFSznegkX72K+0HUWOhdSQyNK42DfaKcfF+Q61lTbLGOIcHEMAApcjgMiqwD47xAohYgICqQlIxPhzTXLUYmWf6ImiqxQoUWTJVhRIsW+04TH75nN7KdzGCCnNp2eN\/Cn9Ku1E37ad+Q8EIHARAtn1gfy70YKTF8kek0IAAlcELEJ2D42rX925gwWS2qMg83WN1xYFkc4tYGzXIsdCzvZu3779ygfR1WbhFf3zNdv2uW16DvsW53Bf+6m2KN507muOnT0EIHAZAroXM2+750V+JzNDxDcIQAACEIAABJYngMiqwDw7xAohYgICEIAABCAAgZEEsusDVrJGJpTuEIAABCAAAQjkIIDIqpCH7BArhIgJCEAAAhCAAARGEsiuD1jJGplQukMAAhCAAAQgkIMAIqtCHrJDrBAiJiCQmoD+Gs9\/kTfV0aGvP4h\/yee\/7vM88a8GT\/XBf0WoZ0f8S0fb1F62YpvGaG7ty80+yE9tOi\/9LMdwDgEIzE8guz6Qf3yFw\/x1wAwQaJaAv+bAAmNKIBI2pfCxIJJw8bHFVJzbx+p3aLMN9Su\/wsHjbMsiS7Hp+Itf\/OJGXxUR57A9+W0GHu9z22UPAQgsSwCRVYF3dogVQsQEBNISkODx\/\/svipb79+9vBZPbjgVggVWKLAmVKGDifBI7FkJxbh3v2yyYJISGNts55ofHRr8tqmyD1SxTYg+ByxDIrg\/kHytZl6kNZoVAegIWExIa2nxu4eMVnbjysy+ohw8fbtRftjxefaOQKs+j4FJbeT40l+xJ+EkA6QFXikC3yx\/7Ib\/u3r27+eSTT7bjLKYs2B4\/fnxNCNrP0vaQP1yDAATmI4DIqsA2O8QKIWICAikJ+FdlpciyuCjbTwliCZGlZ4bElEWhV5zsr9r0Y5E15LfHyl+JLdm0+FL\/Y+OHbHINAhCoSyC7PpB\/rGTVzTnWINANAa9UlSKrFC1uPyXwJURWFE9xPh3b92MiSe0Wk\/tEVim8TomfPhCAQD0CiKwKLLNDrBAiJiCQkoBXfiyivLpjoVK2nxJEFD3qXwoYtVvcRCFUzr1vLtmLIss2Pvzww63d3b8stytTOo59bdNzlX117tUs25UQZYMABC5DQPdk5m33DMnvZGaI+AaBXglYbFhUleelyCoF0xCXUmTZhkSL7VvUeSVNdof62a84j\/vJhu0N9Rsjkobi0niLwTg\/xxCAwHIEEFkVWGeHWCFETEAgLYG4slSKlihoFMCQGCkDK0WW2i2mdK+Xgsg21WbxVfpRzhHt7RNCU0TWsflLfziHAATmIZBdH8g\/PpM1T+6xCoEuCEiw6LujtD9lkxCSMJp7kz\/6GgkJnqU3i8sl4lw6NuaDQEsEEFkVspUdYoUQMQGB1AQknLyKdMhRiY5T+h2ycUqbhJUE1qnC7xSbY\/poFaxccRsznr4QgEAdAtn1AStZdfKMFQhAAAIQgAAEFiaAyKoAPDvECiFiAgIQgAAEIACBkQSy6wNWskYmlO4QgAAEIAABCOQggMiqkIfsECuEiAkIQAACEIAABEYSyK4PWMkamVC6QwACEIAABCCQgwAiq0IeskOsECImIAABCEAAAhAYSSC7PmAla2RC6Q4BCEAAAhCAQA4CiKwKedgpwav\/1xjn22+QhcdXvkkXDnCgBqgBamDFNVBBZsxmoomVrNmixzAEINAcgez\/cm0OKA5DAAKzEUBkzYYWwxCAwBwEEFlzUMUmBCAwBwFE1hxUsQkBCMxGAJE1G1oMQwAClQkgsioD6A7UdAAAIABJREFUxRwEIDAvAUTWvHyxDgEI1COAyKrHEksQgMACBBBZC0BmCghAoAoBRFYVjBiBAASWIoDIWoo080AAAlMJILKmEmQ8BCCwKAFE1qK4mQwCEJhAAJE1AR5DIQCB5QkgspZnzowQgMB5BBBZ53FjFAQgcCECiKwLgWdaCEBgNAFE1mhkDIAABC5JAJF1SfrMDQEIjCGAyBpDi74QgMDFCSCyLp4CHIAABE4kgMg6ERTdIACBHAQQWTnygBcQgMBxAois44zoAQEIJCKAyEqUDFyBAAQOEkBkHcRDIwQgkI0AIitbRvAHAhDYRwCRtY8M1yEAgZQEEFkp04JTEIDAAAFE1gAULkEAAnkJILLy5gbPIACB6wQQWdd5cAYBCCQngMhKniDcgwAErgggsq5QcAABCLRAAJHVQpbwEQIQEAFEFnUAAQg0RQCR1VS6cBYCqyaAyFp1+gkeAu0RQGS1lzM8hsBaCSCy1pp54oZAowQQWY0mDrchsEICiKwVJp2QIdAyAURWy9nDdwisiwAia135JloINE8AkdV8CgkAAqshgMhaTaoJFAJ9EEBk9ZFHooDAGgggstaQZWKEQEcEEFkdJZNQINA5AURW5wkmPAj0RgCR1VtGiQcC\/RJAZPWbWyKDQJcEEFldppWgINAlAURWl2klKAj0SwCR1W9uiQwCvRFAZPWWUeKBQOcEEFmdJ5jwINARAURWR8kkFAisgQAiaw1ZJkYI9EEAkdVHHokCAqshgMhaTaoJFALNE0BkNZ9CAoBA3wTef\/\/9zc2bNzePHj3aBmqRpXNdVzsbBCAAgYwEEFkZs4JPEIDAFYHPPvts89prr23efPPNzdtvv73RQ+utt97anuu62tkgAAEIZCSAyMqYFXyCAASuEXjvvfc2r7\/++lZg7R5a23NdZ4MABCCQlQAiK2tm8AsCELgioNWqN95445rI0jmrWFeIOIAABBISQGQlTAouQQACrxKIq1la1WIV61VGXIEABHIRQGTlygfeQAACewjE1SxWsfZA4jIEIJCKACIrVTpwBgIQOERAq1f6sDurWIco0QYBCGQhgMjKkgn8gAAEjhLQata7777LZ7GOkqIDBCCQgUATImvn5LUPvXLtBjxuwID7gBqgBqiBtddABjG1z4ddbm7sa09xXU6yQQACEIAABCAAgUgguz5AZMVscQwBCEAAAhCAQDMEEFkVUpUdYoUQMQEBCEAAAhCAwEgC2fUBK1kjE0p3CEAAAhCAAARyEEBkVchDdogVQsQEBCAAAQhAAAIjCWTXB6xkjUwo3SEAAQhAAAIQyEEAkVUhD9khVggRExCAAAQgAAEIjCSQXR+wkjUyoXSHwLNnzza3bt165XvK7t27t3n58uUW0IMHDzZ37tzZPH\/+\/BVgT5482Y6XHfXXuDj2lQFnXnj48OFGc2g75M+Z5q8NOxSHeSnufZs4idfugbT1V301xtfK\/Ze+9KUtN12PrKOtfVzl0+3bt6\/42MfSlv21Tdvz+dOnT92lyj7WRhWDlYwov6ohxc0GgUwEdM9m3nbPrfxOZoaIb+si4BdyFA1D1\/ZRWeJFusQcMb6pIksvcAsY+a4HUxQwFjXuo7k95+4hdtXfudD12D\/6G+dzf83nedQeN\/sU7UUbse+U46XzdqqvijUK2VPH0Q8CcxPQfZ552z2f8juZGSK+rYuAX8p6IXorX87lS0nnutm0Anb\/\/v29K1kep5e5+scX\/+5mvRITmlvtvi7b8i1esw3b9UqEY\/BYjdFm4aL55afa48vVcXqc7JbjZCNunivyiu2e0\/7HNh973ihy4jitStm+hYquxf62Vfqj\/jFG9\/Pe\/RVztGfOZuf+3tu\/Q7bV91ht3L17d6Mf84n+yCfP7\/ncX20eY58Uq3MX\/SpjMUPNFceU9myXPQQuRUD1nHnb3W\/5ncwMEd\/WRcAvOb18vPkl5WtR1MQ2vwj9svK5X95+4ZYvTrfHl5\/9UN\/STuwnH6M\/HmdfY1\/bsX9lX9mJ4\/QAGZrfXLQvbcQ2HXtOv\/wde+x3SGRJLIiPftRPewlEX5P9uMm+49N1xRSFicZ5jH0bsmefzCPOoWOPjWKm7CNfFLdsuL99K881tmR5KHf2z\/EM9XWb\/TD72FfzxvopY+AcApckoPsn87Z7ruV3MjNEfFsXAb\/oLAq89wtLNOJLKR6rLb7A\/CL12LKv59IYbT7Xy1DX9r3A4xylP2WbX8aa2\/7YbmzbOrDZXP1KzXHLF49zHO4bfXYMsc3Hjss2Szv2I173nPL1gw8+2Aon+aLzx48f7xVZZfyKW\/NqrOfRNW26JtHzW7\/1W6\/YK\/s6Fl93LN5bPLmf9mW+o2+OL8Yc2zXec8XcDfX\/6KOPXvFfsTnueCy75TylnzEGjiFwSQKq4czb7v7P72RmiPi2LgIWBHoRefPLzuIkvpTisfrHF1j5Ii37+uXnF7X3slH2tS\/lHDqPfeOx2uy7rpf+DLXJB\/ll37Qvx0VfhnjFdh\/bRozRbfYjCgj3F3P5IBGjGPaJIttyH\/mlLfKINj\/++OOtYBNrX4\/zD\/nkObT3GNdEbPNxnFvXDtWG2sv+9kHXPV\/00fY+\/PDDbSzq5y3mLx6XfgzNaxvsIXBpAnpeZN52z7P8TmaGiG\/rIrBPNMQXYHkcVzH84pOd8sUYx4nqvrnUFu2UGSjbot2y7dCLOraVvsQXcxlH9KccF9uGjt1fPnuzH1FAeE6JmE8++WS7UqMHWjyP\/W2rjF\/nUQiZ1c\/\/\/M9ffX7Jwk9727RP0U\/PoX30T32HNo09tTY0vvQ9+uD57F\/sz0rWEH2u9UBA92TmbffsyO9kZoj4ti4CFgF64Xnzy84vOL+odd1iRP39IvSL1edD42S7bI8v2dKPOGfsJzuxrRwX+5bzOS6Nj8fupweI4vO54zAX7cv5Ylts1xzxXH5589zRvue0QNJ4+aO922J\/23I+tNcW\/fM89sVjhuy5b\/TT\/U\/d2xfZ8Bz7aqP0VedDuXNO7J8ZDPV1W2RQ+qF5xMOcT42NfhBYgoDqPfMm\/2604GRmiPi2LgJ+Ie1unqvVjvgSKl9KesGpv16gp\/x1oV6Q3vyy9HwWB2r3S9q25Zu26KPmLv2J7X6pa5xfsH75em6LDseh+fTXexqra+W4rRO7\/8S5HIP2tqluMY6yTe32w37pmuc0d9s41R\/18+axmjvO4XbPFds8Rvspm5keqw3PEXnuy93QX4ZqvOcailP50PXSD41zrGqfGq\/jYA+BGgRUk5k3+YfIypwhfIMABKoTkKCIIu+cCSRYoug6x0bNMUNCsKZ9bEEgIwFEVoWsZIdYIURMQAACCxLQalD8xvexU3tlLdOqDiJrbBbp3wOB7PqAlaweqowYIAABCEAAAiskgMiqkPTsECuEiAkIQAACEIAABEYSyK4PWMkamVC6QwACEIAABCCQgwAiq0IeskOsECImINAEgamfZYpB+nNN8QPovqZ7Pv7lnMbFv3Ab+4FzfUi9tBf\/0u5Qm+eyb5k+hxV5cgyBNRLIrg\/kH39duMbKJGYInEFAgsii44zhV0Pi1xBEkRXt69hfz2CBI2Hk4zjuyvDAgfqVos3zy562OK\/FnPbu57liv4GpuAQBCCxMAJFVAXh2iBVCxAQE0hOw4LAwsRjR\/ydQK0G6T912KBjbUX\/9WMCU4sn2tY\/Hsq0xFmCH5lI\/z1OuVsVx8tvt8dg+WViWfkQbHEMAAssT0P2deds9f\/I7mRkivkFgDQQkMCxEFK8Fh0XSqcJHIuvhw4evrBJZfFmoxfMofDR3eb6Pv+eRb9H32N9CyqLN8yo+H9sn9\/V5tMMxBCCwPAFEVgXm2SFWCBETEEhPoBQ2FlkWHGX7sYAsYCzSfG578by0XZ4fm2ufyPJ3S+kZYz9ky7Hpuv3RdYus2PfY3LRDAALzEciuD+Qfn8maL\/9YhkA3BEqhYiGivbaxwsciyoLF5xY18by0XZ4fg1z67v66roegV7F0PcZViiqf+9eHtsMeAhC4DAFEVgXu2SFWCBETEEhPoBQ2UYzI+bL9WEAWURZZFjA+j\/bjseyqTxRGx+ZS\/\/LXhfJXz5byemk7npc+HpuXdghAYF4C2fWB\/GMla94awDoEuiBQCp3yPIosCyhd27e5j0SMNx17lUhjLaQsbnTNv+LzuNIP24p79Y1iynPrAajxcdMcvu557ZPPD8UVbXEMAQjMSwCRVYFvdogVQsQEBNITsDCxwCjFja5byJR9h4JzH4sl9bGA0j1vWx7r\/mqz6FFb6Yf7x30psiykZMs\/cT7193ULvVPnivNyDAEIzEtA92nmbfccye9kZoj4BoG1EJD4iKLoUNwSMhZkh\/rVaJNP5YpUDbulDcUTBV7ZzjkEILAsAURWBd7ZIVYIERMQaIKAVpNu3769\/WqDQw6r3\/3797crU4f61WiTuDpV+E2Zz78qXELMTfGTsRBYE4Hs+oCVrDVVI7FCAAIQgAAEOiKAyKqQzOwQK4SICQhAAAIQgAAERhLIrg9YyRqZULpDAAIQgAAEIJCDACKrQh6yQ6wQIiYgAAEIQAACEBhJILs+YCVrZELpDgEIQAACEIBADgKIrAp5yA6xQoiYgAAEIAABCEBgJIHs+oCVrJEJpTsEIAABCEAAAjkIILIq5GGnBK++gZnzz7+lGhawoAaoAWqAGlhzDVSQGbOZ2OUl9ze+zxZ9JcOCmHnDv\/Oz80u\/9EvbL98838K8I3\/xF39x88M\/\/MPzTjLBenZ+Co37Y0KCk\/PLXn\/cv9Nqr4XRiKwKWeIhPQ1iZn6\/8iu\/svkn\/+SfTAtwxtHZH9LZ+Sk1mesP\/6bdPNnrj\/t3Wn5bGI3IqpAlHtLTIGbm96UvfWnzQz\/0Q9MCnHF09od0dn5KTeb6w79pN0\/2+uP+nZbfFkYjsipkiYf0NIiZ+f37f\/\/vN++88860AGccnf0hnZ2fUpO5\/vBv2s3z7\/7dv9v843\/8j6cZmXE09++McJOYRmRVSAQP6WkQM\/P7D\/\/hP2x+8Ad\/cFqAM47O\/pAWv3\/0j\/7RjASmm85cf4oO\/87PMffv+ew0Mju\/adEtM1r3743sN\/EyKM6fJTs\/\/Ds\/t7\/6q7+6+Yf\/8B+eb2DmkdlFVnZ+Sg\/3x7Qizcwve\/1x\/06rvRZG6\/5AZE3MVOaHjELDv\/MT\/PTp080P\/MAPnG9g5pHZH9LZ+XF\/TC\/QzM+X7PXH\/Tu9\/rJbQGRVyFDmh4zCw7\/zk\/wf\/+N\/3Hz\/93\/\/+QZmHpn9IZ2dH\/fH9ALN\/HzJXn\/cv9PrL7sFRFaFDGV+yCg8\/Ds\/yR9++OHm+77v+843MPPI7A\/p7Py4P6YXaObnS\/b64\/6dXn\/ZLSCyKmQo80NG4eHf+Un+9V\/\/9c0\/+Af\/4HwDM4\/M\/pDOzo\/7Y3qBZn6+\/Nqv\/Rr374QUt3D\/TghvkaGIrAqYMz9kFB7+nZ\/k3\/iN39j8\/b\/\/9883MPPI7CJL\/L73e793ZgrTzHN\/9MuP+3dabrPzmxbdMqMRWRU485CeBjEzv9\/8zd\/cfM\/3fM+0AGccnV1kZeen1GSuP\/ybdvNkrz\/u32n5bWE0IqtClnhIT4OYmd9v\/dZvbf7e3\/t70wKccXT2h3R2fkpN5vrDv2k3T\/b64\/6dlt8WRiOyKmSJh\/Q0iJn5\/ef\/\/J833\/3d3z0twBlHZ39IZ+en1GSuP\/ybdvNkrz\/u32n5bWE0IqtClnhIT4OYmd\/v\/M7vbL7ru75rWoAzjs7+kM7OT6nJXH\/4N+3myV5\/3L\/T8tvCaERWhSzxkJ4GMTO\/\/\/pf\/+vmO7\/zO6cFOOPo7A\/p7PyUmsz1h3\/Tbp7s9cf9Oy2\/LYxGZFXIEg\/paRAz8\/vd3\/3dzd\/9u393WoAzjs7+kP693\/u9zXd8x3fMSGC66cz1p+jw7\/wcc\/+ez04js\/ObFt0yo3X\/8r\/Vmciah+A0gJn5PXv2bPPt3\/7t0wKccXR2kZWdn1KTuf7wb9rNk73+uH+n5beF0YisClniIT0NYmZ+H3\/88ebbvu3bpgU44+jsD+ns\/JSazPWHf9Nunuz1x\/07Lb8tjEZkVcgSD+lpEDPz+2\/\/7b9t\/s7f+TvTApxxdPaHdHZ+Sk3m+sO\/aTdP9vrj\/p2W3xZGI7IqZImH9DSImfn9j\/\/xPzbf+q3fOi3AGUdnf0hn56fUZK4\/\/Jt282SvP+7fafltYTQiq0KWeEhPg5iZ3\/\/8n\/9z87f\/9t+eFuCMo7M\/pLPzU2oy1x\/+Tbt5stcf9++0\/LYwGpFVIUs8pKdBzMzvf\/\/v\/7355m\/+5mkBzjg6+0Na\/P7W3\/pbMxKYbjpz\/Sk6\/Ds\/x\/\/rf\/0v7t\/z8W2yP\/8mhLbYUN2\/\/HXhRNw8BKcBzMzvk08+2XzTN33TtABnHJ1dZGXnp9Rkrj\/8m3bzZK8\/7t9p+W1hNCKrQpZ4SE+DmJnf7\/\/+72\/+5t\/8m9MCnHF09od0dn5KTeb6w79pN0\/2+uP+nZbfFkYjsipkiYf0NIiZ+f3hH\/7h5hu\/8RunBTjj6OwP6ez8lJrM9Yd\/026e7PXH\/Tstvy2MRmRVyBIP6WkQM\/P7oz\/6o83f+Bt\/Y1qAM47O\/pDOzk+pyVx\/+Dft5slef9y\/0\/LbwmhEVoUs8ZCeBjEzvz\/5kz\/ZfMM3fMO0AGccnf0hnZ2fUpO5\/vBv2s2Tvf64f6flt4XRiKwKWeIhPQ1iZn4vXrzYvP3229MCnHF09od0dn5KTeb6w79pN0\/2+uP+nZbfFkYjsipkiYf0NIiZ+f3pn\/7p5uu\/\/uunBTjj6OwP6ez8lJrM9Yd\/026e7PXH\/Tstvy2MRmRVyBIP6WkQM\/P7sz\/7s83Xfd3XXQX4f\/\/v\/706znCQ\/SGdnZ9ymLn+8G\/aXZa9\/rh\/p+W3hdGIrDOy9P77729u3ry5efTo0Xa0H9I613W1Z9rsXxafsvP7F\/\/iX2y+5mu+ZvNv\/+2\/3Xz22Wfb47\/4i7\/Y6Pprr722+Zmf+ZmLo\/zLv\/zLrQ\/lQ\/pLX\/rSxX3Lzi97\/SmB\/+k\/\/aerPMb79zd+4zeurl\/qIDu\/7PUX81bevxny2xK\/yDLrMSLrjMzoxauX7Ztvvrn9vI4gvvXWW9tzXVf7JbfsD8Hs\/PQtx8qp8qu\/LPyrf\/Wvbr72a792e679pbdbt25tfflX\/+pfbX7hF35h88M\/\/MMbiat33nlnW5e\/\/du\/fVEXs\/PLXn\/vvffe5gtf+MLmx3\/8xzf\/\/b\/\/920tav9jP\/Zj2+tqv+SWnV\/2+vv+7\/\/+7fPk8ePHG4ssiasf\/dEf3bzxxhubSwut7PwuWfvnzI3IOofaZrPRg+7111\/fPgB3ELfnl34AKpzsD0H5mJmf\/PuJn\/iJ7QPPudX+r\/21v5ZilfLp06ebr\/7qr976o71+9CtN+fjP\/tk\/O7Oi6w7LzK+F+tM\/2vR8kcCX4NJe57qeYeP+PT8L+geR7ln9I073rVbNda7790d+5EfON1xxZPb7t2Kos5vavUNuzD5RbxNIyOhfHTuA273OdT3Dlv0hmJ3fH\/zBH2z+yl\/5K9fyqwfi\/\/t\/\/y9DererV7H2dKz6u\/QqluFk55e9\/v7Nv\/k3Vy9e51kvYl3PsGXnl73+fuiHfujas0U5lui69CqWays7P\/vZwn53\/yKyzklWFDL6V6bOs2zZH4LilJmf\/PvJn\/zJq9VKrWL9y3\/5L7Okd6PVrL\/+1\/\/6tQd1llUsQ8rMr4X60\/ezWWBpn+372rh\/Xenj91rN0kcPYn7168JMW\/b7NxOrQ74gsg7ROdIWhUymVSy7nf0hmJ3fH\/\/xH2++6qu+avsglKD58z\/\/c6NNsddnsfyQzrSKZTjZ+WWvv7ialWkVy\/nNzi97\/cXVrEyrWM5vdn72M\/sekTUxQxIy+rC79tm27A9B8crMT\/7983\/+z7e\/hvvpn\/7pbOm9tpqVbRXLsDLza6H+vJqVbRXL+eX+NYnx+7ialW0Vy9Fkv3\/tZ+Y9ImtidiRk3n333TSfxSrDyf4QzM5PX2Z49+7dzf\/5P\/+nRJvi\/J\/+03+6XW3L8lmsEkp2ftnrT6tZ+ihCls9ilfnNzi97\/Wk1S\/nN8lmsMr\/Z+ZX+ZjxvQmT5VyLsb1z9eggWsKAGqAFqgBqgBnJ\/pnyXn\/xOZlSo+AQBCEAAAhCAwOUISMRk3hBZmbODbxCAAAQgAAEI7CWAyNqL5vSG7BBPj4SeEIAABCAAAQjUIpBdH7CSVSvT2IEABCAAAQhAYFECiKwKuLNDrBAiJiAAAQhAAAIQGEkguz5gJWtkQukOAQhAAAIQgEAOAoisCnnIDrFCiJiAAAQgAAEIQGAkgez6gJWskQmlOwT2EXj+\/Pnmzp07g99ldu\/evY2+4Vk3nP6\/g7W2J0+evDKffJAv2l6+fLnR3PrR8aFN7Q8ePLgaW\/Z99uzZ5tatWxvNOcZuaUfnsvXw4cOhpr3XhuY0czG1f7uH2hWXmrz3OrenIfoXuzhvtX1T\/mL+45zxuPSrPI99OYZAZgKIrArZyQ6xQoiY6IzAXC\/REpPmkfCRwNBmIXLKi7a0deoLOs5zingr5\/ELXfON2RxbnFPxO1aLLF3ztlQePF+5j\/65zfHXFtyyPyaH6htZluf2lz0EMhPIrg\/k340WnMycZHyDQElg6OWuVQu\/WP2ivX\/\/\/vZFp+sSCx988MHVCsyQWFC\/+GJUnyiy5EcUG6Uw8byyox\/PYX91TfY++uij7Tz6XwrpR9d+8Rd\/cbtXX9t1u8dZ7MWXvfvK7xcvXlzFqzGOJc7va4ol+uu53O42zVXGvb0QRKfH2BfNrR\/H7+vqp5yozeKt9COOG2rz6lTpn32Sv57ffd1W7u2XY3euXUuln5F7rAPZ9RjPeey89IVzCGQkoHsg87a71\/M7mRkivkGgJGDR4Bea2uNLzS9gv8jdZjGgl2X5QlUfj7Ow0DzuZx9iH7+ko13PWY6NL2iPi7bjS7ts95xD87iv29zXMTj2ofgiB89vOz7XOG0+t3AyjxhXPI7z2kfHW9qK4yI3j7NPsc027J\/80bHmePz48VZoxTb7G\/e2b7\/UZruay+2eP\/oZ+3luPfA9p\/NgXuV59INjCGQlgMiqkJnsECuEiInOCOjFFV9oCk8vN1\/zC00vRW3lCzG+rOOLU3117pdq7Lc1FFZ\/1G\/oJSwfLLQ8xnZ9vRyn9ujjUHv0Jfpc9i1jj33th+L79NNPt36qXVtpJ\/Is\/dsO2P3H9j\/++ONr9uyH\/LZtx+82z639ELfIJPog30r\/PIdslW3R33jsMc632iJnn9tvxyr\/S9\/KOcsYy\/PoB8cQyEpA92XmTf7x68LMGcK3JgnoRaibSy82b\/ElV77QyheiX6T+td3uRt3a1LFfqu6n8d6i7fIl7Xlsz3Y0Nr6gy3Fq91jNOdQefTlka8g\/++O9\/CpFUTmn5lN\/M47+mUWM68MPP9yuInkO7+VraTv6GGP3GHNzTn3de\/lW+qfzcpx9j\/7G49Ivx+N5vPdKV+Re8rCvntMxWsCV59EPjiGQlYDugczb7h7N72RmiPgGgZJA+YJVe3zJ+YWml6K28oWo8UMvzqF53M9t0dbQS1r9fF0PAPsQX9Bu9wu49HGofZ\/PZd8y9jivY9De\/exDaSfyLP2znTimXBlzH+1jPx17brNxX\/czt8jafbyP\/sVxu4fulWC26PG4uPc4M1Bb5Bz76jiyLH2L\/qhvGWN5XtrmHAIZCeh+yrzt7vf8TmaGiG8QKAnUFFnx5Vi+CIdeuPFFG1\/S\/tC5X9jlS3jfONnQFvvbrh4g8s9+2Xb0y+Pc5r4WMIfiUx+LyNKOzzVX6d\/2QiFsdS3GGOd1PEM+lm1x3rJtKG77Z5+0j3OXfsV+pX21HZo\/xldyVpvzJTtut3\/lefSDYwhkJYDIqpCZ7BArhIiJzgjoxRVfaAovvlj9QtOLT1t8ceo8vqx9Lnv6sRAor7vdv5JSe\/mS9rzuG23ZP7XpO73UFtujj7brv3rTmDhvnMd9oi2\/8D3GvGQn9vM8ul7a8RwlQ\/WNP4rLW7SnPhYYvu65S9s+t133k92yzfP5uv2zD9qbtfuqj1nEfqVfbvN4+RPHlXYiV7Wpv+e0jX3nnos9BDITUE1n3nbPjPxOZoaIbxCAwGUISEREwXMZL\/bPeqp\/EmSKQ\/ulttK38nwpP5gHAlMIILKm0NuNzQ6xQoiYgAAEziDg1SKvxpxhYtYhp\/qnVaYlYyj9Ks9nhYJxCFQkkF0fsJJVMdmYggAEIAABCEBgOQKIrAqss0OsECImIAABCEAAAhAYSSC7PmAla2RC6Q4BCEAAAhCAQA4CiKwKecgOsUKImIBAFwSmfrbH4\/UZJW++pueAv87Bbf4LObWN\/QC8\/1rSc8lW\/Es9z8EeAhDISyC7PpB\/fON73vrBMwg0RUB\/oXauULHo0UPJwkfB69gCSse2b\/GlOX0cxx0Dp75xLtuQPTYIQKANAoisCnnKDrFCiJiAQPMELFIsdCyaHj58uBVGUdCUwbqv+sR+pU2vXGkfj2UvCrDSfnnusXGusTZKm5xDAALLE9A9nHnbPdPyO5kZIr5BAAKff6GqBIw2CyevQmmFqPx1n7mpr8SYx5RCzatLbtd5aa88t+1yb+Fm8ee51E++7\/OxtMM5BCBweQKIrAo5yA6xQoiYgEDzBLw6VIosi5iyfShgiyiP8XlNkSVb+pXjl7\/85e3ec8mfU3wc8ptrEIDAZQhk1wesZF2mLpgVAt0RkHjRA6UUWRZIpwgYiyoLH5\/bRjzXtbjqVJ4PAfZ4+eIVLc+l\/vbR8w3Z4BoEIJCHACKrQi6yQ6wQIiYg0DwBCxTttVnQWLCU7UMBe4yFTymEoo14LFsa4w\/FD9nWNfmy+5fltb3nK23us8N1CEAgB4Hs+mD3vOEzWTnKBS8g0C4BCySLqvI8Cph9\/+Njj7HoEQ0dx891WUhZgGk+2\/O4ONc+oh7vMeqncXF1bN9YrkMAAjnA1AUGAAAgAElEQVQIILIq5CE7xAohYgICzRMoRYsFk0VXFD4WRRZPDt5jovBxXz0HSgHk\/mqLtuJctl3uS3\/Vrnkt4sr+nEMAAvkIZNcH8o\/vycpXN3gEgSYJSFBFsXMoCAmk+\/fvb1ehDvU7t02CSWLr1M1izqLw1HH0gwAELkcAkVWBfXaIFULEBAS6IODVoWPiRoJGAktCa45N88fVsFPm0BhWsU4hRR8I5CGQXR+wkpWnVvAEAhCAAAQgAIERBBBZI2Dt65od4j6\/uQ4BCEAAAhCAwHwEsusDVrLmyz2WIQABCEAAAhCYkQAiqwLc7BArhIgJCEAAAhCAAARGEsiuD1jJGplQukMAAhCAAAQgkIMAIqtCHrJDrBAiJiAAAQhAAAIQGEkguz5gJWtkQukOAQhAAAIQgEAOAoisCnnYKcFr\/68xrm2\/RRYmX\/k2XTjAgRqgBqiBldZABZkxm4kmVrJmix7DEIBAcwSy\/8u1OaA4DAEIzEYAkTUbWgxDAAJzEEBkzUEVmxCAwBwEEFlzUMUmBCAwGwFE1mxoMQwBCFQmgMiqDBRzEIDAvAQQWfPyxToEIFCPACKrHkssQQACCxBAZC0AmSkgAIEqBBBZVTBiBAIQWIoAImsp0swDAQhMJYDImkqQ8RCAwKIEEFmL4mYyCEBgAgFE1gR4DIUABJYngMhanjkzQgAC5xFAZJ3HjVEQgMCFCCCyLgSeaSEAgdEEEFmjkTEAAhC4JAFE1iXpMzcEIDCGACJrDC36QgACFyeAyLp4CnAAAhA4kQAi60RQdIMABHIQQGTlyANeQAACxwkgso4zogcEIJCIACIrUTJwBQIQOEgAkXUQD40QgEA2AoisbBnBHwhAYB8BRNY+MlyHAARSEkBkpUwLTkEAAgMEEFkDULgEAQjkJYDIypsbPIMABK4TQGRd58EZBCCQnAAiK3mCcA8CELgigMi6QsEBBCDQAgFEVgtZwkcIQEAEEFnUAQQg0BQBRFZT6cJZCKyaACJr1ekneAi0RwCR1V7O8BgCayWAyFpr5okbAo0SQGQ1mjjchsAKCSCyVph0QoZAywQQWS1nD98hsC4CiKx15ZtoIdA8AURW8ykkAAishgAiazWpJlAI9EEAkdVHHokCAmsggMhaQ5aJEQIdEUBkdZRMQoFA5wQQWZ0nmPAg0BsBRFZvGSUeCPRLAJHVb26JDAJdEkBkdZlWgoJAlwQQWV2mlaAg0C8BRFa\/uSUyCPRGAJHVW0aJBwKdE0BkdZ5gwoNARwQQWR0lk1AgsAYCiKw1ZJkYIdAHAURWH3kkCgishgAiazWpJlAINE8AkdV8CgkAAn0TeP\/99zc3b97cPHr0aBuoRZbOdV3tbBCAAAQyEkBkZcwKPkEAAlcEPvvss81rr722efPNNzdvv\/32Rg+tt956a3uu62pngwAEIJCRACIrY1bwCQIQuEbgvffe27z++utbgbV7aG3PdZ0NAhCAQFYCiKysmcEvCEDgioBWq954441rIkvnrGJdIeIAAhBISACRlTApuAQBCLxKIK5maVWLVaxXGXEFAhDIRQCRlSsfeAMBCOwhEFezWMXaA4nLEIBAKgKIrFTpwBkIQOAQAa1e6cPurGIdokQbBCCQhQAiK0sm8AMCEDhKQKtZ7777Lp\/FOkqKDhCAQAYCTYisnZPXPvTKtRvwuAED7gNqgBqgBtZeAxnE1D4fdrm5sa89xXU5yQYBCEAAAhCAAAQigez6AJEVs8UxBCAAAQhAAALNEEBkVUhVdogVQsQEBCAAAQhAAAIjCWTXB6xkjUwo3SEAAQhAAAIQyEEAkVUhD9khVggRExCAAAQgAAEIjCSQXR+wkjUyoXSHAAQgAAEIQCAHAURWhTxkh1ghRExAAAIQgAAEIDCSQHZ9wErWyITSHQIQGE\/gwYMHr3yv2507dzbPnz\/fPH36dNum\/bFNfZ48eXLVrTy\/auAAAhBYBQFEVoU0Z4dYIURMQKBrAhJZFlVloKeKrGfPnm1u3bp1JbLK89Iu5xCAQP8EsusDVrL6r0EihMDFCYwRWVqp2j2YtqJKYkorXhJpvq7\/d2E8l31tcey9e\/c2L1++3P7oWD\/379\/f2tgn+C4OCgcgAIFRBBBZo3ANd84OcdhrrkIAAiZwqsiSoLp79+5WVFlYWSyVK1fleVwR81jNK6ElG1oF05hynH1kDwEItEcguz7Y\/cMw9\/+2JjvE9soSjyGwLAGJnd3D5mrvz1ZFcWSvhlakSnFUnpdCTucSVy9evNjuvXoVBZjnYw8BCLRJILs+QGS1WVd4DYGmCJQCKDofRZaPJY4khrTXj1ajSlEVz71aVQo5CatPP\/30mh1EVqTPMQTaJoDIqpC\/7BArhIgJCHRN4FSRFftZOJ0isgQvjo0wSzuIrEiHYwi0TSC7Ptj9w49fF7ZdZngPgdwE9gkgee3VK+31a0J\/dsrXTxVZ7q99FFKIrNy1gXcQmEIAkTWF3m5sdogVQsQEBLomcKrIsjjSPS+xdfv27auvfrBYUpuElz9r5XO1D32Wy+Ms1jyHfGKDAATaJpBdH8i\/Gy042XYZ4D0EIAABCEAAArUJtKBfEFm1s449CEAAAhCAAARmJ4DIqoA4O8QKIWICAhCAAAQgAIGRBLLrA\/nHStbIpNIdAhCAAAQgAIHLE0BkVchBdogVQsQEBCAAAQhAAAIjCWTXB6xkjUwo3SEAgfMI6MtD9deC2p+z+ctH418F+msb9CDzXw\/advxLQ4\/xXxZqHBsEINA+AURWhRxmh1ghRExAoHsCEjqlEBoTtMbrWVAKJokpiye3WZBJTPlY\/bRN9WOMz\/SFAATmJZBdH8g\/PpM1bw1gHQKrJ1AKHa9APX78ePt9WHoQWQQNwXL\/KLJ8TXttEk\/+\/xPKlr\/UtPyerHLc0HxcgwAE2iCAyKqQp+wQK4SICQh0TUDCxqJHgVroeOUpCqQShFepHj58uBVRHhOFlMbE89JePLe9Q6Ku9IFzCEAgJ4Hs+kD+sZKVs3bwCgLdEIgCSEFZZFnolO0xcLVpherLX\/5yVZFlsRbn4hgCEGiLACKrQr6yQ6wQIiYg0DUBCZqhlSyJLW37RJZ\/zah+XoGyOCrHxPO4ciX78dx2pnw+rOtkERwEGiKQXR+wktVQMeEqBFolEAWQYvBK1jGRpXG7h9S1vURTaSMKqThf+Zksiyz1Z4MABNomgMiqkL\/sECuEiAkIdE2gFETleRRFXr3StbiV4sjn6mchZeFkG5on9pO98jzOwTEEINAWgez6YPePxBupqWaHmBoezkEgAQGLHgunGiJLYdmunhHlr\/88h9osvjTG17VngwAE2iaQXR\/IPz743naN4T0EmiAgoRPFziGnJcYsyA71O6dNdktBdo4dxkAAApcngMiqkIPsECuEiAkIdE9Aq06nfOO7+t2\/f3\/7K8DaUPyrQlaxapPFHgQuQyC7PmAl6zJ1wawQgAAEIAABCEwkgMiaCFDDs0OsECImIAABCEAAAhAYSSC7PmAla2RC6Q4BCEAAAhCAQA4CiKwKecgOsUKImIAABCAAAQhAYCSB7PqAlayRCaU7BCAAAQhAAAI5CCCyKuQhO8QKIWICAhCAAAQgAIGRBLLrA1ayRiaU7hCAAAQgAAEI5CCAyKqQh50SvPb\/LuPa9ltkYfKVb9OFAxyoAWqAGlhpDVSQGbOZaGIla7boMQwBCDRHIPu\/XJsDisMQgMBsBBBZs6HFMAQgMAcBRNYcVLEJAQjMQQCRNQdVbEIAArMRQGTNhhbDEIBAZQKIrMpAMQcBCMxLAJE1L1+sQwAC9QggsuqxxBIEILAAAUTWApCZAgIQqEIAkVUFI0YgAIGlCCCyliLNPBCAwFQCiKypBBkPAQgsSgCRtShuJoMABCYQQGRNgMdQCEBgeQKIrOWZMyMEIHAeAUTWedwYBQEIXIgAIutC4JkWAhAYTQCRNRoZAyAAgUsSQGRdkj5zQwACYwggssbQoi8EIHBxAoisi6cAByAAgRMJILJOBEU3CEAgBwFEVo484AUEIHCcACLrOCN6QAACiQggshIlA1cgAIGDBBBZB\/HQCAEIZCOAyMqWEfyBAAT2EUBk7SPDdQhAICUBRFbKtOAUBCAwQACRNQCFSxCAQF4CiKy8ucEzCEDgOgFE1nUenEEAAskJILKSJwj3IACBKwKIrCsUHEAAAi0QQGS1kCV8hAAERACRRR1AAAJNEUBkNZUunIXAqgkgsladfoKHQHsEEFnt5QyPIbBWAoistWaeuCHQKAFEVqOJw20IrJAAImuFSSdkCLRMAJHVcvbwHQLrIoDIWle+iRYCzRNAZDWfQgKAwGoIILJWk2oChUAfBBBZfeSRKCCwBgKIrDVkmRgh0BEBRFZHySQUCHROAJHVeYIJDwK9EUBk9ZZR4oFAvwQQWf3mlsgg0CUBRFaXaSUoCHRJAJHVZVoJCgL9EkBk9ZtbIoNAbwQQWb1llHgg0DkBRFbnCSY8CHREAJHVUTIJBQJrIIDIWkOWiRECfRBAZPWRR6KAwGoIILJWk2oChUDzBBBZzaeQACDQN4H3339\/c\/Pmzc2jR4+2gVpk6VzX1c4GAQhAICMBRFbGrOATBCBwReCzzz7bvPbaa5s333xz8\/bbb2\/00Hrrrbe257qudjYIQAACGQkgsjJmBZ8gAIFrBN57773N66+\/vhVYu4fW9lzX2SAAAQhkJYDIypoZ\/IIABK4IaLXqjTfeuCaydM4q1hUiDiAAgYQEEFkJk4JLEIDAqwTiapZWtVjFepURVyAAgVwEEFm58oE3EIDAHgJxNYtVrD2QuAwBCKQigMhKlQ6cgQAEDhHQ6pU+7M4q1iFKtEEAAlkIILKyZAI\/IACBowS0mvXuu+\/yWayjpOgAAQhkINCEyNo5ee1Dr1y7AY8bMOA+oAaoAWpg7TWQQUzt82GXmxv72lNcl5NsEIAABCAAAQhAIBLIrg8QWTFbHEMAAhCAAAQg0AwBRFaFVGWHWCFETEAAAhCAAAQgMJJAdn3AStbIhNIdAhCAAAQgAIEcBBBZFfKQHWKFEDEBAQhAAAIQgMBIAtn1AStZIxNKdwhAAAIQgAAEchBAZFXIQ3aIFULEBAQgAAEIQAACIwlk1wesZI1MKN0hUJPAkydPXvm+szt37myeP39ec5qzbT179mxz+\/btjfbaHjx4cOVv9FP+6nz3QNnunz59ejVvHKeYa26aR\/PG+Ybsv3z5cnPv3r1N7fkdu2LMtj18+PAqd9l8wx8I1CCAyKpAMTvECiFiYqUE9MK\/devW1YvQQiAKmEuikXCQMJFfUczYTwsLiTDFMSR0oo0y3hqxRb+O2dP8tdlmFVlzsD7Gl3YILE0guz6QfzdacHLpxDEfBJYgMPQitGBRmza\/xHc365WQsbh4\/PjxVuCo3WM0znbKcWpTP1+3iNpOFv7j8dFmaN6ualmwyJcoFt3Pvu+z4X7lXsJMtuWb\/JR927LfuqbNHLS3+HNMHlOKwUP+mI3tl77p3Gzki+aSr55jyHeN0XX7bv98PcbqeD1vnCu2HYrVTDzfoVg8D3sItEhANZ55292D+Z3MDBHfIHAuAb3QS3EShUH5Io39\/SItX+4aX47zi19tHqd9nKuMQe2lb+7jF7\/FgoWJX+r2yf2iwJDdY5v7u28ZzxAH9S37lfG53f4N+eFYPHfZxzaiwFTctln6rvG65v6lT7F\/adv85JO2GLf7Ogel3di3jIFzCPRCAJFVIZPZIVYIERMrJTD0Iowvy\/Il63MJAP3o3jj0Ala7X8JGHF\/4uqbzso+uD\/mm6\/bPc5cv++iX\/bX9fTbtm\/elj7bjWH0eOei49MW+yp62st3zaa8+iqn88Zzu67l9vZyj9L1sl53IoexvftrHfhoXbZWxxLZyDvvOHgK9EdD9mnnbPU\/yO5kZIr5B4FwC5UtUduLL0i\/coRe\/27TXVtpyu8dK6Lx48eLqV3C+rr1XWWIcevmXK1l+sWuMhVMco+PofylI7JN8PbTtEx7RZx3Ljm1qb\/\/sW\/RF87l9KF77I5uyLXtDWxlTOUfpe9lfNmOuyv4xnrItzuVY9sUa5xiKg2sQ6IGA7tXM2+6Zld\/JzBDxDQLnEhh6EcaXcjwu54gvY7UN2dJ1v5gtSsoXd2nX50P2NFZ2DokUz6e+PpYtbYfi8bzalz4eGhc5HBMeZXuc08fyVTEeE1nyUZtj9Hnpe9muMZFt2T\/GE\/uVc5WxlPOUY7fO8h8IdEZA92rmTf7xwffMGcK3rgkMvQjjS7d8kcb+8WUsSLGtfOHGvvG47Bdhx3667vN9q1teUXE\/7bXFeKKPZb84dxyj62M4xLGeQ9eiHZ\/HOU89ti8WmuUccX7bjNdK5mrTg1hsStuluIz8ZDvaLf0o+9oX9hDoiQAiq0I2s0OsECImVkpAL8Ldv3Su9n55G4lfyu6nl6k2v1R9Xr5U\/YL2OL2QvcV5LY7c5r3Hq682iwHb096+uq\/bPEbjLBzcZn9L\/z2v57JtXz+VQ\/RFscmOY3db9M\/2x+yjL+UcUfhEm5Gf\/VG7++s7rcSoFLH2+Vhb6UccNzXeGAfHEMhEQPdF5m333MvvZGaI+AaBXglIAERBUDtO2bboqm17yJ7mKsXbUL8lr1lkSbixQQAC4wggssbxGuydHeKg01yEQAcEtBoSv\/G9ZkgSPHMKuNJXr6hlW9VBZJWZ4hwCpxPIrg9YyTo9l\/SEAAQgAAEIQCARAURWhWRkh1ghRExAAAIQgAAEIDCSQHZ9wErWyITSHQIQgAAEIACBHAQQWRXykB1ihRAxAYFuCfgv8aZ+wF2fpdr9q\/CVv8DT55rcpn38rFds8+exMn4AvtsCIDAIzEgguz7YPZf468IZawDTEFg1AQmbqX\/R568jsEiScPJXT\/gD7VFYGXjsp7H+egQLP9tzf\/YQgEBbBBBZFfKVHWKFEDEBgS4JWMxYAFks6TuhJLx0b7ttDIBTBJPn3iekNO9U8TfGZ\/pCAAL1CWTXB\/KPb3yvn3csQgAC4X+j418VWmR5FSqKpVOBWTxZINnm7mF2JZx8XWLKbfZDc+nYK1unzk0\/CEAgFwFEVoV8ZIdYIURMQKBLAhIyun8tbqLwUcBl+zEI\/tWgbHoFLAo1CzCJuI8++mgrovYJurFzH\/ONdghAYHkC2fWB\/GMla\/m6YEYIrIKABNCQyPKv8MYKHa9KeRVrCKJ\/Dfjhhx9uRVY5177zIVtcgwAEchNAZFXIT3aIFULEBAS6JFCKKK9klUJH\/Y5tGqNnwbFf8Vlkffzxx9tfHXquKXMf8412CEDgMgSy6wP5x0rWZWqDWSHQPYFS2JTnUYT5V4H+9V6E43F6YJWCTCLKwsu\/LvSvEi24dD32k23Z8bg4F8cQgEA7BBBZFXKVHWKFEDEBgS4JlKLHYsmrS6eKLPXf\/Yvwam+BZHHm9ijSyrYo0KIA6xI+QUFgBQSy64Pdc4nvyVpBLRIiBC5CQAIpCp9DTkiE3b9\/fyNxNOdm8WWxN+dc2IYABOYjgMiqwDY7xAohYgIC3RLwalZcRRoKVsJHAktCa+5Nvhz68Pzc82MfAhCoQyC7PmAlq06esQIBCEAAAhCAwMIEEFkVgGeHWCFETEAAAhCAAAQgMJJAdn3AStbIhNIdAhCAAAQgAIEcBBBZFfKQHWKFEDEBAQhAAAIQgMBIAtn1AStZIxNKdwhAAAIQgAAEchBAZFXIQ3aIFULEBAQgAAEIQAACIwlk1wesZI1MKN0hAAEIQAACEMhBAJFVIQ87JXj1Tc+cb\/9fSPD4yv8TCg5woAaoAWpgxTVQQWbMZqKJlazZoscwBCDQHIHs\/3JtDigOQwACsxFAZM2GFsMQgMAcBBBZc1DFJgQgMAcBRNYcVLEJAQjMRgCRNRtaDEMAApUJILIqA8UcBCAwLwFE1rx8sQ4BCNQjgMiqxxJLEIDAAgQQWQtAZgoIQKAKAURWFYwYgQAEliKAyFqKNPNAAAJTCSCyphJkPAQgsCgBRNaiuJkMAhCYQACRNQEeQyEAgeUJILKWZ86MEIDAeQQQWedxYxQEIHAhAoisC4FnWghAYDQBRNZoZAyAAAQuSQCRdUn6zA0BCIwhgMgaQ4u+EIDAxQkgsi6eAhyAAAROJIDIOhEU3SAAgRwEEFk58oAXEIDAcQKIrOOM6AEBCCQigMhKlAxcgQAEDhJAZB3EQyMEIJCNACIrW0bwBwIQ2EcAkbWPDNchAIGUBBBZKdOCUxCAwAABRNYAFC5BAAJ5CSCy8uYGzyAAgesEEFnXeXAGAQgkJ4DISp4g3IMABK4IILKuUHAAAQi0QACR1UKW8BECEBABRBZ1AAEINEUAkdVUunAWAqsmgMhadfoJHgLtEUBktZczPIbAWgkgstaaeeKGQKMEEFmNJg63IbBCAoisFSadkCHQMgFEVsvZw3cIrIsAImtd+SZaCDRPAJHVfAoJAAKrIYDIWk2qCRQCfRBAZPWRR6KAwBoIILLWkGVihEBHBBBZHSWTUCDQOQFEVucJJjwI9EYAkdVbRokHAv0SQGT1m1sig0CXBBBZXaaVoCDQJQFEVpdpJSgI9EsAkdVvbokMAr0RQGT1llHigUDnBBBZnSeY8CDQEQFEVkfJJBQIrIEAImsNWSZGCPRBAJHVRx6JAgKrIYDIWk2qCRQCzRNAZDWfQgKAwLoI\/P\/27h7JaSYIwDAJfykchCs4Wg5Awg04AVXExASk5ByAgCNwCA5ASERAqq9afEONVTYr78qSZvpRlUu2fmam3+4tvTWSvSQrV75Fi0DLBEhWy9kzdgQSEiBZCZMuZAQaJUCyGk2cYSOQlQDJypp5cSPQHgGS1V7OjBiB1ARIVur0Cx6BpgiQrKbSZbAIIECy1AACCLRCgGS1kinjRACBkQDJUggIINAKAZLVSqaMEwEERgIkSyEggEArBEhWK5kyTgQQGAmQLIWAAAKtEBgl63A4DP\/blvWDBxhgoAbUgBpQA2pADdy7Bka\/asUIjRMBBBAwk6UGEECgJQIPWhqssSKAQG4CJCt3\/kWPQGsESFZrGTNeBBITIFmJky90BBokQLIaTJohI5CVAMnKmnlxI9AmAZLVZt6MGoGUBEhWyrQLGoFmCZCsZlNn4AjkI0Cy8uVcxAi0TIBktZw9Y0cgGQGSlSzhwkWgcQIkq\/EEGj4CmQiQrEzZFisC7RMgWe3nUAQIpCFAstKkWqAIdEGAZHWRRkEgkIMAycqRZ1Ei0AsBktVLJsWBQAICJCtBkoWIQEcESFZHyRQKAr0TIFm9Z1h8CPRFgGT1lU\/RINA1AZLVdXoFh0B3BEhWdykVEAL9EiBZ\/eZWZAj0SIBk9ZhVMSHQKQGS1WlihYVApwRIVqeJFRYCPRIgWT1mVUwI9EuAZPWbW5Eh0B0BktVdSgWEQNcESFbX6RUcAn0RIFl95VM0CPROgGT1nmHxIdARAZLVUTKFgkACAiQrQZKFiEAvBEhWL5kUBwI5CJCsHHkWJQJdECBZXaRREAikIUCy0qRaoAi0T4BktZ9DESCQiQDJypRtsSLQOAGS1XgCDR+BZARIVrKECxeBlgmQrJazZ+wI5CNAsvLlXMQINEuAZDWbOgNHICUBkpUy7YJGoE0CJKvNvBk1AlkJkKysmRc3Ag0SIFkNJs2QEUhMgGQlTr7QEWiNAMlqLWPGi0BuAiQrd\/5Fj0BTBEhWU+kyWATSEyBZ6UsAAATaIUCy2smVkSKAwDCQLFWAAALNECBZzaTKQBFAYCBZigABBHZM4MOHD8OTJ0+Gjx8\/jqMskhWfY3vstyCAAAJ7JWAma6+ZMS4EEBh+\/fo1PHz4cHj69Onw\/PnzISTr2bNn4+fYHvstCCCAwF4JkKy9Zsa4EEBgJPDu3bvh0aNHo2CFZMUrPsd2CwIIILBnAiRrz9kxNgQQGGerHj9+fCRZ8dksluJAAIG9EyBZe8+Q8SGAwDhrVWazzGIpCAQQaIUAyWolU8aJQGICMWtVZrPMYiUuBKEj0BgBktVYwgwXgawE4hmseNjds1hZK0DcCLRHgGS1lzMjRiAlgZjNevXqlWexUmZf0Ai0SYBktZk3o05E4OvXr8PhcDh68Lt8y876z7cNcZjHIerIggAC6xEgWeux1hMCFxMIwQqBiLUFgfsSiFqyIIDAegT8xa3HWk8IXESAYF2Ey8EzCJCsGZAcgsCCBEjWgjA1hcBSBAjWUiS1UxMgWTUN7xG4PgGSdX3GekDgIgIE6yJcDr6AAMm6AJZDEViAAMlaAKImEFiKAMFaiqR2ThEgWaeo2IbA9QiQrOux1TICFxEgWBfhcvAdCJCsO0BzCgL3IECy7gHPqQgsRYBgLUVSO\/8iQLL+Rcc+BJYnQLKWZ6pFBC4ikEWwPn\/+PLx582b4\/fv3EZ9z248OOvHh58+fw+vXr4fv37+f2GvTKQIk6xQV2xC4HgGSdT22WkbgVgJZBCtAhAzd3NwcSVEIV4hXiNalC8m6lNgw\/uba5Wc5AwEE7kqAZN2VnPMQuCeBTIIVqE4JVS1eZX\/MtsTr27dvfwmHUL18+XLcHusfP36MchbHvXjxYhS3c+eXPkLw4txoK+tiJitr5sW9FQGStRV5\/aYmkE2wSrKntwbj8\/v378fdsS7vQ7Cm8lSkq5wzncmKc8vtyPr8kKxoq5xfxpJxTbIyZl3MWxIgWVvS13dKAlkFK5IdwhPPUYUglZmnkJ8yU1VEqN5Xn1MXTC1Z9fFxTPkcQlZmsmKdfSFZ2StA\/GsTIFlrE9dfagKZBSsSX+QnZCpe5fZdkayQgPoVklQfVxdPLVnl\/CJpcVzMbBXJKmJXn5\/xPcnKmHUxb0mAZG1JX9\/pCBwOh\/T\/7LncFiwSFEVQC9O0KJaYySJZf6iSrGl1+YzAdQmQrOvy1ToCRwRc5IZxZio4lGeuCqAiX\/E5xKo8RzWdpYrZqXj2Kh5+r8ECsWwAAAPxSURBVH\/CIc4\/90wWyfpDWf2VarNGYB0CJGsdznpBYCTgIvdn1ipuExYhKqVRbiUGo3iFTJWlSFdsL7cYy\/FF1srncn65dXhuJqy0nWkdbCwIILAeAX9x67HWEwKjPMCAwFYESNZW5PWblQDJypp5cW9CwEVuE+w6\/Z+A+lMKCKxLgGSty1tvyQm4yCUvgI3DV38bJ0D36QiQrHQpF\/CWBFzktqSvb\/WnBhBYlwDJWpe33pITcJFLXgAbh6\/+Nk6A7tMRIFnpUi7gLQlkvMjFt\/vevn07\/hDpXdhPvzVYfyux\/tZhsC3fPIx+yk8\/xPbyDcTYHt86jJ97yLhkrL+MeRbzfgiQrP3kwkgSEMh2kQtBCsEKGbrrEj\/lUH7OoQhX+RzCVEtX6eO240Kyyk88lHMyrLPVX4acinHfBEjWvvNjdJ0RyHaRq2eNiviE4ASHeN1lRikEq4hVvD\/Vxm2zZ7ft76zs\/oaTrf7+Bu4NAhsRIFkbgddtTgLZLnL1jFGRrCJIIWD1bby5FRFtFrGKdRG2WJfZqVjHDFr0Fdun\/cRY7jvDNne8ezouW\/3tib2x5CRAsnLmXdQbEch0kZuKTJGscqvvX\/+v8Fx6Qp7Kc1fT9mppi\/e1dNWzX6XtWgDLtt7Xmeqv91yKrw0CJKuNPBllJwQyXeSmElWkKAQolun+21JcS9SpY0v7IVRxbJkxi2Pj9uDNzc3Rs2Ek6xRF2xBAYEkCJGtJmtpC4BYCmSQrpKe+JVck6C6SFeJUZrDOIa7bD6mq\/yk0yfpDLVP9nasT2xFYkwDJWpO2vtITyHaRq2eLagmKQpg7kxVSdkqwpufXx037inHUM1uxvxbALIWZrf6y5FWc+yVAsvabGyPrkEC2i1yITwhOLFPxqSWpfj9Ne5wf3OpXEaaYoYqH2mPf9OH2aDPkLPZNJS3OC8mKMWVagoUFAQTWI+Avbj3WekJgvOBnwnDJjNGXL1+Onpm6Jqd6hu2a\/eytbZK1t4wYT+8ESFbvGRbfrghkvMjNmTUKGfv06dMqM0v17NquimOFwWSsvxWw6gKBswRI1lk0diCwPAEXueWZanE+AfU3n5UjEViCAMlagqI2EJhJwEVuJiiHXYWA+rsKVo0icJYAyTqLxg4ElifgIrc8Uy3OJ6D+5rNyJAJLECBZS1DUBgIzCbjIzQTlsKsQUH9XwapRBM4SIFln0diBwPIEXOSWZ6rF+QTU33xWjkRgCQIkawmK2kBgJgEXuZmgHHYVAurvKlg1isBZAiTrLBo7EFiegIvc8ky1OJ+A+pvPypEILEGAZC1BURsIzCRwOByOfrk8LnpeGKxVA1F\/FgQQWI\/AfyYruJ7NwxbeAAAAAElFTkSuQmCC)","52e8f155":"# Establish All Combinations of desciptions","64eb6d7c":"## Select Vectorizer"}}