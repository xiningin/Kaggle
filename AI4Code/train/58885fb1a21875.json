{"cell_type":{"b1935ffe":"code","a0225369":"code","40ca2c20":"code","9ff64898":"code","df8869fa":"code","6ad8415b":"code","f6885be2":"code","1526d647":"code","a061cea5":"code","a6ff4c8f":"code","74484c78":"code","2bd787d4":"code","a68cb9c2":"code","9795d554":"code","0d26f843":"code","59cbeeee":"code","561581d4":"code","88bdd81d":"code","377daa4b":"code","cb8063c8":"code","ab47e1ef":"code","7f7a114a":"markdown"},"source":{"b1935ffe":"import pandas as pd\nimport numpy as np\nimport tensorflow as tf\nfrom tensorflow.keras import layers\nfrom tensorflow.keras import optimizers\nfrom tensorflow.keras import regularizers\nfrom sklearn.model_selection import train_test_split\nimport os","a0225369":"data_path = \"..\/input\/tabular-playground-series-aug-2021\"","40ca2c20":"ss =  os.path.join(data_path, \"sample_submission.csv\")\nts =  os.path.join(data_path, \"test.csv\")\ntr =  os.path.join(data_path, \"train.csv\")","9ff64898":"sample_submission = pd.read_csv(ss)\ntest_file = pd.read_csv(ts)\ntraining_file = pd.read_csv(tr)","df8869fa":"test_file = test_file.drop(labels=[\"id\"], axis=1)","6ad8415b":"training_file = training_file.drop(labels=[\"id\"], axis=1)","f6885be2":"test_features = test_file.copy()\ntest_features = np.array(test_features)","1526d647":"train_features = training_file.copy()\ntrain_labels = train_features.pop('loss')","a061cea5":"train_features = np.array(train_features)","a6ff4c8f":"num_labels = len(train_labels.unique())","74484c78":"train_labels =  np.array(train_labels).reshape((train_labels.shape[0], -1))","2bd787d4":"X_train, X_test, y_train, y_test = train_test_split( train_features , train_labels, test_size=0.33, random_state=42)\n\n\ntrain_X  = tf.data.Dataset.from_tensor_slices((X_train, y_train))\ntrain_X = train_X.shuffle(len(train_X)).batch(32)\nvalidation_X = tf.data.Dataset.from_tensor_slices((X_test, y_test))\nvalidation_X = validation_X.shuffle(len(train_X)).batch(32)","a68cb9c2":"EPOCHS = 10\ncheckpoint_filepath = 'regression-model2.{epoch:02d}.h5'\nmodel_checkpoint_callback = tf.keras.callbacks.ModelCheckpoint(\n    filepath=checkpoint_filepath,\n    save_weights_only=True,\n    save_freq='epoch')","9795d554":"simple_model = tf.keras.Sequential([\n  layers.BatchNormalization(),\n  layers.Dense(512, activation='relu'),\n  layers.Dropout(0.1),\n  layers.BatchNormalization(),\n  layers.Dense(1024, activation='relu'),\n  layers.Dropout(0.1),\n  layers.BatchNormalization(),\n  layers.Dense(2048, activation='relu'),\n  layers.Dropout(0.1),\n  layers.BatchNormalization(),\n  layers.Dense(2048, activation='relu'),\n  layers.Dropout(0.1),\n  layers.BatchNormalization(),\n  layers.Dense(1024, activation='relu'),\n  layers.Dropout(0.1),\n  layers.BatchNormalization(),\n  layers.Dense(512, activation='relu'),\n  layers.Dropout(0.1),\n  layers.BatchNormalization(),\n  layers.Dense(1)\n])","0d26f843":"simple_model.compile(optimizer=optimizers.Adam(learning_rate=0.1),\n              loss=tf.keras.losses.MSE,\n              metrics=['accuracy'])","59cbeeee":"simple_model.fit(train_X, validation_data=validation_X,epochs=1, callbacks=[model_checkpoint_callback]) #callbacks=[model_checkpoint_callback]","561581d4":"simple_model.evaluate(validation_X)","88bdd81d":"prediction = simple_model.predict(test_features)","377daa4b":"prediction = prediction.reshape((150000, ))","cb8063c8":"sample_submission['loss'] = prediction","ab47e1ef":"sample_submission.to_csv(\"submission.csv\", index=False)","7f7a114a":"Here we use a neural network regressor"}}