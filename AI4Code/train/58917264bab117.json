{"cell_type":{"60a2c232":"code","4a7bdaed":"code","41c40206":"code","2ce69ee1":"code","867d5d9f":"code","64b7631d":"code","d7938f94":"code","775348b8":"code","cdb4a0d2":"code","fd7c4b09":"code","0ff30cdd":"code","eb260589":"code","32869859":"code","3ac8c292":"code","90830a66":"code","a3f511c5":"code","fbdd6937":"code","056b27c3":"code","f881faa8":"code","61e1360c":"code","4d6c9cd5":"code","c7b8772c":"code","12758064":"code","862ad363":"code","77496138":"code","ce8aa13a":"markdown","6adf886f":"markdown"},"source":{"60a2c232":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error \nfrom sklearn.ensemble import RandomForestClassifier","4a7bdaed":"\ntrain = pd.read_csv(\"..\/input\/learn-together\/train.csv\") # training data set\ntest = pd.read_csv(\"..\/input\/learn-together\/test.csv\") # testing data set","41c40206":"train.shape","2ce69ee1":"test.shape","867d5d9f":"train.head(20)","64b7631d":"test.head()","d7938f94":"train.info()","775348b8":"train.isnull().sum()","cdb4a0d2":"#colormap = plt.cm.RdBu cmap=colormap,\nplt.figure(figsize=(50,35))\ncor=train.corr()\nsns.heatmap(cor,  square=True,  linecolor='white', annot=True ,  cmap=\"viridis\")","fd7c4b09":"#Correlation with output variable\ncor_target = abs(cor[\"Cover_Type\"])\n#Selecting highly correlated features\nrelevant_features = cor_target[cor_target>0.1]\nrelevant_features\n\n","0ff30cdd":"sns.barplot(x=\"Cover_Type\", y=\"Horizontal_Distance_To_Roadways\" , data=train)","eb260589":"sns.barplot(x=\"Cover_Type\", y=\"Wilderness_Area1\" , data=train)","32869859":"sns.barplot(x=\"Cover_Type\", y=\"Wilderness_Area3\" , data=train)","3ac8c292":"sns.scatterplot(x=\"Cover_Type\", y=\"Soil_Type39\" , data=train)","90830a66":"X=train[[\"Horizontal_Distance_To_Roadways\",\"Wilderness_Area1\",\n        \"Wilderness_Area3\",\"Soil_Type10\",\"Soil_Type12\",\"Soil_Type22\",\n        \"Soil_Type23\",\"Soil_Type24\",\"Soil_Type29\",\"Soil_Type32\",\"Soil_Type35\"\n        ,\"Soil_Type38\",\"Soil_Type39\",\"Soil_Type40\"]]\ny=train[\"Cover_Type\"]\n","a3f511c5":"X.head()","fbdd6937":"X.info()","056b27c3":"X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=44, shuffle =True)","f881faa8":"rc=RandomForestClassifier(n_estimators=100, max_depth=15)\nrc.fit(X_train,y_train)","61e1360c":"print(\"rc score is\",rc.score(X_train,y_train))\nprint(\":::::::::::::::::::::::\")\nprint(\"rc score is\",rc.score(X_val,y_val))\n","4d6c9cd5":"X_test=test[[\"Horizontal_Distance_To_Roadways\",\"Wilderness_Area1\",\n        \"Wilderness_Area3\",\"Soil_Type10\",\"Soil_Type12\",\"Soil_Type22\",\n        \"Soil_Type23\",\"Soil_Type24\",\"Soil_Type29\",\"Soil_Type32\",\"Soil_Type35\"\n        ,\"Soil_Type38\",\"Soil_Type39\",\"Soil_Type40\"]]\n","c7b8772c":"X_test.head()","12758064":"y_predict =rc.predict(X_test)\n","862ad363":"print(y_predict)","77496138":"output = pd.DataFrame({'Id': test.Id,\n                       'Cover_Type': y_predict})\noutput.to_csv('submission.csv', index=False)","ce8aa13a":"> from the relevant_features we can determine the most correlated features, so we will use these features in our algorithms","6adf886f":"there is not any null values in selected features and also the features are integers \n"}}