{"cell_type":{"d1b699e7":"code","804dfa10":"code","9d7f1be2":"code","01a61594":"code","04b26290":"code","0a1082d1":"code","aa7602af":"code","26b92cc8":"code","93103cd2":"code","f0cf917d":"code","0821f089":"code","1827bc88":"code","e921cadd":"code","8ca430b3":"code","327d1fd1":"code","e23fdc66":"code","e2893334":"code","678bcae8":"code","c62f465f":"code","247c9171":"code","11830f9c":"code","f4e738c0":"code","f05b80b9":"code","db921f84":"code","52dffcc0":"code","ee63c340":"code","ebb50d6c":"code","39460694":"code","220b7712":"markdown","80e7a1c7":"markdown","6aaf19dd":"markdown","fead4f6a":"markdown","825c84db":"markdown"},"source":{"d1b699e7":"import pandas as pd\nimport numpy as np","804dfa10":"# read data set\n\ntrain=pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest=pd.read_csv(\"..\/input\/titanic\/test.csv\")","9d7f1be2":"train.head(10)","01a61594":"train.describe()","04b26290":"train.info()","0a1082d1":"# Cabin column will be dropped since it has many null values and is of object type\n\ntrain.drop('Cabin',axis=1,inplace=True)","aa7602af":"# Age has many null values so they will be now dropped\n\ntrain.dropna(inplace=True)","26b92cc8":"# Remove Name, Ticket since they are of object type\n\ntrain.drop(['Name','Ticket'], axis=1, inplace=True)","93103cd2":"train.head(10)","f0cf917d":"# converting sex, Embarked into categorical values","0821f089":"from sklearn.preprocessing import LabelEncoder, OneHotEncoder\n\nle=LabelEncoder()\n\ntrain.Sex=le.fit_transform(train.Sex)","1827bc88":"train.Sex","e921cadd":"#embarked\n\ntrain.Embarked.value_counts()","8ca430b3":"temp=train.Embarked\ntrain['Embarked_S']=(temp=='S')*1\ntrain['Embarked_C']=(temp=='C')*1\ntrain['Embarked_Q']=(temp=='Q')*1","327d1fd1":"train.head(10)","e23fdc66":"# drop embarked\n\ntrain.drop('Embarked',axis=1, inplace=True)","e2893334":"train.head(10)","678bcae8":"# now all the features are of in, float type and can be used into the model\ntrain.dtypes","c62f465f":"# save the output class in one variable and drop from the train data\n\nClass=train.Survived\ntrain.drop(\"Survived\",axis=1,inplace=True)","247c9171":"# split into train test split\n\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, Y_train, Y_test= train_test_split(train, Class, test_size=0.2, random_state=100)","11830f9c":"#define the model\n\nfrom sklearn.ensemble import GradientBoostingClassifier\n\nmodel=GradientBoostingClassifier(n_estimators=100,learning_rate=0.1)","f4e738c0":"# fit the model\n\nmodel.fit(X_train,Y_train)","f05b80b9":"# predict on the test set\n\nmodel.score(X_test,Y_test)","db921f84":"# first we need to clean, preprocess the test data just like we did with the train data","52dffcc0":"# Cabin column will be dropped since it has many null values and is of object type\n\ntest.drop('Cabin',axis=1,inplace=True)\n\n# Age has many null values so they will be now dropped\n\ntest.dropna(inplace=True)\n\n# Remove Name, Ticket since they are of object type\n\ntest.drop(['Name','Ticket'], axis=1, inplace=True)\n\n# Pre-processing of data\n\n\n# converting sex, Embarked into categorical values\n\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder\n\nle=LabelEncoder()\n\ntest.Sex=le.fit_transform(test.Sex)\n#embarked\ntemp=test.Embarked\ntest['Embarked_S']=(temp=='S')*1\ntest['Embarked_C']=(temp=='C')*1\ntest['Embarked_Q']=(temp=='Q')*1\n\ntest.head(10)\n\n# drop embarked\n\ntest.drop('Embarked',axis=1, inplace=True)\n\ntest.head(10)","ee63c340":"# Predict on the test data\n\nPredict_test=model.predict(np.array(test.values.tolist()))","ebb50d6c":"test[\"Predicted_Survived\"]=Predict_test","39460694":"# final predictions\n\ntest.head(20)","220b7712":"# Descriptive analysis","80e7a1c7":"# Predict on unknown test data","6aaf19dd":"# Cleaning of data","fead4f6a":"# Building the Model","825c84db":"# Pre-processing of data"}}