{"cell_type":{"eafe3688":"code","1255f060":"code","2f42844a":"code","6eada05f":"code","3ef961fc":"code","cc7e41ce":"code","345c6ff4":"code","5f773db4":"code","fdcb47bc":"code","0637cbbb":"code","b0280842":"code","a647bdd6":"code","71f0f87d":"code","e8ad477c":"code","61fb287e":"code","f6d4582f":"code","488d7c34":"code","99356784":"code","a38b1f09":"code","64b82ab5":"code","74b64b3e":"code","3656d161":"code","ed9ab748":"code","e88ece84":"code","c0a85aec":"code","ded7ae3d":"code","379166a2":"code","af1fa48c":"code","ff952ab4":"code","383efcc1":"code","c07ba949":"code","a09ad712":"code","cd717f39":"code","d382a4b2":"code","b30e66c3":"code","f2da40c4":"code","53410677":"code","8e087d3b":"code","cab22c8f":"code","cd628d86":"code","9821338a":"code","e2b13984":"code","cc474351":"code","67a70514":"markdown","b3ee7b61":"markdown","54638a19":"markdown","2c02a7ba":"markdown","5b975275":"markdown","3bfac4af":"markdown"},"source":{"eafe3688":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","1255f060":"df = pd.read_csv(\"..\/input\/breast-cancer-wisconsin-data\/data.csv\")","2f42844a":"df.head()","6eada05f":"df.info()","3ef961fc":"df = df.drop([\"Unnamed: 32\", \"id\"], axis=1)","cc7e41ce":"df.describe().transpose()","345c6ff4":"sns.countplot(x=\"diagnosis\", data=df)","5f773db4":"from sklearn.preprocessing import LabelEncoder","fdcb47bc":"le = LabelEncoder()","0637cbbb":"df[\"diagnosis\"] = le.fit_transform(df[\"diagnosis\"])","b0280842":"le.classes_","a647bdd6":"f, ax = plt.subplots(figsize=(16, 12))\nplt.title('Pearson Correlation Matrix', fontsize=25)\n\nsns.heatmap(df.corr(), linewidths=0.25, vmax=0.7, square=True, cmap=\"BuGn\",\n            linecolor='w', annot=True, annot_kws={\"size\":8}, cbar_kws={\"shrink\": .9});","71f0f87d":"#drop_features = [\"radius_mean\", \"perimeter_mean\", \"perimeter_se\", \"area_se\", \"radius_worst\", \"area_worst\"]\ndrop_features = [\"radius_mean\", \"perimeter_mean\", \"perimeter_se\", \"radius_se\", \"radius_worst\", \"perimeter_worst\"]\n#drop_features = [\"area_mean\", \"perimeter_mean\", \"area_se\", \"perimeter_se\", \"perimeter_worst\", \"area_worst\"]\n","e8ad477c":"df = df.drop(drop_features, axis=1)","61fb287e":"df.head()","f6d4582f":"df.corr()[\"diagnosis\"].sort_values().plot(kind=\"bar\")","488d7c34":"X = df.drop(\"diagnosis\", axis=1).values\ny = df[\"diagnosis\"].values","99356784":"from sklearn.model_selection import train_test_split","a38b1f09":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=10)","64b82ab5":"X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=0.25, random_state=0)","74b64b3e":"X_train.shape","3656d161":"X_val.shape","ed9ab748":"X_test.shape","e88ece84":"from sklearn.preprocessing import MinMaxScaler","c0a85aec":"scaler = MinMaxScaler()","ded7ae3d":"X_train = scaler.fit_transform(X_train)","379166a2":"X_val = scaler.transform(X_val)","af1fa48c":"X_test = scaler.transform(X_test)","ff952ab4":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Activation, Dropout","383efcc1":"model = Sequential()\n\nmodel.add(Dense(24, activation=\"relu\"))\nmodel.add(Dropout(0.2))\n\nmodel.add(Dense(16, activation=\"relu\"))\nmodel.add(Dropout(0.5))\n\nmodel.add(Dense(1, activation=\"sigmoid\"))\n\nmodel.compile(loss=\"binary_crossentropy\", optimizer=\"adam\")","c07ba949":"from tensorflow.keras.callbacks import ModelCheckpoint, EarlyStopping","a09ad712":"check_point = ModelCheckpoint(\"best_model.h5\", monitor=\"val_loss\", verbose=1, save_best_only=True)","cd717f39":"early_stop = EarlyStopping(monitor=\"val_loss\", patience=1000)","d382a4b2":"model.fit(x=X_train, y=y_train,\n          epochs=10000, callbacks=[check_point, early_stop],\n          validation_data=(X_val,y_val), verbose=1)","b30e66c3":"losses = pd.DataFrame(model.history.history)","f2da40c4":"losses.plot()","53410677":"losses[\"val_loss\"].min()","8e087d3b":"from keras.models import load_model","cab22c8f":"saved_model = load_model('best_model.h5')","cd628d86":"predictions = saved_model.predict_classes(X_test)","9821338a":"from sklearn.metrics import classification_report,confusion_matrix","e2b13984":"print(classification_report(y_test,predictions))","cc474351":"print(confusion_matrix(y_test,predictions))","67a70514":"# **Train Validation Test Split**","b3ee7b61":"# **Scaling the Data**","54638a19":"# **Data Analysis**","2c02a7ba":"60% train, 20% validation and 20% test","5b975275":"# **Model**","3bfac4af":"area_mean, radius_mean and perimeter mean are correlated.\n\ncompactness_mean, concavity_mean and concave_points mean are correlated. Keep all for now.\n\nradius_se, perimeter_se and area_se are correlated.\n\nradius_worst, perimeter_worst and area_worst are correlated.\n\ncompactness_worst, concavity_worst and concave_points_worst are correlated. Keep all for now."}}