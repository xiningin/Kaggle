{"cell_type":{"528008b0":"code","23ba9ae1":"code","30868fc3":"code","5bddd950":"code","1716aa05":"code","7e91fd71":"code","ddd0b8a8":"code","70ba75c0":"code","e8aba319":"code","b07990b2":"code","9aa2c8ff":"code","591e6bcd":"code","f9325999":"code","e299104a":"code","c61370ef":"code","221e42c0":"code","f9e696ec":"code","3b4eefd7":"code","f90c6b61":"code","6f05cc30":"code","d2c0c08f":"code","baf25ea3":"code","89d0d72d":"code","0eaec45f":"code","3748ed0b":"code","ae0216b0":"code","eee5f6c3":"code","0f7fd831":"code","23d50c8c":"code","6893caf0":"code","6b0d17b4":"code","5af3eaa2":"code","c04e9af2":"code","34a5ac2c":"code","81abacdb":"code","17821caa":"markdown","21ac1f6b":"markdown","9347ae40":"markdown"},"source":{"528008b0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","23ba9ae1":"\n\npath=\"\/kaggle\/input\/covid19-in-india\/\"\ndef load_data(data):\n    \n    return pd.read_csv(path+data)\n\n","30868fc3":"cvd=pd.read_csv('..\/input\/covid19-in-india\/covid_19_india.csv')\ncvd.head()\nage_group=load_data('AgeGroupDetails.csv')\nind_det=load_data('IndividualDetails.csv')  \n#print(ind_det.head())\nstate_Test=load_data(\"StatewiseTestingDetails.csv\")\nICMR_details = pd.read_csv('..\/input\/covid19-in-india\/ICMRTestingDetails.csv')\n#ICMR_details.head()\n#IndividualDetails.csv\n#cvd.head()\n#cvd.columns\n#cvd=cvd.rename(columns={'State\/UnionTerritory':'STUT'}, inplace=True)\n#print(cvd)\nbed=load_data('HospitalBedsIndia.csv')\nprint(ind_det.current_status.unique())\n\n\n","5bddd950":"ICMR_details.head()","1716aa05":"state_details = pd.pivot_table(cvd, values=['Confirmed','Deaths','Cured'], index='State\/UnionTerritory', aggfunc='max')\nstate_details['Recovery Rate'] = round(state_details['Cured'] \/ state_details['Confirmed'],2)\nstate_details['Death Rate'] = round(state_details['Deaths'] \/state_details['Confirmed'], 2)\nstate_details = state_details.sort_values(by='Confirmed', ascending= False).reset_index(level=0)\nstate_details.style.background_gradient(cmap='plasma_r')","7e91fd71":"\n\nstate_details.rename(columns={'State\/UnionTerritory':'STUT'}, inplace=True)\nstate_details.head()\n\n","ddd0b8a8":"\n\nimport plotly.express as px\ndf = px.data.tips()\n\nfig = px.density_contour(state_details, x=\"Confirmed\", y=\"Deaths\")\nfig.update_traces(contours_coloring=\"fill\", contours_showlabels = True)\nfig.show()\n\n","70ba75c0":"fig = px.density_contour(state_details, x=\"Confirmed\", y=\"Cured\")\nfig.update_traces(contours_coloring=\"fill\", contours_showlabels = True)\nfig.show()","e8aba319":"import plotly.graph_objs as go\n#from chart_studio.plotly import iplot\nimport plotly\n\n#import plotly.graph_objs as go\n# Set notebook mode to work in offline\nimport plotly.offline as pyo\n#from plotly.offline import iplot\n# your code\npyo.init_notebook_mode()\nx = state_details.STUT\n\ntrace1 = {\n  'x': x,\n  'y': state_details.Confirmed,\n  'name': 'confirmed',\n  'type': 'bar'\n};\ntrace2 = {\n  'x': x,\n  'y': state_details.Cured,\n  'name': 'Cured',\n  'type': 'bar'\n};\n\ntrace3 = {\n  'x': x,\n  'y': state_details.Deaths,\n  'name': 'Deaths',\n  'type': 'bar'\n};\ndata = [trace1, trace2,trace3];\nlayout = {\n  'xaxis': {'title': 'State-Data'},\n  'barmode': 'relative',\n  'title': 'Case Wise Disturbution'\n};\nfig = go.Figure(data = data, layout = layout)\npyo.iplot(fig)\n#plotly.offline.plot(fig, filename='gauge-meter-chart.html')","b07990b2":"\n\nimport plotly.express as px\ndf = px.data.wind()\nfig = px.bar_polar(state_details, r=state_details.Confirmed, theta=state_details.Cured, color=state_details.STUT, template=\"plotly_dark\",\n            color_discrete_sequence= px.colors.sequential.Plasma_r)\nfig.show()\n\n","9aa2c8ff":"locations = ind_det.groupby(['detected_state', 'detected_district', 'detected_city'])['government_id'].count().reset_index()\nlocations['country'] = 'India'\nfig = px.treemap(locations, path=[\"country\", \"detected_state\", \"detected_district\", \"detected_city\"], values=\"government_id\", height=700,\n           title='State ---> District --> City', color_discrete_sequence = px.colors.qualitative.Prism)\n\nfig.data[0].textinfo = 'label+text+value+percent entry+percent root'\nfig.show()","591e6bcd":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=age_group['AgeGroup'],y=age_group['TotalCases'],line_shape='vhv',fill='tonextx',fillcolor ='gold')) \nfig.update_layout(title=\"Age wise Disturbution\",yaxis_title=\"Total Number of cases\",xaxis_title=\"Age Group\")\nfig.update_layout(plot_bgcolor='rgb(275, 270, 273)',width=800,height=600)\nfig.show()","f9325999":"px.histogram(ind_det, x='gender', color_discrete_sequence = ['palegoldenrod'], title='GenderWise  Distribution')","e299104a":"\n\ncp1=ind_det.copy()\ncp1['current_status']=cp1['current_status'].replace(np.nan,'NaN')\ncp2=cp1[cp1.gender == 'M'].groupby(['current_status']).count().reset_index()\ncp3=cp1[cp1.gender == 'F'].groupby(['current_status']).count().reset_index()\n\ncp2.rename(columns = {'id':'Male'}, inplace = True) \ncp3.rename(columns = {'id':'Female'}, inplace = True) \ncp4=pd.concat([cp2[\"current_status\"],cp2[\"Male\"] ,cp3[\"Female\"]], axis=1).reset_index(drop=True, inplace=False)\ncp4.style.background_gradient(cmap='terrain')\n\n","c61370ef":"c4=cp4.set_index('current_status',inplace=True)  #reset the index and transpose the dataframe\nc4=cp4.transpose().reset_index()","221e42c0":"# prepare data frames\n#df2014 = timesData[timesData.year == 2014].iloc[:3,:]\n# import graph objects as \"go\"\nimport plotly.graph_objs as go\n#from chart_studio.plotly import iplot\nimport plotly\nfrom plotly.offline import iplot\n# your code\n\nx = c4.index\n\ntrace1 = {\n  'x': x,\n  'y': c4.Deceased,\n  'name': 'Deceased',\n  'type': 'bar'\n};\ntrace2 = {\n  'x': x,\n  'y': c4.Hospitalized,\n  'name': 'Hospitalized',\n  'type': 'bar'\n};\n\n\n\ntrace3 = {\n  'x': x,\n  'y': c4.Recovered,\n  'name': 'Recovered',\n  'type': 'bar'\n};\n\n\ndata = [trace1, trace2,trace3];\nlayout = {\n  'xaxis': {'title': 'Male-vs-Female'},\n  'barmode': 'relative',\n  'title': 'Gender-Wise-Disturbution of cases'\n};\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","f9e696ec":"\n\ntemp = cvd[[\"Date\",\"Confirmed\",\"Deaths\",\"Cured\"]]\ntemp['Date'] = temp['Date'].apply(pd.to_datetime, dayfirst=True)\n\ndate_wise_data = temp.groupby([\"Date\"]).sum().reset_index()\n\n","3b4eefd7":"temp = date_wise_data.melt(id_vars=\"Date\", value_vars=['Cured', 'Deaths', 'Confirmed'],\n               var_name='Case', value_name='Count')\n#temp.head()\ncnf = '#393e46' # confirmed - grey\ndth = '#ff2e63' # death - red\nrec = '#21bf73' # recovered - cyan\nact = '#fe9801'\nfig = px.area(temp, x=\"Date\", y=\"Count\", color='Case',title='Cases over time', color_discrete_sequence = [rec, dth, act])\nfig.show()","f90c6b61":"import plotly.graph_objects as go\nimport pandas as pd\ndf = pd.read_csv('https:\/\/raw.githubusercontent.com\/plotly\/datasets\/master\/finance-charts-apple.csv')\n\nfig = px.line(cvd, x='Date', y='Confirmed', title='Time Series with Rangeslider')\n\nfig.update_xaxes(rangeslider_visible=True)\nfig.show()","6f05cc30":"cvd.Confirmed.sum()","d2c0c08f":"import plotly.graph_objects as go\nimport pandas as pd\nfig.add_trace(go.Scatter(x=ICMR_details['DateTime'], y=ICMR_details['TotalSamplesTested'],\n                    mode='lines',name='TotalSamplesTested'))\n\nfig.add_trace(go.Scatter(x=ICMR_details['DateTime'], y=ICMR_details['TotalIndividualsTested'], \n                mode='lines',name='TotalIndividualsTested'))\n\nfig.add_trace(go.Scatter(x=ICMR_details['DateTime'], y=ICMR_details['TotalPositiveCases'], \n                mode='lines',name='TotalPositiveCases'))\n\nfig.update_layout(title_text='ICMR TEST conducted for COVID19',plot_bgcolor='rgb(225,230,255)')\nfig.show()\nfig.update_xaxes(rangeslider_visible=True)\nfig.show()","baf25ea3":"import plotly.graph_objects as go\nimport pandas as pd\ndf = pd.read_csv('https:\/\/raw.githubusercontent.com\/plotly\/datasets\/master\/finance-charts-apple.csv')\n\nfig = px.line(ICMR_details, x='DateTime', y='TotalSamplesTested', title='Time Series with Rangeslider')\n\nfig.update_xaxes(rangeslider_visible=True)\nfig.show()","89d0d72d":"import plotly.graph_objects as go\nimport pandas as pd\ndf = pd.read_csv('https:\/\/raw.githubusercontent.com\/plotly\/datasets\/master\/finance-charts-apple.csv')\n\nfig = px.line(ICMR_details, x='DateTime', y='TotalIndividualsTested', title='Time Series with Rangeslider')\n\nfig.update_xaxes(rangeslider_visible=True)\nfig.show()","0eaec45f":"import plotly.graph_objects as go\nimport pandas as pd\ndf = pd.read_csv('https:\/\/raw.githubusercontent.com\/plotly\/datasets\/master\/finance-charts-apple.csv')\n\nfig = px.line(ICMR_details, x='DateTime', y='TotalPositiveCases', title='Time Series with Rangeslider')\n\nfig.update_xaxes(rangeslider_visible=True)\nfig.show()","3748ed0b":"\nbed.rename(columns={'State\/UT':'STUT'}, inplace=True)\nbed.head()\n\n","ae0216b0":"bed[\"Total_bed\"]=bed[\"NumPublicBeds_HMIS\"]+bed[\"NumRuralBeds_NHP18\"]+bed[\"NumUrbanBeds_NHP18\"]\nbed.tail()","eee5f6c3":"bed1=bed[:-1]","0f7fd831":"import plotly.express as px\n#data_canada = px.data.gapminder().query(\"country == 'Canada'\")\nfig = px.bar(bed[:-1], x='STUT', y='Total_bed', text='Total_bed')\nfig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\nfig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide',title=\"Disturbution of Beds in Hospital\")\nfig.show()","23d50c8c":"import plotly.graph_objs as go\n#from chart_studio.plotly import iplot\nimport plotly\nfrom plotly.offline import iplot\n# your code\n\nx = bed.STUT[:-1]\n\ntrace1 = {\n  'x': x,\n  'y': bed.NumPrimaryHealthCenters_HMIS,\n  'name': 'Public Health Center',\n  'type': 'bar'\n};\ntrace2 = {\n  'x': x,\n  'y': bed.NumCommunityHealthCenters_HMIS,\n  'name': 'Community-hospitals',\n  'type': 'bar'\n};\n\n\n\ntrace3 = {\n  'x': x,\n  'y': bed.NumSubDistrictHospitals_HMIS,\n  'name': 'sub-district',\n  'type': 'bar'\n};\n\ntrace4 = {\n  'x': x,\n  'y': bed.NumDistrictHospitals_HMIS,\n  'name': 'District hospitals',\n  'type': 'bar'\n};\n\n\ndata = [trace1, trace2,trace3,trace4];\nlayout = {\n  'xaxis': {'title': 'Statewise hospital Disturbution'},\n  'barmode': 'relative',\n  'title': 'Disturbution of Number of Hospitals'\n};\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","6893caf0":"ind_det.head()","6b0d17b4":"\nind_det.rename(columns={'diagnosed_date':'date_announced'}, inplace=True)","5af3eaa2":"days_to_status_change = ind_det[['date_announced', 'status_change_date', 'current_status']].dropna()\n\ndays_to_status_change['date_announced'] = days_to_status_change['date_announced'].apply(pd.to_datetime, dayfirst=True)\ndays_to_status_change['status_change_date'] = days_to_status_change['status_change_date'].apply(pd.to_datetime, dayfirst=True)\n\n\ndays_to_status_change = days_to_status_change[days_to_status_change['status_change_date'] != days_to_status_change['date_announced']]\ndays_to_status_change['days_to_status_change'] = days_to_status_change['status_change_date'] - days_to_status_change['date_announced']\ndays_to_status_change['days_to_status_change'] = days_to_status_change['days_to_status_change'].dt.days\n\ndays_to_recover = days_to_status_change[days_to_status_change['current_status']=='Recovered']\ndays_to_recover.head()","c04e9af2":"days_to_recover['days_to_status_change'].unique()","34a5ac2c":"px.box(days_to_status_change, x=\"current_status\", y=\"days_to_status_change\", color='current_status')","81abacdb":"import plotly.express as px\n\nimport pandas as pd\ndf = pd.read_csv('https:\/\/raw.githubusercontent.com\/plotly\/datasets\/master\/finance-charts-apple.csv')\n\nfig = px.line(df, x='Date', y='AAPL.High')\nfig.show()","17821caa":"References :\n1. https:\/\/www.kaggle.com\/sauravmishra1710\/covid-19-india-reports-indiafightscorona\n2. https:\/\/www.kaggle.com\/ayushimishra2809\/analysis-and-predictions-for-covid-19-india\n3. https:\/\/en.wikipedia.org\/wiki\/2020_coronavirus_pandemic_in_India","21ac1f6b":"# To be added\n\n1. Financial Impact of Covid19 in India\n\n2. Number of Hospitals beds per million\n\n3. Number of Tests per Million","9347ae40":"The first case of the 2019\u201320 coronavirus pandemic in India was reported on 30 January 2020, originating from China. As of 14 April 2020, the Ministry of Health and Family Welfare have confirmed a total of 10,363 cases, 1,036 recoveries (including 1 migration) and 339 deaths in the country.[5] Experts suggest the number of infections could be much higher as India's testing rates are among the lowest in the world.[8] The infection rate of COVID-19 in India is reported to be 1.7, significantly lower than in the worst affected countries.[9]\n\nThe outbreak has been declared an epidemic in more than a dozen states and union territories, where provisions of the Epidemic Diseases Act, 1897 have been invoked, and educational institutions and many commercial establishments have been shut down. India has suspended all tourist visas, as a majority of the confirmed cases were linked to other countries.[10]\n\nOn 22 March 2020, India observed a 14-hour voluntary public curfew at the instance of the prime minister Narendra Modi. The government followed it up with lockdowns in 75 districts where COVID cases had occurred as well as all major cities.[11][12] Further, on 24 March, the prime minister ordered a nationwide lockdown for 21 days, affecting the entire 1.3 billion population of India.[13][14] On 14 April, the prime minister extended the ongoing nationwide lockdown till 3 May.[15] "}}