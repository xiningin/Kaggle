{"cell_type":{"f938a8a6":"code","3b4934ba":"code","5d5e904d":"code","d56965f2":"code","c678d333":"code","fd9e8e9b":"code","dc4291dd":"code","cf9aa299":"code","261559da":"code","b223cf5d":"code","683765ec":"code","ac4fc454":"markdown","f2d8d7c8":"markdown","168d74a9":"markdown","d146d4a0":"markdown"},"source":{"f938a8a6":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport matplotlib.pyplot as plt # data visualization\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","3b4934ba":"train = pd.read_csv(\"\/kaggle\/input\/fashionmnist\/fashion-mnist_train.csv\")\ntest  = pd.read_csv(\"\/kaggle\/input\/fashionmnist\/fashion-mnist_test.csv\")\ntrain.head()","5d5e904d":"train.shape","d56965f2":"y_test = test.label.values.reshape(-1,1) # 1 at the end is necessary because keras needs it.\nx_test = np.array(test.drop([\"label\"],axis=1)).reshape(test.shape[0],28,28,1)","c678d333":"from keras.utils import to_categorical\n\ny_train = train.label.values.reshape(-1,1) # 1 at the end is necessary because keras needs it.\nx_train = np.array(train.drop([\"label\"],axis=1)).reshape(train.shape[0],28,28,1) # same as here\nprint(y_train.shape,x_train.shape)\ny_train = to_categorical(y_train,num_classes=10)\ny_test = to_categorical(y_test,num_classes=10)","fd9e8e9b":"x_train = x_train.astype('float32')\nx_test = x_test.astype('float32')\nx_train=x_train\/255.0\nx_test=x_test\/255.0","dc4291dd":"from keras.preprocessing.image import ImageDataGenerator\ndatagen = ImageDataGenerator(\n        featurewise_center=False, \n        samplewise_center=False, \n        featurewise_std_normalization=False,\n        samplewise_std_normalization=False,  \n        zca_whitening=False,\n        rotation_range=0.5, \n        zoom_range = 0.5, \n        width_shift_range=0.5,  # \n        height_shift_range=0.5,  # \n        horizontal_flip=False, \n        vertical_flip=False)\n\ndatagen.fit(x_train)","cf9aa299":"import keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPooling2D\nfrom keras.optimizers import Adam\n\nbatch = 5\nepoch = 10\n\nmodel = Sequential()\nmodel.add(Conv2D(filters=64,kernel_size=(4,4), activation='relu',input_shape=(28,28,1)))\nmodel.add(MaxPooling2D((2, 2)))\nmodel.add(Dropout(0.25))\nmodel.add(Conv2D(filters=64,kernel_size=(3,3), activation='relu'))\nmodel.add(MaxPooling2D((2, 2)))\nmodel.add(Dropout(0.25))\nmodel.add(Conv2D(filters=128,kernel_size=(3,3), activation='relu'))\n\nmodel.add(Dropout(0.4))\n\nmodel.add(Flatten())\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dense(10, activation='softmax'))\n\noptimizer = Adam()\nmodel.compile(loss=\"categorical_crossentropy\" ,optimizer = optimizer ,metrics=['accuracy'])\n","261559da":"#history = model.fit_generator(datagen.flow(x_train, y_train, batch_size=batch),epochs=epoch,validation_data=(x_test, y_test),steps_per_epoch=x_train.shape[0] \/\/ batch)\nhistory = model.fit(x_train,y_train,batch_size=batch,verbose = 1, epochs = epoch,validation_data=(x_test,y_test))\nscore = model.evaluate(x_test, y_test)","b223cf5d":"plt.plot(history.history['val_loss'],label=\"validation loss\")\nplt.xlabel(\"Number of Epochs\")\nplt.ylabel(\"Loss\")\nplt.title(\"Test Loss\")\nplt.legend()\nplt.show()","683765ec":"predictions = model.predict(x_test)\nprint(\"Test loss :\",score[0])\nprint(\"Test Accuracy : \",score[1])","ac4fc454":"Now , I will split my labels to y and pixels to x.Then i need to change my labels into hot vector.To do this I am going to use to_categorical function.","f2d8d7c8":"# Introduction\nIn this kernel , I am going to classify Fashion-MNISH dataset with Keras using Convolutional Neural Network.","168d74a9":"I am going to use csv files.Let's start with importing them.","d146d4a0":"I will normalize my data."}}