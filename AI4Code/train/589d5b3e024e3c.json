{"cell_type":{"ecd61816":"code","a355fda8":"code","ecb7e118":"code","1dee8f7b":"code","06349856":"code","2dfa8624":"code","523e5631":"code","a79db81a":"code","1e30ed6e":"code","11b8744a":"code","4f1646ea":"code","c84e375e":"code","24031a01":"code","a6d955c8":"code","0e457f28":"markdown"},"source":{"ecd61816":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a355fda8":"#Prerequisites\n!pip install cdqa\n\n#This implementation uses the cdQA-Suite","ecb7e118":"import os\nimport pandas as pd\nfrom ast import literal_eval\n\nfrom cdqa.utils.filters import filter_paragraphs\nfrom cdqa.pipeline import QAPipeline","1dee8f7b":"from cdqa.utils.download import download_model\n#It uses a Pre-trained model on SQuAD v2.0","06349856":"download_model(model='bert-squad_1.1', dir='.\/models')","2dfa8624":"!pip install docx2python\nfrom docx2python import docx2python","523e5631":"from shutil import copyfile\ncopyfile(src = \"..\/input\/trump-corona\/article_text.docx\", dst = \"..\/working\/article_text.docx\")","a79db81a":"doc=docx2python('..\/input\/trump-corona\/article_text.docx')","1e30ed6e":"doc.body[0][0][0]","11b8744a":"df2={'title':['article'], 'paragraphs':[doc.body[0][0][0]]};\n#The cdQA suite requires input to be in a particular form of a Pandas Dataframe","4f1646ea":"import pandas as pd\ndata=pd.DataFrame(df2)","c84e375e":"cdqa_pipeline = QAPipeline(reader='.\/models\/bert_qa.joblib')\ncdqa_pipeline.fit_retriever(df=data)","24031a01":"query = 'How many confirmed cases are there in the US?'\nprediction = cdqa_pipeline.predict(query)\nprint('query: {}'.format(query))\nprint('answer: {}'.format(prediction[0]))\nprint('title: {}'.format(prediction[1]))\nprint('paragraph: {}'.format(prediction[2]))","a6d955c8":"query2 = 'How many people have died?'\nprediction2 = cdqa_pipeline.predict(query2)\nprint('query: {}'.format(query2))\nprint('answer: {}'.format(prediction2[0]))\nprint('title: {}'.format(prediction2[1]))\nprint('paragraph: {}'.format(prediction2[2]))","0e457f28":"Implementation of Question Answering using our own document using the cdQA suite. \nYou can find more about cdQA suite [here](https:\/\/github.com\/cdqa-suite\/cdQA)"}}