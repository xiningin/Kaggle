{"cell_type":{"e59e54fc":"code","c5a59dc5":"code","a5ded928":"code","eed31986":"code","a737f5b1":"code","692274ce":"code","842288f0":"code","e8f445b4":"code","6f981218":"code","50f720a6":"code","4aea019b":"code","0be18981":"code","7eef5768":"code","0061c4f8":"code","b83faa26":"code","10796938":"code","1c557aae":"code","d1bc7c8d":"code","b1b3de1f":"code","8d57550f":"code","f270487e":"code","c65f5a47":"code","cab25973":"code","c0d35b5e":"code","79c52c6a":"code","58c3037d":"code","6489ffbe":"code","6502ac93":"markdown","a5153010":"markdown","389d20d7":"markdown","6410897a":"markdown","f5076d8d":"markdown","fc61b740":"markdown","52b164d2":"markdown","7fd88371":"markdown"},"source":{"e59e54fc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c5a59dc5":"import pandas as pd\ndata=pd.read_csv('..\/input\/breast-cancer-wisconsin-data\/data.csv')","a5ded928":"data","eed31986":"data.describe()","a737f5b1":"del data['Unnamed: 32']","692274ce":"t=data[\"diagnosis\"].value_counts()\nt","842288f0":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.barplot(x=\"diagnosis\", y='id', data=data);\n","e8f445b4":"out=data.copy()\ndel out['diagnosis']","6f981218":"for column in out.columns[1:]:\n    sns.scatterplot(data=out, x=column,y='id')\n    plt.show()","50f720a6":"data.isna().sum()","4aea019b":"out","0be18981":"for column in out.columns[:]:\n    col=out[column]\n    std=col.std()\n    avg=col.mean()\n    three_sigma_plus = avg + (3 * std)\n    three_sigma_minus =  avg - (3 * std)\n        \n    outliers = col[((out[column] > three_sigma_plus) | (out[column] < three_sigma_minus))].index\n    print(column, outliers)","7eef5768":"\nfor column in out.columns[1:]:\n    sns.scatterplot(data=out, x=column, y=\"id\"\n                   )\n    plt.show()","0061c4f8":"data.drop(index=outliers, inplace=True)","b83faa26":"for column in data.columns[2:]:\n    sns.scatterplot(data=data, x=\"id\", y=column\n                   )\n    plt.show()","10796938":"x=data.iloc[:,2:]\ny=data.iloc[:,1:2]","1c557aae":"x","d1bc7c8d":"y","b1b3de1f":"\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y, test_size=0.25, random_state=0)","8d57550f":"x_train.shape","f270487e":"y_train.shape","c65f5a47":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV\nparameters = {\n    'n_estimators'      : [20,30,40],\n    'max_depth'         : [5, 6, 7],\n    'random_state'      : [0],\n    'max_features': ['auto'],\n    'criterion' :['gini']\n}\nclf = GridSearchCV(RandomForestClassifier(), parameters, cv=10, n_jobs=-1)\nclf.fit(x_train, y_train)\n\nprint(clf.score(x_train, y_train))\nprint(clf.best_params_)","cab25973":"\nrf=RandomForestClassifier(n_estimators=20, random_state=0, max_depth=6 ,max_features ='auto', criterion = 'gini')\na=rf.fit(x_train, y_train)\n","c0d35b5e":"from sklearn.metrics import accuracy_score\npred=a.predict(x_test)\nprint(accuracy_score(pred,y_test))\npred","79c52c6a":"predf = pd.DataFrame()\npredf['predictions'] = pred.tolist()\npredf.head()","58c3037d":"y_test.head()","6489ffbe":"predf.to_csv('breastcancerprediction.csv', index=False)","6502ac93":"# Used GridSearch Cross Validation for More Success Rate","a5153010":"# Preparing Data for Model Setup","389d20d7":"# Drop Outlier Values","6410897a":"# Data Analysis","f5076d8d":"# To_CSV","fc61b740":"# Performance Metrics","52b164d2":"# Checking for Null Values","7fd88371":"# Catching Outlier Values"}}