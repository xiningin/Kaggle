{"cell_type":{"94009727":"code","0376690c":"code","29051ce3":"code","c350b60c":"code","38be835c":"code","e3801b79":"code","81e0b29c":"code","4208e8ed":"code","8d598909":"code","adb71317":"code","67b2e487":"code","00c2214e":"code","eea9d6fe":"code","1c5a4d81":"code","7af6380e":"code","98527279":"code","01091fe0":"code","9fa27b2e":"code","6dd909b1":"code","4b89237e":"code","9b79b4cf":"code","3b342523":"code","b53cd0a2":"code","cb5f2b73":"code","730b355e":"code","9e449a37":"markdown","2a0bf7ec":"markdown","25248866":"markdown","00793b33":"markdown","ed707ab9":"markdown","6a48ba33":"markdown","538dd670":"markdown","691ce3b5":"markdown","0ec72db0":"markdown","d5130261":"markdown","aaa281f3":"markdown","1e7829c2":"markdown","d51c6deb":"markdown","ff9885c8":"markdown","ec29e527":"markdown","e4544eef":"markdown","d9e34399":"markdown","20d14ede":"markdown","f032ae10":"markdown","2cd77404":"markdown","98778ebf":"markdown","99ba398d":"markdown","25485e3f":"markdown","c319e105":"markdown","0ce6abcc":"markdown","64dcb007":"markdown"},"source":{"94009727":"from mpl_toolkits.mplot3d import Axes3D\nfrom sklearn.preprocessing import StandardScaler\nimport matplotlib.pyplot as plt # plotting\nimport numpy as np # linear algebra\nimport os # accessing directory structure\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns  # visualization tool\nimport json #for parse \"properties\" parameter\nimport warnings\nwarnings.filterwarnings('ignore')","0376690c":"# Function for maping datasets. \n#We will change all 'consider' value to 1, and 'clear' = 0 for **map_encode_docs** list \ndef result_encode(features, dataset):\n    for feature in features:\n        dataset[feature] = dataset[feature].map(result_map)\n\n# function for clean and prepare dataframe        \ndef prepare_data(dataframe):\n    dataframe.created_at = pd.to_datetime(dataframe.created_at,\n                                          errors='coerce',\n                                          format='%Y-%m-%d %H:%M:%S')\n    dataframe.fillna(np.nan)\n    \nmap_encode_all = ['result_doc', \n                  \"visual_authenticity_result_doc\", \n                  \"image_integrity_result\", \n                  \"face_detection_result\", \n                  \"image_quality_result\",\n                  \"supported_document_result\",\n                  'conclusive_document_quality_result',\n                  'colour_picture_result', \n                  'data_validation_result',\n                  'data_consistency_result', \n                  'data_comparison_result',\n                  'police_record_result', \n                  'compromised_document_result',\n                  'face_comparison_result', \n                  'facial_image_integrity_result',\n                  'visual_authenticity_result_face',\n                  'result_face']\n\nresult_map = {\"consider\" : 1, \"clear\": 0, 'unidentified': 1}","29051ce3":"print(os.listdir('..\/input'))\nprint(os.listdir('..\/input\/kyc_challenge'))","c350b60c":"doc = pd.read_csv('..\/input\/kyc_challenge\/doc_reports.csv', delimiter=',')\ndoc.dataframeName = 'doc_reports.csv'\nprepare_data(doc)\ndoc.head(5)","38be835c":"face = pd.read_csv('..\/input\/kyc_challenge\/facial_similarity_reports.csv', delimiter=',')\nface.dataframeName = 'facial_similarity_reports.csv'\nprepare_data(face)\nface.head(5)","e3801b79":"mb = pd.merge(doc, face, on='Unnamed: 0', how='left', suffixes=('_doc', '_face'), validate='one_to_one')\nmb = mb.drop(['Unnamed: 0', 'user_id_face', 'attempt_id_doc', 'attempt_id_face', 'created_at_face', 'sub_result', 'properties_face',], axis=1)","81e0b29c":"mb.head()","4208e8ed":"mb.result_doc.value_counts(normalize=True).plot.bar();","8d598909":"result_encode(map_encode_all, mb)\nmb.fillna(0, inplace=True)","adb71317":"mb.head()","67b2e487":"plt.rcParams['figure.figsize'] = (18, 7)\nmb.groupby(pd.Grouper(key='created_at_doc', freq='D'))['user_id_doc'].count().plot();","00c2214e":"data_corr  = mb.corr()\n# correlation map plotting\nf,ax = plt.subplots(figsize =(15,12))\nsns.heatmap(data_corr, annot = True, linewidths = 5, fmt = '.3f', ax = ax)\nplt.show()","eea9d6fe":"data_corr","1c5a4d81":"mb.groupby(pd.Grouper(key='created_at_doc', freq='D'))[map_encode_all].mean().plot();","7af6380e":"suspected_params = [\"image_integrity_result\", 'facial_image_integrity_result', 'image_quality_result']","98527279":"mb.groupby(pd.Grouper(key='created_at_doc', freq='D'))[suspected_params].mean().plot();","01091fe0":"#cleaning\nmb.properties_doc = mb.properties_doc.apply(lambda row: row.replace('None', \"\\\"NaN\\\"\"))\nmb['properties_doc'] = mb.properties_doc.apply(lambda x: x.strip(\"\\'<>()\").replace('\\'', '\\\"'))\n#loading\nmb['properties_doc'] = mb['properties_doc'].apply(json.loads)\n#parsing\nmb = mb.drop('properties_doc', 1).assign(**pd.DataFrame(mb.properties_doc.values.tolist()))\n#and get dates from new columns\nmb.date_of_expiry = pd.to_datetime(mb.date_of_expiry, errors='coerce', format='%Y-%m-%d')\nmb.issuing_date = pd.to_datetime(mb.issuing_date, errors='coerce', format='%Y-%m')","9fa27b2e":"mb = mb.set_index(keys='created_at_doc')\nmb.head()","6dd909b1":"mb[(mb['result_doc'] == 1) & (mb['image_integrity_result'] == 1)]['issuing_country'].value_counts()[:10].plot(kind='bar');","4b89237e":"mb[(mb['result_doc'] == 1) & (mb['image_integrity_result'] == 1)]['nationality'].value_counts()[:10].plot(kind='bar');","9b79b4cf":"mb[(mb['result_doc'] == 1) & (mb['image_integrity_result'] == 1)]['document_type'].value_counts()[:10].plot(kind='bar');","3b342523":"suspect_data = mb['2017-10-10':'2017-10-25']","b53cd0a2":"suspect_data[suspect_data['image_integrity_result'] == 1]['issuing_country'].value_counts()[:10].plot(kind='bar');","cb5f2b73":"suspect_data[suspect_data['image_integrity_result'] == 1]['nationality'].value_counts()[:10].plot(kind='bar');","730b355e":"suspect_data[suspect_data['image_integrity_result'] == 1]['document_type'].value_counts()[:10].plot(kind='bar');","9e449a37":"### Calculate the proportion of **clear\/consider** users for all time","2a0bf7ec":"As a financial institution regulated by the FCA, N26 has the obligation to verify the identity of all\ncustomers who want to open a N26 account. Each prospective customer has to go through a\nKnow Your Customer (KYC) process by submitting a government-issued photo ID and a facial\npicture of themself to our partner, Veritas. \nVeritas then would perform 2 checks:\n\u2022 Document check: To verify that the photo ID is valid and authentic;\n\u2022 Facial Similarity check: To verify that the face in the picture is the same with that on the\nsubmitted ID.\nThe customer will \u2018pass\u2019 the KYC process and get aboard if the results of both Document and\nFacial Similarity checks are \u2018clear\u2019. If the result of any check is not \u2018clear\u2019, the customer has to\nsubmit all the photos again.\nThe pass rate is defined as the number of customers who pass both the KYC process divided by\nthe number of customers who attempt the process. Each customer has up to 2 attempts.\nThe pass rate has decreased substantially for the last few weeks.","25248866":"## 10 Most often **image_integrity_result** failure grouped by **issuing country**","00793b33":"## Mapping string values\nWe will change all 'consider' value to 1, and 'clear' = 0 for **map_encode_all** list","ed707ab9":"Now we need to parse '**properties**' column. All '**None**' results we'll replacing to '**NaN**', delete all bad symbols and replace single quotes to double - as JSON library required.","6a48ba33":"Hello! As a N26 Bank customer, I interesting in this case. Let's try to figure out why the pass rate for registration has increased.","538dd670":"# Now dataframe 'mb' is ready to explore","691ce3b5":"### For **'result_doc'** column very high correlation coefficient **(0,935)** have next stage of KYC: \n* **image_integrity_result** - Asserts whether the document was of sufficient quality to verify.\n\n### For **'result_face'** column very high correlation coefficient **(0,951)** have next stage of KYC: \n* **facial_image_integrity_result** - Asserts whether the quality of the uploaded files and the content contained within them were sufficient to perform a face comparison\n### **These parameters have a great influence on the final KYC result.**","0ec72db0":"## Reading **doc_reports.csv**\nThe document report is composed of data integrity, visual authenticity and police record checks. It checks the internal and external consistency of the most recent identity document provided by the applicant to identify potential discrepancies.\nIn addition, any data extracted from the document through OCR is returned in the properties attribute.\nThe document report combines software and an expert team to maximise fraud detection. The majority of documents will be processed instantly. However, when document analysis falls back to expert review, the report status will be delivered asynchronously via webhook notifications.\n**Expert review is required when we encounter images that use sophisticated counterfeiting techniques, or the image is of poor quality (blurred, low resolution, obscured, cropped, or held at an unreadable angle).**\n\n**BREAKDOWN**\n* **visual_authenticity**\t - Asserts whether visual, non-textual, elements are correct given the type of document\n* **image_integrity**\t - Asserts whether the document was of sufficient quality to verify\n* **data_validation**\t - Asserts whether algorithmically-validatable elements are correct e.g. MRZ lines and document numbers\n* **data_consistency** - Asserts whether data represented in multiple places on the document is consistent e.g. between MRZ lines and OCR extracted text on passports\n* **data_comparison**\t- Asserts whether data on the document is consistent with data provided by an applicant (either through Veritas\u2019s applicant form or when creating an applicant through the API)\n* **police_record** - Asserts whether the document has been identified as lost, stolen or otherwise compromised\n* **compromised_document** - Asserts whether the image of the document has been found in our internal database of compromised documents","d5130261":"### Most often **image_integrity_result** failure grouped by **nationality**","aaa281f3":"## Importing the necessary libraries","1e7829c2":"### We need functions for mapping string values and preparing our dataframes","d51c6deb":"### Most often **image_integrity_result** failure grouped by **document_type**","ff9885c8":"## How many people are registred in system by all period?","ec29e527":"# Let's take a closer look at the problem period.","e4544eef":"## So, after analyzing the data, we can say that the problem is in the next stage of KYC:\n### **image_integrity_result** - Asserts whether the document was of sufficient quality to verify.\n### **What we can do?** We can use the Expert review. As the API Documentation of Veritas tells us:\n### \"Expert review is required when we encounter images that use sophisticated counterfeiting techniques, or the image is of poor quality (blurred, low resolution, obscured, cropped, or held at an unreadable angle).\"\n\n\n \n","d9e34399":"## Most often **image_integrity_result** failure grouped by **issuing country**","20d14ede":"## Most often **image_integrity_result** failure grouped by **document_type**","f032ae10":"# The failure rate for the individual stages of verification, grouped by day.\n### As we can see, in mid-October, the failure rate for \"image_integrity_result\" increased to 1.","2cd77404":"### Task definition","98778ebf":"Sort Dataframe by date","99ba398d":"### Getting correlation dataframe for values","25485e3f":"## Reading **facial_similarity_reports.csv**\nThe facial similarity check will compare the most recent live photo or live video provided by the applicant to the photo in the most recent identity document provided.\n\n**BREAKDOWN**\n* **face_comparison**\t- Asserts whether the face in the document matches the face in the live photo or live video\n* **image_integrity**\t- Asserts whether the quality of the uploaded files and the content contained within them were sufficient to perform a face comparison\n* **visual_authenticity**\t- Asserts whether the live photo or live video is not a spoof (such as photos of printed photos or photos of digital screens)","c319e105":"## Merging dataframes and drop some columns","0ce6abcc":"## Most often **image_integrity_result** failure grouped by **nationality**","64dcb007":"### Our goal is to find out which of the verification stages most often leads to the 'consider' for the **result_doc** column"}}