{"cell_type":{"36add648":"code","c253db15":"code","a2d5749f":"code","561f1604":"code","c2304ccf":"code","bb860cb9":"code","11c96dbc":"code","ec056d45":"code","f2d1561d":"code","d34dc2e3":"code","b873d6d0":"code","717dc508":"code","2246c046":"code","99e0f3a5":"code","c473603d":"code","b6dc1731":"code","32f727bc":"code","efbfdc8d":"code","c1a5aa1e":"code","5ebd5249":"code","39257071":"code","d16f118f":"code","0537d305":"code","0b525d4a":"code","ca1256ba":"code","1a7b5e23":"code","00bd4b7f":"code","8f8e01a6":"code","7d4cfb79":"code","840c8d6f":"code","b216e16d":"code","8313c94d":"code","3b13bb00":"code","e246b43b":"code","747681f8":"code","a29100c4":"code","3e9b87d2":"code","3d40b66e":"markdown","812cb9de":"markdown","dae25877":"markdown","5087ec2a":"markdown","f70e81de":"markdown","af5378b8":"markdown","55bd7ad1":"markdown","90c95d76":"markdown","7bec4419":"markdown","bba5e4ff":"markdown","8096a4b0":"markdown","4ed4c7de":"markdown","138c6197":"markdown","22c166d9":"markdown"},"source":{"36add648":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c253db15":"import matplotlib.pyplot as plt\nimport seaborn as sns","a2d5749f":"df = pd.read_csv('\/kaggle\/input\/facebook-ad-campaign\/data.csv')","561f1604":"df.shape","c2304ccf":"df.info()","bb860cb9":"print(list(df.columns))","11c96dbc":"df.head()","ec056d45":"df.isnull().sum()","f2d1561d":"df= df.dropna()","d34dc2e3":"df.shape","b873d6d0":"df = df.drop(['reporting_start','reporting_end','fb_campaign_id'], axis=1)","717dc508":"df.head()","2246c046":"df.gender.value_counts()","99e0f3a5":"df.age.value_counts()","c473603d":"df.interest1.value_counts()","b6dc1731":"df.interest2.value_counts()","32f727bc":"df.interest3.value_counts()","efbfdc8d":"sns.countplot(df.age)","c1a5aa1e":"sns.countplot(df.gender)","5ebd5249":"sns.distplot(df.clicks)","39257071":"sns.distplot(df.spent)","d16f118f":"sns.countplot(df.approved_conversion)","0537d305":"# cost analysis\nprint('Campaign wise clicks')\nprint((df.groupby(['campaign_id'])).clicks.sum())\nprint('-------------------------')\n\nprint('Campaign wise amount spent')\nprint((df.groupby(['campaign_id'])).spent.sum())\nprint('--------------------------')\n\n\nprint('Campaign wise total conversions')\nprint((df.groupby(['campaign_id'])).total_conversion.sum())\nprint('---------------------------')\n\nprint('Campaign wise ad count')\nprint((df.groupby(['campaign_id'])).ad_id.count())\nprint('===========================')","0b525d4a":"campaign_1178_clicks = 9577\ncampaign_1178_cost = 16577.159998\ncampaign_1178_conv = 1050\ncampaign_1178_adcount = 243\ncampaign_1178_cpc = (campaign_1178_cost\/campaign_1178_clicks)\ncampaign_1178_cpco = (campaign_1178_cost\/campaign_1178_conv)\ncampaign_1178_cpad = (campaign_1178_cost\/campaign_1178_adcount)\n\nprint('The cost per click of campaign_1178 is '+ str(campaign_1178_cpc))\nprint('The cost per conversion of campaign_1178 is '+ str(campaign_1178_cpco))\nprint('The cost per ad in campaign_1178 is '+ str(campaign_1178_cpad))\nprint('---------------------------------------------------------------')\n\n\ncampaign_936_clicks = 1984\ncampaign_936_cost = 2893.369999\ncampaign_936_conv = 537\ncampaign_936_adcount = 464\ncampaign_936_cpc = (campaign_936_cost\/campaign_936_clicks)\ncampaign_936_cpco = (campaign_936_cost\/campaign_936_conv)\ncampaign_936_cpad = (campaign_936_cost\/campaign_936_adcount)\n\nprint('The cost per click of campaign_936 is '+ str(campaign_936_cpc))\nprint('The cost per conversion of campaign_936 is '+ str(campaign_936_cpco))\nprint('The cost per ad in campaign_936 is '+ str(campaign_936_cpad))\nprint('---------------------------------------------------------------')\n\ncampaign_916_clicks = 113\ncampaign_916_cost = 149.710001\ncampaign_916_conv = 58\ncampaign_916_adcount = 54\ncampaign_916_cpc = (campaign_916_cost\/campaign_916_clicks)\ncampaign_916_cpco = (campaign_916_cost\/campaign_916_conv)\ncampaign_916_cpad = (campaign_916_cost\/campaign_916_adcount)\n\nprint('The cost per click of campaign_916 is '+ str(campaign_916_cpc))\nprint('The cost per conversion of campaign_916 is '+ str(campaign_916_cpco))\nprint('The cost per ad in campaign_916 is '+ str(campaign_916_cpad))\nprint('---------------------------------------------------------------')","ca1256ba":"dfn = df.query('campaign_id ==\"916\"')\ndfn.head()","1a7b5e23":"dfm = df.query('campaign_id ==\"1178\"')\ndfm.head()","00bd4b7f":"# gender analysis","8f8e01a6":"print('Gender based analysis')\nprint((df.groupby(['gender'])).total_conversion.sum())\nprint((df.groupby(['gender'])).ad_id.count())\nprint((dfn.groupby(['gender'])).total_conversion.sum())\nprint((dfn.groupby(['gender'])).ad_id.count())\nprint((dfm.groupby(['gender'])).total_conversion.sum())\nprint((dfm.groupby(['gender'])).ad_id.count())","7d4cfb79":"#age analysis","840c8d6f":"print((df.groupby(['age'])).total_conversion.sum())\nprint((df.groupby(['age'])).ad_id.count())\nprint((dfn.groupby(['age'])).total_conversion.sum())\nprint((dfn.groupby(['age'])).ad_id.count())\nprint((dfm.groupby(['age'])).total_conversion.sum())\nprint((dfm.groupby(['age'])).ad_id.count())","b216e16d":"# Interests analysis","8313c94d":"(dfn.groupby(['interest1'])).total_conversion.sum()","3b13bb00":"(dfn.groupby(['interest2'])).total_conversion.sum()","e246b43b":"(dfn.groupby(['interest3'])).total_conversion.sum()","747681f8":"(dfm.groupby(['interest1'])).total_conversion.sum()","a29100c4":"(dfm.groupby(['interest2'])).total_conversion.sum()","3e9b87d2":"(dfm.groupby(['interest3'])).total_conversion.sum()","3d40b66e":"- We have 382 null values in total conversion and approved conversion\n- since total_conversion and approved_conversion are the key features for our data analysis and predictive analysis, we can remove the rows with null values in these two features. ","812cb9de":"- Since ad_id and fb_campaign_id are similar type of data and either one of them is enough to perform our data analysis we can drop one of them.\n- We can drop reporting_start and reporting_end also","dae25877":"- Though we can get more conversion by targeting Males alone, the cost per conversion is high (inferred from campaign 1178 analysis) and the number of ads.\n- If there was to be more ads in campaign 916 the conversions would have been much higher\n- From the above analysis we can conclude that we need to target both male and female. ","5087ec2a":"# Final Report  ","f70e81de":"- Though we can get more conversion by targeting 30-34 and 35-39 alone, the cost per conversion is high (inferred from campaign 1178 analysis).\n- The number of ads are also different. If there was to be more ads in campaign 916 the conversions would have been much higher\n- From the above analysis we can conclude that we need to target all four age ranges ","af5378b8":"# Data description","55bd7ad1":"# Data Analysis","90c95d76":"Now we can create two dataframes, one for campaign 916 and another one for campaign 1178 and we can analyze them further","7bec4419":"FEATURE DESCRIPTION :\n- ad_id is the id of specific ad set | It is an numerical feature\n- Reporting_start and reporting_end are the start and end dates of the each ad\n- Campaign_id is the id assigned by the ad running company\n- fb_campaign_id is the id assigned by facebook for every ad set\n- age and gender talk about the demographics | It is a categorical feature\n- Interest1, Interest2, Interest3 are the user interests and likes of facebook users who were taregted for the ad\n- Impressiosn are the number of times the ad was shown to the users | \n- Clicks is the number of time users clicked on the ad \n- spent is the amount of money spent on each campaign \n- Totalconversions is the number of users who have clicked the ad and have made a purchase or installed an app\n- approved_conversions tells how many became actual active users ","bba5e4ff":"from the above analysis,\n- The ideal campaign for the most efficient results can be created with the following metrics :\n    - Gender : M | F (Both)\n    - Age : 30 - 49 (Including all four age bands)\n    - Interest1 : 16\n    - Interest2 : 19\n    - Interest3 : 20 \n    \n- We can try out different campaigns by slightly adjusting the interests. The list of possible interests are :\n    - Interest1 : 10 , 15 , 29\n    - Interest2 : 20\n    - Interest3 : 17 , 31 , 33\n \nwe can try differnt combinations of interests using the above lists and drive more efficient results ","8096a4b0":"# Preliminary data analysis","4ed4c7de":"This is a Simple Dataset from different facebook marketing campaigns.\n\nWe can identify ideal campaign metrics and parameters for efficient results\n\nSTEPS INVOLVED :\n- sectional data analysis for key features \n- Identifying the best parameters of each feature for efficient ads and High ROI\n- Final suggestions for the ideal campaign","138c6197":"- There are 15 columns and 1143 rows","22c166d9":"- From the above analysis it is very clear that campaign 916 is the most efficient and profitable campaign. \n- The cpc and cost per conversion is very low compared other campaigns.\n- If we scale up the campaign 916 to the budget of campaign 1178 we might drive 5 times more results of campaign 1178"}}