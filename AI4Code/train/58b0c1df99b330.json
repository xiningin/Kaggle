{"cell_type":{"e3a2d0a9":"code","8e6e4685":"code","11e6124c":"code","3a9d728f":"code","8ed5a5fb":"code","3d30f8f3":"code","e55098c4":"code","a5e96e7b":"code","62cb3843":"code","d151a4bc":"code","ade935af":"code","8ab327f1":"code","34821d55":"code","5609d6a2":"code","30c310fe":"code","33978c5b":"code","a6530787":"code","ee35f5d7":"code","5cfcf82f":"code","86db924a":"markdown","516e6468":"markdown","b6df4708":"markdown","c39c0a17":"markdown"},"source":{"e3a2d0a9":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport xgboost as xgb\nfrom sklearn.model_selection import train_test_split\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport random\nfrom sklearn.metrics import classification_report\n\npd.set_option('display.max_rows', None)\npd.set_option('display.max_columns', None)\npd.set_option('display.width', None)\npd.set_option('display.max_colwidth', None)","8e6e4685":"with open('..\/input\/home-credit-default-risk\/HomeCredit_columns_description.csv', 'r', newline='', encoding='ISO-8859-1') as csvfile:\n    df = pd.read_csv(csvfile)\ndf = df.set_index('Unnamed: 0')\napplication_columns = df[df['Table'] == 'application_{train|test}.csv']\nprint(len(application_columns.index))\napplication_columns","11e6124c":"bureau_columns = df[df['Table'] == 'bureau.csv']\nprint(len(bureau_columns.index))\nbureau_columns","3a9d728f":"bureau_balance_column = df[df['Table'] == 'bureau_balance.csv']\nprint(len(bureau_balance_column.index))\nbureau_balance_column","8ed5a5fb":"POS_CASH_balance_column = df[df['Table'] == 'POS_CASH_balance.csv']\nprint(len(POS_CASH_balance_column.index))\nPOS_CASH_balance_column","3d30f8f3":"credit_card_balance_column = df[df['Table'] == 'credit_card_balance.csv']\nprint(len(credit_card_balance_column.index))\ncredit_card_balance_column","e55098c4":"previous_application_column = df[df['Table'] == 'previous_application.csv']\nprint(len(previous_application_column.index))\nprevious_application_column","a5e96e7b":"installments_payments_column = df[df['Table'] == 'installments_payments.csv']\nprint(len(installments_payments_column.index))\ninstallments_payments_column","62cb3843":"df_app_train = pd.read_csv('..\/input\/home-credit-default-risk\/application_train.csv', index_col='SK_ID_CURR')","d151a4bc":"# df_app_train['SK_ID_CURR'].dtype == np.int64\ndf_app_train.head()","ade935af":"print('C\u00e1c c\u1ed9t categorical')\ncategorical_columns = list(set(df_app_train.columns) - set(df_app_train._get_numeric_data().columns))\nprint(categorical_columns)","8ab327f1":"x = [len(df_app_train[c].unique()) for c in categorical_columns]\nx = list(zip(x, categorical_columns))\nx = pd.DataFrame(data=sorted(x, reverse=True), columns=['Values', 'Name'])\n\nplt.figure(figsize=(16,10), dpi= 60)\nsns.barplot(data=x, x='Name', y='Values')\nplt.title('Th\u1ed1ng k\u00ea s\u1ed1 l\u01b0\u1ee3ng gi\u00e1 tr\u1ecb kh\u00e1c nhau c\u1ee7a c\u00e1c c\u1ed9t Categorical')\n\nplt.xticks(rotation=45)\nplt.show()","34821d55":"print(df_app_train.info())","5609d6a2":"numeric_data = set(df_app_train._get_numeric_data().columns)\nsimple_df = df_app_train[numeric_data]","30c310fe":"df_data = simple_df.drop('TARGET', axis=1)\nX = df_data.to_numpy()\ny = simple_df['TARGET'].to_numpy()\nX.shape, y.shape","33978c5b":"X_train, X_test, y_train, y_test = train_test_split(X, y, shuffle=True)\nX_train, X_val, y_train, y_val = train_test_split(X_train, y_train, shuffle=True)","a6530787":"clf = xgb.XGBClassifier(\n        n_estimators=5000,\n        max_depth=12,\n        learning_rate=0.02,\n        subsample=0.8,\n        colsample_bytree=0.4,\n        missing=-1,\n        eval_metric='auc',\n        # USE CPU\n#         nthread=4,\n        #tree_method='hist'\n        # USE GPU\n        tree_method='gpu_hist' \n    )        \nh = clf.fit(X_train, y_train, \n        eval_set=[(X_val,y_val)],\n        verbose=100, early_stopping_rounds=200)","ee35f5d7":"y_pred = h.predict(X_test)","5cfcf82f":"print(classification_report(y_test, y_pred))","86db924a":"# Ch\u1ea1y th\u1eed m\u00f4 h\u00ecnh \u0111\u01a1n gi\u1ea3n","516e6468":"# X\u1eed l\u00fd c\u00e1c c\u1ed9t Categorical","b6df4708":"# Missing Value","c39c0a17":"# Kh\u00e1m ph\u00e1 c\u00e1c c\u1ed9t c\u1ee7a d\u1eef li\u1ec7u"}}