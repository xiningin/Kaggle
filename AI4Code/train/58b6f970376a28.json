{"cell_type":{"7594821e":"code","7c751db0":"code","d85353b9":"code","b4e6a229":"code","f45c4d4c":"code","9fa28798":"code","51593dc2":"code","1c87564e":"code","3afd8d0e":"code","4524e072":"code","26ca0a83":"code","2e6be955":"code","7bd85001":"code","879251ec":"code","5d4b06ca":"code","26fbbf15":"code","9c57ed38":"code","aa0ab1bb":"code","0b7754e9":"code","e7d4954d":"code","9d60d312":"code","714bd6ff":"code","2fe08796":"code","7621884c":"code","25e1b414":"code","74ffda23":"code","042d4278":"code","4fc88883":"code","dd420c72":"code","5380d10e":"code","a5eb7b12":"code","f88b9e98":"code","a5c6079a":"markdown","d207daf5":"markdown","7f2dbfaf":"markdown","63f898db":"markdown","d45f1783":"markdown","db0b336a":"markdown","51a25c1c":"markdown","a61350a9":"markdown","115a62f1":"markdown"},"source":{"7594821e":"import warnings\nwarnings.filterwarnings('ignore', category=RuntimeWarning)\nwarnings.filterwarnings('ignore', category=FutureWarning)\nwarnings.filterwarnings('ignore', category=UserWarning)","7c751db0":"import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","d85353b9":"data = pd.read_csv('..\/input\/hotpotshanghai-cn\/hotpot.csv')\nprint(data.head()) # first 5 rows\ndata.shape[1] # how many columns \/ observations\ndata.shape[0] # how many rows\n# or len(data)","b4e6a229":"data.dtypes","f45c4d4c":"data = data.drop(columns = ['url']) # delete 'url'","9fa28798":"# Total missing values for each feature\ndata.isnull().any()","51593dc2":"plt.figure(num=3, figsize=(10, 5))\nbox_1, box_2, box_3, box_4 = data['avg_price'], data['taste'], data['environment'], data['services']\nlabels = [\"avg_price\",\"taste\",\"environment \",\" services\"]\n\nplt.boxplot([box_1, box_2, box_3, box_4], labels=labels,patch_artist = True, boxprops = {'color':'orangered','facecolor':'pink'})\nplt.show()","1c87564e":"plt.figure(num=3, figsize=(20, 3))\nplt.boxplot(data['avg_price'],vert=False,showmeans=True)\nmy_x_ticks = np.arange(0, 1000, 50)\nplt.xticks(my_x_ticks)\nplt.show()","3afd8d0e":"data.sort_values(by = 'avg_price', axis = 0, ascending = True)","4524e072":"data.avg_price[data.avg_price==1]=111\nfor i in range(749):\n    if(data.avg_price[i]>=10)&(data.avg_price[i]<=20):\n        data.avg_price[i]=data.avg_price[i]+100","26ca0a83":"data.sort_values(by = 'avg_price', axis = 0, ascending = True)","2e6be955":"plt.figure(num=3, figsize=(20, 3))\nplt.boxplot(data['comment'],vert=False,showmeans=True)\nmy_x_ticks = np.arange(0, 40000, 3000)\nplt.xticks(my_x_ticks)\nplt.show()","7bd85001":"data.sort_values(by = 'comment',axis = 0,ascending = True)","879251ec":"data[(data.comment>=10)&(data.comment<=50)].comment","5d4b06ca":"for i in range(749):\n    if(data.comment[i]>=10)&(data.comment[i]<=50):\n        data.comment[i]=data.comment[i]*100","26fbbf15":"data.sort_values(by = 'comment',axis = 0,ascending = True)","9c57ed38":"from matplotlib.font_manager import FontProperties\nmyfont= FontProperties(fname=r'..\/input\/chinesekaiti\/SIMKAI.TTF',size=16)#import Theme Fonts 'Microsoft-YaHei'\n#plt.title('\u4e2d\u6587\u6807\u9898',fontproperties=myfont,size=20) #test\n\nsns.set(font=myfont.get_name()) #setting font\nplt.rcParams['font.sans-serif'] = ['KaiTi']#configure the font parameters\nplt.rcParams['axes.unicode_minus'] = False","aa0ab1bb":"# plt.rcParams['font.sans-serif']=['SimHei'] # \u7528\u6765\u6b63\u5e38\u663e\u793a\u4e2d\u6587\u6807\u7b7e  \nimport matplotlib\nimport matplotlib.pyplot as plt\n# plt.rcParams['font.family'] = ['Droid Sans Fallback']\nmyfont = matplotlib.font_manager.FontProperties(family=\"Droid Sans Fallback\")#\u540c\u4e00\u76ee\u5f55\u4e0b\uff0c\u4e0d\u540c\u76ee\u5f55\u6539\u7528\u7edd\u5bf9\u8def\u5f84\n# myfont = matplotlib.font_manager.fontManager(fname=\"cmr10.ttf\")\nplt.rcParams['font.family'] = ['Times New Roman']\nplt.rcParams.update({'font.size': 8}) \nplt.rcParams['axes.unicode_minus']=False # \u7528\u6765\u6b63\u5e38\u663e\u793a\u8d1f\u53f7","0b7754e9":"#the number of each star ranking\nplt.figure(figsize=(10,6))\nsns.countplot(x = data['star'],order = ['\u4e94\u661f\u5546\u6237','\u51c6\u4e94\u661f\u5546\u6237','\u56db\u661f\u5546\u6237','\u51c6\u56db\u661f\u5546\u6237','\u4e09\u661f\u5546\u6237'])#\u8ba1\u6570\u56fe\nplt.show()","e7d4954d":"#comment\nplt.figure(figsize=(10,6))\nsns.distplot(x = data['comment'],kde=True,rug=True,color='g')#histgram with kernel density estimation and rug plot\nplt.show()","9d60d312":"#the relationship between the star ranking and the number of comments\nplt.figure(figsize=(10,6))\nsns.barplot(x = data[\"star\"],y=data[\"comment\"],order = ['\u4e94\u661f\u5546\u6237','\u51c6\u4e94\u661f\u5546\u6237','\u56db\u661f\u5546\u6237','\u51c6\u56db\u661f\u5546\u6237','\u4e09\u661f\u5546\u6237'])#histgram with error bar(\u8bef\u5dee\u68d2\u6ce8\u660e\u6240\u6d4b\u91cf\u6570\u636e\u7684\u4e0d\u786e\u5b9a\u5ea6\u7684\u5927\u5c0f\uff09\nplt.show()","714bd6ff":"#average price\nplt.figure(figsize=(10,6))\nsns.distplot(data[\"avg_price\"],kde=True,rug=True,color='m')\nplt.show()","2fe08796":"#the relationship between the star ranking and the average price\nplt.figure(figsize=(10,6))\nsns.violinplot(x = data[\"star\"],y=data[\"avg_price\"],palette=\"Set2\",order = ['\u4e94\u661f\u5546\u6237','\u51c6\u4e94\u661f\u5546\u6237','\u56db\u661f\u5546\u6237','\u51c6\u56db\u661f\u5546\u6237','\u4e09\u661f\u5546\u6237'])#violin diagram\nplt.show()","7621884c":"#the relationship between the average price and the number of comments\nplt.figure(figsize=(20,20))\nsns.jointplot(data[\"avg_price\"], data[\"comment\"], kind=\"hex\")  #composite scatter plot\nplt.show()","25e1b414":"!pip install pyecharts\nimport pyecharts.options as opts\nfrom pyecharts.charts import WordCloud","74ffda23":"!pip install wordcloud\n!pip install jieba","042d4278":"#\u7279\u8272\u83dc\nfrom wordcloud import WordCloud\nimport jieba\n\ndelicious = []\nfor i in range(750):\n    try:\n        recommend = jieba.lcut(data['recommend'][i])\n        while ',' in recommend:\n            recommend.remove(',')\n        while '\uff08' in recommend:\n            recommend.remove('\uff08')\n        while '\uff09' in recommend:\n            recommend.remove('\uff09')            \n        delicious.extend(recommend)\n    except:\n        continue\ndelicious = pd.value_counts(delicious)\n#wordcloud = WordCloud()\n#wordcloud.add(\"\", delicious.index, delicious.values, word_size_range=[12, 150], is_more_utils=True)\n#wordcloud.render(\"delicious.html\")\nstring = \" \".join(delicious.index)\nwc = WordCloud()\nwc.generate(string)\n\nplt.axis(\"off\")\nplt.imshow(wc)\nplt.show()","4fc88883":"#histgram of taste, environment, service\nfig, axes = plt.subplots(3,1,figsize=(10, 10)) \nsns.distplot(data['taste'], ax = axes[0],color = 'r', kde = True)      \nsns.distplot(data['environment'], ax = axes[1], color = 'y', kde=True)    \nsns.distplot(data['services'], ax = axes[2], color = 'g', kde=True)                     \nplt.show()  ","dd420c72":"#the relationship between the star ranking and taste|environment|service\nplt.figure(figsize=(8,8))\nsns.boxplot(data[\"star\"],data[\"taste\"],order = ['\u4e94\u661f\u5546\u6237','\u51c6\u4e94\u661f\u5546\u6237','\u56db\u661f\u5546\u6237','\u51c6\u56db\u661f\u5546\u6237','\u4e09\u661f\u5546\u6237'],palette=\"Set3\")\nsns.stripplot(x=\"star\", y=\"taste\", data=data, color='y',order = ['\u4e94\u661f\u5546\u6237','\u51c6\u4e94\u661f\u5546\u6237','\u56db\u661f\u5546\u6237','\u51c6\u56db\u661f\u5546\u6237','\u4e09\u661f\u5546\u6237'])\nplt.show() \n\nplt.figure(figsize=(8,8))\nsns.boxplot(data[\"star\"],data[\"environment\"],order = ['\u4e94\u661f\u5546\u6237','\u51c6\u4e94\u661f\u5546\u6237','\u56db\u661f\u5546\u6237','\u51c6\u56db\u661f\u5546\u6237','\u4e09\u661f\u5546\u6237'],palette=\"Set3\")\nsns.stripplot(x=\"star\", y=\"environment\", data=data, color='r',order = ['\u4e94\u661f\u5546\u6237','\u51c6\u4e94\u661f\u5546\u6237','\u56db\u661f\u5546\u6237','\u51c6\u56db\u661f\u5546\u6237','\u4e09\u661f\u5546\u6237'])\nplt.show() \n\nplt.figure(figsize=(8,8))\nsns.boxplot(data[\"star\"],data[\"services\"],order = ['\u4e94\u661f\u5546\u6237','\u51c6\u4e94\u661f\u5546\u6237','\u56db\u661f\u5546\u6237','\u51c6\u56db\u661f\u5546\u6237','\u4e09\u661f\u5546\u6237'],palette=\"Set3\")\nsns.stripplot(x=\"star\", y=\"services\", data=data, order = ['\u4e94\u661f\u5546\u6237','\u51c6\u4e94\u661f\u5546\u6237','\u56db\u661f\u5546\u6237','\u51c6\u56db\u661f\u5546\u6237','\u4e09\u661f\u5546\u6237'])\nplt.show() ","5380d10e":"#the relationship among taste|environment|service scores and the number of comments, and the average price\nplt.figure(figsize=(18,18))\ndf = data[['star','comment', 'avg_price','taste', 'environment', 'services']]\nsns.pairplot(df,hue='star',palette=\"husl\")\nplt.show() ","a5eb7b12":"#the relationship among taste, environment and service\nplt.figure(figsize=(20,20))\ndf = data[['star','taste', 'environment', 'services']]\nsns.pairplot(df,hue='star',palette=\"Set2\",kind=\"reg\")\nplt.show() ","f88b9e98":"from sklearn.cluster import KMeans\nfor i in range(749):\n    try:\n        if data.loc[i,'star'] == '\u4e94\u661f\u5546\u6237':\n             data.loc[i,'star_score'] = 5\n        elif data.loc[i,'star'] == '\u51c6\u4e94\u661f\u5546\u6237':\n            data.loc[i,'star_score'] = 4.5\n        elif data.loc[i,'star'] == '\u56db\u661f\u5546\u6237':\n            data.loc[i,'star_score'] = 4            \n        elif data.loc[i,'star'] == '\u51c6\u56db\u661f\u5546\u6237':\n            data.loc[i,'star_score'] = 3.5   \n        else:\n            data.loc[i,'star_score'] = 3\n    except:\n        continue\n\nestimator = KMeans(n_clusters=3)#\u6784\u9020\u805a\u7c7b\u5668\ndata_1 = data[['star_score','taste', 'environment', 'services']]\nestimator.fit(data_1)#\u805a\u7c7b\nlabel_pred = estimator.labels_ #\u83b7\u53d6\u805a\u7c7b\u6807\u7b7e\ncentroids = estimator.cluster_centers_ #\u83b7\u53d6\u805a\u7c7b\u4e2d\u5fc3\ninertia = estimator.inertia_ # \u83b7\u53d6\u805a\u7c7b\u51c6\u5219\u7684\u603b\u548c\n\n#\u7ed8\u5236k-means\u7ed3\u679c\nx0 = data_1[label_pred == 0]\nx1 = data_1[label_pred == 1]\nx2 = data_1[label_pred == 2]\nplt.figure(figsize=(8,8))\nplt.scatter(x0['taste'], x0['environment'], c = \"red\", marker='o', label='Highly Recommend')  \nplt.scatter(x1['taste'], x1['environment'], c = \"green\", marker='*', label='Not Recommended')  \nplt.scatter(x2['taste'], x2['environment'], c = \"blue\", marker='+', label='Generally Recommended')  \nplt.xlabel('taste')  \nplt.ylabel('environment')  \nplt.legend()\nplt.title('\u53e3\u5473\u4e0e\u73af\u5883')  \nplt.show()  \n\nplt.figure(figsize=(8,8))\nplt.scatter(x0['taste'], x0['services'], c = \"red\", marker='o', label='Generally Recommended')  \nplt.scatter(x1['taste'], x1['services'], c = \"green\", marker='*', label='Not Recommended')  \nplt.scatter(x2['taste'], x2['services'], c = \"blue\", marker='+', label='Highly Recommend')  \nplt.xlabel('taste')  \nplt.ylabel('services')  \nplt.legend()\nplt.title('\u53e3\u5473\u4e0e\u670d\u52a1')  \nplt.show() \n\nplt.figure(figsize=(8,8))\nplt.scatter(x0['environment'], x0['services'], c = \"red\", marker='o', label='Generally Recommended')  \nplt.scatter(x1['environment'], x1['services'], c = \"green\", marker='*', label='Not Recommended')  \nplt.scatter(x2['environment'], x2['services'], c = \"blue\", marker='+', label='Highly Recommend')  \nplt.xlabel('environment')  \nplt.ylabel('services')  \nplt.legend()\nplt.title('\u73af\u5883\u4e0e\u670d\u52a1')  \nplt.show() \n\nplt.figure(figsize=(8,8))\nplt.scatter(x0['star_score'], x0['services'], c = \"red\", marker='o', label='Generally Recommended')  \nplt.scatter(x1['star_score'], x1['services'], c = \"green\", marker='*', label='Not Recommended')  \nplt.scatter(x2['star_score'], x2['services'], c = \"blue\", marker='+', label='Highly Recommend')  \nplt.xlabel('star_score')  \nplt.ylabel('services')  \nplt.legend()\nplt.title('\u661f\u7ea7\u4e0e\u670d\u52a1')  \nplt.show() \n","a5c6079a":"#### I went back to the website and looked closely at restaurants with abnormal numbers. I found that the number above the upper whisker was fine, but the number below the lower whisker, 'avg_price' = 1 or < 20, had errors. The actual 'avg_price' equal 1 is 111, and 'avg_price'below 20 shuld be added 100.","d207daf5":"### Remove the \"url\" because it does not make sense for the analysis.","7f2dbfaf":"#### We can see that the number of comment for some restraunts with 4-5 stars raking are less than 50, which is not reasonable. After checking the website, 'comment'below 50 shuld be timed 100.","63f898db":"# Data Visualization","d45f1783":"# Dataset Description\n* Collected data of Hotpot restaurants in Shanghai,China from dianping.com\n* Contains 749 observations and 9 features, including<br>\n  >**name**: name of the restaurant (contains the address)<br>\n  **url**: the URL of the restaurant in the dianping website<br>\n  **star**: the overall rating of the restaurant out of 5<br>\n  **comment**: the number of comment<br>\n  **avg_price**: per capita consumption<br>\n  **taste**: the taste rating of the restaurant out of 10<br>\n  **environment**: the environment rating of the restaurant out of 10<br>\n  **services**: the services rating of the restaurant out of 10<br>\n  **recommend**: the popular menu of the restaurant\n","db0b336a":"### Check the outlier","51a25c1c":"### Dectect the missing values","a61350a9":"#### According to the picture above, we should focus on 'avg_price'.","115a62f1":"![hotpot.jpg](attachment:f257d148-ffce-408a-92b3-f8f0db2f9ba1.jpg)"}}