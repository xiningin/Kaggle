{"cell_type":{"69f67141":"code","e01be76a":"code","9aece8e2":"code","db6fbf41":"code","590134bc":"code","ca346d29":"code","8f655ea9":"code","67f188df":"code","b95b8ebb":"code","eb19c28d":"code","ee0b830f":"code","1379d325":"code","afc0a5ba":"code","ce88ca49":"code","e5020756":"code","727bd280":"code","6f3f483d":"code","72471ed7":"code","ad8b25b3":"code","2cbd5911":"code","decd0b19":"code","c01081d5":"code","5d2745ea":"markdown","b35524b8":"markdown","d283ffef":"markdown","a85d05d7":"markdown","b507fae2":"markdown","4a9f9f69":"markdown","3d94c479":"markdown","c1ccd721":"markdown","b1a00773":"markdown","5a621f92":"markdown","43846f45":"markdown","918d36d7":"markdown","8ca267cf":"markdown","73fa5ce1":"markdown","37c19c16":"markdown","d53354ee":"markdown","0bd71f53":"markdown","df3a0ba4":"markdown","c057c9e5":"markdown","c7c0640a":"markdown","01ebbd9a":"markdown","9598aedb":"markdown","81f0338f":"markdown","45bcaa79":"markdown","c67ed8fb":"markdown","a393af09":"markdown","d419b243":"markdown","b19664f8":"markdown","99e484d3":"markdown"},"source":{"69f67141":"import pandas as pd\nfrom textatistic import Textatistic\nimport spacy\nfrom spacy.lang.en.stop_words import STOP_WORDS\nfrom spacy import displacy\nfrom sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer\n\nimport string\nimport re","e01be76a":"# IMDB Movie Review\nimdb_movie_review = \"One of the other reviewers has mentioned that after watching just 1 Oz episode you'll be hooked. They are right, as this is exactly what happened with me.<br \/><br \/>The first thing that struck me about Oz was its brutality and unflinching scenes of violence, which set in right from the word GO. Trust me, this is not a show for the faint hearted or timid. This show pulls no punches with regards to drugs, sex or violence. Its is hardcore, in the classic use of the word.<br \/><br \/>It is called OZ as that is the nickname given to the Oswald Maximum Security State Penitentary. It focuses mainly on Emerald City, an experimental section of the prison where all the cells have glass fronts and face inwards, so privacy is not high on the agenda. Em City is home to many..Aryans, Muslims, gangstas, Latinos, Christians, Italians, Irish and more....so scuffles, death stares, dodgy dealings and shady agreements are never far away.<br \/><br \/>I would say the main appeal of the show is due to the fact that it goes where other shows wouldn't dare. Forget pretty pictures painted for mainstream audiences, forget charm, forget romance...OZ doesn't mess around. The first episode I ever saw struck me as so nasty it was surreal, I couldn't say I was ready for it, but as I watched more, I developed a taste for Oz, and got accustomed to the high levels of graphic violence. Not just violence, but injustice (crooked guards who'll be sold out for a nickel, inmates who'll kill on order and get away with it, well mannered, middle class inmates being turned into prison bitches due to their lack of street skills or prison experience) Watching Oz, you may become comfortable with what is uncomfortable viewing....thats if you can get in touch with your darker side.\"\n\n# Tweet\ntweet = \"As requested by PM Modi, lets make these promises as #IndiaFightsCOVID19, In battle against #COVID19, lets #TakeThePledge to take care of the elderly people at home. @PPBhaishri takes the pledge\"","9aece8e2":"num_char = len(imdb_movie_review)\nprint(num_char)","db6fbf41":"# Split the string into words\nwords = imdb_movie_review.split()\n\n# Print the list containing words\nprint(words)\n\n# print the length of words\nprint(len(words))","590134bc":"# avg_word_len\ndef avg_word_len(text):\n    # split the string into words\n    words = text.split()\n    \n    # compute the length each word and store in a seperated list\n    word_len = [len(word) for word in words]\n    \n    # compute avg_word_len\n    avg_word_len = sum(word_len) \/ len(word_len)\n    \n    return avg_word_len\n\n\n# call the avg_word_len and pass imdb_movie review and print\nprint(avg_word_len(imdb_movie_review))","ca346d29":"# Return the numbe of Hashtags\n\ndef hashtag_count(text):\n    # split the  string into words\n    words = text.split()\n    \n    # create a list of hashtags\n    hashtags = [word for word in words if word.startswith('#')]\n    \n    # print the hashtags\n    print(hashtags)\n    \n    return len(hashtags)\n\n# Call the hashtag_count function and pass the argument tweet\nhashtag_count(tweet)","8f655ea9":"# create remove_spaces function and pass text as an argument and remove white spaces and return\ndef remove_spaces(text):\n    return \" \".join(text.split())\n\n# Call the above function and print\nprint(remove_spaces(\"This   notebook       is all       about the feature             engineering for text                 data.\"))","67f188df":"def remove_punctuation(text):\n    text = \"\".join(ch for ch in text if not ch in string.punctuation)\n    return text\n\n# Call the above function and print\nremove_punctuation('@Welcome to the Kaggle and ------Good Bye!')","b95b8ebb":"def remove_num(text):\n    text = filter(str.isalpha, text)\n    \n    return \"\".join(text)\n\n#  Call the above function and print\nremove_num('!1k2;a3gg23456le3?')","eb19c28d":"def remove_emoji(text):\n    emoji_pattern = re.compile(\"[\"\n                           u\"\\U0001F600-\\U0001F64F\"  # emoticons\n                           u\"\\U0001F300-\\U0001F5FF\"  # symbols & pictographs\n                           u\"\\U0001F680-\\U0001F6FF\"  # transport & map symbols\n                           u\"\\U0001F1E0-\\U0001F1FF\"  # flags (iOS)\n                           u\"\\U00002702-\\U000027B0\"\n                           u\"\\U000024C2-\\U0001F251\"\n                           \"]+\", flags=re.UNICODE)\n    return emoji_pattern.sub(r'', text)\n#  Call the above function and print\nprint(remove_emoji(\"Happy\ud83d\ude02\"))","ee0b830f":"def remove_stop_word(text):\n    text = \" \".join(word for word in text.lower().split() if not word in  STOP_WORDS)\n    return text\n\n#  Call the above function and print\nprint(remove_stop_word(\"I was very active in Pubg mobile\"))","1379d325":"# Load Spacy model\nnlp = spacy.load('en_core_web_lg')\n\ndef tokenizing_string(text):\n    doc = nlp(text)\n    \n    return [token.text for token in doc]\n\nprint(tokenizing_string(\"Hello! I'm here and I'm doing coding on Kaggle\"))","afc0a5ba":"def lemmatizing_string(text):\n    doc = nlp(text)\n    \n    return [token.lemma_ for token in doc]\n\nprint(lemmatizing_string(\"Hello! I'm here and I'm doing coding on Kaggle\"))","ce88ca49":"fake = \"Donald Trump just couldn t wish all Americans a Happy New Year and leave it at that. Instead, he had to give a shout out to his enemies, haters and the very dishonest fake news media.\"\n\n# Generate redability score\nreadability_scores = Textatistic(fake).scores\n\nprint('Flesch Score: ', readability_scores['flesch_score'])\nprint('Gunning fog index score: ', readability_scores['gunningfog_score'])","e5020756":"def pos_tagging(text):\n    doc = nlp(text)\n    \n    return [(token.text, token.pos_) for token in doc]\n\npd.DataFrame(pos_tagging(\"Hello! How are you doing?\"), columns=['words', 'pos tagging'])","727bd280":"def get_ner(text):\n    doc = nlp(text)\n    \n    return [(ent.text, ent.label_) for ent in doc.ents]\n\nget_ner(\"John Deo is a software engineer working at Kaggle. He lives in New York\")","6f3f483d":"# Visualize NER\ndoc = nlp(\"John Deo is a software engineer working at Kaggle. He lives in New York\")\n\ndisplacy.serve(doc, style=\"ent\")","72471ed7":"corpus = [\n     'This is the first document.',\n     'This document is the second document.',\n     'And this is the third one.',\n     'Is this the first document?',\n ]\n\nvectorizer = CountVectorizer()\n# fit and transform corpus\ncount_vectorizer = vectorizer.fit_transform(corpus)\n\n# Create Dataframe with the feature name\npd.DataFrame(count_vectorizer.toarray(), columns=vectorizer.get_feature_names())","ad8b25b3":"vectorizer = CountVectorizer(analyzer='word', ngram_range=(2, 2))\n\nn_gram_vectorizer = vectorizer.fit_transform(corpus)\n\n# Create Dataframe with the feature name\npd.DataFrame(n_gram_vectorizer.toarray(), columns=vectorizer.get_feature_names())","2cbd5911":"vectorizer = TfidfVectorizer()\n\ntfidf = vectorizer.fit_transform(corpus)\n\n# Create Dataframe with the feature name\npd.DataFrame(tfidf.toarray(), columns=vectorizer.get_feature_names())","decd0b19":"doc1 = nlp(\"I love to code in Jupyter Notebook.\")\ndoc2 = nlp(\"I hate to code in Jupyter Notebook\")\n\ndoc1.similarity(doc2)","c01081d5":"doc1 = nlp(\"I am using Kaggle.\")\ndoc2 = nlp(\"I am using Kaggle.\")\n\ndoc1.similarity(doc2)","5d2745ea":"# Word Count\n\nEvery word is seperated by space.","b35524b8":"# NER\n\n1. An NER is anything that can be denoted with proper name or a pronoun.\n2. Identify and classify named entity into pre-defined category.\n\nNER(Named Entity Recognization) used in:\n* Efficient search algorithm.\n* QnA\n* News Article classfier\n* Customer service","d283ffef":"# Library and Data","a85d05d7":"* Flesch Score is 82.815 shows 7th Grade Redabilabity\n* Gunning fog index score is 10.533333333333333 show High School Readability.","b507fae2":"Create a avg_word_len feature to the existance dataframe\n\n```python\ndf['avg_word_len'] = df['review'].apply(avg_word_len)\n```","4a9f9f69":"Create a hashtag_count feature to the existance dataframe\n\n```python\ndf['hashtag_count'] = df['tweet'].apply(hashtag_count) # comment print statement from above function\n```\nsame script for the mension count use **'@'** intread of **'#'**","3d94c479":"3. Weighting Mechanism -->  Tf-IDF(Term Frequency - Inverse document frequence):\n ","c1ccd721":"6. Tokenization\n    * Process of string into its consituent string.\n    * Tokens may be sentence, words or punctuation and is specific to a perticular language.","b1a00773":"Add **num_char** feature to the existing imdb movie review dataframe\n```python\ndf['num_char'] = df['review'].apply(len)\n```","5a621f92":"2. Remove Punctuations","43846f45":"Know more about the spaCy [pos_tagging](https:\/\/spacy.io\/usage\/linguistic-features)","918d36d7":"# Part-of-speech tagging","8ca267cf":"# Hashtag and mension","73fa5ce1":"4. Remove emoji","37c19c16":"# Character Count\n\nThis feature count each character including white spaces.","d53354ee":"# Readability Test\nWhat eduaction level level required to read perticular passage.\n\n**Overview**\n1. Determine Readabilty of an english passage\n2. Scale ranging from primary school to graduate level\n3. Used in fake news and opinion spam detection\n\nGet the scale range:\n[Flesch reading ease](http:\/\/en.wikipedia.org\/wiki\/Flesch%E2%80%93Kincaid_readability_tests)\n[Gunning Fog index](https:\/\/en.wikipedia.org\/wiki\/Gunning_fog_index)","0bd71f53":"5. Remove stop words","df3a0ba4":"<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n  <h3 class=\"list-group-item list-group-item-action danger active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\">Notebook Content!<\/h3>\n   <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#Library-and-Data\" role=\"tab\" aria-controls=\"profile\">Library and Data<span class=\"badge badge-primary badge-pill\">1<\/span><\/a>\n  <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#Character-Count\" role=\"tab\" aria-controls=\"profile\">Character Count<span class=\"badge badge-primary badge-pill\">2<\/span><\/a>\n  <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#Word-Count\" role=\"tab\" aria-controls=\"messages\">Word Count<span class=\"badge badge-primary badge-pill\">3<\/span><\/a>\n   <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#Average-Word-Length\" role=\"tab\" aria-controls=\"messages\">Average Word Length<span class=\"badge badge-primary badge-pill\">4<\/span><\/a>\n    <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#Hashtag-and-mension\" role=\"tab\" aria-controls=\"messages\">Hashtag and mension<span class=\"badge badge-primary badge-pill\">5<\/span><\/a>\n    <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#Text-Cleaning\" role=\"tab\" aria-controls=\"messages\">Text Cleaning<span class=\"badge badge-primary badge-pill\">6<\/span><\/a>\n    <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#Readability-Test\" role=\"tab\" aria-controls=\"messages\">Redability Test<span class=\"badge badge-primary badge-pill\">7<\/span><\/a>\n    <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#Part-of-speech-tagging\" role=\"tab\" aria-controls=\"messages\">Part-of-speech tagging<span class=\"badge badge-primary badge-pill\">8<\/span><\/a>\n        <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#NER\" role=\"tab\" aria-controls=\"messages\">NER<span class=\"badge badge-primary badge-pill\">9<\/span><\/a>\n        <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#Vectorization\" role=\"tab\" aria-controls=\"messages\">Vectorization<span class=\"badge badge-primary badge-pill\">10<\/span><\/a>\n     <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#Document-similarity\" role=\"tab\" aria-controls=\"messages\">Document similarity<span class=\"badge badge-primary badge-pill\">11<\/span><\/a>\n\n<br>\n<div class=\"progress\">\n  <div class=\"progress-bar progress-bar-striped progress-bar-animated\" role=\"progressbar\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 100%\"><\/div>\n<\/div>\n    \nCreate Table of content like this using [Bootstap](https:\/\/getbootstrap.com\/docs\/4.4\/components\/list-group\/#active-items)","c057c9e5":"Add another feature word_count.<br>\nLet's create a function and pass string as an arguments and return number of words in it.\n\n```python\n# Function that return the number of words\ndef word_count(text):\n    # split the string into words\n    words = text.split()\n    \n    # return the number of word string\n    return len(words)\n\n# Create a new feature to the existance dataframe\ndf['word_count'] = df['review'].apply(word_count)\n```","c7c0640a":"# Average Word Length\nLet's create a function that take string as an argument and return the average length of words","01ebbd9a":"1. Remove White Space","9598aedb":"Know more about name entity label [NER](https:\/\/spacy.io\/usage\/linguistic-features#named-entities)","81f0338f":"3. Remove Numerical value","45bcaa79":"2. n-Gram\n\nApplications:\n* Sentence completion\n* Spelling correction\n* Machine Translation correction","c67ed8fb":"# Vectorization\n\n    * Process of converting text into vector\n    * Extract word token\n    * compute frequency of word token\n\n1. Bag of words","a393af09":"# Text Cleaning","d419b243":"7. Lemmatization\n    * It is a process of converting a word lowerbase form or lemma.    ","b19664f8":"* I --> Pronoun\n* 'm -> be\n* coding --> code\n* doing --> do","99e484d3":"# Document similarity\n\nspaCy using cosine similarity behind this.\n\nCheck out to know more about [cosine-similarity](https:\/\/en.wikipedia.org\/wiki\/Cosine_similarity)"}}