{"cell_type":{"6d6be6d0":"code","08966f49":"code","ee3b579c":"code","68e0971d":"code","930134fd":"code","6fb5057e":"code","97d98c86":"code","985e58ff":"code","1719b060":"code","a2f38e19":"code","eb566c6b":"code","26d59b5d":"code","97e94932":"code","d5126120":"code","b8520cc3":"code","44c92ac6":"code","b317c983":"code","70bc8cc7":"code","83ce04e4":"code","5b544edc":"code","e5a943e8":"code","785f0003":"code","dee1f2c0":"code","be0d6e5d":"code","821f1c86":"code","c82fd5bc":"markdown","9e202d6c":"markdown","15888b0a":"markdown","497e00ee":"markdown","fb562d17":"markdown","032f1a62":"markdown","1da7abf6":"markdown","1d8f81f1":"markdown","572dfbf2":"markdown","ed883818":"markdown","1744ede9":"markdown","48be6c5f":"markdown","a6dd4360":"markdown","3626a308":"markdown","bd33b4ac":"markdown","fec169dd":"markdown","607ad69e":"markdown"},"source":{"6d6be6d0":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport plotly.figure_factory as ff\nimport plotly.graph_objects as go\nimport plotly.express as px","08966f49":"df = pd.read_csv(\"\/kaggle\/input\/cars93\/Cars93.csv\")\ndf.head()","ee3b579c":"df.drop(\"Unnamed: 0\", axis = 1, inplace = True)\nprint(\"Size of the dataset\", df.shape)","68e0971d":"fig = px.box(df, y=\"Price\")\nfig['layout'].update(title={\"text\" : 'Box Plot of Price','y':0.95,'x':0.5,'xanchor': 'center','yanchor': 'top'})\nfig.show()","930134fd":"fig = px.box(df, x = \"AirBags\", y=\"Price\")\nfig['layout'].update(title={\"text\" : 'Box Plot of Price across AirBags types','y':0.95,'x':0.5,'xanchor': 'center','yanchor': 'top'})\nfig.show()","6fb5057e":"fig = px.histogram(df, x=\"Horsepower\")\nfig['layout'].update(title={\"text\" : 'Histogram of Horsepower','y':0.95,'x':0.5,'xanchor': 'center','yanchor': 'top'})\nfig.show()","97d98c86":"hist_data = [df[df[\"AirBags\"] == \"Driver only\"][\"Horsepower\"], df[df[\"AirBags\"] == \"Driver & Passenger\"][\"Horsepower\"]]\ngroup_labels = [\"Driver only\", \"Driver & Passenger\"]\nfig = ff.create_distplot(hist_data, group_labels,show_hist=False,show_rug=False)\nfig['layout'].update(title={\"text\" : 'Distribution of Horsepower based on AirBags','y':0.95,'x':0.5,'xanchor': 'center','yanchor': 'top'}, xaxis_title=\"Horsepower\",yaxis_title=\"probability density\")\nfig.show()","985e58ff":"dfg = df.groupby('Type')['Type'].agg(Frequency='count').reset_index()\ndfg","1719b060":"fig = px.bar(dfg, x=\"Type\", y = \"Frequency\")\nfig['layout'].update(title={\"text\" : 'Barplot of car Type','y':0.95,'x':0.5,'xanchor': 'center','yanchor': 'top'},xaxis_title=\"Type\",yaxis_title=\"count\")\nfig.show()","a2f38e19":"df_mpg_mean = df.groupby('Type').mean().reset_index()\ndf_mpg_mean","eb566c6b":"fig = px.bar(df_mpg_mean, x=\"Type\", y = \"MPG.city\")\nfig['layout'].update(title={\"text\" : 'MPG city mean across various car types','y':0.95,'x':0.5,'xanchor': 'center','yanchor': 'top'},xaxis_title=\"Type\",yaxis_title=\"MPG.city\")\nfig.show()","26d59b5d":"fig = px.pie(dfg, values='Frequency', names='Type')\nfig['layout'].update(title={\"text\" : 'Pie Chart of car Type','y':0.95,'x':0.5,'xanchor': 'center','yanchor': 'top'})\nfig.show()","97e94932":"fig = px.scatter(df, x=\"Horsepower\", y=\"MPG.city\")\nfig['layout'].update(title={\"text\" : 'Scatter plot of Horsepower vs. MPG.city','y':0.95,'x':0.5,'xanchor': 'center','yanchor': 'top'})\nfig.show()","d5126120":"fig = px.scatter_3d(df, x='Horsepower', y='MPG.city', z='Price')\nfig['layout'].update(title={\"text\" : '3D Scatter plot','y':0.95,'x':0.5,'xanchor': 'center','yanchor': 'top'})\nfig.show()","b8520cc3":"fig = px.scatter_matrix(df[[\"Horsepower\", \"MPG.city\", \"Price\", \"Rear.seat.room\", \"Luggage.room\"]])\nfig['layout'].update(title={\"text\" : 'Scatter plot Matrix','y':0.95,'x':0.5,'xanchor': 'center','yanchor': 'top'})\nfig.show()","44c92ac6":"df_ordered = df.sort_values(by = \"Horsepower\") \ndf_ordered.head()","b317c983":"fig = px.line(df_ordered, x=\"Horsepower\", y=\"MPG.city\")\nfig['layout'].update(title={\"text\" : 'Line Chart of Horsepower vs. MPG.city','y':0.95,'x':0.5,'xanchor': 'center','yanchor': 'top'})\nfig.show()","70bc8cc7":"df_corr = np.round(df.corr().values,2)\ndf_corr","83ce04e4":"names = df.corr().columns.tolist()\nnames","5b544edc":"fig = ff.create_annotated_heatmap(df_corr, x = names, y = names, colorscale='Viridis')\nfig['layout'].update(title={\"text\" : 'Correlation Heatmap','y':0.98,'x':0.5,'xanchor': 'center','yanchor': 'top'})\nfig.show()","e5a943e8":"fig = px.violin(df, y=\"Price\")\nfig['layout'].update(title={\"text\" : 'Violin Plot of Price ','y':0.95,'x':0.5,'xanchor': 'center','yanchor': 'top'})\nfig.show()","785f0003":"fig = px.violin(df, y=\"Price\", box = True, points='all')\nfig['layout'].update(title={\"text\" : 'Violin Plot of Price with box and all points','y':0.95,'x':0.5,'xanchor': 'center','yanchor': 'top'})\nfig.show()","dee1f2c0":"# !pip install wordcloud\nfrom wordcloud import WordCloud","be0d6e5d":"text = \"Wikipedia was launched on January 15, 2001, by Jimmy Wales and Larry Sanger.[10] Sanger coined its name,[11][12] as a portmanteau of wiki[notes 3] and 'encyclopedia'. Initially an English-language encyclopedia, versions in other languages were quickly developed. With 5,748,461 articles,[notes 4] the English Wikipedia is the largest of the more than 290 Wikipedia encyclopedias. Overall, Wikipedia comprises more than 40 million articles in 301 different languages[14] and by February 2014 it had reached 18 billion page views and nearly 500 million unique visitors per month.[15] In 2005, Nature published a peer review comparing 42 science articles from Encyclopadia Britannica and Wikipedia and found that Wikipedia's level of accuracy approached that of Britannica.[16] Time magazine stated that the open-door policy of allowing anyone to edit had made Wikipedia the biggest and possibly the best encyclopedia in the world and it was testament to the vision of Jimmy Wales.[17] Wikipedia has been criticized for exhibiting systemic bias, for presenting a mixture of 'truths, half truths, and some falsehoods',[18] and for being subject to manipulation and spin in controversial topics.[19] In 2017, Facebook announced that it would help readers detect fake news by suitable links to Wikipedia articles. YouTube announced a similar plan in 2018.\" \n\nwordcloud = WordCloud (\n                    background_color = 'white',\n                    width = 512,\n                    height = 384\n                        ).generate(text)","821f1c86":"fig = px.imshow(wordcloud)\nfig['layout'].update(title={\"text\" : 'WordCloud','y':0.95,'x':0.5,'xanchor': 'center','yanchor': 'top'})\nfig.show()","c82fd5bc":"### 5. Pie Chart","9e202d6c":"### 7. Line Chart","15888b0a":"### 1. Box Plot","497e00ee":"### 4. Bar Chart","fb562d17":"### 8. Heatmap","032f1a62":"### 9. Violin Plot","1da7abf6":"#### b. Violin Plot with box and all points","1d8f81f1":"### 6. Scatter Plot","572dfbf2":"#### c. Scatter Plot Matrix","ed883818":"## Notebook - Table of Contents\n\n [**Importing the necessary libraries & loading the data**](#Importing-the-necessary-libraries-&-loading-the-data)    \n1. [**Box Plot**](#1.-Box-Plot) \n2. [**Histogram**](#2.-Histogram) \n3. [**Density Plot**](#3.-Density-Plot)  \n4. [**Bar Chart**](#4.-Bar-Chart)\n5. [**Pie Chart**](#5.-Pie-Chart)\n6. [**Scatter Plot**](#6.-Scatter-Plot)\n7. [**Line Chart**](#7.-Line-Chart)\n8. [**Heatmap**](#8.-HeatMap)\n9. [**Violin Plot**](#9.-Violin-Plot)\n10. [**WordCloud**](#10.-WordCloud)  ","1744ede9":"#### b. 3D Scatter Plot","48be6c5f":"#### b. Box Plot of a numeric feature across various labels of a categorical feature","a6dd4360":"#### b. Bar Chart with mean of a column on y-axis","3626a308":"#### Importing the necessary libraries & loading the data","bd33b4ac":"### 10. WordCloud","fec169dd":"### 2. Histogram","607ad69e":"### 3. Density Plot"}}