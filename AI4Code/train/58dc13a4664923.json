{"cell_type":{"adc8c228":"code","341615e3":"code","7415358d":"code","f1408b07":"code","b00b4b06":"code","49fa733b":"code","843eedab":"code","54eb9f46":"code","7485f054":"code","6bce07fe":"code","5cb0dc1c":"code","b06d3b83":"code","c6529864":"code","5b1986ee":"code","5aad18f3":"code","b76439df":"code","433ffddd":"code","c8ce0d13":"code","2c7689db":"code","20639ac9":"code","af7a5ec7":"code","1c7b7222":"code","d4ce11ae":"code","357d779d":"code","14cb3fe9":"code","2c0b2303":"code","6f7f4d1a":"code","0c4896bf":"code","fe4fe189":"code","a7e10f48":"code","ea05a2a1":"code","196b7814":"code","3b19c78c":"code","4163a3ad":"code","62e8b0a3":"code","573ca644":"code","9d9b8ad8":"code","1f0cfe21":"code","37413d76":"markdown","a3f3f251":"markdown","d2df815f":"markdown","2007a606":"markdown","2d24fae4":"markdown","9b13cfde":"markdown","d2f24b20":"markdown","fe57d888":"markdown","922cb420":"markdown","a538087b":"markdown","f56400f1":"markdown","a73dfb45":"markdown","8f1bec9b":"markdown","04eb1d96":"markdown","a2db1560":"markdown","25c62da1":"markdown","4665f027":"markdown","df296c54":"markdown","016b6019":"markdown","a3453985":"markdown","c4d5cfc4":"markdown","9e878b31":"markdown","7b106b01":"markdown","d433ffc9":"markdown","659e2e4a":"markdown","54848dd6":"markdown","b190e736":"markdown","995cae68":"markdown","460dd07e":"markdown","45a403bb":"markdown","8ed9788f":"markdown","588bba13":"markdown","70f56ae3":"markdown","9dc5caaf":"markdown"},"source":{"adc8c228":"import seaborn as sns\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nimport sklearn\r\nimport pandas as pd\r\nfrom sklearn.metrics import accuracy_score\r\nfrom sklearn.model_selection import cross_val_score\r\nfrom sklearn.neighbors import KNeighborsClassifier\r\n\r\nfrom sklearn.metrics import accuracy_score","341615e3":"treino = pd.read_csv(\"\/kaggle\/input\/adult-pmr3508\/train_data.csv\",na_values='?')\r\nteste = pd.read_csv(\"\/kaggle\/input\/adult-pmr3508\/test_data.csv\",na_values='?')","7415358d":"\r\ntreino.head()","f1408b07":"treino.columns","b00b4b06":"treino.drop('education',inplace=True,axis=1)\r\nteste.drop('education',inplace=True,axis=1)","49fa733b":"treino.isna().sum()","843eedab":"treino.fillna(treino.mode().iloc[0], inplace=True)\r\nteste.fillna(teste.mode().iloc[0], inplace=True)","54eb9f46":"treino.isna().sum()","7485f054":"treino['net.capital'] = treino['capital.gain'] - treino['capital.loss']\r\nteste['net.capital'] = teste['capital.gain'] - teste['capital.loss']","6bce07fe":"sns.heatmap(treino.corr(),annot=True)","5cb0dc1c":"treino.dtypes","b06d3b83":"sns.countplot(x='workclass',hue='income',data=treino).tick_params(axis='x',rotation=90)","c6529864":"sns.countplot(x='marital.status',hue='income',data=treino).tick_params(axis='x',rotation=90)","5b1986ee":"sns.countplot(x='occupation',hue='income',data=treino).tick_params(axis='x',rotation=90)","5aad18f3":"sns.countplot(x='relationship',hue='income',data=treino).tick_params(axis='x',rotation=90)","b76439df":"sns.countplot(x='sex',hue='income',data=treino)","433ffddd":"sns.countplot(x='education.num',hue='income',data=treino).tick_params(axis='x',rotation=90)","c8ce0d13":"sns.countplot(x='race',hue='income',data=treino).tick_params(axis='x',rotation=90)","2c7689db":"sns.countplot(x='native.country',hue='income', data=treino).tick_params(axis='x',rotation=90)","20639ac9":"sns.countplot(x='native.country',hue='income', data=treino[treino['native.country']!='United-States']).tick_params(axis='x',rotation=90)","af7a5ec7":"treino['loss.bin'] = [1 if i!=0 else 0 for i in treino['capital.loss']]\r\ntreino['gain.bin'] = [1 if i!=0 else 0 for i in treino['capital.gain']]\r\n\r\n\r\nsns.heatmap(treino.corr(),annot=True)","1c7b7222":"sns.barplot(x='income',y='capital.gain',data=treino)\r\nmaximo_ganho = treino[treino['capital.gain']==treino['capital.gain'].max()][['capital.gain']]\r\nganho_nulo = treino[treino['capital.gain']==0][['capital.gain']]\r\nloss_nulo = treino[treino['capital.loss']==0][['capital.loss']]\r\nmaximo_valor = treino['capital.gain'].max()\r\nprint(f'valores de ganho m\u00e1ximo ({maximo_valor}):{maximo_ganho.count()[0]}\\nvalores de ganho nulo:{ganho_nulo.count()[0]}\\nvalores de loss nulo:{loss_nulo.count()[0]}')","d4ce11ae":"def best_k(input,output,max=30):\r\n    melhor_k = 1\r\n    melhor_score = 0\r\n    for i in range(1,max+1):\r\n        knn=KNeighborsClassifier(i)\r\n        scores = cross_val_score(knn, InputTreino, OutputTreino, cv=10)\r\n        avg = np.average(scores)\r\n        if avg > melhor_score:\r\n            melhor_score = avg\r\n            melhor_k = i\r\n        print(f'fim do teste de k={i}')\r\n    \r\n    return melhor_score, melhor_k","357d779d":"InputTreino = treino[['age','education.num','hours.per.week','gain.bin','loss.bin']]\r\nOutputTreino = treino['income']\r\n\r\nscore, k = best_k(InputTreino,OutputTreino)\r\n\r\nprint(f'o melhor k obtido foi {k} com score {score} para cross validation')","14cb3fe9":"InputTreino = treino[['age','education.num','hours.per.week','capital.gain','capital.loss']]\r\nOutputTreino = treino['income']\r\n\r\nscore, k = best_k(InputTreino,OutputTreino)\r\n\r\nprint(f'o melhor k obtido foi {k} com score {score} para cross validation')","2c0b2303":"InputTreino = treino[['age','education.num','hours.per.week','net.capital']]\r\nOutputTreino = treino['income']\r\n\r\nscore, k = best_k(InputTreino,OutputTreino)\r\n\r\nprint(f'o melhor k obtido foi {k} com score {score} para cross validation')","6f7f4d1a":"def transforma(elemento,bib):\r\n    if elemento in bib:\r\n        return bib[elemento]\r\n    else: return np.nan\r\n\r\ndef get_value(serie, bib):\r\n    nova_serie = serie.apply(transforma, args=(bib,))\r\n    return nova_serie\r\n\r\ndef get_bib(serie):\r\n    lista = serie.unique()\r\n    bib = {i:j for i,j in zip(lista,range(len(lista)))}\r\n    return bib","0c4896bf":"treino.dtypes\r\n\r\nwork = get_bib(treino['workclass'])\r\nmarital = get_bib(treino['marital.status'])\r\noccupation = get_bib(treino['occupation'])\r\nrelationship = get_bib(treino['relationship'])\r\nrace = get_bib(treino['race'])\r\nsex = get_bib(treino['sex'])\r\ncountry = get_bib(treino['native.country'])\r\n\r\ntreino['workclass.bin'] = get_value(treino['workclass'],work)\r\ntreino['marital.bin'] = get_value(treino['marital.status'],marital)\r\ntreino['occupation.bin'] = get_value(treino['occupation'],occupation)\r\ntreino['relationship.bin'] = get_value(treino['relationship'],relationship)\r\ntreino['race.bin'] = get_value(treino['race'],race)\r\ntreino['sex.bin'] = get_value(treino['sex'],sex)\r\ntreino['country.bin'] = get_value(treino['native.country'],country)\r\n\r\nteste['workclass.bin'] = get_value(teste['workclass'],work)\r\nteste['marital.bin'] = get_value(teste['marital.status'],marital)\r\nteste['occupation.bin'] = get_value(teste['occupation'],occupation)\r\nteste['relationship.bin'] = get_value(teste['relationship'],relationship)\r\nteste['race.bin'] = get_value(teste['race'],race)\r\nteste['sex.bin'] = get_value(teste['sex'],sex)\r\nteste['country.bin'] = get_value(teste['native.country'],country)","fe4fe189":"InputTreinonum = treino[['age','education.num','hours.per.week','gain.bin',\r\n        'loss.bin','workclass.bin','marital.bin','occupation.bin','relationship.bin','race.bin','sex.bin','country.bin']]\r\nOutputTreinonum = treino['income']\r\n\r\nscore, k = best_k(InputTreinonum,OutputTreinonum)\r\n\r\nprint(f'o melhor k obtido foi {k} com score {score} para cross validation')","a7e10f48":"InputTreinonum = treino[['age','education.num','hours.per.week','capital.gain',\r\n        'capital.loss','workclass.bin','marital.bin','occupation.bin','relationship.bin','race.bin','sex.bin','country.bin']]\r\nOutputTreinonum = treino['income']\r\n\r\nscore, k = best_k(InputTreinonum,OutputTreinonum)\r\n\r\nprint(f'o melhor k obtido foi {k} com score {score} para cross validation')","ea05a2a1":"InputTreinonum = treino[['age','education.num','hours.per.week',\r\n        'net.capital','workclass.bin','marital.bin','occupation.bin','relationship.bin','race.bin','sex.bin','country.bin']]\r\nOutputTreinonum = treino['income']\r\n\r\nscore, k = best_k(InputTreinonum,OutputTreinonum)\r\n\r\nprint(f'o melhor k obtido foi {k} com score {score} para cross validation')","196b7814":"def transforma2(elemento,bib):\r\n    if elemento == bib:\r\n        return 1\r\n    else: return 0\r\n\r\ndef get_value2(data, serie_name):\r\n    lista = data[serie_name].unique()\r\n    for i in lista:\r\n        data[i] = data[serie_name].apply(transforma2,args=(i,))\r\n\r\n","3b19c78c":"get_value2(treino,'workclass')\r\nget_value2(treino,'marital.status')\r\nget_value2(treino,'occupation')\r\nget_value2(treino,'relationship')\r\nget_value2(treino,'race')\r\nget_value2(treino,'sex')\r\nget_value2(treino,'native.country')","4163a3ad":"new = treino.copy()","62e8b0a3":"new.drop('fnlwgt',inplace=True,axis=1)\r\nnew.drop('country.bin',inplace=True,axis=1)\r\nnew.drop('sex.bin',inplace=True,axis=1)\r\nnew.drop('race.bin',inplace=True,axis=1)\r\nnew.drop('relationship.bin',inplace=True,axis=1)\r\nnew.drop('occupation.bin',inplace=True,axis=1)\r\nnew.drop('marital.bin',inplace=True,axis=1)\r\nnew.drop('workclass.bin',inplace=True,axis=1)\r\nnew.drop('gain.bin',inplace=True,axis=1)\r\nnew.drop('loss.bin',inplace=True,axis=1)\r\nnew.drop('native.country',inplace=True,axis=1)\r\nnew.drop('capital.loss',inplace=True,axis=1)\r\nnew.drop('capital.gain',inplace=True,axis=1)\r\nnew.drop('sex',inplace=True,axis=1)\r\nnew.drop('race',inplace=True,axis=1)\r\nnew.drop('relationship',inplace=True,axis=1)\r\nnew.drop('occupation',inplace=True,axis=1)\r\nnew.drop('marital.status',inplace=True,axis=1)\r\n","573ca644":"InputTreinocomp = new[1:-1]\r\nOutputTreinocomp = new['income']\r\n\r\nscore, k = best_k(InputTreinonum,OutputTreinonum)\r\n\r\nprint(f'o melhor k obtido foi {k} com score {score} para cross validation')","9d9b8ad8":"InputTreinonum = treino[['age','education.num','hours.per.week',\r\n        'net.capital','workclass.bin','marital.bin','occupation.bin','relationship.bin','race.bin','sex.bin','country.bin']]\r\nOutputTreinonum = treino['income']\r\nInputtest = teste[['age','education.num','hours.per.week',\r\n        'net.capital','workclass.bin','marital.bin','occupation.bin','relationship.bin','race.bin','sex.bin','country.bin']]\r\n\r\nknn=KNeighborsClassifier(22)\r\nknn.fit(InputTreinonum,OutputTreinonum)\r\n\r\npredtarget = knn.predict(Inputtest)\r\n\r\n","1f0cfe21":"result = pd.DataFrame()\r\nresult['Id']= teste['Id']\r\nresult['income']=predtarget\r\nresult.to_csv('results.csv',index=False)","37413d76":"Vamos verificar a correla\u00e7\u00e3o das variaveis presentes do dataset de treino, entretanto n\u00e3o conseguimos verificar correla\u00e7\u00e3o das variaveis n\u00e3o numericas","a3f3f251":"embora as cores estejam trocadas, podemos observar que em alguns paises, india e japao, a proporcao de pessoas que ganha mais de 50K \u00e9 relativamente alta, mas em varios outros a proporcao \u00e9 mais favoravel para menos que 50K","d2df815f":"Com base nos resultados anteriores foi esolhido utilizar a vers\u00e3o onde se tem as trocas de variaveis n\u00e3o numericas por variaveis numericas simples, com diferentes valores numericos para diferentes valores n\u00e3o numericos, e utilizando a diferen\u00e7a entre capital.gain e capital.loss","2007a606":"vemos que a maioria das pessoas que ganha mais qu 50K \u00e9 marido, mas isso se da ao fato de existir muito mais homem que mulher, uma vez que a esposa apresenta uma taxa muito maior de pessoas que ganham mais de 50K, mas o fato \u00e9 escondido devido \u00e0 minoria de mulheres no dataset","2d24fae4":"A partir daqui iremos transformar os elementos n\u00e3o numericos em elementos numericos.\r\naqui substituimos cada elemento n\u00e3o numerico por um numero equivalente, aplicando a mesma transforma\u00e7\u00e3o tanto nos dados de teste quanto nos de treino, para que o mesmo valor seja obtido em ambos os casos","9b13cfde":"agora faremos o mesmo procedimento feito anteriormente para obter o melhor k e o mlhor score de crossvalidation, para a mesma situa\u00e7\u00e3o anterior.\r\n\r\nos dados de capital gain e loss em formato binario;\r\nos dados de capital gain e loss em formato bruto;\r\nos dados de capital gain e loss em formato de diferen\u00e7a entre eles, em apenas uma variavel.","d2f24b20":"Com isso obtemos que todos os resultados foram similares, com o melhor resultado utilizando k como 22 e um score de cross validation de 0.8368857493857493","fe57d888":"Por fim iremos realizar um para verificar se colocando valores numericos para as variaveis nao numericas apresenta um grande impacto no resultado final ou nao\r\n\r\npara isso iremos substituir cada variavel n\u00e3o numerica por uma serie de novas variaveis que serao binarias\r\n\r\npor exemplo:\r\n\r\nao inves de substituir os valores da coluna race seguindo um dicionario do tipo {white:0,black:1,asian:3...} iremos criar uma coluna para cada op\u00e7ao, uma coluna para white, uma para black, uma para asian e assim por diante, e atribuiremos o valor 1 para a coluna na qual ele pertence e 0 nas demais. desse modo n\u00e3o daremos diferentes pesos para algo que n\u00e3o existe peso","922cb420":"Com isso obtemos que a melhor situa\u00e7\u00e3o \u00e9 a utilizando apenas o net.capital utilizando k como 22 e um score de cross validation de 0.8368857493857493","a538087b":"O primeiro passo \u00e9 realizar os imports necess\u00e1rios para o c\u00f3digo","f56400f1":"N\u00e3o podemos verificar muito a partir dos dados de sexo da pessoa, temos dados em maioria masculino e ambos apresentam mais ou menos o mesmo comportamento","a73dfb45":"com isso verificamos que todos os dados faltantes foram preenchidos","8f1bec9b":"Fazemos a leitura dos 2 datasets que utilizaremos, uma para treino e outro para testar o knn\r\nvendo os dados presentes no dataset colocamos que os valores marcados com ? s\u00e3o os missing values do dataset","04eb1d96":"podemos verificar que as pessoas que ganham menos de 50K estao bem distribuidas pela sua ocupa\u00e7\u00e3o, mas as pessoas que ganham mais de 50K focam mais em Exec-managerial e Prof-speciality","a2db1560":"fun\u00e7\u00e3o de obter, para determinada condi\u00e7\u00e3o, o melhor k para o algoritimo do KNN","25c62da1":"como temos bastante dados podemos substituir os dados faltantes pela moda, o elemento mais presente da lista. n\u00e3o \u00e9 possivel utilizar a moda pois os elementos n\u00e3o s\u00e3o numericos.","4665f027":"Dados em sua maioria de pessoas brancas, mas em geral seguem o mesmo padrao","df296c54":"Iremos dar drop em uma coluna: education.\r\na coluna education pode ser dropada pois existe uma outra coluna education.num que possui os mesmos dados, mas em formato numerico, o que \u00e9 mais conveniente para o algoritimo de knn e n\u00e3o \u00e9 efetivo utilizar o mesmo dado duas vezes.","016b6019":"Com isso obtemos que a melhor situa\u00e7\u00e3o \u00e9 utilizando k como 2 e um score de cross validation de 0.8368857493857493","a3453985":"# PMR 3508 knn for adult dataset\r\n","c4d5cfc4":"Esse gr\u00e1fico apresenta uma forte rela\u00e7\u00e3o entre income e capital.gain, mas como dito anteriormente muitos dados de capital.gain s\u00e3o faltantes, atrapalhando a analise dos dados. entretanto quando informado esse valor pode ser muito valorizado","9e878b31":"vamos verificar a presen\u00e7a de elementos faltantes","7b106b01":"A partir daqui iniciaremos a analise dos KNN por meio de crossvalidation","d433ffc9":"a maioria das pessoas que recebem mais que 50K s\u00e3o pessoas casadas","659e2e4a":"vamos verificar os tipos de dados presentes no dataset\r\ndependendo do tipo de dataset podemos fazer diferentes tipos de vizualizacao de dados","54848dd6":"Ver um preview dos dados, eles s\u00e3o similares, o tipo e o formato, para ambos os dados de treino e de teste","b190e736":"Os tr\u00eas primeiros conjuntos de dados utilizam apenas os valores num\u00e9ricos originalmente existentes na tabela\r\n\r\nA diferen\u00e7a entre ele \u00e9 a utiliza\u00e7\u00e3o dos dados de capital gain e loss\r\n\r\no primeiro utiliza os dados binarios, onde verifica apenas se foi informado ou nao o dado\r\no seundo utiliza o valor bruto do dado\r\no terceiro utiliza a diferenca entre capital.gain e capital.loss","995cae68":"como os estados unidos \u00e9 grande maioria os dados de outros paises fica invisivel nesse grafico, por isso fiz um outro grafico sem os estados unidos","460dd07e":"Podemos observar dois padroes nesses dados, primeiro que a grande maioria das pessoas se encontra com um grau de escolaridade classificado como 9 e 10, com um relativa quantidade em 13. Outro fator \u00e9 que conforme o grau de escolaridade aumenta, maior a proporcao de pessoas que ganham mais de 50K","45a403bb":"criamos uma coluna que representa a diferenca entre o ganho de capital e a perda de capital, chamada net.capital","8ed9788f":"Podemos ver que uma grande quantidade de dados possui valores de capital.loss e capital.gain nulos.\r\nser\u00e1 analisado uma abordagem mais binaria de analise de dados de ganho e perda de capital, onde ser\u00e1 visto se foi informado ou n\u00e3o o valor da variavel","588bba13":"podemos verificar que a maioria das pessoas s\u00e3o trabalhadores privados","70f56ae3":"obtemos os nomes das colunas do dataset para utilizar nas vizualiza\u00e7\u00f5es e no knn","9dc5caaf":"vemos que temos variaveis do tipo int64, que s\u00e3o numeros inteiros, e variaveis object, que s\u00e3o, nesses casos, variaveis de texto\r\npara as variaveis de texto podemos realizar um contplot dos dados, que ira contar a ocorrencia de determinado dado dentro do dataset"}}