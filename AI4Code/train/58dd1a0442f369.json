{"cell_type":{"87c48ac3":"code","d6574b49":"code","23a03577":"code","11e2cdfd":"code","1590dc3e":"code","e2788f50":"code","cf0527b7":"code","5609bfdf":"code","233ebf71":"code","4790d260":"code","9f958a57":"code","4bcf79c9":"code","65dac413":"code","4b96b774":"code","a3da501e":"code","849f8052":"code","f1bdb01b":"code","eefc7177":"code","cd780cec":"code","9cd46c7f":"code","7161e0f5":"code","ca5c0037":"code","a22bc0ed":"code","ec77a679":"code","53d63c86":"code","0a015d8e":"code","fa9990de":"code","d59bfefb":"code","5000b1e5":"code","189a4088":"code","4df94e6e":"code","03d2f858":"code","dd66a2b4":"code","27d01abb":"markdown","8f2db188":"markdown","44e5776f":"markdown","aee2174e":"markdown","83dee62d":"markdown","15e96dc7":"markdown","5f3b2c07":"markdown","505b8aa8":"markdown","77141d56":"markdown","4cd3d60f":"markdown","61c08284":"markdown","86fcf95a":"markdown","84fd0c11":"markdown","4342b537":"markdown","4032809c":"markdown","2c205870":"markdown","3b62446a":"markdown","aee2eb6f":"markdown","484c4891":"markdown","9bafe8d9":"markdown","4de65126":"markdown","c813fab2":"markdown","5d6b3f77":"markdown","47d05a76":"markdown","facdf36a":"markdown","36c6906a":"markdown","c675b6de":"markdown","447bd528":"markdown"},"source":{"87c48ac3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n%matplotlib inline\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","d6574b49":"_2015 = pd.read_csv(\"..\/input\/2015.csv\")\n_2016 = pd.read_csv(\"..\/input\/2016.csv\")\n_2017 = pd.read_csv(\"..\/input\/2017.csv\")","23a03577":"_2015.head()","11e2cdfd":"#_2015.Region.value_counts(dropna=False)\n#_2015[\"Happiness Score\"].value_counts(dropna=False)","1590dc3e":"region = list(_2015.Region.unique())\nscore = []\ngdp = []\nfor i in region:\n    x = _2015[_2015.Region == i]\n    score.append(x[\"Happiness Score\"].mean())\n    gdp.append(x[\"Economy (GDP per Capita)\"].mean())\n\nd1 = pd.DataFrame({\"Region\":region,\"Score\":score})\nd1.sort_values(\"Score\",ascending=True,inplace=True)\n\nd2=pd.DataFrame({\"Region\":region, \"GDP\":gdp})\nd2.sort_values(\"GDP\",inplace=True,ascending=False)","e2788f50":"#visuzalition\nplt.figure(figsize=(10,7))\nsns.set(style=\"white\")\nsns.barplot(x=\"Score\", y=\"Region\", data=d1, palette=\"colorblind\")\n#sns.despine(left = True, right = True)\nplt.xlabel(\"Happiness Score\", fontsize=18, color=\"blue\")\nplt.ylabel(\"Region\", fontsize=18, color=\"blue\")\nplt.title(\"Happiness Score by Region in 2015\", fontsize=18, color=\"red\")\nplt.show()","cf0527b7":"region = list(_2015.Region.unique())\neconomy = []\nfamily = []\nhealth = []\nfreedom = []\ntrust = []\n\nfor each in region:\n    x = _2015[_2015.Region == each]\n    economy.append(x[\"Economy (GDP per Capita)\"].mean())\n    family.append(x[\"Family\"].mean())\n    health.append(x[\"Health (Life Expectancy)\"].mean())\n    freedom.append(x[\"Freedom\"].mean())\n    trust.append(x[\"Trust (Government Corruption)\"].mean())\n\n#visuzalition\n\nplt.figure(figsize = (10,5))\nsns.barplot(x = economy, y = region, color = \"pink\", label = \"Economy\")\nsns.barplot(x = family, y = region, color = \"red\", label = \"Family\")\nsns.barplot(x = health, y = region, color = \"blue\", label = \"Health\")\nsns.barplot(x = freedom, y = region, color = \"orange\", label = \"Freedom\")\nsns.barplot(x = trust, y = region, color = \"purple\", label = \"Trust\")\nplt.legend()\nplt.show()","5609bfdf":"f,ax = plt.subplots(figsize=(15,6))\nsns.heatmap(_2015.corr(), annot=True, ax=ax, lw=.7, linecolor=\"black\", fmt=\".2f\")\nplt.show()","233ebf71":"sns.clustermap(_2015.corr())\nplt.show()","4790d260":"d1.Score = d1.Score\/d1.Score.max()\nd2.GDP = d2.GDP\/d2.GDP.max()\ndata = pd.concat([d1,d2.GDP],axis=1)\ndata.sort_values(\"Score\",inplace=True)\ndata.head()","9f958a57":"f,ax = plt.subplots(figsize=(15,5))\nsns.pointplot(x=\"Region\", y=\"Score\",data=data, color=\"c\")\nsns.pointplot(x=\"Region\", y=\"GDP\",data=data, color=\"m\")\nplt.xticks(rotation=90)\nplt.text(0.05,1,\"Score\", color=\"c\", fontsize=18, style=\"italic\")\nplt.text(0.05,0.9,\"GDP\", color=\"m\", fontsize=18, style=\"italic\")\nplt.xlabel(\"Region\", fontsize=15, color=\"blue\")\nplt.ylabel(\"Values\", fontsize=15, color=\"blue\")\nplt.title(\"Happiness Score-Economy(GDP per Capita)\", fontsize=20, color=\"red\")\nplt.grid()\nplt.show()","4bcf79c9":"df = pd.pivot_table(_2015, index=\"Region\", values=[\"Happiness Score\",\"Freedom\"])\ndf[\"Happiness Score\"] = df[\"Happiness Score\"]\/max(df[\"Happiness Score\"])  #normalize\ndf[\"Freedom\"] = df[\"Freedom\"]\/max(df[\"Freedom\"]) #normalize","65dac413":"sns.jointplot(x = \"Happiness Score\", y=\"Freedom\", data=df, kind=\"kde\", size=7, color=\"green\", space=0, ratio=7)\nplt.show()","4b96b774":"plt.figure(figsize=(12,7))\nsns.countplot(y = \"Region\", data = _2015, palette = \"rainbow\",)\nplt.ylabel(\"\")\nplt.xlabel(\"\")\nplt.title(\"Number of region in data\", size=20, color = \"purple\")\nplt.show()","a3da501e":"plt.figure(figsize=(15,7))\nsns.boxplot(y=\"Freedom\", x=\"Region\", data=_2015, width=0.5, fliersize=7, whis=0.5, linewidth=3)\nplt.ylabel(\"Freedom\", size=18, color=\"blue\")\nplt.xlabel(\"\")\nplt.title(\"Freedom by Region\", size=18, color=\"red\")\nplt.xticks(rotation=45)\nplt.tight_layout\nplt.show()","849f8052":"plt.figure(figsize=(20,8))\nsns.violinplot(x=\"Region\", y=\"Trust (Government Corruption)\", data=_2015, palette=\"Set1\", inner=\"points\", scale=\"count\")\nplt.xticks(rotation=90)\nplt.title(\"Percentage of Trust by Region\", size=18, color=\"red\")\nplt.xlabel(\"Region\", size=18, color=\"blue\")\nplt.ylabel(\"Trust (Government Corruption)\", size=18,  color=\"blue\")\nplt.show()","f1bdb01b":"df1 = pd.pivot_table(_2015, index=\"Region\", values =[\"Happiness Score\",\"Family\"])\ndf1[\"Happiness Score\"] = df1[\"Happiness Score\"]\/max(df1[\"Happiness Score\"])\ndf1[\"Family\"] = df1[\"Family\"]\/max(df1[\"Family\"])\n\nsns.kdeplot(df1[\"Happiness Score\"], df1[\"Family\"] , shade=True, cut=2, cmap=\"Reds\", cbar=True)\nplt.xlabel(\"Happiness Score\")\nplt.ylabel(\"Family\")\nplt.title(\"Happiness Score-Family(Social support)\", size=18, color=\"blue\")\nplt.show()","eefc7177":"sns.lmplot(y = \"Happiness Score\", x=\"Economy (GDP per Capita)\", data=_2015, size=5)\nplt.show()","cd780cec":"plt.figure(figsize=(10,5))\nsns.stripplot(x=\"Region\", y=\"Happiness Rank\", data=_2015, size=6, jitter=True)\nplt.xticks(rotation=90)\nplt.show()","9cd46c7f":"plt.figure(figsize=(10,5))\nsns.swarmplot(x=\"Region\", y=\"Happiness Rank\", data=_2015, size=6)\nplt.xticks(rotation=90)\nplt.show()","7161e0f5":"plt.figure(figsize=(12,5))\nsns.violinplot(x=\"Region\", y=\"Happiness Rank\", data=_2015,color=\"gray\",width=5)\nsns.swarmplot(x=\"Region\", y=\"Happiness Rank\", data=_2015, size=5, color=\"red\")\nplt.xticks(rotation=90)\nplt.show()","ca5c0037":"df = _2015.iloc[:,[1,3,5,7,8]]\ndf.head()","a22bc0ed":"sns.pairplot(df, hue=\"Region\",size=3.5)\nplt.show()","ec77a679":"m = sns.PairGrid(_2015.iloc[:,[2,5,9]],size=3)\nm.map_diag(sns.distplot)\nm.map_lower(plt.scatter)\nm.map_upper(sns.kdeplot)\nplt.show()","53d63c86":"sns.rugplot(df[\"Happiness Score\"],height=0.5)\nplt.grid(True)\nplt.xlabel(\"Happiness Score\")\nsns.kdeplot(df[\"Happiness Score\"], color=\"orange\")\nplt.show()","0a015d8e":"labels = _2015.Region.value_counts().index\ncolors = [\"blue\",\"yellow\",\"orange\",\"red\",\"lavender\",\"gray\",\"green\",\"brown\",\"purple\",\"pink\"]\nexplode = [0,0,0,0,0,0,0,0,0,0]\nsizes = _2015.Region.value_counts().values\n\nplt.figure(figsize=(8,8))\nplt.pie(sizes,explode=explode, labels=labels, colors=colors, autopct=\"%.2f%%\")\nplt.title(\"Number of Region\")\nplt.show()","fa9990de":"turkey15 = _2015[_2015.Country == \"Turkey\"].iloc[:,[2,3,5,6,7,8,9]]\nturkey16 = _2016[_2016.Country == \"Turkey\"].iloc[:,[2,3,6,7,8,9,10]]\nturkey17 = _2017[_2017.Country == \"Turkey\"].iloc[:,[1,2,5,6,7,8,10]]","d59bfefb":"turkey17.rename(columns={\"Happiness.Rank\":\"Happiness Rank\",\"Happiness.Score\":\"Happiness Score\",\n                         \"Economy..GDP.per.Capita.\":\"Economy (GDP per Capita)\",\n                         \"Trust..Government.Corruption.\":\"Trust (Government Corruption)\",\n                         \"Health..Life.Expectancy.\":\"Health (Life Expectancy)\"}, inplace=True)","5000b1e5":"turkey = turkey15.append(turkey16)\nturkey3year = turkey.append(turkey17,ignore_index=True)\nturkey3year[\"Year\"] = [\"2015\",\"2016\",\"2017\"]","189a4088":"plt.figure(figsize=(10,8))\nsns.heatmap(turkey3year.corr(), annot=True, fmt=\".2f\", linewidth=2, linecolor=\"red\")\nplt.title(\"Correlation\", size=18, color=\"purple\")\nplt.show()","4df94e6e":"#sns.swarmplot(x = \"Happiness Score\", y=\"Economy (GDP per Capita)\", data=turkey3year, hue=\"Year\",size=8)\nplt.figure(figsize=(12,5))\nsns.lmplot(x = \"Happiness Score\", y=\"Economy (GDP per Capita)\", data=turkey3year, hue=\"Year\", size=7)\nplt.title(\"Happiness Score-Economy\", size=18, color=\"purple\")\nplt.grid(True)\nplt.show()","03d2f858":"plt.figure(figsize=(12,5))\nsns.pointplot(x = \"Happiness Score\", y=\"Freedom\", data=turkey3year, hue=\"Year\")\nplt.title(\"Happiness Score-Freedom\", size=18, color=\"purple\")\nplt.grid(True)\nplt.show()","dd66a2b4":"sns.pairplot(turkey3year.iloc[:,[1,3,4,7]], hue=\"Year\",size=2)\nplt.show()","27d01abb":"## <a id=\"1\" > Bar Plot <a>","8f2db188":"## <a id=\"11\"> Pair  and Rug Plot <a>","44e5776f":"#### Freedom percentage by region with boxplot.","aee2174e":"#### Clustermap","83dee62d":"## <a id=\"5\"> Box Plot <a>","15e96dc7":"#### PairGrid","5f3b2c07":"#### What is diffirent from stripplot?\n##### The points are adjusted (only along the categorical axis) so that they don\u2019t overlap.","505b8aa8":"## <a id=\"2\"> Heatmap <a>","77141d56":" #### \u0130n this plot we can see most happy region is \"Australia and New Zealand\" and \"North America\" in 2015.","4cd3d60f":"## <a id=\"7\"> Kde Plot <a>","61c08284":"#### Swarm Plot","86fcf95a":"## <a id=\"6\"> Violin Plot <a>","84fd0c11":"#### Strip Plot","4342b537":"#### We can find correlation between two feature with this plot.\n#### There is positive correlation between happiness score and freedom. ","4032809c":"### Happiness Report For Turkey in 3 Year(2015-2016-2017)","2c205870":" ## <a id=\"13\"> BONUS <a>","3b62446a":"#### Which feature most affect to happiness score by region?","aee2eb6f":"## <a id=\"12\"> Pie Plot <a>","484c4891":"#### We can see correlation between features in data with heatmap.","9bafe8d9":"## <a id=\"3\"> Joint Plot <a>","4de65126":"#### This plot is saying us \"If you have money you are happy\":)","c813fab2":"## <a id=\"2\"> Point Plot <a>","5d6b3f77":"## <a id=\"4\"> Count Plot <a>","47d05a76":" 1. [Bar Plot ](#1)\n 2. [Heatmap ](#2)\n 3. [Point Plot ](#3)\n 4. [Joint Plot ](#4)\n 5. [Count Plot ](#5)\n 6. [Box Plot ](#6)\n 7. [Violin Plot ](#7)\n 8. [Kde Plot ](#8)\n 9. [Lm Plot ](#9)\n 10. [Strip and Swarm Plot ](#10)\n 11. [Pair  and Rug Plot ](#11)\n 12. [Pie Plot ](#12)\n 13. [Bonus ](#13)","facdf36a":"## <a id=\"10\"> Strip and Swarm Plot <a>","36c6906a":"###  Happiness rate for each of region","c675b6de":"## <a id=\"9\"> Lm Plot <a>","447bd528":"#### \u0130n this plot we can see distribution of the values within features."}}