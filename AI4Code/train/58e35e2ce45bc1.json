{"cell_type":{"497abe75":"code","9641c647":"code","d8508e5f":"code","f7c8e4d3":"code","2d6e034a":"code","3dbb9240":"code","e55e4468":"code","82b93e99":"code","1a51f7ca":"code","4c1cae0f":"code","a182bac1":"code","91f6cdb3":"code","493982ba":"code","7559297a":"code","525c223d":"code","038441da":"code","a460f4c9":"code","4076c3d6":"code","27adf459":"code","31213619":"code","e2c7b38c":"markdown"},"source":{"497abe75":"import pandas as pd\nnetflix=pd.read_csv('..\/input\/tesla-share\/TSLA (1).csv')\nnetflix.head()","9641c647":"netflix=netflix[['Date','Close']]\nnetflix.head()","d8508e5f":"netflix.info()","f7c8e4d3":"!pip install pycaret-ts-alpha","2d6e034a":"from pycaret.internal.pycaret_experiment import TimeSeriesExperiment\nfrom sktime.utils.plotting import plot_series","3dbb9240":"netflix.index = pd.DatetimeIndex(netflix[\"Date\"])\nnetflix.drop([\"Date\"],axis=1,inplace=True)\nnetflix.head()","e55e4468":"netflix = netflix.asfreq('d')\nnetflix.index","82b93e99":"netflix.head()","1a51f7ca":"netflix=netflix.fillna(method='ffill')\nnetflix.head()","4c1cae0f":"data=netflix.Close\ndata","a182bac1":"import matplotlib.pyplot as plt\n_ =plot_series(data)\nplt.xticks(rotation=90)\nplt.grid()","91f6cdb3":"exp = TimeSeriesExperiment()\nexp.setup(data=data,session_id=42,fh=365)","493982ba":"## Create a model manually\nmodel = exp.create_model(\"llar_cds_dt\")\nmodel","7559297a":"y_train = exp.get_config(\"y_train\")\ny_train[:5]","525c223d":"y_predict = exp.predict_model(model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","038441da":"tuned_model = exp.tune_model(model,optimize = 'R2')\ntuned_model","a460f4c9":"exp.predict_model(tuned_model)","4076c3d6":"y_predict = exp.predict_model(tuned_model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","27adf459":"# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n_=plot_series(data, y_pred_future, labels=['All', 'Future Pred (Unknown)'])\nplt.grid()","31213619":"# Test Set Predictions\ny_pred = exp.predict_model(tuned_model)\n\n# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n\n# Plot Results\ny_train = exp.get_config(\"y_train\")\n_ = plot_series(data, y_train, y_pred, y_pred_future, labels=['All', 'Train', 'Test Predictions', 'Future Pred (Unknown)'])\nplt.grid()","e2c7b38c":"# "}}