{"cell_type":{"41f641c0":"code","b6d87009":"code","bf7e9d82":"code","f87e607b":"code","3f0e72ae":"code","a2933c9d":"code","008d3bb0":"code","c2a0c8fd":"code","2aa976a3":"code","0fe5da4d":"code","ef36a467":"code","a46c19a7":"code","ca878c16":"code","b137a30f":"code","8e629d03":"code","da51cfa1":"code","ed5fcfce":"code","44d3af69":"code","63fb0d08":"code","93f19243":"code","708f5ca5":"code","01b34160":"code","ec8eef9c":"code","c12da8e2":"code","5aa26b1d":"markdown","14541b94":"markdown","3cd8196a":"markdown","5ccc73f3":"markdown","a61c860c":"markdown","4bf7e2b4":"markdown","5f767d01":"markdown","b5684a1a":"markdown","aab1267d":"markdown","68e3fbe1":"markdown","0b037c45":"markdown","f81c3ca6":"markdown","cd5ad0ab":"markdown","7618b736":"markdown","6a6bd258":"markdown","1be8f9a2":"markdown","e3414709":"markdown","929b132c":"markdown","cfc3bf21":"markdown","e222adef":"markdown"},"source":{"41f641c0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b6d87009":"import pandas as pd\nimport numpy as np\n\nimport seaborn as sns\nsns.set_context('notebook')\nsns.set_style('white')\nsns.set_palette('dark')\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n","bf7e9d82":"months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]\nheader = ['Order ID', 'Product', 'Quantity Ordered', 'Price Each', 'Order Date', 'Purchase Address']\ndfs=[]","f87e607b":"for i in months:\n    temp = pd.read_csv('..\/input\/sales-product-data\/Sales_{}_2019.csv'.format(i), index_col = None, header = None, skiprows =1 )\n    dfs.append(temp)\ndf = pd.concat(dfs, axis=0, ignore_index=True)\ndf.dropna(inplace =True)\ndf.columns= header\ndf.drop(df.loc[df['Order ID'] =='Order ID'].index.tolist(), axis=0,inplace=True)","3f0e72ae":"df.info()","a2933c9d":"df.dtypes","008d3bb0":"from datetime import datetime\ndf['Order Date'] = pd.to_datetime(df['Order Date'], errors='coerce')\ndf['Purchase Address'] = df['Purchase Address'].astype(str)\ndf['Quantity Ordered'] = df['Quantity Ordered'].astype(int)\ndf['Price Each'] = df['Price Each'].astype(float)","c2a0c8fd":"df['City'] = df['Purchase Address'].str.split(',').str[1].astype(str)","2aa976a3":"df['Total Price'] = df['Quantity Ordered']* df['Price Each']","0fe5da4d":"df.head()","ef36a467":"items = df.groupby('Product').agg({'Quantity Ordered' : 'sum', 'Price Each' : 'mean', 'Total Price' : 'sum'})\nitems","a46c19a7":"ax = items['Quantity Ordered'].plot.bar(figsize = (10,5))\n","ca878c16":"ax = items['Total Price'].plot.bar(figsize = (10,5))\n","b137a30f":"df['Month'] = df['Order Date'].dt.month\nmonthlySales = df.groupby('Month').agg({'Total Price' : 'sum'})\nmonthlySales.plot.bar(figsize=(10,5))\n","8e629d03":"itemsMonthly = df.groupby(['Product','Month']).agg({'Quantity Ordered' : 'sum', 'Total Price':'sum'}).reset_index()\nitemsMonthly","da51cfa1":"itemsMonthly.loc[itemsMonthly['Product'] == 'Macbook Pro Laptop'].plot(x='Month',y='Quantity Ordered')","ed5fcfce":"itemsMonthly.loc[itemsMonthly['Product'] == 'ThinkPad Laptop'].plot(x='Month',y='Quantity Ordered')","44d3af69":"itemsMonthly.loc[itemsMonthly['Product'].str.contains('Batteries')].groupby('Month').sum()['Quantity Ordered'].plot()","63fb0d08":"itemsMonthly.loc[itemsMonthly['Product'].str.contains('LG')].groupby('Month').sum()['Quantity Ordered'].plot()","93f19243":"fig, ax = plt.subplots()\nfig.set_size_inches(11,8)\nsns.lineplot(data = itemsMonthly, x='Month',y='Quantity Ordered', hue='Product',ax=ax)","708f5ca5":"citySales = df.groupby(['City']).agg({'Quantity Ordered' : 'sum',  'Total Price' : 'sum'}).reset_index()\ncitySales.dtypes","01b34160":"!pip install geocoder\n!pip install geopy\n\nimport folium\nfrom folium import plugins\nfrom folium.plugins import HeatMap\nimport ipywidgets\n#from ipyleaflet import Map, Marker, MarkerCluster, Heatmap\nimport geocoder\nimport geopy\n\n\nmp = folium.Map(location=[41,-99], zoom_start=3.5)\n\nloc =[]\n\ncitylist = df.City.unique().tolist()\nfor i in citylist:\n    geo = geocoder.arcgis(i)\n    val = citySales.loc[citySales['City'] ==i]['Total Price'].item()\n    loc.append([geo.lat, geo.lng,val ])\n    folium.Marker([geo.lat,geo.lng],\n                  opacity=0,\n                  tooltip = ('<body>City: {} <br> Sales: {}M<\/body>'.format(i, round(val\/1000000,3)))).add_to(mp)\n    \nHeatMap(loc).add_to(mp)\nfolium.LayerControl().add_to(mp)\n\n\nmp","ec8eef9c":"orders = df.groupby(['Order ID']).agg({'Total Price':'sum'}).sort_values('Total Price').reset_index()\norders.hist(bins=100, log=True)","c12da8e2":"orders['Total Price'].describe()","5aa26b1d":"data set obtained form : https:\/\/www.kaggle.com\/knightbearr\/sales-product-data","14541b94":"#### Compare sales of all prodcuts based on month of sale","3cd8196a":"from these statistics, it can be seen that most sales are of low amounts, where as there are only few sales with high amounts.","5ccc73f3":"#### Items sold the most ( quanatity)","a61c860c":"### Analyze by order value","4bf7e2b4":"From the data, it can be seen that most sales have occured in San Francisco area.","5f767d01":"#### Analysis of Sales","b5684a1a":"### Sale Analysis based on Location","aab1267d":"#### Check for the leaset sold items","68e3fbe1":"#### Analyze the sale of MacBook Pro Laptops throughout the months ","0b037c45":"### Analyze the data based on products","f81c3ca6":"data reading and cleaning","cd5ad0ab":"# Poduct Sales Data Analysis ","7618b736":"The highest sales are for Macbook Pro Laptop, followed by iPhones. ThinkPad Laptops has third highest sales, followd by Google Phones. ","6a6bd258":"It seems almost all the prodcuts follow the same sales pattern throughout the months","1be8f9a2":"#### Visualizing the sales by location","e3414709":"Based on the analysis, both laptop sales are higher around the end of the year. Let's see now how the sale of batteries are throughout the months","929b132c":"Convering the data types and creating new columns to analyze data","cfc3bf21":"It can be seen that the most amount of sales are for batteries (AAA and AA) followed by Charging cables (USB-C and Lighting Cables). Least amount of sales are for LG washing machines and LG Dryers","e222adef":"### Analysing the sales by the month"}}