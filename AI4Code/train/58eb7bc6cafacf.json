{"cell_type":{"5981d282":"code","fc139fc3":"code","058a1e92":"code","c17b652f":"code","9557cf6b":"code","f5473faa":"code","dd39fd7c":"code","f395ee27":"code","e3491520":"code","df83a833":"code","6fe9b6c5":"code","3382c83b":"code","a186792d":"code","343a565e":"code","9cf72f18":"code","93b2445d":"code","7b803e72":"code","ed10da9b":"code","32cb774b":"code","864f7636":"code","ff7a5ea3":"code","40137853":"code","599e59cc":"code","e449ce93":"code","7206a347":"code","cba5290e":"code","b8991f1e":"code","780ecf94":"code","3bf014fc":"code","d0a47f22":"code","801daca3":"code","027edd14":"code","3e5cab2e":"code","942376fd":"code","36cbe74b":"code","c7b1d8ad":"code","d5a0c643":"code","9ac668d8":"code","e3175591":"code","f7352aab":"code","5b56e145":"code","a121ac3c":"code","72fcf74b":"code","f823ff9b":"code","c5baadde":"code","0b07d1cb":"code","c0cc691d":"code","b486f021":"code","1943413d":"code","36e97606":"code","a2ceff4a":"code","b8715489":"code","15f4af34":"code","886a8e99":"code","f01f712b":"code","f5405497":"code","0c09b504":"code","c9b0e495":"code","db06f093":"code","a06e7caa":"code","845af1d0":"code","4f6af6dd":"code","6ef85ac3":"code","42710e4d":"code","2ebc5293":"code","cb4be240":"code","58fd4a35":"code","1b7c8e7b":"code","a11bb726":"code","445cb998":"code","aeefd11a":"code","03ebbfb4":"code","b9f3b7fd":"code","f74c0771":"code","f5d5abe2":"code","3993e735":"code","978f5e51":"code","dcf99a02":"code","ee77ae7f":"code","edddd4fa":"code","c1901e1b":"code","d52aabf8":"code","b1a29ac0":"code","270f4ecb":"code","cfa98e10":"code","dd505291":"markdown","5f953e7f":"markdown","178a97a0":"markdown","f63e77a8":"markdown","924dcaf5":"markdown","32d1309d":"markdown","3256245e":"markdown","0334b0f7":"markdown","71f64c28":"markdown","9a08e2a5":"markdown","494b37a2":"markdown","d934f700":"markdown","8c89d9d8":"markdown","12844cdd":"markdown","4ef4b973":"markdown","305f4e28":"markdown","369de71b":"markdown","f9b6dc61":"markdown","beae833e":"markdown","07d6bbe8":"markdown","95d99ddd":"markdown","958b7960":"markdown","e03ec78f":"markdown","1fb87fab":"markdown","afc679c4":"markdown","db32ea8e":"markdown","c45133a9":"markdown","e4990a1f":"markdown","8eab21c6":"markdown","61a9b0c9":"markdown","f5dd1cad":"markdown","722b57da":"markdown","5992af39":"markdown","c7c5a898":"markdown","5545a2e7":"markdown","c4cbe9d9":"markdown","754b0c0c":"markdown","9073ea77":"markdown","d813af9b":"markdown","5b95dc9c":"markdown","e23800a6":"markdown","428e0958":"markdown","48c75352":"markdown","05cf580c":"markdown","abcf9982":"markdown","80a27140":"markdown","e5c55e39":"markdown","76d25848":"markdown","2909ef0e":"markdown","776278f3":"markdown","75865bba":"markdown","84e8f11a":"markdown","b94fdffe":"markdown","4d248e3e":"markdown","9a6def70":"markdown","8ed29a90":"markdown","dc26eca0":"markdown","efaf3848":"markdown","60e2ad37":"markdown","dbe2e312":"markdown","51306e2e":"markdown"},"source":{"5981d282":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nimport plotly.express as px\nimport folium\n\nimport datetime","fc139fc3":"#loading all csv files\ncustomer     = pd.read_csv(\"..\/input\/brazilian-ecommerce\/olist_customers_dataset.csv\")\ngeo_location = pd.read_csv(\"..\/input\/brazilian-ecommerce\/olist_geolocation_dataset.csv\")\nitems        = pd.read_csv(\"..\/input\/brazilian-ecommerce\/olist_order_items_dataset.csv\")\npayments     = pd.read_csv(\"..\/input\/brazilian-ecommerce\/olist_order_payments_dataset.csv\")\nreviews      = pd.read_csv(\"..\/input\/brazilian-ecommerce\/olist_order_reviews_dataset.csv\")\norders       = pd.read_csv(\"..\/input\/brazilian-ecommerce\/olist_orders_dataset.csv\")\nproducts     = pd.read_csv(\"..\/input\/brazilian-ecommerce\/olist_products_dataset.csv\")\nsellers      = pd.read_csv(\"..\/input\/brazilian-ecommerce\/olist_sellers_dataset.csv\")\ntranslation  = pd.read_csv(\"..\/input\/brazilian-ecommerce\/product_category_name_translation.csv\")\n","058a1e92":"def overview(dataframe):\n    \"\"\"This function will return the overview of the dataframe\"\"\"\n    \n    print(\"Shape of the dataframe is : {}\".format(dataframe.shape))\n    print(\"**\"*30)\n    print(\"Information about features : \",dataframe.info())\n    print(\"**\"*30)\n    print(\"Total number of null values : \\n \",dataframe.isnull().sum())\n    print(\"**\"*30)\n    \n    return dataframe.head(3)","c17b652f":"overview(customer)","9557cf6b":"overview(geo_location)","f5473faa":"overview(items)","dd39fd7c":"overview(payments)","f395ee27":"overview(reviews)","e3491520":"overview(orders)","df83a833":"overview(products)","6fe9b6c5":"overview(sellers)","3382c83b":"overview(translation)","a186792d":"#zip_code_prefix column has different names in customer,geo_location,sellers dataframes\n#Change these names to zip_code_prefix\n\ncustomer.rename(columns = {\"customer_zip_code_prefix\":\"zip_code_prefix\"},inplace=True)\ngeo_location.rename(columns = {\"geolocation_zip_code_prefix\":\"zip_code_prefix\"},inplace=True)\nsellers.rename(columns = {\"seller_zip_code_prefix\":\"zip_code_prefix\"},inplace=True)","343a565e":"#drop the duplicate values in geo_location (zip_code_prefix)\n\nprint(\"Number of rows before dropping duplicates in geo_location : \",geo_location.shape[0])\ngeo_location.drop_duplicates(subset=\"zip_code_prefix\",keep=\"first\",inplace=True)\nprint(\"Number of rows after dropping duplicates in geo_locations : \",geo_location.shape[0])","9cf72f18":"#customer merging with geo_location (left join to preserve customer info)\ngeo_customer     = pd.merge(customer,geo_location,how=\"left\",on=\"zip_code_prefix\")\n\n#sellers merging with geo_locations (left join to preserve sellers info)\ngeo_seller       = pd.merge(sellers,geo_location,how=\"left\",on=\"zip_code_prefix\")\n\n#payment merging with order\npayment_order    = pd.merge(payments,orders,on=\"order_id\")\n\n#product merging with item\nproduct_item     = pd.merge(products,items,on=\"product_id\")\n\n#payment_order merging with reviews\npay_order_review = pd.merge(payment_order,reviews,on=\"order_id\")\n\n#pay_order_review merging with geo_customer\nreview_customer  = pd.merge(pay_order_review,geo_customer,on=\"customer_id\")\n\n#prod_item merging with geo_seller\nprod_item_seller = pd.merge(product_item,geo_seller,on=\"seller_id\")\n\n#Finally review_customer with prod_item_seller\ndata             = pd.merge(review_customer,prod_item_seller,on=\"order_id\",suffixes=(\"_customer\",\"_seller\"))","93b2445d":"print(\"Shape of the final dataframe (data) is : \",data.shape)","7b803e72":"num_tot_rows = data.shape[0]","ed10da9b":"print(\"All the column names in the data : \\n\",data.columns)","32cb774b":"data.drop(['review_id','review_comment_title', 'review_comment_message',\n          'review_creation_date','review_answer_timestamp'],axis=1,inplace=True)","864f7636":"#Checking for nul values\ndata.isnull().sum()","ff7a5ea3":"data[\"order_status\"].value_counts()","40137853":"not_delivered = data[data[\"order_status\"]!=\"delivered\"][\"order_status\"].value_counts().sum()\n\nprint(\"Total number of orders which are not delivered : \",not_delivered)\nprint(\"percentage of orders which are not delivered : \", (not_delivered*100\/data.shape[0]).round(3),\"%\")","599e59cc":"#We are interested in products that are delivered.\n#We don't need the products which are not delivered yet\/ cancelled. hence let's consider only delivered orders.\n# Also there are only 2.2% of data which are not delivered. \n\ndata = data[data[\"order_status\"]==\"delivered\"]","e449ce93":"#Since we cannot impute datetime, lets drop the rows which has null values in order_approved_at,order_delivered_carrier_date,order_delivered_customer_date\n#These columns has very little number of null values. \ndata.dropna(subset=[\"order_approved_at\",\"order_delivered_carrier_date\",\"order_delivered_customer_date\"],axis=0,inplace=True)","7206a347":"data.isnull().sum()","cba5290e":"data.dropna(subset=[\"geolocation_lng_seller\",\"geolocation_state_customer\"],axis=0,inplace=True)","b8991f1e":"data.isnull().sum()","780ecf94":"data.dropna(subset=[\"product_photos_qty\",\"product_width_cm\"],axis=0,inplace=True)","3bf014fc":"data.info()","d0a47f22":"data.shape","801daca3":"# % of data that we have drooped\nprint(\"Percentage of data that we have dropped is : \",round((num_tot_rows-data.shape[0])*100\/num_tot_rows,3),\"%\")","027edd14":"data[data.duplicated()==True]","3e5cab2e":"#remove the duplicates\ndata.drop_duplicates(keep=\"first\",inplace=True)","942376fd":"data.shape","36cbe74b":"#lets change the datetime features to correct format\ndata[\"order_purchase_timestamp\"]       = pd.to_datetime(data[\"order_purchase_timestamp\"])\ndata[\"order_approved_at\"]              = pd.to_datetime(data[\"order_approved_at\"])\ndata[\"order_delivered_carrier_date\"]   = pd.to_datetime(data[\"order_delivered_carrier_date\"])\ndata[\"order_delivered_customer_date\"]  = pd.to_datetime(data[\"order_delivered_customer_date\"])\ndata[\"order_estimated_delivery_date\"]  = pd.to_datetime(data[\"order_estimated_delivery_date\"])\ndata[\"shipping_limit_date\"]            = pd.to_datetime(data[\"shipping_limit_date\"])\n","c7b1d8ad":"data[data[\"geolocation_state_seller\"]!=data[\"seller_state\"]]","d5a0c643":"geo_location[(geo_location[\"geolocation_state\"]==\"SC\") & (geo_location[\"geolocation_city\"]==\"itajai\")]","9ac668d8":"geo_location[(geo_location[\"geolocation_state\"]==\"SP\") & (geo_location[\"geolocation_city\"]==\"itajai\")]","e3175591":"sellers[(sellers[\"seller_state\"]==\"SP\") & (sellers[\"seller_city\"]==\"itajai\")]","f7352aab":"data[data[\"geolocation_state_customer\"] != data[\"customer_state\"]]","5b56e145":"data[data[\"geolocation_city_customer\"]!=data[\"customer_city\"]][[\"geolocation_city_customer\",\"customer_city\"]]","a121ac3c":"data.drop([\"seller_state\",\"seller_city\",\"customer_city\",\"customer_state\"],axis=1,inplace=True)\n\ndata.rename(columns =\n                    {\"geolocation_state_seller\":\"seller_state\",\"geolocation_city_seller\":\"seller_city\",\n                    \"geolocation_lng_seller\":\"lng_seller\",\"geolocation_lat_seller\":\"lat_seller\",\n                    \"geolocation_lng_customer\":\"lng_customer\",\"geolocation_lat_customer\":\"lat_customer\",\n                    \"geolocation_city_customer\":\"customer_city\",\"geolocation_state_customer\":\"customer_state\"}\n            ,inplace=True)","72fcf74b":"data[data[\"payment_installments\"]==0]","f823ff9b":"data.drop(data.index[[53769,87577,87578]],axis=0,inplace=True)","c5baadde":"data[data[\"payment_installments\"]==0]","0b07d1cb":"data = pd.merge(data,translation,how=\"left\",on=\"product_category_name\")","c0cc691d":"data[data[\"product_category_name_english\"].isnull()==True][\"product_category_name\"].value_counts()","b486f021":"translation[translation[\"product_category_name\"]==\"portateis_cozinha_e_preparadores_de_alimentos\"]","1943413d":"null_1 = data[data[\"product_category_name\"]==\"portateis_cozinha_e_preparadores_de_alimentos\"][\"product_category_name_english\"]\nnull_2 = data[data[\"product_category_name\"]==\"pc_gamer\"][\"product_category_name_english\"]","36e97606":"data.loc[null_1.index,\"product_category_name_english\"] = \"kitchen_laptops_and_food_preparators\"\ndata.loc[null_2.index,\"product_category_name_english\"] = \"pc_gamer\"","a2ceff4a":"data.drop(\"product_category_name\",inplace=True,axis=1)\ndata.rename(columns={\"product_category_name_english\":\"product_category_name\"},inplace=True)","b8715489":"#let us save the data as final_data.csv, so that we do not need to run the above cells again.\ndata.to_csv(\"final_data.csv\")","15f4af34":"#load the data\ndata = pd.read_csv(\"final_data.csv\")\ndata.drop(\"Unnamed: 0\",axis=1,inplace=True)","886a8e99":"#info about the data\ndata.info()","f01f712b":"# checking the balance of the data\nprint(\"Counts :\\n \",data[\"review_score\"].value_counts())\nprint(\"**\"*30)\nprint(\"Percentage distribution :\\n \",100*data[\"review_score\"].value_counts(normalize=True))\nprint(\"**\"*30)\n\nplt.bar(data[\"review_score\"].value_counts().index,data[\"review_score\"].value_counts(),color=\"darkblue\")\n\nplt.xlabel(\"Ratings\")\nplt.ylabel(\"Counts\")\nplt.title(\"Distribution of review scores\")\nplt.show()","f5405497":"#Reference documentation: https:\/\/seaborn.pydata.org\/examples\/many_pairwise_correlations.html\n\ncorrelation = data.corr()\n#mask the above triangle\nmask = np.triu(np.ones_like(correlation,dtype='bool'))\nf, ax = plt.subplots(figsize=(11, 9))\n#colormap\ncmap = sns.diverging_palette(230, 20, as_cmap=True)\n#heatmap using seaborn\nsns.heatmap(correlation, mask=mask, cmap=cmap, vmax=.3, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})\nplt.show()","0c09b504":"data.corr()[\"review_score\"]","c9b0e495":"#let us split the data with respect to review rating. ","db06f093":"rate_1 = data[data[\"review_score\"]==1] \nrate_2 = data[data[\"review_score\"]==2] \nrate_3 = data[data[\"review_score\"]==3] \nrate_4 = data[data[\"review_score\"]==4] \nrate_5 = data[data[\"review_score\"]==5] ","a06e7caa":"#let us check some relation in type and sequential and installments","845af1d0":"data[(data[\"payment_type\"]!=\"voucher\") & (data[\"payment_sequential\"]>3)]","4f6af6dd":"data[(data[\"payment_sequential\"]>3) & (data[\"payment_installments\"]>1)]","6ef85ac3":"data[(data[\"payment_type\"]==\"voucher\") & (data[\"payment_installments\"]>1)]","42710e4d":"print(data[\"payment_type\"].value_counts(normalize=True))","2ebc5293":"#payment_type grouped by review_score\npay_type_score = data.groupby(\"review_score\")[\"payment_type\"].value_counts(normalize=True)\npay_type_score.unstack()","cb4be240":"pay_type_score.unstack().plot.bar(figsize=(15,6)).legend(loc=\"best\")\nplt.ylabel(\"percentage of counts\")\nplt.title(\"Distribution of payment type with respect to review_score\")\nplt.show()","58fd4a35":"#reference: https:\/\/machinelearningmastery.com\/chi-squared-test-for-machine-learning\/\nfrom scipy.stats import chi2_contingency,chi2\n\n#creating contengency table\ntable = pd.crosstab(data[\"payment_type\"],data[\"review_score\"],margins=False)\n\n#chi_square test using scipy.stats library\nchi_2,p_value,dof,expected = chi2_contingency(table)","1b7c8e7b":"alpha = 0.05\nprint(\"Level of significance : \",alpha)\nprint(\"p-value is : \",p_value)\n\nif p_value < alpha:\n    print(\"Reject null hypothesis\")\nelse:\n    print(\"Failed to reject null hypothesis\")\nprint(\"*\"*30)    \n#interpreting test statistic    \nprob=0.95\ncritical = chi2.ppf(prob, dof)\n\nprint(\"Critical value is : \",critical)\nprint(\"chi2(test statistic) value is : \",chi_2)\n\nif chi_2>=critical:\n    print(\"Reject null hypothesis\")\nelse:\n    print(\"Failed to reject null hypothesis\")\n    ","a11bb726":"#plotting density plot of installments wrt each ratings\nsns.FacetGrid(data,hue=\"review_score\",height=6)\\\n    .map(sns.kdeplot,\"payment_installments\")\\\n    .add_legend()\nplt.show()","445cb998":"#distribution between rating 2 and rating 5\nsns.kdeplot(rate_2[\"payment_installments\"],label=\"rating 2\")\nsns.kdeplot(rate_5[\"payment_installments\"],label=\"rating 5\")\n\nplt.title(\"Distribution of payment installments among different ratings\")\nplt.legend()\nplt.show()","aeefd11a":"#distribution between rating 4 and rating 5\nsns.kdeplot(rate_4[\"payment_installments\"],label=\"rating 4\")\nsns.kdeplot(rate_5[\"payment_installments\"],label=\"rating 5\")\n\nplt.title(\"Distribution of payment installments among different ratings\")\nplt.legend()\nplt.show()","03ebbfb4":"sns.kdeplot(np.log(rate_1[\"payment_installments\"]),label=\"rating 1\")\nsns.kdeplot(np.log(rate_2[\"payment_installments\"]),label=\"rating 2\")\nsns.kdeplot(np.log(rate_3[\"payment_installments\"]),label=\"rating 3\")\nsns.kdeplot(np.log(rate_4[\"payment_installments\"]),label=\"rating 4\")\nsns.kdeplot(np.log(rate_5[\"payment_installments\"]),label=\"rating 5\")\n\nplt.title(\"Distribution of log of payment installments among different ratings\")\nplt.xlabel(\"log of payment_installments\")\nplt.legend()\nplt.show()","b9f3b7fd":"#plotting cdf\nsns.FacetGrid(data,hue=\"review_score\",height=6)\\\n    .map(sns.ecdfplot,\"payment_installments\")\\\n    .add_legend()\n\n\nplt.title(\"CDF of payment installments among different ratings\")\nplt.xlabel(\"payment_installments\")\nplt.show()","f74c0771":"#boxplot\nsns.boxplot(y=\"payment_installments\",x=\"review_score\",data=data)\nplt.show()","f5d5abe2":"#mean installments\ndata.groupby(\"review_score\")[\"payment_installments\"].mean()","3993e735":"#99.9% installments\ndata.groupby(\"review_score\")[\"payment_installments\"].apply(lambda x: np.percentile(x,99.9))","978f5e51":"#plotting density plot of installments wrt each ratings\nsns.FacetGrid(data,hue=\"review_score\",height=6)\\\n    .map(sns.kdeplot,\"payment_sequential\")\\\n    .add_legend()\nplt.show()","dcf99a02":"sns.kdeplot((rate_3[\"payment_sequential\"]),label=\"rating 3\")\nsns.kdeplot((rate_5[\"payment_sequential\"]),label=\"rating 5\")\n\nplt.title(\"Distribution of payment_sequential among different ratings\")\nplt.xlabel(\"payment_sequential\")\nplt.legend()\nplt.show()","ee77ae7f":"sns.boxplot(y=\"payment_sequential\",x=\"review_score\",data=data)\nplt.show()\n\n#mean installments\nprint(\"Mean \\n\",data.groupby(\"review_score\")[\"payment_sequential\"].mean())\n\n#99.9% installments\nprint(\"99.9 percentile \\n\",data.groupby(\"review_score\")[\"payment_sequential\"].apply(lambda x: np.percentile(x,95)))","edddd4fa":"#plotting density plot of installments wrt each ratings\nsns.FacetGrid(data,hue=\"review_score\",height=6)\\\n    .map(sns.kdeplot,\"payment_value\")\\\n    .add_legend()\nplt.show()","c1901e1b":"#above density plot is overlapped. So we cannot get much insight from this. let us have a look at numbers.","d52aabf8":"sns.boxplot(y=\"payment_value\",x=\"review_score\",data=data)\nplt.show()\n\n#mean payment_value\nprint(\"Mean \\n\",data.groupby(\"review_score\")[\"payment_value\"].mean())\n\n#90% payment_value\nprint(\"90 percentile \\n\",data.groupby(\"review_score\")[\"payment_value\"].apply(lambda x: np.percentile(x,90)))","b1a29ac0":"rate_1[rate_1[\"payment_value\"]>12000]","270f4ecb":"for i in range(95,100):\n    print(\"{}th percentile \\n {}\".format(i,data.groupby(\"review_score\")[\"payment_value\"].apply(lambda x: np.percentile(x,i))))\n    print(\"*\"*40)","cfa98e10":"lst=[50,75,80,85]    #let us check these percentile values\nfor i in lst:\n    print(\"{}th percentile \\n {}\".format(i,data.groupby(\"review_score\")[\"payment_value\"].apply(lambda x: np.percentile(x,i))))\n    print(\"*\"*40)","dd505291":"<h2> 2.4 Data Cleaning <\/h2>","5f953e7f":"<b> Let us test statistically, whether payment_type and review_score dependent or independent.","178a97a0":"### Observations:\n    * There are null values present in reviews data, orders data, product data. Rest of the dataframes do not have any null values.\n    * Translation data has the product category names in english, i.e. english version of product categories. So we can use this to get the product category names in english. \n    * geo_location data has 1000163 data points, which seems very large compare to the data points of other dataframes. There is possibility of duplicate points present in geo_locations.\n    * To get the complete informations, we need to merge these sub dataframes to get single dataframe. Merging should be done according to the data schema that is given below.\n    ","f63e77a8":"<b>We can see that customer_state and geolocation_customer_state are same. \n\nBut in city names, customer_city names are in english. But geolocation_city_customer has different notation. But names are same. Here we shall drop customer_city, since geolocation_city_customer has same notations as all seller_city has.","924dcaf5":"* Installment distribution of rating 4 is highly overlapping with the same of rating 5","32d1309d":"#### <font color=\"red\">I found some problem with seller_city, seller_state information in sellers dataframe.","3256245e":"### This is the EDA part 1 file\n# 1. Introduction","0334b0f7":"<b> Since this distributon looks like follow power law, let us consider log scale.","71f64c28":"<b>We need to check more percentile values.","9a08e2a5":"### Correlation between features","494b37a2":"### 2.4.2 payment_installments analysis with review_score","d934f700":"<h2> 1.2 ML formulation of business problem:<\/h2>\nTo solve the business problem using data science, it is needed to pose that problem as classical machine learning problem. First of all, since the data has target variable, it is supervised ML problem. Further we need to predict the satisfaction of customers, that is predicting the ratings. Ratings are discrete ranging from 1 to 5. Hence it is a multi-class classification problem. We have 5 class labels, So, we can treat the problem as 5-class classification ML problem.\nOur goal is to predict the rating before the user give the rating\/review. Hence, we should not consider data regarding review message, comments, etc as features.\n\n\n<h2> 1.3 Business constraints:<\/h2>\n\n    - There is no strict low latency requirement. But model should not take too much time for predicting, Since we should get the prediction before the user give.\n    \n    - Low ratings like 1,2,3 are very important with respect to business improvement. So, misclassification of low ratings would cost loss of customers. Hence misclassifications are crucial.\n    \n    - Since low ratings are crucial, if we get the interpretations of the output, that will be better.","8c89d9d8":"<b><font color=\"red\"> The dataset is highly imbalanced.<\/font>\n    \nThere are only 3.5% datapoints which belongs to rating 2.\n    \nAbout 57% of datapoints belongs to rating 5. <\/b>","12844cdd":"<b> We should only use the informations which are upto the product delivery. We don't use the review text, comment,review creation date like features for the prediction. Hence it is better to drop these columns now.<\/b>","4ef4b973":"<b> Yes!! Density of rating 3 at payment_sequential=1 is peaked comapared to the same of rating 5. ","305f4e28":"* For payment sequential more than 3, all the payment methods are voucher.\n* payment installments more than 1 present for payment_sequential 1, 2, 3. For payment_sequential more than 3, there is only one installment.\n* For all voucher payment methods, installment is 1. ","369de71b":"<b>So, I googled the actual city of itajai, Brazil. Actually state is SC (Santa Catarina). Not SP (S\u00e3o Paulo). \n\nSo,sellers data contains wrong information about this. \n    \ngeo_location is accurate.\n    \nHence it is better to drop seller_state, seller_city, since we have the correct information in geolocation data.i.e. geolocation_state_seller, geo_location_city_seller.","f9b6dc61":"### 2.4.1 payment_type analysis with review_score","beae833e":"<b> it seems that density of payment_sequential of rating 3 is high at payment_sequential = 1 compared to other ratings.\nBut let us check this","07d6bbe8":"<h2> 1.4 Performance Metrics: (possible)<\/h2>\n\n- Multi-class confusion matrix\n- Micro F1 score\n- Precision Recall curve for each class\n- Multi-class log loss\n- Balanced accuracy score","95d99ddd":"## 2.4 Univariate analysis","958b7960":"It seems that none of the existing numerical features are highly correlated with the target variable.\n\nSurprisingly price is very very less correlated with the review scoring. Similarly freight value.","e03ec78f":"<b> Distribution of different payment types in each review rating is almost same as in the original data.\n\nEach of the ratings has nearly 74% of credit card payment. Roughly 1.2%-1.4% debit card payment. ","1fb87fab":"* Obviously the first observation is box plot of all ratings overlapped.\n* There are outliers in the payment_installments. \n* becuase, from the boxplot we can see that 75% of data lies below payment_installments less than 5. \n* There are very very less datapoints which have installments greater than 10 in each ratings. \n* Median of rating 1,2,3 are almost same that is equal to 2. Whereas for rating 4 and 5, median is 1.\n\n* Most of the datapoints (75%) which has rating 3, 4 or 5, have installments below 4. The same for rating 2 and 1, is 5.\n* Average payment installments for rating 1 and 2 are slightly high compared to rating 3,4,5. But the difference is not significant.\n\n* 99.9% of data points are below installments = 15 in case of ratings 2,3,4,5. Where is 99.9 percentile of rating 1 is 24.","afc679c4":"<b><font color=\"red\"> There are 3 records in the data, which has 0 installment. This is weird. Also these 3 records present in rating 5. \n    \nLet us drop these 3 records with installment = 0.","db32ea8e":"### 2.4.3 payment_sequential analysis with review_score","c45133a9":"<b> From the plot also we can see that, the distribution is same","e4990a1f":"<b> Chi-square test with significance level alpha=0.05","8eab21c6":"# E-commerce Customer Satisfaction Prediction\n### Review Rating prediction\nComplete code of the project: https:\/\/github.com\/praveen-hegde\/E-commerce-customer-satisfaction-predicton\n\nEDA Part 2: https:\/\/www.kaggle.com\/praveengh\/exploratory-data-analysis-part-2","61a9b0c9":"* Mean values of payment_values of rating 5,4,3 are much less compared to the same of rating 1. \n* But from the boxplot we can see that there are outliers with high payment values in rating 1. So this might pull the mean value of rating 1 towards higher value.\n* 90th percentile value is also high for rating 1 compared to other.","f5dd1cad":"### map the product_category translation to data","722b57da":"There are 261 rows in which seller location informations are null. Similarly 303 rows in which customer locatons are null. <br>\nWe cannot impute these values, also these numbers are small, Hence we can drop these.","5992af39":"<b> We can see that review scores distributed in <font color=\"blue\">J<\/font> like shape. This is the typical distribution of e-commerce review scores. Very high number of rating 5 followed by 4 and then rating 1, rating 2 and 3 are less compared to other ratings.<b>","c7c5a898":"<b>Since there are some very larger values in each rating, lets check other percentiles.","5545a2e7":"<h2> 1.1 Business Problem<\/h2>","c4cbe9d9":"* From the density distribution of installments we can see that, ratings are not separable using installments alone.\n* Distribution plots are highly overlapped. ","754b0c0c":"In the present system, the e-commerce platform will send a feedback mail to customers after the product is delivered. The customers can give ratings out of 5, also can write down some comments\/reviews about the product that he\/she has purchased. Using these reviews and ratings, e-commerce platform will rate the products, which helps other people to get the insights about the quality of the product. But according to seller perspective, these reviews will play crucial role to improve the business. But many times, customers would not give any ratings or reviews. How to predict the review score that a customer could give? This is the problem in e-commerce business. Also, the problem can be extended as \u201cIs it possible to predict the review rating that a customer could give before actually he gives the rating?\u201d. If this problem is solved, then it is also possible to predict the rating for which customer had not given any rating. In this case study, my objective is to try to solve this problem, that is Predicting the e-commerce customer satisfaction.\n\n\nFor this case study, I have taken the dataset given by Olist, which is an e-commerce platform in Brazil. Olist connects small businesses all over Brazil to customers with a single contract. Olist has provided over 100k order information that were placed between 2016 to 2018. Similar to all other e-commerce platforms, Olist also send feedback form to customers after the estimated delivery date to get the reviews and ratings. Now, Olist wants to improve the business as well as provide the better service to customers by using the customer satisfaction information. For that it needs to predict the review ratings before the user will give actual ratings. So, my approach is to address this business problem using data science, which is a scientific way to solve this business problem.","9073ea77":"* payment_sequential is also discrete feature. Its value is ranging between 1 to 26.\n* From the boxplot we can see that, there are very less values of sequential greater than 1 in each rating. So these are considered as outliers in the boxplot.\n* Mean value for each rating is almost same. There is no difference among the mean values.\n* From 99.9 percentile value, we can clearly say that, 99.9% of data points contains sequential = 1 for all ratings except for rating 2(sequential is 2)\n* It is clear that payment_sequential alone cannot give any information to distinguish among ratings. Than means it does not has significant effect on review_rating.","d813af9b":"## 2.2 Overview of all data","5b95dc9c":"## 2.3 Merge the dataframes","e23800a6":"<b> <font color=\"darkblue\">Hence we can conclude that dependence of review_score on payment_type is statistically significant","428e0958":"#### We are interested in correlation of features with (target variable) review_score","48c75352":"* Median payment value is also high incase of rating 1 compared to other ratings. \n\nFrom these observations,\n<b> We can say, payment value has effect on review_score. \n    \nCustomers who bought products of very high values most likely to give low ratings. \n    \nBut this does not prove causation. \n    \nThis is the insights we got from the above numbers.   \n    \n    \n    \nEDA Part 2: https:\/\/www.kaggle.com\/praveengh\/exploratory-data-analysis-part-2","05cf580c":"<h3> Let us check the distribution of class label to understand the class balance","abcf9982":"### 2.4.4 payment_value analysis with review_score","80a27140":"<b> There are 653 record in which seller_state and geo_location_state_seller are not matching. \n    \nSo, let us look deeply about this issue.","e5c55e39":"<b> Translation data deos not has portateis_cozinha_e_preparadores_de_alimentos, pc_gamer.\n    \nportateis_cozinha_e_preparadores_de_alimentos english translation is kitchen_laptops_and_food_preparators\n    \npc_gamer is pc_gamer. \n    \nLet us fill the null values in english translation by these values.","76d25848":"* From 95 to 99 percentile, payment value of rating 5,4,3 is significantly less rating 1. \n* For 95th percentile, rating 5 has less payment value compared to rating 1.","2909ef0e":"* Distributions are not separable. \n* Density is peak at installments 1 for rating 5 compared to rating 2.","776278f3":"### Data schema\n![image.png](attachment:image.png)","75865bba":"<h2> 1.5 Research-Papers\/Solutions\/Architectures\/Kernels <\/h2>\n\n- Existing solution: https:\/\/www.kaggle.com\/andresionek\/predicting-customer-satisfaction\n- Repeat buyer prediction for e-commerce https:\/\/www.kdd.org\/kdd2016\/papers\/files\/adf0160-liuA.pdf\n- LightGBM Classifier: https:\/\/papers.nips.cc\/paper\/2017\/file\/6449f44a102fde848669bdd9eb6b76fa-Paper.pdf\n- SMOTE technique: https:\/\/arxiv.org\/pdf\/1106.1813.pdf\n- Blog on undersampling, oversampling, SMOTE, ensemble models: https:\/\/xang1234.github.io\/louvain\/\n- https:\/\/imbalanced-learn.org\/stable\/references\/generated\/imblearn.over_sampling.SMOTE.html\n- https:\/\/machinelearningmastery.com\/random-oversampling-and-undersampling-for-imbalanced-classification\/\n- https:\/\/towardsdatascience.com\/using-data-science-to-predict-negative-customer-reviews-2abbdfbf3d82","84e8f11a":"* Now we can see that one customer purchased same item 8 units in the sam time. The payment value is 13664.08.\n* He gave 1 rating for all this product. This high value affects the mean value of payment value.","b94fdffe":"<b> So we have lost roughly 4% of data, which is not bad. Because we have 96% of data which don't have nul values.<\/b>","4d248e3e":"Since seller data has some wrong info, let us check customer data also.","9a6def70":"<h1> 2. Exploratory Data Analysis<\/h1>","8ed29a90":"* We cannot say anything more from cdf also.\n* Plots are overlapped. payment_installment is discrete value. At each value the percentage of data lies below is almost same for all ratings.","dc26eca0":"<b> Distribution of payment_sequential is highly overlapped in all the ratings data. From this we can clearly see that we cannot distinguish among the ratings. \n    \nHere also we cannot get any helpful information from payment_sequential alone","efaf3848":"## Exploratory Data Analysis","60e2ad37":"<h2> 2.1 Loading the data files<\/h2>","dbe2e312":"* Most of the installments = 1 in all ratings.\n* Distribution of installments is almost similar among all the ratings.\n* payment_installment alone cannot distinguish among the ratings.","51306e2e":"<font color=\"darkblue\"><b> Null hypothesis :<\/b> payment_type and review_score are not related i.e. independent\n    \n<b><font color=\"darkblue\"> Althernative hypothesis: <\/b> payment_type and review_score are related i.e. dependent"}}