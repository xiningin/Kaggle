{"cell_type":{"e9d3e917":"code","b71dd92b":"code","0b3208d2":"code","fdc4f111":"code","8e73f4f3":"code","2f91d13e":"code","74ba5a54":"code","f74f6e8d":"code","9c38d4f3":"code","64a4bcbc":"code","5dc78418":"code","ee786fc0":"code","b6e5a198":"code","aab6abba":"code","22cf0545":"code","6e0c2b1b":"code","01464a60":"code","c52d3ffc":"code","c1d62eb0":"code","e86a1edd":"code","f21e34f6":"code","b038886d":"code","f993bf97":"code","d7df9304":"code","b13f2654":"code","54676948":"code","6afcfc73":"code","6f69d977":"code","0136d671":"code","f6600bdc":"code","720c2cab":"code","a8d24c1d":"code","632328d8":"code","d2a71a28":"code","ca84c2ae":"code","84752d32":"code","5871a043":"code","e42d4557":"code","91102e65":"code","57208b2e":"code","5c6f4efc":"code","bd030ca2":"code","5dbea223":"code","85ad76c2":"code","4659ed7f":"code","778ca707":"markdown","72c3d36a":"markdown","636e0106":"markdown","f1296507":"markdown","a21aa368":"markdown","28d1735e":"markdown","3444c484":"markdown","320f02ac":"markdown","0dc5db13":"markdown","e769463a":"markdown","4b330b24":"markdown","4df7f0e5":"markdown","590c8027":"markdown","f8f9b150":"markdown","38f77a86":"markdown"},"source":{"e9d3e917":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b71dd92b":"#importing for data viz\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, iplot\nimport cufflinks as cf\ncf.go_offline()\ninit_notebook_mode(connected=True)\n%matplotlib inline\nsns.set_style('whitegrid')","0b3208d2":"train_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_data = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","fdc4f111":"train_data.head()","8e73f4f3":"test_data.head()","2f91d13e":"train_data.info()","74ba5a54":"train_data.describe()","f74f6e8d":"train_data.isnull()","9c38d4f3":"plt.figure(figsize=(10,10))\nsns.heatmap(train_data.isnull(), cbar=False, cmap='viridis' ,yticklabels=False)","64a4bcbc":"#Checking who survived\nsns.countplot(x='Survived', data=train_data)","5dc78418":"sns.countplot(x='Survived', hue='Sex', data=train_data)","ee786fc0":"sns.countplot(x='Survived', hue='Pclass', data=train_data)","b6e5a198":"plt.figure(figsize=(12,8))\nsns.distplot(a=train_data['Age'].dropna(), bins=35)","aab6abba":"sns.countplot(x='SibSp', data=train_data)","22cf0545":"sns.countplot(x='Parch', data=train_data)","6e0c2b1b":"plt.figure(figsize=(10,8))\nsns.distplot(a=train_data['Fare'], bins=35, kde=False)","01464a60":"train_data['Fare'].iplot(kind='hist', bins=50)","c52d3ffc":"train_data.info()","c1d62eb0":"#checking mean Age w.r.t. Pclass to fill-in missing values\ntrain_data.groupby('Pclass')['Age'].mean()","e86a1edd":"def fillna(rec):\n    Pclass = rec['Pclass']\n    Age = rec['Age']\n    if pd.isnull(Age):\n        if Pclass == 1:\n            return 38.23\n        elif Pclass == 2:\n            return 29.88\n        else:\n            return 25.14\n    else:\n        return Age","f21e34f6":"train_data['Age'] = train_data[['Pclass', 'Age']].apply(fillna, axis=1)","b038886d":"plt.figure(figsize=(10,10))\nsns.heatmap(train_data.isnull(), cbar=False, cmap='viridis' ,yticklabels=False)","f993bf97":"train_data.drop('Cabin', axis=1, inplace=True)","d7df9304":"#Dropping na (Few are in Embarked)\ntrain_data.dropna(axis=0, inplace=True)","b13f2654":"plt.figure(figsize=(10,10))\nsns.heatmap(train_data.isnull(), cbar=False, cmap='viridis' ,yticklabels=False)","54676948":"train_data = pd.get_dummies(train_data, columns=['Embarked', 'Sex'], drop_first=True)","6afcfc73":"train_data.drop(['Name', 'Ticket'], axis=1, inplace=True)","6f69d977":"#Final Check\ntrain_data","0136d671":"#Splitting predictor X and response y\nX=train_data.drop('Survived', axis=1)\ny=train_data['Survived']","f6600bdc":"from sklearn.linear_model import LogisticRegression","720c2cab":"log_model = LogisticRegression(solver='liblinear')","a8d24c1d":"log_model.fit(X,y)","632328d8":"test_data","d2a71a28":"test_data.drop(['Name', 'Ticket'], axis=1, inplace=True)","ca84c2ae":"#checking mean age for filling-in missing values\ntest_data.groupby('Pclass').mean()['Age']","84752d32":"def fillna_test(rec):\n    Pclass = rec['Pclass']\n    Age = rec['Age']\n    if pd.isnull(Age):\n        if Pclass == 1:\n            return 41\n        elif Pclass == 2:\n            return 28.9\n        else:\n            return 24\n    else:\n        return Age","5871a043":"test_data['Age'] = test_data[['Pclass', 'Age']].apply(fillna_test, axis=1)","e42d4557":"plt.figure(figsize=(10,10))\nsns.heatmap(test_data.isnull(), cbar=False, cmap='viridis' ,yticklabels=False)","91102e65":"test_data.drop('Cabin', axis = 1, inplace=True)","57208b2e":"test_data.dropna(inplace=True)","5c6f4efc":"test_data.head()","bd030ca2":"test_data = pd.get_dummies(test_data, columns=['Sex', 'Embarked'], drop_first=True)","5dbea223":"test_data.info()","85ad76c2":"predictions = log_model.predict(test_data)","4659ed7f":"predictions","778ca707":"## Predicting 'Survived'","72c3d36a":"# Exploratory Data Analysis","636e0106":"**Getting dummies**","f1296507":"Dropping `Cabin`","a21aa368":"### Data Preperation (test_data)","28d1735e":"birds eye view of the `train_data`\n* By looking at our `Age` column we can see that there are lot of missing data, but there is data present enough so that later on we can fill those missing value with reasonable replacement with the help of imputation.\n* There are a lot more data is missing in `Cabin` column to do something at the basic level, we have to later drop the column or we can add some other features like cabin_known or something like that.","3444c484":"Dropping *Text* colums ","320f02ac":"This heatmap shows there is no missing values.","0dc5db13":"Filling missing values","e769463a":"## Missing Data","4b330b24":"### Data Preperation (train_data)","4df7f0e5":"We are not doing Feature Engg. so dropping Text columns","590c8027":"**Filling missing Values (Age)**","f8f9b150":"**No missing Age values**<br>\nDropping Cabin as it has too many missing values.","38f77a86":"Creating dummy vars for **Logistic Regression**"}}