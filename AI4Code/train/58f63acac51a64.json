{"cell_type":{"2c09abe8":"code","14a27e16":"code","8cea713d":"code","4877589e":"code","c959b41d":"code","90713fbd":"code","79502ed8":"code","d6a339e8":"code","86fa6e90":"code","6c50b9cc":"code","dc60747a":"code","6a83bde2":"code","976a6817":"code","36cd8b7f":"code","0f10a26d":"code","f95bda36":"code","86e64316":"code","95f09a33":"code","96ef3a54":"code","b30df5e1":"code","097af1a7":"code","ecd777a7":"code","602ade1d":"code","65120f74":"code","44f91e61":"code","541892c7":"code","848a7e7e":"code","4c0ace9d":"code","8a912278":"code","74087401":"code","1178c1c2":"code","d23399ae":"code","aea3996b":"code","58b13a2e":"markdown","1dc5c6da":"markdown","460b047b":"markdown","27562902":"markdown","ff48bfda":"markdown","9f64e766":"markdown","44ac31b2":"markdown","8fc086d7":"markdown","47d87c0e":"markdown"},"source":{"2c09abe8":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport scipy.stats\nimport pylab\nimport seaborn as sns","14a27e16":"data_path=\"..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv\"","8cea713d":"data=pd.read_csv(data_path)","4877589e":"data.head()","c959b41d":"gender_dataframe=pd.get_dummies(data.Gender)","90713fbd":"gender_dataframe.head(2)","79502ed8":"data.drop([\"Gender\"],axis=1,inplace=True)","d6a339e8":"data.insert(loc=2,column=\"Male\",value=gender_dataframe.Male)","86fa6e90":"data.head()","6c50b9cc":"data.isnull().sum()##checking the null value","dc60747a":"data.describe()","6a83bde2":"plt.hist(data.Age,color=\"#41b098\")\nplt.title(\"Age Distribution throughout the dataset\")\ndata[\"Age\"].plot.kde()\nplt.show()","976a6817":"sns.countplot(data.Age)\nplt.rcParams['figure.figsize'] = (20, 10)\nplt.title(\"Distribution of the Age\")\nplt.show()","36cd8b7f":"scipy.stats.probplot(data.Age,plot=pylab)\npylab.show()","0f10a26d":"from pandas.plotting import andrews_curves","f95bda36":"plt.hist(data[\"Annual Income (k$)\"],color=\"#41b098\")\nplt.title(\"Anual Income Distribution throughout the dataset\")\ndata[\"Annual Income (k$)\"].plot.kde()\nplt.show()","86e64316":"sns.countplot(data[\"Annual Income (k$)\"])\nplt.rcParams['figure.figsize'] = (20, 7)\nplt.title(\"Distribution of the Salary\")\nplt.show()","95f09a33":"scipy.stats.probplot(data[\"Annual Income (k$)\"],plot=pylab)\npylab.show()","96ef3a54":"#identifying the number of the Males and Females\nmales=data.Male.sum()\nfemales=200-males\n","b30df5e1":"#creating Pie Chart for the \ncolor=[\"#80ff00\", \"#4245a8\"]\nplt.pie([males,females],labels=[\"Males\",\"Females\"],explode = (0, 0.1,),shadow=True,startangle=360,radius=1.5,colors=color,autopct='%1.1f%%')\nfig=plt.gcf()\nplt.show()","097af1a7":"sns.pairplot(data)\nplt.show()","ecd777a7":"data.head()","602ade1d":"features=data.iloc[:,1:]","65120f74":"features.head()","44f91e61":"from sklearn.cluster import KMeans","541892c7":"intertia=[]\nindex_number=[]\n\nfor i in range(1,15):\n  kmeans = KMeans(n_clusters = i, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)\n  kmeans.fit(features)\n  intertia.append(kmeans.inertia_)\n  index_number.append(i)","848a7e7e":"plt.plot(intertia)\nplt.show()","4c0ace9d":"from sklearn.metrics import silhouette_score","8a912278":"sil_score=[]\nfor n_clusters in range(2,12):\n    clusterer = KMeans (n_clusters=n_clusters).fit(features)\n    preds = clusterer.predict(features)\n    centers = clusterer.cluster_centers_\n\n    score = silhouette_score (features, preds, metric='euclidean')\n    sil_score.append(score)\n    ","74087401":"plt.plot(sil_score)\nplt.title(\"Silhouette score vs No.Of cluste\")\nplt.show()","1178c1c2":"kmeans=KMeans(n_clusters=4,max_iter=300)\nkmeans.fit(features)","d23399ae":"class_per_data=kmeans.labels_","aea3996b":"print(\"Classes are\",class_per_data)","58b13a2e":"**Pair plot to show how each feature is affected by other features**","1dc5c6da":"Data Distribution Plot","460b047b":"**Starting clustering the Data into multiple groups**","27562902":"**It looks like ideal number of cluster is 4, however i am not sure, so lets use silhouette score to identify the optimal number of cluster**","ff48bfda":"**As confirmed by the silhouette analysis as well, the optimal number of categories=4, so I am going to use kmeans with cluster=4**","9f64e766":"Now lets check how good this data is normally distributed using \"scipy.stats\"","44ac31b2":"Identitfy the optimal number of cluster using Elbow-\"Inertia\" Method","8fc086d7":"**QQ-Plot**","47d87c0e":" **Data Analysis**"}}