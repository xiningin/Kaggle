{"cell_type":{"fe6f9d48":"code","edb0b41c":"code","f3df1a64":"code","7a3c96a8":"code","f1a9b213":"code","b3e3e9bb":"code","65673b83":"code","4ab74445":"code","d0c26ebb":"code","60ed2e04":"code","b58e1a76":"code","15c5ff25":"code","17a6fcb8":"code","19963ced":"code","2a35dbc2":"code","4ad697e8":"code","a207b098":"code","8c386b12":"code","d5c86ac1":"code","af7ae76f":"code","cfd84441":"code","f14a63da":"code","c4367416":"code","33d757f8":"code","97b0d545":"code","cc079e2a":"code","a771fbfe":"code","1259144b":"code","9e296849":"code","7874c6b5":"code","81a378cf":"code","d44aee7a":"code","aee950f3":"code","85bdb0e8":"code","e6b05abe":"code","06416e82":"code","7b1aad9a":"code","3074528a":"code","59280f43":"code","e49840f9":"code","87e154b5":"code","214263b9":"code","2da44ae1":"code","88ea78b2":"code","f45a49de":"code","6d21709f":"code","dc994b10":"code","04365441":"code","2454e2e9":"code","ead93ffc":"code","0f5e1e71":"code","94592447":"code","bfc66edd":"code","2cf308e9":"code","7cb71ee3":"code","32849310":"code","b63a396e":"code","d01cd2a6":"code","e436cc44":"code","b41acacd":"code","87d63c6c":"code","376b5001":"code","9fdd39eb":"code","89d46692":"code","a5c28714":"code","0b55c053":"code","30aa2030":"code","632dcdeb":"code","479b7ff6":"markdown","1e0a62c6":"markdown","4550f1e7":"markdown","ca32ec5f":"markdown","8deae7e6":"markdown","74dab3d7":"markdown","d7ea16d7":"markdown","ec226490":"markdown","d8f7451d":"markdown","9b3e54a8":"markdown","e172754c":"markdown","4d753bd4":"markdown","9a6728a3":"markdown","30c8c9bd":"markdown","978a8cfd":"markdown","8dbbc8c2":"markdown","3286bfe6":"markdown","33cef133":"markdown","5b2d8753":"markdown","de381947":"markdown"},"source":{"fe6f9d48":"#Importing useful libraries\nimport pandas as pd\nimport numpy as np\nimport datetime\nimport plotly.graph_objs as go \nfrom plotly.offline import init_notebook_mode,iplot,plot\ninit_notebook_mode(connected=True) \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","edb0b41c":"from subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\/instacart-market-basket-analysis\"]).decode(\"utf8\"))","f3df1a64":"import zipfile\n\nzf1 = zipfile.ZipFile('..\/input\/instacart-market-basket-analysis\/aisles.csv.zip')\nzf2 = zipfile.ZipFile('..\/input\/instacart-market-basket-analysis\/departments.csv.zip')\nzf3 = zipfile.ZipFile('..\/input\/instacart-market-basket-analysis\/products.csv.zip')\nzf4 = zipfile.ZipFile('..\/input\/instacart-market-basket-analysis\/order_products__prior.csv.zip')\nzf5 = zipfile.ZipFile('..\/input\/instacart-market-basket-analysis\/order_products__train.csv.zip')\nzf6 = zipfile.ZipFile('..\/input\/instacart-market-basket-analysis\/orders.csv.zip')\n","7a3c96a8":"aisles=pd.read_csv(zf1.open('aisles.csv'))\ndepartments=pd.read_csv(zf2.open('departments.csv'))\nproducts=pd.read_csv(zf3.open('products.csv'))\norder_products_prior=pd.read_csv(zf4.open('order_products__prior.csv'))\norder_products_train=pd.read_csv(zf5.open('order_products__train.csv'))\norders=pd.read_csv(zf6.open('orders.csv'))","f1a9b213":"aisles.head()","b3e3e9bb":"aisles.info()  #No missing values","65673b83":"departments.head()","4ab74445":"departments.info() #no missing values","d0c26ebb":"products.head()","60ed2e04":"products.info() #no missing values","b58e1a76":"order_products_prior.head()","15c5ff25":"order_products_prior.info()","17a6fcb8":"order_products_train.head()","19963ced":"order_products_train.info() #no missing values","2a35dbc2":"orders.head()","4ad697e8":"orders.info()","a207b098":"order_products_prior.isnull().sum() #No missing Values","8c386b12":"missing_values = orders.isnull().sum() #MISSING VALUES","d5c86ac1":"percentage = missing_values\/orders.isnull().count()\npercentage","af7ae76f":"orders= orders[orders['days_since_prior_order'].notnull()]","cfd84441":"orders.isnull().sum() #DataFrame after removing the null values","f14a63da":"#Columm eval_set has 3 values- prior,train,test.\norders['eval_set'].value_counts()","c4367416":"sns.set_style('whitegrid')\nplt.figure(figsize=(8,6))\nax= sns.countplot(x='eval_set', data= orders)\nax.set_title('Evaluation Set Type Vs Number of occurence in Data Set', fontsize=16)\n\nplt.show()","33d757f8":"plt.figure(figsize=(8,6))\nax= sns.countplot(x='order_dow', data= orders, palette='rocket')\nax.set_title('Day of week Vs Number of orders on that particular day', fontsize=16)\n\nplt.show()","97b0d545":"plt.figure(figsize=(12,6))\nax= sns.countplot(x='order_hour_of_day', data= orders, palette='rocket')\nax.set_title('Hours of Day Vs Number of orders on that particular hour', fontsize=16)\n\nplt.show()","cc079e2a":"plt.figure(figsize=(12,6))\nax= sns.countplot(x='days_since_prior_order', data= orders, palette='rocket_r')\nax.set_title('Days since prior order Vs Number of orders', fontsize=16)\n\nplt.show()","a771fbfe":"orders_grouped = orders.groupby(['order_dow','order_hour_of_day'])['order_number'].aggregate('count').reset_index()\norders_grouped","1259144b":"#pivoting the data set for better visualization \n#This table shows no. of orders on all days of week on a particular hour of day .\norders_grouped= orders_grouped.pivot('order_dow','order_hour_of_day', 'order_number')\norders_grouped","9e296849":"#Heatmap for visualization\nplt.figure(figsize=(12,8))\nsns.heatmap(orders_grouped, cmap='coolwarm')","7874c6b5":"plt.figure(figsize=(12,8))\n\nsns.heatmap( orders.corr(), cmap='vlag', annot=True)","81a378cf":"order_products_prior.head()","d44aee7a":"order_products_train.head()","aee950f3":"#percentage of reordered products in order_products_prior\norder_products_prior['reordered'].sum()","85bdb0e8":"len(order_products_prior)","e6b05abe":"#percentage of reordered products in order_products_train\norder_products_train['reordered'].sum()\/len(order_products_train)","06416e82":"#concat train order and prior orders\nprior_train = pd.concat([order_products_prior, order_products_train]).sort_values(by=['order_id'])\n","7b1aad9a":"prior_train.info()","3074528a":"#Merging with products dataframe\nprior_train_orders = pd.merge(prior_train, products, on='product_id', how='left').sort_values(by=['order_id'])","59280f43":"prior_train_orders.head()","e49840f9":"#merge with aisle and department\n\nprior_train_orders = pd.merge(prior_train_orders, aisles, on='aisle_id', how='left')\nprior_train_orders = pd.merge(prior_train_orders,departments, on='department_id', how='left')\n","87e154b5":"prior_train_orders.head(5)","214263b9":"#Merging with dataframe orders\nprior_train_orders = pd.merge(prior_train_orders, orders, on='order_id',how='left').sort_values(by=['order_id'])","2da44ae1":"prior_train_orders['eval_set'].value_counts()","88ea78b2":"col_order = ['user_id','order_id','product_id','aisle_id','department_id','add_to_cart_order',\n 'reordered','product_name','aisle','department','eval_set','order_number','order_dow','order_hour_of_day','days_since_prior_order']\n\nprior_train_orders = prior_train_orders[col_order]\nprior_train_orders.head()","f45a49de":"#Distribution of target Variable\ntarget_var= prior_train_orders.groupby(['eval_set'])['reordered'].aggregate(['count','sum']).reset_index()\ntarget_var","6d21709f":"target_var['reordered_percentage']= target_var['sum']\/target_var['count']\ntarget_var","dc994b10":"sns.barplot(x='eval_set', y='reordered_percentage' , data=target_var)","04365441":"#How many orders were placed by every user","2454e2e9":"orders_per_user= orders.groupby(['user_id']) ['order_id'].aggregate(lambda group : len(group.unique())).reset_index()\norders_per_user\n#here order_id represents - unique number of orders for each user. we will plot this in a bar plot.","ead93ffc":"plt.figure(figsize=(30,15))\nsns.countplot(x='order_id',data=orders_per_user)\nplt.xticks(rotation='vertical')","0f5e1e71":"#most frequently ordered \/ reordered products","94592447":"reordered_products=prior_train_orders['product_name'].value_counts().reset_index().head(20)\nreordered_products.columns=['product_name','frequency']\nreordered_products","bfc66edd":"plt.figure(figsize=(20,10))\nsns.barplot(x='product_name',y='frequency',data=reordered_products)\nplt.xticks(rotation='vertical')","2cf308e9":"#From which aisle we got most orders\/reorders","7cb71ee3":"ordered_aisles=prior_train_orders['aisle'].value_counts().reset_index().head(20)\nordered_aisles.columns=['aisle_name','no_of_products_ordered']\nordered_aisles","32849310":"plt.figure(figsize=(20,10))\nsns.barplot(x='aisle_name',y='no_of_products_ordered',data=ordered_aisles)\nplt.xticks(rotation='vertical')","b63a396e":"reordered_aisles=prior_train_orders.groupby(['aisle'])['reordered'].aggregate('sum').sort_values(ascending=False).reset_index().head(20)\nreordered_aisles.columns=['aisle_name','no_of_products_reordered']\n","d01cd2a6":"reordered_aisles['reordered_rate']= reordered_aisles['no_of_products_reordered']\n                                     \/ordered_aisles['no_of_products_ordered']","e436cc44":"reordered_aisles.sort_values(by=['reordered_rate'], ascending=False, inplace=True)\nreordered_aisles","b41acacd":"plt.figure(figsize=(20,10))\nsns.barplot(x='aisle_name',y='reordered_rate',data=reordered_aisles, alpha=0.7)\nplt.xticks(rotation='vertical')","87d63c6c":"#From which department we got most orders\/reorders","376b5001":"ordered_departments=prior_train_orders['department'].value_counts().reset_index().head(20)\nordered_departments.columns=['department_name','no_of_products_ordered']\nordered_departments","9fdd39eb":"plt.figure(figsize=(20,10))\nsns.barplot(x='department_name',y='no_of_products_ordered',data=ordered_departments)\nplt.xticks(rotation='vertical')","89d46692":"reordered_departments=prior_train_orders.groupby(['department'])['reordered'].aggregate('sum').sort_values(ascending=False).reset_index().head(20)\nreordered_departments.columns=['department_name','no_of_products_reordered']\n\nreordered_departments['reorder_rate']= reordered_departments['no_of_products_reordered']\/ordered_departments['no_of_products_ordered']\n\nreordered_departments.sort_values(by=['reorder_rate'], ascending=False, inplace=True)\nreordered_departments","a5c28714":"plt.figure(figsize=(20,10))\nsns.barplot(x='department_name',y='reorder_rate',data=reordered_departments, alpha=0.7)\nplt.xticks(rotation='vertical')","0b55c053":"#cartsize of different orders","30aa2030":"cartsize=prior_train_orders['order_id'].value_counts().reset_index()\ncartsize.columns=['order_id','no_of_products_in_order']\ncartsize","632dcdeb":"plt.figure(figsize=(20,10))\nsns.histplot(x='no_of_products_in_order',data=cartsize,bins=70)\nplt.xticks(rotation='vertical')","479b7ff6":"**Now let us check order_dow distribution**","1e0a62c6":"### **Checking for missing values in Data frame order_products__prior and orders**","4550f1e7":"**Almost 60% products are reordered in both order_products_prior and order_products_train dataframe.**","ca32ec5f":"Its clear from the graph above that most orders were placed from depatments- produce and dairy eggs. ","8deae7e6":"The above graph clearly depicats that maximum number of orders are in morning 10-11 am or in evening 3-4pm. At night between 1-5am orders are the least as that is when people are sleeping.","74dab3d7":"### Analyzing the dataframe *orders*","d7ea16d7":"From the graph above we can see that number of orders per user are between 4-100. and very few users have places more than 60 orders.","ec226490":"From the heatmap above it is clear that peak orders are either on sunday 2 PM or on monday 10 AM.","d8f7451d":"From the graph it is clear that there is a peak on 7th day, then local peaks at day 14,day 21 and day 28. Then there is a global peak on day 30 meaning monthly peak. ","9b3e54a8":"**Now we will group orders according to day of week and hour of day for better visualization.**","e172754c":"**Most reorderes were placed from aisles Fresh fruits, milk, water etc.**","4d753bd4":"The dataset for this project is a relational set of files describing customers' orders over time. The goal of this peoject is to predict which products will be in a user's next order. The dataset is anonymized and contains a sample of over 3 million grocery orders from more than 200,000 **Instacart** users. For each user, we are provided between 4 and 100 of their orders, with the sequence of products purchased in each order. We are also provided the week and hour of day the order was placed, and a relative measure of time between orders.","9a6728a3":"From the graph above we can see that maximum number of orders is on Sunday, followed by monday. which makes sense as people will want to buy groceries either at the weekend or start of the week. Mid-week has less number of orders with minimum orders on thursday. ","30c8c9bd":"### Values are missing because for every user\u2019s 1st order ( order_number = 1) the days_since_prior_order is Nan, which makes sense. We can impute 0 here. or since Missing values are only 6% of total values, we can remove these rows and carry on with our analysis.  I will use the second approach.","978a8cfd":"## Exploratory Data Analyais","8dbbc8c2":"**Cart size has a right skewed distribution. and there are very few orders with cart size more than 40.maximum cart size is 145.**","3286bfe6":"###  Merging orders_products_prior with dataframes  departments ,products and aisles and Analyzing it","33cef133":"**Days_since_prior_order Distribution**","5b2d8753":"**Checking order_hour_of_day distribution**","de381947":"### Exploratory data analysis using the merged dataframe prior_train_orders"}}