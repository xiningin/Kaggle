{"cell_type":{"f2435aee":"code","b958acb0":"code","936bf973":"code","f691a7a1":"code","dfb6521c":"code","c9c5866e":"code","366d82a1":"code","6cb1ae7c":"code","0b4dd321":"code","0d8ff714":"code","28783235":"code","999510ad":"code","ea81311a":"code","5bbe3534":"code","60b66d0a":"code","3ed4fe65":"code","da90c190":"code","a757c2d2":"code","5731ee9e":"code","ee9fab80":"code","37a0095b":"code","04740a6f":"code","57d2b126":"code","3522c6a7":"code","c0409e37":"code","0db6d399":"code","2068bc3f":"code","4c18eb40":"markdown","1dbb496d":"markdown","1e03ac9b":"markdown","25c06951":"markdown","b1e92de8":"markdown","5f07dca0":"markdown","57175489":"markdown","e0635d99":"markdown"},"source":{"f2435aee":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom collections import Counter","b958acb0":"train = pd.read_json('..\/input\/stanford-covid-vaccine\/train.json', lines=True)\ntest = pd.read_json('..\/input\/stanford-covid-vaccine\/test.json', lines=True)\nsubmission = pd.read_csv('..\/input\/stanford-covid-vaccine\/sample_submission.csv')","936bf973":"print(f\"Train Shape: {train.shape}\")\nprint(f\"Test Shape: {test.shape}\")\nprint(f\"Submission Shape: {submission.shape}\")","f691a7a1":"print(f\"Train Columns: {train.columns.values}\")\nprint(f\"Test Columns: {test.columns.values}\")\nprint(f\"Submission Columns: {submission.columns.values}\")","dfb6521c":"train.head()","c9c5866e":"train.id.duplicated().sum()","366d82a1":"test.id.duplicated().sum()","6cb1ae7c":"train.head(1).sequence.values[0]","0b4dd321":"len(train.head(1).sequence.values[0])","0d8ff714":"seq_train_lengths = []\nfor i in range(train.shape[0]):\n    seq_train_lengths.append(len(train.sequence.values[i]))\n\n\nseq_test_lengths = []\nfor i in range(test.shape[0]):\n    seq_test_lengths.append(len(test.sequence.values[i]))","28783235":"set(seq_train_lengths)","999510ad":"set(seq_test_lengths)","ea81311a":"train.seq_length.value_counts()","5bbe3534":"test.seq_length.value_counts()","60b66d0a":"Counter(train.head(1).sequence.values[0])","3ed4fe65":"train.structure.head(1).values[0]","da90c190":"Counter(train.structure.head(1).values[0])","a757c2d2":"train.structure.value_counts()","5731ee9e":"test.structure.value_counts()","ee9fab80":"struc_train_lengths = []\nfor i in range(train.shape[0]):\n    struc_train_lengths.append(len(train.structure.values[i]))\n\n\nstruc_test_lengths = []\nfor i in range(test.shape[0]):\n    struc_test_lengths.append(len(test.structure.values[i]))","37a0095b":"set(struc_train_lengths)","04740a6f":"set(struc_test_lengths)","57d2b126":"train.predicted_loop_type.head(1).values[0]","3522c6a7":"len(train.predicted_loop_type.head(1).values[0])","c0409e37":"Counter(train.predicted_loop_type.head(1).values[0])","0db6d399":"train.seq_scored.value_counts()","2068bc3f":"test.seq_scored.value_counts()","4c18eb40":"## Undestanding the Sequence column","1dbb496d":"## Undestanding seq_scored column","1e03ac9b":"## Duplicated ids","25c06951":"## Undestanding the Structure column","b1e92de8":"Train and test sets can have different seq lengths","5f07dca0":"# Undestanding the predicted_loop_type column","57175489":"Only the following are scored: reactivity, deg_Mg_pH10, and deg_Mg_50C","e0635d99":"As expected structure lengths match with sequence lenght"}}