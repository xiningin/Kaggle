{"cell_type":{"71f906af":"code","0c2f87d2":"code","472a20df":"code","830ef0fb":"code","b141a76a":"code","5eff0ac5":"code","bdd735a7":"code","d776e971":"code","990ddb79":"code","c3d87979":"markdown","440681de":"markdown"},"source":{"71f906af":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0c2f87d2":"from keras.applications.resnet50 import ResNet50\nfrom keras.applications.resnet50 import preprocess_input, decode_predictions\nfrom keras.preprocessing import image\nimport numpy as np\nprint('Imported Successfully!')","472a20df":"model = ResNet50(weights='imagenet')\nprint('Model Downloaded Successfully!')","830ef0fb":"from PIL import Image\nfrom zipfile import ZipFile","b141a76a":"img_path = '\/kaggle\/input\/images-for-resnet\/tiger.jfif'\nimg = image.load_img(img_path,target_size=(224,224))\nx = image.img_to_array(img)\nx = np.expand_dims(x,axis=0)\nx = preprocess_input(x)\nprint('Image Processing Done!')","5eff0ac5":"pred = model.predict(x)\n# decode the results into a list of tuples (class, description, probability)\nprint(decode_predictions(pred,top=3)[0])","bdd735a7":"img_path = '\/kaggle\/input\/images-for-resnet\/glasses.jfif'\nimg = image.load_img(img_path,target_size=(224,224))\nx = image.img_to_array(img)\nx = np.expand_dims(x,axis=0)\nx = preprocess_input(x)\nprint('Image Processing Done!')\n\npred = model.predict(x)\n# decode the results into a list of tuples (class, description, probability)\nprint(decode_predictions(pred,top=3)[0])","d776e971":"img_path = '\/kaggle\/input\/images-for-resnet\/nature1.jfif'\nimg = image.load_img(img_path,target_size=(224,224))\nx = image.img_to_array(img)\nx = np.expand_dims(x,axis=0)\nx = preprocess_input(x)\nprint('Image Processing Done!')\n\npred = model.predict(x)\n# decode the results into a list of tuples (class, description, probability)\nprint(decode_predictions(pred,top=3)[0])","990ddb79":"img_path = '\/kaggle\/input\/images-for-resnet\/viratkohli.jfif'\nimg = image.load_img(img_path,target_size=(224,224))\nx = image.img_to_array(img)\nx = np.expand_dims(x,axis=0)\nx = preprocess_input(x)\nprint('Image Processing Done!')\n\npred = model.predict(x)\n# decode the results into a list of tuples (class, description, probability)\nprint(decode_predictions(pred,top=3)[0])","c3d87979":"**In this Notebook we loaded a pretrained ResNet model and used our own image files to see the predicted labels agains it.**","440681de":"Loading a Resnet model"}}