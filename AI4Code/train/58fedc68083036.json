{"cell_type":{"d583cef9":"code","bb5a378d":"code","60832a1f":"code","715bf732":"code","379b067a":"code","ea298f64":"code","aedf63ab":"code","3376823a":"code","fc5d5512":"code","8aa56230":"code","b2e50bbb":"code","0a218fe3":"code","74b9da60":"code","46765998":"code","0f860932":"code","627b3b15":"code","47ca5126":"code","dede72b3":"code","165dbb48":"code","b09bdc57":"code","b35ad038":"code","7a553a3c":"code","e06f4af6":"code","cc55552b":"code","ac1c071c":"code","62ec4293":"code","4810f0d0":"code","3dce937f":"code","57ae644b":"code","5d6d7de5":"markdown","dad936d1":"markdown","f2ad424a":"markdown","7dc1e904":"markdown","23218ad7":"markdown","de92f7bd":"markdown","867e3789":"markdown","d9bc9070":"markdown","6219a094":"markdown","d4d6c2ed":"markdown","b05a34ab":"markdown","1d90182e":"markdown","001b7639":"markdown","22645948":"markdown","6dc35907":"markdown","74f87ec7":"markdown","559c4cd9":"markdown","761262fd":"markdown","0ef7434b":"markdown","f0828d95":"markdown","12408df7":"markdown","050dbcef":"markdown"},"source":{"d583cef9":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline ","bb5a378d":"df = pd.read_csv('..\/input\/loan-data-lending-club\/loan_data.csv')","60832a1f":"df.info()","715bf732":"df.head()","379b067a":"df.describe()","ea298f64":"sns.set_theme()\nsns.displot(df, x = 'fico', hue ='credit.policy', bins = 30, aspect = 1.5, palette = ['red', 'blue'], alpha = 0.6)\nplt.xlabel('FICO')","aedf63ab":"sns.displot(df, x = 'fico', hue ='not.fully.paid', bins = 30, aspect = 1.5, palette = ['red', 'blue'], alpha = 0.6,)\nplt.xlabel('FICO')","3376823a":"plt.figure(figsize=(13, 7))\nsns.countplot(x = 'purpose',data=df, hue = 'not.fully.paid', palette = 'Set1')\nplt.yticks(np.arange(0, 3600, step=200));","fc5d5512":"sns.jointplot(x='fico', y ='int.rate', data = df, color = 'red')","8aa56230":"plt.figure(figsize=(12,8))\nsns.lmplot(y='int.rate',x='fico',data=df,hue='credit.policy',\n           col='not.fully.paid',palette='Set1' )","b2e50bbb":"df.info()","0a218fe3":"# Create a list of 1 element containing the string 'purpose'. Call this list cat_feats.\ncat_feats = ['purpose']\n# Now use pd.get_dummies(loans,columns=cat_feats,drop_first=True) to create a fixed larger dataframe\n#that has new feature columns with dummy variables. Set this dataframe as final_data. #\nfinal_data = pd.get_dummies(df,columns=cat_feats,drop_first=True)","74b9da60":"final_data.info()","46765998":"from sklearn.model_selection import train_test_split","0f860932":"X = final_data.drop('not.fully.paid',axis=1)\ny = final_data['not.fully.paid']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","627b3b15":"from sklearn.tree import DecisionTreeClassifier","47ca5126":"dtree = DecisionTreeClassifier()","dede72b3":"dtree.fit(X_train,y_train)","165dbb48":"pred = dtree.predict(X_test)","b09bdc57":"from sklearn.metrics import classification_report,confusion_matrix","b35ad038":"print(classification_report(y_test,pred))","7a553a3c":"print(confusion_matrix(y_test,pred))","e06f4af6":"from sklearn.ensemble import RandomForestClassifier","cc55552b":"rfc = RandomForestClassifier(n_estimators=600)","ac1c071c":"rfc.fit(X_train,y_train)","62ec4293":"pred_2 = rfc.predict(X_test)","4810f0d0":"from sklearn.metrics import classification_report,confusion_matrix","3dce937f":"print(classification_report(y_test, pred_2))","57ae644b":"print(confusion_matrix(y_test,pred_2))","5d6d7de5":"**Takeaways:**\n* Higher FICO scores generally led to lower interest rates. \n* It can be noticed that those who have paid off the loans are uniformly distributed with low and high FICO scores and interest rates. However, those who did not fully pay back generally had lower FICO scores.","dad936d1":"# Get the Data\n","f2ad424a":"**Now create a classification report from the results. Do you get anything strange or some sort of warning?**","7dc1e904":"**Explore and view the dataset:**","23218ad7":"\n# Python Machine Learning Project\n\nAuthor: Rawaha Nakhuda\n\nDate: 02\/11\/2021\n\n---\n\n# Classification Project using Random Forests\n\nThis project was part of the [Python for Data Science and Machine Learning Bootcamp](https:\/\/www.udemy.com\/course\/python-for-data-science-and-machine-learning-bootcamp\/) by Jose Portilla on Udemy. \n\nFor this project we will be exploring publicly available data from [LendingClub.com](www.lendingclub.com). Lending Club connects people who need money (borrowers) with people who have money (investors). This project will aim to study the dataset and use machine learning models to help predict whether a borrower would pay people back.\n\nData from 2007-2010 and be trying to classify and predict whether or not the borrower paid back their loan in full. The data can be downloaded from [here](https:\/\/www.lendingclub.com\/info\/download-data.action). \n\nAs part of the project, the csv file in use is already cleaned and does not contain NA values. \n\nThe columns in this dataset represent the following:\n* credit.policy: 1 if the customer meets the credit underwriting criteria of LendingClub.com, and 0 otherwise.\n* purpose: The purpose of the loan (takes values \"credit_card\", \"debt_consolidation\", \"educational\", \"major_purchase\", \"small_business\", and \"all_other\").\n* int.rate: The interest rate of the loan, as a proportion. Borrowers judged by LendingClub.com to be more risky are assigned higher interest rates.\n* installment: The monthly installments owed by the borrower if the loan is funded.\n* log.annual.inc: The natural log of the self-reported annual income of the borrower.\n* dti: The debt-to-income ratio of the borrower (amount of debt divided by annual income).\n* fico: The FICO credit score of the borrower.\n* days.with.cr.line: The number of days the borrower has had a credit line.\n* revol.bal: The borrower's revolving balance (amount unpaid at the end of the credit card billing cycle).\n* revol.util: The borrower's revolving line utilization rate (the amount of the credit line used relative to total credit available).\n* inq.last.6mths: The borrower's number of inquiries by creditors in the last 6 months.\n* delinq.2yrs: The number of times the borrower had been 30+ days past due on a payment in the past 2 years.\n* pub.rec: The borrower's number of derogatory public records (bankruptcy filings, tax liens, or judgments).","de92f7bd":"## Train Test Split\n\nNow its time to split our data into a training set and a testing set!","867e3789":"**2. Figure which loans were most popular and which had high rates of customers not fully paying back:**","d9bc9070":"**3. Understand the role of interest rates and check relation between interest rates, FICO scores, credit policy and whether they fully paid back loans or not:**","6219a094":"**Comparing Decision Trees vs Random Forests:**\n\n* Neither did particularly well, more feature engineering is required.\n* On average, the random forests model did better, especially in class 0 range.\n* However, in class 1, the random forests did poorly, so it depends on what we are trying to optimize. ","d4d6c2ed":"## Predictions and Evaluation - Decision Tree\n**Create predictions from the test set and create a classification report and a confusion matrix.**","b05a34ab":"## Training the Random Forest model\n\nNow its time to train our model!\n\n**Create an instance of the RandomForestClassifier class and fit it to our training data from the previous step.**","1d90182e":"## Training a Decision Tree Model\n\nLet's start by training a single decision tree first!\n","001b7639":"# Import Libraries\n","22645948":"**Show the Confusion Matrix for the predictions.**","6dc35907":"# Exploratory Data Analysis\n\nTo proceed, let us explore the dataset with some basic data visualization to understand trends and the data in more detail. \n\n **1. We need to understand how a person classifies for a loan in the first place and figure out how that correspond toa person eventually paying it back.**\n \nOne such measure is the FICO score. Let us visualize how that relates to the credit.policy and the not.fully.paid columns.","74f87ec7":"## Categorical Features\n\nThe **purpose** column is categorical, this means we need to transform them using dummy variables so sklearn will be able to understand them. Let's do this in one clean step using pd.get_dummies.\n\nThis way of dealing with these columns can be expanded to multiple categorical features if necessary.\n","559c4cd9":"**Takeaways:**\n* There is a clear threshold that relates FICO score to credit policy. We can see that customers with a FICO score of approx 660 or below were denied loans.\n* However, the customers who did not pay back loans were much more varied, and had high FICO scores as well.","761262fd":"**Create an instance of DecisionTreeClassifier() called dtree and fit it to the training data.**","0ef7434b":"**Create an lmplot to notice difference between fully paid and credit policy**","f0828d95":"## Predictions and Evaluation - Random Forests\n\nLet's predict off the y_test values and evaluate our model.\n\n** Predict the class of not.fully.paid for the X_test data.**","12408df7":"**Takeaways:**\n* Debt consolidation is by far the most popular purpose for taking a loan.\n* However, it can be seen that there is no specific loan which has a high percentage of not fully paid. \n","050dbcef":"# Setting up the Data\n\nSetting up data for our Classification Model!\n"}}