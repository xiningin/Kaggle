{"cell_type":{"c99303a8":"code","cd742b2e":"code","fc036c98":"code","f54abac0":"code","d032a223":"code","f0e8375f":"code","fb3a6140":"code","15b48f2e":"code","aa58ea51":"code","dbd40c33":"code","47a3af6d":"code","64409dfd":"code","8fd93191":"code","80397a82":"code","555bfd83":"code","5b6f57d9":"code","6f19d55a":"code","53704517":"code","b85b0456":"code","e54c80de":"code","7434d260":"code","bbc0d21b":"code","10904366":"code","fc94620e":"code","cfdc41fa":"markdown","5378e3e3":"markdown","6b954ac2":"markdown","c2825da3":"markdown","efb8650a":"markdown","ecfd35bb":"markdown","44060c0c":"markdown","26c33fe9":"markdown","5ce2cae7":"markdown","a0b733d2":"markdown","437c9d24":"markdown","fcf92e46":"markdown","8f9f5133":"markdown","4bbe7835":"markdown","a1449365":"markdown","2fd4d889":"markdown"},"source":{"c99303a8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cd742b2e":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno\n%matplotlib inline","fc036c98":"train_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_data = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\n\nprint(\"Training dataset contains: \"+str(train_data.shape)+ \" rows and columns\")\nprint(\"Testing dataset contains: \"+str(test_data.shape)+ \" rows and columns\")","f54abac0":"#Let's look at first 5 rows of the training dataset\ntrain_data.head()","d032a223":"#Look at the name of the 12 columns\ntrain_data.columns","f0e8375f":"train_data.info()\nprint('-'*40)\ntest_data.info()","fb3a6140":"#Looking at the null values in the train dataset\ntrain_data.isnull().sum().sort_values(ascending=False)","15b48f2e":"#This bar graph is not solving any purpose it's just for the visual \ntrain_data.isnull().sum().sort_values(ascending=False).plot(kind='bar')","aa58ea51":"#Looking at the null values in the test dataset\ntest_data.isnull().sum().sort_values(ascending= False)","dbd40c33":"test_data.isnull().sum().sort_values(ascending= False).plot(kind='bar')","47a3af6d":"#how many out of total(train) survived on titanic\ntrain_data['Survived'].value_counts()","64409dfd":"#categorical variable\n#how many women survived on the titanic\ntrain_data.groupby('Sex')['Survived'].mean()","8fd93191":"#PCLASS - 1ST, 2ND,3RD\ntrain_data.Pclass.value_counts()","80397a82":"train_data.groupby('Pclass')['Survived'].mean()","555bfd83":"#EMBARKED\ntrain_data.Embarked.value_counts()","5b6f57d9":"train_data.groupby('Embarked')['Survived'].mean()","6f19d55a":"#SibSp- Number of siblings\ntrain_data.groupby('SibSp')['Survived'].mean().sort_values(ascending=False)","53704517":"#Parch- Number of parents\/childer aboard\ntrain_data.groupby('Parch')['Survived'].mean().sort_values(ascending=False)","b85b0456":"#let's create countplot for all the categorical features \ncountplot_features = ['Survived','Sex','Pclass','Embarked','SibSp','Parch']\ncountlist = list(enumerate(countplot_features)) #enumerate map the iteration value with each variable in list\n\nplt.style.use('ggplot')\nplt.figure(figsize=(10,10))\nplt.suptitle('Countplot of Categorical features') #main title\n\nfor i in countlist:\n    plt.subplot(2,3,i[0]+1) #2 means 2 rows and 3 means 3 columns and i[0]+1 the position of plot where i[0] means return 1st element of enumerate i.e. iterable 0,1,2,3,..\n    sns.countplot(data = train_data , x=i[1],hue = 'Survived')\n    plt.legend(['Not Survived','Survived'])\n    \nplt.tight_layout()\nplt.show()\n    ","e54c80de":"#look at the distribution of numerical variables i.e. Age and Fare\n\nnum_features = ['Age','Fare']\nnum_list = list(enumerate(num_features))\n\nplt.figure(figsize = (12,5))\nplt.suptitle('Distribution and Outliers of Numerical features')\n\nfor i in num_list:\n    plt.subplot(1,4,i[0]+1)\n    sns.boxplot(data=train_data[i[1]])\n    plt.xlabel(str(i[1]))\n    \nfor i in num_list:\n    plt.subplot(1,4,i[0]+3)\n    sns.histplot(data = train_data[i[1]])\n    plt.xlabel(str(i[1]))\n    \nplt.show()","7434d260":"plt.figure(figsize=(14,7))\nplt.suptitle('Distribution and Kernal density estimation of numerical features')\n\nfor i in num_list:\n    plt.subplot(2,1,i[0]+1)\n    sns.histplot(data=train_data[i[1]],kde=True,bins=30)\n    plt.xlabel(str(i[1]))\n    \nplt.show()","bbc0d21b":"plt.figure(figsize=(10,6))\nplt.title('Correlation of independent variable with dependent variable (Survived)')\n\ncorr=train_data.corr()\nsns.heatmap(corr,cmap='Blues')","10904366":"plt.figure(figsize=(10,8))\nplt.title('Correlation of independent variable with dependent variable (Survived)')\n\nplt.style.use('fivethirtyeight')\ncorr1 = train_data.corr()['Survived'].sort_values(ascending=False)[1:]\nsns.barplot(x=corr1.index,y = corr1, color=(0.90,0.30,0.50))\nplt.tight_layout()\nplt.show()","fc94620e":"plt.figure(figsize=(15,5))\nplt.suptitle(\"Probability Distribution of numerical columns according to number of Survived\", fontsize = 20)\nfor i in num_list:\n    plt.subplot(1,2,i[0]+1)\n    sns.kdeplot(data=train_data, x=i[1], hue=\"Survived\")\nplt.tight_layout()\nplt.show()","cfdc41fa":"* Here we have 5 object data type variables i.e. Categorical (Name, Sex, Ticket, Cabin, Embarked)\n    and the rest are Numerical","5378e3e3":"### Bivariate and Multivariate analysis\n\nAs we have all the information about the independent variables, let's try to analyze the relationship between these independent variables and how they are correlated\n","6b954ac2":"### 2. Loading Dataset\n\nWe are provided with train and test data csv files. \n\nDividing the dataset into train and test set helps in training our model on \"train\" dataset and testing out model or predicting out \"target\" variable on \"test\" dataset. By doing this, we are trying to test our model on unseen or unbiased data which helps in avoiding overfitting.","c2825da3":"Looking at the above image, it can be observed that:\n1. People had a higher chance of survival if they had a higher fair ","efb8650a":"#### Numerical Features","ecfd35bb":"### 1. Importing libraries ","44060c0c":"### 3. EDA","26c33fe9":"* 74% women out of total survived were women","5ce2cae7":"What sorts of people were more likely to survive?\u201d using passenger data (ie name, age, gender, socio-economic class, etc).","a0b733d2":"#### Provided information about columns\n* Survived: Survival (0 = No; 1 = Yes)\n* Pclass  : Passenger Class (1 = 1st; 2 = 2nd; 3 = 3rd)\n* Name    : Name\n* Sex     : Sex\n* Age     : Age\n* Sibsp   : Number of Siblings\/Spouses Aboard\n* Parch   : Number of Parents\/Children Aboard\n* Ticket  : Ticket Number\n* Fare    : Passenger Fare\n* Cabin   : Cabin Number\n* Embarked: Port of Embarkation (C = Cherbourg; Q = Queenstown; S = Southampton)\n","437c9d24":"![](http:\/\/www.hakaimagazine.com\/wp-content\/uploads\/header-titanic-solar-storms.jpg)","fcf92e46":"## Feature Engineering and Model Building\nI am still learning how to build models and I will cover this topic in the next notebook. Stay tuned. \n\nThank You \ud83d\ude0a ","8f9f5133":"#### UNIVARIATE ANALYSIS \n##### It is the simplest form of statistical analysis. Uni means \"One\" so that means analyzing each variable in the data. In univariate analysis we are not looking at cause or relationship between variables\n\nLet's start looking at variables one by one starting with Survived (target variable)","4bbe7835":"# Titanic  \nProblem - Use machine learning to create a model that predicts which passengers survived the Titanic shipwreck.\n\nQuestion to answer- What sorts of people were more likely to survive? ","a1449365":"* 25% of people from third class survived the titanic compared to 63% for first class","2fd4d889":"### Data Visualization\n#### Categorical features\n\nThese are the visual representation of all the above variables. It makes it easy to view in one place"}}