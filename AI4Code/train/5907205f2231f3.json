{"cell_type":{"30da204e":"code","c5761496":"code","b7b867a8":"code","e97420d7":"code","97b2f8cd":"code","454a6dc5":"code","c8df05b9":"code","36e1e3a6":"code","69760ced":"code","1f468bc4":"code","518728fc":"code","1482320a":"code","4c7d25bd":"code","f4517adb":"code","0ccd8433":"code","6b79b8c4":"code","d740d85e":"code","385050ea":"code","5b2e3f9b":"code","05a9bf66":"code","71d9cc8f":"code","b816c0fe":"markdown","e5030797":"markdown","7e9b1b33":"markdown","edbe8079":"markdown","7bfee450":"markdown","0b703aaf":"markdown","1df1308b":"markdown","acbb260f":"markdown","9d7fc2dc":"markdown","cf568710":"markdown","bb1648a5":"markdown","479de560":"markdown","8cee818a":"markdown","5f42758d":"markdown","4aaf581a":"markdown","3cf72512":"markdown","3697c564":"markdown","7a2a0e21":"markdown","e34f67d2":"markdown","b508d7cb":"markdown","9d61c1a1":"markdown","2ab0eef5":"markdown","ad886eda":"markdown","e3652fcd":"markdown","01803ca9":"markdown","569167d9":"markdown","16a7ebbf":"markdown"},"source":{"30da204e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport plotly.plotly as py\nimport seaborn as sns\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport sys\nimport warnings\n\nif not sys.warnoptions:\n    warnings.simplefilter(\"ignore\")\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","c5761496":"data=pd.read_csv(\"..\/input\/AppleStore.csv\")\ndata.head()","b7b867a8":"data.drop([\"Unnamed: 0\",\"id\",\"currency\",\"cont_rating\",\"vpp_lic\",\"ipadSc_urls.num\",\n           \"ver\"],axis=1,inplace=True)\ndata.dropna(inplace=True)","e97420d7":"data.size_bytes=data.size_bytes\/(1024*1024)\ndata.size_bytes=data.size_bytes.astype(int)\ndata.rename({\"size_bytes\":\"size_mb\"},axis=1,inplace=True)\ndata.head()","97b2f8cd":"data.describe()","454a6dc5":"#Correlation Maps\nf,ax=plt.subplots(figsize=(10,10))\nsns.heatmap(data.corr(),annot=True,linewidth=0.5,linecolor=\"red\",fmt=\".1f\",ax=ax)\nplt.show()","c8df05b9":"df_free=data.price\ndf_free=[\"free\" if i==0 else \"paid\" for i in df_free]\ndata_pair=data.loc[:,[\"size_mb\",\"price\",\"rating_count_tot\",\"user_rating\",\"prime_genre\"]]\ndata_pair[\"free_paid\"]=df_free\nsns.pairplot(data_pair,palette=\"dark\",hue=\"free_paid\")\nplt.show()","36e1e3a6":"sns.countplot(data_pair.free_paid)\nplt.title(\"Count of paid & free apps\",fontsize=15)","69760ced":"genre_list=data.prime_genre.value_counts()\nlabels=genre_list.index\nvalues=genre_list.values\ntrace={\"values\":values,\"labels\":labels,\"domain\":{\"x\":[0,0.95]},\"name\":\"number of genre\",\n       \"hoverinfo\":\"label+percent+value\",\"hole\":0.3,\"type\":\"pie\"}\nlayout={\"autosize\":False,\"width\":800,\"height\":800,\n        \"title\":\"Pie Chart of Number of Genre\",\"annotations\":[{\"font\":{\"size\":16},\"showarrow\":False,\n                                                              \"text\":\"Number of apps\",\"x\":0.11,\"y\":0.95}]}\ndata1=[trace]\nfig=go.Figure(data=data1,layout=layout)\niplot(fig)","1f468bc4":"genre_size=data.loc[:,[\"prime_genre\",\"size_mb\"]]\ngenre_size=genre_size.groupby(\"prime_genre\").mean()\nnew_index=(genre_size[\"size_mb\"].sort_values(ascending=False)).index.values\ngenre_size=genre_size.reindex(new_index)\ngenre_size.head()","518728fc":"plt.figure(figsize=(10,6))\nsns.barplot(x=genre_size.index,y=genre_size.size_mb,palette=\"dark\")\nplt.xticks(rotation=75)\nplt.xlabel(\"Genre of apps\")\nplt.ylabel(\"Average sizes\")\nplt.title(\"Average size of App Genres\")\nplt.show()","1482320a":"trace=go.Histogram(x=data.user_rating,name=\"User Ratings\",marker=dict(color=\"rgb(165,70,225)\"),text=\"apps\")\ndata1=[trace]\nlayout=go.Layout(autosize=False,width=800,height=500,title=\"Histogram of User Ratings\",xaxis=dict(title=\"Rating\"),yaxis=dict(title=\"Count\"))\nfig=go.Figure(data=data1,layout=layout)\nprint(\"Average rating: \",np.mean(data.user_rating))\niplot(fig)","4c7d25bd":"groups = data.groupby('prime_genre').filter(lambda x: len(x) > 178)\ngroups['user_rating'].hist(by=groups['prime_genre'], sharex=True, figsize=(16,12),color=\"orange\")\nplt.show()","f4517adb":"data1=[]\nfor i in data.prime_genre.value_counts().index[:12]:\n    trace=go.Box(y=data.loc[data.prime_genre==i][\"user_rating\"],name=i)\n    data1.append(trace)\niplot(data1)","0ccd8433":"updated = data[data[\"rating_count_tot\"]>180000]\nupdated=updated.loc[:,[\"track_name\",\"rating_count_tot\",\"rating_count_ver\"]]\nupdated[\"when_update\"]=(updated.rating_count_ver\/updated.rating_count_tot)\nupdated[\"when_update\"]=(updated.when_update-np.min(updated.when_update))\/(np.max(updated.when_update)-np.min(updated.when_update))\nupdated.index = np.arange(1,len(updated)+1)\n\ntrace=go.Scatter(x=updated.index,y=updated.when_update,mode=\"markers\",text=updated.track_name,\n                marker=dict(color=\"rgba(0,55,170,0.8)\"))\ndata1=[trace]\nlayout=dict(title=\"How Updated Applications\",xaxis=dict(title=\"Application List\",zeroline=False,ticklen=5),\n           yaxis=dict(title=\"Updating dates\",ticklen=5,zeroline=False))\nfig=dict(data=data1,layout=layout)\niplot(fig)","6b79b8c4":"drop_=updated[(updated.track_name==\"Infinity Blade\")|(updated.track_name==\"Real Basketball\")|\n              (updated.track_name==\"WhatsApp Messenger\")|\n              (updated.track_name==\"Zillow Real Estate - Homes for Sale & for Rent\")].index\nupdated.drop(drop_,inplace=True)\n\ntrace=go.Scatter(x=updated.index,y=updated.when_update,mode=\"markers\",text=updated.track_name,\n                marker=dict(color=\"rgba(255,0,10,0.9)\"))\ndata1=[trace]\nlayout=dict(title=\"How Updated Applications\",xaxis=dict(title=\"Application List\",zeroline=False,ticklen=5),\n           yaxis=dict(title=\"Updating dates\",ticklen=5,zeroline=False))\nfig=dict(data=data1,layout=layout)\niplot(fig)","d740d85e":"g=sns.jointplot(data[\"price\"],data[\"user_rating\"],color=\"brown\")\nsns.set(context='notebook',style='darkgrid')","385050ea":"data_=data[data.price<200]\ng=sns.jointplot(data_[\"price\"],data_[\"user_rating\"],color=\"brown\")\nsns.set(context='notebook',style='darkgrid')","5b2e3f9b":"groups = data.groupby('prime_genre').filter(lambda x: len(x) > 178)\nfig, ax = plt.subplots()\nfig.set_size_inches(10, 8)\np = sns.stripplot(x=\"price\", y=\"prime_genre\", data=groups, jitter=True, linewidth=1)","05a9bf66":"groups=groups[groups.price<100]\nfig, ax = plt.subplots()\nfig.set_size_inches(10, 8)\np = sns.stripplot(x=\"price\", y=\"prime_genre\", data=groups, jitter=True, linewidth=1)","71d9cc8f":"import plotly\nplotly.tools.set_credentials_file(username='EmreTatbak', api_key='fauFOQaAjN8EoOG8b6Vx')\n\ngenre_price=data.loc[:,[\"prime_genre\",\"price\"]]\ngenre_price=genre_price.groupby(\"prime_genre\").mean()\nnew_index=(genre_price[\"price\"].sort_values(ascending=False)).index.values\ngenre_price=genre_price.reindex(new_index)\ngenre_price.index[1:11]\ngenre_price.values[1:11]\n\ndata1 = [go.Scatterpolar(\n  r = genre_price.values[:10],\n  theta = genre_price.index[:10],\n  fill = 'toself'\n)]\n\nlayout = go.Layout(autosize=False,\n    width=750,\n    height=750,\n  polar = dict(\n    radialaxis = dict(\n      visible = True,\n      range = [0, np.max(genre_price.values[:10])]\n    )\n  ),\n  showlegend = False\n)\n\nfig = go.Figure(data=data1, layout=layout)\npy.iplot(fig,)","b816c0fe":"We can see game sector is dominated app store market place. More than half of them are \"Game\" applicaions. \"Entertainment\" and \"Education\" are following to game with around 7 percent.","e5030797":"* On this kernel we will try to understand App Store dataset. Although it looks complicated, under some data science skills we will make it easier. So let's start..","7e9b1b33":"Here we cleaned our dataset, let's check some statistical informatin","edbe8079":"Let's check our datas sorted by groups","7bfee450":"On the radar chart we can see distribution of mean prices of first 10 apps","0b703aaf":"Oppsss we have outliers again. Let's remove them!","1df1308b":"We can have a look closer to user rating of each genre (highest six genre)\n\n**Keep going with comparing of each average ratings**","acbb260f":"We can see relationship between datas. Also we grouped our apps as \"free\" and \"paid\"","9d7fc2dc":"Although the users mostly gave 4.5 point, average app rating is 3.5\n\nLet's go deeper and **check all genres!!**","cf568710":"We can see that prices of most rated apps are between 0 and 20 USD\n\nAlso most installed apps are free or 1 USD.\n\nDon't stop! Keep going to check price of genres.","bb1648a5":"**DATA CLEANING**","479de560":"Now we have more statistical information about our data. It is over? No keep going to discover more details..\n\nLet's try to find out how they are updated. We will try a basic method to undertand it is updated or not. But how? \n\n**When_Updated=(Latest_Version_Rating) \/ (Total_Rating)**-----> If the result is bigger than others, that means that our app is recently updated.","8cee818a":"* Conclusion\n\nHere we analysed our dataset in order to get some clear results. We used seaborn and pyplot libraries to show our dataset with graphs and some charts. We cleared and prepared dataset for machine learning algorithms. Our dataset is purely clear that we can make some prediction for the future. \n\n* If you have any question or advise feel free to ask me. I am waiting for your comments :)\n\nSpecial thanks to Lavanya Gupta for giving me inspiration.\n\nSpecial thanks to DATAI Team for the tutorials.","5f42758d":"**Meaning of columns:**\n\n* \"size_bytes\": Size (in Bytes)\n* \"rating_count_tot\": User Rating counts (for all version)\n* \"rating_count_ver\": User Rating counts (for current version)\n* \"user_rating\" : Average User Rating value (for all version)\n* \"user_rating_ver\": Average User Rating value (for current version)\n* \"cont_rating\": Content Rating\n* \"sup_devices.num\": Number of supporting devices\n* \"ipadSc_urls.num\": Number of screenshots showed for display\n* \"lang.num\": Number of supported languages\n* \"vpp_lic\": Vpp Device Based Licensing Enabled","4aaf581a":"As we can see that which app is more close to top of the graph, it is more updated than others. With that basic codes we found out which app is updated.\n\n**Infinity Blade and Real Basketball are most recent updated apps.** Lets remove outliers and check again.","3cf72512":"Let's check size of genres","3697c564":"Amount of free apps are more than paid apps","7a2a0e21":"**Price vs Rating**","e34f67d2":"Let's convert byte to megabyte","b508d7cb":"Now our graph is more clear, the updated apps could be seen\n\n","9d61c1a1":"Yes, now we have a better view. We can see that game applications are more expensive than others. The scale of game apps are between 0-10 USD. But the others are between 0-5 USD.\n\n**Let's close this kernel with an interesting chart!**","2ab0eef5":"We will not use all the columns, let's remove some which we don't need","ad886eda":"![](http:\/\/i.hurimg.com\/i\/hurriyet\/75\/750x422\/5b973f3c0f25431164667ba6.jpg)","e3652fcd":"We calculated mean size of each genres and sorted","01803ca9":"Let's remove outlier prices and check again","569167d9":"**Basic EDA**","16a7ebbf":"It is obviously seen that \"Medical\" and \"Games\" apps have greater size than others. \n\nKeep going with reviews"}}