{"cell_type":{"68921fe8":"code","a630bd83":"code","b3ff5ffc":"code","85b565dc":"code","0a4469b6":"code","039cd59d":"code","1860f8c2":"code","d1bc931a":"code","78e5e270":"code","f07592f2":"code","0a5ffaf8":"code","cd242eb3":"code","74772d8a":"code","049ea2dd":"code","dd01926a":"code","0695606d":"code","42d0b9f0":"code","cb61d75e":"code","b705e14a":"code","f4d74a9e":"code","e0fe8754":"code","9adfe121":"code","88b17a82":"code","1d56a731":"code","d4f22c50":"code","52e9dd02":"code","1c0e04b0":"code","62dbb522":"code","f1135339":"code","2e679619":"code","92c5e573":"code","c82c6e77":"code","4d0fc593":"code","cdb5d42a":"code","a39189fb":"code","0251f050":"code","32d682ce":"code","1c0c82dd":"code","c89c9ae8":"code","281400b8":"code","0ad48564":"code","d4c9c341":"code","c61f9789":"code","bc9a1eee":"code","fc10eeb2":"code","e8c799cf":"code","b087fdf1":"code","0865f22a":"code","21a836e9":"code","eb36d5f0":"code","9e503042":"code","d08ce22b":"code","b3a69106":"code","55b6549b":"code","095343ee":"code","ffbc8597":"code","29231f91":"code","5c16de04":"code","8f26256a":"code","ed90cc13":"code","2f6488e4":"code","5affd64f":"code","26c0acb6":"code","9c65b063":"code","b0f46252":"code","7dcfa441":"code","2e0a17b4":"code","fcece729":"code","b6a4a91d":"code","1c2bb46d":"code","a7261906":"code","3be8d066":"code","62c7b767":"code","1d837b53":"code","81285f05":"code","415d0dd7":"code","e794792e":"code","f7b0a853":"code","ddab5db7":"code","43555fb6":"code","e2f9b862":"code","c0512751":"code","2c16b65e":"code","f1edd6b6":"code","c06d9148":"markdown","8de7fe18":"markdown","58098ada":"markdown","82be43f0":"markdown","d2761cb0":"markdown","eaf3bfbd":"markdown","d477d49e":"markdown","827bc69e":"markdown","660a9e71":"markdown","8723ac72":"markdown"},"source":{"68921fe8":"! pip install -q kaggle","a630bd83":"! mkdir ~\/.kaggle","b3ff5ffc":"! cp kaggle.json ~\/.kaggle\/","85b565dc":"! chmod 600 ~\/.kaggle\/kaggle.json","0a4469b6":"! kaggle datasets download -d kukuroo3\/used-car-price-dataset-competition-format","039cd59d":"! unzip \/content\/used-car-price-dataset-competition-format.zip","1860f8c2":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","d1bc931a":"xtrain = pd.read_csv('\/content\/X_train.csv')\nytrain = pd.read_csv('\/content\/y_train.csv')\nxtest = pd.read_csv('\/content\/X_test.csv')\nytest = pd.read_csv('\/content\/test_label\/y_test.csv')","78e5e270":"xtest.columns","f07592f2":"xtrain.head()","0a5ffaf8":"xtrain.describe()","cd242eb3":"ytrain.head()","74772d8a":"xtest.head()","049ea2dd":"xtest.describe()","dd01926a":"ytest.head()","0695606d":"fuel_Type = pd.unique(xtrain['fuelType'])\nfuel_Type","42d0b9f0":"from sklearn.preprocessing import LabelEncoder","cb61d75e":"fuel_df = pd.DataFrame(fuel_Type, columns=['Fuel_Types'])\nfuel_df","b705e14a":"labelencoder = LabelEncoder()","f4d74a9e":"labelencoder.fit(xtrain['fuelType'])\nxtrain['fuelType'] = labelencoder.transform(xtrain['fuelType'])\nxtest['fuelType'] = labelencoder.transform(xtest['fuelType'])","e0fe8754":"labelencoder.fit(xtrain['brand'])\nxtrain['brand'] = labelencoder.transform(xtrain['brand'])\nxtest['brand'] = labelencoder.transform(xtest['brand'])","9adfe121":"labelencoder.fit(xtrain['transmission'])\nxtrain['transmission'] = labelencoder.transform(xtrain['transmission'])\nxtest['transmission'] = labelencoder.transform(xtest['transmission'])","88b17a82":"xtrain = xtrain.drop(['model'],axis=1)","1d56a731":"xtrain.head()","d4f22c50":"ytrain.head()","52e9dd02":"xtest = xtest.drop(['model'],axis=1)","1c0e04b0":"xtest.head()","62dbb522":"xtest = xtest.drop(['carID'],axis=1)\nytest = ytest.drop(['carID'],axis=1)\nxtrain = xtrain.drop(['carID'],axis=1)\nytrain = ytrain.drop(['carID'],axis=1)","f1135339":"from sklearn.preprocessing import StandardScaler","2e679619":"scaler = StandardScaler()","92c5e573":"scaler.fit(xtrain)\n\nxtrain = scaler.transform(xtrain)\nxtest = scaler.transform(xtest)","c82c6e77":"from sklearn.linear_model import LinearRegression\nfrom sklearn import metrics","4d0fc593":"mod1 = LinearRegression()","cdb5d42a":"mod1.fit(xtrain, ytrain)","a39189fb":"y_pred_mod1 = mod1.predict(xtest)","0251f050":"mod1.score(xtest, ytest)","32d682ce":"metrics.mean_squared_error(ytest, y_pred_mod1)","1c0c82dd":"metrics.explained_variance_score(ytest, y_pred_mod1)","c89c9ae8":"from sklearn.linear_model import SGDRegressor","281400b8":"mod2= SGDRegressor(max_iter=1000, tol=1e-3)","0ad48564":"mod2.fit(xtrain,ytrain)","d4c9c341":"y_pred_mod2 = mod2.predict(xtest)","c61f9789":"mod2.score(xtest, ytest)","bc9a1eee":"metrics.mean_squared_error(ytest, y_pred_mod2)","fc10eeb2":"metrics.explained_variance_score(ytest, y_pred_mod2)","e8c799cf":"from sklearn.linear_model import Ridge","b087fdf1":"mod3 = Ridge(alpha=1.0)","0865f22a":"mod3.fit(xtrain, ytrain)","21a836e9":"y_pred_mod3 = mod3.predict(xtest)","eb36d5f0":"mod3.score(xtest, ytest)","9e503042":"metrics.mean_squared_error(ytest, y_pred_mod3)","d08ce22b":"metrics.explained_variance_score(ytest, y_pred_mod3)","b3a69106":"from sklearn.linear_model import ElasticNet","55b6549b":"mod4 = ElasticNet(random_state=0)","095343ee":"mod4.fit(xtrain,ytrain)","ffbc8597":"y_pred_mod4 = mod4.predict(xtest)","29231f91":"mod4.score(xtest, ytest)","5c16de04":"metrics.mean_squared_error(ytest, y_pred_mod4)","8f26256a":"metrics.explained_variance_score(ytest, y_pred_mod4)","ed90cc13":"from sklearn import linear_model\nmod5 = linear_model.Lasso(alpha=0.1)","2f6488e4":"mod5.fit(xtrain,ytrain)","5affd64f":"y_pred_mod5 = mod5.predict(xtest)","26c0acb6":"mod5.score(xtest, ytest)","9c65b063":"metrics.mean_squared_error(ytest, y_pred_mod5)","b0f46252":"metrics.explained_variance_score(ytest, y_pred_mod5)","7dcfa441":"from sklearn.ensemble import RandomForestRegressor","2e0a17b4":"mod6 = RandomForestRegressor(max_depth=8, random_state=0)","fcece729":"mod6.fit(xtrain, ytrain)","b6a4a91d":"y_pred_mod6 = mod6.predict(xtest)","1c2bb46d":"mod6.score(xtest, ytest)","a7261906":"metrics.mean_squared_error(ytest, y_pred_mod6)","3be8d066":"metrics.explained_variance_score(ytest, y_pred_mod6)","62c7b767":"mod7 = RandomForestRegressor(max_depth=16, random_state=0)","1d837b53":"mod7.fit(xtrain, ytrain)","81285f05":"y_pred_mod7 = mod7.predict(xtest)","415d0dd7":"mod7.score(xtest, ytest)","e794792e":"metrics.mean_squared_error(ytest, y_pred_mod7)","f7b0a853":"metrics.explained_variance_score(ytest, y_pred_mod7)","ddab5db7":"mod8 = RandomForestRegressor(max_depth=32, random_state=0)","43555fb6":"mod8.fit(xtrain, ytrain)","e2f9b862":"y_pred_mod8 = mod8.predict(xtest)","c0512751":"mod8.score(xtest, ytest)","2c16b65e":"metrics.mean_squared_error(ytest, y_pred_mod8)","f1edd6b6":"metrics.explained_variance_score(ytest, y_pred_mod8)","c06d9148":"### Elastic-Net","8de7fe18":"# Model Testing","58098ada":"# Data Preprocessing","82be43f0":"# Data downloading","d2761cb0":"### SGD Regressor","eaf3bfbd":"\n# Data Preparation","d477d49e":"### Lasso","827bc69e":"### Ridge","660a9e71":"### Linear Regression","8723ac72":"### Random Forest Regressor"}}