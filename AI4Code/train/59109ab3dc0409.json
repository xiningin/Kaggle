{"cell_type":{"99c657d2":"code","794c0459":"code","19ea3a95":"code","c888281b":"code","698e21fd":"code","9facf3d0":"code","2fbd0fb2":"code","94bee94c":"code","47cd1e7a":"code","7413adef":"code","f50358c7":"code","543a7c34":"code","4985d0ac":"code","7b67a5d6":"code","14192bf5":"code","8bf74d41":"code","61d066ba":"code","460fca2b":"code","04a97ddd":"code","53941771":"markdown","ec52e8fc":"markdown","6a1ef29c":"markdown","0e989a5f":"markdown","98078e6b":"markdown","00ab43d0":"markdown","99df47f5":"markdown","5756677d":"markdown"},"source":{"99c657d2":"# Version 2021-10-13\n# \nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import cross_val_score\n\n# added all classifiers which I found in sklearn\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.gaussian_process import GaussianProcessClassifier\nfrom sklearn.gaussian_process.kernels import RBF\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis\nfrom sklearn.model_selection import ShuffleSplit\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.linear_model import SGDClassifier","794c0459":"# data = pd.read_csv(\"train.csv\", index_col=\"PassengerId\" )\n# data_test = pd.read_csv(\"test.csv\", index_col=\"PassengerId\" )\ndata = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\", index_col=\"PassengerId\" )\ndata_test = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\", index_col=\"PassengerId\" )\n","19ea3a95":"data.head(n=3)","c888281b":"cols = data.columns\ndata_test.isna().sum()","698e21fd":"median_age = data['Age'].median()\ndata.loc[(data['Age'].isna()), 'Age'] = median_age\ndata_test.loc[(data_test['Age'].isna()), 'Age'] = median_age\n\nmedian_fare = data['Fare'].median()\ndata.loc[data['Fare'].isna(),'Fare'] = median_fare\ndata_test.loc[data_test['Fare'].isna(),'Fare'] = median_fare","9facf3d0":"data['Embarked'].describe()","2fbd0fb2":"#Fill Embarked with most popular S. Only for training data\ndata.loc[data['Embarked'].isna(),'Embarked'] = 'S'\n# add log of age\ndata['Age_log'] = np.log(data['Age'])\ndata_test['Age_log'] = np.log(data_test['Age'])","94bee94c":"data.isna().sum()","47cd1e7a":"# Convert \nSex_mapping = {'male': 1, 'female': -1}\nEmbarked_mapping = {'S':-1, 'C':0, 'Q':-1}\ndata.replace({'Embarked':Embarked_mapping,\n                    'Sex':Sex_mapping}, inplace=True)\ndata_test.replace({'Embarked':Embarked_mapping,\n                    'Sex':Sex_mapping}, inplace=True)","7413adef":"used_fields = ['Age_log', 'Age','Pclass', 'Sex', 'SibSp', 'Parch', 'Embarked']\ndf_train = data.loc[:, used_fields]\n\ny = data.loc[:, 'Survived']","f50358c7":"scaler = StandardScaler()\nscaler.fit(df_train)","543a7c34":"y = np.array(y, dtype = int)\nX =scaler.transform(df_train)\n\nX_train, X_test, y_train, y_test = \\\n        train_test_split(X, y, test_size=.25, random_state=43)","4985d0ac":"classifiers = {\n    \"Logit\" : LogisticRegression(),\n    \"SGD\" : SGDClassifier(max_iter=1000, tol=1e-3),\n    \"MLP_1\" : MLPClassifier(alpha = 1),\n    \"MLP_2\" : MLPClassifier(alpha = 3 ),\n    \"K-neigh\" : KNeighborsClassifier(3),\n    \"SVN_1\" : SVC(kernel=\"linear\", C=0.025),\n    \"SVN_2\" : SVC(gamma=2, C=1),\n    \"Gauss\" : GaussianProcessClassifier(1.0 * RBF(1.0)),\n    \"Tree\" : DecisionTreeClassifier(max_depth=8),\n    \"Forest 1\" : RandomForestClassifier(max_depth=5, n_estimators=10, max_features=1),\n    \"Forest def\" : RandomForestClassifier(),\n    \"Forest 2\" : RandomForestClassifier(n_estimators=450, max_depth= 10, random_state=0),\n    \"Ada 1\" : AdaBoostClassifier(n_estimators=10, random_state=0),\n    \"Ada 2\" : AdaBoostClassifier(n_estimators=150, random_state=0),\n    \"Ada def\" : AdaBoostClassifier(),\n    \"GaussNB\" : GaussianNB(),\n    \"QDA\" : QuadraticDiscriminantAnalysis()}","7b67a5d6":"cv = ShuffleSplit(n_splits=15, test_size=0.25, random_state=0)\nfor n in  list(classifiers):\n    clf = classifiers[n]\n    clf.fit(X_train, y_train)\n    scores = cross_val_score(clf, X_train, y_train, cv=cv)\n    print(\"%s, %0.3f accuracy with a standard deviation of %0.3f; Test set score %0.2f \"\n          % (n, scores.mean(), scores.std(), clf.score(X_test, y_test)))","14192bf5":"# so, Gauss model won. Took it\nclf = GaussianProcessClassifier(1.0 * RBF(1.0))\nclf.fit(X_train, y_train)\n","8bf74d41":" clf.score(X_test, y_test)","61d066ba":"df_test = data_test.loc[:, used_fields]","460fca2b":"X_tr = scaler.transform(df_test)\nanswer = pd.DataFrame({'PassengerId':df_test.index,'Survived':clf.predict(X_tr)})","04a97ddd":"answer.to_csv(\"submission.csv\", index=False)","53941771":"# Data correction","ec52e8fc":"# EDA","6a1ef29c":"What I did:\n    - filled _Age_ and _Fare_ with median values from training dataset\n    - added log Age: maybe difference in young ages is more important than in older\n    - replaced Sex and Embarked with numbers","0e989a5f":"# Predict","98078e6b":"## Fill the age and Fare","00ab43d0":"# Read the data","99df47f5":"## Keep the features for regression","5756677d":"# Model"}}