{"cell_type":{"e2dbe81e":"code","2509592f":"code","9d4acf7a":"code","34d1d530":"code","2588c1f2":"code","45b02c2c":"code","b095c0ca":"code","3bb7efba":"code","67c801d7":"code","07ea418d":"code","dedcfeb7":"code","969ca375":"code","3e2de2ac":"code","b637220f":"code","6063fa63":"code","d454ba83":"code","ac0f859b":"code","ad2be9a5":"code","165e2a62":"code","44c84899":"code","7cdc729d":"code","bc96f981":"code","2b04d073":"markdown","9ccf50d4":"markdown","59b27200":"markdown"},"source":{"e2dbe81e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2509592f":"import matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\n%matplotlib inline","9d4acf7a":"# Importing cancer dataset\nfrom sklearn.datasets import load_breast_cancer","34d1d530":"cancer = load_breast_cancer()","2588c1f2":"cancer.keys()","45b02c2c":"print(cancer['DESCR'])","b095c0ca":"df = pd.DataFrame(cancer['data'],columns=cancer['feature_names'])\n","3bb7efba":"df.head()","67c801d7":"from sklearn.preprocessing import StandardScaler","07ea418d":"scaler = StandardScaler()\nscaler.fit(df)","dedcfeb7":"scaled_data = scaler.transform(df)","969ca375":"from sklearn.decomposition import PCA","3e2de2ac":"pca = PCA(n_components=2)","b637220f":"pca.fit(scaled_data)","6063fa63":"x_pca = pca.transform(scaled_data)","d454ba83":"scaled_data.shape","ac0f859b":"x_pca.shape","ad2be9a5":"plt.figure(figsize=(8,6))\nplt.scatter(x_pca[:,0],x_pca[:,1],c=cancer['target'], cmap='plasma')\nplt.xlabel(\"First Principal Component\")\nplt.ylabel(\"Second Principal Component\")","165e2a62":"import xgboost","44c84899":"\nclassifier=xgboost.XGBClassifier()","7cdc729d":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.model_selection import cross_val_score\n","bc96f981":"\nfrom sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression()\n","2b04d073":"### The Data","9ccf50d4":"### Interpreting the components","59b27200":"## PCA Visualization"}}