{"cell_type":{"a9ad07a0":"code","ef7dd8f0":"code","7c11fc19":"code","8d668bfa":"code","a5cff256":"code","f60c742a":"code","88d0d5b2":"code","65ff1a80":"code","a58be068":"code","f2d55955":"code","8222ce89":"code","6f296bb9":"code","9a350611":"code","67c11e63":"code","02205b8b":"code","8bd6c389":"code","2ee2f4f0":"code","8372dcef":"code","40bebbe4":"code","40becb1b":"code","0e8308ff":"code","d6ae42be":"code","fb890ac0":"code","1fe03b66":"code","b05363a4":"code","98a28cee":"markdown","84bfa8e0":"markdown","1486d0dc":"markdown","77eae0df":"markdown","11ff6b65":"markdown","a6ef356a":"markdown","983c38b1":"markdown","f33b605f":"markdown","b37ee126":"markdown","ef8ac415":"markdown","9f463831":"markdown"},"source":{"a9ad07a0":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","ef7dd8f0":"data=pd.read_csv('..\/input\/iris\/Iris.csv')","7c11fc19":"data.head()","8d668bfa":"#find columns of dataframe\ndata.columns","a5cff256":"#Display the data types of each column using the attribute dtype\ndata.dtypes","f60c742a":"#the method value_counts to count the number of species with unique species values.\n#to_frame() to convert it to a dataframe.\ndata.Species.value_counts().to_frame()","88d0d5b2":"#find the summary of dataframe\ndata.info()","65ff1a80":"#The describe() function computes a summary of statistics for numeric entries such as count,mean,std,min,etc \n#The column which contain onject dtype then can not be include in it .\n\ndata.describe()","a58be068":"#above four column are numeric they displayed here but fifth column which is 'species' which has dtype object is not displayed\n#to include this column write \ndata.describe(include='all')","f2d55955":"#Id Column is not required so we can drop it\ndata.drop(['Id'],axis=1,inplace=True)","8222ce89":"#find unique species in 'Species' column\ndata['Species'].unique()","6f296bb9":"#groupby() is used to split data into groups\ndata.groupby('Species').size()","9a350611":"sns.countplot('Species',data=data)\n#it show the count of each categprical data","67c11e63":"sns.pairplot(data,hue='Species')\n#A pairplot plot a pairwise relationships with other columns in datafeamw and also plot pairplot with itself .","02205b8b":"plt.figure(figsize=(12,6))\nsns.scatterplot(x=data['PetalLengthCm'],y=data['PetalWidthCm'],hue=data['Species'],marker='^',s = 100)\n#it shows\n#if petal_length is less that ~2 and petal_width is less than ~0.6 then species ia 'setosa'\n#if petal_length is between ~3 and ~5.2 and petal_width is between ~1.0 and ~1.7 then species ia 'versicolor'\n#if petal_length is greater that ~5.2 and petal_width is greater than ~1.7 then species ia 'virginica'","8bd6c389":"plt.figure(figsize=(14,10))\nplt.subplot(2,2,1)\nsns.boxplot(y=data['SepalLengthCm'],x=data['Species'],data=data)\nplt.subplot(2,2,2)\nsns.boxplot(y=data['PetalLengthCm'],x=data['Species'],data=data)\nplt.subplot(2,2,3)\nsns.boxplot(y=data['SepalWidthCm'],x=data['Species'],data=data)\nplt.subplot(2,2,4)\nsns.boxplot(y=data['PetalWidthCm'],x=data['Species'],data=data)","2ee2f4f0":"# spliting data for Training and Testing where 'x' training data and 'y' is testing data\nx =data.iloc[ : , :4].values\ny =data['Species']\n","8372dcef":"#import required labrary and model in it\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=30,random_state=3)","40bebbe4":"from sklearn.cluster import KMeans\nfrom sklearn.preprocessing import MinMaxScaler\nKM = KMeans(n_clusters=3)\nKM.fit(x)","40becb1b":"print(KM.labels_)","0e8308ff":"#it shows the X and Y coordinates of centroid\nKM.cluster_centers_","d6ae42be":"SSE= []\nfor i in range(1,11):\n    kmeans = KMeans(n_clusters = i, random_state = 0)\n    kmeans.fit(x_train,y_train)\n    SSE.append(kmeans.inertia_)","fb890ac0":"plt.figure(figsize=(10,6))\nplt.plot(range(1,11),SSE,'*--')\nplt.xlabel('K')\nplt.ylabel('Sum of Squared error')","1fe03b66":"Y_predict = kmeans.fit_predict(x)","b05363a4":"plt.figure(figsize=(12,6))\nsns.scatterplot(x[Y_predict == 0, 0], x[Y_predict == 0, 1],color = 'red', label = 'Iris-setosa')\nsns.scatterplot(x[Y_predict == 1, 0], x[Y_predict == 1, 1],color = 'blue', label = 'Iris-versicolour')\nsns.scatterplot(x[Y_predict == 2, 0], x[Y_predict == 2, 1],color = 'green', label = 'Iris-virginica')         \n\n# Plotting the centroids of the clusters\nplt.scatter(KM.cluster_centers_[:, 0],KM.cluster_centers_[:,1],marker='s' ,color = 'black', label = 'Centroids')\nplt.legend()\n","98a28cee":"# Explore Unsupervised Machine Learning\n\n##### From the given \u2018Iris\u2019 dataset, predict the optimum number of clusters and represent it visually.\n","84bfa8e0":"## Train Test Split\n**Spliting data for Training and Testing where 'x' training data and 'y' is testing data**","1486d0dc":"## Visualising the clusters","77eae0df":"**for decide the best value of cluster we plot a graph between K and SSE and see at which point our plot bent like elbow and this point is our best value of Cluster**                  \n**Here At point 3 out cluster is bent like elbow**","11ff6b65":"## The Data\n### Let's start to read CSV file of our dateset into a pandas dataframe.","a6ef356a":"## visualizing data using different plots","983c38b1":"## Exploratory Data Analysis (EDA)","f33b605f":"## Import Libraries","b37ee126":"# - END","ef8ac415":"## Training and Predicting\n**We have split our data into training and testing sets, and now is finally the time to train our algorithm.**","9f463831":"# Building a Machine Learning Model "}}