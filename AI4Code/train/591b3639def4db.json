{"cell_type":{"5a0281de":"code","7d196a5a":"code","83649b96":"code","359ade83":"code","f4ecd745":"code","c542c5ed":"code","7221fc3f":"code","78420a8e":"code","db111591":"code","1436e38f":"code","c429e6f0":"code","ad30612a":"code","f97d5318":"code","21f77006":"code","b1fe0eca":"code","75744283":"code","d0c90e32":"code","122b408e":"code","8a6566d5":"code","6e8f478b":"code","76f5081f":"code","4cb2c62c":"code","8c800c26":"code","43015407":"code","f37f967a":"code","c5cee8f6":"code","0f65442d":"code","f281bb07":"code","ae215212":"code","2f1683ac":"code","ec2d6bf9":"code","f7ad9a36":"code","1b21bbad":"code","fe7c23c4":"code","1f9a868f":"code","4ea932a4":"code","ea39e7db":"code","6e51fbf6":"code","a2d8dc74":"code","a50902f7":"code","c8d89770":"code","9ebe254e":"code","b97a1912":"code","0fcf6e4d":"code","755fc259":"code","ad5d5bb4":"code","6eb64d30":"code","c2d66816":"code","c230a196":"code","ac774141":"code","8bed9329":"code","fe8007ea":"code","7cf12578":"code","7aef0d5c":"code","427910f8":"code","09f7f01a":"code","1d125735":"code","773667c0":"code","8f9ab266":"code","7b908911":"code","38b06964":"code","114fb6a9":"code","2cfe3cc4":"code","2dc26fa8":"code","9f78311d":"code","30eeccc7":"code","01f9dfc2":"code","3fc451ff":"code","a760252c":"code","49567ec8":"code","1625c867":"code","a7ec9a4e":"code","57ed758b":"code","8bc0e4b5":"code","864fd027":"code","dc0aacc2":"code","aa2f8839":"code","3bfaf703":"code","b9e6042b":"code","b3109eaf":"code","d81c0b12":"code","40f9191c":"code","8fabf4a2":"code","765baae0":"code","d6194fa8":"code","4d59710d":"code","c3454fcc":"code","36fe677d":"code","77e20ab1":"code","77308526":"markdown","d2306217":"markdown","3d37b6ae":"markdown","e2301543":"markdown","38f33fce":"markdown","b9e42c86":"markdown","63e0b097":"markdown","c7905f2a":"markdown","ac0dd7f5":"markdown","8c4cec3c":"markdown","c80a1cde":"markdown","4fa73b60":"markdown"},"source":{"5a0281de":"import numpy as np \nimport pandas as pd \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nimport warnings\nwarnings.filterwarnings('ignore')\n","7d196a5a":"import matplotlib.pyplot as plt\nimport seaborn as sns","83649b96":"df = pd.read_csv(\"..\/input\/titanic-ml\/train.csv\")","359ade83":"df.head()","f4ecd745":"df.info()","c542c5ed":"df.describe()","7221fc3f":"df.describe().transpose()","78420a8e":"sns.countplot(x=\"Survived\", data=df, palette =\"cool\")","db111591":"df.isnull()","1436e38f":"df.isnull().sum()","c429e6f0":"df[\"Age\"] = df[\"Age\"].fillna(30)","ad30612a":"df[df[\"Age\"].isnull()]","f97d5318":"df[df[\"Cabin\"].isnull()]","21f77006":"df[\"Cabin\"].unique()","b1fe0eca":"df.groupby(\"Cabin\").count()[\"PassengerId\"].sort_values(ascending=False)","75744283":"df[df[\"Embarked\"].isnull()]","d0c90e32":"df[\"Embarked\"].unique()","122b408e":"df.groupby(\"Embarked\").count()[\"PassengerId\"]","8a6566d5":"df[df[\"Fare\"].between(70,80)].groupby(\"Embarked\").count()[\"PassengerId\"]","6e8f478b":"df[df[\"Fare\"].between(70,80)]","76f5081f":"df[\"Embarked\"] = df[\"Embarked\"].fillna(\"C\")","4cb2c62c":"df[df[\"Embarked\"].isnull()]\n","8c800c26":"df.corr()","43015407":"sns.heatmap(df.corr(),cmap=\"tab10\")","f37f967a":"df.dtypes","c5cee8f6":"my_obj_df = df.select_dtypes(include=\"object\")\nmy_obj_df","0f65442d":"my_nume_df = df.select_dtypes(exclude=\"object\")\nmy_nume_df","f281bb07":"my_nume_df = my_nume_df.drop(\"PassengerId\", axis=1)","ae215212":"my_obj_df_dropped = my_obj_df.drop([\"Name\",\"Cabin\",\"Ticket\"], axis=1)\nmy_obj_df_dropped ","2f1683ac":"df_obj_dummies = pd.get_dummies(my_obj_df_dropped,drop_first=True)\ndf_obj_dummies","ec2d6bf9":"my_final_df = pd.concat([my_nume_df, df_obj_dummies], axis=1)\nmy_final_df","f7ad9a36":"my_final_df.corr()","1b21bbad":"sns.heatmap(my_final_df.corr(),cmap=\"tab20\")","fe7c23c4":"my_final_df.corr()[\"Survived\"].sort_values()","1f9a868f":"forplot = pd.DataFrame(my_final_df.corr()[\"Survived\"].sort_values()).drop(\"Survived\")","4ea932a4":"plt.figure(figsize=(10,4))\nsns.barplot(data=forplot,x=forplot.index,y=\"Survived\",palette=\"tab10\");","ea39e7db":"a = my_final_df.drop(\"Survived\", axis=1)\na","6e51fbf6":"b = my_final_df[\"Survived\"]\nb","a2d8dc74":"from sklearn.model_selection import train_test_split","a50902f7":"from sklearn.preprocessing import StandardScaler","c8d89770":"a_train, a_test, b_train, b_test = train_test_split(a, b, test_size=0.25, random_state=101)","9ebe254e":"scaler = StandardScaler()","b97a1912":"a_train","0fcf6e4d":"scaled_a_train = scaler.fit_transform(a_train)\npd.DataFrame(scaled_a_train)","755fc259":"scaled_a_test = scaler.transform(a_test) ","ad5d5bb4":"from sklearn.linear_model import LogisticRegression","6eb64d30":"Log_model = LogisticRegression()","c2d66816":"Log_model.fit(scaled_a_train, b_train)","c230a196":"b_pred = Log_model.predict(scaled_a_test)\nb_pred","ac774141":"b_pred_prob = Log_model.predict_proba(scaled_a_test)\nb_pred_prob","8bed9329":"from sklearn.metrics import accuracy_score, confusion_matrix, classification_report","fe8007ea":"accuracy_score(b_test,b_pred)","7cf12578":"confusion_matrix(b_test,b_pred)","7aef0d5c":"from sklearn.metrics import plot_confusion_matrix","427910f8":"plot_confusion_matrix(Log_model,scaled_a_test,b_test,cmap=\"tab10\")","09f7f01a":"print(classification_report(b_test,b_pred))","1d125735":"from sklearn.svm import SVC\nfrom sklearn.model_selection import GridSearchCV","773667c0":"svm = SVC()\nparam_grid = {\"C\":[0.01,0.1,1], \"kernel\":[\"linear\",\"ryf\"]}","8f9ab266":"grid = GridSearchCV(svm, param_grid)","7b908911":"grid.fit(scaled_a_train,b_train)","38b06964":"grid.best_params_","114fb6a9":"b_pred = grid.predict(scaled_a_test)\nb_pred","2cfe3cc4":"accuracy_score(b_test,b_pred)","2dc26fa8":"confusion_matrix(b_test,b_pred)","9f78311d":"plot_confusion_matrix(grid,scaled_a_test,b_test,cmap=\"tab10\")","30eeccc7":"print(classification_report(b_test,b_pred))","01f9dfc2":"test = pd.read_csv(\"..\/input\/titanic-ml\/test.csv\")\ntest","3fc451ff":"test.isnull()","a760252c":"test.isnull().sum()","49567ec8":"test = test.drop([\"Cabin\",\"Name\",\"PassengerId\",\"Ticket\"],axis=1)","1625c867":"test.isnull()","a7ec9a4e":"test.isnull().sum()","57ed758b":"test[\"Age\"] = test[\"Age\"].fillna(30)","8bc0e4b5":"test[test[\"Age\"].isnull()]","864fd027":"test.isnull().sum()","dc0aacc2":"test[test[\"Fare\"].isnull()]","aa2f8839":"test[\"Fare\"] = test[\"Fare\"].fillna(30)","3bfaf703":"my_obj_test = test.select_dtypes(include=\"object\")\nmy_obj_test","b9e6042b":"my_num_test = test.select_dtypes(exclude=\"object\")\nmy_num_test","b3109eaf":"test_obj_dummies = pd.get_dummies(my_obj_test,drop_first=True)\n","d81c0b12":"my_final_test = pd.concat([my_num_test,test_obj_dummies], axis=1)\n","40f9191c":"my_final_test.head(5)","8fabf4a2":"scaled_my_final_test = scaler.transform(my_final_test)   ","765baae0":"b_pred = grid.predict(scaled_my_final_test)\nb_pred","d6194fa8":"b_pred_df = pd.DataFrame(b_pred,columns=[\"Survived\"])\nb_pred_df","4d59710d":"test2 = pd.read_csv(\"..\/input\/titanic-ml\/test.csv\")\ntest2.head()","c3454fcc":"ID = pd.DataFrame(test2[\"PassengerId\"])","36fe677d":"res = pd.concat([ID, b_pred_df],axis=1)\nres","77e20ab1":"res.to_csv(\"my_submission.csv\",index=False)","77308526":"Age averages","d2306217":"# Dataset Check","3d37b6ae":"Average fare","e2301543":"# Data preprocessing","38f33fce":"# **Logistic regression model**","b9e42c86":"# Checking correlation","63e0b097":"# Data is missing in Cabin so lets drop","c7905f2a":"## TITANIC PREDICTOR","ac0dd7f5":"# Support Vector Machine model","8c4cec3c":"# Exploring the Data","c80a1cde":"# Results \n- Logistic regression - 78% accuracy\n- Support Vector Machine - 76% accuracy","4fa73b60":"**Therefore logistic regression will be used for the classification results**"}}