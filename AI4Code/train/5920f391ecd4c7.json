{"cell_type":{"b7c11315":"code","8c42c855":"code","d0e087a7":"code","e5c4a26d":"code","af84c44b":"code","a7d3595a":"code","b6f1db48":"code","6f557fe8":"code","c26c6262":"code","48226ab1":"code","6582081c":"code","1ecee3bb":"code","135ad37f":"code","2f941464":"code","bc903287":"code","ebb79892":"markdown","8a052022":"markdown","4064dfa4":"markdown","bf152a2f":"markdown","da9566c1":"markdown","9bfcf2e7":"markdown","1fe95430":"markdown","ebbf3a26":"markdown","f0e4e1bb":"markdown","acfa5b91":"markdown","ad47163c":"markdown"},"source":{"b7c11315":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","8c42c855":"df  = pd.read_csv('..\/input\/data.csv')\n","d0e087a7":"df_top = df.head(50)\n\n\ndf_top.drop([\"ID\"],axis=1,inplace = True)\ndf_top.drop([\"Photo\"],axis=1,inplace = True)\ndf_top.drop([\"Flag\"],axis=1,inplace = True)\ndf_top.drop([\"Club Logo\"],axis=1,inplace = True)\ndf_top.drop([\"Club\"],axis=1,inplace = True)\n\ndf_top_clrd = df_top.loc[:,\"Name\":\"Wage\"]\n\nprint(df_top_clrd)\n","e5c4a26d":"i = 0\nfor each in df_top_clrd.Value:\n    ln_data = len(each)\n    df_top_clrd.Value[i] = each[1:ln_data-1]\n    i = i+1\n\ni = 0\nfor each in df_top_clrd.Wage:\n    ln_data = len(each)\n    df_top_clrd.Wage[i] = each[1:ln_data-1]\n    i = i+1\n    \nprint(df_top_clrd)\n","af84c44b":"df_top_clrd.info()","a7d3595a":"df_top_clrd[\"Value\"] = df_top_clrd.Value.astype(float)\ndf_top_clrd[\"Wage\"] = df_top_clrd.Wage.astype(int)\n","b6f1db48":"df_top_clrd.corr()\n","6f557fe8":"f,ax = plt.subplots(figsize=(15, 15))\nsns.heatmap(df_top_clrd.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","c26c6262":"df_top_clrd.plot(kind=\"scatter\", x = \"Potential\", y = \"Value\")\nplt.show()","48226ab1":"df_top_clrd.plot(kind=\"scatter\", x = \"Wage\", y = \"Age\")\nplt.show()","6582081c":"countries = df_top_clrd.Nationality.unique()\nprint(countries)\n\ndic = pd.value_counts(df_top_clrd.Nationality)\nprint(dic)\n","1ecee3bb":"df_top_clrd.boxplot(column = \"Value\")\nplt.show()\n","135ad37f":"print(\"Avarage    : \", \"\u20ac\"+str(df_top_clrd.Value.mean())+\"M\")\nprint(\"Max Values : \", \"\u20ac\"+str(np.sort(df_top_clrd.Value)[49])+\"M\",\"&\",\"\u20ac\"+str(np.sort(df_top_clrd.Value)[48])+\"M\")\nprint(\"Min Value  : \" ,\"\u20ac\"+str(df_top_clrd.Value.min())+\"M\")\n","2f941464":"df_top_clrd.boxplot(column = \"Wage\")\nplt.show()","bc903287":"print(\"Avarage  : \", \"\u20ac\"+str(df_top_clrd.Wage.mean())+\"K\")\nprint(\"Max Wage : \" ,\"\u20ac\"+str(df_top_clrd.Wage.max())+\"K\")\nprint(\"Min Wage : \" ,\"\u20ac\"+str(df_top_clrd.Wage.min())+\"K\")","ebb79892":"According to our dataset one data in \"Wage\" column is outlier and the others are not.","8a052022":"Hello. I will try to analyze and visualize some correlation by using Fifa 19 complete player dataset. Sortly, in this kernel correlation between \"Overall\" , \"Potential\" , \"Value\" ,\"Wage\" and \"Age\" will be discovered by using top 50 players datas. Let's start with import some necessary libraries.","4064dfa4":"Fianlly, I want to see these players \"Value\" and \"Wage\" interval and diagnose outlier datas. Let's start with \"Value\". We can see that there are 3 outlier datas. These datas printed below.","bf152a2f":"Values in the table between 1 to (-1). 0-1 is positively related and 1 is completely related and 0 is unrelated , (-1)-0 is negatively related. As we can see \"Potential\" and \"Value\" higly connected also we can say that \"Age\" and \"Wage\" are unrelated. I don't write long analyses because you can see the ralationship between subjects. ","da9566c1":"I also wonder where these playres are from and how many players are which country. Result show that 20 country have player who inside top 50 player dataframe. Spain and France have 6 players in these dataframe.","9bfcf2e7":"We can also see some corelations between our subjects. First one is Potential - Value and second one is Wage-Age graph. It can be said that Value increases with increasing Potential but there is not any relationship between Wage and Age.","1fe95430":"Now, we have clear datas but some datas have to be adjusted. For example datas in \"Value\" column is written like \"\u00a3\"+\"123546\"+\"M\". We only need \"123456\" part. To rewrite datas in \"Value\" and \"Wage\" colums i wrote some code below. You can see after this code our datas only include numbers.  ","ebbf3a26":"Top 50 players and their datas placed in \"df_top\" dateframe and then unused columns has been filtered. This cleared dataframe is named as \"df_top_clrd\". To see\nour final dataframe it is printed.","f0e4e1bb":"Now we can see the correlation between our datas.","acfa5b91":"We have numbers but these colums' datatypes are still object. We have to change their datatype to use them as numbers. astype() fuction helps us to change columns' datatypes. ","ad47163c":"In this step dataset has been read and defined as \"df\"."}}