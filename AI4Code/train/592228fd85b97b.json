{"cell_type":{"234d21e2":"code","2d2e84e8":"code","7d27f89f":"code","7ef116f4":"code","b748278f":"code","8c84eee3":"code","016d4224":"code","ed6db9d2":"markdown","d419b4a0":"markdown","7875b165":"markdown","2c34bdf7":"markdown"},"source":{"234d21e2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2d2e84e8":"dfguapo = pd.read_csv(r\"\/kaggle\/input\/the-human-freedom-index\/hfi_cc_2020.csv\")","7d27f89f":"variablescuali = list()\nvariablescuanti = list()\nfor x,i in zip(dfguapo.columns,dfguapo.dtypes):\n    if i == np.int64:\n        variablescuanti.append(x)\n    elif i == np.float64:\n        variablescuanti.append(x)\n    else:\n        variablescuali.append(x)","7ef116f4":"for j in variablescuanti:\n    print(str(j)+\": \"+str(np.max(dfguapo[j])-np.min(dfguapo[j])))","b748278f":"import sympy\nimport numpy as np\nimport scipy\nfrom scipy import stats ","8c84eee3":"for i,x in dfguapo.iteritems():\n    if i in variablescuanti:\n        print(str(i)+\": \"+str(np.mean(x)))\n    elif i in variablescuali:\n        print(str(i)+\": \"+(str(stats.mode(x)[0][0])))","016d4224":"for j in variablescuanti:\n    print(str(j)+\": \"+str(np.max(dfguapo[j])-np.min(dfguapo[j]))+\", \"+str(np.var(dfguapo[j]))+\", \"+str(np.std(dfguapo[j])))","ed6db9d2":"# Obt\u00e9n la moda o promedio dependiendo el caso para cada atributo.","d419b4a0":"# Obt\u00e9n el rango, varianza, desviaci\u00f3n estandar para los atributos cuantitativos.","7875b165":"# Obt\u00e9n una lista con los atributos cuantitativos y otra lista con los atributos cualitativos.","2c34bdf7":"# Define el rango de cada uno de los atributos (cuantitativos)."}}