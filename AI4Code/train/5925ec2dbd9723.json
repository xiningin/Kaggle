{"cell_type":{"fb1944cc":"code","e616b220":"code","d815b8c8":"code","0a179680":"code","516d2c26":"code","15423635":"code","125fa2c2":"code","2f5ca2c9":"code","09216896":"code","ae810e62":"code","20f2a5b6":"code","e2ec3c3d":"code","1bed5d2f":"code","8a6b6042":"code","fe68fc3a":"code","1f59237f":"code","c63f0498":"code","0b4820b5":"markdown","098ce135":"markdown","1d175dea":"markdown","a281b772":"markdown","fb17e860":"markdown","f30ac969":"markdown","c35b786f":"markdown"},"source":{"fb1944cc":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\n\nwarnings.filterwarnings(\"ignore\")","e616b220":"df = pd.read_csv(\"..\/input\/iris-flower-dataset\/IRIS.csv\")","d815b8c8":"df.head()","0a179680":"## Dimensions: Data Shape\ndf.shape","516d2c26":"### Statistical Summary\ndf.describe() ","15423635":"### Class Distribution\ndf.groupby('species').size()","125fa2c2":"### Univariate Plot: Box and whisker plots\n\ndf.plot(kind=\"box\", subplots=True, layout=(2,2), sharex=False, sharey=False);","2f5ca2c9":"## Histograms\ndf.hist();","09216896":"## Mulitvariate Plots\nfrom pandas.plotting import scatter_matrix\n\nscatter_matrix(df);","ae810e62":"## Load Modelling libraries\/dependencies\n\nfrom sklearn.model_selection import train_test_split, cross_val_score, StratifiedKFold\nfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC","20f2a5b6":"## Splitting Validation Dataset\narray = df.values ## we use arrays here to reduce computational time\nX = array[:,0:4]\ny = array[:,4]\n\nX_train, X_validation, y_train, y_validation = train_test_split(X, y, test_size = 0.20, random_state = 1)","e2ec3c3d":"## Model Selection\nmodels = []\nmodels.append(('LR', LogisticRegression(solver='liblinear', multi_class='ovr')))\nmodels.append(('LDA', LinearDiscriminantAnalysis()))\nmodels.append(('KNN', KNeighborsClassifier()))\nmodels.append(('CART', DecisionTreeClassifier()))\nmodels.append(('NB', GaussianNB()))\nmodels.append(('SVM', SVC(gamma = 'auto')))\n\n## evaluate each model in turn\nresults = []\nnames = []\nfor name, model in models:\n    kfold = StratifiedKFold(n_splits = 10, random_state=1, shuffle = True)\n    cv_results = cross_val_score(model, X_train, y_train, cv = kfold, scoring='accuracy')\n    results.append(cv_results)\n    names.append(name)\n    print('%s: %f (%f)' % (name, cv_results.mean(), cv_results.std()))","1bed5d2f":"pd.DataFrame(results, index = names).T","8a6b6042":"## plotting the results\nplt.boxplot(results, labels = names)\nplt.title('Algorithm Comparison')\nplt.show()","fe68fc3a":"# Support Vector Classification\n# # Make Predictions on Validation\nmodel = SVC(gamma=\"auto\")\nmodel.fit(X_train, y_train)\npredict = model.predict(X_validation)","1f59237f":"## Evaluate Predictions\nprint(\"Acc_Score\",\"\\n\\n\",accuracy_score(y_validation, predict),\"\\n\")\nprint(\"Confusion_Score\",\"\\n\\n\",confusion_matrix(y_validation, predict),\"\\n\")\nprint(\"Classification_Report\",\"\\n\\n\",classification_report(y_validation, predict),\"\\n\")","c63f0498":"sns.heatmap(confusion_matrix(y_validation, predict), annot=True)","0b4820b5":"### Python Refresher ML\n_#1_ :: IRIS DATASET","098ce135":"# Exploratory Data Analysis\n\n### Dataset Summary\n1. Dimensions of the Dataset\n1. Data Peeks\n1. Statistical summary of all attributes\n1. Breakdown of the data by the class variable\n\n### Data Visualization\n1. Univariate Plot\n1. Mulitvariate Plot","1d175dea":"## Modeling\n1. Separate out a validation dataset.\n1. Set-up the test harness to use 10-folds cross validation.\n1. Build multiple different models to predict species from flower measurements.\n1. Select the best model.","a281b772":"Our metric above shows that all our Algorithms make the 100% accuracy, however on average the SVM metric provides the best accuracy, this has been tested so far on the training set, to further examine just how accurate the Algorithm is we will make predictions on the reserved validation set.","fb17e860":"\nNotice how this only works for Numerical Values, furthermore, this shows that we are dealing with a Classification problem.","f30ac969":"It looks like perhaps two of the `sepal` variables have a Gaussian distribution. This is useful to note as we can use algorithms that can exploit this assumption.","c35b786f":"## Data Visualization"}}