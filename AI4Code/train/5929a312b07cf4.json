{"cell_type":{"52ba36ae":"code","9558ff7c":"code","7949cfaf":"code","306c6cc7":"code","4d3202b9":"code","2a2da72f":"code","1f37553b":"code","431e0951":"code","c86d53f8":"code","938b0fe8":"markdown","2d1c419e":"markdown","c82f3340":"markdown","89392a69":"markdown","4f6a1b79":"markdown","4b051883":"markdown","79b60d23":"markdown","9106e857":"markdown","a97164b7":"markdown","cd706096":"markdown","2f314c98":"markdown","961d6e06":"markdown","076cd4e0":"markdown","0e8dae83":"markdown","fd0d45e2":"markdown","12f6f38a":"markdown","e5e1bde5":"markdown","3f7411d0":"markdown","421882e2":"markdown","fb9ac071":"markdown","e735fc64":"markdown","a50f048e":"markdown","751c3f2f":"markdown","a6c66253":"markdown","ff5779cf":"markdown"},"source":{"52ba36ae":"import pandas as pd\nimport numpy as np\n\nmatch= pd.read_csv('..\/input\/international-football-results-from-1872-to-2017\/results.csv')\n\n#put date in correct format and set it as the index\ndate= pd.to_datetime(match.date.values)\nmatch['date']=date\nmatch.set_index('date', inplace=True)\n\n\n#get the coloumn of results (wins, ties and losses)\nwin= np.where(match.home_score > match.away_score, 'win', None)\ntie=np.where(match.home_score == match.away_score, 'tie', None)\nloss= np.where(match.home_score < match.away_score, 'loss', None)\n\nresults=pd.DataFrame([win, tie, loss]).T\nresults\nx=[value[value != None]  for value in results.values]\n#x=np.array(x)\n#x=x.tolist()\nmatch['result']= x\nmatch['result']=np.squeeze(match.result.tolist())\n\n#get the number of goals\nmatch['goals']= match.home_score + match.away_score\n\n\n#home\nhome_teams=match.groupby(['home_team','result']).count()['city'].sort_values(ascending=False).reset_index().rename(columns={'city': 'count'})\n\n\nhome_matches=[]\nfor team in home_teams.home_team:\n    tot_matches= home_teams[home_teams.home_team== team]['count'].sum()\n    home_matches.append(tot_matches)\n   \nhome_teams['home_matches']=home_matches\nhome_teams['pct_home_victory']= home_teams['count']\/ home_teams['home_matches']\n\n\n#away\naway_teams=match.groupby(['away_team','result']).count()['city'].sort_values(ascending=False).reset_index().rename(columns={'city': 'count'})\naway_teams.replace({'loss': 'win', 'win':'loss'}, inplace=True) #loss means victory for the away team\n\naway_tot_matches=[]\nfor team in away_teams.away_team:\n    tot_matches= away_teams[away_teams.away_team == team]['count'].sum()\n    away_tot_matches.append(tot_matches)\n\naway_teams['away_matches']= away_tot_matches\naway_teams['pct_victory_away'] = away_teams['count']\/away_teams['away_matches']\n\n\n#adjusting terminology and index\nhome_teams.rename(columns={'result': 'home_results', 'count': 'home_count'}, inplace=True)\nhome_teams.set_index('home_team', inplace=True)\naway_teams.rename(columns={'result': 'away_results', 'count': 'away_count'}, inplace=True)\naway_teams.set_index('away_team', inplace=True)\n\n\n#defining winners and loosers\nhome_winners= home_teams[home_teams.home_results=='win']\naway_winners= away_teams[away_teams.away_results=='win']\nhome_losers= home_teams[home_teams.home_results=='loss']\naway_losers= away_teams[away_teams.away_results=='loss']\n\n\n#merging datasets\nwinners=pd.merge(home_winners, away_winners, left_index=True, right_index=True, how='inner')\nlosers=pd.merge(home_losers, away_losers, left_index=True, right_index=True, how='inner')\nlosers.rename(columns={'pct_home_victory': 'pct_home_defeats', 'pct_victory_away': 'pct_away_defeats'}, inplace=True)\n\nwinners['tot_count']= winners.home_count + winners.away_count\nwinners['tot_matches']= winners.home_matches + winners.away_matches\nwinners['tot_pct_victory']= winners.tot_count\/winners.tot_matches\nwinners= winners[winners.tot_matches >= 100] #getting only clubs who have played at least 100 matches\nwinners_pct= winners[['pct_home_victory', 'pct_victory_away', 'tot_pct_victory']]\n\nlosers['tot_count']= losers.home_count + losers.away_count\nlosers['tot_matches']= losers.home_matches + losers.away_matches\nlosers['tot_pct_defeats']= losers.tot_count\/losers.tot_matches\nlosers= losers[losers.tot_matches >= 100] #getting only clubs who have played at least 100 matches\nlosers_pct= losers[['pct_home_defeats', 'pct_away_defeats', 'tot_pct_defeats']]\n\n\n#total percentage\nwinners_pct.sort_values(by='tot_pct_victory', ascending=False)\nwinners_pct=np.round(winners_pct*100, 2)\nwinners_pct['tot_count']= winners.tot_count\nwinners_pct['tot_matches']= winners.tot_matches\n\n\nlosers_pct=np.round(losers_pct*100, 2)\nlosers_pct['tot_count']= losers.tot_count\nlosers_pct['tot_matches']= losers.tot_matches\n\n\nwinners_pct.sort_values(by='tot_pct_victory', ascending=False)\n\n","9558ff7c":"#discover goal and history\n\nhome_matches=match.groupby('home_team').sum().rename(columns={'home_score': 'goals_scored_home', 'away_score' : 'goals_taken_home'})\n\naway_matches=match.groupby('away_team').sum().rename(columns={'home_score': 'goals_taken_away', 'away_score' : 'goals_scored_away'})\n\n#merging \n\nscore= pd.merge(home_matches, away_matches, how='inner', right_index= True, left_index=True)\n\n#creating calculated fields\nscore['tot_goals_scored']= score['goals_scored_home'] + score['goals_scored_away']\nscore['tot_goals_taken']= score['goals_taken_home'] + score['goals_taken_away']\nscore['diff_goals_tot'] = score['tot_goals_scored'] - score['tot_goals_taken']\nscore.drop(columns=['neutral_x', 'goals_x', 'neutral_y', 'goals_y'], inplace=True)\n\n#get the match count (only teams with 100 match played are taken)\nscore=pd.merge(score, winners[['home_matches', 'away_matches', 'tot_matches']], how='inner', right_index=True, left_index=True)\n\n#compute ratios\nscore['home_goals_pct'] = score['goals_scored_home']\/ score['home_matches']\nscore['away_goals_pct'] = score['goals_scored_away']\/ score['away_matches']\nscore['home_goals_taken_pct'] = score['goals_taken_home']\/ score['home_matches']\nscore['away_goals_taken_pct'] = score['goals_taken_away']\/ score['away_matches']\nscore['tot_goals_scored_pct'] = score['tot_goals_scored']\/ score['tot_matches']\nscore['tot_goals_taken_pct'] = score['tot_goals_taken']\/ score['tot_matches']\nscore_pct= score[['home_goals_pct', 'away_goals_pct', 'home_goals_taken_pct', 'away_goals_taken_pct',\n                 'tot_goals_scored_pct', 'tot_goals_taken_pct', 'diff_goals_tot']]\n\nscore_pct.sort_values(by='diff_goals_tot', ascending=False)\n\n#join winners with score\n\ntotal_ratio= pd.merge(score_pct, winners_pct, how='inner', right_index=True, left_index=True)\ntotal_ratio= pd.merge(total_ratio, losers_pct, how='inner', right_index=True, left_index=True)\n\nscore_pct.sort_values(by='diff_goals_tot', ascending=False)\n\ncorrelation= total_ratio[['tot_goals_scored_pct', 'tot_goals_taken_pct', \n                          'tot_pct_victory','tot_pct_defeats']].corr()\n\n\n","7949cfaf":"#machine learining to predict victory\/loss rate\ntotal_ratio.corr()['tot_pct_victory'] #check correlation\ntrain = np.array(total_ratio.iloc[:, :7])\ntest= np.array(total_ratio['tot_pct_victory'])\n","306c6cc7":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(train, test, random_state=42)","4d3202b9":"from sklearn.linear_model import LinearRegression\nlr=LinearRegression()\nlr.fit(X_train, y_train)\nlr.score(X_train,y_train)","2a2da72f":"lr.score(X_test, y_test)","1f37553b":"from sklearn.ensemble import RandomForestRegressor\nrf= RandomForestRegressor(n_estimators=200, max_features=2, max_depth=20, bootstrap=True, random_state=1)\nrf.fit(X_train, y_train)\nrf.score(X_train,y_train)","431e0951":"rf.score(X_test,y_test)","c86d53f8":"#goals through the years\n\nyear_goals= match.groupby(by=[match.index.year]).sum()['goals']\nyear_match= match.groupby(by=[match.index.year]).count()['neutral']\nyear=pd.DataFrame([year_goals, year_match]).T.rename(columns={'neutral': 'matches'})\n\n#normalize\nyear['goals_match'] = year.goals\/year.matches \nyear=np.round(year, 2)\n\n\n","938b0fe8":"Its seems to be the same map showed twice, but If you look carefully, you can spot a few slight colour's differences.\nAnyway, we can doubtlessly state that there is a strong connection between the winning\/losing rate and goal difference. Someone could think it is an obvious conclusion, but it doesn't: for instance, if a team lost 9 games with a single goal difference, and then won the 10th 10-0; the winning rate is 10%, but the goal difference is +1. Anyway, let's compute the Pearson's correlation: ","2d1c419e":"For instance, Brazil in the first chart is depicted by a bubble whose size is somewhat similar to the English one, which is a little bit lighter though. It simply means that the victory count is more or less the same, but England, which is the country who has created the football game, has played more games than Brasil.\nFor this reason, the Brazilian victory rate is higher than the English one, and this causes a darker bubble's colour.","c82f3340":"Let's try a simple liner regression:","89392a69":"The model performed pretty well, but it seems to be a little bit underfitting. So let's try a more complex one, like the Random Forest Regressor:","4f6a1b79":"Finally, with 625 victories over 997 games, we can declare Brasil the champion above any others. On the other hand, \nLiechtenstein with 154 losses over 194 games played is the worst National football team in history in terms of results.","4b051883":"We can do even more. Let's leverage machine learning to build a model which tries to predict the winning\/losing rate from the goals data we have collected so far:","79b60d23":"![immagine.png](attachment:immagine.png)","9106e857":"\nIn the previous code section, I checked how many goals every single team has scored and has taken, and I computed the difference between them. Then I divided the values by the number of games played to obtain ratios, which are values more comparable to each other.\n","a97164b7":"In this first section, after a little bit of data cleaning, I have, as I said before, defined winners and losers.\nBy taking advantage of Tableau, I am going to showcase you who are the best and the worst football teams in terms of results:","cd706096":"Nostalgic people always point out that through the years football has changed. They usually say sentences like: \n> \"in the past, there were fewer tactics preparation and football was more entertaining because we saw more goals\". ","2f314c98":"Firstly, I exploit python and its main libraries to extract from the dataset the national teams the history of football has declared successful, and the other ones who have collected more defeats than victories throughout the years. \n","961d6e06":"\n![immagine.png](attachment:immagine.png)","076cd4e0":"![immagine.png](attachment:immagine.png)","0e8dae83":"\n![immagine.png](attachment:immagine.png)","fd0d45e2":"Hi Football Lovers,\nThis is an analysis about football results of National Teams, inspired by a dataset I found here on Kaggle (https:\/\/www.kaggle.com\/martj42\/international-football-results-from-1872-to-2017). This dataset includes 40,838 results of international football matches starting from the very first official match in 1972, up to 2019.\nSo, I want to say thank you to Mart J\u00fcrisoo, and I hope you will enjoy this work.\nI also encourage you to leave a comment below, any tips or consideration will be really welcomed.","12f6f38a":"This model performs indisputably better than the previous one, so I am pretty satisfied.","e5e1bde5":"Before starting, I have to point out that for making the analysis a relevant one I choose to exclude National Teams that have less than 100 games played when the calculation involved ratios.","3f7411d0":"*I want to say thank you to everyone who has read my words until here, I hope you enjoyed throughout this football journey.*\n*I remember you to leave a comment below if you are willing to do it, it would be highly appreciated anyway.\n Bye for now*.","421882e2":"Here, the size of the bubbles represents the number of victories\/losses associated to a specific team, while the colour is the winning\/loss rate, so the number of victories\/losses has been divided by the totality of the games played.","fb9ac071":"![immagine.png](attachment:immagine.png)","e735fc64":"**We only selected data with information about goals scored and taken as features, to avoid data leakage**","a50f048e":"Football lovers often debate whether is more important to build a solid defense or to be able to score a lot of goals to win tough, long-term competitions like a national championship or the renowned Champions League.\nThe table up there tries to figure out a solution to this endless question: in fact, there is a stronger correlation between defeats and goals taken than the one between victories and goals scored.\nIn a nutshell, if you want to build a successful football team, you have to start from the defense.\n","751c3f2f":"The next maps display respectively winning\/loss rate and goal difference. \nI decided to use diverging colors in both cases to r the strong similarity. ","a6c66253":"This is only partially true: as we can see from the bar chart, as years go by bar become higher and lighter. It means that the number of goals increases through the year, but the notoriety of the sport too, and more.\nIn other words, nowadays more goals are scored simply because much more games are played in a year. But the average number of goals scored in a football match has gradually decreased through the year, perhaps exactly for the radical tactical change that nostalgic people don't appreciate.\n","ff5779cf":"![immagine.png](attachment:immagine.png)"}}