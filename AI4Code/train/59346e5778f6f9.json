{"cell_type":{"ff93230c":"code","10842126":"code","f0cf5339":"code","05ed3f12":"code","4d628ef2":"code","938359b5":"code","2a898b77":"code","c5ab71e1":"code","71d7b525":"code","df1a57c8":"code","2a55eca4":"code","f593446b":"code","a4ad08e6":"code","64b45020":"code","da438e34":"code","99be72a4":"code","6dbbee22":"code","6190c9f0":"code","4eea8ed7":"code","1b5f0417":"code","93527200":"code","db643dea":"markdown","78b2d179":"markdown","3ae8a2dd":"markdown","55ebb41d":"markdown","c9dcf634":"markdown","7babc083":"markdown","bc5bdf5a":"markdown","9f02c76e":"markdown","facbe457":"markdown","6775a7d3":"markdown","09b24a91":"markdown","1504457b":"markdown","88599b67":"markdown","20a9755b":"markdown","52060df4":"markdown","142aeb27":"markdown","93f422c1":"markdown","7a70e481":"markdown","6026b68e":"markdown","bf053d41":"markdown","ac3d5a24":"markdown","6c0a6176":"markdown","60e4a399":"markdown","8d148cd4":"markdown","b9e696da":"markdown","72800909":"markdown","5b85fac0":"markdown","b46c9afb":"markdown","e00a5984":"markdown","5cab46b1":"markdown","701a346d":"markdown","fe3a9b29":"markdown","b46c654a":"markdown","3ded286e":"markdown"},"source":{"ff93230c":"#data analysis libraries \nimport numpy as np\nimport pandas as pd\n\n#visualization libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n#ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')","10842126":"top2018 = pd.read_csv(\"..\/input\/top-spotify-tracks-of-2018\/top2018.csv\")","f0cf5339":"#read in featuresdf.csv and store in variable named music\nmusic = pd.read_csv(\"..\/input\/top-spotify-tracks-of-2018\/top2018.csv\")\n#look at first five rows of dataset\nmusic.head()","05ed3f12":"#look at summary of dataset\nmusic.describe(include=\"all\")","4d628ef2":"#we'll start off by creating two datasets, numeric and small, with some values removed\nnumeric = music.drop(['id','name','artists'], axis=1)\n#i'm removing the below values since all the other values range between 0.0 and 1.0\n#the other values are much larger, making it hard to see these values\nsmall = numeric.drop(['tempo','duration_ms','key','loudness','time_signature'], axis=1)","938359b5":"#set color palette to pastel\nsns.set_palette('pastel')","2a898b77":"#create a bar chart of the mean values of the audio features in the small dataset\nsmall.mean().plot.bar()\nplt.title('Mean Values of Audio Features')\nplt.show()","c5ab71e1":"#mean value and distplot for danceability feature\nprint(\"Mean value for danceability:\", music['danceability'].mean())\nsns.distplot(music['danceability'])\nplt.show()","71d7b525":"#mean value and distplot for energy feature\nprint(\"Mean value for energy:\", music['energy'].mean())\nsns.distplot(music['energy'])\nplt.show()","df1a57c8":"#map the numeric values of key to notes\nkey_mapping = {0.0: 'C', 1.0: 'C\u266f,D\u266d', 2.0: 'D', 3.0: 'D\u266f,E\u266d', 4.0: 'E', 5.0: 'F', 6.0: 'F\u266f,G\u266d', 7.0: 'G', 8.0: 'G\u266f,A\u266d', 9.0: 'A', 10.0: 'A\u266f,B\u266d', 11.0: 'B'}\nmusic['key'] = music['key'].map(key_mapping)\n\nsns.countplot(x = 'key', data=music, order=music['key'].value_counts().index)\nplt.title(\"Count of Song Keys\")\nplt.show()","2a55eca4":"#mean value and distplot for loudness feature\nprint(\"Mean value for loudness:\", music['loudness'].mean())\nsns.distplot(music['loudness'])\nplt.show()","f593446b":"#print mean value for mode\nprint(\"Mean value for mode feature:\", music['mode'].mean())\n\n#map the binary value of mode to major\/minor\nmode_mapping = {1.0: \"major\", 0.0: \"minor\"}\nmusic['mode'] = music['mode'].map(mode_mapping)\n\n#draw a countplot of the values\nsns.countplot(x = 'mode', data=music)\nplt.title(\"Count of Major\/Minor Songs\")\nplt.show()","a4ad08e6":"#mean value and distplot for speechiness feature\nprint(\"Mean value for speechiness:\", music['speechiness'].mean())\nsns.distplot(music['speechiness'])\nplt.show()","64b45020":"#mean value and distplot for acousticness feature\nprint(\"Mean value for acousticness:\", music['acousticness'].mean())\nsns.distplot(music['acousticness'])\nplt.show()","da438e34":"#mean value and distplot for instrumentalness feature\nprint(\"Mean value for instrumentalness:\", music['instrumentalness'].mean())\nsns.distplot(music['instrumentalness'])\nplt.show()","99be72a4":"#mean value and distplot for liveness feature\nprint(\"Mean value for liveness:valen\", music['liveness'].mean())\nsns.distplot(music['liveness'])\nplt.show()","6dbbee22":"#mean value and distplot for valence feature\nprint('Mean value for valence feature:', music['valence'].mean())\nsns.distplot(music['valence'])\nplt.show()","6190c9f0":"#mean value and distplot for tempo feature\nprint('Mean value for tempo feature:', music['tempo'].mean())\nsns.distplot(music['tempo'])\nplt.show()","4eea8ed7":"#mean value and distplot for duration_ms feature\nprint('Mean value for duration_ms feature:', music['duration_ms'].mean())\nsns.distplot(music['duration_ms'])\nplt.show()","1b5f0417":"#mean value and distplot for time_signature feature\nprint('Mean value for time_signature feature:', music['time_signature'].mean())\nsns.distplot(music['time_signature'])\nplt.show()","93527200":"plt.figure(figsize = (18,9))\nsns.heatmap(numeric.corr(), cmap=\"RdGy_r\", annot=True)\nplt.show()","db643dea":"Energy and loudness seem to be pretty correlated, which is not surprising. What I did find surprising is that there seems to be little correlation between energy and danceability. \n\nHere we can see that apart from a handful of songs such as, ZAYN's \"Dusk Till Dawn\", Keala Settle's \"This Is Me\", Billie Eilish's \"lovely, \"XXXTENTACION's \"changes\" and Lil Baby's \"Yes Indeed\", most of the other songs have many similarities in terms of their Audio Features. \nTherefore most listeners and those who stream the songs prefer these similar tastes in music, while rulling out the previously noted songs as they are unique in their own ways. \n","78b2d179":"## Loudness","3ae8a2dd":"**Conclusion:** The most common key among top tracks is C\u266f\/D\u266d. ","55ebb41d":"## First Look\nTo take our first look at the dataset, we'll create a bar chart of the mean values for danceability, energy, mode, speechiness, acousticness, instrumentalness, liveness and valence.","c9dcf634":"## Speechiness","7babc083":"The mean value for instrumentalness is *really, really* low at 0.001583.  \n**Conclusion:** People like songs that have lyrics. ","bc5bdf5a":"## Liveness","9f02c76e":"## 2) Read In and Explore the Data\nIt's time to read in our data using `pd.read_csv`, and take a first look using the `head()` and `describe()` functions.","facbe457":"## Key","6775a7d3":"## Correlation Heatmap","09b24a91":"As expected, the mean value for liveness is pretty low at 0.1583. I wouldn't expect people to listen to live music on Spotify with the audience cheering in the background.  \n**Conclusion:** People like to listen to  live music at concerts, not on Spotify.","1504457b":"Basically all the songs in the playlist are 4\/4.  \n**Conclusion:** People really like songs that are 4\/4? (I wonder if we subconsciously notice this or something.) ","88599b67":"The mean value for duration is 205206.78 milliseconds, which is around 3 minutes and 25 seconds.  \n**Conclusion:** People don't like it when songs are too short or too long. (Duh - although I'd say that 3 mins and 25 secs is pretty long already) ","20a9755b":"## Valence","52060df4":"## 3) Data Analysis\nIt's time to analyze each of the features in search of the answer to our question: What makes top Spotify songs popular?","142aeb27":"Happy and sad songs are actually pretty evenly distributed at 0.4844.  \n**Conclusion:** Some days are happy, some days are sad. Music reflects that. ","93f422c1":"# This is a work-in-progress! Any and all feedback is appreciated! ","7a70e481":"People lean more towards songs with a major mode than those with a minor mode. Does this mean people like happier songs? (Maybe we'll find out with the valence feature.)  \n**Conclusion:** Major is preferred over minor. ","6026b68e":"## Mode","bf053d41":"# Top Spotify Tracks of 2018: What Makes Songs Popular?\nIn this kernel, I'll be examining the audio features of the tracks in Spotify's Top Songs of 2018 playlist.\n\n**Contents:**\n\n1. Import Necessary Libraries\n2. Read In and Explore the Data\n3. Data Analysis","ac3d5a24":"## Danceability","6c0a6176":"Once again, the mean value for acousticness is low at 0.1957.  \n**Conclusion:** People don't seem to stream acoustic songs as much non-acoustic ones. Sorry, acoustic covers!","60e4a399":"Again, people seem like energetic songs more than calm ones (mean of 0.659), although this feature seems to be a bit more evenly distributed than danceability.  \n**Conclusion:** People like energetic songs. I wonder what the ages of Spotify users are?","8d148cd4":"## Time Signature","b9e696da":"With a mean value of 0.71646, it's clear that the majority of the top tracks have a high danceability rating.  \n**Conclusion:** People like to stream songs they can dance to. I wonder if this says anything about when\/where people stream songs? (Parties etc.?) ","72800909":"The mean value for tempo is 119.904 bpm, which is actually pretty fast.  \n**Conclusion:** People like fast songs more than slow ones.","5b85fac0":"So the mean value for loudness is -5.677. I'm still kind of confused on how to interpret this (Why are the values negative? Does a more negative value mean less loud or more loud?). If anybody has some insight, it would be greatly appreciated!  \n**Conclusion:** ??","b46c9afb":"## 1) Import Necessary Libraries\nWe'll start off by importing several Python libraries such as `numpy`, `pandas`, `matplotlib.pylot` and `seaborn`.","e00a5984":"## Acousticness","5cab46b1":"## Energy","701a346d":"## Instrumentalness","fe3a9b29":"The mean value for speechiness is pretty low (only 0.1155). This indicates that people prefer actual music. (I wonder if rapping counts as spoken lyrics?)  \n**Conclusion:** Actual music is more popular than, say, audiobooks. (Can't say I didn't see this coming..) ","b46c654a":"## Duration","3ded286e":"## Tempo"}}