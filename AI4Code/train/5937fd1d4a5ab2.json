{"cell_type":{"2c4f1f19":"code","6995717c":"code","414b9853":"code","33740338":"code","a4882f1b":"code","1238f66b":"code","ce1fc4b8":"code","ccbb100d":"code","5038eccd":"code","9d81875c":"code","44636433":"code","a43c57da":"code","bfa8b24a":"code","f84e4182":"code","69c33ede":"code","eb57abd7":"code","9641cc1c":"code","afa01a76":"code","8913f701":"code","f0b230f2":"code","731ea3e4":"code","aede2e7b":"code","016261ca":"code","8a682622":"code","24285eca":"code","a5b72be0":"code","abd9e5f6":"markdown"},"source":{"2c4f1f19":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6995717c":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom pandas.api.types import CategoricalDtype","414b9853":"DataFrame = pd.read_csv(\"\/kaggle\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv\")\ndf = DataFrame.copy()","33740338":"df.head()","a4882f1b":"df.info()","1238f66b":"df.describe().T","ce1fc4b8":"df.gender.value_counts()","ccbb100d":"df.hypertension.value_counts()","5038eccd":"df.heart_disease.value_counts()","9d81875c":"df.ever_married.value_counts()","44636433":"df.work_type.value_counts()","a43c57da":"df.Residence_type.value_counts()","bfa8b24a":"df.smoking_status.value_counts()","f84e4182":"df.stroke.value_counts()","69c33ede":"df.isnull().sum()","eb57abd7":"sns.boxplot(x = \"bmi\", data=df)","9641cc1c":"df.bmi.fillna(df.bmi.median(),inplace=True)","afa01a76":"sns.distplot(df.bmi)","8913f701":"smoking_categories = [\"Unknown\", \"never smoked\", \"formerly smoked\", \"smokes\"]\ndf.smoking_status = df.smoking_status.astype(CategoricalDtype(categories = smoking_categories, ordered = True))","f0b230f2":"sns.barplot(x = \"smoking_status\", y = df.smoking_status.index, \n            palette = \"Greys\", data = df)","731ea3e4":"sns.catplot(x = \"stroke\", y = \"age\", \n            palette = \"cool\", height=6.27, data=df)","aede2e7b":"sns.catplot(x = \"age\",y = \"smoking_status\", kind = 'box', \n            hue = \"gender\", palette = \"cool\",height=6.27, data=df)","016261ca":"sns.catplot(x=\"age\", y=\"smoking_status\", \n            hue=\"stroke\",col=\"gender\", aspect=.6,\n            kind=\"box\", palette = \"cool\", height=6.27, data=df)","8a682622":"\nsns.catplot(x = \"stroke\", y = \"bmi\", \n            hue = \"gender\", kind = \"swarm\", \n            palette = \"cool\", \n            height=8.27, aspect=11.7\/8.27, data=df);","24285eca":"plt.figure(figsize=(15,15))\nplt.subplot(2,1,1)\nplt.title(\"Hypertension on BMI and Average Glucose Level\")\nsns.scatterplot(x = \"avg_glucose_level\", y = \"bmi\", \n                hue = \"hypertension\", palette = \"OrRd\", data=df)\n\nplt.subplot(2,1,2)\nplt.title(\"Hypertension on BMI and Age\")\nsns.scatterplot(x = \"age\", y = \"bmi\", \n                hue = \"hypertension\", palette = \"PuBuGn\", data=df)\nplt.tight_layout()\nplt.show()","a5b72be0":"plt.figure(figsize=(15,15))\nplt.subplot(2,1,1)\nplt.title(\"Stroke on BMI and Average Glucose Level\")\nsns.scatterplot(x = \"avg_glucose_level\" , y = \"bmi\", hue = \"stroke\", palette = \"YlOrBr\", data=df)\n\nplt.subplot(2,1,2)\nplt.title(\"Stroke on BMI and Age\")\nsns.scatterplot(x = \"age\", y = \"bmi\", \n                hue = \"stroke\", palette = \"Reds\", data=df)\n\nplt.tight_layout()\nplt.show()","abd9e5f6":"# Exploratory Data Analysis with Seaborn and Matplotlib on Stroke Dataset"}}