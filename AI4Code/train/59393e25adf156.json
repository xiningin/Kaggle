{"cell_type":{"de7a51dd":"code","b4bd85bf":"code","88fbacd1":"code","83aa96ec":"code","a2f2f082":"code","8ce5ec4d":"code","e389ff1a":"code","1633a233":"code","80b7d50e":"code","3c645912":"code","355eab5e":"code","60673398":"code","6a347d97":"code","430e74cd":"code","27e34336":"code","87c8fc2c":"code","87dcea3c":"code","dec03b8b":"code","dd866b1c":"code","376e7d87":"code","f9e33c0d":"code","1b853a11":"code","c0dccb7c":"code","ad0cba7a":"code","e0bed864":"code","67e5a9a5":"code","fb4d1cc2":"code","792272f3":"code","5d4c52a0":"code","3a441810":"code","df702fa9":"code","4b7ee511":"code","496a6245":"code","2507a599":"code","0be3648c":"code","0786e976":"code","5204fdcc":"code","13ea91d7":"markdown","f9e77332":"markdown","55f65f05":"markdown","b50eb435":"markdown","c6f08ff9":"markdown","79c3ee3e":"markdown","37c467fa":"markdown","cc615bb4":"markdown"},"source":{"de7a51dd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","b4bd85bf":"data=pd.read_csv('..\/input\/master.csv')","88fbacd1":"products=['Milk', 'Eggs']\namount=['3','5']\nlist_label=['products','amount']\nlist_col=[products,amount]\nzipped= list(zip(list_label,list_col))\ndata_dict=dict(zipped)\ndf=pd.DataFrame(data_dict)\ndf","83aa96ec":"#we can new column\n\ndf['brand']=['Nestle','LDC']\ndf['storage temp.']=4\ndf","a2f2f082":"data.info()","8ce5ec4d":"data1=data.loc[:,['suicides_no','population']]\ndata1.plot()\nplt.show()","e389ff1a":"data1.plot(subplots=True)\nplt.show()","1633a233":"#scatter plot\ndata1.plot(kind='scatter',x='suicides_no',y='population') #makes no sense, just to make example\nplt.show()","80b7d50e":"#histogram\n\ndata1.plot(kind='hist',y='population',cumulative=False) #numpy.histogram(a, bins=10, range=None, normed=None, weights=None, density=None)[source]\nplt.show()","3c645912":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\ndata2=data.head()\ndate_list = [\"1992-01-10\",\"1992-02-10\",\"1992-03-10\",\"1993-03-15\",\"1993-03-16\"]\ndatetime_object = pd.to_datetime(date_list)\ndata2[\"date\"] = datetime_object #adding new column\ndata2= data2.set_index(\"date\")\ndata2\n","355eab5e":"print(data2.loc[\"1993-03-16\"])","60673398":"#or we can list between two dates\nprint(data2.loc[\"1992-03-10\":\"1993-03-16\"])","6a347d97":"data_samp=data2.resample('M').mean()\nprint(data_samp)","430e74cd":"interpolated = data_samp.interpolate(method='linear') #interpolations assigns new values  within the range of a discrete set of known data points.\nprint(interpolated)","27e34336":"data3=data.head(8) #first 8 values of dataset","87c8fc2c":"data3['population'][2] #it shuld give 289700 which is second inde according to phyton","87dcea3c":"data3.sex[2]","dec03b8b":"data3.loc[2,['suicides_no']] #it can be done by loc function as well","dd866b1c":"#now we can try to select certain columns\ndata3[['age','population']]","376e7d87":"print(type(data3['age']))","f9e33c0d":"data3.loc[2:4,'age':'population']","1b853a11":"data3.loc[4:2:-1,'age':'population']","c0dccb7c":"#Filtering Data Frame\n\nfilter1=data.suicides_no<10 \nfilter2=data.suicides_no>5\nfilter3=data.population<10000\ndata[filter1 & filter2 & filter3]","ad0cba7a":"data3.population[data3.age=='25-34 years']","e0bed864":"data3.population.apply(lambda n: n\/2)","67e5a9a5":"data3['rate']=data3.suicides_no\/data3.population\ndata3","fb4d1cc2":"#as it is seen on table there is no index name and it starts from 0\n\ndata3.index=range(1,9,1)\ndata3.index.name='index'\ndata3\n","792272f3":"data4=data3.set_index(['age','sex'])\ndata4","5d4c52a0":"data3","3a441810":"data3.pivot(index=\"sex\",columns = \"age\",values=\"suicides_no\") # it shows how many suicides happens according to age and sex from data3 above","df702fa9":"data5 = data3.set_index([\"age\",\"sex\"])\ndata5","4b7ee511":"data5.unstack(level=1) #sex is moved as upper index.","496a6245":"#also possible to switsch outer and inner position\ndata6 = data5.swaplevel(0,1)\ndata6","2507a599":"data7=data3.head(3)\ndata7","0be3648c":"pd.melt(data7,id_vars=\"age\",value_vars=[\"sex\",\"population\"])","0786e976":"data7.groupby(\"sex\").mean()  #max(),min() etc..","5204fdcc":"data7.groupby(\"sex\")[['suicides_no','population']].mean()  ","13ea91d7":"**MANIPULATING DATA**","f9e77332":"Transforming Data","55f65f05":"Changing Index Name and Number","b50eb435":"**VISUALISATION EXERCISES**","c6f08ff9":"**ZIP METHOD EXAMPLE**","79c3ee3e":"Hierarchical Indexing","37c467fa":"**TIME SERIES**","cc615bb4":"***RESAMPLING EXERCISE TIME SERIES***"}}