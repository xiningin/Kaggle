{"cell_type":{"fae8fc4a":"code","3c017db1":"code","677020d9":"code","aa981900":"code","d035e68a":"code","0a3efe02":"code","e3f73178":"code","33672dde":"code","67f3a39a":"code","16dd2bb1":"code","ff6d58b9":"code","c90ac277":"code","5b2ec164":"code","4f492591":"code","8b333fd0":"code","53bd6e79":"code","49b1e07d":"code","06426d30":"code","0c89d47e":"code","65910c43":"code","7d56bb91":"code","0c7231fc":"code","47ef771d":"code","e4d36a50":"code","365e961e":"code","61146c70":"code","6fe8fcd3":"code","07004c7e":"code","447df366":"markdown","6b66e8ed":"markdown","b38d95b9":"markdown","d95c7e37":"markdown","c67978d3":"markdown","087fe352":"markdown"},"source":{"fae8fc4a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","3c017db1":"test_features=pd.read_csv('\/kaggle\/input\/lish-moa\/test_features.csv')\nsample_submission=pd.read_csv('\/kaggle\/input\/lish-moa\/sample_submission.csv')\ntrain_features=pd.read_csv('\/kaggle\/input\/lish-moa\/train_features.csv')\ntrain_targets_scores=pd.read_csv('\/kaggle\/input\/lish-moa\/train_targets_scored.csv')\n#train_targets_nonscored=pd.read_csv('\/kaggle\/input\/lish-moa\/train_targets_nonscored.csv') ignoring as it is optional","677020d9":"sample_submission.head()","aa981900":"test_features.head()","d035e68a":"test_features.info()","0a3efe02":"test_features.columns","e3f73178":"train_features.info()","33672dde":"train_targets_scores.info()","67f3a39a":"train_features.describe()","16dd2bb1":"train_targets_scores.describe()","ff6d58b9":"train_features.head()","c90ac277":"train_features.sig_id.value_counts().head()","5b2ec164":"for col in ['cp_type', 'cp_time', 'cp_dose']:\n    print(train_features[col].value_counts())\n    print('='*80)","4f492591":"# Checking if IDs are aligned, if yes, I can drop them\nassert sum(train_features.sig_id!=train_targets_scores.sig_id)==0","8b333fd0":"X_train=train_features.drop('sig_id', axis=1)\nX_train = pd.get_dummies(X_train)\nX_train.head()","53bd6e79":"y_train = train_targets_scores.drop('sig_id', axis=1)\ny_train.head()","49b1e07d":"# Repeating the same for test and sample submission\nassert sum(test_features.sig_id!=sample_submission.sig_id)==0","06426d30":"X_test = test_features.drop('sig_id', axis=1)\nX_test = pd.get_dummies(X_test)\nX_test.head()","0c89d47e":"from sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.model_selection import cross_val_score","65910c43":"knn=KNeighborsRegressor()","7d56bb91":"knn.fit(X_train, y_train.values)","0c7231fc":"y_pred = knn.predict(X_train.head(5))","47ef771d":"y_pred","e4d36a50":"y_pred_test=knn.predict(X_test)","365e961e":"pred_cols = sample_submission.drop('sig_id', axis=1).columns","61146c70":"sample_submission[pred_cols]=y_pred_test","6fe8fcd3":"sample_submission.head()","07004c7e":"sample_submission.to_csv('submission.csv', index=False)","447df366":"# About this notebook\nThis notebook is going to be my first contact with this competition. I.E., before reading the currently created notebooks, I want to take a fast exploration and submission by myself to get an idea on how this dataset looks like and what are the main challenges","6b66e8ed":"## 3. Preparing the Data","b38d95b9":"## 5. Prepare Submission","d95c7e37":"## 2. Quick EDA","c67978d3":"## 4. Importing and Training Baseline Model","087fe352":"## 1. Import Data"}}