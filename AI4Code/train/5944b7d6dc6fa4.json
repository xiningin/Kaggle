{"cell_type":{"a4c78a41":"code","33e6fe24":"code","7d378993":"code","8b066290":"code","359fcbd2":"code","45d2ed49":"code","99ac7416":"code","239116c3":"code","bbde57bb":"code","ae369080":"code","e03f1de5":"code","ebf81e51":"code","dad6abb3":"code","b75217b6":"code","6bacd3e3":"code","a00cb9d6":"code","981bea2c":"code","58d434c2":"code","734074c6":"code","76e9a819":"code","8b10a2de":"markdown","0e9c1823":"markdown","512c5be4":"markdown","4483fe3b":"markdown","1f842425":"markdown"},"source":{"a4c78a41":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","33e6fe24":"x = np.arange(0,10)\ny = 2*x","7d378993":"x","8b066290":"y","359fcbd2":"a = np.linspace(0,10,11)\nb = a**4","45d2ed49":"a","99ac7416":"b","239116c3":"plt.plot(x,y)\n#plt.show()\nplt.xlabel('X Axis')\nplt.ylabel('Y Axis')\n#plt.xlim(0,7) #limitation for X\n#plt.ylim(4,12)  # Limitation for y\nplt.title('Sample Title')\nplt.savefig('MyfirstPlot.png') # save to png","bbde57bb":"plt.figure()","ae369080":"fig = plt.figure()\naxes = fig.add_axes([0,0,1,1])\naxes.plot(x,y)","e03f1de5":"fig = plt.figure()\n\n#Large Axes\nlarge_axes = fig.add_axes([0,0,1,1])\nlarge_axes.plot(a,b)\n\n#Small Axes\nsmall_axes = fig.add_axes([0.15,0.35,0.5,0.5])\nsmall_axes.plot(x,y)\n","ebf81e51":"fig = plt.figure()\n\n#Large Axes\nlarge_axes = fig.add_axes([0,0,1,1])\nlarge_axes.plot(a,b)\n\nlarge_axes.set_xlim(0,10)\nlarge_axes.set_ylim(0,10000)\nlarge_axes.set_xlabel('A')\nlarge_axes.set_ylabel('B')\nlarge_axes.set_title('Power of 4')\n\n#Small Axes\nsmall_axes = fig.add_axes([0.15,0.35,0.5,0.5])\nsmall_axes.plot(a,b)\n\nsmall_axes.set_xlim(4,6)\nsmall_axes.set_ylim(0,2000)\nsmall_axes.set_xlabel('A')\nsmall_axes.set_ylabel('B')\nsmall_axes.set_title('Zoom in 4-6')","dad6abb3":"fig = plt.figure(dpi =100)\naxes1= fig.add_axes([0,0,1,1])\naxes1.plot(a,b)","b75217b6":"fig = plt.figure(figsize=(10,3))\naxes1= fig.add_axes([0,0,1,1])\naxes1.plot(a,b)","6bacd3e3":"fig = plt.figure(figsize=(10,3), dpi =100)\naxes1= fig.add_axes([0,0,1,1])\naxes1.plot(a,b)","a00cb9d6":"fig,axes = plt.subplots(nrows=1,ncols=2)\n\naxes[0].plot(x,y)\naxes[1].plot(a,b)","981bea2c":"type(axes)","58d434c2":"fig,axes = plt.subplots(nrows=2,ncols=2)\n\naxes[0][0].plot(x,y)\naxes[0][0].set_xlabel(\"X lable\")\n\naxes[1][1].plot(a,b)\n\n#plt.tight_layout() #tidy axes OR\n\nfig.subplots_adjust(wspace=0.5,hspace=0.5) #adjust plots\n\nfig.suptitle(\"Super Title\", fontsize = 18) # Title for all plots","734074c6":"fig = plt.figure()\nax = fig.add_axes([0,0,1,1])\n\nax.plot(x,x,label='X vs X')\n\nax.plot(x,x**2,label='X vs X^2')\n\nax.legend() #inside\n\n#ax.legend(loc=(1.1,0.5)) #outside","76e9a819":"fig = plt.figure()\nax = fig.add_axes([0,0,1,1])\n\nax.plot(x,x,label='X vs X', color='purple', linewidth=2, marker='>', ls='-.',markersize=10)\n\nax.plot(x,x**2,label='X vs X^2', marker=\"o\", ls='dashed', markersize=10, markerfacecolor='orange')\n\nax.legend()\n","8b10a2de":"# Styling\n**Legends**","0e9c1823":"# **Figure Parameters** \n\n**1. DPI**","512c5be4":"# Subplots","4483fe3b":"* figsize + DPI","1f842425":"**2. figure size**\nbased on inches"}}