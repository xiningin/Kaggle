{"cell_type":{"251eec98":"code","5dc75182":"code","51310983":"code","c75d6e97":"code","3cc06a7e":"code","d5ef2a8b":"code","57b227b1":"code","579012ae":"code","79419027":"code","28d56362":"markdown"},"source":{"251eec98":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","5dc75182":"# Import and clean data\ndf = pd.read_csv('..\/input\/cs-training.csv')\ndf = df.dropna()\ndf = df.drop(columns = ['Unnamed: 0'])\ndf.describe()","51310983":"# Feature and target separation\nX = df.drop(columns = ['SeriousDlqin2yrs'])\ny = df['SeriousDlqin2yrs']","c75d6e97":"# Train test split\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)","3cc06a7e":"# Train a logistic regression\nfrom sklearn.linear_model import LogisticRegression\nlogreg = LogisticRegression()\nlogreg.fit(X_train, y_train)","d5ef2a8b":"# Generate prediction and calculate accuracy\ny_pred = logreg.predict(X_test)\nprint('Accuracy of logistic regression classifier on test set: {:.2f}'.format(logreg.score(X_test, y_test)))","57b227b1":"# Confusion matrix on test set\nfrom sklearn.metrics import confusion_matrix\nconfusion_matrix = confusion_matrix(y_test, y_pred)\nprint(confusion_matrix)","579012ae":"# Plot the ROC-AUC curve\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.metrics import roc_curve\nimport matplotlib.pyplot as plt\nlogit_roc_auc = roc_auc_score(y_test, logreg.predict(X_test))\nfpr, tpr, thresholds = roc_curve(y_test, logreg.predict_proba(X_test)[:,1])\nplt.figure()\nplt.plot(fpr, tpr, label='Logistic Regression (area = %0.3f)' % logit_roc_auc)\nplt.plot([0, 1], [0, 1],'r--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver operating characteristic')\nplt.legend(loc=\"lower right\")\nplt.savefig('Log_ROC')\nplt.show()","79419027":"roc_auc_score(y_test, logreg.predict(X_test))","28d56362":"# Esercitazione su Credit Risk Analysis"}}