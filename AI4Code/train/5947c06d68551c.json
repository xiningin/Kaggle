{"cell_type":{"6c610869":"code","e25f9de8":"code","14f57bb9":"code","18aa901c":"code","ee2239a0":"code","f4767538":"code","226d7e7d":"code","71804b16":"code","3b4665ec":"code","0df0bddb":"code","c12b9eb6":"code","3c062ba8":"code","974689e7":"code","4f99a0e4":"code","63b256ec":"code","c079b982":"code","f951d654":"code","0f13ae92":"code","be35ea6a":"code","a74f3bc4":"code","e6dc5b35":"code","c63437bb":"code","3cfb943f":"code","d2222778":"code","7c6952be":"code","6070b05d":"code","a8eb23b2":"code","7b1a4aaa":"code","2a3ecb45":"code","1a5af204":"code","75af4afe":"code","956e180b":"code","5b353fbc":"code","385960c8":"code","10801fe3":"code","4fa2978d":"code","1c2ce0ab":"code","73d36f53":"code","e4206b07":"code","200e2884":"code","55f87d05":"code","06087dd0":"code","c2b28101":"code","9e2d50c3":"markdown","0c037e01":"markdown","7b636489":"markdown","fcd706d4":"markdown","a228dbd5":"markdown","af5ffa42":"markdown","44a3c80a":"markdown","dac7c525":"markdown","9bc73b0f":"markdown"},"source":{"6c610869":"import numpy as np\nimport pandas as pd\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport re\nimport calendar\nimport seaborn as sns\nfrom matplotlib import pyplot as plt","e25f9de8":"history = pd.read_csv('\/kaggle\/input\/netflix-data\/NetflixViewingHistory.csv')\nnetflix_data = pd.read_csv('\/kaggle\/input\/netflix-data\/netflix_titles.csv')","14f57bb9":"dataset=history\nsns.set(style=\"whitegrid\")","18aa901c":"dataset.head()","ee2239a0":"def title_segmentation(df, col, col2):\n    index_col = df.columns.get_loc(col)\n    index_col2 = df.columns.get_loc(col2)\n    title=\"\"\n    for rows in range(len(df)):\n        title = df.iat[rows, index_col]\n        new_title=\"\"\n        season=\"\"\n        count=0\n        for i in range(len(title)):\n            if title[i]!=\":\":\n                if count==0:\n                    new_title = new_title+title[i]\n                elif count==1:\n                    season = season+title[i]\n                else:\n                    break\n            else:\n                count=count+1\n                \n        df.iat[rows, index_col] = new_title\n        if season==\"\":\n            season=\"N\/A\"\n        df.iat[rows, index_col2] = season\n\ndataset[\"Season\"]=\"\"\ntitle_segmentation(dataset, 'Title', 'Season')","f4767538":"dataset.head()","226d7e7d":"dataset['Views_total']=1\ng=dataset.groupby(['Title'])\ndf=g.sum()","71804b16":"drop=['Season','Date','Views_total']\ndummy = dataset.drop(drop,axis=1)\ndummy = pd.merge(df,dummy, on='Title', how='inner')\ndummy = dummy.drop_duplicates()","3b4665ec":"print(\"Top 10 shows watched:\")\ndummy=dummy.sort_values([\"Views_total\"],ascending=False)\ndf = dummy.head(10)\ndf","0df0bddb":"dummy=dummy.sort_values([\"Views_total\"],ascending=False)\ndf = dummy.head(10)\nfig, ax = plt.subplots(figsize=(10, 8))\nchart = sns.barplot(x=df['Title'],y=df['Views_total'])\nchart.set_xticklabels(labels=chart.get_xticklabels(),rotation=90, horizontalalignment='left')\nplt.show()","c12b9eb6":"dataset.drop('Views_total',axis=1,inplace=True)\ndataset['Views_season']=1\ng=dataset.groupby(['Title','Season'])\ndf=g.sum()","3c062ba8":"drop=['Date','Views_season']\ndummy = dataset.drop(drop,axis=1)\non=['Title','Season']\ndummy = pd.merge(df,dummy, on=on, how='inner')\ndummy = dummy.drop_duplicates()","974689e7":"dummy=dummy.sort_values([\"Views_season\"],ascending=False)\ndf=dummy.head(10)","4f99a0e4":"print(\"Top 10 shows watched according to season:\")\ndf","63b256ec":"dummy=dummy.sort_values([\"Views_season\"],ascending=False)\nfig, ax = plt.subplots(figsize=(10, 8))\nchart=sns.barplot(x=df['Title'],y=df['Views_season'])\nchart.set_xticklabels(labels=chart.get_xticklabels(),rotation=90, horizontalalignment='left')\nplt.show()","c079b982":"dataset.drop('Views_season', axis=1, inplace=True)\ndataset['Views_total']=1\ng=history.groupby(['Title'])\ndf=g.sum()\ndataset.drop('Views_total', axis=1, inplace=True)\ndataset=pd.merge(dataset,df,on='Title',how='inner')","f951d654":"def date_segmentation(df, col, col2, col3):\n    index_col = df.columns.get_loc(col)\n    index_col2 = df.columns.get_loc(col2)\n    index_col3 = df.columns.get_loc(col3)\n    for rows in range(len(df)):\n        date = df.iat[rows, index_col]\n        m=\"\"\n        d=\"\"\n        count=0\n        for i in range(len(date)):\n            if date[i]!='\/':\n                if count==0:\n                    d=d+date[i]\n                elif count==1:\n                    m=m+date[i]\n                else:\n                    break\n            else:\n                count=count+1\n                if count==1:\n                    df.iat[rows, index_col2]=int(d)\n                else:\n                    df.iat[rows, index_col3]=int(m)\n        \n        \ndataset['Day']=0\ndataset['Month']=0\ndate_segmentation(dataset, 'Date', 'Day', 'Month')","0f13ae92":"dataset.head()","be35ea6a":"dataset['Date']=pd.to_datetime(dataset['Date'])\ndataset['Year'] = pd.DatetimeIndex(dataset['Date']).year","a74f3bc4":"# Function to convert month number to month names\n\ndef month_converter(df, col, col2):\n    index_col = df.columns.get_loc(col)\n    index_col2 = df.columns.get_loc(col2)\n    for rows in range(len(df)):\n        month = df.iat[rows, index_col]\n        \n        if df.iat[rows,index_col]==1:\n            df.iat[rows, index_col2]=\"January\"\n        if df.iat[rows,index_col]==2:\n            df.iat[rows, index_col2]=\"February\"\n        if df.iat[rows,index_col]==3:\n            df.iat[rows, index_col2]=\"March\"\n        if df.iat[rows,index_col]==4:\n            df.iat[rows, index_col2]=\"April\"\n        if df.iat[rows,index_col]==5:\n            df.iat[rows, index_col2]=\"May\"\n        if df.iat[rows,index_col]==6:\n            df.iat[rows, index_col2]=\"June\"\n        if df.iat[rows,index_col]==7:\n            df.iat[rows, index_col2]=\"July\"\n        if df.iat[rows,index_col]==8:\n            df.iat[rows, index_col2]=\"August\"\n        if df.iat[rows,index_col]==9:\n            df.iat[rows, index_col2]=\"September\"\n        if df.iat[rows,index_col]==10:\n            df.iat[rows, index_col2]=\"October\"\n        if df.iat[rows,index_col]==11:\n            df.iat[rows, index_col2]=\"November\"\n        if df.iat[rows,index_col]==12:\n            df.iat[rows, index_col2]=\"December\"\n\ndataset['Month_Name']=\"\"\nmonth_converter(dataset, 'Month', 'Month_Name')","e6dc5b35":"dataset.head()","c63437bb":"# function to convert weekdays to weeknames\n\ndef day_converter(df,new_col,old_col):\n    index_old = df.columns.get_loc(old_col)\n    index_new = df.columns.get_loc(new_col)\n    for row in range(0,len(df)):\n        df.iat[row,index_new]=calendar.day_name[df.iat[row, index_old].weekday()]\n        \ndataset['Day_Name']=\"\"\ndataset['Date']=pd.to_datetime(history['Date'])\nday_converter(dataset,'Day_Name','Date')","3cfb943f":"dataset.head()","d2222778":"df = dataset\ndrop = ['Date', 'Season', 'Views_total', 'Day',\n       'Month', 'Month_Name', 'Day_Name']\ndf=df.drop(drop,axis=1)\ndf['Yearly Views'] = 1\ng=df.groupby(['Year'])\ndf2=g.sum()","7c6952be":"on=['Year']\ndf.drop('Yearly Views',axis=1,inplace=True)\ndummy=pd.merge(df,df2,on=on, how='inner')\nchart = sns.barplot(x=dummy['Year'], y=dummy['Yearly Views'])","6070b05d":"df = dataset\ndrop = ['Date', 'Season', 'Views_total', 'Day',\n       'Month', 'Day_Name']\ndf=df.drop(drop,axis=1)\ndf['Monthly Views'] = 1\ng=df.groupby(['Year','Month_Name'])\ndf2=g.sum()","a8eb23b2":"on=['Year','Month_Name']\ndf.drop('Monthly Views',axis=1,inplace=True)\ndummy=pd.merge(df,df2,on=on, how='inner')\nfig, ax = plt.subplots(figsize=(10, 8))\nchart = sns.barplot(x=dummy['Month_Name'], y=dummy['Monthly Views'], hue=dummy['Year'])\nchart.set_xticklabels(labels=chart.get_xticklabels(),rotation=90, horizontalalignment='left')\nplt.show()","7b1a4aaa":"netflix_data.head()\nnetflix_data['Title']=netflix_data['title']","2a3ecb45":"dataset=pd.merge(dataset,netflix_data,on='Title', how='inner')","1a5af204":"movies = dataset[dataset['type']==\"Movie\"]","75af4afe":"drop=['cast','title','show_id','description','type','Season','director','country','duration']\nmovies=movies.drop(drop, axis=1)","956e180b":"movies.head()","5b353fbc":"movie_details = pd.read_csv('\/kaggle\/input\/netflix-data\/IMDb movies.csv')","385960c8":"movie_details['Title']=movie_details['title']","10801fe3":"movies=pd.merge(movies,movie_details,on='Title', how='inner')","4fa2978d":"drop=['title','original_title','imdb_title_id','reviews_from_users','reviews_from_critics','worlwide_gross_income','writer','usa_gross_income','budget', 'production_company']\nmovies=movies.drop(drop, axis=1)","1c2ce0ab":"movies.head()","73d36f53":"# we will be extracting primary genre for visualisation purposes\n\ndef genre_segmentation(df, col):\n    index_col = df.columns.get_loc(col)\n    \n    for row in range(len(df)):\n        genre = df.iat[row,index_col]\n        genre_new=\"\"\n        for i in range(len(genre)):\n            if genre[i]!=',':\n                genre_new=genre_new+genre[i]\n            else:\n                break\n        \n        df.iat[row,index_col]=genre_new\n        \ngenre_segmentation(movies, 'genre')","e4206b07":"drop=['Date','Month','Day','Year','Month_Name','Day_Name','year','duration','date_published']\ndummy=movies.drop(drop,axis=1)\ndummy = dummy.drop_duplicates()","200e2884":"dummy['Genre Views']=1\ndrop = ['avg_vote','Views_total','votes', 'metascore','release_year','rating']\ng=dummy.drop(drop, axis=1).groupby(['genre'])\ndf=g.sum()","55f87d05":"dummy.drop('Genre Views', axis=1, inplace=True)\ndummy=pd.merge(dummy,df,on='genre',how='inner')","06087dd0":"drop = ['Title', 'Views_total', 'date_added', 'release_year', 'rating',\n       'listed_in','country', 'language', 'director', 'actors',\n       'description', 'avg_vote', 'votes', 'metascore']\ndummy2 = dummy.drop(drop, axis=1)","c2b28101":"dummy2=dummy2.sort_values([\"Genre Views\"],ascending=False)\nfig, ax = plt.subplots(figsize=(10, 8))\nchart = sns.barplot(x=dummy2['genre'],y=dummy2['Genre Views'])\nchart.set_xticklabels(labels=chart.get_xticklabels(),rotation=90, horizontalalignment='left')\nplt.show()","9e2d50c3":"## Plot to comapare yearly views since 2016","0c037e01":"## Plot to compare monthly views since 2016","7b636489":"## Movie views based on genre","fcd706d4":"# Data Pre-Processing","a228dbd5":"# Introduction\n\nIn this notebook, I will be analysing our netflix account data to understand our viewing history. I have used external data sources from kaggle for data engineering and data augmentation. ","af5ffa42":"# Data Engineering-Movies","44a3c80a":"## Top 10 shows watched(based on seasons)","dac7c525":"## Top 10 shows watched","9bc73b0f":"# Conclusion\n\nSo far, I have observed that:\n1. we have watched a lot of TV-shows\/movies during 2020. The reason is obvious, due to lockdown and covid-19 situation. \n2. We used a lot of netflix during the month of July and August. \n3. Big-Bang Theory has been one of the most watched TV-shows till now followed by Friends and Naruto.\n4. In case of movies, we have watched comedy genre movies a lot followed by action movies.\n\nI will be trying to do some more analysis based on other features like duration of movie, country of making etc."}}