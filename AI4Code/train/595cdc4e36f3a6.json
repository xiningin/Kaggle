{"cell_type":{"c0065478":"code","e9b47b34":"code","21d24c5e":"code","26f6cc05":"code","6c560424":"code","71526758":"code","27b46e56":"code","dd84dc38":"code","f59299ec":"code","42c6781b":"code","3ff5652b":"code","56156179":"code","e724570d":"code","26d751c7":"code","bf697177":"code","71b3ea42":"code","c534a6e7":"code","31f9fd35":"code","07149ed1":"code","cd8b5fe4":"code","f56e8cc1":"code","7640598a":"code","ba7bb8a7":"code","6f5d3358":"code","f1ab1152":"code","1f1f405e":"code","2a5d27d9":"code","c713c4b9":"code","6feb0dbd":"code","d78a63a4":"code","4f7141a3":"code","f3cded45":"code","e8203de2":"code","f24c4d07":"code","c144f784":"code","8f73ab22":"code","52cadb59":"code","1f4ea339":"code","94c2478b":"code","85b02c7c":"code","ac4ff561":"code","c9951c5f":"code","9a8cfcd6":"code","9b7e0b09":"code","f2dcf79a":"markdown","bb84c5b2":"markdown","602775d6":"markdown","595d3c89":"markdown","a7800a22":"markdown","349c46a4":"markdown","bbad911c":"markdown","f92ad1d9":"markdown","988f46ae":"markdown","b33711c3":"markdown","3401548e":"markdown","b0bf85de":"markdown","154b4239":"markdown","21c364ad":"markdown","93890045":"markdown","8e3013b1":"markdown","f0d264d2":"markdown","70d7dfb0":"markdown","d007cb31":"markdown","632befa7":"markdown"},"source":{"c0065478":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e9b47b34":"import matplotlib.pyplot as plt","21d24c5e":"df=pd.read_excel('https:\/\/cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud\/IBMDeveloperSkillsNetwork-DV0101EN-SkillsNetwork\/Data%20Files\/Canada.xlsx',sheet_name='Canada by Citizenship',\n                   skiprows=range(20),\n                            skipfooter=2)\ndf.head()","26f6cc05":"df.iloc[:, 9: ] ","6c560424":"df.rename(columns={'OdName':'Country', 'AreaName':'Continent','RegName':'Region'}, inplace=True)\ndf.head()\n#Here we change the name of some features for better understanding","71526758":"all(isinstance(column, str) for column in df.columns)","27b46e56":"df_continent=df.groupby(\"Continent\",axis=0).sum()\n# group countries by continents and apply sum() function ","dd84dc38":"df.info()","f59299ec":"df[\"Total\"]=df.sum(axis=1)\n#Here we create another column that shows the number of immigrants by country","42c6781b":"df.set_index('Country', inplace=True)#here we assign country column as the index of the data frame\ndf.head()","3ff5652b":"plt.style.use('ggplot')","56156179":"top_five_countries=df.sort_values(by=[\"Total\"],ascending=False).head()\ntop_five_countries","e724570d":"top_five_countries.drop([     'Type',  'Coverage',      'AREA', 'Continent',       'REG',\n          'Region',       'DEV',   'DevName'], axis=1, inplace=True)\ntop_five_countries\n#Here we get rid of the unnecessary columns","26d751c7":"top_five_countries= top_five_countries.T\ntop_five_countries","bf697177":"top_five_countries.plot(kind='area', stacked=False,figsize=(20, 10),)\nplt.title('Immigration Trend of Top 5 Countries')\nplt.ylabel('Number of Immigrants')\nplt.xlabel('Years')\n#Becasuse the last row represents the total number og immigrants, we need to ignore it and replot the data","71b3ea42":"top_five_countries.iloc[:-1].plot(kind='area', stacked=False,figsize=(20, 10),)\n\nplt.title('Immigration Trend of Top 5 Countries')\nplt.ylabel('Number of Immigrants')\nplt.xlabel('Years')","c534a6e7":"#This plot is stacked version of the previous plot, we change just the stacked parameter as True\ntop_five_countries.iloc[:-1].plot(kind='area', stacked=True,figsize=(20, 10),)\nplt.title('Immigration Trend of Top 5 Countries')\nplt.ylabel('Number of Immigrants')\nplt.xlabel('Years')","31f9fd35":"ax = top_five_countries.iloc[:-1].plot(kind='area', alpha=0.4, figsize=(20, 10))\n\nax.set_title('Immigration Trend of Top 5 Countries')\nax.set_ylabel('Number of Immigrants')\nax.set_xlabel('Years')","07149ed1":"df.drop(['Type',  'Coverage',      'AREA', 'Continent',       'REG',\n          'Region',       'DEV',   'DevName'],axis=1, inplace=True)\n#Because we will evaluate the immigration year by year in countries, we will drop unncessary columns\ndf.head()","cd8b5fe4":"df[1980].plot(kind=\"hist\",figsize=(20,10))\nplt.title('Histogram of Immigration from 195 Countries in 1980') \nplt.ylabel('Number of Countries')\nplt.xlabel('Number of Immigrants')\n#From this plot we see that there are few countries that give higher number immigrants to Canada","f56e8cc1":"df[df[1980]>8000]\n#Here we see these states that gives the highest number of immigrants to Canada","7640598a":"df[2013].plot(kind=\"hist\",figsize=(20,10))\nplt.title('Histogram of Immigration from 195 Countries in 2013') \nplt.ylabel('Number of Countries')\nplt.xlabel('Number of Immigrants')\n#This trend continues to 2013","ba7bb8a7":"df[df[2013]>8000]\n#however some of the countries like China and Iran emerges as the countries which gives the highest number of immigrants","6f5d3358":"df.loc[['Denmark', 'Norway', 'Sweden']].transpose()[['Denmark', 'Norway', 'Sweden']].plot(kind=\"hist\",figsize=(20,10))\nplt.title('Histogram of Immigration from Denmark, Norway Sweden') \nplt.ylabel('Number of Years')\nplt.xlabel('Number of Immigrants')\n","f1ab1152":"df","1f1f405e":"df.loc[\"Afghanistan\"][:-1].plot(kind='bar', figsize=(20, 10))\n\nplt.xlabel('Year') # add x_label\nplt.ylabel('Number of immigrants') # add y-label to the plot\nplt.title('Afghan immigrants to Canada from 1980 to 2013')\n\nplt.annotate('2001 Terror Attacks', # text to display\n             xy=(20, 3400),                    # start the text at at point (year 2000 , pop 50)\n             rotation=80,                  \n             va='bottom',                    # want the text to be vertically 'bottom' aligned\n             ha='left',                      # want the text to be horizontally 'left' algned.\n            )\n#we see that the number of immigrants reached the peak after 2001 terror attacks","2a5d27d9":"df.loc[\"Afghanistan\"][:-1].plot(kind='barh', figsize=(20, 10), color=\"green\")\n\nplt.xlabel('Number of immigrants') # add x_label\nplt.ylabel('Year') # add y-label to the plot\nplt.title('Afghan immigrants to Canada from 1980 to 2013')","c713c4b9":"df_continent #This is our special dataframe that we groupby states by country column","6feb0dbd":"df_continent[\"Total\"]=df_continent.sum(axis=1)\ndf_continent","d78a63a4":"df_continent[\"Total\"].plot(kind=\"pie\",figsize=(20,10))","4f7141a3":"df_continent[\"Total\"].plot(kind=\"pie\",figsize=(20,10), \n                           autopct='%1.1f%%', # add in percentages\n                           startangle=180,\n                           shadow=True,       # add shadow  \n                          )","f3cded45":"df_continent[\"Total\"].plot(kind=\"pie\",figsize=(20,10), \n                           autopct='%1.1f%%', # add in percentages\n                           startangle=180,\n                           shadow=True,       # add shadow  \n                        explode=[0.1, 0, 0.1, 0.1, 0.1, 0.1]\n                          )\nplt.title('Immigration to Canada by Continent [1980 - 2013]', y=1.12) \n\nplt.axis('equal') \n\n# add legend\nplt.legend()","e8203de2":"df_continent.drop([\"AREA\",\"REG\",\"DEV\"],axis=1,inplace=True)\ndf_continent.head()","f24c4d07":"df_continent_2=df_continent.transpose()\ndf_continent_2","c144f784":"df_continent_2.iloc[:-1].plot(kind=\"box\",figsize=(20,10)) \n#By using .iloc[] we exclude the total row becasuse it will cause unbalanced plot","8f73ab22":"df_continent_2.iloc[:-1][\"Asia\"].describe()\n#We can see the actual numbers by calling the `describe()` method on the dataframe which is consistent with the boxplot","52cadb59":"df2=df.transpose()\n#We will add a new column in order to show total number of immigrants per year\ndf2.head()","1f4ea339":"df2[\"Total Immigrants per Year\"]=df2.sum(axis=1)\ndf2.head()","94c2478b":"df= df2.transpose()\ndf# Here we added the total year row and recreated out data frame","85b02c7c":"years=[   1980,    1981,    1982,    1983,    1984,    1985,    1986,    1987,\n          1988,    1989,    1990,    1991,    1992,    1993,    1994,    1995,\n          1996,    1997,    1998,    1999,    2000,    2001,    2002,    2003,\n          2004,    2005,    2006,    2007,    2008,    2009,    2010,    2011,\n          2012,    2013]","ac4ff561":"plt.figure(figsize=(20,10))\nplt.scatter(x=years, y=df.iloc[-1][:-1])\n\nplt.title('Total Immigration to Canada from 1980 - 2013')\nplt.xlabel('Year')\nplt.ylabel('Number of Immigrants')\n#There is a trend that the years go by, the total number of immigrants increases","c9951c5f":"x = years      # year on x-axis\ny = df.iloc[-1][:-1]    # total on y-axis\nfit = np.polyfit(x, y, deg=1)\n\nfit\n","9a8cfcd6":"import seaborn as sns","9b7e0b09":"plt.figure(figsize=(20,10))\nsns.regplot(x,y, data=df,color=\"green\")# We can also get the regression line via seaborn regplot\n","f2dcf79a":"<font color=\"blue\" >\n    2.7. Bubble Plots:","bb84c5b2":"We will use _pandas_ `groupby` method to summarize the immigration data by `Continent`. The general process of `groupby` involves the following steps:\n\n1.  **Split:** Splitting the data into groups based on some criteria.\n2.  **Apply:** Applying a function to each group independently:\n       .sum()\n       .count()\n       .mean() \n       .std() \n       .aggregate()\n       .apply()\n       .etc..\n3.  **Combine:** Combining the results into a data structure.\n","602775d6":"# 2.Data Visualization in Matplotlib:","595d3c89":"-   Remove the text labels on the pie chart by passing in `legend` and add it as a seperate legend using `plt.legend()`.\n-   Push out the percentages to sit just outside the pie chart by passing in `pctdistance` parameter.\n-   Pass in a custom set of colors for continents by passing in `colors` parameter.\n-   **Explode** the pie chart to emphasize the lowest three continents (Africa, North America, and Latin America and Carribbean) by pasing in `explode` parameter.","a7800a22":"<font color=\"blue\" >\n 2.2. Histograms:\n    \n    A histogram is an approximate representation of the frequency distribution of numerical data.","349c46a4":"We will pass in `kind = 'pie'` keyword, along with the following additional parameters:\n\n-   `autopct` -  is a string or function used to label the wedges with their numeric value. The label will be placed inside the wedge. If it is a format string, the label will be `fmt%pct`.\n-   `startangle` - rotates the start of the pie chart by angle degrees counterclockwise from the x-axis.\n-   `shadow` - Draws a shadow beneath the pie (to give a 3D feel).\n","bbad911c":"We can plot a linear line of best fit, and use it to  predict the number of immigrants in 2015 by using **Numpy**'s `polyfit()` method by passing in the following:\n\n-   `x`: x-coordinates of the data. \n-   `y`: y-coordinates of the data. \n-   `deg`: Degree of fitting polynomial. 1 = linear, 2 = quadratic, and so on.","f92ad1d9":"<font color=\"blue\" >\n    2.5. Box Plots:","988f46ae":"<img src=\"https:\/\/s3-api.us-geo.objectstorage.softlayer.net\/cf-courses-data\/CognitiveClass\/DV0101EN\/labs\/Images\/boxplot_complete.png\" width=440, align=\"center\">\n","b33711c3":"<font color=\"blue\" >\n\nObject oriented method:","3401548e":"To create a bar plot, we can pass one of two arguments via `kind` parameter in `plot()`:\n\n-   `kind=bar` creates a _vertical_ bar plot:the x-axis is used for labelling, and the length of bars on the y-axis corresponds to the magnitude of the variable being measured.\n\n-   `kind=barh` creates a _horizontal_ bar plot:the y-axis is used for labelling, and the length of bars on the x-axis corresponds to the magnitude of the variable being measured","b0bf85de":"A `box plot` is a way of statistically representing the _distribution_ of the data through five main dimensions: \n\n-   **Minimun:** Smallest number in the dataset.\n-   **First quartile:** Middle number between the `minimum` and the `median`.\n-   **Second quartile (Median):** Middle number of the (sorted) dataset.\n-   **Third quartile:** Middle number between `median` and `maximum`.\n-   **Maximum:** Highest number in the dataset.","154b4239":"<font color='blue'>\n2.1. Area Plot:","21c364ad":"# 1.Importing Data and Feature Engineering:","93890045":"<font color=\"blue\" >\n    2.3. Bar Charts:\n    \n    A bar plot is a way of representing data where the length of the bars represents the magnitude\/size of the feature\/variable","8e3013b1":"<img src=\"https:\/\/s3-api.us-geo.objectstorage.softlayer.net\/cf-courses-data\/CognitiveClass\/DV0101EN\/labs\/Images\/Mod3Fig4SplitApplyCombine.png\" height=400 align=\"center\">\n","f0d264d2":"The output is an array with the polynomial coefficients, highest powers first. Since we are plotting a linear regression `y= a*x + b`, our output has 2 elements `[5.56709228e+03, -1.09261952e+07]` with the the slope in position 0 and intercept in position 1. ","70d7dfb0":"<font color=\"blue\">\n    When we look at the continents, the Asia continent gives the highest number of imigrants with some details as follows:\n    \n    \n1.  The minimum number of immigrants is around 25 000 (min), maximum number is around 170 000 (max), and  median number of immigrants is around 100 000 (median).\n    \n2.  25% of the years for period 1980 - 2013 had an annual immigrant count of ~55 000 or fewer (First quartile).\n3.  75% of the years for period 1980 - 2013 had an annual immigrant count of ~140 000 or fewer (Third quartile).\n","d007cb31":"<font color=\"blue\" >\n    2.4. Pie Charts:","632befa7":"<font color=\"blue\" >\n    2.6. Scatter Plots:"}}