{"cell_type":{"112177e3":"code","138c548d":"code","a668c0df":"code","79e4ec34":"code","52141fd7":"code","305be78b":"markdown","a67b3512":"markdown","27a40e09":"markdown","8dcf8273":"markdown","a3c714dd":"markdown","8a553fc6":"markdown"},"source":{"112177e3":"import os\nfrom os import walk\nfrom pylab import *\nfrom skimage import io\nimport cv2\n\ndef get_images(path):\n    real_images = []\n    for _, _, images in walk(path):\n        for image in images:\n            img = cv2.imread(os.path.join(path, image))\n            img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n            real_images.append(img)\n    return real_images\n\ndef show_images(images):\n    i=0\n    for image in images:\n        figure(i)\n        io.imshow(image)\n        i += 1","138c548d":"imgs = get_images('..\/input\/hands\/hands')\nshow_images(imgs)","a668c0df":"def convert_gray(imgs):\n    gray_images = []\n    for img in imgs:\n        gray_img = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)\n        gray_images.append(gray_img)\n    return gray_images\n\ngrays = convert_gray(imgs)\nshow_images(grays)","79e4ec34":"def detect_edges(grays):\n    edges = []\n    for gray in grays:\n        edge = cv2.Canny(gray, 40, 55, apertureSize=3)\n        # making the lines black:\n        edge = cv2.bitwise_not(edge)\n        edges.append(edge)\n    return edges\n\nedges = detect_edges(grays)\nshow_images(edges)","52141fd7":"def blend_images(imgs, edges):\n    blended_imgs = []\n    for img, edge in zip(imgs, edges):\n        # the 2 images need to have the same number of channels, so im putting 3 channels in the edges0 image:\n        edge = cv2.cvtColor(edge, cv2.COLOR_GRAY2RGB)\n        blended_img = cv2.addWeighted(edge, 0.3, img, 0.7, 0)\n        blended_imgs.append(blended_img)\n    return blended_imgs\n\nblended_imgs = blend_images(imgs, edges)\nshow_images(blended_imgs)","305be78b":"#### Exercice from the book \"Practical Machine Learning and Image Processing\" (Himanshu Singh)\n# Finding Palm Lines","a67b3512":"#### Converting to gray scale:","27a40e09":"### Next we blend the previous image with the original one:","8dcf8273":"Calling those functions:","a3c714dd":"## Then we use the filter algorithm \"Canny Edge Detector\" to find the palm lines:","8a553fc6":"Creating useful functions for getting and showing images"}}