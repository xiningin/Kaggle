{"cell_type":{"88104719":"code","d15376b6":"code","9bbb9455":"code","fd2268f5":"code","fb32dbbc":"markdown"},"source":{"88104719":"import pandas as pd\nimport numpy as np\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","d15376b6":"sub1 = '..\/input\/tps12-pseudolabels\/subs\/subs\/0.95690.csv'\nsub2 = '..\/input\/tps12-pseudolabels\/subs\/subs\/0.95687.csv'\nsub3 = '..\/input\/tps12-pseudolabels\/subs\/subs\/0.95686.csv'\nsub4 = '..\/input\/tps12-pseudolabels\/subs\/subs\/0.95683.csv'\nsub5 = '..\/input\/tps12-pseudolabels\/subs\/subs\/0.95682.csv'\nsub6 = '..\/input\/tps12-pseudolabels\/subs\/subs\/0.95680.csv'\nsub7 = '..\/input\/tps12-pseudolabels\/subs\/subs\/0.95679.csv'\nsub8 = '..\/input\/tps12-pseudolabels\/subs\/subs\/0.95675.csv'\nsub9 = '..\/input\/tps12-pseudolabels\/subs\/subs\/0.95674.csv'\nsub10 = '..\/input\/tps12-pseudolabels\/subs\/subs\/0.95673.csv'\nsub11 = '..\/input\/tps12-pseudolabels\/subs\/subs\/0.95671.csv'\n\n\nsubs = [pd.read_csv(f).Cover_Type.to_numpy() for f in [sub1, sub2, sub3, sub4, sub5, sub6, sub7, sub8, sub9, sub10, sub11]]","9bbb9455":"%%time\n\n# One counter per class. tally[i, j] is the count of votes for class j for sample i\ntally = np.zeros((len(subs[0]), 8))\nix = np.arange(tally.shape[0])\nfor sub in subs:\n    tally[ix, sub] += 1\n# get the j that maximizes tally[i, j] for each i\nblend = tally.argmax(axis=1)","fd2268f5":"sub = pd.read_csv('..\/input\/tabular-playground-series-dec-2021\/sample_submission.csv').assign(\n    Cover_Type=blend\n)\nsub.to_csv(\"tps12-fast-blend.csv\", index=False)\nsub.tail(3)","fb32dbbc":"* Super fast blending tool \n* Code minimal\n* Could be improved for better score but this is good starting point\n\nThis is demo only - I am too lazy for blending files :) "}}