{"cell_type":{"d99be2a9":"code","8338b9d3":"code","4e1c811d":"code","b39a3e54":"code","eacea21f":"code","32c983c6":"code","2fe25005":"code","207355ba":"code","f09418a3":"code","b029c4d5":"code","bc601aff":"code","bc84def3":"code","c0294939":"code","2d7f43fa":"code","d96c55ec":"code","5ad56b4a":"code","89d58c09":"code","49fb6af3":"code","50f9cc36":"code","3271d098":"code","970706ff":"code","115df9e7":"code","f3da3f5e":"code","a6e39021":"code","e98d8bce":"code","4bd364c3":"code","fb5e06f4":"code","b93370c9":"code","6d53a26b":"code","bd45a42f":"code","5a678f38":"code","e685de4c":"code","5e052f80":"code","62d47ed9":"code","90976cde":"code","fe261c64":"code","368775ec":"code","c8a1fd3d":"code","9f54e5c9":"markdown","24d0b670":"markdown","94892ef2":"markdown","2ac857f3":"markdown","ccb76bcd":"markdown","bac9cc25":"markdown","8023e5b4":"markdown","839071e7":"markdown","8c05461d":"markdown","a639b454":"markdown","4828713d":"markdown","78081d18":"markdown","eda763dc":"markdown","add4bc3f":"markdown","0ddc89c2":"markdown","3b2aaada":"markdown","add6256f":"markdown","bf23c23d":"markdown","102fb161":"markdown","5b1ca02f":"markdown","8e079bbb":"markdown","39df4d4f":"markdown","b149074a":"markdown","4ddb0882":"markdown","58192091":"markdown","870d20bc":"markdown","54aec0f4":"markdown","60fb5934":"markdown","9a2845e6":"markdown","ab58eab5":"markdown","a52d587d":"markdown","e1fdaed6":"markdown","a9b3f0ca":"markdown","da638648":"markdown","9640fb6f":"markdown","d981cf28":"markdown","1c93d545":"markdown","5a5bd660":"markdown","6b602020":"markdown","1cbbd1cd":"markdown","2c1cafd6":"markdown","10c26d1b":"markdown","bf60bb65":"markdown","1673a932":"markdown","8a709051":"markdown","586d5e0f":"markdown","35b9740b":"markdown","ce47802a":"markdown"},"source":{"d99be2a9":"\nimport pandas as pd\ndf = pd.read_csv('..\/input\/adult-income\/adult11.csv', sep=',')\ndf.head()","8338b9d3":"df.columns = ['age', 'workclass', 'fnlwgt', 'education', 'education-num', 'marital-status', \n              'occupation', 'relationship','race', 'gender', 'capital-gain', 'capital-loss', \n              'hours-per-week', 'native-country', 'salary']\ndf.head()","4e1c811d":"import numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n%matplotlib inline ","b39a3e54":"df.info()","eacea21f":"df.isnull().sum()","32c983c6":"df.corr()","2fe25005":"ax=sns.heatmap(df.corr(),annot=True, cmap=\"spring\")\nbottom, top = ax.get_ylim()","207355ba":"#Histogramlar\u0131na bakal\u0131m\ndf.hist(figsize=(18,8), color = \"yellow\")\nplt.show()","f09418a3":"fig,axarr = plt.subplots(nrows=1,ncols=2,figsize=(11,6))\nsns.countplot(x=\"salary\", data=df, palette='spring',ax=axarr[0])\ndf.salary.value_counts().plot.pie(autopct =\"%1.1f%%\",ax=axarr[1])\nplt.title('Salary Kar\u015f\u0131la\u015ft\u0131rmas\u0131')\nplt.tight_layout()\nplt.show()","b029c4d5":"print(\"Maa\u015f\u0131 50K'dan d\u00fc\u015f\u00fck olanlar\u0131n ya\u015f karakteristi\u011fi:\" + \"\\n\")\nprint(df[df['salary'] == ' <=50K'].age.describe())\nprint('')\nprint(\"Maa\u015f\u0131 50K'dan y\u00fcksek olanlar\u0131n ya\u015f karakteristi\u011fi:\"+ \"\\n\")\nprint(df[df['salary'] == ' >50K'].age.describe())","bc601aff":"plt.figure(figsize=(16,7))\nsns.set(style=\"whitegrid\")\nsns.countplot(df['education'], order = df['education'].value_counts().index, palette='spring')\nplt.xticks(rotation=70)\ndf['education'].value_counts()","bc84def3":"plt.figure(figsize=(12,6))\nsns.barplot(x=\"education\", y=\"hours-per-week\", data=df, hue=\"salary\", palette='spring')\nplt.xticks(rotation=70)","c0294939":"plt.figure(figsize=(12,8))\nsns.pointplot(x=\"education\", y=\"hours-per-week\", hue='gender', palette=\"spring\", linestyles=[\"-\", \"-.\"], data=df)\nplt.xticks(rotation=80)","2d7f43fa":"df.select_dtypes(exclude = 'category').plot(kind = 'box', figsize = (20,8))","d96c55ec":"df=df.drop(\"fnlwgt\",axis=1)","5ad56b4a":"plt.figure(figsize=(19,12))\nnum_feat = df.select_dtypes(include=['int64']).columns\nfor i in range(5):\n    plt.subplot(2,3,i+1)\n    plt.boxplot(df[num_feat[i]])\n    plt.title(num_feat[i],color=\"g\",fontsize=20)\n    plt.yticks(fontsize=14)\n    plt.xticks(fontsize=14)\nplt.show()","89d58c09":"#Capital Gaindeki ayk\u0131r\u0131 veriye bakmak istedim.\ndf.describe()","49fb6af3":"df[['education', 'education-num']].groupby(['education'], as_index=False).mean().sort_values(by='education-num', ascending=False)","50f9cc36":"df.drop(columns=['education'], inplace=True)","3271d098":"df['marital-status'] = df['marital-status'].replace([' Divorced',' Married-spouse-absent',' Never-married',' Separated',' Widowed'],'Single')\ndf['marital-status'] = df['marital-status'].replace([' Married-AF-spouse',' Married-civ-spouse'],'Couple')\n\ndf.head(10)","970706ff":"X = df.drop(['salary'], axis=1)\ny = df['salary']\nX.select_dtypes(include='object').tail(20)","115df9e7":"categorical_columns = [c for c in X.columns  if X[c].dtype.name == 'object']\nfor c in categorical_columns:\n  X[c] = np.where(X[c] == ' ?', X[c].mode(), df[c])\nX.select_dtypes(include='object').tail(20)","f3da3f5e":"X = pd.concat([X, pd.get_dummies(X.select_dtypes(include='object'))], axis=1)\nX = X.drop(['workclass', 'marital-status', 'occupation',\n       'relationship', 'race', 'gender', 'native-country'], axis=1)\nX.head()","a6e39021":"from sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score \nfrom sklearn.metrics import confusion_matrix as cm\nX_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.3, random_state=42)\nd_tree1 = DecisionTreeClassifier(max_depth = 3, random_state=42)\nd_tree1.fit(X_train, y_train)\nprint (\"Train data set size : \", X_train.shape)\nprint (\"Test data set size : \", X_test.shape)","e98d8bce":"predictions = d_tree1.predict(X_test)\nscore = round(accuracy_score(y_test, predictions), 3)\ncm1 = cm(y_test, predictions)\nax=sns.heatmap(cm1, annot=True, fmt=\".0f\", center=0, cmap=\"spring\", linewidths=\"0.5\"  )\nplt.xlabel('Predicted Values')\nplt.ylabel('Actual Values')\nplt.title('Accuracy Score: {0}'.format(score), size = 16)\nplt.show()","4bd364c3":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, predictions, target_names=['50Kdan d\u00fc\u015f\u00fck', '50Kdan y\u00fcksek']))","fb5e06f4":"from sklearn.tree import export_graphviz\n# resim g\u00f6stermesi i\u00e7in\nfrom IPython.display import Image\n# bu \u00e7\u0131kt\u0131y\u0131 yazd\u0131rmak yerine string olarak kaydetmek i\u00e7in \nfrom sklearn.externals.six import StringIO\n# buras\u0131n\u0131n konuyla alakas\u0131 yok, \u00e7\u0131kt\u0131 i\u00e7in bir nesne yarat\u0131l\u0131yor\ndt_data =StringIO()\n# a\u011fac\u0131 d\u0131\u015far\u0131ya aktar\u0131yoruz\nexport_graphviz(d_tree1, out_file=dt_data,filled=True,rounded=True,impurity=False,\n               feature_names=X.columns, class_names=['<=50K','>50K'])\n# pydotplus k\u00fct\u00fcphanesini \u00e7a\u011f\u0131ral\u0131m ve grafik yaratal\u0131m\nimport pydotplus\ngraph = pydotplus.graph_from_dot_data(dt_data.getvalue())\n# bu grafi\u011fi g\u00f6sterelim\nImage(graph.create_png())","b93370c9":"plt.figure(figsize=(16, 9))\n\nfrom sklearn import ensemble\n\nd_tree2 = DecisionTreeClassifier(max_depth = 8, random_state=42)\nd_tree2.fit(X_train, y_train)\nranking = d_tree2.feature_importances_\nfeatures = np.argsort(ranking)[::-1][:10]\ncolumns = X.columns\n\nplt.title(\"Karar A\u011fac\u0131na G\u00f6re \u00d6znitelik \u00d6nem S\u0131ralamas\u0131\", y = 1.03, size = 18)\nplt.bar(range(len(features)), ranking[features], color=\"yellow\", align=\"center\")\nplt.xticks(range(len(features)), columns[features], rotation=80)\nplt.show()","6d53a26b":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score \nfrom sklearn.metrics import confusion_matrix as cm\nlr = LogisticRegression(random_state=42)\nlr.fit(X_train, y_train)","bd45a42f":"predictions = lr.predict(X_test)\nscore = round(accuracy_score(y_test, predictions), 3)\ncm1 = cm(y_test, predictions)\nax=sns.heatmap(cm1, annot=True, fmt=\".0f\", center=0, cmap=\"spring\", linewidths=\"0.5\")\nplt.xlabel('Predicted Values')\nplt.ylabel('Actual Values')\nplt.title('Accuracy Score: {0}'.format(score), size = 15)\nplt.show()","5a678f38":"from sklearn.metrics import classification_report\nprint(classification_report(y_test, predictions, target_names=['<=50K', '>50K']))","e685de4c":"from sklearn.ensemble import GradientBoostingClassifier\nGB = GradientBoostingClassifier(loss='exponential',learning_rate=0.01,n_estimators=200)\nGB.fit(X_train,y_train)","5e052f80":"predictions = GB.predict(X_test)\nscore = round(accuracy_score(y_test, predictions), 3)\ncm1 = cm(y_test, predictions)\nax=sns.heatmap(cm1, annot=True, fmt=\".0f\", center=0, cmap=\"spring\", linewidths=\"0.5\")\nplt.xlabel('Predicted Values')\nplt.ylabel('Actual Values')\nplt.title('Accuracy Score: {0}'.format(score), size = 15)\nplt.show()","62d47ed9":"y_pred = GB.predict(X_test)\nprint('Classification Report:')\nprint('\\n')\nprint(classification_report(y_test,y_pred))","90976cde":"import xgboost as xgb\nXgb = xgb.XGBClassifier(learning_rate=0.1,n_estimators=500,max_depth=5,min_child_weight=4,random_state=42 )\nXgb.fit(X_train, y_train)\npredictions = Xgb.predict(X_test)\nXGBA = accuracy_score(y_test, predictions)","fe261c64":"score = round(accuracy_score(y_test, predictions), 3)\ncm1 = cm(y_test, predictions)\nax=sns.heatmap(cm1, annot=True, fmt=\".0f\", center=0, cmap=\"spring\", linewidths=\"0.5\")\nplt.xlabel('Predicted Values')\nplt.ylabel('Actual Values')\nplt.title('Accuracy Score: {0}'.format(score), size = 15)\nplt.show()","368775ec":"Kars\u0131last\u0131rma = pd.DataFrame({d_tree1.score(X_test, y_test),\n                              lr.score(X_test, y_test),\n                       Xgb.score(X_test, y_test),\n                       GB.score(X_test, y_test)})\nKars\u0131last\u0131rma.index = ['Karar A\u011fac\u0131 Modeli Skoru','Lojistik Regresyon S\u0131n\u0131fland\u0131rmas\u0131 Skoru',\n                       'XGBoosting S\u0131n\u0131fland\u0131rmas\u0131 Skoru',\n                       'Gradient Boosting Skoru']\nKars\u0131last\u0131rma","c8a1fd3d":"SonTablo = pd.DataFrame({ \"Ger\u00e7ek Salary\": y_test[0:10],\n                        \"Karar A\u011fac\u0131 Sonucu\": d_tree1.predict(X_test)[0:10],\n                        \"Lojistik Regresyon Sonucu\": lr.predict(X_test)[0:10],\n                          \"Gradient Boosting Sonucu\": GB.predict(X_test)[0:10],\n                        \"XGBoost Sonucu\": Xgb.predict(X_test)[0:10]}); SonTablo","9f54e5c9":" <font color=magenta> Korelasyonlar\u0131n incelenmesi","24d0b670":"<font color=magenta> Modeli kurma, standart modelleme s\u00fcre\u00e7lerini uygulama:","94892ef2":"<font color=magenta>Y\u0131ll\u0131k geliri d\u00fc\u015f\u00fck olanlar\u0131n t\u00fcm data setinin 3\/4'\u00fc oldu\u011funu g\u00f6r\u00fcyoruz. ","2ac857f3":"0.8-1.0 \u00c7ok g\u00fc\u00e7l\u00fc korelasyon\n\n0.6-0.8 G\u00fc\u00e7l\u00fc korelasyon\n\n0.4-0.6 Il\u0131ml\u0131 korelasyon\n\n0.2-0.4 Zay\u0131f korelasyon\n\n<font color=magenta>0.0-0.2 \u00c7ok zay\u0131f veya korelasyon yok. En y\u00fcksek korelasyon education number ile hours per week aras\u0131nda g\u00f6zlemlendi. (0.14)","ccb76bcd":"<font color=magenta>Maa\u015f\u0131 y\u00fcksek olanlar\u0131n ortalama ya\u015f\u0131n\u0131n daha fazla oldu\u011funu g\u00f6r\u00fcyoruz. \n\n<font color=magenta>Veri setindeki ki\u015filerin e\u011fitim durumlar\u0131n\u0131n da\u011f\u0131l\u0131m\u0131: ","bac9cc25":"<font color=magenta>Modeli e\u011fitme ve test verisi \u00fczerinde tahmin yapma","8023e5b4":"## <font color=yellow>Kategorik de\u011fi\u015fkenleri inceleme:\n    \n <font color=magenta>   Hedef de\u011fi\u015fken salary oldu\u011fu i\u00e7in onun da\u011f\u0131l\u0131m\u0131na value_counts() fonksiyonuyla bak\u0131l\u0131p seaborn k\u00fct\u00fcphanesiyle g\u00f6rselle\u015ftirildi. \n\n1. plt.figure() ile g\u00f6rselin enini ve boyunu belirliyoruz.\n2. sns.countplot() fonksiyonuna g\u00f6rselle\u015ftirmek istedi\u011fim de\u011fi\u015fkeni yaz\u0131yoruz.\n3. value_counts() fonksiyonuyla hedef de\u011fi\u015fkenin da\u011f\u0131l\u0131m\u0131n\u0131 buluyoruz.","839071e7":"<font color=magenta>D\u00fc\u015f\u00fcnd\u00fc\u011f\u00fcm gibi \u00e7\u0131kt\u0131, education s\u00fctununu siliyoruz.","8c05461d":"A\u015fa\u011f\u0131daki kod \u00e7al\u0131\u015fan bir koddur, bu y\u00fczden kald\u0131rmad\u0131m. Karar a\u011fac\u0131 g\u00f6rselle\u015ftirmesi istiyorsan\u0131z kendi notebookunuzda deneyebilirsiniz.","a639b454":"<font color=magenta>Hours-per-week datas\u0131n\u0131n da\u011f\u0131l\u0131m\u0131n\u0131n normale yak\u0131n oldu\u011fu g\u00f6zlemlendi. Age de\u011fi\u015fkeninin sa\u011fa \u00e7arp\u0131k, education_num de\u011fi\u015fkeninin sola \u00e7arp\u0131k, capital_gain ve capital_loss de\u011fi\u015fkenlerinde ise 0 oran\u0131 y\u00fcksek oldu\u011fu i\u00e7in solda toplanm\u0131\u015f bir yap\u0131 \u00f6ne \u00e7\u0131k\u0131yor. Hour_per_week de\u011fi\u015fkeninin ise sola meyilli ama di\u011fer de\u011fi\u015fkenlerle kar\u015f\u0131la\u015ft\u0131r\u0131ld\u0131\u011f\u0131nda g\u00f6reli normal da\u011f\u0131l\u0131ma daha yak\u0131n bir \u00e7an e\u011frisi \u015fekline sahip oldu\u011fu g\u00f6r\u00fcl\u00fcyor. ","4828713d":"<font color=magenta>4. G\u00f6rmedi\u011fimiz test verisine modele verip tahminde bulunma.\n    \n<font color=magenta>5. Ger\u00e7ek de\u011ferle tahmin aras\u0131ndaki benzerli\u011fe g\u00f6re confusion matrix bulma.","78081d18":"## <font color=yellow>4.XGBoost Classifier","eda763dc":"\n## <font color=yellow> XGBoost ile accuracy score'umuz %88'e ula\u015ft\u0131. XGBoost, decison-tree (karar-agaci) temelli ve gradient-boosting (egim-artirmali) bir Machine Learning sistemidir. Eger verileriniz, resim,yazi ya da ses gibi yap\u0131sal olmayan veriler ise yapay sinir aglari ile derin ogrenme dogru secim olacaktir.<\/font>","add4bc3f":"<font color=magenta>8. S\u0131n\u0131fland\u0131rma modeli kurulurken yap\u0131lan \u00f6znitelik \u00f6nem s\u0131ralamas\u0131n\u0131 g\u00f6rselle\u015ftirme.","0ddc89c2":"<font color=orange> Burada sep= (seperator\u0131n virg\u00fcl ya da norktal\u0131 virg\u00fcl olmas\u0131na) format\u0131na dikkat ediniz.","3b2aaada":"<font color=magenta>Ayk\u0131r\u0131 g\u00f6zlemler i\u00e7in tekrar ayr\u0131 ayr\u0131 olu\u015fturuyorum.","add6256f":"<font color=magenta>E\u011fitim durumuna g\u00f6re haftal\u0131k ortalama \u00e7al\u0131\u015fma saatlerini 50K'dan az ve fazla alan ki\u015fileri de gruplay\u0131p da\u011f\u0131l\u0131m\u0131: \n    Burada da de\u011fi\u015fkenlerim kategorik oldu\u011fu i\u00e7in barplot kullan\u0131yorum.\n\n\n1. plt.figure() ile g\u00f6rselin enini ve boyunu belirliyoruz.\n2. sns.barplot() fonksiyonuna g\u00f6rselle\u015ftirmek istedi\u011fimiz de\u011fi\u015fkenin x ve y de\u011ferlerini yaz\u0131yoruz.\n3. hue='salary' se\u00e7ene\u011fi ile veriyi 'salary' s\u00fctununa g\u00f6re ikiye ay\u0131r\u0131yoruz.\n4. default renk se\u00e7ene\u011fi yerine palette='spring' ile g\u00f6rselle\u015ftiriyoruz.\n5. x eksenini 70 derece d\u00f6nd\u00fcr\u00fcyoruz ki de\u011ferler birbirine kar\u0131\u015fmas\u0131n.","bf23c23d":"#      <font color=lightgreen> Adult Income (Gelir Tahminleme Projesi)","102fb161":"<font color=magenta>4. G\u00f6rmedi\u011fimiz test verisine modele verip tahminde bulunma.\n    \n<font color=magenta>5. Ger\u00e7ek de\u011ferle tahmin aras\u0131ndaki benzerli\u011fe g\u00f6re confusion matrix bulma.","5b1ca02f":"<font color=magenta> Education and education_num ayn\u0131 \u015feyi ifade ediyor olabilir, kontrol edelim.","8e079bbb":"<font color=magenta> S\u00fctun isimlerini ekliyorum.\n","39df4d4f":" <font color=magenta> Yukar\u0131da g\u00f6r\u00fcld\u00fc\u011f\u00fc gibi 48.842 'non-null' kay\u0131t var ve eksik veri yok.   ","b149074a":"<font color=magenta>7. Karar a\u011fac\u0131n\u0131 g\u00f6rselle\u015ftirme","4ddb0882":"<font color=magenta> Baz\u0131 veriler eksik olarak g\u00f6z\u00fckmese de '?' soru i\u015fareti ile doldurulmu\u015f. Bu eksik verileri tamamlad\u0131m.\n\n1. Veri tipi 'object' olan s\u00fctunlar se\u00e7ildi.\n2. Bu s\u00fctunlar yine o s\u00fctunun mode() de\u011feriyle dolduruldu.","58192091":"## <font color=yellow>2.Logistic Regression","870d20bc":"<font color=magenta> K\u00fct\u00fcphaneleri \u00e7a\u011f\u0131r\u0131yorum. <\/font> ","54aec0f4":"<font color=magenta>6. Precision, recall, f1-score de\u011ferlerini bulma.","60fb5934":"<font color=magenta> T\u00fcm medeni durum ayr\u0131nt\u0131lar\u0131n\u0131 evli ve bekar olarak kategorize ettim.","9a2845e6":"## <font color=yellow> Model \u00d6ncesi De\u011fi\u015fkenlerin D\u00fczenlenmesi\n","ab58eab5":"<font color=magenta>En y\u00fcksek haftal\u0131k \u00e7al\u0131\u015fma saatini prof-school mezunu ve doctora yapm\u0131\u015f olanlarda g\u00f6r\u00fcyoruz. 50 Kdan fazla geliri olanlar hep daha \u00e7ok \u00e7al\u0131\u015fm\u0131\u015f. \n    \n<font color=magenta>Cinsiyete g\u00f6re gruplay\u0131p insanlar\u0131n haftal\u0131k ortalama \u00e7al\u0131\u015fma saatlerini inceleme: \n\n1. plt.figure() ile g\u00f6rselin enini ve boyunu belirliyoruz.\n2. sns.pointplot() fonksiyonuna g\u00f6rselle\u015ftirmek istedi\u011fimiz de\u011fi\u015fkenin x ve y de\u011ferlerini yaz\u0131yoruz.\n3. hue='sex' se\u00e7ene\u011fi ile veriyi sex' s\u00fctununa g\u00f6re ikiye ay\u0131r\u0131yoruz.\n4. default renk se\u00e7ene\u011fi yerine palette='spring' ile g\u00f6rselle\u015ftiriyoruz.\n5. x eksenini 70 derece d\u00f6nd\u00fcr\u00fcyoruz ki de\u011ferler birbirine kar\u0131\u015fmas\u0131n.","a52d587d":"4. G\u00f6rmedi\u011fimiz test verisine modele verip tahminde bulunma.\n5. Ger\u00e7ek de\u011ferle tahmin aras\u0131ndaki benzerli\u011fe g\u00f6re confusion matrix bulma.","e1fdaed6":"<font color=magenta> Modeli kurma, standart modelleme s\u00fcre\u00e7lerini uygulama:","a9b3f0ca":"<font color=magenta>Erkeklerin haftal\u0131k \u00e7al\u0131\u015fma saatlerinin doktora yapm\u0131\u015f kad\u0131nlar haricinde genel olarak fazla oldu\u011funu g\u00f6r\u00fcyoruz.\n\n","da638648":"1. Veriyi e\u011fitim ve test alt-veri gruplar\u0131na ay\u0131rma.\n2. Karar a\u011fac\u0131 modeli olu\u015fturma.\n3. Modeli e\u011fitim verisine 'fit' etme. ","9640fb6f":"Adult Income data seti \u00fczerinde \u00e7al\u0131\u015f\u0131ld\u0131. Veri seti a\u00e7\u0131klamas\u0131 a\u015fa\u011f\u0131daki gibidir.\n\n#### <font color=orange>i. Kategorik De\u011fi\u015fkenler\n\n* Workclass: Private, Self-emp-not-inc, Self-emp-inc, Federal-gov, Local-gov, State-gov, Without-pay, Never-worked.\nIndividual work category\n\n* Education: Bachelors, Some-college, 11th, HS-grad, Prof-school, Assoc-acdm, Assoc-voc, 9th, 7th-8th, 12th, Masters, 1st-4th, 10th, Doctorate, 5th-6th, Preschool.\nIndividual's highest education degree\n\n* Marital-status: Married-civ-spouse, Divorced, Never-married, Separated, Widowed, Married-spouse-absent, Married-AF-spouse.\nIndividual marital status\n\n* Occupation: Tech-support, Craft-repair, Other-service, Sales, Exec-managerial, Prof-specialty, Handlers-cleaners, Machine-op-inspct, Adm-clerical, Farming-fishing, Transport-moving, Priv-house-serv, Protective-serv, Armed-Forces.\nIndividual's occupation\n\n* Relationship: Wife, Own-child, Husband, Not-in-family, Other-relative, Unmarried.\nIndividual's relation in a family\n\n* Race: White, Asian-Pac-Islander, Amer-Indian-Eskimo, Other, Black.\nRace of Individual\n\n* Gender: Female, Male.\n\n* Native-country: United-States, Cambodia, England, Puerto-Rico, Canada, Germany, Outlying-US(Guam-USVI-etc), India, Japan, Greece, South, China, Cuba, Iran, Honduras, Philippines, Italy, Poland, Jamaica, Vietnam, Mexico, Portugal, Ireland, France, Dominican-Republic, Laos, Ecuador, Taiwan, Haiti, Columbia, Hungary, Guatemala, Nicaragua, Scotland, Thailand, Yugoslavia, El-Salvador, Trinadad&Tobago, Peru, Hong, Holand-Netherlands.\nIndividual's native country\n\n#### <font color=orange>ii. S\u00fcrekli De\u011fi\u015fkenler\n\n* Age: continuous.\nAge of an individual\n\n* Fnlwgt: final weight, continuous.\nThe weights on the CPS files are controlled to independent estimates of the civilian noninstitutional population of the US. These are prepared monthly for us by Population Division here at the Census Bureau.\n\n* Capital-gain: continuous.\n\n* Capital-loss: continuous.\n\n* Hours-per-week: continuous.\n\n* Individual's working hour per week","d981cf28":"<font color=magenta>Final Weight'in Box plotta ayk\u0131r\u0131 g\u00f6zlemleri oldu\u011funu anl\u0131yorum, gelirim a\u00e7\u0131s\u0131ndan tahminlememe \u00e7ok anlaml\u0131 bir de\u011fer katmayaca\u011f\u0131n\u0131 d\u00fc\u015f\u00fcn\u00fc\u011f\u00fcm i\u00e7in veri setimden \u00e7\u0131kar\u0131yorum.","1c93d545":"<font color=magenta> 'Object' tipindeki de\u011fi\u015fkenleri one-hot-encoding y\u00f6ntemiyle 0 ve 1'lere ay\u0131rma:","5a5bd660":"# <font color=yellow> Modeli kurma & Standart modelleme s\u00fcre\u00e7lerini uygulama:","6b602020":"<font color=magenta>6. Precision, recall, f1-score de\u011ferlerini bulma.","1cbbd1cd":"<font color=magenta> Veri setimde eksik veri olup olmad\u0131\u011f\u0131n\u0131n ve veri tiplerinin kontrol\u00fc. <\/font> ","2c1cafd6":"### <font color=magenta>1. Veri Analizi & Veri G\u00f6rselle\u015ftirme <\/font> ","10c26d1b":"<font color=orange> S\u00fctun say\u0131s\u0131n\u0131n 91'e \u00e7\u0131kt\u0131\u011f\u0131n\u0131 g\u00f6r\u00fcyoruz.","bf60bb65":"<font color=magenta> Modelimizdeki hedef de\u011fi\u015fken 'salary' oldu\u011fu i\u00e7in veri setinin geri kalan\u0131ndan ay\u0131r\u0131yoruz.\n\nTipi object olan verilere bak\u0131yorum.","1673a932":"<font color=magenta>Lise, kolej ve lisans mezunlar\u0131n\u0131n \u00e7o\u011funlukta oldu\u011funu g\u00f6r\u00fcyoruz.","8a709051":"## <font color=lightgreen> 1. Decission Tree Classifier","586d5e0f":"## <font color=yellow>3.Gradient Boosting Classifier","35b9740b":"<font color=magenta> Modeli kurma, standart modelleme s\u00fcre\u00e7lerini uygulama:","ce47802a":"<font color=magenta>6. S\u0131n\u0131fland\u0131rma ba\u015far\u0131 metriklerine bakma."}}