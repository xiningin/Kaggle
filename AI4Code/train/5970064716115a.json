{"cell_type":{"fe77a578":"code","66abfbe9":"code","8582676c":"code","0b96afdd":"code","dd7a9c65":"code","cb4e6770":"code","39a5a50d":"code","6092ad78":"code","1df1261f":"code","2b021271":"code","2678a75d":"code","e4de8ad2":"code","a9302045":"code","242bc84e":"code","30cfa8bd":"code","3914c1a9":"code","dae3d829":"code","303931ed":"code","3457016f":"code","e869c0d4":"code","2073627c":"code","3f6c89d7":"code","31815c06":"code","7cb46ec0":"code","a1514698":"code","46b21ade":"code","811e1b83":"code","41f08459":"code","b627f19d":"code","7a7f627c":"code","bb9b8630":"code","3fd7de06":"code","c7fd9e93":"code","948a2600":"code","b90affd0":"code","9f106ed6":"markdown","343c2f9a":"markdown","5a03274e":"markdown","83f693ae":"markdown","3bafcf57":"markdown","a459469c":"markdown","8619bd62":"markdown","11449154":"markdown","f332cd00":"markdown","551443e5":"markdown","1978b6ff":"markdown","566d2108":"markdown"},"source":{"fe77a578":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","66abfbe9":"import os\nprint(os.listdir(\"..\/input\"))","8582676c":"data=pd.read_csv('..\/input\/password-strength-classifier-dataset\/data.csv',error_bad_lines=False)\ndata.head()","0b96afdd":"data['strength'].unique()","dd7a9c65":"data.isna().sum()","cb4e6770":"data[data['password'].isnull()]","39a5a50d":"data.dropna(inplace=True)","6092ad78":"data.isnull().sum()","1df1261f":"sns.countplot(data['strength'])","2b021271":"password_tuple=np.array(data)","2678a75d":"password_tuple","e4de8ad2":"import random\nrandom.shuffle(password_tuple)","a9302045":"x=[labels[0] for labels in password_tuple]\ny=[labels[1] for labels in password_tuple]\n","242bc84e":"x","30cfa8bd":"def word_divide_char(inputs):\n    character=[]\n    for i in inputs:\n        character.append(i)\n    return character","3914c1a9":"word_divide_char('kzde5577')","dae3d829":"from sklearn.feature_extraction.text import TfidfVectorizer","303931ed":"vectorizer=TfidfVectorizer(tokenizer=word_divide_char)","3457016f":"X=vectorizer.fit_transform(x)","e869c0d4":"X.shape","2073627c":"vectorizer.get_feature_names()","3f6c89d7":"first_document_vector=X[0]\nfirst_document_vector","31815c06":"first_document_vector.T.todense()","7cb46ec0":"df=pd.DataFrame(first_document_vector.T.todense(),index=vectorizer.get_feature_names(),columns=['TF-IDF'])\ndf.sort_values(by=['TF-IDF'],ascending=False)","a1514698":"from sklearn.model_selection import train_test_split","46b21ade":"X_train, X_test, y_train, y_test=train_test_split(X,y,test_size=0.2)","811e1b83":"X_train.shape","41f08459":"from sklearn.linear_model import LogisticRegression","b627f19d":"clf=LogisticRegression(random_state=0,multi_class='multinomial')","7a7f627c":"clf.fit(X_train,y_train)","bb9b8630":"dt=np.array(['%@123abcd'])\npred=vectorizer.transform(dt)\nclf.predict(pred)","3fd7de06":"y_pred=clf.predict(X_test)\ny_pred","c7fd9e93":"from sklearn.metrics import confusion_matrix,accuracy_score","948a2600":"cm=confusion_matrix(y_test,y_pred)\nprint(cm)\nprint(accuracy_score(y_test,y_pred))","b90affd0":"from sklearn.metrics import classification_report\nprint(classification_report(y_test,y_pred))","9f106ed6":"#### split data into train & test\n    train---> To learn the relationship within data, \n    test-->  To do predictions, and this testing data will be unseen to my model","343c2f9a":"#### check Accuracy of your model using confusion_matrix,accuracy_score","5a03274e":"#### code to check all the missing values in my dataset","83f693ae":"#### import TF-IDF vectorizer to convert String data into numerical data","3bafcf57":"#### doing prediction on X-Test data","a459469c":"#### REading dataset","8619bd62":"#### shuffling randomly for robustness","11449154":"#### Apply Logistic on data as use-cas is Classification","f332cd00":"##### create report of your model","551443e5":"#### create a custom function to split input into characters of list","1978b6ff":"#### doing prediction for specific custom data","566d2108":"#### apply TF-IDF vectorizer on data"}}