{"cell_type":{"4dcad117":"code","0f09b78c":"code","448769fc":"code","9f30ffe6":"code","49b29ed5":"code","c296a089":"code","10ab76aa":"code","543a8ccb":"code","d7fcaf87":"code","5aa2046d":"markdown","4ff5bb94":"markdown","c3f37578":"markdown","53bf7f09":"markdown","297501d4":"markdown","627ed174":"markdown","3c6da1df":"markdown","e13776e2":"markdown","7f62b9e8":"markdown"},"source":{"4dcad117":"import seaborn as sns\n\ndark_green = [\"#d8f3dc\",\"#b7e4c7\",\"#95d5b2\",\"#74c69d\",\"#52b788\",\"#40916c\",\"#2d6a4f\",\"#1b4332\",\"#081c15\",\"#04100C\"]\n\ndark_red=[\"#03071e\",\"#370617\",\"#6a040f\",\"#9d0208\",\"#d00000\",\"#dc2f02\",\"#e85d04\",\"#f48c06\",\"#faa307\",\"#ffba08\"]\nsns.palplot(dark_green)\nsns.palplot(dark_red)","0f09b78c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","448769fc":"df_21=pd.read_csv('\/kaggle\/input\/world-happiness-report-2021\/world-happiness-report-2021.csv')","9f30ffe6":"top10=df_21[['Country name','Ladder score']][0:10]\ntop10=top10.sort_values('Ladder score',ascending=True)\n\n# my_colors=['black', 'red', 'green','orange', 'blue', 'cyan','red','blue','cyan','orange']\n\n\nind = np.arange(len(top10['Ladder score']))\n\nfig, ax = plt.subplots(figsize=(12,7))\nax.barh(ind, top10['Ladder score'],color='#f5a316',edgecolor='black')\nax.set_yticks(ind)\nax.set_yticklabels(top10['Country name'])\nax.set_xlabel(\"Ladder score\")\nfor i, v in enumerate(top10['Ladder score']):\n    ax.text(v+0.03, i, str(v),va='center')\n\n# plt.barh(top10['Country name'],top10['Ladder score'],color='#f5a316',edgecolor='black')\n\nplt.title('Top 10 happiest countries', fontsize=18)\nplt.show()","49b29ed5":"tmpdf=df_21.sort_values('Healthy life expectancy',ascending=False)\nh_life=tmpdf[['Country name','Healthy life expectancy']].head(5)\nl_life=tmpdf[['Country name','Healthy life expectancy']].tail(5)\n\nh_life=h_life.sort_values('Healthy life expectancy',ascending=True)\n# l_life=l_life.sort_values('Healthy life expectancy',ascending=True)\n\nfig,ax=plt.subplots(1,2,figsize=(14,4))\n\n\nax[0].barh(h_life['Country name'],h_life['Healthy life expectancy'],color=dark_red[4::-1])\nax[0].set_title('Highest life expectancy',fontsize=18)\nax[0].set_xlabel('Age')\n\nax[1].barh(l_life['Country name'],l_life['Healthy life expectancy'],color=dark_red[4:10])\nax[1].set_title('Lowest life expectancy',fontsize=18)\nax[1].set_xlabel('Age')\nplt.show()","c296a089":"import seaborn as sns\ncorr_df=df_21[df_21.columns[0:12]]\nfig,ax=plt.subplots(figsize=(10,8))\nsns.heatmap(corr_df.corr(),vmin=-1, vmax=1, center=0,cmap='Spectral', annot=True,ax=ax)","10ab76aa":"plt.scatter(df_21['Logged GDP per capita'],df_21['Healthy life expectancy'])\nplt.xlabel('GDP per capita')\nplt.ylabel('Life expectancy')\nplt.title('Relation b\/w GDP per capita and life expectancy',fontsize=18)","543a8ccb":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\n\nx_train,x_test,y_train,y_test=train_test_split(df_21['Logged GDP per capita'],df_21['Healthy life expectancy'])\n\nfig, ax = plt.subplots()\n\nax.scatter(x_train,y_train,label='Training data', color='orange', alpha=.9)\nax.scatter(x_test,y_test, label='Testing data', alpha=.7)\nax.legend()\nax.set_xlabel('GDP per capita')\nax.set_ylabel('Life expectancy')","d7fcaf87":"lr=LinearRegression()\n\nlr.fit(x_train.values.reshape(-1,1),y_train)\n\npred_data=lr.predict(x_test.values.reshape(-1,1))\n\nfig, ax = plt.subplots(figsize=(12,7))\n\nax.scatter(x_train.values,y_train.values)\nax.plot(x_test.values,pred_data,label='Linear Regression',color='r')\nax.legend()\nax.set_xlabel('GDP per capita')\nax.set_ylabel('Life expectancy')\nax.set_title('Relation b\/w GDP per capita and life expectancy',fontsize=18)","5aa2046d":"**Relation between GDP per capita and health life expectancy seems linear. \nLet's plot linear regression line.**","4ff5bb94":"# Introduction\nI am going to explore world happiness report 2021.","c3f37578":"**To test a linear model, we need to divide it into test data and train data. For this, I am going to use sklearn.**","53bf7f09":"# Relation between GDP per capita and health life expectancy","297501d4":"# Life expetancy","627ed174":"# Top 10 Countries in the world happiness report 2021.","3c6da1df":"**Now we can see GDP per capita is linearly related to health life expectancy.**","e13776e2":"# Colors\n\n**First of all we need to choose right color palette. We should choose colors that doesn't put too much stress on our eyes. We can choose trending colors from https:\/\/coolors.co\/palettes\/trending here. For example-**","7f62b9e8":"# Correlation Matrix"}}