{"cell_type":{"577f558c":"code","4080c79a":"code","4bdde48a":"code","44942b12":"code","50c6f084":"code","a4b58516":"code","52caac24":"code","0548b858":"code","9e06c89d":"code","64ad16d2":"code","d196ed3c":"code","d9974a0c":"code","3346bfd5":"code","d570f6f9":"code","f86c31da":"code","8a37e4c2":"code","4b1b3a58":"code","8109c804":"code","b4e70ccf":"code","85c647e3":"code","856af6b9":"code","4594297d":"code","493eac40":"code","bad2e5d3":"code","8d633f0c":"code","53ad3c87":"code","efddfc97":"code","05aa5578":"code","bec03fbd":"code","116e0016":"code","6386fcdf":"code","c7c3c465":"code","94445697":"code","548d1d2e":"code","02d45f7c":"code","847f3e47":"code","84a8a8c0":"code","2c11d6b8":"code","c7a60992":"code","691ec410":"code","0b336b3d":"code","fc1151ca":"code","6d534b36":"code","6583038b":"code","46fef834":"code","3000e1cc":"code","44965efe":"code","eafca339":"code","25b125d5":"code","e6f27ad3":"code","a4d7a56a":"code","486fdb51":"code","5f7fe185":"code","319ddfe8":"code","5b421e76":"code","99b27d4e":"code","ac3cbf4d":"code","34694046":"code","8c6100fc":"code","1696f74e":"code","3deb1147":"code","de063052":"code","f399c13b":"code","1cdf6c61":"code","210a7bfe":"code","9dc094fb":"code","87d3f9a0":"code","59040940":"code","f4742cce":"code","5b08fb50":"code","1550d682":"code","42332620":"code","362f4fa9":"code","e251c10c":"code","b83deb90":"code","a0e19732":"code","720d39d0":"code","20043487":"code","f66641de":"code","33f0d83c":"code","d3637419":"code","675b4181":"code","8fdeeaa8":"code","3762740c":"code","79e2edf5":"code","a48ce3fe":"code","e6b52a5b":"code","db23413e":"code","9e12b1bf":"code","c25c45b9":"code","e81a4abe":"code","52da1d85":"code","2b2fbded":"code","e501ff55":"code","0b597e74":"code","d791e19a":"code","4ba1d655":"code","a2727255":"code","78ed1a5b":"code","c2a656fe":"code","1e5f7549":"code","eb63a370":"code","6e8142df":"code","bdde1fdd":"code","d12cd558":"code","a11a3149":"code","22b8389a":"code","b1862992":"markdown","68a083cb":"markdown","1224c6d7":"markdown","a0d4dd60":"markdown","25be5b82":"markdown","2c34f581":"markdown","5a1ee415":"markdown","8b3b0f25":"markdown","2660c8e5":"markdown","80b3f708":"markdown","d0747683":"markdown","2bdacdbc":"markdown","dc83f2f3":"markdown","c6012508":"markdown","4d4822b7":"markdown","39e6e180":"markdown","6894f52a":"markdown","b0a2cd41":"markdown","c67e6e87":"markdown","de84f69e":"markdown","75ee94ec":"markdown","a2c219e2":"markdown","6ed73d74":"markdown","209703f5":"markdown","3f4adeb1":"markdown","ef853657":"markdown","671085f1":"markdown","e88fb312":"markdown"},"source":{"577f558c":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import GridSearchCV\n\n%matplotlib inline\nsns.set()","4080c79a":"train = pd.read_csv('..\/input\/telstra-recruiting-network\/train.csv.zip')\ntrain.head()","4bdde48a":"test= pd.read_csv('..\/input\/telstra-recruiting-network\/test.csv.zip')\ntest.head()","44942b12":"sample= pd.read_csv('..\/input\/telstra-recruiting-network\/sample_submission.csv.zip')\nsample.head()","50c6f084":"sample.tail()","a4b58516":"event= pd.read_csv('..\/input\/telstra-recruiting-network\/event_type.csv.zip')\nevent.head()","52caac24":"log_feature= pd.read_csv('..\/input\/telstra-recruiting-network\/log_feature.csv.zip')\nlog_feature.head()","0548b858":"resource_type= pd.read_csv('..\/input\/telstra-recruiting-network\/resource_type.csv.zip')\nresource_type.head()","9e06c89d":"severity_type= pd.read_csv('..\/input\/telstra-recruiting-network\/severity_type.csv.zip')\nseverity_type.head()","64ad16d2":"#Para ver los shapes:\nprint ('train: ', train.shape)\nprint ('test: ', test.shape)\nprint ('sample: ', sample.shape)\nprint ('event: ', event.shape)\nprint ('log_feature: ', log_feature.shape)\nprint ('resource_type: ', resource_type.shape)\nprint ('severity_type: ', severity_type.shape)","d196ed3c":"train1= train.merge(severity_type, how= 'left', left_on='id', right_on='id')\ntrain1.head()","d9974a0c":"train2= train1.merge(event, how= 'left', left_on='id', right_on='id')\ntrain2.head()","3346bfd5":"train3= train2.merge(resource_type, how= 'left', left_on='id', right_on='id')\ntrain3.head()","d570f6f9":"train4= train3.merge(log_feature, how='left', left_on='id', right_on='id')\ntrain4.head()","f86c31da":"train4.drop_duplicates(subset='id', inplace=True)","8a37e4c2":"train4.reset_index(inplace=True, drop=True)","4b1b3a58":"train4.head()","8109c804":"train4.shape","b4e70ccf":"test.head()","85c647e3":"test1= test.merge(severity_type, how= 'left', left_on='id', right_on='id')\ntest1.head()","856af6b9":"test2= test1.merge(event, how= 'left', left_on='id', right_on='id')\ntest2.head()","4594297d":"test3= test2.merge(resource_type, how= 'left', left_on='id', right_on='id')\ntest3.head()","493eac40":"test4= test3.merge(log_feature, how='left', left_on='id', right_on='id')\ntest4.head()","bad2e5d3":"test4.drop_duplicates(subset='id', inplace=True)","8d633f0c":"test4.reset_index(inplace=True, drop=True)","53ad3c87":"test4.head()","efddfc97":"test.shape","05aa5578":"train4.info()","bec03fbd":"test4.info()","116e0016":"train4_cols= train4.columns.tolist()\ntrain4_cols","6386fcdf":"#Vamos a ver si hay valores faltantes\ntrain4.isnull().sum()","c7c3c465":"#con un heatmap de seaborn\nsns.heatmap(train4.isnull(), yticklabels=False, cbar=False, cmap=\"Blues\")","94445697":"#Vamos a ver si hay valores faltantes\ntest4.isnull().sum()","548d1d2e":"#con un heatmap de seaborn\nsns.heatmap(test4.isnull(), yticklabels=False, cbar=False, cmap=\"Blues\")","02d45f7c":"#Para ver los valores \u00fanicos por columna:\nprint ('Uniques para location: ', train4.location.unique())\nprint ('Uniques para fault_severity: ', train4.fault_severity.unique())\nprint ('Uniques para severity_type: ', train4.severity_type.unique())\nprint ('Uniques para event_type: ', train4.event_type.unique())\nprint ('Uniques para resource_type: ', train4.resource_type.unique())\nprint ('Uniques para log_feature: ', train4.log_feature.unique())\nprint ('Uniques para volume: ', train4.volume.unique())","847f3e47":"#Para visualizar los datos seg\u00fan l2\nt4_fs = train4.groupby('fault_severity', sort=False, as_index=False).size().sort_values(by=\"size\",ascending=False)\nt4_fs","84a8a8c0":"plt.figure(figsize=(10,5))\nsns.countplot(data = train4, x='fault_severity', lw=1, edgecolor=\"black\")\nplt.title ('Cantidad de casos por Gravedad de Falla (Fault Severity)')\nplt.xlabel('Gravedad de Falla')\nplt.ylabel('Cantidad')\nplt.show()","2c11d6b8":"t4_st = train4.groupby('severity_type', sort=False, as_index=False).size().sort_values(by=\"size\",ascending=False)\nt4_st","c7a60992":"plt.figure(figsize=(10,5))\nsns.countplot(data = train4, x='severity_type', lw=1, edgecolor=\"black\")\nplt.title ('Cantidad de casos por Tipo de Gravedad (Severity Type)')\nplt.xlabel('Tipo de Gravedad')\nplt.ylabel('Cantidad')\nplt.show()","691ec410":"t4_rt = train4.groupby('resource_type', sort=False, as_index=False).size().sort_values(by=\"size\",ascending=False)\nt4_rt","0b336b3d":"plt.figure(figsize=(15,5))\nsns.barplot(data = t4_rt, x='resource_type', y= 'size',lw=1, edgecolor=\"black\")\nplt.title ('Cantidad de casos por Tipo de Recurso (Resource Type)')\nplt.xlabel('Tipo de Recurso')\nplt.ylabel('Cantidad')\nplt.show()","fc1151ca":"t4_loc = train4.groupby('location', sort=False, as_index=False).size().sort_values(by=\"size\",ascending=False)\nt4_loc","6d534b36":"fallas_tipo_1= train4[train4.fault_severity == 1]","6583038b":"fallas_tipo_1.head()","46fef834":"fallas_tipo_1.shape","3000e1cc":"ft1_st = fallas_tipo_1.groupby('severity_type', sort=False, as_index=False).size().sort_values(by=\"size\",ascending=False)\nft1_st","44965efe":"plt.figure(figsize=(10,5))\nsns.barplot(data = ft1_st, x='severity_type', y='size', lw=1, edgecolor=\"black\")\nplt.title ('Cantidad de casos por Tipo de Gravedad (Severity Type)')\nplt.xlabel('Tipo de Gravedad')\nplt.ylabel('Cantidad')\nplt.show()","eafca339":"ft1_rt = fallas_tipo_1.groupby('resource_type', sort=False, as_index=False).size().sort_values(by=\"size\",ascending=False)\nft1_rt","25b125d5":"plt.figure(figsize=(15,5))\nsns.barplot(data = ft1_rt, x='resource_type', y='size', lw=1, edgecolor=\"black\")\nplt.title ('Cantidad de casos por Tipo de Recurso (Resource Type)')\nplt.xlabel('Tipo de Recurso')\nplt.ylabel('Cantidad')\nplt.show()","e6f27ad3":"ft1_loc = fallas_tipo_1.groupby('location', sort=False, as_index=False).size().sort_values(by=\"size\",ascending=False)\nft1_loc","a4d7a56a":"plt.figure(figsize=(15,5))\nsns.barplot(data = ft1_loc[1:15], x='location', y='size', lw=1, edgecolor=\"black\")\nplt.title ('15 Locaciones con m\u00e1s casos de fallas tipo 1')\nplt.xlabel('Locaciones')\nplt.xticks(rotation=90)\nplt.ylabel('Cantidad')\nplt.show()","486fdb51":"ft1_et = fallas_tipo_1.groupby('event_type', sort=False, as_index=False).size().sort_values(by=\"size\",ascending=False)\nft1_et","5f7fe185":"plt.figure(figsize=(15,5))\nsns.barplot(data = ft1_et, x='event_type', y='size', lw=1, edgecolor=\"black\")\nplt.title ('Cantidad de casos por Tipo de Evento (Event Type)')\nplt.xlabel('Tipo de Evento')\nplt.xticks(rotation=90)\nplt.ylabel('Cantidad')\nplt.show()","319ddfe8":"fallas_tipo_2= train4[train4.fault_severity == 2]","5b421e76":"fallas_tipo_2.head()","99b27d4e":"fallas_tipo_2.shape","ac3cbf4d":"ft2_st = fallas_tipo_2.groupby('severity_type', sort=False, as_index=False).size().sort_values(by=\"size\",ascending=False)\nft2_st","34694046":"plt.figure(figsize=(10,5))\nsns.barplot(data = ft2_st, x='severity_type', y='size', lw=1, edgecolor=\"black\")\nplt.title ('Cantidad de casos por Tipo de Gravedad (Severity Type)')\nplt.xlabel('Tipo de Gravedad')\nplt.ylabel('Cantidad')\nplt.show()","8c6100fc":"ft2_rt = fallas_tipo_2.groupby('resource_type', sort=False, as_index=False).size().sort_values(by=\"size\",ascending=False)\nft2_rt","1696f74e":"plt.figure(figsize=(15,5))\nsns.barplot(data = ft2_rt, x='resource_type', y='size', lw=1, edgecolor=\"black\")\nplt.title ('Cantidad de casos por Tipo de Recurso (Resource Type)')\nplt.xlabel('Tipo de Recurso')\nplt.ylabel('Cantidad')\nplt.show()","3deb1147":"ft2_loc = fallas_tipo_2.groupby('location', sort=False, as_index=False).size().sort_values(by=\"size\",ascending=False)\nft2_loc","de063052":"plt.figure(figsize=(15,5))\nsns.barplot(data = ft2_loc[1:15], x='location', y='size', lw=1, edgecolor=\"black\")\nplt.title ('15 Locaciones con m\u00e1s casos de fallas tipo 1')\nplt.xlabel('Locaciones')\nplt.xticks(rotation=90)\nplt.ylabel('Cantidad')\nplt.show()","f399c13b":"ft2_et = fallas_tipo_2.groupby('event_type', sort=False, as_index=False).size().sort_values(by=\"size\",ascending=False)\nft2_et","1cdf6c61":"plt.figure(figsize=(15,5))\nsns.barplot(data = ft2_et, x='event_type', y='size', lw=1, edgecolor=\"black\")\nplt.title ('Cantidad de casos por Tipo de Evento (Event Type)')\nplt.xlabel('Tipo de Evento')\nplt.xticks(rotation=90)\nplt.ylabel('Cantidad')\nplt.show()","210a7bfe":"train4.head()","9dc094fb":"train4['location']= train4.location.str.extract('(\\d+)', expand=False)\ntrain4['location']= train4.location.astype(int)\n\ntrain4['severity_type']= train4.severity_type.str.extract('(\\d+)', expand=False)\ntrain4['severity_type']= train4.severity_type.astype(int)\n\ntrain4['event_type']= train4.event_type.str.extract('(\\d+)', expand=False)\ntrain4['event_type']= train4.event_type.astype(int)\n\ntrain4['resource_type']= train4.resource_type.str.extract('(\\d+)', expand=False)\ntrain4['resource_type']= train4.resource_type.astype(int)\n\ntrain4['log_feature']= train4.log_feature.str.extract('(\\d+)', expand=False)\ntrain4['log_feature']= train4.log_feature.astype(int)\n\ntrain4.head()","87d3f9a0":"X= train4.drop(['id', 'fault_severity'], axis=1)","59040940":"X.head()","f4742cce":"X.describe()","5b08fb50":"y= train4.fault_severity","1550d682":"print ('X shape: ', X.shape)\nprint ('y shape: ', y.shape)","42332620":"X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42, test_size=0.75)","362f4fa9":"print ('X_train shape: ', X_train.shape)\nprint ('y_train shape: ', y_train.shape)\nprint ('X_test shape: ', X_test.shape)\nprint ('y_test shape: ', y_test.shape)","e251c10c":"test4.head()","b83deb90":"test4['location']= test4.location.str.extract('(\\d+)', expand=False)\ntest4['location']= test4.location.astype(int)\n\ntest4['severity_type']= test4.severity_type.str.extract('(\\d+)', expand=False)\ntest4['severity_type']= test4.severity_type.astype(int)\n\ntest4['event_type']= test4.event_type.str.extract('(\\d+)', expand=False)\ntest4['event_type']= test4.event_type.astype(int)\n\ntest4['resource_type']= test4.resource_type.str.extract('(\\d+)', expand=False)\ntest4['resource_type']= test4.resource_type.astype(int)\n\ntest4['log_feature']= test4.log_feature.str.extract('(\\d+)', expand=False)\ntest4['log_feature']= test4.log_feature.astype(int)\n\ntest4.head()","a0e19732":"X_predic = test4.drop('id', axis=1)","720d39d0":"X_predic.head()","20043487":"X_predic.shape","f66641de":"def resultados (y_test, y_pred):\n    conf_matrix = confusion_matrix(y_test, y_pred)\n    plt.figure(figsize=(4, 4))\n    sns.heatmap(conf_matrix, cbar= False,  square= True, annot=True, fmt= '.0f', annot_kws={'size': 15},\n           cmap= 'coolwarm', linewidths=.5);\n    plt.title('Matriz de Confusi\u00f3n')\n    plt.ylabel('Predicci\u00f3n')\n    plt.xlabel('Clase Real')\n    plt.show()\n    print (classification_report(y_test, y_pred))","33f0d83c":"tree= DecisionTreeClassifier(random_state=42)","d3637419":"tree.fit(X_train, y_train)","675b4181":"y_pred_tree= tree.predict(X_test)","8fdeeaa8":"resultados (y_test, y_pred_tree)","3762740c":"knn = KNeighborsClassifier()","79e2edf5":"knn.fit(X_train, y_train)","a48ce3fe":"y_pred_knn= knn.predict(X_test)","e6b52a5b":"resultados (y_test, y_pred_knn)","db23413e":"forest = RandomForestClassifier(random_state=42)","9e12b1bf":"forest.fit(X_train, y_train)","c25c45b9":"y_pred_forest= forest.predict(X_test)","e81a4abe":"resultados (y_test, y_pred_forest)","52da1d85":"#Hacemos la grilla para Grid Search:\nparam_grid = {'n_estimators': [200, 300, 400, 500],   \n              'min_samples_split': [2,3,4,5],    \n              'min_samples_leaf':[1,3,5]}   ","2b2fbded":"model = GridSearchCV(forest, param_grid=param_grid, cv=5)","e501ff55":"model.fit(X_train, y_train)","0b597e74":"print(\"Mejores parametros: \"+str(model.best_params_))\nprint(\"Mejor Score: \"+str(model.best_score_)+'\\n')","d791e19a":"forest2= RandomForestClassifier(min_samples_leaf=5, min_samples_split=2, n_estimators=400, random_state=42)","4ba1d655":"forest2.fit(X_train, y_train)","a2727255":"y_pred_forest2= forest2.predict(X_test)","78ed1a5b":"resultados (y_test, y_pred_forest2)","c2a656fe":"forest2.feature_importances_","1e5f7549":"cols_model= ['location','severity_type','event_type','resource_type','log_feature','volume']\ncols_model","eb63a370":"feature_importance= pd.DataFrame(list(zip(cols_model, forest2.feature_importances_.transpose())), columns = ['Col','Importance']).sort_values(by=\"Importance\",ascending=False)\nfeature_importance","6e8142df":"X_predic.head()","bdde1fdd":"prediccion= forest2.predict_proba(X_predic)\nprediccion","d12cd558":"#Lo pasamos a dataframe\nprediccion_data= pd.DataFrame(prediccion,columns=['predict_0', 'predict_1', 'predict_2'])\nprediccion_data","a11a3149":"#Lo juntamos con el id\nsubmission= pd.concat([test[['id']],prediccion_data],axis=1)\nsubmission","22b8389a":"#Lo guardamos en el archivo:\n#submission.to_csv('submission.csv',index=False,header=True)","b1862992":"## Fallas tipo 2 (fault_severity = 2)\n\nVamos a analizar las fallas tipo 1 para ver qu\u00e9 podemos encontrar","68a083cb":"## Un vistazo general (A general view).\n\nPara ver la cantidad de casos seg\u00fan **fault_severity**:","1224c6d7":"# Telstra Network Disruptions \n\nThe goal of the problem is to predict Telstra network's fault severity at a time at a particular location based on the log data available. Each row in the main dataset (train.csv, test.csv) represents a location and a time point. They are identified by the \"id\" column, which is the key \"id\" used in other data files. \n\nFault severity has 3 categories: 0,1,2 (0 meaning no fault, 1 meaning only a few, and 2 meaning many). \n\nDifferent types of features are extracted from log files and other sources: event_type.csv, log_feature.csv, resource_type.csv, severity_type.csv. \n\nNote: \u201cseverity_type\u201d is a feature extracted from the log files (in severity_type.csv). Often this is a severity type of a warning message coming from the log. \"severity_type\" is categorical. It does not have an ordering. \u201cfault_severity\u201d is a measurement of actual reported faults from users of the network and is the target variable (in train.csv).\n\nFile descriptions\n- train.csv - el conjunto de entrenamiento para la severidad de la falla\n- test.csv - el conjunto de prueba para la severidad de la falla\n- sample_submission.csv \u2013 una muestra del formato correcto para la entrada\n- event_type.csv: tipo de evento relacionado con el conjunto de datos principal\n- log_feature.csv - caracter\u00edsticas extra\u00eddas de los archivos de registro\n- resource_type.csv: tipo de recurso relacionado con el conjunto de datos principal\n- severity_type.csv: tipo de severidad de un mensaje de advertencia que proviene delregistro\n\n# Importamos librer\u00edas y datos:","a0d4dd60":"Preprocesamos para predecir con el dataset de **test**:","25be5b82":"Junatmos para **test**","2c34f581":"### Random Forest","5a1ee415":"### KNN","8b3b0f25":"## Predicci\u00f3n con el dataset de test","2660c8e5":"Podemos ver que los casos que registran fallas tipo 1 y los casos que registran fallas tipo 2 son diferentes en los tipos de eventos, locaciones, tipo de severidad.\n\nMientras que para el tipo de recurso son iguales en ambos casos (8 y 2)\n\n## Preprocesamiento de datos (Data Preprocesing).","80b3f708":"### Valores faltantes","d0747683":"Para ver los estimadores:","2bdacdbc":"## Modelo Benchmark\n\n### Decision Tree","dc83f2f3":"Elimimos duplicados de test:","c6012508":"Los tipos de recursos mas utilizados son: 2 y 8. Mientras que el resto de recursos tienen relativamente pocos casos.\n\nPara ver la cantidad de casos seg\u00fan **location**:","4d4822b7":"Creamos un modelo nuevo con los mejores par\u00e1metros.","39e6e180":"Podemos ver que hay valores muy grandes para las columnas de `location`, `log_feature` y `volume`, por lo que se aplica MinMaxScaler para que se de mayor peso a estas columnas sobre las otras.","6894f52a":"C on esta informaci\u00f3n podemos ver que las fallas que m\u00e1s se presentan son las de tipo 1 y 2. Las que gravedades tipo 4, 5 y 3 se presentan muy poco (en comparaci\u00f3n con las tipo 1 y 2).\n\nPara ver la cantidad de casos seg\u00fan **resource_type**:","b0a2cd41":"Podemos ver que hay mayor cantidad de no fallas que de fallas 1 o 2.\n\nPara ver la cantidad de casos seg\u00fan **severity_type**:","c67e6e87":"## Mejorando el mejor modelo (Random Forest)\n\nEl mejor modelo fue el de Random Forest, vamos a mejorarlo utilizando GridSearchCV.","de84f69e":"Pasamos los datos a valores:","75ee94ec":"Las fallas con severidad 1, tienen mayor cantidad de recursos tipo 8 y 2.","a2c219e2":"Para ver la info de train y de test:","6ed73d74":"### Elecci\u00f3n de M\u00e9tricas (KPIs de evaluaci\u00f3n de modelos)\n\nPara un `modelo de clasificaci\u00f3n` vamos a utilizar la `matriz de confusi\u00f3n` que nos muestra la forma en que clasific\u00f3 el modelo que estamos entrenando. A partir de la matriz vamos a revisar 4 indicadores y prestar especial atenci\u00f3n a 2 de ellos:\n\n**Accuracy (Exactitud):** Nos dice qu\u00e9 tan bien predijo el modelo. Se representa como  la proporci\u00f3n de resultados verdaderos (tanto verdaderos positivos (TP) como verdaderos negativos (TN)) dividido entre el n\u00famero total de casos examinados.\n\nEn forma pr\u00e1ctica,  el accuracy es  la cantidad de predicciones que fueron correctas.\n\n$$Accuracy = \\frac{TP+TN}{TP+TN+FP+FN}$$\n\n**Precision (Precisi\u00f3n):**  Se refiere a la dispersi\u00f3n del conjunto de valores obtenidos a partir de mediciones repetidas de una magnitud. Cuanto menor es la dispersi\u00f3n mayor la precisi\u00f3n. Se representa por la proporci\u00f3n de verdaderos positivos dividido entre todos los resultados positivos (tanto verdaderos positivos, como falsos positivos).En forma pr\u00e1ctica es  el porcentaje de casos positivos detectados.\n\n$$Precision = \\frac{VP}{VP+FP}$$\n\n**Recall (Sensibilidad):** Es un valor que nos indican la capacidad de nuestro modelo para discriminar los casos positivos, de los negativos. Es la proporci\u00f3n de casos positivos que fueron correctamente identificadas por el algoritmo.\n\n$$Recall = \\frac{VP}{VP+FN}$$  \n\nO lo que ser\u00eda igual :  \"Verdaderos positivos \/ Total de enfermos\" (en el \u00e1rea de la salud se dice que la sensibilidad es la capacidad de de poder detectar correctamente la enfermedad entre los enfermos).\n\n**F1 Score:** Es otra m\u00e9trica muy empleada porque resume la precisi\u00f3n y recall en una sola m\u00e9trica. Por ello es de gran utilidad cuando la distribuci\u00f3n de las clases es desigual (datasets desbalanceados).\n\n$$F1 \\ score \\ =  \\frac{2 * (Recall * Precision)}{(Recall + Precision)}$$\n\nCreamos una funci\u00f3n para evaluar los resultados:","209703f5":"Las 5 locaciones que tienen m\u00e1s casos son: 821, 1107, 734, 126 y 1008.\n\n## Fallas tipo 1 (fault_severity = 1)\n\nVamos a analizar las fallas tipo 1 para ver qu\u00e9 podemos encontrar","3f4adeb1":"Podemos ver que hay registros repetidos, por lo que procedemos a eliminamos de acuerdo al `id`.","ef853657":"Juntando para **train**:","671085f1":"Los mensajes que m\u00e1s se muestran son los tipo 1","e88fb312":"## An\u00e1lisis Exploratorio de Datos (EDA)"}}