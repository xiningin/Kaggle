{"cell_type":{"618df233":"code","8dcd6f5f":"code","448c0bfb":"code","9c4e522a":"code","81ee89a0":"code","622165d5":"code","0213b059":"code","2f3da520":"code","78a468ce":"code","bee90be5":"code","3e33a35f":"code","ba24830c":"code","bd88699e":"code","24bb6741":"code","1c2deae9":"markdown"},"source":{"618df233":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import Ridge\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import OrdinalEncoder\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.metrics import mean_squared_error","8dcd6f5f":"train_data = pd.read_csv('\/kaggle\/input\/30-days-of-ml\/train.csv', index_col='id')\ntest_data = pd.read_csv('\/kaggle\/input\/30-days-of-ml\/test.csv', index_col='id')","448c0bfb":"categorical_cols = [col for col in train_data.columns if 'cat' in col]\ncontinuous_cols = [col for col in train_data.columns if 'cont' in col]","9c4e522a":"X = train_data.drop(['target'], axis=1)\ny = train_data['target']","81ee89a0":"X_train, X_val, y_train, y_val = train_test_split(X, y)","622165d5":"preprocessor = ColumnTransformer(\n    transformers=[\n        ('continuous', MinMaxScaler(), continuous_cols),\n        ('categorical', OrdinalEncoder(), categorical_cols)\n    ])","0213b059":"model = Ridge()","2f3da520":"pipeline = Pipeline(\n    steps=[\n        ('preprocessor', preprocessor),\n        ('model', model)\n    ])","78a468ce":"pipeline.fit(X_train, y_train)","bee90be5":"mean_squared_error(y_train, pipeline.predict(X_train), squared=False)","3e33a35f":"mean_squared_error(y_val, pipeline.predict(X_val), squared=False)","ba24830c":"preprocessor = ColumnTransformer(\n    transformers=[\n        ('continuous', MinMaxScaler(), continuous_cols),\n        ('categorical', OrdinalEncoder(), categorical_cols)\n    ])\n\nmodel = Ridge()\n\npipeline = Pipeline(\n    steps=[\n        ('preprocessor', preprocessor),\n        ('model', model)\n    ])\n\npipeline.fit(X, y)","bd88699e":"final_predictions = pd.DataFrame(zip(test_data.index, pipeline.predict(test_data)), columns=['id', 'target'])","24bb6741":"final_predictions.to_csv('submission.csv', index=False)","1c2deae9":"# Training Final Model"}}