{"cell_type":{"eb77fab2":"code","a63377a0":"code","baf5b260":"code","7d4a5870":"code","cd35c8c2":"code","f4092c53":"code","d19db5ec":"code","fe3398b0":"code","823b7904":"code","f7879bda":"markdown","72f02710":"markdown","01e89493":"markdown","33d879ad":"markdown","de451f2e":"markdown","14a6c240":"markdown"},"source":{"eb77fab2":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport joblib\nimport gc\n\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OneHotEncoder, StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.compose import ColumnTransformer\n\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV","a63377a0":"test = pd.read_csv('..\/input\/titanic\/test.csv')\ntest.drop('PassengerId', axis=1, inplace=True)","baf5b260":"test['FamSize'] = test.SibSp + test.Parch\n\ndef set_deck(cabin):\n    if str(cabin) == 'nan':\n        return 'Missing'\n    return cabin[0]\n \ntest['Deck'] = test['Cabin'].map(set_deck)\n\ntest.head()","7d4a5870":"preprocessor = joblib.load('..\/input\/titanic-jan22-models\/titanic_preprocessor_01.joblib')\nmodel = joblib.load('..\/input\/titanic-jan22-models\/titanic_model_01.joblib')\nprint(type(model))","cd35c8c2":"X_test = preprocessor.transform(test)\nprint(X_test.shape)","f4092c53":"test_pred = model.predict(X_test)\nprint(test_pred.shape)","d19db5ec":"submission = pd.read_csv('..\/input\/titanic\/gender_submission.csv')\nsubmission.head()","fe3398b0":"submission.Survived = test_pred[:]\nsubmission.head()","823b7904":"submission.to_csv('submission.csv', index=False, header=True)","f7879bda":"# Titanic Dataset","72f02710":"# Load Model","01e89493":"# Import Statements","33d879ad":"# Preprocessing ","de451f2e":"# Generating Test Predictions","14a6c240":"# Loading Test Data"}}