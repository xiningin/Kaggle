{"cell_type":{"0bf6fb42":"code","bfe5fb9f":"code","d0656605":"code","afa548a4":"code","1479162a":"code","6f97cf25":"code","10929047":"code","f6897661":"code","761bb498":"code","87e209e0":"code","a702e218":"code","a6dbee46":"code","cd388107":"code","4c83fa7e":"code","0d19582b":"markdown","d74e7bb1":"markdown","dc528ae6":"markdown","1828212f":"markdown","b2546199":"markdown","2b90ef02":"markdown","749c3e52":"markdown","a058810f":"markdown","1c0a61ef":"markdown","96785a49":"markdown","b633abb9":"markdown","d6f0a1e2":"markdown","a8a19b35":"markdown","95ec7385":"markdown","41ee8e8f":"markdown","b604be97":"markdown"},"source":{"0bf6fb42":"import seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport pydicom # A library that loads dicom(dcm) files\nimport numpy as np\nimport os\nimport glob\nfrom IPython.display import Markdown # we will require this to print Markdown in the console\ninput_df = \"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/train_labels.csv\"\nsample = \"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/sample_submission.csv\"\n","bfe5fb9f":"!pip install celluloid #The library celluloid is not available in the default kaggle enviroment so we have to pip install it","d0656605":"train_df = pd.read_csv(input_df)\ntrain_df","afa548a4":"sample_df = pd.read_csv(sample)\nsample_df","1479162a":"sns.countplot(data = train_df , x = \"MGMT_value\")","6f97cf25":"def load_dicom(path):\n    dicom = pydicom.read_file(path) # pydicom is a library made to process dicom files\n    data = dicom.pixel_array # pixel_array shows the value of each pixel in the array\n    data = data - np.min(data) #helps in normalizing the image (not really required in this case)\n    if np.max(data) != 0:\n        data = data\/np.max(data)\n    data = (data*255).astype(np.uint8)\n    return data\n\ndef visualize_sample(ID,path,type_ = \"flair\"):\n    plt.figure(figsize = (16,5))\n    data = load_dicom(path)\n    plt.imshow(data)#\n    label = train_df[train_df['BraTS21ID'] == ID][\"MGMT_value\"].item()#this will assign the MGMT_value of the Patient to label\n    plt.title(str(ID)+\" \" + type_ + \" MGMT_value: \" +str(label))\n    plt.axis(\"off\")","10929047":"visualize_sample(0 , \"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/train\/00000\/FLAIR\/Image-250.dcm\", \"FLAIR\")","f6897661":"display(visualize_sample(0 , \"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/train\/00000\/T1w\/Image-15.dcm\", \"T1w\"))\ndisplay(visualize_sample(0 , \"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/train\/00000\/T2w\/Image-250.dcm\", \"T2w\"))","761bb498":"visualize_sample(0 , \"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/train\/00000\/T1wCE\/Image-75.dcm\", \"T1wCE\")","87e209e0":"from celluloid import Camera\nfrom IPython.display import HTML\nfrom matplotlib import animation, rc\nrc('animation', html='jshtml')\n\n\ndef create_animation(ims):\n    fig = plt.figure(figsize=(16, 5))\n    plt.axis('off')\n    im = plt.imshow(ims[0])\n    camera = Camera(fig)\n\n    for i in range(len(ims)):\n        plt.imshow(ims[i])\n        camera.snap() #Each instance of the plot is saved\n    \n    animation = camera.animate() # And is then animated\n    display(animation)\n\n#Although I find celluloid much easier to use matplotlib's animation function Is much more intuitive to use\n# def create_animation(ims):\n#     fig = plt.figure(figsize=(6, 6))\n#     plt.axis('off')\n#     im = plt.imshow(ims[0])\n\n#     def animate_func(i):\n#         im.set_array(ims[i])\n#         return [im]\n\n#     return display(animation.FuncAnimation(fig, animate_func, frames = len(ims), interval = 1000\/\/24))","a702e218":"def dicom_animation(path):\n    t_path = sorted(\n                    glob.glob(os.path.join(path,'*'))\n    )\n    images = []\n    for name in t_path:\n        data = load_dicom(name)\n        images.append(data)\n    return create_animation(images)","a6dbee46":"types = [\"FLAIR\", \"T1w\" , \"T1wCE\" , \"T2w\"]\ndef show_anim(Id):\n    display(Markdown(\"<div align = 'center'  style = 'color : lightblue'>\"+\"ID : \"+Id+\"<\/div>\"))\n    display(Markdown(\"<div align = 'center'  style = 'color :lightblue'>\"+\"MGMT methylation promoter : \"+str(train_df[train_df['BraTS21ID'] == int(Id)][\"MGMT_value\"].item())+\"<\/div>\"))\n    #print(\"\\tMGMT methylation promoter : \" ,train_df[train_df['BraTS21ID'] == int(Id)][\"MGMT_value\"].item())\n    path = os.path.join(\"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/train\",Id)\n    for x in types:\n        display(Markdown(\"<div align = 'center' style = 'color : violet'>\"+\"Type of MRI : \"+x+\"<\/div>\"))\n        dicom_animation(os.path.join(path,x))\n    ","cd388107":"show_anim(\"00000\")","4c83fa7e":"show_anim(\"00003\")","0d19582b":"## RSNA-MICCAI Brain Tumor Radiogenomic Classification\n<a id = 0><\/a>\n\nA malignant tumor in the brain is a life-threatening condition. Known as glioblastoma, it's both the most common form of brain cancer in adults and the one with the worst prognosis, with median survival being less than a year. The presence of a specific genetic sequence in the tumor known as MGMT promoter methylation has been shown to be a favorable prognostic factor and a strong predictor of responsiveness to chemotherapy","d74e7bb1":"T1w and T2w:- From my understanding T1w and t2w shows tissue matter of the brain. The difference between them is than T1w has a lower relaxation time (The model of the brain is made using fewer images)","dc528ae6":"These Images are great they were however made to be mapped as a 3d model of the brain. Now lets animate these images in the next section","1828212f":"# Animations\n<a id = 5><\/a>","b2546199":"Now let's check the same with a patient who has the a MRNA promoter methalation ","2b90ef02":"FLAIR MRI :- **Fl**uid **A**ttenuated **I**nversion **r**ecovery . It is a technique that shows tissue as white and cerebrospinal fluid as darkened parts of the brain","749c3e52":"![](https:\/\/images.pexels.com\/photos\/4226119\/pexels-photo-4226119.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940)","a058810f":" Having a First Glance at the two datasets. I can summarize that each row BraTS21ID corresponds to a patient and the MGMT_value column is the probability that the patient has the methylation promoter which is a cancer causing gene. 1 means a 100% probability that a person has the gene and 0 means that the probability that the person has the gene is 0 % . There is a test file and train file which have the coressponding BraTS21ID files each containing images in the Dicom format.\n \n \n \nOur job is to find the relations between the images in the train set and the likelihood that the person has the methylation promoter gene. Then use the same relation to predict using the images in the test set the probability of that paitent having the methylation of the MGMT promoter gene","1c0a61ef":"# Visualizing the MRI\n<a id = 4><\/a>","96785a49":"#           [Contents](#1)\n* [Title](#0)\n* [Dependencies](#1) \n* [Introduction](#2)\n* [MGMT Label](#3)\n* [Visualizing the MRI](#4)\n* [Animations](#5)\n","b633abb9":"The values of MGMT_value which are 1 and 0 are close. Which is great while making the model the model will not tend to make a predicton which has a greater likelihood of occuring.","d6f0a1e2":"# Introduction \n<a id = 2><\/a>","a8a19b35":"# Dependencies\n<a id = 1><\/a>","95ec7385":"Let's start by checking the train csv and sample csv","41ee8e8f":"We'll first check the MRI's of patient 0000 who as we can see on the graph has the MGMT promoter methalation","b604be97":"# MGMT Label \n<a id = 3><\/a>"}}