{"cell_type":{"ff10b477":"code","14c96b27":"code","d2740005":"code","9aacb97c":"code","052a338a":"code","c32a66ec":"code","b9d291bb":"code","560bf9d9":"code","2887978d":"code","e30cce3a":"code","b0f37216":"code","edbfb3a9":"code","5e1dd0a0":"code","64def270":"code","a1a12ff9":"code","2fc28344":"code","dafe59f9":"code","2dbead97":"code","3dd5aadc":"code","bc6cb078":"code","72852929":"code","c4ce8d01":"code","09c8231a":"code","4068a0f0":"code","82bb740f":"markdown","86ca7caa":"markdown","677bfaf1":"markdown","54664fc2":"markdown"},"source":{"ff10b477":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\nimport pandas_profiling\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n# Any results you write to the current directory are saved as output.","14c96b27":"#read the data from a csv file\nbase_data_df = pd.read_csv(\"..\/input\/data-scientist-job-market-in-the-us\/alldata.csv\")","d2740005":"#Finding out the null rows if any \nbase_data_df.info()","9aacb97c":"#finding out the data distribution \nbase_data_df.describe(include='all')","052a338a":"#top 20 rows\nbase_data_df.head(20)","c32a66ec":"#pandas profiling\npandas_profiling.ProfileReport(base_data_df)","b9d291bb":"#finding the duplicated rows\nbase_data_df[base_data_df.duplicated()]","560bf9d9":"#Make a copy of the base dataset\nds_df = base_data_df.copy()","2887978d":"#drop all na rows\nds_df.dropna(inplace=True)","e30cce3a":"#replace all na with 0 for reviews\nds_df['reviews'].fillna(0, inplace=True)","b0f37216":"#finding the top 40 companies by open positions\nfrom matplotlib.pyplot import figure, show\nimport matplotlib.pyplot as plt\nfig,a=plt.subplots(figsize=(10,6))   \nsns.barplot(data=ds_df.groupby('company').count().nlargest(40, 'position').reset_index(), x ='company', y='position')\na.set_xticklabels(ds_df.groupby('company').count().nlargest(40, 'position').reset_index()['company'],rotation=90)   \na.set_ylabel('No Of Positions',fontsize=16,color='red')\na.set_xlabel('Company Name',fontsize=16,color='red') ","edbfb3a9":"#finding the top 40 designations which are in high demand \nfrom matplotlib.pyplot import figure, show\nimport matplotlib.pyplot as plt\nfig,a=plt.subplots(figsize=(10,6))   \nsns.barplot(data=ds_df.groupby('position').count().nlargest(40, 'company').reset_index(), x ='position', y='company')\na.set_xticklabels(ds_df.groupby('position').count().nlargest(40, 'company').reset_index()['position'],rotation=90)   \na.set_ylabel('No Of Positions',fontsize=16,color='red')\na.set_xlabel('Designation',fontsize=16,color='red') ","5e1dd0a0":"## Grouping the designations into the following roles\n## Data Scientist, Lead Data Scientist, Data Engineer, Data Analyst, Director\n\n## Filtered all the directors from the table\nds_df.loc[ds_df['position'].str.contains('Director', case=False) & ds_df['position'].str.contains('data', case=False), 'designation'] = 'Director'\n\n## Filtered all the Data Scientists from the table\nds_df.loc[ds_df['position'] == 'Data Scientist', 'designation'] = 'Data Scientist'\nds_df.loc[ds_df['position'] == 'Senior Data Scientist', 'designation'] = 'Lead Data Scientist'\nds_df.loc[ds_df['position'] == 'Sr. Data Scientist', 'designation'] = 'Lead Data Scientist'\nds_df.loc[ds_df['position'] == 'Principal Data Scientist', 'designation'] = 'Lead Data Scientist'\nds_df.loc[ds_df['position'] == 'Lead Data Scientist', 'designation'] = 'Lead Data Scientist'\nds_df.loc[ds_df['position'] == 'Staff Data Scientist', 'designation'] = 'Data Scientist'\nds_df.loc[ds_df['position'] == 'Junior Data Scientist', 'designation'] = 'Data Scientist'\nds_df.loc[ds_df['position'] == 'Machine Learning Scientist', 'designation'] = 'Data Scientist'\nds_df.loc[ds_df['position'] == 'Principal Research Scientist', 'designation'] = 'Lead Data Scientist'\nds_df.loc[ds_df['position'] == 'Data Engineer', 'designation'] = 'Data Engineer'\nds_df.loc[ds_df['position'] == 'Research Analyst', 'designation'] = 'Data Engineer'\nds_df.loc[ds_df['position'] == 'Machine Learning Engineer', 'designation'] = 'Data Scientist'\nds_df.loc[ds_df['position'] == 'Quantitative Analyst', 'designation'] = 'Data Analyst'\nds_df.loc[ds_df['position'] == 'Research Scientist', 'designation'] = 'Data Scientist'\nds_df.loc[ds_df['position'] == 'Data Analyst', 'designation'] = 'Data Analyst'\nds_df.loc[ds_df['position'] == 'Market Research Analyst', 'designation'] = 'Data Analyst'\nds_df.loc[ds_df['position'] == 'Senior Research Analyst', 'designation'] = 'Data Analyst'\n## Check scientist, Senior Scientist, Senior Applied Scientist Staff Scientist,Applied Scientist, Associate Scientist role description\nds_df.loc[ds_df['position'] == 'Software Engineer, Machine Learning', 'designation'] = 'Data Scientist'\nds_df.loc[ds_df['position'] == 'Senior Data Engineer', 'designation'] = 'Data Engineer'\nds_df.loc[ds_df['position'] == 'Sr. Data Engineer', 'designation'] = 'Data Engineer'\nds_df.loc[ds_df['position'] == 'Lead Data Engineer', 'designation'] = 'Data Engineer'\nds_df.loc[ds_df['position'] == 'Research Data Analyst', 'designation'] = 'Data Analyst'\nds_df.loc[ds_df['position'] == 'Senior Associate, Data Scientist', 'designation'] = 'Data Scientist'\nds_df.loc[ds_df['position'] == 'Senior Machine Learning Scientist', 'designation'] = 'Data Scientist'\nds_df.loc[ds_df['position'] == 'Business Analyst', 'designation'] = 'Data Analyst'\nds_df.loc[ds_df['position'] == 'Data and Machine Learning Technical Trainer, Google Cloud Platform', 'designation'] = 'Data Scientist'\nds_df.loc[ds_df['position'] == 'International Research Analyst', 'designation'] = 'Data Analyst'\nds_df.loc[ds_df['position'] == 'Manager, Data Science', 'designation'] = 'Lead Data Scientist'\nds_df.loc[ds_df['position'] == 'Sales Engineer, Machine Learning, Google Cloud', 'designation'] = 'Data Scientist'\nds_df.loc[ds_df['position'] == 'Data Analysis Manager', 'designation'] = 'Data Engineer'\nds_df.loc[ds_df['position'] == 'Data Science Manager', 'designation'] = 'Lead Data Scientist'\nds_df.loc[ds_df['position'] == 'Data Scientist, Analytics', 'designation'] = 'Data Scientist'\nds_df.loc[ds_df['position'] == 'Machine Learning Data Scientist', 'designation'] = 'Data Scientist'","64def270":"#drop all the designations that are not related to Data Science\nds_df['designation'].dropna(inplace=True)\n#drop all null rows\nds_df.dropna(inplace=True)","a1a12ff9":"# Finding the number of positions for the assigned designations\nfrom matplotlib.pyplot import figure, show\nimport matplotlib.pyplot as plt\nfig,a=plt.subplots(figsize=(10,6))   \nsns.countplot(data=ds_df, x ='designation')\na.set_ylabel('No Of Positions',fontsize=16,color='red')\na.set_xlabel('Designation',fontsize=16,color='red') \n## the same plot can be done using \n## ds_df['designation'].value_counts().plot.bar()","2fc28344":"ds_df['location'].value_counts().head(30)\n# We can observe that different location with similar names are having different vaulues.\n#for example New York, NY and New York, NY 10003 both are pointing to the same location hence we need to rename\n#all such locations in a standard format","dafe59f9":"# Renaming all the locations to the standard format\nds_df.loc[ds_df['location'].str.contains('New York', case=False), 'location'] = 'New York'\nds_df.loc[ds_df['location'].str.contains('San Francisco', case=False), 'location'] = 'San Francisco'\nds_df.loc[ds_df['location'].str.contains('San Diego', case=False), 'location'] = 'San Diego'\nds_df.loc[ds_df['location'].str.contains('Atlanta', case=False), 'location'] = 'Atlanta'\nds_df.loc[ds_df['location'].str.contains('Chicago', case=False), 'location'] = 'Chicago'\nds_df.loc[ds_df['location'].str.contains('Seattle', case=False), 'location'] = 'Seattle'\nds_df.loc[ds_df['location'].str.contains('Boston', case=False), 'location'] = 'Boston'\nds_df.loc[ds_df['location'].str.contains('Washington', case=False), 'location'] = 'Washington'\nds_df.loc[ds_df['location'].str.contains('Los Angeles', case=False), 'location'] = 'Los Angeles'\nds_df.loc[ds_df['location'].str.contains('Mountain View', case=False), 'location'] = 'Mountain View'\nds_df.loc[ds_df['location'].str.contains('Cambridge', case=False), 'location'] = 'Cambridge'\nds_df.loc[ds_df['location'].str.contains('Sunnyvale', case=False), 'location'] = 'California'\nds_df.loc[ds_df['location'].str.contains('CA', case=True), 'location'] = 'California'\nds_df.loc[ds_df['location'].str.contains('NJ', case=True), 'location'] = 'New Jersey'\nds_df.loc[ds_df['location'].str.contains('NY', case=True), 'location'] = 'New York'\nds_df.loc[ds_df['location'].str.contains('TX', case=True), 'location'] = 'Texas'\nds_df.loc[ds_df['location'].str.contains('WA', case=True), 'location'] = 'Washington'\n\n","2dbead97":"# How the jobs are distributed geographically?\nfrom matplotlib.pyplot import figure, show\nwidth=18\nheight=6\nfigure(figsize=(width,height))\nsns.countplot(data=ds_df, x='location')\n# same can be done using: sns.barplot(data=ds_df.groupby(['location'])['position'].count().reset_index(), x='location', y='position')\nshow()","3dd5aadc":"# Based on the previous graph we have only figured out total open positions at every location\n# It would be more intuitive if we know different designated open positions at each location, let us plot that.\n# It can be achieved by adding hue to the above countplot\nfrom matplotlib.pyplot import figure, show\nwidth=18\nheight=6\nfigure(figsize=(width,height))\nsns.countplot(data=ds_df, x='location',hue='designation')\nshow()","bc6cb078":"top_20_company_list = ds_df.groupby(['company'])['location'].count().reset_index().sort_values('location',ascending=False).head(20)['company'].tolist()\ntop_20_company_list","72852929":"# Based on the previous graph we have only figured out total open positions at every location\n# It would be more intuitive if we know different designated open positions at each location, let us plot that.\n# It can be achieved by adding hue to the above countplot\nfrom matplotlib.pyplot import figure, show\nimport matplotlib.pyplot as plt\nfig,a=plt.subplots(figsize=(18,10))   \nax = sns.countplot(data=ds_df[ds_df['company'].isin(top_20_company_list)], x='company',hue='designation')\nax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nplt.tight_layout()\nplt.show()","c4ce8d01":"df_final =  pd.DataFrame(ds_df.groupby(['company','location','designation'])['position'].count().reset_index())\n\n\nfrom matplotlib.pyplot import figure, show\nimport matplotlib.pyplot as plt\nfig,a=plt.subplots(figsize=(3,3))   \nax = sns.countplot(data=df_final[df_final['company'] == 'KPMG'], x='location',hue='designation')\nax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nplt.tight_layout()\nplt.show()","09c8231a":"fig,a=plt.subplots(figsize=(3,3))  \nax = sns.countplot(data=df_final[df_final['company'] == 'Amazon.com'], x='location',hue='designation')\nax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nplt.tight_layout()\nplt.show()","4068a0f0":"fig,a=plt.subplots(figsize=(3,3))  \nax = sns.countplot(data=df_final[df_final['company'] == 'Google'], x='location',hue='designation')\nax.set_xticklabels(ax.get_xticklabels(), rotation=60, ha=\"right\")\nplt.tight_layout()\nplt.show()","82bb740f":"1. How the jobs are distributed geographically?\n2. Which types of positions are in demand geographically?\n3. Company vs position vs geography\n4. Reviews: Position preference, Interest shown by people for a particular position\n","86ca7caa":"**Conclusion**: We see that Data scientist role is in high demand irrespective of any location. Company wise we see that Amazon has a huge number of open positions for various data science roles. Location wise we see that New York has a maximum number of open positions for data science roles compared to any other locations.","677bfaf1":"3. Company vs position vs geography\n4. Reviews: Position preference, Interest shown by people for a particular position\n","54664fc2":"Given a role, i would like to find the locations in US where such requirement is in demand?"}}