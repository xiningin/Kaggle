{"cell_type":{"fb955a87":"code","3fe9ed73":"code","05fe77a9":"code","e3519925":"code","deeb6f00":"code","c4580881":"code","b73dab85":"code","1ad2ff4a":"code","5277adcc":"code","683acb4d":"code","93e0a1d3":"code","013c7e99":"code","f8a775a4":"code","f2e7246b":"code","251cc1fb":"code","cea02938":"code","c3fad150":"code","74122976":"code","e856bcdf":"code","96c2ceb8":"code","75ff64d9":"code","8876646b":"code","ed10ef4d":"code","04a10aff":"code","2b8a317e":"code","56b70e81":"code","f9d6fc70":"code","16044369":"code","2bb4d5f3":"markdown","26ba3d40":"markdown","ae3a25db":"markdown","27480479":"markdown","1175977d":"markdown","f99a1efe":"markdown","109eaabf":"markdown","1ea7320f":"markdown","83c5facb":"markdown","8a864a65":"markdown","3b61b2fa":"markdown","0b419fb6":"markdown","4192a6af":"markdown","fdccf98f":"markdown","a05610d2":"markdown","c1595563":"markdown","200fab4a":"markdown","67714f8a":"markdown","17a5c09c":"markdown","d82c1e87":"markdown","449d95e4":"markdown","fcdecd28":"markdown","d8c40357":"markdown","6632747d":"markdown"},"source":{"fb955a87":"# Lectura y Carga de Datos\nimport pandas as pd\nimport numpy as np\n\n#Representaci\u00f3n de los Datos\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\nimport plotly.express as px\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n%matplotlib inline\n\n#Predicci\u00f3n\nfrom scipy.stats import norm\nfrom sklearn.preprocessing import StandardScaler\nfrom scipy import stats\nfrom scipy.stats import skew\nfrom scipy.stats.stats import pearsonr\nfrom sklearn.feature_selection import RFE\nfrom sklearn.svm import SVR\nfrom sklearn.linear_model import LinearRegression \n\n#Alertas\nimport warnings\nwarnings.filterwarnings('ignore')","3fe9ed73":"#Carga del dataset de entrenamiento\n\ndf_train = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ndf_train_raw = df_train.copy() #Copia de seguridad por si tenemos alg\u00fan problema\n\ndf_train.head()","05fe77a9":"df_train.columns","e3519925":"df_train.dtypes","deeb6f00":"#An\u00e1lisis descriptivo de la columna 'SalePrice'\n\ndf_train[\"SalePrice\"].describe()","c4580881":"# Representaci\u00f3n en histograma de la columna 'SalePrice'\n\nfig = px.histogram(df_train, x=\"SalePrice\",\n                   marginal=\"box\", \n                   hover_data=df_train.columns)\n\nfig.update_layout(title = 'Histograma del precio de venta',\n                 xaxis_title = 'Precio de Venta',\n                 yaxis_title = 'N\u00famero de Casas')\n\nfig.show()","b73dab85":"#C\u00e1lculo de la oblicuidad y la curtosis\n\nprint(\"La oblicuidad es: %f\" % df_train['SalePrice'].skew())\nprint(\"La curtosis es: %f\" % df_train['SalePrice'].kurt())","1ad2ff4a":"# Estudio de los datos que faltan\n\ntotal = df_train.isnull().sum().sort_values(ascending=False)\nporcentaje = (df_train.isnull().sum()\/df_train.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, porcentaje], axis=1, keys=['Total', 'Porcentaje'])\nmissing_data.head(20)","5277adcc":"#Tratamiento del Missing Data\ndf_train = df_train.drop((missing_data[missing_data[\"Total\"] > 1]).index,1)\ndf_train = df_train.drop(df_train.loc[df_train[\"Electrical\"].isnull()].index)\n\n#Comprobaci\u00f3n de que ya no tenemos valores faltantes\ndf_train.isnull().sum().max()","683acb4d":"#Convertir las variables cat\u00e9goricas en dummy\n\ndf_train_w_dummies = pd.get_dummies(df_train)\ndf_train_w_dummies.head(10)","93e0a1d3":"#Relaci\u00f3n de GrLivArea con SalePrice\n\n\nfig = go.Figure(data = go.Scatter(x=df_train['GrLivArea'],\n                                y=df_train['SalePrice'],\n                                mode='markers')) # hover text goes here\n\nfig.update_layout(title='Relaci\u00f3n entre GrLivArea y SalePrice',\n                 xaxis_title = 'GrLivArea',\n                 yaxis_title = 'SalePrice')\nfig.show()","013c7e99":"#Relaci\u00f3n de TotalBsmtSF con SalePrice\n\n\nfig = go.Figure(data = go.Scatter(x=df_train['TotalBsmtSF'],\n                                y=df_train['SalePrice'],\n                                mode='markers')) # hover text goes here\n\nfig.update_layout(title='Relaci\u00f3n entre TotalBsmtSF y SalePrice',\n                 xaxis_title = 'TotalBsmtSF',\n                 yaxis_title = 'SalePrice')\nfig.show()","f8a775a4":"#Relaci\u00f3n de OverallQual con SalePrice\n\nfig = px.box(df_train, x=\"OverallQual\", y=\"SalePrice\")\n\nfig.update_layout(\n    title = \"Relaci\u00f3n de OverallQual y SalePrice\",\n    xaxis = dict(showgrid = False, zeroline = False, showticklabels = False),\n    yaxis = dict(zeroline = False, gridcolor = 'white')\n)\n\nfig.show()","f2e7246b":"#Relaci\u00f3n de YearBuilt con SalePrice\n\nfig = px.box(df_train, x=\"YearBuilt\", y=\"SalePrice\")\n\nfig.update_layout(\n    title = \"Relaci\u00f3n de YearBuilt y SalePrice\",\n    xaxis = dict(showgrid = False, zeroline = False, showticklabels = True),\n    yaxis = dict(zeroline = False, gridcolor = 'white')\n)\n\nfig.show()","251cc1fb":"matriz_corr = df_train.corr()\n\n#Definimos la figura con Seaborn\nf, ax = plt.subplots(figsize=(12, 9))\nsns.heatmap(matriz_corr, vmax=.8, square=True)\nax.set_title('Representaci\u00f3n de la matriz de correlaci\u00f3n')\n\nplt.show","cea02938":"k = 12 #N\u00famero de Variables\ncols = matriz_corr.nlargest(k, 'SalePrice')['SalePrice'].index\ncm = np.corrcoef(df_train[cols].values.T)\n\nf, ax = plt.subplots(figsize=(12, 9))\nsns.set(font_scale=1.25)\nhm = sns.heatmap(cm, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, \n                 yticklabels=cols.values, xticklabels=cols.values)\nax.set_title('Representaci\u00f3n de la correlaci\u00f3n de SalePrice con 12 variables')\n\nplt.show()","c3fad150":"#Definimos las columnas con las que trabajaremos (obtenidas tras mirar el correlation plot anterior)\ncols = ['SalePrice', 'OverallQual', 'GrLivArea', 'GarageCars', 'TotalBsmtSF', 'FullBath', 'YearBuilt']\n\n#Definimos la figura\nfig = px.scatter_matrix(df_train[cols],\n                       title=\"Scatter Plots\")\n\nfig.update_traces(marker=dict(size=2.5))\nfig.update_yaxes(nticks=2)\n\n\nfig.show()","74122976":"#Definimos las columnas que podr\u00edamos utilizar en nuestra regresi\u00f3n\n\nfeature_cols = [\"GrLivArea\", \"TotalBsmtSF\"]\n\nX = df_train[feature_cols]\nY = df_train[\"SalePrice\"]","e856bcdf":"#Empezamos modelizando\n\nestimator = SVR(kernel=\"linear\")       #Para una regresi\u00f3n lineal\nselector = RFE(estimator, 2, step=1)   #Dejamos que sea el modelo qui\u00e9n elija cu\u00e1l es la mejor opci\u00f3n\nselector = selector.fit(X,Y)\n\nselector.support_","96c2ceb8":"#Cargamos la librer\u00eda\n\nfrom sklearn.linear_model import LinearRegression","75ff64d9":"#Como han sido escogidas ambas columnas, las utilizamos para nuestra predicci\u00f3n\n\nX_pred = X[[\"GrLivArea\", \"TotalBsmtSF\"]]\n\n#Aplicamos el modelo\n\nlm = LinearRegression()\nlm.fit(X_pred, Y)","8876646b":"#Mostramos los resultados\n\nprint(\"Intercept : \" + str(lm.intercept_))\nprint(\"Coefficients : \" + str(lm.coef_))\nprint(\"Score : \" + str(lm.score(X_pred, Y)))","ed10ef4d":"#Definimos la figura\n\nfig = go.Figure()\n\n# A\u00f1adimos las trazas\n\nfig.add_trace(go.Scatter(x=X[\"GrLivArea\"], y=Y,\n                    mode='markers',\n                    name='Datos'))\n\nfig.add_trace(go.Scatter(x=X[\"GrLivArea\"],y = 81.84*X[\"GrLivArea\"] -13582.5,\n                        mode ='lines',\n                        name = 'Predicci\u00f3n'))\n\nfig.update_layout(title='Regresi\u00f3n Lineal',\n                 xaxis_title = 'GrLivArea',\n                 yaxis_title = 'SalePrice')\n\nfig.show()","04a10aff":"#Definimos la variable para poder hacer la limpieza\n\nx_outl = df_train[[\"GrLivArea\",\"SalePrice\"]]","2b8a317e":"# Hacemos un filtrado directo para encontrar los outliers\n\nx_outl[(x_outl[\"GrLivArea\"] > 4000)]","56b70e81":"x_outl_clean = x_outl.drop([523, 691, 1182, 1298])","f9d6fc70":"#Creamos de nuevo el modelo\n\nX = x_outl_clean[\"GrLivArea\"]\nX = X[:,np.newaxis]           #De esta manera evitamos el error pertinente\nY = x_outl_clean[\"SalePrice\"]\n\nlm = LinearRegression()\nlm.fit(X,Y)","16044369":"#Definimos la figura\n\nfig = go.Figure()\n\n# A\u00f1adimos las trazas\n\nfig.add_trace(go.Scatter(x=x_outl_clean[\"GrLivArea\"], y=x_outl_clean[\"SalePrice\"],\n                    mode='markers',\n                    name='Datos'))\n\nfig.add_trace(go.Scatter(x=x_outl_clean[\"GrLivArea\"],y = 111.2*x_outl_clean[\"GrLivArea\"] + 12582.04,\n                        mode ='lines',\n                        name = 'Predicci\u00f3n'))\n\nfig.update_layout(title='Regresi\u00f3n Lineal',\n                 xaxis_title = 'GrLivArea',\n                 yaxis_title = 'SalePrice')\n\nfig.show()","2bb4d5f3":"A partir de aqu\u00ed podemos obtener algunos valores interesantes, ya que tenemos la representaci\u00f3n, como la obliucidad o la curtosis. Estos valores estad\u00edsticos son muy interesantes (para m\u00e1s informaci\u00f3n revisar la literatura) y se pueden calcular de la siguiente forma:","26ba3d40":"De aqu\u00ed obtenemos bastante informaci\u00f3n interesante, por ejemplo, el precio m\u00ednimo no es cero (como cab\u00eda esperar), y adem\u00e1s tambi\u00e9n conocemos cu\u00e1l es el precio m\u00e1ximo. Otro valor muy interesante es conocer el precio medio, ya que tenemos el m\u00e1ximo y el m\u00ednimo y vemos que el medio est\u00e1 m\u00e1s cerca del m\u00ednimo; es decir, las casas tienen una tendencia m\u00e1s 'barata'. \n\nUna representaci\u00f3n quiz\u00e1 podr\u00eda dejar esto \u00faltimo mucho m\u00e1s claro, hag\u00e1mosla:","ae3a25db":"### Dummy Variables<a name=\"dummyvariables\"><\/a>\n\nComo podemos ver en la primera lectura de datos, tenemos variables que son categ\u00f3ricas, entonces nos surge la pregunta siguiente: \u00bfc\u00f3mo podemos tratar estas variables? La respuesta es simple, mediante la creaci\u00f3n de variables dummy. Aunque en este caso no es del todo necesario porque nuestro objetivo no es tratarlas, s\u00ed que es conveniente hacerlo de todas formas. Por ello, la sintaxis es simple y el paquete pandas lo hace por nosotros de manera directa.","27480479":"Aqu\u00ed ya podemos ver una relaci\u00f3n ciertamente lineal, a pesar de algunos out liars con los que trataremos m\u00e1s adelante. Otra variable que puede tener cierta relaci\u00f3n con SalePrice puede ser TotalBsmtSF. Tanto esta como GrLivArea hablan de cosas parecidas, es por ello que me arriesgo a revisarlas en concreto.","1175977d":"## An\u00e1lisis de Correlaci\u00f3n<a name=\"correlacion\"><\/a>\n\nAhora que ya hemos terminado la limpieza de datos, es importante analizar, con el fin de llegar a nuestro objetivo, las posibles relaciones que tiene 'SalePrice' con el resto de variables, tanto num\u00e9ricas como categ\u00f3ricas. A priori, y teniendo en cuenta el archivo de informaci\u00f3n que se nos adjunta con el dataset, vemos que la variable *GrLivArea* tiene pinta de estar muy relacionada.\n\n\n### Relaci\u00f3n con Variables Num\u00e9ricas<a name=\"relacionnumerica\"><\/a>","f99a1efe":"# Houses Prices: Adavanced Regression Techniques\n\nJonathan Lices Mart\u00edn","109eaabf":"De aqu\u00ed ya podemos sacar conclusiones importantes, ya que tenemos a simple vista la correlaci\u00f3n de SalePrice, con algunas de las variables. Adem\u00e1s, confirma que nuestra primera elecci\u00f3n para los an\u00e1lisis detallados fueron, como esper\u00e1bamos, correctas. \n\nOtra forma muy \u00fatil de visualizar la correlaci\u00f3n es mediante los Scatter Plots. Es hora de coger aire y respirar hondo, viene mucha informaci\u00f3n en poco espacio.\n\n### Correlation Scatter Plots<a name=\"scatterplots\"><\/a>","1ea7320f":"Aunque la tendencia no es nada fuerte, parece que se tiende a aumentar un poco los precios en las viviendas m\u00e1s modernas. A pesar de esto, se puede ver algo muy interesante, que es que los precios parecen mantenerse \"constantes\" en general. Esto es para evitar inflaci\u00f3n. En resumen, las dos variables num\u00e9ricas analizadas parecen tener una relaci\u00f3n ciertamente lineal con SalePrice, mientras que en cuanto a las variables categ\u00f3ricas, encontramos una relaci\u00f3n mucho m\u00e1s fuerte con el a\u00f1o de construcci\u00f3n. Pero para poder hacer un buen an\u00e1lisis, podemos hacer representaciones de las matrices de correlaci\u00f3n. \n\n### Matrices de Correlaci\u00f3n<a name=\"matricescorrelacion\"><\/a>","83c5facb":"Aqu\u00ed ya podemos observar como podr\u00edamos decir que SalePrice y OverallQual, se llevan bastante bien. Quiz\u00e1 podr\u00edamos observar la relaci\u00f3n que tiene el precio de venta con el a\u00f1o de construcci\u00f3n. Esta variable es: YearBuilt.","8a864a65":"Antes vimos la relaci\u00f3n con alguna de las variables, pero podemos coger m\u00e1s. Por ejemplo veamos, la relaci\u00f3n de SalePrice con 12 variables.","3b61b2fa":"Algo que tambi\u00e9s es importante conocer es el tipo de datos que vamos a analizar. En algunos an\u00e1lisis podemos estar tratando con variables que a priori son categ\u00f3ricas, pero que pueden ser realmente ordinales, como las fechas. Adem\u00e1s, nos puede otorgar cierta informaci\u00f3n valiosa a la hora de poder agrupar variables (si es que es necesario hacerlo), en este caso podr\u00edamos agrupar las variables a grandes rasgos por localizaci\u00f3n, espacio y tipo de construcci\u00f3n. Por tanto, conocer y comprobar el tipo de cada variable es muy importante.","0b419fb6":"Aqu\u00ed ya no encontramos esa tendencia tan lineal, quiz\u00e1 podr\u00eda tratarse de una exponencial o polin\u00f3mica. Adem\u00e1s aqu\u00ed podemos ver un out liar muy claro, con un TotalBsmtSF = 6110. \n\nUna vez analizadas algunas variables num\u00e9ricas, podemos ver qu\u00e9 relaci\u00f3n existe con variables categ\u00f3ricas. Para ello, no podemos utilizar gr\u00e1ficos de scattering como estos, si no que debemos usar, por ejemplo, box plots. Una variable categ\u00f3rica que tiene mucha pinta de estar relacionada con SalePrice es: OverallQual.\n\n### Relaci\u00f3n con Variables Categ\u00f3ricas<a name=\"relacioncategorica\"><\/a>","4192a6af":"Algo importante que se suele hacer, es mostrar el nombre de todas las columnas, sobre todo cuando tenemos datasets grandes, y de esta manera tener una idea general de qu\u00e9 puede describir cada columna. Aunque cabe decir que este dataset viene preparado y trae un archivo .txt explicando qu\u00e9 es cada columna. Lo recomendable, y m\u00e1s a la hora de hacer un buen trabajo es cambiar el nombre de las columnas a algo elegido por nosotros, que sea legible, que no contenga car\u00e1cteres raros, pero en este caso, al trabajar con m\u00e1s de 80 columnas no es algo que sea \u00fatil ni pr\u00e1ctico.","fdccf98f":"## Data Wrangling<a name=\"datawrangling\"><\/a>\n\nTras la lectura y visionado inicial de los datos, pueden venir a nuestra cabeza mil dudas. Ya que con esta lectura vemos de qu\u00e9 va la cosa, pero nada m\u00e1s. Es por esto que necesitamos hacer un estudio y una limpeza de los datos m\u00e1s profunda, como ver cu\u00e1ntos datos faltan, cu\u00e1les son los estad\u00edsticos b\u00e1sicos del dataset, etc.\n\nTenemos un dataset enorme, con m\u00e1s de 80 variables con sus respectivas observaciones, as\u00ed que centr\u00e9monos en nuestro objetivo. La columna *SalePrice* es por la cual estamos aqu\u00ed, as\u00ed que podemos obtener una descripci\u00f3n m\u00e1s detallada de esta columna.\n","a05610d2":"Ahora tenemos una idea general de nuestro modelo, pero lo suyo es hacer una representaci\u00f3n para poder visualizarlo todo de manera m\u00e1s directa.","c1595563":"### Missing Data<a name=\"missingdata\"><\/a>\n\nPara poder analizar las posibles relaciones que tiene la variable 'SalePrice' con otras, es importante conocer todos los valores que faltan. Conocer esto puede tener una importancia muy grande debido a que puede afectar a nuestros resultados. Por ello, hagamos lo siguiente:","200fab4a":"Que tiene mucha mejor pinta ahora, ya que sigue la tendencia lienal. A pesar de esto, el score obtenido sigue siendo no muy bueno. Al fin y a al cabo estamos utilzando un modelo por una tendencia que parece tener, aunque puede que no sea la correcta, y por supuesto, el modelo necesita correcciones.","67714f8a":"## Introducci\u00f3n y Agradecimientos <a name=\"introduction\"><\/a>\n\nSi le pedimos a una persona que describa el hogar de sus sue\u00f1os, probablemente no comenzar\u00e1 en hablarte de la altura del techo del s\u00f3tano, ni tampoco de la proximidad a cierta l\u00ednea de metro, pero el conjunto de datos utilizados en este an\u00e1lisis demostrar\u00e1n que aunque no es lo primero que se nos viene a la cabeza, sin duda es de lo m\u00e1s importante a la hora de negociar un precio.\n\nEn este cuaderno, y mediante el correspondiente an\u00e1lisis de los datos, tratar\u00e9 de predecir el precio final de las casas seg\u00fan sus propiedades utilizando algunas t\u00e9cnicas de regresi\u00f3n vistas durante el curso de Udemy: [\"Curso completo de Machine Learning: Data Science en Python\"](https:\/\/www.udemy.com\/course\/machinelearningpython\/).\n\nLos datos utilizados para este an\u00e1lisis, as\u00ed como la imagen de cabecera, han sido obtenido de la competici\u00f3n de kaggle \"House Prices: Advanced Regression Techniques\", que se puede encontrar en el siguiente [enlace](https:\/\/www.kaggle.com\/c\/house-prices-advanced-regression-techniques). Adem\u00e1s, algunas de las funciones utilizadas aqu\u00ed no son propias, si no que se han obtenido de varios usuarios de Kaggle que se pueden encontrar en la secci\u00f3n de \"Tutoriales\" del enlace anterior. El objetivo de este an\u00e1lisis es puramente did\u00e1ctico.\n\n### Control de Versiones<a name=\"controlver\"><\/a>\n\n* Los datos est\u00e1n actualizados en la \u00faltima versi\u00f3n del dataset proporcionada en la web mencioanda anteriormente. \n\n* La fecha de la \u00faltima actualizaci\u00f3n de este an\u00e1lisis es: 09\/05\/2020\n\n## Carga de Paquetes y Lectura Inicial de los Datos<a name=\"cargainicial\"><\/a>","17a5c09c":"Hay varias formas de afrontar estos resultados. La primera es fingir que aquellas variables que tienen una gran cantidad de valores faltantes nunca han existido y eliminarlas directamente. Pero esto tiene ciertos inconvenientes, por ejemplo, que estemos eliminando una variable que tenga una fuerte correlaci\u00f3n con la variable objetivo (en este caso: 'SalePrice'). Aqu\u00ed volvemos a recordar el gran valor del estudio inicial de lo que significan todas las variables, ya que ahora nos damos cuenta de que, en este caso, si nos cargamos todas estas, no las echaremos de menos.\n\nPor otro lado, tenemos la variable 'Electrical', la cual tiene solo un dato faltante, por ello eliminaremos \u00fanicamente esta observaci\u00f3n dejando as\u00ed la variable para posibles c\u00e1lculos.","d82c1e87":"## An\u00e1lisis Predictivo<a name=\"analisispredictivo\"><\/a>\n\nEn vista a las correlaciones hechas, es interesante pasar a un an\u00e1lisis m\u00e1s predictivo. En este caso, y como se trata de una pr\u00e1ctica, haremos una regresi\u00f3n lineal para aquellas dos variables que vimos que podr\u00edan tener dicha tendencia. Cabe destacar que existen an\u00e1lisis m\u00e1s acertados, corregidos y eficientes.","449d95e4":"## Tabla de Contenidos\n\n* [Introducci\u00f3n y Agradecimientos](#introduccion)\n    * [Control de Versiones](#controlver)\n* [Carga de Paquetes y Lectura Inicial de los Datos](#cargainicial)\n* [Data Wrangling](#datawrangling)\n    * [Missing Data](#missingdata)\n    * [Dummy Variables](#dummyvariables)\n* [An\u00e1lisis de Correlaci\u00f3n](#correlacion)\n    * [Relaci\u00f3n con Variables Num\u00e9ricas](#relacionnumerica)\n    * [Relaci\u00f3n con Variables Categ\u00f3ricas](#relacioncategorica) \n    * [Matrices de Correlaci\u00f3n](#matricescorrelacion)\n    * [Correlation Scatter Plots](#scatterplots)\n* [An\u00e1lisis Predictivo](#analisispredictivo)\n    * [El problema de los Outliers](#outliers)","fcdecd28":"Aqu\u00ed tenemos el trabajo que hab\u00edamos empezado a hacer al principio de un solo tir\u00f3n, donde podemos observar la relaci\u00f3n entre todas las variables. Esto es algo muy muy interesante, ya que a un solo golpe de vista podemos ver aquellas variables que pueden estar relacionadas mediante tendencias lineal, logar\u00edtmica, etc.","d8c40357":"Obviamente, y como esper\u00e1bamos, el modelo no es nada del otro mundo. Esto es debido, en gran parte, a la cantidad de outliars que tenemos. Una soluci\u00f3n (la m\u00e1s directa pero puede que no siempre sea efectiva) es cargarnos directamente estos outliars, de una manera muy directa. Comprobemos si as\u00ed funciona mejor el modelo.\n\n### El problema de los Outliers<a name=\"outliers\"><\/a>\n\nPara analizar los outliers, y hacerlo de manera m\u00e1s sencilla, utilicemos \u00fanicamente GrLivArea. Eliminando as\u00ed todos los valores que superen, por ejemplo, 4000.","6632747d":"Como ve\u00edamos en el gr\u00e1fico anterior, vemos que sobran 4 puntos. Por tanto, nos los podemos cargar sin miedo (hay que tener en cuenta que esto en un an\u00e1lisis real, hay que tratarlo con much\u00edsimo m\u00e1s cuidado, porque podemos eliminar datos muy importantes para el an\u00e1lisis y liarla muy grande),"}}