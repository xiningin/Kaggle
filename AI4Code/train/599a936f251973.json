{"cell_type":{"2334ec2b":"code","1b18d3d3":"code","90f42903":"code","d1d27b6a":"code","8f6b1490":"code","ca50d876":"code","b1b70994":"code","0bf3fc17":"code","0b4758dd":"code","33779cb7":"code","0d24b8e7":"code","5b15d3ad":"code","8b2559a8":"code","c153eb76":"code","3802c249":"code","d9692e3e":"code","8ce152e0":"code","f62eff71":"code","3a8f451e":"code","c96de88b":"code","88b07312":"code","7c09534e":"code","0ecc91d9":"code","860af054":"code","7dd9acdd":"code","f20c851e":"code","e4d3de16":"code","9868c212":"code","11f8924e":"code","7f8a64bd":"code","c0bdea38":"code","1ff247a3":"code","9719cdaf":"code","753c8f41":"markdown","0befd33f":"markdown","184b7487":"markdown","6e430a03":"markdown","534ff272":"markdown","d4bb7a09":"markdown","6c8f59d9":"markdown","5ab6831f":"markdown","4827a235":"markdown","82c9779a":"markdown","2b97a45b":"markdown","769f5f69":"markdown","9853145e":"markdown","a9429465":"markdown","a7289f71":"markdown","4fcbcdfd":"markdown","1554dfd8":"markdown","ac5b55f7":"markdown","fd5dfa7b":"markdown","47c9fa7d":"markdown","619512ea":"markdown","ec81037d":"markdown","6f642e05":"markdown","074af736":"markdown","7d383e6e":"markdown","0742953b":"markdown","82108496":"markdown","940bfbf8":"markdown","627ef697":"markdown","88c3e104":"markdown","90fec7fe":"markdown","746e0bce":"markdown","244a14e0":"markdown","7341dc65":"markdown","3b01e87a":"markdown","8a84dd80":"markdown","2357d1b5":"markdown","4b3c0196":"markdown","147cb159":"markdown","b55c3cc6":"markdown","150c65fe":"markdown","23df9507":"markdown","0a6121c4":"markdown","a7de29e8":"markdown","cd09066e":"markdown","dbf998cf":"markdown","5b14fd09":"markdown","7918cf41":"markdown","b36e83fb":"markdown","807ed54e":"markdown","3f631f0f":"markdown","dea6246a":"markdown","7164087e":"markdown"},"source":{"2334ec2b":"#  Import Libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n\n#  world maps\nimport folium\nfrom folium.plugins import MarkerCluster\nimport plotly_express as px  #  ploty express\n\n# Kaggle directories\nimport os\nprint(os.listdir(\"..\/input\"))\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))","1b18d3d3":"df  = pd.read_csv(\"..\/input\/suicide-rates-overview-1985-to-2016\/master.csv\")  # suicides\ngps = pd.read_csv(\"..\/input\/world-capitals-gps\/concap.csv\")   # world GPS","90f42903":"count = 0\nfor i in sorted(df.country.unique()):\n    if len(gps.CountryName[gps.CountryName == i].values) == 0:\n        print('MISSING:  df: {:<35}gps:{}'.format(i,gps.CountryName[gps.CountryName == i].values))\n        count = count + 1\nprint('check complete:  {} missing'.format(count)) \n\n#  update names in df to match the gps file\ndf.replace({'Cabo Verde':'Cape Verde','Republic of Korea':'South Korea','Russian Federation':'Russia','Saint Vincent and Grenadines':'Saint Vincent and the Grenadines'},inplace=True)","d1d27b6a":"df = df.join(gps.set_index('CountryName'), on='country')\nprint(df.shape)","8f6b1490":"#  drop un-needed columns\ndf = df.drop([' gdp_for_year ($) ', 'country-year', 'CountryCode', 'CapitalName'], axis=1)\n# sort dataframe by country and year\ndf = df.sort_values(['country','year'])\n\nprint(df.shape)","ca50d876":"plt.title('null, missing and \\'0\\' values heatmap')\nsns.heatmap((df.isnull()) | (df == 0), cmap = 'mako')\nplt.show()\n\nprint('\\nDUPLICATE VALUE COUNT:  ', df.duplicated().sum())","b1b70994":"#  percentage missing for 'suicides\/100k pop' - before\nfor i in ['suicides_no', 'suicides\/100k pop']:\n    missing_before = len(df[df[i] == 0])*100\/len(df)\n    print(' before: {:>20} == 0:  {:>8.4f}%'.format(i,missing_before))\n    \n#  BEFORE - missing 'suicides_no' and 'suicides\/100k pop'\nsui_before = df[['suicides_no', 'suicides\/100k pop']]\n\n    \n#  drop 'df['suicides\/100k pop'] == 0' rows\nlen(df[df['suicides\/100k pop'] == 0].index)\ndf.drop(df[df['suicides\/100k pop'] == 0].index, inplace = True)\n\n#  percentage missing for 'suicides\/100k pop' - after\nfor i in ['suicides_no', 'suicides\/100k pop']:\n    missing_after = len(df[df[i] == 0])*100\/len(df)\n    print(' after:  {:>20} == 0:  {:>8.2f}%'.format(i,missing_after))\n\n#  AFTER - missing 'suicides_no' and 'suicides\/100k pop'\nsui_after = df[['suicides_no', 'suicides\/100k pop']]","0bf3fc17":"#  heatmaps for missing 'suicides_no' and 'suicides\/100k pop'\nplt.figure(figsize=(10,4))\nplt.subplot(121)\nsns.heatmap((sui_before.isnull()) | (sui_before == 0), cmap = 'binary_r')\nplt.title('BEFORE: \\'suicides_\\' missing')\nplt.subplot(122)\nsns.heatmap((sui_after.isnull()) | (sui_after == 0), cmap = 'binary_r')\nplt.title('AFTER: \\'suicides_\\' missing')\nplt.show","0b4758dd":"#  percentage missing for 'HDI for year'\nprint('HDI for year == NaN:  {:>8.4f}%\\t(before)'.format( len(df[df['HDI for year'].isnull()])*100\/len(df)))\n\n#  before forward fill\nhdi_before = df['HDI for year'].groupby(df['year']).sum()\n\n#  fill ''HDI for year' nulls with previous values\ndf['HDI for year'].fillna(method='ffill', inplace=True)\n\n#  drop remaining''HDI for year' nulls\ndf.drop(df[df['HDI for year'].isnull()].index, inplace = True)\n\n#  after forward fill\nhdi_after = df['HDI for year'].groupby(df['year']).sum()\n\n#  percentage missing for 'HDI for year'\nprint('HDI for year == NaN:  {:>8.4f}%\\t(after)'.format( len(df[df['HDI for year'].isnull()])*100\/len(df)))","33779cb7":"sr = df['year'].groupby(df['year']).value_counts()  # count rows per year\nyr = df['year'].sort_values().unique()   #  years\n\n#  plot HDI and 2016\nplt.figure(figsize=(10,4))\n\nplt.subplot(121)\nplt.plot(yr,hdi_before)\nplt.plot(yr,hdi_after)\nplt.title('\\'HDI for year\\' BEFORE & AFTER fill', fontsize=14)\nplt.xlabel('Years', fontsize=12)\nplt.ylabel('HDI for year  (rows)', fontsize=12)\nplt.legend(['before','after'])\n\n#  plot data profile\nplt.subplot(122)\nplt.plot(yr,sr)\nplt.title('Data Profile: Observations per 1985-2016\\n(mean = {:.0f})'.format(sr.mean()), fontsize=14)\nplt.xlabel('Years', fontsize=12)\nplt.ylabel('Observations', fontsize=12)\nplt.axhline(y = sr.mean(), color = 'gray', ls = '--')\nplt.axvline(x = 2015, color = 'red', ls = '--')\nfor a,b in zip(yr, sr): \n    if a % 4 == 0:\n        plt.text(a, b, str(b))\nplt.show()","0d24b8e7":"#  drop year = 2016\nprint('before 2016 data drop:  ',df.shape)\ndf.drop(df[df['year'] == 2016].index, inplace = True)\nprint('after  2016 data drop:  ',df.shape)","5b15d3ad":"plt.title('null, missing and \\'0\\' values heatmap')\nsns.heatmap((df.isnull()) | (df == 0), cmap = 'mako')\nplt.show()\n\nprint('\\nDUPLICATE COUNT:  ', df.duplicated().sum())","8b2559a8":"#  Top 10 most populous countries in the world\ntop10 = ['China','India','United States','Indonesia','Brazil','Pakistan','Nigeria','Bangladesh','Russia','Mexico']\nin_set = df.country[df.country.str.contains('|'.join(top10))].unique().tolist()\n\nprint('Out of the top 10 most populous countries:\\n{}\\n\\nOnly the following {} are present:\\n{}'.format(top10,len(in_set),in_set))\n\n#  dataset\nprint('\\n\\nDataset has', len(df['country'].unique()),'countries on' ,len(df['ContinentName'].unique()),'continents spanning' ,len(df['year'].unique()),'years.')","c153eb76":"#  SET UP CONTINENT DATAFRAME\n#  population, population percent and country count per continent\ndf_cont = df.groupby('ContinentName')['population'].sum().reset_index()\ndf_cont['Population Percentage'] = df_cont['population']*100\/df_cont['population'].sum()\n\n#  countries count per continent\ncntCont = df['country'].groupby(df['ContinentName']).nunique()\n\n#  add countryCount column to df_cont\ndf_cont['countryCount'] = cntCont[df_cont['ContinentName']].values ","3802c249":"#  PLOTs - Population AND Country Count per Continent \nplt.figure(figsize=(10,4))\nplt.subplot(121)\nax = sns.barplot(data = df_cont, x = 'Population Percentage', y='ContinentName')\nplt.title('Population', fontsize=14)\nplt.xlim([0,45])\nplt.ylabel(\"\")\nfor p in ax.patches:\n    ax.annotate(\"{:,.1f}%\".format(p.get_width()), (p.get_x() + p.get_width(), p.get_y()+.4), ha='left', va='center')\n\nplt.subplot(122)\nax = sns.barplot(data = df_cont, x = 'ContinentName', y='countryCount')\nplt.title('Country Count\\n({} countries)'.format(df_cont.countryCount.sum()), fontsize=14)\nplt.xlabel('')\nplt.xticks(rotation = 90)\nplt.ylim([0,50])\nfor p in ax.patches:\n    ax.annotate(\"%.0f\" % p.get_height(), (p.get_x() + p.get_width()\/2, p.get_height()+2), ha='center', va='center')\n    \nplt.show()","d9692e3e":"#  create an ordered list for plotting:\ncont_list = df.ContinentName.sort_values().unique()\ncont_glob = np.insert(cont_list, 0, 'Global')  # add Global as 1st\nage_list = ['5-14 years', '15-24 years', '25-34 years', '35-54 years',  '55-74 years', '75+ years']","8ce152e0":"#  suicide rate average: overall, male, female\nsuicide_mean = df['suicides\/100k pop'].mean()\nsr_m = df['suicides\/100k pop'][df['sex'] == 'male'].mean()\nsr_f = df['suicides\/100k pop'][df['sex'] == 'female'].mean()\n\n#  dataframe with suicide averages for each country\ndf_suicideRate = df['suicides\/100k pop'].groupby(df['country']).mean().sort_values(ascending=False).reset_index()\n\n#  plot suicide rates per country\nplt.figure(figsize=(10,20))\nax = sns.barplot(data = df_suicideRate, x = 'suicides\/100k pop', y='country')\nplt.title('Suicide Rates per Country', fontsize=14)\n#plt.xlabel('suicides\/100k pop\\n\\noverall mean: {:>18.2f}\\nmale mean (BLUE): {:>8.2f}\\nfemale mean (RED): {:>18.2f}'.format(suicide_mean, sr_m, sr_f))\nplt.text(27,95,'SUICIDE RATES:\\nglobal mean (BLACK):  {:>10.4f}\\nmale mean (BLUE): {:>15.4f}\\nfemale mean (RED): {:>14.4f}'.format(suicide_mean, sr_m, sr_f))\nplt.axvline(x= suicide_mean, color = 'black')#, ls = '--')\nplt.axvline(x= sr_m, color = 'blue', ls = '--')\nplt.axvline(x= sr_f, color = 'red', ls = '--')\nplt.ylabel(\"\")\nfor p in ax.patches:\n    ax.annotate(\"%.2f\" % p.get_width(), (p.get_x() + p.get_width() +2, p.get_y()+.4), ha='center', va='center')\nplt.show()","f62eff71":"#  mean suicides\/100k pop per continent\ndf_cont['suicides\/100k pop'] = df.groupby('ContinentName')['suicides\/100k pop'].mean().values\n\n#  plot Population and Suicide Rates\nplt.figure(figsize=(10,4))\nplt.subplot(121)\nax = sns.barplot(data = df_cont, x = 'Population Percentage', y='ContinentName')\nplt.title('Population', fontsize=14)\nplt.xlim([0,45])\nplt.ylabel(\"\")\nfor p in ax.patches:\n    ax.annotate(\"{:,.1f}%\".format(p.get_width()), (p.get_x() + p.get_width(), p.get_y()+.4), ha='left', va='center')\n\nplt.subplot(122)\nax = sns.barplot(data = df_cont, x = 'suicides\/100k pop', y='ContinentName')\nplt.title('Suicide Rates', fontsize=14)\nplt.xlim([0,22])\nplt.ylabel(\"\")\nplt.yticks([])\nplt.axvline(x= suicide_mean, color = 'gray', ls = '--')\nfor p in ax.patches:\n    ax.annotate(\"%.2f\" % p.get_width(), (p.get_x() + p.get_width() + 1.5, p.get_y()+.4), ha='center', va='center')\n    \nplt.show()","3a8f451e":"#  add male and female suicide means\nfor i, row in df_cont.iterrows():\n    c = df_cont.loc[i]['ContinentName']\n    df_cont.loc[i, 'male'] = df['suicides\/100k pop'][(df['ContinentName'] == c) & (df['sex'] == 'male')].mean()\n    df_cont.loc[i, 'female'] = df['suicides\/100k pop'][(df['ContinentName'] == c) & (df['sex'] == 'female')].mean()\n\n#  add male and female ratio of suicide means\ndf_cont['ratio'] = df_cont['male']\/df_cont['female']\n\n\n#  PLOTs - suicide rates per continent AND male\/female ratio\nplt.figure(figsize=(12,6))\nplt.subplot(121)\nax = sns.barplot(data = df, x = 'ContinentName', order = cont_list, y = 'suicides\/100k pop', hue = 'sex', ci=None, palette = 'ocean')\nplt.title('Male & Female Suicide Rates', fontsize=14)\nplt.xlabel(\"\")\nplt.xticks(rotation = 90)\nplt.ylim([0,30])\nplt.legend(title = \"\")\nfor p in ax.patches:\n    ax.annotate(\"%.1f\" % p.get_height(), (p.get_x() + p.get_width()\/2, p.get_height()+1), ha='center', va='center')\n    \nplt.subplot(122)\nax = sns.barplot(df_cont['ContinentName'], df_cont['ratio'], palette = 'winter')\nplt.title('Male vs. Female Suicide Ratio', fontsize=14)\nplt.xlabel(\"\")\nplt.xticks(rotation = 90)\nplt.ylabel('Male\/Female Suicide Ratio')\nplt.ylim([1,5])\nfor p in ax.patches:\n    ax.annotate(\"%.2f\" % p.get_height(), (p.get_x() + p.get_width()\/2, p.get_height()+.1), ha='center', va='center')\n\nplt.show()","c96de88b":"#  plot Suicide Rates & Population (male & female) over Time\nplt.figure(figsize=(12,24))\na = 4   # subplot rows\nb = 2   # subplot columns\nc = 1   # subplot counter\n\nfor i in cont_glob:\n    \n    if i == 'Global':\n        dfx = df   # GLOBAL PLOT\n    else:\n        dfx = df[df['ContinentName'] == i]\n\n    #  subplots        \n    plt.subplot(a,b,c)\n    tw1 = sns.lineplot(data = dfx, x='year', y='population', ci = None, hue = 'sex', palette = 'hsv')\n    tw2 = tw1.twinx()\n    tw2 = sns.lineplot(data = dfx, x='year', y='suicides\/100k pop', color ='grey', ci = None, style = True, dashes = [(2,2)])\n    tw2 = plt.legend('',frameon=False)\n    tw2 = plt.xlim([1985,2015])\n    plt.title('{}:  Suicide Rates & Population'.format(i.upper()))\n    c = c + 1\n    \nplt.show()","88b07312":"print('\\nGLOBAL SUICIDE RATES PER AGE GROUP\\n')\nprint(f\"{'Age Group' : <10}{'MALE': >12}{'FEMALE': >8}\")\nprint('-'*30)\nfor i in age_list:\n    a = df['suicides\/100k pop'][(df['age'] == i) & (df['sex'] == 'male')].mean()\n    b = df['suicides\/100k pop'][(df['age'] == i) & (df['sex'] == 'female')].mean()\n    print('{:<14}\\t{:>6.2f}\\t{:>6.2f}'.format(i,a,b))","7c09534e":"#  plot Suicide Rates & Age Group over Time\nplt.figure(figsize=(12,60))\na = 8   # subplot rows\nb = 2   # subplot columns\nc = 1   # subplot counter\n\nfor i in cont_glob:\n    \n    if i == 'Global':\n        dfx = df   # GLOBAL PLOT\n    else:\n        dfx = df[df['ContinentName'] == i]\n\n    #  subplot 1 - male  \n    plt.subplot(a,b,c)  # male\n    tw1 = sns.lineplot(data = dfx[dfx['sex'] == 'male'], x='year',    y='suicides\/100k pop', hue='age', hue_order = age_list, ci = None)\n    plt.title('{}:  Suicide Rates & Age (MALE)'.format(i.upper()))\n    plt.legend('',frameon=False)\n    plt.xlim([1985,2015])\n    \n    tw2 = tw1.twinx()\n    tw2 = sns.lineplot(data = dfx[dfx['sex'] == 'male'], x='year',  y='suicides\/100k pop', color ='grey', ci = None, style = True, dashes = [(2,2)])\n    plt.legend('',frameon=False)\n    plt.xlim([1985,2015])\n    plt.ylabel(\"\")\n    c = c + 1\n    \n    #  subplot 2 - female\n    plt.subplot(a,b,c)  # female\n    tw1 = sns.lineplot(data = dfx[dfx['sex'] == 'female'], x='year',  y='suicides\/100k pop', hue='age', hue_order = age_list, ci = None)\n    plt.legend(bbox_to_anchor =(1.1, 1))\n    plt.xlim([1985,2015])\n    plt.ylabel(\"\")\n    \n    tw2 = tw1.twinx()\n    tw2 = sns.lineplot(data = dfx[dfx['sex'] == 'female'], x='year',    y='suicides\/100k pop', color ='grey', ci = None, style = True, dashes = [(2,2)])\n    plt.title('{}:  Suicide Rates & Age (FEMALE)'.format(i.upper()))\n    plt.legend('',frameon=False)\n    plt.xlim([1985,2015])\n    plt.ylabel(\"\")\n    c = c + 1\n    \nplt.show()","0ecc91d9":"#  plot Suicide Rates & HDI over Time\nplt.figure(figsize=(12,24))\na = 4   # subplot rows\nb = 2   # subplot columns\nc = 1   # subplot counter\n\nfor i in cont_glob:\n    \n    if i == 'Global':\n        dfx = df   # GLOBAL PLOT\n    else:\n        dfx = df[df['ContinentName'] == i]\n\n    #  subplots        \n    plt.subplot(a,b,c)\n    tw1 = sns.lineplot(data = dfx, x='year', y='HDI for year')\n    \n    tw2 = tw1.twinx()\n    tw2 = sns.lineplot(data = dfx, x='year', y='suicides\/100k pop', color ='grey', ci = None, style = True, dashes = [(2,2)])\n    tw2 = plt.legend('',frameon=False)\n    tw2 = plt.xlim([1985,2015])\n    plt.title('{}:  Suicide Rates & HDI'.format(i.upper()))\n    plt.grid()\n    c = c + 1\n    \nplt.show()","860af054":"#  plot Suicide Rates & GDP over Time\nplt.figure(figsize=(12,24))\na = 4   # subplot rows\nb = 2   # subplot columns\nc = 1   # subplot counter\n\nfor i in cont_glob:\n    \n    if i == 'Global':\n        dfx = df   # GLOBAL PLOT\n    else:\n        dfx = df[df['ContinentName'] == i]\n\n    #  subplots        \n    plt.subplot(a,b,c)\n    tw1 = sns.lineplot(data = dfx, x='year', y='gdp_per_capita ($)')\n    \n    tw2 = tw1.twinx()\n    tw2 = sns.lineplot(data = dfx, x='year', y='suicides\/100k pop', color ='grey', ci = None, style = True, dashes = [(2,2)])\n    tw2 = plt.legend('',frameon=False)\n    tw2 = plt.xlim([1985,2015])\n    plt.title('{}:  Suicide Rates & GDP'.format(i.upper()))\n    plt.grid()\n    c = c + 1\n    \nplt.show()","7dd9acdd":"# 1.  rearrange column name so \"suicides\/100k pop\" is first\ndf_corr = df[['suicides\/100k pop', 'sex', 'age', 'population', 'HDI for year', 'gdp_per_capita ($)', 'generation', 'ContinentName']]\n\n# 2.  encode with numerical values\ndf_corr['sex'] = df_corr['sex'].map({'female':0,'male':1})\ndf_corr['age'] = df_corr['age'].map({\n        '5-14 years':0,'15-24 years':1,'25-34 years':2,\n        '35-54 years':3,'55-74 years':4,'75+ years':5})\ndf_corr['generation'] = df_corr['generation'].map({\n        'Generation Z':0,'Millenials':1,'Generation X':2,\n        'Boomers':3,'Silent':4,'G.I. Generation':5})\ndf_corr['ContinentName'] = df_corr['ContinentName'].map({\n        'Africa':0,'Asia':1,'Australia':2,'Central America':3,\n        'Europe':4,'North America':5,'South America':6})\n\ndf_corr.info()","f20c851e":"from sklearn.preprocessing import MinMaxScaler\n\ndf_norm = MinMaxScaler().fit_transform(df_corr)\ndf_corr = pd.DataFrame(df_norm, index = df_corr.index, columns = df_corr.columns)","e4d3de16":"#  Correlations - OVERALL\ndataCorr = df_corr.corr()\n\n#  print correlation\ndataCorr['suicides\/100k pop'].sort_values(ascending=False)\n\n#  plot heatmap\nplt.figure(figsize=(8,8))\nplt.title('Suicide Correlation', fontsize=14)\nsns.heatmap(dataCorr, annot=True, fmt='.2f', square=True, cmap = 'Greens_r')","9868c212":"#  Correlation MALE - filter dataframe for male\/female\ndf_male   = df_corr[(df_corr['sex'] == 1)]              # male\ndf_maleCorr = df_male.drop([\"sex\"], axis=1).corr()      # male corr\n\n#  Correlation FEMALE - filter dataframe for male\/female\ndf_female = df_corr[(df_corr['sex'] == 0)]              # female\ndf_femaleCorr = df_female.drop([\"sex\"], axis=1).corr()  # female corr","11f8924e":"#  Correlation heatmaps for FEMALE\/MALE\nfig = plt.figure(figsize=(14,10))\nfig.add_subplot(121)\nplt.title('Suicide Correlation - MALE', fontsize=14)\nsns.heatmap(df_maleCorr, annot=True, fmt='.2f', square=True, cmap = 'Blues_r')\nfig.add_subplot(122)\nplt.title('Suicide Correlation - FEMALE ', fontsize=14)\nsns.heatmap(df_femaleCorr, annot=True, fmt='.2f', square=True, cmap = 'Reds_r')\nplt.show()","7f8a64bd":"#  Correlation - sorted for both male\/female\ncorrM = df_maleCorr['suicides\/100k pop'].sort_values(ascending=False)\ncorrF = df_femaleCorr['suicides\/100k pop'].sort_values(ascending=False)\n\ncorrALL = pd.DataFrame(columns = ['MALE','correlation-m','FEMALE','correlation-f'])\ncorrALL['MALE']   = corrM.index\ncorrALL['correlation-m'] = corrM.values\ncorrALL['FEMALE'] = corrF.index\ncorrALL['correlation-f'] = corrF.values\nprint(corrALL)","c0bdea38":"#  create dataframe for mapping\nmapdf = pd.DataFrame(columns =  ['country','suicides_no','lat','lon'])\n\nmapdf.lat = mapdf.lat.astype(float).fillna(0.0)\nmapdf.lon = mapdf.lat.astype(float).fillna(0.0)\n\nmapdf['country']     = df['suicides_no'].groupby(df['country']).sum().index\nmapdf['suicides_no'] = df['suicides_no'].groupby(df['country']).sum().values\nfor i in range(len(mapdf.country)):\n    mapdf.lat[i] =  df.CapitalLatitude[(df['country'] == mapdf.country[i])].unique()\n    mapdf.lon[i] = df.CapitalLongitude[(df['country'] == mapdf.country[i])].unique()\n\n\n#  make map - popup displays country and suicide count\n#  lat\/lon must be \"float\"\nworld_map = folium.Map(location=[mapdf.lat.mean(),mapdf.lon.mean()],zoom_start=2)\nmarker_cluster = MarkerCluster().add_to(world_map)\n\nfor i in range(len(mapdf)-1):\n    label = '{}:\\t{} suicides'.format(mapdf.country[i].upper(),mapdf.suicides_no[i])\n    label = folium.Popup(label, parse_html=True)\n    folium.Marker(location=[mapdf.lat[i],mapdf.lon[i]],\n            popup = label,\n            icon = folium.Icon(color='green')\n    ).add_to(marker_cluster)\n\n\nworld_map.add_child(marker_cluster)\nworld_map.save(\"C:\\\\Users\\ACER\\Desktop\\\\world_mapFolium.html\")\nworld_map         #  display map","1ff247a3":"#  create dataframe with Country and mean of Suicide rates per 100k Population\ndf_choro = df[['suicides\/100k pop','country']].groupby(['country']).mean().sort_values(by='suicides\/100k pop').reset_index()\n\n#  Update US name to match JSON file\ndf_choro.replace({'United States':'United States of America'},inplace=True)\n\n#  https:\/\/www.kaggle.com\/ktochylin\/world-countries\nworld_geo = r'..\/input\/world-countries\/world-countries.json'\nworld_choropelth = folium.Map(location=[0, 0], tiles='Cartodb Positron',zoom_start=1)\n\nworld_choropelth.choropleth(\n    geo_data=world_geo,\n    data=df_choro,\n    columns=['country','suicides\/100k pop'],\n    key_on='feature.properties.name',\n    fill_color='PuBu',  # YlGn\n    fill_opacity=0.7, \n    line_opacity=0.2,\n    legend_name='Suicide Rates per 100k Population')\n \n# display map\nworld_choropelth","9719cdaf":"world_choropelth_animated = px.choropleth(df.sort_values(by='year'),\n    locations =\"country\", \n    locationmode = 'country names',\n    color =\"suicides\/100k pop\", \n    hover_name =\"country\",  \n    color_continuous_scale = 'PuBu', #px.colors.sequential.Reds, \n    color_continuous_midpoint = 13,\n    scope =\"world\", \n    animation_frame =\"year\") \nworld_choropelth_animated.show()","753c8f41":"###  1.1.2   Join Datasets <a id=\"prep_join\"><\/a>\nVerify country names are consistent in **df** and **gps** dataframes.","0befd33f":"###  Mean Suicide Rates per Continent Over Time\nFollowing figures cover the Global and Continent suicide rates over time.","184b7487":"[go to top of section](#prep)     \n\n##  1.5  Data Overview   <a id=\"prep_over\"><\/a>\nThe **Suicide Rates Overview 1985 to 2016** dataset contains data for half the countries on Earth and does have data on some of the most populous countries are not included in the dataset.\n\nsource:  https:\/\/www.worldometers.info\/geography\/how-many-countries-are-there-in-the-world\/","6e430a03":"---\n#  1.  Data Preparation <a id=\"prep\"><\/a>\nDataset preparation requires loading, cleaning and understanding the data.","534ff272":" Join the datasets using the country names as key.","d4bb7a09":"###  1.2.1  Check for Null, Missing and '0' values <a id=\"prep_miss\"><\/a>","6c8f59d9":"**Plot Population and Country Count:**","5ab6831f":"**Drop 2016 rows:**","4827a235":"- **Globally**, the overall suicide trend has been sharply declining since 1995, even though the population has been increasing significantly in recent years\n- **Africa** saw a sharp increase in suicides in 2005-2006.  Suicide rates have been erratic in recent years.\n- **Asia** is seeing an uptick in suicides in recent years\n- **Australia**, **North America** and **South America** are seeing an uptick in suicides, however, rates are still much lower relative to the population growth\n-  **Central America** and **Europe** are both seeing an increase in population and a decrease in suicide rates","82c9779a":"-  **Europe** has the most countries in the data and is skewing the global suicide average.","2b97a45b":"---\n[go to top of document](#top)\n\n**Please upvote if you found this helpful :-)**\n\n###  END","769f5f69":"[go to top of section](#eda)  \n\n## 2.4  Suicide Trends and Age Group<a id=\"eda_age\"><\/a>\nPlot the suicide trends from 1985-2015 for the various age groups.","9853145e":"###  Normalization\nNormalization is a rescaling of the data from the original range so that all values are within a certain range, typically between 0 and 1. Normalized data is essential in machine learning. Correlation and models will not produce good results if the scales are not standardized.\n\nData in **df_corr** will be normalized and the **df** data frame will be updated with the encoded and normalized data.","a9429465":"**Plot BEFORE and AFTER profiles for 'HDI for year' and '2016 data':**","a7289f71":"**Set up ordered list for plotting:**\n<br>\nSort values for:\n- Continent Names\n- Continent Names + 'Global'\n- Age Groups","4fcbcdfd":"**forward fill 'HDI for year':**","1554dfd8":"- As noted above, **Age**, **generation** and **sex** are significant factors in determining suicide rates for both males and females.","ac5b55f7":"[go to top of section](#prep)     \n\n##  1.4  Data Attributes   <a id=\"prep_attr\"><\/a>\n\n| COLUMN | type | description |\n| :--- | :--- | :--- |\n| **country** | categorical | country name |\n| **year** | numerical | year of data |\n| **sex** | categorical |sex of suicide victim |\n| **age** | categorical |age range of suicide victim |\n| **suicides_no** | numerical | number of suicides |\n| **population** | numerical | population of country |\n| **suicides\/100k pop** | numerical | suicides per 100k of population |\n| **HDI for year** | numerical | Human Development Index (HDI) for that year |\n| **gdp_per_capita ($)** | numerical | Gross Domestic Product per person |\n| **generation** | categorical | people born between certain years |\n| **CapitalLatitude** | numerical | latitude (for maps) |\n| **CapitalLongitude** | numerical | longitude (for maps) |\n| **ContinentName** | categorical |continent |\n\n<br>   \n**Dataset contains information on suicides from 1985-2015 and is now ready for analysis.**","fd5dfa7b":"[go to top of section](#eda)  \n\n## 2.3  Suicide Trends and Population<a id=\"eda_pop\"><\/a>\n- Plot **population** and **mean suicide rates** for male and female per continent, \n- and plot the **population** and **suicide rates** for male and female **over time**.\n\n###  Mean Suicide Rates and Ratios per Continent\n\n\\begin{align*} \n\\mathsf{\\text{Suicide Rate Ratio} = \\frac{Male Suicide Rates}{Female Suicide Rates}}\n\\end{align*}","47c9fa7d":"<a id=\"top\"><\/a> \n### <center><font color='red'>SUICIDE HOTLINES - INTERNATIONAL<\/font><\/center><center>www.opencounseling.com\/suicide-hotlines<\/center>\n\n# <center>Suicides - Data Visualization and World Maps<\/center>\n\nThis notebook contains overview of datasets, data visualizations, correlations and maps that impacts the suicide rates in various countries.  Following datasets are utilized:\n\n*  **Suicide Rates Overview 1985 to 2016** dataset compares socio-economic information with suicide rates by year and country and contains suicide data of 101 countries spanning 32 years. \n*  **World capitals GPS** contains countries, continents and latitude\/longitude information and is combined with the above dataset to look at **suicides per continents** and to create a *Folium World* map.\n*  **World Countries** is a JSON file with country geographical shape information and is used to create the *Choropleth World* map.\n<br>\n\n### Table of Content\n1.  [Data Preparation](#prep)<br>\n1.1  [Data Collection](#prep_coll)<br>\n1.2  [Data Cleaning](#prep_clean)<br>\n1.3  [Final Check](#prep_check)<br>\n1.4  [Data Attributes  ](#prep_attr)<br>\n1.5  [Data Overview  ](#prep_limit)<br>\n\n\n2.  [Data Visualization (EDA)](#eda)<br>\n2.1  [Suicide Rates per Country](#eda_country)<br>\n2.2  [Suicide Rates per Continent](#eda_cont)<br>\n2.3  [Suicide Trends and Population](#eda_pop)<br>\n2.4  [Suicide Trends and Age Group](#eda_age)<br>\n2.5  [Suicide Trends and Human Development Index (HDI)](#eda_hdi)<br>\n2.6  [Suicide Trends and GDP](#eda_gdp)<br>\n\n\n3.  [Correlations](#corr)<br>\n3.1  [Encoding and Normalization](#corr_encode)<br>\n3.2  [Overall Correlation](#corr_over)<br>\n3.3  [Correlation - Male & Female](#corr_sex)<br>\n\n\n4.  [World Maps](#maps)<br>\n4.1  [Folium World Map](#maps_folium)<br>\n4.2  [Choropleth World Map](#maps_chor)<br>\n4.3  [Choropleth World Map - Animated](#maps_chorANI)<br>   \n\n<br>\n\n**LIMMITATION:**  Dataset is an excellent resource for data visualizations and creating maps, but contains only around half countries in the world, so by far is not complete.\n\n**Please upvote if you found this helpful :-)**","619512ea":"[go to top of section](#prep)     \n\n##  1.3  Final Check <a id=\"prep_check\"><\/a>\nThis is a final re-check for NULL and duplicate values in the dataset.","ec81037d":"[go to top of section](#corr)  \n\n## 3.3  Correlation - Male & Female<a id=\"corr_sex\"><\/a>","6f642e05":"- Global **suicides rates** is 15.17 per 100k of the population\n- males are **3.5 more likely** to commit suicide than females (22.96 vs 6.68)\n- **European countries**, such as Latvia, Hungary and Belarus, have significantly higher suicide rates","074af736":"[go to top of section](#maps)  \n\n## 4.3  Choropleth World Map - Animated<a id=\"maps_chorANI\"><\/a>\nAnimated choropleth map showing the **suicide rates** of the countries over **time**.","7d383e6e":"**GLOBAL:** Rate of suicides have been declining for both males and females, however, there has been a significant uptick in rates of females in age groups 55+ in recent years.\n\n- after a spike in **1995**, suicides rates globally have been on a steady decline for all age groups\n- there is some indication of an **uptick in suicides** from 2013 in older people\n- females in the **5-14 years** age group have a very shallow uptick in suicides for the past few decades\n- people within the **50-year span** of 25-75 yrs have a steady incidence of suicides\n- People that are **75+ years** have a significantly higher incidence of suicides, for both males and females\n<br><br>\n- **Africa** saw a significant increase in male suicide in 2005-2006, however there has been a steady decline in suicides for both sexes\n- **Asia** has had a steady decline in suicides, however, the trend for males over 75 yrs in increasing\n- **Australia** is seeing a significant increase in suicides in people 35-54 yrs old.  Females in age groups 5-14 yr and 55-74 yr were committing suicides at alarming rates in the mid-1990s.  There is an uptrend in suicides in recent years.\n- **Central America** overall trend is declining, however there is a significant increase in female 5-14 yr committing suicides in recent years\n- **Europe** is seeing an overall decline in suicides, but trend for females 55 and older is increasing\n- **North America** is seeing an uptick in males 35 yr and older committing suicides.  The general trend is increasing in recent years\n- **South America** has a rapidly declining suicide rate.  However, the trends are very volatile","0742953b":"**There are no nulls or duplicates in the dataset.**","82108496":"[go to top of document](#top)     \n\n---\n# 4.  World Maps<a id=\"maps\"><\/a>\nMaps are a great way to visually represent geographical data.  Following three world maps are presented:\n\n-  Folium World Map\n-  Choropleth World Map\n-  Choropleth World Map - Animated","940bfbf8":"## 2.1  Suicide Rates per Country <a id=\"eda_country\"><\/a>\nPlot the average suicide rates per country and compare with the global mean.","627ef697":"###  1.1.3  Drop un-needed columns <a id=\"prep_drop\"><\/a>","88c3e104":"###  1.1.1  Load Datasets <a id=\"prep_load\"><\/a>\nLoad datasets **suicide-rates-overview-1985-to-2016** and **world-capitals-gps**.","90fec7fe":"[go to top of document](#top)     \n\n---\n# 3.  Correlations<a id=\"corr\"><\/a>\nCorrelation is a statistical metric for measuring to what extent different variables are interdependent.  In the analysis, we will look at the overall correlation, as well as the correlations based on male\/female.\n\nIn order to perform correlation, we need to first take care of two very important processes:\n\n  *  Encoding categorical attributes with numerical values\n  *  Normalization of the data","746e0bce":"## 4.1  Folium World Map<a id=\"maps_folium\"><\/a>\n\nFolium map showing the **number of suicides** per countries in the dataset.","244a14e0":"[go to top of section](#eda)  \n\n## 2.6  Suicide Trends and Gross Domestic Product per Capita (GDPc)<a id=\"eda_gdp\"><\/a>\nPlot Gross Domestic Product per Capita (GDPc) for all continents over time.","7341dc65":"[go to top of section](#prep)  \n\n##  1.2  Data Cleaning <a id=\"prep_clean\"><\/a>\nCheck for null, missing and duplicate values and take corrective actions.\n\n1.2.1  [Check for Null, Missing and '0' values](#prep_miss)<br>\n1.2.2  [Data Clean:  'suicides_no' and 'suicides\/100k pop'](#prep_sui)<br>\n1.2.3  [Data Clean:  'HDI for year' and '2016' data](#prep_hdi)<br>","3b01e87a":"###  1.2.3  Data Clean:  'HDI for year' and '2016' data <a id=\"prep_hdi\"><\/a>\n**HDI for year:**  (forward fill)<br>\n`HDI for year` data is significantly missing, however, we also know that the Human Development Index (HDI) is a slow moving index and replacing empty values with the last HDI value will not significantly impact the analysis.\n\nNull values of `HDI for year` will be filled with the previous year's value.\n\n**2016 data:**  (drop)<br>\nData profile shows that the number of observations for 2016 are significantly less (~140) than for other years (>700).  2016 data will be dropped.","8a84dd80":"-  **Central American** countries have a dispropotionaly higher percentages of male commiting suicide than female.  Overall, males are more likely to commit suicide than women\n-  **Asian** countries have a significantly higher incidence of females commiting suicides than other countries","2357d1b5":"## 3.1  Encoding and Normalization<a id=\"corr_encode\"><\/a>\n### Encoding\nMachine learning algorithms cannot process categorical or text data unless they have been converted to numbers. Encoding maps categorical values to integer values, which are represented as a binary vector that are all zero values, except the index of the integer, which is set to 1.\n\nCategorical attributes will be manually encoded with numeric values.  The steps involved are:\n\n1.  rearrange column names\n2.  encode with numerical values","4b3c0196":"##  1.1  Data Collection <a id=\"prep_coll\"><\/a>\n\n1.1.1  [Load Datasets](#prep_load)<br>\n1.1.2  [Join Datasets](#prep_join)<br>\n1.1.3  [Drop un-needed columns](#prep_drop)<br>","147cb159":"**DATA OVERVIEW:**\n-  6 of the most populous countries are missing\n-  **China** and **India** account for almost 30% of the global population and are missing \n-  most of **African** countries are missing \n-  **Europe** has 43 out of 98 countries in the data and accounts for 38% of the population\n-  It is safe to assume that analysis will be skewed towards European countries","b55c3cc6":"`suicides_no`, `suicides\/100k pop` and `HDI for year` have missing values and will be corrected in the following sections.  There are no duplicate values.","150c65fe":"**Create Continent DataFrame**","23df9507":"[go to top of section](#corr)  \n\n## 3.2  Overall Correlation<a id=\"corr_over\"><\/a>","0a6121c4":"###  1.2.2  Data Clean:  'suicides_no' and 'suicides\/100k pop' <a id=\"prep_sui\"><\/a>\nRows with no values (\"null\" or equal to \"0\") will be dropped.","a7de29e8":"- **Age**, **generation** and **sex** are significant factors in determining suicide rates.","cd09066e":"[go to top of document](#top)     \n\n---\n<a id=\"eda\"><\/a>\n#  2.  Data Visualization (EDA) \nVarious plots are untilized to visualize the data.","dbf998cf":"[go to top of section](#eda)  \n\n## 2.5  Suicide Trends and Human Development Index (HDI)<a id=\"eda_hdi\"><\/a>\nPlot Human Development Index (HDI) for all continents over time.","5b14fd09":"###  Import Python Libraries","7918cf41":"[go to top of section](#eda)  \n\n## 2.2  Suicide Rates per Continents<a id=\"eda_cont\"><\/a>\nPlot the **population** and the **average suicide rates** for each continent.","b36e83fb":"- **Human Development Index (HDI):**  Overall HDI has increased and the suicide rate has steadily going down.  There is an inverse relationship between HDI and suicides, however, there is also a lag when HDI goes up and suicides goes down","807ed54e":"note:  to install\/import some packages (such as plotly), verify following in your Kaggle notebook's \"Setting\" (on right, under Data):\n1.  Environment is set to \"latest:\n2.  \"internet\" toggle is \"ON\"","3f631f0f":"- **Gross Domestic Product per Capita (GDPc):**  Overall GDP has increased and the suicide rate has steadily going down.  There is an inverse relationship between GDP and suicides","dea6246a":"Missing values for 'suicides_no' and 'suicides\/100k pop' were in corresponding rows - two birds, one stone :-)","7164087e":"[go to top of section](#maps) \n\n## 4.2  Choropleth World Map<a id=\"maps_chor\"><\/a>\nChoropleth map showing the **suicide rates** of the countries in the dataset."}}