{"cell_type":{"913d98fd":"code","b08d4a8d":"code","5abe0d23":"code","1c986262":"code","d83ef618":"code","3fb8ff1d":"code","f1cab54a":"code","920ea3b6":"code","b338160d":"code","7fe9bd09":"code","beb274c2":"code","f1158553":"code","d46329e4":"code","4501f97d":"code","a7b4b7b6":"code","5ea4e170":"code","52f2c667":"code","dc033bad":"code","e9445e0a":"code","60ee237f":"markdown","5d7fce57":"markdown","781db7bc":"markdown","c8f8dcc6":"markdown","ad8d20fa":"markdown","9d0ba5b6":"markdown","1d409318":"markdown","336ae355":"markdown","7d2c7b32":"markdown"},"source":{"913d98fd":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","b08d4a8d":"import warnings\nwarnings.filterwarnings(\"ignore\")","5abe0d23":"bat = pd.read_csv(\"..\/input\/cricbuzz-players-data\/bat.csv\")\nbowl = pd.read_csv(\"..\/input\/cricbuzz-players-data\/bowl.csv\")","1c986262":"match_type = 'ODI'\nt20_bat = bat[bat['Type'] == match_type]\nt20_bowl = bowl[bowl['Type'] == match_type]","d83ef618":"print(t20_bat['Team'].unique())\nprint(t20_bowl['Team'].unique())","3fb8ff1d":"point = {\"6s\": 2, \"50\": 8, \"100\": 16, \"200\": 32, \"Wkts\": 25, \"4W\": 8, \"5W\": 16, \"10W\": 32}","f1cab54a":"team1 = 'India'\nteam2 = 'Australia'\nbat_data = t20_bat[(t20_bat['Team'] == team1) | (t20_bat['Team'] == team2)]\nbowl_data = t20_bowl[(t20_bowl['Team'] == team1) | (t20_bowl['Team'] == team2)]","920ea3b6":"bat_data = bat_data[['Player', 'Team', 'Runs', 'BF', 'SR', '4s', '6s', '50', '100', '200']]\nbowl_data = bowl_data[['Player', 'Wkts', 'Econ', 'B', '5W', '10W']]","b338160d":"players = pd.merge(bat_data, bowl_data, how = 'outer', on = 'Player')\nplayers.head()","7fe9bd09":"players['Batting Points'] = players['Runs'] + players['4s'] + players['6s']*point['6s'] + players['50']*point['50'] + players['100']*point['100'] + players['200']*point['200']","beb274c2":"players['Bowling Points'] = players['Wkts']*point['Wkts'] + players['5W']*(point['4W'] + point['5W']) + players['10W']*point['10W']","f1158553":"for i in range(len(players)):\n    sr = players.iloc[i]['SR']\n    bf = players.iloc[i]['BF']\n    b = players.iloc[i]['B']\n    if sr < 50:\n        players.iloc[i]['Batting Points'] += (-6) * (bf \/ 100)\n    elif sr >= 50 and sr < 60:\n        players.iloc[i]['Batting Points'] += (-4) * (bf \/ 100)\n    elif sr >= 60 and sr <= 70:\n        players.iloc[i]['Batting Points'] += (-2) * (bf \/ 100)\n        \n    eco = players.iloc[i]['Econ']\n    if eco > 11:\n        players.iloc[i]['Bowling Points'] += (-6) * (b \/ 6)\n    elif eco <= 11 and eco > 10:\n        players.iloc[i]['Bowling Points'] += (-4) * (b \/ 6)\n    elif eco <= 10 and eco >= 9:\n        players.iloc[i]['Bowling Points'] += (-2) * (b \/ 6)\n    elif eco <= 6 and eco >= 5:\n        players.iloc[i]['Bowling Points'] += 2 * (b \/ 6)\n    elif eco < 5 and eco >= 4:\n        players.iloc[i]['Bowling Points'] += 4 * (b \/ 6)\n    elif eco < 4:\n        players.iloc[i]['Bowling Points'] += 6 * (b \/ 6)","d46329e4":"players['Total Points'] = players['Batting Points'] + players['Bowling Points']\nplayers.head()","4501f97d":"df = players[['Player', 'Team', 'Batting Points', 'Bowling Points', 'Total Points']]\ndf.head()","a7b4b7b6":"bat_rankings = df.sort_values(by = 'Batting Points', ascending = False).reset_index(drop = True)[['Player', 'Team', 'Batting Points']]\nbat_rankings.head(11)","5ea4e170":"bowl_rankings = df.sort_values(by = 'Bowling Points', ascending = False).reset_index(drop = True)[['Player', 'Team', 'Bowling Points']]\nbowl_rankings.head(11)","52f2c667":"net_rankings = df.sort_values(by = 'Total Points', ascending = False).reset_index(drop = True)[['Player', 'Team', 'Total Points']]\nnet_rankings.head(11)","dc033bad":"def make_my_dream11(match_type, team1, team2, batsman, bowlers):\n    bat_df = bat[bat['Type'] == match_type]\n    bowl_df = bowl[bowl['Type'] == match_type]\n\n    bat_data = bat_df[(bat_df['Team'] == team1) | (bat_df['Team'] == team2)]\n    bowl_data = bowl_df[(bowl_df['Team'] == team1) | (bowl_df['Team'] == team2)]\n\n    bat_data = bat_data[['Player', 'Team', 'Runs', 'BF', 'SR', '4s', '6s', '50', '100', '200']]\n    bowl_data = bowl_data[['Player', 'Wkts', 'Econ', 'B', '5W', '10W']]\n\n    players = pd.merge(bat_data, bowl_data, how = 'outer', on = 'Player')\n    players['Batting Points'] = players['Runs'] + players['4s'] + players['6s']*point['6s'] + players['50']*point['50'] + players['100']*point['100'] + players['200']*point['200']\n    players['Bowling Points'] = players['Wkts']*point['Wkts'] + players['5W']*(point['4W'] + point['5W']) + players['10W']*point['10W']\n    \n    for i in range(len(players)):\n        sr = players.iloc[i]['SR']\n        bf = players.iloc[i]['BF']\n        b = players.iloc[i]['B']\n        if sr < 50:\n            players.iloc[i]['Batting Points'] += (-6) * (bf \/ 100)\n        elif sr >= 50 and sr < 60:\n            players.iloc[i]['Batting Points'] += (-4) * (bf \/ 100)\n        elif sr >= 60 and sr <= 70:\n            players.iloc[i]['Batting Points'] += (-2) * (bf \/ 100)\n\n        eco = players.iloc[i]['Econ']\n        if eco > 11:\n            players.iloc[i]['Bowling Points'] += (-6) * (b \/ 6)\n        elif eco <= 11 and eco > 10:\n            players.iloc[i]['Bowling Points'] += (-4) * (b \/ 6)\n        elif eco <= 10 and eco >= 9:\n            players.iloc[i]['Bowling Points'] += (-2) * (b \/ 6)\n        elif eco <= 6 and eco >= 5:\n            players.iloc[i]['Bowling Points'] += 2 * (b \/ 6)\n        elif eco < 5 and eco >= 4:\n            players.iloc[i]['Bowling Points'] += 4 * (b \/ 6)\n        elif eco < 4:\n            players.iloc[i]['Bowling Points'] += 6 * (b \/ 6)\n\n    players['Total Points'] = players['Batting Points'] + players['Bowling Points']\n    df = players[['Player', 'Team', 'Batting Points', 'Bowling Points', 'Total Points']]\n\n    team = []\n\n    bat_rankings = df.sort_values(by = 'Batting Points', ascending = False)\n    # taking top 3 batsman on the basis of batting points\n    for i in range(batsman):\n        name = bat_rankings.iloc[i]['Player']\n        team.append(name)\n        df.drop(bat_rankings.loc[bat_rankings['Player'] == name].index, inplace = True)\n\n    bowl_rankings = df.sort_values(by = 'Bowling Points', ascending = False)\n    # taking top 3 bowlers on the basis of bowling points\n    for i in range(bowlers):\n        name = bowl_rankings.iloc[i]['Player']\n        team.append(name)\n        df.drop(bowl_rankings.loc[bowl_rankings['Player'] == name].index, inplace = True)\n\n    net_rankings = df.sort_values(by = 'Total Points', ascending = False)\n    # taking rest of the players on the basis of total points\n    for i in range(11 - batsman - bowlers):\n        name = net_rankings.iloc[i]['Player']\n        team.append(name)\n        df.drop(net_rankings.loc[net_rankings['Player'] == name].index, inplace = True)\n\n    return team","e9445e0a":"make_my_dream11('ODI', 'India', 'Australia', 3, 3)","60ee237f":"## Players Points Table","5d7fce57":"## INDIA VS AUSTRALIA","781db7bc":"### [Points Distribution](https:\/\/www.dream11.com\/games\/fantasy-cricket\/how-to-play)","c8f8dcc6":"## Rankings (by Total Points)","ad8d20fa":"## Bowling Terms\n### Average = No. of runs given per wicket (Runs \/ Wickets)\n### Economy Rate = No. of runs given per over (Runs \/ Bowls) * 6","9d0ba5b6":"## Rankings (by Batting Points)","1d409318":"# BUILDING MY DREAM 11 \ud83c\udfcf\u26be","336ae355":"## Batting Terms\n### Strike Rate = No. of runs scored per 100 balls (Runs \/ Balls Faced) * 100","7d2c7b32":"## Rankings (by Bowling Points)"}}