{"cell_type":{"a58a78e0":"code","60963764":"code","a0605b17":"code","88b0b69d":"code","1253c617":"code","783b2ebf":"code","04a26074":"code","8ded76a7":"code","78ffd5a8":"code","baff3458":"code","dbaac085":"code","115ee9e2":"code","7460bdee":"code","526e44f2":"code","03d16287":"code","75cf0560":"code","50949441":"code","5e980c45":"code","0d161cea":"code","79d38284":"code","19c20976":"code","0ab48789":"code","331ada9d":"code","097b9a10":"code","10a7db57":"code","2453f010":"code","78f0c45b":"code","e63852fa":"code","bfbc49f6":"code","ad4e9c58":"code","46e66a77":"code","42edd5cb":"code","7b6b0a8b":"code","63a53886":"code","b75aac09":"code","71a40835":"code","89e6a034":"code","71c67cde":"code","0bd3e6d6":"code","9c9fdce1":"code","4cb3e943":"code","4f05696d":"code","ef17be82":"code","ad47e344":"code","f18d9327":"code","38eb3248":"code","082b5c88":"code","376dbcbc":"code","fb689ba1":"code","54219b8a":"code","a1ca3bc3":"code","bf7e0acc":"code","9aa6db33":"code","521a6f91":"code","964bb31d":"code","bcf374c3":"code","e89534a4":"code","a4be0482":"code","456200a6":"code","f044ff1f":"code","147dddf9":"code","52f63495":"code","9b528bd9":"code","6403ec89":"code","ad5f12ac":"code","36c821b8":"code","122ea7e3":"code","6167fbd3":"code","532fa305":"code","987e00f1":"code","9129a06e":"code","ea962c62":"code","e56ef773":"code","df9e9a0b":"code","17bf3013":"code","a576734b":"code","91070267":"code","5169215b":"code","9691f76b":"code","d3f3bc26":"code","3f6bf3fa":"code","ae41c7f8":"code","b5b91d7f":"code","4d0e8b71":"code","9d6cefd0":"code","3e0a91e8":"code","b8e9e856":"code","86730933":"code","7c04e849":"code","651d4df3":"code","e03ba52a":"code","ee7b126d":"code","6e565aee":"code","39475009":"code","a8593fb5":"code","2f7acc51":"code","9d17d960":"code","c517c0c0":"code","740a7b50":"code","20a69514":"code","d90cfc14":"code","71f24a01":"code","8a445f9e":"code","0e916a9f":"code","16ed5958":"code","428fa5c4":"code","0fa7bfba":"code","f730522a":"code","6b7b8564":"code","20f2d10f":"code","ca2a19fd":"code","751a86c7":"code","9d5d2a93":"code","0195c9e6":"code","f22b1adc":"code","e01813ee":"code","357ac53f":"code","122e4949":"code","568c17c3":"code","c0024beb":"code","41b8c934":"code","38d0d9af":"code","7627b3b1":"code","7c5ca3ed":"code","c3518afe":"markdown","941f7826":"markdown","658dd1c5":"markdown","57be7111":"markdown","babd4196":"markdown","829047fd":"markdown","b0639b20":"markdown","de343c75":"markdown","f8615707":"markdown","8b01ea6e":"markdown","d759ac33":"markdown","80e03b75":"markdown","538190c8":"markdown","ff6bc9f1":"markdown","e14dae29":"markdown","66f83557":"markdown","958eab96":"markdown","fab40c0e":"markdown","da16ecaa":"markdown","d29ed738":"markdown","4d98179e":"markdown","7e431603":"markdown","0019ce69":"markdown","dd899b5d":"markdown","ab496924":"markdown","8525560a":"markdown","339b1bc4":"markdown","39cc8dd2":"markdown","273ad65c":"markdown","9515b09d":"markdown","a288ce17":"markdown","f7c96152":"markdown","a10aa5e8":"markdown","c250f44b":"markdown","2d6e52d0":"markdown","69e0904c":"markdown","68f20443":"markdown","dc02d402":"markdown","33d99a54":"markdown","7f15a63c":"markdown","43f341a5":"markdown","891293e4":"markdown","a1f16ed7":"markdown","f150c3c0":"markdown","edfda622":"markdown","a06af0c4":"markdown"},"source":{"a58a78e0":"#GENERAL\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nimport random\nimport time\n#PATH PROCESS\nimport os\nimport os.path\nfrom pathlib import Path\nimport glob\nfrom scipy.io import loadmat\nimport nibabel as nib\nimport csv\n#IMAGE PROCESS\nfrom PIL import Image\nfrom keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport cv2\nfrom keras.applications.vgg16 import preprocess_input, decode_predictions\nfrom keras.preprocessing import image\nfrom skimage.feature import hessian_matrix, hessian_matrix_eigvals\nfrom scipy.ndimage.filters import convolve\nfrom skimage import data, io, filters\nimport skimage\nfrom skimage.morphology import convex_hull_image, erosion\nfrom IPython import display\nfrom scipy.ndimage import gaussian_filter\nfrom mpl_toolkits.mplot3d.art3d import Poly3DCollection\nimport matplotlib.patches as patches\n#SCALER & TRANSFORMATION\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler\nfrom keras.utils.np_utils import to_categorical\nfrom sklearn.model_selection import train_test_split\nfrom keras import regularizers\nfrom sklearn.preprocessing import LabelEncoder\n#ACCURACY CONTROL\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report, roc_auc_score, roc_curve\nfrom sklearn.model_selection import GridSearchCV, cross_val_score\nfrom sklearn.metrics import mean_squared_error, r2_score\n#OPTIMIZER\nfrom keras.optimizers import RMSprop,Adam,Optimizer,Optimizer, SGD\n#MODEL LAYERS\nfrom tensorflow.keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D, BatchNormalization,MaxPooling2D,BatchNormalization,\\\n                        Permute, TimeDistributed, Bidirectional,GRU, SimpleRNN,\\\nLSTM, GlobalAveragePooling2D, SeparableConv2D, ZeroPadding2D, Convolution2D, ZeroPadding2D,Reshape, Conv2DTranspose,\\\nLeakyReLU, GaussianNoise, GlobalMaxPooling2D, ReLU, Input, Concatenate\nfrom keras import models\nfrom keras import layers\nimport tensorflow as tf\nfrom keras.applications import VGG16,VGG19,inception_v3\nfrom keras import backend as K\nfrom keras.utils import plot_model\nfrom keras.datasets import mnist\nimport keras\nfrom keras.models import Model\n#IGNORING WARNINGS\nfrom warnings import filterwarnings\nfilterwarnings(\"ignore\",category=DeprecationWarning)\nfilterwarnings(\"ignore\", category=FutureWarning) \nfilterwarnings(\"ignore\", category=UserWarning)","60963764":"Orbit_Period_Path = Path(\"..\/input\/jupiter-juno-mission-image-set-nasa\/JUPITER\/RDR_ORBIT\")","a0605b17":"PNG_Path = list(Orbit_Period_Path.glob(r\"*.png\"))","88b0b69d":"print(\"LEN TOTAL: \", len(PNG_Path))","1253c617":"PNG_Series = pd.Series(PNG_Path,name=\"PNG\").astype(str)","783b2ebf":"print(\"LEN SERIES: \", len(PNG_Series))","04a26074":"print(PNG_Series.head(-1))","8ded76a7":"print(PNG_Series[0])\nprint(\"---\"*20)\nprint(PNG_Series[50])\nprint(\"---\"*20)\nprint(PNG_Series[100])\nprint(\"---\"*20)\nprint(PNG_Series[1000])\nprint(\"---\"*20)\nprint(PNG_Series[2000])\nprint(\"---\"*20)\nprint(PNG_Series[6000])","78ffd5a8":"print(\"LEN PATH: \", len(PNG_Series[0]))","baff3458":"PNG_Series = sorted(PNG_Series)","dbaac085":"print(PNG_Series[0])\nprint(\"---\"*20)\nprint(PNG_Series[50])\nprint(\"---\"*20)\nprint(PNG_Series[100])\nprint(\"---\"*20)\nprint(PNG_Series[1000])\nprint(\"---\"*20)\nprint(PNG_Series[2000])\nprint(\"---\"*20)\nprint(PNG_Series[6000])","115ee9e2":"Main_Path_Dir,Doc_Type = os.path.splitext(PNG_Series[0])","7460bdee":"print(\"MAIN: \",Main_Path_Dir)\nprint(\"---\"*10)\nprint(\"TYPE: \",Doc_Type)","526e44f2":"# METHOD 1\nDirect_Path = Main_Path_Dir.split(\"JIR_IMG_RDR_\")\n\nprint(Direct_Path[0])\nprint(Direct_Path[1])","03d16287":"# METHOD 2\nSee_Split_Target = Main_Path_Dir[:-4]\n\nprint(See_Split_Target)","75cf0560":"Ex_Pathing = Main_Path_Dir.split(\"JIR_IMG_RDR_\")\n\nprint(Ex_Pathing[0])\nprint(Ex_Pathing[1])","50949441":"# METHOD 3\nSplitting_Target = \"..\/input\/jupiter-juno-mission-image-set-nasa\/JUPITER\/RDR_ORBIT\/JIR_IMG_RDR_\"\n\n_,Target_Type = Main_Path_Dir.split(Splitting_Target)","5e980c45":"print(\"TARGET: \",Target_Type)","0d161cea":"Main_Target,_ = Target_Type.split(\"_\")","79d38284":"print(\"TARGET: \",Main_Target)","19c20976":"print(\"DATE: \",Main_Target[:4])\nprint(\"PERIOD: \",Main_Target[4:7])\nprint(\"CLASS: \",Main_Target[7:9])\nprint(\"COUNT: \",Main_Target[9:])","0ab48789":"Pathing_List = []\nPeriod_List = []\nDate_List = []\nClass_List = []\nCount_List = []\n\nfor path_x,path_x_alternative in zip(PNG_Series,PNG_Series):\n    \n    Main_Path_Dir,Doc_Type = os.path.splitext(path_x)\n    Direct_Path,Target_Path = Main_Path_Dir.split(\"JIR_IMG_RDR_\")\n    Main_Target,_ = Target_Path.split(\"_\")\n    \n    Pathing_List.append(path_x_alternative)\n    Date_List.append(int(Main_Target[:4]))\n    Period_List.append(int(Main_Target[4:7]))\n    Class_List.append(Main_Target[7:9])\n    Count_List.append(int(Main_Target[9:]))","331ada9d":"print(\"LEN PATH: \",len(Pathing_List))\nprint(\"LEN DATE: \",len(Date_List))\nprint(\"LEN PERIOD: \",len(Period_List))\nprint(\"LEN CLASS: \",len(Class_List))\nprint(\"LEN COUNT: \",len(Count_List))","097b9a10":"# INDEX 0 \nprint(\"EXAMPLE PATH: \",Pathing_List[0])\nprint(\"EXAMPLE DATE: \",Date_List[0])\nprint(\"EXAMPLE PERIOD: \",Period_List[0])\nprint(\"EXAMPLE CLASS: \",Class_List[0])\nprint(\"EXAMPLE COUNT: \",Count_List[0])","10a7db57":"# INDEX 1\nprint(\"EXAMPLE PATH: \",Pathing_List[1])\nprint(\"EXAMPLE DATE: \",Date_List[1])\nprint(\"EXAMPLE PERIOD: \",Period_List[1])\nprint(\"EXAMPLE CLASS: \",Class_List[1])\nprint(\"EXAMPLE COUNT: \",Count_List[1])","2453f010":"# INDEX 100\nprint(\"EXAMPLE PATH: \",Pathing_List[100])\nprint(\"EXAMPLE DATE: \",Date_List[100])\nprint(\"EXAMPLE PERIOD: \",Period_List[100])\nprint(\"EXAMPLE CLASS: \",Class_List[100])\nprint(\"EXAMPLE COUNT: \",Count_List[100])","78f0c45b":"# INDEX 1000\nprint(\"EXAMPLE PATH: \",Pathing_List[1000])\nprint(\"EXAMPLE DATE: \",Date_List[1000])\nprint(\"EXAMPLE PERIOD: \",Period_List[1000])\nprint(\"EXAMPLE CLASS: \",Class_List[1000])\nprint(\"EXAMPLE COUNT: \",Count_List[1000])","e63852fa":"New_Path_Series = pd.Series(Pathing_List,name=\"PNG\").astype(str)\nDate_Series = pd.Series(Date_List,name=\"DATE\").astype(np.float32)\nPeriod_Series = pd.Series(Period_List,name=\"PERIOD\").astype(np.float32)\nClass_Series = pd.Series(Class_List,name=\"CLASS\").astype(np.str)\nCount_Series = pd.Series(Count_List,name=\"COUNT\").astype(np.float32)","bfbc49f6":"print(type(New_Path_Series))\nprint(type(Date_Series))\nprint(type(Period_Series))\nprint(type(Class_Series))\nprint(type(Count_Series))","ad4e9c58":"print(\"LEN PATH: \",len(New_Path_Series))\nprint(\"LEN DATE: \",len(Date_Series))\nprint(\"LEN PERIOD: \",len(Period_Series))\nprint(\"LEN CLASS: \",len(Class_Series))\nprint(\"LEN COUNT: \",len(Count_Series))","46e66a77":"print(New_Path_Series[0])\nprint(\"---\"*20)\nprint(Date_Series[0])\nprint(\"---\"*20)\nprint(Period_Series[0])\nprint(\"---\"*20)\nprint(Class_Series[0])\nprint(\"---\"*20)\nprint(Count_Series[0])","42edd5cb":"print(\"DATE TYPE: \\n\",Date_Series.unique())\nprint(\"---\"*20)\nprint(\"PERIOD TYPE: \\n\",Period_Series.unique())\nprint(\"---\"*20)\nprint(\"CLASS TYPE: \\n\",Class_Series.unique())\nprint(\"---\"*20)","7b6b0a8b":"Main_Data = pd.concat([New_Path_Series,Date_Series,Period_Series,Class_Series,Count_Series],axis=1)","63a53886":"print(Main_Data.isnull().sum())","b75aac09":"print(Main_Data.columns)","71a40835":"print(Main_Data.head(-1))","89e6a034":"Sorted_By_Period = Main_Data.sort_values(by=['PERIOD'])\nSorted_By_Count = Main_Data.sort_values(by=['COUNT'])\nSorted_By_Class = Main_Data.sort_values(by=['CLASS'])","71c67cde":"Sorted_By_Period = Sorted_By_Period.reset_index(drop=True)\nSorted_By_Count = Sorted_By_Count.reset_index(drop=True)\nSorted_By_Class = Sorted_By_Class.reset_index(drop=True)","0bd3e6d6":"print(Sorted_By_Period.head(-1))","9c9fdce1":"print(Sorted_By_Count.head(-1))","4cb3e943":"print(Sorted_By_Class.head(-1))","4f05696d":"figure = plt.figure(figsize=(10,10))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][0]),cv2.COLOR_BGR2RGB)\n\nplt.xlabel(Picking_Image.shape)\nplt.ylabel(Picking_Image.size)\nplt.title(f\"DATE: {Main_Data.DATE[0]} \/ PERIOD: {Main_Data.PERIOD[0]} \\n CLASS: {Main_Data.CLASS[0]} \/ COUNT: {Main_Data.COUNT[0]}\")\n\nplt.imshow(Picking_Image)","ef17be82":"figure = plt.figure(figsize=(10,10))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][10]),cv2.COLOR_BGR2RGB)\n\nplt.xlabel(Picking_Image.shape)\nplt.ylabel(Picking_Image.size)\nplt.title(f\"DATE: {Main_Data.DATE[10]} \/ PERIOD: {Main_Data.PERIOD[10]} \\n CLASS: {Main_Data.CLASS[10]} \/ COUNT: {Main_Data.COUNT[10]}\")\n\nplt.imshow(Picking_Image)","ad47e344":"figure = plt.figure(figsize=(10,10))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][30]),cv2.COLOR_BGR2RGB)\n\nplt.xlabel(Picking_Image.shape)\nplt.ylabel(Picking_Image.size)\nplt.title(f\"DATE: {Main_Data.DATE[10]} \/ PERIOD: {Main_Data.PERIOD[10]} \\n CLASS: {Main_Data.CLASS[10]} \/ COUNT: {Main_Data.COUNT[10]}\")\n\nplt.imshow(Picking_Image)","f18d9327":"figure = plt.figure(figsize=(10,10))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][40]),cv2.COLOR_BGR2RGB)\n\nplt.xlabel(Picking_Image.shape)\nplt.ylabel(Picking_Image.size)\nplt.title(f\"DATE: {Main_Data.DATE[40]} \/ PERIOD: {Main_Data.PERIOD[40]} \\n CLASS: {Main_Data.CLASS[40]} \/ COUNT: {Main_Data.COUNT[40]}\")\n\nplt.imshow(Picking_Image)","38eb3248":"figure = plt.figure(figsize=(10,10))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][100]),cv2.COLOR_BGR2RGB)\n\nplt.xlabel(Picking_Image.shape)\nplt.ylabel(Picking_Image.size)\nplt.title(f\"DATE: {Main_Data.DATE[100]} \/ PERIOD: {Main_Data.PERIOD[100]} \\n CLASS: {Main_Data.CLASS[100]} \/ COUNT: {Main_Data.COUNT[100]}\")\n\nplt.imshow(Picking_Image)","082b5c88":"figure = plt.figure(figsize=(10,10))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][200]),cv2.COLOR_BGR2RGB)\n\nplt.xlabel(Picking_Image.shape)\nplt.ylabel(Picking_Image.size)\nplt.title(f\"DATE: {Main_Data.DATE[200]} \/ PERIOD: {Main_Data.PERIOD[200]} \\n CLASS: {Main_Data.CLASS[200]} \/ COUNT: {Main_Data.COUNT[200]}\")\n\nplt.imshow(Picking_Image)","376dbcbc":"figure = plt.figure(figsize=(10,10))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][300]),cv2.COLOR_BGR2RGB)\n\nplt.xlabel(Picking_Image.shape)\nplt.ylabel(Picking_Image.size)\nplt.title(f\"DATE: {Main_Data.DATE[300]} \/ PERIOD: {Main_Data.PERIOD[300]} \\n CLASS: {Main_Data.CLASS[300]} \/ COUNT: {Main_Data.COUNT[300]}\")\n\nplt.imshow(Picking_Image)","fb689ba1":"figure = plt.figure(figsize=(10,10))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][1000]),cv2.COLOR_BGR2RGB)\n\nplt.xlabel(Picking_Image.shape)\nplt.ylabel(Picking_Image.size)\nplt.title(f\"DATE: {Main_Data.DATE[1000]} \/ PERIOD: {Main_Data.PERIOD[1000]} \\n CLASS: {Main_Data.CLASS[1000]} \/ COUNT: {Main_Data.COUNT[1000]}\")\n\nplt.imshow(Picking_Image)","54219b8a":"figure = plt.figure(figsize=(10,10))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][2000]),cv2.COLOR_BGR2RGB)\n\nplt.xlabel(Picking_Image.shape)\nplt.ylabel(Picking_Image.size)\nplt.title(f\"DATE: {Main_Data.DATE[2000]} \/ PERIOD: {Main_Data.PERIOD[2000]} \\n CLASS: {Main_Data.CLASS[2000]} \/ COUNT: {Main_Data.COUNT[2000]}\")\n\nplt.imshow(Picking_Image)","a1ca3bc3":"figure = plt.figure(figsize=(10,10))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][3000]),cv2.COLOR_BGR2RGB)\n\nplt.xlabel(Picking_Image.shape)\nplt.ylabel(Picking_Image.size)\nplt.title(f\"DATE: {Main_Data.DATE[3000]} \/ PERIOD: {Main_Data.PERIOD[3000]} \\n CLASS: {Main_Data.CLASS[3000]} \/ COUNT: {Main_Data.COUNT[3000]}\")\n\nplt.imshow(Picking_Image)","bf7e0acc":"figure = plt.figure(figsize=(10,10))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][8000]),cv2.COLOR_BGR2RGB)\n\nplt.xlabel(Picking_Image.shape)\nplt.ylabel(Picking_Image.size)\nplt.title(f\"DATE: {Main_Data.DATE[8000]} \/ PERIOD: {Main_Data.PERIOD[8000]} \\n CLASS: {Main_Data.CLASS[8000]} \/ COUNT: {Main_Data.COUNT[8000]}\")\n\nplt.imshow(Picking_Image)","9aa6db33":"figure = plt.figure(figsize=(20,20))\nsns.pairplot(Main_Data,vars=[\"DATE\",\"PERIOD\",\n                                        \"CLASS\",\"COUNT\"])\nplt.show()","521a6f91":"figure = plt.figure(figsize=(15,8))\nsns.scatterplot(x=\"PERIOD\",y=\"COUNT\",hue=\"CLASS\",style=\"CLASS\",\n               data=Main_Data)\nplt.show()","964bb31d":"figure = plt.figure(figsize=(15,8))\nsns.barplot(x=\"PERIOD\",y=\"COUNT\",\n               data=Main_Data,color=\"black\",hue=\"CLASS\")\nplt.title(\"CLASS\")\nplt.legend()\nplt.show()","bcf374c3":"figure = plt.figure(figsize=(15,8))\nsns.lineplot(x=\"PERIOD\",y=\"COUNT\",hue=\"CLASS\",style=\"CLASS\",data=Main_Data)\nplt.show()","e89534a4":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][0]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[0]} \/ PERIOD: {Main_Data.PERIOD[0]} \\n CLASS: {Main_Data.CLASS[0]} \/ COUNT: {Main_Data.COUNT[0]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Threshold_Image.shape)\naxis[1].set_ylabel(Threshold_Image.size)\naxis[1].set_title(f\"THRESHOLD: {round(np.mean(Threshold_Image))}\")\naxis[1].imshow(Threshold_Image)","a4be0482":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][10]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[10]} \/ PERIOD: {Main_Data.PERIOD[10]} \\n CLASS: {Main_Data.CLASS[10]} \/ COUNT: {Main_Data.COUNT[10]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Threshold_Image.shape)\naxis[1].set_ylabel(Threshold_Image.size)\naxis[1].set_title(f\"THRESHOLD: {round(np.mean(Threshold_Image))}\")\naxis[1].imshow(Threshold_Image)","456200a6":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][100]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[100]} \/ PERIOD: {Main_Data.PERIOD[100]} \\n CLASS: {Main_Data.CLASS[100]} \/ COUNT: {Main_Data.COUNT[100]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Threshold_Image.shape)\naxis[1].set_ylabel(Threshold_Image.size)\naxis[1].set_title(f\"THRESHOLD: {round(np.mean(Threshold_Image))}\")\naxis[1].imshow(Threshold_Image)","f044ff1f":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][300]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[300]} \/ PERIOD: {Main_Data.PERIOD[300]} \\n CLASS: {Main_Data.CLASS[300]} \/ COUNT: {Main_Data.COUNT[300]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Threshold_Image.shape)\naxis[1].set_ylabel(Threshold_Image.size)\naxis[1].set_title(f\"THRESHOLD: {round(np.mean(Threshold_Image))}\")\naxis[1].imshow(Threshold_Image)","147dddf9":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][1100]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[1100]} \/ PERIOD: {Main_Data.PERIOD[1100]} \\n CLASS: {Main_Data.CLASS[1100]} \/ COUNT: {Main_Data.COUNT[1100]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Threshold_Image.shape)\naxis[1].set_ylabel(Threshold_Image.size)\naxis[1].set_title(f\"THRESHOLD: {round(np.mean(Threshold_Image))}\")\naxis[1].imshow(Threshold_Image)","52f63495":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][5000]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[5000]} \/ PERIOD: {Main_Data.PERIOD[5000]} \\n CLASS: {Main_Data.CLASS[5000]} \/ COUNT: {Main_Data.COUNT[5000]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Threshold_Image.shape)\naxis[1].set_ylabel(Threshold_Image.size)\naxis[1].set_title(f\"THRESHOLD: {round(np.mean(Threshold_Image))}\")\naxis[1].imshow(Threshold_Image)","9b528bd9":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][8000]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[8000]} \/ PERIOD: {Main_Data.PERIOD[8000]} \\n CLASS: {Main_Data.CLASS[8000]} \/ COUNT: {Main_Data.COUNT[8000]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Threshold_Image.shape)\naxis[1].set_ylabel(Threshold_Image.size)\naxis[1].set_title(f\"THRESHOLD: {round(np.mean(Threshold_Image))}\")\naxis[1].imshow(Threshold_Image)","6403ec89":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][100]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\nBlend_IMAGE = Picking_Image.copy()\nBlend_IMAGE[Threshold_Image[:,:,0] == 255] = [255,0,0]\n\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[100]} \/ PERIOD: {Main_Data.PERIOD[100]} \\n CLASS: {Main_Data.CLASS[100]} \/ COUNT: {Main_Data.COUNT[100]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Blend_IMAGE.shape)\naxis[1].set_ylabel(Blend_IMAGE.size)\naxis[1].set_title(f\"BLEND: {round(np.mean(Blend_IMAGE))}\")\naxis[1].imshow(Blend_IMAGE)","ad5f12ac":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][400]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\nBlend_IMAGE = Picking_Image.copy()\nBlend_IMAGE[Threshold_Image[:,:,0] == 255] = [255,0,0]\n\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[400]} \/ PERIOD: {Main_Data.PERIOD[400]} \\n CLASS: {Main_Data.CLASS[400]} \/ COUNT: {Main_Data.COUNT[400]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Blend_IMAGE.shape)\naxis[1].set_ylabel(Blend_IMAGE.size)\naxis[1].set_title(f\"BLEND: {round(np.mean(Blend_IMAGE))}\")\naxis[1].imshow(Blend_IMAGE)","36c821b8":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][220]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\nBlend_IMAGE = Picking_Image.copy()\nBlend_IMAGE[Threshold_Image[:,:,0] == 255] = [255,0,0]\n\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[220]} \/ PERIOD: {Main_Data.PERIOD[220]} \\n CLASS: {Main_Data.CLASS[220]} \/ COUNT: {Main_Data.COUNT[220]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Blend_IMAGE.shape)\naxis[1].set_ylabel(Blend_IMAGE.size)\naxis[1].set_title(f\"BLEND: {round(np.mean(Blend_IMAGE))}\")\naxis[1].imshow(Blend_IMAGE)","122ea7e3":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][1200]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\nBlend_IMAGE = Picking_Image.copy()\nBlend_IMAGE[Threshold_Image[:,:,0] == 255] = [255,0,0]\n\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[1200]} \/ PERIOD: {Main_Data.PERIOD[1200]} \\n CLASS: {Main_Data.CLASS[1200]} \/ COUNT: {Main_Data.COUNT[1200]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Blend_IMAGE.shape)\naxis[1].set_ylabel(Blend_IMAGE.size)\naxis[1].set_title(f\"BLEND: {round(np.mean(Blend_IMAGE))}\")\naxis[1].imshow(Blend_IMAGE)","6167fbd3":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][100]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\nBlend_IMAGE = Picking_Image.copy()\nBlend_IMAGE[Threshold_Image[:,:,0] == 0] = [0,0,255] # DARK SIDE\nBlend_IMAGE[Threshold_Image[:,:,0] == 255] = [255,0,0] # CLOUD SURFACE\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[100]} \/ PERIOD: {Main_Data.PERIOD[100]} \\n CLASS: {Main_Data.CLASS[100]} \/ COUNT: {Main_Data.COUNT[100]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Blend_IMAGE.shape)\naxis[1].set_ylabel(Blend_IMAGE.size)\naxis[1].set_title(f\"BLEND: {round(np.mean(Blend_IMAGE))}\")\naxis[1].imshow(Blend_IMAGE)","532fa305":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][220]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\nBlend_IMAGE = Picking_Image.copy()\nBlend_IMAGE[Threshold_Image[:,:,0] == 0] = [0,0,255] # DARK SIDE\nBlend_IMAGE[Threshold_Image[:,:,0] == 255] = [255,0,0] # CLOUD SURFACE\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[220]} \/ PERIOD: {Main_Data.PERIOD[220]} \\n CLASS: {Main_Data.CLASS[220]} \/ COUNT: {Main_Data.COUNT[220]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Blend_IMAGE[:,:,0].shape)\naxis[1].set_ylabel(Blend_IMAGE[:,:,0].size)\naxis[1].set_title(f\"BLEND: {round(np.mean(Blend_IMAGE[:,:,0]))}\")\naxis[1].imshow(Blend_IMAGE[:,:,0],cmap=\"hot\")","987e00f1":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][1200]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\nBlend_IMAGE = Picking_Image.copy()\nBlend_IMAGE[Threshold_Image[:,:,0] == 0] = [0,0,255] # DARK SIDE\nBlend_IMAGE[Threshold_Image[:,:,0] == 255] = [255,0,0] # CLOUD SURFACE\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[1200]} \/ PERIOD: {Main_Data.PERIOD[1200]} \\n CLASS: {Main_Data.CLASS[1200]} \/ COUNT: {Main_Data.COUNT[1200]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Blend_IMAGE[:,:,0].shape)\naxis[1].set_ylabel(Blend_IMAGE[:,:,0].size)\naxis[1].set_title(f\"BLEND: {round(np.mean(Blend_IMAGE[:,:,0]))}\")\naxis[1].imshow(Blend_IMAGE[:,:,0],cmap=\"hot\")","9129a06e":"# DARK AROUND 3-DIM\n\nfigure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][1330]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\nBlend_IMAGE = Picking_Image.copy()\nBlend_IMAGE[Threshold_Image[:,:,0] == 0] = [0,0,255] # DARK SIDE\nBlend_IMAGE[Threshold_Image[:,:,0] == 255] = [255,0,0] # CLOUD SURFACE\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[1330]} \/ PERIOD: {Main_Data.PERIOD[1330]} \\n CLASS: {Main_Data.CLASS[1330]} \/ COUNT: {Main_Data.COUNT[1330]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Blend_IMAGE.shape)\naxis[1].set_ylabel(Blend_IMAGE.size)\naxis[1].set_title(f\"BLEND: {round(np.mean(Blend_IMAGE))}\")\naxis[1].imshow(Blend_IMAGE)","ea962c62":"# DARK AROUND 2-DIM\n\nfigure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][1330]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\nBlend_IMAGE = Picking_Image.copy()\nBlend_IMAGE[Threshold_Image[:,:,0] == 0] = [0,0,255] # DARK SIDE\nBlend_IMAGE[Threshold_Image[:,:,0] == 255] = [255,0,0] # CLOUD SURFACE\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[1330]} \/ PERIOD: {Main_Data.PERIOD[1330]} \\n CLASS: {Main_Data.CLASS[1330]} \/ COUNT: {Main_Data.COUNT[1330]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Blend_IMAGE[:,:,0].shape)\naxis[1].set_ylabel(Blend_IMAGE[:,:,0].size)\naxis[1].set_title(f\"BLEND: {round(np.mean(Blend_IMAGE[:,:,0]))}\")\naxis[1].imshow(Blend_IMAGE[:,:,0],cmap=\"hot\")","e56ef773":"# DARK AROUND 2-DIM\n\nfigure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][0]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\nBlend_IMAGE = Picking_Image.copy()\nBlend_IMAGE[Threshold_Image[:,:,0] == 0] = [0,0,255] # DARK SIDE\nBlend_IMAGE[Threshold_Image[:,:,0] == 255] = [255,0,0] # CLOUD SURFACE\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[0]} \/ PERIOD: {Main_Data.PERIOD[0]} \\n CLASS: {Main_Data.CLASS[0]} \/ COUNT: {Main_Data.COUNT[0]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Blend_IMAGE[:,:,0].shape)\naxis[1].set_ylabel(Blend_IMAGE[:,:,0].size)\naxis[1].set_title(f\"BLEND: {round(np.mean(Blend_IMAGE[:,:,0]))}\")\naxis[1].imshow(Blend_IMAGE[:,:,0],cmap=\"hot\")","df9e9a0b":"# DARK AROUND 2-DIM\n\nfigure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][1380]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\nBlend_IMAGE = Picking_Image.copy()\nBlend_IMAGE[Threshold_Image[:,:,0] == 0] = [0,0,255] # DARK SIDE\nBlend_IMAGE[Threshold_Image[:,:,0] == 255] = [255,0,0] # CLOUD SURFACE\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[1380]} \/ PERIOD: {Main_Data.PERIOD[1380]} \\n CLASS: {Main_Data.CLASS[1380]} \/ COUNT: {Main_Data.COUNT[1380]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Blend_IMAGE[:,:,0].shape)\naxis[1].set_ylabel(Blend_IMAGE[:,:,0].size)\naxis[1].set_title(f\"BLEND: {round(np.mean(Blend_IMAGE[:,:,0]))}\")\naxis[1].imshow(Blend_IMAGE[:,:,0],cmap=\"hot\")","17bf3013":"# DARK AROUND 2-DIM\n\nfigure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][1390]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\nBlend_IMAGE = Picking_Image.copy()\nBlend_IMAGE[Threshold_Image[:,:,0] == 0] = [0,0,255] # DARK SIDE\nBlend_IMAGE[Threshold_Image[:,:,0] == 255] = [255,0,0] # CLOUD SURFACE\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[1390]} \/ PERIOD: {Main_Data.PERIOD[1390]} \\n CLASS: {Main_Data.CLASS[1390]} \/ COUNT: {Main_Data.COUNT[1390]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Blend_IMAGE[:,:,0].shape)\naxis[1].set_ylabel(Blend_IMAGE[:,:,0].size)\naxis[1].set_title(f\"BLEND: {round(np.mean(Blend_IMAGE[:,:,0]))}\")\naxis[1].imshow(Blend_IMAGE[:,:,0],cmap=\"hot\")","a576734b":"# DARK AROUND 2-DIM\n\nfigure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][1530]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\nBlend_IMAGE = Picking_Image.copy()\nBlend_IMAGE[Threshold_Image[:,:,0] == 0] = [0,0,255] # DARK SIDE\nBlend_IMAGE[Threshold_Image[:,:,0] == 255] = [255,0,0] # CLOUD SURFACE\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[1530]} \/ PERIOD: {Main_Data.PERIOD[1530]} \\n CLASS: {Main_Data.CLASS[1530]} \/ COUNT: {Main_Data.COUNT[1530]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Blend_IMAGE[:,:,0].shape)\naxis[1].set_ylabel(Blend_IMAGE[:,:,0].size)\naxis[1].set_title(f\"BLEND: {round(np.mean(Blend_IMAGE[:,:,0]))}\")\naxis[1].imshow(Blend_IMAGE[:,:,0],cmap=\"hot\")","91070267":"figure,axis = plt.subplots(5,5,figsize=(15,15))\n\nfor indexing,operations in enumerate(axis.flat):\n    Picking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][indexing*2]),cv2.COLOR_BGR2RGB)\n    _,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\n    Blend_IMAGE = Picking_Image.copy()\n    Blend_IMAGE[Threshold_Image[:,:,0] == 0] = [0,0,255] # DARK SIDE\n    Blend_IMAGE[Threshold_Image[:,:,0] == 255] = [255,0,0] # CLOUD SURFACE\n    \n    operations.set_xlabel(Blend_IMAGE[:,:,0].shape)\n    operations.set_ylabel(Blend_IMAGE[:,:,0].size)\n    operations.set_title(f\"THRESHOLD MEAN: {round(np.mean(Blend_IMAGE[:,:,0]))}\")\n    operations.imshow(Blend_IMAGE[:,:,0],cmap=\"hot\")","5169215b":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][100]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\nBlend_IMAGE = Picking_Image.copy()\nBlend_IMAGE[Threshold_Image[:,:,0] == 0] = [0,0,255] # DARK SIDE\nBlend_IMAGE[Threshold_Image[:,:,0] == 255] = [255,0,0] # CLOUD SURFACE\n\nConcat_IMG = cv2.addWeighted(Picking_Image,0.8,Blend_IMAGE,0.4,0.5)\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[100]} \/ PERIOD: {Main_Data.PERIOD[100]} \\n CLASS: {Main_Data.CLASS[100]} \/ COUNT: {Main_Data.COUNT[100]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Concat_IMG.shape)\naxis[1].set_ylabel(Concat_IMG.size)\naxis[1].set_title(\"CONCAT\")\naxis[1].imshow(Concat_IMG)","9691f76b":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][170]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\nBlend_IMAGE = Picking_Image.copy()\nBlend_IMAGE[Threshold_Image[:,:,0] == 0] = [0,0,255] # DARK SIDE\nBlend_IMAGE[Threshold_Image[:,:,0] == 255] = [255,0,0] # CLOUD SURFACE\n\nConcat_IMG = cv2.addWeighted(Picking_Image,0.8,Blend_IMAGE,0.4,0.5)\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[170]} \/ PERIOD: {Main_Data.PERIOD[170]} \\n CLASS: {Main_Data.CLASS[170]} \/ COUNT: {Main_Data.COUNT[170]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Concat_IMG.shape)\naxis[1].set_ylabel(Concat_IMG.size)\naxis[1].set_title(\"CONCAT\")\naxis[1].imshow(Concat_IMG)","d3f3bc26":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][250]),cv2.COLOR_BGR2RGB)\n_,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\nBlend_IMAGE = Picking_Image.copy()\nBlend_IMAGE[Threshold_Image[:,:,0] == 0] = [0,0,255] # DARK SIDE\nBlend_IMAGE[Threshold_Image[:,:,0] == 255] = [255,0,0] # CLOUD SURFACE\n\nConcat_IMG = cv2.addWeighted(Picking_Image,0.8,Blend_IMAGE,0.4,0.5)\n\naxis[0].set_xlabel(Picking_Image.shape)\naxis[0].set_ylabel(Picking_Image.size)\naxis[0].set_title(f\"DATE: {Main_Data.DATE[250]} \/ PERIOD: {Main_Data.PERIOD[250]} \\n CLASS: {Main_Data.CLASS[250]} \/ COUNT: {Main_Data.COUNT[250]}\")\naxis[0].imshow(Picking_Image)\n\naxis[1].set_xlabel(Concat_IMG[:,:,0].shape)\naxis[1].set_ylabel(Concat_IMG[:,:,0].size)\naxis[1].set_title(\"CONCAT\")\naxis[1].imshow(Concat_IMG[:,:,0])","3f6bf3fa":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][1390]),cv2.COLOR_BGR2GRAY)\nHessian_Image = hessian_matrix(Picking_Image,sigma=1.3,order=\"rc\")\n\nMax_Spc_Image,Min_Spc_Image = hessian_matrix_eigvals(Hessian_Image)\n\naxis[0].set_xlabel(Max_Spc_Image.shape)\naxis[0].set_ylabel(Max_Spc_Image.size)\naxis[0].set_title(\"MAX\")\naxis[0].imshow(Max_Spc_Image)\n\naxis[1].set_xlabel(Min_Spc_Image.shape)\naxis[1].set_ylabel(Min_Spc_Image.size)\naxis[1].set_title(\"MIN\")\naxis[1].imshow(Min_Spc_Image)","ae41c7f8":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][100]),cv2.COLOR_BGR2GRAY)\nHessian_Image = hessian_matrix(Picking_Image,sigma=1.3,order=\"rc\")\n\nMax_Spc_Image,Min_Spc_Image = hessian_matrix_eigvals(Hessian_Image)\n\naxis[0].set_xlabel(Max_Spc_Image.shape)\naxis[0].set_ylabel(Max_Spc_Image.size)\naxis[0].set_title(\"MAX\")\naxis[0].imshow(Max_Spc_Image)\n\naxis[1].set_xlabel(Min_Spc_Image.shape)\naxis[1].set_ylabel(Min_Spc_Image.size)\naxis[1].set_title(\"MIN\")\naxis[1].imshow(Min_Spc_Image)","b5b91d7f":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][520]),cv2.COLOR_BGR2GRAY)\nHessian_Image = hessian_matrix(Picking_Image,sigma=1.3,order=\"rc\")\n\nMax_Spc_Image,Min_Spc_Image = hessian_matrix_eigvals(Hessian_Image)\n\naxis[0].set_xlabel(Max_Spc_Image.shape)\naxis[0].set_ylabel(Max_Spc_Image.size)\naxis[0].set_title(\"MAX\")\naxis[0].imshow(Max_Spc_Image)\n\naxis[1].set_xlabel(Min_Spc_Image.shape)\naxis[1].set_ylabel(Min_Spc_Image.size)\naxis[1].set_title(\"MIN\")\naxis[1].imshow(Min_Spc_Image)","4d0e8b71":"figure,axis = plt.subplots(1,3,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][520]),cv2.COLOR_BGR2GRAY)\nHessian_Image = hessian_matrix(Picking_Image,sigma=1.3,order=\"rc\")\n\nMax_Spc_Image,Min_Spc_Image = hessian_matrix_eigvals(Hessian_Image)\n\nConcat_IMG = cv2.addWeighted(Max_Spc_Image,0.8,Min_Spc_Image,0.4,0.5)\n\naxis[0].set_xlabel(Max_Spc_Image.shape)\naxis[0].set_ylabel(Max_Spc_Image.size)\naxis[0].set_title(\"MAX\")\naxis[0].imshow(Max_Spc_Image)\n\naxis[1].set_xlabel(Min_Spc_Image.shape)\naxis[1].set_ylabel(Min_Spc_Image.size)\naxis[1].set_title(\"MIN\")\naxis[1].imshow(Min_Spc_Image)\n\naxis[2].set_xlabel(Concat_IMG.shape)\naxis[2].set_ylabel(Concat_IMG.size)\naxis[2].set_title(\"CONCAT\")\naxis[2].imshow(Concat_IMG)","9d6cefd0":"figure,axis = plt.subplots(1,3,figsize=(15,15))\n\nPicking_Image = cv2.cvtColor(cv2.imread(Main_Data[\"PNG\"][100]),cv2.COLOR_BGR2GRAY)\nHessian_Image = hessian_matrix(Picking_Image,sigma=1.3,order=\"rc\")\n\nMax_Spc_Image,Min_Spc_Image = hessian_matrix_eigvals(Hessian_Image)\n\nConcat_IMG = cv2.addWeighted(Max_Spc_Image,0.8,Min_Spc_Image,0.4,0.5)\n\naxis[0].set_xlabel(Max_Spc_Image.shape)\naxis[0].set_ylabel(Max_Spc_Image.size)\naxis[0].set_title(\"MAX\")\naxis[0].imshow(Max_Spc_Image)\n\naxis[1].set_xlabel(Min_Spc_Image.shape)\naxis[1].set_ylabel(Min_Spc_Image.size)\naxis[1].set_title(\"MIN\")\naxis[1].imshow(Min_Spc_Image)\n\naxis[2].set_xlabel(Concat_IMG.shape)\naxis[2].set_ylabel(Concat_IMG.size)\naxis[2].set_title(\"CONCAT\")\naxis[2].imshow(Concat_IMG)","3e0a91e8":"Train_Set,Test_Set = train_test_split(Main_Data,train_size=0.8,shuffle=True,random_state=42)","b8e9e856":"print(Train_Set.shape)\nprint(Test_Set.shape)","86730933":"Train_IMG_Generator = ImageDataGenerator(rescale=1.\/255,\n                                        rotation_range=0.2,\n                                        shear_range=0.1,\n                                        horizontal_flip=True,\n                                        width_shift_range=0.1,\n                                        height_shift_range=0.1,\n                                        validation_split=0.1)","7c04e849":"Test_IMG_Generator = ImageDataGenerator(rescale=1.\/255)","651d4df3":"Example_Image = Train_Set[\"PNG\"][5]\nLoad_Image = image.load_img(Example_Image,target_size=(80,80))\nArray_Image = image.img_to_array(Load_Image)\nArray_Image = Array_Image.reshape((1,)+Array_Image.shape)\n\ni = 0\n\nfor batch in Train_IMG_Generator.flow(Array_Image,batch_size=32):\n    plt.figure(i)\n    Image = plt.imshow(image.img_to_array(batch[0]))\n    i += 1\n    if i % 6 == 0:\n        break\nplt.show()","e03ba52a":"Train_IMG_Set = Train_IMG_Generator.flow_from_dataframe(dataframe=Train_Set,\n                                                       x_col=\"PNG\",\n                                                       y_col=\"CLASS\",\n                                                       color_mode=\"rgb\",\n                                                       class_mode=\"categorical\",\n                                                       subset=\"training\")","ee7b126d":"Validation_IMG_Set = Train_IMG_Generator.flow_from_dataframe(dataframe=Train_Set,\n                                                       x_col=\"PNG\",\n                                                       y_col=\"CLASS\",\n                                                       color_mode=\"rgb\",\n                                                       class_mode=\"categorical\",\n                                                       subset=\"validation\")","6e565aee":"Test_IMG_Set = Test_IMG_Generator.flow_from_dataframe(dataframe=Test_Set,\n                                                       x_col=\"PNG\",\n                                                       y_col=\"CLASS\",\n                                                       color_mode=\"rgb\",\n                                                       class_mode=\"categorical\",\n                                                       shuffle=False)","39475009":"print(\"TRAIN: \")\nprint(Train_IMG_Set.class_indices)\nprint(Train_IMG_Set.classes[0:5])\nprint(Train_IMG_Set.image_shape)\nprint(\"---\"*20)\nprint(\"VALIDATION: \")\nprint(Validation_IMG_Set.class_indices)\nprint(Validation_IMG_Set.classes[0:5])\nprint(Validation_IMG_Set.image_shape)\nprint(\"---\"*20)\nprint(\"TEST: \")\nprint(Test_IMG_Set.class_indices)\nprint(Test_IMG_Set.classes[0:5])\nprint(Test_IMG_Set.image_shape)","a8593fb5":"Model = Sequential()\n\nModel.add(SeparableConv2D(32,(3,3),activation=\"relu\",\n                 input_shape=(256,256,3)))\nModel.add(BatchNormalization())\nModel.add(MaxPooling2D((2,2)))\n\n#\nModel.add(SeparableConv2D(64,(3,3),\n                 activation=\"relu\",padding=\"same\"))\nModel.add(Dropout(0.3))\nModel.add(MaxPooling2D((2,2)))\n\n#\nModel.add(SeparableConv2D(128,(3,3),\n                 activation=\"relu\",padding=\"same\"))\nModel.add(Dropout(0.3))\nModel.add(MaxPooling2D((2,2)))\n\n#\nModel.add(SeparableConv2D(256,(3,3),\n                 activation=\"relu\",padding=\"same\"))\nModel.add(Dropout(0.3))\nModel.add(MaxPooling2D((2,2)))\n\n#\nModel.add(Flatten())\nModel.add(Dense(512,activation=\"relu\"))\nModel.add(Dropout(0.5))\nModel.add(Dense(3,activation=\"softmax\"))","2f7acc51":"Call_Back = tf.keras.callbacks.EarlyStopping(monitor=\"loss\",patience=4,mode=\"min\")\nReduce_Model = tf.keras.callbacks.ReduceLROnPlateau(monitor=\"val_accuracy\",\n                                                   factor=0.1,\n                                                   patience=5)","9d17d960":"Model.compile(optimizer=\"adam\",loss=\"categorical_crossentropy\",metrics=[\"accuracy\"])","c517c0c0":"CNN_Model = Model.fit(Train_IMG_Set,\n                      validation_data=Validation_IMG_Set,\n                      callbacks=[Call_Back,Reduce_Model],\n                      epochs=50)","740a7b50":"Grap_Data = pd.DataFrame(CNN_Model.history)\nGrap_Data.plot()","20a69514":"plt.plot(CNN_Model.history[\"accuracy\"])\nplt.plot(CNN_Model.history[\"val_accuracy\"])\nplt.ylabel(\"ACCURACY\")\nplt.legend()\nplt.show()","d90cfc14":"plt.plot(CNN_Model.history[\"loss\"])\nplt.plot(CNN_Model.history[\"val_loss\"])\nplt.ylabel(\"LOSS\")\nplt.legend()\nplt.show()","71f24a01":"Model_Results = Model.evaluate(Test_IMG_Set)\nprint(\"LOSS:  \" + \"%.4f\" % Model_Results[0])\nprint(\"ACCURACY:  \" + \"%.2f\" % Model_Results[1])","8a445f9e":"Model_Test_Prediction = Model.predict(Test_IMG_Set)\nModel_Test_Prediction = Model_Test_Prediction.argmax(axis=-1)","0e916a9f":"print(Model_Test_Prediction)","16ed5958":"fig, axes = plt.subplots(nrows=5,\n                         ncols=5,\n                         figsize=(20, 20),\n                        subplot_kw={'xticks': [], 'yticks': []})\n\nfor i, ax in enumerate(axes.flat):\n    ax.imshow(plt.imread(Test_Set[\"PNG\"].iloc[i]))\n    ax.set_title(f\"PREDICTION:{Model_Test_Prediction[i]}\")\n    ax.set_xlabel(Test_Set[\"CLASS\"].iloc[i])\nplt.tight_layout()\nplt.show()","428fa5c4":"X_Mask = []\nX_New_IMG = []\nfor image_x in PNG_Series[:2000]:\n    \n    Picking_Image = cv2.cvtColor(cv2.imread(image_x),cv2.COLOR_BGR2RGB)\n    \n    _,Threshold_Image = cv2.threshold(Picking_Image,55,255,cv2.THRESH_BINARY)\n\n    Blend_IMAGE = Picking_Image.copy()\n    Blend_IMAGE[Threshold_Image[:,:,0] == 0] = [0,0,255] # DARK SIDE\n    Blend_IMAGE[Threshold_Image[:,:,0] == 255] = [255,0,0] # CLOUD SURFACE\n    \n    Concat_IMG = cv2.addWeighted(Picking_Image,0.8,Blend_IMAGE,0.4,0.5)\n    \n    Reduced_IMG = Picking_Image \/ 255.\n    Reduced_Concat = Concat_IMG \/ 255.\n    \n    X_Mask.append(Reduced_IMG)\n    X_New_IMG.append(Reduced_Concat)","0fa7bfba":"print(np.shape(np.array(X_Mask)))\nprint(np.shape(np.array(X_New_IMG)))","f730522a":"X_Mask = np.array(X_Mask,dtype=\"float32\")\nX_New_IMG = np.array(X_New_IMG,dtype=\"float32\")","6b7b8564":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\naxis[0].imshow(X_New_IMG[0])\naxis[0].axis(\"off\")\naxis[1].imshow(X_Mask[0])\naxis[1].axis(\"off\")","20f2d10f":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\naxis[0].imshow(X_New_IMG[110])\naxis[0].axis(\"off\")\naxis[1].imshow(X_Mask[110])\naxis[1].axis(\"off\")","ca2a19fd":"figure,axis = plt.subplots(1,2,figsize=(15,15))\n\naxis[0].imshow(X_New_IMG[1110])\naxis[0].axis(\"off\")\naxis[1].imshow(X_Mask[1110])\naxis[1].axis(\"off\")","751a86c7":"compile_loss = \"binary_crossentropy\"\ncompile_optimizer = Adam(lr=0.0000001)\noutput_class = 1","9d5d2a93":"Checkpoint_Model = tf.keras.callbacks.ModelCheckpoint(monitor=\"val_accuracy\",\n                                                      save_best_only=True,\n                                                      save_weights_only=True,\n                                                      filepath=\".\/modelcheck\")","0195c9e6":"E_AEncoder = Sequential()\n#\nE_AEncoder.add(Conv2D(32,(7,7),kernel_initializer = 'he_normal',use_bias = True, padding=\"same\"))\nE_AEncoder.add(BatchNormalization())\nE_AEncoder.add(ReLU())\n#\nE_AEncoder.add(Conv2D(64,(5,5),kernel_initializer = 'he_normal',use_bias = True, padding=\"same\"))\nE_AEncoder.add(BatchNormalization())\nE_AEncoder.add(ReLU())\n#\nE_AEncoder.add(Conv2D(128,(5,5),kernel_initializer = 'he_normal',use_bias = True, padding=\"same\"))\nE_AEncoder.add(BatchNormalization())\nE_AEncoder.add(ReLU())\n\n\nD_AEncoder = Sequential()\n#\nD_AEncoder.add(Conv2DTranspose(64,(7,7), padding=\"same\"))\nD_AEncoder.add(ReLU())\n#\nD_AEncoder.add(Conv2DTranspose(32,(5,5), padding=\"same\"))\nD_AEncoder.add(ReLU())\n#\nD_AEncoder.add(Conv2DTranspose(output_class,(5,5), padding=\"same\"))\nD_AEncoder.add(ReLU())","f22b1adc":"Auto_Encoder = Sequential([E_AEncoder,D_AEncoder])\nAuto_Encoder.compile(loss=compile_loss,optimizer=compile_optimizer,metrics=[\"mse\"])","e01813ee":"Model_AutoEncoder = Auto_Encoder.fit(X_Mask,X_New_IMG,epochs=25,callbacks=[Checkpoint_Model])","357ac53f":"Prediction_MASK_Seen = Auto_Encoder.predict(X_Mask[:20])","122e4949":"figure,axis = plt.subplots(1,2,figsize=(15,15))\npre_img_number = 1\n\nOriginal_Img = X_Mask[pre_img_number]\nPredict_Mask = Prediction_MASK_Seen[pre_img_number]\n\naxis[0].imshow(Original_Img)\naxis[0].set_xlabel(Original_Img.shape)\naxis[0].set_ylabel(Original_Img.size)\naxis[0].set_title(\"IMAGE\")\naxis[0].axis(\"off\")\naxis[1].imshow(Predict_Mask)\naxis[1].set_xlabel(Predict_Mask.shape)\naxis[1].set_ylabel(Predict_Mask.size)\naxis[1].set_title(\"PREDICTION\")\naxis[1].axis(\"off\")","568c17c3":"figure,axis = plt.subplots(1,2,figsize=(15,15))\npre_img_number = 2\n\nOriginal_Img = X_Mask[pre_img_number]\nPredict_Mask = Prediction_MASK_Seen[pre_img_number]\n\naxis[0].imshow(Original_Img)\naxis[0].set_xlabel(Original_Img.shape)\naxis[0].set_ylabel(Original_Img.size)\naxis[0].set_title(\"IMAGE\")\naxis[0].axis(\"off\")\naxis[1].imshow(Predict_Mask)\naxis[1].set_xlabel(Predict_Mask.shape)\naxis[1].set_ylabel(Predict_Mask.size)\naxis[1].set_title(\"PREDICTION\")\naxis[1].axis(\"off\")","c0024beb":"figure,axis = plt.subplots(1,2,figsize=(15,15))\npre_img_number = 7\n\nOriginal_Img = X_Mask[pre_img_number]\nPredict_Mask = Prediction_MASK_Seen[pre_img_number]\n\naxis[0].imshow(Original_Img)\naxis[0].set_xlabel(Original_Img.shape)\naxis[0].set_ylabel(Original_Img.size)\naxis[0].set_title(\"IMAGE\")\naxis[0].axis(\"off\")\naxis[1].imshow(Predict_Mask)\naxis[1].set_xlabel(Predict_Mask.shape)\naxis[1].set_ylabel(Predict_Mask.size)\naxis[1].set_title(\"PREDICTION\")\naxis[1].axis(\"off\")","41b8c934":"figure,axis = plt.subplots(1,2,figsize=(15,15))\npre_img_number = 10\n\nOriginal_Img = X_Mask[pre_img_number]\nPredict_Mask = Prediction_MASK_Seen[pre_img_number]\n\naxis[0].imshow(Original_Img)\naxis[0].set_xlabel(Original_Img.shape)\naxis[0].set_ylabel(Original_Img.size)\naxis[0].set_title(\"IMAGE\")\naxis[0].axis(\"off\")\naxis[1].imshow(Predict_Mask)\naxis[1].set_xlabel(Predict_Mask.shape)\naxis[1].set_ylabel(Predict_Mask.size)\naxis[1].set_title(\"PREDICTION\")","38d0d9af":"figure,axis = plt.subplots(1,2,figsize=(15,15))\npre_img_number = 12\n\nOriginal_Img = X_Mask[pre_img_number]\nPredict_Mask = Prediction_MASK_Seen[pre_img_number]\n\naxis[0].imshow(Original_Img)\naxis[0].set_xlabel(Original_Img.shape)\naxis[0].set_ylabel(Original_Img.size)\naxis[0].set_title(\"IMAGE\")\naxis[0].axis(\"off\")\naxis[1].imshow(Predict_Mask)\naxis[1].set_xlabel(Predict_Mask.shape)\naxis[1].set_ylabel(Predict_Mask.size)\naxis[1].set_title(\"PREDICTION\")","7627b3b1":"figure,axis = plt.subplots(1,2,figsize=(15,15))\npre_img_number = 19\n\nOriginal_Img = X_Mask[pre_img_number]\nPredict_Mask = Prediction_MASK_Seen[pre_img_number]\n\naxis[0].imshow(Original_Img)\naxis[0].set_xlabel(Original_Img.shape)\naxis[0].set_ylabel(Original_Img.size)\naxis[0].set_title(\"IMAGE\")\naxis[0].axis(\"off\")\naxis[1].imshow(Predict_Mask)\naxis[1].set_xlabel(Predict_Mask.shape)\naxis[1].set_ylabel(Predict_Mask.size)\naxis[1].set_title(\"PREDICTION\")","7c5ca3ed":"Reading_IMG = cv2.cvtColor(cv2.imread(Test_Set[\"PNG\"][100]),cv2.COLOR_BGR2RGB)\nReading_IMG_Shape = Reading_IMG.reshape(1,Reading_IMG.shape[0],Reading_IMG.shape[1],Reading_IMG.shape[2])\nMASK_Seen = Auto_Encoder.predict(Reading_IMG_Shape)\n\nfigure,axis = plt.subplots(1,2,figsize=(14,14))\n\naxis[0].imshow(Reading_IMG)\naxis[0].set_xlabel(Reading_IMG.shape)\naxis[0].set_ylabel(Reading_IMG.size)\naxis[0].set_title(\"IMAGE\")\naxis[0].axis(\"off\")\naxis[1].imshow(MASK_Seen[0])\naxis[1].set_xlabel(MASK_Seen[0].shape)\naxis[1].set_ylabel(MASK_Seen[0].size)\naxis[1].set_title(\"PREDICTION\")\naxis[1].axis(\"off\")","c3518afe":"#### THRESHOLD","941f7826":"# DATA PROCESS FOR AUTO-ENCODER","658dd1c5":"# VISION ANALYSIS","57be7111":"#### CALLBACKS & PARAMETERS","babd4196":"#### HESSIAN","829047fd":"# REAL TIME HIGH QUALITY IMAGE","b0639b20":"# ATTENTION\n\n#### FOLLOW\n* All stages are divided into titles and titles respectively.\n* Each step is explained one by one in itself.\n* Please follow in order.\n\n\n#### STEPS\n* PATH Process\n* Identifying categories using PATH\n* Determine time slots and classes\n* Capturing correlation and logic with Computer Vision\n* Creating new data\n* Establishing a forecasting model with new data\n* Segmentation with Auto-Encoder\n\n#### PARAMETERS\n* Example Path: \n\n..\/input\/jupiter-juno-mission-image-set-nasa\/JUPITER\/RDR_ORBIT\/JIR_IMG_RDR_2017296T232258\n\n* Target:\n\n2017296T232258\n\n* Values:\n\nDATE:  2017\nPERIOD:  296\nCLASS:  T2\nCOUNT:  32258\n","de343c75":"#### TO ARRAY WITH FLOAT32","f8615707":"* It turns out that we can find out whether JUPITER is in camera angle or not with the 2-D transmitted threshold method.\n* In addition, we can understand the intensity of activities on JUPITER with the same method.","8b01ea6e":"#### NEW DATA","d759ac33":"# AUTO ENCODER MODEL","80e03b75":"* As the axes progress, there is a difference in the PERIOD.\n* Depending on the CLASS partition COUNT and PERIOD are refreshed again.","538190c8":"* T CLASS IS ABOUT CAMERA ROTATION\n* WITH THIS FORECAST, WE CAN PREDICT WHERE THE SATELLITE WILL BE","ff6bc9f1":"#### SIMPLE MAIN - PERIOD - COUNT - CLASS","e14dae29":"#### CHECKING","66f83557":"* GO TO: http:\/\/junocam.pictures\/gerald\/uploads\/20180326\/JIR_IMG_RDR_2017244T195101_V01-tile.png\n* GO TO: http:\/\/junocam.pictures\/gerald\/uploads\/20180326\/JIR_IMG_RDR_2016216T030811_V01-tile.png","958eab96":"#### HOW TO LOOK WITH GENERATOR","fab40c0e":"* There is regular action in the COUNT section. This proves the state of motion.","da16ecaa":"#### TRAINING","d29ed738":"#### BLENDING","4d98179e":"#### TRANSFORMATION","7e431603":"* This makes it easy to see cloud movements and centers","0019ce69":"![](https:\/\/pbs.twimg.com\/media\/EfbDVXXUYAAeXQC.jpg)","dd899b5d":"# OBSERVATION AND METHOD DETERMINATION","ab496924":"* 3-DIMENSION is misleading for this method","8525560a":"* T1 CLASS points lower axis","339b1bc4":"#### CHECKING","39cc8dd2":"#### PREDICTION MODEL","273ad65c":"#### PATH SPLITTING","9515b09d":"#### STRUCTURE","a288ce17":"#### PATH & INFORMATION ","f7c96152":"# HISTORY\n\n#### JUNO MISSION\nJuno is the first spacecraft to have explored Jupiter's environment. Juno's primary goal is to reveal the story of Jupiter's formation and evolution. Using long-proven technologies on a spinning spacecraft placed in an elliptical polar orbit, Juno will observe Jupiter's gravity and magnetic fields, atmospheric dynamics and composition, and evolution.\nThe Juno spacecraft, which successfully entered the orbit of Jupiter on July 4, 2016, will for the first time peer below the dense cover of clouds to answer questions about the gas giant and the origins of our solar system.\nNASA has approved an update to Juno\u2019s science operations until July 2021. This provides for an additional 41 months in orbit around Jupiter and will enable Juno to achieve its primary science objectives. Juno is in 53-day orbits rather than 14-day orbits as initially planned because of a concern about valves on the spacecraft\u2019s fuel system. This longer orbit means that it will take more time to collect the needed science data.\nAn independent panel of experts confirmed in April that Juno is on track to achieve its science objectives and is already returning spectacular results. The Juno spacecraft and all instruments are healthy and operating nominally.\nNASA has now funded Juno through FY 2022. The end of prime operations is now expected in July 2021, with data analysis and mission close-out activities continuing into 2022.\n\u201cWith these funds, not only can the Juno team continue to answer long-standing questions about Jupiter that first fueled this exciting mission, but they\u2019ll also investigate new scientific puzzles motivated by their discoveries thus far,\u201d said Thomas Zurbuchen, associate administrator for NASA\u2019s Science Mission Directorate in Washington. \u201cWith every additional orbit, both scientists and citizen scientists will help unveil new surprises about this distant world.\"\n\u201cThis is great news for planetary exploration as well as for the Juno team,\u201d said Scott Bolton, principal investigator of Juno, from the Southwest Research Institute in San Antonio. \"These updated plans for Juno will allow it to complete its primary science goals. As a bonus, the larger orbits allow us to further explore the far reaches of the Jovian magnetosphere -- the region of space dominated by Jupiter's magnetic field -- including the far magnetotail, the southern magnetosphere, and the magnetospheric boundary region called the magnetopause. We have also found Jupiter\u2019s radiation environment in this orbit to be less extreme than expected, which has been beneficial to not only our spacecraft, but our instruments and the continued quality of science data collected.\u201d\n#### TEAM\n* DC A.\nJet Propulsion Laboratory, Pasadena, Calif.\n818-393-9011\nagle@jpl.nasa.gov\n* JoAnna W.\nNASA Headquarters, Washington\n202-358-1003\njoanna.r.wendel@nasa.gov\n* Deb S.\nSouthwest Research Institute, San Antonio\n210-522-2254\ndschmid@swri.org\n\n#### TRAIN\n* Baris D.\nMachine Learning Specialist and Educational Data Team Member\nbrisdncer@gmail.com","a10aa5e8":"#### BLEND HESSIAN","c250f44b":"#### TEST SET PREDICTION","2d6e52d0":"#### GENERATOR STRUCTURE","69e0904c":"#### GENERATOR SET","68f20443":"* all you need if you want","dc02d402":"* Usually count and threshold version are compatible, but not always","33d99a54":"# PREDICTION T CLASS","7f15a63c":"# SPLITTING FOR ALL","43f341a5":"# PACKAGES AND LIBRARIES","891293e4":"#### PREDICTION","a1f16ed7":"#### 2 LAYERS BLENDING","f150c3c0":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcTiY8X0vLwRCijoI9nw_K6sTLC190PnSuA4XA&usqp=CAU)","edfda622":"#### NEW DATA PROCESS","a06af0c4":"#### PREDICTION"}}