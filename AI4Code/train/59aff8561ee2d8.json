{"cell_type":{"4bbb3e08":"code","624387c7":"code","447f68c6":"code","a9476467":"code","46d8766b":"code","59e1599a":"code","6dab5114":"code","f341daa6":"code","aa1e634b":"code","8ea64378":"code","af0ea930":"code","97db9035":"code","ab051e8c":"code","652a39e0":"code","bfa65b7b":"code","0e961f5a":"code","f882550f":"markdown","f03d1b84":"markdown","1d814b51":"markdown","97951730":"markdown","f5082852":"markdown","5324c213":"markdown","75a30895":"markdown"},"source":{"4bbb3e08":"import os, time, random\nimport numpy as np\nimport pandas as pd\nimport cv2, torch\nfrom tqdm.auto import tqdm\nimport shutil as sh\n\nfrom IPython.display import Image, clear_output\nimport matplotlib.pyplot as plt\n%matplotlib inline","624387c7":"%%time\n\n!git clone https:\/\/github.com\/ultralytics\/yolov5  # clone repo\n!pip install -U pycocotools\n!pip install -qr yolov5\/requirements.txt  # install dependencies\n!cp yolov5\/requirements.txt .\/","447f68c6":"img_h, img_w, num_channels = (380, 676, 3)\ndf = pd.read_csv('..\/input\/car-object-detection\/data\/train_solution_bounding_boxes (1).csv')\ndf.rename(columns={'image':'image_id'}, inplace=True)\ndf['image_id'] = df['image_id'].apply(lambda x: x.split('.')[0])\ndf['x_center'] = (df['xmin'] + df['xmax'])\/2\ndf['y_center'] = (df['ymin'] + df['ymax'])\/2\ndf['w'] = df['xmax'] - df['xmin']\ndf['h'] = df['ymax'] - df['ymin']\ndf['classes'] = 0\ndf['x_center'] = df['x_center']\/img_w\ndf['w'] = df['w']\/img_w\ndf['y_center'] = df['y_center']\/img_h\ndf['h'] = df['h']\/img_h\ndf.head()","a9476467":"index = list(set(df.image_id))\nimage = random.choice(index)\nprint(\"Image ID: %s\"%(image))\nimg = cv2.imread(f'\/kaggle\/input\/car-object-detection\/data\/training_images\/{image}.jpg')\nimg.shape","46d8766b":"image = random.choice(index)\nImage(filename=f'\/kaggle\/input\/car-object-detection\/data\/training_images\/{image}.jpg',width=600)","59e1599a":"source = 'training_images'\nif True:\n    for fold in [0]:\n        val_index = index[len(index)*fold\/\/5:len(index)*(fold+1)\/\/5]\n        for name,mini in tqdm(df.groupby('image_id')):\n            if name in val_index:\n                path2save = 'val2017\/'\n            else:\n                path2save = 'train2017\/'\n            if not os.path.exists('\/tmp\/convertor\/fold{}\/labels\/'.format(fold)+path2save):\n                os.makedirs('\/tmp\/convertor\/fold{}\/labels\/'.format(fold)+path2save)\n            with open('\/tmp\/convertor\/fold{}\/labels\/'.format(fold)+path2save+name+\".txt\", 'w+') as f:\n                row = mini[['classes','x_center','y_center','w','h']].astype(float).values\n                row = row.astype(str)\n                for j in range(len(row)):\n                    text = ' '.join(row[j])\n                    f.write(text)\n                    f.write(\"\\n\")\n            if not os.path.exists('\/tmp\/convertor\/fold{}\/images\/{}'.format(fold,path2save)):\n                os.makedirs('\/tmp\/convertor\/fold{}\/images\/{}'.format(fold,path2save))\n            sh.copy(\"\/kaggle\/input\/car-object-detection\/data\/{}\/{}.jpg\".format(source,name),'\/tmp\/convertor\/fold{}\/images\/{}\/{}.jpg'.format(fold,path2save,name))","6dab5114":"#!python train.py --batch 2 --epochs 1 --data ..\/input\/yolov5-config\/car.yaml --cfg ..\/input\/yolov5-config\/yolov5x.yaml --name yolov5x_fold0_new","f341daa6":"!python yolov5\/detect.py --weights yolov5\/yolov5s.pt --img 676 --conf 0.4 --source \/kaggle\/input\/car-object-detection\/data\/testing_images","aa1e634b":"predicted_files = []\nfor (dirpath, dirnames, filenames) in os.walk(\"runs\/detect\/exp\"):\n    predicted_files.extend(filenames)","8ea64378":"Image(filename=f'runs\/detect\/exp\/{random.choice(predicted_files)}')","af0ea930":"Image(filename=f'runs\/detect\/exp\/{random.choice(predicted_files)}')","97db9035":"Image(filename=f'runs\/detect\/exp\/{random.choice(predicted_files)}')","ab051e8c":"Image(filename=f'runs\/detect\/exp\/{random.choice(predicted_files)}')","652a39e0":"Image(filename=f'runs\/detect\/exp\/{random.choice(predicted_files)}')","bfa65b7b":"Image(filename=f'runs\/detect\/exp\/{random.choice(predicted_files)}')","0e961f5a":"!rm -rf runs yolov5","f882550f":"### If you found this kernel helpful, please upvote it \ud83d\ude9e","f03d1b84":"<h1><center>YOLO V5 Car Object Detection<\/center><\/h1>\n\n<img src=\"https:\/\/pjreddie.com\/media\/image\/yologo_2.png\" width=\"400\" height=\"400\" \/>\n\n\n<div style=\"text-align: right\"> Source: https:\/\/pjreddie.com\/<\/div>","1d814b51":"## Training (Work in Progress)","97951730":"## Loading Data \ud83d\udcdd \/ Preprocessing \u2699\ufe0f","f5082852":"### Work in Progress","5324c213":"## Prediction","75a30895":"### Libraries \ud83d\udcda\u2b07"}}