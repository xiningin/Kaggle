{"cell_type":{"5ab41ce9":"code","5e142ba2":"code","51ebe42f":"code","5afc4d45":"code","d83217cb":"code","20795d4d":"code","fb2f3ab1":"code","c993131c":"code","157f350c":"code","eacf57dc":"code","e9a94d00":"code","ac8da9bf":"code","0dd7c6be":"code","4a2d765f":"code","09cacae4":"code","44256471":"code","771fc74a":"code","384e7680":"code","f6972881":"code","168db114":"code","e92de2ba":"code","0457f519":"code","f85e8ec1":"code","3ffb3770":"code","0ed569f0":"code","7861ab3d":"code","f3e7881f":"code","2f40f860":"code","850f1c9e":"code","2327dc3a":"code","50b4e309":"code","347a4860":"code","c5b750c7":"code","322caade":"markdown","c8bdadfc":"markdown","dca43b49":"markdown","2114c379":"markdown","cd2d23ee":"markdown","a4f2c8bd":"markdown","4dc3a4ea":"markdown","9871c997":"markdown","bf621781":"markdown","c423db87":"markdown","a8134450":"markdown","c311002a":"markdown","9e280847":"markdown","18909353":"markdown","680d4927":"markdown","941c4b93":"markdown","d5ea1506":"markdown","81479d32":"markdown","ecf80588":"markdown","3351de9c":"markdown","e5651da6":"markdown","cd9d5a57":"markdown","26fec8d1":"markdown","6f2bbce4":"markdown","b7daecae":"markdown","5fc77d03":"markdown","99e00fe6":"markdown","3be71461":"markdown"},"source":{"5ab41ce9":"import numpy as np\nimport pandas as pd\nimport statsmodels.api as sm\nimport seaborn as sns\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nfrom statsmodels.tsa.stattools import adfuller\nfrom statsmodels.graphics.tsaplots import plot_acf,plot_pacf\nfrom pandas.plotting import autocorrelation_plot\nfrom statsmodels.tsa.arima_model import ARIMA\nfrom pandas.tseries.offsets import DateOffset\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# Suppress warnings \nimport warnings\nwarnings.filterwarnings('ignore')","5e142ba2":"df = pd.read_csv('..\/input\/industrial-production-index-in-usa\/INDPRO.csv')\ndf.head()","51ebe42f":"df.columns = ['Date', 'IPI']\ndf.head()","5afc4d45":"# to check NAs\ndf.info()\ndf.isnull().sum()","d83217cb":"df['Date'] = pd.to_datetime(df['Date'])","20795d4d":"#setting up Date column as an Index\ndf.set_index ('Date', inplace = True)\ndf.index","fb2f3ab1":"#Date slicing\ndf_new = df['1998-01-01':]\ndf_new.tail()","c993131c":"df_new.describe().transpose()","157f350c":"f, ax = plt.subplots(figsize = (16,10))\nax.plot(df_new, c = 'r');","eacf57dc":"# rot = rotates labels at the bottom\n# fontsize = labels size\n# grid False or True\n\ndf_new.boxplot('IPI', rot = 80, fontsize = '12',grid = True);","e9a94d00":"time_series = df_new['IPI']\ntype(time_series)","ac8da9bf":"time_series.rolling(12).mean().plot(label = '12 Months Rolling Mean', figsize = (16,10))\ntime_series.rolling(12).std().plot(label = '12 Months Rolling Std')\ntime_series.plot()\nplt.legend();","0dd7c6be":"result = adfuller(df_new['IPI'])","4a2d765f":"#to make it readable\ndef adf_check(time_series):\n    \n    result = adfuller(time_series)\n    print('Augmented Dickey-Fuller Test')\n    labels = ['ADF Test Statistic', 'p-value', '# of lags', 'Num of Obs used']\n    \n    print('Critical values:')\n    for key,value in result[4].items():\n        print('\\t{}: {}'.format(key, value) )\n    \n    for value, label in zip(result,labels):\n        print(label+ ' : '+str(value))\n    \n    if ((result[1] <= 0.05 and  result[0] <= result[4]['1%']) or\n    (result[1] <= 0.05 and  result[0] <= result[4]['5%']) or\n        (result[1] <= 0.05 and  result[0] <= result[4]['10%'])):\n        print('Reject null hypothesis')\n        print ('Data has no unit root and is stationary')\n   \n    else:\n        print('Fail to reject null hypothesis')\n        print('Data has a unit root and it is non-stationary')","09cacae4":"adf_check(df_new['IPI'])","44256471":"df_new['Dif_1'] = df_new['IPI'] - df_new['IPI'].shift(1)\ndf_new['Dif_1'].plot(rot = 80, figsize = (14,8));","771fc74a":"adf_check(df_new['Dif_1'].dropna())","384e7680":"#If need to take a second difference\n\n#df_new['Dif_2'] = df_new['Dif_1'] - df_new['Dif_1'].shift(1)\n#adf_check(df_new['Dif_2'].dropna())","f6972881":"df_new['Dif_Season'] = df_new['IPI'] - df_new['IPI'].shift(12)\ndf_new['Dif_Season'].plot(rot = 80, figsize = (14,8));","168db114":"adf_check(df_new['Dif_Season'].dropna())","e92de2ba":"df_new['Dif_Season_1'] = df_new['Dif_1'] - df_new['Dif_1'].shift(12)\ndf_new['Dif_Season_1'].plot(rot = 80, figsize = (14,8));","0457f519":"adf_check(df_new['Dif_Season_1'].dropna())","f85e8ec1":"df_new['Dif_mean'] = df_new['IPI'] - df_new['IPI'].rolling(12).mean()\ndf_new['Dif_mean'].plot(rot = 80, figsize = (14,8));","3ffb3770":"adf_check(df_new['Dif_mean'].dropna())","0ed569f0":"#freq can be set to True or number of periods. Ex: 12 months\ndecomp = seasonal_decompose(time_series, freq = 12)\nfig = decomp.plot()\nfig.set_size_inches(15,8)","7861ab3d":"acf_seasonal = plot_acf(df_new['Dif_Season_1'].dropna(), lags = 40, color = \"purple\", marker = \"^\")\npacf_plot = plot_pacf(df_new['Dif_Season_1'].dropna(), lags = 30, color = \"Green\", marker = \"*\")","f3e7881f":"#model = ARIMA(df_new['IPI'], order = (14,1,12))\nmodel = sm.tsa.statespace.SARIMAX(df_new['IPI'],order=(14,1,12), seasonal_order=(1,1,1,12))\nmodel_result = model.fit()\nprint(model_result.summary());","2f40f860":"#to plot residuals:\nmodel_result.resid.plot(rot = 80);","850f1c9e":"#create additional future dates:\nforecast_dates = [df_new.index[-1] + DateOffset(months=x) for x in range(1,24)]\ndf_future = pd.DataFrame(index=forecast_dates, columns = df_new.columns)\ndf_final = pd.concat([df_new, df_future])","2327dc3a":"df_final['Forecast'] = model_result.predict(start=220,end=280, alpha = 0.05)\ndf_final[['IPI','Forecast']].plot(figsize = (12,8));","50b4e309":"y = model_result.plot_diagnostics(figsize = (10,6))","347a4860":"forecast = model_result.get_forecast(steps = 60)\nconf_int = forecast.conf_int()","c5b750c7":"ax = df_final[['IPI','Forecast']].plot(figsize = (12,8))\nax.fill_between(conf_int.index,\n               conf_int.iloc[:, 0],\n               conf_int.iloc[:,1], color = 'grey', alpha = 0.5)\nax.set_xlabel('Time')\nax.set_ylabel('Industrial Production Index')\nax.set_title('SARIMA Forecast')\nplt.legend();","322caade":"Since rolling mean and rolling standard deviation increase over time, the time series are non-stationary.","c8bdadfc":"Out of all ADF test results, the best result will be taking the seasonal difference of the 1st difference. So, in our case, this is df_new['Dif_Season_1'].","dca43b49":"## Dickey-Fuller Test\nNull hypothesis that the series are non-stationary.\nAlternative hypothesis: series are stationary. The data is considered to be stationary if the p-value is less than 0.05 and ADF Statistic is close to the critical values. ","2114c379":"## ARIMA Model","cd2d23ee":"### 2. Seasonal Difference","a4f2c8bd":"## Diagnostic Plots","4dc3a4ea":"We want the residuals to be white noise process","9871c997":"The mean, varience and covarience of the i-th and the (i+m)-th term of the series should not depend on time. Most statistical methods assume or require the series to be stationary.","bf621781":"In order to conclude that the series is stationary, the p-value has to be less than the significance level. As well as, ADF t-statistic must be below the Critical values.","c423db87":"### To add Confidence Ingtervals:","a8134450":"## Stationarity","c311002a":"## How to make it stationary","9e280847":"## Loading in a data","18909353":"Note:\n* If the autocorrelation plot shows positive autocorrelation at the first lag (lag-1), then it suggests to use the AR terms in relation to the lag.\n* If the autocorrelation plot shows negative autocorrelation at the first lag, then it suggests using MA terms.","680d4927":"## Seasonal Decomposition of Time Series Components\n\n#### Trend: \nUpward or downward movement of the data over time\n#### Seasonality: \nSeasonal varience\n#### Noise: \nSpikes and drops at random intervals","941c4b93":"## Autocorrelation Function (ACF) and Partial Autocorrelation Function (PACF)","d5ea1506":"And here we go! My forecast for the US Industrial Production Index. I am pretty happy with my results. However, the confidence interval is very wide.","81479d32":"Even though T-stats value is close to the Critical values, p-value is too high. Result: The data is non-stationary.","ecf80588":"2.3 Mean Difference","3351de9c":"#### 2.2 Seasonal effect of the first difference:","e5651da6":"ADF statistic is higher than Critical values and p-value is above 0.05. Conclusion: This data is non-stationary","cd9d5a57":"### 1. Taking the first difference","26fec8d1":"#### Checking for stationarity again:","6f2bbce4":"Since df_log['Dif_1'] in ADF test gave the most prefereable results, I would plot AC and PAC plots only for this data. Autocorrelation function is used to determine number of MA terms, and Partial Autocorrelation is for AR terms.","b7daecae":"## Conclusion:","5fc77d03":"#### 2.1 Taking seasonal difference","99e00fe6":"#KDE plot:\nmodel_result.resid.plot(kind = 'kde');","3be71461":"Based on the AC and PAC graphs, we can choose the AR and MA orders for the ARIMA model. Also, for AR it is the number of lag observations from ADF result. And for MA it is the size of the MA window."}}