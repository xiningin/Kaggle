{"cell_type":{"50bcbbc8":"code","53cb4214":"code","502ba74e":"code","b818fdcd":"code","d9fc1221":"code","a037822f":"code","d9890640":"code","7d58f244":"code","766247af":"code","b7a14c06":"code","264f65d6":"code","e801f2c3":"code","9dbdc557":"code","e51c5f5b":"code","f57af6cd":"code","a342f464":"code","53969e9f":"code","60d93750":"code","56771540":"code","3651d6a9":"code","1d5376fa":"code","072619e1":"code","b9ac61c7":"code","fff496e6":"code","89b0cb3f":"code","d967efea":"code","0acd7307":"code","7e4130cd":"code","888f9282":"code","c3264198":"code","c7821aa2":"code","c0b92c85":"code","50ac687d":"code","22e487be":"code","2a526e6b":"code","f959baba":"code","b654f910":"code","d1010b7f":"code","339024ed":"code","b1de88da":"code","a6085b49":"code","1f42f1fe":"markdown","5ff4cf40":"markdown","226598e2":"markdown","4588bddc":"markdown","3893f7fa":"markdown","79b5c072":"markdown"},"source":{"50bcbbc8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","53cb4214":"import warnings\nwarnings.simplefilter('ignore')\nwarnings.filterwarnings('ignore')\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.preprocessing import StandardScaler, LabelEncoder\nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\n%matplotlib inline\n\nfrom sklearn.model_selection import KFold\nfrom sklearn.metrics import confusion_matrix,accuracy_score\nfrom sklearn.decomposition import PCA,KernelPCA\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier","502ba74e":"wine_train = pd.read_csv('..\/input\/serpro-wine\/wine-train.csv')\nwine_test = pd.read_csv('..\/input\/serpro-wine\/wine-test.csv')","b818fdcd":"print(wine_train.shape)\nwine_train","d9fc1221":"print(wine_test.shape)\nwine_test","a037822f":"wine_train.describe()","d9890640":"wine_train.info()","7d58f244":"wine_train.boxplot(column = wine_train.columns.tolist()[1:-2], figsize=(8,8), rot=45)","766247af":"wine_train.boxplot(column = wine_train.columns.tolist()[1], figsize=(8,8), rot=45)","b7a14c06":"wine_train.boxplot(column = wine_train.columns.tolist()[2], figsize=(8,8), rot=45)","264f65d6":"wine_train.boxplot(column = wine_train.columns.tolist()[3], figsize=(8,8), rot=45)","e801f2c3":"wine_train.boxplot(column = wine_train.columns.tolist()[4], figsize=(8,8), rot=45)","9dbdc557":"wine_train.boxplot(column = wine_train.columns.tolist()[5], figsize=(8,8), rot=45)","e51c5f5b":"wine_train.boxplot(column = wine_train.columns.tolist()[6], figsize=(8,8), rot=45)","f57af6cd":"wine_train.boxplot(column = wine_train.columns.tolist()[7], figsize=(8,8), rot=45)","a342f464":"wine_train.boxplot(column = wine_train.columns.tolist()[8], figsize=(8,8), rot=45)","53969e9f":"wine_train.boxplot(column = wine_train.columns.tolist()[9], figsize=(8,8), rot=45)","60d93750":"wine_train.boxplot(column = wine_train.columns.tolist()[10], figsize=(8,8), rot=45)","56771540":"wine_train['is_outlier'] = 'normal'\nwine_train","3651d6a9":"for col in ['citric_acid', 'residual_sugar', 'free_sulfur_dioxide', 'total_sulfur_dioxide','density']:\n    wine_train['is_outlier'][wine_train[col] >= wine_train[col].quantile(0.9999)] = 'outlier'\n    wine_train['is_outlier'][wine_train[col] <= wine_train[col].quantile(0.0001)] = 'outlier'\n    wine_train['is_outlier'][wine_train[col] == np.nan] = 'outlier'\n#wine_train[wine_train['is_outlier'] != 'outlier']\nwine_train[wine_train['is_outlier'] == 'outlier']","1d5376fa":"wine_train = wine_train[wine_train['is_outlier'] != 'outlier']\nwine_train","072619e1":"wine_train = wine_train.drop('is_outlier', axis = 1)\nwine_train","b9ac61c7":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'fixed_acidity', data = wine_train)","fff496e6":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'volatile_acidity', data = wine_train)","89b0cb3f":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'citric_acid', data = wine_train)","d967efea":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'residual_sugar', data = wine_train)","0acd7307":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'chlorides', data = wine_train)","7e4130cd":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'free_sulfur_dioxide', data = wine_train)","888f9282":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'total_sulfur_dioxide', data = wine_train)","c3264198":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'sulphates', data = wine_train)","c7821aa2":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'alcohol', data = wine_train)","c0b92c85":"# separando os dados de treino e teste\n\nX_train = wine_train.drop('quality', axis = 1)\ny_train = wine_train['quality']\nX_test = wine_test\ny_true = None\ny_pred = None\nX_full = pd.concat([X_train, X_test])","50ac687d":"X_train","22e487be":"y_train","2a526e6b":"type(y_train)","f959baba":"# Aplicando Standard scaling para otimizar os resultados\n\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.fit_transform(X_test)","b654f910":"X_train","d1010b7f":"# Criando o modelo de classifica\u00e7\u00e3o\nmodel = SVC(C = 1.50, gamma = 0.90, kernel = 'rbf')\n\n# Treinando os modelos criados\nmodel.fit(X_train, y_train)\n\n# Realizando a predi\u00e7\u00e3o\ny_pred = model.predict(X_test)\n\n# Exibindo os resultados\ny_pred","339024ed":"X_test","b1de88da":"# Gerando o conjunto de dados de sa\u00edda\nsubmission = pd.DataFrame({'wine': wine_test['wine'], 'quality': y_pred.flatten()})\nsubmission.set_index('wine', inplace=True)\n\n# Exibindo os dados de sa\u00edda\nsubmission.head(10)","a6085b49":"# gerando o arquivo CSV de sa\u00edda\nsubmission.to_csv('.\/wine-submission.csv')\n\n# verificando o conte\u00fado do arquivo gerado\nsubmission = pd.read_csv('.\/wine-submission.csv', index_col='wine')\nsubmission","1f42f1fe":"### Configura\u00e7\u00e3o do Ambiente","5ff4cf40":"### An\u00e1lise Descritiva","226598e2":"### Entrega dos Resultados","4588bddc":"### Aquisi\u00e7\u00e3o dos Dados","3893f7fa":"### Prepara\u00e7\u00e3o dos Dados","79b5c072":"### An\u00e1lise Inferencial"}}