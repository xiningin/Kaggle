{"cell_type":{"bdd8f38e":"code","9edc4bcc":"code","10a5bc42":"code","44a80a86":"code","eb6bea77":"code","97c707b9":"code","fbccfa53":"code","f4f76eaf":"code","fbf4006c":"code","e8ba8f12":"code","a30bc7e8":"code","1d72abde":"code","1cb92962":"code","755573e8":"markdown","f6d821dc":"markdown","e285e4ab":"markdown","c0490727":"markdown","011fa649":"markdown"},"source":{"bdd8f38e":"import gresearch_crypto\nimport pandas as pd\nimport numpy as np\nimport lightgbm as lgb\nfrom numpy import arange\nfrom sklearn.linear_model import Ridge\nfrom sklearn.linear_model import ElasticNet\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import RepeatedKFold\nfrom scipy.stats import pearsonr","9edc4bcc":"class CFG:\n    nof_trees = 100","10a5bc42":"def process_data(df):\n    return 0","44a80a86":"df_train = pd.read_csv('..\/input\/g-research-crypto-forecasting\/train.csv')\n\nxte = pd.read_csv('..\/input\/g-research-crypto-forecasting\/example_test.csv')\n","eb6bea77":"feature_cols = ['Asset_ID', 'Close', 'Count', 'High', 'Low', 'Open', 'VWAP',\n       'Volume', 'timestamp']","97c707b9":"df_train.dropna(axis = 0, inplace = True)","fbccfa53":"ytrain = df_train['Target'].copy()\nxtrain = df_train[feature_cols].copy()","f4f76eaf":"train_size = int(0.9 * xtrain.shape[0])\nx0, y0 = xtrain.iloc[:train_size],ytrain.iloc[:train_size]\nx1, y1 = xtrain.iloc[train_size:],ytrain.iloc[train_size:]","fbf4006c":"col_subset = ['High', 'Low', 'Close', 'Open', 'Count','Volume']","e8ba8f12":"model = ElasticNet()\ncv = RepeatedKFold(n_splits=10, n_repeats=3, random_state=1)\ngrid = dict()\ngrid['alpha'] = [1e-5, 1e-4, 1e-3, 1e-2, 1e-1, 0.0, 1.0, 10.0, 100.0]\ngrid['l1_ratio'] = arange(0, 1, 0.01)\nsearch = GridSearchCV(model, grid, scoring='neg_mean_absolute_error', cv=cv, n_jobs=-1)\n\nx0a = pd.get_dummies(x0['Asset_ID'])\nx1a = pd.get_dummies(x1['Asset_ID'])\nmodel.fit(x0[col_subset],y0)","a30bc7e8":"pred = model.predict(x1[col_subset])","1d72abde":"np.corrcoef(y1,pred)","1cb92962":"\nenv = gresearch_crypto.make_env()\niter_test = env.iter_test()\nfor (test_df, sample_prediction_df) in iter_test:\n    xte = test_df[col_subset]\n    sample_prediction_df['Target'] = model.predict(xte)\n    env.predict(sample_prediction_df)","755573e8":"# Submission","f6d821dc":"# Model","e285e4ab":"# Data","c0490727":"This notebook provides the absolute minimum code necessary for making a submission and is meant for copying into your own pipeline. If you're looking for a more detailed explanation of how the API works, take a look at [this notebook instead](https:\/\/www.kaggle.com\/sohier\/detailed-api-introduction).","011fa649":"# Functions"}}