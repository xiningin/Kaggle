{"cell_type":{"a3b22e14":"code","edeb3e5c":"code","69d61ae7":"code","7ae3bf45":"code","90ad0a3a":"code","02dc3ea1":"code","c4de093d":"code","5a630cbe":"code","e78cde08":"code","aac9fcee":"code","8a8b0af5":"code","bafd0523":"code","e993462a":"code","a13223a8":"code","7ab780c7":"code","5f8ce4a0":"markdown","3e4e9272":"markdown","a35d12b8":"markdown","01fd9baa":"markdown","6bdc45a2":"markdown","e2f2129a":"markdown","e15b6e8d":"markdown","afb77fb9":"markdown","869a55df":"markdown"},"source":{"a3b22e14":"import pandas as pd, numpy as np\nimport os, shutil\nfrom glob import glob\nfrom tqdm import tqdm\nimport cv2\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom colorama import Fore, Back, Style\nsns.set(style='dark')","edeb3e5c":"dataset_dir = '\/kaggle\/input\/cbis-ddsm-breast-cancer-image-dataset'","69d61ae7":"df = pd.read_csv(f'{dataset_dir}\/csv\/dicom_info.csv')\ndf['image_path'] = df.image_path.apply(lambda x: x.replace('CBIS-DDSM', dataset_dir))\ndf.head()","7ae3bf45":"def show_img(path):\n    img = cv2.imread(path,0)\n    plt.figure(figsize=(10,10))\n    plt.imshow(img,cmap='bone')","90ad0a3a":"show_img(df.image_path.iloc[10])","02dc3ea1":"%%time\nimport imagesize\ndata = df['image_path'].map(lambda path: imagesize.get(path))\nwidth, height = list(zip(*data))\ndf['width'] = width\ndf['height'] = height\n# df.head()","c4de093d":"plt.figure(figsize=(12,8))\nsns.kdeplot(df['width'], shade=True, color='limegreen')\nsns.kdeplot(df['height'], shade=True, color='gold')\nplt.legend(['width','height'])","5a630cbe":"from scipy.stats import gaussian_kde\n\n\nx_val = df.width.values\ny_val = df.height.values\n\n# Calculate the point density\nxy = np.vstack([x_val,y_val])\nz = gaussian_kde(xy)(xy)\n\nfig, ax = plt.subplots(figsize = (10, 10))\n# ax.axis('off')\nax.scatter(x_val, y_val, c=z, s=100, cmap='viridis')\n# ax.set_xlabel('x_mid')\n# ax.set_ylabel('y_mid')\nplt.show()","e78cde08":"for info in zip(df.iloc[0].index, df.iloc[0]):\n    print(f'{Fore.GREEN}{info[0]}{Style.RESET_ALL}:',info[1])","aac9fcee":"plt.figure(figsize=(12,8))\nsns.barplot(df.SeriesDescription.value_counts(dropna=False).index, df.SeriesDescription.value_counts(dropna=False), palette='viridis')\n#.plot.bar(rot=0, color=['deepskyblue', 'royalblue', 'deeppink'])","8a8b0af5":"import matplotlib.pyplot as plt\nfrom mpl_toolkits.axes_grid1 import ImageGrid\nimport numpy as np\nimport random\n\ndef show_grid(files, row=3, col=3):\n    grid_files = random.sample(files, row*col)\n    images     = []\n    for image_path in tqdm(grid_files):\n        img          = cv2.resize(cv2.imread(image_path), dsize=(512,512))\n        images.append(img)\n\n    fig = plt.figure(figsize=(col*5, row*5))\n    grid = ImageGrid(fig, 111,  # similar to subplot(111)\n                     nrows_ncols=(col, row),  # creates 2x2 grid of axes\n                     axes_pad=0.05,  # pad between axes in inch.\n                     )\n\n    for ax, im in zip(grid, images):\n        # Iterating over the grid returns the Axes.\n        ax.imshow(im)\n        ax.set_xticks([])\n        ax.set_yticks([])\n    plt.show()","bafd0523":"show_grid(df[df.SeriesDescription=='cropped images'].image_path.tolist(), row=4)","e993462a":"show_grid(df[df.SeriesDescription=='full mammogram images'].image_path.tolist(), row=4)","a13223a8":"show_grid(df[df.SeriesDescription=='ROI mask images'].image_path.tolist(), row=4)","7ab780c7":"show_grid(df[df.SeriesDescription.isna()].image_path.tolist(), row=4)","5f8ce4a0":"# Types of Images","3e4e9272":"# Aspect Ratio","a35d12b8":"# One Row","01fd9baa":"# Image Size Extraction\nsame as `df.Rows` or `df.Columns`","6bdc45a2":"# Width and Height Distribution","e2f2129a":"# Full Mammogram","e15b6e8d":"# Cropped","afb77fb9":"# None","869a55df":"# ROI mask"}}