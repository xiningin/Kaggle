{"cell_type":{"bab60f4d":"code","3c4d65a8":"code","953dd5c8":"code","dfa0d748":"code","6a39bebd":"code","c68542f7":"code","97bbc009":"code","4e4ff7e2":"code","15354350":"code","21cf7c98":"code","5db16bba":"code","b52b2f4c":"code","f4e44cf6":"code","ab92b558":"code","35afeb4c":"code","467200b7":"code","b727ed2e":"code","04b454e9":"code","e5335bd0":"code","b64ade91":"code","719e03bb":"code","1c936f59":"code","84c2e707":"code","b51183e9":"code","cc17dc1c":"code","33539449":"code","f43a42ac":"code","10815fd6":"code","e57588ca":"code","c908e282":"code","56730df8":"markdown"},"source":{"bab60f4d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3c4d65a8":"df = pd.read_csv(\"..\/input\/youtube-new\/INvideos.csv\")\nprint(df)","953dd5c8":"df.columns","dfa0d748":"df.isnull().any()","6a39bebd":"df[\"description\"] = df[\"description\"].fillna(value = \"\")","c68542f7":"df.isnull().any()","97bbc009":"df.info()","4e4ff7e2":"cdf = df['trending_date'].apply(lambda x : '20'+x[:2]).value_counts().to_frame().reset_index().rename(columns = {'index':'year', 'trending_date':'no_of_videoes'})","15354350":"print(cdf)","21cf7c98":"# bar chart\n\nplt.bar(cdf['year'],cdf['no_of_videoes'])","5db16bba":"# what is the percentage of videos released in the particular year\n\ndf['trending_date'].apply(lambda x : '20'+x[:2]).value_counts(normalize = True)","b52b2f4c":"# description\n\ndf.describe()","f4e44cf6":"df.hist('views')","ab92b558":"# number of videos less than 1mil views\n\ndf[df['views']<1e6]['views'].count()\/df['views'].count()*100","35afeb4c":"df.hist('likes')","467200b7":"# Percentage of videos with >50k likes\n\ndf[df['likes']>50000]['likes'].count()\/df['likes'].count()*100","b727ed2e":"# description of non numerical columns\n\ndf.describe(include = 'O')","04b454e9":"# how do we calculate the title length\n\ndf['title_length'] = df['title'].apply(lambda x : len(x))","e5335bd0":"df.head(5)","b64ade91":"df.boxplot('title_length')","719e03bb":"# is there any relation between title lenght and the no. of views\n\nplt.scatter(df['title_length'],df['views'])","1c936f59":"df.corr()","84c2e707":"# grouping of data based on category ID\n\ndf.groupby('category_id').sum()","b51183e9":"# which category has highest views\n\nplt.bar(df['category_id'],df['views'])","cc17dc1c":"# which category has highest likes\n\nplt.bar(df['category_id'],df['likes'])","33539449":"df.info()","f43a42ac":"# how many videoes got removed or had some error\n\ndf['video_error_or_removed'].value_counts()","10815fd6":"# percentage of trending videoes that have comments disabled\n\ndf['comments_disabled'].value_counts(normalize = True)","e57588ca":"# percentage of trending videoes that have ratings disabled\n\ndf['ratings_disabled'].value_counts(normalize = True)","c908e282":"# how many videoes have both comments and ratings disabled\n\nlen(df[(df['comments_disabled'] == True) & (df['ratings_disabled'] == True).index])","56730df8":"which year was data collected"}}