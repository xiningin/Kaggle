{"cell_type":{"64dc621a":"code","514e4508":"code","3edee56d":"code","cb144dc2":"code","8cf28886":"code","bff27146":"code","64d8d0f9":"code","90946011":"code","38c79fcb":"code","26562a53":"code","5adca78a":"code","8fa5601c":"code","92531cb3":"code","58e48df6":"code","e5be5732":"code","5411e219":"code","84782bd2":"code","578bbe92":"code","5faa8fec":"code","41fbea54":"code","779ddfa3":"code","1c19a001":"code","2dc490bb":"markdown","32011715":"markdown","f1f27e4c":"markdown","dd82bf7e":"markdown","bdc5d3e5":"markdown","8e13c09f":"markdown","f75845f6":"markdown"},"source":{"64dc621a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.svm import SVC\nfrom sklearn.model_selection import cross_val_score\n\nfrom sklearn.metrics import classification_report,confusion_matrix\n\nimport seaborn as sns\n\nimport joblib\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","514e4508":"import matplotlib.pyplot as plt\nimport seaborn as sns\niris=pd.read_csv('\/kaggle\/input\/classification\/Iris.csv')\nprint(iris.info())","3edee56d":"iris=pd.read_csv('\/kaggle\/input\/classification\/Iris.csv', index_col= 'Id')\niris","cb144dc2":"iris.describe()","8cf28886":"iris.boxplot()","bff27146":"iris['Species'].value_counts()","64d8d0f9":"from sklearn.model_selection import StratifiedShuffleSplit\n\nsplit = StratifiedShuffleSplit(n_splits=1, test_size=0.2, random_state=30)\n\nfor train_index, test_index in split.split(iris, iris['Species']):\n    train = iris.iloc[train_index]\n    test = iris.iloc[test_index]\nprint(\"TRAIN: {} \\nTEST: {}\".format(train.shape, test.shape))","90946011":"print(\"TRAIN: \\n{} \\n\\nTEST: \\n{}\".format(train['Species'].value_counts(),test['Species'].value_counts()))","38c79fcb":"setosa = iris[iris.Species == \"Iris-setosa\"]\nsetosa.describe()","26562a53":"versicolor = iris[iris.Species == \"Iris-versicolor\"]\n\nprint(versicolor.describe())","5adca78a":"iris.plot()\nplt.show()","8fa5601c":"sns.scatterplot(iris.SepalLengthCm,iris.SepalWidthCm,hue=iris.Species)","92531cb3":"sns.scatterplot(iris.PetalLengthCm,iris.PetalWidthCm,hue=iris.Species )","58e48df6":"iris.head()","e5be5732":"sp1=iris[iris[\"Species\"]==0].count()\nsp2=iris[iris[\"Species\"]==1].count()\nsp3=iris[iris[\"Species\"]==2].count()\n\nprint(\"spA\",sp1,\"spB\",sp2,\"spC\",sp3)","5411e219":"x=iris.drop(['Species'],axis=1)\ny=iris.Species","84782bd2":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)\nmodel=SVC()\nmodel.fit(x_train,y_train)","578bbe92":"y_predict=model.predict(x_test)\nprint(\"Score: \",model.score(x_test,y_test)*100)","5faa8fec":"joblib.dump(model,\"model_rf\")","41fbea54":"trained_model=joblib.load(\"model_rf\")\nprint(classification_report(y_test,y_predict))","779ddfa3":"c=confusion_matrix(y_test,y_predict)\nc","1c19a001":"sns.heatmap(c,annot=True)","2dc490bb":"Making predictions ","32011715":" **Beginner ML project , IRIS classification**","f1f27e4c":"petals plot ","dd82bf7e":"1.IMPORTING LIBRARIES","bdc5d3e5":"3.GENERATING  TEST AND TRAIN SET \n. Creating test set and train set ","8e13c09f":"AS OF NOW,\n> there is no missing values\n> the there varities are distributed eually in proportions (each 50 )\n> Target species is the split into there category","f75845f6":"2.DISPLAYING DATA WITH THEIR ID's"}}