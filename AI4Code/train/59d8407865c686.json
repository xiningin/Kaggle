{"cell_type":{"8eeeae90":"code","d3e2c68d":"code","3af8c4c7":"code","ceb572ad":"code","9a5cbea9":"code","e556ac3c":"code","205de193":"code","c4eb18f8":"code","1425f004":"code","06b385d7":"code","6efa42e1":"code","0ad6f9a5":"code","168e615d":"code","5a044636":"code","7d1740b0":"code","6828e5eb":"code","ef2f897f":"code","3712a25d":"code","a70f9c12":"code","dcedb3a0":"code","9811ac99":"code","65be9bb7":"code","acece0cb":"code","ec913fd0":"code","264a0db9":"code","72800bd6":"code","2cd5918a":"code","5afc32d9":"code","6be66361":"markdown","31361169":"markdown","0063448a":"markdown"},"source":{"8eeeae90":"#defining the important libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor, BaggingRegressor\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error\nfrom sklearn.linear_model import LinearRegression\n#Both mean squared error (MSE) and mean absolute error (MAE) are used in predictive modeling. ... Therefore, MAE is more robust to outliers since it does not make use of square. On the other hand, MSE is more useful if we are concerned about large errors whose consequences are much bigger than equivalent smaller ones.","d3e2c68d":"#read the data file and take the look of the data\ndf = pd.read_csv('..\/input\/videogamesales\/vgsales.csv')\ndf.head()","3af8c4c7":"print('the shape of data is: ', df.shape)","ceb572ad":"#check if there are any null values in the data\ndf.isnull().sum()","9a5cbea9":"#dropping null values\ndf.dropna(inplace=True)","e556ac3c":"#converting categories to discrete variables\ndf['Platform'] = df['Platform'].astype('category')\ndf['Platform'] = df['Platform'].cat.codes\n\ndf['Genre'] = df['Genre'].astype('category')\ndf['Genre'] = df['Genre'].cat.codes\n\ndf['Publisher'] = df['Publisher'].astype('category')\ndf['Publisher'] = df['Publisher'].cat.codes","205de193":"#to check the distribution of numeric data\nplt.figure(figsize=(15,20))\nplt.subplot(4,3,1)\nsns.distplot(df['Global_Sales'])\nsns.distplot(df['JP_Sales'])\nplt.subplot(4,3,2)\nsns.distplot(df['EU_Sales'])\nplt.subplot(4,3,3)\nsns.distplot(df['NA_Sales'])\nsns.distplot(df['Other_Sales'])","c4eb18f8":"#to check the outliers of numeric data\nplt.figure(figsize=(15,20))\nplt.subplot(4,1,1)\nsns.boxplot(df['Global_Sales'])\nsns.boxplot(df['JP_Sales'])\nplt.subplot(4,1,2)\nsns.boxplot(df['EU_Sales'])\nplt.subplot(4,1,3)\nsns.boxplot(df['NA_Sales'])\nplt.subplot(4,1,4)\nsns.boxplot(df['Other_Sales'])","1425f004":"#to check the strength of relationship among variables\nplt.figure(figsize=(15,10)) #manage the size of the plot\nsns.heatmap(df.corr(),annot=True, square = True) \nplt.show()","06b385d7":"df.columns","6efa42e1":"#to check the distribution of numeric data\nplt.figure(figsize=(15,20))\nplt.subplot(4,3,1)\nsns.scatterplot(df['Global_Sales'], df['JP_Sales'])\nplt.subplot(4,3,2)\nsns.scatterplot(df['Global_Sales'],df['EU_Sales'])\nplt.subplot(4,3,3)\nsns.scatterplot(df['Global_Sales'],df['NA_Sales'])\nplt.subplot(4,3,4)\nsns.scatterplot(df['Global_Sales'], df['Other_Sales'])","0ad6f9a5":"plt.figure(figsize=(15,20))\nplt.subplot(4,1,1)\nsns.barplot(x = 'Platform', y ='Global_Sales', data = df)\nplt.subplot(4,1,2)\nsns.barplot(x = 'Genre', y ='Global_Sales', data = df)\nplt.subplot(4,1,3)\nsns.barplot(x = 'Year', y ='Global_Sales', data = df)\nplt.xticks(rotation=90, ha='right')","168e615d":"df_new = df[:][0:100]","5a044636":"plt.figure(figsize=(25,8))\nsns.barplot(x = df_new['Name'], y = df_new['Global_Sales'])\nplt.xticks(rotation=90, ha='right');","7d1740b0":"#dropping the name column since it if of no use in sales analysis\ndf = df.drop('Name', axis =1)","6828e5eb":"plt.figure(figsize=(25,8))\nsns.barplot(x = df_new['Name'], y = df_new['JP_Sales'])\nplt.xticks(rotation=90, ha='right');","ef2f897f":"plt.figure(figsize=(25,8))\nsns.barplot(x = df_new['Name'], y = df_new['EU_Sales'])\nplt.xticks(rotation=90, ha='right');","3712a25d":"plt.figure(figsize=(25,8))\nsns.barplot(x = df_new['Name'], y = df_new['NA_Sales'])\nplt.xticks(rotation=90, ha='right');","a70f9c12":"plt.figure(figsize=(25,8))\nsns.barplot(x = df_new['Name'], y = df_new['Other_Sales'])\nplt.xticks(rotation=90, ha='right');","dcedb3a0":"df =df.drop('Year', axis =1)","9811ac99":"X= df.copy()\nX = X.drop('Global_Sales', axis =1)\ny = df['Global_Sales']","65be9bb7":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state =100)","acece0cb":"model_linear = LinearRegression()\nmodel_linear.fit(X_train, y_train)\ny_pred =model_linear.predict(X_test)\nmae = mean_absolute_error(y_test, y_pred)\nprint('\\033[32mMean Absolute Error: ', mae)","ec913fd0":"model_DT = DecisionTreeRegressor()\nmodel_DT.fit(X_train, y_train)\ny_pred =model_DT.predict(X_test)\nmae = mean_absolute_error(y_test, y_pred)\nprint('\\033[32mMean Absolute Error: ', mae)","264a0db9":"X_train.columns","72800bd6":"X_train = X_train.drop(columns=['Platform', 'Genre', 'Publisher'], axis =1)\nX_test = X_test.drop(columns=['Platform', 'Genre', 'Publisher'], axis =1)","2cd5918a":"model_lin = LinearRegression()\nmodel_lin.fit(X_train, y_train)\ny_pred =model_lin.predict(X_test)\nmae = mean_absolute_error(y_test, y_pred)\nprint('\\033[32mMean Absolute Error: ', mae)","5afc32d9":"model_tree = DecisionTreeRegressor()\nmodel_tree.fit(X_train, y_train)\ny_pred =model_tree.predict(X_test)\nmae = mean_absolute_error(y_test, y_pred)\nprint('\\033[32mMean Absolute Error: ', mae)","6be66361":"Regression on Selected Variables","31361169":"Exploratory Data Analysis","0063448a":"Sales of top 100 games in all region"}}