{"cell_type":{"40c7f9ae":"code","de250a51":"code","30a876e2":"code","90fe280c":"code","f7ec8fca":"code","c1e6f2d2":"code","06cf67a4":"code","8f09b924":"code","ea8e1893":"code","9157fa20":"code","fdba7933":"code","ececa6c8":"code","b941236b":"code","c15f20c2":"code","74bcabe0":"code","a3bea096":"code","776cfe76":"code","283d494b":"code","5878acae":"code","4175386c":"code","1cb5a3d6":"code","8a982b0b":"code","30fd95cc":"code","d5ffc035":"code","ec8dc8d8":"code","e59a0a52":"code","2aa990de":"code","3a6f1a1d":"code","2a3db4ce":"code","9391d6c6":"code","d56d0907":"code","003dfb9b":"code","fbcd3655":"code","5758a0d4":"code","294037df":"code","e114276b":"code","0f5bd639":"code","e00e38d6":"code","1aadfd3b":"code","0a43d4be":"code","fa8c22e8":"code","5bb8a14d":"code","460d97dc":"code","72ae726e":"code","3a306987":"code","9fa74ecb":"code","add067fa":"code","375f8925":"code","bdc9d7dd":"code","56de4f86":"markdown","a60e2edf":"markdown","92a57e4f":"markdown","3d565155":"markdown","91753579":"markdown","7b36ecde":"markdown","2cbd11d7":"markdown","e10a452b":"markdown","9e19cb77":"markdown","8a6b58db":"markdown","becffa38":"markdown","af6df539":"markdown","cd9ce533":"markdown","2c0e320e":"markdown","4689954c":"markdown","159fbe51":"markdown","a0052595":"markdown","fb1e9523":"markdown","b0f61ad1":"markdown","2697670e":"markdown","5bb39919":"markdown","eb88512b":"markdown","f5ab28c9":"markdown","f62b6f31":"markdown","b15f5ac8":"markdown","76851868":"markdown","11428f97":"markdown","6924a94f":"markdown","2c85c05a":"markdown","daceb3df":"markdown","8a46eac5":"markdown","81b42588":"markdown","4c8252dc":"markdown","b151e0a5":"markdown","62a2e154":"markdown","2df2f519":"markdown","1955ce9e":"markdown","2fd6e1bb":"markdown","a54ddfe2":"markdown","696186e4":"markdown"},"source":{"40c7f9ae":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\npd.options.mode.chained_assignment = None","de250a51":"nobel = pd.read_csv('\/kaggle\/input\/nobel-prize-from-1901-till-2020\/nobel_final.csv')","30a876e2":"nobel.head()","90fe280c":"nobel_bron_country = nobel['born_country_code'].value_counts().to_frame()\nnobel_bron_country = nobel_bron_country[nobel_bron_country['born_country_code'] >= 10]","f7ec8fca":"plt.figure(figsize=(15, 5))\nsns.barplot(x = nobel_bron_country.index , y = 'born_country_code' ,data = nobel_bron_country)\nplt.xlabel('Country Code')\nplt.ylabel('Number of Nobel winner')\nplt.show()","c1e6f2d2":"imigrate_nobel_winner = nobel.loc[(nobel['born_country_code'] != nobel['died_country_code'])]\nimigrate_nobel_winner.dropna(subset=['died_country_code'] , inplace=True)\nprint( str(len(imigrate_nobel_winner)) + ' Nobel winners that bron country and died country are diffrent')\nimigrate_nobel_winner_born_country = imigrate_nobel_winner['born_country_code'].value_counts().to_frame()\nimigrate_nobel_winner_born_country = imigrate_nobel_winner_born_country[imigrate_nobel_winner_born_country['born_country_code'] >= 5]","06cf67a4":"plt.figure(figsize=(15, 5))\nsns.barplot(x = imigrate_nobel_winner_born_country.index , y = 'born_country_code' ,data = imigrate_nobel_winner_born_country)\nplt.xlabel('Country Code')\nplt.ylabel('Number of Nobel winner')\nplt.show()","8f09b924":"imigrate_nobel_winner_died_country = imigrate_nobel_winner['died_country_code'].value_counts().to_frame()\nimigrate_nobel_winner_died_country = imigrate_nobel_winner_died_country[imigrate_nobel_winner_died_country['died_country_code'] >= 5]","ea8e1893":"plt.figure(figsize=(15, 5))\nsns.barplot(x = imigrate_nobel_winner_died_country.index , y = 'died_country_code' ,data = imigrate_nobel_winner_died_country)\nplt.xlabel('Country Code')\nplt.ylabel('Number of Nobel winner')\nplt.show()","9157fa20":"imigrate_nobel_winner_gender = imigrate_nobel_winner['gender'].value_counts().to_frame()","fdba7933":"plt.figure(figsize=(15, 5))\nsns.barplot(x = imigrate_nobel_winner_gender.index , y = 'gender' ,data = imigrate_nobel_winner_gender)\nplt.xlabel('Gender')\nplt.ylabel('Number of Nobel winner')\nplt.show()","ececa6c8":"nobel_winner_gender = nobel['gender'].value_counts().to_frame()","b941236b":"plt.figure(figsize=(15, 5))\nsns.barplot(x = nobel_winner_gender.index , y = 'gender' ,data = nobel_winner_gender)\nplt.xlabel('Gender')\nplt.ylabel('Number of Nobel winner')\nplt.show()","c15f20c2":"nobel_winner_year = nobel['year'].value_counts(ascending = True).to_frame()\nnobel_winner_year = nobel_winner_year[nobel_winner_year['year'] >= 10]","74bcabe0":"plt.figure(figsize=(20, 5))\nsns.barplot(x = nobel_winner_year.index , y = 'year' ,data = nobel_winner_year)\nplt.xlabel('Year')\nplt.ylabel('Number of Prize')\nplt.xticks(rotation = 90)\nplt.show()","a3bea096":"each_year_gender = nobel.groupby('year')['gender'].value_counts().to_frame()\neach_year_gender.columns = ['number of winner']\neach_year_gender.reset_index(inplace=True)\neach_year_female = each_year_gender[(each_year_gender['gender'] == 'female') & (each_year_gender['number of winner'] >= 1 )]","776cfe76":"plt.figure(figsize=(20, 5))\nsns.barplot(x = each_year_female.year , y = 'number of winner' ,data = each_year_female)\nplt.xlabel('Year')\nplt.ylabel('Number of woman winner')\nplt.xticks(rotation = 90)\nplt.show()","283d494b":"each_year_male = each_year_gender[(each_year_gender['gender'] == 'male') & (each_year_gender['number of winner'] >= 10 )]","5878acae":"plt.figure(figsize=(20, 5))\nsns.barplot(x = each_year_male.year , y = 'number of winner' ,data = each_year_male)\nplt.xlabel('Year')\nplt.ylabel('Number of man winner')\nplt.xticks(rotation = 90)\nplt.show()","4175386c":"winner_category = nobel['category'].value_counts().to_frame()","1cb5a3d6":"plt.figure(figsize=(20, 5))\nsns.barplot(x = winner_category.index , y = 'category' ,data = winner_category)\nplt.xlabel('Category')\nplt.ylabel('Number of prize')\nplt.show()","8a982b0b":"category_and_gender_winner = nobel.groupby('category')['gender'].value_counts().to_frame()\ncategory_and_gender_winner.columns = ['number of winners']\ncategory_and_gender_winner.reset_index(inplace=True)","30fd95cc":"plt.figure(figsize=(20, 5))\nsns.barplot(x = 'category' , y = 'number of winners' , hue = 'gender' ,data = category_and_gender_winner)\nplt.xlabel('Category')\nplt.ylabel('Number of winners')\nplt.show()","d5ffc035":"nobel_university_winner = nobel['name_of_university'].value_counts().to_frame()\nnobel_university_winner = nobel_university_winner[nobel_university_winner['name_of_university'] >= 10]","ec8dc8d8":"plt.figure(figsize=(10, 5))\nsns.barplot(y = nobel_university_winner.index , x = 'name_of_university' ,data = nobel_university_winner ,palette = sns.color_palette('Set2'))\nplt.xlabel('Number of Prize')\nplt.ylabel('University')\nplt.show()","e59a0a52":"nobel_city_winner = nobel['city_of_university'].value_counts().to_frame()\nnobel_city_winner = nobel_city_winner[nobel_city_winner['city_of_university'] >= 10]","2aa990de":"plt.figure(figsize=(10, 5))\nsns.barplot(y = nobel_city_winner.index , x = 'city_of_university' ,data = nobel_city_winner ,palette = sns.color_palette('Set2'))\nplt.xlabel('Number of Prize')\nplt.ylabel('City of University')\nplt.show()","3a6f1a1d":"nobel_country_winner = nobel['country_of_university'].value_counts().to_frame()\nnobel_country_winner = nobel_country_winner[nobel_country_winner['country_of_university'] >= 5]","2a3db4ce":"plt.figure(figsize=(10, 5))\nsns.barplot(y = nobel_country_winner.index , x = 'country_of_university' ,data = nobel_country_winner ,palette = sns.color_palette('Set2'))\nplt.xlabel('Number of Prize')\nplt.ylabel('Country of University')\nplt.show()","9391d6c6":"fulprize_university = nobel[(nobel['name_of_university'] == 'University of California')\n                          | (nobel['name_of_university'] == 'Harvard University')\n                          | (nobel['name_of_university'] == 'Massachusetts Institute of Technology (MIT)')\n                          | (nobel['name_of_university'] == 'Stanford University')\n                          | (nobel['name_of_university'] == 'University of Chicago')\n                          | (nobel['name_of_university'] == 'University of Cambridge')\n                          | (nobel['name_of_university'] == 'California Institute of Technology (Caltech)')\n                          | (nobel['name_of_university'] == 'Columbia University')\n                          | (nobel['name_of_university'] == 'Princeton University')\n                          | (nobel['name_of_university'] == 'Rockefeller University')\n                          | (nobel['name_of_university'] == 'MRC Laboratory of Molecular Biology')]\nuniversity_and_category = fulprize_university.groupby('name_of_university')['category'].value_counts().to_frame()\nuniversity_and_category.columns = ['number of prize']\nuniversity_and_category.reset_index(inplace= True)","d56d0907":"plt.figure(figsize=(10, 5))\nsns.barplot(y = 'name_of_university' , x = 'number of prize' , hue = 'category' , dodge = False ,data = university_and_category ,palette = sns.color_palette('Set2'))\nplt.xlabel('Number of Prize')\nplt.ylabel('Country of University')\nplt.show()","003dfb9b":"nobel_country_winner_new = nobel_country_winner[nobel_country_winner['country_of_university'] >= 10]\nfulprize_university_country = nobel[(nobel['country_of_university'] == 'USA')\n                          | (nobel['country_of_university'] == 'United Kingdom')\n                          | (nobel['country_of_university'] == 'Germany')\n                          | (nobel['country_of_university'] == 'France') \n                          | (nobel['country_of_university'] == 'Switzerland')\n                          | (nobel['country_of_university'] == 'Japan')\n                          | (nobel['country_of_university'] == 'Sweden')\n                          | (nobel['country_of_university'] == 'the Netherlands')]\ncountry_university_and_category = fulprize_university_country.groupby('country_of_university')['category'].value_counts().to_frame()\ncountry_university_and_category.columns = ['Number of Prize']\ncountry_university_and_category.reset_index(inplace=True)\n","fbcd3655":"plt.figure(figsize=(10, 5))\nsns.barplot(y = 'country_of_university' , x = 'Number of Prize' , hue = 'category' ,dodge = False ,data = country_university_and_category ,palette = sns.color_palette('Set2'))\nplt.xlabel('Number of Prize')\nplt.ylabel('Country of University')\nplt.show()","5758a0d4":"born_month_winner = nobel['born_month'].value_counts().to_frame()","294037df":"sns.set_style(\"darkgrid\")\nplt.figure(figsize=(10, 5))\nsns.barplot(y = born_month_winner.index , x = 'born_month' ,data = born_month_winner ,palette = sns.color_palette('Set2'))\nplt.xlabel('Number of Nobel Winners Born Month')\nplt.ylabel('Month')\nplt.show()","e114276b":"print(str(nobel['age'].mean()) + ' is average of age in all of Nobel winners from 1901 untill now.')","0f5bd639":"plt.figure(figsize=(15, 5))\nsns.distplot(nobel['age'])\nplt.xlabel('Age')\nplt.title('Age get prize distribution')\nplt.show()","e00e38d6":"plt.figure(figsize=(15, 5))\nsns.distplot(nobel['age_get_prize'])\nplt.xlabel('Age get prize')\nplt.title('Age get prize distribution')\nplt.show()","1aadfd3b":"plt.figure(figsize=(15, 5))\nplot = sns.jointplot(x='age', y='age_get_prize' , kind='hex' ,data=nobel)\nplot.set_axis_labels('x', 'y', fontsize=12)\nplot.ax_joint.set_xlabel('Age')\nplot.ax_joint.set_ylabel('Age of winner when get prize')\nplt.tight_layout()","0a43d4be":"plt.figure(figsize=(15, 5))\nsns.boxplot(x='gender', y='age', data=nobel)\nplt.ylabel('Age')\nplt.xlabel('Gender')\nplt.title('Age average seprated by gender')\nplt.show()","fa8c22e8":"plt.figure(figsize=(15, 5))\nsns.swarmplot(x='gender', y='age',hue = 'category', dodge=True , data=nobel)\nplt.ylabel('Age')\nplt.xlabel('Gender')\nplt.title('Every winner age seperated by gender and prize category')\nplt.show()","5bb8a14d":"plt.figure(figsize=(15, 5))\nsns.boxplot(x='gender', y='age_get_prize', data=nobel)\nplt.ylabel('Age when get prize')\nplt.xlabel('Gender')\nplt.title('Age average seprated by gender')\nplt.show()","460d97dc":"plt.figure(figsize=(15, 5))\nsns.swarmplot(x='gender', y='age_get_prize',hue = 'category', dodge=True , data=nobel)\nplt.ylabel('Age when get prize')\nplt.xlabel('Gender')\nplt.title('Every winner age seperated by gender and prize category')\nplt.show()","72ae726e":"plt.figure(figsize=(15, 5))\nsns.kdeplot(nobel.age[nobel.gender=='male'], label='men age', shade=True)\nsns.kdeplot(nobel.age_get_prize[nobel.gender=='male'], label='men age get prize', shade=True)\nplt.xlabel('Age')\nplt.title('Diffrence between age and age when get prize for men')","3a306987":"plt.figure(figsize=(15, 5))\nsns.kdeplot(nobel.age[nobel.gender=='female'], label='women age', shade=True)\nsns.kdeplot(nobel.age_get_prize[nobel.gender=='female'], label='women age get prize', shade=True)\nplt.xlabel('Age')\nplt.title('Diffrence between age and age when get prize for women')","9fa74ecb":"plt.figure(figsize=(15, 6))\nsns.kdeplot(nobel.age[nobel.category == 'chemistry'], label='chemistry', shade=True)\nsns.kdeplot(nobel.age[nobel.category == 'economics'], label='economics', shade=True)\nsns.kdeplot(nobel.age[nobel.category == 'peace'], label='peace', shade=True)\nsns.kdeplot(nobel.age[nobel.category == 'literature'], label='literature', shade=True)\nsns.kdeplot(nobel.age[nobel.category == 'physics'], label='physics', shade=True)\nsns.kdeplot(nobel.age[nobel.category == 'medicine'], label='medicine', shade=True)\nsns.kdeplot(nobel.age[nobel.category == 'chemistry'], label='chemistry', shade=True)\nplt.xlabel('Age')\nplt.title('Age distribution on category of winners')","add067fa":"plt.figure(figsize=(20, 10))\n\nplt.subplot(321)\nsns.kdeplot(nobel.age[nobel.category == 'chemistry'], label='chemistry', shade=True)\n\nplt.title('Chemist age distribution')\n\nplt.subplot(322)\nsns.kdeplot(nobel.age[nobel.category == 'medicine'], label='medicine', shade=True)\n\nplt.title('Doctors age distribution')\n\nplt.subplot(323)\nsns.kdeplot(nobel.age[nobel.category == 'physics'], label='physics', shade=True)\n\nplt.title('Physicist age distribution')\n\nplt.subplot(324)\nsns.kdeplot(nobel.age[nobel.category == 'literature'], label='literature', shade=True)\n\nplt.title('Literalist age distribution')\n\n\nplt.subplot(325)\nsns.kdeplot(nobel.age[nobel.category == 'peace'], label='peace', shade=True)\nplt.xlabel('Age')\nplt.title('Peacist age distribution')\n\nplt.subplot(326)\nsns.kdeplot(nobel.age[nobel.category == 'economics'], label='economics', shade=True)\nplt.xlabel('Age')\nplt.title('Economist age distribution')","375f8925":"who_won_more_than_one = nobel[nobel.duplicated(subset=['firstname','surname'], keep= False)]\\\n[[\"firstname\",\"surname\",\"year\", \"age_get_prize\", \"gender\",\"born_country_code\", \"died_country_code\"]].reset_index()\nwho_won_more_than_one[\"difference_between_two_prize\"] = who_won_more_than_one.groupby(\"surname\")[\"year\"].diff().abs()\nwho_won_more_than_one.bfill()","bdc9d7dd":"plt.figure(figsize = (16, 7))\nsns.barplot(x= \"surname\", y= \"difference_between_two_prize\", hue= \"gender\",\n            dodge=False, data= who_won_more_than_one, palette=\"Set1\")\nplt.xlabel(\"Surname\")\nplt.ylabel(\"Years Betwen two Prizes\")\nplt.show()","56de4f86":"### Top Country of universities that Nobel winners studied there","a60e2edf":"### Distribution of Age Winners VS Age of winners when get prize","92a57e4f":"### Ratio of Winners","3d565155":"### Age of winners per category","91753579":"As expected **USA**, Great Britain and Deutschland(Germany) had most immigrant admissions","7b36ecde":"### Distribution of winners per Months","2cbd11d7":"### Top Universities that Nobel winners studied there","e10a452b":"The USA United Kingdom and Germany are top Countries of universities that Nobel winners studied there","9e19cb77":"It's similar to the mean of ages bus distance between the mean of Men's and Women's when they get prize proportional of ages is less ","8a6b58db":"**USA, Great Britain, Deutschland(Germany)** had the most wins in these years with remarkable distance","becffa38":"### Years that men's won more than 10 Prize and number of Prize per year","af6df539":"### Age of winners when they get Prize per category","cd9ce533":"Women's won most prizes in Peace, Literature, and Medicine but Men's in Physics, Medicine and Chemistry are favorite fields","2c0e320e":"### Average age seprated by gender","4689954c":"### Countries with the highest number of immigrant admissions","159fbe51":"### Immigrants that won Nobel Prize OR winners that Immigrants","a0052595":"As you see the distribution of Age are normal but skewed to left and distribution of Age when the get prize is normal, A glance reveals us that they have positive relationship and correlation","fb1e9523":"### Top Universities and distribution of category","b0f61ad1":"Men's mean of ages is about 81 years and Women's mean is about 73 ","2697670e":"### Category By Gender","5bb39919":"### Kernel density estimation of Men's age and age when they get prize","eb88512b":"Medicine, Physics and Chemistry are fields with the highest number of prizes ","f5ab28c9":"### Most Immigrants","f62b6f31":"### Kernel density estimation of Women's age and age when they get prize","b15f5ac8":"### Who win the prize more than one time and gender variety","76851868":"### Most Nobel Winner Countries","11428f97":"### Number of prize per category","6924a94f":"### Distribution of Age Winners","2c85c05a":"### Average age when they get Prize seprated by gender","daceb3df":"### Top city of universities that Nobel winners studied there","8a46eac5":"Cambridge MA, New York, and Cambridge are top cities of universities that Nobel winners studied there","81b42588":"### Distribution of Age Winners when they Won prize ","4c8252dc":"University of California, Harvard University, and Massachusetts Institute of Technology (MIT) are top 3 Universities that Nobel winners studied there","b151e0a5":"We don't have any information about winners that immigrates or when they won the prize then immigrates, this research population reveals us that they didn't die in homeland","62a2e154":"### Kernel density estimation of age per category","2df2f519":"**Poland, Deutschland(Germany) and Great Britain** had most immigrants that won Nobel prize.","1955ce9e":"### Top Counties and distribution of category","2fd6e1bb":"More than 850 Men won this prize and less than 100 Women won this prize","a54ddfe2":"### Years that women's won more than One Prize and number of Prize per year","696186e4":"### Kernel density estimation of Men's age and age when they get prize"}}