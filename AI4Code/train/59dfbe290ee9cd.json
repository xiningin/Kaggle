{"cell_type":{"9caa9829":"code","fbff0f48":"code","6738bc9d":"code","de20539e":"code","d45f4ce0":"code","ac1fe8e6":"code","1902aee0":"code","c2cb9a12":"code","a5b99dd6":"code","a8a30b92":"code","c2f3cadb":"markdown","a2afcd3c":"markdown","a7816c5b":"markdown","0f5caa42":"markdown","c73f498a":"markdown","3e167bd5":"markdown","424bdd97":"markdown","e73a522e":"markdown","a04a978d":"markdown"},"source":{"9caa9829":"%matplotlib inline\nfrom sklearn.datasets import load_digits\ndigits = load_digits()\n","fbff0f48":"# Print to show there are 1797 images (8 by 8 images for a dimensionality of 64)\nprint(\"Image Data Shape\" , digits.data.shape)\n\n# Print to show there are 1797 labels (integers from 0-9)\nprint(\"Label Data Shape\", digits.target.shape)\n","6738bc9d":"import numpy as np \nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(20,4))\nfor index, (image, label) in enumerate(zip(digits.data[0:5], digits.target[0:5])):\n    plt.subplot(1, 5, index + 1)\n    plt.imshow(np.reshape(image, (8,8)), cmap=plt.cm.gray)\n    plt.title('Training: %i\\n' % label, fontsize = 20)\n","de20539e":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(digits.data, digits.target, test_size=0.25, random_state=0)\n","d45f4ce0":"from sklearn.linear_model import LogisticRegression\nlogisticRegr = LogisticRegression()\nlogisticRegr.fit(x_train, y_train)\n# Returns a NumPy Array\n# Predict for One Observation (image)\nlogisticRegr.predict(x_test[0].reshape(1,-1))\n\n","ac1fe8e6":"# Predict for Multiple Observations (images) at Once\nlogisticRegr.predict(x_test[0:10])\n","1902aee0":"# Make predictions on entire test data\npredictions = logisticRegr.predict(x_test)\n","c2cb9a12":"# Use score method to get accuracy of model\nscore = logisticRegr.score(x_test, y_test)\nprint(score)\n","a5b99dd6":"import numpy as np \nimport seaborn as sns\nfrom sklearn import metrics\ncm = metrics.confusion_matrix(y_test, predictions)\nplt.figure(figsize=(9,9))\nsns.heatmap(cm, annot=True, fmt=\".3f\", linewidths=.5, square = True, cmap = 'Blues_r');\nplt.ylabel('Actual label');\nplt.xlabel('Predicted label');\nall_sample_title = 'Accuracy Score: {0}'.format(score)\nplt.title(all_sample_title, size = 15);\nplt.savefig('toy_Digits_ConfusionSeabornCodementor.png')\n#plt.show();\n","a8a30b92":"cm = metrics.confusion_matrix(y_test, predictions)\nplt.figure(figsize=(9,9))\nplt.imshow(cm, interpolation='nearest', cmap='Pastel1')\nplt.title('Confusion matrix', size = 15)\nplt.colorbar()\ntick_marks = np.arange(10)\nplt.xticks(tick_marks, [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], rotation=45, size = 10)\nplt.yticks(tick_marks, [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], size = 10)\nplt.tight_layout()\nplt.ylabel('Actual label', size = 15)\nplt.xlabel('Predicted label', size = 15)\nwidth, height = cm.shape\n\nfor x in range(width):\n    for y in range(height):\n        plt.annotate(str(cm[x][y]), xy=(y, x), \n                    horizontalalignment='center',\n                    verticalalignment='center')\nplt.savefig('toy_Digits_ConfusionMatplotlibCodementor.png')\n#plt.show()\n","c2f3cadb":"**Splitting Data into Training and Test Sets (Digits Dataset)**","a2afcd3c":"**Scikit-learn 4-Step Modeling Pattern (Digits Dataset)**","a7816c5b":"**Loading the Data (Digits Dataset)**\n","0f5caa42":"Step 1. Import the model you want to use\nIn sklearn, all machine learning models are implemented as Python classes\nStep 2. Make an instance of the Model\nStep 3. Training the model on the data, storing the information learned from the data\nModel is learning the relationship between x (digits) and y (labels)\nStep 4. Predict the labels of new data (new images)\nUses the information the model learned during the model training process\n","c73f498a":"**Measuring Model Performance (Digits Dataset)**","3e167bd5":"**Showing the Images and Labels (Digits Dataset)**","424bdd97":"Now that you have the dataset loaded you can use the commands below","e73a522e":"**Confusion Matrix (Digits Dataset)**","a04a978d":"The digits dataset is one of datasets scikit-learn comes with that do not require the downloading of any file from some external website. The code below will load the digits dataset."}}