{"cell_type":{"7f0930e8":"code","4cb5fb90":"code","09d0ca85":"code","061e53ab":"code","fd6cfc87":"code","9810e69d":"code","63faa03c":"code","764588b7":"code","581d2fa2":"code","f5abe18f":"code","1c4a1893":"code","7b275b41":"code","28ae6c28":"code","95f63332":"code","e0828e89":"code","d88cd749":"code","bd5fe64d":"code","7c83ec2c":"code","2ddac5ff":"code","bf8f4eaa":"code","abb45105":"code","04de8678":"code","e7f0d17e":"code","df925071":"code","7e72aa09":"code","e55c96a6":"code","bd68e3cf":"code","c187d837":"code","9f6d90f1":"code","dab1d7fa":"code","e2e546a4":"code","000db0a6":"code","b3186c96":"code","81c62073":"code","0618f68f":"code","9ffaab03":"code","45912489":"code","8be49cb4":"code","41f3ddb5":"code","8e8dac91":"markdown","048c5cf5":"markdown","676598a5":"markdown","43a3ce59":"markdown","2575dfca":"markdown","afcdfe32":"markdown","b926f8a0":"markdown","d5e372eb":"markdown","0618702b":"markdown","7f61d180":"markdown","2da78f2c":"markdown","525d9dfd":"markdown","8f550bb7":"markdown","1502ba48":"markdown","3100ecd2":"markdown","057e5ea0":"markdown","5af2c385":"markdown","eba00910":"markdown","b85a2a6a":"markdown","779df878":"markdown","9570e739":"markdown","961509a4":"markdown","13b7ce72":"markdown","d29b039e":"markdown","3872831c":"markdown","8fe8d7b3":"markdown","d70396c8":"markdown","87b19bf6":"markdown","63535d10":"markdown","bbc33ca0":"markdown","7bc9ff93":"markdown","9f50cb36":"markdown","c8e50a86":"markdown","bf17c0ce":"markdown","842c9573":"markdown","8b381c79":"markdown","8fe58eea":"markdown","22e4d4c7":"markdown","a7d535af":"markdown","55abec72":"markdown","4fcd3d7f":"markdown"},"source":{"7f0930e8":"import os #paths to file\nimport numpy as np # linear algebra\nimport pandas as pd # data processing\nimport warnings# warning filter\n\n\n#ploting libraries\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n\n#feature engineering\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.preprocessing import LabelEncoder\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection  import cross_val_score as CVS\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import recall_score\n\n\n#ML models\nfrom xgboost import XGBClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\n\n#default theme\nsns.set(context='notebook', style='darkgrid', palette='deep', font='sans-serif', font_scale=1, color_codes=False, rc=None)\n\n#warning hadle\nwarnings.filterwarnings(\"always\")\nwarnings.filterwarnings(\"ignore\")","4cb5fb90":"#list all files under the input directory\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","09d0ca85":"path = \"\/kaggle\/input\/credit-card-customers\/BankChurners.csv\"","061e53ab":"df = pd.read_csv(path)\ndf.head()","fd6cfc87":"credit_df =  df.copy()\ncredit_df = credit_df.iloc[:,1:21]\ncredit_df.head(2)","9810e69d":"print(f\"Dataset (row, col): {credit_df.shape}\")","63faa03c":"#column information\ncredit_df.info(verbose=True, null_counts=True)","764588b7":"#summary statistics\ncredit_df.describe()","581d2fa2":"#list of all the numeric columns\nnum = credit_df.select_dtypes('number').columns.to_list()\n#list of all the categoric columns\ncat = credit_df.select_dtypes('object').columns.to_list()","f5abe18f":"for i in cat:\n    print(f\"{i}:\\n {credit_df[i].unique()}\\n\\n\")","1c4a1893":"[round(credit_df[category].value_counts()\/credit_df.shape[0]*100,2) for category in cat[:]]","7b275b41":"credit_df = credit_df.replace({'Unknown': None})\ncredit_df.info()","28ae6c28":"print(\"Countwise:\\n\\n\",credit_df.isnull().sum().sort_values(ascending=False),\"Percentage (%):\\n\\n\",credit_df.isnull().sum()\/credit_df.shape[0] *100)","95f63332":"credit_df['Education_Level'] = credit_df['Education_Level'].fillna(\ncredit_df['Education_Level'].dropna().mode().values[0])\n\ncredit_df['Income_Category'] = credit_df['Income_Category'].fillna(\ncredit_df['Income_Category'].dropna().mode().values[0])\n\ncredit_df['Marital_Status'] = credit_df['Marital_Status'].fillna(\ncredit_df['Marital_Status'].dropna().mode().values[0])\n\n[round(credit_df[category].value_counts()\/credit_df.shape[0]*100,2) for category in cat[:]]","e0828e89":"credit_df.info()","d88cd749":"credit_df.iloc[10113,:]","bd5fe64d":"credit_df.iloc[3,:]","7c83ec2c":"def precent_maker(plot, feature):\n    total = len(feature)\n    for p in plot.patches:\n        percentage = '{:.1f}%'.format(100 * p.get_height()\/total)\n        x = p.get_x() + p.get_width() \/ 2 - 0.05\n        y = p.get_y() + p.get_height()\n        ax.annotate(percentage, (x, y), size = 12)\n    plt.show()","2ddac5ff":"plt.figure(figsize=(6,4))\nax = sns.countplot(x='Attrition_Flag' , data=credit_df ,palette='coolwarm')\nplt.xticks(size = 12)\nplt.xlabel('Attrition Flag', fontsize=14)\nplt.ylabel('count', fontsize=14)\nplt.yticks(size = 12)\nplt.title(\"Attrition\", size = 15)\nprecent_maker(ax, credit_df.Attrition_Flag)","bf8f4eaa":"for i in cat[1:]:\n    plt.figure(figsize=(10,4))\n    ax = sns.countplot(x=i , data=credit_df ,palette='rainbow_r')\n    plt.xticks(size = 12)\n    plt.xlabel(i, fontsize=14)\n    plt.ylabel('count', fontsize=14)\n    plt.yticks(size = 12)\n    plt.title(i, size = 15)\n    precent_maker(ax, credit_df[i])","abb45105":"for i in cat[1:]:\n    plt.figure(figsize=(10,4))\n    ax = sns.countplot(x=i , data=credit_df, hue = 'Attrition_Flag' ,palette='rainbow_r')\n    plt.xticks(size = 12)\n    plt.xlabel(i, fontsize=14)\n    plt.ylabel('count', fontsize=14)\n    plt.yticks(size = 12)\n    plt.title(i, size = 15)\n    plt.show()","04de8678":"func = lambda x: round(100*x.count()\/df.shape[0],2)\n[ pd.pivot_table(credit_df, index=[col,\"Attrition_Flag\"], aggfunc = {col:func}) for col in cat[1:]]\n","e7f0d17e":"for numeric in credit_df[num]:\n# I personally prefer a vertical view and a cyan color\n    sns.boxplot(data=credit_df[numeric],orient=\"v\", color = 'c')\n    plt.title(numeric)\n    plt.show()\n    ","df925071":"credit_df['Attrition_Flag'] = credit_df.Attrition_Flag.replace(to_replace=['Existing Customer', 'Attrited Customer'], value=[0, 1])\ncredit_df.tail(20)","7e72aa09":"#plotting the correlation matrix\nsns.heatmap(credit_df.corr() ,cmap='cubehelix_r')","e55c96a6":"#correlation table\ncorr = credit_df.corr()\ncorr.style.background_gradient(cmap='viridis').set_precision(2)","bd68e3cf":"credit_df  = credit_df.drop(['Gender', 'Marital_Status','Income_Category'],axis=1)\ncredit_df.shape","c187d837":"#one hot encoding\ncols =  credit_df.select_dtypes('object').columns.to_list()\n# Apply one-hot encoder\nOH_encoder = OneHotEncoder(handle_unknown='ignore', sparse=False)\ncredit_oh = pd.DataFrame(OH_encoder.fit_transform(credit_df[cols])).astype('int64')\n\n\n\n#get feature columns\ncredit_oh.columns = OH_encoder.get_feature_names(cols)\n\n# One-hot encoding removed index; put it back\ncredit_oh.index = credit_df.index\n\n# Add one-hot encoded columns to our main df new name: credit_fe (means feature engeenired) \ncredit_fe = pd.concat([credit_df, credit_oh], axis=1)\n","9f6d90f1":"# Dropping irrelevant columns\ncredit_fe = credit_fe.drop(cols,axis=1)","dab1d7fa":"credit_fe.head()","e2e546a4":"# Dropping irrelevant columns\ndelete = ['Education_Level_College','Education_Level_Graduate','Education_Level_High School','Education_Level_Post-Graduate','Education_Level_Uneducated','Card_Category_Blue','Card_Category_Gold','Card_Category_Silver']\ncredit_fe = credit_fe.drop(delete,axis=1)\ncredit_fe.head()","000db0a6":"# Dropping weakest correlation columns\ndelete2 = ['Customer_Age','Dependent_count','Months_on_book','Credit_Limit','Avg_Open_To_Buy']\ncredit_fe = credit_fe.drop(delete2,axis=1)\ncredit_fe.head()","b3186c96":"y = credit_fe['Attrition_Flag']\nX = credit_fe.drop('Attrition_Flag', axis = 1)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.8, random_state = 0)","81c62073":"#model\nKNN = KNeighborsClassifier(n_neighbors = 7)\n#fit\nKNN.fit(X_train, y_train)\n\n#predict\ny_predict = KNN.predict(X_test)\n\n# confution matrix\nprint(f\"Confution Matrix:\\n\\n\")\nprint(confusion_matrix(y_test, y_predict))\n\n#  prediction Summary \nprint(classification_report(y_test, y_predict))\n\n# Accuracy score\nKNN_SC = recall_score(y_test,y_predict)\nprint(f\"we have identified succesfully {round(KNN_SC*100,2)}% of  all Attrited customers\")","0618f68f":"DT = DecisionTreeClassifier()\nDT.fit(X_train, y_train)\n\ny_predict = DT.predict(X_test)\n\n# confution matrix\nprint(f\"Confution Matrix:\\n\\n\")\nprint(confusion_matrix(y_test, y_predict))\n\n#  prediction Summary \nprint(classification_report(y_test, y_predict))\n\n# Accuracy score\nDT_SC = recall_score(y_test,y_predict)\nprint(f\"we have identified succesfully {round(KNN_SC*100,2)}% of  all Attrited customers\")","9ffaab03":"RF = RandomForestClassifier()\nRF.fit(X_train, y_train)\n\ny_predict = RF.predict(X_test)\n\n# confution matrix\nprint(f\"Confution Matrix:\\n\\n\")\nprint(confusion_matrix(y_test, y_predict))\n\n#  prediction Summary \nprint(classification_report(y_test, y_predict))\n\n# Accuracy score\nRF_SC = recall_score(y_test,y_predict)\nprint(f\"we have identified succesfully {round(RF_SC*100,2)}% of  all Attrited customers\")","45912489":"XGB = XGBClassifier()\nXGB.fit(X_train, y_train)\n\ny_predict = XGB.predict(X_test)\n\n# confution matrix\nprint(f\"Confution Matrix:\\n\\n\")\nprint(confusion_matrix(y_test, y_predict))\n\n#  prediction Summary \nprint(classification_report(y_test, y_predict))\n\n# Accuracy score\nXGB_SC = recall_score(y_test,y_predict)\nprint(f\"we have identified succesfully {round(XGB_SC*100,2)}% of  all Attrited customers\")","8be49cb4":"NB = GaussianNB()\nNB.fit(X_train, y_train)\n\ny_predict = NB.predict(X_test)\n\n# confution matrix\nprint(f\"Confution Matrix:\\n\\n\")\nprint(confusion_matrix(y_test, y_predict))\n\n#  prediction Summary \nprint(classification_report(y_test, y_predict))\n\n# Accuracy score\nNB_SC = recall_score(y_test,y_predict)\nprint(f\"we have identified succesfully {round(NB_SC*100,2)}% of  all Attrited customers\")","41f3ddb5":"#list the model scores\nscores = [KNN_SC,DT_SC,RF_SC,XGB_SC,NB_SC]\n#make a percentage scake\nscores = [round(score*100,2) for score in scores] \n#Score data frame\nModels = pd.DataFrame({\n    'Model': [\"K Nearest Neighbors\",\"Decision Tree\",\"Random Forest\",\"XGBoost\", \"Naive Bayes\"],\n    'Score (%)': scores})\nModels.sort_values(by='Score (%)', ascending=False)","8e8dac91":"# Preprocessing and Data Analysis \ud83d\udcbb\n\n## first look at the data","048c5cf5":"### Numeric variables analysis:\nFrom those box plots we have a general idea for the distributions and important statsitical analysis of each numeric column (the numbers below are approximations):\n\n* **`Customer_Age`** - The age data is distibuted between 40 and 52 in the IQR with a few outlier point over 70 years old.\n* **`Dependent_count\t`** - IQR is between 1 and 3 (median - 2) max amount is 5 and min is 0.\n* **`Months_on_book`** - IQR is between 30 and 40 (median - 35) there are outliers above 55 and below 18.\n* **`Total_Relationship_Count`** - IQR is between 3 and 5 (median - 4) max amount is 6 and min is 1.\n* **`Months_Inactive_12_mon`** - IQR is between 2 and 3 there are outliers above 4(5,6) and below 1 (0).\n* **`Contacts_Count_12_mon`** - IQR is between 2 and 3 there are outliers above 4(5,6) and below 1 (0).\n* **`Credit_Limit`** - IQR is between 2500 and 11000 (median - 5000) there are outliers above 24000 and below 1000.\n* **`Total_Revolving_Bal`** - IQR is between 400 and 1800 (median - 1300) max amount is 2500 and min is 0.\n* **`Avg_Open_To_Buy`** - IQR is between 1000 and 10000 (median - 3500) there are outliers above 22500.\n* **`Total_Amt_Chng_Q4_Q1`** - IQR is between 0.6 and 0.9 (median - 0.7) there are outliers above 1.2 and below 0.3.\n* **`Total_Trans_Amt`** - IQR is between 2500 and 5000 (median - 4500) there are outliers above 8500.\n* **`Total_Trans_Ct`** - IQR is between 40 and 80 (median - 65) there are outliers above 135.\n* **`Total_Ct_Chng_Q4_Q1\t`** -  IQR is between 0.55 and 0.8 (median - 0.65) there are outliers above 1.2 and below 0.25.\n* **`Avg_Utilization_Ratio`** - IQR is between 0.02 and 0.5 (median - 0.18) max amount is 1 and min is 0.\n\nNow that we have a proper idea of the distribution we can begin feature engineering.\n\n\n## Feature engineering \ud83d\udc68\u200d\ud83d\udd2c\n\nFirst of all let's turn `Attrition_Flag` to a numeric variable with 1 as `Attrited Customer` and 0 as `Existing Customer`.","676598a5":"**size of our data:**","43a3ce59":"## Decision Tree\n\n![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn:ANd9GcT7xJNKjwAixUHk9ESYhA4hcUZCcMfwBIYEkg&usqp=CAU)\n","2575dfca":"This concluds our feature engineering we now have the Attrition flag column and 11 independant variables.\n\n# Machine learning models\n\n![](https:\/\/cdn.dribbble.com\/users\/190345\/screenshots\/6540623\/machinelearning-illustration.gif)\nFirst of all we will divide our dataset into two variables X as the features we defined earlier and y as the Item_ `Attrition_Flag` the target value we want to predict.\n\n### Assumptions:\n\n* This is a classifiction problem so we will use Clustering methods.\n\n* Train test split will be a 8:2 ratio respectively.\n\n### Models we will use:\n\n1. K Nearest Neighbors\n2. Decision Tree\n3. Random Forest\n4. XGBoost\n5. Naive Bayes\n\n### The Process of Modeling the Data:\n\n1. Importing the model\n\n2. Fitting the model\n\n3. Predicting Loan Status\n\n4. Classification metrics.\n\n## Note \ud83d\udcdd\n\nour ai is to find attrited customrs so we need a model that can identify the most TP out of all the posititives.","afcdfe32":"# Conclusion:","b926f8a0":"| Column Name                | Value               | Meaning Example|\n|----------------------------|---------------------|-------------|\n| `Attrition_Flag`           | `Existing Customer` | The client already left the credit card service        |\n| `Customer_Age`             | `40`                | Middle aged, 40 years old            |\n| `Gender`                   | `F`                 | Female |\n| `Dependent_count`          | `4`                 | Has 3 little children and an old mother to financialy take care of |\n| `Education_Level`          | `High School`       | Finished high school, no academic degree            | \n| `Marital_Status`           | `Married`           | Has a husband that might help financially            |\n| `Income_Category`          | `Less than 40K`     | Has an anual income of 37,000 dollars           |\n| `Card_Category`            | `Blue`              | Had the blue credit card  |\n| `Months_on_book`           | `34`                | Had the credit service for 2 years and 10 months so far |\n| `Total_Relationship_Count` | `3`                 | Had an account in the bank and the credit card service, and a deposit account for her children (3 Relationships)|\n| `Months_Inactive_12_mon`   | `4`                 | The credit card was inactive for 4 months total (Average)      |\n| `Contacts_Count_12_mon`    | `1`                 | The client reached the bank once |\n| `Credit_Limit`             | `3313`              | Monthly credit limit of 3,313 dollars        | \n| `Total_Revolving_Bal`      | `2517`              | In the period of the card's service the client had a revolving balance that sumed up to 2,517 dollars            |\n| `Avg_Open_To_Buy`          | `796`               | The amount left to use in the past 12 months is 796 dollars |\n| `Total_Amt_Chng_Q4_Q1`     | `1.405`             | The amount spent in the 4th quarter was around 40% higher then the 1st Quarter      |\n| `Total_Trans_Amt`          | `1171`              | The transactions made are 1,171 dollars in total            |\n| `Total_Trans_Ct`           | `20`                | The transactions are 20 in total            |\n| `Total_Ct_Chng_Q4_Q1`      | `2.333`             | The transactions rate in the 4th Quarter is more then twice then the 1st Quarter    |\n| `Avg_Utilization_Ratio`    | `0.760`             | Had an 76% card usage in average (credit limit\/revolving balnce)  |","d5e372eb":"## KNN\n\n![](https:\/\/machinelearningknowledge.ai\/wp-content\/uploads\/2018\/08\/Value-of-K.gif)\n\n","0618702b":"Now back to our categorical variables:\n\nThe decision was to drop `Gender`, `Marital_Status` and `Inocome_Category` that showed no real connection.","7f61d180":"As written see above a comparison can be made berween those profiles but the goal of those examples are to explain clearly the attributes of the data.","2da78f2c":"`Education_Level`,`Income_Category`,`Income_Category` are categorical columns, therefore we will impute missing values with the mode value.","525d9dfd":"## Naive Bayse\n\n![](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAPwAAADICAMAAAD7nnzuAAAB\/lBMVEX\/\/\/+np6fq6urHx8eqqqrKysrt7e0A\/\/+hoaH\/AACmpqa6urp0dHT\/\/\/uGhob8\/\/\/X19eQkJDy8vL4+PiJiYmamprj4+P3\/\/\/w5OTRAAAA0dH\/9Mt+fn6Xl5e+vr7b29vlAACpxdns8dv\/\/+21pLVtn72Ra5F5AHmAAIBod3sAcpr9+fDo8fbz7OXi5+778eKAWy9GoMj\/\/NtALi5QMjmu1urTy6+BdUf3w49Ch6zMuYdXiMPWt3RUjq3Pr2c5mcUbNFBvTziZx+Lo28\/L095cfn4Aj5MAs7Wtk35\/hpn73Z0MYZKni1JrttdAAAAmHjPEq4N4ZF5hYWP+6LUANmm2r6Prto0AJ0bzyZTXu5pWZq9RR1DMo4SKo8Nvi6RLOmiheUlZRT53oM2AboWednGWinFoXmetvstBOFjt2sA\/KxaKtNJMWWrCZ2e9m2R\/teCTeWdkcIdWVIOreWmogRxwP0h1XTyYdTex2fzLnISLpre62NPU1LzArpU0Q2q4zdeKd2+JUDrTqam+kJE0Fxjfyr2wnLBaLBjG4terk5NSAFKvizxTTGWxlnBMTEdUNkcVOohZdqDR8P9hO4soBkA3ACI+ZoCMwsJgRF9v09OZjXwzN0Z5PTu6jE4AAAC+pXJ\/TwuNbTYAHluFrOQAGXgRAB0pAF1CRlAhBgBxORnbb17oAAAIpElEQVR4nO2dgV\/aZhrHXyAgRYIICrsqULGuRYJYrnS1drcqrFVpuxbUljk57VYpazdxvdqdtcX1xrW9K251W9dpe73dbXP3X14SEy3EEIT48oa8388n8vjy5Mf7482bvAnhBQBMEZ0EYSE0LMKg1cgV8IGpjXvG2MoF7a0iKxNtJr5Aw6+jKV5H43KJrSyoSruLX6ddYyJqNO2nQKCPfqR1NHxZc2lgtXGB284FOu7RrucCm5ULBCp8KnDzqXyJ1sMFDkfpK2tKC5pLU610YBIxVSHB\/mOhPx4Ps+YreB\/dNskUaRWDTjKlAhXGvEYyqywn3jl2cuDUIABmolk6GynsJqLWzf70sZPvMuZr1akLNbY8+NN7HWeGhmvXqQu1VjpAgUi0RaXm5daBCjaPkA5UsHkZUOWhjsdcwbALNYxytZiqW17VfR6bVxrYPEI6UMHmZaBVK5MQRDxqNm\/Fmz1COkIM+6aMvHn7+2fft0unVQfq5q3nms7ppdOqA3XzjrNNZx3SadWBunlgde1bw+OLGXLQtm\/b5v6hl8u8S\/pTOOTQIt\/n9xNsHiEdqGDzCOlApfZKkyOjlGrNj8XOX1DtICd08YOwEm9LsRk1tbfYyYFLar0tBYDg5XhYtX1eXh2oYPMI6UAFm0dIBypyVdookw5M7HKZ77RK56BGM74tBSEdqGDzCOlABZtHSAcq+BMbGcC3nyoN3OcR0oEKNo+QDlSweYR0oIIHOTKABzlKA\/d5hHSggs0jpAMVbL42kiq+LSUxPtGl2kPd5JU4bd6sUeVtKVdjyQ\/V1fJ2QPJf\/ugemupSVZ\/\/6Mp0IiWDTp2pqtLdf+6bmU211KxTb6qrdOEaOaPWlmc6PFn87QIVmReipr29ADVdzCCtfc6iAjW1\/EerH0\/LoVNfdqt0YIKgSI9TUE5aKT785HpbIx3qDG\/RsFFwLp2\/4fU5SRttj18YMp\/e5LOT8Vtru+soie1Kf3bo0KE\/sNHn8wBEvD4qa04575sXnCP0wj5RSH\/BZ9+eNjTSoe6zAwcObJn\/S5j+E\/I9jgbvWBe7It7ZXIQ1H4pTd7\/ksv8aX11qoM1+x\/xruuWT93zLc6Y7a5GJ2XBkfYrdxJO3Wq8PcNkRvb5vdx0lsYv54OWl+w+8vkup5eO5bC6bXsktMtsC+CoMyItcT0+ah4qHt8o+1D15+LeHD7fCgM5NkQ4yH3VQAXcUMAsN2dfCTnnJErEmi\/f2ahrkPDSbo0UFym75PRF4Es000g5vTyS\/vmVekkGnzlRZ6Xy7MSeHTn2pstK3p8wNejEj32nu6iZKx\/YnOi1L22W3R+ILDdTn3YcPH\/47G2W+oPyPHvucfj0FSHphHmkK8\/bPe\/hsv+5JI43t3z5y5Mg\/2Oifw4AZ3nrjxFNt1hR\/fNk4xbgv9OiyYT5bcEqrxInBdmZFe\/vo0aOcedqiPeSjdMQ30cJCujs7mmY298IzYmW75T9Zby0e5DSK+eQg7fSeL5kKvIzmHf03rZ5+5nymMAwy3\/LZmaGN4kGO4jd7zrx\/ZiH7LOQ7cWt9NXd7NH4va5lj+nfhTHxqeCuXNFJRMR0lsV1pvUPv4H8gg3Ru\/7VxSxH+p9bvxHSURFWV9h+Pf29J165Tb6qqNDlBEBr1jvD2TQcqMlS6+2K4kU5pSZGJF3ef\/Cv7A30waNMr7cu0dt1us6L5R3wr9KFOcN0+M9c5FRamJ5+\/7AKgXau0UY7dsTMr2o8Hfzp4jo2Sgy1g5LGPyru6QMSVbqEXprj7xRrI9AhF8p0Xrym9z\/\/U1NR0kI24S9fLKc8dz2Ju3Xs5t8KM7RPPhZ\/hbJFX\/K1oO+aZE5uA10eNmG+sXdpIOQv0Qhd30OZJT4uUjpLYxTx9Sht8dM\/3uge8jBLgVU8a3J1nyl\/eBK9jkjpK4o0+f5Dr8yBpZi5meFcsrr6kedR538y2PAiu0\/9I6iiJnQ8qbW\/ZapjHUtnma6RxBjlVoKZPbASouuVV3eexeaWBzSOkAxVsXgbwrGgKA8+KhpIOVLB5hHSggs0jpAMVbF4G2tX8Uy4Wj3QOaujwNTyEdKCCzSOkAxVsvjYmmNt0VWo+8fwd9f6aCfD3D6t2whBy5plTtS1\/9V+rir8tBREdqGDzCOlABZtHSAcq+JRWBvBtKUoD93mEdKCCzSOkAxVsXgZUvbfHx3mlgfs8QjpQweYR0oEKNo+QDlTwIEcG8CBHaeA+j5AOVLB5hHSggs3XRPfQjTXVmr\/a+\/qaag91k++eGlTtbSljsZl5tuX10rlWkTlo3kBaxVbBbb7SKg6DLH31\/hLFmjfxBdbSwMF7dvMBX3+7gw\/4mWYEKttW+cDAj6Rt\/DoGQ+krm0oL+MC2neqQb0fVqddb9DoWQaBvb+YKXO6twN3GpTS7+KBdL7Jyq5sv0BWn6ggjF2gIsVcW1Ikwcc+YCJ1eri8DarVag5ZDEIg\/U0FuJSvv4ZXfLJDuhJgK8E9MS6VkLDmpFBA8LDojS8Uq5Ij4tC5bhJZaMqN95XP2wunn\/\/6yfAb5s3t8rXwKIO\/+R6Le3UNpqXd5LHb3QtmE0KNYcPV6r4TMHng1XPivVM6k6BRTPMmPX0ikBB+Zn0mIhL7eKP8m+xOxyJz3F7HpnvbOq56ZeYmU5JXSeUNLIb9a\/bWrfEpw1vObxPszOVAYLJ+RiAXjy+MSldkDmdmnEnXy928uSPUzQ\/4FVT6DLExdkxDpmFvdZe66N0n0kiNTN8vnoAlZ7wpgMBhZIW02m8hRSGxq0sah4\/dN\/pexMsV7ZLIg48AETTo20tHQ7Gbu\/GZqcXy5N7OQ+DSV3WQmGc\/IOSpDk44Ny\/Tkg8XBE9nYqWNjtPmx3skb2Q+ZpxKNb\/4MBa6euT79v4nxS7GO8cKD0wOZzXV21tkx0Uk4GwV\/lN7d5dNUJB0NNFN5nScYBflmduAXlBofY\/aT\/wMS8CuuJ1MGLgAAAABJRU5ErkJggg==)","8f550bb7":"## Data Visualization \ud83d\udcca\n\n### Univariate Plots","1502ba48":"### unique values for categorical columns","3100ecd2":"<h2 style='text-align:left;font-family:Comic Sans MS;font-size:40px;background-color:white;border:20px;color:black'>If you liked this notebook feel free to upvote!<h2>\n\n![](https:\/\/psychicpostpirate.files.wordpress.com\/2016\/04\/87736-anime-finger-gun-upvote-gif-im-rl3i.gif)\n    \n<h2 style='text-align:center;font-family:Comic Sans MS;font-size:60px;background-color:white;border:20px;color:black'>Coming soon: Cross validation and Gridsearch for XGBoost \ud83d\udc31\u200d\ud83c\udfcd<h2>","057e5ea0":"### Category unvariate analysis:\n\n* **`Gender`** - most of the clients (52.9%) are Females.\n* **`Education_Level`** - most of the clients (55.5%) are Graduates or have a higher degree.\n* **`Marital_Status`** - most of the clients (53.7%) are Married.\n* **`Inocome_Category`** - most of the clients (63.8%) Have an anual income of 60K or less.\n* **`Gender`** - most of the clients (93.2%) Have a Blue credit card.\n","5af2c385":"### Now for the other categoric variables:","eba00910":"### categorical variable counts (%):\nChecking how the categorical data is distributed.","b85a2a6a":"### correlation table\nFor a clearer view a correlation table is reccomended here","779df878":"The main interest of the categoric variables is only if the client had a platinum card (showed 25% attrition rate) or if he has Doctorate Education Level (21% Attrition rate) so we drop the rest","9570e739":"## Dataset info","961509a4":"## Data Exploration\n\n![](https:\/\/media3.giphy.com\/media\/HUplkVCPY7jTW\/giphy.webp?cid=ecf05e47ib8qvllx0nhxz2vrqs13vwrnqqgd9l908x8oepc7&rid=giphy.webp)\n\nLet's take alook at 2 examples for further clarification of the data with examples:\n\n## \ud83d\udcdd Note\nthose meanings are made up to match the profile of the client according to the client's profile data.","13b7ce72":"# File path \ud83d\udcc2","d29b039e":"## Random Forest\n\n![](https:\/\/opendatascience.com\/wp-content\/uploads\/2018\/04\/Random-Forest-Introduction.jpg)","3872831c":"## multivariate plots for categorical variables\n","8fe8d7b3":"### Now for the numeric variables:\n\nFirst of all we wiil make boxplots for this analysis:\n\n![](https:\/\/miro.medium.com\/max\/1050\/1*NRlqiZGQdsIyAu0KzP7LaQ.png)","d70396c8":"Our XGBoost model reached a recall of **84.58%** therefor he is the prefered model to identify customers with high risk of churning.","87b19bf6":"For plotting with percentage we will create a function:\n\n**`precent_maker`** function will plot percentages on the bar graphs if you have a normal plot. It takes the actual graph and feature as a parameter.","63535d10":"# Libraries \ud83d\udcda","bbc33ca0":"### correlation plot\n\nNow we will try to find strong correlation between attrited customers and numerical attributes:\n\n### correlation matrix","7bc9ff93":"Finally we want to get rid of the columns with the weakest correlation.","9f50cb36":"### For starters we will create the plot for our `Attrition_Flag` column:","c8e50a86":"now that we filled unknown data we can start exploring the data.","bf17c0ce":"## \ud83d\udcdd Note\n**We have no missing values but some of our categories have an unkown values therefor there is a need to handle those unknowns**\n\n## Missing values \ud83d\udeab\n\nThe `Unknown` are in categorical column, therefore we will substitute the current values with `None`.","842c9573":"### One Hot encoding\nNow for the other categorical columns we will use one hot encoding:","8b381c79":"we already have 3 columns that are useless to our analysis:\n1. **CLIENTNUM** - Client ID is useless for analysis.\n2. **Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1** -The Data provider advised to ignore this column.\n3. **Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2** - same reason as the previus columns.\n","8fe58eea":"| Column Name                | Value               | Meaning Example|\n|----------------------------|---------------------|-------------|\n| `Attrition_Flag`           | `Attrited Customer` | The client already left the credit card service        |\n| `Customer_Age`             | `27`                | Young adult, 27 years old            |\n| `Gender`                   | `M`                 | Male |\n| `Dependent_count`          | `0`                 | Has no little children or old parents to financialy take care of |\n| `Education_Level`          | `High School`       | Finished high school, no academic degree            | \n| `Marital_Status`           | `Divorced`          | Might have financial issues with ex wife            |\n| `Income_Category`          | `60K - 80K`         | Has an anual income of 65,000 dollars           |\n| `Card_Category`            | `Blue`              | Had the blue credit card  |\n| `Months_on_book`           | `36`                | Had the credit service for 3 years            |\n| `Total_Relationship_Count` |  `2`                | Had an account in the bank and the credit card service (2 Relationships)|\n| `Months_Inactive_12_mon`   |  `3`                | The credit card was inactive for 3 months total (Average)      |\n| `Contacts_Count_12_mon`    |  `2`                | The client reached the bank one time and the same vice versa |\n| `Credit_Limit`             |  `13303`            | Monthly credit limit of 13,303 dollars        | \n| `Total_Revolving_Bal`      |   `2517`            | In the period of the card's service the client had a revolving balance that sumed up to 2,517 dollars            |\n| `Avg_Open_To_Buy`          | `10786`             | The amount left to use in the past 12 months is 10,786 dollars |\n| `Total_Amt_Chng_Q4_Q1`     |  `0.929`            | The amount spent in the 4th quarter was slightly lower then the 1st Quarter      |\n| `Total_Trans_Amt`          |  `10219`            | The transactions made are 10,219 dollars in total            |\n| `Total_Trans_Ct`           |  `85`               | The transactions are 85 in total            |\n| `Total_Ct_Chng_Q4_Q1`      |  `0.809`            | The transactions rate in the 4th Quarter is lower then the 1st Quarter    |\n| `Avg_Utilization_Ratio`    |   `0.189`           | Had an 18.9% card usage in average (credit limit\/revolving balnce)  |\n","22e4d4c7":"## XGBoost\n\n![](https:\/\/lstmemery.github.io\/images\/gradient_descent.gif)","a7d535af":"Now we will analize the missing values in both ways:\n* by numbers\n* by %","55abec72":"### analysis of categorical data with Attrition hue\n\nWe know that the general attrition rate is 16.1% so our aim is to find values that are higher then that in the sub gruops of our categorical variables.\n\n* **`Gender`** - Female clients have a slightly higher (17.35%) Atrrition rate, not very significant.\n* **`Education_Level`** - Post-Graduate clients have a slightly higher (17.84%) Atrrition rate ,Doctorate clients have a higher (21.08%) Atrrition rate.\n* **`Marital_Status`** - no major diffrence in attrition rates overall (16.95% attrition rate in the single group is not very significant).\n* **`Inocome_Category`** - clients with 120000 dollar or higher annual income have a slightly higher (17.29%) Atrrition rate, not very significant.\n* **`Card_Category`** - Gold card clients have a slightly higher (18.26%) Atrrition rate ,Platinum card clients have a higher (25%) Atrrition rate.\n\nIn conclusion for the categorical values we see that only 2 categories stayed relevant: `Education_Level` and `Card_Category`,\nbut because the variables in the gruops that had an increase of attrition from the original general attrition rate are very small compared to the entire data their impact might be very small.\n\n","4fcd3d7f":"<h2 style='text-align:center;font-family:Comic Sans MS;font-size:40px;background-color:purple;border:20px;color:white'>Credit Card customers - Predict Churning customers<h2>\n    \n![](https:\/\/thumbs.gfycat.com\/EagerAlarmedKillifish-size_restricted.gif)\n\n<h2 style='text-align:center;font-family:Comic Sans MS;font-size:25px;background-color:purple;border:20px;color:white'>Table of Contents<h2>\n\n\n## 1. Introducion\n## 2. Data ID\n## 3. Libraries\n## 4. File Path\n## 5. Preprocessing and Data Analysis\n## 6. Machine learning models\n## 7. Conclusion\n    \n# Introducion\n    \n**Problem Statement:** \nA manager at the bank is disturbed with more and more customers leaving their credit card services. They would really appreciate if one could predict for them who is gonna get churned so they can proactively go to the customer to provide them better services and turn customers' decisions in the opposite direction\n\n**Breakdown of the Problem Statement:** \n\n* Supervised machine learning classification problem.\n* The target value will be `Attrition_Flag`.\n    \n**Aim of the NoteBook:**\n    \nCreate a model to predict what customer has a high risk of leaving the bank's credit card services.\n    \n![](https:\/\/media1.giphy.com\/media\/gj6va0A4XtMBqRmfsH\/giphy.gif)\n\n# Data Id \ud83d\udccb\n    \n This dataset is named [Credit Card customers](https:\/\/www.kaggle.com\/sakshigoyal7\/credit-card-customers). The dataset contains a set of **10,127 records** under **23 attributes**:\n\n\n| Column Name                         | Description                                                    |\n|------------------                   |----------------------------------------------------------------|\n| `CLIENTNUM`                         | Client number ID                                               |\n| `Attrition_Flag`                    | Customer activity, Attrited or existing                        |\n| `Customer_Age`                      | Customer's Age in Years                                        |\n| `Gender`                            | Customer's gender, male or female                              |\n| `Dependent_count`                   | Number of dependents                                           |\n| `Education_Level`                   | Educational Qualification of the account holder                |\n| `Marital_Status`                    | Married, Single, Divorced, Unknown                             |\n| `Income_Category`                   | Annual Income Category of the account holder                   |\n| `Card_Category`                     | Type of Card (Blue, Silver, Gold, Platinum)                    |\n| `Months_on_book`                    | Period of relationship with bank                               |\n| `Total_Relationship_Count`          | Total number of products held by the customer                  |  \n| `Months_Inactive_12_mon`            | Number of months inactive in the last 12 months                |\n| `Contacts_Count_12_mon`             | Number of Contacts in the last 12 months                       |\n| `Credit_Limit`                      | Credit Limit on the Credit Card                                |\n| `Total_Revolving_Bal`               | Total Revolving Balance on the Credit Card                     |\n| `Avg_Open_To_Buy`                   | Open to Buy Credit Line (Average of last 12 months)            |\n| `Total_Amt_Chng_Q4_Q1`              | Change in Transaction Amount (Q4 over Q1)                      |\n| `Total_Trans_Amt`                   | Total Transaction Amount (Last 12 months)                      |  \n| `Total_Trans_Ct`                    | Total Transaction Count (Last 12 months)                       |\n| `Total_Ct_Chng_Q4_Q1`               | Change in Transaction Count (Q4 over Q1)                       |\n| `Avg_Utilization_Ratio`             | Average Card Utilization Ratio                                 |\n| `Naive_Bayes_Classifier_Attrition_..._mon_1` | Naive Bayes |\n| `Naive_Bayes_Classifier_Attrition_..._mon_1` | Naive Bayes |\n\n    \n    \n \n"}}