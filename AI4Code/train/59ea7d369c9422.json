{"cell_type":{"41170dfc":"code","f9a4dd64":"code","302cdc87":"code","f30b7ad2":"code","0c3e8d84":"code","1c6e97ae":"code","a50c0e09":"code","57269d8b":"code","9610a8ac":"code","15ccbfb8":"code","9193a8d8":"code","147bbb4d":"code","151486a8":"code","d8b16eee":"code","c126a0f8":"code","d8710dad":"code","c2c44d9d":"code","154beb60":"code","ea72cd27":"code","0c6b1f1e":"code","56ac49e0":"code","ff65b052":"code","eec65f7e":"code","f7b60b73":"code","6dc2b1e3":"code","96f1e2ff":"code","dfacd120":"code","c26b048e":"code","a4f738e1":"code","ee633139":"code","5442c449":"code","091ba4cd":"code","e821e0ec":"code","22534ba4":"code","31dd06fc":"code","7a8f87db":"code","fed9c5f4":"code","aeef483a":"code","15541abb":"markdown","df71d6b7":"markdown","f23f2a80":"markdown","c3291fda":"markdown","7dd4f821":"markdown","283b7b13":"markdown","f3f09307":"markdown"},"source":{"41170dfc":"from __future__ import division, print_function\n# \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u043c \u0432\u0441\u044f\u043a\u0438\u0435 \u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044f Anaconda\nimport warnings\nwarnings.filterwarnings('ignore')\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport numpy as np\nfrom sklearn.datasets import load_files\nfrom sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer, TfidfVectorizer\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import LinearSVC","f9a4dd64":"# \u043f\u043e\u043c\u0435\u043d\u044f\u0439\u0442\u0435 \u043f\u0443\u0442\u044c \u043a \u0444\u0430\u0439\u043b\u0443\nreviews_train = load_files(\"..\/input\/imdbfilm-rating\/aclImdb\/train\")\ntext_train, y_train = reviews_train.data, reviews_train.target","302cdc87":"print(\"Number of documents in training data: %d\" % len(text_train))\nprint(np.bincount(y_train))","f30b7ad2":"# \u043f\u043e\u043c\u0435\u043d\u044f\u0439\u0442\u0435 \u043f\u0443\u0442\u044c \u043a \u0444\u0430\u0439\u043b\u0443\nreviews_test = load_files(\"..\/input\/imdbfilm-rating\/aclImdb\/test\")\ntext_test, y_test = reviews_test.data, reviews_test.target","0c3e8d84":"print(\"Number of documents in test data: %d\" % len(text_test))\nprint(np.bincount(y_test))","1c6e97ae":"#\u041f\u0440\u0438\u043c\u0435\u0440 \u043e\u0442\u0437\u044b\u0432\u0430 \u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 \u043c\u0435\u0442\u043a\u0438.","a50c0e09":"print(text_train[1])","57269d8b":"y_train[1] # \u043f\u043b\u043e\u0445\u043e\u0439 \u043e\u0442\u0437\u044b\u0432","9610a8ac":"text_train[2]","15ccbfb8":"y_train[2] # \u0445\u043e\u0440\u043e\u0448\u0438\u0439 \u043e\u0442\u0437\u044b\u0432","9193a8d8":"#\u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u043e\u0434\u0441\u0447\u0435\u0442 \u0441\u043b\u043e\u0432\n#\u0421\u043e\u0441\u0442\u0430\u0432\u0438\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0432\u0441\u0435\u0445 \u0441\u043b\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e CountVectorizer.\n\ncv = CountVectorizer()\ncv.fit(text_train)\n\nlen(cv.vocabulary_)","147bbb4d":"#\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0445 \"\u0441\u043b\u043e\u0432\" (\u043b\u0443\u0447\u0448\u0435 \u0438\u0445 \u043d\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0442\u043e\u043a\u0435\u043d\u0430\u043c\u0438). \u0412\u0438\u0434\u0438\u043c, \u0447\u0442\u043e \u043c\u043d\u043e\u0433\u0438\u0435 \u0432\u0430\u0436\u043d\u044b\u0435 \u044d\u0442\u0430\u043f\u044b \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0442\u0435\u043a\u0441\u0442\u0430 \u043c\u044b \u0442\u0443\u0442 \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u043b\u0438.\n\nprint(cv.get_feature_names()[:50])\nprint(cv.get_feature_names()[50000:50050])","151486a8":"#\u0417\u0430\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0438\u0437 \u0442\u0435\u043a\u0441\u0442\u043e\u0432 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c\u0438 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0441\u043b\u043e\u0432. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0440\u0430\u0437\u0440\u0435\u0436\u0435\u043d\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442.\n\nX_train = cv.transform(text_train)\nX_train","d8b16eee":"#\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u043b\u043e \u043d\u0430 \u043e\u0434\u043d\u043e \u0438\u0437 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0439.\nprint(text_train[19726])","c126a0f8":"X_train[19726].nonzero()[1]","d8710dad":"X_train[19726].nonzero()","c2c44d9d":"#\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0442\u0430\u043a \u0436\u0435 \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0443.\nX_test = cv.transform(text_test)","154beb60":"#\u041e\u0431\u0443\u0447\u0438\u043c \u043b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044e.\nlogit = LogisticRegression(n_jobs=-1, random_state=7)\nlogit.fit(X_train, y_train)","ea72cd27":"#\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0434\u043e\u043b\u0438 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0445 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u043d\u0430 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0430\u0445.\nround(logit.score(X_train, y_train), 3), round(logit.score(X_test, y_test), 3)","0c6b1f1e":"#\u041a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u044b \u043c\u043e\u0434\u0435\u043b\u0438 \u043c\u043e\u0436\u043d\u043e \u043a\u0440\u0430\u0441\u0438\u0432\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c.\n\ndef visualize_coefficients(classifier, feature_names, n_top_features=25):\n    # get coefficients with large absolute values \n    coef = classifier.coef_.ravel()\n    positive_coefficients = np.argsort(coef)[-n_top_features:]\n    negative_coefficients = np.argsort(coef)[:n_top_features]\n    interesting_coefficients = np.hstack([negative_coefficients, positive_coefficients])\n    # plot them\n    plt.figure(figsize=(15, 5))\n    colors = [\"red\" if c < 0 else \"blue\" for c in coef[interesting_coefficients]]\n    plt.bar(np.arange(2 * n_top_features), coef[interesting_coefficients], color=colors)\n    feature_names = np.array(feature_names)\n    plt.xticks(np.arange(1, 1 + 2 * n_top_features), feature_names[interesting_coefficients], rotation=60, ha=\"right\");","56ac49e0":"\n\ndef plot_grid_scores(grid, param_name):\n    plt.plot(grid.param_grid[param_name], grid.cv_results_['mean_train_score'],\n        color='green', label='train')\n    plt.plot(grid.param_grid[param_name], grid.cv_results_['mean_test_score'],\n        color='red', label='test')\n    plt.legend();\n\n","ff65b052":"visualize_coefficients(logit, cv.get_feature_names())","eec65f7e":"%%time\nfrom sklearn.pipeline import make_pipeline\n\ntext_pipe_logit = make_pipeline(CountVectorizer(), \n                                LogisticRegression(n_jobs=-1, random_state=7))\n\ntext_pipe_logit.fit(text_train, y_train)\nprint(text_pipe_logit.score(text_test, y_test))","f7b60b73":"%%time\nfrom sklearn.model_selection import GridSearchCV\n\nparam_grid_logit = {'logisticregression__C': np.logspace(-5, 0, 6)}\ngrid_logit = GridSearchCV(text_pipe_logit, param_grid_logit, cv=3, n_jobs=-1)\n\ngrid_logit.fit(text_train, y_train)","6dc2b1e3":"#\u041b\u0443\u0447\u0448\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 C \u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u0430 \u043a\u0440\u043e\u0441\u0441-\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438:\ngrid_logit.best_params_, grid_logit.best_score_","96f1e2ff":"plot_grid_scores(grid_logit, 'logisticregression__C')","dfacd120":"#\u041d\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435:\ngrid_logit.score(text_test, y_test)","c26b048e":"from sklearn.ensemble import RandomForestClassifier","a4f738e1":"forest = RandomForestClassifier(n_estimators=200, n_jobs=-1, random_state=17)","ee633139":"%%time\nforest.fit(X_train, y_train)","5442c449":"round(forest.score(X_test, y_test), 3)","091ba4cd":"# \u043f\u043e\u0440\u043e\u0436\u0434\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\nrng = np.random.RandomState(0)\nX = rng.randn(200, 2)\ny = np.logical_xor(X[:, 0] > 0, X[:, 1] > 0)","e821e0ec":"plt.scatter(X[:, 0], X[:, 1], s=30, c=y, cmap=plt.cm.Paired);","22534ba4":"def plot_boundary(clf, X, y, plot_title):\n    xx, yy = np.meshgrid(np.linspace(-3, 3, 50),\n                     np.linspace(-3, 3, 50))\n    clf.fit(X, y)\n    # plot the decision function for each datapoint on the grid\n    Z = clf.predict_proba(np.vstack((xx.ravel(), yy.ravel())).T)[:, 1]\n    Z = Z.reshape(xx.shape)\n\n    image = plt.imshow(Z, interpolation='nearest',\n                           extent=(xx.min(), xx.max(), yy.min(), yy.max()),\n                           aspect='auto', origin='lower', cmap=plt.cm.PuOr_r)\n    contours = plt.contour(xx, yy, Z, levels=[0], linewidths=2,\n                               linetypes='--')\n    plt.scatter(X[:, 0], X[:, 1], s=30, c=y, cmap=plt.cm.Paired)\n    plt.xticks(())\n    plt.yticks(())\n    plt.xlabel(r'$x_1$')\n    plt.ylabel(r'$x_2$')\n    plt.axis([-3, 3, -3, 3])\n    plt.colorbar(image)\n    plt.title(plot_title, fontsize=12);","31dd06fc":"plot_boundary(LogisticRegression(), X, y,\n              \"Logistic Regression, XOR problem\")","7a8f87db":"from sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.pipeline import Pipeline","fed9c5f4":"\n\nlogit_pipe = Pipeline([('poly', PolynomialFeatures(degree=2)), \n                       ('logit', LogisticRegression())])\n\n","aeef483a":"\n\nplot_boundary(logit_pipe, X, y,\n              \"Logistic Regression + quadratic features. XOR problem\")\n\n","15541abb":"\u0422\u0435\u043f\u0435\u0440\u044c \u0442\u043e \u0436\u0435 \u0441\u0430\u043c\u043e\u0435, \u043d\u043e \u0441\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u043c \u043b\u0435\u0441\u043e\u043c. \u0412\u0438\u0434\u0438\u043c, \u0447\u0442\u043e \u0441 \u043b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0435\u0439 \u043c\u044b \u0434\u043e\u0441\u0442\u0438\u0433\u0430\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435\u0439 \u0434\u043e\u043b\u0438 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0445 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u043c\u0435\u043d\u044c\u0448\u0438\u043c\u0438 \u0443\u0441\u0438\u043b\u0438\u044f\u043c\u0438","df71d6b7":"\u041f\u043e\u0434\u0431\u0435\u0440\u0435\u043c \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u043b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0438. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c sklearn.pipeline, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 CountVectorizer \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 \u0442\u0435\u0445 \u0434\u0430\u043d\u043d\u044b\u0445, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0432 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u043e\u0431\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u043c\u043e\u0434\u0435\u043b\u044c (\u0447\u0442\u043e\u0431 \u043d\u0435 \"\u043f\u043e\u0434\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c\" \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0443 \u0438 \u043d\u0435 \u0441\u0447\u0438\u0442\u0430\u0442\u044c \u043f\u043e \u043d\u0435\u0439 \u0447\u0430\u0441\u0442\u043e\u0442\u044b \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u0441\u043b\u043e\u0432). \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 pipeline \u0437\u0430\u0434\u0430\u0435\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439: \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c CountVectorizer, \u0437\u0430\u0442\u0435\u043c \u043e\u0431\u0443\u0447\u0438\u0442\u044c \u043b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044e.","f23f2a80":"XOR-\u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430\n\n\u0422\u0435\u043f\u0435\u0440\u044c \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043f\u0440\u0438\u043c\u0435\u0440, \u0433\u0434\u0435 \u043b\u0438\u043d\u0435\u0439\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0441\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0445\u0443\u0436\u0435.\n\n\u041b\u0438\u043d\u0435\u0439\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0441\u0442\u0440\u043e\u044f\u0442 \u0432\u0441\u0435 \u0436\u0435 \u043e\u0447\u0435\u043d\u044c \u043f\u0440\u043e\u0441\u0442\u0443\u044e \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u044e\u0449\u0443\u044e \u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u044c \u2013 \u0433\u0438\u043f\u0435\u0440\u043f\u043b\u043e\u0441\u043a\u043e\u0441\u0442\u044c. \u0421\u0430\u043c\u044b\u0439 \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b\u0439 \u0438\u0433\u0440\u0443\u0448\u0435\u0447\u043d\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043a\u043b\u0430\u0441\u0441\u044b \u043d\u0435\u043b\u044c\u0437\u044f \u0431\u0435\u0437 \u043e\u0448\u0438\u0431\u043e\u043a \u043f\u043e\u0434\u0435\u043b\u0438\u0442\u044c \u0433\u0438\u043f\u0435\u0440\u043f\u043b\u043e\u0441\u043a\u043e\u0441\u0442\u044c\u044e (\u0442\u043e \u0435\u0441\u0442\u044c \u043f\u0440\u044f\u043c\u043e\u0439, \u0435\u0441\u043b\u0438 \u044d\u0442\u043e 2D), \u043f\u043e\u043b\u0443\u0447\u0438\u043b \u0438\u043c\u044f \"the XOR problem\".\n\nXOR \u2013 \u044d\u0442\u043e \"\u0438\u0441\u043a\u043b\u044e\u0447\u0430\u044e\u0449\u0435\u0435 \u0418\u041b\u0418\", \u0431\u0443\u043b\u0435\u0432\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u0435\u0439 \u0438\u0441\u0442\u0438\u043d\u043d\u043e\u0441\u0442\u0438","c3291fda":"\u041e\u0447\u0435\u0432\u0438\u0434\u043d\u043e, \u043d\u0435\u043b\u044c\u0437\u044f \u043f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u043f\u0440\u044f\u043c\u0443\u044e \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u0431\u0435\u0437 \u043e\u0448\u0438\u0431\u043e\u043a \u043e\u0442\u0434\u0435\u043b\u0438\u0442\u044c \u043e\u0434\u0438\u043d \u043a\u043b\u0430\u0441\u0441 \u043e\u0442 \u0434\u0440\u0443\u0433\u043e\u0433\u043e. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u043b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f \u043f\u043b\u043e\u0445\u043e \u0441\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441 \u0442\u0430\u043a\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0435\u0439.","7dd4f821":"\n\n\u0417\u0434\u0435\u0441\u044c \u043b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f \u0432\u0441\u0435 \u0440\u0430\u0432\u043d\u043e \u0441\u0442\u0440\u043e\u0438\u043b\u0430 \u0433\u0438\u043f\u0435\u0440\u043f\u043b\u043e\u0441\u043a\u043e\u0441\u0442\u044c, \u043d\u043e \u0432 6-\u043c\u0435\u0440\u043d\u043e\u043c \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 $1, x_1, x_2, x_1^2, x_1x_2$ \u0438 $x_2^2$. \u0412 \u043f\u0440\u043e\u0435\u043a\u0446\u0438\u0438 \u043d\u0430 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 $x_1, x_2$ \u0433\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0430\u0441\u044c \u043d\u0435\u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0439.\n\n\u041d\u0430 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0435 \u043f\u043e\u043b\u0438\u043d\u043e\u043c\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u043e\u043c\u043e\u0433\u0430\u044e\u0442, \u043d\u043e \u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0438\u0445 \u044f\u0432\u043d\u043e \u2013 \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043d\u0435\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e. \u0413\u043e\u0440\u0430\u0437\u0434\u043e \u0431\u044b\u0441\u0442\u0440\u0435\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 SVM \u0441 \u044f\u0434\u0440\u043e\u0432\u044b\u043c \u0442\u0440\u044e\u043a\u043e\u043c. \u041f\u0440\u0438 \u0442\u0430\u043a\u043e\u043c \u043f\u043e\u0434\u0445\u043e\u0434\u0435 \u0432 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435 \u0432\u044b\u0441\u043e\u043a\u043e\u0439 \u0440\u0430\u0437\u043c\u0435\u0440\u043d\u043e\u0441\u0442\u0438 \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c\u0438 (\u0437\u0430\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439-\u044f\u0434\u0440\u043e\u043c), \u0430 \u044f\u0432\u043d\u043e \u043f\u043b\u043e\u0434\u0438\u0442\u044c \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0442\u043e\u0440\u043d\u043e \u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043d\u0435 \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u0442\u0441\u044f. \u041f\u0440\u043e \u044d\u0442\u043e \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 \u043a\u0443\u0440\u0441\u0435 \u0415\u0432\u0433\u0435\u043d\u0438\u044f \u0421\u043e\u043a\u043e\u043b\u043e\u0432\u0430 \u2013 \u0442\u0443\u0442 (\u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0430 \u0443\u0436\u0435 \u0441\u0435\u0440\u044c\u0435\u0437\u043d\u0430\u044f).\n","283b7b13":"XOR \u0434\u0430\u043b \u0438\u043c\u044f \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0435 \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0439 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043a\u043b\u0430\u0441\u0441\u044b \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0432\u044b\u0442\u044f\u043d\u0443\u0442\u044b\u043c\u0438 \u043f\u043e \u0434\u0438\u0430\u0433\u043e\u043d\u0430\u043b\u044f\u043c \u0438 \u043f\u0435\u0440\u0435\u0441\u0435\u043a\u0430\u044e\u0449\u0438\u043c\u0438\u0441\u044f \u043e\u0431\u043b\u0430\u043a\u0430\u043c\u0438 \u0442\u043e\u0447\u0435\u043a.","f3f09307":"\u0410 \u0432\u043e\u0442 \u0435\u0441\u043b\u0438 \u043d\u0430 \u0432\u0445\u043e\u0434 \u043f\u043e\u0434\u0430\u0442\u044c \u043f\u043e\u043b\u0438\u043d\u043e\u043c\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0434\u043e 2 \u0441\u0442\u0435\u043f\u0435\u043d\u0438, \u0442\u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0440\u0435\u0448\u0430\u0435\u0442\u0441\u044f."}}