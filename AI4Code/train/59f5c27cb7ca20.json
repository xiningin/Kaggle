{"cell_type":{"143ebec4":"code","bcb5543a":"code","23934a0f":"code","4bc2408c":"code","7070d65a":"code","6efc8b79":"code","40118c50":"code","eef3c464":"code","98a189e9":"code","af9d919a":"code","f230d5c1":"code","24bae481":"code","87604321":"code","f541c749":"code","2e7ed295":"code","76f713e3":"code","1f5ef05c":"code","7395da3d":"code","c9c51eaf":"code","e4492fd7":"code","c109abdd":"code","cc6e9348":"code","50420690":"code","3b9be79d":"code","8bdf0be8":"code","01020d85":"code","4a1b8a34":"code","e847723d":"code","7b4bb83e":"code","1ac54b07":"code","f796c7a4":"code","b30fc9fa":"code","98f36155":"code","76b07506":"code","d972a11e":"code","595510aa":"code","693ebfe3":"code","719e09f0":"code","9d641903":"code","42e7273d":"code","0c46c33a":"code","c69592fd":"code","d4a6f66b":"code","69fe5e97":"code","ea981689":"code","d72d669a":"code","be908b69":"code","71a2ceb4":"code","fa6f2a7a":"code","5e7069db":"code","5c7b0283":"markdown","98281172":"markdown","feb62972":"markdown","e5ad7fdf":"markdown","6f2707a5":"markdown","35179ae9":"markdown","c77bf4eb":"markdown","bc81c455":"markdown","92e37b5a":"markdown","ecb9b91d":"markdown","5e433a61":"markdown"},"source":{"143ebec4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n%matplotlib inline\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport warnings\nwarnings.filterwarnings('ignore') \n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bcb5543a":"# Read data\nmedian_house_hold_in_come = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/MedianHouseholdIncome2015.csv', encoding=\"windows-1252\")\npercentage_people_below_poverty_level = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PercentagePeopleBelowPovertyLevel.csv', encoding=\"windows-1252\")\npercent_over_25_completed_highSchool = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PercentOver25CompletedHighSchool.csv', encoding=\"windows-1252\")\nshare_race_city = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/ShareRaceByCity.csv', encoding=\"windows-1252\")\nkill = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PoliceKillingsUS.csv', encoding=\"windows-1252\")","23934a0f":"percentage_people_below_poverty_level.head()","4bc2408c":"percentage_people_below_poverty_level.info()","7070d65a":"percentage_people_below_poverty_level.poverty_rate.value_counts()","6efc8b79":"percentage_people_below_poverty_level['Geographic Area'].unique()","40118c50":"# Poverty rate of each state\npercentage_people_below_poverty_level.poverty_rate.replace(['-'],0.0,inplace = True)\npercentage_people_below_poverty_level.poverty_rate = percentage_people_below_poverty_level.poverty_rate.astype(float)\narea_list = list(percentage_people_below_poverty_level['Geographic Area'].unique())\narea_poverty_ratio = []\nfor i in area_list:\n    x = percentage_people_below_poverty_level[percentage_people_below_poverty_level['Geographic Area']==i]\n    area_poverty_rate = sum(x.poverty_rate)\/len(x)\n    area_poverty_ratio.append(area_poverty_rate)\ndata = pd.DataFrame({'area_list': area_list,'area_poverty_ratio':area_poverty_ratio})\nnew_index = (data['area_poverty_ratio'].sort_values(ascending=False)).index.values\nsorted_data = data.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data['area_list'], y=sorted_data['area_poverty_ratio'])\nplt.xticks(rotation= 45)\nplt.xlabel('States')\nplt.ylabel('Poverty Rate')\nplt.title('Poverty Rate Given States')\nplt.show()","eef3c464":"kill.head()","98a189e9":"kill.name.value_counts()","af9d919a":"separate = kill.name[kill.name != 'TK TK'].str.split() \na,b = zip(*separate)                    \nname_list = a+b                         \nname_count = Counter(name_list)         \nmost_common_names = name_count.most_common(15)  \nx,y = zip(*most_common_names)\nx,y = list(x),list(y)\n# \nplt.figure(figsize=(15,10))\nax= sns.barplot(x=x, y=y,palette = sns.cubehelix_palette(len(x)))\nplt.xlabel('Name or Surname of killed people')\nplt.ylabel('Frequency')\nplt.title('Most common 15 Name or Surname of killed people')","f230d5c1":"percent_over_25_completed_highSchool.head()","24bae481":"percent_over_25_completed_highSchool.info()","87604321":"percent_over_25_completed_highSchool.percent_completed_hs.value_counts()","f541c749":"percent_over_25_completed_highSchool.percent_completed_hs.replace(['-'],0.0,inplace = True)\npercent_over_25_completed_highSchool.percent_completed_hs = percent_over_25_completed_highSchool.percent_completed_hs.astype(float)\narea_list = list(percent_over_25_completed_highSchool['Geographic Area'].unique())\narea_highschool = []\nfor i in area_list:\n    x = percent_over_25_completed_highSchool[percent_over_25_completed_highSchool['Geographic Area']==i]\n    area_highschool_rate = sum(x.percent_completed_hs)\/len(x)\n    area_highschool.append(area_highschool_rate)\n# sorting\ndata = pd.DataFrame({'area_list': area_list,'area_highschool_ratio':area_highschool})\nnew_index = (data['area_highschool_ratio'].sort_values(ascending=True)).index.values\nsorted_data2 = data.reindex(new_index)\n# visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data2['area_list'], y=sorted_data2['area_highschool_ratio'])\nplt.xticks(rotation= 45)\nplt.xlabel('States')\nplt.ylabel('High School Graduate Rate')\nplt.title(\"Percentage of Given State's Population Above 25 that Has Graduated High School\")\nplt.show()","2e7ed295":"share_race_city.head()","76f713e3":"share_race_city.info","1f5ef05c":"share_race_city.replace(['-'],0.0,inplace = True)\nshare_race_city.replace(['(X)'],0.0,inplace = True)\nshare_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']] = share_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']].astype(float)\narea_list = list(share_race_city['Geographic area'].unique())\nshare_white = []\nshare_black = []\nshare_native_american = []\nshare_asian = []\nshare_hispanic = []\nfor i in area_list:\n    x = share_race_city[share_race_city['Geographic area']==i]\n    share_white.append(sum(x.share_white)\/len(x))\n    share_black.append(sum(x.share_black) \/ len(x))\n    share_native_american.append(sum(x.share_native_american) \/ len(x))\n    share_asian.append(sum(x.share_asian) \/ len(x))\n    share_hispanic.append(sum(x.share_hispanic) \/ len(x))\n\n# visualization\nf,ax = plt.subplots(figsize = (9,15))\nsns.barplot(x=share_white,y=area_list,color='green',alpha = 0.5,label='White' )\nsns.barplot(x=share_black,y=area_list,color='blue',alpha = 0.7,label='African American')\nsns.barplot(x=share_native_american,y=area_list,color='cyan',alpha = 0.6,label='Native American')\nsns.barplot(x=share_asian,y=area_list,color='yellow',alpha = 0.6,label='Asian')\nsns.barplot(x=share_hispanic,y=area_list,color='red',alpha = 0.6,label='Hispanic')\n\nax.legend(loc='lower right',frameon = True)     # legendlarin gorunurlugu\nax.set(xlabel='Percentage of Races', ylabel='States',title = \"Percentage of State's Population According to Races \")","7395da3d":"sorted_data['area_poverty_ratio'] = sorted_data['area_poverty_ratio']\/max( sorted_data['area_poverty_ratio'])\nsorted_data2['area_highschool_ratio'] = sorted_data2['area_highschool_ratio']\/max( sorted_data2['area_highschool_ratio'])\ndata = pd.concat([sorted_data,sorted_data2['area_highschool_ratio']],axis=1)\ndata.sort_values('area_poverty_ratio',inplace=True)\n\n# visualize\nf,ax1 = plt.subplots(figsize =(20,10))\nsns.pointplot(x='area_list',y='area_poverty_ratio',data=data,color='lime',alpha=0.8)\nsns.pointplot(x='area_list',y='area_highschool_ratio',data=data,color='red',alpha=0.8)\nplt.text(40,0.6,'high school graduate ratio',color='red',fontsize = 17,style = 'italic')\nplt.text(40,0.55,'poverty ratio',color='lime',fontsize = 18,style = 'italic')\nplt.xlabel('States',fontsize = 15,color='blue')\nplt.ylabel('Values',fontsize = 15,color='blue')\nplt.title('High School Graduate  VS  Poverty Rate',fontsize = 20,color='blue')\nplt.grid()","c9c51eaf":"data.head()","e4492fd7":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# joint kernel density\n# pearsonr= if it is 1, there is positive correlation and if it is, -1 there is negative correlation.\n# If it is zero, there is no correlation between variables\n# Show the joint distribution using kernel density estimation \ng = sns.jointplot(data.area_poverty_ratio, data.area_highschool_ratio, kind=\"kde\", size=7)\nplt.savefig('graph.png')\nplt.show()","c109abdd":"data.head()","cc6e9348":"# kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }\n# Different usage of parameters but same plot with previous one\ng = sns.jointplot(\"area_poverty_ratio\", \"area_highschool_ratio\", data=data,size=5, ratio=3, color=\"r\")","50420690":"kill.race.head(15)","3b9be79d":"kill.race.value_counts()","8bdf0be8":"# Race rates according in kill data \nkill.race.dropna(inplace = True)\nlabels = kill.race.value_counts().index\ncolors = ['grey','blue','red','yellow','green','brown']\nexplode = [0,0,0,0,0,0]\nsizes = kill.race.value_counts().values\n\n# visual\nplt.figure(figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Killed People According to Races',color = 'blue',fontsize = 15)","01020d85":"data.head()","4a1b8a34":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# lmplot \n# Show the results of a linear regression within each dataset\nsns.lmplot(x=\"area_poverty_ratio\", y=\"area_highschool_ratio\", data=data)\nplt.show()","e847723d":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# cubehelix plot\nsns.kdeplot(data.area_poverty_ratio, data.area_highschool_ratio, shade=True, cut=3)\nplt.show()","7b4bb83e":"# Show each distribution with both violins and points\n# Use cubehelix to get a custom sequential palette\npal = sns.cubehelix_palette(2, rot=-.9, dark=.2)\nsns.violinplot(data=data, palette=pal, inner=\"points\")\nplt.show()","1ac54b07":"data.corr()","f796c7a4":"#correlation map\n# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\nf,ax = plt.subplots(figsize=(5, 5))\nsns.heatmap(data.corr(), annot=True, linewidths=0.5,linecolor=\"red\", fmt= '.1f',ax=ax)\nplt.show()","b30fc9fa":"kill.head()","98f36155":"kill.manner_of_death.unique()","76b07506":"# manner of death(olum sekli) : ates edilerek, ates edilerek ve sok tabancasiyla\n# Plot the orbital period with horizontal boxes\nsns.boxplot(x=\"gender\", y=\"age\", hue=\"manner_of_death\", data=kill, palette=\"PRGn\")\nplt.show()","d972a11e":"sns.countplot(kill.manner_of_death)\nplt.title(\"manner of death\",color = 'blue',fontsize=15)\nplt.show()","595510aa":"data.head()","693ebfe3":"# pair plot\nsns.pairplot(data)\nplt.show()","719e09f0":"kill.gender.value_counts()","9d641903":"kill.head()","42e7273d":"sns.countplot(kill.gender)\nplt.title(\"gender\",color = 'blue',fontsize=15)\nplt.show()","0c46c33a":"# kill weapon\narmed = kill.armed.value_counts()\n#print(armed)\nplt.figure(figsize=(10,7))\nsns.barplot(x=armed[:7].index,y=armed[:7].values)\nplt.ylabel('Number of Weapon')\nplt.xlabel('Weapon Types')\nplt.title('Kill weapon',color = 'blue',fontsize=15)\nplt.show()","c69592fd":"# age of killed people\nabove25 =['above25' if i >= 25 else 'below25' for i in kill.age]\ndf = pd.DataFrame({'age':above25})\nsns.countplot(x=df.age)\nplt.ylabel('Number of Killed People')\nplt.title('Age of killed people',color = 'blue',fontsize=15)\nplt.show()","d4a6f66b":"# Race of killed people\nsns.countplot(data=kill, x='race')\nplt.title('Race of killed people',color = 'blue',fontsize=15)\nplt.show()","69fe5e97":"# Most dangerous cities\ncity = kill.city.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=city[:12].index,y=city[:12].values)\nplt.xticks(rotation=45)\nplt.title('Most dangerous cities',color = 'blue',fontsize=15)\nplt.show()","ea981689":"# most dangerous states\nstate = kill.state.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=state[:20].index,y=state[:20].values)\nplt.title('Most dangerous state',color = 'blue',fontsize=15)","d72d669a":"# Having mental ilness or not for killed people\nsns.countplot(kill.signs_of_mental_illness)\nplt.xlabel('Mental illness')\nplt.ylabel('Number of Mental illness')\nplt.title('Having mental illness or not',color = 'blue', fontsize = 15)","be908b69":"# Threat types\nsns.countplot(kill.threat_level)\nplt.xlabel('Threat Types')\nplt.title('Threat types',color = 'blue', fontsize = 15)","71a2ceb4":"# Flee types\nsns.countplot(kill.flee)\nplt.xlabel('Flee Types')\nplt.title('Flee types',color = 'blue', fontsize = 15)","fa6f2a7a":"# Having body cameras or not for police\nsns.countplot(kill.body_camera)\nplt.xlabel('Having Body Cameras')\nplt.title('Having body cameras or not on Police',color = 'blue',fontsize = 15)","5e7069db":"sta = kill.state.value_counts().index[:10]\nsns.barplot(x=sta,y = kill.state.value_counts().values[:10])\nplt.title('Kill Numbers According to States',color = 'blue',fontsize=15)","5c7b0283":"<a id=\"3\"><\/a> \n# Most common 15 Name or Surname of killed people","98281172":"<a id=\"8\"><\/a> \n# Kill Properties","feb62972":"<a id=\"5\"><\/a> \n# Percentage of state's population according to races that are black,white,native american, asian and hispanic\n","e5ad7fdf":"<a id='10'><\/a>\n# Kill Numbers According to States","6f2707a5":"<a id=\"1\"><\/a> \n# Reading data","35179ae9":"<a id=\"2\"><\/a> \n# Poverty rate of each state","c77bf4eb":"# INTRODUCTION\n* [Read data](#1)\n* [Poverty rate of each state](#2)\n* [Most common 15 Name or Surname of killed people](#3)\n* [High school graduation rate of the population over 25 in the states](#4)\n* [Percentage of state's population according to races that are black,white,native american, asian and hispanic](#5)\n* [High school graduation rate vs Poverty rate of each state](#6)\n* [Manner of death](#7)\n* [Kill properties](#8)\n    * Kill weapon\n    * Age of killed people\n    * Race of killed people\n    * Most dangerous cities\n    * Most dangerous states\n    * Having mental ilness or not for killed people\n    * Threat types\n    * Flee types\n    * Having body cameras or not for police\n* [Kill numbers according to states in kill data](#10)","bc81c455":"<a id=\"4\"><\/a> \n# High school graduation rate of the population over 25 in the states","92e37b5a":"# swarm plot\nsns.swarmplot(x=\"gender\", y=\"age\",hue=\"manner_of_death\", data=kill)\nplt.show()","ecb9b91d":"<a id=\"6\"><\/a> \n# High School Graduation Rate vs Poverty Rate of Each State","5e433a61":"<a id='7'><\/a>\n# Manner of Death"}}