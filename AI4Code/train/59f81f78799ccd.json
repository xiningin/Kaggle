{"cell_type":{"e8d38482":"code","a9c6cfad":"code","69a388ea":"code","9fac287b":"code","e4b9db1f":"code","4dadf2ad":"code","3fa111b6":"code","63e5149f":"code","eb78cc9d":"code","635eb706":"code","fc9b576e":"code","092e1968":"code","c76e7ca5":"code","be44bad8":"code","b82175e5":"code","fa31c7b1":"code","28fa91b1":"code","715ff05c":"code","0a045337":"code","d043b0f3":"code","c705fe3b":"code","d98387e9":"code","6b00227e":"code","47ace6ea":"code","aff28634":"code","7fbff1e1":"code","3a08e8cb":"code","915f612d":"code","4b389448":"code","8d26de1a":"code","cce8392f":"code","15003df0":"code","23d3b125":"code","7b65331d":"code","6091939a":"code","a9f1a067":"code","85c1e00b":"code","e7cb16b4":"code","dda87a96":"markdown","a8e7f8e0":"markdown","a1c91285":"markdown","0b857aba":"markdown","38029799":"markdown","252d952d":"markdown","50eb711e":"markdown","84cbb6cc":"markdown","908e472b":"markdown","681a9056":"markdown","7e0a983d":"markdown","a2757086":"markdown","09af605b":"markdown","53f097c8":"markdown","2e69a928":"markdown","1be0b1eb":"markdown","3843393e":"markdown","532c2d3b":"markdown","39bdc80b":"markdown","a6ef5a45":"markdown","023df7c0":"markdown","6942b8ca":"markdown","e75b1d01":"markdown","5df95e0c":"markdown","f6deea86":"markdown","3c19c283":"markdown","dc9b874f":"markdown","10c77525":"markdown","19b6a0a2":"markdown","dcf28f6e":"markdown","34992846":"markdown","25a6ab30":"markdown","7d957c97":"markdown","1bf12619":"markdown","4cb29555":"markdown","6a4a635b":"markdown","7214c004":"markdown","7295740a":"markdown","7b54ac92":"markdown","2544b609":"markdown","b5496737":"markdown","335ae8e7":"markdown","ae978ca1":"markdown","946ac233":"markdown","5795fd2a":"markdown","1e283ca2":"markdown","9bbc5cb3":"markdown","8e5b58fb":"markdown","8cfd7a7b":"markdown","a65f5032":"markdown","7f61ad3e":"markdown","e2e3306a":"markdown","c148a31b":"markdown","19576ba6":"markdown"},"source":{"e8d38482":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy import stats\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nprint('Done')","a9c6cfad":"df = pd.read_csv (\"..\/input\/ibm-hr\/HR-Em.csv\")","69a388ea":"df.head(5)","9fac287b":"df['Department'].unique()","e4b9db1f":"def label_to_numeric(x):\n    if x=='Sales':\n        return 1\n    if x=='Research & Development':\n        return 2\n    if x=='Human Resources':\n        return 3\n   \ndf['Department'] = df['Department'].apply(label_to_numeric)","4dadf2ad":"df['Department'].unique()","3fa111b6":"df['Department'].dtypes","63e5149f":" df['Department'] = df['Department'].astype('category', copy=False)","eb78cc9d":"dpartmentgrouped = df.groupby('Department', as_index=False).sum()","635eb706":"LABELS = 'sales', 'Research & Development', 'Human Resources'\nplt.pie(dpartmentgrouped['Department'], \nlabels=LABELS, \nautopct='%.1f')\n\nplt.show()","fc9b576e":"COLORS = ['silver', 'lightcoral', 'lightblue']\nLABELS = 'sales', 'Research & Development', 'Human Resources'\nEXPLODE = (0, 0.2, 0)\n\nfig, ax = plt.subplots(figsize=(8,8))\nwedges, texts, autotexts = plt.pie(dpartmentgrouped['Department'], \nautopct='%.1f', colors=COLORS, explode=EXPLODE)\n\nwedges[1].set(edgecolor=\"gray\", linewidth=1)\nplt.title('Employees in Each Department', loc='center', fontsize=20)\nplt.legend(LABELS, loc='upper left', fontsize=14, frameon=False, bbox_to_anchor= (-0.5, 0.6))\nplt.axis('equal')\nplt.show()\n","092e1968":"sns.catplot(x= 'Gender', y= 'YearsAtCompany', data=df,\n             hue='MaritalStatus', \n           kind='bar')\n\n\n\n","c76e7ca5":"plt.figure(figsize=(8, 8))\nsns.scatterplot(x='Age', y='YearsAtCompany', data=df)\nplt.xlabel('AGE')\nplt.ylabel('YearsAtCompany')\nplt.show\n","be44bad8":"plt.figure(figsize=(10, 8))\nsns.scatterplot(x='Age', y='YearsAtCompany',\n                hue='Gender',\n                size='Gender', \n                sizes=(30, 300), hue_norm=(0, 7), legend=\"full\",\n                data=df, palette=\"Set2\")\nplt.xlabel('Age')\nplt.ylabel('Years At Company')\nplt.show","b82175e5":"df1 = df[['YearsAtCompany', 'MonthlyIncome', 'TotalWorkingYears']]","fa31c7b1":"sns.pairplot(df1)","28fa91b1":"sns.pairplot(df, vars=['Age', 'MonthlyIncome', 'TotalWorkingYears'], hue='MaritalStatus')\n","715ff05c":"df2 = df[['YearsAtCompany', 'MonthlyIncome', 'TotalWorkingYears']]","0a045337":"corrmat = df2.corr()\nf, ax = plt.subplots(figsize=(10, 6))\nsns.heatmap(corrmat, vmax=.8, square=True, annot=True, fmt='.2f', cmap = 'viridis')\nplt.show()","d043b0f3":"plt.figure(figsize=(8, 6))\nsns.stripplot(x= 'Gender', y= 'MonthlyIncome', data=df, jitter=True)","c705fe3b":"plt.figure(figsize=(8, 6))\nsns.swarmplot(x= 'MaritalStatus', y= 'MonthlyIncome', hue='Gender',  data=df)\nplt.legend(loc='upper left', fontsize=14, frameon=False, bbox_to_anchor= (-0.5, 0.6))\n","d98387e9":"f, ax = plt.subplots(figsize=(10, 8))\nsns.boxplot(x= 'MaritalStatus', y= 'MonthlyIncome', hue='Gender', data=df, palette=\"Set3\")\nplt.legend(loc='upper left', fontsize=14, frameon=False, bbox_to_anchor= (-0.5, 0.6))\nplt.show()","6b00227e":"f, ax = plt.subplots(figsize=(12, 8))\nsns.violinplot(x= 'MaritalStatus', y= 'MonthlyIncome', data=df, palette=\"Set3\")\nplt.show()","47ace6ea":"f, ax = plt.subplots(figsize=(12, 8))\nsns.pointplot(x= 'Gender', y= 'MonthlyIncome', data=df)\nplt.show()","aff28634":"plt.figure(figsize=(8, 4))\nsns.distplot(df['MonthlyIncome'])\nplt.show","7fbff1e1":"plt.figure(figsize=(6, 10))\nsns.distplot(df['MonthlyIncome'], kde=False, vertical=True, rug=True, bins=40)\nplt.show","3a08e8cb":"plt.figure(figsize=(6, 4))\n\nsns.set(color_codes=True)\nsns.kdeplot(df['MonthlyIncome'], shade=True, color='g')\nplt.show","915f612d":"plt.figure(figsize=(6, 4))\nsns.rugplot(df['MonthlyIncome'], height=0.5)\nplt.show","4b389448":"plt.figure(figsize=(10, 8))\n\nsns.set(color_codes=True)\nsns.kdeplot(df['MonthlyIncome'], shade=True, color='g')\nsns.kdeplot(df['MonthlyIncome'], bw=0.1, label='bw: 0.1', shade=True, color='b')\nsns.kdeplot(df['MonthlyIncome'], bw=1, label='bw: 1', shade=True, color='y')\nplt.show","8d26de1a":"df.plot.hexbin(x= 'MonthlyIncome', y= 'Age',\n               gridsize=15, figsize=(8, 6), sharex=False)\nplt.xlabel('MonthlyIncome')\nplt.ylabel('Age')\nplt.show","cce8392f":"sns.jointplot(x='Age', y='YearsAtCompany', data=df)\nplt.xlabel('Age')\nplt.ylabel('YearsAtCompany')\nplt.show","15003df0":"sns.lmplot(x= 'YearsAtCompany', y= 'Age', hue='StockOptionLevel', palette='Set3', aspect=1.5, data=df)","23d3b125":"sns.regplot(df['YearsAtCompany'], df['Age'], color='b', marker='*')\nplt.show()  ","7b65331d":"import plotly.graph_objs as go\nprint('Done!')","6091939a":"import plotly.graph_objs as go\nimport plotly.offline as offline\noffline.init_notebook_mode(connected=True)\nprint('Done!')","a9f1a067":"trace = dict (type = 'scattergeo', \n              lon = [-122.1, -77.2, 51.3],\n              lat = [37.4, 38.9, 35.6],\n              marker = dict(size = 10), \n              mode = 'markers',\n             )\n             ","85c1e00b":"data = [trace]\nlayout = dict(showlegend = False, geo = dict(showland = True, landcolor = 'silver'))","e7cb16b4":"fig = dict(data = data, layout = layout)\noffline.iplot(fig)","dda87a96":"#### <font color=Navy> Regression model with confidence interval line<\/font> ","a8e7f8e0":"### <font color=navy> <p style=\"text-align: left;\">MAP <\/p><\/font>","a1c91285":"## <font color=brown> <p style=\"text-align: center;\">&#9733; Building Visualization With Python  &#9733;<\/p><\/font> ","0b857aba":"### <font color=navy> <p style=\"text-align: left;\">&#9734; Bar Chart (Catplot) <\/p><\/font>","38029799":"#### <font color=Navy> Only sticks representing actual datapoints with height of 0.5 and shows the distribution of data<\/font> ","252d952d":"#### <font color=navy> <p style=\"text-align: left;\">Check the datatype of the column <\/p><\/font>","50eb711e":"#### <font color=navy> <p style=\"text-align: left;\">Have a look at your columns heading and types of data within the dataset. <\/p><\/font>","84cbb6cc":"![](https:\/\/fystorageacc.blob.core.windows.net\/forsharedfiles\/fy1.png)","908e472b":"##### <font color=navy> <p style=\"text-align: left;\">The relationship between all variables are analyzed and illustrated in pair. <\/p><\/font>","681a9056":"#### <font color=navy> <p style=\"text-align: left;\">To see the number of unique values (different categories) in the department column first must perform some preprocessing  <\/p><\/font>","7e0a983d":"### <font color=navy> <p style=\"text-align: left;\">&#9734; Lmplot <\/p><\/font>","a2757086":"### <font color=navy> <p style=\"text-align: left;\">&#9734; Regplot  <\/p><\/font>","09af605b":"#### <font color=Navy> KDE Plot described as Kernel Density Estimate is used for visualizing the Probability Density of a continuous variable. It depicts the probability density at different values in a continuous variable.<\/font> ","53f097c8":"#### <font color=navy> <p style=\"text-align: left;\">Check the result <\/p><\/font>","2e69a928":"#### <font color=Navy> Boxplots visualize the distribution of variables and provide a clearer view of the standard deviation, median, mean, range of data, and outliers. The bottom and top of the solid-lined box are the first and third quartiles, and the band inside the box is the median. The whiskers extend from the box to show the range of the data.<\/font> ","1be0b1eb":"#### <font color=navy> <p style=\"text-align: left;\">First create an object (sub dataframe) with all the variables that need to be included in correlation analysis and then create the plot. <\/p><\/font>","3843393e":"### <font color=navy> <p style=\"text-align: left;\">&#9734; Heat map <\/p><\/font>","532c2d3b":"#### <font color=Navy> Plot data points on a horizontal and a vertical axis in the attempt to show how much one variable is affected by another.<\/font> ","39bdc80b":"#### <font color=Navy> To configure the bandwith(std)<\/font> ","a6ef5a45":"Pie chart is used to illustrate numerical proportion. The point of a pie chart is to show the relationship of parts out of a whole. For example comparison between a percentiles from 100%.  <br>\n\n","023df7c0":"### <font color=green> <p style=\"text-align: center;\">&#9733; Initial Preparation  &#9733;<\/p><\/font>","6942b8ca":"#### <font color=Navy> All values are illustrated in a matrix and represented as colors.<\/font> ","e75b1d01":"#### <font color=Navy> The regplot and lmplot functions are closely related, but regplot is an axes-level function while the lmplot is a figure-level function.<\/font> \n","5df95e0c":"### <font color=navy> <p style=\"text-align: left;\">&#9734; KDE Plot <\/p><\/font>","f6deea86":"#### <font color=Navy> Catplot is best used for categorical data to show frequency information. Bar plots help to easily see the differences between the categories based on the size of the bar. categories are also easily divided and colour coded too.<\/font> ","3c19c283":"### <font color=navy> <p style=\"text-align: left;\">&#9734; Rug Plot <\/p><\/font>","dc9b874f":"### <font color=navy> <p style=\"text-align: left;\">&#9734; Boxplot <\/p><\/font>","10c77525":"#### <font color=Navy> Can join any plot of choice<\/font> ","19b6a0a2":"### <font color=navy> <p style=\"text-align: left;\">&#9734; Scatterplot <\/p><\/font>","dcf28f6e":"### <font color=navy> <p style=\"text-align: left;\">&#9734; Violin Plot <\/p><\/font>","34992846":"### <font color=navy> <p style=\"text-align: left;\">&#9734; Hexbin Plot <\/p><\/font>","25a6ab30":"### <font color=navy> <p style=\"text-align: left;\">&#9734; Multiple KDE plot <\/p><\/font>","7d957c97":"#### <font color=navy> <p style=\"text-align: left;\">To make the chart more comprehensible, define lables for each categories (thus instead of 1,2,3 the chart will show exact names of each department) and run the pie plot code<\/p><\/font>","1bf12619":"#### <font color=Navy> The bivariate analougues are histograms<\/font> ","4cb29555":"### <font color=navy> <p style=\"text-align: left;\">&#9734; Point Plot <\/p><\/font>","6a4a635b":"### <font color=navy> <p style=\"text-align: left;\">&#9734; Stripplot <\/p><\/font>","7214c004":"### <font color=navy> <p style=\"text-align: left;\">&#9734; Pie Chart <\/p><\/font>","7295740a":"#### <font color=navy> <p style=\"text-align: left;\">Convert the datatype from int to category <\/p><\/font>","7b54ac92":"### <font color=navy> <p style=\"text-align: left;\">&#9734; Joint Plot <\/p><\/font>","2544b609":"#### <font color=Navy> Shows all the observations within a variable while the locations of points are adjusted automatically to avoid overlap.<\/font> ","b5496737":"##### <font color=navy> <p style=\"text-align: left;\">The same scatter plot can be modified and improved by defining hue, color and size of bubble. <\/p><\/font>","335ae8e7":"#### <font color=navy> <p style=\"text-align: left;\">Load the HR dataset as pandas data frame. <\/p><\/font>","ae978ca1":"#### <font color=Navy> Shows all the observations within a variable while the locations of points are adjusted automatically to avoid overlap.<\/font> ","946ac233":"#### <font color=navy> <p style=\"text-align: left;\">Now your variable is ready and prepared for visualization <\/p><\/font>","5795fd2a":"### <font color=navy> <p style=\"text-align: left;\">&#9734; Distribution Plot with KDE line <\/p><\/font>","1e283ca2":"#### <font color=navy> <p style=\"text-align: left;\">The same pie chart &#11014;can be modified by adding legend, defining it\u2019s sizes, defining a part to explode, and adding colors to labels.<\/p><\/font>","9bbc5cb3":"### <font color=navy> <p style=\"text-align: left;\">&#9734; Swarmplots <\/p><\/font>","8e5b58fb":"<h4>This notebook showa all visualizations that can be made using Python. This can be a good resource to learn and play with python and its available and libraries.<\/h4>\n<h4>The dataset used in this notebook is IBM's HR dataset which is free to download from Kaggle.com<\/h4>\n<h4>[Download the IBM HR dataset from here](https:\/\/www.kaggle.com\/esmaeil391\/ibm-hr) <\/a><\/h4>\n<h4>After downloading the dataset to your personal computer, upload it into your Jupyter project folder.<\/h4>","8cfd7a7b":"#### <font color=Navy> The same distribution plot without Kernel Distribution Estimator line, vertical axis, and all individual datapoints. The data aso are devided to 40 bins<\/font> ","a65f5032":"#### <font color=Navy> Violin plot shows the distribution and range of the data<\/font> ","7f61ad3e":"#### <font color=navy> <p style=\"text-align: left;\">First create an object (dpartmentgrouped) from department and use groupby function to calculate the sum of employees in each department. Then use this object to build the chart <\/p><\/font>","e2e3306a":"### <font color=navy> <p style=\"text-align: left;\">&#9734; Pair Plot <\/p><\/font>","c148a31b":"#### <font color=navy> <p style=\"text-align: left;\"> The color of data points can be defined based on additional variable. <\/p><\/font>","19576ba6":"#### <font color=navy> <p style=\"text-align: left;\">First import the libraries necessary to build visualization. <\/p><\/font> "}}