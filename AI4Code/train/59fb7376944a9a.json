{"cell_type":{"42781aed":"code","3cc1e080":"code","736457c6":"code","339ae49b":"code","57c16309":"code","b4274621":"code","6eb68f1b":"code","646ad62a":"code","2aa3f72b":"code","08a4145b":"code","b7bb682e":"code","3ccc1000":"code","53b015d8":"code","ba4e79d4":"code","d307a6b9":"code","5771ca2c":"markdown","3eeb3e30":"markdown","81e86ecb":"markdown","169042f5":"markdown","ea0c3a83":"markdown"},"source":{"42781aed":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3cc1e080":"#import packages\nimport pandas as pd\nfrom pandas import datetime\nimport numpy as np\n\n\n#to plot within notebook\nimport matplotlib\nimport matplotlib.pyplot as plt\n%matplotlib inline\nplt.style.use('fivethirtyeight')\n# Above is a special style template for matplotlib, highly useful for visualizing time series data\n\nimport seaborn as sns\n\n\n#setting figure size\nfrom matplotlib.pylab import rcParams\nrcParams['figure.figsize'] = 10,10","736457c6":"# import Dataset\n\ndf = pd.read_csv('..\/input\/temperature-readings-iot-devices\/IOT-temp.csv', parse_dates=['noted_date'])\n\ndf.name = 'IOT'","339ae49b":"# converting index to datetime format.\n\ndf[\"Date\"] = pd.to_datetime(df[\"noted_date\"])","57c16309":"df.head(10)\n# useless features encountered which can be dropped.","b4274621":"cols_drop = ['id', 'noted_date', 'room_id\/id']","6eb68f1b":"# dropping columns\n\ndf = df.drop(cols_drop, axis=1)\n","646ad62a":"df.head(10)\n\n# duplicate rows encountered in the dataset","2aa3f72b":"df.dtypes","08a4145b":"print(\"the dataset has shape = {}\".format(df.shape))","b7bb682e":"rows_drop = ['temp', 'out\/in', 'Date'] \n\n# dropping ALL duplicte rows with all same values.\n\ndf.drop_duplicates(subset = rows_drop, \n                     keep = False, inplace = True)","3ccc1000":"df.describe()\n\n# duplicate rows have been dropped","53b015d8":"# building new features for time stamp.\n\ndef features_build(df):\n    df['Date'] = pd.to_datetime(df['Date'])\n    df['Year'] = df['Date'].dt.year\n    df['Month'] = df.Date.dt.month\n    df['Day'] = df.Date.dt.day\n    df['WeekOfYear'] = df.Date.dt.weekofyear\nfeatures_build(df)","ba4e79d4":"ax = sns.scatterplot(x=\"Month\", y=\"temp\", hue=\"out\/in\", data=df)\n\n# plotting discrete tempt values for month time stamp.","d307a6b9":"%%HTML\n<div class='tableauPlaceholder' id='viz1575283714956' style='position: relative'>\n<noscript><a href='#'><img alt=' ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Te&#47;TemperaturePlotsfromIOTData&#47;Dashboard1&#47;1_rss.png' style='border: none' \/>\n<\/a><\/noscript>\n<object class='tableauViz'  style='display:none;'>\n<param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/>\n<param name='embed_code_version' value='3' \/> \n<param name='site_root' value='' \/>\n<param name='name' value='TemperaturePlotsfromIOTData&#47;Dashboard1' \/>\n<param name='tabs' value='yes' \/><param name='toolbar' value='no' \/>\n<param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Te&#47;TemperaturePlotsfromIOTData&#47;Dashboard1&#47;1.png' \/>\n<param name='animate_transition' value='yes' \/>\n<param name='display_static_image' value='yes' \/>\n<param name='display_spinner' value='yes' \/>\n<param name='display_overlay' value='yes' \/>\n<param name='display_count' value='yes' \/>\n<\/object>\n<\/div>                \n<script type='text\/javascript'>\nvar divElement = document.getElementById('viz1575283714956');\nvar vizElement = divElement.getElementsByTagName('object')[0];\nvizElement.style.minWidth='420px';vizElement.style.maxWidth='1150px';vizElement.style.width='100%';\nvizElement.style.minHeight='583px';vizElement.style.maxHeight='883px';\nvizElement.style.height=(divElement.offsetWidth*0.75)+'px';\nvar scriptElement = document.createElement('script');                    \nscriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';     \nvizElement.parentNode.insertBefore(scriptElement, vizElement);          \n<\/script>","5771ca2c":"#### Please, comment below how much you liked this  kernel. feedbacks are heartily welcomed!\n\n**P.S.** *This is just a starter kernel. So, I haven't put much effort and tried to keep it short and simple.*\n\n## PLease UPVOTE if you liked the kernel. \n\n# THANKS! :-)","3eeb3e30":"### You can check this Tableau presentation in detail from this link: [here](https:\/\/public.tableau.com\/views\/TemperaturePlotsfromIOTData\/Dashboard2?:display_count=y&:toolbar=n&:origin=viz_share_link)\n\n### P.S. *You can also visit my tableau [profile](https:\/\/public.tableau.com\/profile\/atul.anand3150#!\/) to check my other VIZs*.\n","81e86ecb":"![Meme](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcTYTun5NvzTs9qTAy5zuN13vyyv8lwQNPMqxACQWeDcY8GUG7S0)","169042f5":"#### Thus, these presentations also verify our intuition observed from the Tableau observation. We already plotted similar plots on tableau.\n\n**Datas verified:**\n\n1. max tempt: 51*C\n2. min tempt: 21*C\n3. Highest Tempt(month): September\n4. outside tempt. > inside tempt. (anomalies excluded)\n5. tempt gap(between outside and inside) converges in middle of year.","ea0c3a83":"## other presentations and trends in the dataset are below:"}}