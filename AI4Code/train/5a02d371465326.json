{"cell_type":{"445a1c12":"code","fdaf49cd":"code","b7fef943":"code","2706b919":"code","f9bc42f4":"code","5a0268c9":"code","20e834a1":"code","a707ef18":"code","e818560e":"code","8b82dbf1":"code","8fe77ce2":"code","03b2b673":"code","475e23e4":"code","42096453":"code","7c0a11f2":"code","f40a03f5":"code","9efb7e45":"code","97e8f9b7":"code","36c085af":"code","12d19691":"code","4bab9072":"code","d3b9d638":"code","6d29856b":"code","e817291b":"code","471de01d":"code","e1227b5c":"code","e752544c":"code","14060f6d":"code","cc8df8d3":"code","50bf701a":"code","34b150af":"code","a75b8a76":"code","bb0a316c":"code","3ac366f5":"code","bb0e4f59":"code","100c37ab":"code","540601ce":"code","be62032e":"code","e60dbcbf":"code","d365420a":"code","2ba73b43":"code","12ed98cf":"code","9ca5dec6":"code","038e0a0a":"code","980163e2":"code","9bec9916":"code","e5d5f7a9":"code","f85a7338":"code","5598969c":"code","c19863b0":"code","4b10f863":"code","aef7ae21":"code","f1d9bcfd":"code","6e3ac2cd":"code","786efae4":"code","6974e941":"code","54e332ca":"code","d6e86ce6":"code","56911f85":"code","8289a358":"code","18a6dfee":"code","911366b1":"code","f524917c":"code","c48bab62":"code","c4d8c2e8":"code","c409e52b":"code","ea8fde64":"code","e0ce5c0f":"code","58366dfc":"code","45d657ef":"code","4403ea40":"code","01f55ccb":"code","85864f5f":"code","c9fcdffd":"code","ead388ae":"code","022f7032":"code","ffd92e1f":"code","61353603":"code","caa97046":"code","ab1d0455":"code","ac95e5ba":"code","466ffb1a":"code","e4d192ef":"code","0bf755b2":"code","32fc5639":"code","12124b15":"code","04981c13":"code","6d9145d5":"code","4d89d198":"code","c5dabdb7":"code","d08b7083":"code","04788321":"code","e37a84cb":"code","c1edf882":"code","08892a27":"code","86179e05":"code","5382194b":"code","a4e5aaaa":"code","bd5db8d0":"code","1b01feb9":"code","8b386686":"markdown","4f79f299":"markdown","4ea25713":"markdown","a194b016":"markdown","0aed200a":"markdown","e08bd4f8":"markdown","572c2676":"markdown","dab2c44d":"markdown","83f1f579":"markdown","2d242e4f":"markdown","77acc6ad":"markdown","34022797":"markdown","46175e45":"markdown","067a6bd5":"markdown","2072f6a2":"markdown","fbd80b61":"markdown","6fcae46a":"markdown","87248924":"markdown"},"source":{"445a1c12":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom warnings import filterwarnings\nfilterwarnings('ignore')","fdaf49cd":"Data=pd.read_csv('..\/input\/used-car-dataset-ford-and-mercedes\/ford.csv')","b7fef943":"Data.head()","2706b919":"Data.info()","f9bc42f4":"Data.isna().sum()","5a0268c9":"print('Model unique values: ',len(Data['model'].unique()))\nprint(Data['model'].unique())","20e834a1":"plt.figure(figsize=(25,8))\nsns.countplot(Data['model'])\nplt.show()","a707ef18":"plt.figure(figsize=(25,8))\nsns.countplot(Data['year'])\nplt.show()","e818560e":"print('Transmission unique: ',len(Data['transmission'].unique()))\nprint(Data['transmission'].unique())","8b82dbf1":"sns.countplot(Data['transmission'])\nplt.show()","8fe77ce2":"print('Fuelt type unique values: ',len(Data['fuelType'].unique()))\nprint(Data['fuelType'].unique())","03b2b673":"sns.countplot(Data['fuelType'])\nplt.show()","475e23e4":"Data['engineSize'].value_counts()","42096453":"plt.figure(figsize=(13,8))\nsns.countplot(Data['engineSize'])\nplt.show()","7c0a11f2":"plt.figure(figsize=(15,8))\nsns.countplot(Data['tax'])\nplt.show()","f40a03f5":"Data['price'].describe()","9efb7e45":"Data['fuelType'][Data['fuelType']=='Other']","97e8f9b7":"Data['year'][Data['year']<2000]","36c085af":"New_Data=Data.copy().drop(index=Data['fuelType'][Data['fuelType']=='Other'].index.tolist()+Data['year'][Data['year']<2000].index.tolist()) ","12d19691":"New_Data.info()","4bab9072":"data_model_dummies=pd.get_dummies(New_Data['model'])","d3b9d638":"data_model_dummies","6d29856b":"transmission_dummies=pd.get_dummies(New_Data['transmission'])","e817291b":"transmission_dummies","471de01d":"fueltype_dummies=pd.get_dummies(New_Data['fuelType'])","e1227b5c":"fueltype_dummies","e752544c":"New_Data=New_Data.drop(columns=(['fuelType','transmission','model']))  ","14060f6d":"New_Data.head()","cc8df8d3":"New_Data=pd.concat(([data_model_dummies,New_Data.iloc[:,:2],transmission_dummies,New_Data.iloc[:,2:3],fueltype_dummies,New_Data.iloc[:,3:]]),axis=1)","50bf701a":"New_Data","34b150af":"x=New_Data.copy().drop(columns='price')","a75b8a76":"x.head()","bb0a316c":"y=New_Data.copy().pop('price')","3ac366f5":"y.head()","bb0e4f59":"from sklearn.model_selection import train_test_split","100c37ab":"x_array=x.values\ny_array=y.values","540601ce":"x_array","be62032e":"y_array","e60dbcbf":"x_train,x_val,y_train,y_val=train_test_split(x_array,y_array,test_size=0.10,random_state=42) ","d365420a":"x_train.shape","2ba73b43":"y_train.shape","12ed98cf":"x_val.shape","9ca5dec6":"y_val.shape ","038e0a0a":"x_train,x_test,y_train,y_test=train_test_split(x_train,y_train,test_size=0.20,random_state=42)","980163e2":"x_train.shape","9bec9916":"y_train.shape","e5d5f7a9":"x_test.shape","f85a7338":"y_test.shape","5598969c":"from sklearn.preprocessing import StandardScaler","c19863b0":"obje_ss=StandardScaler()\n\nx_train_ss=obje_ss.fit_transform(x_train)\nx_val_ss=obje_ss.fit_transform(x_val)\nx_test_ss=obje_ss.fit_transform(x_test)","4b10f863":"x_train","aef7ae21":"x_train_ss","f1d9bcfd":"from sklearn.metrics import r2_score","6e3ac2cd":"from sklearn.linear_model import LinearRegression","786efae4":"model_le=LinearRegression().fit(x_train,y_train)\nmodel_le","6974e941":"y_pred=model_le.predict(x_val)","54e332ca":"print('Train success rate : %',model_le.score(x_train,y_train)*100)\nprint('Validation success rate : %',r2_score(y_val,y_pred)*100)","d6e86ce6":"y_pred[y_pred<0] # Linearregression outliner data predict is so bad  ","56911f85":"from sklearn.svm import SVR","8289a358":"model_svr=SVR(kernel='linear',degree=3).fit(x_train_ss,y_train)\nmodel_svr","18a6dfee":"y_pred=model_svr.predict(x_val_ss) ","911366b1":"print('Train success rate : %',model_svr.score(x_train_ss,y_train)*100)\nprint('Validation success rate : %',r2_score(y_val,y_pred)*100)","f524917c":"from sklearn.preprocessing import PolynomialFeatures","c48bab62":"obje_poly=PolynomialFeatures(degree=2)\n\nx_train_poly=obje_poly.fit_transform(x_train)\nx_val_poly=obje_poly.fit_transform(x_val)\nx_test_poly=obje_poly.fit_transform(x_test)","c4d8c2e8":"model_poly=LinearRegression(n_jobs=-1).fit(x_train_poly,y_train)\nmodel_poly","c409e52b":"y_pred=model_poly.predict(x_val_poly)","ea8fde64":"print('Train success rate : %',model_poly.score(x_train_poly,y_train)*100)\nprint('Validation success rate : %',r2_score(y_val,y_pred)*100)","e0ce5c0f":"from sklearn.ensemble import RandomForestRegressor","58366dfc":"model_rfr=RandomForestRegressor(n_estimators=100,n_jobs=-1,random_state=42).fit(x_train_ss,y_train)\nmodel_rfr","45d657ef":"y_pred=model_rfr.predict(x_val_ss)","4403ea40":"print('Train success rate : %',model_rfr.score(x_train_ss,y_train)*100)\nprint('Validation success rate : %',r2_score(y_val,y_pred)*100)","01f55ccb":"from sklearn.ensemble import AdaBoostRegressor","85864f5f":"model_ada=AdaBoostRegressor(n_estimators=10,random_state=42).fit(x_train_ss,y_train)\nmodel_ada","c9fcdffd":"y_pred=model_ada.predict(x_val_ss) ","ead388ae":"print('Train success rate : %',model_ada.score(x_train_ss,y_train)*100)\nprint('Validation success rate : %',r2_score(y_val,y_pred)*100)","022f7032":"from xgboost import XGBRegressor","ffd92e1f":"model_xgb=XGBRegressor(max_depth=3,learning_rate=0.1,n_estimators=100,verbosity=0,random_state=42).fit(x_train,y_train)\nmodel_xgb","61353603":"y_pred=model_xgb.predict(x_val) ","caa97046":"print('Train success rate : %',model_xgb.score(x_train,y_train)*100)\nprint('Validation success rate : %',r2_score(y_val,y_pred)*100)","ab1d0455":"from lightgbm import LGBMRegressor","ac95e5ba":"model_lgb=LGBMRegressor(max_depth=2,learning_rate=0.5,n_estimators=100,random_state=42).fit(x_train,y_train)\nmodel_lgb","466ffb1a":"y_pred=model_lgb.predict(x_val)","e4d192ef":"print('Train success rate : %',model_lgb.score(x_train,y_train)*100)\nprint('Validation success rate : %',r2_score(y_val,y_pred)*100)","0bf755b2":"import tensorflow\nlayer=tensorflow.keras.layers.experimental.preprocessing.Normalization()\nlayer.adapt(x_array)","32fc5639":"model_dnn=tensorflow.keras.Sequential()\nmodel_dnn.add(layer)\nmodel_dnn.add(tensorflow.keras.layers.Dense(64,activation='relu',input_dim=34))\nmodel_dnn.add(tensorflow.keras.layers.Dense(64,activation='relu'))\nmodel_dnn.add(tensorflow.keras.layers.Dense(1))\nmodel_dnn.compile(optimizer='Adam',loss='mean_absolute_error')","12124b15":"history=model_dnn.fit(x_train,y_train,epochs=400,verbose=1)  ","04981c13":"print(history.history['loss'][-1])","6d9145d5":"plt.plot(history.history['loss'], label='loss')\nplt.ylim([600, 1000])\nplt.xlim([0, 400])\nplt.xlabel('Epoch')\nplt.ylabel('Error [Kuvvet]')\nplt.legend()\nplt.grid(True)","4d89d198":"print('%',r2_score(y_val,model_dnn.predict(x_val))*100)","c5dabdb7":"def test_models(model_name):\n\n  for i in model_name:\n    print(f'{i.__class__} | Test success rate : % {r2_score(y_test,i.predict(x_test))*100}')\n\ndef test_models_ss(model_name):\n\n   for a in model_name:\n    print(f'{a.__class__} Test success rate : % {r2_score(y_test,a.predict(x_test_ss))*100}')","d08b7083":"model_names=[model_xgb,model_lgb,model_dnn]\nmodel_names_ss=[model_rfr,model_svr,model_ada]","04788321":"test_models(model_names)","e37a84cb":"test_models_ss(model_names_ss) ","c1edf882":"from sklearn.model_selection import cross_val_score","08892a27":"model_names=[model_rfr,model_ada,model_xgb,model_lgb]","86179e05":"def test_models_cross(model_name):\n\n  for i in model_name:\n    print(f'{i.__class__} | Test(Cross validation) success rate : % {cross_val_score(i,X=x_train,y=y_train,cv=5,n_jobs=-1).mean()*100}')\n\ndef test_models_ss_cross(model_name):\n\n   for a in model_name:\n    print(f'{a.__class__} | Test(Cross validation-ss) success rate : % {cross_val_score(a,X=x_train_ss,y=y_train,cv=5,n_jobs=-1).mean()*100}')","5382194b":"test_models_cross(model_names)","a4e5aaaa":"test_models_ss_cross(model_names)","bd5db8d0":"print('Support vector regression cross-val success rate:',cross_val_score(model_svr,X=x_train_ss,y=y_train,cv=3,n_jobs=-1).mean()*100)","1b01feb9":"print('DNN regression cross-val success rate:',r2_score(y_val,model_dnn.predict(x_val))*100) ","8b386686":"### Test","4f79f299":"### LinearRegression","4ea25713":"## Standart Scaler","a194b016":"## Find values","0aed200a":"### LightGBM","e08bd4f8":"### SupportVectorRegression","572c2676":"## Test","dab2c44d":"## Data Preprocessing","83f1f579":"## Cross-validation","2d242e4f":"### PolynomialRegression","77acc6ad":"## Models","34022797":"### RandomForestRegressor","46175e45":"## DNN","067a6bd5":"### AdaBoostRegressor","2072f6a2":"### XGBoostRegressor","fbd80b61":"## Train - Validation-Test","6fcae46a":"## Data Analysis","87248924":"### validation"}}