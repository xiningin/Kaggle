{"cell_type":{"a444f1cf":"code","6274e065":"code","4d4860d8":"code","e7ed551d":"code","399cfc53":"code","557de2f0":"code","693e0d2f":"code","15210ad2":"code","3bdfb925":"code","ee27c099":"code","17af866a":"code","593151ea":"code","3e719aa6":"code","0545e23d":"code","c262cc0b":"code","cdf62f97":"code","7052b8d1":"code","9db82f95":"code","cd669027":"code","1b762461":"code","b28d635c":"code","1b4fe466":"code","0dbb9ee9":"code","dd2ac1ec":"code","e21ef6b3":"code","96e435e1":"code","98dfc8f6":"code","5426978c":"code","c9d66e03":"code","e7d2c9dd":"code","88636830":"code","37008d4c":"code","a0ef398e":"code","d9870ae5":"code","0b36a8af":"code","2725fc88":"code","341e4bde":"code","76b3f7d0":"code","41127020":"code","86876223":"code","7072ec0f":"code","3ace23b6":"code","e01f37fb":"code","5a10e778":"code","2d8f5a85":"code","655608cb":"code","a44867a9":"code","9564be27":"markdown","ab2afd24":"markdown"},"source":{"a444f1cf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6274e065":"import pandas as pd \nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.simplefilter('ignore')\n","4d4860d8":"pd.set_option('display.max_columns',400)\ndf = pd.read_csv(\"..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv\" )","e7ed551d":"df.head(4)","399cfc53":"list(df.columns)","557de2f0":"df.info()","693e0d2f":"df.duplicated().sum()","15210ad2":"df.drop_duplicates(inplace=True)","3bdfb925":"df.isnull().sum()","ee27c099":"headers = {}\nfor col in df.columns:\n    headers.update({col:f\"{col} : {df.loc[0,col]}\"})","17af866a":"headers","593151ea":"df = df.iloc[1:,:].copy()\ndf = df[['Time from Start to Finish (seconds)','Q1','Q2','Q3','Q4','Q5','Q6','Q7_Part_1',\n       'Q8','Q9_Part_1','Q11','Q13','Q14_Part_1']]","3e719aa6":"df['Q1'].unique()","0545e23d":"plt.figure(figsize=(25,7))\nax = sns.countplot(df['Q1'])\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.title(headers['Q1'])\nfor p in ax.patches:\n    ax.annotate(\"%.1f%%\" % (100*float(p.get_height()\/df.shape[0])), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n                     ha='center', va='bottom', color='black', xytext=(0, 5),rotation = 'horizontal',\n                     textcoords='offset points')\nplt.show()","c262cc0b":"df['Q2'].unique()","cdf62f97":"plt.figure(figsize=(25,7))\nax = sns.countplot(df['Q2'])\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.title(headers['Q2'])\nfor p in ax.patches:\n    ax.annotate(\"%.1f%%\" % (100*float(p.get_height()\/df.shape[0])), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n                     ha='center', va='bottom', color='black', xytext=(0, 5),rotation = 'horizontal',\n                     textcoords='offset points')\nplt.show()","7052b8d1":"df['Q3'].unique()","9db82f95":"df['Q3'].value_counts()","cd669027":"plt.figure(figsize=(25,7))\nax = df['Q3'].value_counts()[:10].plot(kind='bar')\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.title(headers['Q3'])\nfor p in ax.patches:\n    ax.annotate(\"%.1f%%\" % (100*float(p.get_height()\/df.shape[0])), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n                     ha='center', va='bottom', color='black', xytext=(0, 5),rotation = 'horizontal',\n                     textcoords='offset points')\nplt.show()","1b762461":"df['Q4'].unique()","b28d635c":"df['Q4'].fillna(\"I prefer not to answer\" , inplace=True)","1b4fe466":"plt.figure(figsize=(25,7))\nax = sns.countplot(df['Q4'])\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.title(headers['Q4'])\nfor p in ax.patches:\n    ax.annotate(\"%.1f%%\" % (100*float(p.get_height()\/df.shape[0])), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n                     ha='center', va='bottom', color='black', xytext=(0, 5),rotation = 'horizontal',\n                     textcoords='offset points')\nplt.show()","0dbb9ee9":"df['Q5'].unique()","dd2ac1ec":"df['Q5'].fillna(\"Other\" , inplace=True)","e21ef6b3":"plt.figure(figsize=(25,7))\nax = sns.countplot(df['Q5'])\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.title(headers['Q5'])\nfor p in ax.patches:\n    ax.annotate(\"%.1f%%\" % (100*float(p.get_height()\/df.shape[0])), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n                     ha='center', va='bottom', color='black', xytext=(0, 5),rotation = 'horizontal',\n                     textcoords='offset points')\nplt.show()","96e435e1":"df['Q6'].unique()","98dfc8f6":"df['Q6'].fillna(\"I have never written code\" ,inplace=True)","5426978c":"plt.figure(figsize=(25,7))\nax = sns.countplot(df['Q6'])\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.title(headers['Q6'])\nfor p in ax.patches:\n    ax.annotate(\"%.1f%%\" % (100*float(p.get_height()\/df.shape[0])), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n                     ha='center', va='bottom', color='black', xytext=(0, 5),rotation = 'horizontal',\n                     textcoords='offset points')\nplt.show()","c9d66e03":"df['Q7_Part_1'].unique()","e7d2c9dd":"df['Q7_Part_1'].fillna('others' ,inplace=True)","88636830":"q7= df['Q7_Part_1'].value_counts()\nplt.figure(figsize=(25,7))\nplt.pie(q7.values ,labels=q7.index ,explode=[0,0.02], autopct=\"%.1f%%\")\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.ylabel(None)\nplt.title(headers['Q7_Part_1'])\nplt.show()","37008d4c":"df['Q8'].unique()","a0ef398e":"df['Q8'].fillna('Other',inplace=True)\ndf['Q8'].replace({'None':\"Other\"}, inplace=True)","d9870ae5":"plt.figure(figsize=(25,7))\nax = sns.countplot(df['Q8'])\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.title(headers['Q8'])\nfor p in ax.patches:\n    ax.annotate(\"%.1f%%\" % (100*float(p.get_height()\/df.shape[0])), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n                     ha='center', va='bottom', color='black', xytext=(0, 5),rotation = 'horizontal',\n                     textcoords='offset points')\nplt.show()","0b36a8af":"df['Q9_Part_1'].unique()","2725fc88":"df['Q9_Part_1'].fillna('Others' ,inplace=True)\ndf['Q9_Part_1'].replace({'Jupyter (JupyterLab, Jupyter Notebooks, etc) ':\"Jupyter Notebooks\"} , inplace=True)","341e4bde":"q9 = df['Q9_Part_1'].value_counts()\nplt.figure(figsize=(25,7))\nplt.pie(q9.values ,labels=q9.index , explode=[0,0.02]  ,autopct='%.1f%%')\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.ylabel(None)\nplt.title(headers['Q9_Part_1'])\nplt.show()","76b3f7d0":"df['Q11'].unique()","41127020":"df['Q11'].fillna('Other',inplace=True)\ndf['Q11'].replace({\"A cloud computing platform (AWS, Azure, GCP, hosted notebooks, etc)\":\"Cloud Platform\" ,\n                    \"A personal computer or laptop\":\"Personal Laptop\" ,\n                      \"A deep learning workstation (NVIDIA GTX, LambdaLabs, etc)\":\"DL Workstations\" , \n                        \"None\":\"Other\"},inplace=True)","86876223":"plt.figure(figsize=(25,7))\nax = sns.countplot(df['Q11'])\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.title(headers['Q11'])\nfor p in ax.patches:\n    ax.annotate(\"%.1f%%\" % (100*float(p.get_height()\/df.shape[0])), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n                     ha='center', va='bottom', color='black', xytext=(0, 5),rotation = 'horizontal',\n                     textcoords='offset points')\nplt.show()","7072ec0f":"headers['Q13']","3ace23b6":"df['Q13'].unique()","e01f37fb":"df['Q13'].fillna('Never',inplace=True)","5a10e778":"plt.figure(figsize=(25,7))\nax = sns.countplot(df['Q13'])\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.title(headers['Q13'])\nfor p in ax.patches:\n    ax.annotate(\"%.1f%%\" % (100*float(p.get_height()\/df.shape[0])), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n                     ha='center', va='bottom', color='black', xytext=(0, 5),rotation = 'horizontal',\n                     textcoords='offset points')\nplt.show()","2d8f5a85":"df['Q14_Part_1'].unique()","655608cb":"df['Q14_Part_1'].fillna('Other',inplace=True)","a44867a9":"plt.figure(figsize=(10,7))\nax = sns.countplot(df['Q14_Part_1'])\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.title(headers['Q14_Part_1'])\nfor p in ax.patches:\n    ax.annotate(\"%.1f%%\" % (100*float(p.get_height()\/df.shape[0])), (p.get_x() + p.get_width() \/ 2., abs(p.get_height())),\n                     ha='center', va='bottom', color='black', xytext=(0, 5),rotation = 'horizontal',\n                     textcoords='offset points')\nplt.show()","9564be27":"# Imports","ab2afd24":"# Read Data"}}