{"cell_type":{"15ed1d62":"code","f00d92c4":"code","645278fe":"code","1985319b":"code","13457c4c":"code","33392157":"code","65d78420":"code","c7a04e5c":"code","ac3ad20a":"code","c2a84c1f":"code","82014cfc":"code","6100e327":"code","aab8c625":"code","84f45130":"code","8bf4bb22":"code","8838094c":"markdown","ed408534":"markdown","f142c9cb":"markdown","0de6889d":"markdown","652654d2":"markdown","de33c8ce":"markdown","6fb9dcbd":"markdown","b485377d":"markdown"},"source":{"15ed1d62":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Conv2D,Flatten,MaxPooling2D,BatchNormalization,Dropout\nfrom keras.applications.vgg16 import VGG16\nfrom keras.utils import to_categorical\nfrom sklearn.metrics import classification_report\nfrom keras.preprocessing import image\nfrom keras.models import Model\nfrom tensorflow.keras.metrics import top_k_categorical_accuracy\nimport cv2\nimport glob\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","f00d92c4":"data = pd.read_csv('..\/input\/hmnist_28_28_RGB.csv')","645278fe":"data.info(null_counts=True)","1985319b":"def UnderSampling():\n    new_data_set = data[data['label']==3]\n\n    \n    for i in range(7):\n        ind = data[data['label']==i]\n        if(i not in [1,0,3,5]):\n            \n            sample_ind = ind.sample(n=800)\n        else:\n            sample_ind = ind\n        new_data_set = new_data_set.append(sample_ind)\n        \n    return new_data_set\n\n        \ndata_train = UnderSampling()\n","13457c4c":"data_train.info(null_counts=True)\n#metadata = pd.read_csv('..\/input\/HAM10000_metadata.csv')","33392157":"Y = data['label']\ndata.drop('label',axis=1,inplace=True)\ndata.head()","65d78420":"Y = to_categorical(Y,num_classes=7)","c7a04e5c":"from sklearn.model_selection import train_test_split\nX_train,X_test,Y_train,Y_test = train_test_split(data,Y,test_size=0.2,random_state=42)","ac3ad20a":"from sklearn.ensemble import RandomForestClassifier\nRF = RandomForestClassifier()\n\nfrom sklearn.model_selection import GridSearchCV\nparameters = {'n_estimators':[5,10,20],'min_samples_split':[2,50,100,150]}","c2a84c1f":"GS = GridSearchCV(RF,parameters,cv=5)\nGS.fit(X_train,Y_train)\n\n","82014cfc":"pred = GS.predict(X_test)\nfrom sklearn.metrics import accuracy_score\naccuracy_score(pred,Y_test)\n\n#print(classification_report(pred,Y_test))","6100e327":"model = Sequential()\nmodel.add(Dense(2352,activation='relu'))\nmodel.add(Dense(32,activation='relu'))\nmodel.add(Dense(250,activation = 'relu'))\n\nmodel.add(Dense(16,activation='relu'))\nmodel.add(BatchNormalization())\n\nmodel.add(Dense(50,activation='relu'))\nmodel.add(Dense(7,activation='softmax'))\n","aab8c625":"model.compile(loss='categorical_crossentropy',optimizer='adam',metrics=['accuracy'])","84f45130":"model.fit(np.array(X_train),np.array(Y_train),epochs=50,batch_size=10)","8bf4bb22":"model.save(\"skin_cancer.hd5\")","8838094c":"# 8. Try out different classifiers","ed408534":"# 7. Split data into training and testing","f142c9cb":"# 3. Check for null vals","0de6889d":"# 1. Import the required libraries","652654d2":"# 6. Convert Labels to categorical labels","de33c8ce":"# 2. Read the data required from the csv file","6fb9dcbd":"# 5. Separate features and labels","b485377d":"# 4. Write method for undersampling since too many 4's in dataset"}}