{"cell_type":{"ffb27ef0":"code","79f19bdc":"code","ea565712":"code","9c9f4515":"code","2e588635":"code","2f07d2c0":"code","53e8819b":"code","9e5a15fe":"code","b9b2fa3c":"code","0d348aa5":"code","147d98d5":"code","4019fb3d":"code","de899b95":"code","b9a2d4c5":"code","eb044980":"code","506b2511":"code","73abb8ef":"code","ede664d5":"code","e159394f":"code","ecb4390d":"markdown","3c781d34":"markdown","aea1ea4e":"markdown","b79acc58":"markdown","221998fb":"markdown"},"source":{"ffb27ef0":"#imports\nfrom fastai.vision.all import *\n# from fastai.callback.wandb import WandbCallback\nfrom fastai.callback.tracker import SaveModelCallback\n\nimport numpy as np\nimport pandas as pd\nimport glob\nfrom tqdm.auto import tqdm\nfrom plotnine import *\n# import wandb\n\nimport warnings\nwarnings.filterwarnings('ignore')","79f19bdc":"#specify that Id is string\ntrain = pd.read_csv('..\/input\/makpinlom\/train.csv', dtype=(str,str))\ntrain","ea565712":"#get filenames\nfnames = glob.glob('..\/input\/makpinlom\/train\/train\/*.jpg')\nfnames_df = pd.DataFrame({'fname': fnames, 'Id': [i.split('\/')[-1][:-4] for i in fnames]})\nfnames_df","9c9f4515":"#combine id, label and filename\ntrain_fnames = train.merge(fnames_df)\ntrain_fnames","2e588635":"#create datablock that does 0.2 random split for validation\nsplitter = RandomSplitter(valid_pct=0.2, seed=42)\ndblock = DataBlock(\n    blocks=(ImageBlock, CategoryBlock), #x - image; y - single class\n    get_x=ColReader(2), #x is stored in column 2\n    get_y=ColReader(1), #y is stored in column 1\n    splitter=splitter, #use parent folder as train-valid split\n    item_tfms=Resize(224, method=ResizeMethod.Squish),  #resize everyone with squishing\n    batch_tfms=aug_transforms(size=224,), #standard fastai augmentation at size 512\n    )\n\n#turn datablock into dataloader\ndls = dblock.dataloaders(train_fnames, path='.', bs=64) #batch size = 64","2f07d2c0":"dls.train.show_batch(max_n=9, nrows=3)","53e8819b":"dls.train.show_batch(max_n=4, nrows=1, unique=True)","9e5a15fe":"#create learner with dataloaders and your desired architecture like resnet34\nlearn = cnn_learner(dls, \n                    resnet34, \n                    metrics=[accuracy,]).to_fp16()","b9b2fa3c":"#find optimal learning rate; let's go with around 4e-3\nlearn.lr_find()","0d348aa5":"#initialize tracking in wandb\n# wandb.init(project='makpinlom')","147d98d5":"#finetune \nlearn.fine_tune(epochs=3,\n          base_lr=4e-3, #max lr; when unfrozen base_lr\/2\n          freeze_epochs=1, #how many epochs to train frozen\n          lr_mult=100, #train feature extractor with max lr at base_lr\/lr_mult\n          pct_start=0.2, #start decreasing lr at \n          div=5.0, #start at base_lr (max lr) \/ div\n          cbs=[SaveModelCallback(monitor='accuracy'),]\n#               WandbCallback(), #track to wandb] #monitor accuracy and save best model\n          )","4019fb3d":"#see validation performance\ninterp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix()","de899b95":"#what things model gets wrong the most\ninterp.plot_top_losses(9, nrows=3)","b9a2d4c5":"#nice classification reports\ninterp.print_classification_report()","eb044980":"#get test file names\ntest_fnames = get_image_files(\"..\/input\/makpinlom\/test\/test\/\")\nlen(test_fnames)","506b2511":"#create test dataloader\ntst_dl = dls.test_dl(test_fnames,shuffle=False)\ntst_dl.show_batch(max_n=9)","73abb8ef":"preds = learn.get_preds(dl=tst_dl) # get prediction logits\npred_idxs = preds[0].argmax(1) # get index with highest logit\npred_labs = [learn.dls.train_ds.vocab[i] for i in pred_idxs] #convert index to labels\npred_labs[:10]","ede664d5":"#put in dataframe\ntest_df = pd.DataFrame({'fname':test_fnames,'Predicted':pred_labs})\ntest_df['Id'] = test_df.fname.map(lambda x: str(x)[-8:-4])\ntest_df = test_df[['Id','Predicted']].sort_values('Id').reset_index(drop=True)\ntest_df.tail()","e159394f":"#save to csv to submit\ntest_df.to_csv('\/kaggle\/working\/submission1.csv',index=False)","ecb4390d":"## Train Models","3c781d34":"## Datasets to DataLoaders","aea1ea4e":"## Create Submission CSV","b79acc58":"This is a sample notebook for using fastai to get started on AI Builders' Mak Pin Lom competition.","221998fb":"# Getting Started with Mak Pin Lom with fastai"}}