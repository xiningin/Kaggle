{"cell_type":{"d1dbf4c4":"code","52bd384f":"code","24718d6c":"code","81fa8855":"markdown"},"source":{"d1dbf4c4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\njson_files = []\nfor dirname, _, filenames in os.walk('\/kaggle\/input\/samplemegadata\/'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        json_files.append(os.path.join(dirname, filename))\n# Any results you write to the current directory are saved as output.","52bd384f":"import json as js\nimport pathlib\nfrom tqdm import tqdm\njson_files","24718d6c":"fake_num = 0\nreal_num = 0\nfile_num = 0\nvideo_num = 0\nfake_real = 0\ntrain_num = 0\ntest_num = 0\nfake_files = []\nreal_files = []\nno_origin = []\nfor path in tqdm(json_files):    \n    with open(path, 'r') as f:\n        file_num += 1\n        j = js.loads(f.read())\n        video_num += len(j.keys())\n        for key in j.keys():\n            video = j[key]\n            if video['split'] == 'train':\n                train_num += 1\n            else:\n                test_num += 1\n\n            if video['label'] == 'FAKE':\n                fake_num += 1\n                fake_files.append(key)\n                if 'original' in video.keys():\n                    fake_real += 1\n                else:\n                    no_origin.append(video)\n            else:\n                real_num += 1\n                real_files.append(key)\n        \nprint('fake_num is: ', fake_num)\nprint('real_num is: ', real_num)\nprint('file_num is: ', file_num)\nprint('video_num is: ', video_num)\nprint('fake_real is: ', fake_real)\nprint('train_num is: ', train_num)\nprint('test_num is: ', test_num)\n# print('fake_files is: ', fake_files)\n# print('real_files is: ', real_files)\nprint('no_origin is: ', no_origin)","81fa8855":"### This notebook simply analysis the summary of the whole dataset from the megadata json files"}}