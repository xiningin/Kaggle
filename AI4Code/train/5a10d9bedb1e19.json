{"cell_type":{"7005a0d4":"code","fb40a4df":"code","a2fde056":"code","c6f8876e":"code","f2c82891":"code","c33f1ef5":"code","3a162071":"code","c1481894":"code","e965913e":"code","2b0dc3de":"code","82936fdb":"code","586aa202":"code","ad247d6a":"code","c37a5a24":"code","72e6be82":"code","e4f69405":"code","38b884ba":"markdown","64718bf0":"markdown","b6e8a3ce":"markdown","d4091aae":"markdown","d486d33c":"markdown","d4ddcb5c":"markdown","11db2d65":"markdown","9386dd02":"markdown","99ad0f9f":"markdown","cbdabc59":"markdown","7b3c176d":"markdown","7e261039":"markdown","f2274077":"markdown","160985b1":"markdown","597f524a":"markdown"},"source":{"7005a0d4":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n","fb40a4df":"iris_df = pd.read_csv(\"..\/input\/Iris.csv\")\niris_df.head()\n#iris_df.info()","a2fde056":"iris_df.describe()","c6f8876e":"iris_df.groupby('Species').count()","f2c82891":"def plotvio(p,i):\n    plt.subplot(2,2,i)\n    g = sns.violinplot(y=p, x='Species', data=iris_df, inner = 'quartile')\n    #plt.show()","c33f1ef5":"plt.figure(figsize=(15,10))\nplotvio('SepalLengthCm',1)\nplotvio('SepalWidthCm',2)\nplotvio('PetalLengthCm',3)\nplotvio('PetalWidthCm',4)","3a162071":"#palette = {'red': 'Iris-setosa','blue': 'Iris-versicolor', 'green': 'Iris-virginica' }\n\n#pd.plotting.scatter_matrix(iris_df, figsize = (10,10))\nsns.pairplot(iris_df,hue='Species',diag_kind='kde')","c1481894":"iris_df.drop('Id',axis=1,inplace = True)\niris_df.head()","e965913e":"#iris_df.corr().head()\nsns.heatmap(iris_df.corr(),annot=True)","2b0dc3de":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\n","82936fdb":"iris_df_pre = iris_df.drop('Species', axis=1)\niris_Spe = iris_df['Species']","586aa202":"train_p, test_p, train_t, test_t = train_test_split(iris_df_pre, iris_Spe, test_size = 0.333)","ad247d6a":"N = [] #No. of Neighbours\nA = [] #Accuracy Score\n\nfor k in range(1,30):\n    model = KNeighborsClassifier(n_neighbors=k)\n    model.fit(train_p, train_t)\n    y_pred = model.predict(test_p)\n    A.append(accuracy_score(test_t, y_pred))\n    N.append(k)\n    \nplt.grid(True)\nplt.plot(N,A)","c37a5a24":"model = SVC(gamma = 'scale')\nmodel.fit(train_p, train_t)\ny_pred = model.predict(test_p)\naccuracy_score(test_t, y_pred)","72e6be82":"model = DecisionTreeClassifier()\nmodel.fit(train_p, train_t)\ny_pred = model.predict(test_p)\naccuracy_score(test_t, y_pred)","e4f69405":"N = [] #No. of Neighbours\nA = [] #Accuracy Score\n\nfor k in range(1,20):\n    model = RandomForestClassifier(n_estimators=k)\n    model.fit(train_p, train_t)\n    y_pred = model.predict(test_p)\n    A.append(accuracy_score(test_t, y_pred))\n    N.append(k)\n    \nplt.grid(True)\nplt.plot(N,A)","38b884ba":"Reading the file into iris_df","64718bf0":"A correlation map would help us see how strongly 2 parameters are related to each other which I might use later for training the model.","b6e8a3ce":"## 3. Decision Tree","d4091aae":"* SepalWidth is almost independent of SepalLength but loosely dependent(-ve corr) on the other 2 parameters\n* Both the Petal parameters are very strongly dependent on each other, and the SepalLength.\n\nThis being a classification problem, I don't really see the need for any regression curves for data visualization and hence, the scatter plots along with the heatmap seems enough for identifying how the parameters vary with each other.\n\n\n## Choosing an Algorithm\nWe first import all the required modules and packages from scikit-learn","d486d33c":"I've described the table. I'll try to show some univariate plots.","d4ddcb5c":"* The 'Id' column won't really help in classifying a particular instance, so I drop(or delete) it.","11db2d65":"## 4. Random Forest","9386dd02":"## 1. K Nearest Neighbours","99ad0f9f":"This is one of my firsts here. Please feel free to review the code and leave constructive criticism. ","cbdabc59":"* Most of the plots show a linear relationship\n* Also, these form clusters according to their Species Type.\n","7b3c176d":"#### *Splitting the data into training set and test set so that we can train using one set and test using another.*","7e261039":"I create seperate the 'Species' (target variable) and rest of the columns (features). ","f2274077":"Violin Plots could help me visualise the description table better.","160985b1":"### Importing all the basic libraries","597f524a":"## 2. Support Vector Machine"}}