{"cell_type":{"0f66cb39":"code","b4703285":"code","e3eb60a7":"code","c791cfa2":"code","917fafde":"code","380c117c":"markdown","f8607c93":"markdown","6d352a21":"markdown","1d10b686":"markdown","f4a9ff71":"markdown","ee4aac81":"markdown","20ca701d":"markdown"},"source":{"0f66cb39":"import pandas as pd\n\ntrain_labels = pd.read_csv('\/kaggle\/input\/data-science-bowl-2019\/train_labels.csv')\ntrain_labels.groupby(['title'])['accuracy_group'].mean()","b4703285":"scores_dict = {\n    'Bird Measurer (Assessment)': 1,\n    'Cart Balancer (Assessment)': 2,\n    'Cauldron Filler (Assessment)': 2,\n    'Chest Sorter (Assessment)': 1,\n    'Mushroom Sorter (Assessment)': 2\n}","e3eb60a7":"test = pd.read_csv('\/kaggle\/input\/data-science-bowl-2019\/test.csv')\ntest_users = set(test['installation_id'])","c791cfa2":"%%time\nsub = []\nfor u in test_users:\n    user_data = test.loc[test['installation_id']==u, :] \n    user_data = user_data.sort_values(['timestamp']) # sort by time\n    assessment = list(user_data['title'])[-1] # title of the last event (always an assessment)\n    score = scores_dict[assessment] # score the assesment\n    sub.append([u, score])","917fafde":"sub_df = pd.DataFrame(sub, columns=['installation_id', 'accuracy_group'])\nsub_df.to_csv('submission.csv', index=False)","380c117c":"## Identify the last assessment for each user and score them","f8607c93":"In this notebook, we look at train_labels and calculate the average accuracy_group for different assesments in the training data. We then round them to the nearest integer and use them as predictions for the test data.","6d352a21":"# Simple baseline based on aggregated results for assessments","1d10b686":"Clearly some assesments are harder than the others..\n\nWe'll round these values and put them in a dictionary","f4a9ff71":"### Average Accuracy Group by Assessment","ee4aac81":"## Get unique users in test data","20ca701d":"### Submission"}}