{"cell_type":{"e6ecef18":"code","4535f15f":"code","09d7593d":"code","e2bf1298":"code","132aa450":"code","d681d28e":"code","ae7cd652":"code","c0cb77a2":"code","d578cf50":"code","dff74bc2":"code","b80a868c":"code","47f257c6":"code","823f127e":"code","f100edc4":"code","ffc2e03e":"code","6aad5686":"code","2df32ba6":"code","42f5b85d":"code","da815fb8":"code","e61811b4":"code","807840c3":"code","1cfea6a3":"code","2f09630a":"code","a7bd0283":"code","fab0c93b":"code","59c38d89":"code","94f2e05e":"markdown","8b9561be":"markdown","bc6f0473":"markdown","ef965673":"markdown","70591bc3":"markdown","605dcfb2":"markdown","11648d35":"markdown","d346f3ef":"markdown","28ea146a":"markdown","fad6e0fe":"markdown","4af4f614":"markdown","bf569037":"markdown","7d316f54":"markdown","87848b4c":"markdown","dc643127":"markdown","114e7ff1":"markdown","b43cdf99":"markdown","2d8abd32":"markdown","1f7701f0":"markdown","5b6ee39c":"markdown","aa50e06c":"markdown","348a2669":"markdown","f9efbbb3":"markdown","11fba311":"markdown","f778ff35":"markdown","55b8bce5":"markdown","995cd32b":"markdown","b99517da":"markdown","e1679260":"markdown","077effcc":"markdown","8a91487f":"markdown","1c90c353":"markdown","6351af32":"markdown","51b64ece":"markdown","acbc8940":"markdown","ada88765":"markdown","f0c23b0e":"markdown"},"source":{"e6ecef18":"import numpy as np\nimport pandas as pd\npd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set_style('darkgrid')","4535f15f":"# https:\/\/www.kaggle.com\/mylesoneill\/world-university-rankings\nuni_filepath = '..\/input\/world-university-rankings\/timesData.csv'\nuni_data = pd.read_csv(uni_filepath)\n\n# Shape and preview\nprint(uni_data.shape)\nuni_data.head()","09d7593d":"# https:\/\/www.kaggle.com\/fedesoriano\/heart-failure-prediction\nheart_filepath = '..\/input\/heart-failure-prediction\/heart.csv'\nheart_data = pd.read_csv(heart_filepath)\n\n# Shape and preview\nprint(heart_data.shape)\nheart_data.head()","e2bf1298":"# Preprocess data for plotting\nharvard=uni_data[uni_data.university_name=='Harvard University']\nmit=uni_data[uni_data.university_name=='Massachusetts Institute of Technology']\ncambridge=uni_data[uni_data.university_name=='University of Cambridge']\noxford=uni_data[uni_data.university_name=='University of Oxford']\n\nharvard.loc[:,'world_rank'] = harvard.loc[:,'world_rank'].astype(float)\nmit.loc[:,'world_rank'] = mit.loc[:,'world_rank'].astype(float)\ncambridge.loc[:,'world_rank'] = cambridge.loc[:,'world_rank'].astype(float)\noxford.loc[:,'world_rank'] = oxford.loc[:,'world_rank'].astype(float)\n\n# Set width and height of figure\nplt.figure(figsize=(12,5))\n\n# Lineplot, one for each selected uni\nsns.lineplot(x='year', y='world_rank', data=harvard, label='Harvard')\nsns.lineplot(x='year', y='world_rank', data=mit, label='MIT')\nsns.lineplot(x='year', y='world_rank', data=cambridge, label='Cambridge')\nsns.lineplot(x='year', y='world_rank', data=oxford, label='Oxford')\n\n# Aesthetics\nplt.title('Times University Rankings, 2011-2016')\nplt.xlabel('Year')\nplt.ylabel('Rank')\nplt.ylim(7.2,0.8)","132aa450":"# Preprocess data for plotting\nuni_num={'Name': ['Harvard', 'MIT', 'Cambridge', 'Oxford'],\n    'num_students': [float(harvard.num_students.iloc[0].replace(',','')), \n    float(mit.num_students.iloc[0].replace(',','')),\n    float(cambridge.num_students.iloc[0].replace(',','')), \n    float(oxford.num_students.iloc[0].replace(',',''))]}\n\n# Convert to dataframe\nplot_df=pd.DataFrame(uni_num)\nplot_df","d681d28e":"# Set width and height of figure\nplt.figure(figsize=(10,4))\n\n# Barplot\nsns.barplot(x='Name', y='num_students', data=plot_df)\n\n# Aesthetics\nplt.title('Number of students in 2011')\nplt.xlabel('University')\nplt.ylabel('Number of students')","ae7cd652":"# Preprocess data for plotting\nuni_heat={'Name': ['Harvard', 'MIT', 'Cambridge', 'Oxford'],\n    'Teaching': [float(harvard.loc[:,'teaching'].iloc[0]), \n        float(mit.loc[:,'teaching'].iloc[0]),\n        float(cambridge.loc[:,'teaching'].iloc[0]), \n        float(oxford.loc[:,'teaching'].iloc[0])],\n    'Inter. outlook': [float(harvard.loc[:,'international'].iloc[0]), \n        float(mit.loc[:,'international'].iloc[0]),\n        float(cambridge.loc[:,'international'].iloc[0]), \n        float(oxford.loc[:,'international'].iloc[0])],\n    'Research': [float(harvard.loc[:,'research'].iloc[0]), \n        float(mit.loc[:,'research'].iloc[0]),\n        float(cambridge.loc[:,'research'].iloc[0]), \n        float(oxford.loc[:,'research'].iloc[0])],\n    'Citations': [float(harvard.loc[:,'citations'].iloc[0]), \n        float(mit.loc[:,'citations'].iloc[0]),\n        float(cambridge.loc[:,'citations'].iloc[0]), \n        float(oxford.loc[:,'citations'].iloc[0])],\n    'Income': [float(harvard.loc[:,'income'].iloc[0]), \n        float(mit.loc[:,'income'].iloc[0]),\n        float(cambridge.loc[:,'income'].iloc[0]), \n        float(oxford.loc[:,'income'].iloc[0])],\n        }\n\n# Convert to dataframe\nheat_df=pd.DataFrame(uni_heat)\nheat_df.set_index('Name', inplace=True)\nheat_df","c0cb77a2":"# Set width and height of figure\nplt.figure(figsize=(12,6))\n\n# Heatmap with annotations\nsns.heatmap(data=heat_df.T, annot=True, fmt='g', cmap=\"Blues\",  vmin=0, vmax=100)\n\n# Aesthetics\nplt.title('Heatmap of university rankings in 2011')\nplt.xlabel('')","d578cf50":"# Set width and height of figure\nplt.figure(figsize=(8,5))\n\n# Scatterplot showing relationship between Age and Maximum Heart Rate\nsns.scatterplot(x='Age', y='MaxHR', data=heart_data)\n\n# Aesthetics\nplt.title('Scatterplot of Age vs Max Heart Rate')\nplt.ylabel('Maximum Heart Rate (bpm)')","dff74bc2":"# Set width and height of figure\nplt.figure(figsize=(8,5))\n\n# Regplot shows regression line ontop of scatterplot\nsns.regplot(x='Age', y='MaxHR', data=heart_data, line_kws={\"color\": \"purple\"})\n\n# Aesthetics\nplt.title('Scatterplot of Age vs Max Heart Rate')\nplt.ylabel('Maximum Heart Rate (bpm)')","b80a868c":"# Set width and height of figure\nplt.figure(figsize=(8,5))\n\n# Hue colours the points according to a categorical variable\nsns.scatterplot(x='Age', y='MaxHR', data=heart_data, hue='HeartDisease')\n\n# Aesthetics\nplt.title('Scatterplot of Age vs Max Heart Rate')\nplt.ylabel('Maximum Heart Rate (bpm)')","47f257c6":"# Set width and height of figure has to be set within lmplot, note: width=height*aspect\n\n# lmplot can plot a regression line for each category\nsns.lmplot(x='Age', y='MaxHR', data=heart_data, hue='HeartDisease', height=5, aspect=1.6)\n\n# Aesthetics\nplt.title('Scatterplot of Age vs Max Heart Rate')\nplt.ylabel('Maximum Heart Rate (bpm)')","823f127e":"# Set width and height of figure\nplt.figure(figsize=(8,5))\n\n# Swarmplot separates the scatterplot accoring to categorical variable\nsns.swarmplot(x='HeartDisease', y='MaxHR', data=heart_data)\n\n# Aesthetics\nplt.title('Swarmplot of Heart Disease vs Max Heart Rate')\nplt.ylabel('Maximum Heart Rate (bpm)')","f100edc4":"# Set width and height of figure\nplt.figure(figsize=(8,5))\n\n# Hue can be used to colour points according to third variable (Angina, a chestpain)\nsns.swarmplot(x='HeartDisease', y='MaxHR', data=heart_data, hue='ExerciseAngina')\n\n# Aesthetics\nplt.title('Swarmplot of Heart Disease vs Max Heart Rate')\nplt.ylabel('Maximum Heart Rate (bpm)')","ffc2e03e":"# Set width and height of figure\nplt.figure(figsize=(8,5))\n\n# Godge can be used to additionally separate the swarmplot accorinding to hue\nsns.swarmplot(x='HeartDisease', y='MaxHR', data=heart_data, hue='ExerciseAngina', dodge=True)\n\n# Aesthetics\nplt.title('Swarmplot of Heart Disease vs Max Heart Rate')\nplt.ylabel('Maximum Heart Rate (bpm)')","6aad5686":"# Set width and height of figure\nplt.figure(figsize=(8,5))\n\n# Simple violinplot\nsns.violinplot(x='HeartDisease', y='MaxHR', data=heart_data)\n\n# Aesthetics\nplt.title('Violinplot of Heart Disease vs Max Heart Rate')\nplt.ylabel('Maximum Heart Rate (bpm)')","2df32ba6":"# Set width and height of figure\nplt.figure(figsize=(8,5))\n\n# We can even overlay a swarmplot onto a violinplot\nsns.violinplot(x='HeartDisease', y='MaxHR', data=heart_data)\nsns.swarmplot(x='HeartDisease', y='MaxHR', data=heart_data.iloc[:450,:], color='white') # 50% of data\n\n# Aesthetics\nplt.title('Swa-lin plot of Heart Disease vs Max Heart Rate')\nplt.ylabel('Maximum Heart Rate (bpm)')","42f5b85d":"# Set width and height of figure\nplt.figure(figsize=(8,5))\n\n# Split can be used compare hue's side by side\n# 'Scal=count' scales the width of each wing by the number of samples\nsns.violinplot(x='HeartDisease', y='MaxHR', data=heart_data, \n               hue='ExerciseAngina', split=True, scale='count') \n\n# Aesthetics\nplt.title('Violinplot of Heart Disease vs Max Heart Rate')\nplt.ylabel('Maximum Heart Rate (bpm)')","da815fb8":"# Set width and height of figure\nplt.figure(figsize=(8,5))\n\n# Histogram, note: binwidth specifies the width of each column\nsns.histplot(x='Age', data=heart_data, binwidth=2)\n\n# Aesthetics\nplt.title('Histogram of Age of patients')\nplt.ylabel('Number')","e61811b4":"# Set width and height of figure\nplt.figure(figsize=(8,5))\n\n# Countplot counts the number of entries appearing in each category\nsns.countplot(x='ChestPainType', data=heart_data)\n\n# Aesthetics\nplt.title('Countplot of chest pain types of patients')\nplt.ylabel('Count')","807840c3":"# Set width and height of figure\nplt.figure(figsize=(8,5))\n\n# Hue can be used to show relationship with another categorical variable\nsns.countplot(x='ChestPainType', data=heart_data, hue='HeartDisease')\n\n# Aesthetics\nplt.title('Countplot of chest pain types of patients')\nplt.ylabel('Count')","1cfea6a3":"# Set width and height of figure\nplt.figure(figsize=(8,5))\n\n# Density plot with shading\nsns.kdeplot(x='Age', data=heart_data, shade=True)\n\n# Aesthetics\nplt.title('Distribution of Age of patients')\nplt.ylabel('Number')","2f09630a":"# Set width and height of figure\nplt.figure(figsize=(8,5))\n\n# Alternatively we can plot a kde using histplot using kde=True\nsns.histplot(x='Age', data=heart_data, binwidth=2, kde=True)\n\n# Aesthetics\nplt.title('Distribution of Age of patients')\nplt.ylabel('Number')","a7bd0283":"# Set width and height of figure\nplt.figure(figsize=(8,5))\n\n# 2D density plot with a colour fill\nsns.jointplot(x='Age', y='MaxHR', data=heart_data,\n              kind='kde', fill=True, thresh=0, cmap='Blues')","fab0c93b":"# Set width and height of figure\nplt.figure(figsize=(8,5))\n\n# 2D density plot with a colour fill\nsns.jointplot(x='Age', y='MaxHR', data=heart_data, kind='hex')","59c38d89":"# Figure with 3 subplots\nfig, axes = plt.subplots(1, 3, figsize=(15, 5), sharey=True)\n\n# Overall title\nfig.suptitle('Swarmplots of Heart Disease vs Max Heart Rate \\n')\n\n# Common x and y labels\nfig.supxlabel('Heart Disease')\nfig.supylabel('Maximum Heart Rate (bpm)')\n\n# Subplot 1\nsns.swarmplot(ax=axes[0], x='HeartDisease', y='MaxHR', data=heart_data.iloc[:400,:])\naxes[0].set_title('\\n Swarmplot')\naxes[0].set_xlabel('')\naxes[0].set_ylabel('')\n\n# Subplot 2\nsns.swarmplot(ax=axes[1], x='HeartDisease', y='MaxHR', data=heart_data.iloc[:400,:], hue='ExerciseAngina')\naxes[1].set_title('\\n Swarmplot with hue')\naxes[1].set_xlabel('')\naxes[1].set_ylabel('')\n\n# Subplot 3\nsns.swarmplot(ax=axes[2], x='HeartDisease', y='MaxHR', data=heart_data.iloc[:400,:], hue='ExerciseAngina', dodge=True)\naxes[2].set_title('\\n Swarmplot with dodge')\naxes[2].set_xlabel('')\naxes[2].set_ylabel('')","94f2e05e":"# Violinplot - sns.violin","8b9561be":"* This extends the scatter plot to also plot the distribution of each variable next to the main plot.\n* It has lots of different styles which can be experimented with.","bc6f0473":"**kind='hex'**","ef965673":"**hue**","70591bc3":"# Bar charts - sns.barplot","605dcfb2":"* KDE stands for Kernel Density Estimate\n* It approximates the distribution by a smooth function","11648d35":"**Heart Failure Prediction Dataset**","d346f3ef":"* Swarmplots can be thought of as categorical scatterplots\n* They show the relationship between a categorical and a continuous variable\n* Colour can be used to show the relationship between a third categorical variable","28ea146a":"**hue**","fad6e0fe":"The purpose of this notebook is to showcase and get familiar with the Python library *Seaborn*, which is used to make beautiful data visualisations. Below is a tentative list of the different types of plots we will cover.\n\nFor **trends**:\n* Line plots\n\nFor **relationships**:\n* Bar charts\n* Heat maps\n* Scatter plots (and with regression lines: regplot, lmplot)\n* Categorical scatter plots (swarmplot, violinplot)\n\nFor **distributions**:\n* Histograms\n* Density plots (kdeplot, jointplot)\n\nOther features:\n* Subplots\n","4af4f614":"**lmplot**","bf569037":"**hue**","7d316f54":"# Density plot - sns.kdeplot","87848b4c":"**countplot**","dc643127":"* Histograms show the distribution of a single continuous variable\n* Countplots can be thought of as histograms for categorical variables","114e7ff1":"**Split and scale**","b43cdf99":"**kde on histogram**","2d8abd32":"**dodge**","1f7701f0":"# Lineplot - sns.lineplot","5b6ee39c":"**swarm+violin (=swa-lin?)**","aa50e06c":"# Swarm plots - sns.swarmplot","348a2669":"**regplot**","f9efbbb3":"* These show the relationship between two continuous variables.\n* Colour can used to show the relationship between a third categorical variable.","11fba311":"# Jointplot - sns.jointplot","f778ff35":"* Lineplots can be used to show a relationship over time. \n* Multiple lines can show trends for multiple groups. ","55b8bce5":"# Heatmaps - sns.heatmap","995cd32b":"* Displays colour coded patterns for tables of numbers\n* Useful when comparing a categorical variable against other variables (on the same scale) simulatenously","b99517da":"* These are my favourite :D\n* They are like swarmplots but they use kernel density estimates to smooth out the data. ","e1679260":"# Libraries","077effcc":"# Data","8a91487f":"# Scatterplot - sns.scatterplot","1c90c353":"**Times Higher Education World University Ranking**","6351af32":"# Histogram - sns.histplot","51b64ece":"# Introduction","acbc8940":"# Subplot - plt.subplots","ada88765":"**kind='kde'**","f0c23b0e":"* Used to compare quantities for multiple groups\n* Useful when the x variable is categorical and the y value is continuous"}}