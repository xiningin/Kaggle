{"cell_type":{"f4a0abf7":"code","4c743871":"code","82aa02e3":"code","535f9b65":"code","98e33c79":"code","ffe35207":"code","6549a7fe":"code","b5ff8b74":"code","897edb00":"code","7efaf440":"code","c396648d":"code","09612bdb":"code","043f0ecb":"code","7d47aac3":"code","8944a61b":"code","b0623595":"code","db598ad7":"code","731a2fee":"code","9ce4f880":"code","bc7bd0bd":"code","7c9015c8":"code","69262fc6":"code","f7de89b3":"code","810b2302":"code","3ee2dca4":"markdown","192b314b":"markdown"},"source":{"f4a0abf7":"import numpy as np\nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns","4c743871":"df = pd.read_csv('..\/input\/hackereath-holiday-season-deep-learning-contest\/dataset\/train.csv')\ndf.head()","82aa02e3":"sns.countplot(df['Class'])","535f9b65":"from keras.applications.inception_v3 import InceptionV3,preprocess_input","98e33c79":"from keras.preprocessing.image import ImageDataGenerator","ffe35207":"#It's good to preprocess images by the function provided by the model\ndatagen = ImageDataGenerator(\n        preprocessing_function=preprocess_input)","6549a7fe":"train_generator = datagen.flow_from_dataframe(\n    df,\n    directory='..\/input\/hackereath-holiday-season-deep-learning-contest\/dataset\/train',\n    x_col = 'Image',\n    y_col = 'Class',\n    target_size=(299,299),\n    class_mode = 'categorical',\n    batch_size=32)","b5ff8b74":"base_model = InceptionV3(include_top=False,weights='imagenet',input_shape=(299,299,3))","897edb00":"base_model.trainable = False","7efaf440":"from keras import layers,models","c396648d":"model = models.Sequential()\nmodel.add(base_model)\nmodel.add(layers.GlobalAveragePooling2D())\nmodel.add(layers.Dense(512,activation='relu'))\nmodel.add(layers.Dropout(0.5))\nmodel.add(layers.Dense(256,activation='relu'))\nmodel.add(layers.Dense(6,activation='softmax'))","09612bdb":"model.summary()","043f0ecb":"model.compile(\n    optimizer='adam',\n    loss = 'categorical_crossentropy',\n    metrics = ['accuracy'])","7d47aac3":"train_steps = np.ceil(train_generator.n\/train_generator.batch_size)","8944a61b":"model.fit(\n    train_generator,\n    epochs=12,\n    batch_size=32,\n    steps_per_epoch=train_steps)","b0623595":"test_df = pd.DataFrame()\ntest_images = os.listdir('..\/input\/hackereath-holiday-season-deep-learning-contest\/dataset\/test')\ntest_df['Image']=test_images\ntest_df.head()","db598ad7":"test_generator = datagen.flow_from_dataframe(\n    test_df,\n    directory='..\/input\/hackereath-holiday-season-deep-learning-contest\/dataset\/test',\n    x_col = 'Image',\n    y_col = None,\n    target_size=(299,299),\n    class_mode = None,\n    batch_size=32,\n    shuffle = False)","731a2fee":"test_steps = np.ceil(test_generator.n\/test_generator.batch_size)","9ce4f880":"pred = model.predict_generator(\n    test_generator,\n    steps = test_steps,\n    verbose = 1)","bc7bd0bd":"pred = np.argmax(pred,axis=-1)","7c9015c8":"test_df['Class']=pred","69262fc6":"num_to_class = dict((y,x) for (x,y) in train_generator.class_indices.items())\nnum_to_class","f7de89b3":"test_df['Class']=test_df['Class'].map(num_to_class)\ntest_df.head()","810b2302":"test_df.to_csv('pred.csv',index=False)","3ee2dca4":"# Introdution\n1. This notebook demonstrate the use of transfer learning to achieve high accuracy.\n2. The current version gives around 91% accuracy on leaderboard.\n3. This notebook can be further improved to give higher accuracy.\n4. My accuracy on leaderboard is 93.78 %.\n5. The notebook is beginner friendly.\n6. Dont forget to upvote if you like.","192b314b":"![](https:\/\/st3.depositphotos.com\/1998651\/13850\/v\/600\/depositphotos_138506364-stock-illustration-cup-of-coffee-with-have.jpg)"}}