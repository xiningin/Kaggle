{"cell_type":{"01d2dcf6":"code","09e9252c":"code","529d366e":"code","1bf948c4":"code","597a21ae":"code","9606c5e9":"code","6c6cd6cf":"code","bf99614e":"code","c9e3cf30":"code","96f66ec9":"code","0350f3d7":"code","58307163":"code","fdabfe35":"code","45960f95":"code","79d3a4c6":"code","7c1b2fd8":"code","18746e34":"code","7a3a3878":"code","894f3344":"code","b739f6e4":"code","e4913835":"code","0903be59":"code","e0282848":"code","02578fce":"code","ee5453f3":"code","356ffe96":"code","d9b3174b":"code","fb9bf463":"code","dcb5a468":"code","a310e628":"code","5531e933":"code","a7b99bf8":"code","8a832b10":"code","8105e19d":"markdown","c9028a9f":"markdown","2791702d":"markdown","fdd52ef8":"markdown","ee0f15fc":"markdown","7c7d1a6f":"markdown","5447aeaa":"markdown","363d4a33":"markdown","4adbb0eb":"markdown","246d9ad5":"markdown","e9bd2893":"markdown","9a631b6b":"markdown","adfafd46":"markdown","d2759eb1":"markdown","c0db8bee":"markdown","e904f154":"markdown","c5719f28":"markdown","a1b6498f":"markdown","7fe0691e":"markdown"},"source":{"01d2dcf6":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","09e9252c":"import matplotlib.pyplot as plt \nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly_express as px\nimport cufflinks as cf\ncf.go_offline()\ncf.set_config_file(offline=False, world_readable=True)\nfrom wordcloud import WordCloud,STOPWORDS\n\nimport warnings            \nwarnings.filterwarnings(\"ignore\") ","529d366e":"space_data = pd.read_csv('\/kaggle\/input\/all-space-missions-from-1957\/Space_Corrected.csv')\nspace_data.head()","1bf948c4":"space_data = space_data.drop(columns=['Unnamed: 0', 'Unnamed: 0.1'])","597a21ae":"space_data.columns = ['Company Name', 'Location', 'Datum', 'Detail', 'Status Rocket', 'Rocket', 'Status Mission']","9606c5e9":"space_data['DateTime'] = pd.to_datetime(space_data['Datum'])\n\n# Extract the launch year\nspace_data['Year'] = space_data['DateTime'].apply(lambda datetime: datetime.year)\n\n# Extract the country of launch\nspace_data[\"Country\"] = space_data[\"Location\"].apply(lambda location: location.split(\", \")[-1])","6c6cd6cf":"# check missing data\n\ntotal_of_all = space_data.isnull().sum().sort_values(ascending=False)\npercent_of_all = (space_data.isnull().sum()\/space_data.isnull().count()).sort_values(ascending=False)\nmissing_data_test = pd.concat([total_of_all, percent_of_all], axis=1, keys=['Total', 'Percent'])\nmissing_data_test.head()","bf99614e":"# handle missing values\n\nspace_data['Rocket'] = space_data['Rocket'].fillna(0)\nspace_data.head()","c9e3cf30":"# lauches per company bar chart\n\ncompany_launch_analysis = pd.DataFrame(space_data['Company Name'].value_counts().sort_values(ascending=False))\ncompany_launch_analysis = company_launch_analysis.rename(columns={'Company Name':'Count'})\n\ntrace = go.Bar(x = company_launch_analysis.index[:20],\n              y = company_launch_analysis['Count'][:20],\n              marker = dict(color='rgba(255,155,128,0.5)',\n              line = dict(color='rgb(0,0,0)', width=1.5)))\n\nlayout = go.Layout(title=\"Top 25 company with their no. of lauches\",\n                  xaxis=dict(title='Company Name',zeroline= False,\n                         gridcolor='rgb(183,183,183)',showline=True),\n                  yaxis=dict(title='Lauch Counts',zeroline= False,\n                            gridcolor='rgb(183,183,183)',showline=True),\n                  font=dict(family='Courier New, monospace', size=12, color='rgb(0,0,0)')\n)\ndata = [trace]\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","96f66ec9":"fig = px.pie(company_launch_analysis, values=company_launch_analysis['Count'], names=company_launch_analysis.index,\n             title='Company and Their Lauches Ratio in The World',\n            )\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.update_layout(\n    template='plotly_white'\n)\nfig.show()","0350f3d7":"country_launch_analysis = pd.DataFrame(space_data['Country'].value_counts().sort_values(ascending=False))\ncountry_launch_analysis = country_launch_analysis.rename(columns={'Country':'Count'})\n\ntrace = go.Bar(x = country_launch_analysis.index[:15],\n              y = country_launch_analysis['Count'][:15],\n              marker = dict(color='rgba(125, 215, 180, 0.5)',\n              line = dict(color='rgb(0,0,0)', width=1.5)))\n\nlayout = go.Layout(title=\"Top 15 countries with their no. of lauches\",\n                  xaxis=dict(title='Country Name',zeroline= False,\n                         gridcolor='rgb(183,183,183)',showline=True),\n                  yaxis=dict(title='Lauch Counts',zeroline= False,\n                            gridcolor='rgb(183,183,183)',showline=True),\n                  font=dict(family='Courier New, monospace', size=12, color='rgb(0,0,0)')\n)\ndata = [trace]\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","58307163":"fig = px.pie(country_launch_analysis, values=country_launch_analysis['Count'], names=country_launch_analysis.index,\n             title='Countries and Their Lauches Ratio in The World',\n            )\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.update_layout(\n    template='plotly_white'\n)\nfig.show()","fdabfe35":"location_launch_analysis = pd.DataFrame(space_data['Location'].value_counts().sort_values(ascending=False))\nlocation_launch_analysis = location_launch_analysis.rename(columns={'Location':'Count'})\n\ntrace = go.Bar(x = location_launch_analysis.index[:25],\n              y = location_launch_analysis['Count'][:25],\n              marker = dict(color='rgba(50, 160, 80, 0.5)',\n              line = dict(color='rgb(0,0,0)', width=1.5)))\n\nlayout = go.Layout(title=\"Top 25 locations with their no. of lauches\",\n                  xaxis=dict(title='Loaction Name',zeroline= False,\n                         gridcolor='rgb(183,183,183)',showline=True),\n                  yaxis=dict(title='Lauch Counts',zeroline= False,\n                            gridcolor='rgb(183,183,183)',showline=True),\n                  font=dict(family='Courier New, monospace', size=12, color='rgb(0,0,0)')\n)\ndata = [trace]\nfig = go.Figure(data = data, layout = layout)\nfig.update_layout(\n    autosize=False,\n    width=1200,\n    height=700,)\niplot(fig)","45960f95":"fig = px.pie(location_launch_analysis, values=location_launch_analysis['Count'], names=location_launch_analysis.index,\n             title='Locations and Their Lauches Ratio in The World',\n            )\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.update_layout(\n    template='plotly_white',\n    autosize=False,\n    width=1200,\n    height=700\n)\nfig.show()","79d3a4c6":"# status analysis\n\nstatus_rocket_analysis = pd.DataFrame(space_data['Status Rocket'].value_counts().sort_values(ascending=False))\nstatus_rocket_analysis = status_rocket_analysis.rename(columns={'Status Rocket':'Count'})\n\ntrace = go.Bar(x = status_rocket_analysis.index,\n              y = status_rocket_analysis['Count'],\n              marker = dict(color='rgba(115, 155, 214, 0.5)',\n              line = dict(color='rgb(0,0,0)', width=1.5)))\n\nlayout = go.Layout(title=\"Status analysis\",\n                  xaxis=dict(title='Status of rockets',zeroline= False,\n                         gridcolor='rgb(183,183,183)',showline=True),\n                  yaxis=dict(title='Counts of rockets',zeroline= False,\n                            gridcolor='rgb(183,183,183)',showline=True),\n                  font=dict(family='Courier New, monospace', size=12, color='rgb(0,0,0)')\n)\ndata = [trace]\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","7c1b2fd8":"# mission status\n\nmission_rocket_analysis = pd.DataFrame(space_data['Status Mission'].value_counts().sort_values(ascending=False))\nmission_rocket_analysis = mission_rocket_analysis.rename(columns={'Status Mission':'Count'})\n\ntrace = go.Bar(x = mission_rocket_analysis.index,\n              y = mission_rocket_analysis['Count'],\n              marker = dict(color='rgba(150, 200, 100, 0.5)',\n              line = dict(color='rgb(0,0,0)', width=1.5)))\n\nlayout = go.Layout(title=\"Mission analysis\",\n                  xaxis=dict(title='Status of Mission',zeroline= False,\n                         gridcolor='rgb(183,183,183)',showline=True),\n                  yaxis=dict(title='Counts',zeroline= False,\n                            gridcolor='rgb(183,183,183)',showline=True),\n                  font=dict(family='Courier New, monospace', size=12, color='rgb(0,0,0)')\n)\ndata = [trace]\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","18746e34":"fig = px.pie(mission_rocket_analysis, values=mission_rocket_analysis['Count'], names=mission_rocket_analysis.index,\n             title='Mission Success and Failure Ratio')\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.update_layout(\n    template='plotly_white'\n)\nfig.show()","7a3a3878":"# launches per year\n\nyear_launch_analysis = pd.DataFrame(space_data['Year'].value_counts().sort_values(ascending=False))\nyear_launch_analysis = year_launch_analysis.rename(columns={'Year':'Count'})\n\ntrace = go.Bar(x = year_launch_analysis.index,\n              y = year_launch_analysis['Count'],\n              marker = dict(color='rgba(255,155,128,0.5)',\n              line = dict(color='rgb(0,0,0)', width=1.5)))\n\nlayout = go.Layout(title=\"Years with no. of lauches\",\n                  xaxis=dict(title='Years',zeroline= False,\n                         gridcolor='rgb(183,183,183)',showline=True),\n                  yaxis=dict(title='Lauch Counts',zeroline= False,\n                            gridcolor='rgb(183,183,183)',showline=True),\n                  font=dict(family='Courier New, monospace', size=12, color='rgb(0,0,0)')\n)\ndata = [trace]\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","894f3344":"# company wise status ratio\n\nsuccess_data = space_data[space_data['Status Mission']=='Success']\nsuccess_data.head()","b739f6e4":"# success rate for company\n\nsuccess_data_analysis_company = pd.DataFrame(success_data['Company Name'].value_counts().sort_values(ascending=False))\nsuccess_data_analysis_company = success_data_analysis_company.rename(columns={'Company Name':'Count'})\ncompany_launch_analysis['Count2'] = success_data_analysis_company['Count']\ncompany_launch_analysis['Success rate'] = (company_launch_analysis['Count2']\/company_launch_analysis['Count'])*100\ncompany_launch_analysis = company_launch_analysis.fillna(0)\nsuccess_rate_company = pd.DataFrame(company_launch_analysis['Success rate'].sort_values(ascending=False))","e4913835":"trace = go.Bar(x = success_rate_company.index,\n              y = success_rate_company['Success rate'],\n              marker = dict(color='rgba(120, 110, 180, 0.5)',\n              line = dict(color='rgb(0,0,0)', width=1.5)))\n\nlayout = go.Layout(title=\"Success rate of various company\",\n                  xaxis=dict(title='Company Name',zeroline= False,\n                         gridcolor='rgb(183,183,183)',showline=True),\n                  yaxis=dict(title='Success rate(in percentage)',zeroline= False,\n                            gridcolor='rgb(183,183,183)',showline=True),\n                  font=dict(family='Courier New, monospace', size=12, color='rgb(0,0,0)')\n)\ndata = [trace]\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","0903be59":"fig = px.pie(success_rate_company, values=success_rate_company['Success rate'], names=success_rate_company.index,\n             title='Success Ratio of Companies in the world',\n            )\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.update_layout(\n    template='plotly_white'\n)\nfig.show()","e0282848":"#  success rate of country\nsuccess_data_analysis_country = pd.DataFrame(success_data['Country'].value_counts().sort_values(ascending=False))\nsuccess_data_analysis_country = success_data_analysis_country.rename(columns={'Country':'Count'})\ncountry_launch_analysis['Count2'] = success_data_analysis_country['Count']\ncountry_launch_analysis['Success rate'] = (country_launch_analysis['Count2']\/country_launch_analysis['Count'])*100\ncountry_launch_analysis = country_launch_analysis.fillna(0)\nsuccess_rate_country = pd.DataFrame(country_launch_analysis['Success rate'].sort_values(ascending=False))","02578fce":"trace = go.Bar(x = success_rate_country.index[:15],\n              y = success_rate_country['Success rate'][:15],\n              marker = dict(color='rgba(125, 215, 180, 0.5)',\n              line = dict(color='rgb(0,0,0)', width=1.5)))\n\nlayout = go.Layout(title=\"Success rate of various countries\",\n                  xaxis=dict(title='Country Name',zeroline= False,\n                         gridcolor='rgb(183,183,183)',showline=True),\n                  yaxis=dict(title='Success rate(in percentage)',zeroline= False,\n                            gridcolor='rgb(183,183,183)',showline=True),\n                  font=dict(family='Courier New, monospace', size=12, color='rgb(0,0,0)')\n)\ndata = [trace]\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","ee5453f3":"fig = px.pie(success_rate_country, values=success_rate_country['Success rate'], names=success_rate_country.index,\n             title='Success Ratio of countries in The World',\n            )\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.update_layout(\n    template='plotly_white'\n)\nfig.show()","356ffe96":"countries_dict = {\n    'Russia' : 'Russian Federation',\n    'New Mexico' : 'USA',\n    \"Yellow Sea\": 'China',\n    \"Shahrud Missile Test Site\": \"Iran\",\n    \"Pacific Missile Range Facility\": 'USA',\n    \"Barents Sea\": 'Russian Federation',\n    \"Gran Canaria\": 'USA',\n    \"India\": 'India',\n}\n\nspace_data['Country'] = space_data['Country'].replace(countries_dict)","d9b3174b":"space_sunbrust = space_data.groupby(['Country', 'Company Name', 'Status Mission'])['Datum'].count().reset_index()\nspace_sunbrust.columns = ['country', 'company', 'status', 'count']\nfig = px.sunburst(\n    space_sunbrust, \n    path=[\n        'country', \n        'company', \n        'status'\n    ], \n    values='count', \n    title='Sunburst chart for all countries',\n)\nfig.show()","fb9bf463":"def wordcloud(string):\n    wc = WordCloud(width=800,height=500,mask=None,random_state=21, max_font_size=110,stopwords=stop_words).generate(string)\n    fig=plt.figure(figsize=(16,8))\n    plt.axis('off')\n    plt.imshow(wc)","dcb5a468":"stop_words=set(STOPWORDS)\ncountry_string = \" \".join(space_data['Country'])\ncompany_string = \" \".join(space_data['Company Name'])\ndetail_string = \" \".join(space_data['Detail'])\nlocation_string = \" \".join(space_data['Location'])","a310e628":"# country wordcloud\nwordcloud(country_string)","5531e933":"# cloud for company\nwordcloud(company_string)","a7b99bf8":"wordcloud(location_string)","8a832b10":"wordcloud(detail_string)","8105e19d":"1.2 **Read CSV Data**","c9028a9f":"2.3. **Location vs Their Launch Frequency**","2791702d":"1.5 **handle missing values**","fdd52ef8":"2.7 **Company Wise Success Rate**","ee0f15fc":"# If you found this kernel helpful, please upvote it","7c7d1a6f":"2.1 **Space Company VS Their Launches**","5447aeaa":"2.8 **Success Rate of Various Countries**","363d4a33":"**WordClouds**","4adbb0eb":"# 1. **About Dataset**","246d9ad5":"1.3 **Data Pre-Processing**","e9bd2893":"2.9 **SunBrust Chart**","9a631b6b":"2.5 **Mission Status Counts**","adfafd46":"1.4 **check missing data**","d2759eb1":"2.6 **Year wise Launches**","c0db8bee":"**This notebook is my attempt to visualize the Space Missions data (originally obtained from Next SpaceFlight) put together by Agirlcoding. This dataset contains some details all the space missions since the beginning of Space Race (1957).**","e904f154":"1.1 **Import Libraries**","c5719f28":"**2.2 Country vs Their Lauches**","a1b6498f":"# 2.  **Data Visualisation**","7fe0691e":"2.4. **Rocket Status Counts**"}}