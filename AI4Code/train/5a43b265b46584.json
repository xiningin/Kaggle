{"cell_type":{"b3b3f789":"code","3223a68e":"code","b05d7c3d":"code","a0703acf":"code","ffef33bc":"code","8ad992cd":"code","7a4b9079":"code","787ff4c3":"code","21dcb29c":"code","a1b13055":"code","bcd94fea":"code","855e5001":"code","9c3035f2":"code","9d053327":"code","8f274679":"code","659bf84a":"code","017374cd":"code","4eb4e767":"code","43f2e4ce":"code","219cec75":"code","4bbeda70":"code","a5b06ee4":"code","28de0250":"code","ba13e83e":"code","0813e5b0":"code","5cb31fa6":"code","f9eac80e":"code","39766ce5":"markdown","5ef4beb7":"markdown","a3dbf848":"markdown","b76eb532":"markdown","267a8c2a":"markdown","d39248bf":"markdown","2de0f202":"markdown","2197c2e1":"markdown","0f728a9f":"markdown","6b14abb8":"markdown","37899b82":"markdown","acd4bd7a":"markdown","c6b3127b":"markdown","2d5af285":"markdown","0f25c85a":"markdown","2392a02e":"markdown","e9e78626":"markdown","548e2ac7":"markdown"},"source":{"b3b3f789":"'''import my libraries '''\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nfrom sklearn.linear_model import LinearRegression \nfrom sklearn.linear_model import SGDRegressor\nfrom sklearn.svm import SVR\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.ensemble import RandomForestRegressor\nimport warnings \nwarnings.filterwarnings('ignore')","3223a68e":"'''load training dataset'''\nexercise = pd.read_csv('..\/input\/fitness-data\/exercise.csv') \nCalories = pd.read_csv('..\/input\/fitness-data\/calories.csv')","b05d7c3d":"exercise.head()","a0703acf":"Calories.head()","ffef33bc":"calories = Calories.drop(['User_ID'],axis =1)\ndf = pd.concat([exercise,calories],axis =1)\n\ndf.head()","8ad992cd":"df['Gender'] = df['Gender'].map({'female':0, 'male':1})\n\ndf.head()","7a4b9079":"df.hist()","787ff4c3":"df.isnull().sum()","21dcb29c":"sns.heatmap(df.isnull(),cbar=False, cmap='viridis')","a1b13055":"df.describe()\n","bcd94fea":"sns.distplot(df['Calories'])","855e5001":"#sns.countplot(x=df['Calories'],hue=df['Gender'],data=df)\nsns.barplot(x=df['Gender'], y=df['Calories'], data=df,\n                 palette=\"Blues_d\")","9c3035f2":"sns.set_theme(style=\"ticks\")\nsns.jointplot(x=df['Age'], y=df['Calories'], kind=\"hex\", color=\"#4CB391\")","9d053327":"corr_matrix = df.corr()\ncmap = sns.diverging_palette(230, 20, as_cmap=True) \nsns.heatmap(corr_matrix, annot=False ,cmap=cmap)\n\n","8f274679":"df.corr()['Calories'].abs()","659bf84a":"C = corr_matrix.nlargest(4, 'Calories')['Calories'].index\nfor i in C : \n    var = i\n    data = pd.concat([df['Calories'], df[var]], axis=1)\n    data.plot.scatter(x=var, y='Calories')","017374cd":"N = corr_matrix.nsmallest(4,'Calories')['Calories'].index\nfor i in N :    \n    var = i\n    sns.set_theme(style=\"white\")\n    sns.relplot(x=var, y=\"Calories\",sizes=(40, 400), alpha=.5, palette=\"muted\",height=6, data=df)","4eb4e767":"train =  X = df.iloc[:,:-1]\ny = df['Calories']","43f2e4ce":"scl = MinMaxScaler(feature_range = (0, 1))\nX = scl.fit_transform(X)\nX","219cec75":"X_train ,X_test ,y_train ,y_test = train_test_split(X, y , test_size = 0.3, random_state = 4)","4bbeda70":"g = GradientBoostingRegressor(n_estimators = 150, learning_rate = 1.5, max_depth = 3)","a5b06ee4":"g = g.fit(X_train,y_train)\nscore = g.score(X_train,y_train)\npercentage = \"{:.0%}\".format(score)\ny_tpred = g.predict(X_test)","28de0250":"print('MAE:', metrics.mean_absolute_error(y_test, y_tpred))  \nprint('MSE:', metrics.mean_squared_error(y_test, y_tpred))  \nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, y_tpred)))\nprint('VarScore:',metrics.explained_variance_score(y_test,y_tpred))\nprint('Acc_Score:',percentage)","ba13e83e":"plt.style.use(['dark_background'])\nfig = plt.figure(figsize=(30,15),facecolor='b',edgecolor='g')\nplt.scatter(y_test,y_tpred ,s=10,c='g',label='Predicted') \nplt.plot(y_test,y_test,'white' ,label='Test' ,linewidth=2.0)\nplt.legend(fontsize=20)\nplt.show()","0813e5b0":"y_pred = g.predict(X)\nSubmission = pd.DataFrame({ 'User_ID': Calories['User_ID'],\n                            'Calories': y_pred })\nSubmission.to_csv(\"Submission.csv\", index=False)\nSubmission = Submission.iloc[ :401 ,:]","5cb31fa6":"Submission.rename(columns={'User_ID': 'id'}, inplace=True)","f9eac80e":"Submission.head()","39766ce5":"# **Load Libraries And Data**","5ef4beb7":"# **Submission**","a3dbf848":"**Correlation between features**","b76eb532":"**smallest 4 correlation with y**","267a8c2a":"**Aggregate data into a single file for easy handling in analysis and cleaning**","d39248bf":"**The Relation between type and burn**","2de0f202":"# **Feature Scaling**","2197c2e1":"**Gradient Boosting Classifier**","0f728a9f":"**largest 4 correlation with y**","6b14abb8":"**X ,y Split**","37899b82":"**The Relation between age and burn**","acd4bd7a":"# **Train & Test Split**","c6b3127b":"# **Machine Learning Model**","2d5af285":"**Checking missing values**","0f25c85a":"# **EDA and Visualization**","2392a02e":"# **Analyze and display the output**","e9e78626":"**there is no missing values**","548e2ac7":"**Convert cat into nums**"}}