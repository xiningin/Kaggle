{"cell_type":{"497a6227":"code","c40cccf7":"code","56fbeb26":"code","3e511a08":"code","2cd3d34f":"code","eb162dc1":"code","33f962da":"code","b6937061":"code","e33016c3":"code","ebaed5ef":"markdown","4088e665":"markdown","8cc702eb":"markdown","06cefaf8":"markdown","e855e169":"markdown","dfddb42e":"markdown","0b4f8318":"markdown","7bd39b41":"markdown"},"source":{"497a6227":"import pandas as pd\nimport tensorflow as tf\nfrom tensorflow import keras","c40cccf7":"features_columns = ['p (mbar)', 'VPmax (mbar)', 'VPdef (mbar)', 'sh (g\/kg)', 'rho (g\/m**3)', 'wv (m\/s)']\ntarget_column = \"T (degC)\"\nall_columns = features_columns + [target_column]\nsplit_fraction = 0.9\nsampling_rate = 6\npast = 720\nfuture = 72\nbatch_size = 1024\nepochs = 5\nsequence_length = int(past \/ sampling_rate)","56fbeb26":"train = pd.read_csv(\"..\/input\/jena-climate\/jena_climate_2009_2016.csv\")\ntrain.head()","3e511a08":"train[features_columns] = (train[features_columns] - train[features_columns].mean()) \/ train[features_columns].std()","2cd3d34f":"train_split = int(split_fraction * int(train.shape[0]))\n\nstart = past + future\n\nend = start + train_split\n\ntrain_data = train.iloc[0: train_split - 1][all_columns]\n\nval_data = train.iloc[train_split:][all_columns]\n\nx_end = len(val_data) - past - future\n\nlabel_start = train_split + past + future\n\nx_train = train_data[all_columns].values\n\ny_train = train.iloc[start:end][target_column]\n\nx_val = train.iloc[:x_end][all_columns].values\n\ny_val = train.iloc[label_start:][target_column]\n\ntrain_ds = keras.preprocessing.timeseries_dataset_from_array(\n    x_train,\n    y_train,\n    sequence_length=sequence_length,\n    sampling_rate=sampling_rate,\n    batch_size=batch_size,\n)\n\nval_ds = keras.preprocessing.timeseries_dataset_from_array(\n    x_val,\n    y_val,\n    sequence_length=sequence_length,\n    sampling_rate=sampling_rate,\n    batch_size=batch_size,\n)","eb162dc1":"def get_model():\n    model = keras.Sequential([\n        keras.layers.Input(shape=(sequence_length, len(all_columns))),\n        keras.layers.LSTM(128, return_sequences=True, kernel_regularizer=\"l2\"),\n        keras.layers.LSTM(32, return_sequences=False, kernel_regularizer=\"l2\"),\n        keras.layers.Dense(32, activation=\"swish\", kernel_regularizer=\"l2\"),\n        keras.layers.Dense(1)\n    ])\n    model.compile(optimizer=keras.optimizers.Adam(learning_rate=0.001), loss=\"mse\", metrics=[\"mape\", \"mae\"])\n    return model","33f962da":"model = get_model()\nmodel.summary()","b6937061":"keras.utils.plot_model(model, show_shapes=True)","e33016c3":"history = model.fit(\n    train_ds,\n    epochs=epochs,\n    validation_data=val_ds\n)\nmodel.save(\"model.h5\")","ebaed5ef":"## Common Parameters","4088e665":"### Normalization","8cc702eb":"## Import dataset","06cefaf8":"## Preprocessing","e855e169":"## Model Training and Saving","dfddb42e":"## Modeling","0b4f8318":"# Jena Climate Prediction with LSTM\n\nIn this notebook, I will build a Jena Climate Prediction Model using Keras LSTM. I will take Keras document [Timeseries forecasting for weather prediction](https:\/\/keras.io\/examples\/timeseries\/timeseries_weather_forecasting\/) as a reference and making the code cleaner.","7bd39b41":"## Create Time Series Dataset"}}