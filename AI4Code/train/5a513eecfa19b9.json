{"cell_type":{"2eb156e0":"code","7727d634":"code","98263bfa":"code","2abf7ea2":"code","013073c0":"code","49f739b0":"code","6e6429b6":"code","3d7819b8":"code","8e65b1f1":"code","79cb685e":"code","ca2b3ae1":"code","782cb244":"code","ee053a1c":"code","a17de0a0":"code","9d680d49":"code","51bb8b02":"code","98286781":"code","98149867":"code","691a29ba":"code","9a0f23ed":"code","7b49b5e6":"code","f092057a":"code","fd6d4ded":"code","f7593396":"code","479e2d3d":"code","34f268d6":"code","5ba726cd":"code","261d8e32":"code","b6ca9cbc":"code","e222f8d0":"code","6e7a28bf":"markdown","d4712f82":"markdown","52e6e2c4":"markdown","9b97ed31":"markdown","e1f20d75":"markdown","b61bd5d0":"markdown","5b748de7":"markdown","50e4dc70":"markdown","b93dc8ce":"markdown","18492fc0":"markdown","e9fea248":"markdown","7503df84":"markdown","e1addd45":"markdown","9b6300dc":"markdown","3f224148":"markdown","b4035b9b":"markdown","3172b866":"markdown","3bbfaa79":"markdown","97ed375f":"markdown","a910c99b":"markdown","93b669f8":"markdown","db4c5ab3":"markdown"},"source":{"2eb156e0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7727d634":"d2015=pd.read_csv('\/kaggle\/input\/world-happiness-report\/2015.csv')\nd2016=pd.read_csv('\/kaggle\/input\/world-happiness-report\/2016.csv')\nd2017=pd.read_csv('\/kaggle\/input\/world-happiness-report\/2017.csv')\nd2018=pd.read_csv('\/kaggle\/input\/world-happiness-report\/2018.csv')\nd2019=pd.read_csv('\/kaggle\/input\/world-happiness-report\/2019.csv')\nd2020=pd.read_csv('\/kaggle\/input\/world-happiness-report\/2020.csv')","98263bfa":"d2015.head()","2abf7ea2":"d2016.head()","013073c0":"data=d2017","49f739b0":"data.head()","6e6429b6":"data.info()","3d7819b8":"data.isnull().sum()","8e65b1f1":"sns.heatmap(data.isnull(),cmap='Blues')","79cb685e":"data","ca2b3ae1":"cor=data\ncor.drop('Happiness.Rank',inplace=True,axis=1)\nplt.figure(figsize=(14,6))\nsns.heatmap(cor.corr(),annot=True,cmap='RdBu_r')","782cb244":"sns.pairplot(cor,palette='RdBu_r')","ee053a1c":"plt.figure(figsize=(24,3))\nsns.lineplot(data=cor.iloc[:,[1,4,5,6,7]])\nplt.legend(bbox_to_anchor=(1.05,1), loc=2 , borderaxespad=0.) # code for placing outside the box","a17de0a0":"plt.figure(figsize=(24,3))\nsns.lineplot(data=cor.iloc[:,[1,8,9,10]])\nplt.legend(bbox_to_anchor=(1.05,1),loc=2,borderaxespad=0.) # code for placing outside the box","9d680d49":"fac=pd.DataFrame()\nfac['Year']=['2015','2016','2017','2018','2019','2020']\nfac['Factors']=['12','13','11','9','9','20']","51bb8b02":"fac","98286781":"sns.barplot(x='Year',y='Factors',data=fac)\n#sns.countplot(x=fac['Factors'])\nsns.despine(right=True,left=True)","98149867":"colms=pd.DataFrame()\ncolms['colm']=[]\ncolms['count']=[]","691a29ba":"a=pd.DataFrame(d2015.columns)\nb=pd.DataFrame(d2016.columns)\nc=pd.DataFrame(d2017.columns)\nd=pd.DataFrame(d2018.columns)\ne=pd.DataFrame(d2019.columns)\nf=pd.DataFrame(d2020.columns)","9a0f23ed":"colms=pd.concat([a,b,c,d,e,f,colms])\ncolms['colm']=colms[0]\ncolms.drop([0,'count'],axis=1,inplace=True)","7b49b5e6":"colms.head()","f092057a":"colms['colm'].value_counts()[0:10]","fd6d4ded":"plt.figure(figsize=(6,10))\nsns.barplot(x=colms['colm'].value_counts(),y=colms['colm'].value_counts().index, palette=\"RdBu_r\")","f7593396":"g_data=pd.DataFrame()\ng_data['2015']=d2015['Generosity']\ng_data['2016']=d2016['Generosity']\ng_data['2017']=d2017['Generosity']\ng_data['2018']=d2018['Generosity']\ng_data['2019']=d2019['Generosity']\ng_data['2020']=d2020['Generosity']","479e2d3d":"g_data.head()","34f268d6":"plt.figure(figsize=(24,3))\nsns.lineplot(data=g_data.iloc[:,[0,1,2]])\nplt.legend(bbox_to_anchor=(1.05,1), loc=2 , borderaxespad=0.) # code for placing outside the box","5ba726cd":"plt.figure(figsize=(24,3))\nsns.lineplot(data=g_data.iloc[:,[3,4,5]])\nplt.legend(bbox_to_anchor=(1.05,1), loc=2 , borderaxespad=0.) # code for placing outside the box","261d8e32":"d2016.head()","b6ca9cbc":"plt.figure(figsize=(8,4))\nsns.barplot(y=d2015['Country'].head(10),x=d2015['Happiness Score'])\nplt.title('Top 10 Happiest country')","e222f8d0":"plt.figure(figsize=(8,4))\nsns.barplot(y=d2015['Country'].tail(10),x=d2015['Happiness Score'])\nplt.title('Least 10 Happiest country')","6e7a28bf":"<h3>2. Pairplot<\/h3>","d4712f82":"<h3>3. B<\/h3>","52e6e2c4":"1. Well more the **Happiness score** more the chances of a country to get a good rank in the standings :)\n2. Happiness score is directly proportional to the Whisker.high and\tWhisker.low\n3. Happiness score is least affected by the Generosity as it bairely changes throughout the data\n4. Remaining datasets provide collinearity to the data but in the less proportional to them","9b97ed31":"<h6>Now analyze top factors one by one <\/h6>","e1f20d75":"1. **Generosity**","b61bd5d0":"<h3>1. Heatmap<\/h3>","5b748de7":"<h3>3. A<\/h3>","50e4dc70":"<h3>3. Line PLot<\/h3>","b93dc8ce":"<h3>Now let's see which factor remain constant during the whole timeperiod<\/h3>","18492fc0":"<h4>Well we have disscussed many important thing now we <\/h4>","e9fea248":"1. B","7503df84":"1. A","e1addd45":"<h5>Well Happiness Organisation keeps on adding and removing the criteria but from past 3 year it's been increasing gradually :)<\/h5>","9b6300dc":"<h2>From above we conclude the following points<\/h2>","3f224148":"<h6>Let's check if it contains any missing value or not ???<\/h6>","b4035b9b":"    Let's see the variation of it during different years","3172b866":"<h2>Well we infer from above that all the dataset are in the same form and we can create a function and can do all the same analysis for that :)<\/h2>","3bbfaa79":"<h2>Variation of Factors (yearly) on which the Happiest Country prediction takes place<\/h2>","97ed375f":"<h5>Well generosity be the only one of factor on which happines rank prediction takes place <\/h5>","a910c99b":"1. Top 10 happiest and least happiest  country of year","93b669f8":"<h4>Let's visualize for one(d2017) and at the end we will create function for it<\/h4>","db4c5ab3":"<h1>Let's see how one effect in becoming the top most happiest country <\/h1>"}}