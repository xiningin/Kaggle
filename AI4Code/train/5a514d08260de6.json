{"cell_type":{"edb145f9":"code","8e26a80d":"code","8d2b45c9":"code","b0f606f5":"code","5d45d357":"code","71e96f35":"code","4648e5f0":"code","d0a69cf7":"code","1670dc7f":"code","fc2a8253":"markdown","244d3535":"markdown","88f4c239":"markdown","04430791":"markdown","5393a138":"markdown","b2acfa7b":"markdown","bd696131":"markdown","ad0c6b2c":"markdown","f93a1882":"markdown","d2691b37":"markdown","10fe83ca":"markdown","7a171529":"markdown"},"source":{"edb145f9":"import numpy as np\nimport matplotlib.pyplot as plt \nimport pandas as pd\nimport cv2\nfrom osgeo import gdal \nimport json\n\n%matplotlib inline","8e26a80d":"dataset = gdal.Open(r'\/kaggle\/input\/hubmap-kidney-segmentation\/train\/54f2eec69.tiff')\n \nband1 = dataset.GetRasterBand(1) # Red channel \nband2 = dataset.GetRasterBand(2) # Green channel \nband3 = dataset.GetRasterBand(3) # Blue channel\n\nb1 = band1.ReadAsArray() \nb2 = band2.ReadAsArray() \nb3 = band3.ReadAsArray() \n\nimg = np.dstack((b1, b2, b3)) \n","8d2b45c9":"img_small = cv2.resize(img, None,fx=0.5, fy=0.5)","b0f606f5":"def getJsonObj(jsonFile):\n    with open(jsonFile, 'r') as myfile:\n        data=myfile.read()\n\n    # parse file\n    obj = json.loads(data)\n    \n    return obj","5d45d357":"obj1 = getJsonObj('\/kaggle\/input\/hubmap-kidney-segmentation\/train\/54f2eec69-anatomical-structure.json')\npoly_coords = np.array(obj1[0]['geometry']['coordinates'][0], np.int32)\npoly_coords2 = np.array(obj1[1]['geometry']['coordinates'][0], np.int32)\n\n# scale the polygon to keep proportions (with scaled image)\ntemp_small = np.array(poly_coords\/2, np.int32) \ntemp_small2 = np.array(poly_coords2\/2, np.int32)\n\n#pts = temp.reshape((-1, 1, 2)) \npts = temp_small.reshape((-1, 1, 2)) \npts2 = temp_small2.reshape((-1, 1, 2)) ","71e96f35":"img_poly = cv2.polylines(img_small, [pts], True, (0,255,0), thickness=50) ","4648e5f0":"plt.imshow(img_poly) ","d0a69cf7":"img_poly2 = cv2.polylines(img_poly, [pts2], True, (0,255,0), thickness=50) ","1670dc7f":"plt.imshow(img_poly2) ","fc2a8253":"### Draw Another Polygon","244d3535":"### Display Image (Updated)","88f4c239":"### Scale it so the CPU doesn't get overwhelmed","04430791":"### Get Polygon Dimensions","5393a138":"### Display Image","b2acfa7b":"This is a notebook meant for CV2 beginners. The goal of this is to show how to display a polygon on an image using CV2. ","bd696131":"### Draw Polygon","ad0c6b2c":"### Imports","f93a1882":"### Load an Image","d2691b37":"Hopefully this notebook was helpful!","10fe83ca":"# Conclusion","7a171529":"# Hacking the Kidney: Displaying a Polygon"}}