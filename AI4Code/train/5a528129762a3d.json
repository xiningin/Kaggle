{"cell_type":{"65429e47":"code","045bcea0":"code","4d07534e":"code","226d8dc0":"code","7d577fce":"code","6995dd12":"code","8972bd74":"code","eb075e9c":"code","8344c237":"code","20f82b7a":"code","1c9a42c0":"code","5294b8db":"code","2264f21f":"code","75b81617":"code","9514d272":"code","eb864d3e":"code","0ff148ee":"code","103d03ae":"code","777b845f":"code","401f67a7":"code","a328fcde":"code","43d24f72":"code","17c35bb7":"code","b1b3010c":"code","f8ee265f":"code","be42875e":"markdown","4dc62ba0":"markdown","f4d2e42a":"markdown","825ee033":"markdown","66c50337":"markdown","0f624802":"markdown","79eff7f2":"markdown","bd678d92":"markdown","77c8659d":"markdown","c1503cb6":"markdown","eb142746":"markdown","901026c6":"markdown","395952ad":"markdown","3e2ba37d":"markdown","dd6a3182":"markdown","541076e2":"markdown","d2cbe5c1":"markdown","0f776b7f":"markdown","a59301eb":"markdown","3f58de45":"markdown","914b8f71":"markdown"},"source":{"65429e47":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport pandas_datareader.data as web\nfrom datetime import datetime\n%matplotlib inline\n\nfrom statsmodels.tsa.stattools import adfuller\nfrom statsmodels.tsa.stattools import acf, pacf\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nfrom statsmodels.tsa.arima_model import ARIMA","045bcea0":"end = datetime.now()\nstart = datetime(end.year-2, end.month, end.day)","4d07534e":"YES = web.DataReader(\"YESBANK.NS\", 'yahoo', start, end)\nVODAIDEA = web.DataReader(\"IDEA.NS\", 'yahoo', start, end)\nICICI = web.DataReader(\"ICICIBANK.NS\", 'yahoo', start, end)\nSAIL = web.DataReader(\"SAIL.NS\", 'yahoo', start, end)\nREL = web.DataReader(\"RCOM.NS\", 'yahoo', start, end)","226d8dc0":"df = pd.DataFrame({'YES': YES['Adj Close'], 'VODAFONE': VODAIDEA['Adj Close'],\n                   'ICICI': ICICI['Adj Close'], 'SAIL': SAIL['Adj Close'],\n                   'RELIANCE': REL['Adj Close']})","7d577fce":"df.head()","6995dd12":"df.plot(figsize=(10,5))\nplt.legend(loc='upper right')","8972bd74":"start = df.apply(lambda x: x \/ x[0])\nstart.plot(figsize=(10,5)).axhline(1, lw=1, color='black')","eb075e9c":"def DF(series):\n    \n    series = series.dropna()\n\n    print('Dickey Fuller Test')\n    test = adfuller(series, autolag='AIC')\n\n    output = pd.Series(test[0:2], index=['Test Statistic','p-value'])\n    \n    for key,value in test[4].items():\n        output['Critical Value (%s)'%key] = value\n\n    print(output)\n    print()\n    \n    if test[1] <= 0.05:\n        print(\"The Time-Series is Stationary\\n\")\n    else:\n        print(\"The Time-Series is Not Stationary\\n\")\n    ","8344c237":"plt.figure(figsize=(10,5))\ndf['RELIANCE'].plot()","20f82b7a":"def trendtransformation(series):\n    \n    #Log transformation of the values\n    LogTransformation = series.apply(lambda x : np.log(x))\n    LogTransformation = LogTransformation.dropna()\n    \n    #Transformation of values to the power of 0.5\n    PowerTransformation = series.apply(lambda x : x ** 0.5)\n    PowerTransformation = PowerTransformation.dropna()\n    \n    #Obtaining the difference between the series and its rolling window values (i.e: series 1st value - series 12th value)  \n    rollingmean = series.rolling(window = 12).mean()\n    detrend = series - rollingmean\n    detrend = detrend.dropna()\n    \n\n    #Plotting the transformed values of the series\n    plt.figure(figsize=(15,5))\n\n    plt.subplot(2,2,1)\n    series.plot()\n    plt.title(\"Original Value\")\n\n    plt.subplot(2,2,2)\n    LogTransformation.plot()\n    plt.title(\"Log Transformation Value\")\n\n    plt.subplot(2,2,3)\n    PowerTransformation.plot()\n    plt.title(\"Power Transformation Value\")\n\n    plt.subplot(2,2,4)\n    detrend.plot()\n    plt.title(\"Rolling Mean Value\")\n    \n    plt.tight_layout(pad=0.5)\n    plt.show(block=False)\n    \n    \n    print(\"***** Log Transformation *****\")\n    DF(LogTransformation)\n    print(\"***** Power Transformation *****\")\n    DF(PowerTransformation)\n    print(\"***** Rolling Mean *****\")\n    DF(detrend)","1c9a42c0":"trendtransformation(df['RELIANCE'])","5294b8db":"rollingmean = df['RELIANCE'].rolling(window = 12).mean()\nreliance = df['RELIANCE'] - rollingmean\nreliance = reliance.dropna()","2264f21f":"plt.figure(figsize=(10,5))\ndf['ICICI'].plot()","75b81617":"def randomtransformation(series):\n    \n    #Difference between the log transformation and its values that has been shifted by 1 place (row)\n    LogTransformation = series.apply(lambda x : np.log(x))\n    DifferenceOfLogTransformation = LogTransformation - LogTransformation.shift()\n    DifferenceOfLogTransformation = DifferenceOfLogTransformation.dropna()\n\n    #Difference between the power transformation and its values that has been shifted by 1  place (row)\n    PowerTransformation = series.apply(lambda x : x ** 0.5)\n    DifferenceOfPowerTransformation = PowerTransformation - PowerTransformation.shift()\n    DifferenceOfPowerTransformation = DifferenceOfPowerTransformation.dropna()\n    \n        \n    #Difference between the rolling mean and its values that has been shifted by 1  place (row)\n    rollingmean = series.rolling(window = 12).mean()\n    DifferenceOfRollTransformation = rollingmean - rollingmean.shift()\n    DifferenceOfRollTransformation = DifferenceOfRollTransformation.dropna()\n \n\n    plt.figure(figsize=(15,5))\n\n    plt.subplot(2,2,1)\n    series.plot()\n    plt.title(\"Original Value\")\n\n    plt.subplot(2,2,2)\n    DifferenceOfLogTransformation.plot()\n    plt.title(\"Log Transformation Value\")\n\n    plt.subplot(2,2,3)\n    DifferenceOfPowerTransformation.plot()\n    plt.title(\"Power Transformation Value\")\n\n    plt.subplot(2,2,4)\n    DifferenceOfRollTransformation.plot()\n    plt.title(\"Rolling Mean Value\")\n    \n    plt.tight_layout(pad=0.5)\n    plt.show(block=False)\n    \n\n    print(\"***** Log Transformation *****\")\n    DF(DifferenceOfLogTransformation)\n    print(\"***** Power Transformation *****\")\n    DF(DifferenceOfPowerTransformation)\n    print(\"***** Rolling Mean *****\")\n    DF(DifferenceOfRollTransformation)\n","9514d272":"randomtransformation(df['ICICI'])","eb864d3e":"LogTransformation = df['ICICI'].apply(lambda x : np.log(x))\nicici = LogTransformation - LogTransformation.shift()\nicici = icici.dropna()","0ff148ee":"from statsmodels.graphics.tsaplots import plot_acf,plot_pacf\nfrom statsmodels.tsa.arima_model import ARIMA","103d03ae":"plt.figure(figsize=(12,8))\n\nplot_acf(reliance,lags=40)\nplot_pacf(reliance,lags=40)\nplt.show()","777b845f":"model=ARIMA(reliance,order=(1,0,1))\nmodel_fit=model.fit()","401f67a7":"relianceforecast=model_fit.predict()","a328fcde":"reliance.plot()\nrelianceforecast.plot()","43d24f72":"plt.figure(figsize=(12,8))\n\nplot_acf(icici,lags=40)\nplot_pacf(icici,lags=40)\nplt.show()","17c35bb7":"model=ARIMA(icici,order=(1,1,1))\nmodel_fit=model.fit()","b1b3010c":"iciciforecast=model_fit.predict()","f8ee265f":"icici.plot()\niciciforecast.plot()","be42875e":"![image.png](attachment:image.png)","4dc62ba0":"We notice that the ICICI stock has an upward trend between 2018 and early 2020. After which it experiences a steep fall in February - March 2020. The share price then picks up in the 2 quarter of 2020.\nThis shows an irregularity int the stock, thus we need to transform this trend to its equivalent stationary series. This can be achieved through the differencing of the transformations and their shift.","f4d2e42a":"From the above plots, we select the values of p,d, and q as 1, 0, and 1 respectively. ","825ee033":"## 2. Analysis Of Data","66c50337":"We notice that the Reliance stock has begun falling gradually between January and February 2019. This shows us a downward trend of the stock, thus we need to transform this trend to its equivalent stationary series. This can be achieved through the following:\n<li> Log Transformation.\n<li> Power Transformation.\n<li> Rolling Window Mean or Median.","0f624802":"The time-series has successfully been brought into a stationary state with the help of the \"Rolling Window Mean\" transformation, thus we will use this transformation for future predictions. ","79eff7f2":"## 1. Extraction Of Data","bd678d92":"A DataReader is used to read the data from a given data source. The \"pandas_datareader.data\" is a very useful python library that performs this function efficiently. As mentioned before we are using the data extracted from the website yahoo finance. This website identifies each stock by a unique name. To complete the extraction we need to specify the starting and ending period of the stock we wish to analyze.","77c8659d":"<h1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Highs And Lows Of The Stock Market - Time Series <\/h1>","c1503cb6":"After normalization of the stocks, we notice that our previous analysis for ICICI Bank proves to be correct and that it performs must better than the other stocks. Whereas Reliance has performed very poorly.","eb142746":"We use an ARIMA model to create a predictive model. For this, it is necessary to identify the 3 values Auto-Regressive (p), Integrated \/ Differential (d), and Moving Average (q). To identify these values we use plot_acf and plot_pacf.","901026c6":"## 4. Model Building","395952ad":"This model may not perform well as it does not fit the present data well. ","3e2ba37d":"The time-series has successfully been brought into a stationary state, we select the best transformation based on the p-value. Therefore we select the \"Log Transformation\" for future predictions. ","dd6a3182":"A stock market is a place where many individuals and organizations invest their money in a company\/service in return for an equivalent share of right and ownership within the organization. Here we study the Indian stock market while selecting the top 5 stock highly active. Our major focus is the \"Adjusted Close\" (Adj Close) for 2 years. The Adjusted Close is the closing price of the stock per day. In this notebook, we will extract, analyze and build a predictive model.\n<br>Here is the outline which we will be following to analyze and predict the share price of the stocks. \n<li>Extract the share price of the most active stock with the help of  \" pandas_datareader.data \" from &nbsp;<a href=\"https:\/\/in.finance.yahoo.com\/\">Yahoo Finance.<\/a>\n<li>Analyze the share price of each stock.\n<li>Before building our model we need our data to be \"Stationary\", Thus transform the data into a stationary state.\n<li>Use the ARIMA or SARIMA to build a predictive model.","541076e2":"From the above plots, we select the values of p,d, and q as 1, 1, and 1 respectively.","d2cbe5c1":"Thus, we can use the above models to forecast future share price. ","0f776b7f":"The components of time-series are the changes in the time series that are caused directly \/ indirectly due to internal or external factors such as economic, social, political, and organizational. These components can be looked upon as <b>\"Patterns\"<\/b>. The components are as follows:<br>\n<li> Trends\n<li> Seasonality\n<li> Cyclic\n<li> Random or Irregular <br><br>\nThese patterns affect the valuation of the time series, thus we need to handle them.<br><br>\nThe Augmented Dickey-Fuller test helps us identify whether or not the time-series is stationary. The adfuller function returns 5 values from which we can conclude to the stationary of the time-series.\n<br>A time series is stationary if:\n<li>The Test Statistic is less than the Critical Values.\n<li>The p-value is less than 0.05.","a59301eb":"We choose the best and the poorly fairing share price for further steps. They are ICICI Bank and Reliance.","3f58de45":"Reliance, Vodafone, and Steel Authority of India are seen experiencing a low share price for the past 2 years. Yes Bank experiences a fluctuation for the period between 2018 and the first quarter of 2019. It then has a steep fall in the share price. Although the share price of ICICI Bank has fallen steadily in the first quarter of 2020 we notice an increase in the second quarter. Thus we can say that it performs much better compared to the rest of the shares.","914b8f71":"## 3. Transformation Of Data"}}