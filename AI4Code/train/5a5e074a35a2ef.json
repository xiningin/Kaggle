{"cell_type":{"ecb15baa":"code","d65b01c2":"code","591969c0":"code","5a887440":"code","63724fd9":"code","4907f819":"code","02dfb28a":"code","5a7003a4":"code","030f690c":"markdown","aeb388ae":"markdown","5d1dbbd1":"markdown","b1e0cf23":"markdown","95f06b22":"markdown","37605003":"markdown","74e05897":"markdown","50f80212":"markdown","d268cbad":"markdown"},"source":{"ecb15baa":"import hdbscan\nfrom matplotlib import pylab\nimport pymongo as pm\nimport numpy as np\nimport pandas as pd\nimport json\nimport csv\nfrom geopy import distance\nfrom descartes import PolygonPatch","d65b01c2":"connection = pm.MongoClient()\nnyc = connection.nyc\ntaxi_collection = nyc.taxi_data","591969c0":"taxi_collection.drop()\ntaxi_collection.create_index([(\"pickup_location\",  pm.GEO2D)])\ntaxi_collection.create_index([(\"dropoff_location\",  pm.GEO2D)])","5a887440":"def import_content(filename):\n    print('Reading file...')\n    data = open(filename, 'r')\n    print('File read...')\n    header = True\n    keys = []\n    step = 0\n    batch_data = []\n    for line in data:\n        line_data = {}\n        if header:\n            keys = line.split(',')\n            print(keys)\n            header = False\n        else:\n            line = line.split(',')\n            for k in range(len(keys)):\n                line_data[keys[k]] = line[k]\n            try:\n                line_data['pickup_location'] = line_data['pickup_longitude'] + ',' + line_data['pickup_latitude'] \n                line_data['dropoff_location'] = line_data['dropoff_longitude'] + ',' + line_data['dropoff_latitude']\n            except:\n                pass # sometimes there are is no data in the pickup or dropoff locs\n            if step % 100000 == 0:\n                batch_data = load_many_and_report(taxi_collection, batch_data, step)\n            else:\n                batch_data += [line_data]\n        step += 1\n    batch_data = load_many_and_report(taxi_collection, batch_data, step)\n    print('Finished loading data.')","63724fd9":"def load_many_and_report(coll, batch_data, step):\n    coll.insert_many(batch_data)\n    print('%d lines loaded...' % step)\n    batch_data = []\n    return batch_data","4907f819":"# import_content('data\/train.csv')\nimport_content('..\/input\/train.csv')","02dfb28a":"'''\nKnowing that you're receiving location points as (long, lat) and you need to swap them.\n'''\ndef getLength(loc1, loc2):\n    return distance.distance((loc1[1], loc1[0]), (loc2[1], loc2[0])).miles","5a7003a4":"cursor = taxi_collection.find()\ni = 1\nwhile cursor.alive:\n    i += 1\n    if i % 100000 == 0:\n        print('%d distances calcuated...' % i)\n    taxi = cursor.next()\n    D = getLength(taxi['pickup_location'].split(','), taxi['dropoff_location'].split(','))\n    taxi_collection.update_one( {\"_id\":taxi['_id']}, {\"$set\": { \"l2_distance\": D }} )","030f690c":"### Create indices for the `taxi_collection` called 'pickup_location' and 'dropoff_location'.","aeb388ae":"# Loading data to MongoDB\nSince the dataset is rather large, I thought some people might want something that could load the data to a database rather quickly.\nIf you have MongoDB installed on your computer and running, you can run each of the cells (except the last) in this notebook to import all the data to your local database.","5d1dbbd1":"### Read and iterate over the file.\nThis function also combine the longitude and latitudes and sets them to the location indices we made in the last cell.","b1e0cf23":"# Extra work...\nHere is some extra work I did. It's not very impressive, but it shows you how you can pull data back out of the database to continue your work.","95f06b22":"#### Function to calcuate the L2 distance (straight-line).","37605003":"### Connect to your MongoDB instance and access the `nyc` databse and `taxi_data` collection.","74e05897":"## Now just call the function!","50f80212":"#### Common loader function.","d268cbad":"### Querying data out of the database.\nHere I just use the basic `find()` function, and this will just give you a `cursor` (`iterator`). For help for better queries, you can go [**here**](https:\/\/docs.mongodb.com\/master\/tutorial\/getting-started\/#query-documents).\n\n#### Note: This could have been performed eariler in the notebook, but it is done here for demo purposes."}}