{"cell_type":{"96e8f835":"code","b0db41d4":"code","26536e5f":"code","ddba3896":"code","9e9a4e0f":"code","ebf3d661":"markdown","8747962e":"markdown","b187667d":"markdown"},"source":{"96e8f835":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport math","b0db41d4":"d=11\nfile=pd.read_csv('..\/input\/wine-quality-binary-classification\/wine.csv',header=None).iloc[1:1600,:]\nprint(type(file))\nprint(file.iloc[1598,:])\niv =np.array(file.iloc[:,0:d].astype(float))\ndv =np.reshape(np.array(file.iloc[:,11]), (1599, 1))\nprint(iv.shape)\nprint(dv.shape)","26536e5f":"vmean=np.mean(iv, axis = 0)\nvmax=np.max(iv,axis=0)\nvmin=np.min(iv,axis=0)\nprint(vmean)\nprint(vmax)\nprint(vmin)\nfor i in range(len(iv)):\n    iv[i]=(iv[i]-vmin)\/(vmax-vmin)\n\nfor i in range(len(dv)):\n    if(dv[i]=='good'):\n        dv[i]=1\n    else:\n        dv[i]=0","ddba3896":"def sigmoid(h ):\n    h=np.array(h,dtype=np.float32)\n    return 1\/(1+np.exp(-h))\n\ndef sigmoid_der(h):\n    return h*(1-h)","9e9a4e0f":"no_of_it=100\nX =iv\nY =dv\nWh= np.random.rand(d,d)\nBh=  np.random.rand(1,d)\nWo= np.random.rand(d,1)\nBo= np.array([-0.5])\nError=[]\nfor i in range(0,no_of_it):\n    #Forward propagation\n    a1 =X\n    z2 = np.dot(a1, Wh) + Bh\n    a2 = sigmoid(z2)\n    z3 = np.dot(a2, Wo) + Bo\n    a3 = sigmoid(z3)\n    #Backward propagation\n    error = Y-a3\n    delta_output = error * sigmoid_der(a3)\n    output_update =np.dot(a2.T, delta_output)\n    error_h = np.dot(delta_output, Wo.T)\n    delta_hidden = error_h * sigmoid_der(a2)\n    hidden_update = np.dot(a1.T, delta_hidden)\n    Wo = Wo + output_update\n    Bo = Bo + sum(delta_output)\n    Wh = Wh + hidden_update \n    Bh = Bh + sum(delta_hidden) \n    Error.append(np.mean(error))\n\nfig, ax = plt.subplots()\nax.plot(range(no_of_it),Error)\nax.set(xlabel='no of iteration', ylabel='Error', title='')\nax.grid()\nplt.show()","ebf3d661":"# Data","8747962e":"# Wine Quality Classification using ANN with keras dataset.","b187667d":"# Data Normalization"}}