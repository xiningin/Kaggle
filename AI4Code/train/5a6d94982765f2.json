{"cell_type":{"54fac62e":"code","20ca732e":"code","80982cb0":"code","2508bef9":"code","bda53f86":"code","54cf821b":"code","c2a48886":"code","a5555934":"code","b1e907a3":"code","32dca6a0":"code","0bca99a8":"code","5a7fd344":"code","a649c39d":"code","0a276381":"code","fdcbe3e2":"code","118f92c3":"code","8965c369":"code","b09b6f57":"code","289f4074":"code","6a93097b":"code","f1da7079":"markdown","5caa73d3":"markdown","b79e93a7":"markdown"},"source":{"54fac62e":"import numpy as np # Linear Algebra\nimport matplotlib.pyplot as plt # For plotting graphs\nimport pandas as pd # For csv file...\nimport seaborn as sns # Visualization Tool\n","20ca732e":"data = pd.read_csv('..\/input\/championsdata.csv')\ndata.info()","80982cb0":"data.corr()","2508bef9":"# Correlation map\nf,ax=plt.subplots(figsize=(12,12))\nsns.heatmap(data.corr(),annot=True,linewidths=0.5,fmt='.1f',ax=ax)\nplt.show()","bda53f86":"data.head(10) # Print top 10 data ","54cf821b":"data.columns # Print features","c2a48886":"# Line Plot\n#color=color, label=label, linewidth= width of line, alpha = opacity, grid=grid, linestyle=linestyle\ndata.AST.plot(kind='line',color='r',label='Assists',linewidth=1,alpha=1,grid=True,linestyle='-')\ndata.TOV.plot(color='b',label='Turnover',linewidth=1,alpha=0.5,grid=True,linestyle='-.')\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()\n","a5555934":"# Scatter Plot\n# x= Points, y= Win\ndata.plot(kind='scatter',x='PTS', y='Win',color='red')\nplt.xlabel('Points')\nplt.ylabel('Win')\nplt.title('Points-Win Scatter Plot')","b1e907a3":"# Histogram\n# bins=number of bar in figure\n\ndata.PTS.plot(kind='hist',bins=50,figsize=(12,12))\nplt.show()","32dca6a0":"# clf clean screen\ndata.PTS.plot(kind='hist',bins=50,figsize=(12,12))\nplt.clf() ","0bca99a8":"# Dictionary\ndictionary={'Turkey':'Ankara','England':'London'}\nprint(dictionary.keys())\nprint(dictionary.values())","5a7fd344":"# Update-Insert*Delete\ndictionary['Turkey']='Istanbul'\nprint(dictionary)\ndictionary['france'] = \"paris\"       # Add new entry\nprint(dictionary)\ndel dictionary['Turkey']              # remove entry with key 'spain'\nprint(dictionary)\nprint('france' in dictionary)        # check include or not\ndictionary.clear()                   # remove all entries in dict\nprint(dictionary)","a649c39d":"# In order to run all code you need to take comment this line\n# del dictionary         # delete entire dictionary     \nprint(dictionary)       # it gives error because dictionary is deleted","0a276381":"# PANDAS\nseries = data['PTS']        # data['Defense'] = series\nprint(type(series))\nprint(series)\ndata_frame = data[['PTS']]  # data[['Defense']] = data frame\nprint(type(data_frame))\nprint(series)\n","fdcbe3e2":"# Comparison operator\nprint(3 > 2)\nprint(3!=2)\n# Boolean operators\nprint(True and False)\nprint(True or False)","118f92c3":"# 1 - Filtering Pandas data frame\nx = data['PTS']>130     # There are only 3 pokemons who have higher defense value than 200\ndata[x]","8965c369":"# 2 - Filtering pandas with logical_and\n# There are only 2 pokemons who have higher defence value than 2oo and higher attack value than 100\ndata[np.logical_and(data['PTS']>120, data['AST']>30 )]","b09b6f57":"# Same code \n# This is also same with previous code line. Therefore we can also use '&' for filtering.\ndata[(data['PTS']>120) & (data['AST']>30)]","289f4074":"# LOOPS\n# Stay in loop if condition( i is not equal 5) is true\ni = 0\nwhile i != 5 :\n    print('i is: ',i)\n    i +=1 \nprint(i,' is equal to 5')","6a93097b":"# Stay in loop if condition( i is not equal 5) is true\nlis = [1,2,3,4,5]\nfor i in lis:\n    print('i is: ',i)\nprint('')\n\n# Enumerate index and value of list\n# index : value = 0:1, 1:2, 2:3, 3:4, 4:5\nfor index, value in enumerate(lis):\n    print(index,\" : \",value)\nprint('')   \n\n# For dictionaries\n# We can use for loop to achive key and value of dictionary. We learnt key and value at dictionary part.\ndictionary = {'spain':'madrid','france':'paris'}\nfor key,value in dictionary.items():\n    print(key,\" : \",value)\nprint('')\n\n# For pandas we can achieve index and value\nfor index,value in data[['PTS']][0:1].iterrows():\n    print(index,\" : \",value)\n","f1da7079":"**First Homework**","5caa73d3":"We can see poisitive and negative correlation.\n* For instance  the number of assists made increases as the number increases.","b79e93a7":"*End of the first homework, thanks for sharing :)*"}}