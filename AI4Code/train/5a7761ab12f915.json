{"cell_type":{"5b705755":"code","364b59d1":"code","1d8c787b":"code","ef86400a":"code","191f15a9":"code","6428e571":"code","d5be9527":"code","b1eaf059":"code","83a24073":"code","619a9e43":"code","fc3b8ac7":"code","859fc766":"code","51b6da76":"code","2cd0626e":"code","014de966":"code","e725c997":"code","a36c5bb0":"code","1e876a4d":"code","f4035763":"code","890e90c7":"code","c7dc6b97":"markdown","c8dfe6fe":"markdown","f9d80879":"markdown","a6b99179":"markdown","71e73c31":"markdown","ca595034":"markdown","06aeb3af":"markdown"},"source":{"5b705755":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","364b59d1":"data1 = '\/kaggle\/input\/gas-prices-in-brazil\/2004-2019.tsv'","1d8c787b":"gp = pd.read_csv(data1, delimiter = '\\t')","ef86400a":"gp.rename(\n    columns={\n        \"DATA INICIAL\": \"start_date\",\n        \"DATA FINAL\": \"end_date\",\n        \"REGI\u00c3O\": \"region\",\n        \"ESTADO\": \"state\",\n        \"PRODUTO\": \"fuel\",\n        \"N\u00daMERO DE POSTOS PESQUISADOS\": \"n_gas_stations\",\n        \"UNIDADE DE MEDIDA\": \"unit\",\n        \"PRE\u00c7O M\u00c9DIO REVENDA\": \"avg_price\",\n        \"DESVIO PADR\u00c3O REVENDA\": \"sd_price\",\n        \"PRE\u00c7O M\u00cdNIMO REVENDA\": \"min_price\",\n        \"PRE\u00c7O M\u00c1XIMO REVENDA\": \"max_price\",\n        \"MARGEM M\u00c9DIA REVENDA\": \"avg_price_margin\",\n        \"ANO\": \"year\",\n        \"M\u00caS\": \"month\",\n        \"COEF DE VARIA\u00c7\u00c3O DISTRIBUI\u00c7\u00c3O\": \"coef_dist\",\n        \"PRE\u00c7O M\u00c1XIMO DISTRIBUI\u00c7\u00c3O\": \"dist_max_price\",\n        \"PRE\u00c7O M\u00cdNIMO DISTRIBUI\u00c7\u00c3O\": \"dist_min_price\",\n        \"DESVIO PADR\u00c3O DISTRIBUI\u00c7\u00c3O\": \"dist_sd_price\",\n        \"PRE\u00c7O M\u00c9DIO DISTRIBUI\u00c7\u00c3O\": \"dist_avg_price\",\n        \"COEF DE VARIA\u00c7\u00c3O REVENDA\": \"coef_price\"\n    },\n    inplace=True\n)\n\n\nregions = {\"SUL\":\"SOUTH\", \"SUDESTE\":\"SOUTHEAST\", \"CENTRO OESTE\":\"MIDWEST\", \n            \"NORTE\":\"NORTH\", \"NORDESTE\":\"NORTHEAST\"}\ngp[\"region\"] = gp.region.map(regions)\n\n\nfuels = {\"\u00d3LEO DIESEL\":\"DIESEL\", \"GASOLINA COMUM\":\"REGULAR GASOLINE\", \"GLP\":\"LPG\", \n            \"ETANOL HIDRATADO\":\"HYDROUS ETHANOL\", \"GNV\":\"NATURAL GAS\", \"\u00d3LEO DIESEL S10\":\"DIESEL S10\"}\ngp[\"fuel\"] = gp.fuel.map(fuels)","191f15a9":"event_dictionary_units ={'R$\/l ' : 'R$\/l', 'R$\/13Kg' : 'R$\/l', 'R$\/m3' : 'R$\/l'}\nevent_dictionary_conversion ={'R$\/l' : 1 , 'R$\/13Kg' : 0.00006153, 'R$\/m3' : 0.001}\n\ngp['conversion'] = gp['unit'].map(event_dictionary_conversion)\ngp['avg_price'] = gp.avg_price*gp.conversion\ngp['unit'] = gp['unit'].map(event_dictionary_units)\n\ngp.tail()","6428e571":"gp = gp.drop(\"unit\", axis = 1)","d5be9527":"gp.info()","b1eaf059":"for col in ['sd_price','min_price',\n            'max_price','avg_price_margin','coef_price',\n            'dist_avg_price', 'dist_sd_price', 'dist_min_price', \n            'dist_max_price', 'coef_dist']:\n  \n  gp[col] = pd.to_numeric(gp[col], errors='coerce')\n    \ngp.info()","83a24073":"from sklearn.preprocessing import LabelEncoder\n\nlabelencoder_region = LabelEncoder()\ngp.region = labelencoder_region.fit_transform(gp.region)\n\nlabelencoder_state = LabelEncoder()\ngp.state = labelencoder_state.fit_transform(gp.state)\n\nlabelencoder_fuel = LabelEncoder()\ngp.fuel = labelencoder_fuel.fit_transform(gp.fuel)","619a9e43":"gp.isnull().sum()","fc3b8ac7":"gp['avg_price_margin'].fillna(gp['avg_price_margin'].median(), inplace = True)\ngp['dist_avg_price'].fillna(gp['dist_avg_price'].median(), inplace = True)\ngp['dist_sd_price'].fillna(gp['dist_sd_price'].median(), inplace = True)\ngp['dist_min_price'].fillna(gp['dist_min_price'].median(), inplace = True)\ngp['dist_max_price'].fillna(gp['dist_max_price'].median(), inplace = True)\ngp['coef_dist'].fillna(gp['coef_dist'].median(), inplace = True)","859fc766":"fig, ax = plt.subplots(figsize=(15,7))\ngp.query('year != 2019 & fuel in [\"3\",\"4\"]').groupby(['year','region']).sum()['avg_price'].unstack().plot(ax=ax)\nplt.legend( labels = ['Midwest', 'North', 'Northeast', 'South', 'Southeast'])\nplt.grid(True)","51b6da76":"fig, ax = plt.subplots(figsize=(15,7))\ngp.query('year != 2019 & fuel in [\"3\",\"4\"]').groupby(['year','region']).sum()['avg_price'].pct_change().unstack().plot(ax=ax)\nplt.legend(labels = ['Midwest', 'North', 'Northeast', 'South', 'Southeast'])\nplt.grid(True)","2cd0626e":"fig, ax = plt.subplots(figsize=(15,7))\ngp.query('year != 2019 & region in [\"2\"]').groupby(['year','state']).sum()['avg_price'].unstack().plot(ax=ax)\nplt.legend(labels = ['Alagoas', 'Bahia', 'Ceara', 'Maranhao', 'Paraiba', 'Pernambuco', 'Piaui', 'Rio Gramde Do Nome', 'Sergipe'])\nplt.grid(True)","014de966":"fig, ax = plt.subplots(figsize=(15,7))\ngp.query('year != 2019 & region in [\"2\"]').groupby(['year','state']).sum()['avg_price'].pct_change().unstack().plot(ax=ax)\nplt.legend(labels = ['Alagoas', 'Bahia', 'Ceara', 'Maranhao', 'Paraiba', 'Pernambuco', 'Piaui', 'Rio Gramde Do Nome', 'Sergipe'])\nplt.grid(True)","e725c997":"fig, ax = plt.subplots(figsize=(15,7))\ngp.query('year != 2019 & region in [\"1\"]').groupby(['year','state']).sum()['avg_price'].unstack().plot(ax=ax)\nplt.legend(labels = ['Acre', 'Amapa', 'Amazonas', 'Para', 'Rondonia', 'Roraima', 'Tokantis'])\nplt.grid(True)","a36c5bb0":"fig, ax = plt.subplots(figsize=(15,7))\ngp.query('year != 2019 & region in [\"1\"]').groupby(['year','state']).sum()['avg_price'].pct_change().unstack().plot(ax=ax)\nplt.legend(labels = ['Acre', 'Amapa', 'Amazonas', 'Para', 'Rondonia', 'Roraima', 'Tokantis'])\nplt.grid(True)","1e876a4d":"fig, ax = plt.subplots(figsize=(20,14))\ngp.query('year!=2019').groupby(['state','fuel'])['avg_price'].agg('sum').unstack().plot(kind='bar'\n                                                                                         ,ax=ax)\nplt.legend(labels = ['Diesel', 'Diesel S10', 'Hydrous Ethanol',\n                     'LPG', 'Natural Gas', 'Regular Gasoline'])\n\npositions = (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26)\nlabels = ('Acre', 'Alagoas', 'Amapa', 'Amazonas', 'Bahia', 'Ceara', 'Distrito Federal',\n          'Espirito Santo', 'Gaias', 'Maranhao', 'Mato Grosso', 'Mato Grosso do Sull',\n         'Minas Gerais', 'Para', 'Paraiba', 'Parona', 'Pernambuco', 'Piaui',\n         'Rio de Janeiro', 'Rio Grande Do Norte', 'Rio Grande Do Sul', 'Rondonia', 'Roraima', 'Santa Caterina',\n         'Sao Paulo', 'Sergipe', 'Tokantins')\nplt.xticks(positions, labels)\nplt.grid(True)","f4035763":"fig, ax = plt.subplots(figsize=(20,14))\ngp.query('year!=2019').groupby(['state','fuel'])['min_price'].agg('sum').unstack().plot(kind='bar'\n                                                                                         ,ax=ax)\nplt.legend(labels = ['Diesel', 'Diesel S10', 'Hydrous Ethanol',\n                     'LPG', 'Natural Gas', 'Regular Gasoline'])\n\npositions = (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26)\nlabels = ('Acre', 'Alagoas', 'Amapa', 'Amazonas', 'Bahia', 'Ceara', 'Distrito Federal',\n          'Espirito Santo', 'Gaias', 'Maranhao', 'Mato Grosso', 'Mato Grosso do Sull',\n         'Minas Gerais', 'Para', 'Paraiba', 'Parona', 'Pernambuco', 'Piaui',\n         'Rio de Janeiro', 'Rio Grande Do Norte', 'Rio Grande Do Sul', 'Rondonia', 'Roraima', 'Santa Caterina',\n         'Sao Paulo', 'Sergipe', 'Tokantins')\nplt.xticks(positions, labels)\nplt.grid(True)","890e90c7":"fig, ax = plt.subplots(figsize=(20,14))\ngp.query('year!=2019').groupby(['state','fuel'])['max_price'].agg('sum').unstack().plot(kind='bar'\n                                                                                         ,ax=ax)\nplt.legend(labels = ['Diesel', 'Diesel S10', 'Hydrous Ethanol',\n                     'LPG', 'Natural Gas', 'Regular Gasoline'])\n\npositions = (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26)\nlabels = ('Acre', 'Alagoas', 'Amapa', 'Amazonas', 'Bahia', 'Ceara', 'Distrito Federal',\n          'Espirito Santo', 'Gaias', 'Maranhao', 'Mato Grosso', 'Mato Grosso do Sull',\n         'Minas Gerais', 'Para', 'Paraiba', 'Parona', 'Pernambuco', 'Piaui',\n         'Rio de Janeiro', 'Rio Grande Do Norte', 'Rio Grande Do Sul', 'Rondonia', 'Roraima', 'Santa Caterina',\n         'Sao Paulo', 'Sergipe', 'Tokantins')\nplt.xticks(positions, labels)\nplt.grid(True)","c7dc6b97":"Since we convert the units, unit of each gas became the same. So, we will drop 'unit' from our data.","c8dfe6fe":"We have categorical data such as 'region' in our dataset. So we cannot use them like we use the continuous values. We have to use 'LabelEncoder' to turn them into incomparable cathegories.","f9d80879":"We will convert the units according to 'R$\/l' for more accurate values.","a6b99179":"Let's check and fill the NaNs in our data.","71e73c31":"**Renaming Column Names**","ca595034":"According to the result of 'gp.info()', some of our price values are \"object.\" We will return them to numeric value. ","06aeb3af":"**EDA**"}}