{"cell_type":{"175838b6":"code","3a68d81c":"code","7c1e2c08":"code","c56f742d":"code","4c6f21a0":"code","0f2f2008":"code","1c17b423":"markdown","cfb91748":"markdown","6382feaa":"markdown","67a0b78e":"markdown","5a78c49a":"markdown","be0787dd":"markdown"},"source":{"175838b6":"import numpy as np\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nimport warnings  \n\n#nothing serious, just turning off some warnings and notifications not to overload the notebook\nwarnings.filterwarnings('ignore')","3a68d81c":"# number of observations (i.e. records,rows) of our sample data\nobservations = 1000\n\n# random vectors for Xs and Zs\nxs = np.random.uniform(low=-10,high=10, size=(observations,1))\nzs = np.random.uniform(-10,10,size=(observations,1))\n\n# stacking 2 random data columns together\ngenerated_inputs = np.column_stack((xs,zs))\n\n# targets = f(x,z) = 2x + 3z + 5 + noise\n\nnoise = np.random.uniform(-1,1,(observations,1))\n\ngenerated_targets = 2*xs + 3*zs + 5 + noise\n\nnp.savez('random_tf', inputs=generated_inputs, targets=generated_targets)\n\n#load npZ\ntraining_data = np.load('random_tf.npz')\ntraining_data","7c1e2c08":"# we want to measure time taken to perform model training here in between 2 points\nimport time\nstart = time.time()\n\ninput_size=2\noutput_size=1\n\nmodel = tf.keras.Sequential([\n    tf.keras.layers.Dense(output_size)\n])\n\nmodel.compile(optimizer='sgd',loss='mean_squared_error')\nmodel.fit(training_data['inputs'],training_data['targets'],epochs=50,verbose=0)\n\n#extracting weights and biases from trained model\nwbs= model.layers[0].get_weights()\nweights=wbs[0]\nbiases=wbs[1]\n\nend = time.time()\nprint('Weights: ', weights)\nprint('Biases: ', biases)\nprint('Time taken: ', round(end - start,2),'s')","c56f742d":"predicted_targets = model.predict_on_batch(training_data['inputs'])\n\ndeltas = predicted_targets - generated_targets\n\nfig=plt.figure(figsize=(15,10))\nplt.hist(deltas,bins=30)\nplt.title(\"Histogram of errors in predicted values vs. real target values\")\nplt.show()","4c6f21a0":"fig=plt.figure(figsize=(15,10))\nax = fig.add_subplot(1,1,1)\nax.plot(deltas)\nax.set_ylim(-10,10)\nax.set_title(\"Deltas of the predicted values vs. real target values on scale [-10,10]\")\nplt.show()","0f2f2008":"fig = plt.figure(figsize=(15,10))\nplt.plot (generated_targets,predicted_targets)\nplt.xlabel('Real targets')\nplt.ylabel('Predicted targets')\nplt.show()","1c17b423":"# Tensorflow","cfb91748":"## Plotting the diff","6382feaa":"# Generating random data","67a0b78e":"# Imports","5a78c49a":"# Visualization of predictions","be0787dd":"## Looking closer on predictions"}}