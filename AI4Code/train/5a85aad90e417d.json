{"cell_type":{"8d34f5d6":"code","6b189812":"code","b3e63e0e":"code","dc16d1a5":"code","cea5d494":"code","4885f441":"code","106547f9":"code","2498a8e9":"code","9142c014":"code","53adfdeb":"code","a434d9bb":"code","daac580c":"markdown","65fddc0f":"markdown","f1af3092":"markdown","281ecf94":"markdown","09924d8b":"markdown","262b708e":"markdown","d773315a":"markdown"},"source":{"8d34f5d6":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","6b189812":"from sklearn.datasets import fetch_20newsgroups\ndata = fetch_20newsgroups()","b3e63e0e":"data.keys()","dc16d1a5":"train = fetch_20newsgroups(subset='train', categories=data.target_names)\ntest = fetch_20newsgroups(subset='test', categories=data.target_names)","cea5d494":"print(len(data.data))\nprint(len(train.data))\nprint(len(test.data))","4885f441":"# Sample entry\nprint(train.data[5])","106547f9":"from sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.pipeline import make_pipeline\n\nmodel = make_pipeline(TfidfVectorizer(), MultinomialNB())\nmodel.fit(train.data, train.target)","2498a8e9":"labels = model.predict(test.data)","9142c014":"from sklearn.metrics import accuracy_score\nscore = accuracy_score(test.target, labels)\nscore","53adfdeb":"pred_label_name=np.empty(0)\nfor i in labels:\n    pred_label_name = np.append(pred_label_name, data.target_names[labels[i]])\nprint(len(pred_label_name))\ntrue_label_name=np.empty(0)\nfor i in test.target:\n    true_label_name = np.append(true_label_name,data.target_names[test.target[i]])\nlen(true_label_name)","a434d9bb":"from sklearn.metrics import confusion_matrix\ncnf_matrix = confusion_matrix(test.target, labels)\n\nfrom mlxtend.plotting import plot_confusion_matrix\nfig, ax = plot_confusion_matrix(conf_mat=cnf_matrix, colorbar=True, show_absolute=False,\n                                show_normed=True,figsize=(30,30),)\n\n\nplt.xticks(np.arange(0,20,1),data.target_names,rotation=90,size=20)\nplt.yticks(np.arange(0,20,1),data.target_names,size=20)\nplt.xlabel('Predicted label',color='red',fontsize=30)\nplt.ylabel('True label',color='red',fontsize=30)\nplt.show()","daac580c":"## 3. Classification algorithm - Naive bayes","65fddc0f":"## 5. Confusion Matrix","f1af3092":"## 1. Importing necessary packages","281ecf94":"## 4. Prediction","09924d8b":"## 2. Importing the dataset","262b708e":"# Classification using Naive bayes classifier on sklearn's google fetch_20 news groups","d773315a":"## 5. Accuracy"}}