{"cell_type":{"5df18fa4":"code","ff3b5457":"code","4136d2dd":"code","7492adb6":"code","118e4868":"code","4a048a15":"code","e2650c16":"code","e010676a":"code","e7ffa7b7":"code","0b5f5a58":"code","e8d237aa":"code","a8dd4bc1":"code","7094f6eb":"code","e4d70e14":"code","a106fd5e":"markdown","4f6972ec":"markdown","74340a33":"markdown","8a4ea499":"markdown","0bcb08b1":"markdown","1e376ceb":"markdown","70bab303":"markdown","db6ccf02":"markdown","99997b30":"markdown","44c0dbb8":"markdown"},"source":{"5df18fa4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ff3b5457":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split","4136d2dd":"df = pd.read_csv('..\/input\/harga-rumah\/harga_rumah.csv')\n#melihat 5 baris teratas dari data\ndf.head()","7492adb6":"#mengetahui jumlah kolom dan baris dari data\ndf.shape","118e4868":"#melihat infomasi data\ndf.info()","4a048a15":"#melihat statistical description dari data\ndf.describe()","e2650c16":"#cheking data, apakah terdapat missing value ?\ndf.isnull().sum()","e010676a":"#analysis kasur\n\nf = plt.figure(figsize=(12,4))\nf.add_subplot(1,2,1)\nsns.countplot(df['kasur'])\nf.add_subplot(1,2,2)\nplt.boxplot(df['kasur'])\nplt.show()","e7ffa7b7":"#analysis luas\n\nf = plt.figure(figsize=(12,4))\nf.add_subplot(1,2,1)\nsns.countplot(df['luas'])\nf.add_subplot(1,2,2)\nplt.boxplot(df['luas'])\nplt.show()","0b5f5a58":"#analysis km\n\nf = plt.figure(figsize=(12,4))\nf.add_subplot(1,2,1)\nsns.countplot(df['km'])\nf.add_subplot(1,2,2)\nplt.boxplot(df['km'])\nplt.show()","e8d237aa":"#Bivariate analysis antara independent variable dan dependent variable\n\nplt.figure(figsize=(10,8))\nsns.pairplot(data=df, x_vars=['luas', 'kasur', 'km']\n             ,y_vars=['harga'], size=5, aspect=0.75)","a8dd4bc1":"#1, membuat variabel x dan y\nx = df.drop(columns='harga')\ny = df['harga']\n\n#2, split data menjadi training and testing dengan porsi 80:20.\nx_train, x_test, y_train, y_test = train_test_split(x, y,train_size = 0.8,\n                                                    test_size = 0.2, random_state=10)\n\n#3, membuatobject linear regresi.\nlin_reg = LinearRegression()\n\n#4, train the model menggunakan training data yang sudah displit.\nlin_reg.fit(x_train, y_train)","7094f6eb":"lin_reg.score(x_test, y_test)","e4d70e14":"lin_reg.predict([[8000,4,2]])","a106fd5e":"**Melakukan Uji coba prediksi**","4f6972ec":"**Load Data**","74340a33":"**Melihat Scre Akurasi**","8a4ea499":"* Kita dapat melihat data tertinggi dari luas adalah 16000\n* Data memiliki banyak outliers","0bcb08b1":"* Untuk data km(kamar mandi) sebagian besar dengan jumlah 1 km\n* Data hanya memiliki sedikit outliers","1e376ceb":"Setelah kita mengetahui karakteristik dari setiap data, selanjutnya adalah tahap modeling","70bab303":"**Modeling**","db6ccf02":"* Dapat dilihat bahwa sebagian besar jumlah kasur itu di angka 3\n* Data memiliki beberapa outliers","99997b30":"**Exploratory Data Analysis, Untuk mengenali setiap data lebih jauh**","44c0dbb8":"**Import Library**"}}