{"cell_type":{"0eb80840":"code","8304add7":"code","be0bfd57":"code","d042968a":"code","64ea6756":"code","c8faad93":"code","1911b300":"code","7901cd9e":"markdown","d0b49729":"markdown","d844c895":"markdown","c6332d97":"markdown","f35b3e38":"markdown","213bf9ea":"markdown"},"source":{"0eb80840":"import pandas as pd\nimport psutil\nimport numpy as np\nimport lightgbm as lgb\nimport random\nimport gc\n\n_ = np.seterr(divide='ignore', invalid='ignore')","8304add7":"\nfeld_needed = ['user_id', 'content_id', 'answered_correctly']\ntrain_pickle = '..\/input\/riiid-cross-validation-files\/cv1_train.pickle'\nori_train_df = pd.read_pickle(train_pickle)[feld_needed]  #98730332\nothers_train_df=ori_train_df[ori_train_df.answered_correctly!=-1]\ndel ori_train_df\nothers_train_df.drop(columns='answered_correctly', inplace=True)\ngc.collect()\n\n","be0bfd57":"# add method: \n# len(user_id)<=100 all\nothers_train_df['num']=1\nadd_user_count=others_train_df.groupby('user_id', as_index=False)['num'].count()\nadd_user1=others_train_df[others_train_df.user_id.isin(add_user_count[add_user_count['num']<=100].user_id)].drop(columns='num')\nadded_user=list(add_user1.user_id.unique())\nprint('the classes of new users of add_user1 is ', len(added_user))\nothers_train_df=others_train_df[~others_train_df.user_id.isin(added_user)]\ndel add_user_count, add_user1\ngc.collect()\n","d042968a":"#only use index and user_id columns\ntrains=[]\ndef getadd(index_col, alpha=0.6):\n    global trains\n    trains+=list(index_col[-round(len(index_col)*alpha):])\n    #index in which after groupby user_id\n    \nothers_train_df.groupby('user_id').apply(lambda d: getadd(d.index))\ngc.collect()\nprint(len(trains))\n","64ea6756":"all_content_id=set(others_train_df.content_id.unique())\ncontain_content_id=set((others_train_df[others_train_df.index.isin(trains)]).content_id.unique())\nprint('the classes of omit content are ', len(all_content_id-contain_content_id))\nomit_content_index=others_train_df[others_train_df.content_id.isin(list(all_content_id-contain_content_id))].index\nif len(omit_content_index)!=0:\n    trains+=omit_content_index\nprint(len(trains))\n#del others_train_df\ngc.collect()","c8faad93":"\nfeld_needed = ['user_id','timestamp',  'answered_correctly', 'content_id', 'content_type_id', 'prior_question_elapsed_time', 'task_container_id',  'prior_question_had_explanation']\ntarget = 'answered_correctly'\ntrain_pickle = '..\/input\/riiid-cross-validation-files\/cv1_train.pickle'\ntrain_df = pd.read_pickle(train_pickle)[feld_needed]  #98730332\nsample_train_df=train_df[train_df.index.isin(trains)]\nlecture_train=train_df[train_df.content_type_id==1]\n#add user 'num'<=100\npart_user=train_df[train_df.user_id.isin(added_user)]\ndel added_user\ngc.collect()\nsample_train_df=pd.concat([sample_train_df, lecture_train, part_user], axis=0).reset_index(drop=True)  \nprint(len(sample_train_df))\nsample_train_df.head()","1911b300":"#convert to dataframe\nsample_train_df.to_pickle('train_with_lectures.pickle')","7901cd9e":"for c_id in iter(added_content_id):\n    new=train_add_users[train_add_users.content_id==int(c_id)]\n    train_df_last=pd.concat([train_df_last, new], axis=0).reset_index(drop=True)  # 54053606    \nprint(len(train_df_last))\nprint('the number of users are ', )","d0b49729":"trains=[]\ni=1\ndef getadd(index, alpha=0.8):\n    if i==1:\n        i+=1\n        print(index)\n    index_col=index\n    indexs=list(index_col[-round(len(index_col)*alpha):])\n\n    trains.append(others_train_df[others_train_df.index.isin(indexs)].values)\n    #del used userid\n    others_train_df.drop(indexs, inplace=True)\n    del indexs\n    gc.collect()\n    \n    #return t[t.index.isin(indexs)]\n    \nothers_train_df.groupby('user_id').apply(lambda d: getadd(d.index))\ndel others_train_df\ngc.collect()\ntrains=np.concatenate(trains, axis=0)\n#print(trains)\ncols_values={'user_id': trains[:, 1], 'timestamp': trains[:, 2],'answered_correctly':trains[:,3], 'content_id': trains[:,4], 'content_type_id': trains[:,5],\n             'prior_question_elapsed_time': trains[:,6], 'task_container_id': trains[:,7], 'prior_question_had_explanation': trains[:,8]}\nsample_train_df = pd.DataFrame(cols_values)\nprint(len(sample_train_df))\nsample_train_df.head()","d844c895":"\nfeld_needed = ['user_id','timestamp',  'answered_correctly', 'content_id', 'content_type_id', 'prior_question_elapsed_time', 'task_container_id',  'prior_question_had_explanation']\ntarget = 'answered_correctly'\ntrain_pickle = '..\/input\/riiid-cross-validation-files\/cv1_train.pickle'\nothers_train_df = pd.read_pickle(train_pickle)[feld_needed]  #98730332\nothers_train_df=others_train_df.reset_index()","c6332d97":"train_df_last=pd.concat([sample_train_df, add_user1], axis=0).reset_index(drop=True)  # \nprint(len(train_df_last))","f35b3e38":"#check\nall_content=set(train_add_users[train_add_users.content_type_id==0].content_id)  #13523\ncontain_content=set(train_df_last[train_df_last.content_type_id==0].content_id)  #13517\nprint(len(contain_content))\nadded_content_id=all_content-contain_content\nprint(len(added_content_id))","213bf9ea":"#others\nothers_train_df=train_add_users[train_add_users.user_id.isin(add_user_count[add_user_count['num']>100].user_id)].drop(columns='num')\ndel add_user_count, train_add_users\ngc.collect()\nothers_train_df=others_train_df.reset_index()\nothers_train_df.head()\n"}}