{"cell_type":{"7f1f9385":"code","7df32358":"code","c93f6be3":"code","f4368759":"code","94863fa1":"code","2bf5a9b2":"code","1d8aaebd":"code","b783b8e8":"code","86c58780":"code","7d25f474":"code","9f11a3d9":"code","8d2e7291":"code","5b7fa09d":"code","b723db1d":"code","8bd62e00":"code","0b2bc74e":"code","53877cac":"code","666978bd":"code","fd673396":"code","dc9db0fa":"code","5c57d1ef":"code","62200a39":"code","b49a2cd9":"code","106239e6":"code","84e83881":"code","cbbbc2d5":"code","f273b3b1":"code","2cb96ac1":"code","62b91545":"code","3ffd6bdf":"code","3d43bcc9":"code","7940d79f":"code","3d6f2bd1":"code","879cb5b4":"code","99a35258":"markdown","a6bde9af":"markdown","49f9ba36":"markdown","4000239a":"markdown","afa30a16":"markdown","bf58f3e2":"markdown"},"source":{"7f1f9385":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","7df32358":"df=pd.read_csv('..\/input\/mushroom-classification\/mushrooms.csv')","c93f6be3":"df.head()","f4368759":"print(\"The data set has {} rows and {} columns\".format(df.shape[0],df.shape[1]))","94863fa1":"df.info()","2bf5a9b2":"df.isnull().sum().max()","1d8aaebd":"df.describe()","b783b8e8":"df.columns","86c58780":"from sklearn.preprocessing import LabelEncoder\nlabel=LabelEncoder()\nfor col in df.columns:\n    df[col]=label.fit_transform(df[col])\ndf.head()","7d25f474":"df['class'].value_counts()","9f11a3d9":"X=df.drop(['class'],axis=1,inplace=False)","8d2e7291":"y=df['class']","5b7fa09d":"from sklearn.preprocessing import StandardScaler\nscaler=StandardScaler()\nscaler.fit_transform(X)","b723db1d":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3)","8bd62e00":"from sklearn.neighbors import KNeighborsClassifier","0b2bc74e":"mod=KNeighborsClassifier(n_neighbors=5)\nmod.fit(X_train,y_train)","53877cac":"pred=mod.predict(X_test)","666978bd":"print(confusion_matrix(y_test,pred))\nprint(classification_report(y_test,pred))","fd673396":"from sklearn.linear_model import LogisticRegression","dc9db0fa":"lmodel=LogisticRegression()\nlmodel.fit(X_train,y_train)","5c57d1ef":"lm_predict=lmodel.predict(X_test)","62200a39":"confusion_matrix(y_test,lm_predict)","b49a2cd9":"print(classification_report(y_test,lm_predict))","106239e6":"from sklearn.svm import SVC","84e83881":"smodel=SVC()","cbbbc2d5":"smodel.fit(X_train,y_train)","f273b3b1":"spredict=smodel.predict(X_test)","2cb96ac1":"confusion_matrix(y_test,spredict)","62b91545":"print(classification_report(y_test,spredict))","3ffd6bdf":"from sklearn.naive_bayes import GaussianNB\nnmodel=GaussianNB()","3d43bcc9":"nmodel.fit(X_train,y_train)","7940d79f":"npred=nmodel.predict(X_test)","3d6f2bd1":"confusion_matrix(y_test,npred)","879cb5b4":"print(classification_report(y_test,npred))","99a35258":"## SVM","a6bde9af":"## logistic regression","49f9ba36":"## naive bayes","4000239a":"The Models in their decreasing order of f1 score are\n>SVM : 1\n\n>knn:0.99\n\n>logistic regression :0.95\n\n>naive bayes :0.92\n","afa30a16":"## Here our target attribute is 'class' i.e classes: edible=e, poisonous=p","bf58f3e2":"### there are no null values"}}