{"cell_type":{"295de583":"code","932d9c1e":"code","cbf3a34c":"code","d4a4cbb0":"code","93f0db52":"code","7e0d7606":"code","96da6a44":"code","7fa0cb8b":"code","103207b2":"code","ef0d4204":"code","d29bc664":"code","615c95bb":"code","5cbdeca3":"code","ee8c5cd6":"code","012dbdff":"code","4c7144e4":"code","847e8301":"code","97609e2d":"code","6b01ca6d":"code","1712e74f":"code","ea9069ad":"code","c46ab85c":"code","7f74f797":"code","ef9ca720":"code","cf50ed36":"code","24cf60a4":"code","42390dcb":"code","85f806d1":"code","98afd541":"code","802cd08d":"code","446c4fd6":"code","388bd422":"code","cf9dd7fa":"code","5574edcc":"markdown","9aad6d63":"markdown","e1b8653b":"markdown","289f0a02":"markdown","3f6fae06":"markdown"},"source":{"295de583":"# \u30e9\u30a4\u30d6\u30e9\u30ea\u8aad\u307f\u8fbc\u307f\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nfrom catboost import CatBoost\nfrom catboost import Pool\nfrom catboost import CatBoostClassifier\nfrom catboost import cv\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\n\nfrom sklearn.feature_extraction.text import TfidfVectorizer\n\nimport warnings\nwarnings.simplefilter('ignore')","932d9c1e":"# \u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\ndf_train = pd.read_csv('..\/input\/data-science-winter-osaka2\/train.csv')\ndf_test = pd.read_csv('..\/input\/data-science-winter-osaka2\/test.csv')","cbf3a34c":"# \u751f\u30c7\u30fc\u30bf\u306e\u60c5\u5831\u78ba\u8a8d\ndf_train.info(), df_test.info()","d4a4cbb0":"# \u751ftrain\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8\ndf_train.sample(2)","93f0db52":"# \u8a08\u7b97\u7528\u306b\u7f6e\u304d\u63db\u3048\ny_train = df_train.user_reviews\nX_train = df_train.drop(['user_reviews'], axis=1)\nX_test = df_test.copy()","7e0d7606":"# \u4e00\u65e6\u3001\u5143\u3005\u306e\u30c7\u30fc\u30bf\u306e\u5f62\u5f0f\u306b\u623b\u3059\ndef eval_data(row):\n    if row == row:\n        return eval(row)\n    else:\n        return np.nan\n\nfor column in ['popular_tags', 'categories', 'minimum_requirements', 'recommended_requirements']:\n    X_train[column] = X_train[column].apply(eval_data)\n    X_test[column] = X_test[column].apply(eval_data)","96da6a44":"# \u5e74\u3060\u3051\u3092\u62bd\u51fa\u3057\u3001\u6570\u5b57\u306b\u5909\u63db\nX_train['year'] = X_train['release_date'].str.extract(r'(\\d{4})')\nX_train['year'] = X_train['year'].astype(float)\n\nX_test['year'] = X_test['release_date'].str.extract(r'(\\d{4})')\nX_test['year'] = X_test['year'].astype(float)","7fa0cb8b":"# \u5024\u6bb5\u304c free \u306f 0 \u3068\u3057\u3001\u6570\u5b57\u306b\u5909\u63db\nX_train['price'] = X_train['price'].replace({'free':0})\nX_train['price'] = X_train['price'].astype(float)\n\nX_test['price'] = X_test['price'].replace({'free':0})\nX_test['price'] = X_test['price'].astype(float)","103207b2":"# Target \u306e y \u3092\u6570\u5024\u306b\u5909\u63db\ny_train = y_train.map({'c0':0, 'c1':1, 'c2':2})","ef0d4204":"# \u4f8b\uff1a train \u3068 test \u3092\uff12\u3064\uff11\u7d44\u3067\u8ffd\u52a0\u3057\u3066\u3044\u304f\u30a4\u30e1\u30fc\u30b8\uff08T88\u3055\u3093\u3054\u63d0\u4f9b\u30b3\u30fc\u30c9\uff09\n# train\nX_train['name_tm_mark'] = 0\nX_train.loc[X_train['name'].str.contains('\u00ae'), 'name_tm_mark'] = 1 # 'name' \u306b '\u00ae' \u304c\u3042\u3063\u305f\u3089\u3001'name_tm_mark' \u306b\uff11\u3092\u7acb\u3066\u308b\u3002\nX_train.loc[X_train['name'].str.contains('\u2122'), 'name_tm_mark'] = 1\n\n# test\nX_test['name_tm_mark'] = 0\nX_test.loc[X_test['name'].str.contains('\u00ae'), 'name_tm_mark'] = 1\nX_test.loc[X_test['name'].str.contains('\u2122'), 'name_tm_mark'] = 1","d29bc664":"# \u4f8b\uff1acount 'Steam'\n# train\nX_train['category_steam_cnt'] = 0\nX_train['category_steam_cnt'] = df_train['categories'].str.count('Steam')\n\n#test\nX_test['category_steam_cnt'] = 0\nX_test['category_steam_cnt'] = df_test['categories'].str.count('Steam')","615c95bb":"# \u4f8b\uff1a len()\n# train\nX_train['popular_tags_len'] = X_train['popular_tags'].fillna(\"\").apply(len)\nX_train['categories_len'] = X_train['categories'].fillna(\"\").apply(len)\n\n# test\nX_test['popular_tags_len'] = X_test['popular_tags'].fillna(\"\").apply(len)\nX_test['categories_len'] = X_test['categories'].fillna(\"\").apply(len)","5cbdeca3":"# \u7279\u5fb4\u91cf\u306e\u8ffd\u52a0\uff08\u30a8\u30f3\u30b3\u30fc\u30c9\u3001\u8a00\u8a9e\u51e6\u7406\u3001\u753b\u50cf\u51e6\u7406\u306a\u3069\uff09\nX_train['Content'] = X_train['description'].str.contains('Content')\n\nX_test['Content'] = X_test['description'].str.contains('Content')\n","ee8c5cd6":"# \u7279\u5fb4\u91cf\u306e\u8ffd\u52a0\uff08\u30a8\u30f3\u30b3\u30fc\u30c9\u3001\u8a00\u8a9e\u51e6\u7406\u3001\u753b\u50cf\u51e6\u7406\u306a\u3069\uff09\nX_train['Content'] = X_train['description'].str.contains('Content')\nX_test['Content'] = X_test['description'].str.contains('Content')\n","012dbdff":"# \u7279\u5fb4\u91cf\u306e\u8ffd\u52a0\uff08\u30a8\u30f3\u30b3\u30fc\u30c9\u3001\u8a00\u8a9e\u51e6\u7406\u3001\u753b\u50cf\u51e6\u7406\u306a\u3069\uff09\n\n\n","4c7144e4":"# \u6574\u5f62\u5f8c\u306e\u30c7\u30fc\u30bf\u78ba\u8a8d\nX_train.info(), y_train","847e8301":"X_train.head(3)","97609e2d":"# \u5b66\u7fd2\u524d\u306b\u672a\u3060\u6e96\u5099\u304c\u51fa\u6765\u3066\u3044\u306a\u3044\u7279\u5fb4\u91cf\u3084\u4e0d\u8981\u306a\u7279\u5fb4\u91cf\u306f\u524a\u9664\u3057\u3066\u304a\u304f\n# \u6b8b\u3057\u3066\u3044\u3044\u306e\u306f\u3001\u6570\u5024\u3001bool\u578b(True\/False)\u3068 NaN\ndel_cats = ['name','release_date','developer','publisher','popular_tags','categories','description','recommended_requirements','minimum_requirements','img_path']\nX_train = X_train.drop(del_cats, axis=1)\nX_test = X_test.drop(del_cats, axis=1)","6b01ca6d":"X_train.tail(3)","1712e74f":"# \u30c7\u30fc\u30bf\u306e\u5206\u5272 (train:test = 7:3)\nX_train_, X_test_, y_train_, y_test_ = train_test_split(X_train, y_train, test_size=0.3, random_state=0)","ea9069ad":"# Pool; Catboost \u72ec\u7279\u306e\u51e6\u7406\ntrain_pool = Pool(X_train_, y_train_)\nvalidate_pool = Pool(X_test_, y_test_)","c46ab85c":"# CatBoostClassifier\u306e\u521d\u671f\u5316: \u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u3001log-loss\nmodel = CatBoostClassifier(custom_loss=['Accuracy'],random_seed=42)","7f74f797":"# \u30e2\u30c7\u30eb\u306e\u5b66\u7fd2\nmodel.fit(train_pool, \n          eval_set=validate_pool,    # \u691c\u8a3c\u7528\u30c7\u30fc\u30bf\n          early_stopping_rounds=30,  # 30\u56de\u4ee5\u4e0a\u7cbe\u5ea6\u304c\u6539\u5584\u3057\u306a\u3051\u308c\u3070\u4e2d\u6b62\n          use_best_model=True)       # \u6700\u3082\u7cbe\u5ea6\u304c\u9ad8\u304b\u3063\u305f\u30e2\u30c7\u30eb\u3092\u4f7f\u7528\u3059\u308b\u304b\u306e\u8a2d\u5b9a","ef9ca720":"# \u691c\u8a3c\u7528\u30c7\u30fc\u30bf\u3092\u5206\u985e\u3059\u308b\ny_pred = model.predict(X_test_)","cf50ed36":"# \u7cbe\u5ea6 (Accuracy) \u3092\u691c\u8a3c\nacc = accuracy_score(y_test_, y_pred)\nacc","24cf60a4":"# \u5404\u30af\u30e9\u30b9\u306e\u78ba\u7387\u3092\u8a08\u7b97\npreds_proba = model.predict_proba(X_test)\npreds_proba","42390dcb":"# \u30af\u30e9\u30b9\u4e88\u6e2c\npreds_class = model.predict(X_test)\npreds_class","85f806d1":"# \u5f8c\u51e6\u7406: \u5c06\u6765\u306e\u3082\u306e\u306f\u3001\u8a55\u4fa1\u306a\u3057(c2)\npreds_class[(X_test.year>=2021)==True] = 2","98afd541":"# \u63d0\u51fa\u7528\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\nsub = pd.read_csv('..\/input\/data-science-winter-osaka2\/sample_submission.csv',index_col=0)\nsub.user_reviews = preds_class","802cd08d":"# \u6570\u5b57\u3092\u6587\u5b57\u306b\u5909\u63db\nsub = sub.replace({0:'c0', 1:'c1', 2:'c2'})","446c4fd6":"# \u63d0\u51fa\u7528\u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58\nsub.to_csv('submission.csv')\nsub","388bd422":"# Tree\u30e2\u30c7\u30eb\nmodel.plot_tree(tree_idx=0)","cf9dd7fa":"# \u7279\u5fb4\u91cf\u306e\u91cd\u8981\u5ea6\u3092\u53d6\u5f97\nfeature_importance = model.get_feature_importance()\n# \u68d2\u30b0\u30e9\u30d5\u3068\u3057\u3066\u30d7\u30ed\u30c3\u30c8\nplt.figure(figsize=(7, 3))\nplt.barh(range(len(feature_importance)),\n        feature_importance,\n        tick_label=X_train.columns)\n\nplt.xlabel('importance')\nplt.ylabel('features')\nplt.grid()\nplt.show()","5574edcc":"## \u2605","9aad6d63":"## \u3053\u306e\u4e0b\u304b\u3089\u6b21\u306e\u2605\u307e\u3067\u306e\u9593\u306b\u7279\u5fb4\u91cf\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3059\u3002","e1b8653b":"# \u4ee5\u4e0b\u3067\u6a5f\u68b0\u5b66\u7fd2","289f0a02":"## \u3000\u3000\u2191 \u3000\u7df4\u7fd2\uff11\u56de\u306e\u7cbe\u5ea6","3f6fae06":"Baseline \u306b\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f Catboost \u306e single model \u3067\u3059\u3002  \n\u7279\u5fb4\u91cf\u304c\u5c11\u3057\u3057\u304b\u5165\u3063\u3066\u3044\u307e\u305b\u3093\u306e\u3067\u3001\u6b63\u76f4\u30b9\u30b3\u30a2\u306f\u4f4e\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002  \n\u305d\u306e\u4ee3\u308f\u308a\u4e0b\u306e\u30b3\u30fc\u30c9\u306e\u2605\u5370\u9593\u306b\u7279\u5fb4\u91cf\u3092\u8ffd\u52a0\u3057\u3066\u3044\u3051\u3070\u3001\u4f38\u3073\u4ee3\u306f\u5341\u5206\u306b\u3042\u308a\u307e\u3059\u3002  \n\u30b3\u30fc\u30c9\u3082\u57fa\u790e\u7684\u306a\u3082\u306e\u3060\u3051\u3092\u4f7f\u7528\u3057\u3066\u66f8\u304d\u307e\u3057\u305f\u3002  \n\u30b9\u30bf\u30fc\u30c8\u30a2\u30c3\u30d7\u7528\u3068\u3057\u3066\u30b3\u30d4\u30fc\u3057\u3066\u4f7f\u7528\u304f\u3060\u3055\u3044\u3002  \n\u30d1\u30e9\u30e1\u30fc\u30bf\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u306f\u3001\u5168\u304f\u3057\u3066\u3044\u307e\u305b\u3093\u3002  \n\u30b9\u30b3\u30a2\u30a2\u30c3\u30d7\u306e\u30a2\u30c9\u30d0\u30a4\u30b9\u3092\u671f\u5f85\u3057\u3066\u3044\u307e\u3059\u3002"}}