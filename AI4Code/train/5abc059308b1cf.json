{"cell_type":{"4dd9748c":"code","4e4dbe0c":"code","2f28cbe9":"code","8d150673":"code","e41b339b":"code","5bc581e9":"code","7ee7a86c":"code","c79e14e8":"code","ae9f90c5":"code","c6e5b2f6":"code","46407ba4":"code","6f40af22":"code","8d19e780":"code","9f299ace":"code","9660ef3a":"code","b18363be":"code","a60cb2d0":"code","12ab432e":"code","ece779f9":"code","2a0fd19f":"code","5a71d85b":"code","711a85d3":"code","3216f3a9":"code","4383ae5d":"code","3d917fd7":"code","4ffcb823":"code","b030745c":"code","8526a791":"code","0087120d":"code","4e28fe1e":"code","3ba74aed":"code","a218ce78":"code","43be5bb5":"code","e452a668":"code","93a2a581":"code","a2bc774b":"code","1486d620":"code","522b305a":"code","1f782e5e":"code","4c8a90bd":"code","c3466c1b":"code","d099eee5":"code","f1a0fe41":"code","2108d8b6":"code","fb219b0a":"code","057bd9a7":"code","65ee4655":"code","f0636ca1":"code","f03f375b":"code","88d35002":"code","b2ba22c0":"code","0c9d133f":"code","616a7da9":"code","33f628ef":"code","14ccc9f0":"code","7a4d04f3":"code","85ad7667":"code","1ded4a11":"code","6c140ae1":"code","977be466":"code","e89bd82b":"code","db6d5c64":"code","bb57122f":"code","d5c42596":"code","7ee0938a":"code","cf8c346a":"code","1e4083f1":"code","67fea25a":"code","01d2a530":"code","59c7c09f":"code","5fca4efe":"code","40320f2b":"code","62835f3d":"code","f747e0cf":"code","1794da32":"code","f45a0b6d":"code","1b227bcd":"code","8a3570e6":"code","8789a155":"markdown","75439845":"markdown","53bcc4a5":"markdown","1c28e95b":"markdown","fa8afbba":"markdown","c00f4f8d":"markdown","58a8740d":"markdown","891a28da":"markdown"},"source":{"4dd9748c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4e4dbe0c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n\ndf = pd.read_csv('..\/input\/income-classification\/income_evaluation.csv')\ndf.head()","2f28cbe9":"df.shape","8d150673":"col_names = ['age', 'workclass', 'fnlwgt', 'education', 'education_num', 'marital_status', 'occupation', 'relationship',\n             'race', 'sex', 'capital_gain', 'capital_loss', 'hours_per_week', 'native_country', 'income']\n\ndf.columns = col_names\n\ndf.columns","e41b339b":"df.info()","5bc581e9":"df.dtypes","7ee7a86c":"df.describe()","c79e14e8":"df.describe(include='object')","ae9f90c5":"df.describe(include='all')","c6e5b2f6":"df.isnull().sum().sort_values(ascending=False)","46407ba4":"# Categorical Variables:\ncategorical_features = [col for col in df.columns\n                       if df[col].dtypes =='object']\ncategorical_features","6f40af22":"df[categorical_features].nunique()","8d19e780":"df[categorical_features].head()","9f299ace":"for col in categorical_features:\n    print(df[col].value_counts())","9660ef3a":"for col in categorical_features:\n    print(df[col].value_counts()\/len(df))","b18363be":"df['income'].value_counts()","a60cb2d0":"df['income'].value_counts()\/len(df)","12ab432e":"# Lets Visualize frequency distribution of income variable:\nf,ax = plt.subplots(figsize=(15,5))\ndf['income'].value_counts().plot.pie(autopct='%1.1f%%',shadow=True)","ece779f9":"sns.countplot(y='income',data=df)","2a0fd19f":"# Vizualize income Vs sex variable\nsns.countplot(x='income',hue='sex',data=df)","5a71d85b":"sns.countplot(x='income',hue='race',data=df)","711a85d3":"df['workclass'].nunique()","3216f3a9":"df['workclass'].unique()","4383ae5d":"df['workclass'].value_counts()","3d917fd7":"\ndf['workclass'].replace(' ?', np.NaN, inplace=True)","4ffcb823":"df['workclass'].value_counts()","b030745c":"df['workclass'].value_counts().plot.bar(color='orange')\nplt.xticks(rotation=30)","8526a791":"# vizualize workclass Vs Income\n\nsns.countplot(x='workclass',hue='income',data=df)\nplt.xticks(rotation=90)","0087120d":"# Visualize workclass with Sex variable\nsns.countplot(y='workclass',hue='sex',data=df)","4e28fe1e":"# Explore Occupation Variable\ndf['occupation'].nunique()","3ba74aed":"df['occupation'].unique()","a218ce78":"df['occupation'].value_counts()","43be5bb5":"# Replace ? with NaN\ndf['occupation'].replace(' ?',np.NaN,inplace=True)","e452a668":"df['occupation'].value_counts()","93a2a581":"# Visualize Occupation Variable\n\ndf['occupation'].value_counts().plot.bar()","a2bc774b":"# Explore native_country\ndf['native_country'].nunique()","1486d620":"df['native_country'].unique()","522b305a":"df['native_country'].value_counts()","1f782e5e":"# Replace ? \ndf['native_country'].replace(' ?',np.NaN,inplace=True)","4c8a90bd":"plt.figure(figsize=(20,13))\nsns.countplot(x='native_country',data=df)\nplt.xticks(rotation=90)\n","c3466c1b":"df[categorical_features].isnull().sum().sort_values(ascending=False)","d099eee5":"for col in categorical_features:\n    print(col,' contains ',len(df[col].unique()),' labels.')","f1a0fe41":"numerical_features = [col for col in df.columns\n                     if df[col].dtypes !='object']\nnumerical_features","2108d8b6":"df[numerical_features].head()","fb219b0a":"df[numerical_features].isnull().sum()","057bd9a7":"df['age'].nunique()","65ee4655":"df['age'].head()","f0636ca1":"sns.distplot(df['age'],bins=10,color='orange')\nplt.show()","f03f375b":"sns.boxplot(df['age'])","88d35002":"# Relation Between age and income variable\nsns.boxplot(x='income',y='age',data=df)","b2ba22c0":"df.corr()","0c9d133f":"sns.heatmap(df.corr())","616a7da9":"sns.pairplot(df)\nplt.show()","33f628ef":"sns.pairplot(df,hue='sex')\nplt.show()","14ccc9f0":"### Categorical Variables\n\ndf[categorical_features].isnull().sum()","7a4d04f3":"# Filling missing class with mode\n\ndf['workclass'].fillna(df['workclass'].mode()[0],inplace=True)\ndf['occupation'].fillna(df['occupation'].mode()[0],inplace=True)\ndf['native_country'].fillna(df['native_country'].mode()[0],inplace=True)","85ad7667":"df[categorical_features].isnull().sum()","1ded4a11":"X = df.drop('income',axis=1)\ny = df.income","6c140ae1":"X.shape,y.shape","977be466":"# Encoding\nimport category_encoders as ce\nfrom sklearn.compose import ColumnTransformer\ncategorical=['workclass', 'education', 'marital_status', 'occupation', 'relationship', \n                                 'race', 'sex', 'native_country']\nencoder = ce.OneHotEncoder()\ntransformer = ColumnTransformer([('one_hot',encoder,categorical)],\n                               remainder='passthrough')\ntransformed_X = transformer.fit_transform(X)\ntransformed_X\n","e89bd82b":"pd.DataFrame(transformed_X)","db6d5c64":"transformed_X.shape","bb57122f":"from sklearn.preprocessing import RobustScaler\nscaler = RobustScaler()\nscaler_transformed=scaler.fit_transform(transformed_X)\nscaler_transformed.shape","d5c42596":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split","7ee0938a":"X_train,X_test,y_train,y_test = train_test_split(scaler_transformed,y,test_size=0.3,random_state=0)","cf8c346a":"rfc = RandomForestClassifier(random_state=0)\nrfc.fit(X_train,y_train)","1e4083f1":"y_pred = rfc.predict(X_test)","67fea25a":"from sklearn.metrics import accuracy_score","01d2a530":"accuracy_score(y_test,y_pred)","59c7c09f":"### n_estimators=100\nrfc_100 = RandomForestClassifier(n_estimators=100,random_state=0)\nrfc_100.fit(X_train,y_train)\ny_pred_100 = rfc_100.predict(X_test)","5fca4efe":"accuracy_score(y_test,y_pred_100)","40320f2b":"clf = RandomForestClassifier(n_estimators=100,random_state=0)\nclf.fit(X_train,y_train)","62835f3d":"clf.get_params()","f747e0cf":"clf.feature_importances_","1794da32":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test,y_pred)\nprint(cm)","f45a0b6d":"cm_matrix = pd.DataFrame(data=cm,columns=['Actual Positive:1',\n                                         'Actual Negative:0'],\n                        index=['Predict Positive:1',\n                              'Predict Negative:0'])\ncm_matrix","1b227bcd":"sns.heatmap(cm_matrix,annot=True,fmt='d')","8a3570e6":"from sklearn.metrics import classification_report\nprint(classification_report(y_test,y_pred))","8789a155":"Until now, I have used all the features given in the model. Now, I will select only the important features, build the model using these features and see its effect on accuracy.\n\nFirst, I will create the Random Forest model as follows:-","75439845":"### Pairplot","53bcc4a5":"we can see that there are many outliers in age variable","1c28e95b":"### Numerical Variables","fa8afbba":"### Checking Missing Values in Categorical Features:","c00f4f8d":"#### There are 1836 values that are encoded with ?  . So  I will replace them with NaN","58a8740d":"### Cardinity: Number of labels within a categorical variable","891a28da":"#### Interpretation\nAs expected, younger people make less money as compared to senior people."}}