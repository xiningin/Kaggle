{"cell_type":{"0527aa70":"code","6b93854b":"code","c7ba1272":"code","50a83aff":"code","36b57b17":"code","29c24dc5":"code","c7e9308f":"code","2dc761ad":"code","585e3119":"code","d3c7ffaa":"code","760f0510":"code","dc1be039":"code","33277641":"code","f2c7b084":"code","84a44124":"code","a8252acc":"markdown","61a1cc0c":"markdown","4d8f554a":"markdown","4831e7b8":"markdown","ae6f7e95":"markdown","d6fb3260":"markdown","d4e88681":"markdown","9b6d4cc5":"markdown","b40d5ffe":"markdown"},"source":{"0527aa70":"import pandas as pd\nimport numpy as np\n\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.cluster import KMeans\nfrom sklearn.datasets import make_blobs\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sb\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import pairwise_distances_argmin_min\nfrom sklearn.model_selection import train_test_split\n \n%matplotlib inline\nfrom mpl_toolkits.mplot3d import Axes3D\nplt.rcParams['figure.figsize'] = (16, 9)\nplt.style.use('seaborn-whitegrid')","6b93854b":"#Normal\nnormal = np.random.normal(10,5, 10000)\n#Uniforme\nuniforme = np.random.uniform(0,10,10000)\n#Binomial\nbinomial = np.random.binomial(10,0.4, 10000)\n# Chi cuadrado\nchi_cuadrado = np.random.chisquare(10,10000)","c7ba1272":"fig = make_subplots(rows=2,cols=2, subplot_titles = ('Normal','Uniforme','Bionomial','Chi_Cuadrado') )\n\nfig.add_trace(go.Histogram(x = normal), row =1, col=1)\nfig.add_trace(go.Histogram(x = uniforme), row = 1, col = 2)\nfig.add_trace(go.Histogram(x = binomial), row = 2, col = 1)\nfig.add_trace(go.Histogram(x = chi_cuadrado), row = 2, col = 2)\n\nfig.show()","50a83aff":"#Histograma\nX = np.random.normal(10,5, 1000)\nY = np.random.normal(20,5,1000) + X","36b57b17":"fig2 = go.Figure()\n\nfig2.add_scatter(x=X,y=Y, mode = 'markers')\n\nfig2.update_layout(\n        width = 700,\n        height = 500\n)\n\nfig2.show()\n","29c24dc5":"# Correlaci\u00f3n\n\na = pd.Series(np.random.normal(0,5, 1000))\nb = pd.Series(3 + a*2 )\nc = pd.Series(np.random.normal(0,5,1000)* a **2)\nd = pd.Series(np.random.uniform(0,10,1000))\ne = pd.Series(np.random.chisquare(10,1000))\n\ndf = pd.concat([a,b,c,d,e], axis = 1, keys=['a','b','c','d','e'])\ndf.corr()","c7e9308f":"sns.heatmap(df.corr(), cmap = 'summer', annot = True)","2dc761ad":"df = pd.read_csv('..\/input\/cnpv-2018\/CNPV2018_5PER_A2_05.CSV',\n                  usecols=['U_DPTO', 'U_MPIO', 'P_NROHOG', 'P_NRO_PER', 'P_SEXO', 'P_EDADR',\n                          'P_PARENTESCOR', 'PA1_GRP_ETNIC', 'PA11_COD_ETNIA', 'PA12_CLAN',\n                          'PA21_COD_VITSA', 'PA22_COD_KUMPA', 'PA_HABLA_LENG', 'PA1_ENTIENDE',\n                          'P_NIVEL_ANOSR'],\n                  nrows = 100000)\n\nserie = pd.Series(df['P_NRO_PER'])\nindices_drop = serie[serie > 25].index.to_list()\ndf2 = df.copy()\ndf2.drop(indices_drop, axis=0, inplace = True)\ndf2.drop(df2[df['P_NIVEL_ANOSR'].isnull() == True].index.tolist(),axis = 0, inplace = True)","585e3119":"caracteristicas = df2[['P_NRO_PER', 'P_SEXO','PA1_GRP_ETNIC']]\nobjetivo = df2['P_NIVEL_ANOSR']","d3c7ffaa":"%matplotlib inline\nfrom mpl_toolkits.mplot3d import Axes3D\nplt.rcParams['figure.figsize'] = (16, 9)\nplt.style.use('seaborn-whitegrid')\n\ncaracteristicas.hist()\nplt.show()","760f0510":"X, y = np.array(caracteristicas), np.array(objetivo)","dc1be039":"import plotly.express as px\n\nfig = plt.figure()\nax = Axes3D(fig)\ncolores=px.colors.qualitative.Alphabet[:len(objetivo.unique())]\ncolor  =[]\ntupla = []\nfor i,j in zip(objetivo.unique(),np.arange(0,len(colores))):\n    tupla.append((i,j))\nfor i in y:\n    for j in tupla:\n        if i == j[0]:\n            color.append(colores[j[1]])\n\nax.scatter(X[:, 0], X[:, 1], X[:, 2], c=color,s=60)\nplt.legend([str(i) for i in objetivo.unique()])\n\nplt.show()","33277641":"X_train,X_test,y_train,y_test = train_test_split(X,y, test_size = 0.2, random_state = 432)","f2c7b084":"kmeans = KMeans(n_clusters=10, random_state = 14)\nkmeans.fit(X_train,y_train)\n\npredicciones = kmeans.predict(X_test)\nfrom sklearn import metrics\n\nmetrics.adjusted_rand_score(y_test, predicciones)","84a44124":"from sklearn.ensemble import RandomForestClassifier\nRF = RandomForestClassifier(max_depth=3, random_state=0)\n\nRF.fit(X_train,y_train)\nRF_predict = RF.predict(X_test) \n\nmetrics.adjusted_rand_score(y_test,RF_predict)","a8252acc":"el secore ``-0.000954`` es un p\u00e9simo resultado para nuestro modelo de predicci\u00f3n.\n\nEn s\u00edntesis el n\u00famero de personas por hogar ``P_NRO_PER``, el sexo  ``P_SEXO`` , y la pertencia \u00e9tnica ``PA1_GRP_ETNIC``\nno son buenas caracter\u00edsticas para nuestra variable objetivo: nivel educativo ``P_NIVEL_ANOSR``","61a1cc0c":"# Un modelo de Random Forest classifier","4d8f554a":"# Tipos de modelos de ML:\n\n + Regresi\u00f3n lineal\n + Regresi\u00f3n log\u00edstica\n + Arboles de decisi\u00f3n\/regresi\u00f3n \n + Bosques aleatorios\n + Clustering : K-means\/Agglomerative\/Hirarchical\n + SVM (m\u00e1quinas de soporte vectorial)\n + ...","4831e7b8":"# Variables Discretas Vs Continuas, esa es la cuesti\u00f3n.","ae6f7e95":"<h1><center> Machine Learning <\/center><\/h1>","d6fb3260":"El Machine Learning es una rama de la inteligencia artifical. Es una herramienta interdisciplinar que agrupa conceptos de la matem\u00e1tica,la estad\u00edstia e inform\u00e1tica en un conjunto de algortimos capaces de aprender e identificar patrones.\n\nPor ejemplo:\n\n+ \u00bfEl comportamiento de los consumidores en determinado nicho de mercado presenta patroes?\n+ \u00bfLa personas que tienen cierto tipo de h\u00e1bitos poco saludables suele tener problemas de salud?\n+ \u00bfSe podr\u00eda crear un algortimo de clasificaci\u00f3n para facilitar la taxonom\u00eda de determinados seres vivos?\n+ \u00bfUn consumidor aleatorio tiene un patr\u00f3n de compra determinado?\n+ \u00bfEl precio de las acciones de APPLE est\u00e1 correlacionado con los tweets de Donald Trump?\n+ \u00bfLa personas est\u00e1n felices, enojados, ansiosas?\n+ \u00bfSe puede crear un algortimo capaz de diagnosticar cancer?","d4e88681":"En Machine leraning el bojtivo es construir un algortimo de aprendizaje autom\u00e1tico que pueda aprender, e identficar ciertos patrones.\n\nEse algoritmo se compone de datos de entrada  (variables de ajuste o \"caracter\u00edsticas\") y datos de salida  ( \"variables objetivo\" )\n\n+ **Variables de ajuste o \"caracter\u00edsticas\":**\n\n     + Color del pelaje\n     + Grosor del pelaje\n     + Tiene garras: si = 1, no = 0\n     + Tiene Cola:  si = 1, no = 0\n     + edad\n     + ecosistema\n \n+ **Variables objetivo:**\n\n + Tipo de mam\u00edfero ","9b6d4cc5":"# Un modelo de clustering - Kmeans","b40d5ffe":"***\n___"}}