{"cell_type":{"c32a5eab":"code","59cba1c5":"code","7c1f3603":"code","f54b020e":"code","409cf8af":"code","23e67091":"code","0b0730c4":"code","fa98d7c2":"code","8f2b63dc":"code","e0c0ee83":"code","cc29bbbb":"code","4e4cd344":"code","13d04446":"code","60f4f8b2":"markdown","702afaea":"markdown","53264c0e":"markdown","9084ac27":"markdown","90d05560":"markdown","e3fd043a":"markdown","7a834221":"markdown","0ba4eab6":"markdown","101cabbc":"markdown","24a4d86c":"markdown","11e62abf":"markdown","3f8b4ee2":"markdown"},"source":{"c32a5eab":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import roc_curve\nfrom sklearn.metrics import roc_auc_score\nfrom xgboost import XGBClassifier\nfrom sklearn.model_selection import train_test_split\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n\n\n# Any results you write to the current directory are saved as output.","59cba1c5":"data = pd.read_csv(\"..\/input\/datasetsmodifiedscancer\/trainM.csv\")\nteste = pd.read_csv('..\/input\/datasetsmodifiedscancer\/testM.csv')\ndata.head(5)","7c1f3603":"xgb = XGBClassifier(base_score=0.0025, booster='gbtree', colsample_bylevel=1,\n       colsample_bytree=0.65, gamma=2, learning_rate=0.3, max_delta_step=1,\n       max_depth=4, min_child_weight=2, missing=None, n_estimators=280,\n       n_jobs=1, nthread=None, objective='binary:logistic', random_state=0,\n       reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,\n       silent=True, subsample=1)","f54b020e":"def correlate(data,t1,t2):\n    numerical_column = ['int64','float64'] #select only numerical features to find correlation\n    plt.figure(figsize=(t1,t2))\n    sns.heatmap(\n        data.select_dtypes(include=numerical_column).corr(),\n        cmap=plt.cm.RdBu,\n        vmax=1.0,\n        linewidths=0.1,\n        linecolor='white',\n        square=True,\n        annot=True\n    )\n    \n   ","409cf8af":" correlate(data,25,25)","23e67091":"train=pd.DataFrame((data[['diagnosis','radius_mean','perimeter_mean','area_mean','concave points_mean','radius_worst','perimeter_worst','area_worst','concave points_worst']]))\ntest=pd.DataFrame((teste[['radius_mean','perimeter_mean','area_mean','concave points_mean','radius_worst','perimeter_worst','area_worst','concave points_worst']]))\n","0b0730c4":"correlate(train,10,10)","fa98d7c2":"X=np.array(train.drop('diagnosis',1))\ny=np.array(train.diagnosis)\nxteste=np.array(test)\nxtrei,xtest,ytrei,ytest=train_test_split(X,y,test_size=0.30)","8f2b63dc":"def score(model,x,y):\n    prob=model.predict_proba(x)\n    prob = prob[:, 1]\n    auc = roc_auc_score(y, prob)\n    print('AUC: {}\\nROC_AUC: {}\\n {}'.format(model.score(x,y),auc,prob[:10]))","e0c0ee83":"\nxgb.fit(X,y)\nscore(xgb,X,y)\n","cc29bbbb":"prob=xgb.predict_proba(xteste)","4e4cd344":"submission = pd.DataFrame({\n    \"Id\": teste.id, \n    \"Expected\": prob[:,1]\n})\nsubmission.head()\n","13d04446":"submission.to_csv('sampleSubmission.csv', index=False)","60f4f8b2":"### Aqui redefinimos os par\u00e2metros para a passagem dos dados para a matriz de correla\u00e7\u00e3o\n#### Ap\u00f3s verificar que na matriz de correla\u00e7\u00e3o anterior os principais campos que possuem correla\u00e7\u00e3o na matriz","702afaea":"## Separando os dados para treinar o classificador\n#### Aqui eu pego 70% pra treinar o classificador e 30% pra teste","53264c0e":"## Instanciando o classificador XGBoost\n","9084ac27":"#### Gerando o Arquivo para a submiss\u00e3o","90d05560":"# Lendo os arquivos","e3fd043a":"# Fazendo a Predi\u00e7\u00e3o\n#### Utilizamos o .csv de teste","7a834221":"# Realizando o Treinamento e Obtendo o Score","0ba4eab6":"##  Criando a Matriz de Correla\u00e7\u00e3o e definindo uma fun\u00e7\u00e3o pra a sua cria\u00e7\u00e3o.","101cabbc":"\n##### booster='gbtree' \u00e9 o tipo de classificador do xgboost (\u00e1rvore, regress\u00e3o linear...)\n\n","24a4d86c":"## Definindo nossa fun\u00e7\u00e3o para verificar o score\n##### Fazendo o score do treinamento, onde fazemos a predi\u00e7\u00e3o, pegamos a segunda coluna para medir a acurracy, ap\u00f3s mandamos para tra\u00e7ar a curva roc","11e62abf":"## Imports","3f8b4ee2":"# Cancer de Mama"}}