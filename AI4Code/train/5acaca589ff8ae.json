{"cell_type":{"f1cb5a3f":"code","3d0cf365":"code","b4efb0c1":"code","c5ebb337":"code","61656f6c":"code","92962227":"code","5e1dba3c":"code","778cad26":"code","add2df2c":"code","d9dfa9cc":"code","eb0eeab3":"code","019afc10":"code","7a5b0057":"code","0301a595":"code","72cde22e":"markdown","0af19c49":"markdown","445ff3a9":"markdown","bd116e85":"markdown","02a52994":"markdown","b72aff96":"markdown","796b5b26":"markdown","62a4404b":"markdown","490ae274":"markdown","a88cc7fd":"markdown","9a68fab9":"markdown"},"source":{"f1cb5a3f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3d0cf365":"import matplotlib.pyplot as plt","b4efb0c1":"data = pd.read_csv('..\/input\/us-accidents\/US_Accidents_Dec19.csv')\n\n# Displaying first few records of the data\ndata.head()","c5ebb337":"count_bystates = data.groupby(['State','Severity']).size().unstack(fill_value=0)\n\n# Displaying sample of the grouped data\ncount_bystates.head()","61656f6c":"fig = plt.figure(figsize=(15,10))\nax = fig.add_subplot(111)\ncount_bystates.plot.bar(ax=ax)\n\n#Adding formatting elements to the graph\nax.set_xlabel('State',fontsize=15,color='red')\nax.set_ylabel('Counts',fontsize=15,color='red')\nax.set_title('State-Wise Counts for Accidents for Each Severity',fontdict={'fontsize': 25, 'fontweight' : 'bold', 'verticalalignment': 'center', 'horizontalalignment': 'center'})\nax.legend(['Small Incident (Caused Short Delay)','Severe','Very Severe','Most Severe (Caused Long Delay)'])\nplt.show()\n\n# Figure saved to graphs directory\nfig.savefig('State-WiseCounts.png')","92962227":"weatherdata = data['Weather_Condition'].dropna()\n\n# Displaying sample weather information collected\nweatherdata.head()","5e1dba3c":"def processText(text):\n    try:\n        textlist = text.split('\/')\n        for i in range(len(textlist)):\n            textlist[i]=textlist[i].split(' ')\n            if '' in textlist[i]:\n                textlist[i].remove('')\n            textlist[i] = ''.join(textlist[i])\n        text = '\/'.join(textlist)\n        return text\n    except Exception as e:\n        print(text)\n        print(e)\n        \nweatherdata = weatherdata.apply(processText)\n\n# Showing that the spaces were removed from the Weather Condition Text\n# Displaying changed text values\nweatherdata.head()","778cad26":"weather = weatherdata.groupby(weatherdata).size().reset_index(name='Count').set_index('Weather_Condition').sort_values(by='Count',ascending=False)\ntop_10_conditions = weather.head(n=10)\n\n# Displaying Valses\ntop_10_conditions","add2df2c":"fig = plt.figure(figsize=(15,10))\nax = fig.add_subplot(111)\ntop_10_conditions.plot.bar(ax=ax)\n\nax.set_xlabel('Top Weather Conditions',fontsize=15,color='red')\nax.set_ylabel('Count of Accidents',fontsize=15,color='red')\nax.set_title('Top 10 Weather Conditions in which Most Accidents Occured',fontdict={'fontsize': 25, 'fontweight' : 'bold', 'verticalalignment': 'center', 'horizontalalignment': 'center'})\nax.legend().remove()\nplt.tight_layout()\nplt.show()\n\nfig.savefig('Top10Reasons.png')","d9dfa9cc":"from wordcloud import WordCloud","eb0eeab3":"text = ' '.join(weatherdata.values.tolist())\nwordcloud = WordCloud(background_color=\"white\").generate(text)","019afc10":"fig = plt.figure(figsize=(20,12))\nax = fig.add_subplot(111)\nax.set_title('Wordcloud using all Text Weather Conditions',fontdict={'fontsize': 25, 'fontweight' : 'bold', 'verticalalignment': 'center', 'horizontalalignment': 'center'})\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()\n\nfig.savefig('WordCloudAllText.png')","7a5b0057":"text_with_frequencies = dict(zip(weather.index.values.tolist(),weather.Count.tolist()))\nwordcloud = WordCloud().generate_from_frequencies(text_with_frequencies,max_font_size=68)","0301a595":"fig = plt.figure(figsize=(20,12))\nax = fig.add_subplot(111)\nax.set_title('Wordcloud using Weather Condition Frequencies',fontdict={'fontsize': 25, 'fontweight' : 'bold', 'verticalalignment': 'center', 'horizontalalignment': 'center'})\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()\n\nfig.savefig('WordClouTextFrequencies.png')","72cde22e":"Creating Bar Chart to show the table data","0af19c49":"## WordCloud to show Most Frequent Condition for accidents\nImporting wordcloud library to constrct and plot wordcloud.","445ff3a9":"### Text Frequencies WordCloud\nGrouping Weather Conditions and counts to construct the word cloud using frequencies.","bd116e85":"### All Text WordCloud\nGathering all text as a single string to construct the word cloud.","02a52994":"## Bar graph Showing Counts of Accidents that Occured State-Wise by Severity","b72aff96":"# Accidents based on Weather Conditions\nAnother key piece of information from the dataset is the weather conditions that could have been the reasons for the accident.\n\nExtracting weather data and dropping empty records","796b5b26":"Generating wordcloud with the most frequent appearing in big letters and less frequent in ones small.","62a4404b":"Some of the text in the Weather_Conditions column are seperated by spaces. While processing the text, this could lead to some confusion. So we are going to remove the spaces between the text.","490ae274":"Generating wordcloud text frequecies.","a88cc7fd":"# Bar Graph showing Top 10 Conditions for Accidents\nExtracting Counts for each Weather Condition and then finding the 10 reasons with highest count.","9a68fab9":"# Accident Count By State and Severity\nThe data is now grouped by 'State' and 'Severity'. This grouped data shows number of accidents that occured in each state and for each Severity."}}