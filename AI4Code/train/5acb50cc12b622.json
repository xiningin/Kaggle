{"cell_type":{"be61104c":"code","22ab22c8":"code","8d0d9ad8":"code","a79bf1e1":"code","3f2c9599":"code","b7e37f74":"code","1f02f77b":"code","20ff07bb":"code","c566e2da":"code","84984d49":"code","1e8cb031":"code","bce2d6c4":"code","8a77b84e":"code","94eb7ef7":"code","04e81994":"code","54bffe69":"code","1248958b":"code","1249bb63":"code","c52686d1":"code","6e046936":"code","229fd9ac":"code","839aefda":"code","32aaa388":"code","b0124fe3":"code","77cc61ac":"code","07d25b23":"markdown","d594de79":"markdown","e444e59b":"markdown","8fe0590f":"markdown","b9b437fb":"markdown","aac874f4":"markdown","a2b842c0":"markdown","d540667d":"markdown"},"source":{"be61104c":"import numpy as np\nimport pandas as pd\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import svm\nfrom sklearn.metrics import accuracy_score","22ab22c8":"# loading the diabetes dataset to a pandas DataFrame\ndiabetes_dataset = pd.read_csv('..\/input\/docspot\/datasets_228_482_diabetes.csv') ","8d0d9ad8":"# printing the first 5 rows of the dataset\ndiabetes_dataset.head()","a79bf1e1":"# number of rows and Columns in this dataset\ndiabetes_dataset.shape","3f2c9599":"# getting the statistical measures of the data\ndiabetes_dataset.describe()","b7e37f74":"diabetes_dataset['Outcome'].value_counts()","1f02f77b":"diabetes_dataset.groupby('Outcome').mean()","20ff07bb":"# separating the data and labels\nX = diabetes_dataset.drop(columns = 'Outcome', axis=1)\nY = diabetes_dataset['Outcome']","c566e2da":"print(X)","84984d49":"print(Y)","1e8cb031":"scaler = StandardScaler()","bce2d6c4":"scaler.fit(X)","8a77b84e":"standardized_data = scaler.transform(X)","94eb7ef7":"print(standardized_data)","04e81994":"X = standardized_data\nY = diabetes_dataset['Outcome']","54bffe69":"print(X)\nprint(Y)","1248958b":"X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size = 0.2, stratify=Y, random_state=2)","1249bb63":"print(X.shape, X_train.shape, X_test.shape)","c52686d1":"classifier = svm.SVC(kernel='linear')","6e046936":"#training the support vector Machine Classifier\nclassifier.fit(X_train, Y_train)","229fd9ac":"# accuracy score on the training data\nX_train_prediction = classifier.predict(X_train)\ntraining_data_accuracy = accuracy_score(X_train_prediction, Y_train)","839aefda":"print('Accuracy score of the training data : ', training_data_accuracy)","32aaa388":"# accuracy score on the test data\nX_test_prediction = classifier.predict(X_test)\ntest_data_accuracy = accuracy_score(X_test_prediction, Y_test)","b0124fe3":"print('Accuracy score of the test data : ', test_data_accuracy)","77cc61ac":"input_data = (5,166,72,19,175,25.8,0.587,51)\n\n# changing the input_data to numpy array\ninput_data_as_numpy_array = np.asarray(input_data)\n\n# reshape the array as we are predicting for one instance\ninput_data_reshaped = input_data_as_numpy_array.reshape(1,-1)\n\n# standardize the input data\nstd_data = scaler.transform(input_data_reshaped)\nprint(std_data)\n\nprediction = classifier.predict(std_data)\nprint(prediction)\n\nif (prediction[0] == 0):\n  print('The person is not diabetic')\nelse:\n  print('The person is diabetic')","07d25b23":"**0 --> Non-Diabetic**\n\n**1 --> Diabetic**\n","d594de79":"**Diabetes Prediction**","e444e59b":"**Train Test Split**","8fe0590f":"**Model Evaluation**\n**Accuracy Score**","b9b437fb":"**Making a Predictive System**","aac874f4":"**Training the Model**","a2b842c0":"**Data Collection and Analysis**","d540667d":"**Data Standardization**"}}