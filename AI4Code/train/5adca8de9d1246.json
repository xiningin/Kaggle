{"cell_type":{"4afb3013":"code","accc301e":"code","5229fe1a":"code","0f3200b8":"code","23c3bb52":"code","cf90e645":"code","14c9042b":"code","df07783f":"code","0781388e":"code","36eaa061":"markdown","7bd0902c":"markdown","2bbae320":"markdown","b8be6319":"markdown"},"source":{"4afb3013":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","accc301e":"#import\nimport sys\nimport seaborn as sns\nimport matplotlib.pyplot as plt","5229fe1a":"data = pd.read_csv(\"\/kaggle\/input\/movies\/data-1610484560424.csv\")\ndata.head()","0f3200b8":"#number of unique values per column\ndata.nunique()","23c3bb52":"#number of movies seen per year\nsns.countplot(x=\"year\", data=data)","cf90e645":"#Get rid of '\/' in new columns\ndata.main_actors = data.main_actors.map(lambda p: str(p).strip('\/'))\ndata.nationality = data.nationality.map(lambda p: str(p).strip('\/'))\ndata['director_split'] = data.director.str.split('\/')\ndata['main_actors_split'] = data.main_actors.str.split('\/')\ndata['genre_split'] = data.genre.str.split('\/')\ndata['nationality_split'] = data.nationality.str.split('\/')","14c9042b":"#easier way to use the split_column\ndef get_unique_values_in_split_column(column):\n    tmp = data[column].explode()\n    return tmp.unique()\n\ndef get_specific_value_in_split_column(column, value):\n    #explode the column\n    tmp = data[column].explode()\n    #select list of index where value == 'Drame'\n    tmp = np.where(tmp==value, tmp.index, None)\n    #delete None\n    tmp = tmp[tmp != None].tolist()\n    #use list of index to get only 'Drame' movies\n    return data.loc[tmp]","df07783f":"#print options\nnp.set_printoptions(threshold=sys.maxsize)\n\n#Example of use\narray_of_genre = get_unique_values_in_split_column('genre_split')\nprint(array_of_genre)\n\ndf_chaplin = get_specific_value_in_split_column('main_actors_split', 'Charles Chaplin')\ndisplay(df_chaplin)","0781388e":"#compare the ratings of Chaplin's movies\nif not df_chaplin.empty:\n    fig, ax = plt.subplots(1,3, figsize=(20,4))\n    sns.countplot(x=\"rate\", data=df_chaplin, ax=ax[0])\n    sns.distplot(a=df_chaplin[\"press_rating\"], kde=False, ax=ax[1])\n    sns.kdeplot(data=df_chaplin[\"spectator_rating\"], shade=True, ax=ax[2])","36eaa061":"# Read Data","7bd0902c":"# Preprocessing Data","2bbae320":"# Quick example","b8be6319":"# Quick overview"}}