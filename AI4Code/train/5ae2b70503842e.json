{"cell_type":{"f9030320":"code","49dc9595":"code","47aad8ab":"code","04c84b8d":"code","573af27b":"code","76c1872f":"code","157f3e75":"code","ae40e968":"code","d629696e":"code","539ba881":"code","fc11e2b4":"code","e7fe2fba":"code","3e6cfd17":"code","cfe4af4f":"code","4e1b873f":"code","b6d00dad":"code","86f5484d":"markdown","5af47114":"markdown","d98ecb72":"markdown","7533110a":"markdown","3c070909":"markdown","0344f863":"markdown","20295670":"markdown","87321f40":"markdown","efebefeb":"markdown","064f5a19":"markdown","3e11aadc":"markdown","6a47260e":"markdown"},"source":{"f9030320":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\nimport statsmodels.api as sm","49dc9595":"dataset = pd.read_csv('\/kaggle\/input\/vc-startups\/VC_Startups.csv')\ndataset","47aad8ab":"# Independent variables - R&D Spend, Administration, Marketing Spend and State\nX = dataset.iloc[:,:-1].values\nX","04c84b8d":"# Dependent variable - Profit\ny = dataset.iloc[:,4].values\ny","573af27b":"# Encoding 'State' categorical variable\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\n\nst = ColumnTransformer([(\"State\",OneHotEncoder(), [3])], remainder='passthrough')\nX = st.fit_transform(X)\nX","76c1872f":"# Avoiding the Dummy Variable Trap\n\nX = X[:,1:]\nX","157f3e75":"X.shape","ae40e968":"# For StatsModels regression, we need the additional column as bias\n# y = mx + c implies y = mx + c*1, so we will add an array of ones to X\n\nX = np.append(arr=np.ones((50,1)).astype(int), values=X, axis=1)\nX.shape","d629696e":"X_opt = np.array(X[:,[0,1,2,3,4,5]], dtype=float)\n\nregressor_OLS = sm.OLS(endog=y, exog=X_opt).fit()\nregressor_OLS.summary()","539ba881":"X_opt = np.array(X[:,[0,1,3,4,5]], dtype=float)\n\nregressor_OLS = sm.OLS(endog=y, exog=X_opt).fit()\nregressor_OLS.summary()","fc11e2b4":"X_opt = np.array(X[:,[0,3,4,5]], dtype=float)\n\nregressor_OLS = sm.OLS(endog=y, exog=X_opt).fit()\nregressor_OLS.summary()","e7fe2fba":"X_opt = np.array(X[:,[0,3,5]], dtype=float)\n\nregressor_OLS = sm.OLS(endog=y, exog=X_opt).fit()\nregressor_OLS.summary()","3e6cfd17":"X_opt = np.array(X[:,[0,3]], dtype=float)\n\nregressor_OLS = sm.OLS(endog=y, exog=X_opt).fit()\nregressor_OLS.summary()","cfe4af4f":"X_opt = np.array(X[:,[0,3,5]], dtype=float)\n\nregressor_OLS = sm.OLS(endog=y, exog=X_opt).fit()\nregressor_OLS.summary()","4e1b873f":"# Create new data\nnew_data = pd.DataFrame({'const':1, 'R&D Spend':[50000, 200000, 400000], 'Marketing Spend':[300000, 150000, 75000]})\nnew_data = np.array(new_data)\nnew_data","b6d00dad":"predictions = regressor_OLS.predict(new_data)\npredictions","86f5484d":"# Declare the independent and the dependent variables","5af47114":"# Importing the libraries","d98ecb72":"## Interpreting the above results\npval is the probability. The lower the pval the more the significance of the independent variables.\nx1 and x2 are the Dummy variables for State.\nx3 is R&D Spend, x4 is Admin Spend and x5 is Marketing Spend.\nSince x2 has the highest pval, we will remove it and run the Regression with the rest.","7533110a":"## Interpreting the above results\nx1 which is a Dummy variable for State has highest pval, we will remove it and run the Regression with the rest","3c070909":"## Interpreting the above results\nThis looks ideal when we consider the pval alone but the Adj. R-squared value decreased for the 1st time which means the change in predictors is not improving our model. Hence we will revert to the previous step.","0344f863":"# Import the dataset","20295670":"# Dummy Variables and Encoders","87321f40":"# Make predictions based on the created regression","efebefeb":"# Getting ready for Regression","064f5a19":"## Interpreting the above results\nx2 which is of Administration has the highest pval, we will remove it and run the Regression with the rest","3e11aadc":"## Interpreting the above results","6a47260e":"# Regression with all the variables"}}