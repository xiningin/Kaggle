{"cell_type":{"832dc33f":"code","959ab2ff":"code","c53dc680":"code","0c432b73":"code","0b3cd82e":"code","cee8bd3d":"code","0e366f94":"code","d06c3283":"code","76228da5":"code","fc95b3f4":"code","c93dd129":"code","147b9056":"code","161d8a6d":"markdown","eef44c78":"markdown","92f62b37":"markdown","6df33d03":"markdown"},"source":{"832dc33f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","959ab2ff":"train_data = pd.read_csv('\/kaggle\/input\/digit-recognizer\/train.csv')\ntest_data = pd.read_csv('\/kaggle\/input\/digit-recognizer\/test.csv')","c53dc680":"train_data.describe()","0c432b73":"y=train_data['label']\nX=train_data.copy()\ndel X['label']\nprint(X)\nnp.shape(X)","0b3cd82e":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, stratify=y)","cee8bd3d":"from sklearn.preprocessing import normalize\nX_train_norm=normalize(X_train)\nX_test_norm=normalize(X_test)","0e366f94":"from sklearn.neural_network import MLPClassifier","d06c3283":"clf=MLPClassifier(solver='adam',hidden_layer_sizes=350,alpha=1e-04)","76228da5":"clf.fit(X_train_norm,y_train)","fc95b3f4":"from sklearn.metrics import accuracy_score\n\npreds=clf.predict(X_test_norm)\nprint(accuracy_score(y_test,preds))","c93dd129":"X_pred=test_data","147b9056":"from sklearn.preprocessing import normalize\n\nresult = clf.predict(normalize(X_pred))\n\ndf=pd.DataFrame(result)\ndf.index+=1\nprint(result.shape)\nfilename = 'DigitalPredictions2.csv'\ndf.to_csv(filename,index=True,header=[\"Label\"],index_label=[\"ImageId\"])\nprint('Saved file: ' + filename)","161d8a6d":"# Load data","eef44c78":"# Preparing data by splitting it to y(labels) and X(features)","92f62b37":"# Init MLP","6df33d03":"# Imports\n\n***Using*:**\n* **numpy** for linear algebra\n* **pandas** for data processing\n* **matplotlib** and seaborn for graphics\n* **sklearn** for algorithms\n"}}