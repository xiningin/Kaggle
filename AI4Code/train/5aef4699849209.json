{"cell_type":{"9ab0d797":"code","91b2313f":"code","2bc4ec93":"code","28113e13":"code","3099d8bf":"code","967023b5":"code","580b325d":"code","6e66e64f":"code","3557cf61":"code","222440be":"code","b9f2b7d1":"code","549790dd":"code","f1011dab":"code","850be5e5":"code","fb8e53e3":"code","2fd8895d":"code","7fd081f4":"code","cd442f77":"code","bc2fb3db":"code","a71c7e26":"code","a21b590c":"code","5c518a50":"markdown","9e5810cf":"markdown","36fd1e03":"markdown","c16ff49c":"markdown","6baf0956":"markdown","f7fbcf13":"markdown","4e8fab63":"markdown","a7b304ff":"markdown","b177a432":"markdown","21976896":"markdown","569cb399":"markdown"},"source":{"9ab0d797":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","91b2313f":"import pandas as pd\nmalaria_file_path='..\/input\/malaria-dataset\/estimated_numbers.csv'\nmalaria_data=pd.read_csv(malaria_file_path)\nmalaria_data.columns","2bc4ec93":"df = pd.read_csv('..\/input\/malaria-dataset\/estimated_numbers.csv', index_col=['Country'])","28113e13":"df.head(3)","3099d8bf":"df.iloc[5]","967023b5":"df.loc['India']","580b325d":"df.loc[['Argentina','Brazil','Costa Rica']]","6e66e64f":"df.iloc[[3,12,24]]","3557cf61":"df[:9]","222440be":"df[15:21]","b9f2b7d1":"df['WHO Region'].head(11)","549790dd":"df.who_region.head(11)","f1011dab":"df.columns = [col.replace(' ', '_').lower() for col in df.columns]\nprint(df.columns)","850be5e5":"df[['year', 'who_region']][:7]","fb8e53e3":"df.who_region.iloc[5]","2fd8895d":"df.who_region.iloc[[5]]","7fd081f4":"(df.who_region == 'UT').head(5)","cd442f77":"df[df.who_region == 'UT']","bc2fb3db":"df[(df.year > 2016) | (df.no._of_cases > 10)].head(3)","a71c7e26":"df[df['who_region'].str.split().apply(lambda x: len(x) == 3)].head(3)","a21b590c":"df[df.who_region.isin(['Argentina', 'India', 'Brazil'])].head()","5c518a50":"Didn't understood the output at 32 line","9e5810cf":"Indexing Scalar Values","36fd1e03":"Importing the pandas library here and reading the file path with generation of some of the columns","c16ff49c":"Indexing Multiple Rows","6baf0956":"Indexing single rows","f7fbcf13":"Selecting a subset of the data","4e8fab63":"**DOUBT**\nNot getting the answer.","a7b304ff":"**DOUBT**\nSir why if using iloc, its showing just single data and through loc its showing the data for all years.","b177a432":"Indexing Columns","21976896":"Slicing","569cb399":"Indexing Columns and Rows"}}