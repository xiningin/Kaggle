{"cell_type":{"74c41037":"code","dec664e7":"code","3e423d8e":"code","e74ae38f":"code","07fe51c2":"code","7b835a99":"code","6843af91":"code","ce358534":"code","2d823806":"code","a76a26d0":"code","7e10a83d":"code","23514220":"markdown"},"source":{"74c41037":"from sklearn.linear_model import LogisticRegression as LR\nfrom sklearn.datasets import load_breast_cancer\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score","dec664e7":"data = load_breast_cancer()","3e423d8e":"x = data.data\ny = data.target","e74ae38f":"x.shape #\u67e5\u770b\u8cc7\u6599\u578b\u614b","07fe51c2":"lrl1 = LR(penalty='l1',solver='liblinear',C = 0.5,max_iter = 1000)","7b835a99":"lrl2 = LR(penalty='l2',solver='liblinear',C = 0.5,max_iter = 1000)","6843af91":"#\u4f7f\u7528\u908f\u8f2f\u56de\u6b78\u7684\u91cd\u8981\u5c6c\u6027coef_\u67e5\u770b\u6bcf\u500b\u7279\u5fb5\u6240\u5c0d\u61c9\u7684\u53c3\u6578\nlrl1 = lrl1.fit(x,y)\nlrl1.coef_","ce358534":"(lrl1.coef_!=0).sum(axis = 1)#\u7e3d\u548c\u4e0d\u70ba0\u7684\u4fc2\u6578\u6709\u591a\u5c11\u500b\uff0830\u500b\u4fc2\u6578\u670910\u500b\u7cfb\u6578\u4e0d\u70ba0\uff09","2d823806":"lrl2 = lrl2.fit(x,y)\nlrl2.coef_\n(lrl2.coef_!=0).sum(axis = 1)#\u7e3d\u548c\u4e0d\u70ba0\u7684\u4fc2\u6578\u6709\u591a\u5c11\u500b","a76a26d0":"l1 = []\nl2 = []\nl1test = []\nl2test = []\n#\u76e3\u63a7\u8a13\u7df4\u96c6\u548c\u9810\u6e2c\u7684\u7d50\u679c\u5dee\u7570\nxtrain,xtest,ytrain,ytest = train_test_split(x,y,test_size = 0.3,random_state=420)\n\n#C\u7684\u5b78\u7fd2\u66f2\u7dda\nfor i in np.linspace(0.05,2,19):   #0.05~1\u4e4b\u9593\u53d619\u500b\u6578\u5b57\n    lrl1 = LR(penalty='l1',solver='liblinear',C = i,max_iter = 1000)\n    lrl2 = LR(penalty='l2',solver='liblinear',C = i,max_iter = 1000)\n    lrl1 = lrl1.fit(xtrain,ytrain)\n    l1.append(accuracy_score(lrl1.predict(xtrain),ytrain))\n    l1test.append(accuracy_score(lrl1.predict(xtest),ytest))\n    lrl2 = lrl2.fit(xtrain,ytrain)\n    l2.append(accuracy_score(lrl2.predict(xtrain),ytrain))\n    l2test.append(accuracy_score(lrl2.predict(xtest),ytest))","7e10a83d":"graph = [l1,l2,l1test,l2test]\ncolor = ['green','black','lightgreen','blue']\nlabel = ['L1','L2','L1test','L2test']\n\nplt.figure(figsize=(6,6))\nfor i in range(len(graph)):\n    plt.plot(np.linspace(0.05,2,19)\n             ,graph[i],color[i],label = label[i])\nplt.legend(loc=4)   #loc=\u5716\u4f8b\u4f4d\u7f6e\u5728\u54ea,4\u70ba\u53f3\u4e0b\u89d2\nplt.show() \n#0.8\u4ee5\u5f8c\u6a21\u578b\u5728\u672a\u77e5\u6578\u64da\u96c6\u4e0a\u7684\u8868\u73fe\u958b\u59cb\u4e0b\u8dcc\uff0c\u4f46\u8a13\u7df4\u96c6\u537b\u6301\u7e8c\u5411\u4e0a\uff0c\u6b64\u6642\u51fa\u73fe\u904e\u64ec\u548c\u73fe\u8c61","23514220":"Lr1-->\u5f88\u591a\u7279\u5fb5\u90fd\u8a2d\u7f6e\u62100\nLr2-->\u5247\u662f\u5c0d\u6240\u6709\u7279\u5fb5\u90fd\u51fa\u53c3\u6578\uff08\u52c1\u91cf\u5c0d\u6a21\u578b\u6709\u8ca2\u737b(\u76e1\u91cf\u4e0d\u70ba0)"}}