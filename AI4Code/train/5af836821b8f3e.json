{"cell_type":{"136781a6":"code","16c8b6c6":"code","08a4863e":"code","6894291d":"code","4b6f4c07":"code","4c2165bb":"code","40e6cccf":"code","f9468875":"code","189edd09":"code","65c2d0f1":"code","a46889d4":"code","8d208cc5":"code","5cf3ab62":"code","4e8ed510":"code","5d7f3736":"code","c2ce8fdb":"code","4cdfc04b":"code","e6cd355b":"code","e67413c5":"code","508f3c8f":"code","12463a82":"code","2f4ea00d":"code","fe46f838":"code","6f69c1fa":"code","a15a3dbb":"markdown","12936e38":"markdown","2423bccf":"markdown","6b7ac48f":"markdown","c6553981":"markdown","f61f6d6c":"markdown","00a16686":"markdown","09b86c69":"markdown","e77d821b":"markdown","8665bee9":"markdown","06aa1d0c":"markdown","09385db1":"markdown","ac1d3ab6":"markdown","4fda62ef":"markdown","81f6fc5c":"markdown","74452ac7":"markdown","a74a8f56":"markdown","71d7ddc3":"markdown","8878b659":"markdown","67fbc94c":"markdown","48493311":"markdown","325629d6":"markdown","8ec4441c":"markdown","538db0e7":"markdown","e3a3e72b":"markdown","2f47d376":"markdown","312fae7c":"markdown","b73746db":"markdown","84d58971":"markdown","d501e211":"markdown","1bfd14ff":"markdown","4f3711d2":"markdown","6fef3519":"markdown"},"source":{"136781a6":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns; sns.set()\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport folium\nfrom IPython.display import display\nimport tqdm\nfrom IPython.core.display import HTML\nimport plotly.offline as py\n\nsns.set(rc={'figure.figsize':(11.7,8.27)})\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","16c8b6c6":"Data = pd.read_excel('..\/input\/covid19geographic\/COVID-19-geographic-disbtribution-worldwide-2020-04-08.xlsx')","08a4863e":"display(Data.head(5))\ndisplay(Data.describe())\nprint(\"Number of Country_Region: \", Data['countriesAndTerritories'].nunique())\nprint(\"Dates go from day\", min(Data['dateRep']), \"to day\", max(Data['dateRep']), \", a total of\", Data['dateRep'].nunique(), \"days\")\nprint(\"Number total of Deaths\", Data['deaths'].sum())\nprint(\"Number total of Cases\", Data['cases'].sum())","6894291d":"fig = px.line(pd.melt(Data, id_vars=['dateRep'], value_vars=['cases', 'deaths']).groupby(['dateRep', 'variable']).sum().reset_index(),\n              x='dateRep',  y=\"value\", color = 'variable',\n             title='Daily increase Death \/ Cases',\n             labels={'deaths_cumsum_ByCountry':'COVID 19 Total Deaths',\n                     'variable' : 'Eolution',\n                     'dateRep_usa': 'Date',\n                     'dateRep': 'Date',\n                     'countriesAndTerritories' : 'Country',\n                     'countryterritoryCode': 'Country code',\n                     'value' : 'Count'},)\nfig.update_layout(hovermode=\"x\")\nfig.show()","4b6f4c07":"# sns.lineplot(x=\"dateRep\", y=\"cases\", hue=\"countriesAndTerritories\", data=Data)\n\nfig = px.line(Data, x=\"dateRep\", y=\"cases\", color='countriesAndTerritories', title='Daily increase Cases by Country',\n             labels={'deaths_cumsum_ByCountry':'COVID 19 Total Deaths',\n                     'variable' : 'Eolution',\n                     'dateRep_usa': 'Date',\n                     'dateRep': 'Date',\n                     'countriesAndTerritories' : 'Country',\n                     'countryterritoryCode': 'Country code',\n                     'value' : 'Count'},)\nfig.show()","4c2165bb":"fig = px.line(Data, x=\"dateRep\", y=\"deaths\", color='countriesAndTerritories', title='Daily increase Deaths by Country',\n             labels={'deaths_cumsum_ByCountry':'COVID 19 Total Deaths',\n                     'variable' : 'Eolution',\n                     'dateRep_usa': 'Date',\n                     'dateRep': 'Date',\n                     'countriesAndTerritories' : 'Country',\n                     'countryterritoryCode': 'Country code',\n                     'value' : 'Count'},)\nfig.show()","40e6cccf":"Data.sort_values(by=['dateRep'], inplace = True)\n\nData['total_cases'] = Data['cases'].cumsum()\nData['total_deaths'] = Data['deaths'].cumsum()\n\nData['total_cases_ByCountry'] = Data.groupby(['countriesAndTerritories'])['cases'].cumsum()\nData['total_deaths_ByCountry'] = Data.groupby(['countriesAndTerritories'])['deaths'].cumsum()\n\n\ndisplay(Data.head())\ndisplay(Data.tail())","f9468875":"fig = px.line(pd.melt(Data, id_vars=['dateRep'], value_vars=['total_cases', 'total_deaths']).groupby(['dateRep', 'variable']).max().reset_index(),\n              x='dateRep',  y=\"value\", color = 'variable',\n             title='Cummulated Death \/ Cases',\n              labels={'deaths_cumsum_ByCountry':'COVID 19 Total Deaths',\n                      'cases_cumsum' : 'Cases', \n                      'deaths_cumsum': 'Deaths',\n                     'variable' : 'Eolution',\n                     'dateRep_usa': 'Date',\n                     'dateRep': 'Date',\n                     'countriesAndTerritories' : 'Country',\n                     'countryterritoryCode': 'Country code',\n                     'value' : 'Count'},)\nfig.update_layout(hovermode=\"x\")\nfig.show()","189edd09":"fig = px.line(Data, x=\"dateRep\", y=\"total_cases_ByCountry\", color='countriesAndTerritories', title='Cummulated Cases by Country',\n              labels={'deaths_cumsum_ByCountry':'COVID 19 Total Deaths',\n                      'cases_cumsum' : 'Cases', \n                      'deaths_cumsum': 'Deaths',\n                     'variable' : 'Eolution',\n                     'dateRep_usa': 'Date',\n                     'dateRep': 'Date',\n                     'countriesAndTerritories' : 'Country',\n                     'countryterritoryCode': 'Country code',\n                     'value' : 'Count'},)\nfig.show()","65c2d0f1":"fig = px.line(Data, x=\"dateRep\", y=\"total_deaths_ByCountry\", color='countriesAndTerritories', title='Cummulated Cases by Country',\n              labels={'deaths_cumsum_ByCountry':'COVID 19 Total Deaths',\n                      'cases_cumsum' : 'Cases', \n                      'deaths_cumsum': 'Deaths',\n                     'variable' : 'Eolution',\n                     'dateRep_usa': 'Date',\n                     'dateRep': 'Date',\n                     'countriesAndTerritories' : 'Country',\n                     'countryterritoryCode': 'Country code',\n                     'value' : 'Count'},)\nfig.show()","a46889d4":"Data['total_Cases_log10'] = np.log10(np.where(Data['total_cases']<=0 , 1, Data['total_cases']))\nData['total_Deaths_log10'] = np.log10(np.where(Data['total_deaths']<=0 , 1,Data['total_deaths']))\n\nData['total_Cases_ByCountry_log10'] = np.log10(np.where(Data['total_Cases_log10']<=0 , 1,Data['total_cases_ByCountry']))\nData['total_Death_ByCountry_log10'] = np.log10(np.where(Data['total_Deaths_log10']<=0 , 1,Data['total_deaths_ByCountry']))\n\ndisplay(Data.head())\ndisplay(Data.tail())","8d208cc5":"fig = px.line(pd.melt(Data, id_vars=['dateRep'], value_vars=['total_Cases_log10', 'total_Deaths_log10']).groupby(['dateRep', 'variable']).max().reset_index(),\n              x='dateRep',  y=\"value\", color = 'variable',\n             title='Log Cummulated Death \/ Cases World',\n             labels={'deaths_cumsum_ByCountry':'COVID 19 Total Deaths',\n                      'cases_cumsum' : 'Cases', \n                      'deaths_cumsum': 'Deaths',\n                     'variable' : 'Eolution',\n                     'dateRep_usa': 'Date',\n                     'dateRep': 'Date',\n                     'countriesAndTerritories' : 'Country',\n                     'countryterritoryCode': 'Country code',\n                     'value' : 'Count (Log10)'},)\nfig.update_layout(hovermode=\"x\")\nfig.show()","5cf3ab62":"fig = px.line(Data, x=\"dateRep\", y=\"total_Cases_ByCountry_log10\", color='countriesAndTerritories', title='Log Cummulated Cases by Country',\n             labels={'deaths_cumsum_ByCountry':'COVID 19 Total Deaths',\n                      'cases_cumsum' : 'Cases', \n                      'deaths_cumsum': 'Deaths',\n                     'variable' : 'Eolution',\n                     'dateRep_usa': 'Date',\n                     'dateRep': 'Date',\n                     'countriesAndTerritories' : 'Country',\n                     'countryterritoryCode': 'Country code',\n                     'value' : 'Count (Log10)'},)\nfig.show()","4e8ed510":"fig = px.line(Data, x=\"dateRep\", y=\"total_Death_ByCountry_log10\", color='countriesAndTerritories', title='Log Cummulated Deaths by Country',\n              labels={'deaths_cumsum_ByCountry':'COVID 19 Total Deaths',\n                      'cases_cumsum' : 'Cases', \n                      'deaths_cumsum': 'Deaths',\n                     'variable' : 'Eolution',\n                     'dateRep_usa': 'Date',\n                     'dateRep': 'Date',\n                     'countriesAndTerritories' : 'Country',\n                     'countryterritoryCode': 'Country code',\n                     'value' : 'Count (Log10)'},)\nfig.show()","5d7f3736":"fig = px.pie(Data.groupby(['countriesAndTerritories']).max().reset_index(), values='total_cases_ByCountry', names='countriesAndTerritories', title='Total Cases by Country',\n             labels={'deaths_cumsum_ByCountry':'COVID 19 Total Deaths',\n                      'cases_cumsum' : 'Cases', \n                      'deaths_cumsum': 'Deaths',\n                     'variable' : 'Eolution',\n                     'dateRep_usa': 'Date',\n                     'dateRep': 'Date',\n                     'countriesAndTerritories' : 'Country',\n                     'countryterritoryCode': 'Country code',\n                     'value' : 'Count (Log10)'},)\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","c2ce8fdb":"fig = px.pie(Data.groupby(['countriesAndTerritories']).max().reset_index(), values='total_deaths_ByCountry', names='countriesAndTerritories', title='Total Deaths by Country',\n            labels={'deaths_cumsum_ByCountry':'COVID 19 Total Deaths',\n                      'cases_cumsum' : 'Cases', \n                      'deaths_cumsum': 'Deaths',\n                     'variable' : 'Eolution',\n                     'dateRep_usa': 'Date',\n                     'dateRep': 'Date',\n                     'countriesAndTerritories' : 'Country',\n                     'countryterritoryCode': 'Country code',\n                     'value' : 'Count (Log10)'},)\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","4cdfc04b":"country_geo = '..\/input\/worldcountries\/world-countries'\n\nm = folium.Map(location=[40, 40], zoom_start=2)\n\nfolium.Choropleth(\n    geo_data=country_geo,\n    name='choropleth',\n    data=Data.groupby(['countryterritoryCode']).max().reset_index(),\n    columns=['countryterritoryCode', 'total_cases_ByCountry'],\n    key_on='feature.id',\n    fill_color='YlOrRd',\n#     fill_opacity=0.7,\n#     line_opacity=0.2,\n    popup='cases_cumsum_ByCountry',\n    nan_fill_color='white',\n    legend_name='COVID 19 Total Cases'\n).add_to(m)\n\nfolium.LayerControl().add_to(m)\n\ndisplay(m)","e6cd355b":"m = folium.Map(location=[40, 40], zoom_start=2)\n\nfolium.Choropleth(\n    geo_data=country_geo,\n    name='choropleth',\n    data=Data.groupby(['countryterritoryCode']).max().reset_index(),\n    columns=['countryterritoryCode', 'total_deaths_ByCountry'],\n    key_on='feature.id',\n    fill_color='YlOrRd',\n#     fill_opacity=0.7,\n#     line_opacity=0.2,\n    nan_fill_color='white',\n    legend_name='COVID 19 Total Deaths'\n).add_to(m)\n\nfolium.LayerControl().add_to(m)\n\ndisplay(m)","e67413c5":"def reindex_by_date(df):\n    dates = pd.date_range(df.index.min(), df.index.max())\n    return df.reindex(dates).bfill()\n\nappended_data = []\n\nfor i in Data['countryterritoryCode'].unique():\n    tmp = Data[Data['countryterritoryCode'] == i].groupby(['dateRep']).max().apply(reindex_by_date).reset_index().copy()\n    appended_data.append(tmp)\n\nData_new = pd.concat(appended_data)\nData_new['dateRep_usa'] = Data_new['index'].dt.strftime('%m\/%d\/%Y')","508f3c8f":"x = Data_new.groupby(['dateRep_usa', 'countryterritoryCode']).max().reset_index()['dateRep_usa'].max()\n\nfig = px.scatter(Data_new.groupby(['dateRep_usa', 'countryterritoryCode']).max().reset_index()[\n                (Data_new.groupby(['dateRep_usa', 'countryterritoryCode']).max().reset_index()['total_cases_ByCountry'] > 0)&\n                (Data_new.groupby(['dateRep_usa', 'countryterritoryCode']).max().reset_index()['index'] == Data_new['index'].max())], \n                 x='total_cases_ByCountry', y='total_deaths_ByCountry', color='countryterritoryCode', size='total_Cases_ByCountry_log10', height=700,\n                 text='countriesAndTerritories', log_x=True, log_y=True, title='Deaths vs Cases (Scale is in log10)',\n                 labels={'cases_cumsum_ByCountry':'COVID 19 Total Cases',\n                                  'dateRep_usa': 'Date',\n                                  'countriesAndTerritories' : 'Country',\n                                  'countryterritoryCode': 'Country code'},\n                )\nfig.update_traces(textposition='top center')\nfig.update_layout(showlegend=False)\nfig.update_layout(xaxis_rangeslider_visible=True)\nfig.show()","12463a82":"data_tmp1 = Data_new.groupby(['dateRep_usa', 'countryterritoryCode']).max().reset_index()[Data_new.groupby(['dateRep_usa', 'countryterritoryCode']).max().reset_index()['total_cases_ByCountry'] > 0].sort_values(by=['dateRep_usa'])\ndata_tmp2 = Data_new.groupby(['dateRep_usa', 'countryterritoryCode']).max().reset_index()[Data_new.groupby(['dateRep_usa', 'countryterritoryCode']).max().reset_index()['total_deaths_ByCountry'] > 0].sort_values(by=['dateRep_usa'])\ndata_tmp1['countriesAndTerritories2'] = data_tmp1['countriesAndTerritories'].str.replace('_', ' ')\ndata_tmp2['countriesAndTerritories2'] = data_tmp2['countriesAndTerritories'].str.replace('_', ' ')\n\n\nmax1 = Data.groupby(['countryterritoryCode', 'dateRep']).max().reset_index()['total_cases_ByCountry'].max()\nmax2 = Data.groupby(['countryterritoryCode', 'dateRep']).max().reset_index()['total_deaths_ByCountry'].max()","2f4ea00d":"fig = px.choropleth(data_tmp1, locations=\"countriesAndTerritories2\", locationmode='country names', \n                     color=\"total_cases_ByCountry\", \n                     hover_name=\"countriesAndTerritories2\",\n                     hover_data = ['countriesAndTerritories','dateRep_usa'],\n                     projection=\"mercator\",\n                     animation_frame=\"dateRep_usa\",\n                     color_continuous_scale='Sunsetdark',\n                     range_color=[0,max1],\n                     labels={'total_cases_ByCountry':'COVID 19 Total Cases',\n                          'dateRep_usa': 'Date',\n                          'countriesAndTerritories' : 'Country',\n                          'countryterritoryCode': 'Country code'},\n                     title='Evolution of Cases Worldwide',\n                   width=1500, height=700,)\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.update(layout_coloraxis_showscale=True)\npy.offline.iplot(fig)","fe46f838":"fig = px.choropleth(data_tmp2, locations=\"countriesAndTerritories2\", locationmode='country names', \n                     color=\"total_deaths_ByCountry\", \n                     hover_name=\"countriesAndTerritories2\",\n                     hover_data = ['countriesAndTerritories','dateRep_usa'],\n                     projection=\"mercator\",\n                     animation_frame=\"dateRep_usa\",\n                     color_continuous_scale='Sunsetdark',\n                     range_color=[0,max2],\n                     labels={'total_cases_ByCountry':'COVID 19 Total Cases',\n                          'dateRep_usa': 'Date',\n                          'countriesAndTerritories' : 'Country',\n                          'countryterritoryCode': 'Country code'},\n                     title='Evolution of deaths worldwide',\n                   width=1500, height=700,)\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.update(layout_coloraxis_showscale=True)\npy.offline.iplot(fig)","6f69c1fa":"HTML('''<div class=\"flourish-embed flourish-bar-chart-race\" data-src=\"visualisation\/1571387\"><script src=\"https:\/\/public.flourish.studio\/resources\/embed.js\"><\/script><\/div>''')","a15a3dbb":"## expanding Cases for each Country","12936e38":"## expanding Deaths for each Country","2423bccf":"# Data Preprocess","6b7ac48f":"## Current deaths around the world","c6553981":"# Log10 Expansion of Cases \/ Deaths","f61f6d6c":"![pic2.jpg](attachment:pic2.jpg)","00a16686":"# Expansion of Cases \/ Deaths","09b86c69":"## Log10 Global Expansion of Cases \/ Deaths","e77d821b":"## Deaths \/ cases ratio for each country","8665bee9":"# Dataset","06aa1d0c":"I realized this EDA while being inspired by the 2 notebooks:\n\nhttps:\/\/www.kaggle.com\/imdevskp\/covid-19-analysis-visualization-comparisons\n\nhttps:\/\/www.kaggle.com\/vanshjatana\/analysis-and-prediction-on-coronavirus-italy\n\nwhich proposes a method of in-depth analysis of the evolution of the virus.\n\nI downloaded the data from the site:\n\nhttps:\/\/www.ecdc.europa.eu\/en\/publications-data\/download-todays-data-geographic-distribution-covid-19-cases-worldwide\n\nwhich updates the evolution of the epidemic every day in all the countries of the world","09385db1":"# Current deaths \/ cases around the world","ac1d3ab6":"# increased Cases \/ Deaths","4fda62ef":"## Global increase Cases \/ Deaths","81f6fc5c":"## Log10 Expanding Death for each Country","74452ac7":"## Evolution of deaths worldwide","a74a8f56":"# Total Cases \/ Deaths for each Country","71d7ddc3":"## Total Cases for each Country","8878b659":"## Increased Cases for each Country","67fbc94c":"## Total Deaths for each Country","48493311":"https:\/\/app.flourish.studio\/visualisation\/1571387\/edit","325629d6":"<h1 style=\"color:red;\"> ================= UPVOTE IF YOU ENJOY IT =) =================<\/h1> <br \/> <br \/>\n\n\n","8ec4441c":"I applied Log10 on the expenssion to reduce the significant differences in deaths and cases between the most affected and least affected countries.\n\nThis reduction will serve to better perceive the evolution of cases and deaths and to be able to find a possible relationship between them.","538db0e7":"## Log10 Expanding Cases for each Country","e3a3e72b":"# Data Preprocess","2f47d376":"# library","312fae7c":"## Global Expansion of Cases \/ Deaths","b73746db":"## Evolution of Cases Worldwide","84d58971":"## Increased Deaths for each Country","d501e211":"## Current cases around the world","1bfd14ff":"# Covid 19 Death \/ Confirmed EDA","4f3711d2":"# Evolution of Deaths \/ Cases worldwide","6fef3519":"# Data Preprocess"}}