{"cell_type":{"48fc1aec":"code","fc76c660":"code","88b01985":"code","43667578":"code","a71aafc3":"code","8f2dfa3b":"code","db0ebbf5":"code","6d1fd3fb":"code","eaa145b4":"code","43a789ec":"code","124900de":"code","5f2d4ff2":"code","21efbe2c":"code","76ad5a51":"code","9a9742d7":"code","545bd0cc":"code","08413e94":"code","d0802ba0":"code","ad3da7bf":"code","13189aff":"code","19109df6":"code","10764ada":"code","d5d78f90":"code","640fbc3d":"code","4354badb":"code","ebe40f92":"code","192d413f":"code","236d3825":"code","ef3cd6f4":"code","fbe400b9":"code","1786ebf6":"code","14fbd8a4":"code","87fb9259":"code","bd6822f8":"code","fc742048":"code","b30344db":"code","adc68248":"code","948118b7":"code","817a9e95":"code","12151b9e":"code","6a42b1f1":"code","342f070d":"code","1b149cd5":"code","c7bb5365":"code","9ebc228c":"markdown","8d8edf9b":"markdown","043a1b58":"markdown","d16fc3c6":"markdown","40b2d0d2":"markdown","3b662f77":"markdown","988e420d":"markdown","de807b39":"markdown","54568f7e":"markdown","ee315384":"markdown","e508f3d1":"markdown","913d380b":"markdown"},"source":{"48fc1aec":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport sklearn as s\n\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n\nimport math","fc76c660":"dfw = pd.read_csv(\"..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv\" ,sep=',',engine='python')\ndfw.head()","88b01985":"dfw.describe(include=\"all\")","43667578":"plt.figure(figsize =(12, 8))\nsns.countplot(\"quality\", data=dfw )","a71aafc3":"plt.figure()\ndfw.hist(rwidth=0.9)\nplt.tight_layout()","8f2dfa3b":"dfw.info()\n","db0ebbf5":"plt.subplots(figsize=(16,16))\nsns.heatmap(dfw.corr(), annot=True)","6d1fd3fb":"sns.pairplot(dfw)","eaa145b4":"X = dfw.drop('quality',axis=1)\ny = dfw['quality']","43a789ec":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test= train_test_split(X,y,test_size=0.2,random_state=30)","124900de":"from sklearn.linear_model import LinearRegression","5f2d4ff2":"lr = LinearRegression().fit(X_train,y_train)","21efbe2c":"lr.coef_","76ad5a51":"coeff = pd.DataFrame(lr.coef_, X_train.columns, columns=['Coefficient'])\ncoeff","9a9742d7":"print('Pendiente:', lr.coef_)\nprint('T\u00e9rmino independiente :',lr.intercept_)","545bd0cc":"predic = lr.predict(X_test)","08413e94":"predic","d0802ba0":"dfp = pd.DataFrame({'Actual':y_test,'Predictions':predic})\ndfp['Predictions']= round(dfp['Predictions'],2)\ndfp","ad3da7bf":"from sklearn.metrics import mean_squared_error, r2_score","13189aff":"print('Mean squared error: %.2f'\n      % mean_squared_error(y_test, predic))","19109df6":"print('R squared: ',lr.score(X_train, y_train))","10764ada":"def convert_quali (quality):\n    if quality <= 5:\n        return 0\n    else:\n        return 1","d5d78f90":"dfw[\"quality_bin\"] = dfw[\"quality\"].apply(convert_quali)","640fbc3d":"dfw.head()","4354badb":"dfw.dtypes","ebe40f92":"Xlr = dfw.drop([\"quality\" ,\"quality_bin\"] , axis=1)\nylr = dfw['quality_bin']\n","192d413f":"Xlr.head()","236d3825":"ylr.head()","ef3cd6f4":"Xlr_train,Xlr_test,ylr_train,ylr_test= train_test_split(Xlr,ylr,test_size=0.2,random_state=30)","fbe400b9":"from sklearn.linear_model import LogisticRegression\n\nLR = LogisticRegression(max_iter=1000) \nLR.fit(Xlr_train,ylr_train) \nylr_prediccion = LR.predict(Xlr_test)","1786ebf6":"import seaborn as sns; sns.set()\nfrom sklearn.metrics import confusion_matrix\nmat = confusion_matrix(ylr_test, ylr_prediccion)\nsns.heatmap(mat.T, square=True, annot=True, fmt='d', cbar=False)\nplt.xlabel('Clase de test')\nplt.ylabel('Clase de la predicci\u00f3n');","14fbd8a4":"from sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report\n\naccu_score = accuracy_score(ylr_test, ylr_prediccion)\nprint (classification_report(ylr_test, ylr_prediccion))","87fb9259":"from sklearn.metrics import roc_curve\nfrom sklearn.metrics import roc_auc_score\nprobas = LR.predict_proba(Xlr_test)\nfpr, tpr, thresholds = roc_curve(ylr_test, probas[:, 1])\n\nplt.plot([0,1],[0,1],'k--') \nplt.plot(fpr, tpr, label='NB') \nplt.xlabel('fpr')\nplt.ylabel('tpr')\nplt.title('Curva ROC')\nplt.show()\n\nprint(roc_auc_score(ylr_test, probas[:, 1]))","bd6822f8":"print('R squared: ',LR.score(Xlr_train,ylr_train))","fc742048":"print('Mean squared error: %.2f'\n      % mean_squared_error(ylr_test, ylr_prediccion))","b30344db":"from sklearn.neighbors import KNeighborsClassifier\nneigh = KNeighborsClassifier()","adc68248":"from sklearn.model_selection import GridSearchCV\n\n# For checking Model Performance\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.model_selection import learning_curve\n\nimport warnings\nwarnings.simplefilter(action=\"ignore\")\n\nfrom sklearn.model_selection import StratifiedKFold","948118b7":"cv_method = StratifiedKFold(n_splits=3)\nparam={'n_neighbors':(1,3,5,7),'weights': ('uniform','distance'),'metric':('euclidean','manhattan','chebyshev','minkowski','wminkowski','seuclidean','mahalanobis'),'p' :(1,2)}\nclf = GridSearchCV(neigh, param,cv=cv_method,scoring=\"accuracy\")\nclf.fit(Xlr_train,ylr_train)","817a9e95":"clf.best_params_","12151b9e":"knn = KNeighborsClassifier(n_neighbors= 7, p= 1, weights='distance',metric= \"manhattan\")\nknn.fit(Xlr_train,ylr_train)\npredic= knn.predict(Xlr_test)\nmatrix = confusion_matrix(ylr_test,predic)\nsns.heatmap(matrix.T, square=True, annot=True, fmt='d', cbar=False)\nplt.xlabel('Clase de test')\nplt.ylabel('Clase de la predicci\u00f3n');","6a42b1f1":"accu_score = accuracy_score(ylr_test, predic)\nprint (classification_report(ylr_test, predic))","342f070d":"knn.score(Xlr_test,ylr_test)","1b149cd5":"print('Mean squared error: %.2f'\n      % mean_squared_error(ylr_test, predic))","c7bb5365":"print('R squared: ',knn.score(Xlr_test,ylr_test))","9ebc228c":"Bueno = 1\nMalo = 0","8d8edf9b":"- Accuracy   0.76 \n- R squared:  0.745113369820172\n- Mean squared error: 0.24","043a1b58":"## Linear Regression\n- R squared: 0.3532840109858999\n- Mean squared error: 0.41\n\n## Logistic Regression\n- Accuracy   0.76 \n- R squared:  0.745113369820172\n- Mean squared error: 0.24\n\n\n## K-NN\n- R squared:  0.740625\n- Accuracy   0.74\n- Mean squared error: 0.26\n\n","d16fc3c6":"- R squared:  0.740625","40b2d0d2":"# Parte3","3b662f77":"# Logistic Regression","988e420d":"# K-NN","de807b39":"# Parte 2","54568f7e":"Aca se pueden ver las correlaciones entre las variables en forma de grafica.","ee315384":"# - R squared:  0.3532840109858999\n# - Mean squared error: 0.41","e508f3d1":"# Parte 1","913d380b":"Podemos ver que hay una gran diferencia entre los modelos de Logistic Regression y K-nn  en compraracion a la regresion lineal. Donde estos dos modelos predicen mucho mejor al modelo de regression lineal, donde se puede ver que los r2 son mas del doble. Sinembarogo esto se puede deber a que la regresion lineal a diferencia del resto de los modelos busca predecir el valor exacto de la calidad del vino mientras los otros si son buenos o malos"}}