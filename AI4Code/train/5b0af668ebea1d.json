{"cell_type":{"4aeea557":"code","13fd8d47":"code","f4635a31":"code","eb968ac8":"code","e85d07d6":"code","181b41ae":"code","a32968d0":"code","1f5a94aa":"code","ee8311a2":"code","ffa05d04":"code","9a3eaacd":"code","03eb556c":"code","7e00f98d":"code","ae1e98fe":"markdown","e1718fc0":"markdown","62bb3d81":"markdown","fe35ca5d":"markdown","b50cced5":"markdown","575ca7be":"markdown","70dc6dd3":"markdown","5e15c65b":"markdown","b06dd036":"markdown"},"source":{"4aeea557":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport difflib\npd.set_option('display.max_columns', 500)\nimport seaborn as sn\nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\nfrom sklearn import preprocessing\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","13fd8d47":"df_2015 = pd.read_csv(\"..\/input\/world-happiness-report\/2015.csv\")\ndf_2016 = pd.read_csv(\"..\/input\/world-happiness-report\/2016.csv\")\ndf_2017 = pd.read_csv(\"..\/input\/world-happiness-report\/2017.csv\")\ndf_2018 = pd.read_csv(\"..\/input\/world-happiness-report\/2018.csv\")\ndf_2019 = pd.read_csv(\"..\/input\/world-happiness-report\/2019.csv\")\ndf_2020 = pd.read_csv(\"..\/input\/world-happiness-report\/2020.csv\")","f4635a31":"df_2020.info()","eb968ac8":"df_2020.head(5)","e85d07d6":"df_2020.tail(5)","181b41ae":"corrMatrix = df_2020.corr()\nfig, ax = plt.subplots(figsize=(12,12))\nsn.heatmap(corrMatrix.round(2), annot=True)\nplt.title(\"Correlation Map\")\nplt.show()","a32968d0":"fig = go.Figure(data = [go.Scatter(\n    x = df_2020[\"Logged GDP per capita\"],\n    y = df_2020[\"Ladder score\"], mode = 'markers',\n    text = list(df_2020[\"Country name\"]),\n    marker_size = df_2020[\"Ladder score\"]*2,\n    marker = dict(\n            color=\"green\",\n            opacity=[0.9]\n    )\n)])\nfig.update_layout(\n    title='GDP & Happiness Comparison',\n    xaxis=dict(\n        title='GDP',\n        gridcolor='white',\n        gridwidth=1,\n    ),\n    yaxis=dict(\n        title='Ladder Score',\n        gridcolor='white',\n        gridwidth=1,\n    )\n)\n\nfig.show()\n","1f5a94aa":"fig = plt.figure()\nfig, ax = plt.subplots(figsize=(12,8))\ncountries = df_2020.iloc[0:10,0]\nscore = df_2020.iloc[0:10,2]\nplt.bar(countries,score, color=(0, 0.5, 0.7, 0.9), edgecolor= 'cyan')\nplt.xlabel(\"Countries\")\nplt.ylabel(\"Overall Score\")\nplt.title(\"Top 10 Countries by Overall Score\")\nplt.ylim(7,7.85)\n\nplt.show()","ee8311a2":"print(\"2015 Freedom Score: {}\".format(round(df_2015[\"Freedom\"].mean(),2)))\nprint(\"2016 Freedom Score: {}\".format(round(df_2016[\"Freedom\"].mean(),2)))\nprint(\"2017 Freedom Score: {}\".format(round(df_2017[\"Freedom\"].mean(),2)))\nprint(\"2018 Freedom Score: {}\".format(round(df_2018[\"Freedom to make life choices\"].mean(),2)))\nprint(\"2019 Freedom Score: {}\".format(round(df_2019[\"Freedom to make life choices\"].mean(),2)))\nprint(\"2020 Freedom Score: {}\".format(round(df_2020[\"Freedom to make life choices\"].mean(),2)))","ffa05d04":"y_axis = [\"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\"]\nx_axis = [round(df_2015[\"Freedom\"].mean(),2), round(df_2016[\"Freedom\"].mean(),2), round(df_2017[\"Freedom\"].mean(),2),round(df_2018[\"Freedom to make life choices\"].mean(),2), \n          round(df_2019[\"Freedom to make life choices\"].mean(),2), round(df_2020[\"Freedom to make life choices\"].mean(),2)]\nfig = plt.figure()\nfig, ax = plt.subplots(figsize=(12,8))\nplt.barh(y_axis, x_axis, align='center', color = 'r', alpha = 0.7)\nplt.xlabel(\"Freedom Score\")\nplt.ylabel(\"Years\")\nplt.title(\"Average Freedom Score by Years\")\nplt.show()\n","9a3eaacd":"last10_countryname = df_2020[\"Country name\"].iloc[-10:]\nlast10_countryscore = df_2020[\"Ladder score\"].iloc[-10:]\nfig1, ax1 = plt.subplots(figsize=(12,8))\nax1.pie(last10_countryscore, explode = (0,0,0,0,0,0,0,0,0,0.1), labels=last10_countryname, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.title(\"The score comparison of last 10 countries\")\nplt.show()","03eb556c":"values = df_2020.iloc[0:20,8]\nfig2, ax2 = plt.subplots(figsize=(20,8))\nplt.xlabel(\"Country Name\")\nplt.ylabel(\"Healty Life Score\")\nplt.plot(df_2020.iloc[0:20,0], values, color = 'r')\nplt.xticks(df_2020.iloc[0:20,0], rotation='vertical')\nplt.title(\"Healty Life Expectancy of top20 Countries\")\nplt.show()","7e00f98d":"\nplt.figure(figsize=(30,8))\nplt.plot(df_2020[\"Ladder score\"], marker='o', markerfacecolor='black', markersize=12, color='skyblue', linewidth=4, label=\"Ladder Score\")\nplt.plot(df_2020[\"Logged GDP per capita\"], marker='', color='magenta', linewidth=2, linestyle='dashed', label=\"GDP per Capita\")\nplt.xlabel(\"Country ID\")\nplt.ylabel(\"GDP per Capita\")\nplt.title(\"Ladder Score - GDP per Capita Line Plot\")\nplt.legend()\n","ae1e98fe":"<a id=\"Line-Plot\"><\/a>\n# 7. Line Plot","e1718fc0":"<a id=\"Bubble-Chart\"><\/a>\n# 3. Bubble Chart","62bb3d81":"<a id=\"Pie-Chart\"><\/a>\n# 6. Pie Chart","fe35ca5d":"<a id=\"Correlation-Map\"><\/a>\n# 2. Correlation Map","b50cced5":"<a id=\"Data-Import-&-Check\"><\/a>\n# 1. Data Import & Check","575ca7be":"<a id=\"Horizontal-Bar-Plot\"><\/a>\n# 5. Horizontal Bar Plot","70dc6dd3":"![smiley-2979107_1920.jpg](attachment:smiley-2979107_1920.jpg)","5e15c65b":"# Contents\n1. [Data Import & Check](#Data-Import-&-Check)\n2. [Correlation Map](#Correlation-Map)\n3. [Bubble Chart](#Bubble-Chart)\n4. [Vertical Bar Plot](#Vertical-Bar-Plot)\n5. [Horizontal Bar Plot](#Horizontal-Bar-Plot)\n6. [Pie Chart](#Pie-Chart)\n7. [Line Plot](#Line-Plot)\n\n\n#### I hope you like the kernel. Please share your suggestions :)","b06dd036":"<a id=\"Vertical-Bar-Plot\"><\/a>\n# 4. Vertical Bar Plot"}}