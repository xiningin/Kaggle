{"cell_type":{"6384d0c2":"code","d3be5067":"code","56361786":"code","4939fb2a":"code","3506f658":"code","3a4cedc3":"code","8e1dfc29":"code","e49a2c77":"code","eb53bb32":"code","0dd5c0c4":"code","391a506e":"code","ec98c540":"code","d7f378d0":"code","066fb4d5":"code","d7551103":"code","1c51a9b1":"code","d2d56f25":"code","c83a525c":"code","6a2bec72":"code","f44db380":"code","abe17375":"code","14da872f":"code","2b60958a":"code","180e0a24":"code","d4a1a57e":"code","a5e5f3ae":"code","6e148aad":"markdown","553c1e5c":"markdown","7c3c6c74":"markdown"},"source":{"6384d0c2":"import datetime as dt\nimport pandas as pd\nimport pandas_datareader as pdr\nimport numpy as np\nimport datetime \n\nimport matplotlib.pyplot as plt\nfrom matplotlib import style\n\n%matplotlib inline","d3be5067":"#Enter the start date of stock analysis\ndate_entry = input('Enter a start date in YYYY-MM-DD format: ')\nyear, month, day = map(int, date_entry.split('-'))\nstart = datetime.date(year, month, day)\n\n#Enter the end date of stock analysis\ndate_entry = input('Enter an end date in YYYY-MM-DD format: ')\nyear, month, day = map(int, date_entry.split('-'))\nend = datetime.date(year, month, day)","56361786":"## Import stockA data from Yahoo finance\nTSLA=pdr.DataReader('TSLA', 'yahoo', start, end)\nTSLA.head()","4939fb2a":"TSLA_=TSLA[['Adj Close']]\nTSLA_","3506f658":"TSLA_.index\nTSLA_.columns\n\nTSLA_.rename(columns = {\"Adj Close\": \"Adj_Close\"}, inplace= True)\nTSLA_","3a4cedc3":"## Import stockB data from Yahoo Finance\nGOOG=pdr.DataReader('GOOG', 'yahoo', start, end)\nGOOG.head()","8e1dfc29":"GOOG_=GOOG[['Adj Close']]\nGOOG_","e49a2c77":"GOOG_.index\nGOOG_.columns\nGOOG_.rename(columns = {\"Adj Close\": \"Adj_Close\"}, inplace= True)\nGOOG_.head()","eb53bb32":"#Calculate exponential weighted moving average and moving average\n\ndef trend_analysis (df):\n  df['Weighted_Moving_Average']=df['Adj_Close'].ewm(span=50,adjust=False).mean()\n  df['Moving_Average']=df['Adj_Close'].rolling(window=1).mean()\n\n  return df","0dd5c0c4":"trend_analysis(TSLA_)","391a506e":"## Plot WMA and MA for TSLA\n\nplt.style.use('ggplot')\nplt.figure(figsize = (12,6))\n\n\nplt.plot(TSLA_['Weighted_Moving_Average'], label='WeightedMovingAverage',linestyle='--', linewidth = 2)\nplt.plot(TSLA_['Moving_Average'], label='Moving Average',linestyle='-', linewidth = 2)\n\nplt.xlabel('Date')\nplt.ylabel('Adjusted closing price ($)')\nplt.title('TESLA Trend Analysis')\nplt.legend()\nplt.show()","ec98c540":"TSLA_.describe()","d7f378d0":"trend_analysis(GOOG_)","066fb4d5":"## Plot WMA and MA for Google\n\nplt.style.use('ggplot')\nplt.figure(figsize = (12,6))\n\n\nplt.plot(GOOG_['Weighted_Moving_Average'], label='Weighted Moving Average',linestyle='--', linewidth = 2)\nplt.plot(GOOG_['Moving_Average'], label='Moving Average',linestyle='-', linewidth = 2)\n\nplt.xlabel('Date')\nplt.ylabel('Adjusted closing price ($)')\nplt.title('GOOGLE Trend Analysis')\nplt.legend()\nplt.show()","d7551103":"GOOG_.describe()","1c51a9b1":"#Create a function that compares the standard deviation and returns which stock has a higher risk\n\ndef risk_analysis(df1, df2):\n    std_SymbolA= df1.Adj_Close.std()\n    std_SymbolB= df2.Adj_Close.std()\n    \n    if std_SymbolA > std_SymbolB:\n        print (\"Stock A is riskier than Stock B!\")\n    else:\n        print (\"Stock B is riskier than Stock A!\")","d2d56f25":"# StockA=TSLA, StockB=GOOG\n\nrisk_analysis(TSLA_, GOOG_)","c83a525c":"#Create a function that calculates daily return of stock\ndef daily_return_analysis(df):\n    df[\"Daily_Returns\"]=df[\"Adj_Close\"].pct_change()\n    \n    return df","6a2bec72":"daily_return_analysis(TSLA_)","f44db380":"daily_return_analysis(GOOG_)","abe17375":"## Create a function which plots Daily Returns of stocks on the same graph\ndef plot_daily_returns(df1,df2):\n    plt.style.use('ggplot')\n    plt.figure(figsize = (12,6))\n\n    plt.plot(df1['Daily_Returns'], label='Daily Returns TSLA',linestyle='--', linewidth = 2, color= 'r')\n    plt.plot(df2['Daily_Returns'], label='Daily Returns GOOG',linestyle='-', linewidth = 2, color = 'b')\n\n    plt.xlabel('Date')\n    plt.ylabel('Daily Returns ($)')\n    plt.title('Daily Return Analysis')\n    plt.legend()\n    plt.show()","14da872f":"plot_daily_returns(TSLA_, GOOG_)","2b60958a":"#monthly return of stock\nTSLA_Monthly_Returns=TSLA_['Adj_Close'].resample('M').ffill().pct_change()[1:]\nTSLA_Monthly_Returns","180e0a24":"#monthly return of stock\nGOOG_Monthly_Returns=GOOG_['Adj_Close'].resample('M').ffill().pct_change()[1:]\nGOOG_Monthly_Returns","d4a1a57e":"## Create a function which plots Monthly Returns of stocks on the same graph\ndef plot_monthly_returns(df1,df2):\n    plt.style.use('ggplot')\n    plt.figure(figsize = (12,6))\n\n    plt.plot(df1[\"Adj_Close\"].resample('M').ffill().pct_change()[1:],label='Monthly Returns TSLA',linestyle='--', linewidth = 2, color= 'r')\n    plt.plot(df2[\"Adj_Close\"].resample('M').ffill().pct_change()[1:],label='Monthly Returns GOOG',linestyle='-', linewidth = 2, color= 'b')\n\n    plt.xlabel('Date')\n    plt.ylabel('Monthly Returns ($)')\n    plt.title('Monthly Return Analysis')\n    plt.legend()\n    plt.show()","a5e5f3ae":"plot_monthly_returns(TSLA_, GOOG_)","6e148aad":"# 2. Risk Analysis\n#### How risky is my stock?","553c1e5c":"# 1. TREND ANALYSIS\n#### How is my stocks trend? Upward or downward trend?","7c3c6c74":"# Return Analysis\n\n#### Daily and monthly returns of stocks"}}