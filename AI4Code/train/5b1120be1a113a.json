{"cell_type":{"9ad041f4":"code","2a4f6a05":"code","b9483be9":"code","9e92c032":"code","810d2fa8":"code","e87b6796":"code","1091fe50":"code","4e1f7edb":"code","7cf04ecb":"code","4fac3ffd":"code","129bc3d3":"code","3a315457":"code","e44c6a0b":"code","d15a177a":"code","e9c1808b":"code","97c643f0":"code","d2e0a4e3":"code","a09b2784":"code","48ca056c":"code","6bdf93c3":"code","c567dd1e":"code","dadbcfb7":"code","75341d3e":"code","59aa018e":"markdown","76b9c833":"markdown","7a7fd3a6":"markdown","1665a454":"markdown","64d71c41":"markdown"},"source":{"9ad041f4":"import numpy as np\nimport pandas as pd\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns ","2a4f6a05":"train = pd.read_csv(\"..\/input\/ventilator-pressure-prediction\/train.csv\")\ntest = pd.read_csv(\"..\/input\/ventilator-pressure-prediction\/test.csv\")\nsample_submission = pd.read_csv('..\/input\/ventilator-pressure-prediction\/sample_submission.csv')","b9483be9":"print(f'Train Shape :  {train.shape}')\nprint(f'Test Shape :  {test.shape}')","9e92c032":"target = train['pressure']\ntrain.drop(['id', 'breath_id'], axis=1, inplace=True)\ntest.drop(['id', 'breath_id'], axis=1, inplace=True)","810d2fa8":"train.head()","e87b6796":"train.info()","1091fe50":"train.describe()","4e1f7edb":"fig, ax = plt.subplots(1, 1, figsize=(17, 8))\n\ntarget_cnt = train['pressure'].value_counts().sort_index()\n\nax.bar(target_cnt.index, target_cnt, color=['#d4dddd' if i%2==0 else '#fafafa' for i in range(9)],\n       width=0.55, \n       edgecolor='black', \n       linewidth=0.7)\n\nax.margins(0.02, 0.05)\nax.set_title('Pressure Distribution', weight='bold', fontsize=15)\nax.grid(axis='y', linestyle='-', alpha=0.4)\n\nfig.tight_layout()\nplt.show()\n","7cf04ecb":"pd.DataFrame(target_cnt)","4fac3ffd":"target_cnt_df = pd.DataFrame(target_cnt)\ntarget_cnt_df['ratio(%)'] = target_cnt_df\/target_cnt.sum()*100\ntarget_cnt_df.sort_values('ratio(%)', ascending=False, inplace=True)\ntarget_cnt_df['cummulated_sum(%)'] = target_cnt_df['ratio(%)'].cumsum()\ntarget_cnt_df.style.bar(subset=['cummulated_sum(%)'], color='#205ff2')","129bc3d3":"train.describe().T.style.bar(subset=['mean'], color='#205ff2')\\\n                            .background_gradient(subset=['std'], cmap='Reds')\\\n                            .background_gradient(subset=['50%'], cmap='coolwarm')","3a315457":"discrete_features = []\n\nfor col in train.columns:\n    if np.array_equal(train[col].values, train[col].values.astype(int)):\n        discrete_features.append(col)\n\nprint(f'Total {len(discrete_features)} : ')\nprint(discrete_features)","e44c6a0b":"for dcol in discrete_features:\n    print(f'{dcol} unique value : {train[dcol].nunique()}')","d15a177a":"R_pressure = train.groupby(['R'])['pressure'].mean().sort_values()\nR_pressure","e9c1808b":"fig, ax = plt.subplots(1, 1, figsize=(20, 6))\n\nax.bar(range(len(R_pressure)), R_pressure, alpha=0.7, color='lightgray', label='Test Dataset')\nax.set_yticks(range(0, 20, 3))\nax.margins(0.01)\nax.grid(axis='y', linestyle='--', zorder=5)\nax.set_title('Average of pressure grouped by R', loc='left', fontweight='bold')\nax.legend()\nplt.show()","97c643f0":"C_pressure = train.groupby(['C'])['pressure'].mean().sort_values()\nC_pressure","d2e0a4e3":"fig, ax = plt.subplots(1, 1, figsize=(20, 6))\n\nax.bar(range(len(C_pressure)), C_pressure, alpha=0.7, color='lightgray', label='Test Dataset')\nax.set_yticks(range(0, 20, 3))\nax.margins(0.01)\nax.grid(axis='y', linestyle='--', zorder=5)\nax.set_title('Average of pressure grouped by C', loc='left', fontweight='bold')\nax.legend()\nplt.show()","a09b2784":"from sklearn.preprocessing import StandardScaler\n\nss = StandardScaler()\nfeatures = [i for i in train.columns if (\"id\" not in i) and (\"pressure\" not in i)]\ntrain[features] = ss.fit_transform(train[features])\ntest[features] = ss.transform(test[features])","48ca056c":"train","6bdf93c3":"train['pressure_rounded'] = train.pressure.round()","c567dd1e":"fig, ax = plt.subplots(1, 1, figsize=(12, 20))\nsns.heatmap(train.groupby('pressure_rounded').mean().sort_index(),\n            square= 0 , center = 0, linewidth = 2,\n            cmap= sns.diverging_palette(240, 100, as_cmap=True),\n            cbar= False, \n           )\n\nax.set_title('Mean : Group by Target(Pressure)',loc='left')\nplt.show()","dadbcfb7":"fig, ax = plt.subplots(1,1, figsize=(12, 30))\nsns.heatmap(train.groupby('pressure_rounded').mean().sort_index(),\n            square=True, vmin=-0.5, vmax=0.5, center=0, linewidth=1,\n            cmap=sns.diverging_palette(240, 10, as_cmap=True),\n            cbar=False, \n           )\n\nax.set_title('Mean : Group by Target(Pressure)',loc='left')\nplt.show()","75341d3e":"fig, axes = plt.subplots(5,1,figsize=(12, 24))\naxes = axes.flatten()\n\nfor idx, ax in enumerate(axes):\n    sns.kdeplot(data=train, x=f'{features[idx]}', \n                fill=True, \n                ax=ax)\n    sns.kdeplot(data=test, x=f'{features[idx]}', \n                fill=True, \n                ax=ax)\n    ax.set_xticks([])\n    ax.set_yticks([])\n    ax.set_xlabel('')\n    ax.set_ylabel('')\n    ax.spines['left'].set_visible(False)\n    ax.set_title(f'{features[idx]}', loc='right', weight='bold', fontsize=10)\n\nfig.supxlabel('Average by feature', ha='center', fontweight='bold')\n\nfig.tight_layout()\nplt.show()","59aa018e":"# Reference: https:\/\/www.kaggle.com\/subinium\/tps-aug-simple-eda by Subin An","76b9c833":"# Scaling","7a7fd3a6":"# Feature Distribution","1665a454":"# Target & Feature Relation","64d71c41":"# Discrete Features"}}