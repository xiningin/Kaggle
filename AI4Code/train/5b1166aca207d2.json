{"cell_type":{"f6504f96":"code","12e8527f":"code","b72d9fe5":"code","4eb43723":"code","9d1affc0":"code","1e0f4b52":"code","61a74136":"code","ae2c5559":"code","885f4e17":"code","d4758068":"code","1d89543a":"code","63fd43e9":"code","b02f248b":"code","b751156c":"code","f0c6fcfc":"code","94de2ba9":"code","d7b48921":"code","009dd54d":"code","abd3bf8e":"code","0fac7f43":"code","afd9bd57":"code","9dfbafbe":"code","befecd13":"code","ff4032c9":"code","95dfc5c8":"code","2d412b0a":"code","1792fefe":"code","e93934cc":"code","6cad9297":"code","8080d213":"code","aad57db4":"code","e7470108":"code","8d72541e":"code","3f8eae87":"code","7c9edcf2":"code","925e1299":"code","b62e0437":"code","f0054360":"code","dc5da865":"code","ba08b0a8":"code","4a0b548e":"markdown","2280f97f":"markdown","69c3c98f":"markdown","7d7364cf":"markdown","c3271f95":"markdown","2c9e0066":"markdown","c465acf2":"markdown","87d1d6ef":"markdown","ed552e26":"markdown","dc297f9f":"markdown","7c66d484":"markdown","65cc577a":"markdown","f1e86cdf":"markdown","94aafd36":"markdown","eb9e3da9":"markdown","a2a2913f":"markdown","acf78fc2":"markdown","3d7e19c4":"markdown","e5fdee81":"markdown","dfdc58f9":"markdown","3f631a38":"markdown","122468f4":"markdown","8c911534":"markdown","7d669246":"markdown","8473a91c":"markdown","4ae5a70b":"markdown","547a32cf":"markdown","4530d91c":"markdown","c970946a":"markdown","3510cab4":"markdown","5788255c":"markdown","880fac55":"markdown","2f7d92dd":"markdown","6be66365":"markdown","23ad1133":"markdown","e20a7cca":"markdown","4ce12272":"markdown"},"source":{"f6504f96":"pip install --upgrade category_encoders","12e8527f":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly as py\nimport os\nimport plotly.io as pio\npio.renderers.default='notebook'\n\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.cluster import AgglomerativeClustering, DBSCAN\nimport scipy.cluster.hierarchy as shc \nimport plotly.graph_objects as go\n\n\nimport category_encoders as ce\n\nplt.style.use('seaborn-colorblind')\n%matplotlib inline","b72d9fe5":"# read data into dataframe and showing 5 data\ndf =  pd.read_csv('..\/input\/german-credit\/german_credit_data.csv', index_col=0)\ndf.head(5)","4eb43723":"df.info()","9d1affc0":"df.describe()","1e0f4b52":"df.describe(include=['object'])","61a74136":"print('Nilai Unik Sex\/Gender:', df['Sex'].unique())\nprint('')\nprint('Nilai Unik Housing\/Status Tinggal:', df['Housing'].unique())\nprint('')\nprint('Nilai Unik Saving accounts\/Uang Tabungan:', df['Saving accounts'].unique())\nprint('')\nprint('Nilai Unik Checking account\/Tabungan Giro:', df['Checking account'].unique())\nprint('')\nprint('Nilai Unik Checking Purpose\/Tujuan', df['Purpose'].unique())","ae2c5559":"numeric = ['Age', 'Job', 'Credit amount', 'Duration']\ncategorical = ['Sex', 'Housing', 'Saving accounts', 'Checking account', 'Purpose']","885f4e17":"df.isnull().sum()","d4758068":"print('Data Uik saving accounts:', df['Saving accounts'].unique())\nprint('Data Unik checking account:', df['Checking account'].unique())","1d89543a":"df['Saving accounts'] = df['Saving accounts'].fillna('unknown')\ndf['Checking account'] = df['Checking account'].fillna('unknown')\ndf.head(5)","63fd43e9":"df.hist(figsize = (20,15));","b02f248b":"for col in df[categorical].columns:\n    sns.countplot(y =col, data = df)\n    plt.show()","b751156c":"corr = df.corr()\nplt.figure(figsize=(10,8));\nsns.heatmap(corr, annot=True, fmt='.2f');","f0c6fcfc":"data = df.copy()","94de2ba9":"from sklearn.preprocessing import LabelEncoder","d7b48921":"encoder = LabelEncoder()\nfrom sklearn.preprocessing import LabelEncoder\nfor label in categorical:\n    data[label] = encoder.fit_transform(data[label])","009dd54d":"data[categorical]","abd3bf8e":"scaler = StandardScaler()\nX_scaled = scaler.fit_transform(data)\ndata_scaled = pd.DataFrame(X_scaled, columns=data.columns)\ndata_scaled.head()","0fac7f43":"X = data","afd9bd57":"#Elbow Method - Inertia plot\ninertia = []\n#looping the inertia calculation for each k\nfor k in range(1, 10):\n    #Assign KMeans as cluster_model\n    cluster_model = KMeans(n_clusters = k, random_state = 24)\n    #Fit cluster_model to X\n    cluster_model.fit(X)\n    #Get the inertia value\n    inertia_value = cluster_model.inertia_\n    #Append the inertia_value to inertia list\n    inertia.append(inertia_value)\n##Inertia plot\nplt.plot(range(1, 10), inertia)\nplt.title('The Elbow Method - Inertia plot', fontsize = 20)\nplt.xlabel('No. of Clusters')\nplt.ylabel('inertia')\nplt.show()","9dfbafbe":"k = 4\nkmeans = KMeans(n_clusters=k, random_state=0).fit(data_scaled)\ndf['Cluster'] = kmeans.labels_\ndf['Cluster'] = df['Cluster'].astype('category')","befecd13":"df","ff4032c9":"cluster_size = df.groupby(['Cluster'], as_index=False).size()\ncluster_size['Percentage'] = cluster_size['size'] \/ sum(cluster_size['size'])\ncluster_size","95dfc5c8":"df.groupby('Cluster').describe()","2d412b0a":"age_labels = ['Remaja', 'Dewasa', 'Lansia']\n\n# Code here\ndf['Age label'] = pd.qcut((df['Age']), 3, labels=age_labels)","1792fefe":"cols = ['Age']\n\n# Code here\ngroupby_age = df.groupby('Age label')[cols].mean()\ngroupby_age['Median'] = df.groupby('Age label')[cols].median()\ngroupby_age['Max'] = df.groupby('Age label')[cols].max()\ngroupby_age['Min'] = df.groupby('Age label')[cols].min()\n\n\ngroupby_age","e93934cc":"df","6cad9297":"fig,ax = plt.subplots(figsize=(12,8))\nsns.countplot(y ='Age label', data = df[df['Cluster']==0])","8080d213":"fig,ax = plt.subplots(figsize=(12,8))\nsns.countplot(y ='Duration', data = df[df['Cluster']==0])","aad57db4":"fig, ax = plt.subplots(2,3,figsize=(16,15))\nplt.tight_layout(4)\n\nsns.countplot(x ='Sex', data = df[df['Cluster']==0], ax=ax[0][0])\nsns.countplot(x ='Job', data = df[df['Cluster']==0], ax=ax[0][1])\nsns.countplot(x ='Housing', data = df[df['Cluster']==0], ax=ax[0][2])\nsns.countplot(x ='Saving accounts', data = df[df['Cluster']==0], ax=ax[1][0])\nsns.countplot(x ='Checking account', data = df[df['Cluster']==0], ax=ax[1][1])\nsns.countplot(x ='Purpose', data = df[df['Cluster']==0], ax=ax[1][2].tick_params(labelrotation=45))\nplt.show()","e7470108":"fig,ax = plt.subplots(figsize=(12,8))\nsns.countplot(y ='Age label', data = df[df['Cluster']==1])","8d72541e":"fig,ax = plt.subplots(figsize=(12,8))\nsns.countplot(y ='Duration', data = df[df['Cluster']==1])","3f8eae87":"fig, ax = plt.subplots(2,3,figsize=(16,15))\nplt.tight_layout(4)\n\nsns.countplot(x ='Sex', data = df[df['Cluster']==1], ax=ax[0][0])\nsns.countplot(x ='Job', data = df[df['Cluster']==1], ax=ax[0][1])\nsns.countplot(x ='Housing', data = df[df['Cluster']==1], ax=ax[0][2])\nsns.countplot(x ='Saving accounts', data = df[df['Cluster']==1], ax=ax[1][0])\nsns.countplot(x ='Checking account', data = df[df['Cluster']==1], ax=ax[1][1])\nsns.countplot(x ='Purpose', data = df[df['Cluster']==1], ax=ax[1][2].tick_params(labelrotation=45))\nplt.show()","7c9edcf2":"fig,ax = plt.subplots(figsize=(12,8))\nsns.countplot(y ='Age label', data = df[df['Cluster']==2])","925e1299":"fig,ax = plt.subplots(figsize=(12,8))\nsns.countplot(y ='Duration', data = df[df['Cluster']==2])","b62e0437":"fig, ax = plt.subplots(2,3,figsize=(16,15))\nplt.tight_layout(4)\n\nsns.countplot(x ='Sex', data = df[df['Cluster']==2], ax=ax[0][0])\nsns.countplot(x ='Job', data = df[df['Cluster']==2], ax=ax[0][1])\nsns.countplot(x ='Housing', data = df[df['Cluster']==2], ax=ax[0][2])\nsns.countplot(x ='Saving accounts', data = df[df['Cluster']==2], ax=ax[1][0])\nsns.countplot(x ='Checking account', data = df[df['Cluster']==2], ax=ax[1][1])\nsns.countplot(x ='Purpose', data = df[df['Cluster']==2], ax=ax[1][2].tick_params(labelrotation=45))\nplt.show()","f0054360":"fig,ax = plt.subplots(figsize=(12,8))\nsns.countplot(y ='Age label', data = df[df['Cluster']==3])","dc5da865":"fig,ax = plt.subplots(figsize=(12,8))\nsns.countplot(y ='Duration', data = df[df['Cluster']==3])","ba08b0a8":"fig, ax = plt.subplots(2,3,figsize=(16,15))\nplt.tight_layout(4)\n\nsns.countplot(x ='Sex', data = df[df['Cluster']==3], ax=ax[0][0])\nsns.countplot(x ='Job', data = df[df['Cluster']==3], ax=ax[0][1])\nsns.countplot(x ='Housing', data = df[df['Cluster']==3], ax=ax[0][2])\nsns.countplot(x ='Saving accounts', data = df[df['Cluster']==3], ax=ax[1][0])\nsns.countplot(x ='Checking account', data = df[df['Cluster']==3], ax=ax[1][1])\nsns.countplot(x ='Purpose', data = df[df['Cluster']==3], ax=ax[1][2].tick_params(labelrotation=45))\nplt.show()","4a0b548e":"Pada visualisasi pertama ini membuat visualisasi grafik pada data numerik yaitu kolom age, job, credit amount dan duration. Dan didapatkan :\n* Pada grafik age\/umur terjadi pelonjakan kenaikan dari umur 20 ke 25 dan dari 25 sampai 40 merupakan umur yang dengan jumlah terbanyak dan semakin tua umurnya semakin menurun grafik\n* Pada grafik job label 2 mendominasi dengan jumlah >600\n* Pada grafik Credit amount paling banyak yaitu pada jumlah credit amount 0-3000 dan untuk semakin besar credit amount semakin sedikit jumlahnya juga\n* Pada grafik duration didapatkan durasi yang paling banyak diambil oleh nasabah yaitu dengan durasi 2-25 bulan, untuk yang lebih dari itu juga ada tetapi terdapat perbedaan grafik yang cukup berbeda signifikan lebih sedikit.","2280f97f":"**Grouping**\n\nPada proses ini melakukan grouping berdasarkan kolom Age yang sudah dilakukan binning","69c3c98f":"**Deskripsi dataset**\n\nPada tabel deskripsi dataset dibawah didapatkan nilai-nilai statistikal dari tiap kolom yaitu : \n* Count (Jumlah data) yaitu 1000 tiap-tiap kolomnya\n* Mean (Nilai rataan) yaitu pada kolom Age=35.5, Job=1.9, Credit amount=3271.26, Duration=20.9\n* Standar Deviasi yaitu pada kolom Age=11.38, Job=0.65, Credit amount=2822.74, Duration=12.06\n* min (Nilai terendah) yaitu pada kolom Age=19, Job=0, Credit amount=250, Duration=4\n* 25% atau Kuartil-1 pada data yaitu kolom Age=27, Job=2, Credit amount=1365, Duration=12\n* 50% atau Kuartil-2 atau nilai tengah pada data yaitu kolom Age=33, Job=2, Credit amount=2319, Duration=18\n* 75% atau Kuartil-3 pada data yaitu kolom Age=27, Job=2, Credit amount=1365, Duration=18\n* max (Nilai tertinggi) yaitu pada kolom Age=75, Job=3, Credit amount=18424, Duration=72","7d7364cf":"Pada proses ini dilakukan klasterisasi data","c3271f95":"Saya mengisi data yang kosong tersebut dengan label 'unknown' atau tidak diketahui","2c9e0066":"# Klasterisasi","c465acf2":"**Deskripsi Data**\n\nPada dataset ini didapatkan :\n* Terdapat 1000 row data dengan 9 kolom\n* Masih ada data yang kosong yaitu pada kolom saving accounts dan checking accounts\n* Terdapat 4 kolom dengan tipe integer dan 5 kolom dengan tipe data object","87d1d6ef":"**Persebaran data Kluster**\n\nPad proses ini menampilkan persebaran data setelah dilakukan klastering yaitu jumlah data per klaster dan persentasenya.","ed552e26":"**Dataframe Akhir**\n\nMenampilkan hasil dataframe akhir setelah melakukan binning yang disimpan pada kolom 'Age label' dan klasterisasi yang disimpan pada kolom 'Cluster'","dc297f9f":"Pada visualisasi pertama ini membuat visualisasi grafik pada data categorical yaitu kolom sex, housing, saving accounts, checking account dan purpose. Dan didapatkan :\n\n* Pada atribut Sex\/Gender : Nasabah kredit bank lebih banyak dari gender laki-laki perbandingannya mencapai 7:3.     \n* Pada atribut Housing\/Rumah : Nasabah kredit bank paling banyak sudah memiliki rumah sendiri dan perbandingannya cukup dominan 7:1:2 (milik:bebas:sewa).      \n* Pada atribut Saving accounts\/Jumlah tabungan : Nasabah kredit bank didominasi yang memiliki jumlah tabungan dengan jumlah sedikit.     \n* Pada atribut Checking accounts\/Jumlah tabungan Giro: Nasabah kredit bank didominasi dengan nasabah yang tidak diketahui statusnya.       \n* Pada atribut Purpose : Nasabah kredit bank didominasi yang memiliki tujuan kredit yaitu untuk membeli mobil dan 3 tujuan tertinggi dibawahnya yaitu : radio\/TV, furnitur\/perlengkapan dan bisnis.","7c66d484":"Proses ini melakukan normalisasi data menggunakan Standard Scaler","65cc577a":"# Correlation Matrix","f1e86cdf":"**Mencari Nilai Kluster**\n\nPada proses mencari nilai K yang akan digunakan sebagai nilai kluster menggunakan intertia plot-elbow method, dan didapatkan nilai K=4","94aafd36":"# Visualisasi 1","eb9e3da9":"**Deskripsi Data Setelah Kluster**\n\nPada proses ini menampilkan persebaran data deskriptif berdasarkan kluster","a2a2913f":"Cluster 0","acf78fc2":"**Binning**\n\nPada proses ini melakukan binning data age\/umur dengan membagi pada 3 bagian yaitu remaja, dewasa dan lansia","3d7e19c4":"Pada proses saya melakukan visualisasi dan analisis serta klastering data Nasabah German Credit.","e5fdee81":"# EDA","dfdc58f9":"# Hasil Klasterisasi","3f631a38":"# Membaca data","122468f4":"**Deskripsi dataset**\n\nDeskripsi dataset untuk data yang bertipe data object yaitu : \n* Count (Jumlah data) yaitu 1000 tiap-tiap kolomnya kecuali pada kolom Saving accounts=817 dan kolom Checking account=606\n* Unique (Jumlah data unik pada kolom) yaitu pada kolom Sex=2, Housing=3, Saving accounts=4, Checking account=3, Purpose=8\n* Top (Data yang paling sering muncul) yaitu pada kolom Sex=male, Housing=own, Saving accounts=little, Checking account=little dan Purpose=car\n* Freq (Frekuensi data top muncul) yaitu pada kolom Sex=690, Housing=713, Saving accounts=603, Checking account=274 dan Purpose=337.","8c911534":"# Encode ","7d669246":"**Membagi data**\n\nPada proses ini saya membagi data yaitu data yang bertipe data categorical\/object disimpan dalam variable categorical dan data yang bertipe data integer pada variable numeric.","8473a91c":"# Normalisasi","4ae5a70b":"Dari tabel diatas didapatkan :\n* Untuk kelompok remaja rataannya pada umur 25, Nilai tengah 25, Nilai maksimal 28, Nilai Minimal 19.\n* Untuk kelompok dewasa rataannya pada umur 33, Nilai tengah 33, Nilai maksimal 38, Nilai Minimal 29.\n* Untuk kelompok dewasa rataannya pada umur 49, Nilai tengah 47, Nilai maksimal 75, Nilai Minimal 39.","547a32cf":"Cluster 2","4530d91c":"**Cek kembali data yang kosong**\n\nDidapatkan pada kolom Saving account 183 data kosong dan pada kolom Checking amount 394 data kossong sedangakan pada kolom lainnya tidak terdapat data yang kosong.","c970946a":"Cluster 1","3510cab4":"Pada proses ini saya menggunakan tabel grafik korelasi matriks unutk mengetahui korelasi antara tiap kolom\/variable fitur. Terdapat kontras warna juga untuk mengetahui korelasi jika semakin berkorelasi warna nya akan semakin terang.","5788255c":"**K-Means**\n\nPada proses ini mendefinisikan algoritma Machine Learning K-Means dengan nilai K=4 dan menyimpan hasil kuslter kedalam kolom baru yaitu kolom 'Cluster'","880fac55":"# Summary Hasil Analisis Data\n\n* Terbagi menjadi 4 klaster dengan tipe yang berbeda.\n* Nasabah kredit tersebar dari usia 19-75 tahun dan nasabah kredit bank paling banyak pada umur 25-30 tahun.      \n* Nasabah kredit bank paling banyak pada tingkat pekerjaan 2 -Terlatih.\n* Nasabah kredit bank paling banyak sudah memiliki rumah sendiri dan perbandingannya cukup dominan.\n* Untuk gender dari semua cluster nasabah bank didominasi oleh laki-laki.\n\n> Cluster 0\nDidominasi pada label usia remaja, saving accountsnya\nada dari little-rich, memiliki credit amount dan durasi paling rendah, tujuan\nutamanya didominasi untuk radio\/tv, mobil. Pada cluster ini didominasi oleh\ngender wanita.\n\n> Cluster 1\nPaling banyak nasabah pada cluster ini, didominasi pada label usia dewasa, saving accountsnya ada dari little-quite rich, memiliki credit\namount dan durasi kedua terendah, tujuan utamanya didominasi untuk radio\/tv, mobil.\n\n> Cluster 2\nPaling sedikit nasabah di cluster ini, didominasi pada\nlabel usia dewasa-lansia, job pada cluster ini sama dengan umumnya tapi diikuti oleh dominasi ke-2 yaitu level job 3-Professional, saving accountsnya ada dari little-rich, memiliki credit amount dan durasi paling tinggi dan jaraknya cukup jauh dengan cluster lainnnya, tujuan utamanya didominasi untuk mobil, bisnis, radio\/tv.\n\n> Cluster 3\nDidominasi pada label usia lansia, saving accountsnya\nada dari quite rich-rich, chechking account nya ada dari unkown-little rich, memiliki credit amount dan durasi kedua terendah dengan tujuan utama yaitu untuk mobil, radio\/tv, furniture.","2f7d92dd":"**Menampilkan nilai unik dari masing-masing kolom**","6be66365":"Pada proses ini dilakukan encode data yang mempunyai tipe data categorical\/object menjadi integer.","23ad1133":"Melihat lagi data unik pada kolom saving accounts dan checking account karena terdapat data yang kosong pada ke-2 kolom tsb.","e20a7cca":"Cluster 3","4ce12272":"# Intalasi serta import library dan package yang dibutuhkan pada proses ini"}}