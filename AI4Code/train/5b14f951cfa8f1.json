{"cell_type":{"a7154b7b":"code","8be325ca":"code","bfa73c9d":"code","d84fdbea":"code","5a043c6f":"code","d106cee6":"code","80ccec14":"code","9739f36d":"code","454413e6":"code","729c0f18":"code","2e3c99d7":"code","bec87caa":"code","87b4ccc1":"code","da7c0a2f":"code","d64b83c7":"code","d3c73a58":"code","ddec06a4":"markdown","bd1fdf08":"markdown","7cd1f251":"markdown","c266baf9":"markdown","379b778a":"markdown","29d26247":"markdown","d806d6c5":"markdown"},"source":{"a7154b7b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8be325ca":"#Read Training Data\ntrain_data=pd.read_csv('..\/input\/titanic\/train.csv')\n#view the first 5 row\ntrain_data.head()","bfa73c9d":"#view the Last 5 row from Training data\ntrain_data.tail()","d84fdbea":"#Read the Testting Data\ntest_data = pd.read_csv('..\/input\/titanic\/test.csv')\n#view the first 5 row from the test Data\ntest_data.head()","5a043c6f":"#View the last 5 row from the test data\ntest_data.tail()","d106cee6":"#print the rate of women who survived \nwomen = train_data.loc[train_data.Sex=='female'][\"Survived\"]\nrate_women = sum(women)\/len(women)\nprint('The Rate of Women who Survived is : ',rate_women , '%')","80ccec14":"#print the rate of Men who survived\nMen = train_data.loc[train_data.Sex=='male'][\"Survived\"]\nrate_men = sum(Men)\/len(Men)\nprint('The Rate of Men who Survived is :' , rate_men , '%')","9739f36d":"from sklearn.ensemble import RandomForestClassifier\n# y is training data target\ny=train_data[\"Survived\"]\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\n# X is training data features\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n","454413e6":"#N_estimators is the numer of trees\n#Max_depth is the deepth of Requared\nR_F_C = RandomForestClassifier(n_estimators=100 , max_depth=5 , random_state=1)\n\n#fitting the model\nR_F_C.fit(X,y)","729c0f18":"predictions = R_F_C.predict(X_test)","2e3c99d7":"output = pd.DataFrame({'PassengerId':test_data.PassengerId , 'Survived':predictions})","bec87caa":"print(output)","87b4ccc1":"output2 = pd.DataFrame({'PassengerId':test_data.PassengerId , 'Sex':test_data.Sex , 'Survived':predictions})","da7c0a2f":"output2","d64b83c7":"print(output2)","d3c73a58":"output.to_csv('my_submission.csv' , index=False)\nprint(\"Your submission was successfully saved!\")","ddec06a4":"# the rate of women who survived ","bd1fdf08":"# the rate of Men who survived","7cd1f251":"# Predictions","c266baf9":"# print PassengerId , sex male or female and prediction Survived or not","379b778a":"# Fit The Model ","29d26247":"# print PassengerId and prediction Survived or not","d806d6c5":"# Load The Data"}}