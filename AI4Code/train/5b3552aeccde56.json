{"cell_type":{"06a8aa8a":"code","93323ccd":"code","7ca2ac94":"code","bce81faa":"code","5a80c499":"code","f2bada94":"code","ad9b0a3e":"code","e1ccfb90":"code","dd69f23a":"code","0dd89d0a":"code","453553e4":"code","11bc7589":"code","337af367":"code","68482850":"code","f974027c":"code","aaff6ecf":"code","a56beb5e":"code","c8984d2e":"code","402c8bc7":"code","5e1a7995":"code","5395d712":"code","df4dc93f":"markdown","e6276ffe":"markdown","769ae412":"markdown","53c5c6d5":"markdown","f9adc903":"markdown","93bfae90":"markdown","94bd57bb":"markdown","33bdbfc8":"markdown","82b650d7":"markdown","ac637496":"markdown","9415d201":"markdown","9875e76e":"markdown","54851fa6":"markdown","161dfc55":"markdown","801f176e":"markdown"},"source":{"06a8aa8a":"import os\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.set()\n%matplotlib inline","93323ccd":"data_dir = '\/kaggle\/input\/commonlitreadabilityprize'\ntrain_data_path = os.path.join(data_dir, 'train.csv')\ntest_data_path = os.path.join(data_dir, 'test.csv')\n\ntrain_df = pd.read_csv(train_data_path)\ntest_df = pd.read_csv(test_data_path)\n\nprint(len(train_df))\nprint(len(test_df))","7ca2ac94":"train_df.head()","bce81faa":"train_df.tail()","5a80c499":"test_df.head()","f2bada94":"example = train_df.iloc[-1]\n\nprint(example)\nprint(example['excerpt'])","ad9b0a3e":"for i, excerpt in enumerate(train_df['excerpt'][:5]):\n    print(f'Excerpt #{i}')\n    print(excerpt + '\\n')","e1ccfb90":"train_df['excerpt_len'] = train_df['excerpt'].apply(len)\nsns.distplot(train_df['excerpt_len'], kde=False)","dd69f23a":"all_chars = set()\ntrain_df['excerpt'].apply(lambda x: [all_chars.add(c) for c in x])\nfor c in sorted(all_chars):\n    print(c + ' ', end='')\n    \nprint('\\n\\n')\n    \nfor c in sorted(all_chars):\n    print(f'({c}, {str(ord(c))}) ', end='')\n\n# 176 - 339","0dd89d0a":"# Make a boolean column for excerpts with \"hard characters\"\n\nhard_chars = set()\nfor c in all_chars:\n    if ord(c) >= 176 and ord(c) <= 339:\n        hard_chars.add(c)\n        \nprint(hard_chars)\n\ntrain_df['has_hard_char'] = train_df['excerpt'].apply(lambda x: any([c in hard_chars for c in x]))\nsum(train_df['has_hard_char'])","453553e4":"sns.distplot(train_df['excerpt'].apply(lambda x: len(x.split())), kde=False)","11bc7589":"import warnings\nwarnings.filterwarnings(\"ignore\")","337af367":"sns.distplot(train_df['target'], kde=False)","68482850":"train_df['excerpt_len'] = train_df['excerpt'].apply(len)\nsns.distplot(train_df['excerpt_len'], kde=False)","f974027c":"plt.subplots(figsize=(3, 7))\n\nsns.violinplot(train_df['has_hard_char'], train_df['target'], palette=['b', 'r'])","aaff6ecf":"sns.scatterplot(train_df['excerpt_len'], train_df['target'], alpha=0.4)","a56beb5e":"sns.scatterplot(train_df['excerpt_len'], train_df['target'], alpha=0.4)","c8984d2e":"correlation_matrix = np.corrcoef(train_df['excerpt_len'], train_df['target'])\ncorrelation_xy = correlation_matrix[0,1]\nr_squared = correlation_xy**2\n\nprint('Linear fit r^2:', r_squared)","402c8bc7":"sns.distplot(train_df['standard_error'], kde=False)","5e1a7995":"sns.scatterplot(train_df['target'], train_df['standard_error'], alpha=0.4)","5395d712":"train_df[train_df['target'] == 0]","df4dc93f":"# Target Correlation with \"Hard Characters\"","e6276ffe":"# Excerpt Target Distribution","769ae412":"# Looking at Examples","53c5c6d5":"## Load Data","f9adc903":"# Data\n\n## Files\n- **train.csv** - the training set\n- **test.csv** - the test set\n- **sample_submission.csv** - a sample submission file in the correct format\n\n## Columns\n- **id** - unique ID for excerpt\n- **url_legal** - URL of source - this is blank in the test set.\n- **license** - license of source material - this is blank in the test set.\n- **excerpt** - text to predict reading ease of\n- **target** - reading ease\n- **standard_error** - measure of spread of scores among multiple raters for each excerpt. Not included for test data.","93bfae90":"## Unique Characters","94bd57bb":"## Excerpt Length (charcters)","33bdbfc8":"# Target Correlation with Excerpt Length","82b650d7":"# CommonLit EDA","ac637496":"## Video Tutorial\n\nThis EDA comes along with a video tutorial, check it out [here](https:\/\/www.youtube.com\/watch?v=HwZkxUNbWgI&list=PL_49VD9KwQ_OJCqZOeOlSUQKcr1MyifOc&index=1).","9415d201":"## Excerpt Length (words\/tokens)","9875e76e":"# Target Correlation with Standard Error","54851fa6":"# Standard Error Distribution","161dfc55":"## Finding the outlier","801f176e":"# Key Findings\n- The length of excerpts is ~700-1300 characters or ~140-200 words\n- The excerpts are written in English, with the exception of some special characters\n- The presense of special characters seems to have a correlation with the difficulty of the excerpts\n- The target difficulty in training examples is withing the range: -4 < x < 2\n- The distribution of targets is roughly Gaussian\n- Standard errors are all within the range: 0.4 < x < 0.7\n- The distribution of standard errors is left skewed\n- Targets near the extemes tend to have higher standard errors in a fairly predictable pattern\n- There is one clear outlier on row #106, and high standard error data points could also potentially be considered outliers"}}