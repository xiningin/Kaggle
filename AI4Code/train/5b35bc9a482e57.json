{"cell_type":{"50891f3e":"code","e8192a62":"code","c4e75c9c":"code","77b201c6":"code","f7ff1ee8":"code","66957032":"code","8ca426ac":"code","ae51a45b":"code","5e89c1b9":"code","587d6821":"code","f42cd932":"code","13ce6c5c":"code","7d1c9925":"code","d397a964":"code","104fa902":"code","2d3a54fb":"code","ff537214":"code","e5d08991":"code","39829999":"markdown","71283754":"markdown","3c997aaa":"markdown","57b9b01e":"markdown","2ee580d6":"markdown","b619a833":"markdown","c7138501":"markdown","26350afc":"markdown","0796a9ab":"markdown","1d1702ec":"markdown","af076020":"markdown","4874d9ab":"markdown","959bba47":"markdown","c018f86e":"markdown","48adf3c5":"markdown","293ac5ad":"markdown","76c6ad11":"markdown","bc689a28":"markdown","f60070b1":"markdown"},"source":{"50891f3e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","e8192a62":"df = pd.read_csv('..\/input\/train.csv')\ndf.head() #Liat 5 elemen teratas","c4e75c9c":"df['id'] = df['Unnamed: 0'] #buat kolom baru namanya id\ndf = df.drop(columns='Unnamed: 0') #ilangin kolom Unnamed: 0\ndf = df.set_index(df['id'])\ndf = df.drop(columns='id') #ilangin kolom id\ndf.head()","77b201c6":"df.info()","f7ff1ee8":"df.describe()","66957032":"x = df[['ApplicantIncome','CoapplicantIncome','LoanAmount','Loan_Amount_Term','Credit_History']]\ny = df['Loan_Status']","8ca426ac":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nx_scaled = scaler.fit_transform(x)","ae51a45b":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x_scaled, y, test_size=0.2) #Split train test","5e89c1b9":"from sklearn.naive_bayes import GaussianNB\nclf = GaussianNB()\ntrain = clf.fit(x_train, y_train)\npred = train.predict(x_test)","587d6821":"from sklearn.metrics import accuracy_score\naccuracy_score(y_test, pred)","f42cd932":"from sklearn.metrics import confusion_matrix\nconfusion_matrix(y_test, pred)","13ce6c5c":"soal = pd.read_csv('..\/input\/test.csv')\nsoal.head()","7d1c9925":"soal['id'] = soal['Unnamed: 0'] #buat kolom baru namanya id\nsoal = soal.drop(columns='Unnamed: 0') #ilangin kolom Unnamed: 0\nsoal = soal.set_index(soal['id'])\nsoal = soal.drop(columns='id') #ilangin kolom id\nsoal.head()","d397a964":"x_soal = soal[['ApplicantIncome','CoapplicantIncome','LoanAmount','Loan_Amount_Term','Credit_History']]","104fa902":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nsoal_scaled = scaler.fit_transform(x_soal)","2d3a54fb":"jawab = train.predict(soal_scaled)","ff537214":"submission = pd.DataFrame({'Loan_Status' : jawab})\nsubmission = submission.set_index(soal.index)\nsubmission.head()","e5d08991":"submission.to_csv('submission.csv')","39829999":"Simpen Jawaban jadi file csv buat disubmit ke kaggle","71283754":"Kolom unnamed: 0 ternyata hanyalah nilai index, mari ubah dia menjadi index","3c997aaa":"Standarisasi X","57b9b01e":"Train Test Split","2ee580d6":"Mari kita periksa akurasi dari model kita","b619a833":"Update :\nV4. Fixed Some Typos","c7138501":"Apabila prediksi kita tepat, seharusnya bentuk dari confusion matrix kita adalah\n <pre>[nilai, 0\n 0,    nilai]<\/pre>\n","26350afc":"Soalnya tinggal kita prediksi pake model kita","0796a9ab":"Ternyata ada 299 data dengan 13 kolom, dengan data quantitatif sebanyak 5 dan qualitatif 8. Mari kita lihat data secara statistikal","1d1702ec":"Pilih input (x) dan output (y), untuk mempersimpel tutorial ini langsung pakai saja yang quantitative sebagai input","af076020":"Contoh kali ini saya akan menggunakan algoritma Logistic Regression untuk mengklasifikasi","4874d9ab":"Jangan lupakan confusion matrixnya","959bba47":"# Bikin CSV Buat dikumpulin","c018f86e":"Ubah jawaban jadi DataFrame","48adf3c5":"Jangan lupa standarisasi soalnya juga ya","293ac5ad":"Pertama-tama, mari kita load data train ke notebook","76c6ad11":"Sehingga model kita ternyata tidak jelek-jelek amat","bc689a28":"Mari kita lihat info dari datanya","f60070b1":"Tinggal klik commit dan output siap dikirim buat kompetisi ~"}}