{"cell_type":{"30525f5b":"code","4b3d69b6":"code","0ee3c083":"code","27e51f6d":"code","36e1a6d6":"code","c356fded":"code","01093821":"code","7bb4034a":"code","cb002de6":"code","44fcbf06":"code","f0857710":"code","9401f44d":"code","7aa1bc33":"code","a90ce4f5":"code","a8a4002a":"code","78182a4d":"code","f81e174b":"code","99fff5f0":"code","7fb7be6b":"code","4c1dca03":"code","d448d590":"code","64111d83":"code","702ed39d":"code","19bbfa93":"code","183b7535":"code","0ce466ca":"code","55a666af":"code","75e2df0d":"code","3c82461d":"code","38ce313f":"code","7153e0f5":"code","7ec869bc":"code","8b46fc3a":"code","c8fdeddc":"code","5eb25e1e":"code","56f1f3cd":"code","21cd3945":"code","fa9d2518":"code","d1b4f345":"code","40ecb0b6":"code","bd2d8bf6":"code","b3d25dc3":"code","ee207e5d":"code","575c8759":"code","714bbb3c":"code","cbea5518":"code","fd2b5e00":"code","0b895bdf":"code","b33048c0":"code","ef4811fb":"code","171383cd":"code","a1d2b5e8":"code","886f2822":"code","4652d104":"code","012b1622":"code","e63d1544":"code","bb28b09f":"code","fbb857f6":"code","0d8aeac1":"code","26fe524a":"code","24b671e4":"code","a25060bd":"code","997dbcdf":"code","1834ee48":"code","bc11e3bb":"code","42572d5d":"code","ed110f33":"code","52e60002":"code","c415a359":"code","d569ad87":"code","ee64ca0f":"code","7a22eb3b":"code","70f14ed0":"code","3c9ddf99":"code","80825e36":"code","0ae2a0d8":"markdown","a08ee3fe":"markdown","3ae1fa56":"markdown","2129419b":"markdown","76d51289":"markdown","240d7a73":"markdown","a0d24b52":"markdown","0cf69b07":"markdown","be6c10eb":"markdown","a332a1a6":"markdown","b379a85d":"markdown","dae3fcb2":"markdown","b9f2e609":"markdown","fc5efec6":"markdown","bd3bd527":"markdown","ff25f1b2":"markdown","8cd8a44a":"markdown","c12dcf5b":"markdown","96bdd9d8":"markdown","82c167e7":"markdown","db10bbdf":"markdown","df9acd61":"markdown","d9f57b7a":"markdown","f272c8c4":"markdown","f82a9ebb":"markdown","d8e010a2":"markdown","dcff61ea":"markdown","1ed4b058":"markdown","69b2f2c1":"markdown","03b0ed0b":"markdown","d50e8c39":"markdown","9e5c34f0":"markdown","4af8f9ac":"markdown","2b4b49a1":"markdown","809ff0c1":"markdown","7a05aab6":"markdown","81a326d2":"markdown","cdbc5bca":"markdown","0e66f173":"markdown","7c5b48c3":"markdown","691eb27b":"markdown","e63454d0":"markdown","c6e8cf4d":"markdown","e9fad9bf":"markdown","a9541231":"markdown","3f6dd15b":"markdown"},"source":{"30525f5b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")","4b3d69b6":"plt.rcParams[\"font.family\"] = 'Malgun Gothic'","0ee3c083":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")\nsample_submission = pd.read_csv('..\/input\/titanic\/gender_submission.csv')","27e51f6d":"train.head(3)","36e1a6d6":"test.head()","c356fded":"train.info()","01093821":"test.info()","7bb4034a":"train.isnull().sum()","cb002de6":"test.isnull().sum()","44fcbf06":"fe_name = list(test)\ndf_train = train[fe_name]\ndf = pd.concat((df_train,test))","f0857710":"print(train.shape, test.shape, df.shape)","9401f44d":"target = train['Survived']","7aa1bc33":"def stack_plot(feature):\n    survived = train[train['Survived'] == 1][feature].value_counts()\n    dead = train[train['Survived'] == 0][feature].value_counts()\n    df = pd.DataFrame([survived,dead])\n    df.index = ['survived','dead']\n    df.plot(kind='bar', stacked= True, figsize = (10,5))","a90ce4f5":"lable = ['survived','dead']\nplt.title('\uc0dd\uc874 \uc218')\nplt.pie(train['Survived'].value_counts(),labels= lable,autopct='%.f%%')","a8a4002a":"stack_plot('Pclass')","78182a4d":"Pclass_encoded = pd.get_dummies(df['Pclass'],prefix= 'Pclass')\ndf = pd.concat((df,Pclass_encoded), axis=1)\ndf = df.drop(columns = 'Pclass')","f81e174b":"stack_plot('Sex')","99fff5f0":"sex_encoded = pd.get_dummies(df['Sex'],prefix= 'Sex')\ndf = pd.concat((df,sex_encoded), axis=1)\ndf = df.drop(columns = 'Sex')","7fb7be6b":"df.drop('Sex_female', axis=1, inplace=True)","4c1dca03":"stack_plot('SibSp')","d448d590":"stack_plot('Parch')","64111d83":"df['Travelpeople']=df[\"SibSp\"]+df[\"Parch\"]\ndf['TravelAlone']=np.where(df['Travelpeople']>0, 0, 1)","702ed39d":"df.drop('SibSp', axis=1, inplace=True)\ndf.drop('Parch', axis=1, inplace=True)","19bbfa93":"df.drop('Travelpeople', axis=1, inplace=True)","183b7535":"df['New_name']  = df['Name'].str.extract('([A-Za-z]+)\\.', expand=False)\ntrain['New_name']  = train['Name'].str.extract('([A-Za-z]+)\\.', expand=False)","0ce466ca":"train ['New_name'] =  train['New_name'].map({\"Mr\": 0 , \"Mrs\":2, \"Miss\":1,\"Dr\":3,\"Rev\":3,\n                                             \"Mlle\":3,\"Major\":3,\"Col\":3,\"Ms\":3,\"Jonkheer\":3,\n                                             \"Sir\" :3,\"Lady\":3,\"Mme\":3,\"Capt\":3,\"Don\":3,\"Countess\":3})\ndf['New_name'] =  df['New_name'].map({\"Mr\": 0 , \"Mrs\":2, \"Miss\":1,\"Dr\":3,\"Rev\":3,\n                                             \"Mlle\":3,\"Major\":3,\"Col\":3,\"Ms\":3,\"Jonkheer\":3,\n                                             \"Sir\" :3,\"Lady\":3,\"Mme\":3,\"Capt\":3,\"Don\":3,\"Countess\":3})","55a666af":"stack_plot('New_name')","75e2df0d":"df['New_name'] = df['New_name'].fillna('0')","3c82461d":"df = df.astype({'New_name':'float'})","38ce313f":"df = df.drop(columns = 'Name')","7153e0f5":"New_name_encoded = pd.get_dummies(df['New_name'],prefix= 'New_name')\ndf = pd.concat((df,New_name_encoded), axis=1)\ndf = df.drop(columns = 'New_name')","7ec869bc":"df['Age'].hist(bins = 15)","8b46fc3a":"df['Age'].fillna(28, inplace = True)","c8fdeddc":"sns.countplot(x= 'Embarked', data= df)","5eb25e1e":"df['Embarked'].fillna('S',inplace=True)","56f1f3cd":"Embarked_encoded = pd.get_dummies(df['Embarked'],prefix= 'Embarked')\ndf = pd.concat((df,Embarked_encoded), axis=1)\ndf = df.drop(columns = 'Embarked')","21cd3945":"from scipy.stats import norm","fa9d2518":"sns.distplot(train['Fare'],fit = norm)","d1b4f345":"df['Fare'] = df['Fare'].map(lambda i : np.log(i) if i >0 else 0)","40ecb0b6":"sns.distplot(df['Fare'],fit = norm)","bd2d8bf6":"df['Cabin'].value_counts()","b3d25dc3":"df = df.drop(columns = 'Cabin')","ee207e5d":"df = df.drop(['PassengerId','Ticket'],axis = 1)","575c8759":"df.isnull().sum()","714bbb3c":"from xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC","cbea5518":"new_train = df[:train.shape[0]]\nnew_test = df[train.shape[0]:]","fd2b5e00":"cols=[\"Age\", \"Fare\", \"TravelAlone\", \"Pclass_1\", \"Pclass_2\",\"Embarked_C\",\"Embarked_S\",\n      \"Sex_male\",'New_name_0.0','New_name_1.0', 'New_name_2.0'] ","0b895bdf":"X = new_train[cols]\nY = train['Survived']","b33048c0":"import statsmodels.api as sm\nfrom scipy import stats\nstats.chisqprob = lambda chisq, df: stats.chi2.sf(chisq, df)\nlogit_model=sm.Logit(Y,X)\nresult=logit_model.fit()\nprint(result.summary())","ef4811fb":"cols2 = [\"Age\", \"TravelAlone\", \"Pclass_1\", \"Pclass_2\",\"Embarked_S\",\n      \"Sex_male\",'New_name_1.0', 'New_name_2.0'] ","171383cd":"X2=new_train[cols2]\nY=train['Survived']\n\nlogit_model=sm.Logit(Y,X2)\nresult=logit_model.fit()\nprint(result.summary())","a1d2b5e8":"cols3=[\"Age\", \"Pclass_1\", \"Pclass_2\",\"Embarked_S\",\n      \"Sex_male\",'New_name_1.0', 'New_name_2.0'] ","886f2822":"X3=new_train[cols3]\nY=train['Survived']\n\nlogit_model=sm.Logit(Y,X3)\nresult=logit_model.fit()\nprint(result.summary())","4652d104":"f_test = new_test[cols3]","012b1622":"from sklearn.linear_model import LogisticRegression\n\nlogreg = LogisticRegression()\nlogreg.fit(X3, Y)\n\nprint(\"\ubaa8\ub378 Accuracy : {:.2f}%\".format(logreg.score(X3, Y)*100))","e63d1544":"from sklearn.model_selection import GridSearchCV, cross_val_score, StratifiedKFold","bb28b09f":"from xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC","fbb857f6":"kfold = StratifiedKFold(n_splits=8)","0d8aeac1":"random_state = 1\nclf = []\n\nclf.append(XGBClassifier(random_state = random_state))\nclf.append(LGBMClassifier(random_state = random_state))\nclf.append(KNeighborsClassifier())\nclf.append(RandomForestClassifier(random_state=random_state))\nclf.append(GradientBoostingClassifier(random_state=random_state))\nclf.append(DecisionTreeClassifier(random_state=random_state))\nclf.append(LogisticRegression(random_state = random_state))\nclf.append(SVC(random_state=random_state))","26fe524a":"clf_results = []\nfor classifier in clf :\n    clf_results.append(cross_val_score(classifier, new_train, y = Y, scoring = \"accuracy\", cv = kfold, n_jobs=4))","24b671e4":"clf_means = []\nclf_std = []\nfor clf_result in clf_results:\n    clf_means.append(clf_result.mean())\n    clf_std.append(clf_result.std())","a25060bd":"clf_re = pd.DataFrame({\"CrossValMeans\":clf_means,\"CrossValerrors\": clf_std})\nclf_re","997dbcdf":"# XGBoost \ud30c\ub77c\ubbf8\ud130 \ud29c\ub2dd \nXGB = XGBClassifier()\nxgb_param_grid = {'learning_rate': [1,0.1,0.01,0.001],\n              'n_estimators': [50, 100, 200, 500, 1000],\n              'max_depth' : [1,3,5,10,50]}\ngsXGB = GridSearchCV(XGB,param_grid = xgb_param_grid, cv=kfold, scoring=\"accuracy\", n_jobs= 4, verbose = 1)\ngsXGB.fit(new_train,Y)\nXGB_best = gsXGB.best_estimator_\n\n# \ucd5c\uace0 \uc810\uc218\ngsXGB.best_score_","1834ee48":"#LGBMClassifier \ud30c\ub77c\ubbf8\ud130 \ud29c\ub2dd\nLGB = LGBMClassifier()\nlgb_param_grid = {\n    'n_estimators': [400, 700, 1000], \n    'max_depth': [15,20,25],\n    'num_leaves': [50, 100, 200],\n    'min_split_gain': [0.3, 0.4],\n}\ngsLGB = GridSearchCV(LGB,param_grid = lgb_param_grid, cv=kfold, scoring=\"accuracy\", n_jobs= 4, verbose = 1)\ngsLGB.fit(new_train,Y)\nLGB_best = gsLGB.best_estimator_\n\n# \ucd5c\uace0 \uc810\uc218\ngsLGB.best_score_","bc11e3bb":"# RandomForestClassifier \ud30c\ub77c\ubbf8\ud130 \ud29c\ub2dd \nRFC = RandomForestClassifier()\n\nrf_param_grid = {\"max_depth\": [None],\n              \"max_features\": [1, 3, 7],\n              \"min_samples_split\": [2, 3, 7],\n              \"min_samples_leaf\": [1, 3, 7],\n              \"bootstrap\": [False],\n              \"n_estimators\" :[100,300],\n              \"criterion\": [\"gini\"]}\ngsRFC = GridSearchCV(RFC,param_grid = rf_param_grid, cv=kfold, scoring=\"accuracy\", n_jobs= 4, verbose = 1)\ngsRFC.fit(new_train,Y)\nRFC_best = gsRFC.best_estimator_\n\n# \ucd5c\uace0 \uc810\uc218\ngsRFC.best_score_","42572d5d":"# Gradient boosting \ud30c\ub77c\ubbf8\ud130 \ud29c\ub2dd\nGBC = GradientBoostingClassifier()\ngb_param_grid = {'loss' : [\"deviance\"],\n              'n_estimators' : [100,200,300],\n              'learning_rate': [0.1, 0.05, 0.01],\n              'max_depth': [4, 8],\n              'min_samples_leaf': [100,150],\n              'max_features': [0.3, 0.1] \n              }\ngsGBC = GridSearchCV(GBC,param_grid = gb_param_grid, cv=kfold, scoring=\"accuracy\", n_jobs= 4, verbose = 1)\ngsGBC.fit(new_train,Y)\nGBC_best = gsGBC.best_estimator_\n\n# \ucd5c\uace0 \uc810\uc218\ngsGBC.best_score_","ed110f33":"test_Survived_XGB = pd.Series(XGB_best.predict(new_test), name=\"XGB\")\ntest_Survived_LGB = pd.Series(LGB_best.predict(new_test), name=\"LGB\")\ntest_Survived_RFC = pd.Series(RFC_best.predict(new_test), name=\"RFC\")\ntest_Survived_GBC = pd.Series(GBC_best.predict(new_test), name=\"GBC\")\n\nensemble_results = pd.concat([test_Survived_XGB,test_Survived_LGB,\n                              test_Survived_RFC,test_Survived_GBC],axis=1)\ng= sns.heatmap(ensemble_results.corr(),annot=True)","52e60002":"from sklearn.ensemble import VotingClassifier","c415a359":"votingC = VotingClassifier(estimators=[('XGB', XGB_best), ('LGB', LGB_best),\n('RFC', RFC_best), ('GBC',GBC_best)], voting='soft', n_jobs=4)\nvotingC = votingC.fit(new_train, Y)  ","d569ad87":"test_Survived = pd.Series(votingC.predict(new_test), name=\"Survived\")","ee64ca0f":"submission = pd.DataFrame({\n    \"PassengerId\" :test[\"PassengerId\"],\n    \"Survived\": test_Survived\n})","7a22eb3b":"submission.to_csv('voting_titanic.csv',index=False) ","70f14ed0":"from mlxtend.classifier import StackingClassifier\nfrom sklearn.utils.testing import ignore_warnings","3c9ddf99":"clf1 = XGB_best\nclf2 = LGB_best\nclf3 = RFC_best\nclf4 = GBC_best\n\nlr = LogisticRegression()\nst_clf = StackingClassifier(classifiers=[clf1, clf1, clf2, clf3, clf4], meta_classifier=lr)\nparams = {'meta_classifier__C': [0.1,1.0,5.0,10.0] ,\n          #'use_probas': [True] ,\n          #'average_probas': [True] ,\n          'use_features_in_secondary' : [True, False]\n         }\nwith ignore_warnings(category=DeprecationWarning):\n    st_clf_grid = GridSearchCV(estimator=st_clf, param_grid=params, cv=5, refit=True)\n    st_clf_grid.fit(new_train, Y)\n    st_clf_grid.best_score_","80825e36":"with ignore_warnings(category=DeprecationWarning):    \n    pred_all_stack = st_clf_grid.predict(new_test)\n\nsubmission1 = pd.DataFrame({\n    \"PassengerId\" :test[\"PassengerId\"],\n    \"Survived\": pred_all_stack\n})\n#submission1.to_csv('stack_clf.csv',index=False)","0ae2a0d8":"### h.Fare <a id=\"two-h\"><\/a>","a08ee3fe":"> 4\uac00\uc9c0 \ubaa8\ub378\uc744 heatmap\uc744 \ud1b5\ud574\uc11c \uc0c1\uad00\uad00\uacc4\ub97c \ube44\uad50\ud574\ubcf4\uace0 \uc0c1\uad00\uc131\uc774 \ub192\uc740 RFC\uc640 LGB \ubaa8\ub378\uc744 \uc774\uc6a9\ud558\uc5ec\n\uc559\uc0c1\ube14 \ubaa8\ub378\uc744 \ub9cc\ub4e4\uc5b4\uc11c \uacb0\uacfc\ub97c \uc81c\ucd9c\ud569\ub2c8\ub2e4","3ae1fa56":"## III. \ubaa8\ub378\ub9c1 <a id=\"three\"><\/a>","2129419b":">Age \ud53c\ucc98\uc758 \ub370\uc774\ud130 \ud655\uc778\uacb0\uacfc \uc6b0\uce21\uc73c\ub85c \uae30\uc6b8\uc5b4\uc838\uc788\uae30 \ub54c\ubb38\uc5d0 \ud3c9\uade0\uac12\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\ubcf4\ub2e4 \uc911\uc559\uac12\uc744 \uc0ac\uc6a9\ud558\uae30\ub85c \ud588\ub2e4","76d51289":"### d.Parch <a id=\"two-d\"><\/a>","240d7a73":">Embarked \ud53c\ucc98\ub294 countplot \uacb0\uacfc S\uc120\ucc29\uc7a5\uc774 \ub9ce\uc740 \uac83\uc744 \ubcfc \uc218 \uc787\uc73c\uba70 \uacb0\uce21\uce58\ub97c S\ub85c \ub300\uccb4\ud558\uc600\uace0\n\uce74\ud14c\ucf54\ub9ac \ubcc0\uc218\ub85c \ud310\ub2e8\ud558\uc5ec \uc6d0\ud56b \uc778\ucf54\ub529\uc744 \uc704\ud574 \ub354\ubbf8\ubcc0\uc218\ub85c \ub9cc\ub4ed\ub2c8\ub2e4.","a0d24b52":"### b.Sex <a id=\"two-b\"><\/a>","0cf69b07":"## I. \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30 \ubc0f \ud655\uc778 <a id=\"one\"><\/a>","be6c10eb":"### b.\ubcf4\ud305 <a id=\"four-b\"><\/a>","a332a1a6":"\ubaa9\ucc28:\n\n**[I. \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30 \ubc0f \ud655\uc778](#one)**\n\n- [a. \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30 \ubc0f \uacb0\uce21\uce58 \ud655\uc778](#one-a)\n\n**[II. EDA & FE](#two)**\n\n- [a. Pclass](#two-a)\n- [b. Sex](#two-b)\n- [c. SibSp](#two-c)\n- [d. Parch](#two-d)\n- [e. Name](#two-e)\n- [f. Age](#two-f)\n- [g. Embarked](#two-g)\n- [h. Fare](#two-h)\n- [i. cabin](#two-i)\n\n    \n**[III. \ubaa8\ub378\ub9c1](#three)**\n\n- [a. \ub85c\uc9c0\uc2a4\ud2f1 \ud68c\uadc0](#three-a)\n- [b. kfold](#three-b)\n- [c. \ud30c\ub77c\ubbf8\ud130 \ud29c\ub2dd & GridSearchCV](#three-c)\n\n**[IV. \uc608\uce21](#four)**\n\n- [a. \uc559\uc0c1\ube14](#four-a)\n- [b. voting](#four-b)\n- [c. stacking](#four-c)","b379a85d":">\uc815\uaddc\uaddc\ubd84\ud3ec\uac00 \uc544\ub2cc \ub9e4\uc6b0 \ube44\ub300\uce6d \ubd84\ud3ec \uba71\ubcc0\ud658\uc744 \ud1b5\ud574\uc11c \uc815\uaddc\ud654\ub97c \uc2dc\ucf1c\uc900\ub2e4","dae3fcb2":"### b. kfold <a id=\"three-b\"><\/a>","b9f2e609":"## IV. \uc608\uce21 <a id=\"four\"><\/a>","fc5efec6":">Mr - \ub0a8\uc790\nMrs. \uacb0\ud63c\ud55c \uae30\ud63c \uc5ec\uc790\nMiss. \uacb0\ud63c\ud558\uc9c0 \uc54a\uc740 \ubbf8\ud63c \uc5ec\uc790\nMs. \uc5ec\uc790\uc77c\uacbd\uc6b0","bd3bd527":"## Titanic","ff25f1b2":">Sex \ud53c\ucc98\ub294 \uce74\ud14c\ucf54\ub9ac \ubcc0\uc218\ub85c \ud310\ub2e8\ud558\uc5ec \uc6d0\ud56b \uc778\ucf54\ub529\uc744 \uc704\ud574 \ub354\ubbf8\ubcc0\uc218\ub85c \ub9cc\ub4ed\ub2c8\ub2e4.","8cd8a44a":"### a.Pclass <a id=\"two-a\"><\/a>","c12dcf5b":"### e.Name <a id=\"two-e\"><\/a>","96bdd9d8":"> \ub370\uc774\ud130 \uc138\ud2b8\ub97c 8\uac1c\uc758 \uadf8\ub8f9\uc73c\ub85c \ubd84\ud560\ud55c \ub2e4\uc74c\uc5d0 8\uac1c\uc758 \ubaa8\ub378\uc5d0 \ub300\ud574\uc11c \uae30\ubcf8 \ubaa8\ub378\uc744 \uad6c\ucd95\ud55c \ub4a4 gridsearchcv\ub97c \ud1b5\ud574\uc11c \ubcc0\uc218\ub4e4\uc744 \ucd5c\uc801\ud654 \uc2dc\ucf1c\uc90d\ub2c8\ub2e4. kfold \ud655\uc778 \uacb0\uacfc 4\uac1c\uc758 \ubaa8\ub378\uc744 \uc774\uc6a9\ud574\uc11c \uc559\uc0c1\ube14 \ud558\ub824\uace0 \ud569\ub2c8\ub2e4 ","82c167e7":"### a. \ub85c\uc9c0\uc2a4\ud2f1 \ud68c\uadc0 <a id=\"three-a\"><\/a>","db10bbdf":">SibSp\uc640 Parch \ubcc0\uc218\ub4e4\uc740 \uac19\uc774 \uc5ec\ud589\uc744 \uc628 \uacbd\uc6b0\ub85c \ud310\ub2e8\ud558\uc5ec\n\ub2e4\uc911 \uacf5\uc120\uc131\uc744 \uace0\ub824\ud558\uc5ec \ud558\ub098\ub85c \ud569\uce5c \ub2e4\uc74c\uc5d0 \uc5ec\ud589\uc744 \ud63c\uc790 \uc654\ub294\uc9c0 \uc544\ub2cc\uc9c0\ub85c \ud30c\uc0dd\ubcc0\uc218\ub97c \ub9cc\ub4ed\ub2c8\ub2e4.","df9acd61":"> PassengerId , Ticket \ud53c\ucc98\ub4e4\ub3c4 \ubaa8\ub378\ub9c1 \uacfc\uc815\uc5d0 \ud544\uc694\uc5c6\ub294 \ubcc0\uc218\ub4e4\uc774\ubbc0\ub85c \ub4dc\ub86d\ud574\uc90d\ub2c8\ub2e4","d9f57b7a":"> \ubaa8\ub4e0 \ud53c\ucc98\ub4e4\uc774 \uc720\uc758\uc218\uc900 0.05\ubcf4\ub2e4 \ub0ae\uc740\uac83\uc744 \ud655\uc778 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","f272c8c4":"## II. EDA & FE <a id=\"two\"><\/a> ","f82a9ebb":"### g.Embarked <a id=\"two-g\"><\/a>","d8e010a2":">\ubcc0\uc218\uc5d0 \uacb0\uce21\uac12\uc774 \ub108\ubb34 \ub9ce\uc544. \uc774 \uac12\uc740 \uc2b9\uac1d\uc758 \ud074\ub798\uc2a4 \ubc0f \uc9c0\ubd88 \ub41c \uc6b4\uc784\uacfc \uad00\ub828\uc774\uc788\ub294 \uac83\uc73c\ub85c \ubcf4\uace0 \ub4dc\ub86d\ud588\uc2b5\ub2c8\ub2e4","dcff61ea":"### a.\uc559\uc0c1\ube14 <a id=\"four-a\"><\/a>","1ed4b058":"### i.Cabin <a id=\"two-i\"><\/a>","69b2f2c1":"### c. \ud30c\ub77c\ubbf8\ud130 \ud29c\ub2dd & GridSearchCV <a id=\"three-c\"><\/a>","03b0ed0b":">Boosting, Stacking \ubc0f Voting\uacfc \uac19\uc740 \ubd84\ub958\uc5d0 \uc559\uc0c1\ube14 \ubaa8\ub378\uc744 \uc801\uc6a9\ud558\uc5ec \ud0c0\uc774\ud0c0\ub2c9 \uc0dd\uc874\uc790 \uc608\uce21\uc744 \ud558\uc600\ub2e4","d50e8c39":"> \ubaa8\ub378\uc758 Accuracy\ub97c \ub192\uc774\uae30 \uc704\ud574\uc11c \ub85c\uc9c0\uc2a4\ud2f1 \ud68c\uadc0\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uaca0\uc9c0\ub9cc \ubaa8\ub378\uc758 \uc131\ub2a5\uc744 \ub192\uc774\uae30 \uc704\ud574\uc11c\n\uc5ec\ub7ec \ubaa8\ub378\uc744 \ud65c\uc6a9\ud558\uc5ec \uc559\uc0c1\ube14\uc744 \ud569\ub2c8\ub2e4","9e5c34f0":">3\ub4f1\uc11d \uc0ac\ub78c\uc774 \ub9ce\uc774 \uc8fd\uc740 \uac83\uc744 \ubcfc \uc218 \uc788\uc73c\uba70 Pclass \ud53c\ucc98\ub294 \uce74\ud14c\ucf54\ub9ac \ubcc0\uc218\ub85c \ud310\ub2e8\ud558\uc5ec \uc6d0\ud56b \uc778\ucf54\ub529\uc744 \uc704\ud574 \ub354\ubbf8\ubcc0\uc218\ub85c \ub9cc\ub4ed\ub2c8\ub2e4.","4af8f9ac":"> \ub85c\uc9c0\uc2a4\ud2f1 \ubaa8\ub378 \ud655\uc778 \uacb0\uacfc Fare, Embarked_S,Embarked_C,New_name_0 \ud53c\ucc98\uc5d0 \ub300\ud574\uc11c p-value\uac00 0.05 \uae30\uc900\uc73c\ub85c \ub192\uac8c \ub098\uc640\uc788\uc73c\ubbc0\ub85c \ud574\ub2f9 \ud53c\ucc98\ub97c \ubaa8\ub450 \uc81c\uace0\ud558\uace0 \ub2e4\uc2dc \ud655\uc778\ud574 \ubd05\ub2c8\ub2e4.","2b4b49a1":"> \uc774\ub984\uc758 \uacbd\uc6b0 \uc815\uaddc \ud45c\ud604\uc2dd\uc744 \uc774\uc6a9\ud574\uc11c Name \ud53c\ucc98\ub97c \ucc98\ub9ac\ud574\uc8fc\uace0 \ub0a8\uc790 \uc5ec\uc790 \uadf8\uc678\ub85c \ub9e4\ud551\ud574\uc900\ub2e4.\nMr - \ub0a8\uc790 \/ Mrs. \uacb0\ud63c\ud55c \uae30\ud63c \uc5ec\uc790 \/ Miss. \uacb0\ud63c\ud558\uc9c0 \uc54a\uc740 \ubbf8\ud63c \uc5ec\uc790 \/ MS. \uc5ec\uc790\uc77c \uacbd\uc6b0\n\uadf8\ub798\ud504\ub97c \ubcf4\uba74 \ub0a8\uc790\uac00 \ub9ce\uc774 \uc0ac\ub9dd\ud55c\uac83\uc73c\ub85c \ubcf4\uba70 \uacb0\uce21\uce58\ub97c \ub0a8\uc790\ub85c \ucc44\uc6e0\uace0 \ub354\ubbf8\ubcc0\uc218\ub97c \ub9cc\ub4e4\uc5b4 \uc8fc\uc5c8\ub2e4.","809ff0c1":"### f.Age <a id=\"two-f\"><\/a>","7a05aab6":"### a. \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30 \ubc0f \uacb0\uce21\uce58 \ud655\uc778 <a id=\"one-a\"><\/a>","81a326d2":"> \uadf8\ub77c\ub514\uc5b8\ud2b8 \ubd80\uc2a4\ud305\uc740 \uc608\uce21 \ubaa8\ub378\uc744 \uc791\uc131\ud558\ub294 \uac00\uc7a5 \uac15\ub825\ud55c \uae30\uc220 \uc911 \ud558\ub098\ub85c \ubd80\uc2a4\ud305\uc740 \ub2e8\uacc4\ubcc4 \ubaa8\ub378 \ubc29\uc2dd\uc73c\ub85c \uac00\uc0b0 \ubaa8\ub378\uc744 \uc791\uc131\ud558\uc5ec \uc57d\ud55c \ud559\uc2b5\uc790\ub97c \uac15\ub825\ud55c \ud559\uc2b5\uc790\ub85c \ubcc0\ud658\ud558\ub294 \ubc29\ubc95 \n\ubd80\uc2a4\ud305\uc5d0\uc11c \uac01\uac01\uc758 \uc0c8 \ud2b8\ub9ac\ub294 \uc6d0\ub798 \ub370\uc774\ud130 \uc138\ud2b8\uc758 \uc218\uc815 \ub41c \ubc84\uc804\uc5d0 \uc801\ud569\ud558\ub2e4.","cdbc5bca":"> \ud22c\ud45c\ub294 \uc5ec\ub7ec \uba38\uc2e0 \ub7ec\ub2dd \ubaa8\ub378\uc758 \uc608\uce21\uc744 \uacb0\ud569\ud558\ub294 \uac00\uc7a5 \uac04\ub2e8\ud55c \ubc29\ubc95 \uc911 \ud558\ub098\uc785\ub2c8\ub2e4. \uc2e4\uc81c \ubd84\ub958\uae30\ub294 \uc544\ub2c8\uc9c0\ub9cc \uac01 \uc54c\uace0\ub9ac\uc998\uc758 \ub2e4\ub978 \ud2b9\uc131\uc744 \uc774\uc6a9\ud558\uae30 \uc704\ud574 \ubcd1\ub82c\ub85c \ud559\uc2b5\ub418\uace0 \ud3c9\uac00\ub418\ub294 \ub2e4\ub978 \uc138\ud2b8\uc5d0 \ub300\ud55c \ub798\ud37c\uc785\ub2c8\ub2e4. \ud22c\ud45c\ub97c \uae30\ubc18\uc73c\ub85c \uad6c\ucd95\ud558\uace0 \uc608\uce21 \ud55c \ubaa8\ub378\uc758 \uc608\uce21\uc744 \uacb0\ud569\ud569\ub2c8\ub2e4.","0e66f173":"### c.\uc2a4\ud0dc\ud0b9 <a id=\"four-c\"><\/a>","7c5b48c3":"> \uacb0\uce21\uce58 \ud655\uc778 \uacb0\uacfc AGE\uc640 Cabin, Embarked \ud53c\ucc98\uc5d0 \ub300\ud574 \ucc98\ub9ac\ub97c \ud574\uc918\uc57c \ub420\uac70 \uac19\ub2e4","691eb27b":"> \ub85c\uc9c0\uc2a4\ud2f1 \ubaa8\ub378 \ud655\uc778 \uacb0\uacfc TravelAlone \ud53c\ucc98\uc5d0 \ub300\ud574\uc11c p-value\uac00 0.05 \uae30\uc900\uc73c\ub85c \ub192\uac8c \ub098\uc640\uc788\uc73c\ubbc0\ub85c \ud53c\ucc98\ub97c \ubaa8\ub450 \uc81c\uace0\ud558\uace0 \ub2e4\uc2dc \ud655\uc778\ud574 \ubd05\ub2c8\ub2e4.","e63454d0":">Extra Tree Classifier\uc640 \uc720\uc0ac\ud558\uac8c Random Forest\ub294 \uc5ec\ub7ec \uc758\uc0ac \uacb0\uc815 \ud2b8\ub9ac \ubd84\ub958\uc790\ub97c \ub370\uc774\ud130 \uc9d1\ud569\uc758 \ub2e4\uc591\ud55c \ud558\uc704 \uc0d8\ud50c\uc5d0 \ub9de\ucd94\uace0 \ud3c9\uade0\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc608\uce21 \uc815\ud655\ub3c4\ub97c \uac1c\uc120\ud558\uace0 \uacfc\uc801 \ud569\uc744 \uc81c\uc5b4\ud569\ub2c8\ub2e4. \ud558\uc704 \uc0d8\ud50c \ud06c\uae30\ub294 \ud56d\uc0c1 \uc6d0\ub798 \uc785\ub825 \uc0d8\ud50c \ud06c\uae30\uc640 \ub3d9\uc77c\ud558\uc9c0\ub9cc bootstrap = True (\uae30\ubcf8\uac12) \uc778 \uacbd\uc6b0 \uc0d8\ud50c\uc774 \ub300\uccb4\ub85c \uadf8\ub824\uc9d1\ub2c8\ub2e4.\n\n>ET\uc640 RF\uc758 \ucc28\uc774\uc810-\n>1) \ubd84\ud560\uc5d0\uc11c \ubcc0\uc218\ub97c \uc120\ud0dd\ud560 \ub54c, \ud6c8\ub828 \uc138\ud2b8\uc758 \ubd80\ud2b8 \uc2a4\ud2b8\ub7a9 \uc0d8\ud50c \ub300\uc2e0 \uc804\uccb4 \ud6c8\ub828 \uc138\ud2b8\uc5d0\uc11c \uc0d8\ud50c\uc774 \ucd94\ucd9c\ub429\ub2c8\ub2e4.\n>2) \ubd84\ud560\uc740 \uac01 \ubd84\ud560\uc5d0\uc11c \uc0d8\ud50c\uc758 \uac12 \ubc94\uc704\uc5d0\uc11c \ubb34\uc791\uc704\ub85c \uc644\uc804\ud788 \uc120\ud0dd\ub429\ub2c8\ub2e4.","c6e8cf4d":"1. \ubcc0\uc218 | \uc124\uba85\n------- | -------\n**PassengerId** | id\n**Survived** | \uc0dd\uc874 \uc5ec\ubd80 (0 = \uc0ac\ub9dd, 1 = \uc0dd\uc874) \n**Pclass** | \ud2f0\ucf13 \ud074\ub798\uc2a4 (1 = 1\ub4f1\uc11d, 2 = 2\ub4f1\uc11d, 3 = 3\ub4f1\uc11d)\n**name** | \uc774\ub984  \n**Sex** | \uc131\ubcc4\n**Age** | \ub098\uc774\n**SibSp** | \ud568\uaed8 \ud0d1\uc2b9\ud55c \uc790\ub140 , \ubc30\uc6b0\uc790 \uc758 \uc218\n**Parch** | \ud568\uaed8 \ud0d1\uc2b9\ud55c \ubd80\ubaa8\ub2d8 , \uc544\uc774\ub4e4 \uc758 \uc218\n**Fare** | \uc694\uae08\n**Ticket** | \ud2f0\ucf13 \ubc88\ud638\n**Cabin** | \uc218\ud558\ubb3c \ubc88\ud638\n**Embarked** | \uc120\ucc29\uc7a5 ","e9fad9bf":">\uc804\uccb4 62%\uac00 \uc0ac\ub9dd\ud55c\uac83\uc744 \ubcfc \uc218 \uc788\ub2e4.","a9541231":">\uc815\uaddc\uaddc\ubd84\ud3ec\uac00 \uc544\ub2cc \ub9e4\uc6b0 \ube44\ub300\uce6d \ubd84\ud3ec \uba71\ubcc0\ud658\uc744 \ud1b5\ud574\uc11c \uc815\uaddc\ud654\ub97c \uc2dc\ucf1c\uc900\ub2e4","3f6dd15b":"### c.SibSp <a id=\"two-c\"><\/a>"}}