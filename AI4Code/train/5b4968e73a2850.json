{"cell_type":{"65fc3deb":"code","74ed5a1f":"code","40a18af9":"code","90dd2f34":"code","f2efc235":"code","f4f2ce13":"code","cc09dad6":"code","5986bc1a":"code","0e683be2":"code","1a3ae311":"code","e4e08645":"code","2fdf79bb":"code","f8f1ad1c":"code","4b6bc72b":"code","81895ff7":"code","8cfb2cd5":"code","bc31dd49":"code","3ddfdfb3":"code","1347ff4c":"code","566d0599":"markdown","3bd58ace":"markdown","3470ad3f":"markdown","799fa835":"markdown","b624b178":"markdown","f0dd687d":"markdown","67688cdc":"markdown","1df03cb9":"markdown","52ddab85":"markdown","cbbb9acb":"markdown","cc476504":"markdown"},"source":{"65fc3deb":"#Import packages\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib import rcParams\nimport seaborn as sns\n%matplotlib inline\nrcParams['figure.figsize'] = 15,11\nsns.set(style=\"darkgrid\")","74ed5a1f":"#Import data\nus_df = pd.read_csv(\"\/kaggle\/input\/us.csv\")     #This data was pulled from the evictionlab. You can find more at https:\/\/evictionlab.org\/","40a18af9":"#Data cleanup\nus_df.columns = [name.replace(\"-\",\"_\") for name in us_df.columns]   #Replace \"-\" with \"_\" in column titles. Easier to use .query()\nus_df['name'] = list(map(str, us_df['name']))   #Change type to string for all elements of name column.\nus_df = us_df[us_df['name'].str.match('^[0-9]')==False] #Remove any row where name column starts with a digit. We don't want tracts.\nstates = us_df.filter([\"name\",\"parent_location\"]).query(\"parent_location == 'USA'\")[\"name\"].unique()    #Create a list of all states in the data.\ncounties = us_df[\"name\"][us_df[\"name\"].str.lower().str.contains(\"county\")]  #Create a list of all rows with the word county in the name.\ncities = us_df[\"name\"][us_df[\"name\"].str.lower().str.contains(\"city\")]  #Create a list of all rows with the word city in the name.\nus_df[\"tuple\"] = list(zip(us_df[\"name\"],us_df[\"parent_location\"]))  #Add a column with the name and parent_location as a tuple for easier indexing.","90dd2f34":"pd.DataFrame(us_df.shape, columns=[\"us_df\"], index=[\"Rows\",\"Columns\"])","f2efc235":"pd.DataFrame({\"Data Type\": us_df.dtypes, \"Percent Null\": us_df.isnull().sum() \/ len(us_df) * 100})","f4f2ce13":"missing_by_location = us_df.groupby([\"name\",\"parent_location\"]).apply(lambda x: x['eviction_rate'].isna().sum()\/17) #Each location should have 17 data points (one for each year from 2000-2016).","cc09dad6":"missing_by_location.sort_values(ascending=False)","5986bc1a":"sns.distplot(us_df[\"eviction_rate\"][us_df[\"eviction_rate\"]<=100],bins=100)","0e683be2":"sns.distplot(us_df[\"poverty_rate\"])","1a3ae311":"sns.distplot(us_df[\"pct_renter_occupied\"])","e4e08645":"sns.distplot(us_df[\"median_household_income\"])","2fdf79bb":"to_drop = list(missing_by_location[missing_by_location >0.01].index)\nus_df = us_df[us_df[\"tuple\"].isin(to_drop) == False]","f8f1ad1c":"pd.DataFrame({\"Data Type\": us_df.dtypes, \"Percent Null\": us_df.isnull().sum() \/ len(us_df) * 100})","4b6bc72b":"us_df.shape","81895ff7":"highest_avg_evicrate_states_df = us_df.query(\"parent_location=='USA'\").groupby(\"name\").agg(\"mean\").sort_values(by=\"eviction_rate\",ascending=False).head(5)\nhighest_avg_evicrate_states_df.filter([\"eviction_rate\"]).rename(columns={\"eviction_rate\":\"avg_eviction_rate\"})","8cfb2cd5":"highest_avg_evicrate_cities_df = us_df.query(\"parent_location in @states and population >= 100000 and name not in @counties and name not in @cities\").groupby([\"name\",\"parent_location\"]).agg(\"mean\").sort_values(by=\"eviction_rate\",ascending=False).head(5) #Show major cities (pop >= 100k) with highest average eviction rates.\nhighest_avg_evicrate_cities_df.filter([\"eviction_rate\"]).rename(columns={\"eviction_rate\":\"avg_eviction_rate\"})","bc31dd49":"top_names = list(highest_avg_evicrate_states_df.index)\nts_data = us_df.query(\"name in @top_names and parent_location == 'USA'\").filter([\"year\",\"name\",\"eviction_rate\"])\nsns.lineplot(x=\"year\",y=\"eviction_rate\",data=ts_data,hue=\"name\").set_title(\"Top 5 States by Year and Average Eviction Rate\")\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0)","3ddfdfb3":"top_names = list(highest_avg_evicrate_cities_df.index)\nts_data = us_df[us_df[\"tuple\"].isin(top_names)]\nsns.lineplot(x=\"year\",y=\"eviction_rate\",data=ts_data,hue=\"name\").set_title(\"Top 5 Cities by Average Eviction Rate\")\nplt.legend(bbox_to_anchor=(1.01, 1), loc=2, borderaxespad=0)","1347ff4c":"plt.figure(figsize=(25,25))\nsns.heatmap(us_df.corr(),annot=True)","566d0599":"Next, let's get a sense of what sort of data we have with the columns and data types, and determine how complete the data are with percent missing.","3bd58ace":"There seems to be a non-trivial amount of missing data, especially from the critical eviction related columns. Let's see if we can get a better idea of which locations are most effected by missing data.","3470ad3f":"We include some noteworthy observations from the heatmap below. We should add that as population, and renter_occupied_households go up, evictions seem to increase&mdash;&mdash;as we might expect. However, there is one noteworthy observation to make:\n- eviction_rate has a salient positive correlation with pct_af_american.\n- The percentage of white citizens has a negative correlation with poverty rate whereas the percentage of african american, hispanic, and american indian citizens all have a salient positive correlation with poverty rate.\n- The percentage of white citizens has a negative correlation with pct_renter_occupied whereas the percentage of african american and hispanic citizens all have a salient positive correlation with pct_renter_occupied.\n- pct_renter_occupied has a very strong correlation with population. This might suggest, as we would expect, that more densely populated areas such as cities see higher rates of renting.","799fa835":"# USA Evictions Analysis","b624b178":"Let's go ahead and plot out the eviction rate time-series for the top 10 states and cities.","f0dd687d":"Now that we have some visualizations of our data, we will go ahead and proceed with dropping rows with an unsuitable amount of data.","67688cdc":"# Data Exploration","1df03cb9":"Clearly we have disposed of a good deal of the data, but our missing data is now manageable.\n\nNow, let's look at the states and larger cities with the highest average eviction rate.","52ddab85":"Since we will be working off of averages, we will want to be sure that we are only looking at items with a sufficient amount of data. For that reason, we will drop all rows where location is associated with more than 0.2 percent of eviction_rate data missing.\n\nBefore we do that, let's provide an analysis on parts of the data which won't be as impacted by the missing components.","cbbb9acb":"First let's see how many rows and columns we have","cc476504":"Now let's check out our columns and nulls again."}}