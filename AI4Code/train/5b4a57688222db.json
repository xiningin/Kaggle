{"cell_type":{"96dd4096":"code","9ede7a78":"code","efe59073":"code","b21744fd":"code","06e76c7a":"code","07361ddf":"code","1bbcd7ee":"code","ac21ba24":"code","703310af":"code","2e5f77d5":"code","5db8f426":"code","1f72788c":"markdown","cded266f":"markdown","30bb1c67":"markdown","2893e287":"markdown","60194341":"markdown","21408418":"markdown"},"source":{"96dd4096":"import torch","9ede7a78":"device = 'cuda' if torch.cuda.is_available() else 'cpu'\nmy_tensor = torch.tensor([[1,2,3], [4,5,6]], dtype=torch.float32, device=device, requires_grad=True)","efe59073":"print(my_tensor)\nprint(my_tensor.dtype)\nprint(my_tensor.device)\nprint(my_tensor.shape)\nprint(my_tensor.requires_grad)","b21744fd":"x = torch.empty(size=(3,3)) # random values\nx = torch.zeros(size=(3,3)) # fill with 0.\nx = torch.rand(size=(3,3)) # normal distribution\nx = torch.ones(size=(3,3)) # fill with 1.\nx = torch.eye(5,5) # fill with 1. on main diagonal\nx = torch.arange(start=0, end=5, step=1) # like python range\nx =torch.linspace(start=0.1, end=1, steps=10)\nx =torch.empty(size=(1,5)).normal_(mean=0, std=1)\nx =torch.empty(size=(1,5)).uniform_(0,1)\nx =torch.diag(torch.ones(6))","06e76c7a":"print(x)\nprint(x.dtype)\nprint(x.device)\nprint(x.shape)\nprint(x.requires_grad)","07361ddf":"tensor = torch.arange(4)\nprint(tensor.bool())  # boolean\nprint(tensor.short()) # int16\nprint(tensor.long())  # int64\nprint(tensor.half())  # float16\nprint(tensor.float()) # float32\nprint(tensor.double())# float64","1bbcd7ee":"import numpy as np\nnp_array = np.zeros((5,5))\nprint(type(np_array))\n\ntensor = torch.from_numpy(np_array)\n\nprint(tensor.dtype)\nprint(tensor.device)\nprint(tensor.shape)\nprint(tensor.requires_grad)\n\nnp_array_back = tensor.numpy()\nprint(type(np_array_back))","ac21ba24":"x = torch.tensor([1,2,3])\ny = torch.tensor([9,8,7])","703310af":"z1 = torch.empty(3)\ntorch.add(x,y ,out=z1)","2e5f77d5":"z2 = torch.add(x,y)","5db8f426":"z = x+y","1f72788c":"# Initializing Tensor","cded266f":"# Array to Tensor conversion and vice-versa","30bb1c67":"* sum first ","2893e287":"# Other common initialization methods","60194341":"# Tensor Math and Comparison Operations","21408418":"# How to initialize and convert tensors to other type(int, float, double)"}}