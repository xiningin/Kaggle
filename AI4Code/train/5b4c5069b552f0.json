{"cell_type":{"9cebf1db":"code","d83e7fe9":"code","edf74c4e":"code","136ab043":"code","ea8d7206":"code","7d96d44d":"code","e5a41906":"code","d8a6ce99":"code","a640da8c":"code","45e8872c":"code","c4772bf2":"code","10621ab8":"code","4572e408":"code","99d7f153":"code","981f9867":"code","6c033dd9":"code","27aa084f":"code","14aa4bbe":"code","62515a3f":"code","ecd757d9":"code","cd233f6c":"code","9b2b555e":"code","2dbdbfa7":"markdown","0699a03b":"markdown","4af4d444":"markdown","b7e2953c":"markdown"},"source":{"9cebf1db":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d83e7fe9":"#import data\ndf=pd.read_csv(\"..\/input\/yenicsv\/yeniveriseti.csv\", sep=\";\")\ndf.head()\n","edf74c4e":"#plot data\nplt.scatter(df.deneyim,df.maas)\nplt.xlabel(\"deneyim\")\nplt.ylabel(\"maas\")\nplt.show()\n","136ab043":" #Linear Regression model\nlinear_reg=LinearRegression()\nx=df.deneyim.values.reshape(-1,1)\ny=df.maas.values.reshape(-1,1)\nlinear_reg.fit\n","ea8d7206":"type(x)\nx.shape","7d96d44d":"linear_reg.fit(x,y)","e5a41906":"#prediction\nb0=linear_reg.predict([[0]])\nprint(\"b0: \", b0)","d8a6ce99":"b0_=linear_reg.intercept_\nprint(\"b0: \", b0_)#y eksenini kesti\u011fi nokta yai intersept","a640da8c":"b1 =linear_reg.coef_\nprint(\"b1: \", b1)#e\u011fim(slope)\n#maas=163+1138*deneyim","45e8872c":"maas_yeni=1663+1138*11\nprint(maas_yeni)","c4772bf2":"#prediction\nprint(linear_reg.predict([[11]]))","10621ab8":"#visualize line\narray=np.array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]).reshape(-1,1)\nplt.scatter(x,y)\ny_head=linear_reg.predict(array)\nplt.plot(array,y_head,color=\"red\")\nplt.show()\n","4572e408":"linear_reg.predict([[100]])","99d7f153":"#Multiple Linear regression= b0 +b1*x1 +b2*x2...\n#\ndf=pd.read_csv(\"..\/input\/multiple-linear-regression\/multiple_regression_dataset.csv\", sep=\";\")\ndf.head()","981f9867":"x=df.iloc[:,[0,2]].values\ny=df.maas.values.reshape(-1,1)\n\nmultiple_linear_regression = LinearRegression()\nmultiple_linear_regression.fit(x,y)\n\nprint(\"b0: \", multiple_linear_regression.intercept_)\nprint(\"b1,b2: \", multiple_linear_regression.coef_)","6c033dd9":"multiple_linear_regression.predict(np.array([[10,35], [5,35]]))","27aa084f":"df= pd.read_csv(\"..\/input\/polynomial-linear-regression\/data.csv\", sep =\";\")\n\ny= df.araba_max_hiz.values.reshape(-1,1)\nx= df.araba_fiyat.values.reshape(-1,1)\n\nplt.scatter(x,y)\nplt.ylabel(\"araba_max_hiz\")\nplt.xlabel(\"araba_fiyat\")\nplt.show()","14aa4bbe":"#linear regression = y=b0+b1*x\n#multiple linear regression y = b0+b1*x1+b2*x2\n\n#%%Linear Regression\nfrom sklearn.linear_model import LinearRegression\n\nlr =LinearRegression()\nlr.fit(x,y)","62515a3f":"#%% predict\n\ny_head = lr.predict(x)\nplt.scatter(x, y)\nplt.plot(x, y_head, color =\"red\", label=\"linear\")\nplt.show()\n\nprint(\"10 milton tl' lik araba h\u0131z\u0131 tahmini :\" ,lr.predict([[10000]]))","ecd757d9":"#polynomial linear regression = y= b0+ b1*x +b2*x^2+b3*x^3+......\nfrom sklearn.preprocessing import PolynomialFeatures\npolynomial_regression =PolynomialFeatures(degree= 4)\n\nx_polynomial = polynomial_regression.fit_transform(x)","cd233f6c":"#fit\nlinear_regression2 =LinearRegression()\nlinear_regression2.fit(x_polynomial, y)\n","9b2b555e":"#g\u00f6rselle\u015ftirme\ny_head2 = linear_regression2.predict(x_polynomial)\nplt.scatter(x, y)\nplt.plot(x,y_head2, color=\"green\", label=\"poly\")\nplt.legend()\nplt.show()","2dbdbfa7":"<font color ='blue'> \nContent:\n    \n1. [Linear Regression](#1)\n1. [Multiple Linear Regression](#2)\n1. [Polynomial Linear Regression](#3)    ","0699a03b":"<a id = \"3\"><\/a><br>\n# Polynomial Linear Regresion","4af4d444":"<a id = \"1\"><\/a><br>\n# Linear Regression\n* Depends on one variable(deneyim).","b7e2953c":"<a id = \"2\"><\/a><br>\n# Multiple Linear Regression\n* y depends on more than 1 variable. Now maas depend on two variables now. These are deneyim and yas.\n* maas = dependent variable(deneyim and yas).\n* deneyim and yas independent variables."}}