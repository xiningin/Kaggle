{"cell_type":{"a1e80c9b":"code","0b0e1263":"code","2569f7c3":"code","9c9a807a":"markdown","7d1ec91b":"markdown","d259f2a1":"markdown"},"source":{"a1e80c9b":"import tensorflow as tf\nimport timeit\n\ndevice_name = tf.test.gpu_device_name()\nif \"GPU\" not in device_name:\n    print(\"GPU device not found\")\nprint('Found GPU at: {}'.format(device_name))","0b0e1263":"config = tf.ConfigProto()\n\nwith tf.device('\/cpu:0'):\n    random_image_cpu = tf.random_normal((100, 100, 100, 3))\n    net_cpu = tf.layers.conv2d(random_image_cpu, 32, 7)\n    net_cpu = tf.reduce_sum(net_cpu)\n\nwith tf.device('\/gpu:0'):\n    random_image_gpu = tf.random_normal((100, 100, 100, 3))\n    net_gpu = tf.layers.conv2d(random_image_gpu, 32, 7)\n    net_gpu = tf.reduce_sum(net_gpu)\n\nsess = tf.Session(config=config)\nsess.run(tf.global_variables_initializer())\n\ncpu = lambda : sess.run(net_cpu)\ngpu = lambda : sess.run(net_gpu)\n  \nprint('Time (s) to convolve 32x7x7x3 filter over random 100x100x100x3 images '\n      '(batch x height x width x channel). Sum of ten runs.')\nprint('CPU (s):')\ncpu_time = timeit.timeit('cpu()', number=10, setup=\"from __main__ import cpu\")\nprint(cpu_time)\nprint('GPU (s):')\ngpu_time = timeit.timeit('gpu()', number=10, setup=\"from __main__ import gpu\")\nprint(gpu_time)\nprint('GPU speedup over CPU: {}x'.format(int(cpu_time\/gpu_time)))\n\nsess.close()","2569f7c3":"sess = tf.Session(config=config)\nsess.run(tf.global_variables_initializer())\n\ncpu = lambda : sess.run(net_cpu)\ngpu = lambda : sess.run(net_gpu)\n  \nprint('Time (s) to convolve 32x7x7x3 filter over random 100x100x100x3 images '\n      '(batch x height x width x channel). Sum of ten runs.')\nprint('CPU (s):')\ncpu_time = timeit.timeit('cpu()', number=10, setup=\"from __main__ import cpu\")\nprint(cpu_time)\nprint('GPU (s):')\ngpu_time = timeit.timeit('gpu()', number=10, setup=\"from __main__ import gpu\")\nprint(gpu_time)\nprint('GPU speedup over CPU: {}x'.format(int(cpu_time\/gpu_time)))\n\nsess.close()","9c9a807a":"Next, we'll time an image filter convolution on the CPU vs. the GPU.","7d1ec91b":"If we rerun this, we'll see that the GPU goes even faster.","d259f2a1":"# GPU Speedup on Kaggle Kernels and Tensorflow\n\nThis kernel provides an example of running a GPU on Kaggle Kernels. If you fork this kernel and rerun it, it will automatically run in a GPU session. For new kernels, you can flip the GPU from \"off\" to \"on\" at any point while you're editing the kernel, using the menu on the right. This will restart your interactive kernel session in a new VM that has a GPU attached. When you press \"Commit & Run\", the commited version will run on a GPU as well.\n\nFirst, we'll import Tensorflow and verify that it finds the GPU."}}