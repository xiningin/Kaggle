{"cell_type":{"6b4292ab":"code","ebe8414d":"code","735fb890":"code","7ada20ec":"code","33eeafcc":"code","1dbc8329":"code","df62c067":"code","eda557e4":"code","9d884de6":"code","cc0e29be":"code","f10544e7":"code","d11cf2da":"code","423c9a17":"code","293b7422":"code","c6654e34":"code","566eb3e5":"markdown","d223aaa5":"markdown","d3244de4":"markdown"},"source":{"6b4292ab":"import pandas as pd\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error","ebe8414d":"#importing the dataset \ndata = '..\/input\/melbourne-housing-snapshot\/melb_data.csv'\n#stoing the data\nmelbourne_data = pd.read_csv(data)\n#getting the basic insight of the data\nmelbourne_data.describe()\n","735fb890":"melbourne_data.head(5)","7ada20ec":"melbourne_data.columns\n","33eeafcc":"#dropping the null values \nmelbourne_data.dropna(axis=0)","1dbc8329":"y = melbourne_data.Price","df62c067":"melbourne_features = ['Rooms','Bathroom','Landsize','Lattitude','Longtitude']","eda557e4":"X = melbourne_data[melbourne_features]","9d884de6":"X.describe()","cc0e29be":"X.head(5)","f10544e7":"melbourne_model = DecisionTreeRegressor(random_state = 1)\nmelbourne_model.fit(X, y)","d11cf2da":"print('Printing the values of the first five houses')\nprint(X.head())\nprint('The prediction of the values of the houses are:')\nprint(melbourne_model.predict(X.head()))","423c9a17":"train_X,val_X,train_y,val_y = train_test_split(X,y,random_state = 0)\n\ndef magg(max_leaf_nodes,train_X,val_X,train_y,val_y):\n    model = DecisionTreeRegressor(max_leaf_nodes=max_leaf_nodes, random_state =100)\n    model.fit(train_X,train_y)\n    predicted_y = model.predict(val_X)\n    error = mean_absolute_error(val_y,predicted_y)\n    return(error)","293b7422":"for max_leaf_nodes in [2,16,128,256,512,1024]:\n    err = magg(max_leaf_nodes,train_X,val_X,train_y,val_y)\n    print(\"Max Leaf Nodes & Mean Absolue Error =\",(max_leaf_nodes,err))","c6654e34":"\n\nforest_model = RandomForestRegressor(random_state = 1)\nforest_model.fit(train_X,train_y)\nmelbourne_predicted_y = forest_model.predict(val_X)\nprint(mean_absolute_error(val_y,melbourne_predicted_y))","566eb3e5":"Here's the takeaway: Models can suffer from either:\n\nOverfitting: capturing spurious patterns that won't recur in the future, leading to less accurate predictions, or\nUnderfitting: failing to capture relevant patterns, again leading to less accurate predictions.\nWe use validation data, which isn't used in model training, to measure a candidate model's accuracy. This lets us try many candidate models and keep the best one.","d223aaa5":"**The steps to building and using a model are:\n**\n\n**Define:** What type of model will it be? A decision tree? Some other type of model? Some other parameters of the model type are specified too.\n\n**Fit:** Capture patterns from provided data. This is the heart of modeling.\n\n**Predict:** Just what it sounds like\n\n**Evaluate:** Determine how accurate the model's predictions are.","d3244de4":"Random forrest are an aggregate of the decision trees and provide more accurate results \n"}}