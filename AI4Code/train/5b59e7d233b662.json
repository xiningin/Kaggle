{"cell_type":{"1d50afea":"code","6b2d308a":"code","b56bf6b3":"code","8c861c98":"code","eba16c9a":"code","657a0750":"code","e453ef4f":"code","9d36d6af":"code","01beef19":"code","6c989756":"code","fc11ef90":"code","d4c682fc":"code","71d86106":"code","af1475a0":"code","c29d1b8a":"code","e024d1da":"code","7d1695ea":"code","416e69fd":"code","8d54a5e7":"code","3c360666":"code","8c154be5":"markdown","3d590a80":"markdown","9fddb47c":"markdown","4f06dc23":"markdown"},"source":{"1d50afea":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6b2d308a":"df_19 = pd.read_csv(\"\/kaggle\/input\/world-happiness\/2019.csv\") # Dataset is reading","b56bf6b3":"df_19.head() # We see first 5 data","8c861c98":" df_19.tail() # We see last 5 data","eba16c9a":"df_19.info() # We get info about the dataset ","657a0750":"df_19.describe().T # We look at descriptive statistics","e453ef4f":"df_19.corr() # We look dataset correlation","9d36d6af":"f,ax = plt.subplots(figsize = (15,15)) # We are creating table for heatmap\nsns.heatmap(df_19.corr(),annot = True,fmt = \".1f\",ax = ax,center = 1); # And look at the heatmap and we are having info dataset correlation.\n# If colors are dark, they have a high correlation but If they are clean, They have low correlation or inversely proportional variables.","01beef19":"f,ax = plt.subplots(figsize = (10,10)) # We are creating table for new heatmap\ndata = df_19.loc[df_19[\"Social support\"] >= 1.350,:] # We are filtering this data because We look correlations to it\ncorr = np.triu(data.corr()) # This part is output without correlations\nsns.heatmap(data.corr(),annot = True,mask = corr) # And look at the heatmap","6c989756":"df_19[\"Healthy life expectancy\"].plot(kind = \"line\", color = \"g\", label = \"Health (Life Expectancy)\", linewidth = 5, grid = True, alpha = 0.5, linestyle = \":\")\ndf_19[\"GDP per capita\"].plot(color = \"r\", label = \"Economy (GDP per Capita)\", grid = True, alpha = 0.5, linestyle = \"-.\")\nplt.legend(loc = \"upper right\")\nplt.xlabel(\"x axis\")\nplt.ylabel(\"y axis\")\nplt.title(\"Line Plot\") # This part is visualizations part and we comparison data\n# Gives better results in terms of time in a line plot but now we hadn't time variables and we look counrty rank","fc11ef90":"sns.scatterplot(x = df_19[\"Freedom to make life choices\"], y = df_19[\"GDP per capita\"],hue = df_19[\"Score\"]);\n# We look these variables have how correlation. They have positive correlation\n# This plot best feature is the graph showing the correlation between 2 variables.","d4c682fc":"sns.pairplot(df_19); # These plots are scatter and histogram plots for all variables","71d86106":"df_19[\"Freedom to make life choices\"].plot(kind = \"hist\", bins = 50, figsize = (10,10)) \n# A histogram is a graph showing the distribution within a variable.\nplt.show()","af1475a0":"new_data = df_19.drop([\"Country or region\"],axis = 1) # And we create new data and we'll look score correlation","c29d1b8a":"new_data.head()","e024d1da":"new_data.describe().T","7d1695ea":"score = new_data[\"Score\"].mean()\ngdp = new_data[\"GDP per capita\"].median()\nsupport = new_data[\"Social support\"].mean()\nhealty = new_data[\"Healthy life expectancy\"].mean()\nfreedom = new_data[\"Freedom to make life choices\"].mean()\ngenerosity = new_data[\"Generosity\"].mean()\ncorruption = new_data[\"Perceptions of corruption\"].mean()","416e69fd":"new_data.columns[1:]","8d54a5e7":"dictionary = {\"Values Mean\" : [new_data[\"Score\"].mean(),new_data[\"GDP per capita\"].median(),new_data[\"Social support\"].mean(),\n                         new_data[\"Healthy life expectancy\"].mean(),new_data[\"Freedom to make life choices\"].mean(),\n                         new_data[\"Generosity\"].mean(),new_data[\"Perceptions of corruption\"].mean()],\n             \"Values Effect Rate (Score Effect)\": new_data.corr().drop([\"Overall rank\"])[\"Score\"]}","3c360666":"pd.DataFrame(dictionary) # We saw Score correlation ","8c154be5":"# Introduction\n\nThis dataset is information about world happiness. And we started data first review. This kernel is basic information to you.\n\n1. [Dataset Load & Look data](#1)\n1. [Basic Data Visualization](#2)\n1. [Create new data](#3)","3d590a80":"<a id = \"1\"><\/a>\n# Dataset Load & Look data","9fddb47c":"<a id = \"3\"><\/a>\n# Create New Data(For Correlation)","4f06dc23":"<a id = \"2\"><\/a>\n# Basic Data Visualization"}}