{"cell_type":{"7c054def":"code","edc15ebc":"code","820fc807":"code","8f8adec8":"code","ec62c620":"code","e12e9c27":"code","97f6148f":"code","e2724d5f":"code","aeb5351e":"code","5de4689d":"code","47b57a64":"code","1672f523":"code","5fe9c32d":"code","d0b01f4b":"code","cdfd9a7f":"code","fa0b9e58":"code","37dbdec7":"code","c3b41787":"code","c6278012":"code","c269e939":"code","5c55c8f0":"code","246dba44":"code","d9872537":"markdown","be11a875":"markdown","2799db32":"markdown","d93ee872":"markdown","dbe29d5a":"markdown","495bf006":"markdown","7b0c6656":"markdown","3c618190":"markdown","8c306154":"markdown","346f106a":"markdown","82bd3372":"markdown","02e942c4":"markdown","27cb6e6d":"markdown","79a86dec":"markdown"},"source":{"7c054def":"import pandas as pd\nimport matplotlib.pyplot as plt\nfrom IPython.display import display, HTML","edc15ebc":"data = pd.read_csv('..\/input\/results.csv')\ndata.head()","820fc807":"data.describe()","8f8adec8":"data.info()","ec62c620":"# converting the season to a single year \n# 2006-2007 season is represented as 2006 season\narr = list(data['season'])\nseason = list()\nfor val in arr:\n    temp = val.split('-')[0]\n    season.append(temp)\nseason\n\nseason = pd.to_datetime(season)\nseason.year\ndata['season'] = season.year","e12e9c27":"data.head()","97f6148f":"# Converting float to int\ndata['home_goals'] = data['home_goals'].astype(int)\ndata['away_goals'] = data['away_goals'].astype(int)\ndata.head()","e2724d5f":"data.info()","aeb5351e":"def get_team_home_stats(team,season):\n    \n    if(team in data['home_team'].values and season in data['season'].values):\n        \n        # Filetering the team\n        mask1 = data['home_team'] == team\n        mask2 = data['season'] == season\n        team_stats = data[mask1 & mask2]\n        \n        print(\"------------------------------------ OVERALL HOME STATS --------------------------------------\\n\")\n        print(team_stats.to_string(index=False))\n        print(\"\\n----------------------------------------------------------------------------------------------\\n\")\n        \n        # Home Wins\n        mask = team_stats['result'] == 'H'\n        home_wins = team_stats[mask]\n        print(\"------------------------------------ HOME WINS ----------------------------------------\\n\")\n        print(home_wins.to_string(index=False))\n        print()\n        goals_sc = home_wins['home_goals'].sum()\n        print('Goals Scored : ',goals_sc)\n        goals_cs = home_wins['away_goals'].sum()\n        print('Goals Conceded : ',goals_cs)\n        print(\"\\n--------------------------------------------------------------------------------------\\n\")\n        \n        # Home Draws \n        mask = team_stats['result'] == 'D'\n        home_draws = team_stats[mask]\n        print(\"------------------------------------ HOME DRAWS ---------------------------------------\\n\")\n        print(home_draws.to_string(index=False))\n        print()\n        goals_sc = home_draws['home_goals'].sum()\n        print('Goals Scored : ',goals_sc)\n        goals_cs = home_draws['away_goals'].sum()\n        print('Goals Conceded : ',goals_cs)\n        print(\"\\n---------------------------------------------------------------------------------------\\n\")\n        \n        # Home Losses\n        mask = team_stats['result'] == 'A'\n        home_lost = team_stats[mask]\n        print(\"------------------------------------ HOME LOSSES ----------------------------------------\\n\")\n        print(home_lost.to_string(index=False))\n        print()\n        goals_sc = home_lost['home_goals'].sum()\n        print('Goals Scored : ',goals_sc)\n        goals_cs = home_lost['away_goals'].sum()\n        print('Goals Conceded : ',goals_cs)\n        print(\"\\n-----------------------------------------------------------------------------------------\\n\")\n        \n        # Bar Representation\n        x = [\"Wins\",\"Draws\",\"Losses\"]\n        y = [home_wins.shape[0], home_draws.shape[0], home_lost.shape[0]]\n        plt.bar(x,y,color=['green', 'gray', 'red'])\n        title = team + \" (\" + str(season) + \") Home Stats\"\n        plt.title(title)\n        plt.show()\n        \n    else:\n        return 'Opps No Data Available'\n    ","5de4689d":"get_team_home_stats('Manchester United',2017)","47b57a64":"get_team_home_stats('Manchester City',2017)","1672f523":"get_team_home_stats('Liverpool',2017)","5fe9c32d":"get_team_home_stats('Chelsea',2017)","d0b01f4b":"get_team_home_stats('Tottenham Hotspur',2017)","cdfd9a7f":"get_team_home_stats('Manchester United',2013)","fa0b9e58":"get_team_home_stats('Manchester United',2011)","37dbdec7":"def get_team_away_stats(team,season):\n    \n    if(team in data['away_team'].values and season in data['season'].values):\n        \n        # Filetering the team\n        mask1 = data['away_team'] == team\n        mask2 = data['season'] == season\n        team_stats = data[mask1 & mask2]\n        \n        print(\"------------------------------------ OVERALL AWAY STATS ----------------------------------------\\n\")\n        print(team_stats.to_string(index=False))\n        print(\"\\n------------------------------------------------------------------------------------------------\\n\")\n        \n        # Away Wins\n        mask = team_stats['result'] == 'A'\n        away_wins = team_stats[mask]\n        print(\"------------------------------------ AWAY WINS ----------------------------------------\\n\")\n        print(away_wins.to_string(index=False))\n        print()\n        goals_sc = away_wins['away_goals'].sum()\n        print('Goals Scored : ',goals_sc)\n        goals_cs = away_wins['home_goals'].sum()\n        print('Goals Conceded : ',goals_cs)\n        print(\"\\n---------------------------------------------------------------------------------------\\n\")\n        \n        # Away Draws \n        mask = team_stats['result'] == 'D'\n        away_draws = team_stats[mask]\n        print(\"------------------------------------ AWAY DRAWS ----------------------------------------\\n\")\n        print(away_draws.to_string(index=False))\n        print()\n        goals_sc = away_draws['away_goals'].sum()\n        print('Goals Scored : ',goals_sc)\n        goals_cs = away_draws['home_goals'].sum()\n        print('Goals Conceded : ',goals_cs)\n        print(\"\\n-----------------------------------------------------------------------------------------\\n\")\n        \n        # Home Losses\n        mask = team_stats['result'] == 'H'\n        away_lost = team_stats[mask]\n        print(\"------------------------------------ AWAY LOSSES ----------------------------------------\\n\")\n        print(away_lost.to_string(index=False))\n        print()\n        goals_sc = away_lost['away_goals'].sum()\n        print('Goals Scored : ',goals_sc)\n        goals_cs = away_lost['home_goals'].sum()\n        print('Goals Conceded : ',goals_cs)\n        print(\"\\n-----------------------------------------------------------------------------------------\\n\")\n        \n        # Bar Representation\n        x = [\"Wins\",\"Draws\",\"Losses\"]\n        y = [away_wins.shape[0], away_draws.shape[0], away_lost.shape[0]]\n        plt.bar(x,y,color=['green', 'gray', 'red'])\n        title = team + \" (\" + str(season) + \") Away Stats\"\n        plt.title(title)\n        plt.show()\n        \n    else:\n        return 'Opps No Data Available'\n    ","c3b41787":"get_team_away_stats('Manchester United',2017)","c6278012":"get_team_home_stats('Arsenal',2017)","c269e939":"get_team_away_stats('Arsenal',2017)","5c55c8f0":"get_team_away_stats('Manchester United',2019)","246dba44":"get_team_home_stats('Real Madrid',2006)","d9872537":"## Arsenal Home and Away 2017-18 Season","be11a875":"# Manchester United 2017-18 Season","2799db32":"# Away Stats ","d93ee872":"# Manchester United 2011-12 Season\n","dbe29d5a":"# Manchester United 2013-14 Season","495bf006":"# Chelsea 2017-18 Season","7b0c6656":"- This notebook gathers insights to home and away performance of a team in a particular season (2006-07 to 2017-18)\n- Use the __team_home_stats(team_name, season)__ method to get the home performance insights of a team for that season\n    - __season__ needs to be the starting year, ex: for the __2015-16 season__ *season* value should be __2015__\n- Use the __team_away_stats(team_name, season)__ method to get the home performance insights of a team for that season\n- Few Samples are shown below for the 2017-18 season of various teams","3c618190":"# Manchester City 2017-18 Season","8c306154":"# Function to get the Home Stats","346f106a":"# Liverpool 2017-18 Season","82bd3372":"# Data Not Avaliable","02e942c4":"# English Premier League Team Stats\n","27cb6e6d":"# Spurs 2017-18 Season","79a86dec":"# Manchester United Away 2017-18"}}