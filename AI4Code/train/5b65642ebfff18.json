{"cell_type":{"0d6eee1c":"code","cfb6138b":"code","be86750f":"code","f9d45966":"code","e975c779":"code","2ea5453a":"code","7bf5f7b2":"code","039e8eeb":"code","7f5d0094":"code","75df6a1b":"code","1b522911":"code","dee90986":"code","575b6911":"code","a66083eb":"code","65d4b87a":"code","88eb6e07":"code","59cec2b4":"code","48d6783a":"code","3889e593":"code","06b64d14":"code","17668bf5":"code","39243fc9":"markdown","d979c27b":"markdown","159c1e73":"markdown","aad7f624":"markdown","ac9f460e":"markdown","7b16432d":"markdown","a17e800b":"markdown","54c42af9":"markdown","f3d21bba":"markdown","5578102d":"markdown","bba83eb5":"markdown","8cea549f":"markdown","25bad8ad":"markdown","16696c11":"markdown","3c2e5d86":"markdown","77cf2a80":"markdown","8ab1a307":"markdown","46911794":"markdown","5e344a43":"markdown","566bdf1d":"markdown","1c0a4e50":"markdown","059a90ce":"markdown","406d4a75":"markdown","673dded9":"markdown"},"source":{"0d6eee1c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","cfb6138b":"customer_df = pd.read_csv(\"..\/input\/customer-behaviour\/Customer_Behaviour.csv\")","be86750f":"customer_df.head(5)","f9d45966":"customer_df.info()","e975c779":"customer_df[\"Male\"] = pd.get_dummies(customer_df[\"Gender\"])[\"Male\"]","2ea5453a":"for col in [\"Gender\", \"User ID\"]:\n  customer_df.drop(col, axis=1, inplace=True)","7bf5f7b2":"sns.pairplot(customer_df)","039e8eeb":"sns.scatterplot(customer_df[\"Age\"], customer_df[\"EstimatedSalary\"], hue=customer_df[\"Purchased\"])","7f5d0094":"sns.scatterplot(customer_df[\"Age\"], customer_df[\"EstimatedSalary\"], hue=customer_df[\"Male\"])","75df6a1b":"sns.countplot(customer_df[\"EstimatedSalary\"], hue=customer_df[\"Purchased\"])","1b522911":"sns.countplot(customer_df[\"Male\"], hue=customer_df[\"Purchased\"])","dee90986":"X = customer_df.drop(\"Purchased\", axis=1).values\ny = customer_df[\"Purchased\"].values\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=47)","575b6911":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nscaler.fit(X_train)\nX_train_scaled = scaler.transform(X_train)\nX_test_scaled = scaler.transform(X_test)","a66083eb":"from sklearn.metrics import accuracy_score, classification_report, confusion_matrix","65d4b87a":"def evaluate_model_performance(y_test, y_pred):\n  print(accuracy_score(y_test, y_pred))\n  print(confusion_matrix(y_test, y_pred))","88eb6e07":"from sklearn.neighbors import KNeighborsClassifier","59cec2b4":"error_rate = []\n\nfor i in range(1,40):\n    model = KNeighborsClassifier(n_neighbors=i)\n    model.fit(X_train_scaled,y_train)\n    pred_i = model.predict(X_test_scaled)\n    error_rate.append(np.mean(pred_i != y_test))\n    \nplt.figure(figsize=(10,6))\nplt.plot(range(1,40),error_rate,color='blue', linestyle='dashed', marker='o',\n         markerfacecolor='red', markersize=10)\nplt.title('Error Rate vs. K Value')\nplt.xlabel('K')\nplt.ylabel('Error Rate')","48d6783a":"model = KNeighborsClassifier(n_neighbors = 5, metric = 'minkowski', p = 2)\nmodel.fit(X_train_scaled, y_train)\ny_pred = model.predict(X_test_scaled)\n\nevaluate_model_performance(y_test, y_pred)","3889e593":"from sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression()\nmodel.fit(X_train, y_train)\ny_pred = model.predict(X_test)\n\nevaluate_model_performance(y_test, y_pred)","06b64d14":"from sklearn.tree import DecisionTreeClassifier\nmodel = DecisionTreeClassifier()\nmodel.fit(X_train, y_train)\ny_pred = model.predict(X_test)\n\nevaluate_model_performance(y_test, y_pred)","17668bf5":"from sklearn.ensemble import RandomForestClassifier\nmodel = RandomForestClassifier()\nmodel.fit(X_train, y_train)\ny_pred = model.predict(X_test)\n\nevaluate_model_performance(y_test, y_pred)","39243fc9":"# Feature Scaling","d979c27b":" https:\/\/www.kaggle.com\/denisadutca\/customer-behaviour","159c1e73":"# Drop Unnecessary Features","aad7f624":"# Encoding Categorical Data","ac9f460e":"# Evaluating Model Performance","7b16432d":"First we need to choose the right value of K for fitting the model. We will use elbow method for choosing the value of K that minimizes test error.","a17e800b":"We will use KNNClassifier for this data as this has given the most accurate prediction. (95% accuracy)","54c42af9":"# Conclusion","f3d21bba":"# Splitting the data for training and testing","5578102d":"# Importing Modules","bba83eb5":"As per the graph, using k=5 should produce the minimum error.","8cea549f":"# Random Forest Classification","25bad8ad":"**Observation :**\n- The data is well balanced\n- Male customers have a little less purchase rate ","16696c11":"**Observation :**\n- Customer over the age of 40 tend to purchase the product irrespective of their salary\n- Customer having higher estimated salary tend to purchase the product irrespective of their age\n- Customer with lower salary (<80000) and age below 40 did not buy the product","3c2e5d86":"# Decision Tree Classification","77cf2a80":"# K-Nearest Neighbors Classifier","8ab1a307":"# Logistic Regression","46911794":"KNN requires scaling of data because KNN uses the Euclidean distance between two data points to find nearest neighbors. \nEuclidean distance is sensitive to magnitudes. \nThe features with high magnitudes will weight more than features with low magnitudes.\nRef Link : https:\/\/www.datacamp.com\/community\/tutorials\/k-nearest-neighbor-classification-scikit-learn\n\nStandardization is not required for logistic regression.\nThe main goal of standardizing features is to help convergence of the technique used for optimization. \nIf you use logistic regression with LASSO or ridge regression (as Weka Logistic class does) you should. \nRef Link : https:\/\/stats.stackexchange.com\/questions\/48360\/is-standardization-needed-before-fitting-logistic-regression\n\nDecision Tree and Random Forest do not require feature scaling as well.","5e344a43":"# About the data","566bdf1d":"# Loading the data","1c0a4e50":"# Source of this dataset","059a90ce":"**Observation :** Customer of both genders have similar salary in this data","406d4a75":"This is data of 400 clients of a company including a unique ID, the gender, the age of the customer and the salary. We want to predict whether a given customer purchased the product or not.","673dded9":"# Visualizing Data"}}