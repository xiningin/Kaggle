{"cell_type":{"8a71fb3f":"code","91d6fa84":"code","2cb02596":"code","ec264c75":"code","208c77fa":"code","e34f0f90":"code","6a4b1988":"code","539a3cd7":"code","88315ae2":"code","dd78bb75":"code","80a5fa75":"code","083b9be7":"code","4d86f648":"code","df60bfa0":"code","31be4fcd":"code","9c0c533e":"code","35dd4ea9":"code","d6ca1101":"code","c0eefa60":"code","ba0c3e0d":"code","0593887d":"code","290c98f7":"markdown","0e38eff3":"markdown","b4307eef":"markdown","e645c72b":"markdown","8687dc5d":"markdown","d7aa197b":"markdown","0f749a2e":"markdown","3e64976e":"markdown","dc6b14e2":"markdown","9c757feb":"markdown","0d051ac2":"markdown","4ddfbded":"markdown","009a0205":"markdown","aeab6c10":"markdown"},"source":{"8a71fb3f":"!pip install -q kaggle\n\n!mkdir -p ~\/.kaggle\n                                  \n!cp kaggle.json ~\/.kaggle\/      #   (!cp [   API token file name   ] ~\/.kaggle\/)\n\n!chmod 600 ~\/.kaggle\/kaggle.json","91d6fa84":"!kaggle datasets download -d jonathanoheix\/face-expression-recognition-dataset","2cb02596":"from zipfile import ZipFile\nzf = ZipFile('face-expression-recognition-dataset.zip', 'r')\nzf.extractall('\/content')\nzf.close()","ec264c75":"!pip install tensorflow-gpu","208c77fa":"!nvidia-smi","e34f0f90":"import tensorflow as tf\ntf.__version__","6a4b1988":"from tensorflow.keras.layers import Lambda,Input,Dense,Flatten\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.applications.efficientnet import EfficientNetB2\n\n","539a3cd7":"from tensorflow.keras.applications.efficientnet import preprocess_input\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator,load_img\nfrom tensorflow.keras.models import Sequential\nimport numpy as np\nfrom glob import glob","88315ae2":"IMAGE_SIZE=[224,224]\ntrain_path='images\/train'\n\nvalid_path='images\/validation'","dd78bb75":"eff=EfficientNetB2(input_shape=IMAGE_SIZE+[3],include_top=False)","80a5fa75":"for layer in eff.layers:\n  layer.trainable=False","083b9be7":"folders=glob('images\/train\/*')","4d86f648":"folders","df60bfa0":"x=Flatten()(eff.output)","31be4fcd":"prediction=Dense(len(folders),activation='softmax')(x)\n\nmodel=Model(inputs=eff.input,outputs=prediction)","9c0c533e":"model.summary()","35dd4ea9":"model.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])","d6ca1101":"train_datagen=ImageDataGenerator(rescale=1.\/255,shear_range=0.2,zoom_range=0.2,horizontal_flip=True)\n\ntest_datagen=ImageDataGenerator(rescale=1.\/255)","c0eefa60":"training_set=train_datagen.flow_from_directory(train_path,\n                                               target_size=(224,224),batch_size=32,class_mode='categorical')","ba0c3e0d":"test_set=test_datagen.flow_from_directory(valid_path,\n                                               target_size=(224,224),batch_size=32,class_mode='categorical')","0593887d":"r=model.fit_generator(training_set,validation_data=test_set,\n                      epochs=3,\n                      steps_per_epoch=len(training_set),\n                      validation_steps=len(test_set))","290c98f7":"# Face recognition with EfficientNetB2 :\n In this project we have taken a kaggle dataset to classify some human emotions.\n\nThe main motive of this project was to use the SOTA model produced by GOOGLE AI **EfficientNet** : *EfficientNetB2*.\n\n\nThe first work is we have docked the notebook with kaggle so that we can directly download the data straight into the collab notebooks directory. Then unzipped the folder and now we can use the data without downloading locally.","0e38eff3":"## Libraries:","b4307eef":"As we know this neural network has a super long neuron layers , we have to use gpu for running it conveniently.\nSo we are installing tensorflow gpu to run it swiftly.","e645c72b":"Now checking what type of gpu we have been alotted.","8687dc5d":"We just want to change the last layer as we want to classify the emotions with desirable classes.","d7aa197b":"We can see the model is huge. So we need a lot of time to run it.","0f749a2e":"# Run this work on google collab. \n# Or you change the path of the dataset and run it in kaggle.","3e64976e":"This took us around 2 hours when connected with gpu.\n\nand it seems that if you run it for 10 epochs you may get 92% accuracy or the validation set. So it certifies that the SOTA model works nicely.\n\n\nIf you love this project do leave a **star :)**\n\n","dc6b14e2":"As running many epoch can take the whole day we are only showing 3 epochs to let you see how the model is getting tuned with the dataset.","9c757feb":"As we are wanting it to be pretrained we are stopping the layers from training on this data.","0d051ac2":"This project has been made in Google Collab. So fork\/download it in google collab adn the run it nicely.\n\n# UPVOTE if you like this work  :)","4ddfbded":"Now adding the effnetb2.","009a0205":"Now checking the model.","aeab6c10":"Now making the datasets for training and testing."}}