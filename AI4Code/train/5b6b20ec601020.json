{"cell_type":{"24441d7e":"code","9210a36b":"code","d400cd32":"code","2ce6c37d":"code","d8aad5fe":"code","be3e569b":"code","6608fe5c":"code","21d4cc8f":"code","2346485f":"code","4ecf39b1":"code","82847851":"code","726c4614":"code","7a61bc11":"code","1594fee8":"code","3eed699f":"code","f72a4f71":"code","c99b5f6f":"code","ad3239c3":"code","505ab5aa":"code","3b2ce1b2":"code","b3e0d6de":"code","3fbe6844":"code","11b5adc8":"code","e6eda8c4":"code","c611986c":"code","4aea415e":"code","6109ea10":"code","e1bb8959":"code","4950f9e1":"code","96711836":"code","39437332":"code","a77fcd09":"code","be1145d8":"code","5104a74c":"code","cb83a8be":"code","10e35819":"code","268f1474":"code","f3666021":"code","2d5b6ef1":"code","fab4dae1":"code","6ff28101":"code","329938a8":"code","dca8fbbb":"code","355b404a":"code","50f136a9":"code","24be03da":"code","f93a278e":"markdown","d2064165":"markdown","a9d87d32":"markdown","8093534a":"markdown","25bfb9af":"markdown","f8c35d1d":"markdown","5476f7e6":"markdown","0ea202d4":"markdown","c9d99908":"markdown","b72f9cee":"markdown","d5916bf9":"markdown","8218a4bb":"markdown","793f5ea0":"markdown","05766dde":"markdown","f5e9f240":"markdown","2eb5718a":"markdown","3a256ddc":"markdown","8d1fe362":"markdown","cdc0cca5":"markdown"},"source":{"24441d7e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9210a36b":"# data analysis and wrangling\nimport pandas as pd\nimport numpy as np\nimport random as rnd\n\n# visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# Clustering\nfrom yellowbrick.cluster import KElbowVisualizer\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.cluster import AgglomerativeClustering","d400cd32":"df = pd.read_csv(\"..\/input\/customer-personality-analysis\/marketing_campaign.csv\", sep=\"\\t\")","2ce6c37d":"df.head()","d8aad5fe":"# check data type of all columns\ndf.info()","be3e569b":"# check which columns have null values, it seems only income has null values\ndf.isnull().sum()","6608fe5c":"# isolate null values to see if there is any relationship, but it doesnt seem like there is\nnull_income = df.loc[df.Income.isnull()]","21d4cc8f":"# fill in null income with the median income\nmed = df.Income.median()\ndf.Income.fillna(med, inplace=True)\ndf.isnull().sum()","2346485f":"#convert the column to datetime format\ndf['Dt_Customer'] = pd.to_datetime(df['Dt_Customer'], infer_datetime_format = True)","4ecf39b1":"#created an age column\ndf['Age']=2021-df['Year_Birth']","82847851":"#created a column showing the total amount a customer spent\ndf['TotalMnt'] = df.MntMeatProducts + df. MntWines + df.MntFruits + df.MntFishProducts + df.MntSweetProducts + df.MntGoldProds","726c4614":"#combined the kidhome and teenhome columns into one column that shows the number of children per household\ndf['children'] = df.Kidhome + df.Teenhome","7a61bc11":"#checks how much of a customer's income is spent purchasing these products\ndf['Income_to_spend'] = round(df['TotalMnt']\/df['Income'],3)","1594fee8":"#number of purchases the customer made\ndf['TotalNumPurchases'] = df.NumWebPurchases + df.NumCatalogPurchases + df.NumStorePurchases\n\n#number of purchases that were discounted\ndf['num_discounted'] = round(df['NumDealsPurchases']\/df['TotalNumPurchases'],3)\n\n#check which percent of purchases that were made per platform\ndf['web_to_total'] = round(df.NumWebPurchases\/df.TotalNumPurchases,3)\ndf['catalog_to_total'] = round(df.NumCatalogPurchases\/df.TotalNumPurchases,3)\ndf['Store_to_total'] = round(df.NumStorePurchases\/df.TotalNumPurchases,3)\n\n#fill the na values with 0 because if it is null then that means that there were no purchases for that customer, through that specific channel\ndf.fillna(0, inplace=True)","3eed699f":"#counts the number of campaigns that the customer accepted\ndf['num_cmp'] = df.AcceptedCmp1 + df.AcceptedCmp2 + df.AcceptedCmp3 + df.AcceptedCmp4 + df.AcceptedCmp5 + df.Response","f72a4f71":"#graph to see if there is a relationship between total amount spent and number of children\ndf.boxplot(column = 'TotalMnt', by = 'children')","c99b5f6f":"#graph to spot outliers\ndf.boxplot(column = 'Income')","ad3239c3":"#removed the one big outlier spotted\ndf=df.loc[df.Income<df.Income.max()]","505ab5aa":"#check the distribution of the income, seems relatively normal\nsns.histplot(df.Income)","3b2ce1b2":"#check the distribution of amount spent and it seems skewed\nsns.histplot(df.TotalMnt)","b3e0d6de":"#checked to see if education had a big impact on income and aside from the basic education level, it did no seem like it\nsns.boxplot(x=df.Education, y=df.Income)","3fbe6844":"#checked the income range between different marital_statuses\ndf.boxplot(column = 'Income', by = 'Marital_Status')","11b5adc8":"#spotted two odd entries\ndf.Marital_Status.unique()","e6eda8c4":"#check to see how many inputted those odd entries\ndf.Marital_Status.value_counts()","c611986c":"#Replaced alone with single, removed absurd and yolo, and combined married and together into one category\ndf['Marital_Status']=df.Marital_Status.replace({'Alone':'Single'})\ndf = df.drop(df[df['Marital_Status'] == 'Absurd'].index)\ndf = df.drop(df[df['Marital_Status'] == 'YOLO'].index)\ndf['Marital_Status'] = df.Marital_Status.replace({'Married':'Partner', 'Together':'Partner'})","4aea415e":"#created a column to check if someone is a parent and if they had a partner\ndf['isParent'] = df.children.apply(lambda x: 1 if x > 0 else 0)\ndf['withPartner'] = df.Marital_Status.apply(lambda x: 1 if x == 'Partner' else 0)\n\n#checks for whole family size\ndf['famsize'] = df.children + df.withPartner + 1","6109ea10":"#recheck now that we have removed the other categories\ndf.boxplot(column = 'Income', by = 'Marital_Status')","e1bb8959":"df.boxplot(column = 'TotalMnt', by = 'Marital_Status')","4950f9e1":"#checked for the distribution of age and spot any potential outliers\nsns.histplot(df.Age)","96711836":"#spotted an outlier and put an age cap to limit it \ndf = df.loc[df.Age < 100]","39437332":"#check for the relationship between total amount spent and total number purhcases\nsns.regplot(x = df.TotalMnt, y = df.TotalNumPurchases)","a77fcd09":"#check to see if the number of successful campaigns increased sales\nsns.barplot(y = 'TotalMnt', x = 'num_cmp', data = df)","be1145d8":"#drop redundant columns\nfin_df=df.drop([\"Year_Birth\", \"Z_CostContact\", \"Z_Revenue\",'Kidhome','Teenhome'], axis=1)\ndf=df.drop([\"Year_Birth\", \"Z_CostContact\", \"Z_Revenue\",'Kidhome','Teenhome'], axis=1)\nfin_df","5104a74c":"#Encode categorical data \nencode = LabelEncoder()\nfin_df['Education']=encode.fit_transform(fin_df['Education'])\nfin_df['Marital_Status']=encode.fit_transform(fin_df['Marital_Status'])\nfin_df","cb83a8be":"#Got an error about infinite values and I used this to check where the infinite values were\nnp.isinf(fin_df.iloc[:]).sum()","10e35819":"#replace infinite values with null and then drop the null rows\nfin_df.replace([np.inf, -np.inf], np.nan, inplace=True)\nfin_df.dropna(axis = 0,inplace=True)\ndf.replace([np.inf, -np.inf], np.nan, inplace=True)\ndf.dropna(axis = 0,inplace=True)\nnp.all(np.isfinite(fin_df))","268f1474":"#scale the values for kmeans clustering\nfeatures = ['Income', 'TotalMnt']\nfin_df2 = fin_df[features]\nfin_df2 = (fin_df2 - fin_df2.mean(axis=0)) \/ fin_df2.std(axis=0)\n#fin_df2 = (fin_df - fin_df.mean(axis=0)) \/ fin_df.std(axis=0)","f3666021":"#check the optimal amount of clusters\nElbow_M = KElbowVisualizer(KMeans(), k=10)\nElbow_M.fit(fin_df2)\nElbow_M.show()","2d5b6ef1":"#cluster using kmeans\nkmeans = KMeans(n_clusters=4, random_state=0)\nfin_df[\"Cluster\"] = kmeans.fit_predict(fin_df2)\ndf['Cluster']=fin_df['Cluster']","fab4dae1":"#chcek the distribution of the clusters\npl = sns.countplot(x=fin_df[\"Cluster\"])\npl.set_title(\"Distribution Of The Clusters\")\nplt.show()","6ff28101":"#check if there is a clear distinction between clusters with reference to income and total amount spent\npl = sns.scatterplot(data = fin_df,x=fin_df[\"TotalMnt\"], y=fin_df[\"Income\"],hue=fin_df[\"Cluster\"])\npl.set_title(\"Cluster's Profile Based On Income And Spending\")\nplt.legend()\nplt.show()","329938a8":"#identify the personal attributes of the clusters\nPersonal = [\"Age\", \"children\", \"famsize\", \"isParent\", \"withPartner\"]\n\nfor i in Personal:\n    plt.figure()\n    sns.jointplot(x=fin_df[i], y=fin_df[\"TotalMnt\"], hue =fin_df[\"Cluster\"], kind=\"kde\")\n    plt.show()","dca8fbbb":"#Used ratios to better compare the mode of purchase between the clusters\ntrend = [\"web_to_total\", \"catalog_to_total\", \"Store_to_total\", \"NumDealsPurchases\", \"TotalNumPurchases\"]\n\nfor i in trend:\n    plt.figure()\n    sns.boxenplot(y=fin_df[i], x =fin_df[\"Cluster\"])\n    plt.show()","355b404a":"#check whether the campaigns were effective\nsns.countplot(x=fin_df[\"num_cmp\"],hue=fin_df[\"Cluster\"])","50f136a9":"#check the amount to total ratio to be able to better compare product purchases between clusters\nproduct = [\"MntWines\", \"MntFruits\", \"MntMeatProducts\", \"MntFishProducts\",\"MntSweetProducts\", \"MntGoldProds\"]\n\nfor i in product:\n    plt.figure()\n    sns.boxenplot(y=(fin_df[i]\/fin_df['TotalMnt']),  x=fin_df[\"Cluster\"])\n    plt.show()","24be03da":"df.to_csv('\/kaggle\/working\/df.csv')","f93a278e":"# Overview of the data:\n\nI want to first examine the data and figure out what each columns means and how they relate to each other. I am going to be taking a look at their datatypes and check to see if there are any null values that I will have to cleanup.","d2064165":"### Attributes\n\n#### People\n\nID: Customer's unique identifier\n\nYear_Birth: Customer's birth year\n\nEducation: Customer's education level\n\nMarital_Status: Customer's marital status\n\nIncome: Customer's yearly household income\n\nKidhome: Number of children in customer's household\n\nTeenhome: Number of teenagers in customer's household\n\nDt_Customer: Date of customer's enrollment with the company\n\nRecency: Number of days since customer's last purchase\n\nComplain: 1 if the customer complained in the last 2 years, 0 otherwise\n\n#### Products\n\nMntWines: Amount spent on wine in last 2 years\n\nMntFruits: Amount spent on fruits in last 2 years\n\nMntMeatProducts: Amount spent on meat in last 2 years\n\nMntFishProducts: Amount spent on fish in last 2 years\n\nMntSweetProducts: Amount spent on sweets in last 2 years\n\nMntGoldProds: Amount spent on gold in last 2 years\n\n#### Promotion\n\nNumDealsPurchases: Number of purchases made with a discount\n\nAcceptedCmp1: 1 if customer accepted the offer in the 1st campaign, 0 otherwise\n\nAcceptedCmp2: 1 if customer accepted the offer in the 2nd campaign, 0 otherwise\n\nAcceptedCmp3: 1 if customer accepted the offer in the 3rd campaign, 0 otherwise\n\nAcceptedCmp4: 1 if customer accepted the offer in the 4th campaign, 0 otherwise\n\nAcceptedCmp5: 1 if customer accepted the offer in the 5th campaign, 0 otherwise\n\nResponse: 1 if customer accepted the offer in the last campaign, 0 otherwise\n\n#### Place\n\nNumWebPurchases: Number of purchases made through the company\u2019s website\n\nNumCatalogPurchases: Number of purchases made using a catalogue\n\nNumStorePurchases: Number of purchases made directly in stores\n\nNumWebVisitsMonth: Number of visits to company\u2019s website in the last month","a9d87d32":"It does not seem like the campaign were particularly effective. Most of the clusters did not take part in any of the campaigns. The one exception to this is cluster 2 where it is a bit more spread out and most of the cluster has taken part in 1-3 of the campaigns","8093534a":"These boxplot tell us the preferred method of purchase for the different clusters. We can see that the favored method of purchase for all clusters are through the store and those that prefer it more than the others are clusters 1 and 3. Second to that are web purchases which on average make up about 30% of the purchases for each cluster. The method that is least used is through catalog and clusters 1 and 3 purchase from catalogs significantly less so than the other 2 clusters. It seems most of the clusters take advantage of the deals, but cluster 0 and 3 are the one who are most likely to do so.","25bfb9af":"It does not seem like there is a difference in average income levels. There is a difference in range however, with widows having a smaller income range than the others.","f8c35d1d":"Based on these graphs, we can see that the ages seem to vary along with their marital status. The different clusters can have multiple children but those who spend more and earn more typically have less children.","5476f7e6":"cluster 0 - high income and medium expenses, varied ages, may or may not have kids, prefers stores, more liekly to take discounts\n\ncluster 1 - low income and low expenses, varied ages, most likely has kids, mainly buys from stores even more than the other clusters, \ndoes not buy from catalogs much\n\ncluster 2 - high income and high expenses, varied ages, most likely does not have kids, prefers stores, more likely to take part in campaigns\n\ncluster 3 - medium income and low expenses, varied ages, most likely has 1-2 children, does not buy from catalogs much, prefers stores, \nmore likely to buy discounted products","0ea202d4":"# Data Exploration and Visualization\nWith the null values filled in and the columns in their appropriate datatype we can now begin exploring the data and forming features. I will create some new features and create some graphs inbetween to visualize relationships and see what other features I might have to create.","c9d99908":"The distribution seems to be fairly even","b72f9cee":"This dataset contains various details about a company's customers. Analyzing the customers allows a company to figure out what buying habits they have and offer products or services that cater to the right customer. It allows a company to segment their customers and identify what segments they want to focus on, which then gives them the information to be more efficient with their oeprations. The goal of this proejct is to\n* Explore the data\n* Clean up any null values\n* Visualize the data and find relationships\n* Create new feautures\n* Cluster the customers based on certain features and create customer profiles","d5916bf9":"It looks like more successful campaigns lead to more sales up until a certain point, then it started to decrease.","8218a4bb":"For total amount spent, widows have the highest average expenditures, but those who have partners or are single, have the highest range.","793f5ea0":"They seem to have a strong correlation with more purchases leading to higher sales.","05766dde":"Now that our data has been encoded, we will now be clustering the customers by income and total amount spent. I decided to cluster using these features because it will allow us to clearly separate our customers depending on how much they earn and how much they spend. We can then analyze the other features in relation to those clusters to understand the characteristics of those that spend a lot, in order to come up with strategies that can increase the number of customers.","f5e9f240":"We can see here that we have 4 distinct clusters that describe the spending habits of the customers.\n\ncluster 0 - high income, medium expenditure\n\ncluster 1 - low income, low expenditure\n\ncluster 2 - high income, high expenditure\n\ncluster 3 - medium income, low expenditure","2eb5718a":"After visualizing and creating the features it looks like we can now proceed to clustering the customers and we can begin by encoding some of our categorical data","3a256ddc":"It seems that most of the clusters spend most of their money of wine, the one exception to this is cluster 1 who spent the least amount on wine. The second product the customers spent the most on were meats and most of the clusters hover around a similar percent. Cluster 1 seems to have a wide range when purchasing fruits and fish. Cluster 1 along with cluster 3 are also the ones that spend the most on gold compared to the others.","8d1fe362":"The distribution is relatively normal and is centered around 40 - 60 year olds. There is an outlier with some people who are older than 100.","cdc0cca5":"# Data Cleaning\nLuckily it seems that only the income column has null values, but asides from that the only other thing that we will have to change is to convert the Dt_customer column to a datetime type rather than an object type"}}