{"cell_type":{"a6a70b92":"code","d305bcff":"code","3c934ff7":"code","47fadfa8":"code","e81081db":"code","1d46c598":"code","2a7e8cca":"code","f51ceeff":"code","9369a658":"code","ed6e1ccf":"code","d3473822":"code","f988a23f":"code","1094c846":"code","6fe4b8a4":"code","39f25c46":"code","a011e9cb":"code","2279e39f":"code","30bcf940":"code","9a931cce":"code","0d4a2d87":"code","14a8a6c6":"code","c7908f3d":"code","4459fe7d":"code","513c6e54":"code","7865bda0":"code","bda1c32a":"code","628ccd6f":"code","9a827d31":"code","16241bd4":"code","e17cb2ec":"code","874b93d3":"code","957f5073":"code","d156e54a":"code","1cb22a77":"code","1335e56a":"code","dbd7d6a8":"code","7a6d5290":"code","2cc75626":"code","680ffc35":"code","a21f402f":"code","d5e01fca":"code","c7c0b517":"code","39a5678e":"code","2e237b9e":"code","0365f288":"code","ccaaaa68":"code","ba0ff88f":"code","48b3f106":"code","a8af2fbf":"code","4989f16b":"code","daafd89a":"code","8b9db02b":"code","21255b04":"code","e1926e9e":"code","8463cc81":"code","855142be":"code","d94ace1b":"markdown","8733283e":"markdown","beb0af8b":"markdown","b2a6d69d":"markdown","e54a6450":"markdown","954f6d18":"markdown","dee82984":"markdown","4393da9f":"markdown","45216692":"markdown","604541d3":"markdown","33879335":"markdown","85807c74":"markdown","ceccc02a":"markdown","02f10d69":"markdown","cab91257":"markdown","26e30ead":"markdown","56f69829":"markdown","1106369e":"markdown","afc0ffc8":"markdown","189f350b":"markdown","2e28e9d8":"markdown","eb24fe83":"markdown","f0569795":"markdown","b1c31cb2":"markdown","bc375c9c":"markdown","543cd517":"markdown","96e0b822":"markdown","6eafcf01":"markdown","9413bd57":"markdown","03f5e4dc":"markdown","03a08447":"markdown","226befe8":"markdown","cc4d6e60":"markdown","a2f1185b":"markdown","cf8a5310":"markdown","24b10262":"markdown","4f366135":"markdown","462d955e":"markdown","d50c3da9":"markdown","131fb9fc":"markdown","7265e05b":"markdown","fd97c70d":"markdown","defa47dc":"markdown","b80c993e":"markdown","9d8bcdb1":"markdown","be0922c3":"markdown","a2b984a3":"markdown","fdb78648":"markdown","23ace788":"markdown","11101776":"markdown","43c8efe5":"markdown","18e8f028":"markdown","3cc7653b":"markdown","124ac1d3":"markdown","f262d06c":"markdown","2cf6abc0":"markdown","b648540e":"markdown","64bdf8b1":"markdown","25220878":"markdown","9ea9c49c":"markdown","880005e9":"markdown","15a71aef":"markdown","675a548a":"markdown","ed7c3224":"markdown","2e602d2c":"markdown","17e5e60d":"markdown"},"source":{"a6a70b92":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d305bcff":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('whitegrid')","3c934ff7":"import warnings\nwarnings.filterwarnings(\"ignore\")","47fadfa8":"df=pd.read_csv('\/kaggle\/input\/fifa19\/data.csv')","e81081db":"df.head()","1d46c598":"df.info()","2a7e8cca":"df.drop(['Unnamed: 0', 'ID', 'Photo', 'Flag','Club Logo'], axis=1,inplace=True)","f51ceeff":"df['International Reputation'].fillna(1,inplace=True)\ndf['Weak Foot'].fillna(1,inplace=True)\ndf['Skill Moves'].fillna(1,inplace=True)\ndf['Height'].fillna(\"5'9\",inplace=True)\ndf['Weight'].fillna(\"198lbs\",inplace=True)\ndf['Crossing'].fillna(df['Crossing'].mean(),inplace=True)\ndf['Finishing'].fillna(df['Finishing'].mean(),inplace=True)\ndf['HeadingAccuracy'].fillna(df['HeadingAccuracy'].mean(),inplace=True)\ndf['ShortPassing'].fillna(df['ShortPassing'].mean(),inplace=True)\ndf['Volleys'].fillna(df['Volleys'].mean(),inplace=True)\ndf['Dribbling'].fillna(df['Dribbling'].mean(),inplace=True)\ndf['FKAccuracy'].fillna(df['FKAccuracy'].mean(),inplace=True)\ndf['LongPassing'].fillna(df['LongPassing'].mean(),inplace=True)\ndf['BallControl'].fillna(df['BallControl'].mean(),inplace=True)\ndf['Acceleration'].fillna(df['Acceleration'].mean(),inplace=True)\ndf['SprintSpeed'].fillna(df['SprintSpeed'].mean(),inplace=True)\ndf['Agility'].fillna(df['Agility'].mean(),inplace=True)\ndf['Balance'].fillna(df['Balance'].mean(),inplace=True)\ndf['Jumping'].fillna(df['Jumping'].mean(),inplace=True)\ndf['Stamina'].fillna(df['Stamina'].mean(),inplace=True)\ndf['Strength'].fillna(df['Strength'].mean(),inplace=True)\ndf['Position'].fillna('ST', inplace = True)\ndf['ShotPower'].fillna(df['ShotPower'].mean(),inplace=True)\ndf['Reactions'].fillna(df['Reactions'].mean(),inplace=True)\ndf['Preferred Foot'].fillna('Right', inplace = True)\ndf['Wage'].fillna('\u20ac200K', inplace = True)\ndf['Work Rate'].fillna('Medium\/Medium', inplace = True)\ndf['Marking'].fillna(df['Marking'].mean(), inplace = True)\ndf['StandingTackle'].fillna(df['StandingTackle'].mean(), inplace = True)\ndf['SlidingTackle'].fillna(df['SlidingTackle'].mean(), inplace = True)","9369a658":"df.fillna(0, inplace=True)","ed6e1ccf":"def extract(Value):\n    col = Value.replace('\u20ac', '')\n    if 'M' in col:\n        col = float(col.replace('M', ''))*1000000\n    elif 'K' in Value:\n        col = float(col.replace('K', ''))*1000\n    return float(col)","d3473822":"df['Value']=df['Value'].apply(extract)\ndf['Wage']=df['Wage'].apply(extract)","f988a23f":"plt.figure(figsize=(12,6))\nsns.countplot(df['Age'],palette='viridis')\nplt.title('Count Of Age')\nplt.xlabel('Age')\nplt.ylabel('Count')\nplt.show()","1094c846":"plt.figure(figsize=(12,6))\ndf['Nationality'].value_counts().head(50).plot.bar(cmap='inferno')\nplt.title('Count Of Nationality')\nplt.xlabel('Nationality')\nplt.ylabel('Count')\nplt.xticks(rotation=90)\nplt.show()","6fe4b8a4":"plt.figure(figsize=(12,6))\nsns.distplot(df['Overall'],color='k',kde=False)\nplt.title('Distribution Of Overall')\nplt.xlabel('Overall')\nplt.show()","39f25c46":"plt.figure(figsize=(12,6))\nsns.distplot(df['Potential'],kde=False,color='b')\nplt.title('Distribution Of Potential')\nplt.xlabel('Potential')\nplt.show()","a011e9cb":"plt.figure(figsize=(12,6))\nsns.countplot(df['Skill Moves'],palette='bone')\nplt.title('Count Of Skill Moves')\nplt.xlabel('Skill Moves')\nplt.ylabel('Count')\nplt.show()","2279e39f":"plt.figure(figsize=(12,6))\nsns.countplot(df['Work Rate'],palette='rocket')\nplt.title('Count Of Work Rate')\nplt.xlabel('Work Rate')\nplt.ylabel('Count')\nplt.show()","30bcf940":"plt.figure(figsize=(12,6))\nsns.countplot(df['Position'],palette='icefire_r')\nplt.title('Count Of Position')\nplt.xlabel('Position')\nplt.ylabel('Count')\nplt.show()","9a931cce":"col=df[['Age','Overall','BallControl','SprintSpeed','Agility','Balance',\n        'Acceleration','Stamina']]\nsns.pairplot(col)","0d4a2d87":"sns.set(palette='Dark2')\nsns.lmplot(x='Acceleration',y='SprintSpeed',data=df,scatter_kws={'color':'cyan','edgecolor':'blue','linewidth':'0.7'},\n           line_kws={'color':'black'})","14a8a6c6":"sns.lmplot(x='BallControl',y='Dribbling',data=df,col='Preferred Foot',\n           scatter_kws={'color':'cyan','edgecolor':'blue','linewidth':'0.7'},\n           line_kws={'color':'black'})","c7908f3d":"plt.figure(figsize=(9,9))\nsize=df['International Reputation'].value_counts()\nlabel=['1','2','3','4','5']\ncolors=plt.cm.Wistia(np.linspace(0, 1, 5))\nexplode=[0.1,0.1,0.2,0.6,1]\nplt.pie(size,labels=label,colors=colors,explode=explode,shadow=True)\nplt.title('International Reputation')\nplt.show()","4459fe7d":"plt.figure(figsize=(9,9))\nsize=df['Weak Foot'].value_counts()\nlabel=['3','2','4','5','1']\ncolors=plt.cm.Wistia(np.linspace(0, 1, 5))\nexplode=[0,0.04,0.06,0.2,0.6]\nplt.pie(size,labels=label,colors=colors,explode=explode,shadow=True)\nplt.title('Weak Foot')\nplt.show()","513c6e54":"size=df['Preferred Foot'].value_counts()\nlabel=['Right','Left']\ncolors=plt.cm.Wistia(np.linspace(0, 1, 5))\nexplode=[0.04,0.04]\nfig,ax=plt.subplots(1,2,figsize=(14,7))\n_=sns.countplot('Preferred Foot',data=df,ax=ax[0], palette='Wistia')\n_=plt.pie(size,labels=label,colors=colors,explode=explode,shadow=True,autopct='%.2f%%')\nplt.title('Preferred Foot')\nplt.show()","7865bda0":"plt.figure(figsize=(12,6))\nsns.countplot(df['Height'],palette='bone')\nplt.title('Count Of Height')\nplt.xlabel('Height')\nplt.ylabel('Count')\nplt.show()","bda1c32a":"plt.figure(figsize=(17,6))\nsns.countplot(df['Weight'],palette='bone')\nplt.title('Count Of Weight')\nplt.xlabel('Position')\nplt.ylabel('Count')\nplt.xticks(rotation=90)\nplt.show()","628ccd6f":"plt.figure(figsize=(12,6))\nsns.set_style('whitegrid')\nsns.distplot(df['Wage'],color='black')\nplt.title('Distribution of Wages')\nplt.xticks(rotation=90)\nplt.show()","9a827d31":"def technical(df):\n    return int(round((df[['Crossing','Dribbling','Finishing','HeadingAccuracy','LongShots','Marking',\n                          'FKAccuracy','LongPassing','ShortPassing','StandingTackle',\n                          'SlidingTackle','BallControl']].mean()).mean()))\ndef mental(df):\n    return int(round((df[['Aggression','Composure','Positioning','Vision',\n                          'Interceptions']].mean()).mean()))\n\ndef physical(df):\n    return int(round((df[['Acceleration','Agility','Balance','Jumping','Stamina',\n                          'Strength','Reactions','ShotPower']].mean()).mean()))","16241bd4":"df['Technical']=df.apply(technical,axis=1)\ndf['Mental']=df.apply(mental,axis=1)\ndf['Physical']=df.apply(physical,axis=1)","e17cb2ec":"player_data=df[['Name','Age','Nationality','Overall','Club','Technical','Mental',\n                'Physical','Position','Potential','Wage']]\nplayer_data.head()","874b93d3":"df.drop(['Technical','Mental','Physical'],axis=1,inplace=True)","957f5073":"player_data.iloc[player_data.groupby(player_data['Overall'])['Potential'].idxmax()][['Position',\n                                                                 'Name', 'Age', 'Club', 'Nationality',\n                                                                                      'Technical','Mental','Physical']].head(10)","d156e54a":"player_data.iloc[player_data.groupby(player_data['Position'])['Potential'].idxmax()][['Position',\n                                                                 'Name', 'Age', 'Club', 'Nationality',\n                                                                                      'Technical','Mental','Physical']].head(10)","1cb22a77":"player_data[player_data['Wage']>340000].sort_values(by='Wage',ascending=False).head(10)","1335e56a":"player_data.sort_values('Age',ascending=False).head(10)","dbd7d6a8":"player_data.sort_values('Age').head(10)","7a6d5290":"plt.figure(figsize=(16,12))\nsns.heatmap(df[['Age', 'Nationality', 'Overall', 'Potential', 'Club', 'Value','Wage', \n                'Special', 'Preferred Foot', 'Weak Foot', 'Skill Moves', 'Work Rate', 'Body Type',\n                'Height', 'Weight','Crossing', 'Finishing', 'HeadingAccuracy', 'ShortPassing', 'Volleys',\n                'Dribbling', 'Curve', 'FKAccuracy', 'LongPassing', 'BallControl',\n       'Acceleration', 'SprintSpeed', 'Agility', 'Balance',\n       'ShotPower', 'Jumping', 'Stamina', 'Strength', 'LongShots',\n       'Aggression', 'Interceptions', 'Positioning', 'Vision', 'Penalties',\n       'Composure', 'Marking', 'StandingTackle', 'SlidingTackle', 'GKDiving',\n       'GKHandling', 'GKKicking', 'GKPositioning', 'GKReflexes']].corr(),linecolor='black',linewidths=0.1)\nplt.show()","2cc75626":"df['Nationality'].value_counts().head(10)","680ffc35":"nation=('England','Germany','Spain','Argentina','France','Brazil','Italy','Columbia','Japan','Netherlands')\ndf_nation=df.loc[df['Nationality'].isin(nation) & df['Overall']]","a21f402f":"plt.figure(figsize=(12,6))\nsns.barplot(x=df_nation['Nationality'],y=df_nation['Overall'], palette='Wistia')\nplt.title('Position')\nplt.show()","d5e01fca":"nation=('England','Germany','Spain','Argentina','France','Brazil','Italy','Columbia','Japan','Netherlands')\ndf_nation=df.loc[df['Nationality'].isin(nation) & df['Potential']]\n\nplt.figure(figsize=(12,6))\nsns.barplot(x=df_nation['Nationality'],y=df_nation['Potential'], palette='inferno')\nplt.title('Nationality vs Potential')\nplt.xlabel('Nationality')\nplt.ylabel('Potential')\nplt.show()","c7c0b517":"nation=('England','Germany','Spain','Argentina','France','Brazil','Italy','Columbia','Japan','Netherlands')\ndf_nation=df.loc[df['Nationality'].isin(nation) & df['Overall']]\n\nplt.figure(figsize=(12,6))\nsns.lineplot(x=df_nation['Nationality'],y=df_nation['Age'])\nplt.title('Nationality vs Age')\nplt.xlabel('Nationality')\nplt.ylabel('Age')\nplt.show()","39a5678e":"nation=('England','Germany','Spain','Argentina','France','Brazil','Italy','Columbia','Japan','Netherlands')\nplayer_data_nation=player_data.loc[df['Nationality'].isin(nation) & player_data['Technical']]\n\nplt.figure(figsize=(12,6))\nsns.boxplot(x=player_data_nation['Nationality'],y=player_data_nation['Technical'], palette='viridis')\nplt.title('Nationality vs Technical Skills')\nplt.xlabel('Nationality')\nplt.ylabel('Technical Skills')\nplt.show()","2e237b9e":"nation=('England','Germany','Spain','Argentina','France','Brazil','Italy','Columbia','Japan','Netherlands')\nplayer_data_nation=player_data.loc[df['Nationality'].isin(nation) & player_data['Mental']]\n\nplt.figure(figsize=(12,6))\nsns.boxplot(x=player_data_nation['Nationality'],y=player_data_nation['Mental'], palette='viridis')\nplt.title('Nationality vs Mental Skills')\nplt.xlabel('Nationality')\nplt.ylabel('Mental Skills')\nplt.show()","0365f288":"nation=('England','Germany','Spain','Argentina','France','Brazil','Italy','Columbia','Japan','Netherlands')\nplayer_data_nation=player_data.loc[df['Nationality'].isin(nation) & player_data['Physical']]\n\nplt.figure(figsize=(12,6))\nsns.boxplot(x=player_data_nation['Nationality'],y=player_data_nation['Physical'], palette='plasma')\nplt.title('Nationality vs Physical Skills')\nplt.xlabel('Nationality')\nplt.ylabel('Physical Skills')\nplt.show()","ccaaaa68":"player_data[player_data['Nationality']=='India'][['Name','Age','Overall',\n                                                  'Technical','Mental',\n                                                  'Physical','Position']].sort_values(by='Age',ascending=False)","ba0ff88f":"df['Club'].value_counts().head(10)","48b3f106":"clubs=('CD Legan\u00e9s','Newcastle United','Cardiff City','Everton','TSG 1899 Hoffenheim','Southampton',\n      'Tottenham Hotspur','Valencia CF','Wolverhampton Wanderers')\ndf_club=df.loc[df['Club'].isin(clubs) & df['Overall']]\n\nplt.figure(figsize=(14,6))\nsns.barplot(x=df_club['Club'],y=df_club['Overall'],palette='twilight')\nplt.xticks(rotation=90)\nplt.title('Club vs Ovreall')\nplt.xlabel('Club')\nplt.ylabel('Overall')\nplt.show()","a8af2fbf":"clubs=('CD Legan\u00e9s','Newcastle United','Cardiff City','Everton','TSG 1899 Hoffenheim','Southampton',\n      'Tottenham Hotspur','Valencia CF','Wolverhampton Wanderers')\ndf_club=player_data.loc[player_data['Club'].isin(clubs) & player_data['Age']]\n\nplt.figure(figsize=(14,6))\nsns.lineplot(x=df_club['Club'],y=df_club['Age'],palette='plasma')\nplt.xticks(rotation=90)\nplt.title('Club vs Age')\nplt.xlabel('Club')\nplt.ylabel('Age')\nplt.show()","4989f16b":"clubs=('CD Legan\u00e9s','Newcastle United','Cardiff City','Everton','TSG 1899 Hoffenheim','Southampton',\n      'Tottenham Hotspur','Valencia CF','Wolverhampton Wanderers')\ndf_club=df.loc[df['Club'].isin(clubs) & df['Potential']]\n\nplt.figure(figsize=(14,6))\nsns.barplot(x=df_club['Club'],y=df_club['Potential'],palette='twilight')\nplt.xticks(rotation=90)\nplt.title('Club vs Potential')\nplt.xlabel('Club')\nplt.ylabel('Potential')\nplt.show()","daafd89a":"clubs=('CD Legan\u00e9s','Newcastle United','Cardiff City','Everton','TSG 1899 Hoffenheim','Southampton',\n      'Tottenham Hotspur','Valencia CF','Wolverhampton Wanderers')\ndf_club=player_data.loc[player_data['Club'].isin(clubs) & player_data['Technical']]\n\nplt.figure(figsize=(14,6))\nsns.boxplot(x=df_club['Club'],y=df_club['Technical'],palette='twilight')\nplt.xticks(rotation=90)\nplt.title('Club vs Technical Skills')\nplt.xlabel('Club')\nplt.ylabel('Technical Skills')\nplt.show()","8b9db02b":"clubs=('CD Legan\u00e9s','Newcastle United','Cardiff City','Everton','TSG 1899 Hoffenheim','Southampton',\n      'Tottenham Hotspur','Valencia CF','Wolverhampton Wanderers')\ndf_club=player_data.loc[player_data['Club'].isin(clubs) & player_data['Mental']]\n\nplt.figure(figsize=(14,6))\nsns.boxplot(x=df_club['Club'],y=df_club['Mental'],palette='plasma')\nplt.xticks(rotation=90)\nplt.title('Club vs Mental Skills')\nplt.xlabel('Club')\nplt.ylabel('Mental Skills')\nplt.show()","21255b04":"clubs=('CD Legan\u00e9s','Newcastle United','Cardiff City','Everton','TSG 1899 Hoffenheim','Southampton',\n      'Tottenham Hotspur','Valencia CF','Wolverhampton Wanderers')\ndf_club=player_data.loc[player_data['Club'].isin(clubs) & player_data['Physical']]\n\nplt.figure(figsize=(14,6))\nsns.boxplot(x=df_club['Club'],y=df_club['Physical'],palette='plasma')\nplt.xticks(rotation=90)\nplt.title('Club vs Physical Skills')\nplt.xlabel('Club')\nplt.ylabel('Physical Skills')\nplt.show()","e1926e9e":"clubs=('CD Legan\u00e9s','Newcastle United','Cardiff City','Everton','TSG 1899 Hoffenheim','Southampton',\n      'Tottenham Hotspur','Valencia CF','Wolverhampton Wanderers')\ndf_club=player_data.loc[player_data['Club'].isin(clubs) & player_data['Wage']]\n\nplt.figure(figsize=(14,6))\nsns.violinplot(x=df_club['Club'],y=df_club['Wage'],palette='coolwarm')\nplt.xticks(rotation=90)\nplt.title('Club vs Wage')\nplt.xlabel('Club')\nplt.ylabel('Wage')\nplt.show()","8463cc81":"player_features = ('Acceleration', 'Aggression', 'Agility', \n                   'Balance', 'BallControl', 'Composure', \n                   'Crossing', 'Dribbling', 'FKAccuracy', \n                   'Finishing', 'GKDiving', 'GKHandling', \n                   'GKKicking', 'GKPositioning', 'GKReflexes', \n                   'HeadingAccuracy', 'Interceptions', 'Jumping', \n                   'LongPassing', 'LongShots', 'Marking', 'Penalties')","855142be":"from math import pi\n\nidx = 1\nplt.figure(figsize=(15,45))\nfor position_name, features in df.groupby(df['Position'])[player_features].mean().iterrows():\n    top_features = dict(features.nlargest(5))\n    \n    # number of variable\n    categories=top_features.keys()\n    N = len(categories)\n\n    # We are going to plot the first line of the data frame.\n    # But we need to repeat the first value to close the circular graph:\n    values = list(top_features.values())\n    values += values[:1]\n\n    # What will be the angle of each axis in the plot? (we divide the plot \/ number of variable)\n    angles = [n \/ float(N) * 2 * pi for n in range(N)]\n    angles += angles[:1]\n\n    # Initialise the spider plot\n    ax = plt.subplot(9, 3, idx, polar=True)\n\n    # Draw one axe per variable + add labels labels yet\n    plt.xticks(angles[:-1], categories, color='grey', size=8)\n\n    # Draw ylabels\n    ax.set_rlabel_position(0)\n    plt.yticks([25,50,75], [\"25\",\"50\",\"75\"], color=\"grey\", size=7)\n    plt.ylim(0,100)\n    \n    plt.subplots_adjust(hspace = 0.5)\n    \n    # Plot data\n    ax.plot(angles, values, linewidth=1, linestyle='solid')\n\n    # Fill area\n    ax.fill(angles, values, 'b', alpha=0.1)\n    \n    plt.title(position_name, size=11, y=1.1)\n    \n    idx += 1 ","d94ace1b":"# Replacing '\u20ac' ","8733283e":"## Nationality vs Technical Skills","beb0af8b":"Most of the players prefer right foot over left","b2a6d69d":"## Finding correlation between selected columns\n\nHere I have taken few attributes that characterize players","e54a6450":"# This is one of my most detailed work\n\n### Please do upvote if you like it and do comment if and suggestion\/Improvements","954f6d18":"### What isthe count of Work Rate?","dee82984":"## Distribution by Potential Scores","4393da9f":"## Nationality vs Mental Skills","45216692":"### International Reputation of the players ","604541d3":"# Player DataFrame\n\nLet's define a new dataframe which consists of various attributes about a player","33879335":"### Weak Foot Rating","85807c74":"FIFA 19 is a football simulation video game developed by EA Vancouver as part of Electronic Arts' FIFA series. Announced on 6 June 2018 for its E3 2018 press conference, it was released on 28 September 2018 for PlayStation 3, PlayStation 4, Xbox 360, Xbox One, Nintendo Switch, and Microsoft Windows.It is the 26th installment in the FIFA series. As with FIFA 18, Cristiano Ronaldo initially as the cover athlete of the regular edition: however, following his unanticipated transfer from Spanish club Real Madrid to Italian side Juventus, new cover art was released, featuring Neymar, Kevin De Bruyne and Paulo Dybala.\n\nThe game features the UEFA club competitions for the first time, including the UEFA Champions League and UEFA Europa League.Martin Tyler and Alan Smith return as regular commentators, while the new commentary team of Derek Rae and Lee Dixon feature in the UEFA competitions mode.Composer Hans Zimmer and rapper Vince Staples recorded a new remix of the UEFA Champions League anthem specifically for the game. The character Alex Hunter, who first appeared in FIFA 17 returns for the third and final installment of \"The Journey\", entitled, \"The Journey: Champions\".In June 2019, a free update added the FIFA Women's World Cup as a separate game mode.\n\nThis is the last game in the FIFA series to be available on a seventh-generation console, and the last known game to be available for the PlayStation 3 worldwide.\n","ceccc02a":"## CLub vs Mental SKill","02f10d69":"### What is the preffreed foot of the players?","cab91257":"## CLub vs Technical SKill","26e30ead":"### What are the counts of various positions?","56f69829":"# Distribution by Skill Set","1106369e":"### Wage Distribution","afc0ffc8":"# Meeting the data","189f350b":"## Distribution by Age","2e28e9d8":"Here I have grouped the columns based on three skill factors:\n\n* Technical Skills\n* Mental Skills\n* Physical","eb24fe83":"# Feature Engineering","f0569795":"# Importing Essentials","b1c31cb2":"# Analyzing countries by skill set","bc375c9c":"### What is the count of Skill Moves?","543cd517":"# Spider Plot","96e0b822":"# Data visualization","6eafcf01":"# Analyzing Player Data","9413bd57":"# Analyzing Countries","03f5e4dc":"# FIFA-19 Data Analysis and Visualization","03a08447":"### What is the count of nationality?","226befe8":"## Dropping the not required columns","cc4d6e60":"## Age differences between the top 10 countries","a2f1185b":"Looks like the right footed players have more control over the ball while dribbling","cf8a5310":"### Best Players from each positions with their age, nationality, club and attributes based on their Overall Scores","24b10262":"## Potential Score of the top 10 countries","4f366135":"### Count of heights","462d955e":"### Distribution of Potential ","d50c3da9":"# Defining features of players","131fb9fc":"## Overall Score of the top 10 countries","7265e05b":"Looks like most of the players are 5'10 to 6'1 foot","fd97c70d":"### Count of weights","defa47dc":"### Let's pairplot","b80c993e":"# Grouping","9d8bcdb1":"We got a lot of cleanup to do","be0922c3":"### What is the count of ages?","a2b984a3":"1. Acceleration and SprintSpeed forms a linear graph\n2. Acceleration vs Agility, Balance vs Agility are pretty much correlated ","fdb78648":"Accelation is directly proportional to speed","23ace788":"# Some more exploration","11101776":"## Top 10 countries with most players","43c8efe5":"### Distribution of overall","18e8f028":"## Ball Control vs Dribbling","3cc7653b":"## Top 10 Clubs with the higheat numbers of Players","124ac1d3":"# Visualizing Club Data","f262d06c":"## Wage distribution of the top 10 clubs","2cf6abc0":"# Filling null values","b648540e":"Maximum players are in their early 30's.","64bdf8b1":"## Top 10 youngest players","25220878":" ## Top 10 Eldest players","9ea9c49c":"## Nationality vs Physical Skills","880005e9":"## What is their Overall distribution?","15a71aef":"## Top 10 highest paid players","675a548a":"### Best Players from each positions with their age, nationality, club based on their Position","ed7c3224":"## CLub vs Physical SKill","2e602d2c":"# Visualizing Indian players by Age","17e5e60d":"# Looking for relationships"}}