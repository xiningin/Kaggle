{"cell_type":{"f9d58c62":"code","7b8fe6bd":"code","afc10aa6":"code","a646c8c4":"code","41c0d885":"code","78c2b53e":"code","160cb709":"code","ffd5ff0e":"code","2f61444e":"code","0f249f1c":"code","23757a46":"code","c5fcc787":"code","c7ed590c":"code","d1414bcb":"code","1a2dc612":"code","62be5582":"code","cedf2453":"code","3d9386b3":"code","dc22d9e1":"code","9d956198":"code","65dfb1fb":"code","5b84c967":"code","320234d2":"code","e3537d3d":"code","0acb79fd":"markdown","a6cb564b":"markdown","7fc99b1b":"markdown","ddf3e5af":"markdown","910494ea":"markdown","fe553f60":"markdown","84dfbe84":"markdown","c8f3a8f7":"markdown","c5285645":"markdown","5ae00480":"markdown","c4938a2b":"markdown","e1751a12":"markdown","c832ce98":"markdown","3861e6ed":"markdown","3eadcdf4":"markdown","ad402d95":"markdown","a3adf4e0":"markdown","dac79897":"markdown","b7746579":"markdown","8412b12e":"markdown","02cb266a":"markdown","9675e192":"markdown","7975ceb0":"markdown","e580d727":"markdown"},"source":{"f9d58c62":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns","7b8fe6bd":"# Read in Data\ndf = pd.read_csv(\"..\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv\")","afc10aa6":"df = df.sample(10000, random_state=42)","a646c8c4":"# Look at first 5 lines of data\ndf.tail()","41c0d885":"df.neighbourhood_group.value_counts().plot(kind='bar')\n# or df.neighbourhood_group.value_counts().plot.bar()","78c2b53e":"# Horizontal Barplot\ndf.neighbourhood_group.value_counts().plot(kind='barh')","160cb709":"# In Seaborn\n\nsns.barplot(x = 'index', y ='neighbourhood_group', data = df.neighbourhood_group.value_counts().to_frame().reset_index())","ffd5ff0e":"df.neighbourhood_group.value_counts().plot(kind='line')","2f61444e":"df.neighbourhood_group.value_counts().plot(kind='area')","0f249f1c":"df.number_of_reviews.hist()","23757a46":"plt.hist(df.minimum_nights, bins = 100)\nplt.xlim(0,100)","c5fcc787":"# Seaborn boxplot\nsns.boxplot(y='number_of_reviews', data=df)","c7ed590c":"# Seaborn violinplot\nsns.violinplot(y='number_of_reviews', data=df)","d1414bcb":"plt.pie(df['neighbourhood_group'].value_counts(), autopct='%1.1f%%', startangle = 100)\nplt.axis('equal')","1a2dc612":"# Simple scatterplot with matplotlib # of reviews v.s. # of reviews \/ month \nplt.scatter(df.reviews_per_month, df.number_of_reviews)","62be5582":"# Seaborn scatterplot # of reviews v.s. availability \nsns.scatterplot(x='availability_365',y='number_of_reviews', data=df, alpha=0.5)","cedf2453":"# Seaborn scatterplot with color indicating different boroughs\nsns.scatterplot(x='availability_365',y='number_of_reviews', hue = 'neighbourhood_group' ,data=df, alpha=0.7)","3d9386b3":"df.groupby(['neighbourhood_group','room_type']).number_of_reviews.mean().unstack().plot(kind='bar',stacked=True)","dc22d9e1":"sns.pairplot(df.sample(100))","9d956198":"from pandas.plotting import scatter_matrix\n\npd.plotting.scatter_matrix(df.sample(100),figsize=(10,10))","65dfb1fb":"plt.figure(figsize=(10,10))\nsns.boxplot(x='neighbourhood_group', y='price',data=df)","5b84c967":"fig, ax = plt.subplots(1,1,figsize=(9,5))\n\nsns.kdeplot(df[df['neighbourhood_group']=='Manhattan']['price'], ax=ax) \nsns.kdeplot(df[df['neighbourhood_group']=='Brooklyn']['price'], ax=ax)\nplt.legend(['Manhattan', 'Brooklyn'])\nplt.xlim(0,1300)","320234d2":"# Scatter Plot with Plotly\n\nfrom sklearn.datasets import load_iris\nimport plotly.offline as py\nimport plotly.graph_objs as go\npy.init_notebook_mode(connected=True)\nfrom plotly import tools\nimport plotly.figure_factory as ff\n\niris = load_iris()\nX = iris.data[:, :2]  # we only take the first two features\nY = iris.target\n\n#x_min, x_max = X[:, 0].min() - .5, X[:, 0].max() + .5\n#y_min, y_max = X[:, 1].min() - .5, X[:, 1].max() + .5\n\ntrace = go.Scatter(x=X[:, 0],\n                   y=X[:, 1],\n                   mode='markers',\n                   marker=dict(color=np.random.randn(150),\n                               size=10,\n                               colorscale='Viridis',\n                               showscale=False))\n\nlayout = go.Layout(title='Training Points',\n                   xaxis=dict(title='Sepal length',\n                            showgrid=False),\n                   yaxis=dict(title='Sepal width',\n                            showgrid=False),\n                  )\n \nfig = go.Figure(data=[trace], layout=layout)\npy.iplot(fig)\n","e3537d3d":"plt.figure(figsize=(8,8))\ng = sns.FacetGrid(df, col='neighbourhood_group',col_wrap=3,col_order=['Manhattan','Brooklyn','Queens','Bronx','Staten Island'])\ng.map(sns.boxplot, 'room_type','price',palette='Set2')\nplt.tight_layout()","0acb79fd":"### Import Libraries and Read in Data","a6cb564b":"#### Line Charts","7fc99b1b":"Plotly is another popular library for visualization but the sourcecode is made of javascript which gives the \"interactivity\" to Plotly","ddf3e5af":"#### Scatter Matrix (similar to pairplot)","910494ea":"#### Area Chart","fe553f60":"numerical var v.s. numerical var","84dfbe84":"#### Plotly","c8f3a8f7":"#### Bar Plot","c5285645":"#### Pie Graph","5ae00480":"What is the number of listings in each borough?","c4938a2b":"### Univariate Viz","e1751a12":"#### Boxplot (or similar types)","c832ce98":"#### Faceting","3861e6ed":"look at the distribution of a certain numerical variable","3eadcdf4":"Only numerical features are considered","ad402d95":"### Bivariate or Multivariate","a3adf4e0":"### Advanced Viz","dac79897":"#### Bivariate KDE Plots","b7746579":"#### Stacked Barplots","8412b12e":"#### Scatterplot","02cb266a":"#### pairplot","9675e192":"KDE Plot described as Kernel Density Estimate is used for visualizing the Probability Density of a continuous variable","7975ceb0":"#### Multivariate Boxplots","e580d727":"#### Histogram \/ Density Plots"}}