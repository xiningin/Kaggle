{"cell_type":{"9cee123b":"code","1c98c506":"code","521543e2":"code","364a933b":"code","055ca475":"code","181c752f":"code","c899cac6":"code","b5cb3e67":"code","d0d6d91f":"code","79e898ed":"code","284f81c3":"code","b3a6d522":"code","44d2e251":"code","3034e5be":"code","72ae9eb4":"code","465382e5":"code","9a6ff366":"code","8b1a961c":"code","f1006fb8":"code","9c70dc8a":"code","b5abc191":"code","8875a9bf":"code","ed2e9a34":"code","84f169e1":"code","fd3e7a4e":"code","64fc6714":"code","dfacfcc7":"code","cf7219a4":"code","2a083e3b":"code","6767777e":"code","f3c476ba":"code","2c225aff":"code","28cb7544":"code","472ecab8":"code","66f62d9a":"code","7bd74264":"code","0fbdba30":"code","d721bfd5":"code","98efb5e1":"code","6d7d144e":"code","7dd3156f":"code","936c2dab":"code","22e6555f":"code","31b7f31b":"code","fd761189":"code","ef5bfbbc":"code","6113ffcf":"code","d0cc2d1d":"code","f7084c7b":"code","f8f37063":"code","2e5a6d68":"code","c8577d39":"code","e5dfdfa7":"code","68af7f8e":"code","f5c3fb6b":"code","0a411678":"code","90de210f":"markdown","345a414b":"markdown","64a008df":"markdown","77f152fc":"markdown","c447353b":"markdown","b1a9d6b0":"markdown","195fb062":"markdown","6dc1736a":"markdown","c7c08263":"markdown","54e44ac1":"markdown","2ec80b48":"markdown","fa3c47d8":"markdown","36b3cbf5":"markdown","cb38a475":"markdown","c4b52439":"markdown","45161222":"markdown","ee017300":"markdown","af802d61":"markdown","98ecba7a":"markdown","9c8774e9":"markdown","e65b1421":"markdown","9b796c85":"markdown","f50ab848":"markdown","938aff31":"markdown","b4f7de2c":"markdown","3f16aa40":"markdown","8acd1163":"markdown","464237a7":"markdown","b5618985":"markdown","874217bd":"markdown","6fcc0763":"markdown","49312481":"markdown","290e0dbd":"markdown","c0bea77a":"markdown","b2b6aa12":"markdown","21a36b35":"markdown","3f3ccc17":"markdown","4730db96":"markdown","e4f755cb":"markdown","aa0f161e":"markdown","d130e6e1":"markdown","c186d8db":"markdown","2e41b7d7":"markdown","db4e57ab":"markdown","56d58179":"markdown","78572ec4":"markdown","4fd4c77d":"markdown","a81c2ac6":"markdown","ede62194":"markdown","f2383bf2":"markdown","07f9661c":"markdown"},"source":{"9cee123b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","1c98c506":"path = '\/kaggle\/input\/trst1.xls'\ndf = pd.read_excel(path)","521543e2":"df","364a933b":"df.rename(columns={'Name of Countries': 'Country'},inplace = True)\ndf","055ca475":"# let's examine the types of the column labels\nall(isinstance(column, str) for column in df.columns)","181c752f":"# change the column label to string\ndf.columns = list(map(str, df.columns))\n# types of column labels\nall(isinstance(column, str) for column in df.columns)","c899cac6":"# Set the country name as index - useful for quick;y looking up countries using .loc method.\ndf.set_index('Country', inplace = True)\n# let's view the first five elements and see how the dataframe was changed\ndf.head()","b5cb3e67":"# add total column\ndf.loc[:,'Total'] = df.sum(axis=1)\ndf","d0d6d91f":"# finally let's create a list of years from 2001 - 2015\n# this will come in handy when we start plotting the data\n\nyears = list(map(str, range(2001, 2016)))\n\nyears","79e898ed":"%matplotlib inline\n\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\n\nmpl.style.use('ggplot')  # optional for ggplot-like style\n\n# check for the latest version of Matplotlib\nprint('Matpolotlib version: ', mpl.__version__)","284f81c3":"df.sort_values(by = 'Total', ascending = False, axis = 0,inplace = True)","b3a6d522":"df_tourist5 = df.iloc[2:7]\ndf_tourist5 = df_tourist5.drop(columns = 'Total')","44d2e251":"# transpose the data frame\ndf_tourist5 = df_tourist5[years].transpose()","3034e5be":"df_tourist5","72ae9eb4":"# Plotting the data\n\ndf_tourist5.index = df_tourist5.index.map(int)\ndf_tourist5.plot(kind = 'line',\n             figsize = (14,8))\nplt.title('Top 5 visiting nationalities to India')\nplt.xlabel('Years')\nplt.ylabel('Number of Tourists')\n\nplt.show()","465382e5":"df_tourist5.plot(kind = 'area',\n              stacked = False,\n              alpha = 0.35, # transparency coefficient, default 0.5, can set between 0 - 1\n              figsize =(20,10),\n             )\nplt.title('Tourists Trend of Top 5 Countries to India')\nplt.ylabel('Number of Tourists')\nplt.xlabel('Years')\n\nplt.show()","9a6ff366":"# selecting the dataset\ndf_jct = df.loc[['JAPAN', 'CHINA (MAIN)', 'Thailand'], years]","8b1a961c":"# Transpose dataframe\ndf_jct = df_jct.transpose()\ndf_jct.head()\ndf_jct","f1006fb8":"# lets get the x-tick values\ncount, bin_edges = np.histogram(df_jct, 15)\n# Unstacked histogram\ndf_jct.plot(kind = 'hist',\n            figsize = (15,8),\n            bins = 15,\n            alpha = 0.35,\n            stacked = False,\n            xticks = bin_edges,\n            color = ['coral', 'darkslateblue', 'mediumseagreen']\n           )\nplt.title('Histogram of Tourists from Japan, China and Thailand to India from 2001-2015')\nplt.ylabel('Number of Years')\nplt.xlabel('Number of Tourists')\n\nplt.show()","9c70dc8a":"# let's check the data set\ndf_tourist5","b5abc191":"# getting the x-tick values\ncount, bin_edges = np.histogram(df_tourist5, 10)\ndf_tourist5.plot(kind = 'hist',\n              figsize = (15,8),\n              bins = 10,\n              alpha = 0.65,\n              xticks = bin_edges,)\n\nplt.title('Histogram of Tourists from Top 5 countries to India from 2001-2015')\nplt.ylabel('No of Years')\nplt.xlabel('Number of Tourists')\nplt.show()","8875a9bf":"# Extracting the data for Pakistan\ndf_pak = df.loc['Pakistan', years]\ndf_pak","ed2e9a34":"# plot data\n\ndf_pak.plot(kind='bar', figsize = (10,6),rot = 90)\n\nplt.xlabel('Year')\nplt.ylabel('Number of Tourists')\nplt.title('Pakistani Tourists to India from 2001 to 2015')\n\n\n# Annotate arrow\nplt.annotate('', # s: str. will leave it blank for no text\n             xy =(10,50000), # place head of the arrow at point(year 2008, tourists 90000)\n             xytext = (7,90000), # place base of the arrow\n             xycoords = 'data', # will use the coordinate system of the object being annotated\n             arrowprops = dict(arrowstyle = '->', connectionstyle = 'arc3', color = 'blue', lw = 2 )\n\n            )\n\n# Annotate Text\nplt.annotate('2008 Mumbai Attack', # text to display\n             xy=(7.5,60000),                    # start the text at at point (year 2008 , pop 30)\n             rotation=-42,                  # based on trial and error to match the arrow\n             va='bottom',                    # want the text to be vertically 'bottom' aligned\n             ha='left',                      # want the text to be horizontally 'left' algned.\n            )\nplt.show()","84f169e1":"# Extracting the data\n\n# sort the data\ndf.sort_values(by = 'Total', ascending = True, axis = 0,inplace = True)\n\n# slice out last two rows and create a new dataframe\ndf_total = df.iloc[:-2]\n\n# selecting only the total column\ndf_total = df_total['Total']\n\n# see the data frame\ndf_total","fd3e7a4e":"# plotting the data\ndf_total.plot(kind = 'barh', figsize=(12,12), color = 'steelblue')\nplt.xlabel('Number of Tourists')\nplt.title('Foriegn tourists to India between 2001 - 2015')\n\n# annonate value labels to each country\nfor index, value in enumerate(df_total):\n    label = format(int(value),',') # format int with commas\n    \n    plt.annotate(label, xy=(value-990000, index-.1), color = 'White')\nplt.show()","64fc6714":"df","dfacfcc7":"df_total = df.iloc[:-2]","cf7219a4":"# Selecting the total column\ndf_tour5 = df_total['Total'].tail(5)\n\ndf_tour5","2a083e3b":"# plotting the data\n\ncolors_list = ['maroon', 'crimson', 'dodgerblue', 'aqua', 'darkgreen'] # colors list\nexplode_list = [0, 0, 0, 0.04, 0.04]\ndf_tour5.plot(kind = 'pie',\n              figsize = (15,6),\n              autopct = '%1.1f%%',\n              startangle = 90,\n              shadow = True,\n              labels = None,\n              pctdistance = 1.12,\n              colors = colors_list,\n              explode = explode_list\n             )\nplt.title('Tourists to India from Top 5 countries [2001 - 2015]', y = 1.12)\nplt.axis('equal')\n\nplt.legend(labels = df_tour5.index, loc = 'upper left')\n\nplt.show()","6767777e":"df_jct","f3c476ba":"df_jct.plot(kind = 'box', figsize = (8,6))\nplt.title('Box plot of Tourists from Japan, China and Thailand')\nplt.ylabel('Number of Tourists')\nplt.xlabel('Country')\nplt.show()","2c225aff":"# Horizontal Box plot\ndf_jct.plot(kind = 'box', figsize = (8,6), color = 'blue', vert = False)\nplt.title('Box plot of Tourists from Japan, China and Thailand')\nplt.xlabel('Number of Tourists')\nplt.ylabel('Country')\nplt.show()","28cb7544":"# sub-plot\n\nfig = plt.figure()\n\nax0 = fig.add_subplot(1, 2, 1)\nax1 = fig.add_subplot(1, 2, 2)\n\n# subplot 1: Box Plot\ndf_jct.plot(kind = 'box', color = 'blue', vert = False, figsize=(20,6), ax = ax0)\nax0.set_title('Toruists from Japan. China, and Thailand to India [2001 - 2015]')\nax0.set_xlabel('Number of Tourists')\nax0.set_ylabel('Country')\n# subplot 2: Line Plot\ndf_jct.plot(kind = 'line', figsize = (20,6), ax = ax1)\nax1.set_title('Toruists from Japan. China, and Thailand to India [2001 - 2015]')\nax1.set_xlabel('Number of Tourists')\nax1.set_ylabel('Year')\nplt.show()","472ecab8":"# extracting dataset\ndf","66f62d9a":"# drop the total column and save as df_tot\ndf_tot = df.drop(columns = 'Total')\ndf_tot","7bd74264":"# Now select the row named 'total'\ndf_tot = df_tot.iloc[[-1], :]\ndf_tot","0fbdba30":"# Transposing the data\ndf_tot = df_tot.transpose()","d721bfd5":"df_tot","98efb5e1":"# reseting the index\ndf_tot.reset_index(inplace = True)","6d7d144e":"# set columns name\ndf_tot.columns = ['year', 'total']","7dd3156f":"df_tot","936c2dab":"# Change the str value to numeric\ndf_tot[\"year\"] = pd.to_numeric(df_tot[\"year\"])\ndf_tot[\"total\"] = pd.to_numeric(df_tot[\"total\"])","22e6555f":"# plotting the data\n\ndf_tot.plot(kind = 'scatter' , x = 'year', y = 'total', figsize = (10, 6), color = 'darkblue')\n\nplt.title('Total Tourists to India [2001 - 2015]')\nplt.xlabel('Year')\nplt.ylabel('Number of Tourists')\nplt.show()","31b7f31b":"x = df_tot['year']\ny = df_tot['total']\n\nfit = np.polyfit(x, y, deg = 1)\n\nfit","fd761189":"df_tot.plot(kind = 'scatter', x = 'year', y = 'total', figsize = (10,6), color = 'darkblue')\n\nplt.title('Total Tourists to India [2001 - 2015]')\nplt.xlabel('Year')\nplt.ylabel('Number of Tourists')\n\n# plot line of best fit\nplt.plot(x, fit[0] * x + fit[1], color = 'red')\nplt.annotate('y={0:.0f} x + {1:.0f}'.format(fit[0], fit[1]), xy=(2004,6000000))\n\nplt.show()\n\n# print out the line of best fit\n'No. Tourists = {0:.0f} * Year + {1:.0f}'.format(fit[0], fit[1]) ","ef5bfbbc":"df","6113ffcf":"df_UK_USA = df.loc[['UK' , 'USA'], :]","d0cc2d1d":"df_UK_USA","f7084c7b":"# drop the total column\ndf_UK_USA = df_UK_USA.drop(columns = 'Total')","f8f37063":"# transposing the dataset\ndf_UK_USA = df_UK_USA.transpose()","2e5a6d68":"# normalized USA data\nnorm_usa = (df_UK_USA['USA'] - df_UK_USA['USA'].min()) \/ (df_UK_USA['USA'].max() - df_UK_USA['USA'].min())\n\n# normalized UK data\nnorm_uk = (df_UK_USA['UK'] - df_UK_USA['UK'].min()) \/ (df_UK_USA['UK'].max() - df_UK_USA['UK'].min())","c8577d39":"# let's label the index. This will automatically be the column name when we reset the index\ndf_UK_USA.index.name = 'Year'\n# reset index to bring the Year in as a column\ndf_UK_USA.reset_index(inplace=True)\ndf_UK_USA","e5dfdfa7":"# Change the str value to numeric\ndf_UK_USA[\"Year\"] = pd.to_numeric(df_UK_USA[\"Year\"])\ndf_UK_USA[\"USA\"] = pd.to_numeric(df_UK_USA[\"USA\"])\ndf_UK_USA[\"UK\"] = pd.to_numeric(df_UK_USA[\"UK\"])","68af7f8e":"# Plotting the data\n\n# USA\nax0 = df_UK_USA.plot(kind = 'scatter',\n                     x = 'Year',\n                     y = 'USA',\n                     figsize = (14,8),\n                     alpha = 0.5,\n                     color = 'cyan',\n                     s = norm_usa * 2000 + 10, # pass in weights\n                     xlim = (1999,2017)\n                    )\n\n# UK\nax0 = df_UK_USA.plot(kind = 'scatter',\n                     x = 'Year',\n                     y = 'UK',\n                     figsize = (14,8),\n                     alpha = 0.5,\n                     color = 'maroon',\n                     s = norm_uk * 2000 + 10, # pass in weights\n                     xlim = (1999,2017),\n                     ax = ax0\n                    )\n\nax0.set_ylabel('Number of Tourists')\nax0.set_title('Tourists from USA and UK from 2001 to 2015')\nax0.legend(['USA', 'UK'], loc = 'upper left', fontsize = 'x-large')","f5c3fb6b":"# Extracting the dataset for total tourists\ndf_tot","0a411678":"# Plotting the data\n\n# importing seaborn\nimport seaborn as sns\n\nplt.figure(figsize = (15,10))\n\nsns.set(font_scale = 1.5) # chaning the font scale\nsns.set_style('whitegrid') # change the background to white grid\nax = sns.regplot(x = 'year', y = 'total', data = df_tot, color = 'green')\n\nax.set(xlabel = 'Year', ylabel = 'Total Tourists')\nax.set_title('Total Tourists to India [2001 - 2015]')","90de210f":"A box plot is a way of statistically representing the distribution of the data through five main dimensions.\n* minimum - smallest number in the dataset,\n* first quartile - middle number between the minimum and the median\n* second quartile (median) - middle number of the sorted dataset\n* third quartile - middle number between median and maximum\n* maximum - highest number in the dataset\n\nTo make a box plot we use kind = box in plot. ","345a414b":"So here is our data of Foriegn Tourists arrive in India from top 18 source countries from 2001 to 2015. And if we look at the bottom of the dataset, we can see a row named 'others' , which is the total tourists combined from other countries.","64a008df":"# Bar Charts","77f152fc":"From the above Box Plot we can observe that,\nFor Japan:\n1. The minimum number of tourists is around 60000, maximum number is around 240000, and median number of immigrants is around 140000 - 150000.\n2. 25% of the years for period 2001 - 2015 had an annual tourists count of ~100000 or fewer (First quartile).\n3. 75% of the years for period 2001 - 2015 had an annual tourists count of ~200000 (Third quartile)\n\nFor China:\n1. The minimum number of tourists is around ~10000, maximum number is around 210000, and median number of immigrants is around ~10000 or fewer.\n2. 25% of the years for period 2001 - 2015 had an annual tourists count of ~40000 or fewer (First quartile).\n3. 75% of the years for period 2001 - 2015 had an annual tourists count of ~160000 or fewer. (Third quartile) \n\nFor Thailand:\n1. The minimum number of tourists is around 20000, maximum number is around 100000, and median number of immigrants is around ~60000.\n2. 25% of the years for period 2001 - 2015 had an annual tourists count of ~40000 or fewer (First quartile).\n3. 75% of the years for period 2001 - 2015 had an annual tourists count of ~100000 (Third quartile).","c447353b":"Using the quation of line of best fit, we can estimate the number of Tourists in 2016:\n\nNo. of Tourists = 406441 * Year -811044938\nNo. of Tourists = 406441 * 2016 -811044938\nNo. of Tourists = 8340118\n\nWhen compared to the acutals from \"https:\/\/en.wikipedia.org\/wiki\/Tourism_in_India\" , we see that nearly about 8800000 tourists came to india in 2016. Our estimated value of  8340118 is within ~5% of the actual number, which is pretty good considering we don't know exact numbers of 2016. \n\nAs a side note, we can observe that immigration took a dip around 2001 - 2002. In the end of 2001, Indian Parliament attacked by Terrorists, which causes India - Pakistan Military Stand-off in LOC. Also there's also a downfall of Indian Tourism happened in 2008. In 2008, Pakistan based terrorist group attack Mumbai and Kill more than 172 people including tourists from different Countries. Though India came back strong after few years. In 2017, more than 10 million tourists came to India, which is pretty good sign in terms of Tourism and Economy, and world relation.","b1a9d6b0":" ### **Prepareing the dataset **","195fb062":"A bar plot is a way of representing data where the length of the bars represents the magnitude\/size pf the feature\/variable. Bar graphs usually represent numerical and categorical variables grouoed in intervals.","6dc1736a":"Step 2: Create the normalized weights\n\nThere are several methods of normalizations in statistics, each with its own use, In this case, we will use feature scaling to bring all values into the range[0,1]. The general formula is:\n X' = (X - Xmin) \/ (Xmax - Xmin)\n \n Where X is an original value, X' is the normalized value. The formula sets the max value in the dataset to 1, and the sets the min value to 0. The rest of the datapoints are scaled to a value between 0 - 1 accordingly.","c7c08263":"A histogram is a way of representing the frequency distribution numeric dataset. The way it works is it partitions the x-axis into bins, assigns each data point in our dataset to a bin, and then counts the number of data points that have been assigned to each bin. So the y-axis is the frequency or the number of data points in each bin. Note that we can change the bin size and usually one needs to tweak it so that the distribution is displayed nicely.","54e44ac1":"Before visualizing the data we need to prepare the data for Visualization","2ec80b48":"Any kind of feedback is welcome with respect.\nBy - Ayan Chowdhury\nKaggle Id - https:\/\/www.kaggle.com\/ayanchowdhury7 ","fa3c47d8":"## Comparing the trend of top 5 countries from where tourists came to India","36b3cbf5":"The 2001\u20132002 India\u2013Pakistan standoff was a military standoff between India and Pakistan that resulted in the massing of troops on either side of the border and along the Line of Control (LoC) in the region of Kashmir. This was the second major military standoff between India and Pakistan following the successful detonation of nuclear devices by both countries in 1998, with the first being the Kargil War of 1999.\n\nThe military buildup was initiated by India responding to a terrorist attack on the Indian Parliament on 13 December 2001 (during which twelve people, including the five terrorists who attacked the building, were killed) and the Jammu and Kashmir Legislative Assembly on 1 October 2001.[6] India claimed that the attacks were carried out by two Pakistan-based terror groups fighting Indian administered Kashmir, the Lashkar-e-Taiba and Jaish-e-Mohammad, both of whom India has said are backed by Pakistan's ISI a charge that Pakistan denied. Later in the year 2019 Pakistan Prime Minister Imran Khan accepted that ISI did train terrorists to attack Indian Soil.\n\nThe 2008 Mumbai attacks (also referred to as 26\/11) were a series of terrorist attacks that took place in November 2008, when 10 members of Lashkar-e-Taiba, a terrorist organisation based in Pakistan, carried out 12 coordinated shooting and bombing attacks lasting four days across Mumbai. The attacks, which drew widespread global condemnation, began on Wednesday 26 November and lasted until Saturday 29 November 2008. At least 174 people died, including 9 attackers, and more than 300 were wounded.\n\nBecause of those action Indian Government steeped up and maintain a distance from Pakistan, But if you see the numbers India instead of these actions throughout these years Indian Goverment give Pakistani People Visa's due to differnet reasons such as Health visa, family reunion. And People of two countries came close with each other through out these years. We can quickly visualize this effort using a bar plot:","cb38a475":"Sometimes it is more practical to represent the data horizontally, especially if you need more room for labelling the bars. In horizontal bar graphs, the y-axis is used for labelling, and the length of bars on the x-axis corresponds to the magnitude of the variable being measured. ","c4b52439":"### Let's use a pie chart to explore total tourists came to india from 2001 to 2015 for top 5 countries.","45161222":"Importing modules for visualization","ee017300":"## Using a scatter plot let's visualize the trend of total foriegn tourists to India (all countries) for the years 2001 - 2015","af802d61":"The output is an array with the polynomial coefficients , highest powers first. Since we are plotting a linear regression y = a*x + b, our output has 2 elements [4.06441325e+05, -8.11044938e+08] with the slope in position 0 and intercept in position 1.","98ecba7a":"# Pie Charts","9c8774e9":"### Let's start off by analyzing the effect of Terrorists attack in India by Pakistan based Terror Group","e65b1421":"# Scatter Plot","9b796c85":"Seaborn is a Python visualization library based on matplotlib. It provides a high-level interface for drawing attractive graphics.","f50ab848":"As per reports of 2010 China , Thiland and Japan has most Buddhists population. Buddhism is an ancient Indian religion, which arose in and around the ancient Kingdom of Magadha (now in Bihar, India), and is based on the teachings of the Gautama Buddha(, c. 563\/480 \u2013 c. 483\/400 BCE) who was deemed a \"Buddha\" (\"Awakened One\"). Buddhism spread outside of Magadha starting in the Buddha's lifetime.\n\nSo It will be intersting to see the tourists trend to these three countries to India.","938aff31":"Looking at our dataset it's clear that if we want to get the data for top 5 tourist trending countries then we have to counting 5 after first 2 rows.","b4f7de2c":"# Regression Plots","3f16aa40":"# Step 3: Plot the data\n\n* To plot two different scatter plots i one plot, we can include the axes one plot into the other by passing it via the ax parameter.\n\n* We will also pass in th weights using the s parameter. Given that the normalize weights are between 0-1, they win't be visible on the plot. Therefore we will:\n  * multiple weights by 2000 to scale it up on the graph, and,\n  * add 10 to compensate for the min value (which has a 0 weight and     therefore scale it with x2000)","8acd1163":"we will sort the dataset on the total column that we created to\nget our top 5 Country from where tourists came to India","464237a7":"A bubble plot is a variation of the scatter plot that displays three dimensions of data (x,y,z). The datapoints are replaced with bubbles, and the size of the bubble is determined by the third variable 'z', also known as the weight. In maplotlib, we can pas in an array or scalar to the keyword's to plot(), that contains the weight of each point.\n\nwe will analyze USA and UK tourists to India","b5618985":"We will study the tourists from Japan, China, Thailand","874217bd":"# Line Plots","6fcc0763":"Area plots are stacked by default. And to produce a stacked area plot, each column must be either all positive or all negative values(any Nan values will defaulted to 0). To produce an unstacked plot, we have to pass, stacked = False.","49312481":"## Histogram for Tourists from Top 5 countries to India","290e0dbd":"### Vertical Bar Plot","c0bea77a":"# Area Plot","b2b6aa12":"# Histograms","21a36b35":"A scatter plot (2D) is a useful method of comparing variables against each other Scatter plots look similar to line plots in that they both map independent and dependent variables on a 2D graph. While the datapoints are connected together by a line a in a line plot, they are not connected in a scatter plot. The data in a scatter plot is considered to xpress a trend. With further analysis using tools like regression , we can mathematically calculate this relationship and use it to predict trends outside the dataset.","3f3ccc17":"Plotting the data","4730db96":"# Box Plots","e4f755cb":"Project Title : Visualize the data of Foreign Tourist Arrivals In India From Top Source Countries From 2001 To 2015\n\n\nCreator - Ayan Chowdhury","aa0f161e":"In vertical bar graphs, the x-axis is used for labelling, and the length of bars in the y-axis corresponds to the magnitude of the variable being measured. Verical bar graphs are particularly useful in analyzing time series data. One disadvantage is that they lack spacefor text labelling at the foot of each bar.","d130e6e1":"After completing this Project, I have learnd how to slice data from a dataframe, how to analyze,how to visualize the data to understand about the tourists trend and the events that has effect on it,","c186d8db":"In this project I will explore the datasets of the foreign tourists came to India from 2001 two 2015. \n\nPlots that are Plotted in this notebook:\n\n1. Top 5 visiting nationalities to India, Kind = 'line'\n2. Tourists Trend of Top 5 Countries to India, kind = 'area'\n3. Histogram of Tourists from Japan, China and Thailand to India        from 2001-2015, kind = 'histogram'\n4. Pakistani Tourists to India from 2001 to 2015, kind ='bar'\n5. Foriegn tourists to India between 2001 - 2015, kind = 'barh'\n6. Tourists to India from Top 5 countries 2001 - 2015, kind = 'pie'\n7. Box plot of Tourists from Japan, China and Thailand, kind = 'box'\n8. Horizontal Box plot of Tourists from Japan, China and Thailand, \n   kind = 'box'\n\n9. Subplot\n\n   9.1. Toruists from Japan. China, and Thailand to India 2001-             2015,kind = 'box'\n   \n   9.2. Toruists from Japan. China, and Thailand to India 2001-              2015,kind = 'line'\n   \n10. Total Tourists to India 2001 - 2015, kind = 'scatter'\n11. Tourists from USA and UK from 2001 to 2015, Bubble Plot '   \n12. Total Tourists to India 2001 - 2015, Regression Plot using           seaborn\n","2e41b7d7":"Extracting dataset for USA and Uk","db4e57ab":"A line chart or line plot is a type of plot which displays information as a series of data points called 'markers' connected by straight line segments. It is a  basic type of chart common in many fields. Use the line plot when we have a continuos data set. These are best suited for trend-based visualization of data over a period of time.","56d58179":" # Bubble Plots","78572ec4":"We will visualize the total tourists for each country came to india from 2001 to 2015 by a Horizontal Bar Plot. ","4fd4c77d":"Notice how the scatter plot does not connect the datapoints together. We can clearlyh observe an upward trend in the data: as the years go by, the total number of tourists increases. We can mathematically analize this upward trend using a regression line (line of best fit).\n\nSo let's try to plot a linear line of best fit. We will use it to predict the numbers of tourists in 2016.\n\nstep 1: Get the quation of line of best fit. We will use Numpy's polyfit() method by passing in the following.\n\nx - x-coordinates of the data\ny - y coodinates of the data\ndeg - Degree of fitting polynomial. 1 = linear, 2 = quadratic, and so on.","a81c2ac6":"### Horizontal  Bar Plot","ede62194":"Step 2: Plot the regression line on the scatter plot","f2383bf2":"## **Visualizing Data using Matplotlib**","07f9661c":"A pie chart is a circular graphic that displays numeric proportions by dividing a circle (or pie) into proportional slices. It is widely used in business and media. We can create pie charts in Matplotlib by passing in the kind = pie keyword."}}