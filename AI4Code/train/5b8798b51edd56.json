{"cell_type":{"126cff40":"code","648f6552":"code","7dd04260":"code","c4292ab3":"code","46dbedee":"code","87756d93":"code","d0453293":"code","0091ae0b":"code","ca217d45":"code","a5d0a2e4":"code","45649fd4":"code","e2cbeeaa":"code","640fa7b2":"code","1a703b5e":"code","9c792adf":"code","b192bd64":"code","f1cf31d9":"code","0054b313":"code","8aa1ddf2":"code","5fb4bebc":"code","76d0e330":"code","c5fec57e":"code","3678e419":"code","de2cfe95":"code","02aa7c30":"code","778cb1f1":"code","dd235360":"code","de96faf9":"code","2c25543a":"code","89a07247":"code","abf02452":"code","6a75ac69":"code","d5c290e9":"code","553c2666":"code","5bfd2b84":"code","afc24dc0":"code","a7c2ea86":"code","1eb76986":"code","3e83f203":"code","79792cb5":"code","0b979b22":"code","1a297e6b":"code","dac4c7b8":"code","195eee08":"code","97d80cdd":"code","a84d1cb4":"code","bd748d93":"code","a4785127":"code","d0ea3547":"code","87ad2901":"code","7577e56d":"markdown","5751355a":"markdown","304a974c":"markdown","22313712":"markdown","0444e2e6":"markdown","0fa9a2be":"markdown","81672089":"markdown","d7c6b915":"markdown","bf1b2ffd":"markdown","08df637f":"markdown","1c8a1d9a":"markdown","8a42c9f4":"markdown","65b4b77d":"markdown","aed374c0":"markdown","c25241ab":"markdown","40507f15":"markdown"},"source":{"126cff40":"import cv2\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef read_image_from_path(path):\n    img = cv2.imread(path)\n    return img\n\ndef read_sample():\n    img = cv2.imread(\"..\/input\/opencv-workshop-datafiles\/OpenCV_Workshop\/Nb_images\/sample.jpg\")\n    return img\n\ndef read_sample_gray():\n    img = cv2.imread(\"..\/input\/opencv-workshop-datafiles\/OpenCV_Workshop\/Nb_images\/sample_gray.jpg\", 0)\n    return img\n\ndef show_image(img, gray=False):\n    if gray:\n        plt.imshow(img, cmap='gray')\n    else:\n        plt.imshow(img[:, :, ::-1]) # bgr to rgb (Matplotlib assumes the image as RGB input)\n        \n    plt.show()\n    \n    \ndef convert_to_hsv(img):\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\n    return img\n","648f6552":"\"\"\" READING A SAMPLE GRAY IMAGE \"\"\"\nimg = read_sample_gray()\nprint(\"Image Shape - \", img.shape)","7dd04260":"show_image(img, gray=True)","c4292ab3":"\"\"\" SELECTING A SMALL PART OF THE IMAGE \"\"\"\nsmall_part = img[0:10, 0:10]\nshow_image(small_part, gray=True)","46dbedee":"small_part","87756d93":"\"\"\" READING A SAMPLE COLOUR IMAGE \"\"\"\n\nimg = read_image_from_path(\"..\/input\/opencv-workshop-datafiles\/OpenCV_Workshop\/Nb_images\/compvision.jpg\")\nprint(\"Image Shape - \", img.shape)\nshow_image(img)\n\n# ORDER OF CHANNELS OPENCV - BGR","d0453293":"small_part = img[100:110, 0:10]\nshow_image(small_part)","0091ae0b":"small_part","ca217d45":"# BLUE VALUES\nsmall_part[:, :, 0]","a5d0a2e4":"# GREEN VALUES\nsmall_part[:, :, 1]","45649fd4":"# RED VALUES\nsmall_part[:, :, 2]","e2cbeeaa":"small_hsv  = convert_to_hsv(small_part)\n\n# HUE values\nsmall_hsv[:, :, 0]","640fa7b2":"# SATURATION values\nsmall_hsv[:, :, 1]","1a703b5e":"# VALUE values\nsmall_hsv[:, :, 2]","9c792adf":"img = cv2.imread(\"..\/input\/opencv-workshop-datafiles\/OpenCV_Workshop\/Nb_images\/facerec.jpg\", 1)\nprint(\"Shape of the image - \", img.shape)\nshow_image(img)","b192bd64":"black_conv = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n\nshow_image(black_conv, gray=True)","f1cf31d9":"\"\"\" RESIZING THE IMAGE \"\"\"\n\nimg_scaled = cv2.resize(img, (400, 400))\n\nshow_image(img_scaled)","0054b313":"\"\"\" DEFINING THE TRANSLATION MATRIX \"\"\"\n\n# 50 pixels to right\n# 60 pixels down \n\nheight, width = img.shape[:2]\nprint(\"Height of image - \", height)\nprint(\"Width of image - \", width)\n\nM = np.float32([\n    [1, 0, 50],\n    [0, 1, 60]\n])\n\nM","8aa1ddf2":"\"\"\" APPLYING THE TRANSLATION \"\"\"\n\nimg_trans = cv2.warpAffine(img, M, dsize=(width, height))\n\nshow_image(img_trans)","5fb4bebc":"\"\"\" MAKING THE ROTATION MATRIX \"\"\"\n\n# 30 degrees counter clockwise from center of the image \n\ncentx, centy = width\/\/2, height\/\/2\n\nM = cv2.getRotationMatrix2D((centx, centy), 30, 1.0)\n\nM","76d0e330":"\"\"\" APPLY THE ROTATION \"\"\"\n\nimg_rotate = cv2.warpAffine(img, M, (width, height))\n\nshow_image(img_rotate)","c5fec57e":"\"\"\" DEFINING AN BLACK IMAGE \"\"\"\n\ninit_image = np.zeros((500, 500, 3), np.uint8)\n\nshow_image(init_image)","3678e419":"\"\"\" CHANGING IT TO DESIRED COLOR \"\"\"\n\nmy_image = init_image + np.array([255, 255, 255])  # broadcasting\n\nmy_image = my_image.astype(np.uint8)\n\nshow_image(my_image)","de2cfe95":"\"\"\" DRAWING A LINE \"\"\"\nline_img = cv2.line(my_image, (10, 10), (400, 400), (0, 255, 0 ), 2)\n\nshow_image(line_img)","02aa7c30":"\"\"\" DRAWING A RECTANGLE \"\"\"\n\nrect_img = cv2.rectangle(line_img, (10, 10), (400, 400), (0, 0, 255 ), 4)\n\nshow_image(rect_img)","778cb1f1":"\"\"\" DRAWING A CIRCLE \"\"\"\n\ncirc_img = cv2.circle(rect_img, (250, 100), 40, (255, 0, 0 ), 4) # change to -1 for filling\n \nshow_image(circ_img)","dd235360":"\"\"\" WRITING ON IMAGES \"\"\"\n\nfont = cv2.FONT_HERSHEY_COMPLEX\nwrite_img = cv2.putText(circ_img, \"Learning OpenCV\", (100, 450), font, 1, (255, 255, 0), 2)\n \nshow_image(write_img)","de96faf9":"\"\"\" READING THE SAMPLE IMAGE \"\"\"\n\nimg = cv2.imread(\"..\/input\/opencv-workshop-datafiles\/OpenCV_Workshop\/Nb_images\/sample.jpg\")\n\nshow_image(img)","2c25543a":"# kernel = np.ones((5, 5), dtype=np.uint8)\n\nblurimg = cv2.blur(img, (5,5))\n\nshow_image(blurimg)","89a07247":"# Read image\n\nimg = cv2.imread(\"..\/input\/opencv-workshop-datafiles\/OpenCV_Workshop\/Nb_images\/contprac.jpg\")\n\nshow_image(img)","abf02452":"# Convert to black and white\nbwimg = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n\nshow_image(bwimg, gray=True)","6a75ac69":"# Threshold\n\n_, threshed = cv2.threshold(bwimg, 200, 255, cv2.THRESH_BINARY)\n\nshow_image(threshed, gray=True)","d5c290e9":"# find contours\ncontours, hierarchy = cv2.findContours(threshed, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)\n\nprint(\"Number of contours found - \", len(contours))","553c2666":"contours[0]","5bfd2b84":"\"\"\" VISUALIZE CONTOURS\"\"\"\n\ncontimage = cv2.drawContours(img, contours, -1, (0,255,255), 3)\n\nshow_image(contimage)","afc24dc0":"\"\"\" FINDING CENTERS OF CONTOURS \"\"\"\n\ndef find_center(cnt):\n    \n    M = cv2.moments(cnt)\n    cX = int(M[\"m10\"] \/ M[\"m00\"])\n    cY = int(M[\"m01\"] \/ M[\"m00\"])\n    \n    return (cX, cY)\n\n\nfor cnt in contours:\n    cX, cY = find_center(cnt)\n    \n    cv2.circle(contimage, (cX, cY), 2, (255,255,0), -1)\n    \nshow_image(contimage)","a7c2ea86":"img = cv2.imread(\"..\/input\/opencv-workshop-datafiles\/OpenCV_Workshop\/Nb_images\/lena.jpg\", 0)\n\nshow_image(img, gray=True)","1eb76986":"edged = cv2.Canny(img, 30, 200)\n\nshow_image(edged, gray=True)","3e83f203":"\"\"\" HARRIS CORNER DETECTION \"\"\"\n\nimg = cv2.imread(\"..\/input\/opencv-workshop-datafiles\/OpenCV_Workshop\/Nb_images\/chessboard.png\")\n\ngray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n\nshow_image(gray, gray=True)","79792cb5":"# Detect corners \ncorns = cv2.cornerHarris(gray, 2, 3, 0.04)\n\ndilt = cv2.dilate(corns, None)\n\nshow_image(dilt, gray=True)","0b979b22":"# Drawing on the image and thresholding\n\nimg[dilt>0.01*dilt.max()]=[0,0,255]\n\nshow_image(img)","1a297e6b":"\"\"\" SHI-TOMASI CORNER DETECTION \"\"\"\n\nimg = cv2.imread(\"..\/input\/opencv-workshop-datafiles\/OpenCV_Workshop\/Nb_images\/chessboard.png\")\n\ngray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n\nshow_image(gray, gray=True)","dac4c7b8":"\"\"\" CORNER DETECTION AND VISUALIZATION \"\"\"\n\ncorners = cv2.goodFeaturesToTrack(gray,50,0.01,10)\ncorners = np.int0(corners)\n\nfor i in corners:\n    x,y = i.ravel()\n    cv2.circle(img,(x,y),3,(0,255,0),-1)\n    \n    \nshow_image(img)","195eee08":"face_cascade = cv2.CascadeClassifier('..\/input\/opencv-workshop-datafiles\/OpenCV_Workshop\/Data_files\/haarcascade_frontalface_default.xml')\neye_cascade = cv2.CascadeClassifier('..\/input\/opencv-workshop-datafiles\/OpenCV_Workshop\/Data_files\/haarcascade_eye.xml')\n\nimg = cv2.imread('..\/input\/opencv-workshop-datafiles\/OpenCV_Workshop\/Nb_images\/elonmusk.jpg')\n\ngray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n\nshow_image(img)","97d80cdd":"\"\"\" DETECTION OF FACES AND EYES \"\"\"\n\nfaces = face_cascade.detectMultiScale(gray, 1.3, 5)\n\nfor (x,y,w,h) in faces:\n    img = cv2.rectangle(img,(x,y),(x+w,y+h),(255,0,0),2)\n    roi_gray = gray[y:y+h, x:x+w]\n    roi_color = img[y:y+h, x:x+w]\n    eyes = eye_cascade.detectMultiScale(roi_gray)\n    for (ex,ey,ew,eh) in eyes:\n        cv2.rectangle(roi_color,(ex,ey),(ex+ew,ey+eh),(0,255,0),2)","a84d1cb4":"show_image(img)","bd748d93":"img = cv2.imread(\"..\/input\/opencv-workshop-datafiles\/OpenCV_Workshop\/Nb_images\/colors.jpg\")\n\nhsvimage = convert_to_hsv(img)\n\nshow_image(img)","a4785127":"RED_LOW = np.array([170, 50, 20])\nRED_HIGH = np.array([190, 255, 255])\n\nmask = cv2.inRange(hsvimage, RED_LOW, RED_HIGH)\n\nshow_image(mask, gray=True)","d0ea3547":"YELLOW_LOW = np.array([20, 100, 100])\nYELLOW_HIGH = np.array([30, 255, 255])\n\nmask = cv2.inRange(hsvimage, YELLOW_LOW, YELLOW_HIGH)\n\nshow_image(mask, gray=True)","87ad2901":"ORANGE_LOW = np.array([10, 100, 20])\nORANGE_HIGH = np.array([25, 255, 255])\n\nmask = cv2.inRange(hsvimage, ORANGE_LOW, ORANGE_HIGH)\n\nshow_image(mask, gray=True)","7577e56d":"<h2> Color Detection using Mask Segmentation <\/h2>","5751355a":"Why do you think the maximum value of the pixel is 255?","304a974c":"<h3> Colour images <\/h3>\n<h4> RGB <\/h4>","22313712":"<h3> Grayscale images <\/h3>","0444e2e6":"<h2> Canny Edge Detection <\/h2>","0fa9a2be":"<h3> Drawing and Writing on Image <\/h3>","81672089":"<h2> FACE DETECTION <\/h2>","d7c6b915":"<h3> Translating the image <\/h3>","bf1b2ffd":"<h4> HSV <\/h4>","08df637f":"<h2> Geometric Transformations on Images <\/h2>\n\n<h3> Scaling the image <\/h3>","1c8a1d9a":"<h2> PRACTICE ASSIGNMENT <\/h2>\n\n1. Try to detect other shapes in the image . How can you figure out the HSV Ranges?\n2. Draw contours on the obtained single shape mask.\n3. Can you find out which shape did the contour draw? (Hint: use cv2.ApproxPolyDP)","8a42c9f4":"Convert image to Black and white","65b4b77d":"<h2> Contour analysis of Image <\/h2>\n\n<h3> Finding and Drawing contours <\/h3>","aed374c0":"<h3> Rotating the Image <\/h3>","c25241ab":"<h3> Reading an Image <\/h3>\n\n<br>\n<strong> ..\/input\/opencv-workshop-datafiles\/OpenCV_Workshop\/Nb_images\/facerec.jpg <\/strong>","40507f15":"<h1 style=\"text-align:center; font-weight:bold; color:blue; text-decoration: underline;\"> OpenCV - Computer Vision Workshop (Skill up September) <\/h1>\n"}}