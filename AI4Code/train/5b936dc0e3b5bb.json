{"cell_type":{"15d948ef":"code","00b05b19":"code","139e97a8":"code","fc16915c":"code","b5282040":"code","8da43d17":"code","749a14cc":"code","40677fa3":"code","2c576b72":"code","ceee7001":"code","df10ad67":"code","606a1d6d":"code","445b53b3":"code","00c8896a":"code","a3eb33ee":"code","e9fd6a7f":"code","248fd268":"code","17012516":"code","65a00d36":"code","7eef5ecd":"code","a004b2c1":"code","b10574d1":"code","21d6a897":"markdown","5a111621":"markdown","d89f5ee7":"markdown","477450fa":"markdown"},"source":{"15d948ef":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom catboost import Pool, CatBoostRegressor","00b05b19":"raw_df = pd.read_csv(\"..\/input\/train.csv\")\ntest_data = pd.read_csv(\"..\/input\/test.csv\")","139e97a8":"raw_df.sort_values(by=\"first_active_month\", inplace=True)","fc16915c":"raw_df.head()","b5282040":"print(raw_df.nunique(), raw_df[\"first_active_month\"].unique())","8da43d17":"raw_df[\"first_active_month\"] = pd.to_datetime(raw_df[\"first_active_month\"], format=\"%Y-%m\")","749a14cc":"raw_df.sort_values(by=\"first_active_month\", inplace=True)","40677fa3":"raw_df.tail()","2c576b72":"# raw_df[\"first_active_month\"].sort_values().value_counts()","ceee7001":"def train_test_split(df):\n    X_train = df[df[\"first_active_month\"] < \"2017-11-01\" ]\n    X_val =  df[df[\"first_active_month\"] >= \"2017-11-01\" ]\n    y_train = X_train[\"target\"]\n    y_val = X_val[\"target\"]\n    X_train.drop(columns=\"target\", axis=1, inplace=True)\n    X_val.drop(columns=\"target\", axis=1, inplace=True)\n    X_train[\"first_active_month\"] = X_train[\"first_active_month\"].dt.strftime('%Y-%m-%d')\n    X_val[\"first_active_month\"] = X_val[\"first_active_month\"].dt.strftime('%Y-%m-%d')\n    return X_train, X_val, y_train, y_val\n    ","df10ad67":"X_train, X_val, y_train, y_val = train_test_split(raw_df)","606a1d6d":"print(X_train.shape, X_val.shape,y_train.shape, y_val.shape)","445b53b3":"X_train.fillna(0, inplace=True)\nX_val.fillna(0, inplace=True)","00c8896a":"X_train.info()","a3eb33ee":"train_pool = Pool(X_train, y_train,cat_features=[0,1])\ntest_pool = Pool(X_val, cat_features=[0,1])","e9fd6a7f":"model = CatBoostRegressor(depth=6, learning_rate=0.0001, iterations=500, loss_function='RMSE')","248fd268":"model.fit(train_pool,plot=True)","17012516":"preds = model.predict(test_pool)\nprint(preds)","65a00d36":"df = pd.DataFrame()\ndf[\"date\"] = X_val[\"first_active_month\"]\ndf[\"card_id\"] = X_val[\"card_id\"]\ndf[\"actual\"] = y_val\ndf[\"pred\"] = preds","7eef5ecd":"def plot(df):\n    df[\"date\"] = pd.to_datetime(df[\"date\"], format=\"%Y-%m\")\n    plt.plot(df[\"date\"], df[\"actual\"], label=\"actual\")\n    plt.plot(df[\"date\"], df[\"pred\"], label=\"predicted\")\n    plt.legend()\n    plt.xlabel('Date')\n    plt.ylabel('Prediction')\n    plt.xticks(rotation=30)\n    plt.yticks([x * 0.1 for x in range(-1, 1)])\n#     plt.axis(ymax=1.1)\n    plt.title(\"Compare\")\n    plt.show()","a004b2c1":"def plot_cards():\n    x = 0\n    for d in df['date'].unique(): \n        temp_df = df[df[\"date\"] == d]\n#         print(temp_df.shape)\n        plot(temp_df)\n#         if x == 10:\n#             break\n#         x = x + 1\n    ","b10574d1":"plot_cards()","21d6a897":"##### Convert first_active_month to datetime","5a111621":"### Let's train very basic baseline model with given features","d89f5ee7":"#### Train test split","477450fa":"### About data\nData seems to be of 75 months, starting 2011-11 to 2018-02\n* *feature_1* has 5 categories\n* *feature_2* has 3 categories\n* *feature_3* has 2 categories\n"}}