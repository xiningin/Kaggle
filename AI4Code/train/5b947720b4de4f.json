{"cell_type":{"457eecd9":"code","8ab7d41f":"code","7cd5613f":"code","9e97c0a2":"code","fd486712":"code","7f4e86cf":"code","5304615c":"code","ee26c2d9":"code","469495af":"code","83a9e5ca":"code","92015ec0":"code","960d3210":"code","50344151":"code","b498013f":"code","41c768a7":"code","f4860741":"code","73986ded":"code","f567c81e":"code","ada56a5c":"code","149f0fe9":"code","29d5912b":"code","be3d604b":"markdown","be8f712c":"markdown"},"source":{"457eecd9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8ab7d41f":"df_nsub =pd.read_csv('\/kaggle\/input\/netflix-subscription-price-in-different-countries\/Netflix subscription fee Dec-2021.csv')","7cd5613f":"df_npr = pd.read_csv('\/kaggle\/input\/netflix-subscription-price-in-different-countries\/netflix price in different countries.csv')","9e97c0a2":"df_nsub.head(2)","fd486712":"df_npr.head(2)","7f4e86cf":"df_nsub.count()","5304615c":"df_npr.count()","ee26c2d9":"df_nsub.isnull().sum()","469495af":"df_npr.isnull().sum()","83a9e5ca":"df_nsub.info()","92015ec0":"df_npr.info()","960d3210":"df_nsub['Country_code'].unique()","50344151":"#Renaiming the columns name\ndf_nsub = df_nsub.rename(columns = { 'Total Library Size' :' Library_size',\n                          'No. of TV Shows' : 'No_TV_Shows',\n                          'No. of Movies':'No_Movies',\n                          'Cost Per Month - Basic ($)':'Basic_Cost_Per_Month',\n                          'Cost Per Month - Standard ($)':'Standard_Cost_Per_Month',\n                          'Cost Per Month - Premium ($)':'Premium_Cost_Per_Month'\n})","b498013f":"df_nsub.head()","41c768a7":"#check correlation of each variable\ncorr = df_nsub.corr()","f4860741":"#HeatMap\nplt.figure(figsize = (12,7))\nsns.heatmap(corr,annot = True, linewidth = 1)","73986ded":"#Checking number of country code \n#pd.set_option(\"display.max_rows\", None)\ndf_nsub['Country_code'].value_counts()","f567c81e":"df_nsub.hist(bins=20, figsize=(15,10))","ada56a5c":"#Visulazing top 10 county based on total Basic cost per months\nplt.figure(figsize = (20,10))\n\ntop_10_country = df_nsub['Country'][:10]\ngraph = df_nsub.groupby(top_10_country)['Basic_Cost_Per_Month'].sum().sort_values(ascending = True).plot(kind = 'bar',color = 'fuchsia')\ngraph.set_xticklabels(graph.get_xticklabels(), rotation = 45)\n\nplt.title('Top 10 of Country based on Total Basic Cost Per Month', fontsize = 10, pad = 10)\nplt.xlabel('Country', fontsize = 10)\nplt.ylabel('Total Basic Cost Per Month ($)', fontsize = 12)\nplt.show()","149f0fe9":"#Visulazing top 30 county based on total Standard Cost Per Month\nplt.figure(figsize = (20,10))\n\ntop_10_country = df_nsub['Country'][:10]\ngraph = df_nsub.groupby(top_10_country)['Standard_Cost_Per_Month'].sum().sort_values(ascending = True).plot(kind = 'bar',color = 'lime')\ngraph.set_xticklabels(graph.get_xticklabels(), rotation = 45)\n\nplt.title('Top 10 of Country based on Total Standard Cost Per Month', fontsize = 10, pad = 10)\nplt.xlabel('Country', fontsize = 10)\nplt.ylabel('Total Standard Cost Per Month ($)', fontsize = 12)\nplt.show()","29d5912b":"#Visulazing top 10 county based on total Premium Cost Per Month\nplt.figure(figsize = (20,15))\n\ntop_10_country = df_nsub['Country'][:10]\ngraph = df_nsub.groupby(top_10_country)['Premium_Cost_Per_Month'].sum().sort_values(ascending = True).plot(kind = 'bar',color = 'aqua')\ngraph.set_xticklabels(graph.get_xticklabels(), rotation = 45)\n\nplt.title('Top 10 of Country based on Total Premium Cost Per Month', fontsize = 15, pad = 10)\nplt.xlabel('Country', fontsize = 15)\nplt.ylabel('Total Premium Cost Per Month ($)', fontsize = 15)\nplt.show()","be3d604b":"### Data Visualization","be8f712c":"## Exploratory Data Analysis"}}