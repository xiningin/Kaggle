{"cell_type":{"5b646ca1":"code","5364af88":"code","f99d691d":"code","fe7d8a91":"code","4430134a":"code","a5c152d0":"code","a1d85c86":"code","23d89441":"code","0f70fe69":"code","c030b5f8":"code","e734f4a2":"code","295a1e3c":"code","a18d8ac8":"code","a4aa0fbc":"markdown","a11fd7df":"markdown","81acfa75":"markdown","a978fe86":"markdown","922aaa17":"markdown","e9b9209d":"markdown","418cc783":"markdown","af3ce2b2":"markdown","95cfa574":"markdown","7db62090":"markdown","68204772":"markdown"},"source":{"5b646ca1":"import pandas as pd\nimport numpy as np\n\n# ploting\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\n# preprocessing\nfrom sklearn.impute import KNNImputer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\n\n# machine learning\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import RandomForestClassifier\n%matplotlib inline\n\n#metrics\nfrom sklearn.metrics import classification_report, confusion_matrix,accuracy_score","5364af88":"df = pd.read_csv('\/kaggle\/input\/water-potability\/water_potability.csv')","f99d691d":"df.head()","fe7d8a91":"df.info()","4430134a":"plt.figure(figsize=(16, 9))\nsns.heatmap(df.isna(), cmap='viridis')","a5c152d0":"px.pie(df['Potability'].value_counts(), values='Potability', names=df['Potability'].value_counts().index, template='ggplot2')","a1d85c86":"#corralation between features\nplt.figure(figsize=(16, 9))\nsns.heatmap(df.corr(), annot=True, linewidths=.3)","23d89441":"sns.set_style(\"whitegrid\")\nfig, axes = plt.subplots(3, 3, figsize=(24,12))\nrow = 0\nfor col, column in enumerate(df.columns[:-1]): \n\n    sns.kdeplot(ax=axes[row][col % 3], x=column, data=df.loc[df['Potability']==1], label='Potability 1')\n    sns.kdeplot(ax=axes[row][col % 3], x=column, data=df.loc[df['Potability']==0], label='Potability 0')\n    if col % 3 == 2:\n        row += 1","0f70fe69":"df.dropna(inplace=True)","c030b5f8":"# set X,y then split\nX = df.drop('Potability', axis=1)\ny = df['Potability']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=101)","e734f4a2":"scaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","295a1e3c":"def classify(X_train, y_train, X_test, y_test):\n    param_grid = {'C': [0.1,1, 10, 100, 1000], 'gamma': [1,0.1,0.01,0.001,0.0001], 'kernel': ['rbf']} \n    rfc_param_grid = {'criterion':['gini', 'entropy'],\n                'n_estimators': [100, 200, 300, 500],\n                'max_features': ['auto', 'sqrt', 'log2'],\n                     'bootstrap': [True, False]}\n\n    classifiers = [(RandomForestClassifier(criterion='entropy', n_estimators=200, max_features='auto'), 'RFC'),\n                (LogisticRegression(), 'Logistic Regression'),\n                  (DecisionTreeClassifier(), 'Decision Tree Classifier'),\n                   (GridSearchCV(SVC(),param_grid,refit=True,verbose=0, n_jobs=-1), 'Grid Search CV'),\n                  (KNeighborsClassifier(n_neighbors=1), 'KNN'),\n                   ]\n    for classifier, name in classifiers:\n        classifier.fit(X_train, y_train)\n        pred = classifier.predict(X_test)\n        print('-------',name, '-------')\n        print(classification_report(y_test, pred))\n        print(accuracy_score(y_test, pred))\n        print('------------------------------------------')","a18d8ac8":"classify(X_train, y_train, X_test, y_test)","a4aa0fbc":"**We can fill null variables using KNNImputer, but there is not much corrolation between features so we can just drop the null values**","a11fd7df":"**There is not much corralation between features and target(Potability)**","81acfa75":"**Random Forest Classifier and SVC has %70 accuracy**","a978fe86":"**We can see that from heatmap; ph, Sulfate and Trihalomethanes have null values**","922aaa17":"# Machine Learning ","e9b9209d":"# Preprocessing","418cc783":"# Water Quality using LightGBM","af3ce2b2":"**---- LogisticRegression, DecisionTreeClassifier, SVC, KNeighborsClassifier,RandomForestClassifier**","95cfa574":"There is not much difference in features according to kde plots","7db62090":"**Potability is not much balanced**","68204772":" **Data Visulization**"}}