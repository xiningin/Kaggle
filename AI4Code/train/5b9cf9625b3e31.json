{"cell_type":{"fcf17478":"code","a4e6ad6c":"code","362bae9d":"code","a477e5e1":"code","2b39ae06":"code","d1a9e048":"code","224cbbb5":"code","cae0fe30":"code","19ed277c":"code","52e4f794":"code","f348dc69":"code","7e8ffde8":"code","50bee593":"code","2db4ac04":"code","1e4ad9ff":"markdown"},"source":{"fcf17478":"!pip install xgboost\n\nimport numpy as np\nimport pandas as pd\n\nfrom sklearn.datasets import load_iris\nimport xgboost as xgb\nfrom sklearn.metrics import accuracy_score\n\n","a4e6ad6c":"train= pd.read_csv('..\/input\/siim-isic-melanoma-classification\/train.csv')\ntest= pd.read_csv('..\/input\/siim-isic-melanoma-classification\/test.csv')\nsub   = pd.read_csv('..\/input\/siim-isic-melanoma-classification\/sample_submission.csv')\ntrain.head()\n\ntrain.target.value_counts()\n","362bae9d":"train['sex'] = train['sex'].fillna('na')\ntrain['age_approx'] = train['age_approx'].fillna(0)\ntrain['anatom_site_general_challenge'] = train['anatom_site_general_challenge'].fillna('na')\n\ntest['sex'] = test['sex'].fillna('na')\ntest['age_approx'] = test['age_approx'].fillna(0)\ntest['anatom_site_general_challenge'] = test['anatom_site_general_challenge'].fillna('na')","a477e5e1":"train['sex'] = train['sex'].astype(\"category\").cat.codes +1\ntrain['anatom_site_general_challenge'] = train['anatom_site_general_challenge'].astype(\"category\").cat.codes +1\ntrain.head()","2b39ae06":"test['sex'] = test['sex'].astype(\"category\").cat.codes +1\ntest['anatom_site_general_challenge'] = test['anatom_site_general_challenge'].astype(\"category\").cat.codes +1\ntest.head()","d1a9e048":"x_train = train[['sex', 'age_approx','anatom_site_general_challenge']]\ny_train = train['target']\n\n\nx_test = test[['sex', 'age_approx','anatom_site_general_challenge']]\n# y_train = test['target']\n\n\ntrain_DMatrix = xgb.DMatrix(x_train, label= y_train)\ntest_DMatrix = xgb.DMatrix(x_test)","224cbbb5":"param = {\n    'booster':'gbtree', \n    'eta': 0.3,\n    'num_class': 2,\n    'max_depth': \n}\n\nepochs = 100","cae0fe30":"# model = xgb.train(param, \n#                   train_DMatrix, \n#                   num_boost_round=epochs)\n\nclf = xgb.XGBClassifier(n_estimators=2000, \n                        max_depth=8, \n                        objective='multi:softprob',\n                        seed=0,  \n                        nthread=-1, \n                        learning_rate=0.15, \n                        num_class = 2, \n                        scale_pos_weight = (32542\/584))\n\n","19ed277c":"clf.fit(x_train, y_train)","52e4f794":"# predictions = model.predict(test_DMatrix)\n# proba = model.predict_proba(test_DMatrix) \nclf.predict_proba(x_test)[:,1]\n# clf.predict(x_test)\nsub.target = clf.predict_proba(x_test)[:,1]\nsub_tabular = sub.copy()","f348dc69":"sub_public_merge = pd.read_csv('\/kaggle\/input\/submission-9\/submission_935.csv')\nsub_mean = pd.read_csv('\/kaggle\/input\/siim-isic-multiple-model-training-stacking-923\/submission_mean.csv')","7e8ffde8":"sub.target = sub_mean.target *0.1 + sub_public_merge.target *0.7 + sub_tabular.target *0.2","50bee593":"sub.head()\nsub.to_csv('submission.csv', index = False)","2db4ac04":"# train_df.diagnosis.value_counts()","1e4ad9ff":"https:\/\/xgboost.readthedocs.io\/en\/latest\/python\/python_api.html#module-xgboost.sklearn"}}