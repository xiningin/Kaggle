{"cell_type":{"7d0021de":"code","e5e4a841":"code","24878021":"code","60688fb7":"code","a3936c0f":"code","23032aad":"code","85e865dc":"code","12098adb":"code","c24f4320":"code","cc95f55d":"code","66f26a95":"code","93dbf457":"code","d6188133":"code","22351b76":"code","7a8c7d36":"code","43bdd780":"code","aaf91db7":"code","cc514d79":"code","c1ac9be4":"code","69b942da":"code","9be122ea":"code","98d4d6a8":"code","5ec47e71":"code","d563aa4b":"code","80ea3774":"code","b2692568":"code","b2225bfb":"markdown","33cc231e":"markdown","1a64f76c":"markdown","c5dacf33":"markdown","8fad3b3f":"markdown"},"source":{"7d0021de":"import pandas as pd\nimport numpy as np\nimport os\nimport seaborn as sns\nimport time","e5e4a841":"train_image=pd.read_csv('..\/input\/shopee-product-matching\/train.csv')\ntest_image=pd.read_csv('..\/input\/shopee-product-matching\/train.csv')","24878021":"train_image.head(10)","60688fb7":"train_image.shape","a3936c0f":"train_image.info()","23032aad":"train_image.head(100)","85e865dc":"train_image.isnull()","12098adb":"train_image.describe","c24f4320":"train_image.columns","cc95f55d":"train_image.tail()","66f26a95":"train_image.loc[123:456]","93dbf457":"test_image","d6188133":"test_image.shape","22351b76":"test_image.isnull()","7a8c7d36":"test_image.describe","43bdd780":"test_image.columns","aaf91db7":"import cv2, matplotlib.pyplot as plt\n#import cudf, cuml, cupy\n#from cuml.feature_extraction.text import TfidfVectorizer\n#from cuml.neighbors import NearestNeighbors\nimport tensorflow as tf\nfrom tensorflow.keras.applications import EfficientNetB0","cc514d79":"COMPUTE_CV = True\n\n\nif len(test_image)>3: COMPUTE_CV = False\nelse: print('this submission notebook will compute CV score, but commit notebook will not')","c1ac9be4":"tmp = train_image.groupby('label_group').posting_id.agg('unique').to_dict()\ntrain_image['target'] = train_image.label_group.map(tmp)\nprint('train shape is', train_image.shape )","69b942da":"def getMetric(col):\n    def f1score(row):\n        n = len( np.intersect1d(row.target,row[col]) )\n        return 2*n \/ (len(row.target)+len(row[col]))\n    return f1score","9be122ea":"BASE_DIR = '\/kaggle\/input\/shopee-product-matching\/'","98d4d6a8":"import matplotlib.pyplot as plt\nimport matplotlib.image as mpimg","5ec47e71":"one_group = train_image[train_image['label_group'] == 249114794]\none_group","d563aa4b":"print('Total', len(train_image), 'products fall in', len(train_image['label_group'].unique()), 'groups.')","80ea3774":"prods = train_image[train_image['label_group'] == 4093212188].reset_index(drop=True)\n\nfor i in range(len(prods)):\n    print('Product', i)\n    image_path = BASE_DIR +'train_images\/'+ prods.loc[i, 'image']\n    img = mpimg.imread(image_path)\n    plt.imshow(img)\n    print(prods.loc[i, 'title'])\n    plt.show()","b2692568":"sample_df = pd.read_csv(BASE_DIR + 'sample_submission.csv')\nsample_df","b2225bfb":"# Compute Baseline CV Score\nA baseline is to predict all items with the same image_phash as being duplicate. Let's calcuate the CV score for this submission.\n\n","33cc231e":"We would like to explore label_group more as it contains information of how many products are in same group or how they match Product in row zero fall in group '249114794' let's check what other products fall in same group.","1a64f76c":"Show the train","c5dacf33":"import some package ","8fad3b3f":"Read fiels (train &test)"}}