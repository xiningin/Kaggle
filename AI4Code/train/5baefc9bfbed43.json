{"cell_type":{"25324b35":"code","50764455":"code","4a805574":"code","616cc060":"code","c8718a25":"code","9d25d5b2":"code","ab2092f2":"code","e21c6231":"code","73200034":"code","2beec359":"code","09343aa5":"code","93055eaf":"code","fcfe241e":"code","bdd8ea17":"code","687d6619":"code","723ab073":"code","78519ee0":"code","1183cbfb":"code","048837e0":"code","3b432c8c":"code","9ca16857":"code","827e6581":"code","f5947b17":"code","125cdcce":"code","6cc85f2a":"code","ca3443d7":"code","8db527c1":"code","8fde8ea7":"code","87f948cd":"code","0506c152":"code","67c91afc":"code","98d14697":"code","dace44d3":"code","c05bcbda":"code","082341e2":"code","f9d6befe":"code","06dc4394":"code","66323341":"code","96f69eea":"code","5d6761b6":"code","2587108b":"code","9ebddea9":"code","51732d6a":"code","3c1fafbe":"code","e5d09722":"code","8dc3d8a7":"code","57234e8d":"code","5a5b0bcd":"code","469d7de0":"code","75b72626":"code","ae351eb8":"code","951ec2af":"code","bda264c7":"code","c19fcd4e":"code","2fe3e670":"code","0a5be5f7":"code","c5832112":"code","3343daa9":"code","e25563bf":"code","54c978c4":"code","3c892f89":"code","dfd61e75":"code","c58d76f2":"code","b2781a39":"code","29fa4501":"code","5a8fc2bd":"code","0c252c75":"code","dcea38c9":"code","3bb75a8e":"code","9da44d9c":"code","68c0c09b":"code","dc566764":"code","9674683a":"code","57e41d45":"code","4fed413c":"code","238fc6fa":"code","adf30963":"code","76693aea":"code","5b69a874":"code","3bc95962":"code","e2cc6cf2":"code","22844e01":"code","d18c4856":"code","a56c654f":"code","e67f46b8":"markdown","8171bb09":"markdown","072bea3d":"markdown","1f217822":"markdown","3c89defd":"markdown","7c611212":"markdown","b055b61f":"markdown","e556d9aa":"markdown","77fab7c5":"markdown","62af68d2":"markdown","6f02f9ac":"markdown","ee709aef":"markdown","09daafc4":"markdown","aa291d6e":"markdown","c275ac88":"markdown","53bd82ab":"markdown","acd00096":"markdown","d8d91e55":"markdown","c3b36571":"markdown","0564d249":"markdown","12d3e9d8":"markdown","03082642":"markdown","ee8528ba":"markdown","7459b77b":"markdown","7e22520e":"markdown","9022ef2c":"markdown","27593fdc":"markdown","6bfc3d7e":"markdown","37b157ea":"markdown","58c8762f":"markdown"},"source":{"25324b35":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","50764455":"file = open('\/kaggle\/input\/ense32020ac\/files\/adult.data', 'r')","4a805574":"def chr_int(a):\n    if a.isdigit():\n        return int(a)\n    else:\n        return 0\n                \ndata=[]\nfor line in file:\n     data1=line.split(', ')\n     if len(data1)==15:\n        data.append([chr_int(data1[0]),data1[1],chr_int(data1[2]),data1[3],chr_int(data1[4]),data1[5],data1[6],\\\n            data1[7],data1[8],data1[9],chr_int(data1[10]),chr_int(data1[11]),chr_int(data1[12]),data1[13],\\\n            data1[14]])","616cc060":"print (data[1:2])","c8718a25":"import pandas as pd\n\ndf = pd.DataFrame(data) #  Two-dimensional size-mutable, potentially heterogeneous tabular data structure with labeled axes \n\ndf.columns = ['age', 'type_employer', 'fnlwgt', 'education', \n                \"education_num\",\"marital\", \"occupation\", \"relationship\", \"race\",\"sex\",\n                \"capital_gain\", \"capital_loss\", \"hr_per_week\",\"country\",\"income\"]\ndf.head()","9d25d5b2":"df.tail()","ab2092f2":"df.shape","e21c6231":"counts = df.groupby('country').size()\n\nprint (counts) ","73200034":"counts = df.groupby('age').size() # grouping by age\nprint (counts)","2beec359":"counts[counts==counts.max()].tail()","09343aa5":"ml = df[(df.sex == 'Male')] # grouping by sex\nml.shape","93055eaf":"ml1 = df[(df.sex == 'Male')&(df.income=='>50K\\n')]\nml1.shape","fcfe241e":"fm =df[(df.sex == 'Female')]\nfm.shape","bdd8ea17":"fm1 =df[(df.sex == 'Female')&(df.income=='>50K\\n')]\nfm1.shape","687d6619":"df1=df[(df.income=='>50K\\n')]\n\nprint ('The rate of people with high income is: ', int(len(df1)\/float(len(df))*100), '%.' )\nprint ('The rate of men with high income is: ', int(len(ml1)\/float(len(ml))*100), '%.' )\nprint ('The rate of women with high income is: ', int(len(fm1)\/float(len(fm))*100), '%.' )","723ab073":"print ('The average age of men is: ', ml['age'].mean(), '.' )\nprint ('The average age of women is: ', fm['age'].mean(), '.')","78519ee0":"print ('The average age of high-income men is: ', ml1['age'].mean(), '.' )\nprint ('The average age of high-income women is: ', fm1['age'].mean(), '.')","1183cbfb":"ml_mu = ml['age'].mean()\nfm_mu = fm['age'].mean()\nml_var = ml['age'].var()\nfm_var = fm['age'].var()\nml_std = ml['age'].std()\nfm_std = fm['age'].std()\n\nprint ('Statistics of age for men: mu:', ml_mu, 'var:', ml_var, 'std:', ml_std)\nprint ('Statistics of age for women: mu:', fm_mu, 'var:', fm_var, 'std:', fm_std)","048837e0":"ml_mu_hr = ml['hr_per_week'].mean()\nfm_mu_hr = fm['hr_per_week'].mean()\nml_var_hr = ml['hr_per_week'].var()\nfm_var_hr = fm['hr_per_week'].var()\nml_std_hr = ml['hr_per_week'].std()\nfm_std_hr = fm['hr_per_week'].std()\n\nprint ('Statistics of hours per week for men: mu:', ml_mu_hr, 'var:', ml_var_hr, 'std:', ml_std_hr)\nprint ('Statistics of hours per week for women: mu:', fm_mu_hr, 'var:', fm_var_hr, 'std:', fm_std_hr)","3b432c8c":"ml_median= ml['age'].median()\nfm_median= fm['age'].median()\n\nprint (\"Median age per men and women: \", ml_median, fm_median)","9ca16857":"ml_median_age= ml1['age'].median()\nfm_median_age= fm1['age'].median()\n\nprint (\"Median age per men and women with high-income: \", ml_median_age, fm_median_age)","827e6581":"ml_median_hr= ml['hr_per_week'].median()\nfm_median_hr= fm['hr_per_week'].median()\nprint (\"Median hours per week per men and women: \", ml_median_hr, fm_median_hr)","f5947b17":"import matplotlib.pyplot as plt\nml_age=ml['age']\nml_age.hist(density=0, histtype='stepfilled', bins=20)","125cdcce":"fm_age=fm['age']\nfm_age.hist(density=0, histtype='stepfilled', bins=10)\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Female samples',fontsize=15)\nplt.show()","6cc85f2a":"import seaborn as sns\nfm_age.hist(density=0, histtype='stepfilled', alpha=.5, bins=20)   # default number of bins = 10\nml_age.hist(density=0, histtype='stepfilled', alpha=.5, color=sns.desaturate(\"indianred\", .75), bins=10)\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Samples',fontsize=15)\nplt.show()","ca3443d7":"fm_age.hist(density=1, histtype='stepfilled', alpha=.5, bins=20)   # default number of bins = 10\nml_age.hist(density=1, histtype='stepfilled', alpha=.5, color=sns.desaturate(\"indianred\", .75), bins=10)\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('PMF',fontsize=15)\nplt.show()","8db527c1":"ml_age.hist(density=1, histtype='stepfilled', bins=20)\n\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Probability',fontsize=15)\nplt.show()","8fde8ea7":"fm_age.hist(density=1, histtype='stepfilled', bins=20)\n\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Probability',fontsize=15)\nplt.show()","87f948cd":"ml_age.hist(density=1, histtype='step', cumulative=True, linewidth=3.5, bins=20)\n\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('CDF',fontsize=15)\nplt.show()","0506c152":"fm_age.hist(density=1, histtype='step', cumulative=True, linewidth=3.5, bins=20)\n\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('CDF',fontsize=15)\nplt.show()","67c91afc":"ml_age.hist(bins=10, density=1, histtype='stepfilled', alpha=.5)   # default number of bins = 10\nfm_age.hist(bins=10, density=1, histtype='stepfilled', alpha=.5, color=sns.desaturate(\"indianred\", .75))\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Probability',fontsize=15)\nplt.show()","98d14697":"ml_age.hist(density=1, histtype='step', cumulative=True,  linewidth=3.5, bins=20)\nfm_age.hist(density=1, histtype='step', cumulative=True,  linewidth=3.5, bins=20, color=sns.desaturate(\"indianred\", .75))\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('CDF',fontsize=15)\nplt.show()","dace44d3":"print (\"The mean sample difference is \", ml_age.mean() - fm_age.mean())","c05bcbda":"df['age'].median()","082341e2":"len(df[(df.income == '>50K\\n') & (df['age'] < df['age'].median() - 15)])","f9d6befe":"len(df[(df.income == '>50K\\n') & (df['age'] > df['age'].median() + 35)])","06dc4394":"df2 = df.drop(df.index[(df.income=='>50K\\n') & (df['age']>df['age'].median() +35) & (df['age'] > df['age'].median()-15)])\n\ndf2.shape","66323341":"df2 = df2.drop(df2.index[(df2.income=='>50K\\n') & (df2['age'] < df2['age'].median()-15)])\n\ndf2.shape","96f69eea":"ml1_age=ml1['age']\nfm1_age=fm1['age']","5d6761b6":"ml2_age = ml1_age.drop(ml1_age.index[(ml1_age >df['age'].median()+35)])\nml2_age = ml2_age.drop(ml2_age.index[(ml2_age<df['age'].median() - 15)])\n\nfm2_age = fm1_age.drop(fm1_age.index[(fm1_age > df['age'].median()+35)])\nfm2_age = fm2_age.drop(fm2_age.index[(fm2_age < df['age'].median()- 15)])","2587108b":"mu2ml = ml2_age.mean()\nstd2ml = ml2_age.std()\nmd2ml = ml2_age.median()\n\n# Computing the mean, std, median, min and max for the high-income male population\n\nprint (\"Men statistics: Mean:\", mu2ml, \"Std:\", std2ml, \"Median:\", md2ml, \"Min:\", ml2_age.min(), \"Max:\",ml2_age.max())","9ebddea9":"mu3ml = fm2_age.mean()\nstd3ml = fm2_age.std()\nmd3ml = fm2_age.median()\n\n# Computing the mean, std, median, min and max for the high-income female population\nprint (\"Women statistics: Mean:\", mu3ml, \"Std:\", std3ml, \"Median:\", md3ml, \"Min:\", fm2_age.min(), \"Max:\",fm2_age.max())","51732d6a":"print ('The mean difference with outliers is: %4.2f.'% (ml_age.mean() - fm_age.mean()))\nprint (\"The mean difference without outliers is: %4.2f.\"% (ml2_age.mean() - fm2_age.mean()))","3c1fafbe":"plt.figure(figsize=(13.4,5))\n\ndf.age[(df.income == '>50K\\n')].plot(alpha=.25, color='blue')\ndf2.age[(df2.income == '>50K\\n')].plot(alpha=.45,color='red')\n\nplt.ylabel('Age')\nplt.xlabel('Samples')","e5d09722":"import numpy as np\n\ncountx,divisionx = np.histogram(ml2_age, density=True)\ncounty,divisiony = np.histogram(fm2_age, density=True)","8dc3d8a7":"import matplotlib.pyplot as plt\n\nval = [(divisionx[i]+divisionx[i+1])\/2 for i in range(len(divisionx)-1)]\n\nplt.plot(val, countx-county,'o-')\nplt.title('Differences in promoting men vs. women')\nplt.xlabel('Age',fontsize=15)\nplt.ylabel('Differences',fontsize=15)\nplt.show()","57234e8d":"print (\"Remember:\\n We have the following mean values for men, women and the difference:\\nOriginally: \", ml_age.mean(), fm_age.mean(),  ml_age.mean()- fm_age.mean()) # The difference between the mean values of male and female populations.)\nprint (\"For high-income: \", ml1_age.mean(), fm1_age.mean(), ml1_age.mean()- fm1_age.mean()) # The difference between the mean values of male and female populations.)\nprint (\"After cleaning: \", ml2_age.mean(), fm2_age.mean(), ml2_age.mean()- fm2_age.mean()) # The difference between the mean values of male and female populations.)\n\nprint (\"\\nThe same for the median:\")\nprint (ml_age.median(), fm_age.median(), ml_age.median()- fm_age.median()) # The difference between the mean values of male and female populations.)\nprint (ml1_age.median(), fm1_age.median(), ml1_age.median()- fm1_age.median()) # The difference between the mean values of male and female populations.)\nprint (ml2_age.median(), fm2_age.median(), ml2_age.median()- fm2_age.median()), # The difference between the mean values of male and female populations.)","5a5b0bcd":"def skewness(x):\n    res=0\n    m=x.mean()\n    s=x.std()\n    for i in x:\n        res+=(i-m)*(i-m)*(i-m)\n    res\/=(len(x)*s*s*s)\n    return res\n\nprint (\"The skewness of the male population is:\", skewness(ml2_age))\nprint (\"The skewness of the female population is:\", skewness(fm2_age))","469d7de0":"def pearson(x):\n    return 3*(x.mean()-x.median())\/x.std()\n\nprint (\"The Pearson's coefficient of the male population is:\", pearson(ml2_age))\nprint (\"The Pearson's coefficient of the female population is:\", pearson(fm2_age))","75b72626":"ml1 = df[(df.sex == 'Male')&(df.income=='>50K\\n')]\n\nml2 = ml1.drop(ml1.index[(ml1['age']>df['age'].median() +35)])\nml2 = ml2.drop(ml2.index[(ml2['age']< df['age'].median()- 15)])\n\nfm2 = fm1.drop(fm1.index[(fm1['age']> df['age'].median() + 35)])\nfm2 = fm2.drop(fm2.index[(fm2['age']< df['age'].median() - 15)])\n\nprint (ml2.shape, fm2.shape)","ae351eb8":"print (\"Men grouped in 3 categories:\")\nprint (\"Young:\",int(round(100*len(ml2_age[ml2_age<41])\/float(len(ml2_age.index)))),\"%.\")\nprint (\"Elder:\", int(round(100*len(ml2_age[ml2_age >44])\/float(len(ml2_age.index)))),\"%.\")\nprint (\"Average age:\", int(round(100*len(ml2_age[(ml2_age>40) & (ml2_age< 45)])\/float(len(ml2_age.index)))),\"%.\")","951ec2af":"print (\"Women grouped in 3 categories:\")\nprint (\"Young:\",int(round(100*len(fm2_age[fm2_age <41])\/float(len(fm2_age.index)))),\"%.\")\nprint (\"Elder:\", int(round(100*len(fm2_age[fm2_age >44])\/float(len(fm2_age.index)))),\"%.\")\nprint (\"Average age:\", int(round(100*len(fm2_age[(fm2_age>40) & (fm2_age< 45)])\/float(len(fm2_age.index)))),\"%.\")","bda264c7":"print (\"The male mean:\", ml2_age.mean())\nprint (\"The female mean:\", fm2_age.mean())","c19fcd4e":"ml2_young = len(ml2_age[(ml2_age<41)])\/float(len(ml2_age.index))\nfm2_young  = len(fm2_age[(fm2_age<41)])\/float(len(fm2_age.index))\nprint (\"The relative risk of female early promotion is: \", 100*(1-ml2_young\/fm2_young))","2fe3e670":"ml2_elder = len(ml2_age[(ml2_age>44)])\/float(len(ml2_age.index))\nfm2_elder  = len(fm2_age[(fm2_age>44)])\/float(len(fm2_age.index))\nprint (\"The relative risk of male late promotion is: \", 100*(1-ml2_elder\/fm2_elder))","0a5be5f7":"l = 3\nx=np.arange(0,2.5,0.1)\ny= 1- np.exp(-l*x)\n\nplt.plot(x,y,'-')\nplt.title('Exponential CDF: $\\lambda$ =%.2f'% l ,fontsize=15)\nplt.xlabel('x',fontsize=15)\nplt.ylabel('CDF',fontsize=15)\nplt.show()","c5832112":"from __future__ import division\nimport scipy.stats as stats\n\nl = 3\nx=np.arange(0,2.5,0.1)\ny= l * np.exp(-l*x)\n\nplt.plot(x,y,'-')\nplt.title('Exponential PDF: $\\lambda$ =%.2f'% l, fontsize=15)\nplt.xlabel('x', fontsize=15)\nplt.ylabel('PDF', fontsize=15)\nplt.show()","3343daa9":"l = 0.25\n\nx=np.arange(0,25,0.1)\ny= l * np.exp(-l*x)\n\nplt.plot(x,y,'-')\nplt.title('Exponential: $\\lambda$ =%.2f' %l ,fontsize=15)\nplt.xlabel('x',fontsize=15)\nplt.ylabel('PDF',fontsize=15)\nplt.show()","e25563bf":"u=6 # mean\ns=2 # standard deviation\n\nx=np.arange(0,15,0.1)\n\ny=(1\/(np.sqrt(2*np.pi*s*s)))*np.exp(-(((x-u)**2)\/(2*s*s)))\n\nplt.plot(x,y,'-')\nplt.title('Gaussian PDF: $\\mu$=%.1f, $\\sigma$=%.1f'%(u,s),fontsize=15)\nplt.xlabel('x',fontsize=15)\nplt.ylabel('Probability density',fontsize=15)\nplt.show()","54c978c4":"fig, ax = plt.subplots(1, 4, sharey=True, squeeze=True, figsize=(14, 5))\nx = np.linspace(0, 1, 100)\nfor i in range(4):\n    f = np.mean(np.random.random((10000, i+1)), 1)\n    m, s = np.mean(f), np.std(f, ddof=1)\n    fn = (1\/(s*np.sqrt(2*np.pi)))*np.exp(-(x-m)**2\/(2*s**2))  # normal pdf            \n    ax[i].hist(f, 40, density=True, color=[0, 0.2, .8, .6]) \n    ax[i].set_title('n=%d' %(i+1))\n    ax[i].plot(x, fn, color=[1, 0, 0, .6], linewidth=5)\nplt.suptitle('Demonstration of the central limit theorem for a uniform distribution', y=1.05)\nplt.show()","3c892f89":"from scipy.stats.distributions import norm\n\n# Some random data\ny = np.random.random(15) * 10\nx = np.linspace(0, 10, 100)\n\nx1 = np.random.normal(-1, 2, 15) # parameters: (loc=0.0, scale=1.0, size=None)\nx2 = np.random.normal(6, 3, 10)\ny = np.r_[x1, x2] # r_ Translates slice objects to concatenation along the first axis.\nx = np.linspace(min(y), max(y), 100)\n\n# Smoothing parameter\ns = 0.4\n\n# Calculate the kernels\nkernels = np.transpose([norm.pdf(x, yi, s) for yi in y])\n\nplt.plot(x, kernels, 'k:')\nplt.plot(x, kernels.sum(1), 'r')\nplt.plot(y, np.zeros(len(y)), 'go', ms=10)","dfd61e75":"from scipy.stats import kde\n\nx1 = np.random.normal(-1, 0.5, 15)\n\n# parameters: (loc=0.0, scale=1.0, size=None)\n\nx2 = np.random.normal(6, 1, 10)\ny = np.r_[x1, x2]\n\n# r_ Translates slice objects to concatenation along the first axis.\n\nx = np.linspace(min(y), max(y), 100)\ns = 0.4   # Smoothing parameter\n\nkernels = np.transpose([norm.pdf(x, yi, s) for yi in y])\n\n# Calculate the kernels\ndensity = kde.gaussian_kde(y)\n\nplt.plot(x, kernels, 'k:')\nplt.plot(x, kernels.sum(1), 'r')\nplt.plot(y, np.zeros(len(y)), 'bo', ms=10)","c58d76f2":"xgrid = np.linspace(x.min(), x.max(), 200)\nplt.hist(y, bins=28, density=True)\nplt.plot(xgrid, density(xgrid), 'r-')","b2781a39":"# Create a bi-modal distribution with a mixture of Normals.\n\nx1 = np.random.normal(-1, 2, 15) # parameters: (loc=0.0, scale=1.0, size=None)\nx2 = np.random.normal(6, 3, 10)\n\n# Append by row\nx = np.r_[x1, x2]\n\n# r_ Translates slice objects to concatenation along the first axis.\nplt.hist(x, bins=18, density=True)","29fa4501":"density = kde.gaussian_kde(x)\nxgrid = np.linspace(x.min(), x.max(), 200)\nplt.hist(x, bins=18, density=True)\nplt.plot(xgrid, density(xgrid), 'r-')","5a8fc2bd":"x = np.random.normal(0.0, 1.0, 10000)\na = plt.hist(x,50,density='True')","0c252c75":"print ('The empirical mean of the sample is ', x.mean())","dcea38c9":"NTs=200\nmu=0.0\nvar=1.0\nerr = 0.0\nNPs=1000\nfor i in range(NTs):\n    x = np.random.normal(mu, var, NPs)\n    err += (x.mean()-mu)**2\n\nprint ('MSE: ', err\/NTs)","3bb75a8e":"def Cov(X, Y):\n    def _get_dvis(V):\n        return [v - np.mean(V) for v in V]\n    dxis = _get_dvis(X)\n    dyis = _get_dvis(Y)\n    return np.sum([x * y for x, y in zip(dxis, dyis)])\/len(X)\n\n\nX = [5, -1, 3.3, 2.7, 12.2]\nX= np.array(X)\nY = [10, 12, 8, 9, 11]\n\nprint (\"Cov(X, X) = %.2f\" % Cov(X, X))\nprint (\"Var(X) = %.2f\" % np.var(X))\n\nprint (\"Cov(X, Y) = %.2f\" % Cov(X, Y))","9da44d9c":"MAXN=100\nMAXN=40\n\nX=np.array([[1,9],[3, 2], [5,3],[5.5,4],[6,4],[6.5,4],[7,3.5],[7.5,3.8],[8,4],\n[8.5,4],[9,4.5],[9.5,7],[10,9],[10.5,11],[11,11.5],[11.5,12],[12,12],[12.5,12],[13,10]])","68c0c09b":"plt.subplot(1,2,1)\nplt.scatter(X[:,0],X[:,1],color='b',s=120, linewidths=2,zorder=10)\nplt.xlabel('Economic growth(T)',fontsize=15)\nplt.ylabel('Stock market returns(T)',fontsize=15)\nplt.gcf().set_size_inches((20,6))","dc566764":"X=np.array([[1,8],[2, 7], [3,6],[4,8],[5,8],[6,7],[7,7],[8,5],[9,5],[10,6],[11,4],[12,5],[13,3],[14,2],[15,2],[16,1]])\n\nplt.subplot(1,2,1)\nplt.scatter(X[:,0],X[:,1],color='b',s=120, linewidths=2,zorder=10)\nplt.xlabel('World Oil Production(T)',fontsize=15)\nplt.ylabel('Gasoline prices(T)',fontsize=15)\nplt.gcf().set_size_inches((20,6))","9674683a":"def Corr(X, Y):\n    assert len(X) == len(Y)\n    return Cov(X, Y) \/ np.prod([np.std(V) for V in [X, Y]])\n\nprint (\"Corr(X, X) = %.5f\" % Corr(X, X))\n\nY=np.random.random(len(X))\n\nprint (\"Corr(X, Y) = %.5f\" % Corr(X, Y))","57e41d45":"def list2rank(l):\n    #l is a list of numbers\n    # returns a list of 1-based index; mean when multiple instances\n    return [np.mean([i+1 for i, sorted_el in enumerate(sorted(l)) if sorted_el == el]) for el in l]\n\nl = [7, 1, 2, 5]\nprint (\"ranks: \", list2rank(l))\n\ndef spearmanRank(X, Y):\n    # X and Y are same-length lists\n    print (list2rank(X) )\n    print (list2rank(Y))\n    return Corr(list2rank(X), list2rank(Y))\n\nX = [10, 20, 30, 40, 1000]\nY = [-70, -1000, -50, -10, -20]\nplt.plot(X,'ro')\nplt.plot(Y,'go')\n\nprint (\"Pearson rank coefficient: %.2f\" % Corr(X, Y))\nprint (\"Spearman rank coefficient: %.2f\" % spearmanRank(X, Y))","4fed413c":"X=np.array([[10.0, 8.04,10.0, 9.14, 10.0, 7.46, 8.0, 6.58],\n[8.0,6.95, 8.0, 8.14, 8.0, 6.77, 8.0, 5.76],\n[13.0,7.58,13.0,8.74,13.0,12.74,8.0,7.71],\n[9.0,8.81,9.0,8.77,9.0,7.11,8.0,8.84],\n[11.0,8.33,11.0,9.26,11.0,7.81,8.0,8.47],\n[14.0,9.96,14.0,8.10,14.0,8.84,8.0,7.04],\n[6.0,7.24,6.0,6.13,6.0,6.08,8.0,5.25],\n[4.0,4.26,4.0,3.10,4.0,5.39,19.0,12.50],\n[12.0,10.84,12.0,9.13,12.0,8.15,8.0,5.56],\n[7.0,4.82,7.0,7.26,7.0,6.42,8.0,7.91],\n[5.0,5.68,5.0,4.74,5.0,5.73,8.0,6.89]])","238fc6fa":"plt.subplot(1,1,1)\nplt.scatter(X[:,0],X[:,1],color='r',s=120, linewidths=1,zorder=10)\nplt.xlabel('x1',fontsize=15)\nplt.ylabel('y1',fontsize=15)","adf30963":"plt.subplot(1,1,1)\nplt.scatter(X[:,2],X[:,3],color='r',s=120, linewidths=2,zorder=10)\nplt.xlabel('x1',fontsize=15)\nplt.ylabel('y1',fontsize=15)","76693aea":"plt.subplot(1,1,1)\nplt.scatter(X[:,4],X[:,5],color='r',s=120, linewidths=2,zorder=10)\nplt.xlabel('x1',fontsize=15)\nplt.ylabel('y1',fontsize=15)","5b69a874":"plt.subplot(1,1,1)\nplt.scatter(X[:,6],X[:,7],color='r',s=120, linewidths=2,zorder=10)\nplt.xlabel('x1',fontsize=15)\nplt.ylabel('y1',fontsize=15)\nplt.gcf().set_size_inches((5,5))","3bc95962":"a_mu=X[:,1].mean()\nprint( \"The mean of the first series is :\", a_mu)\n\nb_mu=X[:,3].mean()\nprint( \"The mean of the second series is :\", b_mu)\n\nc_mu=X[:,5].mean()\nprint( \"The mean of the third series is :\", c_mu)\n\nd_mu=X[:,7].mean()\nprint( \"The mean of the forth series is :\", d_mu)","e2cc6cf2":"a_var=X[:,1].var()\nprint( \"The variance of the first series is :\", a_var)\n\nb_var=X[:,3].var()\nprint( \"The variance of the second series is :\", b_var)\n\nc_var=X[:,5].var()\nprint( \"The variance of the third series is :\", c_var)\n\nd_var=X[:,7].var()\nprint( \"The variance of the forth series is :\", d_var)","22844e01":"ab_cov=Cov(X[:,1],X[:,3])\nprint( \"The covariance between the first and the second series is :\", ab_cov)\nac_cov=Cov(X[:,1],X[:,5])\nprint( \"The covariance between the first and the third series is :\", ac_cov)\nad_cov=Cov(X[:,1],X[:,7])\nprint( \"The covariance between the first and the forth series is :\", ad_cov)\n\nbc_cov=Cov(X[:,3],X[:,5])\nprint( \"The covariance between the second and the third series is :\", bc_cov)\nbd_cov=Cov(X[:,3],X[:,7])\nprint( \"The covariance between the second and the forth series is :\", bd_cov)\n\ncd_cov=Cov(X[:,5],X[:,7])\nprint( \"The covariance between the third and the forth series is :\", cd_cov)","d18c4856":"ab_corr=Corr(X[:,1],X[:,3])\nprint( \"The pearson's correlation between the first and the second series is :\", ab_corr)\nac_corr=Corr(X[:,1],X[:,5])\nprint( \"The pearson's correlation between the first and the third series is :\", ac_corr)\nad_corr=Corr(X[:,1],X[:,7])\nprint( \"The pearson's correlation between the first and the forth series is :\", ad_corr)\n\nbc_corr=Corr(X[:,3],X[:,5])\nprint( \"The pearson's correlation between the second and the third series is :\", bc_corr)\nbd_corr=Corr(X[:,3],X[:,7])\nprint( \"The pearson's correlation between the second and the forth series is :\", bd_corr)\n\ncd_corr=Corr(X[:,5],X[:,7])\nprint( \"The pearson's correlation between the third and the forth series is :\", cd_corr)","a56c654f":"ab_sp=spearmanRank(X[:,1],X[:,3])\nprint( \"The spearman's rank correlation between the first and the second series is :\", ab_sp)\nac_sp=spearmanRank(X[:,1],X[:,5])\nprint( \"The spearman's rank correlation between the first and the third series is :\", ac_sp)\nad_sp=spearmanRank(X[:,1],X[:,7])\nprint( \"The spearman's rank correlation between the first and the forth series is :\", ad_sp)\n\nbc_sp=spearmanRank(X[:,3],X[:,5])\nprint( \"The spearman's rank correlation between the second and the third series is :\", bc_sp)\nbd_sp=spearmanRank(X[:,3],X[:,7])\nprint( \"The spearman's rank correlation between the second and the forth series is :\", bd_sp)\n\ncd_sp=spearmanRank(X[:,5],X[:,7])\nprint( \"The spearman's rank correlation between the third and the forth series is :\", cd_sp)","e67f46b8":"PEARSON'S CORRELATION","8171bb09":"18. Show the graphics and an explain the result.\n\nHere it is the same than previously by for women. We have the cumulative probability to have a women younger than the age we want.","072bea3d":"9. Describe an explain the result.\n\nFirst, we created 6 variables. 3 from 'Male' sample and 3 from 'Female' sample : mean, variance and standard deviation.\n\nWe can see a huge difference in the hours per week from men and women sample. Then the standard deviation is almost the same. Whatever, we need to be careful to intreprete the difference because we remember than there is less women with high-income than men in our dataset. Jobs with high-income often needs a lot of work hours and it can explain the difference we see here.","1f217822":"6. What is the age of the most represented people?\n\nThe most represented people are the 36 years old one, they are 898.","3c89defd":"4. Describe an explain the result.\n\nThe function shape gives us the dimensions of the frame. We see that there are 32 561 rows and 15 columns.","7c611212":"5. How many items are there for USA? and for Mexico?\n\nThe comand gathered rows by the country, as it's asked. Then, the comand size gives us the number of rows for each country. \nWe have 29 170 items for USA and 643 for Mexico.","b055b61f":"16. Show the graphics and an explain the result.\n\nHere we have the probability to have a women of a given age on the whole sample.","e556d9aa":"Then, we can conclude that mean and variance are not enough estimators to study series, because, as we can see, different series totally different can have the same mean and the same variance. Whatever, covariance, pearson's correlation and spearman's rank correlation are needed to conclude they are different, but those estimators are difficult to interprete. ","77fab7c5":"10. Describe an explain the result.\n\nFirst, we have more or less the same result with the median than with the mean for age of different sample. Moreover, the difference between men and women is the same between all the sample and samples of high-income.\n\nNevertheless, about hours worked per weeks, we can see that there is no difference using the median while the mean gave a huge difference. It would mean that there are exceptional low values of hours worked for women or exceptional high values of hours worked for men. ","62af68d2":"EXERCICE ANSCOMBE'S QUARTET","6f02f9ac":"13. Show the graphics and an explain the result.\n\nOn the same graph we can see the distribution of men and women by their age. Moreover, we have more details for women sample (bins = 20), so we are not on the same \"scale\" because, for example, around 20 years old we have two bars for women and only one for men.","ee709aef":"SPEARMAN'S RANK CORRELATION","09daafc4":"12. Show the graphics and an explain the result.\n\nHere it is the same than the previous graph but for women sample. There is a little difference, we cut the number of bars, so there is less detail. \nWe notice a peak around 20 years old, and then the distribution decrease until 90 years old. Consequently, it seems that there is a difference with the men sample.\n\nMoreover, there are differences in the graph because we added some information to understand on the abscissa and the ordinate.","aa291d6e":"11. Show the graphics and an explain the result.\n\nThe graph gives us the age distribution for men sample. We can see that there are a peak of men around 35 year olds and then it decrease until 90 years old.","c275ac88":"1. What is the obtained result? What did you ask for in the previous command? Explain.\n\nWe obtain the second rows of the database. I think the command ask for the rows between 1 (included) and 2(excluded), so here it gives me the rows 1 (which is the second one).","53bd82ab":"VARIANCE","acd00096":"19. Show the graphics and an explain the result.\n\nWe have now, on the same graph, the cumulative age distributions of men and women. We can notice that, proportionally of each group, we have more young women than young men, but then the difference changed around 35-40 years old, and at this point the difference start to reduce. It corresponds to the conclusion we had with the age distribution with the whole men and women sample on the ordinate axis.","d8d91e55":"17. Show the graphics and an explain the result.\n\nHere we have the cumulative probability to find a men of a given age. For example, if we want to select a men younger than 50 years old, we have more or less 82% to find one by selecting a men randomly.","c3b36571":"8. Describe an explain the result.\n\nFirst, we compute the mean of the age of men and women of the sample. We can see that men are a little bit more old in average the women in our dataset.\nThen, we compute the mean of men and women with high-income in our dataset. We notice that men are still older than women in average but also that people with high-income are also older in our database. This would show that having high-income need to be more experienced.\n\nTo explain comands, for example with \" fm1['age'].mean() \", we compute the mean of age of people from the population fm1 which are female with high-income.","0564d249":"23. What do you obtained as result?\n\nWe computed, 200 times, the difference between the empirical mean and the aim mean of a normal law. Then, we obtain the MSE, and in our case, the MSE is quite small, at 0,001. So, we can consider that we succeded to well reduce the MSE.","12d3e9d8":"7. Describe an explain the result.\n\nFirst, we selected all the people which have an income superior to 50k per year.\n\na\/ we compute the part of this person which has an high income by divided the number of people with an income >50k with the total number of people in the survey. We can see that 24% of the people in the survey has an high income.\n\nb\/ we compute the part of men with high income. From the answer of men, in the base \"ml\", we are looking for men with income superior to >50k. 30% of men who answered the survey earn more than 50k.\n\nc\/ we compute the part of women with high income. From the answer of women, in the base \"fm\", we are looking for women with income superior to >50k. 10% of women who answered the survey earn more than 50k.\n\nWe already see a huge difference between wages of men and women. 30% of men earn high income while only 10% of women earn high income.","03082642":"21. Explain the result\n\nAs we can see, the skewness of the two samples are positive. It means that the population extends further on the right for the both samples. For high-income, the population extends go further on the oldest people. Moreover, it goes further for women sample then for men.","ee8528ba":"3. Describe and explain the result. Compare with the previous one.\n\nHere, we asked for the tail of the frame, so it gives us the 5 last rows. The previous comand gave the beginning of the frame and this comand gives the end. We now see that there are 32 561 rows.","7459b77b":"15. Show the graphics and an explain the result.\n\nOnce again, we have the graph of probability to have a men of a given age on the whole sample.","7e22520e":"COVARIANCE","9022ef2c":"2. Describe an explain the result.\n\nThe command created a frame to visualize easily the datas from the database. Creating a frame, and then giving a name to the columns we can have this result. Then, we have only the 5 first rows because of the function head which gives the 5 first rows.","27593fdc":"14. Show the graphics and an explain the result.\n\nUsing \"density=1\", we normalized the graph to have the probability of having someone of this age when we select a person in the sample. So, here the ordinate axis is a probability.\n\nBut here we don't have the cumulative distribution function has the exercice said. We have only the probability for each age.","6bfc3d7e":"20. Explain the result.\n\nAs explain previously, we noticed than on the youngest age, we had more women than men proportionally on their own sample. Then, we have the opposit for oldest age. It means that, in average, women are youngest than men in the whole sample. This explain the fact that we have a difference of 2.6 years old between the two samples.","37b157ea":"22. What does the figure shows?\n\nOn the figure, we can see a Kernel law, made by two normal laws, the first around -1 (mean) and the second around 6 (mean). ","58c8762f":"MEAN"}}