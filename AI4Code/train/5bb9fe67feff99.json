{"cell_type":{"7481d726":"code","6af6f6ae":"code","35736630":"code","5690836a":"code","eae3cd73":"code","74775d26":"code","164affb8":"code","c8cf25b4":"code","6d40e674":"code","ced51255":"code","d4eb5894":"code","502bb8d2":"code","b70fe63a":"code","d1aeb13c":"code","77ab1dd7":"code","d19f9101":"code","5048ecc0":"code","401dd352":"code","5bf31658":"code","77d0594a":"code","18346343":"code","958dab06":"code","5c490678":"code","4f84fa36":"code","236691b0":"code","a8fd0894":"code","d9c8a56d":"markdown","6dc06767":"markdown","0fd45eee":"markdown","e4f6bacf":"markdown","7cef87a5":"markdown","f4b2cb3d":"markdown","9c237ebc":"markdown","985b6ad4":"markdown","dc5299ec":"markdown","aa108eab":"markdown","5e76704c":"markdown","e7b97662":"markdown"},"source":{"7481d726":"import pandas as pd\nimport numpy as np\nfrom glob import glob\nimport shutil","6af6f6ae":"raw_pred_2cls = pd.read_csv('..\/input\/vinbigdata-2class-prediction\/2-cls test pred.csv')\nother_pred_2cls = pd.read_csv('..\/input\/temp-submission\/2-cls test pred.csv')","35736630":"tmp_pred_2cls=other_pred_2cls\ntmp_pred_2cls['target']=1-other_pred_2cls['target']","5690836a":"import seaborn as sns\nimport matplotlib.pyplot as plt\n# \u753b\u51fa\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u7684\u6982\u7387\u5206\u5e03\nsns.distplot(raw_pred_2cls[\"target\"].values, color='green', label='raw_pred_2cls pred')\n# sns.distplot(other_pred_2cls[\"target\"].values, color='orange', label='other_pred_2cls pred')\nplt.title(\"Prediction results histogram\")\nplt.xlim([0., 1.])\nplt.legend()","eae3cd73":"import seaborn as sns\nimport matplotlib.pyplot as plt\n# \u753b\u51fa\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u7684\u6982\u7387\u5206\u5e03\n# sns.distplot(raw_pred_2cls[\"target\"].values, color='green', label='raw_pred_2cls pred')\nsns.distplot(other_pred_2cls[\"target\"].values, color='orange', label='other_pred_2cls pred')\nplt.title(\"Prediction results histogram\")\nplt.xlim([0., 1.])\nplt.legend()","74775d26":"import seaborn as sns\nimport matplotlib.pyplot as plt\n# \u753b\u51fa\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u7684\u6982\u7387\u5206\u5e03\nsns.distplot(raw_pred_2cls[\"target\"].values, color='green', label='raw_pred_2cls pred')\nsns.distplot(other_pred_2cls[\"target\"].values, color='orange', label='other_pred_2cls pred')\nplt.title(\"Prediction results histogram\")\nplt.xlim([0., 1.])\nplt.legend()","164affb8":"compare = pd.merge(raw_pred_2cls, other_pred_2cls, on = 'image_id', how = 'left')\ncompare.head()","c8cf25b4":"compare['dif']=compare['target_x']-compare['target_y']","6d40e674":"compare.to_csv('compare.csv',index = False)","ced51255":"sns.distplot(compare[\"dif\"].values, color='green', label='raw_pred_2cls pred')\nplt.title(\"Prediction results histogram\")\nplt.xlim([0., 1.])\nplt.legend()","d4eb5894":"pred_14cls = pd.read_csv('..\/input\/vinbigdata-14-class-submission-lb0154\/submission.csv')\npred_2cls = pd.read_csv('..\/input\/vinbigdata-2class-prediction\/2-cls test pred.csv')\n# pred_2cls = pd.read_csv('..\/input\/temp-submission\/2-cls test pred.csv')","502bb8d2":"pred_2cls.to_csv('pred_2cls.csv',index = False)","b70fe63a":"pred_14cls.head()","d1aeb13c":"pred_raw = pd.merge(pred_14cls, pred_2cls, on = 'image_id', how = 'left')\npred_raw.head()","77ab1dd7":"pred = pd.merge(pred_14cls, tmp_pred_2cls, on = 'image_id', how = 'left')\npred.head()","d19f9101":"pred['PredictionString'].value_counts().iloc[[0]]","5048ecc0":"count_low=0\ncount_mid=0\ncount_high=0\ndef filter_2cls_raw(row, low_thr=0.08, high_thr=0.95):\n    global count_low\n    global count_mid\n    global count_high\n    prob = row['target']\n    if prob<low_thr:\n        ## Less chance of having any disease\n        row['PredictionString'] = '14 1 0 0 1 1'\n        count_low+=1\n    elif low_thr<=prob<high_thr:\n        ## More change of having any diesease\n        row['PredictionString']+=f' 14 {prob} 0 0 1 1'\n        count_mid+=1\n    elif high_thr<=prob:\n        ## Good chance of having any disease so believe in object detection model\n        row['PredictionString'] = row['PredictionString']\n        count_high+=1\n    else:\n        raise ValueError('Prediction must be from [0-1]')\n    return row","401dd352":"sub_raw = pred_raw.apply(filter_2cls_raw, axis=1)\nprint(count_low\/3000,count_mid\/3000,count_high\/3000)\nsub_raw[60:63]","5bf31658":"count_low=0\ncount_mid=0\ncount_high=0\ndef filter_2cls(row, low_thr=0.05, high_thr=0.99):\n    global count_low\n    global count_mid\n    global count_high\n    prob = row['target']\n    if prob<low_thr:\n#         pass\n        ## Less chance of having any disease\n        row['PredictionString'] = '14 1 0 0 1 1'\n        count_low+=1\n    elif low_thr<=prob<high_thr:\n        ## More change of having any diesease\n        row['PredictionString']+=f' 14 {prob} 0 0 1 1'\n#         pass\n        count_mid+=1\n    elif high_thr<=prob:\n        ## Good chance of having any disease so believe in object detection model\n        row['PredictionString']+=f' 14 {prob} 0 0 1 1'\n#         row['PredictionString'] = row['PredictionString']\n        count_high+=1\n    else:\n        raise ValueError('Prediction must be from [0-1]')\n    return row","77d0594a":"sub = pred.apply(filter_2cls, axis=1)\nprint(count_low\/3000,count_mid\/3000,count_high\/3000)\nsub[60:63]","18346343":"merge_sub = pd.merge(sub_raw, sub, on = 'image_id', how = 'left')","958dab06":"merge_sub[150:200]","5c490678":"merge_sub.to_csv('merge_sub.csv',index = False)","4f84fa36":"sub['PredictionString'].value_counts().iloc[[0]]","236691b0":"sub_raw[['image_id', 'PredictionString']].to_csv('submission_raw.csv',index = False)","a8fd0894":"sub[['image_id', 'PredictionString']].to_csv('submission.csv',index = False)","d9c8a56d":"# Loading Package","6dc06767":"# 2 Class Filter + [**1x1 bbox trick** \ud83d\udd25](https:\/\/www.kaggle.com\/c\/vinbigdata-chest-xray-abnormalities-detection\/discussion\/211971)","0fd45eee":"# Loading csv","e4f6bacf":"# \ud83c\udf1f2 Class Filter\ud83c\udf1f\nPreviously I have trained `YOLOv5` using `14` class data. As it creates `FP` we can tackle that just simply using a `2 class filter`. Here I'll be using 2 class model (`AUC`:`0.98`) prediction to filter out the `FP` predictions. I used `EfficientNetB6` to generate these predictions.\nIt should increase the score as `FP` would be reduced significantly\n\n**Notebooks**\n* [14 class train](https:\/\/www.kaggle.com\/awsaf49\/vinbigdata-cxr-ad-yolov5-14-class-train)\n* [14 class infer](https:\/\/www.kaggle.com\/awsaf49\/vinbigdata-cxr-ad-yolov5-14-class-infer)\n\n**Dataset:**\n* [YOLOv5 Labels](https:\/\/www.kaggle.com\/awsaf49\/vinbigdata-yolo-labels-dataset)\n* [1024x1024 Dataset](https:\/\/www.kaggle.com\/awsaf49\/vinbigdata-1024-image-dataset)\n* [512x512 Dataset](https:\/\/www.kaggle.com\/awsaf49\/vinbigdata-512-image-dataset)\n* [256x256 Dataset](https:\/\/www.kaggle.com\/awsaf49\/vinbigdata-512-image-dataset)\n* [Original Size '.jpg'](https:\/\/www.kaggle.com\/awsaf49\/vinbigdata-original-image-dataset)","7cef87a5":"# Please Upvote If You Have Found This Notebook Useful \ud83d\ude03","f4b2cb3d":"As we can see from above that applying `2 class filter` Number of `'No Finding'`increases significanly. **[549->1912]**. We can also see that `1x1 bbox trick` increases the result","9c237ebc":"\u4ee5\u524d\uff0c\u6211\u5df2\u7ecf\u4f7f\u752814\u7c7b\u6570\u636e\u8bad\u7ec3\u4e86YOLOv5\u3002 \u5f53\u8fd9\u4e2a\u6a21\u578b\u4ea7\u751fFP\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u4f7f\u75282\u5206\u7c7b\u8fc7\u6ee4\u5668\u5373\u53ef\u89e3\u51b3\u3002 \n\u5728\u8fd9\u91cc\uff0c\u6211\u5c06\u4f7f\u75282\u7c7b\u6a21\u578b\uff08AUC\uff1a0.98\uff09\u9884\u6d4b\u6765\u8fc7\u6ee4FP\u9884\u6d4b\u3002 \u6211\u4f7f\u7528EfficientNetB6\u751f\u6210\u4e86\u8fd9\u4e9b\u9884\u6d4b\u3002 \u5b83\u4f1a\u589e\u52a0\u5206\u6570\uff0c\u56e0\u4e3aFP\u4f1a\u5927\u5927\u964d\u4f4e","985b6ad4":"# Version\n* `v4`: **2-cls filter**\n* `v5`: **2-cls filter** + [**1x1 bbox trick** \ud83d\udd25](https:\/\/www.kaggle.com\/c\/vinbigdata-chest-xray-abnormalities-detection\/discussion\/211971)","dc5299ec":"\u5982\u6211\u4eec\u6240\u89c1\uff0c\u5e94\u75282\u7c7b\u6ee4\u6ce2\u5668\u53ef\u5c06\u7ed3\u679c\u4ece0.154\u663e\u7740\u63d0\u9ad8\u52300.201\u3002 \u4f46\u662f\u8bf7\u8bb0\u4f4f\uff0c\u9009\u62e9\u9608\u503c\u53ef\u80fd\u4f1a\u6709\u4e9b\u68d8\u624b\u3002","aa108eab":"# Result\nAs we can see applying the `2 class filter` improves the result significantly, from `0.154` to `0.201`. But bear in mind that choosing the `thershold` could be a bit `tricky`.","5e76704c":"# Before 2 Class Filter Number of `No Finding`","e7b97662":"# After 2 Class Filter Number of `No Finding`"}}