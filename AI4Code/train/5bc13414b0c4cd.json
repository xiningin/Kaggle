{"cell_type":{"4f427d2e":"code","d2b2892f":"code","6bb413fb":"code","229ddf29":"code","93b06589":"code","19d1cfea":"code","43240b19":"code","54de8910":"code","000e7e13":"code","a4905ec4":"code","0243f6cb":"code","00acafc7":"code","958ffc7d":"code","bd826e6a":"code","bd1d16af":"code","17b54428":"code","d9b289a8":"code","b8b28f0b":"code","55790d44":"code","7db93023":"code","24b05829":"code","4f8c0ec6":"code","e55fc433":"code","651bf864":"code","2e1eb4df":"code","7896c76d":"code","a105ddb3":"code","20055455":"code","5514d38c":"code","8be6d00b":"code","862d46bd":"code","206da03f":"code","705848b9":"markdown","4a0f1c7e":"markdown","84a7cbfd":"markdown","eec15ff4":"markdown","e183eae0":"markdown","2ec1ff75":"markdown","1623179a":"markdown"},"source":{"4f427d2e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d2b2892f":"# importar bibliotecas\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline","6bb413fb":"# carregar dados\n\ndata_calendar=pd.read_csv('..\/input\/airbnb-sf\/calendar.csv')\ndata_listings=pd.read_csv('..\/input\/airbnb-sf\/listings.csv')\ndata_reviews=pd.read_csv('..\/input\/airbnb-sf\/reviews.csv')","229ddf29":"data_reviews.head()","93b06589":"data_listings.head()","19d1cfea":"data_calendar.head()","43240b19":"data_calendar.dtypes","54de8910":"data_listings.dtypes","000e7e13":"# Retirar \"$\" do valor\n\ndata_calendar['price'] = data_calendar['price'].str.replace('$','')","a4905ec4":"# Transformar \"price\" em n\u00fameros\n\ndata_calendar['price'] = pd.to_numeric(data_calendar['price'],errors = 'coerce')","0243f6cb":"# Transformar \"date\" em datetime\n\ndata_calendar['date'] = pd.to_datetime(data_calendar['date'],errors = 'coerce')","00acafc7":"# Fazer pivot para pegar pre\u00e7o m\u00e9dio por propriedade\n\nvalorm_id = pd.pivot_table(data_calendar,\n                           values='price',\n                           index='listing_id',\n                           aggfunc=np.mean)","958ffc7d":"# Mudar nome de coluna\n\ndata_listings.rename(columns={'id': 'listing_id'}, inplace=True) ","bd826e6a":"# Transformar \"date\" em datetime\n\ndata_reviews['date'] = pd.to_datetime(data_reviews['date'],errors = 'coerce')","bd1d16af":"# Colocar valor m\u00e9dio na lista de propriedades\n\ndf_list_valor = pd.merge(data_listings, valorm_id, on=['listing_id'])","17b54428":"plt.figure( figsize = ( 25, 10)) \nsns.lineplot( x = 'neighbourhood_cleansed', \n             y = 'price_y', \n             data = df_list_valor, \n             label = 'Valor m\u00e9dio por im\u00f3vel') \n\nplt.xlabel( 'Bairro') \n\nplt.xticks(rotation=90)\n \nplt.ylabel('Valor (USD)') \n\nax2 = plt.twinx()\nsns.countplot(x='neighbourhood_cleansed', data=df_list_valor, ax=ax2)\n\nax2.set(ylim=(0, 1200))\n\nsns.set(font_scale = 2)","d9b289a8":"# Criar condi\u00e7\u00e3o para agrupar a nota das avalia\u00e7\u00f5es\n\nconditions = [\n    (df_list_valor['review_scores_rating'] <= 4.2),\n    (df_list_valor['review_scores_rating'] > 4.2) & (df_list_valor['review_scores_rating'] <= 4.9),\n    (df_list_valor['review_scores_rating'] > 4.9)\n    ]\n\nvalues = ['Baixa', 'M\u00e9dia', 'Alta']\n\ndf_list_valor['aval'] = np.select(conditions, values)\n\ndf_list_valor.head()","b8b28f0b":"f,ax=plt.subplots(3,1,figsize=(15,20))\nsns.distplot(df_list_valor[df_list_valor['aval']==\"Alta\"].price_y,ax=ax[0])\nax[0].set_title('\u00d3tima avalia\u00e7\u00e3o')\nsns.distplot(df_list_valor[df_list_valor['aval']==\"M\u00e9dia\"].price_y,ax=ax[1])\nax[1].set_title('Avalia\u00e7\u00e3o intermedi\u00e1ria')\nsns.distplot(df_list_valor[df_list_valor['aval']==\"Baixa\"].price_y,ax=ax[2])\nax[2].set_title('Mal avaliado')\nax[0].set(xlim=(0, 1200))\nax[1].set(xlim=(0, 1200))\nax[2].set(xlim=(0, 1200))\nplt.show()","55790d44":"# Criar tabela de contagem de reviews por dia\n\ncvd19 = pd.pivot_table(data_reviews,\n                           values='reviewer_id',\n                           index='date',\n                           aggfunc='count')","7db93023":"# Agrupar contagem de reviews por m\u00eas\n\ncvd19_2 = cvd19.groupby(pd.Grouper(freq='1M', offset='2min')).sum()","24b05829":"# Transformar index em coluna\n\ncvd19_2 = cvd19_2.reset_index()","4f8c0ec6":"cvd19_2.plot(x='date', y='reviewer_id', label='Reservas', color='green', figsize=(25, 10))\nplt.xlabel('Data da avalia\u00e7\u00e3o', fontsize=14)\nplt.ylabel('# Avalia\u00e7\u00f5es', fontsize=14)\nplt.title('Avalia\u00e7\u00f5es - Airbnb SF', fontsize=16)\nplt.show()","e55fc433":"df_list_valor.corr()['price_y'].sort_values(ascending=False).head()","651bf864":"# importando as bibliotecas para tratar e avaliar a frequ\u00eancia de palavras\nimport nltk\nimport re\nimport string\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator ","2e1eb4df":"# utilizaremos as informa\u00e7\u00f5es armazenadas na coluna comments\ndf_comments = data_reviews['comments'].loc[0:10000]\ndf_comments.shape","7896c76d":"# removendo os dados ausentes\nprint(df_comments.isnull().sum())\ndf_comments = df_comments.dropna()\n\nprint(df_comments.isnull().sum())","a105ddb3":"# removendo todas as palavras com n\u00fameros e colocando as palavras em min\u00fasculo\nlower_alpha = lambda x: re.sub(r\"\"\"\\w*\\d\\w*\"\"\", ' ', x.lower())\ndf_comments = df_comments.map(lower_alpha)\n\ndf_comments.head()","20055455":"# removendo toda a pontua\u00e7\u00e3o\n\npunc_re = lambda x: re.sub('[%s]' % re.escape(string.punctuation), ' ', x)\ndf_comments = df_comments.map(punc_re)\n\ndf_comments.head()","5514d38c":"# tokeniza\u00e7\u00e3o dos coment\u00e1rios\nfrom nltk.tokenize import word_tokenize\n\ndf_comments = df_comments.map(word_tokenize)\ndf_comments.head()","8be6d00b":"# removendo stop words dos coment\u00e1rios\nfrom nltk.corpus import stopwords\nnltk.download(\"stopwords\")\n\nstop_words_en = stopwords.words('english')\n\nstop_words_en.append('br')\n\nstop_lambda = lambda x: [y for y in x if y not in stop_words_en]\ndf_comments = df_comments.apply(stop_lambda)\n\ndf_comments.head()","862d46bd":"from collections import Counter\n\n# converte a lista em um dicion\u00e1rio com contagem de valores\nword_list = sum(df_comments.tolist(), [])\nword_counts_clean = Counter(word_list)\na = word_counts_clean\n\n# inverta a chave \/ valores no dicion\u00e1rio para classificar\nword_counts_clean = list(zip(word_counts_clean.values(), word_counts_clean.keys()))\n\n# classifique a lista por contagem\nword_counts_clean = sorted(word_counts_clean, reverse=True)\n\n# imprime as 10 palavras mais comuns\nword_counts_clean[:10]","206da03f":"wordcloud_comments = WordCloud(width=1600, \n                      height=800, \n                      max_font_size=200,\n                      max_words=400\n                      ).fit_words(a)\n\nplt.figure(figsize=(12,10))\nplt.imshow(wordcloud_comments, interpolation='bilinear')\nplt.axis(\"off\")\nplt.savefig(\"comments_reviews_santiago.png\")\nplt.show()","705848b9":"2 - Verificar e ajustar tipos das vari\u00e1veis","4a0f1c7e":"1 - Explorar tabelas carregadas","84a7cbfd":"**4 - Distribui\u00e7\u00e3o dos pre\u00e7os de acordo com avalia\u00e7\u00e3o**","eec15ff4":"**6 - Verificar caracter\u00edsticas que mais influenciam o pre\u00e7o**","e183eae0":"**7 - N\u00favem de palavras com as avalia\u00e7\u00f5es**","2ec1ff75":"**5 - Verificar impacto da pandemia de Covid19 na quantidade de reservas (atrav\u00e9s do n\u00famero de reviews)**","1623179a":"**3 - Valor m\u00e9dio das acomoda\u00e7\u00f5es por bairro**"}}