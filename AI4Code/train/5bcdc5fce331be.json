{"cell_type":{"42f7458a":"code","40006364":"code","1b175840":"code","1d6a37aa":"code","d18c8f5a":"code","d692af1d":"code","e2591c95":"code","bd882327":"markdown","c8bf936d":"markdown","a485fc06":"markdown","2b9be4ab":"markdown","25b2e457":"markdown","d14478ca":"markdown"},"source":{"42f7458a":"import pandas as pd\nimport cv2, os\nfrom tqdm import tqdm\nimport numpy as np","40006364":"train = pd.read_csv(\"..\/input\/landmark-retrieval-2020\/train.csv\")","1b175840":"def get_paths(sub):\n    index = [\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\"]\n\n    paths = []\n\n    for a in index:\n        for b in index:\n            for c in index:\n                try:\n                    paths.extend([f\"..\/input\/landmark-retrieval-2020\/{sub}\/{a}\/{b}\/{c}\/\" + x for x in os.listdir(f\"..\/input\/landmark-retrieval-2020\/{sub}\/{a}\/{b}\/{c}\")])\n                except:\n                    pass\n\n    return paths","1d6a37aa":"train_path = train\n\nrows = []\nfor i in tqdm(range(len(train))):\n    row = train.iloc[i]\n    path  = list(row[\"id\"])[:3]\n    temp = row[\"id\"]\n    row[\"id\"] = f\"..\/input\/landmark-retrieval-2020\/train\/{path[0]}\/{path[1]}\/{path[2]}\/{temp}.jpg\"\n    rows.append(row[\"id\"])\n    \nrows = pd.DataFrame(rows)\ntrain_path[\"id\"] = rows","d18c8f5a":"train_path.to_csv(\"train_paths.csv\",index = False)","d692af1d":"from sklearn.model_selection import KFold\n\nkf = KFold(n_splits=10,shuffle = True,random_state = 15)\nkf.get_n_splits(train_path)\n\nfolds = np.zeros(len(train_path))\n\nfor fold, (train_index, test_index) in enumerate(kf.split(train_path)):\n    folds[list(train_index)] = fold\n    \ntrain_path[\"Fold\"] = folds.astype(int)","e2591c95":"train_path.to_csv(\"train_paths_KFold.csv\",index = False)\npd.DataFrame(get_paths(\"test\")).to_csv(\"test_paths.csv\",index = False)\npd.DataFrame(get_paths(\"index\")).to_csv(\"index_paths.csv\",index = False)","bd882327":"# Load Libraries","c8bf936d":"# Apply KFold with 10 Folds","a485fc06":"**Save paths without KFold**","2b9be4ab":"**Save it.**","25b2e457":"# Define a function that can read all paths.","d14478ca":"# Get the training paths"}}