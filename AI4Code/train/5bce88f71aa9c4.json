{"cell_type":{"81c18394":"code","3bf0d42c":"code","4003fac9":"code","a92dbbbd":"code","d2f64227":"code","c7be8cdd":"code","5ad130a2":"code","75196f36":"code","ab94528e":"code","a9bc90d4":"code","c3891fc2":"code","0956f611":"code","2937005e":"code","9f0f341c":"code","b66a9901":"code","691e82dd":"code","9b1d756e":"code","5fdfe6a9":"code","bd3d5401":"code","15729c4e":"code","c12111e2":"code","8f9135b1":"code","1c6f0085":"code","5ba2c05f":"code","afa822bf":"code","c4b2daaa":"code","8ad09d98":"code","621681ba":"code","512f4d97":"code","120ba401":"code","94642492":"code","c68083ba":"code","514131f0":"code","e17397c7":"code","7655fe66":"code","1a0508f4":"code","f50b58ff":"code","c9deee18":"code","0a2568f9":"code","d278cb12":"code","b3bd9eac":"code","6fb6ca96":"code","3b1ebd41":"code","3c1d3823":"code","c03d4d79":"code","c1f54c66":"code","7a194416":"code","eccea1dd":"code","42365e1c":"code","56c8f002":"code","26f6b769":"code","d4c9ceea":"code","a81b3681":"code","13567d34":"code","366b9461":"code","effcd7e3":"code","65192b7d":"code","eca6e035":"code","2f4b3f7c":"code","016b6f10":"code","5b91cb1f":"code","8b1740ee":"code","a0b8a222":"code","c9ec382f":"code","72fe7e41":"code","7e1c2b98":"code","eb38c0c2":"code","c79d8734":"code","01013e26":"code","cfad3efb":"code","2adfbad7":"code","af232219":"code","e47c3752":"code","0b105c18":"code","3f58c774":"code","d6196514":"code","17034fff":"code","3f5c20ea":"code","226d3512":"code","6cea6279":"code","65b45d58":"code","bc2e2d06":"code","6adc5bd5":"code","c0b2e554":"code","4b578921":"code","f89f6c82":"code","bb776643":"code","7afdf286":"code","72e703dd":"code","19fef397":"code","5253cc4c":"code","b5e910fc":"code","a4320092":"code","4142b721":"code","2d304123":"code","09e45444":"code","92a01e32":"code","4512c67b":"code","75d19514":"code","5033d55b":"code","f7604dec":"code","94d6315d":"code","7d454127":"markdown","8e0e208a":"markdown","3208fa6d":"markdown","28310279":"markdown","8f3a8849":"markdown","ee710974":"markdown","b5f4974a":"markdown","50ec9c37":"markdown","5be2577f":"markdown","b93f5f9c":"markdown","4d13abff":"markdown","2b9ad684":"markdown","0e186c69":"markdown","694d5c5b":"markdown","0691bb02":"markdown","043ecaab":"markdown","87192c43":"markdown","959f4e48":"markdown","275c6158":"markdown","0e056899":"markdown","0c5d3f36":"markdown","b6091629":"markdown","8cf9bfb1":"markdown","b08c933a":"markdown","03433175":"markdown","68214962":"markdown","5fdff19c":"markdown","624537cd":"markdown"},"source":{"81c18394":"!pip install jovian opendatasets --upgrade --quiet","3bf0d42c":"# getting url of a dataset\ndataset_url = 'https:\/\/www.kaggle.com\/dgomonov\/new-york-city-airbnb-open-data' ","4003fac9":"import opendatasets as od\nod.download(dataset_url)","a92dbbbd":"#backup\nimport pandas as pd \nairbnb_df=pd.read_csv('..\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv')","d2f64227":"# directory of the file\ndata_dir = '.\/new-york-city-airbnb-open-data'","c7be8cdd":"import os\nos.listdir(data_dir)","5ad130a2":"project_name = \"airbnb_final\" ","75196f36":"!pip install jovian --upgrade -q","ab94528e":"import jovian","a9bc90d4":"jovian.commit(project=project_name)","c3891fc2":"!pip install numpy pandas matplotlib seaborn --upgrade --quiet","0956f611":"import numpy as np\nimport pandas as pd\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","2937005e":"airbnb_df=pd.read_csv('.\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv')","9f0f341c":"airbnb_df","b66a9901":"airbnb_df.info()","691e82dd":"airbnb_df.last_review = pd.to_datetime(airbnb_df.last_review, errors='coerce')","9b1d756e":"airbnb_df.info()","5fdfe6a9":"airbnb_df.shape","bd3d5401":"airbnb_df.describe()","15729c4e":"airbnb_df.drop(columns='host_name', inplace=True)","c12111e2":"airbnb_df = airbnb_df[airbnb_df.price != 0]","8f9135b1":"airbnb_df = airbnb_df[airbnb_df.availability_365 != 0]","1c6f0085":"airbnb_df","5ba2c05f":"not_reviewed = airbnb_df['reviews_per_month'].isna().sum()","afa822bf":"print('A number of properties without any reviews is {}.'.format(int(not_reviewed)))","c4b2daaa":"print('Available types of properties are:', airbnb_df['room_type'].unique())","8ad09d98":"print('Available areas of NY are: ', airbnb_df['neighbourhood_group'].unique())","621681ba":"total_reviews = airbnb_df['number_of_reviews'].sum()","512f4d97":"print('A total number of reviews is {}.'.format(int(total_reviews)))","120ba401":"mean_reviews = airbnb_df['number_of_reviews'].mean()","94642492":"print('The majotiry of properties have around {} reviews'.format(int(mean_reviews)))","c68083ba":"most_expensive=airbnb_df.sort_values('price').tail(10)","514131f0":"most_expensive","e17397c7":"cheapest = airbnb_df.sort_values('price').head(10)","7655fe66":"cheapest","1a0508f4":"print('Number of properties in Manhattan:', airbnb_df[airbnb_df.neighbourhood_group=='Manhattan'].id.count())","f50b58ff":"print('Number of properties in Queens:', airbnb_df[airbnb_df.neighbourhood_group=='Queens'].id.count())","c9deee18":"print('Number of properties in Brooklyn:', airbnb_df[airbnb_df.neighbourhood_group=='Brooklyn'].id.count())","0a2568f9":"print('Number of properties in Bronx:', airbnb_df[airbnb_df.neighbourhood_group=='Bronx'].id.count())","d278cb12":"print('Number of properties in Staten Island:', airbnb_df[airbnb_df.neighbourhood_group=='Staten Island'].id.count())","b3bd9eac":"location_counts_df = airbnb_df.groupby('neighbourhood_group')['neighbourhood'].count()","6fb6ca96":"location_counts_df #counting the same as in the previous step but altogether in a single line","3b1ebd41":"airbnb_df['min_sum'] = airbnb_df['minimum_nights'] * airbnb_df['price']","3c1d3823":"airbnb_df.sort_values('min_sum', ascending=True).head(5)","c03d4d79":"airbnb_df.sort_values('min_sum', ascending=True).tail(5)","c1f54c66":"jovian.commit()","7a194416":"sns.set_style('darkgrid')\nmatplotlib.rcParams['font.size'] = 14\nmatplotlib.rcParams['figure.figsize'] = (9, 5)\nmatplotlib.rcParams['figure.facecolor'] = '#00000000'","eccea1dd":"location_counts_df","42365e1c":"plt.hist(airbnb_df.neighbourhood_group, bins=5, rwidth=0.9);\nplt.xticks(rotation=75)\nplt.title('Neighbourhood Groups');\n","56c8f002":"all_hoods = airbnb_df.neighbourhood_group.value_counts()\nplt.pie(all_hoods, labels=all_hoods.index, autopct='%1.1f%%');","26f6b769":"plt.hist(airbnb_df.room_type, bins=3, rwidth=0.9);\nplt.title('Types of rooms')","d4c9ceea":"plt.hist(airbnb_df.price, bins=np.arange(10,1000,10), color='purple')\nplt.xlabel('Price per night')\nplt.ylabel('Number of properties');","a81b3681":"map_ny = sns.scatterplot(x=airbnb_df.longitude,y=airbnb_df.latitude,hue=airbnb_df.neighbourhood_group, size=airbnb_df.price, alpha=.3);\nmap_ny.legend(loc='center left', bbox_to_anchor=(1, 0.5), ncol=1);","13567d34":"from PIL import Image","366b9461":"img=Image.open('.\/new-york-city-airbnb-open-data\/New_York_City_.png')","effcd7e3":"plt.imshow(img);","65192b7d":"top_neighbourhood=airbnb_df.neighbourhood.value_counts().head(15)","eca6e035":"sns.barplot(x=top_neighbourhood.index, y=top_neighbourhood)\nplt.title('Most popular neighbourhoods')\nplt.xticks(rotation=75);\ntop_neighbourhood","2f4b3f7c":"bottom_neighbourhood=airbnb_df.neighbourhood.value_counts().tail(15)","016b6f10":"sns.barplot(x=bottom_neighbourhood.index, y=bottom_neighbourhood)\nplt.title('Least popular neighbourhoods')\nplt.xticks(rotation=75);\nbottom_neighbourhood","5b91cb1f":"appartments_df = airbnb_df[airbnb_df.room_type=='Entire home\/apt'].copy()","8b1740ee":"appartments_df","a0b8a222":"map_ny_entire_place = sns.scatterplot(x=appartments_df.longitude,y=appartments_df.latitude,hue=appartments_df.neighbourhood_group, size=appartments_df.price, alpha=.3);\nmap_ny_entire_place.legend(loc='center left', bbox_to_anchor=(1, 0.5), ncol=1);","c9ec382f":"map_ny_entire_place = sns.scatterplot(x=appartments_df.longitude,y=appartments_df.latitude,hue=appartments_df.price);\nmap_ny_entire_place.legend(loc='center left', bbox_to_anchor=(1, 0.5), ncol=1);","72fe7e41":"appartments_maj_df = appartments_df[appartments_df.price<600].copy()","7e1c2b98":"map_ny_entire_place_maj = sns.scatterplot(x=appartments_maj_df.longitude,y=appartments_maj_df.latitude,hue=appartments_maj_df.price);\nmap_ny_entire_place_maj.legend(loc='center left', bbox_to_anchor=(1, 0.5), ncol=1);","eb38c0c2":"appartments_min_df = appartments_df[appartments_df.price<60].copy()","c79d8734":"map_ny_entire_place_min = sns.scatterplot(x=appartments_min_df.longitude,y=appartments_min_df.latitude,hue=appartments_min_df.price);\nmap_ny_entire_place_min.legend(loc='center left', bbox_to_anchor=(1, 0.5), ncol=1);","01013e26":"fig, (ax1, ax2) = plt.subplots(2, 1)\nfig.suptitle('A tale of 2 subplots')\n\nax1.plot(appartments_df.number_of_reviews, 'o-')\nax1.set_ylabel('Damped oscillation')\n\nax2.plot(appartments_df.price, '.-')\nax2.set_xlabel('time (s)')\nax2.set_ylabel('Undamped')\n\nplt.show()","cfad3efb":"last_review_df=airbnb_df.last_review.value_counts()","2adfbad7":"last_review_df=last_review_df.sort_index()","af232219":"last_review_df","e47c3752":"plt.plot_date(last_review_df.index, last_review_df);","0b105c18":"latest_reviews_df= airbnb_df[(airbnb_df['last_review'] > '2019-01-01')]","3f58c774":"latest_reviews_df = latest_reviews_df.last_review.value_counts()","d6196514":"latest_reviews_df=latest_reviews_df.sort_index()","17034fff":"plt.xticks(rotation=70)\nplt.plot_date(latest_reviews_df.index, latest_reviews_df);","3f5c20ea":"import jovian","226d3512":"jovian.commit()","6cea6279":"districts = airbnb_df['neighbourhood_group'].unique()","65b45d58":"districts","bc2e2d06":"appartments_min_df = appartments_df[appartments_df.price<60].copy()\ndistrict_df = airbnb_df[airbnb_df.neighbourhood_group == 'Bronx'].copy()\nprice = airbnb_df['price'].mean()\nprice","6adc5bd5":"district_price={}\nfor district in districts:\n    district_df = airbnb_df[airbnb_df.neighbourhood_group== district].copy()\n    price = district_df['price'].mean()\n    district_price[district]=price\nprint(district_price)\n    ","c0b2e554":"plt.bar(range(len(district_price)), list(district_price.values()), align='center')\nplt.xticks(range(len(district_price)), list(district_price.keys()))\n\nplt.show()","4b578921":"shared_df=airbnb_df[airbnb_df.room_type=='Shared room'].copy()","f89f6c82":"map_ny_shared = sns.scatterplot(x=shared_df.longitude,y=shared_df.latitude,hue=shared_df.price);","bb776643":"shared_expensive=shared_df[shared_df.price>600]","7afdf286":"shared_expensive","72e703dd":"long_island_df=airbnb_df[airbnb_df.neighbourhood=='Long Island City'].copy()","19fef397":"plt.hist(long_island_df.price, bins=np.arange(10,2500,50));","5253cc4c":"listings_df = airbnb_df.calculated_host_listings_count.sort_values(ascending=False)","b5e910fc":"listings_df.unique()","a4320092":"prolific_agents_df=airbnb_df[airbnb_df.calculated_host_listings_count>=96].copy()","4142b721":"prolific_agents_df","2d304123":"prolific_agents_df.shape","09e45444":"prolific_agents_df.id.unique()","92a01e32":"import jovian","4512c67b":"jovian.commit()","75d19514":"import jovian","5033d55b":"jovian.commit()","f7604dec":"import jovian","94d6315d":"jovian.commit()","7d454127":"## Inferences and Conclusion\n\n**TODO** - Write some explanation here: a summary of all the inferences drawn from the analysis, and any conclusions you may have drawn by answering various questions.","8e0e208a":"Let us save and upload our work to Jovian before continuing.","3208fa6d":"## Downloading the Dataset\n\n**TODO** - add some explanation here","28310279":"# Analysis of AirBnb-New York data\n\nTODO - Write some introduction about your project here: describe the dataset, where you got it from, what you're trying to do with it, and which tools & techniques you're using. You can also mention about the course [Data Analysis with Python: Zero to Pandas](zerotopandas.com), and what you've learned from it.","8f3a8849":"> Instructions for downloading the dataset (delete this cell)\n>\n> - Find an interesting dataset on this page: https:\/\/www.kaggle.com\/datasets?fileType=csv\n> - The data should be in CSV format, and should contain at least 3 columns and 150 rows\n> - Download the dataset using the [`opendatasets` Python library](https:\/\/github.com\/JovianML\/opendatasets#opendatasets)","ee710974":"Let us save and upload our work to Jovian before continuing.","b5f4974a":"> Instructions (delete this cell)\n> \n> - Compute the mean, sum, range and other interesting statistics for numeric columns\n> - Explore distributions of numeric columns using histograms etc.\n> - Explore relationship between columns using scatter plots, bar charts etc.\n> - Make a note of interesting insights from the exploratory analysis","50ec9c37":"## Data Preparation and Cleaning\n0\nAnalysing the dataset, getting information on datatypes, changing some datatypes (last_review to datatime), deleting irrelevant columns (host_name, availability=0, price=0), adding a column (minimum_sum)\n\n","5be2577f":"#### Q1: TODO - the most expensive neghbourhood to live?","b93f5f9c":"**FIRST - SIMPLE VISUALISATIONS** - Explore one or more columns by plotting a graph below, and add some explanation about it","4d13abff":"Let us save and upload our work to Jovian before continuing","2b9ad684":"**THIRD** - Explore one or more columns by plotting a graph below, and add some explanation about it","0e186c69":"> Instructions (delete this cell)\n>\n> - Ask at least 5 interesting questions about your dataset\n> - Answer the questions either by computing the results using Numpy\/Pandas or by plotting graphs using Matplotlib\/Seaborn\n> - Create new columns, merge multiple dataset and perform grouping\/aggregation wherever necessary\n> - Wherever you're using a library function from Pandas\/Numpy\/Matplotlib etc. explain briefly what it does\n\n","694d5c5b":"## References and Future Work\n\n**TODO** - Write some explanation here: ideas for future projects using this dataset, and links to resources you found useful.","0691bb02":"**FOURTH** - Explore one or more columns by plotting a graph below, and add some explanation about it","043ecaab":"***SECOND - EXPLORING NY THROUGH DATA** - Explore one or more columns by plotting a graph below, and add some explanation about it","87192c43":"## Asking and Answering Questions\n\nTODO - write some explanation here.\n\n","959f4e48":"Let's begin by downloading the data, and listing the files within the dataset.","275c6158":"## Exploratory Analysis and Visualization\n\n**TODO** - write some explanation here.\n\n","0e056899":"#### Q3: Long Island City","0c5d3f36":"Let's begin by importing`matplotlib.pyplot` and `seaborn`.","b6091629":"The dataset has been downloaded and extracted.","8cf9bfb1":"#### Q2: TODO - where shared rooms?","b08c933a":"> Submission Instructions (delete this cell)\n> \n> - Upload your notebook to your Jovian.ml profile using `jovian.commit`.\n> - **Make a submission here**: https:\/\/jovian.ml\/learn\/data-analysis-with-python-zero-to-pandas\/assignment\/course-project\n> - Share your work on the forum: https:\/\/jovian.ml\/forum\/t\/course-project-on-exploratory-data-analysis-discuss-and-share-your-work\/11684\n> - Share your work on social media (Twitter, LinkedIn, Telegram etc.) and tag [@JovianML](https:\/\/twitter.com\/jovianml)\n>\n> (Optional) Write a blog post\n> \n> - A blog post is a great way to present and showcase your work.  \n> - Sign up on [Medium.com](https:\/\/medium.com) to write a blog post for your project.\n> - Copy over the explanations from your Jupyter notebook into your blog post, and [embed code cells & outputs](https:\/\/medium.com\/jovianml\/share-and-embed-jupyter-notebooks-online-with-jovian-ml-df709a03064e)\n> - Check out the Jovian.ml Medium publication for inspiration: https:\/\/medium.com\/jovianml\n\n\n ","03433175":"**FIFTH** - Explore one or more columns by plotting a graph below, and add some explanation about it","68214962":"## Data Analysis with Python: Zero to Pandas - Course Project Guidelines\n#### (remove this cell before submission)\n\nImportant links:\n- Make submissions here: https:\/\/jovian.ml\/learn\/data-analysis-with-python-zero-to-pandas\/assignment\/course-project\n- Ask questions here: https:\/\/jovian.ml\/forum\/t\/course-project-on-exploratory-data-analysis-discuss-and-share-your-work\/11684\n- Find interesting datasets here: https:\/\/jovian.ml\/forum\/t\/recommended-datasets-for-course-project\/11711\n\n\nThis is the starter notebook for the course project for [Data Analysis with Python: Zero to Pandas](https:\/\/jovian.ml\/learn\/data-analysis-with-python-zero-to-pandas). You will pick a real-world dataset of your choice and apply the concepts learned in this course to perform exploratory data analysis. Use this starter notebook as an outline for your project . Focus on documentation and presentation - this Jupyter notebook will also serve as a project report, so make sure to include detailed explanations wherever possible using Markdown cells.\n\n### Evaluation Criteria\n\nYour submission will be evaluated using the following criteria:\n\n* Dataset must contain at least 3 columns and 150 rows of data\n* You must ask and answer at least 4 questions about the dataset\n* Your submission must include at least 4 visualizations (graphs)\n* Your submission must include explanations using markdown cells, apart from the code.\n* Your work must not be plagiarized i.e. copy-pasted for somewhere else.\n\n\nFollow this step-by-step guide to work on your project.\n\n\n### Step 1: Select a real-world dataset \n\n- Find an interesting dataset on this page: https:\/\/www.kaggle.com\/datasets?fileType=csv\n- The data should be in CSV format, and should contain at least 3 columns and 150 rows\n- Download the dataset using the [`opendatasets` Python library](https:\/\/github.com\/JovianML\/opendatasets#opendatasets)\n\nHere's some sample code for downloading the [US Elections Dataset](https:\/\/www.kaggle.com\/tunguz\/us-elections-dataset):\n\n```\nimport opendatasets as od\ndataset_url = 'https:\/\/www.kaggle.com\/tunguz\/us-elections-dataset'\nod.download('https:\/\/www.kaggle.com\/tunguz\/us-elections-dataset')\n```\n\nYou can find a list of recommended datasets here: https:\/\/jovian.ml\/forum\/t\/recommended-datasets-for-course-project\/11711\n\n### Step 2: Perform data preparation & cleaning\n\n- Load the dataset into a data frame using Pandas\n- Explore the number of rows & columns, ranges of values etc.\n- Handle missing, incorrect and invalid data\n- Perform any additional steps (parsing dates, creating additional columns, merging multiple dataset etc.)\n\n\n### Step 3: Perform exploratory analysis & visualization\n\n- Compute the mean, sum, range and other interesting statistics for numeric columns\n- Explore distributions of numeric columns using histograms etc.\n- Explore relationship between columns using scatter plots, bar charts etc.\n- Make a note of interesting insights from the exploratory analysis\n\n### Step 4: Ask & answer questions about the data\n\n- Ask at least 4 interesting questions about your dataset\n- Answer the questions either by computing the results using Numpy\/Pandas or by plotting graphs using Matplotlib\/Seaborn\n- Create new columns, merge multiple dataset and perform grouping\/aggregation wherever necessary\n- Wherever you're using a library function from Pandas\/Numpy\/Matplotlib etc. explain briefly what it does\n\n\n### Step 5: Summarize your inferences & write a conclusion\n\n- Write a summary of what you've learned from the analysis\n- Include interesting insights and graphs from previous sections\n- Share ideas for future work on the same topic using other relevant datasets\n- Share links to resources you found useful during your analysis\n\n\n### Step 6: Make a submission & share your work\n\n- Upload your notebook to your Jovian.ml profile using `jovian.commit`.\n- **Make a submission here**: https:\/\/jovian.ml\/learn\/data-analysis-with-python-zero-to-pandas\/assignment\/course-project\n- Share your work on the forum: https:\/\/jovian.ml\/forum\/t\/course-project-on-exploratory-data-analysis-discuss-and-share-your-work\/11684\n- Browse through projects shared by other participants and give feedback\n\n\n### (Optional) Step 7: Write a blog post\n\n- A blog post is a great way to present and showcase your work.  \n- Sign up on [Medium.com](https:\/\/medium.com) to write a blog post for your project.\n- Copy over the explanations from your Jupyter notebook into your blog post, and [embed code cells & outputs](https:\/\/medium.com\/jovianml\/share-and-embed-jupyter-notebooks-online-with-jovian-ml-df709a03064e)\n- Check out the Jovian.ml Medium publication for inspiration: https:\/\/medium.com\/jovianml\n\n\n\n\n\n### Example Projects\n\nRefer to these projects for inspiration:\n\n* [Analyzing StackOverflow Developer Survey Results](https:\/\/jovian.ml\/aakashns\/python-eda-stackoverflow-survey)\n\n* [Analyzing Covid-19 data using Pandas](https:\/\/jovian.ml\/aakashns\/python-pandas-data-analysis) \n\n* [Analyzing your browser history using Pandas & Seaborn](https:\/\/medium.com\/free-code-camp\/understanding-my-browsing-pattern-using-pandas-and-seaborn-162b97e33e51) by Kartik Godawat\n\n* [WhatsApp Chat Data Analysis](https:\/\/jovian.ml\/PrajwalPrashanth\/whatsapp-chat-data-analysis) by Prajwal Prashanth\n\n* [Understanding the Gender Divide in Data Science Roles](https:\/\/medium.com\/datadriveninvestor\/exploratory-data-analysis-eda-understanding-the-gender-divide-in-data-science-roles-9faa5da44f5b) by Aakanksha N S\n\n* [2019 State of Javscript Survey Results](https:\/\/2019.stateofjs.com\/demographics\/)\n\n* [2020 Stack Overflow Developer Survey Results](https:\/\/insights.stackoverflow.com\/survey\/2020)\n\n\n\n**NOTE**: Remove this cell containing the instructions before making your submission. You can do using the \"Edit > Delete Cells\" menu option.","5fdff19c":"#### Q5: TODO - ask a question here and answer it below","624537cd":"#### Q4: TODO - ask a question here and answer it below"}}