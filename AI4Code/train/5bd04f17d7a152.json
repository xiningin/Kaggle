{"cell_type":{"c93ea435":"code","9be12178":"code","67a22aa8":"code","e763008d":"code","fdf5fa58":"code","b905a766":"code","dbce4bfe":"markdown"},"source":{"c93ea435":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9be12178":"import pandas as pd \n\ndata = pd.read_csv('..\/input\/covid19-global-forecasting-week-1\/train.csv')\n\ndata_country = data['Country\/Region'].value_counts()\n\nprint(data_country)\n\n\n\n\n#print(data.info())\n#print(data.head(10))","67a22aa8":"data_unique = data['Country\/Region'].unique()\n\nprint(data_unique)","e763008d":"print(data.info())\n# Confirmed Cases \ud655\uc9c4\ud658\uc790 \ndata_unique_date = data['Date'].unique()\n\nprint(data_unique_date)","fdf5fa58":"\ncondition = (data.Date =='2020-03-01') & (data.ConfirmedCases > 100)\n\n#print (data[condition])\ndata_0301 = data[condition]\n\n#Province\/State\tCountry\/Region \ndata_0301_short = data_0301.loc[:,['Province\/State','Country\/Region','Date','ConfirmedCases']]\n\n# \uad6d\uac00\uba85\uce6d, \ub0a0\uc9dc, \ud655\uc9c4\uc790\uc218\n\n#data_0301.info()\n#data_0301.head(10)\ndata_0301_short.sort_values(by=['ConfirmedCases'], axis=0, ascending=False)\n\ndata_0301_short.info()\nprint(data_0301_short)\n\n\n","b905a766":"#count \nprint(data_0301_short.shape[0])","dbce4bfe":"COVID-19 DATA  - solve this question \n\n# 3\uc6d41\uc77c \ud655\uc9c4\uc790\uac00 100\uba85  \uc774\uc0c1\uc778 \ub370\uc774\ud130\ub97c \ucd94\ucd9c\ud558\uc5ec \uad6d\uac00\uba85\uce6d, \ub0a0\uc9dc, \ud655\uc9c4\uc790\uc218 \ud45c\uc2dc \ud558\ub77c\n\n# condition count \n1. date   2020-03-01\n2. ConfirmedCase count > 100  \n\nUSE DATA : train.csv \n#data = pd.read_csv('..\/input\/covid19-global-forecasting-week-1\/train.csv')\n\n\n\n"}}