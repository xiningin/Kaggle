{"cell_type":{"b830876e":"code","0d86c88f":"code","9d2e8135":"code","72a80f3b":"code","c644cf17":"code","cc4e1289":"code","46707e97":"code","2491d2dd":"code","a21397c0":"code","2a6e98be":"code","736fe694":"code","7e71d0d6":"code","ba22b343":"code","5bcad9de":"code","d765bda5":"code","aff53764":"code","957364e5":"code","a9717b26":"code","1ad424ae":"code","a7f54946":"code","8e8d4218":"code","0b6bb3d9":"code","49d23340":"code","d5aa07d8":"code","cf94960c":"code","be705cdb":"code","2e67acb5":"code","c807ec57":"code","2da5aae2":"code","7a962eee":"code","44a79aee":"code","734a2992":"code","f7427d65":"code","250f1932":"code","a69e701d":"code","35ce2954":"code","33e4d499":"code","6a136b9c":"code","d8e372f5":"code","49e32732":"markdown","94e45db3":"markdown","288e619c":"markdown","e7962a07":"markdown","f823b2bc":"markdown","7e10ef57":"markdown","7f9dc647":"markdown","4b39b12b":"markdown","8b9051e2":"markdown"},"source":{"b830876e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n# Visualisation libraries\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set()\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n# color pallette\ncdr = ['#393e46', '#ff2e63', '#30e3ca'] # grey - red - blue\nidr = ['#f8b400', '#ff2e63', '#30e3ca'] # yellow - red - blue\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0d86c88f":"# Reading the datasets\n\ndf= pd.read_csv('..\/input\/coronavirus-cases-in-india\/Covid cases in India.csv')\ndf_india = df.copy()\ndf_india.head()","9d2e8135":"df_time_frame_2 = pd.read_csv('..\/input\/covid19-in-india\/covid_19_india.csv')\ndf_time_frame_2 = df_time_frame_2.loc[:,~df_time_frame_2.columns.str.startswith('Unnamed')]","72a80f3b":"df_time_frame_2['Total Cases'] = df_time_frame_2['ConfirmedIndianNational']+df_time_frame_2['ConfirmedForeignNational']\ndf_time_frame_2['Active Cases'] = df_time_frame_2['Total Cases']-(df_time_frame_2['Deaths']+df_time_frame_2['Cured'])","c644cf17":"df_time_frame_2.rename(columns={'State\/UnionTerritory': 'State'}, inplace=True)","cc4e1289":"df_time_frame_2.tail(23)","46707e97":"df_time_frame = pd.read_excel('..\/input\/coronavirus-cases-in-india\/per_day_cases.xlsx',sheet_name='India')","2491d2dd":"df_time_frame.tail()","a21397c0":"df.drop(['S. No.'],axis=1,inplace=True)","2a6e98be":"df['Total Cases'] = df['Total Confirmed cases (Indian National)']+df['Total Confirmed cases ( Foreign National )']\ndf['Active Cases'] = df['Total Cases']-(df['Deaths']+df['Cured\/Discharged\/Migrated'])","736fe694":"print(f'Total Number CONFIRMED COVID-19 cases across India :',df['Total Cases'].sum())\nprint(f'Total Number ACTIVE COVID-19 cases across India :',df['Active Cases'].sum())\nprint(f'Total Number CURED\/DISCHARGED\/MIGRATED COVID-19 cases across India :',df['Cured\/Discharged\/Migrated'].sum())\nprint(f'Total Number DEATHS COVID-19 cases across India :',df['Deaths'].sum())\nprint(f'Total number of STATES\/UTs affected:', df['Name of State \/ UT'].count())","7e71d0d6":"india_grouped = df.groupby('Name of State \/ UT')['Total Cases','Active Cases','Cured\/Discharged\/Migrated','Deaths'].sum().reset_index()","ba22b343":"#india_grouped=india_grouped[['Name of State \/ UT','Total Cases','Active Cases','Cured\/Discharged\/Migrated','Deaths']]\nindia_grouped = india_grouped.sort_values(by='Total Cases',ascending=False)\nindia_grouped = india_grouped.reset_index(drop=True)\nindia_grouped.style.background_gradient(cmap='Paired')","5bcad9de":"india_active_cases=india_grouped[['Name of State \/ UT','Active Cases']]\nindia_active_cases = india_active_cases.sort_values(by='Active Cases',ascending=False)\nindia_active_cases = india_active_cases.reset_index(drop=True)\nindia_active_cases.style.background_gradient(cmap='PuBu')","d765bda5":"fig=px.bar(df.sort_values('Active Cases',ascending=False).sort_values('Active Cases',ascending=True),\n           x='Active Cases',y='Name of State \/ UT',title='State with Active Cases'\n           , text='Active Cases', orientation='h',\n          width=700, height=700, range_x = [0, max(df['Active Cases'])])\nfig.update_traces(marker_color='light blue',opacity=0.6)\nfig.show()","aff53764":"india_death_cases=india_grouped[['Name of State \/ UT','Total Cases','Active Cases','Deaths']]\nindia_death_cases = india_death_cases.sort_values(by='Deaths',ascending=False)\nindia_death_cases = india_death_cases.reset_index(drop=True)\nindia_death_cases = india_death_cases[india_death_cases.Deaths>0]\nindia_death_cases.style.background_gradient(cmap='Reds')","957364e5":"fig=px.bar(india_death_cases.sort_values('Deaths',ascending=False).sort_values('Deaths',ascending=True),\n           x='Deaths',y='Name of State \/ UT',title='State with Deaths Cases',text='Deaths', orientation='h',\n          width=700, height=700, range_x = [0, max(india_death_cases['Deaths'])])\nfig.update_traces(marker_color='red',opacity=0.6)\nfig.show()","a9717b26":"india_recovered_cases=india_grouped[['Name of State \/ UT','Total Cases','Active Cases','Cured\/Discharged\/Migrated']]\nindia_recovered_cases = india_recovered_cases.sort_values(by='Cured\/Discharged\/Migrated',ascending=False)\nindia_recovered_cases = india_recovered_cases.reset_index(drop=True)\nindia_recovered_cases = india_recovered_cases[india_recovered_cases['Cured\/Discharged\/Migrated']>0]\nindia_recovered_cases.style.background_gradient(cmap='Greens')","1ad424ae":"fig=px.bar(india_recovered_cases.sort_values('Cured\/Discharged\/Migrated',ascending=False).sort_values('Cured\/Discharged\/Migrated',ascending=True),\n           x='Cured\/Discharged\/Migrated',y='Name of State \/ UT',title='State with Cured\/Discharged\/Migrated Cases',text='Cured\/Discharged\/Migrated', orientation='h',\n          width=700, height=700, range_x = [0, max(india_recovered_cases['Cured\/Discharged\/Migrated'])])\nfig.update_traces(marker_color='green',opacity=0.6)\nfig.show()","a7f54946":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=df_time_frame.Date,y=df_time_frame['Total Cases'],mode='lines+markers',name='Total Cases'))\nfig.add_trace(go.Scatter(x=df_time_frame.Date,y=df_time_frame['Active'],mode='lines',name='Active Cases'))\nfig.add_trace(go.Scatter(x=df_time_frame.Date,y=df_time_frame['Recovered'],mode='lines',name='Recovered'))\nfig.add_trace(go.Scatter(x=df_time_frame.Date,y=df_time_frame['Deaths'],mode='lines',name='Deaths'))\nfig.update_layout(title_text='Trend of Coronavirus Cases in India(Cumulative cases)',plot_bgcolor='rgb(250, 242, 242)')\nfig.show()","8e8d4218":"fig=px.bar(df_time_frame,\n           x='Date',y='New Cases',title='India with NEW Cases every\/day',text='New Cases',\n          height=400,barmode='group')\nfig.update_traces(marker_color='Red',opacity=0.6)\nfig.update_layout(plot_bgcolor='rgb(250, 242, 242)')\nfig.show()","0b6bb3d9":"date_india = df_time_frame.groupby(['Date'])['Total Cases','New Cases','Deaths', 'Recovered'].sum().reset_index()","49d23340":"temp_spd_india= date_india.melt(id_vars='Date', value_vars=['Total Cases', 'Deaths', 'Recovered'],\n                var_name='Case', value_name='Count')\nfig = px.bar(temp_spd_india, x=\"Date\", y=\"Count\", color='Case', facet_col=\"Case\",\n            title='SARS-CoV-2 Cases in INDIA', color_discrete_sequence=cdr)\nfig.show()","d5aa07d8":"#'#ff2e63', '#30e3ca\ntemp_new_india= date_india.melt(id_vars='Date', value_vars=['New Cases','Recovered'],\n                var_name='Case', value_name='Count')\nfig = px.bar(temp_new_india, x=\"Date\", y=\"Count\", color='Case', facet_col=\"Case\",\n            title='SARS-CoV-2 New Cases\/Recovered in INDIA', color_discrete_sequence=['blue','#30e3ca'])\nfig.show()","cf94960c":"temp_new_india= date_india.melt(id_vars='Date', value_vars=['Recovered','Deaths'],\n                var_name='Case', value_name='Count')\nfig = px.bar(temp_new_india, x=\"Date\", y=\"Count\", color='Case', facet_col=\"Case\",\n            title='SARS-CoV-2 Recovered\/Deaths in INDIA', color_discrete_sequence=['#30e3ca','#ff2e63'])\nfig.show()","be705cdb":"fig = go.Figure(data=[go.Pie(labels=['Recovered','Deaths','Active'], \n                             values=[df_time_frame['Recovered'].sum(),df_time_frame['Deaths'].sum(),df_time_frame['Active'].sum()] , hole=.3)])\n\nfig.update_traces(hoverinfo='label+percent+value', textinfo='label+percent', textfont_size=18,\n                  marker=dict(colors=['mediumturquoise', 'orangered','rainbow'], line=dict(color='#000000', width=2)))\n\nfig.update_layout(\n    title_text=\"Death\/Recovered Rate\",plot_bgcolor='rgb(250, 242, 242)')\n\nfig.show()","2e67acb5":"temp_india = df_time_frame.copy()\ntemp_india['No_of_death_to_100_confirmed_cases'] = round(temp_india['Deaths']\/temp_india['Total Cases'],3)*100\ntemp_india['No_of_Recovered_to_100_confirmed_cases'] = round(temp_india['Recovered']\/temp_india['Total Cases'],3)*100\ntemp_india['No_of_Recovered_to_1_Death_cases'] = round(temp_india['Recovered']\/temp_india['Deaths'],3)","c807ec57":"temp_india = temp_india.melt(id_vars='Date', \n                 value_vars=['No_of_death_to_100_confirmed_cases', 'No_of_Recovered_to_1_Death_cases','No_of_Recovered_to_100_confirmed_cases'], \n                 var_name='Ratio', \n                 value_name='Value')","2da5aae2":"fig = px.area(temp_india, x=\"Date\", y=\"Value\", color='Ratio', \n              title='Recovery and Mortality Rate Over The Time',color_discrete_sequence=cdr)\nfig.show()","7a962eee":"df_time_frame_MH = df_time_frame_2[df_time_frame_2['State']=='Maharashtra']\ndf_time_frame_KR = df_time_frame_2[df_time_frame_2['State']=='Kerala']\ndf_time_frame_KN = df_time_frame_2[df_time_frame_2['State']=='Karnataka']\ndf_time_frame_DL = df_time_frame_2[df_time_frame_2['State']=='Delhi']","44a79aee":"import plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\nfig = make_subplots(\n    rows=2, cols=2,start_cell=\"bottom-left\",\n    subplot_titles=(\"Maharashtra\",\"Kerala\", \"Karnataka\",\"Delhi\"))\n\nfig.add_trace(go.Bar(x=df_time_frame_MH['Date'], y=df_time_frame_MH['Total Cases'],\n                    marker=dict(color=df_time_frame_MH['Total Cases'], coloraxis=\"coloraxis\")),\n              1, 1)\n\nfig.add_trace(go.Bar(x=df_time_frame_KR['Date'], y=df_time_frame_KR['Total Cases'],\n                    marker=dict(color=df_time_frame_KR['Total Cases'], coloraxis=\"coloraxis\")),\n              1, 2)\n\nfig.add_trace(go.Bar(x=df_time_frame_KN['Date'], y=df_time_frame_KN['Total Cases'],\n                    marker=dict(color=df_time_frame_KN['Total Cases'], coloraxis=\"coloraxis\")),\n              2, 1)\nfig.add_trace(go.Bar(x=df_time_frame_DL['Date'], y=df_time_frame_DL['Total Cases'],\n                    marker=dict(color=df_time_frame_DL['Total Cases'], coloraxis=\"coloraxis\")),\n              2, 2)\n\nfig.update_layout(coloraxis=dict(colorscale='Bluered_r'), showlegend=False,title_text=\"Total Confirmed cases(Cumulative)\")\n\nfig.update_layout(plot_bgcolor='rgb(250, 242, 242)')\nfig.show()","734a2992":"fig = make_subplots(\n    rows=2, cols=2,start_cell=\"bottom-left\",\n    subplot_titles=(\"Maharashtra\",\"Kerala\", \"Karnataka\",\"Delhi\"))\n\nfig.add_trace(go.Scatter(x=df_time_frame_MH['Date'], y=df_time_frame_MH['Total Cases'],\n                    marker=dict(color=df_time_frame_MH['Total Cases'], coloraxis=\"coloraxis\")),\n              1, 1)\n\nfig.add_trace(go.Scatter(x=df_time_frame_KR['Date'], y=df_time_frame_KR['Total Cases'],\n                    marker=dict(color=df_time_frame_KR['Total Cases'], coloraxis=\"coloraxis\")),\n              1, 2)\n\nfig.add_trace(go.Scatter(x=df_time_frame_KN['Date'], y=df_time_frame_KN['Total Cases'],\n                    marker=dict(color=df_time_frame_KN['Total Cases'], coloraxis=\"coloraxis\")),\n              2, 1)\nfig.add_trace(go.Scatter(x=df_time_frame_DL['Date'], y=df_time_frame_DL['Total Cases'],\n                    marker=dict(color=df_time_frame_DL['Total Cases'], coloraxis=\"coloraxis\")),\n              2, 2)\n\nfig.update_layout(coloraxis=dict(colorscale='Bluered_r'), showlegend=False,title_text=\"Trend of Coronavirus cases\")\n\nfig.update_layout(plot_bgcolor='rgb(250, 242, 242)')\nfig.show()","f7427d65":"df_time_frame_2.Date = pd.to_datetime(df_time_frame_2['Date'])\ndf_time_frame_2.Date  = df_time_frame_2['Date'].dt.strftime('%m\/%d\/%Y')","250f1932":"date_a_r_1 = df_time_frame_2.groupby(['State','Date'])['Total Cases', 'Deaths', 'Cured'].sum().reset_index()","a69e701d":"fig = px.bar(date_a_r_1, x=\"Date\", y=\"Total Cases\", color='State', orientation='v', height=600,\n             title='Coronavirus Confirmed Cases Over Time INDIA', color_discrete_sequence = px.colors.cyclical.mygbm)\nfig.show()","35ce2954":"temp_MH_india= df_time_frame_MH.melt(id_vars='Date', value_vars=['Total Cases', 'Deaths', 'Cured'],\n                var_name='Case', value_name='Count')\nfig = px.bar(temp_MH_india, x=\"Date\", y=\"Count\", color='Case', facet_col=\"Case\",\n            title='SARS-CoV-2 Cases in MAHARASHTRA', color_discrete_sequence=cdr)\nfig.show()","33e4d499":"temp_KR_india= df_time_frame_KR.melt(id_vars='Date', value_vars=['Total Cases', 'Deaths', 'Cured'],\n                var_name='Case', value_name='Count')\nfig = px.bar(temp_KR_india, x=\"Date\", y=\"Count\", color='Case', facet_col=\"Case\",\n            title='SARS-CoV-2 Cases in KERALA', color_discrete_sequence=cdr)\nfig.show()","6a136b9c":"temp_DL_india= df_time_frame_DL.melt(id_vars='Date', value_vars=['Total Cases', 'Deaths', 'Cured'],\n                var_name='Case', value_name='Count')\nfig = px.bar(temp_DL_india, x=\"Date\", y=\"Count\", color='Case', facet_col=\"Case\",\n            title='SARS-CoV-2 Cases in DELHI', color_discrete_sequence=cdr)\nfig.show()","d8e372f5":"temp_KN_india= df_time_frame_KN.melt(id_vars='Date', value_vars=['Total Cases', 'Deaths', 'Cured'],\n                var_name='Case', value_name='Count')\nfig = px.bar(temp_KN_india, x=\"Date\", y=\"Count\", color='Case', facet_col=\"Case\",\n            title='SARS-CoV-2 Cases in KARNATAKA', color_discrete_sequence=cdr)\nfig.show()","49e32732":"# MAHARASHTRA","94e45db3":"# **Maharashtra** Vs **Kerala** Vs **Karanataka** Vs **Delhi**","288e619c":"# KARNATAKA","e7962a07":"# New COVID-19 cases reported daily in India","f823b2bc":"# **States with thier DEATH CASES**","7e10ef57":"# **States with thier Recovery CASES**","7f9dc647":"# **States with thier ACTIVE CASES**","4b39b12b":"# DELHI","8b9051e2":"# KERALA"}}