{"cell_type":{"85e0df72":"code","73968ae9":"code","46d54993":"code","977ad9f0":"code","0092e51d":"code","da500507":"code","6b052601":"code","93ac64e2":"code","7a7e6e3c":"code","839b9ee1":"code","150cc756":"code","28b22697":"code","0884c6e5":"code","f37748e0":"code","a89b9ecb":"code","d758684c":"code","fc789d5f":"code","5bea3e72":"code","a4e037f8":"markdown","3c803caf":"markdown","d567f4e7":"markdown","04062001":"markdown","5319edaf":"markdown","7a98ae47":"markdown"},"source":{"85e0df72":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","73968ae9":"dataset=pd.read_csv('\/kaggle\/input\/advertising-dataset\/advertising.csv')\ndataset.head()","46d54993":"#Dimesionality check\ndataset.shape","977ad9f0":"dataset.isna().any() # No missing values","0092e51d":"dataset.dtypes # All are numeric column. Not categorical col is present","da500507":"import matplotlib.pyplot as plt","6b052601":"fig,axs= plt.subplots(1,3,sharey=True) # sharey : share same y axis across the plot\ndataset.plot(kind=\"scatter\",x='TV',y='Sales',ax=axs[0],figsize=(16,8))\ndataset.plot(kind=\"scatter\",x='Radio',y='Sales',ax=axs[1],figsize=(16,8))\ndataset.plot(kind=\"scatter\",x='Newspaper',y='Sales',ax=axs[2],figsize=(16,8))","93ac64e2":"feature_x=['TV','Radio','Newspaper']\nX=dataset[feature_x]\ny=dataset.Sales","7a7e6e3c":"from sklearn.linear_model import LinearRegression\nfrom sklearn import model_selection","839b9ee1":"xtrain,xtest,ytrain,ytest=model_selection.train_test_split(X,y,test_size=0.3,random_state=30)\nprint(xtrain.shape,ytrain.shape,xtest.shape,ytest.shape)","150cc756":"lm=LinearRegression()\nlm.fit(xtrain,ytrain)","28b22697":"print(lm.intercept_,lm.coef_)","0884c6e5":"#calculation sales price manually with tv,radio, newspaper=50\n0.0549163*50+ 0.09294998*50 +0.00974809*50 +4.63226201614081 ","f37748e0":"x_new=pd.DataFrame({'TV':[50],\n                   'Newspaper':[50],\n                   'Radio':[50]})\nx_new.head()","a89b9ecb":"new_pred=lm.predict(x_new)\nnew_pred","d758684c":"# lets predict on test data\npreds=lm.predict(xtest)\n","fc789d5f":"from sklearn.metrics import mean_squared_error\nfrom math import sqrt","5bea3e72":"print(sqrt(mean_squared_error(ytest,preds)))","a4e037f8":"# Creating Linear Regression Model","3c803caf":"y=0.0549163*TV+ 0.09294998*Radio +0.00974809*NEwspaper +4.63226201614081  # linear equation for this model based on dataset","d567f4e7":"# Data Wrangling","04062001":"# Data visualization","5319edaf":"# Model Prediction","7a98ae47":"We get the same prediction equivalent to manual calc."}}