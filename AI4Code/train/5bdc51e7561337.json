{"cell_type":{"77b40550":"code","f527254a":"code","ce9a87e5":"code","a8e09009":"code","fc8ca6c6":"code","467e0efa":"code","7fcf997b":"code","ef65e7a4":"code","dd99e237":"code","508d8238":"code","551597f8":"code","3677fcd5":"code","e3ac238a":"code","a2ca4786":"code","f8fe389b":"code","59ec7f8c":"code","2955b01b":"code","825a1f67":"code","307ddf00":"code","25cadea0":"code","200577fe":"code","0ef5447e":"code","9cf45a6f":"code","feb316be":"code","2f792065":"code","63d52ec8":"code","58b46cc1":"code","ac247089":"code","2d3257d1":"code","d8196c9d":"markdown","3b4ceab1":"markdown","4ef053e5":"markdown","968bf294":"markdown","278cac28":"markdown","5c88e8d8":"markdown","77d2190b":"markdown","dc40c9fa":"markdown"},"source":{"77b40550":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n","f527254a":"pinguim = pd.read_csv(\"..\/input\/palmer-archipelago-antarctica-penguin-data\/penguins_lter.csv\")","ce9a87e5":"pinguim.head()","a8e09009":"pinguim = pinguim.drop(labels=3, axis=0)\npinguim = pinguim.drop(labels=339, axis=0)\npinguim.head()\n","fc8ca6c6":"pinguim.info()","467e0efa":"pinguim_all = pinguim[['Culmen Length (mm)','Culmen Depth (mm)','Flipper Length (mm)','Body Mass (g)']]","7fcf997b":"\npinguim_all.info()\n\n","ef65e7a4":"fig = pinguim[pinguim.Species=='Adelie Penguin (Pygoscelis adeliae)'].plot(kind='scatter',x='Culmen Length (mm)',y='Culmen Depth (mm)',color='red', label='Adelie Penguin')\npinguim[pinguim.Species=='Gentoo penguin (Pygoscelis papua)'].plot(kind='scatter',x='Culmen Length (mm)',y='Culmen Depth (mm)',color='blue', label='Gentoo penguin',ax=fig) #ax=fig\npinguim[pinguim.Species=='Chinstrap penguin (Pygoscelis antarctica)'].plot(kind='scatter',x='Culmen Length (mm)',y='Culmen Depth (mm)',color='green', label='Chinstrap penguin', ax=fig) # ax=fig\nfig.set_xlabel(\"Culmen Length\")\nfig.set_ylabel(\"Culmen Depth\")\nfig.set_title(\"Culmen Length VS Culmen Depth\")\nfig=plt.gcf() # retorna a figura que est\u00e1 em constru\u00e7\u00e3o\nfig.set_size_inches(10,6)\nplt.show()","dd99e237":"fig = pinguim[pinguim.Species=='Adelie Penguin (Pygoscelis adeliae)'].plot(kind='scatter',x='Flipper Length (mm)',y='Culmen Depth (mm)',color='red', label='Adelie Penguin')\npinguim[pinguim.Species=='Gentoo penguin (Pygoscelis papua)'].plot(kind='scatter',x='Flipper Length (mm)',y='Culmen Depth (mm)',color='blue', label='Gentoo penguin',ax=fig) #ax=fig\npinguim[pinguim.Species=='Chinstrap penguin (Pygoscelis antarctica)'].plot(kind='scatter',x='Flipper Length (mm)',y='Culmen Depth (mm)',color='green', label='Chinstrap penguin', ax=fig) # ax=fig\nfig.set_xlabel(\"Flipper Length \")\nfig.set_ylabel(\"Culmen Depth\")\nfig.set_title(\"Flipper Length  VS Culmen Depth\")\nfig=plt.gcf() # retorna a figura que est\u00e1 em constru\u00e7\u00e3o\nfig.set_size_inches(10,6)\nplt.show()","508d8238":"fig = pinguim[pinguim.Species=='Adelie Penguin (Pygoscelis adeliae)'].plot(kind='scatter',x='Culmen Depth (mm)',y='Body Mass (g)',color='red', label='Adelie Penguin')\npinguim[pinguim.Species=='Gentoo penguin (Pygoscelis papua)'].plot(kind='scatter',x='Culmen Depth (mm)',y='Body Mass (g)',color='blue', label='Gentoo penguin',ax=fig) #ax=fig\npinguim[pinguim.Species=='Chinstrap penguin (Pygoscelis antarctica)'].plot(kind='scatter',x='Culmen Depth (mm)',y='Body Mass (g)',color='green', label='Chinstrap penguin', ax=fig) # ax=fig\nfig.set_xlabel(\"Culmen Depth\")\nfig.set_ylabel(\"Body Mass\")\nfig.set_title(\"Culmen Depth VS Body Mass\")\nfig=plt.gcf() # retorna a figura que est\u00e1 em constru\u00e7\u00e3o\nfig.set_size_inches(10,6)\nplt.show()","551597f8":"plt.close()\npinguim_all.hist(edgecolor='green', linewidth=1.2)\nfig=plt.gcf()\nfig.set_size_inches(12,6)\nplt.show()","3677fcd5":"from sklearn.linear_model import LogisticRegression  # for Logistic Regression algorithm\nfrom sklearn.model_selection import train_test_split #to split the dataset for training and testing\nfrom sklearn.neighbors import KNeighborsClassifier  # for K nearest neighbours\nfrom sklearn import svm  #for Support Vector Machine (SVM) Algorithm\nfrom sklearn import metrics #for checking the model accuracy\nfrom sklearn.tree import DecisionTreeClassifier #for using Decision Tree Algoithm","e3ac238a":"pinguim_all.shape","a2ca4786":"pinguim_all.corr","f8fe389b":"plt.figure(figsize=(7,4)) \nsns.heatmap(pinguim_all.corr(),annot=True,cmap='cubehelix_r') #draws  heatmap with input as the correlation matrix calculted by(iris.corr())\nplt.show()","59ec7f8c":"train, test = train_test_split(pinguim, test_size = 0.5)\nprint(train.shape)\nprint(test.shape)","2955b01b":"train_x = train[['Culmen Length (mm)','Culmen Depth (mm)','Flipper Length (mm)','Body Mass (g)']]# taking the training data features\ntrain_y=train.Species\ntest_x= test[['Culmen Length (mm)','Culmen Depth (mm)','Flipper Length (mm)','Body Mass (g)']] # taking test data features\ntest_y =test.Species\ntrain_x.head(2)\n","825a1f67":"test_x.head(2)","307ddf00":"train_y.head()","25cadea0":"test_y.head()","200577fe":"model = svm.SVC() \nmodel.fit(train_x,train_y) \nprediction=model.predict(test_x) \nprint('The accuracy of the SVM is:')\nprint(metrics.classification_report(test_y, prediction))","0ef5447e":"model=KNeighborsClassifier(n_neighbors=10) #this examines 3 neighbours for putting the new data into a class\nmodel.fit(train_x,train_y)\nprediction=model.predict(test_x)\nprint('The accuracy of the SVM is:')\nprint(metrics.classification_report(test_y, prediction))","9cf45a6f":"model=DecisionTreeClassifier()\nmodel.fit(train_x,train_y)\nprediction=model.predict(test_x)\nprint('The accuracy of the SVM is:')\nprint(metrics.classification_report(test_y, prediction))","feb316be":"culmen=pinguim[['Culmen Length (mm)','Culmen Depth (mm)','Species']]\n\ntrain_c,test_c=train_test_split(culmen,test_size=0.3,random_state=0) \ntrain_x_c=train_c[['Culmen Length (mm)','Culmen Depth (mm)']]\ntrain_y_c=train_c.Species\ntest_x_c=test_c[['Culmen Length (mm)','Culmen Depth (mm)']]\ntest_y_c=test_c.Species","2f792065":"body=pinguim[['Flipper Length (mm)','Body Mass (g)','Species']]\ntrain_b,test_b=train_test_split(body,test_size=0.3,random_state=0) \ntrain_x_b=train_b[['Flipper Length (mm)','Body Mass (g)']]\ntrain_y_b=train_b.Species\ntest_x_b=test_b[['Flipper Length (mm)','Body Mass (g)']]\ntest_y_b=test_b.Species","63d52ec8":"model=svm.SVC()\nmodel.fit(train_x_c,train_y_c) \nprediction=model.predict(test_x_c) \nprint('The accuracy of the SVM using culmen is:',metrics.accuracy_score(test_y_c, prediction))\n\nmodel=svm.SVC()\nmodel.fit(train_x_b,train_y_b) \nprediction=model.predict(test_x_b) \nprint('The accuracy of the SVM using flipper size and body weight  is:',metrics.accuracy_score(test_y_b, prediction))","58b46cc1":"model = LogisticRegression()\nmodel.fit(train_x_c,train_y_c) \nprediction=model.predict(test_x_c) \nprint('The accuracy of the Logistic Regression using culmen is:',metrics.accuracy_score(test_y_c, prediction,))\n\nmodel.fit(train_x_b,train_y_b) \nprediction=model.predict(test_x_b) \nprint('The accuracy of the Logistic Regression using flipper size and body weight is:',metrics.accuracy_score(test_y_b,prediction))","ac247089":"model=DecisionTreeClassifier()\nmodel.fit(train_x_c,train_y_c) \nprediction=model.predict(test_x_c) \nprint('The accuracy of the Decision Tree using culmen is:',metrics.accuracy_score(test_y_c, prediction))\n\nmodel.fit(train_x_b,train_y_b) \nprediction=model.predict(test_x_b) \nprint('The accuracy of the Decision Tree using flipper size and body weight is:',metrics.accuracy_score(test_y_b,prediction))","2d3257d1":"model=KNeighborsClassifier(n_neighbors=7) \nmodel.fit(train_x_c,train_y_c) \nprediction=model.predict(test_x_c) \nprint('The accuracy of the KNN using culmen is:',metrics.accuracy_score(test_y_c, prediction,))\n\nmodel.fit(train_x_b,train_y_b) \nprediction=model.predict(test_x_b) \nprint('The accuracy of the KNN using flipper size and body weight is:',metrics.accuracy_score(test_y_b, prediction))","d8196c9d":"N\u00e3o existem colunas com valores nulos,contudo existem valores que s\u00e3o mais \u00fateis... Separarei os \u00fateis para fazer uma avalia\u00e7\u00e3o separada.","3b4ceab1":"Claramente, um problema de classifica\u00e7\u00e3o. Ent\u00e3o temos que inicar os algoritmos de classifica\u00e7\u00e3o para construir o m\u00e9todo.","4ef053e5":"Aconteceu algo diferente do convencional, mesmo que as vari\u00e1veis relacionadas ao \"culmen\" n\u00e3o estivessem bem corelacionadas. A precis\u00e3o nos resultados dos testes foram altas quando usando essas vari\u00e1veis como refer\u00eancia.","968bf294":"Por falta de experi\u00eancia tiver que remover manualmente os NaN das linhas, estavamm dando problema no final do c\u00f3digo, mas sei que n\u00e3o \u00e9 a melhor maneira de resolver isso.","278cac28":"Ol\u00e1 Professor, minhas aulas come\u00e7aram dia 8\/10 efetivamente. O codernador Thiago disse que a turma do Embarque Digital, na qual fa\u00e7o parte, poderia participar ainda da sele\u00e7\u00e3o do projeto PET. Por isso estou mandando a atividade agora.","5c88e8d8":"Ok,aparentemente est\u00e1 tudo ocorrendo bem com nossos dados. Podemos inicar os m\u00e9todos.","77d2190b":"o gr\u00e1fico de Culmen Length VS Culmen Depth nos d\u00e1 a melhor separa\u00e7\u00e3o dos dados,vamos olhar como esses dados est\u00e3o distribuidos.","dc40c9fa":"Body Mass e Flipper Length est\u00e3o bem relacionados, irei dividir os dados para teste, 75% para treinamento e 25% para teste."}}