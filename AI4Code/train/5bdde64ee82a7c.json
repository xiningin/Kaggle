{"cell_type":{"03d2f37f":"code","e26b79aa":"code","f90106d4":"code","16dda01a":"code","e181726c":"code","a3d7d8e5":"code","19e329de":"code","63605a15":"code","3eec2461":"code","90159a0b":"code","016a1bc5":"code","9e0fff1e":"code","337f1b84":"code","4ffeefaf":"code","9dce6abf":"code","45cfd791":"code","5e6a2f60":"code","e68daaf2":"code","858dc7b1":"code","c7a95bf9":"code","43362fe0":"code","e8c3f8b4":"code","346c80ce":"code","6386737c":"code","b7de8af5":"code","65c3b56d":"code","140aa388":"code","9bd785f3":"code","a89ec58c":"code","4c1f0b2b":"code","027390e8":"code","92e019ca":"code","5a76e945":"code","8187088e":"code","bf977023":"code","295dda95":"code","5f7f2c87":"code","c8c5f4f6":"code","ad95d74f":"code","371a0d92":"code","e6ecb983":"code","774d6d6f":"code","35fa4bd6":"code","da8d242d":"code","d65939d2":"code","fedc639b":"code","de4f7227":"code","7f64098e":"code","72632b0b":"code","55b01ee4":"code","730848f1":"code","d38223c3":"code","83c1ceca":"code","77aa77a1":"code","997993ef":"code","9d04f41e":"code","1b4264f3":"code","4fa47227":"code","56673980":"code","b573382c":"code","d7b3b72d":"code","08a1ff69":"code","6043356e":"code","3adf98a6":"code","1c2263d3":"code","12231dc0":"code","cfaa047d":"code","b1875098":"code","d98d8a70":"code","99f8baa9":"code","a2e2ea95":"code","118249cf":"markdown","8ae91601":"markdown","28097da7":"markdown","5222e0be":"markdown","9cbdb6be":"markdown","b46fec23":"markdown","677b6735":"markdown","f2ba3a41":"markdown","1e1f75a7":"markdown","906d2ac1":"markdown","88ce6988":"markdown","51bfbec7":"markdown","f6670a16":"markdown","93c5816c":"markdown","4638575a":"markdown","72660da0":"markdown","5949ffc6":"markdown","3830133a":"markdown","ab6c0852":"markdown","5e91082f":"markdown","56ff5b1c":"markdown","42c66564":"markdown","15e0463a":"markdown","ec4750e9":"markdown","3988a036":"markdown","d58f4452":"markdown","56d02dc2":"markdown","f19ee73f":"markdown","910ecebb":"markdown","eb8880fd":"markdown","97ff5e93":"markdown","43c2c9bd":"markdown","e60861f9":"markdown","097ff26b":"markdown","2084a998":"markdown","bd3e9fa5":"markdown","bc0516e2":"markdown","17b84dbe":"markdown","49c72ff0":"markdown","638a6a02":"markdown","b5e9b802":"markdown","7e5e1a73":"markdown","c9cfc710":"markdown","7ca69d78":"markdown","a2bd415f":"markdown","5d7287fd":"markdown"},"source":{"03d2f37f":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e26b79aa":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","f90106d4":"df = pd.read_csv('\/kaggle\/input\/MobilePhones.csv')","16dda01a":"len(df)","e181726c":"df.info()","a3d7d8e5":"df.describe()","19e329de":"df.head()","63605a15":"df['MobileName'][0].split(\"(\")[1].split(\",\")","3eec2461":"df['Color'] = df['MobileName'].apply(lambda x : x.split(\",\")[0].split(\"(\")[1] \n                                        if len(x.split(\",\")[0].split(\"(\")) > 1 else 'No Color')\n\ndf.head()","90159a0b":"df['Brand'] = df['MobileName'].apply(lambda x : x.split()[0])\ndf['Brand'] = df['Brand'].apply(lambda x : 'I Kall' if x == 'I' else x)\ndf.head()","016a1bc5":"df['MobileName'] = df['MobileName'].apply(lambda x : x.split(\"(\")[0])\ndf.head()","9e0fff1e":"df['Discount'] = df['ListPrice'] - df['SalesPrice']\ndf.head()","337f1b84":"print(df['Brand'].value_counts())\n\nplt.figure(figsize=(10,5))\nsns.countplot('Brand', data=df)","4ffeefaf":"print(df['MobileName'].value_counts()[:20])\n\nplt.figure(figsize=(20,5))\nsns.countplot('MobileName', data=df)\nplt.xticks(rotation=60)","9dce6abf":"print(df['Stars'].value_counts())\n\nsns.distplot(df['Stars'])","45cfd791":"print(\"Phones with lowest stars\")\nprint(\"\\n\".join(df[df['Stars']==3.0]['MobileName'].unique()))\n\nprint(\"\\nPhones with highest stars\")\nprint(\"\\n\".join(df[df['Stars']==4.6]['MobileName'].unique()))","5e6a2f60":"plt.figure(figsize=(10,5))\nsns.barplot(df['Brand'],df['Stars'],data=df)","e68daaf2":"discount = df['Discount'].value_counts()[:5]\ndiscount.plot(kind='bar',title='Top 5 Discount Rate (In Rupees)')","858dc7b1":"print(\"*** RAM *** \")\nprint(df['RAM_GB'].value_counts())\nprint(\"\\n*** ROM *** \")\nprint(df['ROM_GB'].value_counts())","c7a95bf9":"print(df[df['RAM_GB'] == 32].index)\nprint(df[df['ROM_GB'] == 4].index)","43362fe0":"df.drop([115,118,80], inplace=True,axis=0)","e8c3f8b4":"print(\"*** RAM *** \")\nprint(df['RAM_GB'].value_counts())\nprint(\"\\n*** ROM *** \")\nprint(df['ROM_GB'].value_counts())\n\nplt.figure(figsize=(14,5))\n\nplt.subplot(1,2,1)\nplt.title(\"RAM Space in GB\")\nsns.countplot('RAM_GB', data=df)\nplt.xlabel(\"GB\")\n\nplt.subplot(1,2,2)\nplt.title(\"ROM Space in GB\")\nsns.countplot('ROM_GB', data=df)\nplt.xlabel(\"GB\")","346c80ce":"print(df['Color'].value_counts()[:10])\n\npopcol = df['Color'].value_counts()[:10]\n\nplt.figure(figsize=(10,5))\npopcol.plot(kind='bar')","6386737c":"plt.figure(figsize=(10,5))\n\nplt.subplot(2,2,1)\nplt.title(\"Ratings\")\nsns.boxplot('Ratings', data=df)\n\nplt.subplot(2,2,2)\nplt.title(\"Reviews\")\nsns.boxplot('Reviews', data=df)\n\nplt.subplot(2,2,3)\nplt.title(\"List Price\")\nsns.boxplot('ListPrice', data=df)\n\nplt.subplot(2,2,4)\nplt.title(\"Sales Price\")\nsns.boxplot('SalesPrice', data=df)\n\nplt.tight_layout(pad=2.0)","b7de8af5":"df = df[df['Reviews'] < 5500]\ndf = df[df['Ratings'] < 60000]","65c3b56d":"plt.figure(figsize=(10,5))\n\nplt.subplot(2,2,1)\nplt.title(\"Ratings\")\nsns.boxplot('Ratings', data=df)\n\nplt.subplot(2,2,2)\nplt.title(\"Reviews\")\nsns.boxplot('Reviews', data=df)\n\nplt.subplot(2,2,3)\nplt.title(\"List Price\")\nsns.boxplot('ListPrice', data=df)\n\nplt.subplot(2,2,4)\nplt.title(\"Sales Price\")\nsns.boxplot('SalesPrice', data=df)\n\nplt.tight_layout(pad=2.0)","140aa388":"df = df[df['ListPrice'] < 30000]","9bd785f3":"plt.figure(figsize=(10,5))\n\nplt.subplot(2,2,1)\nplt.title(\"Ratings\")\nsns.boxplot('Ratings', data=df)\n\nplt.subplot(2,2,2)\nplt.title(\"Reviews\")\nsns.boxplot('Reviews', data=df)\n\nplt.subplot(2,2,3)\nplt.title(\"List Price\")\nsns.boxplot('ListPrice', data=df)\n\nplt.subplot(2,2,4)\nplt.title(\"Sales Price\")\nsns.boxplot('SalesPrice', data=df)\n\nplt.tight_layout(pad=2.0)","a89ec58c":"plt.figure(figsize=(10,5))\nsns.heatmap(df.corr(), annot=True)","4c1f0b2b":"plt.figure(figsize=(10,5))\n\nplt.suptitle(\"Correlation Between Attributes\")\n\nplt.subplot(1,2,1)\nplt.title(\"Postive Correlation\")\nplt.scatter(df['Ratings'],df['Reviews'], marker='v')\nplt.xlabel(\"Ratings\")\nplt.ylabel(\"Review\")\n\nplt.subplot(1,2,2)\nplt.title(\"Negative Correlation\")\nplt.scatter(df['Discount'],df['Reviews'], marker='v')\nplt.xlabel(\"Discount in Rupees\")\nplt.ylabel(\"Ratings\")\n\nplt.tight_layout(pad=3.5)","027390e8":"table = pd.pivot_table(df, index='Brand', values=['SalesPrice','Discount','Ratings'])\ntable","92e019ca":"table.plot(kind='bar',figsize=(10,5))","5a76e945":"plt.figure(figsize=(10,5))\nsns.countplot('Brand', data=df)","8187088e":"df.head()","bf977023":"df.Brand.value_counts().index","295dda95":"df['Brand'] = df['Brand'].map({'Realme':0,'Vivo':1,'OPPO':2,'I Kall':3,'Redmi':4,\n                               'Infinix':5,'POCO':7,'Motorola':8,'Tecno':9})   \ndf.head(10)","5f7f2c87":"from sklearn.model_selection import train_test_split \nfrom sklearn.metrics import classification_report, confusion_matrix","c8c5f4f6":"dfnumberic = df.select_dtypes(include=[np.number])\ndfnumberic.head()","ad95d74f":"print(\"Shape of the numberic data frame\")\nprint(dfnumberic.shape)","371a0d92":"X = dfnumberic.drop('SalesPrice',axis=1)\ny = dfnumberic['SalesPrice']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=101)","e6ecb983":"from sklearn.linear_model import LinearRegression","774d6d6f":"lrm = LinearRegression()\nlrm.fit(X_train,y_train)","35fa4bd6":"predictionslrm = lrm.predict(X_test)","da8d242d":"scorelrm = round((lrm.score(X_test, y_test)*100),2)\nprint (\"Model Score:\",scorelrm,\"%\")","d65939d2":"from sklearn.linear_model import Ridge","fedc639b":"rrm = Ridge(alpha=100)\nrrm.fit(X_train,y_train)","de4f7227":"predictionrrm = rrm.predict(X_test)","7f64098e":"scorerrm = round((rrm.score(X_test, y_test)*100),2)\nprint (\"Model Score:\",scorerrm,\"%\")","72632b0b":"data = [['Linear Regression',scorelrm],['Ridge Regression',scorerrm]]\nfinal = pd.DataFrame(data,columns=['Algorithm','Precision'],index=[1,2])\nfinal","55b01ee4":"df.head()","730848f1":"df['UserType'] = 'Teen'\nhigh = df[(df['RAM_GB'] > 4) & (df['ROM_GB'] > 32)].index\nlow =  df[(df['SalesPrice'] < 12000) & (df['ROM_GB'] < 64)].index","d38223c3":"for i in high:\n    df['UserType'].loc[i] = 'High'\nfor i in low:\n    if i not in high:\n        df['UserType'].loc[i] = 'Low'","83c1ceca":"df['UserType'].value_counts()","77aa77a1":"df.head()","997993ef":"df['UserType'] = df['UserType'].map({'High':0,'Teen':1,'Low':2})","9d04f41e":"dfnumberic = df.select_dtypes(include=[np.number]).drop('ListPrice', axis=1)\ndfnumberic.head()","1b4264f3":"dfnumberic[['Ratings','Reviews','Stars','SalesPrice','Discount']].describe()","4fa47227":"def ratings(num):\n    if num < 10000:\n        return 1\n    elif num >= 10000 & num < 20000:\n        return 2\n    elif num >= 20000 & num < 30000:\n        return 3\n    elif num >= 30000 & num < 40000:\n        return 4\n    elif num >= 40000 & num < 50000:\n        return 5\n    else:\n        return 6\n    \n    \ndef reviews(num):\n    if num < 1000:\n        return 1\n    elif num >= 1000 & num < 2000:\n        return 2\n    elif num >= 2000 & num < 3000:\n        return 3\n    elif num >= 3000 & num < 4000:\n        return 4\n    else:\n        return 5\n\n    \n\ndef salesprice(num):\n    if num < 5000:\n        return 1\n    elif num >= 5000 & num < 10000:\n        return 2\n    elif num >= 10000 & num < 15000:\n        return 3\n    elif num >= 15000 & num < 20000:\n        return 4\n    else:\n        return 5\n    \ndef stars(num):\n    if num < 3.0:\n        return 1\n    elif num >= 3 and num < 3.5:\n        return 2\n    elif num >= 3.5 and num < 4.0:\n        return 3\n    elif num >= 4.0 and num < 4.5:\n        return 4\n    else:\n        return 5\n\n\ndef discount(num):\n    if num == 0:\n        return 0\n    elif num < 1200:\n        return 1\n    elif num >= 1200 & num < 2400:\n        return 2\n    elif num >= 2400 & num < 3600:\n        return 3\n    elif num >= 4800 & num < 6000:\n        return 4\n    else:\n        return 5","56673980":"dfnumberic['Ratings'] = dfnumberic['Ratings'].apply(ratings)\ndfnumberic['Reviews'] = dfnumberic['Reviews'].apply(reviews)\ndfnumberic['Stars'] = dfnumberic['Stars'].apply(stars)\ndfnumberic['SalesPrice'] = dfnumberic['SalesPrice'].apply(salesprice)\ndfnumberic['Discount'] = dfnumberic['Discount'].apply(discount)","b573382c":"dfnumberic.head()","d7b3b72d":"X = dfnumberic.drop(['UserType'],axis=1)\ny = dfnumberic['UserType']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=101)","08a1ff69":"from sklearn.ensemble import RandomForestClassifier","6043356e":"rmodel = RandomForestClassifier(n_estimators=100)\nrmodel.fit(X_train,y_train)","3adf98a6":"rprediction = rmodel.predict(X_test)\nprint(\"Confusion Matrix\")\nprint(confusion_matrix(y_test,rprediction))\n\nrscore = round((rmodel.score(X_test, y_test)*100),2)\nprint (\"\\nModel Score:\",rscore,\"%\")","1c2263d3":"from sklearn.neighbors import KNeighborsClassifier","12231dc0":"kmodel = KNeighborsClassifier(n_neighbors=3)\nkmodel.fit(X_train,y_train)","cfaa047d":"kpredictions = kmodel.predict(X_test)\nprint(\"Confusion Matrix\")\nprint(confusion_matrix(y_test,kpredictions))\n\nkscore = round((kmodel.score(X_test, y_test)*100),2)\nprint (\"\\nModel Score:\",kscore,\"%\")","b1875098":"from sklearn.tree import DecisionTreeClassifier","d98d8a70":"dmodel = DecisionTreeClassifier()\ndmodel.fit(X_train,y_train)","99f8baa9":"dprediction = dmodel.predict(X_test)\nprint(\"Confusion Matrix\")\nprint(confusion_matrix(y_test,dprediction))\n\ndscore = round((dmodel.score(X_test, y_test)*100),2)\nprint (\"\\nModel Score:\",dscore,\"%\")","a2e2ea95":"data = [['Random Forest',rscore],['K-Nearest Neighbour',kscore],['Decision Tree',dscore]]\nfinal = pd.DataFrame(data,columns=['Algorithm','Precision'],index=[1,2,3])\nfinal","118249cf":"So, we can see that our assumption that the outlier may belong to a single product was wrong thus we need to handle this additional outlier before we build our predictive model.","8ae91601":"## Data Loading","28097da7":"## 2. Ridge Regression","5222e0be":"Clubbing the above two graphs we can get a lot of insights. Although Realme has a variety of products their ratings are far less than POCO's even though POCO offers a limited number of models. It seems like a variation of models does no good to OPPO as well.","9cbdb6be":"## <li> Model 1","b46fec23":"-------------------------------------------------------------------------------------------------------------------------------","677b6735":"<li>Several cell phones manufactured by Realme are available. These phones not only provide a variety of models but also has many variations concerning the &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color of the models.<\/li>\n<li>The rating of Model \"I Kall K6\" is very low, whereas the ratings of model \"Realme C11, Apple iPhone XR, and Realme Narzo 10A\" are high. This indicates &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;that these two models are very popular among people and satisfy customers' needs.<\/li>\n<li>While analysis we realized there were some data inconsistencies in the value of RAM and ROM, since the number of inconsistent values is very small we &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;choose to drop them by their row index.<\/li>\n<li>Several phones are having basic configurations that consist of a 4GB RAM and 64GB ROM where the ROM is nothing but the external storage capacity of &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a phone.<\/li>\n<li>We observe that there are many variations on the colors Blue and White, probably these colors are well demanded by the customers.<\/li>\n<li>We came across several outliers in the attributes Ratings, Reviews, and List Price. We eliminated them by imposing conditions on the data frame.<\/li>\n<li>Several positive and negative relationship was found between many attributes.<\/li>\n<li>Lastly, we notice that despite the number of available POCO phones are less this product receives a good amount of ratings for their phone and they offer a &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;moderate amount of discount. On the other hand, OPPO and Realme having a variation of its models fail to receive equivalent ratings.<\/li> \n\n ","f2ba3a41":"## 2. K-Nearest Neighbour","1e1f75a7":"-------------------------------------------------------------------------------------------------------------------------------","906d2ac1":"------------------------------------------------------------------------------------------------------------------------------","88ce6988":"Apart from \"I Kall\" the stars given to all other brands are better. Probably the reason being that the company may not be known by many customers. Thus does not satisfy the consumer mentality of fimilarity.  ","51bfbec7":"We observe that there is a high positive correlation between the size of the RAM and the List and Sales Price. There is also a positive correlation between Ratings and Review and List and Sales Price. Also, the attribute Discount has a negative correlation with the attributes of ROM_GB, Ratings, and Reviews. We will now analyze positively and negatively related attributes. ","f6670a16":"## Data Manipulation","93c5816c":"Blue and White-colored phones are largely available.","4638575a":"The maximum amount of RAM and ROM are 8GB and 128GB respectively. There are many Mobile Phones with a 4GB RAM and 64GB ROM.","72660da0":"-------------------------------------------------------------------------------------------------------------------------------","5949ffc6":"I Kall offers a very less discount whereas OPPO has the highest. As far as the Ratings are concerned we observe that POCO has received a far better number of ratings as compared to the rest of the brands. Also, its Sales Price is much more than the rest.","3830133a":"## 3.Decision Tree","ab6c0852":"There are 3 inconsistencies in the values of the RAM and ROM. Thus we drop these 3 rows.  ","5e91082f":"-------------------------------------------------------------------------------------------------------------------------------","56ff5b1c":"## Feature Engineering","42c66564":"-------------------------------------------------------------------------------------------------------------------------------","15e0463a":"Finally, the two outliers are handled and we can proceed with other analyses. Let us now see some relationships between various attributes.","ec4750e9":"We will first build a model that can predict the Sales Price of each phone.\nFor the purpose of Data Modeling we need to split our data into training and test set. Once the split is done we can put our data into various models and check each the precision of each model. We select the model with the highest precision score.","3988a036":"## Data Visualization","d58f4452":"## <li> Model 2","56d02dc2":"We see that both our models are able to perfectly predict the price of the phone but in reality, this would not be completely possible. This result of a perfect score is caused because of overfitting, due to the small amount of data.  ","f19ee73f":"We notice each of these attributes has an outlier which could probably be one product itself that causes to be as an outlier for all the other attributes. We will need to handle this as outliers would lead to building a wrong predictive model. We will first deal with the outliers with the help of the Reviews attribute.","910ecebb":"-------------------------------------------------------------------------------------------------------------------------------","eb8880fd":"## Data Modeling","97ff5e93":"The stars given to the product lie between 3.0 to 4.6.","43c2c9bd":"Some products do not offer any discount. But, among those that offer 1000\u20b9 is the most offered discount.","e60861f9":"-------------------------------------------------------------------------------------------------------------------------------","097ff26b":"## 1. Random Forest","2084a998":"## Summary of Analysis","bd3e9fa5":"-------------------------------------------------------------------------------------------------------------------------------","bc0516e2":"\n![image.png](attachment:image.png)","17b84dbe":"## Mobile Phone Analysis","49c72ff0":"We now create an attribute that suggests which phone is suitable for what kind of a person. For this, we will use only 3 attributes from the data frame (df) they are RAM_GB, ROM_GB, and SalePrice.","638a6a02":"Flipkart is a famous Indian E-Commerce website, that offers a wide range of products right from clothing to electronics to edibles to home appliances and whatnot. In this notebook, we closely analyze and visualize the details of a specific product sold on Flipkart. A cell phone is also known as a mobile phone or simply a phone has become a necessity than just a luxury. In this era, each and everyone has their mobile phones. Do we sometimes wonder which phone is the best for us? Many of us generally know what we want, so why not help those who don't? To answer these questions we create 2 data models which will be as follows<br><br>\n<u>Model 1:<\/u><br>\nA basic model that predicts the Sales Price of each phone.<br><br>\n<u>Model 2:<\/u><br>\nWe will introduce an additional attribute that would denote which phone would be the best fit for an appropriate group and later build a predictive model as well.<br>\n\nFor this we will observe the following three conditions:\n<li>A customer with necessities won't buy a high-priced phone.\n<li>Young customers will prefer a higher memory phone.\n<li>Customer with high ended needs would need a faster phone with good memory.<br><br>\n\nThe data used in this notebook has been extracted from the Flipkart website by Web Scraping. The following is a GitHub link that will redirect you to the simple web scraping code.<br>\n<a href=\"https:\/\/github.com\/ginelledsouza\/Web-Scraping\">Web Scraping<\/a>","b5e9b802":"We observe a strong positive correlation between Ratings and Reviews which means with every increase in the number of ratings there will be an equivalent increase in the number of reviews. Whereas in the negative correlation we spot a slightly negative relation, that means for some products that have lesser discounts receive fewer numbers or ratings and reviews.","7e5e1a73":"Kindly provide an upvote if this notebook was useful. Also, I would greatly appreciate any feedback or suggestions for improvement. Thank-you :)","c9cfc710":"## 1. Linear Regression","7ca69d78":"There are many products available that are manufactured by \"RealMe\". Let us now view how many distinct products are manufactured and sold by each of these brands.","a2bd415f":"------------------------------------------------------------------------------------------------------------------------------","5d7287fd":"We observe that \"Realme\" is the only brand that does not manufacture only have a single model, but have a variety of models available - \"Realme 5i, Realme 6, Realme C11, Realme Narzo 10A, Realme 6 Pro and many\". Whereas other products have only variations within their model.\nThe \"Realme Narzo 10A\" mobile phones available for sale have the most variation within the model."}}