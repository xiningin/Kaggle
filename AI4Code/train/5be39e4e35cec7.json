{"cell_type":{"cf686833":"code","d4c1cfb4":"code","ceb5a8ed":"code","eeeb1d19":"code","5fbe6fe4":"code","13768646":"code","41ee8ecf":"code","77952d86":"code","59cead13":"code","d675b84a":"code","6331736b":"code","a3dcc1d0":"code","2019177c":"code","9627b211":"code","17c51ac9":"code","51b4c04e":"code","e2513a1f":"code","47d1df7f":"code","401308f0":"code","f212178b":"code","16bb0b31":"code","096590db":"code","1df612ca":"code","e8ee6ef6":"code","10707557":"code","592227d9":"code","fb7974a1":"code","b9a1507d":"code","3a904e4b":"code","83a81bad":"code","af3ec92e":"code","02d57c87":"code","cd8450e0":"markdown","c782c017":"markdown","93a35b14":"markdown","98933c6e":"markdown","cde39122":"markdown","ce0fe113":"markdown","d2641d58":"markdown","72911dbf":"markdown","f24a0210":"markdown","d79cf034":"markdown","50ad390b":"markdown","3e198591":"markdown","0d4c49b1":"markdown"},"source":{"cf686833":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nplt.style.use(\"seaborn-whitegrid\")\nimport seaborn as sns\n\nfrom collections import Counter\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d4c1cfb4":"train_df = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_PassengerId = test_df.PassengerId","ceb5a8ed":"train_df.head()","eeeb1d19":"train_df.columns","5fbe6fe4":"train_df.describe()","13768646":"train_df.info()","41ee8ecf":"train_df.info()","77952d86":"def bar_plot(variable):\n    \"\"\"\n    input : variable ex: \"Sex\"\n    output : bar plot & value count\n    \"\"\"\n    #  get feature\n    var = train_df[variable]\n    # count number of categorical variable(value\/sample)\n    varValue = var.value_counts()\n    \n    #visualize\n    plt.figure(figsize = (9,3))\n    plt.bar(varValue.index,varValue)\n    plt.xticks(varValue.index,varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{} : \\n {}\".format(variable,varValue))","59cead13":"category1 = [\"Survived\",\"Sex\",\"Pclass\",\"Embarked\",\"SibSp\",\"Parch\"]\nfor c in category1:\n    bar_plot(c)","d675b84a":"category2 = [\"Cabin\",\"Name\",\"Ticket\"]\nfor c in category2:\n    print(\"{} \\n\".format(train_df[c].value_counts()))","6331736b":"def plot_hist(variable):\n    plt.figure(figsize = (9,3))\n    plt.hist(train_df[variable],bins = 50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} Distribution with Histogram\".format(variable))\n    plt.show()","a3dcc1d0":"numericVariable = [\"Fare\",\"Age\",\"PassengerId\"]\nfor n in numericVariable:\n    plot_hist(n)","2019177c":"# Pclass vs Survived \ntrain_df[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"],as_index = True).mean().sort_values(by = \"Survived\",ascending = False)","9627b211":"# Sex vs Survived\ntrain_df[[\"Sex\",\"Survived\"]].groupby([\"Sex\"],as_index = True).mean().sort_values(by = \"Survived\",ascending = False)","17c51ac9":"# SibSp vs Survived\ntrain_df[[\"SibSp\",\"Survived\"]].groupby([\"SibSp\"],as_index = True).mean().sort_values(by = \"Survived\",ascending = False)","51b4c04e":"# Parch vs Survived\ntrain_df[[\"Parch\",\"Survived\"]].groupby([\"Parch\"],as_index = True).mean().sort_values(by = \"Survived\",ascending = False)","e2513a1f":"data = train_df.copy()\ndata[\"Age Level\"] = [\"Child\" if(each < 18) else \"Middle-Aged\" if(each < 45) else \"Old\" for each in data.Age]\n# Age Level Vs Survived\ndata[[\"Age Level\",\"Survived\"]].groupby([\"Age Level\"],as_index = True).mean().sort_values(by = \"Survived\",ascending = False)","47d1df7f":"data.head()","401308f0":"def detect_outliers(df,features):\n    outlier_indices = []\n    \n    for c in features:\n        # 1st quartile\n        Q1 = np.percentile(df[c],25)\n        # 3rd quartile\n        Q3 = np.percentile(df[c],75)\n        # IQR \n        IQR = Q3 - Q1\n        # Outlier step\n        outlier_step = IQR * 1.5\n        # Detect outlier and their indeces\n        outlier_list_col = df[(df[c] < Q1 - outlier_step) | (df[c] > Q3 + outlier_step)].index\n        #  store indeces\n        outlier_indices.extend(outlier_list_col)\n        \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i,v in outlier_indices.items() if v > 2)\n    \n    return multiple_outliers","f212178b":"train_df.loc[detect_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"])]","16bb0b31":"# Drop Outliers\ntrain_df = train_df.drop(detect_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"]),axis = 0).reset_index(drop = True)","096590db":"train_df_len = len(train_df)\ntrain_df = pd.concat([train_df,test_df],axis = 0).reset_index(drop = True)","1df612ca":"train_df.head()","e8ee6ef6":"train_df.columns[train_df.isnull().any()]","10707557":"train_df.info()","592227d9":"train_df.isnull().sum()","fb7974a1":"train_df[train_df[\"Embarked\"].isnull()]","b9a1507d":"train_df.boxplot(column = \"Fare\",by = \"Embarked\")\nplt.figure(figsize = (9,3))\nplt.show()","3a904e4b":"train_df[\"Embarked\"] = train_df[\"Embarked\"].fillna(\"C\")\ntrain_df[train_df[\"Embarked\"].isnull()]","83a81bad":"train_df[train_df[\"Fare\"].isnull()]","af3ec92e":"train_df[\"Fare\"] = train_df[\"Fare\"].fillna(train_df[train_df[\"Pclass\"] == 3][\"Fare\"].mean())","02d57c87":"train_df[train_df[\"Fare\"].isnull()]","cd8450e0":"<a id = \"7\"><\/a><br>\n# Outlier Detection ","c782c017":"<a id = \"3\"><\/a><br>\n# Univariate Variable Analysis\n* Categorical Variable Analysis: Survived, Sex, Pclass, Embarked, Cabin, Name, Ticket, SibSp and Parch\n* Numerical Variable Analysis: Fare, Age and PassengerId","93a35b14":"<a id = \"1\"><\/a><br>\n# Load And Check Data","98933c6e":"* Pclass - Survived\n* Sex - Survived\n* SibSp - Survived\n* Parch - Survived","cde39122":"<a id = \"6\"><\/a><br>\n# Basic Data Analysis","ce0fe113":"<a id = \"2\"><\/a><br>\n# Variable Description\n1. PassengerID: uniqe \u0131d number to each passenger\n2. Survived: passanger survive(1) or died(0)\n3. Pclass: passanger class\n4. Name: name\n5. Sex: gender of passanger\n6. Age: age of passanger  \n7. SibSp: number of siblings\/spouses in Titanic\n8. Parch: number of parents\/children in Titanic\n9. Ticket: ticket number\n10. Fare: amount of money spent on ticket\n11. Cabin: cabin category\n12. Embarked: port where passangers embarked (C = Cherbourg,Q = Queenstown, S = Southampton)","d2641d58":"<a id = \"5\"><\/a><br>\n## Numerical Variable ","72911dbf":"<a id = \"8\"><\/a><br>\n# Missing Value\n* Find Missing Value\n* Fill Missing Value","f24a0210":"# Introduction\nThe sinking of the Titanic is one of the most infamous shipwrecks in history.\n\nOn April 15, 1912, during her maiden voyage, the widely considered \u201cunsinkable\u201d RMS Titanic sank after colliding with an iceberg. Unfortunately, there weren\u2019t enough lifeboats for everyone onboard, resulting in the death of 1502 out of 2224 passengers and crew.\n\n<font color = \"blue\">\nContent:\n    \n1. [Load And Check Data](#1)\n1. [Variable Description](#2)\n    * [Univariate Variable Analysis](#3)\n        * [Categorical Variable](#4)\n        * [Numerical Variable](#5)\n1. [Basic Data Analysis](#6)        \n1. [Outlier Detection](#7)\n1. [Missing Value](#8)\n    * [Find Missing Value](#9)\n    * [Fill Missing Value](#10)","d79cf034":"<a id = \"4\"><\/a><br>\n## Categorical Variable ","50ad390b":"* float64(2) : Age and Fare\n* int64(5) : PassengerId, Survived, Pclass, SibSp and Parch \n* object(5) : Name, Sex, Ticket, Cabin and Embarked","3e198591":"<a id = \"10\"><\/a><br>\n## Fill Missing Value\n* Embarked has 2 missing value\n* Fare has ony 1 missing value","0d4c49b1":"<a id = \"9\"><\/a><br>\n## Find Missing Value"}}