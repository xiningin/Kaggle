{"cell_type":{"c2c19dcc":"code","0ba9a9d1":"code","bf7b656e":"code","a57eb9c8":"code","576faef5":"code","1401e28d":"code","dca74a92":"code","62f3ee6d":"code","e94d5bdd":"code","c31d1e72":"code","b7360b39":"code","eead8d77":"code","c321dc03":"code","9b333018":"code","0309ea53":"code","d88c0ce0":"code","2d9d0b6f":"code","1441f556":"code","1a2e1d23":"code","acc4c2c3":"code","f8b3ce4a":"code","2b586efd":"markdown","fa606674":"markdown","fb68b8fc":"markdown","3561e71a":"markdown","80b9b7bf":"markdown","bd10e877":"markdown","a9ab56a9":"markdown"},"source":{"c2c19dcc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","0ba9a9d1":"train_data = pd.read_csv('..\/input\/train-data-2.csv')\ntest_data = pd.read_csv('..\/input\/test-data-2.csv')\nsubmission = pd.read_csv('..\/input\/sample-submission-2.csv')","bf7b656e":"train_data.head()","a57eb9c8":"test_data.head()","576faef5":"train_data.isnull().sum()","1401e28d":"train_data = train_data.fillna('')\ntest_data = test_data.fillna('')","dca74a92":"from sklearn.feature_extraction.text import TfidfVectorizer\n\nvectorizer = TfidfVectorizer(max_features=5000)\nX = vectorizer.fit_transform(train_data['review_sangat_singkat'])\ny = train_data['rating']","62f3ee6d":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import StratifiedKFold\n\ndef get_skfold():\n    return StratifiedKFold(n_splits=5, shuffle=True, random_state=1)","e94d5bdd":"score = cross_val_score(LogisticRegression(C=3), X, y, scoring='neg_mean_squared_error', cv=get_skfold())","c31d1e72":"rmse = [np.sqrt(-1 * x) for x in score]\nprint(np.mean(rmse))","b7360b39":"import itertools\ndef remove_repeating_characters(text):\n    return ''.join(''.join(s)[:1] for _, s in itertools.groupby(text))","eead8d77":"train_data['review_sangat_singkat'] = train_data['review_sangat_singkat'].apply(remove_repeating_characters)\ntest_data['review_sangat_singkat'] = test_data['review_sangat_singkat'].apply(remove_repeating_characters)","c321dc03":"X = vectorizer.fit_transform(train_data['review_sangat_singkat'])\ny = train_data['rating']","9b333018":"score = cross_val_score(LogisticRegression(C=3), X, y, scoring='neg_mean_squared_error', cv=get_skfold())","0309ea53":"rmse = [np.sqrt(-1 * x) for x in score]\nprint(np.mean(rmse))","d88c0ce0":"clf = LogisticRegression(C=3)\nclf.fit(X,y)\nresult = clf.predict(vectorizer.transform(test_data['review_sangat_singkat']))","2d9d0b6f":"submission.head()","1441f556":"submission.rating = result","1a2e1d23":"submission.head()","acc4c2c3":"submission.rating.value_counts()","f8b3ce4a":"submission.to_csv(\"submission.csv\", index=False)","2b586efd":"Distribusi hasil predict:","fa606674":"Selamat mencoba!","fb68b8fc":"# Modeling\nTo do: \n* Change model?\n* Hyperparameter tuning?","3561e71a":"# Load data","80b9b7bf":"Lebih bagus! Mari predict","bd10e877":"Sekarang coba kalau kita tambah preprocessingnya dengan menghilangkan huruf-huruf berulang:","a9ab56a9":"# Data Preprocessing\nTo do:\n* Remove repeating character?\n* Transform slang word \/ emoticon?\n* Stemming?\n"}}