{"cell_type":{"69cac072":"code","f3482839":"code","f74ec5dd":"code","c558b604":"code","de98b8ce":"code","cfe86b5b":"code","670d1854":"code","5291af2b":"code","2068a67e":"code","d7ae2f1d":"code","6cc16cd5":"markdown","432ce2d2":"markdown","53be3be7":"markdown"},"source":{"69cac072":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f3482839":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom PIL import Image\nfrom wordcloud import WordCloud, STOPWORDS \n","f74ec5dd":"op_df = pd.read_csv(\"..\/input\/chess-opening-dataset\/high_elo_opening.csv\")\nop_df.head().T","c558b604":"op_df.info()","de98b8ce":"def standardize_text(df, text_field):\n    df[text_field] = df[text_field].str.replace(r\"http\\S+\", \"\")\n    df[text_field] = df[text_field].str.replace(r\"http\", \"\")\n    df[text_field] = df[text_field].str.replace(r\"@\\S+\", \"\")\n    df[text_field] = df[text_field].str.replace(r\"[^A-Za-z0-9(),!?@\\'\\`\\\"\\_\\n]\", \" \")\n    df[text_field] = df[text_field].str.replace(r\"@\", \"at\")\n    df[text_field] = df[text_field].str.lower()\n    return df\n\nop_df = standardize_text(op_df, \"opening_name\")\nop_df.head(20)","cfe86b5b":"plt.subplots(figsize=(15, 15))\n#text = 'all your base are belong to us all of your base base base'\nstopwords = set(STOPWORDS)\nstopwords.add(\"Variation\")\nstopwords.add(\"Classical\")\nstopwords.add(\"System\")\nstopwords.add(\"Attack\")\nstopwords.add(\"General\")\nstopwords.add(\"upon\")\n\n\n\ndef generate_wordcloud(text): # optionally add: stopwords=STOPWORDS and change the arg below\n    wordcloud = WordCloud(max_words=5000, background_color=\"white\",\n                          relative_scaling = 0.5,\n                          stopwords = stopwords\n                          ).generate(text)\n    plt.imshow(wordcloud)\n    plt.axis(\"off\")\n    plt.show()\n\ngenerate_wordcloud(op_df.opening_name.to_string())","670d1854":"d4 = op_df[op_df['move1w']=='d4'].groupby('move1b').agg({'num_games': np.sum, 'white_wins' : np.sum, 'black_wins':np.sum})\n\nd4['white_odds'] = d4['white_wins'] \/ d4['black_wins']\n\nd4 = d4.sort_values('white_odds')\n\nd4","5291af2b":"plt.style.use('fivethirtyeight')\nplt.figure(figsize=(12, 5))\nsns.barplot(d4.reset_index()['move1b'],d4.reset_index()['white_odds'] , palette='rocket')","2068a67e":"w1 = op_df.groupby('move1w').agg({'num_games': np.sum, 'white_wins' : np.sum, 'black_wins':np.sum})\nw1['white_odds'] = w1['white_wins'] \/ w1['black_wins'] \nres = w1.sort_values('white_odds', ascending = False)\nres","d7ae2f1d":"plt.style.use('seaborn-poster')\nplt.figure(figsize=(15, 5))\nsns.barplot(res.reset_index()['move1w'],res.reset_index()['white_odds'] , palette='coolwarm')","6cc16cd5":"### Most effective opening moves ","432ce2d2":"### Best move for black after d4 opening","53be3be7":"#### *Strange g3 is the best opening move but is rarely played.d4 is the second strongest and second most likely to be played. e4 and d4 overshadow the stronger openings c4 and g3*\n>#### *Now we can alalyze which openings starts with 'g3' and continue analysis by its move list. But its hard and just could be a practice some chess apps analyse games.Moreever i prefer to analyze Alphazero and deep mind RL performance !*"}}