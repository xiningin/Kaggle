{"cell_type":{"89ab3032":"code","142bcc6a":"code","256a204d":"code","ca7a7014":"code","073733b8":"code","2f0218d7":"code","a0604129":"code","33f0b03e":"code","e5b0ec1b":"code","64827c42":"code","8c79b264":"code","28a6cd9d":"code","b8a934fb":"code","72b3580b":"code","c28cdfc0":"code","796c0571":"code","d985aa6f":"code","e1fc8761":"code","eec7fd7a":"code","15924e46":"code","b7a84779":"code","aa4d7f36":"code","c5907959":"code","63a72019":"code","47ebdf4e":"code","71ce7616":"code","1adebee8":"markdown","4ea9c8c2":"markdown","19005d4b":"markdown","ce052bdd":"markdown","90dbb95e":"markdown","5bb7e087":"markdown","962863b7":"markdown","cf0cbe0a":"markdown","9bc1c19d":"markdown","9e086c77":"markdown","ff213064":"markdown","b0a87f80":"markdown","d094e2ce":"markdown","850e9ba0":"markdown","9e5bda61":"markdown","89e3ef04":"markdown","700a6914":"markdown","c3f006bd":"markdown","40bd8e5a":"markdown","a924b1f0":"markdown","09ad7de6":"markdown"},"source":{"89ab3032":"import matplotlib.pyplot as plt\nimport pandas as pd\nimport pylab as pl\nimport numpy as np\n%matplotlib inline\nimport math\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        ","142bcc6a":"# Load our warnings libraries\nimport warnings\nwarnings.filterwarnings('ignore')\n","256a204d":"# Read  data\niris = pd.read_csv('\/kaggle\/input\/iris\/Iris.csv')\n","ca7a7014":"iris.head()\n#Look at the data","073733b8":"#check null values\niris.info()","2f0218d7":"iris.drop('Id',axis=1,inplace=True) \n#drop id column as it is unnecessary","a0604129":"fig = iris[iris.Species=='Iris-setosa'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='orange', label='Setosa')\niris[iris.Species=='Iris-versicolor'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='blue', label='versicolor',ax=fig)\niris[iris.Species=='Iris-virginica'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='green', label='virginica', ax=fig)\nfig.set_xlabel(\"Sepal Length\")\nfig.set_ylabel(\"Sepal Width\")\nfig.set_title(\"Sepal Length VS Width\")\nfig=plt.gcf()\nfig.set_size_inches(10,6)\nplt.show()\n\n#relation between sepal length and width","33f0b03e":"fig = iris[iris.Species=='Iris-setosa'].plot.scatter(x='PetalLengthCm',y='PetalWidthCm',color='orange', label='Setosa')\niris[iris.Species=='Iris-versicolor'].plot.scatter(x='PetalLengthCm',y='PetalWidthCm',color='blue', label='versicolor',ax=fig)\niris[iris.Species=='Iris-virginica'].plot.scatter(x='PetalLengthCm',y='PetalWidthCm',color='green', label='virginica', ax=fig)\nfig.set_xlabel(\"Petal Length\")\nfig.set_ylabel(\"Petal Width\")\nfig.set_title(\" Petal Length VS Width\")\nfig=plt.gcf()\nfig.set_size_inches(10,6)\nplt.show()\n\n#relation between petal length and width","e5b0ec1b":"iris.hist(edgecolor='black', linewidth=1.2)\nfig=plt.gcf()\nfig.set_size_inches(12,6)\nplt.show()\n\n#how length and width are distributed","64827c42":"#let us see how the length and width vary according to the species\nplt.figure(figsize=(15,10))\nplt.subplot(2,2,1)\nsns.violinplot(x='Species',y='PetalLengthCm',data=iris)\nplt.subplot(2,2,2)\nsns.violinplot(x='Species',y='PetalWidthCm',data=iris)\nplt.subplot(2,2,3)\nsns.violinplot(x='Species',y='SepalLengthCm',data=iris)\nplt.subplot(2,2,4)\nsns.violinplot(x='Species',y='SepalWidthCm',data=iris)","8c79b264":"# importing alll the necessary packages to use the various classification algorithms\nfrom sklearn.linear_model import LogisticRegression  # for Logistic Regression algorithm\nfrom sklearn.model_selection import train_test_split #to split the dataset for training and testing\nfrom sklearn.neighbors import KNeighborsClassifier  # for K nearest neighbours\nfrom sklearn import svm  #for Support Vector Machine (SVM) Algorithm\nfrom sklearn import metrics #for checking the model accuracy\nfrom sklearn.tree import DecisionTreeClassifier #for using Decision Tree Algoithm","28a6cd9d":"#splitting the data into training and testing data set\ntrain, test = train_test_split(iris, test_size = 0.3)# in this our main data is split into train and test\n# the attribute test_size=0.3 splits the data into 70% and 30% ratio. train=70% and test=30%\nprint(train.shape)\nprint(test.shape)","b8a934fb":"train_X = train[['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']]# taking the training data features\ntrain_y=train.Species# output of our training data\ntest_X= test[['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']] # taking test data features\ntest_y =test.Species   #output value of test data\n","72b3580b":"train_X.head(2)","c28cdfc0":"test_X.head(2)","796c0571":"train_y.head()  ##output of the training data","d985aa6f":"model = svm.SVC() #select the algorithm\nmodel.fit(train_X,train_y) # we train the algorithm with the training data and the training output\nprediction=model.predict(test_X) #now we pass the testing data to the trained algorithm\nprint('The accuracy of the SVM is:',metrics.accuracy_score(prediction,test_y))#now we check the accuracy of the algorithm. \n#we pass the predicted output by the model and the ","e1fc8761":"model = LogisticRegression()\nmodel.fit(train_X,train_y)\nprediction=model.predict(test_X)\nprint('The accuracy of the Logistic Regression is',metrics.accuracy_score(prediction,test_y))","eec7fd7a":"# desicision tree\nmodel=DecisionTreeClassifier()\nmodel.fit(train_X,train_y)\nprediction=model.predict(test_X)\nprint('The accuracy of the Decision Tree is',metrics.accuracy_score(prediction,test_y))","15924e46":"#knn\nmodel=KNeighborsClassifier(n_neighbors=3) #this examines 3 neighbours for putting the new data into a class\nmodel.fit(train_X,train_y)\nprediction=model.predict(test_X)\nprint('The accuracy of the KNN is',metrics.accuracy_score(prediction,test_y))\n","b7a84779":"a_index=list(range(1,11))\na=pd.Series()\nx=[1,2,3,4,5,6,7,8,9,10]\nfor i in list(range(1,11)):\n    model=KNeighborsClassifier(n_neighbors=i) \n    model.fit(train_X,train_y)\n    prediction=model.predict(test_X)\n    a=a.append(pd.Series(metrics.accuracy_score(prediction,test_y)))\nplt.plot(a_index, a)\nplt.xticks(x)","aa4d7f36":"petal=iris[['PetalLengthCm','PetalWidthCm','Species']]\nsepal=iris[['SepalLengthCm','SepalWidthCm','Species']]","c5907959":"train_p,test_p=train_test_split(petal,test_size=0.3,random_state=0)  #petals\ntrain_x_p=train_p[['PetalWidthCm','PetalLengthCm']]\ntrain_y_p=train_p.Species\ntest_x_p=test_p[['PetalWidthCm','PetalLengthCm']]\ntest_y_p=test_p.Species\n\n\ntrain_s,test_s=train_test_split(sepal,test_size=0.3,random_state=0)  #Sepal\ntrain_x_s=train_s[['SepalWidthCm','SepalLengthCm']]\ntrain_y_s=train_s.Species\ntest_x_s=test_s[['SepalWidthCm','SepalLengthCm']]\ntest_y_s=test_s.Species","63a72019":"model=svm.SVC()\nmodel.fit(train_x_p,train_y_p) \nprediction=model.predict(test_x_p) \nprint('The accuracy of the SVM using Petals is:',metrics.accuracy_score(prediction,test_y_p))\n\nmodel=svm.SVC()\nmodel.fit(train_x_s,train_y_s) \nprediction=model.predict(test_x_s) \nprint('The accuracy of the SVM using Sepal is:',metrics.accuracy_score(prediction,test_y_s))","47ebdf4e":"model=DecisionTreeClassifier()\nmodel.fit(train_x_p,train_y_p) \nprediction=model.predict(test_x_p) \nprint('The accuracy of the Decision Tree using Petals is:',metrics.accuracy_score(prediction,test_y_p))\n\nmodel.fit(train_x_s,train_y_s) \nprediction=model.predict(test_x_s) \nprint('The accuracy of the Decision Tree using Sepals is:',metrics.accuracy_score(prediction,test_y_s))","71ce7616":"model=KNeighborsClassifier(n_neighbors=3) \nmodel.fit(train_x_p,train_y_p) \nprediction=model.predict(test_x_p) \nprint('The accuracy of the KNN using Petals is:',metrics.accuracy_score(prediction,test_y_p))\n\nmodel.fit(train_x_s,train_y_s) \nprediction=model.predict(test_x_s) \nprint('The accuracy of the KNN using Sepals is:',metrics.accuracy_score(prediction,test_y_s))","1adebee8":"**Finding Out the relation between petal length and width**","4ea9c8c2":"# 2. Logistic Regression","19005d4b":"# Splitting our data into train and test data","ce052bdd":"# Applying algorithms.\n\n# 1.SVM(Support Vector Machine)","90dbb95e":"# # This is the overall turtorial for classifying iris species with diffrent Algorithms.\n\n# We got an Accuracy of 97% Which is good and also choose petals over sepals \n# to get good accuracy\n\n# Hope you all liked my Kernel, if you have any doubts feel free to comment.\n# An upvote is a gesture of appreciation, it gives me Encouragement'.\n# THANK YOU:)))","5bb7e087":"# 4. KNN","962863b7":"# 1. SVM(Support Vector Machine)","cf0cbe0a":"# Applying Different Algorithms using Scikit-Learn Library\n\n","9bc1c19d":"# 2. Decision Tree Classifier","9e086c77":"**Finding out the relation between sepal length and width**","ff213064":"**Using Seaborn Library for violin plot**","b0a87f80":"# 3.  Decision Tree","d094e2ce":"**finding suitable k value**","850e9ba0":"**Checking how length and width are distributed Using hist plot**","9e5bda61":"**Import All Necessary Libraries**","89e3ef04":"# 1. Exploring The Data","700a6914":"# 3. KNN","c3f006bd":"# Hello Everyone. This Notebook is for Beginners With step wise Explaination. \n","40bd8e5a":"# Now splitting the both petal and sepal into train and test data","a924b1f0":"**The thinner part denotes that there is less density whereas the fatter part conveys higher density**","09ad7de6":"# Creating a new data frame called petal and sepal with the following colums in it"}}