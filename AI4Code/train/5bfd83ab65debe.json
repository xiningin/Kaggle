{"cell_type":{"1c874d4a":"code","9ccb3679":"code","c41d2374":"code","3ce1c234":"code","1c1b9142":"code","3b3aefdd":"code","b5f70c12":"code","bbf403cb":"code","fff900a6":"code","16aa303b":"code","6a988d6c":"code","cf48f88d":"code","8d46d80e":"code","e5747d6f":"code","dce6f1ba":"code","5410ee29":"code","eae4c977":"code","7bf9bd83":"code","4e220b19":"code","c450e36a":"code","00cb446c":"code","9031168a":"code","88d09aa9":"code","257876c4":"code","19e4619a":"code","5c7ac840":"code","fd582608":"code","de382c19":"code","92f82845":"code","88e13e2f":"code","be8e80b8":"code","c059bab7":"code","f305bfd6":"code","4e620d8a":"markdown","16e44d97":"markdown","e86f255e":"markdown","6ddfa4c8":"markdown","061d66b7":"markdown","0004f5a6":"markdown","78c05c1b":"markdown","e2ff71cb":"markdown","ce1347e6":"markdown","2fead377":"markdown","a1a27431":"markdown","4cb0bf69":"markdown","d9d1f6d4":"markdown","0195c1f5":"markdown","1f35ed99":"markdown","1ec943d1":"markdown","48a4a253":"markdown","6f4bf126":"markdown","c91ceb77":"markdown","efd8bce3":"markdown","3056a8e1":"markdown","d9d6e98c":"markdown","de4cd1bd":"markdown","139eb205":"markdown","23fe34fc":"markdown","4511f3ea":"markdown","945bb8d2":"markdown","205cb432":"markdown","a2c9a00d":"markdown","feb7ce22":"markdown","b3fef7d8":"markdown","3c03a933":"markdown","78e1eb3f":"markdown","86fac314":"markdown","f61c486f":"markdown","6ac3e348":"markdown","da08815e":"markdown","9e03a291":"markdown","9805fa2e":"markdown","19932711":"markdown","371150f5":"markdown","71a32e81":"markdown"},"source":{"1c874d4a":"import pandas as pd\nimport numpy as np\nfrom pathlib import Path\nPath.ls = lambda x: list(x.iterdir())\nimport seaborn as sns\nimport matplotlib.pyplot as plt","9ccb3679":"path = Path(\"\/kaggle\/input\/heart-failure-clinical-data\/\")\npath.ls()","c41d2374":"df = pd.read_csv(path\/'heart_failure_clinical_records_dataset.csv')\ndf.head()","3ce1c234":"df.head().T","1c1b9142":"print('Information about the data columns along with their null counts')\ndf.info()","3b3aefdd":"plt.figure(figsize=(8,5))\nsns.countplot(df.age,palette='winter')\nplt.title('Count Plot of Age',fontsize=14)\nplt.xticks(rotation=90)\nplt.show()","b5f70c12":"print('Checking the unique values in time:: ')\nprint(len(df.time.unique()))","bbf403cb":"plt.figure(figsize=(8,5))\nsns.countplot(df.time,palette='winter')\nplt.title('Count Plot of Time',fontsize=14)\nplt.xticks(rotation=90)\nplt.show()","fff900a6":"def plot_hist(col, bins=40, title=\"\",xlabel=\"\",ax=None):\n#     plt.figure(figsize=(12,8))\n    sns.distplot(col, bins=bins,ax=ax)\n    ax.set_title(f'Histogram of {title}',fontsize=20)\n    ax.set_xlabel(xlabel)\n    ","16aa303b":"fig, axes = plt.subplots(3,2,figsize=(20,20),constrained_layout=True)\nplot_hist(df.creatinine_phosphokinase,\n          title='Creatinine Phosphokinase',\n          xlabel=\"Level of the CPK (mcg\/L)\",\n          ax=axes[0,0])\nplot_hist(df.platelets,\n          bins=30,\n          title='Platelets',\n          xlabel='Platelets in the blood (kiloplatelets\/mL)',\n          ax=axes[0,1])\nplot_hist(df.serum_creatinine,\n          title='Serum Creatinine', \n          xlabel='Level of serum creatinine in the blood (mg\/dL)',\n          ax=axes[1,0])\nplot_hist(df.serum_sodium,\n          bins=30,\n          title='Serum Sodium',\n          xlabel='Level of serum sodium in the blood (mEq\/L)',\n          ax=axes[1,1])\nplot_hist(df.ejection_fraction,\n          title='Ejection Fraction', \n          xlabel='Percentage of blood leaving the heart at each contraction (percentage)',\n          ax=axes[2,0])\nplot_hist(df.time,\n          bins=30,\n          title='Time',\n          xlabel='Follow-up period (days)',\n          ax=axes[2,1])\nplt.show()","6a988d6c":"def plot_categorical_var(x='DEATH_EVENT', col=None, title=\"\",label=\"\",ax=None):\n    sns.countplot(data=df, x=col, hue=x,palette='winter',ax=ax)\n    ax.set_title(title,fontsize=16)\n    ax.set_xlabel(label)","cf48f88d":"fig, axes = plt.subplots(2,3,figsize=(20,10),constrained_layout=True)\nplot_categorical_var(col='diabetes',\n                     title='Death vs diabetes',\n                     label='Diabetes',\n                     ax=axes[0,0])\nplot_categorical_var(col='high_blood_pressure',\n                     title='Death vs high blood pressure',\n                     label='High blood pressure',\n                     ax=axes[0,1])\nplot_categorical_var(col='sex',\n                     title='Sex vs Death',\n                     label='Sex',\n                     ax=axes[0,2])\nplot_categorical_var(col='smoking',\n                     title='Smoking vs Death', \n                     label='Smoking Status',\n                     ax=axes[1,0])\nplot_categorical_var(col='anaemia',\n                     title='Anaemia vs Death',\n                     label='is anaemic?',\n                     ax=axes[1,1])\nplt.show()","8d46d80e":"totitle= lambda x: \" \".join(x.split('_'))","e5747d6f":"def plot_multivar(df,x,y,hue_list=None):\n    if hue_list is None:\n        hue_list = ['DEATH_EVENT','sex']\n    fig, axes = plt.subplots(1,len(hue_list), figsize=(6*len(hue_list),5),constrained_layout=True)\n    fig.suptitle(f'{totitle(x)} vs {totitle(y)}'.title(),fontsize=18)\n    if not isinstance(axes, np.ndarray):\n        axes = np.array(axes)\n    for i,(ax,hue) in enumerate(zip(axes.flatten(),hue_list)):\n        sns.scatterplot(data=df, x=x,y=y,hue=hue,alpha=0.8,ax=ax,palette='rocket')\n        ax.set_title(f'{totitle(hue)}'.title(),fontsize=18)\n    plt.show()","dce6f1ba":"plot_multivar(df,'serum_creatinine','creatinine_phosphokinase')","5410ee29":"plot_multivar(df,'platelets','serum_creatinine')","eae4c977":"plot_multivar(df,'platelets','creatinine_phosphokinase')","7bf9bd83":"plot_multivar(df,'serum_creatinine','serum_sodium')","4e220b19":"plot_multivar(df,'ejection_fraction','serum_creatinine')","c450e36a":"plot_multivar(df,'time','serum_creatinine')","00cb446c":"cont_cols = ['creatinine_phosphokinase', 'platelets','serum_creatinine', 'serum_sodium', 'ejection_fraction','age','time']\ncat_vars = ['anaemia', 'diabetes', 'high_blood_pressure', 'sex', 'smoking','DEATH_EVENT']","9031168a":"from sklearn.preprocessing import MinMaxScaler\n\nscaler = MinMaxScaler()\nscaled_features = scaler.fit_transform(df[['creatinine_phosphokinase', 'platelets','serum_creatinine', 'serum_sodium', 'ejection_fraction','age','time']])\nscaled_df = df.copy()\nscaled_df[cont_cols] = scaled_features\nscaled_df.head()","88d09aa9":"from sklearn.decomposition import PCA\n\nN_COMPONENTS = 6\n\npca = PCA(n_components = N_COMPONENTS)\npca.fit(scaled_df[cont_cols].values)\nprint(f\"Explained variance: {pca.explained_variance_ratio_[:4].sum()}\")\n\nv = pd.DataFrame(pca.components_)","257876c4":"transformed = pca.transform(scaled_df[cont_cols])\ntransformed_df = pd.DataFrame(transformed)\ntransformed_df.columns = list(map(lambda x: f'pca_{x+1}', list(transformed_df.columns)))\ntransformed_df[cat_vars] = df[cat_vars]\ntransformed_df.head()","19e4619a":"def display_component(v, features_list, component_num):\n    \n    row_idx = N_COMPONENTS - component_num\n    \n    v_1_row = v.iloc[:,row_idx]\n    v_1 = np.squeeze(v_1_row.values)\n    \n    comps = pd.DataFrame(list(zip(v_1, features_list)),\n                         columns=['weights', 'features'])\n    \n    comps['abs_weights']=comps['weights'].apply(lambda x: np.abs(x))\n    sorted_weight_data = comps.sort_values('abs_weights',ascending=False).head()\n    \n    ax=plt.subplots(figsize=(10,6))\n    ax=sns.barplot(data=sorted_weight_data,\n                   x=\"weights\",\n                   y=\"features\",\n                   palette=\"Blues_d\")\n    ax.set_title(\"PCA Component Makeup, Component #\" + str(component_num), fontsize=20)\n    plt.show()","5c7ac840":"def show_component_details(num_component):\n    print(f\"Percent explained variance: {pca.explained_variance_ratio_[num_component-1]*100:.4f}\",\"%\")\n    display_component(v,cont_cols,num_component)","fd582608":"show_component_details(1)","de382c19":"show_component_details(2)","92f82845":"show_component_details(3)","88e13e2f":"show_component_details(4)","be8e80b8":"plot_multivar(transformed_df, 'pca_1','pca_2',hue_list=['DEATH_EVENT'])","c059bab7":"plot_multivar(transformed_df,'pca_1','pca_3',hue_list=['DEATH_EVENT'])","f305bfd6":"plot_multivar(transformed_df,'pca_1','pca_4',hue_list=['DEATH_EVENT'])","4e620d8a":"#### Observations: Serum Sodium\n* The normal levels of sodium is between 135 and 145 mEq\/L. \n* We can see the mass of our data is at the normal levels.\n","16e44d97":"Lets start with analysis each column, looking at the data distributions and interesting outliers.\n\nWe will be particularly looking at the continuous columns: \n* `creatinine_phosphoinase`\n* `platelets`\n* `serum_creatinine`\n* `serum_sodium`\n* `ejection_fraction`","e86f255e":"We can now combine the PCA components with our categorical columns into a dataframe","6ddfa4c8":"When using PCA, we have to choose how much explained variance are we looking for. Anything between 70% to 90% is a good choice. Further more, the job we are trying to accomplish dictates how much explained variance should we settle for. We can see that we can get 81% explained variance below. Lets see what the components have captured.","061d66b7":"We have had a look at all the individual columns. Lets have a look at how these variables relate with each other","0004f5a6":"We use PCA to reduce the dimensionality of the dataset. PCA accomplishes this by capturing the variance in the dataset. It get the components such that the are in the direction of the highest variance. \n\n![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/f\/f5\/GaussianScatterPCA.svg?download)\n\nWe can see two components in the above image. It combines the existing features to calculate vectors that capture the variance. The longer vector captures the maximum variance here","78c05c1b":"#### Observations: Sex\n* The dataset has a lot more patients of sex corresponding to 1. \n* I think it is safe to assume 1 as Male and 0 as Female.\n* The plot shows that there is no significant difference in the proportions of death count in both the sexes.","e2ff71cb":"#### Observations:\n* The Death counts are high at the lower end on follow_up periods","ce1347e6":"The dataset consists of various markers for each patient. Namely:\n\n* `age`: Age of the patient\n* `anaemia`: Is the patient anaemic\n* `creatine_phosphokinase`: Level of the CPK enzyme in the blood (mcg\/L)\n* `diabetes`: If the patient has diabetes (boolean)\n* `ejection_fraction`: Percentage of blood leaving the heart at each contraction (percentage)\n* `high_blood_pressure`: If the patient has hypertension (boolean)\n* `platelets`: Platelets in the blood (kiloplatelets\/mL)\n* `serum_creatine`: Level of serum creatinine in the blood (mg\/dL)\n* `serum_sodium`: Level of serum sodium in the blood (mEq\/L)\n* `sex`: Woman or man (binary)\n* `smoking`: If the patient smokes or not (boolean)\n* `time`: Follow-up period (days)\n* `DEATH_EVENT`: If the patient deceased during the follow-up period (boolean)\n","2fead377":"Just by taking a look at the head of the data and the column descriptions, we can understand that:\n\n* We have a few binary categorical data: `anaemia`, `diabetes`, `high_blood_pressure`, `sex`, `smoking`\n* A few continuous columns: `creatinine_phosphoinase`, `platelets`,`serum_creatinine`, `serum_sodium`, `ejection_fraction`\n* Not sure : `age`, `time`","a1a27431":"#### Observation: Diabetes\n* We can see that diabetes has no significant contribution to death here.","4cb0bf69":"### Please upvote the kernel if you like it. Keep me motivated.","d9d1f6d4":"# Reading Input Data","0195c1f5":"#### Observation: Platelets\n* The Platelets distribution looks fairly like a normal distribution with a mean of around 250000 and a std of 100000.\n* We can see a few outliers and an extreme outlier near 800000","1f35ed99":"#### Observation: \n* No relationship is found here","1ec943d1":"#### Observation: Serum Creatinine\n* This is a heavily left skewed distribution. \n* We can see a few outliers again ","48a4a253":"# Understanding PCA Features","6f4bf126":"### Lets analyse the ones we are not sure about","c91ceb77":"## PCA component 1\n\n* We can see that the first PCA component has an `explained variance` of 38 %. \n* Below plot shows how much each of our feature contributes to the component.\n* Positive weight in the plot shows positive correlation.","efd8bce3":"#### Observations: Time\n* The Histogram looks random.\n* There is a possibility that there are two gaussians at play here. But not sure about that.","3056a8e1":"We can see that the data is pretty easily separable now.\n\n## Please upvote the kernel if you like it. Keep me motivated.","d9d6e98c":"#### Observations: smoking\n* We can see that most of our patients are non smokers.\n* And there seems to be no significant relation with smoking status and death count.","de4cd1bd":"Now that we have a good understanding of the data distribution and relationships, lets try to apply PCA on the continuous variables to get better visualizations","139eb205":"# Data Cleaning","23fe34fc":"## Multivariate Relations","4511f3ea":"Lets check the categorical variables now.","945bb8d2":"#### Observations: Ejection Fraction\n* The normal range for ejection fraction is 50-70%.\n* We can see that most of our patients have values less than 50%.\n* We can also see some very low values. Might be the same patients that we had as outliers. \n","205cb432":"#### Observations:\n* We can see high death counts for lower ejection fraction","a2c9a00d":"To understand what each PCA component represents, we can use the below function to plot how much each of our original features account for in each component","feb7ce22":"#### Observations:\n* We can see a good relation between death counts and serum creatinine levels\n* We can alse see that Males have a very high levels of both cpk and serum creatinine","b3fef7d8":"# Introduction\n<img src='https:\/\/images.unsplash.com\/photo-1517607648415-b431854daa86?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&dl=debby-hudson-jcc8sxK2Adw-unsplash.jpg' style=\"height:300px\"\/>\n","3c03a933":"#### Observations: creatinine_phosphokinase\n* We can see from the plots that **creatinine_phosphokinase** for a lot of patients if zero.\n* A simple google search reveals that the normal range 10-120. \n* I think we can consider our plot suggests that most of the patients have normal levels of **creatinine_phosphokinase**\n* There are a few outliers with very high values near 8000.","78e1eb3f":"# Using PCA Components for multivariate plots","86fac314":"Cardiovascular diseases (CVDs) are the number 1 cause of death globally, taking an estimated 17.9 million lives each year, which accounts for 31% of all deaths worlwide.\nHeart failure is a common event caused by CVDs and this dataset contains 12 features that can be used to predict mortality by heart failure.\n\nMost cardiovascular diseases can be prevented by addressing behavioural risk factors such as tobacco use, unhealthy diet and obesity, physical inactivity and harmful use of alcohol using population-wide strategies.\n\nPeople with cardiovascular disease or who are at high cardiovascular risk (due to the presence of one or more risk factors such as hypertension, diabetes, hyperlipidaemia or already established disease) need early detection and management wherein a machine learning model can be of great help.","f61c486f":"#### Observation: \n* We can see that the platelets makes the biggest contribution the component num 1. \n* Similarly we can have a look at all the other components","6ac3e348":"#### Observation:\n* There is no point in considering time as a categorical variable here. The reason I had a look at `time` was to check if there were any binnings done during data collection.\n* Time clearly looks like a continuous variable.\n\nSo we now that we have our variables sorted, we can have a look at understanding the patterns in the data.","da08815e":"#### Observations: \n* We can see high death counts for lower platelets and high serum creatinine","9e03a291":"#### Observations:\n* We can see that there are spikes at multiples of five.\n* It looks like the data is an approximate age and mostly has been rounded up to the nearest 5s.\n* I think we can consider `age` as continuous variable given we have the quite a bit of data available.","9805fa2e":"#### Observation: Anaemia\n* Anaemic patient seem to have a higher relative of death count.","19932711":"#### Observations: high blood pressure\n* The People with high blood pressure have a high death count.","371150f5":"# Exploratory Data Analysis","71a32e81":"# PCA"}}