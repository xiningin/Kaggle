{"cell_type":{"d866a2b5":"code","0daaf13f":"code","56750340":"code","f208c18a":"code","1bb4d24c":"code","f83607e3":"code","41a7589a":"code","ce9ffc56":"code","02a121cf":"code","ff40949b":"code","342adc4c":"code","c40f6445":"code","279c09e6":"code","3c6e6ef0":"code","0dd735a9":"code","2e65f23c":"code","4db087c3":"code","ad5e0427":"code","59ba4172":"code","ab1e4f2d":"code","01f78d82":"code","f6804c84":"code","e1595dfd":"code","6591b76c":"code","8b4b72ab":"code","97ae9646":"code","408bcb3c":"code","fce27672":"code","eaf73026":"code","bd8868de":"code","f3a79476":"code","f15c1a36":"code","9ee5d5c2":"code","f44519fc":"code","9b78a6d4":"code","8ed02283":"code","93bbe4eb":"code","59e8f242":"code","6b91cdb4":"code","017eda6a":"code","44f45cc4":"code","c70a2674":"code","7e761457":"code","1cd6c81e":"code","66f1a517":"code","d69e1d22":"code","e364d4de":"code","7e07b85a":"code","c71ef085":"code","dabd6f44":"code","9d9e1a25":"code","a8b415f7":"code","40e1a931":"code","4a37c4de":"code","aec91981":"code","d158da96":"code","2f941f5a":"code","5f6b5e47":"code","ccf2271c":"code","1c10bcd7":"code","9b45f73b":"code","71ceac79":"code","7c25dec3":"code","27ce78b0":"code","87cfe773":"code","d8add010":"code","5867ec66":"code","a1029ab3":"code","6387d7d0":"code","82858d8a":"code","b99d3e61":"code","f766d32c":"code","ca3cb8ee":"code","6b6e567d":"code","efe3da0f":"code","1904d080":"code","e7d7fa59":"code","e2f87a96":"code","8a99994d":"code","85c14e3a":"code","da03dac6":"code","f1341078":"code","2f77684d":"code","deafd196":"code","c4af5b0b":"code","7da3d0fb":"code","10fc158d":"code","f60bba27":"code","87c64b50":"code","f0c0e5c8":"code","08134bc9":"code","b4a27c84":"code","7b967f37":"code","e5bed394":"code","32b75c0b":"code","cca7ab80":"code","8bf4c486":"code","958d9317":"code","bf1a8493":"code","25f05db1":"code","fb569799":"code","455ca525":"code","a03900fd":"code","b882baa0":"code","6a6eee0d":"code","9e7ee974":"code","03a36cf9":"code","3a90fadf":"code","a926cf9d":"code","2b7d46f5":"code","4423066b":"code","7f2cd505":"code","cedf9660":"code","0bd39c55":"code","ad9d5972":"code","dac591cc":"code","5618d112":"code","e9bcb268":"code","c8f94798":"code","4d9a5a5a":"code","feb390da":"code","538316f4":"code","d896e950":"code","142d5af2":"code","6901cd2f":"code","d3f1b451":"code","d4204307":"code","e35cab07":"code","39887a39":"code","33862bdc":"code","51e2074e":"code","52bde2a6":"markdown","b9b5b1e5":"markdown","b0dde246":"markdown","5ff351ed":"markdown","f85b2f68":"markdown","3376ec6d":"markdown","14a63b47":"markdown","551b2bed":"markdown","550f9854":"markdown","b3b9d85c":"markdown","810c41dd":"markdown","8c689456":"markdown","1243f5e2":"markdown","5c9acd15":"markdown","a77ba23d":"markdown","e8c3f9ad":"markdown","01ffea87":"markdown","e31c787a":"markdown","0bc61ffc":"markdown","81bd0c99":"markdown","af805522":"markdown","570be041":"markdown","3c5166e3":"markdown","754f9f77":"markdown","811aac68":"markdown","f1ac1fd6":"markdown","fd5852c4":"markdown","896c98cb":"markdown","55450022":"markdown","b5762fe4":"markdown","8ac89c82":"markdown","c643de9a":"markdown","b741c3b8":"markdown","dc685f98":"markdown","c807ae72":"markdown","7243358a":"markdown","39641a10":"markdown","c8ae6356":"markdown","e7fbf834":"markdown","cce409c8":"markdown","fe6b36ad":"markdown","a4e5001e":"markdown"},"source":{"d866a2b5":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom sklearn.linear_model import LinearRegression\nimport matplotlib.pyplot as plt\n\nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report\nfrom sklearn.metrics import roc_auc_score, roc_curve, recall_score, f1_score, precision_score\nfrom sklearn.naive_bayes import GaussianNB\n\n\nfrom sklearn.preprocessing import scale ","0daaf13f":"tablet = pd.read_csv(\"..\/input\/tabletcsv\/tablet.csv\",sep=\",\") #Verilen csv dosyas\u0131nda veriler virg\u00fclle ayr\u0131ld\u0131klar\u0131 i\u00e7in sep'i virg\u00fcl olarak se\u00e7elim.\ndf=tablet.copy() #\u0130\u015flem yaparken as\u0131l dosyan\u0131n etkilenmemesi i\u00e7in kopyas\u0131n\u0131 df de\u011fi\u015fkenine atayal\u0131m.","56750340":"df.shape #Verimiz 20 \u00d6znitelik 2000 adet g\u00f6zlemden olu\u015fmaktad\u0131r.","f208c18a":"df.head(100) #Verimizde ilk 100 eleman\u0131 g\u00f6r\u00fcnt\u00fcl\u00fcyorum.","1bb4d24c":"df.info()  #T\u00fcm de\u011fi\u015fkenlerde 2000 adet eksik olmayan veri var.Veri \u00e7er\u00e7evesi 20 sut\u00fcndan olu\u015fmaktad\u0131r.","f83607e3":"df.dtypes #Verilen \u00f6zniteliklerin Data tiplerini g\u00f6r\u00fcnt\u00fcledim.4 tane float64,8 tane int64 ve 8 object data tip bulunmaktad\u0131r.","41a7589a":"df.tail(100) #Veri \u00e7er\u00e7evesinin son 100 g\u00f6zlemini g\u00f6r\u00fcnt\u00fcledik.","ce9ffc56":"df.sample(100) # Veri \u00e7er\u00e7evesinin rastgele 100 de\u011fi\u015fkeni yazd\u0131rd\u0131k.","02a121cf":"df.describe().T #En b\u00fcy\u00fck standart sapma RAM'dedir.Tabletlerin RAM'leri aras\u0131nda fark\u0131n fazla oldu\u011funu g\u00f6steriyor.\n#En k\u00fc\u00e7\u00fck standart sapma Kalinlik'tad\u0131r.Bu da bize kal\u0131nl\u0131klar\u0131 aras\u0131ndaki fark\u0131n \u00e7ok az oldu\u011funu g\u00f6steriyor.\n#Varyans standart sapman\u0131n karesi oldu\u011fu i\u00e7in standart sapmas\u0131 en fazla olan RAM varyans\u0131 en b\u00fcy\u00fck olan\u0131d\u0131r.En k\u00fc\u00e7\u00fck varyansa sahip olan ise standart sapmas\u0131 en k\u00fc\u00e7\u00fck olan Kal\u0131nl\u0131k de\u011fi\u015fkenidir.","ff40949b":"df.groupby([\"FiyatAraligi\"]).std()","342adc4c":"df.groupby([\"FiyatAraligi\"]).mean()","c40f6445":"df.count() #De\u011fi\u015fkenlerden ka\u00e7ar tane de\u011fer oldu\u011funu bulduk.","279c09e6":"df.isnull().sum().sum() #Veri \u00e7er\u00e7evesinde 17 adet eksik de\u011ferimiz var.","3c6e6ef0":"df.isna().sum() #Veri \u00e7er\u00e7evesinde OnKamera 5,RAM'dan 12 eksik de\u011fer bulunmaktad\u0131r.","0dd735a9":"df.mean()#En b\u00fcy\u00fck ortalamaya sahip de\u011fi\u015fken RAM'ken en d\u00fc\u015f\u00fck ortalamaya da Kalinlik sahiptir.","2e65f23c":"df.median()","4db087c3":"df.std() #Standart sapmas\u0131 y\u00fcksek olan \u00e7ok fazla de\u011fi\u015fken oldu\u011fundan dolay\u0131 veri setinin dengesiz da\u011f\u0131ld\u0131\u011f\u0131n\u0131 s\u00f6yleyebiliriz.","ad5e0427":"df.cov() #Batarya g\u00fcc\u00fc ile DahiliBellek,CekirdekSayisi,CozunurlukGenislik,RAM aras\u0131nda negatif MikroislemciHizi,OnKameraMP,Kalinlik,Agirlik,ArkaKameraMP,CozunurlukY\u00fckseklik,BataryaOmru pozitif bir ili\u015fki bulunmaktad\u0131r.\n#\u00d6n kamera MP ile MikroislemciHizi,DahiliBellek,Kalinlik,CekirdekSayisi,CozunurlukY\u00fckseklik,CozunurlukGenislik,BataryaOmru ile negatif BataryaGucu,Agirlik,ArkaKameraMP,RAM aras\u0131nda pozitif bir ili\u015fki bulunmaktad\u0131r.","59ba4172":"df.corr() #Buradaki en g\u00fc\u00e7l\u00fc pozitif y\u00f6nl\u00fc ili\u015fki OnKameraMP ve ArkaKameraMP aras\u0131ndad\u0131r.Korelasyonlar\u0131 0.645697't\u00fcr.Korelasyon 1'e yakla\u015ft\u0131k\u00e7a aralar\u0131ndaki ili\u015fki g\u00fc\u00e7lenir.Fakat burda zay\u0131f bir ili\u015fki vard\u0131r.","ab1e4f2d":"corr = df.corr() # Korelasyon \u0131s\u0131 haritas\u0131n\u0131 inceledi\u011fimizde korelasyon \u00e7ok d\u00fc\u015f\u00fck. Aralar\u0131ndaki ili\u015fki \u00e7ok zay\u0131f.\nsns.heatmap(corr, \n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values); ","01f78d82":"df.groupby([\"FiyatAraligi\"]).mean()","f6804c84":"df.groupby([\"FiyatAraligi\"]).std()","e1595dfd":"df[\"FiyatAraligi\"].nunique() #FiyatAraligi de\u011fi\u015fkeninin benzersiz de\u011fi\u015fken say\u0131s\u0131n\u0131 bulduk.","6591b76c":"df[\"FiyatAraligi\"].unique()# FiyatAraligi de\u011fi\u015fkeninin benzersiz de\u011fi\u015fkenlerinin neler oldu\u011funu bulduk.","8b4b72ab":"df[\"FiyatAraligi\"].value_counts() #Her benzersiz de\u011fi\u015fkenden 500 tane olmas\u0131 d\u00fczenli bir da\u011f\u0131l\u0131m oldu\u011funu g\u00f6sterir.","97ae9646":"sns.countplot(df[\"FiyatAraligi\"]) # Grafikte de g\u00f6r\u00fcld\u00fc\u011f\u00fc \u00fczere d\u00fczenli bir da\u011f\u0131l\u0131m var. ","408bcb3c":"sns.set(rc={'figure.figsize':(8,6)}) ","fce27672":"sns.scatterplot(x = \"CozunurlukY\u00fckseklik\", y = \"CozunurlukGenislik\", data = df);","eaf73026":"sns.scatterplot(x= \"WiFi\" , y=\"Agirlik\" , data=df);#WiFi, Agirlik'i her harhangi bir \u015fekilde etkilememektedir.","bd8868de":"sns.jointplot(x = \"CozunurlukY\u00fckseklik\", y = \"CozunurlukGenislik\", data = df, color=\"blue\");","f3a79476":"sns.scatterplot(x = \"OnKameraMP\", y = \"ArkaKameraMP\", data = df);","f15c1a36":"sns.scatterplot(df[\"Agirlik\"],df[\"BataryaGucu\"]) #Aralar\u0131nda herhangi bir ili\u015fki bulunmamaktad\u0131r.","9ee5d5c2":"sns.jointplot(x = \"OnKameraMP\", y = \"ArkaKameraMP\", data = df, color=\"blue\");","f44519fc":"sns.jointplot(x = df[\"OnKameraMP\"], y = df[\"ArkaKameraMP\"], kind = \"kde\", color = \"blue\");","9b78a6d4":"sns.jointplot(x = df[\"CozunurlukY\u00fckseklik\"], y = df[\"CozunurlukGenislik\"], kind = \"kde\", color = \"blue\");","8ed02283":"sns.violinplot(y = \"RAM\", data = df);","93bbe4eb":"sns.violinplot(y = \"MikroislemciHizi\", data = df);","59e8f242":"sns.violinplot(x=df[\"CekirdekSayisi\"],color=\"blue\"); #Da\u011f\u0131l\u0131m,normal da\u011f\u0131l\u0131m de\u011fildir.","6b91cdb4":"sns.violinplot(df[\"FiyatAraligi\"],df[\"RAM\"]) #Pahal\u0131 tabletlerin RAM'leri 2000 ile 4000,normal fiyatl\u0131 tabletlerin 1000 ile 4000,ucuz tabletlerin 0 ile 3000 ve \u00e7ok ucuz tabletlerin ise 0 ile 2000 aras\u0131ndad\u0131r. ","017eda6a":"sns.violinplot(x= \"WiFi\" , y=\"Agirlik\" , data=df); #WiFi, Agirlik'i her harhangi bir \u015fekilde etkilememektedir.","44f45cc4":"sns.violinplot(x = \"CiftHat\" , y =\"OnKameraMP\" , data = df);#\u00c7ift hat\u0131n olup olmamas\u0131 ile \u00f6nKameraMP aras\u0131nda bir ili\u015fki yoktur.","c70a2674":"sns.scatterplot(x = \"CiftHat\" , y =\"OnKameraMP\" , data = df);","7e761457":"sns.barplot(x =\"ArkaKameraMP\" , y = \"RAM\" , data = df);","1cd6c81e":"sns.pairplot(df, hue = \"FiyatAraligi\", palette=\"Set2\");","66f1a517":"df.hist(figsize =(20,20), color = \"blue\")\nplt.show()","d69e1d22":"import missingno                    # Eksik verileri daha iyi okumak i\u00e7in kulland\u0131\u011f\u0131m\u0131z k\u00fct\u00fcphanemizdir.\nfrom sklearn import preprocessing   # \u00d6n i\u015fleme a\u015famas\u0131nda label encoding vb. i\u00e7in dahil etti\u011fimiz k\u00fct\u00fcphanemizdir.\nimport re                           # D\u00fczenli ifadeler kullanmak i\u00e7in dahil etti\u011fimiz k\u00fct\u00fcphanemizdir.","e364d4de":"df.isnull().sum().sum() #Veri \u00e7er\u00e7evesinde 17 adet eksik de\u011ferimiz var.","7e07b85a":"df.isnull().sum()#OnKameraMP'de 5 adet , RAM de\u011fi\u015fkenimde ise 12 adet eksik verim bulunmaktad\u0131r.","c71ef085":"missingno.matrix(df,figsize=(20, 10)); # Veri setini inceledi\u011fimizde \u00e7ok fazla eksik de\u011ferin olmad\u0131\u011f\u0131n\u0131 g\u00f6r\u00fcr\u00fcz.","dabd6f44":"missingno.heatmap(df, figsize= (15,8));# RAM ve OnKameraMP de\u011fi\u015fkenlerinin ayn\u0131 g\u00f6zlemde eksik veri bar\u0131nd\u0131rmad\u0131\u011f\u0131n\u0131 s\u00f6yleyebiliriz.Aralar\u0131nda n\u00f6tr(ili\u015fki yok) denilebilir.","9d9e1a25":"def eksik_deger_tablosu(df): \n    eksik_deger = df.isnull().sum()\n    eksik_deger_yuzde = 100 * df.isnull().sum()\/len(df)\n    eksik_deger_tablo = pd.concat([eksik_deger, eksik_deger_yuzde], axis=1)\n    eksik_deger_tablo_son = eksik_deger_tablo.rename(columns = {0 : 'Eksik De\u011ferler', 1 : '% De\u011feri'})\n    return eksik_deger_tablo_son","a8b415f7":"eksik_deger_tablosu(df)#Bu iki de\u011fi\u015fkenimizde eksik olan g\u00f6zlemler \u00e7ok az olup ArkaKameraMP'de bu oran %0.25 iken RAM'de ise %0.60'd\u0131r.","40e1a931":"df[\"RAM\"].unique()","4a37c4de":"df[df[\"RAM\"].isnull()] # RAM de\u011fi\u015fkeninde eksik olan g\u00f6zlemlere bakt\u0131\u011f\u0131m\u0131zda NaN oldu\u011funu g\u00f6r\u00fcyoruz.","aec91981":"sns.countplot(df[df[\"RAM\"].isnull()][\"FiyatAraligi\"]); #Eksik olan RAM de\u011fi\u015fkenini FiyatAraligi de\u011fi\u015fkenine g\u00f6re inceledi\u011fimizde tek bir \u00f6zelli\u011fe ba\u011fl\u0131 oldu\u011funu g\u00f6r\u00fcyoruz.RAM de\u011fi\u015fkeninin eksik de\u011fer i\u00e7ermesi fiyat\u0131n\u0131n pahal\u0131 olmas\u0131ndan dolay\u0131 olabilir.","d158da96":"sns.countplot(df[df[\"RAM\"].isnull()][\"Renk\"]); # Renk de\u011fi\u015fkenine g\u00f6re inceledi\u011fimizde de en \u00e7ok turuncu renkte eksik de\u011fer i\u00e7erdi\u011fini g\u00f6r\u00fcryoruz.","2f941f5a":"sns.countplot(df[df[\"RAM\"].isnull()][\"BataryaGucu\"]) # BataryaGucu de\u011fi\u015fkenine g\u00f6re inceledi\u011fimizde 1035 de\u011fer i\u00e7ok etkili g\u00f6z\u00fck\u00fcyor.","5f6b5e47":"sns.distplot(df[df[\"RAM\"].isnull()][\"BataryaGucu\"]);","ccf2271c":"df[\"OnKameraMP\"].unique()","1c10bcd7":"df[df[\"OnKameraMP\"].isnull()] # OnKameraMP de\u011fi\u015fkeninde eksik olan g\u00f6zlemlere bakt\u0131\u011f\u0131m\u0131zda  NaN oldu\u011funu g\u00f6r\u00fcyoruz.","9b45f73b":"sns.countplot(df[df[\"OnKameraMP\"].isnull()][\"Bluetooth\"])","71ceac79":"sns.countplot(df[df[\"OnKameraMP\"].isnull()][\"FiyatAraligi\"]) #Grafi\u011fe bak\u0131nca fiyat\u0131 \u00e7ok ucuz oldu\u011fu i\u00e7in eksik de\u011fer girilmi\u015f olabilir.","7c25dec3":"sns.countplot(df[df[\"OnKameraMP\"].isnull()][\"Renk\"]) ","27ce78b0":"df.groupby(\"FiyatAraligi\").mean() # FiyatAraligi de\u011fi\u015fkenine g\u00f6re ortalamalar\u0131 bulduk. ","87cfe773":"df.groupby(\"FiyatAraligi\")[[\"RAM\"]].mean()","d8add010":"df[(df[\"FiyatAraligi\"] == \"Pahal\u0131\") & (df[\"RAM\"].isnull())]","5867ec66":"Pahali_RAM = df[(df[\"FiyatAraligi\"] == \"Pahal\u0131\") & (df[\"RAM\"].isnull())].index\nPahali_RAM","a1029ab3":"df.loc[Pahali_RAM ,\"RAM\"] = 3500#\".loc\" yard\u0131m\u0131yla ilk parametremizi indisler, ikinci parametremizi ise \u00f6znitelik girerek 3500 ile doldurduk.","6387d7d0":"df.isna().sum()[\"RAM\"] #B\u00f6ylece RAM de\u011fi\u015fkeninin eksik de\u011ferleri doldurmu\u015f olduk.","82858d8a":"df.groupby(\"FiyatAraligi\")[[\"OnKameraMP\"]].mean()","b99d3e61":"df[(df[\"FiyatAraligi\"] == \"\u00c7ok Ucuz\") & (df[\"OnKameraMP\"].isnull())]","f766d32c":"OnKamera_Bos = df[(df[\"FiyatAraligi\"] == \"\u00c7ok Ucuz\") & (df[\"OnKameraMP\"].isnull())].index\nOnKamera_Bos ","ca3cb8ee":"df.loc[OnKamera_Bos ,\"OnKameraMP\"] = 4 # OnKameraMP de\u011fi\u015fkenimizi \u00e7ok ucuz kategorisinin ortalamas\u0131 olan 4 ile dolduruyoruz.","6b6e567d":"df.isna().sum()[\"OnKameraMP\"] #B\u00f6ylece OnKameraMP de\u011fi\u015fkenimizin eksik de\u011ferlerini doldurduk.","efe3da0f":"df[\"RAM\"].unique()","1904d080":"df[\"OnKameraMP\"].unique()","e7d7fa59":"df.isna().sum() #Verisetini inceledi\u011fimizde eksik de\u011ferin kalmad\u0131\u011f\u0131n\u0131 g\u00f6r\u00fcr\u00fcr\u00fcz.","e2f87a96":"sns.countplot(df[\"FiyatAraligi\"]); ","8a99994d":"label_encoder = preprocessing.LabelEncoder()","85c14e3a":"df['CiftHat'] = label_encoder.fit_transform(df['CiftHat'])#\u0130lk de\u011fer 1 yap\u0131ld\u0131.\ndf.head()","da03dac6":"df['Bluetooth'] = label_encoder.fit_transform(df['Bluetooth']) #\u0130lk de\u011fer 1 yap\u0131ld\u0131.\ndf.head()","f1341078":"df['4G'] = label_encoder.fit_transform(df['4G']) #\u0130lk de\u011fer 1 yap\u0131ld\u0131.\ndf.head()","2f77684d":"df['3G'] = label_encoder.fit_transform(df['3G']) #\u0130lk de\u011fer 1 yap\u0131ld\u0131.\ndf.head()","deafd196":"df['Dokunmatik'] = label_encoder.fit_transform(df['Dokunmatik'])#\u0130lk de\u011fer 1 yap\u0131ld\u0131.\ndf.head()","c4af5b0b":"df['WiFi'] = label_encoder.fit_transform(df['WiFi'])#\u0130lk de\u011fer 1 yap\u0131ld\u0131.\ndf.head()","7da3d0fb":"sns.set(rc={'figure.figsize':(11,8)}) # Olu\u015facak grafiklerin uzunlu\u011funu ve geni\u015fli\u011fini belirleyelim.\n\nsns.scatterplot(df[\"FiyatAraligi\"], df[\"RAM\"]);","10fc158d":"df.drop([\"Bluetooth\",\"CiftHat\",\"4G\",\"3G\" ,\"WiFi\" ,\"Renk\",\"Dokunmatik\" ], axis = 1, inplace = True) #say\u0131sal olmayan de\u011fi\u015fkenleri kald\u0131rd\u0131k.","f60bba27":"X = df.drop(\"FiyatAraligi\", axis = 1)\ny = df[\"FiyatAraligi\"]","87c64b50":"X #Ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerimizi yazd\u0131ral\u0131m.","f0c0e5c8":"y #Ba\u011f\u0131ml\u0131 de\u011fi\u015fkenimizi yazd\u0131ral\u0131m.","08134bc9":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 1\/4, random_state = 3512, shuffle=1)","b4a27c84":"X_test.head()","7b967f37":"y_test.head()","e5bed394":"nb = GaussianNB()\nnb_model = nb.fit(X_train, y_train)","32b75c0b":"nb_model #Modelin alabilece\u011fi parametreleri g\u00f6r\u00fcnt\u00fcledik.","cca7ab80":"dir(nb_model) #Model \u00fczerinde yaz\u0131labilecek t\u00fcm komutlar\u0131 g\u00f6r\u00fcnt\u00fcledik.","8bf4c486":"X_test[0:10]#Modelin e\u011fitiminde kullan\u0131lmayan k\u0131s\u0131m olan X_test'in ilk 10 g\u00f6zleminin ait oldu\u011fu t\u00fcr\u00fc tahmin ettirmeye \u00e7al\u0131\u015ft\u0131k.","958d9317":"nb_model.predict(X_test)[0:10]#Modelin tahmin etti\u011fi X_test g\u00f6zlemlerinin ilk 10 tanesine bakt\u0131k.","bf1a8493":"y_test[0:10]#Modele g\u00f6stermedi\u011fimiz X_test g\u00f6zlemlerinin ilk 10 cevab\u0131na bakt\u0131\u011f\u0131m\u0131zda bu de\u011ferlerin ger\u00e7ek veriler oldu\u011funu g\u00f6r\u00fcr\u00fcz.","25f05db1":"y_pred = nb_model.predict(X_test)#y_pred isimli de\u011fi\u015fken olu\u015fturup t\u00fcm X_test g\u00f6zlemlerinin tahmin sonucunu atayal\u0131m.\ny_pred","fb569799":"y_test","455ca525":"accuracy_score(y_test, y_pred)#Do\u011fruluk skorunu g\u00f6r\u00fcnt\u00fcledik.","a03900fd":"karmasiklik_matrisi = confusion_matrix(y_test, y_pred)#Karma\u015f\u0131kl\u0131k matrisini g\u00f6r\u00fcnt\u00fcledik.\nprint(karmasiklik_matrisi)","b882baa0":"(karmasiklik_matrisi[0][0] + karmasiklik_matrisi[1][1]) \/ (karmasiklik_matrisi[0][0] + karmasiklik_matrisi[1][1] +  karmasiklik_matrisi[1][0] + karmasiklik_matrisi[0][1])","6a6eee0d":"cross_val_score(nb_model, X_test, y_test, cv = 10)","9e7ee974":"cross_val_score(nb_model, X_test, y_test, cv = 10).mean()","03a36cf9":"print(classification_report(y_test, y_pred))","3a90fadf":"PrecisionScore = precision_score(y_test, y_pred, average='weighted')\nPrecisionScore","a926cf9d":"RecallScore = recall_score(y_test, y_pred, average='weighted')\nRecallScore","2b7d46f5":"F1Score = f1_score(y_test, y_pred, average = 'weighted')  \nF1Score","4423066b":"X.columns","7f2cd505":"len(X.columns) #ka\u00e7 \u00f6znitelik oldu\u011funa bakal\u0131m","cedf9660":"from sklearn.feature_selection import *#Feature Selection y\u00f6ntemi i\u00e7in Scikit-learn k\u00fct\u00fcphanesinde bulal\u0131m ve her bir ba\u011f\u0131ms\u0131z de\u011fi\u015fken i\u00e7in istatistik hesapland\u0131ktan sonra filtreleme yapmam\u0131z\u0131 sa\u011flayan KBest tekni\u011fini kullanal\u0131m.","0bd39c55":"test = SelectKBest(k = 12)#k parametresi olarak 12 de\u011fi\u015fkenimiz oldu\u011fu i\u00e7in ve 12 tanesinin de skorlar\u0131n\u0131 g\u00f6r\u00fcnt\u00fclemek i\u00e7in 12 giriyoruz.\ntest","ad9d5972":"fit = test.fit(X, y)\nfit","dac591cc":"for indis, skor in enumerate(fit.scores_):#T\u00fcm skorlar\u0131 g\u00f6r\u00fcnt\u00fcledik.Daha iyi g\u00f6r\u00fcnt\u00fclemek i\u00e7in de bir d\u00f6ng\u00fc yazd\u0131k ve kar\u015f\u0131l\u0131klar\u0131na \u00f6znitelik isimlerini yazd\u0131rd\u0131k.\n    print(skor, \" -> \", X.columns[indis])","5618d112":"from sklearn.neighbors import KNeighborsClassifier ","e9bcb268":"knn = KNeighborsClassifier(n_neighbors=15) \n  \nknn.fit(X_train, y_train) ","c8f94798":"print(knn.predict(X_test)) ","4d9a5a5a":"knn = KNeighborsClassifier(n_neighbors=15) ##Modelin do\u011frulu\u011funu hesaplad\u0131k.\n  \nknn.fit(X_train, y_train) \n  \nprint(knn.score(X_test, y_test))","feb390da":"neighbors = np.arange(2, 15) \ntrain_accuracy = np.empty(len(neighbors)) \ntest_accuracy = np.empty(len(neighbors)) ","538316f4":"#K de\u011ferlerinin \u00fczerinde d\u00f6nen d\u00f6ng\u00fc \nfor i, k in enumerate(neighbors): \n    knn = KNeighborsClassifier(n_neighbors=k) \n    knn.fit(X_train, y_train) \n      \n    # E\u011fitim ve veri do\u011frulu\u011funu test edelim.\n    train_accuracy[i] = knn.score(X_train, y_train) \n    test_accuracy[i] = knn.score(X_test, y_test) ","d896e950":"# Grafi\u011fi \u00e7izelim.\nplt.plot(neighbors, test_accuracy, label = 'Testing dataset Accuracy') \nplt.plot(neighbors, train_accuracy, label = 'Training dataset Accuracy') \n  \nplt.legend() \nplt.xlabel('n_neighbors') \nplt.ylabel('Accuracy') \nplt.show() ","142d5af2":" def importdata(): \n    balance_data = pd.read_csv('..\/input\/tablet\/tablet.csv', sep= ',', header = None) \n   \n    print(\"Dataset Length: \", len(balance_data)) \n    print(\"Dataset Shape: \", balance_data.shape) \n      \n   \n    print(\"Dataset: \",balance_data.head()) \n    return balance_data ","6901cd2f":"def splitdataset(balance_data): \n  \n    # Separating the target variable \n    X = balance_data.values[:, 2:15] \n    Y = balance_data.values[:, 0] \n  \n    # Splitting the dataset into train and test \n    X_train, X_test, y_train, y_test = train_test_split(  \n    X, Y, test_size = 0.25, random_state = 100) \n      \n    return X, Y, X_train, X_test, y_train, y_test ","d3f1b451":" def train_using_gini(X_train, X_test, y_train): \n  \n    \n    clf_gini = DecisionTreeClassifier(criterion = \"gini\", \n            random_state = 100,max_depth=2, min_samples_leaf=15) \n  \n    \n    clf_gini.fit(X_train, y_train) \n    return clf_gini ","d4204307":" \ndef tarin_using_entropy(X_train, X_test, y_train): \n  \n  \n    clf_entropy = DecisionTreeClassifier( \n            criterion = \"entropy\", random_state = 100, \n            max_depth = 2, min_samples_leaf = 15) \n  \n    \n    clf_entropy.fit(X_train, y_train) \n    return clf_entropy ","e35cab07":" \ndef prediction(X_test, clf_object): \n  \n     \n    y_pred = clf_object.predict(X_test) \n    print(\"Predicted values:\") \n    print(y_pred) \n    return y_pred ","39887a39":"# Function to calculate accuracy \ndef cal_accuracy(y_test, y_pred): \n      \n    print(\"Confusion Matrix: \", \n        confusion_matrix(y_test, y_pred)) \n      \n    print (\"Accuracy : \", \n    accuracy_score(y_test,y_pred)*100) \n      \n    print(\"Report : \", \n    classification_report(y_test, y_pred)) ","33862bdc":"def main(): \n      \n    \n    data = importdata() \n    X, Y, X_train, X_test, y_train, y_test = splitdataset(data) \n    clf_gini = train_using_gini(X_train, X_test, y_train) \n    clf_entropy = tarin_using_entropy(X_train, X_test, y_train) \n      \n   \n    print(\"Results Using Gini Index:\") \n      \n    \n    y_pred_gini = prediction(X_test, clf_gini) \n    cal_accuracy(y_test, y_pred_gini) \n      \n    print(\"Results Using Entropy:\") \n    \n    y_pred_entropy = prediction(X_test, clf_entropy) \n    cal_accuracy(y_test, y_pred_entropy) ","51e2074e":"if __name__==\"__main__\": \n    main() ","52bde2a6":"RAM de\u011fi\u015fkenimizin eksik verilerini doldurmaya ba\u015flayal\u0131m.","b9b5b1e5":"Son olarak projemizin son safhas\u0131n\u0131 tamamlayaca\u011f\u0131z.","b0dde246":"F1 skorunu g\u00f6r\u00fcnt\u00fcleyelim.","5ff351ed":"Karar a\u011fa\u00e7lar\u0131 i\u00e7in gerekli k\u00fct\u00fcphaneleri ekleyelim.","f85b2f68":"Hedef de\u011fi\u015fken olan Fiyat aral\u0131\u011f\u0131 de\u011f\u015fkenime ba\u011fl\u0131 olarak tabletlerin \u00f6zelliklerine g\u00f6re ortalamalar\u0131n\u0131 ve standart sapmalar\u0131n\u0131 yazd\u0131ral\u0131m.","3376ec6d":"De\u011fi\u015fkenlerin medyan\u0131n\u0131 bulal\u0131m.","14a63b47":"Eksik de\u011fer bar\u0131nd\u0131ran de\u011fi\u015fkebler aras\u0131nda anlaml\u0131 birili\u015fki olup olmad\u0131\u011f\u0131na bakal\u0131m.","551b2bed":"Modelin daha iyi do\u011fruluk skoru vermesi i\u00e7in ne yapabiliriz? Feature Selection","550f9854":"Yakalama (Recall) veya Hassasl\u0131k (Sensitivity) skorunu g\u00f6r\u00fcnt\u00fcleyelim.","b3b9d85c":"Veri \u00e7er\u00e7evesinde hangi \u00f6znitelikte ka\u00e7 adet eksik de\u011fer oldu\u011funu g\u00f6zlemleyelim.","810c41dd":" Korelasyonu inceleyelim.","8c689456":"Projemizin eksik verileri tespit etme ve eksik verileri doldurma olan ikinci safhas\u0131na ge\u00e7mek i\u00e7in gerekli olan k\u00fct\u00fcphanlerimizi eklemekle ba\u015flayal\u0131m.","1243f5e2":"Veri \u00e7er\u00e7evesinin ka\u00e7 \u00f6znitelik ve ka\u00e7 g\u00f6zlemleden olu\u015ftu\u011fu bilgisine bakal\u0131m.","5c9acd15":"Veri \u00e7er\u00e7evesindeki de\u011fi\u015fkenlerin hangi tipte oldu\u011funu ve bellek kullan\u0131m\u0131n\u0131 g\u00f6r\u00fcnt\u00fcleyelim.","a77ba23d":"Kesinlik skorunu g\u00f6r\u00fcnt\u00fcleyelim.","e8c3f9ad":"De\u011fi\u015fkenleri bilgisayar\u0131n anlad\u0131\u011f\u0131 dil olan 1 ve 0'a \u00e7evirece\u011fiz.1:var,0:yok","01ffea87":"Veri \u00e7er\u00e7evesinde hangi \u00f6znitelikte ka\u00e7 adet eksik de\u011fer oldu\u011funu g\u00f6zlemleyelim.","e31c787a":"Veri \u00e7er\u00e7evesinin ilk 100 g\u00f6zlemini g\u00f6r\u00fcnt\u00fcleyelim.","0bc61ffc":"Veri \u00e7er\u00e7evesinin rastgele 100 g\u00f6zlemini g\u00f6r\u00fcnt\u00fcleyelim.","81bd0c99":"Kovaryans\u0131 inceleyelim.","af805522":"Yukar\u0131daki grafiklerden de yola \u00e7\u0131karak RAM de\u011fi\u015fkeninin eksik de\u011fer i\u00e7ermesinde en etkili rol\u00fc tabletlerin pahal\u0131 olmas\u0131 oynuyor.","570be041":"Ortalamalar\u0131n\u0131 alal\u0131m.","3c5166e3":"K\u00fct\u00fcphaneleri eklemekle ba\u015fl\u0131yoruz.","754f9f77":"S\u0131n\u0131fland\u0131rma raporu \u00e7izdirelim","811aac68":"Korelasyon katsay\u0131lar\u0131n\u0131 daha iyi okuyabilmek i\u00e7in \u0131s\u0131 haritas\u0131 \u00e7izdirelim.","f1ac1fd6":"Say\u0131sal ve kategorik de\u011fi\u015fkenler ideal tekniklerle ve ara\u00e7larla g\u00f6rselle\u015ftirerek \u00f6nemli oldu\u011fu d\u00fc\u015f\u00fcn\u00fclen k\u0131s\u0131mlar\u0131 yorumlayal\u0131m.","fd5852c4":"Veri \u00e7er\u00e7evesinin son 100 g\u00f6zlemini g\u00f6r\u00fcnt\u00fcleyelim.","896c98cb":"De\u011fi\u015fkenlerin ortalamalar\u0131n\u0131 inceleyelim.","55450022":"Ba\u011f\u0131ml\u0131 ve ba\u011f\u0131ms\u0131z de\u011fi\u015fkenleri olu\u015fturdu\u011fumuz test nesnesine parametre olarak girelim ve e\u011fitelim.","b5762fe4":"OnKameraMP de\u011fi\u015fkenini inceleyelim.","8ac89c82":"RAM de\u011fi\u015fkenimizii inceleyelim.","c643de9a":"OnKameraMP de\u011fi\u015fkenimizin eksik de\u011ferlerini doldural\u0131m.","b741c3b8":"\"Eksik g\u00f6zlemler toplam g\u00f6zlem say\u0131s\u0131n\u0131n y\u00fczde ka\u00e7\u0131na tekab\u00fcl eder?\"sorunun yan\u0131t\u0131n\u0131 bulmak i\u00e7in fonksiyon yazal\u0131m.","dc685f98":"Veri \u00e7er\u00e7evemizi dahil ediyorum.","c807ae72":"De\u011fi\u015fkenlerin standart sapmalar\u0131n\u0131 inceleyelim.","7243358a":"Veri \u00e7er\u00e7evemizi ba\u011f\u0131ml\u0131 ve ba\u011f\u0131ms\u0131z de\u011fi\u015fkenler olmak \u00fczere ikiye ay\u0131ral\u0131m.","39641a10":"Say\u0131sal de\u011fi\u015fkenlerin da\u011f\u0131l\u0131m\u0131n\u0131 g\u00f6rmek i\u00e7in df \u00fczerinden histogram \u00e7izdirelim.","c8ae6356":"Hedef de\u011fi\u015fkenimiz olan FiyatAraligi'ni inceleyelim.","e7fbf834":"Veri \u00e7er\u00e7evesindeki say\u0131sal de\u011fi\u015fkenler i\u00e7in temel istatistik de\u011ferlerini g\u00f6r\u00fcnt\u00fcleyelim.\n\nStandart sapma ve ortalama de\u011ferlerden \u00e7\u0131kar\u0131mda bulunarak hangi de\u011fi\u015fkenlerin ne kadar varyansa sahip oldu\u011fu hakk\u0131nda fikir y\u00fcr\u00fctelim.","cce409c8":"GaussianNB modeli yaratarak e\u011fitimi ger\u00e7ekle\u015ftirelim.","fe6b36ad":"Karma\u015f\u0131kl\u0131k matris skorunu(accuracy) hesaplayal\u0131m.","a4e5001e":"Modeli farkl\u0131 g\u00f6zlemlerle kombinleyerek tekrardan skorunu hesaplayal\u0131m. Yani 10 kez katlamal\u0131 \u00e7apraz do\u011frulama yapal\u0131m."}}