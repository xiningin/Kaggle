{"cell_type":{"eecbaf03":"code","c039d8f2":"code","0678ecbf":"code","f3332646":"code","80272746":"code","51b5e9d8":"code","dcef8ab7":"code","050f2b42":"code","caee8f84":"code","33881cd2":"code","2328b396":"code","f6a0d08b":"code","5c4c78ef":"code","bf84810e":"code","adf819ef":"code","9b302a21":"markdown","6d1f5bc4":"markdown","5f276bf8":"markdown","2f86d7d5":"markdown","c9e5e56b":"markdown","f6889d23":"markdown"},"source":{"eecbaf03":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c039d8f2":"dataset = pd.read_csv('\/kaggle\/input\/used-car-dataset-ford-and-mercedes\/cclass.csv')\ndataset.head(10)","0678ecbf":"dataset.info()","f3332646":"dataset.isnull().sum()","80272746":"#all cars are of the model 'C Class'\ndataset.transmission.unique()","51b5e9d8":"dataset.fuelType.unique()","dcef8ab7":"y = dataset.price.values\nX = dataset.drop(['price','model'], axis = 1).values","050f2b42":"print(X)\nprint('----->')\nprint(y)","caee8f84":"from sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(),[1,3])], remainder = 'passthrough')\nX = np.array(ct.fit_transform(X))\nprint(X)","33881cd2":"X[0]\n","2328b396":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 1)\n","f6a0d08b":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","5c4c78ef":"from sklearn.tree import DecisionTreeRegressor\nreg = DecisionTreeRegressor(random_state = 42)\nreg.fit(X_train, y_train)\ny_pred = reg.predict(X_test)\n\n\nfrom sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(reg, X_train, y_train, cv = 10)\nprint('Accuracy: {:.2f}%'.format(accuracies.mean()*100))\nprint('Std: {:.2f}%'.format(accuracies.std()*100))\n\nfrom sklearn.metrics import r2_score\nr2_score(y_test, y_pred)","bf84810e":"from sklearn.ensemble import RandomForestRegressor\nreg = RandomForestRegressor(n_estimators=10, random_state=42)\nreg.fit(X_train, y_train)\ny_pred = reg.predict(X_test)\n\n\nfrom sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(reg, X_train, y_train, cv = 10)\nprint('Accuracy: {:.2f}%'.format(accuracies.mean()*100))\nprint('Std: {:.2f}%'.format(accuracies.std()*100))\n\nfrom sklearn.metrics import r2_score\nr2_score(y_test, y_pred)","adf819ef":"from xgboost import XGBRegressor\nreg = XGBRegressor()\nreg.fit(X_train, y_train)\ny_pred = reg.predict(X_test)\n\n\nfrom sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(reg, X_train, y_train, cv = 10)\nprint('Accuracy: {:.2f}%'.format(accuracies.mean()*100))\nprint('Std: {:.2f}%'.format(accuracies.std()*100))\n\nfrom sklearn.metrics import r2_score\nr2_score(y_test, y_pred)","9b302a21":"### Dependent and Independent Variables","6d1f5bc4":"### Train Model + Cross Validation","5f276bf8":"### XGBoost has the highest r2 score of 90%","2f86d7d5":"### Feature Scaling","c9e5e56b":"### Encode both transmission and fuelType using OneHotEncoder","f6889d23":"### Splitting into train and test set"}}