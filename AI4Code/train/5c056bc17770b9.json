{"cell_type":{"9532b137":"code","0ccdce93":"code","efa519ee":"code","173f8fd4":"code","7166af7c":"code","6c2bebc7":"code","3a747bde":"code","a646586e":"code","768065c9":"code","ee72157d":"code","1c12452b":"code","3b0db6c0":"code","ee428394":"code","32ccdd2e":"code","7f1d01d5":"code","2afdc5de":"code","fce36499":"code","1f05879a":"code","2229a276":"code","4bab3efe":"code","72dfb383":"code","2062e37b":"code","c6d9e0f8":"code","9571fb75":"markdown","639d7d1b":"markdown","8adf1bee":"markdown","52d6b970":"markdown","a50707bf":"markdown","fc28b711":"markdown","c42c8d19":"markdown","af2ecf2f":"markdown","3af859e8":"markdown","2a47102e":"markdown","647ade5e":"markdown","258fe610":"markdown","e2f1c940":"markdown","d9a009ae":"markdown","6fb93c78":"markdown","0c105182":"markdown","d327b385":"markdown","ace71090":"markdown","19b3c2c9":"markdown","2b3b59d9":"markdown","4614be96":"markdown","576c4e9b":"markdown","25c27c5e":"markdown","2fe03f06":"markdown","6161fff7":"markdown","f3706235":"markdown","829f2a97":"markdown","ad7cc772":"markdown","d97fc02b":"markdown","2e69d264":"markdown","3f34d77b":"markdown","7420a0d5":"markdown","56d23be4":"markdown","0b350a02":"markdown","f52a6cd7":"markdown","8a9fc68e":"markdown","255fa97d":"markdown","a771002e":"markdown","dc0a469e":"markdown"},"source":{"9532b137":"#Importing basic libraries.\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport statsmodels.api as sm\nimport seaborn as sns\nimport os\nimport time\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n#Pandas setting for better visualization of dataframe.\npd.options.display.float_format='{:.2f}'.format\npd.set_option('display.max_columns', 500)\npd.set_option('display.max_colwidth', -1) ","0ccdce93":"dataset = pd.read_csv('..\/input\/taylor-swift-spotify-data\/spotify_taylorswift.csv')\ndataset.head()","efa519ee":"dataset.info()","173f8fd4":"dataset.select_dtypes(include=object).nunique()","7166af7c":"dataset.select_dtypes(exclude=object).describe()","6c2bebc7":"dataset = dataset.drop(['Unnamed: 0', 'name', 'artist', 'release_date', 'instrumentalness'], axis=1)\ndataset","3a747bde":"popularity = dataset['popularity']\ndataset = dataset.drop('popularity', axis=1)\ndataset.insert(loc=len(dataset.columns), column='popularity', value=popularity)\ndataset","a646586e":"sns.displot(x='popularity', data=dataset, kde=True, color='#a70ad5')\nplt.title('Popularity Distribution')","768065c9":"dataset = dataset.drop(dataset.loc[dataset['popularity'] <=20].index)\ndataset = dataset.reset_index()\ndataset = dataset.drop('index', axis=1)\ndataset","ee72157d":"sns.displot(x='popularity', data=dataset, kde=True, color='#a70ad5')\nplt.title('Popularity Distribution\\n(After Deletion)')","1c12452b":"from scipy.stats import skew\nprint(skew(dataset['popularity'], bias=False))","3b0db6c0":"#creating dummy dataset to sort the data. It is to see which album is having most popularity.\napa = dataset.groupby('album').mean().sort_values(['popularity'],ascending=False)\napa = apa.reset_index()\n\nplt.figure(figsize=(24, 6))\nsns.barplot(x='album', y='popularity', data=apa)\nplt.title('Album vs Popularity', fontsize=20)","ee428394":"sns.pairplot(dataset)","32ccdd2e":"corr = dataset.corr()\nplt.figure(figsize=(24, 6))\nsns.heatmap(corr, annot=True)","7f1d01d5":"sns.set_theme(color_codes=True)\nplt.figure(figsize=(18, 6))\nsns.regplot(x='acousticness', y='energy', data=dataset)\nplt.title('Acousticness vs Energy')","2afdc5de":"sns.set_theme(color_codes=True)\nplt.figure(figsize=(18, 6))\nsns.regplot(x='acousticness', y='loudness', data=dataset)\nplt.title('Acousticness vs Loudness')","fce36499":"sns.set_theme(color_codes=True)\nplt.figure(figsize=(18, 6))\nsns.regplot(x='energy', y='loudness', data=dataset)\nplt.title('Energy vs Loudness')","1f05879a":"dataset = dataset.drop('album', axis=1)\ndataset","2229a276":"x = dataset.iloc[:, 1:-1].values\ny = dataset.iloc[:,-1].values","4bab3efe":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x,y, test_size=0.2,random_state=27)","72dfb383":"from sklearn.ensemble import RandomForestRegressor\nregressor = RandomForestRegressor(n_estimators=100, random_state=27)\nregressor.fit(x_train, y_train)","2062e37b":"y_pred = regressor.predict(x_test)\nnp.set_printoptions(precision=0)\nprint(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))","c6d9e0f8":"from sklearn.metrics import r2_score\nr2_score(y_test, y_pred)","9571fb75":"We dropped `Unnamed: 0`, `name`, `artist`, `release_date`, and `instrumentalness`. We reduced the feature into 10 with 1 dependant variable.","639d7d1b":"From above chart, 3 highest popularity of Taylor's songs are Lover, Reputation, and Fearless.","8adf1bee":"By plotting the distribution of `popularity`, we see that the data can be distributed normally if the lowest data on the left side dropped.","52d6b970":"Again, and again, random_state 27. As my lucky number said! :)","a50707bf":"<font size=\"5\">**Taylor Swift - Spotify Data**<\/font>","fc28b711":"### 4.2 Moving to Array and Split the Dataset","c42c8d19":"We dropped 2 data from the dataset with lowest `popularity`.","af2ecf2f":"We dropped `album` because we will predict the score based on numerical feature of songs characteristics only,","3af859e8":"### 2.3 Dataset Cleaning","2a47102e":"Below libraries is esential on any notebook. I imported it as default. I think we will not use all of it in this projects.","647ade5e":"## 2. The Dataset","258fe610":"The above chart is clearer than the other two. We can see positive correlation of `energy` and `loudness`. Song with higher `energy` tend to have higher `loudness`.","e2f1c940":"By moving the `popularity` column, our dataset is cleaned. We have dependant variable on the rightmost column of this dataset.","d9a009ae":"### 4.1 Dropping non-Relevant Feature","6fb93c78":"### 3.1 Popularity Analysis","0c105182":"After dropping 2 data with lowest `popularity`, we have nearly normal distribution of `popularity`, with a bit left-skewed.","d327b385":"#### 3.3.2 Acusticness vs Loudness","ace71090":"The pairplot of every numerical features shown that no linear correlation of `popularity` and other features. ","19b3c2c9":"Based on the prediction and real value, We can say that the model predicted the `popularity` of Taylor's song pretty well based on the songs characteristic.","2b3b59d9":"## 4. Modelling","4614be96":"#### 3.3.3 Energy vs Loudness","576c4e9b":"### 2.2 Dataset Overview","25c27c5e":"We can see the negative correlation. Song with high `acousticness` level tend to have lower `loudness`.","2fe03f06":"### 3.3 Features Correlation","6161fff7":"### 2.1 Importing the Dataset","f3706235":"The dataset consists of 14 features and 1 dependant variable which is `popularity`. There are no null values in this dataset also. The `Unnamed: 0` feature works as index. We can drop it later.","829f2a97":"### 4.4 Testing the Test Set Prediction","ad7cc772":"## 1. Importing Libraries","d97fc02b":"The `artist` feature only have 1 unique value. We can drop this feature later because it doesn't give us any valueable information. We already know that this dataset of Taylor Swift's song. The `album` and `release_date` feature is redundant. We know that there are no album released on same date. Therefore we only need 1 of those features. The `release_date` will be dropped later.","2e69d264":"### 3.2 Album vs. Popularity Analysis","3f34d77b":"0.42 in R2 score. We can say that our model is *not so smart*. But, It is enough for previewing Taylor's song popularity for her songs in the future!","7420a0d5":"## 3. Data Analysis","56d23be4":"#### 3.3.1 Energy vs Acousticness","0b350a02":"With Regplot, we can see the negative correlation of `acousticness` and `energy`. Songs with higher level of `acousticness` tend to have lower `energy`.","f52a6cd7":"**Task :**<\/br>\nTry to model the popularity of Taylor's song. Maybe we can find and help her how to achieve greater popularity :)","8a9fc68e":"### 4.3 Making Random Forest Regressor Model","255fa97d":"Correlation heatmap also not showing high-correlation of `popularity` with other features. We can see below high-correlation :\n* `acousticness` negatively correlated to `energy`\n* `acousticness` negatively correlated to `loudness`\n* `energy` positively correlated to `loudness`","a771002e":"The numerical features is shown above. Let's ignore `Unnamed: 0`. Take a good look at `instrumentalness`. The 25% quantile, median, and 75% quantile is zero. We can drop `instrumentalness` feature because it doesn't give much information.","dc0a469e":"### 4.5 Model Accuracy Using R2"}}