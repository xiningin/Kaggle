{"cell_type":{"7c6e09ca":"code","c28a7752":"code","5edfd639":"code","052a5bd8":"code","9b90e60f":"code","0a2d9943":"markdown"},"source":{"7c6e09ca":"import numpy as np\nimport pandas as pd\nimport time\nimport pytz\n\nfrom collections import defaultdict\nfrom datetime import datetime, timedelta, date\n\n\npd.set_option('display.max_colwidth', None)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c28a7752":"# brutally imported the matrix\nsla_mat = pd.read_excel('\/kaggle\/input\/logistics-shopee-code-league\/SLA_matrix.xlsx',index_col=1, skiprows=[0], nrows=4)\nsla_mat = sla_mat.drop(columns=['Unnamed: 0'])\n\nmat = defaultdict(lambda: defaultdict(int)) #defaultdict of defaultdict of integers\nfor x, y in sla_mat.iteritems():\n    for ii, jj in y.iteritems():\n        mat[x][ii] = timedelta(days= int(jj[0]))","5edfd639":"df = pd.read_csv('\/kaggle\/input\/logistics-shopee-code-league\/delivery_orders_march.csv')\n\n# preprocess the address to match the dictionary's keys\ndf['buyeraddress'] = df['buyeraddress'].map(lambda x : x.split()[-1].title() if x.split()[-1].lower()!='manila' else ' '.join(x.split()[-2:]).title())\ndf['selleraddress'] = df['selleraddress'].map(lambda x : x.split()[-1].title() if x.split()[-1].lower()!='manila' else ' '.join(x.split()[-2:]).title())\ndf['2nd_deliver_attempt'] = df['2nd_deliver_attempt'].fillna(0)\ndf","052a5bd8":"ph = ['2020-03-25','2020-03-30','2020-03-31'] # removed '2020-03-08' as it's Sunday~\nph = [datetime.strptime(x, '%Y-%m-%d').replace(hour=0, minute=0, second=0, microsecond=0) for x in ph]\nsunday = 6\nislate = []\n\ndef calHolidays(date1, date2):\n    date1_ord = date1.toordinal()\n    date2_ord = date2.toordinal()\n    cnt = 0\n\n    for d_ord in range(date1_ord, date2_ord):\n        d = date.fromordinal(d_ord)\n        if (d.weekday() == sunday):\n            cnt += 1\n            \n    cnt += sum([date1<=x<=date2 for x in ph])\n    return timedelta(days=cnt)\n\nfor index, cols in df.iterrows():    \n    late = 0\n    pick = datetime.fromtimestamp(cols['pick']).replace(hour=0, minute=0, second=0, microsecond=0)\n    first_att = datetime.fromtimestamp(cols['1st_deliver_attempt']).replace(hour=0, minute=0, second=0, microsecond=0)\n    sec_att = datetime.fromtimestamp(cols['2nd_deliver_attempt']).replace(hour=0, minute=0, second=0, microsecond=0) if cols['2nd_deliver_attempt'] else 0\n    \n    days = first_att - pick - calHolidays(pick,first_att)\n    if days > mat[cols['selleraddress']][cols['buyeraddress']]:\n        late = 1\n\n    if not late and sec_att:\n        interval = sec_att - first_att - calHolidays(first_att,sec_att)\n        if interval > timedelta(days=3):\n            late = 1\n                \n    islate.append((cols['orderid'],late))\n    \nres = pd.DataFrame(islate, columns=('orderid','is_late'))","9b90e60f":"res.to_csv('result.csv', index = False)\nprint(res)","0a2d9943":"# Shopee Code League 2020 - Logistics Solution Score 1.0\n***9min runtime***"}}