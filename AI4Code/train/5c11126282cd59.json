{"cell_type":{"f9868359":"code","476d9fa7":"code","286aa9b2":"code","5525d207":"code","e5a466a7":"code","cdd5741d":"code","cc888a84":"code","dd20a10a":"code","47ef761a":"code","124f39a4":"code","d9fab59c":"code","c33a554e":"code","bada4686":"code","12921e68":"code","0644e44b":"code","f50fc090":"code","7e6ba0a9":"code","42c39061":"code","c8fdc5f7":"code","233722d3":"code","a771dd68":"code","8528ad4b":"code","24a9cfda":"code","d01e088f":"code","369f4c3b":"code","304dac4a":"code","08049f9c":"code","491b531c":"code","d304df85":"code","97066eaa":"code","afa210e7":"code","21cd2ff0":"code","5c12fb8a":"markdown","eaa2477d":"markdown","9f9697f6":"markdown","b64a19cf":"markdown","d2fddf46":"markdown","dc3b9608":"markdown","45db5122":"markdown","623a43e4":"markdown"},"source":{"f9868359":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","476d9fa7":"df = pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')\ndf.head()","286aa9b2":"df.describe()","5525d207":"df.isnull().sum()","e5a466a7":"#visualizing Null values if it exists with heatmap\nplt.figure(figsize=(22,10))\nplt.xticks(size=20,color='grey')\nplt.tick_params(size=12,color='grey')\nplt.title('Finding Null Values Using Heatmap\\n',color='grey',size=30)\nsns.heatmap(df.isnull(),\n            yticklabels=False,\n            cbar=False,\n            cmap='PuBu_r',\n            )","cdd5741d":"from sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2\ndata = df.copy()\nX = data.iloc[:,0:13]  \ny = data.iloc[:,-1]     \n\nbestfeatures = SelectKBest(score_func=chi2, k=10)\nfit = bestfeatures.fit(X,y)\ndfscores = pd.DataFrame(fit.scores_)\ndfcolumns = pd.DataFrame(X.columns)\n#concat two dataframes for better visualization \nfeatureScores = pd.concat([dfcolumns,dfscores],axis=1)\nfeatureScores.columns = ['Specs','Score']  \nprint(featureScores.nlargest(12,'Score'))  ","cc888a84":"from sklearn.ensemble import ExtraTreesClassifier\nmodel = ExtraTreesClassifier()\nmodel.fit(X,y)\nprint(model.feature_importances_) \n\nfeat_importances = pd.Series(model.feature_importances_, index=X.columns)\nfeat_importances.nlargest(13).plot(kind='barh')\nplt.show()","dd20a10a":"plt.figure(figsize=(12,10))\nsns.heatmap(df.corr(),annot=True,cmap=\"magma\",fmt='.2f')","47ef761a":"for i in df.columns:\n    print(i,len(df[i].unique()))","124f39a4":"sns.set_style('darkgrid')\nsns.set_palette('Set2')","d9fab59c":"df2 = df.copy()\ndef chng(sex):\n    if sex == 0:\n        return 'female'\n    else:\n        return 'male'\ndf2['sex'] = df2['sex'].apply(chng)\ndef chng2(prob):\n    if prob == 0:\n        return 'Heart Disease'\n    else:\n        return 'No Heart Disease'\ndf2['output'] = df2['output'].apply(chng2)","c33a554e":"df2['output'] = df2['output'].apply(chng2)\nsns.countplot(data= df2, x='sex',hue='output')\nplt.title('Gender v\/s target\\n')","bada4686":"sns.countplot(data= df2, x='sex',hue='thall')\nplt.title('Gender v\/s Thalassemia\\n')\nprint('Thalassemia (thal-uh-SEE-me-uh) is an inherited blood disorder that causes your body to have less hemoglobin than normal. Hemoglobin enables red blood cells to carry oxygen')","12921e68":"sns.countplot(data= df2, x='slp',hue='output')\nplt.title('Slope v\/s Target\\n')","0644e44b":"sns.countplot(data= df2, x='exng',hue='thall')\nplt.title('exang v\/s Thalassemia\\n')","f50fc090":"plt.figure(figsize=(16,7))\nsns.distplot(df[df['output']==0]['age'],kde=False,bins=50)\nplt.title('Age of Heart Diseased Patients\\n')","7e6ba0a9":"plt.figure(figsize=(16,7))\nsns.distplot(df[df['output']==0]['chol'],kde=False,bins=40)\nplt.title('Chol of Heart Diseased Patients\\n')","42c39061":"df3 = df[df['output'] == 0 ][df.columns] \n#target 0 - people with heart disease\npal = sns.light_palette(\"blue\", as_cmap=True)\nprint('Age vs trestbps(Heart Diseased Patinets)')\nsns.jointplot(data=df3,\n              x='age',\n              y='trtbps',\n              kind='hex',\n              cmap='Reds'\n           \n              )\n#age\tsex\tcp\ttrtbps\tchol\tfbs\trestecg\tthalachh\texng\toldpeak\tslp\tcaa\tthall\toutput","c8fdc5f7":"sns.jointplot(data=df3,\n              x='chol',\n              y='age',\n              kind='kde',\n              cmap='PuBu'\n              )","233722d3":"sns.jointplot(data=df3,\n              x='chol',\n              y='trtbps',\n              kind='resid',\n             \n              )","a771dd68":"sns.boxplot(data=df2,x='output',y='age')\n","8528ad4b":"sns.boxplot(data=df2,x='cp',y='thalachh',hue='output')","24a9cfda":"sns.pairplot(df,hue='cp')","d01e088f":"X = df.drop('output', axis = 1)\ny = df['output']","369f4c3b":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","304dac4a":"X_train=(X_train-np.min(X_train))\/(np.max(X_train)-np.min(X_train)).values\nX_test=(X_test-np.min(X_test))\/(np.max(X_test)-np.min(X_test)).values","08049f9c":"from sklearn.linear_model import LogisticRegression\nlogre = LogisticRegression()\nlogre.fit(X_train,y_train)","491b531c":"y_pred = logre.predict(X_test)\nactual = []\npredcition = []\nfor i,j in zip(y_test,y_pred):\n  actual.append(i)\n  predcition.append(j)\ndic = {'Actual':actual,\n       'Prediction':predcition\n       }\nresult  = pd.DataFrame(dic)\nimport plotly.graph_objects as go\n \nfig = go.Figure()\n \n \nfig.add_trace(go.Scatter(x=np.arange(0,len(y_test)), y=y_test,\n                    mode='markers+lines',\n                    name='Test'))\nfig.add_trace(go.Scatter(x=np.arange(0,len(y_test)), y=y_pred,\n                    mode='markers',\n                    name='Pred'))","d304df85":"from sklearn.metrics import accuracy_score\nprint(accuracy_score(y_test,y_pred))","97066eaa":"from sklearn.metrics import classification_report\nprint(classification_report(y_test,y_pred))","afa210e7":"from sklearn.metrics import confusion_matrix\nprint(confusion_matrix(y_test,y_pred))\nsns.heatmap(confusion_matrix(y_test,y_pred),annot=True)","21cd2ff0":"from sklearn.metrics import roc_curve\nfpr, tpr, thresholds = roc_curve(y_test, y_pred)\nplt.plot(fpr,tpr)\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.0])\nplt.title('ROC curve for Heart disease classifier')\nplt.xlabel('False positive rate (1-Specificity)')\nplt.ylabel('True positive rate (Sensitivity)')\nplt.grid(True)","5c12fb8a":"# **Data Visualization**","eaa2477d":"# **Imports and Reading Dataset**","9f9697f6":"**ROC Curve**","b64a19cf":"**Normalization**","d2fddf46":"**Feature Selection**","dc3b9608":"# **Logistic Regression**","45db5122":"# **Data Analysis**","623a43e4":"**Joint plots in seaborn helps us to understand the trend seen among two features**"}}