{"cell_type":{"6e62a152":"code","f16a5c7c":"code","fb3691bc":"code","8183c8d7":"code","a2a0637d":"code","3ec217ab":"code","0940cf2c":"code","bb7b5843":"code","a820a793":"code","30327d21":"code","730dfec2":"code","1755dedf":"code","fe70819f":"code","8ccbfe02":"code","2671b1c1":"markdown","606962a9":"markdown","21e151ad":"markdown","a90ad00d":"markdown","3f6de62a":"markdown","f390db02":"markdown","943e3a52":"markdown","d314865a":"markdown","27fff4d0":"markdown","f871c552":"markdown"},"source":{"6e62a152":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f16a5c7c":"# Importing few libraries first\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import confusion_matrix, accuracy_score","fb3691bc":"dataset = pd.read_csv('\/kaggle\/input\/breast-cancer-wisconsin-benign-or-malignant\/tumor.csv')","8183c8d7":"# Printing first 5 rows\ndataset.head()","a2a0637d":"# Fetching info about the dataset\ndataset.info()","3ec217ab":"# Separating the features and labels\nX = dataset.iloc[:, :-1].values\ny = dataset.iloc[:, -1].values # The last column has the label value","0940cf2c":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","bb7b5843":"feature_scaling = StandardScaler()\nX_train = feature_scaling.fit_transform(X_train)\nX_test = feature_scaling.transform(X_test)","a820a793":"rand_for = RandomForestClassifier(n_estimators = 10, max_depth = 5 ,criterion = 'entropy', random_state = 0)\nrand_for.fit(X_train, y_train)","30327d21":"y_pred = rand_for.predict(X_test)","730dfec2":"cm = confusion_matrix(y_test, y_pred)\nprint(cm)\naccuracy_score(y_test, y_pred)","1755dedf":"output = pd.DataFrame({'Real_class': y_test, 'Predicted_class': y_pred})","fe70819f":"output.head()","8ccbfe02":"output.to_csv('breast_cancer.csv', index=False)\nprint(\"Submission was successfully saved!\")","2671b1c1":"**Feature scaling for better prediction**","606962a9":"# First Step\n\n\n**First of all we need to import few libraries...**","21e151ad":"**Time to check how good our model is in predicting**","a90ad00d":"**Congratulations!!!You just built a simple model for classifying stage of cancer cells!!**","3f6de62a":"# Second Step\n\n**We are going to separate the label from the features.**","f390db02":"Here X is our feature matrix and y is label vector...","943e3a52":"**It seems our model is predicting perfectly ;)**","d314865a":"**Almost 95% accuracy!! \nThat's cool!**","27fff4d0":"# Fourth Step\n\n**We will build a simple random forest classification model**","f871c552":"# Third Step\n\n**Splitting whole data set into training set and holdout set.Our holdout set is 20% of the whole data set.**"}}