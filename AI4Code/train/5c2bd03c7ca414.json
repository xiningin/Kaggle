{"cell_type":{"d969101d":"code","534ced6a":"code","8aee3788":"code","99aa2b1f":"code","c871fea4":"code","1364e837":"code","f6d4d4d9":"code","d1d87570":"code","19e4d5eb":"code","f42d5a1f":"code","e652da7c":"code","dca1ed07":"code","99239027":"code","4b768a70":"code","a53f0c8a":"code","9615a027":"code","f6ac981f":"code","954d8974":"code","3343a42b":"code","e84d358d":"code","fc54c83f":"code","c6f854f2":"markdown"},"source":{"d969101d":"import pandas as pd\nimport numpy as np\nfrom tensorflow import keras\nfrom keras.utils import to_categorical\nfrom sklearn.model_selection import train_test_split\nfrom keras import Sequential\nimport os\nfrom keras.layers import Dense\nfrom keras.layers import Flatten\nfrom keras.layers import Dropout\nfrom keras.layers import BatchNormalization\nfrom keras.layers import Conv2D\nimport seaborn as sns\nfrom keras.callbacks import ReduceLROnPlateau\nfrom keras.preprocessing.image import ImageDataGenerator","534ced6a":"df = pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ndf_test = pd.read_csv('..\/input\/digit-recognizer\/test.csv')","8aee3788":"X = df.drop(['label'],axis=1)\ny = df['label'].copy()","99aa2b1f":"sns.countplot(y)","c871fea4":"labels = to_categorical(y)\nlabels","1364e837":"X = X\/255.0\ndf_test = df_test\/255.0","f6d4d4d9":"X_train,X_test,y_train,y_test = train_test_split(X,labels,test_size=0.3,stratify=labels)","d1d87570":"X = X.values.reshape((-1,28,28,1))","19e4d5eb":"df_test = df_test.values.reshape((-1,28,28,1))","f42d5a1f":"X_train,X_test,y_train,y_test = train_test_split(X,labels,test_size=0.3,stratify=labels)","e652da7c":"datagen = ImageDataGenerator(rotation_range=10,zoom_range=0.1,width_shift_range=0.1,height_shift_range=0.1,)","dca1ed07":"datagen.fit(X)","99239027":"model3 = Sequential()\n\nmodel3.add(Conv2D(32,(5,5),strides = 1 , padding='same',activation='relu',input_shape=(28,28,1)),)\nmodel3.add(BatchNormalization())\nmodel3.add(Conv2D(32,(4,4),strides = 1 , padding='same',activation='relu'))\nmodel3.add(BatchNormalization())\nmodel3.add(Dropout(0.4))\nmodel3.add(Conv2D(64,(4,4),strides = 1 , padding='same',activation='relu'))\nmodel3.add(BatchNormalization())\nmodel3.add(Conv2D(64,(4,4),strides = 1 , padding='same',activation='relu'))\nmodel3.add(BatchNormalization())\nmodel3.add(Dropout(0.4))\nmodel3.add(Conv2D(128,(4,4),strides = 1 , padding='same',activation='relu'))\nmodel3.add(Flatten())\nmodel3.add(Dense(256,activation='relu'))\nmodel3.add(Dense(10,activation='softmax'))\n\nmodel3.compile(keras.optimizers.Adam(),keras.losses.categorical_crossentropy,['accuracy'])","4b768a70":"print(model3.summary())","a53f0c8a":"X_train,X_test,y_train,y_test = train_test_split(X,labels,test_size=0.3)","9615a027":"model3.fit_generator(datagen.flow(X_train,y_train,batch_size=100),epochs=10,validation_data=(X_test,y_test))","f6ac981f":"model3.fit_generator(datagen.flow(X,labels,batch_size=100),epochs=40)","954d8974":"y_hat = np.argmax( model3.predict(df_test) , axis = 1 )","3343a42b":"res = pd.DataFrame()\n\nres['Label'] = y_hat\nres['ImageId'] = res.index.values + 1","e84d358d":"res = res[['ImageId','Label']]\nres.head()","fc54c83f":"res.to_csv('submission.csv',index=False)","c6f854f2":"# Get into top 29% very easily\n**sorry for not writing comments :-P**"}}