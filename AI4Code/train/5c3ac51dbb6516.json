{"cell_type":{"75a1749f":"code","43ee4aa1":"code","59bc89fd":"code","ab495667":"code","8ef87b99":"code","99cf8935":"code","c1eff72d":"code","fc97980d":"code","bf32f21d":"code","72726881":"code","230738ff":"code","704efb3f":"code","72862d7c":"markdown","6be354c6":"markdown","e3279b05":"markdown","839db248":"markdown","8bf2cd4a":"markdown","3e29e297":"markdown"},"source":{"75a1749f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","43ee4aa1":"!pip install --upgrade pip","59bc89fd":"!pip install ipywidgets\n!pip install keplergl\n!jupyter nbextension install --py --sys-prefix keplergl\n!jupyter nbextension enable keplergl --py --sys-prefix","ab495667":"!jupyter --version\n","8ef87b99":"!python --version\n","99cf8935":"from keplergl import KeplerGl","c1eff72d":"df = pd.read_csv('..\/input\/hex-data.csv')\ndf.head()","fc97980d":"# Load map with data and config\nmap_1 = KeplerGl(height=500)\nmap_1","bf32f21d":"map_1.add_data(data=df, name='data_1')","72726881":"config = {\n  \"version\": \"v1\",\n  \"config\": {\n    \"visState\": {\n      \"filters\": [],\n      \"layers\": [\n        {\n          \"id\": \"0rceopc\",\n          \"type\": \"hexagonId\",\n          \"config\": {\n            \"dataId\": \"data_1\",\n            \"label\": \"H3 Hexagon\",\n            \"color\": [\n              18,\n              147,\n              154\n            ],\n            \"columns\": {\n              \"hex_id\": \"hex_id\"\n            },\n            \"isVisible\": True,\n            \"visConfig\": {\n              \"opacity\": 0.8,\n              \"colorRange\": {\n                \"name\": \"Uber Viz Diverging 3.5\",\n                \"type\": \"diverging\",\n                \"category\": \"Uber\",\n                \"colors\": [\n                  \"#00939C\",\n                  \"#2FA7AE\",\n                  \"#5DBABF\",\n                  \"#8CCED1\",\n                  \"#BAE1E2\",\n                  \"#F8C0AA\",\n                  \"#EB9C80\",\n                  \"#DD7755\",\n                  \"#D0532B\",\n                  \"#C22E00\"\n                ]\n              },\n              \"coverage\": 0.38,\n              \"enable3d\": True,\n              \"sizeRange\": [\n                0,\n                500\n              ],\n              \"coverageRange\": [\n                0,\n                1\n              ],\n              \"elevationScale\": 5\n            },\n            \"hidden\": False,\n            \"textLabel\": [\n              {\n                \"field\": None,\n                \"color\": [\n                  255,\n                  255,\n                  255\n                ],\n                \"size\": 18,\n                \"offset\": [\n                  0,\n                  0\n                ],\n                \"anchor\": \"start\",\n                \"alignment\": \"center\"\n              }\n            ]\n          },\n          \"visualChannels\": {\n            \"colorField\": {\n              \"name\": \"float_value\",\n              \"type\": \"real\"\n            },\n            \"colorScale\": \"quantize\",\n            \"sizeField\": {\n              \"name\": \"float_value\",\n              \"type\": \"real\"\n            },\n            \"sizeScale\": \"sqrt\",\n            \"coverageField\": None,\n            \"coverageScale\": \"linear\"\n          }\n        }\n      ],\n      \"interactionConfig\": {\n        \"tooltip\": {\n          \"fieldsToShow\": {\n            \"data_1\": [\n              \"hex_id\",\n              \"value\",\n              \"is_true\",\n              \"float_value\",\n              \"empty\"\n            ]\n          },\n          \"enabled\": True\n        },\n        \"brush\": {\n          \"size\": 27,\n          \"enabled\": False\n        },\n        \"geocoder\": {\n          \"enabled\": True\n        },\n        \"coordinate\": {\n          \"enabled\": True\n        }\n      },\n      \"layerBlending\": \"normal\",\n      \"splitMaps\": [],\n      \"animationConfig\": {\n        \"currentTime\": None,\n        \"speed\": 1\n      }\n    },\n    \"mapState\": {\n      \"bearing\": 24,\n      \"dragRotate\": True,\n      \"latitude\": 37.777269696578756,\n      \"longitude\": -122.41787543387213,\n      \"pitch\": 50,\n      \"zoom\": 12.387828128323221,\n      \"isSplit\": False\n    },\n    \"mapStyle\": {\n      \"styleType\": \"satellite\",\n      \"topLayerGroups\": {},\n      \"visibleLayerGroups\": {},\n      \"threeDBuildingColor\": [\n        3.7245996603793508,\n        6.518049405663864,\n        13.036098811327728\n      ],\n      \"mapStyles\": {}\n    }\n  }\n}","230738ff":"# save current map and apply the config settings from above cell \nmap_1.save_to_html(file_name=\"my_keplergl_map_config.html\", config=config)","704efb3f":"# or pass in different data and config\n#map_1.save_to_html(data={'data_1': df}, config=config, file_name=\"my_keplergl_map.html\")","72862d7c":"## References\n\n* Set up & installation of packages: https:\/\/www.kaggle.com\/praanj\/kelper-gl-geospatial-visualization-on-kaggle\/data\n* Original demo idea: https:\/\/medium.com\/vis-gl\/introducing-kepler-gl-for-jupyter-f72d41659fbf\n* Another example worth developing further: https:\/\/www.kaggle.com\/bsridatta\/interactive-covid-19-visualization-keplergl\n* Original docs: https:\/\/github.com\/mariamingallonMM\/kepler.gl\/blob\/master\/bindings\/kepler.gl-jupyter\/notebooks\/DataFrame.ipynb\n","6be354c6":"After trying the above, you can configure your map like you would do in keplergl and copy the settings from the {} icon to pass them on to 'config'","e3279b05":"> Install kepler packages and enable it for jupyter","839db248":"!jupyter labextension install @jupyter-widgets\/jupyterlab-manager keplergl-jupyter\n","8bf2cd4a":"Immport the library KeplerGl","3e29e297":"Add the data from the dataframe to the map"}}