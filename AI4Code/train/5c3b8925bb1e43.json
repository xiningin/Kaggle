{"cell_type":{"57459822":"code","2786e031":"code","31fcda44":"code","a55ff180":"code","96591386":"code","2d045f8d":"code","451ccbaf":"code","69e1d600":"code","b5a94fc7":"code","52d99e9f":"code","bf6915da":"code","05206f37":"code","63fbf0a9":"code","45b836bf":"code","12ab2400":"code","14843fdd":"code","37b92cd6":"code","52e39a20":"markdown","e4337dda":"markdown"},"source":{"57459822":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2786e031":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.tree import DecisionTreeClassifier, export_graphviz\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn import tree\nfrom sklearn.model_selection import train_test_split,GridSearchCV\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import accuracy_score, confusion_matrix, roc_curve, roc_auc_score","31fcda44":"df= pd.read_csv('..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv')\ndf.head()","a55ff180":"for i in df.columns:\n    sns.distplot(df[i])\n    plt.show()","96591386":"df.describe().T","2d045f8d":"df.isnull().sum()","451ccbaf":"df['quality'].value_counts().unique()\n","69e1d600":"# Partioning the features into X an Y\nx=df.drop(columns = 'quality')\ny=df['quality']\nx.head()\ny.head()","b5a94fc7":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.20,random_state=541)","52d99e9f":"#Decision trees withoutpreprocessing\nclf = DecisionTreeClassifier(max_depth =24, min_samples_leaf= 1, min_samples_split= 2)\nclf.fit(x_train,y_train)","bf6915da":"clf.score(x_test,y_test)","05206f37":"#Now we try to impute the result taking Entropy\nclf2 = DecisionTreeClassifier(criterion = 'entropy', max_depth =24, min_samples_leaf= 1)\nclf2.fit(x_train,y_train)\n","63fbf0a9":"clf2.score(x_test,y_test)\n","45b836bf":"clf3 = DecisionTreeClassifier(criterion = 'gini', max_depth =24, min_samples_leaf= 1)\nclf3.fit(x_train,y_train)\nclf3.score(x_test,y_test)\n#Entropy calculation gives highest accuracy for this problem.","12ab2400":"#Now using Random Forest classifier which is also falls under Bagging of Ensemble technique\nrand_clf = RandomForestClassifier(random_state=6)\nrand_clf.fit(x_train,y_train)","14843fdd":"rand_clf.score(x_test,y_test)\n#Since Random Forest is Ensemble technique taking Decision trees as Base model it able to give a highest accuracy than Decision trees immuning the Outlier impact.","37b92cd6":"#Lets carry out some hyper parametric tuning technique\ngrid_param = {\n    \"n_estimators\" : [90,100,115,130],\n    'criterion': ['gini', 'entropy'],\n    'max_depth' : range(2,20,1),\n    'min_samples_leaf' : range(1,10,1),\n    'min_samples_split': range(2,10,1),\n    'max_features' : ['auto','log2']\n}\n","52e39a20":"**Wine Quality classification using Decision trees and Random forest**\n","e4337dda":"So the result shows Random Forest always works better than Decision trees since its an ensemble technique. THe overfitting of Data that is faced in Decision trees is immuned by using Random Forest"}}