{"cell_type":{"6ba2bce1":"code","46facda7":"code","a839eb24":"code","8d5f6f1c":"code","9daa3929":"code","c0510d27":"code","2efeaab6":"code","4ff230c5":"code","9d4e4422":"code","913f0817":"code","ac549fac":"code","12ec1cdc":"code","e8516026":"code","021fea49":"code","f4bf0504":"code","9d3616f2":"code","c5f3c930":"code","c010d0e9":"code","afe6487b":"code","d9f2d350":"markdown","a5943709":"markdown","9e10fbcb":"markdown","b42de9d3":"markdown","ec804676":"markdown","e198a360":"markdown","e4ca4c12":"markdown","ae2efe18":"markdown","93388257":"markdown","f953e67d":"markdown","2d07b05a":"markdown","6e6e6e19":"markdown","d71185f2":"markdown","ec293c88":"markdown","ed37196f":"markdown","ca3a6c95":"markdown","836b2bb2":"markdown"},"source":{"6ba2bce1":"!pip install pycaret","46facda7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport plotly.offline as py\nimport plotly.graph_objs as go\nimport plotly.express as px\nimport seaborn as sns\nimport warnings\nfrom pandas_profiling import ProfileReport \nfrom pycaret.regression import *\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a839eb24":"df = pd.read_excel('\/kaggle\/input\/covid19\/Kaggle_Sirio_Libanes_ICU_Prediction.xlsx')\ndf.head()","8d5f6f1c":"report_df = ProfileReport(df)\nreport_df","9daa3929":"# Numerical features\nNumerical_feat = [feature for feature in df.columns if df[feature].dtypes != 'O']\nprint('Total numerical features: ', len(Numerical_feat))\nprint('\\nNumerical Features: ', Numerical_feat)","c0510d27":"index_int_float = ['AGE_ABOVE65', 'ALBUMIN_MIN', 'ALBUMIN_MAX',\n       'BE_ARTERIAL_MEDIAN', 'BE_ARTERIAL_MEAN', 'BE_ARTERIAL_MIN',\n       'BE_ARTERIAL_MAX', 'BE_VENOUS_MEDIAN', 'BE_VENOUS_MEAN',\n       'BE_VENOUS_MIN', 'BE_VENOUS_MAX', 'HEMATOCRITE_MEDIAN',\n       'HEMATOCRITE_MEAN', 'HEMATOCRITE_MIN', 'HEMATOCRITE_MAX',\n       'HEMOGLOBIN_MEDIAN', 'HEMOGLOBIN_MEAN', 'HEMOGLOBIN_MIN',\n       'HEMOGLOBIN_MAX', 'LACTATE_MEAN', 'LACTATE_MIN',\n       'LACTATE_MAX', 'LEUKOCYTES_MEDIAN', 'LEUKOCYTES_MEAN', 'LEUKOCYTES_MIN',\n       'LEUKOCYTES_MAX', 'BLOODPRESSURE_DIASTOLIC_MEAN',\n       'RESPIRATORY_RATE_MEAN', 'BLOODPRESSURE_DIASTOLIC_MEDIAN',\n       'RESPIRATORY_RATE_MEDIAN', 'BLOODPRESSURE_DIASTOLIC_MIN',\n       'TEMPERATURE_MIN', 'BLOODPRESSURE_SISTOLIC_MAX', 'RESPIRATORY_RATE_MAX',\n       'OXYGEN_SATURATION_MAX', 'BLOODPRESSURE_DIASTOLIC_DIFF',\n       'BLOODPRESSURE_SISTOLIC_DIFF', 'HEART_RATE_DIFF',\n       'RESPIRATORY_RATE_DIFF', 'TEMPERATURE_DIFF', 'OXYGEN_SATURATION_DIFF',\n       'BLOODPRESSURE_DIASTOLIC_DIFF_REL', 'BLOODPRESSURE_SISTOLIC_DIFF_REL',\n       'HEART_RATE_DIFF_REL', 'RESPIRATORY_RATE_DIFF_REL',\n       'TEMPERATURE_DIFF_REL', 'OXYGEN_SATURATION_DIFF_REL', 'ICU']      \n\nplt.figure(figsize=[20,12])\ni = 1\nfor col in index_int_float :\n    plt.subplot(5,10,i)\n    sns.violinplot(x=col, data= df, orient='v')\n    sns.despine()\n    i = i+1\nplt.tight_layout()\nplt.show()","2efeaab6":"# categorical features\ncategorical_feat = [feature for feature in df.columns if df[feature].dtypes=='O']\nprint('Total categorical features: ', len(categorical_feat))\nprint('\\n',categorical_feat)","4ff230c5":"index_str = ['AGE_PERCENTIL', 'WINDOW']\n\nplt.figure(figsize=[30,10])\ni = 1\nfor col in index_str :\n    plt.subplot(4,10,i)\n    sns.scatterplot(x=col, y = 'ICU' ,data= df)\n    sns.despine()\n    i = i+1\nplt.tight_layout()\nplt.show()","9d4e4422":"df.dtypes","913f0817":"int_features = ['AGE_ABOVE65']\n        \nfloat_features = ['ALBUMIN_MIN', 'ALBUMIN_MAX',\n       'BE_ARTERIAL_MEDIAN', 'BE_ARTERIAL_MEAN', 'BE_ARTERIAL_MIN',\n       'BE_ARTERIAL_MAX', 'BE_VENOUS_MEDIAN', 'BE_VENOUS_MEAN',\n       'BE_VENOUS_MIN', 'BE_VENOUS_MAX', 'HEMATOCRITE_MEDIAN',\n       'HEMATOCRITE_MEAN', 'HEMATOCRITE_MIN', 'HEMATOCRITE_MAX',\n       'HEMOGLOBIN_MEDIAN', 'HEMOGLOBIN_MEAN', 'HEMOGLOBIN_MIN',\n       'HEMOGLOBIN_MAX', 'LACTATE_MEAN', 'LACTATE_MIN',\n       'LACTATE_MAX', 'LEUKOCYTES_MEDIAN', 'LEUKOCYTES_MEAN', 'LEUKOCYTES_MIN',\n       'LEUKOCYTES_MAX', 'BLOODPRESSURE_DIASTOLIC_MEAN',\n       'RESPIRATORY_RATE_MEAN', 'BLOODPRESSURE_DIASTOLIC_MEDIAN',\n       'RESPIRATORY_RATE_MEDIAN', 'BLOODPRESSURE_DIASTOLIC_MIN',\n       'TEMPERATURE_MIN', 'BLOODPRESSURE_SISTOLIC_MAX', 'RESPIRATORY_RATE_MAX',\n       'OXYGEN_SATURATION_MAX', 'BLOODPRESSURE_DIASTOLIC_DIFF',\n       'BLOODPRESSURE_SISTOLIC_DIFF', 'HEART_RATE_DIFF',\n       'RESPIRATORY_RATE_DIFF', 'TEMPERATURE_DIFF', 'OXYGEN_SATURATION_DIFF',\n       'BLOODPRESSURE_DIASTOLIC_DIFF_REL', 'BLOODPRESSURE_SISTOLIC_DIFF_REL',\n       'HEART_RATE_DIFF_REL', 'RESPIRATORY_RATE_DIFF_REL',\n       'TEMPERATURE_DIFF_REL', 'OXYGEN_SATURATION_DIFF_REL']\n\nobj_features = ['AGE_PERCENTIL', 'WINDOW']\n\nexp_reg = setup(df, #Train Data\n                target = 'ICU',  #Target\n                categorical_features = obj_features, # Categorical Features\n                numeric_features = int_features + float_features, # Numeric Features\n                normalize = True, # Normalize Dataset\n                remove_outliers = True, # Remove 5% Outliers\n                remove_multicollinearity = True, # Remove Multicollinearity\n                silent = True # Process Automation\n               )","ac549fac":"compare_models(blacklist = ['tr', 'catboost'], sort = 'RMSLE')","12ec1cdc":"model_br = create_model('br')\nmodel_lightgbm = create_model('lightgbm')\nmodel_xgboost = create_model('xgboost')\nmodel_ridge = create_model('ridge')","e8516026":"tuned_br = tune_model('br')\ntuned_lightgbm = tune_model('lightgbm')\ntuned_xgboost = tune_model('xgboost')\ntuned_ridge = tune_model('ridge')","021fea49":"plot_model(tuned_br, plot = 'learning')","f4bf0504":"plot_model(tuned_lightgbm, plot = 'learning')","9d3616f2":"plot_model(tuned_xgboost, plot = 'learning')","c5f3c930":"plot_model(tuned_ridge, plot = 'learning')","c010d0e9":"blender = blend_models(estimator_list = [tuned_br, tuned_lightgbm, tuned_xgboost, tuned_ridge])","afe6487b":"display(plot_model(blender, plot = 'learning'))","d9f2d350":"#Bayesian Ridge","a5943709":"#Models Tuning","9e10fbcb":"#Extreme Gradient Boosting","b42de9d3":"To avoid errors I changed: plt.subplot(5,10,i) It was (4,10,i), however there are more than 40 choosen features.    ","ec804676":"#The target column shouln't be in the list, only in TARGET.","e198a360":"#Install Pycaret before All the rest.","e4ca4c12":"#Display Learning Curve","ae2efe18":"#Compare Models","93388257":"I don't know how to fix that error above: RANSAC could not find a valid consensus set. All `max_trials` iterations were skipped because each randomly chosen sub-sample failed the passing criteria. See estimator attributes for diagnostics (n_skips*).","f953e67d":"The choice of the features I copied from Felipe Oliveira https:\/\/www.kaggle.com\/felipeoliveiraml\/stacking-gradient-boosting-pr-80after he used ANOVA (to chose the features).","2d07b05a":"#Codes from Mehdi G https:\/\/www.kaggle.com\/servietsky\/eazy-way-house-price-pycaret","6e6e6e19":"#Create and Train Models","d71185f2":"Das War's Kaggle Notebook Runner: Mar\u00edlia Prata  @mpwolke","ec293c88":"#Ridge Regression","ed37196f":"#Display Learning Curve for Blending","ca3a6c95":"#Gradient Boosting Regressor","836b2bb2":"#Blend Models"}}