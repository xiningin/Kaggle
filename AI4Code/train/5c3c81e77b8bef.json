{"cell_type":{"e285827b":"code","490ba16c":"code","ea4d09a5":"code","dfb78ec3":"code","c6aad64a":"code","dc761dde":"code","7a0b8406":"code","16853651":"code","8b3dd155":"code","06b0c35d":"code","574c617c":"code","402cb00d":"code","6b2adf56":"code","39f6ef8a":"code","f4b41308":"code","3918bfd1":"code","560c0c44":"markdown","9039d94c":"markdown","48bc3d7e":"markdown","85f89796":"markdown"},"source":{"e285827b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","490ba16c":"# imports \nimport numpy as np\nimport pandas as pd \nimport os,random\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\n","ea4d09a5":"df_train=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ndf_test=pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ndf_train.head()","dfb78ec3":"df_train['Sex'].replace('female',0, inplace=True)\ndf_train['Sex'].replace('male',1,inplace=True)\ndf_test['Sex'].replace('female',0, inplace=True)\ndf_test['Sex'].replace('male',1, inplace=True)","c6aad64a":"df_train","dc761dde":"df_train.info()","7a0b8406":"print(\"The duplicated data is: \",df_train.duplicated().sum())\nprint(\"The duplicated data is: \",df_train.isnull().sum())\n","16853651":"df_train['Age'].fillna(df_train['Age'].mean(),inplace=True)\ndf_test['Age'].fillna(df_test['Age'].mean(),inplace=True)\n","8b3dd155":"sns.pairplot(data=df_train)","06b0c35d":"sns.heatmap(df_train.corr())","574c617c":"sns.countplot(x='Pclass',hue='Survived',data=df_train)","402cb00d":"sns.countplot(x='Sex',hue='Survived',data=df_train)","6b2adf56":"X=df_train\nX_test=df_test\nY=df_train['Survived']","39f6ef8a":"# X_train,X_test,y_train,y_test=train_test_split(X,Y)","f4b41308":"X_test","3918bfd1":"from sklearn.ensemble import RandomForestClassifier\n\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\",\"Age\"]\nX = pd.get_dummies(X[features])\nX_test = pd.get_dummies(X_test[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=3, random_state=2)\nmodel.fit(X, Y)\ny_hat = model.predict(X_test)\nsubmit = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')\nsubmit['Survived'] = y_hat\nsubmit.to_csv('submission.csv', index=False)","560c0c44":"There is a correlation between the Sex and the survived, which mean the female can survive more than the male\n","9039d94c":"There is a postive correlation between the Pclass and the survived, which mean the first class can survive more than the second and thrid\n","48bc3d7e":"There is no duplicated and found null values in Some coulmns, will investigate to test if i will delete them or fill.","85f89796":"# Visualization"}}