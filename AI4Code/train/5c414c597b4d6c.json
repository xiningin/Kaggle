{"cell_type":{"e0c42d8b":"code","dfb0a885":"code","908b65bb":"code","079aa153":"code","0b165aa0":"code","94dd4ee5":"code","bd95f0af":"code","9161ca03":"code","232ec943":"code","30a34bb0":"code","0655a91f":"code","7160a85c":"code","b866333b":"code","2171940e":"code","469f3bb5":"code","0e6ba796":"code","0e5a704d":"code","b5b06123":"code","8c67bcd6":"code","7c27b102":"code","294708d4":"code","2a16df85":"code","f6ad2fd9":"code","870a0d8b":"code","2a2172f6":"code","5295c331":"code","867eeab0":"code","94b6094c":"code","9e75a74f":"code","b637514b":"code","6767e61e":"code","fad13428":"code","05c88bf6":"code","01dad155":"code","e4098eb6":"code","0b5812ed":"code","182d8ac3":"code","3b0cfac0":"code","f33d4c18":"code","53363b55":"code","115ab918":"code","47312906":"code","cbeae7a3":"code","d05c1a74":"code","eff95aec":"code","bfb45f3b":"code","088b2791":"code","19cb4e47":"code","a7a837c6":"code","9dce2928":"code","0ccdcf19":"code","2019f1f0":"code","02a94ee0":"code","56b848a9":"code","80d6272a":"code","a628451f":"code","96d88ff1":"code","e9bb8da4":"code","44b06601":"code","58aec958":"code","5156936c":"code","21d4f8e7":"code","e2c7b382":"code","4e6ce286":"code","e80ec059":"code","772b95c3":"code","0e651dd8":"code","b44cec54":"code","0f7a6c08":"code","f1a13f86":"code","ebca944d":"code","ad4108d7":"code","2014ba37":"code","19a87faa":"code","37c989b6":"code","93eb6da5":"code","432c91ff":"code","f083901c":"code","968271f5":"code","a19fba83":"code","956d196d":"code","7adaf4ea":"markdown","c934ee1b":"markdown","d4d4a57f":"markdown","21fd0385":"markdown","02642d64":"markdown","ad23c0ab":"markdown","2862aba1":"markdown","f040d1c1":"markdown","59bde644":"markdown","2cf5e22b":"markdown","1a28ec5c":"markdown","ae4cfd35":"markdown","f1630b0c":"markdown","8c4584a9":"markdown","dfa697b4":"markdown","481544fc":"markdown"},"source":{"e0c42d8b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dfb0a885":"import seaborn as sns\nimport matplotlib.pyplot as plt","908b65bb":"data = pd.read_csv('\/kaggle\/input\/supermarket-sales\/supermarket_sales - Sheet1.csv')\ndata.head()","079aa153":"data.columns","0b165aa0":"data.isnull().sum()","94dd4ee5":"data[data['Product line']==\"Health and beauty\"].groupby(['Product line','Gender']).count()['Invoice ID']","bd95f0af":"data[data.Payment==\"Ewallet\"].groupby(['Payment','Gender']).count()['Invoice ID']","9161ca03":"data.groupby('City')['Total'].sum().sort_values(ascending=False)","232ec943":"data[data['Product line']==\"Electronic accessories\"].groupby(['Product line','Payment']).count()['City'].sort_values(ascending=False)","30a34bb0":"data[(data['Product line']==\"Electronic accessories\") & (data.City==\"Yangon\") & (data.Gender==\"Male\")].groupby('Rating').mean().index","0655a91f":"data[data.Payment==\"Ewallet\"].groupby('Customer type').count()['City']","7160a85c":"type(data.Date)","b866333b":"data.Date = pd.to_datetime(data.Date)\ndata.head()","2171940e":"type(data.Date)","469f3bb5":"data['Month'] = data.Date.dt.month\ndata['Year'] = data.Date.dt.year\ndata['date'] = data.Date.dt.day\ndata.head()","0e6ba796":"data.Month.unique()","0e5a704d":"data.groupby('Month').sum()['Total'].sort_values(ascending=False)","b5b06123":"data.drop(columns=['Invoice ID','Date','Time'], inplace=True)","8c67bcd6":"data.head()","7c27b102":"data.describe()","294708d4":"data['gross margin percentage'].unique()","2a16df85":"data.drop(columns=['gross margin percentage','Year'],inplace=True)\ndata.head()","f6ad2fd9":"data.corr()","870a0d8b":"sns.heatmap(data.corr())","2a2172f6":"data.dtypes","5295c331":"data.City.dtypes","867eeab0":"num_cols = data.select_dtypes(include=[\"int64\",\"float64\"])\nnum_cols","94b6094c":"cat_cols = data.select_dtypes(exclude=[\"int64\",\"float64\"])\ncat_cols","9e75a74f":"sns.jointplot(data['Total'],data['Rating'],kind='hex')","b637514b":"sns.distplot(data['gross income'])","6767e61e":"sns.boxplot(data['gross income'])","fad13428":"sns.violinplot(data['gross income'],color='red')","05c88bf6":"sns.pairplot(data)","01dad155":"plt.figure(figsize=(20,10))\nsns.boxplot(data=data)","e4098eb6":"sns.countplot(data.Gender)","0b5812ed":"data.Gender.value_counts()","182d8ac3":"data['Product line'].value_counts()","3b0cfac0":"plt.figure(figsize=(10,4))\nax=sns.countplot(data['Product line'])\nax.set_xticklabels(ax.get_xticklabels(),rotation=30,ha='right')","f33d4c18":"data['Product line'].unique()","53363b55":"plt.figure(figsize=(15,5))\nplt.pie(data['Product line'].value_counts(),labels=data['Product line'].unique(),startangle=0,shadow=True,explode=[0,0,0.1,0,0,0])\nplt.axis(\"equal\")\nplt.legend(loc=\"upper right\")\nplt.show()","115ab918":"data.City.unique()","47312906":"l = pd.Series(['y','n','n','m','y','m','y'])\npd.get_dummies(l,drop_first=True)","cbeae7a3":"data['Product line'].value_counts()","d05c1a74":"from sklearn.preprocessing import LabelEncoder ","eff95aec":"le = LabelEncoder()\n\n#data['city'] = le.fit_transform(data['City'])\ndata['Customer Type'] = le.fit_transform(data['Customer type'])\ndata.head(10)","bfb45f3b":"#data.drop(columns=['City','Customer type'],inplace=True)","088b2791":"data.head()","19cb4e47":"cat_cols.columns","a7a837c6":"enc_data = pd.get_dummies(data[['Branch', 'City', 'Gender', 'Product line', 'Payment']],drop_first=True)\nenc_data.head()","9dce2928":"new_data = pd.concat([data,enc_data],axis=1)\nnew_data.head()","0ccdcf19":"data = new_data.drop(columns=['Branch', 'City', 'Gender', 'Product line', 'Payment','Customer type'])\ndata.head()","2019f1f0":"data.Total.describe()","02a94ee0":"from sklearn.preprocessing import StandardScaler\n\ns = StandardScaler()\n\nnum_cols_scaled = s.fit_transform(num_cols)\n\nnum_cols_data = pd.DataFrame(num_cols_scaled)\n\nnum_cols_data.head()","56b848a9":"data['Unit price'] = num_cols_data.iloc[:,0]\ndata['Quantity'] = num_cols_data.iloc[:,1]\ndata['Tax 5%'] = num_cols_data.iloc[:,2]\ndata['Total'] = num_cols_data.iloc[:,3]\ndata['cogs'] = num_cols_data.iloc[:,4]\ndata['gross income'] = num_cols_data.iloc[:,5]\ndata['Rating'] = num_cols_data.iloc[:,6]\ndata['Month'] = num_cols_data.iloc[:,7]\ndata['date'] = num_cols_data.iloc[:,8]\n\ndata.head()","80d6272a":"sns.distplot(data['gross income'])","a628451f":"data.describe()","96d88ff1":"data.columns","e9bb8da4":"data['Tax 5%'].corr(data['gross income'])","44b06601":"data['Total'].corr(data['cogs'])","58aec958":"data['gross income'].corr(data['cogs'])","5156936c":"data['Branch_B'].corr(data['Branch_C'])","21d4f8e7":"data[['Tax 5%','Unit price','Quantity']].corrwith(data['Total'])","e2c7b382":"data[['Tax 5%','Unit price','Quantity']].corrwith(data['cogs'])","4e6ce286":"data.drop(columns=['Tax 5%','Total','cogs'],inplace = True)\ndata.head()","e80ec059":"sns.heatmap(data.corr())","772b95c3":"y = data.Rating\ny.head()","0e651dd8":"x = data.drop(columns=['Rating'])\nx.head()","b44cec54":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(x,y, test_size=0.3,random_state=30)","0f7a6c08":"x.shape","f1a13f86":"y.shape","ebca944d":"x_train.shape","ad4108d7":"y_test.shape","2014ba37":"# from sklearn.model_selection import KFold\n\n# k = KFold(n_splits=4)","19a87faa":"# for train,test in k.split([1,2,3,4,5,6,7,8]):\n#     print(train,test)","37c989b6":"# from sklearn.model_selection import StratifiedKFold\n\n# s = StratifiedKFold(n_splits=3)\n","93eb6da5":"# for train,test in s.split([0,1,2,3,4,5,6,7,8],[0,0,0,1,1,1,2,2,2]):\n#     print(train,test)","432c91ff":"sns.regplot(data['gross income'],data.Rating)","f083901c":"from sklearn.linear_model import LinearRegression\n\nmodel = LinearRegression()\n\nmodel.fit(x_train,y_train)","968271f5":"pred = model.predict(x_test)\n\npred.shape","a19fba83":"from sklearn.metrics import mean_squared_error\n\nmean_squared_error(pred,y_test)","956d196d":"pred","7adaf4ea":"Which gender spends more on Health and Beauty","c934ee1b":"3. Electronic Accesories are bought mostly using which mode of payment","d4d4a57f":"get numeric columns and categorical columns seperately","21fd0385":"Plot of Total vs Rating","02642d64":"Replacing the columns with the standardized values","ad23c0ab":"1. Which Gender uses more Ewallet","2862aba1":"Plotting Gross income distribution","f040d1c1":"Scaling Numerical columns down to Standard Normal distribution.","59bde644":"Plotting every relationship","2cf5e22b":"Since gross margin percentage has same value throughout we can choose to drop it from the data.","1a28ec5c":"Distribution of Gross Income","ae4cfd35":"5. Member customers use more EWallet or Normal Customers","f1630b0c":"2. Which City produces most Sales(Total)","8c4584a9":"Which Month has most sales","dfa697b4":"After standardizing mean gets centered around zero and has unit standard deviation","481544fc":"4. What is the average rating Men of Yangon give to Electronic Accessories"}}