{"cell_type":{"703f3f1c":"code","c2c3b360":"code","1152485a":"code","3cd02242":"code","570a14d7":"code","5ed7a1bf":"code","3dc803b6":"code","3497cc47":"code","2db1a21c":"code","07edcb6d":"code","ede1bc3d":"code","5c74112a":"code","01b8e778":"code","f10c5e28":"code","bfe073cb":"code","f6cf17ca":"code","5e815d06":"code","a410d0d6":"code","7f5fe992":"code","6909251b":"code","a3f69d8f":"code","4cefbfd6":"code","30897a90":"code","920bb98b":"code","c2efa274":"code","aab50c33":"code","a81cd7d3":"code","c2576ee7":"code","4ece24f1":"code","563bda4f":"code","2e051f40":"code","bb56cf65":"code","0a245475":"code","6647fabc":"code","db62d3e2":"code","a34963b3":"code","310a1b90":"code","6838f441":"code","af0868f8":"code","886b927b":"code","a9856c45":"code","66bf5aa3":"code","9b869e7c":"code","d4b3b9cf":"code","e35c0ef5":"code","3b2443bc":"code","d6809bab":"code","61155705":"code","fb5f42cf":"code","be18b3b5":"code","c9e417a4":"code","d29f8c38":"code","a7b4370e":"code","e4046a81":"code","8d78031b":"code","fb50cc77":"code","bdca30d9":"code","91c34228":"code","b8f65dcc":"code","1e2dbd61":"code","86dee1fe":"code","efdaa8e7":"code","7d3ab1bf":"code","0f1db45c":"code","8ede8745":"code","499c254f":"code","2094db7c":"code","290e70f8":"code","ec3bf9c9":"code","4e093d5d":"code","57a8e26e":"code","4e7f3ee6":"code","65c98ca6":"code","e844f2de":"code","51cb9056":"code","cb79259c":"code","e6cb32dc":"code","1c9aa0e1":"code","f4ac10f2":"code","ce1fa711":"code","15d38cac":"code","77863c15":"code","a11f9f68":"code","25e083de":"code","f7718936":"code","4681d1b2":"code","5e507458":"code","4981feff":"code","1f4a1f5c":"code","42383475":"code","68984d6c":"code","a5428b4c":"code","85961efb":"code","152ab1a6":"code","15945cfa":"code","5a311186":"code","bd38a5f5":"code","8c17ec16":"code","f997382c":"code","f7955f72":"markdown","978f9cbc":"markdown","f2f36487":"markdown","f833bbac":"markdown","0e7526dc":"markdown","e5051a68":"markdown","5af44ee2":"markdown","da626352":"markdown","bdfc7793":"markdown","393eef9c":"markdown","0520bedc":"markdown","135095f5":"markdown","f511ef4b":"markdown","7ce94103":"markdown","6e581000":"markdown","d2147996":"markdown","e1ce458b":"markdown","5ed89d3c":"markdown","3985b3ca":"markdown","799ac936":"markdown","cd0f4bee":"markdown","c7b9c956":"markdown","f5b13689":"markdown","af36dcbd":"markdown","b904e1f2":"markdown","37a73ab6":"markdown","cf915da1":"markdown","02fe19b7":"markdown","d3264ecf":"markdown","cfd5c50b":"markdown","13944ac8":"markdown","bc06a25e":"markdown","2f97a30d":"markdown","69c60eaf":"markdown","21d9d0de":"markdown","47e82a65":"markdown","94818aa5":"markdown","3b06c7ed":"markdown","ed929a09":"markdown","aa5a1cab":"markdown","b43eabee":"markdown","66667f6b":"markdown","602c7fbd":"markdown","a20058b7":"markdown","5523eada":"markdown","47462282":"markdown","9114cf5c":"markdown","52f064d0":"markdown","114b623f":"markdown","c078cf31":"markdown","be65f7bc":"markdown","b1b8c28f":"markdown","3fa1d467":"markdown","15899ff1":"markdown","544ec430":"markdown","580c319d":"markdown","66685797":"markdown","2af411be":"markdown","7154a805":"markdown","3cb95a95":"markdown","b8c660bf":"markdown","15aaed79":"markdown","68775eae":"markdown","9ec4b1a7":"markdown","bf6fc388":"markdown","419b2fb8":"markdown","b8815fc2":"markdown","7a79fdf2":"markdown","b86e0b69":"markdown","36837b30":"markdown","189f512c":"markdown","7b89a63a":"markdown","4912868c":"markdown","72c4489d":"markdown","a4f38bfa":"markdown","343f4664":"markdown","be9bc891":"markdown","c925a0df":"markdown","89f272f0":"markdown","5e3ec8b5":"markdown","a1b9d626":"markdown","5251d31e":"markdown","d09016ad":"markdown","83fe93f7":"markdown","faa37bb8":"markdown","de35bc05":"markdown","4acfb736":"markdown","c89fdf20":"markdown","34725c46":"markdown","94846351":"markdown","2e4a6059":"markdown","e1995d08":"markdown","1b1652ac":"markdown"},"source":{"703f3f1c":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set_style(\"whitegrid\")\n\nfrom scipy import stats\nfrom scipy.stats import shapiro\nfrom scipy.stats import chi2_contingency\nfrom scipy.stats import chi2\n\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import roc_auc_score, auc, roc_curve, f1_score, precision_score, recall_score, accuracy_score\n\nimport optuna\n\nimport xgboost\nfrom xgboost import XGBClassifier\nfrom catboost import CatBoostClassifier\n\n\nseed=42 \n\n\nplt.style.use(\"seaborn-whitegrid\")\nplt.rc(\"figure\", autolayout=True)\nplt.rc(\"axes\", labelweight=\"bold\", labelsize=\"large\", titleweight=\"bold\", titlesize=14, titlepad=10)","c2c3b360":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","1152485a":"def num_plot(df, col, title, symb):\n    fig, ax = plt.subplots(2, 1, figsize=(5.2,5),gridspec_kw={\"height_ratios\": (.1, .9)})\n    ax[0].set_title(title,fontsize=18)\n    sns.boxplot(y='placed', x=col, data=df, orient='h', palette=palette, ax=ax[0])\n    ax[0].set(yticks=[])\n    ax[0].set_ylabel('')\n    ax[0].set_xlabel('')\n    sns.countplot(x=col, data=df, ax=ax[1], hue='placed',palette=palette)\n    ax[1].set_xlabel(col, fontsize=16)\n    ax[1].set_yticks([])\n    for container in ax[1].containers:\n        ax[1].bar_label(container,fmt='%.1f')\n    plt.legend(title='Placed?', title_fontsize=14, labels=['no', 'yes'], fontsize=13, fancybox=True, shadow=True, frameon=True)\n    plt.tight_layout()\n    plt.show()","3cd02242":"def get_scores(y, y_pred):\n    data={'Accuracy': np.round(accuracy_score(y, y_pred),2),\n    'Precision':np.round(precision_score(y, y_pred),2),\n    'Recall':np.round(recall_score(y, y_pred),2),\n    'F1':np.round(f1_score(y, y_pred),2),\n    'ROC AUC':np.round(roc_auc_score(y, y_pred),2)}\n    scores_df = pd.Series(data).to_frame('scores')\n    return scores_df","570a14d7":"def conf_matrix(y, y_pred):\n    fig, ax =plt.subplots(figsize=(3.5,3.5))\n    labels=['No','Yes']\n    ax=sns.heatmap(confusion_matrix(y, y_pred), annot=True, cmap=\"Blues\", fmt='g', cbar=False, annot_kws={\"size\":25})\n    plt.title('Placed?', fontsize=20)\n    ax.xaxis.set_ticklabels(labels, fontsize=17) \n    ax.yaxis.set_ticklabels(labels, fontsize=17)\n    ax.set_ylabel('Test')\n    ax.set_xlabel('Predicted')","5ed7a1bf":"df = pd.read_csv('\/kaggle\/input\/engineering-placements-prediction\/collegePlace.csv')","3dc803b6":"df.head()","3497cc47":"df.info()","2db1a21c":"df.describe()","07edcb6d":"df.describe().loc[['mean', 'min', 'max']]","ede1bc3d":"df.rename(columns={'HistoryOfBacklogs': 'backlogs', 'PlacedOrNot': 'placed'}, inplace=True)","5c74112a":"df = df.rename(columns=str.lower)","01b8e778":"palette = {1:'#46C646', 0:'#FF0000'}","f10c5e28":"sns.heatmap(df.corr(), cmap='RdBu', annot=True, vmin=-1, vmax=1)\nplt.title('Correlation Matrix');","bfe073cb":"num_plot(df, 'cgpa', 'CGPA by Placed', '')","f6cf17ca":"df.loc[(df['cgpa'] == 5) & (df['placed'] == 1)]","5e815d06":"df_1 = df.loc[((df['age'] == 23) | (df['age'] == 24)) & (df['gender'] == 'Male') &\n ((df['stream'] == 'Information Technology') | (df['stream'] == 'Computer Science')) & (df['placed'] == 1)]","a410d0d6":"fig, ax = plt.subplots(1,2, figsize=(12,3))\nsns.boxplot(ax=ax[0], x='cgpa', data=df_1)\nsns.histplot(ax=ax[1], x='cgpa', data=df_1)\nplt.show()","7f5fe992":"df_clean = df.drop(list(df.loc[(df['cgpa'] == 5) & (df['placed'] == 1)].index))","6909251b":"print('We Removed {} outliers !'.format(len(df)-len(df_clean)))","a3f69d8f":"num_plot(df_clean, 'cgpa', 'CGPA by Placed', '')","4cefbfd6":"# Create a table of cross-tabulations\nplaced_cgpa = pd.crosstab(df_clean[\"placed\"],df_clean[\"cgpa\"])\nprint(placed_cgpa)","30897a90":"stat, p, dof, expected = chi2_contingency(placed_cgpa)\nprint('Degress of freedom = %d' % dof)\nprint('Expected frequencies ', expected)","920bb98b":"prob = 0.95\ncritical = chi2.ppf(0.95, dof)\nprint('probability=%.3f, critical=%.3f, stat=%.3f' % (prob, critical, stat))","c2efa274":"# interpret test-statistic\nif abs(stat) >= critical:\n\tprint('The variables are dependent (We reject H0)')\nelse:\n\tprint('The variables are independent (We fail to reject H0)')","aab50c33":"# interpret p-value\nalpha = 1.0 - prob\nprint('Significance = %.3f, p = %.3f' % (alpha, p))\nif p <= alpha:\n\tprint('The variables are dependent (We reject H0)')\nelse:\n\tprint('The variables are independent (We fail to reject H0)')","a81cd7d3":"num_plot(df_clean, 'internships', 'No. Internships by Placed', '')","c2576ee7":"df_int = df.loc[df['internships'] == 3]","4ece24f1":"fig, ax = plt.subplots(1,4, figsize=(15,4))\nplt.suptitle('Analysis of students with 3 internships')\nsns.countplot(ax=ax[0], x='placed', data=df_int,palette=palette)\nfor container in ax[0].containers:\n    ax[0].bar_label(container)\nsns.countplot(ax=ax[1], x='gender', hue='placed', data=df_int,palette=palette)\nfor container in ax[1].containers:\n    ax[1].bar_label(container)\nsns.countplot(ax=ax[2], x='age', data=df_int, hue='placed',palette=palette)\nfor container in ax[2].containers:\n    ax[2].bar_label(container)\nsns.countplot(ax=ax[3], x='backlogs', hue='placed', data=df_int,palette=palette)\nfor container in ax[3].containers:\n    ax[3].bar_label(container)\nplt.legend(title='placed?', loc='upper right', labels=['no', 'yes'])\nplt.show()","563bda4f":"# Create a table of cross-tabulations\ntable = pd.crosstab(df_clean[\"placed\"],df_clean[\"internships\"])\nprint(table)","2e051f40":"stat, p, dof, expected = chi2_contingency(table)\nprint('Degress of freedom = %d' % dof)\nprint('Expected frequencies ', expected)","bb56cf65":"prob = 0.95\ncritical = chi2.ppf(0.95, dof)\nprint('probability=%.3f, critical=%.3f, stat=%.3f' % (prob, critical, stat))","0a245475":"# interpret test-statistic\nif abs(stat) >= critical:\n\tprint('The variables are dependent (We reject H0)')\nelse:\n\tprint('The variables are independent (We fail to reject H0)')","6647fabc":"# interpret p-value\nalpha = 1.0 - prob\nprint('Significance = %.3f, p = %.3f' % (alpha, p))\nif p <= alpha:\n\tprint('The variables are dependent (We reject H0)')\nelse:\n\tprint('The variables are independent (We fail to reject H0)')","db62d3e2":"plt.figure(figsize=(5,4))\nplt.title('Placed by gender')\ng = sns.countplot(x='gender', data=df_clean, hue='placed',palette=palette)\nfor container in g.containers:\n    g.bar_label(container)\nplt.legend(title='Placed?', title_fontsize=14, labels=['no', 'yes'], fontsize=13, fancybox=True, shadow=True, frameon=True)\nplt.yticks([])\nplt.show()","a34963b3":"# Create a table of cross-tabulations\ntable = pd.crosstab(df_clean[\"gender\"],df_clean[\"placed\"])\nprint(table)","310a1b90":"stat, p, dof, expected = chi2_contingency(table)\nprint('Degress of freedom = %d' % dof)\n","6838f441":"prob = 0.95\ncritical = chi2.ppf(0.95, dof)\nprint('probability=%.3f, critical=%.3f, stat=%.3f' % (prob, critical, stat))","af0868f8":"# interpret p-value\nalpha = 1.0 - prob\nprint('Significance = %.3f, p = %.3f' % (alpha, p))\nif p <= alpha:\n\tprint('The variables are dependent (We reject H0)')\nelse:\n\tprint('The variables are independent (We fail to reject H0)')\n","886b927b":"plt.figure(figsize=(4,4))\nplt.title('Placed by backlogs')\ng = sns.countplot(x='backlogs', data=df_clean, hue='placed',palette=palette)\nfor container in g.containers:\n    g.bar_label(container)\nplt.legend(title='Placed?', title_fontsize=14, labels=['no', 'yes'], fontsize=13, fancybox=True, shadow=True, frameon=True)\nplt.yticks([])\nplt.show()","a9856c45":"logs_plac = pd.crosstab(df_clean[\"backlogs\"],df_clean[\"placed\"])\nprint(logs_plac)","66bf5aa3":"stat, p, dof, expected = chi2_contingency(logs_plac)\nprint('Degress of freedom = %d' % dof)","9b869e7c":"prob = 0.95\ncritical = chi2.ppf(prob, dof)\nprint('probability=%.3f, critical=%.3f, stat=%.3f' % (prob, critical, stat))\n# interpret test-statistic\nif abs(stat) >= critical:\n\tprint('The variables are dependent (We reject H0)')\nelse:\n\tprint('The variables are independent (We fail to reject H0)')\n# interpret p-value\nalpha = 1.0 - prob\nprint('Significance = %.3f, p = %.3f' % (alpha, p))\nif p <= alpha:\n\tprint('The variables are dependent (We reject H0)')\nelse:\n\tprint('The variables are independent (We fail to reject H0)')","d4b3b9cf":"plt.figure(figsize=(4,4))\nplt.title('Hostel by placed')\ng = sns.countplot(x='hostel', data=df_clean, hue='placed',palette=palette)\nfor container in g.containers:\n    g.bar_label(container)\nplt.legend(title='Placed?', title_fontsize=14, labels=['no', 'yes'], fontsize=13, fancybox=True, shadow=True, frameon=True)\nplt.yticks([])\nplt.show()","e35c0ef5":"host_plac = pd.crosstab(df_clean[\"hostel\"],df_clean[\"placed\"])\nprint(host_plac)","3b2443bc":"stat, p, dof, expected = chi2_contingency(host_plac)\nprint('Degress of freedom = %d' % dof)","d6809bab":"prob = 0.95\ncritical = chi2.ppf(prob, dof)\nprint('probability=%.3f, critical=%.3f, stat=%.3f' % (prob, critical, stat))\n# interpret test-statistic\nif abs(stat) >= critical:\n\tprint('The variables are dependent (We reject H0)')\nelse:\n\tprint('The variables are independent (We fail to reject H0)')\n# interpret p-value\nalpha = 1.0 - prob\nprint('Significance = %.3f, p = %.3f' % (alpha, p))\nif p <= alpha:\n\tprint('The variables are dependent (We reject H0)')\nelse:\n\tprint('The variables are independent (We fail to reject H0)')","61155705":"fig, ax = plt.subplots(1,4, figsize=(15,4))\nsns.countplot(ax=ax[0], x='age', data=df_clean)\nsns.barplot(ax=ax[1], x='placed', y='age', data=df_clean,palette=palette)\nsns.boxplot(ax=ax[2], x='placed', y='age', data=df_clean,palette=palette)\nsns.countplot(ax=ax[3], x='age', data=df_clean, hue='placed',palette=palette)\nplt.show()","fb5f42cf":"df_clean.loc[(df_clean['age'] >26) & (df_clean['placed']==1)]","be18b3b5":"df_clean = df_clean.drop(list(df_clean.loc[(df_clean['age'] > 26) & (df_clean['placed']==1)].index))\nprint('In total we removed {} outliers !'.format(len(df)-len(df_clean)))","c9e417a4":"fig, ax = plt.subplots(1,4, figsize=(15,4))\nsns.countplot(ax=ax[0], x='age', data=df_clean)\nsns.barplot(ax=ax[1], x='placed', y='age', data=df_clean,palette=palette)\nsns.boxplot(ax=ax[2], x='placed', y='age', data=df_clean,palette=palette)\nsns.countplot(ax=ax[3], x='age', data=df_clean, hue='placed',palette=palette)\nplt.legend(title='placed?', loc='upper right', labels=['no', 'yes'])\nplt.title('Age by placement')\nplt.tight_layout()\nplt.show()","d29f8c38":"stat, p = shapiro(df_clean.age)\nprint('Statistics=%.3f, p=%.3f' % (stat, p))\nalpha = 0.05\nif p > alpha:\n\tprint('Sample looks Gaussian at 5% significance level (fail to reject H0)')\nelse:\n\tprint('Sample does not look Gaussian at 5% significance level  (reject H0)')","a7b4370e":"stat, p = shapiro(df_clean.loc[df_clean['age']<25].age)\nprint('Statistics=%.3f, p=%.3f' % (stat, p))\nalpha = 0.05\nif p > alpha:\n\tprint('Sample looks Gaussian at 5% significance level (fail to reject H0)')\nelse:\n\tprint('Sample does not look Gaussian at 5% significance level  (reject H0)')","e4046a81":"age_intern = pd.crosstab(df_clean[\"internships\"],df_clean[\"age\"])\nprint(age_intern)","8d78031b":"stat, p, dof, expected = chi2_contingency(age_intern)\nprint('Degress of freedom = %d' % dof)","fb50cc77":"prob = 0.95\ncritical = chi2.ppf(prob, dof)\nprint('probability=%.3f, critical=%.3f, stat=%.3f' % (prob, critical, stat))\n# interpret test-statistic\nif abs(stat) >= critical:\n\tprint('The variables are dependent (We reject H0)')\nelse:\n\tprint('The variables are independent (We fail to reject H0)')\n# interpret p-value\nalpha = 1.0 - prob\nprint('Significance = %.3f, p = %.3f' % (alpha, p))\nif p <= alpha:\n\tprint('The variables are dependent (We reject H0)')\nelse:\n\tprint('The variables are independent (We fail to reject H0)')","bdca30d9":"df_clean['stream'].value_counts()","91c34228":"df_clean['stream']=df_clean['stream'].replace('Computer Science','CS')\ndf_clean['stream']=df_clean['stream'].replace('Information Technology','IT')\ndf_clean['stream']=df_clean['stream'].replace('Electronics And Communication','Electronic')","b8f65dcc":"plt.figure(figsize=(6.5,4.5))\ng=sns.countplot(x='stream', data=df_clean, hue='placed',palette=palette)\nplt.yticks([])\nplt.xlabel('')\nfor container in g.containers:\n    g.bar_label(container,fmt='%.1f')\nplt.legend(title='Placed?', title_fontsize=14, labels=['no', 'yes'], fontsize=13, fancybox=True, shadow=True, frameon=True)\nplt.title('Placement by Major', fontsize=17)\nplt.show()","1e2dbd61":"mechanical_ratio = df_clean.loc[df_clean['stream']=='Mechanical']['placed'].value_counts()\nmechanical_ratio","86dee1fe":"# Perform Chi-square test\nchi= stats.chisquare(mechanical_ratio)\nprint(chi)","efdaa8e7":"# Test significance\nalpha= 0.05\nif chi[1] < alpha:\n    print(\"Difference is statistically significant with a 95% confidence\")\nelse:\n    print(\"No significant difference with a 95% confidence\")","7d3ab1bf":"civil_ratio = df_clean.loc[df_clean['stream']=='Civil']['placed'].value_counts()\ncivil_ratio","0f1db45c":"# Perform Chi-square test\nchi= stats.chisquare(civil_ratio)\nprint(chi)","8ede8745":"# Test significance\nalpha= 0.05\nif chi[1] < alpha:\n    print(\"Difference is statistically significant with a 95% confidence\")\nelse:\n    print(\"No significant difference with a 95% confidence\")","499c254f":"electrical_ratio = df_clean.loc[df_clean['stream']=='Electrical']['placed'].value_counts()","2094db7c":"chi = stats.chisquare(electrical_ratio)\nchi","290e70f8":"# Test significance\nalpha= 0.05\nif chi[1] < alpha:\n    print(\"Difference is statistically significant with a 95% confidence\")\nelse:\n    print(\"No significant difference with a 95% confidence\")","ec3bf9c9":"plt.figure(figsize=(5,4.5))\nsns.barplot(y='stream', x='hostel',data=df_clean, hue='placed')\nplt.xticks(rotation=90);\nplt.ylabel('');","4e093d5d":"plt.figure(figsize=(5,4.5))\nsns.countplot(y='stream',data=df_clean, hue='gender')\nplt.xticks(rotation=90);\nplt.ylabel('');","57a8e26e":"x, y = 'stream', 'internships'\ndf1 = df_clean.groupby(x)[y].value_counts(normalize=True)\ndf1 = df1.mul(100)\ndf1 = df1.rename('percent(%)').reset_index()","4e7f3ee6":"plt.figure(figsize=(15,5))\ng = sns.barplot(x=x,y='percent(%)',hue=y,data=df1, palette='Blues_r')\nplt.legend(title='No. \\nInternsips',bbox_to_anchor=(1, 1), ncol=1, fancybox=True, shadow=True,fontsize=20,title_fontsize=17)\nplt.xlabel('')\nplt.ylim(0, 65)\nplt.ylabel('students percent (%)',fontsize=20)\nfor container in g.containers:\n    g.bar_label(container, padding = 4, fmt='%.1f', fontsize=10.5)\nplt.yticks([])\nplt.xticks(fontsize=18)\nplt.title('No. Internships by Major', fontsize=20)\nplt.show()","65c98ca6":"x, y = 'stream', 'cgpa'\ndf1 = df_clean.groupby(x)[y].value_counts(normalize=True)\ndf1 = df1.mul(100)\ndf1 = df1.rename('percent(%)').reset_index()","e844f2de":"plt.figure(figsize=(15,4.5))\ng = sns.barplot(x='stream', y='percent(%)',hue='cgpa',data=df1, palette='mako_r')\nplt.legend(title='CGPA',bbox_to_anchor=(1, 1), ncol=1, fancybox=True, shadow=True, fontsize=20,title_fontsize=30)\nplt.xlabel('')\nplt.ylim(0, 40)\nplt.ylabel('students percent (%)',fontsize=20)\nfor container in g.containers:\n    g.bar_label(container, padding = 4, fmt='%.1f', fontsize=10.5)\nplt.yticks([])\nplt.xticks(fontsize=18)\nplt.title('CGPA by Major', fontsize=20)\nplt.show()","51cb9056":"df_clean.info()","cb79259c":"df_encoded = pd.get_dummies(df_clean, drop_first=True)","e6cb32dc":"df_encoded.head()","1c9aa0e1":"X = df_encoded.drop('placed', axis=1)\ny = df_encoded['placed']","f4ac10f2":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, stratify=y, random_state=seed)","ce1fa711":"X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=0.25, random_state=seed)","15d38cac":"def objective(trial, X_train=X_train, X_val=X_val, y_train=y_train, y_val=y_val):\n    param = {\n        'objective' : 'binary:logistic',\n        'eval_metric' : 'auc',\n        'gamma':trial.suggest_int('gamma', 0, 5),\n        'lambda': trial.suggest_loguniform('lambda', 1e-2, 5.0),\n        'alpha': trial.suggest_loguniform('alpha', 1e-2, 5.0),\n        'colsample_bytree': trial.suggest_discrete_uniform('colsample_bytree', 0.01, 1.0, 0.05),\n        'subsample': trial.suggest_discrete_uniform('subsample', 0.01, 1.0, 0.05),\n        'learning_rate': trial.suggest_loguniform('learning_rate', 1e-2, 0.5),\n        'n_estimators': trial.suggest_int('n_estimators', 500, 2000, 100),\n        'max_depth': trial.suggest_int('max_depth', 3, 6, 1),\n        'min_child_weight': trial.suggest_int('min_child_weight', 1, 5),\n    }\n\n\n    model = XGBClassifier(**param,use_label_encoder=False)    \n    model.fit(X_train, y_train, eval_set=[(X_val, y_val)], early_stopping_rounds=20, verbose=False,)   \n    preds = model.predict(X_val)\n    score = accuracy_score(y_val, preds)\n\n    return score","77863c15":"study = optuna.create_study(direction=\"maximize\")\nstudy.optimize(objective, n_trials=100)\n\nprint(\"Number of finished trials: \", len(study.trials))\nprint(\"Best trial:\")\ntrial = study.best_trial\n\nprint(\"  Value: {}\".format(trial.value))\nprint(\"  Params: \")\n\nhp = study.best_params\n\nfor key, value in trial.params.items():\n    print(\"    {}: {}\".format(key, value))","a11f9f68":"xgb_model = XGBClassifier(**hp)","25e083de":"xgb_model.fit(X_train, y_train, eval_set=[(X_val, y_val)], early_stopping_rounds=20, verbose=False)","f7718936":"y_pred_xgb = xgb_model.predict(X_test)","4681d1b2":"conf_matrix(y_test, y_pred_xgb)","5e507458":"get_scores(y_test, y_pred_xgb)","4981feff":"print(classification_report(y_test, y_pred_xgb))","1f4a1f5c":"cat_model = CatBoostClassifier()\ncat_model.fit(X_train, y_train, verbose=0)","42383475":"y_pred_cat = cat_model.predict(X_test)","68984d6c":"conf_matrix(y_test, y_pred_cat)\nget_scores(y_test, y_pred_cat)","a5428b4c":"print(classification_report(y_test, y_pred_cat))","85961efb":"fig, ax_arr = plt.subplots(1,2, figsize = (7, 4))\n\n#XGBOOST \nprobs = xgb_model.predict_proba(X_test)\npreds = probs[:,1]\nfprxgb, tprxgb, thresholddxgb = roc_curve(y_test, preds)\nroc_aucxgb = auc(fprxgb, tprxgb)\n\nax_arr[0].plot(fprxgb, tprxgb, 'b', label = 'AUC = %0.2f' % roc_aucxgb)\nax_arr[0].plot([0, 1], [0, 1],'r--')\nax_arr[0].set_title('ROC XGBoost ',fontsize=20)\nax_arr[0].set_ylabel('True Positive Rate',fontsize=15)\nax_arr[0].set_xlabel('False Positive Rate',fontsize=15)\nax_arr[0].legend(loc = 'lower right', fontsize=18, fancybox=True, shadow=True, frameon=True, handlelength=0)\n\n#CATBOOST\nprobs = cat_model.predict_proba(X_test)\npreds = probs[:,1]\nfprcat, tprcat, thresholddxgb = roc_curve(y_test, preds)\nroc_auccat = auc(fprcat, tprcat)\n\nax_arr[1].plot(fprcat, tprcat, 'b', label = 'AUC = %0.2f' % roc_auccat)\nax_arr[1].plot([0, 1], [0, 1],'r--')\nax_arr[1].set_title('ROC CATBoost ',fontsize=20)\nax_arr[1].set_ylabel('True Positive Rate',fontsize=15)\nax_arr[1].set_xlabel('False Positive Rate',fontsize=15)\nax_arr[1].legend(loc = 'lower right', fontsize=18, fancybox=True, shadow=True, frameon=True, handlelength=0)\n\nplt.tight_layout() ","152ab1a6":"cat_scores = get_scores(y_test, y_pred_cat).rename({'scores':'CATBoost'}, axis=1)\nxgb_scores = get_scores(y_test, y_pred_xgb).rename({'scores':'XGBoost'}, axis=1)","15945cfa":"cat_xgb = pd.concat([cat_scores, xgb_scores], axis=1)\ncat_xgb","5a311186":"xgb_model.feature_names = df_encoded.drop('placed', axis = 1).columns","bd38a5f5":"feat_df= pd.DataFrame({'feature': xgb_model.feature_names,'importance':xgb_model.feature_importances_})","8c17ec16":"sorted_df=feat_df.sort_values('importance', ascending=False)","f997382c":"plt.figure(figsize=(6,3.5))\nsns.barplot(x='importance', y='feature', data=sorted_df.head(7), palette='viridis')\nplt.title('Feature Importance to predict placement by XGBoost')\nplt.xlabel('Feature Importance (%)')\nplt.ylabel('')\nplt.show()","f7955f72":"This means, that the number of internships affects placement.<br>\nIn particular, from the plots we could see that students who did 2 or more internships placed a job more than students who did less internships.","978f9cbc":"# Exploratory Data Analysis and Hypothesis Testing","f2f36487":"# Placement Prediction results dashboard:","f833bbac":"It seems like there is no clear relationship between age and 'placed'. For placed students, there are some outlier values of 'age' consisted of students with an age higher than 26.<br>\nWho are these students?","0e7526dc":"# Q6 - Does age affect job placement?","e5051a68":"**We can see the major where most students did at least one internship is Computer Science (67%), while for Civil, Electrical and Mechanical engineering more than half of the students did not do any internship. Morevoer, Electronic and IT are the majors where most students did 2 or more internships.**","5af44ee2":"## Custom functions definition","da626352":"## Stream VS Hostel","bdfc7793":"From these plots about students with 3 internships we can state:\n- Most of the students are placed\n- Most of them have no history of backlogs. In particular, the great majority of students with no backlogs got placed.\n- The mean age is around 21-22 yo, with some students older than 22 who all got placed.","393eef9c":"- H0: CGPA and placed are independent <br>\n- H1: CGPA and placed are not independent","0520bedc":"- Both XGBoost and CATboost we achieve good results, with performance scores around 90%.\n- We can see that the feature with the highest impact to determine placement are cgpa, internships and age.","135095f5":"It looks like the majority of students from Computer Science, IT and Electronics and communication got placed.<br>\nSince the situation looks more delicate with mechanical, civil and electrical engineering students, we will carry out chi square tests.","f511ef4b":"# Q8 - Does stream affect placement?","7ce94103":"## Importing the Data","6e581000":"# Q5 - Does 'Hostel' affect the placement? (chi square test)","d2147996":"**This means, that cgpa and placement are not independent with a confidence level of 95%**","e1ce458b":"# How do internship numbers affect job placement?","5ed89d3c":"# Feature Importance to determine job placement","3985b3ca":"- H0: backlogs and placement are independent <br>\n- H1: backlogs and placement are not independent","799ac936":"It is not clear if backlogs and placed are independent, we will carry out a chi square test to check it !","cd0f4bee":"And the other columns will be transformed into lowercase","c7b9c956":"We will rename some of these streams to improve the readability of the following plots.","f5b13689":"**We can see that overall the majority of students is male for every Stream.**","af36dcbd":"## Train - Validation split","b904e1f2":"For both XGBoost and CATboost we achieve good results, with performance scores around 90%.","37a73ab6":"# XGBOOST CLASSIFIER","cf915da1":"**The p-value is close to 0.05, so it means that age and the number of internships are somewhat dependent. Lowering the confidence interval would lead to a 'dependence' between the variables.**","02fe19b7":"It is not clear if hostel and placed are independent, we will carry out a chi square test to check it !","d3264ecf":"**The p-value is well above 5% (around 22.4%), so we fail to state statistical difference between job placement = 0 or 1 among Mechanical Engineers.<br>**","cfd5c50b":"In the following we will carry out a chi square test to test if gender and placed are independent. In other words, we are asking ourselves if placement depends on sex or not.\n","13944ac8":"## Encoding","bc06a25e":"Good, apparently there are no missing values !","2f97a30d":"The test tells us that the data is not normal, what if we would not consider students with an age equal or higher than 25?","69c60eaf":"## Do Civil Engineers get placed less?","21d9d0de":"## Do Mechanical Engineers get placed less?","47e82a65":"In the following, ML algorithms will be trained to predict the placement of students.","94818aa5":"# CATBOOST CLASSIFIER","3b06c7ed":"# Q2 - Does the number internships affect the probability of getting placed? (chi square test)","ed929a09":"# Q9 - Is there a relationship between stream and the other features?","aa5a1cab":"- H0: hostel and placement are independent <br>\n- H1: hostel and placement are not independent","b43eabee":"The p-value is definitely higher than 0.05 (0.752), so at a 95% confidence level we cannot reject the null hypothesis of indipendence between gender and sex.","66667f6b":"**We can see that the feature with the highest impact to determine placement are cgpa, internships and age.**","602c7fbd":"We set a palette to improve the following plots readability: we specify the color to be green if the student got placed (placed=1) and red if placed=0.","a20058b7":"**Also for Electrical Engineers, no difference could be found with a 95% confidence.**","5523eada":"*Thanks for reading my notebook ! Let me know if you have questions or if you want me to check out your works too ! :)*","47462282":"Age looks somewhat normal, we can check its normality though Wilk-Shapiro test!","9114cf5c":"**We can see that Civil and Mechanical are the majors where over 7% of the students have CGPA=9, whereas students from Electrical engineering are those with most CGPA=8 or CGPA=7.**","52f064d0":"**We can conclude that the feature 'hostel' affects the placement. In particular, it looks like that students who didnt live in a college accomodation tended to be placed.**","114b623f":"# How does CGPA affect job placement?","c078cf31":"The plots regarding the cleaned dataset are:","be65f7bc":"- H0: Number of internships and placed are independent <br>\n- H1: Number of internships and placed are not independent","b1b8c28f":"- H0: gender and placement are independent <br>\n- H1: gender and placement are not dependent","3fa1d467":"## Stream VS gender","15899ff1":"# Q7 - Are the number of internships and age independent? (chi square test)\n- H0: Age and internships are independent <br>\n- H1: Age and internships are not independent","544ec430":"We can see that :\n- The P-value is lower than the significance level of 5%, so we can reject the null hypothesis with a confidence of 95%.\n\n- The Test-statistic is inferior than the critical value, so we can reject the null hypothesis with a confidence of 95%.","580c319d":"## Hypothesis testing for categeorical variables indepedence","66685797":"We will remove these outliers.","2af411be":"**It looks like the vast majority of Mechanical Engineers lives in a college accomodation**","7154a805":"By looking at the correlation matrix we can say:\n- Quite high linear positive correlation between placed and CGPA (0.59): students with higher CGPA tends to be placed\n- Small linear positive betwen internships and placed (0.18): students with internships tends to be placed\n\nThe other linear correlations coefficients look somewhat low. Let's investigate more! ","3cb95a95":"# Q1 - Is CGPA independent from placement? (Chi-Square test)","b8c660bf":"\n## Hypothesis testing for categeorical variables indepedence","15aaed79":"Moreover, to simplify further analysis, some columns will be renamed as follows:","68775eae":"These students have very similar features overall. How do they compare to other placed students with similar features?","9ec4b1a7":"The following project focus on the analysis of a dataset containg informations about engineering students.<br>\nThe goal of the project is to determine which factors have a higher impact on job placement.<br>\n\nFirst, Exploratory Data Analysis and Hypothesis Testing will be performed to determine possible relationships between a job placement success and other features. Later, prediction models by CATBOOST and XGBOOST will be developed to predict if a student will be placed or not given some students features.<br>\n\nThe project is structured as follows:<br>\n\n- Exploratory Data Analysis and Hypothesis Testing<br>\n- Data preparation for ML algorithms (encoding, scaling)<br>\n- ML algorithms training<br>\n- Results Summary<br>","bf6fc388":"The dataset has the following columns:\n- Age : Age At The Time Of Final Year \n- Gender : Gender Of Candidate \n- Stream : Engineering Stream That The Candidate Belongs To\n- Internships : Number Of Internships Undertaken During The Course Of Studies, Not Necessarily Related To College Studies Or Stream\n- CGPA : CGPA Till 6th Semester\n- Hostel : Whether Student Lives In College Accomodation\n- HistoryOfBacklogs : Whether Student Ever Had Any Backlogs In Any Subjects\n- PlacedOrNot : Target Variable","419b2fb8":"Indeed it looks like these 7 stuents can be considered as outliers. Also among students with similar features, they result to have a very low cgpa while being still placed. We can remove these students from the dataset.","b8815fc2":"# Q3 - Is gender indepedent from 'placement'? (chi square test)","7a79fdf2":"**Sex and placement are independent with a confidence of 95%.**","b86e0b69":"# Analysis of students with many internships (3 internships)","36837b30":"- Q1 - CGPA and placement are not independent: in particular, CGPA affects a lot placement as it can be seen in the prediction summary\n- Q2 - The number of internships affects placement: in particular, a higher number of internships affects plcament positively.\n- Q3 - Sex and placement are independent.\n- Q4 - Students who did not have historical backlogs tended to be placed.\n- Q5 - Students who did not live in a college accomodation tended to be placed.\n- Q6 - It seems like there is no clear relationship between age and 'placed'.\n- Q7 - Age and the number of internships are somewhat dependent.\n- Q8 - The majority of students from Computer Science, IT and Electronic got placed.\n- Q9 - The major where most students did at least one internship is Computer Science (67%), while for Civil, Electrical and Mechanical engineering more than half of the students did not do any internship. Morevoer, Electronic and IT are the majors where most students did 2 or more internships. Finally, Civil and Mechanical are the majors where over 7% of the students have CGPA=9, whereas students from Electrical engineering are those with most CGPA=8 or CGPA=7.","189f512c":"There are 6 different streams in this dataset, which look somewhat balanced.","7b89a63a":"Moreover, from the boxplots, we can see that students who did 3 internships are labeled as outliers, lets check!","4912868c":"<img src=\"https:\/\/i.imgur.com\/Dfgo5Fq.png\" width=\"1000px\">","72c4489d":"## Train test split","a4f38bfa":"**From the test we conclude that we cannot reject the null hypotheis of independence between backlogs and placement with a confidence of 95%**","343f4664":"## What about Electrical Engineers?","be9bc891":"# Q4 - Does the number of backlogs affect the placement? (chi square test)","c925a0df":"# Data Analysis main results summary dashboard:","89f272f0":"We can conclude that only for Computer Science, IT, Electronics and communication there is a statstical difference between job placement. ","5e3ec8b5":"# ENGINEERING STUDENTS JOB PLACEMENT ANALYSIS AND HYPOTHESIS TESTING","a1b9d626":"Since there is no order\/hierarchy among the categorical features, they will be encoded by One hot encoding (using pd.get_dummies)","5251d31e":"<img src=\"https:\/\/i.imgur.com\/tPApBH1.png\" width=\"800px\">","d09016ad":"We can already get useful information about some features !\n- Age is between 19 and 30\n- Minimum number of internships is 0 (no internships) while the max is 3\n- The majority of students in the dataset did not live in a hostel (Hostel mean is lower than 0.5), \n- The majority of students does not have backlogs (HistoryOfBacklogs mean is lower than 0.5)\n- The majority of students have been placed (PlacedOrNot mean is higher than 0.5)","83fe93f7":"Next, it could be interesting to see who are these students with an age higher than 25, did they apply to jobs this late because they did lots of internships and graduated later?","faa37bb8":"We will then create a new dataframe called df_clean to host a cleaned version of the dataset.","de35bc05":"We start the analysis by checking the linear correlation (Pearson correlation) between the features:","4acfb736":"We can see that :\n- The P-value is lower than the significance level of 5%, so we can reject the null hypothesis with a confidence of 95%.\n\n- The Test-statistic is inferior than the critical value, so we can reject the null hypothesis with a confidence of 95%.","c89fdf20":"**The p-value is higher than 5% (14%), so we fail to state statistical difference between job placement = 0 or 1 among Civil Engineers. It is interesting to notice that the p value is smaller in this case compared to the previous test about mechanical engineering.**","34725c46":"The statistics value increases a little bit, meaning that the distribution is more \"normal\" but still it is not normal at 5% significance level.","94846351":"It looks like that among these 5 students, all of them do not have any historical backlogs, 4 of them are from 'Computer Science, 4 of them have a quite high cgpa,one of them did 3 internships.","2e4a6059":"From these plots we can see that the average CGPA of placed students in higher than the CGPA of not placed students.<br>\nIn particular, from the boxplot we can see that there are some students with a low cgpa (cgpa=5) that still got placed.<br>\nWho are these students?","e1995d08":"We can see that students who had 2 ore more internships tends to be placed.","1b1652ac":"# Data preprocessing"}}