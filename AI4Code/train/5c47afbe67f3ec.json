{"cell_type":{"1587cf10":"code","7628da52":"code","15d23e74":"code","36364467":"code","e090f457":"code","8e4d6f9f":"code","771b7cb2":"code","5704cb50":"code","95896d97":"code","cda50218":"code","b0b97d28":"code","6bfd9992":"code","bad374b6":"code","b3739024":"code","6377ef99":"code","955fb565":"code","26027f59":"code","c9747b97":"code","4b99b2a3":"code","5533b67b":"code","b7629bf9":"code","a769de4e":"code","0723a1b9":"code","bea4b7de":"code","73e1abab":"code","28a75bbc":"code","bad00f61":"code","31531d20":"code","b6cf60b3":"code","fde8f9fe":"code","27248415":"code","8c84236b":"code","5b5af43e":"code","d9ad1982":"code","bab8535d":"code","7a7ca346":"code","dfe3ed1a":"code","8d4d119a":"code","b8b01b13":"code","4b7082e9":"code","9618b662":"code","bbbfab53":"code","cf1b8228":"code","b75b93a7":"code","44d0852e":"code","9e589ab1":"code","7fcf1ca1":"markdown","f12d5309":"markdown","29667106":"markdown","50b6f042":"markdown","f39d31bf":"markdown","316cae82":"markdown","64a95ff8":"markdown","2718d1a6":"markdown","d65f11d9":"markdown","2719bf02":"markdown","2d54406e":"markdown","be7e940f":"markdown","1b72a0a5":"markdown","8f7194d6":"markdown","0849b65a":"markdown","df109afc":"markdown","a6442ec7":"markdown","8494d91f":"markdown","caf39502":"markdown","8416dde5":"markdown","d7d5c034":"markdown","c21d7c55":"markdown","9d960c3c":"markdown","f30544a7":"markdown","e1b59255":"markdown","a65e6241":"markdown","3aba6b4f":"markdown","5a414e83":"markdown","e9d0324c":"markdown","9bb3680c":"markdown","fa567f2c":"markdown","3ea3fc07":"markdown"},"source":{"1587cf10":"# Import libraries\nimport pandas as pd\nimport numpy as np\nimport ast\nimport re\nimport math\n\n# libraries for displaying images\nfrom IPython.display import Image \nfrom IPython.core.display import HTML \n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom plotly.offline import init_notebook_mode, plot, iplot\nimport plotly.graph_objs as go\n\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')","7628da52":"zomato_df = pd.read_csv(r\"..\/input\/zomato-bangalore-restaurants\/zomato.csv\", encoding='utf-8')","15d23e74":"zomato_df.info()","36364467":"zomato_df = zomato_df.drop_duplicates(subset=['address', 'name']).reset_index().drop('index', axis=1)","e090f457":"zomato_df.head()","8e4d6f9f":"histo = zomato_df.groupby('name')['address'].count()\n# Lets take the top 50 restaurants and visualize in plot bar graph\nhisto = histo.sort_values()[-50:]","771b7cb2":"ax = histo.plot(kind='bar', figsize=(20, 8), rot=90, width = 0.8, color=[ 'blue'])\nrects = ax.patches\nlabels = list(histo)\nfor rect, label in zip(rects, labels):\n    height = rect.get_height()\n    ax.text(rect.get_x() + rect.get_width() \/ 2, height + 1, label,\n            ha='center', va='bottom', fontsize=14)\nax.tick_params(top='off', bottom='off', left='off', right='off', labelleft='off', labelbottom='on') # remove borders\nax.xaxis.set_tick_params(labelsize=15) # set xticks as 14\nax.legend(fontsize=14) # set legend sie as 14\nax.set_title('No of restaurants', fontsize=16) # set title and add font size as 16\nax.set_xlabel('Restaurant Name', fontsize=16)\n#ax.grid(False)  # remove grid\nax.set_facecolor(\"white\") # set bg color white\nax.legend(['#Restaurants'])","5704cb50":"histo = zomato_df.groupby('location')['url'].count().sort_values(ascending=False)[:50]\nax = histo.plot(kind='bar', figsize=(20, 8), rot=90, width = 0.8, color=[ 'blue'])\nrects = ax.patches\nlabels = list(histo)\nfor rect, label in zip(rects, labels):\n    height = rect.get_height()\n    ax.text(rect.get_x() + rect.get_width() \/ 2, height + .05, label,\n            ha='center', va='bottom', fontsize=10)\nax.tick_params(top='off', bottom='off', left='off', right='off', labelleft='off', labelbottom='on') # remove borders\nax.xaxis.set_tick_params(labelsize=15) # set xticks as 14\nax.legend(fontsize=14) # set legend sie as 14\nax.set_title('No of restaurants', fontsize=16) # set title and add font size as 16\nax.set_xlabel('Neighborhood', fontsize=16)\n#ax.grid(False)  # remove grid\nax.set_facecolor(\"white\") # set bg color white\nax.legend(['#Restaurants'])","95896d97":"total = zomato_df.groupby('location')['url'].count().sort_values(ascending=False)[:50]\npercent = (zomato_df.groupby('location')['url'].count().sort_values(ascending=False)[:50]\/zomato_df.shape[0]).sort_values(ascending=False)\nloction_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nloction_data.sort_values(ascending=False,by= ['Percent'])[:20]","cda50218":"types = set()\ndef func(x):\n    if(type(x) == list):\n        print(x)\n        for y in x:\n            types.add(y.strip())\n_ = zomato_df['rest_type'].str.split(',').apply(func)","b0b97d28":"column_names = list(types)\n# instantiate the dataframe\nneighborhood = pd.DataFrame(columns=column_names)\nneighborhood","6bfd9992":"neighborhood['neighborhood'] = zomato_df.groupby('location').groups.keys()\nneighborhood = neighborhood.set_index('neighborhood').fillna(0)\n#neighborhood","bad374b6":"i=0\nfor i in range(0,len(zomato_df)):\n    for x in types:\n        if type(zomato_df.loc[i, 'rest_type']) == str and x in zomato_df.loc[i, 'rest_type']:\n            neighborhood.loc[zomato_df.loc[i, 'location'], x] = neighborhood.loc[zomato_df.loc[i, 'location'], x]+1","b3739024":"neighborhood","6377ef99":"dfs = neighborhood.reset_index().melt('neighborhood', var_name='cols',  value_name='vals')","955fb565":"plt.figure(figsize=(15,20))\nax = sns.swarmplot(x=\"vals\", y=\"cols\", data=dfs)\nax.set_xlabel('Number of restaurant', fontsize=16)\nax.set_ylabel('Type of restaurant', fontsize=16)\nax.set_title('Distribution of different types of restaurant')\nplt.savefig(\"swarm.png\")","26027f59":"types = set()\ndef func(x):\n    if(type(x) == list):\n        for y in x:\n            types.add(y.strip())\n_ = zomato_df['cuisines'].str.split(',').apply(func)","c9747b97":"column_names = list(types)\nneighborhood_cns = pd.DataFrame(columns=column_names)\nneighborhood_cns","4b99b2a3":"neighborhood_cns['neighborhood'] = zomato_df.groupby('location').groups.keys()\nneighborhood_cns = neighborhood_cns.set_index('neighborhood').fillna(0)\n#neighborhood_cns","5533b67b":"i=0\nfor i in range(0,len(zomato_df)):\n    for x in types:\n        if type(zomato_df.loc[i, 'cuisines']) == str and x in zomato_df.loc[i, 'cuisines']:\n            neighborhood_cns.loc[zomato_df.loc[i, 'location'], x] = neighborhood_cns.loc[zomato_df.loc[i, 'location'], x]+1","b7629bf9":"neighborhood_cns","a769de4e":"plt.figure(figsize=(30,30))\nsns.heatmap(neighborhood_cns,cmap=\"BuPu\")","0723a1b9":"Cuisine_data = pd.DataFrame(neighborhood_cns.sum(axis=0))\nCuisine_data.reset_index(inplace=True)\nCuisine_data.columns = ['Cuisines', 'Number of Resturants']\nTop15= (Cuisine_data.sort_values(['Number of Resturants'],ascending=False)).head(15)\nsns.set(rc={'figure.figsize':(11.7,8.27)})\nsns.barplot(Top15['Cuisines'], Top15['Number of Resturants'])\nplt.xlabel('Cuisines', fontsize=20)\nplt.ylabel('Number of Resturants', fontsize=20)\nplt.title('Top 15 Cuisines on Zomato', fontsize=30)\nplt.xticks(rotation = 90)\nplt.show()","bea4b7de":"listed = zomato_df['listed_in(type)'].unique()\ncolumn_names = list(listed)\n# instantiate the dataframe\nneighborhood_lst = pd.DataFrame(columns=column_names)\nneighborhood_lst","73e1abab":"neighborhood_lst['neighborhood'] = zomato_df.groupby('location').groups.keys()\nneighborhood_lst = neighborhood_lst.set_index('neighborhood').fillna(0)\n#neighborhood_lst","28a75bbc":"i=0\nfor i in range(0,len(zomato_df)):\n    for x in listed:\n        if type(zomato_df.loc[i, 'listed_in(type)']) == str and x in zomato_df.loc[i, 'listed_in(type)'] and type(zomato_df.loc[i, 'location']) == str:\n            neighborhood_lst.loc[zomato_df.loc[i, 'location'], x] = neighborhood_lst.loc[zomato_df.loc[i, 'location'], x]+1","bad00f61":"neighborhood_lst","31531d20":"category = neighborhood_lst.columns\nfig, ax = plt.subplots(nrows=4, ncols=2, figsize = (25,25))\nfig.delaxes(ax[3,1])\n\nplt.subplots_adjust(wspace=0.2, hspace=0.5)\nax = ax.flatten()\n\nfor i in range(0,len(category)):\n    d= neighborhood_lst[[category[i]]].sort_values(by=category[i], ascending=False).head()\n    d.plot(ax=ax[i],kind='bar')\n    ax[i].set_title(category[i])\n    ax[i].set_xticklabels(d.index, rotation='vertical')\n    \nplt.show()","b6cf60b3":"zomato_df['approx_cost(for two people)'] = zomato_df['approx_cost(for two people)'].str.replace(\",\",\"\").astype(float)","fde8f9fe":"#choosen neighbourhood which has more than fifty restaurant\nabove_50 = zomato_df.groupby('location')['url'].count()[zomato_df.groupby('location')['url'].count() >= 50].index","27248415":"zomato_df[zomato_df['location'].isin(above_50)].groupby('location')['approx_cost(for two people)'].mean().sort_values(ascending= False)","8c84236b":"bins = pd.IntervalIndex.from_tuples([(0, 500), (501, 1000), (1001, 2000), (2001, 3000), (3001, 4000), (4001, 5000), (5001, 6000)])\nzomato_df['cost_cat'] = pd.cut(zomato_df['approx_cost(for two people)'], bins)","5b5af43e":"zomato_df['rate'] = zomato_df['rate'].str.split('\/').str[0]\nzomato_df.loc[zomato_df['rate']==\"NEW\", 'rate'] = np.nan\nzomato_df.loc[zomato_df['rate']==\"-\", 'rate'] = np.nan\nzomato_df['rate'] = zomato_df['rate'].astype('float')","d9ad1982":"plt.figure(figsize=(15,15))\nax = sns.boxplot(x=\"cost_cat\", y=\"rate\", data=zomato_df)\nax.set_xlabel('Cost', fontsize=16)\nax.set_ylabel('Rating', fontsize=16)\nax.set_title('Price and Distribution')\nplt.savefig(\"box.png\")\nzomato_df.drop('cost_cat', axis=1, inplace=True)","bab8535d":"bins = pd.IntervalIndex.from_tuples([(0, 250),(251, 500), (501, 750),(751, 1000),(1001, 1500), (1501, 2000), (2001, 3000), (3001, 4000), (4001, 5000), (5001, 6000)])\nzomato_df['cost_cat'] = pd.cut(zomato_df['approx_cost(for two people)'], bins)","7a7ca346":"plt.figure(figsize=(15,15))\nax = sns.boxplot(x=\"cost_cat\", y=\"rate\", data=zomato_df)\nax.set_xlabel('Cost', fontsize=16)\nax.set_ylabel('Rating', fontsize=16)\nax.set_title('Price and Distribution')\nplt.savefig(\"box.png\")\nzomato_df.drop('cost_cat', axis=1, inplace=True)","dfe3ed1a":"data = [\n    go.Scatter(x = zomato_df['approx_cost(for two people)'],\n              y = zomato_df['rate'],\n              mode = \"markers\",\n               text = zomato_df['name'],\n               marker = dict(opacity = 0.7,\n                            size = 10,\n                            color = zomato_df['rate'], #Set color equalivant to rating\n                            colorscale= 'Viridis',\n                            showscale=True,\n                             maxdisplayed=2500,\n                            ),\n                hoverinfo=\"text+x+y\",\n              )\n]\nlayout = go.Layout(autosize=True,\n                   xaxis=dict(title=\"Average Cost of Two (INR)\",\n                             #titlefont=dict(size=20,),\n                             #tickmode=\"linear\",\n                             ),\n                   yaxis=dict(title=\"Rating\",\n                             #titlefont=dict(size=17,),\n                             ),\n                  )\niplot(dict(data=data, layout=layout))","8d4d119a":"zomato_df['reviews_list'] =  zomato_df['reviews_list'].apply(ast.literal_eval)","b8b01b13":"ind = zomato_df[zomato_df['reviews_list']!=\"[]\"].index\nfor i in ind:\n    review_list = []\n    for review in zomato_df.loc[i,'reviews_list']:\n        if(review[0]!=None and float(review[0].replace('Rated ',''))>=0):\n            review_list.append(float(review[0].replace('Rated ','')))\n    #zomato_df.loc[i,'total_review'] = sum(review_list)\n    #zomato_df.loc[i,'count_review'] = len(review_list)\n    if(len(review_list)>0):\n        zomato_df.loc[i,'avg_review'] = sum(review_list)\/len(review_list)  #calulated the average rating of each restaurant","4b7082e9":"rest_review = zomato_df.groupby('name')['avg_review'].sum().round().sort_values(ascending=False)\nrest_review.head()","9618b662":"rest_review_above_50 = zomato_df.groupby('name')['avg_review'].sum().round().sort_values(ascending=False)[:50]\nax = rest_review_above_50.plot(kind='bar', figsize=(20, 8), rot=90, width = 0.8, color=[ 'blue'])\nrects = ax.patches\nlabels = list(rest_review_above_50)\nfor rect, label in zip(rects, labels):\n    height = rect.get_height()\n    ax.text(rect.get_x() + rect.get_width() \/ 2, height + .05, label,\n            ha='center', va='bottom', fontsize=10)\nax.tick_params(top='off', bottom='off', left='off', right='off', labelleft='off', labelbottom='on') # remove borders\nax.xaxis.set_tick_params(labelsize=15) # set xticks as 14\nax.legend(fontsize=14) # set legend sie as 14\nax.set_title('Ranked on Reviews', fontsize=16) # set title and add font size as 16\nax.set_xlabel('Restaurant', fontsize=16)\n#ax.grid(False)  # remove grid\nax.set_facecolor(\"white\") # set bg color white\nax.legend(['#Restaurants'])","bbbfab53":"#NLP Libraries\nimport spacy\nfrom spacy.lang.en.stop_words import STOP_WORDS\nnlp = spacy.load('en')\nfrom collections import Counter\nfrom nltk.sentiment.vader import SentimentIntensityAnalyzer\nfrom spacy.tokens import Doc\n\nfrom tqdm import tqdm","cf1b8228":"sent_analyzer = SentimentIntensityAnalyzer()\n\ndef sentiment_scores(docx):\n    return sent_analyzer.polarity_scores(docx.text)\n\nDoc.set_extension(\"sentimenter\",getter=sentiment_scores)","b75b93a7":"ind = zomato_df[zomato_df['reviews_list']!=\"[]\"].index\nfor i in tqdm(range(20)):#ind\n    review_list = []\n    pos_score = []\n    neg_score = []\n    for review in zomato_df.loc[i,'reviews_list']:\n        if(review[0]!=None and float(review[0].replace('Rated ',''))>=0):\n            comment = nlp(str(review[1]))\n            verbs = [ word for word in comment if word.is_stop == False and not word.is_punct and (word.pos_ == 'VERB'or word.pos_ == 'ADJ')]\n            values  = ' '.join(str(v) for v in verbs)\n            pos_score.append(nlp(values)._.sentimenter['pos'])\n            neg_score.append(nlp(values)._.sentimenter['neg'])\n    if(len(pos_score)>0):\n        #zomato_df.loc[i,'pos_score'] = sum(pos_score)\/len(pos_score)\n        #zomato_df.loc[i,'neg_score'] = sum(neg_score)\/len(neg_score)\n        zomato_df.loc[i,'sent_score'] = (sum(pos_score)\/len(pos_score))-(sum(neg_score)\/len(neg_score)) #overall rating of feedback","44d0852e":"rest_review_above_50 = zomato_df.groupby('name')['sent_score'].sum().round().sort_values(ascending=False)[:50]\nax = rest_review_above_50.plot(kind='bar', figsize=(20, 8), rot=90, width = 0.8, color=[ 'blue'])\nrects = ax.patches\nlabels = list(rest_review_above_50)\nfor rect, label in zip(rects, labels):\n    height = rect.get_height()\n    ax.text(rect.get_x() + rect.get_width() \/ 2, height + .05, label,\n            ha='center', va='bottom', fontsize=10)\nax.tick_params(top='off', bottom='off', left='off', right='off', labelleft='off', labelbottom='on') # remove borders\nax.xaxis.set_tick_params(labelsize=15) # set xticks as 14\nax.legend(fontsize=14) # set legend sie as 14\nax.set_title('Ranked on Reviews feadback', fontsize=16) # set title and add font size as 16\nax.set_xlabel('Restaurant', fontsize=16)\n#ax.grid(False)  # remove grid\nax.set_facecolor(\"white\") # set bg color white\nax.legend(['#Restaurants'])","9e589ab1":"\nfrom IPython.display import Image\nImage(\"..\/input\/images\/sentiment.png\")","7fcf1ca1":"As clearly indicated, 7% of restaurant are in Whitefield\nand comes next 5% of restaurant are in Electronic City, BTM, Marthahalli and HSR .\nIndicates zomato is serving their customers high in above neighbourhoods.","f12d5309":"As you can see Cafe coffee day,Domino's,Just Bake & Pizza Hut has the most number of outlets in and around bangalore.","29667106":"Sample Bar chart generated with minimal data rows","50b6f042":"Furthur ,the cost are visualized with smaller bins","f39d31bf":"Whitefield has more number of Buffet , Delivery and Dine-out\n\nkoramangala has more Pubs & bars\n\nIndira nagar has more Caffes","316cae82":"Now we can analyse how the rating are influencin the cost","64a95ff8":"We can see that Quick bites, Casual Dining, Delivery restaurant are more in number in the city.\nDesert Parlour, Takeaway , Cafe are also available in all the nieghbourhood.\nFood truck , Dhabha and Meat shop are less in number .","2718d1a6":"We will analyses customer individual review rating(not using the review comment, we will explore the review commnet using sentiment analysis on next)on that restaurant .","d65f11d9":"**2.\tHelp the client to discover a competitive price to attract customers ?**","2719bf02":"** Sentimental analysis**\n\nOn customer's review feeback in the comments","2d54406e":"\n**Getting Basic Ideas of Data**","be7e940f":"Based on the reviews , \nCafe cofee Day is ranked first though they have more outlet in the city , the customer reviewed it high almost on the outlet.\nNext Pizza Hut and Faasos get the customer preference.\nThe restaurant with one or less outlets are ranked lower , less customer base when compared to the chain of restuarants.","1b72a0a5":"From the above box-plot, we could figure out that if our restaurtant to high rated( > 4) then our price should be above Rs.750.\n","8f7194d6":"No doubt, indian Cuisine dominate most of the restaurant,\nSecondly influenced by chinese cuisines.","0849b65a":"Now , we will explore which are restaurant which has more outlets in Bnagalore","df109afc":"Explore types of restaurant in each locality","a6442ec7":"As seen in above chart , Whitefield , Electronic City , BTM , HSR ad Marathahalli has more number of restaurant .\nWe can conclude that these neigbhourhood are highly populated.","8494d91f":"Extracting the review rating from list of reviews of each restaurant.","caf39502":"Its is evident, price increases the average rating of restaurants also increase.\n\nLinear relation exhibited between rating and price .\nAs the price goes high the quality and ambience of the restaurant are maintained better.","8416dde5":"**\nLoading libraries **","d7d5c034":"**Exploratory Data Analysis**\n\n**1.\tWhat is the best location in bangalore to open a restaurant? Why?**\n\n","c21d7c55":"Average cost spend in the restaurant is displayed in above table.\n\nSo, Competitive price for location-wise would be around the average cost of that location.\nWe can't have single competitive price range for the whole city because the cost is influenced by real-estate, commutate goods and other factors too.\n\nHigher cost of food means posche area. Mostly restaurants are located in  Lavelle Road, MG Road, Residency road are costly.","9d960c3c":"With our Analysis,\n\n1. Client plans to open a restaurant in a neigbourhood then he could get the complete restaurant type and cusines already established  in that neigbourhood. Client can go with most trended restaurant culture in the choosen locality.To experiment with new trend , he has all the data.\n\n2. Client has already hired or plan to hire a chef with good experience in particular cusine , then he could choose the neighbourhood which has more demand for that cusine.\n\n3. Client has already experience with a restaurant type , our analysis will be useful for him to get the fauvorable locaity to open his restaurant business.\n\n","f30544a7":"Below I have got all the review feedback from the customer.\n\nCleaned the review by eliminating the stop words and punctuation.\n\nTokenized into words which contribute more to the sentiments of the customer.\n\nUsed nltk to get the sentiment of customer review both postive and negative ratio.\n\n\n**Note**: Below cells would take longer compuatational time to execute as the we have more nlp text word with our review feature of customer. I have not used the entire dataset , minimized to 5000 rows and examined.\n","e1b59255":"We will analyse, how much each neighbourhood contribute to Bangalore City restaurants ","a65e6241":"Now we will explore each neighbourhood has how many restaurant in teh city","3aba6b4f":">**Data Cleaning** \n\nDuplicate rows of restaurant are found in the dataset , droping duplicate rows based on address and name ","5a414e83":"Neighborhoods by Types Of Restaurant","e9d0324c":"How Cusines are influenced in each Neighbourhood","9bb3680c":"**3.\tCreate a Machine Learning model for them that would look at the reviews posted by their customers and tell them their ranking in the city.**","fa567f2c":"Segragate the neighborhoods by cost of food","3ea3fc07":"Delivery and Dine-Out are spread across all the Neighbourhood."}}