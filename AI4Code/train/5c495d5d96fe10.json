{"cell_type":{"516abc51":"code","5a61ea32":"code","ed9fed52":"code","0c4eb228":"code","933510fe":"code","5aaf834b":"code","8c4c822c":"code","6196910a":"markdown","0e610e3b":"markdown","6f221d99":"markdown","f6b36097":"markdown","1008728f":"markdown","dd999dbc":"markdown","cdb1a553":"markdown"},"source":{"516abc51":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport pandas as pd\nimport geopandas\nimport matplotlib.pyplot as plt\n#import folium\n#from folium import plugins\n\n# Se carga el shapefile de los pol\u00edgonos base de los partidos de la cuenca del rio Luj\u00e1n\n\ncuencalj_partidos = geopandas.read_file(\"..\/input\/cuencariolujan\/cuenca_lj.shp\")\n\nprint(\"Proyecci\u00f3n: \", cuencalj_partidos.crs) # se muestra el sistema del proyecci\u00f3n del mapa\n\nprint(\"Bounding Box: \", cuencalj_partidos.total_bounds) # muestra el bounding box\n\nprint(\"Datos base: \", cuencalj_partidos.info)  \n\ncuencalj_partidos.plot(figsize=(20, 10))\n","5a61ea32":"# Al geodaframe cuencalj_partidos le vamos a agregar una nueva serie de atributos,\n# que ser\u00e1n traidos del archivo cuenca-agua-cloacas-2017.cvs.\n# Como las dos estructuras de datos comparten el atributo \"partido\" se realizar\u00e1\n# una operaci\u00f3n de fusi\u00f3n \"merge\" \n\ncloacas = pd.read_csv(\"..\/input\/cuencariolujan\/cuenca-agua-cloacas-2017.csv\", sep=\";\")\nprint(\"Datos base: \", cloacas) \n\n# fusi\u00f3n, se a\u00f1aden a cuencalj_partidos los atributos de cloacas\ncuencalj_partidos = pd.merge(cuencalj_partidos, cloacas, how=\"left\", on = 'partido' )\n\n# borramos un conjunto de columnas que no nos sirven en este momento\ndel cuencalj_partidos['habitantes'] \ndel cuencalj_partidos['SUPERFICIE']\ndel cuencalj_partidos['varcenso10']\ndel cuencalj_partidos['gestion']\n\n# ahora se ve el geodataframe extendido con los dos nuevos atributos\ncuencalj_partidos","ed9fed52":"cuencalj_ejidos = geopandas.read_file(\"..\/input\/cuencariolujan\/ejidos_cuenca_lj.shp\")\n\nprint(\"Proyecci\u00f3n: \", cuencalj_ejidos.crs) # se muestra el sistema del proyecci\u00f3n del mapa\n\nprint(\"Bounding Box: \", cuencalj_ejidos.total_bounds) # muestra el bounding box\n\nprint(\"Datos base: \", cuencalj_ejidos.info()) # muestra el bounding box\n\ncuencalj_ejidos.plot(figsize=(20, 10), color=\"lightblue\")","0c4eb228":"cuencalj_carenciados = geopandas.read_file(\"..\/input\/cuencariolujan\/barrios_carenciados_cuenca_lj.shp\")\n\nprint(\"Proyecci\u00f3n: \", cuencalj_carenciados.crs) # se muestra el sistema del proyecci\u00f3n del mapa\n\nprint(\"Bounding Box: \", cuencalj_carenciados.total_bounds) # muestra el bounding box\n\nprint(\"Datos base: \", cuencalj_carenciados.info()) # muestra el bounding box\n\ncuencalj_carenciados.plot(figsize=(20, 10), color=\"gray\")\n","933510fe":"cuencalj_partidos[\"centroide\"]=cuencalj_partidos.centroid\n\n# se crea el mapa base con la geometr\u00eda de la cuenca - \n# Los colores de los partidos se calculan seg\u00fan su poblaci\u00f3n\n\na = cuencalj_partidos.plot(legend=True, alpha=0.3, cmap = 'Purples', \n                           figsize=(20,14),linewidth=0.5,  edgecolor='black') \n\nb = cuencalj_ejidos[\"geometry\"]   \nc = cuencalj_carenciados[\"geometry\"]\n\n# se agrega al mapa anterior la capa ejidos\nb = b.plot(ax=a, color=\"yellow\", alpha=0.5,    linewidth=0.2,  edgecolor='black') \n\n# se agrega al mapa anterior la capa carenciados\nc = c.plot(ax=b, color=\"gray\",   linewidth=0.2,  edgecolor='black') \n\nc.set(title='Cuenca del R\u00edo Luj\u00e1n', aspect=1.3, facecolor='lightblue')\n\n#  Se leen los nombres se los partidos y se agrega un r\u00f3tulo\nfor i, point in cuencalj_partidos.centroide.iteritems(): \n    reg_n = cuencalj_partidos.loc[i, 'partido']\n    c.text(s=reg_n, x=point.x, y=point.y, fontsize='large', color=\"blue\")\n\n# se graba el mapa en disco\nplt.savefig('cuenca.jpg')\n    \nc","5aaf834b":"fig, ax = plt.subplots(1, 1) \n\ncuencalj_partidos.plot(column='por_no_clocas',  ax=ax, legend=True)","8c4c822c":"# Graficaci\u00f3n del nivel de desarrollo de la red de clocas por partido\n# Se muestra el porcentaje de hogares que NO tienen clocas\n\n# subplot va a permitir trabajar con varios mapas o partes de un gr\u00e1fico\n# el m\u00e9todo subplot devuelve una tupla que contiene un objeto figura y otro objeto  eje.2\n# Tener fig es \u00fatil si quiere cambiar los atributos a nivel de figura o guardar la figura \n# como un archivo de imagen (con fig.savefig('archimg.png')). Con figsize se define el\n# tama\u00f1o del mapa, ancho y alto en pulgadas. \n\nfig, ax = plt.subplots(1, 1, figsize=(20,15)) \n\n# Se pueden definir los ejes del gr\u00e1fico (con ax) y los ejes de la leyenda (con cax) y \n# luego pasarlos a la llamada a plot(). Vamos a alinear verticalmente los ejes del \n# gr\u00e1fico y los ejes de la leyenda, divisor para justar visualmente la barra\n\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\ndivisor = make_axes_locatable(ax)\ncax = divisor.append_axes(\"right\", size=\"5%\", pad=0.1)\n\n# se  inserta el t\u00edtulo al gr\u00e1fico\n\nfig.suptitle(\"Cuenca del R\u00edo Luj\u00e1n - Porcentaje de hogares sin cloacas\", fontsize=22,)\nfig.subplots_adjust(top=1) # ajusta el alto del \u00e1rea de tpitulo\n\n# se genera el mapa\n\nmapa = cuencalj_partidos.plot(column='por_no_clocas',  ax=ax, legend=True, cax=cax)\nmapa.grid() \n\n#  Se leen los nombres de los partidos y se agrega un r\u00f3tulo\n\nfor i, point in cuencalj_partidos.centroide.iteritems(): \n    reg_n = cuencalj_partidos.loc[i, 'partido']\n    mapa.text(s=reg_n, x=point.x, y=point.y, fontsize='large', color=\"black\")\n\n\n","6196910a":"**Carga del archivo shapefile: ejidos urbanos en partidos de la cuenca (ejidos_cuenca_lj.shp)**\n\nSe almacena en el geodataframe \"cuencalj_ejidos\"","0e610e3b":"**Carga del archivo shapefile: barrios carenciados en partidos de la cuenca (barrios_carenciados_cuenca_lj.shp)**\n\nSe almacena en el geodataframe \"cuencalj_ejidos\"","6f221d99":"**Mapa Choropleth** (mapa de coropletas)\n\nEs un apas en los que el color de cada forma se basa en el valor de una variable asociada. S\u00f3lo tiene que utilizar el m\u00e9todo *plot* con el argumento de la columna establecido en la columna cuyos valores desea utilizar para asignar los colores. Veamos ","f6b36097":"**Ejemplos de mapas tem\u00e1ticos** \n\nTenemos tres geodataframes con distintas geometr\u00edas y datos asociados\n\n* cuencalj_partidos - delimitaci\u00f3n de partidos y datos sociodemogr\u00e1ficos\n* cuencalj_ejidos - delimitaci\u00f3n de ejidos\n* cuencalj_carenciado - delimitaci\u00f3n de barrios carenciados\n\nLos datos geogr\u00e1ficos de los tres dataframes pueden verse en el mapa anterior con las tres capas de informaci\u00f3n superpuestas.","1008728f":"**Se superponen los tres geodataframes en un \u00fanico mapa**","dd999dbc":"**Carga del archivo shapefile: partidos de la cuenca (cuenca_lj.shp)**\n\nSe almacena en el geodataframe \"cuencalj_partidos\"","cdb1a553":"# An\u00e1lisis b\u00e1sico preliminar de la cuenca del R\u00edo Luj\u00e1n\n\n**Se usan 3 shapefiles y 4 archivos de datos cvs**"}}