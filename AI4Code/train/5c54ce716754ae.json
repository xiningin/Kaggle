{"cell_type":{"a7d8be0f":"code","8f2c20ef":"code","e798df6e":"code","c99cc4f0":"code","c95d9d33":"code","d38269a5":"code","d871ff1b":"code","081c8c4c":"code","70d922e7":"code","e458dbfa":"code","8bdec6fd":"code","c9b8e0b7":"code","5031b5b2":"code","4e40fbd2":"code","b488786e":"code","6982cf04":"code","e88da4d2":"code","8023031d":"code","e554747d":"code","2bb81351":"code","bb9e588f":"code","9d1941fc":"code","c623c658":"code","a851c847":"code","2b046113":"markdown","4802a432":"markdown","9bbb3b1a":"markdown","64c488d7":"markdown","595cbbbe":"markdown","fac06e46":"markdown","458c03bb":"markdown","7abe7474":"markdown","b361e3b5":"markdown"},"source":{"a7d8be0f":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport geopandas as gpd\nfrom geopandas import GeoDataFrame\nfrom shapely.geometry import Point,Polygon\n\nimport folium\nfrom folium import Choropleth, Circle, Marker\nfrom folium.plugins import HeatMap, MarkerCluster\n\nimport requests ","8f2c20ef":"URL = \"https:\/\/coronavirus-tracker-api.herokuapp.com\/v2\/locations\"","e798df6e":"# sending get request and saving the response as response object \nr = requests.get(url = URL) \n\n# extracting data in json format \ndata = r.json() ","c99cc4f0":"asian_countries = [ 'Afghanistan', 'Armenia', 'Azerbaijan', 'Bahrain', 'Bangladesh', 'Bhutan, Brunei', 'Burma,Cambodia',\n                   'China', 'East Timor', 'Georgia', 'Hong Kong','India', 'Indonesia', 'Iran', 'Iraq','Israel', 'Japan', \n                   'Jordan', 'Kazakhstan', 'Kuwait', 'Kyrgyzstan', 'Laos', 'Lebanon', 'Malaysia', 'Mongolia', 'Nepal', \n                   'North Korea', 'Oman', 'Pakistan', 'Papua New Guinea', 'Philippines', 'Qatar', 'Russia', \n                   'Saudi Arabia', 'Singapore', 'South Korea', 'Sri Lanka', 'Syria', 'Taiwan', 'Tajikistan', \n                   'Thailand', 'Turkey', 'Turkmenistan', 'United Arab Emirates', 'Uzbekistan', 'Vietnam', 'Yemen']","c95d9d33":"south_asian = ['Sri Lanka', 'India', 'Bangladesh', 'Bhutan', 'Nepal', 'Pakistan','Maldives']\nempty_list = []","d38269a5":"coordintes_confirmed = []\nfor values in data['locations']:\n    country = values['country']\n    latitude = float((values['coordinates'])['latitude'])\n    longitude = float((values['coordinates'])['longitude'])\n    confirmed = int((values['latest'])['confirmed'])\n    coordintes_confirmed.append((country,latitude,longitude,confirmed))","d871ff1b":"world_frame = pd.DataFrame(coordintes_confirmed, columns=['Country', 'Latitude', 'Longitude', 'Confired_Cases'])","081c8c4c":"world_frame","70d922e7":"world_frame = world_frame.reindex(world_frame.index.repeat(world_frame.Confired_Cases))","e458dbfa":"world_frame_ = world_frame.copy()","8bdec6fd":"nepal_frame = world_frame[world_frame.Country == 'Nepal']","c9b8e0b7":"world_frame.head()","5031b5b2":"geometry = [Point(xy) for xy in zip(world_frame.Latitude, world_frame.Longitude)]\nworld_frame = world_frame.drop(['Latitude','Longitude', 'Confired_Cases'], axis = 1)\ncrs = {'init' : 'epsg:4326'}\ngdf_world = GeoDataFrame(world_frame, crs=crs, geometry=geometry)","4e40fbd2":"gdf_world.head(2)","b488786e":"gdf_world_indexed = gdf_world.set_index('Country')","6982cf04":"plot_dict = gdf_world.Country.value_counts()\nplot_dict.head()","e88da4d2":"#read world map shape file\nworld = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))","8023031d":"nepal = world.loc[world['name'].isin(['Nepal'])]\nnepal['geometry']","e554747d":"ax = nepal.plot(figsize=(10,10), color='None', edgecolor='gainsboro')","2bb81351":"#m_1 = folium.Map(location=[25.0376,76.4563],tiles='cartodbpositron', zoom_start=8)\n\n\n# Add a choropleth map to the base map\n#Choropleth(geo_data=gdf_world_indexed.__geo_interface__, \n  #         data=plot_dict, \n   #        key_on=\"feature.id\", \n    #       fill_color='YlGnBu', \n     #      legend_name='World CoronaVirus Confirmed Case'\n      #    ).add_to(m_1)\n\n# Display the map#\n#m_1","bb9e588f":"# Create a base map\nm_2 = folium.Map(location=[25.0376,76.4563], tiles='openstreetmap', zoom_start=2)\n\n# Add a heatmap to the base map\nHeatMap(data=world_frame_[['Latitude', 'Longitude']], radius=10).add_to(m_2)\n\n# Display the map\nm_2","9d1941fc":"m_2","c623c658":"#import math","a851c847":"#m_3 = folium.Map(location=[25.0376,76.4563], tiles='openstreetmap', zoom_start=3)\n\n# Add points to the map\n#mc = MarkerCluster()\n#for idx, row in world_frame_.iterrows():\n#    if not math.isnan(row['Longitude']) and not math.isnan(row['Latitude']):\n#        mc.add_child(Marker([row['Longitude'], row['Latitude']]))\n#m_3.add_child(mc)\n\n# Display the map\n#m_3","2b046113":"**Convert DataFrame to GeoDataFrame**","4802a432":"**Plotting Nepal **","9bbb3b1a":"**Count No of Confirmed in each Country**","64c488d7":"**MarkerCluster HeatMap**","595cbbbe":"**Make Pandas DataFrame from the list**","fac06e46":"**HeatMap World**","458c03bb":"****SouthAsia Map Follium: Memory Heavvy**","7abe7474":"**World CoronaData**","b361e3b5":"**Preprocessing for Choropleth maps**"}}