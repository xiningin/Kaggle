{"cell_type":{"a10189a5":"code","3ccc14b3":"code","173df8c5":"code","07027e52":"code","a9f2a06d":"code","f15b4eae":"code","15bdc62f":"code","c2d5d29d":"code","09299dde":"code","bb3b4d09":"code","c9236d22":"code","5961bbf5":"code","1d6eeb9d":"code","21f50167":"code","cce57244":"code","a55e4520":"code","22c5f65a":"code","cb75c237":"code","e9da2036":"code","281531e6":"code","7dae7cdf":"code","021887b8":"code","3daf6391":"code","5b644324":"code","3f8f184a":"code","ec3eee85":"code","9e49eb46":"code","87426a44":"code","8815a126":"code","6e0aca78":"code","04a1c9be":"code","9de9ee44":"code","f7bd372a":"code","51e8bbb4":"code","9aa795a4":"code","0c87d55e":"code","dbd1a7a4":"code","9cbc7541":"code","9ab1087a":"code","e50ba6d2":"code","fb64c435":"code","b68423db":"code","60a1a34e":"code","bfef4cc8":"code","926e0ffa":"code","395cad82":"code","509fc00a":"markdown"},"source":{"a10189a5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\nfrom sklearn.ensemble import RandomForestClassifier, VotingClassifier\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import classification_report\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport plotly.express as px\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3ccc14b3":"df_train_test = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\nanswer = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","173df8c5":"df_train_test.isnull().sum()","07027e52":"answer.isnull().sum()","a9f2a06d":"df_train_test","f15b4eae":"df_train_test['Ticket'].nunique() , df_train_test['Cabin'].nunique()","15bdc62f":"df_train_test.drop('Cabin',axis=1,inplace=True)\nanswer.drop('Cabin',axis=1,inplace=True)","c2d5d29d":"plt.figure()\nplt.title('Countplot survived')\nsns.countplot(data = df_train_test, x = 'Survived');","09299dde":"plt.figure()\nplt.title('% survivors per sex')\nsns.barplot(data = df_train_test, y = 'Survived',x ='Sex' , hue='Sex');","bb3b4d09":"plt.figure()\nplt.title('countplot survivors per sex')\nsns.countplot(data = df_train_test, x = 'Survived', hue='Sex');","c9236d22":"df_train_test.info()","5961bbf5":"plt.figure()\nplt.title('Countplot survivors per SibSp')\nsns.countplot(data = df_train_test, x = 'Survived',hue ='SibSp');\nplt.legend(loc='upper right');","1d6eeb9d":"plt.figure()\nplt.title('% survivors per SibSp')\nsns.barplot(data = df_train_test, y = 'Survived',x ='SibSp');","21f50167":"plt.figure()\nplt.title('Count survivors per Parch')\nsns.countplot(data = df_train_test, x = 'Survived',hue ='Parch');\nplt.legend(loc='upper right');","cce57244":"plt.figure()\nplt.title('% survivors per Parch')\nsns.barplot(data = df_train_test, y = 'Survived',x ='Parch');","a55e4520":"plt.figure()\nplt.title('Fare\\'s distribution')\ndf_train_test.Fare.hist(bins=25);","22c5f65a":"#Boxplot for amount's distribution for each class\ndf_train_test.boxplot(by='Sex', column=['Age'],grid=True,figsize=(6,10))\nplt.title('Boxplot Age Distribution per sex')\nplt.suptitle('')\nplt.ylabel('Age')\nplt.xlabel('Sex')\nplt.show()","cb75c237":"plt.figure()\nplt.title('Age distribution')\ndf_train_test.Age.hist(bins=50);","e9da2036":"plt.figure()\nplt.title('Survivor\\'s distribution per Embarked')\nsns.barplot(data = df_train_test, y = 'Survived',x ='Embarked');","281531e6":"df_train_test.columns","7dae7cdf":"df_train_test.head()","021887b8":"#Generating minor feature\ndef cat_age(entry):\n    if entry <= 16:\n        return 1\n    else:\n        return 0","3daf6391":"df_train_test['Age'].fillna(df_train_test['Age'].mean(),inplace=True)\ndf_train_test['Embarked'].fillna('S',inplace=True)\ndf_train_test['Minor'] = df_train_test['Age'].apply(cat_age)\ndf_train_test['ParentsPlusParch'] = df_train_test['SibSp'] + df_train_test['Parch']\ndf_train_test['Has_Family?'] = df_train_test['ParentsPlusParch'].apply(lambda x: 0 if x == 0 else 1)","5b644324":"answer['Age'].fillna(answer['Age'].mean(),inplace=True)\nanswer['Fare'].fillna(answer['Fare'].mean(),inplace=True)\nanswer['Minor'] = answer['Age'].apply(cat_age)\nanswer['ParentsPlusParch'] = answer['SibSp'] + df_train_test['Parch']\nanswer['Has_Family?'] = answer['ParentsPlusParch'].apply(lambda x: 0 if x == 0 else 1)","3f8f184a":"answer.isnull().sum()","ec3eee85":"answer.columns","9e49eb46":"features = ['Pclass', 'Sex', 'Age','Minor',\n'Fare', 'ParentsPlusParch', 'Embarked','Has_Family?']","87426a44":"df_train_test['Pclass'] = df_train_test['Pclass'].astype('str')\nanswer['Pclass'] = answer['Pclass'].astype('str')","8815a126":"train_test = pd.get_dummies(df_train_test[features].copy())\nanswer =  pd.get_dummies(answer[features].copy())","6e0aca78":"train_test.head()","04a1c9be":"X_train, X_test, y_train, y_test = train_test_split(train_test, df_train_test['Survived'],random_state=42)","9de9ee44":"model_lr_linear = LogisticRegression(solver='liblinear').fit(X_train,y_train)\nmodel_lr_l1 = LogisticRegression(solver='liblinear',penalty='l1').fit(X_train,y_train)\nmodel_gb = GaussianNB().fit(X_train,y_train)","f7bd372a":"### Train part (just to see overfitting)\ny_pred_train_lr_linear = model_lr_linear.predict(X_train)\ny_pred_train_lr_l1 = model_lr_l1.predict(X_train)\ny_pred_train_gb = model_gb.predict(X_train)\n\n\n###Test Part\ny_pred_lr_linear = model_lr_linear.predict(X_test)\ny_pred_lr_l1 = model_lr_l1.predict(X_test)\ny_pred_gb = model_gb.predict(X_test)","51e8bbb4":"print('Report Logistic Regression - Linear')\nprint('Train Partition')\nprint(classification_report(y_train,y_pred_train_lr_linear))\nprint('Test Partition')\nprint(classification_report(y_test,y_pred_lr_linear))","9aa795a4":"print('Report Logistic Regression - l1')\nprint('Train Partition')\nprint(classification_report(y_train,y_pred_train_lr_l1))\nprint('Test Partition')\nprint(classification_report(y_test,y_pred_lr_l1))","0c87d55e":"print('Report Gaussian Naive Bayes')\nprint('Train Partition')\nprint(classification_report(y_train,y_pred_train_gb))\nprint('Test Partition')\nprint(classification_report(y_test,y_pred_gb))","dbd1a7a4":"final_model =LogisticRegression(solver='liblinear',penalty='l1').fit(train_test, df_train_test['Survived'])#0.81\ny_pred = final_model.predict(answer)","9cbc7541":"sub= pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')\nsub['Survived'] = y_pred\n#sub.to_csv('submission.csv',index=False)","9ab1087a":"model_cat = RandomForestClassifier(random_state=42,n_estimators=100).fit(X_train,y_train)\ny_pred_train_cat = model_cat.predict(X_train)\n\n###Test Part\ny_pred_cat = model_cat.predict(X_test)","e50ba6d2":"imp = pd.DataFrame({'Feature':X_train.columns, 'Importance': model_cat.feature_importances_})\nprint(imp.sort_values(by=['Importance'],ascending=False))","fb64c435":"plt.figure(figsize=(12,5))\nplt.xticks(range(len(imp)), imp['Feature'])\nplt.xlabel('Feature')\nplt.ylabel('Importance')\nplt.title('Importance das Feature - Titanic')\nplt.bar(range(len(imp)), imp['Importance'])\nplt.xticks(rotation=90);","b68423db":"print('Report RandomForestClassifier')\nprint('Train Partition')\nprint(classification_report(y_train,y_pred_train_cat))\nprint('Test Partition')\nprint(classification_report(y_test,y_pred_cat))","60a1a34e":"y_pred_cat = final_model.predict(answer)","bfef4cc8":"sub= pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')\nsub['Survived'] = y_pred_cat\nsub.to_csv('submission_3.csv',index=False)","926e0ffa":"clf2 = LogisticRegression(solver='liblinear',penalty='l1')\nclf3 = RandomForestClassifier(random_state=42,n_estimators=100)\nclf4 = GaussianNB()\n\neclf1 = VotingClassifier(estimators=[\n        ('lr', clf2), ('rfc', clf3), ('gnb', clf4)],\n                         voting='soft')\n\neclf1.fit(train_test, df_train_test['Survived'])\n\ny_pred_cat_voting = eclf1.predict(answer)","395cad82":"sub['Survived'] = y_pred_cat_voting\nsub.to_csv('submission_voting.csv',index=False)","509fc00a":"# As is known in the case of accidents at sea, women are saved first, then children, then men and finally the captain!"}}