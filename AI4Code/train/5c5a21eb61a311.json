{"cell_type":{"66c43049":"code","3931e069":"code","9ca37d35":"code","a177f4a0":"code","760944d0":"code","c91a58bb":"code","5907c365":"code","6ddf8fb8":"code","d2c09741":"code","9644b056":"code","0423efc2":"code","e7670b71":"code","1b112f7a":"code","f892d666":"code","bb622bc5":"code","42b16904":"code","b392a2c5":"code","01e4448f":"code","fa62c5c4":"code","75057a1b":"code","325f60f4":"code","34a04fb6":"code","09771274":"code","f2d1b7e3":"code","cece74d7":"code","3dbf2653":"code","4f75a13e":"code","34ead3c0":"code","5c9f0d3e":"code","6712b09a":"code","ade3ccba":"code","50b0d397":"code","ae02a4ae":"code","4c1bdeac":"code","b5090e36":"code","1511c387":"code","89ac7948":"code","8f054019":"code","89d696b3":"code","dd54b508":"code","13f895e4":"code","d467f632":"code","ea70facd":"code","88c60dbb":"code","e1641a40":"code","e385d9ca":"code","a261fd70":"code","c0d15309":"code","6d0949b4":"code","e0d4b63e":"code","01b80db6":"markdown"},"source":{"66c43049":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3931e069":"growth_path = '..\/input\/bangladesh-population-growth-ratio\/data-resource_2016_10_24_bangladesh-population-growth-ratio.csv'","9ca37d35":"growth_data = pd.read_csv(growth_path)","a177f4a0":"growth_data.describe()","760944d0":"growth_data","c91a58bb":"growth_data.head()","5907c365":"growth_data.tail()","6ddf8fb8":"growth_data.Male","d2c09741":"import seaborn as sns\nimport matplotlib.pyplot as plt\nplt.figure(figsize=(16,6))\nplt.title(\"Growth rate of population in Bangladesh from 1971 to 2016\")\nsns.lineplot(data = growth_data)\n","9644b056":"growth_data = pd.read_csv(growth_path,index_col = \"Year\")","0423efc2":"plt.figure(figsize=(30,10))\nplt.title(\"Increase in Population of Bangladesh from 1971 to 2016\")\nsns.barplot(x = growth_data.index, y = growth_data['Population'])\nplt.ylabel(\"Polulation in Bangladesh\")","e7670b71":"plt.figure(figsize=(30,10))\nplt.title(\"Increase in Population of Bangladesh from 1971 to 2016\")\nsns.heatmap(data = growth_data,annot = True)\nplt.ylabel(\"Polulation in Bangladesh\")","1b112f7a":"plt.figure(figsize=(30,10))\nplt.title(\"Increase in Population of Bangladesh from 1971 to 2016\")\nsns.barplot(x = growth_data.index, y = growth_data['Male'])\nplt.ylabel(\"Polulation of Male in Bangladesh\")","f892d666":"plt.figure(figsize=(30,10))\nplt.title(\"Increase in Population of Bangladesh from 1971 to 2016\")\nsns.barplot(x = growth_data.index, y = growth_data['Female'])\nplt.ylabel(\"Polulation of Female in Bangladesh\")","bb622bc5":"sns.scatterplot(x = growth_data.index,y = growth_data['Population'])","42b16904":"sns.regplot(x = growth_data.index,y = growth_data['Population'])","b392a2c5":"sns.scatterplot(x = growth_data.index,y = growth_data['Population'],hue = growth_data['Male'])","01e4448f":"sns.scatterplot(x = growth_data.index,y = growth_data['Population'],hue = growth_data['Female'])","fa62c5c4":"sns.swarmplot(x = growth_data.index,y = growth_data['Population'])","75057a1b":"growth_data.columns","325f60f4":"growth_data","34a04fb6":"# Histogram \nsns.distplot(a=growth_data['Population'], kde=False)","09771274":"# Histogram \nsns.distplot(a=growth_data['Male'], kde=False)","f2d1b7e3":"# KDE plot \nsns.kdeplot(data=growth_data['Population'], shade=True)","cece74d7":"growth_data.columns\n","3dbf2653":"y = growth_data.Population","4f75a13e":"feature_names = ['Male','Female']","34ead3c0":"X = growth_data[feature_names]","5c9f0d3e":"X.describe()","6712b09a":"X.head()","ade3ccba":"from sklearn.tree import DecisionTreeRegressor\ngrowth_model = DecisionTreeRegressor(random_state =1)\ngrowth_model.fit(X,y)","50b0d397":"predictions = growth_model.predict(X)\nprint(predictions)","ae02a4ae":"print(X.head())","4c1bdeac":"predictions","b5090e36":"print(y)","1511c387":"# Import the train_test_split function and uncomment\nfrom sklearn.model_selection import train_test_split\n\n\n# fill in and uncomment\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, random_state = 1)","89ac7948":" #You imported DecisionTreeRegressor in your last exercise\n# and that code has been copied to the setup code above. So, no need to\n# import it again\n\n# Specify the model\ngrowth_model = DecisionTreeRegressor(random_state = 1)\n\n# Fit iowa_model with the training data\ngrowth_model.fit(train_X, train_y)","8f054019":"val_predictions = growth_model.predict(val_X)\nval_predictions","89d696b3":"print(y.head())\nprint(val_y,val_predictions)","dd54b508":"from sklearn.metrics import mean_absolute_error\nval_mae =mean_absolute_error(val_y, val_predictions)\n\n# uncomment following line to see the validation_mae\nprint(val_mae)","13f895e4":"def get_mae(max_leaf_nodes, train_X, val_X, train_y, val_y):\n    model = DecisionTreeRegressor(max_leaf_nodes=max_leaf_nodes, random_state=0)\n    model.fit(train_X, train_y)\n    preds_val = model.predict(val_X)\n    mae = mean_absolute_error(val_y, preds_val)\n    return(mae)","d467f632":"\ncandidate_max_leaf_nodes = [5, 25, 50, 100, 250, 500]\n# Write loop to find the ideal tree size from candidate_max_leaf_nodes\nfor max_leaf_nodes in [5, 50, 500, 5000]:\n    scores = {leaf_size: get_mae(leaf_size, train_X, val_X, train_y, val_y) for leaf_size in candidate_max_leaf_nodes}\n    print(\"Max leaf nodes: %d  \\t\\t Mean Absolute Error:  %d\" %(max_leaf_nodes, val_mae))\n\n# Store the best value of max_leaf_nodes (it will be either 5, 25, 50, 100, 250 or 500)\nbest_tree_size = min(scores , key=scores.get)","ea70facd":" #Fill in argument to make optimal size and uncomment\nfinal_model = DecisionTreeRegressor(max_leaf_nodes=best_tree_size, random_state=1)\n\n# fit the final model and uncomment the next two lines\nfinal_model.fit(X,y, )","88c60dbb":"from sklearn.ensemble import RandomForestRegressor\n\n# Define the model. Set random_state to 1\nrf_model =  RandomForestRegressor()\n\n\n\n\n# fit your model\nrf_model.fit(train_X, train_y)\n\n# Calculate the mean absolute error of your Random Forest model on the validation data\nrf_val_predictions = rf_model.predict(val_X)\nrf_val_mae = mean_absolute_error(rf_val_predictions, val_y)\n","e1641a40":"rf_val_mae","e385d9ca":"print(rf_val_predictions)\nprint(y.head())","a261fd70":"\nfrom xgboost import XGBRegressor\n\n# Define the model\ngrowth_model =XGBRegressor()\n# Fit the model\ngrowth_model.fit(train_X,train_y) ","c0d15309":"xg_val_predictions = growth_model.predict(val_X)\nxg_val_mae = mean_absolute_error(xg_val_predictions, val_y)","6d0949b4":"xg_val_mae","e0d4b63e":"#Therefore we can say that for this data , Random Forest gives the best prediction value so far with minimum value of mean absolute error","01b80db6":"growth_data.iloc[1]"}}