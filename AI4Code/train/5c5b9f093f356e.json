{"cell_type":{"e26c9886":"code","da045e0f":"code","7d3869b9":"code","9bdb5d04":"code","56c06aa6":"code","d32c2a01":"code","79199716":"code","21b5e06c":"code","7a05be53":"code","882d0ad3":"code","0c33c8fa":"code","ef93c0cd":"code","bf649985":"code","d66715b2":"code","1aeef9a5":"code","f0386e4f":"code","0148b42c":"code","82f549d2":"code","67330ff4":"code","da657a3c":"code","06fbe363":"code","555b3df3":"code","4f7526fc":"code","666ae8d3":"code","1f27bf17":"code","1ea5f50f":"code","c68e3ad9":"code","eb5d7885":"code","ce28feb2":"code","28a806f7":"code","12d11068":"code","5f583c43":"code","1a5e0b5a":"code","dca18b08":"code","b0563df3":"code","133d46f9":"code","e2676912":"code","eeba550b":"code","6ef8fe78":"code","7ab33649":"code","bfe9d713":"code","ead61b6e":"code","dfc835f4":"code","08fd4bc3":"code","8d9e0c27":"code","efd326e5":"code","40ae70af":"code","ac451206":"markdown","6c2ceeff":"markdown","a77bdad8":"markdown","414af0bf":"markdown","1812c2ee":"markdown","300dca24":"markdown","a1ab9263":"markdown","54aa6f97":"markdown","d5819484":"markdown","57b31336":"markdown","0dae5d01":"markdown","54302509":"markdown","399d2a10":"markdown","5e59c6ef":"markdown","65cc3d65":"markdown","15559990":"markdown","ab06de3e":"markdown","8dd834c3":"markdown","e753495f":"markdown","2af1d981":"markdown","eed584dd":"markdown","ae1b12ca":"markdown","d330aab6":"markdown","a8b918ef":"markdown","f68aca28":"markdown","90f21597":"markdown","dbf39c30":"markdown","4117888e":"markdown","d6a96bc0":"markdown"},"source":{"e26c9886":"import warnings\nwarnings.filterwarnings('ignore')\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.cluster import KMeans\n\n","da045e0f":"df=pd.read_csv(\"..\/input\/country-dataset\/Country-data.csv\")\ndf.head()","7d3869b9":"df.shape","9bdb5d04":"df.info()","56c06aa6":"df.describe()","d32c2a01":"df.isnull().sum()","79199716":"df.exports=df.exports*df.gdpp\ndf.health=df.health*df.gdpp\ndf.imports=df.imports*df.gdpp","21b5e06c":"df.head()","7a05be53":"num_vars=['child_mort', 'exports', 'health', 'imports', 'income','inflation', 'life_expec', 'total_fer', 'gdpp']","882d0ad3":"plt.figure(figsize=(15,20))\nfor i in enumerate(num_vars):\n    plt.subplot(5,2, i[0]+1)\n    sns.distplot(df[i[1]])","0c33c8fa":"# based on this graph I will use GDPP, Income and Chil_mort for cluster \n# profiling as they have a better distribution than rest of them ","ef93c0cd":"plt.figure(figsize=(15,20))\nfor i in enumerate(num_vars):\n    plt.subplot(5,2, i[0]+1)\n    sns.boxplot(df[i[1]])","bf649985":"# these plots show a lot of outliers and outliers are not good when clustering","d66715b2":"df.head()","1aeef9a5":"num_vars=['child_mort', 'exports', 'health', 'imports', 'income','inflation', 'life_expec','total_fer']\nplt.figure(figsize=(15,20))\nfor i in enumerate(num_vars):\n    plt.subplot(5,2,i[0]+1)\n    sns.scatterplot(x=i[1],y='gdpp',data=df)\n    ","f0386e4f":"# bivariate analysis shows that countries with high GDP has very low child mortality\n# high GDP also means high export, import,income, life expectancy, good health\n# high GDP also means low inflation, low fertility","0148b42c":"# Capping the outliers\nnum_vars=[ 'exports', 'health', 'imports', 'income','inflation', 'life_expec','total_fer','gdpp','child_mort']\nfor i in num_vars:\n    \n    q1=df[i].quantile(0.01)\n    q4=df[i].quantile(0.99)\n    if i == 'child_mort':\n        df[i][df[i]<=q1]=q1\n        \n    else :\n        df[i][df[i]>=q4]=q4\n        ","82f549d2":"#univariate\nplt.figure(figsize=(15,20))\nfor i in enumerate(num_vars):\n    plt.subplot(5,2, i[0]+1)\n    sns.boxplot(df[i[1]])","67330ff4":"#bi-variate\nnum_vars=['child_mort', 'exports', 'health', 'imports', 'income','inflation', 'life_expec','total_fer']\nplt.figure(figsize=(15,20))\nfor i in enumerate(num_vars):\n    plt.subplot(5,2,i[0]+1)\n    sns.scatterplot(x=i[1],y='gdpp',data=df)","da657a3c":"#Calculating the Hopkins statistic\n\nfrom sklearn.neighbors import NearestNeighbors\nfrom random import sample\nfrom numpy.random import uniform\nfrom math import isnan\n \ndef hopkins(X):\n    d = X.shape[1]\n    #d = len(vars) # columns\n    n = len(X) # rows\n    m = int(0.1 * n) \n    nbrs = NearestNeighbors(n_neighbors=1).fit(X.values)\n \n    rand_X = sample(range(0, n, 1), m)\n \n    ujd = []\n    wjd = []\n    for j in range(0, m):\n        u_dist, _ = nbrs.kneighbors(uniform(np.amin(X,axis=0),np.amax(X,axis=0),d).reshape(1, -1), 2, return_distance=True)\n        ujd.append(u_dist[0][1])\n        w_dist, _ = nbrs.kneighbors(X.iloc[rand_X[j]].values.reshape(1, -1), 2, return_distance=True)\n        wjd.append(w_dist[0][1])\n \n    H = sum(ujd) \/ (sum(ujd) + sum(wjd))\n    if isnan(H):\n        print(ujd, wjd)\n        H = 0\n \n    return H","06fbe363":"# performin hopkins stastic 10 times and taking average\nHopList=[]\nsum1=0\nfor i in range (0,9):\n    temp=hopkins(df.drop('country', axis = 1))\n    HopList.append(temp)\nfor i in HopList:\n    sum1=sum1+i\navg=sum1\/len(HopList)\n\nprint(f\"average Hopkin's score is:{avg}\")","555b3df3":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\ndf1 = scaler.fit_transform(df.drop('country', axis = 1))\ndf1=pd.DataFrame(df1,columns = df.columns[1:])\ndf1","4f7526fc":"# Choose the value of K\n# Silhouette score - measure of similarity of data point to its own cluster compared to other cluster.\n# Heuristics - a value of -1 indicates data is not similar in cluster whereas 1 indicates data is similar in cluster \n\nfrom sklearn.metrics import silhouette_score\nss = []\nfor k in range(2, 11):\n    kmean = KMeans(n_clusters = k).fit(df1)\n    ss.append([k, silhouette_score(df1, kmean.labels_)])\ntemp = pd.DataFrame(ss)\nprint(temp)\nplt.plot(temp[0], temp[1])\nplt.grid()\nplt.show()","666ae8d3":"# Elbow curve or Sum of Squared Distances(ssd)\n# Heuristic - choose a number of clusters so that adding another cluster doesn't give much better modeling of the data\nssd = []\nfor k in range(2, 11):\n    kmean = KMeans(n_clusters = k).fit(df1)\n    ssd.append([k, kmean.inertia_])\n    \ntemp = pd.DataFrame(ssd)\nplt.plot(temp[0], temp[1])\nplt.grid()\nplt.show()","1f27bf17":"#### based on silhoutte score and elbow curve i will choose K=3\nkmean = KMeans(n_clusters = 3,random_state=100).fit(df1)","1ea5f50f":"df_kmean = df.copy()\nlabel  = pd.DataFrame(kmean.labels_, columns= ['label'])\nlabel.head()","c68e3ad9":"df_kmean = pd.concat([df_kmean, label], axis =1)\ndf_kmean.head()","eb5d7885":"df_kmean.label.value_counts()","ce28feb2":"sns.scatterplot(x = 'gdpp', y = 'income', hue = 'label', data = df_kmean, palette = 'Set1')\nplt.grid()\nplt.show()","28a806f7":"sns.scatterplot(x = 'gdpp', y = 'child_mort', hue = 'label', data = df_kmean, palette = 'Set1')\nplt.grid()\nplt.show()","12d11068":"sns.scatterplot(x = 'income', y = 'child_mort', hue = 'label', data = df_kmean, palette = 'Set1')\nplt.grid()\nplt.show()","5f583c43":"df_kmean.drop('country', axis = 1).groupby('label').mean().plot(kind = 'barh')\nplt.xscale(\"log\")\nplt.show()","1a5e0b5a":"var=['child_mort','income','gdpp','label']\ndf_kmean[var].groupby('label').mean().plot(kind = 'bar')\nplt.yscale(\"log\")","dca18b08":"df_kmean[df_kmean['label'] == 1].sort_values(by=['income','gdpp','child_mort'],ascending=[True,True,False]).head(5)","b0563df3":"# Scaled data frame\ndf1.head()","133d46f9":"from scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom scipy.cluster.hierarchy import cut_tree","e2676912":"sl=linkage(df1,method='single', metric='euclidean')\nplt.figure(figsize=(20,20))\ndendrogram(sl)\nplt.show()","eeba550b":"cl=linkage(df1,method='complete', metric='euclidean')\nplt.figure(figsize=(20,20))\ndendrogram(cl)\nplt.show()","6ef8fe78":"hc_labels=cut_tree(cl,n_clusters=3).reshape(-1,)","7ab33649":"df_hier=df.copy()\n\ndf_hier['label']=hc_labels\ndf_hier.head()","bfe9d713":"df_hier.label.value_counts()","ead61b6e":"sns.scatterplot(x = 'gdpp', y = 'income', hue = 'label', data = df_hier, palette = 'Set1')\nplt.grid()\nplt.show()","dfc835f4":"sns.scatterplot(x = 'gdpp', y = 'child_mort', hue = 'label', data = df_hier, palette = 'Set1')\nplt.grid()\nplt.show()","08fd4bc3":"sns.scatterplot(x = 'income', y = 'child_mort', hue = 'label', data = df_hier, palette = 'Set1')\nplt.grid()\nplt.show()","8d9e0c27":"df_hier.drop('country', axis = 1).groupby('label').mean().plot(kind = 'barh')\nplt.xscale(\"log\")\nplt.show()","efd326e5":"var=['child_mort','income','gdpp','label']\ndf_hier[var].groupby('label').mean().plot(kind = 'bar')\nplt.yscale(\"log\")","40ae70af":"df_hier[df_hier['label'] == 0].sort_values(by=['income','gdpp','child_mort'],ascending=[True,True,False]).head(5)","ac451206":"#### Single linkage (shortest distance between points in two clusters)","6c2ceeff":"## EDA\n#### Importing and inspecting","a77bdad8":"#### Importing the libraries.","414af0bf":"#### Clsuter Profiling\n    -Making sense out of the clsuters","1812c2ee":"complete linkage is a much better dendrogram\n#### cutting the dendrogram at 3 clusters","300dca24":"#### Plotting the cluster","a1ab9263":"## Clustering using K-means clustering","54aa6f97":"#### Performing bi-variate analysis","d5819484":"HELP International is an international humanitarian NGO that is committed to fighting poverty and providing the people of backward countries with basic amenities and relief during the time of disasters and natural calamities. It runs a lot of operational projects from time to time along with advocacy drives to raise awareness as well as for funding purposes.\nThe CEO of the NGO needs to decide how to use this money strategically and effectively.<br>\nie he wants to know which:\n\n-**countries are in the direst need of aid**\n","57b31336":"#### Plotting the cluster","0dae5d01":"## Final Comments","54302509":"#### as per K means, top 5 countries in need of aid are\n    1. Congo, Dem. Rep.\n    2. Liberia\n    3. Burundi\n    4. Niger\n    5. Central African Republic","399d2a10":"#### so Cluster 0 is Low GDPP,Income and high Child_mort","5e59c6ef":"#### so Cluster 1 is Low GDPP,Income and high Child_mort","65cc3d65":"#### as Hopkins score is 0.94 this dataset has high cluster tendency \n\n#### now scaling features","15559990":"## Data Prepration","ab06de3e":"#### top 5 countries in need of immediate aid are:\n    1. Congo, Dem. Rep.\n    2. Liberia\n    3. Burundi\n    4. Niger\n    5. Central African Republic","8dd834c3":"- There are 167 non-null rows with 10 columns\n- a mix of integer, float and object data type\n- no null values found","e753495f":"## Structure of Analysis\n    1.EDA\n    2.Data preparation \n    3.Clustering using K-means clustering\n    4.Clustering using Hierarchical clustering\n    5.Final Comments (list of companies which are in the direst need of aid)","2af1d981":"## Clustering using Hierarchical Clustering","eed584dd":"#### Performing Univariate analysis","ae1b12ca":"#### Outliers treatment:\n\n- as I only have 167 rows to work with, cant remove outliers rows, so we will do capping\n- For child_mort, treating only the lower range of outliers\n- for all other than child_mort, treating only the upper range\n- doing this to prevent capping the countries that are actually in need","d330aab6":"Data dictonary:\n\n![image.png](attachment:image.png)\n\n#### From data dictonary we know that exports |health |imports are percentage of gdpp, so converting them to their actual values","a8b918ef":"#### Performing univariate and bi-variate analysis again after outlier capping","f68aca28":"#### Complete linkage (longest distance between points in two clusters)","90f21597":"#### Clsuter Profiling\n    -Making sense out of the clsuters","dbf39c30":"#### as per hierarchical clustering, top 5 countries in need of aid are\n    1. Congo, Dem. Rep.\n    2. Liberia\n    3. Burundi\n    4. Niger\n    5. Central African Republic\n- it is same as in case of K-means    \n    ","4117888e":"#### after outlier treatment let's check hopkin's score","d6a96bc0":"## Problem Statement:"}}