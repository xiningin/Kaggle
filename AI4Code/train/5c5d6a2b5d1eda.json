{"cell_type":{"ec72e155":"code","b4965207":"code","dc08afdf":"code","70fd8b5b":"code","448f2621":"code","18e2480d":"code","5cc3213a":"code","a06534e8":"code","ec995244":"code","3661a839":"code","2da06696":"code","5078fa55":"code","8a1580cd":"code","0652eb17":"markdown","936c1618":"markdown","fcef0992":"markdown","3bd97f84":"markdown","d7eb429c":"markdown","d255e90f":"markdown","5b8c92f9":"markdown","1165c156":"markdown","5cf033a3":"markdown","a077d5a3":"markdown","7066b3e5":"markdown","2ce15e60":"markdown","9fd2bbd4":"markdown","5f78454d":"markdown","30173224":"markdown","6c902006":"markdown"},"source":{"ec72e155":"# First import the required packages\n%matplotlib inline\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score","b4965207":"# Import the data and check the first few rows\nfruits = pd.read_table('..\/input\/IPythonData_04042018.txt')\nfruits.head(20)","dc08afdf":"#lets see how many rows and columns we have in our data\nprint(fruits.shape)","70fd8b5b":"print(fruits['fruit_name'].unique())\n","448f2621":"sns.countplot(fruits['fruit_name'],label=\"Count\")\nplt.show()","18e2480d":"fruits.drop('fruit_label', axis=1).plot(kind='box', subplots=True, layout=(2,2), sharex=False, sharey=False, figsize=(9,9), \n                                        title='Box Plot for each input variable')\nplt.savefig('fruits_box')\nplt.show()","5cc3213a":"fruits.describe()","a06534e8":"#We have the following features of the fruit\nfeature_names = ['mass', 'width', 'height', 'color_score']\nX = fruits[feature_names]\n\n# this is the name of the fruit we are predicting\ny = fruits['fruit_label']\n\n#we are splitting our main dataset to training and test sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0)\nscaler = MinMaxScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)\n","ec995244":"# initialize logistic regression from sklearn\nlogreg = LogisticRegression()\n\n# fit the data in the model\nlogreg.fit(X_train, y_train)\n\ny_pred = logreg.predict(X_test)\n\nlogreg_acc = accuracy_score(y_test, y_pred)\n\n# calculate the accurracy in test set\nprint('Accuracy of Logistic regression classifier on test set: {:.2f}'\n     .format(logreg_acc))","3661a839":"#create couple of new fruit features data\nX = [[192,10,9,0.88],[80, 5.9, 4.3,0.81]]\n\nlogreg.predict(X)","2da06696":"#import decision tree classifier from sklearn\n\nfrom sklearn.tree import DecisionTreeClassifier\n\n# fit the data into the model\nclf = DecisionTreeClassifier().fit(X_train, y_train)\ny_pred = clf.predict(X_test)\n\nlogreg_acc = accuracy_score(y_test, y_pred)\n\n# calculate the accurracy in test set\nprint('Accuracy of Logistic regression classifier on test set: {:.2f}'\n     .format(logreg_acc))","5078fa55":"clf.predict(X)","8a1580cd":"#import KNN from sklearn\n\nfrom sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier()\n\n# fit the data into the model\nknn.fit(X_train, y_train)\n\ny_pred = knn.predict(X_test)\n\nlogreg_acc = accuracy_score(y_test, y_pred)\n\n# calculate the accurracy in test set\nprint('Accuracy of Logistic regression classifier on test set: {:.2f}'\n     .format(logreg_acc))","0652eb17":"# Stage 4: Model the Data\n\nWhat you want to predict from the data?\n\n    With the given four features, we want to predict the type of the fruit.\n\nExplain how you select this ML model.\n\n    We are trying to use 3 models here. 2 of them are supervised and 1 is unsupervised.\n\n    First one is multinomial logistic regression. As our dataset is really simple and we have only 4 features we can use a simple model like logistic regression.\n\n    Again with simple 4 features, we want to see if decision tree will perform better or not.\n    \n    Next model we want to compare is an unsupervised one. We want to see how KNN performs\n","936c1618":" We can see that we have less data for mandarin compared to other fruits. This might hamper the accurracy of our classifier.\n \n Box plot for each numeric variable will give us a clearer idea of the distribution of the input variables.","fcef0992":"# General Steps to be followed for an end-to-end Machine Learning Project\n1) Define Problem\n\n    What is the problem and what are we trying to solve?\n    \n    What are the general intentions behind doing this project and how is it going to be helpful?\n    \n    ","3bd97f84":"From the  above table, we can see that:\n\nEach of the row represents a piece of fruit with its several features like mass, width, height, etc\n\nLets see how many different pieces of fruits we have in the dataset","d7eb429c":"Now Lets see how many unique fruits are there in the dataset.","d255e90f":"3) Evaluate our algorithms\n\nWe will import all the packages we need for our program to run in an end to end basis\n\nVisualize the data\/see how the dataset looks like\n\nGet statistical Measures to evaluate our algorithm","5b8c92f9":"# Now lets do the classification on new data\n","1165c156":"# Fruits Classifier\n\n# Stage 1: Ask A Question:\n\nWhat is the questions\/answer you expect to find ?\n\nThe goal of this project is to create a fruit classifier with high accurracy.\n\nWe will analyze the data and find out the good features for the classifier. We expect to see the performance of the different classifiers on our dataset.\n\n\n# Stage 2: Get the Data\n\n\nWhat is the DataSet ? \n\nWe will use the fruits dataset created by Dr. Iain Murray from University of Edinburgh. He bought a few dozen oranges, lemons and apples of different varieties, and recorded their measurements in a table. And then the professors at University of Michigan formatted the fruits data slightly and it can be downloaded.\n\nThe dataset can be found at \nhttps:\/\/github.com\/susanli2016\/Machine-Learning-with-Python\/blob\/master\/fruit_data_with_colors.txt\n\nIf you have trouble downloading the dataset, you can use this link: https:\/\/raw.githubusercontent.com\/susanli2016\/Machine-Learning-with-Python\/master\/fruit_data_with_colors.txt","5cf033a3":"#  Build Model - Decision Tree\n","a077d5a3":"Our objective is to learn a model that has a good generalization performance. Such a model maximizes the prediction accuracy. We identified the machine learning algorithm that is best-suited for the problem at hand (i.e. fruit types classification); therefore, we compared different algorithms and selected the best-performing one.\n\nAfter the traning  all the models, we can see that KNN has best performance on the test set while Decision tree has the best performance training set.\n","7066b3e5":"We have 59 pieces of fruits in our dataset","2ce15e60":"# Stage 3: Explore the Data:\n\nIn this stage, we will vizualize the data and try to get the information about the dataset. We will visualize the distribution of the input variables, and also see the mean, median and standard deviation of all the features.","9fd2bbd4":"# Build Model - Multinomial Logistic Regression\n\n","5f78454d":"We can see that the dataset has 4 different types of fruits, ['apple' 'mandarin' 'orange' 'lemon']\n\nNow lets see the total number of fruits we have for each of them.\n\n","30173224":"2) Prepare the dataset\n\n    One of the major issues with working with datasets is that they are not always formatted and in a way, we want. \n    We need to clean up the data in various ways. We need to make sure that the data we have is properly formatted\n    and without any issues. We might need to add some data and remove some data, which can be done by viewing the\n    data. In the example provided, we have a clean dataset, but that might not be always the case.\n","6c902006":"# Stage 5: Communicate the Data\n\n"}}