{"cell_type":{"6976b899":"code","c8f7217a":"code","dc0ce21d":"code","9a0fef76":"code","b0eb30fb":"code","a88ce6d6":"code","1c2a5ddd":"code","a4be3662":"code","727d9c93":"code","21b072a6":"code","8a95480d":"code","bbd3611b":"code","b4b8c716":"code","6fe341d7":"code","e604f576":"code","af2dc4a4":"code","62efd457":"code","6746abd5":"code","d04fa235":"code","ab341a06":"code","8282bfed":"code","f52377a9":"code","70302161":"code","77fca298":"code","f7fbe954":"code","5f04f30b":"code","fa623cdc":"code","65e8b84b":"code","aa884f48":"code","fe7c1e42":"code","f16c63c7":"code","e22fab79":"code","820dca77":"code","10a23772":"code","00428fba":"code","2d919f7d":"code","47693865":"code","552ade7e":"code","a176f4bd":"code","da105d68":"code","41f5c122":"code","5018f2ec":"code","92da7f0f":"markdown"},"source":{"6976b899":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nfrom collections import Counter\n%matplotlib inline\nimport datetime\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nimport warnings\nwarnings.filterwarnings('ignore') \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c8f7217a":"# Review data\nmedian_house_hold_in_come = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/MedianHouseholdIncome2015.csv', encoding=\"windows-1252\")\npercentage_people_below_poverty_level = pd.read_csv ('..\/input\/fatal-police-shootings-in-the-us\/PercentagePeopleBelowPovertyLevel.csv', encoding=\"windows-1252\")\npercent_over_25_completed_highSchool = pd.read_csv ('..\/input\/fatal-police-shootings-in-the-us\/PercentOver25CompletedHighSchool.csv', encoding = \"windows-1252\")\nshare_race_city = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/ShareRaceByCity.csv',encoding = \"windows-1252\")\nkill = pd.read_csv ('..\/input\/fatal-police-shootings-in-the-us\/PoliceKillingsUS.csv', encoding = \"windows-1252\")","dc0ce21d":"percentage_people_below_poverty_level.head()","9a0fef76":"percentage_people_below_poverty_level.info()","b0eb30fb":"#percentage_people_below_poverty_level.poverty_rate.value_counts()","a88ce6d6":"percentage_people_below_poverty_level['Geographic Area'].unique()","1c2a5ddd":" percentage_people_below_poverty_level.poverty_rate.replace(['-'],0.0,inplace = True)\n percentage_people_below_poverty_level.poverty_rate = percentage_people_below_poverty_level.poverty_rate.astype(float)\n area_list = list(percentage_people_below_poverty_level['Geographic Area'].unique())\n area_poverty_ratio = []\n for i in area_list:\n     x = percentage_people_below_poverty_level[percentage_people_below_poverty_level['Geographic Area']== i]\n     area_poverty_rate = sum(x.poverty_rate)\/len(x)\n     area_poverty_ratio.append(area_poverty_rate)\n data = pd.DataFrame({'area_list':area_list,'area_poverty_ratio':area_poverty_ratio})\n new_index = (data['area_poverty_ratio'].sort_values(ascending=False)).index.values\n sorted_data = data.reindex(new_index)\n\n#visualization\n\n plt.figure(figsize=(15,10))\n ax = sns.barplot(x=sorted_data['area_list'],y=sorted_data['area_poverty_ratio'])\n plt.xticks(rotation=60)\n plt.xlabel('States')\n plt.ylabel('Poverty Rate')\n plt.title('poverty rate Given States ')\n plt.show()","a4be3662":"kill.head()","727d9c93":"#kill.name.value_counts()","21b072a6":"#Most common 15 Name or Surname of killed people \nseparate= kill.name[kill.name != 'TK TK'].str.split()\na,b = zip(*separate)\nname_list = a+b\nname_count = Counter (name_list)\nmost_common_names = name_count.most_common(15)\nx,y = zip(*most_common_names)\nx,y = list(x),list(y)\n\n#\nplt.figure(figsize=(15,10))\nax = sns.barplot(x=x,y=y,palette = sns.cubehelix_palette(len(x)))\nplt.xlabel('Name or Surname of killed people')\nplt.ylabel('Frequency')\nplt.title('Most common 15 Name or Surname of killed people ')\nplt.show()\n","8a95480d":"#percent_over_25_completed_highSchool.info()","bbd3611b":"percent_over_25_completed_highSchool.head()","b4b8c716":"# High school graduation rate of the population that is older than 25 in states\npercent_over_25_completed_highSchool.percent_completed_hs.replace(['-'],0.0,inplace = True)\npercent_over_25_completed_highSchool.percent_completed_hs = percent_over_25_completed_highSchool.percent_completed_hs.astype(float)\narea_list = list(percent_over_25_completed_highSchool['Geographic Area'].unique())\narea_highschool = []\nfor i in area_list:\n    x = percent_over_25_completed_highSchool[percent_over_25_completed_highSchool['Geographic Area']==i]\n    area_highschool_rate = sum(x.percent_completed_hs)\/len(x)\n    area_highschool.append(area_highschool_rate)\n# sorting\ndata = pd.DataFrame({'area_list':area_list,'area_highschool_ratio':area_highschool})\nnew_index = (data['area_highschool_ratio'].sort_values(ascending = True)).index.values\nsorted_data2 = data.reindex (new_index)\n\n#visualization \nplt.figure(figsize = (15,10))\nsns.barplot(x=sorted_data2['area_list'], y = sorted_data2['area_highschool_ratio'])\nplt.xticks(rotation= 90)\nplt.xlabel('States')\nplt.ylabel('High Shcool Graduate Rate')\nplt.title(\"Percentage of Given State's Population Above 25 that Has Graduated High Shcool\")\nplt.show()","6fe341d7":"share_race_city.head()","e604f576":"share_race_city.info()","af2dc4a4":"share_race_city.replace(['-'],0.0, inplace=True)\nshare_race_city.replace(['(X)'],0.0, inplace=True)\nshare_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic',]] = share_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic',]].astype(float)\narea_list = list(share_race_city['Geographic area'].unique())\nshare_white = []\nshare_black = []\nshare_native_american = []\nshare_asian = []\nshare_asian = []\nshare_hispanic = []\nfor i in area_list:\n    x = share_race_city[share_race_city['Geographic area']==i]\n    share_white.append(sum(x.share_white)\/len(x))\n    share_black.append(sum(x.share_black)\/len(x))\n    share_native_american.append(sum(x.share_native_american)\/len(x))\n    share_asian.append(sum(x.share_asian)\/len(x))\n    share_hispanic.append(sum(x.share_hispanic)\/len(x))\n\nf,ax=plt.subplots(figsize = (9,15))\nsns.barplot(x = share_white,y= area_list,color= 'green',alpha = 0.5,label='White')\nsns.barplot(x = share_black,y = area_list,color = 'blue',alpha = 0.7,label = 'African American')\nsns.barplot(x = share_native_american,y= area_list,color = 'cyan',alpha = 0.6,label = 'Native American')\nsns.barplot(x = share_asian,y=area_list,color = 'yellow',alpha = 0.6,label = 'Asian')\nsns.barplot(x = share_hispanic,y = area_list,color = 'red',alpha=0.6,label='Hispanic')\n  \nax.legend(loc = 'lower right',frameon = True)\nax.set(xlabel= 'Percentage og Races',ylabel='States',title = \"Percentage of  State's Population According to Races\")\nplt.show()","62efd457":"share_race_city.head(100)","6746abd5":"sorted_data.head()","d04fa235":"# high shcool graduation  rate vs poverty  rate of each state\n\nsorted_data['area_poverty_ratio']= sorted_data['area_poverty_ratio']\/max(sorted_data['area_poverty_ratio'])\nsorted_data2['area_highschool_ratio']= sorted_data2['area_highschool_ratio']\/max(sorted_data2['area_highschool_ratio'])\ndata = pd.concat([sorted_data,sorted_data2['area_highschool_ratio']],axis = 1)\ndata.sort_values('area_poverty_ratio',inplace = True)\n\n# visualization \n\nf,ax1 = plt.subplots(figsize =(20,10))\nsns.pointplot(x = 'area_list',y = 'area_poverty_ratio',data=data,color='blue',alpha = 0.8)\nsns.pointplot(x = 'area_list',y = 'area_highschool_ratio',data=data,color='lime',alpha = 0.8)\nplt.text(40,0.6,'high school graduate  ratio',color= 'red',fontsize = 17,style = 'italic')\nplt.text(40,0.55,'poverty ratio',color = 'lime',fontsize = 18,style = 'italic')\nplt.xlabel('States',fontsize = 15,color = 'blue')\nplt.ylabel('Values',fontsize =15,color = 'blue')\nplt.title('High Shcool Graduate vs Poverty  Rate ',fontsize = 20,color = 'red')\nplt.grid()\n","ab341a06":"g = sns.jointplot(data.area_poverty_ratio,data.area_highschool_ratio,kind = \"kde\",size = 8)\nplt.savefig('graph.png')\nplt.show()","8282bfed":"g = sns.jointplot(\"area_poverty_ratio\",\"area_highschool_ratio\",data=data,size =5,ratio = 3,color = \"r\")","f52377a9":"kill.race.head(15)","70302161":"kill.race.value_counts()","77fca298":"kill.race.dropna(inplace = True)\nlabels = kill.race.value_counts().index\ncolors = ['grey','blue','red','yellow','green','brown']\nexplode = [0,0,0,0,0,0]\nsizes =  kill.race.value_counts().values\n\nplt.figure(figsize = (7,7))\nplt.pie(sizes,explode = explode,labels = labels,colors = colors, autopct = '%1.1f%%')\nplt.title('killed People According to Races',color = 'blue',fontsize = 15)\n","f7fbe954":"# visualization of high school graduation rate vs poverty  rate of each states with different  style  of seaborn code \n# lmplot\n# show the results of a linear regression  within each dataset \n\nsns.lmplot(x = \"area_poverty_ratio\",y = \"area_highschool_ratio\",data = data, )\n\nplt.show()","5f04f30b":"sns.kdeplot(data.area_poverty_ratio,data.area_highschool_ratio,shade = False,cut = 3)\nplt.show()","fa623cdc":"pal = sns.cubehelix_palette(2, rot= -.8, dark =.6)\nsns.violinplot(data=data,palette = pal,inner=\"points\")\nplt.show()","65e8b84b":"data.corr()","aa884f48":"#corelation map\nf,ax =plt.subplots(figsize = (5,5))\nsns.heatmap (data.corr(),annot = True,linewidths = 5, fmt = '.1f',ax = ax)\nplt.show()","fe7c1e42":"# gender cinsiyet\n# age: yas \n#Plot the orbital period  with horizontal boxes \n\nsns.boxplot(x = 'gender',y = 'age',hue=\"manner_of_death\",data =kill,palette = \"PRGn\")\n\nplt.show()","f16c63c7":"kill.head()","e22fab79":"sns.swarmplot(x = \"gender\",y = \"age\",hue = \"manner_of_death\",data=kill)\nplt.show()","820dca77":"data.head()","10a23772":"sns.pairplot(data)\nplt.show()","00428fba":"sns.countplot(kill.gender)\n#sns.countplot(kill.manner_of_death)\nplt.title(\"gender\",color='lime',fontsize = 15)\nplt.show()","2d919f7d":"armed = kill.armed.value_counts()\nplt.figure(figsize = (10,7))\nsns.barplot (x = armed[:7].index,y=armed[:7].values)\nplt.ylabel('Number of Weapon')\nplt.xlabel('Weapon Types')\nplt.title('Kill weapon',color='black',fontsize = 15)\nplt.show()\n","47693865":"above25 = ['above25' if i >= 25 else 'below25' for i in kill.age]\ndf = pd.DataFrame({'age':above25})\nsns.countplot (x = df.age)\nplt.ylabel('Number of killed People')\nplt.title ('Age of killed people',color = 'blue',fontsize=15)\n","552ade7e":"sns.countplot(data=kill,x ='race')\nplt.title('Race of killed paople ',color = 'blue',fontsize=15 )\nplt.show()","a176f4bd":"city = kill.city.value_counts()\nplt.figure(figsize = (10,7))\nsns.barplot(x=city[:13].index,y=city[:13].values)\nplt.xticks(rotation =  47)\nplt.title('Most dangerous cities',color = 'blue',fontsize =17)\n","da105d68":"state = kill.state.value_counts()\nplt.figure(figsize = (10,7))\nsns.barplot(x=state[:20].index,y=state[:20].values)\nplt.title('Most dangerous state ', color = 'blue',fontsize = 18)","41f5c122":"sns.countplot(kill.signs_of_mental_illness)\nplt.xlabel('Mental illness')\nplt.ylabel('Number of Mental illness')\nplt.title('Having mental illness or not ',color= 'blue',fontsize = 19)","5018f2ec":"sta = kill.state.value_counts().index[:10]\nsns.barplot(x=sta,y=kill.state.value_counts().values[:10])\nplt.title('Kill Numbers from States',color = 'blue',fontsize = 20)","92da7f0f":"# INTRODUCTION\n1. Read datas\n1. Poverty rate of each state\n1. Most common 15 Name Surname of killed people \n1. High scholl graduation rate of the population that is older than 25 in states \n1. Percentage of states population according to races that are black. white.  native american.asian and hispanic\n1. High school graduation rate vs Poverty rate of each state\n1. Kill properties\n    * Manner of death\n    * Kill weapon \n    * Age of killed people \n    * Race of killed people \n    * Most dangerous cities\n    * Most dangerous states\n    * Having mental ilness or not for killed people \n    * Threat types\n    * Flee types \n    * Having body cameras or not  for police \n1. Race rates according to states in kill data \n1. Kill numbers from states in kill data \n1. Plotly Visualization Tutorial: https:\/\/www.kaggle.com\/kanncaa1\/plotly-tutorial-for-beginners\n\n   Plot Contents:\n1. Bar Plot\n1. Point Plot\n1. Joint Plot\n1. Count Plot\n1. Pie Chart\n1. Lm Plot\n1. Kde Plot\n1. Box Plot\n1. Swarm Plot\n1. Pair Plot\n\n"}}