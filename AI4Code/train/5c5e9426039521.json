{"cell_type":{"92e4f2c0":"code","e759b7e7":"code","633cf705":"code","e707ec16":"code","b67fd07b":"code","7522ff9d":"code","46791d7e":"code","652baa8c":"code","e0f7e124":"code","40a148ce":"code","8c90ee88":"code","28af019b":"code","9e39d30f":"code","77400221":"code","c1baf154":"code","140485df":"code","00401ee5":"code","f3f771cb":"code","a26e23a0":"code","a82af173":"code","5445ce28":"code","4920c610":"markdown","88f7f16c":"markdown","91369cff":"markdown","b02cab7b":"markdown","8b7ad294":"markdown","80a562fa":"markdown","e4d63a64":"markdown","49f26ee9":"markdown","3736689d":"markdown","16f7cda8":"markdown","4c95e8f3":"markdown","eaf5c811":"markdown","a8b7888c":"markdown","1aa73445":"markdown"},"source":{"92e4f2c0":"import numpy as np #linear algebra\nimport pandas as pd #data processing\nimport seaborn as sns #data visualization\nimport matplotlib.pyplot as plt","e759b7e7":"df=pd.read_csv('..\/input\/Mall_Customers.csv')\n","633cf705":"df.info()","e707ec16":"df.head()","b67fd07b":"df.describe()","7522ff9d":"df.isnull().sum()","46791d7e":"del df['CustomerID']","652baa8c":"print(\"Mean of Annual Income (k$) of Female:\",df['Annual Income (k$)'].loc[df['Gender'] == 'Female'].mean())\nprint(\"Mean of Annual Income (k$) of Male:\",df['Annual Income (k$)'].loc[df['Gender'] == 'Male'].mean())","e0f7e124":"print(\"Mean of Spending Score (1-100) of Female:\",df['Spending Score (1-100)'].loc[df['Gender'] == 'Female'].mean())\nprint(\"Mean of Spending Score (1-100) of Male:\",df['Spending Score (1-100)'].loc[df['Gender'] == 'Male'].mean())","40a148ce":"df.corr()\nsns.heatmap(df.corr(), annot=True)\nplt.show()","8c90ee88":"df.query('Gender == \"Male\"').Gender.count()","28af019b":"df.query('Gender == \"Female\"').Gender.count()","9e39d30f":"\nlabels = ['Male','Female']\nsizes = [df.query('Gender == \"Male\"').Gender.count(),df.query('Gender == \"Female\"').Gender.count()]\n#colors\ncolors = ['#ffdaB9','#66b3ff']\n#explsion\nexplode = (0.05,0.05)\nplt.figure(figsize=(8,8)) \nmy_circle=plt.Circle( (0,0), 0.7, color='white')\nplt.pie(sizes, colors = colors, labels=labels, autopct='%1.1f%%', startangle=90, pctdistance=0.85,explode=explode)\np=plt.gcf()\nplt.axis('equal')\np.gca().add_artist(my_circle)\nplt.show()","77400221":"p1=sns.kdeplot(df['Annual Income (k$)'].loc[df['Gender'] == 'Male'],label='Income Male', shade=True, color=\"r\")\np1=sns.kdeplot(df['Annual Income (k$)'].loc[df['Gender'] == 'Female'],label='Income Female', shade=True, color=\"b\")\nplt.xlabel('Annual Income (k$)')\nplt.show()","c1baf154":"df.sort_values(['Age'])\nplt.figure(figsize=(10,8))\nplt.bar( df['Age'],df['Spending Score (1-100)'])\nplt.xlabel('Age')\nplt.ylabel('Spending Score')\nplt.show()","140485df":"sns.lmplot(x='Age', y='Spending Score (1-100)', data=df, fit_reg=True, hue='Gender')\nplt.show()","00401ee5":"sns.lmplot(x='Annual Income (k$)', y='Spending Score (1-100)', data=df, fit_reg=True, hue='Gender')\nplt.show()","f3f771cb":"p1=sns.kdeplot(df['Spending Score (1-100)'].loc[df['Gender'] == 'Male'],label='Density Male',bw=2, shade=True, color=\"r\")\np1=sns.kdeplot(df['Spending Score (1-100)'].loc[df['Gender'] == 'Female'],label='Density Female',bw=2, shade=True, color=\"b\")\nplt.xlabel('Spending Score')\nplt.show()","a26e23a0":"from sklearn.cluster import KMeans","a82af173":"Y = df[['Spending Score (1-100)']].values\nX = df[['Annual Income (k$)']].values\nNc = range(1, 20)\nkmeans = [KMeans(n_clusters=i) for i in Nc]\nkmeans\nscore = [kmeans[i].fit(Y).score(Y) for i in range(len(kmeans))]\nscore\nplt.plot(Nc,score)\nplt.xlabel('Number of Clusters')\nplt.ylabel('Score')\nplt.title('Elbow Curve')\nplt.show()","5445ce28":"km = KMeans(n_clusters=5)\nclusters = km.fit_predict(df.iloc[:,1:])\n\ndf[\"label\"] = clusters\n\nfrom mpl_toolkits.mplot3d import Axes3D\n \n\nfig = plt.figure(figsize=(20,10))\nax = fig.add_subplot(111, projection='3d')\nax.scatter(df.Age[df.label == 0], df[\"Annual Income (k$)\"][df.label == 0], df[\"Spending Score (1-100)\"][df.label == 0], c='blue', s=60)\nax.scatter(df.Age[df.label == 1], df[\"Annual Income (k$)\"][df.label == 1], df[\"Spending Score (1-100)\"][df.label == 1], c='red', s=60)\nax.scatter(df.Age[df.label == 2], df[\"Annual Income (k$)\"][df.label == 2], df[\"Spending Score (1-100)\"][df.label == 2], c='green', s=60)\nax.scatter(df.Age[df.label == 3], df[\"Annual Income (k$)\"][df.label == 3], df[\"Spending Score (1-100)\"][df.label == 3], c='orange', s=60)\nax.scatter(df.Age[df.label == 4], df[\"Annual Income (k$)\"][df.label == 4], df[\"Spending Score (1-100)\"][df.label == 4], c='purple', s=60)\nax.view_init(30, 185)\nplt.xlabel(\"Age\")\nplt.ylabel(\"Annual Income (k$)\")\nax.set_zlabel('Spending Score (1-100)')\nplt.show()","4920c610":"Let us plot the Correlation between different columns","88f7f16c":"## KMeans Clustering\nNow Let us perform clustering on the given data\nWe will use Kmeans Clustering which  is one of  the simplest unsupervised  learning  algorithms  that  solve  the well  known clustering problem.\n* The procedure follows a simple and  easy  way  to classify a given data set  through a certain number of  clusters (assume k clusters)\n* The  main  idea  is to define k centers, one for each cluster. These centers  should  be placed in a cunning  way  because of  different  location  causes different  result.\n*  So, the better  choice  is  to place them  as  much as possible  far away from each other\n* The  next  step is to take each point belonging  to a  given data set and associate it to the nearest center\n*  After we have these k new centroids, a new binding has to be done  between  the same data set points  and  the nearest new center.\n*  A loop has been generated. As a result of  this loop we  may  notice that the k centers change their location step by step until no more changes  are done.","91369cff":"We will print top few rows to understand about the various data columns","b02cab7b":"Deleting CustomerID as it is not currently required.","8b7ad294":"Import the required libraries","80a562fa":"There is a very little correlation between Annual Income and Spending Score but still we will plot","e4d63a64":"Let us read the data from the csv file","49f26ee9":"Check if there is any null value in the data","3736689d":"Let us understand about the basic information of the data, like min, max, mean and standard deviation etc","16f7cda8":"# Mall Customer Segmentation Data\n###  Market Analysis\n![](https:\/\/media.giphy.com\/media\/3o6Zt3LmfCJKgpXDb2\/giphy.gif)\n## Aim\n### To perform clustering by dividing potential markets or consumers into specific groups based on similarities.\n","4c95e8f3":"#### Mean Annual Income(Male) >Mean Annual Income(Female) but mean of spending score(Male) < mean of spending score(Female)\n#### Inference obtained is that females are slightly more inclined towards shopping","eaf5c811":"Now performe Data Visualization by using Matplotlib and Seaborn Libraries","a8b7888c":"|Performing Inferential Statisitcs on data","1aa73445":"### Thankyou for your watching my kernel"}}