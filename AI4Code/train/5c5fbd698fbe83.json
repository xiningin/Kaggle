{"cell_type":{"7a7d13a5":"code","a39a2a08":"code","cda978b9":"code","fee44b55":"code","73cf935f":"code","1554fdcd":"code","964a8204":"code","34a35458":"code","8ca6e2b3":"code","f9fa419d":"code","7ebdab46":"code","430dc1d5":"code","0df905df":"markdown","235a14a7":"markdown"},"source":{"7a7d13a5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a39a2a08":"data = pd.read_csv(\"..\/input\/top50spotify2019\/top50.csv\", encoding = \"ISO-8859-1\")\ndel data[\"Unnamed: 0\"]\ndata.columns=[title.replace(\".\",\"_\") for title in data.columns]\ndata.columns = [title.split(\"_\")[0].lower() if title.split(\"_\")[-1]==\"\" else title.lower() for title in data.columns]\ndata.head()","cda978b9":"data.info()","fee44b55":"data.columns","73cf935f":"data.corr()","1554fdcd":"data.length.plot(kind=\"line\", color=\"red\", figsize=(10,10), grid=True, title=\"Length of Best Songs\", fontsize=17, linewidth=3)\nplt.xlabel(\"Songs\")\nplt.ylabel(\"Length\")\nplt.legend()\nplt.show()","964a8204":"data.beats_per_minute.plot(kind=\"hist\", bins=50, figsize=(10,10), grid=True, fontsize=17, title=\"Beats of Best Songs\")\nplt.show()","34a35458":"data.plot(kind=\"scatter\", x=\"energy\", y=\"danceability\", color=\"r\", linewidth=5, grid=True)\nplt.xlabel(\"Energy\")\nplt.ylabel(\"Danceability\")\nplt.show()","8ca6e2b3":"data.plot(kind=\"scatter\", x=\"energy\", y=\"loudness\", color=\"r\", linewidth=5, grid=True)\nplt.xlabel(\"Energy\")\nplt.ylabel(\"Loudness (dB)\")\nplt.show()","f9fa419d":"data.popularity.plot(kind=\"line\", color=\"red\", figsize=(10,10), grid=True, title=\"Popularity of Best Songs\", fontsize=17, linewidth=3)\nplt.xlabel(\"Songs\")\nplt.ylabel(\"Popularity\")\nplt.show()","7ebdab46":"print(data.genre.value_counts())","430dc1d5":"# Artists with more than 1 song in the best songs\na=data.artist_name.value_counts()\nx=a>1\nprint(a[x])","0df905df":"As you see above, best songs are popular usually. At least high than 70 point.","235a14a7":"I'm learning Data Science, yet.\n\u0130f you see mistake or you have suggestion write comment please. Thank you for understanding."}}