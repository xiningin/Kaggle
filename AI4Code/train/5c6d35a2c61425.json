{"cell_type":{"a3e0315a":"code","9b4a7001":"code","044be72a":"code","cffd7b59":"code","53abf7f1":"code","5ddb26e8":"code","dfea73cf":"code","215cc0d9":"code","4e890f28":"code","0fb46d9c":"code","e7518245":"code","70005400":"code","f1e4c609":"code","ddd1fb3a":"code","4850049d":"code","1496d614":"code","750489df":"code","2ccafa7f":"code","d9cff437":"code","06415075":"code","b615d44a":"code","4605a8f8":"code","7d706e50":"code","f8cee9f4":"code","fb7eb3be":"code","bd3ee53d":"code","c0b19116":"code","03d504ba":"code","606d85ac":"code","56e69f13":"code","d8de0fb7":"code","9bba6161":"code","7dd72fd8":"markdown","8f85a6ad":"markdown"},"source":{"a3e0315a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","9b4a7001":"from fastai.tabular import *","044be72a":"df = pd.read_csv('..\/input\/train.csv')\ndf.head()","cffd7b59":"test_df = pd.read_csv('..\/input\/test.csv')","53abf7f1":"df.columns","5ddb26e8":"len(df.columns)","dfea73cf":"df['BsmtHalfBath'].unique()","215cc0d9":"dep_var = 'SalePrice'\ncat_vars = ['MSSubClass', 'MSZoning', 'Street', 'Alley', 'LotShape', 'LandContour', 'Utilities', 'LotConfig', 'LandSlope',\n           'Neighborhood', 'Condition1', 'Condition2', 'BldgType', 'HouseStyle', 'OverallQual', 'OverallCond', 'YearBuilt',\n           'YearRemodAdd', 'RoofStyle', 'RoofMatl', 'Exterior1st', 'Exterior2nd', 'MasVnrType', 'ExterQual', 'ExterCond', \n           'Foundation', 'BsmtCond', 'BsmtExposure', 'BsmtFinType1', 'BsmtFinType2', 'Heating', 'HeatingQC', 'CentralAir',\n           'Electrical', 'Functional', 'FireplaceQu', 'GarageType', 'GarageFinish', 'GarageQual', 'GarageCond', 'PavedDrive',\n           'PoolQC', 'Fence', 'MiscFeature', 'MiscVal', 'MoSold', 'YrSold', 'SaleType', 'SaleCondition', 'BsmtQual', 'KitchenQual']\n","4e890f28":"cont_vars = ['1stFlrSF', '2ndFlrSF', '3SsnPorch', 'BedroomAbvGr',\n \n 'EnclosedPorch', 'Fireplaces', 'FullBath',\n 'GarageYrBlt', 'GrLivArea',\n 'HalfBath', 'KitchenAbvGr', \n 'LotArea', 'LotFrontage', 'LowQualFinSF', 'MasVnrArea',\n 'OpenPorchSF', 'PoolArea', 'ScreenPorch',\n 'TotRmsAbvGrd', 'WoodDeckSF']","0fb46d9c":"procs = [FillMissing, Categorify, Normalize]","e7518245":"data = (TabularList.from_df(df, cat_names=cat_vars, cont_names=cont_vars, procs=procs)\n       .split_by_rand_pct()\n       .label_from_df(cols=dep_var, label_cls=FloatList, log=True)\n        .add_test(TabularList.from_df(test_df, cat_names=cat_vars, cont_names=cont_vars))\n       .databunch())","70005400":"max_log_y = np.log(np.max(df[dep_var])*1.2)\ny_range = torch.tensor([0, max_log_y], device=defaults.device)","f1e4c609":"learn = tabular_learner(data, layers=[1000,500], y_range=y_range, metrics=exp_rmspe)","ddd1fb3a":"learn.lr_find()\nlearn.recorder.plot()","4850049d":"learn.fit_one_cycle(10, max_lr=1e-2)","1496d614":"learn.save('stage-1')","750489df":"learn.load('stage-1');","2ccafa7f":"learn.lr_find()\nlearn.recorder.plot()","d9cff437":"learn.fit_one_cycle(5, max_lr=5e-3)","06415075":"learn.save('stage-2')","b615d44a":"learn.lr_find()\nlearn.recorder.plot()","4605a8f8":"learn.fit_one_cycle(5, 3e-4)","7d706e50":"learn.save('stage-3')","f8cee9f4":"learn.lr_find()\nlearn.recorder.plot()","fb7eb3be":"learn.fit_one_cycle(5, 1e-3)","bd3ee53d":"learn.save('stage-4')","c0b19116":"def create_submission(learn:Learner, name='model'):\n    name = name + '_submission.csv'\n    \n    test_data = pd.read_csv('..\/input\/test.csv')\n    result = pd.DataFrame(columns=['Id', 'SalePrice'])\n    preds, _ = learn.get_preds(ds_type=DatasetType.Test)\n    result['SalePrice'] = np.exp(preds.data).numpy().T[0]\n    result['Id'] = test_data['Id'].T\n    return result\n    ","03d504ba":"sub = create_submission(learn)","606d85ac":"sub.head()","56e69f13":"sub.index += 1","d8de0fb7":"sub.head()","9bba6161":"results.to_csv('my_submission.csv')","7dd72fd8":"# Get Variable Types","8f85a6ad":"# Databunch"}}