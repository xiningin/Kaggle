{"cell_type":{"1bb9db27":"code","45d97f86":"code","4e9395f3":"code","801873e2":"code","1bb5f4a5":"code","8285f751":"code","8dd95117":"code","112658d6":"code","205ad435":"code","6985400c":"code","c7322e30":"code","1002b765":"code","d2fe9941":"code","d7418c0f":"code","d49849b7":"code","4711aae5":"code","1946b8e7":"code","433236ed":"code","28b7cc65":"code","094b1410":"code","46e2e3d0":"code","30c86c58":"code","fbfb1839":"code","1f0a0efa":"markdown","31560e65":"markdown","a5ff0823":"markdown"},"source":{"1bb9db27":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","45d97f86":"opioids = pd.read_csv('\/kaggle\/input\/us-opiate-prescriptions\/opioids.csv')\nopioids","4e9395f3":"overdoses = pd.read_csv('\/kaggle\/input\/us-opiate-prescriptions\/overdoses.csv')\noverdoses","801873e2":"prescribers = pd.read_csv('\/kaggle\/input\/us-opiate-prescriptions\/prescriber-info.csv')\nprescribers.head(5)","1bb5f4a5":"# Did more male or female practitioners prescribe opioids?\nprescribers['Gender'].value_counts()","8285f751":"# Which specialty of medicine prescribed opioids the most?\nprescribers['Specialty'].value_counts()","8dd95117":"# Which state had the highest number of prescribers prescribing opioids?\nprescribers['State'].value_counts()","112658d6":"AL = prescribers[prescribers['State'] == 'AL']\n\n# Labels whether or not individual prescribed opioids more than 10 times in the year\nAL = AL.drop(['NPI'], axis=1)\nAL['Totals'] = AL.sum(axis=1)\nAL\n","205ad435":"AL['Opioid.Prescriber'].value_counts()","6985400c":"AL_Totals = AL['Totals'].sum()","c7322e30":"overdoses[overdoses['Abbrev']=='AL']","1002b765":"AL_overdoses = overdoses[overdoses['Abbrev']=='AL']\nprint('Percentage of people who have overdosed out of those prescribed opoioids in Alabama: ', \n      (round((int(AL_overdoses['Deaths'])\/911474)*100, 2)))","d2fe9941":"o_list = []\nfor i in overdoses.Deaths: \n    i = int(i.replace(',', ''))\n    o_list.append(i)\nnew = pd.DataFrame(o_list, columns=['Deaths'])\noverdoses.update(new)\noverdoses\n\n","d7418c0f":"overdoses['Deaths'].max()","d49849b7":"overdoses[overdoses['Deaths']==4521]","4711aae5":"CA = prescribers[prescribers['State']=='CA']\nCA = CA.drop(['NPI'], axis=1)\nCA['Totals'] = CA.sum(axis=1)\nCA","1946b8e7":"CA['Opioid.Prescriber'].value_counts()","433236ed":"CA['Totals'].sum()","28b7cc65":"CA_overdoses = overdoses[overdoses['Abbrev']=='CA']\nprint('Percentage of people who have overdosed out of those prescribed opoioids in California: ', \n      (round((int(CA_overdoses['Deaths'])\/3127430)*100, 2)))","094b1410":"pre_list = []\nper_list = []\n\ndef percentCalc(state): \n    state1 = prescribers[prescribers['State']==state]\n    state1 = state1.drop(['NPI'], axis=1)\n    state1['Totals'] = state1.sum(axis=1)\n    p_sum = state1['Totals'].sum()\n    pre_list.append(p_sum)\n    state_overdoses = overdoses[overdoses['Abbrev']==state]\n    percentage = round((int(state_overdoses['Deaths'])\/p_sum)*100, 2)\n    per_list.append(percentage)\n\nfor state in overdoses['Abbrev']: \n    percentCalc(state)\n\noverdoses['Prescriptions'] = pre_list\noverdoses['Percentages'] = per_list\n\noverdoses","46e2e3d0":"overdoses['Percentages'].max()","30c86c58":"overdoses[overdoses['Percentages'] == 0.77]","fbfb1839":"plt.figure(figsize=(12, 8))\nsns.set()\nsns.scatterplot(x='Prescriptions', y=overdoses['Deaths'], size='Population', data=overdoses, \n                legend=False)\n\n# def label_point(x, y, val, ax):\n#     a = pd.concat({'x': x, 'y': y, 'val': val}, axis=1)\n#     for i, point in a.iterrows():\n#         ax.text(point['x']+.02, point['y'], str(point['val']))\n\n# label_point(overdoses.Prescriptions, overdoses.Deaths, overdoses.State, plt.gca())","1f0a0efa":"After initial columns with info, there is a long list of drugs with values indicating total number of prescriptions written for the year by that individual \n\nFor Opioid.Prescriber, 1 indicates the individual has prescribed opioids more than 10 times that year","31560e65":"So 244 prescribers prescribed opioids in the state of Alabama more than 10 times in the year of 2014","a5ff0823":"911,474 prescriptions were written in the year of 2014 in the state of Alabama, how does this compare with the amount of death? How drastically does it vary by state?  "}}