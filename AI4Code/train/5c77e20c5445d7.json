{"cell_type":{"b0a0a5c3":"code","395636b4":"code","d9c3df5f":"code","4e25e24c":"code","aa5b5d64":"code","9759d1f4":"code","786ca8e1":"code","daf7ab6a":"code","f7357ca2":"code","43e93f01":"code","f69e2891":"code","118e4a0b":"code","d825c10b":"code","0138a62d":"code","f36f4d03":"code","a55b1769":"code","f7f2ee71":"code","f34c07cd":"code","c23e2f75":"code","9176466b":"code","199ba7de":"code","b0976977":"code","e17b1aba":"code","61fe3ca2":"code","fb43418d":"code","a17470e2":"code","1c541b5c":"code","9e735b7c":"code","32e04f2d":"code","84f2a134":"code","ca0c354b":"code","5a3f8305":"code","ca5dbf14":"code","ec2dde6b":"code","4d9d994e":"code","0cbca108":"code","35b26ec5":"code","7a3c844b":"code","a60ebeca":"code","c26e4dae":"code","adb57d51":"code","2afbe398":"code","fe5ac69c":"code","f16a429a":"code","8d30f74a":"code","e5fc6b76":"code","4bfa5d40":"code","0ac1e3f0":"code","ec33599d":"code","e7b6ed2b":"code","1e5ecdfa":"code","e845d47a":"code","53d55079":"code","6225d213":"code","a6b401e9":"code","04061275":"code","c30fac1d":"code","2e0a217d":"code","92de113f":"code","0976800d":"code","491bbbb4":"code","7290fe75":"code","02fdd247":"code","0fff85b1":"code","85b4608a":"code","c6d7a6a1":"code","b7862cca":"code","c7aa505f":"code","f412de48":"code","85306582":"code","1796cc84":"code","d91e3768":"code","e1925af7":"code","0d4781e5":"code","f044562f":"code","087c1fb9":"code","74f6779b":"code","afd446e0":"code","90ff2b13":"code","c0f01231":"code","43e66e77":"code","2abd6220":"code","d8810a41":"code","110fa342":"code","647883a1":"code","9ac3fe61":"code","82223f2e":"code","1f0219d6":"code","c535d5c9":"code","b6a92cb5":"markdown","37ee0436":"markdown","e3e4b525":"markdown","05b3d1d0":"markdown","b879771f":"markdown","ab366372":"markdown","8f8df27d":"markdown","68a3df75":"markdown","68a353dc":"markdown"},"source":{"b0a0a5c3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nsns.set_style('whitegrid')\n\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","395636b4":"train_data = pd.read_csv('..\/input\/titanic\/train.csv')\ntest_data = pd.read_csv('..\/input\/titanic\/test.csv')\ngender_submission = pd.read_csv('..\/input\/titanic\/gender_submission.csv')","d9c3df5f":"train_data.head()","4e25e24c":"train_data.info()","aa5b5d64":"train_data.describe()","9759d1f4":"train_data.isnull().values.any()","786ca8e1":"train_data.isnull().sum()","daf7ab6a":"train_data[train_data[\"Embarked\"].isnull()]","f7357ca2":"train_data['Embarked'].unique()\ntrain_data[train_data['Embarked'].isnull()]\ntrain_data['Embarked'].value_counts(ascending=True)","43e93f01":"train_data['Embarked'].fillna('S',inplace=True)","f69e2891":"train_data[train_data[\"Embarked\"].isnull()]","118e4a0b":"train_data[train_data[\"Cabin\"].isnull()]","d825c10b":"train_data.drop(['Cabin'], 1, inplace=True)","0138a62d":"train_data.head()","f36f4d03":"train_data[train_data[\"Age\"].isnull()]","a55b1769":"train_data[train_data['Age'].isnull()].loc[:,'Survived'].mean()\ntrain_data[train_data['Age'].isnull()]['Survived'].value_counts()","f7f2ee71":"train_data['Age'] = train_data['Age'].interpolate()","f34c07cd":"print (train_data['Age'].value_counts())","c23e2f75":"train_data[train_data[\"Age\"].isnull()]","9176466b":"train_data.isnull().values.any()","199ba7de":"sns.countplot(x = \"Sex\", data = train_data)\nprint (train_data['Sex'].value_counts())","b0976977":"sns.countplot(x = \"Pclass\", data = train_data)\nprint (train_data['Pclass'].value_counts())","e17b1aba":"sns.countplot(x = \"Survived\", data = train_data)\nprint (train_data['Survived'].value_counts())","61fe3ca2":"sns.countplot(x = \"Embarked\", data = train_data)\nprint (train_data['Embarked'].value_counts())\n# Embarked is where they embarked from\n# C = Cherbourg; Q = Queenstown; S = Southampton","fb43418d":"sns.countplot(x = \"SibSp\", data = train_data)\nprint (train_data['SibSp'].value_counts())\n# SibSp = Siblings \/ Spouse","a17470e2":"sns.countplot(x = \"Parch\", data = train_data)\nprint (train_data['Parch'].value_counts())\n# Parch = Parents \/ Children","1c541b5c":"sns.histplot(x = \"Age\", data = train_data)\nprint (train_data['Age'].value_counts())","9e735b7c":"sns.histplot(x = \"Fare\", data = train_data)\nprint (train_data['Fare'].value_counts())","32e04f2d":"print (train_data['Name'].value_counts())","84f2a134":"print (train_data['Ticket'].value_counts())","ca0c354b":"train_data[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"], as_index = False).mean()","5a3f8305":"train_data.groupby([\"Survived\",\"Pclass\"])[\"Survived\"].count()","ca5dbf14":"sns.catplot(x='Pclass', col='Survived', kind='count', data=train_data)","ec2dde6b":"sns.catplot(x='Pclass',y='Survived', kind='point', data=train_data)","4d9d994e":"train_data[[\"Sex\",\"Survived\"]].groupby([\"Sex\"], as_index = False).mean()","0cbca108":"train_data.groupby([\"Survived\",\"Sex\"])[\"Survived\"].count()","35b26ec5":"sns.catplot(x='Sex', col='Survived', kind='count', data=train_data)","7a3c844b":"sns.catplot(x='Sex',y='Survived', kind='point', data=train_data)","a60ebeca":"train_data[[\"Embarked\",\"Survived\"]].groupby([\"Embarked\"], as_index = False).mean()","c26e4dae":"train_data.groupby([\"Survived\",\"Embarked\"])[\"Survived\"].count()","adb57d51":"sns.catplot(x='Embarked', col='Survived', kind='count', data=train_data)","2afbe398":"sns.catplot(x='Survived', col='Embarked', kind='count', data=train_data);","fe5ac69c":"sns.catplot(x='Embarked',y='Survived', kind='point', data=train_data)","f16a429a":"train_data[[\"SibSp\",\"Survived\"]].groupby([\"SibSp\"], as_index = False).mean()","8d30f74a":"train_data.groupby([\"Survived\",\"SibSp\"])[\"Survived\"].count()","e5fc6b76":"sns.catplot(x='SibSp', col='Survived', kind='count', data=train_data)","4bfa5d40":"sns.catplot(x='SibSp',y='Survived', kind='point', data=train_data)","0ac1e3f0":"train_data[[\"Parch\",\"Survived\"]].groupby([\"Parch\"], as_index = False).mean()","ec33599d":"train_data.groupby([\"Survived\",\"Parch\"])[\"Survived\"].count()","e7b6ed2b":"sns.catplot(x='Parch', col='Survived', kind='count', data=train_data)","1e5ecdfa":"sns.catplot(x='Parch',y='Survived', kind='point', data=train_data)","e845d47a":"sns.catplot(x='Pclass',y='Survived', hue= 'Sex', kind='point', data=train_data)","53d55079":"sns.catplot(x='Pclass',y='Survived',col='Embarked', hue= 'Sex', kind='point', data=train_data)","6225d213":"sns.catplot(x='SibSp',y='Survived',col='Pclass', kind='point', data=train_data)","a6b401e9":"sns.catplot(x='SibSp',y='Survived',col='Pclass', hue='Sex', kind='point', data=train_data)","04061275":"sns.catplot(x='Pclass',y='Survived',col='Embarked', hue= 'Sex', kind='point', data=train_data)","c30fac1d":"plt.figure(figsize=(15,8))\nsns.violinplot(x = 'Sex', y = 'Age', hue = 'Survived', data = train_data, split = True)\nplt.xticks([0,1],['Male', 'Female'])","2e0a217d":"train_data['Sex'].replace(('male','female'),(0,1),inplace=True)","92de113f":"train_data.head()","0976800d":"train_data = pd.get_dummies(train_data, columns=['Embarked'])","491bbbb4":"train_data.head()","7290fe75":"train_data.drop(['PassengerId','Name','Ticket'],1, inplace=True)","02fdd247":"plt.figure(figsize=(14,12))\nsns.heatmap(train_data.astype(float).corr(),linewidths=0.1,\n            square=True, linecolor='white', annot=True)\nplt.show","0fff85b1":"train_data.head()","85b4608a":"from sklearn.model_selection import train_test_split\n\nX = train_data.drop('Survived', axis=1)\ny = train_data['Survived']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","c6d7a6a1":"from sklearn.tree import DecisionTreeClassifier\n\ndtree = DecisionTreeClassifier()","b7862cca":"dtree.fit(X_train,y_train)","c7aa505f":"predictions = dtree.predict(X_test)","f412de48":"from sklearn.metrics import classification_report,confusion_matrix\n\nprint(classification_report(y_test,predictions))","85306582":"print(confusion_matrix(y_test,predictions))","1796cc84":"from sklearn.ensemble import RandomForestClassifier\n\nrfc = RandomForestClassifier(n_estimators=1)\nrfc.fit(X_train,y_train)","d91e3768":"predictions = rfc.predict(X_test)","e1925af7":"from sklearn.metrics import classification_report,confusion_matrix\n\nprint(classification_report(y_test,predictions))","0d4781e5":"print(confusion_matrix(y_test,predictions))","f044562f":"from sklearn.neighbors import KNeighborsClassifier","087c1fb9":"knn = KNeighborsClassifier(n_neighbors=20)","74f6779b":"knn.fit(X_train,y_train)","afd446e0":"predictions = knn.predict(X_test)","90ff2b13":"from sklearn.metrics import classification_report,confusion_matrix\n\nprint(classification_report(y_test,predictions))","c0f01231":"print(confusion_matrix(y_test,predictions))","43e66e77":"from sklearn.linear_model import LogisticRegression","2abd6220":"logreg = LogisticRegression(max_iter=500)","d8810a41":"logreg.fit(X_train,y_train)","110fa342":"predictions = logreg.predict(X_test)","647883a1":"print(classification_report(y_test, predictions))","9ac3fe61":"print(confusion_matrix(y_test,predictions))","82223f2e":"corr_matrix = train_data.corr().abs()\ncorr_matrix","1f0219d6":"plt.figure(figsize=(10,6))\ntrain_data[train_data['Survived']==1]['Age'].hist(alpha=0.5,color='blue',\n                                              bins=30,label='Survived = 1')\ntrain_data[train_data['Survived']==0]['Age'].hist(alpha=0.5,color='red',\n                                              bins=30,label='Survived = 0')\n","c535d5c9":"sns.pairplot(train_data,hue='Survived',palette='coolwarm')","b6a92cb5":"# **Solution Data Setup**","37ee0436":"# **Random Forest**","e3e4b525":"# **KNN**","05b3d1d0":"# **Initial Data Visualisation**","b879771f":"# **Data Pre-processing**","ab366372":"# **EDA**","8f8df27d":"# **Logistic Regression**","68a3df75":"# **Decision Tree**","68a353dc":"# **Initial Data Viewing**"}}