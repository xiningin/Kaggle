{"cell_type":{"e549bf07":"code","80fead1f":"code","32d40d5c":"markdown","ea8fe48f":"markdown","e9363dda":"markdown","db28ce4d":"markdown","a0eda3d3":"markdown","5bbeac96":"markdown","31a01c33":"markdown","529a3eb9":"markdown","7f7839b7":"markdown","330f2605":"markdown","151b4ca0":"markdown","beef5325":"markdown","630975e6":"markdown","a4723963":"markdown","e525baaf":"markdown","99b18b28":"markdown","b2d32209":"markdown","e491278d":"markdown"},"source":{"e549bf07":"%mkdir templates -p","80fead1f":"%%writefile templates\/home.html\n<!DOCTYPE html>\n<html>\n<head>\n\t<title>Home<\/title>\n\t<style>\n     body {\n            background-image: url(\"https:\/\/images.unsplash.com\/photo-1572375992501-4b0892d50c69?ixid=MXwxMjA3fDB8MHxzZWFyY2h8Mnx8dGV4dHxlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\");\n            text-align: center;\n            padding: 0px;\n            background-position:center; background-repeat:no-repeat; background-size:cover;\n            margin:auto;\n        }\n    body{\n    font-family: 'Poppins',sans-serif;\n}\n\nheader h1{\n    height:80px;\n    padding-top:40px;\n    background-color:#f2f2f2;\n    color:#000000;\n}\n\nsection{\n    margin-top: 100px;\n    padding: 0 30px;\n    text-align: justify;\n    line-height: 30px;\n}\nsection h1{\n    font-size: 42px;\n    text-align: center;\n    margin: 50px 0;\n    line-height:50px;\n}\n.text-box h1{\n    font-weight: 400;\n    font-size: 35px;\n    letter-spacing: 1px;\n}\ntextarea{\n    height:150px;\n    width:70%;\n    font-size:20px;\n    border: 2px solid red;\n    border-radius: 6px;\n}\n\n.ml-container h4{\ntext-align:center;\nbackground-color: #f2f2f2;\npadding-top:10px;\nmargin-top:4px;\nborder-radius:15px;\nwidth:600px;\nheight:30px;\nmargin:auto;\n}\n\n.btn-info{\nwidth: 200px;\nheight: 50px;\nmargin:auto;\ntext-align: center;\ndisplay:block;\nborder-radius: 16px;\nfont-size: 18px;\nbackground-color: blue;\ncolor: white;\n}\n    <\/style>\n<\/head>\n<body>\n\n    <header>\n        <div class=\"text-box\">\n            <h1><b>Toxic Comment Classifier<\/b><\/h1>\n        <\/div>\n    <\/header>\n    <br>\n\t<div class=\"ml-container\">\n\n\t\t<form action=\"{{ url_for('predict')}}\" method=\"POST\">\n\t\t<h4>Enter Comment<\/h4>\n        <br>\n\t\t<!-- <input type=\"text\" name=\"comment\"\/> -->\n\t\t<textarea name=\"message\" rows=\"6\" cols=\"50\"><\/textarea>\n\t\t<br\/>\n\n\t\t<input type=\"submit\" class=\"btn-info\" value=\"Submit\">\n\t\t<\/form>\n    <\/div>\n    <br>\n\n\t<div class=\"results\">\n\n\n\t<br><br><h1><font-color=\"black\">{{ prediction }}<\/font><h1>\t\n\t{% if prediction == 1%}\n\t<h2 style=\"color:red;\">Oops! This comment is nasty <\/h2>\n\t{% elif prediction == 0%}\n\t<h2 style=\"color:blue;\">Yayy! This comment contains no obscene words<\/h2>\n\t{% endif %}\n\n\t<\/div>\n\t\n\n<\/body>\n<\/html>","32d40d5c":"**If you face any problem feel free to ask me on LinkedIn or in comment section and do upvote if you like it**","ea8fe48f":"# Heroku","e9363dda":"**So I have also deployed the model on heroku.You can check it out and test it just by clicking this link : https:\/\/toxic-comment-prediction.herokuapp.com\/**","db28ce4d":"First of all we have to download libraries in our google colab.So I am listing all the libaries you need to import for running flask application in colab.:\n\n*!pip install flask_cors*<br>\n*!pip install flask-ngrok*<br>\n*from flask_ngrok import run_with_ngrok*<br>\n*from flask import Flask*","a0eda3d3":"# Load Models in Colab\nSo we have to load our model in colab.We are going to load model that we have saved in our previous notebook.You can check out those models in bottom of previous notebook.For loading model in colab the command is:\n\n*from google.colab import files*<br>\n*uploaded = files.upload()*","5bbeac96":"After running the cell click on http:\/\/efc5a51ee8fb.ngrok.io and now you are done.Here is what it looks like:","31a01c33":"# Make a templates folder","529a3eb9":"I am going to make a flask application which will going to classify weather a comment is toxic or not.I have done EDA and made models on this problem.Have a look at it : https:\/\/www.kaggle.com\/dikshabhati2002\/toxic-comment-nlp-and-eda","7f7839b7":"One month ago I have made a whole flask application in google colab.I did it because my laptop is very old and I am not able to install anyting in it.I want to deploy a model and the only way was to write whole application in colab only.Yesterday I thought about it that there are people like me in the same condition who are not able to set up the environment.So,I have decided to make a notebook in which I am going to run a flask application in colab.Without wasting much time let's get started.","330f2605":"# Import Libraries","151b4ca0":"**Here is the whole code that you have to run.It will create a HTML file in colab only:**\n\n    ","beef5325":"# Flask\n","630975e6":"# HTML file ","a4723963":"\n\nfrom flask import Flask,render_template,url_for,request<br>\nimport pandas as pd<br>\nimport pickle<br>\nfrom sklearn.feature_extraction.text import CountVectorizer<br>\nfrom sklearn.naive_bayes import MultinomialNB<br>\nfrom sklearn.externals import joblib<br>\nimport pickle<br>\n\n##### load the model <br>\nfilename = 'toxic.pkl'<br>\nclf = pickle.load(open(filename, 'rb'))<br>\ncv=pickle.load(open('transform.pkl','rb'))<br>\napp = Flask(__name__)<br>\nrun_with_ngrok(app)<br>\n\n@app.route('\/')<br>\ndef home():<br>\n\treturn render_template('home.html')<br>\n\n@app.route('\/predict',methods=['POST'])<br>\ndef predict():<br>\n\n\n\tif request.method == 'POST':<br>\n\t\tmessage = request.form['message']<br>\n\t\tdata = [message]<br>\n\t\tvect = cv.transform(data).toarray()<br>\n\t\tmy_prediction = clf.predict(vect)<br>\n\treturn render_template('home.html',prediction = my_prediction)<br>\n\n\n\nif __name__ == '__main__':<br>\n\tapp.run()<br>","e525baaf":"![WhatsApp%20Image%202021-02-24%20at%209.06.35%20AM.jpeg](attachment:WhatsApp%20Image%202021-02-24%20at%209.06.35%20AM.jpeg)","99b18b28":"**Now it's time to write a flask code.The command to run a flask app in colab is this command *run_with_ngrok(app)*.With the help of ngrok we can run flask in colab.Here is the flask code:**","b2d32209":"For creating a HTML file in colab there is a simple command that is *%%writefile*.So we have a save a html file code in templates folder for that we will going to write this command:\n\n*%%writefile templates\/home.html*","e491278d":"Now we have installed all the libraries and load the models our next step is to make a templates folder.This is the command for making template folder:\n"}}