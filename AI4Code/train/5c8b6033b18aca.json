{"cell_type":{"3a53823a":"code","5676ec6f":"code","9e1073d5":"code","c53a108b":"code","ffc1d745":"code","47de0a06":"markdown","a251e59e":"markdown","44dae096":"markdown","d5d91987":"markdown","269a36d2":"markdown","5dd52322":"markdown"},"source":{"3a53823a":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nimport sklearn.metrics as sm\n#Amulya lab task1","5676ec6f":"dataset = pd.read_csv('..\/input\/salary-data-simple-linear-regression\/Salary_Data.csv')\nX = dataset[['YearsExperience']].to_numpy()\ny = dataset[['Salary']].to_numpy()\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.20,random_state=5)#the value of test_size has to be changed according to the question\n#The shape for test and train are printed for analysis\nprint(X_train.shape)\nprint(X_test.shape)\n","9e1073d5":"model = LinearRegression()\nmodel.fit(X_train,y_train)\ny_pred = model.predict(X_test)\n","c53a108b":"def mse_func(y_test,y_pred):\n  s = (y_test-y_pred)**2\n  s = np.sum(s)\n  s = s\/len(y_test)\n  return (s)\ndef rmse_func(y_test,y_pred):\n  return (mse_func(y_pred,y_test))**0.5\n","ffc1d745":"plt.figure()\nplt.scatter(X_test,y_test)\nplt.plot(X_test,y_pred,color='black',linewidth=4)\nplt.xticks(())\nplt.yticks(())\nplt.show()\n#lab task amulya_ponnuru\nprint('Mean Square error: ',round(sm.mean_squared_error(y_test,y_pred,squared=True),2))\nprint('Root Mean Square error: ',round(sm.mean_squared_error(y_test,y_pred,squared=False),2))\nprint('MSE calculated: ',mse_func(y_test,y_pred))\nprint('RMSE calculated: ',rmse_func(y_test,y_pred))\n","47de0a06":"# **An oblect for linear regression is created and trained with X_train and y_train**","a251e59e":"# **Importing all the required libraries**","44dae096":"# **Manual calculation for mean squared error and root mean squared error**","d5d91987":"# **Plot for better analysis**","269a36d2":"# **Read the dataset and separate the columns into X(features) and y(classes). Split the data into testing and training sets**","5dd52322":"![image.png](attachment:image.png)"}}