{"cell_type":{"fbb223c2":"code","c7d65c2c":"code","b536df2d":"code","67eb5879":"code","0d08acf1":"code","66fa3c8c":"code","92f7b85b":"code","95a39a03":"code","c8f3b91a":"code","49163a1c":"code","4a1d5e56":"markdown","2bc7cdb1":"markdown","aee85147":"markdown","8b76c70c":"markdown","2cf5a848":"markdown","083d048c":"markdown","d325a6a9":"markdown","394ac4bf":"markdown"},"source":{"fbb223c2":"import pandas as pd\nfrom nltk.sentiment.vader import SentimentIntensityAnalyzer\nsid = SentimentIntensityAnalyzer()","c7d65c2c":"dataset = '..\/input\/amazon_alexa.tsv'\nreviews_df = pd.read_csv(dataset, sep='\\t', index_col=0, header=0)","b536df2d":"vader_score = []\nvader_class = []\n\nfor review in reviews_df.verified_reviews:\n    ss = sid.polarity_scores(review)\n    compound_score = ss.get('compound')\n    vader_score.append(compound_score)\n    if (compound_score >= 0):\n        vader_class.append(1)\n    else:\n        vader_class.append(0)\n        \nreviews_df['vader_score'] = vader_score\nreviews_df['vader_class'] = vader_class","67eb5879":"reviews_df.loc[~(reviews_df['feedback'] == reviews_df['vader_class'])]","0d08acf1":"from nltk.corpus import stopwords\nfrom nltk.tokenize import word_tokenize\nimport string\n\ndef remove_stopwords(text):\n    #tokenization\n    tokens = word_tokenize(text) \n    \n    #stopwords removal\n    temp = [word for word in tokens if word not in stopwords.words('english')]\n    \n    #detokenization\n    return \"\".join([\" \"+i if not i.startswith(\"'\") and i not in string.punctuation else i for i in temp]).strip()","66fa3c8c":"vader_score = []\nvader_class = []\n\nfor review in reviews_df.verified_reviews:\n    ss = sid.polarity_scores(remove_stopwords(review))\n    compound_score = ss.get('compound')\n    vader_score.append(compound_score)\n    if (compound_score >= 0):\n        vader_class.append(1)\n    else:\n        vader_class.append(0)\n        \nreviews_df['vader_score'] = vader_score\nreviews_df['vader_class'] = vader_class","92f7b85b":"reviews_df.loc[~(reviews_df['feedback'] == reviews_df['vader_class'])]","95a39a03":"example = \"It's got great sound and bass but it doesn't work all of the time. Its still hot or miss when it recognizes things\"","c8f3b91a":"ss = sid.polarity_scores(example)\nss.get('compound')","49163a1c":"ss = sid.polarity_scores(remove_stopwords(example))\nss.get('compound')","4a1d5e56":"### References:\n    1. VADER Paper : http:\/\/comp.social.gatech.edu\/papers\/icwsm14.vader.hutto.pdf\n    2. Dataset : https:\/\/www.kaggle.com\/sid321axn\/amazon-alexa-reviews\n    3. Simpler Explanation of VADER : https:\/\/datameetsmedia.com\/vader-sentiment-analysis-explained\/","2bc7cdb1":"#### Stopwords removed\n\"It's got great sound bass n't work time. Its still hot miss recognizes things\"","aee85147":"#### Method used:\n\n* VADER compound polarity score is used\n* This score varies from -1 to +1\n* We count compound score 0 as positive marker","8b76c70c":"#### Results (after pre-processing) : 90.86% (287 \/ 3150 samples labelled incorrectly)","2cf5a848":"## Discussion:\n\nStopwords removal does not yield better results because VADER uses words such as but in calculating the compuond score.","083d048c":"#### Results (no pre-processing) : 90.76% (291 \/ 3150 samples labelled incorrectly)","d325a6a9":"# Sentiment intensity analysis of Alexa reviews using VADER\n\n* VADER Summary : a lexicon-based sentiment intensity analyzer with crowd sourced dictionaries.\n\n* Four Heuristics of VADER:\n    1. Emoticons (e.g. ! has value)\n    2. Capitalization (AMAZING vs Amazing)\n    3. Degree modifiers ('effing cute' vs 'sort of cute')\n    4. Shift in polarity due to but (e.g. I love you, but I don't want to be with you anymore)","394ac4bf":"#### With stopwords\n\"It's got great sound and bass but it doesn't work all of the time. Its still hot or miss when it recognizes things\""}}