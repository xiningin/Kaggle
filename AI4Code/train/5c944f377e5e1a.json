{"cell_type":{"edfc0f91":"code","bb754455":"code","16b25061":"code","7b8b6185":"code","8f21b355":"code","5406259a":"code","d74a2859":"code","58bdc76a":"code","515c9df0":"code","834a029b":"code","f6e68268":"code","6af71004":"code","68fa1e26":"code","ab258945":"code","75abffbe":"code","7996f977":"code","cc694ad9":"code","5901d99d":"code","e218a02b":"code","468a2192":"code","2f561acc":"code","280f0ca6":"code","78ccc401":"code","cde8f1d9":"code","5854d53c":"code","19af6e80":"markdown","eb68fd94":"markdown","507dc6d7":"markdown","bf143bf2":"markdown","3556ac52":"markdown","e591f28c":"markdown","89320f9b":"markdown","c788389a":"markdown","b65046f7":"markdown","e8e329a2":"markdown","8a28f1ef":"markdown","840cda22":"markdown","e7f64820":"markdown","6e485657":"markdown","0484245d":"markdown","aa198b7d":"markdown","1751a5ce":"markdown","733d7b22":"markdown","407cf7b1":"markdown","7d57d860":"markdown","f51b1511":"markdown","672156ff":"markdown","2d40453e":"markdown","4708b691":"markdown","f946f53b":"markdown","967e60cb":"markdown"},"source":{"edfc0f91":"import numpy                as np\nimport pandas               as pd\nimport matplotlib.pyplot    as plt\nimport seaborn              as sns\nimport plotly.graph_objects as go\n\nfrom termcolor             import colored\nfrom scipy.stats           import norm\nfrom sklearn.preprocessing import MultiLabelBinarizer \n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","bb754455":"df = pd.read_csv(\"..\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv\")\ndf.head()","16b25061":"print(colored(\"There are {} rows and {} columns in the dataset.\".format(df.shape[0],df.shape[1]),attrs=['bold']))","7b8b6185":"df.info()","8f21b355":"mask = np.triu(np.ones_like(df.corr(), dtype=bool))\nf, ax = plt.subplots(figsize=(11, 9))\ncmap = sns.diverging_palette(230, 20, as_cmap=True)\n\nsns.heatmap(df.corr(),annot=True, mask=mask, cmap=cmap, vmax=.3, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})\nplt.title(\"Correlation Matrix using HeatMap\",fontweight=\"bold\")\nplt.show()","5406259a":"plt.figure(figsize=(10,5))\nplt.pie(df['Genre'].value_counts().sort_values(),labels=df['Genre'].value_counts().index,explode=[0.05,0],\n        autopct='%1.2f%%',colors=['Green','grey'])\nplt.subplots_adjust(bottom=0, top=0.93, left=0.5, right=1)\nplt.title(\"Distribution of Best Selling Books based on Genre\",fontweight=\"bold\")\nplt.show()","d74a2859":"a_year_ur = []\na_nf_ur = []\na_f_ur =[]\n\nyear = df['Year'].unique().tolist()\nyear.sort()\n\nfor i in year:\n    a = df[df['Year']==i]\n    a_nf_ur.append(round(df[(df['Year']==i)&(df['Genre']=='Non Fiction')]['User Rating'].mean(),2))\n    a_f_ur.append(round(df[(df['Year']==i)&(df['Genre']=='Fiction')]['User Rating'].mean(),2))\n    a_year_ur.append(i)\n    \n    a_df = {'year': a_year_ur, 'Non Fiction': a_nf_ur, 'Fiction': a_f_ur} \n    a_df = pd.DataFrame(a_df) ","58bdc76a":"import plotly.graph_objects as go\n\nfig = go.Figure()\n\nfig.add_trace(go.Bar(x=a_df['year'], y=a_df['Non Fiction'], name='Non Fiction', marker_color='rgb(55, 83, 109)',\n                     text=a_df['Non Fiction'], textposition='auto'))\nfig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\n\nfig.add_trace(go.Bar(x=a_df['year'], y=a_df['Fiction'], name='Fiction', marker_color='rgb(26, 118, 255)',\n                     text=a_df['Fiction'], textposition='auto'))\nfig.update_traces(texttemplate='%{text:.3s}', textposition='outside')\n\nfig.update_layout(title=dict(text='<b>User rating - Genre wise<\/b>', x=0.5, y=0.95, font=dict(family=\"Arial\",size=30)),\n                  xaxis_title=\"Year\", yaxis_title=\"Rating\", uniformtext_minsize=5,barmode='group', bargap=0.2,\n                  bargroupgap=0.2, title_x=0.5)\n\nfig.show()","515c9df0":"b_year_ur = []\nb_nf_ur = []\nb_f_ur =[]\n\nyear = df['Year'].unique().tolist()\nyear.sort()\n\nfor i in year:\n    b = df[df['Year']==i]\n    b_nf_ur.append(round(df[(df['Year']==i)&(df['Genre']=='Non Fiction')]['Reviews'].mean()))\n    b_f_ur.append(round(df[(df['Year']==i)&(df['Genre']=='Fiction')]['Reviews'].mean()))\n    b_year_ur.append(i)\n    \n    b_df = {'year': b_year_ur, 'Non Fiction': b_nf_ur, 'Fiction': b_f_ur} \n    b_df = pd.DataFrame(b_df) ","834a029b":"b_df['total_reviews'] = b_df['Non Fiction']+b_df['Fiction']\nb_df['nf_percent'] = b_df['Non Fiction'].apply(lambda x : 100*x\/sum(b_df['Non Fiction']))\nb_df['f_percent'] = b_df['Fiction'].apply(lambda x : 100*x\/sum(b_df['Fiction']))\nb_df['total_reviews_percent'] = b_df['total_reviews'].apply(lambda x : 100*x\/sum(b_df['total_reviews']))\n\n\nt1 = go.Scatter(x=b_df['year'], y=b_df[\"Non Fiction\"], name=\"Non Fiction\", marker=dict(color=\"#a678de\"))\nt2 = go.Scatter(x=b_df['year'], y=b_df[\"Fiction\"], name=\"Fiction\", marker=dict(color=\"#6ad49b\"))\nt3 = go.Scatter(x=b_df['year'], y=b_df[\"total_reviews\"], name=\"Total Review\", marker=dict(color=\"brown\"))\n\ndata = [t1, t2, t3]\n\nlayout = go.Layout(title=\"<b>Reviews over the years<\/b>\", legend=dict(x=0.1, y=1.1, orientation=\"h\"))\nfig = go.Figure(data, layout=layout)\nfig.update_layout(xaxis_title=\"Year\", yaxis_title=\"Number of Reviews\",title_x=0.5)\nfig.show()","f6e68268":"# Top3 author from each genre each year\nc_year_ur = []\nc_nf_ur = []\nc_f_ur =[]\n\nyear = df['Year'].unique().tolist()\nyear.sort()\n\nfor i in year:\n    c = df[df['Year']==i]\n    c_nf_ur.append(str(df[(df['Year']==i)&(df['Genre']=='Non Fiction')]['Author'].value_counts().\n                       head(3).index.tolist())[1:-1])\n    c_f_ur.append(str(df[(df['Year']==i)&(df['Genre']=='Fiction')]['Author'].value_counts().\n                      head(3).index.tolist())[1:-1])\n    c_year_ur.append(i)\n    \n    c_df = {'year': c_year_ur, 'Non Fiction': c_nf_ur, 'Fiction': c_f_ur} \n    c_df = pd.DataFrame(c_df) ","6af71004":"c_df['author_name_nf'] = c_df['Non Fiction'].apply(lambda x :  x.replace(' ,',',').replace(', ',',').split(',')) \nauthor_count = []\nfor i in c_df['author_name_nf']: author_count += i\n\nauthor_dict = dict((i, author_count.count(i)) for i in author_count)\n\nc_df_author_count = pd.DataFrame(author_dict.values(),author_dict.keys()).reset_index().sort_values(\n    0,ascending=False).rename(columns = {'index' : 'author_name_nf', 0 : 'count'})\n\nc_df_author_count['author_name_nf'] = c_df_author_count['author_name_nf'].apply(lambda x :  x.replace(\"'\",'')) ","68fa1e26":"plt.figure(figsize=(15,5))\nsns.barplot(x='author_name_nf',y='count',data=c_df_author_count,palette=\"RdGy\")\nplt.title(\"Number of times author in top3 - Non Friction\",fontweight=\"bold\")\nplt.xticks(rotation=90)\nplt.xlabel('Author Name',fontweight=\"bold\",fontsize=10)\nplt.ylabel('Count',fontweight=\"bold\",fontsize=10)\nplt.show()","ab258945":"c_df['author_name_f'] = c_df['Fiction'].apply(lambda x :  x.replace(' ,',',').replace(', ',',').split(',')) \nauthor_count = []\nfor i in c_df['author_name_f']: author_count += i\n\nauthor_dict = dict((i, author_count.count(i)) for i in author_count)\n\nc_df_author_count = pd.DataFrame(author_dict.values(),author_dict.keys()).reset_index().sort_values(\n    0,ascending=False).rename(columns = {'index' : 'author_name_f', 0 : 'count'})\n\nc_df_author_count['author_name_f'] = c_df_author_count['author_name_f'].apply(lambda x :  x.replace(\"'\",'')) ","75abffbe":"plt.figure(figsize=(15,5))\nsns.barplot(x='author_name_f',y='count',data=c_df_author_count,palette=\"RdGy\")\nplt.title(\"Number of times author in top3 - Friction\",fontweight=\"bold\")\nplt.xticks(rotation=90)\nplt.xlabel('Author Name',fontweight=\"bold\",fontsize=10)\nplt.ylabel('Count',fontweight=\"bold\",fontsize=10)\nplt.show()","7996f977":"df['Author'].value_counts().head(10).index","cc694ad9":"plt.figure(figsize=(15,5))\nsns.barplot(x=df['Author'].value_counts().head(10).index, y=df['Author'].value_counts().head(10).values,palette=\"RdGy\")\n#df['Author'].value_counts().head(10).plot(kind='bar',color='pink')\nplt.xlabel('Author Name',fontweight=\"bold\",fontsize=10)\nplt.ylabel('Count',fontweight=\"bold\",fontsize=10)\nplt.title('Top10 Authors with number of Best Selling books',fontweight=\"bold\")\nplt.xticks(rotation=45)\nplt.show()","5901d99d":"plt.figure(figsize=(15,8))\ndf['Name'].value_counts().head(10).plot(kind='barh',color='grey')\nplt.xlabel('Book Name',fontweight=\"bold\",fontsize=13)\nplt.ylabel('Count',fontweight=\"bold\",fontsize=13)\ny=df['Name'].value_counts().head(10)\nfor index, value in enumerate(y):\n    plt.text(value, index, str(value), fontsize=15)\nplt.title(\"Top10 - Number of times Best Selling books\",fontweight=\"bold\",fontsize=20)\nplt.show()","e218a02b":"plt.figure(figsize=(15,5))\nsns.distplot(df['User Rating'],fit=norm,kde=False,color=['green'])\nplt.axvline(df['User Rating'].mean(),color='red')\nplt.axvline(df['User Rating'].median(), color='blue')\nplt.title('Distplot with Normal distribution for User rating',fontweight=\"bold\")\nplt.xlabel('User Ratings',fontweight=\"bold\",fontsize=10)\n\nprint(\"The mean of User Rating is: {}\".format(df['User Rating'].mean()))\nprint(\"The median of User Rating is: {}\".format(df['User Rating'].median()))\n\nplt.show()","468a2192":"plot_df = df.groupby(['Name']).agg({'Reviews':sum}).reset_index().sort_values(\n    'Reviews',ascending=False).head(10)\n\nplt.figure(figsize=(15,7))\nsns.barplot(y='Name',x='Reviews',data=plot_df)\ny=plot_df['Reviews']\nfor index, value in enumerate(y):\n    plt.text(value, index, str(value),fontsize=12)\nplt.title('Top10 Reviewed Books',fontweight=\"bold\",fontsize=20)\nplt.xlabel('Reviews',fontweight=\"bold\",fontsize=13)\nplt.ylabel('Name',fontweight=\"bold\",fontsize=13)\nplt.show()\nprint(colored(\"Top reviewed book is {} with {} reviews.\".format(str(plot_df[0:1]['Name'].values)[2:-2],\n                                                        str(plot_df[0:1]['Reviews'].values)[1:-1]),attrs=['bold']))\n\n\nplot_df = df.groupby(['Name']).agg({'Reviews':sum}).reset_index().sort_values(\n    'Reviews').head(10)\n\nplt.figure(figsize=(15,7))\nsns.barplot(y='Name',x='Reviews',data=plot_df)\ny=plot_df['Reviews']\nfor index, value in enumerate(y):\n    plt.text(value, index, str(value), fontsize=15)\nplt.title('Bottom10 Reviewed Books',fontweight=\"bold\",fontsize=20)\nplt.xlabel('Reviews',fontweight=\"bold\",fontsize=13)\nplt.ylabel('Name',fontweight=\"bold\",fontsize=13)\n\nplt.show()\nprint(colored(\"Top reviewed book is {} with {} reviews.\".format(str(plot_df[0:1]['Name'].values)[2:-2],\n                                                        str(plot_df[0:1]['Reviews'].values)[1:-1]),attrs=['bold']))","2f561acc":"plot_df = df[df['Genre']=='Non Fiction'].groupby(['Name']).agg({'Reviews':sum}).reset_index().sort_values(\n    'Reviews',ascending=False).head(10)\n\nplt.figure(figsize=(15,7))\nsns.barplot(y='Name',x='Reviews',data=plot_df)\ny=plot_df['Reviews']\nfor index, value in enumerate(y):\n    plt.text(value, index, str(value),fontsize=12)\nplt.title('Top10 Reviewed Books - Non Fiction',fontweight=\"bold\",fontsize=20)\nplt.xlabel('Reviews',fontweight=\"bold\",fontsize=13)\nplt.ylabel('Name',fontweight=\"bold\",fontsize=13)\nplt.show()\nprint(colored(\"Top reviewed Non fiction book is {} with {} reviews.\".format(str(plot_df[0:1]['Name'].values)[2:-2],\n                                                        str(plot_df[0:1]['Reviews'].values)[1:-1]),attrs=['bold']))\n\n\nplot_df = df[df['Genre']=='Non Fiction'].groupby(['Name']).agg({'Reviews':sum}).reset_index().sort_values(\n    'Reviews').head(10)\n\nplt.figure(figsize=(15,7))\nsns.barplot(y='Name',x='Reviews',data=plot_df)\ny=plot_df['Reviews']\nfor index, value in enumerate(y):\n    plt.text(value, index, str(value),fontsize=12)\nplt.title('Bottom10 Reviewed Books - Non Fiction',fontweight=\"bold\",fontsize=20)\nplt.xlabel('Reviews',fontweight=\"bold\",fontsize=13)\nplt.ylabel('Name',fontweight=\"bold\",fontsize=13)\nplt.show()\nprint(colored(\"Bottom reviewed Non fiction book is {} with {} reviews.\".format(str(plot_df[0:1]['Name'].values)[2:-2],\n                                                        str(plot_df[0:1]['Reviews'].values)[1:-1]),attrs=['bold']))","280f0ca6":"plot_df = df[df['Genre']=='Fiction'].groupby(['Name']).agg({'Reviews':sum}).reset_index().sort_values(\n    'Reviews',ascending=False).head(10)\n\nplt.figure(figsize=(15,7))\nsns.barplot(y='Name',x='Reviews',data=plot_df)\ny=plot_df['Reviews']\nfor index, value in enumerate(y):\n    plt.text(value, index, str(value),fontsize=12)\nplt.title('Top10 Reviewed Books - Fiction',fontweight=\"bold\",fontsize=20)\nplt.xlabel('Reviews',fontweight=\"bold\",fontsize=13)\nplt.ylabel('Name',fontweight=\"bold\",fontsize=13)\nplt.show()\nprint(colored(\"Top reviewed Fiction book is {} with {} reviews.\".format(str(plot_df[0:1]['Name'].values)[2:-2],\n                                                        str(plot_df[0:1]['Reviews'].values)[1:-1]),attrs=['bold']))\n\nplot_df = df[df['Genre']=='Fiction'].groupby(['Name']).agg({'Reviews':sum}).reset_index().sort_values(\n    'Reviews').head(10)\n\nplt.figure(figsize=(15,7))\nsns.barplot(y='Name',x='Reviews',data=plot_df)\ny=plot_df['Reviews']\nfor index, value in enumerate(y):\n    plt.text(value, index, str(value),fontsize=12)\nplt.title('Bottom10 Reviewed Books - Fiction',fontweight=\"bold\",fontsize=20)\nplt.xlabel('Reviews',fontweight=\"bold\",fontsize=13)\nplt.ylabel('Name',fontweight=\"bold\",fontsize=13)\nplt.show()\nprint(colored(\"Bottom reviewed Fiction book is {} with {} reviews.\".format(str(plot_df[0:1]['Name'].values)[2:-2],\n                                                        str(plot_df[0:1]['Reviews'].values)[1:-1]),attrs=['bold']))","78ccc401":"df_price = df.groupby(['Name', 'Author', 'Genre'], as_index=False)['Price'].mean()\ndf_price_top10 = df.groupby(['Name', 'Author', 'Genre'], as_index=False)['Price'].mean().sort_values(\n    'Price', ascending=False).head(10)\n\nplt.figure(figsize=(15,7))\nsns.barplot(y='Name',x='Price',data=df_price_top10,hue='Genre')\ny=df_price_top10['Price']\nfor index, value in enumerate(y):\n    plt.text(value, index, str(value),fontsize=12)\nplt.title(\"Top10 most expensive Bestselling Books\",fontweight=\"bold\")\nplt.xticks(rotation=90)\nplt.xlabel('Price',fontweight=\"bold\",fontsize=10)\nplt.ylabel('Book Name',fontweight=\"bold\",fontsize=10)\nplt.show()","cde8f1d9":"plt.figure(figsize=(15,5))\nsns.distplot(df_price['Price'],fit=norm,kde=False,color=['green'])\nplt.axvline(df_price['Price'].mean(),color='red')\nplt.axvline(df_price['Price'].median(), color='blue')\nplt.title('Distplot with Normal distribution for Price',fontweight=\"bold\")\nplt.xlabel('Price',fontweight=\"bold\",fontsize=10)\n\nprint(\"The mean of Price is: {}\".format(df_price['Price'].mean()))\nprint(\"The median of Price is: {}\".format(df_price['Price'].median()))\n\nplt.show()","5854d53c":"df_price_yearwise = df.groupby(['Year','Genre'], as_index=False)['Price'].mean()\ndf_price_yearwise_togather = df.groupby(['Year'], as_index=False)['Price'].mean()\ndf_price_yearwise_f = df_price_yearwise[df_price_yearwise['Genre']=='Fiction']\ndf_price_yearwise_nf = df_price_yearwise[df_price_yearwise['Genre']=='Non Fiction']\n\nt1 = go.Scatter(x=df_price_yearwise_nf['Year'], y=df_price_yearwise_nf[\"Price\"], name=\"Non Fiction\",\n                marker=dict(color=\"#a678de\"))\nt2 = go.Scatter(x=df_price_yearwise_f['Year'], y=df_price_yearwise_f[\"Price\"], name=\"Fiction\",\n                marker=dict(color=\"#6ad49b\"))\nt3 = go.Scatter(x=df_price_yearwise_togather['Year'], y=df_price_yearwise_togather[\"Price\"], name=\"Combined\",\n                marker=dict(color=\"brown\"))\n\ndata = [t1, t2, t3]\n\nlayout = go.Layout(title=\"<b>Avg. Price of Bestselling Books<\/b>\", legend=dict(x=0.1, y=1.1, orientation=\"h\"))\nfig = go.Figure(data, layout=layout)\nfig.update_layout(xaxis_title=\"Year\", yaxis_title=\"Price\",title_x=0.5)\nfig.show()","19af6e80":"# Avg. Price of Bestselling Books:","eb68fd94":"- There is **positive correlation** between:\n    - **'Reviews'** and **'Year'**\n    - **'User Rating'** and **'Year'**\n- There is **negative correlation** between:\n    - **'Price'** and **'User Rating'**\n    - **'Price'** and **'Year'**\n    - **'Price'** and **'Reviews'**","507dc6d7":"- The is **not much difference** in average user rating between the genre.","bf143bf2":"# Distplot with Normal distribution for Price:","3556ac52":"# Distplot with Normal distribution for User rating:","e591f28c":"# Best Selling Book's Author:","89320f9b":"# Importing Import Libraries:","c788389a":"# Genre Type:","b65046f7":"# Top10 most expensive Bestselling Books:","e8e329a2":"# Top10 and Bottom10 Best Selling Books based on Reviews:","8a28f1ef":"# Number of times Best Selling books - Top10:","840cda22":"- Reviews over the year for the both the genre are showing **positive trend** till 2018\n- There is **dip** in reviews in **Fiction Genre** from **2015** to **2018** where as its **positive** for **Non Fiction** in same time span","e7f64820":"# Correlation Matrix:","6e485657":"- Top 10 authors with most Best Sellling books","0484245d":"- Almost **56%** rated as best selling books are Fiction","aa198b7d":"# Top10 and Bottom10 Best Selling Books based on Reviews - Fiction:","1751a5ce":"#  Loading and Reading the dataset:","733d7b22":"- **\"Publication Manual of the American Psychological Association, 6th Edition\"** has won most number of times Best selling Books.","407cf7b1":"# Top10 and Bottom10 Best Selling Books based on Reviews - Non Fiction:","7d57d860":"# Average User Rating Genrewise over the Years:","f51b1511":"# Reviews over the year genrewise:","672156ff":"- Number of times author's book are on **top3 best selling** in Fiction Genre for a perticular year \n- i.e. **Jeff Kinney's** books were in **top3** for **six** years","2d40453e":"![top-50-amazon-bestseller-all-natural-spirit2.png](attachment:top-50-amazon-bestseller-all-natural-spirit2.png)","4708b691":"# Authors with number of Best Selling books - Top10:","f946f53b":"- Number of times author's book are on **top3 best selling** in Non Fiction Genre for a perticular year \n- i.e. **Rob Elliott's** books were in **top3** for **three** years","967e60cb":"# Finding Dtypes and missing values in columns:"}}