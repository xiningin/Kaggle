{"cell_type":{"dbd7737a":"code","b97574fb":"code","db57f7f9":"code","92e25c9c":"code","f1125cc9":"code","84f81d99":"code","9665a331":"code","6ad019bd":"code","007d2c99":"code","fe4d17cd":"code","53dd213f":"code","faf8ef47":"markdown","76724c9c":"markdown","1a8821b9":"markdown","70dfe0a0":"markdown","e7ecf47a":"markdown","fbd457b5":"markdown","ab528427":"markdown","90aee66e":"markdown"},"source":{"dbd7737a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b97574fb":"# import datasets\ntrain = pd.read_csv('..\/input\/tabular-playground-series-sep-2021\/train.csv')\ntest = pd.read_csv('..\/input\/tabular-playground-series-sep-2021\/test.csv')\nsubmission = pd.read_csv('..\/input\/tabular-playground-series-sep-2021\/sample_solution.csv')","db57f7f9":"train.head()","92e25c9c":"!pip install ctgan","f1125cc9":"!pip install table_evaluator #That help us in comparing the results with the original data.","84f81d99":"train.isnull().sum()","9665a331":"#Code by Parul Pandey  https:\/\/www.kaggle.com\/parulpandey\/a-guide-to-handling-missing-values-in-python\n\n\nfrom sklearn.impute import SimpleImputer\ntrain_most_frequent = train.copy()\n#setting strategy to 'mean' to impute by the mean\nmean_imputer = SimpleImputer(strategy='most_frequent')# strategy can also be mean or median \ntrain_most_frequent.iloc[:,:] = mean_imputer.fit_transform(train_most_frequent)","6ad019bd":"from ctgan import CTGANSynthesizer\n\nctgan = CTGANSynthesizer()\n\ndiscrete_columns = [\"claim\"]\nctgan.fit(train_most_frequent, discrete_columns,  epochs=100)","007d2c99":"#samples = ctgan.sample(100)","fe4d17cd":"#print(samples.head())","53dd213f":"#Code by https:\/\/www.maskaravivek.com\/post\/ctgan-tabular-synthetic-data-generation\/\n\n#from table_evaluator import load_data, TableEvaluator\n\n#print(train_most_frequent.shape, samples.shape)\n#table_evaluator =  TableEvaluator(train_most_frequent, samples)\n\n#table_evaluator.visual_evaluation()   #Visual to compare the actual data(data) and the generated data(samples).","faf8ef47":"![](https:\/\/i.ytimg.com\/vi\/lLm1t8REPQE\/hq720.jpg?sqp=-oaymwEhCK4FEIIDSFryq4qpAxMIARUAAAAAGAElAADIQj0AgKJD&rs=AOn4CLAG_-UWS5tc121ue5d05P3iUtH4Rg)m.youtube.com","76724c9c":"#Install CTGAN","1a8821b9":"#Tabular Synthetic Data Generation using CTGAN\n\nby Vivek Maskara - Last updated on Dec 18, 2020\n\nhttps:\/\/www.maskaravivek.com\/post\/ctgan-tabular-synthetic-data-generation\/","70dfe0a0":"#Call model\u2019s sample function to generate samples based on the learned model.","e7ecf47a":"#Use table_evaluator library to compare the features. Call the visual_evaluation method to compare the actual data(data) and the generated data(samples).","fbd457b5":"#After the snippet above. The Notebook was frozen. I read Yirun Zhang with CTGAN, which is too complex to me.\n\nhttps:\/\/www.kaggle.com\/gogo827jz\/tps-ctgan","ab528427":"#That's my CTGAN on the Playground.\n\n![](https:\/\/c.tenor.com\/qBQlQPESCV8AAAAM\/sliding-fail-playground-slide.gif)https:\/\/tenor.com\/search\/playgound-gifs","90aee66e":"#Define an instance of CTGANSynthesizer and call the fit method with the dataframe"}}