{"cell_type":{"9db4e469":"code","a8b08ce7":"code","9bb4ac37":"code","9dd32c66":"code","e9f73c55":"code","181d3552":"code","1f4473ca":"code","c9ad59ea":"code","e9331135":"code","1de855bd":"code","ad5a75a4":"code","f40792c5":"code","3a47642e":"code","3a186434":"code","a10f0cf4":"code","808fa7c2":"code","6c2da424":"markdown","83f47d12":"markdown"},"source":{"9db4e469":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom patsy import dmatrices\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn import metrics","a8b08ce7":"data = pd.read_csv('..\/input\/train.csv')\ndata.head()","9bb4ac37":"data.dtypes","9dd32c66":"columns = data.columns[1:-1]\nX = data[columns]\ny = np.ravel(data['target'])","e9f73c55":"distribution = data.groupby('target').size() \/ data.shape[0] * 100.0\ndistribution.plot(kind='bar')\nplt.show()","181d3552":"# show distribution of a single feature among 9 classes\nfor id in range(9):\n    plt.subplot(3, 3, id + 1)\n    data[data.target == 'Class_' + str(id + 1)].feat_20.hist()\nplt.show()","1f4473ca":"# show relationship between all pairs of feature correlation\nfig = plt.figure()\nax = fig.add_subplot(111) # 1 row, 1 col, 1st plot\ncax = ax.matshow(X.corr(), interpolation='nearest')\nfig.colorbar(cax)\nplt.show()","c9ad59ea":"print(X.shape[1])","e9331135":"#alpha is L-2 regularization coefficient\nmodel = MLPClassifier(solver='lbfgs', alpha=1e-5, hidden_layer_sizes = (30, 10), random_state = 0, verbose = True)\nmodel.fit(X, y)","1de855bd":"model.intercepts_  # weights of each neuron 30x10x9","ad5a75a4":"print(model.coefs_[0].shape)\nprint(model.coefs_[1].shape)\nprint(model.coefs_[2].shape)","f40792c5":"pred = model.predict(X)\npred","3a47642e":"print(model.score(X, y))\nprint(sum(pred == y) \/ len(y))","3a186434":"test_data = pd.read_csv('..\/input\/test.csv')\ntest_data.head()","a10f0cf4":"Xtest = test_data[test_data.columns[1:]]\nprint(Xtest.head())\nprint(Xtest.shape)\nprint(X.shape)","808fa7c2":"test_prob = model.predict_proba(Xtest)\nsolution = pd.DataFrame(test_prob, columns=['Class_1','Class_2','Class_3','Class_4','Class_5','Class_6','Class_7','Class_8','Class_9'])\nsolution['id'] = test_data['id']\ncols = solution.columns.tolist()\ncols = cols[-1:] + cols[:-1]\nsolution = solution[cols]\n\nsolution.to_csv('.\/otto_prediction.tsv', index = False)","6c2da424":"**Initiate our neural net with 2 hidden layers**\n**93x30x10x9**","83f47d12":"**Predict on test data**"}}