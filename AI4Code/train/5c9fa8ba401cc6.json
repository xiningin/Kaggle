{"cell_type":{"0382c64f":"code","14985cbf":"code","286ed207":"code","1f12f445":"code","6a85d83c":"code","31a124f1":"code","f1102f1a":"code","8ff53a34":"code","f08d19e9":"code","765b2afe":"code","9bd9a5a2":"code","d68741b8":"code","028574a6":"code","7fc327a6":"code","f8beaaa1":"code","df0ac951":"code","7202068f":"code","90a1a1f9":"code","aa8d92d0":"code","5f3be707":"code","e5a7aa51":"code","03644d9a":"code","190debe4":"code","84c53d25":"code","586018ef":"code","0bf969a8":"code","9b5cd535":"code","deaa2960":"code","37891caa":"code","dc09d2c6":"code","09de643e":"code","e71ac34a":"code","e497f89d":"code","4820e837":"code","151c336f":"code","b233edd7":"code","1035d5c4":"code","b69b92e2":"code","0894ad19":"code","8a5c7dcc":"code","62daee4a":"code","251c11e2":"code","426437c6":"code","1bfed596":"code","50068b39":"code","23588019":"code","9d5bd5b2":"code","25a4267a":"code","dd0d0147":"code","1bdca7ad":"code","e183cd41":"code","8654ab86":"code","23d10878":"code","f53a5a7c":"code","fb7714c0":"code","169ec37f":"code","b0550fdf":"code","f02db209":"code","27f77247":"code","38d911ba":"code","cfc45134":"code","75e3b94b":"code","cb36818e":"code","4c6969d2":"code","cae26bb5":"markdown","ebc13603":"markdown","9a5ba098":"markdown","2888f04c":"markdown","dc18e907":"markdown","56ca14a3":"markdown","8681ce5d":"markdown","72f1c355":"markdown","f8d91c34":"markdown","911737d9":"markdown","0b1857fd":"markdown","44db8b3c":"markdown","0235d9e5":"markdown","8d840981":"markdown","74c5597b":"markdown","0beff7be":"markdown","9651f1f9":"markdown","e295f2c5":"markdown"},"source":{"0382c64f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","14985cbf":"import matplotlib\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib\nimport seaborn as sns\nimport matplotlib.pyplot as plt","286ed207":"import string","1f12f445":"import datetime\nimport re\nfrom nltk.tokenize import word_tokenize\nfrom nltk.corpus import stopwords\nfrom nltk.stem.wordnet import WordNetLemmatizer\nfrom nltk.stem.porter import PorterStemmer","6a85d83c":"df = pd.read_csv(\"\/kaggle\/input\/emma-raducanu\/emma_tweets.csv\")","31a124f1":"import warnings\nwarnings.filterwarnings(\"ignore\")","f1102f1a":"df.head()","8ff53a34":"df.describe","f08d19e9":"df.shape","765b2afe":"df['date']=pd.to_datetime(df.date)","9bd9a5a2":"missing_val=pd.DataFrame(df.isna().sum().sort_values(ascending=False),columns=['Column'])\nmissing_val['%']=(missing_val.Column\/11388)*100","d68741b8":"missing_val","028574a6":"df.dropna(inplace=True)","7fc327a6":"def remove_punctuation(text):\n    for punctuation in string.punctuation:\n        text=text.replace(punctuation,'')\n    return text","f8beaaa1":"df['text']=df['text'].apply(remove_punctuation)","df0ac951":"df.head()","7202068f":"def remove_special_chars(data):\n    data = re.sub('[,\\.!:;()\"]', ' ', data)\n    data = re.sub('[^a-zA-Z\"]', ' ', data)\n    data = re.sub('\\[[^]]*\\]', ' ', data)\n    return data","90a1a1f9":"df['text']=df['text'].apply(remove_special_chars)","aa8d92d0":"df.text","5f3be707":"df[\"text\"] = df[\"text\"].apply(word_tokenize)","e5a7aa51":"more_words=[\"t\", \"co\", \"https\",\"httpstco\",\"httpstcol\" ,\"amp\", \"U\", \"Emma\", \"EmmaRaducanu\", \"Raducanu\", \"USOpen\", \"USOpen2021\", \"US\", \"Open\", \"2021\", \"tenni\"]","03644d9a":"stop=stopwords.words('english')","190debe4":"for _ in more_words:\n    stop.append(_)","84c53d25":"def remove_stopwords(text_token):\n    text_clean=[word for word in text_token if word not in stop]\n    return text_clean","586018ef":"df['text']=df['text'].apply(lambda x:\" \".join(remove_stopwords(x)))","0bf969a8":"df.text","9b5cd535":"d1=pd.DataFrame(df.count(),columns=['# of Values'])\nd1.head()","deaa2960":"uniques=[]\n\nfor col in df:\n    unique=df[col].nunique()\n    uniques.append(unique)\n    ","37891caa":"d1['Uniques']=uniques","dc09d2c6":"d1","09de643e":"d2=pd.DataFrame(df.count(),columns=['Count'])","e71ac34a":"values=[]\nfor col in df.columns:\n    value=df[col].value_counts()[:1].index[0]\n    values.append(value)","e497f89d":"d2['values']=values","4820e837":"d2","151c336f":"top_20_users=df.user_name.value_counts()[:20]","b233edd7":"top_users=pd.DataFrame()","1035d5c4":"top_users['Name']=top_20_users.index\ntop_users['Count']=top_20_users.values","b69b92e2":"top_users.head()","0894ad19":"plt.figure(figsize=(10,8))\nsns.barplot(x=top_users.Name,y=top_users.Count)\nplt.xticks(rotation=90)\nplt.show()","8a5c7dcc":"top_20_locations=df.user_location.value_counts()[:20]","62daee4a":"top_20_df=pd.DataFrame()","251c11e2":"top_20_df['Location']=top_20_locations.index\ntop_20_df['Count']=top_20_locations.values","426437c6":"top_20_df.head()","1bfed596":"plt.figure(figsize=(10,8))\nsns.barplot(x=top_20_df.Location,y=top_20_df.Count)\nplt.xticks(rotation=90)\nplt.show()","50068b39":"from wordcloud import WordCloud","23588019":"plt.figure(figsize=(16,8))\nwordcloud = WordCloud().generate(' '.join(df['text'])) \nplt.imshow(wordcloud)\nplt.axis(\"off\")\nplt.show()","9d5bd5b2":"british_tweets=df.loc[(df.user_location=='United Kingdom') | (df.user_location=='Britian') | (df.user_location=='UK')] ","25a4267a":"british_tweets.head(2)","dd0d0147":"plt.figure(figsize=(16,8))\nwordcloud = WordCloud(background_color='orange').generate(' '.join(british_tweets['text'])) \nplt.imshow(wordcloud)\nplt.axis(\"off\")\nplt.show()","1bdca7ad":"from textblob import TextBlob","e183cd41":"def get_polarity(text):\n    pol=TextBlob(str(text)).sentiment.polarity\n    \n    if(pol==0):\n        return 'Neutral'\n    elif pol>0 and pol<=0.3:\n        return 'Weakly Positive'\n    elif pol>0.3 and pol<=0.6:\n        return 'Positive'\n    elif pol>0.6 and pol<=1:\n        return 'Strongly Positive'\n    elif pol>-0.3 and pol<=0:\n        return \"Weekly Negative\"\n    elif(pol>-0.6 and pol<=-0.3):\n        return \"Negative\"\n    elif(pol>-1 and pol<=-0.6):\n        return \"Strongly Negative\"","8654ab86":"df['pol']=df.text.apply(get_polarity)","23d10878":"df.head()","f53a5a7c":"plt.figure(figsize=(10,8))\nsns.countplot(df.pol)\nplt.xticks(rotation=90)\nplt.show()","fb7714c0":"positive_df=df.loc[(df.pol=='Positive')]","169ec37f":"plt.figure(figsize=(16,8))\nwordcloud = WordCloud(background_color='black').generate(' '.join(positive_df['text'])) \nplt.imshow(wordcloud)\nplt.axis(\"off\")\nplt.show()","b0550fdf":"neutral_df=df.loc[(df.pol=='Neutral')]","f02db209":"plt.figure(figsize=(16,8))\nwordcloud = WordCloud(background_color='white').generate(' '.join(neutral_df['text'])) \nplt.imshow(wordcloud)\nplt.axis(\"off\")\nplt.show()","27f77247":"negative_df=df.loc[(df.pol==\"Strongly Negative\") | (df.pol==\"Negative\")]","38d911ba":"plt.figure(figsize=(16,8))\nwordcloud = WordCloud(background_color='yellow').generate(' '.join(negative_df['text'])) \nplt.imshow(wordcloud)\nplt.axis(\"off\")\nplt.show()","cfc45134":"df['date_only'] = df.date.dt.date\ndf['day_only']=df.date.dt.dayofyear\ndf['hour']=df.date.dt.hour","75e3b94b":"plt.figure(figsize=(16,8))\nsns.countplot(x=df.date_only)\nplt.xticks(rotation=90)\nplt.show()","cb36818e":"plt.figure(figsize=(16,8))\nsns.distplot(df.day_only)\nplt.show()","4c6969d2":"plt.figure(figsize=(16,8))\nsns.countplot(x=df.hour)\nplt.xticks(rotation=90)\nplt.show()","cae26bb5":"![image.png](attachment:fe80ac7f-7396-4e50-9673-769f3f04539e.png)","ebc13603":"# Top Users","9a5ba098":"**Emma Raducanu is a British expert tennis player. She has a profession high Women's Tennis Association (WTA) positioning of world No. 22 and is the current British No. 1. Raducanu is the prevailing US Open boss, and the main British lady to win a Grand Slam singles title since Virginia Wade in the 1977 Wimbledon Championships. She is viewed as a benchmark player, known for her incredible, level groundstrokes, and forceful return of serve.**","2888f04c":"# Density Plot of Tweets made by the day","dc18e907":"# Neutral Polarity","56ca14a3":"# Tweets made from Britian","8681ce5d":"# Missing Values","72f1c355":"# Removing Speical Character","f8d91c34":"# Removing Punctuation\n","911737d9":"# Count plot of tweets made by the hour","0b1857fd":"# Date Analysis","44db8b3c":"# Top Locations","0235d9e5":"# Deleting Stop words","8d840981":"# Find Out most frequent values","74c5597b":"# Polarity","0beff7be":"# Positive Polarity ","9651f1f9":"# Finding Out Unique Values","e295f2c5":"# Negative Polarity"}}