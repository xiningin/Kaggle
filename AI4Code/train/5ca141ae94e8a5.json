{"cell_type":{"96e09cff":"code","a7a2242b":"code","b0b9455b":"code","56fa7b7b":"code","6ca33602":"code","e1eb61d7":"code","9d1f749a":"code","a5bf67f4":"code","afee9895":"code","213a0157":"code","af6204aa":"code","4ab3db89":"code","fdb88b9f":"code","abe1691b":"code","2e0220b3":"code","0062595f":"code","b75aa926":"code","ce696f1d":"code","4e04e2a4":"code","6b4a7df5":"code","9b1019b1":"markdown","7d86d310":"markdown","7fbade2a":"markdown","adbeac31":"markdown","737f09ff":"markdown"},"source":{"96e09cff":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a7a2242b":"from fastai.vision import *","b0b9455b":"tfms = get_transforms(max_rotate=25)","56fa7b7b":"len(tfms)","6ca33602":"def get_ex(): return open_image('..\/input\/hanacaraka\/ta\/4693360511011442821_base64_21.png')","e1eb61d7":"def plots_f(rows, cols, width, height, **kwargs):\n    [get_ex().apply_tfms(tfms[0], **kwargs).show(ax=ax) for i,ax in enumerate(plt.subplots(\n        rows,cols,figsize=(width,height))[1].flatten())]","9d1f749a":"plots_f(2, 4, 12, 6, size=224)","a5bf67f4":"tfms = zoom_crop(scale=(0.75,2), do_rand=True)","afee9895":"# random zoom and crop\nplots_f(2, 4, 12, 6, size=224)","213a0157":"# random resize and crop\ntfms = [rand_resize_crop(224)]\nplots_f(2, 4, 12, 6, size=224)","af6204aa":"# passing a probability to a function\ntfm = [rotate(degrees=30, p=0.5)]\nfig, axs = plt.subplots(1,5,figsize=(12,4))\nfor ax in axs:\n    img = get_ex().apply_tfms(tfm)\n    title = 'Done' if tfm[0].do_run else 'Not done'\n    img.show(ax=ax, title=title)","4ab3db89":"tfm = [rotate(degrees=(-30,30))]\nfig, axs = plt.subplots(1,5,figsize=(12,4))\nfor ax in axs:\n    img = get_ex().apply_tfms(tfm)\n    title = f\"deg={tfm[0].resolved['degrees']:.1f}\"\n    img.show(ax=ax, title=title)","fdb88b9f":"# brightness\nfig, axs = plt.subplots(1,5,figsize=(14,8))\nfor change, ax in zip(np.linspace(0.1,0.9,5), axs):\n    brightness(get_ex(), change).show(ax=ax, title=f'change={change:.1f}')","abe1691b":"# contrast\nfig, axs = plt.subplots(1,5,figsize=(12,4))\nfor scale, ax in zip(np.exp(np.linspace(log(0.5),log(2),5)), axs):\n    contrast(get_ex(), scale).show(ax=ax, title=f'scale={scale:.2f}')","2e0220b3":"# dihedral\nfig, axs = plt.subplots(2,2,figsize=(12,8))\nfor k, ax in enumerate(axs.flatten()):\n    dihedral(get_ex(), k).show(ax=ax, title=f'k={k}')\nplt.tight_layout()","0062595f":"fig, axs = plt.subplots(1,2,figsize=(10,8))\nget_ex().show(ax=axs[0], title=f'no flip')\nflip_lr(get_ex()).show(ax=axs[1], title=f'flip')","b75aa926":"# jitter\nfig, axs = plt.subplots(1,5,figsize=(20,8))\nfor magnitude, ax in zip(np.linspace(-0.05,0.05,5), axs):\n    tfm = jitter(magnitude=magnitude)\n    get_ex().jitter(magnitude).show(ax=ax, title=f'magnitude={magnitude:.2f}')","ce696f1d":"# squish\nfig, axs = plt.subplots(1,5,figsize=(12,4))\nfor scale, ax in zip(np.linspace(0.66,1.33,5), axs):\n    get_ex().squish(scale=scale).show(ax=ax, title=f'scale={scale:.2f}')","4e04e2a4":"# tilt\nfig, axs = plt.subplots(2,4,figsize=(12,8))\nfor i in range(4):\n    get_ex().tilt(i, 0.4).show(ax=axs[0,i], title=f'direction={i}, fwd')\n    get_ex().tilt(i, -0.4).show(ax=axs[1,i], title=f'direction={i}, bwd')","6b4a7df5":"# symm warp\ntfm = symmetric_warp(magnitude=(-0.2,0.2))\n_, axs = plt.subplots(2,4,figsize=(12,6))\nfor ax in axs.flatten():\n    img = get_ex().apply_tfms(tfm, padding_mode='zeros')\n    img.show(ax=ax)","9b1019b1":"#Aksara Jawa, Hanacaraka - Javanese Script\n\nThe Javanese script, natively known as Aksara Jawa, Hanacaraka, Carakan, and Dentawyanjana, is one of Indonesia's traditional scripts developed on the island of Java. The script is primarily used to write the Javanese language, but in the course of its development has also been used to write several other regional languages such as Sundanese, Madurese, and Sasak; the lingua franca of the region, Malay; as well as the historical languages Kawi and Sanskrit. Javanese script was actively used by the Javanese people for writing day-to-day and literary texts from at least mid 15th ce until the mid 20th ce, before its function was gradually supplanted by the Latin alphabet. Today the script is taught in DI Yogyakarta, Central Java, and the East Java Province as part of the local curriculum, but with very limited function in everyday use.https:\/\/en.wikipedia.org\/wiki\/Javanese_script","7d86d310":"#Codes thanks DipamVasani https:\/\/www.kaggle.com\/dipam7\/data-augmentation-in-fastai","7fbade2a":"#Codes thanks DipamVasani https:\/\/www.kaggle.com\/dipam7\/data-augmentation-in-fastai","adbeac31":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcQJ7ouKOd5w7AlxSooJZDZKoSXX-KEe2MMKQA&usqp=CAU)saferkidsandhomes.com","737f09ff":"Das War's Kaggle Notebook Runner: Mar\u00edlia Prata  @mpwolke"}}