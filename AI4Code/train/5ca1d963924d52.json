{"cell_type":{"1bcd2690":"code","af182b1f":"code","cdfbe057":"code","4c0b2aa0":"code","af2b1057":"code","75ec7a62":"code","cedc846e":"code","1a1225f4":"code","d26f33ec":"code","fe6ff2b5":"code","8126bfef":"code","ede4b89a":"code","572a56cf":"code","adccbd71":"code","cde26ee5":"code","3ee205b4":"code","552523f0":"code","198694fe":"code","8493e79f":"code","746a1f6f":"code","7e6c1f21":"code","8a72d626":"code","af9d5ef4":"code","a9491928":"code","bbbbba41":"code","189534b0":"markdown","9f6ed2b8":"markdown","f085ff2b":"markdown","052d1d84":"markdown","ffc4dce3":"markdown","6941f03e":"markdown","83847ea2":"markdown","16f9bb25":"markdown","936ebae9":"markdown","2275b597":"markdown","738ad58a":"markdown","aa5dee20":"markdown","71a333f6":"markdown","4606ef9f":"markdown","e13e0169":"markdown","2e1ff389":"markdown","0cdc0b17":"markdown","e1733508":"markdown","14a8910d":"markdown","2fa9bd1f":"markdown","12357463":"markdown","f20a3276":"markdown","af7a8686":"markdown","9dac5005":"markdown","2d512d3d":"markdown","a66aa992":"markdown","22969539":"markdown","5eaa9ab4":"markdown","b1b82b50":"markdown","b431db39":"markdown","77f04172":"markdown","927695d5":"markdown"},"source":{"1bcd2690":"import numpy as np  # linear algebra\nimport pandas as pd  # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\ndataset = pd.concat(\n    [\n        pd.read_csv(\n            \"..\/input\/crimes-in-chicago\/Chicago_Crimes_2005_to_2007.csv\",\n            error_bad_lines=False,\n        ),\n        pd.read_csv(\n            \"..\/input\/crimes-in-chicago\/Chicago_Crimes_2008_to_2011.csv\",\n            error_bad_lines=False,\n        ),\n        pd.read_csv(\n            \"..\/input\/crimes-in-chicago\/Chicago_Crimes_2012_to_2017.csv\",\n            error_bad_lines=False,\n        ),\n    ]\n)\ndataset.info()","af182b1f":"print('Dataset shape ->', dataset.shape)\ndataset.head()","cdfbe057":"dataset.isna().sum()","4c0b2aa0":"data_ead = dataset[dataset.Year != 2017].drop(\n    [\n        \"Unnamed: 0\",\n        \"ID\",\n        \"IUCR\",\n        \"Beat\",\n        \"Case Number\",\n        \"District\",\n        \"Ward\",\n        \"Updated On\",\n        \"Year\",\n        \"Community Area\",\n        \"X Coordinate\",\n        \"Y Coordinate\",\n        \"Latitude\",\n        \"Longitude\",\n        \"Location\",\n        \"FBI Code\",\n    ],\n    axis=1,\n)","af2b1057":"data_ead.Date = pd.to_datetime(data_ead.Date, format=\"%m\/%d\/%Y %I:%M:%S %p\")\ndata_ead.set_index(\"Date\", inplace=True)","75ec7a62":"# Function to plot the serie value_counts\ndef plot_counts(serie, title):\n    df = pd.DataFrame(serie.value_counts()[:15])\n    df.columns = [\"Freq\"]\n    df[\"Type\"] = df.index\n    fig = px.bar(df, y=\"Freq\", x=\"Type\", text=\"Freq\", color=\"Freq\", color_continuous_scale=px.colors.sequential.Blugrn)\n    fig.update_traces(texttemplate=\"%{text:.2s}\", textposition=\"outside\")\n    fig.update_layout(uniformtext_minsize=8, uniformtext_mode=\"hide\")\n    fig.update_layout(title_text=title)\n    fig.show()\n\n\nplot_counts(data_ead[\"Primary Type\"], \"Kind of Crimes\")","cedc846e":"plot_counts(data_ead[\"Location Description\"], \"Location of Crimes\")","1a1225f4":"aux = pd.DataFrame(data_ead.resample(\"M\").size(), columns=[\"Number of cases\"])\naux[\"Month\"] = aux.index.month.astype(str)\naux[\"Year\"] = aux.index.year.astype(str)\naux[\"Year-Month\"] = aux[\"Year\"].str.cat(aux[\"Month\"].str.zfill(2), sep=\"-\")\naux.head()","d26f33ec":"aux_csm = aux[[\"Month\", \"Year\", \"Number of cases\"]]\naux_csm = aux_csm.pivot(\"Month\", \"Year\", \"Number of cases\").fillna(0).astype(int)\naux_csm.index = aux_csm.index.astype(int)\naux_csm = aux_csm.sort_index()\naux_csm.index = ['Jan', 'Fev', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nplt.figure(figsize=(20, 10))\n_ = sns.heatmap(\n    aux_csm,\n    annot=True,\n    fmt=\"d\",\n    linewidths=0.5,\n    cmap=\"Blues\",\n).set_title('Number of crimes in chicago per Year x Months')","fe6ff2b5":"fig = px.bar(\n    aux,\n    x=\"Year-Month\",\n    y=\"Number of cases\",\n    hover_data=[\"Year\", \"Month\", \"Number of cases\"],\n    color=\"Number of cases\",\n    height=600,\n    width=1400,\n    color_continuous_scale=px.colors.sequential.Blugrn\n\n)\nfig.update_layout(title_text='Crime counts per year-month in bars')\nfig.show()","8126bfef":"agg_months = aux.groupby(['Month'])['Number of cases'].sum().reset_index()\nagg_months.Month = agg_months.Month.astype(int)\nagg_months.sort_values('Month',inplace=True)\nagg_months.Month = ['Jan', 'Fev', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n\nfig = px.bar(\n    agg_months,\n    x=\"Month\",\n    y=\"Number of cases\",\n    color=\"Number of cases\",\n    text=\"Number of cases\",\n    height=600,\n    width=1400,\n    color_continuous_scale=px.colors.sequential.Blugrn\n)\nfig.update_traces(texttemplate=\"%{text:.2s}\", textposition=\"outside\")\nfig.update_layout(title_text=\"Crime counts per year-month in stacked bars (Month)\")\nfig.show()","ede4b89a":"fig = px.bar(\n    aux.groupby(['Year'])['Number of cases'].sum().reset_index(),\n    x=\"Year\",\n    y=\"Number of cases\",\n    color=\"Number of cases\",\n    text=\"Number of cases\",\n    height=600,\n    width=1400,\n        color_continuous_scale=px.colors.sequential.Blugrn\n\n)\nfig.update_traces(texttemplate=\"%{text:.2s}\", textposition=\"outside\")\nfig.update_layout(title_text=\"Crime counts per year-month in stacked bars (Years)\")\n\nfig.show()","572a56cf":"map_marks = dataset[['Latitude', 'Longitude']]\nmap_marks['Year'] =  pd.to_datetime(dataset.Date, format=\"%m\/%d\/%Y %I:%M:%S %p\").dt.year\nmap_marks = map_marks.dropna()\nmap_marks.head()","adccbd71":"fig = px.scatter_mapbox(map_marks[map_marks.Year == 2016].sample(5000), lat=\"Latitude\", lon=\"Longitude\",\n                        color_discrete_sequence=[\"fuchsia\"], zoom=9, height=650)\nfig.update_layout(mapbox_style=\"open-street-map\")\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.show()\n","cde26ee5":"aux = data_ead.groupby('Primary Type')['Arrest'].mean().reset_index()\naux['Arrest (%)'] = aux['Arrest'].round(4)*100\naux.sort_values('Arrest', inplace=True)\nfig = px.bar(\n    aux,\n    orientation='h',\n    x=\"Arrest (%)\",\n    y=\"Primary Type\",\n    color=\"Arrest (%)\",\n    text=\"Arrest (%)\",\n    height=800,\n    #width=800,\n        color_continuous_scale=px.colors.sequential.Blugrn\n\n)\nfig.update_traces(texttemplate=\"%{text:.4s}\", textposition=\"outside\")\nfig.update_layout(title_text=\"Arrested Rate in % per Type Crime in Chicago.\")\n\nfig.show()","3ee205b4":"data_time = dataset.drop(\n    [\n        \"Unnamed: 0\",\n        \"ID\",\n        \"IUCR\",\n        \"Beat\",\n        \"Case Number\",\n        \"District\",\n        \"Ward\",\n        \"Updated On\",\n        \"Year\",\n        \"Community Area\",\n        \"X Coordinate\",\n        \"Y Coordinate\",\n        \"Latitude\",\n        \"Longitude\",\n        \"Location\",\n        \"FBI Code\",\n    ],\n    axis=1,\n)\ndata_time.Date = pd.to_datetime(data_time.Date, format=\"%m\/%d\/%Y %I:%M:%S %p\")\ndata_time.set_index('Date', inplace=True)\ndata_time.sample(3)","552523f0":"data_model = pd.DataFrame(data_time.resample(\"M\").size().reset_index())\ndata_model.columns = [\"ds\", \"y\"]\nprint(data_model.shape)\ndata_model.head()","198694fe":"fig = px.line(data_model, x=\"ds\", y=\"y\")\nfig.update_layout(\n    title=\"Chicago crimes from 2005 to 2016 (counted per Month).\",\n    xaxis_title=\"Date\",\n    yaxis_title=\"Crimes\",\n    font=dict(\n        size=14,\n    )\n)","8493e79f":"from fbprophet import Prophet\nfrom fbprophet.diagnostics import cross_validation, performance_metrics\nfrom fbprophet.plot import plot_plotly, plot_components_plotly\nfrom sklearn.metrics import mean_squared_error\nfrom joblib import Parallel, delayed\nimport itertools\n\n\ndef create_param_combinations(**param_dict):\n    param_iter = itertools.product(*param_dict.values())\n    params = []\n    for param in param_iter:\n        params.append(param)\n    params_df = pd.DataFrame(params, columns=list(param_dict.keys()))\n    return params_df\n\n\ndef train_return_results(params):\n    model = Prophet(**params)\n    model.fit(data_model[75:-6])\n\n    future = model.make_future_dataframe(periods=6, freq=\"M\")\n    forecast = model.predict(future)\n\n    return mean_squared_error(data_model[\"y\"][-6:], forecast[\"yhat\"][-6:])\n\n\nparam_grid = {\n    \"changepoint_prior_scale\": [0.005, 0.05, 0.5, 5],\n    \"changepoint_range\": [0.8, 0.9],\n    \"seasonality_prior_scale\": [0.1, 1, 10.0],\n    \"holidays_prior_scale\": [0.1, 1, 10.0],\n    \"seasonality_mode\": [\"multiplicative\", \"additive\"],\n    # \"growth\": [\"linear\", \"logistic\"],\n    \"yearly_seasonality\": [5, 10, 20],\n}\n\n# Generate all combinations of parameters\nall_params = create_param_combinations(**param_grid)\n\n# Use cross validation to evaluate all parameters\nrmses = Parallel(n_jobs=-1, verbose=10)(\n    delayed(train_return_results)(dict(zip(all_params.keys(), param)))\n    for param in all_params.values\n)","746a1f6f":"all_params[\"rsme\"] = rmses\nbest_paramers = dict(all_params.sort_values(\"rsme\").drop(\"rsme\", axis=1).iloc[0])\nprint(best_paramers)","7e6c1f21":"model = Prophet(**best_paramers)\nmodel.fit(data_model[75:])\n\nfuture = model.make_future_dataframe(periods=5, freq=\"M\")\nforecast = model.predict(future)","8a72d626":"plot_plotly(model, forecast)","af9d5ef4":"plot_components_plotly(model, forecast)","a9491928":"forecast.tail(6)[['ds','yhat','yhat_lower','yhat_upper']].round()","bbbbba41":"yhat = str(int(forecast.iloc[-1]['yhat']))\nyhat_lower = str(int(forecast.iloc[-1]['yhat_lower']))\nyhat_upper = str(int(forecast.iloc[-1]['yhat_upper']))\nprint('Following the model, for July we have', yhat ,\"crimes and considering the error margin it's possible to have a value between\",yhat_lower, '~', yhat_upper,'.')","189534b0":"Transforming the Date in Datetime...","9f6ed2b8":"### Agregate by Months\n","f085ff2b":"## Number of cases by type\n\nIn this part, let's try to indentify the tend and highpoints or lowpoints.","052d1d84":"The model adapted well to this part of it, the sasionality is clear in the graph and also we can see a decrease trend.","ffc4dce3":"Look like there is crime everywhere in Chicago, in the centre, you can see more points but also is a crowded place.","6941f03e":"### Location Description\nWhere those crimes happens? ","83847ea2":"There is a reduction trend and the sasionality is strong in the first part of the year.","16f9bb25":"How many missing values we have per columns.","936ebae9":"Initial dataset shape.","2275b597":"The \u201cVIOLATION\u201d crimes look strongly correlated to the arrested rate once the 'cop' must be present in the location to declare the violation. ","738ad58a":"### by Bars ","aa5dee20":"THEFT, BATTERY, CRIMINAL DAMAGE and NARCOTICS represents more the 65% of the crimes. ","71a333f6":"Similar graph but using bars to visualize. Again the 'tough time' during 2006 until 2010. \n","4606ef9f":"## Result plot","e13e0169":"STREET and SIDEWALK represents more the 1\/3 of the crimes. ","2e1ff389":"### by Heatmap","0cdc0b17":"# EDA & Dataset\n\n\n<div>\n    <div style=\"float:left;margin-right:155px\">\n        <img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/3\/3e\/Chicago_Community_Areas.svg\" alt=\"Chicago Community Areas\" width=\"500\">\n    <\/div>\n        <div>\n<p>This dataset reflects reported incidents of crime (with the exception of murders where data exists for each victim) that occurred in the City of Chicago from 2001 to present, minus the most recent seven days. Data is extracted from the Chicago Police Department's CLEAR (Citizen Law Enforcement Analysis and Reporting) system. In order to protect the privacy of crime victims, addresses are shown at the block level only and specific locations are not identified. Should you have questions about this dataset, you may contact the Research & Development Division of the Chicago Police Department at 312.745.6071 or RDAnalysis@chicagopolice.org. Disclaimer: These crimes may be based upon preliminary information supplied to the Police Department by the reporting parties that have not been verified. The preliminary crime classifications may be changed at a later date based upon additional investigation and there is always the possibility of mechanical or human error. Therefore, the Chicago Police Department does not guarantee (either expressed or implied) the accuracy, completeness, timeliness, or correct sequencing of the information and the information should not be used for comparison purposes over time. The Chicago Police Department will not be responsible for any error or omission, or for the use of, or the results obtained from the use of this information. All data visualizations on maps should be considered approximate and attempts to derive specific addresses are strictly prohibited. The Chicago Police Department is not responsible for the content of any off-site pages that are referenced by or that reference this web page other than an official City of Chicago or Chicago Police Department web page. The user specifically acknowledges that the Chicago Police Department is not responsible for any defamatory, offensive, misleading, or illegal conduct of other users, links, or third parties and that the risk of injury from the foregoing rests entirely with the user. The unauthorized use of the words \"Chicago Police Department,\" \"Chicago Police,\" or any colorable imitation of these words or the unauthorized use of the Chicago Police Department logo is unlawful. This web page does not, in any way, authorize such use. Data are updated daily. The dataset contains more than 6,000,000 records\/rows of data and cannot be viewed in full in Microsoft Excel. To access a list of Chicago Police Department - Illinois Uniform Crime Reporting (IUCR) codes, go to <a href=\"http:\/\/data.cityofchicago.org\/Public-Safety\/Chicago-Police-Department-Illinois-Uniform-Crime-R\/c7ck-438e\">here<\/a>.<\/p>\n\n<\/div>\n","e1733508":"Looks like in the summer have a tend for more crimes in chicago.","14a8910d":"The years between 2006 and 2010 were a tough time, the year 2008 was the worst with a mean of 71004 crimes per month, and the best year was the 2015 with a mean of 21916 crimes per month.","2fa9bd1f":"### What is the period?","12357463":"### Agregate by Year","f20a3276":"## Map plot\n\nThere is some area or specific location that used to happen crimes? ","af7a8686":"First of all, let's plot the whole series to see the data behaviour.","9dac5005":"### Modeling","2d512d3d":"In this time series we have the crimes per month, a total per month.","a66aa992":"### Primary Type","22969539":"Similar graph but using bars to visualize. Again the 'tough time' during 2006 until 2010. \n\n","5eaa9ab4":"# Model - Forecast\n\nProphet is a procedure for forecasting time series data based on an additive model where non-linear trends are fit with yearly, weekly, and daily seasonality, plus holiday effects. It works best with time series that have strong seasonal effects and several seasons of historical data. Prophet is robust to missing data and shifts in the trend, and typically handles outliers well.","b1b82b50":"# Importing dataset and libraries","b431db39":"## Arrested?\nWhat is the arrested rate per crime?","77f04172":"Selecting a few columsn do be used during the exploratory data analysis.\n\nRemoving the year 2017 due be is not full.","927695d5":"## Number of cases per Year x Months\nLet's see the number of crimes per Year and Months..."}}