{"cell_type":{"f439afbf":"code","993814eb":"code","554c93ac":"code","6135e57d":"code","0070334b":"code","c7db8e3f":"code","03a51eb3":"code","6f31bc3c":"code","e61b1783":"code","3b52ca12":"code","defee8f7":"markdown","d30f1257":"markdown","d66391e2":"markdown","1f999340":"markdown"},"source":{"f439afbf":"import pandas as pd\nimport numpy as np\nfrom sklearn.metrics import r2_score\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics \nimport matplotlib.pyplot as plt\nimport seaborn as sns","993814eb":"submission = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv')\nsales = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/sales_train.csv')\ntest = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/test.csv')","554c93ac":"plt.figure(figsize=(10,4))\nplt.xlim(sales.item_cnt_day.min(), sales.item_cnt_day.max()*1.1)\nsns.boxplot(x=sales.item_cnt_day)\n\nplt.figure(figsize=(10,4))\nplt.xlim(sales.item_price.min(), sales.item_price.max()*1.1)\nsns.boxplot(x=sales.item_price)","6135e57d":"# G\u00fcnl\u00fck sat\u0131\u015f say\u0131s\u0131 0 dan d\u00fc\u015f\u00fck olanlar veri setinden \u00e7\u0131kar\u0131l\u0131yor.\nsales.drop(sales[sales['item_cnt_day'] < 0].index, axis=0, inplace=True)\n\n# Tekrar eden veriler veri setinden \u00e7\u0131kart\u0131l\u0131yor.\nsales.drop_duplicates(subset=['date', 'date_block_num', 'shop_id', 'item_id', 'item_cnt_day'] , inplace=True)\n\n# Yukar\u0131daki grafiklerden yola \u00e7\u0131karak s\u0131n\u0131rlar belirleniyor.\nsales = sales[sales.item_cnt_day < 1200]\nsales = sales[sales.item_price < 100000]\n","0070334b":"plt.figure(figsize=(10,4))\nplt.xlim(sales.item_cnt_day.min() - 50, sales.item_cnt_day.max()*1.1)\nsns.boxplot(x=sales.item_cnt_day)\n\nplt.figure(figsize=(10,4))\nplt.xlim(sales.item_price.min() - 500, sales.item_price.max()*1.1)\nsns.boxplot(x=sales.item_price)","c7db8e3f":"agg_df = sales.groupby([\"date_block_num\", \"shop_id\", \"item_id\"])[\"item_cnt_day\"].agg('sum').reset_index()\nagg_df.columns = ['date_block_num', 'shop_id','item_id', 'item_cnt_day']\nagg_df['item_cnt_day'].clip(0, 20, inplace=True)\n\nfeatures = agg_df.iloc[:,:-1]\nitemCount = agg_df.iloc[:,-1:]","03a51eb3":"x_train, x_test, y_train, y_test = train_test_split(features, itemCount, test_size=0.2, random_state=1)","6f31bc3c":"rf = RandomForestRegressor(n_estimators = 50, random_state = 1, verbose = 1)\nrf.fit(x_train, y_train)\n\ny_pred = rf.predict(x_test)\n\nrf_rmse = np.sqrt(mean_squared_error(y_test, y_pred))\n\nrf_r2 = r2_score(y_test,y_pred)\n\nprint(\"R2 Score:\", r2_score(y_test, y_pred))\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))\nprint('Root Mean Squared Error :', np.sqrt(mean_squared_error(y_test, y_pred)))","e61b1783":"t_p = rf.predict(test)\np_df = pd.DataFrame(t_p, columns=['item_cnt_month'])\np_df = p_df.clip(0,20)\nsubmission.drop(columns = \"item_cnt_month\", inplace = True)\nresult = pd.concat([submission,p_df], axis=1)\nresult.head(10)","3b52ca12":"result.to_csv('submission.csv', index=False)","defee8f7":"**Preprocessing i\u015fleminden sonra grafikleri tekrar \u00e7izdirerek yap\u0131lan i\u015flemleri g\u00f6rebiliyoruz.**","d30f1257":"**Yukar\u0131da incelenen sonu\u00e7lara g\u00f6re preprocessing i\u015flemleri uygulan\u0131yor.**","d66391e2":"**\u0130leri a\u015famalarda kullan\u0131lacak veri setleri y\u00fckleniyor.**","1f999340":"* G\u00fcnl\u00fck sat\u0131lan \u00fcr\u00fcn say\u0131s\u0131na g\u00f6re s\u0131n\u0131rlar tespit ediliyor.\n* G\u00fcnl\u00fck sat\u0131lan \u00fcr\u00fcnlerin fiyatlar\u0131na g\u00f6re s\u0131n\u0131rlar tespit ediliyor."}}