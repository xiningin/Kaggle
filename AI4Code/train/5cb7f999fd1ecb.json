{"cell_type":{"bcbe1672":"code","ca93486f":"code","0601783c":"code","6035665e":"code","cba9064d":"code","a61c55bf":"code","0ab2b422":"code","cfa6b96f":"code","2b95c1d7":"code","60ce2df2":"code","e90fb441":"code","c2d64987":"code","339bd9c3":"code","2b2d5163":"markdown","7d4f1d56":"markdown","15f41008":"markdown","ab4cb4e9":"markdown","28fcc1b8":"markdown","30ac48ed":"markdown","d6834348":"markdown","66d1f0e1":"markdown","5d143292":"markdown","f9b34f05":"markdown","10695b9e":"markdown","8238383b":"markdown"},"source":{"bcbe1672":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# visualization tools\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport folium\nfrom folium.plugins import HeatMap\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ca93486f":"df=pd.read_csv(\"..\/input\/dataset\/craigslistVehicles.csv\")","0601783c":"df.sample(5)","6035665e":"df.info()","cba9064d":"df.isnull().sum()","a61c55bf":"import missingno as msno\nmsno.matrix(df)\nplt.show()","0ab2b422":"df.columns","cfa6b96f":"df.drop(columns=['url','image_url','VIN'],inplace=True)","2b95c1d7":"df=df.sort_values(by=['odometer'],ascending=False)\nplt.figure(figsize=(25,15))\nsns.barplot(x=df.manufacturer, y=df.odometer)\nplt.xticks(rotation= 90)\nplt.xlabel('Manufacturer')\nplt.ylabel('Odometer')\nplt.show()","60ce2df2":"gasLabels = df[df[\"fuel\"]==\"gas\"].paint_color.value_counts().head(10).index\ngasValues = df[df[\"fuel\"]==\"gas\"].paint_color.value_counts().head(10).values\ndieselLabels = df[df[\"fuel\"]==\"diesel\"].paint_color.value_counts().head(10).index\ndieselValues = df[df[\"fuel\"]==\"diesel\"].paint_color.value_counts().head(10).values\nelectricLabels = df[df[\"fuel\"]==\"electric\"].paint_color.value_counts().head(10).index\nelectricValues = df[df[\"fuel\"]==\"electric\"].paint_color.value_counts().head(10).values\n\nfrom plotly.subplots import make_subplots\n\n# Create subplots: use 'domain' type for Pie subplot\nfig = make_subplots(rows=1, cols=3, specs=[[{'type':'domain'}, {'type':'domain'}, {'type':'domain'}]])\nfig.add_trace(go.Pie(labels=gasLabels, values=gasValues, name=\"Gas Car\"),\n              1, 1)\nfig.add_trace(go.Pie(labels=dieselLabels, values=dieselValues, name=\"Diesel Car\"),\n              1, 2)\nfig.add_trace(go.Pie(labels=electricLabels, values=electricValues, name=\"Electric Car\"),\n              1, 3)\n\n# Use `hole` to create a donut-like pie chart\nfig.update_traces(hole=.4, hoverinfo=\"label+percent+name\")\n\nfig.show()","e90fb441":"x = df.type\ny = df.paint_color\n\nfig = go.Figure(go.Histogram2d(\n        x=x,\n        y=y\n    ))\nfig.show()","c2d64987":"fig = px.scatter_mapbox(df[df[\"type\"]==\"bus\"], lat=\"lat\", lon=\"long\", hover_name=\"paint_color\", hover_data=[\"paint_color\", \"price\"],\n                        color_discrete_sequence=[\"fuchsia\"], zoom=4, height=600)\nfig.update_layout(mapbox_style=\"open-street-map\")\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0})\nfig.show()","339bd9c3":"cars=df[df[\"type\"]==\"bus\"].iloc[:,17:19]\ncars.rename(columns={'lat':'latitude','long':'longitude'}, inplace=True)\ncars.latitude.fillna(0, inplace = True)\ncars.longitude.fillna(0, inplace = True) \n\nCarMap=folium.Map(location=[42.5,-71],zoom_start=4)\nHeatMap(data=cars, radius=16).add_to(CarMap)\nCarMap.save('index.html')\nCarMap","2b2d5163":"# Seaborn - Bar Plot","7d4f1d56":"# Folium - Map","15f41008":"# Thank You\n\nIf you have any suggestion or advice or feedback, I will be very appreciated to hear them.\n### Also there are other kernels\n* [FIFA 19 Player Data Analysis and Visualization EDA](https:\/\/www.kaggle.com\/ismailsefa\/f-fa-19-player-data-analysis-and-visualization-eda)\n* [Crimes Data Analysis and Visualzation (EDA)](https:\/\/www.kaggle.com\/ismailsefa\/crimes-data-analysis-and-visualzation-eda)\n* [Google Play Store Apps Data Analysis (EDA)](https:\/\/www.kaggle.com\/ismailsefa\/google-play-store-apps-data-analysis-eda)\n* [World Happiness Data Analysis and Visualization](https:\/\/www.kaggle.com\/ismailsefa\/world-happiness-data-analysis-and-visualization)\n* [Used Cars Data Analysis and Visualization (EDA)](https:\/\/www.kaggle.com\/ismailsefa\/used-cars-data-analysis-and-visualization-eda)\n* [Gender Recognition by Voice Machine Learning SVM](https:\/\/www.kaggle.com\/ismailsefa\/gender-recognition-by-voice-machine-learning-svm)\n* [Iris Species Classify Machine Learning KNN](https:\/\/www.kaggle.com\/ismailsefa\/iris-species-classify-machine-learning-knn)\n* [Breast Cancer Diagnostic Machine Learning R-Forest](https:\/\/www.kaggle.com\/ismailsefa\/breast-cancer-diagnostic-machine-learning-r-forest)\n* [Heart Disease Predic Machine Learning Naive Bayes](https:\/\/www.kaggle.com\/ismailsefa\/heart-disease-predic-machine-learning-naive-bayes)\n* [Mushroom Classify Machine Learning Decision Tree](https:\/\/www.kaggle.com\/ismailsefa\/mushroom-classify-machine-learning-decision-tree)","ab4cb4e9":"# Data Cleaning\n### Removed unnecessary","28fcc1b8":"# Plotly - 2D Histogram ( Interactive )\n### Effect of Type on paint color","30ac48ed":"### Used Libraries\n1. NumPy (Numerical Python)\n2. Pandas\n3. Matplotlib\n4. Seaborn\n5. Plotly\n6. Missingno\n7. Folium","d6834348":"### Content:\n1. Missingno - Missing Data\n2. Data Cleaning\n3. Seaborn - Bar Plot\n4. Plotly - Donut Chart\n5. Plotly - 2D Histogram\n6. Plotly - Map Box\n7. Folium - Map","66d1f0e1":"# Plotly - Donut Chart ( Interactive )","5d143292":"### Reading Data","f9b34f05":"# Plotly - Map Box ( Interactive )","10695b9e":"# Used Cars Data Analysis and Visualization (EDA)","8238383b":"# Missingno - Missing Data"}}