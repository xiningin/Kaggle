{"cell_type":{"6f7956f8":"code","2fad8ba7":"code","aa5f5c54":"code","96dacf70":"code","964afe40":"code","dfaa3e56":"code","5d847ef3":"code","8b42fa1a":"code","d18b269b":"code","a2b4e6ac":"code","9cfb4d7f":"code","4d2d6335":"code","cf09b1cf":"code","b4131e60":"code","c5c58a6f":"code","88184cfe":"code","8104360d":"code","15de5212":"code","41c595c4":"code","21787bf0":"code","d7f9bc89":"code","cda00fcc":"code","db958893":"code","a16675b7":"code","b5581ba2":"code","d59006ae":"code","6687e043":"code","f3f1cdf0":"code","972d28d6":"code","bf0ecd24":"markdown","e800817e":"markdown","4c74c3b3":"markdown","a2c98f7c":"markdown","0c706b07":"markdown","7a9812bd":"markdown","4aaa5d5c":"markdown","33dc347f":"markdown","091c2e3a":"markdown","7704add8":"markdown","94c9596d":"markdown","b3d14d5b":"markdown","504895c5":"markdown","b5d795b5":"markdown","1907edc8":"markdown","b8bbc0e1":"markdown","c929e39c":"markdown","c82c7ef7":"markdown"},"source":{"6f7956f8":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib.colors import ListedColormap","2fad8ba7":"df=pd.read_csv('..\/input\/top50spotify2019\/top50.csv',engine=\"python\")\ndf.head(1)","aa5f5c54":"df=df.drop(['Unnamed: 0'],axis=1)\ndf.head(1)","96dacf70":"df.describe()","964afe40":"df.info()","dfaa3e56":"df.isnull().sum()","5d847ef3":"sns.set(font_scale=2)\nplt.figure(figsize=(15, 20))\nsns.countplot(y='Artist.Name', data=df)","8b42fa1a":"sns.set(font_scale=2)\nplt.figure(figsize=(15, 20))\nsns.countplot(y='Genre', data=df)","d18b269b":"sns.set(font_scale=2)\nplt.figure(figsize=(60,8))\nsns.swarmplot(x=\"Genre\", y=\"Energy\", data=df)\nplt.show()","a2b4e6ac":"sns.set(font_scale=2)\nsns.factorplot( \"Loudness..dB..\",\"Artist.Name\", data=df, kind=\"bar\",palette=\"muted\", legend=False, size=20)\nplt.show()","9cfb4d7f":"# Define a variable N\nN = 50\n# Construct the colormap\ncurrent_palette = sns.color_palette(\"muted\", n_colors=5)\ncmap = ListedColormap(sns.color_palette(current_palette).as_hex())\ncolors = np.random.randint(0,5,N)\n# Create a scatter plot\nplt.figure(figsize=(20,8))\nplt.scatter(df['Energy'],df['Danceability'], c=colors, cmap=cmap)\n# Add a color bar\nplt.colorbar()\n# Show the plot\nplt.show()","4d2d6335":"df.head(1)","cf09b1cf":"f,ax=plt.subplots(2,2,figsize=(25,15))\nsns.violinplot(x=\"Liveness\",ax=ax[0][0],data=df, palette=\"muted\")\nsns.violinplot(x=\"Valence.\",data=df,ax=ax[0][1], palette=\"muted\")\nsns.violinplot(x=\"Acousticness..\",data=df,ax=ax[1][0], palette=\"muted\")\nsns.violinplot(x=\"Speechiness.\",data=df,ax=ax[1][1], palette=\"muted\")\n","b4131e60":"df.plot(kind= 'box' , subplots=True, layout=(5,2), sharex=False, sharey=False, figsize=(12,20)) ","c5c58a6f":"df.hist (bins=10,figsize=(20,20))\nplt.show ()","88184cfe":"from wordcloud import WordCloud \ndf1=df['Track.Name'].to_string()\ntext = df1\nwordcloud = WordCloud().generate(text)\nf,ax=plt.subplots(1,1,figsize=(25,5))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","8104360d":"# Prepare Data\ndf1=df.head(100)\ndf2= df1.groupby('Genre').size()\n# Make the plot with pandas\ndf2.plot(kind='pie', subplots=True, figsize=(8, 8))\nplt.title(\"Pie Chart of Various Category of Difficulty\")\nplt.ylabel(\"\")\nplt.show()","15de5212":"f,ax=plt.subplots(1,1,figsize=(25,6))\nsns.kdeplot(df.loc[(df['Genre']=='canadian pop'), 'Beats.Per.Minute'], color='b', shade=True, Label='Canadian Pop')\nsns.kdeplot(df.loc[(df['Genre']=='reggaeton flow'), 'Beats.Per.Minute'], color='g', shade=True, Label='Reggaeton')\nsns.kdeplot(df.loc[(df['Genre']=='dance pop'), 'Beats.Per.Minute'], color='r', shade=True, Label='Dance Pop')\nsns.kdeplot(df.loc[(df['Genre']=='pop'), 'Beats.Per.Minute'], color='y', shade=True, Label='Pop')\nplt.xlabel('Beats Per Seconds') \nplt.ylabel('Probability Density') ","41c595c4":"sns.set(font_scale=1.5)\nplt.figure(figsize=(20,8))\ncorr = (df.corr())\nsns.heatmap(corr, xticklabels=corr.columns.values, yticklabels=corr.columns.values,cmap=\"YlGnBu\",annot=True,linewidths=.5, fmt=\".2f\")\nplt.title(\"Pearson Correlation of all Elements\")","21787bf0":"x=df1['Valence.']\ny=df1['Energy']\nN = 50\ncolors = np.random.rand(N)\narea = (25 * np.random.rand(N))**2\ndf3= pd.DataFrame({'X': x,'Y': y,'Colors': colors,\"bubble_size\":area})","d7f9bc89":"plt.scatter('X', 'Y', s='bubble_size', c='Colors', alpha=0.5, data=df3)\nplt.xlabel(\"X\", size=16)\nplt.ylabel(\"y\", size=16)\nplt.title(\"Bubble Plot with Matplotlib\", size=18)","cda00fcc":"plt.style.use('seaborn')\nx  = [(i+1) for i in range(10)]\ny1 = df1['Danceability'][1:11]\ny2 = df1['Loudness..dB..'][1:11]\ny3 = df1['Liveness'][1:11] \nplt.plot(x, y1, label=\"radius_mean\", color = 'B')\nplt.plot(x, y2, label=\"Loudness_dB\", color = 'R')\nplt.plot(x, y3, label=\"Liveness\", color = 'C')\nplt.plot()\nplt.xlabel(\"x axis\")\nplt.ylabel(\"y axis\")\nplt.title(\"Line Graph Example\")\nplt.legend()\nplt.show()","db958893":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ndf['Artist.Name']=le.fit_transform(df['Artist.Name'])\ndf['Genre']=le.fit_transform(df['Genre'])","a16675b7":"X = df.drop(['Track.Name','Popularity'],axis=1)\ny= df['Popularity']","b5581ba2":"from sklearn.preprocessing import StandardScaler \nsc_X = StandardScaler() \nX = sc_X.fit_transform(X) \nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state =0)","d59006ae":"from sklearn.metrics import accuracy_score, roc_auc_score, roc_curve, confusion_matrix, auc\nfrom sklearn.metrics import confusion_matrix, classification_report","6687e043":"from sklearn.linear_model import LinearRegression\nlm = LinearRegression()\nmodel = lm.fit(X,y)\nprint(f'alpha = {model.intercept_}')\nprint(f'betas = {model.coef_}')","f3f1cdf0":"model.predict(X)","972d28d6":"model = LinearRegression()\nmodel.fit(X_train, y_train)\npredictions = model.predict(X_test)\nsns.distplot(y_test - predictions, axlabel=\"Prediction\")\nplt.show()","bf0ecd24":"2.Genre","e800817e":"1.Artist Name","4c74c3b3":"**Scatter Plot**","a2c98f7c":"**Bubble Graph**","0c706b07":"**Histogram**","7a9812bd":"**Heatmap**","4aaa5d5c":"**Swarmplot**","33dc347f":"**Vionlinplot**","091c2e3a":"**Factorplot**","7704add8":"**Countplot**","94c9596d":"**KDE Plot**","b3d14d5b":"Importing Libraries","504895c5":"**Boxplot**","b5d795b5":"**Piechart**","1907edc8":"**Wordcloud**","b8bbc0e1":"**Table of content**\n\n1.Importing Dataset\n\n2.Dealing with missing values\n\n3.Data visualization\n\n    1.Count plot\n  \n    2.Histogram\n  \n    3.Violinplot\n  \n    4.Boxplot\n  \n    5.Swarmplot\n  \n    6.Factorplot\n  \n    7.Heatmap\n    \n    8.Wordcloud\n    \n    9.Piechart","c929e39c":"Importing Dataset","c82c7ef7":"**Line graph**"}}