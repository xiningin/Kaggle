{"cell_type":{"c162b601":"code","ba3de54a":"code","ab76ef1d":"code","0c105af3":"code","4e8a9244":"code","bba10a62":"code","11730004":"code","422a5322":"code","a0caf960":"code","f630fff8":"code","0c0f4615":"code","54612c16":"code","64a0b0c3":"code","e710c369":"code","c96c5885":"code","59b0180d":"code","fad1d7b4":"code","b8f4dafd":"code","57b555ac":"code","91840c5e":"code","9a662f1d":"code","a1a26eb6":"code","db37dc74":"code","307e270f":"markdown","c517d00c":"markdown","d81b4ef7":"markdown","7659e078":"markdown","39f0c22f":"markdown","3be7048f":"markdown","d53ea7a8":"markdown","7a6ab245":"markdown","29be0d0d":"markdown","a5d93d68":"markdown"},"source":{"c162b601":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","ba3de54a":"import pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.svm import LinearSVC\nfrom sklearn.metrics import accuracy_score","ab76ef1d":"true = pd.read_csv('\/kaggle\/input\/fake-and-real-news-dataset\/True.csv')\nfake = pd.read_csv('\/kaggle\/input\/fake-and-real-news-dataset\/Fake.csv')\ntrue['status'] = 0\nfake['status'] = 1\n\ndf = pd.concat([true, fake])\ndf = df.sample(frac = 0.5)","0c105af3":"df","4e8a9244":"df.title = df.title.str.lower()\ndf.text = df.text.str.lower()\ndf = df.drop(columns = ['subject','date'])","bba10a62":"df.text = df.title + ' ' + df.text","11730004":"df = df.drop(columns = ['title'])","422a5322":"df.head()","a0caf960":"train, test = train_test_split(df, test_size = 0.3, random_state = 7)","f630fff8":"train","0c0f4615":"test","54612c16":"cv = CountVectorizer(stop_words = 'english')\nfitting = list(train.text)\ncv.fit(fitting)","64a0b0c3":"features = cv.transform(fitting).toarray()","e710c369":"inv_vocab = {v: k for k, v in cv.vocabulary_.items()}\nvocabulary = [inv_vocab[i] for i in range(len(inv_vocab))]","c96c5885":"new_train = pd.DataFrame(features, columns = vocabulary)","59b0180d":"new_train","fad1d7b4":"#Finding the least 80000 used words to be removed from the training dataset\nto_remove = list(new_train.sum(axis = 0).sort_values()[:65000].index)","b8f4dafd":"new_train = new_train.drop(columns = to_remove)","57b555ac":"new_train","91840c5e":"svc = LinearSVC()\nsvc.fit(new_train, train.status)","9a662f1d":"test_features = cv.transform(list(test.text)).toarray()\nnew_test = pd.DataFrame(test_features, columns = vocabulary)\nnew_test = new_test.drop(columns = to_remove)\nnew_test","a1a26eb6":"ans = svc.predict(new_test)","db37dc74":"accuracy_score(ans, test.status)","307e270f":"**Hello There**\n\nIn this notebook I am going to create a linear SVM model to predict the authenticity of a news. If you found any mistake feel free to drop a comment. Cheers","c517d00c":"The majority of the words appear less than 5 times in the whole news and hence it is un necessary for the training model, thus I decided to remove the least 65000 keywords appeared in the whole news. This will also fasten the training time","d81b4ef7":"In order to extract the words from all the news, I am going to make use of count vectorizer function","7659e078":"Next, I merge together the title and text and add a spcae between these two","39f0c22f":"For the test dataframe, we need to create the exact features as the train dataframe","3be7048f":"Next, we are going to convert all capitals in both title and text columns into lower case characters\nAnd drop the subject and date, as we are going to make use only the words fron the text and title","d53ea7a8":"Notice at the end of the line, i do a sampling by fraction of 0.5. This is due to the ram capacity. When i tried this locally on my computer just use the original dataframe is fine, however here i need to scale it down by half so that the ram can finish the computation","7a6ab245":"Now I created two dataframe, one for training and one for testing with test size 0.3","29be0d0d":"After we create the fake and true dataset, we need to add a \"status\" column to both of the datasets. Where the value will be 1 if it belongs to the fake class and 0 otherwise\n\nThen we combine both as one dataframe, called it df","a5d93d68":"And Voila! We achieved 99.4% of accuracy in the test set. This is because SVM model is a very good model when we are working with data that has a lot of features such as in this case"}}