{"cell_type":{"c22ef6d1":"code","b3030890":"code","95598e52":"code","4d303135":"code","b7d94ad7":"code","e07b7e1a":"code","95671e34":"code","230846ce":"code","f1b058e8":"code","c57453e0":"code","ec1741f1":"code","320e5214":"code","b9cede41":"code","e9a8b311":"code","60393b58":"code","fc6b50de":"code","6ea50dbc":"code","ba93ed1a":"code","d9d4c238":"code","ee2347c1":"code","461e88bf":"code","4713c299":"code","49f730ee":"code","7b1b7156":"code","13a95052":"code","e00f5159":"code","beee3e7f":"code","59b03d26":"code","8b2906ed":"code","7c7ff05c":"code","05213b82":"code","89897d66":"markdown","6faca882":"markdown","c761a6d5":"markdown","6ba61838":"markdown","4bdc52cb":"markdown","4106ef60":"markdown","311cef90":"markdown","1b5b552b":"markdown","060d12a5":"markdown"},"source":{"c22ef6d1":"import numpy as np \nimport pandas as pd \nimport pandas_profiling as pp","b3030890":"df_train = pd.read_csv('..\/input\/30-days-of-ml\/train.csv', index_col = 'id')\ndf_test = pd.read_csv('..\/input\/30-days-of-ml\/test.csv', index_col = 'id')\nsubmission = pd.read_csv('..\/input\/30-days-of-ml\/sample_submission.csv')","95598e52":"df_train.head()","4d303135":"df_test.head()","b7d94ad7":"df_train.info()","e07b7e1a":"df_train.describe()","95671e34":"df_train.columns","230846ce":"df_train.shape","f1b058e8":"df_train.dtypes.value_counts()","c57453e0":"df_train.isnull().sum()","ec1741f1":"df_test.info()","320e5214":"df_test.columns","b9cede41":"df_test.describe()","e9a8b311":"df_test.shape","60393b58":"df_test.dtypes.value_counts()","fc6b50de":"df_test.isnull().sum()","6ea50dbc":"pp.ProfileReport(df_train)","ba93ed1a":"pp.ProfileReport(df_test)","d9d4c238":"df_train.dropna(axis=0, subset=['target'], inplace=True)\ny = df_train['target']\ndf_train.drop(['target'], axis=1, inplace=True)","ee2347c1":"from sklearn.model_selection import train_test_split\n\nfrom sklearn.preprocessing import OrdinalEncoder\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OrdinalEncoder\n\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.preprocessing import StandardScaler\n\nfrom xgboost import XGBRegressor\nfrom sklearn.model_selection import KFold","461e88bf":"x_train, x_test,y_train, y_test = train_test_split(df_train,y,test_size=0.25,random_state=7)","4713c299":"x_train.head()","49f730ee":"x_train.describe()","7b1b7156":"x_test.head()","13a95052":"x_test.describe()","e00f5159":"num_cols = df_train.select_dtypes(include=['int64', 'float64']).columns\ncat_cols = df_train.select_dtypes(include=['object', 'bool']).columns","beee3e7f":"print(\"Number of unique category for each categorical Feature\")\nfor cols in cat_cols:\n    print(f\"{cols}: {df_train[cols].nunique()}\")","59b03d26":"cat_transformer = OrdinalEncoder()\nnum_transformer = StandardScaler()\npreprocessor = ColumnTransformer(transformers=[\n    ('cat', cat_transformer, cat_cols),\n    ('num', num_transformer, num_cols)\n  \n])","8b2906ed":"x_train.head()","7c7ff05c":"model = XGBRegressor(n_estimators=1500, learning_rate=0.3, random_state=7, n_jobs=-1)\n\nclf = Pipeline(steps=[('preprocessor', preprocessor),\n                       ('model', model)\n                     ])\n\ncv = KFold(n_splits=10, shuffle=True, random_state=7)\n\nfor train_indx, test_indx in cv.split(df_train):\n    X_train, X_test = df_train.iloc[train_indx], df_train.iloc[test_indx]\n    y_train, y_test = y.iloc[train_indx], y.iloc[test_indx]\n    clf.fit(X_train, y_train)\n    yhat = clf.predict(X_test)\n    score = mean_absolute_error(yhat, y_test)\n    print(f\"Loss:{score}\")","05213b82":"predictions = clf.predict(X_test)\nsubmission['target'] = predictions\nsubmission.to_csv(\"submission.csv\", index=False)\n","89897d66":"# Firstly Import Some Basic Python libs","6faca882":"# Preprocess the Input Data","c761a6d5":"# Firstly check df_train data ","6ba61838":"# Preparing the Data and Creating the Model","4bdc52cb":"# Now Final Submission","4106ef60":"# Now Check df_test data","311cef90":"# Build Model","1b5b552b":"# Now train test split and Bluid model","060d12a5":"# Now Some Auto Exploratory data analysis with Pandas Profiling"}}