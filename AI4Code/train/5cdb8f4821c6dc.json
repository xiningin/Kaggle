{"cell_type":{"2e9a5494":"code","0696b352":"code","7dd07939":"code","d67acdc6":"code","85d4f07e":"code","e6379d5b":"code","c0daea11":"code","dd225165":"code","b26fc32e":"code","7e9560fe":"code","caae4665":"code","fd7e10e4":"code","e9547e1b":"code","b36d350d":"code","599f247e":"code","e0b29a01":"code","88910b08":"code","c8350185":"code","20d8a6f0":"code","40d363b6":"code","de58fcdd":"markdown","79ceb0fc":"markdown","dcb5b43c":"markdown","f2a996b8":"markdown"},"source":{"2e9a5494":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0696b352":"import numpy as np \nimport pandas as np\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns\n%matplotlib inline\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nimport sklearn.metrics as metrics\nimport os\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split,RandomizedSearchCV\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import accuracy_score\nimport seaborn as sns","7dd07939":"df=pd.read_csv(\"\/kaggle\/input\/engineering-placements-prediction\/collegePlace.csv\")\ndf.head()","d67acdc6":"df.info()","85d4f07e":"df.describe()","e6379d5b":"df.shape","c0daea11":"df.isnull().sum()","dd225165":"df['Gender'].unique()","b26fc32e":"df['Stream'].unique()","7e9560fe":"en = LabelEncoder()\ncatCols = ['Gender','Stream']\nfor cols in catCols:\n    df[cols] = en.fit_transform(df[cols])","caae4665":"df.head()","fd7e10e4":"df.info()","e9547e1b":"Y = df[\"PlacedOrNot\"]\nX = df.drop(\"PlacedOrNot\",axis = 1)","b36d350d":"Y=pd.DataFrame(Y)","599f247e":"X.head()","e0b29a01":"Y.head()","88910b08":"# Break off validation set from training data\nX_train_full, X_valid_full, Y_train, Y_valid = train_test_split(X, Y, train_size=0.8, test_size=0.2,random_state=0)","c8350185":"from xgboost import XGBClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import confusion_matrix, precision_score, recall_score, f1_score, accuracy_score, roc_auc_score\n# Define the model\n\n    \n    # defining the model\nclf = XGBClassifier(learning_rate=0.09, \n                    n_estimators=100, \n                    use_label_encoder=False,\n                    random_state=42)\n    \nclf.fit(X_train_full, Y_train, eval_metric='logloss')\npredictions = clf.predict(X_valid_full) \nprint(\"accuracy_score: \" + str(accuracy_score(Y_valid, predictions)))","20d8a6f0":"print(\"f1_score: \" + str(f1_score(Y_valid, predictions)))","40d363b6":"X.head(18)","de58fcdd":"### Preprocessing the data ","79ceb0fc":"### Reading the data\n","dcb5b43c":"### Spilitting the Data","f2a996b8":"### Encoding Category Data"}}