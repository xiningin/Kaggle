{"cell_type":{"bcdcb867":"code","f203fc6c":"code","9fba25ce":"code","f0acffd7":"code","db204d39":"code","5a1931cb":"code","cec15b2e":"code","4289f2f7":"code","62ecaa24":"code","9706212f":"markdown","9ede4478":"markdown","10ec8b97":"markdown","62396304":"markdown","c2d6e4f3":"markdown","c5f1f83b":"markdown","05b99fd1":"markdown","243bb4ca":"markdown"},"source":{"bcdcb867":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt #plotting library for vis\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f203fc6c":"#create a dataframe of imported zillow home values\nhomes = pd.read_csv(\"..\/input\/zillow-home-value-index-zhvi\/City_Zhvi_AllHomes.csv\", encoding='latin-1')\nhomes.head()","9fba25ce":"#create new data frame of melted years columns with home values into rows \nhomes2 = pd.melt(homes, id_vars=[\"RegionID\", \"RegionName\", \"State\", \"Metro\", \"CountyName\", \"SizeRank\"], var_name=\"Date\", value_name=\"Value\")\nhomes2['Date']= pd.to_datetime(homes2['Date']) #change dates to date type\n","f0acffd7":"homes2.head()","db204d39":"#create and plot dataframe the sums of all home values for each year\nnational_sum = homes2.groupby('Date')['Value'].agg(SumValue=('Value', sum)).reset_index() \nplt.figure(figsize=(15,10))\nplt.plot('Date', 'SumValue', data=national_sum)\nplt.xlabel('Years')\nplt.ylabel('Zillow Home Value')\nplt.title('Zillow Home Values Across National over the Years')\nplt.show()\n","5a1931cb":"#create and plot dataframe the sums home values for each state for each year in a single graph\nstate_sum = homes2.groupby(['State', 'Date'])['Value'].agg(SumValue=('Value', sum)).reset_index()\nstates = np.unique(state_sum['State']) #create a list of all states\n\nplt.figure(figsize=(15,10))\n\n#plot each values for each individual state\nfor state in states:\n    display_state = state_sum[state_sum['State'] == state]\n    plt.plot('Date', 'SumValue', data=display_state, alpha = 0.9, label=state)\n\nplt.legend(loc=2, ncol=10)\nplt.xlabel('Years')\nplt.ylabel('Zillow Home Value')\nplt.title('Zillow Home Values for each State over the Years')\nplt.show()","cec15b2e":"#create and plot dataframe the sums home values for each state for each year in a single graph\nstate_sum = homes2.groupby(['State', 'Date'])['Value'].agg(SumValue=('Value', sum)).reset_index()\nstates = np.unique(state_sum['State']) #create a list of all states\n\n\n#plot each values for each individual state\nfor state in states:\n    display_state = state_sum[state_sum['State'] == state]\n    plt.plot('Date', 'SumValue', data=display_state, alpha = 0.9, label=state)\n    plt.xlabel('Years')\n    plt.ylabel('Zillow Home Value')\n    plt.title('Zillow Home Values for %s over the Years' %state)\n    plt.show()\n\n\n","4289f2f7":"plt.figure(figsize=(15,10))\n\n#create a bar graph with home value of last reported datapoint for each state\nfor state in states:\n    display_state = state_sum[state_sum['State'] == state]\n    y = display_state.tail(1)['SumValue'] #last reported data point\n    plt.bar(state, y)\n    plt.xlabel(\"State\")\n    plt.ylabel(\"Home Value\")\n    \nplt.title('Zillow Home Values for each state in Dec 2019')\nplt.show()","62ecaa24":"plt.figure(figsize=(15,10))\n\nstate = \"WA\" #save state as a variable to be easily changed\ntime = \"2019-12-01\" #date variable in to be easily changed \n\nwashington = homes2.loc[homes2['State'] == state] #save washington state values in new dataframe\nsubset = washington.loc[washington['Date'] == time] #create a new dataframe for single date\n\npercentage = subset['Value'].array #put home values into an array\ncity = subset['RegionName'].array #put city labels into an array\n\n#replace all null values with 0\npos = 0\nfor x in percentage:\n    if np.isnan(x) == True:\n        percentage[pos] = 0\n    pos = pos + 1\n\n#plot pie chart\nplt.pie(percentage, labels = city)\nplt.show\n","9706212f":"By taking the aggregated sum of all home values for each year, we can plot the change over time for the entire nation","9ede4478":"Since the last graph is hard to read, it is better to plot the graphs in small multiples for each state trend. ","10ec8b97":"For this homework assignment, I explore home values provided by Zillow: https:\/\/www.zillow.com\/research\/data\/\n\nThis is of particular interest to me as I hope to invest in property in the future. This datesets has home values across the U.S. from 1996 to the present down to the granular level of Metro area. I would like to explore the trends of home values across time in the US as well as Washington state. ","62396304":"By only aggregating based on State, we can compare the trends on the state level on the same graph.","c2d6e4f3":"Graph pie chart of home values in a single state per city for a single month","c5f1f83b":"Compare the home values across states in last report (dec 2019)","05b99fd1":"Since the columns run long, I thought it would be best to melt all the Date data to indicate a singular column with a new column to house the corresponding home value. ","243bb4ca":"First thing I did was inport the data and look to see how it is formatted. "}}