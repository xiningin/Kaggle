{"cell_type":{"94145a4e":"code","c5caf92f":"code","f630dfeb":"code","a55156f9":"code","e2f77adb":"code","c915b191":"markdown","eaaf59c7":"markdown","781f7845":"markdown","048703e2":"markdown","23985293":"markdown"},"source":{"94145a4e":"number = 1 + 2 * 3 \/ 4.0\nprint(number)","c5caf92f":"squared = 7 ** 2\ncubed = 2 ** 3\nprint(squared)\nprint(cubed)","f630dfeb":"#Python supports concatenating strings using the addition operator:\n\nhelloworld = \"str\" + \" \" + \"example\"\nprint(helloworld);\n\n#Python also supports multiplying strings to form a string with a repeating sequence:\n\nlotsofhellos = \"hello\\n\" * 4\nprint(lotsofhellos)","a55156f9":"#Lists can be joined with the addition operators:\n\neven_numbers = [2,4,6,8]\nodd_numbers = [1,3,5,7]\nall_numbers = odd_numbers + even_numbers\nprint(all_numbers)\nprint('\\n\\n') #add extra line.\n\n\n#Just as in strings, Python supports forming new lists with a repeating sequence using the multiplication operator:\n\nprint([10,20,30] * 3);","e2f77adb":"x = object()\ny = object()\n\n# TODO: change this code\nx_list = [x] * 10\ny_list = [y] * 10\nbig_list = x_list + y_list\n\nprint(\"x_list contains %d objects\" % len(x_list))\nprint(\"y_list contains %d objects\" % len(y_list))\nprint(\"big_list contains %d objects\" % len(big_list))\n\n# testing code\nif x_list.count(x) == 10 and y_list.count(y) == 10:\n    print(\"Almost there...\")\nif big_list.count(x) == 10 and big_list.count(y) == 10:\n    print(\"Great!\")","c915b191":"# # Using Operators with Lists\n\n","eaaf59c7":"Just as any other programming languages, the addition, subtraction, multiplication, and division operators can be used with numbers.","781f7845":"# Practice\n\nThe target of this exercise is to create two lists called x_list and y_list, which contain 10 instances of the variables x and y, respectively. You are also required to create a list called big_list, which contains the variables x and y, 10 times each, by concatenating the two lists you have created.","048703e2":"Using two multiplication symbols makes a power relationship.","23985293":"This section explains how to use basic operators in Python.\n\n# **Arithmetic Operators**\n# \n\n1. **+**\tAddition: adds two operands. e.g x + y\n\n2. **-**\tSubtraction: subtracts two operands. e.g\tx - y\n\n3. *****\tMultiplication: multiplies two operands. e.g\tx * y\n\n4. **\/**\tDivision (float): divides the first operand by the second. e.g\tx \/ y\n\n5. **\/\/**  Division (floor): divides the first operand by the second. e.g\tx \/\/ y\n\n6. **%**\tModulus: returns the remainder when first operand is divided by the second. e.g\tx % y\n\n7. ******\tPower : Returns first raised to power second. e.g\tx ** y\n"}}