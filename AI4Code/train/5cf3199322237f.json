{"cell_type":{"e1803489":"code","e10b29d5":"code","b2242a76":"code","9634ee2c":"code","d2ba3809":"code","d9323f24":"code","6bb26106":"code","9f59cab0":"code","19f616a1":"code","2c7adc8f":"code","97607a9c":"code","25106fa1":"code","980be923":"code","90f49982":"code","b5eb6d05":"code","8b8ab99a":"code","78c1809a":"code","5dd7c2b4":"code","f648b0f1":"code","c09586b8":"code","8ecee4d0":"code","fc623d4b":"code","6a36818b":"code","f287aebc":"code","f517725a":"code","6261ca1d":"code","ee0b0036":"code","9f846bf4":"code","66a2479c":"code","c552df53":"code","6209a0e5":"code","96abf677":"code","39342ea8":"code","0c05e7b2":"code","58a1e5a0":"code","bc4ed4b1":"code","8b4e952b":"code","1098f6ec":"code","aa9c8687":"code","d394cc73":"code","52c7d53d":"code","6358b5c1":"code","d306426e":"code","9f14d65f":"markdown","4e621d35":"markdown","ba0a4914":"markdown","566603e2":"markdown","15335c1c":"markdown","0acf9e4e":"markdown","166d07ee":"markdown","e4dcc86d":"markdown","f98e6876":"markdown","dc670288":"markdown","c5f80954":"markdown","499886c6":"markdown","f6d120f6":"markdown","477488cf":"markdown","6d73e5d3":"markdown","6ea0e4c1":"markdown","4414860a":"markdown","3abc3ccd":"markdown","d2f7381b":"markdown","c265f74a":"markdown","8df6aaf6":"markdown","dd7af7f0":"markdown","92f46ba7":"markdown","4e2b5528":"markdown","ac4fd892":"markdown","a14cca22":"markdown","a5594d3c":"markdown","6ef6de9d":"markdown","61f6b5da":"markdown","d983e569":"markdown","a6374efd":"markdown","2874bc7f":"markdown","665a73a6":"markdown","c3fee5bd":"markdown"},"source":{"e1803489":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom datetime import datetime","e10b29d5":"geo_data = pd.read_csv('..\/input\/brazilian-ecommerce\/olist_geolocation_dataset.csv')","b2242a76":"geo_data.head()","9634ee2c":"import os\nimport conda\n\nconda_file_dir = conda.__file__\nconda_dir = conda_file_dir.split('lib')[0]\nproj_lib = os.path.join(os.path.join(conda_dir, 'share'), 'proj')\nos.environ[\"PROJ_LIB\"] = proj_lib\nfrom mpl_toolkits.basemap import Basemap","d2ba3809":"lat = geo_data['geolocation_lat']\nlon = geo_data['geolocation_lng']\n\nplt.figure(figsize=(10,10))\n\nm = Basemap(llcrnrlat=-55.401805,llcrnrlon=-92.269176,urcrnrlat=13.884615,urcrnrlon=-27.581676)\nm.bluemarble()\nm.drawmapboundary(fill_color='#46bcec') # Make your map into any style you like\nm.fillcontinents(color='#f2f2f2',lake_color='#46bcec') # Make your map into any style you like\n#m.drawcoastlines()\nm.drawcountries()\nm.scatter(lon, lat,zorder=10,alpha=0.5,color='tomato')","d9323f24":"plt.figure(figsize=(10,10))\nsns.countplot(x ='geolocation_state', data=geo_data, \n              order=geo_data['geolocation_state'].value_counts().sort_values().index, \n              palette='icefire_r')","6bb26106":"order_data = pd.read_csv('..\/input\/brazilian-ecommerce\/olist_orders_dataset.csv')","9f59cab0":"order_data.isnull().sum()","19f616a1":"order_data['order_delivered_customer_date']= order_data['order_delivered_customer_date'].fillna(method='ffill')\norder_data['order_delivered_customer_date'].isnull().sum()","2c7adc8f":"order_data['delivered_time']=pd.to_datetime(order_data['order_delivered_customer_date'],\n                                            format='%Y-%m-%d').dt.date\norder_data['estimate_time']=pd.to_datetime(order_data['order_estimated_delivery_date'], \n                                           format='%Y-%m-%d').dt.date","97607a9c":"order_data['weekly']=pd.to_datetime(order_data['order_delivered_customer_date'],\n                                    format='%Y-%m-%d').dt.week","25106fa1":"order_data['yearly']=pd.to_datetime(order_data['order_delivered_customer_date'])\\\n                    .dt.to_period('M')\norder_data['yearly']= order_data['yearly'].astype(str)","980be923":"order_data['diff_days']= order_data['delivered_time']-order_data['estimate_time']\norder_data['diff_days']= order_data['diff_days'].dt.days","90f49982":"plt.figure(figsize=(20,10))\nsns.lineplot(x='weekly', y='diff_days', data=order_data, color=\"coral\", linewidth=5,\n            markers=True,dashes=False, estimator='mean')\n\nplt.xlabel(\"Weeks\", size=14)\nplt.ylabel(\"Difference Days\", size=14)\nplt.title(\"Average Difference Days per Week\",size=15, weight='bold')","b5eb6d05":"# Upload Olist_Order_Items and Product Data\norder_item_data = pd.read_csv('..\/input\/brazilian-ecommerce\/olist_order_items_dataset.csv')\nproducts_data = pd.read_csv('..\/input\/brazilian-ecommerce\/olist_products_dataset.csv')","8b8ab99a":"#Merge data\ntotal_orders=pd.merge(order_data, order_item_data)\nproduct_orders=pd.merge(total_orders,products_data, on=\"product_id\")\nproduct_orders.info()","78c1809a":"len(product_orders['product_id'].unique())","5dd7c2b4":"len(product_orders['product_id'].str[-8:].unique())","f648b0f1":"product_orders['product_id_shorten']=product_orders['product_id'].str[-8:]","c09586b8":"#Plotting Top 10 Products\nplt.figure(figsize=(20,10))\nsns.countplot(x='product_id_shorten', data=product_orders, palette='gist_earth',\n             order=product_orders['product_id_shorten'].value_counts()[:10]\\\n             .sort_values().index).set_title(\"Top 10 Products\", fontsize=15,\n                                             weight='bold')","8ecee4d0":"product_orders.groupby([\"product_category_name\"])[\"product_id_shorten\"].count().sort_values(ascending=False).head(10)","fc623d4b":"group_category= product_orders.groupby(['product_id_shorten','product_category_name',])['product_id_shorten']\\\n                                        .count().sort_values(ascending=False).head(10)\ngroup_category","6a36818b":"sellers_data = pd.read_csv('..\/input\/brazilian-ecommerce\/olist_sellers_dataset.csv')","f287aebc":"seller_products = pd.merge(product_orders, sellers_data, on=\"seller_id\")\nseller_products.info()","f517725a":"len(seller_products['seller_id'].unique())","6261ca1d":"len(seller_products['seller_id'].str[-6:].unique())","ee0b0036":"seller_products['seller_id_shorten']=seller_products['seller_id'].str[-6:]","9f846bf4":"plt.figure(figsize=(20,10))\nseller_products['seller_id_shorten'].value_counts()[:10].plot.pie(autopct='%1.1f%%',\n        shadow=True, startangle=90, cmap='tab20')\nplt.title(\"Top 10 Seller\",size=14, weight='bold')","66a2479c":"seller_category= seller_products.groupby(['seller_id_shorten', 'product_category_name'])\\\n                        ['seller_id_shorten'].count().sort_values(ascending=False).head(10)\nseller_category","c552df53":"f, (ax1, ax2) = plt.subplots(2, 1, figsize=(20,15))\ngroup_category.plot.barh(ax=ax1, cmap='summer')\nseller_category.plot.barh(ax=ax2, cmap='autumn')\n\nax1.set_title('Top10 Product', fontweight='bold')\nax2.set_title('Top10 Seller', fontweight='bold')\n\nax1.set_xlabel('Count', fontsize=15)\nax1.set_ylabel('Product Name', fontsize=15)\nax1.xaxis.set_tick_params(labelsize=12)\nax1.yaxis.set_tick_params(labelsize=15)\n\nax2.set_xlabel('Count', fontsize=15)\nax2.set_ylabel('Product Name', fontsize=15)\nax2.xaxis.set_tick_params(labelsize=12)\nax2.yaxis.set_tick_params(labelsize=15)","6209a0e5":"# First creating new feature of weeks\nproduct_orders['order_week']= pd.to_datetime(product_orders['order_purchase_timestamp'],\n                                            format='%Y-%m-%d').dt.week","96abf677":"plt.figure(figsize=(20,12))\nsns.countplot('order_week', data=product_orders[product_orders['product_id_shorten']== \n                                        '314663af'], palette='Dark2', linewidth=5)\\\n                                        .set_title('Weekly Purchased Number of `314663af`'\n                                                   ,fontweight='bold')\n","39342ea8":"#Weekly popular items \nitems_weekly =product_orders.groupby(['order_week','product_category_name'])\\\n                        ['product_category_name'].count().sort_values(ascending=False)\n#Change to data frame\nmost_products= items_weekly.reset_index(name='count')","0c05e7b2":"#Find the max value of row\nmax_selling_products= most_products[most_products['count'] \n                            == most_products.groupby(['order_week'])\\\n                            ['count'].transform(max)]\nmax_selling_products.head(10)","58a1e5a0":"max_selling_products['product_category_name'].value_counts()","bc4ed4b1":"payment_data = pd.read_csv('..\/input\/brazilian-ecommerce\/olist_order_payments_dataset.csv')","8b4e952b":"payments=pd.merge(seller_products, payment_data, on=\"order_id\")\npayments.info()","1098f6ec":"#First drop irrelevant columns that to make more handy to data\npayments= payments.drop(columns=['product_name_lenght','product_description_lenght',\n                                 'product_photos_qty','product_weight_g','product_length_cm',\n                                 'product_height_cm','product_width_cm'])","aa9c8687":"price_details= payments.groupby(['order_id','price','product_category_name',\n                                 'yearly','weekly'])[['freight_value','payment_value']].sum().reset_index()","d394cc73":"price_details['total_order_value'] = price_details['price'] + price_details['freight_value']","52c7d53d":"price_details['gross_profit'] = price_details['payment_value']- price_details['total_order_value']\nprice_details['profit_margin'] = price_details['gross_profit']\/price_details['payment_value']\nprice_details['profit_margin'] = price_details['profit_margin'].astype('int64')","6358b5c1":"price_details.sort_values('gross_profit', ascending=False).head(10)","d306426e":"plt.figure(figsize=(25,15))\n\nsns.lineplot(x='yearly',y='gross_profit',\n             data=price_details[price_details['product_category_name']\\\n             =='cama_mesa_banho'], label='bed_bath_table',color=\"green\")\nsns.lineplot(x='yearly', y='gross_profit',\n             data=price_details[price_details['product_category_name']\\\n             =='beleza_saude'], label='beauty_health', color=\"blue\")\nsns.lineplot(x='yearly', y='gross_profit',\n             data=price_details[price_details['product_category_name']\\\n             =='esporte_lazer'], label='sports_leisure', color=\"red\")\nsns.lineplot(x='yearly', y='gross_profit',\n             data=price_details[price_details['product_category_name']\\\n             =='moveis_decoracao'], label='home_decoration', color=\"orange\")\nsns.lineplot(x='yearly', y='gross_profit',\n             data=price_details[price_details['product_category_name']\\\n             =='informatica_acessorios'], label='Informatic_accessories', color=\"purple\")\nplt.title(\"Gross Profit of Top 5 Products (2016-2018)\",fontweight='bold')","9f14d65f":"Above graphs show the top products and top sellers category. While most selling product item belongs to the home decoration, most seller item belongs to garden tools.","4e621d35":"### 3.1.1. Feature Enginering with Time","ba0a4914":"As written on the data description, ``total order value`` can be calculated by sum of ``price`` and ``freight value``.","566603e2":"As the ``product id`` value name, the ``seller id`` name needed to be shortened. ","15335c1c":"Above table shows that 33 of 52 weeks the most selling's product is ``bed_table_bath``. This category is in the top 3 either most selling product group or most sellers group. ","0acf9e4e":"The above graph shows the Top 10 products. Top 3 products have a significant difference from the others. Because of the data information, we can't say about what are these products. But we can assume about their category.","166d07ee":"First Top 10 products' category shown below the table. According to the table, ``bed_table_bath`` orders have the highest one.","e4dcc86d":"## 2. Geo Exploratory","f98e6876":"``Delivered time`` and ``Estimate time`` features will be created.","dc670288":"## 1. Introduction\n\nIn this kernel, I would like to show some descriptive analysis of 'Olist Store' from Brazil. This data contains 100k orders information between 2016-2018.\n\nAbove analysis made by orders, geolocation, payments, seller, and products datasets. The aim of this project is finding the Top 10 products and sellers, analysis of orders by their geolocation and obtain information about Brazilian's online e-commerce profiles. \n","c5f80954":"Above graph shows that the earliest and latest deliveries. According to that, we can say that all deliveries made before their estimated date. \n* The earliest deliveries have been made in October. It means that this month is the least intensive period in those years.\n* Latest deliveries have been made at the end of June and beginning of August. It means that this time is the most intensive period in those years.","499886c6":"Despite the top product category of ``bed_table_bath``, the top ordered product's category is a ``home decoration``. ","f6d120f6":"Since the ``product_id`` value name is long, it needed to be shortened to make an analysis. With taking the last eight characters, uniqueness preserved. ","477488cf":"First, Olist_orders and olist_order_items databases will be joined.","6d73e5d3":"## 3.2. Customer Top 10 Product","6ea0e4c1":"The above graph shows the number of product orders purchased based on the states. According to that, S\u00e3o Paulo has the highest rate and there is a huge gap between the rest of the states.","4414860a":"## 3. Data Exploratory","3abc3ccd":"Now instead of the most selling ordered product, we can examine the most selling product category by weekly. ","d2f7381b":"Below graph shows the weekly purchased number of ``314663af``. According to that, the least purchased months are June and August. In the rest of the months, at least one week is the highest purchase of those months. ","c265f74a":"``Weekly`` feature created based on ``order delivered customer date``","8df6aaf6":"Above graph shows yearly 'gross profit' distribution for the top 5 product category of ordered products and sellers. According to data, we can say that ``informatic_accessories`` have the highest gross profit in Agust 2017 to November 2017. On the other hand, the top 3 products which are ``bed_bath_table``, ``beauty_health`` and ``sports_leisure``, gross profits are less than 200 units of currency.","dd7af7f0":"## 4. CONCLUCION\n\nIn this project, I wanted to show Brazilian online shoppers' some general profile based on product category, time, etc. I hope it would help other people who want to deal with this dataset.\n\nAny comments and feedback are welcomed.","92f46ba7":"Now, we can examine the most selling product's weekly purchased numbers, which is ``314663af`` and belong to ``home decoration``.","4e2b5528":"When we examine the population of Brazil, most of the population lived on the east coast and the small part is living more west side. Details about the population can be found on that web site: http:\/\/worldpopulationreview.com\/countries\/brazil-population\/#popDensityMap.\n\nAbove map shows the location of purchased product orders and according to the distribution of populations, it explains the highest shopping rate on the east coast. ","ac4fd892":"Below pie chart shows the Top 10 Seller. First 3 sellers have close proportions.","a14cca22":"Since, missing values' proportion is around 3%, Null Values from ``customer date`` feature will be filled with forward-fill method. This method, propagate the previous value forward","a5594d3c":"Finding different days of delivered and estimated times.","6ef6de9d":"First ``seller`` dataset will be merged with the ``product orders`` data.","61f6b5da":"Assuming for the orders' product category of these sellers, we can use 'product category' values. Below table shows the Top 10 sellers category, and since they can sell multiple product types, garden tools are the most selling product of the best seller. ","d983e569":"## 3.3. Payments \nLast data exploratory is about payments. ","a6374efd":"We can calculate ``Gross Profit`` and ``Profit Margin`` by ``payment value`` and ``total order value``","2874bc7f":"### 3.1. Order Data","665a73a6":"## 3.3. Top 10 Seller","c3fee5bd":"``Yearly`` feature created based on ``order delivered customer date``"}}