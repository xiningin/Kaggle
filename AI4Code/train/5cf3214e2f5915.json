{"cell_type":{"ee2fd410":"code","f1dbaca6":"code","a650ce3d":"code","3c139c2f":"code","d818b910":"code","ac8df4a4":"code","e767dc8e":"code","87f1723a":"code","e533db8c":"code","6c74a17e":"code","97bf19e5":"code","3b7fb800":"markdown","4efb1181":"markdown","2253f066":"markdown","69fb69cb":"markdown","59c51bd8":"markdown","c5424582":"markdown","22d91bc1":"markdown","dd610a16":"markdown","70a3b32f":"markdown","8bc8a5ec":"markdown","5d7f0447":"markdown"},"source":{"ee2fd410":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom datetime import date\nimport math \n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nplt.rcParams[\"font.family\"] = \"serif\"\n\n\n\ndef barchart(xVar , yVar , xName , yName , title): \n    plt.figure(figsize=(12,5))\n    plt.grid(zorder=0)\n    plt.bar(xVar , yVar,edgecolor='black' ,color='lightgreen', zorder= 3)\n    plt.plot(yVar, color = 'red' , zorder = 4 )\n    plt.xlabel(xName)\n    plt.xticks(rotation=90)\n    plt.ylabel(yName)\n    plt.title(title , fontweight='bold')\n    #set axis if needed\n    #plt.ylim(0,1)    \n    #draw line \n    #plt.axhline(y=0.0, color='r' , linestyle='-')\n    plt.show()\n    plt.clf()\n    \ndef multiBarchart(xData, multiYData, multiYLabel , xLabel , yLabel , title):    \n    plt.figure(figsize=(12,5)) \n    x = np.arange(len(xData))\n    plt.xlabel(xLabel)\n    plt.ylabel(yLabel)\n    plt.title(title)\n    ax = plt.subplot(111)\n    ax.set_xticks(x)\n    ax.set_xticklabels(xData)\n    interval = 0.2\n    mid = math.ceil(len(multiYData)\/2)\n    \n    \n    nextCounter = 1\n    for i in range(0 , len(multiYData)):    \n        if(i<=mid-1):\n            position = (i+1)*interval*-1\n            ax.bar(x-0.2, multiYData[i], width=0.2, color='b', align='center',label=multiYLabel[i])\n        elif(i>=mid-1):\n            position = (nextCounter) * interval\n            nextCounterer = nextCounter + 1\n            ax.bar(x+position, multiYData[i] , width = 0.2 , color = 'g', align ='center', label=multiYLabel[i])\n        else:\n            ax.bar(x,multiYData[i] , width = 0.2 , color = 'blue', align = 'center',label=multiYLabel[i])\n    ax.legend()\n    plt.show()\n\n\ndef pieChart(title,labels, values):\n    colors = ['yellowgreen', 'gold', 'lightskyblue', 'lightcoral']\n    patches, texts = plt.pie(values,colors=colors, startangle=90)\n    plt.legend(patches, labels, loc=\"best\")\n    plt.title(title)\n    # Set aspect ratio to be equal so that pie is drawn as a circle.\n    plt.axis('equal')\n    plt.tight_layout()\n    plt.show()\n    plt.clf()\n    \n    \ndef histogram(xData , num_bins , facecolor , title, xLabel , yLabel):\n    plt.grid(zorder = 0)\n    n, bins, patches = plt.hist(xData, num_bins, facecolor=facecolor, alpha=1 , zorder = 2)\n    plt.title(title , fontweight= 'bold')\n    plt.xlabel(xLabel)\n    plt.ylabel(yLabel)\n    plt.show() \n    plt.clf()\n    \ndef multiLinePlot(xData , multiYData , multiYLabel , xAxisLabel , yAxisLabel , plotTitle):\n    plt.figure(figsize=(10,5))\n    plt.grid(zorder = 0)\n    for i in range(0,len(multiYData)):\n        plt.plot( xData, multiYData[i],label=multiYLabel[i] , zorder=3 , linewidth = 3)\n    # Add legend\n   \n    plt.legend(loc='upper right')\n    # Add title and x, y labels\n    plt.title(plotTitle, fontsize=16, fontweight='bold')\n    plt.xlabel(xAxisLabel)\n    plt.xticks(rotation=90)\n    plt.ylabel(yAxisLabel)\n    plt.show()\n    \n# Any results you write to the current directory are saved as output.\ncases = pd.read_csv('\/kaggle\/input\/indonesia-coronavirus-cases\/cases.csv')\n\ncases.keys()","f1dbaca6":"cases.tail(5)","a650ce3d":"## 1. JUMLAH YANG DIPERIKSA 10 HARI TERAKHIR \n##    HOW MANY PATIENTS BEING CHECKED LAST 10 TEN DAYS \nlast_Data = cases.tail(1)\nlast_Date = last_Data['date'].values[0] \n\nlast_fiveDay = cases.tail(10)\nbarchart(cases.date , cases.acc_tested , 'Last Checked Date', 'How Many People  Being Checked' , \n         'Accumulative how many people being checked \\n for Covid-19 until ' + last_Date + ' in Indonesia') ","3c139c2f":"acc_negative = cases.tail(1).acc_negative[cases.tail(1).first_valid_index()]\nacc_confirmed = cases.tail(1).acc_confirmed[cases.tail(1).first_valid_index()]\nvalues = [acc_negative , acc_confirmed]\nlabels = ['Negative Covid-19', 'Positive Covid-19']\npieChart('Confirmed Positive and Negative Cases  \\n in Indonesia Until ' + last_Date,\n        labels,\n        values)","d818b910":"\npositive_rate = cases['acc_confirmed'] \/ cases['acc_tested'] * 100\nnegative_rate = cases['acc_negative'] \/ cases['acc_tested'] * 100 \ndeceased_rate = cases['acc_deceased'] \/ cases['acc_confirmed'] * 100\nmultiYValues = [positive_rate, negative_rate , deceased_rate]\nmultiYLabels = ['Positive Rate', 'Negative Rate', 'deceased Rate']\nmultiLinePlot( cases['date'] , multiYValues , multiYLabels , \n              'Date ' ,'Percentage Rate', 'Trend Covid-19 Indonesia \\n  Case in  March 2020')","ac8df4a4":" barchart(cases.date , cases.new_confirmed\n          , 'Date', 'Daily Confirmed ' , \n         'Daily Confirmed Patient Day by Day \\n until ' + last_Date + ' di Indonesia') \n","e767dc8e":"patient_Dataframe = pd.read_csv('\/kaggle\/input\/indonesia-coronavirus-cases\/patient.csv')\nprint(patient_Dataframe.keys())\n\n# so there are row that column sex is nan, replace with undefined\npatient_Dataframe['gender'] = patient_Dataframe['gender'].replace(np.nan , 'undefined' , regex = True)\npatient_Dataframe['province'] = patient_Dataframe['province'].replace(np.nan, 'undefined' , regex = True)\npatient_Dataframe['hospital'] =patient_Dataframe['hospital'].replace(np.nan , 'undefined' , regex = True)\npatient_Dataframe.head(5)","87f1723a":"patientgroupbygender= patient_Dataframe[['gender', 'patient_id']].groupby('gender').count()\npieChart('Gender Positive Patient Comparison Covid \\n in  Indonesia until ' + last_Date,\n        patientgroupbygender.index,\n        patientgroupbygender.patient_id)","e533db8c":"patientgroupbycity = patient_Dataframe[['province', 'patient_id']].groupby('province').count()\npieChart('Confirmed Covid 19 Patient \\n Distribution by Province in Indonesia until ' + last_Date,\n        patientgroupbycity.index,\n        patientgroupbycity.patient_id)","6c74a17e":"patientgroupbyhospital = patient_Dataframe[['hospital', 'patient_id']].groupby('hospital').count()\npieChart('Grafik jumlah pasien Covid-19 berdasarkan \\n Rumah sakit (City) di Indonesia sejak ' + last_Date,\n        patientgroupbyhospital.index,\n        patientgroupbyhospital.patient_id)","97bf19e5":"histogram(patient_Dataframe.age , 6 , 'red',\n         'Confirmed Covid Patient Distribusion \\n case in Indonesia until  ' + last_Date,\n         'Age',\n         'Frecuency')","3b7fb800":"lets see how The Data Described**","4efb1181":"### Daily Covid-19 Indonesia Confirmed Patients March 2020\n\n","2253f066":"# So I'am going to do EDA Analysis On Corona Virus (Covid-19) cases In Indonesia\nUsing Python and several Libraries \n\nBelow is the avalable data in csv \nLets setup some libraries and some method that we will using","69fb69cb":"# Let's see how many people tested in March 2020","59c51bd8":"> ","c5424582":"# Lets see the distribution of the positive covid-19 patient by where they're being hospitalized  \n\nthere also unupdated data about the whereabout of the patients based by the hospital","22d91bc1":"# Lets see the Age Distribution of positive covid patient using histogram\n\nfrom the histogram we see that there ranged 0 - 80 can also potentially \nbecome covid 19 patient, from the distribution we see that age range 45 to 80 are the most who \nvulnerable to Covid-19 , so please take care the elders !","dd610a16":"**Lets see How the Data described **","70a3b32f":"**positive and negative Tested Covid-19 in Indonesa**","8bc8a5ec":"# **Lets see how many male (Lelaki) and  female (Perempuan) who is positive covid-19**\n\nthere are undefined gender from the data, I hope this will give feedback to the data provider ","5d7f0447":"## Lets see trend the positive , negatif and deceased rate by this month Ten Days \n\nit seems the positive rate keeps increasing and the negative is the opposite, lets keep social distancing and physical distancing :("}}