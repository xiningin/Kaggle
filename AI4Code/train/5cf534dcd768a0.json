{"cell_type":{"8c690bd5":"code","805f044f":"code","3b3a89b3":"code","c3dd1a74":"code","d1ff8513":"code","fefa314b":"code","5d94e495":"code","f790cc29":"code","bc3ad190":"code","8dab4bdd":"code","8bc88bab":"code","d49dc4ee":"code","86931691":"code","d581d8e6":"code","30c2ee7f":"code","23485a9d":"code","694f0b11":"code","296172d0":"code","5af81056":"code","e4e211b7":"code","e0bcfea5":"code","c6bc25f6":"code","b44af5d8":"code","1791117b":"code","2948234a":"code","2429793c":"code","c6dff70c":"code","5cd1662c":"code","ea92e76c":"code","1f98e5ea":"code","c6df1c27":"markdown"},"source":{"8c690bd5":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nfrom scipy import stats","805f044f":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","3b3a89b3":"data = pd.read_csv(\"..\/input\/house-prices\/House_price.csv\")","c3dd1a74":"data.head()","d1ff8513":"data.dtypes","fefa314b":"data.isnull().sum()","5d94e495":"data1 = data.Address","f790cc29":"data1 = data1.str.split(expand= True)","bc3ad190":"#extracting the data regarding state from the given Address column\na = len(data1)\nfor i in range(a):\n    for j in range(9):\n        if data1.iloc[i,j] != None:\n            if len(data1.iloc[i,j])>2:\n                data1.iloc[i,j] = None","8dab4bdd":"data1['State'] = data1[data1.columns[1:]].apply(\n    lambda x: ','.join(x.dropna().astype(str)),\n    axis=1)","8bc88bab":"data2 = data1.State","d49dc4ee":"data = pd.concat([data, data2], axis=1)","86931691":"data","d581d8e6":"len(data.State.unique())","30c2ee7f":"data.describe()","23485a9d":"sns.heatmap(data.corr(),annot = True)","694f0b11":"data['Price'].plot.hist(bins = 20)\nplt.xlabel('Price')\nplt.ylabel('Frequency')\nplt.title('Distribution of Price')\nplt.show()","296172d0":"x = data['Avg. Area Income']\ny = data['Price']\nplt.scatter(x,y)\nm, b = np.polyfit(x, y, 1)\nplt.plot(x, m*x + b, color = 'red')\nplt.ylabel('House Price')\nplt.xlabel('Area Income')\nplt.title(\"Price vs Area Income\")\nplt.show()","5af81056":"x = data['House Age']\ny = data['Price']\nplt.scatter(x,y)\nm, b = np.polyfit(x, y, 1)\nplt.plot(x, m*x + b, color = 'red')\nplt.ylabel('House Price')\nplt.xlabel('Age of House')\nplt.title(\"Price vs Age of House\")\nplt.show()","e4e211b7":"x = data['Number of Rooms']\ny = data['Price']\nplt.scatter(x,y)\nm, b = np.polyfit(x, y, 1)\nplt.ylabel('House Price')\nplt.xlabel('No of Rooms')\nplt.plot(x, m*x + b, color = 'red')\nplt.title(\"Price vs No of Rooms\")\nplt.show()","e0bcfea5":"x = data['Number of Bedrooms']\ny = data['Price']\nplt.scatter(x,y)\nm, b = np.polyfit(x, y, 1)\nplt.plot(x, m*x + b, color = 'red')\nplt.ylabel('House Price')\nplt.xlabel('No of Bedrooms')\nplt.title(\"Price vs No of Bedrooms\")\nplt.show()","c6bc25f6":"x = data['Area Population']\ny = data['Price']\nplt.scatter(x,y)\nm, b = np.polyfit(x, y, 1)\nplt.plot(x, m*x + b, color = 'red')\nplt.ylabel('House Price')\nplt.xlabel('Area Population')\nplt.title(\"Price vs Area Population\")\nplt.show()","b44af5d8":"x = data['State']\ny = data['Price']\nfig = plt.figure(figsize=(35, 10))\nax = fig.add_subplot(121)\nax.scatter(x, y)\nplt.title(\"Price vs State\")\nplt.show()","1791117b":"#from the Price vs State graph is seems quite clear that distribution across each state is fairly normal and state \n# doesn't seem to be having any effect on the final price of the house \n# Hence, one can drop the Address part of the data and can proceed without it.\ndata = data.drop(labels = 'Address', axis = 1)","2948234a":"#we export the data into a csv file\ndata.to_csv(\"House_price_6.csv\", index = False)","2429793c":"# now we check for any outliers\nsns.boxplot(x=data['Price'])","c6dff70c":"sns.boxplot(x=data['House Age'])","5cd1662c":"sns.boxplot(x=data['Number of Rooms'])","ea92e76c":"sns.boxplot(x=data['Number of Bedrooms'])","1f98e5ea":"sns.boxplot(x=data['Area Population'])","c6df1c27":"I further perform model fitting on the same dat set and the link to the same is as foloows:   \nhttps:\/\/www.kaggle.com\/tanyachawla412\/regression-with-regularisation-of-house-prices   \n\n**Please Up Vote if you like it!!!!**"}}