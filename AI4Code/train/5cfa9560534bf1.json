{"cell_type":{"2bef7054":"code","6b7cc98e":"code","4ccc824a":"code","56b7a43e":"code","0017e1e7":"code","cf20137d":"code","eb9e3893":"code","c9a3f8b3":"code","b3301c8c":"code","b1dc78c7":"code","ceab40c9":"code","57651294":"code","25ccf367":"code","ac0553bc":"code","8b644797":"code","43cdb31a":"code","e1995547":"code","cbeda2b9":"code","7a4a328a":"code","3f968511":"code","b0d2f80c":"code","f00e4847":"code","b94a410e":"code","eb84b2fb":"code","860d57bc":"code","330bc579":"code","0450bda2":"code","2b019122":"code","f78e58c0":"code","f33702d4":"code","d4507d03":"code","94f83537":"code","da0ac23d":"code","d3dc3a59":"code","cad495c4":"code","1bb5a624":"code","257b313b":"code","33882747":"code","169fe532":"code","000b1e88":"code","23b3c0f0":"code","61489321":"code","38ea1e19":"code","74ac4ef3":"code","5bf2a8f8":"code","91f63180":"code","6014798c":"code","034277f5":"code","1470b752":"code","ee0527ba":"code","59b76c43":"code","07ae6645":"code","34240035":"code","98be5bf0":"code","ef1d041e":"code","9852f9f9":"code","a4d1b7cd":"code","d31e4a0c":"code","9dae1005":"code","f5275a97":"code","911ad405":"code","3a9f57bc":"code","df701445":"code","e858ea81":"code","fc03003b":"code","bb542d7e":"code","6f192725":"code","b38fcbb0":"code","f642153a":"markdown","86b099f7":"markdown","d2e22ca5":"markdown","e3613bc9":"markdown","0a2a4e5c":"markdown","8a1746a4":"markdown","204b9132":"markdown","23ea4cbf":"markdown","bba10ed1":"markdown","20ee165a":"markdown","e4c8fed5":"markdown","f5d8d285":"markdown","8d88285c":"markdown","f1b078f1":"markdown","b0eb3a82":"markdown","500adb4a":"markdown","f1c5daeb":"markdown","cea2aa8f":"markdown","4bdebde2":"markdown","1f2e7284":"markdown","8237f9ff":"markdown","5526d5d0":"markdown","607771d6":"markdown","e6e00122":"markdown","9655bb71":"markdown","85868e5d":"markdown","1098eab7":"markdown","868b86cd":"markdown","25d930b9":"markdown","4c5af8c0":"markdown"},"source":{"2bef7054":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6b7cc98e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","4ccc824a":"train=pd.read_csv(r\"\/kaggle\/input\/titanic\/train.csv\")\ntrain.head()","56b7a43e":"# Data Dictionary with first column being datatype.\ndata = pd.DataFrame(train.dtypes)\ndata","0017e1e7":"train.shape","cf20137d":"train.describe()","eb9e3893":"train.info()","c9a3f8b3":"train[\"Survived\"].value_counts()","b3301c8c":"train.groupby(\"Sex\")[\"Survived\"].value_counts()","b1dc78c7":"# Identifying the missing values from the dataset\n\ndata[\"Missing value\"]=train.isnull().sum()\ndata","ceab40c9":"# Identifying the count of the variables\n\ndata[\"Count\"]=train.count()\ndata","57651294":"data=data.rename(columns={0:'DataType'})\ndata","25ccf367":"test=pd.read_csv(r\"\/kaggle\/input\/titanic\/test.csv\")\ntest.head()","ac0553bc":"test.shape","8b644797":"test.info()","43cdb31a":"test.isnull().sum()","e1995547":"sns.countplot(x=\"Survived\",data=train)","cbeda2b9":"sns.countplot(x=\"Survived\",hue=\"Sex\",data=train)","7a4a328a":"sns.countplot(x=\"Survived\",hue=\"Pclass\",data=train)","3f968511":"sns.countplot(x=\"Survived\",hue=\"SibSp\",data=train)","b0d2f80c":"sns.countplot(x=\"Survived\",hue=\"Parch\",data=train)","f00e4847":"sns.countplot(x=\"Survived\",hue=\"Embarked\",data=train)","b94a410e":"sns.boxplot(x=\"Pclass\",y=\"Age\",data=train)","eb84b2fb":"sns.boxplot(x=\"Embarked\",y=\"Age\",data=train)","860d57bc":"sns.boxplot(x=\"Embarked\",y=\"Fare\",data=train)","330bc579":"sns.barplot(x=\"Pclass\",y=\"Survived\",data=train)\nplt.ylabel(\"survival rate\")\nplt.xlabel(\"Pclass\")\nplt.show()","0450bda2":"sns.barplot(x=\"Embarked\",y=\"Survived\",data=train)\nplt.ylabel(\"survival rate\")\nplt.xlabel(\"Embarked\")\nplt.show()","2b019122":"sns.barplot(x=\"Sex\",y=\"Survived\",data=train)\nplt.ylabel(\"survival rate\")\nplt.xlabel(\"Sex\")\nplt.show()","f78e58c0":"sns.barplot(x=\"Sex\",y=\"Survived\",hue=\"Pclass\",data=train)\nplt.ylabel(\"survival rate\")\nplt.xlabel(\"Sex\")\nplt.show()","f33702d4":"sns.barplot(x=\"Pclass\",y=\"Survived\",hue=\"Embarked\",data=train)\nplt.ylabel(\"survival rate\")\nplt.xlabel(\"Pclass\")\nplt.show()","d4507d03":"sns.violinplot(x=\"Pclass\", y=\"Age\",hue=\"Survived\", data = train, size = 9)\nplt.show()","94f83537":"train[\"Age\"][train[\"Pclass\"]==1] =train[\"Age\"][train[\"Pclass\"]==1].fillna(train[\"Age\"][train[\"Pclass\"]==1].median())\ntrain[\"Age\"][train[\"Pclass\"]==2] =train[\"Age\"][train[\"Pclass\"]==2].fillna(train[\"Age\"][train[\"Pclass\"]==2].median())\ntrain[\"Age\"][train[\"Pclass\"]==3] =train[\"Age\"][train[\"Pclass\"]==3].fillna(train[\"Age\"][train[\"Pclass\"]==3].median())\n\ntest[\"Age\"][test[\"Pclass\"]==1] =test[\"Age\"][test[\"Pclass\"]==1].fillna(test[\"Age\"][test[\"Pclass\"]==1].median())\ntest[\"Age\"][test[\"Pclass\"]==2] =test[\"Age\"][test[\"Pclass\"]==2].fillna(test[\"Age\"][test[\"Pclass\"]==2].median())\ntest[\"Age\"][test[\"Pclass\"]==3] =test[\"Age\"][test[\"Pclass\"]==3].fillna(test[\"Age\"][test[\"Pclass\"]==3].median())","da0ac23d":"sns.heatmap(train.isnull(),yticklabels=False,cbar=True,cmap=\"rainbow_r\")","d3dc3a59":"sns.heatmap(test.isnull(),yticklabels=False,cbar=True)","cad495c4":"#dropping the column cabin\ntrain.drop(\"Cabin\",axis=1,inplace=True)\ntest.drop(\"Cabin\",axis=1,inplace=True)","1bb5a624":"#dropping the column cabin\ntrain.drop(\"Fare\",axis=1,inplace=True)\ntest.drop(\"Fare\",axis=1,inplace=True)","257b313b":"#dropping all the remaining NaN values\ntrain.dropna(inplace=True)","33882747":"train.isnull().sum()","169fe532":"test.isnull().sum()","000b1e88":"sex=pd.get_dummies(train[\"Sex\"])\nsex1=pd.get_dummies(test[\"Sex\"])\n\nembarked=pd.get_dummies(train[\"Embarked\"])\nembarked1=pd.get_dummies(test[\"Embarked\"])","23b3c0f0":"train=pd.concat([train,sex,embarked],axis=1)\ntrain.head()","61489321":"train.drop([\"Sex\",\"Embarked\",\"Ticket\",\"Name\"],axis=1,inplace=True)\ntrain.head()","38ea1e19":"test=pd.concat([test,sex1,embarked1],axis=1)\ntest.head()","74ac4ef3":"test.drop([\"Sex\",\"Embarked\",\"Ticket\",\"Name\"],axis=1,inplace=True)\ntest.head()","5bf2a8f8":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(train.drop(\"Survived\",axis=1),train[\"Survived\"],test_size=0.2,random_state=5)","91f63180":"#import packages\nfrom sklearn.linear_model import LogisticRegression\n#call the function\nmodel1=LogisticRegression()\n#train it\nmodel1.fit(x_train,y_train)","6014798c":"pred1=model1.predict(x_test)","034277f5":"from sklearn.metrics import accuracy_score,confusion_matrix,classification_report\naccuracy1=accuracy_score(y_test,pred1)\naccuracy1","1470b752":"confusion_matrix(y_test,pred1)","ee0527ba":"from sklearn.tree import DecisionTreeClassifier\nmodel2=DecisionTreeClassifier(criterion=\"gini\",max_depth=None,min_samples_leaf=1,random_state=7)\nmodel2.fit(x_train,y_train)","59b76c43":"pred2=model2.predict(x_test)","07ae6645":"accuracy2=accuracy_score(y_test,pred2)\naccuracy2","34240035":"confusion_matrix(y_test,pred2)","98be5bf0":"from sklearn.ensemble import RandomForestClassifier\nmodel3 = RandomForestClassifier(criterion=\"gini\",max_depth=None,min_samples_leaf=1,random_state=10)\nmodel3.fit(x_train,y_train)","ef1d041e":"pred3 = model3.predict(x_test)","9852f9f9":"accuracy3=accuracy_score(y_test,pred3)\naccuracy3","a4d1b7cd":"confusion_matrix(y_test,pred3)","d31e4a0c":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.svm import SVC\n\nmodel = SVC()","9dae1005":"grid_param = {'C': [0.1,1, 10, 100, 1000],'gamma':[1,0.1,0.01,0.001,0.0001],'kernel': ['rbf']}\ngrid = GridSearchCV(SVC(),grid_param,verbose=3)","f5275a97":"grid.fit(x_train,y_train)","911ad405":"grid.best_params_","3a9f57bc":"pred4 = grid.predict(x_test)","df701445":"accuracy4=accuracy_score(y_test,pred4)\naccuracy4","e858ea81":"confusion_matrix(y_test,pred4)","fc03003b":"test.head()","bb542d7e":"final_pred = model1.predict(test)\nfinal_pred","6f192725":"test['Survived'] = final_pred\ntest.drop(['Pclass','Age','SibSp','Parch','female','male','C','Q','S'],inplace=True,axis=1)\ntest.head()","b38fcbb0":"test.to_csv('submission_titanic.csv', index=False)","f642153a":"# Model building - SVM","86b099f7":"# Categorical to numerical columns","d2e22ca5":"Observation(s):\n\n1) We can say that people with median age of 35 have taken class 1 ticket.\n\n2) We can say that people with median age of 30 have taken class 3 ticket.\n\n3) We can say that people with a median age of 25 have taken class 2 ticket.","e3613bc9":"# Missing data","0a2a4e5c":"# Training data statistics","8a1746a4":"Observation(s):\n\n1) Among the people who survived, highest count was of the people who had no parent\/children.","204b9132":"# Model building - logistic regression","23ea4cbf":"# Titanic dataset\n# The attritubes are:\n\n1) Pclass-Passenger Class (1 = 1st; 2 = 2nd; 3 = 3rd)\n\n2) survival-Survival (0 = No; 1 = Yes)\n\n3) name-Name\n\n4) sex-Sex\n\n5) age-Age\n\n6) sibsp-Number of Siblings\/Spouses Aboard\n\n7) parch-Number of Parents\/Children Aboard\n\n8) ticket-Ticket Number\n\n9) fare-Passenger Fare (British pound)\n\n10) cabin-Cabin\n\n11) embarked-Port of Embarkation (C = Cherbourg; Q = Queenstown; S = Southampton)","bba10ed1":"# Model building - Decision trees","20ee165a":"Observation(s):\n\n1) People who embarked from S had the highest chances of survival compared to people who embarked from C and Q.\n\n2) People who embarked from C had the highest chances of survival compared to people who embarked from Q.","e4c8fed5":"Observation(s):\n\n1) The median fare for people embarked from port C wa higher.","f5d8d285":"Obervation(s):\n\n1) We can say that people who were in first class had the highest chance of surviving.\n\n2) As the class value increases, the chances of surviving decreases.","8d88285c":"# Read training data","f1b078f1":"# Read testing data","b0eb3a82":"Observation(s):\n\n1) We cannot say much from this plot as the median lines are almost at the same level for all three ports.","500adb4a":"Observation(s):\n\n1) We can see that more no. of females survived as compared to male.","f1c5daeb":"# Final submission\n\nThe logistic regression model is used as the final model.","cea2aa8f":"Observation(s):\n\n1) We can say that the people who were in class 1 and embarked from port C had more chances of surviving.\n\n2) People who were in class 3 and embarked from port S had the lowest chance of surviving.","4bdebde2":"Observation(s):\n\n1) People between the age 20-40 seemed to have survived if they were from class 1.\n\n2) Poeple from class 2 had less chances of surviving.","1f2e7284":"Observation(s):\n\n1) We can say that most of the people who embarked from port C had high chances of surviving.\n\n2) People who embarked from port S had low chances of surviving.","8237f9ff":"# Split the data into train and test data","5526d5d0":"Observation(s):\n\n1) We can get an insight that females had a higher chance of survival as compared to males.","607771d6":"Observation(s):\n\n1) We can say that females of class 1 or 2 had a higher chance of surviving.\n\n2) We can say that males of class 1 had a higher chance of survival in the male section.\n\n3) The lowest survival rate was of the males of class 3.","e6e00122":"Observation(s):\n\n1) We can see that the no. of people who survived is less than the no. of people who died.\n\n2) Around 350 people survived.","9655bb71":"# Import libraries\n\nThe libraries for handling data and visualizing data are imported.","85868e5d":"# Dealing with missing values","1098eab7":"# Data visualization","868b86cd":"Observation(s):\n\n1) Among the people who survived, highest count was of the people who had no siblings\/spouses.","25d930b9":"Observation(s):\n\n1) We can say that the no. of people who belonged to the Pclass=1, i.e the first class had survived more than the people of Pclass=2 and Pclass=3.\n\n2) We can say that the no. of people who belonged to the Pclass=3, i.e the third class had survived more than the people of Pclass=2.","4c5af8c0":"# Model building - Random forest"}}