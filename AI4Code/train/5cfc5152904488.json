{"cell_type":{"bf3ee636":"code","9919c1c4":"code","66ce9838":"code","eed69e22":"code","c79c6daf":"code","d2b973ae":"code","d64c211b":"code","b53b471a":"code","faf27577":"code","484485b5":"code","8c9de4de":"code","3007e5c2":"code","3b7e0afd":"code","847829c8":"code","251f65c6":"code","409b6e5f":"markdown"},"source":{"bf3ee636":"import os\nimport cv2\nimport json\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nfrom tqdm import tqdm\nfrom scipy.misc import imread\nfrom PIL import Image\nfrom keras.models import load_model \nfrom keras.preprocessing.image import ImageDataGenerator","9919c1c4":"with open('..\/input\/config\/model.json') as json_file:\n        model_config = json.load(json_file)['get_resnet50']\nWEIGHT_PATH = '..\/input\/resnet50\/ResNet50-12-0.43.hdf5'\nTEST_DATA_PATH = '..\/input\/aptos2019-blindness-detection\/test_images\/'","66ce9838":"model = load_model(WEIGHT_PATH)","eed69e22":"# SIZE = 300\nsubmit = pd.read_csv('..\/input\/aptos2019-blindness-detection\/sample_submission.csv')\npredicted = []\nfor i, name in tqdm(enumerate(submit['id_code'])):\n    path = os.path.join('..\/input\/aptos2019-blindness-detection\/test_images\/', name+'.png')\n    image = cv2.imread(path)\n    image = cv2.resize(image, (320,240))\n    score_predict = model.predict((image[np.newaxis])\/255)\n    label_predict = np.argmax(score_predict)\n    # label_predict = score_predict.astype(int).sum() - 1\n    predicted.append(str(label_predict))","c79c6daf":"submit['diagnosis'] = predicted\nsubmit.to_csv('submission.csv', index=False)\nsubmit.head()","d2b973ae":"submission_df = pd.read_csv('..\/input\/aptos2019-blindness-detection\/sample_submission.csv')\nsubmission_df.head()","d64c211b":"def read_and_preprocess_image(id_code):    \n    image = imread(os.path.join(TEST_DATA_PATH, id_code + '.png'))\n    image = np.array(Image.fromarray(image).resize(model_config['input_shape'][:-1][::-1])).astype(np.uint8)\n    return image","b53b471a":"id_codes = list(submission_df['id_code'])\nx_test = np.array([read_and_preprocess_image(id_code) for id_code in id_codes])","faf27577":"test_generator = test_data_gen.flow(x_test)","484485b5":"class_labels = ['0', '1', '2', '3', '4']","8c9de4de":"steps_need = test_generator.n\/\/test_generator.batch_size + 1\ntest_generator.reset() # you need to restart whenever you call the predict_generator.\npred = model.predict_generator(test_generator, steps = steps_need, verbose=1)","3007e5c2":"predicted_class_indices=np.argmax(pred,axis=-1)\npredictions = [str(i) for i in predicted_class_indices]\npredictions","3b7e0afd":"print(np.unique(predictions))\nprint(len(predictions))","847829c8":"submission_df['diagnosis'] = predictions\nsubmission_df.head()","251f65c6":"submission_df.to_csv('submission.csv', index=False)","409b6e5f":"# Older Code"}}