{"cell_type":{"4fadf0bd":"code","1ad23420":"code","1550f76b":"code","044b27a5":"code","d48336ea":"code","0ec65d47":"code","2a903e9b":"code","2d349b40":"code","28d1f789":"code","9e506858":"code","2f2e007e":"code","fb20b8a6":"code","563143a2":"code","d14db4d2":"code","1d75e3ca":"code","4146b2d3":"code","e6e85f58":"code","55aa1db1":"code","05046157":"code","44d81e7d":"code","3f7e49f6":"code","0fb9c28d":"code","22d37a96":"code","ff0b0525":"code","8197fb2e":"code","dea1b003":"code","e7a02e7e":"code","498f227e":"code","db998257":"code","761b3f9b":"code","8269e776":"code","81fda008":"markdown","c1503e8f":"markdown","01ceb772":"markdown","f1f19a6e":"markdown","034d5c53":"markdown","b345b491":"markdown","f7b86d29":"markdown","65699ddf":"markdown","4333c531":"markdown","e715b2ad":"markdown","515c4249":"markdown","7c456b60":"markdown","6dababd7":"markdown","e58deed4":"markdown","09fe5b3e":"markdown","8fb5fc83":"markdown","39177951":"markdown"},"source":{"4fadf0bd":"import pandas as pd\nimport numpy as np\nimport plotly.express as px","1ad23420":"df=pd.read_feather('..\/input\/ubiquant\/train.feather')\ndf.head()","1550f76b":"df.shape","044b27a5":"df.info() # it uses quite some memory","d48336ea":"dfg=df.groupby('investment_id')","0ec65d47":"from tqdm import tqdm\ndfg=list(map(np.array,tqdm(dfg)))","2a903e9b":"dfg[0][1].head()","2d349b40":"dfg=list(map(lambda x:x[1],dfg))","28d1f789":"dfg[0].head()","9e506858":"targets=np.array(list(map(lambda x:np.array(x['target']),dfg)))","2f2e007e":"targets=list(targets)","fb20b8a6":"print('maxlen of ',max(list(map(len,targets))))","563143a2":"i=0\n\nfor _ in range(len(targets)):\n    k=targets[i]\n    if len(k)>=750:\n        targets[i]=targets[i][:750]\n        i+=1\n    if len(k)<750:\n        targets.pop(i)","d14db4d2":"targets=np.array(targets)\ntargets.shape","1d75e3ca":"px.line(x=list(range(750)),y=np.mean(targets,axis=0))","4146b2d3":"px.histogram(df['f_298'][:10000])","e6e85f58":"px.histogram(df['f_2'][:10000])","55aa1db1":"del targets","05046157":"targets=np.array(list(map(lambda x:np.array(x['f_289']),dfg)))","44d81e7d":"targets=list(targets)\ni=0\n\nfor _ in range(len(targets)):\n    k=targets[i]\n    if len(k)>=750:\n        targets[i]=targets[i][:750]\n        i+=1\n    if len(k)<750:\n        targets.pop(i)","3f7e49f6":"targets=np.array(targets)","0fb9c28d":"px.line(x=list(range(750)),y=np.mean(targets,axis=0))","22d37a96":"del targets\ntargets=np.array(list(map(lambda x:np.array(x['f_2']),dfg)))\ntargets=list(targets)\ni=0\n\nfor _ in range(len(targets)):\n    k=targets[i]\n    if len(k)>=750:\n        targets[i]=targets[i][:750]\n        i+=1\n    if len(k)<750:\n        targets.pop(i)\ntargets=np.array(targets)\npx.line(x=list(range(750)),y=np.mean(targets,axis=0))","ff0b0525":"try:\n    del targets\nexcept:\n    _=1\njk=input('Which feature do u want to see?')\ntargets=np.array(list(map(lambda x:np.array(x[jk]),dfg)))\ntargets=list(targets)\ni=0\n\nfor _ in range(len(targets)):\n    k=targets[i]\n    if len(k)>=750:\n        targets[i]=targets[i][:750]\n        i+=1\n    if len(k)<750:\n        targets.pop(i)\ntargets=np.array(targets)\npx.line(x=list(range(750)),y=np.mean(targets,axis=0))","8197fb2e":"px.histogram(df['target'][:10000])","dea1b003":"del targets","e7a02e7e":"targets=np.array(list(map(lambda x:np.array(x['target']),dfg)))","498f227e":"lengths=list(map(len,targets))\npx.histogram(lengths)","db998257":"targets.shape","761b3f9b":"targets=list(targets)\ni=0\n\nfor _ in range(len(targets)):\n    k=targets[i]\n    if len(k)>=750:\n        targets[i]=targets[i][:750]\n        i+=1\n    if len(k)<750:\n        targets.pop(i)\ntargets=np.array(targets)","8269e776":"px.line(list(map(len,targets)),np.mean(targets,axis=1))","81fda008":"# Visualization","c1503e8f":"# Problem :-\n\nGiven a financial market data we need to predict time series based returns . Lets understand the data first we are given 299 features though all does not appear in the kaggle preview but still they do exist and we will be able to view them in code , there is a time_id which is our timestamp so a timestamp of 0 indicates the first value of the sequence 1 indicates second etc . And the sequence id which indicates which sequence is the row from for example time id of 0 and sequence id of 0 indicates first timestamp of sequence id 0 and you get it i guess.\n\n\n# Import ","01ceb772":"# Load your data","f1f19a6e":"# Process Data\n\ngroup_by :- let me explain what it does , given a dataset \n\n|Name||COl|\n\n hello  2\n \n hi 1 \n \n k  2\n \n cya 1\n \n \n if i group this data by COL column \n \n the output will be \n \n ```\n {2:['hello','k'],\n 1:['hi','cya']}\n ```\n \n so here if i group it by the invesment id the output will be sequences","034d5c53":"if **the kernel stops loading after this please give it a sec**","b345b491":"# Distribution of targets","f7b86d29":"# Interactive plot","65699ddf":"# I am padding it to 750 because of lack of memory","4333c531":"# Thank you\nPlease give me feedbacks i really want to improve my skills","e715b2ad":"# Interesting","515c4249":"# How is it structured?\ndfg[0] is our sequence for investment id 0","7c456b60":"# They generally follow a cyclic patern at the beggining of the sequence","6dababd7":"# Distribution of target lenghts","e58deed4":"# Some features like this one has a lot of 0s","09fe5b3e":"# Targets vs Length","8fb5fc83":"# Most features follow a cyclic pattern","39177951":"Does these feats follow any common trend with time"}}