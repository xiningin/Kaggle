{"cell_type":{"74daa7c4":"code","0a0391ae":"code","71c6cdfc":"code","b002a324":"code","1a6b5c36":"code","55105c64":"code","a58f97d2":"code","e32a3f86":"code","79cd2381":"code","0a6ee7b8":"code","3ef553c2":"code","4815c252":"code","eb337a51":"code","ba0e885c":"code","5a1ac963":"code","10d7b045":"code","e8ee2d1f":"code","e2fb13e9":"code","9a4f382d":"code","69c3aca0":"code","3139ba61":"code","d45e8a81":"code","ca19767f":"code","05cd16e9":"code","751135bb":"code","8fb1f142":"code","7f46c2fa":"code","a4ab75dd":"markdown","8cf4301e":"markdown","0b2856a6":"markdown","ef784140":"markdown","2a6c1b74":"markdown","4e268999":"markdown","dbf13416":"markdown","9395a633":"markdown","ecc95617":"markdown","1503f512":"markdown","23431dfb":"markdown"},"source":{"74daa7c4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0a0391ae":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","71c6cdfc":"USAhousing=pd.read_csv(\"..\/input\/usa-housing\/USA_Housing.csv\")","b002a324":"USAhousing.info()","1a6b5c36":"USAhousing.head(5)","55105c64":"X=USAhousing.drop([\"Address\",\"Price\"],axis=1)\ny=USAhousing[\"Price\"]","a58f97d2":"X.head(5)","e32a3f86":"y","79cd2381":"from sklearn.model_selection import train_test_split","0a6ee7b8":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","3ef553c2":"from sklearn.linear_model import LinearRegression \nfrom sklearn.linear_model import BayesianRidge\nfrom sklearn.linear_model import ARDRegression\nfrom sklearn.linear_model import Lasso\nfrom sklearn.linear_model import Ridge\nfrom sklearn.linear_model import ElasticNet","4815c252":"lm=LinearRegression()\nby=BayesianRidge()\nard=ARDRegression()\nls=Lasso()\nrid=Ridge()\nels=ElasticNet()","eb337a51":"lm.fit(X_train,y_train)\nby.fit(X_train,y_train)\nard.fit(X_train,y_train)\nls.fit(X_train,y_train)\nrid.fit(X_train,y_train)\nels.fit(X_train,y_train)","ba0e885c":"coeff_df=pd.DataFrame(lm.coef_,X.columns,columns=[\"Lineer Regression\"])\ncoeff_df[\"BayesianRidge\"]=by.coef_\ncoeff_df[\"ARDRegression\"]=ard.coef_\ncoeff_df[\"Lasso\"]=ls.coef_\ncoeff_df[\"Ridge\"]=rid.coef_\ncoeff_df[\"ElasticNet\"]=els.coef_\ncoeff_df","5a1ac963":"predictions=lm.predict(X_test)\npredictions_by=by.predict(X_test)\npredictions_ard=ard.predict(X_test)\npredictions_ls=ls.predict(X_test)\npredictions_rid=rid.predict(X_test)\npredictions_els=els.predict(X_test)","10d7b045":"fig, axs = plt.subplots(ncols=3,nrows=2)\nfig.set_figheight(8)\nfig.set_figwidth(16)\nfig.subplots_adjust(hspace=0.35)\nsns.regplot(x=y_test,y=predictions,ax=axs[0,0],line_kws={\"color\":\"black\"})\naxs[0, 0].set_title('LineerRegresion')\nsns.regplot(x=y_test,y=predictions_by,color=\"green\",ax=axs[0,1],line_kws={\"color\":\"black\"})\naxs[0, 1].set_title('BayesianRidge')\nsns.regplot(x=y_test,y=predictions_ard,color=\"gray\",ax=axs[0,2],line_kws={\"color\":\"black\"})\naxs[1, 0].set_title('ARDRegression')\nsns.regplot(x=y_test,y=predictions_ls,color=\"black\",ax=axs[1,0],line_kws={\"color\":\"red\"})\naxs[1, 1].set_title('Lasso')\nsns.regplot(x=y_test,y=predictions_rid,color=\"red\",ax=axs[1,1],line_kws={\"color\":\"black\"})\naxs[0, 2].set_title('Ridge')\nsns.regplot(x=y_test,y=predictions_els,color=\"purple\",ax=axs[1,2],line_kws={\"color\":\"black\"})\naxs[1, 2].set_title('ElasticNet')","e8ee2d1f":"plt.figure(figsize=(12,8))\nfig, axs = plt.subplots(2, 3)\nfig.set_figheight(10)\nfig.set_figwidth(20)\nsns.histplot((y_test-predictions),kde=True,bins=50,ax=axs[0, 0])\naxs[0, 0].set_title('LineerRegresion')\nsns.histplot(y_test-predictions_by,color=\"green\",kde=True,ax=axs[0, 1])\naxs[0, 1].set_title('BayesianRidge')\nsns.histplot(y_test-predictions_ard,color=\"yellow\",kde=True,ax=axs[1, 0])\naxs[1, 0].set_title('ARDRegression')\nsns.histplot(y_test-predictions_ls,color=\"black\",kde=True,ax=axs[1, 1])\naxs[1, 1].set_title('Lasso')\nsns.histplot(y_test-predictions_rid,color=\"red\",kde=True,ax=axs[0, 2])\naxs[0, 2].set_title('Ridge')\nsns.histplot(y_test-predictions_els,color=\"purple\",kde=True,ax=axs[1, 2])\naxs[1, 2].set_title('ElasticNet')\n\nfor ax in axs.flat:\n    ax.set(xlabel='x-label', ylabel='y-label')\n\n# Hide x labels and tick labels for top plots and y ticks for right plots.\nfor ax in axs.flat:\n    ax.label_outer()\n    ","e2fb13e9":"from sklearn import metrics","9a4f382d":"print('MAE:', metrics.mean_absolute_error(y_test, predictions))\nprint('MAElog:', np.log1p(metrics.mean_absolute_error(y_test, predictions)))\nprint('MSE:', metrics.mean_squared_error(y_test, predictions))\nprint('MSElog:', np.log1p(metrics.mean_squared_error(y_test, predictions)))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))\nprint('RMSElog:', np.log1p(np.sqrt(metrics.mean_squared_error(y_test, predictions))))","69c3aca0":"index=[\"LineerRegression\",\t\"BayesianRidge\",\"ARDRegression\",\"Lasso\",\"Ridge\",\"ElasticNet\"]\ncolumns=[[\"MAE\",\"MAElog\",\"MSE\",\"MSElog\",\"RMSE\",\"RMSElog\"]]\nerror_df=pd.DataFrame(columns=columns,index=index)\nerror_df","3139ba61":"error_df.loc[\"LineerRegression\",\"MAE\"]= metrics.mean_absolute_error(y_test, predictions)\nerror_df.loc[\"LineerRegression\",\"MAElog\"]= np.log1p(metrics.mean_absolute_error(y_test, predictions))\nerror_df.loc[\"LineerRegression\",'MSE']=metrics.mean_squared_error(y_test, predictions)\nerror_df.loc[\"LineerRegression\",'MSElog'] = np.log1p(metrics.mean_squared_error(y_test, predictions))\nerror_df.loc[\"LineerRegression\",'RMSE'] = np.sqrt(metrics.mean_squared_error(y_test, predictions))\nerror_df.loc[\"LineerRegression\",'RMSElog'] = np.log1p(np.sqrt(metrics.mean_squared_error(y_test, predictions)))","d45e8a81":"error_df.loc[\"BayesianRidge\",\"MAE\"]= metrics.mean_absolute_error(y_test, predictions_by)\nerror_df.loc[\"BayesianRidge\",\"MAElog\"]= np.log1p(metrics.mean_absolute_error(y_test, predictions_by))\nerror_df.loc[\"BayesianRidge\",'MSE']=metrics.mean_squared_error(y_test, predictions_by)\nerror_df.loc[\"BayesianRidge\",'MSElog'] = np.log1p(metrics.mean_squared_error(y_test, predictions_by))\nerror_df.loc[\"BayesianRidge\",'RMSE'] = np.sqrt(metrics.mean_squared_error(y_test, predictions_by))\nerror_df.loc[\"BayesianRidge\",'RMSElog'] = np.log1p(np.sqrt(metrics.mean_squared_error(y_test, predictions_by)))","ca19767f":"error_df.loc[\"ARDRegression\",\"MAE\"]= metrics.mean_absolute_error(y_test, predictions_ard)\nerror_df.loc[\"ARDRegression\",\"MAElog\"]= np.log1p(metrics.mean_absolute_error(y_test, predictions_ard))\nerror_df.loc[\"ARDRegression\",'MSE']=metrics.mean_squared_error(y_test, predictions_ard)\nerror_df.loc[\"ARDRegression\",'MSElog'] = np.log1p(metrics.mean_squared_error(y_test, predictions_ard))\nerror_df.loc[\"ARDRegression\",'RMSE'] = np.sqrt(metrics.mean_squared_error(y_test, predictions_ard))\nerror_df.loc[\"ARDRegression\",'RMSElog'] = np.log1p(np.sqrt(metrics.mean_squared_error(y_test, predictions_ard)))","05cd16e9":"error_df.loc[\"Lasso\",\"MAE\"]= metrics.mean_absolute_error(y_test, predictions_ls)\nerror_df.loc[\"Lasso\",\"MAElog\"]= np.log1p(metrics.mean_absolute_error(y_test, predictions_ls))\nerror_df.loc[\"Lasso\",'MSE']=metrics.mean_squared_error(y_test, predictions_ls)\nerror_df.loc[\"Lasso\",'MSElog'] = np.log1p(metrics.mean_squared_error(y_test, predictions_ls))\nerror_df.loc[\"Lasso\",'RMSE'] = np.sqrt(metrics.mean_squared_error(y_test, predictions_ls))\nerror_df.loc[\"Lasso\",'RMSElog'] = np.log1p(np.sqrt(metrics.mean_squared_error(y_test, predictions_ls)))","751135bb":"error_df.loc[\"Ridge\",\"MAE\"]= metrics.mean_absolute_error(y_test, predictions_rid)\nerror_df.loc[\"Ridge\",\"MAElog\"]= np.log1p(metrics.mean_absolute_error(y_test, predictions_rid))\nerror_df.loc[\"Ridge\",'MSE']=metrics.mean_squared_error(y_test, predictions_rid)\nerror_df.loc[\"Ridge\",'MSElog'] = np.log1p(metrics.mean_squared_error(y_test, predictions_rid))\nerror_df.loc[\"Ridge\",'RMSE'] = np.sqrt(metrics.mean_squared_error(y_test, predictions_rid))\nerror_df.loc[\"Ridge\",'RMSElog'] = np.log1p(np.sqrt(metrics.mean_squared_error(y_test, predictions_rid)))","8fb1f142":"error_df.loc[\"ElasticNet\",\"MAE\"]= metrics.mean_absolute_error(y_test, predictions_els)\nerror_df.loc[\"ElasticNet\",\"MAElog\"]= np.log1p(metrics.mean_absolute_error(y_test, predictions_els))\nerror_df.loc[\"ElasticNet\",'MSE']=metrics.mean_squared_error(y_test, predictions_els)\nerror_df.loc[\"ElasticNet\",'MSElog'] = np.log1p(metrics.mean_squared_error(y_test, predictions_els))\nerror_df.loc[\"ElasticNet\",'RMSE'] = np.sqrt(metrics.mean_squared_error(y_test, predictions_els))\nerror_df.loc[\"ElasticNet\",'RMSElog'] = np.log1p(np.sqrt(metrics.mean_squared_error(y_test, predictions_els)))","7f46c2fa":"error_df","a4ab75dd":"## Metrics (MAE, MSE, RMSE)","8cf4301e":"## Error_histograms","0b2856a6":"### For information about models: https:\/\/scikit-learn.org\/stable\/modules\/linear_model.html","ef784140":"## Data","2a6c1b74":"## end","4e268999":"## Train test split","dbf13416":"## Regplots of models","9395a633":"## Coefficients dataframe","ecc95617":"## Creating error dataframe","1503f512":"## Error dataframe","23431dfb":"### Checking null and data type"}}