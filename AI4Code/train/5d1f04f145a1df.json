{"cell_type":{"d9914ed9":"code","1db54a34":"code","d1f8bb04":"code","e32cafef":"code","f33cf9a5":"code","bfd4a26b":"code","b2acfd57":"code","9c120ee7":"code","c50fd947":"code","d645d752":"code","4d181169":"code","b1be0a13":"code","41391a02":"code","00290acd":"code","5e68f544":"code","354a0183":"code","1da68325":"code","850ed2ef":"code","9f65ece1":"code","779dabaa":"code","f0e3ecf9":"code","4c6990e5":"code","36866331":"code","799984e0":"code","701592dc":"markdown","93238ed5":"markdown","7d103da0":"markdown","7efe54db":"markdown","0e183182":"markdown","4a1588ca":"markdown","e74ce4ea":"markdown","e56f7965":"markdown","8dfee44f":"markdown","4bfabcd0":"markdown","b59808e2":"markdown","32f3e72e":"markdown","57c0a00d":"markdown","933a0c9b":"markdown","2b52bfa4":"markdown","61c3d2fd":"markdown","bf58293f":"markdown","c21bca92":"markdown","f7b7e331":"markdown","0e0a7855":"markdown","84dd3834":"markdown","faf8abc0":"markdown","fc6944df":"markdown","55df2a22":"markdown"},"source":{"d9914ed9":"import numpy as np # making use of arrays\nimport matplotlib.pyplot as plt # plotting the data\nimport pandas as pd # importing the data\n\nfrom sklearn.model_selection import train_test_split # splitting the data\nfrom sklearn.preprocessing import StandardScaler # feature scaling\n\nfrom sklearn.svm import SVC # SVM model\nfrom sklearn.linear_model import LogisticRegression # logistic regression model\nfrom sklearn.ensemble import RandomForestClassifier # Random forest model\nfrom sklearn.naive_bayes import GaussianNB # naive bayes model\nfrom xgboost import XGBClassifier # XGBoost model\nimport xgboost as xgb\n\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report # analysing the results\nfrom sklearn.model_selection import cross_val_score # k-fold cross validation\n\nprint(\"Importing Complete!\")","1db54a34":"#importing the heart failure(hf) data\nhf_data = pd.read_csv('..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')\nprint(hf_data.shape)\n\nx = hf_data.iloc[:, :-1].values\ny = hf_data.iloc[:, -1].values\n\nhf_data.head(5)","d1f8bb04":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size= 0.2, random_state=0)\n\nprint(\"Unscaled training data example:\" + np.array2string(x_train[0], formatter={'float_kind':lambda x: \"%.0f\" % x}))","e32cafef":"sc = StandardScaler()\nx_train = sc.fit_transform(x_train)\nx_test = sc.transform(x_test)\n\nprint(\"Scaled training data example:\" + np.array2string(x_train[0], formatter={'float_kind':lambda x: \"%.3f\" % x}))","f33cf9a5":"classifier = GaussianNB()\nclassifier.fit(x_train, y_train)","bfd4a26b":"y_pred = classifier.predict(x_test)\nprint(\"Showing first 10 predictions compared to the test data: \")\nprint(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1)[:10,:])","b2acfd57":"cm = confusion_matrix(y_test, y_pred)\nprint(cm)\nprint(accuracy_score(y_test, y_pred))","9c120ee7":"nb_report=classification_report(y_test,y_pred,target_names=['Dead','Alive'])\nprint(nb_report)","c50fd947":"classifier_svm = SVC(kernel= 'rbf', random_state= 0, max_iter=100, probability=True)\nclassifier_svm.fit(x_train, y_train)","d645d752":"y_pred_svm = classifier_svm.predict(x_test)\ncm = confusion_matrix(y_test, y_pred_svm)\nprint(cm)\nprint(accuracy_score(y_test, y_pred_svm))","4d181169":"svm_report=classification_report(y_test,y_pred_svm,target_names=['Dead','Alive'])\nprint(svm_report)","b1be0a13":"classifier_LR = LogisticRegression(max_iter=500,random_state = 0)\nclassifier_LR.fit(x_train, y_train)","41391a02":"y_pred_LR = classifier_LR.predict(x_test)\ncm = confusion_matrix(y_test, y_pred_LR)\nprint(cm)\nprint(accuracy_score(y_test, y_pred_LR))","00290acd":"lr_report=classification_report(y_test,y_pred_LR,target_names=['Dead','Alive'])\nprint(lr_report)","5e68f544":"classifier_rf = RandomForestClassifier(n_estimators = 100, criterion = 'entropy', random_state = 0)\nclassifier_rf.fit(x_train, y_train)","354a0183":"y_pred_rf = classifier_rf.predict(x_test)\ncm = confusion_matrix(y_test, y_pred_rf)\nprint(cm)\nprint(accuracy_score(y_test, y_pred_rf))","1da68325":"rf_report=classification_report(y_test,y_pred_rf,target_names=['Dead','Alive'])\nprint(rf_report)","850ed2ef":"classifier_xgb = XGBClassifier(use_label_encoder=False,eval_metric='logloss')\nclassifier_xgb.fit(x_train, y_train)","9f65ece1":"y_pred_xgb = classifier_xgb.predict(x_test)\ncm = confusion_matrix(y_test, y_pred_xgb)\nprint(cm)\nprint(accuracy_score(y_test, y_pred_xgb))","779dabaa":"xgb_report=classification_report(y_test,y_pred_xgb,target_names=['Dead','Alive'])\nprint(xgb_report)","f0e3ecf9":"accuracies = cross_val_score(estimator = classifier_xgb, X = x_train, y = y_train, cv = 10)\nprint(\"Accuracy: {:.2f} %\".format(accuracies.mean()*100))\nprint(\"Standard Deviation: {:.2f} %\".format(accuracies.std()*100))","4c6990e5":"xgb.plot_tree(classifier_xgb,num_trees=0)\nplt.show()\n","36866331":"xgb.plot_importance(classifier_xgb)\nplt.figure(figsize=(10, 10), dpi=150)\nplt.show()","799984e0":"print(\"Most important features: \" + hf_data.columns[11] + \" > \" + hf_data.columns[4] + \" > \" + hf_data.columns[2] + \" > \" + hf_data.columns[7])","701592dc":"## Reviewing the model","93238ed5":"## Applying k-fold Cross validation","7d103da0":"## Making the Confusion matrix","7efe54db":"## Reviewing the model","0e183182":"## Reviewing the model","4a1588ca":"## Boosting Trees","e74ce4ea":"## Feauture Scaling","e56f7965":"# Heart Failure Prediction","8dfee44f":"## Reviewing the model","4bfabcd0":"## Making the Confusion matrix","b59808e2":"## Splitting the data in training and test set","32f3e72e":"## Predicting the test set results","57c0a00d":"## Making the Confusion matrix","933a0c9b":"## Training other models: Support Vector Machine (RBF)","2b52bfa4":"## Training the Naive Bayes model on the training set","61c3d2fd":"## Making the Confusion matrix","bf58293f":"## Feature importance","c21bca92":"## Making the Confusion matrix","f7b7e331":"## Importing libraries","0e0a7855":"## Reviewing the model","84dd3834":"## Training other models: Logistic Regression","faf8abc0":"## Importing the Dataset","fc6944df":"## Training other models: Random Forest","55df2a22":"## Training other models: XGboost"}}