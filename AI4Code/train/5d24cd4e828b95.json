{"cell_type":{"26acefc8":"code","f6411de2":"code","8721c4c9":"code","0b9209cf":"code","27d19ac8":"code","efe50921":"code","b3db440d":"code","6e3d57a5":"code","ffa8d86e":"code","a14a9b00":"code","bfeeeb5a":"code","ecd303be":"code","c3d390be":"code","f6b53f05":"code","958273a1":"code","9ad5f8d2":"code","dbbd8888":"code","21ebecac":"code","c873b50b":"code","8e858528":"code","efb6491c":"code","7bbf5a54":"code","5ff73d94":"code","0997403b":"code","acffcfa6":"code","039dae0f":"code","e30f88a6":"code","2728a25e":"code","d1324a18":"code","17c9f7e0":"code","7810c91b":"code","c3bd7830":"code","96662d9c":"code","bcbe95ab":"code","667a7bf2":"code","b2204318":"code","354c39a3":"code","dc43d04b":"code","ad7b6581":"code","9e2037b0":"code","33af0d6f":"code","c32efc4c":"code","308b5656":"code","15a376e1":"code","3b788932":"code","480ae48c":"code","354adef8":"code","a023a5c2":"code","65638db9":"markdown","9ba389b9":"markdown","74fd4fa0":"markdown","758aec1d":"markdown","8bba45c5":"markdown","07fc5386":"markdown","4eb3418a":"markdown","fe7af4f0":"markdown","016d8a12":"markdown","6814fa19":"markdown","6017fa38":"markdown","854ff605":"markdown","b5a629ff":"markdown","a2c3b780":"markdown","c10bd255":"markdown","8e7db98e":"markdown","8114ff74":"markdown","43d4f5e8":"markdown","dd37eb30":"markdown","8cf97c73":"markdown","91e690df":"markdown","d93fa25b":"markdown","ca76fe2c":"markdown","fd2e485a":"markdown","24ec2c01":"markdown","11397e3f":"markdown","e6a3f708":"markdown","c552a7ae":"markdown","a510c6b7":"markdown","d719efa8":"markdown","6bacafa0":"markdown","15ddeeb7":"markdown","713e0011":"markdown","b69a66e6":"markdown","bdf969bb":"markdown","bbdd7855":"markdown","59615037":"markdown"},"source":{"26acefc8":"from IPython.display import Image\nimport os\n!ls ..\/input\/\n\nImage(\"..\/input\/turkishimg\/proje.png\")","f6411de2":"from IPython.display import Image\nimport os\n!ls ..\/input\/\n\nImage(\"..\/input\/turkishimg\/children.jpg\")","8721c4c9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n#import plotly_express as px\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, iplot\n\nfrom plotly.graph_objs import *\ninit_notebook_mode()\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n","0b9209cf":"#reading the files from datasets by using read_csv\nyears_database=pd.read_csv(\"..\/input\/yearspopulation\/yillar.csv\",encoding='latin-1')\n#when we use .colums with any database it gives the column names in order \nyears_database.drop(columns=['Unnamed: 4'],inplace=True)\n# .info method gives us the column names and their data types\nprint(years_database.info())\n# .head() method gives the first five rows of the dataset\nyears_database.head()\n\n#in every dataset we'll use the same methods to understand about the datasets in detail first, and then go on to \n#the visualization tools,so if you forget turn back to this point it won't be reviewed.\n","27d19ac8":"#we'll use plotly library to create barplots we'll visualize the dataset \n#which is about proportion of child population in total population using bars.\nimport plotly.graph_objs as go\n\nx=list(years_database.Year)\n#x is the list of years in dataset\ntrace1={ \n        'x':x,\n        'y':years_database['Total population'],\n        'name':'Total Population',\n        'type':'bar' }\n#first trace will indicate the values of total population in the yaxis.\ntrace2={\n        'x':x,\n        'y':years_database['Total child population'],\n        'name':'Total Child Population',\n        'type':'bar'\n                     }\n#second trace will indicate the values of total child population in the yaxis.\ndata=[trace1,trace2]\n#and we combine the trace1 and trace2 in data list\nlayout={\n         'xaxis':{'title':'Total Population-Total Child Population'},\n         'barmode':'relative',\n         #relative puts values in a stack\n         'title':'Total Population vs. Child Population',\n      \n}\n\nfig=go.Figure( data=data,layout=layout )\niplot( fig )\n","efe50921":"#we'll use the seaborn library to visualize Proportion Of child Population in total population in our dataset.\n#but don't forget to sort your dataset according to years if it wasn't sorted.\n#and reindex your values otherwise it won't be printed in the correct order when you want to use them with their indexes.\nnew_index = (years_database['Year'].sort_values(ascending=False)).index.values\nsorted_data = years_database.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data['Year'], y=sorted_data['Proportion Of child Population in total population'])\nplt.xticks(rotation= 45)\nplt.xlabel('Years',size=15)\nplt.ylabel('Percent Values',size=15)\nplt.title('Proportion Of child Population in total population',size=15)\n","b3db440d":"#reading another dataset\nearth=pd.read_csv(\"..\/input\/earths\/world-child.csv\",encoding='latin-1')\nearth.columns\nmost_child_population = earth.sort_values(['childpopulation'],ascending=False)\nmost_child_population.head()","6e3d57a5":"import folium \nimport plotly.graph_objs as go\nimport folium.plugins as plugins\n\n\n\nworld=folium.Map(location=[28.644800,77.216721],zoom_start=2.7)\n\ndataUsa=np.array([[28.644800,77.216721,earth['childpopulation'][0]],[39.913818,116.363625,earth['childpopulation'][1]],[6.465422, 3.406448,earth['childpopulation'][2]],[-8.409518, 115.188919,earth['childpopulation'][3]],[33.738045,73.084488,earth['childpopulation'][4]]])\n\nplugins.HeatMap(dataUsa,name='Highest Number Of Childs',radius = 20, min_opacity = 0.6, max_val = 50,gradient={.6: 'red', .98: 'yellow', 1: 'black'}).add_to(world)\n\nworld\n","ffa8d86e":"most_child_proportion = earth.sort_values(['ProportionofChildpopulation'],ascending=False)\nmost_child_proportion.head(3)","a14a9b00":"import folium \nimport plotly.graph_objs as go\nimport folium.plugins as plugins\n\nlat=16.4499982\nlang= 14.5166646\n\nworld=folium.Map(location=[lat,lang],zoom_start=4)\n\ndataUsa=np.array([[9.077751, 8.6774567,earth['childpopulation'][0]],[17.5739347, -3.9861092,earth['childpopulation'][1]],[1.3707295, 32.3032414,earth['childpopulation'][2]]])\n\nplugins.HeatMap(dataUsa,name='Highest Number Of Childs',radius=15).add_to(world)\n\nworld","bfeeeb5a":"from IPython.display import Image\nimport os\n!ls ..\/input\/\n\nImage(\"..\/input\/turkishimg\/uganda-child.jpg\")","ecd303be":"#we import other files to use in forwarding visualization tools.\n\ncauses_of_punishment=pd.read_csv(\"..\/input\/punish1\/regions2.csv\",encoding='latin-1')\nobtaining_info=pd.read_csv(\"..\/input\/obtaininfo\/obtaining-info.csv\",encoding='latin-1')\n#provinces=pd.read_csv(\"..\/input\/provincest\/iller.csv\",encoding='latin-1')\n#provincest=pd.read_csv(\"..\/input\/turkeyprovinces\/turkey-provinces.csv\",encoding='latin-1')\npunishments=pd.read_csv(\"..\/input\/punishes\/punishment.csv\",encoding='latin-1')\nbehaviours=pd.read_csv(\"..\/input\/behaves2\/behaviours.csv\",encoding='latin-1')\nworld_childs=pd.read_csv(\"..\/input\/earths\/world-child.csv\",encoding='latin-1')\nage_groups=pd.read_csv(\"..\/input\/mosthapp\/mosthappy.csv\",encoding='latin-1')\n\n#we are reading the rest of csv files from datasets.\n\nage_groups.sort_values(by='Proportion Of Child Population in total population', ascending=True,inplace=True)\n#we've sorted the age_groups dataset according to the Proportion Of Child Population in total population.\n\n","c3d390be":"from IPython.display import Image\nimport os\n!ls ..\/input\/\n\nImage(\"..\/input\/turkishimg\/birthj.jpg\")","f6b53f05":"age_groups.head()","958273a1":"age_groups.tail()","9ad5f8d2":"f, axes = plt.subplots(1, 2)\n#we'll use subplots to use two graph in one code\nf.set_figheight(8)\nf.set_figwidth(15)\n\npie1_list =age_groups['Proportion Of Child Population in total population'] # str(2,4) => str(2.4) = > float(2.4) = 2.4\nlabels_list =age_groups.Province\n\n#plt.figure( figsize=(8,8))\nsns.barplot( x=labels_list[-5:] ,y=pie1_list[-5:] ,palette=sns.cubehelix_palette(),orient='v' , ax=axes[0] )\nsns.barplot( x=labels_list[:5] ,y=pie1_list[:5] ,palette=sns.cubehelix_palette(rot=-.15),orient='v' , ax=axes[1] )\n\nplt.xlabel('Provinces')\nplt.ylabel('Proportion Of Child Population in total population in %')\n","dbbd8888":"birth_data=pd.read_csv(\"..\/input\/births\/cesarean.csv\",encoding='latin-1')\nbirth_data.head()\n #The 'hoverinfo' property is a flaglist and may be specified\n #   as a string containing:\n  #    - Any combination of ['x', 'y', 'z', 'text', 'name'] joined with '+' characters\n   #     (e.g. 'x+y')\n\nlist_r=list(birth_data['Regions'])\ntrace1 = go.Scatter3d(\n    x=birth_data['year-2002'],\n    y=birth_data['year-2014'],\n    z=birth_data['year-2015'],\n    mode='markers',\n    marker=dict(\n        size=10,\n        color='rgb(255,128,16)',  \n        \n        # set color to an array\/list of desired values      \n    ),\n    text = [\"t: {}\".format(x) for x in birth_data['Regions'] ], \n    hoverinfo='x+y+z+text+name'\n)\n\ndata = [trace1]\nlayout = go.Layout(\n    margin=dict(\n      \n        l=0,\n        r=0,\n        b=0,\n        t=0  \n    ),\n     scene = dict(\n    xaxis = dict(\n        title='Year-2002'),\n    yaxis = dict(\n        title='Year-2014'),\n    zaxis = dict(\n        title='Year-2015'),\n     ),\n      \n  \n    \n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","21ebecac":"\n\nbirth_data=pd.read_csv(\"..\/input\/births\/cesarean.csv\",encoding='latin-1')\nbirth_data.head()\n #The 'hoverinfo' property is a flaglist and may be specified\n #   as a string containing:\n  #    - Any combination of ['x', 'y', 'z', 'text', 'name'] joined with '+' characters\n   #     (e.g. 'x+y')\n\n","c873b50b":"import folium \nimport plotly.graph_objs as go\n\nlat=38.9637451\nlang=35.2433205\n\nTurkey=folium.Map(location=[lat,lang],zoom_start=6.4)\ncol1=birth_data[ birth_data['Regions']=='TR1 Istanbul' ]\ncol2=birth_data[ birth_data['Regions']=='TR2 Bati Marmara-West Marmara' ]\ncol3=birth_data[ birth_data['Regions']=='TR3 Ege-Aegean' ]\ncol4=birth_data[ birth_data['Regions']=='TR4 Dogu Marmara-East Marmara' ]\ncol5=birth_data[ birth_data['Regions']=='TR5 Bati Anadolu-West Anatolia' ]\ncol6=birth_data[ birth_data['Regions']=='TR6 Akdeniz-Mediterranian' ]\ncol7=birth_data[ birth_data['Regions']=='TR7 Orta Anadolu-Central Anatolia' ]\ncol8=birth_data[ birth_data['Regions']=='TR8 Bati Karadeniz-West Black Sea' ]\ncol9=birth_data[ birth_data['Regions']=='TR9 Dogu Karadeniz-East Black Sea' ]\ncol10=birth_data[ birth_data['Regions']=='TRA Kuzeydogu Anadolu-Northeast Anatolia' ]\ncol11=birth_data[ birth_data['Regions']=='TRB Ortadogu Anadolu-Centraleast Anatolia' ]\ncol12=birth_data[ birth_data['Regions']=='TRC Guneydogu Anadolu-Southeast Anatolia' ]\npop_infoIst='<b>Istanbul<\/b><br>'+'<b>Year 2002: <\/b>'+'%'+str(col1['year-2002'][0])+'<br\/><b>Year 2014:<\/b>'+' %'+str(col1['year-2014'][0])+'<br\/><b>Year 2015<\/b>: ' +'%'+str(col1['year-2015'][0])\npop_infoSouthEast='<b>Southeast Anatolia<\/b><br>'+'<b>Year 2002: <\/b>'+'%'+str(col12['year-2002'][11])+'<br\/><b>Year 2014:<\/b>'+' %'+str(col12['year-2014'][11])+'<br\/><b>Year 2015<\/b>: ' +'%'+str(col12['year-2015'][11])\npop_infoWestMar='<b>West Marmara<\/b><br>'+'<b>Year 2002: <\/b>'+'%'+str(col2['year-2002'][1])+'<br\/><b>Year 2014:<\/b>'+' %'+str(col2['year-2014'][1])+'<br\/><b>Year 2015<\/b>: ' +'%'+str(col2['year-2015'][1])\npop_infoEge='<b>Aegean<\/b><br>'+'<b>Year 2002: <\/b>'+'%'+str(col3['year-2002'][2])+'<br\/><b>Year 2014:<\/b>'+' %'+str(col3['year-2014'][2])+'<br\/><b>Year 2015<\/b>: ' +'%'+str(col3['year-2015'][2])\npop_infoEastMar='<b>East Marmara<\/b><br>'+'<b>Year 2002: <\/b>'+'%'+str(col4['year-2002'][3])+'<br\/><b>Year 2014:<\/b>'+' %'+str(col4['year-2014'][3])+'<br\/><b>Year 2015<\/b>: ' +'%'+str(col4['year-2015'][3])\npop_infoWestAnat='<b>West Anatolia<\/b><br>'+'<b>Year 2002: <\/b>'+'%'+str(col5['year-2002'][4])+'<br\/><b>Year 2014:<\/b>'+' %'+str(col5['year-2014'][4])+'<br\/><b>Year 2015<\/b>: ' +'%'+str(col5['year-2015'][4])\npop_infoMedi='<b>Mediterranian<\/b><br>'+'<b>Year 2002: <\/b>'+'%'+str(col6['year-2002'][5])+'<br\/><b>Year 2014:<\/b>'+' %'+str(col6['year-2014'][5])+'<br\/><b>Year 2015<\/b>: ' +'%'+str(col6['year-2015'][5])\npop_infoCentralAnat='<b>Central Anatolia<\/b><br>'+'<b>Year 2002: <\/b>'+'%'+str(col7['year-2002'][6])+'<br\/><b>Year 2014:<\/b>'+' %'+str(col7['year-2014'][6])+'<br\/><b>Year 2015<\/b>: ' +'%'+str(col7['year-2015'][6])\npop_infoWestBlackSea='<b>West Black Sea<\/b><br>'+'<b>Year 2002: <\/b>'+'%'+str(col8['year-2002'][7])+'<br\/><b>Year 2014:<\/b>'+' %'+str(col8['year-2014'][7])+'<br\/><b>Year 2015<\/b>: ' +'%'+str(col8['year-2015'][7])\npop_infoNortheastAnat='<b>Northeast Anatolia<\/b><br>'+'<b>Year 2002: <\/b>'+'%'+str(col10['year-2002'][9])+'<br\/><b>Year 2014:<\/b>'+' %'+str(col10['year-2014'][9])+'<br\/><b>Year 2015<\/b>: ' +'%'+str(col10['year-2015'][9])\npop_infoEastBlackSea='<b>East Black Sea<\/b><br>'+'<b>Year 2002: <\/b>'+'%'+str(col9['year-2002'][8])+'<br\/><b>Year 2014:<\/b>'+' %'+str(col9['year-2014'][8])+'<br\/><b>Year 2015<\/b>: ' +'%'+str(col9['year-2015'][8])\npop_infoCentralEast='<b>Centraleast Anatolia<\/b><br>'+'<b>Year 2002: <\/b>'+'%'+str(col11['year-2002'][10])+'<br\/><b>Year 2014:<\/b>'+' %'+str(col11['year-2014'][10])+'<br\/><b>Year 2015<\/b>: ' +'%'+str(col11['year-2015'][10])\nfolium.Marker(location=[41.015137, 28.979530], popup=folium.Popup( pop_infoIst,max_width=200,height=200),icon=folium.Icon(color='green')).add_to(Turkey)\nfolium.Marker(location=[41.674965, 26.583481], popup=folium.Popup( pop_infoWestMar,max_width=100,height=100),icon=folium.Icon(color='green')).add_to(Turkey)\nfolium.Marker(location=[38.6140, 27.4296], popup=folium.Popup( pop_infoEge,max_width=100,height=100),icon=folium.Icon(color='green')).add_to(Turkey)\nfolium.Marker(location=[40.193298,29.074202], popup=folium.Popup( pop_infoEastMar,max_width=100,height=100),icon=folium.Icon(color='green')).add_to(Turkey)\nfolium.Marker(location=[ 38.756886,30.538704], popup=folium.Popup( pop_infoWestAnat,max_width=100,height=100),icon=folium.Icon(color='green')).add_to(Turkey)\nfolium.Marker(location=[ 36.549362, 31.996994], popup=folium.Popup( pop_infoMedi,max_width=100,height=100),icon=folium.Icon(color='green')).add_to(Turkey)\nfolium.Marker(location=[ 39.925533,32.866287], popup=folium.Popup( pop_infoCentralAnat,max_width=100,height=100),icon=folium.Icon(color='green')).add_to(Turkey)\nfolium.Marker(location=[39.9,41.27], popup=folium.Popup( pop_infoNortheastAnat,max_width=100,height=100),icon=folium.Icon(color='green')).add_to(Turkey)\nfolium.Marker(location=[42.02314,35.153069], popup=folium.Popup( pop_infoWestBlackSea,max_width=100,height=100),icon=folium.Icon(color='green')).add_to(Turkey)\nfolium.Marker(location=[41.02005,40.523449], popup=folium.Popup( pop_infoEastBlackSea,max_width=100,height=100),icon=folium.Icon(color='green')).add_to(Turkey)\nfolium.Marker(location=[39.747662,37.017879], popup=folium.Popup( pop_infoCentralEast,max_width=100,height=100),icon=folium.Icon(color='green')).add_to(Turkey)\nfolium.Marker(location=[37.91441,40.230629], popup=folium.Popup( pop_infoSouthEast,max_width=100,height=100),icon=folium.Icon(color='green')).add_to(Turkey)\n\nprint(col11)\n#folium.CircleMarker([41.015137, 28.979530],\n                   # radius=30,\n                   # popup='East London',\n                   # color='red',\n                   # ).add_to(Turkey)\nTurkey\n","8e858528":"import plotly.graph_objs as go\n\nlabels =list(birth_data['Regions'])\nvalues2015 =list( birth_data['year-2015'])\n\n# Use `hole` to create a donut-like pie chart\nfig = go.Figure(data=[go.Pie(labels=labels, values=values2015, hole=.3)])\nfig.show()","efb6491c":"from IPython.display import Image\nimport os\n!ls ..\/input\/\n\nImage(\"..\/input\/turkishimg\/offended.png\")","7bbf5a54":"print( causes_of_punishment.info())\ncauses_of_punishment.head()\n#Selected reasons of punishments given to children by their parents, SR Level 1 and three major provinces, 2016\n#General behaviours of children tht caues their parents  to punish them according to regions of turkey\n","5ff73d94":"from IPython.display import Image\nimport os\n!ls ..\/input\/\n\nImage(\"..\/input\/turkishimg\/hw.png\")","0997403b":"area_list=list(causes_of_punishment.Regions)\nprint(causes_of_punishment.columns)\nplt.figure( figsize=(9,15))\na1=sns.barplot( x=list(causes_of_punishment['Neglecting his\/her education']) ,y=area_list,color='green',alpha=0.5,label='White')\nsns.barplot( x=list(causes_of_punishment['Spending too much time playing on Internet\/computer']) ,y=area_list,color='blue',alpha=0.5,label='African American')\nsns.barplot( x=list(causes_of_punishment['Failing to perform dutles such as personal care']) ,y=area_list,color='cyan',alpha=0.5,label='Native American')\nsns.barplot( x=list(causes_of_punishment['Lying']) ,y=area_list,color='yellow',alpha=0.5,label='Asian')\nsns.barplot( x=list(causes_of_punishment['Disrespectfulattitude towards  the elders']) ,y=area_list,color='red',alpha=0.5,label='Hispanic')\nsns.barplot( x=list(causes_of_punishment['Being violent towards his\/her siblings and friends']) ,y=area_list,color='red',alpha=0.5,label='Hispanic')\nsns.barplot( x=list(causes_of_punishment['Making friends to wrong people']) ,y=area_list,color='red',alpha=0.5,label='Hispanic')\nsns.barplot( x=list(causes_of_punishment['Not assisting to household chores']) ,y=area_list,color='red',alpha=0.5,label='Hispanic')\nsns.barplot( x=list(causes_of_punishment['Coming home late']) ,y=area_list,color='red',alpha=0.5,label='Hispanic')\nsns.barplot( x=list(causes_of_punishment['Excessive spending habits']) ,y=area_list,color='red',alpha=0.5,label='Hispanic')\nsns.barplot( x=list(causes_of_punishment['Clothing style']) ,y=area_list,color='red',alpha=0.5,label='Hispanic')\n    \n    \n#ax.legend(  loc='upper right',frameon = True)     # legendlarin gorunurlugu\n#ax.set(xlabel='Percentage of Rates', ylabel='Regions',title = \"Percentage of Punishment Types \")\n","acffcfa6":"from IPython.display import Image\nimport os\n!ls ..\/input\/\n\nImage(\"..\/input\/turkishimg\/punishmentj.jpg\")","039dae0f":"print( behaviours.info())\nbehaviours.head()\n#Perceptions regarding children by sex, SR Level 1 and three major provinces, 2016 Turkey\n#Classification according to the regions of Turkey\n","e30f88a6":"behs=behaviours.columns[1:]\n#we can create new data frames from the previously existing ones to get better results\n#for example I've calculated the average values of each perception in Turkey\navgs=[]\nfor each in behs:\n    x=sum(behaviours[each])\/len(behaviours[each])\n    avgs.append(x)\ndictionary={'Perception':behs,'Average Value in Turkey':avgs}\n\n#we sort the average values and print the table to see most common perception types\ndfbehs=pd.DataFrame(data=dictionary)\nres=dfbehs.sort_values(by=['Average Value in Turkey'],ascending=False)\nres","2728a25e":"import plotly.graph_objs as go\nx = list(behaviours.Regions)\n\nprint(behaviours.columns)\nfig = go.Figure()\nfig.add_trace(go.Bar(x=x, y=behaviours['Only a son can assure the continuation of the bloodline'],name='Only a son can assure the continuation of the bloodline'))\nfig.add_trace(go.Bar(x=x, y=behaviours['Each family should have kids depending on their economic standing'],name='Each family should have kids depending on their economic standing'))\nfig.add_trace(go.Bar(x=x, y=behaviours['A kid has a negative impact on mothers social\/educational and professional life'],name='A kid has a negative impact on mothers social\/educational and professional life'))\nfig.add_trace(go.Bar(x=x, y=behaviours['A kid has a negative impact on fathers social\/educational and professional life '],name='A kid has a negative impact on fathers social\/educational and professional life '))\nfig.add_trace(go.Bar(x=x, y=behaviours['A woman who has a kid is more respectable than a woman who does not  have a kid'],name='A woman who has a kid is more respectable than a woman who does not  have a kid'))\nfig.add_trace(go.Bar(x=x, y=behaviours['A son makes mother more respectable'],name='A son makes mother more respectable'))\nfig.add_trace(go.Bar(x=x, y=behaviours['A kid makes the couple closer'],name='A kid makes the couple closer'))\nfig.add_trace(go.Bar(x=x, y=behaviours['Once having grown up the kid should financially support the parent'],name='Once having grown up the kid should financially support the parent'))\nfig.add_trace(go.Bar(x=x, y=behaviours['The kid should take care of the parent once they get old'],name='The kid should take care of the parent once they get old'))\n#fig.add_trace(go.Bar(x=x, y=[-1, 3, -3, -4]))\n\n\nfig.show()","d1324a18":"punishment=pd.read_csv(\"..\/input\/punishes\/punishment.csv\",encoding='latin-1')\npunishment['Banning mobile phone'].replace(to_replace ='-', value ='0.0',inplace=True)\npunishment['Other'].replace(to_replace ='-', value ='0.0',inplace=True)\npunishment.replace(to_replace = np.nan, value ='0.0',inplace=True)\nprint( punishment.info() )\n#cleaning the data,there were some '-' and NaN values we've changed them\n#and then we've changed the object types to float\npunishment['Banning mobile phone']=punishment['Banning mobile phone'].astype('float') #we changed the types and assign to itself\npunishment['Other']=punishment['Other'].astype('float',inplace=True) #we changed the types and assign to itself\n#Punishments given to children by their parents, SR Level 1 and three major provinces, 2016","17c9f7e0":"\nimport plotly.graph_objs as go\n\npuns=list(punishment.columns[1:])\n\navg=[]\nfor each in puns:\n    x=sum(punishment[each])\/len(punishment[each])\n    avg.append(x)\navg\n\ndictionary={'Punishment Type':puns,'Average Value In Turkey':avg }\ndf=pd.DataFrame(data=dictionary)\n\ndf1=df.sort_values(by=['Average Value In Turkey'],ascending=False)\ndf1","7810c91b":"import plotly.graph_objs as go\ncolors = ['gold', 'mediumturquoise', 'darkorange', 'lightgreen']\n\nfig = go.Figure(data=[go.Pie(labels=df['Punishment Type'], \n                             values=df['Average Value In Turkey'])])\nfig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=20,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=2)))\nfig.show()","c3bd7830":"from IPython.display import Image\nimport os\n!ls ..\/input\/\n\nImage(\"..\/input\/turkishimg\/childmarr.jpg\")","96662d9c":"marriages=pd.read_csv(\"..\/input\/marrchild2\/mar.csv\",encoding='latin-1')\n#sorted_df=marriages.sort_values(by='Proportion of child marriages for girls in total marriages', ascending=False)\nnew_index = (marriages['Proportion of child marriages for girls in total marriages'].sort_values(ascending=False)).index.values\nsorted_df = marriages.reindex(new_index)\nsorted_df2=sorted_df\nsorted_df=sorted_df.iloc[:5,:]\nsorted_df","bcbe95ab":"\n\nf,ax = plt.subplots(figsize =(20,10))\n\nfor item in ([ax.title, ax.xaxis.label, ax.yaxis.label] +\n              ax.get_xticklabels() + ax.get_yticklabels()):\n    item.set_fontsize(15)\n    \nsns.pointplot(x='Province',y='Total Marriages',data=sorted_df,color='pink',alpha=1)\nsns.pointplot(x='Province',y='Total Child Marriages For Girls',data=sorted_df,color='purple',alpha=1)\n\nplt.text(3,3500,'Total Marriages',color='pink',fontsize = 17,style = 'italic')\nplt.text(3,3000,'Total Child Marriages For Girls',color='purple',fontsize = 18,style = 'italic')\n\n\nplt.xlabel('Province',fontsize = 15,color='blue')\nplt.ylabel('Values',fontsize = 15,color='blue')\nplt.title('Total Marr. vs Child Marr. In Turkey',fontsize = 20,color='black')\nplt.grid()","667a7bf2":"import plotly_express as px\n\nfig = px.scatter(sorted_df2, y=\"Total Child Marriages For Girls\", color=\"Proportion of child marriages for girls in total marriages\",\n                 size='Total Marriages', hover_data=['Province'])\nfig.show()","b2204318":"depend_df=pd.read_csv(\"..\/input\/dependency\/depend.csv\",encoding='latin-1')\ndepend_df.head()","354c39a3":"import plotly_express as px\n\npx.scatter(depend_df, y=\"Youth dependency ratio (0-14 age)\", x=\"Total age dependency ratio\", animation_frame=\"Year\",\n           size=\"Total age dependency ratio\", hover_name=\"Year\",\n           log_x=False, size_max=55, range_x=[0,100], range_y=[30,150])","dc43d04b":"from IPython.display import Image\nimport os\n!ls ..\/input\/\n\nImage(\"..\/input\/turkishimg\/worker.jpg\")","ad7b6581":"labour_df=pd.read_csv(\"..\/input\/labour\/labour.csv\",encoding='latin-1')\nlabour_df","9e2037b0":"\nimport plotly.graph_objs as go\n\nlb_2014=labour_df[ labour_df['Year']==2014 ]\nlb_2015=labour_df[ labour_df['Year']==2015 ]\nlb_2016=labour_df[ labour_df['Year']==2016 ]\n\n\n\n\ntrace1={ \n        'x':lb_2014.Year,\n        'y':lb_2014['Labour force participation rate'],\n        'name':'Labour force participation rate',\n        'type':'bar' }\ntrace2={\n        'x':lb_2014.Year,\n        'y':lb_2014['Employment rate'],\n        'name':'Employment rate',\n        'type':'bar'\n                     }\ntrace3={\n        'x':lb_2014.Year,\n        'y':lb_2014['Unemployment rate'],\n        'name':'Unemployment rate',\n        'type':'bar'\n                     }\ntrace4={\n        'x':lb_2015.Year,\n        'y':lb_2015['Labour force participation rate'],\n        'name':'Labour force participation rate',\n        'type':'bar'\n                     }\ntrace5={\n        'x':lb_2015.Year,\n        'y':lb_2015['Employment rate'],\n        'name':'Employment rate',\n        'type':'bar'\n                     }\ntrace6={\n        'x':lb_2015.Year,\n        'y':lb_2015['Unemployment rate'],\n        'name':'Unemployment rate',\n        'type':'bar'\n                     }\ntrace7={\n        'x':lb_2016.Year,\n        'y':lb_2016['Labour force participation rate'],\n        'name':'Labour force participation rate',\n        'type':'bar'\n                     }\ntrace8={\n        'x':lb_2016.Year,\n        'y':lb_2016['Employment rate'],\n        'name':'Employment rate',\n        'type':'bar'\n                     }\n                     \ntrace9={\n        'x':lb_2016.Year,\n        'y':lb_2016['Unemployment rate'],\n        'name':'Unemployment rate',\n        'type':'bar'\n                     }\n\ndata=[trace1,trace2,trace3,trace4,trace5,trace6,trace7,trace8,trace9]\nlayout={\n         'xaxis':{'title':'--years--'},\n         'yaxis':{'title':'Value Percents'},\n         'barmode':'group',\n         'title':'Labour force participation-Employment-Unemployment Rates'\n}\n\nfig=go.Figure( data=data,layout=layout )\niplot( fig )\n","33af0d6f":"import plotly_express as px\n\nfig = px.scatter(labour_df, x='Year',y=\"Labour force\", color=\"Labour force participation rate\",\n                 size='Employment rate', hover_data=['Gender'])\nfig.show()","c32efc4c":"import plotly_express as px\n\nlabour_df['Labour force participation rate']=sum(labour_df['Labour force participation rate'])\/min(labour_df['Labour force participation rate'])\n\npx.scatter(labour_df, x=\"Labour force\", y=\"Labour force participation rate\", animation_frame=\"Year\", animation_group=\"Gender\",\n           size=\"Employment rate\", color=\"Gender\", hover_name=\"Labour force participation rate\",\n           log_x=False, size_max=55, range_x=[200,700], range_y=[0,60])","308b5656":"killed_df=pd.read_csv(\"..\/input\/killed\/killed.csv\",encoding='latin-1')\nkilled_df.head()\n","15a376e1":"\nimport plotly.graph_objs as go\n\nlabels = ['Number Of Traffic Accidents','Number Traffic accidents involving death or persoal injury']\nvalues = [ sum(killed_df['Number Of Traffic Accidents']),sum(killed_df['Number Traffic accidents involving death or persoal injury'])]\n\n# Use `hole` to create a donut-like pie chart\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.3)])\nfig.show()","3b788932":"\nimport plotly.graph_objs as go\n\n\ntotalkilled=sum(killed_df['Total Killed'])\ntotalinjured=sum(killed_df['Total Injured'])\ntotalkilledchild=sum(killed_df['Total Killed Child'])\ntotalinjuredchild=sum(killed_df['Total Injured Child'])\n\n\n\n\ntrace1={ \n        'x':killed_df['Year'],\n        'y':killed_df['Total Killed'],\n        'name':'Total Killed People',\n        'type':'bar' }\ntrace2={\n        'x':killed_df['Year'],\n        'y':killed_df['Total Killed Child'],\n        'name':'Total Killed Children',\n        'type':'bar'\n                     }\ntrace3={ \n        'x':killed_df['Year'],\n        'y':killed_df['Total Injured'],\n        'name':'Total Injured People',\n        'type':'bar' }\ntrace4={\n        'x':killed_df['Year'],\n        'y':killed_df['Total Injured Child'],\n        'name':'Total Injured Children',\n        'type':'bar'\n                     }\n\ndata=[trace1,trace2,trace3,trace4]\nlayout={\n         'xaxis':{'title':'--years--'},\n         'yaxis':{'title':'Values'},\n         'barmode':'group',\n         'title':'Killed or injured People vs Children',\n         'width':1200\n}\n\nfig=go.Figure( data=data,layout=layout )\niplot( fig )","480ae48c":"import plotly_express as px\n\nfig = px.scatter(killed_df, x=\"Year\", y=\"Number Traffic accidents involving death or persoal injury\", color=\"Total Injured Child\",\n                 size='Total Killed Child', hover_data=[\"Total Injured Child\",'Total Killed Child'])\nfig.show()","354adef8":"killed_df.columns\n","a023a5c2":"import matplotlib.pyplot as plt\nfig, axes = plt.subplots(figsize=(15,15),nrows=2, ncols=2)\n# Data to plot , \n\nfor item in ([ax.title, ax.xaxis.label, ax.yaxis.label] +\n              ax.get_xticklabels() + ax.get_yticklabels()):\n    item.set_fontsize(15)\n   \nlabels1 = 'Age group 0-9 killed', 'Age Group 0-9 Injured'\nsizes1 = [sum(killed_df['Age group 0-9 killed']),sum(killed_df['Age Group 0-9 Injured'])]\ncolors1 = ['gold', 'yellowgreen']\nexplode = (0.2,0)  # explode 1st slice\nexplode2 = (0.2,0,0) \nlabels2 = 'Age group 10-14 killed', 'Age Group 10-14 Injured'\nsizes2 = [sum(killed_df['Age group 10-14 killed']),sum(killed_df['Age Group 10-14 Injured'])]\ncolors2 = ['lightcoral', 'lightskyblue']\n\nlabels3 = 'Age group 15-17 killed', 'Age Group 15-17 Injured'\nsizes3 = [sum(killed_df['Age group 15-17 killed']),sum(killed_df['Age group 15-17 Injured'])]\ncolors3 = ['pink', 'purple']\n\nlabels4 = 'Age group 10-14 killed', 'Age group 0-9 killed','Age group 15-17 killed'\nsizes4 = [sum(killed_df['Total Killed Child']),sum(killed_df['Age group 0-9 killed']),sum(killed_df['Age group 15-17 killed'])]\ncolors4 = ['red', 'green','yellow']\n\n# Plot\naxes[0,0].pie(sizes1, explode=explode, labels=labels1, colors=colors1,\nautopct='%1.2f%%', shadow=True, startangle=140, textprops={'fontsize': 14})\n\naxes[0,1].pie(sizes2, explode=explode, labels=labels2, colors=colors2,\nautopct='%1.2f%%', shadow=True, startangle=140, textprops={'fontsize': 14})\n\naxes[1,0].pie(sizes3, explode=explode, labels=labels3, colors=colors3,\nautopct='%1.2f%%', shadow=True, startangle=140, textprops={'fontsize': 14})\n\naxes[1,1].pie(sizes4, explode=explode2, labels=labels4, colors=colors4,\nautopct='%1.2f%%', shadow=True, startangle=140, textprops={'fontsize': 14})\n\n\n\nplt.axis('equal')\nplt.show()\n","65638db9":"**According to the above grapg the number of traffic accidents involving death or injury is increasing over the time from 1995 to 2015 and also the total injured and killed child numbers are increasing.**","9ba389b9":"<h1 style=\"color:skyblue;\">About Perceptions Of Adults In Turkey...<\/h1>","74fd4fa0":"<h1 style=\"color:skyblue;\">Now....The Turkey is in stage !<\/h1>\n\nWe'll be using the dataset which includes all provinces with their total population,total child proportion and total child population according to the age groups and finally the Proportion Of Child Population in total population.First we'll find the **top 5** and **last 5** of total child population of provinces of Turkey.","758aec1d":"<b>What happened to Turkish children in 2016 ?<\/b>\n\nIn 2016,The Turkey had 28,7% children in it's population.According to the results of the Address Based Population Registration System (ABPRS); Turkey's total population in 2016 was <b>79 million 814 thousand 871<\/b> at the end of the process when the child population was <b>22 million 891 thousand 140<\/b>.According to the definition of United Nations; In 1935, the population of <b>0-17 age group<\/b> comprised <b>45%<\/b> of the total population,<b> 31.5%<\/b> of the total population in <b>2008<\/b> and <b>28.7%<\/b> of the total population in <b> 2016.<\/b>\n","8bba45c5":"<h1 style=\"color:skyblue;\">Working little hands in Turkey...<\/h1>\n","07fc5386":"<h1 style=\"color:skyblue;\">We care about the drug dependency of Turkish children...<\/h1>\n","4eb3418a":"**When we classify the little workers according to their gender we can see that the rate of boys are more than the rate of girls.But over years girls are more intended to work cause the rate of labour force for girls is increasing and boys are not intended to work anymore cause the rate of labour force for boys are decreasing. **","fe7af4f0":"In the **3-D scatter graph** we can where one region is standing among the three years 2002,2014,2015.","016d8a12":"According to the Ministry of Health;<br>\n\nThe cesarean delivery rate, which was 21% in 2002, was 51% in 2014 and 53% in 2015.<br>\n\nClassification of Statistical Region Units (NUTS) According to Level 1; The region with **the highest rate of cesarean** deliveries in 2015 was **TR6 Mediterranean** (Antalya, Isparta, Burdur, Adana, Mersin, Hatay, Kahramanmaras, Osmaniye) with 64%, **TRA Northeast Anatolia** (Erzurum, Erzincan, Bayburt), A\u011fr\u0131, Kars, I\u011fd\u0131r, Ardahan.","6814fa19":"We can see the **top 3** countries which have the highest Proportion of Child population they are **Nigeria,Uganda,Mali** in order.","6017fa38":"**Click on the green markers on the map to see hover information which is about the cesarean birth rates(%).**","854ff605":"<h1 style=\"color:skyblue;\">Oops..What causes parents to punish their children in Turkey ?<\/h1>","b5a629ff":"**Maximum punishment type given to children**\n\nAccording to the results of 2016 family structure research; When the reasons for the punishment given to their children by the parents were examined, it was seen that **the highest reason for punishment was neglecting the biological education with 65.9%** .And it is followed by **play a lot of games on the biological Internet \/ world with 46%**, and  **care for himself with 33.3%** finally **perform his duties like tidying up his room.** These  categories are generally preferred by Turkish parents.\n\n**The minimum** penalties are  given to parents for their children were **due to costume \/ dress style with 9.2%**, **excessive spending with 10%** and **late arrival with 10.5%.**","a2c3b780":"Welcome everybody to my kernel which is about Turkish children.In this kernel first I'll give you an brief information about Turkish children's current situation and then investigate the datasets if **TUIK( Turkish Statistical Institute )**.In this research I've included many topics about children and analyzed from diverse angles,such as<br>\nI am blue\n<p style=\"color:blue;\">'What are the Turkish children population's place in world?'<\/p>\n<p style=\"color:blue;\">'What is the ratio of drug dependency of Turkish Children ?'<\/p>\n<p style=\"color:blue;\">'Which countries have the highest or lowest number of children in world?'<\/p>\n<p style=\"color:blue;\">'Which provinces have the highest and lowest number of children in Turkey?'<\/p>\n<p style=\"color:blue;\">'What are the most common punishment style of parents and what reasons causes them to punish their children?<\/p>\n<p style=\"color:blue;\">'What is the ratio of child brides in Turkey?'<\/p>\n<p style=\"color:blue;\">'What is the labor force participation rate?'<\/p>\n<p style=\"color:blue;\">'What is the ratio of killed and injured childs in traffic accident's in Turkey?'<\/p>\n\nWe'll find these answers together with strong visualization tools with **matplotlib**,**seaborn**,**plotly**,**folium** libraries and I'll explain my code in detail.Also I'll give you declarations about which visualization tool is used for what ? and for what reasons ?Let's go on with my codes.","c10bd255":"According to the ABPRS results; In **2016**, when the total population of the province is examined according to the proportion of the child population, **\u015eanl\u0131urfa** has the **highest** child population rate with **47%.** \u015eanl\u0131urfa was followed by **\u015e\u0131rnak** with **46.8%** and **A\u011fr\u0131** with **44.5%**. The provinces with the **lowest** child population were **Tunceli** with **17.6%**, **Edirne** with **18.8%** and **K\u0131rklareli** with **19.2%**.","8e7db98e":"Youth dependency rate was **34.9%**\n\u00a0\nAccording to the ABPRS results; The total age dependency rate, defined as the number of people in 0-14 and 65 and over age groups, was **47.2%** for every 100 people in the 15-64 age group. The rate of youth dependence, which represents the number of children in the 0-14 age group per 100 working age group, **decreased from 35.4%** in 2015 to **34.9%** in **2016.**Total youth dependency is decreasing over years.","8114ff74":"First,we'll observe the relation between total marriages and total child marriages for girls in Turkey in a point plot graph and then we'll have a look at provinces one by one.","43d4f5e8":"**And over years from 2014 to 2016 the labour force participation rate of children in Turkey is decreasing generally.**","dd37eb30":"From **1935-1970** the proportion of child population in total population is **increasing.** When it comes to 1970 this ratio is started to **decrease** regularly until 2016.","8cf97c73":"<h1 style=\"color:skyblue;\">Don't desire to see child brides in Turkey!...<\/h1>","91e690df":"In the above world map I've plotted the top 5 countries which have the highest number of children after sorting the data according to the number of children column.Here the order is like the following,<br>\n**1.** India<br>\n**2.** China<br>\n**3.** Nigeria<br>\n**4.** Indonesia<br>\n**5.** Pakistan<br>.\nAnd next we'll investigate the proportions of children in total population.Again we'll plot them in the world map.","d93fa25b":"Africa has the highest penalty in rates... <b>2016<\/b>, <b>30.3%<\/b> of the world's population was child. The first <b>three countries<\/b> with the highest child population ratio are; <br> <b>Niger<\/b> with <b>56%<\/b>,<br> <b>Uganda<\/b> with <b>55.3%<br><\/b> and <b>Mali<\/b> with <b>54%<\/b>.<br> <b>Turkey<\/b> has the largest child population ratio of <b>167<\/b> countries with <b> 96'th <\/b> place and it was <b>28.7%<\/b>.","ca76fe2c":"<h1 style=\"color:skyblue;\">What is the Turkish children's place in statistics ?<\/h1>","fd2e485a":"**One in two children who died in accidents were under 10**\n\u00a0\nAccording to traffic accident statistics; In 2015, 864 children lost their lives and 55 thousand 198 children were injured in traffic accidents. It was observed that 44.8% of the children who died in the accidents were in the 0-9 age group, 21.5% were in the 10-14 age group and 33.7% were in the 15-17 age group.","24ec2c01":"**The maximum penalty for children was reprimanding with 67.98%**\n\u00a0\nAccording to the results of 2016 family structure research; The **most common type of punishment** was **reprimanded with 47.61%**. This was followed by penalties for **banning the Internet with 43.5%** and for **not watching TV with 43.506%.**\n\nIt was seen that the **minimum punishment** given to the children by the parents was the penalty of **closing the room with 2.58%**. This was followed by penalties with 14.2% and **non-contact with friends with 14.3%.**","11397e3f":"Click on the play button to see drug dependency over years in Turkey.","e6a3f708":"As a result from 1935 to 2016 the **total population and total child population were increasing** normally.","c552a7ae":"Labor force participation rate was **20.8%** in the 15-17 age group\n\u00a0\nAccording to the results of the household labor force survey; In **2016**, the labor force participation rate of children aged 15-17 was **20.8%**, the employment rate was **18%** and the unemployment rate was **13.5%**. Differences were observed in the labor force participation of children by gender. While the labor force participation rate of boys was **28.6%** in **2015**, it decreased to **27.8%** in **2016**. In **2015**, the rate for girls increased from **13%** to **13.4%**.","a510c6b7":"In this dataset we have some **selected countries** and their **total population** and their **child pouplation** in them with the proportion of child population.Ratio is belong the proportion of child population.We'll use a different library to show which countries have the highest ratio of proportion of child population.We'll use head() method to **see top 5 countries** and mark them in the world map. ","d719efa8":"Here,as you can see above we have the **years,total population and total child population** for each year from **1935 to 2016** in the **world**.We've already calculated the proportion of child population in total population and append the dataset,so don't reinvent the wheel use it in your data visualizations.In integer and float data types watch out that your data must be **clean**,I mean there may be some **'-',NaN,and other values non-related** to your dataset.You can **replace, and rename** this dataset indexes by using replace and rename methods.And when it comes to change a question comes to our mind:'What is the new value to be inserted ?'It must be appropriate value.","6bacafa0":"And we'll also reached the information of **birth types**,is it normal or cesarean,which one was the Turkish momies's preference region by region ?We'll look at over three years to get a long-term visualization.**(2002-2014-2015)**","15ddeeb7":"\n**The Turkish Children are considered to look after their parents when they get old in age**\n\nAccording to the results of 2016 family structure research; When examined perceptions about the individual child, the **92.3%** of the individual thought that the Turkish Children are considered to **look after their parents** when they get old in age.**88.1%** , and the rate of individuals who thought having children is making close parent to each other,and the rate of the perception having children **according to the economic average** of each family was **85.3%.**\n\nWhen the individual perceptions about the boy studied in Turkey; It was seen that **44.7%** of the individuals would take the **continuation of the generation (lineage) only with the boy** and **35.9% of the men** would naturally **increase the reputation of the mother**. When the perceptions of the individuals about the boy were examined according to NUTS 1st Level; **TRC Southeast Anatolia with 55% (Gaziantep, Adiyaman, Kilis, Sanliurfa, Diyarbakir, Mardin, Batman, Sirnak, Siirt)** was seen with it.","713e0011":"**Number of children who are injured is more than the number of children who are killed at every time.But also as we can see in the last graph unfortunately the killed children which is in age-group 10-14 is the highest.**","b69a66e6":"The total child marriages for girls is under the total marriages in Turkey.And also we can see from the graph that which provinces have the highest rate of total marriages for girls in Turkey; **Agri,Mus,Kilis,Bitlis,Nigde.**","bdf969bb":"We use size to indicate total marriages and color to indicate total child marriage rates of bubbles in the above graph.Also you can use the hover info which is supported by these type of graph to see hover text.And in pink bubbles we have the highest rate of child marriages.**We can understand that even if the bubble size is so small the bubble color may be deeply pink.That means even if the number of total marriages is so small the number of child marriages may be in high rates in Turkey's some provinces.**","bbdd7855":"All over the world parents are using some methods to show that thir children's behaviour is not correct.First we'll observe what causes parents to punish their children and then we'll look at what are the most common punishment types in Turkey ?","59615037":"<h1 style=\"color:skyblue;\"><\/h1>\n"}}