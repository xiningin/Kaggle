{"cell_type":{"f4cad6e7":"code","b9746f2a":"code","67c81c55":"code","9f561e58":"code","f5115e64":"code","575e1044":"code","e648037f":"code","2cf55af2":"code","db4e6213":"code","e661398d":"code","662bbea4":"code","8385fedc":"code","218d401e":"code","08e59a53":"code","5ca3d001":"code","2239f8fd":"code","c17f2988":"code","1877404b":"code","c8200145":"code","c2457810":"code","d312c99a":"code","e7bf46bd":"code","b4156390":"code","90fb838d":"code","69c70758":"code","3dd73f94":"markdown","6a0a54cb":"markdown","ef614b80":"markdown","d13ec0d5":"markdown","4346120a":"markdown","77bfe7f0":"markdown"},"source":{"f4cad6e7":"# import libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nfrom joblib import Parallel, delayed","b9746f2a":"# import data\nproducts = pd.read_csv('..\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv')\ndistrict = pd.read_csv('..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv')","67c81c55":"products.head()","9f561e58":"district.head()","f5115e64":"# check for null values\nprint(products.isna().sum()) \nprint('-'*30)\nprint(district.isna().sum())","575e1044":"# Pie chart for sectors\nfig = px.pie(products, names='Sector(s)', height=400, width=1000, template='plotly_dark+presentation', title='Distribution of Sector')\nfig.show()","e648037f":"df = products['Primary Essential Function'].dropna().reset_index(drop=True)\ncategories = df.str.split('-')","2cf55af2":"category = []\nsubcategory = []\nfor i in range(len(categories)):\n    category.append(categories[i][0])\n    \n    for cat in categories[i][1:]:\n        subcategory.append(cat)","db4e6213":"# pie chart for category\nfig = px.pie(names=category, height=400, width=1000, template='plotly_dark+presentation', title='Distribution of Category')\nfig.show()","e661398d":"# pie chart for subcategory\ntitle = 'Count of Subcategory'\nfig = px.histogram(y=subcategory, template='plotly_dark+presentation', title=title, labels={'y': 'Subcategory'}).update_yaxes(categoryorder='total ascending')\nfig.show()","662bbea4":"# top provider\/company name\nfig = px.histogram(products, y='Provider\/Company Name', height=400 ,template='plotly_dark+presentation', title='Top Company\/Provider Name').update_yaxes(categoryorder='max descending', range=(-1, 8))\nfig.show()","8385fedc":"def plot_sunbrust(df, col, path, title):\n    \n    df = df.loc[:, col].dropna()\n    fig = px.sunburst(df, path=path, template='plotly_dark+presentation', title=title)\n    fig.show()","218d401e":"plot_sunbrust(district, ['state', 'locale'], ['locale', 'state'], title='Distribution of states as per locale')","08e59a53":"plot_sunbrust(district, ['pct_black\/hispanic', 'locale'], ['locale', 'pct_black\/hispanic'], title='Percentage of students in the districts as Black or Hispanic as per locale')","5ca3d001":"plot_sunbrust(district, ['pct_free\/reduced', 'locale'], ['locale', 'pct_free\/reduced'], \n              title='Percentage of students in the districts eligible for free or reduced-price lunchas per locale')","2239f8fd":"plot_sunbrust(district, ['pp_total_raw', 'locale',], ['locale', 'pp_total_raw'], title='Distribution of pp_total_raw as per locale')","c17f2988":"def plot_engagement(dist_id):\n        \n    engage = pd.read_csv(f'..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data\/{1000}.csv')\n\n    # Fill null values\n    engage.fillna(0, inplace=True)\n\n    engage['time'] = pd.to_datetime(engage['time'])\n    \n    fig = px.histogram(engage, x='time', y='engagement_index', height=400, template='plotly_dark+presentation', histfunc='avg')\n    fig.show()\n    \n    fig = px.histogram(engage, x='time', y='pct_access', height=400, template='plotly_dark+presentation', histfunc='avg')\n    fig.show()","1877404b":"plot_engagement(1000)","c8200145":"def merge_engage(dist_id):\n    \n    df = pd.read_csv(f'..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data\/{dist_id}.csv')\n    \n    group = df.groupby(['time']).agg(pct_access=('pct_access', 'mean'),\n                                     engagement_index=('engagement_index', 'sum')).reset_index()\n    \n    group['district_id'] = dist_id\n    \n    dist_group = district.merge(group, on=['district_id'], how='left')\n    \n    return dist_group\n\ndef get_dataset(dist_ids):\n    \n    dist_stat = Parallel(n_jobs=-1)(\n        delayed(merge_engage)(dist_id) \n        for dist_id in dist_ids\n    )\n    \n    district_df = pd.concat(dist_stat, ignore_index = True)\n\n    return district_df","c2457810":"dist_ids = list(district['district_id'])\ndistrict_df = get_dataset(dist_ids)","d312c99a":"group_locale = district_df.groupby(['locale', 'state']).agg(pct_access=('pct_access', 'mean'),\n                                                            engagement_index=('engagement_index', 'mean')).reset_index()","e7bf46bd":"# state with high engagement index\ntop = 50\nhigh_engage = group_locale.sort_values(by='engagement_index', ascending=False)[:top]\nfig = px.bar(high_engage, y='state', x='engagement_index', height=700, template='plotly_dark+presentation', title='Top State with high engagement index').update_yaxes(categoryorder='total ascending')\nfig.show()","b4156390":"# state with high pct_access\ntop = 50\nhigh_pct_access = group_locale.sort_values(by='pct_access', ascending=False)[:top]\nfig = px.bar(high_pct_access, y='state', x='pct_access', height=700, template='plotly_dark+presentation', title='Top State with high pct_access').update_yaxes(categoryorder='total ascending')\nfig.show()","90fb838d":"# maps for high engagement index\nus_state_abbrev = {\n    'Alabama': 'AL',\n    'Alaska': 'AK',\n    'American Samoa': 'AS',\n    'Arizona': 'AZ',\n    'Arkansas': 'AR',\n    'California': 'CA',\n    'Colorado': 'CO',\n    'Connecticut': 'CT',\n    'Delaware': 'DE',\n    'District Of Columbia': 'DC',\n    'Florida': 'FL',\n    'Georgia': 'GA',\n    'Guam': 'GU',\n    'Hawaii': 'HI',\n    'Idaho': 'ID',\n    'Illinois': 'IL',\n    'Indiana': 'IN',\n    'Iowa': 'IA',\n    'Kansas': 'KS',\n    'Kentucky': 'KY',\n    'Louisiana': 'LA',\n    'Maine': 'ME',\n    'Maryland': 'MD',\n    'Massachusetts': 'MA',\n    'Michigan': 'MI',\n    'Minnesota': 'MN',\n    'Mississippi': 'MS',\n    'Missouri': 'MO',\n    'Montana': 'MT',\n    'Nebraska': 'NE',\n    'Nevada': 'NV',\n    'New Hampshire': 'NH',\n    'New Jersey': 'NJ',\n    'New Mexico': 'NM',\n    'New York': 'NY',\n    'North Carolina': 'NC',\n    'North Dakota': 'ND',\n    'Northern Mariana Islands':'MP',\n    'Ohio': 'OH',\n    'Oklahoma': 'OK',\n    'Oregon': 'OR',\n    'Pennsylvania': 'PA',\n    'Puerto Rico': 'PR',\n    'Rhode Island': 'RI',\n    'South Carolina': 'SC',\n    'South Dakota': 'SD',\n    'Tennessee': 'TN',\n    'Texas': 'TX',\n    'Utah': 'UT',\n    'Vermont': 'VT',\n    'Virgin Islands': 'VI',\n    'Virginia': 'VA',\n    'Washington': 'WA',\n    'West Virginia': 'WV',\n    'Wisconsin': 'WI',\n    'Wyoming': 'WY'\n}\n\nstate_codes = []\nfor i in group_locale.state:\n    state_codes.append(us_state_abbrev[i])\n\ngroup_locale['state_codes'] = state_codes\n\nfig = px.choropleth(group_locale, \n                    locations='state_codes', \n                    locationmode = 'USA-states', \n                    color='engagement_index', \n                    scope='usa', \n                    title='States with highest engagement index')\nfig.show()","69c70758":"fig = px.choropleth(group_locale, \n                    locations='state_codes', \n                    locationmode = 'USA-states', \n                    color='pct_access', \n                    scope='usa',\n                    title='State with highest pct_access')\nfig.show()","3dd73f94":"### District","6a0a54cb":"## Data Visualization","ef614b80":"# Covid-19 Impact On Digital Learning","d13ec0d5":"### Engagement data","4346120a":"### Products","77bfe7f0":"## Introduction\n\n**Engangement Data**\n\n* **lp_id**: The unique identifier of the product that can be used to link to product information in product_info.csv\n* **pct_access**: Percentage of students in the district have at least one page-load event of a given product and on a given day\n* **engagement_index**: Total page-load events per one thousand students of a given product and on a given day.\n\n**District Information Data**\n\n* **locale**: NCES locale classification that categorizes U.S. territory into four types of areas: City, Suburban, Town, and Rural. \n* **pct_black\/hispanic**: Percentage of students in the districts identified as Black or Hispanic based on 2018-19 NCES data\n* **pct_free\/reduced**: Percentage of students in the districts eligible for free or reduced-price lunch based on 2018-19 NCES data\n* **countyconnectionsratio**: ratio (residential fixed high-speed connections over 200 kbps in at least one direction\/households) \n* **pptotalraw**: Per-pupil total expenditure (sum of local and federal expenditure)\n\n**Product information data**\n\n* **Primary Essential Function**: The basic function of the product. There are two layers of labels here. Products are first labeled as one of these three categories: LC = Learning & Curriculum, CM = Classroom Management, and SDO = School & District Operations. Each of these categories have multiple sub-categories with which the products were labeled"}}