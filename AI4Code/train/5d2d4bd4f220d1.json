{"cell_type":{"894e836f":"code","f4683b76":"code","a82a946f":"code","61d64ebe":"code","30cafe97":"code","b6112611":"code","ee4ef29e":"code","de3437f3":"code","cc029809":"code","949cf825":"code","2ac6f090":"code","6fff0746":"code","53dc322e":"code","8f64d090":"code","cde145f8":"code","bf438718":"code","b98dbaf1":"code","5dce05b8":"code","91ecfcdd":"code","4356d142":"code","894bde1f":"code","44a33a13":"code","95c87277":"code","bf791c42":"code","bb77d478":"code","78d495d8":"code","12a710a2":"code","30a68a81":"code","b4dd3191":"code","e41f00d7":"code","02e19016":"code","51b4e502":"code","acdbed79":"code","8e864a9e":"code","3e3c3ebf":"code","af7905c1":"code","58abea74":"code","e993962e":"code","82e073f2":"code","4971b594":"code","3da33dbc":"code","4346cffb":"code","ff4af215":"code","123d196b":"code","fcb39a5d":"code","f3d4edc9":"code","b9ce1e0b":"code","c6dba61e":"code","c6bc790c":"code","1f7070e0":"code","df0de79a":"code","0b67b6d6":"code","a4a29fb2":"code","575ab87b":"code","d79719c5":"markdown","11666382":"markdown","539eeace":"markdown","745f6c95":"markdown","f3392902":"markdown","23317e5f":"markdown","49beb794":"markdown","e64750c1":"markdown","5478560f":"markdown","8ec057e3":"markdown","88ac6abc":"markdown","f3ac0b51":"markdown","7bb6871f":"markdown","c9fd05a3":"markdown","9005e77a":"markdown"},"source":{"894e836f":"import seaborn as sns\nimport matplotlib.pyplot as plt","f4683b76":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a82a946f":"ss = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv\")\ntrain = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv\")","61d64ebe":"train.info()","30cafe97":"test.isnull().sum()","b6112611":"train = train.drop(train[[\"Alley\",\"PoolQC\",\"Fence\",\"MiscFeature\",\"FireplaceQu\"]],axis=1)\ntest = test.drop(test[[\"Alley\",\"PoolQC\",\"Fence\",\"MiscFeature\",\"FireplaceQu\"]],axis=1)\ntrain","ee4ef29e":"train[\"LotFrontage\"].value_counts().plot.bar()\nplt.show()","de3437f3":"train[\"LotFrontage\"].describe()","cc029809":"train[\"LotFrontage\"].fillna(train[\"LotFrontage\"].mean(),inplace=True)","949cf825":"test[\"LotFrontage\"].value_counts().plot.bar()\nplt.show()","2ac6f090":"test[\"LotFrontage\"].fillna(test[\"LotFrontage\"].mean(),inplace=True)","6fff0746":"train.info()","53dc322e":"plt.subplots(figsize=(20,20))\nax = plt.axes()\ncorr = train.corr()\nsns.heatmap(corr)","8f64d090":"train1 = train[[\"SalePrice\",\"OverallQual\",\"YearBuilt\",\"YearRemodAdd\",\"MasVnrArea\",\"TotalBsmtSF\",\"1stFlrSF\",\"GrLivArea\",\"FullBath\",\"TotRmsAbvGrd\",\"GarageCars\",\"GarageArea\"]]\ntrain1.head()","cde145f8":"test1 = test[[\"OverallQual\",\"YearBuilt\",\"YearRemodAdd\",\"MasVnrArea\",\"TotalBsmtSF\",\"1stFlrSF\",\"GrLivArea\",\"FullBath\",\"TotRmsAbvGrd\",\"GarageCars\",\"GarageArea\"]]\ntest1.head()","bf438718":"train1[\"MasVnrType\"] = train[\"MasVnrType\"]\ntest1[\"MasVnrType\"] = train[\"MasVnrType\"]","b98dbaf1":"train1[\"ExterQual\"] = train[\"ExterQual\"]\ntest1[\"ExterQual\"] = test[\"ExterQual\"]","5dce05b8":"train1[\"Foundation\"] = train[\"Foundation\"]\ntest1[\"Foundation\"] = test[\"Foundation\"]","91ecfcdd":"train1[\"GarageType\"] = train[\"GarageType\"]\ntest1[\"GarageType\"] = test[\"GarageType\"]","4356d142":"train1[\"GarageFinish\"] = train[\"GarageFinish\"]\ntest1[\"GarageFinish\"] = test[\"GarageFinish\"]","894bde1f":"train1.info()","44a33a13":"train[\"MasVnrType\"].value_counts().plot.bar()\nplt.show()","95c87277":"train1[\"MasVnrType\"] = train1[\"MasVnrType\"].map({\"None\":1,\"BrkFace\":2,\"Stone\":3,\"BrkCmn\":4})\ntrain1[\"MasVnrType\"].fillna(method='ffill',inplace = True)\ntrain1[\"MasVnrType\"].value_counts().plot.bar()\nplt.show()","bf791c42":"train1[\"MasVnrArea\"].value_counts().plot.bar()\nplt.show()","bb77d478":"train1[\"MasVnrArea\"].describe()","78d495d8":"train1[\"MasVnrArea\"].fillna(method='ffill',inplace = True)","12a710a2":"train1[\"GarageType\"].value_counts().plot.bar()\nplt.show()","30a68a81":"train1[\"GarageType\"] = train1[\"GarageType\"].map({\"Attchd\":1,\"Detchd\":2,\"BuiltIn\":3,\"Basment\":4,\"CarPort\":5,\"2Types\":6})\ntrain1[\"GarageType\"].fillna(method='ffill',inplace = True)","b4dd3191":"train1[\"GarageType\"].value_counts().plot.bar()\nplt.show()","e41f00d7":"train1[\"GarageFinish\"].value_counts().plot.bar()\nplt.show()","02e19016":"train1[\"GarageFinish\"] = train1[\"GarageFinish\"].map({\"Unf\":1,\"RFn\":2,\"Fin\":3})\ntrain1[\"GarageFinish\"].fillna(method='ffill',inplace = True)\ntrain1[\"GarageFinish\"].value_counts().plot.bar()\nplt.show()","51b4e502":"train1[\"ExterQual\"].value_counts().plot.bar()\nplt.show()","acdbed79":"train1[\"ExterQual\"] = train1[\"ExterQual\"].map({\"TA\":1,\"Gd\":2,\"Ex\":3,\"Fa\":4})\ntrain1[\"ExterQual\"].value_counts().plot.bar()\nplt.show()","8e864a9e":"train1[\"Foundation\"].value_counts().plot.bar()\nplt.show()","3e3c3ebf":"train1[\"Foundation\"] = train1[\"Foundation\"].map({\"PConc\":1,\"CBlock\":2,\"BrkTil\":3,\"Slab\":4,\"Stone\":5,\"Wood\":6})","af7905c1":"train1[\"Foundation\"].value_counts().plot.bar()\nplt.show()","58abea74":"train1.info()","e993962e":"plt.subplots(figsize=(20,20))\nax = plt.axes()\ncorr = train1.corr()\nsns.heatmap(corr)","82e073f2":"traindata = train1.drop(train[[\"MasVnrType\",\"Foundation\",\"GarageType\",\"GarageFinish\"]],axis=1)\ntestdata = test1.drop(train[[\"MasVnrType\",\"Foundation\",\"GarageType\",\"GarageFinish\"]],axis=1)","4971b594":"traindata.head(10)","3da33dbc":"testdata.info()","4346cffb":"testdata.head(10)","ff4af215":"testdata[\"MasVnrArea\"].fillna(method='ffill',inplace=True)","123d196b":"testdata.fillna(testdata.mean(),inplace=True)","fcb39a5d":"testdata[\"ExterQual\"].value_counts().plot.bar()\nplt.show()","f3d4edc9":"testdata[\"ExterQual\"] = testdata[\"ExterQual\"].map({\"TA\":1,\"Gd\":2,\"Ex\":3,\"Fa\":4})\ntestdata[\"ExterQual\"].value_counts().plot.bar()\nplt.show()","b9ce1e0b":"testdata.info()","c6dba61e":"x_train = traindata.iloc[:,1:]\ny_train = traindata.iloc[:,0]\nx_test = testdata\ny_test = ss.iloc[:,1]","c6bc790c":"print(x_train.shape,y_train.shape,x_test.shape,y_test.shape)","1f7070e0":"from sklearn.ensemble import RandomForestClassifier\n\nclf = RandomForestClassifier()\nclf.fit(x_train,y_train)","df0de79a":"clf.score(x_train,y_train)","0b67b6d6":"clf.score(x_test,y_test)","a4a29fb2":"from sklearn.ensemble import RandomForestRegressor\nmodel = RandomForestRegressor(n_estimators=200, max_depth=5, random_state=0).fit(x_train, y_train)\n\n#Returns the coefficient of determination R^2 of the prediction.\nmodel.score(x_train, y_train)","575ab87b":"model.score(x_test, y_test)","d79719c5":"According to the heatmap,pick the features which have much bigger relationship and drop the features which have a really low correlation.","11666382":"According to the score of the model,the features which are picked are nearly the main reasons of the saleprice of the house.","539eeace":"* **EDA**\n* First,I check the type and missing value of the dataset.","745f6c95":"I try to handle the column which contains little missing value.","f3392902":"Handle the missing value and change the type of the data.","23317e5f":"**Data Ingestion**","49beb794":"**Some Questions**\n* I don't know why model.score(x_test,y_test) is a minus though the score of (x_train,y_train) is so high.\n* Why I can't cant the score(x_test,y_test) when I use RandomForestClassifier.","e64750c1":"* **Modeling and Training**","5478560f":"* Cause \"MasVnrArea\" and some features about Garage have bigger relationship than many other features, I wonder if the other features which are related to the MasVnr and Garage also have high correlation to the Saleprice. \n* \"OverallQual\" has really big relationship with Salesprice, so I wonder if \"quality\" is a important feature such as \"ExterQual\"\n* In my opinion, a good feature should contain various value, and no value has a absolutly high proportion than other value.If a feature has contains a value which have a proportion of 90 percent, I will drop it.","8ec057e3":"I add some possibly suitable feature in the new dataframe.","88ac6abc":"Handle the testdata.","f3ac0b51":"Now I wanna see the breif correlation between features and SalePrice","7bb6871f":"I want to know what are the main reasons of the variety of house price.","c9fd05a3":"According to the heatmap,\"ExterQual\" is the only godd feature among the new features I just added.","9005e77a":"I decide to drop the columns which contain too many missing value."}}