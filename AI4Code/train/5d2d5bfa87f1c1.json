{"cell_type":{"21f263f8":"code","813bdb7a":"code","7bd99ed1":"code","a0b11e9b":"code","18d4abe2":"code","35f966d4":"code","e83461d4":"code","6187f4b4":"code","65923af2":"code","91c09bf0":"code","cbbcfddc":"code","c33fa903":"code","1f7aaf74":"code","716b74cd":"code","08c16c2b":"code","c43ba7ef":"code","4cd62642":"code","0a56cde6":"code","3cdb4b20":"code","d0b520ed":"code","3a7ef12b":"code","f1ca599f":"code","5dc4558b":"code","0ff6da11":"code","242e883c":"code","7ee2dbd6":"code","c6f428a1":"code","ab397e56":"markdown","237b743a":"markdown","11cb6564":"markdown","824aca2d":"markdown","6ea6a5f3":"markdown","f9b0284e":"markdown","1da8fba6":"markdown","d2415283":"markdown","501cc993":"markdown","35cf2ef2":"markdown","eb6706bc":"markdown","4971083e":"markdown","4fd53782":"markdown","5715a026":"markdown","a3d84f7c":"markdown","159b9d69":"markdown","a6b89fd4":"markdown","bb0cab6f":"markdown","f73ab5bf":"markdown","24543957":"markdown","e73e3754":"markdown","2807058a":"markdown","6f08e7fb":"markdown"},"source":{"21f263f8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport matplotlib\n%matplotlib inline\n\nimport warnings\nwarnings.simplefilter(action=\"ignore\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","813bdb7a":"df = pd.read_csv('\/kaggle\/input\/tsf-datasets\/SampleSuperstore.csv')\nprint('Data loaded successfully.')","7bd99ed1":"df.head()","a0b11e9b":"print('Shape of our dataframe is :' +str(df.shape))","18d4abe2":"df.info()","35f966d4":"df.isna().sum()","e83461d4":"df.describe()","6187f4b4":"df.describe(include='object')","65923af2":"df.duplicated().sum()","91c09bf0":"df.drop_duplicates(inplace= True)","cbbcfddc":"df.shape","c33fa903":"dict = {}\nfor x in list(df.columns):\n    dict[x] = df[x].value_counts().shape[0]\n\npd.DataFrame(dict, index=[\"Unique Counts\"]).transpose()","1f7aaf74":"sns.heatmap(df.corr(), annot = True, cmap = 'Blues', lw = 8, linecolor = 'white');","716b74cd":"fig, axes = plt.subplots(3,2, figsize = (12,18))\nsns.set_theme(style=\"darkgrid\")\naxes[0,0].set_title(\"Ship mode\")\naxes[0,1].set_title(\"segment\")\naxes[1,0].set_title(\"Region\")\naxes[1,1].set_title(\"Category\")\naxes[2,0].set_title(\"Sub-category\")\naxes[2,1].set_title(\"Quantity\")\n\nsns.countplot(x=df['Ship Mode'],\n              palette = 'copper',\n              orient='h',\n              ax=axes[0,0])\n\nsns.countplot(x=df['Segment'],\n              palette = 'copper_r',\n              orient='h',\n              ax=axes[0,1])\n\nsns.countplot(x=df['Region'],\n              palette = 'winter',\n              orient='h',\n              ax=axes[1,0])\n\nsns.countplot(x=df['Category'],\n              palette = 'winter_r',\n              orient='h',\n              ax=axes[1,1])\n\nsns.countplot(x=df['Sub-Category'],\n              palette = 'cividis',\n              orient='h',\n              ax=axes[2,0])\n\nsns.countplot(x=df['Quantity'],\n              palette = 'cividis_r',\n              orient='h',\n              ax=axes[2,1])\n\naxes[2,0].set_xticklabels(list(df['Sub-Category'].unique()), rotation=90)\n\nplt.tight_layout(pad=2);","08c16c2b":"ship_df = pd.DataFrame(df.groupby(['Ship Mode'])[['Profit','Sales', 'Quantity']].sum())\nship_df","c43ba7ef":"fig, axes = plt.subplots(3,1, figsize=(8,14))\nsns.set_theme(style=\"darkgrid\")\naxes[0].set_title(\"Ship mode to Profit\")\naxes[1].set_title(\"Ship mode to Sales\")\naxes[2].set_title(\"Ship mode to Quantity\")\n\nsns.barplot(x=ship_df.index,\n           y=ship_df['Profit'],\n           data= ship_df,\n            palette = 'Spectral_r',\n           ax = axes[0]);\n\nsns.barplot(x=ship_df.index,\n           y=ship_df['Sales'],\n           data= ship_df,\n            palette = 'Spectral_r',\n           ax = axes[1]);\n\nsns.barplot(x=ship_df.index,\n           y=ship_df['Quantity'],\n           data= ship_df,\n            palette = 'Spectral_r',\n           ax = axes[2])\n\nplt.tight_layout(pad=2);","4cd62642":"segment_df = pd.DataFrame(df.groupby(['Segment'])[['Profit', 'Sales', 'Quantity']].sum())\nsegment_df","0a56cde6":"fig, axes = plt.subplots(1,3, figsize=(12,6))\n\nsns.set_theme(style=\"darkgrid\")\naxes[0].set_title(\"Segment to Profit\")\naxes[1].set_title(\"Segment to Sales\")\naxes[2].set_title(\"Segment to Quantity\")\n\nsns.barplot(x=segment_df.index,\n           y=segment_df['Profit'],\n           data= segment_df,\n            palette = 'Reds_r',\n           ax= axes[0])\n\nsns.barplot(x=segment_df.index,\n           y=segment_df['Sales'],\n           data= segment_df,\n            palette = 'Reds_r',\n           ax= axes[1])\n\nsns.barplot(x=segment_df.index,\n           y=segment_df['Quantity'],\n           data= segment_df,\n            palette = 'Reds_r',\n           ax= axes[2])\n\nplt.tight_layout(pad=2);","3cdb4b20":"region_df = pd.DataFrame(df.groupby(['Region'])[['Profit', 'Sales', 'Quantity']].sum())\nregion_df","d0b520ed":"fig, axes = plt.subplots(1,3, figsize=(14,5))\n\nsns.set_theme(style=\"darkgrid\")\naxes[0].set_title(\"Region vs Profit\")\naxes[1].set_title(\"Region vs Sales\")\naxes[2].set_title(\"Region vs Quantity\")\n\nsns.barplot(x=region_df.index,\n           y='Profit',\n           data=region_df,\n           palette='Paired',\n           ax=axes[0])\n\nsns.barplot(x=region_df.index,\n           y='Sales',\n           data=region_df,\n           palette='Paired',\n           ax=axes[1])\n\nsns.barplot(x=region_df.index,\n           y='Quantity',\n           data=region_df,\n           palette='Paired',\n           ax=axes[2])\n\nplt.tight_layout(pad=1);","3a7ef12b":"category_df = pd.DataFrame(df.groupby(['Category'])[['Profit', 'Sales', 'Quantity']].sum())\ncategory_df","f1ca599f":"fig, axes = plt.subplots(1,3, figsize=(14,5))\n\nsns.set_theme(style=\"darkgrid\")\naxes[0].set_title(\"Category vs Profit\")\naxes[1].set_title(\"Category vs Sales\")\naxes[2].set_title(\"Category vs Quantity\")\n\nsns.barplot(x=category_df.index,\n           y='Profit',\n           data=category_df,\n           palette='Pastel2',\n           ax=axes[0])\n\nsns.barplot(x=category_df.index,\n           y='Sales',\n           data=category_df,\n           palette='Pastel2',\n           ax=axes[1])\n\nsns.barplot(x=category_df.index,\n           y='Quantity',\n           data=category_df,\n           palette='Pastel2',\n           ax=axes[2])\n\nplt.tight_layout(pad=1);","5dc4558b":"sub_category_df = pd.DataFrame(df.groupby(['Sub-Category'])[['Profit', 'Sales', 'Quantity']].sum())\nsub_category_df","0ff6da11":"fig, axes = plt.subplots(3,1, figsize=(10,18))\n\nsns.set_theme(style=\"darkgrid\")\naxes[0].set_title(\"Sub-Category vs Profit\")\naxes[1].set_title(\"Sub-Category vs Sales\")\naxes[2].set_title(\"Sub-Category vs Quantity\")\n\nsns.barplot(y=sub_category_df.index,\n           x='Profit',\n           data=sub_category_df,\n           palette='icefire',\n           ax=axes[0])\n\nsns.barplot(y=sub_category_df.index,\n           x='Sales',\n           data=sub_category_df,\n           palette='icefire',\n           ax=axes[1])\n\nsns.barplot(y=sub_category_df.index,\n           x='Quantity',\n           data=sub_category_df,\n           palette='icefire',\n           ax=axes[2])\n\nplt.tight_layout(pad=3);","242e883c":"cities_df = pd.DataFrame(df.groupby(['City'])[['Profit', 'Sales', 'Quantity']].sum().sort_values('Profit',ascending = False))\ntop10 = cities_df.head(10)\nlast10 = cities_df.tail(10)","7ee2dbd6":"high_low = top10.append(last10)","c6f428a1":"fig, axes = plt.subplots(3,1, figsize=(12, 19))\n\naxes[0].set_title(\"Profit of top 10 and bottom 10\")\naxes[1].set_title(\"Sales of top 10 and bottom 10\")\naxes[2].set_title(\"Quantity of top 10 and bottom 10\")\n\nsns.barplot(y=high_low.index,\n           x='Profit',\n           data=high_low,\n           palette='muted',\n           ax=axes[0])\n\nsns.barplot(y=high_low.index,\n           x='Sales',\n           data=high_low,\n           palette='muted',\n           ax=axes[1])\n\nsns.barplot(y=high_low.index,\n           x='Quantity',\n           data=high_low,\n           palette='muted',\n           ax=axes[2])\n\nplt.tight_layout(pad=4);","ab397e56":"## 4. Category","237b743a":"----\nDataframe has no NaN values. Lets look at its statistical view. using `describe()`\n\n----","11cb6564":"----\n#### **Analysis:**\nWe can notice `sales` is fairly related to `profit` and `discount` is negatively related to `profit`.\n\n**Intrepreted as**  higher sales and lesser discounts leads to `more profit`.\n\nIt is also noticable that `postal code` has nothing to do with overall `profit`\n\n---","824aca2d":"## **Bivariate Analysis**\n\nWe will be comparing other features to `profit`, `sales` and `quantities` to get a visual idea about what affects the profit most.","6ea6a5f3":"----\n### IMPORTING LIBRARIES\u00b6\nList of all the python libraries that are required:\n\n- Library `pandas` will be required to work with data in tabular representation.\n- Library `numpy` will be required to round the data in the correlation matrix.\n- Library `warning` will be required to ignore all warnings.\n- Library `matplotlib`, `seaborn`, `plotly` required for data visualization.\n\n---","f9b0284e":"----\nNow the dataset is loaded, we will now understand the dataset.\n\n----","1da8fba6":"----\nShape has been reduced to `(9977,13)`.\n\nNow we will check number of unique values for every column using `value_counts()`\n\n---","d2415283":"## 1. Ship-Mode","501cc993":"## 3. Region","35cf2ef2":"---\n#### **Analysis:**\n\n* `Standard class` ship-mode is more preferred.\n* `Consumer` is the majority segment.\n* Superstores are more in `west` and least in `south`\n* In category-wise, `office supplies` holds the majority.\n* Top-selling sub-categories are `binders`, `paper`.\n* Prople mostly go for 2 or 3 `quanitites`.\n\n---","eb6706bc":"---\n**Analysis:**\n\n* `New York` have the most sales and profit.\n* With a fairly high quantity and sales at `Philadelphia`, `Houston` and `Chicago`, profit at these places is in negative.\n* There is a huge disparity between the cities with highest sales and lowest sales. Marketing strategy has to target the `top 10 cities`.\n\n---","4971083e":"## 2. Segment","4fd53782":"----\nThe dataframe have 17 dupplicates values. Lets remove them first using `drop_duplicates()`\n\n----","5715a026":"## 5. Sub-Category","a3d84f7c":"---\n**Analysis:**\n\n`Standard class` ship-mode is more preferred. Maybe it is cheap and efficient.\n\n---","159b9d69":"---\n**Analysis:**\n\n`Consumer` segment is most profitable, followed by Corporate Segment and home offices. Hence, marketing strategy has to target or place more focus on retaining `consumers`.\n\n---","a6b89fd4":"---\n**Analysis:**\n\nAmong every region, west and east region recorded more profit. So, strategy should focus more on `east` and `west` region.\n\n---","bb0cab6f":"## **Univariate Analysis**\n\nSince univariate analysis deal with one variable at a time, we will check frequency of most of the columns, using `subplots`.","f73ab5bf":"## 6. Cities","24543957":"---\n**Analysis:**\n\nWith analyzing these graphs, we may say that `copiers`, `accesories` and `phones` have more sales and profit.\n\n---","e73e3754":"# Explorartory Data Analysis Project - Retail\n\n## Introduction\n\nA supermarket is a self-service shop offering a wide variety of food, beverages and household products, organized into sections. This kind of store is larger and has a wider selection than earlier grocery stores, but is smaller and more limited in the range of merchandise than a hypermarket or big-box market. In everyday usage, however,* \"grocery store\"* is synonymous with supermarket, and is not used to refer to other types of stores that sell groceries.\n\n<a href=\"https:\/\/imgbb.com\/\"><img src=\"https:\/\/i.ibb.co\/kMwMyk6\/super.jpg\" alt=\"super\" border=\"0\"><\/a><br \/><a target='_blank' href='https:\/\/the-crosswordsolver.com\/genuine-in-germany-4-letters'><\/a><br \/>","2807058a":"---\n**Analysis:**\n\nThough quantity is less, `technology` seems to have highest sales as well as profit. For more profit, focus should be more on technology.\n\n---","6f08e7fb":"# Final Conclusions:\n\nConsider following recommendations for higher profit:-\n* Focus on category Technology like Phones as they are highest selling and most profitable. Bundle them with the less profitable products to offset the losses like tables and suppplies.\n* Selling bookcases, tables and supplies result in losses, so SuperStores has to consider to bundle them together with High Selling or Profitable sub-category such as Machines, Copiers, Phones etc.\n* For Home Offices customers, these people might be busy with work and less likely to spend time selecting individual products, so creating a Home Office Catalog with products used for offices such as paper, chairs, phone, copiers, storage,machines would result in better profits.\n* Target consumer customers from East and West region of top 10 cities with most profits, with special promotions and advertisments for copiers, phones, accessories etc.\n\n___\n\n## Thank you :)\n\nDo upvote, if you like"}}