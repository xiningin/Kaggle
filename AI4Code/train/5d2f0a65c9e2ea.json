{"cell_type":{"1c881f17":"code","d085507c":"code","be8812ee":"code","6b2f53bf":"code","4c5d8f12":"code","525dc055":"code","68ac9fdc":"code","d0c76c43":"code","ba5fe5ee":"code","ce2f8f18":"code","7c372c24":"code","d68a35cb":"code","e5a759ff":"code","1d71c1b2":"code","cbc72f4e":"code","3fe40230":"code","c820df88":"code","b1268662":"code","ed8de17a":"code","bcd0cc86":"code","6124d243":"code","591cb8cc":"code","7ced4069":"code","d262f7a0":"code","40d8d48d":"code","ee8bcbb0":"code","26378d70":"code","ebc4940c":"code","1057c28b":"code","fa845653":"code","1ab40037":"markdown","87ee5b53":"markdown","e6eb6f3e":"markdown","d31ab3f3":"markdown","82760ee5":"markdown","ceb80396":"markdown","d71d88bb":"markdown","fbaea4d9":"markdown","5e4eddab":"markdown","9c0e24a8":"markdown","b910ab7b":"markdown"},"source":{"1c881f17":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom plotly.offline import iplot\nimport plotly.graph_objects as go\nsns.set(rc={'figure.figsize':(10,6)})\nsns.set(font_scale=1.3)\n\nimport string \nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.ensemble import GradientBoostingClassifier, AdaBoostClassifier, ExtraTreesClassifier\nfrom sklearn.ensemble import BaggingClassifier, RandomForestClassifier, VotingClassifier\nfrom sklearn.tree import DecisionTreeClassifier, ExtraTreeClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.model_selection import ShuffleSplit, GridSearchCV, cross_validate\nfrom sklearn.metrics import accuracy_score, confusion_matrix, plot_confusion_matrix\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","d085507c":"train = pd.read_csv('..\/input\/titanic\/train.csv')","be8812ee":"train.head()","6b2f53bf":"train.info()","4c5d8f12":"train.describe()","525dc055":"(train.isnull().sum()\/len(train))*100","68ac9fdc":"train.drop(columns=['Cabin'], inplace=True)","d0c76c43":"train['Age'].fillna(train['Age'].median(), inplace=True)\ntrain['Embarked'].fillna(method='ffill', inplace=True)","ba5fe5ee":"(train.isnull().sum()\/len(train))*100","ce2f8f18":"values=train[\"Survived\"].value_counts().values\nfig = go.Figure(data=[go.Pie(labels=['Not Survived','Survived'],values=values,textinfo='label+percent')])\nfig.update_layout(title={'text': \"Titanic Survived\",'y':0.9,'x':0.45,'xanchor': 'center','yanchor': 'top'},\n                  font=dict(size=18, color='black', family=\"Courier New, monospace\"))","7c372c24":"values=train[\"Pclass\"].value_counts().values\nfig = go.Figure(data=[go.Pie(labels=['3\u00ba Class','2\u00b0 Class','1\u00b0 Class'],values=values,textinfo='label+percent')])\nfig.update_layout(title={'text': \"Class of Ship\",'y':0.9,'x':0.45,'xanchor': 'center','yanchor': 'top'},\n                  font=dict(size=18, color='black', family=\"Courier New, monospace\"))\nfig.show()","d68a35cb":"values=train[\"Sex\"].value_counts().values\nfig = go.Figure(data=[go.Pie(labels=['Male','Female'],values=values,textinfo='label+percent')])\nfig.update_layout(title={'text': \"Sex\",'y':0.9,'x':0.47,'xanchor': 'center','yanchor': 'top'},\n                  font=dict(size=18, color='black', family=\"Courier New, monospace\"))\nfig.show()","e5a759ff":"survived = train[train['Survived']==1]\nvalues=survived[\"Sex\"].value_counts().values\nfig = go.Figure(data=[go.Pie(labels=['Male','Female'],values=values,textinfo='label+percent')])\nfig.update_layout(title={'text': \"Survivor by Sex\",'y':0.9,'x':0.47,'xanchor': 'center','yanchor': 'top'},\n                  font=dict(size=18, color='black', family=\"Courier New, monospace\"))\nfig.show()","1d71c1b2":"g = sns.FacetGrid(train, col='Survived', height=6)\ng.map(plt.hist, 'Age', bins=20);","cbc72f4e":"g = sns.FacetGrid(train, col='Survived', row='Pclass', size=2.8, aspect=1.6)\ng.map(plt.hist, 'Age', bins=20);","3fe40230":"g = sns.FacetGrid(train, row='Embarked', size=2.4, aspect=2.6)\ng.map(sns.pointplot, 'Pclass', 'Survived', 'Sex', palette='deep')\ng.add_legend();","c820df88":"g = sns.FacetGrid(train, row='Embarked', col='Survived', size=2.2, aspect=2.4)\ng.map(sns.barplot, 'Sex', 'Fare')\ng.add_legend();","b1268662":"corr = train.corr()\nplt.figure(figsize=(16,8))\nsns.heatmap(data=corr, annot=True);","ed8de17a":"def encoder(data):\n    le = LabelEncoder()\n    for col in data.select_dtypes('object'):\n        data[col] = le.fit_transform(data[col])\n    return(data)","bcd0cc86":"train['Title'] = train['Name'].str.extract(' ([A-Za-z]+)\\.', expand=False)\ntrain['Title'] = train['Title'].replace(['Lady', 'Countess','Capt', 'Col', \n                                             'Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer', 'Dona'], 'Rare')\ntrain['Title'] = train['Title'].replace('Mlle', 'Miss')\ntrain['Title'] = train['Title'].replace('Ms', 'Miss')\ntrain['Title'] = train['Title'].replace('Mme', 'Mrs')","6124d243":"train.loc[ train['Age'] <= 16, 'Age'] = 0\ntrain.loc[(train['Age'] > 16) & (train['Age'] <= 32), 'Age'] = 1\ntrain.loc[(train['Age'] > 32) & (train['Age'] <= 48), 'Age'] = 2\ntrain.loc[(train['Age'] > 48) & (train['Age'] <= 64), 'Age'] = 3\ntrain.loc[ train['Age'] > 64, 'Age']","591cb8cc":"train.head()","7ced4069":"train.drop(columns=['Name','PassengerId','Ticket'], inplace=True)","d262f7a0":"train = encoder(train)\ntrain.head()","40d8d48d":"!pip install autokeras","ee8bcbb0":"import autokeras as ak","26378d70":"x = train.drop(['Survived'], axis=1)\ny = train.iloc[:,0]\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, stratify=y)","ebc4940c":"model = ak.StructuredDataClassifier(overwrite=True, max_trials=100)\nmodel.fit(x_train,y_train,epochs=30)\npred = model.predict(x_test)","1057c28b":"import h2o\nfrom h2o.automl import H2OAutoML","fa845653":"import h2o\nfrom h2o.estimators.gbm import H2OGradientBoostingEstimator\n\nh2o.init()\nh2o.cluster().show_status()\n\ntreino_h2o = h2o.H2OFrame(train)\n\n# convert response column to a factor\ntreino_h2o[\"Survived\"] = treino_h2o[\"Survived\"].asfactor()\n\n# set the predictor names and the response column name\npredictors = ['Pclass','Sex','Age','SibSp','Parch']\nresponse = \"Survived\"\n\n# split into train and validation sets\ntrain, valid = treino_h2o.split_frame(ratios = [.8])\n\n# try using the `y` parameter:\n# first initialize your estimator\ncars_gbm = H2OAutoML(max_models=10, max_runtime_secs=1800)\n\n# then train your model, where you specify your 'x' predictors, your 'y' the response column\n# training_frame and validation_frame\ncars_gbm.train(x = predictors, y = response, training_frame = train, validation_frame = valid)\n\n# print the auc for the validation data\nlb = cars_gbm.leaderboard\nlb.head(rows=lb.nrows) ","1ab40037":"<div style=\"color:black; background-color:#f5f7b0; border-radius:10px; padding:20px;\">\n<b>Observation<\/b><br\/>\nThe Age columns has 19.86% of missing values theses values have been replaced by the average.<br\/>\nThe Cabin columns has 77.10% of missing values. There are many missing values, so I deleted it.\n<\/div>","87ee5b53":"# <p style=\"background-color:#fa5252; font-family:newtimeroman; font-size:150%; text-align:center; border-radius: 15px 15px;\">AutoKeras<\/p>","e6eb6f3e":"# <p style=\"background-color:#80ccff; font-family:newtimeroman; font-size:150%; text-align:center; border-radius:  80px 5px; padding-top:8px; padding-bottom:8px;\">Preprocessing<\/p>","d31ab3f3":"# <p style=\"background-color:#80ccff; font-family:newtimeroman; font-size:150%; text-align:center; border-radius:  80px 5px; padding-top:8px; padding-bottom:8px;\">Plots<\/p>","82760ee5":"<div style=\"color:black; background-color:#f5f7b0; border-radius:10px; padding:20px;\">\n<b>Observation<\/b><br\/>\n- A class was created with the passengers title<br\/>\n- A class was created with age<br\/>\n- Some columns have been deleted<br\/>\n- The object type of the columns has been transformed<br\/>\n<\/div>","ceb80396":"# <p style=\"background-color:#80ccff; font-family:newtimeroman; font-size:150%; text-align:center; border-radius:  80px 5px; padding-top:8px; padding-bottom:8px;\">Input<\/p>","d71d88bb":"# <p style=\"background-color:#80ccff; font-family:newtimeroman; font-size:150%; text-align:center; border-radius:  80px 5px; padding-top:8px; padding-bottom:8px;\">Feature Engineering<\/p>","fbaea4d9":"# Missing Value","5e4eddab":"# <p style=\"background-color:#fa5252; font-family:newtimeroman; font-size:150%; text-align:center; border-radius: 15px 15px;\">AutmoML<\/p>","9c0e24a8":"<div style=\"color:black; background-color:#f5f7b0; border-radius:10px; padding:20px;\">\n<b>Observation<\/b><br\/>\n- 61.6% dit not survive<br\/>\n- 55.1% was 3rd class<br\/>\n- 64.8% were male<br\/>\n- The median age of the survivors was 29 years<br\/>\n- The majority of the survivors were in the 3rd class (the 3rd class was the majority on the ship<br\/>\n<\/div>","b910ab7b":"# <p style=\"background-color:#80ccff; font-family:newtimeroman; font-size:150%; text-align:center; border-radius:  80px 5px; padding-top:8px; padding-bottom:8px;\">Import<\/p>"}}