{"cell_type":{"da710b26":"code","1975b805":"code","43f20e7e":"code","687fa8cf":"code","9c6c0c44":"code","66f0e231":"code","93611338":"code","08179fb2":"code","b8e8f105":"code","1be28acd":"code","42dc0b45":"code","5d240406":"code","6d0209c6":"code","2d145eda":"code","e37398e3":"code","95296f0e":"code","68f6d760":"code","088a9ff4":"code","9c79841e":"code","5be4c69c":"code","afd7913d":"code","5260fa53":"code","9b5dc5df":"code","daf487c2":"markdown","16a9fbb6":"markdown","338f101c":"markdown","31b8ea41":"markdown","a5839e6f":"markdown","2d345d36":"markdown","cd81c0df":"markdown"},"source":{"da710b26":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom collections import Counter\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","1975b805":"data = pd.read_csv('\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv')","43f20e7e":"data.head()","687fa8cf":"data.info()","9c6c0c44":"data.describe()","66f0e231":"data.head()","93611338":"data.drop(columns=\"writing score\")","08179fb2":"data.info()","b8e8f105":"def bar_plot(variable):\n    \"\"\"\n    input: variable = ex:'gender'\n    output: bar plot & value count\n    \"\"\"\n    # get feature\n    var = data[variable]\n    # count number of categorical variable(value)\n    varValue = var.value_counts()\n    \n    #visualize\n    plt.figure(figsize=(9,3))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Fre\")\n    plt.title(\"Variable\")\n    plt.show()\n    \n    print(\"{}: \\n {}\".format(variable,varValue))","1be28acd":"category1 = [\"gender\",\"race\/ethnicity\",\"parental level of education\",\"lunch\",\"test preparation course\"]\nfor i in category1:\n    bar_plot(i)","42dc0b45":"def plot_hist(variable):\n    plt.figure(figsize=(9,3))\n    plt.hist(data[variable],bins=50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Fre\")\n    plt.title(\"{} distribution with hist\".format(variable))","5d240406":"numericVar = [\"math score\",\"writing score\",\"reading score\"]\nfor i in numericVar:\n    plot_hist(i)","6d0209c6":"# race\/ethnicity vs math score\n\ndata[[\"race\/ethnicity\",\"math score\"]].groupby([\"race\/ethnicity\"],as_index=False).mean().sort_values(by=\"math score\",ascending=False)","2d145eda":"# gender vs math score\n\ndata[[\"gender\",\"math score\"]].groupby([\"gender\"],as_index=False).mean().sort_values(by=\"math score\",ascending=False)","e37398e3":"# parental level of education vs math score\n\ndata[[\"parental level of education\",\"math score\"]].groupby([\"parental level of education\"],as_index=False).mean().sort_values(by=\"math score\",ascending=False)","95296f0e":"# test preparation course vs math score\n\ndata[[\"test preparation course\",\"math score\"]].groupby([\"test preparation course\"],as_index=False).mean().sort_values(by=\"math score\",ascending=False)","68f6d760":"data['test preparation course'].replace([\"completed\"],1,inplace=True)\ndata['test preparation course'].replace([\"none\"],0,inplace=True)\n\ndata = data.rename(columns={'math score':'math_score'})\ndata['math_score'] = data['math_score'].astype(float)\n\narea_list = list(data['race\/ethnicity'].unique())\n\nmath_score_new = []\n\nfor i in area_list:\n    x = data[data['race\/ethnicity'] == i]\n    math_score_rate = sum(x.math_score)\/len(x)\n    math_score_new.append(math_score_rate)\n\ndata_new = pd.DataFrame({'area_list': area_list,'math_score_ratio': math_score_new})\nnew_index = (data_new['math_score_ratio'].sort_values(ascending=True)).index.values\nsorted_data2 = data_new.reindex(new_index)\n\nplt.figure(figsize = (15,10))\nsns.barplot(x=sorted_data2['area_list'], y=sorted_data2['math_score_ratio'])\nplt.xticks(rotation=90)\nplt.xlabel('Groups', fontsize=15)\nplt.ylabel('Math Scores', fontsize=15)\nplt.title('Groups and Math Scores Exams',fontsize=16,style='italic')\nplt.show()","088a9ff4":"data.head()","9c79841e":"data = data.rename(columns={'reading score':'reading_score'})\ndata['reading_score'] = data['reading_score'].astype(float)\n\narea_list = list(data['race\/ethnicity'].unique())\n\nreading_score_new = []\n\nfor i in area_list:\n    x = data[data['race\/ethnicity'] == i]\n    reading_score_rate = sum(x.reading_score)\/len(x)\n    reading_score_new.append(reading_score_rate)\n\ndata1_new = pd.DataFrame({'area_list': area_list,'reading_score_ratio': reading_score_new})\nnew1_index = (data1_new['reading_score_ratio'].sort_values(ascending=True)).index.values\nsorted_data1 = data1_new.reindex(new1_index)\n\nplt.figure(figsize = (15,10))\nsns.barplot(x=sorted_data1['area_list'], y=sorted_data1['reading_score_ratio'])\nplt.xticks(rotation=90)\nplt.xlabel('Groups', fontsize=15)\nplt.ylabel('Reading Scores', fontsize=15)\nplt.title('Groups and Reading Scores Exams',fontsize=16,style='italic')\nplt.show()","5be4c69c":"sorted_data1['reading_score_ratio'] = sorted_data1['reading_score_ratio']\/max(sorted_data1['reading_score_ratio'])\nsorted_data2['math_score_ratio'] = sorted_data2['math_score_ratio']\/max(sorted_data2['math_score_ratio'])\n\ndata0 = pd.concat([sorted_data1,sorted_data2['math_score_ratio']],axis=1)\ndata0.sort_values('math_score_ratio',inplace=True)\n\nf, ax = plt.subplots(figsize = (20,10))\nsns.pointplot(x='area_list',y='reading_score_ratio',data=data0,color='lime',alpha=0.7)\nsns.pointplot(x='area_list',y='math_score_ratio',data=data0,color='red',alpha=0.7)\nplt.grid()\nplt.text(3.5,0.90,\"reading score ratio\",fontsize=15,color='lime',style='italic')\nplt.text(3.5,0.89,\"math score ratio\",fontsize=15,color='red',style='italic')\nplt.xlabel(\"Groups\")\nplt.ylabel(\"Values\")\nplt.title('Reading Score Ratio vs Math Score Ratio',fontsize=20,color='blue')","afd7913d":"data0.head()","5260fa53":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# joint kernel density\n# pearsonr= if it is 1, there is positive correlation and if it is, -1 there is negative correlation.\n# If it is zero, there is no correlation between variables\n# Show the joint distribution using kernel density estimation \n\ng = sns.jointplot(data0.reading_score_ratio,data0.math_score_ratio,kind='kde',size=7)\nplt.savefig(\"graph.png\")\nplt.show()","9b5dc5df":"g = sns.jointplot(data0.reading_score_ratio,data0.math_score_ratio,data=data0,size=7,ratio=5,color='r')","daf487c2":"## Univariate Variable Analysis\n\nCategorical Variable: gender, race\/ethnicity, parental level of education, lunch, test preparation course\n\nNumerical Variable: math score, reading score, writing score","16a9fbb6":"## Basics Data Analysis\n\n* race\/ethnicity - math score\n* gender - math score\n* parental level of education - math score\n* test preparation course - math score","338f101c":"## Numerical Variable","31b8ea41":"object(5): gender,race\/ethnicity,parental level of education, lunch, test preparation course\n\nint64(3): math score, reading score, writing score","a5839e6f":"## Load and Check Data","2d345d36":"## Variable Descriptions\n\n1. gender: students' genders\n1. race\/ethnicity: Groups of students\n1. parental level of education: parental level of education\n1. lunch:\n1. test preparation course: test preparation course\n1. math score: math exams points\n1. reading score: reading score of students\n1. writing score: writing score of students","cd81c0df":"# Introduction\n**Students Performance in Exams**; A data analysis is carried out according to the scores and statistics made by the students in the class.\n\n<font color='blue'>\nContent:\n\n1. [Load and Check Data](#1)\n1. [Variable Descriptions](#2)\n    * [Univariate Variable Analysis](#3)\n        * [Categorical Variable Analysis](#4)\n        * [Numerical Variable Analysis](#5)\n1. [Basic Data Analysis](#6)\n1. [Outlier Detection](#7)"}}