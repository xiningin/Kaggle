{"cell_type":{"f03f240e":"code","accc191a":"code","7e75fd55":"code","23b48b0a":"code","7a731ea5":"code","af389e6e":"code","3d275a16":"code","45078ee9":"code","20234a07":"code","09311065":"code","24badf09":"code","cc2f033a":"code","d9b9de97":"code","2a7e5984":"code","d766a5a4":"code","8e75232f":"code","44120096":"code","307409e3":"code","151f5393":"code","cb4337a0":"code","fcd0a8bc":"code","fac7532b":"code","3457dccc":"code","9d29c3d7":"markdown","05819c52":"markdown","7404e49f":"markdown","83a68e8c":"markdown","6e60e434":"markdown","20250d05":"markdown","ded92475":"markdown","3b965107":"markdown","2a0d594a":"markdown","1315d336":"markdown"},"source":{"f03f240e":"#Import Library\nimport numpy as np #linear algebra\nimport pandas as pd #data processing\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler","accc191a":"#Path file\npath_train = '..\/input\/seleksidukungaib\/train.csv'\npath_test = '..\/input\/seleksidukungaib\/test.csv'\n\n#read file csv\ntrain_data = pd.read_csv(path_train)\ntest_data = pd.read_csv(path_test)","7e75fd55":"#check data\ntrain_data.head()","23b48b0a":"#Summary of the train_data\ntrain_data.describe()","7a731ea5":"train_data.shape","af389e6e":"train_data['isChurned'].value_counts()","3d275a16":"#Check for NaN\ntrain_data.isna().sum()","45078ee9":"#drop Na data from train_data\ntrain_data = train_data.dropna(axis=0)","20234a07":"#cek Na data\ntrain_data.isna().sum()","09311065":"sns.countplot(x='premium', hue='isChurned',data = train_data)","24badf09":"sns.countplot(x='isVerifiedEmail', hue='isChurned',data = train_data)","cc2f033a":"sns.countplot(x='isVerifiedPhone', hue='isChurned',data = train_data)","d9b9de97":"sns.countplot(x='blocked', hue='isChurned',data = train_data)","2a7e5984":"numerical_features = ['num_topup_trx', 'num_recharge_trx']\nfig, ax = plt.subplots(1, 2, figsize=(28, 8))\ntrain_data[train_data.isChurned == 0][numerical_features].hist(bins=20, color=\"blue\", alpha=0.5, ax=ax)\ntrain_data[train_data.isChurned == 1][numerical_features].hist(bins=20, color=\"orange\", alpha=0.5, ax=ax)","d766a5a4":"data = pd.concat([train_data,test_data],ignore_index=True)","8e75232f":"#Label encod true\/false and date to int\ndate = ['date_collected','date']\nbin = ['premium','super','pinEnabled']\ncol = date + bin\nle = LabelEncoder()\nfor i in col: \n    data[i] = le.fit_transform(list(data[i].values))","44120096":"data.head()","307409e3":"train_data = data[~data.isChurned.isnull()]\ntest_data = data[data.isChurned.isnull()]","151f5393":"features = ['date_collected','num_topup_trx', 'num_recharge_trx','isActive','isVerifiedEmail','blocked','premium','super','userLevel','pinEnabled']\nX = train_data[features]\ny = train_data['isChurned']","cb4337a0":"#use logisticregression\nmodel = LogisticRegression()\nmodel.fit(X,y)","fcd0a8bc":"#Prediction\npred = model.predict(test_data[features])","fac7532b":"submission = pd.DataFrame({'idx':test_data['idx'],'isChurned':pred.astype(int)})\nsubmission.to_csv('submission.csv',index=False)","3457dccc":"#cek submission\nsubmission.head()","9d29c3d7":"# Analyze Data","05819c52":"# Clean Null\/Na","7404e49f":"# Split Target and features","83a68e8c":"# Load Data","6e60e434":"# Import Library","20250d05":"# View DataSet & Cek","ded92475":"# Modeling","3b965107":"# Data Process","2a0d594a":"# Split test & train","1315d336":"# Submission"}}