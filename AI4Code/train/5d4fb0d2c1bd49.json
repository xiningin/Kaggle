{"cell_type":{"5a19c32e":"code","b4f9185c":"code","a2be5de9":"code","59d91fed":"code","eb65294e":"code","e86cf469":"code","e25dd018":"code","ea605d10":"code","44bc226f":"code","e85731d4":"code","cc9406bc":"code","91ab6332":"code","aa278fd6":"code","a9cf2b16":"code","6070efb3":"code","cce762b6":"code","866640aa":"code","7b9da024":"markdown","bad585cb":"markdown","a4a5d74a":"markdown","3c14916f":"markdown","8c6d9f67":"markdown","2ea24c87":"markdown","b90d1a86":"markdown","f9ae57ce":"markdown","5dc92ad6":"markdown","184a5660":"markdown","303edcfa":"markdown","72d1dd9f":"markdown","e0d62755":"markdown","6a45b385":"markdown","cbf14ac0":"markdown","b05792cd":"markdown"},"source":{"5a19c32e":"import pandas as pd\nimport matplotlib.pyplot as plt","b4f9185c":"original_gas_prices_df = pd.read_csv('\/kaggle\/input\/gas-prices-in-brazil\/2004-2019.tsv', sep='\\t')\noriginal_gas_prices_df.drop(columns='Unnamed: 0', inplace=True)\noriginal_gas_prices_df.sample(n=4)","a2be5de9":"plt.rcParams['figure.figsize'] = (11,7)\nplt.style.use('seaborn')","59d91fed":"original_gas_prices_df['DATA FINAL'] = pd.to_datetime(original_gas_prices_df['DATA FINAL']) # Converte para per\u00edodo, desprezando dia do m\u00eas\n\n# Algumas colunas possuem '-' como valor, causando erro ao converter, por isso errors='coerse' seta como NaN\noriginal_gas_prices_df['PRE\u00c7O M\u00c9DIO DISTRIBUI\u00c7\u00c3O'] = pd.to_numeric(original_gas_prices_df['PRE\u00c7O M\u00c9DIO DISTRIBUI\u00c7\u00c3O'], errors='coerce')\noriginal_gas_prices_df['PRE\u00c7O M\u00c9DIO REVENDA'] = pd.to_numeric(original_gas_prices_df['PRE\u00c7O M\u00c9DIO REVENDA'], errors='coerce')\n\n# Seta Data final da pesquisa como ind\u00edce\noriginal_gas_prices_df.set_index(['DATA FINAL'], inplace=True)\noriginal_gas_prices_df.head()","eb65294e":"used_columns = [\n    'DATA',\n    'PRODUTO',\n    'ESTADO',\n    'REGI\u00c3O',\n    'PRE\u00c7O M\u00c9DIO DISTRIBUI\u00c7\u00c3O',\n    'PRE\u00c7O M\u00c9DIO REVENDA',\n]\n\nused_products = [\n    'ETANOL HIDRATADO',\n    'GASOLINA COMUM',\n    '\u00d3LEO DIESEL'\n]\n\nmonthly_df = original_gas_prices_df.groupby(['PRODUTO', 'ESTADO', 'REGI\u00c3O']).resample('M').mean().reset_index()\nmonthly_df['DATA'] = monthly_df['DATA FINAL'].dt.to_period('M')\n\ngas_prices_df = monthly_df[used_columns]\ngas_prices_df = gas_prices_df[gas_prices_df.PRODUTO.isin(used_products)]\ngas_prices_df = gas_prices_df.dropna(how='any')\n\ngas_prices_df['VARIA\u00c7\u00c3O DIST X REV'] = gas_prices_df['PRE\u00c7O M\u00c9DIO REVENDA'] - gas_prices_df['PRE\u00c7O M\u00c9DIO DISTRIBUI\u00c7\u00c3O']\ngas_prices_df['VARIA\u00c7\u00c3O PERCENTUAL DIST X REV'] = gas_prices_df['VARIA\u00c7\u00c3O DIST X REV'] \/  gas_prices_df['PRE\u00c7O M\u00c9DIO DISTRIBUI\u00c7\u00c3O'] * 100\n\ngas_prices_df.set_index(['DATA', 'PRODUTO', 'ESTADO', 'REGI\u00c3O'], inplace=True)\ngas_prices_df.sample(n=5)","e86cf469":"original_inflation_rate_df = pd.read_csv('\/kaggle\/input\/inflation-rate-in-brazil-1984-2019\/inflation-rate-brazil.csv')\noriginal_inflation_rate_df['date'] = pd.to_datetime(original_inflation_rate_df['date']).dt.to_period('M') \ninflation_rate_df = original_inflation_rate_df.set_index('date')['2004':'2019']\ninflation_rate_df.sample(n=5)","e25dd018":"# Mesclando infla\u00e7\u00e3o + pre\u00e7os\nmain_df = gas_prices_df.copy()\nmain_df.reset_index(inplace=True)\nmain_df.set_index('DATA', inplace=True)\nmain_df['INFLA\u00c7\u00c3O ANUAL'] = inflation_rate_df['annual_accumulation']  # INFLA\u00c7\u00c3O ANUAL ACUMULADA NOS \u00daLTIMOS 12 MESES\nmain_df['INFLA\u00c7\u00c3O ABSOLUTA'] = inflation_rate_df['absolute_index']  # INFLA\u00c7\u00c3O ANUAL ACUMULADA NOS \u00daLTIMOS 12 MESES\n\nmain_df = main_df.to_timestamp()\nmain_df = main_df['2006':]\n\nmain_df.sample(5)","ea605d10":"def plot_prices_correlation(produto):\n    grp = main_df[main_df.PRODUTO == produto].groupby(['DATA']).mean()\n    fig, ax = plt.subplots()\n\n    grp.plot(y='PRE\u00c7O M\u00c9DIO REVENDA', label='Revenda', ax=ax)\n    grp.plot(y='PRE\u00c7O M\u00c9DIO DISTRIBUI\u00c7\u00c3O', label='Distribui\u00e7\u00e3o', ax=ax)\n    fig.suptitle('Pre\u00e7os de Distribui\u00e7\u00e3o e Revenda - ' + produto)\n    ax.set_xlabel('Data')\n    ax.set_ylabel('Pre\u00e7o - R$\/l')\n    ax.grid(True)\n#     ax.annotate('Teste', xy= ('2018-05-21'), xycoords='data',\n#              xytext=(-30, 0))\n    \n    # plot varia\u00e7\u00e3o entre distribui\u00e7\u00e3o e revenda\n    ax_var = ax.twinx()\n\n    grp.plot(y='VARIA\u00c7\u00c3O PERCENTUAL DIST X REV', label='Varia\u00e7\u00e3o - Distribui\u00e7\u00e3o', ax=ax_var, c='#c44e52')\n    ax_var.set_ylabel('% - Varia\u00e7\u00e3o entre Distribui\u00e7\u00e3o e Revenda', color='#c44e52')\n    ax_var.get_legend().remove()\n    ax_var.grid(False)\n    plt.show()\n\nplot_prices_correlation('GASOLINA COMUM')\nplot_prices_correlation('ETANOL HIDRATADO')\nplot_prices_correlation('\u00d3LEO DIESEL')\n","44bc226f":"\ndef plot_inflation_correlation(produto):\n    annual_price_change_df = main_df[main_df.PRODUTO == produto].groupby(['DATA']).mean()\n    annual_price_change_df['VARIA\u00c7\u00c3O'] = annual_price_change_df['PRE\u00c7O M\u00c9DIO REVENDA'].pct_change()\n    annual_price_change_df['VARIA\u00c7\u00c3O 12 MESES'] = annual_price_change_df['VARIA\u00c7\u00c3O'].rolling(min_periods=12, window=12).sum() * 100\n    annual_price_change_df.tail()\n    \n    # ploting\n    fig, ax_gas = plt.subplots()\n    annual_price_change_df.plot(y='VARIA\u00c7\u00c3O 12 MESES', c='#4c72b0', ax=ax_gas)\n    fig.suptitle('Varia\u00e7\u00e3o da Infla\u00e7\u00e3o e Pre\u00e7o Acumulado - ' + produto)\n    ax_gas.set_xlabel('Data de pesquisa')\n    ax_gas.set_ylabel('% - Varia\u00e7\u00e3o Acumulativa - 12 meses', color='#4c72b0')\n    ax_gas.get_legend().remove()\n    ax_gas.grid(True)\n    \n    # plot_inflation\n    ax_inflation = ax_gas.twinx()\n    \n    annual_price_change_df.plot(y='INFLA\u00c7\u00c3O ANUAL', ax=ax_inflation, c='#55a868')\n    ax_inflation.set_ylabel('% - Infla\u00e7\u00e3o Acumulada - 12 meses', color='#55a868')\n    ax_inflation.get_legend().remove()\n    ax_inflation.grid(False)\n    plt.show()\n\nplot_inflation_correlation('GASOLINA COMUM')\nplot_inflation_correlation('ETANOL HIDRATADO')\nplot_inflation_correlation('\u00d3LEO DIESEL')\n","e85731d4":"def plot_avg_region(produto):\n    avg_per_region_df = main_df['2009':].groupby(['PRODUTO', 'REGI\u00c3O', 'DATA']).mean()\n    avg_per_region_for_product_df = avg_per_region_df.iloc[avg_per_region_df.index.get_level_values('PRODUTO') == produto]\n    \n    fig, ax = plt.subplots()\n    fig.suptitle('Pre\u00e7o por Regi\u00e3o - ' + produto)\n    \n    for key, grp in avg_per_region_for_product_df.groupby('REGI\u00c3O'):\n        grp_as_timeseries = grp.reset_index().set_index('DATA')\n        grp_as_timeseries.plot(y='PRE\u00c7O M\u00c9DIO REVENDA', label=key, ax=ax)\n\n        ax.set_xlabel('Data')\n        ax.set_ylabel('Pre\u00e7o - R$\/l')\n\n    plt.grid(True)\n    plt.show()\n\nplot_avg_region('GASOLINA COMUM')\nplot_avg_region('ETANOL HIDRATADO')\nplot_avg_region('\u00d3LEO DIESEL')","cc9406bc":"from sklearn.model_selection import train_test_split\nfrom sklearn import preprocessing\nfrom sklearn.linear_model import LinearRegression","91ab6332":"models = {}\ndef regression_for_product(produto):\n    # Cria Daframe necess\u00e1rio para regress\u00e3o\n    reg_df = main_df['2009':].groupby(['PRODUTO', 'DATA']).mean()\n    reg_df = reg_df.iloc[reg_df.index.get_level_values('PRODUTO') == produto].groupby('DATA').mean()[['PRE\u00c7O M\u00c9DIO REVENDA', 'INFLA\u00c7\u00c3O ABSOLUTA']]\n\n    # Separa eixos da regress\u00e3o\n    X = X = reg_df[['INFLA\u00c7\u00c3O ABSOLUTA']]\n    Y = reg_df['PRE\u00c7O M\u00c9DIO REVENDA'].values\n\n    # Divide dados entre treinamento e teste\n    x_train, x_test, y_train, y_test = train_test_split(X,Y,test_size=0.20)\n\n    # Cria model de regress\u00e3o e faz o treinamento\n    lr=LinearRegression()\n    lr.fit(x_train,y_train)\n    models[produto] = lr\n    predicted_values = []\n    for i in range(0, len(y_test)):\n        predicted_values.append(lr.predict(x_test.iloc[[i],:])[0])\n\n    predicted_df = pd.DataFrame({'Infla\u00e7\u00e3o Absoluta':x_test['INFLA\u00c7\u00c3O ABSOLUTA'].values , 'Valor Real':y_test, 'Valor Predito':predicted_values})\n    fig, ax = plt.subplots()\n    fig.suptitle('Regress\u00e3o - ' + produto)\n    ax.set_ylabel('Pre\u00e7o Revenda - R$\/l')\n    predicted_df.sort_values(by=['Infla\u00e7\u00e3o Absoluta']).set_index('Infla\u00e7\u00e3o Absoluta').plot(ax=ax)\n    plt.show()","aa278fd6":"regression_for_product('GASOLINA COMUM')\nregression_for_product('ETANOL HIDRATADO')\nregression_for_product('\u00d3LEO DIESEL')","a9cf2b16":"def predict_price(produto):\n    rates = {}\n    rates['2019-08-01'] = inflation_rate_df['absolute_index'].iloc[-1]\n    for i in range(2020, 2029):\n        last_year = str(i - 1)+'-08-01'\n        curr_year = str(i)+'-08-01'\n        rates[curr_year]  = (rates[last_year] * 0.04) + rates[last_year]\n\n    rates_df = pd.DataFrame(list(rates.items()), columns = ['DATA', 'INFLA\u00c7\u00c2O ABSOLUTA'])\n\n    rates_df['DATA'] = pd.to_datetime(rates_df['DATA'])\n    rates_df.set_index('DATA', inplace=True)\n    predictions = {}\n\n    rates_df['PREVIS\u00c3O'] = models[produto].predict(rates_df)\n\n    return rates_df","6070efb3":"predict_price('GASOLINA COMUM')","cce762b6":"predict_price('ETANOL HIDRATADO')","866640aa":"predict_price('\u00d3LEO DIESEL')","7b9da024":"**Corrigindo os tipos das colunas**\n\nDespreza o dia do m\u00eas e transforma em um per\u00edodo","bad585cb":"# Tratando dados da infla\u00e7\u00e3o\nAgrupando os registros por per\u00edodo\n\nOs dados de infla\u00e7\u00e3o e pre\u00e7os s\u00e3o mesclados para para fazer a compara\u00e7\u00e3o.","a4a5d74a":"# Tratando dados sobre pre\u00e7o do combust\u00edvel\nAjustes para dataset de pre\u00e7os. Convers\u00e3o de colunas para tipo correto e defini\u00e7\u00e3o da Data final da pesquisa como ind\u00edce. Colocando tamanho no gr\u00e1fico.","3c14916f":"## Previs\u00e3o para Diesel\nCom uma infla\u00e7\u00e3o 5% ao ano.","8c6d9f67":"## Previs\u00e3o para Etanol\nCom uma infla\u00e7\u00e3o 5% ao ano","2ea24c87":"# Entendendo os dados\nO dataset \u00e9 composto por uma s\u00e9rie de pesquisas realizadas pela ANP. Ele cont\u00e9m dados hist\u00f3ricos a n\u00edvel semanal de pre\u00e7os de combust\u00edveis por litro, al\u00e9m de outras informa\u00e7\u00f5es agrupadas por estados e regi\u00f5es. \n\n- Pre\u00e7os para Etanol, \u00d3leo Diesel (S10 e comum), GNV, GNP, E Gasolina.\n- Pre\u00e7os s\u00e3o a m\u00e9dia regional por Estado\n- Pre\u00e7os incluem a distribui\u00e7\u00e3o e revenda.","b90d1a86":"Filtrando e reduzindo a quantidade de informa\u00e7\u00f5es apenas para o que ser\u00e1 necess\u00e1rio.\n\nAgrupa o *Data Frame* por Produto, Estado e Regi\u00e3o, separados por m\u00eas.","f9ae57ce":"# Comparando efeitos da infla\u00e7\u00e3o ao pre\u00e7o\nAtr\u00e1ves dos \u00edndices de infla\u00e7\u00e3o fornecidos pelo IBGE, podemos avaliar o efeito da infla\u00e7\u00e3o ao pre\u00e7o dos combust\u00edveis.","5dc92ad6":"## Aplicando regress\u00e3o\n\nAtrav\u00e9s do \u00edndice de infla\u00e7\u00e3o absoluta, podemos realizar uma regress\u00e3o linear.","184a5660":"# Previs\u00f5es para futuro\nCom um modelo de regress\u00e3o linear podemos fazer predizer quais ser\u00e3o os pre\u00e7os futuros.","303edcfa":"# Pre\u00e7o por regi\u00e3o","72d1dd9f":"# Insights do pre\u00e7o do combut\u00edvel\n\n![image.png](attachment:image.png)\n\nNosso objetivo neste trabalho foi colocar em pr\u00e1tica o que aprendemos na mat\u00e9ria de Sistemas de Apoio a Decis\u00e3o. Faremos uma an\u00e1lise da evolu\u00e7\u00e3o do pre\u00e7o da Gasolina, Etano e Diesel nos \u00faltimos 10 anos e sua correla\u00e7\u00e3o com a IPCA (\u00cdndice Nacional de Pre\u00e7os ao Consumidor Amplo).","e0d62755":"# Comparando pre\u00e7os distribui\u00e7\u00e3o e revenda\n\nQuanto o pre\u00e7o de distribui\u00e7\u00e3o afeta um ao outro?","6a45b385":"6 reais um litro de gasolina? Spooky times ahead.","cbf14ac0":"## Previs\u00e3o para Gasolina\nCom uma infla\u00e7\u00e3o 5% ao ano","b05792cd":"Carregando o *Data Frame* e removendo uma coluna desnecess\u00e1ria."}}