{"cell_type":{"559d50ad":"code","2b6e7c12":"code","55ee1a62":"code","f5ae4d04":"code","710360b3":"code","639e6501":"code","d1867cf3":"code","a9e240b2":"code","ee7162dc":"code","1b6b2763":"code","5aa41d5f":"code","9f9b4791":"code","f835cd64":"code","e9ead1b9":"code","6ab04fe8":"code","0085ca49":"code","2ef2e918":"code","1df13040":"code","78186311":"code","f84d9c55":"code","861f2b2a":"code","662ffe37":"code","f13043cb":"code","f981d380":"code","dfdf5c81":"code","d4f50c07":"code","6a612a9d":"code","997e0155":"code","483608e5":"code","5991ad46":"code","d39a09ec":"code","a781d23e":"code","52872e99":"code","d82ff7a0":"markdown","56c81e95":"markdown","5a908bff":"markdown","65c0d837":"markdown","ef16f1cb":"markdown","e5260539":"markdown"},"source":{"559d50ad":"import pandas as pd","2b6e7c12":"auto = pd.read_csv(\"..\/input\/autompg-dataset\/auto-mpg.csv\")\n\nauto.head(5)","55ee1a62":"#Check for datatypes and null values\nauto.info()\n#Observation - horsepower datatype is object need to dive deeper","f5ae4d04":"import numpy as np\nauto.horsepower.unique()\n#Here hp has ? in the fields, we need to replace them","710360b3":"#Lets conver the unwanted symbol to nan\nauto = auto.replace('?',np.nan)\nauto.isna().sum()\n#6 hp has missing values\n#Need to conver hp to integer","639e6501":"auto['horsepower'] = pd.to_numeric(auto['horsepower'])\n#Lets fill the na's with mean value\nauto['horsepower'] = auto['horsepower'].fillna(auto['horsepower'].mean())","d1867cf3":"#Lets check the model year, Here for predicting milage model age will be needed than model year.\n#Lets create a new feature\nauto['model year'].unique()","a9e240b2":"import datetime\nauto['model year'] = auto['model year']+1900 # To conver this to YYYY","ee7162dc":"auto.head(1)","1b6b2763":"auto['Age'] = (datetime.datetime.now().year)-auto['model year']\nauto.head(1)","5aa41d5f":"#Lets drop model \nauto.drop(['model year'],axis=1,inplace=True)","9f9b4791":"auto['car name'].unique()\n#Car name also wont determine the milage we can drop it as well","f835cd64":"auto.drop(['car name'],axis=1, inplace=True)","e9ead1b9":"#At this point datacleaning is completed lets visualize the data now with MATPLOTLIB","6ab04fe8":"#Datanow looks clean, lets perform some visualization\nimport matplotlib.pyplot as plt","0085ca49":"plt.figure(figsize=(12,5))\n\nplt.bar(auto['Age'],auto['mpg'])\n\nplt.xlabel(\"Age\")\nplt.ylabel(\"Miles per galon\")\nplt.show()\n# As age increase the MPG decreases","2ef2e918":"plt.scatter(auto['acceleration'],auto['mpg'])\nplt.xlabel(\"acceleration\")\nplt.ylabel(\"Miles per galon\")\n#More the acceleration more the MPG","1df13040":"plt.scatter(auto['weight'],auto['mpg'])\nplt.xlabel(\"weight\")\nplt.ylabel(\"Miles per galon\")\n# As weight increases milage decreases","78186311":"\nauto.plot.scatter(x='weight',y='mpg')\nplt.xlabel(\"weight\")\nplt.ylabel(\"Miles per galon\")","f84d9c55":"plt.bar(auto['cylinders'],auto['mpg'])\nplt.xlabel(\"cylinders\")\nplt.ylabel(\"Miles per galon\")\n#Not relation, can be droped","861f2b2a":"auto.drop(['cylinders','origin'],inplace=True, axis=1)","662ffe37":"auto.head()","f13043cb":"#Lets check the corelation\nautocorr = auto.corr()\nautocorr","f981d380":"# Lets plot this with heat map\nimport seaborn as sns\nsns.heatmap(autocorr,annot=True)","dfdf5c81":"#Lets apply the ML model\nauto.shape","d4f50c07":"X = auto.drop('mpg',axis=1)\nY = auto['mpg']","6a612a9d":"#Lets apply simple linear regression to predict the age.\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(X,Y,test_size=0.2)","997e0155":"from sklearn.linear_model import LinearRegression","483608e5":"linear_model = LinearRegression(normalize=True).fit(x_train,y_train)","5991ad46":"print(\"Trainign score: \",linear_model.score(x_train,y_train))","d39a09ec":"y_pred = linear_model.predict(x_test)","a781d23e":"from sklearn.metrics import r2_score","52872e99":"print(\"test score : \", r2_score(y_test, y_pred))","d82ff7a0":"#Additional settings\n!chmod 600 \/content\/.kaggle\/kaggle.json","56c81e95":"#Inital few steps is for interacting with Kaggle dataset from Google colab\n#if not create a folder\n!mkdir .kaggle\n!ls -a","5a908bff":"!cp \/content\/.kaggle\/kaggle.json ~\/.kaggle\/kaggle.json","65c0d837":"!kaggle datasets download -d uciml\/autompg-dataset","ef16f1cb":"#Unzip the zip file\n!unzip \\autompg-dataset.zip\n","e5260539":"#Add ur profile key and username to connect with Colab\nimport json\ntoken = {\"username\":\"<UserName>\",\"key\":\"<KEY>\"}\nwith open('\/content\/.kaggle\/kaggle.json', 'w') as file:\n    json.dump(token, file)"}}