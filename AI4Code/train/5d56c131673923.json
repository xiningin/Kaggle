{"cell_type":{"86956040":"code","d8dbfe57":"code","19bd4ba5":"code","e81745ac":"code","061ca13f":"code","19143bdf":"code","45f23f6c":"code","8004252d":"code","f4029988":"code","2033fc34":"code","009f6918":"code","90d67023":"markdown","b3e6a0dd":"markdown","b1de0d03":"markdown","9c460933":"markdown","bc2d3481":"markdown","dabdda44":"markdown","7f771ad4":"markdown"},"source":{"86956040":"# Library Imports\nimport numpy as np\nimport pandas as pd \nimport seaborn as sns\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\n\n%matplotlib inline\nmpl.rcParams['figure.dpi'] = 80\nsns.set_style('white')\nsns.set_palette('Greys_r')","d8dbfe57":"# Kaggle - Load Datasets\ndf_police_killings = pd.read_csv('..\/input\/police-shootings-updated\/fatal-police-shootings-data.csv')\ndf_race_pct = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/ShareRaceByCity.csv', encoding='Windows-1252')\ndf_median_income = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/MedianHouseholdIncome2015.csv', encoding='Windows-1252')\ndf_below_poverty_pct = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PercentagePeopleBelowPovertyLevel.csv', encoding='Windows-1252')\ndf_high_school_pct = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PercentOver25CompletedHighSchool.csv', encoding='Windows-1252')","19bd4ba5":"# Load Datasets\n'''df_police_killings = pd.read_csv('input\\\\fatal-police-shootings-data.csv')\ndf_race_pct = pd.read_csv('input\\ShareRaceByCity.csv', encoding='Windows-1252')\ndf_median_income = pd.read_csv('input\\MedianHouseholdIncome2015.csv', encoding='Windows-1252')\ndf_below_poverty_pct = pd.read_csv('input\\PercentagePeopleBelowPovertyLevel.csv', encoding='Windows-1252')\ndf_high_school_pct = pd.read_csv('input\\PercentOver25CompletedHighSchool.csv', encoding='Windows-1252')'''","e81745ac":"df_police_killings","061ca13f":"ax = sns.countplot(data=df_police_killings, x='signs_of_mental_illness')\nax.set_title('People killed with Signs of Mental Illness')\nax.set_xlabel(None)\nax.set_ylabel(None)\nax.bar_label(ax.containers[0]);","19143bdf":"ax = sns.countplot(data=df_police_killings, x='flee')\nax.set_title('People killed while Fleeing')\nax.set_xlabel(None)\nax.set_ylabel(None)\nax.bar_label(ax.containers[0]);","45f23f6c":"ax = sns.countplot(data=df_police_killings, x='gender')\nax.set_xlabel(None)\nax.set_ylabel(None)\nax.set_title('People killed based on gender')\nplt.bar_label(ax.containers[0]);","8004252d":"## TODO bar chart above and below zero based on average\nstate_killings = df_police_killings.state.value_counts()[:25]\n\nplt.figure(figsize=(12,5))\nplt.title('Police Killings by State')\nax = plt.bar(x=state_killings.index, height=state_killings.values)","f4029988":"# Categorize armed types\narms_dict = {\n    # Objects designed for harm\/killing or very capable of harm\/killing\n    'deadly_weapon' : [ \n        \"BB gun and vehicle\",\n        \"bow and arrow\",\n        \"car knife and mace\",\n        \"chain saw\",\n        \"chainsaw\",\n        \"crossbow\",\n        \"grenade\",\n        \"gun\",\n        \"gun and car\",\n        \"gun and knife\",\n        \"gun and machete\",\n        \"gun and sword\",\n        \"gun and vehicle\",\n        \"guns and explosives\",\n        \"hand torch\",\n        \"hatchet and gun\",\n        \"incendiary device\",\n        \"knife and vehicle\",\n        \"machete and gun\",\n        \"motorcycle\",\n        \"samurai sword\",\n        \"sharp object\",\n        \"spear\",\n        \"sword\",\n        \"Taser\",\n        \"vehicle\",\n        \"vehicle and gun\",\n        \"vehicle and machete\"],\n    # Dangerous sharp objects\n    'uncommon_weapon' : [\n        \"ax\",\n        \"baseball bat and knife\",\n        \"beer bottle\",\n        \"bottle\",\n        \"box cutter\",\n        \"glass shard\",\n        \"hammer\",\n        \"hatchet\",\n        \"ice pick\",\n        \"knife\",\n        \"machete\",\n        \"meat cleaver\",\n        \"nail gun\",\n        \"pepper spray\",\n        \"pick-axe\",\n        \"pitchfork\",\n        \"pole and knife\",\n        \"railroad spikes\",\n        \"scissors\",\n        \"straight edge razor\",\n        \"wasp spray\"],\n    # Dangerous blunt objects\n    'blunt_weapon' : [\n        \"baseball bat\",\n        \"baseball bat and bottle\",\n        \"baseball bat and fireplace poker\",\n        \"baton\",\n        \"blunt object\",\n        \"brick\",\n        \"carjack\",\n        \"chain\",\n        \"crowbar\",\n        \"flagpole\",\n        \"metal object\",\n        \"metal pipe\",\n        \"metal pole\",\n        \"pellet gun\",\n        \"piece of wood\",\n        \"pipe\",\n        \"pole\",\n        \"rock\",\n        \"shovel\",\n        \"tire iron\",\n        \"walking stick\"],\n    # Non-weapons\n    'non_weapon' : [\n        \"contractor's level\",\n        \"air conditioner\",\n        \"air pistol\",\n        \"Airsoft pistol\",\n        \"barstool\",\n        \"BB gun\",\n        \"bean-bag gun\",\n        \"binoculars\",\n        \"chair\",\n        \"claimed to be armed\",\n        \"cordless drill\",\n        \"fireworks\",\n        \"flashlight\",\n        \"garden tool\",\n        \"lawn mower blade\",\n        \"metal hand tool\",\n        \"metal rake\",\n        \"metal stick\",\n        \"microphone\",\n        \"oar\",\n        \"pen\",\n        \"screwdriver\",\n        \"stapler\",\n        \"toy weapon\",\n        \"unarmed\",\n        \"undetermined\",\n        \"unknown weapon\",\n        \"wrench\"]\n}","2033fc34":"armed = df_police_killings.armed.value_counts()\n\ndef categorize_arms(armed, arm_type):\n# Function to categorize type of arms\n# df = look in df_police_killings.armed.value_counts()\n# terms = list of armed types\n    total = 0\n    for arm in arm_type: # loop through arm category\n        for index, val in armed.iteritems(): # iterate over armed\n            if arm in index: # if the arm is found in the index add value to total\n                total += val\n    return total\n\narm_categories = {}\nfor arm_type in arms_dict:\n    arm_categories[arm_type] = categorize_arms(armed,arms_dict[arm_type])","009f6918":"labels = ['Deadly Weapon', 'Uncommon Weapon', 'Blunt Weapon', 'Non-Weapon']\nexplode = (0, 0, 0, 0.0)\n\nfig, ax = plt.subplots()\npatches, texts, autotexts = ax.pie(arm_categories.values(), labels=labels, explode=explode, startangle=90, autopct='%1.1f%%', labeldistance=1.05, pctdistance=0.8)\nplt.title('People killed with Arms')\n\nfor autotext in autotexts:\n    autotext.set_color('white')\n    \nax.axis('equal')  \nplt.tight_layout()\nplt.show()","90d67023":"## Fleeing","b3e6a0dd":"# Introduction\n\nThere has been over 6,000 police shootings from January 1, 2015 through to Semptember 27, 2021.","b1de0d03":"## Armed","9c460933":"## State","bc2d3481":"## Mental Illness","dabdda44":"# Analysis of Police Shootings in the United States","7f771ad4":"## Gender"}}