{"cell_type":{"3c411fb6":"code","d43b8d54":"code","fe08e919":"code","c7ce8215":"code","6f5c3528":"code","a18d2487":"code","ae81512f":"code","42067eee":"code","3dd381e0":"code","a5d74b73":"code","5761533b":"code","ffa3f1b8":"code","d7417d22":"code","b6c4caef":"code","8171d40a":"code","c24985ff":"code","4128fb9c":"code","66e05ceb":"code","de5a3de8":"code","dafb9c60":"code","d4e7c438":"code","0ad6685f":"code","9a876b74":"code","d252fdd2":"code","fc037e2f":"code","4596cf58":"code","566d418a":"code","6181dcea":"code","8809dca4":"code","59ed8e03":"code","8c5b3a3a":"code","41f186a1":"code","9103a32f":"code","f82fc98b":"code","29f98341":"code","653e67e8":"code","a215f89a":"code","bbfa080a":"code","1a210ec6":"code","cd01f4b9":"code","c51fcc69":"code","e05a1280":"code","13ba1c75":"code","867a1deb":"code","f716996c":"code","920e7ce5":"code","054121d0":"code","aabfbe90":"code","9d0f0a6e":"code","e2806bb4":"code","bfadda74":"code","b7fea564":"code","587c1b41":"code","a2942002":"code","d934d62f":"code","22f7b74c":"code","da8e282f":"code","3eb51e27":"code","3053cecd":"code","e279b75e":"code","f2903b62":"code","27f833b9":"code","efad65bc":"code","021c1f4a":"code","7208985e":"code","718aedb3":"code","c5c148bf":"code","22cb6181":"code","a4fe9365":"code","10dbfa33":"code","7f7108e0":"code","67b0bff8":"code","143c6a6a":"code","02139494":"code","21268cbe":"code","d784e7fe":"code","fca2debf":"code","de9162c5":"code","99c0cbad":"code","c17b5e1e":"code","6b50cd6a":"code","5b95e7be":"code","4ecf5852":"code","055ca59a":"code","c2ad06e4":"code","6a4f33ff":"code","1d6ffe88":"code","03297d87":"code","11d51c46":"code","ac6678b0":"code","fe9ce059":"code","66e8fe37":"code","4a6cca32":"code","53037cdb":"code","5ed0078b":"code","48c21372":"code","bb25616a":"code","24d7a35a":"code","66c5a144":"code","3af8bf41":"code","a30c59e6":"code","93570964":"code","d560068c":"code","40e3b61f":"code","12593ade":"code","6223fa93":"code","6ea8b740":"code","814df034":"code","f55e9d2f":"code","5fe421d6":"code","34f79f9e":"code","f585ce53":"code","f89c479b":"code","b25af3bf":"code","f8e2dfbf":"code","1762330f":"code","22795af3":"code","09bbaee4":"code","d3279519":"code","66875177":"code","b1456817":"code","dec30301":"code","16021314":"code","d8df24a9":"code","4d03d1ee":"code","24e38bb2":"code","43f115de":"code","d60afcd9":"code","aba7ded7":"code","c4e5a525":"code","3d758c57":"code","1f6ebe9b":"code","4a43450c":"code","c0573126":"markdown","a21f7564":"markdown","ba82115b":"markdown","86f6e0d7":"markdown","371985f7":"markdown","0e8bff1f":"markdown","3c082b28":"markdown","aaac54d8":"markdown","7cbbaa33":"markdown","7201acbc":"markdown","61d543d7":"markdown","c785fe90":"markdown","c363c3a4":"markdown","b4df9f59":"markdown","13f17a17":"markdown","4ef96de1":"markdown","e2d9287e":"markdown","feddaf88":"markdown","2e799ab2":"markdown","af4fca4e":"markdown","d6a32bb2":"markdown","2a044dbf":"markdown","4148ccc0":"markdown","29116beb":"markdown","79e73a97":"markdown","2f637f49":"markdown","3881e33f":"markdown","16275c23":"markdown","efb2472d":"markdown","9b0e8feb":"markdown","df3c39cf":"markdown","8ad58505":"markdown","170be05b":"markdown","49929d42":"markdown","d7fb4e7e":"markdown","f2fb462c":"markdown","857311c4":"markdown","8dd5e3be":"markdown","0bb6b4c5":"markdown","a229451a":"markdown","397c26c6":"markdown","b94c546d":"markdown","c5880fde":"markdown","48de73f3":"markdown","d31a71a1":"markdown","1a9870f2":"markdown","cbee58ba":"markdown","f4adc31b":"markdown","726e496d":"markdown","04323c94":"markdown","a1a1d6f7":"markdown","2ec105e9":"markdown","525df76a":"markdown","26df6ffa":"markdown","a25d24ce":"markdown","7e1ee537":"markdown","7303798e":"markdown","0642e9dd":"markdown","76378e58":"markdown","1c0042e9":"markdown","7cd47f2d":"markdown","76ddb039":"markdown","1167a575":"markdown","65b97a67":"markdown","7ea1a667":"markdown","80a77f48":"markdown","5ba2da71":"markdown","c65cb567":"markdown","d4481706":"markdown","22fe77fe":"markdown","e76d2542":"markdown","29e799c1":"markdown","ab7c9c64":"markdown","e03a3d2b":"markdown","c734f50a":"markdown","2c99e437":"markdown","f88fc2aa":"markdown","506da118":"markdown","467e937a":"markdown","bb56130e":"markdown","7d1eeb9f":"markdown","f074c3b4":"markdown","9e1e15db":"markdown","da9474e5":"markdown","e47e702d":"markdown","00d3eb63":"markdown","abfdfd4e":"markdown","6c3e5549":"markdown","c062fe36":"markdown","83ad27f4":"markdown","d2951ff4":"markdown","15383ced":"markdown","8be061bc":"markdown","ceccacbe":"markdown","5d9e38c3":"markdown","59e6ce14":"markdown","cc876c38":"markdown","7a082866":"markdown","645e984a":"markdown","1a40c70c":"markdown","b5083a66":"markdown","48d08792":"markdown","39a253c0":"markdown","928a4064":"markdown","9dc4a5b8":"markdown","eb3fbee1":"markdown","45f7969e":"markdown","b1c7b01b":"markdown","96154d28":"markdown","d4a04243":"markdown","665b3a3b":"markdown","754068f4":"markdown","fc7477e4":"markdown","22f49d0a":"markdown","d67b2cf9":"markdown","1cd07a4d":"markdown","a359b5c5":"markdown","e443bd1d":"markdown","c5853a2a":"markdown","4d687b97":"markdown","0fe1330d":"markdown","b1560a0c":"markdown","6f45a889":"markdown","38566c4d":"markdown","36d90054":"markdown","82cacabd":"markdown","c08d3c9f":"markdown","4f633155":"markdown","8d0ce7b4":"markdown","e544bd87":"markdown","af16b8b7":"markdown","2b43f886":"markdown","5cb47681":"markdown","a1c98d92":"markdown","bcb95e88":"markdown","37797be1":"markdown"},"source":{"3c411fb6":"!pip install seaborn==0.11.0","d43b8d54":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nfrom scipy import stats\n\nimport sklearn\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.feature_selection import SelectFromModel","fe08e919":"np.random.seed(42)\n\nplt.rcParams['figure.figsize'] = (12, 8)\nsns.set_theme(style='whitegrid')\n\npd.set_option('display.max_rows', None)","c7ce8215":"train_df = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest_df = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\n\nfull_df = pd.concat([train_df, test_df], sort=True).reset_index(drop=True)","6f5c3528":"full_df.info()","a18d2487":"for dataframe in [train_df, test_df, full_df]:\n    dataframe['MSSubClass'] = dataframe['MSSubClass'].apply(str)\n    dataframe['YrSold'] = dataframe['YrSold'].astype(str)\n    dataframe['MoSold'] = dataframe['MoSold'].astype(str)","ae81512f":"num_features = [f for f in full_df.columns if full_df.dtypes[f] != 'object']\nnum_features.remove('Id')\nnum_features.remove('SalePrice')\n\ncat_features = [f for f in full_df.columns if full_df.dtypes[f] == 'object']","42067eee":"missing_df = full_df.isnull().sum()\nmissing_df = missing_df.drop(missing_df[missing_df == 0].index).sort_values(ascending=False)\nmissing_df.drop(['SalePrice'], inplace=True)\n\nmissing_df = pd.DataFrame({'missing_count': missing_df})\nmissing_df['missing_rate'] = (missing_df['missing_count'] \/ len(full_df)) * 100","3dd381e0":"top_five_missing_df = missing_df[missing_df['missing_count'] > 3]\n\nplt.figure(figsize=(32, 12))\nsns.barplot(x=top_five_missing_df.index, y='missing_rate', data=top_five_missing_df)\nplt.xlabel('Features', fontsize=14)\nplt.ylabel('Percent of Missing Values', fontsize=14)\nplt.title('Missing Data per Feature', fontsize=14);","a5d74b73":"missing_df","5761533b":"for feature in (\n    'PoolQC', \n    'FireplaceQu', \n    'Alley', \n    'Fence', \n    'MiscFeature', \n    'BsmtQual', \n    'BsmtCond', \n    'BsmtExposure', \n    'BsmtFinType1', \n    'BsmtFinType2',\n    'GarageType', \n    'GarageFinish', \n    'GarageQual', \n    'GarageCond',\n    'BsmtQual', \n    'BsmtCond', \n    'BsmtExposure', \n    'BsmtFinType1', \n    'BsmtFinType2',\n    'MasVnrType',\n):\n    train_df[feature] = train_df[feature].fillna('None')\n    full_df[feature] = full_df[feature].fillna('None')","ffa3f1b8":"for feature in (\n    'BsmtFinSF1', \n    'BsmtFinSF2', \n    'BsmtUnfSF',\n    'TotalBsmtSF', \n    'BsmtFullBath', \n    'BsmtHalfBath',\n    'MasVnrArea',\n    'GarageCars',\n    'GarageArea',\n    'GarageYrBlt',\n):\n    train_df[feature] = train_df[feature].fillna(0)\n    full_df[feature] = full_df[feature].fillna(0)","d7417d22":"for feature in (\n    'Electrical', \n    'KitchenQual', \n    'Exterior1st',\n    'Exterior2nd', \n    'SaleType',\n    'Utilities',\n):\n    train_df[feature] = train_df[feature].fillna(train_df[feature].mode()[0])\n    full_df[feature] = full_df[feature].fillna(full_df[feature].mode()[0])","b6c4caef":"for dataframe in [train_df, test_df, full_df]:\n    dataframe['MSZoning'] = dataframe.groupby(['Neighborhood'])['MSZoning'].transform(lambda x: x.fillna(x.mode()[0]))\n    dataframe['MSSubClass'] = dataframe.groupby(['HouseStyle'])['MSSubClass'].transform(lambda x: x.fillna(x.mode()[0]))\n    dataframe['LotFrontage'] = dataframe.groupby(['BldgType'])['LotFrontage'].transform(lambda x: x.fillna(x.median()))\n    dataframe['Functional'] = dataframe['Functional'].fillna('Typ')","8171d40a":"ordinal_cat_mapping = {\n    'ExterQual': {'Po': 0, 'Fa': 1, 'TA': 2, 'Gd': 3, 'Ex': 4}, \n    'ExterCond': {'Po': 0, 'Fa': 1, 'TA': 2, 'Gd': 3, 'Ex': 4},\n    'BsmtQual': {'None': 0, 'Po': 1, 'Fa': 2, 'TA': 3, 'Gd': 4, 'Ex': 5},\n    'BsmtCond': {'None': 0, 'Po': 1, 'Fa': 2, 'TA': 3, 'Gd': 4, 'Ex': 5},\n    'BsmtFinType1': {'None': 0, 'Unf': 1, 'LwQ': 2, 'Rec': 3, 'BLQ': 4, 'ALQ': 5, 'GLQ': 6},\n    'BsmtFinType2': {'None': 0, 'Unf': 1, 'LwQ': 2, 'Rec': 3, 'BLQ': 4, 'ALQ': 5, 'GLQ': 6},\n    'HeatingQC': {'Po': 0, 'Fa': 1, 'TA': 2, 'Gd': 3, 'Ex': 4},\n    'KitchenQual': {'Po': 0, 'Fa': 1, 'TA': 2, 'Gd': 3, 'Ex': 4},\n    'FireplaceQu': {'None': 0, 'Po': 1, 'Fa': 2, 'TA': 3, 'Gd': 4, 'Ex': 5},\n    'GarageFinish': {'None': 0, 'Unf': 1, 'RFn': 2, 'Fin': 3},\n    'GarageQual': {'None': 0, 'Po': 1, 'Fa': 2, 'TA': 3, 'Gd': 4, 'Ex': 5},\n    'GarageCond': {'None': 0, 'Po': 1, 'Fa': 2, 'TA': 3, 'Gd': 4, 'Ex': 5},\n    'PoolQC': {'None': 0, 'Po': 1, 'Fa': 2, 'TA': 3, 'Gd': 4, 'Ex': 5},\n    'Fence': {'None': 0, 'MnWw': 1, 'GdWo': 2, 'MnPrv': 3, 'GdPrv': 4},\n    'PavedDrive': {'N': 0, 'P': 1, 'Y': 2},\n    'CentralAir': {'N': 0, 'Y': 1},\n    'Alley': {'None': 0, 'Pave': 1, 'Grvl': 2},\n    'Street': {'Pave': 0, 'Grvl': 1},\n}\n\nenc_cat_features = []\nnon_ordinal_cat_features = list(set(cat_features) - set(ordinal_cat_mapping.keys()))\n\nfor cat_feature in non_ordinal_cat_features:\n    train_df[cat_feature + 'Enc'] = LabelEncoder().fit_transform(train_df[cat_feature])\n    full_df[cat_feature + 'Enc'] = LabelEncoder().fit_transform(full_df[cat_feature])\n    enc_cat_features.append(cat_feature + 'Enc')\n\nfor ordinal_feature, feature_mapping in ordinal_cat_mapping.items():\n    full_df[ordinal_feature + 'Enc'] = full_df[ordinal_feature].map(feature_mapping)\n    train_df[ordinal_feature + 'Enc'] = train_df[ordinal_feature].map(feature_mapping)","c24985ff":"for dataframe in [train_df, test_df, full_df]:\n    dataframe['Exterior1st'].replace(['Brk Cmn', 'CmentBd', 'Wd Shng'], ['BrkComm', 'CemntBd', 'Wd Sdng'], inplace=True)\n    dataframe['Exterior2nd'].replace(['Brk Cmn', 'CmentBd', 'Wd Shng'], ['BrkComm', 'CemntBd', 'Wd Sdng'], inplace=True)","4128fb9c":"sns.displot(full_df['SalePrice']);","66e05ceb":"full_df['SalePriceLog'] = np.log(full_df['SalePrice'])\n\nsns.displot(full_df['SalePriceLog']);","de5a3de8":"full_df['SalePrice'].describe()","dafb9c60":"def impute_sale_price_group(sale_price):\n    if sale_price <= 129975:\n        return '25% and less'\n    if sale_price > 129975 and sale_price <= 163000:\n        return '25% - 50%'\n    if sale_price > 163000 and sale_price < 214000:\n        return '50% - 75%'\n    if sale_price >= 214000:\n        return '75% and more'\n\nfull_df['SalePriceGroup'] = full_df['SalePrice'].apply(impute_sale_price_group)","d4e7c438":"sns.displot(data=full_df['GrLivArea']);","0ad6685f":"full_df['GrLivAreaLog'] = np.log(full_df['GrLivArea'])\n\nsns.displot(data=full_df['GrLivAreaLog']);","9a876b74":"sns.lmplot(data=full_df, x='GrLivAreaLog', y='SalePriceLog', hue='SalePriceGroup');","d252fdd2":"full_df.drop(\n    full_df[(full_df['GrLivArea'] > 4000) & (full_df['SalePrice'] < 700000)].index,\n    inplace=True\n)","fc037e2f":"full_df['TotRmsAbvGrdLog'] = np.log(full_df['TotRmsAbvGrd'])\n\nsns.displot(data=full_df['TotRmsAbvGrd'])\nsns.displot(data=full_df['TotRmsAbvGrdLog']);","4596cf58":"sns.catplot(data=full_df, x='TotRmsAbvGrdLog', y='SalePriceLog', kind='box')\nsns.lmplot(data=full_df, x='GrLivAreaLog', y='TotRmsAbvGrdLog')\nsns.lmplot(data=full_df, x='TotRmsAbvGrdLog', y='SalePriceLog', hue='SalePriceGroup');","566d418a":"full_df['AvgRoomSF'] = full_df['GrLivArea'] \/ full_df['TotRmsAbvGrd']\n\nsns.histplot(data=full_df, x='AvgRoomSF')\nsns.lmplot(data=full_df, x='AvgRoomSF', y='SalePriceLog');","6181dcea":"full_df['LotAreaLog'] = np.log(full_df['LotArea'])\n\nsns.displot(data=full_df['LotArea'])\nsns.displot(data=full_df['LotAreaLog'])\nsns.lmplot(data=full_df, x='LotAreaLog', y='SalePriceLog');","8809dca4":"sns.lmplot(data=full_df, x='1stFlrSF', y='SalePriceLog')\nsns.lmplot(data=full_df, x='2ndFlrSF', y='SalePriceLog');","59ed8e03":"sns.displot(data=(full_df[full_df['LowQualFinSF'] > 0]['LowQualFinSF']));","8c5b3a3a":"full_df['LowQualLivAreaPart'] = np.log1p(full_df['LowQualFinSF'] \/ full_df['GrLivArea'])\n\nlow_quality_finish_df = full_df[full_df['LowQualLivAreaPart'] > 0]\n\nsns.displot(data=(low_quality_finish_df['LowQualLivAreaPart']))\nsns.lmplot(data=low_quality_finish_df, x='LowQualLivAreaPart', y='SalePriceLog');","41f186a1":"sns.catplot(data=full_df, x='HouseStyle', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, y='HouseStyle', hue='SalePriceGroup', kind='count');","9103a32f":"full_df['IsHouseFinished'] = (full_df['HouseStyle'].isin(['2Story', '1Story', '1.5Fin', 'SFoyer', 'SLvl', '2.5Fin'])) * 1\n\nsns.catplot(data=full_df, x='IsHouseFinished', y='SalePriceLog', kind='box');","f82fc98b":"sns.catplot(data=full_df, y='BldgType', hue='SalePriceGroup', kind='count')\nsns.catplot(data=full_df, x='BldgType', y='SalePriceLog', kind='box');","29f98341":"sns.catplot(data=full_df, y='MSSubClass', hue='SalePriceGroup', kind='count')\nsns.catplot(data=full_df, x='MSSubClass', y='SalePriceLog', kind='box');","653e67e8":"full_df['IsModernHouseType'] = full_df['MSSubClass'].map({\n    '20': 1, \n    '30': 0, \n    '40': 0, \n    '45': 0, \n    '50': 0, \n    '60': 1, \n    '70': 0, \n    '75': 0,\n    '80': 0, \n    '85': 0, \n    '90': 0, \n    '120': 1, \n    '150': 0, \n    '160': 1, \n    '180': 0, \n    '190': 0,\n})\n\nsns.catplot(data=full_df, x='IsModernHouseType', y='SalePriceLog', kind='box');","a215f89a":"full_df['IsPlannedUnitDevelopment'] = full_df['MSSubClass'].map({\n    '20': 0, \n    '30': 0, \n    '40': 0, \n    '45': 0, \n    '50': 0, \n    '60': 0, \n    '70': 0, \n    '75': 0,\n    '80': 0, \n    '85': 0, \n    '90': 0, \n    '120': 1, \n    '150': 1, \n    '160': 1, \n    '180': 1, \n    '190': 0,\n})\n\nsns.catplot(data=full_df, x='IsPlannedUnitDevelopment', y='SalePriceLog', kind='box');","bbfa080a":"sns.countplot(data=full_df, y='LotShape', hue='SalePriceGroup')\nsns.catplot(data=full_df, x='LotShape', y='SalePriceLog', kind='box')\n\nfull_df['IsIrregularShape'] = full_df['LotShape'].map({\n    'Reg': 0,\n    'IR1': 1,\n    'IR2': 1,\n    'IR3': 1,\n})\n\nsns.catplot(data=full_df, x='IsIrregularShape', y='SalePriceLog', kind='box');","1a210ec6":"sns.countplot(data=full_df, y='LotConfig', hue='SalePriceGroup')\nsns.catplot(data=full_df, x='LotConfig', y='SalePriceLog', kind='box');","cd01f4b9":"full_df['LotFrontageLog'] = np.log(full_df['LotFrontage'])\n\nsns.displot(full_df['LotFrontage'])\nsns.displot(full_df['LotFrontageLog'])\nsns.lmplot(data=full_df, x='LotFrontageLog', y='SalePriceLog');","c51fcc69":"fig, ax = plt.subplots(1, 2, constrained_layout=True)\n\nsns.countplot(data=full_df, y='LandContour', hue='SalePriceGroup', ax=ax[0])\nsns.countplot(data=full_df, y='LandSlope', hue='SalePriceGroup', ax=ax[1])\n\nsns.catplot(data=full_df, x='LandContour', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='LandSlope', y='SalePriceLog', kind='box');","e05a1280":"full_df['TotalBsmtSFLog'] = np.log1p(full_df['TotalBsmtSF'])\n\nbasement_df = full_df[full_df['TotalBsmtSF'] > 0]\n\nsns.displot(full_df['TotalBsmtSF'])\nsns.displot(full_df['TotalBsmtSFLog'])\n\nsns.lmplot(data=basement_df, x='TotalBsmtSFLog', y='SalePriceLog');","13ba1c75":"fig, ax = plt.subplots(1, 2, constrained_layout=True)\n\nsns.countplot(data=full_df, y='BsmtQual', hue='SalePriceGroup', ax=ax[0])\nsns.countplot(data=full_df, y='BsmtCond', hue='SalePriceGroup', ax=ax[1])\n\nsns.catplot(data=full_df, x='BsmtQual', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='BsmtCond', y='SalePriceLog', kind='box');","867a1deb":"full_df['BsmtQC'] = full_df['BsmtQualEnc'] + full_df['BsmtCondEnc']\n\nsns.catplot(data=full_df, x='BsmtQC', y='SalePriceLog', kind='box');","f716996c":"fig, ax = plt.subplots(1, 2, constrained_layout=True)\n\nsns.countplot(data=full_df, y='BsmtFinType1', hue='SalePriceGroup', ax=ax[0])\nsns.countplot(data=full_df, y='BsmtFinType2', hue='SalePriceGroup', ax=ax[1])\n\nsns.catplot(data=full_df, x='BsmtFinType1', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='BsmtFinType2', y='SalePriceLog', kind='box');","920e7ce5":"sns.lmplot(data=basement_df, x='BsmtFinSF1', y='SalePriceLog')\nsns.lmplot(data=basement_df, x='BsmtFinSF2', y='SalePriceLog')\nsns.lmplot(data=basement_df, x='BsmtUnfSF',  y='SalePriceLog');","054121d0":"sns.countplot(data=full_df, y='Foundation', hue='SalePriceGroup')\nsns.catplot(data=full_df, x='Foundation', y='SalePriceLog', kind='box');","aabfbe90":"sns.countplot(data=full_df, y='BsmtExposure', hue='SalePriceGroup')\nsns.catplot(data=full_df, x='BsmtExposure', y='SalePriceLog', kind='box');","9d0f0a6e":"dataframe['HasBsmtExposure'] = dataframe['BsmtExposure'].map({\n    'None': 0,\n    'No': 0,\n    'Mn': 1,\n    'Av': 1,\n    'Gd': 1\n})\nfull_df['BsmtExposureSimpl'] = full_df['BsmtExposure'].map({\n    'None': 'None',\n    'No': 'No',\n    'Mn': 'Min',\n    'Av': 'Min',\n    'Gd': 'Good'\n})\n\nsns.catplot(data=full_df, x='HasBsmtExposure', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='BsmtExposureSimpl', y='SalePriceLog', kind='box');","e2806bb4":"fig, ax = plt.subplots(1, 2, constrained_layout=True)\n\nsns.countplot(data=full_df, y='OverallCond', hue='SalePriceGroup', ax=ax[0])\nsns.countplot(data=full_df, y='OverallQual', hue='SalePriceGroup', ax=ax[1]);","bfadda74":"full_df['OverallHouseQC'] = full_df['OverallCond'] + full_df['OverallQual']\n\nsns.countplot(data=full_df, y='OverallHouseQC', hue='SalePriceGroup');","b7fea564":"full_df['OverallHouseQCBins'] = pd.qcut(full_df['OverallHouseQC'], q=3)\n\nsns.countplot(data=full_df, y='OverallHouseQCBins', hue='SalePriceGroup')\nsns.catplot(data=full_df, x='OverallHouseQCBins', y='SalePrice', kind='box');","587c1b41":"sns.countplot(data=full_df, y='Functional', hue='SalePriceGroup')\nsns.catplot(data=full_df, x='Functional', y='SalePriceLog', kind='box');","a2942002":"full_df['IsFunctional'] = (full_df['Functional'] == 'Typ') * 1\nfull_df['FunctionalGroup'] = full_df['Functional'].map({\n    'Typ': 2,\n    'Min1': 1,\n    'Min2': 1,\n    'Mod': 1,\n    'Maj1': 0,\n    'Maj2': 0,\n    'Sev': 0,\n    'Sav': 0,\n})\n\nsns.catplot(data=full_df, x='IsFunctional', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='FunctionalGroup', y='SalePriceLog', kind='box');","d934d62f":"full_df[['YearBuilt', 'YearRemodAdd']].describe().transpose()","22f7b74c":"sns.histplot(data=full_df, x='YearBuilt', hue='SalePriceGroup');","da8e282f":"full_df['IsRecentlyBuilt'] = (full_df['YearBuilt'] == full_df['YrSold'].astype(int)) * 1\nfull_df['IsRecentlyRemodeled'] = (full_df['YearRemodAdd'] == full_df['YrSold'].astype(int)) * 1\n\nsns.catplot(data=full_df, x='IsRecentlyBuilt', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='IsRecentlyRemodeled', y='SalePriceLog', kind='box');","3eb51e27":"sns.histplot(data=full_df, x='YearRemodAdd', hue='SalePriceGroup');","3053cecd":"full_df['YearsSinceBuilt'] = full_df['YrSold'].astype(int) - full_df['YearBuilt'].astype(int)\nfull_df['YearsSinceRemod'] = full_df['YrSold'].astype(int) - full_df['YearRemodAdd'].astype(int)\nfull_df['Remodeled'] = (full_df['YearRemodAdd'] != full_df['YearBuilt']) * 1\n\nsns.histplot(data=full_df, x='YearsSinceBuilt', hue='SalePriceGroup');","e279b75e":"sns.histplot(data=full_df[full_df['Remodeled'] == 1], x='YearsSinceRemod', hue='SalePriceGroup');","f2903b62":"year_built_bins = np.linspace(1871, 2010, 10) # 10 bins\nfull_df['YearBuiltBin'] = pd.cut(full_df['YearBuilt'], bins=year_built_bins, labels=range(1, 10)) \n\nsns.histplot(data=full_df, x='YearBuiltBin', hue='SalePriceGroup');","27f833b9":"fig, ax = plt.subplots(1, 3, constrained_layout=True)\n\nsns.countplot(data=full_df, y='Alley', hue='SalePriceGroup', ax=ax[0])\nsns.countplot(data=full_df, y='Street', hue='SalePriceGroup', ax=ax[1])\nsns.countplot(data=full_df, y='PavedDrive', hue='SalePriceGroup', ax=ax[2]);","efad65bc":"full_df['IsPavedDrive'] = (full_df['PavedDrive'] == 'Y') * 1\n\nsns.catplot(data=full_df, x='IsPavedDrive', y='SalePriceLog', kind='box');","021c1f4a":"fig, ax = plt.subplots(1, 2, figsize=(12, 8), constrained_layout=True)\n\nsns.countplot(data=full_df, y='Neighborhood', hue='SalePriceGroup', ax=ax[0])\nsns.countplot(data=full_df, y='MSZoning', hue='SalePriceGroup', ax=ax[1])\n\nsns.catplot(data=full_df, x='MSZoning', y='SalePriceLog', kind='box');","7208985e":"g = sns.catplot(data=full_df, x='Neighborhood', y='SalePriceLog', kind='box')\ng.fig.set_figwidth(25);","718aedb3":"full_df['IsNeighborhoodElite'] = (full_df['Neighborhood'].isin(['NridgHt', 'CollgeCr', 'Crawfor', 'StoreBr', 'Timber'])) * 1\n\nsns.catplot(data=full_df, x='IsNeighborhoodElite', y='SalePriceLog', kind='box');","c5c148bf":"full_df['SalePrice'].groupby(full_df['Neighborhood']).median().sort_values()","22cb6181":"full_df['NeighborhoodGroups'] = full_df['Neighborhood'].map({\n    'MeadowV': 0,\n    'IDOTRR': 1,\n    'BrDale': 1,\n    'OldTown': 1,\n    'Edwards': 1,\n    'BrkSide': 1,\n    'Sawyer': 1,\n    'Blueste': 1,\n    'SWISU': 2,\n    'NAmes': 2,\n    'NPkVill': 2,\n    'Mitchel': 2,\n    'SawyerW': 2,\n    'Gilbert': 2,  \n    'NWAmes': 2,   \n    'Blmngtn': 2,  \n    'CollgCr': 2,  \n    'ClearCr': 3,  \n    'Crawfor': 3,  \n    'Veenker': 3,  \n    'Somerst': 3,  \n    'Timber': 3,   \n    'StoneBr': 4, \n    'NoRidge': 4, \n    'NridgHt': 4,\n})\n\nsns.catplot(data=full_df, x='NeighborhoodGroups', y='SalePriceLog', kind='box');","a4fe9365":"fig, ax = plt.subplots(1, 2, figsize=(12, 8), constrained_layout=True)\n\nsns.countplot(data=full_df, y='Condition1', hue='SalePriceGroup', ax=ax[0])\nsns.countplot(data=full_df, y='Condition2', hue='SalePriceGroup', ax=ax[1])\n\nsns.catplot(data=full_df, x='Condition1', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='Condition2', y='SalePriceLog', kind='box');","10dbfa33":"full_df['IsAdjArterialStreat'] = ((full_df['Condition1'] == 'Artery') | (full_df['Condition2'] == 'Artery')) * 1\nfull_df['IsAdjFeederStreat'] = ((full_df['Condition1'] == 'Feedr') | (full_df['Condition2'] == 'Feedr')) * 1\nfull_df['IsNormalCondition'] = ((full_df['Condition1'] == 'Norm') | (full_df['Condition2'] == 'Norm')) * 1\nfull_df['IsAjdOffSiteFeature'] = ((full_df['Condition1'] == 'PosA') | (full_df['Condition2'] == 'PosA')) * 1\nfull_df['IsNearOffSiteFeature'] = ((full_df['Condition1'] == 'PosN') | (full_df['Condition2'] == 'PosN')) * 1\nfull_df['IsNearRailroad'] = ((full_df['Condition1'].isin(['RRNn', 'RRNe'])) | (full_df['Condition2'].isin(['RRNn', 'RRNe']))) * 1\nfull_df['IsAdjRailroad'] = ((full_df['Condition1'].isin(['RRAn', 'RRAe'])) | (full_df['Condition2'].isin(['RRAn', 'RRAe']))) * 1\n\nsns.catplot(data=full_df, x='IsAdjArterialStreat', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='IsAdjFeederStreat', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='IsNearRailroad', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='IsAdjRailroad', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='IsNormalCondition', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='IsNearOffSiteFeature', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='IsAjdOffSiteFeature', y='SalePriceLog', kind='box');","7f7108e0":"fig, ax = plt.subplots(1, 2, figsize=(12, 8), constrained_layout=True)\n\nsns.countplot(data=full_df, y='RoofStyle', hue='SalePriceGroup', ax=ax[0])\nsns.countplot(data=full_df, y='RoofMatl', hue='SalePriceGroup', ax=ax[1]);","67b0bff8":"sns.catplot(data=full_df, x='RoofMatl', y='SalePriceLog', kind='box');","143c6a6a":"full_df['RoofMatlCost'] = full_df['RoofMatl'].map({\n    'CompShg': 'Cheap',\n    'WdShake': 'Expensive',\n    'ClyTile': 'Expensive',\n    'WdShngl': 'Expensive',\n    'Roll': 'Cheap',\n    'Metal': 'Expensive',\n    'Membran': 'Cheap',\n    'Tar&Grv': 'Cheap',\n})\n\nfull_df['IsWoodenRoof'] = full_df['RoofMatl'].map({\n    'CompShg': 0,\n    'WdShake': 1,\n    'ClyTile': 0,\n    'WdShngl': 1,\n    'Roll': 0,\n    'Metal': 0,\n    'Membran': 0,\n    'Tar&Grv': 0,\n})\n\nfull_df['IsCompShngl'] = full_df['RoofMatl'].map({\n    'CompShg': 1,\n    'WdShake': 0,\n    'ClyTile': 0,\n    'WdShngl': 0,\n    'Roll': 0,\n    'Metal': 0,\n    'Membran': 0,\n    'Tar&Grv': 0,\n})\n\nsns.catplot(data=full_df, x='IsCompShngl', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='RoofMatlCost', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='IsWoodenRoof', y='SalePriceLog', kind='box');","02139494":"sns.catplot(data=full_df, x='RoofStyle', y='SalePriceLog', kind='box');","21268cbe":"full_df['IsPopularRoofStyle'] = full_df['RoofStyle'].isin(['Hip', 'Gable']) * 1\n\nsns.catplot(data=full_df, x='IsPopularRoofStyle', y='SalePriceLog', kind='box');","d784e7fe":"fig, ax = plt.subplots(1, 2, figsize=(12, 8), constrained_layout=True)\n\nsns.countplot(data=full_df, y='Exterior1st', hue='SalePriceGroup', ax=ax[0])\nsns.countplot(data=full_df, y='Exterior2nd', hue='SalePriceGroup', ax=ax[1])\n\ng = sns.catplot(data=full_df, x='Exterior1st', y='SalePriceLog', kind='box')\ng.fig.set_figwidth(25);","fca2debf":"fig, ax = plt.subplots(1, 2, constrained_layout=True)\n\nsns.countplot(data=full_df, y='ExterQual', hue='SalePriceGroup', ax=ax[0])\nsns.countplot(data=full_df, y='ExterCond', hue='SalePriceGroup', ax=ax[1])\n\nsns.catplot(data=full_df, x='ExterQual', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='ExterCond', y='SalePriceLog', kind='box');","de9162c5":"full_df['IsExterCondGood'] = full_df['ExterCond'].map({'Po': 0, 'Fa': 0, 'TA': 1, 'Gd': 1, 'Ex': 1})\n\nsns.catplot(data=full_df, x='IsExterCondGood', y='SalePriceLog', kind='box');","99c0cbad":"full_df['ExterQC'] = full_df['ExterQualEnc'] + full_df['ExterCondEnc']\n\nsns.catplot(data=full_df, x='ExterQC', y='SalePriceLog', kind='box');","c17b5e1e":"sns.countplot(data=full_df, y='MasVnrType', hue='SalePriceGroup')\nsns.catplot(data=full_df, x='MasVnrType', y='SalePriceLog', kind='box');","6b50cd6a":"sns.histplot(data=full_df, x='MasVnrArea', hue='SalePriceGroup');","5b95e7be":"full_df['MasVnrAreaGroups'] = pd.cut(full_df['MasVnrArea'], bins=[-1, 1, 200, 400, 800, 1700], labels=[0, 1, 2, 3, 4])\nsns.catplot(data=full_df, x='MasVnrAreaGroups', y='SalePriceLog', kind='box');","4ecf5852":"fig, ax = plt.subplots(1, 2, constrained_layout=True)\n\nsns.countplot(data=full_df, y='Heating', hue='SalePriceGroup', ax=ax[0])\nsns.countplot(data=full_df, y='HeatingQC', hue='SalePriceGroup', ax=ax[1]);","055ca59a":"full_df['IsGasHeating'] = full_df['Heating'].map({'GasA': 1, 'GasW': 1, 'Grav': 0, 'Wall': 0, 'OtherW': 0, 'Floor': 0})\nfull_df['IsHeatingGood'] = full_df['HeatingQC'].map({'Po': 0, 'Fa': 0, 'TA': 0, 'Gd': 1, 'Ex': 1})\n\nsns.catplot(data=full_df, x='Heating', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='HeatingQC', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='IsGasHeating', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='IsHeatingGood', y='SalePriceLog', kind='box');","c2ad06e4":"fig, ax = plt.subplots(1, 2, figsize=(12, 8), constrained_layout=True)\n\nsns.countplot(data=full_df, y='CentralAir', hue='SalePriceGroup', ax=ax[0])\nsns.countplot(data=full_df, y='Electrical', hue='SalePriceGroup', ax=ax[1]);","6a4f33ff":"full_df['IsNewElectrBreakers'] = full_df['Electrical'].map({'SBrkr': 1, 'FuseF': 0, 'FuseA': 0, 'FuseP': 0, 'Mix': 0})\n\nsns.catplot(data=full_df, x='IsNewElectrBreakers', y='SalePriceLog', kind='box');","1d6ffe88":"sns.catplot(data=full_df, x='Utilities', y='SalePriceLog', kind='box');","03297d87":"full_df[full_df['Utilities'] != 'AllPub']","11d51c46":"fig, ax = plt.subplots(1, 2, figsize=(12, 8), constrained_layout=True)\n\nsns.countplot(data=full_df, y='KitchenQual', hue='SalePriceGroup', ax=ax[0])\nsns.countplot(data=full_df, y='KitchenAbvGr', hue='SalePriceGroup', ax=ax[1]);","ac6678b0":"full_df['KitchenQC'] = pd.cut(full_df['KitchenQualEnc'] * full_df['KitchenAbvGr'], [0, 2, 6])\n\nsns.countplot(data=full_df, y='KitchenQC', hue='SalePriceGroup');","fe9ce059":"fig, ax = plt.subplots(2, 2, constrained_layout=True)\n\nsns.countplot(data=full_df, y='FullBath', hue='SalePriceGroup', ax=ax[0, 0])\nsns.countplot(data=full_df, y='HalfBath', hue='SalePriceGroup', ax=ax[0, 1])\n\nsns.countplot(data=full_df, y='BsmtFullBath', hue='SalePriceGroup', ax=ax[1, 0])\nsns.countplot(data=full_df, y='BsmtHalfBath', hue='SalePriceGroup', ax=ax[1, 1]);","66e8fe37":"full_df['TotalBathrooms'] = full_df['FullBath'] + (0.5 * full_df['HalfBath']) + \\\n                                full_df['BsmtFullBath'] + (0.5 * full_df['BsmtHalfBath'])\n\nsns.countplot(data=full_df, y='TotalBathrooms', hue='SalePriceGroup')\nsns.catplot(data=full_df, x='TotalBathrooms', y='SalePriceLog', kind='box');","4a6cca32":"fig, ax = plt.subplots(1, 2, constrained_layout=True)\n\nsns.countplot(data=full_df, y='GarageType', hue='SalePriceGroup', ax=ax[0])\nsns.countplot(data=full_df, y='GarageCars', hue='SalePriceGroup', ax=ax[1]);","53037cdb":"sns.catplot(data=full_df, x='GarageType', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='GarageCars', y='SalePriceLog', kind='box');","5ed0078b":"fig, ax = plt.subplots(1, 2, figsize=(12, 8), constrained_layout=True)\n\nsns.countplot(data=full_df, y='GarageQual', hue='SalePriceGroup', ax=ax[0])\nsns.countplot(data=full_df, y='GarageCond', hue='SalePriceGroup', ax=ax[1]);","48c21372":"full_df['IsGarageCondGood'] = full_df['GarageCond'].map({'Po': 0, 'Fa': 0, 'TA': 1, 'Gd': 1, 'Ex': 1})\nfull_df['IsGarageQualGood'] = full_df['GarageQual'].map({'Po': 0, 'Fa': 0, 'TA': 1, 'Gd': 1, 'Ex': 1})\nfull_df['GarageQC'] = full_df['GarageQualEnc'] + full_df['GarageCondEnc']\n\nsns.catplot(data=full_df, x='IsGarageQualGood', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='IsGarageCondGood', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='GarageQC', y='SalePriceLog', kind='box');","bb25616a":"sns.countplot(data=full_df, y='GarageFinish', hue='SalePriceGroup')\nsns.catplot(data=full_df, x='GarageFinish', y='SalePriceLog', kind='box');","24d7a35a":"sns.lmplot(data=full_df, x='GarageArea', y='SalePriceLog', hue='SalePriceGroup');","66c5a144":"full_df['GarageAreaPerCar'] = full_df['GarageArea'] \/ full_df['GarageCars']\n\nsns.lmplot(data=full_df, x='GarageAreaPerCar', y='SalePriceLog');","3af8bf41":"sns.displot(full_df['WoodDeckSF']);","a30c59e6":"full_df['HasWoodDeck'] = (full_df['WoodDeckSF'] > 0) * 1\nfull_df['WoodDeckGroups'] = pd.cut(full_df['WoodDeckSF'], bins=[-1, 1, 200, 500, 2000], labels=['None', 'Small', 'Average', 'Large'])\n\nsns.catplot(data=full_df, x='HasWoodDeck', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='WoodDeckGroups', y='SalePriceLog', kind='box');","93570964":"full_df['TotalPorchNumber'] = (full_df['OpenPorchSF'] > 0) * 1 +(full_df['EnclosedPorch'] > 0) * 1 + (full_df['3SsnPorch'] > 0) * 1 + (full_df['ScreenPorch'] > 0) * 1\nfull_df['HasPorch'] = (full_df['TotalPorchNumber'] > 0) * 1\nfull_df['HasMultiplePorches'] = (full_df['TotalPorchNumber'] > 1) * 1\n\nsns.catplot(data=full_df, x='HasPorch', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='HasMultiplePorches', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='TotalPorchNumber', y='SalePriceLog', kind='box');","d560068c":"sns.displot(full_df['OpenPorchSF'])\nsns.displot(full_df[full_df['OpenPorchSF'] > 0]['OpenPorchSF'])\nsns.displot(np.log(full_df[full_df['OpenPorchSF'] > 0]['OpenPorchSF']));","40e3b61f":"full_df[full_df['OpenPorchSF'] > 0]['OpenPorchSF'].describe()","12593ade":"full_df['OpenPorchGroups'] = pd.cut(full_df['OpenPorchSF'], bins=[-1, 1, 40, 70, 1000], labels=['None', 'Small', 'Average', 'Large'])\n\nsns.catplot(data=full_df, x='OpenPorchGroups', y='SalePriceLog', kind='box');","6223fa93":"sns.displot(full_df['EnclosedPorch'])\nsns.displot(full_df[full_df['EnclosedPorch'] > 0]['EnclosedPorch']);","6ea8b740":"full_df['HasEnclosedPorch'] = (full_df['EnclosedPorch'] > 0) * 1\n\nsns.catplot(data=full_df, x='HasEnclosedPorch', y='SalePriceLog', kind='box');","814df034":"sns.displot(full_df['3SsnPorch'])\nsns.displot(full_df[full_df['3SsnPorch'] > 0]['3SsnPorch']);","f55e9d2f":"full_df['Has3SsnPorch'] = (full_df['3SsnPorch'] > 0) * 1\n\nsns.catplot(data=full_df, x='Has3SsnPorch', y='SalePriceLog', kind='box');","5fe421d6":"sns.displot(full_df['ScreenPorch'])\nsns.displot(full_df[full_df['ScreenPorch'] > 0]['ScreenPorch']);","34f79f9e":"full_df['HasScreenPorch'] = (full_df['ScreenPorch'] > 0) * 1\n\nsns.catplot(data=full_df, x='HasScreenPorch', y='SalePriceLog', kind='box');","f585ce53":"fig, ax = plt.subplots(1, 2, constrained_layout=True)\n\nsns.countplot(data=full_df, y='Fireplaces', hue='SalePriceGroup', ax=ax[0])\nsns.countplot(data=full_df, y='FireplaceQu', hue='SalePriceGroup', ax=ax[1]);","f89c479b":"sns.countplot(data=full_df, y='PoolQC', hue='SalePriceGroup')\nsns.catplot(data=full_df, x='PoolQC', y='SalePriceLog', kind='box');","b25af3bf":"full_df[(full_df['SalePriceGroup'] == '25% - 50%') & (full_df['PoolQC'] == 'Gd')][[\n    'SalePrice',\n    'PoolQC',\n    'PoolArea',\n    'TotRmsAbvGrd',\n    'LotArea',\n    'GrLivArea',\n    'Neighborhood',\n]]","f8e2dfbf":"sns.countplot(data=full_df, y=\"Fence\", hue=\"SalePriceGroup\");","1762330f":"sns.catplot(data=full_df, x='MiscFeature', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='MiscFeature', y='MiscVal', kind='box');","22795af3":"full_df['Shed'] = (full_df['MiscFeature'] == 'Shed') * 1 * full_df['MiscVal']\nfull_df['2ndGarage'] = (full_df['MiscFeature'] == 'Gar2') * 1 * full_df['MiscVal']\nfull_df['TenisCourt'] = (full_df['MiscFeature'] == 'TenC') * 1 * full_df['MiscVal']\nfull_df['OtherFeature'] = (full_df['MiscFeature'] == 'Othr') * 1 * full_df['MiscVal']","09bbaee4":"full_df['MiscFeature'].value_counts()","d3279519":"full_df[full_df['MiscFeature'].isin(['Othr', 'Gar2', 'TenC'])][['MiscFeature', 'MiscVal', 'SalePrice', 'SalePriceGroup']]","66875177":"full_df['YrSold'].unique()","b1456817":"sns.countplot(data=full_df, y='SaleType', hue='SalePriceGroup');","dec30301":"sns.catplot(data=full_df, x='SaleType', y='SalePriceLog', kind='box');","16021314":"full_df['SaleTypeGroup'] = full_df['SaleType'].map({\n    'WD': 'WD',\n    'CWD': 'WD',\n    'New': 'New',\n    'COD': 'COD',\n    'Con': 'Contract',\n    'ConLD': 'Contract',\n    'ConLw': 'Contract',\n    'ConLI': 'Contract',\n    'Oth': 'Other'\n})\n\nsns.catplot(data=full_df, x='SaleTypeGroup', y='SalePriceLog', kind='box');","d8df24a9":"full_df.groupby(['MoSold', 'YrSold'])[['SalePrice']].median().plot();","4d03d1ee":"dataframe['MoSoldInt'] = dataframe['MoSold'].astype(int)\n\nfull_df['Season'] = full_df['MoSold'].map({\n    '12': 4, '1': 4, '2': 4,\n    '3': 1, '4': 1, '5': 1, \n    '6': 2, '7': 2, '8': 2, \n    '9': 3, '10': 3, '11': 3,\n})\n\nsns.catplot(data=full_df, x='MoSoldInt', y='SalePriceLog', kind='box')\nsns.catplot(data=full_df, x='Season', y='SalePriceLog', kind='box');","24e38bb2":"full_df['InflationFactor'] = full_df['YrSold'].astype(int) - 2006\n\nsns.catplot(data=full_df, x='InflationFactor', y='SalePriceLog', kind='box');","43f115de":"sns.countplot(data=full_df, y='SaleCondition', hue='SalePriceGroup')\nsns.catplot(data=full_df, x='SaleCondition', y='SalePriceLog', kind='box');","d60afcd9":"full_df['SaleInteraction'] = full_df['SaleTypeGroup'] + full_df['SaleCondition']\n\ng = sns.catplot(data=full_df, x='SaleInteraction', y='SalePriceLog', kind='box')\ng.fig.set_figwidth(40)","aba7ded7":"corr_features = num_features + enc_cat_features\n\nplt.figure(figsize=(80, 70))\nsns.heatmap(train_df[corr_features + ['SalePrice']].corr(), annot=True, square=True, cmap='coolwarm', cbar=False);","c4e5a525":"features = num_features + enc_cat_features","3d758c57":"from sklearn.linear_model import LassoCV\n\nl1_regressor = LassoCV(\n    alphas=[0.1, 0.2, 0.4, 0.6, 0.8, 1],\n    n_jobs=-1,\n    random_state=42,\n)\n\nl1_selector = SelectFromModel(l1_regressor, max_features=30)\nl1_selector.fit(train_df[features], train_df['SalePrice'])\n\ntemp_X = l1_selector.transform(train_df[features])\n\nselected_features = pd.DataFrame(l1_selector.inverse_transform(temp_X), \n                                 index=train_df[features].index,\n                                 columns=train_df[features].columns)\n\nselected_columns = selected_features.columns[selected_features.var() != 0]\nselected_columns","1f6ebe9b":"from sklearn.ensemble import RandomForestRegressor\n\nrandom_forest_regressor = RandomForestRegressor(\n    max_depth=15,\n    n_estimators=1000,\n)\n\nrf_selector = SelectFromModel(random_forest_regressor, max_features=30)\nrf_selector.fit(train_df[features], train_df['SalePrice'])\n\ntemp_X = rf_selector.transform(train_df[features])\n\nselected_features = pd.DataFrame(rf_selector.inverse_transform(temp_X), \n                                 index=train_df[features].index,\n                                 columns=train_df[features].columns)\n\nselected_columns = selected_features.columns[selected_features.var() != 0]\nselected_columns","4a43450c":"price_corr_df = pd.DataFrame()\nprice_corr_df['feature'] = corr_features\nprice_corr_df['corralation'] = [train_df[feature].corr(train_df['SalePrice'], 'spearman') for feature in corr_features]\nprice_corr_df.sort_values('corralation', ascending=[0], inplace=True)\n\nplt.figure(figsize=(6, 0.25 * len(features)))\nsns.barplot(data=price_corr_df, x='corralation', y='feature', orient='h');","c0573126":"<img style=\"margin-left: 0\" src=\"https:\/\/na.rdcpix.com\/953932278\/9ab1219892c704d4811c173a86816eb4w-c0xd-w685_h860_q80.jpg\" \/>\n\n**Bathrooms** are also important and there two types of bathrooms: \n- full bathrooms - a sink, a shower, a bathtub, and a toilet\n- and half bathrooms - a toilet and a sink only\n\n**Bathrooms** can be located **above ground** or in **the basement**. Large part of houses did not have bathrooms in basements. Half bathrooms in the basement is rare and only some houses had full bathrooms in their basements.\n\nMore Information: \n* https:\/\/www.realtor.com\/advice\/sell\/if-i-take-out-the-tub-does-a-bathroom-still-count-as-a-full-bath\n* https:\/\/www.thetruthaboutrealty.com\/half-bath-vs-full-bath-wheres-the-value\/","a21f7564":"**SalePrice** distribution is asymmetrical and right skewed.\n\nWe may want to **apply log transformation** (or more complex transformation) to normalize the SalePrice shape. ","ba82115b":"## House Exterior Coverage\n\n<img style=\"margin-left: 0\" src=\"https:\/\/i.pinimg.com\/originals\/f7\/89\/62\/f7896244b88d71a376c8bfb3f3a7d95f.jpg\" width=\"600px\" \/>\n\n**Exterior coverage** is a material that was used to decorate raw house exterior. Here is type of material we see in the dataset:\n- Asbestos Shingles\n- Asphalt Shingles\n- Brick Common\n- Brick Face\n- Cinder Block\n- Cement Board\n- Hard Board\n- Imitation Stucco\n- Metal Siding\n- Plywood\n- PreCast\t\n- Stone\n- Stucco\n- Vinyl Siding\n- Wood Siding\n- Wood Shingles\n- Other\n\nMore Info:\n- https:\/\/www.homestratosphere.com\/types-exterior-siding-home\/","86f6e0d7":"## Heating, Air Condition and Electrical Systems, Utilities\n\n<img style=\"margin-left: 0\" src=\"https:\/\/www.longrefrigeration.com\/wp-content\/uploads\/2018\/01\/Depositphotos_84681734_m-2015.jpg\" width=\"600px\" \/>","371985f7":"What about **SalePrice** central tendency?","0e8bff1f":"SalePrice is beatifully going up as we expect!","3c082b28":"Let's see how **SalePrice** oscillated during given five years:","aaac54d8":"Onece we filled all missing values in our dataset, we can think about encoding categorical features:","7cbbaa33":"Three bins diffentiate houses well from what we can see on the boxplot.","7201acbc":"### Open Porch\n<img style=\"margin-left: 0\" src=\"https:\/\/imagesvc.meredithcorp.io\/v3\/mm\/image?url=https%3A%2F%2Fstatic.onecms.io%2Fwp-content%2Fuploads%2Fsites%2F24%2F2017%2F03%2Fbefore-after-porch-outdoor-living-room-porch-2395402-1.jpg&q=85\" width=\"600px\" \/>\n\n**Open Porch** is the most common type of porches. Its distribution is **right** skewed:","61d543d7":"# House Properties and SalePrice Relations\n\nThis is a point where we start our journey into the real estate world \ud83c\udf89","c785fe90":"## Sale Price Distribution\n\nFirst things goes first. Let's see SalePrice distribution shape:","c363c3a4":"<img style=\"margin-left: 0\" src=\"https:\/\/i.pinimg.com\/736x\/d2\/41\/da\/d241da589a358ca41be75dbacb968815.jpg\" \/>\n\n**Basement** is part of house that located below the ground. \n\nWhen it's **finished**, basement can be pretty helpfull. There may be located a bathroom or cozy corner for the rest.\n\nWhile **basement area** is not that attractive as above ground one, it still strongly correlates with **SalePrice** (but a non-linear line would fit this relation better).\n\n**Basement area** has right skewed distribution and may require log transformation.","b4df9f59":"To reduce noice in Garage Quality and Condition feature, we reduce them to flags:","13f17a17":"## Bathroom Properties","4ef96de1":"**SalePrice** seems to be linearly dependent on the **Frontage**. \nWider houses are more valuable than \"deep\" one. A wider lot will allow for a larger house, and often allow for more space between homes or buildings. Wide lots also allow decent parking on front streets or duplexes to be built on the lot as long as the zoning permits it","e2d9287e":"However, PUD doesn't seem to affect the sale price.","feddaf88":"## House Access\n\n<img style=\"margin-left: 0\" src=\"https:\/\/junkmailimages.blob.core.windows.net\/large\/6358c1a8736142cbb3f23b492d08fbe0.jpg\" width=\"600px\" \/>","2e799ab2":"Larger part of the houses have only **1 floor**:","af4fca4e":"Dataset sale history touched the **Great Recession** (2007 - 2009). During that time, median **SalePrice** went down and started to go up in the end of 2009 and beginning of 2010. \n\nSo **YrSold** was suppose to impact **SalePrice**.\n\nIt doesn't seem like **YrSold** and **MoSold** are sources of **SalePrice** leakage. There is a **little correlation** between them according to the correlation heatmap. This is true that we would not have this information if we had ran a model in production. Even so, we still could use the current month and year to predict sale price of the house with an assumption that it might be bought this month\/year. \n\nSince **YrSold** feature seems to be usefull, let's check any price changes taking into account house purchase season:","d6a32bb2":"## Room Number, Lot and Living Areas, Floor Areas\n\n<img style=\"margin-left: 0\" src=\"https:\/\/alphabet.ge\/126\/budget-double-or-twin-room.jpg\" width=\"600px\" \/>\n\n**Living area** is a total area od internal part of the house where people spend most of the time being inside of the house.\n\nLet's check **living area** distribution:","2a044dbf":"**Poured Contrete** foundation is popular in >50% tier. It seems to be a **modern way** to found houses. The rest of types may be just **old fashion**.","4148ccc0":"## House Location: Neighborhood, Zoning and Additional Conditions\n\n<img style=\"margin-left: 0\" src=\"https:\/\/www.lendinghome.com\/blog\/wp-content\/uploads\/2018\/11\/houses-in-the-same-neighborhood.jpg\" width=\"600px\" \/>","29116beb":"**SalePrices** were collected along 5 year period. This means that they most likely were affected by inflation\/year demand as well. This may matter for us, because theoretically similar houses could have been sold with a different price (depending on **YrSold**). \n\nAs a simple solution, we can assume all price changes with respect to baseline year (like 2006): ","79e73a97":"**Total Room Number** is connected to **Living Area** (correlation - **0.81**). The more living area, the more rooms normally present.\n\nRoom number seems to correlate with SalePrice as well (correlation - **0.54**).","2f637f49":"**Garage area** correlates with **SalePrice**. It correlates with **GarageCars** capacity as well (the more garage area, the bigger cars it can hold):","3881e33f":"## Sale Information\n\n<img style=\"margin-left: 0\" src=\"https:\/\/www.efficy.com\/wp-content\/uploads\/2020\/02\/Sales-negociation-closing-900x412.jpg\" width=\"600px\" \/>\n\n**Sale type and condition** could adjust the **SalePrice**. In overall, our dataset holds information about **5 years** of house sale activities (2006 - 2010):","16275c23":"With this number of features, we would like to quickly separate them into two groups by type: **numerical** and **categorical features**. This may be handy further during data exploration.","efb2472d":"## Misc Features\n\n<img style=\"margin-left: 0\" src=\"https:\/\/www.homebase.co.uk\/-\/media\/uk%20images\/homebase\/ideas%20and%20advice\/garden%20and%20outdoor\/shed%20garden%20buildings%20and%20storage\/how%20to%20build%20a%20shed\/h2-build-a-shed-header-image-960x480.jpeg\" width=\"600px\" \/>\n\n\nHouses might have **additional valuable features** that are described in **MiscX** columns:\n\n- Shed (over 100 $ft^2$, +$500 on avg)\n\n- Second Garage (+$8300 on avg)\n\n- Tenis Court (+$2k on avg)\n\n- Other Features (+$3250 on avg) ","9b0e8feb":"## References\n- https:\/\/www.kaggle.com\/humananalog\/xgboost-lasso","df3c39cf":"Most of the houses have \"AllPub\" **Utilities** feature has only one value in the dataset. There are a few NaN values and one \"NoSeWa\". It should be safe to drop this feature\/column.","8ad58505":"# Summary\n\nIn this notebook, we tried to understand what defined a sale price in Ames house dataset. We reviewed all house features and dug into real estate domain as well as engineered new features along the way.\n\nIn the second part, we will be modeling sale price regression based on insights from this analysis \ud83e\uddea\n\nIf you find this notebook useful, feel free to upvote it \ud83d\ude4c\nIf you know how to improve this analysis and what I coult miss, please share you thoughts in comments \ud83c\udfa4 \n\n<strong>Github Repo:<\/strong> https:\/\/github.com\/roma-glushko\/kaggle-house-prices","170be05b":"**Floor areas** correlates with **SalePrice**. Namely, **SalePrice** seems to be linearly dependent on 1st floor area (and slightly on the 2nd floor area).\n\nIf we **summ 1st and 2nd floar areas**, we will get the **living area** feature. \n\nWe nees to pay attension on the **finish quality** of living area as some house have living areas finished in **low quality**:","49929d42":"### Three Season Porch\n\n<img style=\"margin-left: 0\" src=\"https:\/\/lecybros.com\/wp-content\/uploads\/2018\/01\/photo-009.jpg?fd06b2\" width=\"600px\" \/>\n\nA **three season porch** is an enclosed addition to a house, and is oftentimes called a sun room. Unlike a four season porch, the three season porch is not insulated (it might be chilly to be there in winter).\n\nMore Info:\n- https:\/\/northfieldconstruction.com\/tips-for-building-a-three-season-porch\/","d7fb4e7e":"## Fence\n\n<img style=\"margin-left: 0\" src=\"https:\/\/irp-cdn.multiscreensite.com\/953fb570\/dms3rep\/multi\/fence-installation-repair-services.jpg\" width=\"600px\" \/>\n\n**Expensive houses** (>50%) have good **privacy\/wood fences**. **Cheap houses** (<50%) have **minimal privacy\/wood fences**.\n\nGood portion of lots did **not have any of fences**:","f2fb462c":"It's typical to say that house contains \"one and half bathrooms\", so we can think about a simple **bathroom formula** to sum up a house bathrooms:","857311c4":"## Basement Exposure\n\n<img style=\"margin-left: 0\" src=\"https:\/\/i.pinimg.com\/originals\/28\/4d\/e6\/284de644ff254abcda378ee0d2c5c04a.jpg\" width=\"600px\" \/>\n\n**Basement exposure** is one more way to describe how outstanding houses were. Lots with **basement exposure** dominates in 75%+ tier and the most common is to have **no exposure**:","8dd5e3be":"Also, we can see a correlation between **garage car** capacity and house **sale price**:","0bb6b4c5":"**Garage area per car** doesn't seem to correlate much with **SalePrice**:","a229451a":"Dataset contains three features related to **house building style**:\n- **house style** - a house structure type with respect to levels and stories\n- **dwellig type** - a house family capacity type\n- **dwelling subclass** - a house structure type plus some additional conditions","397c26c6":"<img style=\"margin-left: 0\" src=\"https:\/\/i.pinimg.com\/originals\/83\/e3\/55\/83e3550d85f3032b7c7905a1e8740d44.jpg\" width=\"600px\" \/>\n\nA **Planned Unit Development (PUD)** is a community of homes that could look like single family residences. PUDs often have amenities beyond the scope of most condos, like private tennis courts and outdoor playgrounds that are maintained by HOA fees and only open to homeowners. \n\nMore Info: https:\/\/www.redfin.com\/guides\/what-is-a-planned-unit-development","b94c546d":"### Screen Porch\n\n<img style=\"margin-left: 0\" src=\"https:\/\/cdnassets.hw.net\/65\/55\/7098b3b74a659c0e0e47e2a48822\/figure-00.jpg\" width=\"600px\" \/>\n\nA **screened porch** is a type of porch on or near the exterior of a house that has been covered by window screens in order to hinder insects, debris, and other undesirable objects from entering the area inside the screen","c5880fde":"Based on list of neighborhoods where expensive houses tended to be sold, we can call them **\"elite\" neighborhoods** and create a flag to mark them:","48de73f3":"## Roof Properties\n\n","d31a71a1":"**Living area** supposes to impact **SalePrice** and this is what we see on the next plot:","1a9870f2":"There is an outlier with SalePrice < 50% and pool installed:","cbee58ba":"Recently remodeled houses had **higher price**. Remodeling improves condition of the house, so there is no surprises.\n\nLet's check how time that passed since remodeling impacts sale price:","f4adc31b":"<img style=\"margin-left: 0\" src=\"https:\/\/i.pinimg.com\/originals\/73\/42\/79\/7342799b300e2a8a6493426909d6beaa.jpg\" \/>\n\n**Frontage** is width of a lot, measured at the front part of the lot. **Footage** correlates with **LotArea** (the bigger lot area, the bigger frontage). **Frontage** is also a skewed feature:\n\nMore Info: https:\/\/www.gimme-shelter.com\/frontage-50043\/","726e496d":"<img style=\"margin-left: 0\" src=\"https:\/\/cdn.coloradoparent.com\/2019\/02\/CSG1902_YourTurn_CulDeSac.jpg\" width=\"600px\" \/>\n\n**Lot configuration** is a position of the house with respect to neighbors. **Inside** house units are the most frequent in the dataset.\n\n**Dead end** units (**Cul De Sac**) had higher price and bigger percentage of 75%+ tier houses. This type of configuration is typically more silent (because of dead end there are less car enters the street) and it could provide more privacy.\n\nLarge percentage of **frontage on 3 sides** units were from 50%+ tiers.\n\nMore info: \n- https:\/\/www.thetruthaboutrealty.com\/real-estate-lot-types\/\n- https:\/\/www.fool.com\/millionacres\/real-estate-market\/articles\/pros-and-cons-of-living-in-a-cul-de-sac\/","04323c94":"The **50%** of houses had price **$163 000** and less. 25%, 50% and 75% may define a price tiers for us to simplify understand relation between feature values and **SalePrice** data. With this in mind, let's add a new column **SalePriceGroup** with four tiers:\n\n**Cheap Groups**:\n* Less than 25% houses (<=$129k)\n    \n* Houses from 25%-50% range (>\\\\$129k and <=\\\\$163k)\n    \n**Expensive Groups**:\n* Houses from **50%-75%** range (>\\\\$163k and <=\\\\$214k)\n    \n* **75%** and more ","a1a1d6f7":"## House Types and Styles\n\n<img style=\"margin-left: 0\" src=\"https:\/\/st.hzcdn.com\/simgs\/pictures\/exteriors\/exterior-knight-construction-design-inc-img~333123010ec2c3ca_4-3527-1-e24d363.jpg\" width=\"600px\" \/>","2ec105e9":"Let's try to interact **SaleType** and **SaleCondition**:","525df76a":"Samples with a functionality other than \"Typical\" **losses sale prices drastically**. \n\nOther types of functionality were much less frequent. So we may benefit from turning **Functional** feature into flag or reduce number of groups:","26df6ffa":"The exact absolute area of low quality doesn't tell us much information. We may try to get how it related to the whole **living area**:","a25d24ce":"<img style=\"margin-left: 0\" src=\"https:\/\/hips.hearstapps.com\/hmg-prod.s3.amazonaws.com\/images\/ph163819-priority-1580934887.jpg\" width=\"600px\" \/>\n\n**Kitchen** is an important part of any house. There are two metrics that decribe kitchens:","7e1ee537":"**75%+ tier** houses had mostly good or excellent exterior quality. They also had average or good conditions.\n\nHouses from **50%- tier** had mostly average quality and average condition.","7303798e":"We see a linear correlation and raising the SalePrice as the **living area** goes up\/right. It's not surprising as living area is a common metric that affects home price.\n\nThere are two outliers. Their area more than 4,000 $ft^2$ but the sale prices are below than an average. Let's remove them from the dataset:","0642e9dd":"Attached and Builtin **garage types** dominate among expensive houses (>50% tier). Their garages commonly were built to contain 2 or 3 cars. \nDetached, CarPort types dominates among cheap houses (<50% tier). Their garage capacity is 1 car. No garages are also dominates among cheap houses.","76378e58":"## Garage Properties\n\n<img style=\"margin-left: 0\" src=\"https:\/\/www.deldenmfg.com\/images\/homepage-slideshow\/home5.jpg\" width=\"600px\" \/>","1c0042e9":"Thare are 25 neighborhoods in total in our list. This is a lot of options which may bring some noice to models.\n\nWe can think about grouping neighborhoods into smaller number of groups based on the average house price (ala mean encoding):","7cd47f2d":"Random Forest Selector Results:","76ddb039":"# Ames House Price Prediction: Domain-driven EDA\n\n<img style=\"margin-left: 0; margin-bottom: 20px\" width=\"600px\" src=\"https:\/\/livability.com\/sites\/default\/files\/151SUBAME031.jpg\" \/>\n\n<p>\nIn this notebook, we will explore factores that impacted sale price of houses in Ames, Iowa. <br\/>\nThe goal is to make sense of provided dataset and turn these insights into actions during <a href=\"https:\/\/www.kaggle.com\/glushko\/house-prices-regression-modelling-part-ii\">the second modelling part<\/a>. <br\/>\nApart from that, we will try to describe the analysis in the <strong>domain-driven<\/strong> way and spend some time understanding meaning of features in the real estate field.\n<\/p>\n\n<strong>Don't hesitate to upvote this notebook if you find it useful \ud83d\udcab<\/strong>","1167a575":"We can think about **single metric** to combine kitchen number and quality. With a help of binning, we can divide all houses into \"Bad Quality\" and \"Good Quality\" kitchens:","65b97a67":"Just 40 houses had low quality finished area. It took up to 30% of living area.","7ea1a667":"## Fireplaces\n<img style=\"margin-left: 0\" src=\"https:\/\/www.fpwhs.com\/shop\/wp-content\/uploads\/Skope-E135-LOW.jpg\" width=\"600px\" \/>","80a77f48":"<img style=\"margin-left: 0\" src=\"https:\/\/i.pinimg.com\/originals\/c7\/88\/e9\/c788e90182e94319aecb6629ddfcede2.jpg\" \/>\n\n**Gable** and **hip** are two the most popular **roof styles** in the training set. The most popular **roof material** is composite shingles:\n\nMore Info:\n- http:\/\/aroyalroofing.com\/composite-shingles\/\n- https:\/\/www.cupapizarras.com\/int\/news\/10-types-of-roofs\/","5ba2da71":"**Gable** and **hip** are the most popular choices. Let's group our house roof styles by popularity:","c65cb567":"Also, let's try to bin these metrics as we get a lot of categories:","d4481706":"**Sale Type** is a way how house was bought and rights on property was transfered.\n\nThere are three types of sales:\n\n- A **warranty deed** is a document used in real estate that provides the greatest amount of protection to the purchaser of a property. It warrants that the owner owns the property free and clear of any outstanding liens, mortgages, or other encumbrances against it. With warranty deeds, there are three ways on how sale price could be paid:\n    - **Conventinal mortgage** - is any type of home buyer\u2019s loan that is not offered or secured by a government entity. Instead, conventional mortgages are available through private lenders, such as banks, credit unions, and mortgage companies.\n    - **VA Loan** - is a mortgage loan in the United States guaranteed by the United States Department of Veterans Affairs (VA)\n    - **Cash**\n\n- A **land contract** can also be called a contract for deed or agreement for deed and works similarly to a note and mortgage. However, instead of the buyer gaining title to the property, the seller remains on title until the debt is repaid in full. Contacts could the following types:\n    - 15% down payment and regular intrest rate\n    - Low down payment and low intrest rate\n    - Low intrested rate\/Low Down payment\n\n- **Court Officer Deed** - is used only by court appointed or supervised fiduciaries, such as executors, administrators, conservators, and trustees, and may have fewer warranties than the general warranty deed.\n- **Other types**\n\nThere is also \"**home just constructed and sold**\" sale type. However, this doesn't seem to tell us much about a sale contract, but it's definitelly correlates with **SalePrice**. This types of houses had higher price as every brand new\/unused thing.\n\nMore Info:\n- https:\/\/www.investopedia.com\/terms\/w\/warranty-deed.asp\n- https:\/\/www.investopedia.com\/terms\/c\/conventionalmortgage.asp\n- https:\/\/en.wikipedia.org\/wiki\/VA_loan\n- https:\/\/danilsonlaw.com\/five-kinds-property-deeds-need-know\/\n- https:\/\/www.thebalance.com\/choosing-a-down-payment-315602\n- https:\/\/www.investopedia.com\/terms\/d\/down_payment.asp","22fe77fe":"Houses from 50%+ tier have **average and higher overall** condition. Lots from 50%- tier have a higher percentage among **below average condition** houses, but generally they are included to all condition groups.\n\n**Overall Material Quality** seems to differentiate expensive houses from cheap ones. Lots from 50%- tier dominates in average and below quality groups. In above average quality groups, there are a bigger percentage of houses from 50%+ tier (particularly, lots from 75%+ tier prevail in \"very good\" and above quality groups).\n\nLet's try to create **Overall House QC** metric:","e76d2542":"Another metric of basement usefulness is whenever **basement** is **finished** or not and how exactly:","29e799c1":"<img style=\"margin-left: 0\" src=\"https:\/\/res.cloudinary.com\/trends-publishing\/image\/upload\/ar_1.8,c_thumb,dpr_2.0,g_center,w_800\/f_auto,q_auto:best\/0152817.jpg\" width=\"600px\" \/>","ab7c9c64":"Next feature is **Total Room Number** (above ground). \n\n**Total Room Number** is also right skewed, so we will need to trasform it:","e03a3d2b":"# Feature Correlations\n\nLet's have an overview of feature correlations and importance (and specifically correlations with SalePrice):","c734f50a":"We would like to separate each of the additional features into **new features** that will contain feature value in dollars:","2c99e437":"**Most of the cheap houses** (<50% tier) were built in between of **1872 and 1970**.\n**Expensive houses (>50% tier)** had been built after that time.\n\nWe can assume that people prefer to **buy newly build** houses. They may have better condition and better building techniques involved. \n\nWere there any houses that were sold exactly in a year they had been built\/remodeled?","f88fc2aa":"Most of the houses **did not have** any **additional features**. Most popular additional feature is a **shed**. \n\nThe rest of the features like second garage, tenis court or other types were in a few lots. This is too rare to let models learn from this information. ","506da118":"To connect **Living Area** with **Room Number**, we can calculate an **average room area** (which happens to be skewed as well \ud83d\ude0c): ","467e937a":"In addition, **House Style** contains information about house state (finished\/unfinished) which affects **SalePrice**. Finished houses tended to be more expensive:","bb56130e":"**Basement** area may be finished in different ways. It can be turned into recreation, living quarters or bathrooms:\n\nMore Info: \n- https:\/\/www.cidbasements.com\/qualifies-finished-basement","7d1eeb9f":"Most of the **cheap houses** (<50%) did **not have fireplaces** or **have one** (most of the them were in **good or below avarage quality**). \n\nMost of the **expensive houses** have **1 or 2 fireplaces** with e**xcellent, good or average quality**.","f074c3b4":"## Porches\n\n**Porch** is a room or gallery located in front of an entrance of a building. Our training dataset has the whole four types of porches:\n- Open Porch\n- Enclosed Porch\n- Three Season Porch\n- Screen Porch\n\nFrom the distribution plots, we can see that **open porch** is the **most common** type and **three season** one is the **most rare**. Also, most of homes had one porch and 317 lots had 2 porches and only 5 houses had 3 porches:","9e1e15db":"**New houses** were bought when they were **partially complete**.","da9474e5":"## Masonry Veneer\n\n<img style=\"margin-left: 0\" src=\"https:\/\/img.tfd.com\/architecture\/f0619-02.png\" width=\"300px\" \/>\n\n**Masonry Veneer** -  is a construction material used on the exterior walls of homes and commercial buildings. It is comprised of thin pieces of brick or stone, and gives the appearance of solid masonry without the associated weight and cost.\n\nMost of the houses did not have **masonry veneers**. **Stone** and **brick face** material prevails in 50%+ tier. Cheaper houses eigher did not have **masonry veneers** at all or had it covered with **brick common** material:\n\nMore Info:\n- https:\/\/www.wisegeek.com\/what-is-masonry-veneer.htm","e47e702d":"Based on this information, let's engineer new features that:\n- indicate gas-based heating systems (modern type of heating)\n- simplify heating ranking and introduce **IsHeatingGood** flag","00d3eb63":"To separate old house styles from a new, we can engineer a **IsModernHouseType** flag (which correlates with **SalePrice**; Newer houses are more expensive then old one):","abfdfd4e":"## Foundation and Basement","6c3e5549":"Most homes were built on **near flat\/gentle slope** land. Large part of houses with **land slopes** were in 75%+ tier. We may assume that some kind of house\/landscape design work were done for those lots:","c062fe36":"**House Style** contains information about house height in stories. A **story** is any level part of a building with a floor that could be used by people. \n\n**House Style** correlates with **sale prices**.\n**1Story, 1.5Fin and 2Story** are the most popular options. **2Story** houses were especially popular among **75%+** house tier.","83ad27f4":"**Building Type** has 4 types:\n- **1 family house**\n- **2 family conversion** house - 1 family house that was upgraded to 2 family\n- **Duplex** - a multi-family home that has two units in one building (regardless of how those homes are arranged)\n- **Townhouse** - a kind of <a href=\"https:\/\/en.wikipedia.org\/wiki\/Terraced_house\">terraced house<\/a>. Townhouses may be in inside or end unit configuration.\n\n**Building Type** correlates with **sale price**. \n\n**1Fam** and **TwnhsE** types were preferable among 75% tier houses. Generally, **1 family** houses was the most popular house style in the datbase. \n\n**Inside townhouses** costed less than **end unit** ones. End units have only one \"neighbor\" and potentially more windows (so more lights inside of the house) and better air conditioning.","d2951ff4":"Let's see how we can define **Is External Condition Good** flag and also combine **ExterQual** and **ExterCond** features:","15383ced":"As we can see, the longer time has passed since built\/remodeling the cheaper house would be. Namely, most of expensive houses had been remodeled **25 years ago or less** before they were sold. Also, the most expensive houses were built **20 years ago or less**.\n\nNeeds to say that the exact year of building or remodeling is not important for us and may bring a lot of noice to the model. We would like to **bin age metrics** instead using **10-20** year bins (pretty much like on the plots).","8be061bc":"**MSSubClass** is a combined feature. It contains **House Style** information, house style age and PUD information.\n\n75% tier houses tended to be built in a **new house styles** (1946 and newer) with a **finished** state. In contrast, 25% tier houses were build in **older house styles** and\/or **unfinished**:","ceccacbe":"### Enclosed Porch\n\n<img style=\"margin-left: 0\" src=\"https:\/\/media.angieslist.com\/s3fs-public\/styles\/widescreen_large\/public\/porch.jpg?itok=yX_vZdbw\" width=\"600px\" \/>\n\nMore Info:\n- https:\/\/www.medfordoregonroofers.com\/blog\/construction-services\/what-are-the-benefits-of-enclosed-porches\/","5d9e38c3":"Essentially, **TotalBsmtSF** is a sum of **BsmtFinSF1**, **BsmtFinSF2** and **BsmtUnfSF**. ","59e6ce14":"Based on the area distribution, we can group open porches:","cc876c38":"## Dataset Overview\n\nGiven dataset has:\n* a vast number of features (**80**)\n* a relatively small number of training examples (**2918**)","7a082866":"## Wood Deck\n\n<img style=\"margin-left: 0\" src=\"https:\/\/padeckbuilder.com\/wp-content\/uploads\/2016\/03\/Cumaru-deck.jpg\" width=\"600px\" \/>\n\n**Deck** is a platform built above the ground and connected to the main building. The average deck area is between 200-300 $ft^2$.\n\nMore Info:\n- https:\/\/www.landscapingnetwork.com\/decks\/size.html","645e984a":"## Year Built and Renovate\n\n<img style=\"margin-left: 0\" src=\"https:\/\/diligentdevelopments.co.uk\/wp-content\/uploads\/2018\/09\/property-refurbishment-house-renovation.jpeg\" width=\"600px\" \/>\n\nLet's see how old were houses in the dataset and when they were remodeled:","1a40c70c":"**Living area** is right skewed. We may want to perform log transformation on it:","b5083a66":"### House Features Overview\n\nIt's easy to get lost reviewing the list of available information. So we probably would like to group features somehow meaningfully.\n\n* **House Properties**\n    * Construction Date [YearBuilt]\n    * Remodeling Date [YearRemodAdd]\n    * Dwelling Class [BldgType] and Subclass [MSSubClass]\n    * House Style [HouseStyle]\n    * Area (sq. feets) [LotArea]\n    * Shape [LotShape]\n    * Flatness [LandContour] and slope [LandSlope]\n    * Overral Material and Finish Quality Rate [OverallQual]\n    * Overral Condition Rate [OverallCond]\n    * Home Functionality [Functional]\n* **Living Area**\n    * Living Area Above Ground [GrLivArea]\n    * Low finished living area [LowQualFinSF]\n    * Total Rooms above grade (w\/o bathrooms) [TotRmsAbvGrd]\n    * First Floor Area [1stFlrSF]\n    * Second Floor Area [2ndFlrSF]\n    * Bedrooms above grade (w\/o basement bedrooms) [BedroomAbvGr]\n* **Kitchen**\n    * Kitchen Above Grade [KitchenAbvGr]\n    * Kitchen Quality [KitchenQual]\n* **Bathroom**\n    * Basement Full Bathroom [BsmtFullBath]\n    * Basement Half Bathroom [BsmtHalfBath]\n    * Full bathroom above grade [FullBath]\n    * Half bathroom above grade [HalfBath]\n* **Systems**\n    * Heating Type [Heating]\n    * Heating Quality and Condition Rate [HeatingQC]\n    * Has Central Air Conditioning? [CentralAir]\n    * Electrical System Type [Electrical]\n    * Utilities (Gas, water, septic) [Utilities]\n* **Fireplaces**\n    * Number of fireplaces [Fireplaces]\n    * Fireplace Quality [FireplaceQu]\n* **Basement**\n    * Foundation Type (stone, wood, etc) [Foundation]\n    * Basement Quality [BsmtQual]\n    * Basement Condition [BsmtCond]\n    * Basement Exposure [BsmtExposure]\n    * Basement finished area rating (1 or 2) [BsmtFinType1][BsmtFinType2]\n    * Basement Finished area (1 or 2) [BsmtFinSF1] [BsmtFinSF2]\n    * Basement Unfinished Area [BsmtUnfSF]\n    * Total Basement Area [TotalBsmtSF]\n* **Roof Properties**\n    * Roof Style [RoofStyle]\n    * Roof Material [RoofMatl]\n* **Exterior**\n    * Exterior Covering (1 or 2 materials) [Exterior1st] [Exterior2nd]\n    * Exterior Material Quality [ExterQual]\n    * Exterior Material Condition [ExterCond]\n* **Masonry veneer**\n    * Masonry Veneer Type [MasVnrType]\n    * Masonry Veneer Area [MasVnrArea]\n* **Garage**\n    * Garage Type [GarageType]\n    * Year Garage was built [GarageYrBlt]\n    * Interior Finish of the garage [GarageFinish]\n    * Garage Size (in cars) [GarageCars]\n    * Garage Area [GarageArea]\n    * Garage Quality [GarageQual]\n    * Garage Condition [GarageCond]\n* **Fence** [Fence]\n* **Porch**\n    * Wood Deck Area [WoodDeckSF]\n    * Open Porch Area (in sq ft) [OpenPorchSF]\n    * Enclosed Porch Area [EnclosedPorch]\n    * 3 seasons porch area [3SsnPorch]\n    * Screen Porch area [ScreenPorch]\n* **Pool**\n    * Pool area [PoolArea]\n    * Pool Quality [PoolQC]\n* **House Access**\n    * Road Access [Street] [LotFrontage]\n    * Alley Access [Alley]\n    * House Road Connection [LotFrontage]\n    * Paved driveway (paved, dirt, etc) [PavedDrive]\n* **House Location**\n    * Neighborhood (Physical Location) [Neighborhood]\n    * Zoning classification [MSZoning]\n    * Location Conditions (1 or 2) [Condition1][Condition2]\n    * Place where house is located in neighborhood (like an inside or a corner lot) [LotConfig]\n* **Miscellaneous Features** (elevator, 2nd garage, etc) [MiscFeature]\n    * Miscellaneous Features Value in $ [MiscVal]\n* **Sale Information**\n    * Month Sold [MM]\n    * Year Sold [YYYY]\n    * Sale Type (Warranty Deed, new, etc) [SaleType]\n    * Sale Condition (family sale, normal sale, etc) [SaleCondition]","48d08792":"**Electrical** feature seems to have more information that we need. It can be reduced to a flag features that indicated whenever a house had modern electrical breakers or old-fashion fuse boxes:","39a253c0":"todo: review in details exterior coverages and their affect on the house price","928a4064":"**Roof material** correlates with house prices.\n\nHere is an overview of roofing materials:\n- **Composite Shingle** - organic or fiberglass base that is saturated with asphalt, coated on the bottom side with asphalt, and the exposed surface impregnated with small chips of slate, schist, quartz, or ceramic granules. **The most popular option** of all roofing materials (5 dollars\/$ft^2$, 15-40 years lifetime) \n- **Wood Shingle** - made from thin, wedge-shaped pieces of natural wood, such as cedar or yellow pine, which are sawn from logs (8.25 dollars\/$ft^2$, 25-30 years lifetime)\n- **Roll Roofing** -  is made from large rolls of the same material used in composite shingles. It is frequently used in covering of sheds and small shops rather than houses (**2.5 dollars\/$ft^2$**, 5-10 years lifetime)\n- **Built-Up Roofing (Tar & Grv)** - a layered roof that is created by alternating layers of roofing felt and waterproof materials such as fiberglass, and hot tar (4 dollars\/$ft^2$, 20-30 years lifetime)\n- **Wood Shake** - thicker material than wood shingles, and they can be expected to stand up better than wood shingles to weather and UV rays (13 dollars\/$ft^2$, 35-40 years)\n- **Metal Roofing** - made from large steel panels laid on the roof deck with the seams overlapping in raised ridges that run vertically along the roof slope (13.6 dollars\/$ft^2$, 30-50 years lifetime)\n- **Clay Tile** - made from terracotta clay, but there are also ceramic tiles roofs (17.5 dollars\/$ft^2$, 100 years lifetime)\n\n**Wood** seem to be the most expensive material. \n\nMore Info:\n- https:\/\/www.inexroofingco.com\/services\/wood-shakes\/\n- https:\/\/nrc4help.com\/tar-gravel-roof\n- https:\/\/www.thespruce.com\/rolled-roofing-1821945\n- https:\/\/www.archtoolbox.com\/materials-systems\/thermal-moisture-protection\/flat-roof-membranes.html\n- https:\/\/www.diorconstruction.com\/4-benefits-of-wood-shake-roofing\/\n- https:\/\/www.thespruce.com\/best-roofing-materials-for-longevity-1821951","9dc4a5b8":"<img style=\"margin-left: 0\" src=\"https:\/\/upload.wikimedia.org\/wikipedia\/en\/8\/88\/Traditional_Side_Split_Level_Home.jpg\" width=\"600px\" \/>\n\n**Split or multilevel houses** - is a style of house in which the floor levels are staggered. There are typically two short sets of stairs, one running upward to a bedroom level, and one going downward toward a basement area.\n\n**Split foyer** is a similar two-story house that has a small entrance foyer with stairs that \"split\" \u2014 part of a flight of stairs go up (to bedrooms, for example) and part of a flight of stairs go down (usually to a family room and garage\/storage area).","eb3fbee1":"Most of the houses did **not have** wooden decks. Since we don't have any other information except deck area, we can categorize all decks by size:","45f7969e":"**WoodDeckGroups** gives more information about price distribution then **HasWoodDeck**  flag.","b1c7b01b":"**Basement Quality** and **Condition** should help us to elaborate a part of **SalePrice** that the **basement** brings:","96154d28":"**Basement Quality and Condition** show a common situation: 50%+ house tier has basements with **above average conditions** and built from **quality materials**.\n\nUsefull to see **Basement Quality and Condition** intersection:","d4a04243":"## Overall House Condition and Material Quality\n\n<img style=\"margin-left: 0\" src=\"https:\/\/www.budgetdumpster.com\/blog\/wp-content\/uploads\/2017\/01\/10536647_773081569381434_3547273328886035963_o.jpg\" width=\"600px\" \/>\n\n**Overall Condition** and **Overall Material Quality** strongly correlates with SalePrices.","665b3a3b":"**Neighborhood** and **MSZoning** did correlate with **SalePrice**.\n\n**Neighborhood** Insights\n\n- Neighborhoods with house price below the mean: IDOTRR, Swisu, DrDale, NPkVill, MeadowV, Sawyer, OldTown, Edwards, NAmes\n- Neighborhoods with house price above the mean: NoRidge, Mitchel, Crawfor, SawyerW, Timber, Somerst, CollgeCr, Gilbert, NWAmes\n- Neighborhoods with house price above 75% perct: NridgHt, CollgeCr, Crawfor, Timber, StoreBr\n\n**Zoning** Insights:\n- Zoning with house price above the mean: RL, FV\n- Zoning with house price below the mean: RM, C, RH\n\nMore Information:\n- https:\/\/www.investopedia.com\/terms\/z\/zoning.asp","754068f4":"Sinlge **TotalBathrooms** feature correlates well with **SalePrice**. Sure thing! Everyone wants to have a few bathrooms \ud83d\ude04","fc7477e4":"There are **34** features that are affected by missing values. Let's review them:\n* **FireplaceQu**, **Garage{X}**, **Alley**, **PoolQC**, **Bsmt{X}**, **MasVnr{X}**, **Fence** - we can assume that these features were not applicable to all samples that's why they are missing. It's easy to imagine houses that don't have pools, basements or fireplaces.\n* **MiscFeature** is also an optional feature that indicates additional benefits of the lot. It impacts the house sale price by **MiscVal** amount.\n* **MSSubClass** - it's hard to assume about house sub class. It could be eigher missing value or untypical house building style. Since we have only one missing value, it's make sense to replace it by mode.\n* **MSZoning**, **SaleType**, **Electrical**, **Utilities**, **Exterior{X}**, **KitchenQual** - we can assume these labels are missing\n* **Functional** - dataset description suggests to assume missing information as typical (\"Typ\")\n\nWe may impute missing features by some constant value that indicates that feature is not part of a lot:","22f49d0a":"After brief review of the terget feature, let's dig deeper into rest of the features. We will all features similiarly to what we have done in the beginning: ","d67b2cf9":"Features that we assumed missing, they can be impute by the most common values:","1cd07a4d":"### Missing Values\n\nLet's check missing information in our dataset:","a359b5c5":"Most houses had **paved streets** and paved drive connected to them and did not have **alley** accesses:","e443bd1d":"**Condition1** and **Condition2** features represent additional location advantages or disadvantages:\n- a lot might be adjacent or near off site park or forest (house sale price goes up)\n- a lot might be adjacent or near noisy street or railroad (house sale price goes down)","c5853a2a":"## Pool\n<img style=\"margin-left: 0\" src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/9\/92\/Backyardpool.jpg\" width=\"600px\" \/>\n\nJust a few lots had **pools**. **None** of houses that are cheaper than 25% had pools:","4d687b97":"The dataset covers houses that were build between 1872 and 2010 (138 years). It's 10-years old as of now (2020) which is okay for training purpose, but will be not that useful for production.\n\nHow did **YearBuild** affect **SalePrice**?","0fe1330d":"Spearman Correlation Results:","b1560a0c":"## Kitchen Properties","6f45a889":"**Central AC** seems to be an popular house feature. Most of the houses from >50% tier had it. It was not installed in cheap (<25% tier) houses.\n\nMore Info:\n- https:\/\/www.thisoldhouse.com\/heating-cooling\/21018992\/read-this-before-you-install-central-air-conditioning\n\nMost of the houses have Standard Circuit Breakers type of **Electricity**. Houses from >50% tier dominates there. The rest of options (which is fuse boxes) are hold by <50% houses. Fuse Boxes were normally installed in old-built houses.\n\nMore Info:\n- http:\/\/www.icanfixupmyhome.com\/Understanding_Home_Wiring.html\n- https:\/\/www.thespruce.com\/fuses-and-fuse-boxes-101-4122558","38566c4d":"**Lot areas** is the next feature in the queue:\n\nMost of the **lot areas** are **less than 50000 $ft^2$**. Probably, there might be some building standards that keep lot areas inside of the range.\n\nThat's why **Lot Area** just slightly correlates with **SalPrice** (correlation - **0.21**). It also one of the skewed features:","36d90054":"We can reduce amount of noice by convering **PavedDrive** feature into a flag:","82cacabd":"**Heating Types** does differentiate samples with sale price below the mean.\n\nWall, gravity, floor furneses and other heating were installed in houses that cheaper than 50% tier.\n\nIt seems like the mentioned heating systems are old fashion. \n\nHere is the YearBuilt ranges:\n- Grav - 1910-1941\n- Floor - 1949\n- OthW - 1872-1917\n- Wall - 1945-1952\n- GasW - 1880-1970\n- GasA - 1875-2010\n\nMost houses with SalePrice > 50% have from excellent to **average quality** of heating. **Lower quality** types includes mostly houses from < 50% tier.\n\nMore Info: \n- https:\/\/www.nachi.org\/gravity-furnace-inspection.htm\n- https:\/\/www.billhowe.com\/blog\/what-is-wall-furnace\n- https:\/\/sandium.com\/hvac-technology\/all-you-need-to-know-about-floor-furnace.html","c08d3c9f":"**Finished Garages** were more expensive than unfinished ones. Most of the expensive houses (>50% tier) have finished garages or roughly finished. \n\n**Unfinished garages** were sold with cheap houses (<50% tier).","4f633155":"todo: basement finish types represent the same options. Need to see if there are any oppotinity to engineer features.","8d0ce7b4":"**Mansory veneer area** seems to correlate with the **SalePrice**. Similarly, let's try to **bin** the area to reduce possible noice in the feature values (we want to separate houses without mansory veneer from ones that had it in small amount):","e544bd87":"Since **Condition1** and **Condition2** describes the same set of conditions, we can merge them into a few flags:\n- Is Adjacent to Arterial Street?\n- Is Adjacent to Feeder Street?\n- Is Adjacent to Railroad?\n- Is Near to Feeder Street?\n- Is Adjacent to Offsite Feature?\n- Is Near to Offsite Feature?","af16b8b7":"Most of garages were in **average** condition and quality:","2b43f886":"## Data Cleaning\n\nDuring the analysis, we found typos in **Exterior1st** and **Exterior2nd** values. Let's fix that noise:","5cb47681":"## LotShape and LotConfig\n\n<img style=\"margin-left: 0\" src=\"https:\/\/www.idesignarch.com\/wp-content\/uploads\/Irregular-Shaped-House-David-Jameson_1.jpg\" width=\"600px\" \/>\n\nMost of lots had a regular **shape**. Houses with irregular shape was sold with **higher price**. \n\nLots might have irregular shape due to outstanding designer work on the house look:","a1c98d92":"**LotFrontage** has ~17% of missing information. This feature may be helpful, so let's try to fill it. \n\nFrontage and lot area is a subject of regulations, hence it may depends on **Neighborhood** or **MSZoning**. **Lot area and house type** are also correlates with **frontage**. Based on this, the simplest way to impute the feature will be to find median value of frontage for each Neighborhood - MSSubClass groups.\n\n**Neighborhood** may be a part of few **MSZoning**. Out hope is that we can be more presice filling **MSZoning** if we take into account **Neighborhood** and **HouseType**.\n\n**MSSubClass** is composite feature that is partially includes **HouseStyle** information. We will use this as well to fill missing values:","bcb95e88":"Lasso Selector Results:","37797be1":"## LandContour and LandSlope"}}