{"cell_type":{"4b612160":"code","92104341":"code","602f98e5":"code","6c23e6d1":"code","60a7affb":"code","aca128c5":"code","c97a1402":"code","589231e9":"code","b679d980":"code","bc7897b7":"code","e2268f17":"code","ecfaaa33":"code","7b77c72a":"code","fa56ae30":"code","2c5f5f32":"code","33b9308b":"code","7fc3af67":"markdown","2eaf7734":"markdown","c077bf40":"markdown","985790e3":"markdown","3f941b8a":"markdown","fe98d7d6":"markdown","97e5ac86":"markdown","ba688f52":"markdown","7ebd427b":"markdown","24aef370":"markdown","e58bea41":"markdown","9b4b122d":"markdown","123cefb4":"markdown"},"source":{"4b612160":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# visualization tools\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud\nimport seaborn as sns\nimport pandas_profiling as pp\nimport plotly.graph_objects as go\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","92104341":"df=pd.read_csv(\"..\/input\/google-play-store-apps\/googleplaystore.csv\")","602f98e5":"df.sample(5)","6c23e6d1":"df.info()","60a7affb":"df.isnull().sum()","aca128c5":"report = pp.ProfileReport(df)\n\nreport.to_file(\"report.html\")\n\nreport","c97a1402":"import missingno as msno\nmsno.matrix(df)\nplt.show()","589231e9":"df.columns=[each.replace(\" \",\"_\") for each in df.columns]","b679d980":"df.columns","bc7897b7":"df[\"Category\"]=[each.replace(\"_\",\" \") for each in df.Category]\ndf[\"Price\"]=[str(each.replace(\"$\",\"\")) for each in df.Price]","e2268f17":"\ndf.Reviews = pd.to_numeric(df.Reviews, errors='coerce')\ndf.Price = pd.to_numeric(df.Price, errors='coerce')\ndf.Rating = pd.to_numeric(df.Rating, errors='coerce')","ecfaaa33":"df2 = pd.DataFrame(columns = ['Category'])\ndf2[\"Category\"]=[each for each in df.Category.unique()]\ndf2[\"Count\"]=[len(df[df.Category==each]) for each in df2.Category]\ndf2=df2.sort_values(by=['Count'],ascending=False)\n\nplt.figure(figsize=(25,15))\nsns.barplot(x=df2.Category, y=df2.Count)\nplt.xticks(rotation= 90)\nplt.xlabel('Categorys')\nplt.ylabel('Count')\nplt.show()","7b77c72a":"labels = df.Android_Ver.unique()\nvalues=[]\nfor each in labels:\n    values.append(len(df[df.Android_Ver==each]))\n\n# Use `hole` to create a donut-like pie chart\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.3)])\nfig.show()","fa56ae30":"Category1 = df[df.Category==\"GAME\"].Rating\nCategory2 = df[df.Category==\"FAMILY\"].Rating\nCategory3 = df[df.Category==\"MEDICAL\"].Rating\n\nfig = go.Figure()\n# Use x instead of y argument for horizontal plot\nfig.add_trace(go.Box(x=Category1, name='GAME'))\nfig.add_trace(go.Box(x=Category2, name='FAMILY'))\nfig.add_trace(go.Box(x=Category3, name='MEDICAL'))\n\nfig.show()","2c5f5f32":"plt.subplots(figsize=(25,15))\nplt.xticks(rotation=90)\nax = sns.countplot(x=\"Installs\", data=df, palette=\"Set3\")","33b9308b":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='black',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(df.Category))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\nplt.show()","7fc3af67":"# Google Play Store Apps Data Analysis (EDA)","2eaf7734":"### Used Libraries\n1. NumPy (Numerical Python)\n2. Pandas\n3. Matplotlib\n4. Seaborn\n5. Plotly\n6. Missingno","c077bf40":"# Word Cloud","985790e3":"### Reading Data\n","3f941b8a":"# Plotly - Box Plot ( Interactive )\n### Game, Family and Medical Category (min,q1,median,q3,max value)","fe98d7d6":"# Seaborn - Bar Plot","97e5ac86":"# Pandas Profiling Report","ba688f52":"# Thank You\n\nIf you have any suggestion or advice or feedback, I will be very appreciated to hear them.\n### Also there are other kernels\n* [FIFA 19 Player Data Analysis and Visualization EDA](https:\/\/www.kaggle.com\/ismailsefa\/f-fa-19-player-data-analysis-and-visualization-eda)\n* [Crimes Data Analysis and Visualzation (EDA)](https:\/\/www.kaggle.com\/ismailsefa\/crimes-data-analysis-and-visualzation-eda)\n* [Google Play Store Apps Data Analysis (EDA)](https:\/\/www.kaggle.com\/ismailsefa\/google-play-store-apps-data-analysis-eda)\n* [World Happiness Data Analysis and Visualization](https:\/\/www.kaggle.com\/ismailsefa\/world-happiness-data-analysis-and-visualization)\n* [Used Cars Data Analysis and Visualization (EDA)](https:\/\/www.kaggle.com\/ismailsefa\/used-cars-data-analysis-and-visualization-eda)\n* [Gender Recognition by Voice Machine Learning SVM](https:\/\/www.kaggle.com\/ismailsefa\/gender-recognition-by-voice-machine-learning-svm)\n* [Iris Species Classify Machine Learning KNN](https:\/\/www.kaggle.com\/ismailsefa\/iris-species-classify-machine-learning-knn)\n* [Breast Cancer Diagnostic Machine Learning R-Forest](https:\/\/www.kaggle.com\/ismailsefa\/breast-cancer-diagnostic-machine-learning-r-forest)\n* [Heart Disease Predic Machine Learning Naive Bayes](https:\/\/www.kaggle.com\/ismailsefa\/heart-disease-predic-machine-learning-naive-bayes)\n* [Mushroom Classify Machine Learning Decision Tree](https:\/\/www.kaggle.com\/ismailsefa\/mushroom-classify-machine-learning-decision-tree)","7ebd427b":"# Plotly - Donut Chart ( Interactive )\n### Google Play Apps Android Versiyon Ratio","24aef370":"# Data Cleaning","e58bea41":"# Missingno - Missing Data","9b4b122d":"### Content:\n1. Pandas Profiling Report\n2. Missingno - Missing Data\n3. Data Cleaning\n4. Seaborn - Bar Plot\n5. Plotly - Donut Chart\n6. Plotly - Box Plot\n7. Seaborn - Count Plot\n8. Word Cloud","123cefb4":"# Seaborn - Count Plot"}}