{"cell_type":{"c697941a":"code","ef5e511e":"code","70fbb401":"code","fcbb7314":"code","2836805e":"code","c6c4f20a":"code","588022eb":"code","fffc2fd7":"code","f94cdd68":"code","0943f65e":"code","db1b8b28":"code","8035148a":"code","b6173db2":"code","f6d691f0":"code","0bd54f0e":"code","e535bbdd":"code","23faa3fc":"code","693f85e7":"code","56437720":"code","133d6c17":"code","0079aaec":"code","d8a49ac2":"code","caa47385":"code","1a54ae60":"code","cb302a43":"code","f5069b55":"code","f4aa7dad":"code","ecdef0f5":"code","92648c8c":"code","a90e84b9":"code","2e38bdc4":"code","6181e25d":"code","4741f6f4":"code","27948919":"code","7447e4f1":"code","38f776e4":"markdown"},"source":{"c697941a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ef5e511e":"import pandas as pd \nimport numpy as np \nimport random as rnd\n#visualization \nimport seaborn as sns\nimport matplotlib.pyplot as plt \n%matplotlib inline \n#machine learning \nfrom sklearn.linear_model import LogisticRegression \nfrom sklearn.svm import SVC,LinearSVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier \nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import Perceptron \nfrom sklearn.linear_model import SGDClassifier \nfrom sklearn.tree import DecisionTreeClassifier","70fbb401":"train=pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest=pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntest_ids = test[\"PassengerId\"]\n","fcbb7314":"train","2836805e":"test\n\n","c6c4f20a":"train.head()","588022eb":"train.isnull().sum()","fffc2fd7":"train.describe()","f94cdd68":"(train[\"Age\"]>70).sum()","0943f65e":"train[train[\"Age\"]<10]","db1b8b28":"((train[\"Sex\"]==\"male\")&(train[\"Survived\"]==1)).sum()","8035148a":"((train[\"Sex\"]==\"female\")&(train[\"Survived\"]==1)).sum()","b6173db2":"train=train.dropna(axis=0)","f6d691f0":"train.describe()","0bd54f0e":"train.describe(include=['O'])","e535bbdd":"train.info()","23faa3fc":"##### data visualization ","693f85e7":"train[\"Age\"].hist()","56437720":"gg=sns.FacetGrid(train,col=\"Survived\")\ngg.map(plt.hist,'Age',bins=50)","133d6c17":"gg=sns.FacetGrid(train,col=\"Survived\")\ngg.map(plt.hist,\"Sex\",bins=10)","0079aaec":"train_df=train.copy()\ntest_df=test.copy()","d8a49ac2":"train_df\n","caa47385":"train_df=train_df.drop([\"Name\",\"Ticket\",\"Cabin\",\"PassengerId\"],axis=1)\ntest_df=test_df.drop([\"Name\",\"Ticket\",\"Cabin\",\"PassengerId\"],axis=1)\n","1a54ae60":"train_df","cb302a43":"train_df[\"Sex\"]=train_df[\"Sex\"].map({\"male\":1,\"female\":0})\ntrain_df[\"Embarked\"]=train_df[\"Embarked\"].map({'Q':10,'S':11,'C':22})","f5069b55":"train_df","f4aa7dad":"test_df[\"Sex\"]=test_df[\"Sex\"].map({\"male\":1,\"female\":0})\ntest_df[\"Embarked\"]=test_df[\"Embarked\"].map({'Q':10,'S':11,'C':22})","ecdef0f5":"test_df ","92648c8c":"y=train_df[\"Survived\"]\ndel train_df[\"Survived\"]","a90e84b9":"y","2e38bdc4":"train_df.fillna(0,inplace=True)\ntest_df.fillna(0,inplace=True)","6181e25d":"### training the model ","4741f6f4":"logreg=LogisticRegression()\nlogreg.fit(train_df,y)\ny_pred=logreg.predict(test_df)","27948919":"df = pd.DataFrame({\"PassengerId\": test_ids.values,\n                   \"Survived\": y_pred,\n                  })","7447e4f1":"df.to_csv(\"submission.csv\", index=False)","38f776e4":"### feature engineering "}}