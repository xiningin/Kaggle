{"cell_type":{"95135a4e":"code","cf6eee1b":"code","cf4bafff":"code","d6c4e282":"code","e335adc6":"code","e9d61f72":"code","0e421150":"code","c8be1b5b":"code","50a936a3":"code","d4478007":"code","b261667f":"code","7396e360":"code","3c383f8d":"code","a299a0dc":"code","047df5b4":"code","7bdeeea2":"code","709fe2f3":"code","12d69443":"code","d1975b74":"markdown","599087f5":"markdown","4587c5da":"markdown","465f4c20":"markdown","a4b1ed7f":"markdown","e315b72e":"markdown","5e128271":"markdown"},"source":{"95135a4e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n# Import Dependencies\n%matplotlib inline\n\nimport calendar\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib import rcParams\nimport missingno as msno\nplt.style.use('seaborn-whitegrid')\n\n# Let's ignore warnings for now\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cf6eee1b":"# Importing Data\n\ndf=pd.read_csv('..\/input\/us-counties-covid-19-dataset\/us-counties.csv')\ndf.head()","cf4bafff":"# Check for missing values\n\ndf.isnull().sum()","d6c4e282":"## Converting the Date column\n\n\ndf['date']=pd.to_datetime(df['date'],yearfirst=True)\ndf.set_index('date',inplace=True)\ndf.head()","e335adc6":"# Dropping the fips column\ndf.drop(['fips'],axis=1,inplace=True)\ndf.head()","e9d61f72":"# Create a new data sets to see total cases by county\n\ntotal_county=df.groupby('county')['cases','deaths'].sum() \ntotal_county['County']=total_county.index\ntotal_county.reset_index(drop=True,inplace=True)\ntotal_county['Mortality Rate (%)']=(total_county['deaths']\/total_county['cases'])*100\ntotal_county.head()","0e421150":"# Average Mortality Rate\n\ntotal_county['Mortality Rate (%)'].mean()","c8be1b5b":"# Create a new data set to see total cases by state\n\ntotal_state=df.groupby('state')['cases','deaths'].sum() \ntotal_state['State']=total_state.index\ntotal_state.reset_index(drop=True,inplace=True)\ntotal_state['Mortality Rate (%)']=(total_state['deaths']\/total_state['cases'])*100\n# Seeing the top 5 worst affected states\ntop_states=df.groupby('state')['cases','deaths'].sum().sort_values(by='cases',ascending=False).head(5)\ntop_states","50a936a3":"total_state['Mortality Rate (%)'].mean()","d4478007":"# Seeing the trend of reported COVID-19 cases and deaths over time\n\npd.pivot_table(df,index=['date'],values=['cases','deaths'],aggfunc=np.sum).plot()\nplt.title(\"Number of reported COVID-19 cases & deaths\", loc='center', fontsize=12, fontweight=0, color='orange')\nplt.xlabel(\"date\")\nplt.ylabel(\"Total reported COVID-19 cases and deaths\")","b261667f":"state_date = df.groupby(['state','date'])['deaths','cases'].apply(lambda x: x.sum())\n\nstate_date = state_date.reset_index()\n\nstate_date.head()","7396e360":"# Seeing the curve of all states for cases\n\nimport plotly.express as px\nfig = px.line(state_date,x='date',y='cases',color='state')\n\nfig.show()","3c383f8d":"# Seeing the curve of all states for deaths\n\nimport plotly.express as px\nfig = px.line(state_date,x='date',y='deaths',color='state')\n\nfig.show()","a299a0dc":"# Visualizing the worst affected COVID-19 counties by number of cases, deaths and Mortality Rate (Top 10)\n\nfig, ax =plt.subplots(1,3,figsize=(24, 6))\nsns.barplot(x=\"cases\", y=\"County\",ax=ax[0], data=total_county.sort_values(by='cases',ascending=False).head(10)).set_title('Top 10 worst affected counties by Covid-19 (Cases)')\nsns.barplot(x=\"deaths\", y=\"County\",ax=ax[1], data=total_county.sort_values(by='deaths',ascending=False).head(10)).set_title('Top 10 worst affected counties by Covid-19 (Deaths)')\nsns.barplot(x=\"Mortality Rate (%)\", y=\"County\",ax=ax[2], data=total_county.sort_values(by='Mortality Rate (%)',ascending=False).head(10)).set_title('Top 10 worst affected counties by Covid-19 (Mortality Rate %)')","047df5b4":"# Visualizing the worst affected COVID-19 states by number of cases, deaths and Mortality Rate (Top 10)\n\nfig, ax =plt.subplots(1,3,figsize=(24, 6))\nsns.barplot(x=\"cases\", y=\"State\",ax=ax[0], data=total_state.sort_values(by='cases',ascending=False).head(10)).set_title('Top 10 worst affected states by Covid-19 (Cases)')\nsns.barplot(x=\"deaths\", y=\"State\",ax=ax[1], data=total_state.sort_values(by='deaths',ascending=False).head(10)).set_title('Top 10 worst affected states by Covid-19 (Deaths)')\nsns.barplot(x=\"Mortality Rate (%)\", y=\"State\",ax=ax[2], data=total_state.sort_values(by='Mortality Rate (%)',ascending=False).head(10)).set_title('Top 10 worst affected states by Covid-19 (Mortality Rate %)')","7bdeeea2":"# Cleaning the Date column a bit\n\ndf['Date']=df.index\n# df.reset_index(drop=True,inplace=True)\ndf['month'] = df['Date'].dt.month\ndf['month']=df['month'].apply(lambda x: calendar.month_name[x] )\ndf.head()","709fe2f3":"# Seeing the trend of reported COVID-19 cases over months\n\npd.pivot_table(df,index=['month'],values=['cases'],aggfunc=np.sum).plot(kind='bar',color='orange')\nplt.title(\"Number of reported COVID-19 cases\", loc='center', fontsize=12, fontweight=0, color='orange')\nplt.xlabel(\"month\")\nplt.ylabel(\"Total reported COVID-19 cases\")","12d69443":"# Seeing the trend of reported COVID-19 deaths over months\n\npd.pivot_table(df,index=['month'],values=['deaths'],aggfunc=np.sum).plot(kind='bar',color='red')\nplt.title(\"Number of reported COVID-19 deaths\", loc='center', fontsize=12, fontweight=0, color='orange')\nplt.xlabel(\"month\")\nplt.ylabel(\"Total reported COVID-19 deaths\")","d1975b74":"# **From the above graphs, we can easily deduce that New York City is by far the greatest affected in terms of cases and deaths, but in the States graph we saw that New York is flattening the curve.\n\n\n# We also see that a few counties have a very high mortality rate (20% or above) and need to be investigated why they are so high. Mean is 2.7%**","599087f5":"# **Average mortality rate for states is 3.73%**","4587c5da":"# **We can see from above that New York and New Jersey have flattened the curve but the states where cases are rising are Florida, California and Texas**","465f4c20":"# **We will ignore the fips null values because they are restricted to Joplin, Kansas City and New York City counties, and we will plot based on County and State. We also see a large number of County values as unknown**","a4b1ed7f":"# **We can see that the top affected states are New York, New Jersey, California, Illionis and Texas**","e315b72e":"# **From the curve above we can see that the rise in COVID-19 cases really worsened from mid-June onwards**","5e128271":"# **Average mortality rate for counties is 2.77%**"}}