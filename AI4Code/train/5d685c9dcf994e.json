{"cell_type":{"5865d5c4":"code","e26690a4":"code","6469a540":"code","d645737a":"code","758cd427":"code","e45ebd5c":"code","805a0934":"code","4b48e49c":"code","54168b84":"code","3c748a3d":"code","fe50279e":"code","9a657c03":"code","4cbd99d8":"code","2ad00a7a":"code","92eb0570":"code","18f7415e":"code","03693022":"code","ed5a2c87":"code","34b7b700":"code","70967961":"code","88f630c3":"code","60c62d66":"code","82753f21":"code","37dccc0c":"code","f649a86a":"code","0a176d4a":"markdown","1e217e1a":"markdown","757da38b":"markdown","2b4f075f":"markdown"},"source":{"5865d5c4":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n%matplotlib inline  #to add plots to your Jupyter notebook\n# plotly\n# import plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n# word cloud library\nfrom wordcloud import WordCloud\n# matplotlib\nimport matplotlib.pyplot as plt\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","e26690a4":"# read the data\namazon_best_sellers1= pd.read_csv(\"..\/input\/amazon-the-most-read-books-of-the-2019-dataset\/Amazon-bestsellers-2019.csv\", decimal=\",\")","6469a540":"amazon_best_sellers1.head(2)","d645737a":"# information about the data types.\namazon_best_sellers1.info()","758cd427":"# dropping \"Price_Old\" and \"By\" columns which have only nan values.\namazon_best_sellers= amazon_best_sellers1.drop(columns=['Price_Old','By'])","e45ebd5c":"# drop \"$\" from the \"Price\" feature.\namazon_best_sellers[\"Price\"] = amazon_best_sellers[\"Price\"].str.replace(r'\\D', '').astype(float)\n","805a0934":"#clean the nan values\namazon_best_sellers['Rating'].value_counts(dropna=False)\namazon_best_sellers['Rating'].dropna(inplace=True)\namazon_best_sellers['Reviews'].value_counts(dropna=False)\namazon_best_sellers['Reviews'].dropna(inplace=True)\namazon_best_sellers[\"Price\"].value_counts(dropna=False)\namazon_best_sellers['Price'].dropna(inplace=True)","4b48e49c":"#Control the features. If it returns nothing that means nan values are dropped.\nassert amazon_best_sellers['Rating'].notnull().all()\nassert amazon_best_sellers['Reviews'].notnull().all()\nassert amazon_best_sellers['Price'].notnull().all()","54168b84":"#convert data types.\namazon_best_sellers['Rating'] = amazon_best_sellers['Rating'].astype(float)\namazon_best_sellers['Reviews'] = amazon_best_sellers['Reviews'].astype(float)","3c748a3d":"# give the value \"1\" for the bestseller books and \"0\" for the others.\namazon_best_sellers[\"Best_Seller\"]= [ \"1\" if i==\"Best Seller\" else \"0\" for i in amazon_best_sellers.Badge ]\namazon_best_sellers[\"Best_Seller\"].value_counts()","fe50279e":"amazon_best_sellers[\"Name\"].unique()","9a657c03":"#categorized popular and unpopular books by their reviwes.If they have over 10.000 reviews, called them popular.\namazon_best_sellers[\"Popularity\"]=[\"Popular\" if i>=10.00 else \"Unpopular\" for i in amazon_best_sellers.Reviews]\namazon_best_sellers.Popularity.value_counts()","4cbd99d8":"amazon_best_sellers.describe()","2ad00a7a":"# the avarage ratings and values of best seller books.\namazon_best_sellers.groupby(\"Best_Seller\")[[\"Rating\",\"Reviews\"]].mean() \n","92eb0570":"plt.figure(figsize = (10,7))\nsns.boxplot(x=\"Best_Seller\", y=\"Rating\", hue=\"Popularity\", data=amazon_best_sellers, palette=\"husl\") \nplt.show()","18f7415e":"\nsns.countplot(amazon_best_sellers[\"Best_Seller\"])\nplt.show()\n","03693022":"g = sns.catplot(x=\"Popularity\", hue=\"Popularity\", col=\"Best_Seller\",\n                 data=amazon_best_sellers, kind=\"count\",\n                 height=4, aspect=.7);","ed5a2c87":"amazon_best_sellers['Best_Seller'] = amazon_best_sellers['Best_Seller'].astype(float)\nb1= amazon_best_sellers.Rating > 4.5\namazon_best_sellers.Best_Seller.astype(float)\nb2= amazon_best_sellers.Best_Seller>0\ndf=amazon_best_sellers[b1 & b2]\n\nlabels = df.Rating.value_counts().index\ncolors = ['blue','red','yellow','green']\nexplode = [0,0,0,0]\nsizes =df.Rating.value_counts().values\nplt.figure(figsize = (5,5))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%') \nplt.title('Best Sellers Ratings',color = 'blue',fontsize = 15) \nplt.show()","34b7b700":"# Another way of showing the popularity vs. unpopularity of 1(Best_Seller) and 0(Not).\nplt.figure(figsize = (7,7))\nsns.swarmplot(x=\"Best_Seller\", y=\"Rating\", hue=\"Popularity\", data=amazon_best_sellers) \nplt.show()","70967961":"# Correlations.\namazon_best_sellers.corr()","88f630c3":"# Correlation Map.\nf,ax = plt.subplots(figsize=(8, 8))\nsns.heatmap(amazon_best_sellers.corr(), annot=True, linewidths=0.6,linecolor=\"red\", fmt= '.1f',ax=ax)\nplt.show() ","60c62d66":"# Books Ratings by 0 and 1.\n# Importig Plotly Library.\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\ndf5 = amazon_best_sellers.Rating [amazon_best_sellers[\"Best_Seller\"]>0]\ndf6= amazon_best_sellers.Rating [amazon_best_sellers[\"Best_Seller\"]<1]\ntrace1 = go.Histogram(\n    x=df5,\n    opacity=0.75,\n    name = \"1\",\n    marker=dict(color='rgba(171, 50, 96, 0.6)'))\ntrace2 = go.Histogram(\n    x=df6,\n    opacity=0.75,\n    name = \"0\",\n    marker=dict(color='rgba(12, 50, 196, 0.6)'))\n\ndata = [trace1, trace2]\nlayout = go.Layout(barmode='overlay',\n                   title='',\n                   xaxis=dict(title='Best_Seller'),\n                   yaxis=dict( title=''),\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","82753f21":"#best sellers rating,review and price comparison with 3D plot.\namazon_best_sellers1 = amazon_best_sellers.iloc[:200,:]\ntrace1 = go.Scatter3d(\n    \n    x=amazon_best_sellers1.Rating,\n    y=amazon_best_sellers1.Reviews,\n    z=amazon_best_sellers1.Price,\n    mode='markers',\n    marker=dict(\n        size=10,\n        color='rgb(255,0,0)',       \n    )\n)\ndata = [trace1]\nlayout = go.Layout(\n    margin=dict(\n        l=0,\n        r=0,\n        b=0,\n        t=0  \n    )   \n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","37dccc0c":"import warnings\nwarnings.filterwarnings(\"ignore\",category=DeprecationWarning)","f649a86a":"from plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objects as go\n# import figure factory\nimport plotly.figure_factory as ff\n\ndf = amazon_best_sellers.loc[:,[\"Rating\",\"Reviews\", \"Price\"]]\ndf[\"index\"] = np.arange(1,len(df)+1)\n# scatter matrix\nfig = ff.create_scatterplotmatrix(df, diag='box', index='index',colormap='Portland',\n                                  colormap_type='cat',\n                                  height=700, width=700)\niplot(fig)","0a176d4a":"** Cleaning the Data**\n- Before analyzing the data, we need to clean it first.\n- Missing values, upper-lower cases, different language problems and spaces between features can cause problems.\n","1e217e1a":"- **INTRODUCTION**\n- This data is from Amazon.com shows the most read books of 2019.\n\n - Import libraries\n - Read the data\n - Information about data\n - Clean the data\n - Categorized popular and unpopular books\n - The avarage ratings and values of best seller books\n - Best sellers rating,review and price comparison\n - Correlation research  ","757da38b":"- **Boxplot** displays the distribution of data based on a five number summary (\u201cminimum\u201d, first quartile (Q1), median, third quartile (Q3), and \u201cmaximum\u201d). It also displays outliers of the data.","2b4f075f":"- Nearly 80% of the best seller books have positive rewies on the net. For the others, this ratio is about 60% to 40%."}}