{"cell_type":{"39cd411f":"code","d0fc96b4":"code","1a0c4150":"code","daa575b4":"code","eac79b7a":"code","d437448e":"markdown","23d81c24":"markdown","1eeaf0d9":"markdown"},"source":{"39cd411f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d0fc96b4":"# First of all, let's read the data into pandas.DataFrame\ntrain_dataset = pd.read_csv('\/kaggle\/input\/digit-recognizer\/train.csv')","1a0c4150":"import matplotlib.pyplot as plt\n\n# A good explanation how to line up the x ticks with histogram:\n# https:\/\/stackoverflow.com\/questions\/27083051\/matplotlib-xticks-not-lining-up-with-histogram\n\ncounts = np.bincount(train_dataset['label'])\n\nplt.style.use('seaborn-dark-palette')\n\nfig, ax = plt.subplots(figsize=(10,5))\nax.bar(range(10), counts, width=0.8, align='center')\nax.set(xticks=range(10), xlim=[-1, 10], title='Training data distribution')\n\nplt.show()","daa575b4":"def display_samples(trainig_dataset: pd.DataFrame,\n                    digits=[0,1,2,3,4,5,6,7,8,9],\n                    number_in_row=5,\n                    figsize=(10,25),\n                    **imshow_kwargs):\n    \"\"\"\n    Ramdomly picks digits from dataset and displays them.\n    \n    Keyword arguments:\n    training_dataset -- consists of 'label' column and 784 columns from pixel0 to pixel783 \n    digits -- digits to display, order matters\n    number_in_row -- how many samples of each digit to display in a row\n    figsize -- figure size, tuple (width, height) in inches\n    imshow_kwargs -- keyword arguments of matplotlib.axes.Axes.imshow() except X \n    (cmap, norm, aspect, interpolation, etc) according to the definition\n    https:\/\/matplotlib.org\/api\/_as_gen\/matplotlib.axes.Axes.imshow.html#matplotlib.axes.Axes.imshow\n    \"\"\"\n    # randomly picks records\n    picked_records = train_dataset[train_dataset['label'].isin(digits)].sample(frac=1).groupby('label').head(number_in_row)\n    \n    fig, axes = plt.subplots(len(digits), number_in_row, figsize=figsize)\n    \n    for i in range(len(digits)):\n        i_digit_records = picked_records[picked_records['label']==digits[i]]\n        \n        # converts rows of pixels into 28x28 matrices\n        image_array = i_digit_records.iloc[:, 1:].values.reshape(number_in_row, 28, 28)\n        \n        for j in range(number_in_row):\n            axes[i, j].imshow(\n                image_array[j, :, :],\n                cmap = imshow_kwargs.get('cmap', None),\n                norm = imshow_kwargs.get('norm', None),\n                aspect = imshow_kwargs.get('aspect', None),\n                interpolation = imshow_kwargs.get('interpolation', None),\n                alpha = imshow_kwargs.get('alpha', None),\n                vmin = imshow_kwargs.get('vmin', None),\n                vmax = imshow_kwargs.get('vmax', None),\n                origin = imshow_kwargs.get('origin', None),\n                extent = imshow_kwargs.get('extent', None),\n                filternorm = imshow_kwargs.get('filternorm', 1),\n                filterrad = imshow_kwargs.get('filterrad', 4.0),\n                resample = imshow_kwargs.get('resample', None),\n                url = imshow_kwargs.get('url', None)\n            )","eac79b7a":"# In this call the function is set to display randomly picked samples:\n# of these digits: 0,3,5,7,9\n# 4 times in a row for each digit \n# in figure with 10 inch width and 12 inch height \n# as grayscale images\ndisplay_samples(train_dataset, [0,3,5,7,9], 4, figsize=(10,12), cmap='gray', vmin=0, vmax=255)","d437448e":"It seems that all the ten digits are evenly distributed.","23d81c24":"# 1. Let's see how data is distributed across train.csv.\nFor this purpose, we will use histogram. ","1eeaf0d9":"# 2. Let me introduce you a function which can display randomly picked data images. "}}