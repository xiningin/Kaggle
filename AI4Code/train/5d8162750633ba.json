{"cell_type":{"d2c204c5":"code","a66f9c9b":"code","27770f30":"code","79c310d7":"code","f2a91ea8":"code","c683ee33":"code","dcd4f56b":"code","e7f93803":"code","9f838038":"code","79870a18":"code","036e3579":"code","9ddc5770":"code","497b6563":"code","feaa7e11":"code","e19d0be8":"markdown","eee04997":"markdown","1e42029b":"markdown","ce09227f":"markdown","56f0daac":"markdown","3387b37e":"markdown","6955d219":"markdown","31ecbf0c":"markdown","7bc0b020":"markdown","69bf983e":"markdown","757c08c0":"markdown","4fee0482":"markdown","6d287362":"markdown","f626d854":"markdown","4b8be32c":"markdown","f84d2b02":"markdown"},"source":{"d2c204c5":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport lightgbm as lgb\nfrom sklearn.model_selection import KFold\nimport warnings\nimport gc\nimport time\nimport sys\nimport datetime\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics import mean_squared_error\nwarnings.simplefilter(action='ignore', category=FutureWarning)\nwarnings.filterwarnings('ignore')\nfrom sklearn import metrics\n\nplt.style.use('seaborn')\nsns.set(font_scale=2)\npd.set_option('display.max_columns', 500)","a66f9c9b":"DEBUG = False\n\nif DEBUG:\n    NROWS = 100000\nelse:\n    NROWS = None","27770f30":"%%time\ntrain = pd.read_csv('..\/input\/train.csv', nrows=NROWS)","79c310d7":"train['target'].value_counts().plot.bar()","f2a91ea8":"%%time\n# checking missing data\ntotal = train.isnull().sum().sort_values(ascending = False)\npercent = (train.isnull().sum()\/train.isnull().count()*100).sort_values(ascending = False)\nmissing_train_data  = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])","c683ee33":"missing_train_data","dcd4f56b":"for col in train.columns[2:]:\n    print(\"Number of unique values of {} : {}\".format(col, train[col].nunique()))","e7f93803":"train['var_68'].value_counts()","9f838038":"corr = train.corr()","79870a18":"abs(corr['target']).sort_values(ascending=False)","036e3579":"target_mask = train['target'] == 1\nnon_target_mask = train['target'] == 0 ","9ddc5770":"from scipy.stats import ks_2samp","497b6563":"statistic, pvalue = ks_2samp(train.loc[non_target_mask, col], train.loc[target_mask, col])","feaa7e11":"statistics_array = []\nfor col in train.columns[2:]:\n    statistic, pvalue = ks_2samp(train.loc[non_target_mask, col], train.loc[target_mask, col])\n    statistics_array.append(statistic)\n    fig, ax = plt.subplots(1, 1, figsize=(10, 4))\n    sns.kdeplot(train.loc[non_target_mask, col], ax=ax, label='Target == 0')\n    sns.kdeplot(train.loc[target_mask, col], ax=ax, label='Target == 1')\n\n    ax.set_title('name: {}, statistics: {:.5f}, pvalue: {:5f}'.format(col, statistic, pvalue))\n    plt.show()","e19d0be8":"# 2.2 Distribution regarding to target","eee04997":"- I will do time series analysis for this dataset.","1e42029b":"# 2.1 Correlation","ce09227f":"- As you know, Santander hosted other competition 6 month before.\n- So you can check this competition. https:\/\/www.kaggle.com\/c\/santander-value-prediction-challenge","56f0daac":"- The largest correlation value is 0.08\n- Actually, the target is binary and variables are continous, so correlation is not enough to judge. Let's see the distribution!","3387b37e":"- Oh, Most features have more than thousands of values for each variable except var_68 (435)","6955d219":"- Before EDA, let's group the features into category and non-category based on the number of uniqueness.","31ecbf0c":"# 2. Exploratory Data Analysis","7bc0b020":"# 1. Read dataset","69bf983e":"## 1.1 Target  check","757c08c0":"- It also has float numbers. \n- Uncovering these values will be intersting job!\n- Multiplying and dividing with some values can make the hidden categories, See Radder work(https:\/\/www.kaggle.com\/raddar\/target-true-meaning-revealed)","4fee0482":"- This competiiton is Imbalanced target competition.\n- You can check similar competitions, Porto, Homecredit competition.\n- Specially, Porto also gave use anonymized dataset. \n- https:\/\/www.kaggle.com\/c\/home-credit-default-risk\n- https:\/\/www.kaggle.com\/c\/porto-seguro-safe-driver-prediction","6d287362":"# TODO","f626d854":"- Let's see var 68","4b8be32c":"- There is no missing values.\n- Because we don't know the exact meaning of variables, we need to check some values as null value.","f84d2b02":"## 1.2 Null data check"}}