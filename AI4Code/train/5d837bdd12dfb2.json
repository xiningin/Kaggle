{"cell_type":{"fb4bbe4d":"code","2bd8b383":"code","80278c4a":"code","2a2edc5b":"code","b8fe4357":"code","f29624bd":"code","bf8ba773":"code","5d12f747":"markdown"},"source":{"fb4bbe4d":"import numpy as np\nimport matplotlib.pyplot as plt\nimport math\nimport random\nimport pandas as pd\nimport scipy.stats as stat\nimport seaborn as sns\nimport os\nimport pandas\nimport sklearn\n\nfrom IPython.display import Image\nfrom scipy import stats\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.utils import shuffle\nfrom sklearn.decomposition import PCA\nfrom sklearn import preprocessing\n\nfrom sklearn.preprocessing import MinMaxScaler\n\n\n# Para ter repetibilidade nos resultados\nrandom_state = 1\n\n# Tratar valores infinitos como np.NaN\npandas.options.mode.use_inf_as_na = True\n\n# IMPORTANTE para tornar figuras interativas\n%matplotlib notebook\n\n# Tamanho padr\u00e3o das figuras\nfigsize=(10,6)\n\n# Verifica\u00e7\u00e3o do local para carga de dados\npath = os.environ['PATH']\n\nif path.startswith('C'):\n    IN_KAGGLE = False\nelse:\n    IN_KAGGLE = True\n    \n\n# Configura\u00e7\u00e3o do n\u00famero de linhas e colunas a serem apresentadas em listagens\npd.set_option('display.max_row', 1000)\n\npd.set_option('display.max_columns', 50)\n","2bd8b383":"if IN_KAGGLE:\n    tips = pd.read_csv('..\/input\/tips.csv')\n    if 'Unnamed: 0' in tips.columns:\n        tips.drop(['Unnamed: 0'], inplace=True, axis=1)\nelse:\n    tips = sns.load_dataset('tips')\n\ntips.head()\n","80278c4a":"def benford(valores):\n    valores_ = valores.astype(str).str[:1].astype(int)\n    hist,bins=np.histogram(valores_,bins=range(1,11,1),density =True)\n    n = np.arange(1,10,1)\n    benford_ = np.log10(1+1\/n)\n    \n    fig, ax = plt.subplots(figsize = figsize)\n    valores.hist(ax=ax, bins=100)\n    \n    fig, ax = plt.subplots(figsize = figsize)\n    indices = np.arange(1,10,1)\n    width = 1\/4\n\n    ax.bar(indices-width\/2, hist, width, color='b', label='Valores')\n    ax.bar(indices+width\/2, benford_, width, color='r', label='Benford')\n    ax.set_xlabel('N\u00fameros')\n    ax.set_ylabel('Propor\u00e7\u00f5es')\n    ax.axes.set_xticklabels(indices)\n\n    plt.legend()\n    plt.show()\n    \n    resultado = benford_ - hist\n    return np.sum(np.abs(resultado))","2a2edc5b":"exponencial = pd.Series(np.random.exponential(scale=1000, size=1000000))\nxxx = benford(exponencial)\nprint(xxx)","b8fe4357":"normal = pd.Series(np.random.randn(1000000)+10)\nxxx = benford(normal)\nprint(xxx)","f29624bd":"from scipy.stats import gamma\nimport scipy.stats as stat\n\nalfa = 0.6\nbeta = 10\ns = 0.8\nrepeticoes = 1000000\n\nrv = stat.lognorm(s=s)\npopulacao = rv.rvs(size=repeticoes, random_state=1)*2.5\n\nlogonormal = pd.Series(populacao)\nxxx = benford(logonormal)\nprint(xxx)","bf8ba773":"xxx = benford(tips.total_bill)\nprint(xxx)","5d12f747":"# Lei de Benford\n\nhttps:\/\/pt.wikipedia.org\/wiki\/Lei_de_Benford"}}