{"cell_type":{"06cc3be4":"code","1c1bd96c":"code","55fc7715":"code","76adf2d4":"code","3b40a1f3":"code","5daec15d":"code","0ff6a561":"code","631494b3":"code","8d652f85":"code","383e53f1":"code","cd4dc4be":"code","7c7ed0ae":"code","0b248fee":"code","4ac7f695":"code","8c596731":"code","7f9b1737":"code","fcd36556":"code","9a55d185":"code","c496e005":"code","b46bec0c":"code","d2b45b22":"code","346ee212":"code","9ca97e1b":"code","3885d1a7":"code","be8ced64":"code","8232430a":"code","715bd6c5":"code","5bcb8d5e":"code","9e3cb037":"code","41e18456":"code","80df068b":"code","8de3be18":"code","b9ea9410":"code","8f9bb97b":"code","e51df913":"code","19bbe8a1":"code","409ac3a9":"code","719a6ade":"code","26c7316e":"markdown","61ab5b99":"markdown","43cdce45":"markdown","6c777e31":"markdown","c836623e":"markdown","5bbcf0c7":"markdown"},"source":{"06cc3be4":"#Data Processing\nimport pandas as pd\nimport numpy as np\n\n#Data Visulaisation\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport plotly.express as px\n\nimport os","1c1bd96c":"files = [filename for filename in os.listdir(r'..\/input\/uber-pickups-in-new-york-city') if filename.startswith(\"uber-\")]\nfiles","55fc7715":"files.remove('uber-raw-data-janjune-15.csv')","76adf2d4":"path=r'..\/input\/uber-pickups-in-new-york-city'\n\nData=pd.DataFrame()\n\nfor file in files:\n    df=pd.read_csv(path+\"\/\"+file,encoding='utf-8')\n    Data=pd.concat([df,Data])","3b40a1f3":"Data.sample(frac=0.5)","5daec15d":"Data.shape","0ff6a561":"data=Data.copy()","631494b3":"data.dtypes","8d652f85":"data['Date\/Time']=pd.to_datetime(data['Date\/Time'], format='%m\/%d\/%Y %H:%M:%S')","383e53f1":"data.dtypes","cd4dc4be":"data['month']=data['Date\/Time'].dt.month\ndata['weekday']=data['Date\/Time'].dt.day_name()\ndata['day']=data['Date\/Time'].dt.day\ndata['hour']=data['Date\/Time'].dt.hour\ndata['minute']=data['Date\/Time'].dt.minute","7c7ed0ae":"data.head()","0b248fee":"data.dtypes","4ac7f695":"#00. Geospatial Analysis to understand the cab demand","8c596731":"Demand=(data.groupby(['Lat','Lon']).count()['Date\/Time']).reset_index()\nDemand.columns=['Latitude','Longitude','Number of Trips']","7f9b1737":"import folium as fo\nfrom folium.plugins import HeatMap","fcd36556":"base=fo.Map()","9a55d185":"HeatMap(Demand,zoom=20,radius=15).add_to(base)\nbase","c496e005":"#01. Which month and day of the month sees the highest number of uber trips?","b46bec0c":"weekday=pd.DataFrame(data[['day','month']].value_counts()).reset_index()\nweekday.columns=['Day','Month','Count']\nweekday['Day']=pd.Categorical(weekday['Day'],categories=[1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,10 ,11 ,12 ,13 ,14 ,15 ,16 ,17 ,18 ,19 ,20 ,21 ,22 ,23 ,24 ,25 ,26 ,27 ,28 ,29 ,30 ,31],ordered=True)\nweekday['Month']=pd.Categorical(weekday['Month'],categories=[4,5,6,7,8,9],ordered=True)","d2b45b22":"fig1=px.bar(weekday,\n      x='Day',\n      y='Count',\n      color='Month',\n      template='plotly_dark',\n      labels={'Count':'Number of Trips','Day':'Day of the Month'},\n      width=1100,\n      height=500,\n      category_orders={\"Month\": [4,5,6,7,8,9]},\n      color_discrete_sequence=['#2C2C3E','#2E5467','#1E7F84','#33AC8D','#78D584','#D1FA74'],\n    text='Count')\nfig1.update_traces(texttemplate='%{text:.2s}', textposition='outside')\nfig1.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\nfig1.update_layout(title_text='Uber trip by Months and Days', title_x=0.5)\nfig1.show()","346ee212":"#September'14 sees the highest number of trips","9ca97e1b":"#02. Which is the busiest hour in the day for uber cabs?","3885d1a7":"hour=pd.DataFrame(data['hour'].value_counts()).reset_index()\nhour.columns=['Hour','Count']\nhour=hour.sort_values(by='Hour')","be8ced64":"fig2=px.bar(hour,\n      x='Hour',\n      y='Count',\n      template='plotly_dark',\n      labels={'Count':'Number of Trips'},\n      height=400,\n      width=1100,\n      text='Count'\n      )\n#fig2.update_traces(texttemplate='%{text:.1s}', textposition='outside')\n#fig2.update_layout(title_text='Uber Rides by hour',title_x=0.5)\nfig2.show()","8232430a":"#Maximum number of rides are taken between 4-7 PM in a day","715bd6c5":"plt.figure(figsize=(20,20))\nplt.style.use(\"seaborn-dark-palette\")\ncolors = ['#636EFA']\nfor i, month in enumerate(data['month'].unique()):\n    plt.subplot(3,2,i+1)\n    data[data['month']==month]['hour'].hist(color=colors)","5bcb8d5e":"#Maximum number of rides were taken in September","9e3cb037":"#03. Distribution of Trips By Days in a Month","41e18456":"trips_by_days=pd.DataFrame(data['day'].value_counts()).reset_index()\ntrips_by_days.columns=['Days','Number of Trips']\ntrips_by_days=trips_by_days.sort_values(by='Days')","80df068b":"fig3=px.histogram(trips_by_days,\n            x='Days',\n            y='Number of Trips',\n            height=400,\n            width=1100,\n            nbins=31,\n            template='plotly_dark',\n            color_discrete_sequence=['#C78845'])\nfig3.update_layout(bargap=0.2)\nfig3.update_layout(title_text='Distribution of trips by days in a Month',title_x=0.5)\nfig3.show()\n","8de3be18":"#04. Base locations with highest number of pickups","b9ea9410":"trips_by_loc=data[['Base','hour']].value_counts().reset_index()\ntrips_by_loc.columns=['Base','Hour','Number of Trips']\ntrips_by_loc","8f9bb97b":"fig4=px.scatter(trips_by_loc,\n            x='Hour',\n            y='Number of Trips',\n            color='Base',\n            template='plotly_dark',\n            color_discrete_sequence=['#50F9F1','#6AE5A8','#96C96A','#B7AA47','#C78845'])\nfig4.update_layout(title_text='Trips by location and time of the day', title_x=0.5)\nfig4.show()","e51df913":"#05. Cross Analysis between hours and weekdays","19bbe8a1":"hour_week=data.groupby(['weekday','hour']).count()['Date\/Time']\nhour_week\n#hour_week.columns=['WeekDay','Hour','Number of Trips']","409ac3a9":"pivot=hour_week.unstack()\npivot","719a6ade":"plt.figure(figsize=(10,10))\nsns.set_theme(style='darkgrid')\nfig5=sns.heatmap(pivot,cmap='Blues_r')","26c7316e":"# Listing down the required files","61ab5b99":"### Importing Libraries","43cdce45":"# Data Preprocessing","6c777e31":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c836623e":"# Concatenate the data","5bbcf0c7":"# Checking data attributes"}}