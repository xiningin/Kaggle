{"cell_type":{"8bffeeeb":"code","06bb7942":"code","1e9f7875":"code","d0f14f7a":"code","fb36d815":"code","e2a64573":"code","c7d03c28":"code","8d1407e5":"code","592e6a08":"code","da175db4":"code","c830b116":"code","2a5764ed":"code","a7d67854":"code","e0b1dd43":"code","75c7d217":"code","7711dca8":"code","e3dd86ad":"markdown","8e27f641":"markdown","8f27ef2d":"markdown","3d10186c":"markdown","a2d9f60f":"markdown"},"source":{"8bffeeeb":"# # This Python 3 environment comes with many helpful analytics libraries installed\n# # It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# # For example, here's several helpful packages to load\n\n# import numpy as np # linear algebra\n# import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# # Input data files are available in the read-only \"..\/input\/\" directory\n# # For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n# import os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n# # You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# # You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","06bb7942":"train_path = \"..\/input\/fruits\/fruits-360_dataset\/fruits-360\/Training\"","1e9f7875":"%matplotlib inline\n%config InlineBackend.figure_format = 'retina'\nimport os\nimport glob\nimport json\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nimport cv2\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras import  applications\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D, MaxPool2D,GlobalAveragePooling2D, Flatten, Dense, Dropout, BatchNormalization\nfrom tensorflow.keras.callbacks import ModelCheckpoint, EarlyStopping, ReduceLROnPlateau\nfrom tensorflow.keras.optimizers import Adam\n\nimport warnings\nwarnings.filterwarnings('ignore')\nimport random\nimport logging\nlogger = tf.get_logger()\nlogger.setLevel(logging.ERROR)\nimport glob\nimport shutil\nimport os\nimport itertools\nfrom sklearn.metrics import confusion_matrix ,classification_report","d0f14f7a":"\nIMG_SIZE = (224, 224)\ntrain_images=tf.keras.preprocessing.image_dataset_from_directory(directory=train_path,image_size=IMG_SIZE,batch_size=10,shuffle=False)","fb36d815":"model1 = Sequential([\n    \n    Conv2D(filters=32,kernel_size=(3,3),activation='relu',padding='same',input_shape=(224,224,3)),\n    MaxPool2D(pool_size=(2,2),strides=2),\n    Conv2D(filters=32,kernel_size=(3,3),activation='relu',padding='same'),\n    MaxPool2D(pool_size=(2,2),strides=2),\n    \n    Flatten(),\n    Dense(units=131,activation='softmax'),\n])","e2a64573":"model1.summary()","c7d03c28":"model1.compile(optimizer=Adam(learning_rate=0.0001),loss='sparse_categorical_crossentropy',metrics=['accuracy'])","8d1407e5":"results=model1.fit(train_images,epochs=10)  ","592e6a08":" vgg_16 = tf.keras.applications.vgg16.VGG16()","da175db4":"vgg_16.summary()","c830b116":"for layer in vgg_16.layers:\n    layer.trainable =  False","2a5764ed":"model = Sequential()\nfor layer in vgg_16.layers[:-1]:\n  model.add(layer)","a7d67854":"model.add(Dense(units = 131,activation = 'softmax'))","e0b1dd43":"model.summary()","75c7d217":"model.compile(optimizer=Adam(learning_rate=0.0001),loss='sparse_categorical_crossentropy',metrics=['accuracy'])","7711dca8":"results=model.fit(train_images,epochs=10)  ","e3dd86ad":"****","8e27f641":"# **Transfer Learning:**","8f27ef2d":"# **Basic CNN:**","3d10186c":"# Data","a2d9f60f":"****"}}