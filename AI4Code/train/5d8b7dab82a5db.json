{"cell_type":{"d4d315f6":"code","baea292e":"code","dd6c1991":"code","f069ad53":"code","fc090023":"code","477a5242":"code","7fa18e5f":"code","401048e4":"code","cda19ce4":"code","b7e27993":"code","3606e5af":"code","64ca0645":"code","0b5c22ee":"code","e34b9369":"code","7e1d07b1":"code","6329a2dd":"code","4c11ec0d":"code","da1723b7":"code","0fa1400e":"code","c830daa0":"code","14b66a01":"code","4f89abf3":"markdown","9c74dd7e":"markdown","7ddd2ffb":"markdown","05a34606":"markdown","f6201426":"markdown","bd3f9d96":"markdown","db1b3cdc":"markdown","64684dde":"markdown","b6d64bcd":"markdown","912f8a0f":"markdown","2cf27ae4":"markdown","c1891ec6":"markdown","1eb806e8":"markdown","2b687b75":"markdown","fe0dae11":"markdown","05bb2e1e":"markdown","d2686277":"markdown"},"source":{"d4d315f6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\nplt.style.use(\"seaborn-notebook\")\n\nsns.set_style(\"whitegrid\")\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","baea292e":"#read data\ndf = pd.read_csv(\"\/kaggle\/input\/latest-covid19-turkey-status\/data.csv\")","dd6c1991":"# show last five row of data\ndf.tail()","f069ad53":"# information about data\ndf.info()","fc090023":"# We must data parsing for between December 01, 2020, and May 31, 2021.\n# Firstly, we keep ourselves safe\ndata1 = df\n\n# Let's start by indexing the time column.\ntime_list = data1.loc[:,'Date']\n#print(type(time_list))\n\ndatetime_object = pd.to_datetime(time_list)       # We used datetime method of pandas\n#print(type(datetime_object))\ndata1[\"date\"] = datetime_object\n\n# lets make date as index\ndata1= data1.set_index(\"date\")\n\n# Let's delete the unnecessary \"Date\" column\ndel data1['Date']\n\n\n# Finally, let's save the range that we will use\ndata1 = data1.loc['Dec-01-2020':'May-31-2021']   \n\nprint(data1.notnull().all())                       # Checks if it is empty\n\n","477a5242":"# First, we can make correct types to data values\n\nfor item in data1:\n    for i in range(0,182):\n        if item == 'Total Number of Tests' or item == 'Total Number of Patiens' or item == 'Total Number of Recovered Patients':           \n            data1[item][i] = int(data1[item][i].replace('.',''))       # for object \n            \n        elif item == 'Pneumonia Rate in Patients (%)':                 # for float \n            temp = data1[item][i].replace(',','.')\n            data1[item][i] = float(temp)\n            \n        else:                                                          # for float \n            temp1 = str(data1[item][i])\n            temp = temp1.replace('.','')\n            data1[item][i] = int(temp)\n            \n    \n\n# Next, let's fix the columns    \n\ndata1['Total Number of Tests'] = data1['Total Number of Tests'].astype('int')\ndata1['Total Number of Patiens'] = data1['Total Number of Patiens'].astype('int')\ndata1['Total Number of Deaths'] = data1['Total Number of Deaths'].astype('int')\ndata1['Pneumonia Rate in Patients (%)'] = data1['Pneumonia Rate in Patients (%)'].astype('float')\ndata1['The Number of Seriously Ill Patients'] = data1['The Number of Seriously Ill Patients'].astype('int')\ndata1['Total Number of Recovered Patients'] = data1['Total Number of Recovered Patients'].astype('int')\ndata1['Number of Cases Today'] = data1['Number of Cases Today'].astype('int')\ndata1['Number of Patients for Today'] = data1['Number of Patients for Today'].astype('int')\ndata1['Number of Tests for Today'] = data1['Number of Tests for Today'].astype('int')\ndata1['Number of Deaths for Today'] = data1['Number of Deaths for Today'].astype('int')\ndata1['Number of Recovered Patients for Today'] = data1['Number of Recovered Patients for Today'].astype('int')\n\n\n# And finally, we fix the name of the columns   \n\nfor i in data1.columns:\n    new_name = data1[i].name\n    new_name = new_name.lower().replace(' ','_')\n    data1=data1.rename(columns = {i:new_name})","7fa18e5f":"data1.info()","401048e4":"data1.tail()\n","cda19ce4":"# distribution of total number features\nlist_features = [\"total_number_of_tests\", \"total_number_of_patiens\",'total_number_of_recovered_patients']\nsns.boxplot(data = data1.loc[:, list_features], orient = \"h\", palette = \"Set1\")\nplt.show()","b7e27993":"# distribution of today number features\nlist_features = [\"number_of_patients_for_today\",\"number_of_cases_today\",\"number_of_recovered_patients_for_today\"]\nsns.boxplot(data = data1.loc[:, list_features], orient = \"h\", palette = \"Set2\")\nplt.show()","3606e5af":"# distribution of today number features\nlist_features = [\"number_of_deaths_for_today\",\"the_number_of_seriously_ill_patients\",'number_of_patients_for_today']\nsns.boxplot(data = data1.loc[:, list_features], orient = \"h\", palette = \"Set3\")\nplt.show()\n","64ca0645":"# Monthly cases rate\n\ndata1_num_cases_Mmean = data1.number_of_cases_today.resample('M').mean()\n\nsns.swarmplot(x = data1_num_cases_Mmean.index ,y = data1_num_cases_Mmean , size= 15)\nplt.xticks(rotation = 60)\nplt.title(\"Monthly cases rate \")\nplt.show()\n","0b5c22ee":"# Monthly Total number of patients \ndata1_tot_num_patients_sum = data1.number_of_patients_for_today.resample('M').sum()\n\nplt.figure(figsize=(8,8))\nax= sns.barplot(x=data1_tot_num_patients_sum.index, y=data1_tot_num_patients_sum ,palette = sns.cubehelix_palette(len(data1_tot_num_patients_sum.index)))\nplt.xticks(rotation = 60)\n\nplt.xlabel('Months')\nplt.ylabel('Total number')\nplt.title('Monthly Total number of patients ')\nplt.show()","e34b9369":"# Monthly death rate\n\nmonth_list =['11-2020','12-2020','01-2021','02-2021','03-2021','04-2021','05-2021','06-2021']\n\ndata1_num_deaths_Mmean = data1.number_of_deaths_for_today.resample('M').mean()\nsns.barplot (x = data1_num_deaths_Mmean,y=data1_num_deaths_Mmean.index,data= data1, palette = \"bone_r\")\nplt.title(\"Monthly death ratio\")\nplt.show()\n\n# By looking at this graph, we can say that the death rates increase as the summer months come, that is, people spend more time outside.","7e1d07b1":"# Total number of patients who recovered by months\n\ndata1_num_recovered_patients_mean = data1.number_of_recovered_patients_for_today.resample('M').mean()\ndata1_num_recovered_patients_sum = data1.number_of_recovered_patients_for_today.resample('M').sum()\n\n\nfig = px.scatter( \n                 y = data1_num_recovered_patients_mean,\n                 x = data1_num_recovered_patients_mean.index,\n                hover_name = data1_num_recovered_patients_sum,\n                animation_group = data1_num_recovered_patients_mean.index,\n                template = \"plotly_dark\",\n                size_max= (5,5)\n                 )\nfig.update_layout(title = \"Total number of patients who recovered by months\")\nfig.show()","6329a2dd":"# Monthly the number of seriously ill patients\n\ndata1_tot_num_seriously_ill_patients_mean = data1.the_number_of_seriously_ill_patients.resample('M').mean()\n\nf,ax1 = plt.subplots(figsize =(6,6))\nsns.pointplot(y=data1_tot_num_seriously_ill_patients_mean, x=data1_tot_num_seriously_ill_patients_mean.index,color='lime',alpha=0.8)\nplt.xticks(rotation = 60)\nplt.title('The number of seriously ill patients',fontsize = 20,color='blue')\nplt.show()","4c11ec0d":"# Total number of tests for today\n\ndata1_num_tests_for_today_mean = data1.number_of_tests_for_today.resample('M').mean()\ndata1_num_tests_for_today_sum = data1.number_of_tests_for_today.resample('M').sum()\n\n\nfig = px.scatter( \n                 y = data1_num_tests_for_today_mean,\n                 x = data1_num_tests_for_today_mean.index,\n                hover_name = data1_num_tests_for_today_sum,\n                animation_group = data1_num_tests_for_today_mean.index,\n                template = \"plotly_white\",\n                size_max= (5,5)\n                 )\nfig.update_layout(title = \"Total number of tests for today\")\nfig.show()","da1723b7":"#  Monthly Pneumonia rate in patients\ndata1_tot_num_pneumonia_rate_Mmean = data1['pneumonia_rate_in_patients_(%)'].resample('M').mean()\ndata1_tot_num_patients_mean = data1.number_of_patients_for_today.resample('M').mean()\n\nf,ax = plt.subplots(figsize = (6,6))\nsns.barplot(x=data1_tot_num_pneumonia_rate_Mmean ,y=data1_tot_num_pneumonia_rate_Mmean.index ,color ='red',alpha = 0.6,label='pneumonia')\nax.set(xlabel='Pneumonia rate(%)', ylabel='DATE',title = \"Pneumonia rate in patients\")\nplt.show()","0fa1400e":"data1.corr()","c830daa0":"sns.heatmap(data1.corr(), annot = True,fmt = \".2f\", linewidth = .7)\nplt.title(\"Relationship Between Features \")\nplt.show()","14b66a01":"sns.clustermap(data1.corr(), center = 0, cmap = \"vlag\", dendrogram_ratio = (0.1, 0.2), annot = True, linewidths = .7, figsize=(10,10))\nplt.show()","4f89abf3":"+ **I will fill in the missing data and make updates using machine learning in the future.**\n+ **This is my first post, please give your feedback. Take care of yourself**","9c74dd7e":"## Introduction\n* During the pandemic process, countries share rates such as daily patients\/cases with their people.\n\n* This dataset contains data officially shared by the Ministry of Health of the Republic of Turkey between May 2020 and July 2021.\n","7ddd2ffb":"<a id='8'><\/a> \n# What did we learn from the above section\n* **When we look at the 6-month charts in Turkey;**\n* There was serious declines in January and February with New Year's measures.\n* Unfortunately, with the relaxation of the rules in the following months, the increase in the number of cases and patients continued.\n* However, there was a serious decrease in the rates of severe patients and pneumonia, probably due to the effect of vaccines.\n* We will see this more clearly as the data comes in.","05a34606":"<a id='2'><\/a>     \n## Data content\n\n* **Total Number of Tests:** Total number of tests performed\n* **Total Number of Patiens:** Total number of known patiens \n* **Total Number of Deaths:** Total number of known deaths\n* **Pneumonia Rate in Patients (%):** Rate of pneumonia found in patients\n* **The Number of Seriously Ill Patients:** Total number of seriously ill patients\n* **Total Number of Recovered Patients:** Total number of known patients recovering\n* **Number of Cases Today:** Number of known cases today\n* **Number of Patients for Today:** Number of known patients today\n* **Number of Tests for Today:** Number of known tests today\n* **Number of Deaths for Today:** Number of known deaths today\n* **Number of Recovered Patients for Today:** Number of known Recovered Patients today","f6201426":"\n### Finally, I would like to thank the @DataI team for giving us their excellent course and knowledge.\n* **References:** \n* https:\/\/www.kaggle.com\/kanncaa1\/seaborn-tutorial-for-beginners?scriptVersionId=27768785\n* https:\/\/www.udemy.com\/course\/python-ile-veri-bilimi-makine-ogrenmesi-projeleri-a-ztm\/","bd3f9d96":"# COVID19 IN TURKEY EXPLANATORY DATA ANALYSIS","db1b3cdc":"<a id='3'><\/a>  \n# Read and Analyse Data\n","64684dde":"<a id='7'><\/a> \n# Relationship Between Features","b6d64bcd":"<a id='5'><\/a>  \n# CLEANING DATA","912f8a0f":"<a id='1'><\/a>     \n## Python Libraries\n* In this section, we import used libraries during this kernel.","2cf27ae4":"## Analysis Content\n1. [Python Libraries](#1)\n1. [Data content](#2)\n1. [Read and Analyse Data](#3)\n1. [Data info](#4)\n1. [Cleaning Data](#5)\n1. [Data Distributions](#6)\n1. [Relationship Between Features](#7)\n1. [Conclusion](#8)","c1891ec6":"<a id='6'><\/a> \n# Data Distributions","1eb806e8":"\n# Data Distributions by month","2b687b75":"### As you can see, the name of the columns is not useful\n* **Because there is a lot of space between words**\n* **The first character of the words in the columns is uppercase and we don't want them**\n* **We also need to change the data types**\n\n* **Now let's make the data types usable**","fe0dae11":"## What will you learn this project?\n* By month, like patient\/case, pneumonia\/patient, Seriously patients\/patient, patient\/recovering... rates We'll see\n\n* Seaborn library visualization techniques: bar, box, kde, swarm, heatmap, clustermap\n\n","05bb2e1e":"## **We cleared our data as you can see**\n\n**In this section we have done:**\n\n* Diagnose data for cleaning\n* Datetime method of pandas\n* Data parsing\n* Fix data types\n* Fix tne name of the columns whit several String methods\n* Missing data assert","d2686277":"<a id='4'><\/a>  \n## Data info \n* As can be seen, there are many missing data in this data set provided by the Ministry of Health.\n* Especially before 25 November 2020, daily case numbers are lacking.\n* Before 28 June 2020, we do not have the rates of severe patients and pneumonia.\n* As of June 4, 2021, there is no total rate.\n* Therefore, in Exploratory Data Analysis, we will examine portions of the data found between November 25, 2020, and June 3, 2021.\n\n* In the next versions, I will try to complete the missing data using machine learning structures."}}