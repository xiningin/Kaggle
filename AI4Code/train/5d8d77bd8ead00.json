{"cell_type":{"a38e931d":"code","5ff82cf2":"code","b2d2662e":"code","ed1f5012":"code","21018096":"code","f263febd":"code","a3df5158":"code","8a471562":"code","cae35c32":"code","06f2324c":"code","536dfc11":"code","a4534702":"code","c94301e9":"code","5e3564a8":"code","55ce4148":"code","d962d9ae":"code","50242065":"code","b78a4dbc":"code","08d405b5":"code","e0dd739a":"code","02535329":"code","287e771b":"code","cc47dd25":"code","562c48c0":"code","bafbe5de":"code","8bb5e759":"code","459b2196":"code","bccefa24":"code","1e7a5ae9":"code","3c952c6e":"code","ba88ff1d":"code","6acc252e":"markdown","2325b7f0":"markdown","3a4f3f3a":"markdown","eece2062":"markdown"},"source":{"a38e931d":"import numpy as np\nimport pandas as pd\n\n# we don't like warnings\n# you can comment the following 2 lines if you'd like to\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Matplotlib forms basis for visualization in Python\nimport matplotlib.pyplot as plt\n\n# We will use the Seaborn library\nimport seaborn as sns\nsns.set()\n\n# Graphics in retina format are more sharp and legible\n%config InlineBackend.figure_format = 'retina'\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5ff82cf2":"df = pd.read_csv('..\/input\/mlcourse\/telecom_churn.csv')\ndf.head()","b2d2662e":"features = ['Total day minutes', 'Total intl calls']\ndf[features].hist(figsize=(10, 4))","ed1f5012":"df[features].plot(kind='density', subplots=True, layout=(1, 2), sharex = False, figsize=(10,4))","21018096":"sns.distplot(df['Total intl calls'])","f263febd":"sns.boxplot(df['Total intl calls'])","a3df5158":"_, axes = plt.subplots(1, 2, sharey=True, figsize=(8, 4))\nsns.boxplot(df['Total intl calls'], ax=axes[1]);\nsns.violinplot(df['Total intl calls'], ax=axes[0]);","8a471562":"df[features].describe()","cae35c32":"df['Churn'].value_counts()","06f2324c":"_, axes = plt.subplots(nrows=1, ncols=2, figsize=(12, 4))\n# sns.countplot(x='Churn', data=df, ax=axes[0])\nsns.countplot(df['Churn'], ax=axes[0]);\n# sns.countplot(x='Customer service calls', data=df, ax=axes[1])\nsns.countplot(df['Customer service calls'], ax=axes[1]);","536dfc11":"# Drop non-numerical variables\nnumerical = list(set(df.columns) - set(['State', 'International plan', 'Voice mail plane', 'Area code', 'Churn', 'Coustomer service calls']))\n\n# Calculate and plot\ncorr_matrix = df[numerical].corr()\nsns.heatmap(corr_matrix)","a4534702":"numerical = list(set(numerical) - set(['Total day charge', 'Total eve charge', 'Total night charge', 'Total intl charge']))\ncorr_matrix = df[numerical].corr()\nsns.heatmap(corr_matrix)","c94301e9":"plt.scatter(df['Total day minutes'], df['Total night minutes'])","5e3564a8":"sns.jointplot(x='Total day minutes', y='Total night minutes', data=df, kind= 'scatter')","55ce4148":"sns.jointplot('Total day minutes', 'Total night minutes', data=df, kind= 'kde', color='red')","d962d9ae":"# `pairplot()` may become very slow with the SVG or retina format\n%config InlineBackend.figure_format = 'png'\nsns.pairplot(df[numerical])","50242065":"sns.lmplot('Total day minutes', 'Total night minutes', data=df, hue='Churn', fit_reg=False)","b78a4dbc":"# Sometimes you can analyze an ordinal variable just as numerical one\nnumerical.append('Customer service calls')\n\nfig, axes = plt.subplots(nrows=3, ncols=4, figsize=(10, 7))\nfor idx, feat in enumerate(numerical):\n    ax = axes[int(idx \/ 4), idx % 4]\n    sns.boxplot(x='Churn', y=feat, data=df, ax=ax)\n    ax.set_xlabel('')\n    ax.set_ylabel(feat)\nfig.tight_layout();","08d405b5":"_, axes = plt.subplots(1, 2, sharey=True, figsize=(10, 4))\n\nsns.boxplot(x='Churn', y='Total day minutes', data=df, ax=axes[0]);\nsns.violinplot(x='Churn', y='Total day minutes', data=df, ax=axes[1]);","e0dd739a":"sns.catplot(x='Churn', y='Total day minutes', col='Customer service calls',\n               data=df[df['Customer service calls'] < 8], kind=\"box\",\n               col_wrap=4, height=3, aspect=.8);","02535329":"sns.countplot('Customer service calls', hue='Churn', data=df)","287e771b":"_, axes = plt.subplots(1, 2, sharey=True, figsize=(10, 4))\n\nsns.countplot(x='International plan', hue='Churn', data=df, ax=axes[0]);\nsns.countplot(x='Voice mail plan', hue='Churn', data=df, ax=axes[1]);","cc47dd25":"# Let's try to see how Churn is related to the categorical variable State by creating a cross tabulation:\npd.crosstab(df['State'], df['Churn']).T","562c48c0":"df.groupby(['State'])['Churn'].agg([np.mean]).sort_values(by='mean', ascending=False).T","bafbe5de":"from sklearn.manifold import TSNE\nfrom sklearn.preprocessing import StandardScaler","8bb5e759":"X = df.drop(['Churn', 'State'], axis=1)\nX['International plan'] = X['International plan'].map({'Yes': 1, 'No': 0})\nX['Voice mail plan'] = X['Voice mail plan'].map({'Yes': 1, 'No': 0})","459b2196":"scaler = StandardScaler()\nX_scaled = scaler.fit_transform(X)","bccefa24":"tsne = TSNE(random_state=17)\ntsne_repr = tsne.fit_transform(X_scaled)","1e7a5ae9":"plt.scatter(tsne_repr[:, 0], tsne_repr[:, 1], alpha=.5);","3c952c6e":"plt.scatter(tsne_repr[:, 0], tsne_repr[:, 1],\n            c=df['Churn'].map({False: 'blue', True: 'orange'}), alpha=.5);","ba88ff1d":"_, axes = plt.subplots(1, 2, sharey=True, figsize=(12, 5))\n\nfor i, name in enumerate(['International plan', 'Voice mail plan']):\n    axes[i].scatter(tsne_repr[:, 0], tsne_repr[:, 1], \n                    c=df[name].map({'Yes': 'orange', 'No': 'blue'}), alpha=.5);\n    axes[i].set_title(name);","6acc252e":"# Scatter plot\nThe scatter plot displays values of two numerical variables as Cartesian coordinates in 2D space. Scatter plots in 3D are also possible.","2325b7f0":"# Quantitative vs. Categorical","3a4f3f3a":"# Scatterplot matrix\n\nIn some cases, we may want to plot a scatterplot matrix such as the one shown below. Its diagonal contains the distributions of the corresponding variables, and the scatter plots for each pair of variables fill the rest of the matrix.","eece2062":"Now it is clear that, for example, many dissatisfied customers who canceled their subscription are crowded together in one cluster representing the people with the international plan but no voice mail."}}