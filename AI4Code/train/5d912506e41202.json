{"cell_type":{"c512bdff":"code","901668f1":"code","707edb95":"code","b231936b":"code","8865f740":"code","a0199d16":"code","33083fdf":"code","b6abd422":"code","a7995906":"code","7b7c4903":"code","aa463cec":"code","6f51ddb5":"code","04195305":"code","bfcb5ede":"code","7f89e45b":"code","dfd25ae5":"code","7f988d8a":"code","d2d5e254":"code","3ac82a16":"code","d8429e5e":"code","4a7868ff":"code","23bd242e":"code","4f6aaa2e":"markdown"},"source":{"c512bdff":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","901668f1":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))","707edb95":"data = pd.read_csv('..\/input\/bitmex_xbtusd_1m_2016-12-31_2018-06-17.csv')","b231936b":"data.info()","8865f740":"data.corr()","a0199d16":"f,ax = plt.subplots(figsize=(15, 15))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()\n","33083fdf":"data.head(21)","b6abd422":"data.columns","a7995906":"data.volume.plot(kind = 'line', color = 'red',label = 'volume',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\ndata.open.plot(color = 'green',label = 'open',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper left')     # legend = puts label into plot\nplt.xlabel('open axis')              # label = name of label\nplt.ylabel('volume axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","7b7c4903":"data.plot(kind='scatter', x='volume', y='open',alpha = 0.5,color = 'green')\nplt.xlabel('volume')              # label = name of label\nplt.ylabel('open')\nplt.title('Volume_Open Scatter Plot')            # title = title of plot\nplt.show()","aa463cec":"data.open.plot(kind = 'hist',bins = 60,figsize = (12,12),color='pink')\nplt.show()","6f51ddb5":"dictionary = {'open' : 'bitcoin','volume' : 'money'}\nprint(dictionary.keys())\nprint(dictionary.values())","04195305":"dictionary['open'] = \"crypto\"    # update existing entry\nprint(dictionary)\ndictionary['close'] = \"bitcoin\"       # Add new entry\nprint(dictionary)\ndel dictionary['open']              # remove entry with key 'spain'\nprint(dictionary)\nprint('volume' in dictionary)        # check include or not\ndictionary.clear()                   # remove all entries in dict\nprint(dictionary)","bfcb5ede":"print(dictionary) ","7f89e45b":"data = pd.read_csv('..\/input\/bitmex_xbtusd_1m_2016-12-31_2018-06-17.csv')","dfd25ae5":"series = data['open']        # data['open'] = series\nprint(type(series))\ndata_frame = data[['open']]  # data[['open']] = data frame\nprint(type(data_frame))","7f988d8a":"# Comparison operator\nprint(6 > 8)\nprint(4!=5)\n# Boolean operators\nprint(True and False)\nprint(True or False)","d2d5e254":"# 1 - Filtering Pandas data frame\nx = data['open']>999\ndata[x]","3ac82a16":"data[np.logical_and(data['open']>999, data['close']>999 )]","d8429e5e":"# This is also same with previous code line. Therefore we can also use '&' for filtering.\ndata[(data['open']>999) & (data['close']>999)]","4a7868ff":"i = 0\nwhile i != 5 :\n    print('i is: ',i)\n    i +=1 \nprint(i,' is equal to 5')","23bd242e":"lis = [1,2,3,4,5]\nfor i in lis:\n    print('i is: ',i)\nprint('')\n\n# Enumerate index and value of list\n# index : value = 0:1, 1:2, 2:3, 3:4, 4:5\nfor index, value in enumerate(lis):\n    print(index,\" : \",value)\nprint('')   \n\n# For dictionaries\n# We can use for loop to achive key and value of dictionary. We learnt key and value at dictionary part.\ndictionary = {'open' : 'bitcoin','volume' : 'money'}\nfor key,value in dictionary.items():\n    print(key,\" : \",value)\nprint('')\n\n# For pandas we can achieve index and value\nfor index,value in data[['open']][0:1].iterrows():\n    print(index,\" : \",value)","4f6aaa2e":"FINAL"}}