{"cell_type":{"874c18e3":"code","75d8b378":"code","22a0e9f0":"code","00d19dc1":"code","d2f7a876":"code","d392308d":"code","abaf57a5":"code","5163432d":"code","1e066006":"code","b04b90f3":"code","d868f83a":"code","3db8487e":"code","a2e30792":"code","44cab8e4":"code","4fab0209":"code","dd8f3cc1":"code","470482a8":"code","26ea222b":"code","320b6a9d":"code","0afd2d14":"code","fa858bde":"code","4bbc81e7":"code","1c556a9f":"code","c255a803":"code","02eebbc6":"code","991c1198":"markdown","b829a4c2":"markdown","b85832d8":"markdown","c0161322":"markdown","5c352fb4":"markdown","648dfc38":"markdown","6dc94696":"markdown","070990b6":"markdown","cf7fe3df":"markdown","dad09213":"markdown","e3f6aae2":"markdown","99c9c559":"markdown","8f65538d":"markdown"},"source":{"874c18e3":"import tensorflow as tf\nimport matplotlib.pyplot as plt\nimport numpy as np","75d8b378":"mnist = tf.keras.datasets.mnist","22a0e9f0":"(x_train,y_train),(x_test,y_test) = mnist.load_data()","00d19dc1":"x_train.shape","d2f7a876":"y_train.shape","d392308d":"x_test.shape","abaf57a5":"y_test.shape","5163432d":"x_train[0]","1e066006":"x_train = tf.keras.utils.normalize(x_train,axis=1)\nx_test = tf.keras.utils.normalize(x_test,axis=1)\n","b04b90f3":"x_train[0]","d868f83a":"x_test[0]","3db8487e":"model = tf.keras.Sequential()","a2e30792":"model.add(tf.keras.layers.Flatten()) # adding flatten curve","44cab8e4":"model.add(tf.keras.layers.Dense(128,activation=tf.nn.relu)) #relu used for adding Non Linearity\n","4fab0209":"model.add(tf.keras.layers.Dense(128,activation=tf.nn.relu)) #adding dense layer","dd8f3cc1":"model.add(tf.keras.layers.Dense(10,activation=tf.nn.softmax)) # output as softmax activation method","470482a8":"model.compile(optimizer=\"adam\",\n              loss = \"sparse_categorical_crossentropy\",\n              metrics = ['accuracy']\n              )\nmodel.fit(x_train,y_train,epochs=10)","26ea222b":"validation_loss,validation_accuracy = model.evaluate(x_test,y_test)","320b6a9d":"print(validation_loss,validation_accuracy)","0afd2d14":"model.save(\"firstModel.model\")","fa858bde":"new_model = tf.keras.models.load_model(\"firstModel.model\")","4bbc81e7":"prediction = new_model.predict(x_test)","1c556a9f":"prediction[0]","c255a803":"def show_numbers(i):\n  plt.imshow(x_test[i])\n  print(\"The Number shown in the image is:   \",np.argmax(prediction[i]), end='\\n')","02eebbc6":"show_numbers(30)","991c1198":"### Saving the model","b829a4c2":"<a href=\"https:\/\/colab.research.google.com\/github\/yash0304\/0304first\/blob\/master\/digit_classification.ipynb\" target=\"_parent\"><img src=\"https:\/\/colab.research.google.com\/assets\/colab-badge.svg\" alt=\"Open In Colab\"\/><\/a>","b85832d8":"### Importing Libraries","c0161322":"#Digit Recognition Using Tensor Flow and Keras","5c352fb4":"### Predicting with testing data set","648dfc38":"###Function to show the Output","6dc94696":"### Training and Testing Data Set","070990b6":"### Loading the model","cf7fe3df":"### Compiling the model\n","dad09213":"### Model Building and Training","e3f6aae2":"### Validating the model","99c9c559":"### Normalize","8f65538d":"### Importing MNIST Data Set for Digits Data"}}