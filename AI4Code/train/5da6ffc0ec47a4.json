{"cell_type":{"d8806b70":"code","cbab3472":"code","ea48f8f9":"code","a4bc78a0":"code","255fff1d":"code","3c62345c":"code","f06604cd":"code","7c3494ae":"code","1c74051f":"code","63b11ace":"code","68c38068":"code","0f2f4ebb":"code","b319b279":"code","0ac82ede":"code","ff8e150a":"code","63e70934":"code","182df7f2":"markdown"},"source":{"d8806b70":"# Important Imports\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nimport seaborn as sns\nfrom sklearn import linear_model\nimport matplotlib.pyplot as plt","cbab3472":"# Reading training data\ntdata = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\n\n# First 5 rows of tdata \ntdata.head()","ea48f8f9":"# Getting info of features\ntdata.info()","a4bc78a0":"# Seperating output label from the tdata data\ny = tdata[['Survived']]\ntdata = tdata.drop(['Survived'], axis = 1)","255fff1d":"# Dropping Cabin feature since it has very less number of rows in comparison to other features\ntdata = tdata.drop(['Cabin'], axis = 1)\n\n# Removing unique features, these will not help in classification\ntdata = tdata.drop(['Name','Ticket', 'PassengerId'], axis = 1)\n\n# tdata after changes\ntdata.head()","3c62345c":"# Describing numerical features\ntdata.describe()","f06604cd":"# Creating histograms of the above 5 features\n\ntdata.Pclass.plot(kind='hist')\nplt.xlabel('Pclass')\nplt.title('Distribution of Pclass')\nplt.show()\ntdata.Age.plot(kind='hist')\nplt.xlabel('Age')\nplt.title('Distribution of Age')\nplt.show()\ntdata.SibSp.plot(kind='hist')\nplt.xlabel('SibSp')\nplt.title('Distribution of SibSp')\nplt.show()\ntdata.Parch.plot(kind='hist')\nplt.xlabel('Parch')\nplt.title('Distribution of Parch')\nplt.show()\ntdata.Fare.plot(kind='hist')\nplt.xlabel('Fare')\nplt.title('Distribution of Fare')\nplt.show()","7c3494ae":"# Applying One Hot Encoding to Sex Feature, providing numbered labels to male and female\nNew_S = pd.get_dummies(tdata[['Sex']])\nNew_S.head()","1c74051f":"# Applying One Hot Encoding to Embarked Feature, providing numbered labels to character values\nNew_E = pd.get_dummies(tdata[['Embarked']])\nNew_E.head()","63b11ace":"# Adding One hot encoded features to tdata nad droping prevoius features\ntdata[['Sex_female','Sex_male']] = New_S\ntdata[['Embarked_C','Embarked_Q','Embarked_S']] = New_E\ntdata = tdata.drop(['Sex','Embarked'], axis = 1)\n\n# updated tdata\ntdata.head()","68c38068":"# Getting info of tdata\ntdata.info()","0f2f4ebb":"# Filling remaining rows in Age feature with mean age value\nmean_a = tdata.Age.mean()\ntdata.Age = tdata.Age.fillna(mean_a)\n\n# checking info\ntdata.info()","b319b279":"#spliting the tdata by random split of 70:30\n\ntrain = tdata.sample(frac = 0.7, random_state = 42)\ntest = tdata.drop(train.index)\ny_test=y.drop(train.index)\ny_train = y.iloc[train.index]\nprint(train.shape)\nprint(test.shape)\nprint(y_train.shape)\nprint(y_test.shape)","0ac82ede":"# Setting logistic regression model\nlogistic_regression_model = linear_model.SGDClassifier(loss = 'log', max_iter  =10000, tol = 0.0001, random_state = 30)","ff8e150a":"#model fit on the training set\nlogistic_regression_model.fit(train,y_train)","63e70934":"#prediction using the test set and returning the accuracy\nacc = logistic_regression_model.score(test,y_test)\nprint('accuracy = ',acc*100,'%')","182df7f2":"# Titanic- EDA and Logistic Regression"}}