{"cell_type":{"7e777435":"code","b7c300ff":"code","b48558fc":"code","11881e40":"code","cf1c2d7f":"code","6faad239":"code","280ea82a":"code","6126400a":"code","88a86ca6":"code","27c963b3":"code","a1d28053":"code","58619b9b":"code","62598f82":"code","0e2b3840":"code","a62bd4f1":"code","8e94a13d":"code","14b783d9":"code","35b390f1":"code","864f7e34":"code","ec809890":"code","593821a9":"code","65b5982e":"code","68d74d83":"code","93d91c85":"code","e5062f55":"code","6987b44c":"code","3f183708":"code","2dc452ab":"code","4be35214":"code","41d08d0e":"code","eadeb4ae":"markdown","98b1bd29":"markdown"},"source":{"7e777435":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b7c300ff":"data = pd.read_csv('\/kaggle\/input\/weather-dataset\/weatherHistory.csv')","b48558fc":"#to display the top 5 rows\n\ndata.head(5)","11881e40":"data.shape","cf1c2d7f":"data.index","6faad239":"data.columns","280ea82a":"data.dtypes","6126400a":"data['Daily Summary'].unique()","88a86ca6":"data.nunique()","27c963b3":"data.count()","a1d28053":"data['Daily Summary'].value_counts()","58619b9b":"data.info()","62598f82":"data.head(2)","0e2b3840":"data.nunique()","a62bd4f1":"data['Wind Speed (km\/h)'].nunique()","8e94a13d":"data['Wind Speed (km\/h)'].unique()","14b783d9":"data['Formatted Date'] = pd.to_datetime(data['Formatted Date'], utc=True)\ndata['Formatted Date']","35b390f1":"data = data.set_index('Formatted Date')\ndata.head()","864f7e34":"#after resampling\n\ndata_columns = ['Wind Speed (km\/h)','Temperature (C)']\ndf_monthly_mean = data[data_columns].resample('MS').mean()\ndf_monthly_mean.head()","ec809890":"#Plotting Variation in Apparent Wind Speed (km\/h) and Temperature (C) with time\nimport numpy as np             \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nplt.figure(figsize=(14,6))\nplt.title(\"Variation in Apparent Wind Speed (km\/h) and Temperature (C) with time\")\nsns.lineplot(data=df_monthly_mean)","593821a9":"data.head()","65b5982e":"data['Precip Type'].unique()","68d74d83":"data_precip = data[['Precip Type','Temperature (C)']]\ndata_precip","93d91c85":"data_precip = data_precip.groupby(['Precip Type']).mean()[['Temperature (C)']]\ndata_precip","e5062f55":"# data to plot\nn_groups = 2\n\n# create plot\nfig, ax = plt.subplots()\nindex = np.arange(n_groups)\nbar_width = 0.25\nopacity = 0.9\n\nrects1 = plt.bar(index, data_precip['Temperature (C)'], bar_width,\nalpha=opacity,\ncolor='b',\nlabel='Temperature (C)')\n\n\nplt.rcParams[\"figure.figsize\"] = (4,2)\nplt.xlabel('Weather')\nplt.ylabel('Visibility & Wind Speed')\nplt.title('Variation in Apparent Visibility and Wind Speed with Summary')\nplt.xticks(index,('rain','snow'))\nplt.legend()\nplt.show()","6987b44c":"data_1 = pd.read_csv('\/kaggle\/input\/weather-dataset\/weatherHistory.csv')\ndata_visibility = data_1.groupby(['Summary']).mean()[['Visibility (km)','Wind Speed (km\/h)']]\nvisi = data_visibility.sort_values(by=['Visibility (km)'],ascending=False)\nvisi = visi.head()\nvisi","3f183708":"# data to plot\nn_groups = 5\n\n# create plot\nfig, ax = plt.subplots()\nindex = np.arange(n_groups)\nbar_width = 0.25\nopacity = 0.9\n\nrects1 = plt.bar(index, visi['Visibility (km)'], bar_width,\nalpha=opacity,\ncolor='r',\nlabel='Visibility (km)')\n\nrects2 = plt.bar(index + bar_width, visi['Wind Speed (km\/h)'], bar_width,\nalpha=opacity,\ncolor='g',\nlabel='Wind Speed (km\/h)')\n\nplt.rcParams[\"figure.figsize\"] = (16,5)\nplt.xlabel('Weather')\nplt.ylabel('Visibility & Wind Speed')\nplt.title('Variation in Apparent Visibility and Wind Speed with Summary')\nplt.xticks(index+0.12,('Partly Cloudy','Windy and Partly Cloudy','Breezy and Mostly Cloudy','Dangerously Windy and Partly Cloudy','Clear'))\nplt.legend()\nplt.show()","2dc452ab":"data_1.head(2)","4be35214":"data_1['Formatted Date'] = pd.to_datetime(data_1['Formatted Date'], utc=True)\ndata_1['Formatted Date']","41d08d0e":"data_1.info()","eadeb4ae":"Observation : From the plot above, we can say that the air temperature will drop when the weather is rainy and snowy. ","98b1bd29":"Observation: From the plot above, we can say that wind speed will increase when the air temperature drops. And vice versa."}}