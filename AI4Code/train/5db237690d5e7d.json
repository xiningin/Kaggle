{"cell_type":{"569f66ef":"code","f65e4882":"code","72caba8e":"code","286d2c5d":"code","bc86eb48":"code","e77243c4":"code","fbec6e60":"code","abb923e0":"code","c99e89a3":"code","02a5ebc6":"code","80fe688f":"code","2cc30fef":"code","c9ffa60d":"code","9585df0d":"code","9058f63e":"code","9103d5d4":"code","60fb3f17":"code","27216374":"code","00e47045":"code","4b156577":"code","029e9b16":"code","1c7ace81":"code","feb04847":"code","ae88d5aa":"code","8b8d6298":"code","830e23d6":"code","6fb625f1":"code","c2b245af":"code","6d516a7f":"code","0ae81617":"code","564fbec0":"code","1aed0ef5":"code","644adf96":"code","4d794f47":"code","48d47a09":"code","7801c4b2":"code","dbc46fb7":"code","68ca9291":"code","bc219db9":"code","3c3e2194":"code","f5bd3cc0":"code","011e7678":"code","b7b22830":"code","9f1f29ba":"code","683652a1":"code","00c10c3d":"code","00abed11":"code","1cc0774d":"code","781c2b2d":"code","cfe755da":"code","b904e671":"code","868e525b":"code","ec10a787":"code","13867fc8":"code","237fc646":"code","a37e8da6":"code","1f7ab9df":"code","1966dae3":"code","c9367b1f":"code","e5a63938":"code","c1e3d8a1":"code","21163c22":"code","1e5bd0d1":"code","b420b432":"code","143c9f1a":"code","d9fbcf40":"code","55e2a6c4":"code","26f11462":"code","e7693542":"code","b1dddcf0":"code","f2662568":"markdown","c4b47421":"markdown","c5589cba":"markdown","ed01d0b1":"markdown","89097be7":"markdown","6c26d462":"markdown","a57f81f0":"markdown"},"source":{"569f66ef":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f65e4882":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","72caba8e":"train_df=pd.read_csv('..\/input\/big-mart-sales-prediction\/Train.csv')\ntest_df=pd.read_csv('..\/input\/big-mart-sales-prediction\/Test.csv')","286d2c5d":"test1_df=test_df.copy()","bc86eb48":"test1_df","e77243c4":"train_df.head()","fbec6e60":"train_df.shape,test_df.shape","abb923e0":"train_df.describe()","c99e89a3":"train_df.info()","02a5ebc6":"cat_cols=train_df.select_dtypes([object])\nnum_cols=train_df.select_dtypes(exclude=[object])","80fe688f":"cat_cols.drop(['Outlet_Identifier','Item_Identifier'],axis=1,inplace=True)","2cc30fef":"train_df.isnull().sum()","c9ffa60d":"test_df.isnull().sum()","9585df0d":"train_df['Item_Weight'].fillna(train_df['Item_Weight'].mean(),inplace=True)\ntrain_df['Outlet_Size'].fillna(train_df['Outlet_Size'].mode()[0],inplace=True)","9058f63e":"test_df['Item_Weight'].fillna(test_df['Item_Weight'].mean(),inplace=True)\ntest_df['Outlet_Size'].fillna(test_df['Outlet_Size'].mode()[0],inplace=True)","9103d5d4":"train_df.drop(['Item_Identifier','Outlet_Identifier'],axis=1,inplace=True)","60fb3f17":"test_df.drop(['Item_Identifier','Outlet_Identifier'],axis=1,inplace=True)","27216374":"for col in cat_cols.columns:\n    print(col)\n    print(train_df[col].value_counts())\n    print('--------------------------------------------------------------------------')","00e47045":"train_df[['Item_Fat_Content']].value_counts()","4b156577":"# Combine fat content\ntrain_df['Item_Fat_Content']=train_df['Item_Fat_Content'].replace({'LF':'Low Fat','reg':'Regular','low fat':'Low Fat'})","029e9b16":"# Reducing values for outlet year\ntrain_df['Outlet Years']=2013-train_df['Outlet_Establishment_Year']\n\ntest_df['Outlet Years']=2013-test_df['Outlet_Establishment_Year']\n\n","1c7ace81":"test1_df['Outlet Years']=2013-test1_df['Outlet_Establishment_Year']","feb04847":"train_df","ae88d5aa":"test_df","8b8d6298":"sns.displot(train_df['Item_Weight'])","830e23d6":"sns.countplot(train_df['Item_Fat_Content'])","6fb625f1":"sns.displot(train_df['Item_Visibility'],kind='kde',color='blue')","c2b245af":"train_df['Item_Type'].value_counts()","6d516a7f":"sns.countplot(y=train_df['Item_Type'])","0ae81617":"sns.displot(train_df['Item_MRP'],kind='hist')","564fbec0":"sns.countplot(train_df['Outlet_Size'])","1aed0ef5":"sns.countplot(train_df['Outlet_Size'],hue=train_df['Outlet_Location_Type'])","644adf96":"fig, ax = plt. subplots(figsize = (9, 7))\nsns.countplot(train_df['Outlet_Size'],hue=train_df['Outlet_Type'])","4d794f47":"sns.countplot(train_df['Outlet_Location_Type'])","48d47a09":"fig, ax = plt. subplots(figsize = (9, 7))\nsns.countplot(train_df['Outlet_Location_Type'],hue=train_df['Outlet_Type'])","7801c4b2":"fig, ax = plt. subplots(figsize = (9, 7))\nsns.countplot(train_df['Outlet_Type'])","dbc46fb7":"fig, ax = plt. subplots(figsize = (9, 7))\nsns.barplot(train_df['Outlet_Type'],train_df['Outlet Years'])","68ca9291":"fig, ax = plt. subplots(figsize = (10, 4))\nsns.barplot(train_df['Outlet_Type'],train_df['Outlet Years'],hue=train_df['Outlet_Type'])","bc219db9":"sns.displot(train_df['Item_Outlet_Sales'],kind='kde')","3c3e2194":"sns.countplot(train_df['Outlet_Establishment_Year'])","f5bd3cc0":"fig, ax = plt. subplots(figsize = (13, 7))\nsns.countplot(train_df['Outlet_Establishment_Year'],hue=train_df['Outlet_Location_Type'])","011e7678":"fig, ax = plt. subplots(figsize = (13, 7))\nsns.countplot(train_df['Outlet_Establishment_Year'],hue=train_df['Outlet_Type'])","b7b22830":"fig, ax = plt. subplots(figsize = (13, 7))\nsns.countplot(train_df['Outlet_Establishment_Year'],hue=train_df['Outlet_Size'])","9f1f29ba":"#Checking for correlation\ncorr=train_df.corr()\ncorr","683652a1":"sns.heatmap(corr,annot=True,cmap='tab20b_r')","00c10c3d":"train_df.drop('Outlet_Establishment_Year',axis=1,inplace=True)","00abed11":"test_df.drop('Outlet_Establishment_Year',axis=1,inplace=True)","1cc0774d":"train_df","781c2b2d":"test_df","cfe755da":"train_df","b904e671":"#Encoding the data\nfrom sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()","868e525b":"list_cat=list(cat_cols.columns)\ntrain_df[list_cat] =train_df[list_cat].apply(le.fit_transform)\n","ec10a787":"test_df[list_cat] =test_df[list_cat].apply(le.fit_transform)","13867fc8":"train_df","237fc646":"test_df","a37e8da6":"x=train_df.drop('Item_Outlet_Sales',axis=1)\ny=train_df['Item_Outlet_Sales']","1f7ab9df":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)","1966dae3":"from sklearn.linear_model import LinearRegression,Ridge,Lasso\nfrom sklearn.metrics import mean_squared_error,mean_absolute_error,r2_score\nfrom sklearn.model_selection import KFold,cross_val_score\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor","c9367b1f":"dt_model=DecisionTreeRegressor()  # We normalize our data for better results\ndt_model.fit(x_train,y_train)\n\ny4_pred=dt_model.predict(x_test)\n\n\nresult4=cross_val_score(dt_model,x_train,y_train,cv=KFold(10))\n\n\nprint(result4)\nprint('---------------------------')\nprint('CV :',np.mean(result4))\nprint('---------------------------')\nprint('MSE:',mean_squared_error(y4_pred,y_test))\nprint('---------------------------')\nprint('MAE :',mean_absolute_error(y4_pred,y_test))\nprint('---------------------------')\nprint('RMSE:',np.sqrt(mean_squared_error(y4_pred,y_test)))\nprint('---------------------------')\nprint('R2:',r2_score(y4_pred,y_test))","e5a63938":"rf_model=RandomForestRegressor()  # We normalize our data for better results\nrf_model.fit(x_train,y_train)\n\ny5_pred=rf_model.predict(x_test)\n\n\nresult5=cross_val_score(rf_model,x_train,y_train,cv=KFold(10))\n\n\nprint(result5)\nprint('---------------------------')\nprint('CV :',np.mean(result5))\nprint('---------------------------')\nprint('MSE:',mean_squared_error(y5_pred,y_test))\nprint('---------------------------')\nprint('MAE :',mean_absolute_error(y5_pred,y_test))\nprint('---------------------------')\nprint('RMSE:',np.sqrt(mean_squared_error(y5_pred,y_test)))\nprint('---------------------------')\nprint('R2:',r2_score(y5_pred,y_test))","c1e3d8a1":"from sklearn.model_selection import RandomizedSearchCV\nn_estimators=[200,400,600,800,1000,1200]\n\nmax_features=['auto', 'sqrt','log2']\n\nmax_depth = [int(x) for x in np.linspace(10, 1000,10)]\n\nmin_samples_split = [2, 5, 10,14]\n\nmin_samples_leaf = [1, 2, 4,6,8]\n\nrandom_grid={'n_estimators':n_estimators,\n            'max_features':max_features,\n            'max_depth':max_depth,\n            'min_samples_split':min_samples_split,\n            'min_samples_leaf':min_samples_leaf}\n            #'criterion':['mse','mae']}","21163c22":"print(random_grid)","1e5bd0d1":"rf1=RandomForestRegressor()\nrf_randomized=RandomizedSearchCV(estimator=rf1,param_distributions=random_grid,n_iter=100,cv=3,verbose=2,\n                               random_state=100,n_jobs=-1)","b420b432":"rf_randomized.fit(x_train,y_train)","143c9f1a":"rf_randomized.best_params_","d9fbcf40":"rf_final=rf_randomized.best_estimator_","55e2a6c4":"y_pred_random=rf_final.predict(x_test)","26f11462":"print('---------------------------')\nprint('MSE:',mean_squared_error(y_test,y_pred_random))\nprint('---------------------------')\nprint('MAE :',mean_absolute_error(y_test,y_pred_random))\nprint('---------------------------')\nprint('RMSE:',np.sqrt(mean_squared_error(y_test,y_pred_random)))\nprint('---------------------------')\nprint('R2:',r2_score(y_test,y_pred_random))","e7693542":"predictions = rf_final.predict(test_df)","b1dddcf0":"output = pd.DataFrame({'Item_Identifier': test1_df.Item_Identifier, 'Outlet_Identifier':test1_df.Outlet_Identifier,'Item_Outlet_Sales':predictions})\noutput.to_csv('final_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","f2662568":"### Randomized CV","c4b47421":"### Data Visualization","c5589cba":"### Decision Tree Regressor","ed01d0b1":"### Model Building","89097be7":"### Random forest Regressor","6c26d462":"### Encoding the data","a57f81f0":"### Hyperparameter Tuning"}}