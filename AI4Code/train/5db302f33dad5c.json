{"cell_type":{"9b98c3e3":"code","07e6de14":"code","f63c4642":"code","af0b19ec":"code","532bc35d":"code","8e60488e":"code","713a3d9b":"code","4da5d4be":"code","7073152d":"code","539e6c8d":"code","2ea13e87":"code","0048c7f2":"code","e07111af":"code","a0a5f020":"code","503e3bc4":"code","d928c234":"code","39403774":"markdown"},"source":{"9b98c3e3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","07e6de14":"DATA_DIR = \"\/kaggle\/input\/yelp-review-dataset\/yelp_review_polarity_csv\/\"\n\ndata = pd.read_csv(DATA_DIR + \"train.csv\",header=None)","f63c4642":"data.head()","af0b19ec":"data.columns = [\"rating\",\"text\"]","532bc35d":"data.head()","8e60488e":"data[\"rating\"].value_counts()","713a3d9b":"data.text[0], data.rating[0]","4da5d4be":"data.text[1], data.rating[1]","7073152d":"from sklearn.model_selection import train_test_split","539e6c8d":"y = data.rating.values","2ea13e87":"xtrain, xvalid, ytrain, yvalid = train_test_split(data.text.values, y, \n                                                  stratify=y, \n                                                  random_state=42, \n                                                  test_size=0.1, shuffle=True)","0048c7f2":"print (xtrain.shape)\nprint (xvalid.shape)","e07111af":"from sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.feature_extraction.text import CountVectorizer","a0a5f020":"%%time\ntfv = TfidfVectorizer(min_df=3,  max_features=None, \n            strip_accents='unicode', analyzer='word',token_pattern=r'\\w{1,}',\n            ngram_range=(1, 3), use_idf=1,smooth_idf=1,sublinear_tf=1,\n            stop_words = 'english')\n\ntfv.fit(list(xtrain) + list(xvalid))\nxtrain_transform  = tfv.transform(xtrain)\nxvalid_transform  = tfv.transform(xvalid)\n","503e3bc4":"from sklearn.linear_model import LogisticRegression\n\nclf = LogisticRegression(C =1.0 )\nclf.fit(xtrain_transform, ytrain)\npredictions = clf.predict_proba(xvalid_transform)\n","d928c234":"from sklearn.metrics import roc_auc_score\n\nroc_auc_score(yvalid, predictions[:, 1])","39403774":"**TFIDF + Logistic Regression**"}}