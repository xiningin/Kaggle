{"cell_type":{"21d10770":"code","4f274a9e":"code","adc86fba":"code","97ecad11":"code","cb2a1716":"code","965cfa9c":"code","b6564f7a":"code","011e5794":"code","6f6176ad":"markdown","0f7686db":"markdown","eef76ee8":"markdown","47574be7":"markdown"},"source":{"21d10770":"\nimport numpy as np \nimport pandas as pd \nfrom tensorflow.keras.layers import Input,Dense,Dropout\nfrom tensorflow.keras.models import Sequential\nfrom sklearn.metrics import roc_curve, roc_auc_score\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import train_test_split,GridSearchCV\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n","4f274a9e":"data=pd.read_csv('\/kaggle\/input\/higgsb\/training.csv')\nprint(data.isnull().sum())\ndata","adc86fba":"data.info()","97ecad11":"#f,ax=plt.subplots(figsize= (256 ,96))  \n#sns.heatmap(X.head(200), annot=True, linewidths=.5 ,ax=  ax,square= False)\n","cb2a1716":"X = data.drop([ 'Label','EventId'],axis=1,inplace=False)\ny = pd.get_dummies(data.Label)","965cfa9c":"X_train,X_valid,y_train,y_valid=train_test_split(X,y,train_size=0.8,shuffle=True,random_state=41)","b6564f7a":"knn = KNeighborsClassifier(n_neighbors= 5) \nknn.fit(X_train,y_train)\nknn.score(X_valid,y_valid)","011e5794":"model=Sequential()\nmodel.add(Input(X.shape[1],batch_size= 32) )\nmodel.add(Dense(64,activation=\"relu\"))\nmodel.add(Dense(64,activation=\"relu\"))\nmodel.add(Dropout(0.2)) \nmodel.add(Dense(64,activation=\"relu\"))\nmodel.add(Dense(32,activation=\"relu\"))\nmodel.add(Dense(512,activation=\"relu\"))\nmodel.add(Dense(y.shape [1],activation=\"softmax\"))\n\nmodel.compile(loss=\"categorical_crossentropy\",optimizer=\"adam\",metrics=['accuracy'] )\nmodel.fit(X.values,y.values,validation_split=0.2,batch_size=32,verbose=1,shuffle = False,epochs =7)","6f6176ad":"# NN Approach","0f7686db":"# Data split","eef76ee8":"**KNN** Score : **0.8067** \nThough i think with **GridSearch** it can score a lot better","47574be7":"# KNN Approach"}}