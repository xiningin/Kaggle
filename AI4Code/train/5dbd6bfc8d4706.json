{"cell_type":{"aa10bcde":"code","ba723662":"code","c1e5a7f1":"code","72fcd9c1":"code","a304fea5":"code","bf12a4c3":"code","e6018104":"code","b1d8859d":"code","22e22030":"code","09e69f27":"code","8cb362de":"code","9c450cd7":"code","182d8f79":"code","5d4d9ef9":"code","adfd7471":"code","eda8b61a":"code","162f5023":"markdown","a5587668":"markdown","eca4988a":"markdown","ea9dd98a":"markdown","4ca52b2f":"markdown","ae385441":"markdown","4f59db23":"markdown"},"source":{"aa10bcde":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ba723662":"train_df = pd.read_csv('..\/input\/frenchfakenewsdetector\/datafake_train.csv',delimiter=';', encoding='utf-8')\ntest_df = pd.read_csv('..\/input\/frenchfakenewsdetector\/datafake_test.csv',delimiter=';', encoding='utf-8')\ntrain_df.tail()","c1e5a7f1":"train_df[\"post\"][6641]","72fcd9c1":"#Code by Kensjourney https:\/\/www.kaggle.com\/kensjourney\/baseline-model-naive-bayes-01\n\n# Shuffle training dataframe\ntrain_df_shuffled = train_df.sample(frac=1, random_state=42)\ntrain_df_shuffled.head()","a304fea5":"# How many classes of each class?\ntrain_df.fake.value_counts()","bf12a4c3":"#Code by Kensjourney https:\/\/www.kaggle.com\/kensjourney\/baseline-model-naive-bayes-01\n# Let's visualize some random training examples\n\nimport random\nrandom_index = random.randint(0, len(train_df)-5)\nfor row in train_df_shuffled[[\"post\", \"fake\"]][random_index:random_index+5].itertuples():\n  _, text, target = row\n  print(f\"Target: {target}\", \"(fake)\" if target > 0 else \"(not fake)\")\n  print(f\"Text:\\n{text}\\n\")\n  print(f\"---\\n\")","e6018104":"#Code by Kensjourney https:\/\/www.kaggle.com\/kensjourney\/baseline-model-naive-bayes-01\n\nfrom sklearn.model_selection import train_test_split\n\n# Use train_test_split to split training data into training and validation sets\ntrain_sentences, val_sentences, train_labels, val_labels = train_test_split(train_df_shuffled[\"post\"].to_numpy(),\n                                                                            train_df_shuffled[\"fake\"].to_numpy(),\n                                                                            test_size=0.1, # dedicate 10% of samples to validation set\n                                                                            random_state=42) # random state for reproducibility","b1d8859d":"#Code by Kensjourney https:\/\/www.kaggle.com\/kensjourney\/baseline-model-naive-bayes-01\n# Getting a baseline\n\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.pipeline import Pipeline\n\n# Create tokenization and modelling pipeline\nmodel_0 = Pipeline([\n                    (\"tfidf\", TfidfVectorizer()), # convert words to numbers using tfidf\n                    (\"clf\", MultinomialNB()) # model the text\n])\n\n# Fit the pipeline to the training data\nmodel_0.fit(train_sentences, train_labels)","22e22030":"#Code by Kensjourney https:\/\/www.kaggle.com\/kensjourney\/baseline-model-naive-bayes-01\n\nbaseline_score = model_0.score(val_sentences, val_labels)\nprint(f\"Our baseline model achieves an accuracy of: {baseline_score*100:.2f}%\")","09e69f27":"#Code by Kensjourney https:\/\/www.kaggle.com\/kensjourney\/baseline-model-naive-bayes-01\n# Make some predictions\n\nbaseline_preds = model_0.predict(val_sentences)\nbaseline_preds[:20]","8cb362de":"#Code by Kensjourney https:\/\/www.kaggle.com\/kensjourney\/baseline-model-naive-bayes-01\n# Function to evaluate: accuracy, precision, recall, f1-score\n\nfrom sklearn.metrics import accuracy_score, precision_recall_fscore_support\n\ndef calculate_results(y_true, y_pred):\n  \"\"\"\n  Calculates model accuracy, precision, recall and f1 score of a binary classification model.\n  \"\"\"\n  # Calculate model accuracy\n  model_accuracy = accuracy_score(y_true, y_pred) * 100\n  # Calculate precision, recall an f-score using \"weighted\" average\n  model_precision, model_recall, model_f1, _ = precision_recall_fscore_support(y_true, y_pred, average=\"weighted\")\n\n  model_results = {\"accuracy\": model_accuracy,\n                   \"precision\": model_precision,\n                   \"recall\": model_recall,\n                   \"f1\": model_f1}\n\n  return model_results","9c450cd7":"#Code by Kensjourney https:\/\/www.kaggle.com\/kensjourney\/baseline-model-naive-bayes-01\n# Get baseline results\n\nbaseline_results = calculate_results(y_true=val_labels,\n                                     y_pred=baseline_preds)\nbaseline_results, baseline_preds.shape","182d8f79":"#Just checking test file, however we don't have Id columns in this Dataset. \ntest_df.head()","5d4d9ef9":"test_preds = model_0.predict(test_df[\"post\"])","adfd7471":"#submission = pd.DataFrame({\"id\": test_df[\"id\"],\"target\": test_preds})","eda8b61a":"#submission.head()","162f5023":"![](https:\/\/image.slidesharecdn.com\/nlp-introduction-en-150515082725-lva1-app6891\/95\/natural-language-processing-nlp-introduction-27-638.jpg?cb=1431679296)pt.slideshare.net","a5587668":"#Thanks KensJourney for your code  https:\/\/www.kaggle.com\/kensjourney\/baseline-model-naive-bayes-01","eca4988a":"#Below we change post and fake according to our features\/columns.","ea9dd98a":"#In print, Do NOT change target and text","4ca52b2f":"#Oohps! Initially, I could read Corruption et F\u00e9minisme, pas Netanyahou plus le Harem et sa favorite. ","ae385441":"#We dont have submission file.","4f59db23":"#Code by Kensjourney https:\/\/www.kaggle.com\/kensjourney\/baseline-model-naive-bayes-01"}}