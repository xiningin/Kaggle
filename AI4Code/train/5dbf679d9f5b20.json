{"cell_type":{"e41eaf56":"code","32a0293f":"code","41a8cb8f":"code","dba6fe43":"code","341e143a":"code","96c574bc":"code","8e4b4786":"code","31418503":"code","0b02aa26":"code","74219234":"code","0bc30260":"code","422f7167":"code","7805fed9":"markdown","909196c4":"markdown","45f69650":"markdown"},"source":{"e41eaf56":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","32a0293f":"# reading the train and test datasets\ntrain_df = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","41a8cb8f":"# first 5 rows content of the train dataset\ntrain_df.head()","dba6fe43":"# first 5 rows content of the test dataset\ntest_df.head()","341e143a":"# reading the gender_submission dataset\ngendersubmission_df = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')","96c574bc":"# first 5 rows content of the gender_submission dataset\ngendersubmission_df.head()","8e4b4786":"women = train_df.loc[train_df['Sex'] == 'female'][\"Survived\"]\nrate_women = sum(women)\/len(women)\n\nprint(\"% of women who survived:\", rate_women)","31418503":"men = train_df.loc[train_df['Sex'] == 'male'][\"Survived\"]\nrate_men = sum(men)\/len(men)\n\nprint(\"% of men who survived:\", rate_men)","0b02aa26":"from sklearn.ensemble import RandomForestClassifier\n\ny = train_df[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_df[features])\nX_test = pd.get_dummies(test_df[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_df.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","74219234":"import graphviz\nfrom sklearn.tree import export_graphviz","0bc30260":"dot_data= export_graphviz(model.estimators_[10], out_file = None, \n                    feature_names = X.columns,  \n                      class_names = ['0', '1'],  \n                      filled = True, rounded = True,  \n                      special_characters = True, impurity = True)","422f7167":"graph = graphviz.Source(dot_data, format='png')\ngraph","7805fed9":"# Load the data","909196c4":"# Machine Learning Model - RandomForestClassifier","45f69650":"# Explore the data"}}