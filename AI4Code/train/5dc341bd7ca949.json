{"cell_type":{"78e91709":"code","bd3c2253":"code","b1eb924f":"code","5f211968":"code","c2099f37":"code","bf151231":"code","64771f9f":"code","081ec7e8":"code","cdd9b5af":"code","949d82a3":"code","2742524a":"code","1a1d7d08":"code","e6e77ef6":"code","933d43c9":"markdown","bc1859be":"markdown","19fe4942":"markdown","31af559f":"markdown","5d172308":"markdown","48e481c3":"markdown","241e0f89":"markdown","5a6b503d":"markdown","6b303fb6":"markdown"},"source":{"78e91709":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bd3c2253":"us_accidents = pd.read_csv('\/kaggle\/input\/us-accidents\/US_Accidents_Dec20_Updated.csv')","b1eb924f":"us_accidents.shape","5f211968":"us_accidents.columns","c2099f37":"us_accidents.info()","bf151231":"us_accidents.isnull().sum()\/len(us_accidents)","64771f9f":"us_accidents.drop(['Number', 'Precipitation(in)', 'Wind_Chill(F)'], axis = 1, inplace = True)","081ec7e8":"us_accidents.dropna(axis=0, how='any', inplace=True)","cdd9b5af":"import seaborn as sns\nimport matplotlib.pyplot as plt","949d82a3":"plt.figure(figsize =(10,5))\nus_accidents.groupby(['State'])['Severity'].count().head(10).sort_values(ascending=False).plot.pie()\n#plt.pie(us_accidents['State'].value_counts(), labels=lbs, autopct=\"%1.1f%%\")","2742524a":"plt.title('Severity')\nplt.xlabel('Severity')\nplt.ylabel('Amount')\nplt.xticks(np.arange(len(us_accidents['Severity'].value_counts())), us_accidents['Severity'].value_counts().index)\nplt.bar(np.arange(len(us_accidents['Severity'].value_counts())), us_accidents['Severity'].value_counts())","1a1d7d08":"us_accidents[\"Start_Time\"] = pd.to_datetime(us_accidents[\"Start_Time\"])\nus_accidents[\"Day_Time\"] = us_accidents[\"Start_Time\"].dt.hour\nsns.countplot(x='Day_Time', data=us_accidents)\n","e6e77ef6":"plt.title(\"Amount of car accidents with time of the day\")\nplt.xlabel(\"Time of the day\")\nplt.ylabel(\"Amout of car accidents\")\nDay_Time_Counts = us_accidents[\"Day_Time\"].value_counts(sort=False)\nsns.lineplot(data=Day_Time_Counts)","933d43c9":"# Visualise Data\n## import packages","bc1859be":"Romove entities with null value.","19fe4942":"Use line chart to visualise the amount of car accidents by time of the day.","31af559f":"use pie chart to check how the accidents distributed according to state","5d172308":"# Dataset Overview","48e481c3":"This is a simple visualisation of this dataset.","241e0f89":"Romove columns with great amount of null value and meaningless.","5a6b503d":"# Process Null Value","6b303fb6":"User bar chart to visualise the amount of accidents according to its severity."}}