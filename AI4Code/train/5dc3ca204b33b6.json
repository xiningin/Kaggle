{"cell_type":{"eb048464":"code","953697fa":"code","00578453":"code","7366cbf6":"code","83ff7d3a":"code","da83873f":"code","e3a549b6":"code","cbb2c96d":"code","36ebf8bb":"code","5c7e660a":"code","80a9e91a":"code","ee498049":"code","54d04db8":"code","d7a9d9a9":"code","ff86d026":"code","ae891f22":"code","95bbff09":"code","8f35b4ed":"code","fd972565":"code","176c4d4a":"code","e2b7b3a5":"code","4b5734c2":"code","1a6eb36d":"code","01655bea":"code","dcbf6940":"code","6fa725df":"code","fdd60df4":"code","49707c45":"code","9bd9ba50":"code","cba07351":"code","9d10ff12":"code","d51083ca":"code","0ac95ab3":"code","b592e08c":"code","570b1c6f":"code","fe896033":"code","aa9bf688":"markdown","e7a4b412":"markdown","6f67d4fc":"markdown","83337c8d":"markdown","fc01d1af":"markdown","5fcf7bc7":"markdown","11aa2794":"markdown","0e9a8899":"markdown","28d973ce":"markdown","c93202c3":"markdown","a5e28df1":"markdown","1f63ee82":"markdown","c018b6ae":"markdown","07f52452":"markdown","c8fae097":"markdown","9ac9e544":"markdown","d9c05a8a":"markdown","3d1ea1c0":"markdown","f9857a68":"markdown","d8e33b20":"markdown","88a8ed03":"markdown","e6724003":"markdown","9d77c2df":"markdown"},"source":{"eb048464":"import pandas as pd\nimport numpy as np\nimport re\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import r2_score,accuracy_score\nfrom sklearn.ensemble import RandomForestRegressor\nimport optuna\nimport lightgbm as lgb  ","953697fa":"df = pd.read_csv('..\/input\/used-car-auction-prices\/car_prices.csv',error_bad_lines=False,warn_bad_lines=True)","00578453":"df.head()","7366cbf6":"df['made_country']=df['vin'].map(lambda x:x[:2])","83ff7d3a":"plt.scatter(df['mmr'],df['sellingprice'])\nplt.show()","da83873f":"df['odometer'].mean()","e3a549b6":"(df['odometer']\/1000).plot.hist(bins=50, alpha=0.5)","cbb2c96d":"pd.DataFrame([df.isnull().mean(),df.dtypes,df.nunique()],index=['null_per','dtypes','nuique'])\\\n    .sort_values(by=['null_per'],axis=1,ascending=False)","36ebf8bb":"df=df.dropna(axis=0)","5c7e660a":"# extract `made_country` from vin\ndf['made_country']=df['vin'].map(lambda x:x[:2])","80a9e91a":"# extract selling date info\ndf['sale_datetime'] = pd.to_datetime(df['saledate'],utc=True)\n","ee498049":"df['sale_year']=df['sale_datetime'].dt.year.astype('int8')\ndf['sale_quarter']=df['sale_datetime'].dt.quarter.astype('int8')\ndf['sale_month']=df['sale_datetime'].dt.month.astype('int8')\ndf['sale_dayofweek']=df['sale_datetime'].dt.day_of_week.astype('int8')\ndf['sale_day']=df['sale_datetime'].dt.day.astype('int8')\ndf['sale_hour']= df['sale_datetime'].dt.hour.astype('int8')","54d04db8":"# clean body\ndf['xbody']=df['body'].map(lambda x:str(x).lower())","d7a9d9a9":"pd.DataFrame([df.isnull().mean(),df.dtypes,df.nunique()],index=['null_per','dtypes','nuique'])\\\n    .sort_values(by=['null_per'],axis=1,ascending=False)","ff86d026":"# compress data\ndf['year']= df['year'].astype('int8')","ae891f22":"df['odometer'].plot.hist(bins=50,alpha=0.5,title='Distribution of odometer')","95bbff09":"df['condition'].plot.hist(bins=50,alpha=0.5,title='Distribution of condition')","8f35b4ed":"df['used_year']=df['sale_year']-df['year']\ndf['used_year'].value_counts().plot.bar(title='Distribution of used_year')","fd972565":"df['sale_delta'] = df['sellingprice']-df['mmr']","176c4d4a":"# condition vs sale delta\nplt.scatter(df['sale_month'],df['sale_delta'])\nplt.ylabel('sale_delta')\nplt.xlabel('sale_year ')\nplt.show()","e2b7b3a5":"# filter some outliner\ndf=df[df['sale_delta']<df['sale_delta'].max()]\ndf['sale_delta'].mean()","4b5734c2":"x_list =['year','condition','odometer','sale_dayofweek']\ny = 'sale_delta'\nx_len = len(x_list)\n#\nfig,ax=plt.subplots(2,2,figsize=(14,8))\nfor t in range(x_len):\n    grid_x = df[x_list[t]]\n    grid_y = df[y]\n    ax[t\/\/2,t%2].scatter(grid_x,grid_y)\n    ax[t\/\/2,t%2].set_title(f'Relation between {grid_x.name} and {grid_y.name}')\nplt.show()","1a6eb36d":"Xa=df['mmr'].values.reshape(-1, 1) \nya=df['sellingprice'].values\nlinear_clfa = LinearRegression()\nlinear_clfa.fit(Xa,ya)\nprint(linear_clfa.score(Xa,ya))\n","01655bea":"heatmap_col=['sellingprice','year','condition','odometer','mmr','used_year','sale_delta']\nsns.set(rc={'figure.figsize':(7,7)})\nsns.heatmap(df[heatmap_col].corr(), annot=True, fmt=\".2f\");","dcbf6940":"pd.DataFrame([df.isnull().mean(),df.dtypes,df.nunique()],index=['null_per','dtypes','nuique'])\\\n    .sort_values(by=['nuique'],axis=1,ascending=True).T","6fa725df":"choosed_cols = ['year','condition','odometer','sellingprice',\n                'make','model','trim','transmission','state','color','interior',\n                'sale_dayofweek','sale_month','made_country','xbody']","fdd60df4":"ff=df[choosed_cols].copy()","49707c45":"ff.dtypes","9bd9ba50":"# One-Hot Encode \ncat_cols = ff.select_dtypes(include=['object']).columns\nff_1 = pd.get_dummies(ff[cat_cols],dummy_na=False,prefix_sep='_',drop_first=True)\nff_2 = ff.drop(cat_cols,axis=1)\n\ngf = ff_1.merge(ff_2,left_index=True,right_index=True)","cba07351":"gf.dtypes","9d10ff12":"gf.shape","d51083ca":"X_df = gf.drop(['sellingprice'],axis=1)\ny_df = gf['sellingprice']\n","0ac95ab3":"def objective(trial):\n    data,target = X,y\n    train_x, valid_x, train_y, valid_y = train_test_split(data, target, test_size=0.25)\n    dtrain = lgb.Dataset(train_x, label=train_y)\n    param = {\n        \"n_estimators\":trial.suggest_int(\"n_estimators\",20,200,log=True),\n#         \"lambda_l1\": trial.suggest_float(\"lambda_l1\", 1e-8, 10.0, log=True),\n#         \"lambda_l2\": trial.suggest_float(\"lambda_l2\", 1e-8, 10.0, log=True),\n#         \"num_leaves\": trial.suggest_int(\"num_leaves\", 2, 256),\n    }\n    gbm = lgb.train(param, dtrain)\n    preds = gbm.predict(valid_x)\n    pred_labels = np.rint(preds)\n    score = r2_score(valid_y, pred_labels)\n    return score\n","b592e08c":"study = optuna.create_study(direction=\"maximize\")\nstudy.optimize(objective, n_trials=10)\nprint(\"Number of finished trials: {}\".format(len(study.trials)))\n\nprint(\"Best trial:\")\ntrial = study.best_trial\n\nprint(\"  Value: {}\".format(trial.value))\n\nprint(\"  Params: \")\nfor key, value in trial.params.items():\n    print(\"    {}: {}\".format(key, value))","570b1c6f":"# one of the best params the optuna computed is 198\ntrain_x, valid_x, train_y, valid_y = train_test_split(X_df.values, y_df.values,\n                                                      test_size=0.25,random_state=100)\nlgb_clf = lgb.LGBMRegressor(n_estimators=198)\nlgb_clf.fit(train_x,train_y)\nprint(lgb_clf.score(valid_x,valid_y))\n","fe896033":"#inspiration by https:\/\/www.kaggle.com\/aleksandradeis\/airbnb-seattle-reservation-prices-analysis#Machine-Learning\nheaders = [\"name\", \"score\"]\nvalues = sorted(zip(X_df, lgb_clf.feature_importances_), key=lambda x: x[1] * -1)\nforest_feature_importances = pd.DataFrame(values, columns = headers)\nforest_feature_importances = forest_feature_importances.sort_values(by = ['score'], ascending = False)\n\nfeatures = forest_feature_importances['name'][:20]\ny_pos = np.arange(len(features))\nscores = forest_feature_importances['score'][:20]\n\n#plot feature importances\nplt.figure(figsize=(10,5))\nplt.bar(y_pos, scores, align='center', alpha=0.5)\nplt.xticks(y_pos, features, rotation='vertical')\nplt.ylabel('Score')\nplt.xlabel('Features')\nplt.title('Feature importances (LightGBM)') \nplt.show()","aa9bf688":"`sellingprice` is close and slightly lower than the `mmr` on average. But the `sellingprice` may be higher or lower than `mmr` .The variance goes up as `year` increase and as odometer down.\nIf someone dislike the variance the 4th day of week may be a good choice.\n","e7a4b412":"## Prediction","6f67d4fc":"The output figure is similar to this... if the notebook is run locally.\n![importance_6.png](attachment:97f00b84-bb52-46a9-85e4-47adf59c7e6b.png)","83337c8d":"The output figure is similar to this... if the notebook is run locally.\n![2021-08-06_094252.png](attachment:9b9bbae0-1229-4bdf-8f3f-5f29c525172b.png)","fc01d1af":"### vin: Vehicle identification number\n\nThe first special feature is `vin`. From `wikipedia`, `vin` means ***Vehicle identification number***.\n> A vehicle identification number (VIN) (also called a chassis number or frame number) is a unique code, including a serial number, used by the automotive industry to identify individual motor vehicles, towed vehicles, motorcycles, scooters and mopeds, as defined in ISO 3779 (content and structure) and ISO 4030 (location and attachment).\n\n>  A `vin` has 17 letters. Components of `vin` are `World manufacturer identifier`(1-3),`Vehicle descriptor section`(4-9) and\t`Vehicle identifier section`(10-17).\n\n> Country or region codes can be distinguished by the first 2 letters of `World manufacturer identifier`.\n\n> https:\/\/en.wikipedia.org\/wiki\/Vehicle_identification_number#Components\n\nSo we can **add a feature `made_country` with the first 2 letters of `vin`**.\n\n\nWe can check the info of a vin by https:\/\/driving-tests.org\/vin-decoder\/. If we query the first vin of the data `5xyktca69fg566472`,we can get a result like :\n\n![vin_example.png](attachment:f0f6c2db-a67b-4292-b823-6d3138fc83a2.png)","5fcf7bc7":"So  deals from the dataset indicate that people are more inclined to using their cars in 4 years, driving within 200,000 kilometers and sell cars with good or bad conditions.","11aa2794":"##  Data Preparation","0e9a8899":" overview of the data\n","28d973ce":"# Feature Meanings and Predication for Used Car Auction Prices ","c93202c3":"What really intersting is that `mmr` and `sellingprice` are so highly correlated. I did not find an explanation in `wikipedia`. But with Google I found this https:\/\/www.autoauctionmall.com\/learning-center\/what-does-mmr-mean\/. \n> MMR in the car business stands for Manheim Market Report, an indicator of wholesale prices.\n\n> Manheim is a company established in 1945 as a car auction company. It has grown to a very reputable company and its MMR is a baseline tool for wholesale car price determination. They base their price calculations on over 10 million transaction over the past 13-month period to .\n\nI think that explained  why `mmr` and `sellingprice` are so close to each other in the figure. `mmr` is a evaluation made by the Manheim company.The company should make full use of all the infomation of car like `model`,`odometer` and so on.\n\nSo it is **not** a good idea to take `mmr` as a explanatory feature.","a5e28df1":"`odometer` means:\n> An odometer or odograph is an instrument used for measuring the distance traveled by a vehicle, such as a bicycle or car. The device may be electronic, mechanical, or a combination of the two (electromechanical). The noun derives from ancient Greek \u1f41\u03b4\u03cc\u03bc\u03b5\u03c4\u03c1\u03bf\u03bd, hod\u00f3metron, from \u1f41\u03b4\u03cc\u03c2, hod\u00f3s (\"path\" or \"gateway\") and \u03bc\u03ad\u03c4\u03c1\u03bf\u03bd, m\u00e9tron (\"measure\"). Early forms of the odometer existed in the ancient Greco-Roman world as well as in ancient China. In countries using Imperial units or US customary units it is sometimes called a mileometer or milometer, the former name especially being prevalent in the United Kingdom and among members of the Commonwealth.\n> https:\/\/en.wikipedia.org\/wiki\/Odometer\n\nFrom the figure above,the unit of measurement may be `kilometers`. If that is true, the mean odometer of used cars is 68000 kilometers. And most of them are within 200000 kilometers.","1f63ee82":"### year: vehicle's model year\n\nAfter checking several vins, the `year` equals vehicle's model year.","c018b6ae":"It 's better to run below codes **locally** ...","07f52452":"data extract\n","c8fae097":"## Insight","9ac9e544":"## Meaning of Special Features\n\nMost of the features are easy to understand, but there are some special.","d9c05a8a":"### When do people sell their car?\n\nCheck from `odometer` ,`condition` and `used_year`","3d1ea1c0":"### odometer: measuring the distance traveled by a vehicle","f9857a68":"handle missing values, drop them all since the the ratio is not high.\n","d8e33b20":"### mmr: Manheim Market Report","88a8ed03":" Should a seller choose to believe `mmr`? \n \n Yes, and `mmr` can be a good predict to the final `sellingprice` only if seller has access to `mmr`.And the access should not be free and takes some time.Recent year the variance became larger and larger.  \n \n Alternatively, we can try use basic info of a car to do a prediction.","e6724003":"### Should a seller choose to believe `mmr`?","9d77c2df":"## Conclusion\n\nIn this analysis we tried to understand what influences used car 's selling price. We delete `mmr` from explained features, since it is a evaluated feature by business company. Alternatively, we tried to use basic info of a car to do a predict. The model has a similar `r2_score` with `mmr` and suggested `year`,`odometer`,`condition`  are the 3 features contributes most to the model.\n\nHope the predication is helpful to people who want to sell their cars!"}}