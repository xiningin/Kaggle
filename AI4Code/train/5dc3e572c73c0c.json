{"cell_type":{"99c86594":"code","9444f8b8":"code","bf3e5865":"code","4c95332f":"code","6479b86e":"code","f1ce876a":"code","f24a3644":"code","29c2cfd9":"code","1366bb68":"code","9cc59cfc":"code","8c0f1830":"code","75aa8220":"code","a8cb4876":"code","1c14874a":"code","45c62af1":"code","92dd844a":"code","dbcbd904":"code","fbd8be42":"code","27e0958a":"code","f54eaacb":"code","903cb462":"code","adad16f8":"code","444bcd15":"code","271429dd":"code","244d4e02":"code","9996c571":"code","d5024a28":"code","493c091d":"code","d684ec36":"code","3a65f4f9":"code","71ea538d":"code","d98651fe":"code","641c12bf":"code","9e720074":"code","e56d1e54":"code","0cb3f8db":"code","c426f941":"code","6fbf2211":"code","ca7f9c6a":"markdown","78fc9e2b":"markdown","8be39031":"markdown"},"source":{"99c86594":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9444f8b8":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","bf3e5865":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\n","4c95332f":"test = pd.read_csv(\"..\/input\/titanic\/test.csv\")","6479b86e":"train.head()\n","f1ce876a":"test.head()","f24a3644":"train.isnull().sum()","29c2cfd9":"test.isnull().sum()","1366bb68":"sns.heatmap(train.isnull(),yticklabels=[],cbar=False,cmap='viridis')","9cc59cfc":"sns.heatmap(test.isnull(),yticklabels=[],cbar=False,cmap='viridis')","8c0f1830":"sns.set_style(\"whitegrid\")\nsns.countplot(x =\"Survived\",data=train)","75aa8220":"sns.set_style(\"whitegrid\")\nsns.countplot(x =\"Survived\",hue=\"Sex\",data=train)","a8cb4876":"sns.set_style(\"whitegrid\")\nsns.countplot(x =\"Survived\",hue=\"Pclass\",data=train)","1c14874a":"sns.distplot(train['Age'],kde=False,color='darkred',bins=10)","45c62af1":"sns.countplot(x='SibSp',data=train)","92dd844a":"plt.figure(figsize=(12,7))\nsns.boxplot(x=\"Pclass\",y=\"Age\",data=train)","dbcbd904":"plt.figure(figsize=(12,7))\nsns.boxplot(x=\"Pclass\",y=\"Age\",data=test)","fbd8be42":"def bar_chart(feature):\n    survived=train[train['Survived']==1][feature].value_counts()\n    dead=train[train['Survived']==0][feature].value_counts()\n    df=pd.DataFrame([survived,dead])\n    df.index=['survived','dead']\n    df.plot(kind='bar',stacked=True, figsize=(10,5))","27e0958a":"bar_chart('Sex')","f54eaacb":"bar_chart('Pclass')","903cb462":"bar_chart('Embarked')","adad16f8":"bar_chart('SibSp')","444bcd15":"train['Age'].fillna(train['Age'].mean(),inplace=True)\ntest['Age'].fillna(test['Age'].mean(),inplace=True)\ntest['Fare'].fillna(test['Fare'].mean(),inplace=True)\ntrain['Embarked'].fillna(value='S',inplace=True)","271429dd":"train['family']=train['SibSp']+train['Parch']+1\ntest['family']=test['SibSp']+train['Parch']+1","244d4e02":"train['Sex'] = train['Sex'].replace(['female','male'],[0,1])\ntrain['Embarked'] = train['Embarked'].replace(['S','Q','C'],[1,2,3])","9996c571":"test['Sex'] = test['Sex'].replace(['female','male'],[0,1])\ntest['Embarked'] = test['Embarked'].replace(['S','Q','C'],[1,2,3])","d5024a28":"train_clean=train.drop(columns=['PassengerId','Name','SibSp','Parch','Ticket','Cabin'])\ntest_clean=test.drop(columns=['PassengerId','Name','SibSp','Parch','Ticket','Cabin'])","493c091d":"train_clean","d684ec36":"test_clean","3a65f4f9":"X_train=train_clean.drop(columns=['Survived'])\ny_train=train_clean[['Survived']]","71ea538d":"X_train","d98651fe":"y_train","641c12bf":"from sklearn.preprocessing import StandardScaler\nX_train_scale=StandardScaler().fit_transform(X_train)\npd.DataFrame(X_train_scale).head()","9e720074":"\nfrom sklearn.linear_model import LogisticRegression\nLR=LogisticRegression().fit(X_train_scale, y_train)\ny_pred=LR.predict(test_clean)\nfrom sklearn.metrics import classification_report\n#print(classification_report(y_pred, gender_submission['Survived']))\nfrom sklearn.model_selection import cross_val_score\nscores=cross_val_score(LogisticRegression(),X_train_scale,y_train,cv=5)\nprint(scores)\nprint(scores.mean())","e56d1e54":"from sklearn.model_selection import GridSearchCV\ngrid={\"C\":np.logspace(-3,3,7), \"penalty\":[\"l1\",\"l2\"]}\nscore=GridSearchCV(LogisticRegression(),grid).fit(X_train_scale, y_train)\nprint(score.best_params_)\nprint(score.best_score_)","0cb3f8db":"gender_submission= pd.read_csv('..\/input\/titanic\/gender_submission.csv')","c426f941":"data = {'PassengerId':gender_submission['PassengerId'],\n        'Survived':y_pred}\nresult=pd.DataFrame(data)\nresult.to_csv('titanic_to_csv1.csv', index=False)\n","6fbf2211":"output=pd.read_csv('titanic_to_csv1.csv')","ca7f9c6a":"Data cleaning","78fc9e2b":"> Thank You","8be39031":"**Prediction**"}}