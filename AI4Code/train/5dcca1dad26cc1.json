{"cell_type":{"284d1295":"code","210ed49c":"code","164f58fe":"code","fb78d2d6":"code","6ca4f18a":"code","36945b3e":"code","40e6f271":"code","957afc0a":"code","c9cdf9c4":"code","c55b3fe4":"code","1bcb9c44":"code","44391c79":"code","33d6dd53":"code","8dbac93f":"code","d0eb3dfc":"code","ef5105d8":"code","db3e1796":"code","5bdd488a":"code","821dd806":"code","392b7f3f":"code","ac11bea9":"code","ed1a2ef2":"code","f9424632":"code","2eafa020":"code","ac7f1b7d":"code","3066fd22":"code","95a49cd4":"code","8f4589c6":"code","f61fb090":"code","aa46e963":"markdown","d9611a31":"markdown","e9c4de2e":"markdown","75cda957":"markdown","a363fcc6":"markdown","01e6d446":"markdown","42165f61":"markdown","a2d816f2":"markdown","ca033c9d":"markdown","b318e1aa":"markdown","b36a4e3c":"markdown","7a21870f":"markdown","9e16a22d":"markdown","34dae040":"markdown","95255f50":"markdown","3d180cb4":"markdown","c910e9ad":"markdown","fe86a859":"markdown","6b322b0d":"markdown","41a64628":"markdown","e3002e6d":"markdown","0ae7e206":"markdown","5d3e796b":"markdown","5933720e":"markdown","ec3298e1":"markdown","5d02745b":"markdown","900026c4":"markdown","54c1495f":"markdown","f87297bc":"markdown"},"source":{"284d1295":"import numpy as np\nimport pandas as pd\nimport os\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport plotly.io as pio\nimport pandas_profiling\nfrom IPython.display import HTML\nfrom sklearn.cluster import KMeans\nimport matplotlib.pyplot as plt\nfrom yellowbrick.cluster import KElbowVisualizer\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error","210ed49c":"PATHS = []\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        PATHS.append(os.path.join(dirname, filename))\nPATHS.sort()","164f58fe":"df = pd.read_csv(PATHS[-1])\npio.templates.default = \"plotly_dark\"\n\nplt.rcParams.update({\n    \"lines.color\": \"white\",\n    \"patch.edgecolor\": \"white\",\n    \"text.color\": \"black\",\n    \"axes.facecolor\": \"black\",\n    \"axes.edgecolor\": \"black\",\n    \"axes.labelcolor\": \"white\",\n    \"xtick.color\": \"white\",\n    \"ytick.color\": \"white\",\n    \"grid.color\": \"lightgray\",\n    \"figure.facecolor\": \"black\",\n    \"figure.edgecolor\": \"black\",\n    \"savefig.facecolor\": \"black\",\n    \"savefig.edgecolor\": \"black\"})","fb78d2d6":"print(\"There are {} rows and {} columns in the dataset.\".format(df.shape[0], df.shape[1]))","6ca4f18a":"df.rename({\"Ladder score\": \"Happiness score\"},axis=1, inplace=True)","36945b3e":"report  = pandas_profiling.ProfileReport(df, title=\"Happiness Profile\")","40e6f271":"df.info()","957afc0a":"fig = px.bar(data_frame = df.nlargest(10,\"Happiness score\"),\n             y=\"Country name\",\n             x=\"Happiness score\",\n             orientation='h',\n             color=\"Country name\",\n             text=\"Happiness score\",\n             color_discrete_sequence=px.colors.qualitative.D3)\n\nfig.update_traces(texttemplate='%{text:.2s}', \n                  textposition='inside', \n                  marker_line_color='rgb(255,255,255)', \n                  marker_line_width=2.5, \n                  opacity=0.7)\nfig.update_layout(width=800,\n                  showlegend=False,\n                  title=\"Top 10 happiest countries\",\n)\nfig.show()\n\nfig = px.bar(data_frame = df.nlargest(10,\"Happiness score\"),\n             y=\"Country name\",\n             x=\"Happiness score\",\n             orientation='h',\n             color=\"Regional indicator\",\n             text=\"Happiness score\",\n             color_discrete_sequence=px.colors.qualitative.D3)\n\nfig.update_traces(texttemplate='%{text:.2s}', \n                  textposition='inside', \n                  marker_line_color='rgb(255,255,255)', \n                  marker_line_width=2.5, \n                  opacity=0.7)\nfig.update_layout(width=800,\n                  yaxis=dict(autorange=\"reversed\"),\n                  title=\"Top 10 happiest countries colored by region\")\nfig.show()","c9cdf9c4":"explained_features = df.filter(regex=\"Explained\").columns.tolist()\nexplained_features.append(\"Dystopia + residual\")\nmy_list = []\nfor f,c in zip(explained_features, px.colors.qualitative.D3):\n    my_list.append(go.Bar(y=df.nlargest(10,\"Happiness score\")[\"Country name\"].values,\n                          x=df.nlargest(10,\"Happiness score\")[f].values,\n                          name=f,\n                          marker=dict(color=c),\n                          orientation=\"h\"))\nfig = go.Figure(data=my_list)\nfig.update_traces(marker_line_color='rgb(255,255,255)',\n                  marker_line_width=2.5, opacity=0.7)\nfig.update_layout(\n                width=900,\n                barmode='stack',\n                 yaxis=dict(autorange=\"reversed\"),\n                )\nfig.show()","c55b3fe4":"fig = px.bar(data_frame = df.nsmallest(10,\"Happiness score\"),\n             y=\"Country name\",\n             x=\"Happiness score\",\n             orientation='h',\n             color=\"Country name\",\n             text=\"Happiness score\",\n             color_discrete_sequence=px.colors.qualitative.D3)\n\nfig.update_traces(texttemplate='%{text:.2s}', \n                  textposition='inside', \n                  marker_line_color='rgb(255,255,255)', \n                  marker_line_width=2.5, \n                  opacity=0.7)\nfig.update_layout(width=800,\n                  showlegend=False,\n                  title=\"Bottom 10 happiest countries\",\n                 )\nfig.show()\n\nfig = px.bar(data_frame = df.nsmallest(10,\"Happiness score\"),\n             y=\"Country name\",\n             x=\"Happiness score\",\n             orientation='h',\n             color=\"Regional indicator\",\n             text=\"Happiness score\",\n             color_discrete_sequence=px.colors.qualitative.D3)\n\nfig.update_traces(texttemplate='%{text:.2s}', \n                  textposition='inside', \n                  marker_line_color='rgb(255,255,255)', \n                  marker_line_width=2.5, \n                  opacity=0.7)\nfig.update_layout(width=800,\n                  yaxis=dict(autorange=\"reversed\"),\n                  title=\"Bottom 10 happiest countries colored by region\",\n                  )\nfig.show()","1bcb9c44":"explained_features = df.filter(regex=\"Explained\").columns.tolist()\nexplained_features.append(\"Dystopia + residual\")\nmy_list = []\nfor f,c in zip(explained_features, px.colors.qualitative.D3):\n    my_list.append(go.Bar(y=df.nsmallest(10,\"Happiness score\")[\"Country name\"].values,\n                          x=df.nsmallest(10,\"Happiness score\")[f].values,\n                          name=f,\n                          marker=dict(color=c),\n                          orientation=\"h\"))\nfig = go.Figure(data=my_list)\nfig.update_traces(marker_line_color='rgb(255,255,255)',\n                  marker_line_width=2.5, opacity=0.7)\nfig.update_layout(\n                width=900,\n                barmode='stack',\n                 yaxis=dict(autorange=\"reversed\"),\n                )\nfig.show()","44391c79":"fig = px.pie(values = df[\"Regional indicator\"].value_counts(),\n             names= df['Regional indicator'].unique(),\n             title=\"Percentage of contribution of regions\",\n             color_discrete_sequence=px.colors.qualitative.Dark2,\n             )\n\nfig.update_traces(marker_line_color='rgb(255,255,255)', \n                  marker_line_width=2.5, \n                  opacity=0.7)\nfig.update_layout(width=800)\nfig.show()","33d6dd53":"fig = px.box(df,\n             x=\"Happiness score\",\n             y=\"Regional indicator\",\n             color=\"Regional indicator\",\n             color_discrete_sequence=px.colors.qualitative.Pastel_r,\n             template=\"plotly_dark\")\nfig.update_traces(boxmean=True,\n                  whiskerwidth=0.8,\n                  marker_size=2,\n            line_width=2.5\n                  )\nfig.update_layout(height=600,\n                  width=800,\n                  showlegend=True,\n                  yaxis= dict(showticklabels = False),\n                  title=\"Distribution of happiness score by region\")\nfig.show()","8dbac93f":" def feature_analysis(df, feature):               \n    grouped_df = df.groupby([\"Regional indicator\"]).agg({feature : np.mean}).reset_index()\n    template='%{text:0.2f}'\n    tickformat = None\n    if grouped_df[feature].min() < 1:\n        template='%{text:0.2%}'\n        tickformat = \".2%\"\n        \n    fig = px.bar(grouped_df,\n                 x=\"Regional indicator\",\n                 y=feature,\n                 color=\"Regional indicator\",\n                 text=feature,\n                 color_discrete_sequence=px.colors.qualitative.D3,\n                 template=\"plotly_dark\"\n                )\n\n        \n    fig.update_traces(texttemplate=template, \n                      textposition='outside', \n                      marker_line_color='rgb(255,255,255)', \n                      marker_line_width=2.5, \n                      opacity=0.7)\n\n    fig.update_layout(showlegend=False,\n                      title=\"Region vs {}\".format(feature),\n                      yaxis=dict(tickformat=tickformat))\n\n    fig.show()\n    \n    return None","d0eb3dfc":"feature_names = [\"Logged GDP per capita\",\n                 \"Social support\",\n                 \"Healthy life expectancy\",\n                 \"Freedom to make life choices\",\n                 \"Generosity\",\n                 \"Perceptions of corruption\"]\nfor feature in feature_names:\n    feature_analysis(df, feature)","ef5105d8":"k = 6\nmodel = KMeans(k)","db3e1796":"X = df[feature_names].values\nmodel.fit(X)","5bdd488a":"labels = model.labels_.tolist()\nlabels = list(map(lambda s: str(s), labels))\nfig = px.scatter_3d(df,\n                 x=\"Generosity\",\n                 y=\"Healthy life expectancy\",\n                 z=\"Perceptions of corruption\",\n                 color=labels,\n                 color_discrete_sequence=px.colors.qualitative.G10,\n                 hover_data = {\n                     \"Country name\": True\n                 }\n            )\n\nfig.update_traces(opacity=0.7,\n                      marker_line_color='rgb(255,255,255)', \n                      marker_line_width=2.5\n                      )\nfig.update_layout(width=800,\n                  legend=dict(title=\"Cluster id\"),\n                  title=\"K means clustering of happiness report (k = {})\".format(k))\nfig.show()","821dd806":"fig = px.scatter_3d(df,\n                 x=\"Generosity\",\n                 y=\"Healthy life expectancy\",\n                 z=\"Perceptions of corruption\",\n                 color=\"Regional indicator\",\n                 color_discrete_sequence=px.colors.qualitative.G10\n            )\n\nfig.update_traces(opacity=0.7,\n                  )\nfig.update_traces(mode='markers',marker_line_color='rgb(255,255,255)', \n                      marker_line_width=2.5)\nfig.update_layout(width=800,\n                  title=\"Scatterplot of happiness report by region\".format(k))\nfig.show()","392b7f3f":"visualizer = KElbowVisualizer(model, k=(4,12))\nvisualizer.fit(X)       \nvisualizer.show()  ","ac11bea9":"fig = px.histogram(df[\"Happiness score\"],\n                   marginal=\"box\")\nfig.update_traces(opacity=0.7,\n                      marker_line_color='rgb(255,255,255)', \n                      marker_line_width=2.5\n                      )\nfig.update_layout(showlegend=False,\n                  title=\"Distribution of happiness scores (skew: {:.3f})\".format(df[\"Happiness score\"].skew()),\n                  width=800)\nfig.show()","ed1a2ef2":"report.to_notebook_iframe()","f9424632":"y = df[\"Happiness score\"].values","2eafa020":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.9, random_state=42)","ac7f1b7d":"scaler = StandardScaler()\nscaler.fit(X_train)\nX_train = scaler.transform(X_train)\nX_test = scaler.transform(X_test)","3066fd22":"model = LinearRegression()\nmodel.fit(X_train, y_train)","95a49cd4":"y_fitted = model.predict(X_train)\ny_preds = model.predict(X_test)","8f4589c6":"print(\"Mean squared error for the training data is: {:.4f}\".format(mean_squared_error(y_fitted, y_train)))","f61fb090":"print(\"Mean squared error for the test data is: {:.4f}\".format(mean_squared_error(y_preds, y_test)))","aa46e963":"# Table Of Contents\n\n 1. [Structure and Summary](#header-one)\n 2. [Happiest countries\/regions](#header-two)\n    * [Contribution of explained variables](#header-two-subsection-one)\n 3. [Unhappiest countries\/regions](#header-three)\n    * [Contribution of explained variables](#header-two-subsection-one)\n 4. [Distributions of regions](#header-four)\n    * [Happiness score by region](#header-four-subheader-one)\n    * [Distribution of features by region](#header-four-subheader-two)\n 5. [k-means clustering](#header-five)\n    * [Optimal k -means](#header-five-subheader-one) \n 6. [Distribution of happiness score](#header-six)\n 7. [Feature interactions and correlations](#header-seven)\n 8. [Predicting happiness using linear regression](#header-eight)","d9611a31":"It looks like we got pretty low mean squared error values. Feel free to fork and experiment with different models, preprocessing\/feature engineering techniques to improve on the score.","e9c4de2e":"<a id=\"header-four-subheader-two\"><\/a>\n### Distribution of features by region","75cda957":"<a id=\"header-seven\"><\/a>\n## Feature interactions and correlations","a363fcc6":"Although Western Europe has so many countries in the top 10 list, the mean and median of North America and ANZ region (7.17, 7.22 respectively) is slightly higher than Western Europe (6.90, 7.09) respectively.","01e6d446":"<a id=\"header-three-subsection-one\"><\/a>\n### Contribution of explained variables","42165f61":"<a id=\"header-five-subheader-one\"><\/a>\n### Optimal k value","a2d816f2":"<a id=\"header-four-subheader-one\"><\/a>\n### Happiness score by region","ca033c9d":"Interestingly, the biggest chunk of regions contributing to the report also happens to belong to Western Europe.","b318e1aa":"9 out of the top 10 countries are from the West Europe region. New Zealand is the only non Western European country.","b36a4e3c":"<a id=\"header-eight\"><\/a>\n## Predicting happiness using linear regression","7a21870f":"<a id=\"header-six\"><\/a>\n## Distribution of happiness score","9e16a22d":"The good news is that the data has no missing values. Therefore, we do not need to perform any cleaning techniques. Also, some of the column names have the word \"Explained\" prefixed to it. This leads me to believe that these variables were possibly derived from some model.","34dae040":"If we look at the interatctions and correlations tabs we see that between our 6 features, 4 of them have a positive correlation with the happiness score (GDP, social support, healthy life, freedom of choice). Generosity doesn't seem to have a particular correlation whereas corruption has a slight negative correlation.","95255f50":"From the histogram, we can see that the happiness scores are slightly skewed to the left.","3d180cb4":"A few observations to note:\n\n* Sub-Saharan countries reported lowest GDP per capita, social support and healthy life expectancy. This is in accordance with a few points mentioned in this analysis before.\n* The Middle East and North African countries have reported lowest freedom to make life choices. It should be noted that these countries do constitute the gulf countries such as   Iraq, Syria and Saudi Arabia where there have been news in the past about suppression of free speech and human rights violations.\n* North American and ANZ region and South East Asia report the highest levels of generosity. Perhaps folks living in these regions engage with NGOs and charitable organizations     on a regular basis.\n* Finally, North American and ANZ region also reports the lowest levels of perceived corruption. The number is significantly lower when compared to other regions.\n","c910e9ad":"The World Happiness Report is a landmark survey of the state of global happiness that ranks 156 countries by how happy their citizens perceive themselves to be. It is one of the publications of the United Nations Sustainable Developement Solutions Network.","fe86a859":"7 out of 10 countries are from the Sub-Saharan region in Africa. This is unsurprising because this region has been frequently affected by diseases, has lacked proper human resources, infrastructure and has had a long history of civil unrest. \n\nWhat came as a shocker to me is that my own country, India is ranked among the bottom 10 countries in the world. Inspite of ranking 5th among the top economies in the world, people seem to be very unhappy in India.","6b322b0d":"![smiley-2979107_1280.jpg](attachment:smiley-2979107_1280.jpg)","41a64628":"I hope you enjoyed this notebook. Until next time. \ud83d\ude0a","e3002e6d":"<a id=\"header-two-subsection-one\"><\/a>\n### Contribution of explained variables","0ae7e206":"It looks like the elbow is at 7 so we actually weren't very far off.","5d3e796b":"Not too shabby considering 6 was a random guess.","5933720e":"<a id=\"header-four\"><\/a>\n## Distribution of regions","ec3298e1":"<a id=\"header-five\"><\/a>\n## k-means clustering","5d02745b":"<a id=\"header-two\"><\/a>\n## Happiest countries\/regions","900026c4":"<a id=\"header-three\"><\/a>\n## Unhappiest countries\/regions","54c1495f":"# Analysing happiness around the world","f87297bc":"<a id=\"header-one\"><\/a>\n## Structure and Summary"}}