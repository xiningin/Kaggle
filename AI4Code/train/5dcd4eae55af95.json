{"cell_type":{"7123d6cf":"code","7fc111f8":"code","380567b5":"code","f106277c":"code","0c76f5da":"code","4e81c549":"code","5be485e8":"code","0c649fd4":"code","be55445d":"code","1bc03054":"code","5cab0e7f":"code","11a04060":"code","273921d8":"code","8bab7bda":"code","5388237b":"code","18e2fe42":"code","dd352685":"code","62e77738":"code","2d261bad":"code","50ce7844":"code","6a2d63c3":"code","91f089fd":"code","4e68c159":"markdown","a089fa2b":"markdown","9bf30a46":"markdown","9f2519d8":"markdown","fc90cab3":"markdown","deb854d8":"markdown"},"source":{"7123d6cf":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","7fc111f8":"# read training data\ndf_train = pd.read_csv('..\/input\/conways-reverse-game-of-life-2020\/train.csv')\n# show dimensions\ndf_train.shape","380567b5":"df_train.head()","f106277c":"df_train.delta.value_counts().plot(kind='bar')\nplt.title('Distribution of delta')\nplt.grid()\nplt.show()","0c76f5da":"pd.crosstab(df_train.start_0, df_train.stop_0)","4e81c549":"pd.crosstab(df_train.start_1, df_train.stop_1)","5be485e8":"pd.crosstab(df_train.start_624, df_train.stop_624)","0c649fd4":"# select an example\nsel_row = 2\nexample = df_train.iloc[sel_row,:]\nexample","be55445d":"# extract start values\nstart = example[2:2+625]\nstart","1bc03054":"# convert to matrix\nstart = np.asarray(start)\nstart_mat = start.reshape(25,25)","5cab0e7f":"# extract stop values\nstop = example[2+625:2+625+625+1]\nstop","11a04060":"# convert to matrix\nstop = np.asarray(stop)\nstop_mat = stop.reshape(25,25)","273921d8":"# show start configuration\nplt.imshow(start_mat)\nplt.show()","8bab7bda":"# show stop configuration\nplt.imshow(stop_mat)\nplt.show()","5388237b":"# read test data\ndf_test = pd.read_csv('..\/input\/conways-reverse-game-of-life-2020\/test.csv')\n# show dimensions\ndf_test.shape","18e2fe42":"df_test.head()","dd352685":"# count active cells per row\ndf_test_for_sum = df_test.copy()\ndf_test_for_sum = df_test_for_sum.drop(['id','delta'], axis=1)\nactive_count = df_test_for_sum.sum(axis=1)\nactive_count","62e77738":"# show distribution of number of active cells\nplt.hist(active_count.values,50)\nplt.grid()\nplt.title('Number of active cells')\nplt.show()","2d261bad":"# select an example\nsel_row = 3\nexample = df_test.iloc[sel_row,:]\nexample","50ce7844":"# extract stop values\nstop = example[2:2+625]\n# convert to matrix\nstop = np.asarray(stop)\nstop_mat = stop.reshape(25,25)","6a2d63c3":"# show stop configuration\nplt.imshow(stop_mat)\nplt.show()","91f089fd":"# count active cells\nsum(stop)","4e68c159":"### Select an example and display configurations","a089fa2b":"### Check transitions from start to end","9bf30a46":"# First look on the data","9f2519d8":"### Select an example and display","fc90cab3":"# Test data","deb854d8":"# Training Data"}}