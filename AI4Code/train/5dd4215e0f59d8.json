{"cell_type":{"9e79a958":"code","e3dcb8ba":"code","4ba96486":"code","e942f463":"code","007e0ccd":"code","aa4d1b7c":"code","0ff5bc61":"code","f7b4e78e":"code","3a754370":"code","6a0d9c7d":"code","450652d7":"code","5d8e2c30":"code","d93a755e":"code","a8ed843b":"code","9cbdabb4":"code","88a2e7a7":"code","f80f8537":"code","3ca5efe4":"code","95dd1578":"code","78487b70":"code","0df4267c":"markdown","3fe4a554":"markdown","9af50c6b":"markdown","d1def165":"markdown","f6fcf480":"markdown","57b00a5f":"markdown","5d1c6229":"markdown","2287caf4":"markdown","18ca1bd6":"markdown","6334ee1d":"markdown"},"source":{"9e79a958":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport re\nimport matplotlib.pyplot as plt  \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","e3dcb8ba":"df = pd.read_csv(\"..\/input\/ontario\/ontario-public-sector-salary-2018.csv\")\ndf.head()","4ba96486":"df1 = pd.read_csv(\"..\/input\/ontario\/ontario-public-sector-salary-2019.csv\")\ndf1.head()","e942f463":"df.info()","007e0ccd":"df1.info()","aa4d1b7c":"df.shape","0ff5bc61":"df1.shape","f7b4e78e":"x = list(df['Sector'].unique())\nx","3a754370":"df['Salary Paid'] = df['Salary Paid'].apply(lambda s : float(re.sub(\"[^\\d\\.]\", \"\", s)))\n\ndf['Salary Paid'] = pd.to_numeric(df['Salary Paid'],downcast='integer')\ny = list(df['Salary Paid'].groupby(df['Sector']).mean())\ny","6a0d9c7d":"fig = plt.figure(figsize = (10, 5)) \n  \n# creating the bar plot \nplt.bar(x, y, color ='green',  \n        width = 0.4) \n  \nplt.xlabel(\"sector\") \nplt.ylabel(\"avg salary\") \nplt.xticks(rotation=90)\nplt.title(\"avg salary of each sector in 2018\") \nplt.show() ","450652d7":"x1 = list(df1['Sector'].unique())\nx1","5d8e2c30":"df1['Salary Paid'] = df1['Salary Paid'].apply(lambda s : float(re.sub(\"[^\\d\\.]\", \"\", s)))\n\ndf1['Salary Paid'] = pd.to_numeric(df1['Salary Paid'],downcast='integer')\ny1 = list(df1['Salary Paid'].groupby(df1['Sector']).mean())\ny1","d93a755e":"fig = plt.figure(figsize = (10, 5)) \n  \n# creating the bar plot \nplt.bar(x, y, color ='blue',  \n        width = 0.5) \n  \nplt.xlabel(\"sector\") \nplt.ylabel(\"avg salary\") \nplt.xticks(rotation=90)\nplt.title(\"avg salary of each sector in 2019\") \nplt.show() ","a8ed843b":"fig = plt.figure(figsize = (20, 5)) \nbr1 = np.arange(len(x)) \nbr2 = [x + 0.4 for x in br1] \nplt.bar(br1, y, color ='g', width = 0.4, edgecolor ='grey', label ='2018') \nplt.bar(br2, y1, color ='b', width = 0.4,edgecolor ='grey', label ='2019') \nplt.xlabel('Sector', fontweight ='bold') \nplt.ylabel('Avg Salary', fontweight ='bold') \nplt.xticks([r + 0.4 for r in range (len(x))],x) \nplt.xticks(rotation=90)\n   \nplt.show() ","9cbdabb4":"jobs = list(df['Job Title'].unique())\nprint(len(jobs))\nemp = list(df['Employer'].unique())\nprint(len(emp))","88a2e7a7":"sector_df = list(((df['Sector'].value_counts()).reindex()))\nsector_df\nsector_count=[]\nsector=x[0:13]\nfor i in range(len(sector_df)):\n    if sector_df[i]>10:\n        sector_count.append(sector_df[i])\nprint(len(sector_count))\nprint(len(sector))","f80f8537":"# the contribution of each sector\nlabels = sector\nsizes = sector_count\nmy_circle=plt.Circle( (0,0), 0.7, color='white')\n\n\nfrom palettable.colorbrewer.qualitative import Pastel1_7\nplt.pie(sizes, labels=labels, colors=Pastel1_7.hex_colors,wedgeprops = { 'linewidth' : 7, 'edgecolor' : 'white' })\np=plt.gcf()\np.gca().add_artist(my_circle)\nplt.show()","3ca5efe4":"import warnings\nwarnings.filterwarnings(\"ignore\")\nSectors = df[\"Sector\"].unique()\nsec_df = (df['Sector'].value_counts()).reindex()\nx = Sectors\ny = sec_df\nporcent = 100*y\/y.sum()\n\npatches, texts = plt.pie(y, startangle=90, radius=1.2)\nlabels = ['{0} - {1:1.2f} %'.format(i,j) for i,j in zip(x, porcent)]\n\nsort_legend = True\nif sort_legend:\n    patches, labels, dummy =  zip(*sorted(zip(patches, labels, y),\n                                          key=lambda x: x[2],\n                                          reverse=True))\n\nplt.legend(patches, labels, loc='left center', bbox_to_anchor=(-0.1, 1.),\n           fontsize=8)\n\nplt.savefig('piechart.png', bbox_inches='tight')","95dd1578":"df['Taxable Benefits'] = df['Taxable Benefits'].apply(lambda s : float(re.sub(\"[^\\d\\.]\", \"\", s)))\n\ndf['Taxable Benefits'] = pd.to_numeric(df['Taxable Benefits'],downcast='integer')","78487b70":"import matplotlib.pyplot as plt\nplt.style.use('ggplot')\nimport matplotlib.font_manager as fm\n\nfontsize2use = 15\ntax_job = list(df['Taxable Benefits'].groupby(df['Sector']).mean())\n\nfig = plt.figure(figsize=(15,5))\nplt.xticks(fontsize=fontsize2use)  \nplt.yticks(fontsize=fontsize2use)    \nfontprop = fm.FontProperties(size=fontsize2use)\nax = fig.add_subplot(111)\nfig.clf()\nax.set_xlim(-1,100)\n\nx = Sectors\ny = tax_job\n\nx_pos = [i for i, _ in enumerate(x)]\n\nplt.bar(x_pos, y, color='green')\nplt.xlabel(\"sectors\")\nplt.ylabel(\"taxable benifits\")\nplt.title(\"Taxable benifits vs sectors\")\n\nplt.xticks(x_pos, x,rotation=90)\n\nplt.show()","0df4267c":"**4.1. Analysing average salary of each sector in 2018**","3fe4a554":"# Ontario Public Sector Salary EDA Analysis \ud83c\udfed\n![public.jpg](attachment:public.jpg)","9af50c6b":"**4.5. Taxable benefits vs Sectors**","d1def165":"# 2. Importing required libraries \ud83d\udcda","f6fcf480":"**4.4. Contribution of each sector in total entries**","57b00a5f":"# 1. Introduction \u2b07\n**This notebook is our attempt to visualize Salaries of Public Sectors in Ontario.**","5d1c6229":"# 3. Reading CSV Data \ud83d\udcdd","2287caf4":"**4.3. Analysing average salaries of each sectors in both 2018 and 2019**","18ca1bd6":"# 4. Data Visualization \ud83d\udcc9","6334ee1d":"**4.2. Analysing average salary of each sector in 2019**"}}