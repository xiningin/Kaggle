{"cell_type":{"23391c38":"code","72858d66":"code","b042ab83":"code","75851fcd":"code","7977d773":"code","51ced6fa":"code","36b7e1bc":"code","2c05cf08":"code","c0749efb":"code","81361566":"code","393f823e":"code","5417ef7b":"code","f5c272d3":"code","988ea299":"code","b49c58d1":"code","065ce37d":"code","fb32b22d":"code","7c3428cb":"code","3b253a83":"code","6e626dc9":"code","506fedae":"code","e49ae782":"code","32987f4f":"code","8f0c3207":"code","5457574e":"code","13124ad1":"code","f8c0edb6":"code","817a34c3":"code","9758367f":"markdown","10898331":"markdown","e90395e4":"markdown","30093aad":"markdown","9e083aee":"markdown","8f830cb9":"markdown","804d3e17":"markdown","ae1fffda":"markdown","1f40a8ae":"markdown"},"source":{"23391c38":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sb\nplt.rcParams['figure.figsize'] = (7.0,7.0)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","72858d66":"data_happy = pd.read_csv('\/kaggle\/input\/world-happiness-report-2019\/world-happiness-report-2019.csv')\ndata_happy.head()","b042ab83":"data_happy.columns","75851fcd":"data_happy.columns = ['country', 'L', 'SD', 'Positive_affect', 'Negative_affect','Social_support',\n                      'Freedom','Corruption','Generosity','GDP', 'Healthy_life_expectancy']","7977d773":"data_happy.head()","51ced6fa":"#describing the data\ndata_happy.describe()","36b7e1bc":"data_happy.isnull().sum()","2c05cf08":"#droping the rows with null values\ndata_happy = data_happy.dropna(0)","c0749efb":"data_happy.isnull().sum()","81361566":"# scatter plot to visualize the relation between positive_affect and negative_affect\nplt.scatter(data_happy['Positive_affect'],data_happy['Negative_affect'])\nplt.xlabel('positive affect', fontsize=15)\nplt.ylabel('negative affect', fontsize=15)\nplt.title('positive vs negative', fontsize=20)\nplt.show()","393f823e":"df1 = data_happy.groupby('country').agg({'Positive_affect':'sum'}).sort_values(by='Positive_affect', ascending = False)\ndf1 =df1.head(10)","5417ef7b":"sb.set_style('whitegrid')\nsb.barplot(y = df1.index,x = df1['Positive_affect'], palette = 'Blues_r')\nplt.title('countries with positive emotions', fontsize = 20)\nplt.show()","f5c272d3":"df2 = data_happy.groupby('country').agg({'Negative_affect':'sum'}).sort_values(by='Negative_affect', ascending = False)\ndf2 = df2.head(10)","988ea299":"sb.set_style('whitegrid')\nsb.barplot(y = df2.index,x = df2['Negative_affect'], palette = 'Reds_r')\nplt.title('countries with negative emotions', fontsize = 20)\nplt.show()","b49c58d1":"plt.scatter(data_happy['L'],data_happy['Healthy_life_expectancy'])\nplt.xlabel('L',fontsize = 12)\nplt.ylabel('Healthy_life_expectancy',fontsize = 12)\nplt.title('L vs Healthy_life_expectancy', fontsize = 18)\n\ncorr = np.corrcoef(data_happy['L'],data_happy['Healthy_life_expectancy'])[0,1]\nprint(\"correlation coefficeint:\",corr)","065ce37d":"plt.scatter(data_happy['Social_support'],data_happy['Healthy_life_expectancy'])\nplt.xlabel('Social_support',fontsize = 12)\nplt.ylabel('Healthy_life_expectancy',fontsize = 12)\nplt.title('Social_support vs Healthy_life_expectancy', fontsize = 18)\n\ncorr = np.corrcoef(data_happy['Social_support'],data_happy['Healthy_life_expectancy'])[0,1]\nprint(\"correlation coefficeint:\",corr)","fb32b22d":"sb.regplot(data_happy['Freedom'],data_happy['Healthy_life_expectancy'])\nplt.xlabel('Freedom',fontsize = 12)\nplt.ylabel('Healthy_life_expectancy',fontsize = 12)\nplt.title('Freedom vs Healthy_life_expectancy', fontsize = 18)\n\ncorr = np.corrcoef(data_happy['Freedom'],data_happy['Healthy_life_expectancy'])[0,1]\nprint(\"correlation coefficeint:\",corr)","7c3428cb":"sb.regplot(data_happy['Corruption'],data_happy['Healthy_life_expectancy'])\nplt.xlabel('Corruption',fontsize = 12)\nplt.ylabel('Healthy_life_expectancy',fontsize = 12)\nplt.title('Corruption vs Healthy_life_expectancy', fontsize = 18)\n\ncorr = np.corrcoef(data_happy['Corruption'],data_happy['Healthy_life_expectancy'])[0,1]\nprint(\"correlation coefficeint:\",corr)","3b253a83":"sb.regplot(data_happy['Generosity'],data_happy['Healthy_life_expectancy'])\nplt.xlabel('Generosity',fontsize = 12)\nplt.ylabel('Healthy_life_expectancy',fontsize = 12)\nplt.title('Generosity vs Healthy_life_expectancy', fontsize = 18)\n\ncorr = np.corrcoef(data_happy['Generosity'],data_happy['Healthy_life_expectancy'])[0,1]\nprint(\"correlation coefficeint:\",corr)","6e626dc9":"plt.scatter(data_happy['GDP'],data_happy['Healthy_life_expectancy'])\nplt.xlabel('GDP',fontsize = 12)\nplt.ylabel('Healthy_life_expectancy',fontsize = 12)\nplt.title('GDP vs Healthy_life_expectancy', fontsize = 18)\n\ncorr = np.corrcoef(data_happy['GDP'],data_happy['Healthy_life_expectancy'])[0,1]","506fedae":"sb.regplot(data_happy['Positive_affect'],data_happy['Healthy_life_expectancy'])\nplt.xlabel('Positive_affect',fontsize = 12)\nplt.ylabel('Healthy_life_expectancy',fontsize = 12)\nplt.title('L vs Healthy_life_expectancy', fontsize = 18)\n\ncorr = np.corrcoef(data_happy['Positive_affect'],data_happy['Healthy_life_expectancy'])[0,1]\nprint(\"correlation coefficeint:\",corr)","e49ae782":"sb.regplot(data_happy['Negative_affect'],data_happy['Healthy_life_expectancy'])\nplt.xlabel('Negative_affect',fontsize = 12)\nplt.ylabel('Healthy_life_expectancy',fontsize = 12)\nplt.title('Negative_affect vs Healthy_life_expectancy', fontsize = 18)\n\ncorr = np.corrcoef(data_happy['Negative_affect'],data_happy['Healthy_life_expectancy'])[0,1]\nprint(\"correlation coefficeint:\",corr)","32987f4f":"plt.scatter(data_happy['SD'],data_happy['Healthy_life_expectancy'])\nplt.xlabel('SD',fontsize = 12)\nplt.ylabel('Healthy_life_expectancy',fontsize = 12)\nplt.title('SD vs Healthy_life_expectancy', fontsize = 18)\n\ncorr = np.corrcoef(data_happy['SD'],data_happy['Healthy_life_expectancy'])[0,1]\nprint(\"correlation coefficeint:\",corr)","8f0c3207":"from sklearn.model_selection import train_test_split\nx = data_happy.drop(['country', 'Healthy_life_expectancy', 'SD'], axis=1)\ny = data_happy['Healthy_life_expectancy']","5457574e":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3, random_state = None)","13124ad1":"#importing random forest regression package\nfrom sklearn.ensemble import RandomForestRegressor\nrandom = RandomForestRegressor()\nrandom.fit(x_train, y_train)\ny_pred = random.predict(x_test)","f8c0edb6":"print('accuraccy of linear regression on taining set:{:.2f}'.format(random.score(x_train,y_train)))\nprint('accuraccy of  linear regression on testing set:{:.2f}'.format(random.score(x_test,y_test)))","817a34c3":"plt.scatter(y_test,y_pred,color='c')\nplt.xlabel('y test data')\nplt.ylabel(' predicted data')\nplt.title('predicted test data regression graph')\nplt.show()","9758367f":"# World Happiness ","10898331":"## Plotting bar graphs of Positive_affect and Negative_affect Countrywise","e90395e4":"**R2 value**","30093aad":"## Test Train data spliting\n1. **dropping unnecessary column data**","9e083aee":"## Renaming the columns","8f830cb9":"## Plotting scatter with respect to healthy life expenctancy","804d3e17":"## Handling the missing values and null values\n","ae1fffda":"## fitting the data in RandomForest Regression model","1f40a8ae":"## Reading The Data"}}