{"cell_type":{"3a166cee":"code","092192cd":"code","aa3aff6e":"code","e99b3260":"code","a4c160b3":"code","8f9f08a0":"code","c5a18ad2":"code","d756c5cf":"code","e723d872":"code","6bdfc25a":"code","0115c09b":"code","994d67e4":"code","80210475":"code","e89ba17d":"code","a5adcd29":"code","6f31b911":"code","dca22358":"markdown","219d5aa9":"markdown","0a213bbb":"markdown","96f80642":"markdown","59920c70":"markdown","0143a977":"markdown","868fc319":"markdown","e6b396df":"markdown","c3328ab9":"markdown","b922964c":"markdown","f2f52327":"markdown"},"source":{"3a166cee":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nfrom sklearn.preprocessing import LabelEncoder \n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","092192cd":"data=pd.read_csv(\"..\/input\/weatherAUS.csv\")","aa3aff6e":"data.head()","e99b3260":"data.info()","a4c160b3":"def missing_values(data): \n    miss_value_counts = data.isnull().sum()\n    missing_value_percantage= 100 * data.isnull().sum()\/len(data)\n    missing_value_table = pd.concat([miss_value_counts, missing_value_percantage], axis=1)\n    new_missing_value_table = missing_value_table.rename(\n    columns = {0 : 'Eksik De\u011ferler', 1 : '% De\u011feri'})\n    return new_missing_value_table\nmissing_values(data)","8f9f08a0":"data.drop([\"Location\",\"Date\",\"Evaporation\",\"Sunshine\",\"Cloud9am\",\"Cloud3pm\"],axis=1,inplace=True)","c5a18ad2":"data.fillna(data.mean())","d756c5cf":"data.RainToday=[1 if each==\"Yes\" else 0 for each in data.RainToday]\ndata.RainTomorrow=[1 if each==\"Yes\" else 0 for each in data.RainTomorrow]","e723d872":"data.RainToday=data.RainToday.astype(\"int\")\ndata.RainTomorrow=data.RainTomorrow.astype(\"int\")","6bdfc25a":"data.dropna(inplace=True)","0115c09b":"data.isnull().sum()","994d67e4":"y=data.RainTomorrow.values\n#data.RainTomorrow.unique()\nx_data=data.drop([\"RainTomorrow\"],axis=1)","80210475":"labelencoder_x = LabelEncoder()\nx_data[\"WindGustDir\"] = labelencoder_x.fit_transform(x_data[\"WindGustDir\"]).reshape(-1,1)\nx_data[\"WindDir9am\"] = labelencoder_x.fit_transform(x_data[\"WindDir9am\"]).reshape(-1,1)\nx_data[\"WindDir3pm\"] = labelencoder_x.fit_transform(x_data[\"WindDir3pm\"]).reshape(-1,1)\n#x_data","e89ba17d":"#Normalization\nx=((x_data-np.min(x_data))\/(np.max(x_data))-(np.min(x_data)))","a5adcd29":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=42)","6f31b911":"from sklearn.linear_model import LinearRegression\nlr=LinearRegression()\n\nlr.fit(x_train,y_train)\n\nprint(\"Accuracy :\",lr.score(x_test,y_test))","dca22358":"**Null de\u011ferleri kontrol ediyoruz.**","219d5aa9":"**Label Encoder ile Categorical de\u011ferleri n\u00fcmerik de\u011ferlere d\u00f6n\u00fc\u015ft\u00fcr\u00fcyoruz.**","0a213bbb":"**Min - Max Normalization**","96f80642":"# Conclusion \n* <p1> Sonu\u00e7 olarak bizim tahminlerimiz LinearRegression Modeli ile %41-42 oran\u0131nda do\u011fru tahmin y\u00fcr\u00fctt\u00fc bunu kullanmak pek te mant\u0131kl\u0131 de\u011fil :) <p1>","59920c70":"**Library import**","0143a977":"# Binary Classification ile Avustralyada Yar\u0131n i\u00e7in Ya\u011fmur Tahmini ","868fc319":"**Datay\u0131 g\u00f6zden ge\u00e7iriyoruz..**","e6b396df":"**Datay\u0131 e\u011fitip sonu\u00e7lar\u0131 de\u011ferlendiriyoruz.**","c3328ab9":"> <p2> **Data Cleaning** <p2>","b922964c":"**Featurelardaki null de\u011ferlerin oranlar\u0131na bak\u0131yoruz.**\n<p1> **E\u011fer \u00e7ok fazla null de\u011fer olan featurelar varsa bunlar\u0131 u\u00e7urabiliriz.** <p1>","f2f52327":"**Train Test olarak datay\u0131 ay\u0131r\u0131yoruz.**"}}