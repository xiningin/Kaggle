{"cell_type":{"be048a12":"code","0ad6be31":"code","c42299c4":"code","20d0a1ad":"code","0c68cdb0":"code","053d51fc":"code","a2929167":"code","f6ee1a47":"code","770772ca":"code","718e47e7":"code","37268289":"code","6e63dd51":"code","f6727bb3":"code","bb1c332b":"code","9581e413":"code","5062169e":"code","6654e1c5":"code","56bd6f25":"code","14598c32":"code","dfc51763":"code","9d323742":"code","d0e58cb3":"code","b07aa61b":"code","7b561aaa":"code","01e116bd":"code","b69c4448":"code","f2d6ea82":"code","016ee155":"code","e3bdeace":"code","95ae31d9":"code","b12e0e8e":"code","03d7a9a0":"code","34073966":"code","6f8ca524":"code","eb92ca75":"code","13218830":"code","46da9981":"code","8c6cdfc6":"code","9531dcad":"code","0a24b397":"code","4a6c5009":"code","2c1bce68":"markdown","00e63d5d":"markdown","27b36f5b":"markdown","b1c1f788":"markdown","b379e617":"markdown","50d612e9":"markdown"},"source":{"be048a12":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0ad6be31":"data = pd.read_csv('\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv')\ndata.info()\ndata.columns=['gender', 'race\/ethnicity', 'parental_level_of_education', 'lunch',\n       'test_preparation_course', 'math_score', 'reading_score',\n       'writing_score']\n\ndata.columns","c42299c4":"data.corr()","20d0a1ad":"f,ax = plt.subplots(figsize=(16, 16))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","0c68cdb0":"data.head(10)","053d51fc":"data.columns","a2929167":"# Line Plot\n# color = color, label = label, linewidth = width of line, alpha = opacity, grid = grid, linestyle = sytle of line\ndata.math_score.plot(kind = 'line', color = 'g',label = 'math score',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\ndata.reading_score.plot(color = 'r',label = 'reading score',linewidth=1, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","f6ee1a47":"# Scatter Plot \n\ndata.plot(kind='scatter', x='math_score', y='reading_score',alpha = 0.5,color = 'red')\nplt.xlabel('math_score')              # label = name of label\nplt.ylabel('reading_score')\nplt.title('math_score reading_score Scatter Plot')            # title = title of plot\nplt.show()","770772ca":"# Histogram\n# bins = number of bar in figure\ndata.math_score.plot(kind = 'hist',bins = 70,figsize = (12,12))\nplt.show()","718e47e7":"# clf() = cleans it up again you can start a fresh\ndata.reading_score.plot(kind = 'hist',bins = 50)\nplt.clf()\n# We cannot see plot due to clf()","37268289":"data = pd.read_csv('\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv')\ndata.columns=['gender', 'race\/ethnicity', 'parental_level_of_education', 'lunch',\n       'test_preparation_course', 'math_score', 'reading_score',\n       'writing_score']\nseries = data['math_score']        # data['math_score'] = series\nprint(type(series))\ndata_frame = data[['math_score']]  # data[['math_score']] = data frame\nprint(type(data_frame))\n\n","6e63dd51":"# 1 - Filtering Pandas data frame\nx = data['math_score']>90     # \nprint(x)\ndata[x]","f6727bb3":" #2 - Filtering pandas with logical_and\ndata[np.logical_and(data['math_score']>70, data['reading_score']>90 )]","bb1c332b":"# This is also same with previous code line. Therefore we can also use '&' for filtering.\ndata[(data['math_score']>80) & (data['reading_score']>90)]","9581e413":"threshold = sum(data.math_score)\/len(data.math_score)\ndata[\"new_math_score\"] = [\"high\" if i > threshold else \"middle\" if  i>45 else \"low\" for i in data.math_score]\ndata.loc[:10,[\"new_math_score\",\"math_score\"]] # we will learn loc more detailed later\ndata","5062169e":"data.info","6654e1c5":"data.describe()","56bd6f25":"data['parental_level_of_education'].value_counts(dropna =False)","14598c32":"data.describe()","dfc51763":"data['lunch'].describe()","9d323742":"data.dropna(inplace = True)  \ndata.describe()","d0e58cb3":"data.boxplot(column='math_score',by = 'reading_score')","b07aa61b":"data_new = data.head()    # I only take 5 rows into new data\ndata_new","7b561aaa":"melted = pd.melt(frame=data_new,id_vars = 'parental_level_of_education', value_vars= ['math_score','reading_score'])\nmelted","01e116bd":"data1 = data.head()\ndata2= data.tail()\nconc_data_row = pd.concat([data1,data2],axis =0,ignore_index =True) # axis = 0 : adds dataframes in row\nconc_data_row","b69c4448":"data3 = data['math_score'].head()\ndata1 = data['reading_score'].head()\ndata2= data['writing_score'].head()\nconc_data_col = pd.concat([data3,data1,data2],axis =1) # axis = 0 : adds dataframes in row\nconc_data_col","f2d6ea82":"data.dtypes","016ee155":"data['lunch'] = data['lunch'].astype('category')\ndata['math_score'] = data['math_score'].astype('category')\ndata.dtypes","e3bdeace":"\nplt.figure(figsize=(15,10))\np = sns.countplot(x=\"math_score\", data = data, palette=\"muted\")\n_ = plt.setp(p.get_xticklabels(), rotation=90) \nplt.title(\"math score count\")\n","95ae31d9":"passmark = 40 #we will set the minimum marks to 40 to pass in a exam\ndata.math_score=data.math_score.astype(float)\ndata['Math_PassStatus'] = np.where(data['math_score']<passmark, 'F', 'P')\ndata.Math_PassStatus.value_counts()\ndata.head()\n","b12e0e8e":"plt.figure(figsize=(10,8))\np = sns.countplot(x='parental_level_of_education', data = data, hue='Math_PassStatus', palette='bright')\n_ = plt.setp(p.get_xticklabels(), rotation=90) \n","03d7a9a0":"plt.figure(figsize=(15,10))\ndata.reading_score=data.reading_score.astype(float)\nsns.countplot(x=\"reading_score\", data = data, palette=\"muted\")\nplt.xticks(rotation=90)\nplt.show()","34073966":"data['Reading_PassStatus'] = np.where(data['reading_score']<passmark, 'F', 'P')\nplt.figure(figsize=(10,8))\np = sns.countplot(x='parental_level_of_education', data = data, hue='Reading_PassStatus', palette='bright')\n_ = plt.setp(p.get_xticklabels(), rotation=90) ","6f8ca524":"data.writing_score=data.writing_score.astype(float)\ndata['Writing_PassStatus'] = np.where(data['writing_score']<passmark, 'F', 'P')\n\n#How many students passed in all the subjects ?\ndata['OverAll_PassStatus'] = data.apply(lambda x : 'F' if x['Math_PassStatus'] == 'F' or \n                                    x['Reading_PassStatus'] == 'F' or x['Writing_PassStatus'] == 'F' else 'P', axis =1)\n\ndata.OverAll_PassStatus.value_counts()\n#Find the percentage of marks\ndata['Total_Marks'] = data['math_score']+data['reading_score']+data['writing_score']\ndata['Percentage'] = data['Total_Marks']\/3","eb92ca75":"def GetGrade(Percentage, OverAll_PassStatus):\n    if ( OverAll_PassStatus == 'F'):\n        return 'F'    \n    if ( Percentage >= 80 ):\n        return 'A'\n    if ( Percentage >= 70):\n        return 'B'\n    if ( Percentage >= 60):\n        return 'C'\n    if ( Percentage >= 50):\n        return 'D'\n    if ( Percentage >= 40):\n        return 'E'\n    else: \n        return 'F'\n\ndata['Grade'] = data.apply(lambda x : GetGrade(x['Percentage'], x['OverAll_PassStatus']), axis=1)\n\ndata.Grade.value_counts()","13218830":"# plot the grades obtained in a order\nplt.figure(figsize=(10,8))\nplt.subplot(2,1,1)\nsns.countplot(x=\"Grade\", data = data, order=['A','B','C','D','E','F'],  palette=\"muted\")\nplt.subplot(2,1,2)\n\np = sns.countplot(x='parental_level_of_education', data = data, hue='Grade', palette='bright')\n_ = plt.setp(p.get_xticklabels(), rotation=90) \nplt.show()\n","46da9981":"data.head()","8c6cdfc6":"data.Grade.dropna(inplace = True)\nlabels = data.Grade.value_counts().index\ncolors = ['grey','blue','red','yellow','green','brown']\nexplode = [0,0,0,0,0,0]\nsizes = data.Grade.value_counts().values\n# visual\nplt.figure(figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title(\"According to grades, pie chart\",color = 'blue',fontsize = 15)","9531dcad":"\nf,ax1 = plt.subplots(figsize =(20,10))\nsns.pointplot(x='parental_level_of_education',y='reading_score',data=data,color='lime',alpha=0.8)\nsns.pointplot(x='parental_level_of_education',y='writing_score',data=data,color='red',alpha=0.8)\nsns.pointplot(x='parental_level_of_education',y='math_score',data=data,color='blue',alpha=0.8)\n\nplt.text(40,0.6,'writing_score',color='red',fontsize = 17,style = 'italic')\nplt.text(40,0.55,'reading_score',color='lime',fontsize = 18,style = 'italic')\nplt.text(40,0.5,'math_score',color='lime',fontsize = 18,style = 'italic')\n\nplt.xlabel('States',fontsize = 15,color='blue')\nplt.ylabel('Values',fontsize = 15,color='blue')\nplt.title('Reading, writting and math scores According to parental level of education',fontsize = 20,color='blue')\nplt.grid()","0a24b397":"\n\n# Visualization of score on the Percentage\n\ng = sns.jointplot(data.math_score, data.Percentage, kind=\"scatter\", size=7)\ng = sns.jointplot(data.reading_score, data.Percentage, kind=\"scatter\", size=7)\ng = sns.jointplot(data.writing_score, data.Percentage, kind=\"scatter\", size=7)\n\nplt.savefig('graph.png')\nplt.show()\n\n","4a6c5009":"plt.figure(figsize=(10,8))\nsns.swarmplot(x=\"gender\", y=\"Percentage\",hue=\"parental_level_of_education\", data=data)\nplt.show()","2c1bce68":"how do scores change According to parental level of education","00e63d5d":"Explore Math score Count","27b36f5b":"Assign the grades\nGrading\nabove 80 = A Grade\n70 to 80 = B Grade\n60 to 70 = C Grade\n50 to 60 = D Grade\n40 to 50 = E Grade\nbelow 40 = F Grade ( means Fail )","b1c1f788":"How many studends passed in reading?","b379e617":"How many students passed in Math exam ?\u00b6\n","50d612e9":"Explore Reading Score"}}