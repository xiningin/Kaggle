{"cell_type":{"11e1b4d3":"code","71fa4418":"code","f45a97bb":"code","bd5410f9":"code","c0697005":"code","1701144d":"code","64c84dd6":"code","3955fcb1":"code","3e692219":"markdown"},"source":{"11e1b4d3":"import bz2\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport math","71fa4418":"with bz2.open(\"\/kaggle\/input\/raw-chess-games-pgn\/lichess_db_standard_rated_2014-08.pgn.bz2\", \"rb\") as f:\n    data = f.read()","f45a97bb":"data = str(data) # Convert binary data into string for easier functionality\nraw_games = data.split('[Event') # Split the data into chess games using the '[Event' string\nprint(\"Game at 0th index: %s\" % raw_games[0])\ndel raw_games[0] # The first index isn't a game\ndel data # Remove binary string to save memory","bd5410f9":"eval_games = []\nfor game in raw_games:\n    if game.find('eval') != -1:\n        eval_games.append(game)","c0697005":"print('Example Game: %s' % eval_games[0])","1701144d":"%%time\nPGN_list = []\nfor game in eval_games:\n    index = game.find(\"1. \")\n    s = \"\"\n    curr_move = 0\n    white = True\n    game = game.replace('eval', '').replace('%', '')\n    \n    eval_on = False\n    while True:\n        if game[index:index+2] == '0-' or game[index:index+2] == '1-' or game[index:index+2] == '1\/':\n            # Game termination\n            break\n        if game[index] == '{':\n            eval_on = True\n        elif game[index] == '}':\n            eval_on = False\n            index += 1\n            continue\n        \n        if not eval_on:\n            s += game[index]\n            \n        index += 1\n    \n    end_num = \"\"\n    read = False\n    for index in range(len(s)-1, -1, -1):\n        if s[index] == '.':\n            read = True\n        elif read and s[index] != '.':\n            end_num += s[index]\n            if s[index-1] == ' ':\n                break\n        \n    end_num = end_num[len(end_num)::-1]\n    for x in range(1, int(end_num)+1):\n        s = s.replace('  %d...' % x, '')\n    s = s.replace('  ', ' ').replace('?', '').replace('!', '')\n    s = s[:len(s)-1] # Get rid of last space\n    PGN_list.append(s)","64c84dd6":"len(PGN_list)","3955fcb1":"for i in range(10):\n    print(\"%s\\n\" % PGN_list[i])","3e692219":"<h1 class=\"alert alert-block alert-info\" style=\"text-align:center; font-size:36px\">Chess Visualization Project, Part 1.1<\/h1>\n\n<p style=\"font-size:15px; font-family:verdana; line-height: 1.7em; padding-top: 15px\"> This is a sample method for extracting games with the eval bar. In my <a href=\"https:\/\/www.kaggle.com\/ironicninja\/converting-raw-chess-pgn-to-readable-data\"> original data cleaning notebook <\/a>, I do not use games with eval bar. Please note, this may not be the most efficient method of extracting these games. I may try other methods like Regex in the future, but for now, this notebook should be sufficient.<\/p>"}}