{"cell_type":{"1bf4840c":"code","ae492896":"code","2ba9161a":"code","355f12cc":"code","08125c80":"code","91e5524a":"code","21ef08fb":"code","fc33969b":"code","e382d4a7":"code","ac428056":"code","dabab494":"code","93885aba":"code","e049f3f9":"code","5bae1cd0":"code","88a83da0":"code","3bba2e53":"code","f52184ac":"code","f41dff56":"code","1c7d9de7":"code","87e65e45":"code","55850eaa":"code","827aa7af":"code","b32ab14a":"code","b35a8185":"code","2594ed10":"code","9305fa27":"code","202736ac":"code","1b2bf9d0":"code","88bfbc91":"code","c5997263":"code","5bd9fe9b":"markdown","70e19931":"markdown","f327a2ac":"markdown","dbd4c632":"markdown","9f64bc30":"markdown"},"source":{"1bf4840c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ae492896":"train=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\nimport matplotlib.pyplot as plt\n","2ba9161a":"train.shape,test.shape","355f12cc":"train.dtypes","08125c80":"train.isna().sum()","91e5524a":"train.head(10)","21ef08fb":"train['Age'].hist()","fc33969b":"#percentage of survived and dead\n(train['Survived'].value_counts()\/891).plot.bar()\nplt.title(\"Percentage of survival\")\nplt.xlabel(\"0=Dead 1=Survived\")","e382d4a7":"train['Age'].plot.box()\nplt.title(\"Outliars In AGE\")","ac428056":"train['Age'][train['Survived']==1].plot.hist()\nplt.title(\"Age-wise survival rate\")\nplt.xlabel(\"AGE\")","dabab494":"(train['Sex'][train['Survived']==1].value_counts()).plot.barh()\nplt.title(\"Sex wise survival rate\")\nplt.ylabel(\"Gender\")\nplt.xlabel(\"Count\")","93885aba":"import scipy.stats as st\nst.chi2_contingency(pd.crosstab(train['Sex'],train['Survived']))\n#Since pvalue is <<0.5 there is significant difference","e049f3f9":"train['Pclass'][train['Survived']==1].value_counts().plot.barh()\nplt.title(\"Class wise survival rate\")\n\n#shows that higher class have more survival rate is can be the useful predictor","5bae1cd0":"plt.scatter(x=train['Age'],y=train['Fare'])","88a83da0":"train.columns","3bba2e53":"#Removing the Non predictors such as name,ticket,fare,cabin\nX_train=train[['PassengerId','Survived','Pclass','Sex','Age','SibSp','Parch','Embarked']]\nX_train.head()","f52184ac":"X_train.dropna(inplace=True)\nX_train.shape","f41dff56":"X_test=test[['PassengerId','Pclass','Sex','Age','SibSp','Parch','Embarked']]\nX_test","1c7d9de7":" X_test['Age'].replace(np.nan,round(X_test['Age'].mean(),0),inplace=True)\nX_test","87e65e45":"#Splitting the dataset into dependable and idipendent variables\n\ny_train=X_train['Survived']\nX_train.drop('Survived',axis=1,inplace=True)\n","55850eaa":"X_train=pd.get_dummies(X_train)\nX_test=pd.get_dummies(X_test)\n","827aa7af":"X_train.shape,X_test.shape","b32ab14a":"from sklearn import preprocessing\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn import metrics\n\nXt=np.asanyarray(X_train)\nYt=np.asanyarray(y_train)\nxts=np.asanyarray(X_test)\n","b35a8185":"Xt=preprocessing.StandardScaler().fit(Xt).transform(Xt)\nxts=preprocessing.StandardScaler().fit(xts).transform(xts)","2594ed10":"rfc=RandomForestClassifier(n_estimators=120,max_depth=4,bootstrap=True)","9305fa27":"rfc.fit(Xt,Yt)","202736ac":"pred=rfc.predict(xts)","1b2bf9d0":"\npredictions=pd.DataFrame({'PassengerID':X_test['PassengerId'],'Survived':pred})\n","88bfbc91":"predictions","c5997263":"predictions.to_csv('\/kaggle\/working\/output.csv',index=False)","5bd9fe9b":"Analysing that is there an significant difference in  survival rate by gender we take chi-squared contingency","70e19931":"# Removing Outliars and Non Predictor Variables","f327a2ac":"# Univariate Analysis","dbd4c632":"# Bivariate Analysis","9f64bc30":"# Model Development using Random Forest"}}