{"cell_type":{"eb964552":"code","714353ce":"code","2dafcf99":"code","a7494d86":"code","e7eea8d4":"code","57f5c9c9":"code","f24eb1fd":"code","fbe9d336":"code","714a0b46":"code","9784878b":"code","b0caa908":"code","f739d2ba":"code","e64dbe43":"code","2d1a17b5":"code","29504005":"code","a4601c3c":"code","77f5421d":"code","7d963aa7":"code","c3c296f6":"code","3ac1837a":"code","a9f96a2e":"code","e7028834":"code","62a66dcc":"code","c931701c":"code","2f92eb88":"code","5458d580":"code","1413a86f":"code","96f936e6":"code","dedc7b73":"code","7f7e1faf":"code","321eacfd":"code","87e7bc8e":"code","e23a5ae7":"code","ba9be1d9":"code","e4aac3e8":"code","bc872743":"code","b9120c0c":"code","7ef4addf":"code","c31aeb3c":"code","d2561d08":"code","6f3dd5c7":"code","27ddc592":"code","9974751d":"code","4c53e850":"code","d09a37d3":"code","28e6fbe1":"markdown","41c4ba3b":"markdown","81adf44c":"markdown","8d993718":"markdown","45b0a007":"markdown","ef9ebde1":"markdown","08f51853":"markdown","fb86e1ae":"markdown","8492e05b":"markdown","8595b8f4":"markdown","76749def":"markdown"},"source":{"eb964552":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","714353ce":"dados = pd.read_csv('..\/input\/socioeconomic-country-profiles\/soci_econ_country_profiles.csv')\ndados.head()","2dafcf99":"dados.isnull().sum().values","a7494d86":"categoricos = []\nfor x in dados:\n  if dados[x].dtypes == 'object':\n    categoricos.append(x)","e7eea8d4":"categoricos = dados[categoricos].copy()\ncategoricos.head()","57f5c9c9":"categoricos['Pop. using improved drinking water (urban\/rural, %)'] = categoricos['Pop. using improved drinking water (urban\/rural, %)'].str.split('\/')\nteste = categoricos['Pop. using improved drinking water (urban\/rural, %)'].str.slice(1).sum()","f24eb1fd":"categoricos['Labour force participation (female\/male pop. %)'] = categoricos['Labour force participation (female\/male pop. %)'].str.split('\/')\ncategoricos['Labour force participation male %'] = categoricos['Labour force participation (female\/male pop. %)'].str.slice(1).sum()\ncategoricos['Labour force participation female %'] = categoricos['Labour force participation (female\/male pop. %)'].str.slice(0,1).sum()\ncategoricos.drop('Labour force participation (female\/male pop. %)', axis=1, inplace=True)","fbe9d336":"categoricos['Population age distribution (0-14 \/ 60+ years, %)'] = categoricos['Population age distribution (0-14 \/ 60+ years, %)'].str.split('\/')\ncategoricos['Population age distribution 0-14 y.o %'] = categoricos['Population age distribution (0-14 \/ 60+ years, %)'].str.slice(0,1).sum()\ncategoricos['Population age distribution 60+ y.o %)'] = categoricos['Population age distribution (0-14 \/ 60+ years, %)'].str.slice(1).sum()\ncategoricos.drop('Population age distribution (0-14 \/ 60+ years, %)', axis=1, inplace=True)","714a0b46":"categoricos['International migrant stock (000\/% of total pop.)'] = categoricos['International migrant stock (000\/% of total pop.)'].str.split('\/')\ncategoricos['International migrant stock (% of total pop.)'] = categoricos['International migrant stock (000\/% of total pop.)'].str.slice(1).sum()\ncategoricos.drop(\"International migrant stock (000\/% of total pop.)\", axis=1, inplace=True)","9784878b":"categoricos['Education: Primary gross enrol. ratio (f\/m per 100 pop.)'] = categoricos['Education: Primary gross enrol. ratio (f\/m per 100 pop.)'].str.split('\/')\ncategoricos['Education: Primary gross enrol. ratio (per 100 pop.)'] = categoricos['Education: Primary gross enrol. ratio (f\/m per 100 pop.)'].str.slice(0,1).sum()\ncategoricos.drop('Education: Primary gross enrol. ratio (f\/m per 100 pop.)', axis=1, inplace=True)","b0caa908":"categoricos['Education: Secondary gross enrol. ratio (f\/m per 100 pop.)'] = categoricos['Education: Secondary gross enrol. ratio (f\/m per 100 pop.)'].str.split('\/')\ncategoricos['Education: Secondary gross enrol. ratio (per 100 pop.)'] = categoricos['Education: Secondary gross enrol. ratio (f\/m per 100 pop.)'].str.slice(0,1).sum()\ncategoricos.drop('Education: Secondary gross enrol. ratio (f\/m per 100 pop.)', axis=1, inplace=True)","f739d2ba":"categoricos['Education: Tertiary gross enrol. ratio (f\/m per 100 pop.)'] = categoricos['Education: Tertiary gross enrol. ratio (f\/m per 100 pop.)'].str.split('\/')\ncategoricos['Education: Tertiary gross enrol. ratio (per 100 pop.)'] = categoricos['Education: Tertiary gross enrol. ratio (f\/m per 100 pop.)'].str.slice(0,1).sum()\ncategoricos.drop('Education: Tertiary gross enrol. ratio (f\/m per 100 pop.)', axis=1, inplace=True)","e64dbe43":"categoricos['Forested area (% of land area)'] = categoricos['Forested area (% of land area)'].str.split('\/')\ncategoricos['Forested area (% of land area)'] = categoricos['Forested area (% of land area)'].str.slice(1).sum()","2d1a17b5":"categoricos['Energy supply per capita (Gigajoules)'] = categoricos['Energy supply per capita (Gigajoules)'].str.split('\/')\ncategoricos['Energy supply per capita (Gigajoules)'] = categoricos['Energy supply per capita (Gigajoules)'].str.slice(0,1).sum()","29504005":"categoricos.drop('Pop. using improved drinking water (urban\/rural, %)', axis=1, inplace=True)","a4601c3c":"categoricos.head()","77f5421d":"categoricos = categoricos.apply(lambda x: x.replace(\"~0.0\", \"0\"))\ncategoricos = categoricos.apply(lambda x: x.replace(\"-~0.0\", \"0\"))\ncategoricos = categoricos.apply(lambda x: x.replace(\"...\", \"\"))\ncategoricos = categoricos.apply(lambda x: x.replace(\"\", 0))","7d963aa7":"categoricos.head()","c3c296f6":"categoricos.iloc[:,2:] = categoricos.iloc[:,2:].astype('float')","3ac1837a":"for x in categoricos.iloc[:,2:].columns:\n  categoricos[x] = categoricos[x].replace(0, categoricos[x].mean())\n  categoricos[x] = categoricos[x].replace(-99, 0.01)","a9f96a2e":"categoricos.head()","e7028834":"categoricos.drop('Pop. using improved sanitation facilities (urban\/rural, %)', axis=1,inplace=True)","62a66dcc":"numericos = []\nfor x in dados:\n  if dados[x].dtypes != 'object':\n    numericos.append(x)","c931701c":"numericos = dados[numericos].copy()\nnumericos.head()","2f92eb88":"numericos.fillna(numericos.mean(), inplace=True)","5458d580":"dados = pd.concat([categoricos, numericos], axis=1)\ndados.head()","1413a86f":"import ipywidgets as widgets","96f936e6":"grupamento = dados.groupby('Region').mean()\n\n@widgets.interact(Data = grupamento.columns)\ndef plotagem(Data):\n  fig, ax = plt.subplots(figsize=(25,7))\n  ax.bar(grupamento[Data].index, height = grupamento[Data])\n  ax.axhline(grupamento[Data].mean(), ls='--', color='red', label='Mean')\n  ax.set_title(Data)\n  ax.legend()","dedc7b73":"@widgets.interact(Data = grupamento.columns)\ndef plotagem(Data):\n  fig, ax = plt.subplots(figsize=(10,10))\n  ax.pie(x=grupamento[Data], labels=grupamento[Data].index)\n  ax.set_title(Data, size=20)","7f7e1faf":"@widgets.interact(Region = dados['Region'], Data = dados.groupby('Region').sum().columns)\ndef plot_countries(Data, Region):\n  dados2 = dados[dados['Region'] == Region]\n  dados2.set_index(dados2['country'], inplace=True)\n  dados2.drop(['country','Region'], axis=1, inplace=True)\n###----------------------------------------------------------\n  fig, ax = plt.subplots(figsize=(25,7))\n  ax.bar(dados2[Data].index, height = dados2[Data])\n  ax.axhline(dados2[Data].mean(), ls='--', color='red', label='Mean')\n  ax.set_title(Data)\n  ax.legend()","321eacfd":"dados2.set_index(dados['country'], inplace=True)\n\n@widgets.interact(Data = dados2.columns, Region = dados.groupby('Region').mean().index)\ndef plotagem(Data, Region):\n  dados2 = dados[dados['Region'] == Region]\n  dados2.set_index(dados2['country'], inplace=True)\n  dados2.drop(['country','Region'], axis=1, inplace=True)\n###--------------------------------------------------\n  fig, ax = plt.subplots(figsize=(10,10))\n  ax.pie(x=dados2[Data], labels=dados2[Data].index)\n  ax.set_title(Data, size=20)","87e7bc8e":"dados2 = dados.groupby('country').head()\ndados2.set_index('country', inplace=True)\n\n@widgets.interact(Data = dados2.columns, Data2 = dados2.columns)\ndef plotagem(Data, Data2):\n  dados2 = dados.groupby('country').head()\n  dados2.set_index('country', inplace=True)\n###--------------------------------------------------\n  fig, ax = plt.subplots(figsize=(10,5))\n  ax.scatter(x=dados2[Data], y=dados2[Data2])\n  ax.set_ylabel(\"{}\".format(Data))\n  ax.set_xlabel(\"{}\".format(Data2))\n  ax.set_title('Scatter Plot', size=20)\n","e23a5ae7":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.decomposition import PCA","ba9be1d9":"scaler = StandardScaler()\ndados_scaled = scaler.fit_transform(dados.loc[:,['High-technology exports (current US$)', 'Local Purchasing Power Index',\n                                                 'Unemployment (% of labour force)', 'International trade: Exports (million US$)',\n                                                 'International trade: Imports (million US$)',\n                                                 'International trade: Balance (million US$)']])","e4aac3e8":"score = []\nrange_values = range(1,20)\nfor i in range_values:\n    kmeans = KMeans(n_clusters = i)\n    kmeans.fit(dados_scaled)\n    score.append(kmeans.inertia_)\n    \nplt.plot(score, '+-r')","bc872743":"cluster = KMeans(n_clusters=3)\ncluster.fit(dados_scaled)","b9120c0c":"previsoes = cluster.labels_\ncentroides = cluster.cluster_centers_","7ef4addf":"previsoes","c31aeb3c":"pca = PCA(n_components=2)\ndados_pca = pca.fit_transform(dados_scaled)","d2561d08":"dados_pca = pd.DataFrame(dados_pca, columns = ['PCA1', 'PCA2'])\ndados_pca = pd.concat([dados_pca, pd.DataFrame({\"grupo\" : previsoes})], axis=1)","6f3dd5c7":"dados_pca2 = pd.concat([dados_pca, dados['country'], dados['Region']], axis=1)","27ddc592":"ax, fig = plt.subplots(figsize=(15,7))\nsns.scatterplot(x = dados_pca2['PCA1'], y = dados_pca2['PCA2'], hue = dados_pca2['grupo'], palette  = 'tab10')\nplt.title(\"Cluster\")\nplt.show()","9974751d":"dados_pca2[dados_pca2['grupo'] == 2]","4c53e850":"dados_pca2[dados_pca2['grupo'] == 0]","d09a37d3":"dados_pca2[dados_pca2['grupo'] == 1]","28e6fbe1":"##### ScatterPlot","41c4ba3b":"### Cleaning numeric variables","81adf44c":"### Exploring Region data","8d993718":"### Re-creating the complete data","45b0a007":"##### Barplot","ef9ebde1":"### KMeans algorithm","08f51853":"## Clustering","fb86e1ae":"#### Creating a widget to analyze the data","8492e05b":"##### Barplot","8595b8f4":"##### Pieplot","76749def":"### Exploring country data"}}