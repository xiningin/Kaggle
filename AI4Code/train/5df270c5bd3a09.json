{"cell_type":{"d2c9b6e6":"code","d9d9bca3":"code","bb8b5637":"code","4db2e1d6":"code","a57dc14a":"code","bfdd389d":"code","45fe6496":"code","950f43f5":"code","5a0d09e1":"code","82951c92":"code","bf2dfdbe":"code","9f4c2c89":"code","a30b109f":"code","1b843a5d":"code","c491c5e5":"code","673f7c61":"code","adaed6f5":"code","bba2c015":"code","b11056c8":"code","2b8a48de":"code","bfe52e3c":"code","9da304d0":"code","9634172e":"code","aad8155d":"code","602eb25e":"code","1ad9ce1c":"code","836dba75":"code","511d6d36":"code","0ea6d86b":"markdown"},"source":{"d2c9b6e6":"import pandas as pd\nimport numpy as np\nimport re\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport os\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.tools as tls\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n\n#Loading our data set using the Panda library\ntest_data = pd.read_csv('..\/input\/titanic\/test.csv')\ntrain_data = pd.read_csv('..\/input\/titanic\/train.csv')\nprint(os.listdir(\"..\/input\/titanic\"))\n\ntrain_data.head()\n","d9d9bca3":"print(train_data.columns.values)","bb8b5637":"train_data.info()\ntest_data.info()\n","4db2e1d6":"train_data.describe()\n","a57dc14a":"train_data.describe(include=['O'])","bfdd389d":"sns.catplot(x='Sex', col='Survived', kind='count', data=train_data);\n","45fe6496":"f,ax=plt.subplots(1,2,figsize=(16,7))\ntrain_data['Survived'][train_data['Sex']=='male'].value_counts().plot.pie(explode=[0,0.2],autopct='%1.1f%%',ax=ax[0],shadow=True)\ntrain_data['Survived'][train_data['Sex']=='female'].value_counts().plot.pie(explode=[0,0.2],autopct='%1.1f%%',ax=ax[1],shadow=True)\nax[0].set_title('Male')\nax[1].set_title('Female')","950f43f5":"ageGraph = train_data.copy()\nageGraph.dropna(inplace = True)\nsns.distplot(ageGraph[\"Age\"])","5a0d09e1":"g = sns.FacetGrid(train_data, col='Survived')\ng.map(plt.hist, 'Age', bins=20)","82951c92":"train_data[['Pclass', 'Survived']].groupby(['Pclass'], as_index=False).mean().sort_values(by='Survived', ascending=False)","bf2dfdbe":"sns.catplot('Pclass','Survived', kind='point', data=train_data);","9f4c2c89":"grid = sns.FacetGrid(train_data, col='Survived', row='Pclass', size=2.2, aspect=1.6)\ngrid.map(plt.hist, 'Age', alpha=.5, bins=20)\ngrid.add_legend();","a30b109f":"train_data[[\"SibSp\", \"Survived\"]].groupby(['SibSp'], as_index=False).mean().sort_values(by='Survived', ascending=False)","1b843a5d":"train_data[[\"Parch\", \"Survived\"]].groupby(['Parch'], as_index=False).mean().sort_values(by='Survived', ascending=False)","c491c5e5":"combine = [train_data, test_data]\nfreq_port = train_data.Embarked.dropna().mode()[0]\nprint(\"Most frequently boarded port: \" + freq_port)","673f7c61":"for dataset in combine:\n    dataset['Embarked'] = dataset['Embarked'].fillna(freq_port)\n    \ntrain_data[['Embarked', 'Survived']].groupby(['Embarked'], as_index=False).mean().sort_values(by='Survived', ascending=False)","adaed6f5":"sns.catplot('Embarked','Survived', kind='point', data=train_data);","bba2c015":"grid = sns.FacetGrid(train_data, row='Embarked', size=2.2, aspect=1.6)\ngrid.map(sns.pointplot, 'Pclass', 'Survived', 'Sex', palette='deep')\ngrid.add_legend()","b11056c8":"train_data = train_data.drop(['Ticket', 'Cabin'], axis=1)\ntest_data = test_data.drop(['Ticket', 'Cabin'], axis=1)\ncombine = [train_data, test_data]\n","2b8a48de":"train_data = train_data.drop(['Name', 'PassengerId'], axis=1)\ntest_data = test_data.drop(['Name', 'PassengerId'], axis=1)\ncombine = [train_data, test_data]\ntrain_data.shape, test_data.shape","bfe52e3c":"for dataset in combine:\n    dataset['Sex'] = dataset['Sex'].map( {'female': 1, 'male': 0} ).astype(int)\n\ntrain_data.head()","9da304d0":"for dataset in combine:\n    dataset['Embarked'] = dataset['Embarked'].map( {'S': 0, 'C': 1, 'Q': 2} ).astype(int)\n\ntrain_data.head()","9634172e":"for dataset in combine:\n    dataset['FamilySize'] = dataset['SibSp'] + dataset['Parch'] + 1\n\ntrain_data[['FamilySize', 'Survived']].groupby(['FamilySize'], as_index=False).mean().sort_values(by='Survived', ascending=False)","aad8155d":"train_data = train_data.drop(['Parch', 'SibSp'], axis=1)\ntest_data = test_data.drop(['Parch', 'SibSp'], axis=1)\ncombine = [train_data, test_data]\n\ntrain_data.head()","602eb25e":"guess_ages = np.zeros((2,3))\nguess_ages","1ad9ce1c":"for dataset in combine:\n    for i in range(0, 2):\n        for j in range(0, 3):\n            guess_df = dataset[(dataset['Sex'] == i) & \\\n                                  (dataset['Pclass'] == j+1)]['Age'].dropna()\n\n            age_guess = guess_df.median()\n\n            guess_ages[i,j] = int( age_guess\/0.5 + 0.5 ) * 0.5\n            \n    for i in range(0, 2):\n        for j in range(0, 3):\n            dataset.loc[ (dataset.Age.isnull()) & (dataset.Sex == i) & (dataset.Pclass == j+1),\\\n                    'Age'] = guess_ages[i,j]\n\n    dataset['Age'] = dataset['Age'].astype(int)\n\ntrain_data.head()","836dba75":"test_data['Fare'].fillna(test_data['Fare'].dropna().median(), inplace=True)","511d6d36":"train_data.info()\ntest_data.info()","0ea6d86b":"We can now see that all features are numerical values and there are no missing values"}}