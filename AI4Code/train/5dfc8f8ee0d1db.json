{"cell_type":{"0a18fee3":"code","9b24e88f":"code","5c788cf5":"code","7386839c":"code","54f0fdfe":"code","57e27ab1":"code","68f289fe":"code","eaac2cf7":"code","33eb2fac":"code","e19fbb58":"code","eb6212c9":"code","1c4f9595":"code","633a3d02":"code","5c9ff7c0":"code","5e6ec8fc":"code","05009562":"markdown","80f55d26":"markdown","c4d80a85":"markdown","6d75373d":"markdown","a0c7c6b4":"markdown","31e472b2":"markdown","b73924f5":"markdown","ccf5e7f8":"markdown","abaa969c":"markdown","5a841cf6":"markdown","c262d71b":"markdown","dc543eee":"markdown","e1eefc4b":"markdown","4f9b6cf5":"markdown","343adf4e":"markdown","eaa6f554":"markdown","0e807b6c":"markdown","0e38bb75":"markdown","7ad68e78":"markdown","2aa31572":"markdown","41a2733e":"markdown","28fa34af":"markdown","4f842d40":"markdown","5ca6a33d":"markdown","f713ac7b":"markdown"},"source":{"0a18fee3":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nplt.rcParams['figure.figsize'] = 13, 10","9b24e88f":"dataframe = pd.read_csv('..\/input\/amazon_alexa.tsv', sep = '\\t')","5c788cf5":"sns.countplot(dataframe['feedback'] )","7386839c":"print(\"Percentage of negative reviews: \", (len(dataframe[dataframe['feedback'] == 0]) * 100)\/len(dataframe))\nprint(\"Percentage of Positive reviews: \", (len(dataframe[dataframe['feedback'] == 1]) * 100)\/len(dataframe))","54f0fdfe":"sns.countplot(dataframe['rating'])","57e27ab1":"ax = sns.countplot(x = 'variation', data = dataframe,palette=\"Blues_d\", order = dataframe['variation'].value_counts().index)\nax.set_xticklabels(ax.get_xticklabels(),rotation=30)","68f289fe":"ax = sns.barplot(x = 'variation', y = 'rating', data = dataframe)\nax.set_xticklabels(ax.get_xticklabels(),rotation=30)","eaac2cf7":"dataframe.groupby('variation').mean().reset_index()","33eb2fac":"def wordclouds(x, label):\n    from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n    text = []\n    dataframe_pos = x['feedback'] == label\n    for i in range(0, len(x)):\n        review = dataframe['verified_reviews'][i]\n        text.append(review)\n    text = \" \".join(text for text in text)\n\n    stopwords = set(STOPWORDS)\n    stopwords.remove('not')\n    wordcloud = WordCloud(stopwords=stopwords, background_color=\"black\", max_font_size=100).generate(text)\n    plt.imshow(wordcloud, interpolation='bilinear')\n    plt.axis(\"off\")\n    plt.show()\n    ","e19fbb58":"wordclouds(dataframe, 1)","eb6212c9":"import re\nimport nltk\nfrom nltk.corpus import stopwords\nfrom nltk.stem.porter import PorterStemmer","1c4f9595":"corpus = []\nstop_words = set(stopwords.words('english'))\nstop_words.remove('not')\nfor i in range(0, len(dataframe)):\n    review = re.sub('[^a-zA-Z]', ' ', dataframe['verified_reviews'][i])\n    review = review.lower()\n    review = review.split()\n    ps = PorterStemmer()\n    review = [ps.stem(word) for word in review if not word in stop_words]\n    review = ' '.join(review)\n    corpus.append(review)\n","633a3d02":"from sklearn.feature_extraction.text import CountVectorizer\ncv = CountVectorizer(max_features = 2500)\nX = cv.fit_transform(corpus).toarray()\ny = dataframe.iloc[:, 4].values","5c9ff7c0":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 0)\n\nfrom sklearn import tree\nclassifier = tree.DecisionTreeClassifier()\nclassifier.fit(X_train, y_train)\ny_pred = classifier.predict(X_test)","5e6ec8fc":"from sklearn.metrics import accuracy_score, f1_score, precision_score, recall_score, classification_report, confusion_matrix\nprint(\"The F1 score is: \", f1_score(y_test, y_pred, average=\"macro\")*100)\nprint(\"The precision score is: \", precision_score(y_test, y_pred, average=\"macro\")*(100))\nprint(\"The recall score is: \", recall_score(y_test, y_pred, average=\"macro\")*100) \nprint(\"The accuracy score is: \", accuracy_score(y_test, y_pred)*100)","05009562":"Hence, Alexa is well liked and made its own place in the market. It would be fun to compare the reviews with google home.","80f55d26":"___","c4d80a85":"The plot above shoes that most people rated Alex 5 stars. 4 star rating is pretty significant, Hence, it performed great in the market.","6d75373d":"The above plot shows that, \"Black Dot\" variant is high in demand and lowest being the \"Walnut Finish\". The graph is arranged in the descending order, and is pretty self-explanatory.","a0c7c6b4":" ### Introduction\n The dataset used in this notebook contains Alex reviews. This dataset conatins 3150 reviews about the product, rating and feedback. Rating range from 1 to 5. Feedback column contains binary number 0\/1, 1 for positive review and 0 for negative review. ","31e472b2":"___","b73924f5":"# Alexa Review's Analysis and Machine Learning Model.","ccf5e7f8":"### Machine Learning Section.","abaa969c":"The machine learning models used is decision tree classifier as it gives the highest accuracy.","5a841cf6":"This model has the highest accuracy, f1 score, precision score and recall score.","c262d71b":"Above plot is a wordcloud of most frequent words used in the positive reviews.\nPlot for negative reviews can be made using the function, \"wordclouds()\". Pass dataframe and label as the argument.","dc543eee":"As from the plot above and percentage of positive and negative review, it is evident that Alex is very popular, with very less percentage of bad reviews.","e1eefc4b":"___","4f9b6cf5":"The above code block cleans the text and append it to corpus list. This code block converts the reviews to lower case, only keeps alphabets and remove special characters or any other characters. Then the porter stemmer, converts each word to its root word, example, fighting is converted to fight.","343adf4e":"___","eaa6f554":"### Analysis Section","0e807b6c":"The first part is importing all the required libraries for this section.","0e38bb75":"The graph shows \"walnut finish\" variant with highest average rating, this is because the number of walnut finish variant is very less as compared with \"Black dot\" variant. But the overall rating ranges from 4.2 to 4.9. ","7ad68e78":"___","2aa31572":"For this model I chose the bag of word model.","41a2733e":"___","28fa34af":"Here, I have used NLTK library.","4f842d40":"___","5ca6a33d":"This table shoes the exact rating of each variant.","f713ac7b":"I hope you like it. If you have any question or suggestion, just drop them in the the comment section. Please like the notebook. Thank You."}}