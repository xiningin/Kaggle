{"cell_type":{"5ff82ab2":"code","8e419113":"code","5e34b90a":"code","83732acb":"code","5072766e":"code","8fcce320":"code","2044b998":"code","74ddf248":"code","5484d0cc":"code","be4f1642":"code","c671fb75":"code","28c3c602":"code","d6f7cba4":"code","366017fd":"code","f3587e2a":"code","cc8f25b1":"code","dc483e98":"code","1179fa99":"code","0002d1b7":"code","69d6949d":"code","96dc2b51":"code","87c59a62":"code","5dbc14f9":"code","a885b1b4":"code","ccc83ad9":"code","e7ad7027":"code","aef96e81":"code","70b42c32":"code","e50ecd82":"code","cb64e910":"code","0ccc060c":"code","aec93877":"code","f1072f97":"code","6a6e3c84":"code","531e5079":"code","5791afc2":"code","e457cf9f":"code","ccb4592a":"code","2737c1f9":"code","d3b37832":"code","c3a0d6c2":"code","11b59550":"code","43576c91":"code","e6e095a0":"code","ed04fd9c":"code","bfa2074e":"code","d32da4a9":"code","2c69040b":"code","053f9822":"code","f3a7c7da":"code","dafb4273":"code","18038c49":"code","7ba9a930":"code","74e0f5e0":"code","ea3366fe":"code","adf37e99":"code","9a9d11f6":"code","474632f0":"code","9d5743e2":"code","f6ca541e":"code","ec1e7b89":"code","42c63ac3":"code","5a58f893":"code","dbd90426":"code","1d4f7ba7":"code","15f029f6":"code","1b3ec2c9":"code","68a1d60c":"code","a0e0ede0":"code","074d5552":"code","bdeaf9c6":"code","bae49930":"code","117f3a69":"code","403dd9e8":"code","4015d3b8":"code","ec8d16f2":"code","412a71a9":"code","65a213b3":"code","b99d99e3":"code","29b77281":"code","2d4e8a57":"code","e9d7d332":"code","3b1f239a":"code","21d8fe6c":"code","00c13d2c":"code","bdfcf178":"code","5c2185b0":"code","00f1fe35":"markdown","e5925334":"markdown","c49e1d6c":"markdown","2f011c10":"markdown","26e8ce4d":"markdown","e36e19d5":"markdown","c00ad782":"markdown","c56c7684":"markdown","3ecae8e8":"markdown","fc4106b1":"markdown","6ea882d3":"markdown","dc69b9ac":"markdown","3ae94d67":"markdown","b6b34477":"markdown","40ffbcf7":"markdown","d56da162":"markdown","9c536e9e":"markdown","16526321":"markdown","b9dc04e8":"markdown"},"source":{"5ff82ab2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","8e419113":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nsns.set(style='darkgrid')\nimport matplotlib.pyplot as plt\nfrom matplotlib import style\n#sta matplotlib to inline and displays graphs below the corresponding cell.\n%matplotlib inline\nimport os\nfrom sklearn.datasets import *\nimport warnings\nwarnings.filterwarnings('ignore')","5e34b90a":"df = pd.read_csv(\"..\/input\/purchase_prediction.csv\")\ndf.head()","83732acb":"#lets drop the 'user id' which is not useful for our prediction further\ndf.drop(\"User ID\",axis=1,inplace=True)","5072766e":"df.head()","8fcce320":"df.shape","2044b998":"#Data Imputation\ndf.isnull().sum()","74ddf248":"df.describe(include='all').T","5484d0cc":"df.info()","be4f1642":"df.Purchased.value_counts()","c671fb75":"#DATA WRANGLING\nfrom sklearn import preprocessing  \ndf=df.apply(preprocessing.LabelEncoder().fit_transform)\ndf.head()","28c3c602":"from statsmodels.stats.proportion import proportions_ztest","d6f7cba4":"# for Gender and Attrition\npd.crosstab(df['Purchased'],df['Gender'])","366017fd":"count=np.array([77,66])\nobs=np.array([204,196])","f3587e2a":"zstat,pvalue=proportions_ztest(count,obs)\nprint('z value: %0.3f, p value: %0.3f' %(zstat,pvalue))","cc8f25b1":"from scipy.stats import ttest_ind","dc483e98":"grp=df.groupby('Purchased')\ngrp_0=grp.get_group(0)\ngrp_1=grp.get_group(1)","1179fa99":"mean1=grp_1.Age.mean()\nmean1","0002d1b7":"mean0=grp_0.Age.mean()\nmean0","69d6949d":"ttest_ind(grp_0['Age'],grp_1['Age'])","96dc2b51":"#lets find  the pvalue for EstimatedSalary\ngrp=df.groupby('Purchased')\ngrp_0=grp.get_group(0)\ngrp_1=grp.get_group(1)","87c59a62":"mean1=grp_1.EstimatedSalary.mean()\nmean1","5dbc14f9":"mean0=grp_0.EstimatedSalary.mean()\nmean0","a885b1b4":"ttest_ind(grp_0['EstimatedSalary'],grp_1['EstimatedSalary'])","ccc83ad9":"df.drop('Gender',1,inplace=True)","e7ad7027":"df.head()","aef96e81":"y=df.Purchased\nX=df.drop('Purchased',1)","70b42c32":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=1)","e50ecd82":"from sklearn.preprocessing import LabelEncoder,PolynomialFeatures,StandardScaler\nse=StandardScaler()\nX_train=se.fit_transform(X_train)\nX_test=se.transform(X_test)","cb64e910":"print(X_train.shape,X_test.shape)","0ccc060c":"#apply SMOTE viz resampling technique\nfrom  imblearn.over_sampling import SMOTE","aec93877":"sm=SMOTE(random_state=1,ratio=1.0)\nX_train,y_train=sm.fit_sample(X_train,y_train)","f1072f97":"## Apply Logistic Regression with balanced data by SMOTE\nfrom sklearn.linear_model import LogisticRegression\nsmote=LogisticRegression()\nsmote.fit(X_train,y_train)\nsomote_pred=smote.predict(X_test)\n","6a6e3c84":"#checking Accuracy\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score,f1_score,recall_score,precision_score\nfrom sklearn.metrics import classification_report\nfrom mlxtend.evaluate import confusion_matrix\n","531e5079":"accuracy_score(y_test,somote_pred)","5791afc2":"print('classification:\\n',classification_report(y_test,somote_pred))\n","e457cf9f":"f1_score(y_test,somote_pred)","ccb4592a":"print('recall score:',recall_score(y_test,somote_pred))","2737c1f9":"print('precision_score',precision_score(y_test,somote_pred))","d3b37832":"sns.heatmap(confusion_matrix(y_test,somote_pred),annot=True)\nplt.xlabel('Actual')\nplt.ylabel('Predicted')","c3a0d6c2":"df.head()","11b59550":"y=df.Purchased\nX=df.drop('Purchased',1)","43576c91":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=1)","e6e095a0":"from sklearn.preprocessing import LabelEncoder,PolynomialFeatures,StandardScaler\nse=StandardScaler()\nX_train=se.fit_transform(X_train)\nX_test=se.transform(X_test)","ed04fd9c":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.neighbors import KNeighborsClassifier","bfa2074e":"knn=KNeighborsClassifier()","d32da4a9":"param={'n_neighbors':np.arange(1,50),'weights':['uniform','distance']}\ngs=GridSearchCV(knn,param,cv=5,scoring='roc_auc')\ngs.fit(X_train,y_train)","2c69040b":"param={'n_neighbors':np.arange(1,50),'weights':['uniform','distance']}\ngs=GridSearchCV(knn,param,cv=5,scoring='roc_auc')\ngs.fit(X_train,y_train)","053f9822":"gs.best_params_","f3a7c7da":"knn=KNeighborsClassifier(n_neighbors=23,weights='uniform')","dafb4273":"knn.fit(X_train,y_train)\ny_pred=knn.predict(X_test)","18038c49":"print('Accuracy Score:',accuracy_score(y_test,y_pred))","7ba9a930":"print('the confusion matrix:\\n',confusion_matrix(y_test,y_pred))","74e0f5e0":"print('The classification report:',classification_report(y_test,y_pred))","ea3366fe":"print('recall score:',recall_score(y_test,y_pred))","adf37e99":"print('precision_score',precision_score(y_test,y_pred))","9a9d11f6":"sns.heatmap(confusion_matrix(y_test,y_pred),annot=True)\nplt.xlabel('Actual')\nplt.ylabel('Predicted')","474632f0":"from sklearn.tree import DecisionTreeClassifier\ndt=DecisionTreeClassifier()","9d5743e2":"parms= {'criterion':['entropy','gini']}\ngrids=GridSearchCV(dt,parms,cv=10,scoring='roc_auc')\ngrids.fit(X_train,y_train)","f6ca541e":"grids.best_params_","ec1e7b89":"dt=DecisionTreeClassifier(criterion='entropy',random_state=0)\ndt.fit(X_train,y_train)","42c63ac3":"y_pred=dt.predict(X_test)","5a58f893":"print('Accuracy Score:',accuracy_score(y_test,y_pred))","dbd90426":"print('the confusion matrix:\\n',confusion_matrix(y_test,y_pred))","1d4f7ba7":"print('The classification report:',classification_report(y_test,y_pred))","15f029f6":"print('recall score:',recall_score(y_test,y_pred))","1b3ec2c9":"print('precision_score',precision_score(y_test,y_pred))","68a1d60c":"sns.heatmap(confusion_matrix(y_test,y_pred),annot=True)\nplt.xlabel('Actual')\nplt.ylabel('Predicted')","a0e0ede0":"#import a Library\nfrom sklearn.naive_bayes import GaussianNB","074d5552":"gb=GaussianNB()","bdeaf9c6":"gb.fit(X_train,y_train)\ny_pred=gb.predict(X_test)","bae49930":"print('Accuracy Score:',accuracy_score(y_test,y_pred))","117f3a69":"print('the confusion matrix:\\n',confusion_matrix(y_test,y_pred))","403dd9e8":"print('The classification report:',classification_report(y_test,y_pred))","4015d3b8":"sns.heatmap(confusion_matrix(y_test,y_pred),annot=True)\nplt.xlabel('Actual')\nplt.ylabel('Predicted')","ec8d16f2":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import cross_val_score\nrf=RandomForestClassifier(n_estimators=50,random_state=0)","412a71a9":"rf_var=[]\nfor val in np.arange(1,50):\n    rf=RandomForestClassifier(criterion='entropy',n_estimators=val,random_state=0)\n    kfold = KFold(shuffle=True,n_splits=5, random_state=0)\n    cv_results = cross_val_score(rf, X, y, cv=kfold, scoring='roc_auc')\n    rf_var.append(np.var(cv_results,ddof=1))\n    print(val,np.var(cv_results,ddof=1))","65a213b3":"x_axis=np.arange(1,50)\nplt.plot(x_axis,rf_var)","b99d99e3":"rf=RandomForestClassifier(n_estimators=17,random_state=0)","29b77281":"rf.fit(X_train,y_train)","2d4e8a57":"y_pred=rf.predict(X_test)","e9d7d332":"print('Accuracy Score:',accuracy_score(y_test,y_pred))","3b1f239a":"print('the confusion matrix:\\n',confusion_matrix(y_test,y_pred))","21d8fe6c":"print('The classification report:',classification_report(y_test,y_pred))","00c13d2c":"sns.heatmap(confusion_matrix(y_test,y_pred),annot=True)\nplt.xlabel('Actual')\nplt.ylabel('Predicted')","bdfcf178":"models=[]\nmodels.append(('Logistic',smote))\nmodels.append(('Naive',gb))\nmodels.append(('knn',knn))\nmodels.append(('DT',dt))\nmodels.append(('RF',rf))","5c2185b0":"# evaluate each model in turn\nresults = []\nnames = []\nscoring = 'roc_auc'\nfor name,model in models:\n    kfold = KFold(n_splits=5, random_state=0,shuffle=True)\n    cv_results = cross_val_score(model, X, y, cv=kfold, scoring=scoring)\n    results.append(cv_results)\n    names.append(name)\n    msg = \"%s: %f (%f)\" % (name, cv_results.mean(), cv_results.var(ddof=1))\n    print(msg)\n# boxplot algorithm comparison\nfig = plt.figure()\nfig.suptitle('Algorithm Comparison')\nax = fig.add_subplot(111)\nplt.boxplot(results)\nax.set_xticklabels(names)\nplt.show()","00f1fe35":"we can see that there is no null or missing values","e5925334":"#######The values are imbalanced in Label, We need to do resampling Techniques\n","c49e1d6c":"######based on the Pvalue which is very less and showing that very less probability of Null Hypothesis to become True","2f011c10":"#### Random Forest","26e8ce4d":"#### Naive Bayes","e36e19d5":"#### SECOND Way Of APPROACH By Using Cross Validation","c00ad782":"#### APPly KNN MODEL\n","c56c7684":"#####Lets drop the column Gender as it is accepting NULL Hypothesis to be true","3ecae8e8":"#### Decision Tree","fc4106b1":"#### From the above chart we can see that the KNN has good accuracy since our data is numerical and the accuracy will fall down in case of Decision Tree\n","6ea882d3":"TP=45 FN=11 TN=61 FP=3","dc69b9ac":"## TP=41 FP=7 TN=58 FN=14","3ae94d67":"#### TP=43 TN=62 FP=5 FN=10","b6b34477":"####### As we can see the pvalue is lesser than significant level accept Alternate Hypothesis which are the mean of Estimated Salary 0purchased","40ffbcf7":"#####as it is lesser than significant level(0.05), we have to accept the ALTERNATE HYPOTHESIS and reject Null Hypothesis","d56da162":"###its accepting Null hypothesis which is the proportion of male = proportin of female","9c536e9e":"##since there are in different units, we have to scale the data after splitting the X,y labels","16526321":"TP=41 FN=11 TN=61 FP=7","b9dc04e8":"TP=39 FN=8 TN=64 FP=9"}}