{"cell_type":{"ad17154a":"code","74bd98c4":"code","94665f24":"code","edd81fad":"code","8da98e79":"code","6a384893":"code","5eee4aaf":"code","f5ddccca":"code","19096895":"code","9dc7bea2":"code","5b569ee0":"code","ee9def3b":"code","0b679e33":"code","e9123a3c":"code","48e5955a":"code","a7b6414f":"code","84b87aef":"markdown","94d029c0":"markdown","39d487d2":"markdown","1a2a5726":"markdown","1632213e":"markdown","7e3b3a76":"markdown","40636b51":"markdown","c2b4deb0":"markdown"},"source":{"ad17154a":"import pandas as pd \nimport numpy as np \nimport seaborn as sns\nimport matplotlib.pyplot as plt","74bd98c4":"file_name = '..\/input\/BreadBasket_DMS.csv'\nbakery_df = pd.read_csv(file_name)","94665f24":"# Taking a Look at the Data\nbakery_df.head()","edd81fad":"pd.DataFrame(bakery_df.Item.value_counts()).sort_values('Item'\n                                                        ,ascending=False)","8da98e79":"bakery_df = bakery_df.drop(list(bakery_df[bakery_df['Item']==\"NONE\"].index), \n                           axis=0)","6a384893":"bakery_df.shape","5eee4aaf":"print('Total number of Items sold at the bakery is:',bakery_df['Item'].nunique())","f5ddccca":"fig, ax=plt.subplots(figsize=(16,7))\nbakery_df['Item'].value_counts().sort_values(ascending=False).head(20).plot.bar(width=0.5,edgecolor='k',align='center',linewidth=2)\nplt.xlabel('Food Item',fontsize=20)\nplt.ylabel('Number of transactions',fontsize=20)\nax.tick_params(labelsize=20)\nplt.title('20 Most Sold Items at the Bakery',fontsize=25)\nplt.grid()\nplt.ioff()","19096895":"from mlxtend.frequent_patterns import apriori # Data pattern exploration\nfrom mlxtend.frequent_patterns import association_rules # Association rules conversion","9dc7bea2":"bakery_df_encoded=bakery_df.groupby(['Transaction','Item'])['Item'].count().unstack().reset_index().fillna(0).set_index('Transaction')\n#Above line of code is transfrom data to make items as columns and each \n#transaction as a row and count same Items bought in one transaction but \n#fill other cloumns of the row with 0 to represent item which are not bought.","5b569ee0":"bakery_df_encoded.head()","ee9def3b":"def encode_units(x):\n    if x <= 0:\n        return 0\n    if x >= 1:\n        return 1\nbakery_df_encoded = bakery_df_encoded.applymap(encode_units)","0b679e33":"frequent_itemsets = apriori(bakery_df_encoded, min_support=0.03, use_colnames=True)","e9123a3c":"frequent_itemsets","48e5955a":"rules = association_rules(frequent_itemsets, metric=\"lift\", min_threshold=1)","a7b6414f":"rules","84b87aef":"# Market Basket Analysis with Bakery Transaction Data","94d029c0":"Let's take a look at the count of various items in the Bakery","39d487d2":"[Apriori Algorithm](https:\/\/en.wikipedia.org\/wiki\/Apriori_algorithm) is one of the popular Algorithm used in market basket analysis. To understand the terms Support, Confidence, Lift and Conviction please refer to [this link](https:\/\/en.wikipedia.org\/wiki\/Association_rule_learning).","1a2a5726":"**Some Terminologies**<br>\n<br>\n **1. Frequent patterns : ** Frequent patterns are patterns (such as itemsets, subsequences, or substructures) that appear in a data set frequently. For example, a set of items, such as milk and bread, that appear frequently together in a transaction data set is a frequent itemset.<br><br>\n A typical example of frequent item set mining is market basket analysis. This process analyzes customer buying habits by finding associations between the different items that customers place in their \u201cshopping baskets\u201d.  The discovery of such associations can help retailers develop marketing strategies by gaining insight into which items are frequently purchased together by customers. For instance, if customers are buying milk, how likely are they to also buy bread (and what kind of bread) on the same trip to the supermarket? Such information can lead to increased sales by helping retailers do selective marketing and plan their shelf space.<br>\n <br>\n Association rule mining consists of first finding frequent item sets (set of items, such as A and B, satisfying a minimum support threshold, or percentage of the task-relevant tuples), from which strong association rules in the form of A =>B are generated. These rules also satisfy a minimum confidence threshold (a prespecified probability of satisfying B under the condition that A is satisfied). Associations can be further analyzed to uncover correlation rules, which convey statistical correlations between item sets A and B.","1632213e":"**Reading the Bakery Daily Transaction as Dataframe**","7e3b3a76":"As we can see above there are 786 `NONE` in the bakery item since `NONE` is not a bakery product we need to remove them.","40636b51":"Now let us look at the graph of 20 most sold items in the Bakery","c2b4deb0":"## Now Moving on to Associtation Rule Mining"}}