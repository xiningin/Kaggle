{"cell_type":{"928b375e":"code","135601e4":"code","55a282c1":"code","d2c683ce":"code","a97e7d4b":"code","45dd8b1b":"code","c97d67e8":"code","69983120":"code","cc27caf2":"code","4cf4d150":"code","2052d608":"code","0a5b498e":"code","32fe2692":"code","4ab34051":"code","ece00fae":"code","aa8710da":"code","a781d920":"code","502ea0be":"code","b6baa551":"code","aa1ac8b3":"code","3bc0ce48":"code","e3517776":"code","19b67262":"code","6a5c71aa":"code","66be207b":"code","d82fdedc":"code","fcbdac1a":"code","e1416de2":"code","87295bdb":"code","0094fae1":"code","3de37d90":"code","488ce5c5":"code","6826a809":"code","4707cb04":"code","5fc938e4":"code","2219e203":"code","9d9a90c8":"markdown","a4a68bd4":"markdown","9dadc5d0":"markdown","9046fcf8":"markdown","03f5070e":"markdown","a56865c2":"markdown","7204defc":"markdown","b0707637":"markdown","50e4cc8a":"markdown","1543f620":"markdown","0e999df2":"markdown","1aef9024":"markdown","41b888da":"markdown","39960844":"markdown","ce236e97":"markdown","396348a8":"markdown","416953c1":"markdown","d318e65d":"markdown","fce340b3":"markdown","6d2defe3":"markdown","b4164447":"markdown","5cff9e44":"markdown","c7b3a6a8":"markdown","53d7e5d7":"markdown","d9b74362":"markdown","059c657c":"markdown","21f9b8fd":"markdown","1f06f48d":"markdown","a8b46e8d":"markdown"},"source":{"928b375e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","135601e4":"from pylab import rcParams\nrcParams['figure.figsize'] = (8,6)\nimport folium\n\nimport numpy as np  \nimport pandas as pd\npd.set_option(\"max_columns\", None)\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndf = pd.read_csv(\"\/kaggle\/input\/gtd\/globalterrorismdb_0718dist.csv\", encoding='ISO-8859-1', dtype = \"object\")\n#globalterrorismdb_0718dist.csv","55a282c1":"df.shape","d2c683ce":"df.head()","a97e7d4b":"df.isnull().sum()","45dd8b1b":"#df.dropna(thresh=180000,axis=1).shape","c97d67e8":"plt.subplots(figsize=(18,6))\nsns.barplot(df['resolution'].value_counts()[:15].index,df['resolution'].value_counts()[:15].values,palette='inferno')\nplt.xticks(rotation=45)\nplt.title('Top Resolutions', size=20)\nplt.show()","69983120":"#df.country_txt.head(10)#.sort_values(ascending=False)","cc27caf2":"plt.figure(figsize=(15,8))\ndf.country_txt.value_counts().head(15).plot(kind=\"bar\")\nplt.xticks(rotation=45)","4cf4d150":"fig_size = plt.rcParams[\"figure.figsize\"]\nfig_size[0] = 12\nfig_size[1] = 9\n\nsns.barplot(x=df.country_txt.value_counts(), y=df.country_txt.value_counts().index,\n            order = df.country_txt.value_counts().iloc[:25].index, orient=\"h\")","2052d608":"fig_size = plt.rcParams[\"figure.figsize\"]\nfig_size[0] = 12\nfig_size[1] = 9\n\nsns.barplot(x=df.provstate.value_counts(), y=df.provstate.value_counts().index,\n            order = df.provstate.value_counts().iloc[:25].index, orient=\"h\")","0a5b498e":"fig_size = plt.rcParams[\"figure.figsize\"]\nfig_size[0] = 12\nfig_size[1] = 9\n\nsns.barplot(x=df.city.value_counts(), y=df.city.value_counts().index,\n            order = df.city.value_counts().iloc[:25].index, orient=\"h\")","32fe2692":"df_t = df[df[\"country_txt\"] == \"France\"]\ndf_t.head()","4ab34051":"#df_t = df[df[\"country_txt\"] == \"France\"]\nplt.subplots(figsize=(16,8))\nsns.barplot(x=df_t.provstate.value_counts(), y=df_t.provstate.value_counts().index,\n            order = df_t.provstate.value_counts().iloc[:25].index, orient=\"h\")","ece00fae":"fig_size = plt.rcParams[\"figure.figsize\"]\nfig_size[0] = 12\nfig_size[1] = 9\n\n#df_t = df[df[\"country_txt\"] == \"France\"]\n\nsns.barplot(x=df_t.city.value_counts(), y=df_t.city.value_counts().index,\n            order = df_t.city.value_counts().iloc[:25].index, orient=\"h\")","aa8710da":"fig_size = plt.rcParams[\"figure.figsize\"]\nfig_size[0] = 12\nfig_size[1] = 9\n\n#df_t = df[df[\"country_txt\"] == \"France\"]\n\nsns.barplot(x=df_t.attacktype1_txt.value_counts(), y=df_t.attacktype1_txt.value_counts().index,\n            order = df_t.attacktype1_txt.value_counts().iloc[:25].index, orient=\"h\")","a781d920":"plt.subplots(figsize=(12,8))\nplt.xticks(rotation=40)\nsns.barplot(x=df_t.weaptype1_txt.value_counts().index, y=df_t.weaptype1_txt.value_counts(),\n            order = df_t.weaptype1_txt.value_counts().iloc[:12].index, orient=\"v\")","502ea0be":"plt.subplots(figsize=(18,8))\nplt.xticks(rotation=30)\nsns.barplot(x=df_t.targtype1_txt.value_counts().index, y=df_t.targtype1_txt.value_counts(),\n            order = df_t.targtype1_txt.value_counts().iloc[:18].index, orient=\"v\") ","b6baa551":"df_t['nkill'].value_counts()","aa1ac8b3":"plt.figure(figsize=(12,7))\n\ndf_t.nkill.value_counts().head(8).sort_values(ascending=False).plot(kind=\"bar\")\nplt.title(\"Count of killed people- France\", size=20)\n#plt.xticks(rotation=45)","3bc0ce48":"df_t['nwound'].value_counts()[:25]","e3517776":"plt.subplots(figsize=(18,6))\nsns.barplot(df_t['nwound'].value_counts()[:15].index,df_t['nwound'].value_counts()[:15].values, palette='inferno')\nplt.xticks(rotation=45)\nplt.title('Count of wounded in France', size=20)\nplt.show()","19b67262":"df_t.gname.value_counts()[:25]","6a5c71aa":"plt.subplots(figsize=(12,8))\nsns.barplot(df_t['gname'].value_counts()[:20],df_t['gname'].value_counts()[:20].index,palette='inferno')\nplt.title('Top Terrorist Group Names', size=20)\nplt.show()","66be207b":"plt.subplots(figsize=(15,6))\nsns.countplot('iyear',data=df,palette='viridis',edgecolor=sns.color_palette('dark',7))\nplt.xticks(rotation=90)\nplt.title('Number Of Terrorist Activities around the World according to Year')\nplt.show()","d82fdedc":"plt.subplots(figsize=(15,6))\nsns.countplot('iyear',data=df_t,palette='viridis',edgecolor=sns.color_palette('dark',7))\nplt.xticks(rotation=90)\nplt.title('Number Of Terrorist Activities in France according to Year')\nplt.show()","fcbdac1a":"plt.subplots(figsize=(15,6))\nsns.countplot('imonth',data=df_t,palette='viridis',edgecolor=sns.color_palette('dark',7))#RdYlGn_r\nplt.xticks(rotation=90)\nplt.title('Number Of Terrorist Activities in France monthly', size=20)\nplt.show()","e1416de2":"plt.subplots(figsize=(15,6))\nsns.countplot('alternative_txt',data=df_t,palette='viridis',edgecolor=sns.color_palette('dark',7))\nplt.xticks(rotation=30)\nplt.title('Alternative crimes')\nplt.show()","87295bdb":"#import folium\n\nfm = folium.Map(location=[48.86,2.32], zoom_start=9)\nfolium.CircleMarker(location=(48.8603634,2.3208891), popup=\"Paris\").add_to(fm)\nfm.save('Paris.html')\nfm","0094fae1":"import folium\nfm = folium.Map(location=[48.8647, 2.3490], zoom_start=5.3)\n\nfolium.Marker(location=(48.856644,2.34233), popup=\"Paris\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(48.56214,2.246488), popup=\"Avrainville\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(48.798328,2.309902), popup=\"Bagneux\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(48.836582,2.23914), popup=\"Boulogne-Billancourt\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(47.237829,6.024054), popup=\"Besancon\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(43.296482,5.36978), popup=\"Marseilles\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(46.306884,4.828731), popup=\"Macon\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(48.885212,2.437678), popup=\"Romainville\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(48.416095,-3.832245), popup=\"Tredudon\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(43.604652,1.444209), popup=\"Toulouse\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(42.699997,9.447317), popup=\"Bastia\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(43.091463,-0.045726), popup=\"Lourdes\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(43.836699,4.360054), popup=\"Nimes\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(48.583148, 7.747882), popup=\"Strasbourg\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(45.764043,4.835659), popup=\"Lyon\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(43.359399,-1.766148), popup=\"Hendaye\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(43.696036,7.265592), popup=\"Nice\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(45.648377,0.156237), popup=\"Angouleme\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(47.997542,-4.097899), popup=\"Quimper\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(47.914709,7.537626), popup=\"Fessenheim\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(49.49437,0.107929), popup=\"Le Havre\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(43.483152,-1.558626), popup=\"Biarritz\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(50.692705,3.177847), popup=\"Roubaix\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(41.930607,8.742907), popup=\"Ajaccio\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(48.3533,-3.872203), popup=\"Brennilis\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(48.113475,-1.675708), popup=\"Rennes\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(48.218878,-4.164362), popup=\"Dineault\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(43.091463,-0.045726), popup=\"Lourdes\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(42.567651,8.757222), popup=\"Calvi\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(41.591369,9.278311), popup=\"Porto-Vecchio\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(41.387174,9.159269), popup=\"Bonifacio\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(41.857045,9.399654), popup=\"Solenzara\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(43.102976,5.878219), popup=\"La Seyne-Sur-Mer\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(42.55,8.75), popup=\"La Vaccaja\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(43.580418,7.125102), popup=\"Antibes\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(43.388051,-1.663055), popup=\"Saint-Jean-de-Luz\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(42.309409,9.149022), popup=\"Corte\", icon=folium.Icon(color=\"green\")).add_to(fm)\nfolium.Marker(location=(43.481402,-1.514699), popup=\"Anglet\", icon=folium.Icon(color=\"green\")).add_to(fm)\n\n\nfm.save('Terrorist Events.html')\nfm","3de37d90":"#import folium \nfrom folium import plugins\nfrom folium.plugins import HeatMap\ndf_t = df_t[df_t.country_txt=='France'].reset_index(drop=True)","488ce5c5":"df_t.city.value_counts()[:50]","6826a809":"def heatmaps(kind):\n    fig,ax=plt.subplots(figsize=(20,15),nrows=2,ncols=2)\n    for i in range(2):\n        for j in range(2):\n            if i==0 and j==0:\n                cities = 'Paris'\n            elif i==0 and j==1:\n                cities = \"Ajaccio\"\n            elif i==1 and j==0:\n                cities = \"Bastia\"\n            elif i==1 and j==0:\n                cities = \"Marseilles\"\n            else:\n                cities = \"Porto-Vecchio\"\n                \n            france = df_t[df_t['city']==cities]\n            france = pd.pivot_table(data=france, values=kind,index='targtype1_txt',\n                                    columns='attacktype1_txt',aggfunc=np.sum,fill_value=0)\n            france.columns = [i.replace('\/','\/\\n').replace(' ','\\n') for i in france.columns]\n\n            sns.heatmap(france, annot=True,ax=ax[i,j],cmap=\"Blues\",linewidths=1)\n            ax[i,j].set_xticklabels(ax[i,j].get_xticklabels(), rotation = 30,color='b',fontdict={'fontsize':9})\n            ax[i,j].set_yticklabels(ax[i,j].get_yticklabels(), rotation = 0,color='b')\n            if j!= 1:\n                ax[i,j].set_ylabel(\"Target Attack Type 1\",fontdict={'fontweight':'bold'})\n            else:\n                ax[i,j].set_ylabel(\"\")\n\n            if i==1:\n                ax[i,j].set_xlabel(\"Attack Type 1\",fontdict={'fontweight':'bold'})\n            else:\n                ax[i,j].set_xlabel(\"\")\n            ax[i,j].set_title('Attack Type with Its Target in %s'%cities,fontdict = {'fontweight':'bold'})\n    fig.suptitle('Top 5 Cities with High Terrorism in France',y=0.93,fontsize=22,weight='bold')\n    plt.show()","4707cb04":"france_map = folium.Map(location=[48.8647, 2.3490], \n#                        tiles = \"France Terrorism\",\n                      zoom_start = 5)\n\n# Add data for heatmp \nf_heatmap = df_t[['latitude','longitude']]\nf_heatmap = df_t.dropna(axis=0, subset=['latitude','longitude'])\nf_heatmap = [[row['latitude'],row['longitude']] for index, row in f_heatmap.iterrows()]\nHeatMap(f_heatmap, radius=10).add_to(france_map)\n\n# Plot!\nfrance_map","5fc938e4":"df_g = df[df[\"country_txt\"] == \"Germany\"]\ndf_t.head()","2219e203":"plt.figure(figsize=(15,8))\ndf_g.city.value_counts().head(15).plot(kind=\"bar\")\nplt.xticks(rotation=40)","9d9a90c8":"### Sample of Terrorist attacks\nFirstly I was trying to make a quick and simple analysis for some location. But the code for example below was not working right:\n\nfor i in range(0,len(df)):\n\n    folium.Marker([df['Latitude'].iloc[i],df['Longitude'].iloc[i]]).add_to(m)\n    \nObviously there are some missing data permanently. For that reason I was adding a location manually.\nI will improve that later.\nAny suggestions are welcome.","a4a68bd4":"### Terrorist Activities around the World in Years","9dadc5d0":"### Resolution follows like this:","9046fcf8":"### Number of Terrorist Activities in France by Month","03f5070e":"### The most attacked are 5 cities:\n\nParis, Ajaccio, Bastia, Marseille, and Porto-Vecchio (except Unknown)","a56865c2":"### The most attacted Provinces","7204defc":"### We can see a sample of these top areas\/cities attacked:","b0707637":"### Let\u00b4s look at the Number of killed people in France","50e4cc8a":"#### There are a lot of missing data. \n\nBut I need some of them like latitude and longitude anyway for location purposes later.\nLat lon is not working properly in Folium if there are some mistakes\/NaN\u00b4s, We will see that then.","1543f620":"### Let\u00b4s look at the Number of Terrorist Activities in France","0e999df2":"### Let\u00b4s look at a country in a more colorful manner.","1aef9024":"### Weapon types are:","41b888da":"### What are the attack types?","39960844":"##### Then I found some inspiration in this kernel:\n\nGlobal Terrorism EDA in Indonesia\n\nhttps:\/\/www.kaggle.com\/arifkurniawan\/global-terrorism-eda-in-indonesia","ce236e97":"### We can look at some of the locations \n\nParis is on the first place:","396348a8":"### The most attacked provincies of the world","416953c1":"In this starting kernel you can see some examples of the Countries where the Terrorism has occured:\n\nfrom The Global Terrorism Database (GTD). And then there is a discovery of France attacks.","d318e65d":"### Count of Cities","fce340b3":"### I would like to have a look into some interesting countries in Europe, for example:\n\n## France Attacks","6d2defe3":"### Countries of the world which was attacked the most:","b4164447":"### Other Crimes:","5cff9e44":"### Another look will be on the most attacted Cities of France","c7b3a6a8":"### Number of wounded is below","53d7e5d7":"### The greatest Terrorist Groups","d9b74362":"### Let\u00b4s look at Germany","059c657c":"## Another example about terorism in the Europian Countries can be Germany:","21f9b8fd":"But more about that later,...","1f06f48d":"#### As we know from the data:\n\nThe Global Terrorism Database (GTD) is an open-source database including information on terrorist attacks around the world from 1970 through 2017. The GTD includes systematic data on domestic as well as international terrorist incidents that have occurred during this time period and now includes more than 180,000 attacks.\n\n##### I thought that the attacks are increasing in France too in the last several years . \n\n##### But I was very surprised that according the data this is not the true.","a8b46e8d":"### What is the most endangered group as a Target?"}}