{"cell_type":{"08b342d4":"code","d0f6b253":"code","8fae09ce":"code","0018df02":"code","8474f418":"code","fc8d94f4":"code","84d2ebd0":"code","79c54818":"code","3063555e":"code","b85ff35b":"code","44aded95":"code","8cbc261d":"code","1312ba9f":"code","ccba4b5e":"code","bc32afa6":"code","00f3a70f":"code","fcb83446":"code","be5dfe33":"code","6c99e138":"code","55b221a3":"code","c6186ffb":"code","a0c6264c":"markdown","fab02a43":"markdown","71d7f34f":"markdown","bad1e40a":"markdown"},"source":{"08b342d4":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","d0f6b253":"train_data = pd.read_csv(\"..\/input\/tabular-playground-series-oct-2021\/train.csv\")\ntest_data = pd.read_csv(\"..\/input\/tabular-playground-series-oct-2021\/test.csv\")","8fae09ce":"train_data.head()","0018df02":"train_data.shape","8474f418":"test_data.shape","fc8d94f4":"train_data.isna().sum()","84d2ebd0":"test_data.isna().sum()","79c54818":"train_data.info()","3063555e":"sns.countplot(data=train_data, x='target')","b85ff35b":"train_data = pd.read_csv(\"..\/input\/tabular-playground-series-oct-2021\/train.csv\", nrows=10000)","44aded95":"import gc\n#del unwanted_dataframe\ngarbage_coll = gc.collect()","8cbc261d":"del(garbage_coll)","1312ba9f":"X = train_data.drop('target', axis=1)\ny = train_data['target']","ccba4b5e":"from sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state = 0)\n\nmodel = DecisionTreeClassifier()\nmodel.fit(X_train, y_train)\npredictions = model.predict(X_test)","bc32afa6":"print(confusion_matrix(y_test, predictions))\nprint(classification_report(y_test, predictions))","00f3a70f":"from sklearn.ensemble import RandomForestClassifier\n\nrfc = RandomForestClassifier(n_estimators = 700)\nrfc.fit(X,y)\nrfc_pred = rfc.predict(test_data)","fcb83446":"X_train, X_test, y_train, y_test = train_test_split(X, y, random_state = 0)\nrfc.fit(X_train, y_train)\nrfc_pred2 = rfc.predict(X_test)","be5dfe33":"score = round(model.score(X_train, y_train)*100, 2)\nprint(\"the score of the model is\", score)","6c99e138":"print(confusion_matrix(y_test, rfc_pred2))\nprint(classification_report(y_test, rfc_pred2))","55b221a3":"output_values = pd.DataFrame({\"id\": test_data['id'], \"target\":rfc_pred})","c6186ffb":"output_values.to_csv(\"submission.csv\", index=False)","a0c6264c":"Random Forest CLassifier","fab02a43":"Missing values","71d7f34f":"Reading datasets","bad1e40a":"Machine Learning\n"}}