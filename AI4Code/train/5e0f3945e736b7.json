{"cell_type":{"1df727d2":"code","452c18fa":"code","51c7c35d":"code","f2c939f9":"code","f21f0953":"code","67ff578b":"code","7413d2ea":"code","4dc50da0":"code","de379735":"code","81056ff3":"code","d4582d0b":"code","7e2c6560":"code","ac752327":"code","a160b1f6":"code","64724528":"code","99b4cabf":"code","c64dd9a8":"code","88e6ddbf":"code","25aa3015":"code","08018e8c":"code","20601a2e":"code","9594ddad":"code","264524e4":"code","83494c03":"markdown","aa9a6446":"markdown","76498f77":"markdown","97044374":"markdown","53c17631":"markdown","77cff721":"markdown"},"source":{"1df727d2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport math\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","452c18fa":"myDataFrame=pd.read_csv( \"..\/input\/StudentsPerformance.csv\"\n)","51c7c35d":"myDataFrame.head(10)","f2c939f9":"myDataFrame.info()","f21f0953":"myDataFrame.columns=[each.split()[0]+ \"_\" +each.split()[1] if  (len(each.split())>1) else each for each in myDataFrame]\n","67ff578b":"myDataFrame.columns\n\n\n\n\n","7413d2ea":"filter1=myDataFrame.math_score>90\nfilter2=myDataFrame.reading_score>90\nfilter3=myDataFrame.writing_score>90\nsuccessfullStudentData=myDataFrame[filter1&filter2&filter3]\nsuccessfullStudentData\n","4dc50da0":"successfullStudentData.info()","de379735":"successfullStudentData.math_score.plot(kind=\"line\", alpha=0.5, color=\"red\" , label=\"math_score\")\nsuccessfullStudentData.writing_score.plot( alpha=0.5 , color=\"blue\" , label=\"writing_score\")\nsuccessfullStudentData.reading_score.plot(alpha=0.5, color=\"green\",label=\"reading_score\")\nplt.title(\"Line plot\")\nplt.xlabel(\"x axis\")\nplt.ylabel(\"y axis\")\nplt.show()\n\n\n\n\n\n\n\n","81056ff3":"successfullStudentData\n\nsuccessfullStudentData.math_score=successfullStudentData.math_score - 5\n\n        \n","d4582d0b":"successfullStudentData","7e2c6560":"def func1(x):\n    return x**2\nsuccessfullStudentData.math_score.apply(func1)\n","ac752327":"successfullStudentData.math_score=successfullStudentData.math_score**(1\/2.0)","a160b1f6":"successfullStudentData\n","64724528":"z=zip(successfullStudentData.math_score , successfullStudentData.reading_score, successfullStudentData.writing_score)\nz_list=list(z) # We can show all three scores in a list together by using zip function.\nprint(z_list)","99b4cabf":"successfullStudentData.reading_score\n\nnewReadingScore=[each-2 if each>95 else each+2  for each in successfullStudentData.reading_score]\nsuccessfullStudentData.reading_score=newReadingScore\nsuccessfullStudentData     #List compheresion example\n","c64dd9a8":"successfullStudentData.reading_score.plot(kind=\"hist\" , bins=50 , figsize=(8,8))\nplt.show()","88e6ddbf":"successfullStudentData.describe()","25aa3015":"print(successfullStudentData[\"parental_level\"].value_counts(dropna=False)) ## Check is there any NaN row on the data","08018e8c":"successfullStudentData.boxplot(column=\"writing_score\", by=\"test_preparation\")","20601a2e":"differentData={\"gender\" : \"female\",\"race\/ethnicity\" : \"group C\" , \"parental_level\" : \"bachelor's degree\",\n              \"lunch\" : \"free\/reduced\",  \"test_preparation\" : \"completed\", \"math_score\" : 9 ,\"reading_score\" : 95,\n              \"writing_score\" : 95}\ndf=pd.DataFrame([differentData], columns=differentData.keys()) # convert dictionary to data frame\n\ndata1=successfullStudentData.head()\ndata2=successfullStudentData.tail()\nconc_data_row=pd.concat([data1, data2, df] , axis=0 , ignore_index=True) #CONCATENATING THREE DATA\nconc_data_row\n","9594ddad":"successfullStudentData[\"math_score\"]=successfullStudentData[\"math_score\"].astype(\"int\")\nsuccessfullStudentData","264524e4":"assert  successfullStudentData['gender'].notnull().all() #returns nothing, we don't have a missing value","83494c03":"We can change the math_score data type (float to string)","aa9a6446":"We can substract an integer from whole column, for example lets subract 5 from  math_score","76498f77":"After first look, we can learn some basic information of data by using info method.","97044374":"Now, we can look the mean median and standart deviation of the data set by using describe method.\n","53c17631":"In the upper table we can see the squared version of the math_score. , also we can get squared root of the whole math_score column, it is shown below.","77cff721":"We can change the whole reading column by using list compherension. After playing with the value of reading_score we can see the distribution of reading by histogram plot."}}