{"cell_type":{"416ec5f4":"code","8e1c5f39":"code","55b4eee2":"code","7bc848a0":"code","82ab9dfb":"code","2e0c40e3":"code","f38ed2c0":"code","c7692a66":"code","622b624b":"code","20213456":"code","94e8b01e":"code","adddfce3":"code","284a614b":"code","2172ba41":"markdown","8ebd40bb":"markdown","4ca5ad39":"markdown","cf761878":"markdown","6ccfce6c":"markdown","98da2b82":"markdown","814341b6":"markdown","f2ddd0b6":"markdown","8cda609a":"markdown","73b81872":"markdown"},"source":{"416ec5f4":"import os\nimport pandas as pd\nimport numpy as np\nimport cv2\nimport plotly.express as px\nimport matplotlib.pyplot as plt","8e1c5f39":"train = pd.read_csv('..\/input\/happy-whale-and-dolphin\/train.csv')","55b4eee2":"species_count = train.groupby('species')['individual_id'].agg(species_count= 'count').reset_index()\nno_of_individuals = train.groupby('individual_id')['image'].agg(no_of_individuals='count').reset_index()\n\ntrain = pd.merge(train, species_count, on=['species'], how='inner')\ntrain = pd.merge(train, no_of_individuals, on=['individual_id'], how='inner')\n\ntrain.head()","7bc848a0":"px.bar(species_count.sort_values(by='species_count', ascending=False), x='species', y='species_count', color='species')","82ab9dfb":"px.pie(train, names='species')","2e0c40e3":"set(train[train['species']=='killer_whale']['individual_id'].unique()).intersection(set(train[train['species']=='kiler_whale']['individual_id'].unique()))","f38ed2c0":"\nset(train[train['species']=='bottlenose_dolphin']['individual_id'].unique()).intersection(set(train[train['species']=='bottlenose_dolpin']['individual_id'].unique()))","c7692a66":"px.bar(train.groupby('species')['individual_id'].nunique().reset_index().rename(columns={'individual_id':'no_of_individuals'}).sort_values(by='no_of_individuals', ascending=False), \n       x='species', y='no_of_individuals', color='species')","622b624b":"px.bar(train[train.species=='bottlenose_dolphin'], x='individual_id', y='no_of_individuals', title='bottlenose_dolphin distribution')","20213456":"px.bar(train[train.species=='kiler_whale'], x='individual_id', y='no_of_individuals', title='Killer whale distribution')","94e8b01e":"px.bar(species_count.sort_values(by='species_count', ascending=False), x='species', y='species_count', color='species')","adddfce3":"# function to display multiple images: Modified from (Thanks to https:\/\/www.kaggle.com\/ruchi798\/and-identification-eda-augmentation)\n\ndef path(group,group_type):\n    PATH = \"..\/input\/happy-whale-and-dolphin\/train_images\"\n    \n    #species\n    if group_type=='species':\n        z = train['image'][train['species']==group].values \n    \n    #ID\n    if group_type=='id':\n        z = train['image'][train['individual_id']==group].values \n   \n    image_names = []\n    for filename in z:\n        fullpath = os.path.join(PATH, filename)\n        image_names.append(fullpath)\n    return image_names\n\n\n\ndef display_multiple_imgs(group, group_type, rows, cols):\n    \n    image_paths = path(group, group_type)\n    image_paths = np.random.choice(image_paths, rows*cols)\n    \n    figure, ax = plt.subplots(nrows=rows,ncols=cols,figsize=(16,8))\n    plt.suptitle(group, fontsize=20)\n    for ind,image_path in enumerate(image_paths):\n        image = cv2.imread(image_path)\n        image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB) \n        image = cv2.resize(image, (1200, 800))\n        try:\n            ax.ravel()[ind].imshow(image)\n            ax.ravel()[ind].set_axis_off()\n        except:\n            continue;\n    plt.tight_layout()\n    plt.show()","284a614b":"for species in train['species'].unique():\n    print('\\n\\n')\n    display_multiple_imgs(species, 'species', 3, 3)","2172ba41":"### Will keep the notebook updated with new EDA","8ebd40bb":"### Observations\n1. Obviously there are some duplicates in the species name with different spellings\n    - bottlenose_dolphin and bottlenose_dolpin\n    - killer_whale and kiler_whale\n2. Almost half of the data comes from the three species bottlenose_dolphin, beluga and humpback_whale\n3. Blue whale, false_killer_whale and dusky_dolphin constitute almost 1\/5th of the entrire dataset\n4. Almost 15 species have less than 1% of the data, with frasiers_dolphin having the least amount of data (just 14 images)","4ca5ad39":"## Species Distribution\n\nLet's look at the distribution of the different speicies in the training set","cf761878":"#### Check if there are any individual_id's having different naming conventions\n","6ccfce6c":"## Individuals Distribution","98da2b82":"Looks like we do not have any overlap :)","814341b6":"Let's look at the distribution of different species","f2ddd0b6":"## Visualize some sample images of different species","8cda609a":"Let's plot the same using a pie chart","73b81872":"## Read the data"}}