{"cell_type":{"e7bf80b4":"code","1993fdc3":"code","ac00305c":"code","3e075872":"code","56b27a37":"code","ef78a48d":"code","cea7d6e6":"code","aeed5d86":"code","0a844dfe":"code","76a3231c":"code","c4cb9ea1":"code","d23ed4c0":"code","e1f3829c":"code","d489aa17":"code","55d2eafd":"code","042813a0":"code","318ce80c":"code","5e54df27":"code","06066dab":"code","d62eaf97":"code","251d1497":"code","1adf9f80":"code","a53cd21a":"code","0026eaf7":"code","8185863d":"code","3a22b573":"code","7cc2efaf":"code","1af478a6":"code","83f8e16b":"code","f81e4fca":"code","c8389979":"code","95e6a8bd":"code","baa0269e":"code","cc3e2a38":"code","a42ca0f3":"code","0601f474":"code","9a6a6089":"code","02fcc9e1":"code","5262590c":"code","c688f925":"code","478d096e":"code","d4735682":"code","f38bfdb4":"code","f54c61cb":"code","748376ec":"code","a78700e5":"code","156e6516":"code","38099190":"code","8bde5c3d":"code","29923812":"code","53a44357":"code","41f9878a":"code","d91c27e3":"code","ca66ca69":"code","9a8400d4":"code","f77c7ede":"code","b038119c":"markdown","9a74363a":"markdown","4fc2c5f1":"markdown","8b417326":"markdown","49638267":"markdown","c8ab2e8f":"markdown","e589a9c9":"markdown","279d927b":"markdown","a785ee22":"markdown","069ef242":"markdown","439a8a34":"markdown","586f8b05":"markdown","5587a838":"markdown","b0e49b38":"markdown","42b8a0d8":"markdown","dae4b3f0":"markdown","d48d6970":"markdown","c2cec64a":"markdown","7e6f54a1":"markdown","dddbcde3":"markdown","52e606aa":"markdown","06bb5dfc":"markdown","cc1aab28":"markdown","b0e4565a":"markdown","ea882106":"markdown","9e5698e6":"markdown","466cee8a":"markdown","16a756d8":"markdown","72104ba5":"markdown","f129a227":"markdown","0c1cf611":"markdown","c6895f6e":"markdown","c6ea8ac8":"markdown","d8e7f21a":"markdown","5b5e0feb":"markdown","cd63cf03":"markdown","c66029da":"markdown","28dc60e6":"markdown","ed40cab4":"markdown","275cdf5a":"markdown","94e68f98":"markdown","3636c65a":"markdown","bed3c101":"markdown","6abe5102":"markdown","738739fd":"markdown","343bb482":"markdown","813b729f":"markdown","a05542ef":"markdown","ed5ac49f":"markdown","f16f05c1":"markdown","6368d94e":"markdown","97b427ae":"markdown","3812e104":"markdown","029c6408":"markdown","e9ff4175":"markdown","58ba54b1":"markdown","244930e2":"markdown"},"source":{"e7bf80b4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1993fdc3":"import warnings\nwarnings.filterwarnings(\"ignore\")\n#\u5bfc\u5165\u6570\u636e\nx_train = pd.read_csv('\/kaggle\/input\/GiveMeSomeCredit\/cs-training.csv')\nx_test = pd.read_csv('\/kaggle\/input\/GiveMeSomeCredit\/cs-test.csv')\ncombine = [x_train, x_test]","ac00305c":"x_train.dtypes","3e075872":"[len(x_train), len(x_test)]","56b27a37":"x_train.isnull().mean()","ef78a48d":"x_test.isnull().mean()","cea7d6e6":"x_train[x_train['NumberOfDependents'].notnull()][['NumberOfDependents']].describe(percentiles=[.25,.60, .70, .80, .9, .99])","aeed5d86":"x_test[x_test['NumberOfDependents'].notnull()][['NumberOfDependents']].describe(percentiles=[.25,.60, .70, .80, .9, .99])","0a844dfe":"x_train[x_train['MonthlyIncome'].isnull()][['DebtRatio','NumberOfDependents']].describe(percentiles=[.25,.60, .70, .80, .9, .99])","76a3231c":"x_test[x_test['MonthlyIncome'].isnull()][['DebtRatio','NumberOfDependents']].describe(percentiles=[.25,.60, .70, .80, .9, .99])","c4cb9ea1":"[x_train[x_train['NumberOfDependents'].isnull()][x_train['MonthlyIncome'].notnull()]['DebtRatio'].count(),\n x_test[x_test['NumberOfDependents'].isnull()][x_test['MonthlyIncome'].notnull()]['DebtRatio'].count()]","d23ed4c0":"x_train[x_train['NumberOfDependents'].notnull()][x_train['MonthlyIncome'].isnull()][['NumberOfDependents']].median()","e1f3829c":"x_train[['DebtRatio']].describe(percentiles=[.25,.60, .70, .80, .9, .99])","d489aa17":"x_train[x_train['MonthlyIncome'].isnull()][['DebtRatio']].describe(percentiles=[.10,.25,.60, .70, .80, .9, .99])","55d2eafd":"x_train[x_train['MonthlyIncome'] < 5][['DebtRatio']].describe(percentiles=[.10,.25,.60, .70, .80, .9, .99])","042813a0":"x_train[x_train['MonthlyIncome'] < 5].groupby('MonthlyIncome').describe()","318ce80c":"x_test[x_test['MonthlyIncome'] < 5].groupby('MonthlyIncome').describe()","5e54df27":"float(x_train[x_train['MonthlyIncome'].isnull()][['DebtRatio']].median()) \/\/ float(x_train[x_train['MonthlyIncome'].notnull()][['DebtRatio']].median())","06066dab":"import matplotlib.pyplot as plt\nimport seaborn as sns","d62eaf97":"sns.countplot('SeriousDlqin2yrs' ,data = x_train)","251d1497":"x_train[['RevolvingUtilizationOfUnsecuredLines']].describe(percentiles=[.10,.25,.60, .70, .80, .9, .99])","1adf9f80":"[len(x_train[x_train['RevolvingUtilizationOfUnsecuredLines'] > 2]) \/ len(x_train),\n len(x_test[x_test['RevolvingUtilizationOfUnsecuredLines'] > 2]) \/ len(x_train)]","a53cd21a":"g = sns.FacetGrid(x_train, col='SeriousDlqin2yrs')\ng.map(plt.hist, 'RevolvingUtilizationOfUnsecuredLines', bins=20)","0026eaf7":"x_train[['age']].describe(percentiles=[.10,.25,.60, .70, .80, .9, .99])","8185863d":"plt.figure(figsize=[10, 8])\nplt.subplot(221)\nsns.boxplot(data=x_train['age'])\nplt.ylabel('age') \nplt.subplot(222)\nsns.histplot(x_train['age'])\nplt.xlabel('age')","3a22b573":"g = sns.FacetGrid(x_train, col='SeriousDlqin2yrs')\ng.map(plt.hist, 'age', bins=20)","7cc2efaf":"x_train[['NumberOfTime30-59DaysPastDueNotWorse','NumberOfTime60-89DaysPastDueNotWorse', 'NumberOfTimes90DaysLate']].describe(percentiles=[.10,.25,.60, .70, .80, .9, .99])","1af478a6":"x_test[['NumberOfTime30-59DaysPastDueNotWorse','NumberOfTime60-89DaysPastDueNotWorse', 'NumberOfTimes90DaysLate']].describe(percentiles=[.10,.25,.60, .70, .80, .9, .99])","83f8e16b":"[len(x_train[x_train['NumberOfTime30-59DaysPastDueNotWorse'] == 98]), \n len(x_train[x_train['NumberOfTime60-89DaysPastDueNotWorse'] == 98]),\n len(x_train[x_train['NumberOfTimes90DaysLate'] == 98]),\n len(x_train[x_train['NumberOfTime30-59DaysPastDueNotWorse'] == 98][x_train['NumberOfTimes90DaysLate'] == 98][x_train['NumberOfTime60-89DaysPastDueNotWorse'] == 98])]","f81e4fca":"[len(x_test[x_test['NumberOfTime30-59DaysPastDueNotWorse'] == 98]), \n len(x_test[x_test['NumberOfTime60-89DaysPastDueNotWorse'] == 98]),\n len(x_test[x_test['NumberOfTimes90DaysLate'] == 98]),\n len(x_test[x_test['NumberOfTime30-59DaysPastDueNotWorse'] == 98][x_test['NumberOfTimes90DaysLate'] == 98][x_test['NumberOfTime60-89DaysPastDueNotWorse'] == 98])]","c8389979":"x_train.groupby('NumberOfTime30-59DaysPastDueNotWorse')[['NumberOfTime30-59DaysPastDueNotWorse']].describe()","95e6a8bd":"for dataset in combine:\n    dataset.loc[dataset['MonthlyIncome'].isnull(),'DebtRatio'] = dataset.loc[dataset['MonthlyIncome'].isnull(),'DebtRatio'] \/ 3915;\n    dataset.loc[dataset['MonthlyIncome'] == 1,'DebtRatio'] = dataset.loc[dataset['MonthlyIncome'] == 1,'DebtRatio'] \/ 3915;\n    dataset.loc[dataset['MonthlyIncome'] == 0,'DebtRatio'] = dataset.loc[dataset['MonthlyIncome'] == 0,'DebtRatio'] \/ 3915;  ","baa0269e":"x_train[['DebtRatio']].describe(percentiles=[.10,.25,.60, .70, .80, .9, .99])","cc3e2a38":"plt.figure(figsize=[10, 8])\nplt.subplot(221)\nsns.boxplot(data=x_train['DebtRatio'])\nplt.ylabel('DebtRatio') ","a42ca0f3":"g = sns.FacetGrid(x_train, col='SeriousDlqin2yrs')\ng.map(plt.hist, 'DebtRatio', bins=20)","0601f474":"plt.figure(figsize=[10, 8])\nplt.subplot(221)\nsns.boxplot(data=x_train['MonthlyIncome'])\nplt.ylabel('MonthlyIncome') \nplt.subplot(222)\nsns.histplot(x_train['MonthlyIncome'])\nplt.xlabel('MonthlyIncome')","9a6a6089":"g = sns.FacetGrid(x_train, col='SeriousDlqin2yrs')\ng.map(plt.hist, 'MonthlyIncome', bins=20)","02fcc9e1":"plt.figure(figsize=[10, 8])\nplt.subplot(221)\nsns.boxplot(data=x_train['NumberOfOpenCreditLinesAndLoans'])\nplt.ylabel('NumberOfOpenCreditLinesAndLoans') \nplt.subplot(222)\nsns.histplot(x_train['NumberOfOpenCreditLinesAndLoans'])\nplt.xlabel('NumberOfOpenCreditLinesAndLoans')","5262590c":"g = sns.FacetGrid(x_train, col='SeriousDlqin2yrs')\ng.map(plt.hist, 'NumberOfOpenCreditLinesAndLoans', bins=20)","c688f925":"plt.figure(figsize=[10, 8])\nplt.subplot(221)\nsns.boxplot(data=x_train['NumberRealEstateLoansOrLines'])\nplt.ylabel('NumberRealEstateLoansOrLines') \nplt.subplot(222)\nsns.histplot(x_train['NumberRealEstateLoansOrLines'])\nplt.xlabel('NumberRealEstateLoansOrLines')","478d096e":"g = sns.FacetGrid(x_train, col='SeriousDlqin2yrs')\ng.map(plt.hist, 'NumberRealEstateLoansOrLines', bins=20)","d4735682":"#\u6570\u636e\u9884\u5904\u7406\nfor dataset in combine:\n    dataset.drop(columns = ['Unnamed: 0'], inplace = True)\n    dataset['RevolvingUtilizationOfUnsecuredLines'].mask(dataset['RevolvingUtilizationOfUnsecuredLines'] > 2, 2, inplace=True)\n    dataset['NumberOfTime60-89DaysPastDueNotWorse'].mask(dataset['NumberOfTime60-89DaysPastDueNotWorse'] > 95, 20, inplace=True)\n    dataset['NumberOfTime30-59DaysPastDueNotWorse'].mask(dataset['NumberOfTime30-59DaysPastDueNotWorse'] > 95, 20, inplace=True)\n    dataset['NumberOfTimes90DaysLate'].mask(dataset['NumberOfTimes90DaysLate'] > 95, 20, inplace=True)\n    dataset['90_sum'] = dataset['NumberOfTime30-59DaysPastDueNotWorse'] + dataset['NumberOfTimes90DaysLate'] + dataset['NumberOfTime60-89DaysPastDueNotWorse']\n    #\u8fd9\u4e09\u4e2a\u9884\u5904\u7406\u5df2\u7ecf\u505a\u8fc7\uff0c\u8fd9\u91cc\u4e0d\u518d\u505a\n#     dataset.loc[dataset['MonthlyIncome'].isnull(),'DebtRatio'] = dataset.loc[dataset['MonthlyIncome'].isnull(),'DebtRatio'] \/ 3915;\n#     dataset.loc[dataset['MonthlyIncome'] == 1,'DebtRatio'] = dataset.loc[dataset['MonthlyIncome'] == 1,'DebtRatio'] \/ 3915;\n#     dataset.loc[dataset['MonthlyIncome'] == 0,'DebtRatio'] = dataset.loc[dataset['MonthlyIncome'] == 0,'DebtRatio'] \/ 3915;\n    dataset['DebtRatio'].mask(dataset['DebtRatio'] > 400, 400, inplace=True)\n    dataset['MonthlyIncome'].replace(np.nan, 0, inplace=True)\n    dataset['MonthlyIncome'].replace(1, 0, inplace=True)\n    dataset['NumberOfDependents'].replace(np.nan, 0, inplace=True)\nx_train = x_train[x_train['age'] > 20]\nx_train = x_train[x_train['MonthlyIncome'] <= 1e6]\nx_train = x_train[x_train['NumberRealEstateLoansOrLines'] <= 50]","f38bfdb4":"x_train.describe(percentiles=[.25,.60, .70, .80, .9, .99])","f54c61cb":"x_test.describe(percentiles=[.25,.60, .70, .80, .9, .99])","748376ec":"#\u5212\u5206\u6570\u636e\u96c6\u7528\u4e8e\u4ea4\u53c9\u9a8c\u8bc1\nfrom sklearn.model_selection import train_test_split\nresult = x_train['SeriousDlqin2yrs' ]\ndata = x_train.drop(['SeriousDlqin2yrs'], axis = 1)\ntrain_data, test_data, train_result, test_result = train_test_split(data, result, test_size = 0.2, stratify = result, random_state=33)","a78700e5":"from sklearn.ensemble import AdaBoostClassifier\nfrom lightgbm import LGBMClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import svm\nfrom sklearn.model_selection import StratifiedKFold\nmodels = []\nscores = []\nmodels.append(\"AdaBoost\")\nprint(\"AdaBoost:\")\nmodel = AdaBoostClassifier()\nfrom sklearn.model_selection import cross_val_score\nresult = cross_val_score(model,train_data,train_result,scoring='roc_auc',cv=StratifiedKFold(n_splits=10))\nprint('mean score:', result.mean())\nscores.append(result.mean())\n\nmodels.append(\"LGBM\")\nprint(\"LGBM:\")\nmodel = LGBMClassifier()\nresult = cross_val_score(model,train_data,train_result,scoring='roc_auc',cv=StratifiedKFold(n_splits=10))\nprint('mean score:', result.mean())\nscores.append(result.mean())\n\nmodels.append(\"XGBoost\")\nprint(\"XGBoost:\")\nmodel = XGBClassifier(eval_metric = 'auc')\nresult = cross_val_score(model,train_data,train_result,scoring='roc_auc',cv=StratifiedKFold(n_splits=10))\nprint('mean score:', result.mean())\nscores.append(result.mean())\n\nmodels.append(\"GBDT\")\nprint(\"GBDT:\")\nmodel = GradientBoostingClassifier()\nresult = cross_val_score(model,train_data,train_result,scoring='roc_auc',cv=StratifiedKFold(n_splits=10))\nprint('mean score:', result.mean())\nscores.append(result.mean())\n\nmodels.append(\"RandomForest\")\nprint(\"RandomForest:\")\nmodel = RandomForestClassifier()\nresult = cross_val_score(model,train_data,train_result,scoring='roc_auc',cv=StratifiedKFold(n_splits=10))\nprint('mean score:', result.mean())\nscores.append(result.mean())\n\nmodels.append(\"SVM\")\nprint(\"SVM:\")\nmodel = svm.SVC()\nresult = cross_val_score(model,train_data,train_result,scoring='roc_auc',cv=StratifiedKFold(n_splits=10))\nprint('mean score:', result.mean())\nscores.append(result.mean())\n","156e6516":"model = LGBMClassifier()\nmodel.fit(train_data, train_result)\npredict_proba = model.predict_proba(test_data)[:,1]\nfrom sklearn.metrics import roc_auc_score\nroc_auc_score(test_result, predict_proba)","38099190":"# from sklearn.model_selection import GridSearchCV\n# param_grid = {\n#     'n_estimators':range(100,400,50),\n#     'learning_rate': [0.025,0.05,0.075]\n# }\n# estimator = LGBMClassifier()\n# gridsearch = GridSearchCV(param_grid = param_grid, estimator = estimator, scoring='roc_auc',cv=StratifiedKFold(n_splits=10), verbose=0)\n# gridsearch.fit(train_data,train_result)\n# gridsearch.best_params_","8bde5c3d":"# param_grid = {\n#     'n_estimators':range(100,400,50),\n#     'learning_rate': [0.025,0.05,0.075]\n# }\n# estimator = LGBMClassifier()\n# gridsearch = GridSearchCV(param_grid = param_grid, estimator = estimator, scoring='roc_auc',cv=StratifiedKFold(n_splits=10), verbose=0)\n# gridsearch.fit(train_data,train_result)\n# gridsearch.best_params_","29923812":"# param_grid = {\n#     'max_depth':range(6,10,1),\n#     'num_leaves': range(15,25,1)\n# }\n# estimator = LGBMClassifier(n_estimators = 290, learning_rate = 0.025)\n# gridsearch = GridSearchCV(param_grid = param_grid,estimator = estimator, scoring='roc_auc',\n#                           cv=StratifiedKFold(n_splits=10), verbose=0)\n# gridsearch.fit(train_data,train_result)\n# gridsearch.best_params_","53a44357":"# param_grid = {\n#     'max_depth':range(10,12,1),\n#     'num_leaves': range(25,35,1)\n# }\n# estimator = LGBMClassifier(n_estimators = 290, learning_rate = 0.025)\n# gridsearch = GridSearchCV(param_grid = param_grid,estimator = estimator, scoring='roc_auc',\n#                           cv=StratifiedKFold(n_splits=10), verbose=0)\n# gridsearch.fit(train_data,train_result)\n# gridsearch.best_params_","41f9878a":"# param_grid = {\n#     'feature_fraction': [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9],\n#     'bagging_fraction' : [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9]\n# }\n# estimator = LGBMClassifier(n_estimators = 290, learning_rate = 0.025,max_depth = 6, num_leaves = 22)\n# gridsearch = GridSearchCV(param_grid = param_grid,estimator = estimator, scoring='roc_auc',\n#                           cv=StratifiedKFold(n_splits=10), verbose=0)\n# gridsearch.fit(train_data,train_result)\n# gridsearch.best_params_","d91c27e3":"model = LGBMClassifier(n_estimators = 290, learning_rate = 0.025,max_depth = 6, num_leaves = 22)\nmodel.fit(train_data, train_result)\npredict_proba = model.predict_proba(test_data)[:,1]\nroc_auc_score(test_result, predict_proba)","ca66ca69":"from sklearn.metrics import roc_curve\nfpr, tpr, thresholds = roc_curve(test_result, predict_proba)\nplt.plot(fpr, tpr)\nplt.plot(fpr, fpr, linestyle = '--')\nplt.xlabel('FPR')\nplt.ylabel('TPR')\nplt.title('ROC')\nplt.show()","9a8400d4":"x_test = x_test.drop(['SeriousDlqin2yrs'],axis=1)\ny_test = model.predict_proba(x_test)[:,1]\nids = np.arange(1,101504)\nres = pd.DataFrame({'Id': ids, 'Probability': y_test})\nres.to_csv(\"submission.csv\", index=False)","f77c7ede":"res","b038119c":"\u8bad\u7ec3\u96c6\u5171\u6709150000\u6761\u6570\u636e\uff0c\u6d4b\u8bd5\u96c6\u5171\u6709101503\u6761\u6570\u636e","9a74363a":"## 5. \u6a21\u578b\u9009\u62e9","4fc2c5f1":"### 6.2 \u8c03\u53c2","8b417326":"\u7531\u4ee5\u4e0a\u7ed3\u679c\u53ef\u77e5\uff0c\u5728\u9884\u5904\u7406\u4e2d\u5c06\u75280\u586b\u5145NumberOfDependents\u7a7a\u503c\u5373\u53ef\n  \n\n\u63a5\u4e0b\u6765\u63a2\u7d22MonthlyIncome\u548cDebtRatio\u7684\u5173\u7cfb","49638267":"\u4e0a\u8868\u5c55\u793a\u4e86MonthlyIncome < 5 \u7684\u7528\u6237DebtRatio\u7684\u5206\u5e03\uff0c\u4e0eMonthlyIncome\u4e3a\u7a7a\u7684\u5206\u5e03\u5f88\u76f8\u8fd1\uff0c\u8fd9\u4e5f\u9a8c\u8bc1\u4e86\u731c\u60f3\u3002 \n  \n\u63a5\u4e0b\u6765\u770b\u770bMonthlyIncome\u8f83\u5c0f\u7684\u53d6\u503c","c8ab2e8f":"### 6.1 \u5efa\u6a21\u6c42\u89e3","e589a9c9":"* \u901a\u8fc7\u4e0a\u8868\u53d1\u73b0\uff0c\u8bad\u7ec3\u96c6\u5171\u670929731\u6761\u6570\u636eMonthlyIncome\u4e3a\u7a7a\uff0c\u6d4b\u8bd5\u96c6\u5171\u670920103\u6761\u7a7a\u3002  \n* Debtratio\u6570\u636e\u7531\u660e\u663e\u7684\u79bb\u7fa4\u70b9\uff0c\u9700\u8981\u5728\u4e4b\u540e\u7684\u5904\u7406\u4e2d\u53bb\u9664\u3002  \n* \u7ec6\u5fc3\u53ef\u4ee5\u53d1\u73b0\uff0c\u8bad\u7ec3\u96c6\u6d4b\u8bd5\u96c6\u4e2d\u5728MonthlyIncome\u4e3a\u7a7a\u7684\u6570\u636e\u4e2dNumberOfDependents\u4e3a\u7a7a\u7684\u6570\u636e\u4e5f\u6070\u597d\u5206\u522b\u67093924\u548c2626\u6761\u3002\u8fd9\u8bf4\u660e\u5f88\u53ef\u80fdNumberOfDependents\u4e3a\u7a7a\u7684\u7528\u6237MonthlyIncome\u5747\u4e3a\u7a7a\uff0c\u4e0b\u9762\u9a8c\u8bc1\u4e00\u4e0b","279d927b":"#### NumberRealEstateLoansOrLines","a785ee22":"\u57283.1\u5c0f\u8282\u4e2d\u5df2\u5c06DebtRatio\u8fdb\u884c\u4e86\u4e00\u5b9a\u7684\u9884\u5904\u7406\uff0c\u8fd9\u91cc\u5148\u5199\u51fa\u9884\u5904\u7406\u7684\u4ee3\u7801","069ef242":"## 4.\u6570\u636e\u9884\u5904\u7406","439a8a34":"## 3.\u6570\u636e\u63a2\u7d22","586f8b05":"#### NumberOfTime30-59DaysPastDueNotWorse \/ NumberOfTime60-89DaysPastDueNotWorse \/ NumberOfTimes90DaysLate","5587a838":"\u53d1\u73b0\u8fd9\u4e09\u4e2a\u7279\u5f81\u7b49\u4e8e98\u7684\u6570\u76ee\u6070\u597d\u90fd\u662f2\u540c\u4e00\u4e2a\u6570\uff0c\u5e76\u4e14\u4e09\u4e2a\u7279\u5f81\u540c\u65f6\u7b49\u4e8e98\u7684\u4e5f\u662f\u540c\u4e00\u4e2a\u6570\uff0c\u8bf4\u660e\u6709\u6570\u636e\u4e09\u4e2a\u7279\u5f81\u90fd\u662f98.\u6d4b\u8bd5\u96c6\u4e5f\u6709\u7c7b\u4f3c\u7684\u7279\u6027","b0e49b38":"* \u5f97\u5230AUC\u5f97\u5206\uff0c\u8f83\u4f18\u5316\u524d\u63d0\u9ad80.23%,\u4e0b\u9762\u7ed8\u5236ROC\u66f2\u7ebf*","42b8a0d8":"## 2. \u5bfc\u5165\u6570\u636e","dae4b3f0":"\u6700\u540e\uff0c\u4e3a\u4e86\u907f\u514d\u8fc7\u62df\u5408\uff0c\u5bf9feature_fraction\u548cbagging_fraction\u8fdb\u884c\u8c03\u53c2","d48d6970":"\u53d1\u73b0NumberOfTime30-59DaysPastDueNotWorse\u7684\u503c\u76f4\u63a5\u4ece13\u8df3\u523096\uff0c\u7ed3\u5408\u4e0a\u9762\u7684\u7ed3\u8bba\uff0c96\u548c98\u53ef\u80fd\u6709\u7279\u6b8a\u7684\u610f\u4e49\uff0c\u5728\u9884\u5904\u7406\u7684\u65f6\u5019\u4e0d\u80fd\u76f4\u63a5\u5220\u9664\uff0c\u53ef\u4ee5\u5c0696\u548c98\u8f6c\u4e3a\u6bd413\u5927\u768420\u4ece\u800c\u4f7f\u6570\u636e\u66f4\u52a0\u5e73\u7a33\u3002","c2cec64a":"\u5927\u90e8\u5206\u6570\u636eRevolvingUtilizationOfUnsecuredLines\u5206\u5e03\u8f83\u4e3a\u5747\u5300\uff0c\u4f46\u5b58\u5728\u79bb\u7fa4\u70b9","7e6f54a1":"\u53d1\u73b0MonthlyIncome\u540c\u6837\u5b58\u5728\u79bb\u7fa4\u70b9\uff0c\u53ef\u5c06\u5927\u4e8e1e6\u7684\u6570\u636e\u5220\u9664","dddbcde3":"\u53d1\u73b0DebtRatio\u5b58\u5728\u79bb\u7fa4\u70b9\uff0c\u53ef\u5c06DebtRatio\u5927\u4e8e400\u7684\u70b9\u8f6c\u5316\u4e3a400","52e606aa":"#### NumberOfDependents","06bb5dfc":"### 3.1 \u7a7a\u503c\u586b\u5145","cc1aab28":"\u4e3a\u4e86\u4fdd\u8bc1\u5bf9\u540e\u7eed\u8c03\u4f18\u7684\u7a33\u5b9a\u6027\uff0c\u9996\u5148\u5bf9boosting\u5f31\u5b66\u4e60\u5668\u7684\u4e2a\u6570n_estimators\u548c\u5b66\u4e60\u7387learning_rating\u8fdb\u884c\u8c03\u4f18\uff0c\u4e24\u4e2a\u53c2\u6570\u4e00\u8d77\uff0c\u5229\u7528sklearn\u4e2d\u7684GridSearchCV\u51fd\u6570\u8fdb\u884c\u7f51\u7edc\u641c\u7d22\u6cd5\u8c03\u4f18","b0e4565a":"\u53ef\u53d1\u73b0MonthlyIncome\u53d6\u503c\u4e3a1\u62160\u7684\u8f83\u591a\uff0c \u4ed6\u4eec\u90fd\u5177\u6709\u76f8\u540c\u7684\u7279\u5f81\uff1aDebtRatio\u5f88\u5927\uff0c\u8fd9\u4e5f\u51b3\u5b9a\u4ed6\u4eec\u662f\u4e00\u7c7b\u7528\u6237\u3002\n  \n\u5728\u5bf9MonthlyIncome\u9884\u5904\u7406\u65f6\uff0c\u53ef\u4ee5\u5c06\u7a7a\u503c\u548c1\u90fd\u8f6c\u4e3a0\uff0c\u8bf4\u660e\u4ed6\u4eec\u662f\u4e00\u7c7b\u7528\u6237\u3002  \n\u5bf9\u4e8e\u8fd9\u4e00\u7c7b\u7528\u6237(MonthlyIncome\u4e3a\u7a7a\uff0c0 \u6216 1)\uff0c\u7531\u4e8e\u5176DebtRatio\u662f\u6709\u4e00\u4e2a\u5f88\u5c0f\u7684\u5206\u6bcd\u7b97\u51fa\u7684\u5927\u503c\uff0c\u53ef\u4ee5\u5c06\u5176\u5168\u90e8\u9664\u4ee5\u4e00\u4e2a\u56e0\u5b50\u6765\u5e73\u7f13\u6570\u636e\u3002 \u8fd9\u4e2a\u56e0\u5b50\u53ef\u4ee5\u662f: \u8fd9\u4e00\u7c7b\u7528\u6237(MonthlyIncome\u4e3a\u7a7a\uff0c0 \u6216 1)\u7684DebtRatio\u4e2d\u4f4d\u6570 \/ \u5176\u4ed6\u7528\u6237DebtRatio\u4e2d\u4f4d\u6570\uff0c\u4e0b\u9762\u8ba1\u7b97\u8fd9\u4e00\u4e2d\u4f4d\u6570","ea882106":"\u7531\u4e8e\u8be5\u95ee\u9898\u662f\u4e00\u4e2a\u4e8c\u5206\u7c7b\u95ee\u9898\u4e14\u6807\u7b7e\u5206\u5e03\u4e0d\u5747\uff0c\u6240\u4ee5\u5229\u7528ROC\u66f2\u7ebf\u548cAUC\u8bc4\u4f30\u6a21\u578b\u3002\u540c\u65f6\u5229\u7528kfold\u4ea4\u53c9\u9a8c\u8bc1\u65b9\u6cd5\uff0ck\u9009\u62e910\u3002\u9009\u62e9\u4e00\u4e9b\u8bc4\u8bba\u4e2d\u8f83\u591a\u7684boosting\u65b9\u6cd5\uff0c\u540c\u65f6\u5bf9\u6bd4\u4e00\u4e9bbagging\u7b97\u6cd5\u548c\u7ecf\u5178\u7684\u4e8c\u5206\u7c7b\u7b97\u6cd5\uff0c\u5305\u62ec\u903b\u8f91\u56de\u5f52\u548c\u652f\u6301\u5411\u91cf\u673a\u3002\u4e0b\u9762\u662f\u5bf9\u6bd4\u7ed3\u679c","9e5698e6":"## 7. \u63d0\u4ea4","466cee8a":"#### age","16a756d8":"\u7531\u4e8eNumberOfTime60-89DaysPastDueNotWorse\u3001NumberOfTime30-59DaysPastDueNotWorse\u548cNumberOfTimes90DaysLate\u4e09\u4e2a\u7279\u5f81\u5171\u540c\u8bf4\u660e\u7528\u6237\u903e\u671f\u6b21\u6570\uff0c\u53ef\u4ee5\u5c06\u4e09\u4e2a\u6570\u76f8\u52a0\u5f97\u5230\u65b0\u7279\u6027\uff1a\u7528\u6237\u4e24\u5e74\u5185\u903e\u671f\u8d85\u8fc730\u5929\u7684\u603b\u6b21\u6570\u3002\u5728\u9884\u5904\u7406\u4e2d\u65b0\u589e\u7279\u5f81'90_num'\u4e3a\u8fd9\u4e09\u4e2a\u7279\u5f81\u76f8\u52a0\u7684\u7ed3\u679c\u3002","72104ba5":"\u7ecf\u8fc7\u9884\u5904\u7406\uff0c\u5404\u4e2a\u7279\u5f81\u90fd\u53d8\u5f97\u6bd4\u8f83\u5747\u5300\u4e14\u5e73\u6ed1\uff0c\u63a5\u4e0b\u6765\u51c6\u5907\u9009\u62e9\u6a21\u578b","f129a227":"#### DebtRatio","0c1cf611":"\u53d1\u73b0\u6570\u636e\u5171\u670911\u5217\u7ec4\u6210\uff0c \u5176\u4e2d\n1. SeriousDlqin2yrs : \u9884\u6d4b\u7684\u6807\u7b7e\uff0c\u7528\u6237\u4e24\u5e74\u540e\u662f\u5426\u4f1a\u7ecf\u6d4e\u56f0\u96be Y\/N\n2. RevolvingUtilizationOfUnsecuredLines\uff1a \u4fe1\u7528\u5361\u5269\u4f59\u989d\u5ea6\u4e0e\u53ef\u7528\u989d\u5ea6\u7684\u6bd4\u503c float64\n3. age \u5e74\u9f84 int64\n4. NumberOfTime30-59DaysPastDueNotWorse \u8d37\u6b3e\u903e\u671f30-59\u5929\u7684\u6b21\u6570 int64\n5. DebtRatio \u6708\u652f\u51fa\u4e0e\u6536\u5165\u7684\u6bd4\u503c float64\n6. MonthlyIncome \u6708\u6536\u5165 float64\n7. NumberOfOpenCreditLinesAndLoans \u8d37\u6b3e\u6570\u91cf int64\n8. NumberOfTimes90DaysLate \u8d37\u6b3e\u903e\u671f90\u5929\u7684\u6b21\u6570 int64\n9. NumberRealEstateLoansOrLines \u4e0d\u52a8\u4ea7\u8d37\u6b3e\u7684\u6570\u91cf int64\n10. NumberOfTime60-89DaysPastDueNotWorse \u8d37\u6b3e\u903e\u671f60-89\u5929\u7684\u6b21\u6570 int64\n11. NumberOfDependents \u5bb6\u5c5e\u7684\u6570\u91cf\n\n* \u4e0d\u96be\u53d1\u73b0\uff0c\u9664SeriousDlqin2yrs\u662f\u5206\u7c7b\u7279\u5f81\u5916\uff0c\u5176\u4f59\u5747\u4e3a\u6570\u503c\u578b\u7279\u5f81\u3002\n* \u4ece\u547d\u540d\u4e0a\u89c2\u5bdf\uff0cNumberOfTime30-59DaysPastDueNotWorse\uff0c NumberOfTime60-89DaysPastDueNotWorse \u548c NumberOfTimes90DaysLate \u662f\u540c\u4e00\u7c7b\u7279\u5f81\uff0c\u53cd\u5e94\u4e86\u7528\u6237\u5728\u903e\u7ea6\u7279\u5b9a\u5929\u6570\u7684\u6b21\u6570\uff0c\u53ef\u4ee5\u5728\u9884\u5904\u7406\u65f6\u91c7\u53d6\u76f8\u4f3c\u7b56\u7565\u3002\n* DebtRatio \u548c MonthlyIncome \u6709\u76f4\u63a5\u5173\u7cfb\uff0c\u5176\u4e2dDebtRatio\u662f\u7531MonthlyIncome\u8ba1\u7b97\u5f97\u51fa","c6895f6e":"\u6807\u7b7eRevolvingUtilizationOfUnsecuredLines\u4e0b\u7684\u5206\u5e03\u57fa\u672c\u7b26\u540814:1\uff0c\u6240\u4ee5RevolvingUtilizationOfUnsecuredLines\u5bf9\u6807\u7b7e\u4e0d\u8d77\u51b3\u5b9a\u6027\u4f5c\u7528\uff0c\u4e4b\u540e\u7684\u7279\u5f81\u82e5\u5bf9\u6807\u7b7e\u4e0d\u8d77\u51b3\u5b9a\u4f5c\u7528\u5c06\u4e0d\u518d\u8d58\u8ff0","c6ea8ac8":"\u901a\u8fc7\u89c2\u5bdf\u8fd9\u4e09\u4e2a\u7279\u5f81\u7684\u5206\u5e03\uff0c\u53d1\u73b0\u65e0\u8bba\u5728\u8bad\u7ec3\u96c6\u8fd8\u662f\u6d4b\u8bd5\u96c6\uff0c99%\u7684\u6570\u636e\u90fd\u5c0f\u4e8e5\uff0c\u4f46\u6700\u5927\u503c\u90fd\u662f98\u3002\u4e8e\u662f\u8003\u8651\u662f\u5426\u6709\u4e9b\u6570\u636e\u884c\u8fd9\u4e09\u4e2a\u7279\u5f81\u90fd\u662f98\u3002","d8e7f21a":"## 6. \u8c03\u53c2\u3001\u5efa\u6a21\u53ca\u6c42\u89e3","5b5e0feb":"#### SeriousDlqin2yrs","cd63cf03":"## 1.\u5b9a\u4e49\u95ee\u9898","c66029da":"\u53f6\u8282\u70b9\u6570\u91cf\u63a5\u4e0b\u6765\u5bf9LGBM\u4e2d\u51b3\u7b56\u6811\u6700\u5927\u6df1\u5ea6max_depth\u548c\u53f6\u5b50\u8282\u70b9\u6570\u91cfnum_leaves\u8fdb\u884c\u8c03\u4f18","28dc60e6":"\u6807\u7b7e\u7684\u5206\u5e03\u7ea6\u4e3a14:1\uff0c\u5927\u90e8\u5206\u7528\u6237\u5728\u672a\u6765\u4e24\u5e74\u4e0d\u4f1a\u51fa\u73b0\u7ecf\u6d4e\u56f0\u96be","ed40cab4":"### 3.2 \u9010\u4e2a\u5b57\u6bb5\u53ef\u89c6\u5316\u5206\u6790","275cdf5a":"\u7531\u4e8e\u6d4b\u8bd5\u53ca\u4e5f\u5b58\u5728RevolvingUtilizationOfUnsecuredLines\u8f83\u5927\u7684\u6570\u636e\u9879\uff0c\u540c\u65f6\u53d1\u73b0\u4ec5\u67090.1% - 0.2%\u7684\u6570\u636eRevolvingUtilizationOfUnsecuredLines\u5927\u4e8e2\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u5927\u4e8e2\u7684RevolvingUtilizationOfUnsecuredLines\u5168\u90e8\u8f6c\u4e3a2\n  \n\u4e0b\u9762\u63a2\u7d22RevolvingUtilizationOfUnsecuredLines\u4e0e\u6807\u7b7e\u7684\u5173\u7cfb","94e68f98":"NumberOfOpenCreditLinesAndLoans\u7684\u5206\u5e03\u5f88\u5747\u5300\uff0c\u4e0d\u7528\u8fdb\u4e00\u6b65\u5904\u7406","3636c65a":"\u5e74\u9f84\u6570\u636e\u5206\u5e03\u5f88\u5747\u5300\uff0c\u7c7b\u4f3c\u4e8e\u6b63\u6001\u5206\u5e03\u3002\u4f46\u662f\u7531\u4e8e\u5e74\u9f84\u592a\u5c0f\u7684\u7528\u6237\u65e0\u6cd5\u62e5\u6709\u94f6\u884c\u8d26\u6237\uff0c\u5728\u9884\u5904\u7406\u4e2d\u5c06\u6570\u636e\u96c6\u5e74\u9f84\u5c0f\u4e8e18\u5c81\u7684\u6570\u636e\u5220\u9664","bed3c101":"\u4ece\u8f83\u4e0a\u7684\u8868\u683c\u53d1\u73b0\uff0c\u5bf9\u4e8eDebtRatio\uff0c\u5927\u90e8\u5206\u6570\u636e\u5206\u5e03\u57280-1\uff0c\u53ea\u6709\u5c11\u4e8e30%\u7684\u6570\u636e\u5927\u4e8e1\uff0c\u8fd9\u4e5f\u7b26\u5408\u5e38\u7406\u3002\u4f46\u7531\u7b2c\u4e8c\u5f20\u8868\u53ef\u5f97\u51fa\u76f8\u53cd\u7684\u7ed3\u8bba\uff1a\u5927\u591a\u6570MonthlyIncome\u4e3a\u7a7a\u7684\u90fd\u6709\u8f83\u9ad8\u7684\u8d1f\u503a\u7387\u3002\u8003\u8651\u5230\u8d1f\u503a\u7387\u662f\u7531MonthlyIncome\u8ba1\u7b97\u5f97\u51fa\uff0c\u53ef\u731c\u60f3\uff1a\u5f53MonthlyIncome\u4e3a\u7a7a\u65f6\uff0c\u8d1f\u503a\u7387\u7531\u4e00\u4e2a\u5f88\u5c0f\u7684\u5206\u6bcd\u8ba1\u7b97\u5f97\u51fa\uff0c\u6240\u4ee5\u5f97\u51fa\u8f83\u5927\u7684\u7ed3\u679c\u3002\u5e26\u7740\u8fd9\u4e00\u731c\u60f3\uff0c\u901a\u8fc7MonthlyIncome\u672c\u8eab\u5c31\u5f88\u5c0f\u7684\u6570\u636e\u8fdb\u884c\u9a8c\u8bc1\u3002","6abe5102":"\u6839\u636e\u4e0a\u4e00\u8282\u5f97\u51fa\u7684\u7ed3\u8bba\u8fdb\u884c\u6570\u636e\u7684\u9884\u5904\u7406","738739fd":"\u7531\u4e0a\u8868\u53ef\u77e5\uff0c\u8bad\u7ec3\u96c6\u5171\u67093924\u6761\u6570\u636e\u7f3a\u5931NumberOfDependents\u7279\u5f81\uff0c\u6d4b\u8bd5\u96c6\u67092626\u6761\u7f3a\u5931\u3002\u672a\u7f3a\u5931\u7684\u6570\u636e90%\u5206\u5e03\u5728\u533a\u95f4 0-2\u3002\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u6700\u5927\u503c\u4e3a20\u548c43  \n\u518d\u89c2\u5bdf\u7279\u5f81MonthlyIncome,\u5206\u6790MonthlyIncome\u4e3a\u7a7a\u7684\u6570\u636e\u7684\u516c\u5171\u7279\u5f81\u3002\u7531\u4e8eMonthlyIncome\u548cDebtRatio\u76f4\u63a5\u76f8\u5173\uff0c\u8fd9\u91cc\u7ed3\u5408DebtRatio \u548c NumberOfDependents\u4e00\u8d77\u89c2\u5bdf","343bb482":"\u53d1\u73b0\u5728\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u4e2d\u4ec5\u6709\u4e24\u4e2a\u7279\u5f81 MonthlyIncome \u548c NumberOfDependents\u5b58\u5728\u7a7a\u503c\uff08\u6807\u7b7eSeriousDlqin2yrs\u9664\u5916\uff09  \n\u7531\u4e8e\u7a7a\u6570\u636e\u5360\u6bd4\u8f83\u5927\uff0c\u4e0d\u80fd\u76f4\u63a5\u5220\u9664  \n\u9996\u5148\u67e5\u770b\u975e\u7a7a\u7684NumberOfDependents\u7684\u5206\u5e03\u60c5\u51b5\u3002","813b729f":"#### RevolvingUtilizationOfUnsecuredLines","a05542ef":"\u57283.1\u5df2\u5bf9\u8be5\u7279\u5f81\u8fdb\u884c\u5206\u6790","ed5ac49f":"\u4ee5\u4e0a\u4ee3\u7801\u9a8c\u8bc1\u4e86\u8fd9\u4e00\u7ed3\u8bba\uff1a*NumberOfDependents\u4e3a\u7a7a\u7684\u7528\u6237MonthlyIncome\u5747\u4e3a\u7a7a*\u3002\u901a\u8fc7\u524d\u6587\u5f97\u51fa\u7684\u8868\u683c\u53ef\u4ee5\u770b\u51faMonthlyIncome\u4e3a\u7a7a\u7684\u4e0d\u4e00\u5b9aNumberOfDependents\u4e3a\u7a7a\u3002\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7MonthlyIncome\u4e3a\u7a7a\u800cNumberOfDependents\u4e0d\u7a7a\u7684NumberOfDependents\u4e2d\u4f4d\u6570\u6765\u586b\u5145\u7a7a\u786e\u503c\uff0c\u4e0b\u9762\u8ba1\u7b97\u8fd9\u4e00\u4e2d\u4f4d\u6570\u3002","f16f05c1":"### 6.1 \u91c7\u7528\u9ed8\u8ba4\u53c2\u6570","6368d94e":"#### NumberOfOpenCreditLinesAndLoans","97b427ae":"### 3.3 \u65b0\u7279\u5f81\u6dfb\u52a0","3812e104":"\u5728\u9884\u5904\u7406\u4e2d\uff0c\u5c06\u8bad\u7ec3\u96c6\u548c\u6570\u636e\u96c6\u4e2dMonthlyIncome\u4e3a\u7a7a\u30010\u62161\u7684DebtRatio\u5168\u90e8\u9664\u4ee53915","029c6408":"#### MonthlyIncome","e9ff4175":"Banks play a crucial role in market economies. They decide who can get finance and on what terms and can make or break investment decisions. For markets and society to function, individuals and companies need access to credit. \nCredit scoring algorithms, which make a guess at the probability of default, are the method banks use to determine whether or not a loan should be granted. This competition requires participants to improve on the state of the art in credit scoring, by **predicting the probability that somebody will experience financial distress in the next two years**.\nThe goal of this competition is to **build a model that borrowers can use to help make the best financial decisions**.\nHistorical data are provided on 250,000 borrowers and the prize pool is 5,000 (3,000 for first, 1,500 for second and 500 for third).\n\n\u9898\u76ee\u8981\u6c42\u5efa\u7acb\u4e00\u4e2a\u6a21\u578b\uff0c\u901a\u8fc7\u94f6\u884c\u7528\u6237\u7684\u4e2a\u4eba\u4fe1\u606f\u4ee5\u53ca\u4ee5\u5f80\u7684\u884c\u4e3a\u6765\u9884\u6d4b\u5176\u4e24\u5e74\u5185\u51fa\u73b0\u7ecf\u6d4e\u56f0\u96be\u7684\u6982\u7387\uff0c\u4ece\u800c\u5bf9\u94f6\u884c\u51b3\u5b9a\u662f\u5426\u5e94\u5f53\u4e88\u5176\u8d37\u6b3e\u8d77\u53c2\u8003\u4f5c\u7528\u3002\u8be5\u95ee\u9898\u4e3a\u4e8c\u5206\u7c7b\u95ee\u9898\uff0c\u7279\u5f81\u4e3a\u7528\u6237\u4e2a\u4eba\u4fe1\u606f\u4ee5\u53ca\u8fd1\u671f\u8d37\u6b3e\u884c\u4e3a\uff0c\u8981\u6c42\u5efa\u7acb\u6a21\u578b\u9884\u6d4b\u7528\u6237\u672a\u6765\u4e24\u5e74\u51fa\u73b0\u7ecf\u6d4e\u56f0\u96be\u7684\u6982\u7387\u3002","58ba54b1":"NumberRealEstateLoansOrLines\u5b58\u5728\u4e2a\u522b\u79bb\u7fa4\u70b9\uff0c\u53ef\u5c06NumberRealEstateLoansOrLines\u5927\u4e8e50\u7684\u70b9\u5220\u9664","244930e2":"\u901a\u8fc7\u4ea4\u53c9\u9a8c\u8bc1\u5f97\u5230\u521d\u6b65\u7ed3\u679c\uff1a  \n* \u7531\u4e8e\u6807\u7b7e\u5206\u5e03\u4e0d\u5747\uff0cSVM\u7ed3\u679c\u4e0d\u7406\u60f3  \n* boosting\u7b97\u6cd5\u603b\u4f53\u4f18\u4e8ebagging\u7b97\u6cd5\uff0c\u5176\u4e2dLGBM\u7b97\u6cd5\u548cGBDT\u7ed3\u679c\u8f83\u597d  \n* LGBM\u7b97\u6cd5\u8f83\u8f7b\u91cf\u7ea7\uff0c\u8f83GBDT\u66f4\u9002\u5408\u5904\u7406\u5927\u91cf\u6570\u636e\uff0c\u6240\u4ee5LGBM\u66f4\u9002\u5408\u672c\u573a\u666f  "}}