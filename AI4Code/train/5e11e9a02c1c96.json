{"cell_type":{"74afdcde":"code","364e8679":"code","e6f1d8d5":"code","7a004a7f":"code","f5e4a791":"code","ba4709b1":"code","c8bbd6fb":"code","3fa624a7":"code","15df34d0":"code","197b939a":"code","a6636060":"code","32b0855a":"code","4a36c624":"code","7ce9a179":"code","4fd0154f":"code","a11ebd52":"code","a0d1fdcd":"code","9d58fd5e":"code","d4921898":"code","7cc09810":"code","7e00621a":"code","4a91fd8f":"code","cfb0c8c3":"code","1a64256c":"code","97d84f2a":"code","192abcc0":"code","39fd72dc":"code","05a43351":"code","cbafd9d8":"code","3446ed65":"code","0284ecb0":"code","5250d611":"code","681720c7":"code","d95c1b69":"code","2ef81d9c":"code","0562cae4":"code","488502c6":"code","89ddfede":"code","81f3cd1f":"code","dd267f20":"code","50525233":"code","3572dbd8":"code","b8cb752a":"code","bfcf1e43":"code","106adeba":"code","cdd134ee":"code","dd146d43":"code","0e3f4b2b":"code","e7844258":"code","53ec49ce":"markdown"},"source":{"74afdcde":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","364e8679":"train = pd.read_csv('..\/input\/train.csv')","e6f1d8d5":"test = pd.read_csv('..\/input\/test.csv')","7a004a7f":"# will check if there is a null value in any of the columns","f5e4a791":"import seaborn as sns \nsns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","ba4709b1":"#missing value in age and cabin columns in train dataset","c8bbd6fb":"sns.heatmap(test.isnull(),yticklabels=False,cbar=False,cmap='viridis')","3fa624a7":"#missing values in age and cabin columns of test dataset ","15df34d0":"sns.boxplot(x='Pclass',y='Age',data=train)","197b939a":"def fill_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n        if Pclass == 1:\n            return 37\n        elif Pclass == 2:\n            return 29\n        else:\n            return 24\n    else:\n         return Age","a6636060":"train['Age'] = train[['Age','Pclass']].apply(fill_age,axis=1)","32b0855a":"test['Age'] = test[['Age','Pclass']].apply(fill_age,axis=1)","4a36c624":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","7ce9a179":"train.drop('Cabin',axis=1,inplace=True)\ntrain.head(2)","4fd0154f":"test.drop('Cabin',axis=1,inplace=True)\ntest.head(2)","a11ebd52":"train.info()","a0d1fdcd":"test.info()","9d58fd5e":"#one data is missing in fare columns","d4921898":"test[test.Fare!=test.Fare]","7cc09810":"imp_fare = test.loc[(test.Embarked == 'S') & (test.Pclass == 3), \"Fare\"].mean()\ntest.loc[test.Fare!=test.Fare , \"Fare\"] = round(imp_fare, 2)\ntest.loc[(test.Name == \"Storey, Mr.Thomas\"),:]","7e00621a":"test.info()","4a91fd8f":"train.dropna(inplace=True)","cfb0c8c3":"test.dropna(inplace=True)","1a64256c":"sex = pd.get_dummies(train['Sex'],drop_first=True)\nsex","97d84f2a":"embark = pd.get_dummies(train['Embarked'],drop_first=True)\nembark.head()","192abcc0":"sex1 = pd.get_dummies(test['Sex'],drop_first=True)\nsex1.head()","39fd72dc":"embark1 = pd.get_dummies(test['Embarked'],drop_first=True)\nembark1.head()","05a43351":"train = pd.concat([train,sex,embark],axis=1)","cbafd9d8":"train.head(2)","3446ed65":"test = pd.concat([test,sex1,embark1],axis=1)","0284ecb0":"test.head(2)","5250d611":"train.drop(['Name','Sex','Embarked','Ticket'],axis=1,inplace=True)","681720c7":"train.head(2)","d95c1b69":"test.drop(['Name','Sex','Embarked','Ticket'],axis=1,inplace=True)","2ef81d9c":"test.head(2)","0562cae4":"train.drop('PassengerId',axis=1,inplace=True)","488502c6":"train.head(2)","89ddfede":"test.drop('PassengerId',axis=1,inplace=True)","81f3cd1f":"test.head(2)","dd267f20":"X = train.drop('Survived',axis=1)\ny = train['Survived']","50525233":"total = train.isnull().sum().sort_values(ascending=False)\npercent = train.isnull().sum()\/train.isnull().count().sort_values(ascending=False)\nmissing_data = pd.concat([total , percent],axis=1,keys=['Total' , 'Percent'])\nmissing_data","3572dbd8":"total = X.isnull().sum().sort_values(ascending=False)\npercent = X.isnull().sum()\/X.isnull().count().sort_values(ascending=False)\nmissing_data = pd.concat([total ,percent],axis=1,keys=['Total','Percent'])\nmissing_data","b8cb752a":"from sklearn.model_selection import train_test_split\nX_train, X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=101)","bfcf1e43":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression()\nlr.fit(X_train,y_train)","106adeba":"pred = lr.predict(X_test)\npred","cdd134ee":"testing = pd.read_csv('..\/input\/test.csv')\ntesting.head(2)","dd146d43":"my_submission = pd.DataFrame({'survived':lr.predict(test),'passengerId': testing['PassengerId']},index = test.index)","0e3f4b2b":" my_submission ","e7844258":"my_submission.to_csv('submission.csv',index=False)","53ec49ce":"sns.heatmap(test.isnull(),yticklabels=False,cbar=False,cmap='viridis')"}}