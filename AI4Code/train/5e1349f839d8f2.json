{"cell_type":{"2ea2f975":"code","7fdc4f29":"code","08744def":"code","5a075408":"markdown","2c7b5212":"markdown","64b9e55f":"markdown","c1cbc377":"markdown"},"source":{"2ea2f975":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n#import numpy as np # linear algebra\n#import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7fdc4f29":"!pip install pykml","08744def":"from pykml import parser\nfcsv = \".\/postalcodes.csv\"\nfp = \"..\/input\/medellin-colombia-postal-codes-with-polygons\/Codigo_Postal.kml\"\nfcsvfd = open(fcsv,\"w\")\nwith open(fp, 'r') as f:\n    root = parser.parse(f).getroot()\nfor el in root.Document.Folder.Placemark:\n    placemark = \"\"\n    for sd in el.ExtendedData.SchemaData.SimpleData:\n        placemark += str(sd) + \"\\t\"\n    placemark+=el.Polygon.outerBoundaryIs.LinearRing.coordinates+\"\\n\"\n    fcsvfd.write(placemark)\nfcsvfd.close()\n\n","5a075408":"This code will load pykml parser, parse the XML on pyxml, and write csv file with relevant information.","2c7b5212":"First setup the enviroment","64b9e55f":"On this notebook I'll show how to parse and manipulte the kml file in order to generate a csv file with the relevant information.\nI'll use the Medellin, Colombia postal codes kml file obtained from the medata.gov.co site.","c1cbc377":"# Manipulate KML file"}}