{"cell_type":{"768aa16a":"code","69791645":"code","226e5cc9":"code","a8e8dc67":"code","513be4ed":"code","d89c2a59":"code","4c2698ca":"code","a5903913":"code","f48b1619":"code","c23e0008":"markdown","0cf1884a":"markdown","230a6f24":"markdown","70793a5c":"markdown","deb8ecaf":"markdown","d2977006":"markdown","504f1e08":"markdown","3e2f201b":"markdown","82ae263c":"markdown","16b37926":"markdown"},"source":{"768aa16a":"from sklearn import naive_bayes\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn import preprocessing\nimport pandas as pd\nimport numpy as np\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport statistics","69791645":"CancerData = pd.read_csv(\"..\/input\/wdbc-data\/wdbc.data\").values","226e5cc9":"fig, axes = plt.subplots(4,3)\nfig.set_size_inches(18.5, 6.5)\nfig.tight_layout()\nsns.distplot(CancerData[:,2],ax=axes[0][0]).set_title(\"Feature 1\")\nsns.distplot(CancerData[:,3],ax=axes[0][1]).set_title(\"Feature 2\")\nsns.distplot(CancerData[:,4],ax=axes[0][2]).set_title(\"Feature 3\")\nsns.distplot(CancerData[:,5],ax=axes[1][0]).set_title(\"Feature 4\")\nsns.distplot(CancerData[:,6],ax=axes[1][1]).set_title(\"Feature 5\")\nsns.distplot(CancerData[:,7],ax=axes[1][2]).set_title(\"Feature 6\")\nsns.distplot(CancerData[:,8],ax=axes[2][0]).set_title(\"Feature 7\")\nsns.distplot(CancerData[:,9],ax=axes[2][1]).set_title(\"Feature 8\")\nsns.distplot(CancerData[:,10],ax=axes[2][2]).set_title(\"Feature 9\")\nsns.distplot(CancerData[:,11],ax=axes[3][0]).set_title(\"Feature 10\")\nsns.distplot(CancerData[:,12],ax=axes[3][1]).set_title(\"Feature 11\")\naxes[3][2].hist(CancerData[:,1])\naxes[3][2].set_title(\"Diagnosis\")","a8e8dc67":"CancerDataBinary = np.zeros((568,30))\nfor i in range(2,32,1):\n    binarizer = preprocessing.Binarizer(threshold = statistics.mean(CancerData[:,i])).fit([CancerData[:,i]])  # fit does nothing\n    CancerDataBinary[:,i-2] = binarizer.transform([CancerData[:,i]])","513be4ed":"fig, axes = plt.subplots(4,3)\nfig.set_size_inches(18.5, 6.5)\nfig.tight_layout()\nsns.distplot(CancerDataBinary[:,0],ax=axes[0][0]).set_title(\"Feature 1\")\nsns.distplot(CancerDataBinary[:,1],ax=axes[0][1]).set_title(\"Feature 2\")\nsns.distplot(CancerDataBinary[:,2],ax=axes[0][2]).set_title(\"Feature 3\")\nsns.distplot(CancerDataBinary[:,3],ax=axes[1][0]).set_title(\"Feature 4\")\nsns.distplot(CancerDataBinary[:,4],ax=axes[1][1]).set_title(\"Feature 5\")\nsns.distplot(CancerDataBinary[:,5],ax=axes[1][2]).set_title(\"Feature 6\")\nsns.distplot(CancerDataBinary[:,6],ax=axes[2][0]).set_title(\"Feature 7\")\nsns.distplot(CancerDataBinary[:,7],ax=axes[2][1]).set_title(\"Feature 8\")\nsns.distplot(CancerDataBinary[:,8],ax=axes[2][2]).set_title(\"Feature 9\")\nsns.distplot(CancerDataBinary[:,9],ax=axes[3][0]).set_title(\"Feature 10\")\nsns.distplot(CancerDataBinary[:,10],ax=axes[3][1]).set_title(\"Feature 11\")\naxes[3][2].hist(CancerData[:,1])\naxes[3][2].set_title(\"Diagnosis\")","d89c2a59":"X = CancerDataBinary\ny = CancerData[:,1]\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","4c2698ca":"BernoulliNBModel = naive_bayes.BernoulliNB()\nBernoulliNBModel.fit(X_train, y_train)","a5903913":"y_test_predicted = BernoulliNBModel.predict(X_test)","f48b1619":"print(confusion_matrix(y_test, y_test_predicted))\naccuracy_score(y_test, y_test_predicted)","c23e0008":"# Predict the test data","0cf1884a":"# Print confusion matrix and accuracy","230a6f24":"# Create a Bernoulli Naive Bayes classifier model and fit the data","70793a5c":"# Load accuracy score, confusion matrix, seaborn and naive bayes library for sklearn","deb8ecaf":"# Plot the above features - Bernoulli distribution","d2977006":"# Split the data to train and test data","504f1e08":"# Since we use Bernoulli Naive Bayes the input features should be binary in nature. We use Binarizer to convert the above Gaussian distribution to Bernoulli distribution. We can also use the binarize parameter in BernoulliNB class instead of this. \n# Here the threshold to binarize the feature is the mean value of that particular feature","3e2f201b":"We can see that the features follow a Gaussian distribution","82ae263c":"# Plot some of the features using seaborn","16b37926":"# Load cancer data from the input folder"}}