{"cell_type":{"dfbdcf7f":"code","c72ef33d":"code","3abea0bb":"code","f5aa4a26":"code","bacfbb32":"code","0acbd44e":"code","880c15c4":"code","fcef12cc":"code","4c6e82ef":"markdown","47ea96ab":"markdown","76125042":"markdown","de884a59":"markdown","48d8486e":"markdown"},"source":{"dfbdcf7f":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\n\n# for hierarchical clusterization\nfrom scipy.cluster.hierarchy import dendrogram, linkage  \nfrom scipy.spatial.distance import  pdist\nfrom matplotlib import pyplot as plt\nfrom sklearn.preprocessing import MinMaxScaler\n\n# system\nfrom datetime import datetime\nimport os\nsns.set()\n\nprint(os.listdir(\"..\/input\/2019-2nd-ml-month-with-kakr\"))\n","c72ef33d":"# inspired by [...]\ns1=pd.read_csv('..\/input\/kakr-outputs\/A_Note_on_Using_a_Single_Model_XGBoost_103683.csv')['price']\ns2=pd.read_csv('..\/input\/kakr-outputs\/House_Price_Prediction_EDA_108686.csv')['price']\ns3=pd.read_csv('..\/input\/kakr-outputs\/lgb_xgb_v1_107382.csv')['price']\ns4=pd.read_csv('..\/input\/kakr-outputs\/Default_EDA-Stacking_Introduction_104047.csv')['price']\ns5=pd.read_csv('..\/input\/kakr-outputs\/ensemble_v2_r_102424.csv')['price']\ns6=pd.read_csv('..\/input\/kakr-outputs\/XGBoost_102562.csv')['price']\n\nsubmission = pd.read_csv('..\/input\/2019-2nd-ml-month-with-kakr\/sample_submission.csv')\n\nsolutions_set = pd.DataFrame({'s1': s1, 's2': s2, 's3': s3, 's4': s4, 's5': s5, 's6': s6})","3abea0bb":"# Scaling\nscaler = MinMaxScaler()  \nsolutions_set_scaled = scaler.fit_transform(solutions_set)\nsolutions_set_scaled = pd.DataFrame(solutions_set_scaled, columns = solutions_set.columns)","f5aa4a26":"# transpose and convert solutions set to numpy\nnp_solutions_set = solutions_set_scaled.T.values\n# calculate the distances\nsolutions_set_dist = pdist(np_solutions_set)\n# hierarchical clusterization\nlinked = linkage(solutions_set_dist, 'ward')\n\n# dendrogram\nfig = plt.figure(figsize=(8, 5))\ndendrogram(linked, labels = solutions_set_scaled.columns)\nplt.title('clusters')\nplt.show()","bacfbb32":"sns.scatterplot(x = 's1', y = 's2', data = solutions_set_scaled)\nplt.title('Submisions of s1 and s2')","0acbd44e":"sns.scatterplot(x = 's3', y = 's6', data = solutions_set_scaled)\nplt.title('Submisions of s3 and s6')","880c15c4":"# get scaled submissions s1, s2 ... s7\nfor s in solutions_set_scaled.columns:\n    s = solutions_set_scaled[s]\n    \ncluster1 = 1\/4 * (s1 + s2 + s3 + s4)\ncluster2 = 1\/2 * (s5 + s6)\n\nsubmission['price'] = 0.3*cluster1 + 0.7*cluster2","fcef12cc":"submission.to_csv('submission.csv', index=False)","4c6e82ef":"\uc81c\uac00 \uc5ec\uae30\uc11c \uc5bb\uc740 \uacb0\ub860\uc740, <br\/>\n\uc804\uccb4\uc801\uc73c\ub85c \uc608\uce21\uc131\ub2a5\uc740 \ube44\uc2b7\ud558\uc9c0\ub9cc, \uc608\uc678\uc758 \uac12 \uba87\uac1c\uac00 \uc5c4\uccad\ub098\uac8c \ud070 \ucc28\uc774\ub97c \ub9cc\ub4e4\uc5b4\ub0b4\uace0 \uc788\ub2e4\uace0 \ud310\ub2e8\ud558\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4. <br\/>\n\n\uadf8\ub798\uc11c \uba87\uac1c\uc758 \uac12\uc5d0 \ub300\ud574\uc11c\ub294 \ud2b9\ubcc4\ud558\uac8c blend\ud558\ub294 \uacb0\ub860\uc5d0 \uc774\ub974\ub800\ub294\ub370, \uc5ec\ub7ec\ubd84\ub4e4\ub3c4 \ud55c\ubc88 \ub4e4\uc5ec\ub2e4 \ubcf4\uc2dc\uba74 \uc88b\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.\n\n\uc544\ubb34\ub828, \uc774\uc81c \uc704\uc758 \uadf8\ub798\ud504\ub97c \uae30\ubc18\uc73c\ub85c blend\ub97c \ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","47ea96ab":"# Clustering Blender\n\n\ub9c8\uac10\uc774 \uc5bc\ub9c8 \uc548\ub0a8\uc558\ub124\uc694, ensemble\uc758 \uc2dc\uac04\uc774 \ub2e4\uac00\uc628 \uac83 \uac19\uc2b5\ub2c8\ub2e4.\n\nclustering blender \ubc29\ubc95\uc744 \uc18c\uac1c\ud558\uace0\uc790 \ud569\ub2c8\ub2e4.\n\n\ud604\uc7ac \uacf5\uac1c\ub41c \ub2e4\uc218\uc758 kernel\ub4e4\uacfc \uc81c \uac1c\uc778\uc801\uc778 kernel\uc758 LB\ub97c \uae30\ubc18\uc73c\ub85c \ubd84\uc11d\ud574\ubcf4\uc558\uc2b5\ub2c8\ub2e4.\n","76125042":"## \uc800\ub294 \uc5ec\uae30\uc11c \ud2b9\uc774\ud55c \uc810\uc744 \ubc1c\uacac\ud588\uc2b5\ub2c8\ub2e4.\n\nLB \uc2a4\ucf54\uc5b4\ub97c \uc0b4\ud3b4\ubcf4\uba74(\uc18c\uc218\uc810 \uc0dd\ub7b5) \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4. <br\/>\ns1: 103683<br\/>\ns2: 108686<br\/>\ns3: 107382<br\/>\ns4: 104047<br\/>\ns5: 102424<br\/>\ns6: 102562<br\/>\n\ns1\uacfc s2\uac00 \uac00\uc7a5 \uc720\uc0ac\ud55c\ub370, score\ub85c \ubcf4\uba74 \uac2d\uc774 \uc0c1\ub2f9\ud569\ub2c8\ub2e4.","de884a59":"\uc5ec\ub7ec\ubd84\ub4e4\ub3c4 ensemble\uc5d0 \uaf2d \uc131\uacf5\ud558\uc2dc\uae38 \ubc14\ub77c\uace0!\n\n\uc608\uc678 \ub370\uc774\ud130\uc5d0 \uc9d1\uc911\ud558\uc2dc\uba74 \uc88b\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4! :)","48d8486e":"\uc0c1\ub300\uc801\uc73c\ub85c s1\uacfc score gap\uc774 \uac00\uc7a5 \uc801\uc740 s6\uc640 \ube44\uad50\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4."}}