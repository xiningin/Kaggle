{"cell_type":{"a2e6ea93":"code","9e1e950e":"code","d2a4a284":"code","06938274":"code","aa10b517":"code","d2bcf731":"code","22973a8b":"code","8236bc18":"code","4084d577":"code","ddbce395":"code","7c213381":"code","9df272e3":"code","25a6a0d0":"code","759cafd2":"code","43323343":"code","593268c7":"code","59238a4e":"code","e770b01b":"code","1a80bf5a":"code","3378ba43":"code","017e49c8":"code","1321e781":"code","0cd3f6d6":"code","d7a43688":"code","5c42f406":"code","455cec61":"code","bbbdc25b":"markdown","733f4cb6":"markdown","3efe289a":"markdown","f27e4044":"markdown","3ac1fed9":"markdown","a4e7d2a0":"markdown","60166ca6":"markdown","a90fff3f":"markdown","a626421a":"markdown","e2e0fdc8":"markdown","b8c7085a":"markdown","3db7ee4d":"markdown","ccf206b7":"markdown","8c1bba5f":"markdown","fecc577a":"markdown","c83e9ff2":"markdown","69eef9e1":"markdown","695ed6a3":"markdown","c2d1deb7":"markdown","2b6b2347":"markdown","ab66e6bd":"markdown","f107256a":"markdown","2535aa17":"markdown","81dd46ff":"markdown","0039e231":"markdown","004fe816":"markdown","fd37cace":"markdown","1a220f44":"markdown","09fc3dbb":"markdown"},"source":{"a2e6ea93":"s = '0123456789'\nprint('(a):',s[2:5])\nprint('(b):',s[-3:-1])\nprint('(c):',s[:-2])\nprint('(d):',s[0:4])\nprint('(e):',s[-3:])","9e1e950e":"forecast='It will be a sunny day today'\ncount=forecast.count('day')\nprint(count)\nweather=forecast.find('sunny')\nprint(weather)\nchange=forecast.replace('sunny','cloudy')\nprint(change)\n","d2a4a284":"last = 'Smith'\nfirst = 'John'\nmiddle = 'Paul'\nprint(last,first,middle,sep='\\t')","06938274":"first = 'John'\nlast = 'Doe'\nstreet = 'Main Street'\nnumber = 123\ncity = 'AnyCity'\nstate = 'AS'\nzipcode = '09876'   \nprint('{} {}\\n{} {}\\n{}, {} {}'.format(first,last,number,street,city,state,zipcode))","aa10b517":"students = []\nstudents.append(['DeMoines', 'Jim', 'Sophomore', 3.45])\nstudents.append(['Pierre', 'Sophie', 'Sophomore', 4.0])\nstudents.append(['Columbus', 'Maria', 'Senior', 2.5])\nstudents.append(['Phoenix', 'River', 'Junior', 2.45])\nstudents.append(['Olympis', 'Edgar', 'Junior', 3.99])\ndef roster(students):\n\n    print('Last      First     Class         Average Grade')\n    for student in students:\n        print('{:10}{:10}{:10}{:8.2f}'.format(student[0],student[1], student[2], student[3]))\n\nprint(roster(students))","d2bcf731":"import time\nt = time.localtime(1500000000)\n\n\nprint(time.strftime('%A, %B %d %Y', t))\nprint(time.strftime('%I:%M %p %Z Central Daylight Time on %m\/%d\/%Y',t))\nprint(time.strftime('I will meet you on %a %B %d at %I:%M %p.', t))\n","22973a8b":"def stringcount(filename,target):\n    infile=open(filename)\n    content=infile.read()\n    infile.close()\n    Result=content.count(target)\n    return(Result)\nprint(stringcount('..\/input\/example\/example.txt','line'))","8236bc18":"def words(filename):\n\n    infile = open(filename, 'r')\n    content = infile.read()\n    infile.close()\n    table = str.maketrans('!,.:;?', 6*' ')\n    content=content.translate(table)\n    content=content.lower()\n    return content.split()\n\nprint(words('..\/input\/example\/example.txt'))","4084d577":"def myGrep(filename, target):\n\n    infile = open(filename)\n    for line in infile:\n        if target in line:\n            print(line, end='')\n            \nprint(myGrep('..\/input\/example\/example.txt', 'line'))","ddbce395":"s = 'abcdefghijklmnopqrstuvwxyz'\nprint('(a): ',s[1:4])\nprint('(b): ',s[0:3])\nprint('(c): ',s[4:])\nprint('(d): ',s[-4:-1])\nprint('(e): ',s[-4:])","7c213381":"s = 'abcdefghijklmnopqrstuvwxyz'\nprint('(a):',s[2:4]=='bc')\nprint('(b):',s[:14]=='abcdefghijklmn')\nprint('(c):',s[14:]=='opqrstuvwxyz')\nprint('(d):',s[1:-1]=='bcdefghijklmnopqrstuvw')\n","9df272e3":"log='128.0.0.1 - - [12\/Feb\/2011:10:31:08 -0600] \"GET \/docs\/test.txt HTTP\/1.0\"'\nprint(log)\nlog=log.split( )\nprint(log)\naddress=log[0]\nprint(address)\nprint(log[3])","25a6a0d0":"s = '10 20 30 40 50 60'\nprint(s.split( ))\ns = '10,20,30,40,50,60'\nprint(s.split(',' ))\ns = '10&20&30&40&50&60'\nprint(s.split('&' ))\ns = '10 - 20 - 30 - 40 - 50 - 60'\nprint(s.split(' - ' ))\n\n\n","759cafd2":"message='The secret of this message is that it is secret.'\nlenght=len(message)\nprint(lenght)\ncount=message.count(\"secret\")\nprint(count)\ncensored=message.replace(\"secret\",\"xxxxxx\")\nprint(censored)\n","43323343":"s = '''It was the best of times, it was the worst of times; it\n     was the age of wisdom, it was the age of foolishness; it was the\n     epoch of belief, it was the epoch of incredulity; it was ... '''\n\ntable=str.maketrans('.,;',3*' ')\nnewS=s.translate(table)\nprint(newS)\nprint('')\nnewS=newS.replace('     ','')   \nprint(newS)\nprint('')\nnewS=newS.lower()\nprint(newS)\nprint('')\nprint(newS.count('it was'))\nprint('')\nnewS=newS.replace('was','is')\nprint(newS)\nprint('')\nlistS=newS.split()\nprint(listS)","593268c7":"first = 'Marlena'\nlast = 'Sigel'\nmiddle = 'Mae'\n\nprint('(a) {}, {} {}'.format(last,first,middle))\nprint('(b) {}, {} M.'.format(last,first))\nprint('(c) {} M. {}'.format(first,last))\nprint('(d) M. M. {}'.format(last))\nprint('(e) {}, M.'.format(last))","59238a4e":"sender = 'tim@abc.com'\nrecipient = 'tom@xyz.org'\nsubject = 'Hello!'\n\nprint('From: {} \\nTo: {} \\nSubject: {}'.format(sender,recipient,subject))","e770b01b":"import math\n\nprint('pi = {:3.2}, e = {:3.2}'.format(math.pi,math.e))\nprint('pi = {:4.2f}, e = {:4.2f}'.format(math.pi,math.e))\nprint('pi = {:e}, e = {:e}'.format(math.pi,math.e))\nprint('pi = {:7.5f}, e = {:7.5f}'.format(math.pi,math.e))\n","1a80bf5a":"def cheer(string):\n    print(\"How do you spell winner? \\nI know, I know! \\n{}! \\nAnd that's how you spell winner! \\nGo {}!\".format((' '.join(string.upper())),string))\n    \nprint(cheer('Huskies'))","3378ba43":"def crypto(filename):\n    infile=open(filename,'r')\n    content=infile.read()\n    content=content.replace('secret','xxxxxx')\n    return content\nprint(crypto('..\/input\/copytxt\/copy.txt'))\n","017e49c8":"def fcopy(filename1,filename2):\n    infile1=open(filename1,'r')\n    infile2=open(filename2,'w')\n    infile2.write(infile1.read())\nfcopy('..\/input\/exampletxt\/Example.txt','copy.txt')\nopen('..\/input\/copytxt\/copy.txt').read()    \n","1321e781":"\ndef link(filename):\n    infile=open(filename)\n    content=infile.read()\n    infile.close()\n    return content.count('<\/a>')\n    \nlink('..\/input\/pythonhtml\/Python.html')","0cd3f6d6":"\ndef stats(filename):\n    l=0\n    L=0\n    infile=open(filename)\n    content=infile.read()\n    for line in content:\n        l=l+1\n        L=L+len(line)\n        w=len(content.split())\n    print('number of lines= ',l)\n    print('number of words= ',w)\n    print('number of characters= ',L)\nprint(stats('..\/input\/copytxt\/copy.txt'))","d7a43688":"def distribution(filename):\n    infile = open(filename,'r')\n    grades = infile.read()\n    aCount = grades.count('A\\n')\n    aMinusCount = grades.count('A-\\n')\n    bCount = grades.count('B\\n')\n    bMinusCount = grades.count('B-\\n')\n    cCount = grades.count('C\\n')\n    cMinusCount = grades.count('C-\\n')\n    dCount = grades.count('D\\n')\n    dMinusCount = grades.count('D-\\n')\n    fCount = grades.count('F')\n    print(aCount, 'students got A')\n    print(aMinusCount, 'students got A-')\n    print(bCount, 'students got B')\n    print(bMinusCount, 'students got B-')\n    print(cCount, 'students got C')\n    print(cMinusCount, 'students got C-')\n    if dCount == 0:\n        pass\n    else:\n        print(dCount, 'students got D')\n    if dMinusCount == 0:\n        pass\n    else:\n        print(dMinusCount, 'students got D-')\n    print(fCount, 'students got F')","5c42f406":"def duplicate(filename):\n    infile=open(filename)\n    content=infile.read()\n    infile.close()\n    table=str.maketrans(\".,?!\",4*\" \")\n    content=content.translate(table)\n    words=content.split()\n    words_set=set(words)\n    if len(words)==len(words_set):\n        return False\n    else:\n        return True\nduplicate('..\/input\/copytxt\/copy.txt')\n        ","455cec61":"def censor(filename):\n    infile=open(filename)\n    content=infile.read()\n    infile.close()\n    table=str.maketrans(\".,?!\",4*\" \")\n    content_1=content.translate(table)\n    words=content_1.split()\n    for word in words:\n        if len(word)==4:\n            content=content.replace(word,\"xxxx\")\n    output=open(\"censored.txt\",\"w\")\n    output.write(content)\n    output.close()\ncensor('..\/input\/example\/example.txt')","bbbdc25b":"### 4.17 Translate each part into a Python statement using appropriate string methods:\n        (a) Assign to variable message the string 'The secret of this message is that\n        it is secret.'\n        (b) Assign to variable length the length of string message, using operator len().\n        (c) Assign to variable count the number of times the substring 'secret' appears in\n        string message, using string method count().\n        (d) Assign to variable censored a copy of string message with every occurrence of\n        substring 'secret' replaced by 'xxxxxx', using string method replace().\n\n","733f4cb6":"### 4.28 Implement function links() that takes as input the name of an HTML file (as a string) and returns the number of hyperlinks in that file. To do this you will assume that each hyperlink appears in an anchor tag. You also need to know that every anchor tag end with the substring <\/a>.\n","3efe289a":"### 4.11 Explain what causes the syntax error in each statement just listed. Then write a correct version of each Python statement.","f27e4044":"### 4.12 Start by running, in the interactive shell, this assignment statement:\n        \n        s = 'abcdefghijklmnopqrstuvwxyz'\n\n    Now write expressions using string s and the indexing operator that evaluate to 'bcd',\n    'abc', 'defghijklmnopqrstuvwx', 'wxy', and 'wxyz'.\n","3ac1fed9":".    \n    \n    (a) The left parenthesis and the right bracket do not match. The intended expression is\n\n    probably either (3+4) (evaluating to integer 7) or [3+4] (evaluating to a list contain-\n    ing integer 7).\n\n    (b) The column is missing; the correct expression is if x == 5:.\n    (c) print() is a function and thus must be called with parentheses and with arguments,\n    if any, inside them; the correct expression is print('hello').\n    (d) The objects in a list are separated by commas: lst=[4,5,6] is correct.\n    (e) The statement(s) in the body of a for loop must be indented.\n        >>> for i in range(3):\n            print(i)","a4e7d2a0":"### 4.14 Translate each part into a Python statement:\n    (a) Assign to variable log the next string, which happens to be a fragment of a log of a\n    request for a text file from a web server:\n    128.0.0.1 - - [12\/Feb\/2011:10:31:08 -0600] \"GET \/docs\/test.txt HTTP\/1.0\"\n    (b) Assign to variable address the substring of log that ends before the first blank space\n    in log, using the string method split() and the indexing operator.\n    (c) Assign to variable date the splice of string log containing the date (12\/Feb ...\n    -6000), using the indexing operator on string log.\n","60166ca6":"### 4.2 Assuming that variable forecast has been assigned string\n                    'It will be a sunny day today'\n            write Python statements corresponding to these assignments:\n        (a) To variable count, the number of occurrences of string 'day' in string forecast.\n        (b) To variable weather, the index where substring 'sunny' starts.\n        (c) To variable change, a copy of forecast in which every occurrence of substring\n        'sunny' is replaced by 'cloudy'.","a90fff3f":"### 4.10 Implement function myGrep() that takes as input two strings, a file name and a target string, and prints every line of the file that contains the target string as a substring.\n","a626421a":"### 4.8 Write function stringCount() that takes two string inputs\u2014a file name and a target string\u2014and returns the number of occurrences of the target string in the file.\n","e2e0fdc8":"### 4.26 The cryptography function crypto() takes as input a string (i.e., the name of a file in the current directory). The function should print the file on the screen with this modification: Every occurrence of string 'secret' in the file should be replaced with string 'xxxxxx'.\n\n","b8c7085a":"### 4.9 Write function words() that takes one input argument\u2014a file name\u2014and returns the list of actual words (without punctuation symbols !,.:;?) in the file.\n","3db7ee4d":"### 4.7 Start by setting t to be the local time 1, 500, 000, 000 seconds from the start of January 1, 1970 UTC:\n","ccf206b7":"### 4.3 Write a statement that prints the values of variables last, first, and middle in one line, separated by a horizontal tab character. (The Python escape sequence for the horizontal tab character is \\t.) If the variables are assigned like this:\n","8c1bba5f":"### 4.20 Given string values for the sender, recipient, and subject of an email, write a string format expression that uses variables sender, recipient, and subject and that prints as shown here:\n        >>> sender = 'tim@abc.com'\n        >>> recipient = 'tom@xyz.org'\n        >>> subject = 'Hello!'\n        >>> print(???)\n        From: tim@abc.com\n        To: tom@xyz.org\n        Subject: Hello!\n","fecc577a":"### 4.29 Write a function stats() that takes one input argument: the name of a text file. The function should print, on the screen, the number of lines, words, and characters in the file; your function should open the file only once.\n","c83e9ff2":"### 4.15 For each of the below string values of s, write the expression involving s and the string methods split() that evaluates to list:\n                ['10', '20', '30', '40', '50', '60']\n\n        (a) s = '10 20 30 40 50 60'\n        (b) s = '10,20,30,40,50,60'\n        (c) s = '10&20&30&40&50&60'\n        (d) s = '10 - 20 - 30 - 40 - 50 - 60'\n","69eef9e1":"### 4.27 Write a function fcopy() that takes as input two file names (as strings) and copies the content of the first file into the second.\n","695ed6a3":"### 4.1 Start by executing the assignment:\n        s = '0123456789'\n    Now write expressions using string s and the indexing operator that evaluate to:\n    (a) '234'\n    (b) '78'\n    (c) '1234567'\n    (d) '0123'\n    (e) '789'","c2d1deb7":"### 4.30 Implement function distribution() that takes as input the name of a file (as a string). This one-line file will contain letter grades separated by blanks. Your function should print the distribution of grades, as shown.\n\n","2b6b2347":"### 4.32 The function censor() takes the name of a file (a string) as input. The function should open the file, read it, and then write it into file censored.txt with this modification: Every occurrence of a four-letter word in the file should be replaced with string 'xxxx'.\n","ab66e6bd":"### 4.19 Write Python statements that print the next formatted outputs using the already as- signed variables first, middle, and last:\n\n                        first = 'Marlena'\n                        last = 'Sigel'\n                        middle = 'Mae'\n        (a) Sigel, Marlena Mae\n        (b) Sigel, Marlena M.\n        (c) Marlena M. Sigel\n        (d) M. M. Sigel\n        (e) Sigel, M.\n\n\n","f107256a":"### 4.13 Let string s be defined as:\n                s = 'abcdefghijklmnopqrstuvwxyz'\n        Write Python Boolean expressions that correspond to these propositions:\n            (a) The slice consisting of the second and third character of s is 'bc'.\n            (b) The slice consisting of the first 14 characters of s is 'abcdefghijklmn'.\n            (c) The slice of s excluding the first 14 characters is 'opqrstuvwxyz'.\n            (d) The slice of s excluding the first and last characters is 'bcdefghijklmnopqrstuvw'.\n","2535aa17":"## CHAPTER 4","81dd46ff":"### 4.6 Implement function roster() that takes a list containing student information and prints out a roster, as shown below. The student information, consisting of the student\u2019s last name, first name, class, and average course grade, will be stored in that order in a list. Therefore, the input list is a list of lists. Make sure the roster printed out has 10 slots for every string value and 8 for the grade, including 2 slots for the decimal part.\n","0039e231":"### 4.21 Write Python statements that print the values of \u03c0 and the Euler constant e in the shown formats:\n    (a) pi = 3.1, e = 2.7\n    (b) pi = 3.14, e = 2.72\n    (c) pi = 3.141593e+00, e = 2.718282e+00\n    (d) pi = 3.14159, e = 2.71828","004fe816":"### 4.31 Implement function duplicate() that takes as input the name (a string) of a file in thecurrent directory and returns True if the file contains duplicate words and False otherwise.\n\n","fd37cace":"### 4.5 Assume variables first, last, street, number, city, state, zipcode have already been assigned. Write a print statement that creates a mailing label:\n                    John Doe\n                    123 Main Street\n                    AnyCity, AS 09876\n       \n       assuming that:\n            first = 'John'\n            last = 'Doe'\n            street = 'Main Street'\n            number = 123\n            city = 'AnyCity'\n            state = 'AS'\n            zipcode = '09876'","1a220f44":"### 4.18 Suppose variable s has been assigned in this way:\n            s = '''It was the best of times, it was the worst of times; it\n                was the age of wisdom, it was the age of foolishness; it was the\n                epoch of belief, it was the epoch of incredulity; it was ... '''\n                            \n                        (The beginning of A Tale of Two Cities by Charles Dickens.) Then do the following, in order:\n\n        (a) Write a sequence of statements that produce a copy of s, named newS, in which char-\n        acters ., ,, ;, and \\n have been replaced by blank spaces.\n\n        (b) Remove leading and trailing blank spaces in newS (and name the new string newS).\n        (c) Make all the characters in newS lowercase (and name the new string newS).\n        (d) Compute the number of occurrences in newS of string 'it was'.\n        (e) Change every occurrence of was to is (and name the new string newS).\n        (f) Split newS into a list of words and name the list listS.\n\n","09fc3dbb":"### 4.24 Implement function cheer() that takes as input a team name (as a string) and prints a cheer as shown:\n"}}