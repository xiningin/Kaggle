{"cell_type":{"03d68b3b":"code","21f2fdc3":"code","a8bdc11d":"code","dfa3747b":"code","806650c6":"code","a86a5956":"code","7b61ff7c":"code","aef367ae":"code","cf4f9f1c":"code","8cbd7e56":"code","ad3a8181":"code","2f4028db":"code","c4a3a6c0":"code","315263f3":"code","0ffe28d7":"code","03cba927":"code","9c1e7357":"code","6533ca2e":"code","1361a4b7":"markdown","0a529839":"markdown","14d961a8":"markdown","49657bdc":"markdown","3293e2d1":"markdown","eef8f4d6":"markdown","3c66efb5":"markdown","76b73e2e":"markdown","c8c32ff5":"markdown","c3f985e6":"markdown"},"source":{"03d68b3b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pathlib\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nimport gc\nprint(os.listdir(\"..\/input\"))\n\nfrom sklearn.metrics import confusion_matrix\nfrom fastai import *\nfrom fastai.vision import *\n\n# Any results you write to the current directory are saved as output.","21f2fdc3":"DATA_DIR='..\/input\/boats'","a8bdc11d":"os.listdir(f'{DATA_DIR}')","dfa3747b":"data = ImageDataBunch.from_folder(DATA_DIR, train=\".\", \n                                  valid_pct=0.2,\n                                  ds_tfms=get_transforms(flip_vert=True, max_warp=0),\n                                  size=224,bs=64, \n                                  num_workers=0).normalize(imagenet_stats)","806650c6":"print(f'Classes: \\n {data.classes}')","a86a5956":"data.show_batch(rows=3, figsize=(7,6))","7b61ff7c":"learn = create_cnn(data, models.resnet34, metrics=accuracy, model_dir=\"\/tmp\/model\/\")","aef367ae":"learn.lr_find()\nlearn.recorder.plot()","cf4f9f1c":"learn.fit_one_cycle(6,1e-2)","8cbd7e56":"learn.save('stage-1')","ad3a8181":"learn.unfreeze()","2f4028db":"learn.lr_find()\nlearn.recorder.plot()","c4a3a6c0":"learn.fit_one_cycle(4, max_lr=slice(1e-6,1e-3 ))","315263f3":"learn.save('stage-2')","0ffe28d7":"learn.recorder.plot_losses()","03cba927":"interp = ClassificationInterpretation.from_learner(learn)","9c1e7357":"interp.plot_top_losses(9, figsize=(15,11))","6533ca2e":"interp.plot_confusion_matrix(figsize=(8,8), dpi=60)","1361a4b7":"# Check Result","0a529839":"## Please upvote if you like it ;)","14d961a8":"## Please upvote if you like it ;)","49657bdc":"# Search LR 2","3293e2d1":"# Train 2","eef8f4d6":"# Search LR 1","3c66efb5":"# Import Modules","76b73e2e":"# Train 1","c8c32ff5":"# Model Build","c3f985e6":"# Make Data"}}