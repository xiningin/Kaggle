{"cell_type":{"ea3c2f2c":"code","5a256f5d":"code","c0aad003":"code","a12ff5c7":"code","d276eed5":"code","2150c452":"code","f01975d7":"code","8c9aa097":"code","bbb25b3b":"code","ba0a7553":"code","bc87f7ae":"markdown","1874717e":"markdown","eee84596":"markdown","873d8d82":"markdown","dd8a79cb":"markdown","ff61ac06":"markdown","0fc4d265":"markdown"},"source":{"ea3c2f2c":"from IPython.display import clear_output\n!pip install -U ppscore\nclear_output()\n\nimport numpy as np\nimport pandas as pd \n\nimport seaborn as sns\n\nimport ppscore as pps","5a256f5d":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv('..\/input\/titanic\/test.csv')","c0aad003":"#1. delete unnecessary columns\ndrop_elements = ['PassengerId', 'Name', 'Ticket', 'Cabin', 'SibSp','Parch']\ntrain = train.drop(drop_elements, axis = 1)\ntest = test.drop(drop_elements, axis = 1)\n\n#2.find null data and fill new data \ndef checkNull_fillData(df):\n    for col in df.columns:\n        if len(df.loc[df[col].isnull() == True]) != 0:\n            if df[col].dtype == \"float64\" or df[col].dtype == \"int64\":\n                df.loc[df[col].isnull() == True,col] = df[col].mean()\n            else:\n                df.loc[df[col].isnull() == True,col] = df[col].mode()[0]\n                \ncheckNull_fillData(train)\ncheckNull_fillData(test)\n\n#3.one hot encoding \nstr_list = [] \nnum_list = []\nfor colname, colvalue in train.iteritems():\n    if type(colvalue[1]) == str:\n        str_list.append(colname)\n    else:\n        num_list.append(colname)\n        \ntrain = pd.get_dummies(train, columns=str_list)\ntest = pd.get_dummies(test, columns=str_list)","a12ff5c7":"sns.displot(train[\"Survived\"], kde=False, rug=False)","d276eed5":"train.columns","2150c452":"pps.score(train, \"Fare\", \"Survived\")","f01975d7":"pps.predictors(train, y=\"Survived\")","8c9aa097":"pps.matrix(train)","bbb25b3b":"predictors_df = pps.predictors(train, y=\"Survived\")\nsns.barplot(data=predictors_df, x=\"x\", y=\"ppscore\")","ba0a7553":"\nmatrix_df = pps.matrix(train)[['x', 'y', 'ppscore']].pivot(columns='x', index='y', values='ppscore')\nsns.heatmap(matrix_df, vmin=0, vmax=1, cmap=\"Blues\", linewidths=0.5, annot=True)","bc87f7ae":"The PPS is an asymmetric, data-type-agnostic score \n\nthat can ***detect linear or non-linear relationships between two columns.***\n\nThe score ranges from 0 (no predictive power) to 1 (perfect predictive power). \n\nIt can be used as an alternative to the correlation (matrix).","1874717e":"# bar plot","eee84596":"# set None => matrix column relation","873d8d82":"# set x,y => score","dd8a79cb":"# Predictive Power Score (PPS) : column relation value : 0 ~ 1 ","ff61ac06":"# set y => predictors","0fc4d265":"# heatmap"}}