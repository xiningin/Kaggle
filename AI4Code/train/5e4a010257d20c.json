{"cell_type":{"c09d5de0":"code","91fd788c":"code","f5411b86":"code","87111276":"code","dde943f5":"code","c1c6c07f":"code","bd9324c7":"code","26370a21":"code","7a04df16":"code","033474a0":"code","1f203812":"code","2c6c97ed":"code","b7b4c2d5":"code","dc2bacf7":"code","e8c5ab7d":"code","adb41328":"code","65699989":"code","df5958b3":"code","20e65840":"code","d849538f":"code","3116ca75":"code","e60085ef":"code","901a2894":"code","66574626":"code","5b4b5ad0":"code","00e92ca6":"code","88d31346":"code","09477983":"code","8f487f93":"code","9f52d60c":"code","6cfaea81":"code","53b67319":"code","4864d1f3":"code","248cbcfc":"code","0d734d3b":"code","3bd27d26":"code","4eecb1d5":"code","a11e4238":"code","b86cb713":"code","d099b09c":"code","0225c0dd":"code","730c9bb7":"code","23cf682c":"code","bde846c4":"code","79e91ae4":"code","7b4e2ad8":"code","44063f43":"code","e50419ac":"markdown","dbadc03c":"markdown","aa54eeb0":"markdown","3e986109":"markdown","3795597d":"markdown","ca1d2313":"markdown","b6c0d785":"markdown","4a8df58a":"markdown"},"source":{"c09d5de0":"%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns; sns.set()\nimport numpy as np\nimport pandas as pd\nfrom sklearn.mixture import GaussianMixture ","91fd788c":"cc = pd.read_csv(\"..\/input\/cc.csv\")","f5411b86":"cc.columns = [i.lower() for i in cc.columns]","87111276":"cc.drop(columns = ['cust_id'], inplace = True)","dde943f5":"cc.fillna(cc.mean(), inplace=True)","c1c6c07f":"cc.isnull().sum()","bd9324c7":"from sklearn.preprocessing import StandardScaler\nfrom sklearn import preprocessing","26370a21":"test=cc\nss = StandardScaler()     \nss.fit(test)                \nx = ss.transform(test)      \nx[:5, :]                  ","7a04df16":"df_out = preprocessing.normalize(x)","033474a0":"plt.scatter(df_out[:,0],df_out[:,1],alpha=0.2)\nplt.show()","1f203812":"test_out = pd.DataFrame(data=df_out,  columns=['balance', 'balance_frequency', 'purchases', 'oneoff_purchases', 'installments_purchases', 'cash_advance', 'purchases_frequency',       'oneoff_purchases_frequency', 'purchases_installments_frequency',       'cash_advance_frequency', 'cash_advance_trx', 'purchases_trx',       'credit_limit', 'payments', 'minimum_payments', 'prc_full_payment',       'tenure'])","2c6c97ed":"test_out.head()","b7b4c2d5":"X = df_out[:,[0,1]] \nX","dc2bacf7":"d = pd.DataFrame(X)","e8c5ab7d":"plt.scatter(d[0], d[1])\nplt.show()","adb41328":"gmm = GaussianMixture(n_components = 3)","65699989":"gmm.fit(d)","df5958b3":"labels = gmm.predict(d)","20e65840":"d['labels']= labels","d849538f":"d0 = d[d['labels']== 0] \nd1 = d[d['labels']== 1] \nd2 = d[d['labels']== 2] ","3116ca75":"plt.scatter(d0[0], d0[1], c ='r') \nplt.scatter(d1[0], d1[1], c ='yellow') \nplt.scatter(d2[0], d2[1], c ='g') ","e60085ef":"X = df_out[:,[2,4]] \nX\nd = pd.DataFrame(X)\nplt.scatter(d[0], d[1])\nplt.show()","901a2894":"gmm = GaussianMixture(n_components = 3)\ngmm.fit(d)\nlabels = gmm.predict(d)\nd['labels']= labels\nd0 = d[d['labels']== 0] \nd1 = d[d['labels']== 1] \nd2 = d[d['labels']== 2] ","66574626":"plt.scatter(d0[0], d0[1], c ='r') \nplt.scatter(d1[0], d1[1], c ='yellow') \nplt.scatter(d2[0], d2[1], c ='g') \nplt.show()","5b4b5ad0":"X = df_out[:,[3,4]] \nX\nd = pd.DataFrame(X)\nplt.scatter(d[0], d[1])\nplt.show()","00e92ca6":"gmm = GaussianMixture(n_components = 3)\ngmm.fit(d)\nlabels = gmm.predict(d)\nd['labels']= labels\nd0 = d[d['labels']== 0] \nd1 = d[d['labels']== 1] \nd2 = d[d['labels']== 2] ","88d31346":"plt.scatter(d0[0], d0[1], c ='r') \nplt.scatter(d1[0], d1[1], c ='yellow') \nplt.scatter(d2[0], d2[1], c ='m') \nplt.show()","09477983":"X = df_out[:,[2,6]] \nX\nd = pd.DataFrame(X)\nplt.scatter(d[0], d[1])\nplt.show()","8f487f93":"gmm = GaussianMixture(n_components = 3)\ngmm.fit(d)\nlabels = gmm.predict(d)\nd['labels']= labels\nd0 = d[d['labels']== 0] \nd1 = d[d['labels']== 1] \nd2 = d[d['labels']== 2] \nplt.scatter(d0[0], d0[1], c='m') \nplt.scatter(d1[0], d1[1], c ='yellow') \nplt.scatter(d2[0], d2[1], c ='g') ","9f52d60c":"X = df_out[:,[12,13]] \nX\nd = pd.DataFrame(X)\nplt.scatter(d[0], d[1])\nplt.show()","6cfaea81":"gmm = GaussianMixture(n_components = 3)\ngmm.fit(d)\nlabels = gmm.predict(d)\nd['labels']= labels\nd0 = d[d['labels']== 0] \nd1 = d[d['labels']== 1] \nd2 = d[d['labels']== 2] ","53b67319":"plt.scatter(d0[0], d0[1], c ='r') \nplt.scatter(d1[0], d1[1], c ='yellow') \nplt.scatter(d2[0], d2[1], c ='g') \nplt.show()","4864d1f3":"from matplotlib.patches import Ellipse\n\ndef draw_ellipse(position, covariance, ax=None, **kwargs):\n    \"\"\"Draw an ellipse with a given position and covariance\"\"\"\n    ax = ax or plt.gca()\n    \n    # Convert covariance to principal axes\n    if covariance.shape == (2, 2):\n        U, s, Vt = np.linalg.svd(covariance)\n        angle = np.degrees(np.arctan2(U[1, 0], U[0, 0]))\n        width, height = 2 * np.sqrt(s)\n    else:\n        angle = 0\n        width, height = 2 * np.sqrt(covariance)\n    \n    # Draw the Ellipse\n    for nsig in range(1, 4):\n        ax.add_patch(Ellipse(position, nsig * width, nsig * height,\n                             angle, **kwargs))\n        \ndef plot_gmm(gmm, X, label=True, ax=None):\n    ax = ax or plt.gca()\n    labels = gmm.fit(X).predict(X)\n    if label:\n        ax.scatter(X[:, 0], X[:, 1], c=labels, s=40, cmap='viridis', zorder=2)\n    else:\n        ax.scatter(X[:, 0], X[:, 1], s=40, zorder=2)\n    ax.axis('equal')\n    \n    w_factor = 0.2 \/ gmm.weights_.max()\n    for pos, covar, w in zip(gmm.means_, gmm.covariances_,  gmm.weights_):\n        draw_ellipse(pos, covar, alpha=w * w_factor)","248cbcfc":"plt.figure(figsize=(12,9))\ngmm = GaussianMixture(n_components=3, )\nplot_gmm(gmm, X)\nplt.show()","0d734d3b":"X = df_out[:,[2,13]] \nX\nd = pd.DataFrame(X)\nplt.scatter(d[0], d[1])","3bd27d26":"gmm = GaussianMixture(n_components = 3)\ngmm.fit(d)\nlabels = gmm.predict(d)\nd['labels']= labels\nd0 = d[d['labels']== 0] \nd1 = d[d['labels']== 1] \nd2 = d[d['labels']== 2] ","4eecb1d5":"plt.scatter(d0[0], d0[1], c ='r') \nplt.scatter(d1[0], d1[1], c ='yellow') \nplt.scatter(d2[0], d2[1], c ='g') \nplt.show()","a11e4238":"plt.figure(figsize=(12,9))\ngmm = GaussianMixture(n_components=3, random_state=42)\nplot_gmm(gmm, X)\nplt.show()","b86cb713":"X = df_out[:,[6,7]] \nX\nd = pd.DataFrame(X)\nplt.scatter(d[0], d[1])\nplt.show()","d099b09c":"gmm = GaussianMixture(n_components = 3)\ngmm.fit(d)\nlabels = gmm.predict(d)\nd['labels']= labels\nd0 = d[d['labels']== 0] \nd1 = d[d['labels']== 1] \nd2 = d[d['labels']== 2] ","0225c0dd":"plt.scatter(d0[0], d0[1], c ='r') \nplt.scatter(d1[0], d1[1], c ='yellow') \nplt.scatter(d2[0], d2[1], c ='g') \nplt.show()","730c9bb7":"plt.figure(figsize=(12,9))\ngmm = GaussianMixture(n_components=3, random_state=42)\nplot_gmm(gmm, X)","23cf682c":"X = df_out[:,:17] \nX\nd = pd.DataFrame(X)\ngmm = GaussianMixture(n_components = 3)\ngmm.fit(d)\n\ndensities = gmm.score_samples(X)","bde846c4":"density_threshold = np.percentile(densities,4)","79e91ae4":"anomalies =X[densities < density_threshold] \nunanomalous = X[densities >= density_threshold]","7b4e2ad8":"df_anomaly  = pd.DataFrame(anomalies, columns = cc.columns.values)\ndf_unanomaly  = pd.DataFrame(unanomalous, columns =cc.columns.values)","44063f43":"def densityplots(df1,df2, label1 = \"Anomalous\",label2 = \"Normal\"):    \n    fig, axes = plt.subplots(nrows=4, ncols=5, figsize=(15,15))\n    ax = axes.flatten()\n    fig.tight_layout()\n    \n    axes[3,3].set_axis_off()\n    axes[3,2].set_axis_off()\n    axes[3,4].set_axis_off()\n    \n    for i,j in enumerate(cc.columns):        \n        sns.distplot(df1.iloc[:,i],\n                     ax = ax[i],\n                     kde_kws={\"color\": \"k\", \"lw\": 3, \"label\": label1},   # Density plot features\n                     hist_kws={\"histtype\": \"step\", \"linewidth\": 3,\"alpha\": 1, \"color\": \"g\"}) # Histogram features\n        sns.distplot(df2.iloc[:,i],\n                     ax = ax[i],\n                     kde_kws={\"color\": \"red\", \"lw\": 3, \"label\": label2},\n                     hist_kws={\"histtype\": \"step\", \"linewidth\": 3,\"alpha\": 1, \"color\": \"b\"})\n\n\ndensityplots(df_anomaly, df_unanomaly, label2 = \"Unanomalous\")","e50419ac":"## ONEOFF & INSTALLMENT PURCHASES","dbadc03c":"## PURCHASES AND INSTALLMENT PURCHASES","aa54eeb0":"## BALANCE AND % OF FULL PAYMENTS","3e986109":"## LIMIT  AND PAYMEMTS","3795597d":"## BALANCE AND BALANCE FREQUENCY","ca1d2313":"## PURCHASE AND PURCHASE FREQUENCY","b6c0d785":"## Densityplots to distinguish anomalous from normal:","4a8df58a":"## PURCHASE FREQUENCY AND ONEOFF PURCHASE FREQUENCY"}}