{"cell_type":{"698d05d6":"code","460840c2":"code","6bd16149":"code","ad3aa07f":"code","c8d21947":"code","a260099f":"code","b57b7f9f":"code","73f626ed":"code","802c90cf":"code","6ec40b49":"code","ce886036":"code","32f78683":"code","774339a1":"code","662c6f64":"code","3230bcdc":"code","65797246":"code","b3f10898":"code","2b333e3c":"code","467f43f1":"code","15bff249":"code","4ef24c40":"code","629c421c":"code","9199e414":"code","69e397c7":"code","a868629f":"code","8769bad3":"markdown"},"source":{"698d05d6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","460840c2":"Ticket_df = pd.read_csv('..\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/AnnualTicketSales.csv')","6bd16149":"Ticket_df.head()","ad3aa07f":"Ticket_df=Ticket_df.drop(['Unnamed: 5'], axis=1)","c8d21947":"Ticket_df.columns","a260099f":"def rm_symbols(dataframe,column_name):\n    temp=[]\n    for i in dataframe[column_name]:\n        temp.append(i.replace('$','').replace(',',''))\n    dataframe[column_name]=temp","b57b7f9f":"rm_symbols(Ticket_df,'TICKETS SOLD')\nrm_symbols(Ticket_df,'TOTAL BOX OFFICE')\nrm_symbols(Ticket_df,'TOTAL INFLATION ADJUSTED BOX OFFICE')\nrm_symbols(Ticket_df,'AVERAGE TICKET PRICE')","73f626ed":"Ticket_df.head()","802c90cf":"Ticket_df = Ticket_df.astype(float)","6ec40b49":"import matplotlib.pyplot as plt\nimport plotly.express as px","ce886036":"fig = px.bar(Ticket_df, x='YEAR', y='TICKETS SOLD', orientation='v', color='YEAR')\nfig.show()","32f78683":"fig = px.pie(Ticket_df, values='TOTAL BOX OFFICE',names='YEAR')\nfig.show()","774339a1":"fig = px.bar(Ticket_df, x='YEAR', y='AVERAGE TICKET PRICE', orientation='v', color='AVERAGE TICKET PRICE')\nfig.show()","662c6f64":"Highest_Gross = pd.read_csv('..\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/HighestGrossers.csv')\nHighest_Gross.head(10)","3230bcdc":"rm_symbols(Highest_Gross,'TOTAL FOR YEAR')\nrm_symbols(Highest_Gross,'TOTAL IN 2019 DOLLARS')\nrm_symbols(Highest_Gross,'TICKETS SOLD')","65797246":"Highest_Gross.head(5)","b3f10898":"Highest_Gross.columns","2b333e3c":"Highest_Gross=Highest_Gross.dropna(subset=['GENRE'])","467f43f1":"Highest_Gross['GENRE'].unique()","15bff249":"sum_genre=[]\nsum_genre=Highest_Gross.groupby('GENRE')['TICKETS SOLD'].sum().tolist()\nlist(np.float_(sum_genre))\n","4ef24c40":"genre=[]\ngenre=Highest_Gross['GENRE'].unique().tolist()\ngenre","629c421c":"fig= px.pie(Highest_Gross, values='TICKETS SOLD' , names='MOVIE')\nfig.show()\n","9199e414":"Highest_Gross = Highest_Gross.apply(pd.to_numeric, errors='ignore')","69e397c7":"fig = px.bar(Highest_Gross, x=Highest_Gross['MOVIE'].head(10),y=Highest_Gross['TOTAL FOR YEAR'].head(10),color=Highest_Gross['MOVIE'].head(10)).update_xaxes(categoryorder='total ascending')\nfig.show()","a868629f":"fig = px.bar(Highest_Gross, x=Highest_Gross['MOVIE'].head(10),y=Highest_Gross['TOTAL FOR YEAR'].head(10),color=Highest_Gross['MOVIE'].head(10)).update_xaxes(categoryorder='total descending')\nfig.show()","8769bad3":"> **Tickets Sold Vs Year**"}}