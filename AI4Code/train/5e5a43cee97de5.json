{"cell_type":{"1117696b":"code","2480eb03":"code","0e4c7f34":"code","0ed50f66":"code","2c135ca5":"code","bc12a9bf":"code","cfccd4ff":"code","75ba95e8":"code","fc6459c8":"code","b8515dd4":"code","1b956c2d":"code","ef925c40":"code","f3eb1283":"code","140aeffc":"code","89d6a681":"code","184ee304":"code","adea81a2":"code","76ae0fb0":"code","a682c431":"code","e587b783":"code","b7dab176":"code","c31dc4b3":"code","7372a9b6":"code","ae3e095d":"markdown","327c2a2d":"markdown","1af12df7":"markdown"},"source":{"1117696b":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_squared_error","2480eb03":"train = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-feb-2021\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-feb-2021\/test.csv\")\nsample_submission = pd.read_csv('..\/input\/tabular-playground-series-feb-2021\/sample_submission.csv')","0e4c7f34":"train.head()","0ed50f66":"train.columns","2c135ca5":"train.shape","bc12a9bf":"train.isnull().sum()","cfccd4ff":"train.describe(exclude = 'number')","75ba95e8":"train.describe()","fc6459c8":"train = train.drop('id', axis = 1)","b8515dd4":"import matplotlib.pyplot as plt\n\nplt.figure(figsize=(10,8))\n\nsns.boxplot(data = train);","1b956c2d":"plt.figure(figsize=(12,10))\nsns.heatmap(train.corr(), annot= True);","ef925c40":"rfr = RandomForestRegressor(max_depth=5)","f3eb1283":"categorical_cols = ['cat0', 'cat1', 'cat2', 'cat3', 'cat4', 'cat5', 'cat6', 'cat7','cat8', 'cat9']\n\ncat_encoded_train = pd.get_dummies(train[categorical_cols])","140aeffc":"train = pd.concat([train, cat_encoded_train], axis= 1)\ntrain = train.drop(categorical_cols, axis =1)","89d6a681":"train.columns","184ee304":"from sklearn.model_selection import train_test_split\n\nx = train.drop('target', axis = 1)\ny = train.target\n\nx_train, x_test, y_train, y_test = train_test_split(x,y,train_size = 0.7)","adea81a2":"import time","76ae0fb0":"%time model = rfr.fit(x_train, y_train)","a682c431":"preds = rfr.predict(x_test)","e587b783":"from sklearn.metrics import *\n\nmean_squared_error(y_test, preds)","b7dab176":"mean_absolute_error(y_test, preds)","c31dc4b3":"sample_submission.tail()","7372a9b6":"# good luck, have fun!","ae3e095d":"#### Load data...","327c2a2d":"### Look at data...","1af12df7":"# Do your stuff...\n\n### Deleverables\n- EDA\n    - What's going on?\n    - Show me the data...\n    - Bonus: Other \/ Etc...\n- Model\n    - [RandomForestRegressor()](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.ensemble.RandomForestRegressor.html)\n    - Bonus: [KNeighborsRegressor()](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.neighbors.KNeighborsRegressor.html)\n    - Bonus: Other \/ Etc...\n- Evaluation\n    - mean_squared_error()\n    - Bonus: [roc_auc_score()](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.metrics.roc_auc_score.html)\n    - Bonus: Other \/ Etc...\n- RAPIDS Bonus\n    - Apply RAPIDS ([Starter Notebook](https:\/\/www.kaggle.com\/tunguz\/tps-feb-2021-rapids-starter))\n    - Replace pandas with cuDF & sklearn with cuML "}}