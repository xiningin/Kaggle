{"cell_type":{"b7dcc344":"code","c4e44be3":"code","cd0411e6":"code","adac3f79":"code","b8b0bc23":"code","ad241f6e":"code","de30d404":"code","62e17dcf":"code","5dfc91ca":"code","ebd2e03e":"code","bf3fb38d":"code","37e7440b":"code","e54aff58":"code","323227b7":"code","300ff880":"code","358d4123":"code","66019dee":"code","e4417365":"code","45bd75f1":"code","48c7aae4":"code","a5e16d5d":"markdown","d474171d":"markdown","7191880a":"markdown","463f4e42":"markdown","6eb34d0f":"markdown","34b04aaf":"markdown","04da5965":"markdown","78a84e26":"markdown","877dd5f8":"markdown"},"source":{"b7dcc344":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nfrom matplotlib.colors import ListedColormap\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c4e44be3":"df =pd.read_csv('..\/input\/students-performance-in-exams\/StudentsPerformance.csv')","cd0411e6":"df.head()","adac3f79":"df.info()","b8b0bc23":"df.describe().transpose()","ad241f6e":"sns.countplot(x='race\/ethnicity',data=df,palette='viridis')","de30d404":"sns.heatmap(df.corr(),vmin=-1,annot=True)","62e17dcf":"fig, axes = plt.subplots(1, 3, figsize=(18, 6))\n\nsns.countplot(ax=axes[0],x='gender',data=df,palette='coolwarm')\nsns.countplot(ax=axes[1],x='lunch',data=df,palette='colorblind')\nsns.countplot(ax=axes[2],x='test preparation course',data=df,palette='deep')","5dfc91ca":"fig, axes = plt.subplots(3, 1, figsize=(12, 10))\n\nsns.histplot(ax=axes[0],x='math score',data=df,\n             hue='test preparation course',palette=[\"silver\",'limegreen']) \n\nsns.histplot(ax=axes[1],x='reading score',data=df,\n             hue='test preparation course',palette=[\"silver\",'limegreen'])\n\nsns.histplot(ax=axes[2],x='writing score',data=df,\n             hue='test preparation course',palette=[\"silver\",'limegreen'])","ebd2e03e":"fig, axes = plt.subplots(3, 1, figsize=(8, 10))\n\nsns.scatterplot(ax=axes[0],x='math score',y='reading score',\n                data=df,hue='gender', palette=[\"pink\",'c'])\n\nsns.scatterplot(ax=axes[1],x='math score',y='writing score',\n                data=df,hue='gender', palette=[\"pink\",'c'])\n\nsns.scatterplot(ax=axes[2],x='reading score',y='writing score',\n                data=df,hue='gender', palette=[\"pink\",'c'])","bf3fb38d":"fig = plt.figure(figsize=(10,10))\nax = fig.add_subplot(111, projection = '3d')\n\nx = df['math score']\ny = df['reading score']\nz = df['writing score']\n\nax.set_xlabel(\"math score\")\nax.set_ylabel(\"reading score\")\nax.set_zlabel(\"writing score\")\n\n#cmap = ListedColormap(sns.color_palette(\"husl\", 256).as_hex())\n#sc = ax.scatter(x, y, z, s=15, c=x, marker='o', cmap=cmap, alpha=1)\n#plt.legend(*sc.legend_elements(), bbox_to_anchor=(1.05, 1), loc=2)\n\nfor s in df.gender.unique():\n    ax.scatter(df['math score'][df.gender==s],df['writing score']\n               [df.gender==s],df['reading score'][df.gender==s],label=s)\n\nax.legend()","37e7440b":"sns.jointplot(x='math score',y='reading score',data=df,hue='lunch',palette='deep')","e54aff58":"sns.jointplot(x='math score',y='reading score',data=df,\n              hue='test preparation course',palette=['tomato','dodgerblue'])","323227b7":"def grader(x):  # a function to generate grades \n    if x>85:\n        return 'A'\n    elif (x>70 and x<= 85):\n        return 'B'\n    elif (x>55 and x<=70):\n        return 'C' \n    elif (x>40 and x<=55):\n        return 'D'\n    else:\n        return 'E'","300ff880":"df['overall score'] = (df['math score'] + df['writing score'] + df['reading score'])\/3\n\ndf['grade'] = df['overall score'].apply(grader) \n","358d4123":"sns.countplot(x='grade',data=df)","66019dee":"sns.histplot(x='overall score',data =df,bins=30,kde=True,color='darkblue')","e4417365":"plt.figure(figsize=(10,8))\nsns.swarmplot(x='parental level of education',y='overall score',data=df)","45bd75f1":"plt.figure(figsize=(10,6))\nsns.countplot(x='parental level of education',data=df,palette='deep',hue='test preparation course')","48c7aae4":"fig, axes = plt.subplots(2, 1, figsize=(8, 10))\n\nsns.boxplot(ax=axes[0],x='race\/ethnicity',\n            y='overall score',data=df)\n\nsns.scatterplot(ax=axes[1],x='reading score',\n                y='math score', hue='race\/ethnicity',data=df)","a5e16d5d":"## Adding overall Score and Grades column","d474171d":"### **Observation:** \nstudents who **completed their test preparation performed better** than those who didn't prepare.","7191880a":"### **Observation**:\nstudents with standard lunch performed better than students who had free\/reduced lunch.","463f4e42":"# Importing Libraries","6eb34d0f":"## Data Loading & the Usuals","34b04aaf":"### **Observation:** \nKids whose parents had a Master's Degree performed slightly better compared to the rest, but not so great variance.","04da5965":"### ***Observation:*** \n* from the above 2 graphs it is clearly visible that **race\/ethnicity has got no relation with the performance of the kids** during exam\n* in the box plot each ethnicity group performed very similar (group A performed a little less well comapered to other groups because the number of kids in group A are also very less)","78a84e26":"# Exploratory Data Analysis","877dd5f8":"### **Observations:**\n* from graph 1 and 2 it is very clear that boys performed better in maths \n* in graph 3 we can see that girls performed better in reading and writing"}}