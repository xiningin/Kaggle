{"cell_type":{"5ccf647a":"code","63bbce46":"code","319fc945":"code","a4c41e01":"code","58bccb2f":"code","f911f8f6":"code","6d48755a":"code","9ba47764":"markdown","d923ef4c":"markdown","9430a7ff":"markdown","de7e4600":"markdown"},"source":{"5ccf647a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n!pip install pywedge\nimport pywedge as pw\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","63bbce46":"train_df=pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/train.csv')\ntrain_df.head()","319fc945":"test_df=pd.read_csv('..\/input\/tabular-playground-series-jun-2021\/test.csv')\ntest_df.head()","a4c41e01":"print(\"Shape of Train Data:\",train_df.shape)\nprint(\"Shape of Test Data:\",test_df.shape)","58bccb2f":"train_df.describe()","f911f8f6":"train_df.info()","6d48755a":"dash = pw.Pywedge_Charts(train_df, c=None, y='target')\ndashboard = dash.make_charts()","9ba47764":"### Overview of Datasets","d923ef4c":"# EDA using Pywedge\n\n## What is Pywedge?\n\nPywedge is an open-source python library which is a complete package that helps you in Visualizing the data, Pre-process the data and also create some baseline models which can be further tuned to make the best machine learning model for the data.\n\n!pip install pywedge\n\nimport pywedge as pw","9430a7ff":"### Load the Datasets","de7e4600":"# ***Thank you for reading this, I will try update as much as I can.***"}}