{"cell_type":{"60a811a3":"code","38528647":"code","fd5592b9":"code","69c1e6d5":"code","f1564c23":"code","771f129d":"code","e3f87dc2":"code","56c83054":"code","442e82b4":"code","a98661af":"code","caf258f0":"code","f28f44f7":"code","8e83cf3b":"code","f2dd5329":"code","3a23f935":"code","972a7e61":"code","584e3f5a":"code","7814b733":"code","cb3e4ac3":"code","07fa9b8c":"code","555dfa30":"markdown","10ba553e":"markdown","dec7f1e4":"markdown","ddf94878":"markdown","36e8214c":"markdown","742e9c6e":"markdown","9cf0545f":"markdown","822db8ae":"markdown","7e0cd191":"markdown","87456318":"markdown","cb5e42f0":"markdown","053329a5":"markdown","4fa4eea3":"markdown","8ebb6d93":"markdown","eda7d94f":"markdown","ef65921a":"markdown","32431c28":"markdown","005ea700":"markdown","436f33d1":"markdown","453c457b":"markdown","b4355076":"markdown","1ec1e63c":"markdown","b41fe484":"markdown","9e0792f9":"markdown"},"source":{"60a811a3":"import seaborn as sns\nimport matplotlib.pyplot as plt \nimport os \nimport pandas as pd \nimport numpy as np\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.cluster import KMeans","38528647":"os.listdir(\"..\/input\/\")","fd5592b9":"filename = \"..\/input\/StudentsPerformance.csv\"\nscore_df = pd.read_csv(filename)\nscore_df.head()","69c1e6d5":"score_df.rename(columns={\"race\/ethnicity\":\"ethnicity\",\"parental level of education\":\"parent_education\"\n                    ,\"math score\":\"math\",\"reading score\":\"reading\",\"writing score\":\"writing\",\n                    \"test preparation course\":\"pre\"},inplace=True)\nscore_df.head()","f1564c23":"score_df.dtypes","771f129d":"fig, ax = plt.subplots()\nfig.subplots_adjust(hspace=0.8, wspace=0.8, left = 0.2, right = 1.5)\nfor idx in range(3):\n    plt.subplot(1,3, idx+1)\n    gender_df = score_df.groupby(\"gender\")[list(score_df.columns[-3:])[idx]].describe()\n    sns.barplot(gender_df.index, gender_df.loc[:,\"mean\"].values)\n    plt.ylabel(\"score\")\n    plt.title(list(score_df.columns[-3:])[idx])\n    \nplt.show()","e3f87dc2":"fig, ax = plt.subplots()\nfig.subplots_adjust(hspace=0.8, wspace=0.8, left = 0.2, right = 1.5)\nfor idx in range(3):\n    plt.subplot(1,3, idx+1)\n    ethn_df = score_df.groupby(\"ethnicity\")[list(score_df.columns[-3:])[idx]].mean()\n    sns.barplot(x=ethn_df.index, y = ethn_df.values, palette = \"Greens\")\n    plt.xlabel(\"Group\")\n    plt.ylabel(\"mean score\")\n    plt.xticks(rotation=90)\n    plt.title(list(score_df.columns[-3:])[idx])\nplt.show()","56c83054":"for item in score_df.columns[-3:]:\n    sns.boxplot(x=score_df[\"pre\"], y=score_df[item])\n    plt.title(item+\" vs pre test\", loc=\"left\")\n    plt.show()","442e82b4":"for item in score_df.columns[-3:]:\n    sns.boxplot(x=score_df[\"lunch\"], y=score_df[item])\n    plt.title(item+\" vs lunch\", loc=\"left\")\n    plt.show()","a98661af":"labelencoder = LabelEncoder()\ntrain_df = score_df.copy()\ntrain_df[\"parent_education\"] = labelencoder.fit_transform(train_df[\"parent_education\"])\ntrain_df[\"pre\"] = labelencoder.fit_transform(train_df[\"pre\"])\ntrain_df[\"lunch\"] = labelencoder.fit_transform(train_df[\"lunch\"])\ntrain_df.head()","caf258f0":"kmeans_dis = list()\nfor idx in range(2, 25):  \n    kmeans = KMeans(init = \"k-means++\", n_clusters = idx, n_init = 20)\n    kmeans.fit_transform(train_df.iloc[:, 2:])\n    kmeans_dis.append(kmeans.inertia_)\nplt.plot(list(range(2,25)), kmeans_dis, marker = \"o\")\nplt.xlabel(\"Number of clusters\")\nplt.ylabel(\"Summation of distance\")\nplt.show()","f28f44f7":"kmeans = KMeans(init = \"k-means++\", n_clusters = 8)\nkmeans.fit_transform(train_df.iloc[:, 2:])\nkmeans_label = kmeans.labels_\nscore_df[\"classification\"] = kmeans_label\nscore_df.head(10)","8e83cf3b":"class_df = score_df.groupby(\"classification\")[score_df.columns[-4:-1]].mean()\nclass_df","f2dd5329":"ind = np.arange(8)\nwidth = 0.35\nfig, ax = plt.subplots()\nrects1 = ax.bar(ind - width\/2, class_df.math, width, label='Math')\nrects2 = ax.bar(ind, class_df.reading, width, label='Reading')\nrects3 = ax.bar(ind + width\/2, class_df.writing, width, label='Writing')\n\nax.set_xlabel('Classiffication')\nax.set_ylabel('Scores')\nax.set_xticks(ind)\nax.legend()\nplt.show()","3a23f935":"class_df[\"total_ave_score\"] = (class_df.math + class_df.reading + class_df.writing)\/3\nrank = class_df[\"total_ave_score\"].sort_values(ascending = False)\nrank.index","972a7e61":"rank","584e3f5a":"def plot_pie_chart(column):\n    fig, ax = plt.subplots(figsize=(20,16))\n    color = [\"orange\",\"lightblue\",\"green\",\"yellow\",\"red\",\"pink\",\"brown\",\"gray\"]\n    for idx in range(8):\n        plt.subplot(3, 3, idx+1)\n        num = \"class\"+ str(idx)\n        num = score_df[score_df[\"classification\"]==rank.index[idx]]\n        percentage_of_parent_edu = num[column].value_counts()\n        percentage_of_parent_edu.sort_index()\n        label = percentage_of_parent_edu.index\n        value = percentage_of_parent_edu.values\n        plt.pie(value, labels = label, autopct = \"%1.1f%%\",\n                startangle=90, radius = 4, colors = color[:len(label)])\n        plt.axis(\"equal\")\n        plt.title(\"Rank \"+str(idx))\n    plt.show()\nplot_pie_chart(\"parent_education\")","7814b733":"def plot_bar_chart(column):\n    fig, ax = plt.subplots(figsize=(8,6))\n    index_dict = dict()\n    width = 0.35\n    ind = np.arange(8)\n    for idx in range(8):\n        num = \"class\"+ str(idx)\n        num = score_df[score_df[\"classification\"]==rank.index[idx]]\n        percentage_of_column = num[column].value_counts()\n        percentage_of_column = percentage_of_column.sort_index()\n        for key in percentage_of_column.index:\n            if key not in index_dict.keys():\n                index_dict[key] = []\n                index_dict[key].append(percentage_of_column[key]) #\/percentage_of_column.values.sum())\n            else:\n                index_dict[key].append(percentage_of_column[key]) #\/percentage_of_column.values.sum())\n   \n    percentage_of_column = score_df[score_df[\"classification\"]==rank.index[4]][column].value_counts().sort_index()\n    for i in range(len(percentage_of_column.index)):\n        rects = ax.bar(ind - width\/(i+1), \n                       index_dict[percentage_of_column.index[i]],\n                       width, label=percentage_of_column.index[i])\n\n    ax.set_xlabel('Rank')\n    ax.set_ylabel('# of students')\n    ax.set_title(\"Percentage of \" + column)\n    ax.set_xticks(ind)\n    ax.legend()\n    plt.show()\n    \nplot_bar_chart(\"pre\") ","cb3e4ac3":"plot_bar_chart(\"lunch\")","07fa9b8c":"plot_bar_chart(\"gender\")","555dfa30":"Obviously, group E has best performance for all the fields, and group A is the worst.","10ba553e":"We deal with the data type later.\nFirstly, let's figure out the performance of each field for male and female.","dec7f1e4":"Good! We choose 8 as elbow point, and then classify all data. ","ddf94878":"The score distribution got narrower if students complete the preparation before test, and also we can see that the average of the score is better.\n","36e8214c":"It's hard to say that the male is better than female.","742e9c6e":"## Conclusion\nThere are few conclusions below:\n1. Parents' education level may affect the performance of students, but not the important one.\n2. Finishing preparation course is benefitial. \n3. Having lunch is important to students, and it is also the most significant   one.\n4. Gender has no correlation with the score.\n\nIn summary, if students want to have good performance, they should have enough nutrient and make effort to prepare the test.  ","9cf0545f":"How about the test preparation course?","822db8ae":"Then let's see the result of score and test preparation.  ","7e0cd191":"Some column names are too long, rename the column names to be simpler. ","87456318":"Nice! Over 50% of students in rank0 completed the test preparation course, and normally there is about 70~80% students in rank7 hadn't finished course. \nIt is say that preparation course can help students get better score.","cb5e42f0":"We can see that male has better performance on math field, but worse on reading and writing.\nSecondly, see the performance of ethnicity.","053329a5":"For top5 rank, the average score all passed, Rank0 is the best cluster, Rank1 is second one and so on.","4fa4eea3":"Also the same trend as \"pre\". Students who had lunch before test got better score. That is, it's hard to get good performance without eating. ","8ebb6d93":"After classifing the data, let's see the performance of each cluster.","eda7d94f":"Let's define the high degree of education. Parents having bachelor or master degree are high-level educated. So we focus on these two terms. \n\nAs pie chart were shown above, we can easily understand the ratio of high-degree education. For the rank0, its ratio is around 32%. In addition, there are no differences between rank1 to rank3, and the ratio are around 15~17%. Finally, the ratio is only 8% in rank7.\n\nWe calculated the average score of each rank before, so we can say that parent's education affect the score but not obviously, because there are still 70%~80% parents without high education degree.  ","ef65921a":"We check the data type earily. Then we transform some features by label encoder.","32431c28":"Seems clearly. Check the data type.","005ea700":"## Introduction\n\nTo know which factor may affect the student's performance, we classify the score into couple of ranks, and figure out which feature affects the score more significant. The independent variables are follow:\n\n1. gender : sex of students\n2. race\/ethnicity : ethnicity of students\n3. parental level of education : parents' final education\n4. lunch : having lunch before test (normal or abnormal)\n5. test preparation course : complete or not complete before test","436f33d1":"Great! The features \"parent_education\", \"lunch\" and \"pre\" are labeled by numbers. Next, we use KMeans argorithm to classify the dataset.","453c457b":"From now on, we can find out the correlation between the performance of students and features. Let's plot pie chart to see whether parents education level can affect the performance or not.","b4355076":"Make sense! Students are easier to get better score once they eat standardly.","1ec1e63c":"Up to now, it's obviously that all subject of cluster has the same trend, so we choose the average of all sbjects to rank the clusters","b41fe484":"Only one! Take a look at the dataset.\n","9e0792f9":"Let's see how many datasets in this topic."}}