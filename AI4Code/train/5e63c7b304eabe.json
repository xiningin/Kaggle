{"cell_type":{"5c2dca54":"code","67c883c8":"code","cc497cf1":"code","5739c548":"code","2a9fd541":"code","484c9ecd":"code","c91bd296":"code","8f9fe0af":"code","e0be404b":"code","ab49610e":"code","22c8f298":"code","ac872451":"code","a6b4e98b":"code","a208550c":"code","0675a44d":"code","f4d0167a":"code","d2e09a6e":"code","6f4dafaa":"code","9ae3f722":"code","7573d578":"markdown"},"source":{"5c2dca54":"import pandas as pd","67c883c8":"movies_df = pd.read_csv('..\/input\/movies-recomendation-system\/movies.csv')\nmovies_df.head()","cc497cf1":"movies_df['genres'] = movies_df['genres'].str.split('|')\nmovies_df.head()","5739c548":"'''movies_df['genres'] = movies_df['genres'].apply(lambda x: x.split('|'))\nmovies_df.head()'''","2a9fd541":"movies_df['year'] = movies_df['title'].str.extract('(\\(\\d\\d\\d\\d\\))')\nmovies_df['year'] = movies_df['year'].str.extract('(\\d\\d\\d\\d)')","484c9ecd":"movies_df['title'] = movies_df['title'].str.replace('(\\(\\d\\d\\d\\d\\))', '')\nmovies_df['title'] = movies_df['title'].str.strip()\nmovies_df.head()","c91bd296":"movies_genres = pd.DataFrame()\nmovies_genres[['movieId', 'title']] = movies_df[['movieId', 'title']]\n\nfor index, genres in enumerate(movies_df['genres']):\n    for genre in genres:\n        movies_genres.loc[index, genre] = 1\n        \nmovies_genres = movies_genres.set_index('movieId').fillna(0)\nmovies_genres.head()","8f9fe0af":"'''movies_genres = movies_df.drop(columns=['genres', 'year']).set_index('movieId').fillna(0)\nmovies_genres.head()'''","e0be404b":"'''user = list()\nn_mov = int(input('n_movies: '))\ni = 1\nwhile i <= n_mov:\n    t = input(f'movie title #{i}: ')\n    good = False\n    while not good: \n        r = input(f'movie rating #{i}: ')\n        try:\n            r = float(r)\n            good = True\n        except:\n            print('rating must be a number')\n        \n    user.append({'title': t, 'rating': r})\n    i += 1'''","ab49610e":"'''def user_input_df(list_of_dict=user):\n    return pd.DataFrame(user)'''","22c8f298":"#sample user input\n\nuser_input = [\n            {'title':'Father of the Bride Part II', 'rating':2},\n            {'title':'Zero', 'rating':4.5},\n            {'title':'Jumanji', 'rating':5},\n            {'title':'Bloodmoney', 'rating':3.5},\n            {'title':'The Butterfly Circus', 'rating':1.5}\n         ] \nuser_input = pd.DataFrame(user_input)\nuser_input","ac872451":"user_genre = movies_genres[movies_genres['title'].isin(user_input['title'])].drop(columns=['title']).drop_duplicates().reset_index(drop=True)\nuser_genre","a6b4e98b":"user_profile = user_genre.T.dot(user_input['rating'])\nuser_profile","a208550c":"movies_ratings = (movies_genres.drop(columns=['title']) * user_profile).sum(axis=1).reset_index().rename(columns={0: 'rating'})\nmovies_ratings","0675a44d":"unwatched = movies_df.merge(movies_ratings, on='movieId')[~movies_df['title'].isin(user_input['title'])]\nunwatched","f4d0167a":"movies_rec = unwatched.sort_values(by='rating', ascending=False)\nmovies_rec","d2e09a6e":"def get_recommendation(n_recommendation=10):\n    return movies_rec.drop(columns='rating')[:n_recommendation]","6f4dafaa":"get_recommendation(5)","9ae3f722":"'''n = int(input('input n: '))\nget_recommendation(n)'''","7573d578":"**Sorry I haven't written an explanation for each step**"}}