{"cell_type":{"7e62eb93":"code","bcaa6577":"code","239a5d7a":"code","faf72539":"code","dd68f500":"code","05d9a36d":"code","d28d3169":"code","540a8aa5":"code","847f97d1":"code","d5f743c8":"code","4f9c5a6a":"code","f8b1ba18":"code","5a765449":"code","b0a74e3a":"code","b99290ed":"code","c2000d2e":"code","0f3b148b":"code","d92a7678":"code","78bcb9f2":"code","73484861":"code","cc70f622":"code","4733dd7c":"code","6e281861":"code","b26b043c":"code","5f7cf6e5":"code","8da6ec26":"code","2faa308c":"code","eaa8f2dd":"code","763a6533":"code","62b00783":"code","f0a7334c":"code","e5ebebec":"code","28936a05":"code","5beef2da":"code","63c0ebbf":"code","f3cb2c3c":"code","91c557f1":"code","ed465f6c":"code","0733ebad":"code","54d3282e":"code","f06dafe3":"code","33891e03":"markdown","26962500":"markdown","57ce5706":"markdown","10ea78fe":"markdown","0294c852":"markdown","37baeee0":"markdown","fb3e78dd":"markdown","f3ab5d96":"markdown","a58c369b":"markdown"},"source":{"7e62eb93":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n","bcaa6577":"glass_data=pd.read_csv('..\/input\/glass.csv')\nglass_data.shape","239a5d7a":"glass_data.head()","faf72539":"glass_data['Type'].unique()\nglass_data['Ba'].unique()","dd68f500":"#Check correleation between the variables using Seaborn's pairplot. \nsns.pairplot(glass_data)","05d9a36d":"#count of each target variable\nfrom collections import Counter\nCounter(glass_data['Type'])","d28d3169":"#count of the target variable\nsns.countplot(x='Type', data=glass_data)","540a8aa5":"sns.boxplot('Type', 'RI', data =glass_data)","847f97d1":"sns.boxplot('Type', 'Na', data =glass_data)","d5f743c8":"sns.boxplot('Type', 'Mg', data =glass_data)","4f9c5a6a":"sns.boxplot('Type','Al', data =glass_data)","f8b1ba18":"sns.boxplot('Type','Si', data =glass_data)","5a765449":"sns.boxplot('Type','K', data =glass_data)","b0a74e3a":"sns.boxplot('Type','Ca', data =glass_data)","b99290ed":"sns.boxplot('Type','Ba', data =glass_data)","c2000d2e":"sns.boxplot('Type','Fe', data =glass_data)","0f3b148b":"glass_data.describe()","d92a7678":"#Create an empty list called traget\ntarget = []\nfor i in glass_data['Type']:\n    if i >= 1 and i <= 4:\n        target.append('1')\n    elif i >= 5 and i <= 7:\n        target.append('2')\nglass_data['Target'] = target","78bcb9f2":"glass_data['Target'].unique()","73484861":"print(Counter(glass_data['Target']))","cc70f622":"glass_data.shape","4733dd7c":"glass_data.head()\n#checking up the data set of headers of a file opened","6e281861":"glass_data.drop(['Type'],axis=1,inplace =True)\nglass_data.shape","b26b043c":"x= glass_data.iloc[:,:9]\ny = glass_data['Target']","5f7cf6e5":"x.shape","8da6ec26":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nx = sc.fit_transform(x)","2faa308c":"from sklearn.cross_validation import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.25,random_state=2018)","eaa8f2dd":"x_train.shape,y_train.shape,x_test.shape,y_test.shape","763a6533":"from sklearn.ensemble import RandomForestClassifier\nclf = RandomForestClassifier()\nclf.fit(x_train, y_train)\npredict=clf.predict(x_test)","62b00783":"from sklearn.metrics import confusion_matrix, accuracy_score","f0a7334c":"print(confusion_matrix(y_test,predict))\nprint(accuracy_score(y_test,predict))","e5ebebec":"from sklearn import svm\nfrom sklearn.metrics import accuracy_score, confusion_matrix\nfrom sklearn.model_selection import GridSearchCV","28936a05":"# Grid Search\n# Parameter Grid\nparam_grid = {'C': [0.1,0.8,0.9,1,1.1,1.2,1.3,1.4], 'gamma': [0.1,0.8,0.9,1,1.1,1.2,1.3,1.4]} \n# Make grid search classifier\nclf_grid = GridSearchCV(svm.SVC(), param_grid, verbose=1)\n                \n# Train the classifier\nclf_grid.fit(x_train, y_train)\n\n# clf = grid.best_estimator_()\nprint(\"Best Parameters:\\n\", clf_grid.best_params_)\nprint(\"Best Estimators:\\n\", clf_grid.best_estimator_)","5beef2da":"model = svm.SVC(kernel='rbf', C = 0.9, gamma=0.1)","63c0ebbf":"model.fit(x_train,y_train)","f3cb2c3c":"y_pred=model.predict(x_test)","91c557f1":"print(confusion_matrix(y_test,y_pred))\nprint(accuracy_score(y_test,y_pred))","ed465f6c":"import xgboost","0733ebad":"model1=xgboost.XGBClassifier()","54d3282e":"model1.fit(x_train, y_train)","f06dafe3":"pred = model.predict(x_test)\nprint('Accuracy: ', accuracy_score(y_test, pred))","33891e03":"# xgboost","26962500":"# RandomForestClassifier","57ce5706":"#now we will create a new column called target. This column will contain the values of 1 and 2. \n#1 - Bad\n#3 - Excellent\n#This will be split in the following way. \n#1,4 --> Bad\n#5,7 --> Excellent","10ea78fe":"# K- min - 0.0 and max - 6.21! big difference. Could explain the outliers.\n#Ca,Ba,fe same explanation as above","0294c852":"# Plot a boxplot to check for Outliers","37baeee0":"# RI- 25% - 1.51 and max - 1.53. Not much of a variance. Could explain the huge number of outliers\n#Na,Mg,AI,Si same explanation as above","fb3e78dd":"# So we are going to  plot a boxplot for  each column against target variable","f3ab5d96":"# Scale data","a58c369b":"# Svm with GridSearchCV"}}