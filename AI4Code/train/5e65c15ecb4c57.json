{"cell_type":{"b584f434":"code","328a407c":"code","bcb88ca2":"code","79dad75e":"code","2fdf7183":"code","6e304fc6":"code","1df14e52":"code","d17acc05":"code","a74eb06c":"code","d4cadd87":"code","61a8e9a3":"code","974734ea":"code","60f972f0":"code","0c14964b":"code","98341d50":"code","36d9b6d5":"code","3f849646":"code","ae2bc839":"code","ea6f09a8":"code","e6b85d49":"code","8f8616e8":"code","e7d0ec6c":"code","92884948":"code","d23ada4f":"code","edae0c60":"code","6988a4bd":"code","e00d497b":"code","4007fb5a":"code","2435f286":"code","7a5875da":"code","2fc6e34f":"code","da45eb1e":"code","4ca6361b":"code","dae5b4b2":"code","41c85c23":"code","b3765677":"markdown","04ae0db3":"markdown","95232efc":"markdown","f074699b":"markdown","37cb02cf":"markdown","2211f7db":"markdown","3554d325":"markdown","56e7f03a":"markdown","255e0bb3":"markdown","d87b7249":"markdown","9de82e2f":"markdown","aa57271e":"markdown","e125157c":"markdown"},"source":{"b584f434":"#Importing required packages.\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.preprocessing import StandardScaler, LabelEncoder\nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\n%matplotlib inline","328a407c":"#Loading dataset\nwine = pd.read_csv('..\/input\/winequality-red.csv')","bcb88ca2":"#Let's check how the data is distributed\nwine.head()","79dad75e":"#Information about the data columns\nwine.info()","2fdf7183":"#Here we see that fixed acidity does not give any specification to classify the quality.\nfig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'fixed acidity', data = wine)","6e304fc6":"#Here we see that its quite a downing trend in the volatile acidity as we go higher the quality \nfig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'volatile acidity', data = wine)","1df14e52":"#Composition of citric acid go higher as we go higher in the quality of the wine\nfig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'citric acid', data = wine)","d17acc05":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'residual sugar', data = wine)","a74eb06c":"#Composition of chloride also go down as we go higher in the quality of the wine\nfig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'chlorides', data = wine)","d4cadd87":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'free sulfur dioxide', data = wine)","61a8e9a3":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'total sulfur dioxide', data = wine)","974734ea":"#Sulphates level goes higher with the quality of wine\nfig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'sulphates', data = wine)","60f972f0":"#Alcohol level also goes higher as te quality of wine increases\nfig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'alcohol', data = wine)","0c14964b":"#Making binary classificaion for the response variable.\n#Dividing wine as good and bad by giving the limit for the quality\nbins = (2, 6.5, 8)\ngroup_names = ['bad', 'good']\nwine['quality'] = pd.cut(wine['quality'], bins = bins, labels = group_names)","98341d50":"#Now lets assign a labels to our quality variable\nlabel_quality = LabelEncoder()","36d9b6d5":"#Bad becomes 0 and good becomes 1 \nwine['quality'] = label_quality.fit_transform(wine['quality'])","3f849646":"wine['quality'].value_counts()","ae2bc839":"sns.countplot(wine['quality'])","ea6f09a8":"#Now seperate the dataset as response variable and feature variabes\nX = wine.drop('quality', axis = 1)\ny = wine['quality']","e6b85d49":"#Train and Test splitting of data \nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)","8f8616e8":"#Applying Standard scaling to get optimized result\nsc = StandardScaler()","e7d0ec6c":"X_train = sc.fit_transform(X_train)\nX_test = sc.fit_transform(X_test)","92884948":"rfc = RandomForestClassifier(n_estimators=200)\nrfc.fit(X_train, y_train)\npred_rfc = rfc.predict(X_test)","d23ada4f":"#Let's see how our model performed\nprint(classification_report(y_test, pred_rfc))","edae0c60":"#Confusion matrix for the random forest classification\nprint(confusion_matrix(y_test, pred_rfc))","6988a4bd":"sgd = SGDClassifier(penalty=None)\nsgd.fit(X_train, y_train)\npred_sgd = sgd.predict(X_test)","e00d497b":"print(classification_report(y_test, pred_sgd))","4007fb5a":"print(confusion_matrix(y_test, pred_sgd))","2435f286":"svc = SVC()\nsvc.fit(X_train, y_train)\npred_svc = svc.predict(X_test)","7a5875da":"print(classification_report(y_test, pred_svc))","2fc6e34f":"#Finding best parameters for our SVC model\nparam = {\n    'C': [0.1,0.8,0.9,1,1.1,1.2,1.3,1.4],\n    'kernel':['linear', 'rbf'],\n    'gamma' :[0.1,0.8,0.9,1,1.1,1.2,1.3,1.4]\n}\ngrid_svc = GridSearchCV(svc, param_grid=param, scoring='accuracy', cv=10)","da45eb1e":"grid_svc.fit(X_train, y_train)","4ca6361b":"#Best parameters for our svc model\ngrid_svc.best_params_","dae5b4b2":"#Let's run our SVC again with the best parameters.\nsvc2 = SVC(C = 1.2, gamma =  0.9, kernel= 'rbf')\nsvc2.fit(X_train, y_train)\npred_svc2 = svc2.predict(X_test)\nprint(classification_report(y_test, pred_svc2))","41c85c23":"#Now lets try to do some evaluation for random forest model using cross validation.\nrfc_eval = cross_val_score(estimator = rfc, X = X_train, y = y_train, cv = 10)\nrfc_eval.mean()","b3765677":"\n\n## Stochastic Gradient Decent Classifier","04ae0db3":"### Random Forest Classifier","95232efc":"## Cross Validation Score for random forest and SGD","f074699b":"#### Support vector classifier gets 86%","37cb02cf":"## Support Vector Classifier","2211f7db":"### SVC improves from 86% to 90% using Grid Search CV","3554d325":"## Our training and testing data is ready now to perform machine learning algorithm","56e7f03a":"\n*In this notebook, First I have done some exploration on the data using matplotlib and seaborn.\nThen, I use different classifier models to predict the quality of the wine.*\n\n**1. Random Forest Classifier**\n\n**2. Stochastic Gradient Descent Classifier**\n\n**3. Support Vector Classifier(SVC) **\n\n*Then I use cross validation evaluation technique to optimize the model performance.*\n\n**1. Grid Search CV**\n\n**2. Cross Validation Score**\n\n","255e0bb3":"## **Let's do some plotting to know how the data columns are distributed in the dataset**","d87b7249":"#### Random forest gives the accuracy of 87%","9de82e2f":"## Preprocessing Data for performing Machine learning algorithms","aa57271e":"## Let's try to increase our accuracy of models\n## Grid Search CV","e125157c":"#### 84% accuracy using stochastic gradient descent classifier"}}