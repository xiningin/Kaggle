{"cell_type":{"719b826b":"code","d9a35149":"code","88e451aa":"code","1ae007dd":"code","8e278ad9":"code","23264b60":"code","40be607e":"code","c1431a11":"code","831082e2":"code","fe58e05d":"code","d20b59b3":"code","0e85fd63":"code","8b585d02":"code","e4542ba6":"code","f70b10a8":"code","e6516368":"code","d6855bd5":"code","380a3c3f":"markdown","aefae68b":"markdown","a1c54386":"markdown","fd980d91":"markdown","17fdc41a":"markdown","8feb848a":"markdown","2e52d501":"markdown","2f88c126":"markdown","42793a93":"markdown","8d7943f5":"markdown","4ce8adf9":"markdown","af99f121":"markdown","be248df9":"markdown","e6d634a9":"markdown","069a3b2b":"markdown","d04860ee":"markdown","923b9378":"markdown","800ce63a":"markdown","5cbc1c33":"markdown","0011a697":"markdown","c2a7ea31":"markdown","006e2ddb":"markdown"},"source":{"719b826b":"import pandas as pd\nimport seaborn as sns\nfrom learntools.advanced_pandas.indexing_selecting_assigning import *\n\nreviews = pd.read_csv(\"..\/input\/wine-reviews\/winemag-data-130k-v2.csv\", index_col=0)\npd.set_option(\"display.max_rows\", 5)","d9a35149":"reviews.head()","88e451aa":"check_q1(pd.DataFrame())","1ae007dd":"# Your code here\ndf = reviews['description']\nprint(df.head())\nprint(check_q1(df))","8e278ad9":"# Your code here\ndf = reviews['description'][0]\nprint(df)\nprint(check_q2(df))","23264b60":"# Your code here\ndf = reviews.iloc[0]\nprint(df)\nprint(check_q3(df))","40be607e":"# Your code here\ndf = pd.Series(reviews['description'].loc[:9])\nprint(df)\nprint(check_q4(df))","c1431a11":"# Your code here\ndf = reviews.iloc[[1,2,3,5,8]]\nprint(df)\nprint(check_q5(df))","831082e2":"# Your code here\ndf = reviews.loc[[0,1,10,100], ['country', 'province', 'region_1', 'region_2']]\nprint(df)\nprint(check_q6(df))","fe58e05d":"# Your code here\ndf = reviews.loc[:100, ['country', 'variety']]\nprint(df)\nprint(check_q7(df))","d20b59b3":"# Your code here\ndf = reviews[reviews['country'] == 'Italy']\nprint(df)\nprint(check_q8(df))","0e85fd63":"# Your code here\ndf = reviews[reviews['region_2'].notnull()]\nprint(df)\nprint(check_q9(df))","8b585d02":"# Your code here\ndf = reviews['points']\nprint(df)\nprint(check_q10(df))","e4542ba6":"# Your code here\ndf = reviews['points'][:1000]\nprint(df)\nprint(check_q11(df))","f70b10a8":"# Your code here\ndf = reviews['points'][-1000:]\nprint(df)\nprint(check_q12(df))","e6516368":"# Your code here\ndf = reviews[reviews['country'] == \"Italy\"]['points']\nprint(df)\nprint(check_q13(df))","d6855bd5":"# Your code here\ndf = reviews[(reviews.country.isin([\"France\",\"Italy\"])) & (reviews['points'] >=90)]['country']\nprint(df)\nprint(check_q14(df))","380a3c3f":"# Checking Answers\n\nYou can check your answers in each of the exercises that follow using the  `check_qN` function provided in the code cell above (replacing `N` with the number of the exercise). For example here's how you would check an incorrect answer to exercise 1:","aefae68b":"**Exercise 11**: <!--What is the distribution of reviews scores for the first 1000 wines in the dataset?--> Select the `points` column for the first 1000 wines.","a1c54386":"**Exercise 3**: Select the first row of data (the first record) from `reviews`. Hint: from this exercise onwards I strongly recommend using `loc` or `iloc`.","fd980d91":"For the first set of questions, if you use `check_qN` on your answer, and your answer is right, a simple `True` value will be returned.\n\nFor the second set of questions, using this function to check a correct answer will present you will an informative graph!\n\nIf you get stuck, use `answer_qN` function to print the answer outright.","17fdc41a":"**Exercise 4**: Select the first 10 values from the `description` column in `reviews`. Hint: format your output as a `pandas` `Series`.","8feb848a":"## Keep going\n\nMove on to the [**Summary functions and maps workbook**](https:\/\/www.kaggle.com\/kernels\/fork\/595524).","2e52d501":"**Exercise 2**: Select the first value from the description column of `reviews`.","2f88c126":"**Exercise 14**: Who produces more above-averagely good wines, France or Italy? Select the `country` column, but only  when said `country` is one of those two options, _and_ the `points` column is greater than or equal to 90.\n\nYour output should look roughly like this:\n```\n119       France\n120        Italy\n           ...  \n129969    France\n129970    France\nName: country, Length: 15840, dtype: object\n```","42793a93":"The remaining exercises are visual.","8d7943f5":"Look at an overview of your data by running the following line","4ce8adf9":"**Exercise 1**: Select the `description` column from `reviews`.","af99f121":"**Exercise 9**: Select wines whose `region_2` is not `NaN`.","be248df9":"**Exercise 6**: Select the `country`, `province`, `region_1`, and `region_2` columns of the records with the `0`, `1`, `10`, and `100` index positions. In other words, generate the following `DataFrame`:\n\n![](https:\/\/i.imgur.com\/FUCGiKP.png)","e6d634a9":"# Exercises","069a3b2b":"# Introduction\n\nMost projects requiring selecting specific values from a `DataFrame` or `Series`. You will work on that skill here using the [Wine Reviews dataset](https:\/\/www.kaggle.com\/zynicide\/wine-reviews). \n\n# Relevant Resources\n* **[Quickstart to indexing and selecting data](https:\/\/www.kaggle.com\/residentmario\/indexing-and-selecting-data\/)** \n* [Indexing and Selecting Data](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/indexing.html) section of pandas documentation\n* [Pandas Cheat Sheet](https:\/\/assets.datacamp.com\/blog_assets\/PandasPythonForDataScience.pdf)\n\n\n","d04860ee":"**Exercise 5**: Select the records with the `1`, `2`, `3`, `5`, and `8` row index positions. In other words, generate the following`DataFrame`:\n\n![](https:\/\/i.imgur.com\/sHZvI1O.png)","923b9378":"**Exercise 12**: <!--What is the distribution of reviews scores for the last 1000 wines in the dataset?--> Select the `points` column for the last 1000 wines.","800ce63a":"**Exercise 8**: Select wines made in `Italy`. Hint: `reviews.country` equals what?","5cbc1c33":"**Exercise 13**: <!--What is the distribution of reviews scores for wines made in Italy?--> Select the `points` column, but only for wines made in Italy.","0011a697":"**Exercise 7**: Select the `country` and `variety` columns of the first 100 records. \n\nHint: you may use `loc` or `iloc`. When working on the answer this question and the several of the ones that follow, keep the following \"gotcha\" described in the [reference](https:\/\/www.kaggle.com\/residentmario\/indexing-selecting-assigning-reference) for this tutorial section:\n\n> `iloc` uses the Python stdlib indexing scheme, where the first element of the range is included and the last one excluded. So `0:10` will select entries `0,...,9`. `loc`, meanwhile, indexes inclusively. So `0:10` will select entries `0,...,10`.\n\n> [...]\n\n> ...[consider] when the DataFrame index is a simple numerical list, e.g. `0,...,1000`. In this case `df.iloc[0:1000]` will return 999 entries, while `df.loc[0:1000]` return 1000 of them! To get 1000 elements using `iloc`, you will need to go one higher and ask for `df.iloc[0:1001]`.","c2a7ea31":"# Set Up\nRun the following cell to load your data and some utility functions","006e2ddb":"**Exercise 10**: <!--What is the distribution of wine ratings assigned by Wine Magazine?--> Select the `points` column."}}