{"cell_type":{"bb358251":"code","4d2e8807":"code","fd5c7d5a":"code","2b561d2a":"code","3e6475f5":"code","91a000e8":"code","a29219ad":"code","fd81461b":"code","db2c0044":"code","f031ecf2":"code","ce46f5d3":"code","2f3095ee":"code","5f63b552":"code","c77679b5":"code","557afd29":"code","8b4df707":"code","836837d0":"code","14e47a73":"code","1b4bd843":"code","56c3c097":"code","f21f073d":"code","61d7d20b":"code","b62a83c0":"code","20c8ff63":"code","07092921":"code","967d250c":"code","34ec77c4":"code","c1993138":"code","351bb98d":"code","f12a3552":"code","07d75ce0":"markdown","b83891fc":"markdown","1b4424cb":"markdown","a97014b8":"markdown","75aa24a0":"markdown","221053ca":"markdown","f42db557":"markdown","46fd5a6f":"markdown","2d16d65f":"markdown","4cc3956d":"markdown","81bf244a":"markdown","4365954d":"markdown","b38ac90b":"markdown","e54deff8":"markdown","2c1e3550":"markdown","40be3b05":"markdown","09cf9f82":"markdown","8219475f":"markdown","32448541":"markdown","eac81f81":"markdown","1387cdde":"markdown","1f25eef7":"markdown","cf84b509":"markdown","d676ca12":"markdown","e6898e70":"markdown","1f0bf499":"markdown","c9a556d7":"markdown","ababc3d7":"markdown","bc9da13f":"markdown","859b81d1":"markdown","6abe475a":"markdown","7ed6a77e":"markdown","74d3be26":"markdown","381e5594":"markdown","093404a3":"markdown","4bbe0e07":"markdown","f29b66dd":"markdown","7cb09154":"markdown","b49aefd4":"markdown","a38a96fe":"markdown","638694bf":"markdown","09dbedb6":"markdown","9911ac09":"markdown","afd1ebff":"markdown","571af0b9":"markdown","1e7bafdc":"markdown","9688adaf":"markdown","3802e1ac":"markdown","18ca6de9":"markdown","a2e84281":"markdown"},"source":{"bb358251":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')\n\nsns.set_style(\"darkgrid\")","4d2e8807":"students_df = pd.read_csv('..\/input\/students-performance-in-exams\/StudentsPerformance.csv')","fd5c7d5a":"students_df.head()","2b561d2a":"students_df.info()","3e6475f5":"students_df.describe().T","91a000e8":"students_df.isnull().sum()","a29219ad":"students_df.rename(columns={'gender': 'Gender', \n                   'race\/ethnicity': 'Race', \n                   'parental level of education': 'Parental Level of Education',\n                   'lunch': 'Lunch',\n                   'test preparation course': 'Test Preparation Course',\n                   'math score': 'Math Score',\n                   'reading score': 'Reading Score',\n                   'writing score': 'Writing Score',}, inplace=True)","fd81461b":"students_df[\"Gender\"].replace({\"male\": \"Male\", \"female\": \"Female\"}, inplace=True)\nstudents_df[\"Race\"].replace({\"group A\": \"Group A\", \"group B\": \"Group B\",\n                                  \"group C\": \"Group C\",\"group D\": \"Group D\",\n                                  \"group E\": \"Group E\"}, inplace=True)\nstudents_df[\"Parental Level of Education\"].replace({\"some college\": \"Some College\", \n                                                    \"associate's degree\": \"Associate's Degree\",\n                                                    \"high school\": \"High School\",\n                                                    \"some high school\": \"Some High School\",\n                                                    \"bachelor's degree\": \"Bachelor's Degree\",\n                                                    \"master's degree\": \"Master's Degree\"}, inplace=True)\nstudents_df[\"Lunch\"].replace({\"standard\": \"Standard\", \"free\/reduced\": \"Free\/Reduced\"}, inplace=True)\nstudents_df[\"Test Preparation Course\"].replace({\"none\": \"None\", \"completed\": \"Completed\"}, inplace=True)","db2c0044":"grades_mapper = {'A': 90, 'B': 80, 'C': 70, 'D': 60}\n\ndef calc_usa_gpa(score):\n    for grade, threshold in grades_mapper.items():\n        if score >= threshold:\n            return grade\n    return 'F'\n    \nstudents_df[\"Math GPA\"] = students_df.apply(lambda x : calc_usa_gpa(x[\"Math Score\"]), axis=1)\nstudents_df[\"Reading GPA\"] = students_df.apply(lambda x : calc_usa_gpa(x[\"Reading Score\"]), axis=1)\nstudents_df[\"Writing GPA\"] = students_df.apply(lambda x : calc_usa_gpa(x[\"Writing Score\"]), axis=1)","f031ecf2":"def get_exams_passed(student):\n    passed = 0\n    for grade in [\"Math GPA\", \"Reading GPA\", \"Writing GPA\"]:\n        if student[grade] < 'F':\n            passed += 1\n    return passed\n\nstudents_df[\"Exams Passed\"] = students_df.apply(lambda x : get_exams_passed(x), axis=1)","ce46f5d3":"students_df[[\"Math Score\", \"Math GPA\", \"Reading Score\", \"Reading GPA\", \"Writing Score\", \"Writing GPA\", \"Exams Passed\"]].head()","2f3095ee":"gender_counts = students_df[\"Gender\"].value_counts()\nax = gender_counts.plot(kind='pie',\n             figsize = (20,10),\n             autopct='%1.1f%%', \n             startangle=45,\n             labels=None,         \n             pctdistance=1.1,    \n             textprops={'fontsize': 12})\nax.patch.set_facecolor('white')\nplt.title('What is the proportion of students by gender?', size = 20)\nax.set(ylabel=None)\nplt.axis('equal') \nplt.legend(labels=[\"Female\", \"Male\"], loc=\"upper left\", title=\"Gender\", fontsize=12);","5f63b552":"race_value_counts = students_df['Race'].value_counts()\nplt.figure(figsize=(20,10))\nax = sns.barplot(x=race_value_counts.values, y=race_value_counts.index, orient='h')\nax.set_title(\"How many students are there by race?\", size=20)\nax.set_xlabel(xlabel=\"Count\", size=12)\nax.set_ylabel(ylabel=\"Race\", size=12)\n\n# Annotate value labels to each group\nfor index, value in enumerate(race_value_counts): \n    plt.annotate(value, xy=(value-10, index), color='white') ","c77679b5":"level_education_value_counts = students_df['Parental Level of Education'].value_counts()\nplt.figure(figsize=(20,10))\nax = sns.barplot(x=level_education_value_counts.index, y=level_education_value_counts.values)\nax.set_title(\"What is the parents' level of education?\", size=20)\nax.set_xlabel(xlabel=\"Level of Education\", size=12)\nax.set_ylabel(ylabel=\"Count\", size=12)\n\n# Annotate value labels to each level\nfor index, value in enumerate(level_education_value_counts): \n    plt.annotate(value, xy=(index, value-10), color='white') ","557afd29":"ax = pd.crosstab(students_df[\"Race\"], [students_df[\"Parental Level of Education\"]]).plot.bar(stacked=True, figsize=(20,10))\nax.set_title(\"How are race and parental level of education grouped?\", size=20)\nax.set_xlabel(xlabel=\"Race\", size=12)\nax.set_ylabel(ylabel=\"Count\", size=12)\nax.set_xticklabels(ax.get_xticklabels(), rotation=0)\nax.legend(loc=\"upper left\", title=\"Parental Level of Education\");","8b4df707":"lunch_counts = students_df[\"Lunch\"].value_counts()\nax = lunch_counts.plot(kind='pie',\n             figsize = (20,10),\n             autopct='%1.1f%%', \n             startangle=45,\n             labels=None,         \n             pctdistance=1.1,    \n             textprops={'fontsize': 12})\nax.patch.set_facecolor('white')\nplt.title('Which lunch type is preferred?', size = 20)\nax.set(ylabel=None)\nplt.axis('equal') \nplt.legend(loc=\"upper left\", labels=[\"Standard\", \"Free\/Reduced\"], title=\"Lunch Type\", fontsize=12);","836837d0":"test_preparation_counts = students_df[\"Test Preparation Course\"].value_counts()\nax = test_preparation_counts.plot(kind='pie',\n             figsize = (20,10),\n             autopct='%1.1f%%', \n             startangle=45,\n             labels=None,         \n             pctdistance=1.1,    \n             textprops={'fontsize': 12})\nax.patch.set_facecolor('white')\nplt.title('Did the students take the test preparation course?', size = 20)\nax.set(ylabel=None)\nplt.axis('equal') \nplt.legend(loc=\"upper left\", labels=[\"None\", \"Completed\"], title=\"Test Preparation Course\", fontsize=12);","14e47a73":"fig, ax = plt.subplots(ncols=3, nrows=1, figsize=(20,10))\nindex = 0\nax = ax.flatten()\n\nfor col, value in students_df[[\"Math Score\", \"Reading Score\", \"Writing Score\"]].items():\n    sns.distplot(value, ax=ax[index])\n    ax[index].set_xlabel(xlabel=col, size=12)\n    ax[index].set_ylabel(ylabel=\"Density\", size=12)\n    index += 1\n    \nfig.suptitle(\"How are scores distributed?\", fontsize=20);","1b4bd843":"fig, ax = plt.subplots(ncols=3, nrows=1, figsize=(20,10))\nindex = 0\nax = ax.flatten()\n\nfor col in [\"Math GPA\", \"Reading GPA\", \"Writing GPA\"]:\n    sns.countplot(students_df[col], ax=ax[index], order=['A', 'B', 'C', 'D', 'F'])\n    ax[index].set_xlabel(xlabel=col, size=12)\n    ax[index].set_ylabel(ylabel=\"Count\", size=12)\n    ax[index].set_ylim([0, 350])\n    # Annotate value labels to each grade\n    for i, value in enumerate(students_df[col].value_counts().sort_index()): \n        ax[index].annotate(value, xy=(i, value-10), color='white') \n    index += 1\n    \nfig.suptitle(\"How are grades distributed?\", fontsize=20);","56c3c097":"exams_passed_counts = students_df[\"Exams Passed\"].value_counts().sort_index()\nax = exams_passed_counts.plot(kind='pie',\n             figsize = (20,10),\n             autopct='%1.1f%%', \n             startangle=45,\n             labels=None,         \n             pctdistance=1.1,    \n             textprops={'fontsize': 12})\nax.patch.set_facecolor('white')\nplt.title('How many students passed in all exams?', size = 20)\nax.set(ylabel=None)\nplt.axis('equal') \nplt.legend(loc=\"upper left\", labels=[0, 1, 2, 3], title=\"Exams Passed\", fontsize=12);","f21f073d":"def plot_sunburst_chart(subject):\n    plt.figure(figsize=(20, 10))\n    gpa_counts = pd.crosstab(students_df[f\"{subject} GPA\"], students_df[\"Gender\"])\n    totals_labels = gpa_counts.index\n    totals = gpa_counts.values.sum(axis=1)\n    by_gender = gpa_counts.values.flatten()\n    by_gender_labels = len(gpa_counts) * [\"F\", \"M\"]\n\n    by_gender_colors = len(gpa_counts) * ['#ffb3e6', '#c2c2f0']\n    explode = (0.3,0.3,0.3,0.3,0.3) \n\n    plt.pie(totals, \n            labels=totals_labels,\n            autopct='%1.1f%%', \n            pctdistance=1.1,\n            labeldistance=0.8,\n            startangle=180,\n            textprops={'fontsize': 14},\n            radius=12)\n    plt.pie(by_gender,\n            labels=by_gender_labels,\n            colors=by_gender_colors,\n            autopct='%1.1f%%', \n            pctdistance=1.15,\n            labeldistance=0.8,\n            startangle=180,\n            textprops={'fontsize': 14, 'color': 'white'},\n            radius=7)\n\n    centre_circle = plt.Circle((0,0), 5, color='black', fc='white',linewidth=0)\n    fig = plt.gcf()\n    fig.gca().add_artist(centre_circle)\n    \n    plt.title(f'Which gender did better at {subject}?', fontsize=20)\n\n    plt.axis('equal')\n    plt.tight_layout()\n    plt.show()","61d7d20b":"plot_sunburst_chart(\"Math\")","b62a83c0":"plot_sunburst_chart(\"Reading\")","20c8ff63":"plot_sunburst_chart(\"Writing\")","07092921":"grid_kws = {\"height_ratios\": (.9, .05), \"hspace\": .25}\nf, (ax, cbar_ax) = plt.subplots(2, gridspec_kw=grid_kws, figsize=(20,10))\nsns.heatmap(students_df[[\"Math Score\", \"Reading Score\", \"Writing Score\"]].corr(),\n            annot= True,\n            fmt = \".2f\",\n            vmin = 0,\n            vmax = 1,\n            ax=ax,\n            cbar_ax=cbar_ax,\n            cbar_kws={\"orientation\": \"horizontal\"},\n            cmap='coolwarm')\nax.set_title('How are the different scores related?', size = 20);","967d250c":"g = sns.pairplot(students_df[[\"Math Score\", \"Reading Score\", \"Writing Score\", \"Gender\"]], hue=\"Gender\", height=5);\ng.fig.suptitle(\"How are the different scores related?\", size=20, y=1.05);","34ec77c4":"fig, ax = plt.subplots(nrows=3, ncols=1, figsize=(20,10))\nax = ax.flatten()\n\nfor index, col in enumerate([\"Math Score\", \"Reading Score\", \"Writing Score\"]):\n    sns.violinplot(x=\"Gender\", y=col, hue=\"Race\", data=students_df, ax=ax[index], hue_order=[\"Group A\", \"Group B\", \"Group C\", \"Group D\", \"Group E\"])\n    ax[index].set_xlabel(\"Gender\", fontsize=14)\n    ax[index].set_ylabel(col.title(), fontsize = 14)\n    ax[index].xaxis.set_tick_params(labelsize=14)\n    ax[index].yaxis.set_tick_params(labelsize=14)\n    ax[index].legend(loc=\"upper left\", title=\"Race\")\n    \nfig.suptitle(\"How do gender and race\/ethnicity influence scores?\", fontsize=20, y=1)\nplt.tight_layout(pad=0.5, w_pad=0.7, h_pad=5.0)","c1993138":"fig, ax = plt.subplots(nrows=1, ncols=3, figsize=(20,10))\nax = ax.flatten()\n\nfor index, col in enumerate([\"Math Score\", \"Reading Score\", \"Writing Score\"]):\n    sns.barplot(x=col, y=\"Gender\", hue=\"Parental Level of Education\", data=students_df, ax=ax[index])\n    ax[index].set_xlabel(col, fontsize = 14)\n    ax[index].set_ylabel(\"Gender\", fontsize=14)\n    ax[index].xaxis.set_tick_params(labelsize=14)\n    ax[index].yaxis.set_tick_params(labelsize=14)\n\nfig.suptitle(\"How do gender and parental level of education influence scores?\", fontsize=20, y=1)\nplt.tight_layout(pad=0.5, w_pad=0.7, h_pad=5.0)","351bb98d":"fig, ax = plt.subplots(nrows=1, ncols=3, figsize=(20,10))\nax = ax.flatten()\n\nfor index, col in enumerate([\"Math Score\", \"Reading Score\", \"Writing Score\"]):\n    sns.swarmplot(x=\"Gender\", y=col, hue=\"Lunch\", data=students_df, ax=ax[index])\n    ax[index].set_xlabel(\"Gender\", fontsize = 14)\n    ax[index].set_ylabel(col, fontsize = 14)\n    ax[index].xaxis.set_tick_params(labelsize=14)\n    ax[index].yaxis.set_tick_params(labelsize=14)\n    ax[index].legend(loc=\"lower left\", title=\"Lunch Type\")\n    \nfig.suptitle(\"How do gender and lunch type influence scores?\", fontsize=20, y=1)\nplt.tight_layout(pad=0.5, w_pad=0.7, h_pad=5.0)","f12a3552":"fig, ax = plt.subplots(nrows=1, ncols=3, figsize=(20,10))\nax = ax.flatten()\n\nfor index, col in enumerate([\"Math Score\", \"Reading Score\", \"Writing Score\"]):\n    sns.boxplot(x=students_df['Test Preparation Course'],y=students_df[col], hue=students_df['Gender'], ax=ax[index])\n    ax[index].set_xlabel(\"Test Preparation Course\", fontsize = 14)\n    ax[index].set_ylabel(col, fontsize = 14)\n    ax[index].xaxis.set_tick_params(labelsize=14)\n    ax[index].yaxis.set_tick_params(labelsize=14)\n    ax[index].legend(loc=\"lower left\", title=\"Gender\")\n    \nfig.suptitle(\"How do gender and test preparation course influence scores?\", fontsize=20, y=1)\nplt.tight_layout(pad=0.5, w_pad=0.7, h_pad=5.0)","07d75ce0":"Let's create a USA GPA column that will be useful throughout the analysis.","b83891fc":"Load the dataset, look at the descriptive statistics and check for missing values is the first thing to do.","1b4424cb":"# Imports","a97014b8":"Most students passed all three exams.\n\nThere were more students failing all exams than failing one or two.","75aa24a0":"More males got As, Bs, and Cs, so they did better in math.","221053ca":"# Data Processing","f42db557":"We will go through the rest of this notebook creating different plots to answer some questions.","46fd5a6f":"**How do gender and lunch type influence scores?**","2d16d65f":"\"Some College\" and \"High School\" (or some) are the most common levels of education across all groups, followed by Associate's degree. ","4cc3956d":"**How are grades distributed?**","81bf244a":"**Did the students take the test preparation course?**","4365954d":"The percentage of females is slightly higher in this dataset.","b38ac90b":"Next, we are going to create a column with the number of exams the students passed.","e54deff8":"It's clear that preparation pays off. However, there are some outliers. \nSome students performed well even when they did not complete test preparation. The opposite is also true.","2c1e3550":"We must verify that the GPA and the number of exams passed were calculated correctly.","40be3b05":"For both genders, group E had the highest scores, while group A did the worst.","09cf9f82":"The lowest average score was math, which was also the only subject that had 0 as minimum.\n\nThere were students with maximum scores in the three subjects.","8219475f":"The standard lunch is the most popular.","32448541":"**Which lunch type is preferred?**","eac81f81":"There are no missing values in the dataset.","1387cdde":"First, we are renaming the columns and their values for plotting purposes.","1f25eef7":"**How do gender and race influence scores?**","cf84b509":"<span style=\"font-size:2em;\">Students Performance in Exams<\/span>\n\nThis dataset contains marks of students in math, reading and writing. The main objective of analyzing this data is to understand which factors influence students performance the most. The variables considered are race, the level of education of the parents, diet and the way in which the students prepared for the exams.\n\nThis dataset is composed of the following variables:\n\n- **gender:** Male or female.\n- **race\/ethnicity:** Grouped from A to E.\n- **parental level of education:** Grouped from high school to master's degree.\n- **lunch:** Type of lunch (standard or reduced).\n- **test preparation course:** If a student did the test preparation course before the exams.\n- **math score**\n- **reading score**\n- **writing score**","d676ca12":"The scores are slightly left skewed.","e6898e70":"**How are race and parental level of education grouped?**","1f0bf499":"**Which gender did better at Math?**","c9a556d7":"Most of the parents went to college or have an associate's degree.","ababc3d7":"# Data Visualization","bc9da13f":"Most students did not take the test preparation course.","859b81d1":"**If you like this notebook, please give it an upvote as it keeps me motivated. Plus, I am open to feedback.**","6abe475a":"**How many students are there by race?**","7ed6a77e":"Math had the worse grades, while reading had the best. \n\n323 students failed at math, while 254 failed at reading and 281 failed at writing.","74d3be26":"**What is the parents' level of education?**","381e5594":"**How are scores distributed?**","093404a3":"**How many students passed in all exams?**","4bbe0e07":"# Descriptive Statistics","f29b66dd":"**How do gender and parental level of education influence scores?**","7cb09154":"Reading scores and writing scores are highly correlated so a student who reads well also writes well.\n\nMath scores have lower correlations with other subjects, so we can't be so sure that if a student is good at math he is good at other subjects or vice versa.","b49aefd4":"**How are the different scores related?**","a38a96fe":"# References","638694bf":"**What is the proportion of students by gender?**","09dbedb6":"Everything checks out!","9911ac09":"The plots for reading and writing are similar, females did better.","afd1ebff":"Students whose parents are better educated (Bachelor's and Master's) got better grades in all subjects. Plus, it seems that parents with a master's degree have more influence on male students' grades.\n\nIf the parental level of education is \"High School\" and \"Some High School\" the students got lower scores.","571af0b9":"Groups C and D are by far the most prevalent.","1e7bafdc":"1. An, S. (2020). Basic of Statistical Viz : Plotly & Seaborn. Available at: https:\/\/www.kaggle.com\/subinium\/basic-of-statistical-viz-plotly-seaborn\n2. Datta, N. (2020). Students performance in Exams- EDA in depth. Available at: https:\/\/www.kaggle.com\/nitindatta\/students-performance-in-exams-eda-in-depth\n3. Huang, W. (2021). Python Pie\/Donut\/Sunburst Charts. Available at: https:\/\/waynestalk.com\/en\/python-pie-donut-sunburst-charts-en\/\n4. Kamr, A. (2021). EDA By Seaborn & Feature Engineering For Beginners. Available at: https:\/\/www.kaggle.com\/abdokamr\/eda-by-seaborn-feature-engineering-for-beginners\n5. KraLMachine. (2019). Seaborn Tutorial For Beginners. Available at: https:\/\/www.kaggle.com\/kralmachine\/seaborn-tutorial-for-beginners\n6. Prasad, B. (2021). Student Academic Performance Analysis. Available at: https:\/\/www.kaggle.com\/bhartiprasad17\/student-academic-performance-analysis","9688adaf":"Before plotting sunburst charts to see which gender got better grades in which subjects, we're writing some auxiliary code.","3802e1ac":"As expected, well-nourished students learn better.","18ca6de9":"**How do gender and test preparation course influence scores?**","a2e84281":"It appears that the scores of the different subjects increase linearly with each other.\n\nMost students had between 40 and 90 (about 90%) in the three subjects."}}