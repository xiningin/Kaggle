{"cell_type":{"a9632c4b":"code","d2523c48":"code","cc535b4c":"code","3b124b0a":"code","4a38cc74":"code","83d9465a":"code","ea218fc5":"code","dc5f23a3":"code","34cabda5":"markdown","b25b6e36":"markdown","df9c8b77":"markdown"},"source":{"a9632c4b":"# \u30e9\u30a4\u30d6\u30e9\u30ea\u3092import\nfrom pathlib import Path\nimport numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import KFold\n\nfrom category_encoders import OrdinalEncoder, CountEncoder, OneHotEncoder","d2523c48":"# \u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbcm\u3080\nFILE_PATH = '..\/input\/data-science-winter-osaka2'\n\ndf_train = pd.read_csv(Path(FILE_PATH)\/'train.csv', index_col=0)\ndf_test = pd.read_csv(Path(FILE_PATH)\/'test.csv', index_col=0)","cc535b4c":"y_train = df_train.user_reviews\nX_train = df_train.drop(['user_reviews'], axis=1)\nX_test = df_test.copy()","3b124b0a":"# \u6570\u5024\u3068\u3057\u3066\u6271\u3048\u306a\u3044\u3082\u306e\u3092\u3056\u3063\u3068\u898b\u3066\u307f\u307e\u3059\ncat_col = []\n\nfor col in X_train.columns:\n    if X_train[col].dtype=='object':\n        cat_col.append(col)\n        print('%s \u306e\u30e6\u30cb\u30fc\u30af\u6570\u306f%d\u3067\u3059\u3002\u3053\u308c\u306f\u5168\u884c\u6570\u306e%1.2f \uff05\u3067\u3059'%(col, X_train[col].nunique(), 100*X_train[col].nunique()\/len(X_train)))","4a38cc74":"# publisher\u306b\u3064\u3044\u3066\u3067\u3059\u304c\u3001Square Enix \u304c\u4e00\u756a\u591a\u3044\u3067\u3059\u306d\uff01\nX_train.publisher.value_counts()","83d9465a":"# OneHot Encoding\u3067\u306f\u30ab\u30c6\u30b4\u30ea\u7279\u5fb4\u91cf\u306e\u5404\u5024\u3092\u53d6\u308b\u304b\u3069\u3046\u304b\u30920\/1\u3067\u683c\u7d0d\u3059\u308b\u30ab\u30e9\u30e0\u3092\u30e6\u30cb\u30fc\u30af\u6570\u3060\u3051\u4f5c\u308a\u307e\u3059\u3002\n# \u3044\u305a\u308c\u306e\u5024\u3082\u7b49\u4fa1\u3068\u3057\u3066\u6271\u3044\u3001\u7279\u5b9a\u306e\u5e8f\u5217\u3092\u4eee\u5b9a\u305b\u305a\u3001\u5909\u306a\u30d0\u30a4\u30a2\u30b9\u3092\u751f\u3058\u306a\u3044\u70b9\u304c\u7279\u5fb4\u3067\u3059\u3002\n# \u30ab\u30e9\u30e0\u304c\u6a2a\u306b\u30e6\u30cb\u30fc\u30af\u6570\u3060\u3051\u81a8\u5f35\u3059\u308b\u70b9\u304c\u6c17\u306b\u306a\u308b\u3068\u3053\u308d\u3067\u3001\u30e1\u30e2\u30ea\u5bb9\u91cf\uff08\u3053\u306e\u70b9\u306f\u758e\u884c\u5217\u3092\u7528\u3044\u308c\u3070\u826f\u3044\u304c\uff09\u4ee5\u5916\u306b\u3082\u30c7\u30e1\u30ea\u30c3\u30c8\u304c\u751f\u3058\u5f97\u307e\u3059\u3002\ncol = 'publisher'#\u3053\u3053\u3092\u5909\u66f4\u3057\u3066\u307f\u3066\u4e0b\u3055\u3044\u3002 \nencoder = OneHotEncoder()\nencoder.fit(X_train[col])\ntrain_encoded = encoder.transform(X_train[col])\ntest_encoded = encoder.transform(X_test[col])","ea218fc5":"# \u7d50\u679c\u306e\u78ba\u8a8d\ntrain_encoded.head()","dc5f23a3":"# \u7d50\u679c\u306e\u78ba\u8a8d\ntest_encoded.head()","34cabda5":"## \u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u3068\u78ba\u8a8d","b25b6e36":"\n\n### \u521d\u53c2\u52a0\u306e\u65b9\u5411\u3051\u306b\u300cOneHot Encoding\u300d\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\u53c2\u8003\u306b\u3057\u3066\u3001\u8272\u3005\u3068\u8a66\u3057\u3066\u304f\u3060\u3055\u3044\u3002","df9c8b77":"## OneHot Encoding"}}