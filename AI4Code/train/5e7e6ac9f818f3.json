{"cell_type":{"9155f8bb":"code","da27af85":"code","634d4c89":"code","2cb08eea":"code","9694ea60":"code","c9c4b0cc":"code","02cae23a":"code","72426e76":"code","b1c1885a":"code","37938c14":"code","4a44cf58":"code","0fbdf18c":"code","dbba047f":"code","93fbba42":"markdown","f7d66ae6":"markdown"},"source":{"9155f8bb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.\n\n\nimport statsmodels.formula.api as smf\nimport seaborn as sns\nimport matplotlib.pyplot as plt","da27af85":"full_nba = pd.read_csv(\"..\/input\/nba_2016_2017_100.csv\")\nattendance = pd.read_csv('..\/input\/nba_2017_att_val.csv')\nendorsements = pd.read_csv('..\/input\/nba_2017_endorsements.csv')","634d4c89":"full_nba.head(3)","2cb08eea":"full_nba[['PLAYER_NAME','TEAM_ABBREVIATION','AGE','W_PCT','MIN','NET_RATING','PIE','FG_PCT','SALARY_MILLIONS','PTS','TWITTER_FOLLOWER_COUNT_MILLIONS']].sort_values(by='SALARY_MILLIONS',ascending=False)\nnba = full_nba[['PLAYER_NAME','TEAM_ABBREVIATION','AGE','W_PCT','MIN','NET_RATING','PIE','FG_PCT','SALARY_MILLIONS','PTS','TWITTER_FOLLOWER_COUNT_MILLIONS']].sort_values(by='TWITTER_FOLLOWER_COUNT_MILLIONS',ascending=False)","9694ea60":"attendance.head(3)\nlen(attendance)","c9c4b0cc":"#attendance[].corr()\nattendance[['TOTAL','AVG','PCT','VALUE_MILLIONS']].corr()\nattendance.head()","02cae23a":"lm = smf.ols('VALUE_MILLIONS ~ TOTAL',data = attendance).fit()\nprint(lm.summary())","72426e76":"nba\nclustering = nba[[\"W_PCT\", \"MIN\", \"NET_RATING\", \"PIE\",\"SALARY_MILLIONS\",\"PTS\",\"TWITTER_FOLLOWER_COUNT_MILLIONS\"]]","b1c1885a":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\nprint(scaler.fit(clustering))\nprint(scaler.transform(clustering))","37938c14":"from sklearn.cluster import KMeans\nk_means = KMeans(n_clusters=3)\nkmeans = k_means.fit(scaler.transform(clustering))\nnba['CLUSTER'] = kmeans.labels_\n","4a44cf58":"#nba.drop(['cluster'],axis=1,inplace=True)\nnba['CLUSTER'] += 1\nnba.sort_values(by='CLUSTER')","0fbdf18c":"top_performers = nba[nba.CLUSTER==0]\ntop_performers\nnba.tail()","dbba047f":"for i in range(1,4):\n   # plt.figure(figsize=(5,5))\n    plt.subplots(figsize=(15,5))\n    plt.subplot(1, 3, i)\n    if i ==1:\n        plt.scatter( nba.loc[nba['CLUSTER'] == i]['SALARY_MILLIONS'],nba.loc[nba['CLUSTER'] == i]['PTS'],color='darkgreen', alpha=0.5)\n        plt.xlabel('SALARY')\n        plt.ylabel('PTS')\n        plt.title('CLUSTER %d' %i)\n    elif i == 2:\n        plt.scatter( nba.loc[nba['CLUSTER'] == i]['SALARY_MILLIONS'],nba.loc[nba['CLUSTER'] == i]['PTS'], alpha=0.5)\n        plt.xlabel('SALARY')\n        plt.ylabel('PTS')\n        plt.title('CLUSTER %d' %i)\n    elif i == 3:\n        plt.scatter( nba.loc[nba['CLUSTER'] == i]['SALARY_MILLIONS'],nba.loc[nba['CLUSTER'] == i]['PTS'], color='red', alpha=0.5)\n        plt.xlabel('SALARY')\n        plt.ylabel('PTS')\n        plt.title('CLUSTER %d' %i)\n        \nplt.tight_layout()","93fbba42":"**Clustering the players based on win percentage, minutes played, net rating, pie, salary, points and twiiter followers**","f7d66ae6":"Cluster of **Top Performers**"}}