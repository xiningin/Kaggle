{"cell_type":{"57b43698":"code","8fd1de76":"code","1f4ae04e":"code","68f3f158":"code","51dc4d0b":"code","953db097":"code","b62ba4b0":"code","f2effdd7":"code","d06ddcde":"code","d3f3c6a4":"markdown","3f4463cc":"markdown","99f9d50e":"markdown","da15c2a2":"markdown","33de2781":"markdown","40359666":"markdown","0df31f86":"markdown","5213353e":"markdown","cf4c873f":"markdown","8f8d4630":"markdown","36d8b84d":"markdown","a63be317":"markdown","d0976cd0":"markdown","fa4d7170":"markdown"},"source":{"57b43698":"from google.cloud import bigquery\nfrom IPython.display import display\nfrom IPython.display import HTML, Image\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport folium\nfrom folium import Marker\nfrom folium.plugins import MarkerCluster\nimport math","8fd1de76":"# Create a \"Client\" object\nclient = bigquery.Client()\n\n# Construct a reference to the \"new_york_citibike\" dataset\ndataset_ref = client.dataset(\"new_york_citibike\", project=\"bigquery-public-data\")\n\n# API request - fetch the dataset\ndataset = client.get_dataset(dataset_ref)\n\n# List all the tables in the \"new_york_citibike\" dataset\ntables = list(client.list_tables(dataset))\n\n# Print names of all tables in the dataset\nfor table in tables:\n    print(table.table_id)","1f4ae04e":"# Construct a reference to the \"citibike_stations\" table\ntable_ref = dataset_ref.table(\"citibike_stations\")\n\n# API request - fetch the table\ntable = client.get_table(table_ref)\n\n# Preview the first five lines of the \"citibike_stations\" table\nclient.list_rows(table, max_results=5).to_dataframe()","68f3f158":"# Query to get the longitude and latitude columns\"\nquery = \"\"\"\n        SELECT longitude, latitude\n        FROM `bigquery-public-data.new_york_citibike.citibike_stations`\n        \"\"\"\n\n# Only run the query if it's less than 1.2 GB\nONEp2_GB = 1200*1000*1000\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=ONEp2_GB)\n\n# Set up the query (will only run if it's less than 1.2 GB)\nsafe_query_job = client.query(query, job_config=safe_config)\n\n# API request - try to run the query, and return a pandas DataFrame\ndf_st = safe_query_job.to_dataframe()\ndf_st.head()","51dc4d0b":"# Create the map\nMap = folium.Map(location=[df_st.longitude.mean(),df_st.latitude.mean()], \n                 tiles='openstreetmap', \n                 zoom_start=11)\n\n# Add points to the map\nmc = MarkerCluster()\nfor _, row in df_st.iterrows():\n    if not math.isnan(row['longitude']) and not math.isnan(row['latitude']):\n        mc.add_child(Marker([row['longitude'], row['latitude']]))\nMap.add_child(mc)\n\n# Display the map\nMap","953db097":"# Construct a reference to the \"citibike_trips\" table\ntable_ref = dataset_ref.table(\"citibike_trips\")\n\n# API request - fetch the table\ntable = client.get_table(table_ref)\n\n# Preview the first five lines of the \"citibike_trips\" table\nclient.list_rows(table, max_results=5).to_dataframe()","b62ba4b0":"# Query to get the tripduration and gender columns \n# from every row where the birth_year column has value larger than 2001\nquery = \"\"\"\n        SELECT tripduration, gender\n        FROM `bigquery-public-data.new_york_citibike.citibike_trips`\n        WHERE birth_year > 2001 \n        \"\"\"\n\n# Only run the query if it's less than 1.2 GB\nONEp2_GB = 1200*1000*1000\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=ONEp2_GB)\n\n# Set up the query (will only run if it's less than 1.2 GB)\nsafe_query_job = client.query(query, job_config=safe_config)\n\n# API request - try to run the query, and return a pandas DataFrame\ndf_tr = safe_query_job.to_dataframe()\n\n# Convert seconds to hours\ndf_tr.tripduration = (df_tr.tripduration\/3600).round(3)\ndf_tr.head()","f2effdd7":"sns.set_theme(style=\"ticks\")\n\n# Initialize the figure with a logarithmic x axis\nf, ax = plt.subplots(figsize=(7, 6))\nax.set_xscale(\"log\")\n\n# Boxplot\nsns.boxplot(x=\"tripduration\", y=\"gender\", data=df_tr,\n            whis=[0, 100], width=.6, palette=\"vlag\")\n\n# Add in points to show each observation\nsns.stripplot(x=\"tripduration\", y=\"gender\", data=df_tr,\n              size=4, color=\".3\", linewidth=0)\n\n# Tweak the visual presentation\nax.xaxis.grid(True)\nax.set(ylabel=\"\", xlabel=\"Trip Duration (hours)\")\nsns.despine(trim=True, left=True)","d06ddcde":"# Image taken from Khan Academy\nImage(\"..\/input\/boxplot\/boxplot.png\")","d3f3c6a4":"## Citibike stations","3f4463cc":"From the `citibike_stations` table, we will fetch the all rows from the `tripduration` and `gender` columns, for which the `birth_year` column is greater than 2001:","99f9d50e":"## Introduction","da15c2a2":"# <center> NYC Citibike <\/center>","33de2781":"The dataset contains two tables: `citibike_stations` and `citibike_trips`.","40359666":"Let's have a look at the first 5 rows of the `citibike_stations` table:","0df31f86":"Let's have a look at the first 5 rows of the `citibike_trips` table:","5213353e":"We will fetch the `longitude` and `latitude` columns from the `citibike_stations` table:","cf4c873f":"According to [citibike](https:\/\/help.citibikenyc.com\/hc\/en-us\/articles\/360032367371-What-if-I-keep-a-bike-out-too-long-), the 3 men who did not return the bike within 24 hours, were charged a fee of $1,200 (plus tax). ","8f8d4630":"This is a short demo for using Kaggle's public dataset BigQuery integration. We will query data from the NYC Citi Bike Trips dataset. Citi Bike is the largest bike share program in the US, with 10,000 bikes and 600 stations across Manhattan, Brooklyn, Queens, and Jersey City. This dataset includes Citi Bike trips since Citi Bike launched in September 2013 and is updated daily. The data is processed by Citi Bike to remove trips that are taken by staff to service and inspect the system and any trips below 60 seconds in length, which are considered false starts.","36d8b84d":"## Citibike trips","a63be317":"Longitude and latitude [should be the other way around](https:\/\/dateandtime.info\/citycoordinates.php?id=5128581). \n\nWe will visualize the stations on the map. Because there are too many stations, we will use MarkerCluster to reduce clutter. As you zoom in more stations will appear: ","d0976cd0":"Let's make a boxplot for each gender, with the trip duration values overlayed:","fa4d7170":"<center><img src= \"https:\/\/media.istockphoto.com\/vectors\/city-bicycle-sport-marathon-vector-flat-cartoon-bike-race-cyclist-vector-id1188504123?k=6&m=1188504123&s=612x612&w=0&h=mNa_yiRNCZsI2oDVBk39elwxlM7HvzZ8fXVhRMVngdc=\" alt =\"Titanic\" style='width: 500px;'><\/center>"}}