{"cell_type":{"c2c119ad":"code","86300c97":"code","a4fb7e37":"code","69702c27":"code","be8f590c":"code","ef6f6bd3":"code","06637246":"code","65f48132":"code","5f4e8650":"markdown","bdfcf561":"markdown","370d8bc2":"markdown","afc3a65a":"markdown","db016ba4":"markdown","3da07b01":"markdown","a71b0134":"markdown","befbe748":"markdown","4eff982e":"markdown"},"source":{"c2c119ad":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","86300c97":"df=pd.read_csv('\/kaggle\/input\/fast-food-chains-nutrition-values\/nutrition_values.csv',sep=';')\ndf.fillna(value=0, inplace=True)\ndf.replace({'-':int(0), ',':'.'}, inplace=True,regex=True)\ndf=pd.concat([df.iloc[:,0:3],df.iloc[:,3:15].astype(float)],axis=1)","a4fb7e37":"sugar_safe=df[df['Total Sugar (g)']<=31.5] #317\ntoo_much_sugar=df[df['Total Sugar (g)']>=31.5] #182\n\n#sorry, this is only trans fat filter, I named this variable not very clear \nfat_safe=sugar_safe[(sugar_safe['Trans Fat (g)']\/sugar_safe['Total Fat (g)'])*sugar_safe['Calories from fat']<=sugar_safe['Calories']*0.01] #199\nfat_much=sugar_safe[(sugar_safe['Trans Fat (g)']\/sugar_safe['Total Fat (g)'])*sugar_safe['Calories from fat']>=sugar_safe['Calories']*0.01] #43\n\nsaturated_fat_safe=fat_safe[(fat_safe['Saturated Fat (g)']\/fat_safe['Total Fat (g)'])*fat_safe['Calories from fat']<=fat_safe['Calories']*0.1] #66\nsaturated_fat_much=fat_safe[(fat_safe['Saturated Fat (g)']\/fat_safe['Total Fat (g)'])*fat_safe['Calories from fat']>fat_safe['Calories']*0.1] #133\n\nfiber_good=saturated_fat_safe[(saturated_fat_safe['Dietary Fiber (g)']*1000\/saturated_fat_safe['Calories'])>=14] # 9, in most of the cases dietary fiber is not enough \nfiber_not_enough=saturated_fat_safe[(saturated_fat_safe['Dietary Fiber (g)']*1000\/saturated_fat_safe['Calories'])<14] #57\n\ntotalfat_safe=saturated_fat_safe[saturated_fat_safe['Calories from fat']\/saturated_fat_safe['Calories']<=30] # all passed this filter\ntotalfat_much=saturated_fat_safe[saturated_fat_safe['Calories from fat']\/saturated_fat_safe['Calories']>30]\n\nsodium_safe=totalfat_safe[totalfat_safe['Sodium (mg)']<=2300] # they all passed it too \nsodium_much=totalfat_safe[totalfat_safe['Sodium (mg)']>2300]","69702c27":"#let's add a column with a protein normalization per gram of the portion\nsodium_safe=sodium_safe[sodium_safe['Serving Size (g)']!=0]\nsodium_safe=sodium_safe[sodium_safe['Item']!=0]        \nsodium_safe['Protein (g)\/g of portion']=sodium_safe['Protein (g)']\/sodium_safe['Serving Size (g)']\n\nimport matplotlib.pyplot as plt\nplt.figure()\nplt.rcParams.update({'font.size': 12})\nsodium_safe.sort_values(by='Protein (g)\/g of portion').plot.barh(x='Item',y='Protein (g)\/g of portion', figsize=(15,15), stacked=True)","be8f590c":"#let's add a column with a protein normalization per gram of the portion\nfiber_good=fiber_good[fiber_good['Serving Size (g)']!=0]\nfiber_good=fiber_good[fiber_good['Item']!=0]        \nfiber_good['Protein (g)\/g of portion']=fiber_good['Protein (g)']\/fiber_good['Serving Size (g)']\n\n\nfiber_good.sort_values(by='Protein (g)\/g of portion').plot.barh(x='Item',y='Protein (g)\/g of portion', figsize=(15,15), stacked=True)","ef6f6bd3":"#let's add a column with a calories normalization per gram of the portion\nfiber_good['Calories\/g of portion']=fiber_good['Calories']\/fiber_good['Serving Size (g)']\n\nfiber_good.sort_values(by='Calories').plot.barh(x='Item',y='Calories', figsize=(15,15), stacked=True)","06637246":"# Feature engineering\n# look, a new feature engeneered for the whole dataset, more than 1% is bad \ndf['Calories from trans fat \/ Total Calories']=100*df['Calories from fat']\/df['Calories']\n# and another one, more than 10% is bad\ndf['Calories from saturated fat \/ Total Calories']=100*(df['Saturated Fat (g)']\/df['Total Fat (g)'])*(df['Calories from fat']\/df['Calories'])\n# dietory fibre\/total calories\ndf['Dietary fiber\/ 1000 calories']= df['Dietary Fiber (g)']*1000\/df['Calories']","65f48132":"import plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)\nfig = make_subplots(rows=2, cols=2)\n\ntrace0=go.Histogram(x=df['Total Sugar (g)'], name='Total Sugar (g) (>31.5 is over threshold)', nbinsx=15)\ntrace1=go.Histogram(x=df['Calories from trans fat \/ Total Calories'], name='Calories from trans fat \/ Total Calories (>1% is over threshold)',nbinsx=100)\ntrace2=go.Histogram(x=df['Calories from saturated fat \/ Total Calories'],name='Calories from saturated fat \/ Total Calories (>10% is over threshold)', nbinsx=100)\ntrace3=go.Histogram(x=df['Dietary fiber\/ 1000 calories'], name='Dietary fibre\/ 1000 calories (<14 g is not good)')\n\nfig.append_trace(trace0, 1, 1)\nfig.append_trace(trace1, 1, 2)\nfig.append_trace(trace2, 2, 1)\nfig.append_trace(trace3, 2, 2)\n\nfig.update_layout(width=600, height=500, legend=dict(\n    yanchor=\"top\",\n    y=1.4,\n    xanchor=\"left\",\n    x=0.01\n))\n\nfig.show()","5f4e8650":"<p style = \"font-family:palatino linotype,serif;font-size:25px;\"> ...And only 9 are good enough in terms of amount of dietary fiber as well: <\/p>","bdfcf561":"![](https:\/\/media.giphy.com\/media\/3o6ozuHcxTtVWJJn32\/giphy.gif)","370d8bc2":" <p style = \"font-family:palatino linotype,serif;font-size:25px;\"> So, in terms of healthiness & amount of protein the dish \"Peanuts\" from Mc Donalds is the winner and in terms of healthiness & calories the winner is \"Premium Southwest Salad with Grilled Chicken\" from Mc Donalds\tas well <\/p>","afc3a65a":"<p style = \"font-family:palatino linotype,serif;font-size:25px;\">\n        Here are formulas I used for calculations (I used an approximation that all fats have have the same contribution to calories, and, of course, dietary fibres must be more than 14g\/1000 calories, it's a typo)\n      <\/p>\n<a href=\"https:\/\/ibb.co\/w4rZByn\"><img src=\"https:\/\/i.ibb.co\/1TJY7ZC\/Untitled.png\" alt=\"Untitled\" border=\"0\"><\/a>","db016ba4":"<p style = \"font-family:palatino linotype,serif;font-size:25px;\"> All in all, whilst fast food industry has been put a lot of efforts to make their food more healthy, still, we can see a big bias toward trans & saturated fats and sugar, and only a few items contained enough dietary fiber. <\/p>","3da07b01":"<p style = \"font-family:palatino linotype,serif;font-size:25px;\"> So, we can see that only 66 items out of 499 could pass these filters (dietary fiber filter not included) and several of them unfortunately do not have names. Check it out: <\/p>","a71b0134":"# <p style = \"font-family:palatino linotype,serif;font-size:25px;\">Intro: healthiness and nutritious <\/p>\n![](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAA3lBMVEXu7u73sWpmUDqrvIAvLzH9tWwzMzMhISH7tGvk5ORhYWEqLC0gKTBHPjc3NTMwMjO4uLi\/jFhPQjc+OTRhTTleSzlQRDYoJi2Ai2XTmmBORDuRnm6drHdYXUqWck\/rqWafd1BRVUXz58ro6Oj3tXEoKCisrKz1zZ3GxsbR0dFnZ2f2vYBzc3Pz6MyAgID03LdSUlJCQkKcnJz006hWVlZISkB6enqBZEf2wIaqflP1xZD1zqD01az04L6xsbGXl5e5iFfNll5AQjtqclbgomOHaUp5YEZ2gF2isXoTExNGkb5VAAAHHklEQVR4nO3dfXeaSBQH4JAdB\/AqmFjdtd1VSxgFxBeiTTRq1K7J7n7\/L7QDYtYISRT3HGfa+\/SfNE3O4dd5Y1TmXlwghBBCCCGEEEIIIYQQQj+hGz3Vzbmv63\/htnq+l3+D590tSnLnfPQCg8B7qDHouee+zMycQA0jlItvKxsmMCZpRr3HwCxe1q\/WSu4tjdrkvmoQFpTOfbUZuD5A+f5KyWlKZDx9UJK0XG7d\/MTb8Va64eh6ANVlI7eN0ul3LS0lIg+p1Z7KhN2e+4qPpHtQuFztRHqYW2kJO2ObZ2xMyoS2zn3Nx+Fj8LK2m+hh3p0mA477874dfrE0yUCqsVhiUI1a0J71O1EWu\/1gv+6bUW7LsqbhV1q9AL5+7ss+AiXlZRRhbFmzV8li9nSTfGhZ\/egHcxUgEvXTlkqe4m5oWfO0hFOr244HYtymNRM8eZbFERSvNrOoPdu2od3ZSWrPutZ4L\/QTUGlGohuQ55fJsr0Zh0p7Ptxtw35i3lmZbCHLonhLaTO3H2BmdXeWfLuT6LjrCuRl6aZ3pLxKrH18ThkmUu1qPIEhS0IPio1EM\/GbmmjktVPm1k70o5OC6pz70g+j5+Fzjifan0Wjv9nzxORq96Pm1a4KqiRTDU9YzSnj+Xapex2Hf3vvFpz\/X1hdmycE9fHc136YTUKbD7y0O9GpNd9fJzqzfjtsQ6JKsuZvEvL7tFk7JaHdbie\/GZItYUh7c+ebakUk6aX6bUCKzQzuTbiTYapx8gGl1MiC\/1rQO\/f1f8jNM2JmR6jwe31HpcXr7Ch4507wkZJqVi6zMyAv+t03T1jFhJhQbI5qXn\/KrGKIP9Pw\/X22xTBeEkH8BbFFCV\/xSRbhr40keEmx5AfU+JrBN0pGPQkCRnfe337J4Issd96nJJRn94QJJU\/oDMj33zL4k8rxkrDrseyrBTDxW1H3VXoCE4Tf5bvMfO+zFx+h4J87wUeck++8z53gIz\/+3gITyp\/wxx+H4f4wOxn2h\/qCQriuEWLGf978IvEP\/EaBjcR\/k1S\/9QPTqGRwbfL9oRTvkbojKNYyaILaEn2aiXlQbuS0Y4XvcovfRTd6Jp0kPovxofUlBLIkdAxSaaR\/1PIdS2ByvEoTumPkuXFUPE1ZERJIMc1E9IBHXDWUg4dgY70EQqXY\/8ZKIwbl58nVgZb1SoFQefpoyPEpg8LhgAULqQLyjtryA\/VgbNBzJOqiMd11SwdyXFeyBkQIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEfh6667rOew8FyPfUw64b97E3oO892BF4i5IsT8ilcBYj9sGjOgCM+i1Jn+7QFyOAgnFZnyzffMCqeV8lAKYv\/OkbaXSfQqHYXK\/jZ+bsTspDckpjvbo3AQbin6GSoA9429TXyvbJzs58nlYyJFSrFoghXckQHtCsrHaezZ1tT+5PeZwzVzeJbFVRdA\/My\/Xuw8fJM6dD42E7Omt7UiZMrrG4oFCJAtoPL+f4T1OKMsy73VkcUZ7nqkPOAGgtDKgNu9uSIeNXAePkbcvaFGVo1Cm7O\/dlH05fQGFTq0DjnTN1+A3nUdvZ7eGmabX1J8LkaUTehJ\/jZ8eH6Qk7lrVt27hptabBhD9l5EWLFSbb3tifbwvbtHe6aadr7RfUWFcgkOXeRvehvN4\/4YBnGu5EbCcm1twTMSQ5p\/HCDSB5wAFPOE+WCdmhLQ0iSzd1WaGpxNUlXtj9zch7Vd\/m5R+jbloW\/+i0mKMWlrzRhu1XbdbZFHobz2f7TdmZDsPiU1pR\/CN9Y48qXGnKsGslsijRCri\/9Le70YSbu4a8JFNNSyU8YXjdafdpyZpaYZU7\/pO5qmQJwxpSKQnt6TyxQNqdcHBKljC6J02rDvY2eRLetJi5bBxPqYIEJ4txbi8wafFzBgY1PAlesnEHzIzOhzse\/z0A8Y\/96RFazs4g4u8S85Dp+LuXU\/CErxN2wxOecBJl1RS+ThgmxITiJ7zwgV5XMyubRPi5tERPqi+l3om\/5LcCoJT8moFJTXonfBNy7oKRv75k8J2MHPFbMMT3Fl+yFGP4JsveAhP+CAmZ+dvvx\/v7myz7w1uP0K9\/ZMA3Fr2S8JunC9dTIXPFEMoC8Y+fXsApFUMoDITvqB7fH2Yv9Ib7QwFgQkwofkI+09ATatcWTSb6THNxe0rFEL4geuLfuPX+YeEruxnw\/aE6EL4JL8KX9Zn5XD9es0wGj+K3YCh8D\/i4Mu4b8rwH7FJ4Oq4UQ0hblUGWT0XpHhRrRydUnkwqzadMWwSejy0Zoi2LMJBjFHKuz+B5nTsiY05Z8sVemiaMPthGKs2acugc07i6L5qqLKMw4gwYoUcUXjQIqL7we99X9J5xzLJPjIEsn2n7j7PwvfyBvJ4E79+nutEPIlf3RAghhBBCCCGEEEIIIYRO9C\/rRVz\/6V3Z5gAAAABJRU5ErkJggg==)\n<ol style = \"font-family:palatino linotype,serif;font-size:16px;\">\nAs we know, all food contains carbohydrates, fats and proteins. These components describe the nutritional value, whereas quantitively we can describe it with calories. If we talk about healthiness of fast food, we should take into account: \n<li> sugar level (the main cause of obesity, the normal range is 25-38 g per day, I will take in the middle - 31.5)<\/li>\n<li> trans fat level (increase risk of heart disease, range: no more than 1% of total calories per day, what if we have only fast food whole day? Then it must be no more than 1% of total calories of a dish)<\/li>\n<li>  saturated fat (no more than 10% of total calories)<\/li>\n<li>  dietary fibre (should be at least 14g\/1000 calories)<\/li>\n<li> calories from fats should be no more 25-30% of total calories<\/li>\n<li>  sodium (the dietary guidelines recommend no more than 2.3 g per day)<\/li>\n<li>  there is no evidence that increased cholesterol in the diet can affect human health<\/li>\n<li>  protein level (contribute to muscle growth, high intake of protein benefits for bodyweight loss)<\/li> \n\nKeep in mind that these recommendations address to healthy people, who do not have diabetes or cardiovascular diseases. So, let's filter our dishes according to these parameters and see what we've got.\n<\/ol> ","befbe748":"# <p style = \"font-family:palatino linotype,serif;font-size:25px;\"> ..And what about their calories? <\/p>","4eff982e":"# <p style = \"font-family:palatino linotype,serif;font-size:25px;\"> Let's move on and check how much sugar and trans and saturated fats on average are contained fast food dishes <\/p> "}}