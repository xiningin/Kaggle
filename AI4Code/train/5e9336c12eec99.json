{"cell_type":{"59c1edd3":"code","fa9d8350":"code","afb1a5e8":"code","00c3856f":"code","5ddf6701":"code","5bdf7af3":"code","929c4fc6":"code","27eab0b3":"code","1553c661":"code","80bfaf31":"code","d2dd10a4":"code","28001f1f":"code","838e7f20":"code","46b8ea40":"markdown","26b091fd":"markdown","29da1c4a":"markdown","8f3fd50f":"markdown","12d5b3e8":"markdown","e62c55c8":"markdown","cba7282a":"markdown","fb72f34c":"markdown","05f7c017":"markdown","a8066151":"markdown","5449dd4a":"markdown","93006866":"markdown","69284bd7":"markdown","dda14bdf":"markdown","bdefb90f":"markdown","155a05b1":"markdown"},"source":{"59c1edd3":"#@title Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# https:\/\/www.apache.org\/licenses\/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.","fa9d8350":"#!pip install tensorflow-gpu==2.0.0-rc1\nimport tensorflow as tf\n\nfrom tensorflow.keras import datasets, layers, models","afb1a5e8":"#add for kaggle\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","00c3856f":"#add for kaggle\n# Using Tensorflow Keras instead of the original Keras\nfrom mlxtend.data import loadlocal_mnist\nfrom tensorflow.keras.datasets import mnist\nfrom tensorflow.keras import Sequential\nfrom tensorflow.keras.layers import Dense","5ddf6701":"#add for kaggle\nx_train_path = '..\/input\/mnist-dataset\/train-images.idx3-ubyte'\ny_train_path = '..\/input\/mnist-dataset\/train-labels.idx1-ubyte'\n\nx_test_path = '..\/input\/mnist-dataset\/t10k-images.idx3-ubyte'\ny_test_path = '..\/input\/mnist-dataset\/t10k-labels.idx1-ubyte'\n\ntrain_images, train_labels = loadlocal_mnist(x_train_path, y_train_path)\n\ntest_images, test_labels = loadlocal_mnist(x_test_path, y_test_path)","5bdf7af3":"#change for kaggle\n#(train_images, train_labels), (test_images, test_labels) = datasets.mnist.load_data()\n\ntrain_images = train_images.reshape((60000, 28, 28, 1))\ntest_images = test_images.reshape((10000, 28, 28, 1))\n\n# \u30d4\u30af\u30bb\u30eb\u306e\u5024\u3092 0~1 \u306e\u9593\u306b\u6b63\u898f\u5316\ntrain_images, test_images = train_images \/ 255.0, test_images \/ 255.0","929c4fc6":"model = models.Sequential()\nmodel.add(layers.Conv2D(32, (3, 3), activation='relu', input_shape=(28, 28, 1)))\nmodel.add(layers.MaxPooling2D((2, 2)))\nmodel.add(layers.Conv2D(64, (3, 3), activation='relu'))\nmodel.add(layers.MaxPooling2D((2, 2)))\nmodel.add(layers.Conv2D(64, (3, 3), activation='relu'))","27eab0b3":"model.summary()","1553c661":"model.add(layers.Flatten())\nmodel.add(layers.Dense(64, activation='relu'))\nmodel.add(layers.Dense(10, activation='softmax'))","80bfaf31":"model.summary()","d2dd10a4":"model.compile(optimizer='adam',\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])\n\nmodel.fit(train_images, train_labels, epochs=5)","28001f1f":"test_loss, test_acc = model.evaluate(test_images,  test_labels, verbose=2)","838e7f20":"print(test_acc)","46b8ea40":"\u3053\u3053\u307e\u3067\u306e\u30e2\u30c7\u30eb\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002","26b091fd":"### TensorFlow\u306e\u30a4\u30f3\u30dd\u30fc\u30c8","29da1c4a":"\u4e0a\u8a18\u3088\u308a\u3001\u3059\u3079\u3066\u306e Conv2D \u3068 MaxPooling2D \u30ec\u30a4\u30e4\u30fc\u306e\u51fa\u529b\u306f shape (height, width, channels) \u306e 3D \u30c6\u30f3\u30bd\u30eb\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002width \u3068 height \u306e\u5bf8\u6cd5\u306f\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u6df1\u304f\u306a\u308b\u306b\u3064\u308c\u3066\u7e2e\u5c0f\u3059\u308b\u50be\u5411\u304c\u3042\u308a\u307e\u3059\u3002\u5404 Conv2D \u30ec\u30a4\u30e4\u30fc\u306e\u51fa\u529b\u30c1\u30e3\u30cd\u30eb\u306e\u6570\u306f\u3001\u7b2c\u4e00\u5f15\u6570 (\u4f8b: 32 \u307e\u305f\u306f 64) \u306b\u3088\u3063\u3066\u5236\u5fa1\u3055\u308c\u307e\u3059\u3002\u901a\u5e38\u3001width \u3068height \u304c\u7e2e\u5c0f\u3059\u308b\u3068\u3001\u5404 Conv2D \u30ec\u30a4\u30e4\u30fc\u306b\u3055\u3089\u306b\u51fa\u529b\u30c1\u30e3\u30cd\u30eb\u3092\u8ffd\u52a0\u3059\u308b\u4f59\u88d5\u304c (\u8a08\u7b97\u4e0a) \u3067\u304d\u307e\u3059\u3002","8f3fd50f":"\u3053\u308c\u304c\u79c1\u305f\u3061\u306e\u30e2\u30c7\u30eb\u306e\u5b8c\u5168\u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u3059\u3002","12d5b3e8":"### \u30e2\u30c7\u30eb\u306e\u8a55\u4fa1","e62c55c8":"\u4e0b\u8a18\u306e6\u884c\u306e\u30b3\u30fc\u30c9\u306f\u3001\u4e00\u822c\u7684\u306a\u30d1\u30bf\u30fc\u30f3\u3067\u7573\u307f\u8fbc\u307f\u306e\u57fa\u790e\u90e8\u5206\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059: [Conv2D](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/keras\/layers\/Conv2D) \u3068 [MaxPooling2D](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/keras\/layers\/MaxPool2D) \u30ec\u30a4\u30e4\u30fc\u306e\u30b9\u30bf\u30c3\u30af\u3002\n\n\u5165\u529b\u3068\u3057\u3066\u3001CNN \u306f\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u3092\u7121\u8996\u3057\u3066\u3001shape (image_height, image_width, color_channels) \u306e\u30c6\u30f3\u30bd\u30eb\u3092\u3068\u308a\u307e\u3059\u3002color channels \u306b\u3064\u3044\u3066\u3001MNIST \u306f1\u3064 (\u753b\u50cf\u304c\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306e\u305f\u3081) \u306e color channels \u304c\u3042\u308a\u307e\u3059\u304c\u3001\u30ab\u30e9\u30fc\u753b\u50cf\u306b\u306f3\u3064 (R, G, B) \u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u4f8b\u3067\u306f\u3001MNIST \u753b\u50cf\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u3042\u308b shape (28, 28, 1) \u306e\u5165\u529b\u3092\u51e6\u7406\u3059\u308b\u3088\u3046\u306b CNN \u3092\u69cb\u6210\u3057\u307e\u3059\u3002\u3053\u308c\u3092\u884c\u3046\u306b\u306f\u3001\u5f15\u6570 `input_shape` \u3092\u6700\u521d\u306e\u30ec\u30a4\u30e4\u30fc\u306b\u6e21\u3057\u307e\u3059\u3002\n","cba7282a":"### \u30e2\u30c7\u30eb\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u5b66\u7fd2","fb72f34c":"### \u7573\u307f\u8fbc\u307f\u306e\u57fa\u790e\u90e8\u5206\u306e\u4f5c\u6210\n","05f7c017":"##### Copyright 2019 The TensorFlow Authors.","a8066151":"\u3054\u89a7\u306e\u3068\u304a\u308a\u3001\u6211\u3005\u306e\u30b7\u30f3\u30d7\u30eb\u306a CNN \u306f 99% \u4ee5\u4e0a\u306e\u30c6\u30b9\u30c8\u7cbe\u5ea6\u3092\u9054\u6210\u3057\u3066\u3044\u307e\u3059\u3002\u6570\u884c\u306e\u30b3\u30fc\u30c9\u306b\u3057\u3066\u306f\u60aa\u304f\u3042\u308a\u307e\u305b\u3093\uff01\u9055\u3046\u30b9\u30bf\u30a4\u30eb\u3067\u306e CNN \u306e\u66f8\u304d\u65b9 (Keras Subclassing API \u3084 GradientTape \u3092\u4f7f\u3063\u305f\u3082\u306e) \u306b\u3064\u3044\u3066\u306f[\u3053\u3053](https:\/\/github.com\/tensorflow\/docs\/blob\/master\/site\/en\/tutorials\/quickstart\/advanced.ipynb)\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002","5449dd4a":"\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u3001MNIST \u306e\u6570\u306e\u5206\u985e\u3092\u3059\u308b\u305f\u3081\u306e\u3001\u30b7\u30f3\u30d7\u30eb\u306a[\u7573\u307f\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af](https:\/\/developers.google.com\/machine-learning\/glossary\/#convolutional_neural_network) (CNN: Convolutional Neural Network) \u306e\u5b66\u7fd2\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\u3053\u306e\u30b7\u30f3\u30d7\u30eb\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f MNIST \u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u306b\u304a\u3044\u3066\u300199%\u4ee5\u4e0a\u306e\u7cbe\u5ea6\u3092\u9054\u6210\u3057\u307e\u3059\u3002\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u3001[Keras Sequential API](https:\/\/www.tensorflow.org\/guide\/keras)\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u3001\u307b\u3093\u306e\u6570\u884c\u306e\u30b3\u30fc\u30c9\u3067\u30e2\u30c7\u30eb\u306e\u4f5c\u6210\u3068\u5b66\u7fd2\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nNote: GPU \u3092\u4f7f\u3046\u3053\u3068\u3067 CNN \u3092\u3088\u308a\u65e9\u304f\u5b66\u7fd2\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3082\u3057\u3001\u3053\u306e\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u3092 Colab \u3067\u5b9f\u884c\u3057\u3066\u3044\u308b\u306a\u3089\u3070\u3001*\u7de8\u96c6 -> \u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u306e\u8a2d\u5b9a -> \u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30a2\u30af\u30bb\u30e9\u30ec\u30fc\u30bf -> GPU* \u304b\u3089\u7121\u6599\u306eGPU\u3092\u6709\u52b9\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","93006866":"<table class=\"tfo-notebook-buttons\" align=\"left\">\n  <td>\n    <a target=\"_blank\" href=\"https:\/\/www.tensorflow.org\/tutorials\/images\/cnn\">\n    <img src=\"https:\/\/www.tensorflow.org\/images\/tf_logo_32px.png\" \/>\n    View on TensorFlow.org<\/a>\n  <\/td>\n  <td>\n    <a target=\"_blank\" href=\"https:\/\/colab.research.google.com\/github\/tensorflow\/docs-l10n\/blob\/master\/site\/ja\/tutorials\/images\/cnn.ipynb\">\n    <img src=\"https:\/\/www.tensorflow.org\/images\/colab_logo_32px.png\" \/>\n    Run in Google Colab<\/a>\n  <\/td>\n  <td>\n    <a target=\"_blank\" href=\"https:\/\/github.com\/tensorflow\/docs-l10n\/blob\/master\/site\/ja\/tutorials\/images\/cnn.ipynb\">\n    <img src=\"https:\/\/www.tensorflow.org\/images\/GitHub-Mark-32px.png\" \/>\n    View source on GitHub<\/a>\n  <\/td>\n  <td>\n    <a href=\"https:\/\/storage.googleapis.com\/tensorflow_docs\/docs-l10n\/site\/ja\/tutorials\/images\/cnn.ipynb\"><img src=\"https:\/\/www.tensorflow.org\/images\/download_logo_32px.png\" \/>Download notebook<\/a>\n  <\/td>\n<\/table>","69284bd7":"\u3054\u89a7\u306e\u3068\u304a\u308a\u30012 \u3064\u306e Dense \u30ec\u30a4\u30e4\u30fc\u3092\u901a\u904e\u3059\u308b\u524d\u306b\u3001(3, 3, 64) \u306e\u51fa\u529b\u306f shape (576) \u306e\u30d9\u30af\u30bf\u30fc\u306b\u5e73\u6ed1\u5316\u3055\u308c\u307e\u3057\u305f\u3002","dda14bdf":"### \u4e0a\u306b Dense \u30ec\u30a4\u30e4\u30fc\u3092\u8ffd\u52a0\n\u30e2\u30c7\u30eb\u3092\u5b8c\u6210\u3059\u308b\u305f\u3081\u306b\u3001(shape (3, 3, 64) \u306e) \u7573\u307f\u8fbc\u307f\u306e\u57fa\u790e\u90e8\u5206\u304b\u3089\u306e\u6700\u5f8c\u306e\u51fa\u529b\u30c6\u30f3\u30bd\u30eb\u3092\u30011\u3064\u4ee5\u4e0a\u306e Dense \u30ec\u30a4\u30e4\u30fc\u306b\u5165\u308c\u3066\u5206\u985e\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u73fe\u5728\u306e\u51fa\u529b\u306f 3D \u30c6\u30f3\u30bd\u30eb\u3067\u3059\u304c\u3001Dense \u30ec\u30a4\u30e4\u30fc\u306f\u5165\u529b\u3068\u3057\u3066\u30d9\u30af\u30c8\u30eb (1D) \u3092\u53d6\u308a\u307e\u3059\u3002\u307e\u305a\u30013D \u51fa\u529b\u3092 1D \u306b\u5e73\u6ed1\u5316 (\u307e\u305f\u306f\u5c55\u958b) \u3057\u3066\u304b\u3089\u3001\u6700\u4e0a\u90e8\u306b1\u3064\u4ee5\u4e0a\u306e Dense \u30ec\u30a4\u30e4\u30fc\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002MNIST \u306f 10 \u500b\u306e\u51fa\u529b\u30af\u30e9\u30b9\u3092\u6301\u3061\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u6211\u3005\u306f\u6700\u5f8c\u306e Dense \u30ec\u30a4\u30e4\u30fc\u306e\u51fa\u529b\u3092 10 \u306b\u3057\u3001softmax\u95a2\u6570\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002","bdefb90f":"### MNIST\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3068\u6e96\u5099","155a05b1":"# \u7573\u307f\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af (Convolutional Neural Networks)"}}