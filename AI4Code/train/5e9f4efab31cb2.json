{"cell_type":{"92804c70":"code","e5baf160":"code","ab2397da":"code","98e7ee66":"code","3bb95d98":"code","ffd0379b":"markdown"},"source":{"92804c70":"import pandas as pd\nimport numpy as np\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nfrom plotly import tools\n\n# These two lines are what allow your code to show up in a notebook!\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode()\n\nimport os","e5baf160":"# Read data\nlocations_df = pd.read_csv('..\/input\/incidents_locations.csv')","ab2397da":"# Encode type column\nfrom sklearn.preprocessing import LabelEncoder\n\nle = LabelEncoder()\nle.fit(locations_df['type'])\nlocations_df['type_val'] = le.transform(locations_df['type'])","98e7ee66":"# Determine co-ordinate range\nlat_max = locations_df.latitude.max()\nlat_min = locations_df.latitude.min()\n\nlon_max = locations_df.longitude.max()\nlon_min = locations_df.longitude.min()","3bb95d98":"# Plot map\n\nscl = [0,\"rgb(150,0,90)\"],[0.125,\"rgb(0, 0, 200)\"],[0.25,\"rgb(0, 25, 255)\"],\\\n[0.375,\"rgb(0, 152, 255)\"],[0.5,\"rgb(44, 255, 150)\"],[0.625,\"rgb(151, 255, 0)\"],\\\n[0.75,\"rgb(255, 234, 0)\"],[0.875,\"rgb(255, 111, 0)\"],[1,\"rgb(255, 0, 0)\"]\n\ndata = [go.Scattergeo(\n    lat = locations_df['latitude'],\n    lon = locations_df['longitude'],\n    text = locations_df['type'].astype(str),\n    marker = dict(\n        color = locations_df['type_val'],\n        colorscale = 'Hot',\n        #reversescale = True,\n        opacity = 0.7,\n        size = 5,        \n        #colorbar = dict(\n        #    title = 'Incident Type',\n        #    titleside = 'top',\n        #    tickmode = 'array',\n        #    tickvals = np.arange(len(le.classes_)),\n        #    ticktext = le.classes_,\n        #    ticks = 'outside'\n        #)                \n    )\n)]\n\nlayout = dict(\n    geo = dict(\n        scope = 'world',\n        showland = True,\n        showocean = False,\n        showlakes = False,\n        showsubunits = False,\n        showcountries = True,\n        showcoastlines = False,\n        showframe=False,\n        landcolor = \"#FFFFFF\",\n        subunitcolor = \"#FF3333\",\n        countrycolor = \"#000000\",\n        oceancolor = \"#0077be\",\n        lakecolor = \"#00FFFF\",\n        resolution = 110,\n        #projection = dict(\n        #    type = \"natural earth\",\n        #    rotation = dict(\n        #        lon = -100\n        #    )\n        #),\n        lonaxis = dict(\n            #showgrid = True,\n            #gridwidth = 0.5,\n            range= [ lon_min, lon_max ],\n            #dtick = 5\n        ),\n        lataxis = dict (\n            #showgrid = True,\n            #gridwidth = 0.5,\n            range= [ lat_min, lat_max ],\n            #dtick = 5\n        )\n    ),\n    title = 'Bike-related incidents reported across the world',\n    #autosize=True,\n    #width=1000,\n    #height=600\n)\n\nfig = dict(data=data, layout=layout)\niplot(fig)","ffd0379b":"## A global heatmap of bike-related incidents"}}