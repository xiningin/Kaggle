{"cell_type":{"2780f40d":"code","0fbf55a8":"code","6087efa5":"code","0399a1ed":"code","e941ca25":"code","cfcabef3":"code","8071164b":"code","fe3e5b5b":"code","0818e8f8":"code","cebb4ffa":"code","1e291e0b":"code","b8b2d0bd":"code","9e61f215":"code","05c73cdc":"code","f21064e6":"code","7801a6e7":"code","5a4532ec":"code","cc7322cc":"code","af17b405":"code","43b58b43":"code","896b27b3":"code","d1b6555a":"code","4fc94c10":"code","a63203bb":"code","c988284a":"markdown","ed7b79c7":"markdown","22cd4e8f":"markdown","28b97c39":"markdown","0f9a77fe":"markdown","923d44c8":"markdown","ac6f4895":"markdown","c86c3bba":"markdown","5b10deba":"markdown","b9944ff3":"markdown","75103eab":"markdown","ce2f3d46":"markdown","dffa89b5":"markdown","abab844d":"markdown","fe2116e6":"markdown","3551e404":"markdown","901af372":"markdown","9940cb48":"markdown","0d89508e":"markdown","bd4ee1c9":"markdown","1b56d6bf":"markdown","1010b164":"markdown","f3bb408f":"markdown","e3ca5179":"markdown","5fc24c53":"markdown","e5505474":"markdown","5438cab8":"markdown","ce4e54fc":"markdown","437cd68f":"markdown","87f386d8":"markdown"},"source":{"2780f40d":"# for performing mathematical operations\nimport numpy as np \n\n# for data processing, CSV file I\/O \nimport pandas as pd \n\n# visualizing inventory_parts that has most colors using matplotlib\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns","0fbf55a8":"# read the data from the csv files into a dataframe\nthemes = pd.read_csv('..\/input\/lego-database\/themes.csv', index_col=0)\nsets = pd.read_csv('..\/input\/lego-database\/sets.csv', index_col=0)\nparts = pd.read_csv('..\/input\/lego-database\/parts.csv', index_col=0)\npart_categories = pd.read_csv('..\/input\/lego-database\/part_categories.csv', index_col=0)\ninventories = pd.read_csv('..\/input\/lego-database\/inventories.csv', index_col=0)\ninventory_sets = pd.read_csv('..\/input\/lego-database\/inventory_sets.csv', index_col=0)\ninventory_parts = pd.read_csv('..\/input\/lego-database\/inventory_parts.csv', index_col=0)\ncolors = pd.read_csv('..\/input\/lego-database\/colors.csv', index_col=0)","6087efa5":"# checking first twenty rows for colors csv file\ncolors.head(20)","0399a1ed":"# checking the info of the colors dataset\ncolors.info()","e941ca25":"# checking the shape of the dataset\ncolors.shape","cfcabef3":"# checking the number of transparent and non transparent colors\ncolors['is_trans'].value_counts()","8071164b":"matplotlib.rcParams.update({'font.size': 20})\n\n# visualize transparent vs non transparent colors\ntransparent = colors['is_trans'] == 't'\nnon_transparent = colors['is_trans'] == 'f'\n\n# data to plot\nlabels = 'Transparent Colors', 'Non Transparent Colors'\nsizes = [transparent.sum(), non_transparent.sum()]\ncolors = ['lightcoral', 'lightskyblue']\n\n# explode 1st slice\nexplode = (0.1, 0) \n\nfig, axs = plt.subplots(figsize=(14, 7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors,\nautopct='%1.1f%%', shadow=True, startangle=90)\n\nplt.axis('equal')\nplt.show()","fe3e5b5b":"# checking first twenty rows for parts csv file\nparts.head(20)","0818e8f8":"# checking the info of the parts dataset\nparts.info()","cebb4ffa":"# checking the shape of the dataset\nparts.shape","1e291e0b":"# checking first twenty rows for part_categories csv file\npart_categories.head(20)","b8b2d0bd":"# checking the shape of the dataset\npart_categories.shape","9e61f215":"# creating new dataframe with part_categories and their parts\nparts_with_categories = pd.merge(left=part_categories, right=parts, left_on='id', right_on='part_cat_id')\nparts_with_categories = parts_with_categories.rename(columns={'name_x': 'Part_Category_Name', 'name_y':'Part_Name'})\nparts_with_categories.head(20)","05c73cdc":"# grouping categories and counting their respective number of parts\nparts_with_categories = parts_with_categories['Part_Category_Name'].value_counts()\nparts_with_categories.sort_values(ascending=False)","f21064e6":"matplotlib.rcParams.update({'font.size': 16})\n\nfig, axs = plt.subplots(figsize=(18,4))\nparts_with_categories.plot(kind=\"bar\", color=\"brown\", alpha=0.6, width= 0.8)\n\nplt.ylabel('Number of Parts')\nplt.title('Number of Parts in Each Part Category')\nplt.xticks(rotation=90)\nplt.legend()\n\nplt.show()","7801a6e7":"# checking first twenty rows for inventories csv file\ninventories.head(20)","5a4532ec":"# checking the info of the parts dataset\ninventories.info()","cc7322cc":"# checking the shape of the dataset\ninventories.shape","af17b405":"# grouping each version and counting the frquency of sets in each group of inventory\ninventories['version'].value_counts()","43b58b43":"sets_per_inventory_parts = inventories['version'].value_counts()\nsets_per_inventory_parts.sort_values(ascending=False)","896b27b3":"fig, axs = plt.subplots(figsize=(16,4))\nsets_per_inventory_parts.plot(kind=\"bar\", color=\"green\", alpha=0.6, width= 0.5)\n\nplt.ylabel('Number of Sets')\nplt.title('Inventory Version')\nplt.xticks(rotation=0)\nplt.grid()\n\nplt.show()","d1b6555a":"unique_inventory_parts = inventory_parts[['color_id']]\nunique_inventory_parts = unique_inventory_parts.groupby('inventory_id').count()\n\n# taking out the top 15 inventory parts with most colors available\ninventory_parts_most_colors = unique_inventory_parts.sort_values(by='color_id', ascending=False)\ninventory_parts_most_colors = inventory_parts_most_colors[0:15]\ninventory_parts_most_colors","4fc94c10":"matplotlib.rcParams.update({'font.size': 16})\n\nfig, axs = plt.subplots(figsize=(18,9))\ninventory_parts_most_colors['color_id'].plot(kind=\"barh\", color=\"orange\", alpha=0.6, width= 0.8)\n\nplt.xlabel('Number of Colors Available')\nplt.ylabel('Inventory Ids')\nplt.title('Inventory Parts that has Most Colors Available')\nplt.xticks(rotation=90)\nplt.legend()\nplt.grid()\naxs.set_xticks(np.arange(0,800,20))\n\nplt.show()","a63203bb":"sns.set(style=\"whitegrid\")\n\n# initialize the matplotlib figure\nfig, axs = plt.subplots(figsize=(18,9))\n\n# plot the Total Missing Values\nsns.set_color_codes(\"bright\")\nsns.barplot(x=inventory_parts_most_colors.index, y=\"color_id\", data=inventory_parts_most_colors, color=\"r\")\n\n# customizing Bar Graph\nplt.xticks(rotation='90')\nplt.xlabel('Inventory Parts', fontsize=15)\nplt.ylabel('Number of Colors Available', fontsize=15)\nplt.title('Numebr of Colors available per Inventory Part', fontsize=20)","c988284a":"There are **11681** total inventory parts in our database. Every inventory is associated with its set_num.","ed7b79c7":"## Objective of this Notebook\n\nThis notebook aims to explore, investigate for the facts and perform data analysis techniques on the provided dataset of Legos. Also, visualize data to inquire for more facts and inspect relationships between the datasets. ","22cd4e8f":"## Let's start with the Lego Database\n\nA comprehensive database of lego blocks is provided by Rebrickable. The data is available as csv files and the schema is shown below.\n<img src=\"https:\/\/storage.googleapis.com\/kagglesdsdata\/datasets%2F1599%2F2846%2Fdownloads_schema.png?GoogleAccessId=databundle-worker-v2@kaggle-161607.iam.gserviceaccount.com&Expires=1592688871&Signature=GxsFD0xJMmH5FPkPR49fItBIXQ%2Bi1lnczK0lhI087kkDx11CswjxFtJrDf3y3fCxK%2B0Z%2BuMcJ5XwzCYTzHin4E6OlykR3l6LUuEeftKqvBYoPqvXVZt7tCtDVWRNs4r0n7ie3GqZcN3gS1RvLtNJDhB19AZ%2BWb%2F7T9j89BKz1pK5vaiZ1ErsGYDv6n%2FPF8W%2FbSrsmfe6QaYQDJ%2FOAmbLchDIPW831V2zkDpziiuhKOW0xt30A3Kk8agbeHH3uLst2Ni3GO%2FiDIDndoD1zLZ6bMvfD5Cx2mF%2FuJQiToYB2GZZTppLg4pPukJsI%2FZzkX35tzyofLawPZb4HQxK8tKwLw%3D%3D\" width=\"800\">\n\nWe can see clearly the relationship between these tables from the above **Schematic Diagram**. We have been provided 8 csv files containing data of every table shown in the figure. We will explore them one by one. ","28b97c39":"# Exploratory Data Analysis and Data Visualization of Lego Database","0f9a77fe":"#### Importing Data\n- Importing Data with Pandas\n\n#### Required Packages for Data Analysis\n- NumPy\n- Pandas\n\n#### Data Visualization \n- Matplotlib\n- Seaborn","923d44c8":"### How many colors does the database have?","ac6f4895":"### Let's visualize the number of sets every inventory part contains?","c86c3bba":"In our database we have a total of **135** colors. Every color has their respective name, rgb and transparency factor.","5b10deba":"From the the above graph,**version 1** inventory has **11669** sets. Since **version 2** inventory has just **9** sets there is a slight upwards bar in the graph.","b9944ff3":"Inventory_ID **1305** has the most available colors.\n\n## Conclusion\nWe have analyzed data and have found different facts about the lego data set. Different colors, parts and their categories, inventory and its parts, most available colors in inventory, transparent and non-transparent colors, number is sets per inventory part.\n","75103eab":"### Which inventory parts have the most colors availability?","ce2f3d46":"### How many transparent and non-transparent colors do we have?","dffa89b5":"## Investigating Inventories","abab844d":"## Importing all the necessary packages to start data analysis\n\n","fe2116e6":"## Exploring Colors, Inventories, Parts and Part Categories\nWe have loaded our required datasets, now we will start with colors, parts and inventories first. Then we will move to inventory_parts. As we can see that colors, parts and inventories combines together to form inventory parts from the Schematic Diagram above.\n\n#### According to the above database diagram following are the relationships mapping: \n- Id (Colors) -> Color_Id (Inventory_Parts)\n- Id (Inventories) -> Inventory_Id (Inventory_Parts)\n- Part_Num (Parts) -> Part_Num (Inventory_Parts)\n- Id (Part_Categories) -> Part_Cat_Id (Parts)","3551e404":"We have **107** non transparent yet, **28** transparent colors.","901af372":"### How many part categories does the database have?","9940cb48":"## Investigating Parts and Part Categories","0d89508e":"In our database we have a total of **25993** different parts. Every part is associated with its part_category.","bd4ee1c9":"## Investigating Colors","1b56d6bf":"### How many parts does the database have?","1010b164":"**\"Minifigs\"** is the most used category and contains more 8.5K Parts.","f3bb408f":"In our database we have a total of **57** part categories. \n\n### How many parts each part_category contains?","e3ca5179":"### Let's visualize the number of parts every part-category contains","5fc24c53":"## Data Preparation\n\nIn this section, required dataset is imported, explored and cleaned to make it available in the right format for data visualization. \n\nData Analysis techniques used in this section includes: \n- Importing data set using Pandas \n- Exploring data to find features and target \n- Handling missing or corrupted values in the data\n\n*You can skip this section if you want to play with data yourself.*","e5505474":"### How many sets each version of inventory has?","5438cab8":"### How many inventory parts are there in the database?","ce4e54fc":"## So, what exactly are Legos?\nAs explained by Wikipedia:\n>Lego (\/\u02c8l\u025b\u0261o\u028a\/ LEG-oh, Danish: [\u02c8le\u031d\u02d0ko] stylised as LEGO) is a line of plastic construction toys that are manufactured by The Lego Group, a privately held company based in Billund, Denmark. The company's flagship product, Lego, consists of variously colored interlocking plastic bricks accompanying an array of gears, figurines called minifigures, and various other parts. Lego pieces can be assembled and connected in many ways to construct objects, including vehicles, buildings, and working robots. Anything constructed can be taken apart again, and the pieces reused to make new things.\n\n<img src=\"https:\/\/miro.medium.com\/max\/1400\/1*_HEXQOt7cl3TJT_MI0VM7g.jpeg\" width=\"700\"\/>\n\nThat's not possible that you haven't seen these little figures made up of Lego Bricks in your real life. Legos are currently very trending in entertainment, media, movies and games. They are very popular and many theme parks and retail stores all over the world.","437cd68f":"We have **5** inventory types, out of which **verison 1** has the most sets that is **11669**.","87f386d8":"## Importing Datasets using Pandas Library"}}