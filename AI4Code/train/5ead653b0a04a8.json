{"cell_type":{"10251d15":"code","132de5d8":"code","36dc6f2a":"code","410d1679":"code","682f4470":"code","882386ec":"code","67061bff":"code","94916d91":"code","951186f5":"code","a5d5ff91":"code","4cf7e73a":"code","02f970b5":"code","4f336e24":"code","b69526d1":"code","4aca2dc5":"code","02df83a5":"code","d193cbde":"code","0e086f99":"code","e74f02cf":"code","1fd2752c":"code","94ea52ec":"code","d7759a29":"markdown","aad1cca4":"markdown","702a5efd":"markdown","d380c02a":"markdown","cabebb43":"markdown","cf1ec1c4":"markdown"},"source":{"10251d15":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","132de5d8":"import tensorflow as tf\nprint(tf.__version__)","36dc6f2a":"from tensorflow.keras.layers import Input,Lambda,Flatten,Dense\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.applications.resnet50 import ResNet50\nfrom tensorflow.keras.applications.resnet50 import preprocess_input\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.preprocessing .image import ImageDataGenerator,load_img\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom glob import glob","410d1679":"IMAGE_RESIZE=[224,224]","682f4470":"train_path=\"\/kaggle\/input\/files1\/Malaria Cells\/training_set\/\"\ntest_path=\"\/kaggle\/input\/files1\/Malaria Cells\/testing_set\/\"","882386ec":"resnet=ResNet50(input_shape=IMAGE_RESIZE+[3],weights='imagenet',include_top=False)","67061bff":"resnet.summary()","94916d91":"for layer in resnet.layers:\n    layer.trainable=False","951186f5":"folders=glob(\"\/kaggle\/input\/files1\/Malaria Cells\/training_set\/*\")","a5d5ff91":"len(folders)","4cf7e73a":"x=Flatten()(resnet.output)","02f970b5":"prediction=Dense(len(folders),activation='softmax')(x)\n#model's object\nmodel=Model(inputs=resnet.input,outputs=prediction)\n","4f336e24":"model.summary()","b69526d1":"model.compile(\nloss=\"categorical_crossentropy\",\noptimizer=\"adam\",\nmetrics=[\"accuracy\"]\n)","4aca2dc5":"train_datagen = ImageDataGenerator(rescale = 1.\/255,\n                                   shear_range = 0.2,\n                                   zoom_range = 0.2,\n                                   horizontal_flip = True)","02df83a5":"\ntest_datagen = ImageDataGenerator(rescale = 1.\/255)","d193cbde":"training_set = train_datagen.flow_from_directory(train_path,\n                                                 target_size = (224, 224),\n                                                 batch_size = 32,\n                                                 class_mode = 'categorical')","0e086f99":"test_set = test_datagen.flow_from_directory(test_path,\n                                            target_size = (224, 224),\n                                            batch_size = 32,\n                                            class_mode = 'categorical')\n","e74f02cf":"r = model.fit_generator(\n  training_set,\n  validation_data=test_set,\n  epochs=20,\n  steps_per_epoch=len(training_set),\n  validation_steps=len(test_set)\n)","1fd2752c":"# plot the loss\nplt.plot(r.history['loss'], label='train loss')\nplt.plot(r.history['val_loss'], label='val loss')\nplt.legend()\nplt.show()\nplt.savefig('LossVal_loss')\n\n# plot the accuracy\nplt.plot(r.history['accuracy'], label='train acc')\nplt.plot(r.history['val_accuracy'], label='val acc')\nplt.legend()\nplt.show()\nplt.savefig('AccVal_acc')","94ea52ec":"model.save('Malaria.h5')","d7759a29":"**selection of Cost function  and optimizatizer**","aad1cca4":"**Data augmentatioion must be applied on training data\nNot on test data**","702a5efd":"*Select train and test path***","d380c02a":"Glob is used for getting number of output classes","cabebb43":"**Insert Rasnet50 library [224+224]+[3] demonstrates the RGB layer**","cf1ec1c4":"**view of model**"}}