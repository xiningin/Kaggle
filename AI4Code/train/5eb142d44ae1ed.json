{"cell_type":{"15d3b144":"code","dd7d4345":"code","83672c83":"code","de0d7ed7":"code","00846e4a":"code","a5a9e672":"code","a7eec8e9":"code","4b1527b6":"code","1e60691a":"code","67a6e8bf":"code","dbbaea59":"code","ee1bd96c":"code","321e6e6f":"code","c780f2ab":"code","5a9f2e09":"code","c8b84c59":"code","dfead087":"code","eb075b6c":"code","f5860862":"code","93503154":"code","556270cf":"markdown"},"source":{"15d3b144":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","dd7d4345":"import pandas as pd\nimport numpy as np\nimport shapefile as shp\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\ndata = pd.read_csv('..\/input\/winemag-data-130k-v2.csv')\ndata.info()","83672c83":"#data correlation table for numeric values\n#there is a slight correlation between points and price of wine\ndata.corr()","de0d7ed7":"#for visualising correlation heatmap used\nf,ax = plt.subplots(figsize=(3, 3))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","00846e4a":"# displays first 10 rows in dataset\ndata[:10]","a5a9e672":"data.head(10)\n#code shows the same result as previous","a7eec8e9":"data.columns\n#displays column titles existing in dataset","4b1527b6":"#displays frequency of each country in dataset\ndata ['country'].value_counts()","1e60691a":"# Scatter Plot \n# x = points, y = price\ndata.plot(kind='scatter', x='points', y='price',alpha = 0.5,color = 'red')\nplt.xlabel('points')              # label = name of label\nplt.ylabel('price')\nplt.title('points price Scatter Plot')            # title = title of plot","67a6e8bf":"#frequency distribution diagram shows the frequency rearding to the countries in the data set. \n#don't find how to arrange x-axis for graph being more readable and presentable.\nfig, ax = plt.subplots()\ncountry_count = data['country'].value_counts()\nsns.set(style=\"darkgrid\")\nsns.barplot(country_count.index, country_count.values,alpha=1)\nplt.title('Frequency Distribution of Country')\nplt.ylabel('Number of Occurrences', fontsize=12)\nplt.xlabel('Country', fontsize=12)\nplt.show()","dbbaea59":"#did not find how to arrange figure size!!!\n\ncountry_count = data['country'].value_counts()\nplt.barh (country_count.index, country_count.values, alpha=1)\nplt.title('Bar Chart.Country of wine origin')\nplt.ylabel('Number of Occurrences', fontsize=12)\nplt.xlabel('Country', fontsize=12)\nplt.show()","ee1bd96c":"#did not find how to arrange frame size, x=axis\n\ndata.price.plot(kind = 'hist',bins = 50,figsize = (8,8))\nplt.show()","321e6e6f":"#trying to arrange figure size and x-axis but not succeed\nplt.rcParams.update({'figure.figsize':(7,5), 'figure.dpi':100})\nx = data['price'].value_counts()\nplt.hist(x, bins=100)\nplt.gca().set(title='Frequency of prices Histogram', ylabel='Frequency');","c780f2ab":"#displays frequency of each price in dataset\ndata ['price'].value_counts()","5a9f2e09":"x = data['price']>3000    \ndata[x]\n\n # There is only 1 wine which have higher price value than 3000,\n # so there is something wrong in frequency historam","c8b84c59":"#wine from Australia has price equals to 820\nb = data['price'] == 820    \ndata[b]","dfead087":"z = data['points']>90     # shows wines which points are higher than 90 over 100\ndata[z]","eb075b6c":"#shows the total of w\u0131ne types which took more than 90 points\ncount_z= z.value_counts()\nprint(count_z)","f5860862":"#wine which point is higher than 90 and price is lower than 15\n#there are 174 wine in this category\ndata[np.logical_and(data['points']>90, data['price']<15)]","93503154":"series = data['points']        \nprint(type(series))\ndata_frame = data[['points']]  \nprint(type(data_frame))","556270cf":"I used Wine Reviews dataset for my first experience.\nThere are a lot of things to learn and understand.\nSo I have just take a look at the python for data science\nThere are a lot of questions regarding to the graphs which I have not understand yet.\nI sure I will \u0131mporve myself by keeping practicing."}}