{"cell_type":{"a744ca6f":"code","1458416a":"code","d42ce549":"code","bc07d57d":"code","fb33e209":"code","f5a86719":"code","8d391cc4":"code","42eb2729":"code","3a9d8873":"code","b30cb8c6":"code","8d9407d0":"code","2719be7e":"code","aab7b1f3":"code","4b832ef7":"code","3c0f8147":"code","256777dc":"code","dbaaa081":"code","0b599bd7":"code","eb1ea5d6":"markdown","bd6a2f3d":"markdown","2419f75b":"markdown","d457a843":"markdown","bc35d723":"markdown","eae8195a":"markdown","6e534050":"markdown"},"source":{"a744ca6f":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcSgrx_cFtvNYLR0xCTk8vKpQf0nk3iIkKLZrMnOG6KGpLisTk5k',width=400,height=400)","1458416a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d42ce549":"\n#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxMTEhUTExMTFRUWGBkVFxgXFiAeHRshHRgfIB0fFiEaICggGSAmHh4ZITEhJyorLjAuHB8zODMsNygtLisBCgoKDg0OGxAQGy4mICY3LzUtLTI3Ny0vMC0tLy0tLS0yLy0xLS0vLS0xLTUtLS0tLS0tLy0tLS0tLS0tLS0tLf\/AABEIAMIBAwMBIgACEQEDEQH\/xAAcAAEAAgMBAQEAAAAAAAAAAAAABQYDBAcCAQj\/xABKEAACAQIEAwQHAwkGBAUFAAABAgMAEQQSITEFBkETIlFhBxQyUnGBoVSR0xUWI0KTlLHB8DNVYpLR4XKy0vEkNXSCtCU2c4Si\/8QAGwEBAAIDAQEAAAAAAAAAAAAAAAIDAQQGBQf\/xAA0EQACAQIEBAMFCQEBAQAAAAAAAQIDEQQSIVEUMUFhBRNSFSJxofAyQmKBkbHB0eFT8SP\/2gAMAwEAAhEDEQA\/AOG0pSgFKUoBSlKAUpSgFKUoBSlKAUpSgFKUoBSlKAUpSgFKUoBSlKAUpSgFKUoBSlKAUpSgFKUoD7SrBalq9H2e\/UavFdiv0qwWpans9+ocV2K\/SrBalqez36hxXYr9KsFqWp7PfqHFdiv0qwWpans9+ocV2K\/SrBalqez36hxXYr9KsFqWp7PfqHFdiv0qwWpans9+ocV2K\/SrBalqez36hxXYr9KsFqWp7PfqHFdiv0qwWpans9+ocV2K\/SrBalqez36hxPYr9KnHfwF62IYwdSQNLgb3+G1q150Ix0Url8HKXSxWqVZshJ6Bt\/l5dP8AtQILkFb+Fjp8\/HcVX5fctylapU6y6dK8sQf1Rt0NPL7jKQlKs3CuFvO4jjAuQTa\/hber1yhymVYtOFzg2RdCFHVja+vh4Wv1FtHFYqnh08z126l9LCyqfA4+BSuyrxTAG+ZipudMpPU2OmmosfnSqOMqf8mW8LS\/6fL\/AE51SlK7Q5sV6VCdgT8BXmrFy\/zJ6thsRCFcvM8ZBEjoAFVwbmN1JPeHdN1NjcbVCbaV4q5OKTepA9i2TPlbJmyZraZrXy32vaxtXmRCpKsCCNCCLEHwIOoq\/pzxhC0ubCWUyu0OSCD9EpjVV7pGVnzB73vo++lq2Tzlw6VrPhioknklkeWJGORzJmF0u5Yq6hdNGUa2AtT51RfcLPLjuc2UX0Gp8qEdeh2q2QcwYaPHQ46NHXLJIWhVVARQmSEJsCxGranWpwc+4AvEWwThIe1ypkjdf0rxPJo7blll10tmXfUVKVWa5RMKEdzm169SRlTlYEEbgixHxB1q6Sc14Vg6DDCNexjjjZMPAzqw\/tc2cEMJLIMxuRl0GprNxDniCTG4bFDDH9DJIz91FZlaNVTVT3mRg7At4jXwebP0jJHco6wMTlCsT4ZTfQXOm+2tY66UvpFgBJ7KYkSNICyxsXLYUQkyF2JXvC9gSMtlvYWqKwfM+BWfFSvhCyzqiogiiKraLK+hICEv3rr8xe1sKrU6wDhHcpYXW3XwoFNibGw3NtB8fCrxHzpD6+cWwxARsN2LoiRAkmPKdiAVBOcH2rgD2RYeeEc3YfDxSoqYhw8KxCMqixkhMpZgjAXJ3YqzEAaisurP0jJHcpLKRuCOuotXyugYrm\/C4jG4WSVZTDE2KeQ4hVkP6ZDkRVAIKIwUKCOuwtWrh+aMCmIknGGdi6xpleKEr3exu4T2Ud8s18ugLLbqaKrP0h047lJpVh5p4rhcSVeGF4XUBMqpGkZAdzchP1gpjUH\/AAm\/Sq9VsW2rtWK5KzFKUqREUpWfBYVpXCILk\/TzPlUZTjCLlJ2SJRi5OyMBrFJGT8KtEPKMjztErFURVYyuhykkDQWtfUnbwqM4pwuTDydnIBpqGGzKdiPKvBq+KQrSyQffuerTwbpxzSRqxw2I206H616YAkG2o+n9CgUXGt\/662rzlOpHz8vP61HMWHtSLWIuTpp\/HWlrEW0t8\/41ijN9x13PX4V7jW9hfb+taZwjw0e5t\/KvJj65fu\/r5VunDi1yPl\/r\/XhWXAcPklOWJSSdwOgvYn61idZRV2TjFtkjyNOqTNGQQ0q2VhY2ygswPUXHh4V0KDELEhlY2CISxN7+W2hqvry5go0AkkUOp70hkyODe+mvdFrW8j1rT5u4opRYYp80dhnKkNmN9A7i5NrX+evlzdaMcZiE4X1532W3xPUjJ0qTiymtKb66\/OlfWhB1A0+F6+10OQ8zMzUpSpvlBcEcR\/8AUGZYMjarnvmuMv8AZgttm8q6SUsqueFFXdjV4VNhlzesRSybZezlCW3ve6tfp91b\/rvDfsmK\/eh+HXS5uTuALhBjWMww7Ws+ebq2Ud0DPvptVGxPJ4xTYqfhpQ4KAixkZw2kKu9g65j3i29vurWjWhNt6r5IvdOUVpZkd67w37Hif3ofh09d4b9jxP70Pw68YXlLESYJ8evZ9gmbNdu93TY2Fv51Mw+iriLdmVWErIM2btNFFgRn7t+uwv8AzqblTXOXzIqM30In13hv2PFfvQ\/Dp69w37Hif3ofh184tybjMPikwjRh5pdYhGbh99ibWtY3va1rnTWpXifou4hDE0pWKQIMzLHJdwNzoQL6a2BJ8L0zU9Pe59zFp7EV6\/w37FiP3ofh0HEOGnbB4g\/\/ALY\/DrX5PzHHYbIkcrdquVJDZGPQMbG3jex1tVx5s5YxfEOKSokOHhkWGN2USXUi5AYsEF2O22wFYlKMZWb+ZmKbjdFX9e4b9ixH70Pw6ev8O+wzn44v\/SOpSb0XcRWFpmjjGQMxTtLuQt9QALbC4F7+V9KgOU8Ck+Mw8MgJjklVGsSCQfAjUVlODTabdu5i0k7NG3+UeHfYJv3w\/h18PE+G7eozX\/8AWH8Otv0mcChwWOMEAZYxEj2Zixuxa+p16CpzgPbfkHE5cLhmiu5aZns4sRc5chzMumU5h9NYuUcqkr69ySi8ziVn8o8O+wTfvh\/Dp+UuHf3fKfjjG\/klY+ZuU8RgViebsykwJRo2LDQA6mwtcEEeNj4Vs8T5FxsHq6siNJiTaKJGu57tzmBAC2BFzew+tTvT55vmyNp7GL8p8O\/u6T99f\/oqM4rPA7AwQNAtrFWlMlzfe5Atp0q0cR9FvEYomlyxPlGZkjku4HXQgA6dASfC9QUXK+KbBnHCO+HBIzZhewbKWC75Q2l\/5a0hOnzUvmYcZ8miGpSlXlR9Aq08PmiwQHagmR9SF8L+O2l9uprS5RwoadWYXAIAvtc9T8P510bEcOicKuIjU2YFc2m2w+G+m2tcl494lFTWH+79637HveGYSWXzWtXy\/s88MxEckIZJLo\/snKRext1F99KovOnEM0+SxHYgx94ak3JJ+F9vEV0nEYfRSAoAuSP9Lab3qA5t4G2KCZAuZTfMzW0O6iwJ3sflXOeH1Yxr5raa\/keritaVmzlzza9d96+NKel9avg5CFgXlN\/8Ngvw72prUm5JAIIkJXwAFz8zpv5V0tOvCfJnjtWKjFOb7VLcDjjeaNX7oZlGgvudvntfzqTTk0Bru5ZdbqPaGmmouN63uJcsJ2azYYtDIneys99Ra2UnY3HjYkjaq8RVUfdd1fr0RdRg3rp8Oppc5YAx4glUVI2Hcy2AOgzaDQG9SPLHB5Y5BIwKDUMhuCbrdTtY962nS3larFwrDGbJ61ChkQAkEKQGGhK9Ndx8vCqTzBzVM8rGIvCoXsylxe4JudtD0uNdK8ilVq14eRG2is30N+UI0pZ3+R854iHbdsCO+ALfraDU2Ow0t8fjVdwoLH4EX++sqo0zZpHa4AAZtdthr8as3LnB+1cRqwWwzPZddLD79dzXrU2sNRSm+RqVH5s24qyI6LhM7C6Ruy3NiB4G302pXUcCMPHGqRuoVRp1+d+tzr86V5kvGK13am7fBk\/Jh6jh1KUr6Gcwdd4t\/wDasPxj\/wDkGsnoYj7Xh+PgUr2jswAJ2zw5VJ62uDr5VyVsbKUEZlkMfRDI2Te+i3y767UwuLkiOaKSSNrWvG7KbeBKkG1ajwzyON+buXqqsyZ2nEcAkwXLmKgmKGQJIzZCSBmYEC5AubW6V49JvEpocJw0RSyR5mjzZGK3sikAkbjyrjbcQmKlTNMVa5ZTI2Vr7lhezE+dfJ8bK4AeWVwvsh5GYL\/wgnT5VFYV5ryd9W\/1JOurWSP0LxzGRx8awPaELnw+IjQn3i0ZAv0uAQPM260jwkuHxWImi4dGM+YvO2MsJBvqpU5TpbUWG17V+ecTjJZLGSSSQjYu7Nb4ZibVln4pO65HnndPdeV2X7ibVDgnormeIWxL8hNfimENrXnBt4amu0cO\/wDP8V\/6OH\/nNfneKRlIZWKsNQVJBHmCNRWwvE58xcTzhyMpcSvmIGwLXuR5VdWw7qO9+liFOqorU7V6LuJzTT8UEsryBZbKGYkL3pBZRsosoFh4Vyb0d\/8AmGB\/\/LHUXBj5UzFJpULG7FJGXN5tlPe36+NYoZCpDKxUjUFSQR8CNRUo0Mua3X+jEqt7djtPpH9HWMx2N9YgbDhDGiWkdgbqWvoqMLa+Na3CMI0XLuPie2aN8RG1tRdWANrgXFx4Vyr8s4r7Viv28n\/VWL1+bKy9tNlYksvaNlYncsL2YnqTvVaoTyqLasrE\/Nje6R2f0fpFxThsMM+r4KdN+oTVL+RQlD\/wmtWDmiOXmTvMBHEj4SIk6Z9Cx8AS2ZPOy1yDC4ySO\/ZyyR3tfs3Zb22vlIva5+81hJvqdfjThVeTvo727XMefoj9HR4OWDFzzw8OjBe5fENjLCQb6qVYqelrWGwNq5VFwzHvwaTEJiFTBF2b1a4uB2tjY207+uS9ja+5tVRm4riHTI+IndNsjSuV+4m1YfWpMhj7STsycxTOchPiVvlv52pTw0o9V0+QlWTMNKV6ilKsrDcMCL+RvWzUnkg5bFMI5pJF24fwOV8HlhLLI24ey7nUHQkaXtVlwPCf\/DpFK7PIAFdlc6f4QQBcAaXOvnVKw3OE6PnAjy6js7afG981\/O9vKrFg\/SHEFUyRSiT9YRhcu+4Ja+3iOlfOsXSxkm3a93fTmdZSlTjZLorFhhUsTlJVBoVKHe+411BFvDx1rbhwdlVSSSBrbY316i9\/66Vorx9HCGIsyt3mzgDQ2tax3H9XrYl4k1yAQF2Ujw66kGx3F9vhatGNLE2SWiK61Wk5XauesXhGOWysVOhHhbwtuOlROIvcnIwI96+nxHTQ3+YqwYPGI41cAqLNcjXzuNDUbxLi9nZciW0ADADMLakG+vT\/AENq2sFVrqbhKPLqatZQtdPmQZnGgbTNc3+FtL9DessUpQ5SNN7HUnfbx26VvpicGdFj7ynPaS4v0JzG5sNrEWuK0sar6yBBYhrBdQATfSxtrr\/tXpwxU5O0otfEhkS5MkeHqoYyKDdgAdTby0vpa\/1rlPHsJNFK3bKMzkuSPZNzc5fK\/wDKumQRPEEcnNEQjMQLEZj4HU77\/SvvMGAixkbRKRcd6N7XsbfK4OoqFKtS8xyiufX4FzzpWkc95Vw7zzLEouoOZ\/JQRf56geOvzFx4rzAsJOHw6hchyl99b94KDv4ZiacZ4vBgcIYFcCXssiIhNwSLZmI26ne9c2XEs5CqCSdLC5J+AG9KceKl5lRWiuSfXuWTkqayx5kziQSx7qHbUtrt11r7WieF4n7PN+zb\/Svlb+enuv1KPe2NE7V1fjPJeFdonYerwQ8PXEz9iozuddgRa5s1yfADrcc44HxmbCSiaBgrgFblVYEHcEMDvYba+dSZ54x3rRxfb\/pSnZEZFyFL3yFbWtfXx866arCpJrLpY8WnKCWpfOXOT8JH2smcyYbEYBp42mjVpItRdrAWJAYEEW8POo+P0cYNnVlxOI9XfBti1cqucZSvtDKLrlYHLYHTeqpNzzjmeR2lBMkRw5GRcoQ7qgAsvx3+4V5i51xioqCRcqQHCr+jX+zNrjbfujXeqPJr3vcn5lPYtEXIGCefChcVN2GJwzTpnyLKzKVsqkrkFw17EX0O\/SI\/N2ODjGHwrRymJpIrriAhLBjrfs7qy7j5Go3Cc6YyMQhXjywxGBFaJGGQ27rZgb6qpvvpWti+ZsTJilxjyBpkKlDlFly+yAoFrCpxhW1u9LP\/AAw50+iOiYrk3CxJxiQPhJskUrxRJYthiA5Fx+odh\/7aiOJej\/DIJ8OmInONw+F9bfMi9gwA1Vf1gelyet9bEVUo+ZcSDiyGW+NDLP3B3g2a9vd9ptq28Zzzj5cO2Gae6MnZs2Rc7La2Vntcj6nqTc3iqVZcpfWhLzKb5oteO9HWCDy4aPE4r1lcIcWoZU7Ow0sxCgnXwtYeNbnP\/J2HWD19gyRJhYUSLDqqlpCWu0pykKveQFrX+4Xr\/NPpKxGIDRwEwwvEsTKVUv1DZWAuAwIFvLS16ipOesaxbNIrK8K4dkMalCilrAqRa\/ebXfWsKnXbTbDnTWhd+N8rQ4iRnxWIlVMPw7Dz5kRL2JluCqp3rBNOutaMfo6wZxSxjEzdlJhUxMSkxrLIWJGVSwCbAG1r6+V6qWI5zxjrIrSKRLh1wj9xdY1zWG2h77a761kg56xqsrCSM5YkgCtCjAolyoNxuCSbi1ZVKslZMw5030JHg\/L8UfG4sG8UjRZyCmIClmHYs3fCd0i+ot4CpvnDh+A7fD4fssJEj4gxs+CcGZdCqiRSlhdmW419k2qjHmbFHGDHGTNiAcwcqLDulbBbWsFNrVKYr0iY+Ro2d4iYn7VP0K6NkZb7a6O2\/Wx3ArMqVRyTv036iNSCTRY5fRph48XhsHJPOZZ+2csgUKsaXyWzKbue7fUga+IrFhPR1hsSIHwuJnyNiHw8pmRQR2asxMQUD3LC9\/a8iKieX\/SFPFPDJiicQkLSuug7QGQMGs51y3a+XbQW2FaXEue8dK8T9tl7FzJFlRRYm4u1hZzlJBvpqdNawoYi9r\/WozUrci1xejPCviIEWedUkMqurPC0qlFJVgY7rlYA6EXFxXng3AeDNhMbIJMTOsKx5psoDLe9zACANSP1gdLamqw\/pAx5lSbtIw0ebKFhQAFhZiQBckjxNRvLnMmJwWf1dwokAV1ZAwNtjZhuLn79b08qs1rLYZ6aeiLMeSYPyWMaj4iaTse1fsmi7ONrXKyKf0gy9SL7HQVXOWeFrMzMwJEeUgXtqSd\/HbbzrO\/OuNOGOG7RBGU7IlYkVigFsmZVHdtp4+dfeV+KrCChjaQu40U2O2lr6G50tWp4l50cJPXV8vhf8jYwflvERdtEWXD8MWa7T4cA3Krd\/wBUbHu2869YLljDxSCdS7CMElCMwOm4FixPl9KkeYcU2HhDxRh3LBQpuxIJ10X+NRWC4\/iQplkwqLCBqikmUf4rnS1\/1bXt8K4aMq845ouyelr\/ACVzqJODf2bvexkixal2tfQgrplYd7qGt9xta3SvD48EEKALAgi5ufeHgTv13tU5FxTCizB4hI63uCCbAdSBp9Kr3HJgZ863tcKWJsCRcHXzBGp6Ct\/CVnUnlcGl3PLxNFRTdzxHiynaBSOjL5jb+Hn4VgxfERIBfQbWbUX8iuq\/DbetRJRc2uu+x2BOoOlrHTXzrG0ZB9nMb7HY\/wDDprfe3zr3Y04rWx5ruZO31urA666k\/O5\/jpWzhuKMtyLm++ujC+5871GumlwhN9B\/Rr7hxqb6a2v008LW8uvWkoRfNEotosv5wF1tIDdR12PQadD1udTf5VvQcxqWZzlDMoS17WtfxNzufppVHxCG5uCSD8CQdtLb2+lZeGqGa5NuupsT\/Ib1pywVFrkbEakiR5r4ZBJKs0zuiMoVigBs1rqTodCNPu2rR4Px7A4eVTFh5LEZHcm7D\/hBJvfrYrVkxWEEsTrIvdcXUjpaxFuvgfO9UjFcuyxQiaQBczFQjGznS97Ebf7VCpSpy9ypJ66JXL4VJRV4padTo6cxYMgH1hf8rf6UrlGQUrV9i0t38v6LOPnsjHSlK745YVfuQOSoMbhZZ5fWmZJhEEgKXIKobntB0zG+uwqg1bOVecVwmGkw0mFGISSUTG8xjsQqgDuqT+rfeqa6m4e5zLaWW\/vElN6NXbEYuOHExdlhXjVnmOXR0DEsQMvdub7Xt02GXF8jPLHgooEw4dxOXnWViHWN7do4K2A2tlv7Q6Vp8a9IsmJjxcbwIPWREgyuf0YjNxuO+SSddKcJ9IsmHXBqkCkYZJImvIf0iyWJ2X9GQVBB1qi2Isn1\/wA\/stvSuSnK\/o2U4tFxUkUuHaJ5UyOydrlIBHR1ykgttuvmKhuE8sw4zic0COkWGjVpmaGQyqEQID2Tvq12bcg218K2k9I2XEJMuHcrHFLEFkxckrHtCpLFpc1rZdgPnoKrfKXMEmAxAnjVX7hjdG2dWtcHw1Cm\/l1rMY1mm3ztoYbp6JG\/xHA8NleGPAzTo0j5GbFZRGBbRrqL3J0t\/CpI+jLEdtDEs0DCZJJEkGbL+jKhg11uD3hb5+FMJz1hoJ4pcNwuCHIWLESEsQylSFOXuAXvsdulTfL3pHhbEwduhgigjxCh2lknZjIVsGJUuTpuSflWJOvFe6nbvZsylTfM0OXeQiuJwrOcJjIJxKoyTN2eZEYkFlU3sQbWvsdq0cfyMgwOGxMWIjabEMFEOcd5nkCqkOlyyFrPc6ZW8KzYP0jiFsKIMFHFDh+0YQiUnM8ikE5ipIAzNYWO9R+H50y4SCA4ZGkw0pnw8xkYZGMvad5ALPrpYnUedYSxF7\/XUXpWsbcvo7kidC02HmRcRBBiUic5ou1kVbNcD3reOu1eoOUYJOOPw+8iwBmAKsM+kOfdgevlX3GekQHMYcEkLTTw4jEMJWbtDFIrgLcdwErqddzob3qOw3OZTijcS7EEsSey7TTWLJ7WX57VKKrtO+zt8TDdPoS8Xo7eLDTT4mORHTEQxxIXXLIjyovfKgsL5iLggjwqXxXI+FaTEFouzKY7DYcJFKxRUkWAsAWAJJ7Rje2hOmgFVLA87yJBNC6NL2s8c4ZpScnZyK+QAg6HLa9xa+1Sc\/pKZmmb1YDtcVBi7drt2KxDL7Gt+y30tm2NqhKFdv67ElKkVjm3h6YfG4iCO+SOQotzc2HietRFSHMHE\/WcTNiCuTtXL5b3tfpewv8AdUfW7C+VX5mtK13YVuYCVkZXQHOpLXAvtb+HX4itOrZyFMQZR4ZG3t4gj\/lrzvF5ZMJKVr2t+5t+Hq9eKNrhfOBdwk6AiQoqFBYAk2ubnUG41B6bVpcwcUkwuPLXzoVXuZiFsdPMBrgm9tqkea+WHmnQwIi50u+oUXB38WJ8h0qYlwgEPYS2xDqoXVb5jbTLe9m2F71xXmYeLjOC+0rOP8\/VjqKca0k435aplewS4ecPjMxiKKc8YFxmtuTbW48N7+N6w4fHLL1NzvrrqLdfK+tbnLnIViTiwG7oyor21O+YqRqNOttatjYOKHvRQRZF7zKsQJuN7WFy1hp1NqzLG06U3GDcttl2uVulKrH3kkyvx8pzmPOFS4Fwt7Mwy7HTQ7aXqAkb2gQm\/UAkA+BIJNvHW31rp5kyEuW7qjOdDe1r+zvfytXLnnDO7hQAzFgL2sCb9PDar\/DcZWrSln5L6samJw8YJZT5g4i17jNp1F+v\/c6W\/jU7w3lmSUXtYAlbvcbe713vp8aycvcBOJV2zZApCDu3JawJvsQLWt8aksXx6SFex7ivGMmbLcm1x3AdBa25vfXSrMTjKk5Onh7OS536EKdCKV5lc4xwp4RaRcrdSGDX0HQHWtbARAWYgldtCLk9LA16xmOLkkklc3e1uWI6kkWJ8PCsBm1\/228Nq3aefKlPmQaV9CwwcTRFHaSMFG+mg8rDrfptWvx3m7DtB2caCZn0OdLBLjdb7t4W08zVK4vxAucoPd\/j8a1Iuu9QnhIVJxnPpyLFVkk4x6m6WHgfv\/3pVli5IxRAP6PUA6v4\/KlRfiFBffRLh5bFRpSldocyKUpQGbB4V5XWONGd3NlVRck+VS0\/J+OSVIWwsokkBKLp3soubG+XQa2ves3IPHkwONjxEisyAMjZdwGFrrfe38L1c+E87YHDNgoUlxM0UEk0zzyoc3fjkUKB7R1fU26eZtrValSMrRjcvhCDWrOe8W4BisMqNiIJIlk9gsN7C9t9D5GxqewvILdjHLiMZhMIZlzxRzNZmXoW93ceO4vrpXnmHmZMTw2DDtJI86YmWVy9z3WMmWzHfRl06VJ47jnC8dFh3xjYuGeCIQssKgrIF2Kkghb67238r1hzq2Wnxsr\/AAJKMLsjeD8hPLDHNLisLhlmYrAJW1lINrqNLA9NzqNBpfBi+R8RHDi5HZA+DdVliFySrBSsinYqQSdde6amYOO8MxOGwkWMbFRNgiyxlFB7VMwsHtfK1kS+2t7E309Ybn2GTieJmnRxg8VEcO6Wu2ULZSwF7m+ba9s\/W16jnrXf9d+nxRnLTI7B+jyVzCpnjV5sM2LyFWuiDLYP5nN\/\/JrJhPRvJJDh3XF4QSYmJZooZGKswKhiF0NyL9B91SGE54gPFcTi5C6wNh3w0ACXIHcy6DYGzN5ZqzQcz8L7LhsszYpp8BDGoijQBWdVX2mawIDKNiPntUXOv9Iyo0zmuLjMTtHIMjoSrKdwQbEH51ZuMcjYjDw4eV3iZsRKIFjRsxDMDYMw7t7ixsSBfemO59xUiYiMJhwmIaViDHdh2l7gPcbA2BtU1xLi3DPydDhYcRiu0w0hxETdlYlySdTYAAFiRtsKtlOorafyQjGDuRvGfR\/LBFM64nDzPhgpxMUZOaIMN9faG56aA1Tq6lzFz9hzg8RFFJJPNiVEbM0CRZRaxLlQDI1iQNxtt15bUsPKo085Gqop+6KUpV5SKmeUntikBZlDXBtax0vZr9NKhqyQSlWDDdSCPkaoxVHzqMqe6ZbRnkmpbHRI+JYvEySLgTCkad1pJBozXOqWBO1unnpfWV4lxjDYOMAurSJbu3BkLEC5bqCQb3NfOWooBF\/4fKge0jAHNuPAnu+Hy2qs86cGbt+2XNIJMq6LchgAoHdGt7C3zFfN4wp1a\/kyWWK\/Jtrd\/qdYpSUM6eps838anBw80HaLhwyyNIutwbaMPdsdjufC1TsPGYJ0vHKgsSdLkHrcefkdaq\/JPD8QMRILtGka2dJA1u\/fLlS410Jv\/rVqfEQBxhBlDtqVWM9b964Fh8Sd6jiYU42pRV2tbrZ66\/8ApsUJJvM\/r4HnB8QaZJcsTxOQyqZSMlyLAgoSTob2t86gOFcCfJPDNhwJEyukistm\/wAKnwNj4bm9tKuEeAjyhFLDW9zr4b6DwpIH2Qi62BVrW9q52uRcadbb2rXhisl1TVk7bkp04yd73\/o8FI4YZDEFhBQ20yte2mYnUm53qr4XgrzSvF2iAoFaS2tixawNtCbAk69RVgxssYbsXa7TXUAg21FzfpsPvttWaPh8cb9tZnewTMASbbWsg1HX61mliJUotq+aXJ8\/rqRqUYtanOeY8IcPP2KqZHsCMgvmuL6AXN\/EfOtjB8kYqeFZGkjiaS+SJ7gsAt76G4+FtBqa6Ji0XDRz4tEVnyhiLWuQLAm+uxFx5Vy3H8z4p5FYzSZkzFCDbLm3AsBuNNb162FxNfEQ\/wDnZW5t9XbY0KkIRepur6PZ1UNNJDE2dUCk3vcgAgjrrotvmKscPBMFglHbmNpkvILkhm1OUZbnyHXa9c\/bGySHNI7uVFgWYtbyF72r00pbVib3vm+O2vjv91bUsLiKtlOpp2Vvy+BiM6ceSLVi+fZc5yrlXSwzE208Rb+FKpgF9bg\/I0q9eGUEvsojxMtzFSlK7E5g3eGcPExI7bDw2F7zuVB8lyq1zUj+bY+38N\/bSfg1A0qLT6Mmmtid\/Ntft\/Df20n4NPzbX7fw39tJ+DUHUxguC9rhTMpYMsjI9\/YVFi7QuSAW20sAbm1r3tUJXjzkSVnyRl\/Ntft\/Df20n4NfPzdX7fw39rL\/AChrHBwBnjaZJEaNVkYtZgbxgEoRa4YhgR0IvrpX3CcuySLGUdM0iPIiG4Y5JAhUXFsxYgKL66eNRzfiM5fwnv8AN1ft\/Dv2sv4NPzdX7fw79rL+DWCDgjND2xkVUGj3Vroc+UZwF0Fwbnpp1IFOFcI7aHEOokaSERlUjXNmzvlOwvpvpWb\/AIhbsZvzdX7fw79rL+DT83V\/vDh37SX8CveL5cKQRTN2keZC8vaKRk\/SmNAotmYuVLAWGl\/C9eYOWHdQ4liyP2YjY57N2kjIBopKkOpVgdvMa1jOueYZfwnz83k\/vDh\/+eb8Cn5vJ\/eHD\/8APN+BWLiHAWhF5XRRkD7E3JJGQWGrCxJt3QLXOov7xnLkiCYhkk7DIZAt7gOmYMAwGZQPatqN7W1pm\/EMvY9fm8n94cP\/AM834FffzeTrxDh\/+eb8CtfGcFMadoZEKnRCA1mIjRyt7d1ssi2B3sfDWKqSvLlIi7Lmid\/N+P8AvDAf5pvwK0OJ8PWLLlxEE97\/ANkXOW3vZ0XfyvtWjSpKMk9WRbWwpSlTME\/yZwuGeZkkd10ByqbZwDqCd\/DT411fhfBI4lRUuEQ3RfDf+ZJv4671w\/B4lo3WRfaRgw+VXXF8+mQJDEWhDe29+8PAIRouuhbe1tq43x\/w2vOsp037r59n\/p7fh+KWTI+f8F6xRbtVXIctmLFegUaBr66k6AefzwxqACR3S2gB+Pj\/AK\/zqqcK5gxMeJSN2adJO4oCoGv0N7LfzubWq3tKbd4D2jYX2HTUeNctiMNOg1GVvy6nt0qmZWRgxXFRGyodWJy5sthe3jt47Co7D8PmOKknbEHJoixgaWsCc99ze2o138bVuY5GIBy2Ja\/0038\/4VocF4p28s0XstE9rb5hlNtbaG4a4HgKxCLUJOC6a9epfJQsjzi4o4FfETukjXJZ2VbgX7iRKSbfAbm5qegnUxLKZAsbBSC\/c32uDa1RTsFbKyZ3La3W4Tpr9\/3V455wQlwomV2XsrHJm7pBIG22bUWPyqSSqyjGbtfr\/CRCsnTV1yIPn3jwlIhikLRKLPlPddr6eZA+4\/KqPJET5f141ZOC8HeVHmQr3CRla+tlBPl10qGxJdyxZG8zlsFvsD0Gm166TBqnSj5cOnM82pGT1Zrxpc2vv5XNZzFcAtsNh4+PT4GtvDYQEAkG+liNbWubef8AtUdi57uwF7A2H\/avSTSRrMM4vogI8bV9qdg5XxhUGyrfWzSBSPiL6fClUPHUF99fqZ8qexVaUpXVnPClKUAqxYHjC4fC9jdZO2d2lVSR+jeFUylrd18120vYoL3vY12tnA4gIWuCQ6MhsbEXtqND1AqE45lqThKzJXh3MIgieKNXCOsne7QB87qFDXC6BVBsB1Ym\/QYpeOh4UjcSM6RPHnMlzdplkDai+hFrX2619m47mBuliQwzBrHvRSrY6agGTML6ixHUW9Lx\/UkoRdo3IVraqWL9P12Yk+WnmK8vWxZm7meLmo545WQ9tGO86PlEoJOcTrYhg4yhvHLfdjUZg+IokGIhKX7fswCGsFyPmGhBvrpuNK28RxwNmIRlLZjo+2aAxaaXP6rd65BGh7xJwYni7Osi97viIC7Xy5Fs1vDNqTb53rKj2MOXc2k4+nqqYQxN2YXK5zi9xK0isnd7ti7rY3BB6HWvg5jK4c4dA6ABezYSWZSJGdmJABJYvbSwAAGupOE8ZsYSqW7MhiNDcqoA3Hs6bHe5+NbKcwIAgERVUaNgA\/SNywFyNb3AJO9r9dMZPw9xm7mPF8eSSFIHjYpHEiJ3xdHU6uhy6BhoyG4NlNwQDTG8w5pGliDxyGSKRWzggdnEY7EZRmDAm4Olrggg14\/LQ7Ps8hvYDtM3f0HtXt7RHdJ9y4v1pLxu6FchN1y3Zu8DlcZgQPa72vQi\/kQUPwmc3cyYjj6sJskXZ9ugjeMPeLuhcrhCLhly2XXQW880FW7xfGiaVpACuYk2Jva5JsPLWtKrIRSRXJ3FKUqZAUpSgFeJo8w8690qM4KasyUZOLujY4dxB0kjZWyOjCzEXyna5B0IrsfFcZ2MHaSKWK5VORfbuQLotzpre1\/HWuJMvUb1auSeaFw5dMQ8mSymMasFsTcKL90G42sNK5Dxnwuek4q6XTq+1zocDjIyVnozp6H9GTf2rWzCxHXUHY76VWeTODIkk+JEhYO0kagai2YEsfeN9L66E+OkHzbzdBPB2MAZi7BnLrbLlNwBfck9R0qL5Z5mngYRR5GWV1GVxoGYhbixBHS\/wrxqXh9dYebWjfR7I3ZVYuS7HT+K4wRLcK8hynRASxGmgG53qlc8cSUwoO1IJYZoc2lstwWU6qQbfG\/jVvbFANlOrbFgLfcLnT41prgY34gXZbmKFdSN2LXB13srDXz8q08JKNKWaS5Jv4l9VWik+pQJZZ4YsmWSJXXW4IDm3id9LaDz3qU4JzJAsCpaRnCENCsZPaG2pYgWs3W+16vnGoUfDTBlJTs3JG5uFJBB8Qdj8K5fyHxSGNZUeRYpGKsHZsoKj9W50Gutut\/KvShWjiqEp5NU1yKU8k1G9r7mlhMR2l2Cj3iAfZ06da3+WOFjEYh3ckJFlc5bXZie6Nehykk26edfOL4IT4vLg8srMmaTsyMoNzmYtcLrcbdfM10GDh6RKwSBAAndyKMz5QSBddXJN\/HU1s4vG5aSUdHL5FVOinNt8l8zfEQfvgsAdbaG3jv50qMwrY0opOECEi5USobfe4P0pXgOg91+qN1VF0f1+hyKlQ3rr+99BT11\/e+gr6Zx8Nmcfw0tyZpUN66\/vfQU9df3voKcfDZjhpbkzX2oX11\/e+gp66\/vfQU4+GzHDS3JqvlQ3rr+99BT11\/e+gpx8NmZ4aW5NUqF9df3voKeuv730FOPhszHDS3JqvlQ3rr+99BT11\/e+gpx8NmZ4aW5M19qF9df3voKeuv730FOPhszHDS3JmlQ3rr+99BT11\/e+gpx8NmOGluTNKhvXX976Cnrr+99BTj4bMcNLcmaVDeuv730FPXX976CnHw2Y4aW5M0qG9df3voKeuv730FOPhsxw0tyZr4yg71D+uv730FPXX976CsPHU2rNMysPJapkjJGw21H1r5hcYyOrqSGQhh8Qbi\/zFR\/rr+99BXl8Ux3P0FaNV0ZfZTN2nUqR+1qdcw\/OOCVBKTI8jd4xAHuk6lbkAWB21OlbWA4+eykxjIveRzk1tZT3dfG43rjAnbxrdXjuIEXY9oezsVy2GxNz0vvXjezKSvbrzvtsbs8bKdnItHMfPk86GKNRBGylXAbMXB3BYqLC2lh41q8lx4Ju09bZAwtkEhIW3X57aH5VUjIfGnaGttYanGl5cPdXbmUqu8+Z6\/E67yzgYB2mIgBEc1olspt3SbsBuASANt1Ne+McTSPiWAhzf2WftG6AzKFCnwtZT\/7hXNuH814uBBHFMVRb2GVTa5udSL71pY\/issztJK5Z2tckDWwAGwtsBWlHw+Tquc3dWaW\/K37GxPGRcFFK3U\/RMuBJJJzfe38jSvzkuPlGgkkA8mNK1vYr\/6fL\/SXH9jWpSle6eaKUpQClKUApSlAKUpQClKUApSlAKUpQClKUApSlAKUpQClKUApSlAKUpQClKUApSlAKUpQClKUApSlAKUpQClKUApSlAKUpQClKUApSlAKUpQClKUApSlAKUpQClKUApSlAKUpQClKUApSlAf\/2Q==',width=400,height=400)","bc07d57d":"nRowsRead = 1000 # specify 'None' if want to read whole file\n# time_series_19-covid-Deaths.csv may have more rows in reality, but we are only loading\/previewing the first 1000 rows\ndf = pd.read_csv('\/kaggle\/input\/coronavirus-6th-mar-2020-johns-hopkins-university\/time_series_19-covid-Deaths.csv', delimiter=',', nrows = nRowsRead)\ndf.dataframeName = 'time_series_19-covid-Deaths.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')","fb33e209":"df.head().style.background_gradient(cmap='PRGn')","f5a86719":"df.tail().style.background_gradient(cmap='PRGn')","8d391cc4":"df.corr()","42eb2729":"plt.figure(figsize=(15,6))\nsns.heatmap(df.corr(),annot=True,cmap='Blues')\nplt.show()","3a9d8873":"plt.figure(figsize=(15,6))\nsns.heatmap(df.corr(),annot=False,cmap='viridis')\nplt.show()","b30cb8c6":"plt.figure(figsize=(15,6))\nsns.heatmap(df.corr(),annot=True,cmap='Reds')\nplt.show()","8d9407d0":"fig,axes = plt.subplots(1,1,figsize=(20,5))\nsns.heatmap(df.isna(),yticklabels=False,cbar=False,cmap='viridis')\nplt.show()","2719be7e":"df.isnull().sum()","aab7b1f3":"df.dropna(how = 'all',inplace = True)\ndf.drop(['Province\/State'],axis=1,inplace = True)\ndf.shape","4b832ef7":"#fig,axes = plt.subplots(1,1,figsize=(20,5))\n#sns.heatmap(df.isna(),yticklabels=False,cbar=False,cmap='viridis')\n#plt.show()","3c0f8147":"sns.pairplot(df, x_vars=['3\/6\/20'], y_vars='1\/22\/20', markers=\"+\", height=4)\nplt.show()","256777dc":"#codes from PSVishnu @psvishnu\nnum = df.select_dtypes ( include = \"number\" )","dbaaa081":"#codes from PSVishnu @psvishnu\ncounter = 1\nplt.figure(figsize=(15,18))\nfor col in num.columns:\n    if np.abs(df [col].skew ( )) > 1 and df[col].nunique() < 10:\n        plt.subplot(5,3,counter)\n        counter += 1\n        df [col].value_counts().plot.bar()\n        plt.xticks(rotation = 45)\n        plt.title(f'{col}\\n(skewness {round(df [ col ].skew ( ),2)})')\n\nplt.tight_layout(pad = 1.0, w_pad = 1.0, h_pad = 1.0)\nplt.show ( )","0b599bd7":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcQJLCck6UZbovbF89JePoooZP3cZGhjTtdN3ca2vDpFCt9HJt2b',width=400,height=400)","eb1ea5d6":"Kaggle Notebook Runner: Mar\u00edlia Prata @mpwolke","bd6a2f3d":"youtube.com","2419f75b":"youtube.com","d457a843":"facebook.com","bc35d723":"code from Andy Yh  https:\/\/www.kaggle.com\/andyyh\/coronavirus-analysis-and-predictions","eae8195a":"Check null values with the help of heatmap. Check the less useful columns (yellow color indicates null values) Code from PrashantSri12 https:\/\/www.kaggle.com\/prashanthsri12\/startups-data-eda-basics","6e534050":"Heatmap after removal of (some) null values.  If you drop you don't have the WordCloud. "}}