{"cell_type":{"a22c393d":"code","14c8d436":"code","3d32396f":"code","93a59f02":"code","ebb77e3e":"code","b5131125":"code","1b6bce2c":"code","44d42aed":"code","bfdb1bba":"code","206f5c87":"code","f1e40a42":"code","1866e0ca":"code","e4d1ab26":"code","e2b7303d":"code","7e310937":"code","54254057":"code","e4205505":"code","30334994":"code","224c9808":"markdown"},"source":{"a22c393d":"import pandas as pd\n\ntrain_data_df = pd.read_csv('..\/input\/train.csv')\ntest_data_df = pd.read_csv('..\/input\/test.csv')","14c8d436":"train_data = train_data_df.values\ntest_data = test_data_df.values\n\ntrain_features = train_data[:, 3:25][0:3485869]\ntrain_targets = train_data[:, 25][0:3485869]\n\nval_features = train_data[:, 3:25][3485869:4357336]\nval_targets = train_data[:, 25][3485869:4357336]\n\ntest_features = test_data[:, 3:25]","3d32396f":"import sklearn","93a59f02":"from sklearn.preprocessing import MinMaxScaler\n\nscaler = MinMaxScaler(feature_range=(-1, 1)).fit(train_features)\n\ntrain_features = scaler.transform(train_features)\nval_features = scaler.transform(val_features)\ntest_features = scaler.transform(test_features)","ebb77e3e":"import catboost\nfrom catboost import CatBoostRegressor\n\nmodel = CatBoostRegressor(iterations=10000, learning_rate=0.1, eval_metric='MAE', max_depth=8)\nmodel.fit(train_features, train_targets, eval_set=(val_features, val_targets))","b5131125":"predictions = list(model.predict(test_features))","1b6bce2c":"test_data_df['winPlacePercPred'] = predictions","44d42aed":"test_data_preds = test_data_df.groupby(['matchId','groupId', 'Id'])['winPlacePercPred'].agg('mean').groupby('matchId').rank(pct=True).reset_index()","bfdb1bba":"test_data_df['winPlacePerc'] = test_data_preds['winPlacePercPred']","206f5c87":"predictions = list(test_data_df['winPlacePerc'])","f1e40a42":"import numpy as np","1866e0ca":"ids = list(np.int32(test_data_preds.values[:, 2]))","e4d1ab26":"submission = pd.DataFrame(np.transpose(np.array([ids, predictions])))","e2b7303d":"submission.columns = ['Id', 'winPlacePerc']","7e310937":"submission['Id'] = np.int32(submission['Id'])","54254057":"submission = submission.sort_values(by=['Id'])","e4205505":"submission.head()","30334994":"submission.to_csv('PUBG_preds.csv', index=False)","224c9808":"Courtesy to [Fernando Vendrameto](http:\/\/www.kaggle.com\/fvendrameto\/catboost-by-a-newbie) for giving me the idea to use Cat Boosting and [Misha Lisovyi](https:\/\/www.kaggle.com\/mlisovyi\/relativerank-of-predictions\/notebook) for giving me the idea to rank groups within each match."}}