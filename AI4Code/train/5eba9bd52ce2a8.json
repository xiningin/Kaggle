{"cell_type":{"102b158b":"code","e52446cd":"code","373de7e5":"code","8e79ca4b":"code","eb4217ea":"code","d74ff4f8":"code","91c665dd":"code","5e3ee401":"code","7ce4b8a7":"code","1b9c5cc6":"code","32ab4239":"code","606c09cb":"code","2db5ca55":"code","07b3aaba":"code","2a30b946":"code","0b85e226":"code","b5976bec":"code","5b4624b4":"code","4a301221":"code","9bf0be5d":"code","baa39d51":"code","2424d07f":"code","22795c9a":"code","cfa28e00":"code","f7a0749c":"markdown","b6d8bdda":"markdown","2eabc4f9":"markdown","2bc1f4d5":"markdown","cdf6bad8":"markdown","87cd1387":"markdown","eedf4035":"markdown"},"source":{"102b158b":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcTCS4sXw7dXFE0Axws7GguLi7LgmOrpbCJorWNa_I3JJ5kf7mhV&usqp=CAU',width=400,height=400)","e52446cd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","373de7e5":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcQRr3-ZXqNo2mI_w_5OYFOVC3YIs5V3sWBl3Rz1ak-aBrrqcT9v&usqp=CAU',width=400,height=400)","8e79ca4b":"ls ..\/input\/hackathon\/task_1-google_search_txt_files_v2\/SY\/","eb4217ea":"syria_file = '..\/input\/hackathon\/task_1-google_search_txt_files_v2\/SY\/Syria-ar-result-24.txt'\nwith open(syria_file) as f: # The with keyword automatically closes the file when you are done\n    print (f.read(2000))","d74ff4f8":"from sklearn.datasets import fetch_20newsgroups\ncategories = ['rec.autos', 'sci.med']\nnewsgroups_train = fetch_20newsgroups(subset='train', categories=categories)\nnewsgroups_test = fetch_20newsgroups(subset='test', categories=categories)\n#class_names = ['autos', 'med']","91c665dd":"newsgroups_train.data[9:10]","5e3ee401":"type(newsgroups_train.data)","7ce4b8a7":"type(newsgroups_train.target)","1b9c5cc6":"newsgroups_train.target[:10]","32ab4239":"from __future__ import print_function\nimport lime\nimport sklearn\nimport numpy as np\nimport sklearn\nimport sklearn.ensemble\nimport sklearn.metrics","606c09cb":"vectorizer = sklearn.feature_extraction.text.TfidfVectorizer(lowercase=False)\ntrain_vectors = vectorizer.fit_transform(newsgroups_train.data)\ntest_vectors = vectorizer.transform(newsgroups_test.data)","2db5ca55":"type(vectorizer)","07b3aaba":"rf = sklearn.ensemble.RandomForestClassifier(n_estimators=500)\nrf.fit(train_vectors, newsgroups_train.target)","2a30b946":"pred = rf.predict(test_vectors)\nsklearn.metrics.f1_score(newsgroups_test.target, pred, average='binary')","0b85e226":"pred[:10]","b5976bec":"from lime import lime_text\nfrom sklearn.pipeline import make_pipeline\nc = make_pipeline(vectorizer, rf)","5b4624b4":"type(newsgroups_test.data)","4a301221":"newsgroups_test.data[0]","9bf0be5d":"newsgroups_test.target[0]","baa39d51":"type(newsgroups_test.target)","2424d07f":"print(c.predict_proba([newsgroups_test.data[0]]))","22795c9a":"newsgroups_test.target[0]","cfa28e00":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcS27XvF-iay8f196zgMmnzUyAgYXTb8MSTIvigk5CSQzFSwHzMN&usqp=CAU',width=400,height=400)","f7a0749c":"Kaggle Notebook Runner: Mar\u00edlia Prata  @mpwolke","b6d8bdda":"youtube.com","2eabc4f9":"pt.slideshare.net","2bc1f4d5":"youtube.com","cdf6bad8":"#Explaining predictions using lime","87cd1387":"Bavalpreet worked with no sources, so we could't know what class names to use with that data. ","eedf4035":"#Codes from Bavalpreet https:\/\/www.kaggle.com\/bavalpreet26\/explainableai-lime-basic\/notebook"}}