{"cell_type":{"d2a7dcb4":"code","27b3d375":"code","9d48a6d0":"code","17400705":"code","a8dd94ec":"code","6b207d83":"code","b753e6af":"code","a4c270ff":"code","b9ae235e":"code","c51117a0":"code","72cfe5d2":"markdown"},"source":{"d2a7dcb4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","27b3d375":"import pandas as pd\nimport missingno as msno\nimport matplotlib.pyplot as plt","9d48a6d0":"df_Train = pd.read_csv('..\/input\/lish-moa\/train_features.csv')\ndf_Test = pd.read_csv('..\/input\/lish-moa\/test_features.csv')\ndf_Train_scored = pd.read_csv('..\/input\/lish-moa\/train_targets_scored.csv')\ndf_Train_unscored = pd.read_csv('..\/input\/lish-moa\/train_targets_nonscored.csv')","17400705":"df_Train.isnull().sum()","a8dd94ec":"msno.matrix(df_Train)","6b207d83":"msno.matrix(df_Test)","b753e6af":"msno.bar(df_Train)","a4c270ff":"msno.heatmap(df_Train)","b9ae235e":"msno.heatmap(df_Test)","c51117a0":"null_counts = df_Train.isnull().sum()\/len(df_Train)\nplt.figure(figsize=(16,8))\nplt.xticks(np.arange(len(null_counts))+0.5,null_counts.index,rotation='vertical')\nplt.ylabel('fraction of rows with missing data')\nplt.bar(np.arange(len(null_counts)),null_counts)","72cfe5d2":"### My conclusion is there is no missing value. what do you think?\n#### a noob here by the way. is there a better way of visualizing this?"}}