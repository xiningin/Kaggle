{"cell_type":{"b9e74608":"code","2a3942c0":"code","0483532f":"code","715e7e9a":"code","74c3bb0a":"code","d243edb3":"code","1697cd83":"code","d8897ba8":"code","449a6190":"code","62c477d4":"code","7bf87d94":"code","eb39364c":"code","6dfe1513":"code","0f34b623":"code","5a649648":"code","ab49af51":"code","7424bfd4":"code","d8542b0a":"markdown","3ebfe95f":"markdown","97757c45":"markdown","9933929b":"markdown","0e9a450d":"markdown","3db6ae3e":"markdown","1ce30251":"markdown","f9d5422a":"markdown","20f3cfc1":"markdown","ccd07b31":"markdown","248faebd":"markdown","070afcff":"markdown","f464bd4a":"markdown","61cc974e":"markdown","13d68c8a":"markdown","7cd28efd":"markdown","bd4cdd8b":"markdown","2d4009ff":"markdown","f115bdd7":"markdown","48847523":"markdown","8d4e1fb4":"markdown","77dc4349":"markdown"},"source":{"b9e74608":"import pandas as pd\nimport seaborn as sns\nfrom learntools.advanced_pandas.indexing_selecting_assigning import *\n\nreviews = pd.read_csv(\"..\/input\/wine-reviews\/winemag-data-130k-v2.csv\", index_col=0)\npd.set_option(\"display.max_rows\", 5)","2a3942c0":"reviews.head()","0483532f":"check_q1(pd.DataFrame())","715e7e9a":"check_q1(reviews['description'])","74c3bb0a":"check_q2(reviews['description'][0])","d243edb3":"check_q3(reviews.iloc[0,:])","1697cd83":"check_q4(reviews['description'].head(10))","d8897ba8":"check_q5(reviews.iloc[[1,2,3,5,8],:])","449a6190":"check_q6(reviews.loc[[0,1,10,100],['country','province','region_1','region_2']])","62c477d4":"check_q7(reviews.loc[0:99,['country','variety']])","7bf87d94":"check_q8(reviews[reviews['country']=='Italy'])","eb39364c":"check_q9(reviews[reviews['region_2'].notnull()])","6dfe1513":"check_q10(reviews['points'])","0f34b623":"reviews.points.head(1000)","5a649648":"reviews['points'].tail(1000)","ab49af51":"reviews[reviews['country']=='Italy']['points']","7424bfd4":"reviews[(reviews['points']>=90) & ((reviews['country']=='Italy') | (reviews['country']=='France'))]['country']","d8542b0a":"# Exercises","3ebfe95f":"**Exercise 12**: <!--What is the distribution of reviews scores for the last 1000 wines in the dataset?--> Select the `points` column for the last 1000 wines.","97757c45":"Look at an overview of your data by running the following line","9933929b":"**Exercise 5**: Select the records with the `1`, `2`, `3`, `5`, and `8` row index positions. In other words, generate the following`DataFrame`:\n\n![](https:\/\/i.imgur.com\/sHZvI1O.png)","0e9a450d":"**Exercise 7**: Select the `country` and `variety` columns of the first 100 records. \n\nHint: you may use `loc` or `iloc`. When working on the answer this question and the several of the ones that follow, keep the following \"gotcha\" described in the [reference](https:\/\/www.kaggle.com\/residentmario\/indexing-selecting-assigning-reference) for this tutorial section:\n\n> `iloc` uses the Python stdlib indexing scheme, where the first element of the range is included and the last one excluded. So `0:10` will select entries `0,...,9`. `loc`, meanwhile, indexes inclusively. So `0:10` will select entries `0,...,10`.\n\n> [...]\n\n> ...[consider] when the DataFrame index is a simple numerical list, e.g. `0,...,1000`. In this case `df.iloc[0:1000]` will return 999 entries, while `df.loc[0:1000]` return 1000 of them! To get 1000 elements using `iloc`, you will need to go one higher and ask for `df.iloc[0:1001]`.","3db6ae3e":"**Exercise 14**: Who produces more above-averagely good wines, France or Italy? Select the `country` column, but only  when said `country` is one of those two options, _and_ the `points` column is greater than or equal to 90.\n\nYour output should look roughly like this:\n```\n119       France\n120        Italy\n           ...  \n129969    France\n129970    France\nName: country, Length: 15840, dtype: object\n```","1ce30251":"For the first set of questions, if you use `check_qN` on your answer, and your answer is right, a simple `True` value will be returned.\n\nFor the second set of questions, using this function to check a correct answer will present you will an informative graph!\n\nIf you get stuck, use `answer_qN` function to print the answer outright.","f9d5422a":"**Exercise 13**: <!--What is the distribution of reviews scores for wines made in Italy?--> Select the `points` column, but only for wines made in Italy.","20f3cfc1":"# Set Up\nRun the following cell to load your data and some utility functions","ccd07b31":"**Exercise 11**: <!--What is the distribution of reviews scores for the first 1000 wines in the dataset?--> Select the `points` column for the first 1000 wines.","248faebd":"The remaining exercises are visual.","070afcff":"**Exercise 4**: Select the first 10 values from the `description` column in `reviews`. Hint: format your output as a `pandas` `Series`.","f464bd4a":"**Exercise 3**: Select the first row of data (the first record) from `reviews`. Hint: from this exercise onwards I strongly recommend using `loc` or `iloc`.","61cc974e":"# Checking Answers\n\nYou can check your answers in each of the exercises that follow using the  `check_qN` function provided in the code cell above (replacing `N` with the number of the exercise). For example here's how you would check an incorrect answer to exercise 1:","13d68c8a":"## Keep going\n\nMove on to the [**Summary functions and maps workbook**](https:\/\/www.kaggle.com\/kernels\/fork\/595524).","7cd28efd":"# Introduction\n\nMost projects requiring selecting specific values from a `DataFrame` or `Series`. You will work on that skill here using the [Wine Reviews dataset](https:\/\/www.kaggle.com\/zynicide\/wine-reviews). \n\n# Relevant Resources\n* **[Quickstart to indexing and selecting data](https:\/\/www.kaggle.com\/residentmario\/indexing-and-selecting-data\/)** \n* [Indexing and Selecting Data](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/indexing.html) section of pandas documentation\n* [Pandas Cheat Sheet](https:\/\/assets.datacamp.com\/blog_assets\/PandasPythonForDataScience.pdf)\n\n\n","bd4cdd8b":"**Exercise 6**: Select the `country`, `province`, `region_1`, and `region_2` columns of the records with the `0`, `1`, `10`, and `100` index positions. In other words, generate the following `DataFrame`:\n\n![](https:\/\/i.imgur.com\/FUCGiKP.png)","2d4009ff":"**Exercise 8**: Select wines made in `Italy`. Hint: `reviews.country` equals what?","f115bdd7":"**Exercise 10**: <!--What is the distribution of wine ratings assigned by Wine Magazine?--> Select the `points` column.","48847523":"**Exercise 1**: Select the `description` column from `reviews`.","8d4e1fb4":"**Exercise 9**: Select wines whose `region_2` is not `NaN`.","77dc4349":"**Exercise 2**: Select the first value from the description column of `reviews`."}}