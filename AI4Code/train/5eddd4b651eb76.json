{"cell_type":{"b5564adb":"code","0ed52595":"code","d601230f":"code","798ef7bb":"code","5a630208":"code","c519bcda":"code","154a4510":"code","c7bded46":"code","83ac0a7e":"code","b3682515":"code","5b0e91b3":"code","8ca7ee51":"code","1231ee74":"code","08d58052":"code","413e30a8":"code","be057403":"code","e9a6dc6d":"code","8b844610":"code","28c2addd":"code","dfce95bd":"code","cea67179":"code","0135f671":"code","662d11e9":"code","c0e5cdaf":"code","736ef6af":"code","21b5f7f3":"code","b4e28079":"code","8e3e3788":"code","09a35eeb":"code","a78c6ee8":"code","6bd44f5a":"code","e48e6e89":"code","d6073051":"code","8dcafdae":"code","babed0cf":"code","81840af5":"code","2b43a36b":"markdown","d8564ec3":"markdown","74313b67":"markdown"},"source":{"b5564adb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0ed52595":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor \nfrom sklearn.svm import SVR\nfrom sklearn.model_selection import cross_val_predict  # For K-Fold Cross Validation\nfrom sklearn.metrics import r2_score  # For find accuracy with R2 Score\nfrom sklearn.metrics import mean_squared_error  # For MSE\nfrom math import sqrt","d601230f":"file = '\/kaggle\/input\/delhi-house-price-prediction\/MagicBricks.csv'\ndata = pd.read_csv(file)\ndata.head()","798ef7bb":"data.tail()","5a630208":"print('Rows :', data.shape[0])\nprint('Columns :', data.shape[1])\nprint('\\n Features', data.columns.tolist())\nprint('\\n Missing Values', data.isnull().sum().values.sum())\nprint('\\nUnique Values', data.nunique())","c519bcda":"data.info()","154a4510":"data.columns","c7bded46":"print(data['Type'].unique())\nprint(data['Transaction'].unique())\nprint(data['Status'].unique())\nprint(data['Furnishing'].unique())","83ac0a7e":"plt.figure(figsize=(12,12))\nplt.subplot(2,2,1)\ndata['Type'].value_counts().plot(kind='bar')\nplt.subplot(2,2,2)\ndata['Transaction'].value_counts().plot(kind='bar')\nplt.subplot(2,2,3)\ndata['Status'].value_counts().plot(kind='bar')\nplt.subplot(2,2,4)\ndata['Furnishing'].value_counts().plot(kind='bar')","b3682515":"corr = data.corr()\ncorr","5b0e91b3":"plt.figure(figsize=(8,8))\nsns.heatmap(corr,cmap=sns.diverging_palette(220,20,as_cmap=True), vmax=1, center=0, square=True, linewidths=.8, cbar_kws={'shrink':.82}  )","8ca7ee51":"corr['Price'].sort_values(ascending=False)","1231ee74":"sns.set(style=\"ticks\")\nsns.pairplot(data, palette=[\"#FA5858\", \"#58D3F7\"])","08d58052":"sns.scatterplot(x='Price',y = 'Bathroom',data=data, hue='Type')","413e30a8":"data.describe()","be057403":"plt.figure(figsize=(12,12))\nplt.subplot(2,2,1)\nsns.boxplot('Area',data=data)\nplt.subplot(2,2,2)\nsns.boxplot('Parking',data=data)\nplt.subplot(2,2,3)\nsns.boxplot('Price',data=data)\nplt.subplot(2,2,4)\nsns.boxplot('Bathroom',data=data)","e9a6dc6d":"print(data.groupby('Type')['Price'].median())\nprint(data.groupby('Bathroom')['Price'].median())\nprint(data.groupby('Furnishing')['Price'].median())","8b844610":"data.isnull().sum()","28c2addd":"data = data.dropna()","dfce95bd":"data.isnull().sum().values.sum()","cea67179":"data.head()","0135f671":"Loc = pd.DataFrame(data.groupby('Locality')['Price','Bathroom'].min())\nLoc.head(10)","662d11e9":"data = data.drop(['Locality','Furnishing','Status','Transaction'], axis=1)\ndata.head()\n","c0e5cdaf":"cat = ['Type']\ndata = pd.get_dummies(data, columns=cat, drop_first = True)\ndata.head()\nprint(len(data.columns))\n","736ef6af":"data = data.reset_index()\ndata.head()","21b5f7f3":"X = data.drop(['Price'], axis=1)\nY = data['Price']\n\nsc = StandardScaler()\nX = sc.fit_transform(X)\n\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, random_state = 0)","b4e28079":"model_1 = LinearRegression()\nmodel_1.fit(X_train, Y_train)\n\npred = model_1.predict(X_test)\n\nprint('R2 Score for Linear Regression: ',r2_score(Y_test, pred))\n\nrmse = sqrt(mean_squared_error(Y_test,pred))\nprint('RMSE value for Linear Regression: ',rmse)\n\npred_cv = cross_val_predict(model_1, X, Y, cv=10)\nprint('R2 score for Linear Regression( Cross Validation ): ',r2_score(Y, pred_cv))\n\nres = pd.DataFrame({'Actual':Y_test, 'Predicted':pred})\nprint('\\n',res.head(10))","8e3e3788":"poly = PolynomialFeatures(degree=2)\nx_train = poly.fit_transform(X_train)\nx_test = poly.fit_transform(X_test)\n\npoly_reg = LinearRegression()\npoly_reg.fit(x_train,Y_train)\n\npred = poly_reg.predict(x_test)\nprint('R2 score for Polynomial Regression',r2_score(Y_test, pred))\n","09a35eeb":"model_2 = DecisionTreeRegressor(max_depth=4)\nmodel_2.fit(X_train,Y_train)\npred = model_2.predict(X_test)\n\nprint('R2 Score for Linear Regression: ',r2_score(Y_test, pred))\n\nrmse = sqrt(mean_squared_error(Y_test,pred))\nprint('RMSE value for Linear Regression: ',rmse)\n\npred_cv = cross_val_predict(model_2, X, Y, cv=10)\nprint('R2 score for Linear Regression( Cross Validation ): ',r2_score(Y, pred_cv))\n\nres = pd.DataFrame({'Actual':Y_test, 'Predicted':pred})\nprint('\\n',res.head(10))","a78c6ee8":"model_3 = RandomForestRegressor(n_estimators=400,max_depth=7)\nmodel_3.fit(X_train,Y_train)\npred = model_3.predict(X_test)\n\nprint('R2 Score for Linear Regression: ',r2_score(Y_test, pred))\n\nrmse = sqrt(mean_squared_error(Y_test,pred))\nprint('RMSE value for Linear Regression: ',rmse)\n\npred_cv = cross_val_predict(model_3, X, Y, cv=10)\nprint('R2 score for Linear Regression( Cross Validation ): ',r2_score(Y, pred_cv))\n\nres = pd.DataFrame({'Actual':Y_test, 'Predicted':pred})\nprint('\\n',res.head(10))","6bd44f5a":"from sklearn.metrics import accuracy_score\nmodel_4 = SVR(gamma='auto', kernel='linear', C=1)\nmodel_4.fit(X_train,Y_train)\n\npred = model_4.predict(X_test)\n\nprint('R2 Score for Linear Regression: ',r2_score(Y_test, pred))\n\nrmse = sqrt(mean_squared_error(Y_test,pred))\nprint('RMSE value for Linear Regression: ',rmse)\n\npred_cv = cross_val_predict(model_3, X, Y, cv=10)\nprint('R2 score for Linear Regression( Cross Validation ): ',r2_score(Y, pred_cv))\n\nres = pd.DataFrame({'Actual':Y_test, 'Predicted':pred})\nprint('\\n',res.head(10))","e48e6e89":"data.head(1)","d6073051":"input_data = {'index':[1],\n            'Area': [750],\n             'BHK':[2],\n             'Bathroom':[2],\n             'Parking':[1.0],\n             'Per_Sqft':[6667.0],\n             'Type_Builder_Floor':[0]}\ninput_data = pd.DataFrame(input_data)","8dcafdae":"input_data","babed0cf":"input_data = sc.fit_transform(input_data)\ninput_data = input_data.reshape(1,-1)\ninput_data.shape","81840af5":"model_3.predict(input_data)","2b43a36b":"- It consists of total 11 features\n- Total data is 1259","d8564ec3":"- Price of the house depends mainly on **number of Bathrooms**, **(BHK & Area)**","74313b67":"- Builder floor is sold more than apartments\n- Resale property is more sold than new property\n- Approach ready to move building than almost ready, since it mostly opt by the customers\n- Semi furnished is more opt than unfurished and furnished"}}