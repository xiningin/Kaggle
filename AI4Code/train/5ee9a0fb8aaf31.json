{"cell_type":{"8d00bd49":"code","213daf12":"code","0b83fc2e":"code","65a583b4":"code","ffbd838e":"code","4e4f6be7":"code","90757f10":"code","f036e8f7":"code","03688df8":"code","d31d2087":"code","7367ee07":"code","2e754b1b":"code","9decd5fc":"code","511ae195":"code","4a715860":"code","7dd99dab":"code","117efb12":"code","c5f89dbe":"code","aa7f4b36":"code","db905cfd":"code","112d3277":"code","57531644":"code","0005634c":"code","c14042e7":"code","46f17745":"code","6fa72606":"code","42bb075c":"code","7187cf2e":"code","1f1fe6bc":"code","b124ed94":"code","805a9a18":"code","b8c279bd":"code","ef94e937":"code","5ad1f640":"code","41aa6965":"code","2fb26cea":"markdown","b4836b17":"markdown","c21ad562":"markdown","4b4fa752":"markdown","bc771c67":"markdown","1378647e":"markdown","07b0cc55":"markdown","6596fa53":"markdown","4c6d8d0d":"markdown","61e6c4cb":"markdown","3578df65":"markdown","90a0cebd":"markdown","075f46a3":"markdown"},"source":{"8d00bd49":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","213daf12":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport warnings","0b83fc2e":"my_data=pd.read_csv('..\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv')\nmy_data.head()","65a583b4":"my_data.dtypes","ffbd838e":"my_data.isnull().any().sum()","4e4f6be7":"my_data.head(20)","90757f10":"\nmy_data=my_data.fillna(value=0,axis=1)\n","f036e8f7":"my_data.isnull().any().sum()","03688df8":"my_data.head()","d31d2087":"my_data.shape","7367ee07":"plt.figure(figsize=(12, 6))\nsns.heatmap(my_data.corr(), annot=True)","2e754b1b":"sns.set_style=(\"whitegrid\")\nsns.boxplot(x=my_data[\"ssc_p\"])","9decd5fc":"fig=plt.figure(figsize=(5,5))\nsns.countplot('specialisation',data=my_data )\n\n","511ae195":"plt.figure(figsize=(4,4))\nsns.countplot('status',data=my_data )\n","4a715860":"plt.figure(figsize=(5,5))\nsns.countplot('degree_t',data=my_data )\n","7dd99dab":"plt.figure(figsize=(5,5))\nsns.countplot('hsc_s',data=my_data )\n","117efb12":"plt.figure(figsize=(5,5))\nsns.countplot('ssc_b',data=my_data )\n","c5f89dbe":"plt.figure(figsize=(5,5))\nsns.countplot('gender',data=my_data )\n","aa7f4b36":"sns.distplot(my_data['etest_p'], hist=True)","db905cfd":"sns.violinplot(y=\"etest_p\", x=\"status\", data=my_data, palette=\"muted\")","112d3277":"my_data1=my_data.drop(['sl_no'], axis=1)\nmy_data1.hist (bins=10,figsize=(20,20))\nplt.show ()","57531644":"sns.set(style=\"ticks\", color_codes=True)\nsns.pairplot(my_data1)","0005634c":"from sklearn.model_selection import train_test_split\nfrom sklearn import model_selection\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import GridSearchCV\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn import svm\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.metrics import accuracy_score\nfrom pandas.plotting import scatter_matrix","c14042e7":"my_data.loc[my_data['status']=='Not Placed', 'status'] = 0\nmy_data.loc[my_data['status']=='Placed', 'status'] = 1\nmy_data.loc[my_data['degree_t']=='Sci&Tech','degree_t'] = 0\nmy_data.loc[my_data['degree_t']=='Comm&Mgmt','degree_t'] = 1\nmy_data.loc[my_data['degree_t']=='Others','degree_t'] = 2\nmy_data.loc[my_data['gender']=='M','gender'] = 0\nmy_data.loc[my_data['gender']=='F','gender'] = 1\nmy_data.loc[my_data['ssc_b']=='Others','ssc_b'] = 0\nmy_data.loc[my_data['ssc_b']=='Central','ssc_b'] = 1\nmy_data.loc[my_data['hsc_b']=='Others','hsc_b'] = 0\nmy_data.loc[my_data['hsc_b']=='Central','hsc_b'] = 1\nmy_data.loc[my_data['ssc_b']=='Others','ssc_b'] = 0\nmy_data.loc[my_data['ssc_b']=='Central','ssc_b'] = 1\nmy_data.loc[my_data['workex']=='No','workex'] = 0\nmy_data.loc[my_data['workex']=='Yes','workex'] = 1\nmy_data.loc[my_data['hsc_s']=='Commerce','hsc_s']=0\nmy_data.loc[my_data['hsc_s']=='Science','hsc_s']=1\nmy_data.loc[my_data['hsc_s']=='Arts','hsc_s']=2\nmy_data.loc[my_data['specialisation']=='Mkt&HR','specialisation']=0\nmy_data.loc[my_data['specialisation']=='Mkt&Fin','specialisation']=1\n\n\nmy_data['workex'].astype(int)\nmy_data['ssc_b'].astype(int)\nmy_data['hsc_b'].astype(int)\nmy_data['gender'].astype(int)\nmy_data['degree_t'].astype(int)\nmy_data['hsc_s'].astype(int)\nmy_data['specialisation'].astype(int)\n\n","46f17745":"x = my_data.drop(['status','sl_no'],axis=1)\ny=my_data['status'].astype(int)\nx_train,x_test,y_train,y_test=train_test_split(x,y,random_state=3)","6fa72606":"x=x.fillna(value=0,axis=1)","42bb075c":"x.head()","7187cf2e":"x.isnull().any().sum()","1f1fe6bc":"y\n","b124ed94":"seed=7\nmodels = []\nmodels.append(('RF',RandomForestClassifier()))\nmodels.append(('SVM',SVC()))\nmodels.append(('LR',LogisticRegression()))\nmodels.append(('NB',GaussianNB()))\n# Evaluating each models in turn\nresults = []\nnames = []\nfor name, model in models:\n    kfold = model_selection.KFold(n_splits=13,random_state=seed)\n    cv_results = cross_val_score(model, x_train, y_train, cv=kfold, scoring='accuracy')\n    results.append(cv_results)\n    names.append(name)\n    msg = \"%s: %f (%f)\" %(name, cv_results.mean(), cv_results.std())\n    print(msg)","805a9a18":"logistic = LogisticRegression()\nlogistic.fit(x_train,y_train)\ny_pred=logistic.predict(x_test)\nprint(classification_report(y_test,y_pred))\naccuracy=logistic.score(x_test,y_test)\nprint (accuracy*100,'%')\n","b8c279bd":"classifier2=SVC()\nclassifier2.fit(x_train,y_train)\ny_pred=classifier2.predict(x_test)\nprint(classification_report(y_test,y_pred))\naccuracy=classifier2.score(x_test,y_test)\nprint(accuracy*100 , '%')","ef94e937":"classifier3=RandomForestClassifier()\nclassifier3.fit(x_train,y_train)\ny_predict=classifier3.predict(x_test)\nprint(classification_report(y_test,y_predict))\naccuracy=classifier3.score(x_test,y_test)\nprint(accuracy*100,'%')","5ad1f640":"classifier4=GaussianNB()\nclassifier4.fit(x_train,y_train)\ny_pred=classifier4.predict(x_test)\nprint(classification_report(y_test,y_pred))\naccuracy=classifier4.score(x_test,y_test)\nprint(accuracy*100,'%')","41aa6965":"classifier5=DecisionTreeClassifier()\nclassifier5.fit(x_train,y_train)\ny_pred=classifier5.predict(x_test)\nprint(classification_report(y_test,y_pred))\naccuracy=classifier5.score(x_test,y_test)\nprint(accuracy*100,'%')","2fb26cea":"**Problem statement:-** The dataset contains factor affecting placements in the college.\n**Data columns**:-\n\n1)sl_no\t:- Serial Number\n\n2)gender:- Male or Female\n\n3)ssc_p\t:- SSC percentage\n\n4)ssc_b\t:- SSC board\n\n4)hsc_p\t:- HSC percentage\n\n5)hsc_b\t:- HSC board\n\n6)hsc_s :- HSC specialization\n\n7)degree_p\t:- Degree percentage\n\n8)degree_t\t:- Degree specialization\n\n9)workex\t:- work experience\n\n10)etest_p :- Etest percentage\n\n11)specialisation\t\n\n12)mba_p:-MBA percentage\n\n13)status:- placed or not placed\n\n14)salary\n","b4836b17":"**Randon forest classifier**","c21ad562":"**Countplot**","4b4fa752":"**Box plot**","bc771c67":"**Distplot**","1378647e":"**Pairplot**","07b0cc55":"GaussianNB","6596fa53":"DecisionTreeClassifier","4c6d8d0d":"**Logistic Regression**","61e6c4cb":"**Violinplot**","3578df65":"**Histogram**","90a0cebd":"**Heatmap**","075f46a3":"**SVM**"}}