{"cell_type":{"2302510c":"code","78152554":"code","1849268c":"code","8831f725":"code","46f12c00":"code","ac4624c3":"code","f616e6bc":"code","4a04a949":"code","edbc3434":"code","01db2d32":"code","a59b5144":"code","67c12c06":"code","33515ebe":"code","d271101e":"code","ed982dd3":"code","ddc93b68":"code","eba937e8":"code","c359d567":"code","5e032ce7":"code","e4862d4f":"code","dc031b30":"code","a93dff0c":"code","3aacd261":"code","dd3628d1":"code","7ca72c26":"code","451f7799":"code","2ba49832":"code","562c032b":"code","374d7825":"code","2e6f0db4":"code","c4aa33a5":"markdown","edf574f0":"markdown","ca16c5ef":"markdown","b7720b3c":"markdown"},"source":{"2302510c":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as pexp\nimport plotly.graph_objects as gro\nimport matplotlib.pyplot as plt \npd.set_option('display.max_rows',200)\nimport warnings\nwarnings.filterwarnings('ignore') ## I hate warnings.\nimport os\nimport plotly.graph_objs as go\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error,r2_score\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.svm import SVR\nimport xgboost as xgb \nfrom xgboost.sklearn import XGBRegressor\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\npath = os.path.join(dirname, filename)\ndf = pd.read_csv(path) ","78152554":"df.columns","1849268c":"df1=pd.melt(df,value_name='fires',id_vars='States\/UTs',value_vars=['2010-2011','2009-10','2008-09'])\ndf1=df1.pivot(columns='States\/UTs',index='variable',values=['fires'])\nlabels = df['States\/UTs']#['Oxygen','Hydrogen','Carbon_Dioxide','Nitrogen']\nouter_values = df['2010-2011']+df['2009-10']+df['2008-09']#[4500,2500,500]\ninner_values=pd.Series()\nfor col in df1.columns:\n    inner_values=inner_values.append(df1[col])\ntrace1 = go.Pie(\n    hole=0.5,\n    sort=False,\n    direction='clockwise',\n    domain={'x': [0.15, 0.85], 'y': [0.15, 0.85]},\n    values=inner_values,\n    textinfo='label',\n    textposition='inside',\n    marker={'line': {'color': 'white', 'width': 1}}\n)\ntrace2 = go.Pie(\n    hole=0.7,\n    sort=False,\n    direction='clockwise',\n    values=outer_values,\n    labels=labels,\n    textinfo='label',\n    textposition='outside',\n    marker={'colors': ['green', 'red', 'blue'],\n            'line': {'color': 'white', 'width': 1}}\n)\nfig = go.FigureWidget(data=[trace1, trace2])\nfig","8831f725":"dff=df[df['2009-10'] != 0]\ndff=dff[dff['2008-09'] != 0]\n#remove features with low correlation with our target variable (Tripura)\ndff=dff[dff['States\/UTs'] != 'Manipur']\ndff=dff[dff['States\/UTs'] != 'Maharashtra']\ndff=dff[dff['States\/UTs'] != 'Andhra Pradesh']\ndff=dff[dff['States\/UTs'] != 'Himachal Pradesh']\ndff=dff[dff['States\/UTs'] != 'Jammu and Kashmir']\ndff=dff[dff['States\/UTs'] != 'Karnataka']\ndff=dff[dff['States\/UTs'] != 'Madhya Pradesh']\ndff=dff[dff['States\/UTs'] != 'Rajasthan']\ndff=dff[dff['States\/UTs'] != 'Tamil nadu']\ndff=dff[dff['States\/UTs'] != 'Chhatisgarh']\ndff=dff[dff['States\/UTs'] != 'Orissa']\ndff=dff[dff['States\/UTs'] != 'Haryana']\ndff=dff[dff['States\/UTs'] != 'Kerala']\ndff=dff[dff['States\/UTs'] != 'Arunachal Pradesh']\ndff=dff[dff['States\/UTs'] != 'Andaman and Nicobar']\ndff=dff[dff['States\/UTs'] != 'Punjab']\ndff=dff[dff['States\/UTs'] != 'Sikkim']\ndff=dff[dff['States\/UTs'] != 'Gujarat']\ndff=dff[dff['States\/UTs'] != 'West Bengal']\ndff=dff[dff['States\/UTs'] != 'Andaman and Nicobar']\ndff=dff[dff['States\/UTs'] != 'Assam']\ndff=dff[dff['States\/UTs'] != 'Uttarakhand']\ndff=dff[dff['States\/UTs'] != 'Mizoram']\ndff","46f12c00":"df1=pd.melt(df,value_name='fires',id_vars='States\/UTs',value_vars=['2010-2011','2009-10','2008-09'])\ndf1","ac4624c3":"df1 = df1.pivot(index='States\/UTs', columns='variable', values='fires')\ndf1.plot()","f616e6bc":"import seaborn as sns\ndf1=pd.melt(df,value_name='fires',id_vars='States\/UTs',value_vars=['2010-2011','2009-10','2008-09'])\nsns.lineplot(data=df1, x='States\/UTs', y='fires', hue='variable')","4a04a949":"df1=pd.melt(df,value_name='fires',id_vars='States\/UTs',value_vars=['2010-2011','2009-10','2008-09'])\npexp.line(df1,  x='States\/UTs', y='fires', color='variable' )","edbc3434":"df1=pd.melt(dff,value_name='fires',id_vars='States\/UTs',value_vars=['2010-2011','2009-10','2008-09'])\npexp.line(df1,  x='States\/UTs', y='fires', color='variable' )","01db2d32":"df1=pd.melt(dff,value_name='fires',id_vars='States\/UTs',value_vars=['2010-2011','2009-10','2008-09'])\ndf1=df1.pivot(columns='States\/UTs',index='variable',values=['fires'])\ndf1=df1['fires']","a59b5144":"train=df1.head(2)","67c12c06":"X_train=train.drop('Tripura',axis=1)\n\ny_train=train['Tripura']\nX_train","33515ebe":"y_train","d271101e":"X_val=df1.drop(['2008-09','2009-10']).drop('Tripura',axis=1)\ny_val=df1.drop(['2008-09','2009-10'])['Tripura']\n##drop('Madhya Pradesh',axis=1)\nX_val","ed982dd3":"y_val","ddc93b68":"train","eba937e8":"lr=LinearRegression()\nlr.fit(X_train,y_train)\ny_pred=lr.predict(X_val)\nprint(y_pred,y_val)\nlr_rmse_score=np.sqrt(mean_squared_error(y_pred,y_val))\nlr_r2_score=r2_score(y_pred,y_val)\nprint(\"Root Mean Squared Error :\",lr_rmse_score)\nprint(\"R2Score:\",lr_r2_score)","c359d567":"print(y_pred,y_val)","5e032ce7":"dt=DecisionTreeRegressor()\ndt_model=dt.fit(X_train,y_train)\ny_pred_dtone=dt_model.predict(X_val)\n# calculate RMSE\nrms_dt=np.sqrt(mean_squared_error(y_pred_dtone,y_val))\nr2_dt=r2_score(y_val, y_pred_dtone)\nprint('RMSE of Decision Tree Regression:',rms_dt)\nprint('R-Squared value:',r2_dt)\nR2=r2_score(y_val, y_pred)\nn=X_train.shape[0]\np=len(X_train.columns)\nAdj_r2=1-(1-R2)*(n-1)\/(n-p-1)\nprint('Adjusted R-Square is :',Adj_r2)","e4862d4f":"print(y_pred_dtone,y_val)","dc031b30":"# Importing libraries\nrf_reg=RandomForestRegressor()\nrf_model=rf_reg.fit(X_train,y_train)\ny_pred_rf=rf_model.predict(X_val)\nrmse_rf=np.sqrt(mean_squared_error(y_pred_rf,y_val))\nr2_rf=r2_score(y_pred_rf,y_val)\nprint('RMSE of predicted in RF model:',rmse_rf)\nprint('R Sqaured in RF model:',r2_rf)","a93dff0c":"print(y_pred_rf,y_val)","3aacd261":"# import support vector regressor\nsv_reg=SVR()\nsv_model=sv_reg.fit(X_train,y_train)\ny_pred_sv=sv_model.predict(X_val)\n# Calculate RMSE of SVR\nrmse_svm=np.sqrt(mean_squared_error(y_val,y_pred_sv))\nr2_svm=(r2_score(y_val,y_pred_sv))\nprint('RMSE of SVR model:',rmse_svm)\nprint(\"R2Score:\",r2_svm)","dd3628d1":"print(y_pred_sv,y_val)","7ca72c26":"dff=df[df['2009-10'] != 0]\ndff=dff[dff['2008-09'] != 0]\n#remove outliers\ndff=dff[dff['States\/UTs'] != 'Manipur']\ndff=dff[dff['States\/UTs'] != 'Maharashtra']\ndff=dff[dff['States\/UTs'] != 'Andhra Pradesh']\ndff=dff[dff['States\/UTs'] != 'Himachal Pradesh']\ndff=dff[dff['States\/UTs'] != 'Jammu and Kashmir']\ndff=dff[dff['States\/UTs'] != 'Karnataka']\ndff=dff[dff['States\/UTs'] != 'Madhya Pradesh']\ndff=dff[dff['States\/UTs'] != 'Rajasthan']\ndff=dff[dff['States\/UTs'] != 'Tamil nadu']\ndff=dff[dff['States\/UTs'] != 'Chhatisgarh']\ndff=dff[dff['States\/UTs'] != 'Orissa']\ndff=dff[dff['States\/UTs'] != 'Haryana']\ndff=dff[dff['States\/UTs'] != 'Kerala']\ndff=dff[dff['States\/UTs'] != 'Arunachal Pradesh']\ndff=dff[dff['States\/UTs'] != 'Andaman and Nicobar']\ndff=dff[dff['States\/UTs'] != 'Punjab']\ndff=dff[dff['States\/UTs'] != 'Sikkim']\ndff=dff[dff['States\/UTs'] != 'Gujarat']\ndff=dff[dff['States\/UTs'] != 'West Bengal']\ndff=dff[dff['States\/UTs'] != 'Andaman and Nicobar']\ndff=dff[dff['States\/UTs'] != 'Assam']\ndff=dff[dff['States\/UTs'] != 'Uttarakhand']\ndff=dff[dff['States\/UTs'] != 'Mizoram']\ndff","451f7799":"df1=pd.melt(dff,value_name='fires',id_vars='States\/UTs',value_vars=['2010-2011','2009-10','2008-09'])\ndf1=df1.pivot(columns='States\/UTs',index='variable',values=['fires'])\ndf1=df1['fires']","2ba49832":"df1.corr()","562c032b":"f = plt.figure(figsize=(10, 10))\nplt.matshow(df1.corr(), fignum=f.number)\nplt.xticks(range(df1.shape[1]), df1.columns, fontsize=14, rotation=45)\nplt.yticks(range(df1.shape[1]), df1.columns, fontsize=14)\ncb = plt.colorbar()\ncb.ax.tick_params(labelsize=14)\nplt.title('Correlation Matrix', fontsize=16);","374d7825":"df1=pd.melt(df,value_name='fires',id_vars='States\/UTs',value_vars=['2010-2011','2009-10','2008-09'])\ndf1=df1.pivot(columns='States\/UTs',index='variable',values=['fires'])\ndf1=df1['fires']","2e6f0db4":"f = plt.figure(figsize=(50, 50))\nplt.matshow(df1.corr(), fignum=f.number)\nplt.xticks(range(df1.shape[1]), df1.columns, fontsize=14, rotation=45)\nplt.yticks(range(df1.shape[1]), df1.columns, fontsize=14)\ncb = plt.colorbar()\ncb.ax.tick_params(labelsize=14)\nplt.title('Correlation Matrix', fontsize=16);","c4aa33a5":"## I want to see if we can predict the fires in one state if we know number of fires in other states\n## of course doesn't make sense and we dont even have enough data for it but let's see","edf574f0":"# Mostly correlated\/marjorly yellow\n# Hence, if other states are having higher fire counts the states that have yellow correlationn (most of other states) with that state would have higher fire counts too\n# but would be nice to get updated dataset (till 2020) to run these tests again sometime in futture\n# Hoping to get those datasets by the year 3015 by then the world's slowest photograph would be out too\n#https:\/\/www.vice.com\/en\/article\/vvy784\/the-worlds-slowest-photo-will-take-1000-years-to-expose","ca16c5ef":"## Nested pie chart\n## Also known as donut chart\n## Try to avoid the temptation to eat\n## Damage to your screens or monitors for attempts of eating the donut chart are not anyone's legal responsibility\n## No pies were harmed in this plot\n","b7720b3c":"## Why do this? This would clearly not work\n### 1) To showcase that even if you can see a relation in graphical depiction, without enough amount of quality data, creating predictive model does not work\n### 2) We did elemminate the outliers manually (the ones that had higher fire counts in 2010-11) to reduce our RMSE Significantly, we came real close to prediction( prediction :630.06650945 actual:634), but still it has no use\n### 3) Sometimes just building a model is not enough. you need to ask why? Why would someone want to predict count of fires in one state on the basis of the counts in all other states, even if this model would have worked with a better dataset what would be the practicle use?\n### 4) Surprisingly linear regression outperforms others!\n### 5) just for some fun\n\n\n# Next fun?\n## Let's see if the fire counts on each state are atleast correlated?"}}