{"cell_type":{"64c52b84":"code","7b4640f6":"code","9f9f3fb7":"code","a0def62b":"code","986da905":"code","a70f47b0":"code","e2fd0eee":"code","b08a07a0":"code","7addad7e":"code","03b11118":"code","80c787dd":"code","0591f774":"code","b3f79966":"code","f2e671a9":"code","c1a81f0a":"code","46ee96e2":"code","e06809d5":"code","8ca2680b":"code","e1deb0c6":"code","9d8836fd":"code","1dbcbebb":"code","fcccf722":"code","6267cd42":"code","718cf4e4":"code","3b43d5d9":"code","698fae72":"code","4e76943f":"code","862fc763":"code","db38e8aa":"markdown","2e305fb3":"markdown","85aa95c3":"markdown","7d30430d":"markdown","1c9fa724":"markdown","e9822f87":"markdown","88dcfb09":"markdown","8dc9abac":"markdown","7e8368ac":"markdown","c4fdd1cd":"markdown","7ddd5000":"markdown","f398566a":"markdown","cd172bcd":"markdown","8e75606d":"markdown","48115e3d":"markdown","70d503c7":"markdown","cc9e1991":"markdown","d3c774b7":"markdown","cbe56cb1":"markdown","080a4387":"markdown","aced191c":"markdown","f9ad929d":"markdown","b3cdc573":"markdown","3d257f7d":"markdown","8dd3c1ef":"markdown","a396cec4":"markdown"},"source":{"64c52b84":"# Importing libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('fivethirtyeight')","7b4640f6":"mobile = pd.read_csv('..\/input\/mobile-price-classification\/train.csv')\ntitanic = pd.read_csv('..\/input\/c\/titanic\/train.csv')\nhouse = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\n\n# Datetime dataset\ncomp = pd.read_csv('..\/input\/time-series-starter-dataset\/Month_Value_1.csv',parse_dates=['Period'])","9f9f3fb7":"ds = {'Day':['Mon', 'Tue', 'Wed', 'Thu', 'Fri'], 'Hours':[8,7,11,9,6]}\ndx = pd.DataFrame(ds)\nsns.barplot(x='Day', y='Hours', data=dx)","a0def62b":"sns.barplot(y='Survived', x='Sex', hue='Pclass', data=titanic)","986da905":"sns.barplot(y='Survived', x='Embarked', hue='Sex', data=titanic)","a70f47b0":"sns.lineplot(x='Day',y='Hours', data=dx)","e2fd0eee":"sns.lineplot(x='Period',y='Sales_quantity', data=comp)","b08a07a0":"# To get insight from dataset\ndef missing_values_table(df):\n        # Total missing values\n        mis_val = df.isnull().sum()\n        \n        # Percentage of missing values\n        mis_val_percent = 100 * df.isnull().sum() \/ len(df)\n        \n                \n        # Coumn for dtypes\n        dtype = df.dtypes\n        \n        # Column for Unique values\n        num_unique = []\n        for col in df.columns:\n            num_unique.append(df[col].nunique())\n        num_unique = pd.Series(num_unique)\n        num_unique.index = df.columns\n        \n        # Make a table with the results\n        mis_val_table = pd.concat([mis_val, mis_val_percent,dtype,num_unique], axis=1)\n        \n        # Rename the columns\n        mis_val_table_ren_columns = mis_val_table.rename(\n        columns = {0 : 'Missing Values', 1 : '% of Total Values', 2:'Data Types', 3:'Unique_values'})\n        \n        # Sort the table by percentage of missing descending\n        mis_val_table_ren_columns = mis_val_table_ren_columns.sort_values('% of Total Values', ascending=False).round(1)\n        \n        # Print some summary information\n        print(\"Your selected dataframe has \" + str(df.shape[1]) + \" columns.\\n\"      \n            \"There are \" + str(mis_val_table_ren_columns[\n            mis_val_table_ren_columns.iloc[:,1] != 0].shape[0]) + \n              \" columns that have missing values.\")\n        \n        # Return the dataframe with missing information\n        return mis_val_table_ren_columns,num_unique\na, k = missing_values_table(house)\nk.index = house.columns","7addad7e":"x = range(50)\ny = range(50) + np.random.randint(0,20,50)","03b11118":"sns.scatterplot(x=x, y=y)","80c787dd":"comp.head()","0591f774":"sns.scatterplot(x='Revenue', y='Sales_quantity', data=comp)","b3f79966":"y = np.array([35, 25, 25, 15])\nmylabels = [\"Apples\", \"Bananas\", \"Cherries\", \"Dates\"]\nplt.pie(y, labels = mylabels)\nplt.legend()\nplt.show() ","f2e671a9":"titanic.head(5)","c1a81f0a":"# We require the count of each Embarked so we grou titanic by Embarked\nEmtitanic = titanic.groupby('Embarked').size()\nEmtitanic","46ee96e2":"# Take his index as a labels\nlabels = Emtitanic.index","e06809d5":"plt.pie(Emtitanic, labels=labels)\nplt.legend()\nplt.show() ","8ca2680b":"ptitanic = titanic.groupby('Pclass').size()\nlabels = ptitanic.index\nplt.pie(ptitanic, labels=labels)\nplt.legend()\nplt.show() ","e1deb0c6":"# generating 2-D 10x10 matrix of random numbers\n# from 1 to 100\ndata = np.random.randint(low=1,\thigh=100,size=(10, 10))\n# plotting the heatmap\nhm = sns.heatmap(data=data)\nplt.show()\n","9d8836fd":"# Create a dataframe that contains correlation of features\ncorrtitanic = titanic.corr()\n\n# Plot heatmap of correlation map\nplt.figure(figsize=(12,10))\nsns.heatmap(corrtitanic, annot=True)","1dbcbebb":"x = np.random.normal(size=60)\nsns.histplot(x,bins=6)","fcccf722":"sns.histplot(comp.Sales_quantity, bins=15)","6267cd42":"# Creating dataset\nnp.random.seed(10)\ndata_1 = np.random.normal(100, 10, 200)\ndata_2 = np.random.normal(90, 20, 200)\ndata_3 = np.random.normal(80, 30, 200)\ndata_4 = np.random.normal(70, 40, 200)\ndata = [data_1, data_2, data_3, data_4]\nfig = plt.figure(figsize =(12, 7))\nplt.boxplot(data)\n# show plot\nplt.show()\n","718cf4e4":"plt.boxplot(house.MSSubClass)\nplt.show()","3b43d5d9":"mobile.head()","698fae72":"#  plot multiple boxplot together\n# Create a list of features \nfeatures = [mobile.n_cores, mobile.fc]\nplt.boxplot(features)\nplt.show()","4e76943f":"import squarify # pip install squarify\nsizes = [50, 25, 12, 6]\nsquarify.plot(sizes)\nplt.show()","862fc763":"plt.figure(figsize=(14,12))\nptitanic = house.groupby('Neighborhood').size()\nlabels = ptitanic.index\nsquarify.plot(ptitanic, label=labels)\nplt.show() ","db38e8aa":"## Practical Example","2e305fb3":"* Fare and Pclass are strong negatively correlated\n* SibSp and Parch are strong positively correlated","85aa95c3":"# Histogram","7d30430d":"* Sales quantity are decreasing at the starting of the year  \n* overall increasing in sales quantity over time","1c9fa724":"Ignore the gray line that define confidence interval (it because our dataset has NaN values)","e9822f87":"# Pie Chart","88dcfb09":"* In C embark more male feamale survived","8dc9abac":"* fc featues has some outliers","7e8368ac":"# Heat Map","c4fdd1cd":"## Toy Example","7ddd5000":"## In this notebook we will see the most commonly use Plots\/Graphs in data science with Toy case and practical example","f398566a":"* Sales quantity and revenue has positive relation","cd172bcd":"### Importing libraries","8e75606d":"# Tree Map","48115e3d":"# Line Chart","70d503c7":"# Bar Chart","cc9e1991":"# Box Plot","d3c774b7":"* We see that in 1 Pclass more male as well as feamale survive","cbe56cb1":"# Scatterplot","080a4387":"## We can increase our plot understanding by applying the following code\n\n`plt.title(\u201cMy Title\u201d)` will add a title \u201cMy Title\u201d to your plot\n\n`plt.xlabel(\u201cYear\u201d)` will add a label \u201cYear\u201d to your x-axis\n\n`plt.ylabel(\u201cPopulation\u201d)` will add a label \u201cPopulation\u201d to your y-axis\n\n`plt.xticks([1, 2, 3, 4, 5])` set the numbers on the x-axis to be 1, 2, 3, 4, 5. We can also pass and labels as a second argument. \n\nFor, example, if we use this code `plt.xticks([1, 2, 3, 4, 5]`, [\"1M\", \"2M\", \"3M\", \"4M\", \"5M\"]), it will set the labels 1M, 2M, 3M, 4M, 5M on the x-axis.\n\n`plt.yticks()` - works the same as plt.xticks(), but for the y-axis.\n\n`plt.figure(figsize=(12,10))` - we can adjust the size of figure using this\n","aced191c":"`sns.barplot(x='Day', y='Hours', data=dx)`\n\n`x` : for x axis (Column name)\n\n`y` : for y axis (Column name)\n\n`data` = dataframe where we take column\n","f9ad929d":"![viz](https:\/\/sm.pcmag.com\/t\/pcmag_in\/feature\/1\/10-free-da\/10-free-data-visualization-tools_5un4.1920.jpg)","b3cdc573":"* we can see distribution of each Neighborhood compare with each other","3d257f7d":"### Read dataset","8dd3c1ef":"## I hope this Helpful \ud83d\ude03","a396cec4":"* we have few outliers in MSSubClass"}}