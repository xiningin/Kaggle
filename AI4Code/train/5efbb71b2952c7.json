{"cell_type":{"3d7461ef":"code","6b81c021":"code","d6e8f4c8":"code","7efa9eb7":"code","5eccac18":"code","3f178f71":"code","277868d6":"code","53b67f76":"code","d3283b2a":"code","bc15a2db":"code","d474eb78":"code","d3c41da7":"code","c15c7f86":"code","ac49e631":"code","b6c0eac5":"code","80f7cfba":"code","91621512":"code","016e410b":"code","956d9434":"code","6d43400f":"code","e2a34a41":"code","f77ff844":"code","22907701":"code","cf8088ef":"code","af665e16":"code","27075fa3":"code","fcc63e2b":"code","dfdba3b2":"code","ec45be19":"code","85f87a69":"code","dd6dedd4":"code","89bab2ba":"code","8e7541f7":"code","e1e1c1f6":"code","f8799ff8":"code","f03f67b2":"code","28ad4c5e":"code","3b84581e":"code","2623a45d":"code","09255484":"code","f4eac8c2":"code","e132f80c":"code","952f6b41":"code","3d32c196":"code","ab2d4b23":"code","04dd4fe1":"code","65903c4b":"code","bc86f015":"code","2369bdc8":"code","aa710a5a":"code","e8eca302":"code","3d1d0b09":"code","d2745a8b":"code","181366c0":"code","d54320a8":"code","1b408198":"code","99e38921":"code","54f845d5":"code","a8875d3c":"code","6ec547fe":"code","cef65a07":"code","4e058fd3":"code","02842973":"code","a8f60fcf":"code","5323d625":"code","311eeb6f":"code","8715a033":"code","a72192fd":"code","c400c640":"code","74f033b3":"code","ef85e371":"code","584c0a97":"code","3fa987dd":"markdown","53337b93":"markdown","65ae14f0":"markdown","263afada":"markdown","b63e1a01":"markdown","9ff74667":"markdown","b59c0a1e":"markdown","ecca0388":"markdown","c5680cfa":"markdown","420eab22":"markdown","e8938d64":"markdown","ba59030b":"markdown","6c7e8f2a":"markdown","bca24e29":"markdown","a393ac2b":"markdown","d0b0b043":"markdown","a7a7164a":"markdown","9918a236":"markdown","1cfbca40":"markdown","d583d608":"markdown","fa57765e":"markdown","04d51c67":"markdown","1c841a10":"markdown","9b8dfd62":"markdown","50e61f32":"markdown","0dca8bd3":"markdown","82d6d269":"markdown","5e1302b0":"markdown","b9bd4981":"markdown","7603fe60":"markdown","154d2f08":"markdown","81bbc8a7":"markdown"},"source":{"3d7461ef":"import numpy as np \nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns \nimport datetime as dt\n%matplotlib inline\nimport datetime as dt\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nfrom plotly import tools\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nfrom shapely.geometry import shape, Point, Polygon\nimport folium\nfrom folium.plugins import HeatMap, HeatMapWithTime\ninit_notebook_mode(connected=True)","6b81c021":"geo_data_df = pd.read_csv(\"\/kaggle\/input\/california-kindergarten-immunization-rates\/geoData.csv\", encoding=\"utf8\")\npertusis_rates_df = pd.read_csv(\"\/kaggle\/input\/california-kindergarten-immunization-rates\/pertusisRates2010_2015.csv\", encoding=\"utf8\")\nstudent_data_df = pd.read_csv(\"\/kaggle\/input\/california-kindergarten-immunization-rates\/StudentData.csv\", encoding=\"latin1\")\ninfant_data_df = pd.read_csv(\"\/kaggle\/input\/california-kindergarten-immunization-rates\/InfantData.csv\", encoding=\"utf8\")","d6e8f4c8":"pertusis_rates_df.head()","7efa9eb7":"print(f\"geo data: {geo_data_df.shape}\")\nprint(f\"pertusis data: {pertusis_rates_df.shape}\")\nprint(f\"student data: {student_data_df.shape}\")\nprint(f\"infant data: {infant_data_df.shape}\")","5eccac18":"geo_data_df.info()","3f178f71":"pertusis_rates_df.info()","277868d6":"student_data_df.info()","53b67f76":"infant_data_df.info()","d3283b2a":"geo_data_df.head()","bc15a2db":"pertusis_rates_df.head()","d474eb78":"student_data_df.head()","d3c41da7":"infant_data_df.head()","c15c7f86":"print(f\"geo data:\\n long: {geo_data_df.longitude.min()}, {geo_data_df.longitude.max()}\\n lat: {geo_data_df.latitude.min()}, {geo_data_df.latitude.max()}\")  ","ac49e631":"print(f\"number of schools in geo data: {geo_data_df.school_code.nunique()}\")\nprint(f\"number of counties in pertussis rates data: {pertusis_rates_df.county.nunique()}\")\nprint(f\"number of counties in student data: {student_data_df.COUNTY.nunique()}\")\nprint(f\"number of schools (by type) in student data:\\n {student_data_df.schoolType.value_counts()}\")","b6c0eac5":"cases = ['county', 'Cases2010', 'Cases2011', 'Cases2012','Cases2013', 'Cases2014']\nrates = ['county', 'Rate2010', 'Rate2011',   'Rate2012', 'Rate2013', 'Rate2014']\nnew_columns = ['county', '2010', '2011',   '2012', '2013', '2014']\np_cases = pertusis_rates_df[cases]\np_rates = pertusis_rates_df[rates]\np_cases.columns = new_columns\np_rates.columns = new_columns\np_cases_df = p_cases.melt(id_vars=[\"county\"], var_name=\"Year\", value_name=\"Cases\")\np_rates_df = p_rates.melt(id_vars=[\"county\"], var_name=\"Year\", value_name=\"Rates\")","80f7cfba":"new_pertusis_cases_df = p_cases_df.merge(p_rates_df, on=['county', 'Year'])","91621512":"new_pertusis_cases_df['Year'] = new_pertusis_cases_df['Year'].apply(lambda x: int(x))\nnew_pertusis_cases_df['Cases'] = new_pertusis_cases_df['Cases'].apply(lambda x: int(x))\nnew_pertusis_cases_df['Rates'] = new_pertusis_cases_df['Rates'].apply(lambda x: float(x))","016e410b":"new_pertusis_cases_df.head()","956d9434":"new_pertusis_cases_df.Rates.max()","6d43400f":"new_pertusis_cases_df.info()","e2a34a41":"print(f\"Pertussis cases | years: {new_pertusis_cases_df.Year.min()}-{new_pertusis_cases_df.Year.max()}\")\nprint(f\"Pertussis cases | counties: {new_pertusis_cases_df.county.nunique()}\")\nprint(f\"Pertussis cases | rates: {new_pertusis_cases_df.Rates.min()}-{new_pertusis_cases_df.Rates.max()}\")\nprint(f\"Pertussis cases | cases: {new_pertusis_cases_df.Cases.min()}-{new_pertusis_cases_df.Cases.max()}\")","f77ff844":"def aggregated_features_plot(d_df, feature1, feature2, ylabel, title, font_size=14, width=800):\n    d_df.columns = [feature1, feature2, ylabel]\n\n    f2 = list(d_df[feature2].unique())\n    data = []\n    for f in f2:\n        d1 = d_df.loc[d_df[feature2]==f]\n        \n        hover_text = []\n        for index, row in d1.iterrows():\n            hover_text.append((f\"{feature1}: {row[feature1]}<br>\"+f\"{ylabel}: {row[ylabel]}\"))\n        d1['hover_text'] = hover_text\n        \n        trace = go.Bar(\n            x = d1[feature1],y = d1[ylabel],\n            name=f,\n            text = hover_text,\n        )\n        data.append(trace)\n        \n    layout = dict(title = title,\n            yaxis = dict(title = ylabel, showticklabels=True),\n            xaxis = dict(title = feature1, showticklabels=True, tickfont=dict(\n                    family='Old Standard TT, serif',\n                    size=font_size,\n                    color='black'),), \n            hovermode = 'closest',\n            showlegend=True,   \n            width=width,\n            height=600,\n             )\n    fig = dict(data=data, layout=layout)\n    iplot(fig, filename='aggregated') ","22907701":"d_df = student_data_df.groupby(['year', 'schoolType'])['n'].count().reset_index()\naggregated_features_plot(d_df, 'year', 'schoolType', 'Total', 'Total number of schools\/year')","cf8088ef":"d_df = student_data_df.groupby(['year', 'schoolType'])['n'].sum().reset_index()\naggregated_features_plot(d_df, 'year', 'schoolType', 'Number of pupils', 'Number of pupils\/year')","af665e16":"student_data_df['pMMR'] = student_data_df['nMMR'] \/ student_data_df['n'] * 100\nstudent_data_df['pDTP'] = student_data_df['nDTP'] \/ student_data_df['n'] * 100\nstudent_data_df['pPolio'] = student_data_df['nPolio'] \/ student_data_df['n'] * 100\nstudent_data_df['pPBE'] = student_data_df['nPBE'] \/ student_data_df['n'] * 100\nstudent_data_df['pPME'] = student_data_df['nPME'] \/ student_data_df['n'] * 100","27075fa3":"d_df = student_data_df.groupby(['year', 'schoolType'])['pMMR'].mean().reset_index()\naggregated_features_plot(d_df, 'year', 'schoolType', 'Average [%]', 'Average percent of MMR vaccination\/year')","fcc63e2b":"d_df = student_data_df.groupby(['year', 'schoolType'])['pDTP'].mean().reset_index()\naggregated_features_plot(d_df, 'year', 'schoolType', 'Average [%]','Average percent of DTP vaccination\/year')","dfdba3b2":"d_df = student_data_df.groupby(['year', 'schoolType'])['pPolio'].mean().reset_index()\naggregated_features_plot(d_df, 'year', 'schoolType', 'Average [%]','Average percent of Polio vaccination\/year')","ec45be19":"d_df = student_data_df.groupby(['year', 'schoolType'])['pPBE'].mean().reset_index()\naggregated_features_plot(d_df, 'year', 'schoolType', 'Average [%]','Average percent of PBE\/year')","85f87a69":"d_df = student_data_df.groupby(['year', 'schoolType'])['pPME'].mean().reset_index()\naggregated_features_plot(d_df, 'year', 'schoolType', 'Average [%]','Average percent of PME\/year')","dd6dedd4":"def box_features_plot(d_df, feature1, feature2, feature3, ylabel, title, font_size=14, width=800):\n    d_df.columns = [feature1, feature2, feature3, ylabel]\n\n    f2 = list(d_df[feature2].unique())\n    data = []\n    for f in f2:\n        d1 = d_df.loc[d_df[feature2]==f]\n        \n        hover_text = []\n        for index, row in d1.iterrows():\n            hover_text.append((f\"{feature1}: {row[feature1]}<br>\"+f\"{feature3}: {row[feature3]}<br>\"+f\"{ylabel}: {row[ylabel]}\"))\n        d1['hover_text'] = hover_text\n        \n        trace = go.Box(\n            x = d1[feature1],y = d1[ylabel],\n            name=f,\n            text = hover_text\n        )\n        data.append(trace)\n        \n    layout = dict(title = title,\n            yaxis = dict(title = ylabel, showticklabels=True),\n            xaxis = dict(title = feature1, showticklabels=True, tickfont=dict(\n                    family='Old Standard TT, serif',\n                    size=font_size,\n                    color='black'),), \n            hovermode = 'closest',\n            showlegend=True,   \n            width=width,\n            height=600,\n             )\n    fig = dict(data=data, layout=layout)\n    iplot(fig, filename='aggregated') ","89bab2ba":"d_df = student_data_df[['year', 'schoolType', 'SCHOOL', 'pMMR']]\nbox_features_plot(d_df, 'year', 'schoolType', 'SCHOOL', 'MMR [%]','Percent of MMR vaccination distribution\/year')","8e7541f7":"d_df = student_data_df[['year', 'schoolType', 'SCHOOL','pDTP']]\nbox_features_plot(d_df, 'year', 'schoolType', 'SCHOOL','DTP [%]','Percent of DTP vaccination distribution\/year')","e1e1c1f6":"d_df = student_data_df[['year', 'schoolType', 'SCHOOL','pPolio']]\nbox_features_plot(d_df, 'year', 'schoolType', 'SCHOOL','Polio [%]','Percent of Polio vaccination distribution\/year')","f8799ff8":"d_df = student_data_df[['year', 'schoolType', 'SCHOOL','pPME']]\nbox_features_plot(d_df, 'year', 'schoolType','SCHOOL', 'PME [%]','Percent of PME\/year')","f03f67b2":"d_df = student_data_df[['year', 'schoolType','SCHOOL', 'pPBE']]\nbox_features_plot(d_df, 'year', 'schoolType', 'SCHOOL','PBE [%]','Percent of PBE\/year')","28ad4c5e":"import plotly.express as px\nd_df = student_data_df.groupby(['year', 'schoolType','COUNTY']).agg({'pMMR': ['min', 'max', 'mean'], 'n': ['min', 'max', 'mean', 'sum']}).reset_index()\nd_df.columns = ['Year', 'School Type', 'COUNTY', 'min(MMR) [%]', 'max(MMR) [%]', 'mean(MMR) [%]', 'n_min', 'n_max', 'n_mean', 'sum(n)']\nfig = px.scatter(d_df, x='mean(MMR) [%]', y='min(MMR) [%]', color='School Type', size='sum(n)', size_max = 80,\n                hover_name='COUNTY', log_x=True, animation_frame='Year',\n                 title=\"Percent of Measles\/Mumps\/Rubella (MMR) vaccination grouped per county and per year\",\n                 animation_group='COUNTY', \n                width=800, height=800)\nfig.show()","3b84581e":"d_df = student_data_df.groupby(['year', 'schoolType','COUNTY']).agg({'pDTP': ['min', 'max', 'mean'], 'n': ['min', 'max', 'mean', 'sum']}).reset_index()\nd_df.columns = ['Year', 'School Type', 'COUNTY', 'min(DTP) [%]', 'max(DTP) [%]', 'mean(DTP) [%]', 'n_min', 'n_max', 'n_mean', 'sum(n)']\nfig = px.scatter(d_df, x='mean(DTP) [%]', y='min(DTP) [%]', color='School Type', size='sum(n)', size_max = 80,\n                hover_name='COUNTY', log_x=True, animation_frame='Year',\n                 title=\"Percent of Diphtheria\/Tetanus\/Pertussis (DTP) vaccination - grouped per county and per year\",\n                 animation_group='COUNTY',\n                width=800, height=800)\nfig.show()","2623a45d":"d_df = student_data_df.groupby(['year', 'schoolType','COUNTY']).agg({'pPolio': ['min', 'max', 'mean'], 'n': ['min', 'max', 'mean', 'sum']}).reset_index()\nd_df.columns = ['Year', 'School Type', 'COUNTY', 'min(Polio) [%]', 'max(Polio) [%]', 'mean(Polio) [%]', 'n_min', 'n_max', 'n_mean', 'sum(n)']\nfig = px.scatter(d_df, x='mean(Polio) [%]', y='min(Polio) [%]', color='School Type', size='sum(n)', size_max = 80,\n                hover_name='COUNTY', log_x=True, animation_frame='Year',\n                 title=\"Percent of Poliomielitis (Polio) vaccination - grouped per county and per year\",\n                 animation_group='COUNTY',\n                width=800, height=800)\nfig.show()","09255484":"d_df = student_data_df.groupby(['year', 'schoolType','COUNTY']).agg({'pPBE': ['min', 'max', 'mean'], 'n': ['min', 'max', 'mean', 'sum']}).reset_index()\nd_df.columns = ['Year', 'School Type', 'COUNTY', 'min(PBE) [%]', 'max(PBE) [%]', 'mean(PBE) [%]', 'n_min', 'n_max', 'n_mean', 'sum(n)']\nfig = px.scatter(d_df, x='mean(PBE) [%]', y='max(PBE) [%]', color='School Type', size='sum(n)', size_max = 80,\n                hover_name='COUNTY', animation_frame='Year',\n                 title=\"Percent of Personal Beliefs Exemption (PBE) - grouped per county and per year\",\n                 animation_group='COUNTY',\n                width=800, height=800)\nfig.show()","f4eac8c2":"d_df = student_data_df.groupby(['year', 'schoolType','COUNTY']).agg({'pPME': ['min', 'max', 'mean'], 'n': ['min', 'max', 'mean', 'sum']}).reset_index()\nd_df.columns = ['Year', 'School Type', 'COUNTY', 'min(PME) [%]', 'max(PME) [%]', 'mean(PME) [%]', 'n_min', 'n_max', 'n_mean', 'sum(n)']\nfig = px.scatter(d_df, x='mean(PME) [%]', y='max(PME) [%]', color='School Type', size='sum(n)', size_max = 80,\n                hover_name='COUNTY', animation_frame='Year',\n                 title=\"Percent of Personal Medical Exemption (PME) - grouped per county and per year\",\n                 animation_group='COUNTY',\n                width=800, height=800)\nfig.show()","e132f80c":"import plotly.express as px\nd_df = new_pertusis_cases_df.loc[new_pertusis_cases_df.county!='CALIFORNIA']\nfig = px.scatter(d_df, x='Cases', y='Rates', size='Cases', size_max = 80,\n                hover_name='county',  animation_frame='Year', log_x=True,\n                 title=\"Number of cases of Pertussis grouped per county and per year\",\n                 animation_group='county', \n                width=800, height=800)\nfig.show()","952f6b41":"data_df = student_data_df[['n', 'pDTP', 'pMMR', 'pPolio', 'pPBE', 'pPME', 'year']]\nplt.figure(figsize=(8,8))\nheatmap = sns.heatmap(data_df.corr(), vmin=-1, vmax=1, annot=True, cmap=\"rainbow\")\nplt.show()","3d32c196":"agg_data_df = student_data_df.groupby(['year', 'COUNTY']).agg({'pDTP': ['mean', 'min'], 'n': ['sum']}).reset_index()\nagg_data_df.columns = ['Year', 'county', 'mean(DTP)', 'min(DTP)', 'sum(n)']\nd_df = new_pertusis_cases_df.loc[new_pertusis_cases_df.county!='CALIFORNIA']\nd_df.columns = ['county', 'Year', 'Pertussis Cases', 'Pertussis Rates']\nd_df = d_df.merge(agg_data_df, on = ['county', 'Year'])","ab2d4b23":"plt.figure(figsize=(8,8))\nheatmap = sns.heatmap(d_df.corr(), vmin=-1, vmax=1, annot=True, cmap=\"rainbow\")\nplt.show()","04dd4fe1":"fig = px.scatter(d_df, x='min(DTP)', y='Pertussis Cases', size='sum(n)', size_max = 80,\n                hover_name='county',  animation_frame='Year',\n                 title=\"Pertussis cases and Immunization minimum rates (2010-2014)\",\n                 animation_group='county', range_y=[-100,2500],\n                width=800, height=800)\nfig.show()","65903c4b":"student_geo_df = student_data_df.merge(geo_data_df, on=['school_code'])\nstudent_geo_df = student_geo_df.loc[(student_geo_df.countyMatch==1)&(student_geo_df.isSchool==1)]","bc86f015":"def generateBaseMap(default_location=[36, -119], default_zoom_start=7):\n    base_map = folium.Map(location=default_location, control_scale=True, zoom_start=default_zoom_start)\n    return base_map\nbase_map = generateBaseMap()\ndg_df = student_geo_df.loc[student_geo_df.year==2000]\nHeatMap(data=dg_df[['latitude', 'longitude', 'pDTP']],\\\n        radius=10, max_zoom=7).add_to(base_map)\nbase_map","2369bdc8":"base_map = generateBaseMap()\ndg_df = student_geo_df.loc[student_geo_df.year==2014]\nHeatMap(data=dg_df[['latitude', 'longitude', 'pDTP']],\\\n        radius=10, max_zoom=7).add_to(base_map)\nbase_map","aa710a5a":"census_df = pd.read_csv(\"\/kaggle\/input\/us-census-demographic-data\/acs2015_county_data.csv\", encoding=\"utf8\")","e8eca302":"census_ca_df = census_df.loc[census_df.State=='California']\ncensus_ca_df.shape","3d1d0b09":"f_census_df = census_df[['County',  'TotalPop', 'IncomePerCap',  'Income', 'Poverty', 'ChildPoverty', 'Black', 'Native', 'Asian', 'Hispanic', 'Unemployment']]","d2745a8b":"f_census_df.columns = ['county',  'TotalPop', 'IncomePerCap',  'Income', 'Poverty', 'ChildPoverty', 'Black', 'Native', 'Asian', 'Hispanic', 'Unemployment']","181366c0":"f_census_df['county'] = f_census_df['county'].apply(lambda x: x.upper())","d54320a8":"dd_df = d_df[['county', 'Pertussis Cases', 'Pertussis Rates', 'mean(DTP)', 'min(DTP)', 'sum(n)']]\ndd_df.head()","1b408198":"combined_df = f_census_df.merge(dd_df, on=['county'])","99e38921":"combined_df.shape","54f845d5":"combined_df.head()","a8875d3c":"plt.figure(figsize=(14, 14))\nheatmap = sns.heatmap(combined_df.corr(), vmin=-1, vmax=1, annot=True, cmap=\"rainbow\")\nplt.show()","6ec547fe":"import plotly.express as px\n_df = combined_df.loc[combined_df.county!='CALIFORNIA']\nfig = px.scatter(_df, x='Hispanic', y='mean(DTP)', size='Pertussis Cases', size_max = 80,\n                hover_name='county', \n                 title=\"Average DTP immun. rates vs.% Hispanic population (size ~ Pertussis Cases\/county)\",\n                 animation_group='county', \n                width=800, height=800)\nfig.show()","cef65a07":"import plotly.express as px\n_df = combined_df.loc[combined_df.county!='CALIFORNIA']\nfig = px.scatter(_df, x='IncomePerCap', y='mean(DTP)', size='Pertussis Rates', size_max = 80,\n                hover_name='county', \n                 title=\"Average DTP immun. rates vs.% Income\/capita (size ~ Pertussis Rates\/county)\",\n                 animation_group='county', \n                width=800, height=800)\nfig.show()","4e058fd3":"import matplotlib\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline \nfrom wordcloud import WordCloud, STOPWORDS\ndef show_wordcloud(data, title=\"\"):\n    text = \" \".join(t for t in data.dropna())\n    stopwords = set(STOPWORDS)\n    stopwords.update([\"elementary\", \"elem\", \"school\", \"street\", \"avenue\", \"academy\", \"ave\", \"acad\", \"av\"])\n    wordcloud = WordCloud(stopwords=stopwords, scale=4, max_font_size=50, max_words=500,background_color=\"black\").generate(text)\n    fig = plt.figure(1, figsize=(16,16))\n    plt.axis('off')\n    fig.suptitle(title, fontsize=20)\n    fig.subplots_adjust(top=2.3)\n    plt.imshow(wordcloud, interpolation='bilinear')\n    plt.show()","02842973":"show_wordcloud(student_data_df['SCHOOL'], title = 'Prevalent words in all School names')","a8f60fcf":"d_df = student_data_df.loc[student_data_df.pDTP < 80]\nshow_wordcloud(d_df['SCHOOL'], title = 'Prevalent words in all School names with percent of DTP vaccination < 80%')","5323d625":"d_df = student_data_df.loc[student_data_df.pMMR < 80]\nshow_wordcloud(d_df['SCHOOL'], title = 'Prevalent words in all School names with percent of MMR vaccination < 80%')","311eeb6f":"d_df = student_data_df.loc[student_data_df.pPolio < 80]\nshow_wordcloud(d_df['SCHOOL'], title = 'Prevalent words in all School names with percent of Polio vaccination < 80%')","8715a033":"d_df = student_data_df.loc[student_data_df.pDTP < 50]\nshow_wordcloud(d_df['SCHOOL'], title = 'Prevalent words in all School names with percent of DTP vaccination < 50%')","a72192fd":"d_df = student_data_df.loc[student_data_df.pMMR < 50]\nshow_wordcloud(d_df['SCHOOL'], title = 'Prevalent words in all School names with percent of MMR vaccination < 50%')","c400c640":"d_df = student_data_df.loc[student_data_df.pPolio < 50]\nshow_wordcloud(d_df['SCHOOL'], title = 'Prevalent words in all School names with percent of Polio vaccination < 50%')","74f033b3":"d_df = student_data_df.loc[student_data_df.pDTP < 20]\nshow_wordcloud(d_df['SCHOOL'], title = 'Prevalent words in all School names with percent of DTP vaccination < 20%')","ef85e371":"d_df = student_data_df.loc[student_data_df.pMMR < 20]\nshow_wordcloud(d_df['SCHOOL'], title = 'Prevalent words in all School names with percent of MMR vaccination < 20%')","584c0a97":"d_df = student_data_df.loc[student_data_df.pPolio < 20]\nshow_wordcloud(d_df['SCHOOL'], title = 'Prevalent words in all School names with percent of Polio vaccination < 20%')","3fa987dd":"## 3.4. Melt pertussis data\n\nWe will transform pertussis data in a format closer to a normal one.\n\nFirst we melt rates and cases subsets of the original dataframe.","53337b93":"# 6. Immunization and outbreak\n\nHere we look to the correlation between immunization, beliefs or medical extemptions and outbreak. We also look to the geographical information of schools\/kindergartens, that we can join with the student vaccination & extempt data, as well as with the aggregated (at county level) epidemic data.\n\nLet's first look to the correlation between immunization rates and extemptions.","65ae14f0":"There is a very strong correlation between the percent of immunization for Polio, MMR & DTP.\nThere is a strong inverse correlation between percent of immunization for Polio, MMR, DTP and the percent of Personal Beliefs Extemption. That confirms that fact that a sizable part of immunization were not done based on Personal Beliefs Exemption.\n\n","263afada":"We will have to curate this data, so that we will include only geographical data for actual locations in California.","b63e1a01":"Percents for MMR vaccination (averages) are consistently smaller in private schools in each year, compared with averages for public schools.","9ff74667":"## 6.1. Economic and social data\n\nWe add the census data for California to try to understand if there is a correlation between immunization rates, personal belief exemptions, outbreaks and economic and social data.\n\nWe will use census data from 2015, which is the closest to the study period.","b59c0a1e":"Next, we will lokk to frequent words in the name of the schools with vaccination percent under 80% for DTP, MMR and Polio.","ecca0388":"We can observe that the most frequent words in the names of schools with very low vaccination levels are:\n* Waldorf  \n* Montessori\n* Charter\n* Christian\n\nCharter schools are public schools that have a special regime, not following the mainstream education curicula or regulations. Parents that wants a special education but cannot affort an expensive private school will most probably look for a charter school.\n\nWaldorf and Montessori are the most widespread special education institutions. These are private schools.\n\nChristian is most probably as well private school observing the Christian religion.","c5680cfa":"It is interesting to note that there is a sharp increase of the average value of PME % in 2015 in the private schools.","420eab22":"# 4. Student data analysis: vaccination and exemption rates","e8938d64":"<h1>What can we learn from California Immunization Rates and Pertussis Outbreaks?<\/h1>\n\n\n\n# 1. Introduction\n\n\nIn this analysis we will attempt to interpret the data from California Kindergarten Immunization Rates dataset. The dataset contains immunization data, at school level, for the years between 2000 and 2014 as well as pertussis epidemics data, at county level, between 2010 and 2014. For the schools, the data contains as well geograhical position data, so that we can map the vaccination distribution, assuming that most likely children live close to their schools.\n\nThe analysis will start with understanding of the evolution of immunization rates for MMR, DTP, Polio as well as Personal Beliefs Exemption and Personal Medical Exemption, also registered along with the immunization rates.\n\nThen we will look into the epidemy data.\n\nWw will continue with analysis of the geographical distribution of vaccination rates and incidence of pertussis cases.\n\nNext we try to understand from the school name if there is something specific to the schools with lowest immunization rates.\n\nWe put then all the results of our observations together, trying to grasp the main factors of the pertussis outbreaks (most cases in 2010 and 2014).\n","ba59030b":"# 8. Putting all together\n\n\nThe outbreaks were preceeded by several years with decreasing immunization rates (and as low as zero in certain schools). The low immunization rates are integrating in time to lower the immunization average value in the entire population to values that are under the minimum values that ensure herd immunization.\n\nImmunization rates were low for all vaccines schemes: DTP, MMR and Polio.\n\nPrivate schools have lower immunization rates than public schools. The lowest immunization rates are associated with Charter, Religious and special education (Waldorf, Montessori) schools.\n\nDue to very infectious rate of Pertussis, lowering the immunization rate for DTP triggered a much severe risk of outbreak. This risk manifested both in 2010 and 2014.\n\nLowest averages immunization rates were not in the most populated areas but rather in isolated counties. The outbreak requires two factors:\n\n* areas with very low immunization rates - here it starts\n* areas with high density of population and a combination of very low minimum of immunization rates and relatively small immunization averages\n\n\n","6c7e8f2a":"Averages of DTP vaccinations for private schools is consistently smaller (and smaller than 90% between 2009 and 2014) as an average. ","bca24e29":"# 2. Analysis preparation\n\n\nWe prepare our analysis by loading the packages and the data.\n\n## 2.1. Load packages","a393ac2b":"Next, we will lokk to frequent words in the name of the schools with vaccination percent under 50% for DTP, MMR and Polio.","d0b0b043":"## 3.2. Data columns explanation\n\n### 3.2.1. Geo data\n\nThese are data obtained with geo matching.\n\n* longitude - school coordinate longitude\n* latitude - school coordinate latitude\n* school_code - this fields will allow matching with the similar field in student_data_df\n* countyMatch - flag for county match\n* isSchool - flag for school match\n\nWhat we need to check:\n* check if every school in student_data_df has a correspondent here\n* check if every school in student_data_df has its geo data right\n\n\n### 3.2.2. Pertusis rates\n\nThese are data about Pertusis cases between 2010 and 2014.\n* county  - the county name\n* Cases2010  - cases in 2010\n* Rate2010  - rate per 1000 children population cohort in 2010\n* Cases2011  - cases in 2011\n* Rate2011   - rate per 1000  children population cohort in 2011\n* Case2012   - cases in 2012 \n* Rate2012   - rate per 1000  children population cohort in 2012\n* Cases2013   - cases in 2013 \n* Rate2013    - rate per 1000  children population cohort in 2013\n* Cases2014    - cases in 2014\n* Rate214   - rate per 1000  children population cohort in 2014\n\n### 3.2.3. Student data\n\nThe student data: \n* schoolType - the type of the school\n* COUNTY - county name (can be matched with county in Pertusis rates and geo data)\n* SCHOOL - school name - we can use the name to get more insights into the type of school\t\n* school_code - school code, can be matched with the same from geo data\t\n* n\t- number of pupils\/students in the school (per the corresponding year)\n* nMMR\t- number of students vaccinated with Measles\/Mumps\/Rubella (MMR) vaccine\n* nDTP\t- number of students vaccinated with Diphtheria\/Tetanus\/Pertussis (DTP) vaccine\n* nPolio - \tnumber of students vaccinated with Polio vaccine\n* nPBE\t- number of students with Personal Belief Extemption - i.e. students that used PBE to withdraw from vaccination programme (fully or partially)\n* nPME\t- number of students with Permanent Medical Extemption - i.e. students that used PME to withdraw from vaccination programme (fully or partially)\n* year - the year of current record\n\n\n### 3.2.4. Infant data\nAdditionaly, the dataset provides data on cases, hospitalization, and deaths for infants under three months old for each county in California between 2014-2015.","a7a7164a":"# 5. Pertussis epidemics data analysis\n\nWe analyze the distribution of cases based on pertussis data and infant data.\n\nSince in the data we have also the California as a whole, we will remove the entry from the data.","9918a236":"As well for Polio, average percents for vaccination in private schools vs. public schools are smaller. The smallest average value is 88.7% in private schools in 2014.","1cfbca40":"We observe that geo_data_df and infant_data_df have a difference of 1 row. We will need to check that discrepancy in more detail (could be that we do not have infant data for one of the counties?).","d583d608":"We see a steadly increase in average percent of PBE per year in both private and public schools from 2000 to 2012, and with private average values as large as 5.7%.","fa57765e":"The number of public schools is increasing continously from 2000 to 2015; Corespondingly, the number of private school is decreasing.","04d51c67":"We make sure the values are digits.","1c841a10":"## 3.3. Data distribution\n\n\nLet's explore the distribution for each item in the dataset. ","9b8dfd62":"The distribution of values for PME are showing outliers not larger than 50% for most of years. In the same time, the distribution for PBE shows outliers as large as 100% for almost all the years.\n\nLet's aggregate this information per county and year.","50e61f32":"## 2.2. Data ingestion\n\nWe load the data files, taking care to the encoding (student data will need different encoding option).","0dca8bd3":"We merge in a new, unique dataset.","82d6d269":"Looking to the distribution for MMR, DTP and Polio actual percent values \/ year, we can notice, beside the distribution with averages between 88% to 95% a very large number of outliers, with values as small as 0% for both public and private schools. ","5e1302b0":"# 7. What is in a (school) name\n\nWe already observed that private vs. public schools shows different percents of vaccinations and personal medical extemption or personal beliefs extemption. Using the schools name we dig further, trying to grasp the relationship between type of school and vaccination levels.\n\nLet's first look to all the schools names. We will remove frequent words that appears in school names without eliminating specific terms that can give hints about the school type.","b9bd4981":"The number of pupils \/ year is increasing in public schools and decreasing in the private schools over the time.\n\nBy dividing the numbers for MMR, DTP, Polio vaccinations \/ school & year, as well as numbers of PBE, PME \/ school & year to total number of pupils \/ year & school, we obtain the percents for each of these values.","7603fe60":"The correlations between number of Pertussis cases (per year and county) and the number of pupils population is expected. \n\nIt appears that there is an inverse correlation between the minimum of percent of DTP immunizations and the pupils population. The greater the county, the highest probability to have smaller values of minimum immunization rates. \n\nAlso, there is a inverse correlation between the number of pertussis cases and min(DTP). This is due to tranzitivity of the previous one correlation. But this results in an interesting observation. The smaller the minimum value of immunization percents per county and year, the highest the number of Pertussis cases.\n\nTo start an outbreak, it is very important to have a number of schools, regions with very small immunization rate. \n\nThen, the numbers will kick-in and, once we have an initial point, the outbreak will develop in areas with dense population.\n\nSo, for the outbreak we need both areas with very small immunization rates and areas with dense populations.","154d2f08":"# 3. Data exploration\n\n\nBefore the actual analysis, we will conduct a preliminary data exploration, focusing on data validation, we look if we have missing values, we explain the meaning of the data columns, and we identify the data cleaning, normalization and data transformations that we will need to perform prior to the analysis.\n\n## 3.1. Data validation\n","81bbc8a7":"There are no strong correlations between racial, social, economic factors (with some small exceptions) and immunization rates or outbreak severity."}}