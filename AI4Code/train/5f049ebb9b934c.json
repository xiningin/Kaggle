{"cell_type":{"e63a48fe":"code","27977929":"code","16c36ea0":"code","7dbafcc3":"code","78884a52":"code","568f380a":"code","c3457207":"code","a4d9bd66":"code","22ef9429":"code","9d88adcb":"code","e53a0260":"code","7ff8c4a7":"code","44358c00":"code","ae949c8a":"code","c5ff2c27":"code","2f475542":"code","fabc91a5":"code","64ef54f8":"code","d357339e":"code","011856d1":"code","f9a31d2e":"code","5387d623":"code","34b0a630":"code","283d4b12":"code","26b08cab":"code","7079d240":"code","5116db88":"code","fffb1924":"code","490fd65f":"code","f62934a5":"code","26f87411":"code","7420113e":"code","d17c3c7e":"code","fc65a4a6":"code","b4adc86b":"code","2327140b":"code","a3d6915d":"code","7c67abf8":"code","9e612a92":"code","789a3e3e":"code","14dbff46":"code","38c2ae54":"code","e47ca8fc":"code","5772fc4c":"code","80c2c151":"code","9195bca7":"code","13199126":"code","cf8c665c":"code","87dff048":"code","63c4084c":"code","497e79c6":"code","ce8e1e45":"code","7b17e322":"code","f83e27f9":"code","354caf9b":"code","b0c3d744":"code","cf21af3b":"code","e18100fb":"code","c1f1343e":"code","3f4a9554":"code","266c29bf":"code","8d44e53c":"code","3c5239d3":"code","b8bb1191":"code","05715ae7":"code","7416737a":"code","93b6bff0":"code","ec39b117":"code","479b3428":"code","e508e1f0":"code","622d89b2":"code","61ea78c2":"code","a8faca63":"code","3170737c":"code","8376594f":"code","9bc6259f":"code","e68de8c2":"code","28a117bd":"code","8f330b06":"code","07dfb12a":"code","30d18a7e":"code","c42f86f8":"code","c48f6d45":"code","05fa8779":"code","660eaee6":"code","a43df7fe":"code","e1089b94":"code","f91ad3bf":"code","70ba092f":"code","a0aa9532":"code","eecf18b5":"code","380cc7c0":"code","0cb414b5":"code","51242eb9":"code","804a6bb2":"code","4414e9cb":"code","e946d0af":"markdown","94a6042d":"markdown","855f0fda":"markdown","4c97c939":"markdown","5600d8b5":"markdown","c943e7d9":"markdown","3ea78b17":"markdown","830a2d2e":"markdown","0d8e3f1a":"markdown","a90fbded":"markdown","a069f274":"markdown","fc5107e7":"markdown","6e51b013":"markdown","16037188":"markdown","211d9dd7":"markdown","5fd99f1e":"markdown","b8a5c902":"markdown","3a4c8d1b":"markdown","6ca02cf1":"markdown","10857004":"markdown"},"source":{"e63a48fe":"import pandas as pd\nfrom IPython.core.display import HTML\n\npath = \"..\/input\/\"\n\nversions = pd.read_csv(path+\"KernelVersions.csv\")\nkernels = pd.read_csv(path+\"Kernels.csv\")\nusers = pd.read_csv(path+\"Users.csv\")\n\nlanguage_map = {'1' : 'R','5' : 'R', '12' : 'R', '13' : 'R', '15' : 'R', '16' : 'R',\n                '2' : 'Python','8' : 'Python', '9' : 'Python', '14' : 'Python'}\n\ndef pressence_check(title, tokens, ignore = []):\n    present = False\n    for token in tokens:\n        words = token.split()\n        if all(wrd.lower().strip() in title.lower() for wrd in words):\n            present = True\n    for token in ignore:\n        if token in title.lower():\n            present = False\n    return present \n\n## check if the latest version of the kernel is about the same topic \ndef get_latest(idd):\n    latest = versions[versions['KernelId'] == idd].sort_values('VersionNumber', ascending = False).iloc(0)[0]\n    return latest['VersionNumber']\n\ndef get_kernels(tokens, n, ignore = []):\n    versions['isRel'] = versions['Title'].apply(lambda x : pressence_check(x, tokens, ignore))\n    relevant = versions[versions['isRel'] == 1]\n    results = relevant.groupby('KernelId').agg({'TotalVotes' : 'sum', \n                                                'KernelLanguageId' : 'max', \n                                                'Title' : lambda x : \"#\".join(x).split(\"#\")[-1],\n                                                'VersionNumber' : 'max'})\n    results = results.reset_index().sort_values('TotalVotes', ascending = False).head(n)\n    results = results.rename(columns={'KernelId' : 'Id', 'TotalVotes': 'Votes'})\n\n\n    results['latest_version']  = results['Id'].apply(lambda x : get_latest(x))\n    results['isLatest'] = results.apply(lambda r : 1 if r['VersionNumber'] == r['latest_version'] else 0, axis=1)\n    results = results[results['isLatest'] == 1]\n\n    results = results.merge(kernels, on=\"Id\").sort_values('TotalVotes', ascending = False)\n    results = results.merge(users.rename(columns={'Id':\"AuthorUserId\"}), on='AuthorUserId')\n    results['Language'] = results['KernelLanguageId'].apply(lambda x : language_map[str(x)] if str(x) in language_map else \"\")\n    results = results.sort_values(\"TotalVotes\", ascending = False)\n    return results[['Title', 'CurrentUrlSlug','Language' ,'TotalViews', 'TotalComments', 'TotalVotes', \"DisplayName\",\"UserName\"]]\n\n\ndef best_kernels(tokens, n = 10, ignore = [], idd = \"one\"):\n    response = get_kernels(tokens, n, ignore)     \n    hs = \"\"\"<style>\n                .rendered_html tr {font-size: 12px; text-align: left}\n            <\/style>\n            <h3 id='\"\"\"+ idd +\"\"\"'><font color=\"#1768ea\">\"\"\"+tokens[0].title()+\"\"\"<\/font><\/h3>\n            <table>\n            <th>\n                <td><b>Kernel<\/b><\/td>\n                <td><b>Author<\/b><\/td>\n                <td><b>Language<\/b><\/td>\n                <td><b>Views<\/b><\/td>\n                <td><b>Comments<\/b><\/td>\n                <td><b>Votes<\/b><\/td>\n            <\/th>\"\"\"\n    for i, row in response.iterrows():\n        url = \"https:\/\/www.kaggle.com\/\"+row['UserName']+\"\/\"+row['CurrentUrlSlug']\n        aurl= \"https:\/\/www.kaggle.com\/\"+row['UserName']\n        hs += \"\"\"<tr>\n                    <td>\"\"\"+str(i+1)+\"\"\"<\/td>\n                    <td><a href=\"\"\"+url+\"\"\" target=\"_blank\"><b>\"\"\"  + row['Title'] + \"\"\"<\/b><\/a><\/td>\n                    <td><a href=\"\"\"+aurl+\"\"\" target=\"_blank\">\"\"\"  + row['DisplayName'] + \"\"\"<\/a><\/td>\n                    <td>\"\"\"+str(row['Language'])+\"\"\"<\/td>\n                    <td>\"\"\"+str(row['TotalViews'])+\"\"\"<\/td>\n                    <td>\"\"\"+str(row['TotalComments'])+\"\"\"<\/td>\n                    <td>\"\"\"+str(row['TotalVotes'])+\"\"\"<\/td>\n                    <\/tr>\"\"\"\n    hs += \"<\/table>\"\n    display(HTML(hs))","27977929":"tokens = [\"linear regression\"]\nbest_kernels(tokens, 10, idd=\"1.1\")","16c36ea0":"tokens = ['logistic regression', \"logistic\"]\nbest_kernels(tokens, 10, idd=\"1.2\")","7dbafcc3":"tokens = ['Ridge']\nbest_kernels(tokens, 10, idd=\"2.1\")","78884a52":"tokens = ['Lasso']\nbest_kernels(tokens, 10, idd=\"2.2\")","568f380a":"tokens = ['ElasticNet']\nbest_kernels(tokens, 4, idd=\"2.3\")","c3457207":"tokens = ['Decision Tree']\nbest_kernels(tokens, 10, idd=\"3.1\")","a4d9bd66":"tokens = ['random forest']\nbest_kernels(tokens, 10, idd=\"3.2\")","22ef9429":"tokens = ['lightgbm', 'light gbm', 'lgb']\nbest_kernels(tokens, 10, idd=\"3.3\")","9d88adcb":"tokens = ['xgboost', 'xgb']\nbest_kernels(tokens, 10, idd=\"3.4\")","e53a0260":"tokens = ['catboost']\nbest_kernels(tokens, 10, idd=\"3.5\")","7ff8c4a7":"tokens = ['gradient boosting']\nbest_kernels(tokens, 10, idd=\"3.6\")","44358c00":"tokens = ['neural network']\nbest_kernels(tokens, 10, idd=\"4.1\")","ae949c8a":"tokens = ['autoencoder']\nbest_kernels(tokens, 10, idd=\"4.2\")","c5ff2c27":"tokens = ['deep learning']\nbest_kernels(tokens, 10, idd=\"4.3\")","2f475542":"tokens = ['convolutional neural networks', 'cnn']\nbest_kernels(tokens, 10, idd=\"4.4\")","fabc91a5":"tokens = ['recurrent','rnn']\nbest_kernels(tokens, 10, idd=\"4.5\")","64ef54f8":"tokens = ['lstm']\nbest_kernels(tokens, 10, idd=\"4.6\")","d357339e":"tokens = ['gru']\nignore = ['grupo']\nbest_kernels(tokens, 10, ignore, idd=\"4.7\")","011856d1":"tokens = ['mxnet']\nbest_kernels(tokens, 10, idd=\"4.8\")","f9a31d2e":"tokens = ['resnet']\nbest_kernels(tokens, 10, idd=\"4.9\")","5387d623":"tokens = ['Capsule network', 'capsulenet']\nbest_kernels(tokens, 5, idd=\"4.10\")","34b0a630":"tokens = ['vgg']\nbest_kernels(tokens, 5, idd=\"4.11\")","283d4b12":"tokens = ['unet']\nbest_kernels(tokens, 10, idd=\"4.12\")","26b08cab":"tokens = ['alexnet']\nbest_kernels(tokens, 5, idd=\"4.13\")","7079d240":"tokens = ['xception']\nbest_kernels(tokens, 5, idd=\"4.14\")","5116db88":"tokens = ['inception']\nbest_kernels(tokens, 5, idd=\"4.15\")","fffb1924":"tokens = ['computer vision']\nbest_kernels(tokens, 5, idd=\"4.16\")","490fd65f":"tokens = ['transfer']\nbest_kernels(tokens, 10, idd=\"4.17\")","f62934a5":"tokens = ['yolo']\nbest_kernels(tokens, 5, idd=\"4.18\")","26f87411":"tokens = ['object detection']\nbest_kernels(tokens, 5, idd=\"4.19\")","7420113e":"tokens = ['rcnn']\nbest_kernels(tokens, 5, idd=\"4.20\")","d17c3c7e":"tokens = ['mobilenet']\nbest_kernels(tokens, 5, idd=\"4.21\")","fc65a4a6":"tokens = ['kmeans', 'k means']\nbest_kernels(tokens, 10, idd=\"5.1\")","b4adc86b":"tokens = ['hierarchical clustering']\nbest_kernels(tokens, 3, idd=\"5.2\")","2327140b":"tokens = ['dbscan']\nbest_kernels(tokens, 10, idd=\"5.3\")","a3d6915d":"tokens = ['unsupervised']\nbest_kernels(tokens, 10, idd=\"5.4\")","7c67abf8":"tokens = ['naive bayes']\nbest_kernels(tokens, 10, idd=\"6.1\")","9e612a92":"tokens = ['svm']\nbest_kernels(tokens, 10, idd=\"6.2\")","789a3e3e":"tokens = ['knn']\nbest_kernels(tokens, 10, idd=\"6.3\")","14dbff46":"tokens = ['recommendation engine']\nbest_kernels(tokens, 5, idd=\"6.4\")","38c2ae54":"tokens = ['EDA', 'exploration', 'exploratory']\nbest_kernels(tokens, 10, idd=\"7.1.a\")","e47ca8fc":"tokens = ['feature engineering']\nbest_kernels(tokens, 10, idd=\"7.1.b\")","5772fc4c":"tokens = ['feature selection']\nbest_kernels(tokens, 10, idd=\"7.1.c\")","80c2c151":"tokens = ['outlier treatment', 'outlier']\nbest_kernels(tokens, 10, idd=\"7.1.d\")","9195bca7":"tokens = ['anomaly detection', 'anomaly']\nbest_kernels(tokens, 8, idd=\"7.1.e\")","13199126":"tokens = ['smote']\nbest_kernels(tokens, 5, idd=\"7.1.f\")","cf8c665c":"tokens = ['pipeline']\nbest_kernels(tokens, 10, idd=\"7.1.g\")","87dff048":"tokens = ['missing value']\nbest_kernels(tokens, 10, idd=\"7.1.h\")","63c4084c":"tokens = ['dataset decomposition', 'dimentionality reduction']\nbest_kernels(tokens, 2, idd=\"7.2.a\")","497e79c6":"tokens = ['PCA']\nbest_kernels(tokens, 10, idd=\"7.2.b\")","ce8e1e45":"tokens = ['Tsne', 't-sne']\nbest_kernels(tokens, 10, idd=\"7.2.c\")","7b17e322":"tokens = ['svd']\nbest_kernels(tokens, 10, idd=\"7.2.d\")","f83e27f9":"tokens = ['cross validation']\nbest_kernels(tokens, 10, idd=\"7.3.a\")","354caf9b":"tokens = ['model selection']\nbest_kernels(tokens, 10, idd=\"7.3.b\")","b0c3d744":"tokens = ['model tuning', 'tuning']\nbest_kernels(tokens, 10, idd=\"7.3.c\")","cf21af3b":"tokens = ['gridsearch', 'grid search']\nbest_kernels(tokens, 10, idd=\"7.3.d\")","e18100fb":"tokens = ['ensemble']\nbest_kernels(tokens, 10, idd=\"7.4.a\")","c1f1343e":"tokens = ['stacking', 'stack']\nbest_kernels(tokens, 10, idd=\"7.4.b\")","3f4a9554":"tokens = ['bagging']\nbest_kernels(tokens, 10, idd=\"7.4.c\")","266c29bf":"tokens = ['blend']\nbest_kernels(tokens, 10, idd=\"7.4.d\")","8d44e53c":"tokens = ['NLP', 'Natural Language Processing', 'text mining']\nbest_kernels(tokens, 10, idd=\"8.1\")","3c5239d3":"tokens = ['topic modelling', 'lda']\nbest_kernels(tokens, 8, idd=\"8.2\")","b8bb1191":"tokens = ['word embedding','fasttext', 'glove', 'word2vec', 'word vector']\nbest_kernels(tokens, 8, idd=\"8.3\")","05715ae7":"tokens = ['spacy']\nbest_kernels(tokens, 10, idd=\"8.4\")","7416737a":"tokens = ['nltk']\nbest_kernels(tokens, 5, idd=\"8.5\")","93b6bff0":"tokens = ['textblob']\nbest_kernels(tokens, 5, idd=\"8.6\")","ec39b117":"tokens = ['scikit']\nbest_kernels(tokens, 10, idd=\"9.1\")","479b3428":"tokens = ['tensorflow', 'tensor flow']\nbest_kernels(tokens, 10, idd=\"9.2\")","e508e1f0":"tokens = ['theano']\nbest_kernels(tokens, 10, idd=\"9.3\")","622d89b2":"tokens = ['keras']\nbest_kernels(tokens, 10, idd=\"9.4\")","61ea78c2":"tokens = ['pytorch']\nbest_kernels(tokens, 10, idd=\"9.5\")","a8faca63":"tokens = ['vowpal wabbit','vowpalwabbit']\nbest_kernels(tokens, 10, idd=\"9.6\")","3170737c":"tokens = ['eli5']\nbest_kernels(tokens, 10, idd=\"9.7\")","8376594f":"tokens = ['hyperopt']\nbest_kernels(tokens, 5, idd=\"9.8\")","9bc6259f":"tokens = ['pandas']\nbest_kernels(tokens, 10, idd=\"9.9\")","e68de8c2":"tokens = ['SQL']\nbest_kernels(tokens, 10, idd=\"9.10\")","28a117bd":"tokens = ['bigquery', 'big query']\nbest_kernels(tokens, 10, idd=\"9.11\")","8f330b06":"tokens = ['gpu']\nbest_kernels(tokens, 10, idd=\"9.12\")","07dfb12a":"tokens = ['h20']\nbest_kernels(tokens, 5, idd=\"9.13\")","30d18a7e":"tokens = ['fastai', 'fast.ai']\nbest_kernels(tokens, 10, idd=\"9.14\")","c42f86f8":"tokens = ['visualization', 'visualisation']\nbest_kernels(tokens, 10, idd=\"10.1\")","c48f6d45":"tokens = ['plotly', 'plot.ly']\nbest_kernels(tokens, 10, idd=\"10.2\")","05fa8779":"tokens = ['seaborn']\nbest_kernels(tokens, 10, idd=\"10.3\")","660eaee6":"tokens = ['d3.js']\nbest_kernels(tokens, 4, idd=\"10.4\")","a43df7fe":"tokens = ['bokeh']\nbest_kernels(tokens, 10, idd=\"10.5\")","e1089b94":"tokens = ['highchart']\nbest_kernels(tokens, 10, idd=\"10.6\")","f91ad3bf":"tokens = ['folium']\nbest_kernels(tokens, 5, idd=\"10.7\")","70ba092f":"tokens = ['ggplot']\nbest_kernels(tokens, 10, idd=\"10.8\")","a0aa9532":"tokens = ['time series']\nbest_kernels(tokens, 10, idd=\"11.1\")","eecf18b5":"tokens = ['arima']\nbest_kernels(tokens, 10, idd=\"11.2\")","380cc7c0":"tokens = ['forecasting']\nbest_kernels(tokens, 10, idd=\"11.3\")","0cb414b5":"tokens = ['tutorial']\nbest_kernels(tokens, 10, idd=\"12.1\")","51242eb9":"tokens = ['data leak', 'leak']\nbest_kernels(tokens, 10, idd=\"12.2\")","804a6bb2":"tokens = [\"adversarial validation\"]\nbest_kernels(tokens, 10, idd=\"12.3\")","4414e9cb":"tokens = [\"generative adversarial networks\", \"simgan\", \"-gan\"]\nbest_kernels(tokens, 10, idd=\"12.4\")","e946d0af":"## 12. Misc Materials \n\n### 12.1 Some of the Best Tutorials on Kaggle","94a6042d":"### 7.1 Preprocessing","855f0fda":"## 9. Data Science Tools","4c97c939":"## 3. Tree Based Models","5600d8b5":"### 12.4 Generative Adversarial Networks","c943e7d9":"## 2. Regularization Algorithms","3ea78b17":"### 12.2 Data Leak","830a2d2e":"### 7.4 Ensemblling","0d8e3f1a":"### 7.2 Dimentionality Reduction","a90fbded":"## 4. Neural Networks and Deep Learning Models","a069f274":"## 10. Data Visualization","fc5107e7":"# Data Science Glossary on Kaggle \n\nKaggle is the place to do data science projects. There are so many algorithms and concepts to learn. Kaggle Kernels are one of the best resources on internet to understand the practical implementation of algorithms. There are almost 200,000 kernels published on kaggle and sometimes it becomes diffcult to search for the right implementation. I have used the [Meta Kaggle](https:\/\/www.kaggle.com\/kaggle\/meta-kaggle) database to create a glossary of data science models, techniques and tools shared on kaggle kernels. One can use this kernel as the one place to find other great kernels shared by great authors. Hope you like this kernel. \n\n## Contents\n\n<ul>\n\t<li>1. Regression Algorithms\n\t\t<ul>\n\t\t\t<li><a href=\"#1.1\">1.1 Linear Regression<\/a><\/a><\/li>\n\t\t\t<li><a href=\"#1.2\">1.2 Logistic Regression<\/a><\/li>\n\t\t<\/ul>\n\t<\/li>\n\t<li>2. Regularization Algorithms\n\t\t<ul>\n\t\t\t<li><a href=\"#2.1\">2.1 Ridge Regression Regression<\/a><\/li>\n\t\t\t<li><a href=\"#2.2\">2.2 Lasso Regression<\/a><\/li>\n\t\t\t<li><a href=\"#2.3\">2.3 Elastic Net<\/a><\/li>\n\t\t<\/ul>\n\t<\/li>\n\t<li>3. Tree Based Models\n\t\t<ul>\n\t\t\t<li><a href=\"#3.1\">3.1 Decision Tree<\/a><\/li>\n\t\t\t<li><a href=\"#3.2\">3.2 Random Forests<\/a><\/li>\n\t\t\t<li><a href=\"#3.3\">3.3 Lightgbm<\/a><\/li>\n\t\t\t<li><a href=\"#3.4\">3.4 XgBoost<\/a><\/li>\n\t\t\t<li><a href=\"#3.5\">3.5 Cat Boost<\/a><\/li>\n\t\t\t<li><a href=\"#3.6\">3.6 Gradient Boosting<\/a><\/li>\n\t\t<\/ul>\n\t<\/li>\n\t<li>4. Neural Networks and Deep Learning\n\t\t<ul>\n\t\t\t<li><a href=\"#4.1\">4.1 Neural Networks<\/a><\/li>\n\t\t\t<li><a href=\"#4.2\">4.2 AutoEncoders<\/a><\/li>\n\t\t\t<li><a href=\"$4.3\">4.3 DeepLearning<\/a><\/li>\n\t\t\t<li><a href=\"#4.4\">4.4 Convolutional Neural Networks \/ CNN<\/a><\/li>\n\t\t\t<li><a href=\"#4.5\">4.5 Recurrent Neural Networks \/ RNN<\/a><\/li>\n\t\t\t<li><a href=\"#4.6\">4.6 LSTMs<\/a><\/li>\n\t\t\t<li><a href=\"#4.7\">4.7 GRUs<\/a><\/li>\n\t\t\t<li><a href=\"#4.8\">4.8 MxNet<\/a><\/li>\n\t\t\t<li><a href=\"#4.9\">4.9 ResNet<\/a><\/li>\n\t\t\t<li><a href=\"#4.10\">4.10 CapsuleNets<\/a><\/li>\n\t\t\t<li><a href=\"#4.11\">4.11 Unet<\/a><\/li>\n\t\t\t<li><a href=\"#4.12\">4.12 VGGs<\/a><\/li>\n\t\t\t<li><a href=\"#4.13\">4.13 Unet<\/a><\/li>\n\t\t\t<li><a href=\"#4.14\">4.14 Xception<\/a><\/li>\n\t\t\t<li><a href=\"#4.15\">4.15 Inception Nets<\/a><\/li>\n\t\t\t<li><a href=\"#4.16\">4.16 Computer Vision<\/a><\/li>\n\t\t\t<li><a href=\"#4.17\">4.17 Transfer Learning<\/a><\/li>\n\t\t\t<li><a href=\"#4.18\">4.18 Object Detection<\/a><\/li>\n\t\t\t<li><a href=\"#4.19\">4.19 Object Detection<\/a><\/li>\n\t\t\t<li><a href=\"#4.20\">4.20 RCNN<\/a><\/li>\n\t\t\t<li><a href=\"#4.21\">4.21 MobileNet<\/a><\/li>\n\t\t<\/ul>\n\t<\/li>\n\t<li>5. Clustering Algorithms\n\t\t<ul>\n\t\t\t<li><a href=\"#5.1\">5.1 K Means Clustering<\/a><\/li>\n\t\t\t<li><a href=\"#5.2\">5.2 Hierarchial Clustering<\/a><\/li>\n\t\t\t<li><a href=\"#5.3\">5.3 DB Scan<\/a><\/li>\n\t\t\t<li><a href=\"#5.4\">5.4 Unsupervised Learning<\/a><\/li>\n\t\t<\/ul>\n\t<\/li>\n\t<li>6. Misc - Models\n\t\t<ul>\n\t\t\t<li><a href=\"#6.1\">6.1 K Naive Bayes<\/a><\/li>\n\t\t\t<li><a href=\"#6.2\">6.2 SVMs<\/a><\/li>\n\t\t\t<li><a href=\"#6.3\">6.3 KNN<\/a><\/li>\n\t\t\t<li><a href=\"#6.4\">6.4 Recommendation Engine<\/a><\/li>\n\t\t<\/ul>\n\t<\/li>\n\t<li>7.1 Data Science Techniques - Preprocessing\n\t\t<ul>\n\t\t\t<li><a href=\"#7.1.a\">a. EDA, Exploration<\/a><\/li>\n\t\t\t<li><a href=\"#7.1.b\">b. Feature Engineering<\/a><\/li>\n\t\t\t<li><a href=\"#7.1.c\">c. Feature Selection<\/a><\/li>\n\t\t\t<li><a href=\"#7.1.d\">d. Outlier Treatment<\/a><\/li>\n\t\t\t<li><a href=\"#7.1.e\">e. Anomaly Detection<\/a><\/li>\n\t\t\t<li><a href=\"#7.1.f\">f. SMOTE<\/a><\/li>\n\t\t\t<li><a href=\"#7.1.g\">g. Pipeline<\/a><\/li>\n\t\t\t<li><a href=\"#7.1.h\">h. Missing Values<\/a><\/li>\n\t\t<\/ul>\n\t<\/li>\n\t<li>7.2 Data Science Techniques - Dimentionality Reduction\n\t\t<ul>\n\t\t\t<li><a href=\"#7.2.a\">a. Dataset Decomposition<\/a><\/li>\n\t\t\t<li><a href=\"#7.2.b\">b. PCA<\/a><\/li>\n\t\t\t<li><a href=\"#7.2.c\">c. Tsne<\/a><\/li>\n\t\t\t<li><a href=\"#7.2.d\">d. SVD<\/a><\/li>\n\t\t<\/ul>\n\t<\/li>\n\t<li>7.3 Data Science Techniques - Post Modelling\n\t\t<ul>\n\t\t\t<li><a href=\"#7.3.a\">a. Cross Validation<\/a><\/li>\n\t\t\t<li><a href=\"#7.3.b\">b. Model Selection<\/a><\/li>\n\t\t\t<li><a href=\"#7.3.c\">c. Model Tuning<\/a><\/li>\n\t\t\t<li><a href=\"#7.3.d\">d. Grid Search<\/a><\/li>\n\t\t<\/ul>\n\t<\/li>\n\t<li>7.4 Data Science Techniques - Ensemblling\n\t\t<ul>\n\t\t\t<li><a href=\"#7.4.a\">a. Ensembling<\/a><\/li>\n\t\t\t<li><a href=\"#7.4.b\">b. Stacking<\/a><\/li>\n\t\t\t<li><a href=\"#7.4.c\">c. Bagging<\/a><\/li>\n\t\t\t<li><a href=\"#7.4.d\">d. Blending<\/a><\/li>\n\t\t<\/ul>\n\t<\/li>\n\t<li>8. Text Data\n\t\t<ul>\n\t\t\t<li><a href=\"#8.1\">8.1. NLP<\/a><\/li>\n\t\t\t<li><a href=\"#8.2\">8.2. Topic Modelling<\/a><\/li>\n\t\t\t<li><a href=\"#8.3\">8.3. Word Embeddings<\/a><\/li>\n\t\t\t<li><a href=\"#8.4\">8.4. Spacy<\/a><\/li>\n\t\t\t<li><a href=\"#8.5\">8.5. NLTK<\/a><\/li>\n\t\t\t<li><a href=\"#8.6\">8.6. TextBlob<\/a><\/li>\n\t\t<\/ul>\n\t<\/li>\n\t<li>9. Data Science Tools\n\t\t<ul>\n\t\t\t<li><a href=\"#9.1\">9.1 Scikit Learn<\/a><\/li>\n\t\t\t<li><a href=\"#9.2\">9.2 TensorFlow<\/a><\/li>\n\t\t\t<li><a href=\"#9.3\">9.3 Theano<\/a><\/li>\n\t\t\t<li><a href=\"#9.4\">9.4 Kears<\/a><\/li>\n\t\t\t<li><a href=\"#9.5\">9.5 PyTorch<\/a><\/li>\n\t\t\t<li><a href=\"#9.6\">9.6 Vopal Wabbit<\/a><\/li>\n\t\t\t<li><a href=\"#9.7\">9.7 ELI5<\/a><\/li>\n\t\t\t<li><a href=\"#9.8\">9.8 HyperOpt<\/a><\/li>\n\t\t\t<li><a href=\"#9.9\">9.9 Pandas<\/a><\/li>\n\t\t\t<li><a href=\"#9.10\">9.10 Sql<\/a><\/li>\n\t\t\t<li><a href=\"#9.11\">9.11 BigQuery<\/a><\/li>\n\t\t\t<li><a href=\"#9.12\">9.12 GPU<\/a><\/li>\n\t\t\t<li><a href=\"#9.13\">9.12 H2o<\/a><\/li>\n\t\t\t<li><a href=\"#9.14\">9.13 Fast.AI<\/a><\/li>\n\t\t<\/ul>\n\t<\/li>\n\t<li>10. Data Visualizations\n\t\t<ul>\n\t\t\t<li><a href=\"#10.1\">10.1. Visualizations<\/a><\/li>\n\t\t\t<li><a href=\"#10.2\">10.2. Plotly<\/a><\/li>\n\t\t\t<li><a href=\"#10.3\">10.3. Seaborn<\/a><\/li>\n\t\t\t<li><a href=\"#10.4\">10.4. D3.Js<\/a><\/li>\n\t\t\t<li><a href=\"#10.5\">10.5. Bokeh<\/a><\/li>\n\t\t\t<li><a href=\"#10.6\">10.6. Highchart<\/a><\/li>\n\t\t\t<li><a href=\"#10.7\">10.7. Folium<\/a><\/li>\n\t\t\t<li><a href=\"#10.8\">10.8. ggPlot<\/a><\/li>\n\t\t<\/ul>\n\t<\/li>\n\t<li>11. Time Series\n\t\t<ul>\n\t\t\t<li><a href=\"#11.1\">11.1. Time Series Analysis<\/a><\/li>\n\t\t\t<li><a href=\"#11.2\">11.2. ARIMA<\/a><\/li>\n\t\t\t<li><a href=\"#11.3\">11.3. Forecasting<\/a><\/li>\n\t\t<\/ul>\n\t<\/li>\n\t<li>12. Misc Materials<\/a><\/li>\n\t\t<ul>\n\t\t\t<li><a href=\"#12.1\">12.1. Best Tutorials on Kaggle<\/a><\/li>\n\t\t\t<li><a href=\"#12.2\">12.2. Data Leak<\/a><\/li>\n\t\t\t<li><a href=\"#12.3\">12.3. Adversarial Validation<\/a><\/li>\n\t\t\t<li><a href=\"#12.4\">12.4. Generative Adversarial Networks<\/a><\/li>\n\t\t<\/ul>\n<\/ul>\n\n<br>\n<br>\n\n## 1. Regression Algorithms","6e51b013":"### 7.3 Post Modelling Techniques","16037188":"## 11. Time Series","211d9dd7":"<br>\nThanks for viewing. Suggest the list of items which can be added to the list. If you liked this kernel, **please upvote**   \n","5fd99f1e":"### 12.3 Adversarial Validation","b8a5c902":"## 8. Text Data","3a4c8d1b":"## 6. Misc - Models ","6ca02cf1":"## 5. Clustering Algorithms ","10857004":"## 7. Important Data Science Techniques"}}