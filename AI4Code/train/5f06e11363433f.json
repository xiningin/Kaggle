{"cell_type":{"32955635":"code","361212c6":"code","6fa56815":"code","f3bbba37":"code","7f8664ef":"code","a99dc312":"code","c1151123":"code","0343fef5":"code","4d62135f":"code","c417ec1d":"code","cbb6c289":"code","01f21edf":"code","e68e3542":"code","296bd596":"code","5a614c8f":"code","9bfe20bd":"code","5b6be59c":"markdown","8f698f90":"markdown"},"source":{"32955635":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcRDL_3FzBXNhTKkHNJ0uZjssO63ngHQ4qWLYy-BEJ_xRXbU3Vcc',width=400,height=400)","361212c6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","6fa56815":"df= pd.read_json('\/kaggle\/input\/brazil-real-estate-listings\/properati-real-estate-listings-brazil\/datapackage.json',orient='columns',lines=True)","f3bbba37":"df.head()","7f8664ef":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.title)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","a99dc312":"nRowsRead = 1000 # specify 'None' if want to read whole file\n# properati_br_2016_11_01_properties_rent.csv may have more rows in reality, but we are only loading\/previewing the first 1000 rows\ndf1 = pd.read_csv('\/kaggle\/input\/brazil-real-estate-listings\/properati-real-estate-listings-brazil\/data\/properati_br_2016_11_01_properties_rent.csv', delimiter=',', nrows = nRowsRead)\ndf1.dataframeName = 'properati_br_2016_11_01_properties_rent.csv'\nnRow, nCol = df1.shape\nprint(f'There are {nRow} rows and {nCol} columns')","c1151123":"df1.head()","0343fef5":"plt.figure(figsize=(12,4))\nsns.countplot(hue=df1['property_type'], x=df1['price'])\nplt.show()","4d62135f":"import plotly.offline as pyo\nimport plotly.graph_objs as go\nlowerdf1 = df1.groupby('property_type').size()\/df1['place_name'].count()*100\nlabels = lowerdf1.index\nvalues = lowerdf1.values\n\n# Use `hole` to create a donut-like pie chart\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.6)])\nfig.show()","c417ec1d":"plt.figure(figsize=(8,4))\nsns.scatterplot(x='property_type',y='rooms',data=df1)\nplt.xticks(rotation=90)\nplt.yticks(rotation=45)\nplt.show()","cbb6c289":"nRowsRead = 1000 # specify 'None' if want to read whole file\n# properati_br_2016_11_01_properties_rent.csv may have more rows in reality, but we are only loading\/previewing the first 1000 rows\ndf2 = pd.read_csv('\/kaggle\/input\/brazil-real-estate-listings\/properati-real-estate-listings-brazil\/original\/properati-BR-2016-11-01-properties-sell.csv', delimiter=',', nrows = nRowsRead)\ndf2.dataframeName = 'properati-BR-2016-11-01-properties-sell.csv'\nnRow, nCol = df2.shape\nprint(f'There are {nRow} rows and {nCol} columns')","01f21edf":"df2.plot(subplots=True, figsize=(10, 10), sharex=False, sharey=False)\nplt.show()","e68e3542":"df2.head()","296bd596":"sns.countplot(df2[\"property_type\"])\nplt.xticks(rotation=90)\nplt.show()","5a614c8f":"labels1=df2.property_type.value_counts().index\nsizes1=df2.property_type.value_counts().values\nplt.figure(figsize=(11,11))\nplt.pie(sizes1,labels=labels1,autopct=\"%1.1f%%\")\nplt.title(\"Property Type\",size=15)\nplt.show()","9bfe20bd":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df2.description)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","5b6be59c":"Kaggle Notebook Runner: Mar\u00edlia Prata @mpwolke","8f698f90":"Image siila.com.br"}}