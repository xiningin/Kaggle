{"cell_type":{"915d7a57":"code","766e3653":"code","6008141f":"code","e6c4b4d8":"code","c3d46b5e":"code","d0ccfd38":"code","75f18e71":"code","21cbf4f3":"code","9d920933":"code","d1fbedb1":"code","7b59b479":"code","64a0e45f":"code","2fe43c97":"code","3734850b":"code","431e049f":"code","b7db2a8a":"code","28dcb4e8":"code","4e2b14d8":"code","2527e7c9":"code","54aae1e3":"code","9fbab97e":"code","5dee0d66":"code","bae37747":"code","a4c984d4":"code","46b6af21":"code","e5e72ab5":"code","941fc51b":"code","d44c02cb":"code","56648295":"code","c8d6c57f":"code","80713869":"code","d9ad5fd6":"code","81ad8556":"code","9d037222":"code","c2708495":"markdown","2c234696":"markdown","3b9153ea":"markdown","22ffa06e":"markdown","737137b3":"markdown","11fdd706":"markdown","0b50476d":"markdown","b8bef0bf":"markdown","5a0730e1":"markdown","17950aba":"markdown","203c6759":"markdown","336a3a28":"markdown","5a9dfb1e":"markdown","33b49352":"markdown","81ff5a68":"markdown","64115c59":"markdown","05c6449f":"markdown","692525fe":"markdown","d6e9e3e4":"markdown","32882799":"markdown","68931499":"markdown","f46466c2":"markdown","998debc2":"markdown","5554f815":"markdown","5c9610bd":"markdown","c7a01b50":"markdown","caea4152":"markdown","8aaab279":"markdown"},"source":{"915d7a57":"#importing necessary libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly as py","766e3653":"#now we will load the FIFA 19 dataset\n#we will use pandas library; since the dataset is in csv format\n#we will use the syntax to make it into tabular form\ndata=pd.read_csv(\"..\/input\/data.csv\")","6008141f":"#lets see the summary of the dataset\ndata.describe()","e6c4b4d8":"#first five rows of the dataset\ndata.head(5)","c3d46b5e":"#last five rows\ndata.tail(5)","d0ccfd38":"#lets see how many rows and columns we have in our dataset\nprint(\"Number of (rows,columns):\",data.shape)","75f18e71":"#checking if there is any NULL value in the dataset\ndata.isna().sum()","21cbf4f3":"#we saaw that most of the data in 'Loaned From' column is not assigned, hence we will drop it\ndata.drop('Loaned From',axis=1,inplace=True)","9d920933":"#now the data which have NA values, we will fill them with the mean value of that column\ndata.fillna(data.mean(),inplace=True)","d1fbedb1":"#we will check again if after assigning the mean value to the cells of the originally NA values; if there is any cell which has NA value\ndata.isna().sum()","7b59b479":"#there are still cells in which the mean value could not be assigned. This may be because those columns have strings. So we will assign a value \"Unassigned\" to the dataset\ndata.fillna(\"Unassigned\",inplace=True)","64a0e45f":"#after assigning the term, we shall check again whether we have attained a clean data set or not\ndata.isna().sum()","2fe43c97":"#as we started our analysis with the summary of the dataset. We will make a heatmap for the same.\nplt.figure(figsize=(40,40))\np=sns.heatmap(data.corr(),annot=True,cmap='YlOrBr')\np.set_title(label='Heatmap',fontsize=25)\np","3734850b":"# Lets see the top 15 country-wise distribution of players\nfif_countries = data['Nationality'].value_counts().head(15).index.values\nfif_countries_data = data.loc[data['Nationality'].isin(fif_countries),:]","431e049f":"#we will make a simple visualization for the 15 countries data\n#We will make a basic Bar Plot\nsns.set(style=\"dark\")\nplt.figure(figsize=(25,10))\np=sns.barplot(x='Nationality',y='Overall',data=fif_countries_data)\np.set(xlabel='Country', ylabel='Total')","b7db2a8a":"#Box Plot\nsns.set(style=\"ticks\")\nplt.figure(figsize=(25,10))\np=sns.boxplot(x='Nationality',y='Overall',data=fif_countries_data)\np.set(xlabel='Country', ylabel='Total')","28dcb4e8":"ten_countries = data['Nationality'].value_counts().head(10).index.values\nten_countries_data = data.loc[data['Nationality'].isin(ten_countries),:]\nsns.set(style=\"ticks\")\nplt.figure(figsize=(15,10))\np=sns.boxplot(x='Nationality',y='Potential',data=ten_countries_data)","4e2b14d8":"#i will make a dataframe of the dataset. but before that I will choose only those columns which can be used for analysis\nchosen_columns = ['Name','Age','Nationality','Overall','Potential','Special',\n                  'Acceleration','Aggression','Agility','Balance','BallControl',\n                  'Body Type','Composure','Crossing','Curve','Club','Position',\n                  'Dribbling','FKAccuracy','Finishing','GKDiving','GKHandling',\n                  'GKKicking','GKPositioning','GKReflexes','HeadingAccuracy',\n                  'Interceptions','International Reputation','Jersey Number',\n                  'Jumping','Joined','LongPassing','LongShots','Marking',\n                  'Penalties','Positioning','Preferred Foot','Reactions',\n                  'ShortPassing','ShotPower','Skill Moves','SlidingTackle',\n                  'SprintSpeed','Stamina','StandingTackle','Strength','Value',\n                  'Vision','Volleys','Wage','Weak Foot','Work Rate']","2527e7c9":"df=pd.DataFrame(data,columns=chosen_columns)","54aae1e3":"df","9fbab97e":"#The number of footballers for each position.\ntot_players=[df[\"Position\"].value_counts()]\ntot_players","5dee0d66":"features = ('Acceleration', 'Aggression', 'Agility', 'Balance',\n    'BallControl', 'Composure', 'Crossing', 'Dribbling', 'FKAccuracy',\n    'Finishing', 'GKDiving', 'GKHandling', 'GKKicking', 'GKPositioning',\n    'GKReflexes', 'HeadingAccuracy', 'Interceptions', 'Jumping', \n    'LongPassing', 'LongShots', 'Marking')\n#grouping the players by features and by positions\nfor i, val in df.groupby(df['Position'])[features].mean().iterrows():\n    print('Position {}: {}, {}, {}, {}, {}'.format(i, *tuple(val.nlargest(5).index)))","bae37747":"#histogram for the age\nplt.figure(1,figsize=(15,5))\ndf['Age'].plot(kind='hist',bins=50)\nplt.show()","a4c984d4":"#scatter plot of Age vs Overall\nplt.figure(1,figsize=(10,5))\nsns.regplot(df['Age'],df['Overall'])\nplt.title('Age vs Overall Scatter Plot')\nplt.show()","46b6af21":"#scatter plot of Age vs Potential\nplt.figure(1,figsize=(12,8))\nsns.regplot(df['Age'],df['Potential'])\nplt.title('Age vs Potential Scatter Plot')\nplt.show()","e5e72ab5":"#Choosing specific columns from the data frame to make regression plots\nabilities=['Reactions','ShotPower','Jumping','SprintSpeed',\n'Stamina','Agility','Strength','Vision']\nimport random\nclass fast_plot():\n    def __init__(self):\n        c = ['r' , 'g' , 'b' , 'y' , 'orange' , 'grey' , 'lightcoral' , 'crimson' , \n            'springgreen' , 'teal' , 'c' , 'm' , 'gold' , 'skyblue' , 'darkolivegreen',\n            'tomato']\n        self.color = c\n    #have to make many plots at the same place\n    def regplot_one_vs_many(self , x  , y  , data , rows , cols):\n        color_used = []\n        n = 0\n        for feature in y:\n            for i in range(1000):\n                colour = random.choice(self.color)\n                if colour not in color_used:\n                    color_used.append(colour)\n                    break\n            n+=1 \n            plt.subplot(rows , cols , n)\n            plt.subplots_adjust(hspace = 0.5 , wspace = 0.5)\n            sns.regplot(x  = x , y = feature , data = data ,  color = colour)\nplots=(fast_plot())\n#for making regression plots defined using function\nplt.figure(1,figsize=(12,8))\nplots.regplot_one_vs_many(x='Age',y=abilities,data=df,rows=2,cols=4)\nplt.show()","941fc51b":"#count of players Position Wise\nplt.figure(1,figsize=(15,8))\np = sns.countplot(x = 'Position', data = df,palette='inferno_r')\np.set_title(label='Count of Players', fontsize=15)","d44c02cb":"top15players=df.sort_values(by='Overall',ascending=False).head(15)\nplt.figure(figsize=(25,10))\np=sns.barplot(x='Name',y='Overall',data=top15players)\np = plt.ylim(85,95)\np=plt.xticks(rotation='vertical')","56648295":"#Stamina vs Sprint Speed Plot\ndata.plot(kind = 'scatter' , x='Stamina' , y = 'SprintSpeed' , alpha = .5 , color = 'b')\nplt.xlabel('Stamina')\nplt.ylabel('Sprint Speed')\nplt.title('Stamina-Sprint Speed Scatter Plot')\nplt.show()","c8d6c57f":"plt.figure(1,figsize=(10,5))\nsns.regplot(df['Age'],df['SprintSpeed'])\nplt.title('Age vs Sprint Speed Plot')\nplt.show()","80713869":"p=data.groupby('Overall')['Potential'].mean().plot()\nplt.title('Overall vs Potential')\nplt.ylabel(\"Potential\",rotation=90)\nsns.set(style='darkgrid')","d9ad5fd6":"sns.distplot(df['Overall'])","81ad8556":"sns.set()\ncols=['Acceleration','Balance','BallControl','Crossing','Curve','Stamina','Value']\nsns.pairplot(df[cols],height=2)\nplt.show()","9d037222":"plt.figure(figsize=(5,5))\nsns.countplot(df['Preferred Foot'])","c2708495":"<h3>Potential of Players from top 10 countries<\/h3>","2c234696":"<h3>What is the preferred foot of the players?<\/h3>","3b9153ea":"<h3>Distribution Graph of Overall of Players<\/h3>","22ffa06e":"We are done with the summary. Now lets play with the data. We can find answers to some questions, like\n<h3> Which countries have the highest overall scores?<\/h3>","737137b3":"<h3>How many players are available as per Position?<\/h3>","11fdd706":"<h3> How does the Potential changes w.r.t. Overall?<\/h3>","0b50476d":"<h3>What is the age range of players?<\/h3>","b8bef0bf":"A better visual for the above will be a boxplot. We will make the same.","5a0730e1":"The above graph clearly shows that Right foot is the preferred foot for most of the footballers. ","17950aba":"<h3>What are the top 5 features of a player of a particular position?<\/h3>","203c6759":"<h3>Does the age also affect the potential of the players?<\/h3>","336a3a28":"We can see that the players with more Overall Score have higher potential which suggests that the potential increases with the overall score.","5a9dfb1e":"<h3>What is the total number of players for each position?<\/h3>","33b49352":"<h3>A mega Scatter Plot<\/h3>","81ff5a68":"<h1>FIFA 19 Data Analysis<\/h1>\nFIFA 19 is the latest buzz in the gaming world right now. Being one of the most popular game, EA Sports is back with its highest selling game.\nUsing this data set, I will try to find the top players according to their different abilites. We will try to pick the GOAT among the world's best using visualizations.","64115c59":"Since we need to make visualisations, hence we need to clean the data. Initially, the dataset may contain various NA values(NULL) hence we will check for that and remove them, if any.","05c6449f":"<h3>Affect of Age on Sprint Speed<\/h3>","692525fe":"\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\nI will keep updating the kernal quite often as I learn more about visualizations. Thank You!","d6e9e3e4":"From the above two visuals, we can say that Argentina, Brazil and Spain have the highest overall scores..","32882799":"Spain has the highest potential of players.","68931499":"We can clearly see that the Sprint Speed decreases with increase in speed.","f46466c2":"<h3>Abilities of players w.r.t. age<\/h3>","998debc2":"Although we already know some of the main figures, this mega scatter plot gives us a reasonable idea about variables relationships.","5554f815":"<h3>Does the Stamina affect the Sprint Speed?<\/h3>","5c9610bd":"We have a lot of average players between overall score 60 and 80. Number of Good players and bad players are almost equal.","c7a01b50":"<h2>Exploratory Data Analysis<\/h2>\nSo far till now, we have checked the dataset and have made a clean dataset. Now let's begin with the interesting part of the analysis.","caea4152":"<h3>Does the age affect the performance of the players?<\/h3>","8aaab279":"<h3>Who are the top 15 players?<\/h3>"}}