{"cell_type":{"b41c0bdd":"code","b10fa10c":"code","acf4c367":"code","43bc455f":"code","d6866029":"code","8ff1749e":"code","2168c567":"code","61fbe1a7":"markdown","e8a20fa3":"markdown","fb07eb8f":"markdown","700a2ad6":"markdown","72bf03c1":"markdown","22fd0112":"markdown","9d77d97b":"markdown"},"source":{"b41c0bdd":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\ntrain = pd.read_csv('..\/input\/widsdatathon2021\/TrainingWiDS2021.csv', index_col=0)\ntest = pd.read_csv('..\/input\/widsdatathon2021\/UnlabeledWiDS2021.csv', index_col=0)\n","b10fa10c":"df = train.groupby(['icu_id', 'hospital_id']).encounter_id.count().reset_index()\ndf = df.groupby('icu_id').hospital_id.count()\ndf.value_counts()","acf4c367":"df = test.groupby(['icu_id', 'hospital_id']).encounter_id.count().reset_index()\ndf = df.groupby('icu_id').hospital_id.count()\ndf.value_counts()","43bc455f":"test['diabetes_mellitus'] = -1\ndata = pd.concat([train, test]).reset_index(drop=True)","d6866029":"df = data.groupby(['icu_id', 'hospital_id']).encounter_id.count().reset_index()\ndf = df[['icu_id', 'hospital_id']].groupby('icu_id').agg({'hospital_id':['first', 'last']})\ndf = df.drop_duplicates().reset_index()\ndf.columns =['icu_id', 'hospital_first', 'hospital_last']\ndf","8ff1749e":"hospital_map = {}\nfor first, last in zip(df.hospital_first, df.hospital_last):\n    hospital_map[last] = first\n    hospital_map[first] = first","2168c567":"test['hospital_id'] = test['hospital_id'].map(hospital_map)","61fbe1a7":"We can now map hospital id in test to hospital id in train when the hopsital appears in both.","e8a20fa3":"That's it!  We can now use hospital id as a feature if we want to.\n","fb07eb8f":"Hospital ids are disjoint between training data and test data.  However icu ids are overlapping.  If we assume that icu_id are unique, then it means that some icu are shared between train an dtest data.  Then the hospital in which the icu is should also be shared between train and test data.  Let's see if this is true.\n\nFirst, some imports and data loading.","700a2ad6":"Then we can collect the hospital ids that are associated with a given icu id.  Given we know there are at most two such hospital ids, we can get them using first and last.","72bf03c1":"Let's compute the number of hospital in which icu appear.  We group by icu and hospital so that we have one line per pair icu, hospital, then we group again to count the number of lines per icu.  We then look at the values taken by these counts.","22fd0112":"We see that an icu in training data is associated to exactly one hospital.  Same for testing data.  \n\nIf an icu appears both in train and test, then its associated hospital appears in train an dtest, and we can map the test hospital id to a train hospital id.\n\nFirst we concatenate train and test.","9d77d97b":"For instance, hoospital id 69 in train corresponds to hospital id 10141 in test.  \n\nWe also see hospital that only exist in train, for instance hospital id 118.  Similarly there are hospitals appearing only in test, for instance hospital id 10051.\n\nWe can collect all mapping now."}}