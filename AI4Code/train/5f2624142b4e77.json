{"cell_type":{"08eb832c":"code","6c951597":"code","8af2d9f5":"code","34f6b2ff":"code","62b38ef1":"code","42375ece":"code","e1620b1d":"code","b6565751":"code","6096e5e3":"markdown","29132b37":"markdown","2d39ab3b":"markdown","650e4aa0":"markdown","5911caab":"markdown"},"source":{"08eb832c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","6c951597":"data = pd.read_csv('..\/input\/train.csv')\ndata.head()","8af2d9f5":"from sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier","34f6b2ff":"y = data['label']\nX = data.drop(['label'], axis = 1)","62b38ef1":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 1)\n#cross validating for number of estimators\nNs = [50, 100, 150, 200, 250, 300]; Accuracies = []\nfor n in Ns:\n    clf = RandomForestClassifier(n_estimators = n)\n    clf.fit(X_train, y_train)\n    score = clf.score(X_test, y_test)\n    Accuracies.append(score)\n    print('\\r Accuracy:{}'.format(score), end = \"\")\nMax_score = max(Accuracies)\nBest_N = Ns[Accuracies.index(Max_score)]\nprint( '\\n Best Score:', Max_score, Best_N )","42375ece":"clf = RandomForestClassifier(n_estimators = Best_N)\nclf.fit(X, y)","e1620b1d":"test_data = pd.read_csv('..\/input\/test.csv')\ntest_data.head()","b6565751":"prediction = clf.predict(test_data)\nprint (prediction)\nImageID = range(1, len(prediction)+1)\noutput = {'ImageId': ImageID, 'Label': prediction}\nOutput = pd.DataFrame.from_dict(output)\nOutput.set_index('ImageId', inplace = True)\nprint (Output.head())\nOutput.to_csv('.\/Submission.csv')","6096e5e3":"Making a test set to make sure the model works well and finally we test the model with a few different number of estimators to find the best choice.","29132b37":"Now we use the parameter that gave us the best accuracy to retrain our model.","2d39ab3b":"Reading in the test set and applying the model on it:","650e4aa0":"Let's read in the data and look at its shape:","5911caab":"Useful packages"}}