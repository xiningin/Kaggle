{"cell_type":{"fbe26b7a":"code","a0b5965a":"code","afb9f201":"code","df0fbc0b":"code","11a40474":"code","3a7c4247":"code","47356924":"code","74398102":"code","a32cf986":"code","1b403202":"code","1dc1f10b":"code","d33ece00":"code","c4eee746":"code","76eb4a35":"code","1ec3ae34":"code","190fbf20":"code","167450eb":"code","3addadce":"code","e8577510":"code","252aefe1":"code","a4410357":"code","e24c4de4":"code","193810fd":"markdown","a9369e44":"markdown","2f87c2b9":"markdown","f433d446":"markdown","0d6540f0":"markdown","f57b5500":"markdown","afac75e6":"markdown","6ae45324":"markdown","1280b6db":"markdown","f18b7646":"markdown","a3be6c85":"markdown","92e74ee9":"markdown","25bc6839":"markdown"},"source":{"fbe26b7a":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","a0b5965a":"df_train = pd.read_csv('..\/input\/ventilator-pressure-prediction\/train.csv')\ndf_test = pd.read_csv('..\/input\/ventilator-pressure-prediction\/test.csv')","afb9f201":"df_train['seq'] = df_train.sort_values(['breath_id', 'time_step']).groupby('breath_id')['id'].cumcount()\ndf_test['seq'] = df_test.sort_values(['breath_id', 'time_step']).groupby('breath_id')['id'].cumcount()","df0fbc0b":"print ('Training Set')\nprint (f'Row Count:{df_train.shape[0]}')\nprint (f'Number of Unique IDs: {df_train.id.nunique()}')\nprint (f'Number of Unique Breath IDs: {df_train.breath_id.nunique()}')\n\nprint ('-'*20)\n\nprint ('Test Set')\nprint (f'Row Count:{df_test.shape[0]}')\nprint (f'Number of Unique IDs: {df_test.id.nunique()}')\nprint (f'Number of Unique Breath IDs: {df_test.breath_id.nunique()}')","11a40474":"df_train.head()","3a7c4247":"df_train.describe()","47356924":"df_test.head()","74398102":"df_test.describe()","a32cf986":"fig, ax = plt.subplots()\nax = sns.histplot(data = df_train.groupby('breath_id', as_index = False)['id'].count(), x = 'id', discrete = 1, ax = ax)\nax.set_xlabel('Number of timesteps')\nax.set_ylabel('Number of Breathe IDs')\nax.set_title('Train Set')","1b403202":"fig, ax = plt.subplots()\nax = sns.histplot(data = df_test.groupby('breath_id', as_index = False)['id'].count(), x = 'id', discrete = 1, ax = ax)\nax.set_xlabel('Number of timesteps')\nax.set_ylabel('Number of Breathe IDs')\nax.set_title('Test Set')","1dc1f10b":"fig, ax = plt.subplots(1,2, figsize=(10,5))\nax[0] = sns.histplot(data = df_train, x = 'R', ax=ax[0], color = 'green', stat = 'percent')\nax[1] = sns.histplot(data = df_test, x = 'R', ax=ax[1], color = 'blue', stat = 'percent')\nfig.suptitle('R Distribution')\nfig.tight_layout()","d33ece00":"fig, ax = plt.subplots(1,2, figsize=(10,5))\nax[0] = sns.histplot(data = df_train, x = 'C', ax=ax[0], color = 'green', stat = 'percent')\nax[1] = sns.histplot(data = df_test, x = 'C', ax=ax[1], color = 'blue', stat = 'percent')\nfig.suptitle('C Distribution')\nfig.tight_layout()","c4eee746":"fig, ax = plt.subplots(1,2, figsize=(10,5))\nax[0] = sns.histplot(data = df_train, x = 'u_in', ax=ax[0], color = 'green', stat = 'percent', binwidth = 10)\nax[1] = sns.histplot(data = df_test, x = 'u_in', ax=ax[1], color = 'blue', stat = 'percent', binwidth = 10)\nax[0].set_ylim(0,100)\nax[1].set_ylim(0,100)\nfig.suptitle('u_in Distribution')\nfig.tight_layout()","76eb4a35":"fig, ax = plt.subplots(1,2, figsize=(10,5))\nax[0] = sns.histplot(data = df_train, x = 'u_out', ax=ax[0], color = 'green', stat = 'percent')\nax[1] = sns.histplot(data = df_test, x = 'u_out', ax=ax[1], color = 'blue', stat = 'percent')\nfig.suptitle('u_out Distribution')\nfig.tight_layout()","1ec3ae34":"fig, ax = plt.subplots(1,2, figsize=(10,5))\nax[0] = sns.histplot(data = df_train, x = 'time_step', ax=ax[0], color = 'green', stat = 'percent', binwidth = 0.1)\nax[1] = sns.histplot(data = df_test, x = 'time_step', ax=ax[1], color = 'blue', stat = 'percent', binwidth = 0.1)\nfig.suptitle('time_step Distribution')\nfig.tight_layout()","190fbf20":"fig, ax = plt.subplots(figsize=(8,5))\nax = sns.histplot(data = df_train, x = 'pressure', ax=ax, color = 'green', stat = 'percent', binwidth = 5)\nfig.suptitle('Pressure Distribution')\nfig.tight_layout()","167450eb":"_data = pd.pivot_table(data = df_train, index = 'R', columns = 'C', values = 'pressure', aggfunc = 'mean')\nsns.heatmap(_data, square = True)","3addadce":"fig, ax = plt.subplots()\nax = sns.scatterplot(data = df_train, x = 'u_in', y = 'pressure', ax = ax)","e8577510":"fig, ax = plt.subplots()\nax = sns.boxplot(data = df_train, x = 'u_out', y = 'pressure', ax = ax)","252aefe1":"fig, ax = plt.subplots()\nax = sns.lineplot(data = df_train, x = 'seq', y = 'pressure', ax = ax)","a4410357":"df_mean = df_train.groupby('seq', as_index = False).agg({'pressure':'mean'})\ndf_median = df_train.groupby('seq', as_index = False).agg({'pressure':'median'})","e24c4de4":"df_sub_mean = pd.merge(df_test, df_mean, on = 'seq', how = 'left').loc[:, ['id', 'pressure']]\ndf_sub_median = pd.merge(df_test, df_median, on = 'seq', how = 'left').loc[:, ['id', 'pressure']]\n\ndf_sub_mean.to_csv('submission_mean.csv', index = False)\ndf_sub_median.to_csv('submission_median.csv', index = False)","193810fd":"### u_out Distibution\n> **u_out** - the control input for the exploratory solenoid valve. Either 0 or 1.","a9369e44":"### C Distribution\n\n> **C** - lung attribute indicating **how compliant the lung** is (in mL\/cmH2O). Physically, this is the change in volume per change in pressure. Intuitively, one can imagine the same balloon example. We can change C by changing the thickness of the balloon\u2019s latex","2f87c2b9":"### time_step Distribution\n> **time_step** - the actual time stamp.","f433d446":"## Pressue Distribution\n**This is the target variable**\n> **pressure** - the airway pressure measured in the respiratory circuit, measured in cmH2O.","0d6540f0":"### u_in Distribution\n> **u_in** - the control input for the inspiratory solenoid valve. Ranges from 0 to 100.","f57b5500":"#### u_out vs Pressure","afac75e6":"#### R & C vs Pressure","6ae45324":"## Summary Statistics","1280b6db":"**How many timesteps does each breath_id contain?**  \nAll breath_id has 80 timesteps","f18b7646":"### R Distribution\n> **R** - lung attribute indicating **how restricted the airway** is (in cmH2O\/L\/S). Physically, this is the change in pressure per change in flow (air volume per time). Intuitively, one can imagine blowing up a balloon through a straw. We can change R by changing the diameter of the straw, with higher R being harder to blow.","a3be6c85":"# Dummy Baseline\n\nUsing mean and median values","92e74ee9":"#### u_in vs Pressure","25bc6839":"## Train vs Test Feature Distribution"}}