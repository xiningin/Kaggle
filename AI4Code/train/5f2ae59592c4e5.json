{"cell_type":{"79df9d1f":"code","b1b7527d":"code","5aeefc96":"code","a8f31aba":"code","42a46349":"code","2d4c6552":"code","62edcfa8":"code","58d864eb":"code","347a1627":"code","db053cda":"code","adfb29bd":"code","f607da23":"code","6650bf01":"code","b170190a":"code","2224bfe7":"code","02bc1f93":"code","5b3de361":"code","635f5065":"code","52c93356":"code","e10d406b":"code","9ef429b5":"code","429e05f0":"code","8207f113":"code","f2233e61":"code","3302d54a":"code","44e0a2fc":"code","86db668d":"code","709b0655":"code","637ac263":"code","77920298":"code","31e7d27f":"code","8230e204":"code","1548f3e4":"code","534df703":"code","48e10bca":"code","3e153499":"code","c144c588":"code","1bdc5428":"code","a669607c":"code","4d47d147":"code","d3b1708a":"code","b5eda7c0":"code","9936e3b8":"code","b4ab13ca":"code","37169ce8":"code","e531160c":"code","f9ce6f87":"code","fc36fdb5":"code","84660500":"code","4676bf2d":"code","a9061011":"code","046a67d1":"code","0af3a619":"code","eb34b98c":"code","d7bc6912":"code","35fec5e7":"code","acbbd624":"code","c14ac68c":"code","09700efa":"code","c1151e9f":"code","9ad95363":"code","5f33d145":"code","d74be90e":"code","b348b221":"code","3e21e2b9":"code","e2b04489":"code","1dd8ce35":"code","3f5a3236":"markdown","a722ac7b":"markdown","2dcc2b73":"markdown","f2259f97":"markdown","22ff129b":"markdown","aa59e0db":"markdown","d90dd403":"markdown","4cddccc0":"markdown","3775c915":"markdown","5dbbf9b8":"markdown","1b5b4d0d":"markdown","d3f920de":"markdown","d87097e0":"markdown","2ab98aed":"markdown","b11907a1":"markdown","b9a01f9a":"markdown","e2422317":"markdown","2755e708":"markdown","0200d595":"markdown","8cb291f3":"markdown","774b9971":"markdown","da3f3e8b":"markdown","b3a6b180":"markdown","35f93ee2":"markdown","1ed2f124":"markdown","4b9f43de":"markdown","4720e769":"markdown","603f17e7":"markdown","1d7c9423":"markdown","51e1d178":"markdown","b7f1acfe":"markdown","f2d88bfe":"markdown","01790b06":"markdown","213fb0a6":"markdown","bdcd850d":"markdown","b2e20e5e":"markdown","fdfc63b5":"markdown","dcb2ef3e":"markdown"},"source":{"79df9d1f":"import numpy as np \nimport pandas as pd\nimport plotly.express as px\nimport plotly.offline as pyo\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.simplefilter(\"ignore\")\n\n%matplotlib inline\npyo.init_notebook_mode()","b1b7527d":"df = pd.read_csv('\/kaggle\/input\/120-years-of-olympic-history-athletes-and-results\/athlete_events.csv')\ndf.head(10)","5aeefc96":"region_df = pd.read_csv('\/kaggle\/input\/120-years-of-olympic-history-athletes-and-results\/noc_regions.csv')\nregion_df.head(10)","a8f31aba":"print('Rows in dataframe containing information related to athletes:',df.shape[0])\nprint('Columns in dataframe containing information related to athletes:',df.shape[1])","42a46349":"df.columns","2d4c6552":"df.drop(columns=['ID'],inplace=True)\ndf","62edcfa8":"df = df[df['Season'] == 'Summer']\ndf","58d864eb":"print('Rows after filtering the dataframe containing information related to athletes:',df.shape[0])\nprint('Columns after filtering the dataframe containing information related to athletes:',df.shape[1])","347a1627":"region_df.columns","db053cda":"df = df.merge(region_df,on='NOC',how='left')\ndf","adfb29bd":"print('Countries that participated in olympics are; ',df['region'].unique())","f607da23":"print('Total number of countries that have participated in olympics:',df['region'].nunique())","6650bf01":"df.isna().sum()","b170190a":"df.duplicated().sum()","2224bfe7":"df.drop_duplicates(inplace=True)","02bc1f93":"df.duplicated().sum()","5b3de361":"df['Medal'].unique()","635f5065":"df['Medal'].value_counts()","52c93356":"df = pd.concat([df,pd.get_dummies(df['Medal'])],axis=1)\ndf","e10d406b":"df.groupby('NOC').sum()[['Gold','Silver','Bronze']].sort_values('Gold',ascending=False).reset_index()","9ef429b5":"df[(df['NOC'] == 'IND') & (df['Medal'] == 'Gold')]","429e05f0":"medal_tally = df.drop_duplicates(subset=['Team','NOC','Games','Year','City','Sport','Event','Medal'])\nmedal_tally","8207f113":"medal_tally = medal_tally.groupby('region').sum()[['Gold','Silver','Bronze']].sort_values('Gold',ascending=False).reset_index()\nmedal_tally","f2233e61":"medal_tally['Total'] = medal_tally['Gold'] + medal_tally['Silver'] + medal_tally['Bronze']\nmedal_tally","3302d54a":"years = df['Year'].unique().tolist()\nyears.sort()\nyears","44e0a2fc":"df['Year'].nunique()","86db668d":"country = np.unique(df['region'].dropna().values).tolist()\ncountry.sort()\ncountry","709b0655":"years.insert(0,'Overall')\ncountry.insert(0,'Overall')","637ac263":"medal_df = df.drop_duplicates(subset=['Team','NOC','Games','Year','City','Sport','Event','Medal'])\nmedal_df","77920298":"# Function for fetching the medal tally of any country in any year.\ndef fetch_medal_tally(year,country):\n    \n    flag = 0\n    \n    if year == 'Overall' and country == 'Overall':\n        temp_df = medal_df\n        \n    if year == 'Overall' and country != 'Overall':\n        flag = 1\n        temp_df = medal_df[medal_df['region'] == country]\n        \n    if year != 'Overall' and country == 'Overall':\n        temp_df = medal_df[medal_df['Year'] == int(year)]\n        \n    if year != 'Overall' and country != 'Overall':\n        temp_df = medal_df[(medal_df['Year'] == year) & (medal_df['region'] == country)]\n        \n    if flag == 1:\n        x = temp_df.groupby('Year').sum()[['Gold','Silver','Bronze']].sort_values('Year').reset_index()\n    else:\n        x = temp_df.groupby('region').sum()[['Gold','Silver','Bronze']].sort_values('Gold',ascending=False).reset_index()\n    \n    x['Total'] = x['Gold'] + x['Silver'] + x['Bronze']\n    print(x)","31e7d27f":"print('Analysis of medals won by India in 1900')\nfetch_medal_tally(1900,'India')\n\nprint('\\n')\n\nprint(\"Overall Analysis of the countries\")\nfetch_medal_tally('Overall','Overall')\n\nprint('\\n')\n\nprint(\"Overall Analysis of India in each and every year\")\nfetch_medal_tally('Overall','India')\n\nprint('\\n')\n\nprint('Analysis of all the countries in 1900')\nfetch_medal_tally(1900,'Overall')","8230e204":"df['Year'].nunique()","1548f3e4":"df['Year'].unique()","534df703":"print('Total number of times olympic being held:',df['Year'].nunique() - 1)\nprint('Total number of cities which have participated till now:',df['City'].nunique())\nprint('Total number of different sports played till now:',df['Sport'].nunique())\nprint('Total number of events held in olympics held till now:',df['Event'].nunique())\nprint('Total number of athletes who have participated till now:',df['Name'].nunique())\nprint('Total number of regions who have participated',df['region'].nunique())","48e10bca":"print('Cities which participated in Olympics are:',df['City'].unique())","3e153499":"print('Different Sports played throughout the olympics are:',df['Sport'].unique())","c144c588":"print('Different events which took place at Olympics are:',df['Event'].unique())","1bdc5428":"nations_over_time = df.drop_duplicates(['Year','region'])['Year'].value_counts().reset_index().sort_values('index')","a669607c":"nations_over_time.rename(columns={'index':'Year','Year':'No of countries'},inplace=True)\nnations_over_time","4d47d147":"fig = px.line(nations_over_time,x='Year',y='No of countries')\nfig.update_layout(template='plotly_dark',title='Total number of countries participated over the time')\nfig.show()","d3b1708a":"events_over_time = df.drop_duplicates(['Year', 'Event'])['Year'].value_counts().reset_index().sort_values('index')    ","b5eda7c0":"events_over_time.rename(columns={'index': 'Edition', 'Year': 'Total number of events'}, inplace=True)\nevents_over_time","9936e3b8":"fig = px.line(events_over_time, x='Edition', y='Total number of events', labels={\n     'Total number of events': 'Total number of events held in each year'\n},)\nfig.update_layout(template='plotly_dark',title='Events happened over the time')","b4ab13ca":"athletes_over_time = df.drop_duplicates(['Year', 'Name'])['Year'].value_counts().reset_index().sort_values('index')","37169ce8":"athletes_over_time.rename(columns={'index': 'Year', 'Year': 'Total number of athletes'}, inplace=True)\nathletes_over_time","e531160c":"fig = px.line(athletes_over_time, x='Year', y='Total number of athletes', labels={\n        'Total number of athletes': 'Total number of athletes participated over the years',\n    },)\nfig.update_layout(template='plotly_dark',title='Participation of athletes over the time')","f9ce6f87":"x = df.drop_duplicates(['Year','Sport','Event'])\nplt.figure(figsize=(25,25))\nsns.heatmap(x.pivot_table(index='Sport',columns='Year',values='Event',aggfunc='count').fillna(0).astype('int'),annot=True)","fc36fdb5":"def most_successful(df, sport):\n    temp_df = df.dropna(subset=['Medal'])\n\n    if sport != 'Overall':\n        temp_df = temp_df[temp_df['Sport'] == sport]\n\n    x = temp_df['Name'].value_counts().reset_index().head(15).merge(df, left_on='index', right_on='Name', how='left')[\n        ['index', 'Name_x', 'Sport', 'region']].drop_duplicates('index')\n    x.rename(columns={'index': 'Name', 'Name_x': 'Medals'}, inplace=True)\n    return x","84660500":"#In this code I have found the overall Top-15 successful athletes in the olympics\n\nsport_list = df['Sport'].unique().tolist()\nsport_list.sort()\nsport_list.insert(0, 'Overall')    \nx = most_successful(df,'Overall')\nx = x.reset_index()\nx.drop(columns=['index'], inplace=True)\nx","4676bf2d":"fig = px.bar(x, x='Name', y='Medals', color='region', color_continuous_scale='Bluered_r', labels={\n        \"Name\": \"Name of the athlete\",\n        \"Medals\": \"Total medals won by the athlete\",\n        \"region\": \"Country of the athlete\"\n    },)\nfig.update_layout(template='plotly_dark',title='Top-15 Successfull athletes in the olympics',height=700)","a9061011":"# Top-15 Successful athletes in Gymnastics\ny = most_successful(df,'Gymnastics')\ny = y.reset_index()\ny.drop(columns=['index'],inplace=True)\ny","046a67d1":"fig = px.bar(y, x='Name', y='Medals', color='region', color_continuous_scale='Bluered_r', labels={\n        \"Name\": \"Name of the athlete\",\n        \"Medals\": \"Total medals won by the athlete\",\n        \"region\": \"Country of the athlete\"\n    },)\nfig.update_layout(template='plotly_dark',title='Top-15 Successfull athletes in Gymnastics',height=700)","0af3a619":"temp_df = df.dropna(subset=['Medal'])\n#Removing duplicates for team sports\ntemp_df.drop_duplicates(subset=['Team','NOC','Games','Year','City','Sport','Event','Medal'],inplace=True)\ntemp_df","eb34b98c":"new_df = temp_df[temp_df['region'] == 'USA']\nfinal_df = new_df.groupby('Year').count()['Medal'].reset_index()\nfinal_df","d7bc6912":"fig = px.line(final_df,x='Year',y='Medal',labels={\n    'Medal': 'Total number of medals'\n})\nfig.update_layout(template='plotly_dark',title='Total number of medals won by a particular country(For eg- USA) during each year')\nfig.show()","35fec5e7":"new_df = temp_df[temp_df['region'] == 'USA']\nplt.figure(figsize=(20,20))\nsns.heatmap(new_df.pivot_table(index='Sport',columns='Year',values='Medal',aggfunc='count').fillna(0).astype('int'),annot=True)","acbbd624":"def most_successful_country_athletes(df,country):\n    temp_df = df.dropna(subset=['Medal'])\n    temp_df = temp_df[temp_df['region'] == country]\n    x = temp_df['Name'].value_counts().reset_index().head(15).merge(df,left_on='index',right_on='Name',how='left')[['index','Name_x','Sport']].drop_duplicates('index')\n    x.rename(columns={'index':'Name','Name_x':'Medals'},inplace=True)\n    return x","c14ac68c":"x = most_successful_country_athletes(df,'Jamaica')\nx","09700efa":"fig = px.bar(x, x='Name', y='Medals', color='Sport', color_continuous_scale='Bluered_r', labels={\n        \"Name\": \"Name of the athletes\",\n        \"Medals\": \"Total medals won by the athletes\",\n        \"Sport\": \"Sports played by the athletes\"\n    },)\nfig.update_layout(template='plotly_dark',height=700,title='Topmost athletes of Jamaica')","c1151e9f":"athlete_df = df.drop_duplicates(subset=['Name','region'])\nathlete_df","9ad95363":"x1 = athlete_df['Age'].dropna()\nx2 = athlete_df[athlete_df['Medal'] == 'Gold']['Age'].dropna()\nx3 = athlete_df[athlete_df['Medal'] == 'Silver']['Age'].dropna()\nx4 = athlete_df[athlete_df['Medal'] == 'Bronze']['Age'].dropna()","5f33d145":"fig = ff.create_distplot([x1,x2,x3,x4],['Overall Age','Gold Medalist','Silver Medalist','Bronze Medalist'],show_hist=False,show_rug=False)\nfig.update_layout(template='plotly_dark',title='Distribution of Age')\nfig.show()","d74be90e":"x = []\nname = []\nfamous_sports = ['Basketball', 'Judo', 'Football', 'Tug-Of-War', 'Athletics',\n                     'Swimming', 'Badminton', 'Sailing', 'Gymnastics', 'Art Competitions',\n                     'Handball', 'Weightlifting', 'Wrestling', 'Water Polo', 'Hockey',\n                     'Rowing', 'Fencing', 'Shooting', 'Boxing', 'Taekwondo', 'Cycling',\n                     'Diving', 'Canoeing', 'Tennis', 'Golf', 'Softball', 'Archery', 'Volleyball',\n                     'Synchronized Swimming', 'Table Tennis', 'Baseball', 'Rhythmic Gymnastics',\n                     'Rugby Sevens', 'Beach Volleyball', 'Triathlon', 'Rugby', 'Polo', 'Ice Hockey']\nfor sport in famous_sports:\n    temp_df = athlete_df[athlete_df['Sport'] == sport]\n    x.append(temp_df[temp_df['Medal'] == 'Gold']['Age'].dropna())\n    name.append(sport)\nfig = ff.create_distplot(x, name, show_hist=False, show_rug=False)\nfig.update_layout(title='Distribution of Age wrt Sports(Gold Medalist)',template='plotly_dark')\n    ","b348b221":"athlete_df['Medal'].fillna('No Medal',inplace=True)\nplt.figure(figsize=(16,16))\ntemp_df = athlete_df[athlete_df['Sport'] == 'Athletics']\nsns.scatterplot(athlete_df['Weight'],temp_df['Height'],hue=temp_df['Medal'],style=temp_df['Sex'],s=100)","3e21e2b9":"men = athlete_df[athlete_df['Sex'] == 'M'].groupby('Year').count()['Name'].reset_index()\nwomen = athlete_df[athlete_df['Sex'] == 'F'].groupby('Year').count()['Name'].reset_index()","e2b04489":"final = men.merge(women,on='Year',how='left')\nfinal.rename(columns={'Name_x':'Male','Name_y':'Female'},inplace=True)\nfinal = final.fillna(0)\nfinal","1dd8ce35":"fig = px.line(final,x='Year',y=['Male','Female'])\nfig.update_layout(template='plotly_dark',title='Participation of men and women over the years')\nfig.show()","3f5a3236":"#### Below, I have plotted the heatmap which indicates the number of medals won by the country in the sports which are played at olympics during every year.","a722ac7b":"> Now after checking on this [link](https:\/\/www.statista.com\/statistics\/262864\/all-time-summer-olympics-medals-table\/), I can conclude that there is minute difference in the total medals but our value is very much near to it. The code that I have written above is absolutely perfect and there might be some problems in the data.","2dcc2b73":"#### Checking total number of duplicated values after removing them. As the output of the below block of code is 0 we can easily conclude that all the duplicate values are removed from the dataframe.","f2259f97":"#### Which medals are present and what is the total quantity of each one of them?","22ff129b":"> As we know that **Medals** is a categorical column we can get separate columns of Gold, Silver and Bronze from it. In order to do this we can use get_dummies method of pandas and thereby we can concatenate that output along with our original dataframe.","aa59e0db":"## 1 - Simple operations and analysis on the dataframe","d90dd403":"#### Checking the total number of null values in each and every column","4cddccc0":"### Now we will plot the graph related to how many nations participated during each year when the olympics started.","3775c915":"> In the below code snippet we are calculating the total number of medals won by the countries during each year. Below, I have computed the total medals won by USA during each year in the olympics. You can select any other country and check the values for it.","5dbbf9b8":"#### In how much different years was olympics held?","1b5b4d0d":"#### Heatmap for number of events over the time","d3f920de":"#### Now, we will calculate some of the top statistics","d87097e0":"> Now we will get some basic information from the dataframe containing athletes information.","2ab98aed":"#### How many countries and which coutries participated in olympics?","b11907a1":"#### Now, we will check the most successful athletes of the countries.\n\n> Below I have found the successful athletes of **Jamaica** but the function works for each and every country as the whole function is generalized for each and every country.","b9a01f9a":"> We can remove the ID column from the dataframe as it is absolutely irrelevant feature for the analysis part.","e2422317":"#### Now, we need to compute that which country has won how many medals for each medal category.","2755e708":"#### Participation of men and women over the years","0200d595":"#### Checking the duplicated values in the dataframe","8cb291f3":"### Participation of athletes over each year in olympics","774b9971":"> Below graph indicates Top-15 successful athletes overall (i.e. irrespective of the sports)","da3f3e8b":"> Now we will merge the athletes dataframe with the region dataframes on NOC column.","b3a6b180":"> #### Now we will start EDA on the dataframe. I will do the analysis for the olympics which were held in summer only. Hence, I will filter the data from the dataframe. ","35f93ee2":"#### Removing the duplicate values from the dataframe","1ed2f124":"#### Now we will plot a histogram for distribution of age of athlete with respect to sports and the athletes who are gold medalist in that sport","4b9f43de":"## 2 - Overall Analysis and Calculation of Top Statistics","4720e769":"####  Total number of olympics events are 28 but the above output shows that total number of olympic events are 29. As we know that olympics is being played after every 4 years but there was an exception. After 1904, the olympics was held in 1906 and the olympics of 1906 was not considered.","603f17e7":"> From the above output dataframe, I searched on this [link](https:\/\/en.wikipedia.org\/wiki\/All-time_Olympic_Games_medal_table). Here I found the difference in total number of medals won by countries given on the link and the output that I obtained.  \n\n> Here the difference in values might be due to the following reason. Suppose there is a team game(Hockey) which consists of 11 players and the medal will be received by all the 11 players who are belonging to the same country. Hence we are calculating all the total 11 medals instead of 1 medal for that particular country due to which there are some misleading errors. Hence we can remove those duplicate values.","1d7c9423":"I have created the whole application on this dataset using Streamlit library of Python and deployed it on Heroku.\n\nLink of the application: [EDA on OLympics Dataset](https:\/\/olympics-analysis-till-2016.herokuapp.com\/)\n\nCode of the application: [Github Link](https:\/\/github.com\/Jayshah-JS1312\/EDA-on-Olympics-Dataset-using-Plotly-Seaborn)","51e1d178":"#### First we will calculate the distribution of the age of the athletes and will plot a histogram for the same.","b7f1acfe":"## 4 - Athlete Wise Analysis","f2d88bfe":"#### Height vs Weight of the athletes ","01790b06":"#### Top-15 Successful Athletes Game Wise","213fb0a6":"#### Here, the graph will be plotted regarding the total number of events which took over during each year of olympics","bdcd850d":"## Name: Jay Shah\n## Date: 23-09-2021\n### Exploratory Data Analysis on Olympics Dataset using Plotly","b2e20e5e":"## 3 - Country Wise Analysis","fdfc63b5":"> In the above heatmap I have plotted the data for USA and it is clearly visible that USA excels in Swimming and Athletics events.","dcb2ef3e":"#### How many different countries have participated in the olympics till now?"}}