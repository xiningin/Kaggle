{"cell_type":{"af6b5a4c":"code","9d99c85d":"code","cfae0866":"code","4344146e":"code","9f6336fa":"code","adc73cc7":"code","d4294f1e":"code","abec95ab":"code","ecaf09d6":"code","a97e032e":"code","2bfc1d3f":"code","248dd750":"code","7b53533b":"code","0c2848fa":"code","6bb4ef1c":"code","4787f077":"code","1e959330":"code","a313e66d":"code","4fe33c31":"markdown","6848129b":"markdown","ac879a48":"markdown","af32182e":"markdown","0f87df6d":"markdown","f6e98484":"markdown","21f63f14":"markdown"},"source":{"af6b5a4c":"import numpy as np\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib.dates as mdates\nimport plotly.express as px\nimport folium, json, math, requests, plotly, warnings\nfrom branca.colormap import linear\nfrom bs4 import BeautifulSoup","9d99c85d":"print('Last update on', pd.to_datetime('now'))","cfae0866":"warnings.filterwarnings('ignore')","4344146e":"states = pd.read_csv('..\/input\/brazilianstates\/states.csv')\nstates.columns = map(str.lower, states.columns)\nstates.head()","9f6336fa":"corona = pd.read_csv('\/kaggle\/input\/corona-virus-brazil\/brazil_covid19.csv').drop('region', axis=1)\ncorona = corona.merge(states, on='state', how='left')\ncorona['potentials'] = corona['population'] * 0.8\ncorona['potentials'] = corona['potentials'].astype(int)\ncorona['date'] = pd.to_datetime(corona['date'])\ncorona = corona[(corona['cases'] > 0)]\ncorona.head()","adc73cc7":"corona.dtypes","d4294f1e":"group_uf = corona.groupby('state')\nuf = group_uf.tail(1).sort_values('cases', ascending=False).drop(columns=['date']).set_index('state')\nuf.style.background_gradient(cmap='Reds', subset=['suspects','refuses','cases','deaths'])","abec95ab":"d = {'cases' : uf['cases'].sum(), 'deaths': uf['deaths'].sum()}\ntotal = pd.DataFrame(d.items(), columns=['type', 'total_count']).set_index('type')\ntotal","ecaf09d6":"fig, ax = plt.subplots(figsize=(12, 8))\nplt.bar(x=total.index, height=total['total_count'], color=['limegreen','red'])\n\n[ax.annotate('%s' % y, xy=(x-0.03,y+500), fontsize=14, fontweight='bold') for x,y in zip(range(0,2), total['total_count'])]\n[ax.spines[side].set_visible(False) for side in ['left','right','top']]\nplt.grid(which='major', axis='y')\nplt.xlabel(None)\nplt.ylabel('Cases count')\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=12)\nplt.title('COVID-19: number of cases in Brazil', fontsize=16, fontweight='bold', color='#333333')\nplt.show();","a97e032e":"cumulated = corona.groupby('date').sum().reset_index()\ncumulated = cumulated[(cumulated['cases'] >= 100)]\ncumulated['new_cases'] = cumulated['cases'].diff().fillna(0).astype(int)\ncumulated['growth_cases'] = cumulated['cases'].diff().fillna(0).astype(int)\/cumulated['cases']\ncumulated['new_deaths'] = cumulated['deaths'].diff().fillna(0).astype(int)\ncumulated['growth_deaths'] = cumulated['deaths'].diff().fillna(0).astype(int)\/cumulated['deaths']\ncumulated.head()","2bfc1d3f":"fig, ax = plt.subplots(figsize=(14, 10))\nplt.plot(cumulated['date'], cumulated['cases'], color='limegreen', linewidth=8, alpha=0.5, marker='o')\nplt.plot(cumulated['date'], cumulated['deaths'], color='red', linewidth=4, alpha=0.9, marker='o')\nplt.bar(cumulated['date'], cumulated['new_cases'])\n[ax.annotate('%s' % y, xy=(x,y+100), fontsize=10) for x,y in zip(cumulated['date'], cumulated['cases'])]\n\nplt.xticks(rotation=90, ha='right')\nplt.title('COVID-19: number of cases in Brazil', fontsize=18, fontweight='bold', color='#333333')\n\nplt.ylabel('Number of cases', fontsize=12)\nplt.xlabel(None)\n\nplt.axvline('2020-03-16', 0, 1200, c='#CCCCCC', linestyle='--', linewidth=2, alpha=1)\nax.annotate('Companies start home-office', xy=('2020-03-16',19000), fontsize=12, rotation=90)\nplt.axvline('2020-03-21', 0, 1200, c='#CCCCCC', linestyle='dotted', linewidth=2, alpha=1)\nax.annotate('SP government declares quarantine', xy=('2020-03-21',19000), fontsize=12, rotation=90)\n\nplt.legend(loc=2, labels=['cases','deaths'], fontsize=14)\n\nplt.grid(which='major', axis='y')\n[ax.spines[side].set_visible(False) for side in ['left','right','top']]\nax.xaxis.set_major_formatter(mdates.DateFormatter('%d\/%m'))\nplt.show();","248dd750":"fig, ax = plt.subplots(figsize=(14, 10))\n\nthreshold = 1\n\nlabels = []\nfor s in uf.index[:7]:\n    plt.plot(corona['date'][(corona['state'] == s)], corona['cases'][(corona['state'] == s)], linewidth=4, alpha=0.9)\n    labels.append(s)\n    \nplt.xticks(rotation=90, ha='right')\nplt.title('COVID-19: number of cases per state in Brazil', fontsize=18, fontweight='bold', color='#333333')\n\nplt.ylabel('Number of cases', fontsize=12)\nplt.xlabel(None)\n\nplt.legend(loc=6, fontsize=14, labels=labels)\n\nplt.grid(which='major', axis='y', color='#EEEEEE')\n[ax.spines[side].set_visible(False) for side in ['left','right','top']]\nax.xaxis.set_major_formatter(mdates.DateFormatter('%d\/%m'))\nplt.show();","7b53533b":"plt.subplots(figsize=(40, 60))\nfor s, i in zip(uf.index, range(1,len(uf))):\n    ax = plt.subplot(9,3,i)\n    plt.subplots_adjust(bottom=-0.1)\n    plt.xticks(rotation=90, ha='right', fontsize=16)\n    plt.yticks(fontsize=16)\n    \n    c = corona[(corona['state'] == s)]\n    plt.plot(c['date'], c['cases'], linewidth=8, color='limegreen', alpha=0.5, marker='o')\n    plt.plot(c['date'], c['deaths'], linewidth=8, color='red', alpha=0.7, marker='o')\n\n    ax.text(0.05,0.9,s, transform=ax.transAxes, fontsize=24, fontweight='bold')\n    plt.ylabel(None)\n    plt.xlabel(None)\n    plt.legend(labels=['cases','deaths'], loc='center left', fontsize=16)\n    plt.grid(which='major', axis='y')\n    [ax.spines[side].set_visible(False) for side in ['left','right','top']]\n    ax.xaxis.set_major_formatter(mdates.DateFormatter('%d\/%m'))\n    \nplt.show();","0c2848fa":"fig, ax = plt.subplots(figsize=(12, 8))\nplt.bar(uf['uf'], uf['cases'], color='limegreen')\n\n[ax.annotate('%s' % y, xy=(x-0.5,y+100), fontsize=10, fontweight='bold') for x,y in zip(range(0,27), uf['cases'])]\n[ax.spines[side].set_visible(False) for side in ['left','right','top']]\nplt.grid(which='major', axis='y')\nplt.ylim(0,6000)\nplt.xlabel(None)\nplt.ylabel('Cases count')\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=12)\nplt.title('COVID-19: number of cases per state in Brazil', fontsize=16, fontweight='bold', color='#333333')\nplt.show();","6bb4ef1c":"url = '\/kaggle\/input\/brazil-geojson\/brazil_geo.json'\ngeo = json.load(open(url))","4787f077":"df = uf.reset_index().set_index('uf')\ndf.head()","1e959330":"fig, ax = plt.subplots(figsize=(12,10))\ns = sns.scatterplot(data=df, x='deaths', y='cases', hue='region', s=300, alpha=0.5)\nplt.legend(loc=5,markerscale=1.5, frameon=False, fontsize=12)\n[ax.spines[side].set_visible(False) for side in ['left','right','top']]\nplt.grid(which='major', axis='both', color='#EEEEEE')\nplt.ylim(0,7000)\nplt.xlabel('Deaths', fontsize=12)\nplt.ylabel('Cases', fontsize=12)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\n\nd = df.reset_index().loc[:4,:]\nfor i in range(0,len(d)):\n    plt.annotate(d.iloc[i]['uf'], xy=(d.iloc[i]['deaths']-3.5, d.iloc[i]['cases']+125))\n\nplt.title('COVID-19: number of cases and deaths per state in Brazil', fontsize=16, fontweight='bold', color='#333333')\n    \nplt.show();","a313e66d":"colormap = linear.YlOrRd_09.scale(0,5000)\n\nmap = folium.Map(\n    width=800, height=600,\n    location=[-15.77972, -47.92972], \n    zoom_start=4\n)\nfolium.GeoJson(\n    geo,\n    name='cases',\n    style_function=lambda feature: {\n        'fillColor': colormap(df['cases'][feature['id']]),\n        'color': 'black',\n        'weight': 0.4,\n    }\n).add_to(map)\ncolormap.caption = 'Confirmed COVID-19 cases per state'\ncolormap.add_to(map)\n\nmap","4fe33c31":"# Coronavirus in Brazil\n\nThe current notebook proposes a visual analysis of the present Coronavirus pandemic in Brazil, comparing different states' situations over time. The [COVID-19 dataset](https:\/\/www.kaggle.com\/unanimad\/corona-virus-brazil) was provided by [Raphael Fontes](https:\/\/www.kaggle.com\/unanimad), gathered from Brazilian's Health Ministry.\n\n---\n\n# Table of contents\n\n1. [Acknowledgment](#acknowledgment)\n1. [Motivation](#motivation)\n1. [COVID-19 in Brazil](#brazil)\n1. [Methodology and results](#methodology)\n1. [Conclusion](#conclusion)\n1. [Disclaimer](#disclaimer)\n\n---\n\n<div id=\"acknowledgment\"><\/div>\n# Acknowledgment\n* The [COVID-19 cases dataset](https:\/\/www.kaggle.com\/unanimad\/corona-virus-brazil) used on this notebook was kindly built and provided by Raphael Fontes, using oficial data published daily by the Brazilian Health Ministry.\n\n<div id=\"brazil\"><\/div>\n# COVID-19 in Brazil\nRecently, Brazil passed 10K cases on April 4th and 500 deaths on April 6th. Currently, the Brazilian pandemic has multiple foci, mainly in S\u00e3o Paulo, Rio de Janeiro, and Cear\u00e1, doubling the number of cases every 4 days. Brazilian Public Healthcare Services is testing just a small group of people, especially the most severe cases, due to the lack of viral tests. This leads to a high number of undetected cases and, probably, a high increase in the number of confirmed cases in the next days.\n\n> Due to the crescent number of confirmed cases, on March 20th the Brazilian Health Ministry stopped counting the number of suspected cases of some states.\n\n<div id=\"methodology\"><\/div>\n# Methodology and results\n\n## Data Processing\nFirst, I downloaded the Brazilian states dataset, containing data related to states names, abbreviations, population size and geographic coordinates.","6848129b":"## Total number of cases by state\nNext, I created a new dataframe named group_uf, containing the number of cases grouped by state, then plotted them on a heatmap for easy data visualization. A new plot with the total number of cases was also created.","ac879a48":"Next, a new barplot was created to help visualize the data.","af32182e":"## Number of cases over time per states\nThe following chart shows the infection progression over time per state, comparing:\n* The number of confirmed cases per day\n* The number of suspect cases per day","0f87df6d":"Afterward, I downloaded the Brazilian COVID-19 dataset, containing the number of cases by state, then I added a new column to the dataset, named potentials. This column contains the share of the population who will probably be infected by the COVID-19, based on the average infection rate of 80% over the total population, as stated by the [World Health Organization](https:\/\/www.who.int\/docs\/default-source\/coronaviruse\/situation-reports\/20200306-sitrep-46-covid-19.pdf?sfvrsn=96b04adf_2).","f6e98484":"## Number of confirmed cases over time per state\nFor a better visualization of the infection growth rate, a new dataframe `cumulated` was created. This dataframe groups the number of cases by state over time. New columns were added: the number of new cases and deaths by day and the growth rate of new cases and deaths. Then a plot was create showing the COVID-19 evolution in Brazil.","21f63f14":"<div id='conclusion'><\/div>\n# Conclusion\nDespite the high rate of subnotifications and unnotices cases, and considering the recent social distancing and quarantine efforts, Brazil will face something between 50 and 140 million infected people during the next 60 days. According to the World Health Organization, 80% of the infected people manifest mild symptoms or no sign of infection. It's evident the importance of social distancing and quarantine efforts to minimize the infection spread rate and avoid the healthcare infrastructure collapse.\n\n## Disclaimer\nDue to the complex nature of a pandemic, this work does not intend to be an accurate projection or a model that tries to reproduce the complexity of reality. The main goal of this project is to propose a reflection of the importance of social distancing, quarantine and other infection prevention actions, to minimize the pandemic effects and try to flat the infection curve.\n\n## Thank you and stay home! :)"}}