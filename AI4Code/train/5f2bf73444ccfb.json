{"cell_type":{"45d2dd40":"code","e3fad758":"code","9a187d42":"code","403442ee":"code","ebf707cb":"code","f2fe5143":"code","c15a04cf":"code","0648d569":"code","3c25dfb7":"code","55922186":"code","f1586f60":"code","bab5ff45":"code","48fe4b37":"code","0bfafc7e":"code","d13d0651":"code","ea2b0bf7":"code","9f9172be":"code","1e6b045d":"code","d518320b":"code","ff3580b1":"code","38e3fbc3":"code","f05a6a70":"code","cc84527c":"code","52743061":"code","b88b3fb5":"code","c35dd556":"code","b7079018":"code","4ac14dd4":"code","5ecfe207":"code","2fa3617f":"code","980c5df3":"code","0828e61b":"code","011f72d1":"code","d4ffabb9":"code","c6b42931":"code","75af0fba":"code","ebf56a2e":"code","5339a292":"code","04c0f2ca":"code","eb63e3b5":"code","2ef8df8a":"code","f7ca5c43":"code","f32f4b16":"code","56a11d69":"markdown","26fe098c":"markdown","3bb484a2":"markdown","9b80bc27":"markdown","1889a25c":"markdown","6ad99a63":"markdown","9fd4e66a":"markdown","511c17bc":"markdown","af0b227a":"markdown","be1e7296":"markdown","f5fe58fb":"markdown","82a33988":"markdown","d022bbf5":"markdown","ef3d6a29":"markdown","c01fc13c":"markdown","5e572d09":"markdown","3b55f408":"markdown"},"source":{"45d2dd40":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport random\nfrom tensorflow.keras.preprocessing import image\nfrom tensorflow.keras.models import load_model\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D, AveragePooling2D, MaxPool2D, Flatten, Dense, Dropout\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator","e3fad758":"train_datagen = ImageDataGenerator(\n        rescale=1.\/255,\n        shear_range=0.2,\n        zoom_range=0.2,\n        horizontal_flip=True)\ntraining_set = train_datagen.flow_from_directory(\n        '..\/input\/asphalt-cracks\/crack_detect_dataset\/train',\n        target_size=(64, 64),\n        batch_size=32,\n        class_mode='binary')","9a187d42":"test_datagen = ImageDataGenerator(rescale=1.\/255)\ntest_set = test_datagen.flow_from_directory(\n        '..\/input\/asphalt-cracks\/crack_detect_dataset\/test',\n        target_size=(64, 64),\n        batch_size=32,\n        class_mode='binary')","403442ee":"training_set[2]","ebf707cb":"cnn = Sequential() #Choosing sequential model.","f2fe5143":"cnn.add(Conv2D(filters=32, kernel_size=3, activation=\"relu\",input_shape=[64,64,3])) #Adding convolution layer","c15a04cf":"cnn.add(MaxPool2D(pool_size=2, strides=2))","0648d569":"cnn.add(Conv2D(filters= 32, kernel_size=3, activation= \"relu\"))","3c25dfb7":"cnn.add(MaxPool2D(pool_size=2, strides=2))","55922186":"cnn.add(Flatten())","f1586f60":"cnn.add(Dense(units=128,activation=\"relu\"))","bab5ff45":"#cnn.add(Dense(units=32,activation=\"relu\"))","48fe4b37":"cnn.add(Dense(units=1,activation=\"sigmoid\"))","0bfafc7e":"cnn.compile(optimizer=\"adam\",loss=\"binary_crossentropy\",metrics=[\"accuracy\"])","d13d0651":"cnn.summary() #This is the summary of our model ","ea2b0bf7":"history= cnn.fit(x=training_set,validation_data=test_set,epochs=7)","9f9172be":"pd.DataFrame(cnn.history.history)","1e6b045d":"import seaborn as sns\nsns.set_style(\"darkgrid\")\nplt.figure(figsize=(12,10))\npd.DataFrame(cnn.history.history).plot()","d518320b":"from tensorflow.keras.preprocessing import image","ff3580b1":"def predictor(location):\n    test_image=image.load_img(location,target_size=(64,64))\n    test_image=image.img_to_array(test_image)\n    test_image=np.expand_dims(test_image, axis=0)\n    result=cnn.predict(test_image)\n    training_set.class_indices\n    if result[0][0] == 1:\n        \n        prediction = \"There is no crack\"\n    else:\n        prediction = \"There is a crack\"\n    print(result[0][0])\n    return prediction","38e3fbc3":"plt.imshow(plt.imread(\"..\/input\/asphalt-cracks\/crack_detect_dataset\/test\/non-cracked\/G0016163.JPG\"))","f05a6a70":"location= \"..\/input\/asphalt-cracks\/crack_detect_dataset\/test\/non-cracked\/G0016163.JPG\"\npredictor(location)","cc84527c":"plt.imshow(plt.imread(\"..\/input\/asphalt-cracks\/crack_detect_dataset\/test\/non-cracked\/G0015965.JPG\"))","52743061":"location= \"..\/input\/asphalt-cracks\/crack_detect_dataset\/test\/non-cracked\/G0015965.JPG\"\npredictor(location)","b88b3fb5":"location= \"..\/input\/asphalt-cracks\/crack_detect_dataset\/test\/cracked\/G0011476.JPG\"\nplt.imshow(plt.imread(location))","c35dd556":"predictor(location)","b7079018":"#Lets test another image:\nlocation= \"..\/input\/asphalt-cracks\/crack_detect_dataset\/test\/cracked\/G0011523.JPG\"\nplt.imshow(plt.imread(location))","4ac14dd4":"predictor(location) ","5ecfe207":"#Lets test another image:\nlocation= \"..\/input\/asphalt-cracks\/crack_detect_dataset\/test\/cracked\/G0011601.JPG\"\nplt.imshow(plt.imread(location))","2fa3617f":"predictor(location)","980c5df3":"#Lets test another image:\nlocation= \"..\/input\/asphalt-cracks\/crack_detect_dataset\/test\/cracked\/G0011603.JPG\"\nplt.imshow(plt.imread(location))","0828e61b":"predictor(location)","011f72d1":"# save model and architecture to single file\ncnn.save(\"model2.h5\")\nprint(\"Saved model to disk\")","d4ffabb9":"from tensorflow.keras.models import load_model\nmodel = load_model('model2.h5')\n# summarize model.\nmodel.summary()\n# load dataset","c6b42931":"def predictor2(location):\n    test_image=image.load_img(location,target_size=(64,64))\n    test_image=image.img_to_array(test_image)\n    test_image=np.expand_dims(test_image, axis=0)\n    result=model.predict(test_image)\n    #training_set.class_indices\n    if result[0][0] == 1:\n        \n        prediction = \"There is no crack\"\n    else:\n        prediction = \"There is a crack\"\n    return prediction","75af0fba":"#Lets test of the reloaded model with non-crack images:\nlocation= \"..\/input\/asphalt-cracks\/crack_detect_dataset\/test\/non-cracked\/G0016297.JPG\"\nplt.imshow(plt.imread(location))\nplt.text(1, 1,predictor2(location))","ebf56a2e":"import PIL\nfig, axs = plt.subplots(2, 5, figsize=(20, 10))\nlst = [\"..\/input\/asphalt-cracks\/crack_detect_dataset\/test\/non-cracked\/G0016312.JPG\",\n      \"..\/input\/asphalt-cracks\/crack_detect_dataset\/test\/non-cracked\/G0016342.JPG\",\n      \"..\/input\/asphalt-cracks\/crack_detect_dataset\/test\/non-cracked\/G0016324.JPG\",\n      \"..\/input\/asphalt-cracks\/crack_detect_dataset\/test\/non-cracked\/G0016325.JPG\",\n      \"..\/input\/asphalt-cracks\/crack_detect_dataset\/test\/non-cracked\/G0016338.JPG\",\n       \"..\/input\/asphalt-cracks\/crack_detect_dataset\/test\/cracked\/G0011881.JPG\",\n      \"..\/input\/asphalt-cracks\/crack_detect_dataset\/test\/cracked\/G0011968.JPG\",\n      \"..\/input\/asphalt-cracks\/crack_detect_dataset\/test\/cracked\/G0011878.JPG\",\n      \"..\/input\/asphalt-cracks\/crack_detect_dataset\/test\/cracked\/G0011969.JPG\",\n      \"..\/input\/asphalt-cracks\/crack_detect_dataset\/test\/cracked\/G0011982.JPG\"]\n\naxs[0][0].title.set_text(predictor2(lst[0]))\naxs[0][0].imshow(PIL.Image.open(lst[0]))\naxs[0][1].title.set_text(predictor2(lst[1]))\naxs[0][1].imshow(PIL.Image.open(lst[1])) \naxs[0][2].title.set_text(predictor2(lst[2]))\naxs[0][2].imshow(PIL.Image.open(lst[2]))  \naxs[0][3].title.set_text(predictor2(lst[3]))\naxs[0][3].imshow(PIL.Image.open(lst[3]))  \naxs[0][4].title.set_text(predictor2(lst[4]))\naxs[0][4].imshow(PIL.Image.open(lst[4]))    \naxs[1][0].title.set_text(predictor2(lst[5]))\naxs[1][0].imshow(PIL.Image.open(lst[5]))   \naxs[1][1].title.set_text(predictor2(lst[6]))\naxs[1][1].imshow(PIL.Image.open(lst[6]))  \naxs[1][2].title.set_text(predictor2(lst[7]))\naxs[1][2].imshow(PIL.Image.open(lst[7])) \naxs[1][3].title.set_text(predictor2(lst[8]))\naxs[1][3].imshow(PIL.Image.open(lst[8]))  \naxs[1][4].title.set_text(predictor2(lst[9]))\naxs[1][4].imshow(PIL.Image.open(lst[9]))\n\nfig.tight_layout()","5339a292":"#Lets test another non-crack image:\nlocation= \"..\/input\/asphalt-cracks\/crack_detect_dataset\/test\/non-cracked\/G0016346.JPG\"\nplt.imshow(plt.imread(location))","04c0f2ca":"predictor2(location)  # even though there are shadows and building along the way, the model predict correctly","eb63e3b5":"#Lets test the reloaded model with the crack images from test data\nlocation= \"..\/input\/asphalt-cracks\/crack_detect_dataset\/test\/cracked\/G0011989.JPG\"\nplt.imshow(plt.imread(location))\n","2ef8df8a":"predictor2(location) #the image is taken from side, nonetheless model predicts correctly","f7ca5c43":"location= \"..\/input\/asphalt-cracks\/crack_detect_dataset\/test\/cracked\/G0027032.JPG\"\nplt.imshow(plt.imread(location))\n","f32f4b16":"predictor2(location) \n#Even though there are a lot of distraction like big building, cars, traffic signs, the model predict correctly","56a11d69":"<font color=red>\nStep 8: Compiling the CNN","26fe098c":"# PART III: EVALUATION OF THE MODEL and MAKING PREDICTIIONS","3bb484a2":"<font color=red>\nStep 2: Adding The First Convolution Layer","9b80bc27":"<font color=red>\nStep 6: Adding Flatten Layer:","1889a25c":"<font color=red>\nStep 5: Adding the Second Pooling Layer","6ad99a63":"# PART II: BUILDING CONVOLUTIONAL NEURAL NETWORKS:","9fd4e66a":"Similar to the Convolutional Layer, the Pooling layer is responsible for reducing the spatial size of the Convolved Feature. It is used to decrease the computational power required to process the data through dimensionality reduction. Furthermore, it is useful for extracting dominant features","511c17bc":"<font color=red>\nTesting of Model Performance with Non-crack Images from Test Data:","af0b227a":"# PART IV: SAVING THE MODEL ","be1e7296":"<font color=red>\nStep 1: Choosing Model Type","f5fe58fb":"<font color=red>\nStep 3: Adding Pooling Layer:","82a33988":"<font color=red>\nStep 7: Adding Artificial Neural Networks Layer for Full Connection","d022bbf5":"# PART I: DATA PREPROCESSING:","ef3d6a29":"<font color=red>\nStep 8: Training the CNN","c01fc13c":"<font color=red>\nTesting of Model Performance with crack Images from Test Data:","5e572d09":"<font color=red>\nStep 4: Adding The Second Convolution Layer","3b55f408":"# Reload Saved Model and Make a Prediction:"}}