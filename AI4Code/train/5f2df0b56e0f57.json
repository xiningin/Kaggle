{"cell_type":{"0694793b":"code","97f1ed7a":"code","8ddf43a5":"code","04f02476":"code","81616cd5":"code","772e93ad":"code","e840dffc":"code","ff64a486":"code","ccfeb4b7":"code","9b441c07":"code","5a5fa7c6":"code","ede3a437":"code","16a2a615":"code","981cc100":"code","59c01bc6":"code","e9c91833":"code","916e2f31":"code","0764210b":"code","4c0cdcf3":"code","65d1646f":"code","ea68f423":"code","bef87015":"code","f5d37221":"code","671073db":"code","ca62ede8":"code","fb4b07cc":"code","f7ecf9dd":"code","3323b712":"code","bf4ffc4c":"code","306102c0":"code","e5657282":"code","c209be0c":"code","288faa14":"code","107e193a":"markdown","b6a4e614":"markdown","1438cb68":"markdown","da2904f3":"markdown","f7d03659":"markdown"},"source":{"0694793b":"import numpy as np\nimport pandas as pd \nimport seaborn as sns \nimport matplotlib.pyplot as plt","97f1ed7a":"iris = pd.read_csv('..\/input\/iris-flower-dataset\/IRIS.csv')\niris.head(6)\n","8ddf43a5":"iris.info()","04f02476":"iris.describe()","81616cd5":"iris.columns","772e93ad":"iris.shape","e840dffc":"iris.isnull().sum()","ff64a486":"iris.columns","ccfeb4b7":"iris.species.value_counts()","9b441c07":"sns.countplot(x='species',data=iris)","5a5fa7c6":"iris['species'].value_counts().plot.pie(explode=[0.1,0.1,0.1],autopct='%1.1f%%',shadow=True, figsize=(10,8))\nplt.show()","ede3a437":"iris.hist(edgecolor='black',figsize=(10,10))\nplt.show()","16a2a615":"sns.pairplot(iris , hue='species');","981cc100":"iris.species.value_counts()","59c01bc6":"iris.species.value_counts()","e9c91833":"species = {\n    \"Species\" : {\"Iris-setosa\":0,\"Iris-versicolor\":1,\"Iris-virginica\":2}\n}\niris.replace(species,inplace=True)\niris","916e2f31":"iris.species.value_counts()","0764210b":"iris.corr()","4c0cdcf3":"iris.corr().style.background_gradient(cmap='coolwarm').set_precision(2)","65d1646f":"# SPLIT DATA\niris","ea68f423":"from sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nfrom sklearn.metrics import accuracy_score","bef87015":"x = iris.drop('species', axis=1)\ny= iris.species\nprint(x.shape)\nprint(y.shape)","f5d37221":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.4, random_state=5)\nprint(x_train.shape)\nprint(y_train.shape)\nprint(x_test.shape)\nprint(y_test.shape)\n","671073db":"# Train and test on the same dataset","ca62ede8":"from sklearn.neighbors import KNeighborsClassifier","fb4b07cc":"knn = KNeighborsClassifier(n_neighbors=5, p=2, metric='minkowski')\nknn.fit(x_train, y_train)\n\nprint('The accuracy of the knn classifier is {:.2f} out of 1 on training data'.format(knn.score(x_train, y_train)))\nprint('The accuracy of the knn classifier is {:.2f} out of 1 on test data'.format(knn.score(x_test, y_test)))","f7ecf9dd":"k_range = list(range(1,26))\nscores = []\nfor k in k_range:\n    knn = KNeighborsClassifier(n_neighbors=k)\n    knn.fit(x, y)\n    y_pred = knn.predict(x)\n    scores.append(metrics.accuracy_score(y, y_pred))\n    \nplt.plot(k_range, scores)\nplt.xlabel('Value of k for KNN')\nplt.ylabel('Accuracy Score')\nplt.title('Accuracy Scores for Values of k of k-Nearest-Neighbors')\nplt.show()","3323b712":"from sklearn.linear_model import LogisticRegression","bf4ffc4c":"logreg = LogisticRegression()\nlogreg.fit(x, y)\ny_pred = logreg.predict(x)\nprint(metrics.accuracy_score(y, y_pred))","306102c0":"from sklearn.svm import SVC","e5657282":"svm = SVC(kernel='rbf', random_state=0, gamma=.10, C=1.0)\nsvm.fit(x_train, y_train)\n\nprint('The accuracy of the svm classifier on training data is {:.2f} out of 1'.format(svm.score(x_train, y_train)))\n\nprint('The accuracy of the svm classifier on test data is {:.2f} out of 1'.format(svm.score(x_test, y_test)))","c209be0c":"import xgboost as xgb","288faa14":"xgb_clf = xgb.XGBClassifier()\nxgb_clf = xgb_clf.fit(x_train, y_train)\n\nprint('The accuracy of the xgb classifier is {:.2f} out of 1 on training data'.format(xgb_clf.score(x_train, y_train)))\nprint('The accuracy of the xgb classifier is {:.2f} out of 1 on test data'.format(xgb_clf.score(x_test, y_test)))","107e193a":"# XGBoost classifier","b6a4e614":"# svm support vector machine :","1438cb68":"# logistic regression","da2904f3":"# knn","f7d03659":"\"Iris-setosa\":0,\n\"Iris-versicolor\":1,\n\"Iris-virginica\":2"}}