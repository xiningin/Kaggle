{"cell_type":{"7588adc7":"code","eaca6fe3":"code","c68b1504":"code","2e703411":"code","7a034c72":"code","6cbbf835":"code","22d9a1a2":"code","8ca7282b":"code","5ece62c0":"code","198b3fad":"code","2397c97a":"code","e388ceeb":"code","eda46b58":"code","3acad82e":"code","38d322ae":"code","1f7d12d6":"code","1d023f22":"code","73f096af":"code","f4779fb9":"code","943e8040":"code","1b39652d":"code","e6a75294":"code","ee27b914":"code","b3d93aaf":"code","cbaec4dc":"code","16e22ccb":"markdown","2545e06e":"markdown","ac6cad94":"markdown","626d03e7":"markdown","1944bcb1":"markdown","3b7b57d6":"markdown","17406254":"markdown","abfa651d":"markdown","dd67c060":"markdown","f256f051":"markdown","70391e17":"markdown","523165f0":"markdown","090607a7":"markdown","bcc81414":"markdown","bb24f8c4":"markdown","e44e70a0":"markdown","b34ce67b":"markdown","2481551c":"markdown","f7672607":"markdown","41dcd916":"markdown","15ff4f3d":"markdown","9dfb1cc4":"markdown","ccd11fea":"markdown","d8ca6c87":"markdown","1d34b169":"markdown","beb6efc5":"markdown","9576c558":"markdown","1bb531c2":"markdown","9a317d33":"markdown","8254d5fa":"markdown"},"source":{"7588adc7":"#Import Packages\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as mlib\nprint('Setup complete')","eaca6fe3":"#import data\npath_train = '..\/input\/30-days-of-ml\/train.csv'\npath_test = '..\/input\/30-days-of-ml\/test.csv'\npath_submission = '..\/input\/30-days-of-ml\/sample_submission.csv'\ntrain_data = pd.read_csv(path_train)\ntest_data = pd.read_csv(path_test)\nsubmission = pd.read_csv(path_submission)\nprint('Import has been completed!')","c68b1504":"# columns review\n\nprint(train_data.columns.tolist())\nprint('========================================================================================================================')\nprint(test_data.columns.tolist())\n\n# column types\nprint(train_data.dtypes.tolist())\nprint('========================================================================================================================')\nprint(test_data.dtypes.tolist())\n# dtype('0') --> \"object type\" dem\u0259kdir.","2e703411":"#choose numeric variables\nresponse = 'target'\nID = 'id'\n\nnum_cols = train_data[[column for column in train_data.columns.tolist()\n                      if (train_data[column].dtypes == 'float64' or train_data[column].dtypes == 'int64') and column != response and column != ID]].columns.tolist()\n\n\nnumeric_train = train_data[num_cols]\nnumeric_test = test_data[num_cols]\n\nnumeric_train.head(3)","7a034c72":"cat_cols = train_data[[column for column in train_data.columns.tolist()\n                      if train_data[column].dtypes == 'object' and column != response and column != ID]].columns.tolist()\n\ncategoric_train = train_data[cat_cols]\ncategoric_test = test_data[cat_cols]\n\ncategoric_train.head(3)","6cbbf835":"# Kardinall\u0131\u011f\u0131 <= 3 olan s\u00fctunlar\u0131n siyah\u0131s\u0131\ncar3_cols = categoric_train[[column for column in categoric_train.columns.tolist()\n                 if categoric_train[column].nunique() <= 3]].columns.tolist()\n\n# Kardinall\u0131\u011f\u0131 <= 5 olan s\u00fctunlar\u0131n siyah\u0131s\u0131\ncar5_cols = categoric_train[[column for column in categoric_train.columns.tolist()\n                 if categoric_train[column].nunique() <= 5]].columns.tolist()\n\n# Kardinall\u0131\u011f\u0131 <= 7 olan s\u00fctunlar\u0131n siyah\u0131s\u0131\ncar7_cols = categoric_train[[column for column in categoric_train.columns.tolist()\n                 if categoric_train[column].nunique() <= 7]].columns.tolist()\n\n# Kardinall\u0131\u011f\u0131 7-d\u0259n art\u0131q olan s\u00fctunlar\u0131n siyah\u0131s\u0131\ncar_more_cols = categoric_train[[column for column in categoric_train.columns.tolist()\n                 if categoric_train[column].nunique() > 7]].columns.tolist()\n\n# kardinall\u0131\u011f\u0131 3-\u0259 q\u0259d\u0259r olan s\u00fctunlar\u0131n adlar\u0131n\u0131n ekranda \u00e7ap edilm\u0259si\nprint(car3_cols)\n\n# kardinall\u0131\u011f\u0131 3-\u0259 q\u0259d\u0259r olan s\u00fctunlar\u0131n t\u0259rkibind\u0259ki t\u0259krarlanmayan d\u0259y\u0259rl\u0259r\nprint(categoric_train[car3_cols].nunique())\nprint(\"  \")\n\n# kardinall\u0131\u011f\u0131 5-\u0259 q\u0259d\u0259r olan s\u00fctunlar\u0131n adlar\u0131n\u0131n ekranda \u00e7ap edilm\u0259si\nprint(car5_cols)\n# kardinall\u0131\u011f\u0131 7-\u0259 q\u0259d\u0259r olan s\u00fctunlar\u0131n adlar\u0131n\u0131n ekranda \u00e7ap edilm\u0259si\nprint(car7_cols)\nprint(\"  \")\n# kardinall\u0131\u011f\u0131 7-d\u0259n art\u0131q olan s\u00fctunlar\u0131n adlar\u0131n\u0131n ekranda \u00e7ap edilm\u0259si\nprint(car_more_cols)\n# kardinall\u0131\u011f\u0131 3-\u0259 q\u0259d\u0259r olan s\u00fctunlar\u0131n t\u0259rkibind\u0259ki t\u0259krarlanmayan d\u0259y\u0259rl\u0259r\nprint(categoric_train[car_more_cols].nunique())\n\n\"\"\" Yuxar\u0131dak\u0131 t\u0259hlilin n\u0259tic\u0259l\u0259rini g\u00f6rd\u00fckd\u0259n sonra kardinall\u0131\u011f\u0131 7-d\u0259n \u00e7ox olan\ns\u00fctunlar\u0131n t\u0259rkibind\u0259ki d\u0259y\u0259rl\u0259ri v\u0259 onlar\u0131n say\u0131n\u0131 g\u00f6rm\u0259k \u00fc\u00e7\u00fcn\n\"value_counts\" atributundan istifad\u0259 edirik.\n\"\"\"\nprint(\"  \")\nprint(categoric_train['cat6'].value_counts())\nprint(\"  \")\nprint(categoric_train['cat7'].value_counts())\nprint(\"  \")\nprint(categoric_train['cat8'].value_counts())\nprint(\"  \")\nprint(categoric_train['cat9'].value_counts())\n\n\"\"\" if we do not use print function in order to see more neat view,\nwe should put this to the end of the cell.\nOtherwise, the cell will not show it in output.\n\"\"\"\ncategoric_train.head(5)","22d9a1a2":"\"\"\" D\u0259yi\u015f\u0259nl\u0259ri \"bool\" (\"boolean\" - ikili) v\u0259 \"multi\" olaraq qrupla\u015fd\u0131rd\u0131q.\nBurada da t\u0259hlil zaman\u0131 istifad\u0259 etdiyimiz ifad\u0259ni istifad\u0259 etdik.\n\"\"\"\n# kardinall\u0131\u011f\u0131 2-y\u0259 b\u0259rab\u0259r olan s\u00fctunlar\u0131n adlar\u0131\nbool_cols = categoric_train[[column for column in categoric_train.columns.tolist()\n    if categoric_train[column].nunique() == 2]].columns.tolist()\n\n# kardinall\u0131\u011f\u0131 [3;6] aral\u0131\u011f\u0131nda olan s\u00fctunlar\u0131n adlar\u0131\nmulti_cols = categoric_train[[column for column in categoric_train.columns.tolist()\n    if categoric_train[column].nunique() >= 3\n    and categoric_train[column].nunique() <= 6]].columns.tolist()\n\nbool_train = categoric_train[bool_cols]\nmulti_train = categoric_train[multi_cols]\nbool_test = categoric_test[bool_cols]\nmulti_test = categoric_test[multi_cols]\n\nprint(bool_cols)\nprint(multi_cols)","8ca7282b":"\"\"\" optional cell \"\"\"\n# train data v\u0259 test datada \"target\" s\u00fctunu xaricind\u0259 dig\u0259r b\u00fct\u00fcn s\u00fctun adlar\u0131 eynidir.\ntrain_data.columns.drop('target') == test_data.columns","5ece62c0":"\"\"\" optional cell \"\"\"\n# train data \u00fczr\u0259 binary s\u00fctun adlar\u0131n\u0131n siyah\u0131s\u0131\nprint(bool_cols)\n\nprint(categoric_test[[column for column in categoric_test.columns.tolist()\n    if categoric_test[column].nunique() == 2]].columns.tolist())\n\nprint(\" \")\n# test data \u00fczr\u0259 multiclass s\u00fctun adlar\u0131n\u0131n siyah\u0131s\u0131\nprint(categoric_test[[column for column in categoric_test.columns.tolist()\n    if categoric_test[column].nunique() >= 3\n    and categoric_test[column].nunique() <= 6]].columns.tolist())\n\nprint(multi_cols)\n\n\"\"\" h\u0259r iki data \u00fczr\u0259 s\u00fctun adlar\u0131n\u0131 \"print\" ed\u0259r\u0259k n\u0259tic\u0259ni m\u00fcqayis\u0259 edirik.\n\u0259g\u0259r test v\u0259 train datada eyniadl\u0131 s\u00fctunlar\u0131n kardinall\u0131\u011f\u0131 b\u0259rab\u0259rdirs\u0259,\ny\u0259ni veril\u0259n \u015f\u0259rti \u00f6d\u0259yirs\u0259, h\u0259r iki datada n\u0259tic\u0259 eyni binary\nv\u0259 multiclass s\u00fctunlar olacaq.\n\"\"\"\n\nprint(\" \")\n\n\"\"\" kardinall\u0131\u011f\u0131n eyniliyini a\u015fa\u011f\u0131dak\u0131 ifad\u0259 il\u0259 d\u0259 yoxlamaq olar.\nH\u0259r iki datada eyniadl\u0131 s\u00fctunlarda t\u0259krarlanmayan d\u0259y\u0259rl\u0259rin say\u0131 eyni olmal\u0131d\u0131r.\n\"\"\"\ntrain_data[bool_cols].nunique() == test_data[bool_cols].nunique()\ntrain_data[multi_cols].nunique() == test_data[multi_cols].nunique()","198b3fad":"\"\"\" optional cell \"\"\"\n\n\"\"\" B\u0259z\u0259n el\u0259 ola bil\u0259r ki, kardinall\u0131q eyni olar, amma d\u0259y\u0259rl\u0259rin \u00f6z\u00fc f\u0259rqli olar.\nM\u0259s\u0259l\u0259n, \"train\" datada \"A\", \"B\", \"C\", \"test\" datada is\u0259 \"A\", \"D\", \"C\" d\u0259y\u0259rli var.\nKardinall\u0131q eynidir, lakin d\u0259y\u0259rl\u0259rin 1-i f\u0259rqlidir.\n\"\"\"\n\nprint(np.array([train_data[col].value_counts().reset_index()['index'] for col in bool_cols]))\nprint(\" \")\nprint(np.array([test_data[col].value_counts().reset_index()['index'] for col in bool_cols]))\nprint(\"===================================================\")\nprint(np.array([train_data[col].value_counts().reset_index()['index'] for col in multi_cols]))\nprint(\" \")\nprint(np.array([test_data[col].value_counts().reset_index()['index'] for col in multi_cols]))\n\n# s\u0259tri \"run\" etdikd\u0259 h\u0259r iki data \u00fczr\u0259 n\u0259tic\u0259l\u0259rin eyni oldu\u011fu g\u00f6r\u00fcn\u00fcr.\n\"\"\"  Bu s\u00fctun \"test\" v\u0259 \"train\" datan\u0131n ox\u015farl\u0131\u011f\u0131 haqq\u0131nda \u0259n geni\u015f m\u0259lumat\u0131 verir.\nH\u0259m d\u0259y\u0259rl\u0259rin say\u0131n\u0131, h\u0259m \u00f6z\u00fcn\u00fc g\u00f6rm\u0259k m\u00fcmk\u00fcnd\u00fcr.\nY\u0259ni yuxar\u0131dak\u0131 iki sual\u0131 \u00f6t\u00fcr\u00fcb sad\u0259c\u0259 bu t\u0259hlild\u0259n yola \u00e7\u0131xaraq h\u0259r\u0259k\u0259t etm\u0259k olar.\n\"\"\"","2397c97a":"pd.get_dummies(train_data[bool_cols], drop_first = True)\n\"\"\"\npd.get_dummies() funksiyas\u0131 veril\u0259n s\u00fctunlardak\u0131 d\u0259y\u0259rl\u0259ri 0 v\u0259 1 olaraq ifad\u0259 edir.\nN\u0259tic\u0259d\u0259, bizd\u0259 s\u00fctundak\u0131 d\u0259y\u0259r say\u0131 q\u0259d\u0259r yeni s\u00fctun yaran\u0131r.\nM\u0259s\u0259l\u0259n, cat1 s\u00fctununda \"A\", \"B\", \"C\" d\u0259y\u0259rl\u0259ri varsa, get_dummies() \"cat1_A\", \"cat1_B\", \"cat1_C\" s\u00fctunlar\u0131 yarad\u0131r.\n\"cat1_A\" s\u00fctununda \"A\" d\u0259y\u0259ri 1, ondan f\u0259rqli h\u0259r \u015fey 0 kimi i\u015far\u0259 olunur.\n\"\"\"","e388ceeb":"train_data[['cat0_dumm', 'cat1_dumm', 'cat2_dumm']] = pd.get_dummies(train_data[bool_cols], drop_first = True)\ntest_data[['cat0_dumm', 'cat1_dumm', 'cat2_dumm']] = pd.get_dummies(test_data[bool_cols], drop_first = True)\n\n# daha sonra \"dummy\" s\u00fctunlar\u0131n adlar\u0131n\u0131 siyah\u0131 \u015f\u0259klind\u0259 formala\u015fd\u0131r\u0131r\u0131q\n\ntrain_data[['cat0_dumm', \"cat0\", 'cat1_dumm', \"cat1\", 'cat2_dumm', \"cat2\"]].head(5)","eda46b58":"bool_dummy_cols =  ['cat0_dumm', 'cat1_dumm', 'cat2_dumm']\n\ntype(bool_dummy_cols)","3acad82e":"train_data[['cat3_B', 'cat3_C', 'cat3_D']] = pd.get_dummies(train_data['cat3'], drop_first = True)\ntrain_data[['cat4_B', 'cat4_C', 'cat4_D']] = pd.get_dummies(train_data['cat4'], drop_first = True)\ntrain_data[['cat5_B', 'cat5_C', 'cat5_D']] = pd.get_dummies(train_data['cat5'], drop_first = True)\n\ntest_data[['cat3_B', 'cat3_C', 'cat3_D']] = pd.get_dummies(test_data['cat3'], drop_first = True)\ntest_data[['cat4_B', 'cat4_C', 'cat4_D']] = pd.get_dummies(test_data['cat4'], drop_first = True)\ntest_data[['cat5_B', 'cat5_C', 'cat5_D']] = pd.get_dummies(test_data['cat5'], drop_first = True)\n\n\nmulti_dummy_cols = ['cat3_B', 'cat3_C', 'cat3_D', 'cat4_B', 'cat4_C', 'cat4_D','cat5_B', 'cat5_C', 'cat5_D']\ntrain_data[multi_dummy_cols + multi_cols].head()","38d322ae":"#choose x and y for train data\nx_train = train_data[num_cols + bool_dummy_cols + multi_dummy_cols]\ny_train = train_data['target']\nprint(x_train.head(2))\nprint(y_train.head(2))\n\n#choose x for test data\nx_test = test_data[num_cols + bool_dummy_cols + multi_dummy_cols]\nprint(x_test.head(2))","1f7d12d6":"#split train data\nfrom sklearn.model_selection import train_test_split as tts\nx_tr_train, x_tr_test, y_tr_train, y_tr_test = tts(x_train, y_train, test_size = 0.2, random_state = 33)\n","1d023f22":"#import Random Forest Regressor\nfrom sklearn.ensemble import RandomForestRegressor","73f096af":"# defining model\nregress = RandomForestRegressor(n_estimators = 10, max_depth = 5, random_state = 33)","f4779fb9":"#fit\nregress.fit(x_tr_train, y_tr_train)","943e8040":"#predict\ny_tr_predict = regress.predict(x_tr_test)","1b39652d":"y_tr_predict","e6a75294":"#import package\nfrom sklearn.metrics import mean_squared_error\n\n#evaluate\n\nmean_squared_error(y_tr_predict, y_tr_test)","ee27b914":"#prediction with regress model\ny_predict = regress.predict(x_test)","b3d93aaf":"# add id column\nprediction = pd.concat([test_data['id'], pd.DataFrame(y_predict)], axis=1)\n# rename columns\nprediction.columns = ['id', 'target']\n# save as \".csv\"\nprediction.to_csv('ml_30_2nd_try_encodded.csv', index = False)\n# print shape (optional)\nprediction.shape","cbaec4dc":"print(\"U\u011furlar!\")\nprint('Good luck!')","16e22ccb":"# **Qeyd: \u00fcz\u0259rind\u0259 \"optional cell\" yaz\u0131lan xanalar modelin n\u0259tic\u0259sin\u0259 t\u0259sir etmir. Sad\u0259c\u0259 datan\u0131n keyfiyy\u0259tini yoxlamaq \u00fc\u00e7\u00fcnd\u00fcr.**","2545e06e":"\"Train\" v\u0259 \"test\" datan\u0131n \u00fcst-\u00fcst\u0259 d\u00fc\u015f\u00fcnd\u00fcy\u00fcnd\u0259n \u0259min olduqdan sonra kateqorik datam\u0131z\u0131 emal etm\u0259liyik.\nM\u0259lum m\u0259s\u0259l\u0259dir ki, model ancaq \u0259d\u0259dl\u0259ri ba\u015fa d\u00fc\u015f\u00fcr. Buna g\u00f6r\u0259 d\u0259, biz b\u00fct\u00fcn d\u0259yi\u015f\u0259nl\u0259ri \u0259d\u0259di d\u0259yi\u015f\u0259n\u0259 \u00e7evirm\u0259liyik.\n\nBunun \u00fc\u00e7\u00fcn ad\u0259t\u0259n ad\u0131n\u0131 e\u015fitdiyimiz \"encoder\" funksiyalara alternativ funksiyalardan istifad\u0259 ed\u0259c\u0259m.","ac6cad94":"T\u0259brikl\u0259r!\n\nModeliniz v\u0259 n\u0259tic\u0259niz haz\u0131rd\u0131r!\n\nArt\u0131q n\u0259tic\u0259ni y\u00fckl\u0259y\u0259r\u0259k \"qiym\u0259t l\u00f6vh\u0259sind\u0259\" yerinizi ala bil\u0259rsiniz.","626d03e7":"Daha \u00e7ox bel\u0259 payla\u015f\u0131mlar \u00fc\u00e7\u00fcn:\n\nhttps:\/\/challengersdeep.wixsite.com\/website\n\nhttps:\/\/www.instagram.com\/deep_education\/","1944bcb1":"**3. \"Test\" v\u0259 \"train\" datadak\u0131 eyniadl\u0131 s\u00fctunlar\u0131n t\u0259krarlanmayan d\u0259y\u0259rl\u0259ri eynidirmi?**","3b7b57d6":"S\u00fctunlar\u0131m\u0131z haz\u0131rd\u0131r. \u0130ndi n\u00f6vb\u0259 g\u0259lib \u00e7atd\u0131 X v\u0259 y d\u0259yi\u015f\u0259nl\u0259rini m\u00fc\u0259yy\u0259n etm\u0259y\u0259. y, b\u0259llidir - \"target\" d\u0259yi\u015f\u0259ni. \n\nX-i is\u0259 b\u0259rab\u0259r formala\u015fd\u0131raca\u011f\u0131q.","17406254":"Xat\u0131rlay\u0131rs\u0131nza, biz \"train\" datam\u0131z\u0131 iki hiss\u0259y\u0259 b\u00f6l\u00fcb, onun sad\u0259c\u0259 bir hiss\u0259sini modeld\u0259 istifad\u0259 etmi\u015fdik. N\u0259tic\u0259 q\u0259na\u0259tb\u0259x\u015f olduqdan sonra, b\u0259z\u0259n modeli b\u00fct\u00fcn \"trainset\" \u00fcz\u0259rind\u0259 yenid\u0259n \"train\" edirl\u0259r. \n\n> #fit\n> regress.fit(train_data, test_data)","abfa651d":"N\u0259tic\u0259d\u0259n g\u00f6r\u00fcnd\u00fcy\u00fc kimi B d\u0259y\u0259ri 1, A d\u0259y\u0259ri 0 olaraq qeyd olunub.","dd67c060":"# \"Test\" data \u00fcz\u0259rind\u0259 proqnozla\u015fd\u0131rma - Prediction for test data","f256f051":"# Modell\u0259\u015fdirm\u0259 - Modelling","70391e17":"\u018fd\u0259di d\u0259yi\u015f\u0259nl\u0259rl\u0259r i\u015fl\u0259m\u0259k asand\u0131r. Onlar\u0131n \u00fcz\u0259rind\u0259 dem\u0259k olar ki, he\u00e7 bir \u0259lav\u0259 d\u0259yi\u015fiklik aparmadan model\u0259 daxil edib n\u0259tic\u0259 \u0259ld\u0259 etm\u0259k olur. Lakin kateqorik d\u0259yi\u015f\u0259nl\u0259rd\u0259 bel\u0259 deyil. \u00c7\u00fcnki modell\u0259r biz insanlar kimi d\u00fc\u015f\u00fcnm\u00fcr, onlar sad\u0259c\u0259 \u0259d\u0259dl\u0259ri ba\u015fa d\u00fc\u015f\u0259 bilir.","523165f0":"# Qiym\u0259tl\u0259ndirm\u0259 - Evaluation","090607a7":"Yuxar\u0131dak\u0131 t\u0259hlild\u0259n sonra art\u0131q kardinall\u0131\u011fa g\u00f6r\u0259 s\u00fctunlar\u0131 qruplara ay\u0131ra bil\u0259rik. M\u0259n onlar\u0131 kardinall\u0131\u011f\u0131 2-y\u0259 b\u0259rab\u0259r, v\u0259 3-6 aral\u0131\u011f\u0131nda olan 2 qrupa ay\u0131r\u0131ram. Kardinall\u0131\u011f\u0131 6-dan b\u00f6y\u00fck olan s\u00fctunlar\u0131 is\u0259 h\u0259l\u0259lik istifad\u0259 etmir\u0259m.\n\nKardinall\u0131\u011f\u0131 2 olan s\u00fctunlar bizim **\"binary\" (\"ikili\")** d\u0259yi\u015f\u0259nl\u0259rimizdir: y\u0259ni cavab \"h\u0259\/yox\" \u015f\u0259klind\u0259 olur v\u0259 sad\u0259c\u0259 2 qiym\u0259td\u0259n birini al\u0131r. Burada b\u00fct\u00fcn kateqorik d\u0259yi\u015f\u0259nl\u0259rd\u0259 sad\u0259c\u0259 h\u0259rfl\u0259r verilib dey\u0259 bizim d\u0259yi\u015f\u0259nl\u0259rin m\u0259ntiqi a\u00e7\u0131qlamas\u0131 yoxdur. Biz sad\u0259c\u0259 bu s\u00fctunlar\u0131n binary ola bil\u0259c\u0259yini t\u0259xmin edirik.\n\nKardinall\u0131\u011f\u0131 3 v\u0259 daha art\u0131q olan kateqorik d\u0259yi\u015f\u0259nl\u0259r is\u0259 **\"multiclass\" (\"\u00e7oxsinifli\")** d\u0259yi\u015f\u0259nl\u0259rdir. Y\u0259ni, burada d\u0259yi\u015f\u0259n verilmi\u015f m\u00fc\u0259yy\u0259n d\u0259y\u0259rl\u0259r siyah\u0131s\u0131ndan h\u0259r hans\u0131sa bir qiym\u0259t ala bil\u0259r. Eynil\u0259 yuxar\u0131da qeyd etdiyimiz \"t\u0259l\u0259b\u0259, i\u015f\u00e7i, sahibkar, i\u015fsiz\" n\u00fcmun\u0259si kimi.\n\n","bcc81414":"**1. h\u0259m \"test\", h\u0259m \"train\" datada eyni s\u00fctunlar varm\u0131?**","bb24f8c4":"# Veril\u0259nl\u0259rin t\u0259hlili - Data Analysis","e44e70a0":"pd.get_dummies() orjinal datan\u0131n \u00fcz\u0259rind\u0259 d\u0259yi\u015fiklik etmir.\n\nBunun \u00fc\u00e7\u00fcn orijinal datada s\u00fctun adlar\u0131 yarad\u0131b, \"dummy\" (y\u0259ni 0 v\u0259 1) d\u0259yi\u0259nl\u0259rimizi h\u0259min s\u00fctunlara m\u0259nims\u0259dirik.\n\n> train_data[['cat0_dumm', 'cat1_dumm', 'cat2_dumm']] = pd.get_dummies(train_data[bool_cols], drop_first = True)\n\n\"get_dummies\" funksiyas\u0131 biz\u0259 d\u0259y\u0259rl\u0259rin say\u0131 q\u0259d\u0259r s\u00fctun verir. M\u0259s\u0259l\u0259n, bir s\u00fctunda qad\u0131nlar 1, ki\u015fil\u0259r 0 il\u0259, dig\u0259r s\u00fctunda ki\u015fil\u0259r 1, qad\u0131nlar 0 il\u0259 i\u015far\u0259 olunur. Biz\u0259 is\u0259 n sayda d\u0259y\u0259r \u00fc\u00e7\u00fcn n-1 s\u00fctun kifay\u0259t edir, y\u0259ni 1 s\u00fctunda 2 d\u0259y\u0259rd\u0259n biri 1, dig\u0259ri 0 il\u0259 i\u015far\u0259 olunsa, b\u0259sdir. H\u0259r iki s\u00fctundan istifad\u0259 olunan hallar da m\u00f6vcuddur. lakin biz bu modeld\u0259 \u0259n sad\u0259 \u00fcsulla i\u015fl\u0259m\u0259y\u0259 \u00e7al\u0131\u015f\u0131r\u0131q. Ona g\u00f6r\u0259 **\"drop_first = True\"** yazaraq s\u00fctunlardan birini avtomatik silirik.","b34ce67b":"Yaratd\u0131\u011f\u0131m\u0131z \".csv\" fayl\u0131n\u0131 sa\u011f t\u0259r\u0259fd\u0259 **\"Data\"** ba\u011fl\u0131\u011f\u0131 alt\u0131ndak\u0131 **\"output\"** qovlu\u011fundan \u0259ld\u0259 ed\u0259 bil\u0259rik.\n\n\u018fg\u0259r fayl qovluqda g\u00f6r\u00fcnm\u00fcrs\u0259, s\u0259tri \"run\" etdiyinizd\u0259n \u0259min olmaq \u00fc\u00e7\u00fcn t\u0259krar yoxlay\u0131n v\u0259 **\"kaggle\/working\"** qovlu\u011funun yan\u0131ndak\u0131 **\"yenil\u0259m\u0259\" (\"refresh\")** i\u015far\u0259sin\u0259 klikl\u0259yin.\n\n![image.png](attachment:31d08b96-b598-4f88-a83c-60f5526f6a9f.png)\n\nDaha sonra kursoru fayl\u0131n ad\u0131na yax\u0131nla\u015fd\u0131rd\u0131qda meydana g\u0259l\u0259n **\u00fc\u00e7 n\u00f6qt\u0259y\u0259** klikl\u0259y\u0259r\u0259k n\u0259tic\u0259ni y\u00fckl\u0259y\u0259 bil\u0259rsiniz.\n\nYuxar\u0131da qeyd olunan b\u00fct\u00fcn m\u0259rh\u0259l\u0259l\u0259ri h\u0259yata ke\u00e7irib \"notebook\"-u yadda\u015fda \"save version\" vasit\u0259sil\u0259 saxlad\u0131qdan sonra s\u0259hif\u0259dn \u00e7\u0131x\u0131b t\u0259krar \"notebook\"-nuza daxil olsan\u0131z, sa\u011f k\u0259nardak\u0131 m\u00fcnd\u0259ricat hiss\u0259sind\u0259 **\"output\"** yaz\u0131s\u0131na klikl\u0259yib n\u0259tic\u0259ni g\u00f6r\u0259 bil\u0259rsiniz. Daha sonra n\u0259tic\u0259ni \"submit\" ed\u0259, v\u0259 ya y\u00fckl\u0259y\u0259 bil\u0259rsiniz.\n\n![image.png](attachment:c1e3d899-4f5c-40a5-91ed-bc503146fb30.png)","2481551c":"G\u0259lin bu \u00fcsula daha diqq\u0259tli baxaq:\n\n> response = 'target'\n\n> ID = 'id'\n\n\u018fvv\u0259lc\u0259 h\u0259d\u0259f d\u0259yi\u015f\u0259ninin v\u0259 identifikasiya n\u00f6mr\u0259sinin (yaxud index) yerl\u0259\u015fdiyi s\u00fctunlar\u0131n **adlar\u0131n\u0131** **(s\u00fctunun \u00f6z\u00fcn\u00fc deyil)** ba\u015fqa bir d\u0259yi\u015f\u0259n\u0259 m\u0259nims\u0259dir\u0259m. Bu add\u0131m\u0131n x\u00fcsusi \u0259h\u0259miyy\u0259ti yoxdur. Bunu sad\u0259c\u0259 onun \u00fc\u00e7\u00fcn edir\u0259m ki, bu \"notebook\"-u ba\u015fqa data \u00fc\u00e7\u00fcn istifad\u0259 ed\u0259nd\u0259 s\u00fctun adlar\u0131n\u0131 h\u0259r s\u0259trd\u0259 d\u0259yi\u015fm\u0259y\u0259 ehtiyac qalmas\u0131n. Bir s\u00f6zl\u0259, yazd\u0131\u011f\u0131m kodlar\u0131 maksimum universal \u015f\u0259kild\u0259 yazma\u011fa \u00e7al\u0131\u015f\u0131ram ki, sonradan m\u0259n, v\u0259 ya bir ba\u015fqas\u0131 ondan ba\u015fqa data \u00fcz\u0259rind\u0259 rahatl\u0131qla istifad\u0259 ed\u0259 bilsin.\n\nA\u015fa\u011f\u0131dak\u0131 kod vasit\u0259sil\u0259 \u0259d\u0259di s\u00fctunlar\u0131n adlar\u0131n\u0131 tap\u0131b \"num_cols\" d\u0259yi\u015f\u0259nin\u0259 t\u0259yin edirik:\n\n> num_cols = \n\nBu d\u0259yi\u015f\u0259n \u0259ld\u0259 olunan n\u0259tic\u0259y\u0259 b\u0259rab\u0259r olacaq;\n\n> column for column in train_data.columns.tolist()\n\nYazaca\u011f\u0131m\u0131z \u015f\u0259rtin \"train_data\"-n\u0131n h\u0259r bir s\u00fctunu \u00fc\u00e7\u00fcn t\u0259krarlanmas\u0131n\u0131 t\u0259min edir. Bilirik ki, \"for loop\" siyah\u0131 bit\u0259n\u0259 q\u0259d\u0259r davam edir. Bizim n\u00fcmun\u0259d\u0259 siyah\u0131 s\u00fctunlard\u0131r;\n\n> (train_data[column].dtypes == 'float64' or train_data[column].dtypes == 'int64') \n\nS\u00fctunlar\u0131n n\u00f6v\u00fcn\u00fcn *(\"type\")* \u0259d\u0259di olmas\u0131n\u0131 t\u0259min edir. 'int64' tam \u0259d\u0259d \u015f\u0259klind\u0259 yaz\u0131lan, 'float64' is\u0259 onluq k\u0259sr \u015f\u0259klind\u0259 yaz\u0131lan \u0259d\u0259dl\u0259rdir *(\"Python\"-da 1.0 \"float\", 1 is\u0259 \"integer\" hesab edilir)*.\nHesablama ard\u0131c\u0131ll\u0131\u011f\u0131nda \"and\" operatoru \"or\" operatorundan \u00f6nc\u0259liklidir (vurma toplamadan \u00f6nc\u0259 g\u0259ldiyi kimi), biz is\u0259 ilk olaraq bu iki \u015f\u0259rtd\u0259n birinin do\u011fru olub-olmamas\u0131n\u0131 yoxlamaq \u00fc\u00e7\u00fcn ifad\u0259ni m\u00f6t\u0259riz\u0259y\u0259 al\u0131r\u0131q;\n\n> and column != response \n\nS\u00fctunlar\u0131n aras\u0131nda **h\u0259d\u0259f d\u0259yi\u015f\u0259nin olmamas\u0131n\u0131** g\u00f6st\u0259r\u0259n \u015f\u0259rtdir;\n\n> and column != ID]]\n\nS\u00fctunlar\u0131n aras\u0131nda **identifikasiya s\u00fctununun olmamas\u0131n\u0131** g\u00f6st\u0259r\u0259n \u015f\u0259rtdir;\n\n> train_data[[...]]\n\nSonda b\u00fct\u00fcn \u015f\u0259rti \"train_data[[]]\" i\u00e7ind\u0259 yazaraq datan\u0131n i\u00e7ind\u0259n bu \u015f\u0259rti \u00f6d\u0259y\u0259n s\u00fctunlar\u0131 se\u00e7mi\u015f oluruq.\n\n> .columns.tolist()\n\nBu hiss\u0259ni yazmadan \u0259ld\u0259 etdiyimiz n\u0259tic\u0259 s\u00fctunlar\u0131n \u00f6z\u00fcd\u00fcr (i\u00e7ind\u0259ki d\u0259y\u0259rl\u0259rl\u0259 b\u0259rab\u0259r). Biz\u0259 is\u0259 sad\u0259c\u0259 s\u00fctunlar\u0131n ad\u0131 laz\u0131md\u0131r. Ona g\u00f6r\u0259 **\".columns\"** yazaraq adlar\u0131 \u00e7\u0131xar\u0131b, **\".tolist()\"** vasit\u0259sil\u0259 \"list\"-\u0259 \u00e7eviririk. **\".tolist()\"** sad\u0259c\u0259 siyah\u0131n\u0131n tipini ...-d\u0259n \"list\" tipin\u0259 ke\u00e7irm\u0259k \u00fc\u00e7\u00fcnd\u00fcr.\n\n\n**Qeyd:** s\u00fctun v\u0259 d\u0259yi\u015f\u0259n s\u00f6zl\u0259rini b\u0259z\u0259n bir-biril\u0259 \u0259v\u0259z edirik. B\u00fct\u00fcn d\u0259yi\u015f\u0259nl\u0259r s\u00fctun hal\u0131ndad\u0131r. Amma b\u00fct\u00fcn s\u00fctunlar d\u0259yi\u015f\u0259n kimi modeld\u0259 istifad\u0259 olunmur. Burada \u0130D s\u00fctununa d\u0259yi\u015f\u0259n dem\u0259k **yanl\u0131\u015f deyil**. Lakin \u00e7a\u015fq\u0131nl\u0131q yaranmas\u0131n dey\u0259 s\u00fctun dem\u0259y\u0259 \u00fcst\u00fcnl\u00fck veririk.","f7672607":"# \u018fsas kitabxanalar\u0131n y\u00fckl\u0259nm\u0259si - Importing main libraries","41dcd916":"# Datan\u0131n b\u00f6l\u00fcnm\u0259si - Split train data","15ff4f3d":"\u018fn sonda n\u0259tic\u0259ni \".csv\" format\u0131na \u00e7eviririk. \n\nModeld\u0259 **\"id\"** - y\u0259ni identifikasiya n\u00f6mr\u0259si d\u0259yi\u015f\u0259n kimi istifad\u0259 olunmad\u0131\u011f\u0131 \u00fc\u00e7\u00fcn \u00e7\u0131xar\u0131l\u0131r.\n\nN\u0259tic\u0259ni g\u00f6nd\u0259rm\u0259mi\u015fd\u0259n qabaq **\"id\" s\u00fctunu n\u0259tic\u0259y\u0259 \u0259lav\u0259 olunmal\u0131d\u0131r**. \u018fks t\u0259qdird\u0259 n\u0259tic\u0259ni **\"submit\"** etdikd\u0259 x\u0259ta ba\u015f ver\u0259c\u0259k.\n\n**Eyni \u015f\u0259kild\u0259, s\u00fctun adlar\u0131n\u0131n do\u011fru oldu\u011funa da fikir verm\u0259liyik.**","9dfb1cc4":"M\u00fcxt\u0259lif kardinall\u0131\u011fa malik s\u00fctunlar\u0131 a\u015fa\u011f\u0131dak\u0131 kimi bir analiz apararaq ortaya \u00e7\u0131xara bil\u0259rsiniz.\n\nBunun \u00fc\u00e7\u00fcn a\u015fa\u011f\u0131dak\u0131 ifad\u0259ni t\u0259rtib ed\u0259r\u0259k m\u00fcxt\u0259lif \u015f\u0259rtl\u0259r \u00fczr\u0259 yoxlad\u0131q.\n\n> car3_cols = categoric_train[[column for column in categoric_train.columns.tolist()\n> if categoric_train[column].nunique() <= 3]].columns.tolist()\n\nBu ifad\u0259 d\u0259 yuxar\u0131da yazd\u0131\u011f\u0131m\u0131z ifad\u0259l\u0259r\u0259 b\u0259nz\u0259yir. \u00c7\u00fcnki burada da **\"for loop\"** v\u0259 **\"if\"** funksiyas\u0131ndan istifad\u0259 etmi\u015fik.\nLakin burada ilk d\u0259f\u0259 **\".nunique()\"** atributunu g\u00f6r\u00fcr\u00fck. \".nunique()\" biz\u0259 s\u00fctunda f\u0259rqli (t\u0259krarlanmayan) d\u0259y\u0259rl\u0259rin say\u0131n\u0131 (y\u0259ni kardinall\u0131\u011f\u0131) g\u00f6st\u0259rir. Yuxar\u0131dak\u0131 ifad\u0259d\u0259 h\u0259r s\u00fctun \u00fczr\u0259 kardinall\u0131\u011f\u0131 3-d\u0259n ki\u00e7ik v\u0259 b\u0259rab\u0259r olan s\u00fctunlar\u0131n adlar\u0131n\u0131 tap\u0131r\u0131q.\n\n\nT\u0259hlill\u0259 ba\u011fl\u0131 dig\u0259r detallar\u0131 a\u015fa\u011f\u0131dak\u0131 s\u0259trin i\u00e7ind\u0259ki \u015f\u0259rhl\u0259rd\u0259 g\u00f6r\u0259 bil\u0259rsiniz.","ccd11fea":"# Data y\u00fckl\u0259nm\u0259si - Import data","d8ca6c87":"# **Kateqorik d\u0259yi\u015f\u0259nl\u0259ri modeld\u0259 nec\u0259 istifad\u0259 edirik?**\n# **How to use categoric variables in model?**\n\n# *By Sitara Aghayeva*","1d34b169":"Eyni qayda il\u0259 kateqorik d\u0259yi\u015f\u0259nl\u0259ri d\u0259 se\u00e7ib \u00e7\u0131xar\u0131r\u0131q. Art\u0131q train datam\u0131zda h\u0259m \u0259d\u0259di, h\u0259m kateqorik d\u0259yi\u015f\u0259nl\u0259ri g\u00f6rm\u0259k ist\u0259s\u0259k,\n\n> train_data[num_cols, cat_cols] \n\nyazmaq kifay\u0259tdir.\n\nLakin b\u00fct\u00fcn **\"object\"** d\u0259yi\u015f\u0259nl\u0259r\u0259 kateqorik dem\u0259k tezdir. Onlar\u0131n kardinall\u0131\u011f\u0131n\u0131 \u00f6l\u00e7m\u0259k laz\u0131m g\u0259lir. Kardinall\u0131q d\u0259yi\u015f\u0259nin ne\u00e7\u0259 t\u0259krarlanmayan d\u0259y\u0259ri oldu\u011funu g\u00f6st\u0259r\u0259n \u00f6l\u00e7\u00fcd\u00fcr. M\u0259s\u0259l\u0259n, status s\u00fctununda 4 variant var: t\u0259l\u0259b\u0259, i\u015f\u00e7i, sahibkar, i\u015fsiz. Dem\u0259li, status s\u00fctunun kardinall\u0131\u011f\u0131 4-d\u00fcr. \u018fg\u0259r kardinall\u0131q h\u0259ddind\u0259n art\u0131q y\u00fcks\u0259kdirs\u0259, dem\u0259li, s\u00fctundak\u0131 veril\u0259nl\u0259r m\u0259tn formatl\u0131 ixtiyari d\u0259y\u0259rl\u0259rd\u0259n ibar\u0259tdir.","beb6efc5":"Ke\u00e7\u0259n d\u0259f\u0259 datadan sad\u0259c\u0259 \u0259d\u0259di *(\"float64\")* d\u0259yi\u015f\u0259nl\u0259ri se\u00e7m\u0259k \u00fc\u00e7\u00fcn bir kod yazm\u0131\u015fd\u0131q:\nhttps:\/\/www.kaggle.com\/sitaraaghayeva\/30-days-of-ml-simple-rf-model?scriptVersionId=72700113&cellId=22\n\nV\u0259 h\u0259min kodu bel\u0259 izah etmi\u015fdik:\nhttps:\/\/www.kaggle.com\/sitaraaghayeva\/30-days-of-ml-simple-rf-model?scriptVersionId=72700113&cellId=21\n\n\u0130ndi is\u0259 t\u0259qrib\u0259n eyni, amma nisb\u0259t\u0259n f\u0259rqli bir yana\u015fma istifad\u0259 etdik.\n\nG\u0259lin a\u015fa\u011f\u0131dak\u0131 \u0259m\u0259liyyatlara baxaq:\n\n1. abc = train[['a','b','c']]\n   xyz = train[['x','y','z']]\n   \n   pd.concat(abc, xyz, axis = 1)\n\n\n2. train[['a','b','c','x','y','z']]\n\n3. col_names1 = ['a','b','c']\n   col_names2 = ['x','y','z']\n   \n   train[col_names1, col_names2]\n   \nH\u0259r 3 \u0259m\u0259liyyat eyni n\u0259tic\u0259ni verir: \"train\" datas\u0131n\u0131n i\u00e7ind\u0259ki *'a', 'b', 'c', 'x', 'y', 'z'* s\u00fctunlar\u0131n\u0131 se\u00e7ib ay\u0131r\u0131r.\n\nBirinci \u00fcsulda s\u00fctunlar\u0131 2 ayr\u0131 \"data frame\" kimi t\u0259yin edib, **\"concatenate\"** funksiyas\u0131 vasit\u0259sil\u0259 onlar\u0131 birl\u0259\u015fdiririk.\n\n\u0130kinci \u00fcsulda biz\u0259 laz\u0131m olan s\u00fctunlar\u0131n adlar\u0131n\u0131 bir-bir yazaraq datan\u0131n i\u00e7ind\u0259n se\u00e7irik.\n\n\u00dc\u00e7\u00fcnc\u00fc \u00fcsulda is\u0259 s\u00fctunlar\u0131n adlar\u0131n\u0131 **\"list\"** *(y\u0259ni siyah\u0131 -- \"Python\"-da data strukturunun n\u00f6v\u00fcd\u00fcr)* \u015f\u0259klind\u0259 toplay\u0131r\u0131q. Daha sonra datada s\u00fctun adlar\u0131n\u0131n yerin\u0259 siyah\u0131n\u0131 m\u0259nims\u0259tdiyimiz d\u0259yi\u015f\u0259nin ad\u0131n\u0131 qeyd edirik.\n\n\u00d6t\u0259n \"notebook\"-da 1-ci \u00fcsuldan istifad\u0259 etmi\u015fdik. Lakin n\u0259z\u0259r\u0259 alsaq ki, biz prosesi h\u0259m \"test\", h\u0259m d\u0259 \"train\" data \u00fc\u00e7\u00fcn aparaca\u011f\u0131q, o zaman ilk iki \u00fcsul daha uzun vaxt apar\u0131r.\n\nSonuncu \u00fcsulda is\u0259 sad\u0259c\u0259 s\u00fctunlar\u0131n adlar\u0131n\u0131 qrupla\u015fd\u0131rmal\u0131y\u0131q. S\u00fctunlar\u0131 kateqorik, \u0259d\u0259di, ordinal, nominal, m\u0259tn v\u0259 s. \u015f\u0259kild\u0259 qrupla\u015fd\u0131ra bil\u0259rik. Sonra eyni s\u00fctun adlar\u0131n\u0131 h\u0259m \"test\", h\u0259m \"train\" dataya \u015famil ed\u0259c\u0259yik.","9576c558":"Qurdu\u011fumuz model\u0259 **\"train\"** datam\u0131z\u0131 g\u00f6st\u0259r\u0259r\u0259k onu \u00f6yr\u0259dirik.","1bb531c2":"# Data Emal\u0131 - Data Preprocessing","9a317d33":"Biz s\u00fctunlar\u0131 qrupla\u015fd\u0131rmaq \u00fc\u00e7\u00fcn \"train\" datadan istifad\u0259 etdik. Ancaq h\u0259r ehtimala qar\u015f\u0131 \"test\" v\u0259 \"train\" datalardak\u0131 s\u00fctunlar\u0131n eyni oldu\u011funa \u0259min olmal\u0131y\u0131q. B\u0259z\u0259n ola bilir ki, \"train\" datada veril\u0259n s\u00fctun \"test\" datada olmur. Yaxud \"test\" datada olan s\u00fctunlarda \"train\" datadan daha f\u0259rqli d\u0259y\u0259rl\u0259r olur. M\u0259s\u0259l\u0259n, \"train\" datada sad\u0259c\u0259 t\u0259l\u0259b\u0259, i\u015f\u00e7i, sahibkar v\u0259 i\u015f\u00e7i kateqoriyalar\u0131 var, anca \"test\" datada t\u0259qa\u00fcd\u00e7\u00fc kateqoriyas\u0131na da rast g\u0259linir. \u018fg\u0259r qar\u015f\u0131m\u0131za bel\u0259 s\u00fctunlar \u00e7\u0131xarsa, bu proqnozla\u015fd\u0131rmada problem yarada bil\u0259r, \u00e7\u00fcnki model yeni d\u0259y\u0259ri tan\u0131mayacaq. Ona g\u00f6r\u0259, bel\u0259 s\u00fctunlardan h\u0259l\u0259lik uzaq duraca\u011f\u0131q.\n\nG\u0259lin, b\u0259rab\u0259r a\u015fa\u011f\u0131dak\u0131 t\u0259hlill\u0259ri aparaq.","8254d5fa":"**2. \"test\" v\u0259 \"train\" datalarda eyniadl\u0131 s\u00fctunlar\u0131n kardinall\u0131\u011f\u0131 eynidirmi?**\n\n(Test datada s\u00fctunlar\u0131n kardinall\u0131\u011f\u0131 yuxar\u0131 olarsa, o dem\u0259kdir ki, \"test\" datada f\u0259rqli d\u0259y\u0259rl\u0259r var.)"}}