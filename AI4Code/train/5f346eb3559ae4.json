{"cell_type":{"92366758":"code","d6f475fd":"code","8f726810":"code","4e568f1b":"code","a3769719":"code","a49945a3":"code","37528446":"code","af77a8e1":"code","4e3692be":"code","29af166f":"code","9fc632db":"code","653ee40b":"code","a37a8db1":"code","b5001c68":"code","71404357":"code","d2252f51":"code","79eca86c":"code","9262bbb5":"code","5b4bbda8":"code","a1aa9501":"code","055e1982":"code","882e562a":"code","e4bcebab":"code","242d7dbf":"code","077cc531":"code","30e53df0":"code","6926cf45":"code","a5b95b5c":"code","3ad532da":"code","384a1dc8":"code","4d843f0c":"code","3a7f0aae":"code","84558ba4":"code","b274d41b":"code","7bc80f36":"code","b12b4295":"code","3058b518":"code","ba47d7d2":"code","ebaf0e24":"code","06169444":"code","06aa4c1b":"code","bf53f69a":"code","e192a728":"code","f36eb532":"code","a00bd0a8":"code","5cffd1e6":"code","43ff0084":"code","9701c0a1":"code","6522fec2":"code","7c43a570":"code","41e8c039":"code","e7a6f3b9":"code","c770f2d6":"code","3fd89896":"code","3bf3a5cf":"code","f86fea7b":"code","dd798aff":"code","1deb4f9e":"code","1438faf1":"code","bf25c7da":"code","ed931022":"code","4a0f2d42":"code","71cb0d6f":"code","c9fad4b6":"code","72bfa9ab":"code","208fcdba":"code","73f50206":"code","fc5e26b4":"code","f708f7b3":"code","bfeb1b20":"code","017dd66a":"markdown","24186ed4":"markdown","a319d03a":"markdown","2a64af50":"markdown","1a26b9d1":"markdown","424704b7":"markdown","61fbc636":"markdown","8deb3983":"markdown","fb15be56":"markdown","74ae22de":"markdown","45eae569":"markdown","66127a45":"markdown","a506f3d7":"markdown","5bef6571":"markdown","1303d90e":"markdown","8e57f673":"markdown","72fbd950":"markdown","6468e05b":"markdown"},"source":{"92366758":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","d6f475fd":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","8f726810":"casual_df=pd.read_csv('..\/input\/Casualties0514.csv')\naccident_df=pd.read_csv('..\/input\/Accidents0514.csv')\nvehicle_df=pd.read_csv('..\/input\/Vehicles0514.csv')","4e568f1b":"casual_df.head()","a3769719":"accident_df.head()","a49945a3":"vehicle_df.head()","37528446":"accident_df.info()","af77a8e1":"vehicle_df.info()","4e3692be":"casual_df.info()","29af166f":"first_df=pd.merge(casual_df,accident_df,on='Accident_Index')","9fc632db":"df=pd.merge(first_df,vehicle_df,on='Accident_Index')","653ee40b":"df.info()","a37a8db1":"df.head()","b5001c68":"df.isnull().sum()","71404357":"df.drop('LSOA_of_Accident_Location',axis=1,inplace=True)","d2252f51":"df.dropna(subset=['Location_Easting_OSGR','Location_Northing_OSGR', 'Longitude', 'Latitude'],axis=0,inplace=True)","79eca86c":"df.dropna(subset=['Time'],axis=0,inplace=True)","9262bbb5":"df.isnull().values.any()","5b4bbda8":"df.head()","a1aa9501":"#creating function to add month column\ndef month(string):\n    return int(string[3:5])\ndf['Month']=df['Date'].apply(lambda x: month(x))","055e1982":"#creating function to add hour column\ndef hour(string):\n    s=string[0:2]\n    return int(s)\ndf['Hour']=df['Time'].apply(lambda x: hour(x))","882e562a":"#getting a dataframe as per q1\nq1_df=pd.DataFrame(data=df,columns=['Hour','Day_of_Week','Month','Accident_Severity'])","e4bcebab":"q1_df.head()","242d7dbf":"#getting q1_df as per q1 i.e. getting cases of 'Fatal Accidents' only.\nq1_df=q1_df[q1_df.Accident_Severity ==1]","077cc531":"q1_df.head()","30e53df0":"sns.heatmap(q1_df.corr())","6926cf45":"q2_df=  pd.DataFrame(data=df, columns=['Journey_Purpose_of_Driver', 'Sex_of_Driver', 'Age_of_Driver','Age_Band_of_Driver','Driver_Home_Area_Type'])","a5b95b5c":"q2_df=q2_df[q2_df.Sex_of_Driver !=-1]\nq2_df.head()","3ad532da":"map_df={1:'Journey as part of work',2:'Commuting to\/from work',3:'Taking pupil to\/from school',4:'Pupil riding to\/from school',5:'Other',6:'Not known',15:'Not known\/Other'}\nmap_df_age={1:'0 - 5',2:'6 - 10',3:'11 - 15',4:'16 - 20',5:'21 - 25',6:'26 - 35',7:'36 - 45',8:'46 - 55',9:'56 - 65',10:'66 - 75',11:'Over 75'}\nmap_df_area={1:'Urban Area',2:'Small Town',3:'Rural'}\nq2_df.Age_Band_of_Driver=q2_df.Age_Band_of_Driver.map(map_df_age)\nq2_df.Journey_Purpose_of_Driver=q2_df.Journey_Purpose_of_Driver.map(map_df)\nq2_df.Driver_Home_Area_Type=q2_df.Driver_Home_Area_Type.map(map_df_area)\nq2_df.head()","384a1dc8":"sns.heatmap(q2_df.corr())","4d843f0c":"plt.figure(figsize=(17,4))\nsns.barplot('Journey_Purpose_of_Driver','Age_of_Driver',hue='Sex_of_Driver',data=q2_df,ci=None, palette='Set2')\nplt.legend(bbox_to_anchor=(1,1))\nplt.title('Journey Purpose of Driver vs Age_of_Driver')","3a7f0aae":"plt.figure(figsize=(12,4))\nsns.boxplot('Driver_Home_Area_Type','Age_of_Driver',data=q2_df)","84558ba4":"df.head()","b274d41b":"q3_df=pd.DataFrame(data=df,columns=['Accident_Severity','Light_Conditions','Weather_Conditions','Hour'])","7bc80f36":"q3_df.head()","b12b4295":"#creating function to identify time of day: morning, afternoon, evening, night, etc.\ndef time_of_day(n):\n    if n in range(4,8):\n        return 'Early Morning'\n    elif n in range(8,12):\n        return 'Morning'\n    elif n in range(12,17):\n        return 'Afternoon'\n    elif n in range(17,20):\n        return 'Evening'\n    elif n in range(20,25) or n==0:\n        return 'Night'\n    elif n in range(1,4):\n        return 'Late Night'","3058b518":"q3_df['Time_of_Day']=q3_df['Hour'].apply(lambda x: time_of_day(x))","ba47d7d2":"q3_df.head()","ebaf0e24":"q3_df=q3_df[q3_df.Weather_Conditions!=-1]","06169444":"sns.heatmap(q3_df.corr())","06aa4c1b":"plt.figure(figsize=(12,6))\nsns.barplot('Weather_Conditions','Hour',data=q3_df, hue='Accident_Severity',ci=None, palette='rainbow')\nplt.legend(bbox_to_anchor=(1,1))\nplt.title('Weather vs Hour_of_Accident')","bf53f69a":"plt.figure(figsize=(12,4))\nsns.countplot(x='Accident_Severity',data=q3_df,hue='Weather_Conditions',palette='rainbow')","e192a728":"df.Accident_Severity.value_counts()","f36eb532":"q4_df=pd.DataFrame(data=df,columns=['Vehicle_Type','Age_of_Vehicle','Was_Vehicle_Left_Hand_Drive?'\n                                    ,'Propulsion_Code','Engine_Capacity_(CC)'])","a00bd0a8":"q4_df=q4_df[q4_df.Vehicle_Type!=-1]\nq4_df.head()","5cffd1e6":"q4_df=q4_df[q4_df.Age_of_Vehicle!=-1]","43ff0084":"q4_df=q4_df[q4_df.Propulsion_Code!=-1]","9701c0a1":"q4_df=q4_df[q4_df['Engine_Capacity_(CC)']!=-1]","6522fec2":"map_vehicle_type={1:'Pedal cycle',\n2:'Motorcycle 50cc and under',\n3:'Motorcycle 125cc and under',\n4:'Motorcycle over 125cc and up to 500cc',\n5:'Motorcycle over 500cc',\n8:'Taxi\/Private hire car',\n9:'Car',\n10:'Minibus (8 - 16 passenger seats)',\n11:'Bus or coach (17 or more pass seats)',\n16:'Ridden horse',\n17:'Agricultural vehicle',\n18:'Tram',\n19:'Van \/ Goods 3.5 tonnes mgw or under',\n20:'Goods over 3.5t. and under 7.5t',\n21:'Goods 7.5 tonnes mgw and over',\n22:'Mobility scooter',\n23:'Electric motorcycle',\n90:'Other vehicle',\n97:'Motorcycle - unknown cc',\n98:'Goods vehicle - unknown weight'\n}\nq4_df['Vehicle_Type']=q4_df.Vehicle_Type.map(map_vehicle_type)\n","7c43a570":"map_prop={1:'Petrol',\n2:'Heavy oil',\n3:'Electric',\n4:'Steam',\n5:'Gas',\n6:'Petrol\/Gas (LPG)',\n7:'Gas\/Bi-fuel',\n8:'Hybrid electric',\n9:'Gas Diesel',\n10:'New fuel technology',\n11:'Fuel cells',\n12:'Electric diesel'\n}\nq4_df['Propulsion_Code']=q4_df.Propulsion_Code.map(map_prop)","41e8c039":"q4_df=q4_df[q4_df['Was_Vehicle_Left_Hand_Drive?']!=-1]\nq4_df.head()","e7a6f3b9":"plt.figure(figsize=(12,4))\nsns.countplot('Vehicle_Type',data=q4_df, palette='rainbow')\nplt.xticks(rotation=90)","c770f2d6":"plt.figure(figsize=(12,4))\nsns.countplot('Vehicle_Type',data=q4_df, hue='Was_Vehicle_Left_Hand_Drive?', palette='Set2')\nplt.xticks(rotation=90)","3fd89896":"plt.figure(figsize=(12,4))\nsns.barplot('Vehicle_Type','Engine_Capacity_(CC)',data=q4_df, hue='Propulsion_Code', palette='Set2',ci=None)\nplt.xticks(rotation=90)\nplt.legend(bbox_to_anchor=(1,1))","3bf3a5cf":"fatal_df=pd.DataFrame(data=df,columns=['Sex_of_Driver','Age_of_Driver','Vehicle_Type','Month','Accident_Severity'])","f86fea7b":"fatal_df=fatal_df[(fatal_df.Sex_of_Driver!=-1) & (fatal_df.Vehicle_Type!=-1) & (fatal_df.Sex_of_Driver!=-1) & (fatal_df.Sex_of_Driver!=3)]\nfatal_df.head()","dd798aff":"acc=pd.get_dummies(data=fatal_df,columns=['Accident_Severity'])\nsex=pd.get_dummies(data=fatal_df,columns=['Sex_of_Driver'])","1deb4f9e":"sex.head()","1438faf1":"fatal_df=pd.concat([fatal_df,acc['Accident_Severity_1'],sex['Sex_of_Driver_1']],axis=1)\nfatal_df.head()","bf25c7da":"fatal_df.drop(['Accident_Severity','Sex_of_Driver'],axis=1,inplace=True)\nfatal_df.head()","ed931022":"X=fatal_df.drop('Accident_Severity_1',axis=1)\ny=fatal_df['Accident_Severity_1']","4a0f2d42":"from sklearn.model_selection import train_test_split","71cb0d6f":"X_train, X_test, y_train, y_test= train_test_split(X,y)","c9fad4b6":"from sklearn.tree import DecisionTreeClassifier","72bfa9ab":"dtree= DecisionTreeClassifier()","208fcdba":"dtree.fit(X_train,y_train)","73f50206":"predictions= dtree.predict(X_test)","fc5e26b4":"from sklearn.metrics import classification_report, confusion_matrix","f708f7b3":"print(classification_report(y_test,predictions))","bfeb1b20":"print(confusion_matrix(y_test,predictions))\n","017dd66a":"**Note: Accident_Severity_1 corresponds to fatal accident and Sex_of_Driver_1 corresponds to male driver**\n","24186ed4":"****q1: What is the relation between hour, day, week, month with number of fatal accident?****","a319d03a":"**Number of accidents taking place with other vehciles are almost negligible as comapred to those with Cars.**","2a64af50":"**Cars had low Engine Capacity with all types of fuel, which could be a possible reason for accidents.**","1a26b9d1":"* 1: Fatal\n* 2: Serious\n* 3: Slight","424704b7":"**It is seen that the Drivers who met with an accident were in the age range of 30-40 years.**\n* Usually, drivers who meet with an accident are males.","61fbc636":"**Hence, better data engineering is required to obtain predictions**\n","8deb3983":"**Weather Conditions**\n* 1: Fine no high winds\n* 2: Raining no high winds\n* 3: Snowing no high winds\n* 4: Fine + high winds\n* 5: Raining + high winds\n* 6: Snowing + high winds\n* 7: Fog or mist\n* 8: Other\n* 9: Unknown","fb15be56":"**q4: Are certain car models safer than others?**","74ae22de":"**q3: How the weather impact the number or severity of an accident?**","45eae569":"**It seems like the model didn't do well**\n* Though the precision is good, it is noticed that the model had better predictions for only case:0\n* Also, checking the recall, it is noticed that case:1 is neglected.","66127a45":">> > > > > > > > > **Let's begin with Forecasting. We have following lines to work on:**\n* Can you forecast the future daily\/weekly\/monthly accidents?\n* What about fatal accidents can you predict them?","a506f3d7":"First let's begin with prediction of fatal accidents","5bef6571":"**The vehicles which met with an accident were Left-Hand-Drive type of vehicles.**","1303d90e":"**Using Decision Tree**","8e57f673":"> > > > ****The dataset is now clean and combined. Let's begin creating subframes as required to answer questions.****","72fbd950":"**q2: Does driver age has an effect on the number of accident?**","6468e05b":"* Accidents usually take place in the afternoon: refer fig: Weather vs Hour_of_Accident\n* Accidents with Slight severity occured the most\n* **Accidents ususally took place when the Weather conditions were fine and also there were'nt any high winds** : meaning which the weather conditions didn't effectively contribute to occurences of accidents."}}