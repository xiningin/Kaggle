{"cell_type":{"9aeb25e3":"code","58986e61":"code","4981d51c":"code","a48c8571":"code","cda88400":"code","a4749089":"code","cd091f31":"code","fcebb26e":"code","2ea3ce4a":"code","ae16e513":"code","498ea597":"code","879123cc":"code","b4601842":"code","96cc34de":"code","daffeb80":"code","ac3833c3":"code","41313b00":"code","3a9b42c5":"code","aee89c16":"code","52c1eb03":"code","9d66bf53":"code","020936f6":"code","bfd4a7cc":"code","4441dda6":"code","655ac4ba":"code","bfdbfbd0":"code","d34c0556":"code","7f8207c5":"code","b9c64dc5":"code","72ee5c25":"code","e3c8e243":"code","9cbe291b":"code","0f47b2fe":"code","28a7b2ad":"code","a206ef11":"code","642a60f0":"code","856c9d36":"code","c3bd6ca6":"markdown","fad3e784":"markdown","afdc3fb6":"markdown","51d7c76a":"markdown","e888eb22":"markdown","9d6b023b":"markdown","3acfba19":"markdown","be9964c8":"markdown"},"source":{"9aeb25e3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","58986e61":"google_data = pd.read_csv('..\/input\/google-play-store-apps\/googleplaystore.csv')\ngoogle_data","4981d51c":"google_data.head()","a48c8571":"google_data.shape","cda88400":"google_data.describe()","a4749089":"type(google_data)","cd091f31":"google_data.boxplot()","fcebb26e":"google_data.hist()","2ea3ce4a":"google_data.info()","ae16e513":"google_data.isnull()","498ea597":"google_data.isnull().sum()","879123cc":"google_data[google_data.Rating > 5]","b4601842":"google_data.drop([10472], inplace=True)","96cc34de":"google_data[10470:10475]","daffeb80":"google_data.boxplot()","ac3833c3":"google_data.hist()","41313b00":"threshold = len(google_data)* 0.1  #10 percent of my rows\nthreshold","3a9b42c5":"google_data.dropna(thresh=threshold, axis=1, inplace=True)","aee89c16":"print(google_data.isnull().sum())","52c1eb03":"google_data.shape","9d66bf53":"def impute_median(series):\n    return series.fillna(series.median())","020936f6":"google_data.Rating = google_data['Rating'].transform(impute_median)","bfd4a7cc":"google_data.isnull().sum()","4441dda6":"print(google_data['Type'].mode())\nprint(google_data['Current Ver'].mode())\nprint(google_data['Android Ver'].mode())","655ac4ba":"google_data['Type'].fillna(str(google_data['Type'].mode().values[0]), inplace=True)\ngoogle_data['Current Ver'].fillna(str(google_data['Current Ver'].mode().values[0]), inplace=True)\ngoogle_data['Android Ver'].fillna(str(google_data['Android Ver'].mode().values[0]), inplace=True)","bfdbfbd0":"google_data.isnull().sum()","d34c0556":"### Lets covert Price, Reviews and Ratings into numerical data\ngoogle_data['Price']=google_data['Price'].apply(lambda x: str(x).replace('$', '') if '$' in str(x) else str(x))\ngoogle_data['Price']=google_data['Price'].apply(lambda x: float(x))\ngoogle_data['Reviews']=pd.to_numeric(google_data['Reviews'], errors='coerce')","7f8207c5":"google_data['Installs']=google_data['Installs'].apply(lambda x: str(x).replace('+', '') if '+' in str(x) else str(x))\ngoogle_data['Installs']=google_data['Installs'].apply(lambda x: str(x).replace(',', '') if ',' in str(x) else str(x))\ngoogle_data['Installs']=google_data['Installs'].apply(lambda x: float(x))\n","b9c64dc5":"google_data.head(5)","72ee5c25":"google_data.describe()","e3c8e243":"grp = google_data.groupby('Category')\nx = grp['Rating'].agg(np.mean)\ny = grp['Price'].agg(np.sum)\nz = grp['Reviews'].agg(np.mean)\nprint(x)\nprint(y)\nprint(z)\n","9cbe291b":"# lets plot\nplt.plot(x)","0f47b2fe":"#again plot\nplt.plot(x, 'ro')\n# noticed x level is very clumsy","28a7b2ad":"#again need to expand\nplt.figure(figsize=(12,5))\nplt.plot(x, 'ro')\nplt.xticks(rotation=90)\nplt.show()\n\n","a206ef11":"# for x\nplt.figure(figsize=(16,5))\nplt.plot(x, 'ro')\nplt.xticks(rotation=90)\nplt.title('Category wise rating')\nplt.xlabel('Categories')\nplt.ylabel('Rating')\nplt.show()","642a60f0":"# for Y\nplt.figure(figsize=(16,5))\nplt.plot(y, 'r--')\nplt.xticks(rotation=90)\nplt.title('Category wise pricing')\nplt.xlabel('Categories')\nplt.ylabel('Prices')\nplt.show()","856c9d36":"# for Z\nplt.figure(figsize=(16,5))\nplt.plot(x, 'bs')\nplt.xticks(rotation=90)\nplt.title('Category wise Reviews')\nplt.xlabel('Categories')\nplt.ylabel('Reviews')\nplt.show()","c3bd6ca6":"#### Check how many ratings are more than 5-Outliers","fad3e784":"## Data Visualization","afdc3fb6":"#### Remove columns that are 90% empty","51d7c76a":"### Data Imputation and Manipulation","e888eb22":"### Data Cleaning\n\n#### Count the number of missing values in the Dataframe","9d6b023b":"### DATA ANALYSIS OF GOOGLE APP'S RATINGS","3acfba19":"### Read Data","be9964c8":"##### Fill the null values with appropriate values using aagregate functions such as mean, median or mode."}}