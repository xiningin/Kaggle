{"cell_type":{"1d5a4e4b":"code","1f5ea462":"code","fa501a4b":"code","8aaef9bc":"code","206d1770":"code","abea0c33":"code","da3225bf":"code","d85a5ce2":"code","f45a3dfc":"code","a8bad142":"code","866ef80e":"code","9417db50":"code","2da1cbb3":"code","7d879173":"markdown","37143ca2":"markdown"},"source":{"1d5a4e4b":"# This Python 3 environment comes with many helpful analytics libraries installed\nimport os\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))","1f5ea462":"sub_path = \"..\/input\/ieeesubmissions\"\nall_files = os.listdir(sub_path)\nall_files","fa501a4b":"outs = [pd.read_csv(os.path.join(sub_path, f), index_col=0) for f in all_files]\nconcat_sub = pd.concat(outs, axis=1)\ncols = list(map(lambda x: \"ieee\" + str(x), range(len(concat_sub.columns))))\nconcat_sub.columns = cols\nconcat_sub.reset_index(inplace=True)\nconcat_sub.head()\nncol = concat_sub.shape[1]","8aaef9bc":"# check correlation\nconcat_sub.iloc[:,1:ncol].corr()","206d1770":"corr = concat_sub.iloc[:,1:7].corr()\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\n\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(11, 9))\n\n# Generate a custom diverging colormap\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","abea0c33":"# get the data fields ready for stacking\nconcat_sub['ieee_max'] = concat_sub.iloc[:, 1:ncol].max(axis=1)\nconcat_sub['ieee_min'] = concat_sub.iloc[:, 1:ncol].min(axis=1)\nconcat_sub['ieee_mean'] = concat_sub.iloc[:, 1:ncol].mean(axis=1)\nconcat_sub['ieee_median'] = concat_sub.iloc[:, 1:ncol].median(axis=1)","da3225bf":"cutoff_lo = 0.8\ncutoff_hi = 0.2","d85a5ce2":"concat_sub['isFraud'] = concat_sub['ieee_mean']\nconcat_sub[['TransactionID', 'isFraud']].to_csv('stack_mean.csv', \n                                        index=False, float_format='%.6f')","f45a3dfc":"concat_sub['isFraud'] = concat_sub['ieee_median']\nconcat_sub[['TransactionID', 'isFraud']].to_csv('stack_median.csv', \n                                        index=False, float_format='%.6f')","a8bad142":"concat_sub['isFraud'] = np.where(np.all(concat_sub.iloc[:,1:ncol] > cutoff_lo, axis=1), 1, \n                                    np.where(np.all(concat_sub.iloc[:,1:ncol] < cutoff_hi, axis=1),\n                                             0, concat_sub['ieee_median']))\nconcat_sub[['TransactionID', 'isFraud']].to_csv('stack_pushout_median.csv', \n                                        index=False, float_format='%.6f')","866ef80e":"concat_sub['isFraud'] = np.where(np.all(concat_sub.iloc[:,1:ncol] > cutoff_lo, axis=1), \n                                    concat_sub['ieee_max'], \n                                    np.where(np.all(concat_sub.iloc[:,1:ncol] < cutoff_hi, axis=1),\n                                             concat_sub['ieee_min'], \n                                             concat_sub['ieee_mean']))\nconcat_sub[['TransactionID', 'isFraud']].to_csv('stack_minmax_mean.csv', \n                                        index=False, float_format='%.6f')","9417db50":"concat_sub['isFraud'] = np.where(np.all(concat_sub.iloc[:,1:ncol] > cutoff_lo, axis=1), \n                                    concat_sub['ieee_max'], \n                                    np.where(np.all(concat_sub.iloc[:,1:ncol] < cutoff_hi, axis=1),\n                                             concat_sub['ieee_min'], \n                                             concat_sub['ieee_median']))\nconcat_sub[['TransactionID', 'isFraud']].to_csv('stack_minmax_median.csv', \n                                        index=False, float_format='%.6f')","2da1cbb3":"concat_sub['isFraud'] = concat_sub['ieee0'].rank(method ='min') + concat_sub['ieee1'].rank(method ='min') + concat_sub['ieee2'].rank(method ='min') +concat_sub['ieee3'].rank(method ='min')\nconcat_sub['isFraud'] = (concat_sub['isFraud']-concat_sub['isFraud'].min())\/(concat_sub['isFraud'].max() - concat_sub['isFraud'].min())\nconcat_sub.describe()\nconcat_sub[['TransactionID', 'isFraud']].to_csv('stack_rank.csv', index=False, float_format='%.8f')","7d879173":"Upvote if useful","37143ca2":"Based on https:\/\/www.kaggle.com\/lpachuong\/statstack\n\nThanks\n\nhttps:\/\/www.kaggle.com\/jazivxt\/safe-box\n\nhttps:\/\/www.kaggle.com\/artgor\/eda-and-models\n\nhttps:\/\/www.kaggle.com\/artkulak\/ieee-fraud-simple-baseline-0-9383-lb"}}