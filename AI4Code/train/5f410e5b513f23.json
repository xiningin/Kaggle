{"cell_type":{"631c442c":"code","4fd2771a":"code","98c89e4c":"code","f5adc7a3":"code","80e902fd":"code","6705a995":"code","76622e43":"code","a755a4fa":"code","6d0203e2":"markdown"},"source":{"631c442c":"#import necessary libraries\nimport numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt","4fd2771a":"data = pd.read_csv(\"..\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv\")\nnormal = data[data[\"class\"] == \"Normal\"]\nabnormal = data[data[\"class\"] == \"Abnormal\"]","98c89e4c":"#scatter plot\nplt.figure(figsize=[10,10])\nplt.scatter(normal.pelvic_incidence, normal.pelvic_radius, color=\"blue\", label = \"Normal\")\nplt.scatter(abnormal.pelvic_incidence, abnormal.pelvic_radius, color=\"red\", label = \"Abnormal\")\nplt.xlabel(\"Pelvic Incidence\")\nplt.ylabel(\"Pelvic Radius\")\nplt.legend()\nplt.show()","f5adc7a3":"x = data.drop([\"class\"],axis=1)\ny = [1 if each == \"Normal\" else 0 for each in data[\"class\"]]","80e902fd":"#normalization\nx = (x - np.min(x))\/(np.max(x) - np.min(x))","6705a995":"#train test split\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=42)","76622e43":"#knn model and find k value\nfrom sklearn.neighbors import KNeighborsClassifier\nscore_list = []\nmax = 0\nfor i in range(1,15):\n    knn = KNeighborsClassifier(n_neighbors = i)\n    knn.fit(x_train, y_train)\n    score_list.append(knn.score(x_test, y_test))\n    if score_list[i-1] > max:\n        max, k = score_list[i-1], i\n    \nplt.plot(range(1,15), score_list)\nplt.xlabel(\"k values\")\nplt.ylabel(\"accuracy\")\nplt.show()","a755a4fa":"print(\"{} nn as best score: {}\".format(k, max))","6d0203e2":"Firstly, we will use 'column_2C_weka.csv' as our data because i want to split them to two parts  as normal and abnormal."}}