{"cell_type":{"bcc7d4fa":"code","ea9a2ab3":"code","92095d20":"code","12e8de38":"code","3c18aa37":"code","ebb33c32":"code","56880ba6":"code","e7b386ec":"code","2b831322":"code","ed29248f":"code","ab26b8a2":"code","1e43eceb":"code","8265e689":"code","2200d9c1":"code","6e060ed4":"code","2d9a5863":"code","e447558b":"code","03fb8eb1":"code","065cb96b":"code","7318724c":"code","4c6f3725":"code","19bb9bfc":"code","2829cb42":"markdown","fbaaf76c":"markdown","4d9733ed":"markdown","4c07cf0a":"markdown","4ea1585c":"markdown","dca557a6":"markdown","f24b4362":"markdown"},"source":{"bcc7d4fa":"import numpy as np\nimport pandas as pd\nimport cv2\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nfrom scipy import stats\nimport glob\nwarnings.filterwarnings('ignore')","ea9a2ab3":"df = pd.read_csv(\"..\/input\/landmark-recognition-2020\/train.csv\")\ndf.head()","92095d20":"df.duplicated().sum()","12e8de38":"sub = pd.read_csv(\"..\/input\/landmark-recognition-2020\/sample_submission.csv\")\nsub.head()","3c18aa37":"sub.shape","ebb33c32":"df['landmark_id'].value_counts().hist()","56880ba6":"total = df.isnull().sum().sort_values(ascending = False)\npercent = (df.isnull().sum()\/df.isnull().count()).sort_values(ascending = False)\nmissing_train_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_train_data.head()","e7b386ec":"temp = pd.DataFrame(df.landmark_id.value_counts().head(8))\ntemp.reset_index(inplace=True)\ntemp.columns = ['landmark_id','count']\ntemp","2b831322":"plt.figure(figsize = (9, 8))\nplt.title('Most frequent landmarks')\nsns.set_color_codes(\"pastel\")\nsns.barplot(x=\"landmark_id\", y=\"count\", data=temp,\n            label=\"Count\")\nplt.show()","ed29248f":"temp = pd.DataFrame(df.landmark_id.value_counts().tail(8))\ntemp.reset_index(inplace=True)\ntemp.columns = ['landmark_id','count']\ntemp","ab26b8a2":"plt.figure(figsize = (9, 8))\nplt.title('Least frequent landmarks')\nsns.set_color_codes(\"pastel\")\nsns.barplot(x=\"landmark_id\", y=\"count\", data=temp,\n            label=\"Count\")\nplt.show()","1e43eceb":"df.nunique()","8265e689":"plt.figure(figsize = (8, 8))\nplt.title('Landmark ID Distribuition')\nsns.distplot(df['landmark_id'])\n\nplt.show()","2200d9c1":"print(\"Number of classes under 20 occurences\",(df['landmark_id'].value_counts() <= 20).sum(),'out of total number of categories',len(df['landmark_id'].unique()))","6e060ed4":"# Landmark Id Density Plot\nplt.figure(figsize = (8, 8))\nplt.title('Landmark id density plot')\nsns.kdeplot(df['landmark_id'], color=\"green\", shade=True)\nplt.show()","2d9a5863":"#Landmark id distribuition and density plot\nplt.figure(figsize = (8, 8))\nplt.title('Landmark id distribuition and density plot')\nsns.distplot(df['landmark_id'],color='blue', kde=True,bins=100)\nplt.show()","e447558b":"sns.set()\nplt.title('Training set: number of images per class(line plot)')\nsns.set_color_codes(\"pastel\")\nlandmarks_fold = pd.DataFrame(df['landmark_id'].value_counts())\nlandmarks_fold.reset_index(inplace=True)\nlandmarks_fold.columns = ['landmark_id','count']\nax = landmarks_fold['count'].plot(logy=True, grid=True)\nlocs, labels = plt.xticks()\nplt.setp(labels, rotation=30)\nax.set(xlabel=\"Landmarks\", ylabel=\"Number of images\")","03fb8eb1":"#Training set: number of images per class(statter plot)\nsns.set()\nlandmarks_fold_sorted = pd.DataFrame(df['landmark_id'].value_counts())\nlandmarks_fold_sorted.reset_index(inplace=True)\nlandmarks_fold_sorted.columns = ['landmark_id','count']\nlandmarks_fold_sorted = landmarks_fold_sorted.sort_values('landmark_id')\nax = landmarks_fold_sorted.plot.scatter(\\\n     x='landmark_id',y='count',\n     title='Training set: number of images per class(statter plot)')\nlocs, labels = plt.xticks()\nplt.setp(labels, rotation=30)\nax.set(xlabel=\"Landmarks\", ylabel=\"Number of images\")","065cb96b":"sns.set()\nax = landmarks_fold_sorted.boxplot(column='count')\nax.set_yscale('log')","7318724c":"sns.set()\nres = stats.probplot(df['landmark_id'], plot=plt)","4c6f3725":"train_list = glob.glob('..\/input\/landmark-recognition-2020\/train\/*\/*\/*\/*')","19bb9bfc":"plt.rcParams[\"axes.grid\"] = False\nf, axarr = plt.subplots(4, 3, figsize=(25, 25))\n\ncurr_row = 0\nfor i in range(12):\n    example = cv2.imread(train_list[i])\n    example = example[:,:,::-1]\n    \n    col = i%4\n    axarr[col, curr_row].imshow(example)\n    if col == 3:\n        curr_row += 1","2829cb42":"# Barplot","fbaaf76c":"# Probability plot","4d9733ed":"# Random images","4c07cf0a":"# Please Upvote if you found this helpful:)","4ea1585c":"# Id distrubution","dca557a6":"# Plot landmark","f24b4362":"# min\/max"}}