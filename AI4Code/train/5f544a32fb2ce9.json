{"cell_type":{"a7228540":"code","743a49f4":"code","d997ac87":"code","813ec690":"code","df6ccc45":"code","c31af896":"code","6e753fde":"code","e68a9aae":"code","8d29e5bf":"markdown","d53dbae8":"markdown","466f1ea5":"markdown","2b41c4ab":"markdown"},"source":{"a7228540":"pip install imutils","743a49f4":"import os\nimport cv2\nimport imutils\nimport pytz\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nfrom PIL import Image, ImageEnhance\nfrom datetime import datetime ","d997ac87":"!rm -rf '.\/temp'\n!rm -rf '.\/resize'\n!rm -rf '.\/brightness'\n!rm -rf '.\/translate'\n!rm -rf '.\/zoom'\n!rm -rf '.\/rotate'\n!rm -rf '.\/Data'","813ec690":"os.mkdir('.\/Data')\ndatasets_dir = \"..\/input\/alfabet-bisindo\/Citra BISINDO\"","df6ccc45":"UTC = pytz.utc\ntimeJKT = pytz.timezone('Asia\/Jakarta') \nstart_time = datetime.now(timeJKT).replace(microsecond=0)","c31af896":"  all_augmented_images = []\n  final_size = 64,64\n\n  for folder in sorted(os.listdir(\"%s\"%datasets_dir)):\n    print(\"Start with folder %s (with %d raw image)\"%(folder,len(os.listdir(datasets_dir+'\/'+folder))))\n    os.chdir('.\/Data')\n    os.mkdir(\".\/%s\"%folder)\n    os.chdir('..')\n\n    sort_number = 1\n    totaldata = 0\n    for image_data in sorted(os.listdir(\"%s\/%s\"%(datasets_dir,folder))):\n      os.mkdir('.\/resize')\n      os.mkdir('.\/brightness')\n      os.mkdir('.\/translate')\n      os.mkdir('.\/zoom')\n      os.mkdir('.\/rotate')\n\n      # (\"======================================================================\")\n      size_img = 256,256\n      original = cv2.imread(\"%s\/%s\/%s\"%(datasets_dir,folder,image_data))\n      original = cv2.resize(original, size_img)\n      cv2.imwrite(os.path.join(\".\/resize\/original.jpg\"), original)\n\n      # (\"======================================================================\")\n      original = Image.open(\".\/resize\/original.jpg\")\n      enhancer_original = ImageEnhance.Brightness(original)\n\n      factor = 0.75\n      im_output_original = enhancer_original.enhance(factor)\n      im_output_original.save(\".\/brightness\/%s_brightness_original_075.jpg\"%folder)\n\n      factor = 1.00\n      im_output_original = enhancer_original.enhance(factor)\n      im_output_original.save(\".\/brightness\/%s_brightness_original_100.jpg\"%folder)\n\n      factor = 1.25\n      im_output_original = enhancer_original.enhance(factor)\n      im_output_original.save(\".\/brightness\/%s_brightness_original_125.jpg\"%folder)\n\n      factor = 1.5\n      im_output_original = enhancer_original.enhance(factor)\n      im_output_original.save(\".\/brightness\/%s_brightness_original_150.jpg\"%folder)\n\n      # (\"======================================================================\")\n      original = cv2.imread(\".\/resize\/original.jpg\")\n      size_img = 256,256\n\n      scaling = 16\n      height_update = -16\n      for translate_x in range(1,6):\n        width_update = -16\n        for translate_y in range(1,6):\n          T = np.float32([[1, 0, width_update], [0, 1, height_update]]) \n          translate = cv2.warpAffine(original, T, (256, 256))\n          translate = translate[0+scaling:256-scaling, 0+scaling:256-scaling]\n          translate = cv2.resize(translate, size_img)\n          cv2.imwrite(os.path.join(\".\/translate\/%s_translate_original_%d-%d.jpg\"%(folder,translate_x,translate_y)), translate)\n          width_update +=8\n        height_update +=8\n\n      for image_data in sorted(os.listdir(\".\/brightness\/\")):\n        brightness = cv2.imread(\".\/brightness\/\" + image_data)\n        title = image_data[0:len(image_data)-4]\n        scaling = 16\n        height_update = -16\n        for translate_x in range(1,6):\n          width_update = -16\n          for translate_y in range(1,6):\n            T = np.float32([[1, 0, width_update], [0, 1, height_update]]) \n            translate = cv2.warpAffine(brightness, T, (256, 256))\n            translate = translate[0+scaling:256-scaling, 0+scaling:256-scaling]\n            translate = cv2.resize(translate, size_img)\n            cv2.imwrite(os.path.join(\".\/translate\/%s_translate_brightness_%d-%d.jpg\"%(title,translate_x,translate_y)), translate)\n            width_update +=8\n          height_update +=8\n      \n      # (\"======================================================================\")\n      original = cv2.imread(\".\/resize\/original.jpg\")\n      size_img = 256,256\n\n      scaling = 12\n      for j in range(1,4):\n        zoom_crop = original[0+scaling:256-scaling, 0+scaling:256-scaling]\n        zoom_crop = cv2.resize(zoom_crop, size_img)\n        cv2.imwrite(os.path.join(\".\/zoom\/%s_zoom_original_%03d.jpg\"%(folder,j)), zoom_crop)\n        scaling+=12\n\n      for image_data in sorted(os.listdir(\".\/brightness\/\")):\n        brightness = cv2.imread(\".\/brightness\/\" + image_data)\n        title = image_data[0:len(image_data)-4]\n        scaling = 12\n        for j in range(1,4):\n          zoom_crop = brightness[0+scaling:256-scaling, 0+scaling:256-scaling]\n          zoom_crop = cv2.resize(zoom_crop, size_img)\n          cv2.imwrite(os.path.join(\".\/zoom\/%s_zoom_brightness_%03d.jpg\"%(title,j)), zoom_crop)\n          scaling+=12\n\n      for image_data in sorted(os.listdir(\".\/translate\/\")):\n        translate = cv2.imread(\".\/translate\/\" + image_data)\n        title = image_data[0:len(image_data)-4]\n        scaling = 12\n        for j in range(1,4):\n          zoom_crop = translate[0+scaling:256-scaling, 0+scaling:256-scaling]\n          zoom_crop = cv2.resize(zoom_crop, size_img)\n          cv2.imwrite(os.path.join(\".\/zoom\/%s_zoom_translate_%03d.jpg\"%(title,j)), zoom_crop)\n          scaling+=12\n  \n      # (\"======================================================================\")\n      scaling = 12\n\n      index = 1\n      original = cv2.imread(\".\/resize\/original.jpg\") \n      for i in range(-5,6):\n        rotate = imutils.rotate(original, angle=10*i\/10)\n        rotate = rotate[0+scaling:256-scaling, 0+scaling:256-scaling]\n        rotate = cv2.resize(rotate, size_img)\n        cv2.imwrite(os.path.join(\".\/rotate\/%s_rotated_original_%03d.jpg\"%(folder,index)), rotate)\n        index+=1\n\n      for image_data in sorted(os.listdir(\".\/brightness\/\")):\n        translate_img = cv2.imread(\".\/brightness\/\" + image_data)\n        title = image_data[0:len(image_data)-4]\n        index = 1\n        for i in range(-5,6):\n          rotate = imutils.rotate(translate_img, angle=10*i\/10)\n          rotate = rotate[0+scaling:256-scaling, 0+scaling:256-scaling]\n          rotate = cv2.resize(rotate, size_img)\n          cv2.imwrite(os.path.join(\".\/rotate\/%s_rotated_brightness_%03d.jpg\"%(title,index)), rotate)\n          index+=1\n\n      for image_data in sorted(os.listdir(\".\/translate\/\")):\n        translate_img = cv2.imread(\".\/translate\/\" + image_data)\n        title = image_data[0:len(image_data)-4]\n        index = 1\n        for i in range(-5,6):\n          rotate = imutils.rotate(translate_img, angle=10*i\/10)\n          rotate = rotate[0+scaling:256-scaling, 0+scaling:256-scaling]\n          rotate = cv2.resize(rotate, size_img)\n          cv2.imwrite(os.path.join(\".\/rotate\/%s_rotated_translate_%03d.jpg\"%(title,index)), rotate)\n          index+=1\n\n      for image_data in sorted(os.listdir(\".\/zoom\/\")):\n        zoom_img = cv2.imread(\".\/zoom\/\" + image_data)\n        title = image_data[0:len(image_data)-4]\n        index = 1\n        for i in range(-5,6):\n          rotate = imutils.rotate(zoom_img, angle=10*i\/10)\n          rotate = rotate[0+scaling:256-scaling, 0+scaling:256-scaling]\n          rotate = cv2.resize(rotate, size_img)\n          cv2.imwrite(os.path.join(\".\/rotate\/%s_rotated_zoom_%03d.jpg\"%(title,index)), rotate)\n          index+=1\n\n      # (\"======================================================================\")\n      for image_data in sorted(os.listdir('.\/resize\/')):\n          temp_img = cv2.imread('.\/resize\/'+image_data)\n          temp_img = cv2.resize(temp_img, final_size)\n          cv2.imwrite(os.path.join(\".\/Data\/%s\/%s_augmented_%07d.jpg\"%(folder,folder,sort_number)), temp_img)\n          sort_number+=1\n\n      for image_data in sorted(os.listdir('.\/brightness\/')):\n          temp_img = cv2.imread('.\/brightness\/'+image_data)\n          temp_img = cv2.resize(temp_img, final_size)\n          cv2.imwrite(os.path.join(\".\/Data\/%s\/%s_augmented_%07d.jpg\"%(folder,folder,sort_number)), temp_img)\n          sort_number+=1\n\n      for image_data in sorted(os.listdir('.\/translate\/')):\n          temp_img = cv2.imread('.\/translate\/'+image_data)\n          temp_img = cv2.resize(temp_img, final_size)\n          cv2.imwrite(os.path.join(\".\/Data\/%s\/%s_augmented_%07d.jpg\"%(folder,folder,sort_number)), temp_img)\n          sort_number+=1\n\n      for image_data in sorted(os.listdir('.\/zoom\/')):\n          temp_img = cv2.imread('.\/zoom\/'+image_data)\n          temp_img = cv2.resize(temp_img, final_size)\n          cv2.imwrite(os.path.join(\".\/Data\/%s\/%s_augmented_%07d.jpg\"%(folder,folder,sort_number)), temp_img)\n          sort_number+=1\n\n      for image_data in sorted(os.listdir('.\/rotate\/')):\n          temp_img = cv2.imread('.\/rotate\/'+image_data)\n          temp_img = cv2.resize(temp_img, final_size)\n          cv2.imwrite(os.path.join(\".\/Data\/%s\/%s_augmented_%07d.jpg\"%(folder,folder,sort_number)), temp_img)\n          sort_number+=1\n  \n      !rm -rf '.\/resize'\n      !rm -rf '.\/brightness'\n      !rm -rf '.\/translate'\n      !rm -rf '.\/zoom'\n      !rm -rf '.\/rotate'\n\n    print(\"Finishing augmented data. Please wait...\")\n    for image_data in sorted(os.listdir(\".\/Data\/%s\"%folder)):\n        temp_img = cv2.imread(\".\/Data\/%s\/%s\"%(folder,image_data))\n        all_augmented_images.append(temp_img)\n        totaldata+=1\n        \n    print(\"Done with folder %s\"%folder)\n    print(\"> Total augmented data in folder %s:\"%folder,totaldata)\n    print(\"==================================================\")\n\n  print(\"Total augmented data:\", len(all_augmented_images))\n  all_augmented_images = None","6e753fde":"end_time = datetime.now(timeJKT).replace(microsecond=0)\nprint(\"Start Time    : %s\"%start_time)\nprint(\"End Time      : %s\"%end_time)\nprint(\"Total Duration: \",end_time - start_time)","e68a9aae":"base_dir = \".\/Data\"\nsample_images = []\n\nfor folder in os.listdir(base_dir):\n  for image_inside in os.listdir(base_dir + \"\/\" + folder):\n    temporary_img = cv2.imread(base_dir + \"\/\" + folder + \"\/\" + image_inside)\n    temporary_img = cv2.cvtColor(temporary_img, cv2.COLOR_BGR2RGB)\n    sample_images.append(temporary_img)\n    break\n\nprint(\"10 sample images from the augmentation process\")\nrow = 2\ncol = 5\nfig = plt.figure(figsize = (col*2,row*2))\nfor load_samples in range(0,10):\n    fig.add_subplot(row, col, load_samples+1)\n    plt.axis('off')\n    plt.imshow(sample_images[load_samples])","8d29e5bf":"# Load Packages","d53dbae8":"# Prepare Folders","466f1ea5":"# Image Augmentation","2b41c4ab":"# Review Output"}}