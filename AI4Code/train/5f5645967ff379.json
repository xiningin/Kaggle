{"cell_type":{"b367d481":"code","9cd8b6c1":"code","befacd6a":"code","8096b5e0":"code","eb9d514e":"code","d37fdbb8":"code","beaf273e":"code","47913bcd":"code","b7ceea55":"code","69dd4e43":"code","e5f47c0d":"code","a4b6cded":"code","7fd970c9":"code","3cdaa828":"code","76e5d0d3":"code","244d465b":"code","84129d6c":"code","51c81057":"markdown","5f0b9823":"markdown","c4c0ebff":"markdown","4ee6b28e":"markdown","1cfdd6a6":"markdown","05062112":"markdown","83a207e8":"markdown","39cd5bbd":"markdown","93c3caf6":"markdown","e1694ce5":"markdown","1207cd3f":"markdown","afd3e792":"markdown","e46486d3":"markdown","73ba08c0":"markdown","8572be9f":"markdown"},"source":{"b367d481":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nfrom wordcloud import WordCloud\nimport matplotlib.pyplot as plt\n\nimport plotly.graph_objs as go\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9cd8b6c1":"timesData = pd.read_csv(\"\/kaggle\/input\/world-university-rankings\/timesData.csv\")","befacd6a":"timesData.info()","8096b5e0":"timesData.head(10)","eb9d514e":"df = timesData.iloc[:100,:]\nimport plotly.graph_objects as go\n\ntrace1 = go.Scatter(\n    x=df.world_rank,\n    y=df.citations,\n    mode=\"lines\",\n    name=\"citations\",\n    marker=dict(color='rgba(16,112,2,0.8)'),\n    text = df.university_name)\n\ntrace2 = go.Scatter(\n    x=df.world_rank,\n    y=df.teaching,\n    mode=\"lines+markers\",\n    name=\"teaching\",\n    marker=dict(color='rgba(80,26,80,0.8)'),\n    text = df.university_name)\n\ndata=[trace1,trace2]\nlayout= dict(title='Citation and Teaching vs Worl Rank of Top 100 Universities',\n            xaxis=dict(title='World Rank',ticklen=5,zeroline=False))\nfig=dict(data=data,layout=layout)\niplot(fig)","d37fdbb8":"df2014 = timesData[timesData.year == 2014].iloc[:100,:]\ndf2015 = timesData[timesData.year == 2015].iloc[:100,:]\ndf2016 = timesData[timesData.year ==2016].iloc[:100,:]\n\ntrace1 = go.Scatter(\n    x=df2014.world_rank,\n    y=df2014.citations,\n    mode=\"markers\",\n    name=\"2014\",\n    marker=dict(color='rgba(255,128,255,0.8)'),\n    text = df2014.university_name)\n\ntrace2 = go.Scatter(\n    x=df2015.world_rank,\n    y=df2015.citations,\n    mode=\"markers\",\n    name=\"2015\",\n    marker=dict(color='rgba(255,128,2,0.8)'),\n    text = df2015.university_name)\n\ntrace3 = go.Scatter(\n    x=df2016.world_rank,\n    y=df2016.citations,\n    mode=\"markers\",\n    name=\"2016\",\n    marker=dict(color='rgba(0,255,200,0.8)'),\n    text = df2016.university_name)\n\ndata = [trace1,trace2,trace3]\nlayout = dict(title='Citation vs world rank of top 100 universities with 2014,2015 and 2016 years',\n             xaxis=dict(title='World Rank',ticklen=5,zeroline=False),\n             yaxis=dict(title='Citation',ticklen=5,zeroline=False))\nfig = dict(data=data, layout=layout)\niplot(fig)","beaf273e":"df2015.head()","47913bcd":"df2014 = timesData[timesData.year==2014].iloc[:3,:]\ntrace1 = go.Bar(\n    x=df2014.university_name,\n    y=df2014.citations,\n    name=\"citations\",\n    marker=dict(color='rgba(255, 174, 255, 0.5)',\n               line =dict(color='rgb(0, 0, 0)',width=1.5)),\n    text = df2014.country)\n\ntrace2 = go.Bar(\n    x=df2014.university_name,\n    y=df2014.teaching,\n    name='teaching',\n    marker=dict(color='rgba(255, 255, 128, 0.5)',\n                line=dict(color='rgb(0, 0, 0)',width=1.5)),\n    text=df2014.country)\n    \ndata=[trace1,trace2]\nlayout=go.Layout(barmode=\"group\")\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","b7ceea55":"df2014 = timesData[timesData.year==2014].iloc[:3,:]\nx = df2014.university_name\n\ntrace1 = {\n    'x': x,\n    'y': df2014.citations,\n    'name' : 'citation',\n    'type' : 'bar'\n};\ntrace2 = {\n    'x' : x,\n    'y' : df2014.teaching,\n    'name' : 'teaching',\n    'type' : 'bar'\n};\n\ndata = [trace1,trace2];\nlayout={\n    'xaxis': {'title': 'Top 3 Universities'},\n    'barmode' : 'relative',\n    'title' : 'citations and teaching of top 3 universities in 2014'\n};\n\nfig = go.Figure(data=data,layout=layout)\niplot(fig)\n","69dd4e43":"df2016 = timesData[timesData.year==2016].iloc[:7,:]\npie1 = df2016.num_students\npie1_list = [float(each.replace(',','.')) for each in df2016.num_students]\nlabels = df2016.university_name\n\nfig = {\n    'data':[{\n        \"values\":pie1_list,\n        \"labels\":labels,\n        \"domain\":{\"x\":[0,.5]},\n        \"name\":\"Number of Students Rate\",\n        \"hoverinfo\" : \"label+percent+name\",\n        \"hole\":.3,\n        \"type\":\"pie\"\n    },],\n    \"layout\":{\n        \"title\":\"Universities Number of Students Rates\",\n        \"annotations\":[\n            {\n                \"font\":{\"size\":20},\n                \"showarrow\":False,\n                \"text\":\"Number of Students\",\n                \"x\":0.20,\n                \"y\":1\n            },\n        ]\n    }\n}\niplot(fig)","e5f47c0d":"x2011 = timesData.student_staff_ratio[timesData.year == 2011]\nx2012 = timesData.student_staff_ratio[timesData.year == 2012]\n\ntrace1 = go.Histogram(\n    x = x2011,\n    opacity = 0.75,\n    name='2011',\n    marker=dict(color='rgba(171,50,96,0.6)'))\n\ntrace2 = go.Histogram(\n    x = x2012,\n    opacity = 0.75,\n    name='2012',\n    marker=dict(color='rgba(12,50,196,0.6)'))\n\ndata = [trace1,trace2]\nlayout= go.Layout(barmode='overlay',\n                 title='students-staff ratio in 2011 adnd 2012',\n                 xaxis=dict(title='students-staff ratio'),\n                 yaxis=dict(title='Count'),\n)\n\nfig = go.Figure(data=data,layout=layout)\niplot(fig)\n","a4b6cded":"x2011 = timesData.country[timesData.year == 2011]\nplt.subplots(figsize=(8,8))\nwordcloud = WordCloud(\n    background_color = 'white',\n    width = 512,\n    height = 384,\n    ).generate(\" \".join(x2011))\n\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()","7fd970c9":"x2015 = timesData[timesData.year == 2015]\n\ntrace0 = go.Box(\n    y = x2015.total_score,\n    name = 'total score of universities in 2015',\n    marker = dict(\n        color = 'rgb(12,12,140)',\n    )\n)\n\ntrace1 = go.Box(\n    y = x2015.research,\n    name = 'research of universities in 2015',\n    marker = dict(\n        color = 'rgb(12,128,128)',\n    )\n)\n\ndata = [trace0,trace1]\niplot(data)","3cdaa828":"import plotly.figure_factory as ff\n\ndataframe = timesData[timesData.year == 2015]\ndata2015 = dataframe.loc[:,[\"research\",\"international\",\"total_score\"]]\ndata2015[\"index\"] = np.arange(1,len(data2015)+1)\n\nfig = ff.create_scatterplotmatrix(data2015, diag = 'box', index = 'index', colormap = 'Portland',\n                                  colormap_type = 'cat',\n                                 height=700,width=700)\niplot(fig)","76e5d0d3":"trace1 = go.Scatter(\n    x = dataframe.world_rank,\n    y = dataframe.teaching,\n    name = \"teaching\",\n    marker = dict(color = 'rgba(16,112,2,0.8)'),\n)\n\ntrace2 = go.Scatter(\n    x = dataframe.world_rank,\n    y = dataframe.income,\n    xaxis = 'x2',\n    yaxis = 'y2',\n    name = \"income\",\n    marker = dict(color = 'rgba(160,112,20,0.8)'),\n)\n\ndata = [trace1,trace2]\nlayout = go.Layout(\n    xaxis2 = dict(\n        domain=[0.6,0.95],\n        anchor = 'y2',\n    ),\n    yaxis2 = dict(\n        domain=[0.6,0.95],\n        anchor = 'x2',\n    ),\n    title = 'Income and teaching vs World Rank of Universities'\n)\n\nfig = go.Figure(data=data,layout=layout)\niplot(fig)","244d465b":"trace1 = go.Scatter3d(\n    x = dataframe.world_rank,\n    y = dataframe.research,\n    z = dataframe.citations,\n    mode = 'markers',\n    marker = dict(\n        size = 10,\n        color = 'rgb(255,0,0)',\n        )\n)\n\ndata = [trace1]\nlayout = go.Layout(\n    margin = dict(\n        l=0,\n        r=0,\n        b=0,\n        t=0)\n)\nfig = go.Figure(data=data,layout=layout)\niplot(fig)","84129d6c":"trace1 = go.Scatter(\n    x = dataframe.world_rank,\n    y = dataframe.research,\n    name = \"research\")\n\ntrace2 = go.Scatter(\n    x = dataframe.world_rank,\n    y = dataframe.citations,\n    xaxis = 'x2',\n    yaxis = 'y2',\n    name = 'citations')\n\ntrace3 = go.Scatter(\n    x = dataframe.world_rank,\n    y = dataframe.income,\n    xaxis = 'x3',\n    yaxis = 'y3',\n    name = 'income') \n\ntrace4 = go.Scatter(\n    x = dataframe.world_rank,\n    y = dataframe.total_score,\n    xaxis = 'x4',\n    yaxis = 'y4',\n    name = 'total_score'\n    \n)\n\n\ndata = [trace1,trace2,trace3,trace4]\nlayout = go.Layout(\n    xaxis=dict(\n        domain=[0,0.45]\n    ),\n    yaxis=dict(\n        domain=[0,0.45]\n    ),\n    xaxis2=dict(\n        domain=[0.55,1]\n    ),\n    xaxis3=dict(\n        domain=[0,0.45],\n        anchor='y3'\n    ),\n    xaxis4=dict(\n        domain=[0.55,1],\n        anchor = 'y4' \n    ),\n     yaxis2=dict(\n        domain=[0,0.45],\n        anchor = 'x2'\n    ),\n    yaxis3=dict(\n        domain=[0.55,1]\n    ),\n    yaxis4=dict(\n        domain=[0.55,1],\n        anchor = 'x4'\n    ),\n    title = 'Research, citation, income and total score vs world rank of universities'\n    \n    \n)\nfig = go.Figure(data=data,layout=layout)\niplot(fig)\n","51c81057":"# Scatter Plot Matrix","5f0b9823":"# Box Plot","c4c0ebff":"### Students rate of top 7 universities in 2016","4ee6b28e":"# Pie Charts","1cfdd6a6":"# 3D Scatter Plot with Colorscaling","05062112":"# Histogram","83a207e8":"### Citations and teaching of top 3 universities in 2014","39cd5bbd":"# Word Cloud","93c3caf6":"# Inset Plots","e1694ce5":"# Bar Charts\n","1207cd3f":"# Line Chart","afd3e792":"## Citation-Teaching","e46486d3":"# Multiple Subplots","73ba08c0":"# Scatter Plots","8572be9f":"### Students staff ratio in 2011 and 2012 years"}}