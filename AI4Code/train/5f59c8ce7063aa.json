{"cell_type":{"d7a225d7":"code","3a01cfc8":"code","d3352579":"code","658e378e":"code","31b4bd95":"code","d120c0af":"code","fa976009":"code","7b1e7aca":"code","49295096":"code","fb385e57":"code","e6e75ffa":"code","0715b022":"code","8b5227d2":"code","acf81943":"code","20f120af":"code","084cdeb3":"code","9514278a":"code","1326002c":"code","459f73f3":"code","1745fed0":"code","f5ba6256":"code","57b0a59c":"code","28056103":"code","6c077de9":"code","3db4e7b9":"code","1b072578":"code","aac23091":"code","19930091":"code","e8333bf3":"code","84100999":"code","6c9697e5":"code","f45e3110":"code","0db4f477":"code","ad0f1f81":"code","ac4de029":"code","f25bd7ff":"code","d945547f":"code","12906a7e":"code","75ca74ed":"code","1bdad0c4":"code","02cb9724":"code","9b651763":"code","35f48734":"code","6724360a":"code","680d5dec":"code","df5e48f6":"markdown","30251830":"markdown","11db70fc":"markdown","76bacb6f":"markdown","d9a34c2b":"markdown","4a456ae0":"markdown","ede9f3bd":"markdown","6edb99c3":"markdown","45ddc1bc":"markdown","b049c36f":"markdown","a10a6274":"markdown","b431af8a":"markdown","fdd57872":"markdown","1d667983":"markdown","cb235a33":"markdown"},"source":{"d7a225d7":"from kaggle.competitions import nflrush\nimport pandas as pd\nimport numpy as np\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.ensemble import RandomForestClassifier as RFC\nfrom tqdm import tqdm\n\nenv = nflrush.make_env()","3a01cfc8":"from sklearn.model_selection import GridSearchCV,train_test_split","d3352579":"df = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2020\/train.csv', low_memory=False)","658e378e":"iter_test = env.iter_test()","31b4bd95":"new_df=df.groupby(['PlayId','Position']).count()","d120c0af":"position_count=new_df['GameId'].unstack().fillna(0).astype(int)\nposition_count","fa976009":"rusher_df=df[df['NflId']==df['NflIdRusher']]","7b1e7aca":"rusher_df['Yards'].hist(range=(-20,50),bins=70)","49295096":"rusher_df.columns","fb385e57":"#\u30c1\u30fc\u30e0\u6bce\u306e\u7372\u5f97\u30e4\u30fc\u30c9\u6570\u306e\u5e73\u5747\u3092\u898b\u308b\nteam_yards_df = rusher_df.groupby('Team').mean()[['Yards']]\nteam_yards_df = team_yards_df.rename(columns={'Yards':'team_yards'})","e6e75ffa":"#rusher\u306e\u307f\u306e\u30c7\u30fc\u30bf\u306b\u30c1\u30fc\u30e0\u6bce\u306e\u5e73\u5747\u7372\u5f97\u30e4\u30fc\u30c9\u6570\u3092\u52a0\u3048\u308b\nrusher_df = rusher_df.merge(team_yards_df,on='Team',how=\"left\")","0715b022":"# \u653b\u6483\u30c1\u30fc\u30e0\u306e\u5f97\u70b9\nrusher_df.loc[rusher_df[\"Team\"]==\"home\", \"rusherTeamScore\"] = rusher_df[\"HomeScoreBeforePlay\"]\nrusher_df.loc[rusher_df[\"Team\"]==\"away\", \"rusherTeamScore\"] = rusher_df[\"VisitorScoreBeforePlay\"]\n\n# \u5b88\u5099\u30c1\u30fc\u30e0\u306e\u5f97\u70b9\nrusher_df.loc[rusher_df[\"Team\"]==\"home\", \"defenceTeamScore\"] = rusher_df[\"VisitorScoreBeforePlay\"]\nrusher_df.loc[rusher_df[\"Team\"]==\"away\", \"defenceTeamScore\"] = rusher_df[\"HomeScoreBeforePlay\"]\n\n# \u5f97\u70b9\u5dee\nrusher_df.loc[:, \"diffScore\"] = rusher_df[\"rusherTeamScore\"] - rusher_df[\"defenceTeamScore\"]","8b5227d2":"#\u30bf\u30c3\u30c1\u30c0\u30a6\u30f3\u307e\u3067\u4f55\u30e4\u30fc\u30c9\u3042\u308b\u304b\nrusher_df[\"yardsToTouchdown\"] = rusher_df[\"YardLine\"]\nrusher_df.loc[rusher_df[\"PossessionTeam\"] == rusher_df[\"FieldPosition\"], \"yardsToTouchdown\"] = 100-rusher_df[\"YardLine\"]","acf81943":"#rusher\u306e\u307f\u306e\u30c7\u30fc\u30bf\u306b\u30dd\u30b8\u30b7\u30e7\u30f3\u6bce\u306e\u4eba\u6570\u3092\u52a0\u3048\u308b\nrusher_df=pd.merge(rusher_df,position_count, on='PlayId')","20f120af":"rusher_df=rusher_df.rename(columns={'S_x':'S','S_y':'S_position'})","084cdeb3":"# \u9078\u624b\u6bce\u306e\u5e73\u5747\u7372\u5f97\u30e4\u30fc\u30c9\nrusher_yards = rusher_df[[\"NflId\", \"Yards\"]].groupby(\"NflId\").mean()[\"Yards\"]\nrusher_yards.dropna(inplace=True)","9514278a":"rusher_id = rusher_df.merge(rusher_yards, on=\"NflId\", how=\"left\")","1326002c":"def process(df):\n    df=pd.get_dummies(df,columns=['Team','PlayDirection','OffenseFormation'])\n    df=df[(df['StadiumType']!='Cloudy') & (df['StadiumType']!='Bowl')]\n    df=df.drop('FieldPosition', axis=1)\n    outdoor=['Outdoor', 'Outdoors','Open','Indoor, Open Roof','Outdoor Retr Roof-Open', 'Oudoor', 'Ourdoor','Retr. Roof-Open','Outdor',\n       'Retr. Roof - Open', 'Domed, Open', 'Domed, open', 'Outside','Heinz Field']\n    indoor=['Indoors', 'RetractableRoof', 'Indoor','Retr. Roof-Closed','Dome', 'Domed, closed','Indoor, Roof Closed', 'Retr. Roof Closed','Closed Dome','Dome, closed','Domed']\n    df['stadiumtype']=(df['StadiumType'].isin(outdoor)*1)\n    rain=['Light Rain', 'Showers','Cloudy with periods of rain, thunder possible. Winds shifting to WNW, 10-20 mph.','Rain', 'Heavy lake effect snow','Snow', 'Cloudy, Rain','Rain shower','Rainy']\n    df['weather']=(~df['GameWeather'].isin(rain)*1)\n    df['PlayerHeight']= df['PlayerHeight'].apply(lambda x: 12*int(x.split('-')[0])+int(x.split('-')[1]))\n    df['gameclock']=[ pd.Timedelta(val).total_seconds() for val in df['GameClock']]\n    return df","459f73f3":"rusher_df=process(rusher_df)","1745fed0":"rusher_df=rusher_df.dropna()","f5ba6256":"def feature(df):\n    features=pd.DataFrame(df,columns=['X', 'Y', 'S', 'A', 'Dis','Dir','YardLine', 'Quarter',\n       'gameclock', 'Down', 'Distance','HomeScoreBeforePlay', 'VisitorScoreBeforePlay', 'DefendersInTheBox','PlayerHeight',\n       'PlayerWeight','Temperature', 'Humidity', 'Team_home', 'stadiumtype', 'weather','PlayDirection_right',\n       'OffenseFormation_ACE',\n       'OffenseFormation_I_FORM', 'OffenseFormation_JUMBO',\n       'OffenseFormation_PISTOL', 'OffenseFormation_SHOTGUN',\n       'OffenseFormation_SINGLEBACK', 'OffenseFormation_WILDCAT', 'C', 'CB', 'DB',\n       'DE', 'DL', 'DT', 'FB', 'FS', 'G', 'HB', 'ILB', 'LB', 'MLB', 'NT', 'OG',\n       'OLB', 'OT', 'QB', 'RB', 'S_position', 'SAF', 'SS', 'T', 'TE', 'WR',\"rusherTeamScore\",\"defenceTeamScore\",\"rusherTeamScore\",\"diffScore\",'team_yards',\"yardsToTouchdown\"])\n    return features\n    \n\n                      ","57b0a59c":"features=feature(rusher_df)","28056103":"train_mean=features.mean(axis=0)\ntrain_mean","6c077de9":"train_std=features.std(axis=0)\ntrain_std","3db4e7b9":"def normalize(features):\n    X=(features-train_mean)\/train_std\n    return X","1b072578":"X=normalize(features)","aac23091":"target=pd.Series(rusher_df['Yards'])","19930091":"train_X,test_X,train_y,test_y=train_test_split(X,target,test_size=0.2)","e8333bf3":"features.shape","84100999":"search_params = {\n    'n_estimators'      : [300],\n    'max_features'      : [3,10,20,40,'auto'],\n    #'random_state'      : [1],\n    #'n_jobs'            : [1],\n    #'min_samples_split' : [10, 20, 30],\n    'max_depth'         : [3]\n}\n \ngsr = GridSearchCV(\n    RFC(),\n    search_params,\n    cv = 3,\n    n_jobs = -1,\n    verbose=True\n)\n \ngsr.fit(train_X, train_y)","6c9697e5":"print(gsr.best_score_)\nprint(gsr.best_estimator_)\nprint(gsr.best_params_)","f45e3110":"def train_predict(X,target):\n    clf = gsr.best_estimator_\n    clf.fit(X, target)\n    return clf\n    ","0db4f477":"clf=train_predict(train_X,train_y)","ad0f1f81":"score_test=np.array([(i >= test_y)*1 for i in range(-99,100)])","ac4de029":"pred_y=clf.predict(test_X)","f25bd7ff":"from scipy.stats import norm ","d945547f":"yard = np.arange(-99, 100) \npred_prob = [norm.cdf(yard, loc=i, scale=target.std()) for i in pred_y] \npred_prob","12906a7e":"#score=np.array([(i >= pred_y)*1 for i in range(-99,100)])","75ca74ed":"c=((pred_prob - score_test.T)**2).sum().sum()\/(199*len(pred_prob))\nc","1bdad0c4":"#train_df=rusher_df.iloc[:0,:]","02cb9724":"#yard=['Yards' + str(i) for i in range(-99,100)]","9b651763":"for (test_df, sample_prediction_df) in tqdm(iter_test):\n    new_df=test_df.groupby(['PlayId','Position']).count()\n    position_count=new_df['GameId'].unstack().fillna(0).astype(int)\n    test_df=test_df.merge(position_count, on='PlayId')\n    test_df=test_df.rename(columns={'S_x':'S','S_y':'S_position'})\n    test_df=test_df[test_df['NflId']==test_df['NflIdRusher']]\n    test_df = test_df.merge(team_yards_df,on='Team',how=\"left\")\n    # \u653b\u6483\u30c1\u30fc\u30e0\u306e\u5f97\u70b9\n    test_df.loc[test_df[\"Team\"]==\"home\", \"rusherTeamScore\"] = test_df[\"HomeScoreBeforePlay\"]\n    test_df.loc[test_df[\"Team\"]==\"away\", \"rusherTeamScore\"] = test_df[\"VisitorScoreBeforePlay\"]\n    # \u5b88\u5099\u30c1\u30fc\u30e0\u306e\u5f97\u70b9\n    test_df.loc[test_df[\"Team\"]==\"home\", \"defenceTeamScore\"] = test_df[\"VisitorScoreBeforePlay\"]\n    test_df.loc[test_df[\"Team\"]==\"away\", \"defenceTeamScore\"] = test_df[\"HomeScoreBeforePlay\"]\n    # \u5f97\u70b9\u5dee\n    test_df.loc[:, \"diffScore\"] = test_df[\"rusherTeamScore\"] - test_df[\"defenceTeamScore\"]\n    test_df[\"yardsToTouchdown\"] = test_df[\"YardLine\"]\n    test_df.loc[test_df[\"PossessionTeam\"] == test_df[\"FieldPosition\"], \"yardsToTouchdown\"] = 100-test_df[\"YardLine\"]\n    test_df=process(test_df)\n    test_df=test_df.fillna(0)\n    test_feature=feature(test_df)\n    test_feature=test_feature.fillna(0)\n    test_X=normalize(test_feature)\n    pred_y=clf.predict(test_X)\n    pred_y=np.round(pred_y)\n    yard = np.arange(-99, 100) \n    pred_prob =norm.cdf(yard, loc=pred_y[0], scale=target.std()) \n    sample_prediction_df.iloc[0,:]=pred_prob\n    env.predict(sample_prediction_df)","35f48734":"sample_prediction_df","6724360a":"env.write_submission_file()","680d5dec":"import os\nprint([filename for filename in os.listdir('\/kaggle\/working') if '.csv' in filename])","df5e48f6":"# \u4e88\u6e2c\u7d50\u679c","30251830":"### \u30c1\u30e5\u30fc\u30cb\u30f3\u30b0","11db70fc":"## \u30dd\u30b8\u30b7\u30e7\u30f3\u6bce\u306e\u4eba\u6570\u3092\u6570\u3048\u308b","76bacb6f":"# \u524d\u51e6\u7406","d9a34c2b":" # \u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f","4a456ae0":"## Yards\u306e\u7d2f\u7a4d\u78ba\u7387\u5206\u5e03\u3092\u898b\u308b","ede9f3bd":"## \u30c0\u30df\u30fc\u5909\u6570\u5316\u3001\u30ea\u30b9\u30c8\u5316\u3001\u8eab\u9577\u306e\u5358\u4f4d\u5909\u63db","6edb99c3":"## RandomForest\u3067\u8a13\u7df4","45ddc1bc":" ## PlayId\u3068\u30dd\u30b8\u30b7\u30e7\u30f3\u3054\u3068\u306b\u6570\u3048\u308b","b049c36f":"# \u30e2\u30b8\u30e5\u30fc\u30eb\u5c0e\u5165","a10a6274":"# \u8aac\u660e\u5909\u6570\u306e\u5b9a\u7fa9","b431af8a":"# \u4e88\u6e2c","fdd57872":"## \u30dc\u30fc\u30eb\u3092\u6301\u3063\u3066\u3044\u308bRusher\u306e\u307f\u306e\u30c7\u30fc\u30bf\u306b\u7d5e\u308b","1d667983":"## \u6b63\u898f\u5316","cb235a33":"# \u30e2\u30c7\u30eb\u306e\u7cbe\u5ea6\u306e\u78ba\u8a8d"}}