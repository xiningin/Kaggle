{"cell_type":{"99d415f9":"code","0f2f977d":"code","ec036aca":"code","27729f10":"code","b205d384":"code","cc209c75":"code","8944e2be":"code","7626129b":"code","93accdcf":"code","1af78f2d":"code","890ff3a1":"code","ba483bfe":"code","9debdf8b":"code","d4d1f9ac":"code","e6e8e842":"code","12ece75a":"code","0a58e38d":"code","32afc128":"code","afed7f7d":"code","56fa1e3a":"code","2a1e8efa":"code","d35b6617":"code","01ef1dc8":"code","7838f2ac":"code","9697f279":"code","121cd1a1":"code","e590da42":"code","9ba91bf0":"code","c6976860":"code","38f30cdc":"code","3244149b":"markdown","f79f8257":"markdown"},"source":{"99d415f9":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt \nimport seaborn as sns\n%matplotlib inline","0f2f977d":"train_df = pd.read_csv('..\/input\/rossmann-store-sales\/train.csv', low_memory=False, parse_dates=['Date'])\nstore_df = pd.read_csv('..\/input\/rossmann-store-sales\/store.csv')\nmerged_df = train_df.merge(store_df, left_on='Store', right_on='Store')\nmerged_df[:5]","ec036aca":"train_df.info()","27729f10":"store_df.head(5)","b205d384":"merged_df.describe()","cc209c75":"merged_df.info()","8944e2be":"store_df.info()","7626129b":"#STORE\nax= sns.lineplot( y=store_df['Store'],x=store_df.index)\nax.set_xlabel('Index')\nax.set_title('Store values')","93accdcf":"#StoreType pie\nstore_types = store_df['StoreType'].value_counts().sort_values(ascending=False)\nax= store_types.plot.pie(autopct=\"%.1f%%\",startangle=90, figsize=(10,10))\nax.set_title('StoreType pie chart')","1af78f2d":"#Assortment pie\nassortments = store_df['Assortment'].value_counts().sort_values(ascending=False)\nax=assortments.plot.pie(autopct=\"%.1f%%\",startangle=90, figsize=(10,10))\nax.set_title('Assortment pie chart')","890ff3a1":"#CompetitionDistance histogram\nfig, ax = plt.subplots(figsize=(15,5))\ng = sns.histplot(data=store_df, x='CompetitionDistance',ax=ax)\ng.set_title('CompetitionDistance Histogram')","ba483bfe":"#CompetitionOpenSinceYear histogram\nfig, ax = plt.subplots(figsize=(15,5))\ng = sns.histplot(data=store_df, x='CompetitionOpenSinceYear',ax=ax)\ng.set_title('CompetitionOpenSinceYear Histogram')","9debdf8b":"# Promo2 pie\npromo2s = store_df['Promo2'].value_counts().sort_values(ascending=False)\nax = promo2s.plot.pie(autopct=\"%.1f%%\",startangle=90, figsize=(10,10))\nax.set_title('Promo2 Pie chart')","d4d1f9ac":"# Promo2SinceYear hist\nfig, ax = plt.subplots(figsize=(15,5))\ng = sns.histplot(data=store_df, x='Promo2SinceYear',ax=ax,discrete=True)\ng.set_title('Promo2SinceYear Histogram')","e6e8e842":"#PromoInterval hist\npromo_intervals = store_df['PromoInterval'].value_counts().sort_values(ascending=False)\nax = promo_intervals.plot.pie(autopct=\"%.1f%%\",startangle=90, figsize=(10,10))\nax.set_title('PromoInterval pie chart')","12ece75a":"#Date lineplot\nax =train_df['Date'].plot.line(title='Date values')\nax.set_xlabel('Index')\nax.set_ylabel('Date')","0a58e38d":"#DayOfWeek pie\nday_of_weeks = train_df['DayOfWeek'].value_counts().sort_values(ascending=False)\nax = day_of_weeks.plot.pie(autopct=\"%.1f%%\",startangle=90, figsize=(10,10))\nax.set_title('DayOfWeek pie chart')","32afc128":"#Sales hist\nfig, ax = plt.subplots(figsize=(15,5))\ng = sns.histplot(data=merged_df, x='Sales',ax=ax)\nax.set_yscale('log')\nax.set_title('Sales Histogram')","afed7f7d":"#Customers hist\nfig, ax = plt.subplots(figsize=(15,5))\ng = sns.histplot(data=merged_df, x='Customers',ax=ax)\nax.set_yscale('log')\nax.set_title('Customers Histogram')","56fa1e3a":"#Open pie\nopens = train_df['Open'].value_counts().sort_values(ascending=False)\nax = opens.plot.pie(autopct=\"%.1f%%\",startangle=90, figsize=(10,10))\nax.set_title('Open pie chart')","2a1e8efa":"#Promo pie\npromos = train_df['Promo'].value_counts().sort_values(ascending=False)\nax = promos.plot.pie(autopct=\"%.1f%%\",startangle=90, figsize=(10,10))\nax.set_title('Promo pie chart')","d35b6617":"#StateHoliday pie\nfig, ax = plt.subplots(figsize=(7,7))\nstate_holidays = train_df['StateHoliday'].value_counts().sort_values(ascending=False)\n_, labels, pct_texts = plt.pie(state_holidays, labels=state_holidays.keys(), autopct=\"%.1f%%\", \n                          startangle=160, rotatelabels=True, pctdistance=0.75)\nfor label, pct_text in zip(labels, pct_texts):\n    pct_text.set_rotation(label.get_rotation())\nplt.title('State Holiday pie chart')\nplt.axis('equal')\nplt.tight_layout()\nplt.show()","01ef1dc8":"#SchoolHoliday pie\nschool_holidays=train_df['SchoolHoliday'].value_counts().sort_values(ascending=False)\nax = school_holidays.plot.pie(autopct=\"%.1f%%\", figsize=(10,10), startangle=90)\nax.set_title('SchoolHoliday pie chart')","7838f2ac":"corr = merged_df.corr()\nmask = np.zeros_like(corr)\nmask[np.triu_indices_from(mask)] = True\nnp.fill_diagonal(mask, False)\nsns.heatmap(corr,linewidths=.5,cmap=\"Paired\",mask=mask)","9697f279":"med_distance = merged_df['CompetitionDistance'].median()\ncompetition_distance_df = merged_df.groupby([merged_df['CompetitionDistance']>med_distance]).groups\nlower_med, higher_med = competition_distance_df[False], competition_distance_df[True]\nprint(f\"lower distance = {merged_df.loc[lower_med]['Customers'].mean()}\\nhigher distance = {merged_df.loc[higher_med]['Customers'].mean()}\")\n# => T\u1ea1i n\u01a1i c\u00e1ch xa shop \u0111\u1ed1i th\u1ee7 th\u00ec s\u1ed1 kh\u00e1ch h\u00e0ng trung b\u00ecnh m\u1ed7i ng\u00e0y < n\u01a1i g\u1ea7n shop \u0111\u1ed1i th\u1ee7\n# c\u00f3 th\u1ec3 t\u1ea1i nh\u1eefng n\u01a1i n\u00e0y t\u1eadp trung \u0111\u00f4ng d\u00e2n c\u01b0 h\u01a1n","121cd1a1":"# StateHoliday vs Open\nstate_holidays = merged_df.groupby('StateHoliday')['Open']\nstate_holiday_open_rates = state_holidays.sum()\/state_holidays.count()\nstate_holiday_open_rates.plot.line()\n# c\u00e1c ng\u00e0y l\u1ec5 a,b,c h\u1ea7u nh\u01b0 l\u00e0 ngh\u1ec9","e590da42":"# T\u00e1c \u0111\u1ed9ng c\u1ee7a c\u00e1c nh\u00e0 thu\u1ed1c c\u00f3 tham gia Promo2 \u0111\u1ebfn v\u1edbi doanh thu \nfig, ax = plt.subplots(figsize=(15,10))\nsns.boxplot(x=\"Promo2\", y=\"Sales\", data=merged_df, ax=ax)\n#=> Nh\u1eefng nh\u00e0 thu\u1ed1c tham gia Promo2 c\u00f3 doanh thu th\u1ea5p h\u01a1n nh\u1eefng nh\u00e0 thu\u1ed1c kh\u00f4ng tham gia, c\u00f3 th\u1ebb\n# l\u00e0 v\u00ec nh\u1eefng nh\u00e0 thu\u1ed1c n\u00e0y \u0111\u00e3 c\u00f3 doanh thu r\u1ea5t th\u1ea5p t\u1eeb l\u00fac b\u1eaft \u0111\u1ea7u","9ba91bf0":"# DayOfWeek vs Sales\nfig, ax = plt.subplots(figsize=(15,10))\nsns.barplot(x=\"DayOfWeek\", y=\"Sales\", data=merged_df)\n# => Sunday sales is low","c6976860":"#Promo vs Sales\nsns.boxplot(data=merged_df[merged_df['Open']==1],x='Promo',y='Sales')\n# => Promo helps increase sales","38f30cdc":"#Customers vs Sales\nsns.relplot(data=merged_df, x='Customers',y='Sales')\n# => ...","3244149b":"### Correlation","f79f8257":"## Visualization"}}