{"cell_type":{"01321e8c":"code","03a8c9d0":"code","19be2c8e":"code","61d49fcf":"code","3056fd8a":"code","937ac6d5":"code","fac93f36":"code","8dc3e2ba":"code","b3e341a3":"code","7c622c7b":"code","501139a5":"code","48de3f3d":"code","16c8c09d":"code","5f35018c":"code","7d8b32b1":"code","20307076":"code","64cb569a":"code","e4aaba33":"code","4eebfa05":"code","04a37dc8":"code","5182fff9":"code","bde9e083":"code","2828f927":"code","a4443771":"code","643a3efb":"code","153e92b3":"markdown","76879ed9":"markdown","782e7a71":"markdown","fb1f8b17":"markdown","c84846c7":"markdown","2f130271":"markdown","b67003ec":"markdown","e1794153":"markdown","c652eb98":"markdown","90471fe3":"markdown","47853124":"markdown","2581a65a":"markdown","4608a86c":"markdown","07ce7942":"markdown","a408914e":"markdown","1ee55fad":"markdown","c8bd793c":"markdown","d3fdc491":"markdown"},"source":{"01321e8c":"# Some Important Libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Preprocessing\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split, GridSearchCV\n\n# Evalouation\nfrom sklearn.metrics import classification_report\n\n# Algorithms\nfrom sklearn.linear_model import LogisticRegression\nfrom xgboost import XGBClassifier\n\n# Prevent Warnings\nimport warnings\nwarnings.filterwarnings('ignore')","03a8c9d0":"df = pd.read_csv('..\/input\/churn-modelling\/Churn_Modelling.csv')\ndf.head()","19be2c8e":"# How many data?\ndf.shape","61d49fcf":"# Have a look on data\ndf.info()","3056fd8a":"# Some statistics about data\ndescription = df.describe().loc[['mean', 'min', 'max'], :]\nnp.round(description, 2)","937ac6d5":"plt.figure(figsize = (16, 9), dpi = 200)\nsns.heatmap(df.corr(), cmap = 'mako', annot = True)\nplt.show()","fac93f36":"# How many male & female\nplt.figure(dpi = 90)\nsns.histplot(df.Gender, color = 'teal', alpha = 0.6, shrink = 0.9)\nplt.show()","8dc3e2ba":"# How many active & passive member\nplt.figure(dpi = 90)\nactive = df.IsActiveMember.map({1: 'Active', 0: 'Passive'})\nsns.histplot(active, color = 'teal', alpha = 0.6, shrink = 0.9)\nplt.show()","b3e341a3":"# Age Distribution\nplt.figure(dpi = 90)\nsns.distplot(df.Age, color = 'teal')\nplt.show()","7c622c7b":"# Salary Distribution\nplt.figure(dpi = 90)\nsns.distplot(df.EstimatedSalary, color = 'teal')\nplt.show()","501139a5":"# How many male & female from each country\nplt.figure(dpi = 90)\nsns.histplot(df, x = 'Geography', hue = 'Gender', palette = 'mako', alpha = 0.6, shrink = 0.9)\nplt.show()","48de3f3d":"# Age distribution based on country\nfig = sns.FacetGrid(df, aspect = 5, hue = 'Geography', palette = 'mako')\nfig.map(sns.kdeplot, 'Age', shade = True, alpha = 0.3)\nfig.add_legend()\nplt.show()","16c8c09d":"# Age distribution based on country\nfig = sns.FacetGrid(df, aspect = 5, hue = 'Geography', palette = 'mako')\nfig.map(sns.kdeplot, 'EstimatedSalary', shade = True, alpha = 0.3)\nfig.add_legend()\nplt.show()","5f35018c":"# Swarm Plot\nplt.figure(dpi = 90)\nsns.scatterplot(df.Age, df.EstimatedSalary, color = 'teal', alpha = 0.3)\nplt.show()","7d8b32b1":"def clean(df):\n    # Drop irelative features\n    result = df.drop(['RowNumber', 'CustomerId', 'Surname'], axis = 1)\n    \n    # One Hot Encoding\n    result = pd.get_dummies(result, columns = ['Geography', 'Gender'], drop_first = True)\n    \n    return result","20307076":"clean_df = clean(df)\nclean_df.head()","64cb569a":"X = clean_df.drop('Exited', axis = 1)\nY = clean_df['Exited']\nx_train, x_test, y_train, y_test = train_test_split(X, Y, random_state = 10)","e4aaba33":"# Fearure Scaling\nstdScale = StandardScaler()\nx_train = stdScale.fit_transform(x_train)\nx_test = stdScale.transform(x_test)","4eebfa05":"xgb = XGBClassifier(random_state = 10)\nxgb.fit(x_train, y_train)","04a37dc8":"grid = {\"C\": np.logspace(-3,3,7), \"penalty\": [\"l1\", \"l2\"]}\n\nlogReg = LogisticRegression()\ngridSearch = GridSearchCV(logReg, grid)\ngridSearch.fit(x_train, y_train)\n\ngridSearch.best_params_","5182fff9":"logReg = LogisticRegression(C = 0.01, penalty = 'l2')\nlogReg.fit(x_train, y_train)","bde9e083":"y_pred = xgb.predict(x_train)\nprint(classification_report(y_pred, y_train))","2828f927":"y_pred = xgb.predict(x_test)\nprint(classification_report(y_pred, y_test))","a4443771":"y_pred = logReg.predict(x_train)\nprint(classification_report(y_pred, y_train))","643a3efb":"y_pred = logReg.predict(x_test)\nprint(classification_report(y_pred, y_test))","153e92b3":"### Age\n- **Mean** age of people is about <span style=\"color: teal\">39<\/span>\n\n- **The youngest** person is <span style=\"color: teal\">18<\/span> years old\n\n- **The oldest** person is <span style=\"color: teal\">92<\/span> years old\n\n### Estimated Salary\n- **Mean** estimated salary of people is about <span style=\"color: teal\">$100090<\/span>\n\n- **Max** estimated salary of people is about <span style=\"color: teal\">$199992<\/span>\n\n- **Min** estimated salary of people is about <span style=\"color: teal\">$12<\/span>\n\n### Notes\n- 20% of people exited\n- 71% of people has credit card","76879ed9":"### Visualization","782e7a71":"### EDA","fb1f8b17":"### Data Preprocessing","c84846c7":"### Prepare Data for Machine learning","2f130271":"### Train model","b67003ec":"**KNN Evaluation**","e1794153":"**Logistic Regression Evaluation**","c652eb98":"- Estimated Salary is like **Uniform** Distibution","90471fe3":"### Importing the libraries","47853124":"- Age is like **Normal** Distibution with **positive skew**","2581a65a":"### Test the model and show the metrics","4608a86c":"- Males are more than Females","07ce7942":"**1. K Nearest Neighbor**","a408914e":"- There is no **Missing-Value** in data.\n","1ee55fad":"- There is no relation betwwen Age & Salary","c8bd793c":"**XGBOOST** is better for our data","d3fdc491":"### Load and Prepare Data"}}