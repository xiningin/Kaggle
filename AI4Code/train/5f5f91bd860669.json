{"cell_type":{"361fa149":"code","01d1d732":"code","772e7549":"code","4f8043d7":"code","aad5d7ed":"code","f2557298":"code","4e1734bc":"code","31827079":"code","599f0df4":"code","a0e5b021":"code","ba69027c":"code","fa713ac6":"code","a5c357e3":"code","f62739b7":"code","9845158e":"code","eb3ed35e":"code","4a696394":"code","ba0e27e8":"code","883f097a":"code","86f2fa11":"code","ec33276b":"code","3c5b4260":"code","e425b426":"code","cf916291":"code","85ce91ea":"code","aceb287c":"code","daa00a09":"code","aa66d813":"markdown","caaf94b4":"markdown","7af6acee":"markdown","17c19218":"markdown","6329cb5a":"markdown","0fcb8051":"markdown","1532603e":"markdown"},"source":{"361fa149":"#Import Libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom collections import Counter","01d1d732":"train = pd.read_csv('..\/input\/pasc-data-quest-20-20\/doctor_train.csv')\ntest = pd.read_csv('..\/input\/pasc-data-quest-20-20\/doctor_test.csv')\n\n\n#train.info()\n#test.info()\n\ny = train['Y']\n\ntrain = train.drop(['Y'], axis =1)","772e7549":"dataset = pd.concat([train, test])\ndataset.info()\n\ndataset.isna().sum()\n","4f8043d7":"dataset.drop(['ID'], axis = 1, inplace = True)\n\ndataset.nunique()","aad5d7ed":"dataset.loc[ dataset['age'] <= 25, 'age'] = 0\ndataset.loc[(dataset['age'] > 25) & (dataset['age'] <= 32), 'age'] = 1\ndataset.loc[(dataset['age'] > 32) & (dataset['age'] <= 40), 'age'] = 2\ndataset.loc[(dataset['age'] > 40) & (dataset['age'] <= 48), 'age'] = 3\ndataset.loc[(dataset['age'] > 48) & (dataset['age'] <= 60), 'age'] = 4\ndataset.loc[ dataset['age'] > 60, 'age'] = 5\n","f2557298":"profession= pd.get_dummies(dataset['Profession'])\nprofession.sum()\n\ndataset = pd.concat([dataset, profession], axis = 1)\ndataset.drop(['Profession'], axis =1, inplace = True)","4e1734bc":"dataset['edu'].replace(\"unknown\", np.NaN, inplace = True)\ndataset['edu'].replace('primary', 1, inplace = True)\ndataset['edu'].replace('secondary', 2, inplace = True)\ndataset['edu'].replace('tertiary', 3, inplace = True)","31827079":"dataset['Status'].replace('single', 0, inplace = True)\ndataset['Status'].replace('married', 1, inplace= True)\ndataset['Status'].replace('divorced', -1, inplace = True)","599f0df4":"dataset['Irregular'].replace('no', 0, inplace = True)\ndataset['Irregular'].replace('yes', 1, inplace = True)","a0e5b021":"sns.distplot(dataset['Money'])","ba69027c":"dataset['Money'] = dataset['Money'].fillna(dataset['Money'].sum()\/30403)\ndataset['Money'] = np.cbrt(dataset['Money'])","fa713ac6":"dataset['residence'].nunique()\ndataset['residence'].replace('no', 0, inplace = True)\ndataset['residence'].replace('yes', 1, inplace = True)","a5c357e3":"dataset['prev_diagnosed'].replace('no', 0, inplace = True)\ndataset['prev_diagnosed'].replace('yes', 1, inplace = True)","f62739b7":"month = pd.get_dummies(dataset['Month'])\ndataset = pd.concat([dataset, month], axis = 1)\ndataset.drop([\"Month\"], axis = 1, inplace = True)\n","9845158e":"dataset['communication'].replace('cellular', 1, inplace = True)\ndataset['communication'].replace('telephone', 0, inplace = True)\ndataset['communication'].replace('unknown', -1, inplace = True)","eb3ed35e":"dataset.loc[dataset['last_visit'] != -1, 'last_visit'] = 1\ndataset.loc[dataset['last_visit'] == -1, 'last_visit'] = 0","4a696394":"dataset['side_effects'].replace('unknown', 0, inplace = True)\ndataset['side_effects'].replace('other', 0, inplace = True)\ndataset['side_effects'].replace('success', 1, inplace = True)\ndataset['side_effects'].replace('failure', -1, inplace = True)\n","ba0e27e8":"dataset.drop(['Irregular', 'cured_in', 'unknown'], axis = 1, inplace = True)","883f097a":"dataset['age'].fillna(dataset['age'].mean(), inplace = True)\ndataset['edu'].fillna(2, inplace= True)\ndataset['residence'].fillna(0, inplace = True)\ndataset['prev_diagnosed'].fillna(0, inplace = True)","86f2fa11":"dataset['profession'] = dataset['admin.'] + dataset['management'] + dataset['retired'] + dataset['student'] + dataset['unemployed']\n\ndataset.drop(['admin.',    'blue-collar',   'entrepreneur',\n            'housemaid',     'management',        'retired',  'self-employed',\n             'services',        'student',     'technician',     'unemployed',], axis = 1, inplace= True)","ec33276b":"dataset['Time'] = np.log(dataset['Time'])\ndataset.loc[(dataset['Time'] == np.inf), 'Time'] = 0\ndataset.loc[(dataset['Time'] == -np.inf), 'Time'] = 0","3c5b4260":"dataset.describe()\ndataset.info()\ndataset.isna().sum()","e425b426":"train = dataset.iloc[:28196, :]\ntest = dataset.iloc[28196:, :]","cf916291":"from lightgbm import LGBMClassifier\nlgc = LGBMClassifier(class_weight = {'no':0.11, 'yes': 0.89}, objective = 'binary', learning_rate = 0.035)\nlgc.fit(train, y)\ny_pred_lgc = lgc.predict(test)","85ce91ea":"for i in range(dataset.shape[1]):\n    print(dataset.columns[i], ':  ', lgc.feature_importances_[i])","aceb287c":"Counter(y_pred_lgc)","daa00a09":"y_pred_lgc = pd.DataFrame(y_pred_lgc)\ny_pred_lgc.to_csv('lgc.csv')","aa66d813":"# **Spliting data back to train and test set**","caaf94b4":"# **Converting output to csv file**","7af6acee":"# **Preprocessing dataset**","17c19218":"# **Fitting LightGBM Classifier**","6329cb5a":"# **Loading Dataset**","0fcb8051":"# **Imports**","1532603e":"**Checking output**"}}