{"cell_type":{"c402414d":"code","3cd53ad0":"code","5a89205a":"code","c5a75da8":"code","66998268":"code","e9942507":"code","0ad6433a":"code","b7b26cf2":"code","66202156":"code","6755a077":"code","7d9add39":"code","555f79b4":"code","099474a5":"code","efe15a41":"code","7a7e26b4":"code","c4e7968e":"code","813bd37c":"code","524d1096":"code","95902de7":"code","f7af6f14":"code","6ee187e5":"code","9d4824e0":"code","344281dd":"markdown","ce86c8d9":"markdown","385c6213":"markdown","973cb7a0":"markdown","28c5203a":"markdown","c400033d":"markdown","9843d56c":"markdown","9e5eab9e":"markdown","65b5e8ba":"markdown","3226455a":"markdown","2aee3000":"markdown","51f5ab4f":"markdown","c066506d":"markdown","6b2f11df":"markdown","19524500":"markdown","72e4256e":"markdown","39ecef5d":"markdown","5bc698f1":"markdown","71303938":"markdown","bbb2a883":"markdown","2fe6f3a2":"markdown","7b8943e0":"markdown","095086e2":"markdown","6f88e156":"markdown","653c5b59":"markdown","f8d461a1":"markdown","3f746eaa":"markdown","b80dfcf7":"markdown","b08df984":"markdown","4af60cd6":"markdown"},"source":{"c402414d":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","3cd53ad0":"df = pd.read_csv(\"\/kaggle\/input\/forbes-celebrity-100-since-2005\/forbes_celebrity_100.csv\")","5a89205a":"df.columns","c5a75da8":"df.head(10)","66998268":"df.describe()","e9942507":"df.info()","0ad6433a":"def barplotall(variable):\n    var = df[variable] ## get each value\n    varcount = var.value_counts() ## count each value\n    \n    ## visualization\n    plt.figure(figsize=(9,3))\n    plt.bar(varcount.index,varcount)\n    plt.xticks(varcount.index,varcount.index.values)\n    plt.ylabel(\"Count\")\n    plt.title(variable)\n    plt.show()\n    print(f\"Count of {variable} variable : \\n{varcount}\")","b7b26cf2":"categorical_features =  [\"Name\",\"Category\"]\nfor i in categorical_features:\n    barplotall(i)","66202156":"def histoall(variable):\n    plt.figure(figsize=(9,3))\n    plt.hist(df[variable])\n    plt.xlabel(variable)\n    plt.ylabel(\"Count\")\n    plt.title(f\"{variable} Distribution with Histogram\")\n    plt.show()","6755a077":"numerical_features = [\"Pay (USD millions)\",\"Year\"]\nfor i in numerical_features:\n    histoall(i)","7d9add39":"df[[\"Year\",\"Pay (USD millions)\"]].groupby(\"Year\",as_index=False).mean().sort_values(by=\"Pay (USD millions)\",ascending=False)","555f79b4":"df[[\"Category\",\"Pay (USD millions)\"]].groupby(\"Category\",as_index=False).mean().sort_values(by=\"Pay (USD millions)\",ascending=False)","099474a5":"features_list = [\"Pay (USD millions)\",\"Year\"]\nsns.heatmap(df[features_list].corr(),annot=True,fmt=\".2f\")\nplt.show()","efe15a41":"df[\"Category_nums\"] = [1 if i == \"Musicians\" else 2 if i == \"Athletes\" else 3 if i == \"Personalities\" else 4 if i == \"Actors\" or \"Actresses\" or \"Television actors\" or \"Television actresses\" else 5 for i in df[\"Category\"]]\ndf[\"Category_nums\"].head()","7a7e26b4":"g = sns.factorplot(x=\"Category_nums\",y=\"Pay (USD millions)\",data=df,kind=\"bar\",size=6)\ng.set_ylabels(\"Pay\")\nplt.show()","c4e7968e":"g = sns.factorplot(x=\"Year\",y=\"Pay (USD millions)\",data=df,kind=\"bar\",size=6)\ng.set_ylabels(\"Pay\")\nplt.show()","813bd37c":"df[\"first_names\"] = df[\"Name\"]","524d1096":"num_list = [1,2,3,4,5,6,7,8,9,0]\nword_list = [\"and\",\"the\",\"of\",\".\"]\nfor i in df[\"first_names\"]:\n    for w in word_list:\n        if str(w) in i:\n            df[\"first_names\"].replace(i,np.nan)\n    for j in num_list:\n        if str(j) in i:\n            df[\"first_names\"].replace(i,np.nan)\ndf[\"first_names\"].dropna(inplace=True)\ndf[\"first_names\"].head(10)","95902de7":"f_names = []\nfor i in df[\"first_names\"]:\n    f_names.append(i.split()[0])","f7af6f14":"df[\"first_names\"] = f_names\ndf[\"first_names\"].head()","6ee187e5":"fig, ax = plt.subplots(figsize=(30,3))\nsns.countplot(x=\"first_names\",data=df,ax=ax)\nplt.xticks(rotation=90)\nplt.show()","9d4824e0":"pd.value_counts(df[\"first_names\"])","344281dd":"* We will append our first names to our data.","ce86c8d9":"## Univariate Variable Analysis <a id=\"3\"><\/a>\n* Categorical Variable : Variables with over 2 categories. (Name,Category)\n* Numerical Variable : Variables with numeric values. (Pay,Year)","385c6213":"* They have small correlation as 0.20","973cb7a0":"* It's too hard to understand the barplot beacuse things are too mixed.\n* But our variable counts will help us.\n* What we understand here is;\n    1. Musicians are majority in our category data.\n    1. Phil Mickelson and Tiger Woods have been in the top 100 list for 16 years.","28c5203a":"* There are 1547 Pay features and 1547 Year features, and that means we have 1547 people.\n* Minimum Pay feature in our data is 1.5 USD Millions, and the maximum is 620 USD Millions.\n* Minimum Year feature in our data is 2005, while maximum is 2019; means that we have started getting a record in 2005, and the last record was in 2019.","c400033d":"## Load and Check Data <a id=\"1\"><\/a>","9843d56c":"* So Jennifer is the most used name.","9e5eab9e":"### Year - Pay","65b5e8ba":"* That's a mess over there :). Because of this, we will count our data.","3226455a":"### Correlations between Pay and Year <a id=\"8\"><\/a>","2aee3000":"### Category - Pay","51f5ab4f":"* As we can see above, the mean of earnings raised year by year.","c066506d":"* Lastly, we will visualize them.","6b2f11df":"* From these histograms we can understand that;\n    1. Most of our celebrities earn between 0-100 USD Millions.\n    2. Actually there might not be 100 people in the list, sometimes it can raise and fall.","19524500":"### Category - Pay <a id=\"9\"><\/a>\n* After this point, I want to turn my category features to numerical values for easier visualization.\n* We will not enumerate all categories.","72e4256e":"1. [Load and Check Data](#1)\n1. [Variable Description](#2)\n1. [Univariate Variable Analysis](#3)\n    * [Categorical Variable Analysis](#4)\n    * [Numerical Variable Analysis](#5)\n1. [Basic Data Analysis](#6)\n1. [Visualization](#7)\n    * [Correlations between Pay and Year](#8)\n    * [Category - Pay](#9)\n    * [Year - Pay](#10)\n1. [Feature Engineering](#11)\n    * [First name extraction from Name feature](#12)","39ecef5d":"* Now we will extract the first names.","5bc698f1":"### First name extraction from Name feature <a id=\"12\"><\/a>","71303938":"# Forbes Top 100 since 2005 Data Analysis","bbb2a883":"## Basic Data Analysis <a id=\"6\"><\/a>","2fe6f3a2":"### Numerical Variable Analysis <a id=\"5\"><\/a>","7b8943e0":"# Conclusion\n* We made Forbes Top 100 data understandable in this notebook.\n* Would be nice if you comment your thoughts and upvote.","095086e2":"## Variable Description <a id=\"2\"><\/a>\n* Name : This feature tells us the person's full name.\n* Pay(USD millions) : This feature tells us the person's earn per year.\n* Year : This feature tells us the year our person showed up in Forbes top 100.\n* Category : This feature tells us the job or the field of our person.","6f88e156":"## Visualization <a id=\"7\"><\/a>","653c5b59":"### Year - Pay <a id=\"10\"><\/a>","f8d461a1":"* First we will find the non-name values.","3f746eaa":"* As we can see above, the directors and producers earn the most money in mean.","b80dfcf7":"* float64(1) : Pay (USD Millions)\n* object(2) : Name, Category\n* int64(1) : Year","b08df984":"### Categorical Variable Analysis <a id=\"4\"><\/a>","4af60cd6":"## Feature Engineering <a id=\"11\"><\/a>"}}