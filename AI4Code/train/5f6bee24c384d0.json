{"cell_type":{"d05fed23":"code","8a1116a5":"code","2535d329":"code","f539be8e":"code","074be85b":"code","e45d6341":"code","d9a4213d":"code","2db6914e":"code","4e06be06":"code","d5f54ed0":"code","3b82c018":"code","1a9c967a":"code","7d15d7eb":"code","fb1eb3e7":"code","0f4a9708":"code","654f769d":"code","4ad18a59":"code","f7c8650f":"code","8cb9170a":"code","fadb5e8d":"code","8e05d780":"code","973e229c":"code","09b813d5":"markdown","ca6e0d6b":"markdown","4b69920a":"markdown","fb4b474a":"markdown","b4ddf167":"markdown"},"source":{"d05fed23":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # visualization\nimport seaborn as sns #visualization \n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","8a1116a5":"# In this kernel a draft data analysis will be made using World Happiness Report 2017 data\ndata = pd.read_csv(\"..\/input\/2017.csv\")","2535d329":"data.columns","f539be8e":"data.info()","074be85b":"data.head(10)","e45d6341":"data.corr()","d9a4213d":"# correlation map\nf,ax = plt.subplots(figsize=(15,15))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt='.2f', ax=ax)\nplt.show()","2db6914e":"# line plot\ndata.Family.plot(kind='line',color='b',label='Family', linewidth=1, alpha=0.5, \ngrid=True, linestyle='-.')\ndata.Generosity.plot(color='r',label='Generosity', linewidth=1, alpha=0.5, \ngrid=True, linestyle=':')\nplt.legend(loc='upper right')    \nplt.xlabel('x axis')\nplt.ylabel('y label')\nplt.title('Family-Generosity')\nplt.show()\n","4e06be06":"# Scatter Plot\n# x= happiness score, y= family\ndata.plot(kind='scatter', x = 'Happiness.Score', y = 'Family', alpha = 0.3, color='red')\nplt.xlabel('Happiness Score')\nplt.ylabel('Family')\nplt.title('Happiness-Family Scatter Plot')\nplt.show()","d5f54ed0":"# Histogram\ndata.Freedom.plot(kind='hist', bins=50, figsize=(12,12))\nplt.show()","3b82c018":"data.Freedom.plot(kind='hist', bins=30)\nplt.clf()\n#we cannot see the plot due to clf()","1a9c967a":"dictionary = {'spain':'madrid', 'usa':'vegas'}\nprint(dictionary.keys())\nprint(dictionary.values())","7d15d7eb":"dictionary['spain'] = 'barcelona'    # update existing entry\nprint(dictionary)\ndictionary['france'] = 'paris'    # add new entry\nprint(dictionary)\ndel dictionary['spain']    # delete an entry\nprint(dictionary)\nprint('france' in dictionary)    # check if it is in dictionary or not\ndictionary.clear()    # clear all entries in dictionaries\nprint(dictionary)","fb1eb3e7":"del dictionary\nprint(dictionary)    # gives error since dictionary exists no more","0f4a9708":"data = pd.read_csv(\"..\/input\/2017.csv\")","654f769d":"series = data['Freedom']    #pandas series\nprint(type(series))\ndata_frame = data[['Happiness.Score']]    # pandas Dataframe\nprint(type(data_frame))","4ad18a59":"# comparison operators\nprint(data.Family.head())\nprint(data.Freedom.head())\nprint(data.Freedom[1:2] > data.Family[1:2])\nprint(data['Family'][1:2] != data['Freedom'][1:2])\n# Boolean Operators\nprint(True or False)\nprint(True and False)","f7c8650f":"# 1- Filtering Pandas DataFrame\nx = data['Happiness.Score']>7.5    # only 3 countries with happiness score over 7.5 \ndata[x]","8cb9170a":"# 2- Filtering with logical_and\ndata[np.logical_and(data['Family']>1.5, data['Freedom']>0.6)]    #8 countries with over both values","fadb5e8d":"# filtering with &\ndata[(data.Family > 1.5) & (data.Freedom > 0.6)]    # same result with the above code","8e05d780":"# stay in loop if condition is true\ni = 0\nwhile i != 5:\n    print('i: ', i)\n    i += 1\nprint('i is equal to 5')","973e229c":"# stay in loop if condition is true\nlis = [1,2,3,4,5]\nfor i in lis:\n    print('i: ',i)\nprint('')\n\n# enumerate index and value of list\nfor index,value in enumerate(lis):    # index-values in the list\n    print('index ',index, ': ', value)\nprint('')\n\n# We can use for loop to achive key and value of dictionary\ndictionary = {'spain':'madrid', 'france':'paris'}\nfor key,value in dictionary.items():    # items() returns key-value pairs in dictionary\n    print(key, ': ', value)\n\n# For pandas we can achieve index and value\nfor index,value in data[['Happiness.Score']][0:2].iterrows():\n    print(index, ': ', value)\n\n","09b813d5":"In this kernel a draft data analysis will be made using World Happiness Report 2017 data. This kernel has been prepared for only learning and practice purposes.","ca6e0d6b":"**While and For Loops**","4b69920a":"**MATPLOTL\u0130B**\n\nMatplot is a python library that help us to plot data. The easiest and basic plots are line, scatter and histogram plots.","fb4b474a":"**PANDAS**","b4ddf167":"**DICTIONARIES**"}}