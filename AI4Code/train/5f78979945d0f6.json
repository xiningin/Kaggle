{"cell_type":{"0470b232":"code","8513a4f1":"code","503047e7":"code","1e708450":"code","0ad4ddee":"code","48cbb211":"code","be9bb22a":"code","caa45a41":"code","53a0431d":"code","617b27e6":"code","8717aeeb":"code","c09b32dc":"code","767cb051":"code","205024a6":"code","406e26bb":"code","1f62eedb":"code","4d724166":"code","14b2aa88":"code","126433da":"code","8785c0e4":"code","950cb496":"code","90e3c3d2":"code","8490fc6f":"code","432efcde":"code","3252d487":"code","e886469c":"code","ed5b6379":"code","ab9ccb03":"code","b0f56669":"code","e93c6da2":"code","e3d0f18c":"code","8c0ba8b1":"code","6efd1a26":"code","727b5d6e":"code","11ae30d4":"code","7a28ae06":"code","71f5c052":"code","1c00bf9c":"code","64d9a96c":"code","585c45ac":"code","7e0d49c3":"code","352b1910":"code","7f362f0b":"code","393ee84c":"code","462ad505":"code","53870b3e":"code","d76b749c":"code","850c63f0":"code","2d587a9c":"code","c381e6f5":"code","4a257c6b":"code","8272cda2":"code","f47cc76f":"code","7a9c247b":"code","f046e663":"code","871bf0b1":"code","5a091bd9":"code","5860f000":"code","246ee0c3":"code","a28f168c":"code","d28b5a06":"code","0a63f9b4":"code","e49a1444":"code","80d60c03":"code","f559a09d":"code","808889fb":"code","6a25e36c":"code","6bf39973":"code","3e0e112a":"code","14ec753b":"code","d40d7ed0":"code","d27f3ea8":"code","5baa97f3":"code","b6cef2c6":"code","65159728":"code","42d224f3":"code","8f66b698":"code","b594be2f":"code","4fd543ba":"code","d81eb4d4":"code","e862676e":"code","f5e554d5":"code","91425923":"code","09add085":"code","2e34dd49":"code","cbceb22c":"code","b35a7c34":"code","85fbddcf":"code","b6fe0937":"code","0ea1af08":"code","b6ba4dfe":"code","0d9a4010":"code","4cbfcfe3":"code","fd7ba6f3":"code","18a67eaf":"code","b23a2f7d":"code","b5ae8146":"markdown","cf9d4db0":"markdown"},"source":{"0470b232":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm\nimport seaborn as sns\n\n%matplotlib inline\nsns.set(rc={'figure.figsize': [20, 20]}, font_scale=1.4)","8513a4f1":"df = pd.read_csv('..\/input\/thyroid-disease-data-set\/hypothyroid.csv')\ndf","503047e7":"df.head()","1e708450":"df.describe().T","0ad4ddee":"df.info()","48cbb211":"df","be9bb22a":"df[\"binaryClass\"].value_counts()","caa45a41":"df[\"binaryClass\"]=df[\"binaryClass\"].map({\"P\":0,\"N\":1})","53a0431d":"df[\"pregnant\"].value_counts()","617b27e6":"df=df.replace({\"t\":1,\"f\":0})","8717aeeb":"df","c09b32dc":"#df['target'].isnull().sum()","767cb051":"df['sex'].isnull().sum()","205024a6":"df[\"TBG\"].value_counts()","406e26bb":"del df[\"TBG\"]","1f62eedb":"df=df.replace({\"?\":np.NAN})","4d724166":"df.isnull().sum()","14b2aa88":"df[\"sex\"].value_counts()","126433da":"df=df.replace({\"F\":1,\"M\":0})","8785c0e4":"df[\"referral source\"].value_counts()","950cb496":"del df[\"referral source\"]","90e3c3d2":"df.info()","8490fc6f":"df[\"T3 measured\"].value_counts()","432efcde":"df[\"TT4 measured\"].value_counts()","3252d487":"df[\"FTI measured\"].value_counts()","e886469c":"df[\"TBG measured\"].value_counts()","ed5b6379":"df[\"binaryClass\"].value_counts()","ab9ccb03":"df.dtypes","b0f56669":"cols = df.columns[df.dtypes.eq('object')]\ndf[cols] = df[cols].apply(pd.to_numeric, errors='coerce')\ndf.dtypes","e93c6da2":"df.isnull().sum()","e3d0f18c":"df['T4U measured'].mean()","8c0ba8b1":"df['T4U measured'].fillna(df['T4U measured'].mean(), inplace=True)","6efd1a26":"df['sex'].fillna(df['sex'].mean(), inplace=True)","727b5d6e":"df['age'].fillna(df['age'].mean(), inplace=True)","11ae30d4":"from sklearn.impute import SimpleImputer\n\nimputer = SimpleImputer(strategy='mean')","7a28ae06":"df['TSH'] = imputer.fit_transform(df[['TSH']])","71f5c052":"df['T3'] = imputer.fit_transform(df[['T3']])","1c00bf9c":"df['TT4'] = imputer.fit_transform(df[['TT4']])","64d9a96c":"df['T4U'] = imputer.fit_transform(df[['T4U']])","585c45ac":"df['FTI'] = imputer.fit_transform(df[['FTI']])","7e0d49c3":"df.isnull().sum()","352b1910":"df","7f362f0b":"df.columns","393ee84c":"import seaborn as sns\n\n%matplotlib inline\nsns.set(rc={'figure.figsize': [8, 8]}, font_scale=1.2)","462ad505":"sns.distplot(df['age'])","53870b3e":"sns.distplot(df['sex'])","d76b749c":"sns.distplot(df['T3'])","850c63f0":"sns.distplot(df['TT4'])","2d587a9c":"sns.distplot(df['T4U'])","c381e6f5":"sns.distplot(df['FTI'])","4a257c6b":"sns.distplot(df['TBG measured'])","8272cda2":"sns.jointplot(x='age', y='TT4', data=df, kind='scatter', height=8, color='m')","f47cc76f":"sns.jointplot(x='age', y='TT4', data=df, kind='reg', height=8, color='m')","7a9c247b":"sns.distplot(df['age'], kde=False, bins=30, color='m')","f046e663":"sns.countplot(x='binaryClass', data=df, palette='rocket')","871bf0b1":"sns.countplot(x='binaryClass', data=df, hue='sex', palette='BuPu')","5a091bd9":"sns.stripplot(x=\"binaryClass\", y=\"age\", data=df, palette=\"viridis\")","5860f000":"sns.boxplot(x='binaryClass', y='age', data=df)","246ee0c3":"sns.jointplot(x='FTI', y='binaryClass', data=df, kind='scatter', height=8, color='m')","a28f168c":"df_corr = df.corr()\ndf_corr","d28b5a06":"sns.heatmap(df_corr, cmap='viridis', linecolor='k', linewidths=2, annot=True)","0a63f9b4":"#df.dropna(axis = 0, inplace=True)","e49a1444":"x = df.drop('binaryClass', axis=1)\ny = df['binaryClass']","80d60c03":"x","f559a09d":"y","808889fb":"x = sm.add_constant(x)\nresults = sm.OLS(y,x).fit()\nresults.summary()","6a25e36c":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=42)","6bf39973":"x.shape","3e0e112a":"from sklearn.preprocessing import StandardScaler\n\nsc = StandardScaler()\nsc.fit(x_train)\nx_train = sc.transform(x_train)\nx_test = sc.transform(x_test)","14ec753b":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout\nfrom tensorflow.keras.optimizers import Adam\nfrom tensorflow.keras.callbacks import ReduceLROnPlateau, ModelCheckpoint, EarlyStopping","d40d7ed0":"x.shape","d27f3ea8":"x.shape[1]","5baa97f3":"model = Sequential()\nmodel.add(Dense(256, input_shape=[x.shape[1]], activation='relu'))\nmodel.add(Dropout(0.4))\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dropout(0.3))\nmodel.add(Dense(63, activation='relu'))\nmodel.add(Dropout(0.2))\n\nmodel.add(Dense(1, activation='sigmoid'))","b6cef2c6":"model.summary()","65159728":"from tensorflow.keras.utils import plot_model\nfrom IPython.display import Image\nplot_model(model, to_file='convnet.png', show_shapes=True,show_layer_names=True)\nImage(filename='convnet.png') ","42d224f3":"model.compile(optimizer=Adam(), loss='binary_crossentropy', metrics=['accuracy'])","8f66b698":"lrd = ReduceLROnPlateau(monitor = 'val_loss',\n                         patience = 20,\n                         verbose = 1,\n                         factor = 0.75,\n                         min_lr = 1e-10)\n\nmcp = ModelCheckpoint('model.h5')\n\nes = EarlyStopping(verbose=1, patience=20)","b594be2f":"%%time\nhistory = model.fit(x=x_train, y=y_train, epochs=100, callbacks=[lrd, mcp, es], batch_size=64, validation_split=0.1)\n","4fd543ba":"model.evaluate(x_test, y_test)","d81eb4d4":"y_pred = model.predict(x_test)\ny_pred","e862676e":"y_pred[1]","f5e554d5":"y_test","91425923":"%%time\nmodel.evaluate(x_test, y_test)","09add085":"model.predict(x_test)[50]","2e34dd49":"model.predict_classes(x_test)[50]","cbceb22c":"y_test.iloc[50]","b35a7c34":"model.predict(x_test)[70]","85fbddcf":"model.predict_classes(x_test)[70]","b6fe0937":"y_test.iloc[70]","0ea1af08":"model.predict(sc.transform([[42.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.00,132,1.00,1.00,109.0,1.0,0.88,.100,110.00,0.00,0,1]]))","b6ba4dfe":"# summarize history for loss\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('model loss')\nplt.ylabel('loss')\nplt.xlabel('epoch')\n\nplt.legend(['train', 'test'], loc='upper left')\nplt.show()\n\n# # summarize history for accuracy\nplt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='upper right')\nplt.show()","0d9a4010":"model.save('model.h5')","4cbfcfe3":"import joblib","fd7ba6f3":"joblib.dump(sc, 'scaler.pkl')","18a67eaf":"sc = joblib.load('scaler.pkl')","b23a2f7d":"%%time\nfrom tensorflow.keras.models import load_model\nmodel = load_model('model.h5')\nmodel.predict(sc.transform([[42.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.00,132,1.00,1.00,109.0,1.0,0.88,.100,110.00,0.00,0,1]]))","b5ae8146":"## Thyroid Disease \n\nThe most common thyroid disorder is hypothyroidism. Hypo- means deficient or under(active), so hypothyroidism is a condition in which the thyroid gland is underperforming or producing too little thyroid hormone.. Recognizing the symptoms of hypothyroidism is extremely important.\n\n\n\n\n\n<img src=\"https:\/\/i.imgur.com\/5cW3lGZ.gif?noredirect\" width=\"800px\">\n\n\n### Data Set Information:\n\n\n\n#### From Garavan Institute\n#### Documentation: as given by Ross Quinlan\n#### 6 databases from the Garavan Institute in Sydney, Australia\n#### Approximately the following for each database:\n\n* 2800 training (data) instances and 972 test instances\n* Plenty of missing data\n* 29 or so attributes, either Boolean or continuously-valued\n\n#### 2 additional databases, also from Ross Quinlan, are also here\n\n* Hypothyroid.data and sick-euthyroid.data\n* Quinlan believes that these databases have been corrupted\n* Their format is highly similar to the other databases\n\n#### 1 more database of 9172 instances that cover 20 classes, and a related domain theory\n#### Another thyroid database from Stefan Aeberhard\n\n* 3 classes, 215 instances, 5 attributes\n* No missing values\n\n#### Dataset link:\n\n\n##### [Here](https:\/\/www.kaggle.com\/yasserhessein\/thyroid-disease-data-set)","cf9d4db0":"<img src=\"https:\/\/lh3.googleusercontent.com\/proxy\/dmZ-7K8n0tfjlAlmjL316IQymLkEUejTyRJe_PvnpoIvDzoDixx_4L1JmNBYg0xhdyywrCkkjD9F5Snp7PJU8N6RFZ0ke4IO9wMe5c2xbJvC\" width=\"800px\">"}}