{"cell_type":{"cfcfca05":"code","e78af5ab":"code","995e021b":"code","c25cb6a7":"code","be37df1f":"code","c6d9dd9d":"code","361c6187":"markdown","2155b1a1":"markdown","30d2d2c2":"markdown","b2351cb3":"markdown","e1478fbb":"markdown"},"source":{"cfcfca05":"import numpy as np\nimport pandas as pd\n\nimport os\nimport json\nfrom pathlib import Path\n\nimport matplotlib.pyplot as plt\nfrom matplotlib import colors\nimport numpy as np","e78af5ab":"from pathlib import Path\n\ndata_path = Path('\/kaggle\/input\/abstraction-and-reasoning-challenge-data-fixed\/')\ntraining_path = data_path \/ 'training'\nevaluation_path = data_path \/ 'evaluation'\nnosound_path = Path('\/kaggle\/input\/arc-nosound-tasks\/')\n\ntraining_tasks = sorted(os.listdir(training_path))\nevaluation_tasks = sorted(os.listdir(evaluation_path))\nnosound_tasks = sorted(os.listdir(nosound_path))","995e021b":"def plot_one(ax, i,train_or_test,input_or_output):\n    cmap = colors.ListedColormap(\n        ['#000000', '#0074D9','#FF4136','#2ECC40','#FFDC00',\n         '#AAAAAA', '#F012BE', '#FF851B', '#7FDBFF', '#870C25'])\n    norm = colors.Normalize(vmin=0, vmax=9)\n    \n    input_matrix = task[train_or_test][i][input_or_output]\n    ax.imshow(input_matrix, cmap=cmap, norm=norm)\n    ax.grid(True,which='both',color='lightgrey', linewidth=0.5)    \n    ax.set_yticks([x-0.5 for x in range(1+len(input_matrix))])\n    ax.set_xticks([x-0.5 for x in range(1+len(input_matrix[0]))])     \n    ax.set_xticklabels([])\n    ax.set_yticklabels([])\n    ax.set_title(train_or_test + ' '+input_or_output)\n    \n\ndef plot_task(task):\n    \"\"\"\n    Plots the first train and test pairs of a specified task,\n    using same color scheme as the ARC app\n    \"\"\"    \n    num_train = len(task['train'])\n    fig, axs = plt.subplots(2, num_train, figsize=(3*num_train,3*2))\n    for i in range(num_train):     \n        plot_one(axs[0,i],i,'train','input')\n        plot_one(axs[1,i],i,'train','output')        \n    plt.tight_layout()\n    plt.show()        \n        \n    num_test = len(task['test'])\n    fig, axs = plt.subplots(2, num_test, figsize=(3*num_test,3*2))\n    if num_test==1: \n        plot_one(axs[0],0,'test','input')\n        plot_one(axs[1],0,'test','output')     \n    else:\n        for i in range(num_test):      \n            plot_one(axs[0,i],i,'test','input')\n            plot_one(axs[1,i],i,'test','output')  \n    plt.tight_layout()\n    plt.show() ","c25cb6a7":"for i in range(len(nosound_tasks)):\n    task_file = str(nosound_path \/ nosound_tasks[i])\n    \n    with open(task_file, 'r') as f:\n        task = json.load(f)\n        \n    print(i)\n    print(nosound_tasks[i])\n    plot_task(task)","be37df1f":"for i in range(len(training_tasks)):\n    task_file = str(training_path \/ training_tasks[i])\n    \n    with open(task_file, 'r') as f:\n        task = json.load(f)\n        \n    print(i)\n    print(training_tasks[i])\n    plot_task(task)","c6d9dd9d":"for i in range(len(evaluation_tasks)):\n    task_file = str(evaluation_path \/ evaluation_tasks[i])\n    \n    with open(task_file, 'r') as f:\n        task = json.load(f)\n\n    print(i)\n    print(evaluation_tasks[i])\n    plot_task(task)","361c6187":"In the beggining of this kernel I added 9 ARC tasks that I hand-crafted, trying to find some ideas that I havent seen in the training\\validation dataset. The dataset is public, you are invited to give your model a try on it.\n\nhttps:\/\/www.kaggle.com\/zaharch\/arc-nosound-tasks","2155b1a1":"## training set","30d2d2c2":"forked from: https:\/\/www.kaggle.com\/boliu0\/visualizing-all-task-pairs-with-gridlines\n\nThe difference with the original kernel is the switched data.\nThe data on Kaggle is not updated with the recent fixes to some tasks, the up-to-date version is maintaned on the ARC github page:\nhttps:\/\/github.com\/fchollet\/ARC\n\nThis kernel uses the github data, as downloaded on 2020-04-20, visit the corresponding dataset:\nhttps:\/\/www.kaggle.com\/zaharch\/abstraction-and-reasoning-challenge-data-fixed","b2351cb3":"## nosound set","e1478fbb":"## evaluation set"}}