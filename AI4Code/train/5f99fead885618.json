{"cell_type":{"9109102a":"code","315fd628":"code","51b9301e":"code","8ed3fdd7":"code","412a5778":"code","3f9f76fd":"code","435de6ff":"code","a52852a2":"code","c625b2eb":"code","78e859f3":"code","d62ca6f9":"code","fa3ce34b":"code","eec109b7":"code","ddb7c24b":"code","5d125753":"code","9a713554":"code","76c36789":"code","fd5fb89f":"code","81118f7a":"code","c4b246b3":"code","40fa2a0f":"code","9f9e4f3c":"code","e9ef9cdf":"code","0ff0164e":"code","63ff0d94":"code","4f02419c":"markdown","02a37ddf":"markdown","f1ed888e":"markdown","c200b79e":"markdown","b45c6e24":"markdown","d7c4b142":"markdown","74f78f43":"markdown","42a832d2":"markdown","fda77740":"markdown","8320d959":"markdown","5f716482":"markdown","e0a8e5fd":"markdown","3949bd93":"markdown","ef2ba839":"markdown","41acd279":"markdown","1a23706a":"markdown","c5faeb8a":"markdown","dbcdb380":"markdown","3f1b5b2f":"markdown","7aee2e3d":"markdown","71c9e517":"markdown","8b7c43e1":"markdown"},"source":{"9109102a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","315fd628":"import seaborn as sns\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\nimport scipy.stats as stats\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score","51b9301e":"df=pd.read_csv(\"\/kaggle\/input\/nifty50-stocks-dataset\/National_Stock_Exchange_of_India_Ltd.csv\")","8ed3fdd7":"df.head()","412a5778":"df.tail()","3f9f76fd":"df.duplicated().sum()","435de6ff":"df.isnull().sum()","a52852a2":"df.dtypes","c625b2eb":"df.drop(\"Symbol\",axis=1,inplace=True)\ncolumns=[\"Open\",\"High\", \"Low\",\"LTP\",\"Turnover (crs.)\",\"52w H\",\"52w L\"]\nfor col in columns:\n    df[col]=df[col].apply(lambda z: z.replace(',', ''))\n    df[col]=df[col].apply(lambda z: float(z))","78e859f3":"df.describe()","d62ca6f9":"columns=df.columns\nfor col in columns:\n    plt.figure()\n    sm.qqplot(df[col],line='45',fit=True,dist=stats.norm)\n    plt.ylabel(col)\n    plt.show()","fa3ce34b":"columns=df.columns\nfor col in columns:\n    plt.figure()\n    sns.boxplot(y=df[col])","eec109b7":"df.drop(df[df[\"Open\"]>15000].index,axis=0,inplace=True)\nsns.boxplot(y=df[\"Open\"])","ddb7c24b":"df.drop(df[df[\"High\"]>15000].index,axis=0,inplace=True)\nsns.boxplot(y=df[\"High\"])","5d125753":"df.drop(df[df[\"Low\"]>15000].index,axis=0,inplace=True)\nsns.boxplot(y=df[\"Low\"])","9a713554":"df.drop(df[df[\"LTP\"]>15000].index,axis=0,inplace=True)\nsns.boxplot(y=df[\"LTP\"])","76c36789":"df.drop(df[df[\"Chng\"]<-400].index,axis=0,inplace=True)\nsns.boxplot(y=df[\"Chng\"])","fd5fb89f":"df.drop(df[df[\"% Chng\"]>4].index,axis=0,inplace=True)\nsns.boxplot(y=df[\"% Chng\"])","81118f7a":"df.drop(df[df[\"Volume (lacs)\"]>400].index,axis=0,inplace=True)\nsns.boxplot(y=df[\"Volume (lacs)\"])","c4b246b3":"df.drop(df[df[\"52w H\"]>15000].index,axis=0,inplace=True)\nsns.boxplot(y=df[\"52w H\"])","40fa2a0f":"df.describe()","9f9e4f3c":"sns.pairplot(df,height=1)","e9ef9cdf":"X = df.iloc[:, [10, 11]].values\nwcss=[]\nfor i in range(1,10):\n    kmeans=KMeans(n_clusters = i,init = 'k-means++',max_iter = 300,n_init = 10)\n    kmeans.fit(X)\n    wcss.append(kmeans.inertia_)\n\nplt.plot(range(1,10),wcss)\nplt.title(\"WCSS and Elbow Method\")\nplt.xlabel(\"Number of clusters\")\nplt.ylabel(\"WCSS\")","0ff0164e":"result=[]\nfor i in range(2,10):\n    kmeans=KMeans(n_clusters = i,init = 'k-means++',max_iter = 300,n_init = 10)\n    kmeans.fit(X)\n    clusters=kmeans.fit_predict(X)\n    sil_avg=silhouette_score(X,clusters)\n    result.append([i,sil_avg])\n\nresults=pd.DataFrame(result,columns=[\"no_clusters\",\"silhouette_score\"])\npivot=pd.pivot_table(results,index=\"no_clusters\",values=\"silhouette_score\")\nplt.figure()\nsns.heatmap(pivot,annot=True,cmap=sns.cm.rocket_r,linewidths=0.5,fmt=\".3f\")\nplt.tight_layout()","63ff0d94":"kmeans=KMeans(n_clusters = 2,init = 'k-means++',max_iter = 300,n_init = 10)             \nkmeans.fit(X)\nclusters=kmeans.fit_predict(X)\nprint(clusters)\ndf['Clusters'] = clusters \nplt.scatter(X[clusters == 0, 0], X[clusters == 0, 1], c = 'red', label = 'Cluster1')\nplt.scatter(X[clusters == 1, 0], X[clusters == 1, 1], c = 'blue', label = 'Cluster2')\nplt.xlabel('365 d % chng') \nplt.ylabel('30 d % chng') \nplt.legend() \n\nplt.show()","4f02419c":"# change data types to float","02a37ddf":"# Visulization of clusters","f1ed888e":"# pair plot","c200b79e":"# The companies can be broadly classified into two different classes based on the % in their stock values in last 365 days. The stocks with % change less than 40 lie in one category while the others with % change more than 40 lie in another category","b45c6e24":"# check duplicates ","d7c4b142":"# Null or NA values","74f78f43":"We can see that Open, High, Low, LTP, 52w H, 52w L shows linear relation with each other. i.e these variables are strongly correlated. The stocks for which \"52w H\" and \"52w L\" are large, the opening price, high and low of the day are also large and vice versa. So just by looking at the 52 weeks high and low data, we can predict the opening, high and low of the stock for that day.","42a832d2":"# First five enteries","fda77740":"# Statistics after removing outliers","8320d959":"# Optimum number of clusters is 2","5f716482":"# Classify the stocks into different classes","e0a8e5fd":"# data types of columns","3949bd93":"# Box plot to see outliers","ef2ba839":"The optimum number of clusters can be 2, 3 or 4.","41acd279":"# QQ plot: check normal distribution","1a23706a":"# Remove outliers","c5faeb8a":"We can see only 365d % Chng, 30d % chng and % Chng approximately follows normal distribution. ","dbcdb380":"# No. of clusters using WCSS and Elbow Method","3f1b5b2f":"# Silhouette value method to find exact number of clusters","7aee2e3d":"# Find Mean, Median etc.","71c9e517":"# Last Five Enteries","8b7c43e1":"# KMeans Clustering"}}