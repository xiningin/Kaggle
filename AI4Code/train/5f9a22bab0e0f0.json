{"cell_type":{"233e6940":"code","31e53a22":"code","cebe5a52":"code","a6ff5651":"code","e8a81adf":"code","cde33fea":"code","ec9e16ef":"code","8a849329":"code","dae2e36a":"code","f35e8015":"code","097693c7":"code","8d663a43":"code","49909b2c":"code","dff3e482":"code","1138d729":"code","612c363d":"code","b263bbef":"code","3a3d4e35":"code","e3264dc7":"code","ffc11442":"code","771c5f01":"code","03202981":"code","048c6aaa":"code","e250deab":"code","c1ff0b14":"code","9881be51":"code","5b23da6b":"code","d8b77329":"markdown","ea6d19e4":"markdown","74ad6b23":"markdown","cef1e5d6":"markdown","7f6ab2ab":"markdown","cdf3a50d":"markdown","b25b9fc0":"markdown","861d5c1a":"markdown","3e7cb325":"markdown","1a86e54a":"markdown","267fa680":"markdown","57d4606a":"markdown","a2552f19":"markdown","8e671983":"markdown"},"source":{"233e6940":"import pandas as pd\nfrom sklearn.ensemble import RandomForestClassifier\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import confusion_matrix","31e53a22":"df = pd.read_csv(\"..\/input\/data.csv\")","cebe5a52":"df.head()","a6ff5651":"df.describe()\n","e8a81adf":"df.drop(\"id\", axis=1, inplace = True)\ndf.drop(\"age_days\", axis=1, inplace = True)","cde33fea":"df.columns","ec9e16ef":"plt.figure(figsize = (15,8))\nsns.heatmap(df.corr(), linewidths=0.5)","8a849329":"fig, ax = plt.subplots(figsize=(15,8))\ndf_c = df.loc[:,['cholesterol','gluc', 'smoke', 'alco', 'active']]\nsns.countplot(x=\"variable\", hue=\"value\",data= pd.melt(df_c), ax=ax);","dae2e36a":"dfmelt = pd.melt(df, id_vars=['cardio'], value_vars=['cholesterol','gluc', 'smoke', 'alco', 'active'])\nsns.catplot(x=\"variable\", hue=\"value\", col=\"cardio\", data=dfmelt, kind=\"count\");","f35e8015":"plt.scatter('age_year', 'height', data=df, marker='o', color='green')","097693c7":"plt.scatter('age_year', 'weight', data=df, marker='o', color='blue')","8d663a43":"plt.scatter('age_year', 'ap_hi', data=df, marker='o', color='red')","49909b2c":"plt.scatter('age_year', 'ap_lo', data=df, marker='o', color='orange')","dff3e482":"df = df[df.height <= 200]\ndf = df[df.height >= 120]","1138d729":"df = df[df.weight <= 160]","612c363d":"df = df[df.ap_hi.between(0,500)]","b263bbef":"df = df[df.ap_lo.between(0,2000)]","3a3d4e35":"X = df.iloc[:, :11]\ny = df.iloc[:, 11]","e3264dc7":"# split data \nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=4)\nprint ('Train set:', X_train.shape,  y_train.shape)\nprint ('Test set:', X_test.shape,  y_test.shape)","ffc11442":"######################### KNeighborsClassifier = 64%\nfrom sklearn.neighbors import KNeighborsClassifier\n# K = 2 because of cardio (target value 0\/1)\nmodel = KNeighborsClassifier(n_neighbors=2).fit(X_train,y_train)\ny_pred = model.predict(X_test)","771c5f01":"### Making the Confusion Matrix\ncm = confusion_matrix(y_test, y_pred)\nprint(\"KNeighborsClassifier\")\nprint(cm)\nprint('Accurancy: {:.0f}%'.format(model.score(X_test, y_test)*100))","03202981":"from sklearn.naive_bayes import GaussianNB\nclassifier = GaussianNB()\nclassifier.fit(X_train, y_train)\ny_pred = classifier.predict(X_test)","048c6aaa":"### Making the Confusion Matrix\ncm = confusion_matrix(y_test, y_pred)\nprint(\"DecisionTree\")\nprint(cm)\nprint('Accurancy: {:.0f}%'.format(classifier.score(X_test, y_test)*100))","e250deab":"from sklearn.tree import DecisionTreeClassifier\nmodel_tree = DecisionTreeClassifier(criterion=\"entropy\", max_depth = 10)\nmodel_tree.fit(X_train, y_train)\ny_pred = model_tree.predict(X_test)","c1ff0b14":"### Making the Confusion Matrix\ncm = confusion_matrix(y_test, y_pred)\nprint(\"DecisionTree\")\nprint(cm)\nprint('Accurancy: {:.0f}%'.format(model_tree.score(X_test, y_test)*100))","9881be51":"from sklearn.ensemble import RandomForestClassifier\nmodel_rf = RandomForestClassifier(n_estimators = 100, random_state = 1)\nmodel_rf.fit(X_train, y_train)\ny_pred = model_rf.predict(X_test).round(0)","5b23da6b":"### Making the Confusion Matrix\ncm = confusion_matrix(y_test, y_pred)\nprint(\"DecisionTree\")\nprint(cm)\nprint('Accurancy: {:.0f}%'.format(model_rf.score(X_test, y_test)*100))","d8b77329":"# **Prepare data for training**","ea6d19e4":"# Import Library","74ad6b23":"# **Training 1st Model - KNeighborsClassifier**","cef1e5d6":"### Removing Outliers","7f6ab2ab":"Split Rows to train & test data","cdf3a50d":"### **Correlation between fields. As shown below cardio disease is more relative with AGE, WEIGHT and CHOLESTEROL**\n\n","b25b9fc0":"# **Search for Outliers**","861d5c1a":"#### Split columns to independent variables & target variable","3e7cb325":"# **Training 2nd Model - Naive Bayes**","1a86e54a":"### Dropping unnecessary columns","267fa680":"# <font color=blue|red|green|pink|yellow>GURU<\/font>\n[aiguru.az](http:\/\/aiguru.az)\n\n## Analyze Cardio Disease - 70000 Patients\n### Author : Ramin Hashimzade\n### Location : Azerbaijan, Baku","57d4606a":"# **Training 4th Model - RandomForestClassifier**","a2552f19":"# **Training 3rd Model - DecisionTree**","8e671983":"### Datasset Description\n*   id                number\n*   agein             days\n*   gender            1 - women, 2 - men\n*   height            cm\n*   weight            kg\n*   ap_hiSystolic     blood pressure\n*   ap_loDiastolic    blood pressure\n*   cholesterol       1: normal, 2: above normal, 3: well above normal\n*   gluc              1: normal, 2: above normal, 3: well above normal\n*   smoke             whether patient smokes or not(0 = no, 1 = yes)\n*   alco              Binary feature (0 = no, 1 = yes)\n*   active            Binary feature (0 = passive life, 1 = active life)\n*   cardio            Target variable(0 = no, 1 = yes)"}}