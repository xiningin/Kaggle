{"cell_type":{"d17a82e8":"code","d7202cee":"code","88f79991":"code","2c771761":"code","4bf58dbd":"code","f4884d65":"code","99075c6f":"code","f5c8c66a":"code","a3283eab":"code","f66c256d":"code","f9ab3150":"code","dda96635":"code","6278560b":"code","0550f35d":"markdown","e79bf9c0":"markdown","f8317f00":"markdown","50359e8b":"markdown","21797992":"markdown","c56c01a8":"markdown"},"source":{"d17a82e8":"%matplotlib inline\n\nimport numpy as np \nimport pandas as pd \n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n\nfrom fbprophet import Prophet","d7202cee":"df = pd.read_csv(\"..\/input\/avocado.csv\", parse_dates=[\"Date\"])\n\ndel df['Unnamed: 0']\ncols = ['Date', 'AveragePrice', 'type', 'region']\ndf = df[cols]\ndf = df[(df.region =='TotalUS') & (df.type == 'conventional') ] #& (df.Date >= '2016-01-01')\n\ndel df['region']\ndel df['type']\n\ndf = df.sort_values(\"Date\")\n\ndf['Date'] = pd.to_datetime(df['Date'])\ndf = df.set_index('Date')\n\ndaily_df = df.resample('D').mean()\nd_df = daily_df.reset_index().dropna()\nd_df.columns = ['ds', 'y']\n\n# Train test split \nn_weeks = 30\ntrain = d_df[:-n_weeks]\ntest = d_df[-n_weeks:]","88f79991":"train.head()","2c771761":"fig, ax = plt.subplots()\nfig.set_size_inches(12, 8)\n\nax = sns.lineplot(x=train.ds, y=train.y, label=\"train\")\nax = sns.lineplot(x=test.ds, y=test.y, label=\"test\")\n\nax.axes.set_xlim(train.ds.min(), test.ds.max());","4bf58dbd":"%%time\ntrain['cap'] = train.y.max()\ntrain['floor'] = train.y.min()\n\nm = Prophet(growth='logistic', interval_width=0.8, changepoints=['2016-06-01'], changepoint_prior_scale=0.01)\nm.add_seasonality(name='monthly', period=30.5, fourier_order=1)\nm.add_seasonality(name='quarterly', period=91.25, fourier_order=5, prior_scale=0.1)\nm.add_seasonality(name='yearly', period=365.25, fourier_order=10)\n\nm.fit(train)","f4884d65":"future = m.make_future_dataframe(periods=n_weeks, freq='W')\nfuture['cap'] = 1.4 #approx max for last year same period\nfuture['floor'] = train.y.min()\n\nforecast = m.predict(future)\nforecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()","99075c6f":"from  fbprophet.plot import add_changepoints_to_plot\nfig = m.plot(forecast)\na = add_changepoints_to_plot(fig.gca(), m, forecast)","f5c8c66a":"fig2 = m.plot_components(forecast);","a3283eab":"from datetime import datetime\nhorizon_days = (test.index[-1] - test.index[0])\n\nfrom fbprophet.diagnostics import cross_validation, performance_metrics\ndf_cv = cross_validation(m, horizon= f'{horizon_days} days')\ndf_p = performance_metrics(df_cv)\ndf_p.head(5)","f66c256d":"from fbprophet.plot import plot_cross_validation_metric\nfig3 = plot_cross_validation_metric(df_cv, metric='mape')","f9ab3150":"test = pd.concat([test.set_index('ds'),forecast.set_index('ds')], axis=1, join='inner')\n\ncols = ['y', 'yhat', 'yhat_lower', 'yhat_upper']\ntest = test[cols]\ntest['y'] = test.y\ntest['yhat'] = (test.yhat).round(2)\ntest['yhat_lower'] = (test.yhat_lower).round(2)\ntest['yhat_upper'] = (test.yhat_upper).round(2)\n\ntest.tail()","dda96635":"fig, ax = plt.subplots()\nfig.set_size_inches(12, 8)\n\nplt.plot(test.y)\nplt.plot(test.yhat)\nplt.legend();","6278560b":"test['e'] = test.y - test.yhat\n\nrmse = np.sqrt(np.mean(test.e**2)).round(2)\nmape = np.round(np.mean(np.abs(100*test.e\/test.y)), 0)\nprint('RMSE = $', rmse)\nprint('MAPE =', mape, '%')\n","0550f35d":"We can plot the mean absolute percent error (MAPE) over the forecast horizon to determine how trustworthy our forecast is.","e79bf9c0":"### Model evaluation\nProphet evaluates performance is by using a procedure called **simulated historical forecasts (SHFs)**. SHFs works by producing $K$ forecasts at various time points within the history, which is then fit to a model of the expected error at different forecast horizons.","f8317f00":"## Only selecting `TotalUS` prices for `conventional` avocodos","50359e8b":"At it\u2019s core, Prophet is an additive model with the following components:\n\n$y(t) = g(t) + s(t) + h(t) + \\epsilon_t$\n\n* $g(t)$ models trend, which describes long-term increase or decrease in the data. Incorporating two trend models, a saturating growth model and a piecewise linear model\n* $s(t)$ models seasonality with Fourier series, which describes how data is affected by seasonal factors such as the time of the year \n* $h(t)$ models the effects of holidays or large events that impact business time series \n* $\\epsilon_t$ represents an irreducible error term","21797992":"# Measuring forecast accuracy\n[Source](https:\/\/pdfs.semanticscholar.org\/af71\/3d815a7caba8dff7248ecea05a5956b2a487.pdf)\n## Root mean squared error \n\n## $RMSE= \\sqrt{mean(e_i^2)}$    \n### where $e_i =y_i - \\hat{y_i}$\n\n## Mean absolute percentage error \n\n## $MAPE = mean(|p_i|)$\n\n### where $p_i = \\frac{100e_i}{ y_i}$","c56c01a8":"### Train model"}}