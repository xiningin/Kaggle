{"cell_type":{"d3d1a668":"code","a8735ea2":"code","170c02f8":"code","b216c1e1":"code","51055278":"code","3c313341":"code","00b0cca4":"code","bacecb73":"code","7a1d658a":"code","ff884342":"code","438af2ed":"code","7dd4a686":"code","ceafb2d9":"code","77f95f8b":"code","6c26026f":"code","4981e365":"code","36bf89e1":"code","7e81c707":"code","c5374fdc":"code","c7e5c353":"code","36f9ef9e":"code","4e339431":"code","99772a2d":"code","5cde30b4":"code","5024194f":"code","370bb391":"code","1b39d817":"code","d306cbe7":"code","2813a389":"code","b44e9be0":"code","83846fc1":"code","6a8a2f21":"code","04467846":"code","18e9d3ec":"code","1d5c2ed4":"code","f4b8aed2":"code","03d3c54b":"code","243aa162":"code","9e479037":"code","eb43476f":"code","a1fffc9d":"code","9ce66ddf":"code","91bd1d05":"code","fa9ab566":"code","627ca152":"code","d4b22203":"code","8c389034":"code","2dd79745":"code","3483808d":"code","b8617efc":"markdown"},"source":{"d3d1a668":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a8735ea2":"!pip install --use-feature=2020-resolver https:\/\/s3-us-west-2.amazonaws.com\/xgboost-nightly-builds\/xgboost-1.3.0_SNAPSHOT%2B00b0ad1293b4fa74d6aca5da4e9ab7a9d16777f0-py3-none-manylinux2010_x86_64.whl","170c02f8":"import xgboost as xgb\nxgb.__version__","b216c1e1":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport zipfile\nfrom sklearn.model_selection import train_test_split, KFold\nfrom sklearn.metrics import log_loss, roc_auc_score\nfrom sklearn.linear_model import LogisticRegression\nimport gc\nimport os","51055278":"sample_submission = pd.read_csv('\/kaggle\/input\/dogs-vs-cats-redux-kernels-edition\/sample_submission.csv')\nsample_submission.tail()","3c313341":"sample_submission.head()","00b0cca4":"TRAIN_FOLDER = '..\/input\/cats-and-dogs-embedded-data\/train\/train\/'\nTEST_FOLDER =  '..\/input\/cats-and-dogs-embedded-data\/test\/test\/'\nIMG_SIZE = 224","bacecb73":"train_image_list = np.load('..\/input\/cats-and-dogs-embedded-data\/cats_and_dogs_1\/train_image_list.npy')\ntest_image_list = np.load('..\/input\/cats-and-dogs-embedded-data\/cats_and_dogs_1\/test_image_list.npy')","7a1d658a":"train_image_list","ff884342":"test_image_list","438af2ed":"ids = [int(x.split('.')[0]) for x in test_image_list]\nids[:20]","7dd4a686":"target = np.load('..\/input\/cats-and-dogs-embedded-data\/cats_and_dogs_1\/target.npy')","ceafb2d9":"target","77f95f8b":"train_EB7_ns = np.load('..\/input\/cats-and-dogs-embedded-data\/cats_and_dogs_4\/cats_and_dogs_4\/train_EB7_ns.npy')\ntest_EB7_ns = np.load('..\/input\/cats-and-dogs-embedded-data\/cats_and_dogs_4\/cats_and_dogs_4\/test_EB7_ns.npy')\ntrain_EB4_ns = np.load('..\/input\/cats-and-dogs-embedded-data\/cats_and_dogs_4\/cats_and_dogs_4\/train_EB4_ns.npy')\ntest_EB4_ns = np.load('..\/input\/cats-and-dogs-embedded-data\/cats_and_dogs_4\/cats_and_dogs_4\/test_EB4_ns.npy')","6c26026f":"train_EB7_ns.shape","4981e365":"X_train, X_val, y_train, y_val = train_test_split(train_EB7_ns, target, test_size=0.1, random_state=42)","36bf89e1":"lr = LogisticRegression(C=0.026, max_iter=10000)\nlr.fit(X_train, y_train)\nval_preds_EB7_lr = lr.predict_proba(X_val)[:,1]\ntest_preds_EB7_lr = lr.predict_proba(test_EB7_ns)[:,1]\nprint(roc_auc_score(y_val, val_preds_EB7_lr))\nprint(log_loss(y_val, val_preds_EB7_lr))","7e81c707":"xgb_params = {\n    'eta': 0.05,\n    'max_depth': 4,\n    'subsample': 0.8,\n    'colsample_bytree': 0.6,\n    'alpha': 0.01,\n    'lambda': 1.00,\n    'gamma' : 0.02,\n    'max_bin': 256,\n    'objective': 'reg:logistic',\n    'eval_metric': 'auc',\n    'verbosity': 0,\n    'tree_method': 'gpu_hist', \n    'predictor': 'gpu_predictor'\n}\n\ndtrain = xgb.DMatrix(X_train, y_train)\ndval = xgb.DMatrix(X_val, y_val)\ndtest = xgb.DMatrix(test_EB7_ns)\n","c5374fdc":"del train_EB7_ns, test_EB7_ns, X_train, X_val\ngc.collect()","c7e5c353":"model = xgb.train(xgb_params, dtrain, num_boost_round=100)\nval_preds_xgb_1 = model.predict(dval)\ntest_preds_xgb_1 = model.predict(dtest)","36f9ef9e":"roc_auc_score(y_val, val_preds_xgb_1)","4e339431":"log_loss(y_val, val_preds_xgb_1)","99772a2d":"roc_auc_score(y_val, 0.5*val_preds_xgb_1+0.5*val_preds_EB7_lr)\n","5cde30b4":"log_loss(y_val, 0.5*val_preds_xgb_1+0.5*val_preds_EB7_lr)\n","5024194f":"test_preds_xgb_1.shape","370bb391":"X_train, X_val, y_train, y_val = train_test_split(train_EB4_ns, target, test_size=0.1, random_state=42)","1b39d817":"lr = LogisticRegression(C=0.019, max_iter=10000)\nlr.fit(X_train, y_train)\nval_preds_EB4_lr = lr.predict_proba(X_val)[:,1]\ntest_preds_EB4_lr = lr.predict_proba(test_EB4_ns)[:,1]\nprint(roc_auc_score(y_val, val_preds_EB4_lr))\nprint(log_loss(y_val, val_preds_EB4_lr))","d306cbe7":"xgb_params = {\n    'eta': 0.05,\n    'max_depth': 4,\n    'subsample': 0.85,\n    'colsample_bytree': 0.6,\n    'alpha': 0.01,\n    'lambda': 1.00,\n    'gamma' : 0.02,\n    'max_bin': 256,\n    'objective': 'reg:logistic',\n    'eval_metric': 'auc',\n    'verbosity': 0,\n    'tree_method': 'gpu_hist', \n    'predictor': 'gpu_predictor'\n}\n\ndtrain = xgb.DMatrix(X_train, y_train)\ndval = xgb.DMatrix(X_val, y_val)\ndtest = xgb.DMatrix(test_EB4_ns)","2813a389":"del train_EB4_ns, test_EB4_ns, X_train, X_val\ngc.collect()","b44e9be0":"val_preds_xgb_2 = 0\ntest_preds_xgb_2 = 0\n\nn_seed = 10\n\nfor j in range(n_seed):\n    xgb_params['seed'] = 3*j**2+154\n    model = xgb.train(xgb_params, dtrain, num_boost_round=100)\n    val_preds_xgb_2 += model.predict(dval)\/n_seed\n    test_preds_xgb_2 += model.predict(dtest)\/n_seed","83846fc1":"sample_submission['id'] = ids\nsample_submission['label'] = test_preds_xgb_1\nsample_submission.to_csv('submission_xgb_1.csv', index=False)\nsample_submission.head()","6a8a2f21":"sample_submission['id'] = ids\nsample_submission['label'] = test_preds_xgb_2\nsample_submission.to_csv('submission_xgb_2.csv', index=False)\nsample_submission.head()","04467846":"sample_submission['id'] = ids\nsample_submission['label'] = 0.5*test_preds_xgb_1+0.5*test_preds_EB7_lr\nsample_submission.to_csv('submission_0.csv', index=False)\nsample_submission.head()","18e9d3ec":"sample_submission['id'] = ids\nsample_submission['label'] = (0.5*test_preds_xgb_1+0.5*test_preds_EB7_lr)**0.99\nsample_submission.to_csv('submission_0_b.csv', index=False)\nsample_submission.head()","1d5c2ed4":"sample_submission['id'] = ids\nsample_submission['label'] = (0.5*test_preds_xgb_1+0.5*test_preds_EB7_lr)**0.95\nsample_submission.to_csv('submission_0_c.csv', index=False)\nsample_submission.head()","f4b8aed2":"sample_submission['id'] = ids\nsample_submission['label'] = 0.47*test_preds_xgb_1+0.53*test_preds_EB7_lr\nsample_submission.to_csv('submission_1.csv', index=False)\nsample_submission.head()","03d3c54b":"sample_submission['id'] = ids\nsample_submission['label'] = 0.52*test_preds_xgb_1+0.48*test_preds_EB7_lr\nsample_submission.to_csv('submission_2.csv', index=False)\nsample_submission.head()","243aa162":"sample_submission['id'] = ids\nsample_submission['label'] = 0.55*test_preds_xgb_1+0.45*test_preds_EB7_lr\nsample_submission.to_csv('submission_3.csv', index=False)\nsample_submission.head()","9e479037":"sample_submission['id'] = ids\nsample_submission['label'] = 0.5*test_preds_xgb_2+0.5*test_preds_EB4_lr\nsample_submission.to_csv('submission_EB4_0.csv', index=False)\nsample_submission.head()","eb43476f":"sample_submission['id'] = ids\nsample_submission['label'] = np.clip(1.01*(0.5*test_preds_xgb_1+0.5*test_preds_EB7_lr)-0.01*(0.5*test_preds_xgb_2+0.5*test_preds_EB4_lr), 0, 1)\nsample_submission.to_csv('submission_EB7_EB4_0.csv', index=False)\nsample_submission.head()","a1fffc9d":"sample_submission['id'] = ids\nsample_submission['label'] = np.clip(1.05*(0.5*test_preds_xgb_1+0.5*test_preds_EB7_lr)-0.05*(0.5*test_preds_xgb_2+0.5*test_preds_EB4_lr), 0, 1)\nsample_submission.to_csv('submission_EB7_EB4_1.csv', index=False)\nsample_submission.head()","9ce66ddf":"sample_submission['id'] = ids\nsample_submission['label'] = np.clip(1.08*(0.5*test_preds_xgb_1+0.5*test_preds_EB7_lr)-0.08*(0.5*test_preds_xgb_2+0.5*test_preds_EB4_lr), 0, 1)\nsample_submission.to_csv('submission_EB7_EB4_2.csv', index=False)\nsample_submission.head()","91bd1d05":"sample_submission['id'] = ids\nsample_submission['label'] = np.clip(1.08*(0.5*test_preds_xgb_1+0.5*test_preds_EB7_lr)-0.08*(0.5*test_preds_xgb_2+0.5*test_preds_EB4_lr), 0, 1)\nsample_submission.to_csv('submission_EB7_EB4_2.csv', index=False)\nsample_submission.head()","fa9ab566":"sample_submission['id'] = ids\nsubs = np.clip(1.1*(0.5*test_preds_xgb_1+0.5*test_preds_EB7_lr)-0.1*(0.5*test_preds_xgb_2+0.5*test_preds_EB4_lr), 0, 1)\nsample_submission['label'] = subs\nsample_submission.to_csv('submission_EB7_EB4_3.csv', index=False)\nsample_submission.head()","627ca152":"sample_submission['id'] = ids\nsubs = np.clip(1.1*(0.5*test_preds_xgb_1+0.5*test_preds_EB7_lr)-0.1*(0.5*test_preds_xgb_2+0.5*test_preds_EB4_lr), 0, 1)\nsubs[subs > 0.9976] = 1\nsample_submission['label'] = subs\nsample_submission.to_csv('submission_EB7_EB4_3_b.csv', index=False)\nsample_submission.head()","d4b22203":"sample_submission['id'] = ids\nsubs = np.clip(1.1*(0.5*test_preds_xgb_1+0.5*test_preds_EB7_lr)-0.1*(0.5*test_preds_xgb_2+0.5*test_preds_EB4_lr), 0, 1)\nsubs[subs > 0.9973] = 1\nsample_submission['label'] = subs\nsample_submission.to_csv('submission_EB7_EB4_3_c.csv', index=False)\nsample_submission.head()","8c389034":"sample_submission['id'] = ids\nsubs = np.clip(1.1*(0.5*test_preds_xgb_1+0.5*test_preds_EB7_lr)-0.1*(0.5*test_preds_xgb_2+0.5*test_preds_EB4_lr), 0, 1)\nsubs[subs > 0.9973] = 1\nsubs[subs <  0.0018] = 0\nsample_submission['label'] = subs\nsample_submission.to_csv('submission_EB7_EB4_3_d.csv', index=False)\nsample_submission.head()","2dd79745":"sample_submission['id'] = ids\nsample_submission['label'] = np.clip(1.12*(0.5*test_preds_xgb_1+0.5*test_preds_EB7_lr)-0.12*(0.5*test_preds_xgb_2+0.5*test_preds_EB4_lr), 0, 1)\nsample_submission.to_csv('submission_EB7_EB4_4.csv', index=False)\nsample_submission.head()","3483808d":"sample_submission['id'] = ids\nsubs = np.clip(1.12*(0.5*test_preds_xgb_1+0.5*test_preds_EB7_lr)-0.12*(0.5*test_preds_xgb_2+0.5*test_preds_EB4_lr), 0, 1)\n\nsample_submission['label'] = subs\nsubs[subs > 0.9974] = 1\nsubs[subs <  0.0018] = 0\nsample_submission.to_csv('submission_EB7_EB4_4_b.csv', index=False)\nsample_submission.head()","b8617efc":"# **A nice try**"}}