{"cell_type":{"6d1d2258":"code","218f278c":"code","87630cb9":"code","6be3e407":"code","c1913931":"code","313a1c9b":"code","01bd3fda":"code","883faa0a":"code","481053c7":"code","8e927776":"code","d8964d56":"code","69a75ba7":"code","719d516b":"code","1d061843":"code","b670022c":"code","a5c72728":"code","bf272f0a":"code","fa445677":"code","d0a5394f":"code","d423697a":"code","bf638f1e":"code","251ea240":"code","18ff76e8":"code","fdd363d0":"markdown","d46a2185":"markdown","13a82939":"markdown","6a7c4ec0":"markdown","1bdd1bbb":"markdown","f57d7610":"markdown","64e01e39":"markdown","4858da2f":"markdown","9e48bdc9":"markdown","3564bf77":"markdown","7cfd31f3":"markdown"},"source":{"6d1d2258":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","218f278c":"data=pd.read_csv(\"..\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv\")\ndata.head()","87630cb9":"data.tail()","6be3e407":"data.columns\n","c1913931":"data.shape","313a1c9b":"data.info()\n# We learn something our datas.","01bd3fda":"print(data['neighbourhood_group'].value_counts(dropna=False))","883faa0a":"print(data.minimum_nights.mean)","481053c7":"data.describe()","8e927776":"#data.boxplot(column='room_type',by='price')\n#plt.show()\n#ANLAMADIMMMMM","d8964d56":"data_new=data.head()\nprint(data_new)","69a75ba7":"melted=pd.melt(frame=data_new,id_vars='name',value_vars=['host_name','neighbourhood_group'])\nmelted","719d516b":"melted=pd.melt(frame=data_new,id_vars='name',value_vars=['neighbourhood_group','neighbourhood'])\nmelted","1d061843":"melted.pivot(index='name',columns='variable',values='value')","b670022c":"data1=data.head()\ndata2=data.tail()\nconc_data_row=pd.concat([data1,data2],\n                        axis=0,\n                       ignore_index=True)\nconc_data_row","a5c72728":"data3=data['neighbourhood_group'].head()\ndata4=data['host_name'].tail()\nconc_data_col=pd.concat([data3,data4],\n                        axis=1)\nconc_data_col","bf272f0a":"data.dtypes","fa445677":"#We can change data type\ndata['name']=data['name'].astype('category')\ndata.dtypes","d0a5394f":"data['name']=data['name'].astype('object')\ndata.dtypes","d423697a":"data.info()","bf638f1e":"data['minimum_nights'].value_counts(dropna=False)","251ea240":"data['minimum_nights'].dropna(inplace=True)\nassert 1==1 #We check in\n","18ff76e8":"assert data['minimum_nights'].notnull().all()","fdd363d0":"**Data Melt**\n> We change data veriable.","d46a2185":"\nOur data include 16 columns and ","13a82939":"Data.describe show unnumeric mean.","6a7c4ec0":"This code show the frequency of neigbourhood_group.\n","1bdd1bbb":"**CONCETANAT\u0130NG DATA**\n>*We inosculate two data frame*","f57d7610":"We have 48894 data.","64e01e39":"**PVOT\u0130NG DATA**\n> *Reverse melting data*","4858da2f":"**T\u0130DY DATA**\n\n","9e48bdc9":"**M\u0130SS\u0130NG DATA AND TEST\u0130NG W\u0130TH ASSERT**","3564bf77":"# data.shape\nOur data include 48895 rows and 16 columns","7cfd31f3":"**DATA TYPES**"}}