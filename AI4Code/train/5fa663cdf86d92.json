{"cell_type":{"48e5fba2":"code","444f7e9b":"code","2f31eb8d":"code","07bd51b0":"code","a935f70a":"code","b22d5afa":"code","29d096a9":"code","f4b442b6":"code","24af034c":"code","51c32bdc":"code","f3883622":"code","4bda4cfc":"code","f5d35df8":"code","5384b183":"code","26d2afc1":"code","37a13e84":"code","9842a389":"code","783631f4":"code","8829cce1":"code","ab001a86":"code","f7bd3546":"code","9ef4224e":"code","04a141ff":"markdown"},"source":{"48e5fba2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","444f7e9b":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","2f31eb8d":"df_train=pd.read_csv('..\/input\/titanic\/train.csv')\ndf_test=pd.read_csv('..\/input\/titanic\/test.csv')","07bd51b0":"PassengerId=df_test['PassengerId']","a935f70a":"df_train.drop(['PassengerId','Name','Ticket'],axis=1,inplace=True)\ndf_test.drop(['PassengerId','Name','Ticket'],axis=1,inplace=True)","b22d5afa":"df_train.isnull().sum()\/len(df_train)*100","29d096a9":"# Removing Cabin\ndf_train.drop(['Cabin'],axis=1,inplace=True)\ndf_test.drop(['Cabin'],axis=1,inplace=True)","f4b442b6":"# Removing rows where embarked is null\n\ndf_train.dropna(subset=['Embarked'],inplace=True)\n\ndf_train['Embarked'].isnull().sum()","24af034c":"age_train_series=df_train.groupby(['Pclass','Sex'])['Age'].transform('median')","51c32bdc":"age_test_series=df_test.groupby(['Pclass','Sex'])['Age'].transform('median')","f3883622":"df_train['Age']=df_train['Age'].fillna(age_train_series)","4bda4cfc":"df_test['Age']=df_test['Age'].fillna(age_test_series)","f5d35df8":"df_test.isnull().sum()","5384b183":"Fare_test_series=df_test.groupby(['Pclass'])['Fare'].transform('median')\ndf_test['Fare']=df_test['Fare'].fillna(Fare_test_series)","26d2afc1":"df_train=pd.get_dummies(df_train,drop_first=True)\n","37a13e84":"df_test=pd.get_dummies(df_test,drop_first=True)","9842a389":"from sklearn.model_selection import train_test_split\nX = df_train.drop('Survived',axis=1)\n\n# Putting response variable to y\ny = df_train['Survived']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state=42)\nX_train.shape, X_test.shape","783631f4":" from sklearn.ensemble import RandomForestClassifier","8829cce1":"rf=RandomForestClassifier(random_state=42,n_estimators=100,max_depth=4,min_samples_leaf=15,max_features=3)\nrf.fit(X_train,y_train)","ab001a86":"from sklearn.metrics import accuracy_score\naccuracy_score(y_test,rf.predict(X_test))","f7bd3546":"predictions=rf.predict(df_test)\ntitanic_4=pd.DataFrame({'PassengerId':PassengerId,'Survived':predictions})\ntitanic_4.to_csv('My_4th_submission',index=False)\n","9ef4224e":"pd.read_csv('My_4th_submission')","04a141ff":"### RANDOM FOREST WITHOUT HYPERPARAMETER TUNING"}}