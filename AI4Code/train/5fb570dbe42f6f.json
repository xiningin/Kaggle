{"cell_type":{"6300acfd":"code","434c1a5a":"code","dad3e8c4":"code","7f4065d2":"code","bd1b2d1e":"code","c5b9a8f7":"code","fd73a02a":"code","38ee996d":"code","c9b975f2":"code","871ebaad":"code","22b61212":"code","bf8fa315":"code","7f1e5985":"code","5b91d9c9":"code","0d1e39e3":"code","2a818e1a":"code","8cce46fb":"code","4ee6d26d":"code","80745f2c":"code","0c103f00":"code","9cccefcc":"code","51e5f71a":"code","43fb1b4a":"code","db4f284a":"code","bd05612b":"code","0619e08c":"code","e8458db7":"code","84d5f338":"code","c93b1836":"code","3542034a":"code","bfca0a2d":"code","6ceb03b1":"code","76c76096":"code","ee96b012":"code","29fdf564":"code","0cab78cf":"code","7193cdb4":"code","7e8aa4a1":"code","e4b3b38a":"code","a9b3c1c9":"code","7442b195":"code","26d3bd29":"code","48a854b9":"code","a5cbe43d":"code","a693c265":"code","86b328df":"markdown","e3862950":"markdown","6cd3219f":"markdown","c9aa9270":"markdown","ef4f3435":"markdown","f32e0bb7":"markdown","396cc4ef":"markdown","433d56c7":"markdown","cf70e8ef":"markdown","cdcbe0ef":"markdown","86bcf6ac":"markdown","a60a5402":"markdown","13142a52":"markdown","d4b2e9a6":"markdown","70cfb55f":"markdown","083c431e":"markdown","63bc9874":"markdown","b41cd400":"markdown","5acb3a7b":"markdown","28791bda":"markdown","81843ab4":"markdown","3695fc1c":"markdown","fc680ed1":"markdown","4ce466d0":"markdown","fc350e3c":"markdown","d9a98cfa":"markdown","85509a4b":"markdown","9804ec49":"markdown","b5590521":"markdown","50542788":"markdown","ce838548":"markdown","3ddda86a":"markdown","f1aab82f":"markdown","4f2a7888":"markdown"},"source":{"6300acfd":"import numpy as np\nimport pylab as pl\nimport pandas as pd\nimport matplotlib.pyplot as plt \n%matplotlib inline\nimport seaborn as sns\nfrom sklearn.utils import shuffle\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import confusion_matrix,classification_report\nfrom sklearn.model_selection import cross_val_score, GridSearchCV\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","434c1a5a":"train= pd.read_csv('..\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv')\ntrain.head()","dad3e8c4":"display(train[['city','city_development_index','relevent_experience','gender','education_level','major_discipline','experience','company_size','company_type','target']].groupby(['gender','education_level','experience','company_size']).agg([\"max\",'mean',\"min\"]).style.background_gradient(cmap=\"Oranges\"))\n","7f4065d2":"#barplots showing the frequency of each category separated by label\nplt.figure(figsize=[15,17])\nfft=[\"relevent_experience\", \"education_level\",\"major_discipline\", \"experience\",\"company_size\",\"company_type\", \"training_hours\",\"target\"]\nn=1\nfor f in fft:\n    plt.subplot(4,2,n)\n    sns.countplot(x=f, hue='education_level', edgecolor=\"black\", alpha=0.7, data=train)\n    sns.despine()\n    plt.title(\"Countplot of {}  by education_level\".format(f))\n    n=n+1\nplt.tight_layout()\nplt.show()\n\n\n    \nplt.figure(figsize=[15,4])\nsns.countplot(x='experience', hue='education_level',edgecolor=\"black\", alpha=0.7, data=train)\nsns.despine()\nplt.title(\"Countplot of experience by education_level\")\nplt.show()","bd1b2d1e":"mnj = train['target'].value_counts()  \nplt.figure(figsize=(6,4))\nsns.barplot(mnj.index, mnj.values, alpha=0.8)\nplt.ylabel('Number of Data', fontsize=12)\nplt.xlabel('target', fontsize=9)\nplt.xticks(rotation=90)\nplt.show();","c5b9a8f7":"EL = train['education_level'].value_counts()  \nplt.figure(figsize=(6,4))\nsns.barplot(EL.index, EL.values, alpha=0.8)\nplt.ylabel('Number of Data', fontsize=12)\nplt.xlabel('education_level', fontsize=9)\nplt.xticks(rotation=90)\nplt.show();","fd73a02a":"import plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objs as go\n\nel = train['education_level'].value_counts().reset_index()\nel.columns = [\n    'education_level', \n    'percent'\n]\nel['percent'] \/= len(train)\n\nfig = px.pie(\n    el, \n    names='education_level', \n    values='percent', \n    title='Education_level', \n    width=800,\n    height=500 \n)\n\nfig.show()","38ee996d":"et = train.sort_values(by='training_hours', ascending=True)[:7000]\nfigure = plt.figure(figsize=(10,6))\nsns.barplot(y=et.education_level, x=et.training_hours)\nplt.xticks()\nplt.xlabel('training_hours')\nplt.ylabel('education_level')\nplt.title('education_level:training_hours ')\nplt.show()","c9b975f2":"import plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objs as go\n\ncd = train['city_development_index'].value_counts().reset_index()\ncd.columns = [\n    'city_development_index', \n    'count'\n]\ncd['city_development_index'] = cd['city_development_index'].astype(str) + '-'\ncd = cd.sort_values(['count']).tail(50)\n\nfig = px.bar(\n    cd, \n    x='count', \n    y='city_development_index', \n    orientation='h', \n    title='Count: City development index', \n    width=1000,\n    height=900 \n)\n\nfig.show()","871ebaad":"cdi = train.sort_values(by='city_development_index', ascending=True)[:2000]\nfigure = plt.figure(figsize=(10,6))\nsns.barplot(y=cdi.city, x=cdi.city_development_index)\nplt.xticks()\nplt.xlabel('city_development_index')\nplt.ylabel('city')\nplt.title('City by city development index')\nplt.show()","22b61212":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(train[\"city_development_index\"], color=\"red\",ax = axes)\nplt.title(\"Distributional of city_development_index\")","bf8fa315":"import plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objs as go\n\nep = train['experience'].value_counts().reset_index()\nep.columns = [\n    'experience', \n    'percent'\n]\nep['percent'] \/= len(train)\n\nfig = px.pie(\n    ep, \n    names='experience', \n    values='percent', \n    title='Experience', \n    width=800,\n    height=500 \n)\n\nfig.show()","7f1e5985":"f, axes = plt.subplots(1,1, figsize = (16, 5))\ng1 = sns.distplot(train[\"training_hours\"], color=\"blue\",ax = axes)\nplt.title(\"Distributional of training_hours\")","5b91d9c9":"def wmnj(x):\n    y = train[[\"enrollee_id\",\"city\",\"city_development_index\",\"gender\",\"relevent_experience\",\"enrolled_university\",\"education_level\",\"major_discipline\",\"experience\",\"company_size\",\"company_type\",\"last_new_job\",\"training_hours\",\"target\"]][train[\"education_level\"] == x]\n    y = y.sort_values(by=\"enrollee_id\",ascending=False)\n    return y.head(15)","0d1e39e3":"wmnj(\"Graduate\")","2a818e1a":"wmnj(\"Masters\")","8cce46fb":"wmnj(\"High School\")","4ee6d26d":"wmnj(\"Phd\")","80745f2c":"wmnj(\"Primary School\")","0c103f00":"corr=train.corr()[\"target\"]\ncorr[np.argsort(corr, axis=0)[:-1]]\n","9cccefcc":"#plotting correlations\nnum_feat=train.columns[train.dtypes!=object]\nnum_feat=num_feat [:-1]\nlabels = []\nvalues = []\nfor col in num_feat:\n    labels.append(col)\n    values.append(np.corrcoef(train[col].values, train.target.values)[0,1])\n    \nind = np.arange(len(labels))\nwidth = 0.9\nfig, ax = plt.subplots(figsize=(8,15))\nrects = ax.barh(ind, np.array(values), color='skyblue')\nax.set_yticks(ind+((width)\/2.))\nax.set_yticklabels(labels, rotation='horizontal')\nax.set_xlabel(\"Correlation coefficient\")\nax.set_title(\"Correlation Coefficients each feature with target\");","51e5f71a":"corrMatrix=train[[\"city\",\"city_development_index\",\"gender\",\"relevent_experience\",\"enrolled_university\",\"education_level\",\n                   \"major_discipline\",\"experience\",\"company_size\",\"company_type\",\"last_new_job\",\"training_hours\",\"target\"]].corr()\n\nsns.set(font_scale=1.10)\nplt.figure(figsize=(15, 10))\n\nsns.heatmap(corrMatrix,  linewidths=0.01,\n            square=True,annot=True,cmap='viridis',linecolor=\"white\")\nplt.title('Correlation between features');","43fb1b4a":"# Creating a function that converts all values of , ['gender'], ['relevent_experience'] , ['enrolled_university'],\n# , ['education_level'], ['major_discipline'], ['experience'], ['company_type'],  ['company_size']\n# , ['last_new_job'], ['city'] into numbers\n\ndef gender_to_numeric(x):\n    if x=='Female': return 2\n    if x=='Male':   return 1\n    if x=='Other':   return 0\n    \ndef rel_experience(x):\n    if x=='Has relevent experience': return 1\n    if x=='No relevent experience':   return 0\n    \ndef enrollment(x):\n    if x=='no_enrollment'   : return 0\n    if x=='Full time course':   return 1 \n    if x=='Part time course':   return 2 \n    \ndef edu_level(x):\n    if x=='Graduate'       :   return 0\n    if x=='Masters'        :   return 1 \n    if x=='High School'    :   return 2 \n    if x=='Phd'            :   return 3 \n    if x=='Primary School' :   return 4 \n    \ndef major(x):\n    if x=='STEM'                   :   return 0\n    if x=='Business Degree'        :   return 1 \n    if x=='Arts'                   :   return 2 \n    if x=='Humanities'             :   return 3 \n    if x=='No Major'               :   return 4 \n    if x=='Other'                  :   return 5 \n    \ndef experience(x):\n    if x=='<1'      :   return 0\n    if x=='1'       :   return 1 \n    if x=='2'       :   return 2 \n    if x=='3'       :   return 3 \n    if x=='4'       :   return 4 \n    if x=='5'       :   return 5\n    if x=='6'       :   return 6\n    if x=='7'       :   return 7\n    if x=='8'       :   return 8 \n    if x=='9'       :   return 9 \n    if x=='10'      :   return 10 \n    if x=='11'      :   return 11\n    if x=='12'      :   return 12\n    if x=='13'      :   return 13 \n    if x=='14'      :   return 14 \n    if x=='15'      :   return 15 \n    if x=='16'      :   return 16\n    if x=='17'      :   return 17\n    if x=='18'      :   return 18\n    if x=='19'      :   return 19 \n    if x=='20'      :   return 20 \n    if x=='>20'     :   return 21 \n    \ndef company_t(x):\n    if x=='Pvt Ltd'               :   return 0\n    if x=='Funded Startup'        :   return 1 \n    if x=='Early Stage Startup'   :   return 2 \n    if x=='Other'                 :   return 3 \n    if x=='Public Sector'         :   return 4 \n    if x=='NGO'                   :   return 5 \n    \ndef company_s(x):\n    if x=='<10'          :   return 0\n    if x=='10\/49'        :   return 1 \n    if x=='100-500'      :   return 2 \n    if x=='1000-4999'    :   return 3 \n    if x=='10000+'       :   return 4 \n    if x=='50-99'        :   return 5 \n    if x=='500-999'      :   return 6 \n    if x=='5000-9999'    :   return 7\n    \ndef last_job(x):\n    if x=='never'        :   return 0\n    if x=='1'            :   return 1 \n    if x=='2'            :   return 2 \n    if x=='3'            :   return 3 \n    if x=='4'            :   return 4 \n    if x=='>4'           :   return 5 \n    \ndef city(x):\n    if x=='city_103'         : return  0\n    if x=='city_40'          : return  1\n    if x=='city_21'          : return  2\n    if x=='city_115'         : return  3\n    if x=='city_162'         : return  4\n    if x=='city_176'         : return  5\n    if x=='city_160'         : return  6\n    if x=='city_46'          : return  7\n    if x=='city_61'          : return  8\n    if x=='city_114'         : return  9\n    if x=='city_13'          : return  10\n    if x=='city_159'         : return  11\n    if x=='city_102'         : return  12\n    if x=='city_67'          : return  13\n    if x=='city_100'         : return  14\n    if x=='city_16'          : return  15\n    if x=='city_71'          : return  16\n    if x=='city_104'         : return  17\n    if x=='city_64'          : return  18\n    if x=='city_101'         : return  19\n    if x=='city_83'          : return  20\n    if x=='city_105'         : return  21\n    if x=='city_73'          : return  22\n    if x=='city_75'          : return  23\n    if x=='city_41'          : return  24\n    if x=='city_11'          : return  25\n    if x=='city_93'          : return  26\n    if x=='city_90'          : return  27\n    if x=='city_36'          : return  28\n    if x=='city_20'          : return  29\n    if x=='city_57'          : return  30\n    if x=='city_152'         : return  31\n    if x=='city_19'          : return  32\n    if x=='city_65'          : return  33\n    if x=='city_74'          : return  34\n    if x=='city_173'         : return  35\n    if x=='city_136'         : return  36\n    if x=='city_98'          : return  37\n    if x=='city_97'          : return  38\n    if x=='city_50'          : return  39\n    if x=='city_138'         : return  40\n    if x=='city_82'          : return  41\n    if x=='city_157'         : return  42\n    if x=='city_89'          : return  43\n    if x=='city_150'         : return  44\n    if x=='city_70'          : return  45\n    if x=='city_175'         : return  46\n    if x=='city_94'          : return  47\n    if x=='city_28'          : return  48\n    if x=='city_59'          : return  49\n    if x=='city_165'         : return  50\n    if x=='city_145'         : return  51\n    if x=='city_142'         : return  52\n    if x=='city_26'          : return  53\n    if x=='city_12'          : return  54\n    if x=='city_37'          : return  55\n    if x=='city_43'          : return  56\n    if x=='city_116'         : return  57\n    if x=='city_23'          : return  58\n    if x=='city_99'          : return  59\n    if x=='city_149'         : return  60\n    if x=='city_10'          : return  61\n    if x=='city_45'          : return  62\n    if x=='city_80'          : return  63\n    if x=='city_128'         : return  64\n    if x=='city_158'         : return  65\n    if x=='city_123'         : return  66\n    if x=='city_7'           : return  67\n    if x=='city_72'          : return  68\n    if x=='city_106'         : return  69\n    if x=='city_143'         : return  70\n    if x=='city_78'          : return  71\n    if x=='city_109'         : return  72\n    if x=='city_24'          : return  73\n    if x=='city_134'         : return  74\n    if x=='city_48'          : return  75\n    if x=='city_144'         : return  76\n    if x=='city_91'          : return  77\n    if x=='city_146'         : return  78\n    if x=='city_133'         : return  79\n    if x=='city_126'         : return  80\n    if x=='city_118'         : return  81\n    if x=='city_9'           : return  82\n    if x=='city_167'         : return  83\n    if x=='city_27'          : return  84\n    if x=='city_84'          : return  85\n    if x=='city_54'          : return  86\n    if x=='city_39'          : return  87\n    if x=='city_79'          : return  88\n    if x=='city_76'          : return  89\n    if x=='city_77'          : return  90\n    if x=='city_81'          : return  91\n    if x=='city_131'         : return  92\n    if x=='city_44'          : return  93\n    if x=='city_117'         : return  94\n    if x=='city_155'         : return  95\n    if x=='city_33'          : return  96\n    if x=='city_141'         : return  97\n    if x=='city_127'         : return  98\n    if x=='city_62'          : return  99\n    if x=='city_53'          : return  100\n    if x=='city_25'          : return  101\n    if x=='city_2'           : return  102\n    if x=='city_69'          : return  103\n    if x=='city_120'         : return  104\n    if x=='city_111'         : return  105\n    if x=='city_30'          : return  106\n    if x=='city_1'           : return  107\n    if x=='city_140'         : return  108\n    if x=='city_179'         : return  109\n    if x=='city_55'          : return  110\n    if x=='city_14'          : return  111\n    if x=='city_42'          : return  112\n    if x=='city_107'         : return  113\n    if x=='city_18'          : return  114\n    if x=='city_139'         : return  115\n    if x=='city_180'         : return  116\n    if x=='city_166'         : return  117\n    if x=='city_121'         : return  118\n    if x=='city_129'         : return  119\n    if x=='city_8'           : return  120\n    if x=='city_31'          : return  121\n    if x=='city_171'         : return  122","db4f284a":"train['gender'] = train['gender'].apply(gender_to_numeric)\ntrain['relevent_experience'] = train['relevent_experience'].apply(rel_experience)\ntrain['enrolled_university'] = train['enrolled_university'].apply(enrollment)\ntrain['education_level'] = train['education_level'].apply(edu_level)\ntrain['major_discipline'] = train['major_discipline'].apply(major)\ntrain['experience'] = train['experience'].apply(experience)\ntrain['company_type'] = train['company_type'].apply(company_t)\ntrain['company_size'] = train['company_size'].apply(company_s)\ntrain['last_new_job'] = train['last_new_job'].apply(last_job)\ntrain['city'] = train['city'].apply(city)\n\ntrain","bd05612b":"print(\"Any missing sample in training set:\",train.isnull().values.any())\n","0619e08c":"train['gender'] = train['gender'].fillna((train['gender'].mean()))\ntrain['enrolled_university'] = train['enrolled_university'].fillna((train['enrolled_university'].mean()))\ntrain['major_discipline'] = train['major_discipline'].fillna((train['major_discipline'].mean()))\ntrain['company_size'] = train['company_size'].fillna((train['company_size'].mean()))\ntrain['company_type'] = train['company_type'].fillna((train['company_type'].mean()))\ntrain['company_type'] = train['company_type'].fillna((train['company_type'].mean()))\n\ntrain","e8458db7":"test= pd.read_csv('..\/input\/hr-analytics-job-change-of-data-scientists\/aug_test.csv')\ntest.head()\n","84d5f338":"test['gender'] = test['gender'].apply(gender_to_numeric)\ntest['relevent_experience'] = test['relevent_experience'].apply(rel_experience)\ntest['enrolled_university'] = test['enrolled_university'].apply(enrollment)\ntest['education_level'] = test['education_level'].apply(edu_level)\ntest['major_discipline'] = test['major_discipline'].apply(major)\ntest['experience'] = test['experience'].apply(experience)\ntest['company_type'] = test['company_type'].apply(company_t)\ntest['company_size'] = test['company_size'].apply(company_s)\ntest['last_new_job'] = test['last_new_job'].apply(last_job)\ntest['city'] = test['city'].apply(city)\n\ntest","c93b1836":"print(\"Any missing sample in test set:\",test.isnull().values.any(), \"\\n\")","3542034a":"\ntest['gender'] = test['gender'].fillna((test['gender'].mean()))\ntest['enrolled_university'] = test['enrolled_university'].fillna((test['enrolled_university'].mean()))\ntest['major_discipline'] = test['major_discipline'].fillna((test['major_discipline'].mean()))\ntest['company_size'] = test['company_size'].fillna((test['company_size'].mean()))\ntest['company_type'] = test['company_type'].fillna((test['company_type'].mean()))\ntest['company_type'] = test['company_type'].fillna((test['company_type'].mean()))\n\ntest","bfca0a2d":"#Select feature column names and target variable we are going to use for training\n\nfeatures =[\"enrollee_id\",\"city\",\"city_development_index\",\"gender\",\"relevent_experience\",\"enrolled_university\",\"education_level\",\"major_discipline\",\"experience\",\"company_size\",\"company_type\",\"last_new_job\",\"training_hours\"]\ntarget = 'target'","6ceb03b1":"#This is input which our classifier will use as an input.\ntrain[features].head(10)","76c76096":"#Display first 10 target variables\ntrain[target].head(100).values","ee96b012":"from sklearn.model_selection import train_test_split\nY = train['target']\nX = train.drop(columns=['target'])\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.15, random_state=9)\n","29fdf564":"from catboost import CatBoostRegressor, Pool\nfrom sklearn.metrics import r2_score, mean_squared_error\nfrom sklearn.model_selection import cross_val_score\n\n\n# We define the model\nmodel = CatBoostRegressor(objective='RMSE')\n\n# We train model\nmodel.fit(X_train, Y_train)","0cab78cf":"#Applying the K-Fold Cross Validation for CatBoostRegressor\nfrom sklearn.model_selection import cross_val_score\naccuracies = cross_val_score(estimator = model, X = X_train, y = Y_train, cv = 5)\nprint(\"Accuracy:{:.2f} %\".format(accuracies.mean()*100))\nprint(\"Standard Deviation:{:.2f} %\".format(accuracies.std()*100))\n","7193cdb4":"model_CBR = CatBoostRegressor()\n    \nparameters = {'depth'         : [6,8,10],\n              'learning_rate' : [0.01, 0.05, 0.1],\n               'iterations'    : [30, 50, 100]\n                 }\ngrid = GridSearchCV(estimator=model_CBR, param_grid = parameters, cv = 2, n_jobs=-1)\ngrid.fit(X_train, Y_train)\nbest_param = grid.best_estimator_\n\nprint(\" Results from Grid Search \" )\nprint(\"\\n The best estimator across ALL searched params:\\n\", grid.best_estimator_)\nprint(\"\\n The best score across ALL searched params:\\n\", grid.best_score_)\nprint(\"\\n The best parameters across ALL searched params:\\n\", grid.best_params_)","7e8aa4a1":"#Make predictions using the features from the test data set\npredictions = model.predict(test[features])\n\npredictions","e4b3b38a":"# We predict target values (Split 15% from training data)\nY_predict = model.predict(X_test)\nY_predict","a9b3c1c9":"# We predict target values (GridSearchCV)\nY_predict1 = best_param.predict(X_test)\nY_predict1","7442b195":"from sklearn import metrics\nfpr, tpr, thresholds = metrics.roc_curve(train[target],  model.predict(train[features]))\nmetrics.auc(fpr, tpr)","26d3bd29":"#Test (Split 15% from training data)\nfrom sklearn import metrics\nfpr, tpr, thresholds = metrics.roc_curve(Y_test, Y_predict)\nmetrics.auc(fpr, tpr)","48a854b9":"#Test (Split 15% from training data)GridSearchCV \nfrom sklearn import metrics\nfpr, tpr, thresholds = metrics.roc_curve(Y_test, Y_predict1)\nmetrics.auc(fpr, tpr)","a5cbe43d":"#Create a  DataFrame\nsubmission = pd.DataFrame({'enrollee_id':test['enrollee_id'],'target':predictions})\n                        \n\n#Visualize the first 10 rows\nsubmission.head(10)","a693c265":"#Convert DataFrame to a csv file that can be uploaded\n#This is saved in the same directory as your notebook\nfilename = 'submission.csv'\n\nsubmission.to_csv(filename,index=False)\n\nprint('Saved file: ' + filename)","86b328df":"# Visualization","e3862950":"# education_level:training_hours","6cd3219f":"# Bar plots \n\nshowing the frequency of each category separated by label","c9aa9270":"# Prepocessing \n\n\nHere I creating a function that converts all values of gender and etc below into numbers (category)\n* ['gender'], ['relevent_experience'] , ['enrolled_university'],\n* ['education_level'], ['major_discipline'], ['experience'], ['company_type'], ['company_size']\n* ['last_new_job'], ['city'] ","ef4f3435":"Start from graduate, here I found :\n* If **city_103** --> city_development_index: **0.920** --> the gender is male --> has relevent experience and experience **> 20** -->  move to new job (1)\n* If **city_21** --> city_development_index: **0.624** --> the gender is male --> has relevent experience and experience **4** -->  move to new job (1)\n* If **city_19** --> city_development_index: **0.682** --> the gender is male --> has relevent experience and  experience **6** -->  move to new job (1)","f32e0bb7":"# Masters\n\nHere I found :\n* If **city_136** --> city_development_index: **0.897** --> the gender is male --> has relevent experience and experience **6** -->  move to new job (1)\n\n* If **city_103** --> city_development_index: **0.920** --> the gender is male --> has relevent experience and experience **17** --> move to new job (1)\n\n* If **city_159**\t --> city_development_index: **0.843** --> the gender is male --> has relevent experience and experience **7** --> move to new job (1)\n\n* If **city_50**\t --> city_development_index: **0.896** --> the gender is male --> has relevent experience and experience **10** --> move to new job (1)\n\n* If **city_106** --> city_development_index: **0.698** --> the gender is male --> has relevent experience and experience **8** --> move to new job (1)\n\n* If **city_21**\t --> city_development_index: **0.624** --> the gender is male --> has relevent experience and experience **14** --> move to new job (1)\n\nThe last one is different from other\n* **city_21** --> city_development_index: **0.624** --> the gender is male --> **No relevent experience** and experience **2** --> move to new job (1)","396cc4ef":"\n\nHere I try to measure correlation in data using Correlation coefficients.\n\nCorrelation coefficientsare used to measure how strong a relationship is between two variables.Correlation coefficient formulas are used to find how strong a relationship is between data. The formulas return a value between -1 and 1, where:\n \n* 1 indicates a strong positive relationship.\n* -1 indicates a strong negative relationship.\n* A result of zero indicates no relationship at all.\n\n![https:\/\/www.statisticshowto.com\/wp-content\/uploads\/2012\/10\/pearson-2-small.png](https:\/\/www.statisticshowto.com\/wp-content\/uploads\/2012\/10\/pearson-2-small.png)\n\nreference : https:\/\/www.statisticshowto.com\/probability-and-statistics\/correlation-coefficient-formula\/#Pearson","433d56c7":"# Heatmap","cf70e8ef":"# PhD\n\nHere I found :\n\n* If **city_42** --> city_development_index: **0.563** --> the gender is male --> has relevent experience and experience **< 1** --> move to new job (1)\n\n* If **city_103**\t --> city_development_index:** 0.920** --> the gender is male --> **No relevent experience** and experience **> 20** --> move to new job (1)\n\n* If **city_16**\t --> city_development_index: **0.910** --> the gender is female --> has relevent experience and experience **9** --> move to new job (1)","cdcbe0ef":"# Taining_hours","86bcf6ac":"# High School\n\nHere I found :\n* If **city_99** --> city_development_index: **0.915** --> the gender is male --> has relevent experience and experience **14** -->  move to new job (1)\n\n* If **city_100** --> city_development_index: **0.887** --> the gender is male --> has relevent experience and experience **>20** --> move to new job (1)\n\n* If **city_160**\t --> city_development_index: **0.920**\t --> the gender is male --> has relevent experience and experience **9** --> move to new job (1)\n\n* If **city_73**\t --> city_development_index: **0.754** --> the gender is male --> has relevent experience and experience **3** --> move to new job (1)\n\n* If **city_21**\t --> city_development_index: **0.624** --> the gender is male --> has relevent experience and experience **4** --> move to new job (1)\n\n","a60a5402":"Here I did compare the features that might influence the move to a new job and get the max, min, and mean of the features\n","13142a52":"# Correlation in Data","d4b2e9a6":"# Education Level\n\nThis dataset contains 5 education level:\n* Graduate\n* Masters\n* High School\n* PhD\n* Primary School\n","70cfb55f":"## Test : Replace nan values with average of columns","083c431e":"# Applying the K-Fold Cross Validation for CatBoostRegressor","63bc9874":"# Testing Data","b41cd400":"# Plotting correlations\n\n","5acb3a7b":"# City development index\n\nThe City Development Index was developed for the Second United Nations Conference on Human Settlements (Habitat II) in 1996 and measures the level of development in cities. The Urban Indicators Programme of the United Nations Human Settlements Programme (UN-Habitat) developed the indicator so that they could rank cities of the world according to their level of development and as a display of indicators depicting development. The CDI cuts across the different clusters identified in the Urban Indicator Framework as it is based on five sub indices namely, infrastructure, waste, health, education and city product. It is useful as it provides a snap-shot view of how cities are doing with respect to the different indices. It was invented by Dr Joe Flood, first Coordinator of the Urban Indicators Program, following a statistical analysis of city indicators data. Reference :https:\/\/en.wikipedia.org\/wiki\/City_development_index\n\n\n## Calculating the CDI\n\n\n\n<img src=\"https:\/\/www.researchgate.net\/profile\/Lubna_Hasan\/publication\/24115086\/figure\/tbl4\/AS:668624478019607@1536423906970\/Calculation-of-CDI-by-UN-HABITAT-GUIP-Index-Formula.png\" width=\"600\">","28791bda":"## Features\n\n* enrollee_id : Unique ID for enrollee\n* city: City code\n* citydevelopmentindex: Developement index of the city (scaled)\n* gender: Gender of enrolee\n* relevent_experience: Relevent experience of enrolee\n* enrolled_university: Type of University course enrolled if any\n* education_level: Education level of enrolee\n* major_discipline :Education major discipline of enrolee\n* experience: Enrolee total experience in years\n* company_size: No of employees in current employer's company\n* company_type : Type of current employer\n* lastnewjob: Difference in years between previous job and current job\n* training_hours: training hours completed\n* target: 0 \u2013 Not looking for job change, 1 \u2013 Looking for a job change","81843ab4":"# Prediction","3695fc1c":"## Check Missing Value","fc680ed1":"## Training Data","4ce466d0":"# City by city development index","fc350e3c":"# Experience\n\nEnrolee total experience in years","d9a98cfa":"# Graduate","85509a4b":"## Train : Replace nan values with average of columns\n","9804ec49":"# Applying GridSearchCV\n\n\nGridSearchCV is a library function that is a member of sklearn's model_selection package. It helps to loop through predefined hyperparameters and fit your estimator (model) on your training set. So, in the end, you can select the best parameters from the listed hyperparameters. \n\nReference : https:\/\/towardsdatascience.com\/grid-search-for-hyperparameter-tuning-9f63945e8fec#:~:text=What%20is%20GridSearchCV%3F,parameters%20from%20the%20listed%20hyperparameters.","b5590521":"## Count: City development index","50542788":"# Target\n\n* 0 \u2013 Not looking for job change, \n* 1 \u2013 Looking for a job change\n\nAs you can see, here we have imbalanced data, the number of 1 ( Looking for a job change) **<** 0 (Not looking for job change)","ce838548":"# Measure AUC\n\n\nThe AUC is an estimate of the probability that a classifier will rank a randomly chosen positive instance higher than a randomly chosen negative instance. Reference : https:\/\/www.kdnuggets.com\/2010\/09\/pub-is-auc-the-best-measure.html#:~:text=www.riceanalytics.com-,The%20area%20under%20the%20curve%20(AUC)%20that%20relates%20the%20hit,a%20randomly%20chosen%20negative%20instance.","3ddda86a":"## Okay, let's check features that might influence","f1aab82f":"# Primary School\n\n\nHere I found :\n\n* If **city_70** --> city_development_index:** 0.698** --> the gender is male --> **No relevent experience** and experience **< 1** --> move to new job (1)\n\n* If **city_103**\t --> city_development_index: **0.920** --> the gender is other --> **No relevent experience** and experience **3** --> move to new job (1)\n\n* If **city_103**\t --> city_development_index: **0.920** --> the gender is female --> **No relevent experience** and experience **2** --> move to new job (1)\n\n* If **city_126**\t --> city_development_index: **0.479** --> the gender is female --> Has relevent experience and experience **19** --> move to new job (1)","4f2a7888":"# Model\n\nCatBoost is an algorithm for gradient boosting on decision trees. It is developed by Yandex researchers and engineers, and is used for search, recommendation systems, personal assistant, self-driving cars, weather prediction and many other tasks at Yandex and in other companies, including CERN, Cloudflare, Careem taxi. It is in open-source and can be used by anyone.\nReference : https:\/\/catboost.ai\/"}}