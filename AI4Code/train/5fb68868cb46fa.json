{"cell_type":{"c23bff35":"code","6aba527d":"code","b2855b80":"code","7393e45a":"code","2ec7c43f":"code","308b680a":"code","fa71311b":"markdown","e50a7dad":"markdown"},"source":{"c23bff35":"def calc_word_indices(full_text, discourse_start, discourse_end):\n    start_index = len(full_text[:discourse_start].split())\n    token_len = len(full_text[discourse_start:discourse_end].split())\n    output = list(range(start_index, start_index + token_len))\n    if output[-1] >= len(full_text.split()):\n        output = list(range(start_index, start_index + token_len-1))\n    return \" \".join(str(x) for x in output)","6aba527d":"import os\nimport pandas as pd\nfrom tqdm import tqdm","b2855b80":"train_dir = \"..\/input\/feedback-prize-2021\/train\/\"\ntrain_files = os.listdir(train_dir)\ntrain = pd.read_csv(\"..\/input\/feedback-prize-2021\/train.csv\",dtype={'discourse_start': int, 'discourse_end': int})","7393e45a":"for file in tqdm(train_files):\n    idx = train['id'] == file[:-4]\n    train.loc[idx,'sanity_check'] = train.loc[idx].apply(\n        lambda row: calc_word_indices(open(train_dir + file, 'r').read(),\n                    row.discourse_start, row.discourse_end) == row.predictionstring,\n        axis = 1\n    )","2ec7c43f":"train.loc[train.sanity_check == False]","308b680a":"len(train.loc[train.sanity_check == True])","fa71311b":"**Predictionstring from char indices**\n\nBelow is the algorithm published by @aignerpicou in [this thread](https:\/\/www.kaggle.com\/c\/feedback-prize-2021\/discussion\/297688)","e50a7dad":"Now let's use that to check the predictionstring column in 'train.csv'"}}