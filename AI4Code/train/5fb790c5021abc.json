{"cell_type":{"218a3df8":"code","e7e2b48e":"code","842dbb8e":"code","0423fe78":"code","10478cc4":"code","cf778f0a":"code","b4e0e873":"code","a036ae48":"code","a0ec6e54":"code","ac3addf8":"code","6f07d47b":"code","917a4dba":"code","f4998270":"code","95e61172":"markdown","d07c72e9":"markdown","9563f128":"markdown","22a79a35":"markdown","0e4256f8":"markdown","e76fca4b":"markdown","eaa397db":"markdown","b9c1e220":"markdown","e1900a18":"markdown"},"source":{"218a3df8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nimport gc\nimport warnings\nwarnings.filterwarnings(\"ignore\")","e7e2b48e":"train = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/train.csv')\nsubmission = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/sample_submission.csv')\ntest = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/test.csv')","842dbb8e":"train = [train.iloc[500000*i:500000*(i+1), :].reset_index(drop = True) for i in range(10)]\ntest = [test.iloc[500000*i:500000*(i+1), :].reset_index(drop = True) for i in range(4)]","0423fe78":"dr = pd.concat([train[i][['signal']] for i in range(10)]+[test[i][['signal']] for i in range(4)], axis = 1)\n\ndr.columns = ['train_b1', 'train_b2', 'train_b3', 'train_b4', 'train_b5', 'train_b6', 'train_b7', 'train_b8',\n             'train_b9', 'train_b10', 'test_b1', 'test_b2', 'test_b3', 'test_b4']\n\ncorr = dr.corr()\n\ncorr","10478cc4":"import seaborn as sns\ncmap = cmap=sns.diverging_palette(5, 250, as_cmap=True)\ndef magnify():\n    return [dict(selector=\"th\",\n                 props=[(\"font-size\", \"7pt\")]),\n            dict(selector=\"td\",\n                 props=[('padding', \"0em 0em\")]),\n            dict(selector=\"th:hover\",\n                 props=[(\"font-size\", \"12pt\")]),\n            dict(selector=\"tr:hover td:hover\",\n                 props=[('max-width', '200px'),\n                        ('font-size', '12pt')])\n]","cf778f0a":"corr.style.background_gradient(cmap, axis=1).set_properties(**{'max-width': '100px', 'font-size': '10pt'})\\\n        .set_caption(\"Signal Correlation\").set_precision(2).set_table_styles(magnify())","b4e0e873":"MAX_roll = 6\ndef movingaverage(df):\n    df['cummax'] = df['signal'].cummax()\n    df['cummin'] = df['signal'].cummin()\n    \n    for i in range(2,MAX_roll):\n        df['MA_{}'.format(i)] = df['signal'].rolling(window=i).mean()\n    df.fillna(-999, inplace = True)\n    df.reset_index(drop = True, inplace = True)\n    return df","a036ae48":"train = [movingaverage(x) for x in train]\ntest = [movingaverage(x) for x in test]","a0ec6e54":"train[2].head()","ac3addf8":"dr = pd.concat([train[i][['MA_2']] for i in range(10)]+[test[i][['MA_2']] for i in range(4)], axis = 1)\n\ndr.columns = ['train_b1', 'train_b2', 'train_b3', 'train_b4', 'train_b5', 'train_b6', 'train_b7', 'train_b8',\n             'train_b9', 'train_b10', 'test_b1', 'test_b2', 'test_b3', 'test_b4']\n\ncorr = dr.corr()\ncorr.style.background_gradient(cmap, axis=1).set_properties(**{'max-width': '100px', 'font-size': '10pt'})\\\n        .set_caption(\"Signal Moving Average 2 Correlation\").set_precision(2).set_table_styles(magnify())","6f07d47b":"dr = pd.concat([train[i][['MA_3']] for i in range(10)]+[test[i][['MA_3']] for i in range(4)], axis = 1)\n\ndr.columns = ['train_b1', 'train_b2', 'train_b3', 'train_b4', 'train_b5', 'train_b6', 'train_b7', 'train_b8',\n             'train_b9', 'train_b10', 'test_b1', 'test_b2', 'test_b3', 'test_b4']\n\ncorr = dr.corr()\ncorr.style.background_gradient(cmap, axis=1).set_properties(**{'max-width': '100px', 'font-size': '10pt'})\\\n        .set_caption(\"Signal Moving Average 3 Correlation\").set_precision(2).set_table_styles(magnify())","917a4dba":"dr = pd.concat([train[i][['MA_4']] for i in range(10)]+[test[i][['MA_4']] for i in range(4)], axis = 1)\n\ndr.columns = ['train_b1', 'train_b2', 'train_b3', 'train_b4', 'train_b5', 'train_b6', 'train_b7', 'train_b8',\n             'train_b9', 'train_b10', 'test_b1', 'test_b2', 'test_b3', 'test_b4']\n\ncorr = dr.corr()\ncorr.style.background_gradient(cmap, axis=1).set_properties(**{'max-width': '100px', 'font-size': '10pt'})\\\n        .set_caption(\"Signal Moving Average 4 Correlation\").set_precision(2).set_table_styles(magnify())","f4998270":"dr = pd.concat([train[i][['MA_5']] for i in range(10)]+[test[i][['MA_5']] for i in range(4)], axis = 1)\n\ndr.columns = ['train_b1', 'train_b2', 'train_b3', 'train_b4', 'train_b5', 'train_b6', 'train_b7', 'train_b8',\n             'train_b9', 'train_b10', 'test_b1', 'test_b2', 'test_b3', 'test_b4']\n\ncorr = dr.corr()\ncorr.style.background_gradient(cmap, axis=1).set_properties(**{'max-width': '100px', 'font-size': '10pt'})\\\n        .set_caption(\"Signal Moving Average 5 Correlation\").set_precision(2).set_table_styles(magnify())","95e61172":"**Splitng the data by batches..\n**","d07c72e9":"**What happens if we see moving average?**","9563f128":"A clear cluster can be seen within train batch 7 to 10\n\n* The first batch of test is midly correlated with train batch 7 to 10.\n* The second batch of test is slightly correlated with train batch 7 to 10.\n* The third batch of test is highly correlated with train batch 7 to 10.\n* The fourth batch of test has no correlation with train batch 7 to 10.\n\n\nOne can use it in modelling. You can provide more weight to train batch 7 to 10 while predicting for test batch 3 and so on.","22a79a35":"**Inference: These correlation can be used for advance feature engineering and may be seperate modelling excerise for each test batches using different combination of train batches.**","0e4256f8":"**Let see correlation between Moving Averages:**","e76fca4b":"* A Cluster among train batch 1 to 4.\n\n* This group correlates with test batch 4 which was not correlated with any train batch on signals.","eaa397db":"**Loading the data.. **","b9c1e220":"**Moving Average 3 Correlation**","e1900a18":"**Let style it !**"}}