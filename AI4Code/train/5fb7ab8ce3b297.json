{"cell_type":{"781efde0":"code","313352f2":"code","b08c96a3":"code","c922ad1b":"code","e52af03e":"code","88b2f383":"code","48fc69d8":"code","a5bffac6":"code","01293510":"code","863f08aa":"code","41632090":"code","f26aa01c":"code","2954aa6b":"code","610631fe":"code","758fe0b1":"code","4c8af85a":"code","a5896944":"code","9f87e6ca":"code","08946762":"code","d7c874ad":"code","806632d5":"code","0afd1037":"code","87cc0dea":"code","9b9b9a7f":"code","53bd0dd4":"code","2e7dc0b1":"code","0f87649d":"code","9082f7a0":"code","3771b356":"code","2c6cc4e8":"code","c8117749":"code","e76c6b36":"code","00fcbc06":"code","48fd05e9":"code","7653a7d3":"code","c739a5d3":"code","54e50c62":"code","3f3e19b7":"code","4e19f76e":"code","c4563a31":"code","871c3cf3":"code","41a57e8c":"code","54d5cbfd":"code","458dd048":"code","1d11c974":"code","5afb6544":"code","2130b7b4":"code","c7a73c29":"code","ebdcd81b":"code","82375c58":"code","6a2168b8":"code","c9a4e097":"code","29dda2d4":"code","19229812":"code","fe04497c":"code","6eb7512e":"code","bd065ff2":"code","7465f55d":"code","27c4e66c":"code","25df3e25":"code","8890df50":"code","72238dc1":"code","c9d3bea8":"code","9be142cd":"code","7923d2b9":"code","be94d16c":"code","234f1d99":"code","69ab6d1c":"code","4619e254":"code","872e78e2":"code","c2385470":"code","a2e38b44":"code","d51c3061":"code","57d11235":"code","7864802e":"code","96170779":"code","bb61d53b":"code","7f607aaa":"code","aba94630":"code","d3a0499a":"code","f9649c95":"code","8ac420ae":"code","d938b2b3":"code","3d7319a5":"code","98744707":"code","845de122":"code","fd6d45cb":"code","ddee8d43":"code","9dad62f2":"code","3814c50c":"code","3c49ee7a":"code","aa06becb":"code","afa11e7e":"code","5f69b54b":"code","aaa0bc21":"code","bd154751":"code","7d49cbbb":"code","647ec5ac":"code","f38894b6":"code","2de92d85":"code","66f3e6bc":"code","56d3751c":"code","5943bb25":"code","c1891eb0":"code","b6417a39":"code","66e15f8b":"code","b290c327":"code","602a5c28":"code","8e7bc183":"code","c29e8b7b":"code","965e0493":"code","c41110ad":"code","0ead35a0":"code","0cb295ee":"code","a43b4dfa":"code","d6c1389d":"code","a13534fa":"code","16893bee":"code","f308769f":"code","4a991309":"code","902847c6":"code","c587f862":"code","2c23d364":"code","4b3122d0":"code","3a3ae010":"code","7f5964da":"code","64ae8291":"code","90281b3c":"code","f850a010":"code","6f1eec66":"code","9caf8cb2":"code","662086b9":"code","287e2a3c":"code","54efba95":"code","ed01fc07":"code","b8803f65":"code","7753d9bb":"code","db89c2e7":"code","83c45c8e":"code","f10aac2b":"code","c8605347":"code","a65e4fa1":"code","4c95c8ba":"code","6f413747":"code","0acfe7f0":"code","446d47ac":"code","3cefe697":"code","5368e4aa":"code","d76e08bf":"code","255d31b9":"code","5a302615":"code","ddd19766":"code","23b00dee":"code","67e6c789":"code","e4db4a05":"code","39d5e1ab":"code","0b7dee8d":"code","04415da5":"code","3d78b7f7":"code","ea8433ab":"code","e929a238":"code","7dd171ab":"code","5075294c":"code","809365ce":"code","c6752dcd":"code","87304c41":"code","93a7f58d":"code","f9a30ef2":"code","12055741":"code","3cf2a36c":"code","2b6a3992":"code","5502f739":"code","ed5f0a85":"code","d9dd9969":"code","284b3296":"code","b7e51a28":"code","bb7e3c98":"code","f5d11de5":"code","96f0e231":"code","8a13d305":"code","24a4af1e":"code","548da42d":"code","7c0b7ae3":"code","a85d6460":"code","f932e7ab":"code","f2807d9f":"code","4c419402":"code","3c699162":"code","cf2c54a6":"code","6b37f006":"code","15d7b371":"code","dd66390a":"code","37dfee7b":"code","73611bbf":"code","ccef5bce":"code","af42414f":"code","937e2ca7":"code","851e4af5":"code","1a51ea15":"code","4359eb24":"code","4f721365":"code","fa9df278":"code","d0814687":"code","22977884":"code","d65975ac":"code","76cd86a0":"code","5f9320b0":"code","77fc84cc":"code","b7e89ef9":"code","68581406":"code","8681850d":"code","08337054":"code","e92f29d6":"code","0bfd32cd":"code","7dbfc33f":"code","8b77a151":"code","b27653b0":"code","dfab620a":"code","ffe47ac5":"code","697d44a3":"code","2fd86af5":"code","f2e6cca9":"code","57bc93ca":"code","31f65c09":"code","068ebe25":"code","c1ea4b6a":"code","3dbc00b2":"code","70d779c4":"code","1312708e":"code","afd707f3":"code","dc043814":"code","38f41133":"code","993ca4dc":"code","86aaff80":"code","5c0fd346":"code","c05c3341":"code","342fb55f":"code","2d2b0513":"code","3a98c2a7":"code","2ec0ac87":"code","53f2d23b":"code","613098d3":"code","0971f2d7":"code","2eca2a6a":"code","a921750e":"code","77429788":"code","5cb83b0c":"code","fb6a0843":"code","c63a9d15":"code","4a4a26d9":"code","1cb4cb70":"code","87fc0b03":"code","95e2fe4b":"code","cedbb3ce":"code","8d1fc46e":"code","9f77807b":"code","080e58cc":"code","ac2b3fc8":"code","12952344":"code","58bff45c":"code","ec210ea5":"code","16ac1624":"code","0e7aaa75":"code","cf2d539c":"code","2d5e0f6c":"code","e9cf0b8a":"code","9fae9fa7":"code","f4f40b2e":"code","0dbf3ec1":"code","07210721":"code","ddbb9aa2":"code","37b1cc8d":"code","11ca56d5":"code","57211204":"code","1546be00":"code","18afb7d8":"code","49e632d6":"code","0efaf4d1":"code","c044db58":"code","9c8a700a":"code","806c5ba8":"code","46528d0c":"code","e38fe127":"code","488b7dde":"code","abf97ea5":"code","3235a876":"code","68f7561e":"code","c4f62794":"code","3ce4583a":"code","80df69a0":"code","542692dd":"code","f59975f0":"code","27f47df0":"code","cd39cf57":"code","e07362dc":"code","7334bbfa":"code","5cdc108a":"code","80ea6cc9":"code","ef5c25f1":"code","d9bf972a":"code","fc73850a":"code","cabe5d49":"code","49852070":"code","260d56e4":"code","d3e630c1":"code","96d2ebf5":"code","e6931a36":"code","a62327f5":"code","b365c32a":"code","55244172":"code","0707613e":"markdown","fe1c7c76":"markdown","b66aa774":"markdown","b9de2ef3":"markdown","dbc87942":"markdown","a002bda2":"markdown","345e811a":"markdown","0c132af9":"markdown","ae6a90d2":"markdown","18d592c8":"markdown","a0aa6673":"markdown","a76938b7":"markdown","a95df990":"markdown","f8c0f989":"markdown","67edded7":"markdown","efcd2fc5":"markdown","a144868b":"markdown","538fd7ae":"markdown","d307521d":"markdown","a1d76dd6":"markdown","fcd86922":"markdown","cb750fcc":"markdown","a3856e14":"markdown","c7e6b210":"markdown","7c7a429a":"markdown","640d4c0b":"markdown","2c955840":"markdown","ceec84b2":"markdown","ece492cc":"markdown","5fb0a387":"markdown","f9d0f561":"markdown","5b2f7c41":"markdown","374bc420":"markdown","2651ca84":"markdown","5f562dc0":"markdown","0cd734e6":"markdown","a996cbec":"markdown","258cfc46":"markdown","591cee22":"markdown","a922450b":"markdown","9df3326e":"markdown","95588b13":"markdown","89880422":"markdown","7d2e943d":"markdown","cb37b9f8":"markdown","f64effb6":"markdown","30b11932":"markdown","d6e92683":"markdown","b73aec0b":"markdown","40ac6e1a":"markdown","715852a2":"markdown","4e27566a":"markdown","fd80a951":"markdown","705fbbca":"markdown","f2ab8560":"markdown","fb968d4b":"markdown","abe599bb":"markdown","9f31038a":"markdown","5c52e5c2":"markdown","79132c88":"markdown","a7212811":"markdown","c8d622fc":"markdown","a0fb922d":"markdown","70554c9a":"markdown","e2161752":"markdown","263b9024":"markdown","0ee5ae5e":"markdown","9aa1a3d8":"markdown","cc181eb1":"markdown","fbe092e5":"markdown","55640295":"markdown","cfd4ad98":"markdown","bcf87006":"markdown","cbb5934d":"markdown","19aa7369":"markdown","d5c949ba":"markdown","68cdd9f0":"markdown","f2396706":"markdown","b1779b64":"markdown","390a70d8":"markdown","5e30252e":"markdown","c41d9ba0":"markdown","a8d281f0":"markdown","6ea26ec3":"markdown","65237d80":"markdown","e8aa4081":"markdown","53a23db0":"markdown","fb203c1b":"markdown","dc5f546c":"markdown","92dde6a1":"markdown","6137a3f7":"markdown","68ec02c2":"markdown","3ae53026":"markdown","73a0e529":"markdown","313d2f7a":"markdown","80bb9123":"markdown","27fee38d":"markdown","abd39fe8":"markdown","ead01008":"markdown","3381d26c":"markdown","aa041eef":"markdown","3fd03713":"markdown","7b8d5bbc":"markdown","e94924a4":"markdown","2ae975e4":"markdown","1e7326d7":"markdown","3a7abca5":"markdown","99b46dfc":"markdown","98541eb6":"markdown","1bf6672f":"markdown","965e447f":"markdown","8b1519b3":"markdown","a8c33242":"markdown","33695017":"markdown","119241c1":"markdown","1b9a8254":"markdown","3f817dea":"markdown","1c2d030e":"markdown","9d588107":"markdown","efc6bad0":"markdown","ce466cf6":"markdown","d339ac88":"markdown","1e15d7fc":"markdown","5e99788f":"markdown","ba341da1":"markdown","ff1f4f11":"markdown","818968fb":"markdown","1f7abaa4":"markdown","8a8ba508":"markdown","0995b852":"markdown","da87ece3":"markdown","77d0a179":"markdown","e3e37fae":"markdown","c13aec3f":"markdown","a7ba98ed":"markdown","d62cbc8b":"markdown","365965e4":"markdown","927a7c89":"markdown","060f13c2":"markdown","a2674462":"markdown","6b5eaeed":"markdown","a8afb18f":"markdown","53cef5ec":"markdown","e8ccfdbe":"markdown","984df712":"markdown","f4bfbf8f":"markdown","0263411b":"markdown","e5ad9234":"markdown","9ab11365":"markdown","19c78be9":"markdown","ba1cc9b3":"markdown","f3a0b443":"markdown","1cb25788":"markdown","4155190f":"markdown","be89b9c9":"markdown","2d932139":"markdown","d4ad0636":"markdown","7a11300e":"markdown","2854dd60":"markdown","f57f3ffd":"markdown","ebeac994":"markdown","6a8a0c4a":"markdown","ede4b934":"markdown","50e7b3e4":"markdown","05ac4bc1":"markdown","9e1c0425":"markdown","196296d4":"markdown","6949c55a":"markdown","7ceac720":"markdown","8bc6062d":"markdown","f450fd1b":"markdown","ab70e3e3":"markdown","f6d39dda":"markdown","a059a30b":"markdown","2485da4e":"markdown","30d4cf02":"markdown","52608b60":"markdown","83279e1f":"markdown","c0095c86":"markdown","0c6f6a73":"markdown","c0274480":"markdown","de766a16":"markdown","7e28cecb":"markdown","5474dff9":"markdown","1cd94e03":"markdown","83f8ceab":"markdown","de4acfc1":"markdown","573dad12":"markdown","881a57bd":"markdown","ffc2b9bf":"markdown"},"source":{"781efde0":"#!pip3 install catboost","313352f2":"#pip install pandas-profiling","b08c96a3":"#pip install lazypredict","c922ad1b":"#!pip install xgboost","e52af03e":"!pip install -U seaborn","88b2f383":"#!pip install --upgrade pip","48fc69d8":"import sys\n#!{sys.executable} -m pip install -U pandas-profiling[notebook]\n#!jupyter nbextension enable --py widgetsnbextension","a5bffac6":"import numpy as np\nimport pandas as pd\nimport sys\nimport re\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nimport time\nimport xgboost as xgb\n#import lazypredict\n\n#from lazypredict.Supervised import LazyRegressor\nfrom pandas_profiling import ProfileReport\nfrom scipy.stats import ttest_ind\nfrom itertools import combinations\nfrom tqdm.notebook import tqdm\nfrom catboost import CatBoostRegressor\n\nfrom sklearn.utils import shuffle\nfrom sklearn.model_selection import train_test_split, KFold, RandomizedSearchCV\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder, StandardScaler, RobustScaler, MinMaxScaler\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.feature_selection import f_regression, mutual_info_regression\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor, ExtraTreesRegressor, BaggingRegressor\nfrom sklearn.ensemble import StackingRegressor\n\n%matplotlib inline\nwarnings.simplefilter('ignore')\nsns.set()","01293510":"sns.__version__","863f08aa":"print('Python       :', sys.version.split('\\n')[0])\nprint('Numpy        :', np.__version__)","41632090":"# \u0437\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u043c \u0432\u0435\u0440\u0441\u0438\u044e \u043f\u0430\u043a\u0435\u0442\u043e\u0432, \u0447\u0442\u043e\u0431\u044b \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u044b \u0431\u044b\u043b\u0438 \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u043c\u044b:\n!pip freeze > requirements.txt","f26aa01c":"# \u0432\u0441\u0435\u0433\u0434\u0430 \u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0439\u0442\u0435 RANDOM_SEED, \u0447\u0442\u043e\u0431\u044b \u0432\u0430\u0448\u0438 \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u044b \u0431\u044b\u043b\u0438 \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u043c\u044b\nRANDOM_SEED = 42","2954aa6b":"def mape(y_true, y_pred):\n    \"\"\"\n    \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0435\u0442\u0440\u0438\u043a\u0443 MAPE.\n    \u041d\u0430 \u0432\u0445\u043e\u0434 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0445 \u0438 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 y.\n    \"\"\"\n    return np.mean(np.abs((y_pred-y_true)\/y_true))","610631fe":"def months_to_sent(months):\n    \"\"\"\n    \u0424\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043d\u0430 \u0432\u0445\u043e\u0434 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0435\u0441\u044f\u0446\u0435\u0432, \u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \"x  \u043c\u0435\u0441\u044f\u0446(-\u0430 -\u0435\u0432)\"\n    \"\"\"\n    if months == 1:\n        return f'{months} \u043c\u0435\u0441\u044f\u0446'\n    elif 2 <= months <= 4:\n        return f'{months} \u043c\u0435\u0441\u044f\u0446\u0430'\n    return f'{months} \u043c\u0435\u0441\u044f\u0446\u0435\u0432'\n\n\ndef years_to_sent(years):\n    \"\"\"\n    \u0424\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043d\u0430 \u0432\u0445\u043e\u0434 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u0435\u0442, \u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \"x  \u043b\u0435\u0442\/\u0433\u043e\u0434\/\u0433\u043e\u0434\u0430\"\n    \"\"\"\n    if 11 <= years <= 14 or 5 <= years % 10 <= 9 or years % 10 == 0:\n        return f'{years} \u043b\u0435\u0442'\n    elif years % 10 == 1:\n        return f'{years} \u0433\u043e\u0434'\n    elif 2 <= years % 10 <= 4:\n        return f'{years} \u0433\u043e\u0434a'\n\n\ndef tenure(row):\n    \"\"\"\n    \u0424\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u044f\u0447\u0435\u0439\u043a\u0438 \"\u0412\u043b\u0430\u0434\u0435\u043d\u0438\u0435\" \u0432 train \u043a \u0442\u043e\u043c\u0443 \u0436\u0435 \u0432\u0438\u0434\u0443, \u043a\u0430\u043a \u0432 test.\n    \u0412\u0445\u043e\u0434: \u0441\u0442\u0440\u043e\u043a\u0430 series (\u0441\u0442\u0440\u043e\u043a\u0430 \u043a\u043e\u043b\u043e\u043d\u043a\u0438).\n    \u0412\u044b\u0445\u043e\u0434: \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u043c\u0435\u0441\u0442\u043e \u0441\u043b\u043e\u0432\u0430\u0440\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0432 \u0432\u0438\u0434\u0435 \"x \u043b\u0435\u0442 y \u043c\u0435\u0441\u044f\u0446\u0435\u0432\"\n    \"\"\"\n    row = re.findall('\\d+', str(row))  # \u043d\u0430\u0445\u043e\u0434\u0438\u043c \u0432\u0441\u0435 \u0446\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435\n    if row != []:\n        years = 2020 - (int(row[0])+1)  # 2020, \u0442.\u043a. \u0434\u0430\u043d\u043d\u044b\u0435 \u0441\u043e\u0431\u0440\u0430\u043d\u044b \u0432 2020 \u0433\u043e\u0434\u0443\n        months = 2 + (12 - int(row[1]))\n        if years < 0:\n            return months_to_sent(int(row[1]))\n        elif years == 0 and months < 12:\n            return months_to_sent(months)\n        elif years >= 0 and months == 12:\n            return years_to_sent(years + 1)\n        elif years >= 0 and months > 12:\n            return years_to_sent(years + 1)+' \u0438 '+months_to_sent(months - 12)\n        elif years > 0 and months < 12:\n            return years_to_sent(years)+' \u0438 '+months_to_sent(months)\n        return None","758fe0b1":"def num_of_km(row):\n    \"\"\"\n    \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u0432\u0435\u043e\u0434\u0438\u0442 \u0444\u043e\u0440\u043c\u0430\u0442 \u0434\u0430\u043d\u043d\u044b\u0445 \"y yyy \u043a\u043c\" \u0432 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043c.\n    \u0412\u0445\u043e\u0434: \u0441\u0442\u0440\u043e\u043a\u0430 series.\n    \u0412\u044b\u0445\u043e\u0434: \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043c.\n    \"\"\"\n    if pd.notnull(row):\n        # \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443 \u043d\u0430 \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u0437 \u0447\u0438\u0441\u0435\u043b \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a\u043c\n        list_km = row.split(' ')\n        # print(list_km)\n        if len(list_km) == 2:  # \u0435\u0441\u043b\u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u0432 \u043a\u043c \u0434\u043e 999\n            if list_km[1] in ['\u043a\u043c']:\n                return int(list_km[0])\n        return int(list_km[0]+list_km[1])  # \u043a\u043c \u0431\u043e\u043b\u0435\u0435 1000","4c8af85a":"def convert_engineDisplacement_to_float(row):\n    \"\"\"\n    \u0424\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043f\u0440\u043e \u043e\u0431\u044a\u0435\u043c\u0435 \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f, \u043d\u0430\u0445\u043e\u0434\u0438\u0442 \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 (\u0447\u0435\u0440\u0435\u0437 \u0442\u043e\u0447\u043a\u0443, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 2.0),\n    \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043b\u0438\u0442\u0440\u043e\u0432 \u0432\u043e float \u0444\u043e\u0440\u043c\u0430\u0442\u0435.\n    \"\"\"\n    row = str(row)\n    volume = re.findall('\\d\\.\\d', row)\n    if volume == []:\n        return None\n    return float(volume[0])","a5896944":"def intitial_eda_checks(df, missing_percent):\n    '''\n    \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043d\u0430 \u0432\u0445\u043e\u0434 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043f\u043e\u0440\u043e\u0433 % \u043f\u0443\u0441\u0442\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0445\u043e\u0442\u0438\u043c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c. \n    \u041d\u0430 \u0432\u044b\u0445\u043e\u0434 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0443\u043c\u043c\u0435 \u043f\u0443\u0441\u0442\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043a\u043e\u043b\u043e\u043d\u043e\u043a, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043f\u0440\u043e\u0446\u0435\n    '''\n    if df.isnull().sum().sum() > 0:\n        mask_total = df.isnull().sum().sort_values(ascending=False)\n        total = mask_total[mask_total > 0]\n\n        mask_percent = df.isnull().mean().sort_values(ascending=False)\n        percent = mask_percent[mask_percent > 0]\n\n        series = mask_percent[mask_percent > missing_percent]\n        columns = series.index.to_list()\n\n        missing_data = pd.DataFrame(pd.concat(\n            [total, round(percent*100, 2)], axis=1, keys=['\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e', '%']))\n        print('\u0421\u0443\u043c\u043c\u0430 \u0438 \u043f\u0440\u043e\u0446\u0435\u043d\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 NaN:\\n \\n')\n        display(missing_data)\n    else:\n        print('NaN \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b.')","9f87e6ca":"def num_of_months(row):\n    \"\"\"\n    \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u0432\u0435\u043e\u0434\u0438\u0442 \u0444\u043e\u0440\u043c\u0430\u0442 \u0434\u0430\u043d\u043d\u044b\u0445 \"x \u043b\u0435\u0442 y \u043c\u0435\u0441\u044f\u0446\u0430(\u0435\u0432)\" \u0432 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0435\u0441\u044f\u0446\u0435\u0432.\n    \n    \u0412\u0445\u043e\u0434: \u0441\u0442\u0440\u043e\u043a\u0430 series.\n    \u0412\u044b\u0445\u043e\u0434: \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0435\u0441\u044f\u0446\u0435\u0432.\n    \"\"\"\n    if pd.notnull(row) and row != 'no_data':\n        list_ownership = row.split()  # \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443 \u043d\u0430 \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u0437 \u043c\u0435\u0441\u044f\u0446\u0430 \u0438 \u043b\u0435\u0442\n        if len(list_ownership) == 2:  # \u0435\u0441\u043b\u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u043e \u0433\u043e\u0434\u044b\n            if list_ownership[1] in ['\u0433\u043e\u0434', '\u0433\u043e\u0434\u0430', '\u043b\u0435\u0442']:\n                return int(list_ownership[0])*12\n            return int(list_ownership[0])  # \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043c \u0433\u043e\u0434 \u0432 \u043c\u0435\u0441\u044f\u0446\u044b\n        # \u0441\u043b\u0443\u0447\u0430\u0439, \u043a\u043e\u0433\u0434\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442\u0441\u044f \u0438\u043d\u0444\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u043e \u043c\u0435\u0441\u044f\u0446\n        # \u043f\u0440\u0438\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a \u0433\u043e\u0434\u0430\u043c*12 \u043a\u043e\u043b\u0438\u0447\u0435\u0442\u0441\u0432\u043e \u043c\u0435\u0441\u044f\u0446\u0435\u0432\n        return int(list_ownership[0])*12 + int(list_ownership[3])","08946762":"def get_boxplot(column):\n    \"\"\"\n    \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0442\u0440\u0438\u0441\u043e\u0432\u043a\u0438 \u043a\u043e\u0440\u043e\u0431\u043e\u0447\u043d\u043e\u0439 \u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0434\u043b\u044f \u043d\u0435\u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432.\n    \n    \u041d\u0430 \u0432\u0445\u043e\u0434 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043a\u043e\u043b\u043e\u043d\u043e\u043a\u0443, \u0434\u043b\u044f \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u0438\u043c \u0433\u0440\u0430\u0444\u0438\u043a.\n    \u0413\u0440\u0430\u0444\u0438\u043a \u043e\u0442\u0440\u0438\u0441\u043e\u0432\u044b\u0432\u0430\u0435\u043c \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 pricing, \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u043e\u0439 \u043f\u043e \u043a\u0432\u0430\u043d\u0442\u0438\u043b\u044e.\n    \"\"\"\n    fig, ax = plt.subplots(figsize=(25, 5))\n    plt.subplots_adjust(wspace=0.5)\n    sns.boxplot(x=column, y='price',\n                data=data[data['train'] == 1],\n                ax=ax)\n    plt.xticks(rotation=45)\n    # \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0432 price \u043c\u043d\u043e\u0433\u043e \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432, \u043e\u0433\u0440\u0438\u043d\u0438\u0447\u0438\u043c\u0441\u044f 75% \u043a\u0432\u0430\u043d\u0442\u0438\u043b\u0435\u043c\n    ax.set_ylim(0, (data.price.quantile(0.75) + 8 *\n                    (data.price.quantile(0.75) - data.price.quantile(0.25))))\n    ax.set_title('Boxplot \u0434\u043b\u044f ' + column)\n    plt.show()","d7c874ad":"def analyze_cat_cols(col):\n    \"\"\"\n    \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430.\n    \n    \u041d\u0430 \u0432\u0445\u043e\u0434 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0443, \u0434\u043b\u044f \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u0440\u043e\u0432\u043e\u0434\u0438\u043c \u0430\u043d\u0430\u043b\u0438\u0437.\n    \n    \u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0432\u044b\u0432\u043e\u0434\u0438 \u0433\u0440\u0430\u0444\u0438\u043a\u0438:\n        1. \u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u043f\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0443.\n            \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e, \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0433\u0440\u0430\u0444\u0438\u043a (\u043f\u0440\u044f\u043c\u0430\u044f) \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0433\u043e \u0441\u0440\u0435\u0434\u043d\u0435\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0442\u0441\u0432\u0430 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u043f\u043e \u0432\u0441\u0435\u043c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430, \u0447\u0442\u043e\u0431\u044b \u0441\u0440\u0430\u0432\u043d\u0438\u0442\u044c, \u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e\n            \u043e\u0442\u043a\u043b\u043e\u043d\u044f\u0435\u0442\u0441\u044f \u043e\u0442 \u0441\u0440\u0435\u0434\u043d\u0435\u0433\u043e \u0442\u0430 \u0438\u043b\u0438 \u0438\u043d\u0430\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430.\n        2. \u0413\u0440\u0430\u0444\u0438\u043a \u0431\u043e\u043a\u0441\u043f\u043b\u043e\u0442 \u0434\u043b\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\/\u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 (\u0446\u0435\u043d\u044b).\n    \"\"\"\n    fig, axes = plt.subplots(figsize=(25, 5))\n    # \u041f\u043e\u0441\u0447\u0438\u0442\u0430\u0435\u043c \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u043f\u043e \u0432\u0441\u0435\u043c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\n    mean = data[col].value_counts().values.mean()\n    x = data[col].unique()\n    # \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0433\u0440\u0430\u0444\u0438\u043a\u0438 \u043f\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0443 \u0438 \u0434\u043b\u044f \u0441\u0440\u0435\u0434\u043d\u0435\u0433\u043e\n    sns.histplot(data=data, x=data[col],\n                 stat='count', bins=data[col].nunique())\n    axes.plot(x, [mean for i in x], '--', color='r')\n    plt.xticks(rotation=45)\n    plt.title('\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043e\u0431\u044a\u044f\u0441\u0432\u043b\u0435\u043d\u0438\u0439 \u043f\u043e '+col)\n    plt.show()\n    \n    # \u0421\u0442\u0440\u043e\u0438\u043c \u0431\u043e\u043a\u0441\u043f\u043b\u043e\u0442\n    get_boxplot(col)","806632d5":"def km_per_year(row):\n    \"\"\"\n    \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u0435\u043b\u0430\u0435\u0442 \u043f\u0435\u0440\u0435\u0441\u0447\u0435\u0442 \u043a\u043c \u043f\u0440\u043e\u0431\u0435\u0433\u0430 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f \u0432 \u0433\u043e\u0434. \n    \u0414\u043b\u044f \u0440\u0430\u0441\u0447\u0435\u0442\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043b\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0435\u0440\u0435\u0442\u0441\u044f \u0433\u043e\u0434 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0441\u0442\u0432\u0430 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f.\n    \n    \u0412\u0445\u043e\u0434: \u0441\u0442\u0440\u043e\u043a\u0430 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0430.\n    \u0412\u044b\u0445\u043e\u0434: \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043c\/\u0433\u043e\u0434.\n    \"\"\"\n    if row['mileage'] != 0:\n        # \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0438, \u043a\u043e\u0433\u0434\u0430 \u043c\u043e\u0448\u0438\u043d\u0430 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0430 \u0432 \u0433\u043e\u0434 \u0441\u0431\u043e\u0440\u0430 \u0434\u0430\u043d\u043d\u044b\u0445, \u0447\u0442\u043e\u0431 \u043d\u0435 \u0434\u0435\u043b\u0438\u0442\u044c \u043d\u0430 0\n        if row['parsing_date'].year - row['productionDate'] == 0:\n            return row['mileage']\n        else:\n            return row['mileage']\/(row['parsing_date'].year - row['productionDate'])\n    return 0  # \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c 0, \u0435\u0441\u043b\u0438 \u043c\u0430\u0448\u0438\u043d\u0430 \u0431\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u0433\u0430 (\u043d\u043e\u0432\u0430\u044f)","0afd1037":"def prod_date_range(row, year_lim):\n    \"\"\"\n    \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0441\u0442\u043e\u043b\u0431\u0446\u0430 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439, \u0441\u0442\u0430\u0440\u0448\u0435 \u043b\u0438 \u0430\u0432\u0442\u043e, \u0447\u0435\u043c year_lim.\n    \u0412\u0445\u043e\u0434: \u0441\u0442\u0440\u043e\u043a\u0430, \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u043b\u0438\u043c\u0438\u0442.\n    \u0412\u044b\u0445\u043e\u0434: \n        1 - \u0435\u0441\u043b\u0438 \u0430\u0432\u0442\u043e \u0441\u0442\u0430\u0440\u0448\u0435\n        0 - \u0435\u0441\u043b\u0438 \u043d\u0435\u0442.\n    \"\"\"\n    if (row['parsing_date'].year-row['productionDate']) >= year_lim:\n        return 1\n    return 0","87cc0dea":"def iqr_analysis(series, mode=False):\n    \"\"\"\n    \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u0430\u043c\u0446\u0438\u044e \u043e \u0433\u0440\u0430\u043d\u0438\u0446\u0430\u0445 \u0432\u044b\u0431\u043e\u0440\u043e\u0441\u043e\u0432 \u0434\u043b\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430.\n    \u0415\u0441\u043b\u0438 mode = True, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0432\u0435\u0440\u0445\u043d\u044f\u044f \u0438 \u043d\u0438\u0436\u043d\u044f\u044f \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432. \u0418\u043d\u0430\u0447\u0435, \u043f\u0440\u043e\u0441\u0442\u043e \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043d\u0430 \u044d\u043a\u0440\u0430\u043d.\n    \"\"\"\n    IQR = series.quantile(0.75) - series.quantile(0.25)\n    perc25 = series.quantile(0.25)\n    perc75 = series.quantile(0.75)\n\n    f = perc25 - 1.5*IQR\n    l = perc75 + 1.5*IQR\n\n    if mode:\n        return f, l\n\n    print(\n        \"\\n25-\u0439 \u043f\u0435\u0440\u0446\u0435\u043d\u0442\u0438\u043b\u044c: {},\".format(perc25),\n        \"\\n75-\u0439 \u043f\u0435\u0440\u0446\u0435\u043d\u0442\u0438\u043b\u044c: {},\".format(perc75),\n        \"\\nIQR: {}, \".format(IQR),\n        \"\\n\u0413\u0440\u0430\u043d\u0438\u0446\u044b \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432: [{f}, {l}].\".format(\n            f=perc25 - 1.5*IQR, l=perc75 + 1.5*IQR),\n        \"\\n\\n\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430: {}.\".format(series.min()),\n        \"\\n\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430: {} .\\n\".format(series.max()))\n\n    if series.min() < f:\n        print(\"\u041d\u0430\u0439\u0434\u0435\u043d\u044b \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043f\u043e \u043d\u0438\u0436\u043d\u0435\u0439 \u0433\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430! \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e: {}, {}%\".format(series.where(\n            series < f).count(), round(series.where(series < f).count()\/series.count()*100, 2)))\n    if series.max() > l:\n        print(\"\u041d\u0430\u0439\u0434\u0435\u043d\u044b \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043f\u043e \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u0433\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430! \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e: {}, {}%\".format(series.where(\n            series > l).count(), round(series.where(series > l).count()\/series.count()*100, 2)))","9b9b9a7f":"def get_stat_dif(column):\n    \"\"\" \n    \u041f\u043e\u0438\u0441\u043a \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0437\u043d\u0430\u0447\u0438\u043c\u044b\u0445 \u0440\u0430\u0437\u043b\u0438\u0447\u0438\u0439 \u0434\u043b\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0442\u0435\u0441\u0442\u0430 \u0421\u0442\u044c\u044e\u0434\u0435\u043d\u0442\u0430.\n    \"\"\"\n    cols = data.loc[:, column].value_counts().index[:]\n    combinations_all = list(combinations(cols, 2))\n\n    tmp = data[data['train'] == 1]\n\n    for comb in combinations_all:\n        if ttest_ind(tmp.loc[data[data['train'] == 1].loc[:, column] == comb[0], 'price'],\n                     tmp.loc[data[data['train'] == 1].loc[:, column] == comb[1], 'price']).pvalue <= 0.05\/len(combinations_all):  # \u0443\u0447\u043b\u0438 \u043f\u043e\u043f\u0440\u0430\u0432\u043a\u0443 \u0411\u043e\u043d\u0444\u0435\u0440\u043e\u043d\u0438\n            # print('\u041d\u0430\u0439\u0434\u0435\u043d\u044b \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0437\u043d\u0430\u0447\u0438\u043c\u044b\u0435 \u0440\u0430\u0437\u043b\u0438\u0447\u0438\u044f \u0434\u043b\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0438 \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0439', column, comb)\n            pass\n        else:\n            print(\n                '\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0437\u043d\u0430\u0447\u0438\u043c\u044b\u0435 \u0440\u0430\u0437\u043b\u0438\u0447\u0438\u044f \u0434\u043b\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0438 \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0438', column, comb)\n            return column\n            break","53bd0dd4":"VERSION = 18\n# \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b \u043a \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u0443 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\nDIR_TRAIN = '..\/input\/parsing-all-moscow-auto-ru-09-09-2020\/'\nDIR_TRAIN_NEW = '..\/input\/autorucars\/'\nDIR_TEST = '..\/input\/sf-dst-car-price-prediction\/'\nVAL_SIZE = 0.20   # 20%","2e7dc0b1":"!ls '..\/input'","0f87649d":"## \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0441 Kaggle\ntrain = pd.read_csv(DIR_TRAIN+'all_auto_ru_09_09_2020.csv') # \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438\ntest = pd.read_csv(DIR_TEST+'test.csv')\nsample_submission = pd.read_csv(DIR_TEST+'sample_submission.csv')","9082f7a0":"# \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438 \u0440\u0430\u0431\u043e\u0442\u0435 \u0432 Jupyter\/Github\n#train = pd.read_csv('all_auto_ru_09_09_2020.csv')\n#test = pd.read_csv('test.csv')\n#sample_submission = pd.read_csv('sample_submission.csv')","3771b356":"train.head()","2c6cc4e8":"test.head()","c8117749":"train.info()","e76c6b36":"test.info()","00fcbc06":"# \u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0432 train\ndif_list = list(set(test.columns).difference(train.columns))\nprint(\"\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0432 train, \u043d\u043e \u0435\u0441\u0442\u044c \u0432 test:\", dif_list)\n\n# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u044d\u0442\u0438\u0445 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u0445\ntest[dif_list].sample(3)","48fd05e9":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u043a\u0442\u0432\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\nfor item in dif_list:\n    print(item, test[item].nunique())","7653a7d3":"# \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c \u0441 \u043d\u043e\u0432\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 Jupyter\n#train_new = pd.read_csv('all_car_27_08_2021_data_12_brands.csv', sep=\",\")","c739a5d3":"# \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c \u0441 \u043d\u043e\u0432\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 Kaggle\ntrain_new = pd.read_csv(DIR_TRAIN_NEW+'all_car_27_08_2021_data_12_brands.csv', sep=\",\")","54e50c62":"train_new.info()","3f3e19b7":"train_new.head()","4e19f76e":"# \u0421\u0440\u0430\u0437\u0443 \u0443\u0434\u0430\u043b\u0438\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \u0441 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u043e\u043c \u0443\u0440\u043b\u0430\ntrain_new.drop('Unnamed: 0', axis=1, inplace=True)","c4563a31":"# \u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0435\u043c test \u043a\u043e\u043b\u043e\u043d\u043a\u0438\ntest.rename(columns={\"\u041f\u0440\u0438\u0432\u043e\u0434\": \"drivetrain\",\n                     \"\u0420\u0443\u043b\u044c\": \"driveSide\",\n                     \"\u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\": \"condition\",\n                     \"\u0412\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u044b\": \"ownersCount\",\n                     \"\u041f\u0422\u0421\": \"tcp\",\n                     \"\u0422\u0430\u043c\u043e\u0436\u043d\u044f\": \"customs\",\n                     \"\u0412\u043b\u0430\u0434\u0435\u043d\u0438\u0435\": \"ownershipTime\",\n                     \"model_name\": \"model\"}, inplace=True)\n\n# \u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0435\u043c train \u043a\u043e\u043b\u043e\u043d\u043a\u0438\ntrain.rename(columns={\"\u041f\u0440\u0438\u0432\u043e\u0434\": \"drivetrain\",\n                      \"\u0420\u0443\u043b\u044c\": \"driveSide\",\n                      \"\u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\": \"condition\",\n                      \"\u0412\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u044b\": \"ownersCount\",\n                      \"\u041f\u0422\u0421\": \"tcp\",\n                      \"\u0422\u0430\u043c\u043e\u0436\u043d\u044f\": \"customs\",\n                      \"\u0412\u043b\u0430\u0434\u0435\u043d\u0438\u0435\": \"ownershipTime\"}, inplace=True)\n\n# \u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0435\u043c train_new \u043a\u043e\u043b\u043e\u043d\u043a\u0438\ntrain_new.rename(columns={\"\u041f\u0440\u0438\u0432\u043e\u0434\": \"drivetrain\",\n                          \"\u0420\u0443\u043b\u044c\": \"driveSide\",\n                          \"\u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\": \"condition\",\n                          \"\u0412\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u044b\": \"ownersCount\",\n                          \"\u041f\u0422\u0421\": \"tcp\",\n                          \"\u0422\u0430\u043c\u043e\u0436\u043d\u044f\": \"customs\",\n                          \"\u0412\u043b\u0430\u0434\u0435\u043d\u0438\u0435\": \"ownershipTime\",\n                          \"model_name\": \"model\"}, inplace=True)","871c3cf3":"#ProfileReport(test, title=\"Pandas Profiling Report for Test Dataset\")","41a57e8c":"# \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0441 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u0438 \u0432 train, \u0438 \u0432 test\ncols_intersection = list(set(test.columns).intersection(train.columns))","54d5cbfd":"# \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0432 \u043a\u0430\u043a\u0438\u0445 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u0445 \u0442\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u0430\u0437\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f \u0443 train \u0438 test\ncols_type_dif = []  # \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0441 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0442\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f\nprint(\"\u041d\u0430\u0439\u0434\u0435\u043d\u044b \u0440\u0430\u0441\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u0432 \u0442\u0438\u043f\u0430\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f:\")\n\nfor col in cols_intersection:\n    if type(test[col][0]) != type(train[col][0]):\n        print(\n            f\"\\t- \u043a\u043e\u043b\u043e\u043d\u043a\u0438 {col}: \u0434\u043b\u044f train - {type(train[col][0])}, \u0434\u043b\u044f test - {type(test[col][0])}\")\n        cols_type_dif.append(col)","458dd048":"# \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0441 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u0438 \u0432 train, \u0438 \u0432 test\ncols_intersection_2 = list(set(test.columns).intersection(train_new.columns))","1d11c974":"# \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0432 \u043a\u0430\u043a\u0438\u0445 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u0445 \u0442\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u0430\u0437\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f \u0443 train \u0438 test\ncols_type_dif = []  # \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0441 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0442\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f\nprint(\"\u041d\u0430\u0439\u0434\u0435\u043d\u044b \u0440\u0430\u0441\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u0432 \u0442\u0438\u043f\u0430\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f:\")\n\nfor col in cols_intersection_2:\n    if type(test[col][0]) != type(train_new[col][0]):\n        print(\n            f\"\\t- \u043a\u043e\u043b\u043e\u043d\u043a\u0438 {col}: \u0434\u043b\u044f train_new - {type(train_new[col][0])}, \u0434\u043b\u044f test - {type(test[col][0])}\")\n        cols_type_dif.append(col)","5afb6544":"print(\"\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f train\", train.ownersCount.unique())\nprint(\"\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f train_new\", train_new.ownersCount.unique())\nprint(\"\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f test\", test.ownersCount.unique())","2130b7b4":"# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043b\u043e\u0432\u0430\u0442\u044c \u0441 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u043e\u0439 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435\nownersCount_dict = {\"3 \u0438\u043b\u0438 \u0431\u043e\u043b\u0435\u0435\": 3.,\n                    \"1\\xa0\u0432\u043b\u0430\u0434\u0435\u043b\u0435\u0446\": 1., \"2\\xa0\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430\": 2.}\ntest['ownersCount'].replace(\n    to_replace=ownersCount_dict, inplace=True)  # \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441\u043e \u0441\u043b\u043e\u0432\u0430\u0440\u0435\u043c","c7a73c29":"ownersCount_dict = {\n    \"1 \u0432\u043b\u0430\u0434\u0435\u043b\u0435\u0446\": 1., \"2 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430\": 2., \"3 \u0438\u043b\u0438 \u0431\u043e\u043b\u0435\u0435\": 3.}\ntrain_new['ownersCount'].replace(\n    to_replace=ownersCount_dict, inplace=True)  # \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441\u043e \u0441\u043b\u043e\u0432\u0430\u0440\u0435\u043c","ebdcd81b":"# \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f\nprint(\"\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f test\", test.ownersCount.unique())\nprint(\"\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f train_new\", train_new.ownersCount.unique())","82375c58":"print(\"\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f train\", train.enginePower.sample(1).values)\nprint(\"\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f train_new\", train_new.enginePower.sample(1).values)\nprint(\"\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f test\", test.enginePower.sample(1).values)","6a2168b8":"# \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u044b\u0432\u0430\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441\u0442\u043e\u043b\u0431\u0446\u0430, \u0438\u0437\u0431\u0430\u0432\u043b\u044f\u0435\u043c\u0441\u044f \u043e\u0442 \u043f\u043e\u0441\u0442\u0444\u0438\u043a\u0430 N12\ntest['enginePower'] = test['enginePower'].apply(\n    lambda x: float(x.split(\" \")[0]))\ntrain_new['enginePower'] = train_new['enginePower'].apply(\n    lambda x: float(x.split(\" \")[0]))","c9a4e097":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f\nprint(\"\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f test\", test.enginePower.sample(1).values)\nprint(\"\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f train_new\", train_new.enginePower.sample(1).values)","29dda2d4":"print(\"\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f train\", train.numberOfDoors.unique())\nprint(\"\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f train_new\", train_new.numberOfDoors.unique())\nprint(\"\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f test\", test.numberOfDoors.unique())","19229812":"# \u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0432 int\ntrain['numberOfDoors'] = train['numberOfDoors'].astype('Int64')","fe04497c":"print(\"\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f train\", train.customs.unique())\nprint(\"\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f train_new\", train_new.customs.unique())\nprint(\"\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f test\", test.customs.unique())","6eb7512e":"# \u0414\u0435\u043b\u0430\u0435\u043c \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 int (0 \u0438\u043b\u0438 1)\ntrain['customs'] = train['customs'].apply(lambda x: 1 if x == True else 0)\ntest['customs'] = test['customs'].apply(\n    lambda x: 1 if x == \"\u0420\u0430\u0441\u0442\u0430\u043c\u043e\u0436\u0435\u043d\" else 0)\ntrain_new['customs'] = train_new['customs'].apply(\n    lambda x: 1 if x == \"\u0420\u0430\u0441\u0442\u0430\u043c\u043e\u0436\u0435\u043d\" else 0)","bd065ff2":"print(\"\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f train\", train.condition.unique())\nprint(\"\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f train_new\", train_new.condition.unique())\nprint(\"\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f test\", test.condition.unique())","7465f55d":"# \u0414\u0435\u043b\u0430\u0435\u043c \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 int (0 \u0438\u043b\u0438 1)\ntrain['condition'] = train['condition'].apply(lambda x: 0 if pd.isna(x) else 1)\ntest['condition'] = test['condition'].apply(\n    lambda x: 0 if x == \"\u041d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u043c\u043e\u043d\u0442\u0430\" else 1)\ntrain_new['condition'] = train_new['condition'].apply(\n    lambda x: 0 if x == \"\u041d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u043c\u043e\u043d\u0442\u0430\" else 1)","27c4e66c":"print(\"\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f train\", train.modelDate.unique())\nprint(\"\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f train_new\", train_new.modelDate.unique())\nprint(\"\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f test\", test.modelDate.unique())","25df3e25":"train['modelDate'] = train['modelDate'].astype('Int64')","8890df50":"# \u041f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043f\u043e \u043e\u0447\u0438\u0441\u0442\u043a\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0438\u044e \u0438\u0445 \u043a \u0442\u0430\u043a\u043e\u043c\u0443 \u0436\u0435 \u0432\u0438\u0434\u0443, \u043a\u0430\u043a \u0432 test \u0432\u044b\u0431\u043e\u0440\u043a\u0435.\ntrain['ownershipTime'] = train['ownershipTime'].apply(tenure)","72238dc1":"train['ownershipTime'] = train['ownershipTime'].fillna('no_data')","c9d3bea8":"print(\"\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f train\",\n      train[train['mileage'].isnull() == False]['mileage'].sample(1).values)\nprint(\"\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f train_new\",\n      train_new[train_new['mileage'].isnull() == False]['mileage'].sample(1).values)\nprint(\"\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f test\",\n      test[test['mileage'].isnull() == False]['mileage'].sample(1).values)","9be142cd":"train_new['mileage'] = train_new['mileage'].apply(num_of_km)","7923d2b9":"print(\"\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f train\", train[train['engineDisplacement'].isnull(\n) == False]['engineDisplacement'].sample(1).values)\nprint(\"\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f train_new\", train_new[train_new['engineDisplacement'].isnull(\n) == False]['engineDisplacement'].sample(1).values)\nprint(\"\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f test\", test[test['engineDisplacement'].isnull(\n) == False]['engineDisplacement'].sample(1).values)","be94d16c":"# \u0421\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u0438 \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f \u0438\u0437 \u043f\u043e\u043b\u044f name\ntrain['engineDisplacement'] = train['name'].apply(\n    convert_engineDisplacement_to_float)","234f1d99":"# \u0421\u0440\u0430\u0437\u0443 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438\nlen(train[train['engineDisplacement'].isna()])","69ab6d1c":"# \u041f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0434\u043b\u044f \u044d\u043b\u0435\u043a\u0442\u0440\u043e \u043c\u0430\u0448\u0438\u043d, \u043f\u043e\u043d\u044f\u0442\u043d\u043e \u043f\u0440\u0438\u0447\u0438\u043d\u0430 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430, \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u043f\u043e\u0437\u0436\u0435\ntrain[train['engineDisplacement'].isna()].fuelType.unique()","4619e254":"# \u0421\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u0438 \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f\ntrain_new['engineDisplacement'] = train_new['engineDisplacement'].apply(\n    convert_engineDisplacement_to_float)\n# \u0414\u043b\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 'LTR' \u0437\u0430\u043c\u0435\u043d\u0438\u043c \u043d\u0430 0, \u0442.\u043a. \u044d\u0442\u043e \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043a\u0430\u0440\u044b\ntest[test['engineDisplacement'] == ' LTR']['engineDisplacement'].replace(\n    \" LTR\", \"0.0 LTR\", inplace=True)\n# \u0421\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0432\u043e float\ntest['engineDisplacement'] = test['engineDisplacement'].apply(\n    convert_engineDisplacement_to_float)","872e78e2":"# \u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0432 train, \u043d\u043e \u0435\u0441\u0442\u044c \u0432 test\ndif_list_test = list(set(test.columns).difference(train.columns))\nprint(\"\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0432 train, \u043d\u043e \u0435\u0441\u0442\u044c \u0432 test:\", dif_list_test)\n\n# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u044d\u0442\u0438\u0445 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u0445\nprint(\"\\nTEST DF:\")\ntest[dif_list_test].sample(3)","c2385470":"# \u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0432 test, \u043d\u043e \u0435\u0441\u0442\u044c \u0432 train\ndif_list_train = list(set(train.columns).difference(test.columns))\nprint(\"\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0432 test, \u043d\u043e \u0435\u0441\u0442\u044c \u0432 train:\", dif_list_train)\n\n# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u044d\u0442\u0438\u0445 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u0445\nprint(\"\\nTRAIN DF:\")\ntrain[dif_list_train].sample(3)","a2e38b44":"# \u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0432 train_new, \u043d\u043e \u0435\u0441\u0442\u044c \u0432 test\ndif_list_test_new = list(set(test.columns).difference(train_new.columns))\nprint(\"\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0432 train_new, \u043d\u043e \u0435\u0441\u0442\u044c \u0432 test:\", dif_list_test_new)\n\n# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u044d\u0442\u0438\u0445 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u0445\nprint(\"\\nTEST DF:\")\ntest[dif_list_test_new].sample(3)","d51c3061":"# \u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0432 test, \u043d\u043e \u0435\u0441\u0442\u044c \u0432 train\ndif_list_train_new = list(set(train_new.columns).difference(test.columns))\nprint(\"\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0432 test, \u043d\u043e \u0435\u0441\u0442\u044c \u0432 train_new:\", dif_list_train_new)\n\n# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u044d\u0442\u0438\u0445 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u0445\nprint(\"\\nTRAIN DF:\")\ntrain_new[dif_list_train_new].sample(3)","57d11235":"# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0438\u0437 \u0432\u0435\u043d\u0434\u043e\u0440\u043e\u0432 \u043f\u043e \u0431\u0440\u0435\u043d\u0434\u0430\u043c\nvendor_dict = test.groupby(['vendor'])['brand'].apply(\n    lambda grp: list(grp.value_counts().index)).to_dict()\nvendor_dict","7864802e":"# \u0421\u043f\u0438\u0441\u043e\u043a \u0431\u0440\u0435\u043d\u0434\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0432 test, \u043d\u043e \u0435\u0441\u0442\u044c \u0432 train\ndif_list_brands = list(\n    set(train.brand.unique()).difference(test.brand.unique()))\nprint(\"\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0432 test, \u043d\u043e \u0435\u0441\u0442\u044c \u0432 train:\", dif_list_brands)","96170779":"# \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u044c vendor_dict \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u044e\u0449\u0438\u0435 \u0431\u0440\u0435\u043d\u0434\u044b \u043f\u043e \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c \u043a\u043b\u044e\u0447\u0430\u043c\neur_append = ['PORSCHE', 'LAND_ROVER', 'JAGUAR',\n              'MINI', 'RENAULT', 'OPEL', 'PEUGEOT', 'CITROEN']\njap_append = ['SUBARU', 'MAZDA', 'SUZUKI']\n\nfor brand in eur_append:\n    vendor_dict['EUROPEAN'].append(brand)\nfor brand in jap_append:\n    vendor_dict['JAPANESE'].append(brand)","bb61d53b":"# \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u043a\u043b\u044e\u0447\u0438\nvendor_dict.update({'AMERICAN': ['CHEVROLET', 'CHRYSLER', 'CADILLAC', 'JEEP', 'FORD', 'DODGE'],\n                    'ASIAN': ['HYUNDAI', 'DAEWOO', 'KIA', 'CHERY', 'SSANG_YONG', 'GEELY', 'GREAT_WALL']})","7f607aaa":"# \u0421\u043c\u043e\u0442\u0440\u0438\u043c \u0438\u0442\u043e\u0433\u043e\u0432\u044b\u0439 \u0441\u043b\u043e\u0432\u0430\u0440\u044c\nprint(vendor_dict)","aba94630":"# \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0434\u043b\u044f \u043c\u0430\u043f\u0438\u043d\u0433\u0430\nnew_map = {str(x): str(k) for k, v in vendor_dict.items() for x in v}","d3a0499a":"# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a vendor \u0432 train\ntrain['vendor'] = train.brand.copy()\ntrain['vendor'] = train['vendor'].map(new_map)","f9649c95":"# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a vendor \u0432 train\ntrain_new['vendor'] = train_new.brand.copy()\ntrain_new['vendor'] = train_new['vendor'].map(new_map)","8ac420ae":"# \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0434\u0430\u0442\u0443 \u0432 train\ntrain['parsing_date'] = '2020-09-09'\ntrain['parsing_date'] = pd.to_datetime(train['parsing_date'])","d938b2b3":"# \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \u0438\u0437 unixtime \u0432 test, train_new\ntrain_new['parsing_date'] = pd.to_datetime(\n    train_new.parsing_unixtime, unit='s')\ntrain_new['parsing_date'] = pd.to_datetime(\n    train_new['parsing_date']).dt.floor('d')\n\ntest['parsing_date'] = pd.to_datetime(test['parsing_unixtime'], unit='s')\ntest['parsing_date'] = pd.to_datetime(test['parsing_date']).dt.floor('d')","3d7319a5":"# \u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u044d\u0442\u043e \u0441\u043b\u0443\u0436\u0435\u0431\u043d\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u0442\u043e \u043c\u044b \u0435\u0433\u043e \u0441\u0440\u0430\u0437\u0443 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u043d\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435\n# \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043b\u0430\u043d\u0438\u0440\u0443\u0435\u043c \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430\ncols_removal = ['parsing_date']","98744707":"# \u0414\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0441\u043a\u043b\u0435\u0438\u0432\u0430\u0435\u043c \u0432\u0441\u0435 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u044b \u043f\u043e \u043e\u0431\u0449\u0438\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a train\ntrain['train'] = 1  # \u043f\u043e\u043c\u0435\u0447\u0430\u0435\u043c \u0433\u0434\u0435 \u0443 \u043d\u0430\u0441 \u0442\u0440\u0435\u0439\u043d\ntrain_new['train'] = 1  # \u043f\u043e\u043c\u0435\u0447\u0430\u0435\u043c \u0433\u0434\u0435 \u0443 \u043d\u0430\u0441 \u0442\u0440\u0435\u0439\u043d\ntest['train'] = 0  # \u043f\u043e\u043c\u0435\u0447\u0430\u0435\u043c \u0433\u0434\u0435 \u0443 \u043d\u0430\u0441 \u0442\u0435\u0441\u0442\n# \u0432 \u0442\u0435\u0441\u0442\u0435 \u0443 \u043d\u0430\u0441 \u043d\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0446\u0435\u043d\u044b, \u043c\u044b \u0435\u0433\u043e \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u043e\u043a\u0430 \u043f\u0440\u043e\u0441\u0442\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u043d\u0443\u043b\u044f\u043c\u0438\ntest['price'] = 0\ntrain['sell_id'] = 0  # \u043f\u043e\u043b\u0435 \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u0441\u0430\u0431\u043c\u0438\u0442\u0430, \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c\ntrain_new['sell_id'] = 0  # \u043f\u043e\u043b\u0435 \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u0441\u0430\u0431\u043c\u0438\u0442\u0430, \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c\n\ndata = pd.concat([train, test, train_new], axis=0,\n                 join=\"inner\", ignore_index=True)","845de122":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0447\u0442\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c\ndata.info()","fd6d45cb":"# \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c modelDate \u0432 int\ndata['modelDate'] = data['modelDate'].astype('Int64')","ddee8d43":"data.sample(3)","9dad62f2":"# \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445\n#ProfileReport(data, title=\"Pandas Profiling Report for Merged Test and Train Datasets\")","3814c50c":"# \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043b\u0430\u043d\u0438\u0440\u0443\u0435\u043c \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430\ncols_removal.append('vehicleConfiguration')\ncols_removal.append('name')","3c49ee7a":"data.vehicleTransmission.value_counts()","aa06becb":"# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0443 transmission \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \"\u0430\u0432\u0442\u043e\u043c\u0430\u0442\" \u0438 \"\u043c\u0435\u0445\u0430\u043d\u0438\u0447\u0435\u0441\u043a\u0430\u044f\"\ndata['transmission'] = data.vehicleTransmission.copy()\n\ndata['transmission'].replace(['AUTOMATIC', 'ROBOT', 'VARIATOR',\n                              '\u0440\u043e\u0431\u043e\u0442\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0430\u044f', '\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f', '\u0432\u0430\u0440\u0438\u0430\u0442\u043e\u0440'], \"\u0430\u0432\u0442\u043e\u043c\u0430\u0442\", inplace=True)\ndata['transmission'].replace(\n    ['MECHANICAL', '\u043c\u0435\u0445\u0430\u043d\u0438\u0447\u0435\u0441\u043a\u0430\u044f'], \"\u043c\u0435\u0445\u0430\u043d\u0438\u0447\u0435\u0441\u043a\u0430\u044f\", inplace=True)","afa11e7e":"# \u0412 \u043a\u043e\u043b\u043e\u043d\u043a\u0435 vehicleTransmission \u043f\u043e\u0447\u0438\u0441\u0442\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 '\u0440\u043e\u0431\u043e\u0442', '\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f', '\u0432\u0430\u0440\u0438\u0430\u0442\u043e\u0440' \u0438\u043b\u0438 \"\u043c\u0435\u0445\u0430\u043d\u0438\u0447\u0435\u0441\u043a\u0430\u044f\"\ndata['vehicleTransmission'].replace(\n    ['AUTOMATIC', '\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f'], \"\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f\", inplace=True)\ndata['vehicleTransmission'].replace(\n    ['ROBOT', '\u0440\u043e\u0431\u043e\u0442\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0430\u044f', ], \"\u0440\u043e\u0431\u043e\u0442\", inplace=True)\ndata['vehicleTransmission'].replace(\n    ['VARIATOR', '\u0432\u0430\u0440\u0438\u0430\u0442\u043e\u0440'], \"\u0432\u0430\u0440\u0438\u0430\u0442\u043e\u0440\", inplace=True)\ndata['vehicleTransmission'].replace(\n    ['MECHANICAL', '\u043c\u0435\u0445\u0430\u043d\u0438\u0447\u0435\u0441\u043a\u0430\u044f'], \"\u043c\u0435\u0445\u0430\u043d\u0438\u0447\u0435\u0441\u043a\u0430\u044f\", inplace=True)","5f69b54b":"# \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u043a\u0430\u043a\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438\u0441\u044c\nprint(data['transmission'].unique())\nprint(data['vehicleTransmission'].unique())","aaa0bc21":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0446\u0432\u0435\u0442\u0430\ndata.color.unique()","bd154751":"# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043b\u043e\u0432\u0430\u0442\u044c \u0441 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u043e\u0439 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 \u0446\u0432\u0435\u0442\u0430\ncolor_dict = {'040001': '\u0447\u0451\u0440\u043d\u044b\u0439', 'EE1D19': '\u043a\u0440\u0430\u0441\u043d\u044b\u0439', '0000CC': '\u0441\u0438\u043d\u0438\u0439', 'CACECB': '\u0441\u0435\u0440\u0435\u0431\u0440\u0438\u0441\u0442\u044b\u0439', '007F00': '\u0437\u0435\u043b\u0451\u043d\u044b\u0439',\n              'FAFBFB': '\u0431\u0435\u043b\u044b\u0439', '97948F': '\u0441\u0435\u0440\u044b\u0439', '22A0F8': '\u0433\u043e\u043b\u0443\u0431\u043e\u0439', '660099': '\u043f\u0443\u0440\u043f\u0443\u0440\u043d\u044b\u0439', '200204': '\u043a\u043e\u0440\u0438\u0447\u043d\u0435\u0432\u044b\u0439',\n              'C49648': '\u0431\u0435\u0436\u0435\u0432\u044b\u0439', 'DEA522': '\u0437\u043e\u043b\u043e\u0442\u0438\u0441\u0442\u044b\u0439', '4A2197': '\u0444\u0438\u043e\u043b\u0435\u0442\u043e\u0432\u044b\u0439', 'FFD600': '\u0436\u0451\u043b\u0442\u044b\u0439',\n              'FF8649': '\u043e\u0440\u0430\u043d\u0436\u0435\u0432\u044b\u0439', 'FFC0CB': '\u0440\u043e\u0437\u043e\u0432\u044b\u0439'}\n\ndata['color'].replace(to_replace=color_dict, inplace=True)","7d49cbbb":"# \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\ndata.color.unique()","647ec5ac":"data.driveSide.unique()","f38894b6":"# \u0417\u0430\u043c\u0435\u043d\u0438\u043c \u0430\u043d\u043b\u043e\u044f\u0437\u044b\u0447\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u0438\u0435\ndata['driveSide'] = data['driveSide'].map(\n    {'RIGHT': '\u041f\u0440\u0430\u0432\u044b\u0439', 'LEFT': '\u041b\u0435\u0432\u044b\u0439', '\u041f\u0440\u0430\u0432\u044b\u0439': '\u041f\u0440\u0430\u0432\u044b\u0439', '\u041b\u0435\u0432\u044b\u0439': '\u041b\u0435\u0432\u044b\u0439'})","2de92d85":"# \u0423\u0431\u0435\u0440\u0435\u043c \u0432\u0435\u0440\u0445\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\ndata['driveSide'] = data['driveSide'].str.lower()","66f3e6bc":"# \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\ndata.driveSide.unique()","56d3751c":"data.tcp.unique()","5943bb25":"data[data.train == 0].tcp.head()","c1891eb0":"# \u0417\u0430\u043c\u0435\u043d\u0438\u043c \u0430\u043d\u043b\u043e\u044f\u0437\u044b\u0447\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u0438\u0435\ndata['tcp'] = data['tcp'].map(\n    {'ORIGINAL': '\u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b', 'DUPLICATE': '\u0414\u0443\u0431\u043b\u0438\u043a\u0430\u0442', '\u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b': '\u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b', '\u0414\u0443\u0431\u043b\u0438\u043a\u0430\u0442': '\u0414\u0443\u0431\u043b\u0438\u043a\u0430\u0442'})","b6417a39":"# \u0423\u0431\u0435\u0440\u0435\u043c \u0432\u0435\u0440\u0445\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\ndata['tcp'] = data['tcp'].str.lower()","66e15f8b":"# \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\ndata.tcp.unique()","b290c327":"data.bodyType.value_counts()","602a5c28":"# \u041f\u0440\u0438\u0432\u0435\u0434\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a \u043d\u0438\u0436\u043d\u0435\u043c\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0443, \u0443\u0431\u0435\u0440\u0435\u043c \u0440\u044f\u0434 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u043e\u0432 \u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u0445\ndata['bodyType'] = data['bodyType'].apply(lambda x: str(x).lower())","8e7bc183":"# \u0417\u0430\u043c\u0435\u043d\u044f\u0435\u043c \u0432\u0435\u0441\u044c \"\u0437\u043e\u043e\u043f\u0430\u0440\u043a\" \u0442\u0438\u043f\u043e\u0432 \u043a\u0443\u0437\u043e\u0432\u0430 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435, \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u0430 \u043f\u043e\u0438\u0441\u043a\u0443 \u043f\u043e \u0442\u0438\u043f\u0443 \u043a\u0443\u0437\u043e\u0432\u0430 \u043d\u0430 auto.ru\ndata['bodyType'].replace(regex={r'\u0432\u043d\u0435\u0434\u043e\u0440\u043e\u0436\u043d\u0438\u043a.*': '\u0432\u043d\u0435\u0434\u043e\u0440\u043e\u0436\u043d\u0438\u043a',\n                                r'\u0441\u0435\u0434\u0430\u043d.*': '\u0441\u0435\u0434\u0430\u043d',\n                                r'\u0445\u044d\u0442\u0447\u0431\u0435\u043a.*': '\u0445\u044d\u0442\u0447\u0431\u0435\u043a',\n                                r'\u043a\u0443\u043f\u0435.*': '\u043a\u0443\u043f\u0435',  r'\u0442\u0430\u0440\u0433\u0430.*': '\u0442\u0430\u0440\u0433\u0430', r'\u043c\u0438\u043a\u0440\u043e\u0432\u044d\u043d.*': '\u043c\u0438\u043a\u0440\u043e\u0432\u044d\u043d',\n                                r'\u043f\u0438\u043a\u0430\u043f.*': '\u043f\u0438\u043a\u0430\u043f', r'\u0440\u043e\u0434\u0441\u0442\u0435\u0440.*': '\u0440\u043e\u0434\u0441\u0442\u0435\u0440',\n                                r'\u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b.*': '\u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b', r'\u043b\u0438\u0444\u0442\u0431\u0435\u043a.*': '\u043b\u0438\u0444\u0442\u0431\u0435\u043a',\n                                r'\u043c\u0438\u043d\u0438\u0432\u044d\u043d.*': '\u043c\u0438\u043d\u0438\u0432\u044d\u043d', r'\u043a\u043e\u043c\u043f\u0430\u043a\u0442\u0432\u044d\u043d.*': '\u043a\u043e\u043c\u043f\u0430\u043a\u0442\u0432\u044d\u043d',\n                                r'\u043b\u0438\u043c\u0443\u0437\u0438\u043d.*': '\u043b\u0438\u043c\u0443\u0437\u0438\u043d', r'\u0444\u0443\u0440\u0433\u043e\u043d.*': '\u0444\u0443\u0440\u0433\u043e\u043d', r'\u043a\u0430\u0431\u0440\u0438\u043e\u043b\u0435\u0442.*': '\u043a\u0430\u0431\u0440\u0438\u043e\u043b\u0435\u0442'\n                                },\n                         inplace=True)","c29e8b7b":"print(\"\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0442\u0438\u043f\u0430 \u043a\u0443\u0437\u043e\u0432\u0430 \u043f\u043e\u0441\u043b\u0435 \u043e\u0447\u0438\u0441\u0442\u043a\u0438:\", data.bodyType.unique())","965e0493":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0438\npd.DataFrame(data['bodyType'].value_counts(normalize=True))","c41110ad":"print(\"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u043e\u0432 \u0441\u0442\u0440\u043e\u043a \u0432 train \u0447\u0430\u0441\u0442\u0438 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0430:\",\n      data[data.train == 1].duplicated().sum())","0ead35a0":"# \u0423\u0434\u0430\u043b\u0438\u043c \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b \u0438\u0437 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430\ndata.drop_duplicates(inplace=True)","0cb295ee":"print(f\"\u0414\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u043e\u0441\u0442\u0430\u043b\u043e\u0441\u044c {len(data)} \u0437\u0430\u043f\u0438\u0441\u0435\u0439.\")","a43b4dfa":"# \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0432\u044b\u0432\u043e\u0434\u0430 \u0432\u0441\u0435\u0445 \u043f\u0443\u0441\u0442\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\nprint(\"\u041f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0434\u043b\u044f TEST+TRAIN \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043e\u0432.\\n\")\nintitial_eda_checks(data, 0)","d6c1389d":"print(\"\u041f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0434\u043b\u044f TEST \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0430.\\n\")\nintitial_eda_checks(data[data.train == 0], 0)","a13534fa":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0432 \u0447\u0430\u0441\u0442\u0438 train\nax = plt.axes()\nsns.heatmap(data[data.train == 1].isnull(),\n            yticklabels=False, cbar=False, cmap='Blues')\nax.set_title('\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u0432 TRAIN')\nplt.show()","16893bee":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0432 \u0447\u0430\u0441\u0442\u0438 test\nax = plt.axes()\nsns.heatmap(data[data.train == 0].isnull(),\n            yticklabels=False, cbar=False, cmap='Blues')\nax.set_title('\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u0432 TEST')\nplt.show()","f308769f":"# \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0447\u0442\u043e price \u043e\u0442\u0441\u0443\u0441\u0442\u0432\u0443\u0435\u0442 \u0438\u043c\u0435\u043d\u043d\u043e \u0432 train \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043c\u044b \u043d\u0435 \u0437\u0430\u0442\u0440\u043e\u043d\u0438\u043c test\ndata[data.price.isnull() == True]['train'].value_counts()","4a991309":"# \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0438 \u0441 price = NAN\ndata.dropna(subset=['price'], inplace=True)","902847c6":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0437\u0430\u043f\u0438\u0441\u044c\ndata[data.modelDate.isnull() == True]","c587f862":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0447\u0442\u043e \u0437\u0430 \u0441\u0442\u0440\u043e\u043a\u0430, \u0433\u0434\u0435 modelDate = NaN\nprint(\"\u0418\u043d\u0434\u0435\u043a\u0441 \u0441\u0442\u0440\u043e\u043a\u0438 \u043a \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044e:\",\n      data[data.modelDate.isnull() == True].index[0])","2c23d364":"# \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443\ndata.drop([24624], inplace=True)","4b3122d0":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0437\u0430\u043f\u0438\u0441\u0438\nprint(\"\u0414\u0430\u0442\u044b \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u043e\u0431\u044a\u044f\u0441\u0432\u043b\u0435\u043d\u0438\u0439:\",\n      data[data.mileage.isnull() == True]['parsing_date'].unique())\nprint(\"\u0414\u043b\u0438\u043d\u0430 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0430 \u0441 \u043f\u0443\u0441\u0442\u044b\u043c\u0438 'mileage', drivetran, model, driveSide:\", len(data[(data.mileage.isnull() == True) &\n                                                                                     (data.drivetrain.isnull() == True) &\n                                                                                     (data.model.isnull() == True) &\n                                                                                     (data.driveSide.isnull() == True)]))","3a3ae010":"# \u0423\u0434\u0430\u043b\u0438\u043c \u0441\u0442\u0440\u043e\u043a\u0438 \u0441 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u043c\u0438\ndata.drop(data[(data.mileage.isnull() == True) &\n               (data.drivetrain.isnull() == True) &\n               (data.model.isnull() == True) &\n               (data.driveSide.isnull() == True)].index, inplace=True)","7f5964da":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043f\u0440\u0438\u043c\u0435\u0440 \u0442\u0430\u043a\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\ndata[data.tcp.isnull() == True].sample(3)","64ae8291":"# \u0421\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0433\u043e\u0434\u0443 \u0432\u044b\u043f\u0443\u0441\u043a\u0430 \u0438 \u0432\u044b\u0432\u0435\u0434\u0435\u043c \u043c\u0435\u0434\u0438\u0430\u043d\u043d\u044b\u0439 \u043f\u0440\u043e\u0431\u0435\u0433 \u0438 \u043a\u043e\u043b-\u0432\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432\ndata[data.tcp.isnull() == True].groupby('productionDate')[\n    'mileage', 'ownersCount'].median()","90281b3c":"# \u0417\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c test \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\ndata.tcp.loc[data[(data.tcp.isnull() == True) & (\n    data.train == 0)]['tcp'].index[0]] = '\u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442'","f850a010":"# \u0421\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a\u043e\u0439 mileage \u0443 \u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0445\u0441\u044f \u0437\u0430\u043f\u0438\u0441\u0435\u0439. \u0423\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0438\u043c\u0441\u044f, \u0447\u0442\u043e \u044d\u0442\u043e \u0430\u0432\u0442\u043e \u0431\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u0433\u0430\ndata[data.tcp.isnull() == True].mileage.value_counts()","6f1eec66":"# \u0417\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \"\u043d\u043e\u0432\u043e\u0435 \u0430\u0432\u0442\u043e\"\ndata.tcp.fillna('\u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b', inplace=True)","9caf8cb2":"# \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c\ndata.tcp.value_counts()","662086b9":"# \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u043d\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u0434 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u0438\ncols_removal.append('description')","287e2a3c":"# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u0441\u0442\u043e\u043b\u0431\u0435\u0446 \u0441 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043c\u0435\u0441\u044f\u0446\u0435\u0432 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f\ndata['ownershipTimeMonths'] = data['ownershipTime'].apply(num_of_months)","54efba95":"# \u041f\u043e\u043a\u0430 \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 no_data, \u0434\u0430\u043b\u0435\u0435 \u0440\u0435\u0448\u0430\u0435\u043c, \u0447\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u043c\ndata['ownershipTime'] = data['ownershipTime'].fillna('no_data')","ed01fc07":"# \u0421\u043c\u043e\u0442\u0440\u0438\u043c, \u0447\u0442\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c\ndata[data.ownershipTime != 'no_data'][[\n    'ownershipTime', 'ownershipTimeMonths']].sample(5)","b8803f65":"# \u0418\u0437\u0432\u043b\u0435\u0447\u043c \u043e\u0440\u0438\u043f\u043d\u0442\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u043c\u0435\u0441\u044f\u0446\u0435\u0432 \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0441\u0442\u0432\u0430\ndata['prodTimeMonths'] = data.apply(lambda x: (\n    x['parsing_date'].year - x['productionDate'])*12, axis=1)","7753d9bb":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438 \u043f\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\ndata[(data.ownershipTimeMonths.isnull() == False) & (\n    data.productionDate != 2020)][['prodTimeMonths', 'ownershipTimeMonths']].describe()","db89c2e7":"# \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u0432\u043e \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437 \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0441\u0442\u0432\u0430 \u0431\u043e\u043b\u044c\u0448\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f\ndata['prodTime_ownershipTime'] = data.apply(\n    lambda x: x['prodTimeMonths']\/x['ownershipTimeMonths'], axis=1)","83c45c8e":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438\ndata.prodTime_ownershipTime.describe()","f10aac2b":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0433\u0440\u0430\u0444\u0438\u043a\u0438\nfig, ax = plt.subplots(figsize=(10, 5))\nsns.scatterplot(data=data, x='prodTimeMonths', y=\"prodTime_ownershipTime\")\nax.set_title('\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 prodTime_ownershipTime \u0432\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438')\nplt.show()","c8605347":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\nfig, ax = plt.subplots(figsize=(10, 5))\nsns.distplot(data['prodTime_ownershipTime'])\nax.set_title('\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 prodTime_ownershipTime')\nplt.show()","a65e4fa1":"# \u0417\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u043d\u0443\u043b\u044f\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0434\u043b\u044f \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439\ndata['ownershipTimeMonths'].loc[(data['mileage'] == 0) & (\n    data['ownershipTimeMonths'].isnull() == True)] = 0","4c95c8ba":"# \u0423\u0434\u0430\u043b\u0438\u043c \u0441\u043b\u0443\u0436\u0435\u0431\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u043b\u0438 \u0434\u043b\u044f \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0439\ndata.drop(['prodTime_ownershipTime', 'prodTimeMonths'], axis=1, inplace=True)","6f413747":"# \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u0438\u0441\u0445\u043e\u0434\u043d\u0443\u044e \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u043d\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u0434 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u0438, \u0442.\u043a. \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u043e\u0447\u0435\u043d\u044c \u043c\u043d\u043e\u0433\u043e\ncols_removal.append('ownershipTime')\ncols_removal.append('ownershipTimeMonths')","0acfe7f0":"# \u0412\u0441\u0435 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u043f\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0432 train \u0447\u0430\u0441\u0442\u0438\ndata[data.ownersCount.isnull() == True].train.value_counts()","446d47ac":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043f\u043e \u0434\u0430\u043d\u043d\u044b\u043c \u0441 \u043d\u0435\u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0442\u0441\u0432\u043e\u043c \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043c\u0435\u0434\u0438\u0430\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043c\u0435\u0442\u0440\u0438\u043a.\ndata[data.ownersCount.isnull() == True].groupby('productionDate').median()","3cefe697":"data[data.ownersCount.isnull() == True]['mileage'].describe()","5368e4aa":"# \u0417\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 0\ndata['ownersCount'].fillna(0, inplace=True)","d76e08bf":"# \u041f\u0440\u0438\u0432\u0435\u0434\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u0438\u0437 float \u0432 int\ndata['ownersCount'] = data['ownersCount'].astype('int64')","255d31b9":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\nprint(\"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439 \u0432 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u0445.\")\ndata.nunique(dropna=False)","5a302615":"# \u0412\u044b\u0432\u0435\u0434\u0435\u043c \u043f\u0440\u0438\u043c\u0435\u0440 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\nprint(\"\u0412\u044b\u0432\u0435\u0434\u0435\u043c \u043f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043e\u0434\u043d\u043e\u0439 \u0438\u0437 \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430.\")\ndata.loc[5]","ddd19766":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043d\u0430 \u043a\u043e\u043b\u043e\u043d\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043b\u0430\u043d\u0438\u0440\u0443\u0435\u043c \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u0441\u0442\u0432\u0438\u0435 \u0443\u0434\u0430\u043b\u0438\u0442\u044c, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0438\u0445 \u0432 \u0430\u043d\u0430\u043b\u0438\u0437\nprint(\"\u041f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0434\u043b\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f:\", cols_removal)","23b00dee":"# \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043f\u0438\u0441\u043a\u0438 \u0441 \u0440\u0430\u0437\u043d\u044b\u043c\u0438 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\n# \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\nbin_cols = ['condition', 'customs', 'driveSide', 'transmission', 'tcp']\n\n# \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435\ncat_cols = ['bodyType', 'brand', 'color', 'fuelType', 'drivetrain',\n            'model', 'vendor', 'vehicleTransmission', 'numberOfDoors', 'ownersCount']\n\n# \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435\nnum_cols = ['modelDate', 'productionDate',\n            'enginePower', 'mileage', 'engineDisplacement']\n\n# \u0441\u0435\u0440\u0432\u0438\u0441\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435\nservice_cols = ['train', 'sell_id', 'parsing_date']\n\n# \u0446\u0435\u043b\u0435\u0432\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f\ntarget_col = ['price']\n\nall_cols = bin_cols + cat_cols + num_cols + service_cols + target_col\n\nprint(\"\u041a\u043e\u043b-\u0432\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432, \u0434\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430:\", len(all_cols))","67e6c789":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\n\nprint(\"\u0414\u0438\u0430\u0433\u0440\u0430\u043c\u044b \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432, \u0432\u0437\u0430\u0438\u043c\u043e\u0441\u0432\u044f\u0437\u044c \u0441 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439\")\n\nfig, axes = plt.subplots(5, 3, figsize=(30, 40))\nplt.subplots_adjust(wspace=0.5)\naxes = axes.flatten()\ni = 0\n\nfor col in num_cols:\n    sns.distplot(data[col], ax=axes[i])\n    i = i + 1\n    sns.boxplot(data[col], ax=axes[i])\n    i = i + 1\n    sns.scatterplot(data=data[data['train'] == 1],\n                    x=col, y=\"price\", ax=axes[i])\n    i = i + 1","e4db4a05":"print(\"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438 \u0434\u043b\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432.\")\ndisplay(data[num_cols].describe())","39d5e1ab":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0439\nheatmap = sns.heatmap(data[num_cols + target_col].corr(), vmin=-1,\n                      vmax=1, annot=True, cmap='BrBG')\nheatmap.set_title('\u041c\u0430\u0442\u0440\u0438\u0446\u0430 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0439 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u0438 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445')\nplt.show()","0b7dee8d":"# \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c modelDate \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u043d\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435.\ncols_removal.append('modelDate')\ncols_removal.append('engineDisplacement')","04415da5":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0442\u043e\u043f 5 \u0433\u043e\u0434\u043e\u0432 \u0432\u044b\u043f\u0443\u0441\u043a\u0430 \u0430\u0432\u0442\u043e\nfig, ax = plt.subplots(figsize=(10, 5))\n\nfor x in (data['productionDate'].value_counts())[0:7].index:\n    data['mileage'][data['productionDate'] == x].hist(bins=50)\n\nax.set_xlim(0, 700000)\nax.set_ylim(0, 1750)\n\nplt.title(\"\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 mileage \u043f\u043e productionDate\")\nplt.show()","3d78b7f7":"print(\"\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u0438 \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f (\u043b.\u0441.) \u043d\u0430 TEST\")\ndisplay(data[data.train == 0]['enginePower'].describe())\n\nprint(\"\\n\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u0438 \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f (\u043b.\u0441.) \u043d\u0430 TRAIN\")\ndisplay(data[data.train == 1]['enginePower'].describe())","ea8433ab":"print(\"\u0421\u0442\u0440\u043e\u043a\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u044c \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f \u043c\u0435\u043d\u044c\u0448\u0435 30 \u043b.\u0441.\")\ndata[data.enginePower < data[data.train == 0]['enginePower'].min()]","e929a238":"print(\"\u0421\u0442\u0440\u043e\u043a\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u044c \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f \u0431\u043e\u043b\u0435\u0435 639 \u043b.\u0441.\")\ndata[data.enginePower > data[data.train == 0]['enginePower'].max()]","7dd171ab":"# \u0422\u0430\u043a\u0438\u0445 \u0441\u0442\u0440\u043e\u043a \u043d\u0435\u043c\u043d\u043e\u0433\u043e, \u0443\u0434\u0430\u043b\u0438\u043c \u0438\u0437 \u0438\u0437 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430\ndata.drop(data[(data.enginePower > data[data.train == 0]\n                ['enginePower'].max()) | (data.enginePower < data[data.train == 0]\n                                          ['enginePower'].min())].index, inplace=True)","5075294c":"print(\"\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0433\u043e\u0434\u0430 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0441\u0442\u0432\u0430 \u0430\u0432\u0442\u043e \u043d\u0430 TEST\")\ndisplay(data[data.train == 0]['productionDate'].describe())\n\nprint(\"\\n\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0433\u043e\u0434\u0430 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0441\u0442\u0432\u0430 \u0430\u0432\u0442\u043e \u043d\u0430 TRAIN\")\ndisplay(data[data.train == 1]['productionDate'].describe())","809365ce":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0442\u0430\u043a\u0438\u0445 \u0437\u0430\u043f\u0438\u0441\u0435\u0439\nprint(\n    f\"\u0412 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442\u0441\u044f {len(data[data.productionDate < (data['parsing_date'].max().year-30)]['productionDate'])} \u0440\u0430\u0440\u0438\u0442\u0435\u0442\u043d\u044b\u0445 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439.\")","c6752dcd":"fig, ax = plt.subplots(figsize=(10, 5))\n\nax.set_xlim(1970, 2021)\nax.set_ylim(0, 30000000)\nax.set_xticks(np.arange(1970, 2022, 3))\n\nsns.scatterplot(data=data[data['train'] == 1], x='productionDate', y=\"price\")\n\nplt.title(\"\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 productionDate\\n\")\nplt.show()","87304c41":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u0438 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\nprint(\"\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u0438 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432. \u041d\u0430\u0436\u0438\u043c\u0438\u0442\u0435 \u0434\u0432\u0430\u0436\u0434\u044b \u0434\u043b\u044f \u0443\u0432\u0435\u043b\u0435\u0447\u0435\u043d\u0438\u044f.\")\n\nfig, axes = plt.subplots(4, 4, figsize=(35, 35))\nplt.subplots_adjust(wspace=0.5)\naxes = axes.flatten()\ni = 0\n\nfor col in (bin_cols + cat_cols):\n    sns.histplot(data=data, x=data[col], ax=axes[i],\n                 stat='count', bins=data[col].nunique())\n    plt.tight_layout()\n    plt.xticks(rotation=45)\n    plt.title(col)\n    i = i + 1","93a7f58d":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0433\u0440\u0430\u0444\u0438\u043a boxplot\nprint(\"Boxplot \u043d\u0435\u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0438 \u0438\u0445 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u043e\u0442 \u0446\u0435\u043d\u044b.\")\nfor col in (bin_cols + cat_cols):    \n    get_boxplot(col)","f9a30ef2":"# \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c modelDate \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a \u043d\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435.\ncols_removal.append('condition')\ncols_removal.append('customs')","12055741":"# \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u0432 test\ntest.driveSide.value_counts(normalize=True)","3cf2a36c":"print(\n    f'\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439 brand \u0432 test, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0432 train: \\n{list(set(data[data.train == 0].brand.unique()).difference(data[data.train == 1].brand.unique()))}')\nprint(\n    f'\\n\u0421\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u0447\u0435\u043d\u0438\u0439 brand \u0432 train, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u0434\u0435\u043b\u0430\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0432 test: \\n{list(set(data[data.train == 1].brand.unique()).difference(data[data.train == 0].brand.unique()))}')","2b6a3992":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0432\u043d\u0438\u043c\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043d\u0430 \u0433\u0440\u0430\u0444\u0438\u043a\u0438 \u0435\u0449\u0435 \u0440\u0430\u0437\nanalyze_cat_cols('brand')","5502f739":"print(\n    f'\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439 brand \u0432 test, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0432 train: \\n{list(set(data[data.train == 0].model.unique()).difference(data[data.train == 1].model.unique()))}')\nprint(\n    f'\\n\u0421\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u0447\u0435\u043d\u0438\u0439 brand \u0432 train, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u0434\u0435\u043b\u0430\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0432 test: \\n{list(set(data[data.train == 1].model.unique()).difference(data[data.train == 0].model.unique()))}')","ed5f0a85":"print(\n    f'\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439 brand \u0432 test, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0432 train: \\n{list(set(data[data.train == 0].color.unique()).difference(data[data.train == 1].color.unique()))}')\nprint(\n    f'\\n\u0421\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u0447\u0435\u043d\u0438\u0439 brand \u0432 train, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u0434\u0435\u043b\u0430\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0432 test: \\n{list(set(data[data.train == 1].color.unique()).difference(data[data.train == 0].color.unique()))}')","d9dd9969":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0432\u043d\u0438\u043c\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043d\u0430 \u0433\u0440\u0430\u0444\u0438\u043a\u0438 \u0435\u0449\u0435 \u0440\u0430\u0437\nanalyze_cat_cols('color')","284b3296":"print(\n    f'\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439 brand \u0432 test, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0432 train: \\n{list(set(data[data.train == 0].fuelType.unique()).difference(data[data.train == 1].fuelType.unique()))}')\nprint(\n    f'\\n\u0421\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u0447\u0435\u043d\u0438\u0439 brand \u0432 train, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u0434\u0435\u043b\u0430\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0432 test: \\n{list(set(data[data.train == 1].fuelType.unique()).difference(data[data.train == 0].fuelType.unique()))}')","b7e51a28":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0432\u043d\u0438\u043c\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043d\u0430 \u0433\u0440\u0430\u0444\u0438\u043a\u0438 \u0435\u0449\u0435 \u0440\u0430\u0437\nanalyze_cat_cols('fuelType')","bb7e3c98":"print(\n    f'\u0421\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u043e fuelType \u0432 \u0442\u0440\u0435\u0439\u043d\u0435:= {list(data[data.train ==0].fuelType.unique())}')\nprint(\n    f'\u0421\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u043e fuelType \u0432 \u0442\u0435\u0441\u0442\u0435:= {list(data[data.train ==0].fuelType.unique())}')","f5d11de5":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a\u0438\u0435 \u0431\u0440\u0435\u043d\u0434\u044b \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0432 \"\u044d\u043b\u0435\u043a\u0442\u0440\u043e\" \u0442\u0438\u043f\u0435 \u0442\u043e\u043f\u043b\u0438\u0432\u0430 \u0432 \u0442\u0440\u0435\u0439\u043d\u0435 \u0438 \u0442\u0435\u0441\u0442\u0435\ndata[data['fuelType'] == '\u044d\u043b\u0435\u043a\u0442\u0440\u043e'].groupby(\n    ['train', 'brand'])['bodyType'].count()","96f0e231":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0437\u0430\u043f\u0438\u0441\u0438 \u0441 \u043a\u043e\u043b-\u0432\u043e\u043c \u0434\u0432\u0435\u0440\u0435\u0439 \u043c\u0435\u043d\u0435\u0435 2\ndata[data.numberOfDoors < 2]","8a13d305":"# \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432 \u0442\u0440\u0435\u0439\u043d\u0435\ndata[data.train == 1]['description'].iloc[1]","24a4af1e":"# \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432 \u0442\u0435\u0441\u0442\u0435\ndata[data.train == 0]['description'].iloc[3]","548da42d":"# \u0414\u043b\u044f \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c LabelEncoder\nlabel_encoder = LabelEncoder()\n\nfor column in bin_cols:\n    data[column] = label_encoder.fit_transform(data[column])\n\n# \u0423\u0431\u0435\u0434\u0438\u043c\u0441\u044f \u0432 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0438\ndata[bin_cols].sample(6)","7c0b7ae3":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438\nprint(data[data.train == 1]['price'].describe())","a85d6460":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439\nfig, ax = plt.subplots(figsize=(10, 5))\nsns.histplot(data=data[data.train == 1], x='price')\nplt.title(\"\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \\n\")\nplt.show()","f932e7ab":"# \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u043a\u0430\ndata['price_log'] = data['price'].apply(lambda x: np.log(x))\n\n# \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u0446\u0435\u043b\u0435\u0432\u044b\u0445\ntarget_col.append('price_log')","f2807d9f":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a \u0438\u0437\u043c\u0435\u043d\u0438\u043b\u043e\u0441\u044c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439\nfig, ax = plt.subplots(figsize=(10, 5))\nsns.histplot(data=data[data.train == 1], x='price_log')\nplt.title(\"\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \\n\")\nplt.show()","4c419402":"# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u0442\u043e\u043b\u0431\u0435\u0446 \u0441 \u043a\u0443\u0440\u0441\u043e\u043c USD-RUB \u043d\u0430 \u0434\u0430\u0442\u0443 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430\ndata['RUB_USD_rate'] = data['parsing_date'].copy().apply(lambda x: x.strftime(\n    \"%Y-%m-%d\"))\n\ndata['RUB_USD_rate'] = data['RUB_USD_rate'].map(\n    {'2020-09-09': 75.2048, '2020-10-20': 77.3423,\n     '2020-10-19': 77.6500, '2020-10-21': 76.7229,\n     '2020-10-24': 76.1235, '2020-10-25': 76.1235,\n     '2020-10-26': 76.4950, '2021-08-29': 73.5503,\n     '2021-08-30': 73.5048, '2021-08-31': 73.2274})","3c699162":"# \u0420\u0430\u0441\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c price_usd\ndata['price_usd'] = data.apply(lambda x: x.price\/x.RUB_USD_rate, axis=1)","cf2c54a6":"# \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u0446\u0435\u043b\u0435\u0432\u044b\u0445\ntarget_col.append('price_usd')","6b37f006":"# \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0435\u0440\u0432\u0438\u0441\u043d\u044b\u0445\nservice_cols.append('RUB_USD_rate')","15d7b371":"# \u0414\u043b\u044f \u0443\u043f\u0440\u043e\u0449\u0435\u043d\u0438\u044f \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0434\u043b\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0441\u043f\u0438\u0441\u043a\u0438\ncat_cols_new = []\nnum_cols_new = []\nbin_cols_new = []","dd66390a":"# \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a 'km_per_year', \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0440\u0430\u0432\u0435\u043d \u043f\u0440\u043e\u0431\u0435\u0433\u0443, \u043f\u043e\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u043c\u0443 \u043d\u0430 \u0432\u043e\u0437\u0440\u0430\u0441\u0442 \u0430\u0432\u0442\u043e,\ndata['km_per_year'] = data.apply(km_per_year, axis=1)","37dfee7b":"print(\"\u0414\u0438\u0430\u0433\u0440\u0430\u043c\u044b \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f km_per_year \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430, \u0432\u0437\u0430\u0438\u043c\u043e\u0441\u0432\u044f\u0437\u044c \u0441 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439\")\n\nfig, axes = plt.subplots(1, 3, figsize=(20, 5))\nplt.subplots_adjust(wspace=0.5)\naxes = axes.flatten()\n\nsns.distplot(data['km_per_year'], ax=axes[0])\nsns.boxplot(data['km_per_year'], ax=axes[1])\nsns.scatterplot(data=data[data['train'] == 1],\n                x='km_per_year', y=\"price\", ax=axes[2])\nplt.show()","73611bbf":"# \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\nnum_cols.append('km_per_year')","ccef5bce":"num_cols_new.append('km_per_year')","af42414f":"# \u0414\u043e\u0431\u0430\u0432\u0438\u043c'dateModelProdDiff', \u0440\u0430\u0432\u043d\u044b\u0439 \u0440\u0430\u0437\u043d\u0438\u0446\u0435 \u043c\u0435\u0436\u0434\u0443 \u0433\u043e\u0434\u043e\u043c \u0432\u044b\u043f\u0443\u0441\u043a\u0430 \u0430\u0432\u0442\u043e \u0438 \u0433\u043e\u0434\u043e\u043c \u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0441\u0442\u0432\u0430 \u043c\u043e\u0434\u0435\u043b\u0438\ndata['carNovelty'] = data['productionDate'] - data['modelDate']","937e2ca7":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0447\u0442\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c\ndata[['productionDate', 'modelDate', 'mileage',\n      'km_per_year', 'carNovelty']].sample(5)","851e4af5":"# \u0417\u0430\u043c\u0435\u043d\u0438\u043c \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430 0\ndata['carNovelty'] = data['carNovelty'].apply(lambda x: 0 if x < 0 else x)","1a51ea15":"# \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\nnum_cols.append('carNovelty')","4359eb24":"num_cols_new.append('carNovelty')","4f721365":"# \u0417\u0430\u0434\u0430\u0434\u0438\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0440\u0430\u0440\u0438\u0442\u0435\u0442\u043d\u044b\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438\nrar_cat = pd.cut(data.modelDate, bins=[0, 1905, 1919, 1931, 1946, 1961, 1971, 2022],\n                 labels=['Class A (Ancestor)', 'Class B (Veteran)', 'Class C (Vintage)', 'Class D (Post Vintage)',\n                         'Class E (Post War)', 'class F', '\u043d\u0435\u0440\u0430\u0440\u0438\u0442\u0435\u0442\u043d\u044b\u0439'])\ndata.insert(20, 'rarity', rar_cat)","fa9df278":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\nprint(\"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 \u043f\u043e \u0440\u0430\u0440\u0438\u0442\u0435\u0442\u043d\u043e\u0441\u0442\u0438 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u043e\u0432 \u0433\u043e\u0434\u043e\u0432 \u043c\u043e\u0434\u0435\u043b\u0435\u0439\")\ndata.groupby('rarity')['modelDate'].agg(['min', 'max', 'count'])","d0814687":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043c\u0435\u0434\u0438\u0430\u043d\u043d\u0443\u044e \u0446\u0435\u043d\u0443 \u043f\u043e \u0433\u0440\u0443\u043f\u043f\u0430\u043c\nprint(\"\u041c\u0435\u0434\u0438\u0430\u043d\u043d\u0430\u044f \u0446\u0435\u043d\u0430 \u043f\u043e \u0433\u0440\u0443\u043f\u0430\u043c \u0440\u0430\u0440\u0438\u0442\u0435\u0442\u043d\u043e\u0441\u0442\u0438\")\ndata.groupby('rarity')['price'].agg(['median'])","22977884":"# \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043a \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u043c\ncat_cols.append('rarity')","d65975ac":"cat_cols_new.append('rarity')","76cd86a0":"# \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\ndata['prodDate_3Y'] = data.apply(prod_date_range, year_lim=3, axis=1)\ndata['prodDate_5Y'] = data.apply(prod_date_range, year_lim=5, axis=1)","5f9320b0":"# \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\ndata[['prodDate_3Y', 'prodDate_5Y',\n      'productionDate', 'parsing_date']].sample(3)","77fc84cc":"# \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\nbin_cols.append('prodDate_3Y')\nbin_cols.append('prodDate_5Y')\nbin_cols_new.append('prodDate_3Y')\nbin_cols_new.append('prodDate_5Y')","b7e89ef9":"# \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u0447\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e\ndata['ownershipTimeIsNull'] = np.where(\n    data['ownershipTimeMonths'].isnull(), 1, 0)","68581406":"# \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\nbin_cols.append('ownershipTimeIsNull')\nbin_cols_new.append('ownershipTimeIsNull')","8681850d":"# \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u0447\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e\ndata['descriptionIsNull'] = np.where(data['description'].isnull(), 1, 0)","08337054":"# \u041f\u0440\u0438\u043c\u0435\u0440 \u0434\u0430\u043d\u043d\u044b\u0445\ndata[['descriptionIsNull', 'description']].sample(1)","e92f29d6":"# \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\nbin_cols.append('descriptionIsNull')\nbin_cols_new.append('descriptionIsNull')","0bfd32cd":"# \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\ndata['newCar'] = data.apply(lambda x: 1 if x['mileage'] == 0 else 0, axis=1)","7dbfc33f":"# \u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\ndata['newCar'].value_counts()","8b77a151":"# \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\nbin_cols.append('newCar')\nbin_cols_new.append('newCar')","b27653b0":"# \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u0441 \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0430\u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 \u0432 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u043f\u043e \u043c\u0430\u0440\u043a\u0430\u043c\nbrand_df = pd.DataFrame(data['brand'].value_counts())\n# \u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043f\u043e \u0432\u0441\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c \u0431\u0440\u0435\u043d\u0434\u0430\nmean_brand = data['brand'].value_counts().values.mean()\n# \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0432\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\nbrand_df['brandPopular'] = brand_df.brand.apply(\n    lambda x: 1 if x >= mean_brand else 0)\n# \u0423\u0434\u0430\u043b\u0438\u043c \u043d\u0435\u043d\u0443\u0436\u043d\u044b\u0439 \u0441\u0442\u043e\u043b\u0431\u0435\u0446\nbrand_df.drop('brand', axis=1, inplace=True)\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u0438 \u0431\u0440\u0435\u043d\u0434\u043e\u0432\ndict_brand = brand_df.to_dict()['brandPopular']\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\ndata['brandPopular'] = data.brand.copy()\ndata['brandPopular'].replace(to_replace=dict_brand, inplace=True)\n# \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\ndata[['brand', 'brandPopular']].sample(10)","dfab620a":"# \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\nbin_cols.append('brandPopular')\nbin_cols_new.append('brandPopular')","ffe47ac5":"# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0443\u0441\u0442\u043e\u0439 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0432\u0441\u0435\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439\nmodel_dict = {}\n\nfor item in data.brand.unique():\n    model_df = pd.DataFrame(data[data.brand == item]['model'].value_counts())\n    # \u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043f\u043e \u0432\u0441\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0431\u0440\u0435\u043d\u0434\u0430\n    mean_model = data[data.brand == item]['model'].value_counts().values.mean()\n    # \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0432\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\n    model_df['modelPopular'] = model_df.model.apply(\n        lambda x: 1 if x >= mean_model else 0)\n    # \u0423\u0434\u0430\u043b\u0438\u043c \u043d\u0435\u043d\u0443\u0436\u043d\u044b\u0439 \u0441\u0442\u043e\u043b\u0431\u0435\u0446\n    model_df.drop('model', axis=1, inplace=True)\n    # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u0438 \u0431\u0440\u0435\u043d\u0434\u043e\u0432\n    dict_model_per_brand = model_df.to_dict()['modelPopular']\n    model_dict.update(dict_model_per_brand)\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\ndata['modelPopular'] = data.model.copy()\ndata['modelPopular'].replace(to_replace=model_dict, inplace=True)\n# \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\ndata[['model', 'modelPopular']].sample(10)","697d44a3":"# \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\nbin_cols.append('modelPopular')\nbin_cols_new.append('modelPopular')","2fd86af5":"# \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c color_df \u0441\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u043c\u0438 color, counts, colorPopularity\ncolor_df = pd.DataFrame(data['color'].value_counts()).reset_index()\n\n# \u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043f\u043e \u0432\u0441\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c \u0446\u0432\u0435\u0442\u0430\nmean = color_df.color.mean()\n\n# \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\ncolor_df['colorPopular'] = color_df.color.apply(lambda x: round(x\/mean, 2))\n\n# \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u043b\u0438\u0448\u043d\u0438\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0438 \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u044b\u0432\u0430\u0435\u043c\ncolor_df.drop('color', axis=1, inplace=True)\ncolor_df.rename(columns={\"index\": \"color\"}, inplace=True)\n\n# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\nprint(\"\u041e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u043e\u0442\u0430 \u0446\u0432\u0435\u0442\u0430 \u043f\u043e \u0432\u0441\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435.\")\ndisplay(color_df)\n\n# \u041c\u0435\u0440\u0436\u0438\u043c \u0441 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u043e\u043c\ndata = pd.merge(data, color_df, on=\"color\", how=\"left\")\n\n# \u0412\u044b\u0432\u0435\u0434\u0435\u043c \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u0438\u0442\u043e\u0433\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\nprint(\"\u041f\u0440\u0438\u043c\u0435\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0435.\")\ndata[['color', 'colorPopular']].sample(5)","f2e6cca9":"# \u0412\u0430\u0440\u0438\u0430\u043d\u0442 \u043d\u0435 \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u0433\u043e \u0430 \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u0438 \u0430\u0432\u0442\u043e\ndata['colorPopular'] = data['colorPopular'].apply(lambda x: 1 if x >= 1 else 0)","57bc93ca":"data[['color', 'colorPopular']].sample(5)","31f65c09":"# \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\nbin_cols.append('colorPopular')\nbin_cols_new.append('colorPopular')","068ebe25":"# \u0417\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438\ndata['description'] = data['description'].fillna('[]')\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0441\u043b\u043e\u0432 \u0432 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0438\ndata['description_words_count'] = data['description'].apply(\n    lambda x: len(x.split()))","c1ea4b6a":"# \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\nnum_cols.append('description_words_count')\nnum_cols_new.append('description_words_count')","3dbc00b2":"print(\"\u0414\u0438\u0430\u0433\u0440\u0430\u043c\u044b \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432, \u0432\u0437\u0430\u0438\u043c\u043e\u0441\u0432\u044f\u0437\u044c \u0441 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439\")\n\nfig, axes = plt.subplots(len(num_cols_new), 3, figsize=(30, 20))\nplt.subplots_adjust(wspace=0.5)\naxes = axes.flatten()\ni = 0\n\nfor col in num_cols_new:\n    sns.distplot(data[col], ax=axes[i])\n    i = i + 1\n    sns.boxplot(data[col], ax=axes[i])\n    i = i + 1\n    sns.scatterplot(data=data[data['train'] == 1],\n                    x=col, y=\"price\", ax=axes[i])\n    i = i + 1","70d779c4":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0432\u043d\u0438\u043c\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043d\u0430 \u0433\u0440\u0430\u0444\u0438\u043a\u0438 \u0435\u0449\u0435 \u0440\u0430\u0437\nfor col in (bin_cols_new+cat_cols_new):\n    print(\"\u0413\u0440\u0430\u0444\u0438\u043a\u0438 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \", col)\n    analyze_cat_cols(col)\n    print(\"\\n\")","1312708e":"# \u041f\u0440\u043e\u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u0434\u043b\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u0438 \u043d\u043e\u043c\u0438\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\nprint(\"\u041e\u0442\u0447\u0435\u0442 \u043e \u043d\u0430\u043b\u0438\u0447\u0438\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u0432 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435.\\n\")\nfor col in (num_cols + target_col):\n    print(\"\\n\u041f\u0440\u0438\u0437\u043d\u0430\u043a: \", col)\n    iqr_analysis(data[col])\n    print(\"-\" * 100)","afd707f3":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u0432 test\ntest.enginePower.max()","dc043814":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\nfig, ax = plt.subplots(figsize=(10, 5))\nsns.histplot(data=data[(data.enginePower > 352)], x='enginePower', hue = 'train')\nplt.title(\"\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 EnginePower \u0432 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435 \\n\")\nplt.show()","38f41133":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\nfig, ax = plt.subplots(figsize=(10, 5))\nsns.regplot(data=data[(data.enginePower > 352) & (\n    data.train == 1)], x=\"enginePower\", y=\"price\")\nplt.title(\"\u0417\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c price \u043e\u0442 EnginePower \u0432 train \u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u0430\u0445 \u043f\u043e EnginePower \\n\")\nplt.show()","993ca4dc":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u0432 test\ntest.mileage.max()","86aaff80":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\nfig, ax = plt.subplots(figsize=(10, 5))\nsns.histplot(data=data[(data.mileage > 385000)], x='mileage', hue = 'train')\nplt.title(\"\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 mileage \u0432 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435 \\n\")\nplt.show()","5c0fd346":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\nfig, ax = plt.subplots(figsize=(10, 7))\nsns.regplot(data=data[(data.mileage > 385000) & (\n    data.train == 1)], x=\"mileage\", y=\"price\")\nplt.title(\"\u0417\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c price \u043e\u0442 mileage \u0432 train \u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u0430\u0445 \u043f\u043e mileage \\n\")\nplt.show()","c05c3341":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u0432 test\nprint(\"\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 engineDisplacement  \u0432 test:\", test.engineDisplacement.max())\n# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u0432 test\nprint(\"\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 engineDisplacement  \u0432 test:\", test.engineDisplacement.min())","342fb55f":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\nfig, ax = plt.subplots(figsize=(10, 5))\nsns.histplot(data=data[(data.engineDisplacement > 3.85)], x='engineDisplacement', hue = 'train')\nplt.title(\"\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 engineDisplacement \u0432 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435 \\n\")\nplt.show()","2d2b0513":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\nfig, ax = plt.subplots(figsize=(10, 7))\nsns.regplot(data=data[(data.mileage > 3.85) & (\n    data.train == 1)], x=\"engineDisplacement\", y=\"price\")\nplt.title(\"\u0417\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c price \u043e\u0442 engineDisplacement \u0432 train \u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u0430\u0445 \u043f\u043e engineDisplacement \\n\")\nplt.show()","3a98c2a7":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0437\u0430\u043f\u0438\u0441\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0438\u0432\u044b\u0448\u0430\u044e\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u043e\u0440\u043e\u0433 test-\u0430\ndata[(data.engineDisplacement > 6.6)].describe()","2ec0ac87":"## \u0417\u0430\u043c\u0435\u043d\u044f\u0435\u043c \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043d\u0430 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u0432 \u0442\u0435\u0441\u0442\u0435\n#data.engineDisplacement = data.engineDisplacement.apply(lambda x: test.engineDisplacement.max(\n#) if x > test.engineDisplacement.max() else x)","53f2d23b":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\nfig, ax = plt.subplots(figsize=(10, 5))\nsns.histplot(data=data[(data.description_words_count > 315)], x='description_words_count', hue = 'train')\nplt.title(\"\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 description_words_count \u0432 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435 \\n\")\nplt.show()","613098d3":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\nfig, ax = plt.subplots(figsize=(10, 7))\nsns.regplot(data=data[(data.description_words_count > 315) & (\n    data.train == 1)], x=\"description_words_count\", y=\"price\")\nplt.title(\"\u0417\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c price \u043e\u0442 engineDisplacement \u0432 train \u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u0430\u0445 \u043f\u043e engineDisplacement \\n\")\nplt.show()","0971f2d7":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\nfig, ax = plt.subplots(figsize=(10, 5))\nsns.histplot(data=data[(data.price > 23362500)&(data.train == 1)], x='price')\nplt.title(\"\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 price \u0432 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435 \\n\")\nplt.show()","2eca2a6a":"data[(data.price > 23362500)&(data.train == 1)].describe(include=object)","a921750e":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a\u0438\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u0438\u043c\u0435\u044e\u0442 \u043e\u0441\u043e\u0431\u043e \u0432\u044b\u0441\u043e\u043a\u0438\u0435 \u0446\u0435\u043d\u044b\ndata[(data.price > 23362500)&(data.train == 1)].groupby(['brand', 'model'])['price'].agg(['count', 'max'])\n# \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0441\u043f\u0438\u0441\u043e\u043a\nmodels_list = data[(data.price > 23362500)&(data.train == 1)].model.values","77429788":"# \u0412\u0441\u043f\u043e\u043c\u043d\u0438\u043c, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0430\u0432\u0442\u043e \u0442\u0430\u043a\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0432 \u0442\u0435\u0441\u0442\u0435\ndata[(data.model.isin(models_list)) & (data.train == 0)].groupby(\n    ['brand', 'model'])['model'].count()","5cb83b0c":"## \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443\n#data.drop([data[data.model == '918_SPYDER'].index[0]], inplace=True)","fb6a0843":"cols_to_log = ['enginePower', 'mileage', 'engineDisplacement', 'description_words_count']\n# \u041f\u0440\u0438\u043c\u0435\u043d\u0438\u043c \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u043e \u0432\u0441\u0435\u043c \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\nfor col in cols_to_log:\n    data[col] = data[col].apply(lambda w: np.log(w+1))","c63a9d15":"# \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a \u0438\u0437\u043c\u0435\u043d\u0438\u043b\u043e\u0441\u044c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435\nprint(\"\u0414\u0438\u0430\u0433\u0440\u0430\u043c\u044b \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043f\u043e\u0441\u043b\u0435 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.\")\nfig, axes = plt.subplots(len(cols_to_log), figsize=(10, 15))\naxes = axes.flatten()\ni = 0\n\nfor col in cols_to_log:\n    sns.distplot(data[col], ax=axes[i])\n    plt.title(col)\n    i = i + 1","4a4a26d9":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0439\nplt.figure(figsize=(10, 6))\nheatmap = sns.heatmap(data[data['train'] == 1][num_cols +\n                                               target_col].corr(), vmin=-1, vmax=1, annot=True, cmap='BrBG')\nheatmap.set_title('\u041c\u0430\u0442\u0440\u0438\u0446\u0430 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0439 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u0438 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445')\nplt.show()","1cb4cb70":"# \u041f\u043e\u0434\u0441\u0432\u0435\u0442\u0438\u043c \u0442\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0433\u0434\u0435 \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0438 \u0431\u043e\u043b\u044c\u0448\u0435 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u0440\u043e\u0433\u0430\nplt.figure(figsize=(6, 4))\nheatmap = sns.heatmap(abs(data[data['train'] == 1][num_cols].corr(\n)) > 0.8, vmin=-1, vmax=1, annot=True, cmap='BrBG')\nheatmap.set_title('\u041c\u0430\u0442\u0440\u0438\u0446\u0430 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0439, \u0433\u0434\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044f > 0.8')\nplt.show()","87fc0b03":"# \u0421\u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u0441\u0435\u0442 \u0441\u043e \u0441\u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438\ncorrelated_features = set()\n\n# \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u0446\u0435\u043b\u0435\u0432\u044b\u0435 \u0438 \u0441\u043b\u0443\u0436\u0435\u0431\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0438\u0437 \u043c\u0430\u0442\u0440\u0438\u0446\u044b \u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0446\u0438\u0439, \u0442\u043a \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044f \u0441 \u043d\u0435\u0439, - \u0445\u043e\u0440\u043e\u0448\u043e \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438\ncorrelation_matrix = data[data['train'] == 1][num_cols].corr()\n\nfor i in range(len(correlation_matrix.columns)):\n    for j in range(i):\n        if abs(correlation_matrix.iloc[i, j]) > 0.8:\n            colname = correlation_matrix.columns[j]\n            correlated_features.add(colname)\n\nprint('\u0421\u043f\u0438\u0441\u043e\u043a \u0441\u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043d\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0438\u0437 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438:',\n      correlated_features)","95e2fe4b":"# \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0438\u0437 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0440\u0435\u0448\u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u043e \u0445\u043e\u0434\u0443 \u0430\u043d\u0430\u043b\u0438\u0437\u0430\ndata.drop(cols_removal, axis=1, inplace=True)","cedbb3ce":"# \u0421\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043e\u0441\u0442\u0430\u043b\u0438\u0441\u044c\nprint(\"\u041f\u043e\u0441\u043b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043e\u0441\u0442\u0430\u043b\u0438\u0441\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438:\", data.columns)","8d1fc46e":"## \u0412\u044b\u0432\u0435\u0434\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u043e\u0441\u043b\u0435 \u0432\u0441\u0435\u0445 \u043e\u0431\u0440\u043e\u0430\u0431\u043e\u0442\u043e\u043a\n#data[list(set(data.columns) & set(cat_cols))].nunique()","9f77807b":"## \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0447\u0435\u0440\u0435\u0437 label encoding, \u0442.\u043a. \u043e\u043d\u0438 \u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u0435 \u0438 \u043d\u0435\u043c\u043d\u043e\u0433\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0435\n#labels_col = ['ownersCount', 'numberOfDoors']","080e58cc":"## \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0447\u0435\u0440\u0435\u0437 one hot encoding, \u0442.\u043a. \u043e\u043d\u0438 \u043c\u043d\u043e\u0433\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0435 \u0438 \u0432 \u043d\u0438\u0445 \u043e\u0442\u0441\u0443\u0442\u0441\u0432\u0443\u0435\u0442 \u0447\u0435\u0442\u043a\u0438\u0439 \u043f\u043e\u0440\u044f\u0434\u043e\u043a\n#one_hot_cols = ['fuelType', 'color', 'model', 'drivetrain',\n#               'vendor', 'brand', 'vehicleTransmission', 'bodyType', 'rarity']","ac2b3fc8":"# Labels encoding for all\ncols_to_encode = list(set(data.columns) & set(cat_cols))\nfor colum in cols_to_encode:\n    data[colum] = data[colum].astype('category').cat.codes","12952344":"## Labels encoding for chosen set\n#cols_to_encode_lab = labels_col\n#for colum in cols_to_encode_lab:\n#    data[colum] = data[colum].astype('category').cat.codes","58bff45c":"## \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c OneHotEncoder \u0434\u043b\u044f \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\n#cols_to_encode = one_hot_cols\n#\n#ohe = OneHotEncoder(sparse=False)\n#\n#for col in cols_to_encode:\n#    df_one = pd.DataFrame(ohe.fit_transform(data[[col]]))\n#     df_one.columns = ohe.get_feature_names([f'hot_{col}'])\n#    data = data.drop(col, axis=1)  # \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043b\u0438\n#    data = pd.concat([data.reset_index(drop=True), df_one.reset_index(drop=True)], axis=1)","ec210ea5":"# \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0441 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0443\u0434\u0430\u043b\u0438\u043c \u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432\u0432\u0438\u0434\u0443 \u0438\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043d\u0435\u0437\u043d\u0430\u0447\u0438\u043c\u043e\u0441\u0442\u0438\ncat_cols_remove = []\n\n# \u041f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u043b\u0438 \u0438\u0437 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u043e\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430\nfor column in (list(set(data.columns).difference(num_cols+service_cols+target_col))):\n    #print(\"\\n\\n\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0430:\", column)\n    cat_cols_remove.append(get_stat_dif(column))","16ac1624":"## \u0411\u043b\u043e\u043a \u043d\u0438\u0436\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0441\u044f \u0434\u043b\u044f \u0441\u043b\u0443\u0447\u0430\u044f \u0438\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f one hot encoding, \u043f\u043e\u043a\u0430 \u0437\u0430\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0438.\n#print(cat_cols_remove)\n#\n#for item in cat_cols_remove:\n#    if item == None:\n#        cat_cols_remove.remove(item)\n#\n#cat_cols_remove = ['hot_model_BT_50', 'hot_model_BASSARA', 'hot_model_TIGGO_4', 'hot_model_607', 'hot_model_VELLFIRE', 'hot_model_Fit', 'hot_model_FAIRLADY_Z', 'hot_model_AVALON', 'hot_model_CIRRUS', 'hot_model_JUKE_NISMO', 'hot_model_SILVIA', 'hot_model_S5', 'hot_model_BB', 'hot_model_QX4', 'hot_model_COOLBEAR', 'hot_model_TIGRA', 'hot_model_ARISTO', 'hot_model_Pathfinder', 'hot_model_CLIO_RS', 'hot_model_Crown', 'hot_model_AXELA', 'hot_model_NITRO', 'hot_model_DURANGO', 'hot_model_SOLIO', 'hot_model_I10', 'hot_model_TAUNUS', 'hot_model_STINGER', 'hot_model_NADIA', 'hot_model_106', 'hot_model_CLARUS', 'hot_model_SIMPLEX', 'hot_model_4RUNNER', 'hot_model_Note', 'hot_model_DS3', 'hot_model_Navara (Frontier)', 'hot_model_CEED_GT', 'hot_model_CAPRICE', 'hot_model_Accord', 'hot_model_PROCEED_MARVIE', 'hot_model_300_LETTER_SERIES', 'hot_model_KALOS', 'hot_model_ROOMY', 'hot_model_GS', 'hot_model_PAJERO_MINI', 'hot_model_FORENZA', 'hot_model_CROWN_VICTORIA', 'hot_model_PRESEA', 'hot_model_FREDA', 'hot_model_EQUINOX', 'hot_model_A-\u041a\u043b\u0430\u0441\u0441', 'hot_model_ATOS', 'hot_model_FIESTA_ST', 'hot_model_PATROL', 'hot_model_SC', 'hot_model_918_SPYDER', 'hot_model_INTEGRA', 'hot_model_V40_CC', 'hot_model_PAO', 'hot_model_HARRIER', 'hot_model_QX56', 'hot_model_VANETTE', 'hot_model_WINGLE_UP', 'hot_model_02', 'hot_model_C6', 'hot_model_Presage', 'hot_model_Auris', 'hot_model_MEGANE_RS', 'hot_model_DINGO', 'hot_model_INSPIRE', 'hot_model_QUEST', 'hot_model_I_MIEV', 'hot_model_SAMURAI', 'hot_model_B_KLASSE', 'hot_model_760', 'hot_model_S4', 'hot_model_CAPELLA', 'hot_model_STREAM', 'hot_model_Ipsum', 'hot_model_MARCH', 'hot_model_FORESTER', 'hot_model_MISTRAL', 'hot_model_Passo', 'hot_model_AGILA', 'hot_model_EMGRAND_7', 'hot_model_FTO', 'hot_model_Tiida', 'hot_model_BONUS_3', 'hot_model_X3_M', 'hot_model_121', 'hot_model_CEDRIC', 'hot_model_QUORIS', 'hot_model_CORSA_OPC', 'hot_model_GRANDEUR', 'hot_model_IMPREZA_WRX_STI', 'hot_model_PASSO', 'hot_model_SLK_KLASSE_AMG', 'hot_model_Pajero Sport', 'hot_model_140', 'hot_model_COROLLA_II', 'hot_model_SIGNUM', 'hot_model_BX', 'hot_model_Karoq', 'hot_model_V8', 'hot_model_DS5', 'hot_model_QASHQAI_PLUS_2', 'hot_model_Sentra', 'hot_model_DAMAS', 'hot_model_VERSO_S', 'hot_model_20', 'hot_model_300C', 'hot_model_Cefiro', 'hot_model_SLC_KLASSE', 'hot_model_CROWN_MAJESTA', 'hot_model_N_WGN', 'hot_bodyType_\u0444\u0430\u0441\u0442\u0431\u0435\u043a', 'hot_model_WINDOM', 'hot_model_TRACKER', 'hot_model_CALIFORNIA', 'hot_model_Carina E', 'hot_model_ATLAS', 'hot_model_STEPWAGON', 'hot_model_RODIUS', 'hot_model_AYGO', 'hot_model_EUNOS_100', 'hot_model_90', 'hot_model_NAVARA', 'hot_model_CORRADO', 'hot_model_FAMILIA', 'hot_model_FIT', 'hot_model_944', 'hot_model_ISTANA', 'hot_model_VITARA', 'hot_model_LAFESTA', 'hot_model_TARO', 'hot_model_LIBETY_NA', 'hot_model_HIACE', 'hot_model_Rasheen', 'hot_model_XG', 'hot_model_PREMIO', 'hot_model_W114', 'hot_model_FREESTYLE', 'hot_model_XSARA', 'hot_model_PERI', 'hot_model_SPARKY', 'hot_model_OTTI', 'hot_model_ALMERA_TINO', 'hot_model_I30_N', 'hot_model_ORION', 'hot_model_GLB', 'hot_model_180SX', 'hot_model_AIRTREK', 'hot_model_RAFAGA', 'hot_model_Q30', 'hot_model_FLORID', 'hot_model_X4_M', 'hot_model_COWRY', 'hot_model_SAMBAR', 'hot_model_LOGO', 'hot_model_920', 'hot_model_HOVER_M4', 'hot_model_Teana', 'hot_model_REGIUS', 'hot_model_DEER', 'hot_model_VERISA', 'hot_model_EXPLORER_SPORT_TRAC', 'hot_model_LITE_ACE', 'hot_model_Amarok', 'hot_model_HOVER_M2', 'hot_model_TACOMA', 'hot_model_Odyssey', 'hot_model_C-HR', 'hot_model_SCIROCCO', 'hot_model_MAGNUM', 'hot_model_EDIX', 'hot_model_TIGGO_7', 'hot_model_100_SERIES', 'hot_model_MOBILIO', 'hot_model_4007', 'hot_model_RX_7', 'hot_model_CORONA_EXIV', 'hot_model_MOCO', 'hot_model_ACTY', 'hot_model_RIDGELINE', 'hot_model_KLUGER', 'hot_model_SSR', 'hot_model_AIRWAVE', 'hot_model_LANCER_EVOLUTION', 'hot_model_RENO', 'hot_model_AQUA', 'hot_model_TYPE_3', 'hot_model_Civic', 'hot_model_Vitz', 'hot_model_ELEMENT', 'hot_model_VIPER', 'hot_model_March', 'hot_model_TTS', 'hot_model_HUSTLER', 'hot_model_NP300', 'hot_model_XEDOS_9', 'hot_model_ORIENTAL_SON', 'hot_model_BIANTE', 'hot_fuelType_\u0433\u0430\u0437', 'hot_model_CLUBMAN', 'hot_model_FREED', 'hot_model_RSQ3', 'hot_model_HATCH', 'hot_model_Galant', 'hot_model_SEDONA', 'hot_model_Touran', 'hot_model_301', 'hot_model_RS3', 'hot_model_NOAH', 'hot_model_I3', 'hot_model_DS4', 'hot_model_MARK_X', 'hot_model_Passat', 'hot_model_G-\u041a\u043b\u0430\u0441\u0441', 'hot_model_PRAIRIE', 'hot_model_JUMPY', 'hot_model_Tiguan', 'hot_model_MX_6', 'hot_model_Bora', 'hot_model_POPULAR', 'hot_model_SIDEKICK', 'hot_model_K5_BLAZER', 'hot_model_GLORIA', 'hot_model_V40', 'hot_model_STARLET', 'hot_model_SIENTA', 'hot_model_LANTRA', 'hot_model_N_BOX', 'hot_model_Eclipse Cross', 'hot_model_PASEO', 'hot_model_CAYMAN_GT4', 'hot_model_X_TRAIL', 'hot_model_DS', 'hot_model_CAMRY', 'hot_model_XEDOS_6', 'hot_model_URVAN', 'hot_model_COMMANDER', 'hot_model_RETONA', 'hot_model_HILUX_SURF', 'hot_model_VOLT', 'hot_model_PREMACY', 'hot_model_Z3M', 'hot_model_ARTEON', 'hot_model_Patrol', 'hot_model_PRIMASTAR', 'hot_model_ARKANA', 'hot_model_PRESIDENT', 'hot_model_Golf', 'hot_model_AVANCIER', 'hot_model_C70', 'hot_model_NEMO', 'hot_model_280ZX', 'hot_model_WISH', 'hot_model_CARINA_ED', 'hot_model_CIVIC_TYPE_R', 'hot_model_MOBILIO_SPIKE', 'hot_model_1007', 'hot_model_PROBE', 'hot_model_6 \u0441\u0435\u0440\u0438\u0438', 'hot_model_ASTRO', 'hot_model_DOKKER', 'hot_model_ORIGIN', 'hot_model_Montero', 'hot_model_ALERO', 'hot_model_CHARIOT', 'hot_model_LHS', 'hot_model_CORSICA', 'hot_model_TERRANO_REGULUS', 'hot_model_TOWN_AND_COUNTRY', 'hot_model_ODYSSEY', 'hot_model_GRANDLAND_X', 'hot_model_CROSSTOUR', 'hot_model_H200', 'hot_model_DUET', 'hot_model_STAGEA', 'hot_model_MUSSO', 'hot_model_BREVIS', 'hot_model_TICO', 'hot_model_PRIUSPLUS', 'hot_model_GL-\u041a\u043b\u0430\u0441\u0441', 'hot_model_LUMINA', 'hot_model_806', 'hot_model_MR_S', 'hot_model_KAROQ', 'hot_model_CAMI', 'hot_model_CITAN', 'hot_model_PRESAGE', 'hot_model_TINO', 'hot_model_VISION', 'hot_model_KORANDO_SPORTS', 'hot_model_SUCCEED', 'hot_model_CATERA', 'hot_model_Caddy', 'hot_model_FUGA', 'hot_model_S7', 'hot_model_GC6', 'hot_model_LANCER_RALLIART', 'hot_model_Lancer', 'hot_model_GAIA', 'hot_model_C-\u041a\u043b\u0430\u0441\u0441', 'hot_model_TIGGO_2', 'hot_model_200SX', 'hot_model_Pilot', 'hot_model_CX_3', 'hot_model_CAROL', 'hot_model_S_TYPE', 'hot_model_S70', 'hot_model_PASSPORT', 'hot_model_YARIS_VERSO', 'hot_model_BEETLE', 'hot_model_TUCSON', 'hot_model_RC_F', 'hot_model_FABIA_RS', 'hot_model_LUPO', 'hot_model_AERIO', 'hot_model_S6', 'hot_model_EX', 'hot_model_OUTLANDER', 'hot_model_XJS', 'hot_model_XV', 'hot_model_C30', 'hot_model_R2', 'hot_model_Transporter', 'hot_model_L400', 'hot_model_SPACE_GEAR', 'hot_model_REGIUSACE', 'hot_model_DELICA_D2', 'hot_model_VIGOR', 'hot_model_MX_5', 'hot_model_VERNA', 'hot_model_605', 'hot_model_VOXY', 'hot_model_100NX', 'hot_model_SC7', 'hot_model_RC', 'hot_model_VERSO', 'hot_model_OLYMPIA', 'hot_model_IST', 'hot_model_COROLLA_VERSO', 'hot_model_Z3', 'hot_model_C_KLASSE', 'hot_model_GLC Coupe', 'hot_model_FR_V', 'hot_model_ALLEX', 'hot_model_PRELUDE', 'hot_model_LASER', 'hot_model_PRIDE', 'hot_model_928', 'hot_model_BRZ', 'hot_model_CARNIVAL', 'hot_model_Legend', 'hot_model_508', 'hot_model_CONCORDE', 'hot_model_Eos', 'hot_model_XFR', 'hot_model_MALIBU', 'hot_model_AUTOZAM_AZ3', 'hot_model_RACTIS', 'hot_model_Fabia', 'hot_model_FOCUS_NA', 'hot_model_KIX', 'hot_model_TIGGO_5', 'hot_model_QQ', 'hot_model_C3_AIRCROSS', 'hot_model_HS', 'hot_model_AVANTE', 'hot_model_Camry', 'hot_model_440', 'hot_model_CHARGER', 'hot_model_MR2', 'hot_model_CHAIRMAN', 'hot_model_K3', 'hot_model_RVR', 'hot_model_CAMRY_SOLARA', 'hot_model_SERIES_III', 'hot_model_ECHO', 'hot_model_M_KLASSE_AMG', 'hot_model_CITY', 'hot_model_A1', 'hot_model_SANTAMO', 'hot_model_5', 'hot_model_DAYZ', 'hot_model_WAGON_R_PLUS', 'hot_model_RANGER', 'hot_model_EMGRAND_GT', 'hot_model_LANCER_CARGO', 'hot_model_FAVORIT', 'hot_model_ELGRAND', 'hot_model_3008', 'hot_model_Primera', 'hot_model_C_CROSSER', 'hot_model_KIZASHI', 'hot_model_C2', 'hot_model_924', 'hot_model_CL_KLASSE', 'hot_model_Corolla Verso', 'hot_model_SOARER', 'hot_model_VIANO', 'hot_model_STAVIC', 'hot_model_CRETA', 'hot_model_DION', 'hot_model_Murano', 'hot_model_DAKOTA', 'hot_model_RCZ', 'hot_model_JAZZ', 'hot_model_TOURNEO_CUSTOM', 'hot_model_PATRIOT', 'hot_model_350Z', 'hot_model_GRAND_CHEROKEE', 'hot_model_R1', 'hot_model_CAVALIER', 'hot_model_326', 'hot_model_EXPEDITION', 'hot_model_VECTRA_OPC', 'hot_model_Q60', 'hot_model_GLA_CLASS_AMG', 'hot_model_Vezel', 'hot_model_GLK-\u041a\u043b\u0430\u0441\u0441', 'hot_model_Superb', 'hot_model_LEGACY_LANCASTER', 'hot_model_Serena', 'hot_model_ESQUIRE', 'hot_model_SPADE', 'hot_model_Qashqai', 'hot_model_SLK_KLASSE', 'hot_model_Sprinter Trueno', 'hot_model_JOURNEY', 'hot_model_Terrano', 'hot_model_K900', 'hot_model_N_ONE', 'hot_model_Outlander', 'hot_model_IPSUM', 'hot_model_GRAND_HIACE', 'hot_model_PACIFICA', 'hot_model_G', 'hot_model_Hilux', 'hot_model_ARMADA', 'hot_model_IS', 'hot_model_QASHQAI', 'hot_model_CALIBRA', 'hot_color_\u043e\u0440\u0430\u043d\u0436\u0435\u0432\u044b\u0439', 'hot_model_Vito', 'hot_model_STELLA', 'hot_model_SVX', 'hot_model_AVALANCHE', 'hot_model_S2000', 'hot_model_FJ_CRUISER', 'hot_model_SEVILLE', 'hot_model_MONZA', 'hot_model_LEGEND', 'hot_model_LEAF', 'hot_model_BLUEBIRD', 'hot_model_VEL_SATIS', 'hot_model_ODYSSEY_NA', 'hot_model_M3', 'hot_model_MINICAB', 'hot_model_L200', 'hot_model_STS', 'hot_model_FUNCARGO', 'hot_model_TAURUS', 'hot_model_XJ', 'hot_model_NEW_YORKER', 'hot_model_M-\u041a\u043b\u0430\u0441\u0441', 'hot_model_ORTHIA', 'hot_model_WRX_STI', 'hot_model_DATSUN', 'hot_model_Q', 'hot_model_A2', 'hot_model_TUSCANI', 'hot_model_IGNIS', 'hot_model_300M', 'hot_model_LANTIS', 'hot_model_PILOT', 'hot_model_ATS', 'hot_model_MARK_X_ZIO', 'hot_model_BLADE', 'hot_model_DISCOVERY', 'hot_model_CR_X', 'hot_model_Juke', 'hot_model_VITA', 'hot_model_RAV4', 'hot_model_RS5', 'hot_model_300ZX', 'hot_model_DART', 'hot_model_VENZA', 'hot_model_JOICE', 'hot_model_ECONOLINE', 'hot_model_ESPACE', 'hot_model_LE_BARON', 'hot_model_Corolla', 'hot_model_CT', 'hot_model_FUSION_NA', 'hot_model_MAGNUS', 'hot_model_TWINGO', 'hot_model_Rapid', 'hot_model_ECOSPORT', 'hot_model_Jetta', 'hot_model_LATITUDE', 'hot_model_JX', 'hot_model_CROSSROAD', 'hot_model_TRAVIQ', 'hot_model_XF', 'hot_model_4008', 'hot_model_AVENSIS_VERSO', 'hot_model_CELSIOR', 'hot_model_Pajero', 'hot_model_Z', 'hot_color_\u0441\u0435\u0440\u044b\u0439', 'hot_model_WILL_CYPHA', 'hot_model_SQ5', 'hot_model_CROSS_EASTAR', 'hot_model_XJR', 'hot_model_CLK-\u041a\u043b\u0430\u0441\u0441', 'hot_model_LIBERO', 'hot_model_IQ', 'hot_model_RAIDER', 'hot_model_ZX', 'hot_model_306', 'hot_model_Passat CC', 'hot_model_WINDSTORM', 'hot_model_SELTOS', 'hot_model_V60', 'hot_model_RS 5', 'hot_model_KAPTUR', 'hot_model_COUGAR', 'hot_model_XK', 'hot_model_SABER', 'hot_model_PROGRES', 'hot_model_VEROSSA', 'hot_model_OCTAVIA_RS', 'hot_model_PORTE', 'hot_model_S3', 'hot_model_Yeti', 'hot_model_A5', 'hot_model_TYPE_2', 'hot_model_CRUZE_HR', 'hot_model_SIENNA', 'hot_model_FLEETWOOD', 'hot_model_2GRANDTOURER', 'hot_model_CADDY', 'hot_model_CTS_V', 'hot_model_EVANDA', 'hot_model_DOMINGO', 'hot_model_MURANO', 'hot_model_WAGON_R', 'hot_model_XANTIA', 'hot_model_EVERY', 'hot_model_ASCOT', 'hot_model_968', 'hot_model_I', 'hot_model_PROTEGE', 'hot_model_PROBOX', 'hot_model_COROLLA_RUMION', 'hot_model_2ACTIVETOURER', 'hot_model_W110', 'hot_model_GOLF_R', 'hot_model_VENTURE', 'hot_model_ELYSION', 'hot_model_SAFARI', 'hot_model_2 \u0441\u0435\u0440\u0438\u0438 Gran Tourer', 'hot_model_CLC_KLASSE', 'hot_model_QX30', 'hot_model_Bluebird', 'hot_model_CR_Z', 'hot_model_PEGASUS', 'hot_model_BRONCO', 'hot_model_ASPIRE', 'hot_model_CAYMAN', 'hot_model_OPTIMA', 'hot_model_AVENIR', 'hot_model_W189', 'hot_model_VELOSTER', 'hot_model_RAY', 'hot_model_B_SERIES', 'hot_model_TRAJET', 'hot_model_CLA', 'hot_model_203', 'hot_model_AVANTIME', 'hot_model_6_MPS', 'hot_model_EXCURSION', 'hot_model_RAUM', 'hot_model_MONTE_CARLO', 'hot_model_S_MX', 'hot_model_ADMIRAL', 'hot_model_PICNIC', 'hot_model_JUSTY', 'hot_model_CONTOUR', 'hot_model_DOMANI', 'hot_model_SPLASH', 'hot_model_VIVA', 'hot_model_DIAMANTE', 'hot_model_GLA', 'hot_model_KA', 'hot_model_LARGO', 'hot_model_GOLF_GTI', 'hot_model_SPRINTER_MARINO', 'hot_model_SLC_KLASSE_AMG', 'hot_model_LAUREL', 'hot_model_EFINI_MS_8', 'hot_model_CONCERTO', 'hot_model_405', 'hot_model_CLIPPER_RIO', 'hot_model_PLATZ', 'hot_model_ALTIMA', 'hot_model_CROSSFIRE', 'hot_model_Jeep J', 'hot_model_CR-V', 'hot_model_KORANDO', 'hot_model_EUROVAN', 'hot_model_RS4', 'hot_model_TERCEL', 'hot_model_GRANVIA', 'hot_color_\u0441\u0438\u043d\u0438\u0439', 'hot_model_ZEST', 'hot_model_205', 'hot_model_KOLEOS', 'hot_rarity_Class A (Ancestor)', 'hot_model_Q50', 'hot_model_LIFE', 'hot_model_E3', 'hot_model_ZEPHYR', 'hot_model_200', 'hot_model_HIGHLANDER', 'hot_model_Prius', 'hot_model_ISIS', 'hot_model_XCEED', 'hot_model_AD', 'hot_model_SPRINTER_TRUENO', 'hot_model_LUMINA_APV', 'hot_model_MEGA_CRUISER', 'hot_model_Pajero iO', 'hot_model_CIVIC_FERIO', 'hot_model_SAFRANE', 'hot_model_LM', 'hot_model_COROLLA_LEVIN', 'hot_model_MODUS', 'hot_model_DAYZ_ROOX', 'hot_model_C4_AIRCROSS', 'hot_model_GOLF_R32', 'hot_model_VAN', 'hot_model_GLC', 'hot_model_Avensis', 'hot_model_V70', 'hot_model_WILL', 'hot_model_VANGUARD', 'hot_model_GT', 'hot_model_ASTRA_OPC', 'hot_model_1 \u0441\u0435\u0440\u0438\u0438', 'hot_model_GENESIS', 'hot_model_SARATOGA', 'hot_model_SCEPTER_SEDAN', 'hot_model_Z4', 'hot_model_ENDEAVOR', 'hot_model_EXPERT', 'hot_model_TITAN', 'hot_model_FOCUS_ST', 'hot_model_340', 'hot_model_PACEMAN', 'hot_model_SPACE_RUNNER', 'hot_model_2008', 'hot_model_FESTIVA', 'hot_model_H_1_STAREX', 'hot_model_CYNOS', 'hot_model_Polo', 'hot_model_EOS', 'hot_model_Z1', 'hot_model_CHEROKEE', 'hot_model_Stepwgn', 'hot_model_MASTER_ACE_SURF', 'hot_model_MINICA', 'hot_model_NV200', 'hot_model_VERY', 'hot_model_CLIPPER', 'hot_model_CULTUS', 'hot_model_C8', 'hot_model_PULSAR', 'hot_model_CURREN', 'hot_model_MONDEO_ST', 'hot_model_GRANADA', 'hot_model_CTS', 'hot_model_TT_RS', 'hot_model_ZAFIRA_OPC', 'hot_model_GLK_KLASSE', 'hot_model_2 \u0441\u0435\u0440\u0438\u0438', 'hot_model_DELICA_D_5', 'hot_model_HOVERH6', 'hot_model_VENTO', 'hot_model_SRX', 'hot_model_S60_CROSS_COUNTRY', 'hot_model_GLC Coupe AMG', 'hot_model_POLO_GTI', 'hot_model_TIBURON', 'hot_model_120', 'hot_model_BEL_AIR', 'hot_model_TRAFIC', 'hot_model_TIGGO_3', 'hot_model_LIBERTY', 'hot_model_W186', 'hot_model_PREVIA', 'hot_model_LTD_CROWN_VICTORIA', 'hot_model_TT', 'hot_model_3MPS', 'hot_model_GRAND_STAREX', 'hot_model_C_HR', 'hot_model_208', 'hot_model_COROLLA_SPACIO', 'hot_model_Octavia', 'hot_model_CARAVAN_COACH', 'hot_model_PHAETON', 'hot_model_321', 'hot_model_GRACE', 'hot_model_REKORD', 'hot_model_XM', 'hot_model_240_SERIES', 'hot_model_KADETT', 'hot_model_R_KLASSE', 'hot_model_GENESIS_COUPE', 'hot_color_\u0440\u043e\u0437\u043e\u0432\u044b\u0439', 'hot_model_EXPLORER', 'hot_model_SAILOR', 'hot_model_TYPE_1', 'hot_model_COUPE', 'hot_model_BONGO_FRIENDEE', 'hot_model_SHUTTLE', 'hot_model_WRX', 'hot_model_VITO', 'hot_model_DELICA', 'hot_model_AVENGER', 'hot_model_VEZEL', 'hot_model_ARRIZO7', 'hot_model_COMBO', 'hot_model_ESTIMA', 'hot_model_PRIUS_ALPHA', 'hot_model_BLS', 'hot_model_RX_8', 'hot_model_SUPRA', 'hot_model_MOHAVES', 'hot_model_CORTINA', 'hot_model_INSIGNIA_OPC', 'hot_model_FOX', 'hot_model_XKR', 'hot_model_SERA', 'hot_model_VIVARO', 'hot_model_MILLENIA', 'hot_model_UX', 'hot_model_Q70', 'hot_model_FOCUS_RS', 'hot_model_Viano', 'hot_model_EK_WAGON', 'hot_model_IMPALA', 'hot_model_LS', 'hot_model_EL_CAMINO', 'hot_model_CABRIO', 'hot_model_Colt', 'hot_model_SIGMA', 'hot_model_CMATIZ', 'hot_model_BLUEBIRD_SYLPHY', 'hot_model_SINTRA', 'hot_model_THUNDERBIRD', 'hot_model_V50', 'hot_model_HHR', 'hot_model_INSIGHT', 'hot_model_L300', 'hot_model_LAVITA', 'hot_model_JIMNY', 'hot_model_SUPER_SIX', 'hot_model_XE', 'hot_model_ELDORADO', 'hot_model_WINDSTAR', 'hot_model_OPA', 'hot_model_ISis', 'hot_model_PROCEED', 'hot_model_BONGO', 'hot_model_2', 'hot_model_EMERAUDE', 'hot_model_EDGE', 'hot_model_SPRINTER_CARIB', 'hot_model_A4_ALLROAD', 'hot_model_Fortuner', 'hot_model_RNESSA', 'hot_model_ALTEZZA', 'hot_model_Grandis', 'hot_model_X-Trail', 'hot_model_Sprinter Carib', 'hot_model_MIRAGE', 'hot_model_EQUUS', 'hot_model_ESTEEM', 'hot_model_Almera', 'hot_model_M1', 'hot_model_AEROSTAR', 'hot_model_GL-\u041a\u043b\u0430\u0441\u0441 AMG', 'hot_model_TORNEO', 'hot_model_VANEO', 'hot_model_IX55', 'hot_model_MONTEREY', 'hot_model_CL-\u041a\u043b\u0430\u0441\u0441', 'hot_model_Insight', 'hot_model_PREGIO', 'hot_model_ALTO', 'hot_model_KEI', 'hot_model_DEFENDER', 'hot_model_GT86', 'hot_model_CX_9']\n## \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0438\u0437 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0437\u043d\u0430\u0447\u0438\u043c\u043e\u0441\u0442\u044c\n#data.drop(cat_cols_remove, axis=1, inplace=True)","0e7aaa75":"#\u041e\u0446\u0435\u043d\u0438\u043c \u0437\u043d\u0430\u0447\u0438\u043c\u043e\u0441\u0442\u044c \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\nfig, ax = plt.subplots(figsize=(6, 3))\nanova_df = data[data['train'] == 1].dropna().copy()\nimp_num = pd.Series(f_regression(anova_df[list(set(data.columns) & set(num_cols))], anova_df['price_log'])[\n                    0], index=list(set(data.columns) & set(num_cols)))\nimp_num.sort_values(inplace=True)\nimp_num.plot(\n    kind='barh', title='\u0417\u043d\u0430\u0447\u0438\u043c\u043e\u0441\u0442\u044c \u043d\u0435\u043f\u0440\u0435\u0440\u044b\u0432\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u043f\u043e ANOVA F test \u043f\u043e \u0432\u0441\u0435\u043c \u043c\u0430\u0440\u043a\u0430\u043c')\nplt.show()","cf2d539c":"# \u041e\u0446\u0435\u043d\u0438\u043c \u0437\u043d\u0430\u0447\u0438\u043c\u043e\u0441\u0442\u044c \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u0438 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\nfig, ax = plt.subplots(figsize=(15, 7))\n\nanova_df = data[data['train'] == 1].dropna().copy()\n\n# Labels encoding\ncols_to_encode = list(set(anova_df.columns) & set(cat_cols))\nfor colum in cols_to_encode:\n    anova_df[colum] = anova_df[colum].astype('category').cat.codes\n\nimp_cat = pd.Series(mutual_info_regression(\n    anova_df[list(set(data.columns) & set(bin_cols+cat_cols))], anova_df['price'], discrete_features=True), index=list(set(data.columns) & set(bin_cols+cat_cols)))\nimp_cat.sort_values(inplace=True)\nimp_cat.plot(kind='barh', title='\u0417\u043d\u0430\u0447\u0438\u043c\u043e\u0441\u0442\u044c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445')\nplt.show()","2d5e0f6c":"## \u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0430\u0446\u0438\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445\n#cols_to_scale = list(set(data.columns) & set(num_cols))\n#data[cols_to_scale] = StandardScaler().fit_transform(data[cols_to_scale].values)","e9cf0b8a":"X = data.query('train == 1').drop(\n    ['train', 'price', 'price_log', 'price_usd', 'RUB_USD_rate'], axis=1)\nX_sub = data.query('train == 0').drop(\n    ['train', 'price', 'price_log', 'price_usd', 'RUB_USD_rate'], axis=1)","9fae9fa7":"# \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 y \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043e\u0431\u044b\u0447\u043d\u0443\u044e \u0446\u0435\u043d\u0443\ny = data[data.train == 1]['price']","f4f40b2e":"## \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 y \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0446\u0435\u043d\u0443 \u0432 USD\n#y = data[data.train == 1]['price_usd']","0dbf3ec1":"X_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=VAL_SIZE, shuffle=True, random_state=RANDOM_SEED)","07210721":"tmp_train = X_train.copy()\ntmp_train['price'] = y_train","ddbb9aa2":"# \u041d\u0430\u0445\u043e\u0434\u0438\u043c median \u043f\u043e \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430\u043c mileage \u0432 \u0442\u0440\u0435\u0439\u043d\u0435 \u0438 \u0440\u0430\u0437\u043c\u0435\u0447\u0430\u0435\u043c \u0442\u0435\u0441\u0442\npredict = X_test['mileage'].map(\n    tmp_train.groupby('mileage')['price'].median())\n\n# \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0435\u043c \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\nprint(\n    f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043d\u0430\u0438\u0432\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: {(mape(y_test, predict.values))*100:0.2f}%\")","37b1cc8d":"model = CatBoostRegressor(iterations = 5000,\n                          random_seed = RANDOM_SEED,\n                          eval_metric='MAPE',\n                          custom_metric=['R2', 'MAE'],\n                          silent=True,\n                         )\nmodel.fit(X_train, y_train,\n         #cat_features=cat_features_ids,\n         eval_set=(X_test, y_test),\n         verbose_eval=0,\n         use_best_model=True,\n         #plot=True\n         )\n\nmodel.save_model('catboost_single_model_baseline.model')","11ca56d5":"# \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0435\u043c \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\npredict = model.predict(X_test)\nprint(f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: {(mape(y_test, predict))*100:0.2f}%\")","57211204":"np.log(y_train)","1546be00":"model = CatBoostRegressor(iterations=5000,\n                          random_seed=RANDOM_SEED,\n                          eval_metric='MAPE',\n                          custom_metric=['R2', 'MAE'],\n                          silent=True,\n                          )\nmodel.fit(X_train, np.log(y_train),\n          # cat_features=cat_features_ids,\n          eval_set=(X_test, np.log(y_test)),\n          verbose_eval=0,\n          use_best_model=True,\n          # plot=True\n          )\n\nmodel.save_model('catboost_single_model_2_baseline.model')","18afb7d8":"predict_test = np.exp(model.predict(X_test))\npredict_submission = np.exp(model.predict(X_sub))","49e632d6":"print(\n    f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: {(mape(y_test, predict_test))*100:0.2f}%\")","0efaf4d1":"#mae = mean_absolute_error\n#regr=LazyRegressor(verbose=0,predictions=True, custom_metric=mae)\n## fit and train the model\n#start_time_2=time.time()\n#models, predictions=regr.fit(X_train, X_test, np.log(y_train), np.log(y_test))\n#end_time_2=time.time()","c044db58":"#models","9c8a700a":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0430 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445\n# # \u0431\u0435\u0437 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439\n# rf = RandomForestRegressor(random_state = RANDOM_SEED)\n# rf.fit(X_train, y_train)\n# rf_pred = rf.predict(X_test)\n\n# print(\n#     f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0431\u0435\u0437 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u0430: {(mape(y_test, rf_pred))*100:0.2f}%\")\n\n# # \u0441 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439\n# rf_log = RandomForestRegressor(random_state = RANDOM_SEED)\n# rf_log.fit(X_train, np.log(y_train))\n# rf_log_pred = np.exp(rf_log.predict(X_test))\n\n# print(\n#     f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: {(mape(y_test, rf_log_pred))*100:0.2f}%\")\n\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: 12.89%\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 kaggle MAPE 12,12418%","806c5ba8":"# # \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u043f\u043e\u0434\u043e\u0431\u0440\u0430\u0442\u044c \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u043d\u0430\u0448\u0435\u0439 \u043c\u043e\u0434\u0435\u043b\u0438\n\n# random_grid = {'n_estimators': [int(x) for x in np.linspace(start=100, stop=400, num=4)],\n#                'max_features': ['auto', 'sqrt', 'log2'],\n#                'max_depth': [int(x) for x in np.linspace(5, 15, num=6)] + [None],\n#                'min_samples_split': [2, 5, 10],\n#                'min_samples_leaf': [1, 2, 4],\n#                'bootstrap': [True, False]}\n\n# rfr = RandomForestRegressor(random_state=RANDOM_SEED)\n# rf_random = RandomizedSearchCV(estimator=rfr, param_distributions=random_grid,\n#                                n_iter=100, cv=3, verbose=10, random_state=RANDOM_SEED, n_jobs=-1)\n\n# rf_random.fit(X_train, np.log(y_train))\n# rf_random.best_params_\n\n# # \u041b\u0443\u0447\u0448\u0438\u043c\u0438 \u043e\u043a\u0430\u0437\u0430\u043b\u0438\u0441\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b:\n#  best_params_\n#  {'bootstrap': True,\n#   'max_depth': None,\n#   'max_features': 'auto',\n#   'min_samples_leaf': 1,\n#   'min_samples_split': 2,\n#   'n_estimators': 300}\n#  rf_random.best_estimator_ = RandomForestRegressor(n_estimators=300, random_state=42)","46528d0c":"# # \u041e\u0431\u0443\u0447\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0430 \u043b\u0443\u0447\u0448\u0438\u0445 \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445\n\n# #best_rfr = rf_random.best_estimator_\n# best_rfr = RandomForestRegressor(random_state=RANDOM_SEED\n#                       , n_estimators=300\n#                       , min_samples_split=2\n#                       , min_samples_leaf=1\n#                       , max_features='auto'\n#                       , max_depth=None\n#                       , bootstrap=True)\n\n# # best_rfr.fit(X_train, y_train)\n# best_rfr.fit(X_train, np.log(y_train))\n\n# # predict_rfr = best_rfr.predict(X_test)\n# predict_rfr = np.exp(best_rfr.predict(X_test))\n# print(\n#     f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: {(mape(y_test, predict_rfr))*100:0.2f}%\")\n\n# # \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: 12.84%\n# # \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 kaggle MAPE 12.05232%","e38fe127":"# # \u0432 RandomForestRegressor \u0435\u0441\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0441\u0430\u043c\u044b\u0435 \u0432\u0430\u0436\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438\n# plt.rcParams['figure.figsize'] = (10,4)\n# feat_importances = pd.Series(best_rfr.feature_importances_, index=X.columns)\n# feat_importances.nlargest(15).plot(kind='barh');","488b7dde":"# # \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u043d\u044f\u0442\u044c learning_rate (0.05, 0.03, 0.01), max_depth (3,5,8,12,24,36)\n\n# # \u0431\u0435\u0437 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439\n# xgb_reg = xgb.XGBRegressor(objective='reg:squarederror', colsample_bytree=0.5,\n#                           learning_rate=0.05, max_depth=12, alpha=1,\n#                           n_estimators=1000)\n# xgb_reg.fit(X_train, y_train)\n# print(\n#     f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0431\u0435\u0437 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u0430: {(mape(y_test, xgb_reg.predict(X_test)))*100:0.2f}%\")\n\n# \u0441 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439\n# xgb_reg = xgb.XGBRegressor(objective='reg:squarederror', colsample_bytree=0.5,\n#                           learning_rate=0.05, max_depth=12, alpha=1,\n#                           n_estimators=1000)\n# xgb_reg.fit(X_train, np.log(y_train))\n# print(\n#     f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: {(mape(y_test, np.exp(xgb_reg.predict(X_test))))*100:0.2f}%\")\n\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: 12.96%\n# # \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 kaggle MAPE 12.33125%","abf97ea5":"# \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0441 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u043e\u043c \u0442\u0430\u0440\u0433\u0435\u0442\u0430 \u0440\u0430\u0437\u043d\u0443\u044e \u0433\u043b\u0443\u0431\u0438\u043d\u0443\n\n# def xgb_reg_learn(depth):\n#     xgb_list = []\n#     for i in depth:\n#         xgb_reg = xgb.XGBRegressor(objective='reg:squarederror', colsample_bytree=0.5,\n#                                         learning_rate=0.05, max_depth=i, alpha=1,\n#                                         n_estimators=1000)\n#         xgb_reg.fit(X_train, np.log(y_train))\n#         xgb_list.append(xgb_reg)\n#         print(\n#             f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c \u0438 max_depth={i}: {(mape(y_test, np.exp(xgb_reg.predict(X_test))))*100:0.2f}%\")\n#     return xgb_list\n\n# depth = [3,5,8,12,24,36]\n# xgb_list = xgb_reg_learn(depth)\n\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c \u0438 max_depth=3: 15.41%\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c \u0438 max_depth=5: 13.31%\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c \u0438 max_depth=8: 12.28%\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c \u0438 max_depth=12: 12.22%\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c \u0438 max_depth=24: 12.31%\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c \u0438 max_depth=36: 12.31%\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 kaggle MAPE 11.3500%","3235a876":"# \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043b\u0443\u0447\u0448\u0435\u0439 \u043c\u043e\u0434\u0435\u043b\u0438\n# best_xgb = xgb_list[3]\n# best_xgb\n\n# XGBRegressor(alpha=1, base_score=0.5, booster='gbtree', colsample_bylevel=1,\n#              colsample_bynode=1, colsample_bytree=0.5, gamma=0, gpu_id=-1,\n#              importance_type='gain', interaction_constraints='',\n#              learning_rate=0.05, max_delta_step=0, max_depth=12,\n#              min_child_weight=1, missing=nan, monotone_constraints='()',\n#              n_estimators=1000, n_jobs=0, num_parallel_tree=1, random_state=0,\n#              reg_alpha=1, reg_lambda=1, scale_pos_weight=1, subsample=1,\n#              tree_method='exact', validate_parameters=1, verbosity=None)","68f7561e":"# feature_important = best_xgb.get_booster().get_score(importance_type='weight')\n# keys = list(feature_important.keys())\n# values = list(feature_important.values())\n\n# data = pd.DataFrame(data=values, index=keys, columns=[\"score\"]).sort_values(by = \"score\", ascending=False)\n# data.plot(kind='barh');","c4f62794":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0430 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445\n\n# # \u0431\u0435\u0437 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439\n# etr = ExtraTreesRegressor(random_state = RANDOM_SEED)\n# etr.fit(X_train, y_train)\n# etr_pred = etr.predict(X_test)\n\n# print(\n#     f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0431\u0435\u0437 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u0430: {(mape(y_test, etr_pred))*100:0.2f}%\")\n\n# # \u0441 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439\n# etr = ExtraTreesRegressor(random_state = RANDOM_SEED)\n# etr.fit(X_train, np.log(y_train))\n# etr_pred = np.exp(etr.predict(X_test))\n\n# print(\n#     f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: {(mape(y_test, etr_pred))*100:0.2f}%\")\n\n# # \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: 13.10%\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 kaggle MAPE 10.95491%","3ce4583a":"# # \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u043f\u043e\u0434\u043e\u0431\u0440\u0430\u0442\u044c \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u043d\u0430\u0448\u0435\u0439 \u043c\u043e\u0434\u0435\u043b\u0438\n\n# random_grid = {'n_estimators': [int(x) for x in np.linspace(start = 100, stop = 400, num = 4)],\n#                'max_features': ['auto', 'sqrt','log2'],\n#                'max_depth': [int(x) for x in np.linspace(5, 15, num = 6)] + [None],\n#                'min_samples_split': [2, 5, 10],\n#                'min_samples_leaf': [1, 2, 4],\n#                'bootstrap': [True, False]}\n\n# etr = ExtraTreesRegressor(random_state = RANDOM_SEED)\n# etr_random = RandomizedSearchCV(estimator = etr, param_distributions = random_grid, n_iter = 100, cv = 3, verbose=10, random_state=RANDOM_SEED, n_jobs = -1)\n# # rf_random.fit(X_train, y_train)\n# etr_random.fit(X_train, np.log(y_train))\n# etr_random.best_params_\n\n# \u041b\u0443\u0447\u0448\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u043d\u0430\u0448\u0435\u0439 \u043c\u043e\u0434\u0435\u043b\u0438\n#  best_params_\n# {'n_estimators': 300,\n#  'min_samples_split': 2,\n#  'min_samples_leaf': 1,\n#  'max_features': 'auto',\n#  'max_depth': None,\n#  'bootstrap': True}","80df69a0":"# # \u041e\u0431\u0443\u0447\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0430 \u043b\u0443\u0447\u0448\u0438\u0445 \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445\n\n# best_etr = ExtraTreesRegressor(random_state=RANDOM_SEED,\n#                                n_estimators=300,\n#                                min_samples_split=2,\n#                                min_samples_leaf=1,\n#                                max_features='auto',\n#                                max_depth=None,\n# best_etr.fit(X_train, np.log(y_train))\n\n# predict_etr = np.exp(best_etr.predict(X_test))\n# predict_submission = np.exp(best_etr.predict(X_sub))\n\n# print(\n#     f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: {(mape(y_test, predict_etr))*100:0.2f}%\")\n\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: 12.89%\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 kaggle MAPE 12.09228%","542692dd":"# plt.rcParams['figure.figsize'] = (10,4)\n# feat_importances = pd.Series(best_etr.feature_importances_, index=X.columns)\n# feat_importances.nlargest(15).plot(kind='barh');","f59975f0":"# best_rfr\n# RandomForestRegressor(n_estimators=300, random_state=42)","27f47df0":"# \u041e\u0431\u0443\u0447\u0438\u043c \u043d\u0430 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445\n\n# bagg_rfr_d = BaggingRegressor(best_rfr, n_jobs=1, random_state=RANDOM_SEED)\n# bagg_rfr_d.fit(X_train, np.log(y_train))\n# predict_bagg_rfr_d = np.exp(bagg_rfr_d.predict(X_test))\n# print(\n#     f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: {(mape(y_test, predict_bagg_rfr_d))*100:0.2f}%\")\n\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: 13.00%\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 kaggle MAPE 13.12%","cd39cf57":"# \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c n_estimators=3\n\n# bagg_rfr = BaggingRegressor(best_rfr, n_estimators=3, n_jobs=1, random_state=RANDOM_SEED)\n# bagg_rfr.fit(X_train, np.log(y_train))\n# predict_bagg_rfr = np.exp(bagg_rfr.predict(X_test))\n# print(\n#     f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: {(mape(y_test, predict_bagg_rfr))*100:0.2f}%\")\n\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: 13.19%\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 kaggle MAPE 13.31105%","e07362dc":"# best_xgb\n\n# XGBRegressor(alpha=1, base_score=0.5, booster='gbtree', colsample_bylevel=1,\n#              colsample_bynode=1, colsample_bytree=0.5, gamma=0, gpu_id=-1,\n#              importance_type='gain', interaction_constraints='',\n#              learning_rate=0.05, max_delta_step=0, max_depth=12,\n#              min_child_weight=1, missing=nan, monotone_constraints='()',\n#              n_estimators=1000, n_jobs=0, num_parallel_tree=1, random_state=0,\n#              reg_alpha=1, reg_lambda=1, scale_pos_weight=1, subsample=1,\n#              tree_method='exact', validate_parameters=1, verbosity=None)","7334bbfa":"# \u041e\u0431\u0443\u0447\u0438\u043c \u043d\u0430 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445\n\n# bagg_xgb = BaggingRegressor(best_xgb, n_jobs=1, random_state=RANDOM_SEED)\n# bagg_xgb.fit(X_train, np.log(y_train))\n# predict_bagg_xgb = np.exp(bagg_xgb.predict(X_test))\n# print(\n#     f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: {(mape(y_test, predict_bagg_xgb))*100:0.2f}%\")\n\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: 12.18%\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 kaggle MAPE 13.31105%","5cdc108a":"# \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c n_estimators=3\n\n# bagg_xgb = BaggingRegressor(best_xgb, n_estimators=3, n_jobs=1, random_state=RANDOM_SEED)\n# bagg_xgb.fit(X_train, y_train)\n# predict_bagg_xgb = np.exp(bagg_xgb.predict(X_test))\n# print(\n#     f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: {(mape(y_test, predict_bagg_xgb))*100:0.2f}%\")\n\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: 12.29%\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 kaggle MAPE 12.07452%","80ea6cc9":"# etr\n# ExtraTreesRegressor(random_state=42)","ef5c25f1":"# \u041e\u0431\u0443\u0447\u0438\u043c \u043d\u0430 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445\n\n# bagg_etr = BaggingRegressor(etr, n_jobs=1, random_state=RANDOM_SEED)\n# bagg_etr.fit(X_train, np.log(y_train))\n# predict_bagg_etr = np.exp(bagg_etr.predict(X_test))\n# print(\n#     f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: {(mape(y_test, predict_bagg_etr))*100:0.2f}%\")\n\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: 12.92%\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 kaggle MAPE 11.91719%","d9bf972a":"# \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c n_estimators=3\n\n# bagg_etr = BaggingRegressor(etr, n_jobs=1, n_estimators = 3, random_state=RANDOM_SEED)\n# bagg_etr.fit(X_train, np.log(y_train))\n# predict_bagg_etr = np.exp(bagg_etr.predict(X_test))\n# print(\n#     f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: {(mape(y_test, predict_bagg_etr))*100:0.2f}%\")\n\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: 13.12%\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 kaggle MAPE 12.41893%","fc73850a":"# \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0430 \u043b\u043e\u0433\u043e\u0440\u0438\u0444\u043c\u0435 \u0446\u0435\u043d\u044b\n\n# hgbr = HistGradientBoostingRegressor(random_state=RANDOM_SEED)\n\n# hgbr.fit(X_train, np.log(y_train))\n\n# hgbr_pred = np.exp(hgbr.predict(X_test))\n# predict_submission = np.exp(hgbr.predict(X_sub))\n\n# print(\n#     f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: {(mape(y_test, hgbr_pred))*100:0.2f}%\")\n\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: 15.28%\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 kaggle MAPE: 16.10811%","cabe5d49":"# \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c RandomizedSearchCV \u0434\u043b\u044f HistGradientBoostingRegressor.\n\n# random_grid = {'max_iter': [1000, 1200, 1500],\n#                'learning_rate': [0.1],\n#                'max_depth': [25, 50, 75],\n#                'l2_regularization': [1.5]}\n\n# hgbr = HistGradientBoostingRegressor(random_state=RANDOM_SEED)\n# hgbr_random = RandomizedSearchCV(estimator=hgbr,\n#                                  param_distributions=random_grid,\n#                                  n_iter=100, cv=3,\n#                                  verbose=10,\n#                                  random_state=RANDOM_SEED,\n#                                  n_jobs=-1)\n\n# hgbr_random.fit(X_train, np.log(y_train))\n\n# \u041b\u0443\u0447\u0448\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b:\n# hgbr_random.best_params_\n# {'max_iter': 1000,\n# 'max_depth': 25,\n# 'learning_rate': 0.1,\n# 'l2_regularization': 1.5}","49852070":"# \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c HistGradientBoostingRegressor \u043d\u0430 \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445\n\n# hgbr = HistGradientBoostingRegressor(random_state=RANDOM_SEED, max_iter =1000,\n#                                      max_depth=25,\n#                                      learning_rate=0.1,\n#                                      l2_regularization=1.5)\n\n# hgbr.fit(X_train, np.log(y_train))\n\n# hgbr_pred = np.exp(hgbr.predict(X_test))\n# predict_submission = np.exp(hgbr.predict(X_sub))\n\n# print(\n#     f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: {(mape(y_test, hgbr_pred))*100:0.2f}%\")\n\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: 13.16%\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 kaggle MAPE: 13.61184%","260d56e4":"# estimators = [('etr',ExtraTreesRegressor()),\n#               ('xgb_reg',xgb.XGBRegressor(objective='reg:squarederror', colsample_bytree=0.5, learning_rate=0.05, \\\n#                       max_depth=12, alpha=1, n_jobs=-1, n_estimators=1000))]\n\n# st_ensemble = StackingRegressor(estimators=estimators,final_estimator=LinearRegression())\n\n# # \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0435\u043c \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\n# st_ensemble.fit(X_train, np.log(y_train))\n# predict_e = np.exp(st_ensemble.predict(X_test))\n# print(f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: {(mape(y_test, predict_e))*100:0.2f}%\")\n\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: 12.10%\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 kaggle MAPE 10.98%","d3e630c1":"# estimators = [('etr',ExtraTreesRegressor()),\n#               ('xgb_reg',xgb.XGBRegressor(objective='reg:squarederror', colsample_bytree=0.5, learning_rate=0.05, \\\n#                       max_depth=12, alpha=1, n_jobs=-1, n_estimators=1000))]\n\n# st_ensemble = StackingRegressor(estimators=estimators,final_estimator=CatBoostRegressor())\n\n# # \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0435\u043c \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\n# st_ensemble.fit(X_train, np.log(y_train))\n# predict_e = np.exp(st_ensemble.predict(X_test))\n# print(f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: {(mape(y_test, predict_e))*100:0.2f}%\")\n\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: 12.28%\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 kaggle MAPE 11.14844%","96d2ebf5":"# estimators = [('rfr', RandomForestRegressor(random_state=RANDOM_SEED\n#                       , n_estimators=300\n#                       , min_samples_split=2\n#                       , min_samples_leaf=1\n#                       , max_features='auto'\n#                       , max_depth=None\n#                       , bootstrap=True)),\n#               ('etr', ExtraTreesRegressor(random_state = RANDOM_SEED))]\n\n# st_ensemble_1 = StackingRegressor(estimators=estimators, final_estimator=LinearRegression())\n\n# # \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0435\u043c \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\n# st_ensemble_1.fit(X_train, np.log(y_train))\n# predict_ensemble_1 = np.exp(st_ensemble_1.predict(X_test))\n# print(f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: {(mape(y_test, predict_ensemble_1))*100:0.2f}%\")\n\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: 12.64%\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 kaggle MAPE 11.19165%","e6931a36":"# estimators = [('bagr', BaggingRegressor(xgb.XGBRegressor(objective='reg:squarederror', colsample_bytree=0.5,\n#                           learning_rate=0.05, max_depth=12, alpha=1,\n#                           n_estimators=1000), n_estimators=3, n_jobs=1, random_state=RANDOM_SEED)),\n#               ('etr', ExtraTreesRegressor(random_state = RANDOM_SEED))]\n\n# st_ensemble_1 = StackingRegressor(estimators=estimators, final_estimator=LinearRegression())\n\n# # \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0435\u043c \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\n# st_ensemble_1.fit(X_train, np.log(y_train))\n# predict_ensemble_1 = np.exp(st_ensemble_1.predict(X_test))\n# print(f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: {(mape(y_test, predict_ensemble_1))*100:0.2f}%\")\n\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: 12.16%\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 kaggle MAPE 11.44763%","a62327f5":"# estimators = [('bagr', BaggingRegressor(ExtraTreesRegressor(random_state = RANDOM_SEED), n_jobs=1, random_state=RANDOM_SEED)),\n#               ('etr', ExtraTreesRegressor(random_state = RANDOM_SEED))]\n\n# st_ensemble_1 = StackingRegressor(estimators=estimators, final_estimator=LinearRegression())\n\n# # \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0435\u043c \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c\n# st_ensemble_1.fit(X_train, np.log(y_train))\n# predict_ensemble_1 = np.exp(st_ensemble_1.predict(X_test))\n# print(f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: {(mape(y_test, predict_ensemble_1))*100:0.2f}%\")\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE: 12.93%\n# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 kaggle MAPE %","b365c32a":"# \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0430 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445\n# \u0441 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439\netr = ExtraTreesRegressor(random_state = RANDOM_SEED)\netr.fit(X_train, np.log(y_train))\netr_pred = np.exp(etr.predict(X_test))\n\nprint(\n    f\"\u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 MAPE \u0441 \u043b\u043e\u0433\u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c: {(mape(y_test, etr_pred))*100:0.2f}%\")","55244172":"# \u0414\u043b\u044f \u0444\u0438\u043d\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0441\u0430\u0431\u043c\u0438\u0448\u0435\u043d\u0430 \u0432\u044b\u0431\u0440\u0430\u043d np.exp(etr.predict(X_sub))\npredict_submission = np.exp(etr.predict(X_sub))\n\nsample_submission['price'] = np.round(np.array(predict_submission)\/1000,2)*1000\nsample_submission.to_csv(f'submission_2_v{VERSION}.csv', index=False)\nsample_submission.head(10)","0707613e":"### 13.1 Xgboosting, ExtraTreesRegressor+LinearRegression","fe1c7c76":"\u0417\u0430\u0439\u043c\u0435\u043c\u0441\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u043e\u0439 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u043f\u043e \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u0439 \u0432\u044b\u0448\u0435 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438.","b66aa774":"\u041f\u0440\u043e\u0432\u0435\u0434\u0435\u043c \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445.","b9de2ef3":"**`newCar`**\n\n\u041f\u0440\u0438\u0437\u043d\u0430\u043a \u0434\u043b\u044f \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e. \u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043a\u0440\u0438\u0442\u0435\u0440\u0438 - \u043f\u0440\u043e\u0431\u0435\u0433, \u0440\u0430\u0432\u043d\u044b\u0439 0:\n- 1 - \u043d\u043e\u0432\u0430\u044f \u043c\u0430\u0448\u0438\u043d\u0430\n- 0 - \u043c\u0430\u0448\u0438\u043d\u0430 \u0441 \u043f\u0440\u043e\u0431\u0435\u0433\u043e\u043c.","dbc87942":"\u0412\u044b\u0432\u043e\u0434: \n- \u0412\u044b\u0431\u0440\u043e\u0441\u044b \u043f\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0443 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u043a\u0430\u043a \u0432 train, \u0442\u0430\u043a \u0438 \u0432 test \u0447\u0430\u0441\u0442\u0438. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u043f\u043e\u0440\u043e\u0433\u043e\u0432\u043e\u0435 (\u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435) \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432 test \u043d\u0438\u0436\u0435, \u0447\u0435\u043c \u0433\u0440\u0430\u043d\u0438\u0446\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432.\n- \u0426\u0435\u043d\u0430 \u0432\u0430\u0440\u044c\u0442\u0440\u0443\u0435\u0442\u0441\u044f \u0438 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0441 \u0443\u0432\u0435\u043b\u0438\u0447\u0435\u043d\u0438\u0435\u043c \u043e\u0431\u044a\u0435\u043c\u0430 \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f\n- \u041c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e.\n- \u0422\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u0437\u0430\u043c\u0435\u043d\u043e\u0439 \u0432 \u0441\u0442\u0440\u043e\u043a\u0430\u0445 > 6.6 \u043b\u0438\u0442\u0440\u043e\u0432 \u043d\u0430 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438\u0437 \u0442\u0435\u0441\u0442\u0430. \u0417\u0430\u043f\u0438\u0441\u0438 \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u043d\u0435 \u0445\u043e\u0447\u0435\u0442\u0441\u044f, \u0442.\u043a. \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0441\u0442\u0430\u0440\u044b\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438.\n\n\u0420\u0435\u0437\u044e\u043c\u0435: \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u0447\u0430\u0441\u0442\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432. Upd: \u043f\u043e\u0441\u043b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u0443\u044e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u0440\u0435\u0448\u0438\u043b\u0438 \u0437\u0430\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c, \u0442.\u043a. \u0443\u0445\u0443\u0434\u0448\u0430\u043b\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u043d\u0430 \u043b\u0438\u0434\u0435\u0440\u0431\u043e\u0440\u0434\u0435.","a002bda2":"**\u0413\u0438\u043f\u043e\u0442\u0435\u0437\u0430, \u0447\u0442\u043e NAN \u0441 \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u043e\u0439 - \u044d\u0442\u043e \u043e\u0434\u043d\u0430 \u0438 \u0442\u0430 \u0436\u0435 \u0437\u0430\u043f\u0438\u0441\u044c**","345e811a":"## 11.2. \u0441 XGBRegressor","0c132af9":"**`prodDate_3Y`, `prodDate_5Y`**\n\n- `prodDate_3Y` - \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u0447\u0442\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044e \u0443\u0436\u0435 3 \u0433\u043e\u0434\u0430\n- `prodDate_5Y` - \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u0447\u0442\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044e \u0443\u0436\u0435 5 \u043b\u0435\u0442.","ae6a90d2":"### \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u043a \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0443\n\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043b\u043e\u043d\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0435\u0441\u0442\u044c \u0432 test, \u043d\u043e \u043d\u0435\u0442 \u0432 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u043e\u043c train.","18d592c8":"\u0412\u044b\u0432\u043e\u0434\u044b:\n- \u043f\u0435\u0440\u0435\u0447\u0435\u043d\u044c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439 \u0446\u0432\u0435\u0442\u043e\u0432 \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u0435\u043d \u0432 train \u0438 test.\n- \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u043e\u0441\u0442\u0430\u0432\u0438\u043c, \u043a\u0430\u043a \u0435\u0441\u0442\u044c, \u0442.\u043a. \u0441\u0438\u043b\u044c\u043d\u043e \u0432\u043b\u0438\u044f\u0435\u0442 \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0446\u0435\u043d\n- [ ] \u0438\u0434\u0435\u044f \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 - \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0444\u043b\u0430\u0433 \"\u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043a\u0430\u0440\"\n- \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043f\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044e \u0442\u0438\u043f\u0430 \u0442\u043e\u043f\u043b\u0438\u0432\u0430-\u0431\u0440\u0435\u043d \u043c\u0435\u0436\u0434\u0443 \u0442\u0440\u0435\u0439\u043d \u0438 \u0442\u0435\u0441\u0442\u043e\u043c \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u043a\u0430\u043a\u0438\u0435-\u0442\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u0438\u0434\u0435\u0442\u0441\u044f \u0443\u0434\u0430\u043b\u0438\u0442\u044c","a0aa6673":"###### \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\n\n\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0431\u043e\u043b\u0435\u0435 \u043f\u0440\u0438\u0441\u0442\u0430\u043b\u044c\u043d\u043e \u043d\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0438\u043b\u0438 \u0438\u0437 \u0430\u043d\u0430\u043b\u0438\u0437\u0430.","a76938b7":"#### Train Split","a95df990":"##### \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0432 \u0447\u0438\u0441\u043b\u0430\n\u0427\u0442\u043e\u0431\u044b \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u044b \u043c\u0430\u0448\u0438\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u0433\u043b\u0438 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438, \u0438\u0445 \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u0432 \u0447\u0438\u0441\u043b\u0430. \u041f\u0440\u0438\u043c\u0435\u043d\u0438\u043c LabelEncoder \u043a\u043e \u0432\u0441\u0435\u043c\u0443 \u043d\u0430\u0431\u043e\u0440\u0443 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445.","f8c0f989":"# <a id=\"14\"><\/a> 14. MODEL SELECTION","67edded7":"\u0412\u044b\u0432\u043e\u0434: \n- \u0412\u044b\u0431\u0440\u043e\u0441\u044b \u043f\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0443 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u043a\u0430\u043a \u0432 train, \u0442\u0430\u043a \u0438 \u0432 test \u0447\u0430\u0441\u0442\u0438. \u0423\u0434\u0430\u043b\u044f\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438 \u043d\u0435\u043b\u044c\u0437\u044f, \u0442.\u043a. \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u043f\u043e \u0431\u043e\u043b\u044c\u0448\u0438\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c enginePower\n- \u0426\u0435\u043d\u0430 \u0432\u0430\u0440\u044c\u0442\u0440\u0443\u0435\u0442\u0441\u044f \u0438 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0441 \u0443\u0432\u0435\u043b\u0438\u0447\u0435\u043d\u0438\u0435\u043c \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u0438 \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f, \u0437\u0430\u043c\u0435\u043d\u044f\u0442\u044c \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043d\u0430 \u0434\u0440\u0443\u0433\u0443\u044e \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0443 \u043d\u0435 \u0441\u0442\u043e\u0438\u0442\n- \u041c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e.\n\n\u0420\u0435\u0437\u044e\u043c\u0435: \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c.","efcd2fc5":"### <a id=\"3.6\"><\/a> 3.6 \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432","a144868b":"##### `price_log`\n\n\u041b\u043e\u0433\u0430\u0440\u0438\u0444\u043c \u043e\u0442 \u0446\u0435\u043d\u044b.","538fd7ae":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430 auto.ru. \u0412\u0441\u0435 \u043a\u043e\u0440\u043e\u0431\u043a\u0438 \u0434\u0435\u043b\u044f\u0442\u0441\u044f \u043d\u0430 \u0430\u0432\u0442\u043e\u043c\u0430\u0442 \u0438 \u043c\u0435\u0445\u0430\u043d\u0438\u043a\u0443. \u0410\u0432\u0442\u043e\u043c\u0430\u0442 \u043f\u043e\u0434\u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b.\n![Screenshot%202021-08-27%20at%2015.10.31-2.png](attachment:Screenshot%202021-08-27%20at%2015.10.31-2.png)","d307521d":"**\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u0444\u0438\u043d\u0430\u043b\u044c\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c \u0434\u043b\u044f \u0441\u0430\u0431\u043c\u0438\u0442\u0430**\n\n\u0414\u0430\u043d\u043d\u044b\u0439 \u043a\u0443\u0441\u043e\u0447\u0435\u043a \u043a\u043e\u0434\u0430 \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442 \u0432\u044b\u0448\u0435 (\u0441\u0434\u0435\u043b\u0430\u043d\u043e \u0434\u043b\u044f \u0443\u0441\u043a\u043e\u0440\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u0430, \u0447\u0442\u043e\u0431 \u043d\u0435 \u043f\u0440\u043e\u0433\u043e\u043d\u044f\u0442\u044c \u0432\u0441\u0435 \u043c\u043e\u0434\u0435\u043b\u0438).","a1d76dd6":"**\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c `parsing_date` \u0432\u043e \u0432\u0441\u0435 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u044b**\n\n- test: \u0431\u0435\u0440\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0438\u0437 parsing_unixtime\n- train: \u0431\u0435\u0440\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0438\u0437 \u0438\u043c\u0435\u043d\u0438 \u0444\u0430\u0439\u043b\u0430 (09.09.2020)\n- train_new: \u0431\u0435\u0440\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0438\u0437 parsing_unixtime","fcd86922":"\u0412\u044b\u0432\u043e\u0434: \n- \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043f\u043e\u043a\u0430 \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u0435\u0438\u0437\u043c\u0435\u043d\u043d\u044b\u043c, \u043c\u043e\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u0441\u0440\u0435\u0434\u0438 \u0431\u0440\u0435\u043d\u0434\u043e\u0432\n- \u0432 \u0442\u0435\u0441\u0442\u0435 \u0435\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0442\u0440\u0435\u0439\u043d\u0435 - \u043c\u043e\u0436\u0435\u0442 \u0432\u043b\u0438\u044f\u0442\u044c \u043d\u0430 \u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f.","cb750fcc":"\u0413\u0438\u043f\u043e\u0442\u0435\u0437\u0430 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u043b\u0430\u0441\u044c, \u0432 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0435 \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0432\u0441\u0435 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0442\u043e\u0447\u043d\u043e, \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 `mileage`, \u043d\u043e \u043f\u043e\u043a\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0438\u043c \u0441\u0442\u0440\u043e\u043a\u0438 \u0438\u0437 \u0430\u043d\u0430\u043b\u0438\u0437\u0430.","a3856e14":"**`ownershipTime`**\n\n\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u0438, \u0438\u0441\u0445\u043e\u0434\u044f \u0438\u0437 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0432 `productionDate`.","c7e6b210":"# <a id=\"16\"><\/a> 16. SUMMARY\n\n1. \u0414\u043b\u044f \u043e\u0431\u043e\u0433\u043e\u0449\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u0431\u044b\u043b\u0430 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0430 \u043f\u043e **\u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 auto.ru**:\n    - \u043a\u043e\u0434 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u043d\u043e\u0432\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043e\u0441\u0442\u0443\u043f\u0435 \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u0435 \u043d\u0430 Git - [[SF-DST Car Price Prediction] Parsing Data DSPR-28.ipynb](https:\/\/github.com\/juliiik\/SF_DSPR_28_Gil\/blob\/main\/module_6\/%5BSF-DST%20Car%20Price%20Prediction%5D%20Parsing%20Data%20DSPR-28.ipynb).\n    - \u043f\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u043d\u0430\u043c\u0438 \u0431\u044b\u043b\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u044b \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0433\u043e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 \u0432 \u0440\u0430\u0437\u043c\u0435\u0440\u0435 `137685` \u0437\u0430\u043f\u0438\u0441\u0435\u0439\n    - \u041f\u0443\u0442\u044c \u043a \u0444\u0430\u0439\u043b\u0443: Kaggle: ..\/input\/autorucars\/all_car_27_08_2021_data_12_brands.csv [Github](https:\/\/github.com\/juliiik\/SF_DSPR_28_Gil\/blob\/main\/module_6\/all_car_27_08_2021_data_12_brands.csv)\n\n2. \u0412 \u0445\u043e\u0434\u0435 **EDA** \u0431\u044b\u043b\u0438 \u0441\u043e\u0432\u043c\u0435\u0449\u0435\u043d\u044b \u0441\u0442\u0430\u0440\u044b\u0435 \u0438 \u043d\u043e\u0432\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0441 auto.ru, \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0430 \u043e\u0447\u0438\u0441\u0442\u043a\u0430 \u0438 \u0443\u043d\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445, \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043f\u0443\u0441\u0442\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u043e\u0432, \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u044b\u0439 \u043e\u0442\u0431\u043e\u0440 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u043e\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430. \u0411\u044b\u043b\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u044b \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438:\n    - `km_per_year` - \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u043c \u0432 \u0433\u043e\u0434 \u043f\u0440\u043e\u0435\u0437\u0436\u0430\u043b \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c. \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442\u0441\u044f, \u043a\u0430\u043a `mileage`\/`productionDate`(years) \u0438\u043b\u0438 `mileage`\/`ownershipTime`. \u0420\u0435\u0448\u0438\u0442\u044c, \u043a\u0430\u043a\u043e\u0439 \u043c\u0435\u0442\u043e\u0434 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\n    - `carNovelty` - \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u0447\u0435\u0440\u0435\u0437 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043b\u0435\u0442 \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u0445\u043e\u0434\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 \u0431\u044b\u043b \u0432\u044b\u043f\u0443\u0449\u0435\u043d \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c, \u0442.\u0435. modelDate - productionDate. \n    - `rarity - \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439, \u0447\u0442\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c \u0440\u0430\u0440\u0438\u0442\u0435\u0442\u043d\u044b\u0439 (\u0435\u043c\u0443 \u0431\u043e\u043b\u0435\u0435 30 \u043b\u0435\u0442)\n    - `prodDate_3Y` - \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u0447\u0442\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044e \u0443\u0436\u0435 3 \u0433\u043e\u0434\u0430\n    - `prodDate_5Y` - \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u0447\u0442\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044e \u0443\u0436\u0435 5 \u043b\u0435\u0442\n    - `newCar` - \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0434\u043b\u044f \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e, \u043f\u0440\u043e\u0431\u0435\u0433 \u0440\u0430\u0432\u0435\u043d 0\n    - `descriptionIsNull` - \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0438\u043b\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u043e\u0431\u044a\u044f\u0441\u043b\u0435\u043d\u0438\u044f\n    - `ownershipTimeIsNull` - \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043e \u043b\u0438 \u0432\u0440\u0435\u043c\u044f \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u0430\u0432\u0442\u043e: 1 - \u043d\u0435 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043e, 0 - \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043e\n    - `colorPopular` - \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0434\u043b\u044f \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0447\u0442\u043e \u0430\u0432\u0442\u043e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430: 1 - \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e, 0 - \u043d\u0435\u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e\n    - `brandPopular` - \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0434\u043b\u044f \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0447\u0442\u043e \u0430\u0432\u0442\u043e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0439 \u043c\u0430\u0440\u043a\u0438: 1 - \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e, 0 - \u043d\u0435\u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e\n    - `modelPopular` - \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0434\u043b\u044f \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0447\u0442\u043e \u0430\u0432\u0442\u043e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u0431\u0440\u0435\u043d\u0434\u0430: 1 - \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e, 0 - \u043d\u0435\u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e.\n\n3. \u041f\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c **\u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f** \u043d\u0430\u0438\u043b\u0443\u0447\u0448\u0443\u044e \u043c\u0435\u0442\u0440\u0438\u043a\u0443 MAPE \u043d\u0430 \u043d\u0430\u0448\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u043b\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \"\u0434\u0435\u0440\u0435\u0432\u044c\u0435\u0432\" \u0438 \u0431\u0443\u0441\u0442\u0438\u043d\u0433. \n    - \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e Lazy Predict \u0441\u043c\u043e\u0433\u043b\u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0442\u044c 5-\u043a\u0443 \u043d\u0430\u0438\u043b\u0443\u0447\u0448\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u0440\u043e\u0432\u043e\u0434\u0438\u043b\u0438 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0438\u0435 \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u044b. \n    - \u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u043b\u0443\u0447\u0448\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u044d\u0442\u043e\u0439 \u043c\u0435\u0442\u0440\u0438\u043a\u0438 \u0431\u044b\u043b\u0438 \u0443 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439:\n        - `ExtraTreesRegressor` \u0441 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c MAPE=10.95%\n        - `Xgboosting, ExtraTreesRegressor+LinearRegression` (\u043c\u043e\u0434\u0435\u043b\u044c \u0441\u0442\u0435\u043a\u0438\u043d\u0433\u0430 \u0441 \u043d\u0430\u0438\u043b\u0443\u0447\u0448\u0438\u043c\u0438 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438 \u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043b\u0438\u043d\u0435\u0439\u043d\u043e\u043a \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0435\u0439) \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 MAPE=10.98%\n        - `XGBRegressor` \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 max_depth=12 learning_rate=0.05 \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c MAPE=11.35%\n        - \u0412 \u0446\u0435\u043b\u043e\u043c \u0441\u0442\u0435\u043a\u0438\u043d\u0433 \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a \u043d\u0435\u043f\u043b\u043e\u0445\u0438\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c, \u0443\u043b\u0443\u0447\u0448\u0430\u044f \u043d\u0430\u0448\u0443 \u043c\u0435\u0442\u0440\u0438\u043a\u0443.  \n    - \u041e\u0434\u043d\u0430\u043a\u043e, \u043b\u0443\u0447\u0448\u0435\u0439 \u043c\u043e\u0434\u0435\u043b\u044c\u044e \u0434\u043b\u044f \u043d\u0430\u0448\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u0442\u0430\u043b\u0430 \u043c\u043e\u0434\u0435\u043b\u044c `ExtraTreesRegressor` \u0441 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c MAPE=10.95%.\n4. \u0411\u044b\u043b\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0430 **\u0440\u0430\u0431\u043e\u0442\u0430 \u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u0435**:\n    - \u0440\u0430\u0431\u043e\u0442\u0430\u043b\u0438 \u043f\u043e [\u043f\u043b\u0430\u043d\u0443 \u0440\u0430\u0431\u043e\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u044b](https:\/\/docs.google.com\/spreadsheets\/d\/1ZNuAuKiX1eAxQJlAPlvRofNXmlvBpAK3i5o6QDyCOw0\/edit?usp=sharing0)\n    - \u0442\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438 Github & Google Colab, \u0447\u0430\u0442\u044b \u0438 \u0437\u0432\u043e\u043d\u043a\u0438\n5. \u041a\u043e\u043c\u0430\u043d\u0434\u0430 \u043f\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c \u0440\u0430\u0431\u043e\u0442\u044b \u043d\u0430 \u043c\u043e\u043c\u0435\u043d\u0442 09.09.2021 \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u0442 **14 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u043d\u0430 leaderboard (10.95%)**.","7c7a429a":"##### `price_usd`\n\n\u0426\u0435\u043d\u0430 \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u043a\u0443\u0440\u0441\u0430 \u0434\u043e\u043b\u043b\u0430\u0440\u0430.\n\n\u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043d\u0430 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0435\u0441\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0434\u0430\u0442\u0435 \u043f\u043e\u0434\u0430\u0447\u0438 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f, \u0442\u043e\u0447\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0432\u043e\u0434 \u0446\u0435\u043d\u044b \u0432 \u0434\u043e\u043b\u043b\u0430\u0440\u044b \u0437\u0430\u0442\u0440\u0443\u0434\u043d\u0438\u0442\u0435\u043b\u0435\u043d. \u041e\u0434\u043d\u0430\u043a\u043e, \u0435\u0441\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0434\u0430\u0442\u0435 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u0438 \u043c\u043e\u0436\u0435\u043c \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u044c, \u0447\u0442\u043e \u043d\u0430 \u043c\u043e\u043c\u0435\u043d\u0442 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u0446\u0435\u043d\u0430 \u0431\u044b\u043b\u0430 \u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0434\u043b\u044f \u043f\u0440\u043e\u0434\u0430\u0432\u0446\u0430.","640d4c0b":"\u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0434\u0430\u043b\u0435\u0435 \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0430\u043c \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f, \u0442\u043e \u0441\u0440\u0430\u0437\u0443 \u043f\u0435\u0440\u0435\u0432\u0435\u0434\u0435\u043c \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u0443\u044e 0 - \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u043c\u043e\u043d\u0442\u0430 , 1 - \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u043c\u043e\u043d\u0442\u0430, \u043a\u0430\u043a \u0434\u043b\u044f train, \u0442\u0430\u043a \u0438 \u0434\u043b\u044f test.","2c955840":"## 11.1. \u0441\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u043c \u043b\u0435\u0441\u043e\u043c","ceec84b2":"\u0412\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u0441\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u043e\u0439 `Lazypredict` \u0434\u043b\u044f \u043d\u0430\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0430 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u0445 \u043e\u0442\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0442 \u043b\u0443\u0447\u0448\u0435 \u0441 \u043d\u0430\u0448\u0438\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438. \u0422\u0430\u043a \u043a\u0430\u043a \u043c\u043e\u0434\u0435\u043b\u0438 \u0441 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u043e\u043c \u0442\u0430\u0440\u0433\u0435\u0442\u0430 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442 \u043b\u0443\u0447\u0448\u0438\u0435 \u043e\u0446\u0435\u043d\u043a\u0438 MAPE, \u0442\u043e \u0432 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c \u043f\u0440\u0438 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0438 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c \u0442\u0430\u0440\u0433\u0435\u0442\u0430.","ece492cc":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u0435\u0435 \u043d\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u0433\u0434\u0435 \u0431\u044b\u043b\u0438 \u043d\u0430\u0439\u0434\u0435\u043d\u044b \u0432\u044b\u0431\u0440\u043e\u0441\u044b. \u041e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u0438\u0434\u0435\u044f: \u0441\u0440\u0430\u0432\u043d\u0438\u0442\u044c \u043c\u0438\u043d\/\u043c\u0430\u043a\u0441 \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u043f\u043e test \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0443 \u0438 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043b\u0438\u0448\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u0435\u0441\u043b\u0438 \u0438\u0445 \u043e\u0431\u044a\u0435\u043c \u043d\u0435 \u043e\u0447\u0435\u043d\u044c \u0431\u043e\u043b\u044c\u0448\u043e\u0439.","5fb0a387":"###  <a id=\"3.8\"><\/a> 3.8 \u041e\u0442\u0431\u043e\u0440 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n#### \u041a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432","f9d0f561":"# <a id=\"14\"><\/a> 15. SUBMISSION\n\n\u0421\u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u0441\u0430\u0431\u043c\u0438\u0448\u043d \u0444\u0430\u0439\u043b. \u0414\u043b\u044f \u0441\u0430\u0431\u043c\u0438\u0448\u0435\u043d\u0430 \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435 \u0434\u043e \u0442\u044b\u0441\u044f\u0447, \u0442.\u043a. \u0446\u0435\u043d\u044b \u043d\u0430 \u043c\u0430\u0448\u0438\u043d\u044b \u0440\u0435\u0434\u043a\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043e \u0440\u0443\u0431\u043b\u044f \u0438 \u043a\u043e\u043f\u0435\u0439\u043a\u0438.","5b2f7c41":"\u0412\u044b\u0432\u043e\u0434: \u043d\u0430\u0439\u0434\u0435\u043d\u044b \u0441\u0438\u043b\u044c\u043d\u043e \u0441\u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u043d\u043e \u043c\u044b \u044d\u0442\u043e \u0443\u0436\u0435 \u0432\u0438\u0434\u0435\u043b\u0438 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0440\u0430\u043d\u0435\u0435 \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u043d\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435.","374bc420":"**`brand`**\n\n\u041c\u0430\u0440\u043a\u0430 \u043c\u0430\u0448\u0438\u043d\u044b.","2651ca84":"\u0412\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u0435\u0441\u0442\u044c \u043a\u0430\u043a\u0430\u044f-\u0442\u043e \u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u043f\u043e \u043a\u043b\u0430\u0441\u0441\u0430\u043c, \u043d\u043e \u043f\u043e\u043a\u0430 \u043d\u0435 \u043f\u043e\u043d\u044f\u0442\u043d\u043e, \u043d\u0430 \u0431\u0430\u0437\u0435 \u043a\u0430\u043a\u043e\u0433\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0435\u0442\u0441\u044f \u043b\u0438\u043d\u0435\u0439\u043d\u0430\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u043f\u043e \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u0430\u043c \u0441\u043e\u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u044f \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0441\u0442\u0432\u0430.\n\n\u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0448\u0430\u0433\u0438:\n1. \u041f\u043b\u0430\u043d-\u043c\u0438\u043d\u0438\u043c\u0443\u043c: \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0434\u043b\u044f \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e NAN \u043d\u0443\u043b\u044f\u043c\u0438, \u0432\u043d\u0435\u0441\u0442\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u0447\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0447\u0442\u043e-\u0442\u043e \u0438\u0437 \u044d\u0442\u043e\u0433\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f. \u0422\u0435\u043a\u0443\u0449\u0438\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0443\u0434\u0430\u043b\u0438\u0442\u044c.\n2. \u041f\u043b\u0430\u043d-\u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c: \u043d\u0430\u0439\u0442\u0438, \u043a\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u044e\u0449\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.","5f562dc0":"**\u041a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432**","0cd734e6":"**`engineDisplacement`**\n\n\u041f\u0440\u0438\u0437\u043d\u0430\u043a \u043f\u043e\u0437\u0434\u043d\u0435\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u0438\u0437 \u0430\u043d\u0430\u043b\u0438\u0437\u0430.\n\n_\u0413\u0440\u0430\u043d\u0438\u0446\u044b \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432: [0.2500000000000002, 3.8499999999999996]._\n\n_\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430: 0.0. \n\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430: 8.4._\n\n_\u041d\u0430\u0439\u0434\u0435\u043d\u044b \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043f\u043e \u043d\u0438\u0436\u043d\u0435\u0439 \u0433\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430! \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e: 2, 0.0%_\n\n_\u041d\u0430\u0439\u0434\u0435\u043d\u044b \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043f\u043e \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u0433\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430! \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e: 8407, 6.93%_","a996cbec":"**`vehicleTransmission`**\n\n\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043f\u0440\u043e \u043a\u043e\u0440\u043e\u0431\u043a\u0443 \u043f\u0435\u0440\u0435\u0434\u0430\u0447.","258cfc46":"**`mileage`**\n\n\u041f\u0440\u043e\u0431\u0435\u0433. \u0414\u043b\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 train_new \u0443\u043a\u0430\u0437\u0430\u043d\u044b \u043a\u043c \u0438 \u0435\u0441\u0442\u044c \u043f\u0440\u043e\u0431\u0435\u043b\u044b, \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u043c\u0443 \u0444\u043e\u0440\u043c\u0430\u0442\u0443.","591cee22":"# <a id=\"6\"><\/a> 6. MODEL 2 : CatBoost","a922450b":"\u0422\u0430\u043a\u0438\u0445 \u0441\u0442\u0440\u043e\u043a \u043d\u0435\u043c\u043d\u043e\u0433\u043e, \u0443\u0434\u0430\u043b\u0438\u043c \u0438\u0437 \u0438\u0437 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430. \u0411\u043e\u043b\u0435\u0435 \u0442\u043e\u0433\u043e, \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u043d\u0435 \u0432\u0445\u043e\u0434\u044f\u0442 \u0432 \u0441\u043f\u0438\u0441\u043e\u043a 12 \u0431\u0440\u0435\u043d\u0434\u043e\u0432 \u0438\u0437 test \u0432\u044b\u0431\u043e\u0440\u043a\u0438.","9df3326e":"# <a id=\"9\"><\/a> 9. MODEL 4: XGBRegressor","95588b13":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f test, train_new \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 (float).","89880422":"\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043f\u0438\u0441\u043e\u043a, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u043a\u043e\u043b\u043e\u043d\u043a\u0438-\u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u044b \u043d\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0438\u0437 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430.","7d2e943d":"### \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u0441 auto.ru\n\n\u041a\u0440\u0430\u0442\u043a\u0430\u044f \u0441\u0430\u043c\u0430\u0440\u0438:\n1. \u041a\u043e\u0434 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u043d\u043e\u0432\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043e\u0441\u0442\u0443\u043f\u0435 \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c \u043d\u043e\u0443\u0442\u0431\u0443\u043a\u0435 \u043d\u0430 Git - [[SF-DST Car Price Prediction] Parsing Data DSPR-28.ipynb](https:\/\/github.com\/juliiik\/SF_DSPR_28_Gil\/blob\/main\/module_6\/%5BSF-DST%20Car%20Price%20Prediction%5D%20Parsing%20Data%20DSPR-28.ipynb).\n2. 27.08.2021 \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439 \u043f\u043e\u043b\u0443\u0447\u0435\u043d \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043e \u0441\u0441\u044b\u043b\u043a\u0430\u043c\u0438 \u043d\u0430 137559 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u043f\u043e \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u043c \u043c\u0430\u0440\u043a\u0430\u043c \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 \u043f\u043e \u0432\u0441\u0435\u043c \u0440\u0435\u0433\u0438\u043e\u043d\u0430\u043c, 29.08.2021 \u044d\u0442\u043e\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0431\u044b\u043b \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d, \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0447\u0435\u0433\u043e \u0431\u044b\u043b\u043e \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0435\u0449\u0435 133 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f. \n3. \u041f\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u043d\u0430\u043c\u0438 \u0431\u044b\u043b\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u044b \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0433\u043e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 \u0432 \u0440\u0430\u0437\u043c\u0435\u0440\u0435 `137685` \u0437\u0430\u043f\u0438\u0441\u0435\u0439\n4. \u041f\u0443\u0442\u044c \u043a \u0444\u0430\u0439\u043b\u0443:\n    - Kaggle: ..\/input\/autorucars\/all_car_27_08_2021_data_12_brands.csv\n    - Github: https:\/\/github.com\/juliiik\/SF_DSPR_28_Gil\/blob\/main\/module_6\/all_car_27_08_2021_data_12_brands.csv","cb37b9f8":"## Functions\n\n\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u0431\u043b\u043e\u043a\u0435 \u0441\u043e\u0431\u0440\u0430\u043d\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438.","f64effb6":"### 13.3 RandomForestRegressor, ExtraTreesRegressor+LinearRegression","30b11932":"\u041e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u043b\u043e\u0433\u0438\u043a\u0430 \u0432\u044b\u0431\u043e\u0440\u0430 \u0441\u043f\u043e\u0441\u043e\u0431\u0430 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f:\n- \u0435\u0441\u043b\u0438 \u0443 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u0435\u0441\u0442\u044c \u043a\u0430\u043a\u0430\u044f-\u0442\u043e \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u043e\u0442 \u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u043e\u0433\u043e \u043d\u043e\u043c\u0435\u0440\u0430 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u0438\u043b\u0438 \u043a\u0430\u043a\u0430\u044f-\u0442\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u043d\u0430\u044f \u0440\u0430\u0437\u043d\u0438\u0446\u0430 \u043c\u0435\u0436\u0434\u0443 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f\u043c\u0438, \u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c label encodeing \n- \u0435\u0441\u043b\u0438 \u0442\u0430\u043a\u043e\u0433\u043e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u043d\u0435\u0442 \u0438 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u0442\u043e \u043f\u0440\u043e\u0431\u0443\u0435\u043c one-hot-encoding.\n\nUPD: \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u043e\u0432, \u0431\u044b\u043b\u043e \u0440\u0435\u0448\u0435\u043d\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c labels encoding \u043a\u043e \u0432\u0441\u0435\u043c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c, \u0442.\u043a. \u0434\u0430\u0436\u0435 \u043f\u043e\u0441\u043b\u0435 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043d\u0435\u0437\u043d\u0430\u0447\u0438\u043c\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432, \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0431\u044b\u043b\u0438 \u0445\u0443\u0436\u0435. \u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043d\u0430 \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u044b.","d6e92683":"\u0417\u0430\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043e, \u0442.\u043a. \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0430\u0446\u0438\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043d\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u043b\u043e \u0432\u043b\u0438\u044f\u043d\u0438\u044f \u043d\u0430 \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u043c\u0435\u0442\u0440\u0438\u043a\u0443.","b73aec0b":"\u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e, \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u0442\u0430\u043a, \u0447\u0442\u043e NAN - \u0434\u043b\u044f \u043d\u043e\u0432\u044b\u0445 \u043c\u0430\u0448\u0438\u043d \u0438 \u043e\u0434\u043d\u043e\u0439 \u043c\u0430\u0448\u0438\u043d\u044b \u0441 \u0442\u0435\u0441\u0442\u0430. \n\u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f:\n- \u0434\u043b\u044f \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e: \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \"\u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\", \u043d\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \"\u043d\u043e\u0432\u043e\u0435 \u0430\u0432\u0442\u043e\"\n- \u0434\u043b\u044f 10412 \u0438\u0437 test: \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \"\u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\"","40ac6e1a":"# <a id=\"11\"><\/a> 11. MODEL 6: BaggingRegressor","715852a2":"\u0411\u0440\u0430\u0442\u044c \u043c\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u043d\u0435 \u0431\u0443\u0434\u0435\u043c, \u0442\u0430\u043a \u043a\u0430\u043a \u0434\u0430\u0436\u0435 \u043f\u0440\u0438 2-3 \u043c\u043e\u0434\u0435\u043b\u044f\u0445 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0434\u043e\u043b\u0433\u043e.\n\u0412\u044b\u0431\u0438\u0440\u0435\u043c \u0434\u043b\u044f \u0441\u0442\u0435\u043a\u0438\u043d\u0433\u0430 \u0441\u0430\u043c\u044b\u0435 \u043b\u0443\u0447\u0448\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438,  \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438: Xgboosting, ExtraTreesRegressor. \u0414\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0432\u0437\u044f\u0442\u044c \u043b\u0438\u043d\u0435\u0439\u043d\u0443\u044e \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044e \u0438 CatBoosting.","4e27566a":"# <a id=\"7\"><\/a> 7. MODELS via LazyPredict","fd80a951":"**`numberOfDoors`**\n\n\u0412\u043e \u0432\u0440\u0435\u043c\u044f \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u043f\u043e\u044f\u0432\u0438\u043b\u0430\u0441\u044c \u0438\u0434\u0435\u044f \u0438\u0437\u0443\u0447\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 0 - \u0432\u044b\u0431\u0440\u043e\u0441\/\u043e\u0448\u0438\u0431\u043a\u0430 \u0438\u043b\u0438 \u0432\u0430\u043b\u0438\u0434\u043d\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u044c.","705fbbca":"**\u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0430\u0446\u0438\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432**","f2ab8560":"\u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0434\u0430\u043b\u0435\u0435 \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0430\u043c \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f, \u0442\u043e \u0441\u0440\u0430\u0437\u0443 \u043f\u0435\u0440\u0435\u0432\u0435\u0434\u0435\u043c \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u0443\u044e 0 - \u043d\u0435 \u0440\u0430\u0441\u0442\u043e\u043c\u043e\u0436\u0435\u043d, 1 - \u0440\u0430\u0441\u0442\u043e\u043c\u043e\u0436\u0435\u043d, \u043a\u0430\u043a \u0434\u043b\u044f train, \u0442\u0430\u043a \u0438 \u0434\u043b\u044f test.","fb968d4b":"#### \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043f\u0435\u0440\u0435\u0434 \u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c","abe599bb":"**`price`**\n\n_\u0413\u0440\u0430\u043d\u0438\u0446\u044b \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432: [-1417500.0, 2362500.0]._\n\n_\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430: 0.0._ \n_\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430: 99000000.0._\n\n_\u041d\u0430\u0439\u0434\u0435\u043d\u044b \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043f\u043e \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u0433\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430! \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e: 11649, 9.59%_\n\n\u041f\u0440\u043e\u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c, \u043d\u043e \u0432\u043e\u043e\u0431\u0449\u0435, log \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442, \u0430 \u043c\u044b \u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0432 \u043c\u043e\u0434\u0435\u043b\u044f\u0445.","9f31038a":"\u0412\u0438\u0434\u0438\u043c, \u0447\u0442\u043e \u0432 Test \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043c\u0438\u043d\u0438\u043c\u0443\u043c\u0430 - \u0431\u043e\u043b\u044c\u0448\u0435, \u0430 \u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c\u0430 - \u043c\u0435\u043d\u044c\u0448\u0435. \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0447\u0442\u043e \u044d\u0442\u043e \u0437\u0430 \u0430\u0432\u0442\u043e \u0438 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0438\u0445.","5c52e5c2":"**`description`**\n\n\u041f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430\u0442\u0438\u0447\u043d\u043e, \u043f\u0435\u0440\u0435\u0434 \u043f\u043e\u0441\u0442\u0440\u0430\u0435\u043d\u0438\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0443\u0434\u0430\u043b\u0438\u043c, \u043f\u043e\u043a\u0430 \u043e\u0441\u0442\u0430\u0432\u0438\u043c. \u0418\u0434\u0435\u044f \u0434\u043b\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 - \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f (\u0434\u0430\/\u043d\u0435\u0442).","79132c88":"**`description_words_count`**\n\n\u041f\u0440\u0438\u0437\u043d\u0430\u043a \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0441\u043b\u043e\u0432 \u0432 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0438.","a7212811":"**`description_words_count`**\n\n_\u0413\u0440\u0430\u043d\u0438\u0446\u044b \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432: [-153.5, 314.5]._\n\n_\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430: 0._ \n_\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430: 4545._\n\n_\u041d\u0430\u0439\u0434\u0435\u043d\u044b \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043f\u043e \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u0433\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430! \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e: 11097, 9.13%_","c8d622fc":"###### \u041a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437.\n\n\u041e\u0446\u0435\u043d\u0438\u043c \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044e \u041f\u0438\u0440\u0441\u043e\u043d\u0430 \u0434\u043b\u044f \u043d\u0435\u043f\u0440\u0435\u0440\u044b\u0432\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445. C\u0438\u043b\u044c\u043d\u0430\u044f \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438 \u0432\u0440\u0435\u0434\u043d\u0430 \u0434\u043b\u044f \u043b\u0438\u043d\u0435\u0439\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0438\u0437-\u0437\u0430 \u043d\u0435\u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u043e\u0441\u0442\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0445 \u043e\u0446\u0435\u043d\u043e\u043a.","a0fb922d":"#### Label Encoding","70554c9a":"<a id=\"1\"><\/a>\n# 1. IMPORT, FUNCTIONS, SETUP","e2161752":"**`mileage`**\n\n_\u0413\u0440\u0430\u043d\u0438\u0446\u044b \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432: [-112500.0, 387500.0]._\n\n_\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430: 0.0. \n\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430: 1000000.0 ._\n\n_\u041d\u0430\u0439\u0434\u0435\u043d\u044b \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043f\u043e \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u0433\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430! \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e: 2559, 2.11%_","263b9024":"**\u041c\u043e\u0434\u0435\u043b\u044c**:\n\n\u041d\u0430\u0438\u043b\u0443\u0447\u0448\u0443\u044e \u043c\u0435\u0442\u0440\u0438\u043a\u0443 MAPE \u043d\u0430 \u043d\u0430\u0448\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u043b\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \"\u0434\u0435\u0440\u0435\u0432\u044c\u0435\u0432\" \u0438 \u0431\u0443\u0441\u0442\u0438\u043d\u0433.\n\n\u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u043b\u0443\u0447\u0448\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u044d\u0442\u043e\u0439 \u043c\u0435\u0442\u0440\u0438\u043a\u0438 \u0431\u044b\u043b\u0438 \u0443 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439:\n- `ExtraTreesRegressor` \u0441 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c MAPE=10.95%\n- `Xgboosting, ExtraTreesRegressor+LinearRegression` (\u043c\u043e\u0434\u0435\u043b\u044c \u0441\u0442\u0435\u043a\u0438\u043d\u0433\u0430 \u0441 \u043d\u0430\u0438\u043b\u0443\u0447\u0448\u0438\u043c\u0438 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438 \u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043b\u0438\u043d\u0435\u0439\u043d\u043e\u043a \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0435\u0439) \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 MAPE=10.98%\n- `XGBRegressor` \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 max_depth=12 learning_rate=0.05 \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c MAPE=11.35%.\n\n\u0412 \u0446\u0435\u043b\u043e\u043c \u0441\u0442\u0435\u043a\u0438\u043d\u0433 \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a \u043d\u0435\u043f\u043b\u043e\u0445\u0438\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c, \u0443\u043b\u0443\u0447\u0448\u0430\u044f \u043d\u0430\u0448\u0443 \u043c\u0435\u0442\u0440\u0438\u043a\u0443.  \n\n\n\u041e\u0434\u043d\u0430\u043a\u043e, \u043b\u0443\u0447\u0448\u0435\u0439 \u043c\u043e\u0434\u0435\u043b\u044c\u044e \u0434\u043b\u044f \u043d\u0430\u0448\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u0442\u0430\u043b\u0430 \u043c\u043e\u0434\u0435\u043b\u044c `ExtraTreesRegressor` \u0441 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u044b\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c MAPE=10.95%.","0ee5ae5e":"### <a id=\"3.3\"><\/a> 3.3 \u0414\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b\n\n\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u043e\u0432 \u0432 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0447\u0430\u0441\u0442\u0438 train.","9aa1a3d8":"**`colorPopular`**\n\n\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430 \u0430\u0432\u0442\u043e. \u041f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u043c \u0441\u0447\u0438\u0442\u0430\u0435\u043c \u0446\u0432\u0435\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f \u0447\u0430\u0449\u0435, \u0447\u0435\u043c \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043f\u043e \u0432\u0441\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0446\u0432\u0435\u0442\u0430 \u0432 \u0432\u044b\u0431\u043e\u0440\u043a\u0435:\n- 1 - \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0439 \u0446\u0432\u0435\u0442\n- 0 - \u043d\u0435\u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0439 \u0446\u0432\u0435\u0442.","cc181eb1":"**\u041a\u0440\u043e\u043c\u0435 \u044d\u0442\u0438\u0445 2-\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0441\u0442\u0435\u043a\u0438\u043d\u0433\u0430, \u043c\u044b \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u043b\u0438 \u0441\u0434\u0435\u043b\u0430\u043b\u0438 \u0441\u0442\u0435\u043a\u0438\u043d\u0433 \u0441 \u043d\u0435 \u0441\u0430\u043c\u044b\u043c\u0438 \u043b\u0443\u0447\u0448\u0438\u043c\u0438 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438 \u0438 LinearRegression**","fbe092e5":"**productionDate\/modelDate**\n\n\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043f\u043e\u0432\u043d\u0438\u043c\u0430\u0442\u0435\u043b\u044c\u043d\u0435\u0435 \u043d\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0438 \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u043f\u0440\u043e\u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0433\u043b\u0443\u0431\u0436\u0435.","55640295":"### 13.4 BaggingRegressor(xgb.XGBRegressor), ExtraTreesRegressor+LinearRegression","cfd4ad98":"#### \u0413\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043d\u0430 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435, \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u0438 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435\n\n\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043c\u043e\u0433\u0443\u0442 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u044c\u0441\u044f \u043a \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u043c, \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u043c, \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c.","bcf87006":"**`km_per_year`**\n\n\u041f\u0440\u043e\u0431\u0435\u0433 \u0430\u0432\u0442\u043e \u043a\u043c\/\u0433\u043e\u0434.","cbb5934d":"**`descriptionIsNull`**\n\n\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043e \u043b\u0438 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0430\u0432\u0442\u043e:\n- 1 - \u043d\u0435 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043e\n- 0 - \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043e.","19aa7369":"\u0412\u044b\u0432\u043e\u0434: \n1. \u0412\u0437\u0430\u0438\u043c\u043e\u0441\u0432\u044f\u0437\u044c \u043f\u0430\u0440 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043f\u043e \u041f\u0438\u0440\u0441\u043e\u043d\u0443 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0441\u0438\u043b\u044c\u043d\u0430\u044f \u0434\u043b\u044f `productionDate`, `modelDate`. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c, \u0443 `productionDate` \u0447\u0443\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0430\u044f \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044f \u0441 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439. \u0423\u0434\u0430\u043b\u0438\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a `modelDate`.\n2. \u0414\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0441\u0438\u043b\u044c\u043d\u0430\u044f \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044f \u043c\u0435\u0436\u0434\u0443 `productionDate` \u0438 `meleage` - \u0447\u0435\u043c \u043c\u0435\u043d\u044c\u0448\u0435 \u0433\u043e\u0434 \u0432\u044b\u043f\u0443\u0441\u043a\u0430, \u0442\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u043f\u0440\u043e\u0431\u0435\u0433\n3. `engineDisplacement` \u0438 `enginePower` \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0441\u0438\u043b\u044c\u043d\u043e \u0441\u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u044b (0.84). \u0414\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043e\u0434\u0438\u043d \u043f\u0440\u0438\u0437\u043d\u0430\u043a - `enginePower`, \u0442.\u043a. \u043e\u043d \u0441\u0438\u043b\u044c\u043d\u0435\u0435 \u0432\u043b\u0438\u044f\u0435\u0442 \u043d\u0430 `price`.\n4. \u0423 \u0432\u0441\u0435\u0445 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0432\u044b\u0441\u043e\u043a\u0430\u044f \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044f \u0441 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439, \u044d\u0442\u043e \u0445\u043e\u0440\u043e\u0448\u043e.","d5c949ba":"\u0412\u0430\u0440\u0438\u0430\u043d\u0442 \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u043a\u0430\u0437\u0430\u043b \u043b\u0443\u0447\u0448\u0435\u0435 \u0432\u043b\u0438\u044f\u043d\u0438\u0435 \u043d\u0430 \u043c\u0435\u0442\u0440\u0438\u043a\u0443 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430, \u0447\u0435\u043c \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0435\u043d\u0438\u044f \u0434\u043e\u043b\u0435\u0439 \u0446\u0432\u0435\u0442\u0430 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f. \u041e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0432 \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u043c \u0432\u0438\u0434\u0435.","68cdd9f0":"\u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u044d\u0442\u0430\u043f\u0430 \u0441\u043a\u043b\u0435\u0438\u0432\u0430\u0435\u043c \u0432\u0441\u0435 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u044b.","f2396706":"**`driveSide`**\n\n\u041f\u0440\u0430\u0432\u043e\u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u0432 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0435 => \u043f\u043e\u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c, \u0435\u0441\u0442\u044c \u043b\u0438 \u043b\u0435\u0432\u043e\u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u0432 \u0442\u0435\u0441\u0442\u0435. \u0415\u0441\u043b\u0438 \u043d\u0435\u0442, \u0442\u043e \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a.","b1779b64":"_`train_new['engineDisplacement']`, `test['engineDisplacement']`_\n\n\u0418\u0437\u0431\u0430\u0432\u0438\u043c\u0441\u044f \u043e\u0442 LTR \u0432 \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0438 \u043e\u0431\u044a\u0435\u043c\u0430 \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f \u0438 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0432\u043e float.","390a70d8":"**\u041b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432**\n\n\u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043c\u043d\u043e\u0433\u0438\u0435 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0438\u043c\u0435\u044e\u0442 \u0441\u043c\u0435\u0449\u0435\u043d\u043d\u043e\u0435 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0432\u043b\u0435\u0432\u043e\/\u0432\u043f\u0440\u0430\u0432\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432.","5e30252e":"**`model`**\n\n\u041c\u043e\u0434\u0435\u043b\u044c \u043c\u0430\u0448\u0438\u043d\u044b.","c41d9ba0":"# <a id=\"8\"><\/a> 8. MODEL 3: RandomForestRegressor","a8d281f0":"### <a id=\"3.5\"><\/a> 3.5 \u0414\u0435\u0442\u0430\u043b\u044c\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432","6ea26ec3":"**`modelPopular`**\n\n\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u0438 \u043c\u043e\u0434\u0435\u043b\u0438. ","65237d80":"## 11.3. \u0441 ExtraTreesRegressor","e8aa4081":"\u0412\u044b\u0432\u043e\u0434\u044b:\n\n1. \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c \u0441\u0442\u0430\u043b\u043e \u043e\u0447\u0435\u0432\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0438\u043c\u0435\u044e\u0442 \u0442\u044f\u0436\u0451\u043b\u044b\u0439 \u043b\u0435\u0432\u044b\u0439 \u0438\u043b\u0438 \u043f\u0440\u0430\u0432\u044b\u0439 \u0445\u0432\u043e\u0441\u0442, \u0432\u043b\u0438\u044f\u0435\u0442 \u043d\u0430 \u0440\u0430\u0437\u0431\u0435\u0436\u043a\u0443 \u043c\u0435\u0436\u0434\u0443 \u0441\u0440\u0435\u0434\u043d\u0438\u043c \u0438 \u043c\u0435\u0434\u0438\u0430\u043d\u043e\u0439: \n    - \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0431\u043e\u043b\u0435\u0435 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u044b\u043c, \u043c\u043e\u0436\u043d\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c\u0438 \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0430\u043c\u0438 \u044d\u0442\u0438\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445\n    - \u043f\u043e\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u0432\u044b\u0431\u0440\u043e\u0441\u0430\u043c\u0438\n    - \u043f\u043e\u0434\u0443\u043c\u0430\u0442\u044c \u043f\u0440\u043e \u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0443 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043f\u043e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f\u043c.\n2. \u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u043d\u0438\u0435 `modelDate`, `productionDate` \u043e\u0447\u0435\u043d\u044c \u0441\u0445\u043e\u0436\u0438:\n    - \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043d\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043d\u0430 \u043c\u0443\u043b\u044c\u0442\u0438\u043a\u043e\u043b\u043b\u0438\u043d\u0435\u0430\u0440\u043d\u043e\u0441\u0442\u044c \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u043e\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430\n    - \u0432\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u0432 \u0441\u0440\u0435\u0434\u043d\u0435\u043c `productionDate` \u0447\u0443\u0442\u044c \u043f\u043e\u0437\u0436\u0435, \u0447\u0435\u043c `modelDate` \u0432\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u0442.\u0435. \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u0440\u0438\u043e\u0441\u0445\u043e\u0434\u0438\u0442 \u0447\u0443\u0442\u044c \u0441 \u0437\u0430\u043f\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c, \u0447\u0442\u043e \u043b\u043e\u0433\u0438\u0447\u043d\u043e. \u041c\u043e\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a - \u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043d\u043e\u0432\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c, \u0442.\u0435. \u0447\u0435\u0440\u0435\u0437 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043b\u0435\u0442 \u043f\u043e\u0441\u043b\u0435 \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438 \u0431\u044b\u043b \u0432\u044b\u043f\u0443\u0449\u0435\u043d \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c.\n3. `mileage`: \u0435\u0441\u0442\u044c \u043f\u0438\u043a \u0432 0 - \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043d\u043e\u0432\u043e\u0433\u043e \u0430\u0432\u0442\u043e.\n4. `enginePower`: 11 \u043b\u0441 - \u0447\u0442\u043e \u044d\u0442\u043e \u0437\u0430 \u0430\u0432\u0442\u043e? \u041f\u043e\u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c\n5. `engineDisplacement`: \u043e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u043c\u0430\u0441\u0441\u0430 \u0430\u0432\u0442\u043e - 2.0 \u043b, \u0435\u0441\u0442\u044c \u0440\u0430\u0437\u0431\u0440\u043e\u0441.\n5. \u0412\u0437\u0430\u0438\u043c\u043e\u0441\u0432\u044f\u0437\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0441 \u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c:\n    - \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u044f\u043c\u0430\u044f \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044f \u0446\u0435\u043d\u044b \u043e\u0442 \u0433\u043e\u0434\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438 \u0433\u043e\u0434\u0430 \u0432\u044b\u043f\u0443\u0441\u043a\u0430 \u0441 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u0434\u043b\u044f \u043e\u0441\u043e\u0431\u043e \u0440\u0430\u0440\u0438\u0442\u0435\u0442\u043d\u044b\u0445 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 (~\u0434\u043e 1975 \u0433\u043e\u0434\u0430).\n    - \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0435\u0442\u0441\u044f \u043e\u0431\u0440\u0430\u0442\u043d\u0430\u044f \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044f \u0446\u0435\u043d\u044b \u043e\u0442 \u043f\u0440\u043e\u0431\u0435\u0433\u0430 \u0430\u0432\u0442\u043e\n    - \u0446\u0435\u043d\u0430 \u043e\u0442 \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u0438 \u0432\u0434\u0438\u0433\u0430\u0442\u0435\u043b\u044f \u0438 \u043e\u0431\u044a\u0435\u043c\u0430 \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u0442, \u043d\u043e \u043d\u0435 \u0442\u0430\u043a \u044f\u0432\u043d\u043e, \u043a\u0430\u043a \u043e\u0442 \u0434\u0440\u0443\u0433\u0438\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445.","53a23db0":"\u041d\u0443\u0436\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c 2 \u0438\u043b\u0438 3 \u043b\u0443\u0447\u0448\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u043b\u044f \u0441\u0442\u0435\u043a\u0438\u043d\u0433\u0430, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043a\u0430\u043a\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c \u043b\u0443\u0447\u0448\u0435 \u0432\u0437\u044f\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 (\u0440\u0435\u0448\u0430\u044e\u0449\u0435\u0439).","fb203c1b":"#### \u0421\u0440\u0430\u0432\u043d\u0438\u043c \u0442\u0438\u043f\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 test \u0438 train\n\n\u041d\u0430\u0439\u0434\u0435\u043c \u0440\u0430\u0441\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u0432 \u0442\u0438\u043f\u0430\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f train \u0438 test, \u0443\u0441\u0442\u0440\u0430\u043d\u0438\u043c \u0438\u0445 \u0434\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445.","dc5f546c":"\u0412\u044b\u0432\u043e\u0434\u044b:\n- \u0443 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043e\u043f\u044f\u0442\u044c \u0442\u044f\u0436\u0435\u043b\u044b\u0439 \u043f\u0440\u0430\u0432\u044b\u0439 \u0445\u0432\u043e\u0441\u0442. \u041f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u0441 \u0432\u044b\u0431\u0440\u043e\u0441\u0430\u043c\u0438 \u0438 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432.\n- \u0432\u0438\u0437\u0443\u0430\u043b\u044c\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0437\u043d\u0430\u0447\u0438\u043c\u044b \u0438 \u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442 \u0432\u043b\u0438\u044f\u043d\u0438\u0435 \u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0446\u0435\u043d\u044b. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u044d\u0442\u043e \u043d\u0430 \u044d\u0442\u0430\u043f\u0435 \u043e\u0442\u0431\u043e\u0440\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432.","92dde6a1":"\u0412\u044b\u0432\u043e\u0434: \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0432\u0443\u044e\u0442 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u0434\u043b\u044f \u043a\u043e\u0442\u043e\u0440\u044b\u0445, \u043d\u0435 \u0432\u0441\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439 \u0432\u043b\u0438\u044f\u044e\u0442 \u043d\u0430 \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e, \u0442\u0430\u043a\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0431\u044b \u0443\u0434\u0430\u043b\u0438\u0442\u044c, \u0435\u0441\u043b\u0438 \u0431\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438 one hot encoding, \u043f\u043e\u043a\u0430 \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c.","6137a3f7":"**`fuelType`**\n\n\u0415\u0441\u0442\u044c \u0442\u0438\u043f\u044b \u0442\u043e\u043f\u043b\u0438\u0432\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432 \u044f\u0432\u043d\u043e\u043c \u043c\u0435\u043d\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0435. \u041f\u043e\u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0442\u044c \u0438 \u043f\u043e\u0434\u0443\u043c\u0430\u0442\u044c, \u0441\u0442\u043e\u0438\u0442 \u043b\u0438 \u0434\u0435\u043b\u0430\u0442\u044c \u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0443 \u043d\u0435\u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0442\u043e\u043f\u043b\u0438\u0432\u0430.","68ec02c2":"**`brandPopular`**\n- [x] \u0444\u043b\u0430\u0433 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e \u0430\u0432\u0442\u043e: \u0437\u0430 \u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440 \u0432\u0437\u044f\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `data['brand'].value_counts() > data['brand'].value_counts().values.mean()` \u0438\u043b\u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u043e\u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0435 \u043a\u043e\u043b-\u0432\u0430 \u043c\u0430\u0448\u0438\u043d \u0431\u0440\u0435\u043d\u0434\u0430 \u043a \u043e\u0431\u0449\u0435\u043c\u0443 \u043a\u043e\u043b-\u0432\u0443 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439\n- [ ] \u043e\u0431\u044b\u0447\u043d\u043e \u043d\u0430 \u0446\u0435\u043d\u0443 \u0441\u0438\u043b\u044c\u043d\u043e \u0432\u043b\u0438\u044f\u0435\u0442 \u043a\u043b\u0430\u0441\u0441 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f (`brand` + `bodyType`) \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 \u0433\u043b\u0430\u0432\u043d\u044b\u0445 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442","3ae53026":"\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0435, \u043c\u0435\u0434\u0438\u0430\u043d\u043d\u044b\u0435 \u0438 \u0441\u0440\u0435\u0434\u043d\u0438\u0438 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0431\u043b\u0438\u0437\u043a\u0438.\n\n\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0440\u0438\u0442\u0435\u0442\u043d\u044b\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438 (30 \u043b\u0435\u0442\u043d\u0438\u0435 \u043c\u0430\u0448\u0438\u043d\u044b, \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 FIVA (F\u00e9d\u00e9ration Internationale des V\u00e9hicules Anciens), \u0441\u043c \n[Wiki Article](https:\/\/ru.wikipedia.org\/wiki\/%D0%9A%D0%BB%D0%B0%D1%81%D1%81%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9_%D0%B0%D0%B2%D1%82%D0%BE%D0%BC%D0%BE%D0%B1%D0%B8%D0%BB%D1%8C#%D0%A0%D0%BE%D1%81%D1%81%D0%B8%D1%8F).\n\n\u0412 \u0447\u0430\u0441\u0442\u0438 \u0444\u0438\u0447\u0435 \u0438\u043d\u0436\u0435\u043d\u0438\u0440\u0438\u043d\u0433\u0430 \u043c\u043e\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a rarity.","73a0e529":"\u0412\u0441\u0435 \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435 - \u044d\u0442\u043e \u0440\u0430\u0440\u0438\u0442\u0435\u0442\u043d\u044b\u0435 \u043c\u0430\u0448\u0438\u043d\u044b, \u0431\u043e\u043b\u0435\u0435 \u0442\u043e\u0433\u043e 1 \u0438\u0437 test, 1 \u0438\u0437 train, \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c.","313d2f7a":"\u041c\u043e\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438:\n- \u0444\u043b\u0430\u0433 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e \u0430\u0432\u0442\u043e: \u0437\u0430 \u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440 \u0432\u0437\u044f\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `data['brand'].value_counts() > data['brand'].value_counts().values.mean()`\n- \u043e\u0431\u044b\u0447\u043d\u043e \u043d\u0430 \u0446\u0435\u043d\u0443 \u0441\u0438\u043b\u044c\u043d\u043e \u0432\u043b\u0438\u044f\u0435\u0442 \u043a\u043b\u0430\u0441\u0441 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f (`brand` + `bodyType`) \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 \u0433\u043b\u0430\u0432\u043d\u044b\u0445 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442.\n\n\u0422\u0430\u043a\u0436\u0435 \u0432 train \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0432\u0443\u0435\u0442 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0440\u0435\u043d\u0434\u043e\u0432, \u0447\u0435\u043c \u0432 \u0442\u0440\u0435\u0439\u043d\u0435. \u0423\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432.","80bb9123":"#### \u0427\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435: \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435, \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0438\u043c\u043e\u0441\u0442\u0438\n\n###### \u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u043d\u0438\u0435 \u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432.","27fee38d":"**`enginePower`**\n\n\u041c\u043e\u0449\u043d\u043e\u0441\u0442\u044c \u043b.\u0441.","abd39fe8":"### 13.2 Xgboosting, ExtraTreesRegressor+CatBoostRegressor","ead01008":"**`driveSide`**\n\n\u0420\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0440\u0443\u043b\u044f","3381d26c":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0442\u0430\u043a\u0438\u043c \u0436\u0435 \u0441\u043f\u043e\u043e\u0441\u0431\u043e\u043c \u043d\u0430 495 \u0441\u0442\u0440\u043e\u043a, \u0433\u0434\u0435 \u0435\u0441\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u043f\u043e `mileage`, `drivetran`, `model`, `driveSide`.","aa041eef":"\u0423 65% \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0432\u0443\u0435\u0442. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u0433\u0438\u043f\u043e\u0442\u0435\u0437\u0443, \u0447\u0442\u043e \u0435\u0441\u0442\u044c \u043a\u0430\u043a\u0430\u044f-\u0442\u043e \u0432\u0437\u0430\u0438\u043c\u043e\u0441\u0432\u044f\u0437\u044c \u043c\u0435\u0436\u0434\u0443 `ownershipTimeMonths` \u0438 `productionDate`. \u041f\u043e\u0438\u0441\u0441\u043b\u0435\u0434\u0443\u0435\u043c, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c, \u043c\u043e\u0436\u0435\u043c \u043b\u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438.","3fd03713":"\u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u043e\u0447\u0435\u043d\u044c \u0442\u0440\u0443\u0434\u043e\u0437\u0430\u0442\u0440\u0430\u0442\u043d\u043e\u0435 \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043c\u043e \u043d\u0435 \u043d\u0430 \u0432\u0441\u0435\u0445 \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u044f\u0445, \u0442\u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0440\u0438\u0440\u0443\u0435\u043c \u043a\u043e\u0434, \u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u0440\u0438\u043b\u0430\u0433\u0430\u0435\u043c \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u043e\u043c.\n\n![photo_2021-09-08_13-19-36.jpg](attachment:659961c3-452b-4b14-9abf-74165e96eca5.jpg)\n\n\u0412\u044b\u0432\u043e\u0434: \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f LazyRegressor \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u043b\u0443\u0447\u0448\u0438\u0445 5 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0434\u043b\u044f \u043d\u0430\u0448\u0435\u0433\u043e \u043d\u0430\u0431\u043e\u0440\u0430 \u0434\u0430\u043d\u043d\u044b\u0445:\n- RandomForestRegressor\n- XGBRegressor\t\n- ExtraTreesRegressor\n- BaggingRegressor\t\n- HistGradientBoostingRegressor\n\n\u0412 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u043a\u0430\u0436\u0434\u0443\u044e \u0438\u0437 \u043c\u043e\u0434\u0435\u043b\u0435\u0439, \u0447\u0442\u043e\u0431\u044b \u043d\u0430\u0439\u0442\u0438 \u043b\u0443\u0447\u0448\u0443\u044e.","7b8d5bbc":"<img src=\"https:\/\/whatcar.vn\/media\/2018\/09\/car-lot-940x470.jpg\"\/>\n\n# \u041f\u0440\u043e\u0433\u043d\u043e\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u0438 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f \u043f\u043e \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0430\u043c\n\n* \u0420\u0430\u0431\u043e\u0442\u0443 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043b\u0438 \u041b\u044e\u0434\u043c\u0438\u043b\u0430 \u0413\u0440\u0438\u0433\u043e\u0440\u044c\u0435\u0432\u0430 \u0438 \u042e\u043b\u0438\u044f \u0413\u0438\u043b\u044c\n* \u0413\u0440\u0443\u043f\u043f\u0430 DSPR-28\n* \u0414\u0430\u0442\u0430 \u0441\u0434\u0430\u0447\u0438 08.09.2021","e94924a4":"\u0414\u0435\u0442\u0430\u043b\u044c\u043d\u0435\u0435 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a \u043f\u0430\u0434\u0430\u0435\u0442 \u0446\u0435\u043d\u0430 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 `productionDate`.","2ae975e4":"\u041e\u0433\u0440\u043e\u043c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439, \u043c\u043d\u043e\u0433\u0438\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0435\u0434\u0438\u043d\u0438\u0447\u043d\u044b\u043c\u0438 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f\u043c\u0438 => \u043f\u0435\u0440\u0435\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438, \u0443\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u044c \u0438\u0445 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e, \u043f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437.","1e7326d7":"**One-Hot Encoding**","3a7abca5":"#### \u0410\u043d\u0430\u043b\u0438\u0437 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 `price`","99b46dfc":"\u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0440\u0438\u0439: \u0446\u0435\u043d\u0430, \u043f\u0435\u0440\u0435\u0432\u0435\u0434\u0435\u043d\u043d\u0430\u044f \u0432 USD \u043d\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u043b\u0430 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u0440\u043e\u0441\u0442\u0430 \u043c\u0435\u0442\u0440\u0438\u043a\u0438, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0431\u0440\u0430\u043b\u0438 \u043e\u0431\u044b\u0447\u043d\u0443\u044e \u0446\u0435\u043d\u0443.","98541eb6":"# <a id=\"13\"><\/a> 13. MODEL 8. StackingRegressor","1bf6672f":"**`ownersCount`**\n\n\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432.","965e447f":"####   \u0412\u044b\u0434\u0435\u043b\u0438\u043c \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e \u0438 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u0438","8b1519b3":"\u0421\u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043a\u043e\u043b\u043b\u0438\u043d\u0435\u0430\u0440\u043d\u044b. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0432\u044b\u0441\u0442\u0430\u0432\u0438\u043c \u043a\u0440\u0438\u0442\u0435\u0440\u0438\u0439 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0438 \u0431\u043e\u043b\u044c\u0448\u0435 0.8 \u0438\u043b\u0438 -0.8.","a8c33242":"\u0413\u043e\u0434\u044b - \u0446\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430. \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c train \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 int.","33695017":"\u0412\u044b\u0432\u043e\u0434: \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u043b\u043e \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043a \u0431\u043e\u043b\u0435\u0435 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u043c\u0443 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044e. \u041e\u0441\u0442\u0430\u0432\u0438\u043c \u0432 \u0442\u0430\u043a\u043e\u043c \u0432\u0438\u0434\u0435.","119241c1":"**`carNovelty`**\n\n\u041d\u043e\u0432\u0438\u0437\u043d\u0430 \u043c\u0430\u0448\u0438\u043d\u044b: \u0447\u0435\u0440\u0435\u0437 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043b\u0435\u0442 \u043f\u043e\u0441\u043b\u0435 \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438 \u0430\u0432\u0442\u043e \u0431\u044b\u043b\u0430 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0430 \u043c\u0430\u0448\u0438\u043d\u0430. ","1b9a8254":"\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b, \u0446\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430, \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043c \u0432 train \u043a int.","3f817dea":"# <a id=\"3\"><\/a> 3. EDA AND BASIC DATA CLEANING\n\n\u041f\u0440\u043e\u0432\u0435\u0434\u0435\u043c \u0430\u043d\u0430\u043b\u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445, \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043f\u0440\u0435\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0438\u043d\u0433 \u0434\u0430\u043d\u043d\u044b\u0445.\n\n### <a id=\"3.1\"><\/a>3.1 \u0423\u043d\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432  \u0432 test, train, train_new  \u0438 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\n\n#### \u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u0443\u0435\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0441 \u043a\u0438\u0440\u0438\u043b\u043b\u0438\u0446\u044b \u043d\u0430 \u043b\u0430\u0442\u0438\u043d\u0438\u0446\u0443","1c2d030e":"**`condition`**\n\n\u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f: 0 - \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u043c\u043e\u043d\u0442\u0430 , 1 - \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u043c\u043e\u043d\u0442\u0430.","9d588107":"**enginePower**\n\n\u041d\u0443\u0436\u043d\u043e \u043f\u043e\u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0440\u0430\u043d\u043d\u043e\u0435 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u0438.","efc6bad0":"\u0414\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0432\u0441\u0435\u0433\u043e \u0442\u0435\u043a\u0441\u0442\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043d\u0435\u0442, \u043d\u043e \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0438\u0437\u0432\u043b\u0435\u0447\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0441\u043b\u043e\u0432 \u0432 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0438.","ce466cf6":"\u0412\u044b\u0432\u043e\u0434: \n- \u0412\u044b\u0431\u0440\u043e\u0441\u044b \u043f\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0443 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u043a\u0430\u043a \u0432 train, \u0442\u0430\u043a \u0438 \u0432 test \u0447\u0430\u0441\u0442\u0438. \u0423\u0434\u0430\u043b\u044f\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438 \u043d\u0435\u043b\u044c\u0437\u044f, \u0442.\u043a. \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u043f\u043e \u0431\u043e\u043b\u044c\u0448\u0438\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c mileage\n- \u0426\u0435\u043d\u0430 \u0432\u0430\u0440\u044c\u0442\u0440\u0443\u0435\u0442\u0441\u044f \u0438 \u0441\u043d\u0438\u0436\u0430\u0435\u0442\u0441\u044f \u0441 \u0443\u0432\u0435\u043b\u0438\u0447\u0435\u043d\u0438\u0435\u043c \u043f\u0440\u043e\u0431\u0435\u0433\u0430, \u043d\u043e \u0435\u0441\u0442\u044c \u0438 \u0443\u0432\u0435\u043b\u0438\u0447\u0435\u043d\u0438\u0435 \u0446\u0435\u043d\u044b \u043d\u0430 \u043c\u0430\u043a\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u0445 \u043f\u0440\u043e\u0431\u0435\u0433\u0430 (\u0440\u0430\u0440\u0438\u0442\u0435\u0442\u043d\u044b\u0435 \u0430\u0432\u0442\u043e?), \u0437\u0430\u043c\u0435\u043d\u044f\u0442\u044c \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043d\u0430 \u0434\u0440\u0443\u0433\u0443\u044e \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0443 \u043d\u0435 \u0441\u0442\u043e\u0438\u0442\n- \u041c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e.\n\n\u0420\u0435\u0437\u044e\u043c\u0435: \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c.","d339ac88":"**`tcp`**\n\n\u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b \u041f\u0422\u0421","1e15d7fc":"#### Log Traget","5e99788f":"**`color`**\n\n\u0415\u0441\u0442\u044c \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435 \u0446\u0432\u0435\u0442\u0430 (\u0447\u0435\u0440\u043d\u044b\u0439, \u0431\u0435\u043b\u044b\u0439, \u0441\u0435\u0440\u044b\u0439, \u0441\u0435\u0440\u0435\u0431\u0440\u0438\u0441\u0442\u044b\u0439, \u0441\u0438\u043d\u0438\u0439) \u0438 \u0440\u0435\u0434\u043a\u0438\u0435. \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0438 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u0438 \u0446\u0432\u0435\u0442\u0430.","ba341da1":"\u0412\u044b\u0432\u043e\u0434\u044b \u043f\u043e \u0432\u0441\u0435\u043c \u0433\u0440\u0430\u0444\u0438\u043a\u0430\u043c:\n1. \u041f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0432\u0443\u044e\u0442.\n2. \u041e\u0441\u043e\u0431\u043e \u043d\u0435\u0441\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438: \n    - [x] `driveSide` - \u043f\u0440\u0430\u0432\u043e\u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438 \u043c\u0430\u0448\u0438\u043d\u044b \u0432 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0435 => \u043f\u043e\u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c, \u0435\u0441\u0442\u044c \u043b\u0438 \u043b\u0435\u0432\u043e\u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u0432 \u0442\u0435\u0441\u0442\u0435. \u0415\u0441\u043b\u0438 \u043d\u0435\u0442, \u0442\u043e \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\n    - `bodyType` - \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u0438\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043c\u0430\u0448\u0438\u043d, \u043d\u043e boxplot \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0440\u0430\u0437\u043b\u0438\u0447\u0438\u044f \u0438 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u043e \u0446\u0435\u043d\u0430\u043c. \u0418\u0434\u0435\u044f \u0441\u0445\u043b\u043e\u043f\u043d\u0443\u0442\u044c \u043c\u0430\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u0432 other \u043a\u0430\u0436\u0435\u0442\u0441\u044f \u043d\u0435 \u043e\u0447\u0435\u043d\u044c \u0445\u043e\u0440\u043e\u0448\u0435\u0439, \u0442.\u043a. \u0440\u0430\u0437\u0431\u0440\u043e\u0441 \u043c\u0435\u0434\u0438\u0430\u043d\u043d\u044b\u0445 \u0446\u0435\u043d \u043e\u0447\u0435\u043d\u044c \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u0434\u043b\u044f \u044d\u0442\u0438\u0445 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439. \u041e\u0441\u0442\u0430\u0432\u043b\u0438\u043c \u043f\u043e\u043a\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u043a\u0430\u043a \u0435\u0441\u0442\u044c.\n    - [x] `brand` - \u043c\u043d\u043e\u0433\u043e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439, \u0437\u0430\u043c\u0435\u0442\u043d\u043e, \u0447\u0442\u043e \u0435\u0441\u0442\u044c \u043c\u0430\u0441\u0441\u043e\u0432\u044b\u0435, \u0441\u0440\u0435\u0434\u043d\u0435\u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435 \u0438 \u0440\u0435\u0434\u043a\u0438\u0435 \u0431\u0440\u0435\u043d\u0434\u044b \u0430\u0432\u0442\u043e. \u041f\u043e\u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0438 \u043f\u043e\u0434\u0443\u043c\u0430\u0442\u044c \u043d\u0430\u0434 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c \u043d\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 (\u043f\u0440\u0435\u0441\u0442\u0438\u0436\u043d\u044b\u0435 \u0430\u0432\u0442\u043e\/\u043b\u044e\u043a\u0441, \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435 \u0438 \u0442.\u0434.)\n    - [x] `color` - \u0435\u0441\u0442\u044c \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0435 \u0446\u0432\u0435\u0442\u0430 (\u0447\u0435\u0440\u043d\u044b\u0439, \u0431\u0435\u043b\u044b\u0439, \u0441\u0435\u0440\u044b\u0439, \u0441\u0435\u0440\u0435\u0431\u0440\u0438\u0441\u0442\u044b\u0439, \u0441\u0438\u043d\u0438\u0439) \u0438 \u0440\u0435\u0434\u043a\u0438\u0435. \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0438 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0441\u0442\u0438 \u0446\u0432\u0435\u0442\u0430\n    - [x] `fuelType` - \u0435\u0441\u0442\u044c \u0442\u0438\u043f\u044b \u0442\u043e\u043f\u043b\u0438\u0432\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432 \u044f\u0432\u043d\u043e\u043c \u043c\u0435\u043d\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0435. \u041f\u043e\u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0442\u044c \u0438 \u043f\u043e\u0434\u0443\u043c\u0430\u0442\u044c, \u0441\u0442\u043e\u0438\u0442 \u043b\u0438 \u0434\u0435\u043b\u0430\u0442\u044c \u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0443 \u043d\u0435\u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0442\u043e\u043f\u043b\u0438\u0432\u0430\n    - `tcp` - \u043d\u0435\u0441\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u043d\u043e \u043f\u043e\u043a\u0430 \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u0432 \u043c\u043e\u0434\u0435\u043b\u0438\n    - [x] `model` - \u043e\u0447\u0435\u043d\u044c \u043c\u043d\u043e\u0433\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439, \u043f\u043e\u0434\u0443\u043c\u0430\u0442\u044c, \u043c\u043e\u0436\u043d\u043e \u043b\u0438 \u043a\u0430\u043a-\u0442\u043e \u0434\u043e\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a. \u041f\u043e\u0434\u0443\u043c\u0430\u0442\u044c \u043f\u0440\u043e \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 brand + model\n    - [x] `numberOfDoors` - \u043c\u0430\u043b\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0432 0-3 - \u0438\u0437\u0443\u0447\u0438\u0442\u044c \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u0435\u0435\n\n3. \u0421\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0441 \u0437\u0430\u043c\u0435\u0442\u043d\u043e \u043f\u0440\u0435\u0432\u0430\u043b\u0438\u0440\u0443\u044e\u0449\u0438\u043c \u043a\u043b\u0430\u0441\u0441\u043e\u043c:\n    - `ownershipTimeIsNull` - \u0431\u043e\u043b\u044c\u0448\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0431\u0435\u0437 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f\n    - `transmission` - \u0430\u0432\u0442\u043e\u043c\u0430\u0442 \u043f\u0440\u0435\u0432\u0430\u043b\u0438\u0440\u0443\u0435\u0442\n    - `drivertrain` - \u043f\u0435\u0440\u0435\u0434\u043d\u0438\u0439 \u043f\u0440\u0438\u0432\u043e\u0434 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f \u0447\u0430\u0449\u0435 \u0432\u0441\u0435\u0433\u043e\n    - `vendor` - \u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 \u0435\u0432\u0440\u043e\u043f\u0435\u0439\u0441\u043a\u043e\u0433\u043e \u0440\u0435\u0433\u0438\u043e\u043d\u0430\n    - `ownersCount` - \u043f\u0440\u0438\u0432\u0430\u043b\u0438\u0440\u0443\u0435\u0442 3 \u0438 \u0431\u043e\u043b\u0435\u0435.\n4. \u041d\u0435\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438: `conditions`, `customs` - \u043f\u043e\u0441\u043b\u0435 \u043c\u0430\u043d\u0438\u043f\u0443\u043b\u044f\u0446\u0438\u0439 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0432 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u0445 \u043e\u0441\u0442\u0430\u043b\u043e\u0441\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435. \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u0438\u0437 \u0430\u043d\u0430\u043b\u0438\u0437\u0430.\n5. \u0417\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u0441 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439:\n    - `ownershipTimeIsNull`: \u043c\u0430\u0448\u0438\u043d\u044b \u0431\u0435\u0437 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u0432 \u0441\u0440\u0435\u0434\u043d\u0435\u043c \u0434\u0435\u0448\u0435\u0432\u043b\u0435, \u0447\u0435\u043c \u043c\u0430\u0448\u0438\u043d\u044b \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f\n    - `driveSide`: \u0430\u0432\u0442\u043e \u0441 \u043f\u0440\u0430\u0432\u043e\u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u043c \u0440\u0443\u043b\u0435\u043c \u0432 \u0441\u0440\u0435\u0434\u043d\u0435\u043c \u0434\u0435\u0448\u0435\u0432\u043b\u0435 \u043c\u0430\u0448\u0438\u043d \u0441 \u043b\u0435\u0432\u043e\u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u043c \u0440\u0443\u043b\u0435\u043c\n    - `transmission`: \u0430\u0432\u0442\u043e \u0441 \u0410\u0422 \u043a\u043e\u0440\u043e\u0431\u043a\u043e\u0439 \u043d\u0430\u043c\u043d\u043e\u0433\u043e \u0434\u043e\u0440\u043e\u0436\u0435 MT, \u043a\u0430\u043a \u0438 \u0441\u0430\u043c \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u0446\u0435\u043d\n    - `bodyType`: \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0432\u043b\u0438\u044f\u0435\u0442 \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0446\u0435\u043d\n    - `brand`: \u0431\u043e\u043b\u044c\u0448\u0430\u044f \u0440\u0430\u0437\u0431\u0435\u0436\u043a\u0430 \u0446\u0435\u043d \u043e\u0442 \u0431\u0440\u0435\u043d\u0434\u0430. \u0412\u044b\u0434\u0435\u043b\u044f\u044e\u0442\u0441\u044f \u043f\u0440\u0435\u0441\u0442\u0438\u0436\u043d\u044b\u0435 \u0430\u0432\u0442\u043e (porche, Cadillac, bmw, and Rover, Lexus \u0438 \u0434\u0440), \u0430 \u0435\u0441\u0442\u044c \u0434\u0435\u0448\u0435\u0432\u044b\u0439 \u0441\u0435\u0433\u043c\u0435\u043d\u0442 (\u0430\u0437\u0438\u0430\u0442\u0441\u043a\u0438\u0435 \u0430\u0432\u0442\u043e - Cherry, Daewoo, Great wall \u0438 \u0434\u0440.). \u0422\u0430\u043a\u0436\u0435 \u0432\u0438\u0434\u043d\u044b \u0431\u0440\u0435\u043d\u0434\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b\u043f\u0443\u0441\u043a\u0430\u044e\u0442 \u0434\u043e\u0440\u043e\u0433\u0438\u0435 \u0430\u0432\u0442\u043e, \u043d\u043e \u0438 \u0435\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u043b\u044f \u0431\u043e\u043b\u0435\u0435 \u0434\u0435\u0448\u0435\u0432\u043e\u0433\u043e \u0441\u0435\u0433\u043c\u0435\u043d\u0442\u0430.\n    - `color`: \u0446\u0435\u043d\u044b \u0437\u0430\u0432\u0438\u0441\u044f\u0442 \u043e\u0442 \u0446\u0432\u0435\u0442\u0430, \u043d\u043e \u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u0446\u0435\u043d\u044b \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0443 \u0446\u0432\u0435\u0442\u043e\u0432, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0430\u0432\u0442\u043e \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0431\u043e\u043b\u044c\u0448\u0435. \n    - `fuelType`: \u043e\u0447\u0435\u043d\u044c \u0434\u043e\u0440\u043e\u0433\u0438\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u044d\u043b\u0435\u043a\u0442\u0440\u043e \u0438 \u0434\u0438\u0437\u0435\u043b\u044c, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0434\u0435\u043b\u0438\u0442\u044c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u0447\u0442\u043e \u043c\u0430\u0448\u0438\u043d\u0430 \u201c\u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043a\u0430\u0440\u201d\n    - `drivetrain`: \u043f\u043e\u043b\u043d\u043e\u043f\u0440\u0438\u0432\u043e\u0434\u043d\u044b\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u0434\u043e\u0440\u043e\u0436\u0435 \u0432\u0441\u0435\u0445, \u0437\u0430\u0434\u043d\u0435\u043f\u0440\u0438\u0432\u043e\u0434\u043d\u044b\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u0432 \u0441\u0440\u0435\u0434\u043d\u0435\u043c \u0434\u0435\u0448\u0435\u0432\u043b\u0435 \u043f\u0435\u0440\u0435\u0434\u043d\u0435\u043f\u0440\u0438\u0432\u043e\u0434\u043d\u044b\u0445\n    - `tcp:` \u0430\u0432\u0442\u043e \u0441 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u043e\u043c \u041f\u0422\u0421 \u0434\u0435\u0448\u0435\u0432\u043b\u0435 \u0447\u0435\u043c \u0442\u0435, \u0447\u0442\u043e \u0441 \u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u043e\u043c\n    - `model` - \u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u043d\u043e\u0433\u043e, \u043d\u043e \u0432\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e \u043a\u043e\u043b\u0435\u0431\u0430\u043d\u0438\u044f \u0446\u0435\u043d\u044b \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043c\u043e\u0434\u0435\u043b\u0438\n    - `vendor`: \u0432 \u0441\u0440\u0435\u0434\u043d\u0435\u043c, \u0435\u0432\u0440\u043e\u043f\u0435\u0439\u0441\u043a\u0438\u0435 \u0438 \u044f\u043f\u043e\u043d\u0441\u043a\u0438\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u0434\u043e\u0440\u043e\u0436\u0435 \u0430\u043c\u0435\u0440\u0438\u043a\u0430\u043d\u0441\u043a\u0438\u0445 \u0438 \u0430\u0437\u0438\u0430\u0442\u0441\u043a\u0438\u0445\n    - `vehicleTransmission`: \u0432 \u0441\u0440\u0435\u0434\u043d\u0435\u043c \u0440\u0430\u0437\u043d\u043e\u0432\u0438\u0434\u043d\u043e\u0441\u0442\u0438 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u043e\u0432 \u043e\u0441\u043e\u0431\u043e \u043d\u0435 \u0432\u043b\u0438\u044f\u044e\u0442 \u043d\u0430 \u0446\u0435\u043d\u0443, \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0438\u043c\u043e\u0441\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u0442\u0435\u0441\u0442\u043e\u043c \u0421\u0442\u044c\u044e\u0434\u0435\u043d\u0442\u0430. \u041f\u043e\u0442\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u043e \u043d\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435.\n    - `numberOfDoors`: \u0432 \u0441\u0440\u0435\u0434\u043d\u0435\u043c \u0441\u0430\u043c\u044b\u0435 \u0434\u043e\u0440\u043e\u0433\u0438\u0435 \u0430\u0432\u0442\u043e - 2-\u0445 \u0434\u0432\u0435\u0440\u043d\u044b\u0435, \u0437\u0430\u0442\u0435\u043c 5-\u0434\u0432\u0435\u0440\u043d\u044b\u0435.\n    - `ownersCount`: \u0447\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0442\u0435\u043c \u043d\u0438\u0436\u0435 \u0441\u0440\u0435\u0434\u043d\u044f\u044f \u0446\u0435\u043d\u0430 \u0430\u0432\u0442\u043e.","ff1f4f11":"\u0412\u044b\u0432\u043e\u0434: \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442, \u043a\u0430\u043a \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0435. \u041c\u043e\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.","818968fb":"**`tcp`**\n\n\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u0433\u0438\u043f\u043e\u0442\u0435\u0437\u0443, \u0447\u0442\u043e:\n- `tcp` \u043f\u0443\u0441\u0442\u043e\u0439 \u0443 \u043d\u043e\u0432\u044b\u0445 \u043c\u0430\u0448\u0438\u043d\n- `tcp` \u043f\u0443\u0441\u0442\u043e\u0439 \u0442\u0430\u043c, \u0433\u0434\u0435 \u044d\u0442\u043e \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442.","1f7abaa4":"#### \u0421\u043e\u0432\u043c\u0435\u0449\u0430\u0435\u043c test, train, train_new \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0438 \u0430\u043d\u0430\u043b\u0438\u0437\u0430","8a8ba508":"\u0412\u044b\u0432\u043e\u0434: \u0434\u0443\u043c\u0430\u043b\u0438, \u0447\u0442\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u044b\u043c, \u0435\u0441\u043b\u0438 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u043f\u0440\u043e\u0431\u0435\u0433 \u043d\u0430 \u0432\u043e\u0437\u0440\u0430\u0441\u0442 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f, \u043d\u043e \u0432\u0441\u0435 \u0440\u0430\u0432\u043d\u043e \u0435\u0441\u0442\u044c \u043f\u0440\u0430\u0432\u044b\u0445 \u0445\u0432\u043e\u0441\u0442. \u041d\u0443\u0436\u043d\u043e \u0438\u043b\u0438 \u0443\u0431\u0440\u0430\u0442\u044c \u0432\u044b\u0431\u0440\u043e\u0441\u044b, \u0438\u043b\u0438 \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u043e\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435.","0995b852":"\u0414\u043e \u0441\u043e\u0432\u043c\u0435\u0449\u0435\u043d\u0438\u044f test \u0438 train \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u043a\u0430\u043a\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043c\u043e\u0436\u0435\u043c \u0438\u0437\u0432\u043b\u0435\u0447\u044c \u0438\u0437 test\/train, \u043f\u043e\u043c\u0438\u043c\u043e \u043a\u043e\u043b\u043e\u043d\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432 \u044f\u0432\u043d\u043e\u043c \u0432\u0438\u0434\u0435 \u043f\u0435\u0440\u0435\u0441\u0435\u043a\u0430\u044e\u0442\u0441\u044f \u043c\u0435\u0436\u0434\u0443 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0430\u043c\u0438.","da87ece3":"#### \u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0438 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435: \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044f \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435\n\n##### \u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\n\n\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432.","77d0a179":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f test, train_new \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 (float).","e3e37fae":"# <a id=\"10\"><\/a> 10. MODEL 5: ExtraTreesRegressor","c13aec3f":"**`enginePower`**\n\n_\u0413\u0440\u0430\u043d\u0438\u0446\u044b \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432: [-24.0, 352.0]._\n\n_\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430: 30.0. \n\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430: 639.0 ._\n\n_\u041d\u0430\u0439\u0434\u0435\u043d\u044b \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043f\u043e \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u0433\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430! \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e: 5633, 4.64%_","a7ba98ed":"**\u0422\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c\u0438 \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u043e\u0432:**","d62cbc8b":"### 13.5 BaggingRegressor(ExtraTreesRegressor), ExtraTreesRegressor+LinearRegression","365965e4":"\u0412\u044b\u0432\u043e\u0434\u044b: \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u0441\u0431\u043e\u0440\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043d\u0430:\n1. \u0415\u0441\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0432 test \u0434\u0430\u043d\u043d\u044b\u0445 - \u043d\u0443\u0436\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c\n2. \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043e \u0432\u0441\u0435\u0433\u043e 12 \u0431\u0440\u0435\u043d\u0434\u043e\u0432 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439\n3. \u041f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b\u0433\u043b\u044f\u0434\u044f\u0442 \u0431\u0435\u0441\u043f\u043e\u043b\u0435\u0437\u043d\u044b\u043c\u0438 \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f - `car_url` (\u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438), `priceCurrencly` (\u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0439 \u0443 \u0432\u0441\u0435\u0445)\n4. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u0442\u044c\u0441\u044f \u0441 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 `complectation_dict`, `description`, `equipment_dict`, `model_info`, `super_gen` - \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c, \u043c\u043e\u0436\u043d\u043e \u043b\u0438 \u0438\u0437\u0432\u043b\u0435\u0447\u044c \u0434\u043e\u043f. \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\n5. `Condition` - \u0443 \u0432\u0441\u0435\u0445 \"\u0445\u043e\u0440\u043e\u0448\u0435\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\", \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0435\u0441\u043b\u0438 \u0432 train \u0431\u0443\u0434\u0443\u0442 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438 \u0434\u0440\u0443\u0433\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c, \u043c\u043e\u0436\u0435\u0442 \u0432\u043b\u0438\u044f\u0442\u044c \u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043f\u043e \u0446\u0435\u043d\u0435.\n6. `Customs` - \u0443 \u0432\u0441\u0435\u0445 \"\u0440\u0430\u0441\u0442\u043e\u043c\u043e\u0436\u0435\u0442\u043d\", \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0435\u0441\u043b\u0438 \u0432 train \u0431\u0443\u0434\u0443\u0442 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438 \u0434\u0440\u0443\u0433\u0438\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c, \u043c\u043e\u0436\u0435\u0442 \u0432\u043b\u0438\u044f\u0442\u044c \u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043f\u043e \u0446\u0435\u043d\u0435.","927a7c89":"###  <a id=\"3.7\"><\/a> 3.7 \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432\n\n\u041f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043f\u0440\u043e\u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u044b, \u043d\u043e\u0432\u044b\u0435 \u0444\u0438\u0447\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u044b.\n\u041f\u0440\u043e\u0432\u0435\u0434\u0435\u043c \u043f\u043e\u0438\u0441\u043a, \u0430\u043d\u0430\u043b\u0438\u0437 \u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u0434\u043b\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u0438 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432. \u0411\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043d\u0435 \u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0442.\u043a. \u043c\u044b \u0438\u0445 \u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u0440\u0430\u043d\u0435\u0435 \u0438 \u0432 \u043d\u0438\u0445 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u0441\u044f \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f [0, 1].","060f13c2":"\u0418\u0434\u0435\u0438 \u0434\u043b\u044f \u043e\u0431\u043e\u0433\u043e\u0449\u0435\u043d\u0438\u0439 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u043e\u0432, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0431\u0449\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b:\n- [x] Train, Train_new: \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043a\u043e\u043b\u043e\u043d\u043a\u0443 `vendor`, \u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u043b\u043e\u0432\u0430\u0440\u0438\u043a \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0432\u0438\u044f `brand`-`vendor`\n- [x] Train, Train_new: model_name \u0432\u0430\u0436\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f, \u043d\u0443\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u043e\u043b\u043e\u043d\u043a\u0443. \u0412 train \u0442\u0430\u043a\u0430\u044f \u043a\u043e\u043b\u043e\u043d\u043a\u0430 \u0435\u0441\u0442\u044c - \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f model. \u0423\u043d\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u043c\u0435\u043d\u0430, \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a `model` (\u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u0442\u044c \u0432 test). \u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043e \u0432\u044b\u0448\u0435 \u0432 \u043a\u043e\u0434, \u0433\u0434\u0435 \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u044b\u0432\u0430\u043b\u0438\u0441\u044c \u043a\u043e\u043b\u043e\u043d\u043a\u0438.\n- [x] All: \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0432\u0441\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0430\u0440\u0441\u0438\u043b\u0438\u0441\u044c \u0432 \u0440\u0430\u0437\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f, \u0442\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043a\u043e\u043b\u043e\u043d\u043a\u0443 `parsing_date` \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u043e\u0432.\n\n\u0422\u0430\u043a\u0436\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0432 TEST \u043d\u0430\u0439\u0434\u0435\u043d\u043e:\n- \u0412 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0435 `super_gen` \u043c\u043e\u0436\u043d\u043e \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043e\u0441\u0442\u0430\u0432\u0442\u044c 1) acceleration (\u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0440\u0430\u0437\u0433\u043e\u043d\u0430) 2) clearance_min 3) fuel_rate (\u0440\u0430\u0441\u0445\u043e\u0434 \u0442\u043e\u043f\u043b\u0438\u0432\u0430)\n- \u0412 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0435 `equipment_dict` \u043b\u0435\u0436\u0438\u0442 \u043f\u043e\u043b\u0435\u0437\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043f\u0440\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0442\u0430\u0446\u0438\u044e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f. \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c, \u0435\u0441\u0442\u044c \u043b\u0438 \u0447\u0442\u043e-\u0442\u043e \u043f\u043e\u0445\u043e\u0436\u0435\u0435 \u0432 Train.","a2674462":"\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0446\u0435\u043d\u044b \u0441 \u043e\u0447\u0435\u043d\u044c \u0441\u0438\u043b\u044c\u043d\u044b\u043c \u043f\u0440\u0430\u0432\u044b\u043c \u0445\u0432\u043e\u0441\u0442\u043e\u043c, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0434\u043e\u043f. \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u0432\u0437\u044f\u0432 \u043b\u043e\u0433\u043e\u0440\u0438\u0444\u043c \u043e\u0442 \u0446\u0435\u043d\u044b.","6b5eaeed":"### <a id=\"3.4\"><\/a> 3.4 \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432\n\n\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0432\u0446\u0435\u043b\u043e\u043c \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043f\u0443\u0441\u0442\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043c \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044e \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043d\u0438\u043c\u0438.","a8afb18f":"**`ownershipTime`**\n\n\u0412\u0435\u043c\u044f \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u043c. \n\n\u041d\u0435\u0441\u043c\u043e\u0442\u0440\u044f \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442, \u0444\u043e\u0440\u043c\u0430\u0442 \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0432 train \u0438 test \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f.","53cef5ec":"## Additional Data Parsing ","e8ccfdbe":"\u0412 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u0432\u044b\u0432\u0435\u0434\u0435\u043d\u0430 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043f\u043e \u0432\u0441\u0435\u043c \u043f\u0443\u0441\u0442\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0433\u043e \u0440\u0430\u0431\u043e\u0447\u0435\u0433\u043e \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 (`data`).\n\n\u0412\u044b\u0432\u043e\u0434\u044b \u0438 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438:\n1. \u0412 17 \u0441\u0442\u043e\u043b\u0431\u0446\u0430\u0445 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438.\n2. Test:\n    - [x] `tcp`: \u043f\u0440\u043e\u043f\u0443\u0441\u043a \u0432 \u043e\u0434\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438, \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043d\u0430 \u043d\u0435\u0435 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u043e, \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0438\u043b\u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043c\u043e\u0434\u043e\u0439\n    - [x] `ownershipTime`: \u043c\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 (\u043e\u043a\u043e\u043b\u043e 65%), \u043f\u0440\u043e\u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441 \u0447\u0435\u043c \u0441\u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c. \u0415\u0441\u043b\u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f, \u0442\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0438\u0437 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.\n3. Train + Test:\n    - [x] `ownersCount` - \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043c\u0430\u043f\u0438\u043d\u0433 \u0441 \u043c\u0435\u0434\u0438\u0430\u043d\u043e\u0439\/\u043c\u043e\u0434\u043e\u0439 \u043f\u043e \u0433\u0440\u0443\u043f\u043f\u0430\u043c \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0433\u043e\u0434\u0430 \u0432\u044b\u043f\u0443\u0441\u043a\u0430 \u0430\u0432\u0442\u043e. \n    - [x] `price` - \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u043c\u0438 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 \n    - [x] `tcp` - \u043f\u043e\u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0438 \u043f\u043e\u0434\u0443\u043c\u0430\u0442\u044c \u043d\u0430\u0434 \u0441\u043f\u043e\u0441\u043e\u0431\u0430\u043c\u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f.\n    - [x] \u0435\u0441\u0442\u044c \u0440\u044f\u0434 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432, \u0433\u0434\u0435 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0432\u0443\u0435\u0442 \u0440\u043e\u0432\u043d\u043e \u043e\u0434\u0438\u043d \u043f\u0440\u043e\u043f\u0443\u0441\u043a \u0438\u043b\u0438 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0433\u0438\u043f\u043e\u0442\u0435\u0437\u0443, \u0447\u0442\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0432 \u043e\u0434\u043d\u043e\u0439 \u0438 \u0442\u043e\u0439 \u0436\u0435 \u0441\u0442\u0440\u043e\u043a\u0435.\n    - [x] `description` \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043d\u0435 \u0443\u0434\u0430\u0441\u0442\u0441\u044f, \u043a\u043e\u043b\u043e\u043d\u043a\u0430 \u0432 \u0442\u0430\u043a\u043e\u043c \u0432\u0438\u0434\u0435, \u043a\u0430\u043a \u0435\u0441\u0442\u044c, \u0431\u0443\u0434\u0435\u0442 \u0443\u0434\u0430\u043b\u044f\u0442\u044c\u0441\u044f.","984df712":"###### \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u0438 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\n\n\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0431\u043e\u043b\u0435\u0435 \u043f\u0440\u0438\u0441\u0442\u0430\u043b\u044c\u043d\u043e \u043d\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0438\u043b\u0438 \u0438\u0437 \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0438 \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0432\u043e\u0437\u043d\u0438\u043a\u043b\u0438 \u0432\u043e\u043f\u0440\u043e\u0441\u044b\/\u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430.","f4bfbf8f":"\u0412\u044b\u0432\u043e\u0434\u044b:\n1. \u0418\u0437 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 `car_url` \u0432\u0438\u0434\u0438\u043c, \u0447\u0442\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u0441\u043e\u0431\u0438\u0440\u0430\u043b\u0438\u0441\u044c \u0441 \u0441\u0430\u0439\u0442\u0430 auto.ru, \u0431\u0443\u0434\u0435\u043c \u043f\u0430\u0440\u0441\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442\u0442\u0443\u0434\u0430\n2. \u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u043e\u043b\u044f \u0438\u0437 test \u043c\u043e\u0436\u043d\u043e \u043d\u0435 \u043f\u0430\u0440\u0441\u0438\u0442\u044c \u0438 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0434\u0430\u043b\u0435\u0435 \u043f\u0440\u0438 \u0430\u043d\u0430\u043b\u0438\u0437\u0435, \u0442.\u043a. \u043e\u043d\u0438 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438: `car_url` \u0438 `priceCurrency`, \u0442.\u043a. \u0432\u0441\u0435\u0433\u043e \u043e\u0434\u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 (RUB). Car_url \u043e\u0441\u0442\u0430\u0432\u0438\u043c, \u0447\u0442\u043e\u0431 \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043c\u0430\u0448\u0438\u043d\u0435.\n3. \u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u043c\u0441\u044f \u0434\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u0434\u0432\u0443\u043c\u044f \u0432\u0435\u043d\u0434\u043e\u0440\u0430\u043c\u0438: EUROPEAN, JAPANESE, \u0434\u0430\u043b\u0435\u0435 \u043c\u043e\u0436\u043d\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0438\u0442\u044c\n4. \u0426\u0435\u043d\u0443 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f \u0441\u043e\u0431\u0438\u0440\u0430\u0435\u043c \u0432 RUB\n5. \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043f\u043e \u043f\u043e\u043b\u044f\u043c: `bodyType`, `brand`, `car_url`, `color`, `complectation_dict`, `description`, `engineDisplacement`, `enginePower`, `equipment_dict`,`fuelType`, `image`, `mileage`, `modelDate`, `model_info`, `model_name`,`name`, `numberOfDoors`, `parsing_unixtime`, `priceCurrency`,`productionDate`, `sell_id`, `super_gen`, `vehicleConfiguration`,`vehicleTransmission`, `vendor`, `\u0412\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u044b`, `\u0412\u043b\u0430\u0434\u0435\u043d\u0438\u0435`, `\u041f\u0422\u0421`,`\u041f\u0440\u0438\u0432\u043e\u0434`, `\u0420\u0443\u043b\u044c`, `\u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435`, `\u0422\u0430\u043c\u043e\u0436\u043d\u044f`, `sample`, `price`","0263411b":"\u041c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u043c\u043d\u043e\u0433\u043e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438, \u0447\u0442\u043e \u0446\u0435\u043d\u0430 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0430\u0434\u0430\u0435\u0442 \u043f\u043e\u0441\u043b\u0435 3-5 \u043b\u0435\u0442 \u044d\u043a\u0441\u043f\u043b\u0443\u0430\u0442\u0430\u0446\u0438\u0438. \u041d\u0430 \u0433\u0440\u0430\u0444\u0438\u043a\u0430\u0445 \u0434\u0430\u043d\u0430\u044f \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0430 \u0442\u043e\u0436\u0435 \u043f\u0440\u043e\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f. \u0418\u0434\u0435\u0438 \u0434\u043b\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432:\n- `prodDate_3Y` - \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u0447\u0442\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044e \u0443\u0436\u0435 3 \u0433\u043e\u0434\u0430\n- `prodDate_5Y` - \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u0447\u0442\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044e \u0443\u0436\u0435 5 \u043b\u0435\u0442.","e5ad9234":"**`modelDate`**\n\n\u0413\u043e\u0434 \u0432\u044b\u043f\u0443\u0441\u043a\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f.","9ab11365":"####  \u041f\u043e\u0438\u0441\u043a \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0437\u043d\u0430\u0447\u0438\u043c\u044b\u0445 \u0440\u0430\u0437\u043b\u0438\u0447\u0438\u0439 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0442\u0435\u0441\u0442\u0430 \u0421\u0442\u044c\u044e\u0434\u0435\u043d\u0442\u0430\n\n\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0435\u0441\u0442\u044c \u043b\u0438 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0437\u043d\u0438\u0446\u0430 \u0432 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0438 \u0446\u0435\u043d \u043f\u043e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u043c \u0438 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c, \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0442\u0435\u0441\u0442\u0430 \u0421\u0442\u044c\u044e\u0434\u0435\u043d\u0442\u0430. \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u043d\u0443\u043b\u0435\u0432\u0443\u044e \u0433\u0438\u043f\u043e\u0442\u0435\u0437\u0443 \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0446\u0435\u043d \u043f\u043e \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c \u043d\u0435\u0440\u0430\u0437\u043b\u0438\u0447\u0438\u043c\u044b.","19c78be9":"<a id=\"2\"><\/a>\n# 2. DATA AND PRELIMINARY ANALYSIS","ba1cc9b3":"\u0412\u043e \u0432\u0440\u0435\u043c\u044f \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044f \u0432\u0441\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u043b\u0438\u0441\u044c \u043c\u043d\u043e\u0433\u043e \u0440\u0430\u0437. \u0423 \u043d\u0430\u0441 \u0431\u044b\u043b\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 **\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438**:\n1. \u043b\u043e\u0433\u043e\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u043b\u0438 \u043d\u0435\u0442 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\n2. \u0432\u044b\u0431\u043e\u0440 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445: OneHotEncoder, LabelEncoding\n3. \u043f\u0440\u043e\u0432\u043e\u0434\u0438\u0442\u044c \u0438\u043b\u0438 \u043d\u0435\u0442 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0430\u0446\u0438\u044e \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u0434 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435\u043c\n4. \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c \u0442\u0430\u0440\u0433\u0435\u0442\u0430 \u0438\u043b\u0438 \u043d\u0435\u0442\n5. \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0442\u0430\u0440\u0433\u0435\u0442\u0430 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0446\u0435\u043d\u044b \u043a \u0446\u0435\u043d\u0430\u043c 2020 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043a\u0443\u0440\u0441\u0430 \u0434\u043e\u043b\u043b\u0430\u0440\u0430, \u0442.\u0435. \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u0442\u0430\u0440\u0433\u0435\u0442\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c `price_usd`\n6. \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u0438\u043b\u0438 \u043d\u0435 \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u043f\u043e\u0441\u043b\u0435 \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u043a\u0430\u043a\u0438\u0435-\u0442\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438","f3a0b443":"**\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c `vendor` \u0432 train**","1cb25788":"# <a id=\"12\"><\/a> 12. MODEL 7: HistGradientBoostingRegressor","4155190f":"**`price`**","be89b9c9":"\u0412\u044b\u0432\u043e\u0434\u044b:\n1. \u0418\u0437 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043e\u0447\u0435\u043d\u044c \u0441\u0438\u043b\u044c\u043d\u043e\u0435 \u0432\u043b\u0438\u044f\u043d\u0438\u0435 \u0438\u043c\u0435\u0435\u0442 `prodcutionDate`, `mileage`, `enginePower`\n2. \u0418\u0437 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u0438 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u0441\u0430\u043c\u043e\u0435 \u0441\u0438\u043b\u044c\u043d\u043e\u0435 \u0432\u043b\u0438\u044f\u043d\u0438\u0435 \u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 `model`, `brand`, `ownersCount`. \u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0432\u043b\u0438\u044f\u043d\u0438\u0435 \u0443 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 - `rarity`, `descriptionsNull`. ","2d932139":"\u0412\u044b\u0432\u043e\u0434\u044b:\n1. \u041e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043f\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c `modelDate`, `productionDate`, `carNovelty` - \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c, \u0442.\u043a. \u0432 test \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u0431\u044b\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441 \u0440\u0430\u0440\u0430\u0442\u0438\u0442\u043d\u044b\u043c\u0438 \u0430\u0432\u0442\u043e, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c.\n2. \u041f\u043e \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u043c \u0432\u044b\u0431\u0440\u043e\u0441\u0430\u043c \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043c \u0430\u043d\u0430\u043b\u0438\u0437 \u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443.","d4ad0636":"_`train['engineDisplacement']`_\n\n\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u044b\u0442\u0430\u0449\u0438\u0442\u044c \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u044c \u0438\u0437 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u043b\u044f, \u043d\u043e \u0438\u0437\u0432\u043b\u0435\u0447\u044c \u0438\u0437 `engineDisplacement` \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f, \u0437\u0430\u0442\u043e \u0432\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u0435\u0441\u0442\u044c \u0432 \u043f\u043e\u043b\u0435 name, \u0433\u0434\u0435 \u043f\u043e\u0441\u043b\u0435 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0433\u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0435\u043d \u043e\u0431\u044a\u0435\u043c \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \u0447\u0438\u0441\u043b\u0430 \u0441 \u0442\u043e\u0447\u043a\u043e\u0439 (.). ","7a11300e":"\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0441 \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u043e\u043c \u0442\u0430\u0440\u0433\u0435\u0442\u0430 \u0440\u0430\u0437\u043d\u0443\u044e \u0433\u043b\u0443\u0431\u0438\u043d\u0443","2854dd60":"**`color`**\n\n\u0426\u0432\u0435\u0442 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f.","f57f3ffd":"###  <a id=\"3.2\"> 3.2 \u041e\u0447\u0438\u0441\u0442\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445\n\n\u041f\u0440\u043e\u0432\u0435\u0434\u0435\u043c \u0447\u0438\u0441\u0442\u043a\u0443 \u0438 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0443\u044e \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0443 \u0434\u0430\u043d\u043d\u044b\u0445, \u0438\u0441\u0445\u043e\u0434\u044f \u0438\u0437 \u0438\u0434\u0435\u0439 \u0432\u044b\u0432\u043e\u0434\u043e\u0432 \u0432\u044b\u0448\u0435 (\u043f\u0443\u043d\u043a\u0442 3).\n\n- [x] `color`\t- \u043a\u043e\u0434\u044b \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0432 \u0446\u0432\u0435\u0442\u0430\n- [x] `vehicleTransmission` - \u0440\u0443\u0441 \u0438 \u0430\u043d\u0433\u043b \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u0443\u043d\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u0442\u044c\n- [x] `driveSide`\t- \u0440\u0443\u0441 \u0438 \u0430\u043d\u0433\u043b \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u0443\u043d\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u0442\u044c\n- [x] `tcp` - \u0440\u0443\u0441 \u0438 \u0430\u043d\u0433\u043b \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u0443\u043d\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u0442\u044c\n- [x] `bodyType` - \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u043d\u0438\u0436\u043d\u0435\u043c\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0443, \u0442.\u043a. \u0447\u0430\u0441\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u0443\u043a\u0430\u0437\u0430\u043d\u044b \u043f\u043e \u0440\u0430\u0437\u043d\u043e\u043c\u0443.","ebeac994":"**`description`**\n\n\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043f\u043e\u0432\u043d\u0438\u043c\u0430\u0442\u0435\u043b\u044c\u043d\u0435\u0435 \u0438 \u043f\u043e\u0434\u0443\u043c\u0430\u0435\u043c, \u0447\u0442\u043e \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0438\u0437 \u043d\u0435\u0433\u043e \u0438\u0437\u0432\u043b\u0435\u0447\u044c.","6a8a0c4a":"# <a id=\"5\"><\/a> 5. MODEL 1. NAIVE MODEL\n\u042d\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u044c \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0441\u0440\u0435\u0434\u043d\u044e\u044e \u0446\u0435\u043d\u0443 \u043f\u043e \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f (`mileage`). \nC \u043d\u0435\u0439 \u0431\u0443\u0434\u0435\u043c \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0442\u044c \u0434\u0440\u0443\u0433\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438.","ede4b934":"\u0412\u044b\u0432\u043e\u0434: \n- \u0412\u044b\u0431\u0440\u043e\u0441\u044b \u043f\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0443 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u043a\u0430\u043a \u0432 train, \u0442\u0430\u043a \u0438 \u0432 test \u0447\u0430\u0441\u0442\u0438. \n- \u0412\u044b\u0431\u0440\u043e\u0441\u043e\u0432 \u043f\u043e\u0441\u043b\u0435 2500 \u043d\u0435\u043c\u043d\u043e\u0433\u043e, \u043d\u043e \u0446\u0435\u043d\u0430 \u0437\u0430\u043c\u0435\u0442\u043d\u043e \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u043e\u043a\u0430 \u043e\u0441\u0442\u0430\u0432\u0438\u043c \u0431\u0435\u0437 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439\n- \u041c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e.\n\n\u0420\u0435\u0437\u044e\u043c\u0435: \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043f\u043e\u043a\u0430 \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c.","50e7b3e4":"**`customs`**\n\n\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f, \u0440\u0430\u0441\u0442\u043e\u043c\u043e\u0436\u0435\u043d \u043b\u0438 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c: 0 - \u043d\u0435 \u0440\u0430\u0441\u0442\u043e\u043c\u043e\u0436\u0435\u043d, 1 - \u0440\u0430\u0441\u0442\u043e\u043c\u043e\u0436\u0435\u043d.","05ac4bc1":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e mileage \u0438\u043c\u0435\u0435\u0442 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435, \u043d\u0435 \u0441 \u0442\u0430\u043a\u0438\u043c \u0443\u0436 \u0441\u0438\u043b\u044c\u043d\u044b\u043c \u043f\u0440\u0430\u0432\u044b\u043c \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435\u043c, \u0435\u0441\u043b\u0438 \u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043d\u0430 \u0433\u0440\u0430\u0444\u0438\u043a\u0438 \u043f\u043e \u0433\u043e\u0434\u0430\u043c \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0441\u0442\u0432\u0430, \u0430 \u043d\u0435 \u043d\u0430 \u0432\u0441\u0435 \u0447\u0438\u0441\u043b\u0430. \u0427\u0435\u043c\u043c \u0441\u0442\u0430\u0440\u0448\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c, \u0442\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u043f\u0440\u043e\u0431\u0435\u0433 \u0438 \u043c\u044b \u043d\u0430\u0431\u043b\u044e\u0434\u0430\u0435\u043c \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435.\n\n\u0427\u0442\u043e\u0431\u044b \u0441\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0438 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0435\u0433\u043e \u0431\u043e\u043b\u0435\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u044b\u043c \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432: `km_per_year` - \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u043c \u0432 \u0433\u043e\u0434 \u043f\u0440\u043e\u0435\u0437\u0436\u0430\u043b \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c. \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442\u0441\u044f, \u043a\u0430\u043a `mileage`\/`productionDate`(years) \u0438\u043b\u0438 `mileage`\/`ownershipTime`. \u0420\u0435\u0448\u0438\u0442\u044c, \u043a\u0430\u043a\u043e\u0439 \u043c\u0435\u0442\u043e\u0434 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c.","9e1c0425":"\u0418\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e: \u043f\u0440\u043e\u0431\u0435\u0433 \u0432\u0435\u0437\u0434\u0435 \u043f\u043e 0. \u041f\u043e\u0441\u043e\u043c\u0442\u0440\u0438\u043c \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0431\u0435\u0433\u0430 \u043f\u043e \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u0434\u0430\u043d\u043d\u044b\u043c.","196296d4":"**`engineDisplacement`**\n\n\u041e\u0431\u044a\u0435\u043c \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044f \u0432 \u043b\u0438\u0442\u0440\u0430\u0445, \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u043e\u0431\u0449\u0435\u043c\u0443 \u0444\u043e\u0440\u043c\u0430\u0442\u0443 \u0432\u043e \u0432\u0441\u0435\u0445 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430\u0445.","6949c55a":"**`numberOfDoors`**\n\n\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u0432\u0435\u0440\u0435\u0439.","7ceac720":"\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0438\u0437 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a:\n- \u043a\u043e\u0440\u043e\u0431\u043a\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u0447 (\u0430\u0432\u0442\u043e\u043c\u0430\u0442, \u043c\u0435\u0445\u0430\u043d\u0438\u043a\u0430)","8bc6062d":"<table class=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Models\/Metrics<\/th>\n      <th scope=\"col\">LazyPredic MAE<\/th>\n      <th scope=\"col\">Default Settings Train MAPE<\/th>\n      <th scope=\"col\">Default Settings Kaggle  MAPE<\/th>\n      <th scope=\"col\">Tuned Hyperparameter Train MAPE<\/th>\n      <th scope=\"col\">Tuned Hyperparameter Kaggle MAPE<\/th>\n      <th scope=\"col\">Comment<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <th>CatBoost<\/th>\n      <td>-<\/td>\n      <td>12.62%<\/td>\n      <td>13.02%<\/td>\n      <td>12.56%<\/td>\n      <td>13.38%<\/td>\n      <td>tuned: added cat_features_ids<\/td>\n    <\/tr>\n    <tr>\n      <th>RandomForestRegressor<\/th>\n      <td>0.13<\/td>\n      <td>12.89%<\/td>\n      <td>12.12%<\/td>\n      <td>12.84%<\/td>\n      <td>12.05%<\/td>\n      <td>-<\/td>\n    <\/tr>\n    <tr>\n      <th>ExtraTreesRegressor<\/th>\n      <td>0.13<\/td>\n      <td>13.10%<\/td>\n      <th>10.95%<\/th>\n      <td>12.89%<\/td>\n      <td>12.09%<\/td>\n      <td>-<\/td>\n    <\/tr>\n    <tr>\n      <th>XGBRegressor<\/th>\n      <td>0.14<\/td>\n      <td>12.96%<\/td>\n      <td>12.33%<\/td>\n      <td>12.22%<\/td>\n      <th>11.35%<\/th>\n      <td>default model: learning_rate=0.05 best model: max_depth=12 learning_rate=0.05: 12.18%<\/td>\n    <\/tr>\n    <tr>\n      <th>BagginRegressor<\/th>\n      <td>0.13<\/td>\n      <td><\/td>\n      <td><\/td>\n      <td><\/td>\n      <td><\/td>\n      <td><\/td>\n    <\/tr>\n    <tr>\n      <th>BagginRegressor \u0441 ExtraTreesRegressor<\/th>\n      <td>-<\/td>\n      <td>12.92%<\/td>\n      <td>11.92%<\/td>\n      <td>13.12%<\/td>\n      <td>12.42%<\/td>\n      <td>default: \u0431\u0435\u0437 n_estimators tunes: n_estimators = 3<\/td>\n    <\/tr>\n    <tr>\n      <th>BagginRegressor \u0441 RandomForestRegressor<\/th>\n      <td>-<\/td>\n      <td>13.00%<\/td>\n      <td>13.12%<\/td>\n      <td>13.19%<\/td>\n      <td>13.31%<\/td>\n      <td>default: \u0431\u0435\u0437 n_estimators tunes: n_estimators = 3<\/td>\n    <\/tr>\n      <tr>\n      <th>BagginRegressor \u0441 XGBRegressor<\/th>\n      <td>-<\/td>\n      <td>12.18%<\/td>\n      <td>13.31%<\/td>\n      <td>12.29%<\/td>\n      <td>12.07%<\/td>\n      <td>default: \u0431\u0435\u0437 n_estimators tunes: n_estimators = 3<\/td>\n    <\/tr>\n  <tr>\n      <th>HistGradientBoostingRegressor<\/th>\n      <td>0.15<\/td>\n      <td>15.28%<\/td>\n      <td>16.11%<\/td>\n      <td>13.16%<\/td>\n      <td>13.61%<\/td>\n      <td><\/td>\n    <\/tr>\n    <tr>\n      <th>StackingRegressor<\/th>\n      <td><\/td>\n      <td><\/td>\n      <td><\/td>\n      <td><\/td>\n      <td><\/td>\n      <td><\/td>\n    <\/tr>\n    <tr>\n      <th>Xgboosting, ExtraTreesRegressor+LinearRegression<\/th>\n      <td><\/td>\n      <td>12.10%<\/td>\n      <th>10.98%<\/th>\n      <td><\/td>\n      <td><\/td>\n      <td><\/td>\n    <\/tr>\n    <tr>\n      <th>Xgboosting, ExtraTreesRegressor+CatBoostRegressor<\/th>\n      <td><\/td>\n      <td>12.28%<\/td>\n      <td>11.15%<\/td>\n      <td><\/td>\n      <td><\/td>\n      <td><\/td>\n    <\/tr>\n    <tr>\n      <th>RandomForestRegressor, ExtraTreesRegressor+LinearRegression<\/th>\n      <td><\/td>\n      <td>12.64%<\/td>\n      <td>11.19%<\/td>\n      <td><\/td>\n      <td><\/td>\n      <td><\/td>\n    <\/tr>\n    <tr>\n      <th>BaggingRegressor(xgb.XGBRegressor), ExtraTreesRegressor+LinearRegression<\/th>\n      <td><\/td>\n      <td>12.16%<\/td>\n      <td>11.45%<\/td>\n      <td><\/td>\n      <td><\/td>\n      <td><\/td>\n    <\/tr>\n    <tr>\n      <th>BaggingRegressor(ExtraTreesRegressor), ExtraTreesRegressor+LinearRegression<\/th>\n      <td><\/td>\n      <td>12.93%<\/td>\n      <td>11.56%<\/td>\n      <td><\/td>\n      <td><\/td>\n      <td><\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>","f450fd1b":"**`ownersCount`**\n\n\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f (1 - \u043e\u0434\u0438\u043d, 2 - \u0434\u0432\u0430, 3 - 3 \u0438 \u0431\u043e\u043b\u0435\u0435).","ab70e3e3":"**\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432**","f6d39dda":"## <a id=\"4\"><\/a> 4. ML DATA PREPARATION","a059a30b":"\u0412\u044b\u0432\u043e\u0434: \u0435\u0441\u0442\u044c \u043e\u0447\u0435\u043d\u044c \u0434\u043e\u0440\u043e\u0433\u0438\u0435 \u0430\u0432\u0442\u043e, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0438 \u0432 \u0441\u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435.\n\n\u0421\u0430\u043c\u044b\u0439 \u0434\u043e\u0440\u043e\u0433\u043e\u0439 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c - PORSCHE\t918_SPYDER, \u0431\u0440\u0435\u043d\u0434 PORSCHE \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442, \u0443\u0434\u0430\u043b\u0438\u043c \u044d\u0442\u043e\u0442 \u0432\u044b\u0431\u0440\u043e\u0441. UPD: \u0434\u0430\u043d\u043d\u0443\u044e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0437\u0430\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0438, \u0442.\u043a. \u0443\u0445\u0443\u0434\u0448\u0430\u043b\u043e MAPE \u0438 \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u043d\u0430 \u043b\u0438\u0434\u0435\u0440\u0431\u043e\u0440\u0434\u0435.","2485da4e":"\u0412\u0441\u0451 \u044f\u0432\u043d\u043e, \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u044b \u043d\u0435 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u044b, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u044d\u0442\u043e \u043d\u043e\u0432\u044b\u0435 \u0430\u0432\u0442\u043e. \u0417\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 0.","30d4cf02":"**`rarity`** \n\n\u0420\u0430\u0440\u0438\u0442\u0435\u0442\u043d\u044b\u0435 \u0430\u0432\u0442\u043e (\u0431\u043e\u043b\u0435\u0435 30 \u043b\u0435\u0442). \u0421\u0442\u0440\u043e\u0438\u043c \u043d\u0430 \u0431\u0430\u0437\u0435 modelDate.\n\n\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f:\n* 5 - \u0430\u0432\u0442\u043e \u043d\u0435\u0440\u0430\u0440\u0438\u0442\u0435\u0442\u043d\u044b\u0439\n* 4 - Class F \u2014 \u0441 1 \u044f\u043d\u0432\u0430\u0440\u044f 1961 \u043f\u043e 31 \u0434\u0435\u043a\u0430\u0431\u0440\u044f 1970\n* 3 - Class E (Post War) \u2014 \u0441 1 \u044f\u043d\u0432\u0430\u0440\u044f 1946 \u043f\u043e 31 \u0434\u0435\u043a\u0430\u0431\u0440\u044f 1960\n* 2 - Class D (Post Vintage) \u2014 \u0441 1 \u044f\u043d\u0432\u0430\u0440\u044f 1931 \u043f\u043e 31 \u0434\u0435\u043a\u0430\u0431\u0440\u044f 1945\n* 1 - Class C (Vintage) \u2014 \u0441 1 \u044f\u043d\u0432\u0430\u0440\u044f 1919 \u043f\u043e 31 \u0434\u0435\u043a\u0430\u0431\u0440\u044f 1930\n* Class B (Veteran) \u2014 \u0441 1 \u044f\u043d\u0432\u0430\u0440\u044f 1905 \u043f\u043e 31 \u0434\u0435\u043a\u0430\u0431\u0440\u044f 1918 (\u0442\u0430\u043a\u0438\u0445 \u0430\u0432\u0442\u043e \u0432 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u043d\u0435\u0442)\n* 0 - Class A (Ancestor) \u2014 \u0432\u044b\u043f\u0443\u0441\u043a\u0430 \u0434\u043e 31 \u0434\u0435\u043a\u0430\u0431\u0440\u044f 1904 \u0433\u043e\u0434\u0430.","52608b60":"\u0418\u0434\u0435\u0438 \u043f\u043e \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u043d\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043f\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c EDA:\n- [x] `km_per_year` - \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u043c \u0432 \u0433\u043e\u0434 \u043f\u0440\u043e\u0435\u0437\u0436\u0430\u043b \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c. \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442\u0441\u044f, \u043a\u0430\u043a `mileage`\/`productionDate`(years) \u0438\u043b\u0438 `mileage`\/`ownershipTime`. \u0420\u0435\u0448\u0438\u0442\u044c, \u043a\u0430\u043a\u043e\u0439 \u043c\u0435\u0442\u043e\u0434 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\n- [x] `carNovelty` - \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u0447\u0435\u0440\u0435\u0437 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043b\u0435\u0442 \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u0445\u043e\u0434\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 \u0431\u044b\u043b \u0432\u044b\u043f\u0443\u0449\u0435\u043d \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c, \u0442.\u0435. modelDate - productionDate. \u0413\u0438\u043f\u043e\u0442\u0435\u0437\u0430, \u0447\u0442\u043e \u0447\u0435\u043c \u043c\u0435\u043d\u044c\u0448\u0435 \u044d\u0442\u043e \u0447\u0438\u0441\u043b\u043e, \u0442\u0435\u043c \u0432\u044b\u0448\u0435 \u0431\u0443\u0434\u0435\u0442 \u0446\u0435\u043d\u0430\n- [x] `rarity - \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439, \u0447\u0442\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c \u0440\u0430\u0440\u0438\u0442\u0435\u0442\u043d\u044b\u0439 (\u0435\u043c\u0443 \u0431\u043e\u043b\u0435\u0435 30 \u043b\u0435\u0442)\n- [x] `prodDate_3Y` - \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u0447\u0442\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044e \u0443\u0436\u0435 3 \u0433\u043e\u0434\u0430\n- [x] `prodDate_5Y` - \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u0447\u0442\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044e \u0443\u0436\u0435 5 \u043b\u0435\u0442\n- [x] `newCar` - \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0434\u043b\u044f \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e, \u043f\u0440\u043e\u0431\u0435\u0433 \u0440\u0430\u0432\u0435\u043d 0\n- [x] `descriptionIsNull` - \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0438\u043b\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u043e\u0431\u044a\u044f\u0441\u043b\u0435\u043d\u0438\u044f\n- [x] `ownershipTimeIsNull` - \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043e \u043b\u0438 \u0432\u0440\u0435\u043c\u044f \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u0430\u0432\u0442\u043e: 1 - \u043d\u0435 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043e, 0 - \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043e\n- [x] `colorPopular` - \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0434\u043b\u044f \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0447\u0442\u043e \u0430\u0432\u0442\u043e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430: 1 - \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e, 0 - \u043d\u0435\u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e\n- [x] `brandPopular` - \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0434\u043b\u044f \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0447\u0442\u043e \u0430\u0432\u0442\u043e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0439 \u043c\u0430\u0440\u043a\u0438: 1 - \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e, 0 - \u043d\u0435\u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e\n- [x] `modelPopular` - \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0434\u043b\u044f \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0447\u0442\u043e \u0430\u0432\u0442\u043e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u0431\u0440\u0435\u043d\u0434\u0430: 1 - \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e, 0 - \u043d\u0435\u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e","83279e1f":"\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e \u0430\u0432\u0442\u043e: \u0437\u0430 \u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440 \u0432\u0437\u044f\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `data['color'].value_counts() > data['color'].value_counts().values.mean()`\n\n\u041f\u0435\u0440\u0435\u0447\u0435\u043d\u044c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439 \u0446\u0432\u0435\u0442\u043e\u0432 \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u0435\u043d \u0432 `train` \u0438 `test`.","c0095c86":"#### \u041f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 test \u0434\u0430\u043d\u043d\u044b\u0445\n\n\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 test, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c, \u043d\u0430 \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.","0c6f6a73":"4% \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0442\u0435\u0441\u0442\u0435 \u043b\u0435\u0432\u043e\u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0435. \u041e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c, \u043a\u0430\u043a \u0435\u0441\u0442\u044c, \u0442.\u0435. \u043e\u0431\u043e\u0433\u043e\u0442\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043a\u0430 \u043d\u0435 \u043c\u043e\u0436\u0435\u043c.","c0274480":"**\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b:**\n- \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u0434 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435\u043c \u043d\u0435 \u043f\u0440\u0438\u0432\u0435\u043b\u0430 \u043a \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u043c\u0443 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044e \u043c\u0435\u0442\u0440\u0438\u043a\u0438 MAPE, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043e\u0442 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u043e\u0442\u043a\u0430\u0437\u0430\u043b\u0438\u0441\u044c\n- \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0442\u0430\u0440\u0433\u0435\u0442\u0435 `price_usd` \u043d\u0435 \u043f\u0440\u0438\u043d\u0435\u0441\u043b\u043e \u0441\u0438\u043b\u044c\u043d\u043e\u0433\u043e \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u043d\u0430 kaggle, \u0440\u0435\u0448\u0435\u043d\u043e \u0431\u044b\u043b\u043e \u043e\u0442 \u043d\u0435\u0433\u043e \u043e\u0442\u043a\u0430\u0437\u0430\u0442\u044c\u0441\u044f\n- \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u0430\u043a\u0438\u0445-\u043b\u0438\u0431\u043e \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432, \u043a\u0440\u043e\u043c\u0435 \u043a\u0430\u043a \u0441\u0438\u043b\u044c\u043d\u043e \u043a\u043e\u043b\u043b\u0438\u043d\u0435\u0430\u0440\u043d\u044b\u0445 \u0438\u043b\u0438 \u0441 \u0431\u043e\u043b\u044c\u0448\u0438\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432, \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u0443\u0445\u0443\u0434\u0448\u0438\u043b\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0443 MAPE, \u043e\u0442\u043a\u0430\u0437\u0430\u043b\u0438\u0441\u044c \u043e\u0442 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0438\u0437 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f.","de766a16":"\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u0430 \u0431\u0430\u0437\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u043a\u043e\u043b\u043e\u043d\u043a\u0443, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u043e\u043c\u0435\u0441\u0442\u0438\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u043c\u0435\u0441\u044f\u0446\u0435\u0432 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u043c.","7e28cecb":"**`ownershipTimeIsNull`**\n\n\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043e \u043b\u0438 \u0432\u0440\u0435\u043c\u044f \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u0430\u0432\u0442\u043e:\n- 1 - \u043d\u0435 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043e\n- 0 - \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043e.","5474dff9":"## Setup","1cd94e03":"**mileage**\n\n\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u043e\u0438\u0441\u0441\u043b\u0435\u0434\u0443\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a.","83f8ceab":"**`bodyType`**\n\n\u0422\u0438\u043f \u043a\u0443\u0437\u043e\u0432\u0430.","de4acfc1":"## Data Storage","573dad12":"\u0412\u044b\u0432\u043e\u0434\u044b:\n1. \u0421\u0443\u043c\u043c\u0430\u0440\u043d\u043e 261749 \u0441\u0442\u0440\u043e\u043a\u0438, 6.1% \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432, 53.1 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u043e\u0432. \u0414\u0430\u043d\u043d\u044b\u0435 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \"\u0447\u0438\u0441\u0442\u044b\u0435\", \u043f\u0440\u0438\u0433\u043e\u0434\u043d\u044b \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b.\n2. \u0412 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435 27 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432. \u0422\u0438\u043f\u044b \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445: \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 - 7, \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 - 18, \u043d\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 - 1.\n3. \u0418\u0434\u0435\u0438 \u043f\u043e \u043e\u0447\u0438\u0441\u0442\u043a\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u0445 \u0438 \u0432\u043e\u043f\u0440\u043e\u0441\u044b \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445:\n    - `bodyType` - \u0443\u0431\u0440\u0430\u0442\u044c \u0432\u0435\u0440\u0445\u043d\u0438\u0439 \u0438 \u043d\u0438\u0436\u043d\u0438\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440, \u0441\u043e\u043a\u0440\u0430\u0442\u0438\u0442\u044c \u043a\u043e\u043b-\u0432\u043e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439, \u0443\u0431\u0440\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u0434\u0432\u0435\u0440\u0435\u0439, \u0442\u043a \u0435\u0441\u0442\u044c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a `numberOfDoors`.\n    - `color`\t- \u043a\u043e\u0434\u044b \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0432 \u0446\u0432\u0435\u0442\u0430\n    - `fuelType` - \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u0442\u0430\u043a\u043e\u0435 \u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b\n    - `vehicleTransmission` - \u0440\u0443\u0441 \u0438 \u0430\u043d\u0433\u043b \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u0443\u043d\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u0442\u044c\n    - `numberOfDoors` - \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u0442\u044c\u0441\u044f \u0441 \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043e\u043c 0 \u0434\u0432\u0435\u0440\u0435\u0439\n    - `driveSide` - \u0440\u0443\u0441 \u0438 \u0430\u043d\u0433\u043b \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u0443\u043d\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u0442\u044c\n    - `tcp` - \u0440\u0443\u0441 \u0438 \u0430\u043d\u0433\u043b \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u0443\u043d\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u0442\u044c\n    - `description` - \u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435, \u043d\u043e \u043c\u043e\u0436\u043d\u043e \u0438\u0437\u0432\u043b\u0435\u0447\u044c \u043d\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\n    - `ownershipTime` - \u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442 \u043d\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435, \u0442.\u043a. \u043c\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432\n    - `price` - \u0435\u0441\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438, \u0442.\u043a. \u0446\u0435\u043b\u0435\u0432\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u043d\u0435 \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c, \u0430 \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0438.\n \n4. \u041f\u0440\u0438\u0437\u043d\u0430\u043a\u0438-\u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u044b \u043d\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435:\n    - `vehicleConfiguration` - \u0434\u0443\u0431\u043b\u0438\u0440\u0443\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0438\u0437 \u043a\u043e\u043b\u043e\u043d\u043e\u043a `vehicleTransmission`, `engineDisplacement`, `bodyType` \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432.\n    - `name` - \u0434\u0443\u0431\u043b\u0438\u0440\u0443\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0438\u0437 \u043a\u043e\u043b\u043e\u043d\u043e\u043a `engineDisplacement`, `vehicleTransmission`, `enginePower`, `drivetrain`. \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432\n5. price - \u0435\u0441\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0438 \u0438\u0437 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438.\n6. \u041a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437:\n     - \u0435\u0441\u0442\u044c \u043a\u043e\u043b\u0438\u043d\u0435\u0430\u0440\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438:\n         - (`productionDate` - `modelDate`, `mileage` - `modelDate`\/`productionDate`, `ownersCount` - `modelDate`\/`productionDate`). \u041b\u043e\u0433\u0438\u0447\u043d\u043e, \u0447\u0442\u043e \u0434\u0430\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438 \u0434\u0430\u0442\u0430 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0441\u0442\u0432\u0430 \u0441\u0432\u044f\u0437\u0430\u043d\u044b, \u0442\u0430\u043a\u0436\u0435 \u0447\u0435\u043c \u0441\u0442\u0430\u0440\u0448\u0435 \u043c\u0430\u0448\u0438\u043d\u0430, \u0442\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u043f\u0440\u043e\u0431\u0435\u0433 \u0438 \u0442\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0442\u0441\u0432\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0430\u0432\u0442\u043e)\n         - `conditions, customs - \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u0442\u043d\u044b\u0435 \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u044b, \u043d\u0443\u0436\u043d\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c.\n7. \u041d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u0432 \u043a\u043e\u043b\u043e\u043d\u043a\u0430\u0445 `ownershipCount`, `ownersCount`. \u041c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e, \u0438\u0441\u0445\u043e\u0434\u044f \u0438\u0437 \u0434\u0430\u0442\u044b \u0432\u044b\u043f\u0443\u0441\u043a\u0430 (\u0442.\u043a. \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0441\u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u044b).","881a57bd":"# <a id=\"0\"><\/a>TABLE OF CONTENTS\n\n0. [TABLE OF CONTENTS](#0)\n1. [IMPORT, FUNCTIONS, SETUP](#1)\n2. [DATA AND PRELIMINARY ANALYSIS](#2)\n3. [EDA AND BASIC DATA CLEANING](#3) \n    - [\u0423\u043d\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 test, train, train_new \u0438 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435](#3.1)\n    - [\u041e\u0447\u0438\u0441\u0442\u043a\u0430 \u0434\u0430\u043d\u044b\u0445](#3.2)\n    - [\u0414\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b](#3.3)\n    - [\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432](#3.4)\n    - [\u0414\u0435\u0442\u0430\u043b\u044c\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432](#3.5)\n    - [\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432](#3.6)\n    - [\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u043e\u0432](#3.7)\n    - [\u041e\u0442\u0431\u043e\u0440 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f](#3.8)\n    - [\u041f\u0440\u0435\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0438\u043d\u0433 \u043f\u0435\u0440\u0435\u0434 \u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c](#3.9)\n\n4. [ML DATA PREPARATION](#4)\n5. [M1: NAIVE MODEL](#5)\n6. [M2: CatBoost](#6)\n7. [LazyPredict](#7)\n8. [M3: RandomForestRegressor](#8)\n9. [M4: XGBRegressor](#9)\n10. [M5: ExtraTreesRegressor](#10)\n11. [M6: BaggingRegressor](#11)\n12. [M7: HistGradientBoostingRegressor](#12)\n13. [M8: StackingRegressor](#13)\n14. [MODEL SELECTION](#14)\n15. [SUBMISSION](#15)\n16. [SUMMARY](#16)","ffc2b9bf":"\u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e, \u0432 \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u043e\u0447\u0435\u043d\u044c \u043c\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432, \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u043c\u0430\u0448\u0438\u043d\u0430 1989, \u043d\u0435\u0434\u043e\u0440\u043e\u0433\u0430\u044f. \u0423\u0434\u0430\u043b\u044f\u0435\u043c."}}