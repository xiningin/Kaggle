{"cell_type":{"670278be":"code","bfddb3a1":"code","c834bde6":"code","6f482045":"code","b5b96d2b":"code","e1f5c419":"code","9608b515":"code","e43deea2":"code","b0776bbf":"code","8e93c963":"code","502c11df":"code","86938535":"code","56850db2":"code","a73337f9":"code","548834f3":"code","7644efc5":"code","4e38d925":"code","1c5fdb8f":"code","895161e3":"code","ee6b2923":"code","30556b9e":"code","352e1b3b":"code","b4fa0a88":"code","ffdb219f":"code","4cd35601":"code","ab95f7e5":"code","e5426e78":"code","3b36ff35":"code","8bc552a7":"code","f2a0cc88":"code","86d55724":"code","df85343a":"code","08a79792":"code","ed3380f5":"code","3cecd1bb":"code","f086fd3b":"code","e39438c7":"code","104262a5":"code","f45413b0":"code","3e6b2f81":"code","4768e9f2":"code","d8e39fb2":"code","16955a9a":"code","ffe8b937":"code","67a833c3":"code","753a5bd6":"code","9d92a0da":"code","7ca385d4":"code","ccc26952":"code","b755f066":"code","22871f7c":"code","3e71928e":"code","ff679683":"code","e96e0abe":"code","bc882ed3":"code","340fa0bc":"code","1843b9c6":"code","acbb6f07":"code","42f9b4d2":"code","c2e29829":"code","1dcc0d0b":"code","d1d1c70f":"code","d4d7fc51":"code","617eb6f2":"code","d6d1e937":"code","db7dea59":"code","dfb46f56":"code","621da4f8":"code","51e5a1b0":"code","4d084c51":"code","47eed133":"code","b5e7191e":"code","38e494ef":"code","c15fa542":"code","f5a72e89":"code","dbd13227":"code","f107660b":"code","8c6dcb06":"code","4f5a4ca2":"code","b3aaab95":"code","2b307de2":"code","a0a3c567":"code","3f956c4b":"code","838dd875":"code","99929249":"code","a1c315a0":"code","dcd6c8d6":"code","2f57e528":"code","ebc92aa9":"code","aac02aab":"code","2941c867":"code","d169255d":"code","0905ffc3":"code","20cdf538":"code","2aed56ec":"code","bc8a182c":"code","cdc22b57":"code","48acb670":"code","38ffe084":"code","fc262d2c":"code","21e76ea2":"code","2db63789":"code","c5d594d3":"code","6f6b0cd4":"code","46f80013":"code","c9fd964d":"code","2d708c30":"code","31130db8":"code","20aa2d91":"code","bf1ba43b":"code","096188ad":"code","f791af29":"code","b2d61422":"code","e7a8045b":"code","89a9f2bc":"code","2495a233":"code","43d664d2":"code","7ef9b2e5":"code","7a2796ab":"code","12ca73ed":"code","c759adae":"code","ddadc0e8":"code","e7a5b6ee":"code","8a933672":"code","926fa086":"markdown","26640831":"markdown","7a856640":"markdown","90ac0157":"markdown","47548c9e":"markdown","3cf9a604":"markdown","c1ff6191":"markdown","5178300a":"markdown","811e8ce3":"markdown","5984583d":"markdown","3eb07b22":"markdown","b6f9f547":"markdown","ca06f65b":"markdown","a8b9e6a3":"markdown","1a6254e6":"markdown","37a97655":"markdown","25485423":"markdown","084b1fe8":"markdown","240ad017":"markdown","1bf54ab0":"markdown","3598f76f":"markdown","7ab85657":"markdown","36ebc49b":"markdown","6f475918":"markdown","a597586a":"markdown","8e47ac83":"markdown","4ef1821b":"markdown","7774f84f":"markdown","66c64a6d":"markdown","08333438":"markdown","2a051f1b":"markdown","84c69f38":"markdown","aa950993":"markdown"},"source":{"670278be":"from IPython.display import Image\nImage('\/kaggle\/input\/emulating-alteryx-notebook-data\/data-cleaning-workflow-screenshot.PNG') ","bfddb3a1":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c834bde6":"pip install pyforest","6f482045":"import pyforest","b5b96d2b":"pd.options.display.max_rows = 150","e1f5c419":"monthly_sales = pd.read_csv('\/kaggle\/input\/emulating-alteryx-notebook-data\/pawdacity_monthly_sales.csv')","9608b515":"monthly_sales.head()","e43deea2":"competitor_sales = pd.read_csv('\/kaggle\/input\/emulating-alteryx-notebook-data\/competitor_sales.csv')","b0776bbf":"competitor_sales.head()","8e93c963":"demographic_data = pd.read_csv('\/kaggle\/input\/emulating-alteryx-notebook-data\/demographic_data.csv')","502c11df":"demographic_data.head()","86938535":"population_data = pd.read_csv('\/kaggle\/input\/emulating-alteryx-notebook-data\/population_data.csv')","56850db2":"population_data.head()","a73337f9":"monthly_sales.columns.tolist()","548834f3":"columns_to_sum = monthly_sales.columns.tolist()[5:]","7644efc5":"columns_to_sum","4e38d925":"sales_only = monthly_sales[columns_to_sum]","1c5fdb8f":"total_sales = sales_only.sum(axis =  1 )","895161e3":"total_sales.head()","ee6b2923":"monthly_sales['Total_Sales'] = total_sales","30556b9e":"monthly_sales","352e1b3b":"pawdacity_sales = monthly_sales.drop(columns = columns_to_sum)","b4fa0a88":"pawdacity_sales","ffdb219f":"population_data.head()","4cd35601":"def get_city(row):\n    try:\n        city = row.split('|')[0]\n        city = city.replace('?','')\n        city = city.strip()\n        city = city.rstrip()\n        city = city.lstrip()\n        \n    \n    except AttributeError:\n        return None \n    \n    return city","ab95f7e5":"population_data['City'] = population_data['City|County'].apply(get_city)","e5426e78":"population_data.head()","3b36ff35":"population_data['2010 Census'] = population_data['2010 Census'].str.replace('<td>', '')","8bc552a7":"population_data['2010 Census'] = population_data['2010 Census'].str.replace('<\/td>', '')","f2a0cc88":"population_data['2010 Census'] = population_data['2010 Census'].str.replace(',', '')","86d55724":"population_data.loc[6,'2010 Census'] = population_data.loc[6,'2010 Census'][0:4]","df85343a":"population_data.loc[89,'2010 Census'] = population_data.loc[89,'2010 Census'][0:3]","08a79792":"population_data.head(7)","ed3380f5":"final_population_data = population_data[['City','2010 Census']]","3cecd1bb":"final_population_data.head(7)","f086fd3b":"final_population_data.drop(index = [99,100,101,102,102], inplace = True)","e39438c7":"final_population_data.tail()","104262a5":"%who","f45413b0":"pawdacity_sales.info()","3e6b2f81":"final_population_data.info()","4768e9f2":"final_population_data['2010 Census'] = final_population_data['2010 Census'].astype(int)","d8e39fb2":"final_population_data.info()","16955a9a":"%who","ffe8b937":"demographic_data.info()","67a833c3":"demographic_data.drop(columns = ['County'], inplace = True)","753a5bd6":"combined_demog_data = pd.merge(demographic_data, final_population_data, how = 'inner', on = 'City')","9d92a0da":"combined_demog_data.shape","7ca385d4":"pawdacity_sales.rename(columns = {'CITY' : 'City'}, inplace = True)","ccc26952":"final_df = pd.merge(pawdacity_sales, combined_demog_data, how = 'inner', on = 'City')","b755f066":"final_df","22871f7c":"final_df = final_df.drop(columns = ['NAME', 'ADDRESS', 'STATE', 'ZIP'])","3e71928e":"final_df","ff679683":"final_df['Total_Sales'].describe()","e96e0abe":"def outlier_calculator(df):\n    \n    columns = df.columns\n    outliers = {}\n    \n    for col in columns[1:]:\n        q1 = df.describe()[col][4]\n        q3 = df.describe()[col][6]\n        iqr = q3 - q1 \n        lower_fence = q1 - (1.5 * iqr)\n        upper_fence = q3 + (1.5 * iqr)\n        outliers[col] = lower_fence, upper_fence\n        \n    return outliers\n        \n    \n    ","bc882ed3":"outliers = outlier_calculator(final_df)","340fa0bc":"outliers","1843b9c6":"Sales_Outliers = [1 if value > outliers['Total_Sales'][1] or value < outliers['Total_Sales'][0] else 0 for value in final_df['Total_Sales']]\nLand_Outliers = [1 if value > outliers['Land Area'][1] or value < outliers['Land Area'][0] else 0 for value in final_df['Land Area']]   \nHouseholds_Outliers = [1 if value > outliers['Households with Under 18'][1] or value < outliers['Households with Under 18'][0] else 0 for value in final_df['Households with Under 18']]\nPopulation_Outliers = [1 if value > outliers['Population Density'][1] or value < outliers['Population Density'][0] else 0 for value in final_df['Population Density']]\nFamilies_Outliers = [1 if value > outliers['Total Families'][1] or value < outliers['Total Families'][0] else 0 for value in final_df['Total Families']]\nCensus_Outliers = [1 if value > outliers['2010 Census'][1] or value < outliers['2010 Census'][0] else 0 for value in final_df['2010 Census']]\n                      \n\n","acbb6f07":"final_df['Sales_Outlier'] = Sales_Outliers\nfinal_df['Land_Outlier'] = Land_Outliers\nfinal_df['Households_Outlier'] = Households_Outliers\nfinal_df['Population_Outlier'] = Population_Outliers\nfinal_df['Families_Outlier'] = Families_Outliers\nfinal_df['Census_Outlier'] = Census_Outliers","42f9b4d2":"final_df","c2e29829":"def color_code(value):\n    color = 'lime' if value == 1 else 'black'\n    return 'color : %s' % color","1dcc0d0b":"final_df.style.applymap(color_code)","d1d1c70f":"final_df['Outlier_Score'] = final_df[['Sales_Outlier', 'Land_Outlier','Households_Outlier','Population_Outlier','Families_Outlier','Census_Outlier']].sum(axis = 1)","d4d7fc51":"final_df","617eb6f2":"final_df = final_df.drop(columns = ['Sales_Outlier', 'Land_Outlier','Households_Outlier','Population_Outlier','Families_Outlier','Census_Outlier'])","d6d1e937":"final_df","db7dea59":"final_df = final_df.drop(index = 6)","dfb46f56":"final_df.reset_index(drop = True, inplace = True)","621da4f8":"final_df","51e5a1b0":"model_data = final_df.copy()","4d084c51":"target = model_data['Total_Sales']\nmodel_data = model_data.drop(columns = ['City', 'Outlier_Score'])","47eed133":"model_data","b5e7191e":"data_correlation = model_data.corr()","38e494ef":"data_correlation","c15fa542":"sns.heatmap(data_correlation, cbar = bool)","f5a72e89":"for col in model_data.columns[2:]:\n    sns.distplot(model_data[col])\n    plt.show()","dbd13227":"from sklearn.linear_model import LinearRegression","f107660b":"model_data.drop(columns = ['Total_Sales'], inplace = True)","8c6dcb06":"model_data","4f5a4ca2":"testing_columns = model_data.columns.values.tolist()[1:]","b3aaab95":"testing_columns","2b307de2":"for x in testing_columns:\n    feature_columns = ['Land Area']\n    feature_columns.append(x)\n    \n    lr = LinearRegression()\n    lr.fit(model_data[feature_columns], target)\n    score = lr.score(model_data[feature_columns], target)\n    print('For features : {0}, the model score is {1}'.format(feature_columns, score ))","a0a3c567":"demographic_data.head()","3f956c4b":"%who","838dd875":"competitor_sales.head()","99929249":"competitor_sales.info()","a1c315a0":"competitor_grouped = competitor_sales.groupby('PHYSICAL CITY NAME')['SALES VOLUME'].sum().reset_index()","dcd6c8d6":"competitor_grouped","2f57e528":"col_to_match = final_df.City.values.tolist()","ebc92aa9":"col_to_match","aac02aab":"temporary_df = demographic_data.set_index('City')","2941c867":"temporary_df = temporary_df.drop(index = col_to_match)","d169255d":"temporary_df.shape","0905ffc3":"temporary_df.reset_index(inplace = True)","20cdf538":"competitor_grouped.rename(columns = {'PHYSICAL CITY NAME' : 'City'}, inplace = True)","2aed56ec":"predictor_df = pd.merge(temporary_df, competitor_grouped, on = 'City', how = 'inner' )","bc8a182c":"predictor_df","cdc22b57":"predictor_df = predictor_df.drop(index = 1)","48acb670":"predictor_df.reset_index(drop = True, inplace = True)","38ffe084":"predictor_df","fc262d2c":"lr2 = LinearRegression()\nlr2.fit(model_data[['Land Area', 'Total Families']], target)\npredicted_sales = lr2.predict(predictor_df[['Land Area','Total Families']])\n\n","21e76ea2":"predictor_df['Predicted_Sales'] = predicted_sales","2db63789":"predictor_df","c5d594d3":"%who","6f6b0cd4":"population_data.head()","46f80013":"pop_2014_data = population_data[['City|County','2014 Estimate']]","c9fd964d":"pop_2014_data['City'] = pop_2014_data['City|County'].apply(get_city)","2d708c30":"pop_2014_data.head()","31130db8":"pop_2014_data['2014 Estimate'] = pop_2014_data['2014 Estimate'].str.replace('<td>', '')","20aa2d91":"pop_2014_data['2014 Estimate'] = pop_2014_data['2014 Estimate'].str.replace('<\/td>', '')","bf1ba43b":"pop_2014_data['2014 Estimate'] = pop_2014_data['2014 Estimate'].str.replace(',', '')","096188ad":"pop_2014_data.drop(index = [99,100,101,102], inplace = True)","f791af29":"pop_2014_data = pop_2014_data.drop(columns = ['City|County'])","b2d61422":"pop_2014_data.head()","e7a8045b":"output_data = pd.merge(predictor_df, pop_2014_data, on = 'City', how = 'inner')","89a9f2bc":"output_data","2495a233":"output_data.columns = [col.lower().replace(\" \",\"_\") for col in output_data.columns.values.tolist()]","43d664d2":"output_data.head()","7ef9b2e5":"output_data.info()","7a2796ab":"output_data['2014_estimate'] = output_data['2014_estimate'].astype(int) ","12ca73ed":"output_data = output_data[output_data['sales_volume'] < 500000]","c759adae":"output_data = output_data[output_data['2014_estimate'] > 4000]","ddadc0e8":"output_data = output_data[output_data['predicted_sales'] > 200000]","e7a5b6ee":"output_data","8a933672":"output_data.sort_values(by = 'predicted_sales', ascending = False).rename(columns = {'sales_volume': 'total_competitor_sales'})","926fa086":"We need to aggregate competitor data on a city level. Remember our analysis and model aggregate data are on the city levels. ","26640831":"The purpose of this notebook is to try to compare the work needed to solve a fairly complex problem in both Alteryx and Python. The dataset and the problem is borrowed from [Udacity's Predictive Analytics for Business Nanodegree course.](https:\/\/www.udacity.com\/course\/predictive-analytics-for-business-nanodegree--nd008) \n\nFor those who don't know what the software Alteryx is, you can learn more about it [here](https:\/\/www.alteryx.com\/). In simple words, Alteryx is designed to make advanced analytics accessible to any data worker. As a user, I would say that using Alteryx you can simply drag and drop tools that help you create complex automation tasks or workflows without having to write a single line of code.\n\nThey have a [program](https:\/\/www.alteryx.com\/why-alteryx\/alteryx-for-good) that helps you learn the ins and outs of the software and get certified. Having solved problems on both Python and Alteryx, Alteryx certainly takes the lead in terms of usability and ease.","7a856640":"The objective here is to remove columns that are not correlated with the target variable or show high correlation with other varaibles, a concept known as collinearity.\n\nHere is what we can summarise :  \n\n- The sales column is correlated with Land Area, Households under 18, Population density, Total families and 2010 census\n\n- Households under 18, Population density, Total families and 2010 census are highly correlated amongst each other. \n\nSo the question then remains is how do we single out a column to chose when the all these column are correlated with each other. ","90ac0157":"- Change the case of the city column in the sales dataset\n- Join the pawdacity sales and combined demographic data to make one final dataset\n- Clean the final df to remove any unnecessary columns","47548c9e":"The approach we will take is to score each column and its values. If the value is a outlier then we score it a 1 otherwise 0.","3cf9a604":"Now that we have shorlisted the columns that we feel are the best to make predictions it is time to predict sales on the demographic dataset. Based on the guidelines we first need to go back to a little data cleaning, since the guidelines tell specifically that it should be a new city.","c1ff6191":"### Final Steps:\n\n- Filter data based on guidelines \n- Recommend city ","5178300a":"- Calculate the outliers for each variable\n- Highlight values that are outliers\n- Score and evaluate the outliers on a city level","811e8ce3":"### Third Objectives :","5984583d":"Objective 3: Checking datatypes","3eb07b22":"### Fourth Objectives : ","b6f9f547":"Objective 1 : Aggregating Sales","ca06f65b":"### Fifth Objectives:\n\n- Create a dataset with cities not in our final dataset \n- Join competitor data corresponding to the cities \n- Apply model and predict sales","a8b9e6a3":"We would recommend to management the city of **Laramie** as a good choice for opening the new store. ","1a6254e6":"### Model Building : ","37a97655":"### Second Objectives :","25485423":"Let's take a recap of the guidelines set forth by management: \n- The new store should be located in a new city. That means there should be no existing stores in the new city.\n- The total sales for the entire competition in the new city should be less than \\$500,000\n- The new city where you want to build your new store must have a population over 4,000 people (based upon the 2014 US Census estimate).\n- The predicted yearly sales must be over \\$200,000.\n- The city chosen has the highest predicted sales from the predicted set.","084b1fe8":"# The Business Problem:\n\nPawdacity is a leading pet store chain in Wyoming with 13 stores throughout the state. This year, Pawdacity would like to expand and open a 14th store. Your manager has asked you to perform an analysis to recommend the city for Pawdacity\u2019s newest store, based on predicted yearly sales.\n\nHere are the criterias given to you in choosing the right city:\n\n-The new store should be located in a new city. That means there should be no existing stores in the new city.\n\n-The total sales for the entire competition in the new city should be less than 500,000 dollars.\n\n-The new city where you want to build your new store must have a population over 4,000 people (based upon the 2014 US Census estimate).\n\n-The predicted yearly sales must be over 200,000 dollars.\n\n-The city chosen has the highest predicted sales from the predicted set.","240ad017":"Before we go about building our model, there are a few guidelines that management has asked us to follow : \n- The new store should be located in a new city. That means there should be no existing stores in the new city.\n- The total sales for the entire competition in the new city should be less than \\$500,000\n- The new city where you want to build your new store must have a population over 4,000 people (based upon the 2014 US Census estimate).\n- The predicted yearly sales must be over \\$200,000.\n- The city chosen has the highest predicted sales from the predicted set.","1bf54ab0":"We need to drop the city Gillette since we decided this was an outlier city. ","3598f76f":"- Check the datatypes for the demographics data \n- Join the cities in final population with cities in demographics data","7ab85657":"Let us now solve the same problem using Python. You can follow along or use the business problem and solve it how you like it. The correct city is at the bottom of the notebook.","36ebc49b":"So we now move towards the final steps in our analysis. Let us filter the data according to the guidelines and give our recommendation for the city to open a new store in. ","6f475918":"Here is what the workflow looks like in Alteryx. ","a597586a":"Let's start filtering our dataset according to guidelines. ","8e47ac83":"### Sub Objectives: \n\n- Calculate predicted yearly sales on the dataset \n","4ef1821b":"Objective 2: Parsing data","7774f84f":"### First Objectives : \n\n- Aggregate the monthly sales for each city\n- Parse the population data to extract city and 2010 census data \n- Make sure columns are in correct data type ","66c64a6d":"We will remove the city of Gillete. We will not remove the rest of the outliers since we only have 11 rows of data.","08333438":"Looking at the distribution, we can say that total families has the closest resemblance to a normal distribtuion than the other columns. Hence the final columns we can shortlist for our model are \n\n- Land Area \n- Total Families\n\nWe can also go about this process mathematically by building different models with different features and seeing which model performs the best. ","2a051f1b":"So let's start with the model building steps. ","84c69f38":"We have a dataset we can run our model on. This dataset contains citites that has no pawdacity stores. Let's run our linear regression model to get the value for predicted sales. ","aa950993":"#### Our Recommendation:"}}