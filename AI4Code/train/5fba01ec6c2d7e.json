{"cell_type":{"0d67e78f":"code","e8e77111":"code","8efcfb8f":"code","db990bcc":"code","a55b5633":"code","c3793f3a":"code","7aec08ed":"code","8b36b239":"code","39c382a9":"code","f5bc0633":"code","78bd5137":"code","f00269b7":"code","767639f4":"code","e94087b9":"code","e62aae27":"code","8b9fbd1c":"code","d509008d":"code","1e5e4bb9":"markdown","f753e8e3":"markdown","501d5d4c":"markdown","c7e61e71":"markdown","f9f35e69":"markdown","beebf735":"markdown","cc68aa31":"markdown"},"source":{"0d67e78f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e8e77111":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/cusersmarildownloadsvariantcsv\/variant.csv', delimiter=';', encoding = \"ISO-8859-2\", nrows = nRowsRead)\ndf.dataframeName = 'variant.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')\ndf.head()","8efcfb8f":"#https:\/\/dataprep.ai\/\n\n!pip install dataprep","db990bcc":"from dataprep.eda import plot, plot_correlation, create_report, plot_missing","a55b5633":"plot(df)","c3793f3a":"plot(df, \"Precision\")","7aec08ed":"plot(df, \"Sensitivity\")","8b36b239":"plot(df, \"Accuracy\")","39c382a9":"plot(df, \"Precision\",\"Sensitivity\")","f5bc0633":"plot(df, \"Accuracy\",\"Sensitivity\")","78bd5137":"!pip install dabl\nimport dabl","f00269b7":"dabl.detect_types(df)","767639f4":"dabl.plot(df, target_col=\"Sensitivity\")","e94087b9":"dabl.plot(df, target_col=\"SensitivityA\")","e62aae27":"dabl.plot(df, target_col=\"Precision\")","8b9fbd1c":"dabl.plot(df, target_col=\"Accuracy\")","d509008d":"#API Correlation\nplot_correlation(df)","1e5e4bb9":"#ALSgeneScanner variant prioritization performance.\n\nVariBench: Precision, Sensivity, Accuracy.\n\nVariBenchFiltered: PrecisionA, SensivityA, AccuracyA.\n\nClinVar ALS variants: PrecisionB, SensivityB, AccuracyB.","f753e8e3":"DATAPREP\n\nDataprep is an initiative by SFU Data Science Research Group to speed up Data Science. Dataprep.eda attempts to simplify the entire EDA process with very minimal lines of code. EDA is a very essential and time-consuming part of the data science pipeline, having a tool that eases the process is a boon.\n\nhttps:\/\/dataprep.ai\/","501d5d4c":"<h1 style=\"background-color:#DC143C; font-family:'Brush Script MT',cursive;color:white;font-size:200%; text-align:center;border-radius: 50% 20% \/ 10% 40%\">ALSgeneScanner is a pipeline designed for the analysis of NGS data of ALS patients<\/h1>\n\nAlfredo Iacoangeli, Ahmad Al Khleifat, William Sproviero, Aleksey Shatunov, Ashley R. Jones, Sarah Opie-Martin, Ersilia Naselli, Simon D. Topp, Isabella Fogh, Angela Hodges, Richard J. Dobson, Stephen J. Newhouse & Ammar Al-Chalabi (2019) ALSgeneScanner: a pipeline for the analysis and interpretation of DNA sequencing data of ALS patients, Amyotrophic Lateral Sclerosis and Frontotemporal Degeneration, 20:3-4, 207-215, DOI: 10.1080\/21678421.2018.1562553\n\n# **<span style=\"color:#DC143C;\">Variant prioritization<\/span>**\n\n\nThe pathogenicity prediction programs, SIFT (52), PolyPhen-2 HDIV and PolyPhen-2 HVAR (53), LRT (54), MutationTaster (55), MutationAssessor (56), Fathmm (57), PROVEAN (58), Fathmm-MKL coding (59), MetaSVM (60), and CADD (61) are used to prioritize variants. A variant is scored X where X is equal to the number of tools which predict it to be pathogenic. A higher priority is given to variants which are reported to be \u201clikely pathogenic\u201d or \u201cpathogenic\u201d on ClinVar. For each tool, it was used the authors\u2019 recommendations for the categorical interpretation of the variants. For each variant, the score ranges between 0 and 11 according to the number of computational tools (11 in total) that predict it to be pathogenic. In order to leave the user free to customize the prioritization criteria, both our cumulative score and the categorical variant interpretations from the 11 tools are included in the final results.\n\nhttps:\/\/www.tandfonline.com\/doi\/full\/10.1080\/21678421.2018.1562553","c7e61e71":"# **<span style=\"color:#DC143C;\">Correlation analysis<\/span>**\n\nCorrelation analysis was performed to investigate the correlation between the 11 tools used by their score, using the categorical results of each individual tool on the VariBenchFiltered dataset. The average correlation was 45% and the standard deviation 14%. Only PolyPhen-2 HDIV and PolyPhen-2 HVAR showed a strong correlation (83%). PolyPhen-2 HDIV differs from PolyPhen-2 HVAR in the training dataset which only included Mendelian disease variants. These tools can provide the user with complementary useful information.\n\nALSgeneScanner puts a powerful bioinformatics tool, able to exploit the potentialities of next-generation sequencing data in the hands of patients, ALS researchers, and clinicians.\n\nhttps:\/\/www.tandfonline.com\/doi\/full\/10.1080\/21678421.2018.1562553","f9f35e69":"# **<span style=\"color:#DC143C;\">Evaluation of Performance<\/span>**\n\nReceiver operating characteristic (ROC) curves and their corresponding area under the curve (AUC) statistic were calculated using easyROC. Accuracy, precision, and sensitivity are defined as in equation below where Tp is true positives, Fp false positives, Fn false negatives, and Tn true negatives.\n\nPrecision = Tp\/Tp+Fp;  Sensitivity = Tp\/Tp+Fn;  Accuracy = Tp+Tn\/Tp+Tn+Fn+Fp\n\nTheir table of sensitivity, specificity, and accuracy means that the appropriate cutoff can be used to interrogate data, depending on whether the aim is the exclusion of potentially harmful variants, or the detection of definitely harmful variants.\n\nhttps:\/\/www.tandfonline.com\/doi\/full\/10.1080\/21678421.2018.1562553","beebf735":"# **<span style=\"color:#DC143C;\">VariBench, VariBenchFiltered and ClinVar<\/span>**\n\nTo assess their variant prioritization approach, they used a set of non-synonymous variants from the VariBench dataset (63) for which the effect is known and all ALS-associated non-synonymous variants stored in ClinVar (71 benign and 121 pathogenic).\n\nThe VariBench variants are not ALS genes specifically, but because they are all annotated depending on whether or not they are deleterious, the general principles of the method could be tested. The dataset includes VariBench protein tolerance dataset 1.\n\nIn order to minimize the overlap between training and evaluation sets, they derived a subset of variants (VariBenchFiltered) from the VariBench dataset by filtering out its overlap with HumVar (53), the CADD training dataset (61) and ExoVar (65), which are commonly used to train the tools (66).\n\nhttps:\/\/www.tandfonline.com\/doi\/full\/10.1080\/21678421.2018.1562553","cc68aa31":"![](https:\/\/onlinelibrary.wiley.com\/cms\/asset\/581f38c2-e172-4097-bf5b-06fdc08226f3\/mgg3302-toc-0001-m.jpg)onlinelibrary.wiley.com"}}