{"cell_type":{"af3e85d0":"code","66977e1f":"code","de2eecfc":"code","475597f7":"code","9197d2f7":"code","dacdca83":"code","53ebf65d":"code","c436e8e3":"code","9da6f1d4":"code","0994bfc4":"markdown","158bc902":"markdown","c0d17ef6":"markdown"},"source":{"af3e85d0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","66977e1f":"df = pd.read_csv('..\/input\/creditcardfraud\/creditcard.csv')\ndf.head()","de2eecfc":"df.describe()","475597f7":"frauds = len(df[df['Class'] == 1])\nno_frauds = df.shape[0] - frauds\n\nfraud_per = frauds\/df.shape[0] * 100\n\nprint('%d Frauds: %.2f%%' %(frauds, fraud_per))\nprint('%d Not frauds: %.2f%%' %(no_frauds, 100 - fraud_per))","9197d2f7":"df.hist(figsize = (20,20))\nplt.show()","dacdca83":"# Correlation matrix\ncorrmat = df.corr()\nfig = plt.figure(figsize=(12,9))\n\nsns.heatmap(corrmat, vmax = 0.8, square = True)\nplt.show()","53ebf65d":"X = df.drop(columns = \"Class\")\nY = df['Class']","c436e8e3":"from sklearn.metrics import classification_report, accuracy_score\nfrom sklearn.ensemble import IsolationForest\nfrom sklearn.neighbors import LocalOutlierFactor\n\n# Dictionary of classifiers\n\nclassifiers = {\n    \"Isolation Forest\": IsolationForest(max_samples = len(X),\n                                        contamination = frauds\/no_frauds,\n                                        random_state = 1),\n    \"Local Outlier Factor\": LocalOutlierFactor(n_neighbors = 20,\n                                             contamination = frauds\/no_frauds)\n}","9da6f1d4":"# Fit the model\n\nfor i, (clf_name, clf) in enumerate(classifiers.items()):\n    \n    # fit the data and tag outliers\n    if clf_name == \"Local Outlier Factor\":\n        y_pred = clf.fit_predict(X)\n        scores_pred = clf.negative_outlier_factor_\n    else:\n        clf.fit(X)\n        scores_pred = clf.decision_function(X)\n        y_pred = clf.predict(X)\n        \n    # Reshape the prediction\n    # 0 for valid\n    # 1 for fraud\n    \n    y_pred[y_pred == 1]  = 0\n    y_pred[y_pred == -1] = 1\n    \n    n_errors = (y_pred != Y).sum()\n    \n    # Run classification metrics\n    print('{}: {}'.format(clf_name, n_errors))\n    print(accuracy_score(Y, y_pred))\n    print(classification_report(Y, y_pred))","0994bfc4":"# Credit Card Fraud Detection\n_Gabriella Mansur_\n\nSources: \n* https:\/\/www.youtube.com\/watch?v=gCWBFyFTxVU&t=145s\n","158bc902":"### Correlation matrix\nLet's check:\n- Are there strong linear relationships?\n- Which features are important for the overall classification?","c0d17ef6":"### Algorithms for outlier detection\n\n**- IsolationForest:** returns the anomaly score of each sample. Isolates the observation by randomly selecting a feature, and then randomly selecting a split value between the maximum and minimum values of the selected feature.\n\n**- LocalOutlierFactor:** unsupervised method; calculates the anomaly score of each sample. Measures local deviation of density of a given sample with respect to its neighbors. Calculates anomaly score based off neighbors."}}