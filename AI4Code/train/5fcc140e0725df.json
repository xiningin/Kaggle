{"cell_type":{"3e2b02d2":"code","2fa060c4":"code","8fe29152":"code","b8ebf14e":"code","3d22cd87":"code","af4e143f":"code","942684c1":"code","ec6e286a":"code","552122a5":"code","816a00ec":"code","4ebda2f1":"code","36872ffb":"code","3ad5c87b":"code","134ebb73":"code","74093d9b":"code","1ac4c40f":"code","5eab3390":"code","13b352c4":"code","06f647b5":"code","62b8aecb":"code","d8997381":"code","afcf365c":"code","985b9ee1":"code","22908392":"code","8abfb507":"code","9de9a41d":"code","b2a95538":"code","a24de361":"code","a57436d5":"code","e5a0071c":"code","a04f174e":"code","326aa05f":"code","890d6d9a":"code","9b22de23":"code","17860e98":"code","c728bde1":"code","cd127676":"code","8db7898d":"code","36c56656":"code","b2e8262f":"code","04c1ddfc":"code","ac283687":"code","85b50410":"code","e681a534":"code","49d5f9e1":"markdown","a184955c":"markdown","25141d23":"markdown","87e5c5f9":"markdown","f0aa24cb":"markdown","b88d1127":"markdown","1099f8c2":"markdown","1ff3d815":"markdown","3cea29d5":"markdown","6d9a0996":"markdown"},"source":{"3e2b02d2":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\n%matplotlib inline","2fa060c4":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","8fe29152":"Train_df = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\nTest_df = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ngender_df = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')","b8ebf14e":"Train_df.head()","3d22cd87":"Test_df.head()","af4e143f":"Train_df.isnull().sum()","942684c1":"Test_df.isnull().sum()","ec6e286a":"sns.heatmap(Test_df.isnull(), yticklabels=False, cmap=\"viridis\")","552122a5":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',data=Train_df,palette='RdBu_r')    ","816a00ec":"sns.set_style('whitegrid')\nsns.countplot(x='Survived', hue='Sex', data=Train_df, palette='RdBu_r')","4ebda2f1":"sns.set_style('whitegrid')\nsns.countplot(x='Survived', hue='Pclass', data=Train_df, palette='rainbow')","36872ffb":"Train_df['Age'].hist(bins=30,color='darkred',alpha=0.7)","3ad5c87b":"sns.countplot(x='SibSp',data=Train_df)","134ebb73":"Train_df['Fare'].hist(color='green',bins=40,figsize=(8,4))","74093d9b":"plt.figure(figsize=(12,7))\nsns.boxplot(x='Pclass', y='Age', data=Train_df, palette='winter')","1ac4c40f":"def impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 37\n\n        elif Pclass == 2:\n            return 29\n\n        else:\n            return 24\n\n    else:\n        return Age","5eab3390":"Test_df['Age'] = Test_df[['Age', 'Pclass']].apply(impute_age, axis=1)\nTrain_df['Age'] = Train_df[['Age','Pclass']].apply(impute_age,axis=1)","13b352c4":"sns.heatmap(Train_df.isnull(), yticklabels=False, cbar=False, cmap='viridis')","06f647b5":"Train_df.drop('Cabin', inplace=True, axis=1)\nTest_df.drop('Cabin', inplace=True, axis=1)","62b8aecb":"sns.heatmap(Test_df.isnull(), yticklabels=False, cbar=False, cmap='viridis')","d8997381":"Test_df.info()","afcf365c":"sex1=pd.get_dummies(Train_df['Sex'], drop_first=True)\nembark1=pd.get_dummies(Train_df['Embarked'], drop_first=True)","985b9ee1":"Train_df.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","22908392":"Train_df = pd.concat([Train_df,sex1,embark1],axis=1)","8abfb507":"Test_df.head()","9de9a41d":"Train_df.head()","b2a95538":"Train_df.isnull().sum()","a24de361":"Test_df.isnull().sum()","a57436d5":"Test_df = Test_df.dropna()","e5a0071c":"Train_df.info()\nTest_df.info()","a04f174e":"Train_df.drop(['male', 'Q','S'], inplace = True, axis=1)","326aa05f":"Train_df.head()","890d6d9a":"Train_df.head()","9b22de23":"from sklearn.model_selection import train_test_split","17860e98":"X_train, X_test, y_train, y_test = train_test_split(Train_df.drop('Survived',axis=1), \n                                                    Train_df['Survived'], test_size=0.30, \n                                                    random_state=101)","c728bde1":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import AdaBoostClassifier, RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\n","cd127676":"adc = AdaBoostClassifier()\nadc.fit(X_train, y_train)\nY_pred = adc.predict(X_test)\naccuracy_score(Y_pred, y_test)","8db7898d":"rfc = RandomForestClassifier()\nrfc.fit(X_train, y_train)\nY_pred = rfc.predict(X_test)\naccuracy_score(Y_pred, y_test)","36c56656":"from sklearn.metrics import classification_report, confusion_matrix","b2e8262f":"print(classification_report(y_test, Y_pred))\nprint('\\n')\nprint(confusion_matrix(y_test,Y_pred))","04c1ddfc":"rfc = RandomForestClassifier(n_estimators=25, max_depth=7, random_state=42)\nrfc.fit(X_train, y_train)\nY_pred = rfc.predict(Test_df)","ac283687":"submission = pd.DataFrame({\n        \"PassengerId\": Test_df[\"PassengerId\"],\n        \"Survived\": Y_pred\n    })","85b50410":"submission.to_csv('submission.csv', index=False)","e681a534":"pd.read_csv('submission.csv')\n","49d5f9e1":"We'll need to convert categorical features to dummy variables using pandas! Otherwise our machine learning algorithm won't be able to directly take in those features as inputs.","a184955c":"From the graph above, we could roughly observe that the survival rate of females is significantly higher compared to that of males.","25141d23":"Now that we've added all our csv files, lets start by diving deeper into our data.","87e5c5f9":"Now let us begin by doing some exploratory data analysis!","f0aa24cb":"Roughly 20 percent of the Age data is missing. The proportion of Age missing is likely small enough for reasonable replacement with some form of imputation. Looking at the Cabin column, it looks like we are just missing too much of that data to do something useful with at a basic level. We'll probably drop this later, or change it to another feature like \"Cabin Known: 1 or 0\"\n\nLet's continue on by visualizing some more of the data!","b88d1127":"Great!! Now our data is ready for our model!","1099f8c2":"We can see the wealthier passengers in the higher classes tend to be older, which makes sense. We'll use these average age values to impute based on Pclass for Age.","1ff3d815":"Lets check the heatmap again!","3cea29d5":"One can systematically conclude that the number of deaths were much higher for people of Class 3, whereas for Classes 1 and 2, the difference was not significant.","6d9a0996":"We want to fill in missing age data instead of just dropping the missing age data rows. One way to do this is by filling in the mean age of all the passengers (imputation). However we can be smarter about this and check the average age by passenger class. For example:"}}