{"cell_type":{"8adb3445":"code","32fb16fa":"code","fdb449a4":"code","af9c1720":"code","bfc46693":"code","8901ab99":"code","2b6dfbc7":"code","f47a5a48":"code","a3752673":"code","c0e3f68a":"code","e924ccd4":"code","9734a2d3":"code","e71b232c":"code","0c9f21bb":"code","f9a30f18":"code","bb150932":"code","0dd742a9":"code","1344eaee":"code","93ee03db":"code","667ab91f":"code","634df775":"code","5cff3ea4":"code","c9f17b25":"code","76d44c60":"code","09e078e2":"code","698b16cd":"markdown","133303b3":"markdown","d597eba0":"markdown","b040e534":"markdown"},"source":{"8adb3445":"# Input data files are available in the read-only \"..\/input\/\" directory\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","32fb16fa":"# scintific computing libraries\nimport pandas as pd                                      \nimport numpy as np                    \nfrom scipy import optimize, stats        \n\n# visualisation libraries\nimport matplotlib.pyplot as plt                      \nimport seaborn as sns                \n\n# algorithmic library\nfrom sklearn.linear_model import LinearRegression, Ridge\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom lightgbm import LGBMRegressor\n\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, KFold\nfrom sklearn.model_selection import RandomizedSearchCV, GridSearchCV\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.utils import resample\nfrom sklearn.pipeline import Pipeline\n\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import LSTM, Dense, Flatten, Dropout\nfrom tensorflow.keras.layers import LeakyReLU, PReLU, ELU\nfrom keras.utils import np_utils","fdb449a4":"df_train = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/sales_train.csv')\nprint(df_train.shape)\ndf_train.head()","af9c1720":"df_shops = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/shops.csv')\nprint(df_shops.shape)\ndf_shops.head()","bfc46693":"df_items = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/items.csv')\nprint(df_items.shape)\ndf_items.head()","8901ab99":"df_item_categories = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')\nprint(df_item_categories.shape)\ndf_item_categories.head()","2b6dfbc7":"df_test = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/test.csv')\nprint(df_test.shape)\ndf_test.head()","f47a5a48":"df_train.head()","a3752673":"df_train.dtypes","c0e3f68a":"df_train.isnull().sum()","e924ccd4":"df_train.drop(['date_block_num','item_price'], axis=1, inplace=True)","9734a2d3":"df_train['date'] = pd.to_datetime(df_train['date'], dayfirst=True)\ndf_train['date'] = df_train['date'].apply(lambda x: x.strftime('%Y-%m'))\ndf_train.head()","e71b232c":"df = df_train.groupby(['date','shop_id','item_id']).sum()\ndf = df.pivot_table(index=['shop_id','item_id'], columns='date', values='item_cnt_day', fill_value=0)\ndf.reset_index(inplace=True)\ndf.head()","0c9f21bb":"df_test = pd.merge(df_test, df, on=['shop_id','item_id'], how='left')\ndf_test.drop(['ID', '2013-01'], axis=1, inplace=True)\ndf_test = df_test.fillna(0)\ndf_test.head()","f9a30f18":"Y_train = df['2015-10'].values\nX_train = df.drop(['2015-10'], axis = 1)\nX_test = df_test\n\nprint(X_train.shape, Y_train.shape)\nprint(X_test.shape)","bb150932":"'''X_train = StandardScaler().fit(X_train).transform(X_train)\nX_test = StandardScaler().fit(X_test).transform(X_test)'''","0dd742a9":"x_train, x_test, y_train, y_test = train_test_split( X_train, Y_train, test_size=0.2, random_state=4)\nprint ('Train set:', x_train.shape,  y_train.shape)\nprint ('Test set:', x_test.shape,  y_test.shape)","1344eaee":"LR = LinearRegression()\nLR.fit(x_train,y_train)\n\nprint('Train set mse:', mean_squared_error(y_train, LR.predict(x_train)))\nprint('Test set mse:', mean_squared_error(y_test, LR.predict(x_test)))\nprint('Test set score:', LR.score(x_train,y_train))","93ee03db":"RFR = RandomForestRegressor(n_estimators = 100)\nRFR.fit(x_train,y_train)\n\nprint('Train set mse:', mean_squared_error(y_train, RFR.predict(x_train)))\nprint('Test set mse:', mean_squared_error(y_test, RFR.predict(x_test)))\nprint('Test set score:', RFR.score(x_train,y_train))","667ab91f":"'''GBR = GradientBoostingRegressor(n_estimators = 50 , max_depth = 3)\nGBR.fit(x_train,y_train)\n\nprint('Train set mse:', mean_squared_error(y_train, GBR.predict(x_train)))\nprint('Test set mse:', mean_squared_error(y_test, GBR.predict(x_test)))\nprint('Test set score:', GBR.score(x_train,y_train))'''","634df775":"'''model=LGBMRegressor(n_estimators=200, learning_rate=0.03, max_depth=8)\nmodel.fit(x_train,y_train)\n\nprint('Train set mse:', mean_squared_error(y_train, model.predict(x_train)))\nprint('Test set mse:', mean_squared_error(y_test, model.predict(x_test)))\nprint('Test set score:', model.score(x_train,y_train))'''","5cff3ea4":"prediction = RFR.predict(X_test)","c9f17b25":"prediction = list(map(round, prediction))","76d44c60":"df_submission = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv')\nprint(df_submission.shape)\ndf_submission.head()","09e078e2":"df_submission['item_cnt_month'] = prediction\ndf_submission.to_csv('prediction.csv', index=False)\ndf_submission.head()","698b16cd":"## Data Acquisition","133303b3":"## Data Preprocessing","d597eba0":"## Submission","b040e534":"## Model Development"}}