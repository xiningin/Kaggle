{"cell_type":{"0382c92d":"code","d6fc4741":"code","a31b96b2":"code","85fd7ca2":"code","11fb2d18":"code","ed77c1b7":"code","0bcd3ea4":"code","bd00f998":"code","0fa37c0d":"code","7285c772":"code","f19efd8d":"code","8cc35385":"code","80c0cbbc":"markdown","c18f7208":"markdown","4f08eeda":"markdown","2ea85787":"markdown","561e16c5":"markdown"},"source":{"0382c92d":"import warnings\nwarnings.filterwarnings(\"ignore\")\nimport numpy as np\nimport pandas as pd\nfrom scipy.stats import spearmanr\nimport os\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn import model_selection\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.model_selection import KFold,cross_val_score\nfrom collections import Counter\nfrom sklearn.preprocessing import MinMaxScaler","d6fc4741":"train=pd.read_csv(\"..\/input\/train.csv\")\ntest=pd.read_csv(\"..\/input\/test.csv\",usecols=['ID'])\ntest['ID'].unique()\nsample_submission=pd.read_csv(\"..\/input\/sample_submission.csv\")\n# separate array into input and output components\narray = train.values\nX = array[:,1:4992]\nY = array[:,4992]\nseed=7","a31b96b2":"#Check the datatypes we have\nm=train.dtypes\nCount=Counter(m).most_common()\nprint(Count)","85fd7ca2":"# Load train dataset\nprint(train.head(10))\nprint('The Data in train is : {}'.format(train.shape))","11fb2d18":"# Load test dataset\nprint(test.head(5))\nprint('The Data in test is : {}'.format(test.shape))","ed77c1b7":"train.dropna()","0bcd3ea4":"plt.scatter(X[:,0], X[:,1], c='m')\nplt.show()","bd00f998":"min_max_scaler = MinMaxScaler()\nX_train_minmax = min_max_scaler.fit_transform(X)\nprint(X_train_minmax)","0fa37c0d":"min_max_scaler.scale_","7285c772":"min_max_scaler.min_  ","f19efd8d":"# Calculate the spearman's correlation between two variables\n# prepare data\n# Select the random column from the train.csv\ndata1=train.iloc[:,[10]]\ndata2=train.iloc[:,[12]]\n# calculate spearman's correlation\ncoef,p=spearmanr(data1,data2)\nprint('Spearmans coefficient : %3f'%coef) \n# interpret the significance\nif(p>0.05):\n    print('Sample are uncorrelated (fail to reject Ho) p= %3f'%p) \nelse:\n    print('Sample are correlated (reject Ho) p=%3f'%p) ","8cc35385":"kfold=KFold(n_splits=10,random_state=seed)\nmodel=KNeighborsRegressor()\nscoring='neg_mean_squared_error'\nresults=cross_val_score(model,X,Y,cv=kfold,scoring=scoring)","80c0cbbc":"<h1> 4. Prepare for  Modeling by Pre-Processing Data <\/h1>","c18f7208":"<h4>It is possible to introspect the scaler attributes to find about the exact nature of the transformation learned on the training data:<\/h4>","4f08eeda":"<h1> 2. Understand Data with Descriptive Stats<\/h1>\n<h4>In this dataset there are 3 different types of datatypes int64,float64 and object<\/h4>","2ea85787":"<h1>5. Spearman\u2019s Rank Correlation<\/h1>\nWe can demonstrate the Spearman\u2019s rank correlation on the test dataset. We know that there is a strong association between the variables in the dataset and we would expect the Spearman\u2019s test to find this association.","561e16c5":"<h1> 3.Visualization of Data <\/h1>"}}