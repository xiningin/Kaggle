{"cell_type":{"0b13c187":"code","ecd36086":"code","dba9b4e5":"code","3ebf51c6":"code","2d2cee3b":"code","cbe5ad2e":"code","2f9b19cd":"markdown","d248b447":"markdown","46d277f2":"markdown","7bc9714d":"markdown"},"source":{"0b13c187":"import pandas as pd\nimport ast","ecd36086":"expressionString1 = \"{'a': 1, 'b': 2, 'c': 3}\"\nprint(ast.literal_eval(expressionString1))\n\nexpressionString2 = \"[1, 2, 3, 4, 5]\"\nprint(ast.literal_eval(expressionString2))\n\nexpressionString3 = \"[(1,2),(3,4),(5,6)]\"\nprint(ast.literal_eval(expressionString3))\n\nexpressionString4 = \"[{'x': 559, 'y': 213, 'width': 50, 'height': 32}]\"\nprint( ast.literal_eval(expressionString4) )\n\nexpressionString5 = \"[{'x': 100, 'y': 100, 'width': 50, 'height': 50},{'x': 200, 'y': 200, 'width': 30, 'height': 30}]\"\nprint( ast.literal_eval(expressionString5) )\n","dba9b4e5":"train = pd.read_csv(\"..\/input\/tensorflow-great-barrier-reef\/train.csv\")\ntrain = train.loc[train[\"annotations\"] != \"[]\"]\ntrain = train.reset_index(drop = True)\ntrain.head(30)","3ebf51c6":"train.info()","2d2cee3b":"a = train.iloc[0][\"annotations\"] \nb = ast.literal_eval(train.iloc[0][\"annotations\"])\nprint(a , type(a), len(a))\nprint(b, type(b),len(b))","cbe5ad2e":"a = train.iloc[19][\"annotations\"] \nb = ast.literal_eval(train.iloc[19][\"annotations\"]) \nprint(a , type(a), len(a))\nprint(b, type(b),len(b))","2f9b19cd":"- annotations type is object.\n- it needs to convert expression","d248b447":"# String => Expression","46d277f2":"# type check ","7bc9714d":"# get rows with annotations != []"}}