{"cell_type":{"5da866e0":"code","68cf8efb":"code","48261c3b":"code","4ad78103":"code","2c9f61b8":"code","a79e0c02":"code","75551726":"code","19768a48":"code","675683c7":"code","6a7e621c":"code","ae57e38e":"code","ab7d0e45":"code","df4d9c9e":"code","4aed9d6e":"code","4520e020":"code","0680feda":"code","69ac68b3":"code","d58d8930":"code","2f91396a":"code","33222364":"code","41e18fe1":"code","7d9dcda1":"code","78d0ad36":"code","698837fa":"code","3d3207f8":"code","cad5199d":"code","d8cf07c0":"code","f6b595f7":"code","4e8f3e40":"code","dc9024ca":"code","050fdc9c":"code","e8ffa404":"code","300ff4c4":"code","34666a1a":"code","f605e571":"code","2f38338c":"code","866ca023":"code","bd07a7bc":"code","fb8ebf07":"code","0e82cdd4":"code","662e7b7c":"code","cdf50f1d":"code","7805a13d":"code","9566ca6e":"code","50419660":"code","160168f6":"code","b0535aa4":"code","a153cb72":"code","cbff99f6":"code","5028aa8a":"code","08705dac":"code","e30b018a":"code","65316a23":"code","bc8ae4e7":"code","2665ac48":"code","b9e86309":"code","741060d5":"code","ce44acbe":"code","0cfe444c":"code","fb266388":"code","7619af2b":"code","cb7e071a":"code","5f620c95":"code","c11cdbb2":"code","825a95e3":"code","8d293d5d":"code","4934b287":"code","d304eb5e":"code","8f2a0a6c":"code","019b3932":"code","a405e950":"code","66ed4f49":"code","78779375":"code","77ede54f":"code","5842bb76":"code","4957a989":"code","f40de0f0":"code","10a2fbbc":"code","e8f6e092":"code","599a4f67":"code","313ae0b8":"code","5de27171":"code","2ddca2ef":"code","0dedb786":"code","cec38695":"code","4f748c89":"code","ccdf97db":"code","20ceadf1":"code","b954e62d":"code","9b9b621b":"code","73b593ac":"code","57f09feb":"code","796154de":"code","4bdec365":"code","7675aab4":"code","76d05d32":"code","075876a6":"code","c2de18b2":"code","7da5dde1":"code","cfe7a36a":"code","2a1ed42f":"code","3449a45c":"code","5c118404":"code","dd84cb64":"code","1d49d1d5":"code","fd2e24b9":"markdown","581b20ab":"markdown","d6761003":"markdown","34c9cba6":"markdown","ab189ca2":"markdown","2b2146a7":"markdown","5c7d4fd9":"markdown","c325297a":"markdown","d8e3a76c":"markdown","e685c30f":"markdown","a5cd7000":"markdown","795f09d5":"markdown","58f3dcd1":"markdown","69cf3cca":"markdown","698d2d41":"markdown","493892b1":"markdown","d9c65373":"markdown","46824eeb":"markdown","beab0e92":"markdown","94d2b479":"markdown","7889c11a":"markdown","363e26e8":"markdown","61769f08":"markdown","8e8ec90e":"markdown","45672a40":"markdown","a0400c8f":"markdown"},"source":{"5da866e0":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","68cf8efb":"original=pd.read_csv('..\/input\/crime.csv',engine='python')","48261c3b":"original['YEAR'].unique()","4ad78103":"original['OCCURRED_ON_DATE']=pd.to_datetime(original['OCCURRED_ON_DATE'])","2c9f61b8":"np.isnan(original.any())","a79e0c02":"original['DISTRICT'].unique()","75551726":"offense=pd.pivot_table(original.loc[:,['OFFENSE_CODE_GROUP','YEAR','OFFENSE_CODE']],index='OFFENSE_CODE_GROUP', \\\n              columns='YEAR',aggfunc=np.count_nonzero)","19768a48":"summary=pd.DataFrame(offense.apply(np.sum,axis=1))\nsummary=summary.rename(columns={0:'total'})","675683c7":"sumsort=summary.sort_values(by='total',ascending=False)\ntop5=sumsort.iloc[0:5,:]\ntop5","6a7e621c":"sns.set()\np0=plt.figure(figsize=(15,14))\nplt.title(r'2015-2018 top 5 group bar plot')\nplt.bar(range(top5.index.shape[0]),top5.loc[:,'total'])\nplt.xlabel('OFFENSE_CODE_GROUP')\nplt.xticks(range(top5.index.shape[0]),top5.index)\nx=np.arange(top5.index.shape[0])\ny=np.array(top5['total'])\nfor i,j in zip(x,y):\n    plt.text(i,j,'%d'%j,ha='center')\np0.savefig('.\/top5_group_bar.png')\nplt.show()","ae57e38e":"disgroup=original.groupby(by='DISTRICT')","ab7d0e45":"groupcount=disgroup.count()","df4d9c9e":"groupcount.head()","4aed9d6e":"number=groupcount.iloc[:,0]\nnumber=pd.DataFrame(number)","4520e020":"number.rename(columns={'INCIDENT_NUMBER':'NUMBER'},inplace=True)\nnumber.head()","0680feda":"plt.figure(figsize=(15,14))\nplt.title(r'2015-2018 boston-crime by district bar plot')\np1=sns.barplot(x=number.index,y='NUMBER',data=number)\nx=np.arange(number.index.shape[0])\ny=np.array(list(number['NUMBER']))\nfor i,j in zip(x,y):\n    plt.text(i,j+0.05,'%d'%j,ha='center')\nelse:\n    pass\np1fig=p1.get_figure()\np1fig.savefig('.\/total_by_district_bar.png')\nplt.show()","69ac68b3":"districtsorted=number.sort_values(by='NUMBER',ascending=False)","d58d8930":"top5=districtsorted.iloc[0:5,:]","2f91396a":"plt.figure(figsize=(15,14))\nplt.title(r'top5 district crime bar plot')\np2=sns.barplot(x=top5.index,y='NUMBER',data=top5)\nx=np.arange(top5.index.shape[0])\ny=np.array(list(top5['NUMBER']))\nfor i,j in zip(x,y):\n    plt.text(i,j+0.05,'%d'%j,ha='center')\nelse:\n    pass\np2fig=p2.get_figure()\np2fig.savefig('.\/top5_district_crime_bar.png')\nplt.show()","33222364":"yeargroup=original.groupby(by='YEAR')","41e18fe1":"count=yeargroup.count()","7d9dcda1":"yearnumber=pd.DataFrame(count.iloc[:,0])","78d0ad36":"yearnumber.rename(columns={'INCIDENT_NUMBER':'NUMBER'},inplace=True)","698837fa":"yearnumber","3d3207f8":"plt.figure(figsize=(15,14))\nplt.title(r'2015-2018 crime by year bar plot')\np3=sns.barplot(x=yearnumber.index,y='NUMBER',data=yearnumber)\nx=np.arange(yearnumber.index.shape[0])\ny=np.array(list(yearnumber['NUMBER']))\nfor i,j in zip(x,y):\n    plt.text(i,j,'%d'%j,ha='center')\nelse:\n    pass\np3fig=p3.get_figure()\np3fig.savefig('.\/total_by_year_bar.png')\nplt.show()","cad5199d":"original['SHOOTING'].unique()","d8cf07c0":"original.shape","f6b595f7":"original['SHOOTING']=original['SHOOTING'].fillna('N')","4e8f3e40":"original['SHOOTING'].unique()","dc9024ca":"original.head()","050fdc9c":"shootcrime=pd.pivot_table(original.loc[original['SHOOTING']=='Y',['YEAR','DISTRICT','SHOOTING']], \\\n               index='YEAR',columns='DISTRICT',aggfunc=np.count_nonzero)","e8ffa404":"sns.set()\np4=shootcrime.plot(title=r'2015-2018 crime has shooting bar plot',figsize=(15,14),kind='barh',stacked=True)\n\np4fig=p4.get_figure()\np4fig.savefig('.\/total_shooting_crime_barh.png')\nplt.show()","300ff4c4":"districtSum=shootcrime.apply(np.sum)\ndistrictSum=pd.DataFrame(districtSum)","34666a1a":"districtSum=districtSum.rename(columns={0:r'shooting total'})\n","f605e571":"districtSum=districtSum.sort_values(by=r'shooting total',ascending=False)","2f38338c":"top5=districtSum.iloc[0:5,:]\ntop5","866ca023":"sns.set()\np5=top5.plot(title=r'shooting crime top5 district',figsize=(15,14),kind='bar')\nx=np.arange(top5.index.shape[0])\ny=np.array(list(top5[r'shooting total']))\nfor i,j in zip(x,y):\n    plt.text(i,j,'%d'%j,ha='center')\np5fig=p5.get_figure()\np5fig.savefig('.\/shooting_crime_top5_bar.png')\nplt.show()","bd07a7bc":"byMonth=original.groupby(by='MONTH')","fb8ebf07":"Monthcount=byMonth.count()","0e82cdd4":"MonthNumber=pd.DataFrame(Monthcount.iloc[:,0])\nMonthNumber.head()","662e7b7c":"MonthNumber=MonthNumber.rename(columns={'INCIDENT_NUMBER':'NUMBER'})\nsns.set()\np6=MonthNumber.plot(title=r'2015-2018 crime total by month bar plot',figsize=(15,14),kind='barh')\nx=np.arange(MonthNumber.index.shape[0])\ny=np.array(list(MonthNumber['NUMBER']))\nfor i,j in zip(x,y):\n    plt.text(j,i,'%d'%j,ha='center')\np6fig=p6.get_figure()\np6fig.savefig('.\/total_by_month_bar.png')\nplt.show()","cdf50f1d":"Month=pd.pivot_table(original.loc[:,['YEAR','MONTH','INCIDENT_NUMBER']], \\\n               index='YEAR',columns='MONTH',aggfunc=np.count_nonzero)\nMonth","7805a13d":"Month=Month.fillna(0)","9566ca6e":"Monthlist=(list(Month.iloc[:,0])),(list(Month.iloc[:,1])),(list(Month.iloc[:,2])), \\\n(list(Month.iloc[:,3])),(list(Month.iloc[:,4])),(list(Month.iloc[:,5])),(list(Month.iloc[:,6])), \\\n(list(Month.iloc[:,7])),(list(Month.iloc[:,8])),(list(Month.iloc[:,9])),(list(Month.iloc[:,10])), \\\n(list(Month.iloc[:,11]))\ndef takesecond(elem):\n    x=[]\n    for i in elem:\n        x.append(i[1])\n    else:\n        return x\nlabel=takesecond(Month.columns)\nsns.set()\np1=plt.figure(figsize=(15,14))\nplt.boxplot(Monthlist,labels=label,meanline=True)\nplt.title(r'each Month change box plot')\nplt.xlabel('Month')\nplt.ylabel(r'crime number')\np1.savefig('.\/by_month_boxplot.png')\nplt.show()","50419660":"from sklearn.preprocessing import LabelEncoder\ntras=original.iloc[:,:]\ntras.loc[:,'OFFENSE_CODE_GROUP']=LabelEncoder().fit_transform(tras.loc[:,'OFFENSE_CODE_GROUP'])\ntras.loc[:,'OFFENSE_DESCRIPTION']=LabelEncoder().fit_transform(tras.loc[:,'OFFENSE_DESCRIPTION'])\ntras.loc[:,'DISTRICT']=LabelEncoder().fit_transform(tras.loc[:,'DISTRICT'].astype('str'))\ntras.loc[:,'SHOOTING']=LabelEncoder().fit_transform(tras.loc[:,'SHOOTING'].astype('str'))\ntras.loc[:,'DAY_OF_WEEK']=LabelEncoder().fit_transform(tras.loc[:,'DAY_OF_WEEK'])\ntras.loc[:,'UCR_PART']=LabelEncoder().fit_transform(tras.loc[:,'UCR_PART'].astype('str'))\ntras.loc[:,'STREET']=LabelEncoder().fit_transform(tras.loc[:,'STREET'].astype('str'))","160168f6":"tras.head()","b0535aa4":"tras.loc[:,'REPORTING_AREA']=LabelEncoder().fit_transform(tras.loc[:,'REPORTING_AREA'])","a153cb72":"data=tras.loc[:,['OFFENSE_CODE', 'OFFENSE_CODE_GROUP','OFFENSE_DESCRIPTION', \\\n                 'DISTRICT', 'REPORTING_AREA', 'SHOOTING', 'YEAR','DAY_OF_WEEK', 'HOUR', 'UCR_PART', 'STREET']]\ntarget=tras.loc[:,'MONTH']","cbff99f6":"from sklearn.decomposition import PCA\npcamodel=PCA(n_components=11).fit(data)","5028aa8a":"print(pcamodel.explained_variance_ratio_)\n'''\ntop2\nOFFENSE_CODE\nOFFENSE_CODE_GROUP\n'''","08705dac":"pdata=tras.loc[:,['OFFENSE_CODE', 'OFFENSE_CODE_GROUP','OFFENSE_DESCRIPTION', \\\n                 'DISTRICT', 'REPORTING_AREA', 'SHOOTING', 'YEAR','DAY_OF_WEEK', 'HOUR', 'UCR_PART', 'STREET','MONTH']]\npearsonMatrix=pd.DataFrame(round(pdata.corr(method='pearson'),6))\npearsonMatrix.sort_values(by='MONTH',ascending=False)","e30b018a":"sample=tras.sample(n=10000)","65316a23":"features=sample.loc[:,['SHOOTING','DAY_OF_WEEK','HOUR']]\ntarget=sample.loc[:,'MONTH']","bc8ae4e7":"from sklearn.model_selection import train_test_split\ndataTrain,dataTest, \\\ntargetTrain,targetTest= \\\ntrain_test_split(features,target,train_size=0.8)","2665ac48":"from sklearn.ensemble import GradientBoostingClassifier as GBC","b9e86309":"crimeGBC=GBC(max_depth=12)","741060d5":"crimeGBC.fit(dataTrain,targetTrain)","ce44acbe":"pred=crimeGBC.predict(dataTrain)","0cfe444c":"from sklearn.metrics import classification_report\nprint(classification_report(targetTrain,pred))","fb266388":"predict=crimeGBC.predict(dataTest)","7619af2b":"print(classification_report(targetTest,predict))","cb7e071a":"from sklearn.metrics import accuracy_score\nprint(accuracy_score(targetTest,predict))","5f620c95":"pcadata=sample.loc[:,['OFFENSE_CODE', 'OFFENSE_CODE_GROUP','OFFENSE_DESCRIPTION', \\\n                 'DISTRICT', 'REPORTING_AREA', 'SHOOTING', 'YEAR','DAY_OF_WEEK', 'HOUR', 'UCR_PART', 'STREET']]\ntarget=sample.loc[:,'MONTH']\n","c11cdbb2":"Pcatras=PCA(n_components=2).fit_transform(pcadata)","825a95e3":"pcaTrain,pcaTest, \\\nptargetTrain,ptargetTest = \\\ntrain_test_split(Pcatras,target,train_size=0.8)","8d293d5d":"pcaGBC=GBC(max_depth=12).fit(pcaTrain,ptargetTrain)","4934b287":"pcapre=pcaGBC.predict(pcaTrain)\nprint(classification_report(ptargetTrain,pcapre))","d304eb5e":"pcapredict=pcaGBC.predict(pcaTest)\nprint(classification_report(ptargetTest,pcapredict))\nprint(accuracy_score(ptargetTest,pcapredict))","8f2a0a6c":"from sklearn.svm import SVC\ncrimeSVC=SVC()","019b3932":"crimeSVC.fit(dataTrain,targetTrain)","a405e950":"SVCpre=crimeSVC.predict(dataTrain)\nprint(classification_report(targetTrain,SVCpre))","66ed4f49":"SVCpredict=crimeSVC.predict(dataTest)\nprint(classification_report(targetTest,SVCpredict))\nprint(accuracy_score(targetTest,SVCpredict))","78779375":"pSVC=SVC().fit(pcaTrain,ptargetTrain)","77ede54f":"pcaSVCpre=pSVC.predict(pcaTrain)\nprint(classification_report(ptargetTrain,pcaSVCpre))","5842bb76":"pcaSVCpredict=pSVC.predict(pcaTest)\nprint(classification_report(ptargetTest,pcaSVCpredict))\nprint(accuracy_score(ptargetTest,pcaSVCpredict))","4957a989":"from sklearn.ensemble import RandomForestClassifier as RFC\ncrimeRFC=RFC(max_depth=12)","f40de0f0":"crimeRFC","10a2fbbc":"crimeRFC.fit(pcaTrain,ptargetTrain)","e8f6e092":"RFCpre=crimeRFC.predict(pcaTrain)\nprint(classification_report(ptargetTrain,RFCpre))","599a4f67":"RFCpredict=crimeRFC.predict(pcaTest)\nprint(classification_report(ptargetTest,RFCpredict))\nprint(accuracy_score(ptargetTest,RFCpredict))","313ae0b8":"pearsonMatrix.sort_values(by='OFFENSE_CODE_GROUP',ascending=False)","5de27171":"offenseSample=tras.sample(n=10000)\nodata=offenseSample.loc[:,['UCR_PART','YEAR','REPORTING_AREA']]\notarget=offenseSample.loc[:,'OFFENSE_CODE_GROUP']","2ddca2ef":"odata.head()","0dedb786":"odata['YEAR']=LabelEncoder().fit_transform(odata['YEAR'])","cec38695":"otarget.unique()","4f748c89":"odataTrain,odataTest, \\\notargetTrain,otargetTest = \\\ntrain_test_split(odata,otarget,train_size=0.8)","ccdf97db":"offenseSVC=SVC()","20ceadf1":"offenseSVC","b954e62d":"offenseSVC.fit(odataTrain,otargetTrain)","9b9b621b":"offensepred=offenseSVC.predict(odataTrain)","73b593ac":"print(classification_report(otargetTrain,offensepred))\nprint(accuracy_score(otargetTrain,offensepred))","57f09feb":"offensepredict=offenseSVC.predict(odataTest)","796154de":"print(classification_report(otargetTest,offensepredict))\nprint(accuracy_score(otargetTest,offensepredict))","4bdec365":"opdata=offenseSample.loc[:,['OFFENSE_CODE', 'OFFENSE_CODE_GROUP','OFFENSE_DESCRIPTION', \\\n                 'DISTRICT', 'REPORTING_AREA', 'SHOOTING', 'YEAR','DAY_OF_WEEK', 'HOUR', 'UCR_PART', 'STREET','MONTH']]\noptarget=offenseSample.loc[:,'OFFENSE_CODE_GROUP']","7675aab4":"opcamodel=PCA(n_components=12).fit(opdata)","76d05d32":"opcamodel.explained_variance_ratio_","075876a6":"opcadata=PCA(n_components=2).fit_transform(opdata)","c2de18b2":"opcadata.shape","7da5dde1":"opcaDataTrain,opcaDataTest, \\\nopcaTargetTrain,opcaTargetTest = \\\ntrain_test_split(opcadata,optarget,train_size=0.8)","cfe7a36a":"pcaoffenseSVC=SVC().fit(opcaDataTrain,opcaTargetTrain)","2a1ed42f":"pcapre=pcaoffenseSVC.predict(opcaDataTrain)\nprint(classification_report(opcaTargetTrain,pcapre))\nprint(accuracy_score(opcaTargetTrain,pcapre))","3449a45c":"pcapredict=pcaoffenseSVC.predict(opcaDataTest)\nprint(classification_report(opcaTargetTest,pcapredict))\nprint(accuracy_score(opcaTargetTest,pcapredict))","5c118404":"opcaGBC=GBC(max_depth=66).fit(opcaDataTrain,opcaTargetTrain)","dd84cb64":"opcaGBCpre=opcaGBC.predict(opcaDataTrain)\nprint(classification_report(opcaTargetTrain,opcaGBCpre))\nprint(accuracy_score(opcaTargetTrain,opcaGBCpre))","1d49d1d5":"opcaGBCpredict=opcaGBC.predict(opcaDataTest)\nprint(classification_report(opcaTargetTest,opcaGBCpredict))\nprint(accuracy_score(opcaTargetTest,opcaGBCpredict))","fd2e24b9":"## DISTRICT\n\nB2 district has highest number of crime\n\nC11 and D4 are higher than other district\n\nA15 is least\n\nfollow this,from number dataframe take top5 district","581b20ab":"## pearson coefficient matrix\n\nWith using pearson coefficient matrix,\n\nSHOOTING,DAT_OF_WEEK and HOUR are more relative to predict Month\n\ntry to use three features to predict","d6761003":"## by year\n\nWith this bar chart,we can see 2017's crime number is highest\n\nAnd 2015 is lowest,this may be caused by people get more depressive by year.\n\nAs news,we can see more and more crime has happened\n\nThis may cause this chart that appears higher trend.","34c9cba6":"## PCA\n\nWith using PCA model,OFFENSE_CODE and OFFENSE_CODE_GROUP are main\n\n### 2019-02-20\n\nUse pearson coeffient to analysis correlation\n\nto choose features to predict","ab189ca2":"## predict Month-using GBC and PCA","2b2146a7":"## by Month\n\nWith this chart,July~August more crime happened\n\nDecember~Febuary is less\n\nShould draw a boxplot to see","5c7d4fd9":"## predict Month-using GBC\n\nusing GradientBoostingClassifier","c325297a":"## Principal component analysis\n\nfind the most relative features\n\nusing PCA model to analysis","d8e3a76c":"## predict Month-using RandomForestClassifier and PCA","e685c30f":"## predict Month-using SVC and three features","a5cd7000":"With using PCA and three features,\n\nuse PCA data seems to be more effective than choose three features,\n\nand use SVC model get highest accuracy score\n\n","795f09d5":"## Shooting crime summary and Visualization","58f3dcd1":"## predict offense_code_group-PCA and SVC","69cf3cca":"## predict offense_code_group-using PCA and GBC","698d2d41":"## predict-offense_code_group \n\n### choose features with pearson matrix","493892b1":"## top5 OFFENSE_CODE_GROUP ","d9c65373":"## Visualization-by DISTRICT","46824eeb":"# Kaggle-dataset-analysis\n## crime in Boston\n# 2019-02-16 start","beab0e92":"## predict offense_code_group-with three features and SVC","94d2b479":"## shooting crime\n\nAs this chart,B2 is the highest\n\nand B2's crime number is the highest\n\nWe may need to be alert with this distrcit\n\nB3'crime is fifth,but shooting crime is second\n\nWith two charts,the more crime happened,the more shooting crime happened.","7889c11a":"## correlation analysis-pearson coefficient","363e26e8":"## boxplot-Month\n\n2015 January~May and 2018 November~December values are NaN,which is No record\n\n2018 October is less,which is seen as abnormal value\nThis may be caused by No completed recording\n\nJuly~Auguest has less change\n\nWith month bar chart,they may be crime's higher occurred months\n\nAnd July in 2017 has high value,which is seen as abnormal value\n\nOther Month have gentle change ","61769f08":"## Visualization-by YEAR","8e8ec90e":"## predict offense_code_group\n\nWith using PCA and GradientBoostingClassifier,\n\naccuracy score is 89%,and some class's f1_score reach 1.00\n\nSo,best way may be using PCA and GradientBoostingClassifier","45672a40":"## Visualization-by Month","a0400c8f":"## predict Month-using SVC and PCA"}}