{"cell_type":{"2a7548a0":"code","50ea6edf":"code","488ba95c":"code","f2e8a311":"code","5fcc3c5f":"code","9f1e54c0":"code","68cb40be":"code","ee9f260c":"code","26f1cfd7":"code","004e0c94":"code","eca7fb9b":"code","1d5f0f5b":"code","3db724a0":"code","adbd8a25":"code","516e1a66":"code","d4f4ca57":"code","ba7c7f4d":"code","8f873d05":"code","120f0080":"code","df1870da":"code","2e647f84":"code","af607cb4":"code","9313f46e":"code","6623ebe7":"code","60eba012":"code","fac86ed5":"code","2d6cfc53":"code","e8876138":"code","4f115715":"code","07c70b75":"code","9c5701a1":"code","0f7bb9e0":"code","1379e8be":"code","2f2ae5b1":"code","eafb7e4b":"code","b5f15df2":"code","041c3fb8":"code","0dda72fe":"code","fe5691fd":"code","e54eab1a":"code","70bc38f9":"code","42d48d4a":"code","cfccb660":"code","9fa74048":"code","5d1dbd99":"code","3ea51e6d":"code","08ef621d":"code","3e076838":"code","05cf0d91":"code","8e863927":"markdown","e95703a8":"markdown","6b7483bc":"markdown"},"source":{"2a7548a0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor,IsolationForest\nfrom sklearn.feature_selection import mutual_info_regression\nfrom sklearn.metrics import mean_squared_error\nimport lightgbm as lgb\nfrom datetime import datetime\nfrom sklearn.preprocessing import StandardScaler,MinMaxScaler\n!pip install --quiet google_trans_new\nfrom google_trans_new import google_translator\nfrom sklearn.impute import KNNImputer\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","50ea6edf":"sales_train=pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv')\nitem_categories=pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')\nitems=pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/items.csv')\nshops=pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/shops.csv')\ntest=pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/test.csv')\nsample_submission = pd.read_csv('\/kaggle\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv', index_col='ID')","488ba95c":"sales_train.info()","f2e8a311":"sales_train['date']=pd.to_datetime(sales_train['date'],dayfirst=True)","5fcc3c5f":"sales_train.groupby(['date_block_num'])['item_cnt_day'].sum().plot(kind='bar',figsize=(20,6))","9f1e54c0":"sales_train.columns, items.columns, shops.columns, test.columns,item_categories.columns","68cb40be":"sales_train.describe().T","ee9f260c":"plt.rcParams['figure.figsize']=(20,8)\nsns.boxplot(x=sales_train.item_price)","26f1cfd7":"sns.boxplot(x=sales_train.item_cnt_day)","004e0c94":"#Remove outliers\n#sales_train=sales_train[sales_train.item_cnt_day<1001]\n#sales_train=sales_train[sales_train.item_price<100000]","eca7fb9b":"sales_train.loc[sales_train.item_price<0, ['date_block_num','shop_id','item_id','item_price']]","1d5f0f5b":"sales_train.loc[sales_train.item_price<0,'item_price']=sales_train[\n    (sales_train.date_block_num==4)&(sales_train.shop_id==32)\n    &(sales_train.item_id==2973)\n    &(sales_train.item_price>0)].item_price.mean()","3db724a0":"#Drop duplicates from tain and test, all columns\nsales_train=sales_train.drop_duplicates(keep = 'last').reset_index(drop = True)\nsales_train=sales_train.drop_duplicates(subset=['date','date_block_num','shop_id','item_id','item_cnt_day'],keep = 'last').reset_index(drop = True)","adbd8a25":"sales_train.describe().T","516e1a66":"#Drop duplicates from columns\nprint(sales_train[sales_train.duplicated(['date','date_block_num','shop_id','item_id'])])","d4f4ca57":"#Correction 1\nsales_train.loc[(sales_train.date=='27.01.2013')&(sales_train.date_block_num==0)&(sales_train.shop_id==38)&(sales_train.item_id==15702),'item_price']=sales_train.loc[(sales_train.date=='27.01.2013')&(sales_train.date_block_num==0)&(sales_train.shop_id==38)&(sales_train.item_id==15702)].item_price.mean()\nsales_train.loc[(sales_train.date=='27.01.2013')&(sales_train.date_block_num==0)&(sales_train.shop_id==38)&(sales_train.item_id==15702),'item_cnt_day']=sales_train.loc[(sales_train.date=='27.01.2013')&(sales_train.date_block_num==0)&(sales_train.shop_id==38)&(sales_train.item_id==15702)].item_cnt_day.sum()\n#Correction 2\nsales_train.loc[(sales_train.date=='29.12.2013')&(sales_train.date_block_num==11)&(sales_train.shop_id==27)&(sales_train.item_id==12133),'item_price']=sales_train.loc[(sales_train.date=='29.12.2013')&(sales_train.date_block_num==11)&(sales_train.shop_id==27)&(sales_train.item_id==12133)].item_price.mean()\nsales_train.loc[(sales_train.date=='29.12.2013')&(sales_train.date_block_num==11)&(sales_train.shop_id==27)&(sales_train.item_id==12133),'item_cnt_day']=sales_train.loc[(sales_train.date=='29.12.2013')&(sales_train.date_block_num==11)&(sales_train.shop_id==27)&(sales_train.item_id==12133)].item_cnt_day.sum()\n#Correction 3\nsales_train.loc[(sales_train.date=='26.12.2014')&(sales_train.date_block_num==23)&(sales_train.shop_id==17)&(sales_train.item_id==3424),'item_price']=sales_train.loc[(sales_train.date=='26.12.2014')&(sales_train.date_block_num==23)&(sales_train.shop_id==17)&(sales_train.item_id==3424)].item_price.mean()\nsales_train.loc[(sales_train.date=='26.12.2014')&(sales_train.date_block_num==23)&(sales_train.shop_id==17)&(sales_train.item_id==3424),'item_cnt_day']=sales_train.loc[(sales_train.date=='26.12.2014')&(sales_train.date_block_num==23)&(sales_train.shop_id==17)&(sales_train.item_id==3424)].item_cnt_day.sum()\n#Correction 4\nsales_train.loc[(sales_train.date=='17.02.2015')&(sales_train.date_block_num==25)&(sales_train.shop_id==5)&(sales_train.item_id==21619),'item_price']=sales_train.loc[(sales_train.date=='17.02.2015')&(sales_train.date_block_num==25)&(sales_train.shop_id==5)&(sales_train.item_id==21619)].item_price.mean()\nsales_train.loc[(sales_train.date=='17.02.2015')&(sales_train.date_block_num==25)&(sales_train.shop_id==5)&(sales_train.item_id==21619),'item_cnt_day']=sales_train.loc[(sales_train.date=='17.02.2015')&(sales_train.date_block_num==25)&(sales_train.shop_id==5)&(sales_train.item_id==21619)].item_cnt_day.sum()\n#Drop duplicates again\nsales_train=sales_train.drop_duplicates(keep = 'last').reset_index(drop = True)","ba7c7f4d":"iso=IsolationForest(contamination=0.005)\niso.fit(sales_train[['shop_id','item_id','item_price','item_cnt_day']])\nsales_train['anomaly']=iso.predict(sales_train[['shop_id','item_id','item_price','item_cnt_day']])","8f873d05":"#df=sales_train[sales_train.anomaly==1]\nsales_train.loc[sales_train.anomaly==-1,['item_price']]=np.nan","120f0080":"impt=KNNImputer(n_neighbors=3)\nreplace_nan=impt.fit_transform(sales_train.drop(['date','anomaly','item_cnt_day'],axis=1).values)","df1870da":"df=sales_train.copy()\ndf['item_price']=replace_nan[:,-1]","2e647f84":"#Convert date to proper datetime and extract month and year\ndf['date']=pd.to_datetime(df.date,dayfirst=True)\ndf['month']=df.date.dt.month\ndf['year']=df.date.dt.year","af607cb4":"#create revenue column\ndf['revenue']=df.item_cnt_day*df.item_price","9313f46e":"#Translate shop name and extract city\ntranslator=google_translator()\nshops['shop_name_en']=shops.shop_name.apply(translator.translate)","6623ebe7":"shops['city']=[x[0] for x in shops.shop_name_en.str.replace('!','').str.strip().str.replace(',','').str.split(' ')]","60eba012":"shops.city.unique()","fac86ed5":"shops.loc[shops.city=='SPb','city']='SPB'\nshops.loc[shops.city=='1c-online','city']='Online'\nshops.loc[shops.city=='Vorone\u017e','city']='Voronezh'","2d6cfc53":"shops['city_code']=shops.city.map(dict(zip(shops.city.unique(),range(len(shops.city.unique())))))","e8876138":"#df=df.merge(shops,on=['shop_id'],how='left').drop(['shop_name','shop_name_en','city'],axis=1)","4f115715":"df=df.groupby(['date_block_num','shop_id', 'item_id', \n        'month', 'year'],as_index=False)['item_price','item_cnt_day','revenue'].agg({'item_price': 'mean','item_cnt_day':'sum','revenue':'sum'})","07c70b75":"#test.drop(['ID'],axis=1,inplace=True)\ntest['year']=2015\ntest['month']=11\ntest['date_block_num']=34\ntest.head()","9c5701a1":"df=df.merge(test,on=['shop_id', 'item_id', 'year', 'month', 'date_block_num'],how='outer').merge(items,on=['item_id'],how='left').merge(item_categories,on=['item_category_id'],how='left').drop(['item_name','item_category_name'],axis=1).merge(shops,on=['shop_id'],how='left').drop(['shop_name','shop_name_en','city'],axis=1)","0f7bb9e0":"df.describe().T","1379e8be":"df['days']=df.month.map({1:31,2:28,3:31,4:30,5:31,6:30,7:31,8:31,9:30,10:31,11:30,12:31})","2f2ae5b1":"'''tot_df=df.drop(['year','month'],axis=1)\nfor i in range(4):\n    tot_df['price_lag_'+str(i)]=tot_df.groupby(['date_block_num','shop_id','item_id'])['item_price'].mean().shift(i).values\n    tot_df['item_cnt_lag_'+str(i)]=tot_df.groupby(['date_block_num','shop_id','item_id'])['item_cnt_day'].mean().shift(i).values\n    tot_df['revenue_lag_'+str(i)]=tot_df.groupby(['date_block_num','shop_id','item_id'])['revenue'].mean().shift(i).values\n'''","eafb7e4b":"tot_df=df.drop(['month','year','ID'],axis=1)","b5f15df2":"tot_df_lag_1=tot_df.copy()\ntot_df_lag_1['date_block_num']=tot_df_lag_1['date_block_num']+1\ntot_df_lag_1=tot_df_lag_1[tot_df_lag_1['date_block_num']<35]\ntot_df_lag_1.rename(columns={'item_cnt_day':'item_cnt_day_lag1'},inplace=True)\ntot_df_lag_2=tot_df.copy()\ntot_df_lag_2['date_block_num']=tot_df_lag_2['date_block_num']+2\ntot_df_lag_2=tot_df_lag_2[tot_df_lag_2['date_block_num']<35]\ntot_df_lag_2.rename(columns={'item_cnt_day':'item_cnt_day_lag2'},inplace=True)","041c3fb8":"tot_df_lag_1.item_cnt_day_lag1.value_counts()","0dda72fe":"tot_df=tot_df.merge(tot_df_lag_1,on=['date_block_num','shop_id','item_id','revenue','item_category_id','item_price','city_code','days'],how='left').merge(tot_df_lag_2,on=['date_block_num','shop_id','item_id','revenue','item_category_id','item_price','city_code','days'],how='left')","fe5691fd":"tot_df.fillna(0,inplace=True)","e54eab1a":"X_train=tot_df[tot_df.date_block_num<33].drop(['item_cnt_day'],axis=1)\ny_train=tot_df[tot_df.date_block_num<33]['item_cnt_day']\nX_valid=tot_df[(tot_df.date_block_num==33)].drop(['item_cnt_day'],axis=1)\ny_valid=tot_df[(tot_df.date_block_num==33)]['item_cnt_day']\nX_test=tot_df[tot_df.date_block_num==34].drop(['item_cnt_day'],axis=1)","70bc38f9":"X_train.columns","42d48d4a":"categorical_feature_names=['shop_id','item_id','item_category_id','city_code']\nfeature_names = X_train.columns.tolist()\n\nparams = {\n    'objective': 'mse',\n    'metric': 'rmse',\n    'num_leaves': 255,\n    'learning_rate': 0.005,\n    'feature_fraction': 0.75,\n    'bagging_fraction': 0.75,\n    'bagging_freq': 5,\n    'seed': 1,\n    'verbose': 1,\n    'force_row_wise' : True\n}","cfccb660":"lgb_train = lgb.Dataset(X_train[feature_names], y_train, categorical_feature=None)\nlgb_eval  = lgb.Dataset(X_valid[feature_names], y_valid, categorical_feature=None, reference=lgb_train)","9fa74048":"#rfr=RandomForestRegressor(n_estimators=200)\n#rfr.fit(X_train,y_train)","5d1dbd99":"#y_pred=rfr.predict(X_valid)","3ea51e6d":"#mean_squared_error(y_valid,y_pred)","08ef621d":"evals_result = {}\ngbm = lgb.train(\n        params, \n        lgb_train,\n        num_boost_round = 4000,\n        valid_sets = (lgb_train, lgb_eval), \n        feature_name = feature_names,\n        categorical_feature = categorical_feature_names,\n        verbose_eval = 100, \n        evals_result = evals_result,\n        early_stopping_rounds = 100)","3e076838":"lgb.plot_importance(\n    gbm, \n    max_num_features=50, \n    importance_type='gain', \n    figsize=(12,8));","05cf0d91":"sample_submission['item_cnt_month'] = gbm.predict(X_test[feature_names]).clip(0, 20)\nsample_submission.to_csv('submission_manj.csv')","8e863927":"# Add additional features","e95703a8":"# Feature engineering","6b7483bc":"**Merge test data and add some more feature**"}}