{"cell_type":{"4d8c4600":"code","2f744f11":"code","96d4bae2":"code","aba68200":"code","2b977d3f":"code","57e159fa":"code","cdfd75b6":"code","c2ca679b":"markdown","8d92f77b":"markdown","ae82cd31":"markdown","52b0ba4d":"markdown","8add53d4":"markdown","22b55d7c":"markdown","b0fb233a":"markdown","d00f40bd":"markdown","4c1c1c93":"markdown","5a3162cb":"markdown","90c9fe7e":"markdown","bc32ac35":"markdown","24c8121a":"markdown"},"source":{"4d8c4600":"samples = ['M1', 'M2', 'M3', 'S1', 'S2', 'S3', 'S4', 'S5', 'S6', 'HC1', 'HC2', 'HC3']","2f744f11":"labels = ['M', 'M', 'M', 'S', 'S', 'S', 'S', 'S', 'S', 'HC', 'HC', 'HC']","96d4bae2":"[[0 1 0], [0 1 0], [0 1 0], [0 0 1], [0 0 1], [0 0 1], [0 0 1], [0 0 1], [0 0 1], [1 0 0], [1 0 0], [1 0 0]]","aba68200":"[0.6666666865348816, 0.8333333730697632, 0.8333333730697632, 0.8333333730697632, 0.6666666865348816, 1.0]","2b977d3f":"0.8055555820465088","57e159fa":"# making input data\n\nimport numpy as np\nimport pandas as pd\n\nimport scanpy as sc\nimport h5py\n    \nM1_141 = \"\/path\/GSE145926_RAW\/GSM4339769_C141_filtered_feature_bc_matrix.h5\"\nM2_142 = \"\/path\/GSE145926_RAW\/GSM4339770_C142_filtered_feature_bc_matrix.h5\"\nM3_144 = \"\/path\/GSE145926_RAW\/GSM4339772_C144_filtered_feature_bc_matrix.h5\"\n\nS1_145 = \"\/path\/GSE145926_RAW\/GSM4339773_C145_filtered_feature_bc_matrix.h5\"\n\nS2_143 = \"\/path\/GSE145926_RAW\/GSM4339771_C143_filtered_feature_bc_matrix.h5\"\nS3_146 = \"\/path\/GSE145926_RAW\/GSM4339774_C146_filtered_feature_bc_matrix.h5\"\nS4_148 = \"\/path\/GSE145926_RAW\/GSM4475051_C148_filtered_feature_bc_matrix.h5\"\nS5_149 = \"\/path\/GSE145926_RAW\/GSM4475052_C149_filtered_feature_bc_matrix.h5\"\nS6_152 = \"\/path\/GSE145926_RAW\/GSM4475053_C152_filtered_feature_bc_matrix.h5\"\n\nHC1_51 = \"\/path\/GSE145926_RAW\/GSM4475048_C51_filtered_feature_bc_matrix.h5\"\nHC2_52 = \"\/path\/GSE145926_RAW\/GSM4475049_C52_filtered_feature_bc_matrix.h5\"\nHC3_100 = \"\/path\/GSE145926_RAW\/GSM4475050_C100_filtered_feature_bc_matrix.h5\"\n\nsc.settings.verbosity = 3             # verbosity: errors (0), warnings (1), info (2), hints (3)\nsc.logging.print_versions()\nsc.settings.set_figure_params(dpi=80, facecolor='white')\n\nfiles = [M1_141, M2_142, M3_144, S1_145, S2_143, S3_146, S4_148, S5_149, S6_152, HC1_51, HC2_52, HC3_100]\nmarker_genes = ['ACE2', 'TNF', 'TNFSF13', 'TNFSF13B', 'TMPRSS2', 'FCN1', 'SPP1', 'FABP4',\n                'IL10', 'SLC22A4', 'CASP10', 'PRKCD', 'TNFAIP3', 'FOXP3', 'RET', 'NOD2', 'PLCG2', 'TCF4', 'RTEL1',\n                'HLA-DQB1', 'CIITA', 'HLA-DRB1', 'FCGR2A', 'FCGR2B', 'CTLA4', 'TREX1', 'IL18', 'IL1B','CSF1','IL4']\n\nsamples = ['M1', 'M2', 'M3', 'S1', 'S2', 'S3', 'S4', 'S5', 'S6', 'HC1', 'HC2', 'HC3']\n\ndef preprocess(file):\n    adata = sc.read_10x_h5(file, genome=None, gex_only=True)\n    adata.var_names_make_unique()\n    adata.var['mt'] = adata.var_names.str.startswith('MT-')  # annotate the group of mitochondrial genes as 'mt'\n    sc.pp.calculate_qc_metrics(adata, qc_vars=['mt'], percent_top=None, log1p=False, inplace=True)\n    sc.pp.normalize_total(adata, target_sum=1e4)\n    sc.pp.log1p(adata)\n    sc.pp.highly_variable_genes(adata, min_mean=0.0125, max_mean=3, min_disp=0.5) \n    return adata\n\ndef inputs(files):\n    dfs = []\n    for file in files:\n        adata = preprocess(file)\n        \n        col_ACE2 = adata.var.loc['ACE2','mean_counts']\n        col_TNF = adata.var.loc['TNF','mean_counts']\n        col_TNFSF13 = adata.var.loc['TNFSF13','mean_counts']\n        col_TNFSF13B = adata.var.loc['TNFSF13B','mean_counts']\n        col_TMPRSS2 = adata.var.loc['TMPRSS2','mean_counts']\n        col_FCN1 = adata.var.loc['FCN1','mean_counts']\n        col_SPP1 = adata.var.loc['SPP1','mean_counts']\n        col_FABP4 = adata.var.loc['FABP4','mean_counts']\n        col_IL10 = adata.var.loc['IL10','mean_counts']\n        col_SLC22A4 = adata.var.loc['SLC22A4','mean_counts']\n        col_CASP10 = adata.var.loc['CASP10','mean_counts']\n        col_PRKCD = adata.var.loc['PRKCD','mean_counts']\n        col_TNFAIP3 = adata.var.loc['TNFAIP3','mean_counts']\n        col_FOXP3 = adata.var.loc['FOXP3','mean_counts']\n        col_RET = adata.var.loc['RET','mean_counts']\n        col_NOD2 = adata.var.loc['NOD2','mean_counts']\n        col_PLCG2 = adata.var.loc['PLCG2','mean_counts']\n        col_TCF4 = adata.var.loc['TCF4','mean_counts']\n        col_RTEL1 = adata.var.loc['RTEL1','mean_counts']\n        col_HLADQB1 = adata.var.loc['HLA-DQB1','mean_counts']\n        col_CIITA = adata.var.loc['CIITA','mean_counts']\n        col_HLADRB1 = adata.var.loc['HLA-DRB1','mean_counts']\n        col_FCGR2A = adata.var.loc['FCGR2A','mean_counts']\n        col_FCGR2B = adata.var.loc['FCGR2B','mean_counts']\n        col_CTLA4 = adata.var.loc['CTLA4','mean_counts']\n        col_TREX1 = adata.var.loc['TREX1','mean_counts']\n        col_IL18 = adata.var.loc['IL18','mean_counts']\n        col_IL1B = adata.var.loc['IL1B','mean_counts']\n        col_CSF1 = adata.var.loc['CSF1','mean_counts']\n        col_IL4 = adata.var.loc['IL4','mean_counts']\n\n        column_names= [col_ACE2, col_TNF, col_TNFSF13, col_TNFSF13B, col_TMPRSS2, col_FCN1, col_SPP1, col_FABP4,\n                       col_IL10, col_SLC22A4, col_CASP10, col_PRKCD, col_TNFAIP3, col_FOXP3, col_RET, col_NOD2, \n                       col_PLCG2, col_TCF4, col_RTEL1, col_HLADQB1, col_CIITA, col_HLADRB1, col_FCGR2A, col_FCGR2B, \n                       col_CTLA4, col_TREX1, col_IL18, col_IL1B, col_CSF1, col_IL4]\n        df = pd.DataFrame(np.column_stack(column_names), columns=marker_genes)\n        dfs.append(df)\n        inputs = pd.concat(dfs, axis=0)\n    return inputs\n\nmodel_inputs = inputs(files).to_numpy()","cdfd75b6":"# building Keras mode\n# training\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.preprocessing import LabelBinarizer\nfrom sklearn.model_selection import train_test_split,KFold\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Activation, Dropout\nfrom keras import optimizers\nfrom keras.optimizers import RMSprop\nfrom keras import metrics\nfrom keras import regularizers\nfrom keras.callbacks import EarlyStopping, ModelCheckpoint, ReduceLROnPlateau\nimport tensorflow as tf\nimport keras.backend.tensorflow_backend as KTF\nfrom matplotlib import pyplot as plt\nimport numpy as np\n    \nnum_input = 30 #column\ntime_step = 1 #row\nn_hidden = 1 \nnum_class = 3\nbatch_size = 1\nn_epoch = 500\n\nmodel = Sequential()\nmodel.add(Dense(32, input_shape=(time_step,num_input),\n                batch_size=batch_size,\n                activation='sigmoid'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(3, activation='sigmoid'))\n##model.add(Dense(32,activation='relu'))\n#model.add(Dense(16, activation='sigmoid'))\nrmsprop = optimizers.RMSprop(lr=0.0005,clipnorm=1.0)\nmodel.compile(optimizer=rmsprop, loss='binary_crossentropy',\n              metrics=['accuracy'])\n\ndef get_callbacks(patience_lr):\n##    mcp_save = ModelCheckpoint(name_weights, save_best_only=True, monitor='val_loss', mode='min')\n    early_stop = EarlyStopping(monitor='loss',min_delta=0,patience=10,mode='min')\n##    reduce_lr_loss = ReduceLROnPlateau(monitor='loss',factor=0.1,patience=patience_lr,verbose=2,min_delta=1e-4,mode='min')\n    return [early_stop]\n\nlabels = ['M', 'M', 'M', 'S', 'S', 'S', 'S', 'S', 'S', 'HC', 'HC', 'HC']\nencoder = LabelBinarizer()\n_labels = encoder.fit_transform(labels)\n#print(OneHot_labels)\nxs = model_inputs.reshape(12,1,30) #row 1, col 30\nys = _labels.reshape(12,1,3)\n\n# enc = OneHotEncoder()\n# enc.fit(_labels)\n# ys = enc.transform(_labels).toarray().reshape(12,1,3)\n\nfolds = list(KFold(n_splits=6,shuffle=True,random_state=1).split(xs,ys))\n\n## Training\nscore = []\n\ntrain_loss = []\ntrain_acc = []\nval_loss = []\nval_acc = []\n\nfor j,(train_idx, val_idx) in enumerate(folds):\n    X_train_cv = xs[train_idx]\n    y_train_cv = ys[train_idx]\n    X_valid_cv = xs[val_idx]\n    y_valid_cv = ys[val_idx]\n    \n    name_weights = 'final_model_fold' + str(j) + 'weights.h5'\n    callbacks=get_callbacks(patience_lr=10)\n    history = model.fit(X_train_cv, y_train_cv, batch_size = batch_size,epochs = n_epoch,\n                        verbose = 2, shuffle=True, validation_data=(X_valid_cv, y_valid_cv),\n                        callbacks=callbacks)\n    metrics = model.evaluate(X_valid_cv,y_valid_cv,batch_size=batch_size)\n    print(metrics)\n    score.append(metrics[1])\n    \n##    plt.plot(history.history['loss'], label='train loss')\n##    plt.plot(history.history['accuracy'], label='train accuracy')\n##    plt.plot(history.history['val_loss'], label='test loss')\n##    plt.plot(history.history['val_accuracy'], label='test accuracy')\n##    plt.title('Feedforward with BP Classification')\n##    plt.xlabel('Epochs')\n##    plt.ylabel('Performance')\n##    plt.legend(loc='upper right')\n##    plt.show()\n    \n    train_loss.extend(history.history['loss'])\n    train_acc.extend(history.history['accuracy'])\n    val_loss.extend(history.history['val_loss'])\n    val_acc.extend(history.history['val_accuracy'])\n\nprint(score)\nprint(np.mean(score))\n\nfig, ax = plt.subplots(figsize = (8,7), dpi=100)\nfig.tight_layout()\nplt.plot(train_loss, label='train loss')\nplt.plot(val_loss, label='val loss')\nplt.plot(train_acc, label= 'train accuracy')\nplt.plot(val_acc, label='val accuracy')\nplt.xlabel('Epochs')\nplt.legend(loc='upper left')\nplt.show()\n\n","c2ca679b":"**<font size=3>Conduct deep learning model<\/font>**\n\nWe adopt API Keras(https:\/\/keras.io) to build our Artificial Neural Network, from Part 1, our input data shape is: (12,30)Parameters fine tuning as below table:\n\n![avatar](https:\/\/tva1.sinaimg.cn\/large\/007S8ZIlgy1gfuxrpt7q5j31790dst9z.jpg)\n\n\n**<br><font size=5>Result<\/font><br>**\n\n\n**<br><font size=3>COVID-19 patients carried several autoimmune disease HPO genes<\/font><br>**\n\nWe can see the overlapping genes within COVID-19 and 4 major kind of autoimmune disease via the Venn diagram(Fig.1). There are 18 genes overlapping between COVID-19 and 4 major kind of autoimmune disease. Among them, 9 genes share between COVID-19 and IBD(*CASP10, FOXP3, NOD2, PLCG2, PRKCD, RET, RTEL1, TCF4, TNFAIP3*), *IL10, SLC22A4 *shared in COVID-19 and RA, HLA-DQB1 shared between COVID-19 and MS, 4 genes shared between COVID-19 and SLE(C*TLA4, FCGR2A, FCGR2B, TREX1*).Notably, *CIITA* share between COVID-19,BD and RA, and *HLA-DRB1* both present in COVID-19 patient and IBD,RA,MS patients.\n\n![avatar](https:\/\/i1.lensdump.com\/i\/jHpO0q.png)\n","8d92f77b":"While M<sub>x<\/sub> is moderate Covid-19 patients, S<sub>x<\/sub> is severe Covid-19 patients, HC<sub>x<\/sub> is healthy control, which means their genes are not related to any Covid-19 expressions.\nThis indicates that we can use this information as the ANN\u2019s labels, after One Hot Encode.","ae82cd31":"**<br><font size=3>Develop forecast model to predict the disease state of COVID-19 patients or health people<\/font><br>**\n\n**<font size=3>Prepare input data<\/font>**\n\nWe applied API Scanpy<sup>19<\/sup> to handle our 10x Genomic h5 data, which is released by the public biotechnology library: NCBI. Process the h5 data with Mitochondria quality control(MQC). \n\nSeveral key values to evaluate gene expression show as below: \n![avatar](https:\/\/tva1.sinaimg.cn\/large\/007S8ZIlgy1gfuxqn5qeoj319q0lfwh3.jpg)\n\nFrom observation by my instinct as a Data Engineer, we employ \u2018mean_counts\u2019 as key value to evaluate the level of gene expression in different sample\u2019s cells. From the analysis before, we take 30 genes, because these 30 genes are observed highly changed in Covid-19 patients and healthy people. Below is how we design our input data for our artificial neural network.\n\n![avatar](https:\/\/tva1.sinaimg.cn\/large\/007S8ZIlgy1gfuykio0llj311d0gd75f.jpg)\n\nSetting Labels \nWe have collected 12 samples from the public gene library, they are marked as :","52b0ba4d":"**<br><font size=5>Materials<\/font><br>**\n\n\n**<br><font size=3>Data Sources<\/font><br>**\n\nSingle-cell RNA sequencing data of bronchoalveolar lavage fluid immune cells from patients with varying severity of COVID-19 and from healthy people were obtained from the research by Mengfeng Liao et al which contained three moderate cases (M1\u2013M3), one severe case (S1) and five critical cases (S2\u2013S6), three healthy controls(HC1 to HC3). Data download from the Gene Expression Omnibus (GEO https:\/\/www.ncbi.nlm.nih.gov\/) in terms of GSE145926.\n\n**<br><font size=3>Gene sets collection<\/font><br>**\n\n**<font size=3>Gene set-1 : Cytokine storm related genes<\/font>**\n\nWe collected the gene set base on the recently published literature.*ACE2* and *TMPRSS2* have been identified as SARS-CoV-2 host cell factors<sup>11,12<\/sup>. *TNF* is critical in nearly all acute inflammatory reactions and the anti-tumor necrosis factor (anti-TNF) antibodies are publicly using in severe cases of autoimmune inflammatory disease such as RA, IBD, or AS for around 20 years. Now trials of anti-tumour necrosis factor therapy for COVID-19 are vigorously promoted13. A single-cell sequencing of Immune cell pro\ufb01ling of COVID-19 by Wen, W.et al have identify IL-1\u03b2 and *M-CSF*(or *CSF1*) as novel candidate target genes for in\ufb02ammatory storm and some cytokine including *TNFSF13, IL-18, IL-2*, and *IL-4* maybe contribute to the recovery of COVID-19 patients<sup>14<\/sup>.Besides, *FCN1* and *SPP1* were highly expressed by severe\/critical COVID-19 patients while *FABP4* was preferentially expressed by patients with moderate infection and healthy control<sup>15<\/sup>.\n\nOverall, the gene-set including 13 genes, they are *ACE2, TNF, TNFSF13, TNFSF13B, TMPRSS2, FCN1, SPP1, FABP4, IL-18, IL-2, IL-4, IL-1\u03b2*(or *IL1B*), *M-CSF*(or *CSF1*). While IL-2 is absent in the **GSE145926** data. So only 12 genes used in the further study. Details information of the genes please see Table1. \n\n**<br><font size=3>Gene set-2 : 4 major kind of autoimmune disease HPO associate genes<\/font><br>**\n\nThese 4 major kind of autoimmune disease are inflammatory bowel disease(IBD), rheumatoid arthritis(RA), multiple sclerosis(MS), systemic lupus erythematosus(SLE).\nWe download the HPO associate genes of these 4 major kind of autoimmune disease from the Human Phenotype Ontology(HPO) database on 14, June, 2020.Stored in the Table 2-5, which contains 50, 18, 3, 6 genes respectively.\n","8add53d4":"**<br><font size=5>Methods<\/font><br>**\n\n**<br><font size=3>Identify the overlapping genes between COVID-19 patients and gene-set 2 and 3<\/font><br>**\n\nWe generated the Venn diagram by jveen web-tool(http:\/\/jvenn.toulouse.inra.fr\/app\/index.html) to identify which autoimmune disease HPO genes COVID-19 patients carried and absent in Health control. Then used the overlapping genes between COVID-19 patients and autoimmune disease HPO genes as the input the following forecast model.\n\n**<br><font size=3>Conduct COVID-19 candidate risk genes-set<\/font><br>**\nWe combined these 18 COVID-19 and 4 major kinds of autoimmune disease overlapping genes with 12 Cytokine storm-related genes in gene-set 1 as our new COVID-19 candidate risk genes-set. These 30 genes will be the marker in the following forecast model. We generated the heatmap base on the \u201cmean_count\u201d of  each gene within the samples by Morpheus from Broad Institute with Hierarchical clustering was carried out using the Pearson correlation method.(https:\/\/software.broadinstitute.org\/morpheus\/).\n\n**<br><font size=3>Gene enrichment network analysis<\/font><br>**\nWe performed gene enrichment network analysis by g:profiler (https:\/\/biit.cs.ut.ee\/gprofiler\/gost) and visualized the pathway enrichment via Cystoscope(v3.80)<sup>16<\/sup> with the plugin of Enrichmentmap<sup>17<\/sup> and WordCloud<sup>18<\/sup>.\n","22b55d7c":"**<br><font size=5>Background<\/font><br>**\n\nCoronavirus disease 2019 (COVID-19) pandemic is highly infectious cause by severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2), which can lead to fatal comorbidities especially acute respiratory distress syndrome (ARDS). Although the pathogenesis of SARS-CoV-2 infection remains unclear, the previous researcher has found several risk factors increase susceptibility to infection based on the epidemiologic characteristics observed so far in globe wide including age, smoking status, Diabetes, cardio- and cerebrovascular disease, cancer, chronic respiratory diseases and so on<sup>1-5<\/sup>.factor can help to better understand the disease, thereby accelerating the research of precision treatment. \n\nAvailable evidence indicates that the innate and adaptive immune system of COVID-19 patients both occurred changes. In particular, a state of a variety of inflammatory cytokines releasing out-of-control, \"cytokine storm\", a key hallmark of the overreaction of the body's immune system as well as the major responsibility for the occurrence of ARDS6<sup>6<\/sup>.\nGeneral considered that autoimmune disease patients facing increasing infectious risk compared to the general population whose immune system has an overall impairment and long-term using the corticosteroids and immunosuppressive drugs, such as cytokine blockers<sup>7-9<\/sup>. However, some anti-rheumatic drugs have been used as potential treatment options in the clinic, for instance, glucocorticoids, IL-6 antagonist, JAK inhibitors and choloroquine\/hydrocholoroquine<sup>10<\/sup>.\n\nUnderstanding the association between autoimmune disease and COVID-19 will contribute to drugs investigation and treatment therapy development. Here, we hypothesis that autoimmune disease is a risk factor of COVID-19 which affair the immune system of patients.","b0fb233a":"Hence, output shape is : (12, 3). But due to the inherit property of the Keras ANN, it always feeds 3 dimensional data, input and output need to be reshaped as (12,1,30), (12,1,3), respectively.","d00f40bd":"**<br><font size=5>Study strategy<\/font><br>**\n\n1.\tCollected candidate target gene sets in terms of cytokine storm and several autoimmune diseases from literature. The autoimmune diseases involved this study including inflammatory bowel disease(IBD), rheumatoid arthritis(RA), multiple sclerosis(MS), systemic lupus erythematosus(SLE).\n\n2.\tPerform meta-analysis of Single-cell RNA sequencing data of varying severity of COVID-19 and from healthy people to select the overlapping genes between COVID-19 and cytokine storm as well as several autoimmune diseases, which may priority as COVID-19 drug target genes.\n\n3.\tCompare the gene expression of these overlapping genes in different COVID-19 disease states and health states.\n\n4.\tInvestigate which enrichment pathway are these overlapping genes involved.\n\n5.\tUsing Scanpy API to read large-scale single-cell h5 matrix and Keras API to build an artificial neural network model to conduct a COVID-19 patient state forecast model.","4c1c1c93":"**<br><font size=3>Cross validation<\/font><br>**\n\n12 samples, cross validation splits input features and output labels as 6 folds, each fold has 2 samples, the last fold is taken as validation dataset, which is of course way too small compared to other well-designed ANN model, but there are few released Covid-19 samples. We shuffle the dataset after cross validation, so that each sample can be used as validation dataset.\n\n\n\n**<br><font size=5>Conclusion and Discussion<\/font><br>**\n\nIn this study, we have generated COVID-19 candidate risk genes base on literature and autoimmune disease HPO associate genes via a series of bioinformatic analyses. Under the Single-cell RNA sequencing data of varying severity of COVID-19 and from healthy people, by using these 30 COVID-19 candidate risk genes as our ANN model input data, which yields expected accuracy and loss, this forecast model can be used to assess COVID-19 disease states. we hypothesis that autoimmune disease is a risk factor of COVID-19, the pathway analysis have shown the associated between COVID-19 and autoimmune disease (IBD, RA, MS, SLE). While still need more samples to validate our model and the clinical study to support.","5a3162cb":"**<br><font size=5>Reference<\/font><br>**\n\n1. Zhou, F. et al. Clinical course and risk factors for mortality of adult inpatients with COVID-19 in Wuhan, China: a retrospective cohort study. *Lancet* **395**, 1054\u20131062 (2020).\n2. Bornstein, S. R. et al. Practical recommendations for the management of diabetes in patients with COVID-19. *Lancet Diabetes Endocrinol* **8**, 546\u2013550 (2020).\n3. Bansal, M. Cardiovascular disease and COVID-19. *Diabetes Metabolic Syndrome Clin Res Rev* **14**, 247\u2013250 (2020).\n4. Wang, H. & Zhang, L. Risk of COVID-19 for patients with cancer. *Lancet Oncol* **21**, e181 (2020).\n5. Halpin, D. M. G., Faner, R., Sibila, O., Badia, J. R. & Agusti, A. Do chronic respiratory diseases or their treatment affect the risk of SARS-CoV-2 infection? *Lancet Respir Medicine* *8*, 436\u2013438 (2020).\n6. Coperchini, F., Chiovato, L., Croce, L., Magri, F. & Rotondi, M. The cytokine storm in COVID-19: An overview of the involvement of the chemokine\/chemokine-receptor system. *Cytokine Growth F R* **53**, 25\u201332 (2020).\n7. Monteleone, G., Sarzi-Puttini, P. C. & Ardizzone, S. Preventing COVID-19-induced pneumonia with anticytokine therapy. *Lancet Rheumatology* **2**, e255\u2013e256 (2020).\n8. Catanzaro, M. et al. Immune response in COVID-19: addressing a pharmacological challenge by targeting pathways triggered by SARS-CoV-2. *Signal Transduct Target Ther* **5**, 84 (2020).\n9. Favalli, E. G. et al. COVID-19 infection and rheumatoid arthritis: Faraway, so close! *Autoimmun Rev* **19**, 102523 (2020).\n10. Zhang, W. et al. The use of anti-inflammatory drugs in the treatment of people with severe coronavirus disease 2019 (COVID-19): The Perspectives of clinical immunologists from China. *Clin Immunol* **214**, 108393 (2020).\n11. Zheng, Y.-Y., Ma, Y.-T., Zhang, J.-Y. & Xie, X. COVID-19 and the cardiovascular system. *Nat Rev Cardiol* **17**, 259\u2013260 (2020).\n12. Hoffmann, M. et al. SARS-CoV-2 Cell Entry Depends on ACE2 and TMPRSS2 and Is Blocked by a Clinically Proven Protease Inhibitor. *Cell * **181**, 271-280.e8 (2020).\n13. Feldmann, M. et al. Trials of anti-tumour necrosis factor therapy for COVID-19 are urgently needed.*Lancet* **395**, 1407\u20131409 (2020).\n14. Wen, W. et al. Immune cell profiling of COVID-19 patients in the recovery stage by single-cell sequencing. *Cell Discov* **6**, 31 (2020).\n15. Liao, M. et al. Single-cell landscape of bronchoalveolar immune cells in patients with COVID-19.*Nat Med* **1\u20133**(2020) doi:10.1038\/s41591-020-0901-9.\n16. Shannon, P. et al. Cytoscape: A Software Environment for Integrated Models of Biomolecular Interaction Networks. *Genome Res* **13**, 2498\u20132504 (2003).\n17. Merico, D., Isserlin, R., Stueker, O., Emili, A. & Bader, G. D. Enrichment map: a network-based method for gene-set enrichment visualization and interpretation. *Plos One* **5**, e13984 (2010).\n18. Oesper, L., Merico, D., Isserlin, R. & Bader, G. D. WordCloud: a Cytoscape plugin to create a visual semantic summary of networks. *Source Code Biology Medicine* **6**, 7 (2011).\n19. Wolf, F. A., Angerer, P. & Theis, F. J. SCANPY: large-scale single-cell gene expression data analysis. *Genome Biol* **19**, 15 (2018).\n\n","90c9fe7e":"**<br><font size=5>Result<\/font><br>**\n\n**<br><font size=3>COVID-19 patients carried several autoimmune disease HPO genes<\/font><br>**\n\nWe can see the overlapping genes within COVID-19 and 4 major kind of autoimmune disease via the Venn diagram(Fig.1). There are 18 genes overlapping between COVID-19 and 4 major kind of autoimmune disease. Among them, 9 genes share between COVID-19 and IBD(*CASP10, FOXP3, NOD2, PLCG2, PRKCD, RET, RTEL1, TCF4, TNFAIP3*), *IL10, SLC22A4 *shared in COVID-19 and RA, HLA-DQB1 shared between COVID-19 and MS, 4 genes shared between COVID-19 and SLE(C*TLA4, FCGR2A, FCGR2B, TREX1*).Notably, *CIITA* share between COVID-19,BD and RA, and *HLA-DRB1* both present in COVID-19 patient and IBD,RA,MS patients.\n\n![avatar](https:\/\/i1.lensdump.com\/i\/jHpO0q.png)\n\n**<br><font size=3>30 COVID-19 candidate risk genes expression different between severe COVID-19 patients and healthy controls<\/font><br>**\n\nWe can clearly observe that most of the genes within the COVID-19 candidate risk genes set are highly express compare from severe COVID-19 patients to moderate and healthy controls cases, except the gene *FABP4* and *HLA-DRB1, HLD-DQB1, RTEL1*\n(Fig.2). While we still used these genes in the following Artificial Neural Network building.\n\n![avatar](https:\/\/i1.lensdump.com\/i\/jHpHBA.png)\n\n**<br><font size=3>Pathway analysis of COVID-19 candidate risk genes<\/font><br>**\n\nThe pathway network shows the COVID-19 candidate risk genes highly express the immune-related pathway such as positive regulation of immune system process(p=7.94 x 10<sup>-14<\/sup>), leukocyte activation(p=4.12 x 10<sup>-13<\/sup>), inflammatory response(p=7.76 x 10<sup>-13<\/sup>), lymphocyte activation(p=1.2510<sup>-11<\/sup>), cytokine production(p=6.34 x 10<sup>-11<\/sup>) et.al. This indicated that autoimmune disease related genes and pathways highly associate with COVID-19.\n\n![avatar](https:\/\/i1.lensdump.com\/i\/jHplYM.png)\n\n**<font size=3>Artificial Neural Network<\/font>**\n\n*Details please see the python script below*\n\n**<br><font size=3>Model Accuracy and loss analysis<\/font><br>**\n\nThere are only 12 samples, obviously, the learning curve will fluctuate intensively. Especially there\u2019re only 2 samples for validation, the validation accuracy and validation loss fluctuate even more intensively than training curve. we append all \u2018train loss\u2019 into one list, do the same for \u2018val loss\u2019, \u2018train accuracy\u2019, \u2018val accuracy\u2019, and plot:\n\n\n![avatar](https:\/\/tva1.sinaimg.cn\/large\/007S8ZIlgy1gfuw72c10zj31e00u0gtt.jpg)\n\nWe also observed that, the tendency of the green line(train accuracy) and blue line(train loss) are basically as expected: accuracy should gradually slightly go rise while loss should gradually slightly go decline.\nHere is the validation accuracy of 6-folds cross validation:\n","bc32ac35":"And the mean is ","24c8121a":"**<br><font size=5>Predicting the state of COVID-19 patient using the meta-analysis of single-cell landscape immune cells data driven deep learning<\/font><br>**\n\n\n**<br><font size=5>Project description<\/font><br>**\n \n<br>**Research Code Competition**:  COVID19 Global Forecasting (Week 5)<br>\n\n**Task**: \u201cForecast daily COVID-19 spread in regions around world\u201d  "}}