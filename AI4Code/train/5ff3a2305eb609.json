{"cell_type":{"8fcc68c4":"code","45cd46d3":"code","a094580a":"code","85b2b738":"code","b0662faa":"code","6d76e8a1":"code","6273f0e5":"code","66129a35":"code","043916c1":"code","383bc420":"code","cf00b8e4":"code","492aa517":"code","2e5e10af":"code","4a6aadf4":"code","d8c5a287":"code","e63e803e":"code","67378ff9":"code","2bcf9dd7":"code","ee733fb9":"code","3dba0162":"code","f8082d11":"code","ba1f431c":"code","6739d515":"code","96b98dcc":"code","b6333665":"code","4eb4834a":"code","9d0a1868":"code","dba5d13b":"code","b97a0e11":"code","177b377b":"code","6b853db7":"code","d046fc7e":"code","8fd7b275":"code","af81cd16":"code","c0c28fd4":"code","3f4bd5ee":"markdown","f9f40a61":"markdown","f16de908":"markdown","12fd3bab":"markdown","f548a269":"markdown"},"source":{"8fcc68c4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\nimport warnings\nwarnings.simplefilter('ignore')\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","45cd46d3":"data = pd.read_csv('..\/input\/Iris.csv')","a094580a":"data.head()","85b2b738":"data.info()","b0662faa":"sns.pairplot(data=data,hue='Species')","6d76e8a1":"data = data.drop('Id',axis=1)","6273f0e5":"data['Species'].unique()","66129a35":"#categorising species into numerical values\n\ndef turn_numeric(iris_x):\n    if iris_x == 'Iris-setosa':\n        return 0\n    if iris_x == 'Iris-versicolor':\n        return 1\n    if iris_x == 'Iris-virginica':\n        return 2\n    else:\n        print(iris_x)\n        return","043916c1":"data['Species'] = data['Species'].apply(turn_numeric)","383bc420":"data.head()","cf00b8e4":"data.isnull().values.any()","492aa517":"X = data.drop('Species',axis=1)\ny = data['Species']","2e5e10af":"#scaling values so that euclidean distance can do its work\nfrom sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()","4a6aadf4":"scaled_features = scaler.fit_transform(X)","d8c5a287":"#scaled features\nscaled_features","e63e803e":"df_feat = pd.DataFrame(data=scaled_features,columns=X.columns)","67378ff9":"df_feat.head()","2bcf9dd7":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(df_feat, y, test_size=0.3,random_state=101)","ee733fb9":"from sklearn.neighbors import  KNeighborsClassifier","3dba0162":"#elbow method to calculate k value\n\nerror_rate = []\nfor i in range(1,40):\n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train,y_train)\n    pred_i = knn.predict(X_test)\n    error_rate.append(np.mean(pred_i != y_test))\n\nplt.figure(figsize=(10,6))\nplt.plot(range(1,40),error_rate,marker='o')","f8082d11":"KNN = KNeighborsClassifier(n_neighbors=7)\nKNN.fit(X_train,y_train)\nactual_pred = KNN.predict(X_test)\nfrom sklearn.metrics import classification_report,confusion_matrix\nprint(classification_report(y_test,actual_pred))\nprint('\\n')\nprint(confusion_matrix(y_test,actual_pred))","ba1f431c":"import tensorflow as tf","6739d515":"data.head()","96b98dcc":"X_deep = data.drop('Species',axis=1)\ny_deep = data['Species']","b6333665":"X_deep_train, X_deep_test, y_deep_train, y_deep_test = train_test_split(X_deep, y_deep, test_size=0.3,random_state=101)","4eb4834a":"#creating feature columns\nfeat_cols = []\n\nfor col in X_deep.columns:\n    feat_cols.append(tf.feature_column.numeric_column(col))","9d0a1868":"feat_cols","dba5d13b":"#creating an input function - \ninput_func = tf.estimator.inputs.pandas_input_fn(x=X_deep_train,y=y_deep_train,batch_size=10,num_epochs=5,shuffle=True)","b97a0e11":"#defining a classifier\nclassifier = tf.estimator.DNNClassifier(hidden_units=[10, 20, 10], n_classes=3,feature_columns=feat_cols)","177b377b":"#fitting the classifier on the input function\nclassifier.train(input_fn=input_func,steps=50)","6b853db7":"#evaluation\npred_fn = tf.estimator.inputs.pandas_input_fn(x=X_deep_test,batch_size=len(X_deep_test),shuffle=False)","d046fc7e":"note_predictions = list(classifier.predict(input_fn=pred_fn))","8fd7b275":"#each dictionary corresponds to a prediction - class_ids is the prediction\nnote_predictions","af81cd16":"final_preds  = []\nfor pred in note_predictions:\n    final_preds.append(pred['class_ids'][0])","c0c28fd4":"print(classification_report(y_deep_test,final_preds))\nprint('\\n')\nprint(confusion_matrix(y_deep_test,final_preds))","3f4bd5ee":"Using ML Algo - KNN to classify the species - ","f9f40a61":"Iris Verginica can be easily seperated out. For the other 2, there is some overlapping which might contribute to some error in predictions.","f16de908":"K=7 seems to be the appropriate value","12fd3bab":"Deep Learning out perform other techniques if the data size is large. But with small data size, traditional Machine Learning algorithms are preferable.\n\nref - https:\/\/towardsdatascience.com\/why-deep-learning-is-needed-over-traditional-machine-learning-1b6a99177063","f548a269":"Lets use deep learning using tensorflow - "}}