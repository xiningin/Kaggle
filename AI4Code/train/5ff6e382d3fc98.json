{"cell_type":{"30e19d46":"code","8803ff47":"code","ee7105df":"code","9a0e8664":"code","c5f02c82":"code","74b90a8d":"code","5edcd243":"code","ad04e2f6":"code","27428dc3":"code","04025950":"code","71df1f55":"code","e5958e02":"code","debe340a":"code","e02a1ab1":"code","c776c0e2":"code","3e3dacf9":"code","43d9bf2b":"code","bcc91675":"code","f8c0554f":"code","1152221b":"code","22ed19a5":"code","d540b1bc":"code","546889bb":"code","7f88fc82":"code","ac24c017":"code","3e44288b":"code","8f7ad42e":"code","046298eb":"code","5ec2ba98":"markdown","b7eeeff3":"markdown","6ad8d438":"markdown","ee2fc537":"markdown","6e380082":"markdown","2efa0e03":"markdown","6635430c":"markdown","dfeee4cc":"markdown","8d49d82a":"markdown","14347507":"markdown","9fab553d":"markdown","15b07c09":"markdown","e91626e3":"markdown","30b9620b":"markdown","85055d03":"markdown","e6e3ecf9":"markdown","d0621c5b":"markdown","5a8e9e8c":"markdown","ff3ed009":"markdown","3d8235c2":"markdown","b3426506":"markdown","636b2133":"markdown"},"source":{"30e19d46":"from IPython.display import HTML\nf = open(\"..\/input\/notebookassets\/blue.css\").read()\nHTML(f\"<style>{f}<\/style>\")","8803ff47":"! pip install -q dabl rich","ee7105df":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport random\nimport warnings\n\nimport plotly\nimport plotly.figure_factory as ff\n\nimport rich\nimport dabl\n\ncmap = plt.get_cmap('Spectral')\ncolors = [cmap(i) for i in np.linspace(0, 1, 15)]\nwarnings.simplefilter(\"ignore\")","9a0e8664":"data = pd.read_csv(\"..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv\")\ndata.head()","c5f02c82":"print(f\"Shape of data is: {data.shape}\")","74b90a8d":"data.info()","5edcd243":"data.describe()","ad04e2f6":"data.isna().sum()","27428dc3":"percent_null_bmi = (data['bmi'].isna().sum() \/ data.shape[0]) * 100\nprint(f\"Percentage of Null values in BMI column: \\033[2;37;31m{percent_null_bmi:.2f}%\\033[0;37;31m\")","04025950":"# Let's drop the Null values\ndata = data.dropna()","71df1f55":"plt.style.use(\"classic\")\nsns.distplot(data['age'], color='magenta', kde=True)\nplt.axvline(data['age'].mean(), color='orange', linestyle='-', linewidth=0.8)\nmin_ylim, max_ylim = plt.ylim()\nplt.text(data['age'].mean()*1.05, max_ylim*0.95, 'Mean (\u03bc): {:.2f}'.format(data['age'].mean()))\nplt.xlabel(\"Age (in years)\")\nplt.title(f\"Distribution of Ages\")\nplt.show()","e5958e02":"sns.set(style=\"whitegrid\")\nlabels = data['gender'].value_counts().index.tolist()[:2]\nvalues = data['gender'].value_counts().tolist()[:2]\n\nplt.pie(x=values, labels=labels, autopct=\"%1.2f%%\", colors=colors, explode=[0, 0.005], shadow=True)\nplt.title(\"Gender Distribution Pie Chart\", fontdict={'fontsize': 14})\nplt.show()","debe340a":"sns.set(style=\"whitegrid\")\nlabels = [\"Not Present\", \"Present\"]\nvalues = data['hypertension'].value_counts().tolist()\n\nplt.pie(x=values, labels=labels, autopct=\"%1.2f%%\", colors=colors[::-1], shadow=True, explode=[0, 0.2])\nplt.title(\"Hypertension Distribution Pie Chart\", fontdict={'fontsize': 14})\nplt.show()","e02a1ab1":"sns.set(style=\"whitegrid\")\nrandom.shuffle(colors)\nlabels = [\"Heart Disease Absent\", \"Heart Disease Present\"]\nvalues = data['heart_disease'].value_counts().tolist()\n\nplt.pie(x=values, labels=labels, autopct=\"%1.2f%%\", colors=colors, shadow=True, explode=[0, 0.2])\nplt.title(\"Heart Disease Distribution Pie Chart\", fontdict={'fontsize': 14})\nplt.show()","c776c0e2":"sns.set(style=\"whitegrid\")\nrandom.shuffle(colors)\nlabels = [\"Married\", \"Never Married\"]\nvalues = data['ever_married'].value_counts().tolist()\n\nplt.pie(x=values, labels=labels, autopct=\"%1.2f%%\", colors=colors, shadow=True)\nplt.title(\"Marital Status Pie Chart\", fontdict={'fontsize': 14})\nplt.show()","3e3dacf9":"sns.set(style=\"whitegrid\")\nrandom.shuffle(colors)\nlabels = [\"Private Job\", \"Self-employed\", \"Have Children\", \"Goverment Job\", \"Never Worked Before\"]\nvalues = data['work_type'].value_counts().tolist()\n\nplt.pie(x=values, labels=labels, autopct=\"%1.2f%%\", colors=colors, shadow=True, explode=[0.1, 0.1, 0.1, 0.1, 0.2])\nplt.title(\"Work Type Pie Chart\", fontdict={'fontsize': 14})\nplt.show()","43d9bf2b":"sns.set(style=\"whitegrid\")\nrandom.shuffle(colors)\nlabels = [\"Urban Residence\", \"Rural Residence\"]\nvalues = data['Residence_type'].value_counts().tolist()\n\nplt.pie(x=values, labels=labels, autopct=\"%1.2f%%\", colors=colors, shadow=True)\nplt.title(\"Residence Type Pie Chart\", fontdict={'fontsize': 14})\nplt.show()","bcc91675":"plt.style.use(\"classic\")\nplt.figure(figsize=(10, 7))\nsns.distplot(data['avg_glucose_level'], color='darkblue', kde=True)\nplt.axvline(data['avg_glucose_level'].mean(), color='red', linestyle='-', linewidth=0.8)\nmin_ylim, max_ylim = plt.ylim()\nplt.text(data['avg_glucose_level'].mean()*1.05, max_ylim*0.9, 'Mean (\u03bc): {:.2f}'.format(data['avg_glucose_level'].mean()))\nplt.xlabel(\"Average Glucose Level\")\nplt.title(f\"Distribution of Average Glucose Level\")\nplt.show()","f8c0554f":"plt.style.use(\"classic\")\nplt.figure(figsize=(10, 7))\nsns.distplot(data['bmi'], color='darkred', kde=True)\nplt.axvline(data['bmi'].mean(), color='darkgreen', linestyle='-', linewidth=1)\nmin_ylim, max_ylim = plt.ylim()\nplt.text(data['bmi'].mean()*1.05, max_ylim*0.9, 'Mean (\u03bc): {:.2f}'.format(data['bmi'].mean()))\nplt.xlabel(\"Body Mass Index\")\nplt.title(f\"Distribution of Body Mass Index\")\nplt.show()","1152221b":"sns.set(style=\"whitegrid\")\nrandom.shuffle(colors)\nlabels = [\"Never Smoked Before\", \"Unknown\", \"Ex-Smoker\", \"Currently Smokes\"]\nvalues = data['smoking_status'].value_counts().tolist()\n\nplt.pie(x=values, labels=labels, autopct=\"%1.2f%%\", colors=colors, shadow=True)\nplt.title(\"Smoking Status Pie Chart\", fontdict={'fontsize': 14})\nplt.show()","22ed19a5":"sns.set(style=\"whitegrid\")\nrandom.shuffle(colors)\nlabels = [\"Did not get a Stroke\", \"Did get a Stroke\"]\nvalues = data['stroke'].value_counts().tolist()\n\nplt.pie(x=values, labels=labels, autopct=\"%1.2f%%\", colors=colors, shadow=True, explode=[0, 0.1])\nplt.title(\"Stroke Pie Chart\", fontdict={'fontsize': 14})\nplt.show()","d540b1bc":"avg_male_age = data[data['gender'] == 'Male']['age'].mean()\navg_female_age = data[data['gender'] == 'Female']['age'].mean()\n\nplt.style.use(\"classic\")\nplt.figure(figsize=(16, 6))\nsns.kdeplot(data.loc[data['gender'] == 'Male', 'age'], label = 'Male', shade=True, color='darkred')\nsns.kdeplot(data.loc[data['gender'] == 'Female', 'age'], label = 'Female', shade=True, color='darkblue')\n\nplt.axvline(avg_male_age, color='orange', linestyle='-', linewidth=1)\nmin_ylim, max_ylim = plt.ylim()\nplt.text(avg_male_age-20, max_ylim*0.93, 'Avg. Male Age: {} yrs'.format(int(avg_male_age)))\n\nplt.axvline(avg_female_age, color='magenta', linestyle='-', linewidth=1)\nmin_ylim, max_ylim = plt.ylim()\nplt.text(avg_female_age*1.05, max_ylim*0.93, 'Avg. Female Age: {} yrs'.format(int(avg_female_age)))\n\nplt.xlabel('Age')\nplt.ylabel('Density')\nplt.title('Distribution of Ages for Male and Female Patients')\nplt.legend()\nplt.show()","546889bb":"plt.style.use(\"classic\")\nplt.figure(figsize=(16, 6))\nsns.kdeplot(data.loc[data['Residence_type'] == 'Urban', 'age'], label = 'Urban', shade=True, color='yellow')\nsns.kdeplot(data.loc[data['Residence_type'] == 'Rural', 'age'], label = 'Rural', shade=True, color='green')\n\nplt.xlabel('Age')\nplt.ylabel('Density')\nplt.title('Distribution of Ages for Urban and Rural Patients')\nplt.legend()\nplt.show()","7f88fc82":"fig = ff.create_2d_density(\n    x=data['age'],\n    y=data['avg_glucose_level'],\n    title=\"Age-Average Glucose Level Density Plot\",\n    colorscale=['#7A4579', '#D56073', 'rgb(236,158,105)', (1, 1, 0.2), (0.98,0.98,0.98)]\n)\n\nfig.show()","ac24c017":"fig = ff.create_2d_density(\n    x=data['avg_glucose_level'],\n    y=data['bmi'],\n    title=\"Average Glucose Level-BMI Density Plot\",\n    colorscale=['#7A4579', '#D56073', 'rgb(236,158,105)', (1, 1, 0.2), (0.98,0.98,0.98)]\n)\n\nfig.show()","3e44288b":"fig = ff.create_2d_density(\n    x=data['avg_glucose_level'],\n    y=data['stroke'],\n    title=\"Average Glucose Level-Stroke Density Plot\",\n    colorscale=['#7A4579', '#D56073', 'rgb(236,158,105)', (1, 1, 0.2), (0.98,0.98,0.98)]\n)\n\nfig.show()","8f7ad42e":"fig = ff.create_2d_density(\n    x=data['bmi'],\n    y=data['stroke'],\n    title=\"BMI-Stroke Density Plot\",\n    colorscale=['#7A4579', '#D56073', 'rgb(236,158,105)', (1, 1, 0.2), (0.98,0.98,0.98)]\n)\n\nfig.show()","046298eb":"dabl.plot(data, y='stroke')","5ec2ba98":"Let's check the Null values in the dataset and their proportions.","b7eeeff3":"## Age \ud83d\udcdf","6ad8d438":"## Work Type \ud83d\udc68\u200d\ud83c\udfed","ee2fc537":"### Relationship between Average Glucose Level and Body Mass Index","6e380082":"# Exploratory Data Analysis \ud83d\udcca","2efa0e03":"### Relationship Between BMI and Stroke","6635430c":"### Relationship of Gender and Age","dfeee4cc":"## Hypertension \ud83d\uded1","8d49d82a":"## Ever Married? \ud83d\udc8d","14347507":"## Stroke (Target Variable) \ud83c\udf21","9fab553d":"### Relationship between Average Glucose Level and Stroke","15b07c09":"## Average Glucose level of the Patient \ud83d\udc89","e91626e3":"We can see from above list that only the column with Null values is `bmi`.\n\nLet's see what percentage of values in `bmi` column are Null.","30b9620b":"# Importing Libraries and Data \ud83d\udcda","85055d03":"### Relationship of Age and Location","e6e3ecf9":"## Gender \u2640\u2642","d0621c5b":"### DABL PLot\n\nLet's use DABL to see if we can come across","5a8e9e8c":"### Relationship between Age and Average Glucose Level","ff3ed009":"## Residence Type \ud83c\udfe1","3d8235c2":"## Presence of Heart Disease \u2764 ","b3426506":"## Smoking Status \ud83d\udeac","636b2133":"## Body Mass Index of Patient (`BMI`) \ud83e\uddb4"}}