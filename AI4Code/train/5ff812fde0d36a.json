{"cell_type":{"66e17d7c":"code","3d2801cf":"code","c2a4d570":"code","27192eee":"code","781966f2":"code","36e49e18":"code","fdf0a872":"code","0ebf0bdb":"code","34846461":"code","54e37b9a":"code","e5be5fe7":"code","3ea21fd6":"code","0e8960e8":"code","551908d5":"code","0744d62b":"code","5b508615":"code","719a5f11":"code","e919b6d1":"code","b6a26685":"code","e3048f85":"code","ac7d218e":"code","a90ebccc":"code","c90d82b7":"code","9accf5e3":"code","90a4a42c":"code","926caa7d":"code","bf10d510":"code","01568997":"code","81f8069b":"code","86bc260c":"code","00417ed6":"code","2dab76b7":"code","cf69cdc7":"code","e2508d28":"code","84d5f804":"code","5d12fd0e":"code","f43b2193":"code","4bb098ec":"code","e1c55b42":"code","81f82a17":"code","b7960f5b":"code","a1793a89":"code","e0d62e13":"code","50c0857a":"code","0b3873dd":"code","d3c71906":"code","096b7da9":"code","3acd3616":"code","e219bc1c":"code","f7c9ebee":"code","dd71ca10":"code","1e788ec9":"code","a64f7961":"code","783e6bb1":"code","f25f44cc":"code","2fa24f6b":"code","b856865d":"code","324621f3":"code","c257302a":"code","4a44c219":"code","8bcfcab6":"code","41d5d027":"code","584cd973":"code","a00f693f":"code","8bbbede3":"code","2099f12c":"code","48f3aa27":"code","77d75a31":"code","e9e7c618":"code","e29e5034":"code","12415d66":"code","306ec33f":"code","3a9f8ad3":"code","bf280109":"code","37b4ccee":"code","93b29e1a":"code","968edc40":"code","ea0b8793":"code","7c8946ab":"code","f37a1c6a":"code","ee432f53":"code","c986f340":"code","48d1ca8d":"code","3e295c71":"code","b93c8590":"code","9214e39a":"markdown","8594419c":"markdown","05dff783":"markdown","e1877c19":"markdown","df51347c":"markdown","324e0628":"markdown","f50f4c29":"markdown","0f39d445":"markdown","2af838c9":"markdown","54506e0b":"markdown","f91d4753":"markdown","dbf81a6d":"markdown","f289edd7":"markdown","156a36d2":"markdown","812b33be":"markdown","abb8cf93":"markdown","839ae333":"markdown","7ef4fba5":"markdown","a3b877d5":"markdown","8376f60f":"markdown","1151b929":"markdown","a01a2c5b":"markdown","abb8ce2f":"markdown","f06a10c8":"markdown","43c1a9d5":"markdown","68e7b2ec":"markdown","14fc347d":"markdown","0904b68d":"markdown","9308d525":"markdown","498d6a90":"markdown","9c79bae5":"markdown","42662270":"markdown","15e8e703":"markdown","916fda4e":"markdown","7f8ec1fe":"markdown","8f107cab":"markdown","ab95c27f":"markdown","2b44afbf":"markdown","f37fec24":"markdown","6480adf3":"markdown","bfe12d4c":"markdown","4ac6cfcf":"markdown","de0a8b7e":"markdown","f8d7a3e7":"markdown","2f4ff824":"markdown","27411c37":"markdown","21a43778":"markdown","878d7acc":"markdown","e0d8f284":"markdown","2402dca0":"markdown","579e57f5":"markdown","af320e0c":"markdown","06d4d70c":"markdown"},"source":{"66e17d7c":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.model_selection import train_test_split\n\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport lightgbm as lgbm, catboost as catb\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import r2_score as r2\nfrom sklearn.metrics import classification_report, f1_score, precision_score, recall_score\nfrom sklearn.model_selection import StratifiedKFold, GridSearchCV, RandomizedSearchCV\n\nfrom scipy.stats import mannwhitneyu\n\n%matplotlib inline","3d2801cf":"def evaluate_preds(model, X_train, X_test, y_train, y_test):\n    y_train_pred = model.predict(X_train)\n    y_test_pred = model.predict(X_test)\n\n    get_classification_report(y_train, y_train_pred, y_test, y_test_pred)","c2a4d570":"def get_classification_report(y_train_true, y_train_pred, y_test_true, y_test_pred):\n    print('TRAIN\\n\\n' + classification_report(y_train_true, y_train_pred))\n    print('TEST\\n\\n' + classification_report(y_test_true, y_test_pred))\n    print('CONFUSION MATRIX\\n')\n    print(pd.crosstab(y_test_true, y_test_pred))","27192eee":"def imputer_rfr(data, target_col):\n    data = data.copy()\n    \n    features = data.columns\n    \n    data = data[features]\n    \n    train = data[~data[target_col].isna()]\n    predict_data = data[data[target_col].isna()]\n\n    X = train.drop(columns=target_col)\n    y = train[target_col]\n    \n    X_train, X_test, y_train, y_test = train_test_split(X, y,\n                                                        test_size=0.2,\n                                                        shuffle=True,\n                                                        random_state=32)\n    \n    model = RandomForestRegressor(n_estimators=100,\n                                  max_depth=10,\n                                  random_state=42,\n                                  verbose=1)\n    model.fit(X_train, y_train)\n    \n    pred_train = model.predict(X_train)\n    pred_test = model.predict(X_test)\n    \n    print(f\"r2 \u043d\u0430 train: {r2(y_train, pred_train)}\")\n    print(f\"r2 \u043d\u0430 test: {r2(y_test, pred_test)}\")\n\n    pred = model.predict(predict_data.drop(columns=target_col))\n\n    data.loc[data[target_col].isna(), target_col] = list(pred)\n    return model, data","781966f2":"TRAIN_PATH = '\/kaggle\/input\/gb-credit-default\/train.csv'\nTEST_PATH = '\/kaggle\/input\/gb-credit-default\/test.csv'","36e49e18":"test_df = pd.read_csv(TEST_PATH)\ndf = pd.read_csv(TRAIN_PATH)\n\ndf.head()","fdf0a872":"df.describe()","0ebf0bdb":"df.select_dtypes(include='float64').hist(figsize=(16,16), bins=25, grid=False, log=False)","34846461":"df.nlargest(10, 'Maximum Open Credit')","54e37b9a":"df = df[df['Maximum Open Credit']<99999999]\ntest_df = test_df[test_df['Maximum Open Credit']<99999999]","e5be5fe7":"plt.figure(figsize = (16, 8))\n\ndf['Maximum Open Credit'].hist(log=True)\nplt.ylabel('Count')\nplt.xlabel('MOC')\n\nplt.title('Open Credit')\nplt.show()","3ea21fd6":"df.nlargest(5, 'Current Loan Amount')","0e8960e8":"df['Current Loan Amount'].value_counts()","551908d5":"plt.figure(figsize = (16, 8))\n\ndf['Credit Score'].plot(kind='hist', bins=25)\nplt.ylabel('Count')\nplt.xlabel('Score')\n\nplt.title('Credit Score')\nplt.show()","0744d62b":"df.nlargest(10, 'Credit Score')","5b508615":"for k in df: print(f'{df[k].value_counts()}\\n')","719a5f11":"for l in df: print(f'{df[l].isnull().value_counts()}\\n')","e919b6d1":"sns.countplot(x=df['Credit Default'])\nplt.title('Distribution of the target feature')","b6a26685":"df[['Maximum Open Credit', 'Current Loan Amount', 'Credit Score']].hist(figsize=(16,8), bins=25, grid=False, log=False)","e3048f85":"TARGET_NAME = 'Credit Default'\nBASE_FEATURE_NAMES = df.columns.drop(TARGET_NAME).tolist()","ac7d218e":"corr_with_target = df[BASE_FEATURE_NAMES + [TARGET_NAME]].corr().iloc[:-1, -1].sort_values(ascending=False)\n\nplt.figure(figsize=(10, 8))\n\nsns.barplot(x=corr_with_target.values, y=corr_with_target.index)\n\nplt.title('Correlation with target variable')\nplt.show()","a90ebccc":"plt.figure(figsize = (25,20))\nsns.set(font_scale=1.4)\ncorr_matrix = df[BASE_FEATURE_NAMES + [TARGET_NAME]].corr()\ncorr_matrix = np.round(corr_matrix, 2)\nsns.heatmap(corr_matrix, annot=True, linewidths=.5, cmap='GnBu')\nplt.title('Correlation matrix')\nplt.show()","c90d82b7":"score_with_target = df[['Credit Score', TARGET_NAME]]\nscore = score_with_target['Credit Score']\nscore_target_0 = score[score_with_target[TARGET_NAME] == 0]\nscore_target_1 = score[score_with_target[TARGET_NAME] == 1]\n\nplt.figure(figsize=(10, 5))\n\nsns.kdeplot(score_target_0, shade=True, label='\u041d\u0435 \u0432\u044b\u043f\u043b\u0430\u0442\u0438\u0442', color='r')\nsns.kdeplot(score_target_1, shade=True, label='\u0412\u044b\u043f\u043b\u0430\u0442\u0438\u0442', color='g')\nplt.xlabel('Credit Score')\nplt.title('Credit Score grouped by target variable')\nplt.yscale('log')\nplt.show()","9accf5e3":"df.loc[df['Credit Score']>1000, 'Credit Score'] = df['Credit Score']\/10\ntest_df.loc[test_df['Credit Score']>1000, 'Credit Score'] = test_df['Credit Score']\/10","90a4a42c":"score_with_target = df[['Credit Score', TARGET_NAME]]\nscore = score_with_target['Credit Score']\nscore_target_0 = score[score_with_target[TARGET_NAME] == 0]\nscore_target_1 = score[score_with_target[TARGET_NAME] == 1]\n\nplt.figure(figsize=(10, 5))\n\nsns.kdeplot(score_target_0, shade=True, label='\u041d\u0435 \u0432\u044b\u043f\u043b\u0430\u0442\u0438\u0442', color='r')\nsns.kdeplot(score_target_1, shade=True, label='\u0412\u044b\u043f\u043b\u0430\u0442\u0438\u0442', color='g')\nplt.xlabel('Credit Score')\nplt.title('Credit Score grouped by target variable')\nplt.show()","926caa7d":"loan_with_target = df[['Current Loan Amount', TARGET_NAME]]\nloan = loan_with_target['Current Loan Amount']\nloan_target_0 = loan[loan_with_target[TARGET_NAME] == 0]\nloan_target_1 = loan[loan_with_target[TARGET_NAME] == 1]\n\nplt.figure(figsize=(10, 5))\n\nsns.kdeplot(loan_target_0, shade=True, label='\u041d\u0435 \u0432\u044b\u043f\u043b\u0430\u0442\u0438\u0442', color='r')\nsns.kdeplot(loan_target_1, shade=True, label='\u0412\u044b\u043f\u043b\u0430\u0442\u0438\u0442', color='g')\nplt.xlabel('Current Loan Amount')\nplt.yscale('log')\nplt.title('Current Loan Amount grouped by target variable')\nplt.show()","bf10d510":"median_loan_by_purpose = df.groupby('Purpose', as_index=False).agg({'Current Loan Amount':'median'})\nmedian_loan_by_purpose_test = test_df.groupby('Purpose', as_index=False).agg({'Current Loan Amount':'median'})","01568997":"median_loan_by_purpose['Purpose']","81f8069b":"for purpose in median_loan_by_purpose['Purpose']:\n    df.loc[(df['Current Loan Amount']==99999999) & (df['Purpose']==str(purpose)), 'Current Loan Amount'] = median_loan_by_purpose.loc[median_loan_by_purpose['Purpose']==purpose, 'Current Loan Amount']\n\nfor purpose in median_loan_by_purpose_test['Purpose']:\n    test_df.loc[(test_df['Current Loan Amount']==99999999) & (test_df['Purpose']==str(purpose)), 'Current Loan Amount'] = median_loan_by_purpose_test.loc[median_loan_by_purpose_test['Purpose']==purpose, 'Current Loan Amount']","86bc260c":"loan_with_target = df[['Current Loan Amount', TARGET_NAME]]\nloan = loan_with_target['Current Loan Amount']\nloan_target_0 = loan[loan_with_target[TARGET_NAME] == 0]\nloan_target_1 = loan[loan_with_target[TARGET_NAME] == 1]\n\nplt.figure(figsize=(10, 5))\n\nsns.kdeplot(loan_target_0, shade=True, label='\u041d\u0435 \u0432\u044b\u043f\u043b\u0430\u0442\u0438\u0442', color='r')\nsns.kdeplot(loan_target_1, shade=True, label='\u0412\u044b\u043f\u043b\u0430\u0442\u0438\u0442', color='g')\nplt.xlabel('Current Loan Amount')\nplt.title('Current Loan Amount grouped by target variable')\nplt.show()","00417ed6":"corr_with_target = df[BASE_FEATURE_NAMES + [TARGET_NAME]].corr().iloc[:-1, -1].sort_values(ascending=False)\n\nplt.figure(figsize=(10, 8))\n\nsns.barplot(x=corr_with_target.values, y=corr_with_target.index)\n\nplt.title('Correlation with target variable')\nplt.show()","2dab76b7":"test_df.head()","cf69cdc7":"test_df.describe()","e2508d28":"NUM_FEATURE_NAMES = df.columns.drop(['Home Ownership', 'Years in current job', 'Purpose',  'Term', 'Credit Default']).tolist()","84d5f804":"figsize = (6, 3)\nfor col in NUM_FEATURE_NAMES:\n    plt.figure(figsize=figsize)\n    sns.set(font_scale=0.8)\n    sns.kdeplot(df[col], shade=True, label='train', color='r')\n    sns.kdeplot(test_df[col], shade=True, label='test', color='g')\n    print(col)\n    print(mannwhitneyu(df[col], test_df[col]))\n    plt.legend()\n    plt.title(col)\n    plt.show()","5d12fd0e":"CAT_FEATURE_NAMES = ['Home Ownership', 'Years in current job', 'Purpose',  'Term']\nnum_feature = 'Credit Score'","f43b2193":"for col in CAT_FEATURE_NAMES:\n    plt.figure(figsize=figsize)\n    sns.pointplot(x=col, y=num_feature, data=df, capsize=.1, label='train', color='r')\n    sns.pointplot(x=col, y=num_feature, data=test_df, capsize=.1, label='test', color='g')\n    plt.title(col) \n    plt.show()","4bb098ec":"df.isnull().sum()","e1c55b42":"df.shape","81f82a17":"df['Months since last delinquent'].plot(kind='hist')","b7960f5b":"df.loc[df['Months since last delinquent'].isnull(), 'Months since last delinquent'] = 0\ntest_df.loc[test_df['Months since last delinquent'].isnull(), 'Months since last delinquent'] = 0","a1793a89":"df['Annual Income'].plot(kind='hist')","e0d62e13":"df['Monthly Debt'].describe()","50c0857a":"bins = pd.cut(df['Monthly Debt'], [-1, 10000, 16000, 23000, 140000], labels = ['A','B','C','D'])\ndf['Monthly Debt Size'] = bins\n\nbins_test = pd.cut(test_df['Monthly Debt'], [-1, 10000, 16000, 23000, 140000], labels = ['A','B','C','D'])\ntest_df['Monthly Debt Size'] = bins_test","0b3873dd":"median_income_by_debt = df.groupby('Monthly Debt Size', as_index=False).agg({'Annual Income':'median'})\nmedian_income_by_debt","d3c71906":"df.loc[(df['Annual Income'].isnull()) & (df['Monthly Debt Size']=='A'), 'Annual Income'] = 835601.0\ndf.loc[(df['Annual Income'].isnull()) & (df['Monthly Debt Size']=='B'), 'Annual Income'] = 971565.0\ndf.loc[(df['Annual Income'].isnull()) & (df['Monthly Debt Size']=='C'), 'Annual Income'] = 1196848.0\ndf.loc[(df['Annual Income'].isnull()) & (df['Monthly Debt Size']=='D'), 'Annual Income'] = 1740476.0\n\ntest_df.loc[(test_df['Annual Income'].isnull()) & (test_df['Monthly Debt Size']=='A'), 'Annual Income'] = 835601.0\ntest_df.loc[(test_df['Annual Income'].isnull()) & (test_df['Monthly Debt Size']=='B'), 'Annual Income'] = 971565.0\ntest_df.loc[(test_df['Annual Income'].isnull()) & (test_df['Monthly Debt Size']=='C'), 'Annual Income'] = 1196848.0\ntest_df.loc[(test_df['Annual Income'].isnull()) & (test_df['Monthly Debt Size']=='D'), 'Annual Income'] = 1740476.0","096b7da9":"df.loc[df['Years in current job'].isnull(), 'Years in current job'] = df['Years in current job'].mode()[0]\ntest_df.loc[test_df['Years in current job'].isnull(), 'Years in current job'] = test_df['Years in current job'].mode()[0]","3acd3616":"df.loc[df['Bankruptcies'].isnull(), 'Bankruptcies'] = 0\ntest_df.loc[test_df['Bankruptcies'].isnull(), 'Bankruptcies'] = 0","e219bc1c":"df.loc[df['Current Loan Amount'].isnull(), 'Current Loan Amount'] = df['Current Loan Amount'].median()\ntest_df.loc[test_df['Current Loan Amount'].isnull(), 'Current Loan Amount'] = test_df['Current Loan Amount'].median()","f7c9ebee":"#df['Credit Score'].describe()","dd71ca10":"#score_by_term = df.groupby('Term', as_index=False).agg({'Credit Score':'median'})\n#score_by_term","1e788ec9":"#df.loc[(df['Credit Score'].isnull()) & (df['Term']=='Long Term'), 'Credit Score'] = 705.0\n#df.loc[(df['Credit Score'].isnull()) & (df['Term']=='Short Term'), 'Credit Score'] = 734.0\n\n#test_df.loc[(test_df['Credit Score'].isnull()) & (test_df['Term']=='Long Term'), 'Credit Score'] = 705.0\n#test_df.loc[(test_df['Credit Score'].isnull()) & (test_df['Term']=='Short Term'), 'Credit Score'] = 734.0","a64f7961":"df['Home Ownership'].unique()","783e6bb1":"df = pd.concat([df, pd.get_dummies(df['Home Ownership'])], axis=1)\ntest_df = pd.concat([test_df, pd.get_dummies(test_df['Home Ownership'])], axis=1)\ndf.head()","f25f44cc":"df['Years in current job'].unique()","2fa24f6b":"df['Years in current job'] = df['Years in current job'].replace({'< 1 year':0, '1 year':1, '2 years':2, '3 years':3, '4 years':4, '5 years':5, '6 years':6, '7 years':7,'8 years':8,'9 years':9,'10+ years':10})\ntest_df['Years in current job'] = test_df['Years in current job'].replace({'< 1 year':0, '1 year':1, '2 years':2, '3 years':3, '4 years':4, '5 years':5, '6 years':6, '7 years':7,'8 years':8,'9 years':9,'10+ years':10})","b856865d":"df.loc[df['Tax Liens'] > 0, 'Tax Liens'] = 1\ntest_df.loc[test_df['Tax Liens'] > 0, 'Tax Liens'] = 1","324621f3":"df.loc[df['Number of Credit Problems'] > 0, 'Number of Credit Problems'] = 1\ntest_df.loc[test_df['Number of Credit Problems'] > 0, 'Number of Credit Problems'] = 1","c257302a":"df.loc[df['Bankruptcies'] > 0, 'Bankruptcies'] = 1\ntest_df.loc[test_df['Bankruptcies'] > 0, 'Bankruptcies'] = 1","4a44c219":"df['Term'] = df['Term'].replace({'Short Term':0, 'Long Term':1})\ntest_df['Term'] = test_df['Term'].replace({'Short Term':0, 'Long Term':1})","8bcfcab6":"df['Purpose'].unique()","41d5d027":"fig, ax = plt.subplots(figsize=(18,8))\nsns.countplot(ax=ax, x='Purpose', hue='Credit Default', data=df)","584cd973":"df.loc[(df['Purpose'] == 'debt consolidation') | (df['Purpose'] == 'other') | (df['Purpose'] == 'home improvements'), 'Purpose'] = 0\ndf.loc[df['Purpose']!=0, 'Purpose'] = 1\n\ntest_df.loc[(test_df['Purpose'] == 'debt consolidation') | (test_df['Purpose'] == 'other') | (test_df['Purpose'] == 'home improvements'), 'Purpose'] = 0\ntest_df.loc[test_df['Purpose']!=0, 'Purpose'] = 1","a00f693f":"df['Purpose'] = df['Purpose'].astype('int64')\ntest_df['Purpose'] = test_df['Purpose'].astype('int64')","8bbbede3":"df_copy = df.copy()\ndf_test_copy = test_df.copy()","2099f12c":"feature_name = 'Credit Score'\ndf_copy[feature_name].isna().sum()","48f3aa27":"df_copy = df_copy.drop(columns=['Home Ownership','Monthly Debt Size', 'Credit Default'])\ndf_test_copy = df_test_copy.drop(columns=['Home Ownership','Monthly Debt Size'])","77d75a31":"score_predictor, df_copy = imputer_rfr(df_copy, feature_name)","e9e7c618":"predict_data = df_test_copy[df_test_copy[feature_name].isna()]\n\npred = score_predictor.predict(predict_data.drop(columns=feature_name))\n\ndf_test_copy.loc[df_test_copy[feature_name].isna(), feature_name] = list(pred)","e29e5034":"X = df_copy\ny = df['Credit Default']","12415d66":"X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.33, shuffle=True, random_state=42, stratify=y)\ndisplay(y_train.value_counts(normalize=True), y_valid.value_counts(normalize=True))","306ec33f":"disbalance = y_train.value_counts()[0] \/ y_train.value_counts()[1]\ndisbalance","3a9f8ad3":"model_catb = catb.CatBoostClassifier(silent=True, random_state=42,\n                                     class_weights=[1, disbalance]\n                                     )\nmodel_catb.fit(X_train, y_train)\n\nevaluate_preds(model_catb, X_train, X_valid, y_train, y_valid)","bf280109":"model_catb = catb.CatBoostClassifier(silent=True, random_state=21,\n                                     class_weights=[1, disbalance],\n                                     eval_metric='F1',\n                                     early_stopping_rounds=20,\n                                     )","37b4ccee":"params = {'iterations':[5, 7, 10, 20, 30, 50, 200, 500],\n          'max_depth':[3, 5, 7, 10]}","93b29e1a":"cv = StratifiedKFold(n_splits=3, random_state=42, shuffle=True)","968edc40":"grid_search = model_catb.grid_search(params, X_train, y_train, cv=cv, stratified=True, plot=True, refit=True)","ea0b8793":"final_model = catb.CatBoostClassifier(silent=True, max_depth=5,\n                                      iterations=20, random_state=21,\n                                     class_weights=[1, disbalance],\n                                     eval_metric='F1',\n                                     early_stopping_rounds=20,\n                                     )","7c8946ab":"final_model.fit(X_train, y_train)\n\nevaluate_preds(final_model, X_train, X_valid, y_train, y_valid)","f37a1c6a":"X_train = df_copy\ny_train = df['Credit Default']\nX_test = df_test_copy","ee432f53":"final_model = catb.CatBoostClassifier(silent=True, max_depth=5,\n                                      iterations=20, random_state=28,\n                                     class_weights=[1, disbalance],\n                                     eval_metric='F1',\n                                     early_stopping_rounds=20,\n                                     )","c986f340":"final_model.fit(X_train, y_train)","48d1ca8d":"y_test_preds = final_model.predict(X_test)","3e295c71":"result = pd.DataFrame()\nresult['Id'] = test_df.index\nresult['Credit Default'] = pd.Series(y_test_preds)","b93c8590":"result.to_csv('prediction_new.csv', index=False)\nresult.values","9214e39a":"\u0412 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c \u0431\u0443\u0434\u0435\u043c \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0432 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u0445 Annual Income, Years in current job, Months since last delinquent, Bankruptcies, Credit Score","8594419c":"\u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0433\u0440\u0430\u0444\u0438\u043a \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439.","05dff783":"\u0417\u0430\u0445\u043e\u0442\u0435\u043b\u043e\u0441\u044c \u0435\u0449\u0435 \u0440\u0430\u0437 \u0432\u0437\u0433\u043b\u044f\u043d\u0443\u0442\u044c \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044e:","e1877c19":"# \u041a\u0443\u0440\u0441\u043e\u0432\u043e\u0439 \u043f\u0440\u043e\u0435\u043a\u0442:","df51347c":"\u0420\u0430\u0437\u043e\u0431\u044c\u0435\u043c \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u043d\u0430 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0438\u0439 \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u043d\u0430\u0431\u043e\u0440 \u0434\u0430\u043d\u043d\u044b\u0445","324e0628":"\u041f\u0443\u0442\u044c \u043a \u0434\u0430\u043d\u043d\u044b\u043c","f50f4c29":"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c Purpose, \u0440\u0430\u0437\u0431\u0438\u0432 \u043d\u0430 2 \u0433\u0440\u0443\u043f\u043f\u044b \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0447\u0430\u0441\u0442\u043e \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u044e\u0449\u0438\u0445\u0441\u044f","0f39d445":"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u0432\u044b\u0431\u0440\u043e\u0441\u044b, \u043a\u0430\u043a \u0438 \u043f\u043b\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043b\u043e\u0441\u044c \u0440\u0430\u043d\u0435\u0435:","2af838c9":"\u041f\u043e\u0434\u043e\u0437\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u043a\u0430\u0436\u0435\u0442\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432 99999999.0 - \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e","54506e0b":"\u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0431\u0430\u043b\u043b\u043e\u0432 \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u0430","f91d4753":"\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043d\u0430 \u0442\u0440\u0435\u0439\u043d\u0435 \u0438 \u0442\u0435\u0441\u0442\u0435","dbf81a6d":"\u0421\u0443\u0434\u044f \u043f\u043e \u043c\u0430\u0442\u0440\u0438\u0446\u0435 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0439, \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 \u0440\u0430\u043d\u0435\u0435, \u044d\u0442\u043e\u0442 \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u043d\u0430\u0438\u043b\u0443\u0447\u0448\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u0443\u0435\u0442 (=0,59) \u0441 Monthly Debt. \u0417\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u043c\u0435\u0434\u0438\u0430\u043d\u043e\u0439 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 Monthly Debt","f289edd7":"\u0420\u0430\u0437\u0431\u0435\u0440\u0435\u043c \u0433\u043e\u0434\u043e\u0432\u043e\u0439 \u0434\u043e\u0445\u043e\u0434","156a36d2":"Bankruptcies \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u043c \u043a \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u043c\u0443 \u0432\u0438\u0434\u0443 (\u0435\u0441\u0442\u044c \u0444\u0430\u043a\u0442 \u0431\u0430\u043d\u043a\u0440\u043e\u0442\u0441\u0442\u0432\u0430 \u0438\u043b\u0438 \u043d\u0435\u0442)","812b33be":"\u0422\u0435\u043f\u0435\u0440\u044c \u0432\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u0434\u0432\u0435 \u0433\u0440\u0443\u043f\u043f\u044b \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 Credit Score \u0438\u043c\u0435\u044e\u0442 \u043f\u043e\u0445\u043e\u0436\u0438\u0435 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f, \u0447\u0442\u043e \u0433\u043e\u0432\u043e\u0440\u0438\u0442 \u043e \u043d\u0430\u043b\u0438\u0447\u0438\u0438 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0439 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043c\u0435\u0436\u0434\u0443 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0438 \u044d\u0442\u0438\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u043c. ","abb8cf93":"\u041f\u0440\u0438\u0432\u0435\u0434\u0435\u043c Tax Liens \u043a \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u043c\u0443 \u0432\u0438\u0434\u0443 (\u0438\u043b\u0438 \u0435\u0441\u0442\u044c \u043d\u0430\u043b\u043e\u0433\u043e\u0432\u044b\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430 \u0438\u043b\u0438 \u043d\u0435\u0442)","839ae333":"\u041f\u0440\u0438\u0432\u0435\u0434\u0435\u043c Number of Credit Problems \u043a \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u043c\u0443 \u0432\u0438\u0434\u0443 (\u0438\u043b\u0438 \u0435\u0441\u0442\u044c \u043f\u0440\u043e\u0441\u0440\u043e\u0447\u043a\u0430 \u043f\u043e \u043f\u043b\u0430\u0442\u0435\u0436\u0443 \u0438\u043b\u0438 \u043d\u0435\u0442)","7ef4fba5":"\u0422.\u043a. \u0443 Current Loan Amount  \u043d\u0435\u0442 \u0441\u0438\u043b\u044c\u043d\u044b\u0445 \u043a\u043e\u0440\u0435\u043b\u043b\u044f\u0446\u0438\u0439 \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438, \u0442\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u043c\u0435\u0434\u0438\u0430\u043d\u043e\u0439","a3b877d5":"\u0421\u0443\u0434\u044f \u043f\u043e \u0433\u0440\u0430\u0444\u0438\u043a\u0430\u043c \u0432 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u043c \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0438 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043d\u0443\u0436\u0434\u0430\u044e\u0442\u0441\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u043d\u043d\u044b\u0435 \u0440\u0430\u043d\u0435\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438.\n\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043f\u043e \u043d\u0438\u043c. ","8376f60f":"\u041e\u0431\u0443\u0447\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c CatBoost","1151b929":"\u0421\u0440\u0430\u0432\u043d\u0438\u043c \u043f\u043e \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0443 50-\u0439 \u043f\u0435\u0440\u0441\u0435\u043d\u0442\u0438\u043b\u044c (50%) \u0438 \u0441\u0440\u0435\u0434\u043d\u0435\u0435 (mean), \u0440\u0430\u0437\u043d\u0438\u0446\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043c\u0435\u0436\u0434\u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u044c \u043d\u0430\u043c \u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u0432\u044b\u0431\u0440\u043e\u0441\u0430\u0445 \u0432 \u0434\u0430\u043d\u043d\u044b\u0445: Maximum Open Credit, Current Loan Amount \u0438 Credit Score. \n\u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432.","a01a2c5b":"\u041f\u043e\u0434\u043e\u0437\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u0432\u044b\u0433\u043b\u044f\u0434\u044f\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0433\u043e \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u0430 \u0432\u044b\u0448\u0435 1000. \u0422.\u043a. 75-\u0439 \u043f\u0435\u0440\u0441\u0435\u043d\u0442\u0438\u043b\u044c \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043b\u0438\u0448\u044c 743, \u0430 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0432\u043e\u043a\u0440\u0443\u0433 7400.\n\u041f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u044e \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u044d\u0442\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a \u043e\u0434\u043d\u043e\u043c\u0443 \u043f\u043e\u0440\u044f\u0434\u043a\u0443 (\u0441\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u0442\u043e\u0447\u043a\u0443 \u043d\u0430 \u043e\u0434\u0438\u043d \u0440\u0430\u0437\u0440\u044f\u0434).","abb8ce2f":"\u0422.\u043a. \u0446\u0435\u043b\u0435\u0432\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u0438\u0441\u043a\u0440\u0435\u0442\u043d\u043e\u0439, \u0442\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0442\u044c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0432 \u0440\u0430\u0437\u0440\u0435\u0437\u0435 \u0434\u0440\u0443\u0433\u0438\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445.","f06a10c8":"\u0422.\u043a. \u043f\u0440\u0438\u0437\u043d\u0430\u043a Monthly Debt \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0441\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u0445 \u0434\u043b\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u043f\u043e\u0434\u0441\u0447\u0435\u0442\u0430 \u043c\u0435\u0434\u0438\u0430\u043d\u044b: \u0434\u043e 10000, \u043e\u0442 10000 \u0434\u043e 16000, \u043e\u0442 16000 \u0434\u043e 23000 \u0438 \u043e\u0442 23000 \u0434\u043e max","43c1a9d5":"\u041f\u043e\u0441\u0447\u0438\u0442\u0430\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 \u0432 \u043d\u0430\u0431\u043e\u0440\u0435 \u0434\u0430\u043d\u043d\u044b\u0445.","68e7b2ec":"\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a 'Current Loan Amount'","14fc347d":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c Home Ownership, \u0434\u043e\u0431\u0430\u0432\u0438\u0432 Dummy \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 ","0904b68d":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c Years in current job \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f","9308d525":"\u041e\u0431\u0443\u0447\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0430 \u043f\u043e\u043b\u043d\u043e\u043c \u043d\u0430\u0431\u043e\u0440\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445","498d6a90":"\u0418\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 Current Loan Amount (\u0441 \u0432\u044b\u0441\u043e\u043a\u043e\u0439 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0435\u0439) \u043e\u0442 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439:","9c79bae5":"\u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0438 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439.","42662270":"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a Credit Score. \u041a\u0430\u043a \u0438 \u0431\u044b\u043b\u043e \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u043e \u0440\u0430\u043d\u0435\u0435, \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a \u043e\u0434\u043d\u043e\u043c\u0443 \u043f\u043e\u0440\u044f\u0434\u043a\u0443.","15e8e703":"\u041e\u0431\u0443\u0447\u0438\u043c \u0444\u0438\u043d\u0430\u043b\u044c\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c \u0441 \u043d\u0430\u0438\u043b\u0443\u0447\u0448\u0438\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 max_depth = 5 \u0438 iterations=20","916fda4e":"\u041e\u0446\u0435\u043d\u0438\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a Credit Score \u0432 \u0440\u0430\u0437\u0440\u0435\u0437\u0435 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439","7f8ec1fe":"\u0417\u0430\u043f\u043e\u043b\u043d\u0438\u043c Years in current job \u043c\u043e\u0434\u043e\u0439","8f107cab":"3 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a\u0430\u0436\u0443\u0442\u0441\u044f \u043f\u043e\u0434\u043e\u0437\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438. \u0418\u0441\u043a\u043b\u044e\u0447\u0438\u043c \u0438\u0445 \u0438\u0437 \u043d\u0430\u0448\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438.","ab95c27f":"\u041f\u043e\u0434\u0431\u0435\u0440\u0435\u043c \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0435 \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438.","2b44afbf":"\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0432\u0435\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043d\u0430 \u0442\u0440\u0435\u0439\u043d\u0435 \u0438 \u0442\u0435\u0441\u0442\u0435:","f37fec24":"\u0421\u043d\u043e\u0432\u0430 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0432 \u0440\u0430\u0437\u0440\u0435\u0437\u0435 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439.","6480adf3":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 10 \u0441\u0430\u043c\u044b\u0445 \u043a\u0440\u0443\u043f\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0434\u043b\u044f Maximum Open Credit","bfe12d4c":"\u0421\u0440\u0430\u0432\u043d\u0438\u043c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0438\u0437 train \u0438 test","4ac6cfcf":"\u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u0445\u043e\u0436\u0438.","de0a8b7e":"\u0420\u0430\u043d\u0435\u0435 \u0431\u044b\u043b\u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0438 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u044b \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u043f\u043e \u0438\u0445 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435.","f8d7a3e7":"\u0418\u0437\u0443\u0447\u0438\u0432 \u0434\u0430\u043d\u043d\u044b\u0435, \u0432\u043e\u0437\u043d\u0438\u043a\u043b\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0438\u0434\u0435\u0438:\n- Years in current job \u043c\u043e\u0436\u043d\u043e \u0441\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u0442 1 \u0434\u043e 3-\u0445 \u043b\u0435\u0442, \u043e\u0442 3-\u0445 \u0434\u043e 5-\u0442\u0438 \u043b\u0435\u0442 \u0438 5 \u0438 \u0432\u044b\u0448\u0435.\n- Tax Liens \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u043c\u0443 \u0432\u0438\u0434\u0443 (\u0438\u043b\u0438 \u0435\u0441\u0442\u044c \u043d\u0430\u043b\u043e\u0433\u043e\u0432\u044b\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430 \u0438\u043b\u0438 \u043d\u0435\u0442)\n- Maximum Open Credit \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043d\u0443\u043b\u0435\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0442.\u043a. \u043e\u043d\u0438 \u043f\u043e\u0445\u043e\u0436\u0438 \u043d\u0430 \u0432\u044b\u0431\u0440\u043e\u0441\u044b (65 \u0448\u0442\u0443\u043a)\n- Number of Credit Problems \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u043c\u0443 \u0432\u0438\u0434\u0443 (\u0438\u043b\u0438 \u0435\u0441\u0442\u044c \u043f\u0440\u043e\u0441\u0440\u043e\u0447\u043a\u0430 \u043f\u043e \u043f\u043b\u0430\u0442\u0435\u0436\u0443 \u0438\u043b\u0438 \u043d\u0435\u0442)\n- Bankruptcies \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u043c\u0443 \u0432\u0438\u0434\u0443 (\u0438\u043b\u0438 \u0435\u0441\u0442\u044c \u0444\u0430\u043a\u0442 \u0431\u0430\u043d\u043a\u0440\u043e\u0442\u0441\u0442\u0432\u0430 \u0438\u043b\u0438 \u043d\u0435\u0442)\n- Purpose \u0441\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u0432 \u0441\u0432\u0430\u0434\u044c\u0431\u0443, \u043f\u0435\u0440\u0435\u0435\u0437\u0434, \u043f\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0438\u0435, \u043e\u0442\u043f\u0443\u0441\u043a \u0432 \u043e\u0434\u043d\u0443 \u0433\u0440\u0443\u043f\u043f\u044b \u0438 \u0442.\u043f., \u0430 \u043f\u043e\u0442\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c One-Hot Encoding\n- Term \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u043c\u0443 \u0432\u0438\u0434\u0443\n- Current Loan Amount \u0438\u0441\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f 999999999\n- Credit Score \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c, \u043a\u0430\u043a \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u043b\u0430 \u0432\u044b\u0448\u0435","2f4ff824":"\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 99999999.0 \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0435. \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u044d\u0442\u0438 \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043c\u0435\u043d\u0438\u0432 \u043d\u0430 \u043c\u0435\u0434\u0438\u0430\u043d\u0443 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 Purpose","27411c37":"\u041f\u0440\u0438\u0437\u043d\u0430\u043a Credit Score \u0432\u0430\u0436\u043d\u044b\u0439 \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u0439, \u043d\u043e \u0432 \u043d\u0451\u043c \u043e\u0447\u0435\u043d\u044c \u043c\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439. \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c \u0432\u0441\u0435 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438, \u043e\u0431\u0443\u0447\u0438\u0432 \u043c\u043e\u0434\u0435\u043b\u044c \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u0439 \u044d\u0442\u043e\u0433\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430","21a43778":"\u041d\u0430\u0431\u043b\u044e\u0434\u0430\u0435\u0442\u0441\u044f \u0432\u044b\u0441\u043e\u043a\u0430\u044f \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044f \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0441 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u043c Credit Score, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0432\u044b\u0441\u043e\u043a\u0430\u044f \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044f \u0441  Current Loan Amount. \u0412\u0441\u0435 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e Months since last delinquent \u0438 Bankruptcies, \u043f\u043e\u0447\u0442\u0438 \u043d\u0435 \u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442 \u0432\u043b\u0438\u044f\u043d\u0438\u044f \u043d\u0430 \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e. ","878d7acc":"\u0417\u0430\u043f\u043e\u043b\u043d\u0438\u043c Bankruptcies \u043d\u0443\u043b\u044f\u043c\u0438","e0d8f284":"\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a","2402dca0":"\u0422\u0435\u043f\u0435\u0440\u044c \u0432\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u0434\u0432\u0435 \u0433\u0440\u0443\u043f\u043f\u044b \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 Current Loan Amount \u0438\u043c\u0435\u044e\u0442 \u043f\u043e\u0445\u043e\u0436\u0438\u0435 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f, \u0447\u0442\u043e \u0433\u043e\u0432\u043e\u0440\u0438\u0442 \u043e \u043d\u0430\u043b\u0438\u0447\u0438\u0438 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0439 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043c\u0435\u0436\u0434\u0443 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0438 \u044d\u0442\u0438\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u043c. ","579e57f5":"\u041f\u043e \u043f\u043e\u043b\u044e Months since last delinquent \u043e\u0447\u0435\u043d\u044c \u043c\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432. \u0412\u0435\u0440\u043e\u044f\u0442\u043d\u043e, \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0433\u043e\u0432\u043e\u0440\u044f\u0442 \u043e\u0431 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0438 \u043f\u0440\u043e\u0441\u0440\u043e\u0447\u0435\u043a \u043f\u043e \u043f\u043b\u0430\u0442\u0435\u0436\u0430\u043c. \u0414\u0443\u043c\u0430\u044e, \u044d\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043d\u0443\u043b\u044f\u043c\u0438 \u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0432\u043e\u043e\u0431\u0449\u0435. \u041d\u043e \u043f\u043e\u043a\u0430 \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u043d\u0443\u043b\u0438.","af320e0c":"\u0417\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435","06d4d70c":"\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c Term \u0432 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0439 \u0432\u0438\u0434"}}