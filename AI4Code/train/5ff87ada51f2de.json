{"cell_type":{"96ab0a3f":"code","7ec03e31":"code","ec4bf43a":"code","318d1c37":"code","47973cef":"code","5143576a":"code","287a89bb":"code","00e5f618":"code","3d3be2b7":"code","a024ec3f":"code","2234b86f":"code","70024223":"code","105866b8":"code","4d789ee5":"code","0d88484c":"code","6e03c4fa":"code","8b22e427":"code","39b21bec":"code","efef4690":"markdown","9e56b9d2":"markdown","d55d7cf8":"markdown","5df159e5":"markdown","d0272f01":"markdown","252d6cdc":"markdown","79c3ed29":"markdown"},"source":{"96ab0a3f":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np","7ec03e31":"df_x=pd.read_csv('..\/input\/classify-points-using-deep-learning-beginner\/Logistic_X_Train.csv')\ndf_y=pd.read_csv('..\/input\/classify-points-using-deep-learning-beginner\/Logistic_Y_Train.csv')","ec4bf43a":"df_x.head()","318d1c37":"df_y.head()","47973cef":"plt.scatter(df_x.iloc[:,0],df_x.iloc[:,1],c=df_y.iloc[:,0])","5143576a":"from keras import models\nfrom keras.layers import Dense","287a89bb":"#Length of X and Y should be shape\nX=np.array(df_x) #Check shape of x\nY=np.array(df_y) #check shape of y\nprint(np.shape(X),np.shape(Y)) #print shape of Y,X","00e5f618":"model =models.Sequential()\nmodel.add(Dense(20,activation='relu',input_shape=(1575,2)))\nmodel.add(Dense(50,activation='tanh'))\nmodel.add(Dense(100,activation='tanh'))\nmodel.add(Dense(50,activation='tanh'))\nmodel.add(Dense(20,activation='relu'))\nmodel.add(Dense(1,activation='sigmoid'))","3d3be2b7":"model.compile(optimizer='Adam',loss='binary_crossentropy',metrics=['accuracy'])","a024ec3f":"model.summary()","2234b86f":"from sklearn.model_selection import train_test_split ","70024223":"X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.3,random_state=42) #make a random split of 30% testing and 70% training","105866b8":"print(X_train.shape,Y_train.shape) #Check shape of train data ","4d789ee5":"hist= model.fit(X_train,Y_train,epochs=40,batch_size=32,validation_data=(X_test,Y_test))","0d88484c":"output_train = model.predict(X_train)\noutput_train.shape","6e03c4fa":"output_test = model.predict(X_test)\noutput_test.shape","8b22e427":"plt.scatter(X_train[:,0],X_train[:,1],c=output_train) #Let;s Visualize our Output on train-data","39b21bec":"plt.scatter(X_test[:,0],X_test[:,1],c=output_test) #let's visualise it on test=data","efef4690":"Let's Build our model","9e56b9d2":"Let's Plot and Visualise the Relationship(Correlation) between the data","d55d7cf8":"Let's Read the dataset using pandas","5df159e5":"Check the Details about DataFrame X.","d0272f01":"# **Model Building**","252d6cdc":"Check the Details about DataFrame Y.","79c3ed29":"# **Import Libraries**"}}