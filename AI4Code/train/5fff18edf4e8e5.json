{"cell_type":{"d9fc73c5":"code","0d0acb91":"code","677a361d":"code","21454d7e":"code","dc072f01":"code","2d68156e":"code","f719252a":"code","d6bf8d22":"code","5b6b3b8e":"code","f78b03d5":"code","2569ea68":"code","103b754e":"code","11fac3ff":"code","e62d0e88":"code","c7ac0094":"code","2121b9f5":"code","6a75b4de":"code","d8b6aa2e":"code","033d69a0":"code","9d4226bb":"code","6f1623bf":"code","4a6e71a3":"code","1ee85de5":"code","3b28c10a":"code","0db76ec7":"code","1376863d":"code","4e9ad1e6":"code","2beb007c":"code","e6cca7c8":"code","79b919f8":"code","197c47e8":"code","27b8193b":"code","23aa7988":"code","10063fa8":"code","ae622231":"code","8da8c334":"code","c79a9a07":"code","bce8ff63":"code","3757a5b3":"code","e81683a4":"code","0ae1d9c6":"code","9c93d465":"code","7cf49a88":"code","7e7b3df6":"code","c7b4d88a":"code","4f9ec92f":"code","ba81bb8e":"code","81295f86":"code","d9734abb":"code","330d7fcd":"code","a45ee06c":"code","dbaf9399":"code","c8d65f9b":"markdown","985f7fc2":"markdown","f73b819c":"markdown","90aef7e3":"markdown","9f6266c8":"markdown","c7d1a45d":"markdown","e2e27336":"markdown","ce380319":"markdown","3eb3fb8b":"markdown","e0d1af2a":"markdown","b01c777e":"markdown","a633d3c4":"markdown","66600d7c":"markdown","bd37ef78":"markdown","061693d3":"markdown","f6ca5ed0":"markdown","0cc50f15":"markdown"},"source":{"d9fc73c5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport sklearn\nfrom sklearn import *\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0d0acb91":"df_train = pd.read_csv('\/kaggle\/input\/realestatepriceprediction\/train.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/realestatepriceprediction\/test.csv')\ndf_submission = pd.read_csv('\/kaggle\/input\/realestatepriceprediction\/sample_submission.csv')","677a361d":"df_train.head(5)","21454d7e":"print(df_train.info())\nprint(df_train.shape)\ndf_train.describe().T","dc072f01":"df_train[df_train['LifeSquare'].isnull()].describe().T","2d68156e":"df_train['LifeSquare'] = df_train['LifeSquare'].fillna(0)","f719252a":"df_train[df_train['Healthcare_1'].isnull()].describe().T","d6bf8d22":"df_train['Healthcare_1'] = df_train['Healthcare_1'].fillna(df_train['Healthcare_1'].median())","5b6b3b8e":"print(df_test.info())\nprint(df_test.shape)\ndf_test.describe().T","f78b03d5":"df_test[df_test['LifeSquare'].isnull()].describe().T","2569ea68":"df_test['LifeSquare'] = df_test['LifeSquare'].fillna(0)","103b754e":"df_test[df_test['Healthcare_1'].isnull()].describe().T","11fac3ff":"df_test['Healthcare_1'] = df_test['Healthcare_1'].fillna(df_test['Healthcare_1'].median())","e62d0e88":"feat_numeric = list(df_train.select_dtypes(exclude='object').columns)\nfeat_object = list(df_train.select_dtypes(include='object').columns)\ntarget = 'Price'","c7ac0094":"feat_numeric","2121b9f5":"feat_numeric.pop(0)","6a75b4de":"df_train[feat_numeric].hist(\n    figsize=(16,16)\n)\nplt.show()","d8b6aa2e":"df_train['HouseYear'].describe()","033d69a0":"df_train[df_train['HouseYear']>2020]","9d4226bb":"df_train.drop(\n    index=df_train[df_train['HouseYear']>2020].index,\n    axis=0,\n    inplace=True\n)","6f1623bf":"df_train[df_train['HouseYear']>2020]","4a6e71a3":"df_test[df_test['HouseYear']>2020]","1ee85de5":"df_train[df_train['LifeSquare']>1000]","3b28c10a":"df_test[df_test['LifeSquare']>1000]","0db76ec7":"df_train.drop(\n    index=df_train[df_train['LifeSquare']>1000].index,\n    axis=0,\n    inplace=True\n)","1376863d":"df_train[df_train['LifeSquare']>1000]","4e9ad1e6":"df_train[df_train['KitchenSquare']>df_train['Square']]","2beb007c":"df_train[df_train['KitchenSquare']>df_train['Square']]","e6cca7c8":"df_test[df_test['KitchenSquare']>df_test['Square']]","79b919f8":"_ = df_train[df_train['KitchenSquare']<=df_train['Square']][['Square', 'KitchenSquare']].median()\nsquare, kitchen = _[0], _[1]","197c47e8":"kitchen\/square","27b8193b":"df_train.loc[df_train['KitchenSquare']>df_train['Square'], 'KitchenSquare'] = \\\n    df_train.loc[df_train['KitchenSquare']>df_train['Square'], 'Square'] * kitchen\/square","23aa7988":"df_train[df_train['KitchenSquare']>df_train['Square']]","10063fa8":"df_test[df_test['KitchenSquare']>df_test['Square']]","ae622231":"_ = df_test[df_test['KitchenSquare']<=df_test['Square']][['Square', 'KitchenSquare']].median()\nsquare, kitchen = _[0], _[1]","8da8c334":"df_test.loc[df_test['KitchenSquare']>df_test['Square'], 'KitchenSquare'] = \\\n    df_test.loc[df_test['KitchenSquare']>df_test['Square'], 'Square'] * kitchen\/square","c79a9a07":"df_test[df_test['KitchenSquare']>df_test['Square']]","bce8ff63":"fig, ax = plt.subplots(\n    nrows=1,\n    ncols=3,\n    figsize=(10, 10)\n)\n\nfor n, f in enumerate(feat_object):\n    \n    sns.countplot(\n        x=f,\n        data=df_train,\n        ax=ax[n]\n    )\n    \nplt.show()","3757a5b3":"for col in feat_object:\n    \n    df_temp = pd.get_dummies(df_train[col])\n\n    df_temp.columns = [col + '_' + c for c in df_temp]\n    \n    df_train.drop(\n        labels=col,\n        axis=1,\n        inplace=True\n    )\n    \n    df_train = pd.concat(\n        objs=(df_train, df_temp),\n        axis=1\n    )\n    \n    del df_temp","e81683a4":"df_train","0ae1d9c6":"for col in feat_object:\n    \n    df_temp = pd.get_dummies(df_test[col])\n\n    df_temp.columns = [col + '_' + c for c in df_temp]\n    \n    df_test.drop(\n        labels=col,\n        axis=1,\n        inplace=True\n    )\n    \n    df_test = pd.concat(\n        objs=(df_test, df_temp),\n        axis=1\n    )\n    \n    del df_temp","9c93d465":"df_test","7cf49a88":"feat = list(df_train.columns)\nfeat.pop(0)","7e7b3df6":"plt.figure(figsize = (20,15))\n\ncorr = df_train[feat].corr()\nmask = np.triu(np.ones_like(corr, dtype=np.bool))\n\nsns.set(font_scale=1.4)\nsns.heatmap(\n    data=corr,\n    mask=mask,\n    annot=False\n)\n\nplt.title('Correlation matrix')\nplt.show()","c7b4d88a":"feat.pop(feat.index('Price'))","4f9ec92f":"model = sklearn.ensemble.RandomForestRegressor(\n    n_estimators=100,\n    criterion='mse',\n    max_depth=10,\n    min_samples_split=2,\n    min_samples_leaf=1,\n    min_weight_fraction_leaf=0.0,\n    max_features=.75,\n    max_leaf_nodes=None,\n    min_impurity_decrease=0.0,\n    min_impurity_split=None,\n    bootstrap=True,\n    oob_score=True,\n    n_jobs=-1,\n    random_state=0,\n    verbose=0,\n    warm_start=False,\n    ccp_alpha=0.0,\n    max_samples=.75,\n)","ba81bb8e":"X_train, X_valid, y_train, y_valid = sklearn.model_selection.train_test_split(\n    df_train[feat],\n    df_train[target]\n)","81295f86":"model.fit(\n    X=X_train,\n    y=y_train\n)","d9734abb":"y_pred_train = model.predict(\n    X=X_valid\n)\n\nsklearn.metrics.r2_score(\n    y_true=y_valid,\n    y_pred=y_pred_train\n)","330d7fcd":"y_pred_test = model.predict(\n    X=df_test[feat]\n)","a45ee06c":"df_test[target] = y_pred_test","dbaf9399":"df_test[['Id', 'Price']].to_csv('submission.csv', index=None)","c8d65f9b":"### \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0444\u0438\u0447\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u0438 One Hot Encoding","985f7fc2":"# \u041c\u043e\u0434\u0435\u043b\u044c","f73b819c":"# \u0418\u043c\u043f\u043e\u0440\u0442 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a","90aef7e3":"- Id - \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \u043a\u0432\u0430\u0440\u0442\u0438\u0440\u044b\n- DistrictId - \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \u0440\u0430\u0439\u043e\u043d\u0430\n- Rooms - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u043d\u0430\u0442\n- Square - \u043f\u043b\u043e\u0449\u0430\u0434\u044c\n- LifeSquare - \u0436\u0438\u043b\u0430\u044f \u043f\u043b\u043e\u0449\u0430\u0434\u044c\n- KitchenSquare - \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u043a\u0443\u0445\u043d\u0438\n- Floor - \u044d\u0442\u0430\u0436\n- HouseFloor - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u0442\u0430\u0436\u0435\u0439 \u0432 \u0434\u043e\u043c\u0435\n- HouseYear - \u0433\u043e\u0434 \u043f\u043e\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0434\u043e\u043c\u0430\n- Ecology_1, Ecology_2, Ecology_3 - \u044d\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u043c\u0435\u0441\u0442\u043d\u043e\u0441\u0442\u0438\n- Social_1, Social_2, Social_3 - \u0441\u043e\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u043c\u0435\u0441\u0442\u043d\u043e\u0441\u0442\u0438\n- Healthcare_1, Helthcare_2 - \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u043c\u0435\u0441\u0442\u043d\u043e\u0441\u0442\u0438, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0441 \u043e\u0445\u0440\u0430\u043d\u043e\u0439 \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u044f\n- Shops_1, Shops_2 - \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0441 \u043d\u0430\u043b\u0438\u0447\u0438\u0435\u043c \u043c\u0430\u0433\u0430\u0437\u0438\u043d\u043e\u0432, \u0442\u043e\u0440\u0433\u043e\u0432\u044b\u0445 \u0446\u0435\u043d\u0442\u0440\u043e\u0432\n- Price - \u0446\u0435\u043d\u0430 \u043a\u0432\u0430\u0440\u0442\u0438\u0440\u044b","9f6266c8":"## \u041f\u0440\u043e\u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0438\u0432\u0448\u0438\u0435\u0441\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0438 \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u043e\u043f\u044f\u0442\u044c \u0436\u0435 \u0431\u0435\u0437 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430","c7d1a45d":"# \u0422\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u0434\u0430\u043d\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 R2 = 0.70962","e2e27336":"## \u0422\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u0434\u0430\u0442\u0430\u0441\u0435\u0442 ","ce380319":"### \u0421\u0442\u0440\u043e\u0438\u043c \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b, \u0447\u0442\u043e\u0431\u044b \u043d\u0430\u0439\u0442\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0441 \u0432\u044b\u0431\u0440\u043e\u0441\u0430\u043c\u0438","3eb3fb8b":"#### \u041f\u043b\u043e\u0449\u0430\u0434\u044c \u043a\u0443\u0445\u043d\u0438 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u0437\u0434\u0430\u043d\u0438\u044f, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0437\u0430\u043c\u0435\u043d\u0438\u043c \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u043d\u0430 \u0441\u0440\u0435\u0434\u043d\u044e\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u043a\u0443\u0445\u043d\u0438 \u043e\u0442 \u0432\u0441\u0435\u0433\u043e \u0437\u0434\u0430\u043d\u0438\u044f","e0d1af2a":"# \u0412\u0430\u0448\u0430 \u0437\u0430\u0434\u0430\u0447\u0430 - \u043e\u0431\u043e\u0439\u0442\u0438 \u0431\u0435\u0439\u0437\u043b\u0430\u0439\u043d, \u0430 \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e:\n* \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0438\u0437 \u043f\u043e\u0445\u043e\u0436\u0438\u0445\n* \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0443\u0431\u0440\u0430\u0442\u044c \u0441\u0438\u043b\u044c\u043d\u043e \u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u0443\u044e\u0449\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\n* \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0434\u0440\u0443\u0433\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438\n* \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0438 \u0441\u043c\u0435\u0448\u0430\u0439\u0442\u0435 \u0438\u0445 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b\n* \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0442\u044e\u043d\u0438\u043d\u0433 \u043c\u043e\u0434\u0435\u043b\u0435\u0439\n* \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u043d\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u043f\u0435\u0440\u0435\u0434 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435\u043c, \u0430 \u0437\u0430\u0442\u0435\u043c \u0434\u0435\u043d\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0430\n* \u0441\u0432\u043e\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442","b01c777e":"# \u0420\u0430\u0437\u0434\u0435\u043b\u0438\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043d\u0430 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u0438 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0435","a633d3c4":"## \u0422\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0439 \u0434\u0430\u0442\u0430\u0441\u0435\u0442","66600d7c":"# \u0421\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0435","bd37ef78":"#### \u0423 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u0433\u043e\u0434\u0430 \u0435\u0441\u0442\u044c \u043a\u0440\u0438\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f - \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0438\u0445 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u043d\u0430 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u044d\u0442\u043e\u0433\u043e \u0448\u0443\u043c\u0430","061693d3":"#### \u0410\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u0436\u0438\u043b\u043e\u0439 \u043f\u043b\u043e\u0449\u0430\u0434\u0438","f6ca5ed0":"### \u0423\u0434\u0430\u043b\u0438\u043c \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440, \u0442.\u043a. \u043e\u043d \u043d\u0435 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0437\u0443\u0435\u0442 \u043d\u0430\u0448\u0438 \u0434\u0430\u043d\u043d\u044b\u0435","0cc50f15":"### \u0417\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043a\u043e\u0440\u0440\u0435\u043b\u0438\u0440\u0443\u044e\u0449\u0438\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043d\u0430 \u043f\u0435\u0440\u0432\u044b\u0439 \u0432\u0437\u0433\u043b\u044f\u0434 \u043d\u0435\u0442. \u0423\u0431\u0438\u0440\u0430\u0435\u043c \u0438\u0437 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e."}}