{"cell_type":{"bcabf367":"code","a68667b7":"code","21e22552":"code","1b2ac37b":"code","2917d714":"code","f121b9af":"code","90916ffc":"code","3f91ef56":"code","b2dd6dc5":"code","28908e59":"code","f95abf83":"code","67152245":"code","b37d6645":"code","5a660b91":"code","085427fb":"code","91841a23":"code","c9c9b67b":"code","3ea82e39":"code","8914a048":"code","0345274f":"code","fd74caab":"code","343dbed7":"code","ece7b9b1":"code","0947582f":"code","037da438":"code","f01ea209":"code","92b642cc":"code","2fe4e333":"code","5e998bc7":"code","2dbbc6b4":"code","9e92ee6f":"code","7a91ca36":"code","006a2476":"code","3db8ae27":"code","2fdb462b":"code","d9948b83":"code","a9e8f3ba":"code","17cc663c":"code","38a9419c":"code","2810afcd":"code","ca2a91cd":"code","0c9e0dd1":"code","f3ae197b":"code","84332dd6":"code","d1afec54":"code","749c0aab":"code","2d91c52f":"code","146864c5":"code","9b23c20a":"code","77c48a3e":"markdown","299b44bc":"markdown","3d50d0bd":"markdown","2eb31041":"markdown","ad57c0ee":"markdown","b34326c5":"markdown","43f01280":"markdown","f7d47faf":"markdown","be87f230":"markdown","e6a4d0ac":"markdown","8c1b77bd":"markdown","a36f11e4":"markdown","4e7da081":"markdown","8c152463":"markdown"},"source":{"bcabf367":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nsns.set_style(\"whitegrid\")\nplt.style.use(\"fivethirtyeight\")","a68667b7":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","21e22552":"train = pd.read_csv('\/kaggle\/input\/av-healthcare-analytics-ii\/healthcare\/train_data.csv')\ntest = pd.read_csv('\/kaggle\/input\/av-healthcare-analytics-ii\/healthcare\/test_data.csv')\ndictionary = pd.read_csv('\/kaggle\/input\/av-healthcare-analytics-ii\/healthcare\/train_data_dictionary.csv')\nsample = pd.read_csv('\/kaggle\/input\/av-healthcare-analytics-ii\/healthcare\/sample_sub.csv')","1b2ac37b":"dictionary","2917d714":"train.info()","f121b9af":"train.head(5)","90916ffc":"train.Stay.value_counts()","3f91ef56":"train.head(5)","b2dd6dc5":"# Distribution of target feature\nplt.figure(figsize=(10,7))\ntrain.Stay.value_counts().plot(kind=\"bar\", color = ['Salmon'])","28908e59":"# Check for unique values in every column\nfor features in train.columns:\n    print('Unique Values for {}'.format(features))\n    print(train[features].unique())\n    print('======================================')\n    print()","f95abf83":"# Check for null values\ntrain.isna().sum()","67152245":"train = train.drop(['Hospital_region_code', 'Bed Grade', 'patientid', 'City_Code_Patient'], axis = 1)\ntest = test.drop(['Hospital_region_code', 'Bed Grade', 'patientid', 'City_Code_Patient'], axis = 1)","b37d6645":"# Combine test and train dataset for processing\ncombined = [train, test]","5a660b91":"from sklearn.preprocessing import LabelEncoder\n\nfor dataset in combined:\n    label = LabelEncoder()\n    dataset['Department'] = label.fit_transform(dataset['Department'])","085427fb":"combined[1].Department.unique()","91841a23":"# Ward type\nfor dataset in combined:\n    label = LabelEncoder()\n    dataset['Hospital_type_code'] = label.fit_transform(dataset['Hospital_type_code'])\n    dataset['Ward_Facility_Code'] = label.fit_transform(dataset['Ward_Facility_Code'])\n    dataset['Ward_Type'] = label.fit_transform(dataset['Ward_Type'])\n    dataset['Type of Admission'] = label.fit_transform(dataset['Type of Admission'])\n    dataset['Severity of Illness'] = label.fit_transform(dataset['Severity of Illness'])","c9c9b67b":"combined[0]","3ea82e39":"combined[1]","8914a048":"# Check age distribution\ncombined[0].Age.hist()","0345274f":"combined[0].Age.unique()","fd74caab":"age_dict = {'0-10': 0, '11-20': 1, '21-30': 2, '31-40': 3, '41-50': 4, '51-60': 5, '61-70': 6, '71-80': 7, '81-90': 8, '91-100': 9}","343dbed7":"for dataset in combined:\n    dataset['Age'] = dataset['Age'].replace(age_dict.keys(), age_dict.values())","ece7b9b1":"combined[0].Stay.unique()","0947582f":"stay_dict = {'0-10': 0, '11-20': 1, '21-30': 2, '31-40': 3, '41-50': 4, '51-60': 5, '61-70': 6, '71-80': 7, '81-90': 8, '91-100': 9, 'More than 100 Days': 10}","037da438":"combined[0]['Stay'] = combined[0]['Stay'].replace(stay_dict.keys(), stay_dict.values())","f01ea209":"combined[0].Age.hist()","92b642cc":"for dataset in combined:\n    print(dataset.shape)","2fe4e333":"combined[1].info()","5e998bc7":"columns_list = ['Type of Admission', 'Available Extra Rooms in Hospital', 'Visitors with Patient', 'Admission_Deposit']","2dbbc6b4":"len(columns_list)","9e92ee6f":"from sklearn.preprocessing import StandardScaler\n\nss= StandardScaler()\n\nfor dataset in combined:\n    dataset[columns_list]= ss.fit_transform(dataset[columns_list].values)\n","7a91ca36":"combined[0]","006a2476":"plt.figure(figsize=(12,12))\nsns.heatmap(combined[0].corr(), annot=True, cmap='coolwarm')","3db8ae27":"# machine learning\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC, LinearSVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import Perceptron\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.tree import DecisionTreeClassifier\n","2fdb462b":"train = combined[0]\ntest = combined[1]","d9948b83":"sample","a9e8f3ba":"X_train = train.drop(['case_id', 'Stay'], axis=1)\nY_train = train[\"Stay\"]\nX_test  = test.drop(\"case_id\", axis=1).copy()\nX_train.shape, Y_train.shape, X_test.shape","17cc663c":"sample.shape","38a9419c":"X_test.columns","2810afcd":"Y_train","ca2a91cd":"# KNN\nknn = KNeighborsClassifier(n_neighbors = 3)\nknn.fit(X_train, Y_train)\nY_pred = knn.predict(X_test)\nacc_knn = round(knn.score(X_train, Y_train) * 100, 2)\nacc_knn","0c9e0dd1":"# Decision Tree\ndecision_tree = DecisionTreeClassifier()\ndecision_tree.fit(X_train, Y_train)\nY_pred = decision_tree.predict(X_test)\nacc_decision_tree = round(decision_tree.score(X_train, Y_train) * 100, 2)\nacc_decision_tree","f3ae197b":"# Random Forest\n\nrandom_forest = RandomForestClassifier(n_estimators=100)\nrandom_forest.fit(X_train, Y_train)\nY_pred = random_forest.predict(X_test)\nrandom_forest.score(X_train, Y_train)\nacc_random_forest = round(random_forest.score(X_train, Y_train) * 100, 2)\nacc_random_forest","84332dd6":"sns.barplot(x= ['KNN','DT','RF'],y= [acc_knn, acc_decision_tree,acc_random_forest])","d1afec54":"sample","749c0aab":"submission = pd.DataFrame({\n        \"case_id\": test[\"case_id\"],\n        \"Stay\": Y_pred\n})","2d91c52f":"submission['Stay'] = submission['Stay'].replace(stay_dict.values(), stay_dict.keys())","146864c5":"submission.to_csv('submission.csv', index = False)","9b23c20a":"sample","77c48a3e":"# 3. Data Modelling","299b44bc":"## Data Dictionary","3d50d0bd":"**Insights**:\n1. Categorical features which need to be encoded:\n- `Hospital_region_code`\n- `Department`\n- `Ward_Type`\n- `Admission`\n- `Illness`\n\n2. Bins (range) which need to be encoded:\n- `Age`\n- `Stay` (Target)\n","2eb31041":"# 4. Submission","ad57c0ee":"# 1. Exploratory Data Analysis\n* What question(s) are you trying to solve?\n* What kind of data do we have and how do we treat different types?\n* What's missing from the data and how do you deal with it?\n* Where are the outliers and why should you care about them?\n* How can you add, change or remove features to get more out of your data?","b34326c5":"# HealthCare Analytics: Predicting the Length of Stay (LOS) of a patient \n- Objective: Predict the Length of Stay for each patient on case by case basis so that the Hospitals can use this information for optimal resource allocation and better functioning\n- The length of stay is divided into 11 different classes ranging from 0-10 days to more than 100 days.","43f01280":"`Bed Grade` and `City_Code_Patient` features have null values to be filled.\n- But do we need them?","f7d47faf":"## Load Libraries & Data","be87f230":"# 2. Data Processing & Feature engineering","e6a4d0ac":"#### Hypothesis: \nThe following features may have relevance with the Length of Stay of a patient\n- Department: Relates to the type of disease\n- Type of Admission: Relates to patients' reason of admission to the hospital\n- Severity of Illness: Relates to the curability of disease\n- Age: Relates to the curability of disease","8c1b77bd":"### 2c. Scaling numerical data","a36f11e4":"Insight: Most of the patients stay in hospital for **21-30 days**, followed by **11-20**, **31-40**","4e7da081":"### 2b Binning features","8c152463":"### 2a Encoding categorical features"}}