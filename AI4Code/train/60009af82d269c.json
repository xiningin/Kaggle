{"cell_type":{"40da5d0c":"code","f6faa837":"code","1876c398":"code","9975326e":"code","36e44580":"code","9619c2aa":"code","c737becc":"code","cebd835f":"code","afcb6606":"code","8ece5516":"code","aeebfee1":"code","8752b55d":"code","a61f8cab":"code","deef7897":"code","2e41fd40":"code","6d24cc63":"code","3c908f61":"code","aec8b4d5":"code","4081fc99":"code","b44bb263":"code","153d4861":"code","92f85043":"code","5b42e565":"code","5751afbf":"code","f0d91775":"code","acd6d167":"code","13c45c4c":"code","e68b815c":"code","f3bac510":"code","d8514e18":"code","f22ba672":"code","331a95bd":"code","fbd4ca87":"code","28b45f87":"code","2bbebc7b":"code","9829e01a":"code","c4624994":"code","b7a93a48":"code","485d2cda":"code","ec0fa077":"code","752d33cb":"code","703af4c4":"code","0d0158e1":"code","ba507d71":"code","8a79c003":"code","3d2323d3":"code","731134f2":"code","90b5c7cd":"code","0adc3eb3":"code","64ffa42b":"code","81aa33ed":"code","5c6214a5":"code","b55173de":"code","c9caa268":"code","5b1fe296":"code","033775ce":"code","3d35a235":"code","b67f28bd":"code","5ee3baf4":"code","187d8a86":"code","f887b3de":"code","8bb858fb":"code","40534708":"code","deec5ca5":"code","44cb7167":"code","3893b83b":"code","cf9f5c7a":"markdown","53241532":"markdown","fe9950ce":"markdown","ce6e83b4":"markdown","965e2799":"markdown","9c53b339":"markdown","043249b2":"markdown","ebbb447f":"markdown","cb006624":"markdown","62bc0760":"markdown","b67624a7":"markdown","8236f812":"markdown","650f1f88":"markdown","f3222c6a":"markdown","8b671af9":"markdown","45b97047":"markdown","5177a945":"markdown","14f2d7ed":"markdown","3e824afc":"markdown","ba2f51c0":"markdown","344c16a8":"markdown","69efc4ba":"markdown","db5a89af":"markdown","ca65c708":"markdown"},"source":{"40da5d0c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f6faa837":"df = pd.read_csv('\/kaggle\/input\/telecom-users-dataset\/telecom_users.csv')","1876c398":"df.info()","9975326e":"df.drop(['Unnamed: 0', 'customerID'], axis=1, inplace=True)","36e44580":"df.describe()","9619c2aa":"df.gender.unique()","c737becc":"from sklearn.preprocessing import LabelEncoder","cebd835f":"le = LabelEncoder()\nresult = le.fit_transform(df['gender'])\nprint(result)","afcb6606":"print(df.gender)\nprint(result)","8ece5516":"df.gender = result","aeebfee1":"df","8752b55d":"df.columns","a61f8cab":"df.info()","deef7897":"df.Partner.unique()","2e41fd40":"df.Dependents.unique()","6d24cc63":"for i in df.columns:\n    print(i)","3c908f61":"for i in df.columns:\n    print('columns name : {} \\n==> unique values :'.format(i),df['{}'.format(i)].unique())","aec8b4d5":"YesNoCol = ['Partner', 'Dependents', 'PhoneService', 'MultipleLines', 'PaperlessBilling', 'Churn'] ","4081fc99":"for col in YesNoCol:\n    df[col] = le.fit_transform(df[col])","b44bb263":"df","153d4861":"for i in df.columns:\n    print('columns name : {} \\n==> unique values :'.format(i),df['{}'.format(i)].unique())","92f85043":"df.OnlineSecurity == 'No internet service'","5b42e565":"pd.Series(df.OnlineSecurity == 'No internet service')","5751afbf":"temp = pd.Series(df.OnlineSecurity == 'No internet service')","f0d91775":"temp","acd6d167":"df['InternetService'] = le.fit_transform(temp)\n","13c45c4c":"df","e68b815c":"'h' in 'heello'","f3bac510":"df['OnlineSecurity'][-5:]","d8514e18":"[0 if 'No' in x else 1 for x in df['OnlineSecurity']][-5:]","f22ba672":"temp = ['OnlineSecurity','OnlineBackup','DeviceProtection','TechSupport','StreamingTV','StreamingMovies']\nfor col in temp:\n    df[col] = [0 if 'No' in x else 1 for x in df[col]]","331a95bd":"df","fbd4ca87":"df.info()","28b45f87":"[float(x) for x in df.TotalCharges]","2bbebc7b":"count = 0\nfor n in df.TotalCharges:\n    count += 1\n    try:\n        float(n)\n    except ValueError as e:\n        print(count)","9829e01a":"df.TotalCharges[356]","c4624994":"idx = [357, 635,2772, 3087,3256,4327,5376,5383,5696,5952]\nfor i in idx:\n    df.TotalCharges[i-1] = 0","b7a93a48":"df.TotalCharges[356]","485d2cda":"df.TotalCharges = [float(x) for x in df.TotalCharges]","ec0fa077":"df.info()","752d33cb":"df.Contract.unique()","703af4c4":"df.PaymentMethod.unique()","0d0158e1":"pd.get_dummies(df.Contract)","ba507d71":"dummy_col1 = pd.get_dummies(df.Contract)","8a79c003":"pd.get_dummies(df.PaymentMethod)","3d2323d3":"dummy_col2 = pd.get_dummies(df.PaymentMethod)","731134f2":"pd.concat([df, dummy_col1, dummy_col2], axis=1)","90b5c7cd":"df = pd.concat([df, dummy_col1, dummy_col2], axis=1)","0adc3eb3":"df.info()","64ffa42b":"df.drop(['Contract','PaymentMethod'], axis=1).info()","81aa33ed":"df.drop(['Contract','PaymentMethod'], axis=1,inplace=True)","5c6214a5":"df","b55173de":"point = [0.8, 0.2]","c9caa268":"np.random.permutation(len(df))","5b1fe296":"np.random.permutation(len(df)).max()","033775ce":"seed_idx = np.random.permutation(len(df))","3d35a235":"# Shuffle Test\ndf.set_index(seed_idx)","b67f28bd":"train_size = round(len(df)*point[0])\nvalid_size = round(len(df)*point[1])\nprint('train_size : ', train_size)\nprint('test_size : ', valid_size)","5ee3baf4":"X = df.set_index(seed_idx).drop('Churn',axis=1)\ny = df.set_index(seed_idx)['Churn']","187d8a86":"# split\ntrain_x = X[:train_size]\ntrain_y = y[:train_size]\ntest_x = X[train_size:]\ntest_y = y[train_size:]","f887b3de":"print(len(train_x), len(train_y))\nprint(len(test_x), len(test_y))","8bb858fb":"from sklearn.linear_model import LogisticRegression\n#from sklearn.preprocessing import StandardScaler","40534708":"model = LogisticRegression(max_iter=500)","deec5ca5":"model.fit(train_x,train_y)","44cb7167":"pred = model.predict(test_x)","3893b83b":"print('[Accuracy]Simple Logistic Regresssion Model : ',(pred == test_y).sum() \/ len(pred))","cf9f5c7a":"### Intro. Columns Info","53241532":"#### Just make the for loop","fe9950ce":"#### Something wrong! check the problem!","ce6e83b4":"### Let's EDA","965e2799":"#### and object columns remained are ['Contract','PaymentMethod']|","9c53b339":"#### Check unique values in cate-columns","043249b2":"### Step 3. Dataset Split (Train : Test = 0.8 : 0.2)","ebbb447f":"#### I Think that's two columns are features, Let's convert them to dummies","cb006624":"#### One-Hot Encoding","62bc0760":"* length of data - x : y = (5986 * 21) : (5986 x 1, Churn)","b67624a7":"### Step 1. Data Load & EDA","8236f812":"### Step 2. Data Preprocessing","650f1f88":"#### Result","f3222c6a":"#### Model training","8b671af9":"#### Find Null Values! Let's convert that to 0","45b97047":"#### Prediction","5177a945":"#### One more check (Yes No)","14f2d7ed":"#### Yes!! done, Next, remove 'No Internet service' values","3e824afc":"### Step 4. Modeling : Logistic Regression","ba2f51c0":"#### I want to encoding ['No internet service','Yes','No'] to [1,0] ('No internet service' ==> 'No') but simultaneously save 'No internet service'\n#### Let's create New Column","344c16a8":"* customerID - customer id\n* gender - client gender (male \/ female)\n* SeniorCitizen - is the client retired (1, 0)\n* Partner - is the client married (Yes, No)\n* tenure - how many months a person has been a client of the company\n* PhoneService - is the telephone service connected (Yes, No)\n* MultipleLines - are multiple phone lines connected (Yes, No, No phone service)\n* InternetService - client's Internet service provider (DSL, Fiber optic, No)\n* OnlineSecurity - is the online security service connected (Yes, No, No internet service)\n* OnlineBackup - is the online backup service activated (Yes, No, No internet service)\n* DeviceProtection - does the client have equipment insurance (Yes, No, No internet service)\n* TechSupport - is the technical support service connected (Yes, No, No internet service)\n* StreamingTV - is the streaming TV service connected (Yes, No, No internet service)\n* StreamingMovies - is the streaming cinema service activated (Yes, No, No internet service)\n* Contract - type of customer contract (Month-to-month, One year, Two year)\n* PaperlessBilling - whether the client uses paperless billing (Yes, No)\n* PaymentMethod - payment method (Electronic check, Mailed check, Bank transfer (automatic), Credit card (automatic))\n* MonthlyCharges - current monthly payment\n* TotalCharges - the total amount that the client paid for the services for the entire time\n* Churn - whether there was a churn (Yes or No)","69efc4ba":"#### Preprocessing - All Clear","db5a89af":"#### Shuffle","ca65c708":"#### ['Partner', 'Dependents', 'PhoneService', 'MultipleLines', 'PaperlessBilling', 'Churn'] ==> Yes or No"}}