{"cell_type":{"56fd0e9e":"code","401e02b3":"code","56e87f52":"code","d35f7799":"code","98d75537":"code","03ffffd6":"code","3720a9dd":"code","0a6a1432":"code","f763f573":"code","10740a43":"code","a9848835":"code","6054ea97":"code","c677ae3b":"code","38bf149a":"code","e2d0dac5":"code","ce8f99b6":"code","c0962c47":"code","dbeca862":"code","ed8f37f5":"code","5e761d60":"code","0e82e058":"code","6f91d049":"code","821ddeac":"code","6a1a1e04":"code","a47e0bc0":"code","d20a985b":"markdown","02de3132":"markdown","6723038e":"markdown","cafeab1a":"markdown","e79248e4":"markdown","83ef6e43":"markdown","c05c1516":"markdown","f2990b28":"markdown","df34973e":"markdown","c4b96e1b":"markdown","867a27f9":"markdown","2ea1280e":"markdown","293a1d7d":"markdown","6cc42edf":"markdown","8398c8f0":"markdown","310940a5":"markdown","4a5684bc":"markdown","84ef6c5a":"markdown","18b8da0e":"markdown","6ce3af66":"markdown"},"source":{"56fd0e9e":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport plotly.express as px\nimport warnings\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import r2_score\nfrom xgboost import XGBRegressor\nwarnings.filterwarnings('ignore')\n%matplotlib inline","401e02b3":"train=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\nsub=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv')","56e87f52":"train.columns","d35f7799":"train['SalePrice'].describe()","98d75537":"plt.figure(figsize=(14,8))\npx.histogram(train,x='SalePrice',nbins=80,title='Selling Price Distribution')","03ffffd6":"plt.figure(figsize=(14,8))\npx.scatter(train,x='GrLivArea',y='SalePrice',title='SalePrice vs GrLivArea',render_mode='auto',)","3720a9dd":"plt.figure(figsize=(14,8))\npx.scatter(train,x='TotalBsmtSF',y='SalePrice',title='SalePrice vs TotalBsmtSF',render_mode='auto')","0a6a1432":"plt.figure(figsize=(14,8))\npx.box(train,x='OverallQual',y='SalePrice',title='SalePrice vs OverallQual')","f763f573":"plt.figure(figsize=(20,10))\nsns.boxplot(data=train,x='YearBuilt',y='SalePrice')\nplt.title('SalePrice vs YearBuilt')\nplt.xlabel('Year')\nplt.ylabel('Price')\nplt.xticks(rotation=90)\nplt.tight_layout()","10740a43":"plt.figure(figsize=(12,12))\nsns.heatmap(train.corr(),square=True)","a9848835":"#saleprice correlation matrix\nplt.figure(figsize=(10,10))\nk = 10 #number of variables for heatmap\ncols = train.corr().nlargest(k, 'SalePrice')['SalePrice'].index\ncm = np.corrcoef(train[cols].values.T)\nsns.set(font_scale=1.25)\nhm = sns.heatmap(cm, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values)\nplt.show()","6054ea97":"cols = ['SalePrice', 'OverallQual', 'GrLivArea', 'GarageCars', 'TotalBsmtSF', 'FullBath', 'YearBuilt']\nsns.pairplot(train[cols], size = 2.5)\nplt.show();","c677ae3b":"total = train.isnull().sum().sort_values(ascending=False)\npercent = (total*100) \/ train.shape[0]\nmissingData = pd.concat([total,percent],keys=['Total','Percentage'],axis=1)\nmissingData.head(20)","38bf149a":"train.drop((missingData[missingData['Total'] > 1]).index,1,inplace=True)","e2d0dac5":"train=train.dropna()","ce8f99b6":"plt.figure(figsize=(14,8))\npx.scatter(train,x='GrLivArea',y='SalePrice',title='SalePrice vs GrLivArea',render_mode='auto',)","c0962c47":"train.loc[train['GrLivArea']==4676]","dbeca862":"train.loc[train['GrLivArea']==5642]","ed8f37f5":"train = train.drop([1298,523],axis=0)","5e761d60":"test = test[train.columns[0:62]]","0e82e058":"idTest = pd.DataFrame(test['Id'])","6f91d049":"data = pd.concat([train, test], sort=False)\ndata = data.reset_index(drop=True)","821ddeac":"data=pd.get_dummies(data)","6a1a1e04":"train, test = data[:len(train)], data[len(train):]\n\nX = train.drop(columns=['SalePrice', 'Id']) \ny = train['SalePrice']\n\ntest = test.drop(columns=['SalePrice', 'Id'])","a47e0bc0":"model = XGBRegressor()\nmodel.fit(X,y)\nprint(r2_score(model.predict(X),y))","d20a985b":"> Relationship with 'YearBuilt'","02de3132":"# Dealing with Missing Data","6723038e":"> *Above visual shows that*\n> * There is positive skewness\n> * The plot is not normally distributed","cafeab1a":"> Here there are many identical features, which means that they convey same information, so it is worthy to consider them only 1 time.\n* TotalBsmtSF and 1stFlrSF are identical\n* GarageCars and GarageArea are identical\n* TotRmsAbvGrd and GrLivArea are identical\n\n ","e79248e4":"> SalePrice Correlation","83ef6e43":"# Training by XGBoost algorithm with default Parameters","c05c1516":"# Creating Dummy Variables.","f2990b28":"> *Relationship with 'GrLivArea'*","df34973e":"# Your Upvote will be appreciated if you liked this Kernel.\n## Thanks","c4b96e1b":"# Finding the correlation between the different features.","867a27f9":"> Relationship with 'OverallQual'","2ea1280e":"> Relationship with 'TotalBsmtSF'","293a1d7d":"> In the above scatter plot the two points where GrLivArea is very high and SalePrice is less, this two points are outliers and needed to be removed","6cc42edf":"# **Please Consider Upvote if you like this Kernel.**","8398c8f0":"# Analysing SalePrice","310940a5":"> This is initial phase of the Kernel, I'll update the kernel. I'll be looking forward to following tasks:\n1. Fine tuning the parameters to improve the performance.\n2. Applying the model to test data and check performance.\n3. Will explore the data more and see if more Data cleaning is possible or not.","4a5684bc":"# Exploring SalePrice with other Variables","84ef6c5a":"> We will remove the columns which will have more than 15% of missing data.\n\n> As far as GarageX and BsmtX are concerned GarageX has the same number of missing values and they all are very identical to GarageCars. As we will consider GarageCars we can drop GarageX.\n\n> For BsmtX, all this columns are identical to TotalBsmtSF and we can also remove all the BsmtX columns.\n\n> MasVnrType and MasVnrArea are very closely associated with YearBuilt thus we dont need this columns as well.\n\n> As far as one entry of Electrical is concerned we will just delete this observation and keep the variable.","18b8da0e":"> Spilling the training data","6ce3af66":"# Removing Outliers"}}