{"cell_type":{"c4a283da":"code","37f36491":"code","cacf3890":"code","a8de325d":"code","01370542":"code","9545fb97":"code","fa87d516":"code","e76822c8":"code","651c9517":"code","66b09f2d":"code","2b064561":"code","efe3b77a":"code","6f611374":"code","024a6c52":"code","7627c537":"code","8cb44f06":"code","f0f2f02b":"code","b4844673":"code","d733b4c1":"code","3e2cb933":"code","24bdcb97":"code","8ac3e849":"code","26146289":"code","fa2bbdb7":"markdown","b77ced80":"markdown"},"source":{"c4a283da":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","37f36491":"import mne\nimport pandas as pd\nimport h5py\nfrom scipy.io import loadmat\nimport scipy.signal as sg\nfrom scipy.integrate import simps\nimport numpy as np\nfrom sklearn import svm\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport csv","cacf3890":"def get_epochs(file_path, annot_filepath):\n    data = loadmat(file_path)['record']\n    annot = loadmat(annot_filepath)['anno_apnea']\n    fs = data.shape[1]\/22470 # will be different for each patient\n    epoch_len = int(fs*60) # 1 min.\n    epochs = np.array([data[:,x-epoch_len:x] for x in range(epoch_len,data.shape[1]+1,epoch_len)]);print(epochs.shape)\n    epochs = np.reshape(epochs, (epoch_len,data.shape[0],data.shape[1]\/\/epoch_len))\n    targets = annot[:, :epochs.shape[-1]].flatten()\n    normal_epochs = epochs[:,:,targets==0]\n    apnea_epochs = epochs[:,:,targets==1]\n    print(normal_epochs.shape, apnea_epochs.shape)\n    return normal_epochs, apnea_epochs, targets\n\n","a8de325d":"delta = 1,4\ntheta = 4,8\nalpha = 8,13\nbeta = 13,30\ngamma = 30,100","01370542":"normal_epochs, apnea_epochs, labels = get_epochs(\"..\/input\/sleep-edf-and-apnea\/10318976\/Data\/UCDPaper\/ucddb002\/ucddb002.mat\", \"..\/input\/sleep-edf-and-apnea\/10318976\/Data\/UCDPaper\/ucddb002\/ucddb002_anno.mat\")","9545fb97":"test_file = loadmat(\"..\/input\/sleep-edf-and-apnea\/10318976\/Data\/UCDPaper\/ucddb002\/ucddb002.mat\")","fa87d516":"data = test_file['record'];print(data.shape)","e76822c8":"fs = data.shape[1]\/22470\nfs","651c9517":"info = mne.create_info(ch_names=['unknown'] * 14,\n                       ch_types=['misc'] * 14,\n                       sfreq=fs)\nraw = mne.io.RawArray(data, info)\nraw.plot(show_scrollbars=False, show_scalebars=False)","66b09f2d":"epoch_len = 128*60 # 1 min.\nepochs = np.array([data[:,x-epoch_len:x] for x in range(epoch_len,data.shape[1]+1,epoch_len)]);print(epochs.shape)\nepochs = np.reshape(epochs, (epoch_len,data.shape[0],data.shape[1]\/\/epoch_len))\ndata_epochs = mne.EpochsArray(epochs, info)\n# data_epochs.plot(picks='misc')","2b064561":"\"EEG (C3-A2), EEG (C4-A1), left EOG, right EOG, submental EMG, \\\nECG (modified lead V2), oro-nasal airflow (thermistor), ribcage movements, abdomen movements (uncalibrated strain gauges),\\\noxygen saturation (finger pulse oximeter), snoring (tracheal microphone) and body position.\"\nfig,ax=plt.subplots(14, figsize=(18,42))\nfor i in range(14):\n    ax[i].plot(data[i,int(1.5e6):])","efe3b77a":"psd=loadmat(\"..\/input\/sleep-edf-and-apnea\/10318976\/Data\/UCDPaper\/ucddb002\/ucddb002_RQA_PSD.mat\");print(psd.keys())\nannot=loadmat(\"..\/input\/sleep-edf-and-apnea\/10318976\/Data\/UCDPaper\/ucddb002\/ucddb002_anno.mat\");print(annot.keys())","6f611374":"plt.plot(psd['RMSValue'])\nfig=plt.figure()\nplt.plot(psd['RQA_LVM'])\nfig=plt.figure()\nplt.plot(psd['ZeroRQA_LVM'])","024a6c52":"fig=plt.figure();plt.plot(annot['anno'].T)\nfig=plt.figure();plt.plot(annot['anno_hypo'].T)\nfig=plt.figure();plt.plot(annot['anno_apnea'].T)\nfig=plt.figure();plt.plot(annot['anno_apnea_non_obstructive'].T)","7627c537":"len(annot['anno_apnea'].T)","8cb44f06":"targets = annot['anno_apnea'][:, :epochs.shape[-1]].flatten()\nepochs.shape, targets.shape","f0f2f02b":"normal_epochs = epochs[:,:,targets==0]\napnea_epochs = epochs[:,:,targets==1]\nnormal_epochs.shape, apnea_epochs.shape","b4844673":"df=pd.read_csv(\"..\/input\/sleep-edf-and-apnea\/10318976\/Data\/UCDPaper\/ucddb002\/ucddb002_stage.txt\")\nfig=plt.figure(figsize=(17,5))\nplt.plot(df)","d733b4c1":"alphaband = betaband = thetaband = deltaband = gammaband = np.zeros(6)\n\nfor i in range(6):\n    alphaband[i] = bandpower(apnea_epochs[:,0,i][600:], 128, alpha);\n    betaband[i] = bandpower(apnea_epochs[:,0,i][600:], 128, beta);\n    thetaband[i] = bandpower(apnea_epochs[:,0,i][600:], 128, theta);\n    deltaband[i] = bandpower(apnea_epochs[:,0,i][600:], 128, delta);\n    gammaband[i] = bandpower(apnea_epochs[:,0,i][600:], 128, gamma);\n    \nfig = plt.figure(); plt.scatter(range(len(alphaband)),alphaband);\nfig = plt.figure(); plt.scatter(range(len(thetaband)),thetaband);","3e2cb933":"plt.plot(normal_epochs[:,0,0][600:])","24bdcb97":"spects_apnea = [sg.spectrogram(apnea_epochs[:,0,i][600:], fs=fs, nperseg=int(10*fs)) for i in range(len(apnea_epochs[0,0,:]))]\nspects_normal = [sg.spectrogram(normal_epochs[:,0,i][600:], fs=fs, nperseg=int(10*fs)) for i in range(len(normal_epochs[0,0,:]))]","8ac3e849":"spects = spects_apnea + spects_normal # 6 + 368 epochs\nlen(spects)\nX = np.asarray(spects)","26146289":"labels = len(apnea_epochs[0,0,:])*[1]+len(normal_epochs[0,0,:])*[0]\nlen(labels)\ny = np.asarray(labels, dtype=float)","fa2bbdb7":"## Define frequency bands:\n(per [Ameera et al., 2019](https:\/\/iopscience.iop.org\/article\/10.1088\/1757-899X\/557\/1\/012030))","b77ced80":"### Get the normal and apnea epochs:"}}