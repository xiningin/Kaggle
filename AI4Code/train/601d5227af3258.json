{"cell_type":{"9fe3388f":"code","975a1769":"code","d14913ff":"code","40400469":"code","4eabb5da":"code","a542c978":"code","84b429f1":"code","6d7a5914":"code","4f868e74":"code","1e2f1ab5":"code","6e17c7c4":"code","ffde92fb":"code","38f883d1":"code","5a54824e":"code","ad870017":"code","75203abf":"code","6b797d86":"code","2dec12f6":"markdown","b294ec53":"markdown","21dbcc6d":"markdown","64f2206d":"markdown"},"source":{"9fe3388f":"import os\nimport sys\nimport gc\n\nfrom pathlib import Path, PosixPath\n\nimport numpy as np\nimport pandas as pd\n\nfrom PIL import Image, ImageChops\n\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\n\nROOT = Path(\".\").resolve().parents[0]\nINPUT_ROOT = ROOT \/ \"input\"\nRAW_DATA = INPUT_ROOT \/ \"alaska2-image-steganalysis\"\n\nTRAIN_COVER = RAW_DATA \/ \"Cover\"\nTRAIN_JMiPOD = RAW_DATA \/ \"JMiPOD\"\nTRAIN_JUNIWARD = RAW_DATA \/ \"JUNIWARD\"\nTRAIN_UERD = RAW_DATA \/ \"UERD\"\nTEST = RAW_DATA \/ \"Test\"","975a1769":"def read_image(image_id: str, image_dir: PosixPath):\n    with open(image_dir \/ image_id, \"rb\") as fr:\n        img = Image.open(fr)\n        img.load()\n    return img\n\ndef compare_image(image_id: str):\n    cover = read_image(image_id, TRAIN_COVER)\n    steganography = [\n        [\"JMiPOD\", read_image(image_id, TRAIN_JMiPOD)],\n        [\"JUNIWARD\", read_image(image_id, TRAIN_JUNIWARD)],\n        [\"UERD\", read_image(image_id, TRAIN_UERD)],\n    ]\n    fig = plt.figure(figsize=(24, 27))\n    for i, (name, ste_img) in enumerate(steganography):\n        ax_cov = fig.add_subplot(3, 3, 3 * i + 1)\n        ax_cov.set_title(\"Cover\", fontsize=22)\n        ax_ste = fig.add_subplot(3, 3, 3 * i + 2)\n        ax_ste.set_title(name, fontsize=22)\n        ax_sub = fig.add_subplot(3, 3, 3 * i + 3)\n        ax_sub.set_title(\"SUB(Cover, {})\".format(name), fontsize=22)\n        \n        ax_cov.imshow(cover)\n        ax_ste.imshow(ste_img)\n        sub_arr = np.asarray(cover) - np.asarray(ste_img)\n        ax_sub.imshow(Image.fromarray(sub_arr.astype(\"uint8\")))\n        \n\ndef compare_crop_image(image_id: str, crop_area):\n    cover = read_image(image_id, TRAIN_COVER)\n    cover = cover.crop(crop_area)\n    steganography = [\n        [\"JMiPOD\", read_image(image_id, TRAIN_JMiPOD)],\n        [\"JUNIWARD\", read_image(image_id, TRAIN_JUNIWARD)],\n        [\"UERD\", read_image(image_id, TRAIN_UERD)],\n    ]\n    fig = plt.figure(figsize=(24, 27))\n    for i, (name, ste_img) in enumerate(steganography):\n        ste_img = ste_img.crop(crop_area)\n        ax_cov = fig.add_subplot(3, 3, 3 * i + 1)\n        ax_cov.set_title(\"Cover\", fontsize=22)\n        ax_ste = fig.add_subplot(3, 3, 3 * i + 2)\n        ax_ste.set_title(name, fontsize=22)\n        ax_sub = fig.add_subplot(3, 3, 3 * i + 3)\n        ax_sub.set_title(\"SUB(Cover, {})\".format(name), fontsize=22)\n        \n        ax_cov.imshow(cover)\n        ax_ste.imshow(ste_img)\n        sub_arr = np.asarray(cover) - np.asarray(ste_img)\n        ax_sub.imshow(Image.fromarray(sub_arr.astype(\"uint8\")))","d14913ff":"train_image_ids = sorted(os.listdir(TRAIN_COVER))\ntrain_image_ids[:10]","40400469":"compare_image(train_image_ids[0])","4eabb5da":"compare_image(train_image_ids[1])","a542c978":"compare_image(train_image_ids[2])","84b429f1":"compare_image(train_image_ids[3])","6d7a5914":"compare_image(train_image_ids[4])","4f868e74":"compare_image(train_image_ids[5])","1e2f1ab5":"compare_image(train_image_ids[6])","6e17c7c4":"compare_crop_image(train_image_ids[0], (0, 0, 40, 40))","ffde92fb":"compare_crop_image(train_image_ids[1], (0, 0, 40, 40))","38f883d1":"compare_crop_image(train_image_ids[2], (0, 0, 40, 40))","5a54824e":"compare_crop_image(train_image_ids[3], (0, 0, 40, 40))","ad870017":"compare_crop_image(train_image_ids[4], (0, 0, 40, 40))","75203abf":"compare_crop_image(train_image_ids[5], (0, 0, 40, 40))","6b797d86":"compare_crop_image(train_image_ids[6], (0, 0, 40, 40))","2dec12f6":"### crop","b294ec53":"I'm not sure whether or not this comparison method is correct. However, these algorthms' results look quite diffrence for me.\n\nI suspect that some approach such as preparing a classification model for each algorithm is required.","21dbcc6d":"### visualize whole picture","64f2206d":"## ALASKA2 EDA: compare ateganography algorithm by simple subtraction.\n\nI don't know anything about steganography, then I tried to make a simple visualization."}}