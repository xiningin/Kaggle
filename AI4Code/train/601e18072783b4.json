{"cell_type":{"c64cbe39":"code","ffc24590":"code","855ed876":"code","4deacba9":"code","dcd6b7dc":"code","a70a7e20":"code","6391c240":"code","bab69f95":"code","735f33c9":"code","145d6aaa":"code","6f80424b":"code","2d8258ff":"code","6e469987":"code","fdbe8334":"code","7127d542":"code","f4ac0ae8":"code","40bd93b4":"code","59483980":"code","70d6be04":"code","9fd93746":"code","a8a890b4":"code","b1ecf963":"code","c4a90139":"code","eb28317b":"code","84f11b2e":"code","5df765f7":"code","41decf8e":"code","88db8fc5":"code","d3cd7440":"code","685f4c31":"code","c9623c40":"code","dc63cb7d":"code","3125b0a6":"code","f5f443f2":"code","bf68e278":"code","456eaaa7":"code","c785d93a":"code","451f09a4":"code","dc364ac1":"code","eafb720a":"code","48ca0c08":"code","9ec069a5":"code","1e339675":"code","62c802af":"code","4a12e24c":"code","de109f99":"code","f75ca5db":"markdown","e73a9d97":"markdown","1890644d":"markdown","72aff91b":"markdown","f5f78b42":"markdown","e04b3a33":"markdown","38675c8f":"markdown","95fb88f5":"markdown","810fe787":"markdown","f2109714":"markdown","d79099c9":"markdown","a639322d":"markdown","fa0a4e12":"markdown","084a7f9f":"markdown","454db40a":"markdown"},"source":{"c64cbe39":"import urllib.request\nimport gzip\nimport shutil\nimport os\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","ffc24590":"# To get title & region of the movie\nurllib.request.urlretrieve(\"https:\/\/datasets.imdbws.com\/title.akas.tsv.gz\", \"title.akas.tsv.gz\")\n\n# To get the year of release\nurllib.request.urlretrieve(\"https:\/\/datasets.imdbws.com\/title.basics.tsv.gz\", \"title.basics.tsv.gz\")\n\n# To get the rating of movie\nurllib.request.urlretrieve(\"https:\/\/datasets.imdbws.com\/title.ratings.tsv.gz\", \"title.ratings.tsv.gz\")","855ed876":"# Unzip the gz files\n\nwith gzip.open(\"title.akas.tsv.gz\", \"r\") as f_in, open(\"title.akas.tsv\", \"wb\") as f_out:\n    shutil.copyfileobj(f_in, f_out)\n\nwith gzip.open(\"title.basics.tsv.gz\", \"r\") as f_in, open(\"title.basics.tsv\", \"wb\") as f_out:\n    shutil.copyfileobj(f_in, f_out)\n\nwith gzip.open(\"title.ratings.tsv.gz\", \"r\") as f_in, open(\"title.ratings.tsv\", \"wb\") as f_out:\n    shutil.copyfileobj(f_in, f_out)\n\nos.remove(\"title.akas.tsv.gz\")\nos.remove(\"title.basics.tsv.gz\")\nos.remove(\"title.ratings.tsv.gz\")","4deacba9":"# Read title file\ndf_imdb_title = pd.read_csv(\"title.akas.tsv\", sep='\\t', low_memory=False)","dcd6b7dc":"# Read basics file\ndf_imdb_basic = pd.read_csv(\"title.basics.tsv\", sep='\\t', low_memory=False)","a70a7e20":"# Read rating file\ndf_imdb_rating = pd.read_csv(\"title.ratings.tsv\", sep='\\t', low_memory=False)","6391c240":"# For current analysis we would limit the region to US and India\ndf_imdb_title = df_imdb_title.loc[np.logical_or(df_imdb_title.region == 'IN', df_imdb_title.region == 'US')]\n\n# Remove na rows for title\ndf_imdb_title.title.dropna(inplace=True)\ndf_imdb_title.reset_index(inplace=True, drop=True)","bab69f95":"# Keep only necessary columns in title df\ndf_imdb_title.drop(df_imdb_title.columns.difference(['titleId', 'title']), axis=1, inplace=True)\ndf_imdb_title","735f33c9":"# Keep only necessary columns in ranking df\ndf_imdb_rating = df_imdb_rating.drop('numVotes', 1)\ndf_imdb_rating","145d6aaa":"df_imdb_rating.info()","6f80424b":"# Merge title and rating dataframes on titleId\nmerged = pd.merge(df_imdb_title, df_imdb_rating, how='inner', left_on=['titleId'], right_on=['tconst'])\nmerged.drop('tconst', 1, inplace=True)\nmerged","2d8258ff":"# Merge it now with the basics data containing the release year of the movie\nmerged = pd.merge(merged, df_imdb_basic, how='inner', left_on=['titleId'], right_on=['tconst'])","6e469987":"# Keep only the necessary columns\nmerged.drop(merged.columns.difference(['title', 'startYear', 'averageRating']), axis=1, inplace=True)\nmerged = merged.rename({'startYear': 'release_year', 'averageRating' : 'IMDbrating'}, axis=1)\nmerged","fdbe8334":"# Create the dataframe from netflix data\ndf = pd.read_csv('..\/input\/netflix-shows\/netflix_titles.csv')\ndf","7127d542":"df.info()","f4ac0ae8":"df.dropna(subset=['country'], inplace=True)\ndf.reset_index(inplace=True, drop=True)","40bd93b4":"# Restrict to US and India data\ndf = df.loc[np.logical_or(df.country.str.contains('United States'), df.country.str.contains('India'))]\ndf.reset_index(inplace=True, drop=True)","59483980":"df['release_year'] = df['release_year'].apply(str)","70d6be04":"# No duplicate titles in netflix data\ndf[df.duplicated(subset=['title'])]['title'].values","9fd93746":"# Merge IMDb and netflix data\ndf_merged = pd.merge(merged, df, how='inner', on=['title', 'release_year'])","a8a890b4":"df_merged","b1ecf963":"# Duplicate titles in the merged dataset\ndup = df_merged[df_merged.duplicated(subset=['title'])]['title'].values\ndf_merged[df_merged['title'].isin(dup)]","c4a90139":"# IMDb dataset had same titles for different movies\n# during the merge it created duplicate titles in merged data set as well\n# for simplification let us keep the 'first' title of all duplicate titles\ndf_merged = df_merged.drop_duplicates(subset=['title'])\ndf_merged.reset_index(inplace=True, drop=True)","eb28317b":"df_merged.info()","84f11b2e":"df_merged.country.value_counts()","5df765f7":"# For analysis purpose, we would treat the country of origin as US if there is US in the list of countries\n# for e.g., country = \"Unites States, Canada\"\n# Same for India as well\nmask = df_merged.country.str.contains('India')\ndf_merged.loc[mask,'country'] = \"India\"\nmask = df_merged.country.str.contains('United States')\ndf_merged.loc[mask,'country'] = \"United States\"","41decf8e":"# Add separate month and year added columns\ndf_merged['month_added'] = pd.DatetimeIndex(df_merged['date_added']).strftime('%b')\ndf_merged['year_added'] = pd.DatetimeIndex(df_merged['date_added']).year\ndf_merged['year_added'] = df_merged['year_added'].astype('Int64').astype('str')","88db8fc5":"df_merged","d3cd7440":"df_merged_ts = df_merged.set_index(pd.DatetimeIndex(pd.to_datetime(df_merged['date_added']).values))","685f4c31":"df_merged_ts","c9623c40":"# Overall mean rating by region\ndf_merged_ts.groupby('country').IMDbrating.mean()","dc63cb7d":"# Rating over the years\nmean_rating_by_month_year = df_merged_ts.IMDbrating.groupby(pd.Grouper(freq='M')).mean()\nmean_rating_by_month_year","3125b0a6":"# Forward fill NaN values\nmean_rating_by_month_year.fillna(method='ffill', inplace=True)\nmean_rating_by_month_year","f5f443f2":"df_merged_ts[['dur','time']] = df_merged_ts.duration.str.split(expand=True)\ndf_merged_ts.drop(['duration', 'time'], axis=1, inplace=True)\ndf_merged_ts.rename({'dur' : 'duration'}, axis=1, inplace=True)\ndf_merged_ts","bf68e278":"df_merged_ts.duration = pd.to_numeric(df_merged_ts.duration)\ndf_merged_ts.info()","456eaaa7":"fig, ax = plt.subplots(figsize=(18,8))\nmean_rating_by_month_year.plot(color='red', linestyle='dashed', marker='o',  \n             markerfacecolor='blue', markersize=5)\nplt.ylabel(\"IMDb Rating\")\nplt.xlabel(\"Year\")\nplt.title(\"Average IMDb rating for content released on Netflix each month (Region: US & India) over the years\")\nplt.grid()","c785d93a":"df_merged_ts.index.name = \"Date\"","451f09a4":"# Creating dataframes for India and USA\ndf_merged_ts_India = df_merged_ts[df_merged_ts.country == \"India\"]\ndf_merged_ts_US = df_merged_ts[df_merged_ts.country == \"United States\"]\nmean_rating_India = df_merged_ts_India.IMDbrating.groupby(pd.Grouper(freq='M')).mean()\nmean_rating_US = df_merged_ts_US.IMDbrating.groupby(pd.Grouper(freq='M')).mean()\nmean_rating_India.fillna(method='ffill', inplace=True)\nmean_rating_US.fillna(method='ffill', inplace=True)","dc364ac1":"fig, ax = plt.subplots(figsize=(18,8))\nax.plot(mean_rating_India, '-g', label=\"India\")\nax.plot(mean_rating_US, '--b', label=\"US\")\nplt.ylabel(\"IMDb Rating\")\nplt.xlabel(\"Year\")\nplt.title(\"Average IMDb rating for content released on Netflix each month by region\")\nplt.legend()\nplt.grid()","eafb720a":"fig, ax = plt.subplots(figsize=(12,8))\nsns.kdeplot(df_merged_ts_India[df_merged_ts_India.type == \"Movie\"]['duration'], fill=True, \n            color='orange', alpha=.5, linewidth=0, label = 'India')\nsns.kdeplot(df_merged_ts_US[df_merged_ts_US.type == \"Movie\"]['duration'], fill=True, \n            color='blue', alpha=.5, linewidth=0, label='US')\nplt.title(\"Distribution of movie duration (in min)\")\nplt.legend()\nplt.show()","48ca0c08":"# Top directors overall by ratings\ndf_top_directors = df_merged_ts[df_merged_ts.type == \"Movie\"].groupby(['director'])['IMDbrating'].mean()\ndf_top_directors = df_top_directors.sort_values(ascending=False)\n\nfig = plt.figure(figsize = (10, 5))\nplt.barh(df_top_directors[9::-1].index, df_top_directors[9::-1].values)\nplt.xlabel(\"IMDb Rating\")\nplt.ylabel(\"Director\")\nplt.title(\"Top 10 directors on netflix with their mean IMDb ratings (Region: India & US)\")\nplt.show()","9ec069a5":"import seaborn as sns\ncol = sns.color_palette(\"Blues\", 10).as_hex()\ncol","1e339675":"# Top directors in India\ndf_top_directors_india_all = df_merged_ts_India[df_merged_ts_India.type == \"Movie\"].groupby(['director'])['IMDbrating'].mean()\ndf_top_directors_india_all = df_top_directors_india_all.sort_values(ascending=False)\ndf_top_directors_india_min5 = df_merged_ts_India[df_merged_ts_India.type == \"Movie\"].groupby(['director'])['IMDbrating'].agg({'count', 'mean'})\ndf_top_directors_india_min5 = df_top_directors_india_min5[df_top_directors_india_min5['count'] >= 5]['mean'].sort_values(ascending=False)\n\nfig, ax = plt.subplots(2, figsize=(10,10))\nplt.subplots_adjust(hspace = 0.4)\n\nax[0].hlines(y=df_top_directors_india_all[9::-1].index, xmin=0, xmax=df_top_directors_india_all[9::-1].values, \n             color=col,  linewidth=7)\nax[0].plot(df_top_directors_india_all[9::-1].values, df_top_directors_india_all[9::-1].index, \n           \"o\", markersize=7, color='red', alpha=0.6)\nax[0].set_xlabel(\"IMDb Rating\", fontsize=12)\nax[0].set_ylabel(\"Director\", fontsize=12)\nax[0].set_title(\"Top 10 movie directors on netflix with their mean IMDb ratings (Region: India)\", fontsize=12)\nax[0].set_xlim([0,10])\n\nax[1].hlines(y=df_top_directors_india_min5[9::-1].index, xmin=0, xmax=df_top_directors_india_min5[9::-1].values, \n             color=col,  linewidth=7)\nax[1].plot(df_top_directors_india_min5[9::-1].values, df_top_directors_india_min5[9::-1].index, \n           \"o\", markersize=7, color='red', alpha=0.6)\nax[1].set_xlabel(\"IMDb Rating\", fontsize=12)\nax[1].set_ylabel(\"Director\", fontsize=12)\nax[1].set_title(\"Top 10 movie directors on netflix (min. 5 movies) with their mean IMDb ratings (Region: India)\", fontsize=12)\nax[1].set_xlim([0,10])\n\nplt.show()","62c802af":"# Top movie directors in US\ndf_top_directors_US_all = df_merged_ts_US[df_merged_ts_US.type == \"Movie\"].groupby(['director'])['IMDbrating'].mean()\ndf_top_directors_US_all = df_top_directors_US_all.sort_values(ascending=False)\ndf_top_directors_US_min5 = df_merged_ts_US[df_merged_ts_US.type == \"Movie\"].groupby(['director'])['IMDbrating'].agg({'count', 'mean'})\ndf_top_directors_US_min5 = df_top_directors_US_min5[df_top_directors_US_min5['count'] >= 5]['mean'].sort_values(ascending=False)\n\nfig, ax = plt.subplots(2, figsize=(10,10))\nplt.subplots_adjust(hspace = 0.4)\n\nax[0].hlines(y=df_top_directors_US_all[9::-1].index, xmin=0, xmax=df_top_directors_US_all[9::-1].values, \n             color=col,  linewidth=7)\nax[0].plot(df_top_directors_US_all[9::-1].values, df_top_directors_US_all[9::-1].index, \n           \"o\", markersize=7, color='red', alpha=0.6)\nax[0].set_xlabel(\"IMDb Rating\", fontsize=12)\nax[0].set_ylabel(\"Director\", fontsize=12)\nax[0].set_title(\"Top 10 movie directors on netflix with their mean IMDb ratings (Region: US)\", fontsize=12)\nax[0].set_xlim([0,10])\n\nax[1].hlines(y=df_top_directors_US_min5[9::-1].index, xmin=0, xmax=df_top_directors_US_min5[9::-1].values, \n             color=col,  linewidth=7)\nax[1].plot(df_top_directors_US_min5[9::-1].values, df_top_directors_US_min5[9::-1].index, \n           \"o\", markersize=7, color='red', alpha=0.6)\nax[1].set_xlabel(\"IMDb Rating\", fontsize=12)\nax[1].set_ylabel(\"Director\", fontsize=12)\nax[1].set_title(\"Top 10 movie directors on netflix (min. 5 movies) with their mean IMDb ratings (Region: US)\", fontsize=12)\nax[1].set_xlim([0,10])\n\nplt.show()","4a12e24c":"# Top movies\ntop_movies_india = df_merged_ts_India.loc[df_merged_ts_India.type == 'Movie', ['title', 'IMDbrating']]\ntop_movies_india = top_movies_india.sort_values(ascending=False, by='IMDbrating')\ntop_movies_us = df_merged_ts_US.loc[df_merged_ts_US.type == 'Movie', ['title', 'IMDbrating']]\ntop_movies_us = top_movies_us.sort_values(ascending=False, by='IMDbrating')\n\n\nfig, ax = plt.subplots(2, figsize=(10,10))\nplt.subplots_adjust(hspace = 0.4)\n\nax[0].hlines(y=top_movies_india.title[9::-1], xmin=0, xmax=top_movies_india.IMDbrating[9::-1], \n             color=col,  linewidth=7)\nax[0].plot(top_movies_india.IMDbrating[9::-1], top_movies_india.title[9::-1],\n           \"o\", markersize=7, color='red', alpha=0.6)\nax[0].set_xlabel(\"IMDb Rating\", fontsize=12)\nax[0].set_ylabel(\"Movie\", fontsize=12)\nax[0].set_title(\"Top 10 movies (Region: India)\", fontsize=12)\nax[0].set_xlim([0,10])\n\nax[1].hlines(y=top_movies_us.title[9::-1], xmin=0, xmax=top_movies_us.IMDbrating[9::-1], \n             color=col,  linewidth=7)\nax[1].plot(top_movies_us.IMDbrating[9::-1], top_movies_us.title[9::-1],\n           \"o\", markersize=7, color='red', alpha=0.6)\nax[1].set_xlabel(\"IMDb Rating\", fontsize=12)\nax[1].set_ylabel(\"Movie\", fontsize=12)\nax[1].set_title(\"Top 10 movies (Region: US)\", fontsize=12)\nax[1].set_xlim([0,10])\n\nplt.show()","de109f99":"# Top TV Shows\ntop_tv_india = df_merged_ts_India.loc[df_merged_ts_India.type == 'TV Show', ['title', 'IMDbrating']]\ntop_tv_india = top_tv_india.sort_values(ascending=False, by='IMDbrating')\ntop_tv_us = df_merged_ts_US.loc[df_merged_ts_US.type == 'TV Show', ['title', 'IMDbrating']]\ntop_tv_us = top_tv_us.sort_values(ascending=False, by='IMDbrating')\n\n\nfig, ax = plt.subplots(2, figsize=(10,10))\nplt.subplots_adjust(hspace = 0.4)\n\nax[0].hlines(y=top_tv_india.title[9::-1], xmin=0, xmax=top_tv_india.IMDbrating[9::-1], \n             color=col,  linewidth=7)\nax[0].plot(top_tv_india.IMDbrating[9::-1], top_tv_india.title[9::-1],\n           \"o\", markersize=7, color='red', alpha=0.6)\nax[0].set_xlabel(\"IMDb Rating\", fontsize=12)\nax[0].set_ylabel(\"TV Show\", fontsize=12)\nax[0].set_title(\"Top 10 TV (Region: India)\", fontsize=12)\nax[0].set_xlim([0,10])\n\nax[1].hlines(y=top_tv_us.title[9::-1], xmin=0, xmax=top_tv_us.IMDbrating[9::-1], \n             color=col,  linewidth=7)\nax[1].plot(top_tv_us.IMDbrating[9::-1], top_tv_us.title[9::-1],\n           \"o\", markersize=7, color='red', alpha=0.6)\nax[1].set_xlabel(\"IMDb Rating\", fontsize=12)\nax[1].set_ylabel(\"TV SHow\", fontsize=12)\nax[1].set_title(\"Top 10 TV (Region: US)\", fontsize=12)\nax[1].set_xlim([0,10])\n\nplt.show()","f75ca5db":"## Top movie directors","e73a9d97":"## Distribution of movie duration","1890644d":"- An interesting observation above is that none of the top directors are present in the directors list which have atleast 5 movies on Netflix!","72aff91b":"## Top Movie Directors India","f5f78b42":"In this notebook, I have combined rating data from IMDb and matched it with films\/TV shows in the Netflix data. My aim is to do data visualization of Netflix content with IMDb rating. I have restricted data analysis to India & US.\n ","e04b3a33":"## Download the dataset files from imdb","38675c8f":"# Netflix dataset","95fb88f5":"# Merge IMDb and Netflix dataset","810fe787":"## Preprocessing on IMDb dataset","f2109714":"## Time Series - Average IMDb rating on Netflix region wise","d79099c9":"- As expected, Indian movies have a mean duration higher than US movies\n- Indian movies seem to have a mean duration around 140 min\n- While US movies have a mean duration of around 90 min","a639322d":"## Preprocessing on Netflix dataset","fa0a4e12":"# Analysis and visualization","084a7f9f":"# IMDb dataset","454db40a":"## Time series - Average IMDb rating on Netflix overall"}}