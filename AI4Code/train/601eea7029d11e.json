{"cell_type":{"ea91a779":"code","7b7cec1e":"code","5df3b00f":"code","774f0131":"code","1e5af822":"code","c1fab815":"code","93b3ec7d":"code","5fdcb125":"code","00798678":"code","5f1d3737":"code","3a6e43a8":"code","35c29753":"code","e27a15da":"code","dc5ac1f0":"code","73edf7ba":"code","041638fc":"code","7358c62b":"code","9b15f115":"code","972ae71e":"code","0a68a2a4":"code","52aefb0f":"code","144ca942":"markdown","59c7fdbb":"markdown","1d6ee932":"markdown","fec65a32":"markdown","7d7f31fc":"markdown","175c829f":"markdown","c7832207":"markdown"},"source":{"ea91a779":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7b7cec1e":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport matplotlib.image as mpimg\nimport folium\nimport math\nimport plotly.graph_objects as go\nimport plotly.express as px\n\nfrom folium import Choropleth, Circle, Marker\nfrom folium.plugins import HeatMap, MarkerCluster\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom geopy.geocoders import Nominatim\nfrom string import ascii_letters\nfrom colorama import Fore, Back, Style\ny_ = Fore.YELLOW\nr_ = Fore.RED\ng_ = Fore.GREEN\nb_ = Fore.BLUE\nm_ = Fore.MAGENTA","5df3b00f":"data = pd.read_csv('\/kaggle\/input\/craigslist-carstrucks-data\/vehicles.csv')\ndata.head(5)","774f0131":"df = data.drop(columns=['url', 'id','region_url','county','vin'])\ndf = df.dropna(subset=['year','condition','model','manufacturer'])","1e5af822":"df= df.replace(to_replace =\"f150\", \n                 value =\"f-150\") ","c1fab815":"df.head()","93b3ec7d":"shape = df.shape\nshape\n","5fdcb125":"for col in df:\n    print(f\"{y_}{col}\\n\")\n    print(f\"{b_}{df[col].unique()}\\n\")\n    \n    \n    ","00798678":"df = df[df.year.notnull()]\ndf[\"age\"] = df.year.apply(lambda x: int(2020-x))\ndf = df[(df.age >= 0) & (df.age <= 30)]","5f1d3737":"df.head()","3a6e43a8":"df_ford = df[df['manufacturer'] == 'ford'] \ndf_c=df[df['manufacturer'] == 'chevrolet']\ndf_toyata = df[df['manufacturer'] == 'toyata'] \ndf_honda=df[df['manufacturer'] == 'honda']\ndf_nissan = df[df['manufacturer'] == 'nissan'] \ndf_jeep=df[df['manufacturer'] == 'jeep']\ndf_dodge = df[df['manufacturer'] == 'dodge'] \ndf_gmc=df[df['manufacturer'] == 'gmc']\ndf_hyundai = df[df['manufacturer'] == 'hyundai'] \ndf_ram=df[df['manufacturer'] == 'ram']\n","35c29753":"#df.sort_values(\"price\", ascending = False, inplace = True)","e27a15da":"#count = df['paint_color'].value_counts() \n#print(count)","dc5ac1f0":"colors = [\"#C0FDFF\", \"#C8E7FF\",\"#D0D1FF\",\"#D8BBFF\",\"#DEAAFF\",\"#E2AFFF\",\"#E5B3FE\",\"#ECBCFD\",\"#F3C4FB\",\"#FFCBF2\"]\nsns.set_palette(sns.color_palette(colors))","73edf7ba":"fig, ax =plt.subplots(1,2,figsize=(22, 10))\nsns.set(rc={\"axes.facecolor\":\"#fcfcfc\", \"axes.grid\":False,'xtick.labelsize':20,'ytick.labelsize':20})\nsns.countplot(y ='model',data = df,order=df.model.value_counts().iloc[:10].index, ax = ax[1],palette = colors) \nsns.countplot(y ='manufacturer',data = df,order=df.manufacturer.value_counts().iloc[:10].index, ax= ax[0],palette = \"Pastel2\")\nfig.show()","041638fc":"fig, ax =plt.subplots(1,3,figsize=(25, 10))\nsns.set(rc={\"axes.facecolor\":\"#fcfcfc\", \"axes.grid\":False,'xtick.labelsize':15,'ytick.labelsize':15})\nsns.countplot(x ='type',data = df,order=df.type.value_counts().iloc[:5].index, ax = ax[0],palette=\"vlag\")\nsns.countplot(x ='drive',data = df,order=df.drive.value_counts().iloc[:5].index, ax = ax[1],palette=\"Pastel1\")\nsns.countplot(x ='transmission',data = df,order=df.transmission.value_counts().iloc[:5].index, ax = ax[2],palette=\"YlGn\")\nfig.show()","7358c62b":"model = df_ford['model'].value_counts()\nmodel_f = model.iloc[0:10]\ndf1=model_f.to_frame()\ndf1[\"Manufacturer\"] = \"ford\"\n\nmodel = df_c['model'].value_counts()\nmodel_c = model.iloc[0:10]\ndf2=model_c.to_frame()\ndf2[\"Manufacturer\"] = \"chevrolet\"\n\nmodel = df_toyata['model'].value_counts()\nmodel_toyata = model.iloc[0:10]\ndf3=model_toyata.to_frame()\ndf3[\"Manufacturer\"] = \"toyata\"\n\nmodel = df_honda['model'].value_counts()\nmodel_honda = model.iloc[0:10]\ndf4=model_honda.to_frame()\ndf4[\"Manufacturer\"] = \"honda\"\n\nmodel = df_nissan['model'].value_counts()\nmodel_nissan = model.iloc[0:10]\ndf5=model_nissan.to_frame()\ndf5[\"Manufacturer\"] = \"nissan\"\n\nmodel = df_jeep['model'].value_counts()\nmodel_jeep = model.iloc[0:10]\ndf6=model_jeep.to_frame()\ndf6[\"Manufacturer\"] = \"jeep\"\n\nmodel = df_dodge['model'].value_counts()\nmodel_dodge = model.iloc[0:10]\ndf7=model_dodge.to_frame()\ndf7[\"Manufacturer\"] = \"dodge\"\n\nmodel = df_gmc['model'].value_counts()\nmodel_gmc = model.iloc[0:10]\ndf8=model_gmc.to_frame()\ndf8[\"Manufacturer\"] = \"gmc\"\n\nmodel = df_hyundai['model'].value_counts()\nmodel_hyundai = model.iloc[0:10]\ndf9=model_hyundai.to_frame()\ndf9[\"Manufacturer\"] = \"hyundai\"\n\nmodel = df_ram['model'].value_counts()\nmodel_ram = model.iloc[0:10]\ndf0=model_ram.to_frame()\ndf0[\"Manufacturer\"] = \"ram\"\n\nframes = [df1,df2,df3,df4,df5,df6,df7,df8,df9,df0]\nresult = pd.concat(frames)","9b15f115":"result=result.reset_index()\nresult","972ae71e":"fig =px.sunburst(\n    result,path=['Manufacturer','index'],values='model', color='Manufacturer'\n                  )\nfig.update_layout(margin=dict(t=1, b=1, r=1, l=1))\nfig.show()\n","0a68a2a4":"sns.set(rc={\"axes.facecolor\":\"#fcfcfc\", \"axes.grid\":False,'xtick.labelsize':20,'ytick.labelsize':20})\nsns.relplot(x=\"age\",y=\"odometer\",data=df,row=\"fuel\",hue=\"transmission\",kind='line',height= 7,aspect=3)\n\nplt.show()\n","52aefb0f":"sns.distplot(df.age, hist = False)\nplt.title(\"Distribution of the age of the vehicles\")\nplt.show()","144ca942":"**Loading dataset**","59c7fdbb":"*Will add more eda soon*","1d6ee932":"**EDA**","fec65a32":"\n<div>\n<img src=\"https:\/\/media0.giphy.com\/avatars\/cirneprime\/4Bysjm9yqztQ.gif\">\n<\/div>\n<h1><center>Used Cars EDA<\/center><\/h1>\n","7d7f31fc":"**Import**","175c829f":"**Cleaning**","c7832207":"**Odometer vs Age**"}}