{"cell_type":{"f53852c5":"code","927e9bf6":"code","422401b3":"code","94827acf":"code","0b3d39cc":"code","94de183f":"code","ffbd0165":"code","63a8abf7":"code","a992c035":"code","338523fd":"code","d746ded1":"code","b60b8568":"code","127bb923":"code","1c39b1ce":"code","872dec1b":"code","d727fcca":"code","f9877dd5":"code","9d2aa5db":"code","472c94e9":"code","561da2eb":"code","26753e3f":"code","9b948be0":"code","83df9c59":"code","825d800b":"code","73f37ba4":"code","61c669ff":"code","e4e9afad":"code","a32c790a":"code","e3b4a0c0":"code","59068737":"code","476a30e3":"code","04381c59":"code","bc38e56a":"code","048c691e":"code","194e8f1a":"code","e4840df8":"code","6d9e6fe0":"code","2ec8d848":"code","5e006ef9":"code","4bb50088":"code","72e3066b":"code","5c3114e4":"code","7d40d261":"code","e8a313cd":"code","1a1bc86c":"code","a98c27be":"code","15e4d35d":"code","48f5a198":"code","8d0ca93a":"code","348024fc":"code","c420038f":"code","8c5837c0":"code","c2314b92":"code","52e096a4":"code","686fb920":"code","9c00f114":"code","5dbcef6b":"code","32f2d731":"code","ef9eec8a":"code","15d47385":"code","1e0653b8":"code","8d73c536":"code","652bec78":"code","cf642489":"code","205388c0":"code","8e6b482f":"code","911f2512":"code","d77d9287":"code","a243ee1d":"code","9218b3d1":"code","0864dfaa":"code","0db0e8bb":"code","6ebddd42":"markdown","351742b4":"markdown","7b3474e4":"markdown","b091a67b":"markdown","31c19c18":"markdown"},"source":{"f53852c5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom PIL import Image\nimport matplotlib.pyplot as plt\nfrom fastai.vision import *\nimport os\n\n%reload_ext autoreload\n%autoreload 2\n%matplotlib inline\n\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","927e9bf6":"train_df1 = pd.read_csv(\"..\/input\/resized-2015-2019-blindness-detection-images\/labels\/trainLabels15.csv\")\ntrain_df1.head()","422401b3":"img = plt.imread(f'..\/input\/resized-2015-2019-blindness-detection-images\/resized train 15\/10_left.jpg')\nimg.shape","94827acf":"def display_samples(df, columns = 4, rows = 3):\n    fig = plt.figure(figsize = (5 * columns, 4 * rows))\n\n    for i in range(columns * rows):\n        image_path = df.loc[i,'image']\n        image_id = df.loc[i,'level']\n        img = plt.imread(f'..\/input\/resized-2015-2019-blindness-detection-images\/resized train 15\/{image_path}.jpg')        \n        fig.add_subplot(rows, columns, i+1)\n        plt.title(image_id)\n        plt.imshow(img)\n    \n    plt.tight_layout()\n\ndisplay_samples(train_df1)\n","0b3d39cc":"train_df1.groupby('level').count()","94de183f":"train_df1.shape[0]","ffbd0165":"path = Path('..\/input\/resized-2015-2019-blindness-detection-images\/')\npath.ls()","63a8abf7":"tfms = get_transforms(do_flip=True, flip_vert=True, max_lighting=0.1, max_warp=0., max_rotate=30.0)","a992c035":"np.random.seed(42)\n\nsrc = (ImageList.from_csv(path, 'labels\/trainLabels15.csv', folder='resized train 15', suffix='.jpg')\n       .split_by_rand_pct(0.2, seed=42)\n       .label_from_df(cols='level'))","338523fd":"data = (src.transform(tfms, size=224)\n        .databunch(num_workers=4).normalize(imagenet_stats))","d746ded1":"data.show_batch(rows=3, figsize=(12,9))","b60b8568":"!mkdir -p \/tmp\/.cache\/torch\/checkpoints\/\n!cp ..\/input\/resnet34\/resnet34.pth \/tmp\/.cache\/torch\/checkpoints\/resnet34-333f7ec4.pth","127bb923":"arch = models.resnet34\nlearn = cnn_learner(data, arch, metrics=[accuracy], model_dir='\/tmp\/models')","1c39b1ce":"learn.lr_find()\nlearn.recorder.plot(suggestion=True)","872dec1b":"learn.fit_one_cycle(4, 1e-2)\nlearn.recorder.plot_losses()\nlearn.recorder.plot_metrics()","d727fcca":"learn.save(\"model1_224_stage1\")","f9877dd5":"interp = ClassificationInterpretation.from_learner(learn)\ninterp.most_confused(min_val=2)","9d2aa5db":"learn.unfreeze()","472c94e9":"learn.lr_find()\nlearn.recorder.plot(suggestion=True)","561da2eb":"learn.fit_one_cycle(2, slice(1e-5, 1e-4))\n","26753e3f":"learn.save(\"model1_224_stage2\")","9b948be0":"interp = ClassificationInterpretation.from_learner(learn)\ninterp.most_confused(min_val=2)","83df9c59":"data = (src.transform(tfms, size=552)\n        .databunch(num_workers=0).normalize(imagenet_stats))\n\nlearn.data = data","825d800b":"learn.freeze()","73f37ba4":"learn.lr_find()\nlearn.recorder.plot(suggestion=True)","61c669ff":"learn.fit_one_cycle(2, slice(1e-3,1e-2))","e4e9afad":"learn.save('model1_552_stage1')","a32c790a":"learn.recorder.plot_losses()\nlearn.recorder.plot_metrics()","e3b4a0c0":"interp = ClassificationInterpretation.from_learner(learn)\ninterp.most_confused(min_val=2)","59068737":"learn.unfreeze()","476a30e3":"learn.lr_find()\nlearn.recorder.plot(suggestion=True)","04381c59":"learn.fit_one_cycle(2, slice(1e-5,1e-4))","bc38e56a":"learn.save('model1_552_stage2')","048c691e":"interp = ClassificationInterpretation.from_learner(learn)\ninterp.most_confused(min_val=2)","194e8f1a":"learn.freeze()","e4840df8":"path = Path('..\/input\/aptos2019-blindness-detection\/')\npath.ls()","6d9e6fe0":"np.random.seed(42)\n\nsrc = (ImageList.from_csv(path, 'train.csv', folder='train_images', suffix='.png')\n       .split_by_rand_pct(0.2)\n       .label_from_df(cols='diagnosis'))","2ec8d848":"# data = (src.transform(tfms, size=128)\n#         .databunch(num_workers=4).normalize(imagenet_stats))\n\n# learn.data = data","5e006ef9":"# data.show_batch(rows=3, figsize=(12,9))","4bb50088":"# learn.lr_find()\n# learn.recorder.plot(suggestion=True)","72e3066b":"# learn.fit_one_cycle(4, slice(1e-3))","5c3114e4":"# learn.save('model2_128_stage1')","7d40d261":"# interp = ClassificationInterpretation.from_learner(learn)\n# interp.most_confused(min_val=2)","e8a313cd":"# learn.unfreeze()","1a1bc86c":"# learn.lr_find()\n# learn.recorder.plot(suggestion=True)","a98c27be":"# learn.fit_one_cycle(4, slice(1e-3))","15e4d35d":"# learn.save('model2_128_stage2')","48f5a198":"# interp = ClassificationInterpretation.from_learner(learn)\n# interp.most_confused(min_val=2)","8d0ca93a":"# learn.freeze()","348024fc":"data = (src.transform(tfms, size=552)\n        .databunch(num_workers=0).normalize(imagenet_stats))\n\nlearn.data = data","c420038f":"learn.lr_find()\nlearn.recorder.plot(suggestion=True)","8c5837c0":"learn.fit_one_cycle(4, slice(1e-2))","c2314b92":"learn.save('model2_552_stage1')","52e096a4":"interp = ClassificationInterpretation.from_learner(learn)\ninterp.most_confused(min_val=2)","686fb920":"# valid_preds = learn.get_preds(ds_type=DatasetType.Valid)\npred_valid, y_valid = learn.TTA(ds_type=DatasetType.Valid)","9c00f114":"len(y_valid)","5dbcef6b":"(np.array(np.argmax(pred_valid, axis=1))==np.array(y_valid)).sum()","32f2d731":"unique_pred, counts_pred = np.unique(np.argmax(pred_valid, axis=1), return_counts=True)\nnp.asarray((unique_pred, counts_pred)).T","ef9eec8a":"unique_act, counts_act = np.unique(y_valid, return_counts=True)\nnp.asarray((unique_act, counts_act)).T","15d47385":"learn.validate()","1e0653b8":"learn.validate(learn.data.train_dl)","8d73c536":"test_df = pd.read_csv(path\/'test.csv')\ntest_df.head() ","652bec78":"test_data = ImageList.from_df(test_df, path\/'test_images', suffix='.png')\ndata.add_test(test_data)\nlen(test_data)","cf642489":"pred, _ = learn.TTA(ds_type=DatasetType.Test)","205388c0":"# preds, _ = learn.get_preds(ds_type=DatasetType.Test)","8e6b482f":"pred.size()","911f2512":"pred","d77d9287":"test_df['diagnosis'] = np.argmax(pred, axis=1) ","a243ee1d":"print(test_df['diagnosis'].max(), test_df['diagnosis'].min())\ncount_df = test_df.groupby('diagnosis').count()\nprint(count_df)","9218b3d1":"test_df.head()","0864dfaa":"test_df.to_csv('submission.csv', index=False)","0db0e8bb":"os.listdir()","6ebddd42":"### incremental learning: 552 size","351742b4":"### incremental learning: 224 image size","7b3474e4":"## Training on new training dataset","b091a67b":"## Preparaing old training dataset","31c19c18":"## Training old dataset using resnet 34"}}