{"cell_type":{"323c0962":"code","372d6610":"code","8274fa4c":"code","21ed9aa0":"code","56626d4a":"code","da917b7c":"code","26ac5e8a":"code","f08872e8":"code","18b8a5db":"code","80bb98e5":"code","a059e7f8":"markdown","f015efc5":"markdown","a3cb0743":"markdown"},"source":{"323c0962":"%config Completer.use_jedi = False","372d6610":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8274fa4c":"df = pd.read_csv('..\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\ndf.head()","21ed9aa0":"df.describe()","56626d4a":"fig= px.histogram(df,x='User Rating',title='User Rating Analysis')\nfig.show()","da917b7c":"popular = [0,0,0,0]\nfor i in df['User Rating']:\n    if i<3.5:\n        df.fillna('Not Much popular')\n    if i>=4.8:\n        popular[0] += 1\n    if i>=4.5:\n        popular[1] += 1\n    if i>=4.1:\n        popular[2] += 1\n    else:\n        popular[3] += 1\n","26ac5e8a":"x = ['Extermely Popular(4.8-5.0)','Very Popular(4.5-4.7)','Popular(4.1-4.4)','Least Popular']\ny = popular\nfig = go.Figure([go.Bar(x=x,y=y)])\nfig.show()","f08872e8":"d1 = df[df['User Rating'] >=4.1]\nfig = px.histogram(d1,x='Genre',title='Popularity based on Genres')\nfig.show()","18b8a5db":"names = []\nfor i in df['Name']:\n    names.append(len(i))","80bb98e5":"fig = go.Figure(data=[go.Histogram(x=names)])\nfig.show()","a059e7f8":"# User Rating Analysis","f015efc5":"# Popularity based on review ratings","a3cb0743":"# Popularity based on Genres"}}