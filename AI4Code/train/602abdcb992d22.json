{"cell_type":{"9a05739f":"code","cb58426f":"code","9127658e":"code","abfc4ca9":"code","d4dd0fdc":"code","36eb1ddf":"code","847a8145":"code","2175c2be":"code","4db95581":"code","b1ad8ea4":"code","3f28dc6d":"code","613f3748":"code","c1649d57":"code","798092a5":"code","01de5a0d":"code","a8106d2c":"code","64ae642d":"code","ecd7dbb6":"code","3f8cd4f3":"code","000286da":"code","7603b25a":"code","c6016dc7":"code","2890758b":"code","143bf8e5":"code","a787044a":"code","33d71b73":"code","09142295":"code","39474814":"code","2385e761":"code","4c2291b4":"code","496b106e":"code","57af0167":"code","45d6a503":"code","4f3c6f25":"code","f8d8c27f":"code","9b64a9bf":"code","7aa71ff0":"code","6f9d3764":"code","23790f71":"code","bc2dddd2":"code","68e6f180":"code","e553ba57":"code","f08dd381":"code","2cb164f1":"code","4d640cad":"code","5b73bee0":"code","b614c8f0":"code","794ce15f":"code","76481d1e":"code","26d07e27":"code","c48dcf3d":"markdown","3160f77c":"markdown","85374c81":"markdown","1a2fc894":"markdown","90493d0d":"markdown","57d34cd1":"markdown","4cdca432":"markdown","f5991382":"markdown","e497d028":"markdown","21df6106":"markdown","20415f2e":"markdown","e8e1d0c1":"markdown","8f6f4f59":"markdown","8623f13b":"markdown","4d656c32":"markdown","3555a307":"markdown","d2e17977":"markdown","5de50bb1":"markdown","3c95d522":"markdown","797abbb0":"markdown","1bdac361":"markdown","c7b171c9":"markdown","225f5cb4":"markdown","041fb55a":"markdown","240b5d02":"markdown","6ef10a2f":"markdown","92339bc4":"markdown","93c5b6a3":"markdown","9cadae6f":"markdown","ac57f9e5":"markdown","e63eeb10":"markdown","5813b38f":"markdown","28bee7c4":"markdown","fba9cdaf":"markdown","e6572d05":"markdown","3fec1bc3":"markdown","1297e419":"markdown","acc49a10":"markdown","ece8aaa6":"markdown","180eb3ab":"markdown","cc842986":"markdown","1a39d5bb":"markdown","cf5efcf6":"markdown","202ca4ae":"markdown","e11a9678":"markdown","ccb1a152":"markdown","d04ae8b7":"markdown","137045ab":"markdown","691b2832":"markdown","46dd0de0":"markdown"},"source":{"9a05739f":"import pandas as pd\nimport numpy as np\nimport numbers\nimport plotly\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nfrom plotly import tools\nimport folium \n# from folium import plugins\n\ninit_notebook_mode(connected=True)","cb58426f":"gun_violence_df = pd.read_csv('..\/input\/gun-violence-data_01-2013_03-2018.csv') \ngun_violence_df.head(3)","9127658e":"gun_violence_df.describe() ##describes only numeric data","abfc4ca9":"# Function to describe more information for all the attributes\ndef brief(data):\n    \n    df = data.copy()\n    \n    print(\"This dataset has {} Rows {} Attributes\".format(df.shape[0],df.shape[1]), end='')\n    print('\\n')\n    \n    real_valued = {}\n    symbolics = {}\n    \n    \n    for i,col in enumerate(df.columns, 1):\n        Missing = len(df[col]) - df[col].count()\n        \n        counter = 0\n        for val in df[col].dropna():\n            if isinstance(val, numbers.Number):\n                    counter += 1\n        \n        if counter != len(df[col].dropna()):\n            arity = len(df[col].dropna().unique())\n            symbolics[i] = [i, col, Missing, arity]  \n        else:\n            Mean, Median, Sdev, Min, Max = df[col].mean(), df[col].median(), df[col].std(), df[col].min(), df[col].max()\n            real_valued[i] =  [i, col, Missing, Mean, Median, Sdev, Min, Max]\n            \n    \n    #Create array containing list of real valued\n    real_valued_array = [real_valued[keys] for keys in real_valued.keys()]\n    real_valued_transformed = np.array(real_valued_array).T\n    \n    symbolic_array = [symbolics[keys] for keys in symbolics.keys()]\n    symbolic_transformed = np.array(symbolic_array).T\n    \n    # return symbolic_transformed\n    real_cols = ['Attribute_ID', 'Attribute_Name', 'Missing', 'Mean', 'Median', 'Sdev', 'Min', 'Max']\n    sym_cols = ['Attribute_ID', 'Attribute_Name', 'Missing','arity']\n    \n    \n   \n    index = range(1, len(real_valued.keys())+1)\n    real_val_df = pd.DataFrame(data={unit[0]:unit[1] for unit in zip(real_cols, real_valued_transformed)}, index = index, columns=real_cols)\n    \n\n    index_sym = range(1, len(symbolics.keys())+1)\n    sym_val_df = pd.DataFrame(data={unit[0]:unit[1] for unit in zip(sym_cols, symbolic_transformed)}, index = index_sym, columns = sym_cols)\n    \n    text = (\"real valued attributes\" + \"\\n\" + \"---------------------\" \n            + \"\\n\" + str(real_val_df) + \"\\n\"  + \"non-real valued attributes\"  \n            + \"\\n\" + \"-------------------\" + \"\\n\" + str(sym_val_df))\n        \n    return text\n","d4dd0fdc":"%time\nprint(brief(gun_violence_df))","36eb1ddf":"gun_violence_df.info()","847a8145":"# added important missing data point found in the description on Kaggle\nmissing =  ['sban_1', '2017-10-01', 'Nevada', 'Las Vegas', 'Mandalay Bay 3950 Blvd S', 59, 489, 'https:\/\/en.wikipedia.org\/wiki\/2017_Las_Vegas_shooting', 'https:\/\/en.wikipedia.org\/wiki\/2017_Las_Vegas_shooting', '-', '-', '-', '-', '-', '36.095', 'Hotel', \n            '-115.171667', 47, 'Route 91 Harvest Festiva; concert, open fire from 32nd floor. 47 guns seized; TOTAL:59 kill, 489 inj, number shot TBD,girlfriend Marilou Danley POI', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-']\ngun_violence_df.loc[len(gun_violence_df)] = missing\n\nprint(gun_violence_df.shape)\ndrop_columns = gun_violence_df.columns[gun_violence_df.apply(lambda col: col.isnull().sum() >= (0.5 * len(gun_violence_df)))]\ngun_violence_filtered = gun_violence_df.drop(drop_columns, axis=1)\nprint(gun_violence_filtered.shape)\nprint('Dropped Columns:', list(drop_columns))","2175c2be":"gun_violence_filtered['date'] = pd.to_datetime(gun_violence_filtered['date'])\ngun_violence_filtered = gun_violence_filtered.assign(year = gun_violence_filtered['date'].map(lambda dates: dates.year))\ngun_violence_filtered = gun_violence_filtered.assign(month = gun_violence_filtered['date'].map(lambda dates: dates.month))\ngun_violence_filtered = gun_violence_filtered.assign(day = gun_violence_filtered['date'].map(lambda dates: dates.weekday()))\n\ny_yrs = gun_violence_filtered.groupby('year')['incident_id'].count().values\nx_yrs = gun_violence_filtered.groupby('year')['incident_id'].count().index.values\n\ny_months = gun_violence_filtered.\\\n            groupby(by=['year','month']).\\\n            agg('count').\\\n            groupby('month')['incident_id'].\\\n            mean().\\\n            values\n\nx_months = ['Jan','Feb','Mar','Apr','May','June','July','Aug','Sep','Oct','Nov','Dec']\n\ny_days = gun_violence_filtered.\\\n            groupby(['year','day']).\\\n            agg('count').\\\n            groupby('day')['incident_id'].\\\n            mean().\\\n            values\n\nx_days = ['Mon','Tues','Wed','Thurs','Fri','Sat','Sun']\n\n\ntrace1 = go.Bar(\n    x=x_yrs,\n    y=y_yrs\n)\ntrace2 = go.Bar(\n    x=x_months,\n    y=y_months,\n    xaxis='x2',\n    yaxis='y2'\n)\ntrace3 = go.Bar(\n    x=x_days,\n    y=y_days,\n    xaxis='x3',\n    yaxis='y3'\n)\n\ndata = [trace1, trace2, trace3]\nfig = plotly.tools.make_subplots(rows=3, cols=1, specs = [[{}], [{}],[{}]],vertical_spacing = 0.25, subplot_titles=('Number of Incidents per Year', \n                                                                 'Average Number of Incidents per Month over Years',\n                                                                 'Average Number of Incidents per Day over Years'))\n\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 2, 1)\nfig.append_trace(trace3, 3, 1)\n\nfig['layout']['xaxis1'].update(title='Years')\nfig['layout']['xaxis2'].update(title='Months')\nfig['layout']['xaxis3'].update(title='Days')\n\n\nfig['layout']['yaxis1'].update(title='Count')\nfig['layout']['yaxis2'].update(title='Avg. Frequency')\nfig['layout']['yaxis3'].update(title='Avg. Frequency')\n\n\nfig['layout'].update(showlegend=False, height=800, width=800, title='Incidents Over Time')\niplot(fig)","4db95581":"n_killed = gun_violence_filtered.\\\n                groupby('date').\\\n                sum()['n_killed'].values\n\nn_injured = gun_violence_filtered.\\\n                groupby('date').\\\n                sum()['n_injured'].values\n\ndates = gun_violence_filtered.\\\n                groupby('date').\\\n                count().\\\n                index\n\ntrace1 = go.Scatter(\n    x = dates,\n    y = n_killed,\n    name = 'Number Killed',\n    line = dict(\n        dash = 'dot'\n    )\n)\n\ntrace2 = go.Scatter(\n    x = dates,\n    y = n_injured,\n    name = 'Number Injured',\n    line = dict(\n        dash = 'dot'\n    )\n)\n\ndata = [trace1, trace2]\n\nlayout = dict(height=400,\n              width=1000,\n              title = 'Number of Total Incidents',\n              xaxis = dict(title = 'Time'),\n              yaxis = dict(title = 'Count'),\n              )\n\nfig = dict(data = data, layout=layout)\niplot(fig)\n\nn_killed_2017 = gun_violence_filtered[gun_violence_filtered.loc[:,'year'] == 2017].\\\n                    groupby('date').\\\n                    sum()['n_killed'].values\n\nn_injured_2017 = gun_violence_filtered[gun_violence_filtered.loc[:,'year'] == 2017].\\\n                    groupby('date').\\\n                    sum()['n_injured'].values\n\ndates_2017 = gun_violence_filtered[gun_violence_filtered.loc[:,'year'] == 2017].\\\n                    groupby('date').\\\n                    count().\\\n                    index\n\n\n\ntrace1 = go.Scatter(\n    x = dates_2017,\n    y = n_killed_2017,\n    name = 'Number Killed',\n    line = dict(\n        dash = 'dot'\n    )\n)\n\ntrace2 = go.Scatter(\n    x = dates_2017,\n    y = n_injured_2017,\n    name = 'Number Injured',\n    line = dict(\n        dash = 'dot'\n    )\n)\n\ndata = [trace1, trace2]\n\nlayout = dict(height=400,\n              width=1000,\n              title = 'Number of Incidents in 2017',\n              xaxis = dict(title = 'Time'),\n              yaxis = dict(title = 'Count'),\n              )\n\nfig = dict(data = data, layout=layout)\niplot(fig)","b1ad8ea4":"state = gun_violence_filtered.groupby('state')\nstate_incidents = state.count().sort_values(by='incident_id',ascending=False)['incident_id']\nstate_killed = state.sum()['n_killed']\nstate_injured = state.sum()['n_injured']\n\ncity = gun_violence_filtered.groupby('city_or_county')\ncity_incidents= city.count().sort_values(by='incident_id',ascending=False)['incident_id'].head(20)\n\n\n\ntrace = go.Bar(\n    x = state_incidents.index,\n    y = state_incidents,\n)\n\nlayout = dict(height=400,\n              width=1000,\n              title =  'Top States with Highest Number of Gun Violence Incidents',\n              yaxis = dict(title = 'Number of Incidents'),\n              )\n\ndata = [trace]\n\nfig = dict(data = data, layout=layout)\niplot(fig)\n\ntrace = go.Bar(\n    x = city_incidents.index[:20],\n    y = city_incidents,\n)\n    \nlayout = dict(height=400,\n              width=1000,\n              title = 'Top Twenty Cities with Highest Number of Gun Violence Incidents',\n              yaxis = dict(title = 'Number of Incidents'),\n             )\n    \ndata = [trace]\n\nfig = dict(data = data, layout=layout)\niplot(fig)","3f28dc6d":"trace1 = go.Bar(\n    x = state_killed.index,\n    y = state_killed,\n    name = 'Number Killed'\n)\n\ntrace2 = go.Bar(\n    x = state_injured.index,\n    y = state_injured,\n    name = 'Number Injured'\n)\n\n\ndata = [trace1, trace2]\n\nlayout = dict(height=400,\n              width=1000,\n              title = 'Number of People Injured\/Killed Across States',\n              yaxis = dict(title = 'Frequency'),\n              )\n\nfig = dict(data = data, layout=layout)\niplot(fig)","613f3748":"population_adjusted_data = pd.read_html('https:\/\/www.enchantedlearning.com\/usa\/states\/population.shtml')[1] #population data\npopulation_adjusted_data['State'] = population_adjusted_data['State'].apply(lambda val: val[3:].strip())\npop_adj_dic = {k:v for k,v in population_adjusted_data.to_dict('split')['data']}\n\nstate_incidents = pd.DataFrame(state_incidents)\nstate_incidents['population'] = state_incidents.index.map(lambda states : pop_adj_dic[states])\nstate_incidents['adj_incidents'] = (state_incidents['incident_id']\/state_incidents['population']) * 100000\n\nstate_incidents = state_incidents.sort_values(by='adj_incidents',ascending=False)['adj_incidents']\n\ntrace = go.Bar(\n    x = state_incidents.index,\n    y = state_incidents,\n)\n\nlayout = dict(height=400,\n              width=1000,\n              title =  'Top States with Highest Number of Gun Violence Incidents Adjusted For Population',\n              yaxis = dict(title = 'Number of Incidents'),\n              )\n\ndata = [trace]\n\nfig = dict(data = data, layout=layout)\niplot(fig)","c1649d57":"state_killed = pd.DataFrame(state_killed)\nstate_killed['population'] = state_killed.index.map(lambda states : pop_adj_dic[states])\nstate_killed['adj_killings'] = (state_killed['n_killed']\/state_killed['population']) * 100000\n\nstate_injured = pd.DataFrame(state_injured)\nstate_injured['population'] = state_injured.index.map(lambda states : pop_adj_dic[states])\nstate_injured['adj_injuries'] = (state_injured['n_injured']\/state_injured['population']) * 100000\n\n\n\n\ntrace1 = go.Bar(\n    x = state_killed.index,\n    y = state_killed['adj_killings'],\n    name = 'Number Killed'\n)\n\ntrace2 = go.Bar(\n    x = state_injured.index,\n    y = state_injured['adj_injuries'],\n    name = 'Number Injured'\n)\n\n\ndata = [trace1, trace2]\n\nlayout = dict(height=400,\n              width=1000,\n              title = 'Number of People Injured\/Killed Across States Adjusted for Population',\n              yaxis = dict(title = 'Frequency'),\n              )\n\nfig = dict(data = data, layout=layout)\niplot(fig)","798092a5":"gun_violence_filtered['total_damage'] = gun_violence_filtered['n_injured'] + gun_violence_filtered['n_killed']\n\ngun_violence_filtered.\\\n        loc[:,['date','year','state', 'city_or_county', 'address', 'total_damage']].\\\n        sort_values(by='total_damage', ascending = False).\\\n        head(10)","01de5a0d":"df = gun_violence_filtered[gun_violence_filtered['total_damage'] >= 10][['latitude', 'longitude', 'total_damage', 'n_killed']].dropna()\nmaps = folium.Map([39.50, -98.35],  zoom_start=4, tiles='Stamen Toner')\nmarkers = []\nfor idx, row in df.iterrows():\n    total = row['total_damage'] * 0.30   \n    folium.CircleMarker([float(row['latitude']), float(row['longitude'])], radius=float(total), color='#ef4f61', fill=True).add_to(maps)\nmaps","a8106d2c":"gun_violence_filtered[['participant_age','participant_type','participant_gender']].head(4)","64ae642d":"# Convert string into dictionary\ndef StringToDic(S1):\n    dic1 = {}\n    list1 = str(S1).split('||')\n    for i in list1:\n        try:\n            index = i.split('::')[0]\n            value = i.split('::')[1]\n            dic1[index] = value\n        except:\n            pass\n        \n    return dic1\n        \n    \n# Apply the function above to each column, creating new column\ngun_violence_filtered['participant_age_dic'] \\\n= gun_violence_filtered['participant_age'].apply(lambda x: StringToDic(x))\n\ngun_violence_filtered['participant_type_dic'] \\\n= gun_violence_filtered['participant_type'].apply(lambda x: StringToDic(x)) \n\ngun_violence_filtered['participant_gender_dic'] \\\n= gun_violence_filtered['participant_gender'].apply(lambda x: StringToDic(x)) \n\n\n# Create another two new column, with new dictionary mapping type and age, type and gender\nmappingCol1='participant_type_dic'\ndef MapThroughRow(df,mappingCol1,mappingCol2):\n    newDic = {'Victim':[],'Suspect':[]}\n    for rowName,row in df.iterrows():\n        for keys,values in row[mappingCol1].items():\n            if (keys in row[mappingCol2]) and (values =='Victim'):\n                newDic['Victim'].append(row[mappingCol2][keys])\n            elif (keys in row[mappingCol2]) and ('Suspect' in values):\n                newDic['Suspect'].append(row[mappingCol2][keys])\n                \n    return newDic","ecd7dbb6":"%time\nmappingCol2 = 'participant_age_dic'\nmappingCol3 = 'participant_gender_dic'\ndf = gun_violence_filtered\nMapTypeAge = MapThroughRow(df,mappingCol1,mappingCol2)\nfor key,values in MapTypeAge.items():\n    MapTypeAge[key] = [int(i) for i in values]\n    \nMapTypeGender = MapThroughRow(df,mappingCol1,mappingCol3)\n\nprint(len(MapTypeAge['Victim']))\nprint(len(MapTypeAge['Suspect']))\nprint(len(MapTypeGender['Victim']))\nprint(len(MapTypeGender['Suspect']))","3f8cd4f3":"def countDic(L):\n    dic = {}\n    for i in L:\n        if i not in dic:\n            dic[i] = 1\n        else:\n            dic[i] += 1\n    return dic","000286da":"VicageList = list(countDic(MapTypeAge['Victim']).keys())\nVicageCount = list(countDic(MapTypeAge['Victim']).values())\nSusageList = list(countDic(MapTypeAge['Suspect']).keys())\nSusageCount = list(countDic(MapTypeAge['Suspect']).values())","7603b25a":"# For Victim\ntrace1 = go.Bar(\n    x=VicageList,\n    y=VicageCount,\n    name='Age distribution of Victim',\n    marker=dict(\n        color='rgb(55, 83, 109)'\n    )\n)\n\n\ndata = [trace1]\nlayout = go.Layout(\n    title='Age Distribution of Victims',\n    xaxis=dict(\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)',\n        ),\n        range=[0,100]\n    ),\n    yaxis=dict(\n        title='Count',\n        titlefont=dict(\n            size=16,\n            color='rgb(107, 107, 107)'\n        ),\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n    ),\n    legend=dict(\n        x=0,\n        y=1.0,\n        bgcolor='rgba(255, 255, 255, 0)',\n        bordercolor='rgba(255, 255, 255, 0)'\n    ),\n    barmode='group',\n    bargap=0.15,\n    bargroupgap=0.1\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","c6016dc7":"# For Suspects\ntrace1 = go.Bar(\n    x=SusageList,\n    y=SusageCount,\n    name='Age distribution of Suspects',\n    marker=dict(\n        color='maroon'\n    )\n)\n\n\ndata = [trace1]\nlayout = go.Layout(\n    title='Age Distribution of Suspects',\n    xaxis=dict(\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)',\n        ),\n        range=[0,100]\n    ),\n    yaxis=dict(\n        title='Count',\n        titlefont=dict(\n            size=16,\n            color='rgb(107, 107, 107)'\n        ),\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n    ),\n    legend=dict(\n        x=0,\n        y=1.0,\n        bgcolor='rgba(255, 255, 255, 0)',\n        bordercolor='rgba(255, 255, 255, 0)'\n    ),\n    barmode='group',\n    bargap=0.15,\n    bargroupgap=0.1\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","2890758b":"VicGenderList = list(countDic(MapTypeGender['Victim']).keys())\nVicGenderCount = list(countDic(MapTypeGender['Victim']).values())\nSusGenderList = list(countDic(MapTypeGender['Suspect']).keys())\nSusGenderCount = list(countDic(MapTypeGender['Suspect']).values())","143bf8e5":"# It has a incorrectly recorded data here, but it is fine\nprint((VicGenderList,VicGenderCount))\nprint(sum(VicGenderCount))","a787044a":"print((SusGenderList,SusGenderCount))\nprint(sum(SusGenderCount))","33d71b73":"import plotly.plotly as py\nimport plotly.graph_objs as go\n\nfig = {\n  \"data\": [\n    {\n      \"values\": [136394, 30630],\n      \"labels\": [\n        \"Male\",\n        \"Female\"\n      ],\n      \"domain\": {\"x\": [0, .48]},\n      \"name\": \"Victims\",\n      \"hoverinfo\":\"label+percent+name\",\n      \"hole\": .4,\n      \"type\": \"pie\"\n    },\n    {\n      \"values\": [167708,11746],\n      \"labels\": [\n         \"Male\",\n        \"Female\"\n      ],\n      \"text\":[\"Suspects\"],\n      \"textposition\":\"inside\",\n      \"domain\": {\"x\": [.52, 1]},\n      \"name\": \"Proportion of Gender for Victims and Suspects\",\n      \"hoverinfo\":\"label+percent+name\",\n      \"hole\": .4,\n      \"type\": \"pie\"\n    }],\n  \"layout\": {\n        \"title\":\"Proportion of Gender for Victims and Suspects\",\n        \"annotations\": [\n            {\n                \"font\": {\n                    \"size\": 20\n                },\n                \"showarrow\": False,\n                \"text\": \"Victims\",\n                \"x\": 0.20,\n                \"y\": 0.5\n            },\n            {\n                \"font\": {\n                    \"size\": 20\n                },\n                \"showarrow\": False,\n                \"text\": \"Suspects\",\n                \"x\": 0.8,\n                \"y\": 0.5\n            }\n        ]\n    }\n}\niplot(fig, filename='donut')","09142295":"gun_violence_filtered[['gun_type']].head(7)","39474814":"# Apply the function have defined above to each column, creating a new dictionary column\ngun_violence_filtered['gun_type_dic'] \\\n= gun_violence_filtered['gun_type'].apply(lambda x: StringToDic(x))","2385e761":"def CountDfValue(df,col='gun_type_dic'):\n    newDic = {}\n    for index,row in df.iterrows():\n        for key,value in row[col].items():\n            if value not in newDic:\n                newDic[value] = 1\n            else:\n                newDic[value] += 1\n                \n    return newDic\n\ndicGun = CountDfValue(gun_violence_filtered)\ndel dicGun['Unknown']","4c2291b4":"gun_violence_filtered[['gun_type_dic']].head(7)","496b106e":"gunList = []\ngunCount = []\nfor i in sorted(dicGun.items(),key=lambda items:items[1],reverse=True):\n    gunList.append(i[0])\n    gunCount.append(i[1])","57af0167":"# For Victim\ntrace1 = go.Bar(\n    x=gunList,\n    y=gunCount,\n    marker=dict(\n        color='orange'\n    )\n)\n\n\ndata = [trace1]\nlayout = go.Layout(\n    title='Distribution of Types of Gun',\n    xaxis=dict(\n        tickfont=dict(\n            size=12,\n            color='rgb(107, 107, 107)',\n        )\n    ),\n    yaxis=dict(\n        title='Count',\n        titlefont=dict(\n            size=16,\n            color='rgb(107, 107, 107)'\n        ),\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n    ),\n    barmode='group',\n    bargap=0.15,\n    bargroupgap=0.1,\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","45d6a503":"df['gun_type_appear'] = df['gun_type_dic'].apply(lambda x: set(x.values()))\ndef FurthurColCal(df=gun_violence_filtered,colToCal='n_injured',colToMap='gun_type_appear'):\n    dicGunCal = {}\n    \n    for index,row in df.iterrows():\n        for item in row[colToMap]:\n            if item not in dicGunCal:\n                dicGunCal[item] = [1]\n                dicGunCal[item].append(int(row[colToCal]))\n            else:\n                dicGunCal[item][0] += 1\n                dicGunCal[item][1] += int(row[colToCal])\n    return dicGunCal  ","4f3c6f25":"dicGunInjured = FurthurColCal()\ndel dicGunInjured['Unknown']\ndicGunKilled = FurthurColCal(colToCal='n_killed')\ndel dicGunKilled['Unknown']","f8d8c27f":"GunInjuredList = [(key,values[1]\/values[0],values[1]) for key,values in list(dicGunInjured.items())]\nGunKilledList = [(key,values[1]\/values[0],values[1]) for key,values in list(dicGunKilled.items())]\nGunTotalList = [(injured[0],injured[1]+kill[1],injured[2]+kill[2]) for injured,kill in zip(GunInjuredList,GunKilledList)]\nGunType = [i[0] for i in GunTotalList]\nGunInjuredAverage = [i[1] for i in GunInjuredList]\nGunInjuredTotal = [i[2] for i in GunInjuredList]\nGunKilledAverage = [i[1] for i in GunKilledList]\nGunKilledTotal = [i[2] for i in GunKilledList]\nGunTotalAverage = [i[1] for i in GunTotalList]\nGunTotalTotal = [i[2] for i in GunTotalList]","9b64a9bf":"# A simple glance of one of the lists\nGunTotalList[:5]","7aa71ff0":"# For Victim\ntrace1 = go.Bar(\n    x=GunType,\n    y=GunInjuredAverage,\n    marker=dict(\n        color='orange'\n    ),\n    name = 'Average Injured'\n)\ntrace2 = go.Bar(\n    x=GunType,\n    y=GunKilledAverage,\n    marker=dict(\n        color='red'\n    ),\n    name = 'Average Killed'\n)\ndata = [trace1,trace2]\nlayout = go.Layout(\n    title='Number of Average Injured and Killed Caused by Each Gun Type',\n    xaxis=dict(\n        tickfont=dict(\n            size=12,\n            color='rgb(107, 107, 107)',\n        )\n    ),\n    yaxis=dict(\n        title='Count',\n        titlefont=dict(\n            size=16,\n            color='rgb(107, 107, 107)'\n        ),\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n    ),\n    barmode='group',\n    bargap=0.15,\n    bargroupgap=0.1,\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","6f9d3764":"# For Victim\ntrace1 = go.Bar(\n    x=GunType,\n    y=GunTotalAverage,\n    marker=dict(\n        color='maroon'\n    ),\n    name = 'Average Injured & Killed'\n)\n\ndata = [trace1]\nlayout = go.Layout(\n    title='Number of Average Injured and Killed Caused by Each Gun Type',\n    xaxis=dict(\n        tickfont=dict(\n            size=12,\n            color='rgb(107, 107, 107)',\n        )\n    ),\n    yaxis=dict(\n        title='Count',\n        titlefont=dict(\n            size=16,\n            color='rgb(107, 107, 107)'\n        ),\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n    ),\n    barmode='group',\n    bargap=0.15,\n    bargroupgap=0.1,\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","23790f71":"# For Victim\ntrace1 = go.Bar(\n    x=GunType,\n    y=GunInjuredTotal,\n    marker=dict(\n        color='orange'\n    ),\n    name = 'Total Injured'\n)\ntrace2 = go.Bar(\n    x=GunType,\n    y=GunKilledTotal,\n    marker=dict(\n        color='red'\n    ),\n    name = 'Total Killed'\n)\ndata = [trace1,trace2]\nlayout = go.Layout(\n    title='Number of Total Injured and Killed Caused by Each Gun Type',\n    xaxis=dict(\n        tickfont=dict(\n            size=10,\n            color='rgb(107, 107, 107)',\n        )\n    ),\n    yaxis=dict(\n        title='Count',\n        range = [0,5000],\n        titlefont=dict(\n            size=16,\n            color='rgb(107, 107, 107)'\n        ),\n        tickfont=dict(\n            size=14,\n            color='rgb(107, 107, 107)'\n        )\n    ),\n    barmode='group',\n    bargap=0.15,\n    bargroupgap=0.1,\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","bc2dddd2":"gun_violence_filtered[['incident_characteristics','gun_type']].head(6)","68e6f180":"# Convert string into dictionary\ndef StringToList(S1):\n    dic1 = {}\n    list1 = str(S1).split('||')\n        \n    return list1","e553ba57":"# Apply the function have defined above to each column, creating a new dictionary column\ngun_violence_filtered['incident_dic'] \\\n= gun_violence_filtered['incident_characteristics'].apply(lambda x: StringToList(x))","f08dd381":"gun_violence_filtered[['incident_dic']].head(4)","2cb164f1":"typeDic = {i:{'Shot - Wounded\/Injured':0} for i in GunType}\ntypeDic['Unknown'] = {'Shot - Wounded\/Injured':0}","4d640cad":"# This function iterate through two column,\n# Count appearances of element of one column(list) in terms of another column(dictionary)\ndef countIncidentType(df=gun_violence_filtered,incidentCol='incident_dic',typeCol='gun_type_appear',typeDic=typeDic):\n    dic = {}\n    \n    for index,row in df.iterrows():\n        for guntype in row[typeCol]:\n            for incidentList in row[incidentCol]:\n                if incidentList not in typeDic[guntype]:\n                    typeDic[guntype][incidentList] = 1\n                elif incidentList in typeDic[guntype]:\n                    typeDic[guntype][incidentList] += 1\n             \n    return typeDic","5b73bee0":"def sortDic(dic):\n    sortedDic = sorted(dic.items(),key = lambda item: item[1],reverse=True)\n    return sortedDic","b614c8f0":"typeIncidentDic = countIncidentType()","794ce15f":"incidentHandGun = [i[0] for i in sortDic(typeIncidentDic['Handgun'])][:15]\nincidentHandGunCount = [i[1] for i in sortDic(typeIncidentDic['Handgun'])][:15]\nincidentAR = [i[0] for i in sortDic(typeIncidentDic['223 Rem [AR-15]'])][:15]\nincidentARCount = [i[1] for i in sortDic(typeIncidentDic['223 Rem [AR-15]'])][:15]\nincidentAK = [i[0] for i in sortDic(typeIncidentDic['7.62 [AK-47]'])][:15]\nincidentAKCount = [i[1] for i in sortDic(typeIncidentDic['7.62 [AK-47]'])][:15]\nincidentRifle = [i[0] for i in sortDic(typeIncidentDic['Rifle'])][:15]\nincidentRifleCount = [i[1] for i in sortDic(typeIncidentDic['Rifle'])][:15]\nincidentShotgun = [i[0] for i in sortDic(typeIncidentDic['Shotgun'])][:15]\nincidentShotgunCount = [i[1] for i in sortDic(typeIncidentDic['Shotgun'])][:15]\nincident9mm = [i[0] for i in sortDic(typeIncidentDic['9mm'])][:15]\nincident9mmCount = [i[1] for i in sortDic(typeIncidentDic['9mm'])][:15]","76481d1e":"# A galance on two of the lists\nprint('The most frequent incident for Handgun:',sortDic(typeIncidentDic['Handgun'])[:5])\nprint()\nprint('The most frequent incident for Rifle:',sortDic(typeIncidentDic['Rifle'])[:5])","26d07e27":"# Distribution of Incident among Different Guns(we take 4 types here)\ntrace1 = go.Bar(\n    x=incidentHandGun,\n    y=incidentHandGunCount,\n    marker=dict(\n        color='orange'\n    ),\n    name = 'HandGun'\n)\ntrace2 = go.Bar(\n    x=incidentAR,\n    y=incidentARCount,\n    marker=dict(\n        color='red'\n    ),\n    name = '223 Rem [AR-15]'\n)\ntrace3 = go.Bar(\n    x=incidentAK,\n    y=incidentAKCount,\n    marker=dict(\n        color='maroon'\n    ),\n    name = '7.62 [AK-47]'\n)\ntrace4 = go.Bar(\n    x=incidentRifle,\n    y=incidentRifleCount,\n    marker=dict(\n        color='purple'\n    ),\n    name = 'Rifle'\n)\ntrace5 = go.Bar(\n    x=incidentShotgun,\n    y=incidentShotgunCount,\n    marker=dict(\n        color='plum'\n    ),\n    name = 'Shotgun'\n)\n\ntrace6 = go.Bar(\n    x=incident9mm,\n    y=incident9mmCount,\n    marker=dict(\n        color='tan'\n    ),\n    name = '9mm'\n)\n\n\nfig = tools.make_subplots(rows=3, cols=2,subplot_titles=('Handgun', '223 Rem [AR-15]',\n                                                          '7.62 [AK-47]', 'Rifle',\n                                                          'Shotgun','9mm'))\n\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 2)\nfig.append_trace(trace3, 2, 1)\nfig.append_trace(trace4, 2, 2)\nfig.append_trace(trace5, 3, 1)\nfig.append_trace(trace6, 3, 2)\n\nfig['layout'].update(height=1000, \n                     width=1000, \n                     title='Distribution of Incidents among Different Guns',\n                     xaxis1=dict(\n                            tickfont=dict(\n                            size=7,\n                            color='rgb(107, 107, 107)'\n                            )),\n                     xaxis2=dict(\n                            tickfont=dict(\n                            size=7,\n                            color='rgb(107, 107, 107)'\n                            )),\n                     xaxis3=dict(\n                            tickfont=dict(\n                            size=7,\n                            color='rgb(107, 107, 107)'\n                             )),\n                    xaxis4=dict(\n                            tickfont=dict(\n                            size=7,\n                            color='rgb(107, 107, 107)'\n                            )),\n                    xaxis5=dict(\n                            tickfont=dict(\n                            size=7,\n                            color='rgb(107, 107, 107)'\n                             )),\n                    xaxis6=dict(\n                            tickfont=dict(\n                            size=7,\n                            color='rgb(107, 107, 107)'\n                             )))\niplot(fig, filename='simple-subplot-with-annotations')","c48dcf3d":"## <a id='18'>8.2 Guns that Caused the Most Harm<\/a>","3160f77c":"Again, from this chart, not only does Illinois have the highest number of incidents, but it has the highest number of injuries + deaths (as a sum). This might mean that not only are there frequent number of gun violence incidents in Illinois, but the magnitude of the incidents is far worse. Is this valid?","85374c81":"# <a id='11'>6.2 Population Adjusted<\/a>","1a2fc894":"### <a id='19'>8.3 Distribution of Incidents among Different Types of Guns<\/a>","90493d0d":"# <a id='13'>7. People involved in Gun Violence <\/a>\n\nAnother pattern we want to determine is whether there are certain groups(i.e. gender, age, etc.) that have higher probability of committing gun violence and being a victim. For example, if we were trying to measure gun violence based on gender, we would get the total count for males and females and plot a bar chart comparing gender to count. We can create more advanced visualizations related to groups and gun violence by possibly joining other datasets such as the public population data. ","57d34cd1":"The table from above describes the information about the numeric columns of the gun violence data. Since the information is provided for only the numeric columns, and no information is provided about missing data, we created a more in-depth tool below to describe the information for all the attributes. ","4cdca432":"# <a id ='1'> 1. Motivation & Introduction <\/a>","f5991382":"Once again, from this plot, we can correctly state that the District of Columbia not only has more incidents, but the magnitude of its gun violence incidents are large. Additionally, it seems like Illinois comes second in terms of the magnitude of injuries.","e497d028":"Here we plot the most impactful incidents, total damage greater than 10, on the USA map. The sizes of the circles represent the magnitude of the incidents.","21df6106":"# <font> A Deep Analysis on Gun Violence in the U.S. <\/font>\n\n#Karan and Junming from CMU","20415f2e":"## <a id='4'>3.1 Statistical Overview of Data<\/a>","e8e1d0c1":"Above are some of the most impactful incidents, measured by total damage (injuries + death) across the time frame of the dataset.","8f6f4f59":"*1. What are some of the different trends associated with gun violence over time?*\n\n*2. Could we explore some geographical pattern of gun violence in the U.S.?*\n\n*3. What are the differences among different characteristics of gun violence?*\n\n*4. What group has a higher probability of resorting to gun violence?*","8623f13b":"From the analysis above, you can see that some attributes such as participant_name and participant_relationship are missing almost as many values as the number of records in the dataset.","4d656c32":"We conclude that while gun violence incidents are increasing, the magnitude of violence has stayed relatively the same. We base our analysis from the visualizations above. From the Incidents over Time visualization, we have observed that gun violence incidents have increased from 2014 to 2017. However, aside from the largest gun violence massacre in 2017, other gun violence fatalities have approximately the same number of injuries and deaths. In addition, from the time series plots, it is easy to observe that there are more injuries than deaths. This allows us to conclude that the incidents have increased, but the total damage has stayed nearly the same (apart from the Las Vegas shooting).\n\nFurthermore, additional gun violence demographics include that most victims and suspects are aged between 18 and 30, and most suspects are male. Additionally, the most common type of guns are handguns while the most dangerous guns are the AR-15 and the AK-47. However, the distribution of incident types for each gun is the relatively the same.\n\nFinally, while alarming, we found it very interesting that the District of Columbia has the highest number of gun violence incidents even though it is our capital, and it has some of the strictest gun laws in the nations. We also found it bizzare that in terms of states, Alaska had the highest number of gun violence incidents.","3555a307":"After adjusting for population, it is suprising to see that the District of Columbia has the most number of incidents. You would think otherwise with it being our capital, and it having some of the highest security along with gun laws in this country. \n\nFurthermore, not only that, but Illinois is now ranked 6, behind South Carolina and Lousiana.\n\nFinally, notice that California has dramatically shifted to the right hand sind of the plot. This is because after adjusting for population size, per every 100,000 people, there are only 41 incidents which shows that California is a relatively safe state.","d2e17977":"## <font color='brightred'> Table of Contents <\/font>\n1. [Movitation & Introduction](#1)\n2. [Questions](#2)\n3. [Glimpse of Data](#3)\n    1. [Statistical Overview of the Data](#4)\n4. [Preparing the Data](#5)\n    1. [Check for Missing Data](#6)\n    2. [Data Cleaning](#7)\n5. [Time Series Analysis](#8)\n6. [Geographical Analysis](#9)\n    1. [Non-Calibrated for Population](#10)\n    2. [Population Adjusted](#11)\n    3. [Most Impactful Incidents](#12)\n7. [People Involved in Gun Violence](#13)\n    1. [Characteristics of Age](#14)\n    2. [Characteristics of Gender](#15)\n8. [Gun Involved in Gun Violence](#16)\n    1. [The Most Used Guns](#17)\n    2. [Guns that Caused the Most Harm](#18)\n    3. [Distribution of Incidents among Different Types of Guns](#19)\n9. [Conclusion](#20)\n10. [Citations](#21)\n\n","5de50bb1":"To achieve our goal, we need to focus on these two data columns.","3c95d522":"# <a id='12'>6.3 Most Impactful Incidents<\/a>","797abbb0":"## <a id='21'>10. Citations\/References<\/a>","1bdac361":"# <a id='8'>5. Time Series Analysis<\/a>","c7b171c9":"## <a id='14'>7.1 Characteristics of Age<\/a>","225f5cb4":"![](https:\/\/cdn3.volusion.com\/vrfwc.byruj\/v\/vspfiles\/photos\/60531-2.jpg?1539359654)","041fb55a":"# <a id='9'>6. Geographical Analysis<\/a>","240b5d02":"However, we may notice that knowing the total amount of each type of gun is not sufficient to have a better knowledge on which gun is the most dangerous one. To better undertand this, we should consider the total and average death or injured number that are correlated with each type of guns.","6ef10a2f":"For the code below, we firstly create new columns with each cell is a dictionary with keys contains index of people involve and values contains corresponding information.","92339bc4":"# <a id='10'>6.1 Non-Calibrated for Population<\/a>","93c5b6a3":"We further compliment the analysis from before with additional information above. From the information above, it is clear that we will need to clean some of the data.","9cadae6f":"As the above number showing, there are some missing data regarding the age and gender information of both victims and suspects. Then, we can visulize the distribution of age for victims.","ac57f9e5":"From the plots above, it can be seen that even though the total amount of incidents involving each gun type can be different, the distribution of types of incidents they were involved are similar. The top five incidents type for these six types of guns are assault weapon, non-shooting incident, possession, raid\/arrest and drug involvement. This may indicate that our deduction from the previous graph may be wrong -- guns like handgun are also likely to be invloved in irregular and dangerous incidents. Namely, the enormous damage handguns has caused are not only happened in situations like self defence but situations like drug involvement. Therefore, different types of gun do not have significant differences in terms of incidents they were invloved. Every type of guns could be used if the suspects intend to do harm regardless of the characteristics of the incident.","e63eeb10":"Incidents per Year:\n1. There seems to be an upward rising trend in gun violence incidents from 2014 to 2017. From 51,000 in 2014 to 61,000 in 2017\n2. Since the data concludes on March 2018 (only 3 months into the year of 2018), there isn't enough data to determine the number of incidents in 2018. However, with only 3 months worth of data, it is astounding that 12,000 incidents have already been reported. \n\nAverage Number of Incidents per Month Over the Years:\n1. It seems like the most amount of incidents occur the summer season, with July and August having the highest count of incidents. Both months have approximately 4000 gun violence incidents.\n\nAverage Number of Incidents per Day over Years:\n1. Again by observing the plot from above, the weekend is when most incidents occur. On Sunday, the frequency (in counts) of incidents over the years is 6000.","5813b38f":"# <a id='3'>3. Glimpse of Data<\/a>","28bee7c4":"Without adjusting for different sizes of population in different states, it isn't suprising to see California as one of the top states with the highest number of gun violence incidents.\n\nIn addition, the number one state with the highest incidents seems to be Illinois, and the number one city with the highest incidents seems too be Chicago.\n\nBut since this is not adjusted for the different sizes of population, is any of this valid? We will see shortly.","fba9cdaf":"## <a id='20'>9. Conclusion<\/a>","e6572d05":"While some state that gun violence in America has decreased, over the last 50 years, the number of premeditated mass shootings along with the magnitude of each shooting has increased. For example, the high profile Columbine high school massacre, which took place in 1999, was a highly planned attack that led to the death of 13 individuals while injuring 25 others. Last year, on October 1st, 2017, the perpetrator, Stephen Paddock, released gunfire at a concert in Las Vegas. The casualties included about 58 deaths, and over 500 injuries. The Las Vegas mass shooting is now known as the largest shooting in recent history. Therefore, because there is an upward trend in magnitude for each mass shooting along with other statistics which illustrate the magnitude of everyday gun violence, the statement that gun violence is decreasing seems questionable. Therefore, my partner and I are interested in digging deeper into the issue of gun violence in America to uncover some potential truths.\n\nThe significance of researching gun violence is that it can help shed some light on our pre-existing domain knowledge of gun violence in America. Apart from that, it can help determine other insightful information such as the highest percentage of gun violence based on location, collateral damage caused by gun violence, and many more. Currently, we hypothesize that gun violence is larger than it has ever been, and so, our goal is to really analyze that notion significantly. While performing our exploratory data analysis, we hope to get a broader understanding of the dynamics of gun violence in America and draw various staggering conclusions on the state of gun violence.","3fec1bc3":"## <a id='17'>8.1 The Most Used Guns<\/a>","1297e419":"In this section, we will observe some of the different time trends of gun violence over the following years: 2013 to 2018.","acc49a10":"# <a id='4'>4. Preparing the Data<\/a>","ece8aaa6":"Above there are two time series plots. One indicating the number of total incidents over all the years, and another indicating the number of incidents only in 2017. From both plots, we can observe that the number of injuries has been higher than the number of individuals killed from gun violence. Frightengly, in 2017, you can see the anomaly in the data, its the Las Vegas massacre where at over 500 people are injured.","180eb3ab":"It can be seen that even though the average damage 223 Rem [AR-15] caused is the highest, the total damage it caused is not as high as that by handgun. This indicates that for guns like AK-47 or 223 Rem, most of the people would not use it. However, once they were being used, the damage they cause could be pretty high. \n\nTherefore, it is reasonable for us to wonder why different types of guns caused different average loss. One plausiable assumption may be certain types of guns like AK-47 are more likely to be involved in some dangerous incident types like mass shooting but for common weapon like handgun, it is not so likely. To discover this, we did the following analysis.\n","cc842986":"As we can see above, the column of gun type also cannot be used directly. We need to make it into a dictionary with keys of gun type and values of the amount each gun type involve.","1a39d5bb":"# <a id='16'>8. Gun involved in Gun Violence <\/a>\n\nAfter reasoning data by space,time and people, we try to also discover insights in terms characteristics of gun. This can be accomplished by exploring the gun type column. For instance, we could make a basic bar graph to show the count of each gun type, sorting descendingly. From graph like this, we can locate the most used gun by suspects. Also, we can calculate the degree of severity of the gun defined by the total number of killings and injured and see which type of gun is the most dangerous. \n","cf5efcf6":"1. A good amount of our inspiration came from the Kaggle notebook Deep Exploration of Gun Violence in US created by Shivam Bansal. It was inevitable that we wo[](http:\/\/)uld come across the notebook while learning about the dataset. Also, we have referred other great kagglers' works to accomplish this project. Thanks for all of you.\n2. The folium map from above is completely from the Kaggle notebook, but we really liked the visualization. So, we adapted it, and included in our visualization. ","202ca4ae":"To analyze this feature, we may use columns participant_age_group ,participant_gender and participant_type. As we can see below, the original columns are not easy to be intepret. We need some functions to make new clean columns.","e11a9678":"#### 223 Rem [AR-15]","ccb1a152":"## <a id='7'>4.2 Data Cleaning<\/a>","d04ae8b7":"# <a id='2'> 2. Questions <\/a>","137045ab":"## <a id='6'>4.1 Check for missing data<\/a>","691b2832":"As we can see above, we still need some cleaning before plotting and it may be complex.","46dd0de0":"## <a id='15'>7.2 Characteristics of Gender<\/a>"}}