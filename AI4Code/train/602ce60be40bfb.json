{"cell_type":{"c1239ed4":"code","022ca39c":"code","b7625ae2":"code","40aab3db":"code","5bf7fdc7":"code","f91823be":"code","8f44cb96":"code","6802183c":"code","7955e04c":"code","6718c4bc":"code","7f49802b":"code","b05d1cfe":"code","35469d45":"code","eee5b2a7":"code","2f61e96f":"code","fa223097":"code","368752c5":"code","6254592d":"code","90d6fbca":"code","f0dcc2fc":"code","6d5312e6":"code","9c9e3b98":"code","f9231db4":"code","56652c06":"code","fbfdb935":"code","a5e8cbf4":"code","511f29d2":"code","f8c24bfb":"markdown"},"source":{"c1239ed4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","022ca39c":"import numpy as np\nimport pandas as pd","b7625ae2":"df = pd.read_csv(\"\/kaggle\/input\/passenger-list-for-the-estonia-ferry-disaster\/estonia-passenger-list.csv\")\ndf.head()","40aab3db":"df.describe","5bf7fdc7":"df.dtypes","f91823be":"df.isnull().sum()","8f44cb96":"temp = ['Country','Firstname','Lastname','Sex','Category']\nfor i in temp:\n    print('************ Value Count in', i, '************')\n    print(df[i].value_counts())\n    print('')","6802183c":"df.shape","7955e04c":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","6718c4bc":"sns.countplot(x=df['Survived'],hue='Category',data=df)","7f49802b":"import plotly.graph_objects as go\n\nlabels = df.Country.value_counts().index\nvalues = df.Country.value_counts().values\n\nfig = go.Figure(data=[go.Pie(labels=labels, textinfo='label+percent', values=values)])\nfig.show()","b05d1cfe":"pd.crosstab(df['Sex'],df['Category'])","35469d45":"df.groupby(\"Sex\")['Age'].mean().plot.bar()","eee5b2a7":"males_survived= df['Sex'][(df['Sex']=='M') & (df['Survived']==1)].count()\n        \ntotal_males =  df['Sex'][df['Sex']=='M'].count()\nprint(\"Percentage of Males who survived = \",(males_survived\/total_males)*100)","2f61e96f":"females_survived= df['Sex'][(df['Sex']=='F') & (df['Survived']==1)].count()\n        \ntotal_females =  df['Sex'][df['Sex']=='F'].count()\nprint(\"Percentage of Females who survived = \",(females_survived\/total_females)*100)","fa223097":"df = pd.get_dummies(df)\n","368752c5":"x = df.drop(['Survived'],axis=1)\ny = df['Survived']","6254592d":"from sklearn.model_selection import train_test_split as tts \ntrain_x,test_x,train_y,test_y = tts(x,y,test_size=0.1,random_state=1,stratify=y)","90d6fbca":"from sklearn.linear_model import LogisticRegression as LogReg\nfrom sklearn.metrics import roc_auc_score as ras","f0dcc2fc":"logreg = LogReg()\nlogreg.fit(train_x,train_y)","6d5312e6":"train_predict = logreg.predict_proba(train_x)\ntrain_predict","9c9e3b98":"train_preds = train_predict[:,1]\ntrain_preds\n","f9231db4":"for i in range(0,len(train_preds)):\n    if(train_preds[i]>0.55):\n        train_preds[i] = 1\n    else:\n        train_preds[i] = 0\n\nk = ras(train_preds,train_y)\nprint(\"Training score =\",k)","56652c06":"test_predict = logreg.predict_proba(test_x)\ntest_predict","fbfdb935":"test_preds = test_predict[:,1]\ntest_preds","a5e8cbf4":"for i in range(0,len(test_preds)):\n    if(test_preds[i]>0.55):\n        test_preds[i] = 1\n    else:\n        test_preds[i] = 0\n\nsp = ras(test_preds,test_y)\nprint(\"Test score = \",sp)","511f29d2":"my_submission = pd.DataFrame({'Id': test.Id, 'SurvivalPrediction': sp})\npd.to_csv('submission.csv', index=False)","f8c24bfb":"# This is basically a model to predict the survival of the ESTONIAN DISASTER , it is my first time on Kaggle do drop in some suggestions on how to make it better :)\n"}}