{"cell_type":{"51ec80d1":"code","da525239":"code","684d2b38":"code","611328e8":"code","0299cf6b":"code","950b12f0":"code","b7876875":"code","4232ddb3":"code","a7e4c2f5":"code","89239d14":"code","b605707f":"code","86c649e7":"code","d89df3ce":"code","05231dbe":"code","52579896":"code","b4db1dda":"code","0ca09e73":"code","9491e05f":"code","9b19d1d4":"code","1a17b633":"code","8c71f762":"code","311f4a21":"code","303758c1":"code","51f6d6d2":"code","62b44827":"code","9bfa5de0":"code","4d0df4e1":"code","358e6c71":"code","e7ee0b7c":"code","2f9e1cc8":"code","d32a2b99":"code","21fb50e7":"code","474d589b":"code","92878614":"code","694bb4db":"code","9db46203":"code","9c49e786":"code","473b2f68":"markdown","8e96345d":"markdown","c2096a26":"markdown","752c877d":"markdown","015365a3":"markdown","28acef80":"markdown","23af5d74":"markdown","e8d64611":"markdown","eb87b141":"markdown","2eb2ca1d":"markdown","e207f040":"markdown","96e9ff02":"markdown","89f40bf3":"markdown","250e40ec":"markdown","abf377fc":"markdown","caa0baaf":"markdown","5fc6f045":"markdown","17989383":"markdown","4470dcc3":"markdown","8c9dce0a":"markdown","1f9ca2f4":"markdown","b791efc4":"markdown","637cfc58":"markdown","347a6d04":"markdown","877a6547":"markdown","a8828f69":"markdown","488d5b0f":"markdown","de510711":"markdown"},"source":{"51ec80d1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","da525239":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom sklearn.preprocessing import LabelEncoder","684d2b38":"df=pd.read_excel('\/kaggle\/input\/superstore\/US Superstore data.xls')\ndf.head()","611328e8":"#row,column count of data\ndf.shape","0299cf6b":"#column names of table\ndf.columns","950b12f0":"#check data type of columns\/attributes\ndf.dtypes","b7876875":"df.isnull().sum()","4232ddb3":"#Dropping  Row ID column and assigning to df\ndf=df.drop('Row ID',axis=1)\ndf.head()","a7e4c2f5":"df['Country'].value_counts()","89239d14":"#dropping Country column\ndf=df.drop('Country',axis=1)\ndf.head()","b605707f":"df['Category'].unique()","86c649e7":"#number of products in each category \ndf['Category'].value_counts()","d89df3ce":"#number of Sub-categories products are divided.\ndf['Sub-Category'].nunique()","05231dbe":"#number of products in each sub-category\ndf['Sub-Category'].value_counts()","52579896":"#Lets see how sub-categories are distributed wrt to category\nplt.figure(figsize=(16,8))\nplt.bar('Sub-Category','Category',data=df,color='y')\nplt.show()","b4db1dda":"plt.figure(figsize=(12,10))\ndf['Sub-Category'].value_counts().plot.pie(autopct=\"%1.1f%%\")\nplt.show()","0ca09e73":"df.groupby('Sub-Category')['Profit','Sales'].agg(['sum']).plot.bar()\nplt.title('Total Profit and Sales per Sub-Category')\n# plt.legend('Profit')\n# plt.legend('Sales')\nplt.show()","9491e05f":"#number of products available in store\ndf['Product Name'].nunique()","9b19d1d4":"df['Product Name'].value_counts()","1a17b633":"#Distribution of Top 10 Products\nplt.figure(figsize=(12,10))\ndf['Product Name'].value_counts().head(10).plot.pie(autopct=\"%1.1f%%\")","8c71f762":"#Count of Sub-Category region wise\nplt.figure(figsize=(15,8))\nsns.countplot(x=\"Sub-Category\", hue=\"Region\", data=df)\nplt.show()","311f4a21":"df['Cost']=df['Sales']-df['Profit']\ndf['Cost'].head()","303758c1":"df['Profit %']=(df['Profit']\/df['Cost'])*100","51f6d6d2":"#Profit Percentage of first 5 product names\ndf.iloc[[0,1,2,3,4],[14,20]]","62b44827":"#Products with high Profit Percentage \ndf.sort_values(['Profit %','Product Name'],ascending=False).groupby('Profit %').head(5)","9bfa5de0":"df['Customer ID'].nunique()","4d0df4e1":"#Top 10 customers who order frequently\ndf_top10=df['Customer Name'].value_counts().head(10)\ndf_top10","358e6c71":"fig=plt.figure(figsize=(10,8))\nax = fig.add_subplot(111)\ns=sns.countplot('Segment', data = df)\nfor s in ax.patches:\n    ax.annotate('{:.0f}'.format(s.get_height()), (s.get_x()+0.15, s.get_height()+1))\nplt.show()","e7ee0b7c":"#Top 20 Customers who benefitted the store\nsortedTop20 = df.sort_values(['Profit'], ascending=False).head(20)\nfig = plt.figure(figsize=(12,8))\nax = fig.add_subplot(111)\np = sns.barplot(x='Customer Name', y='Profit',hue='State',palette='Set1', data=sortedTop20, ax=ax)\nax.set_title(\"Top 20 profitable Customers\")\nax.set_xticklabels(p.get_xticklabels(), rotation=75)\nplt.tight_layout()\nplt.show()","2f9e1cc8":"#number of unique orders\ndf['Order ID'].nunique()","d32a2b99":"#Calculating the time taken for an order to ship and converting the no. of days in int format\ndf['Shipment Duration']=(pd.to_datetime(df['Ship Date'])-pd.to_datetime(df['Order Date'])).dt.days\ndf['Shipment Duration']","21fb50e7":"df.iloc[:,[0,3,21]]","474d589b":"#creating function and appending customer and order info to it.\ndef agg_customer(x):\n    d = []\n    d.append(x['Order ID'].count())\n    d.append(x['Sales'].sum())\n    d.append(x['Profit %'].mean())\n    d.append(pd.to_datetime(x['Order Date']).min())\n    d.append(pd.to_datetime(x['Order Date']).max())\n    d.append(x['Product Name'].unique())\n    d.append(x['City'].unique())\n    return pd.Series(d, index=['#Purchases','Total_Sales','Average Profit % gained','First_Purchase_Date','Latest_Purchase_Date','Products Purchased','Location_Count'])","92878614":"#grouping based on Customer ID and applying the function we created above\ndf_agg = df.groupby('Customer ID').apply(agg_customer)\ndf_agg","694bb4db":"#extracting the year of order\ndf['order year']=df['Order Date'].dt.year\ndf['order year'].head()","9db46203":"#Calculating Profit gained in each Category\nfig=plt.figure(figsize=(16,8))\nax = fig.add_subplot(111)\nsns.barplot('order year','Profit %',hue='Sub-Category',palette='Paired',data=df)\nfor o in ax.patches:\n    ax.annotate('{:.0f}'.format(o.get_height()), (o.get_x()+0.15, o.get_height()+1))\nplt.show()","9c49e786":"#Sales per year\ndf.groupby('order year')['Sales','Profit %'].agg(['sum']).plot.bar()\nplt.title('Year wise Total Sales & % of profit gained')","473b2f68":"**LETS LOOK AT THE DATA WRT TO CUSTOMER LEVEL**","8e96345d":"**EXPLORATORY DATA ANALYSIS**","c2096a26":"**WAIT**.... Check for unnecessary columns and drop them if not required\n\n'Row ID' column is nothing but the serial number so we can drop this column.","752c877d":" The store has wide variety of Office Supplies especially in Binders and Paper department.","015365a3":"Online shopping has grown in popularity over the years, mainly because people find it convenient and easy to bargain shop from the comfort of their home or office. \n\nOne of the most enticing factor about online shopping, particularly during a holiday season, is it alleviates the need to wait in long lines or search from store to store for a particular item.","28acef80":"![images.jfif](attachment:images.jfif)","23af5d74":"Lets check if there are any missing values in the data","e8d64611":"From this graph, one can easily makeout which Category & Sub-Category to choose when they are looking to purchase a product","eb87b141":"People residing in Western part of US tend to order more from superstore.","2eb2ca1d":"To understand the data better. Lets create some new columns like Cost,Profit%","e207f040":"Lets find out some more details about each Customer like total products purchased,Products they purchase,First Purchase Date,Last Purchase Date,Location from where the Customer placed an order.","96e9ff02":"Sales of the store has increased every year resulting in high profit margin by the end of 2017.","89f40bf3":"Lets look at the data of a superstore in US and get some insights from it.","250e40ec":"We can analyse the data further in 3 different ways\n\n> * PRODUCT LEVEL ANALYSIS\n> * CUSTOMER LEVEL ANALYSIS\n> * ORDER LEVEL ANALYSIS","abf377fc":"Lets look at the product categories available to shop for customers","caa0baaf":"****IMPORTING LIBRARIES****\n","5fc6f045":"The distribution is highest in Consumer Segment.","17989383":"****READING THE DATA****","4470dcc3":"Lets us read the data and take a look at first few rows.","8c9dce0a":" We see that majority of the Profitable Customers are from New York and Michigan State.","1f9ca2f4":"Highest profit is earned in Copiers while Selling price for Chairs and Phones is extremely high compared to other products.\n\nAnother interesting fact- people dont prefer to buy Tables and Bookcases from Superstore. Hence these departments are in loss.","b791efc4":"****INTRODUCTION****","637cfc58":"Lets do some do some Analysis with Order details of the data","347a6d04":"![shopping.JPG](attachment:shopping.JPG)","877a6547":"There are no missing values. Hence we can go exploratory analysis part directly.","a8828f69":"![online-shopping.jpg](attachment:online-shopping.jpg)","488d5b0f":"Retailers selling Phone,Binders,Papers have got 100% Profit in their Business.","de510711":"Clearly the data is for US country only, so we can drop the 'Country' column as we dont need any analysis to be done based on it."}}