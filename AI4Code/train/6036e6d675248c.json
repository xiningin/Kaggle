{"cell_type":{"46fd344a":"code","9af502d3":"code","833e32f2":"code","3c1938b0":"code","1b316d5e":"code","cb79805e":"code","74172f91":"code","0694ed2a":"code","c86a12de":"markdown","1e0a155d":"markdown","4d2ec41c":"markdown","e8b8a117":"markdown","73d3ee93":"markdown","f2b00959":"markdown","69ae9c64":"markdown","bce563fd":"markdown"},"source":{"46fd344a":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')","9af502d3":"BloodType = {'A': 30,'B': 24,'AB': 8,'O': 38}\n\nfig = plt.figure(dpi=100)\nax = fig.add_axes([0,0,1,1])\nax.set_title('Observation Blood Type' , fontsize=18,loc='left')\nax.set_xlabel('Blood Type' , fontsize=10)\nax.set_ylabel('Size' , fontsize=10)\nax.bar(BloodType.keys(),BloodType.values(), color =['crimson', 'steelblue','orange','green'])","833e32f2":"fig, ax = plt.subplots()\nax.pie(BloodType.values(),labels = BloodType.keys())\nplt.show()","3c1938b0":"fig, ax = plt.subplots()\nax.pie(BloodType.values(),labels = BloodType.keys(),radius = 2,colors=['crimson','steelblue','orange','green'], autopct='%1.1f%%',textprops = {\"fontsize\":14},wedgeprops={\"edgecolor\":'white'})\nplt.show()","1b316d5e":"plt.pie(BloodType.values(), explode = (0.1, 0.1, 0.1, 0.1),labels = BloodType.keys(),shadow = True,colors=['crimson','steelblue','orange','green'],wedgeprops = { 'linewidth' : 2, 'edgecolor' : \"#232328\" },autopct='%1.0f%%',startangle = 90)\nplt.show()","cb79805e":"Number_Of_Participants = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])\nHighest_Score = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])\n\nplt.title('Simple Scatter Plot', fontsize=18, loc='left')\nplt.xlabel('Number Of Participants',fontsize=12)\nplt.ylabel('Highest Score',fontsize=12)\nplt.scatter(Number_Of_Participants, Highest_Score,c='orange',marker=\"+\")","74172f91":"Sample_predict = np.random.normal(170, 10, 300)\n\nplt.hist(Sample_predict, color = 'crimson', histtype='step')\nplt.show()","0694ed2a":"diff = {'Bar':  ['Presents categorical data', 'Displays distinct elements','Plots data into separate rectangular bars','Columns can be rearranged','Columns are separated by gaps or spaces','Individual bars represent categorical data','Width of bars is always identical'],\n        'Histogram': ['Presents quantitative data', 'Displays elements that are grouped together and are considered ranges','Plots data into bins, which group values into specific intervals','Columns cannot be rearranged','Columns are not separated by gaps or spaces','Individual bars represent a single value or a range of values','Width of bars may not be identical']}\ndf = pd.DataFrame (diff,columns = ['Bar','Histogram'])\ndf","c86a12de":"## Difference between a Bar Chart and a Histogram","1e0a155d":"## Third\nwe want to make our chart more beautiful in appearance by changing the parameters","4d2ec41c":"## Q1\nWe have the blood type information of 100 people. \n## First\nwe want to display this data in a bar chart","e8b8a117":"## Q2\nThe number of participants in the mock exams and the highest score obtained in the students' final exam are as follows\nDisplay them in a ***scatter*** chart","73d3ee93":"## This notebook is third task of Finger bootCamp \n\nthis week we learn ***matplotlib*** to visualize our data and data frame","f2b00959":"## Second\nwe intend to use the previous data in a pie chart","69ae9c64":"## Bar                                                   \n* Presents categorical data                                         \n* Displays distinct elements                                \n* Plots data into separate rectangular bars                  \n* Columns can be rearranged                                  \n* Columns are separated by gaps or spaces                    \n* Individual bars represent categorical data                 \n* Width of bars is always identical                          \n\n## Histogram\n* Presents quantitative data\n* Displays elements that are grouped together and are considered ranges\n* Plots data into bins, which group values into specific intervals\n* Columns cannot be rearranged\n* Columns are not separated by gaps or spaces\n* Individual bars represent a single value or a range of values\n* Width of bars may not be identical","bce563fd":"## Q3\nby Using numpy, \nGenerate 300 random data with a normal distribution with a mean of 171 and a standard deviation of 10 and Display them in a histogram chart."}}