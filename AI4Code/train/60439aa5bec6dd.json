{"cell_type":{"6b45f45c":"code","027dd822":"code","a49f553e":"code","8ad01493":"code","957e9666":"code","a277dfd0":"code","c4259f99":"code","903e7c9f":"code","5ae86967":"code","4c26a6fd":"code","f0dafffa":"code","11bf7376":"code","0704eb43":"code","e54f4258":"code","08d7ddfb":"code","3fd32dd2":"code","b9ea4d89":"code","1bbe31cf":"code","88272f8b":"code","929766b6":"code","0eb54d4d":"code","02117fe3":"code","04146324":"code","ef3dbbbd":"code","9e4a46e3":"code","0a3f4fd7":"code","309ca7d7":"markdown","b0678c0d":"markdown","3bcc6c78":"markdown","8b18c3ef":"markdown","b8a6bfeb":"markdown","e6622702":"markdown","4cce99f0":"markdown","386205cf":"markdown","25e7b078":"markdown","33c23e0e":"markdown","4e5af22b":"markdown"},"source":{"6b45f45c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","027dd822":"train = pd.read_csv(\"..\/input\/train.csv\")\n\ntrain.head()","a49f553e":"sns.heatmap(train.isnull(), yticklabels = False, cbar = False, cmap = 'viridis')","8ad01493":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',data=train)","957e9666":"sns.countplot(x = 'Survived', hue = 'Sex', data = train)","a277dfd0":"sns.countplot(x='Survived',hue='Pclass',data=train)","c4259f99":"sns.distplot(train['Age'].dropna(),kde=False,bins=40)","903e7c9f":"sns.countplot(x='SibSp',data=train)","5ae86967":"sns.distplot(train['Fare'],kde=False,bins=40, color = 'darkgreen')","4c26a6fd":"plt.figure(figsize = (10,6))\n\nsns.boxplot(x = 'Pclass', y = 'Age', data = train)","f0dafffa":"# define average age according to Pclass\n\ndef defage(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 37\n\n        elif Pclass == 2:\n            return 29\n\n        else:\n            return 24\n\n    else:\n        return Age","11bf7376":"train['Age'] = train[['Age','Pclass']].apply(defage,axis=1)","0704eb43":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False)","e54f4258":"train.head()","08d7ddfb":"train.drop('Cabin',axis=1,inplace=True)","3fd32dd2":"# now get_dummies used to remove categorical variables \n\nsex = pd.get_dummies(train['Sex'],drop_first=True)\nembark = pd.get_dummies(train['Embarked'],drop_first=True)","b9ea4d89":"train.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","1bbe31cf":"train = pd.concat([train,sex,embark],axis=1)","88272f8b":"train.head()","929766b6":"from sklearn.model_selection import train_test_split","0eb54d4d":"X_train, X_test, y_train, y_test = train_test_split(train.drop('Survived',axis=1), \n                                                    train['Survived'], test_size=0.30, \n                                                    random_state=101)\n","02117fe3":"from sklearn.linear_model import LogisticRegression","04146324":"logmodel = LogisticRegression()\nlogmodel.fit(X_train,y_train)","ef3dbbbd":"predictions = logmodel.predict(X_test)","9e4a46e3":"from sklearn.metrics import classification_report","0a3f4fd7":"print(classification_report(y_test,predictions))","309ca7d7":"### Train Test Split","b0678c0d":"### Trainning and Predicting","3bcc6c78":"# Logistic Regression To predict Titanic Deaths","8b18c3ef":"### Evaluation\n\nWe can check precision,recall,f1-score using classification report!","b8a6bfeb":"### Missing Data\n\nfirst we have to deal with missing data.","e6622702":"## Building a Logistic Regression Model","4cce99f0":"### Data Cleaning\n\nWe want to fill in missing age data instead of just dropping the missing age data rows. One way to do this is by filling in the mean age of all the passengers (imputation). However we can be smarter about this and check the average age by passenger class and Sex.","386205cf":"### Analysing The Surving Count","25e7b078":"\n## DATA ANALYSIS","33c23e0e":"### Analysing Age Chart","4e5af22b":"Roughly 20 percent of the Age data is missing. The proportion of Age missing is likely small enough for reasonable replacement with some form of imputation. Looking at the Cabin column, it looks like we are just missing too much of that data to do something useful with at a basic level. We'll probably drop this later, or change it to another feature like \"Cabin Known: 1 or 0\""}}