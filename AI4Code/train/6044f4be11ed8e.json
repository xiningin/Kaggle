{"cell_type":{"1003ab3e":"code","6ffdc058":"code","5a6e7b69":"code","f4f06d99":"code","4deb64f9":"code","d1b2dfec":"code","7704238c":"code","bb68d3de":"code","bec447ef":"code","762cfd98":"code","e23ccaf0":"code","94fc112c":"code","e6b8f347":"code","2dd77510":"code","b2587cee":"code","8955a0d7":"code","9503201e":"code","14011269":"code","70443e08":"code","dfc04dec":"code","69636546":"code","31c95462":"markdown"},"source":{"1003ab3e":"import time\nstart_time = time.time()\n\n%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","6ffdc058":"from fastai.vision import *\nfrom fastai import *","5a6e7b69":"from pathlib import Path\npath = Path('..\/input\/')","f4f06d99":"df = pd.read_csv(path\/'train_v2.csv')\ndf.head()","4deb64f9":"tfms = get_transforms(flip_vert=True, max_lighting=0.1, max_zoom=1.05, max_warp=0.)","d1b2dfec":"np.random.seed(42)\nsrc = (ImageItemList.from_csv(path, 'train_v2.csv', folder='train-jpg', suffix='.jpg')\n       .random_split_by_pct(0.2)\n       .label_from_df(label_delim=' '))","7704238c":"data = (src\n        .transform(tfms, size=128)\n        .databunch()\n        .normalize(imagenet_stats)\n       )","bb68d3de":"data.show_batch(rows = 3)","bec447ef":"arch = models.resnet50","762cfd98":"acc_02 = partial(accuracy_thresh, thresh=0.2)\nf_score = partial(fbeta, thresh=0.2)\nlearn = create_cnn(data, arch, metrics=[acc_02, f_score], path='..\/working\/')","e23ccaf0":"learn.lr_find()\nlearn.recorder.plot()","94fc112c":"learn.fit_one_cycle(3, slice(2.29E-02,0.01))","e6b8f347":"learn.save('stage-1-rn50')","2dd77510":"learn.unfreeze()\nlearn.lr_find()\nlearn.recorder.plot()","b2587cee":"learn.fit_one_cycle(3, slice(7.59E-05))","8955a0d7":"learn.save('stage-2-rn50')\nlearn.export()","9503201e":"test = ImageItemList.from_folder(path\/'test-jpg-v2').add(ImageImageList.from_folder(path\/'test-jpg-additional'))\nlen(test)","14011269":"learn = load_learner('..\/working\/', test=test)\npreds, _ = learn.get_preds(ds_type=DatasetType.Test)","70443e08":"thresh = 0.2\nlabelled_preds = [' '.join([learn.data.classes[i] for i,p in enumerate(pred) if p > thresh]) for pred in preds]","dfc04dec":"submission = pd.read_csv(path\/'sample_submission_v2.csv')\nsubmission['tags'] = labelled_preds\nsubmission.to_csv('fastai_resnet50.csv')","69636546":"print('Kernel Runtime: {0} minutes '.format((time.time() - start_time)\/60.0))","31c95462":"> We can do transfer learning by changing the size of the data and learning using same **learner**. But Kaggle kernel gets Runtime error as of no sufficient memory"}}