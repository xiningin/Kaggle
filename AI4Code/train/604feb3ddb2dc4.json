{"cell_type":{"b57efdd8":"code","22c11ce9":"code","81543455":"code","c813ea13":"code","7d5619a0":"code","631e3ca0":"code","9b96efc7":"code","76337a0a":"code","fe9b91e6":"code","bef4b0da":"code","2712f97f":"code","3b82c40e":"code","5e83bf51":"code","f3c2247b":"code","12a1c349":"code","8d884c95":"code","4920b898":"code","a94e6107":"code","0fe8375b":"code","3b475534":"code","47bbf426":"code","a93e1b72":"code","fc87553e":"code","23a6ac7b":"code","8a6295c2":"code","ca26a684":"code","f700f526":"code","17f9dc90":"code","f1b42767":"code","ee270e00":"code","0041d230":"code","c5d01846":"code","9b1c3fc8":"code","efb68830":"code","9ce01654":"code","69017e6a":"code","bd7d1f13":"code","adcec84c":"code","2afb30f8":"code","5241dd5d":"code","f2c297c2":"markdown","806f6be0":"markdown","f84d158b":"markdown","538147dc":"markdown","1f743963":"markdown","eeecc0fd":"markdown","fb69de59":"markdown","c587aeac":"markdown","68e6d7f2":"markdown","ce57427f":"markdown","59a75eb0":"markdown","4a65bcb2":"markdown","6d87b4c6":"markdown","1197d3e6":"markdown"},"source":{"b57efdd8":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","22c11ce9":"!pip install git+https:\/\/github.com\/fastai\/fastai","81543455":"from fastai.vision import *","c813ea13":"#import fastai\n#print(fastai.__version__)\nimport fastai.utils.collect_env; \nfastai.utils.collect_env.show_install(1)\n#1.0.47 dev pass","7d5619a0":"path = Path('\/kaggle\/input\/')\npath.ls()","631e3ca0":"!ls \/kaggle\/input","9b96efc7":"!ls \/kaggle\/input\/train-jpg -l |grep \"^-\"|wc -l\n!ls \/kaggle\/input\/test-jpg-v2 -l |grep \"^-\"|wc -l","76337a0a":"df = pd.read_csv(path\/'train_v2.csv')\ndf.head()","fe9b91e6":"tfms = get_transforms(flip_vert=True, max_lighting=0.1, max_zoom=1.05, max_warp=0., max_rotate=15.)","bef4b0da":"np.random.seed(42)\nsrc = (ImageList.from_csv(path, 'train_v2.csv', folder='train-jpg', suffix='.jpg')#.use_partial_data(0.01)\n       .split_by_rand_pct(0.2)\n       .label_from_df(label_delim=' '))\ndata = (src.transform(tfms, size=128)\n        .databunch(num_workers=0).normalize(imagenet_stats))","2712f97f":"data.show_batch(rows=3, figsize=(12,9))","3b82c40e":"arch = models.densenet121","5e83bf51":"acc_02 = partial(accuracy_thresh, thresh=0.19)\nf_score = partial(fbeta, thresh=0.19)\nlearn = cnn_learner(data, arch, metrics=[acc_02, f_score], model_dir='\/kaggle\/working\/')","f3c2247b":"learn.lr_find()\nlearn.recorder.plot()","12a1c349":"lr = 0.01","8d884c95":"learn.fit_one_cycle(5, slice(lr))","4920b898":"learn.save('stage-1-rn50')","a94e6107":"learn.unfreeze()","0fe8375b":"learn.lr_find()\nlearn.recorder.plot()","3b475534":"learn.fit_one_cycle(5, slice(1e-5, lr\/5))","47bbf426":"learn.save('stage-2-rn50')","a93e1b72":"data = (src.transform(tfms, size=256)\n        .databunch(num_workers=0).normalize(imagenet_stats))\n\nlearn.data = data\ndata.train_ds[0][0].shape","fc87553e":"learn.freeze()","23a6ac7b":"learn.lr_find()\nlearn.recorder.plot()","8a6295c2":"lr=1e-2\/2","ca26a684":"learn.fit_one_cycle(5, slice(lr))","f700f526":"learn.save('stage-1-256-rn50')","17f9dc90":"learn.unfreeze()","f1b42767":"learn.fit_one_cycle(5, slice(1e-5, lr\/5))","ee270e00":"learn.recorder.plot_losses()","0041d230":"learn.save('stage-2-256-rn50')","c5d01846":"learn.export(fname='\/kaggle\/working\/export.pkl',destroy=True)","9b1c3fc8":"#test = ImageList.(from_folder(path\/'test-jpg').add(ImageList.from_folder(path\/'test-jpg-additional')) #two folder\ntest = (ImageList.from_folder(path\/'test-jpg-v2'))#.use_partial_data(0.01))\nlen(test)","efb68830":"learn_test = load_learner('\/kaggle\/working\/', test=test, num_workers=0, bs=1)\npreds, _ = learn_test.get_preds(ds_type=DatasetType.Test)\npreds_tta, _ = learn_test.TTA(ds_type=DatasetType.Test)\n#preds = np.mean(np.exp(log_preds))","9ce01654":"print(preds[:5])","69017e6a":"thresh = 0.15\nlabelled_preds = [' '.join([learn_test.data.classes[i] for i,p in enumerate(pred) if p > thresh]) for pred in preds]\nfnames = [f.name[:-4] for f in learn_test.data.test_ds.x.items]\ndf = pd.DataFrame({'image_name':fnames, 'tags':labelled_preds}, columns=['image_name', 'tags'])\ndf.to_csv('submission_015.csv', index=False)","bd7d1f13":"thresh = 0.18\nlabelled_preds = [' '.join([learn_test.data.classes[i] for i,p in enumerate(pred) if p > thresh]) for pred in preds]\nfnames = [f.name[:-4] for f in learn_test.data.test_ds.x.items]\ndf = pd.DataFrame({'image_name':fnames, 'tags':labelled_preds}, columns=['image_name', 'tags'])\ndf.to_csv('submission_018.csv', index=False)","adcec84c":"thresh = 0.19\nlabelled_preds = [' '.join([learn_test.data.classes[i] for i,p in enumerate(pred) if p > thresh]) for pred in preds]\nfnames = [f.name[:-4] for f in learn_test.data.test_ds.x.items]\ndf = pd.DataFrame({'image_name':fnames, 'tags':labelled_preds}, columns=['image_name', 'tags'])\ndf.to_csv('submission_019.csv', index=False)","2afb30f8":"thresh = 0.20\nlabelled_preds = [' '.join([learn_test.data.classes[i] for i,p in enumerate(pred) if p > thresh]) for pred in preds]\nfnames = [f.name[:-4] for f in learn_test.data.test_ds.x.items]\ndf = pd.DataFrame({'image_name':fnames, 'tags':labelled_preds}, columns=['image_name', 'tags'])\ndf.to_csv('submission_020.csv', index=False)","5241dd5d":"thresh = 0.21\nlabelled_preds = [' '.join([learn_test.data.classes[i] for i,p in enumerate(pred) if p > thresh]) for pred in preds]\nfnames = [f.name[:-4] for f in learn_test.data.test_ds.x.items]\ndf = pd.DataFrame({'image_name':fnames, 'tags':labelled_preds}, columns=['image_name', 'tags'])\ndf.to_csv('submission_021.csv', index=False)","f2c297c2":"### fine tune the network","806f6be0":"### check the data object","f84d158b":"### check the detail of enviroment","538147dc":"## 4. Train Network","1f743963":"## 3. Create Network","eeecc0fd":"### data augment","fb69de59":"## 1. Prepare Env","c587aeac":"## 5. Predict","68e6d7f2":"## 2. Prepare Training Data ","ce57427f":"## 6. Submission","59a75eb0":"\n### To get the latest vertion of fastai (optional)","4a65bcb2":"### read training data","6d87b4c6":"### count files","1197d3e6":"# Planet: Multi-label classification \n\nThis kernel will show how  to classify the multi-labled image data of planet with fastai v1.0.48+.\n\n\nref : [fast-ai-v3-lesson-3-planet](https:\/\/www.kaggle.com\/hortonhearsafoo\/fast-ai-v3-lesson-3-planet)"}}