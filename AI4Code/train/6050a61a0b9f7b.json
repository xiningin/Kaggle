{"cell_type":{"7c22a56e":"code","067f15cb":"code","959a8127":"code","b9d8514c":"code","b585a6cb":"code","66e18078":"code","c76a826e":"code","5275ac9a":"code","194bb62b":"markdown","83542dd6":"markdown"},"source":{"7c22a56e":"!pip install mtcnn","067f15cb":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport cv2\nfrom matplotlib import pyplot as plt\nfrom mtcnn import MTCNN","959a8127":"img0=cv2.imread('..\/input\/human-faces\/Humans\/1 (10).png')\nimg= cv2.cvtColor(img0, cv2.COLOR_BGR2RGB)","b9d8514c":"plt.imshow(img,cmap=\"gray\")\nplt.axis(\"off\")  \nplt.show()","b585a6cb":"detector = MTCNN()","66e18078":"def mosaic(src, ratio=0.01):\n    small = cv2.resize(src, None, fx=ratio, fy=ratio, interpolation=cv2.INTER_NEAREST)\n    return cv2.resize(small, src.shape[:2][::-1], interpolation=cv2.INTER_NEAREST)\n\ndef mtcnn_mosaic(image) : \n    result = detector.detect_faces(image)\n    print(result)\n    for face in zip(result):\n        x,y,width,height=face[0]['box']\n        mosaic_image=mosaic(image[y:(y+height),x:(x+width)])\n        image[y:(y+height),x:(x+width)]=mosaic_image\n    return image","c76a826e":"imgMOS=mtcnn_mosaic(img)","5275ac9a":"plt.imshow(imgMOS,cmap=\"gray\")\nplt.axis(\"off\")  \nplt.show()","194bb62b":"https:\/\/github.com\/ipazc\/mtcnn","83542dd6":"# detector = MTCNN()"}}