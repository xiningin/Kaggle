{"cell_type":{"c2f50499":"code","56f5acc1":"code","e73471f8":"code","413fac17":"code","263f8d58":"code","2934205f":"code","f58c748c":"code","d9ac66b5":"code","ad97d128":"code","e2ce3799":"code","04a0d5ae":"code","e0460bcc":"code","7de2386f":"markdown","fd6e3032":"markdown","fc0a1744":"markdown","b429c5a2":"markdown","5ecf663a":"markdown","7d5299ce":"markdown","97af154c":"markdown"},"source":{"c2f50499":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split # Import train_test_split function\nfrom sklearn import svm #Import svm model\nfrom sklearn import metrics #Import scikit-learn metrics module for accuracy calculation\nfrom sklearn.metrics import confusion_matrix,roc_curve,roc_auc_score,accuracy_score, plot_confusion_matrix,classification_report","56f5acc1":"df = pd.read_csv('..\/input\/heartdataset\/heart.csv')","e73471f8":"df.head()","413fac17":"df.describe()","263f8d58":"df.plot(kind = 'scatter',x = 'age', y = 'chol',alpha = 0.5, color = 'red')\nplt.xlabel('Age')\nplt.ylabel('Cholesterol')\nplt.title('Age-Cholesterol Plot')","2934205f":"x = df.drop('target',axis = 1) \ny = df.target","f58c748c":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3,random_state=100)\n","d9ac66b5":"from sklearn.model_selection import GridSearchCV\nml = svm.SVC()\n\nparam_grid = {'C': [ 1, 10, 100, 1000,10000], \n              'gamma': [1,0.1,0.01,0.001,0.0001],\n              'kernel': ['rbf']} \ngrid = GridSearchCV(ml, param_grid, refit = True, verbose = 1,cv=15)\n\ngrid_search=grid.fit(x_train, y_train)","ad97d128":"print(grid_search.best_params_)","e2ce3799":"accuracy = grid_search.best_score_ *100\nprint(\"Accuracy for our training dataset with tuning is : {:.2f}%\".format(accuracy) )","04a0d5ae":"y_test_hat=grid.predict(x_test)\ntest_accuracy=accuracy_score(y_test,y_test_hat)*100\ntest_accuracy\nprint(\"Accuracy for our testing dataset with tuning is : {:.2f}%\".format(test_accuracy) )","e0460bcc":"confusion_matrix(y_test,y_test_hat)\ndisp=plot_confusion_matrix(grid, x_test, y_test,cmap=plt.cm.Blues)","7de2386f":"**Finding Test-Model Accuracy**","fd6e3032":"**Plotting a Confusion Matrix**","fc0a1744":"**Fetching Best Hyperparameters**","b429c5a2":"**Splitting dataset into Train and Test Set**","5ecf663a":"**Creating and Training SVM Classifier Modal**","7d5299ce":"**Exploratory Data Analysis**","97af154c":"**Data Preprocessing**"}}