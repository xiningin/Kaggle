{"cell_type":{"0909ebfc":"code","2cc36e71":"code","6a5ff247":"code","aa55e76f":"code","615b0aa7":"code","4770f54a":"code","106ef4da":"code","1b8c5ee5":"code","327ca131":"code","09bf8b0e":"code","fcd0bf1b":"code","e82d8a19":"code","401d7903":"code","ae81c549":"code","3324e828":"code","0e008db5":"code","844407ed":"code","0a826648":"code","e6fbb4ec":"code","4a8abd4d":"code","f2477df3":"code","dbbcb00a":"markdown","18de0f5a":"markdown","bfb4cd96":"markdown","c0bab043":"markdown","f21bacf8":"markdown","283ededa":"markdown","f563c7c5":"markdown","899b23c0":"markdown","3ff22dfe":"markdown","1bb74a7b":"markdown","5262cd39":"markdown","056c9ebd":"markdown","cb6321fd":"markdown","eaf77fa5":"markdown","ac6aec54":"markdown","ca1bd7e4":"markdown","cc6a4ab1":"markdown","0d97a472":"markdown","b62d62b7":"markdown"},"source":{"0909ebfc":"import os\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nimport sys\nimport PIL\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator","2cc36e71":"data = pd.read_csv('..\/input\/narcissistic-personality-inventory-test\/NPI\/data.csv')\nprint(data.describe())\ndata.sample(6)","6a5ff247":"col_names = ['score', 'influencing', 'modesty', 'easy_to_bait', \n'compliments', 'world_ruler', 'avoid_responsibility',\n 'self_attention', 'success', 'special', 'leader',\n'assertive', 'authoritarian', 'manipulator',\n'insisting_respect', 'likes_self_body', 'understands_people',\n'takes_responsibility', 'wants_to_achieve', 'likes_to_look_at_self_body',\n'shows_off', 'confident_in_actions', 'independent', 'good_storyteller',\n'recieve_stuff_from_ppl', 'gets_whats_deserves', 'recieve_compliment',\n'will_to_power', 'fashionista', 'likes_mirrors', 'center_of_attention',\n'lives_their_ways', 'being_authority', 'being_leader', 'goes_to_be_great',\n'missionary', 'born_leader', 'biography', 'ppl_notice_look', 'more_capable',\n 'extraordinary', 'elapse', 'gender', 'age']\nind = [1,1,1,2,2,1,2,1,2,2,1,1,1,1,2,1,2,2,2,2,1,2,2,1,1,2,1,2,1,1,1,2,1,1,2,1,1,1,1,2]\ndata = data.set_axis(col_names, axis=1, inplace=False)\nfor i, column in enumerate(data.iloc[:,1:41]):\n    if i==42:\n        break\n    c = data[column]\n    for num_i in range(len(c)):\n        if c[num_i] == ind[i]:\n            c[num_i] = 1\n        else:\n            c[num_i] = 0\n    data[column] = c\n    \nfor i in range(len(data['gender'])):\n    if data['gender'][i] == 1:\n        data['gender'][i] = \"male\"\n    if data['gender'][i] == 2:\n        data['gender'][i] = \"female\"\n    if data['gender'][i] == 3:\n        data['gender'][i] = \"other\"\n    if data['gender'][i] == 0:\n        data['gender'][i] = \"unknown\"\n","aa55e76f":"data.sample(6)","615b0aa7":"import warnings\nwarnings.filterwarnings('ignore')\nmean = data.groupby(by=[\"age\", \"gender\"]).mean()\ndf = data.iloc[:,1:41]\nage = data['age']\ngender = data['gender']\ndf['age'] = age\ndf['gender'] = gender\ndf = df.groupby(by=['age', 'gender']).sum()\ndf","4770f54a":"sums_by_age = pd.DataFrame(df.sum())\nsns.set_context('paper')\nf, ax = plt.subplots(figsize = (6,15))\nsns.set_color_codes('pastel')\nclrs = ['grey' if (x < 5000) else 'red' for x in sums_by_age[0] ]\nsns.barplot(x = 0, y =list(sums_by_age.index),data = sums_by_age,\n            edgecolor = 'black',  palette=clrs)\n\nax.legend(ncol = 2, loc = 'lower right')\nsns.despine(left = True, bottom = True)\nplt.show()","106ef4da":"pd.set_option('display.max_rows', None)\npd.set_option('display.max_columns', None)\npd.set_option('display.width', None)\npd.set_option('display.max_colwidth', -1)\ntop = pd.DataFrame(df.columns.values[np.argsort(-df.values, axis=1)[:, :3]], \n                  index=df.index,\n                  columns = ['1st Max','2nd Max','3rd Max']).reset_index()\ntop","1b8c5ee5":"female = top.loc[top['gender'] == \"female\"]\nfemale = female.iloc[:, 2:5]\nf = []\n\nfor column in female:\n    c = list(female[column])\n    for item in c:\n        f.append(item)\n    \nwordcloud= WordCloud(background_color=\"white\", max_words=10000).generate(\" \".join(f))\n\nplt.figure(figsize=[10,10])\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")","327ca131":"male = top.loc[top['gender'] == \"male\"]\nmale = male.iloc[:, 2:5]\nf = []\n\nfor column in male:\n    c = list(male[column])\n    for item in c:\n        f.append(item)\n    \nwordcloud= WordCloud(background_color=\"white\", max_words=10000).generate(\" \".join(f))\n\nplt.figure(figsize=[10,10])\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")","09bf8b0e":"other = top.loc[top['gender'] == \"other\"]\nother= other.iloc[:, 2:5]\nf = []\n\nfor column in other:\n    c = list(other[column])\n    for item in c:\n        f.append(item)\n    \nwordcloud= WordCloud(background_color=\"white\", max_words=10000).generate(\" \".join(f))\n\nplt.figure(figsize=[10,10])\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")","fcd0bf1b":"mean = mean.reset_index()\nfirst = mean.loc[mean['age'] < 26]\nsecond = mean.loc[(mean['age'] >= 26) & (mean['age'] < 50)]\nthird = mean.loc[(mean['age'] >= 50) & (mean['age'] < 75)]\nfourth = mean.loc[(mean['age'] >= 75) & (mean['age'] < 100)]\nbeyond = mean.loc[mean['age'] >= 100]","e82d8a19":"other = top.loc[top['age'] < 26]\nother= other.iloc[:, 2:5]\nf = []\n\nfor column in other:\n    c = list(other[column])\n    for item in c:\n        f.append(item)\n    \nwordcloud= WordCloud(background_color=\"white\", max_words=10000).generate(\" \".join(f))\n\nplt.figure(figsize=[10,10])\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")","401d7903":"sns.set_context('paper')\nsns.set(font_scale=2)\nf, ax = plt.subplots(figsize = (25,5))\nsns.set_color_codes(\"dark\")\nsns.barplot(x = 'age', y ='score',data = first, hue = 'gender',\n            edgecolor = 'black', color = 'r')\n\nax.legend(ncol = 2, loc = 'upper left', prop={'size': 15})\nax.set(ylim=(0, 35))\nsns.despine(left = True, bottom = True)\nplt.show()","ae81c549":"other = top.loc[(top['age'] >= 26) & (top['age'] < 50)]\nother= other.iloc[:, 2:5]\nf = []\n\nfor column in other:\n    c = list(other[column])\n    for item in c:\n        f.append(item)\n    \nwordcloud= WordCloud(background_color=\"white\", max_words=10000).generate(\" \".join(f))\n\nplt.figure(figsize=[10,10])\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")","3324e828":"sns.set_context('paper')\nsns.set(font_scale=2)\nf, ax = plt.subplots(figsize = (25,5))\nsns.set_color_codes(\"dark\")\nsns.barplot(x = 'age', y ='score',data = second, hue = 'gender',\n            edgecolor = 'black', color = 'b')\n\nax.legend(ncol = 2, loc = 'upper left', prop={'size': 15})\nax.set(ylim=(0, 35))\nsns.despine(left = True, bottom = True)\nplt.show()","0e008db5":"other = top.loc[(top['age'] >= 50) & (top['age'] < 75)]\nother= other.iloc[:, 2:5]\nf = []\n\nfor column in other:\n    c = list(other[column])\n    for item in c:\n        f.append(item)\n    \nwordcloud= WordCloud(background_color=\"white\", max_words=10000).generate(\" \".join(f))\n\nplt.figure(figsize=[10,10])\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")","844407ed":"sns.set_context('paper')\nsns.set(font_scale=2)\nf, ax = plt.subplots(figsize = (25,5))\nsns.set_color_codes(\"dark\")\nsns.barplot(x = 'age', y ='score',data = third, hue = 'gender',\n            edgecolor = 'black', color = 'y')\n\nax.legend(ncol = 2, loc = 'upper left', prop={'size': 15})\nax.set(ylim=(0, 35))\nsns.despine(left = True, bottom = True)\nplt.show()","0a826648":"other = top.loc[(top['age'] >= 75) & (top['age'] < 100)]\nother= other.iloc[:, 2:5]\nf = []\n\nfor column in other:\n    c = list(other[column])\n    for item in c:\n        f.append(item)\n    \nwordcloud= WordCloud(background_color=\"white\", max_words=10000).generate(\" \".join(f))\n\nplt.figure(figsize=[10,10])\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")","e6fbb4ec":"sns.set_context('paper')\nsns.set(font_scale=2)\nf, ax = plt.subplots(figsize = (25,5))\nsns.set_color_codes(\"dark\")\nsns.barplot(x = 'age', y ='score',data = fourth, hue = 'gender',\n            edgecolor = 'black', color = 'g')\n\nax.legend(ncol = 2, loc = 'upper left', prop={'size': 15})\nax.set(ylim=(0, 35))\nsns.despine(left = True, bottom = True)\nplt.show()","4a8abd4d":"other = top.loc[top['age'] >= 100]\nother= other.iloc[:, 2:5]\nf = []\n\nfor column in other:\n    c = list(other[column])\n    for item in c:\n        f.append(item)\n    \nwordcloud= WordCloud(background_color=\"white\", max_words=10000).generate(\" \".join(f))\n\nplt.figure(figsize=[10,10])\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")","f2477df3":"sns.set_context('paper')\nsns.set(font_scale=2)\nf, ax = plt.subplots(figsize = (25,5))\nsns.set_color_codes(\"dark\")\nsns.barplot(x = 'age', y ='score',data = beyond, hue = 'gender',\n            edgecolor = 'black', color = 'c')\n\nax.legend(ncol = 2, loc = 'upper right', prop={'size': 15})\nax.set(ylim=(0, 35))\nsns.despine(left = True, bottom = True)\nplt.show()","dbbcb00a":"# Super Elders 75-100","18de0f5a":"![meme.jpg](attachment:ad9740d8-4813-425f-a42d-8621b45bc239.jpg)","bfb4cd96":"# Adults 25-49","c0bab043":"# Other genders narcissism","f21bacf8":"# ???? 100+","283ededa":"## Exploring narcissism further","f563c7c5":"# Overall tendency in narcissism","899b23c0":"# Reconstructing data\n### \"Q\" this and \"Q\" that in column names means nothing, so lets fill it with some sense to explore. I summarised each question with some kind of narcissistic trait to name a column instead of a Q's. Also i changed values themselfs based on presence of a narcissistic trait: if its 0 - there is no trait, if 1 - there is one.","3ff22dfe":"# From zoomer to boomer: narcissistic traits across generations","1bb74a7b":"# Import libraries and data","5262cd39":"# Summarizing data across the ages","056c9ebd":"# Top 3 traits across genders and ages","cb6321fd":"## Female narcissism","eaf77fa5":"# Fun part: Summary and how narcissism changes trough time and genders","ac6aec54":"# Questions\nQ1. 1= I have a natural talent for influencing people. 2=I am not good at influencing people.  **influencing 1**  \nQ2. 1=Modesty doesn't become me. 2=I am essentially a modest person.  **modesty 1**  \nQ3. 1=I would do almost anything on a dare. 2=I tend to be a fairly cautious person.  **easy_to_bait 1**  \nQ4. 1=When people compliment me I sometimes get embarrassed. 2=I know that I am good because everybody keeps telling me so.  **compliments\n 2**  \nQ5. 1=The thought of ruling the world frightens the hell out of me. 2=If I ruled the world it would be a better place.  **world_ruler 2**  \nQ6. 1=I can usually talk my way out of anything. 2=I try to accept the consequences of my behavior.  **avoid_responsibility 1**  \nQ7. 1=I prefer to blend in with the crowd. 2=I like to be the center of attention.  **self_attention 2**  \nQ8. 1=I will be a success. 2=I am not too concerned about success.  **success 1**  \nQ9. 1=I am no better or worse than most people. 2=I think I am a special person. **special 2**  \nQ10. 1=I am not sure if I would make a good leader. 2=I see myself as a good leader.  **leader 2**  \nQ11. 1=I am assertive. 2=I wish I were more assertive.  **assertive 1**  \nQ12. 1=I like to have authority over other people. 2=I don't mind following orders.  **authoritarian 1**  \nQ13. 1=I find it easy to manipulate people. 2=I don't like it when I find myself manipulating people.  **manipulator 1**  \nQ14. 1=I insist upon getting the respect that is due me. 2=I usually get the respect that I deserve.  **insisting_respect 1**  \nQ15. 1=I don't particularly like to show off my body. 2=I like to show off my body.  **likes_self_body 2**  \nQ16. 1=I can read people like a book. 2=People are sometimes hard to understand.  **understands_people 1**  \nQ17. 1=If I feel competent I am willing to take responsibility for making decisions. 2=I like to take responsibility for making decisions.  **takes_responsibility 2**  \nQ18. 1=I just want to be reasonably happy. 2=I want to amount to something in the eyes of the world.  **wants_to_achieve 2**  \nQ19. 1=My body is nothing special. 2=I like to look at my body.  **likes_to_look_at_self_body 2**  \nQ20. 1=I try not to be a show off. 2=I will usually show off if I get the chance. **shows_off 2**  \nQ21. 1=I always know what I am doing. 2=Sometimes I am not sure of what I am doing.  **confident_in_actions 1**  \nQ22. 1=I sometimes depend on people to get things done. 2=I rarely depend on anyone else to get things done.  **independent 2**  \nQ23. 1=Sometimes I tell good stories. 2=Everybody likes to hear my stories.  **good_storyteller 2**  \nQ24. 1=I expect a great deal from other people. 2=I like to do things for other people.  **recieve_stuff_from_ppl 1**  \nQ25. 1=I will never be satisfied until I get all that I deserve. 2=I take my satisfactions as they come.  **gets_whats_deserves 1**  \nQ26. 1=Compliments embarrass me. 2=I like to be complimented.  **recieve_compliment 2**  \nQ27. 1=I have a strong will to power. 2=Power for its own sake doesn't interest me.  **will_to_power 1**  \nQ28. 1=I don't care about new fads and fashions. 2=I like to start new fads and fashions.  **fashionista 2**  \nQ29. 1=I like to look at myself in the mirror. 2=I am not particularly interested in looking at myself in the mirror.  **likes_mirrors 1**  \nQ30. 1=I really like to be the center of attention. 2=It makes me uncomfortable to be the center of attention.  **center_of_attention 1**  \nQ31. 1=I can live my life in any way I want to. 2=People can't always live their lives in terms of what they want.  **lives_their_ways 1**  \nQ32. 1=Being an authority doesn't mean that much to me. 2=People always seem to recognize my authority.  **being_authority 2**  \nQ33. 1=I would prefer to be a leader. 2=It makes little difference to me whether I am a leader or not.  **being_leader 1**  \nQ34. 1=I am going to be a great person. 2=I hope I am going to be successful.  **goes_to_be_great 1**  \nQ35. 1=People sometimes believe what I tell them. 2=I can make anybody believe anything I want them to.  **missionary 2**  \nQ36. 1=I am a born leader. 2=Leadership is a quality that takes a long time to develop.  **born_leader 1**  \nQ37. 1=I wish somebody would someday write my biography. 2=I don't like people to pry into my life for any reason.  **biography 1**  \nQ38. 1=I get upset when people don't notice how I look when I go out in public. 2=I don't mind blending into the crowd when I go out in public.  **ppl_notice_look 1**  \nQ39. 1=I am more capable than other people. 2=There is a lot that I can learn from other people.  **more_capable 1**  \nQ40. 1=I am much like everybody else. 2=I am an extraordinary person.  **extraordinary 2**  ","ca1bd7e4":"# Elders 50-75","cc6a4ab1":"## Male narcissism","0d97a472":"# Youngest demographic 0-25","b62d62b7":"## Thank you so much for going trough this notebook!\nLeave an upvote if you like it please \ud83d\udc49\ud83d\udc48"}}