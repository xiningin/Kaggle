{"cell_type":{"5eb9ca05":"code","1d9df0cc":"code","8f880f29":"code","b61c3ffd":"code","11a19d5c":"code","cc88237e":"code","bd01cb21":"code","06bfa4fa":"code","41f0e6c7":"code","7dac1fa0":"code","80ae0d6e":"code","f502ae1a":"code","bd7b4078":"code","6fccf3c2":"code","2459ec00":"code","6b00f6fe":"code","22c97f9e":"code","d3e6b5fe":"code","59e20c8c":"code","65273a38":"code","13aacd79":"code","ca75e1a7":"code","07df7afe":"code","a4760b2d":"code","bc0c5748":"code","5b1ab973":"code","44395b00":"code","55b1e0d4":"code","c9157d75":"code","391ac38d":"markdown","2122892c":"markdown","56143e38":"markdown","d6b460e3":"markdown","410c4897":"markdown"},"source":{"5eb9ca05":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1d9df0cc":"data=pd.read_csv('\/kaggle\/input\/melanoma-data\/Train.csv')\ntest=pd.read_csv('\/kaggle\/input\/melanoma-data\/Test.csv')\n\ndata.head()","8f880f29":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\ndata_corr=data.corr(method='spearman')\n\nplt.figure(figsize=(10,7))\nsns.heatmap(data=data_corr , annot=True)","b61c3ffd":"from scipy.stats import skew\n\ndata.skew()","11a19d5c":"(np.log1p(data['err_malign'])).skew()\n","cc88237e":"X=data.drop(columns=['tumor_size'])\nY=data['tumor_size']","bd01cb21":"from sklearn.model_selection import train_test_split\n\nX_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.1,random_state=7)\nprint(X_train.shape)\nprint(X_test.shape)\nprint(Y_train.shape)\nprint(Y_test.shape)","06bfa4fa":"from sklearn.preprocessing import PowerTransformer\nfrom sklearn.preprocessing import MinMaxScaler\n\npw=PowerTransformer()\nms=MinMaxScaler()\n\nX_train=ms.fit_transform(X_train)\nX_test=ms.transform(X_test)\n\nY_train=Y_train.values.reshape(-1,1)\nY_test=Y_test.values.reshape(-1,1)\n\nY_train=pw.fit_transform(Y_train)\nY_test=pw.transform(Y_test)","41f0e6c7":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\n\nl_model=LinearRegression()\n\nl_model.fit(X_train,Y_train)\n\ny_prediction=l_model.predict(X_test)\n\nrmse=np.sqrt(mean_squared_error(y_prediction,Y_test))\n\nprint(rmse)","7dac1fa0":"data['ratio']=data['damage_size']\/data['exposed_area']\n","80ae0d6e":"data['ratio_mean']=(data['ratio']+data['damage_ratio'])\/2","f502ae1a":"import seaborn as sns\nplt.figure(figsize=(10,7))\ncor_mat= data.corr(method='spearman')\nsns.heatmap(data=cor_mat,annot=True)","bd7b4078":"data.drop(columns=['damage_size','exposed_area','ratio_mean'],inplace=True)","6fccf3c2":"import seaborn as sns\nplt.figure(figsize=(10,7))\ncor_mat= data.corr(method='spearman')\nsns.heatmap(data=cor_mat>.7,annot=True)","2459ec00":"X=data.drop(columns=['tumor_size'])\nY=data['tumor_size']","6b00f6fe":"from sklearn.model_selection import train_test_split\n\nX_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.1,random_state=7)\nprint(X_train.shape)\nprint(X_test.shape)\nprint(Y_train.shape)\nprint(Y_test.shape)","22c97f9e":"\n#from sklearn.preprocessing import PowerTransformer\n#from sklearn.preprocessing import MinMaxScaler\n\n#pw=PowerTransformer()\n#ms=MinMaxScaler()\n\n#X_train=ms.fit_transform(X_train)\n#X_test=ms.transform(X_test)\n\n#Y_train=Y_train.values.reshape(-1,1)\n#Y_test=Y_test.values.reshape(-1,1)\n\n#Y_train=pw.fit_transform(Y_train)\n#Y_test=pw.transform(Y_test)\n","d3e6b5fe":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\n\nl_model=LinearRegression()\n\nl_model.fit(X_train,Y_train)\n\ny_prediction=l_model.predict(X_test)\n\nrmse=np.sqrt(mean_squared_error(y_prediction,Y_test))\n\nprint(rmse)","59e20c8c":"from sklearn.linear_model import Ridge\nR_model=Ridge(alpha=0.3,random_state=2,solver='sag')\nR_model.fit(X_train,Y_train)\n\ny_test_predict=R_model.predict(X_test)\n\nrmse=np.sqrt(mean_squared_error(Y_test,y_test_predict))\n\n\nprint('RMSE={}'.format(rmse))","65273a38":"from sklearn.ensemble import RandomForestRegressor\n\nmodel = RandomForestRegressor(n_estimators =900)\n\nmodel.fit(X_train, Y_train)\ny_test_predict=model.predict(X_test)\n\nrmse=np.sqrt(mean_squared_error(Y_test,y_test_predict))\n\n\nprint('RMSE={}'.format(rmse))","13aacd79":"test=pd.read_csv('\/kaggle\/input\/melanoma-data\/Test.csv')","ca75e1a7":"test.head()","07df7afe":"test['ratio']=test['damage_size']\/test['exposed_area']","a4760b2d":"test.drop(columns=['damage_size','exposed_area'],inplace=True)","bc0c5748":"test.head()","5b1ab973":"y_test=model.predict(test)\nprint(y_test)","44395b00":"sample=pd.read_csv('\/kaggle\/input\/melanoma-data\/sample_submission.csv')\nsample","55b1e0d4":"sample['tumor_size'] = y_test\nsample.to_csv('y_test.csv',index=False)","c9157d75":"rmse=np.sqrt(mean_squared_error(sample,y_test))\nprint(rmse)","391ac38d":"# random forest regressor","2122892c":"# linear regression","56143e38":"# collinearity","d6b460e3":"# for prediction","410c4897":"# ridge"}}