{"cell_type":{"eb09b56e":"code","66111f4f":"code","da2dd120":"code","2ecc4f75":"code","88af1f77":"code","073a15d4":"code","f96c4c1c":"code","983a9be1":"code","44100b0d":"code","b103dc9f":"code","81a4d6fa":"code","713f3b92":"code","a6f1ab07":"code","c4a2c7c7":"code","9bbb7c89":"code","5727555a":"code","ebe60268":"code","072acfaa":"code","6bddeeb4":"code","c268ff22":"code","f81113be":"code","92fad168":"code","b6b7142f":"code","8381356d":"code","df1161d8":"code","5b994f47":"code","feea44ec":"code","16e88b9a":"code","58c6d827":"code","9bc35abd":"code","a2daad97":"code","43fa7ad3":"code","9ca3b16b":"code","f8beb95f":"code","49c58bad":"code","5f61d264":"code","2ec5d456":"code","30635b8a":"code","92f2fa9b":"code","e145bc94":"code","61955481":"code","67119d2a":"code","9d5fbd71":"code","88286f7c":"code","94f965c7":"code","b4e54aec":"code","6410e6ee":"code","7d34d1da":"code","1fea87e9":"code","4924ad89":"code","4fb0946e":"code","958f5324":"code","6c61666d":"code","1a08ee82":"code","386433cb":"code","60504db6":"code","191bae54":"code","d2d3e019":"code","21754ed3":"code","e557aa59":"code","99e5fb45":"code","325c614c":"code","b5275660":"code","951767cf":"code","398b12a6":"code","72aaf321":"code","4796178d":"code","462abdd5":"code","36a7ec78":"markdown","8cedcb01":"markdown","8147303c":"markdown","8a3a1255":"markdown","504b227c":"markdown","f3315aaf":"markdown","bb1ba5a4":"markdown","bb0246f4":"markdown","f0e08941":"markdown","72bc6dbd":"markdown","30f877d3":"markdown","3c407c2d":"markdown","aa84ece3":"markdown","49f95093":"markdown","ccd3163d":"markdown","7ae54f06":"markdown","5bfb4873":"markdown","acb55599":"markdown","fc55337d":"markdown"},"source":{"eb09b56e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","66111f4f":"titan = pd.read_csv(\"..\/input\/titanic\/train.csv\")","da2dd120":"titan.info()","2ecc4f75":"titan.head()","88af1f77":"sns.heatmap(titan.isnull())","073a15d4":"titan = titan.drop('Cabin',axis = 1)","f96c4c1c":"titan = titan.drop(labels = ['Name','Ticket'],axis = 1)","983a9be1":"titan.head()","44100b0d":"def clean_gender(x):\n    if x == 'male':\n        return 1\n    else:\n        return 0","b103dc9f":"titan['Is Male'] = titan[\"Sex\"].apply(lambda x : clean_gender(x))","81a4d6fa":"titan = titan.drop('Sex',axis = 1)\ntitan.head()","713f3b92":"titan['SibSp'].unique()","a6f1ab07":"sns.countplot(x = 'Survived',data = titan,hue = 'Pclass')","c4a2c7c7":"sns.countplot(x = 'Is Male',data = titan,hue = 'Survived')","9bbb7c89":"g = sns.FacetGrid(titan, col = 'Survived',size = 5)\ng.map(sns.distplot,'Fare')","5727555a":"plt.figure(figsize=(12,7))\nsns.countplot(x = 'Survived',data = titan,hue = 'Parch')","ebe60268":"fig = plt.figure(figsize=(12,7))\nsns.boxplot(x = 'Pclass',y = 'Age',data = titan)","072acfaa":"def impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 37\n\n        elif Pclass == 2:\n            return 29\n\n        else:\n            return 25\n\n    else:\n        return Age","6bddeeb4":"titan[\"Age\"] = titan[[\"Age\",\"Pclass\"]].apply(impute_age,axis = 1)","c268ff22":"sns.heatmap(titan.isnull())","f81113be":"sns.countplot(x = 'Survived',data = titan,hue = 'Embarked')","92fad168":"embark = pd.get_dummies(titan['Embarked'],drop_first=True)","b6b7142f":"titan = titan.drop('Embarked',axis = 1)","8381356d":"titan = pd.concat([titan,embark],axis = 1)","df1161d8":"titan.head()","5b994f47":"train = titan","feea44ec":"test = pd.read_csv(\"..\/input\/titanic\/test.csv\")","16e88b9a":"test.head()","58c6d827":"test = test.drop(\"Name Cabin Ticket\".split(),axis = 1)","9bc35abd":"test.head()","a2daad97":"test[\"Sex\"] = test[\"Sex\"].apply(lambda x : clean_gender(x))","43fa7ad3":"test.rename(columns={'Sex' : 'Is Male'},inplace = True)","9ca3b16b":"test.head()","f8beb95f":"embarked = pd.get_dummies(test['Embarked'],drop_first=True)\n","49c58bad":"test = test.drop('Embarked',axis = 1)","5f61d264":"test = pd.concat([test,embarked],axis = 1)","2ec5d456":"test.head()","30635b8a":"train.head()","92f2fa9b":"sns.heatmap(test.isnull())","e145bc94":"fig = plt.figure(figsize=(12,7))\nsns.boxplot(x = 'Pclass', y = \"Age\",data = test)","61955481":"def impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 42\n\n        elif Pclass == 2:\n            return 25\n\n        else:\n            return 23\n\n    else:\n        return Age","67119d2a":"test[\"Age\"] = test[[\"Age\",\"Pclass\"]].apply(impute_age,axis = 1)","9d5fbd71":"sns.heatmap(test.isnull())","88286f7c":"mean_fare = test[\"Fare\"].mean()\ndef cleanfare(x):\n    if pd.isnull(x):\n        return mean_fare\n    else:\n        return x","94f965c7":"test[\"Fare\"] = test[\"Fare\"].apply(lambda x : cleanfare(x))","b4e54aec":"sns.heatmap(test.isnull())","6410e6ee":"sns.heatmap(train.isnull())","7d34d1da":"train = train[[\"PassengerId\",\"Pclass\",\"Is Male\",\"Age\",\"SibSp\",\"Parch\",\"Fare\",\"Q\",\"S\",\"Survived\"]]","1fea87e9":"train.head()","4924ad89":"test.head()","4fb0946e":"from sklearn.preprocessing import MinMaxScaler","958f5324":"scaler = MinMaxScaler()","6c61666d":"scaled_train = scaler.fit_transform(train)","1a08ee82":"train[train.columns] = scaled_train","386433cb":"train.head()","60504db6":"scaled_test = scaler.fit_transform(test)\ntest[test.columns] = scaled_test","191bae54":"X = train.drop('Survived',axis = 1)\nY = train[\"Survived\"]","d2d3e019":"from sklearn.linear_model import LogisticRegression","21754ed3":"logmodel = LogisticRegression()","e557aa59":"logmodel.fit(X,Y)","99e5fb45":"predictions = logmodel.predict(test)","325c614c":"test = pd.read_csv(\"..\/input\/titanic\/test.csv\")","b5275660":"submission = pd.DataFrame(data = predictions,columns = [\"Survived\"])","951767cf":"submission[\"PassengerId\"] = test[\"PassengerId\"]","398b12a6":"submission = submission[[\"PassengerId\",\"Survived\"]]","72aaf321":"submission[\"Survived\"] = submission[\"Survived\"].apply(lambda x : np.int32(x))","4796178d":"submission.head()","462abdd5":"submission.to_csv(\".\/kaggle_submission.csv\",index = False)","36a7ec78":"Since the data values are far from each other therefore we have to scale the data first","8cedcb01":"**Applying the same data cleaning methods to the test data as well**","8147303c":"## Verdict","8a3a1255":"## Importing the dataset","504b227c":"Let's check for null values in our dataset","f3315aaf":"## Importing required libraries","bb1ba5a4":"Scaling the testing data as well","bb0246f4":"**The dataset is now ready to fit into the model**","f0e08941":"Since most of the data is missing for cabin, it is of no use for us<br>Therefore we will drop the columns Cabin,Name and Ticket","72bc6dbd":"Time to replace the missing age data with Average age from each passenger class","30f877d3":"If you're a female you're chances for survival increases","3c407c2d":"Most of the passengers who died were from the lower passenger classes","aa84ece3":"You can export this dataset using the following command :","49f95093":"Applying One hot encoding for the Embarked column","ccd3163d":"Reordering the train data to match the testing data","7ae54f06":"# Titanic Dataset \n**Using Logistic Regression to predict whether a passenger survived the titanic crash or not**<hr>","5bfb4873":"Importing test data again to get the original PassengerId which we lost due to scaling","acb55599":"**Model Score : 0.76**","fc55337d":"Let's preprocess the data before exploring"}}