{"cell_type":{"29412680":"code","2a2df6ab":"code","86bbeaa1":"code","13ad5f12":"code","a3d1ce18":"code","4bca2215":"code","882bab7a":"code","ec75794c":"code","15d42261":"code","3144ca50":"code","e5cb7336":"code","9f596847":"code","8b83c19a":"markdown","d57aa516":"markdown","010f35a4":"markdown","140a9957":"markdown","52e03f5d":"markdown","a983c580":"markdown","3d832b8c":"markdown","f1817a31":"markdown","2bf9dd98":"markdown","cefac4d7":"markdown","84ed6e43":"markdown","0bfdf716":"markdown","bf538e71":"markdown"},"source":{"29412680":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output. \n\nimport matplotlib.pyplot as plt \nimport numpy as np \nimport seaborn as sns \nplt.style.use('fivethirtyeight')  \nimport warnings\nwarnings.filterwarnings('ignore')  #this will ignore the warnings.it wont display warnings in notebook","2a2df6ab":"# We can see that the dataset has 10 levels and the corresponding salary paid to the employee\ndataset = pd.read_csv(\"..\/input\/Position_Salaries.csv\")\ndataset ","86bbeaa1":"# For the features we are selecting all the rows of column Level \n# represented by column position 1 or -1 in the data set.\nX=dataset.iloc[:,1:2].values  \n\n# for the target we are selecting only the salary column which \n#can be selected using -1 or 2 as the column location in the dataset\ny=dataset.iloc[:,2].values   \nX","13ad5f12":"from sklearn.linear_model import LinearRegression\nlin_reg=LinearRegression()\nlin_reg.fit(X,y)","a3d1ce18":"from sklearn.preprocessing import PolynomialFeatures\npoly_reg2=PolynomialFeatures(degree=2)\nX_poly=poly_reg2.fit_transform(X)\nlin_reg_2=LinearRegression()\nlin_reg_2.fit(X_poly,y)","4bca2215":"poly_reg3=PolynomialFeatures(degree=3)\nX_poly3=poly_reg3.fit_transform(X)\nlin_reg_3=LinearRegression()\nlin_reg_3.fit(X_poly3,y)","882bab7a":"plt.scatter(X,y,color='red')\nplt.plot(X,lin_reg.predict(X),color='blue')\nplt.title('Truth Or Bluff (Linear Regression)')\nplt.xlabel('Position Level')\nplt.ylabel('Salary')\nplt.show()","ec75794c":"plt.scatter(X,y,color='red')\nplt.plot(X,lin_reg_2.predict(poly_reg2.fit_transform(X)),color='blue')\nplt.plot(X,lin_reg_3.predict(poly_reg3.fit_transform(X)),color='green')\nplt.title('Truth Or Bluff (Polynomial Linear Regression)')\nplt.xlabel('Position Level')\nplt.ylabel('Salary')\nplt.show()","15d42261":"X_grid=np.arange(min(X),max(X),0.1) # This will give us a vector.We will have to convert this into a matrix \nX_grid=X_grid.reshape((len(X_grid),1))\nplt.scatter(X,y,color='red')\nplt.plot(X_grid,lin_reg_3.predict(poly_reg3.fit_transform(X_grid)),color='blue')\n#plt.plot(X,lin_reg_3.predict(poly_reg3.fit_transform(X)),color='green')\nplt.title('Truth Or Bluff (Polynomial Linear Regression)')\nplt.xlabel('Position Level')\nplt.ylabel('Salary')\nplt.show()","3144ca50":"lin_reg.predict([[6.5]])  # We are assuming the level of the employee is 6.5","e5cb7336":"lin_reg_2.predict(poly_reg2.fit_transform([[6.5]]))","9f596847":"lin_reg_3.predict(poly_reg3.fit_transform([[6.5]]))","8b83c19a":"### Ploynomial Linear Regression","d57aa516":"We can see that the linear regression predicted values if higher.So this is not a good model.We can see that Polynomial Linear regression has better prediction.Accuracy of Polynomial Linear regression increases with the increase in the degree of the Polynomial.","010f35a4":"### Polynomial Linear Regression \n\n\nPolynomial regression is a form of regression analysis in which the relationship between the independent variable `x` and the dependent variable `y` is modelled as an `n`th degree polynomial in `x`.\n\n<a href=\"https:\/\/imgur.com\/VWhAziI\"><img src=\"https:\/\/i.imgur.com\/VWhAziI.png\" title=\"source: imgur.com\" \/><\/a> \n\n\nWe use a polynomial regression when the **straight line** (like in Linear Regression) doesn\u2019t fit well our obervations and we want to obtain parabolic effect:\n\n<a href=\"https:\/\/imgur.com\/yUffONM\"><img src=\"https:\/\/i.imgur.com\/yUffONM.png\" title=\"source: imgur.com\" \/><\/a>  \n\nReference: [Polynomial Regression](https:\/\/medium.com\/data-py-blog\/polynomial-linear-regression-1f8117f6de2e)\n\nLet's take an example to explain Polynomial Regression.","140a9957":"We can see that by increasing the number of points in the X we can smooth out the curve.","52e03f5d":"Position and the Level of the employee represent the same thing.So in out machine learning model it is sufficient to consider only on feature.In this case we can select the column Level. \n\nWe will not be splitting the dataset as here we have only 10 data points.So we can consider all the values for out training purpose.","a983c580":"### Visualizing Plolynomial Linear Regression result","3d832b8c":"**6.3 Smoothing out the curve using more points on X axis**","f1817a31":"Here we have data of Salary of employees based on their designation.We will be using varies  regression methods to  predict the salary of an employee.This is a work in process and please do vote if you like my work.  \nReference: [Machine Learning A-Z\u2122: Hands-On Python & R In Data Science](https:\/\/www.udemy.com\/machinelearning\/)","2bf9dd98":"We can clearly see that the Polynimal Linear Regression model has much better result compared to Linear Regression Model.As we increase the degree of the polynomial regression the correlation increases.4th degree Polynomial Linear Regression will gives us the best correlation for salary data.","cefac4d7":"#### Linear Regression","84ed6e43":"We need not use feature scaling for this particular model ","0bfdf716":"**7. Predicting the salrary of the employee **","bf538e71":"### Visualizing Linear Regression result"}}