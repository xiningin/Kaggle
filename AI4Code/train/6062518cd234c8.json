{"cell_type":{"1634cddf":"code","b69ccc2d":"code","6f004e0e":"code","90007ebc":"code","7125927b":"code","19b4a2b6":"code","bddc7413":"code","7da6ae6c":"code","1b449d94":"code","4f56491f":"code","def5d7ab":"code","fa8ab54c":"code","63004562":"markdown","72a1b8f5":"markdown","eba6d865":"markdown"},"source":{"1634cddf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\nimport warnings\nimport matplotlib.pyplot as plt\n\n# Any results you write to the current directory are saved as output.","b69ccc2d":"amazon = pd.read_csv('..\/input\/AMZN_2006-01-01_to_2018-01-01.csv',index_col='Date', parse_dates=['Date'])","6f004e0e":"amazon.head()","90007ebc":"amazon['2012':'2018'].plot(subplots=True, figsize=(10,12), title=\"Amazon Stock from 2012 to 2018\")\nplt.show()","7125927b":"amazon['Change'] = amazon.High.div(amazon.High.shift())\namazon.Change.plot(figsize=(14,6))","19b4a2b6":"amazon.High.pct_change().mul(100).plot(figsize=(14,6))","bddc7413":"google = pd.read_csv(\"..\/input\/GOOGL_2006-01-01_to_2018-01-01.csv\", index_col='Date', parse_dates=['Date'])","7da6ae6c":"google['2012':'2018'].plot(subplots=True, figsize=(10,12), title=\"Google Stock from 2012 to 2018\")\nplt.show()","1b449d94":"microsoft = pd.read_csv('..\/input\/MSFT_2006-01-01_to_2018-01-01.csv',index_col='Date', parse_dates=['Date'])","4f56491f":"microsoft['2012':'2018'].plot(subplots=True, figsize=(10,12), title=\"Microsoft Stock from 2012 to 2018\")\nplt.show()","def5d7ab":"plt.figure(figsize=(15,8))\ngoogle.High.plot()\namazon.High.plot()\nmicrosoft.High.plot()\nplt.legend(['Google','Amazon','Microsoft'])\nplt.show()","fa8ab54c":"normGoogle = google.High.div(google.High.iloc[0]).mul(100)\nnormAmazon = amazon.High.div(amazon.High.iloc[0]).mul(100)\nnormMicrosoft = microsoft.High.div(microsoft.High.iloc[0]).mul(100)\nplt.figure(figsize=(15,8))\nnormGoogle.plot()\nnormAmazon.plot()\nnormMicrosoft.plot()\nplt.legend(['Google','Amazon','Microsoft'])\nplt.show()","63004562":"**This kernel is a work in progress**","72a1b8f5":"**Comparison after Normalizing**","eba6d865":"**Comparing high values of Amazon, Google and Microsoft (Without Normalizing)** "}}