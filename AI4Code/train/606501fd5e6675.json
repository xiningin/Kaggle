{"cell_type":{"8447acdf":"code","a5816074":"code","35fb6bbf":"code","d2d9f658":"code","5ab87e55":"code","aaebfd23":"code","82f8ccc2":"markdown"},"source":{"8447acdf":"from keras import backend as K\nimport tensorflow as tf\nimport numpy as np","a5816074":"def f2_micro(y_true, y_pred):\n    agreement = K.sum(K.round(K.clip(y_true * y_pred, 0, 1)))\n    total_true_positive = K.sum(K.round(K.clip(y_true, 0, 1)))\n    total_pred_positive = K.sum(K.round(K.clip(y_pred, 0, 1)))\n    recall = agreement \/ (total_true_positive + K.epsilon())\n    precision = agreement \/ (total_pred_positive + K.epsilon())\n    return (1+2**2)*((precision*recall)\/(2**2*precision+recall+K.epsilon()))","35fb6bbf":"y_true = kvar = K.variable(np.array([[1,1,0], [0,1,1], [0,0,0]]), dtype='float32')\ny_pred = kvar = K.variable(np.array([[0.6, 0.6, 0.4],[0.6, 0.2, 0.7], [0.2, 0.1, 1.1]]), dtype='float32')","d2d9f658":"K.eval(f2_micro(y_true, y_pred))","5ab87e55":"def f2_mean_example(y_true, y_pred):\n    agreement = K.sum(K.round(K.clip(y_true * y_pred, 0, 1)), axis=1)\n    true_positive = K.sum(K.round(K.clip(y_true, 0, 1)), axis=1)\n    pred_positive = K.sum(K.round(K.clip(y_pred, 0, 1)), axis=1)\n    recall = agreement \/ (true_positive + K.epsilon())\n    precision = agreement \/ (pred_positive + K.epsilon())\n    f2score = (1+2**2)*((precision*recall)\/(2**2*precision+recall+K.epsilon()))\n    return K.mean(f2score)","aaebfd23":"K.eval(f2_mean_example(y_true, y_pred))","82f8ccc2":"Example functions you can pass to keras to monitoring f2 scores during training.   "}}