{"cell_type":{"dfe83006":"code","25707753":"code","7aa63b0e":"code","46416669":"code","7adaec49":"code","625c651b":"code","77a50aaa":"code","e863247d":"code","1a90de16":"code","4727222a":"code","975aafcb":"code","173b984d":"code","c49f89aa":"code","f6c6c206":"code","db0d4142":"code","ac0d79e3":"code","551b9ca7":"code","875cbcbc":"code","08ebd1ed":"code","dd3448a5":"code","9ba2d846":"code","e541d842":"code","380ae634":"code","99929953":"code","d7013ec5":"code","b696cd73":"code","072d5fb7":"code","c3c59aab":"code","e6f2a818":"code","52f239d0":"code","19f7a7af":"code","723f1672":"code","e0da1bc2":"code","4507b1ea":"code","5b12a5e5":"code","a234515b":"code","ac94ee94":"code","c5755dac":"code","7591e164":"code","d56efd1c":"code","a6a5b286":"code","ea6bfdc6":"code","1b428727":"code","a62b1faa":"code","90ce57e0":"code","011c4e4d":"code","b4601c8a":"code","3320ad3f":"code","c3ad3623":"code","93461675":"markdown","41076d42":"markdown","af79ebf1":"markdown","a9b6df7b":"markdown","14d39262":"markdown","c758f0f2":"markdown","f05ad03b":"markdown","41f8fee1":"markdown","70537256":"markdown","b1298c4f":"markdown","338612e2":"markdown","bb150bcb":"markdown","9c0b3f6f":"markdown","e17832e9":"markdown","d6b6cd12":"markdown","48a55c88":"markdown","a8d7562e":"markdown","105a9d6f":"markdown","80e0ee1f":"markdown","45dd7930":"markdown","cfe01244":"markdown","11cd872d":"markdown","5c98718b":"markdown","ac3d8119":"markdown","d4ac1de8":"markdown","950479b8":"markdown","cfd57a55":"markdown","02f3f941":"markdown","bb6e5d1b":"markdown","3dd3963a":"markdown","c49b4c17":"markdown","59544c47":"markdown","621ab0e1":"markdown","65393d8f":"markdown","45dc6d5b":"markdown","65e3ca91":"markdown","a9aaeea2":"markdown","28d549ac":"markdown"},"source":{"dfe83006":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \ndf = pd.read_csv('\/kaggle\/input\/california-housing-data\/housing.csv')\ndf.head(10)","25707753":"df.info()","7aa63b0e":"#check the categorical names for ocean_proximity\ndf.ocean_proximity.unique()","46416669":"#check the rows with NaN in total_bedrooms \ndf[df.total_bedrooms.isna()].head()","7adaec49":"#check for duplicates \ndf[df.duplicated()]","625c651b":"#get the relevant stats for each variable \ndf.describe()","77a50aaa":"#get info for the categorical column \ndf.describe(include='O')","e863247d":"#get all the counts for ocean_proximity\ndf.ocean_proximity.value_counts()","1a90de16":"df.hist(bins=50,figsize=(15,20))\nplt.ylabel('Count')\nplt.show()","4727222a":"#remove all rows with at least 1 missing value \ndf.dropna(inplace=True)","975aafcb":"df.head()","173b984d":"#add some additional features \ndf['rooms_per_household'] = df.total_rooms\/df.households\ndf['population_per_household'] = df.population\/df.households\ndf['bedrooms_per_household'] = df.total_bedrooms\/df.households\ndf.head()","c49f89aa":"#check if there are any extreme values \ndf.rooms_per_household.nlargest(5)","f6c6c206":"df.rooms_per_household.nsmallest(5)","db0d4142":"df.bedrooms_per_household.nsmallest(5)","ac0d79e3":"#inspect the rows with suspicious values \ndf.loc[[1914,5916,8219,20248]]","551b9ca7":"df.describe()","875cbcbc":"df.head()","08ebd1ed":"df.median_house_value.hist(bins=100,figsize=(10,5))\nplt.title('Median House Value Histogram',fontsize=15)\nplt.xlabel('Median House Value',fontsize=12)\nplt.ylabel('Count',fontsize=12)","dd3448a5":"#check the correlation between the variables and the house value\ndf.corr().median_house_value.sort_values(ascending=False)","9ba2d846":"df.median_income.hist(bins=100,figsize=(10,5))\nplt.title('Median Income Histogram',fontsize=15)\nplt.xlabel('Median Income',fontsize=12)\nplt.ylabel('Count',fontsize=12)","e541d842":"#create a scatter between income and house value to see correlation \nimport seaborn as sns\nsns.set(font_scale=1.5)\nsns.jointplot(data=df,x='median_income',y='median_house_value',kind='reg',height=10)\nplt.show()","380ae634":"#create scatter to visualize house value by location \ndf.plot(kind=\"scatter\", x=\"longitude\", y=\"latitude\",\n                       s=df.population\/100, label=\"Population\", figsize = (15, 10),\n                       c=\"median_house_value\", cmap= \"coolwarm\",\n                       colorbar=True, alpha=0.4, fontsize = 15, sharex = False)\nplt.ylabel(\"Latitude\", fontsize=14)\nplt.xlabel(\"Longitude\", fontsize=14)\nplt.legend(fontsize=16)\nplt.show()","99929953":"#scale california image for backdrop \nimport matplotlib.image as mpimg\ncalifornia_img = mpimg.imread('\/kaggle\/input\/californiahousingimages\/california.png')\nplt.figure(figsize = (15, 10))\nplt.imshow(california_img, extent=[-124.55, -113.80, 32.45, 42.05])\nplt.show()","d7013ec5":"#combine the two plots\ndf.plot(kind=\"scatter\", x=\"longitude\", y=\"latitude\",\n                       s=df.population\/100, label=\"Population\", figsize = (15, 10),\n                       c=\"median_house_value\", cmap= \"coolwarm\",\n                       colorbar=True, alpha=0.4, fontsize = 15, sharex = False)\nplt.imshow(california_img, extent=[-124.55, -113.80, 32.45, 42.05])\nplt.ylabel(\"Latitude\", fontsize=14)\nplt.xlabel(\"Longitude\", fontsize=14)\nplt.legend(fontsize=16)\nplt.show()","b696cd73":"#plot only the homes near the ocean\ndf_loc = df[df.ocean_proximity=='NEAR OCEAN']\ndf_loc.plot(kind=\"scatter\", x=\"longitude\", y=\"latitude\",\n                       s=df_loc.population\/100, label=\"Population\", figsize = (15, 10),\n                       c=\"median_house_value\", cmap= \"coolwarm\",\n                       colorbar=True, alpha=0.4, fontsize = 15, sharex = False)\nplt.imshow(california_img, extent=[-124.55, -113.80, 32.45, 42.05])\nplt.ylabel(\"Latitude\", fontsize=14)\nplt.xlabel(\"Longitude\", fontsize=14)\nplt.legend(fontsize=16)\nplt.show()","072d5fb7":"df.head(5)","c3c59aab":"import seaborn as sns \nsns.set(style=\"darkgrid\")\nplt.subplots(figsize=(12, 8))\nsns.histplot(data=df, x=\"median_income\",bins=50)\nplt.show()","e6f2a818":"#make a quantile cut to group the incomes and label them \ndf['income_cat'] = pd.qcut(df.median_income,[0,0.25,0.5,0.75,0.95,1],\\\n                                             labels=['Low','Below_Average','Above_Average','High','Very High'])\ndf.income_cat","52f239d0":"#visualize the proximity of homes to the ocean for each income category \nplt.subplots(figsize=(12, 8))\nsns.countplot(x=\"income_cat\", hue=\"ocean_proximity\", data=df)\nplt.show()","19f7a7af":"#visualize the median house value by income category \nplt.subplots(figsize=(12, 8))\nsns.barplot(x='income_cat',y='median_house_value',data=df)\nplt.show()","723f1672":"#visualize the median house value by ocean proximity \nplt.subplots(figsize=(12, 8))\nsns.barplot(x='ocean_proximity',y='median_house_value',data=df)\nplt.show()","e0da1bc2":"#visualize the correlation between ocean_proximity and income category \ncorrMatrix = df.groupby(['income_cat','ocean_proximity']).median_house_value.mean().unstack().drop(columns=['ISLAND'])\nplt.subplots(figsize=(12, 8))\nsns.set(font_scale=1.4)\nsns.heatmap(corrMatrix.astype('int'),annot=True,cmap='Reds',fmt='d')","4507b1ea":"#make a variable to store the labels \nlabels = df.median_house_value.copy()\nlabels.head()","5b12a5e5":"features = df.drop(columns=['median_house_value'])\nfeatures.head()","a234515b":"features.info()","ac94ee94":"#Normalization\/Standardization\/Feature Scaling\n# we can normalize all the numerical data using z-score \nimport scipy.stats as stats \nfeat1 = features.select_dtypes('float').apply(lambda x: stats.zscore(x))\nfeat1.head()","c5755dac":"#check that all the means are around 0 and the standard deviation are 1 \nfeat1.agg(['mean','std'])","7591e164":"#we now need to convert the categorical column 'ocean_proximity' to numerical\n#we can do this by creating dummy variables \ndummies = pd.get_dummies (features.ocean_proximity)\ndummies.head()","d56efd1c":"#now we can merge all the features into one dataframe \nfeatures = pd.concat([feat1,dummies,df.income_cat],axis=1)\ntrainFeatures = features.drop(columns=['income_cat'])\ntrainFeatures.head()","a6a5b286":"#now we can split the data into test and train sets using sklearn \nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(trainFeatures, labels, test_size=0.2, random_state=42)","ea6bfdc6":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_squared_error \n\nforest = RandomForestRegressor(random_state=42,n_estimators=500,max_features='sqrt',max_depth=75,min_samples_split=2)\nforest.fit(X_train,y_train)","1b428727":"testScore = forest.score(X_test,y_test)\nprint(f'Test Score: {testScore}')","a62b1faa":"y_pred = forest.predict(X_test)","90ce57e0":"import numpy as np\nforestRMSE = np.sqrt(mean_squared_error(y_test,y_pred))\nprint(f'RMSE:{forestRMSE}')","011c4e4d":"#create a dataframe to compare the predictions to the actual \ncompare = pd.DataFrame(data={'actual':y_test,'prediction':y_pred})\ncompare.head()","b4601c8a":"#we can also get the mean absolute error here to compare \nforestMAE = round(abs(compare.actual-compare.prediction).mean(),2)\nprint(f'MAE:{forestMAE}')","3320ad3f":"featureImportance = pd.Series(data=forest.feature_importances_,index=X_train.columns).sort_values(ascending=True)\nfeatureImportance","c3ad3623":"featureImportance.plot.barh(figsize=(12,8))","93461675":"Rooms per household should not be less than 1 ","41076d42":"an accuracy of 82.5% is not bad","af79ebf1":"3. __Add__ the additional Feature __\"rooms_per_household\"__ ","a9b6df7b":"__Features__:","14d39262":"## Data Import and first Inspection","c758f0f2":"House value and median income seem to be correlated but no other variable seems to be highly correlated","f05ad03b":"4. __Add__ the additional Feature __\"population_per_household\"__ ","41f8fee1":"8. __Create__ a __scatterplot__ to visualize housing price distribtuion by location using:\n- longitude on x-axis\n- latitude on y-axis\n- size (s) of data points determined by population\n- color (c) of data points determined by median_house_value","70537256":"## Advanced Explanatory Data Analyis with Seaborn","b1298c4f":"5. __Add__ the additional Feature __\"bedrooms_per_household\"__ ","338612e2":"# Train a Random Forest Regressor on the Data ","bb150bcb":"# Feature Importance ","9c0b3f6f":"* **longitude:**  geographic coordinate (district\u00b4s east-west position)\n* **latitude:**  geographic coordinate (district\u00b4s north-south position)\n* **housing_median_age:** median age of houses in district\n* **total_rooms** Sum of all rooms in district\n* **total_bedrooms** Sum of all bedrooms in district\n* **population:** total population in district\n* **households:** total households in district\n* **median_income:** median household income in district \n* **median_house_value:** median house value in district\n* **ocean_proximity:** District\u00b4s proximity to the ocean","e17832e9":"Having all 5 columns above may be redundant. It may be necessary to drop one of these columns to avoid multicollinearity when using a linear regression algorithm. However, with a random forrest this is not necessary","d6b6cd12":"7. __Create__ a Seaborn Regression plot (__jointplot__) with income on the x-axis and house value on the y-axis.","48a55c88":"## ML MODEL - Predicting House Prices with Random Forest Regressor","a8d7562e":"10. __Add__ an additional column __\"income_cat\"__ with the following income categories:\n- lowest 25% -> \"Low\"\n- 25th to 50th percentile -> \"Below_Average\"\n- 50th to 75th percentile -> \"Above_Average\"\n- 75th to 95th percentile -> \"High\"\n- Above 95th percentile -> \"Very High\"","105a9d6f":"Island did not show up on the first bar plot, but we see here that the island has the most expensive homes. Evidently, there are very few island homes but they have high value ","80e0ee1f":"9.  __Add the map__ of California saved in __california.png__.","45dd7930":"# Split the Data into Test & Train Sets ","cfe01244":"Less than one hour to the ocean is the most common ocean proximity for houses ","11cd872d":"1. __Import__ the housing dataset (housing.csv) and __inspect__!","5c98718b":"## Data Cleaning and Creating additional Features","ac3d8119":"Most expensive homes are near the coast of california ","d4ac1de8":"Very High income and having a house near the ocean are highly correlated ","950479b8":"Based on the Explanatory Data Analysis:\n- select Random Forest Regression due to non-linearity \n- split data into Train and Test Sets\n- prepare\/engineer Features\n- Fit the Model (Train Set)\n- Test the Model (Test Set)","cfd57a55":"![image.png](attachment:image.png)","02f3f941":"# Data Preprocessing & Feature Engineering for Machine Learning (Housing Dataset)","bb6e5d1b":"## Which Factors influence House Prices?","3dd3963a":"Bedrooms per household should not be less than 1 ","c49b4c17":"RMSE indicates that the house prediction is off by an average of $48,970","59544c47":"6. __Calculate__ the __Correlation__ between \"median_house_value\" and all features. Which factors influence house prices\/values?","621ab0e1":"The higher income people live closer to the ocean. Lower income lives inland ","65393d8f":"Median income is clearly the most important indicator of home price. We could potentially drop some of the columns with low importance to improve performance of future models.","45dc6d5b":"The median house value and median age are capped which could cause some issues later","65e3ca91":"2. __Drop__ all rows with (at least one) missing value(s).","a9aaeea2":"# Feature Engineering ","28d549ac":"12. __Create__ (and interpret) the following Seaborn __Heatmap__ with mean house values for all combinations of income_cat & ocean_proximity:"}}