{"cell_type":{"b7620766":"code","03820097":"code","6b9da2a0":"code","ccac8205":"code","cb581b23":"code","b2ab91b2":"code","902b0db3":"code","3e095a06":"code","90603475":"code","3d9cb152":"code","180f38be":"code","a480d0ef":"code","cafd738d":"code","af971ab7":"code","3e2a62ad":"code","359f1595":"code","55a1d67a":"code","4cd38a8a":"code","854a6510":"markdown","cd17ad22":"markdown","18b63fb5":"markdown"},"source":{"b7620766":"#IMPORTING REQUIRED LIBRARIES\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\n\npalette = ['#F5DF4D', '#939597', '#0F4C81', '#FF6F61', '#5F4B8B', '#88B04B', '#92A8D1', '#F7CAC9', '#955251',\\\n           '#B163A3', '#009473']\npalette.reverse()","03820097":"#IMPORTING DATA\n\ndf = pd.read_csv('..\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\ndf.head()","6b9da2a0":"df.tail()","ccac8205":"#VIEWING BASIC PROPERTIES\n\ndf.describe()","cb581b23":"df.dtypes #viewing data types of different features","b2ab91b2":"df.isnull().sum() #counting number of missing values in each feature","902b0db3":"df['Year'] =  pd.to_datetime(df['Year'], format='%Y') #changing 'year' data type to date_time64","3e095a06":"#VISUALISATION\n\n# Set figure size (width, height) in inches\nplt.figure(figsize = (16, 8))\n\nyears = np.sort(df['Year'].dt.year.unique())\nfor i, year in enumerate(years):\n    # Plot histogram using Seaborn\n    sns.histplot(df.loc[df['Year'] == str(year)]['User Rating'], stat='density', binwidth=0.1, color=palette[i], alpha=0.5) \n\n# Create plot legend\nplt.legend(labels=years)\n\n# Set label for x-axis\nplt.xlabel( \"User Rating (Bin Size = 0.1)\" , size=16)\n  \n# Set label for y-axis\nplt.ylabel( \"% per User Rating\" , size=16)\n  \n# Set title for figure\nplt.title( \"Amazon Best Sellers User Ratings by Year\" , size=24);\n","90603475":"# Set figure size (width, height) in inches\nplt.figure(figsize = (16, 8))\n\n# Plot histogram using Seaborn\nsns.histplot(df.loc[df['Genre'] == 'Fiction']['User Rating'], stat='density', binwidth=0.1, color='c')\nsns.histplot(df.loc[df['Genre'] == 'Non Fiction']['User Rating'], stat='density', binwidth=0.1, color='cyan') \n\n# Create plot legend\nplt.legend(labels=['Fiction', 'Non Fiction'])\n\n# Set label for x-axis\nplt.xlabel( \"User Rating (Bin Size = 0.1)\" , size=16)\n  \n# Set label for y-axis\nplt.ylabel( \"% per User Rating\" , size=16)\n  \n# Set title for figure\nplt.title( \"Amazon Best Sellers User Ratings by Genre\" , size=24);","3d9cb152":"# Set figure size (width, height) in inches\nplt.figure(figsize = (16, 8))\n\n# Plot histogram using Seaborn\nsns.histplot(df['User Rating'], stat='density', binwidth=0.1, color='lime')\n  \n# Set label for x-axis\nplt.xlabel( \"User Rating (Bin Size = 0.1)\" , size=14)\n  \n# Set label for y-axis\nplt.ylabel( \"% per User Rating\" , size=14)\n  \n# Set title for figure\nplt.title( \"Amazon Best Sellers User Ratings\" , size=24);","180f38be":"# Set figure size (width, height) in inches\nplt.figure(figsize = (16, 8))\n\nyears = np.sort(df['Year'].dt.year.unique())\nfor i, year in enumerate(years):\n    # Plot histogram using Seaborn\n    if i in range(6):\n        sns.histplot(df.loc[df['Year'] == str(year)]['User Rating'], stat='density', binwidth=0.1, color=palette[i]) \n\n# Create plot legend\nplt.legend(labels=years[0:6])\n\n# Set label for x-axis\nplt.xlabel( \"User Rating (Bin Size = 0.1)\" , size=14)\n  \n# Set label for y-axis\nplt.ylabel( \"% per User Rating\" , size=14)\n  \n# Set title for figure\nplt.title( \"Amazon Best Sellers User Ratings by Year 2009-2014\" , size=24);","a480d0ef":"# Set figure size (width, height) in inches\nplt.figure(figsize = (16, 8))\n\nyears = np.sort(df['Year'].dt.year.unique())\nfor i, year in enumerate(years):\n    # Plot histogram using Seaborn\n    if i in range(6,12):\n        sns.histplot(df.loc[df['Year'] == str(year)]['User Rating'], stat='density', binwidth=0.1, color=palette[i]) \n\n# Create plot legend\nplt.legend(labels=years[6:12])\n\n# Set label for x-axis\nplt.xlabel( \"User Rating (Bin Size = 0.1)\" , size=14)\n  \n# Set label for y-axis\nplt.ylabel( \"% per User Rating\" , size=14)\n  \n# Set title for figure\nplt.title( \"Amazon Best Sellers User Ratings by Year 2015-2019\" , size=24);","cafd738d":"df['Price Quantile'] = pd.qcut(df['Price'], 4, labels=False)\n\n# Set figure size (width, height) in inches\nplt.figure(figsize = (16, 8))\n\nprices = np.sort(df['Price Quantile'].unique())\nfor i, price in enumerate(prices):\n    # Plot histogram using Seaborn\n    sns.histplot(df.loc[df['Price Quantile'] == price]['User Rating'], stat='density', binwidth=0.1, color=palette[i]) \n\n# Create plot legend\nplt.legend(labels=prices)\n\n# Set label for x-axis\nplt.xlabel( \"User Rating (Bin Size = 0.1)\" , size=14)\n  \n# Set label for y-axis\nplt.ylabel( \"% per User Rating\" , size=14)\n  \n# Set title for figure\nplt.title( \"Amazon Best Sellers User Ratings by Price Quantile\" , size=24);","af971ab7":"df['Reviews Quantile'] = pd.qcut(df['Reviews'], 4, labels=False)\n\n# Set figure size (width, height) in inches\nplt.figure(figsize = (16, 8))\n\nreviews = np.sort(df['Reviews Quantile'].unique())\nfor i, review in enumerate(reviews):\n    # Plot histogram using Seaborn\n    sns.histplot(df.loc[df['Reviews Quantile'] == review]['User Rating'], stat='density', binwidth=0.1, color=palette[i]) \n\n# Create plot legend\nplt.legend(labels=reviews)\n\n# Set label for x-axis\nplt.xlabel( \"User Rating (Bin Size = 0.1)\" , size=14)\n  \n# Set label for y-axis\nplt.ylabel( \"% per User Rating\" , size=14)\n  \n# Set title for figure\nplt.title( \"Amazon Best Sellers User Ratings by Review Quantile\" , size=24);","3e2a62ad":"ax = df.boxplot('User Rating', 'Genre', figsize=(16,8), fontsize=12)\nax.set_ylabel('User Rating')\nax.set_title('');","359f1595":"ax = df.boxplot('User Rating', 'Year', figsize=(16,8), fontsize=16, rot=35)\nax.set_ylabel('User Rating')\nax.set_title('');","55a1d67a":"ax = df.boxplot('User Rating', 'Price Quantile', figsize=(16,8), fontsize=16, rot=35)\nax.set_ylabel('User Rating')\nax.set_title('');","4cd38a8a":"ax = df.boxplot('User Rating', 'Reviews Quantile', figsize=(16,8), fontsize=16, rot=35)\nax.set_ylabel('User Rating')\nax.set_title('');","854a6510":"## Upvote if you love it. Best of luck!","cd17ad22":"**<h1 align='center'>Amazon Top 50 Bestselling Books 2009 - 2019<\/h1>**","18b63fb5":"## EDA on user rating\/review"}}