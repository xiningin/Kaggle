{"cell_type":{"f5449b06":"code","76ed26d8":"code","9bc26e33":"code","de379c44":"code","08b95d63":"code","6e29d307":"code","b1d1e664":"code","06bc1b65":"code","55481dbd":"code","c6e88031":"code","77b53095":"code","8da59ec2":"code","71c3700e":"code","c981aaad":"code","6495fcb0":"code","717620cd":"code","19d0d54b":"code","ec399e21":"code","7fe9b674":"code","0f3cbe35":"code","2d4e4b03":"code","350042be":"code","4e18e89a":"code","6c3912d0":"code","0a6b628a":"code","d1ab821c":"code","694814ac":"code","bb37d82c":"code","9b3ba0d5":"code","28ae74c6":"code","ddd9716d":"code","0555c566":"code","f7c2a52a":"code","9cdf5213":"code","ae6222aa":"code","b11adc2b":"code","28603a76":"code","ea475292":"code","c74abff8":"code","2b75b665":"code","81374901":"code","3aec3d32":"code","f53a77f6":"code","25be16e2":"code","86c8689e":"code","47cb4eb7":"code","22ec9d68":"code","8d3605cc":"code","110b0ba2":"code","a79ce950":"code","89c1fd5a":"code","15665c6e":"code","5486a5b3":"markdown","6d45fef8":"markdown","dc20da95":"markdown","a5e35641":"markdown","f74b8f39":"markdown"},"source":{"f5449b06":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np","76ed26d8":"Data=pd.read_csv('..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv')","9bc26e33":"for i in range(5110):\n  \n  if Data['gender'][i] =='Other':\n    print(i)","de379c44":"Data","08b95d63":"Data=Data.drop(index=3116,columns='id')","6e29d307":"Data","b1d1e664":"Data.info()","06bc1b65":"Data.isna().sum()","55481dbd":"Data['bmi']","c6e88031":"Data","77b53095":"Data['bmi_na']=Data['bmi'].isna()","8da59ec2":"Data","71c3700e":"# we add na values replace to mean() and we add new columns for na values \n\nData['bmi']=Data['bmi'].fillna(Data['bmi'].mean())\nData","c981aaad":"Data['work_type'].unique()","6495fcb0":"Data['smoking_status'].unique()","717620cd":"new_work_type=pd.get_dummies(Data['work_type'])","19d0d54b":"new_work_type","ec399e21":"new_smoking_status=pd.get_dummies(Data['smoking_status'])","7fe9b674":"new_smoking_status","0f3cbe35":"Data=Data.drop(columns=['work_type','smoking_status'])","2d4e4b03":"new_Data=pd.concat(([Data,new_work_type,new_smoking_status]),axis=1)","350042be":"new_Data","4e18e89a":"#we preparing to dataset for the model (Encoding to numeric)\n\nfrom sklearn.preprocessing import LabelEncoder\n\nobje_le=LabelEncoder()\n\nnew_Data['gender']=obje_le.fit_transform(new_Data['gender'])\nnew_Data['ever_married']=obje_le.fit_transform(new_Data['ever_married'])\nnew_Data['Residence_type']=obje_le.fit_transform(new_Data['Residence_type'])\nnew_Data['bmi_na']=obje_le.fit_transform(new_Data['bmi_na'])","6c3912d0":"new_Data","0a6b628a":"y=new_Data.copy().pop('stroke')","d1ab821c":"y","694814ac":"x=new_Data.copy().drop(columns='stroke')","bb37d82c":"x","9b3ba0d5":"import seaborn as sns\n\nplt.figure(figsize=(13,8))\nplt.xticks(np.arange(0,110,10))\na=sns.countplot(new_Data['age'])\na.set_xticks(np.arange(0,110,10))\nplt.show()","28ae74c6":"x=x.values\ny=y.values","ddd9716d":"x.shape","0555c566":"y.shape","f7c2a52a":"from sklearn.model_selection import train_test_split\n\nx_train,x_test,y_train,y_test=train_test_split(x,y,random_state=0,test_size=0.20)","9cdf5213":"x_train.shape","ae6222aa":"y_train.shape","b11adc2b":"x_test.shape","28603a76":"x_train,x_val,y_train,y_val=train_test_split(x_train,y_train,random_state=0,test_size=0.13)","ea475292":"x_train.shape","c74abff8":"x_val.shape","2b75b665":"from sklearn.preprocessing import StandardScaler\n\nobje_ss=StandardScaler()\n\nx_train_ss=obje_ss.fit_transform(x_train) \nx_val_ss=obje_ss.transform(x_val)\nx_test_ss=obje_ss.transform(x_test)","81374901":"x_train_ss","3aec3d32":"x_train_ss.shape","f53a77f6":"x_train.shape","25be16e2":"y_train.shape","86c8689e":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import confusion_matrix\n\nmodel_log_reg=LogisticRegression(max_iter=1000).fit(x_train_ss,y_train)\ny_pred_val_log=model_log_reg.predict(x_val_ss)\nprint('LogisticRegression classifcation train ba\u015far\u0131 oran\u0131 %',model_log_reg.score(x_train_ss,y_train)*100)\nprint(confusion_matrix(y_val,y_pred_val_log))\nprint('LogisticRegression classifcation validation ba\u015far\u0131 oran\u0131 %',(confusion_matrix(y_val,y_pred_val_log)[0][0]+confusion_matrix(y_val,y_pred_val_log)[1][1])\/len(y_val)*100)","47cb4eb7":"from sklearn.svm import SVC\nfrom sklearn.metrics import confusion_matrix\n\nmodel_svc=SVC().fit(x_train_ss,y_train)\ny_pred_val_svc=model_svc.predict(x_val_ss)\nprint('svc classifcation train ba\u015far\u0131 oran\u0131 %',model_svc.score(x_train_ss,y_train)*100)\nprint(confusion_matrix(y_val,y_pred_val_svc)) \nprint('svc classifcation validation ba\u015far\u0131 oran\u0131 %',(confusion_matrix(y_val,y_pred_val_svc)[0][0]+confusion_matrix(y_val,y_pred_val_svc)[1][1])\/len(y_val)*100)","22ec9d68":"from sklearn.ensemble import RandomForestClassifier\n\nmodel_tree=RandomForestClassifier(n_estimators=10).fit(x_train_ss,y_train)\ny_pred_val_tree=model_tree.predict(x_val_ss)\nprint('tree classifcation train ba\u015far\u0131 oran\u0131 %',model_tree.score(x_train_ss,y_train)*100)\nprint(confusion_matrix(y_val,y_pred_val_tree))\nprint('tree classifcation validation ba\u015far\u0131 oran\u0131 %',(confusion_matrix(y_val,y_pred_val_tree)[0][0]+confusion_matrix(y_val,y_pred_val_tree)[1][1])\/len(y_val)*100)","8d3605cc":"from sklearn.neighbors import KNeighborsClassifier\n\nmodel_knn=KNeighborsClassifier(n_neighbors=4,metric='minkowski').fit(x_train_ss,y_train)\ny_pred_val_knn=model_knn.predict(x_val_ss)\nprint('KNN classifcation train ba\u015far\u0131 oran\u0131 %',model_knn.score(x_train_ss,y_train)*100)\nprint(confusion_matrix(y_val,y_pred_val_knn))\nprint('tree classifcation validation ba\u015far\u0131 oran\u0131 %',(confusion_matrix(y_val,y_pred_val_knn)[0][0]+confusion_matrix(y_val,y_pred_val_knn)[1][1])\/len(y_val)*100)","110b0ba2":"y_pred_test_Log=model_log_reg.predict(x_test_ss)\nprint(confusion_matrix(y_test,y_pred_test_Log))\nprint('LogisticRegression classifcation Test ba\u015far\u0131 oran\u0131 %',(confusion_matrix(y_test,y_pred_test_Log)[0][0]+confusion_matrix(y_test,y_pred_test_Log)[1][1])\/len(y_test)*100)","a79ce950":"y_pred_test_svc=model_svc.predict(x_test_ss)\nprint(confusion_matrix(y_test,y_pred_test_svc))\nprint('SVC classifcation Test ba\u015far\u0131 oran\u0131 %',(confusion_matrix(y_test,y_pred_test_svc)[0][0]+confusion_matrix(y_test,y_pred_test_svc)[1][1])\/len(y_test)*100)","89c1fd5a":"y_pred_test_tree=model_tree.predict(x_test_ss)\nprint(confusion_matrix(y_test,y_pred_test_tree))\nprint('Tree classifcation Test ba\u015far\u0131 oran\u0131 %',(confusion_matrix(y_test,y_pred_test_tree)[0][0]+confusion_matrix(y_test,y_pred_test_tree)[1][1])\/len(y_test)*100)","15665c6e":"y_pred_test_knn=model_knn.predict(x_test_ss)\nprint(confusion_matrix(y_test,y_pred_test_knn))\nprint('KNN classifcation Test ba\u015far\u0131 oran\u0131 %',(confusion_matrix(y_test,y_pred_test_knn)[0][0]+confusion_matrix(y_test,y_pred_test_knn)[1][1])\/len(y_test)*100)","5486a5b3":"## Normalize","6d45fef8":"## Test Accuracy","dc20da95":"## Analiz","a5e35641":"## Models","f74b8f39":"## train, test validation"}}