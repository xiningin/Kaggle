{"cell_type":{"6731db3a":"code","4931bce2":"code","3b6b73ac":"code","a734db06":"code","72214f4f":"code","8a1fea74":"code","11b2c6cc":"code","5838268d":"code","8f6ecec2":"code","39317c26":"code","6e83bdad":"code","ded1ebe8":"code","79ed92aa":"code","59feec26":"code","eba940f0":"code","9ed5b250":"code","2d45058a":"code","ad9205de":"code","7f916c5e":"code","2a551b5d":"code","b6b1562a":"code","a68fbb9c":"code","81fc72b7":"markdown","5fdec384":"markdown","4fc1c9f1":"markdown","d6ec113f":"markdown","6c198b7d":"markdown","f0c68836":"markdown","3a5bed3b":"markdown","c0962f1a":"markdown","c8006671":"markdown","7eb34982":"markdown","c367319a":"markdown","43ac270e":"markdown","e5d71977":"markdown","d6a225d2":"markdown","ea7aaf69":"markdown","0b69938e":"markdown","36c17519":"markdown","f7f928f5":"markdown"},"source":{"6731db3a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4931bce2":"from glob import glob\nfrom tqdm import tqdm\nimport json\n\nfrom matplotlib import pyplot as plt","3b6b73ac":"train = pd.read_csv('\/kaggle\/input\/2021-ml-tp8\/train_Y.csv')\nsubmit = pd.read_csv('\/kaggle\/input\/2021-ml-tp8\/sample_submit.csv')","a734db06":"train_user = train['user']\ntest_user = submit['user']\ny_train = train['label'].to_numpy()","72214f4f":"total_user = pd.concat([train_user, test_user])\ntotal_user = total_user.sort_values().reset_index(drop=True)","8a1fea74":"sleep = sorted(glob('\/kaggle\/input\/2021-ml-tp8\/StduentLife_EMA\/EMA\/response\/Sleep\/*.json'))\nsocial = sorted(glob('\/kaggle\/input\/2021-ml-tp8\/StduentLife_EMA\/EMA\/response\/Social\/*.json'))\nactivity = sorted(glob('\/kaggle\/input\/2021-ml-tp8\/StduentLife_EMA\/EMA\/response\/Activity\/*.json'))","11b2c6cc":"tmp = list()\n\nfor i in range(len(sleep)) :\n  for k in range(len(total_user)) : \n    if total_user[k] in sleep[i] :\n      tmp.append(sleep[i])\n\nsleep = np.array(tmp)\n\ntmp = list()\n\nfor i in range(len(social)) :\n  for k in range(len(total_user)) : \n    if total_user[k] in social[i] :\n      tmp.append(social[i])\n\nsocial = np.array(tmp)\n\ntmp = list()\n\nfor i in range(len(activity)) :\n  for k in range(len(total_user)) : \n    if total_user[k] in activity[i] :\n      tmp.append(activity[i])\n\nactivity = np.array(tmp)","5838268d":"# \uc544\ub798 \uc124\uba85\uc744 \uae30\ubc18\uc73c\ub85c Sleep EMA \ub370\uc774\ud130 \ucd94\ucd9c\uc744 \uc704\ud55c \ucf54\ub4dc\ub97c \uc791\uc131\ud558\uc138\uc694.\n\n################################################################\n\n# 1. json load\ub97c \ud1b5\ud574\uc11c sleep\uc5d0 \uc800\uc7a5\ub41c \ud30c\uc77c\uc744 \ud558\ub098\uc529 \ub85c\ub4dc\ud55c\ub2e4.\n# 2. \uc720\uc800\uc758 \uc751\ub2f5 \uc911 'question_id'\uac00 'hour','rate'\uc778 \ub370\uc774\ud130\ub97c \ud30c\uc2f1\ud55c\ub2e4.\n# 3. \uc774\ub54c, \uac01 \uc751\ub2f5\uc740 \uc778\ub371\uc2a4 \uac12\uc774\ubbc0\ub85c \ud574\ub2f9 \uc778\ub371\uc2a4\uc5d0 \ub300\uc751\ub418\ub294 \uc2e4\uc81c \uac12\uc73c\ub85c \ubcc0\ud658\ud55c\ub2e4.\n\n# Hint1) \uc751\ub2f5\uacb0\uacfc\uac00 \uc5c6\uc73c\uba74 NaN\uc774 \ub41c\ub2e4. \ud574\ub2f9 \ub370\uc774\ud130\ub294 \ucd94\ud6c4 Imputer\ub97c \ud1b5\ud574 \ucc98\ub9ac\ud55c\ub2e4.\n\n# Hint2) How many hours did you sleep last night?\n# [1] -> 3, [2]->3.5, [3]->4.0, [4]->4.5 , ... , [18]->11.5, [19]->12\n\n# Hint3) Sleep_rate\n# [1] -> 4, [2]->3, [3]->2, [4]->1\n\n# Hint4) \ub9cc\uc57d \ub300\uc751\ub418\ub294 \uc778\ub371\uc2a4\uac00 \uc5c6\uac70\ub098 \ub300\uc751\ub418\ub294 \ub2f5\ubcc0\uc774 \uc5c6\ub2e4\uba74 \ud574\ub2f9 \ub370\uc774\ud130\ub294 'NaN'\uc73c\ub85c \uc124\uc815\ud55c\ub2e4.\n\n################################################################\n\n# Hint5) \uc544\ub798 \uc608\uc2dc\ucf54\ub4dc\ub97c \ud65c\uc6a9\ud558\uc5ec \uc791\uc131\ud560 \uc218 \uc788\ub2e4.\n\npeople_hour = list()\npeople_rate = list()\n\nfor sp in tqdm(sleep) : \n    \n  person_hour = list()\n  person_rate = list()\n    \n  with open(sp) as json_file:\n    sleep_data = json.load(json_file)\n    \n  for res in sleep_data :\n    if 'hour' in res :\n        \n    ##############################################\n    # \ud574\ub2f9 \ubd80\ubd84\uc744 \ucc44\uc6b0\uc2dc\uc624.\n    ##############################################\n\n    if 'rate' in res :\n    ##############################################\n    # \ud574\ub2f9 \ubd80\ubd84\uc744 \ucc44\uc6b0\uc2dc\uc624.\n    ##############################################\n\n  people_hour.append(person_hour)\n  people_rate.append(person_rate)","8f6ecec2":"# \uc544\ub798 \uc124\uba85\uc744 \uae30\ubc18\uc73c\ub85c Social EMA \ub370\uc774\ud130 \ucd94\ucd9c\uc744 \uc704\ud55c \ucf54\ub4dc\ub97c \uc791\uc131\ud558\uc138\uc694.\n\n################################################################\n\n# 1. json load\ub97c \ud1b5\ud574\uc11c sleep\uc5d0 \uc800\uc7a5\ub41c \ud30c\uc77c\uc744 \ud558\ub098\uc529 \ub85c\ub4dc\ud55c\ub2e4.\n# 2. \uc720\uc800\uc758 \uc751\ub2f5 \uc911 'question_id'\uac00 'number'\uc778 \ub370\uc774\ud130\ub97c \ud30c\uc2f1\ud55c\ub2e4.\n# 3. \uc774\ub54c, \uac01 \uc751\ub2f5\uc740 \uc778\ub371\uc2a4 \uac12\uc774\ubbc0\ub85c \ud574\ub2f9 \uc778\ub371\uc2a4\uc5d0 \ub300\uc751\ub418\ub294 \uc2e4\uc81c \uac12\uc73c\ub85c \ubcc0\ud658\ud55c\ub2e4.\n\n# Hint1) \uc751\ub2f5\uacb0\uacfc\uac00 \uc5c6\uc73c\uba74 NaN\uc774 \ub41c\ub2e4. \ud574\ub2f9 \ub370\uc774\ud130\ub294 \ucd94\ud6c4 Imputer\ub97c \ud1b5\ud574 \ucc98\ub9ac\ud55c\ub2e4.\n\n# Hint2) Social\n# [1]->0, [2]->5, [3]->10, [4]->20, [5]->50, [6]->100\n\n# Hint3) \ub9cc\uc57d \ub300\uc751\ub418\ub294 \uc778\ub371\uc2a4\uac00 \uc5c6\uac70\ub098 \ub300\uc751\ub418\ub294 \ub2f5\ubcc0\uc774 \uc5c6\ub2e4\uba74 \ud574\ub2f9 \ub370\uc774\ud130\ub294 'NaN'\uc73c\ub85c \uc124\uc815\ud55c\ub2e4.\n\n################################################################\n\n# Hint4) \uc544\ub798 \uc608\uc2dc\ucf54\ub4dc\ub97c \ud65c\uc6a9\ud558\uc5ec \uc791\uc131\ud560 \uc218 \uc788\ub2e4.\n\npeople_contact = list() \n\nfor soc in tqdm(social) :\n  person_contact = list()\n  with open(soc) as json_file:\n    social_data = json.load(json_file)\n  for res in social_data :\n    if 'number' in res :\n    ##############################################\n    # \ud574\ub2f9 \ubd80\ubd84\uc744 \ucc44\uc6b0\uc2dc\uc624.\n    ##############################################\n\n  people_contact.append(person_contact)","39317c26":"# \uc544\ub798 \uc124\uba85\uc744 \uae30\ubc18\uc73c\ub85c Activity EMA \ub370\uc774\ud130 \ucd94\ucd9c\uc744 \uc704\ud55c \ucf54\ub4dc\ub97c \uc791\uc131\ud558\uc138\uc694.\n\n################################################################\n\n# 1. json load\ub97c \ud1b5\ud574\uc11c sleep\uc5d0 \uc800\uc7a5\ub41c \ud30c\uc77c\uc744 \ud558\ub098\uc529 \ub85c\ub4dc\ud55c\ub2e4.\n# 2. \uc720\uc800\uc758 \uc751\ub2f5 \uc911 'question_id'\uac00 'other_relaxing','other_working',\n#                                 'relaxing','working'\uc778 \ub370\uc774\ud130\ub97c \ud30c\uc2f1\ud55c\ub2e4.\n# 3. \uc774\ub54c, \uac01 \uc751\ub2f5\uc740 \uc778\ub371\uc2a4 \uac12\uc774\ubbc0\ub85c \ud574\ub2f9 \uc778\ub371\uc2a4\uc5d0 \ub300\uc751\ub418\ub294 \uc2e4\uc81c \uac12\uc73c\ub85c \ubcc0\ud658\ud55c\ub2e4.\n\n# Hint1) \uc751\ub2f5\uacb0\uacfc\uac00 \uc5c6\uc73c\uba74 NaN\uc774 \ub41c\ub2e4. \ud574\ub2f9 \ub370\uc774\ud130\ub294 \ucd94\ud6c4 Imputer\ub97c \ud1b5\ud574 \ucc98\ub9ac\ud55c\ub2e4.\n\n# Hint2) Activity\n# [1]->0, [2]->0.11, [3]->0.26, [4]->0.51, [5]->0.76\n\n# Hint3) \ub9cc\uc57d \ub300\uc751\ub418\ub294 \uc778\ub371\uc2a4\uac00 \uc5c6\uac70\ub098 \ub300\uc751\ub418\ub294 \ub2f5\ubcc0\uc774 \uc5c6\ub2e4\uba74 \ud574\ub2f9 \ub370\uc774\ud130\ub294 'NaN'\uc73c\ub85c \uc124\uc815\ud55c\ub2e4.\n\n################################################################\n\n# Hint4) \uc544\ub798 \uc608\uc2dc\ucf54\ub4dc\ub97c \ud65c\uc6a9\ud558\uc5ec \uc791\uc131\ud560 \uc218 \uc788\ub2e4.\n\npeople_work_alone = list() \npeople_work_other = list()\npeople_relaxing_alone = list() \npeople_relaxing_other = list()\n\nfor act in tqdm(activity) :\n\n  person_work_alone = list() \n  person_work_other = list()\n  person_relaxing_alone = list() \n  person_relaxing_other = list()\n\n  with open(act) as json_file:\n    activity_data = json.load(json_file)\n\n  for res in activity_data :\n    \n    if 'other_relaxing' in res :\n    ##############################################\n    # \ud574\ub2f9 \ubd80\ubd84\uc744 \ucc44\uc6b0\uc2dc\uc624.\n    ##############################################\n\n    if 'other_working' in res :\n    ##############################################\n    # \ud574\ub2f9 \ubd80\ubd84\uc744 \ucc44\uc6b0\uc2dc\uc624.\n    ##############################################\n\n    if 'relaxing' in res :\n    ##############################################\n    # \ud574\ub2f9 \ubd80\ubd84\uc744 \ucc44\uc6b0\uc2dc\uc624.\n    ##############################################\n\n    if 'working' in res :\n    ##############################################\n    # \ud574\ub2f9 \ubd80\ubd84\uc744 \ucc44\uc6b0\uc2dc\uc624.\n    ##############################################\n\n  people_relaxing_other.append(person_relaxing_other)\n  people_work_other.append(person_work_other)\n  people_relaxing_alone.append(person_relaxing_alone)\n  people_work_alone.append(person_work_alone)","6e83bdad":"student_sleep = pd.DataFrame(people_hour).astype('float64')\nstudent_sleep_rate = pd.DataFrame(people_rate).astype('float64')\nstudent_contact = pd.DataFrame(people_contact).astype('float64')\nstudent_working_alone = pd.DataFrame(people_work_alone).astype('float64')\nstudent_working_other = pd.DataFrame(people_work_other).astype('float64')\nstudent_relaxing_alone = pd.DataFrame(people_relaxing_alone).astype('float64')\nstudent_relaxing_other = pd.DataFrame(people_relaxing_other).astype('float64')\n\nstudent_sleep['uid'] = total_user\nstudent_sleep_rate['uid'] = total_user\nstudent_contact['uid'] = total_user\nstudent_working_alone['uid'] = total_user\nstudent_working_other['uid'] = total_user\nstudent_relaxing_alone['uid'] = total_user\nstudent_relaxing_other['uid'] = total_user\n\nstudent_sleep = student_sleep[(['uid']+list(range(0,student_sleep.shape[1]-1)))]\nstudent_sleep_rate = student_sleep_rate[(['uid']+list(range(0,student_sleep_rate.shape[1]-1)))]\nstudent_contact = student_contact[(['uid']+list(range(0,student_contact.shape[1]-1)))]\nstudent_working_alone = student_working_alone[(['uid']+list(range(0,student_working_alone.shape[1]-1)))]\nstudent_working_other = student_working_other[(['uid']+list(range(0,student_working_other.shape[1]-1)))]\nstudent_relaxing_alone = student_relaxing_alone[(['uid']+list(range(0,student_relaxing_alone.shape[1]-1)))]\nstudent_relaxing_other = student_relaxing_other[(['uid']+list(range(0,student_relaxing_other.shape[1]-1)))]","ded1ebe8":"# train\uc14b\uc5d0 \ub300\ud55c feature\ub97c \ucd94\ucd9c\ud558\uc2dc\uc624.\n\n################################################################\n\n# 1. train_user\uc5d0 \ud574\ub2f9\ud558\ub294 \ub370\uc774\ud130\ub9cc \ud30c\uc2f1\ud55c\ub2e4. \n# 2. pandas\uc758 describe \ud568\uc218\ub97c \uc774\uc6a9\ud574 feature\ub97c \ucd94\ucd9c\ud55c\ub2e4.\n    \n################################################################\n\n# Hint 1) \n# A[A['uid'].isin(train_user)]\n# Hint 2)\n# A.T.describe().to_numpy()\n\ntrain_features_student_sleep = \ntrain_features_student_sleep_rate = \ntrain_features_student_contact = \ntrain_features_student_working_alone = \ntrain_features_student_working_other = \ntrain_features_student_relaxing_alone =\ntrain_features_student_relaxing_other =","79ed92aa":"# test\uc14b\uc5d0 \ub300\ud55c feature\ub97c \ucd94\ucd9c\ud558\uc2dc\uc624.\n\n################################################################\n\n# 1. test_user\uc5d0 \ud574\ub2f9\ud558\ub294 \ub370\uc774\ud130\ub9cc \ud30c\uc2f1\ud55c\ub2e4. \n# 2. pandas\uc758 describe \ud568\uc218\ub97c \uc774\uc6a9\ud574 feature\ub97c \ucd94\ucd9c\ud55c\ub2e4.\n    \n################################################################\n\n# Hint 1) \n# A[A['uid'].isin(test_user)]\n# Hint 2)\n# A.T.describe().to_numpy()\n\ntest_features_student_sleep = \ntest_features_student_sleep_rate = \ntest_features_student_contact = \ntest_features_student_working_alone = \ntest_features_student_working_other = \ntest_features_student_relaxing_alone =\ntest_features_student_relaxing_other =","59feec26":"# Imputer\ub97c \uc774\uc6a9\ud574 Nan \ub370\uc774\ud130 \ud3c9\uade0\uac12\uc73c\ub85c \ucc44\uc6b0\uae30\n\n################################################################\n\n# Hint 1) \n# imp_mean = SimpleImputer(missing_values=np.nan, strategy='mean')\n# imp_mean.fit(A)\n# A = imp_mean.transform(A)\n# B = imp_mean.transform(B)\n\n################################################################","eba940f0":"# Sleep feature\ub9cc \uc774\uc6a9\ud574 \uc6b0\uc6b8\uc99d\uc744 \uc608\uce21\ud55c\ub2e4. \n\n#######################################################################\n\n# 1. describe\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \ud1b5\uacc4\uc801 feature \uc911 count\ub294 \uc81c\uc678\ud55c \ub098\uba38\uc9c0\ub97c \uc0ac\uc6a9\ud55c\ub2e4. \n\n# Hint 1) \uc544\ub798 feature\ub97c \uc0ac\uc6a9\ud558\uc2dc\uc624\n\n# train\n# train_features_student_sleep\n# train_features_student_sleep_rate\n\n# test\n# test_features_student_sleep\n# test_features_student_sleep_rate\n\n# Hint 2) \uc608\uc2dc\ucf54\ub4dc\n\n#  tmp_x = list()\n#  tmp_x.append(train_features_student_sleep[1:8,i])\n#  tmp_x.append(train_features_student_sleep_rate[1:8,i])\n#  X_train.append(tmp_x)\n\n#######################################################################\n\nX_train = list()\n\nfor i in range(train_features_student_sleep.shape[1]) : \n  \n    ##############################################\n    # \ud574\ub2f9 \ubd80\ubd84\uc744 \ucc44\uc6b0\uc2dc\uc624.\n    ##############################################\n\nX_train = np.array(X_train)\nX_train = X_train.reshape(train_features_student_sleep.shape[1],-1)\n\nX_test = list()\n\nfor i in range(test_features_student_sleep.shape[1]) : \n  \n    ##############################################\n    # \ud574\ub2f9 \ubd80\ubd84\uc744 \ucc44\uc6b0\uc2dc\uc624.\n    ##############################################\n\nX_test = np.array(X_test)\nX_test = X_test.reshape(test_features_student_sleep.shape[1],-1)","9ed5b250":"# SVM\uc744 \uc774\uc6a9\ud574 \uc774\uc9c4\ubd84\ub958 \uc218\ud589\ud558\uae30 \n\n#######################################################################\n\n# Hint 1)\n# tuned_parameters = [{'kernel': ['linear'], 'C': [1, 10, 100, 1000]}]\n\n#######################################################################\n\n# Sleep feature\ub97c \uc774\uc6a9\ud55c \ubd84\ub958\uacb0\uacfc \ud655\uc778\ud558\uae30 \n\nsubmit['label'] = y_pred\nsubmit.to_csv(\"\/kaggle\/working\/submit_SVC_sleep_features.csv\", index=False)","2d45058a":"# Social feature\ub9cc \uc774\uc6a9\ud574 \uc6b0\uc6b8\uc99d\uc744 \uc608\uce21\ud55c\ub2e4. \n\n#######################################################################\n\n# 1. describe\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \ud1b5\uacc4\uc801 feature \uc911 count\ub294 \uc81c\uc678\ud55c \ub098\uba38\uc9c0\ub97c \uc0ac\uc6a9\ud55c\ub2e4. \n\n# Hint 1) \uc544\ub798 feature\ub97c \uc0ac\uc6a9\ud558\uc2dc\uc624\n\n# train\n# train_features_student_contact\n\n# test\n# test_features_student_contact\n    \n#######################################################################\n\nX_train = list()\n\nfor i in range(train_features_student_contact.shape[1]) : \n  \n    ##############################################\n    # \ud574\ub2f9 \ubd80\ubd84\uc744 \ucc44\uc6b0\uc2dc\uc624.\n    ##############################################\n\nX_train = np.array(X_train)\nX_train = X_train.reshape(train_features_student_contact.shape[1],-1)\n\nX_test = list()\n\nfor i in range(test_features_student_contact.shape[1]) : \n  \n    ##############################################\n    # \ud574\ub2f9 \ubd80\ubd84\uc744 \ucc44\uc6b0\uc2dc\uc624.\n    ##############################################\n\nX_test = np.array(X_test)\nX_test = X_test.reshape(test_features_student_contact.shape[1],-1)","ad9205de":"# SVM\uc744 \uc774\uc6a9\ud574 \uc774\uc9c4\ubd84\ub958 \uc218\ud589\ud558\uae30 \n\n#######################################################################\n\n# Hint 1)\n# tuned_parameters = [{'kernel': ['linear'], 'C': [1, 10, 100, 1000]}]\n\n#######################################################################\n\n# Social feature\ub97c \uc774\uc6a9\ud55c \ubd84\ub958\uacb0\uacfc \ud655\uc778\ud558\uae30 \n\nsubmit['label'] = y_pred\nsubmit.to_csv(\"\/kaggle\/working\/submit_SVC_social_features.csv\", index=False)","7f916c5e":"# Activity feature\ub9cc \uc774\uc6a9\ud574 \uc6b0\uc6b8\uc99d\uc744 \uc608\uce21\ud55c\ub2e4. \n\n#######################################################################\n\n# 1. describe\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \ud1b5\uacc4\uc801 feature \uc911 count\ub294 \uc81c\uc678\ud55c \ub098\uba38\uc9c0\ub97c \uc0ac\uc6a9\ud55c\ub2e4. \n\n# Hint 1) \uc544\ub798 feature\ub97c \uc0ac\uc6a9\ud558\uc2dc\uc624\n\n# train\n# train_features_student_working_alone\n# train_features_student_working_other\n# train_features_student_relaxing_alone\n# train_features_student_relaxing_other\n\n# test\n# test_features_student_working_alone\n# test_features_student_working_other\n# test_features_student_relaxing_alone\n# test_features_student_relaxing_other\n    \n#######################################################################\n\nX_train = list()\n\nfor i in range(train_features_student_sleep.shape[1]) : \n  \n    ##############################################\n    # \ud574\ub2f9 \ubd80\ubd84\uc744 \ucc44\uc6b0\uc2dc\uc624.\n    ##############################################\n\nX_train = np.array(X_train)\nX_train = X_train.reshape(train_features_student_sleep.shape[1],-1)\n\nX_test = list()\n\nfor i in range(test_features_student_sleep.shape[1]) : \n  \n    ##############################################\n    # \ud574\ub2f9 \ubd80\ubd84\uc744 \ucc44\uc6b0\uc2dc\uc624.\n    ##############################################\n\nX_test = np.array(X_test)\nX_test = X_test.reshape(test_features_student_sleep.shape[1],-1)","2a551b5d":"# SVM\uc744 \uc774\uc6a9\ud574 \uc774\uc9c4\ubd84\ub958 \uc218\ud589\ud558\uae30 \n\n#######################################################################\n\n# Hint 1)\n# tuned_parameters = [{'kernel': ['linear'], 'C': [1, 10, 100, 1000]}]\n\n#######################################################################\n\n# Activity feature\ub97c \uc774\uc6a9\ud55c \ubd84\ub958\uacb0\uacfc \ud655\uc778\ud558\uae30 \n\nsubmit['label'] = y_pred\nsubmit.to_csv(\"\/kaggle\/working\/submit_SVC_Activity_features.csv\", index=False)","b6b1562a":"# Social feature\ub9cc \uc774\uc6a9\ud574 \uc6b0\uc6b8\uc99d\uc744 \uc608\uce21\ud55c\ub2e4. \n\n#######################################################################\n\n# 1. describe\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \ud1b5\uacc4\uc801 feature \uc911 count\ub294 \uc81c\uc678\ud55c \ub098\uba38\uc9c0\ub97c \uc0ac\uc6a9\ud55c\ub2e4. \n\n# Hint 1) \uc544\ub798 feature\ub97c \uc0ac\uc6a9\ud558\uc2dc\uc624\n\n# train\n# train_features_student_sleep\n# train_features_student_sleep_rate\n# train_features_student_contact\n# train_features_student_working_alone\n# train_features_student_working_other\n# train_features_student_relaxing_alone\n# train_features_student_relaxing_other\n\n# test\n# test_features_student_sleep\n# test_features_student_sleep_rate\n# test_features_student_contact\n# test_features_student_working_alone\n# test_features_student_working_other\n# test_features_student_relaxing_alone\n# test_features_student_relaxing_other\n    \n#######################################################################\n\nX_train = list()\n\nfor i in range(train_features_student_working_alone.shape[1]) : \n  \n    ##############################################\n    # \ud574\ub2f9 \ubd80\ubd84\uc744 \ucc44\uc6b0\uc2dc\uc624.\n    ##############################################\n\nX_train = np.array(X_train)\nX_train = X_train.reshape(train_features_student_working_alone.shape[1],-1)\n\nX_test = list()\n\nfor i in range(test_features_student_working_alone.shape[1]) : \n  \n    ##############################################\n    # \ud574\ub2f9 \ubd80\ubd84\uc744 \ucc44\uc6b0\uc2dc\uc624.\n    ##############################################\n\nX_test = np.array(X_test)\nX_test = X_test.reshape(test_features_student_working_alone.shape[1],-1)","a68fbb9c":"# SVM\uc744 \uc774\uc6a9\ud574 \uc774\uc9c4\ubd84\ub958 \uc218\ud589\ud558\uae30 \n\n#######################################################################\n\n# Hint 1)\n# tuned_parameters = [{'kernel': ['linear'], 'C': [1, 10, 100, 1000]}]\n\n#######################################################################\n\n# Sleep+Activity+Social feature\ub97c \uc774\uc6a9\ud55c \ubd84\ub958\uacb0\uacfc \ud655\uc778\ud558\uae30 \n\nsubmit['label'] = y_pred\nsubmit.to_csv(\"\/kaggle\/working\/submit_SVC_All_features.csv\", index=False)","81fc72b7":"# [Empty Module #3-1] Sleep feature\ub9cc \uc774\uc6a9\ud558\uc5ec \uc6b0\uc6b8\uc99d \uc608\uce21\ud558\uae30\n\n- 6\uc8fc\ucc28 \uc2e4\uc2b5\ubb38\uc81c\uc5d0\uc11c \uc6b0\ub9ac\ub294 \uc218\uba74\uc2dc\uac04\uc5d0 \ub530\ub978 \uc6b0\uc6b8\uc99d \uc608\uce21\uc744 \uc218\ud589\ud558\uc600\ub2e4. \uadf8\ub9ac\uace0 \uc55e\uc120 \uacfc\uc815\uc774 \uc2e4\uc81c \ud574\ub2f9 \uc2e4\uc2b5\ubb38\uc81c\uc5d0\uc11c \uc81c\uacf5\ub41c Feature \uac00\uacf5 \ubc29\ubc95\uc774\ub2e4. \uc774\ub97c \ud655\uc778\ud558\uae30\uc704\ud574 \uc55e\uc5d0\uc11c \uad6c\ucd95\ud55c Feature \uc911 sleep\uacfc \uad00\ub828\ub41c feature\ub9cc\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc6b0\uc6b8\uc99d\uc744 \uc608\uce21\ud55c\ub2e4.\n- \ubd84\ub958\uc5d0\ub294 SVM\uc744 \uc0ac\uc6a9\ud558\uba70 \uc8fc\uc5b4\uc9c4 \ud30c\ub77c\ubbf8\ud130\ub97c \uc774\uc6a9\ud558\uc5ec \ubd84\ub958\ub97c \uc218\ud589\ud55c\ub2e4.","5fdec384":"# [Empty Module #2-2] Feature\uc5d0\uc11c Nan\uac12 \ucc98\ub9ac\ud558\uae30\n\n- \ub370\uc774\ud130\uc5d0 NaN\uac12\uc744 Imputer\ub97c \ud1b5\ud574\uc11c \ucc44\uc6b4\ub2e4. \ud558\uc9c0\ub9cc \uc6b0\uc6b8\uc99d\uc758 \uacbd\uc6b0 \uc18c\uc218\uc758 \ub370\uc774\ud130\ub97c \uc81c\uc678\ud55c \ub098\uba38\uc9c0\ub97c NaN\uc73c\ub85c \ucc44\uc6b0\uba74 \uc2e4\uc81c \uc77c\ubd80 \uc6b0\uc6b8\uc99d \ud328\ud134\uc774 \uc5c6\uc5b4\uc9c8 \uc218 \uc788\ub2e4. \ub530\ub77c\uc11c describe\ub97c \ud1b5\ud574 \ucd94\ucd9c\ud55c Feature\uc5d0 \ub300\ud574\uc11c Nan\uc5d0 \uac12\uc774 \uc788\uc744 \uacbd\uc6b0\uc5d0 Imputer\ub97c \ud1b5\ud574 NaN\uc744 \ucc44\uc6b4\ub2e4.","4fc1c9f1":"# [Empty Module #2-1] Feature extract\n\n\ubaa9\ud45c: \uc55e\uc11c \ud30c\uc2f1\ud55c EMA \uc751\ub2f5 \ub370\uc774\ud130\uc5d0\uc11c \ud1b5\uacc4\uc801 feature\ub97c \ucd94\ucd9c\ud55c\ub2e4. \n\n- \uc55e\uc11c \ucd94\uac00\ud55c ueser id(uid)\ub97c \uae30\uc900\uc73c\ub85c trian\/test \uc720\uc800\uc5d0 \ub370\uc774\ud130\ub97c \ub098\ub208\ub2e4. \uadf8\ub9ac\uace0 \ud574\ub2f9 \uc720\uc800\uc758 \ub370\uc774\ud130\ub97c pandas\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 describe \ud568\uc218\ub97c \uc774\uc6a9\ud574 \ud1b5\uacc4\uc801 feature\ub97c \ucd94\ucd9c\ud55c\ub2e4. \n- \ud1b5\uacc4\uc801 feature\ub294 \ucd1d 7\ucc28\uc6d0\uc774\uba70 \uac01 \uad6c\uc131\uc740 \uc544\ub798 \ucd94\uac00\uc124\uba85\uacfc \uac19\ub2e4. (describe\ud568\uc218\uc758 \uac00\uc7a5 \uccab\ubc88\uc9f8 column\uc778 count\ub294 \uc81c\uac70\ud55c\ub2e4.)\n\n[\ucd94\uac00\uc124\uba85]\n\n\uc774\ub54c, pandas\uc758 describe \ud568\uc218\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \uad6c\uc131\ub41c\ub2e4. ([\uc124\uba85\ub9c1\ud06c](https:\/\/www.javatpoint.com\/pandas-dataframe-describe))\n\n![image.png](attachment:1a9594ae-34f2-4ee9-b87e-8c94ac11a727.png)","d6ec113f":"![image.png](attachment:94cff2d3-d2e0-4658-bd4f-fc071505e81d.png)","6c198b7d":"- \uc6b0\uc6b8\uc99d \uc720\/\ubb34 \uc640 user id\uac00 \ub2f4\uae34 train\/test csv \ud30c\uc77c \ub85c\ub4dc\ud558\uae30\n- train\/test csv\ud30c\uc77c\uc5d0\uc11c user id \ud30c\uc2f1\ud558\uae30","f0c68836":"# \uacb0\ub860\n\n- \ub2e4\uc591\ud55c EMA \ub370\uc774\ud130\ub97c \ud1b5\ud574 \ucd94\ucd9c\ud55c Feature\ub97c \uc735\ud569\ud574\uc11c \uc0ac\uc6a9\ud558\uba74 \ub354 \uc88b\uc740 \uc131\ub2a5\uc73c\ub85c \uc6b0\uc6b8\uc99d \ubd84\ub958\uac00 \uac00\ub2a5\ud568\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4. \uc774\ub97c \ud1b5\ud574\uc11c \uc2e4\uc81c Feature representation\uc5d0 \ub530\ub978 \uc131\ub2a5\ucc28\uc774\ub97c \ud655\uc778\ud560 \uc218 \uc788\ub2e4.\n\n## \ucd94\uac00\uc2e4\ud5d8\n\n- \ud574\ub2f9 \ub370\uc774\ud130\uc14b\uc740 \ub370\uc774\ud130 imbalnce \ubb38\uc81c\uac00 \uc2ec\uac01\ud558\ub2e4. \ub530\ub77c\uc11c \uc774\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud55c \ubc29\ubc95\uc744 \ucd94\uac00\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\uc5ec \uc131\ub2a5\uc744 \ud5a5\uc0c1\uc2dc\ud0ac \uc218 \uc788\ub2e4.\n- \ud604\uc7ac \uc2a4\ucf08\ub808\ud1a4 \ucf54\ub4dc\uc5d0\uc11c\ub294 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 'Stress', 'Exercise'\uc5d0 \ub300\ud55c EMA \ub370\uc774\ud130\ub3c4 \uc81c\uacf5\ud55c\ub2e4. \uc774\ub97c \ucd94\uac00\uc801\uc73c\ub85c \uc774\uc6a9\ud558\uc5ec \uc131\ub2a5\uc751 \ud5a5\uc0c1\uc2dc\ud0ac \uc218 \uc788\ub2e4.\n\n","3a5bed3b":"# [Empty Module #1-2] EMA\ub370\uc774\ud130 \ud30c\uc2f1 - Social  \n\n\ubaa9\ud45c: \uc544\ub798 \uc124\ubb38\ud56d\ubaa9\uc5d0 \uc751\ub2f5\ud55c user\uc758 EAM \uacb0\uacfc\ub97c \uc801\uc808\ud55c \uc778\ub371\uc2a4\uc5d0 \ub300\uc751\ub418\ub294 \ub370\uc774\ud130\ub97c \ud30c\uc2f1\ud55c\ub2e4.\n\n```\n[input]\n--------------\n- json : User\uc758 EMA \uc751\ub2f5 \uacb0\uacfc(Index)\uac00 \ub2f4\uae34 json\ud30c\uc77c\n\n[output]\n--------------\n- raw data : \ub300\uc751\ub418\ub294 Index\uc758 \uac12\uc744 \ucd94\ucd9c\ud55c \ub370\uc774\ud130\n    \n```","c0962f1a":"![image.png](attachment:e208253b-9c94-4a22-8926-5c17efef42cc.png)","c8006671":"![image.png](attachment:ccc06de3-3669-43ab-8dd3-7ab57dffd69d.png)","7eb34982":"- Sleep, Social, Activity\uc640 \uad00\ub828\ub41c EMA \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30\n- \uc774\ub54c, user id\uc5d0 \ub300\uc751\ub418\ub294 EMA \ub370\uc774\ud130\ub9cc \ub85c\ub4dc\ud55c\ub2e4.","c367319a":"# [Empty Module #1-3] EMA\ub370\uc774\ud130 \ud30c\uc2f1 - Activity  \n\n\ubaa9\ud45c: \uc544\ub798 \uc124\ubb38\ud56d\ubaa9\uc5d0 \uc751\ub2f5\ud55c user\uc758 EAM \uacb0\uacfc\ub97c \uc801\uc808\ud55c \uc778\ub371\uc2a4\uc5d0 \ub300\uc751\ub418\ub294 \ub370\uc774\ud130\ub97c \ud30c\uc2f1\ud55c\ub2e4.\n\n```\n[input]\n--------------\n- json : User\uc758 EMA \uc751\ub2f5 \uacb0\uacfc(Index)\uac00 \ub2f4\uae34 json\ud30c\uc77c\n\n[output]\n--------------\n- raw data : \ub300\uc751\ub418\ub294 Index\uc758 \uac12\uc744 \ucd94\ucd9c\ud55c \ub370\uc774\ud130\n    \n```","43ac270e":"# [Empty Module #1-1] EMA\ub370\uc774\ud130 \ud30c\uc2f1 - Sleep  \n\n\ubaa9\ud45c: \uc544\ub798 \uc124\ubb38\ud56d\ubaa9\uc5d0 \uc751\ub2f5\ud55c user\uc758 EAM \uacb0\uacfc\ub97c \uc801\uc808\ud55c \uc778\ub371\uc2a4\uc5d0 \ub300\uc751\ub418\ub294 \ub370\uc774\ud130\ub97c \ud30c\uc2f1\ud55c\ub2e4.\n\n```\n[input]\n--------------\n- json : User\uc758 EMA \uc751\ub2f5 \uacb0\uacfc(Index)\uac00 \ub2f4\uae34 json\ud30c\uc77c\n\n[output]\n--------------\n- raw data : \ub300\uc751\ub418\ub294 Index\uc758 \uac12\uc744 \ucd94\ucd9c\ud55c \ub370\uc774\ud130\n    \n```","e5d71977":"# [Empty Module #3-3] Activity feature\ub9cc \uc774\uc6a9\ud558\uc5ec \uc6b0\uc6b8\uc99d \uc608\uce21\ud558\uae30\n\n- \uc55e\uc11c \uc218\uba74, \ud65c\ub3d9\uacfc \uad00\ub828\ub41c EMA \ub370\uc774\ud130\ub97c \uc774\uc6a9\ud574 \uc6b0\uc6b8\uc99d\uc744 \uc5d0\uce21\ud574 \uc131\ub2a5\uc744 \ud655\uc778\ud588\ub2e4\uba74, \uc774\uc81c\ub294 Activiy\uc640 \uad00\ub828 feature\ub97c \uc774\uc6a9\ud574 \uc6b0\uc6b8\uc99d \uc608\uce21\uc744 \uc9c4\ud589\ud55c\ub2e4.\n- \ubd84\ub958\uc5d0\ub294 SVM\uc744 \uc0ac\uc6a9\ud558\uba70 \uc8fc\uc5b4\uc9c4 \ud30c\ub77c\ubbf8\ud130\ub97c \uc774\uc6a9\ud558\uc5ec \ubd84\ub958\ub97c \uc218\ud589\ud55c\ub2e4.","d6a225d2":"![image.png](attachment:65ea9b4e-dab5-43b3-a5f4-51c045049d3a.png)","ea7aaf69":"- \uc55e\uc11c \uc54c\ub9de\uac8c \ub370\uc774\ud130\ub97c \ud30c\uc2f1\ud588\ub2e4\uba74 \uc544\ub798 \ubd80\ubd84\uc740 \ud574\ub2f9 \ub370\uc774\ud130\ub97c \uae30\ubc18\uc73c\ub85c Feature\ub97c \ucd94\ucd9c\ud558\uae30 \uc704\ud55c \uc900\ube44\ub2e8\uacc4\uc774\ub2e4.\n- \uac00\uc7a5\uba3c\uc800 \ub370\uc774\ud130\uc758 type\uc744 float\ud615\uc73c\ub85c \ubcc0\uacbd\ud558\uace0, \ud310\ub2e4\uc2a4\uc758 DataFrame\uc73c\ub85c \ubcc0\uacbd\ud55c\ub2e4. \uadf8\ub9ac\uace0 train\/test \ub370\uc774\ud130\uc14b \ud30c\uc2f1\uc744 \uc704\ud574\uc11c \uac00\uc7a5 \uccab\ubc88\uc9f8 column\uc5d0 user id\ub97c \ucd94\uac00\ud55c\ub2e4.","0b69938e":"# [Empty Module #3-4] \ubaa8\ub4e0 feature\ub97c \uc774\uc6a9\ud558\uc5ec \uc6b0\uc6b8\uc99d \uc608\uce21\ud558\uae30\n\n- \uc55e\uc11c \uc218\uba74, \ud65c\ub3d9, \uc0ac\ud68c\uc131\uacfc \uad00\ub828\ub41c EMA \ub370\uc774\ud130\uc5d0\uc11c \ucd94\ucd9c\ud55c feature \uac01\uac01\uc744 \uc774\uc6a9\ud574 \uc6b0\uc6b8\uc99d\uc744 \ubd84\ub958\ud558\uc600\ub2e4\uba74, \ubaa8\ub4e0 feautre\ub97c \ud1b5\ud569\ud558\uc5ec \ubd84\ub958\ub97c \uc218\ud589\ud55c\ub2e4.\n- \ubd84\ub958\uc5d0\ub294 SVM\uc744 \uc0ac\uc6a9\ud558\uba70 \uc8fc\uc5b4\uc9c4 \ud30c\ub77c\ubbf8\ud130\ub97c \uc774\uc6a9\ud558\uc5ec \ubd84\ub958\ub97c \uc218\ud589\ud55c\ub2e4.","36c17519":"# [Empty Module #3-2] Social feature\ub9cc \uc774\uc6a9\ud558\uc5ec \uc6b0\uc6b8\uc99d \uc608\uce21\ud558\uae30\n\n- \uc55e\uc11c \uc218\uba74\uacfc \uad00\ub828\ub41c EMA \ub370\uc774\ud130\ub97c \uc774\uc6a9\ud574 \uc6b0\uc6b8\uc99d\uc744 \uc5d0\uce21\ud574 \uc131\ub2a5\uc744 \ud655\uc778\ud588\ub2e4\uba74, \uc774\uc81c\ub294 Social\uad00\ub828 feature\ub97c \uc774\uc6a9\ud574 \uc6b0\uc6b8\uc99d \uc608\uce21\uc744 \uc9c4\ud589\ud55c\ub2e4.\n- \ubd84\ub958\uc5d0\ub294 SVM\uc744 \uc0ac\uc6a9\ud558\uba70 \uc8fc\uc5b4\uc9c4 \ud30c\ub77c\ubbf8\ud130\ub97c \uc774\uc6a9\ud558\uc5ec \ubd84\ub958\ub97c \uc218\ud589\ud55c\ub2e4.","f7f928f5":"# \ubc18\ub4dc\uc2dc \ucc98\uc74c\ubd80\ud130 \ub05d\uae4c\uc9c0 \uc2a4\ucf08\ub808\ud1a4 \ucf54\ub4dc\ub97c \uc0b4\ud3b4\ubcf4\uace0 \uad6c\ud604\ud558\uae30 \uc2dc\uc791\ud558\uae38 \ubc14\ub780\ub2e4\n\n## 1. \uc2a4\ucf08\ub808\ud1a4 \ucf54\ub4dc\ub97c [\ubcf5\uc0ac \ubc0f \ud3b8\uc9d1] \ud558\uc5ec \uc0ac\uc6a9\ud55c\ub2e4.\n## 2. \uc544\ub798\uc758 [Empty Module 3\uac1c]\ub97c \uc9c1\uc811 \uad6c\ud604\ud55c\ub2e4.\n"}}