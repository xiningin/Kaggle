{"cell_type":{"5c9f1cf3":"code","0d59a2d4":"code","d276688b":"code","20c29305":"code","44f174ca":"code","be9ab47b":"code","f2819e7a":"code","7b237fc4":"code","799f87a7":"code","11ea78e1":"code","13737a37":"code","6c53cb7e":"code","b49e47b1":"code","d040e8a0":"code","243e0601":"code","04637c34":"code","18b59367":"code","49e6213e":"code","d5281b7d":"code","31379fa1":"code","8e4dca89":"code","a585d5ff":"code","d4c797f5":"code","97d33fb8":"code","a5db821a":"code","0d6622df":"code","5b861c67":"code","77a1d86f":"code","ec75abb1":"code","38b76c6c":"code","0c9063ad":"code","0a52aa56":"code","e5c1eed7":"code","2c30fe93":"code","59b817b8":"code","a8dab304":"code","c5c06fd1":"code","179b4862":"code","6c5ce5f4":"code","9f937b9f":"code","74049f46":"code","bfdcfd97":"code","034e7ea3":"code","7818803b":"code","64be45ef":"code","f42c60ec":"code","f4ba58ed":"code","1b8788a6":"code","7d4d4da8":"code","29c3a07a":"code","c6ce8d37":"code","1babd1b8":"code","97b8ac1a":"code","e7c401b4":"code","bd7fd979":"code","cc38a22f":"code","d5d4c181":"code","f57212ca":"code","e00563c5":"code","03af207e":"code","523b9623":"code","b1c13b35":"code","5e207ddd":"code","d10485e1":"code","ddd8ce8f":"code","d3f4078b":"code","ada5f577":"code","55445366":"code","4759744d":"code","d4146408":"code","1140d0fa":"code","ea3f1191":"code","39cbefcf":"code","b23e304d":"code","bbda7060":"code","9786d122":"markdown","d8cca0ae":"markdown","6c7a41eb":"markdown","22d94e31":"markdown","df4fafd6":"markdown","09a7bddf":"markdown","22dec9e4":"markdown","a452c0b8":"markdown","75686c49":"markdown"},"source":{"5c9f1cf3":"import pandas as pd\nimport numpy as np\nimport json\nimport glob\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline","0d59a2d4":"zomato = pd.read_csv(\"..\/input\/zomato-csv\/zomato.csv\",encoding='utf-8')\ncountry_code = pd.read_csv(\"..\/input\/country-code-data-converted-into-csv\/Country-Code.csv\")","d276688b":"json_files = glob.glob(\"..\/input\/zomato-restaurants-data\/*.json\")","20c29305":"def json_to_df(file):\n    master_df =  pd.DataFrame()\n    with open(file) as file:\n        test = json.load(file)\n\n    master_df = pd.DataFrame()\n    for i in test:\n        try :\n            for j in i['restaurants']:\n                master_df= master_df.append(pd.DataFrame(j).transpose())\n        except:\n            continue\n    return master_df","44f174ca":"df_ls = []\nfor file in json_files:\n    df_ls.append(json_to_df(file))","be9ab47b":"ls_27 = df_ls[0].columns\nls_23 = df_ls[4].columns\n\nuncommon_cols = list(set(ls_27) ^ set(ls_23))","f2819e7a":"master_df = pd.DataFrame()\nfor i in range(len(df_ls)):\n    if i!=4:\n        print(\"start {}\".format(len(master_df)))\n        temp_df= pd.DataFrame(df_ls[i])\n        master_df = master_df.append(temp_df)\n        print(\"end {}\".format(len(master_df)))\n    else :\n        print(\"start {}\".format(len(master_df)))\n        temp_df= pd.DataFrame(df_ls[i])\n        for col in uncommon_cols:\n            temp_df[col] = \"\"\n        master_df = master_df.append(temp_df)\n        print(\"end {}\".format(len(master_df)))\n    ","7b237fc4":"master_df.head(2)","799f87a7":"master_df['res_id']= master_df.apply(lambda x: x['R']['res_id'],axis=1)\n\nmaster_df['rating_text'] = master_df.apply(lambda x : x['user_rating']['rating_text'],axis=1)\nmaster_df['rating_color'] = master_df.apply(lambda x : x['user_rating']['rating_color'],axis=1)\nmaster_df['aggregate_rating'] = master_df.apply(lambda x : x['user_rating']['aggregate_rating'],axis=1)\nmaster_df['votes'] = master_df.apply(lambda x: x['user_rating']['votes'],axis =1)\n\nmaster_df['city'] = master_df.apply(lambda x : x['location']['city'],axis =1)\nmaster_df['locality_verbose'] = master_df.apply(lambda x : x['location']['locality_verbose'],axis =1)\nmaster_df['locality'] = master_df.apply(lambda x : x['location']['locality'],axis =1)","11ea78e1":"cols_req = ['res_id','average_cost_for_two', 'cuisines', 'currency', 'has_online_delivery', 'has_table_booking', \n            'is_delivering_now', 'name', 'price_range','switch_to_order_menu','rating_text', 'rating_color', 'aggregate_rating',\n            'votes','city','locality_verbose', 'locality']","13737a37":"master_df_sub = master_df[cols_req].drop_duplicates()","6c53cb7e":"master_df_sub.info()","b49e47b1":"def continuous_var(x):\n    sns.distplot(x)","d040e8a0":"x = [float(i) for i in list(master_df_sub['aggregate_rating'])]\ncontinuous_var(x)","243e0601":"x = [float(i) for i in list(master_df_sub['votes'])]\ncontinuous_var(x)","04637c34":"df = pd.DataFrame(master_df_sub['price_range'].value_counts())\ndf['var'] = df.index\nsns.barplot(x='var',y=\"price_range\",data =df)","18b59367":"df = pd.DataFrame(master_df_sub['currency'].value_counts())\ndf['var'] = df.index\nsns.barplot(x='var',y=\"currency\",data =df)","49e6213e":"#cuisines   \n## standardise and create new groups\nf, ax = plt.subplots(figsize=(15, 6))\ndf = pd.DataFrame(master_df_sub['cuisines'].value_counts())\ndf['var'] = df.index\ndf = df.sort_values(\"cuisines\",ascending=False).head(10)\nsns.barplot(x='var',y=\"cuisines\",data =df,ax=ax)","d5281b7d":"## map city to countries for seg\nf, ax = plt.subplots(figsize=(15, 6))\ndf = pd.DataFrame(master_df_sub['city'].value_counts())\ndf['var'] = df.index\ndf = df.sort_values(\"city\",ascending=False).head(10)\nsns.barplot(x='var',y=\"city\",data =df,ax=ax)","31379fa1":"#rating_color \n## convert color codes to color name\nf, ax = plt.subplots(figsize=(5, 6))\ndf = pd.DataFrame(master_df_sub['rating_color'].value_counts())\ndf['var'] = df.index\n# df = df.sort_values(\"rating_color\",ascending=False).head(10)\nsns.barplot(x='var',y=\"rating_color\",data =df,ax=ax)","8e4dca89":"\n# f, ax = plt.subplots(figsize=(5, 6))\ndf = pd.DataFrame(master_df_sub['has_online_delivery'].value_counts())\ndf['var'] = df.index\n# df = df.sort_values(\"rating_color\",ascending=False).head(10)\nsns.barplot(x='var',y=\"has_online_delivery\",data =df)","a585d5ff":"\n# f, ax = plt.subplots(figsize=(5, 6))\ndf = pd.DataFrame(master_df_sub['has_table_booking'].value_counts())\ndf['var'] = df.index\n# df = df.sort_values(\"rating_color\",ascending=False).head(10)\nsns.barplot(x='var',y=\"has_table_booking\",data =df)","d4c797f5":"#locality              \n## map city to countries for seg\nf, ax = plt.subplots(figsize=(15, 6))\ndf = pd.DataFrame(master_df_sub['locality'].value_counts())\ndf['var'] = df.index\ndf = df.sort_values(\"locality\",ascending=False).head(10)\nsns.barplot(x='var',y=\"locality\",data =df,ax=ax)","97d33fb8":"\n# f, ax = plt.subplots(figsize=(5, 6))\ndf = pd.DataFrame(master_df_sub['rating_text'].value_counts())\ndf['var'] = df.index\n# df = df.sort_values(\"rating_color\",ascending=False).head(10)\nsns.barplot(x='var',y=\"rating_text\",data =df)","a5db821a":"master_df_sub = pd.merge(master_df_sub,zomato[['Restaurant ID','Country Code']],left_on='res_id',right_on='Restaurant ID')","0d6622df":"master_df_sub = pd.merge(master_df_sub,country_code,on='Country Code')","5b861c67":"color_name_dict = {'5BA829':'green','3F7E00':'dark green','FF7800':'orange','9ACD32':'yellow green','CDD614':\"yellow black\",\n                    'FFBA00':\"orange black\",\"CBCBC8\":'grey',\"DE1D0F\":'red'}","77a1d86f":"master_df_sub['rating_color_name'] = master_df_sub.apply(lambda x: color_name_dict[x['rating_color']],axis =1)","ec75abb1":"master_df_sub.cuisines.unique()","38b76c6c":"import gensim\nimport numpy as np\nglobal model\nmodel = gensim.models.KeyedVectors.load_word2vec_format('C:\/Users\/bansaln\/Desktop\/PrinterFix\/GoogleNews-vectors-negative300.bin.gz', binary=True)","0c9063ad":"from gensim.parsing.preprocessing import *","0a52aa56":"unique_cuisines =  master_df_sub.cuisines.unique()","e5c1eed7":"def word_vec(cuisines_str):\n    cuisines = cuisines_str.split(\",\")\n    tokens = [remove_stopwords(strip_multiple_whitespaces(strip_tags(strip_punctuation(strip_numeric(i))))).split(\" \") \n              for i in cuisines] \n    word_vec = []\n    \n    for token in tokens:\n        temp_vec = []\n        for sub in token:\n            try :\n                temp_vec.append(model[sub])\n            except :\n                print(\"NA for {}\".format(sub))\n        if len(temp_vec)>1:    \n            avg_vec = np.mean(temp_vec,axis=0)\n        elif len(temp_vec)==1 :\n            avg_vec = temp_vec[0]\n        else :\n            avg_vec = \" \"\n        \n        word_vec.append({sub :avg_vec})\n            \n    return word_vec\n        ","2c30fe93":"uniq_cui_vec = [word_vec(i) for i in unique_cuisines]","59b817b8":"uniq_cui_each = [j  for i in uniq_cui_vec for j in i]","a8dab304":"uniq_dish = list(set([k.strip() for j in [i.split(\",\") for i in unique_cuisines] for k in j]))","c5c06fd1":"#rating_color \n## convert color codes to color name\nf, ax = plt.subplots(figsize=(10, 6))\ndf = pd.DataFrame(master_df_sub['rating_color_name'].value_counts())\ndf['var'] = df.index\n# df = df.sort_values(\"rating_color\",ascending=False).head(10)\nsns.barplot(x='var',y=\"rating_color_name\",data =df,ax=ax)","179b4862":"f, ax = plt.subplots(figsize=(15, 6))\ndf = pd.DataFrame(master_df_sub['Country'].value_counts())\ndf['var'] = df.index\ndf = df.sort_values(\"Country\",ascending=False).head(10)\nsns.barplot(x='var',y=\"Country\",data =df,ax=ax)","6c5ce5f4":"india_df = master_df_sub[master_df_sub.Country=='India']","9f937b9f":"india_df['average_cost_for_two'] = india_df.apply(lambda x : float(x['average_cost_for_two']),axis =1)","74049f46":"pd.DataFrame(india_df.city.value_counts())","bfdcfd97":"## taking only top 4 citis consist of Delhi and NCR region\n\nindia_df_sub =india_df[india_df.city.isin(['New Delhi','Gurgaon','Noida','Faridabad'])]","034e7ea3":"f, ax = plt.subplots(figsize=(15, 6))\nsns.catplot(x=\"city\", y=\"average_cost_for_two\", kind=\"swarm\",hue=\"rating_text\" ,data=india_df_sub,ax=ax)","7818803b":"f, ax = plt.subplots(figsize=(15, 10))\nsns.catplot(x=\"city\", y=\"average_cost_for_two\", kind=\"swarm\",hue=\"price_range\" ,data=india_df_sub,ax=ax)","64be45ef":"f, ax = plt.subplots(figsize=(15, 6))\nsns.catplot(x=\"city\", y=\"average_cost_for_two\", kind=\"violin\",hue=\"has_online_delivery\" ,data=india_df_sub,ax=ax)","f42c60ec":"#has_table_booking       \nf, ax = plt.subplots(figsize=(15, 6))\nsns.catplot(x=\"city\", y=\"average_cost_for_two\", kind=\"violin\",hue=\"has_table_booking\" ,data=india_df_sub,ax=ax)","f4ba58ed":"india_df_sub.columns","1b8788a6":"def try_model(word):\n    try :\n        return model[word]\n    except :\n        return 'NA'","7d4d4da8":"def cuisines_vec(cui_ls):\n#     print(cui_ls)\n    words = [i for i in cui_ls.split(\",\")]\n#     print(words)\n    words_vec = []\n    for i in words:\n        if len(i.split(\" \"))<1:\n            temp_vec =  try_model(i.strip())\n        else :\n            temp_vec =  [try_model(j.strip()) for j in i.split(\" \") if j.strip()!=\"\"]\n            temp_vec = np.mean([i for i in temp_vec if i!='NA'],axis =0)\n        words_vec.append(temp_vec)\n#     print((words_vec))\n    return np.mean(words_vec,axis =0)","29c3a07a":"india_df_sub[\"cuisines_vec\"] =  india_df_sub.apply(lambda x : cuisines_vec(x['cuisines']),axis =1)","c6ce8d37":"def string_to_vec(rating_text):\n    ls = [j.strip() for i in rating_text.split(\" \") for j in i.split(\"-\") if len(j.strip())>1]\n    words_vec = []\n    for word in ls:\n        try :\n            words_vec.append(model[word])\n        except : continue\n    return np.mean(words_vec,axis =0)","1babd1b8":"india_df_sub[\"rating_vec\"] = india_df_sub.apply(lambda x : string_to_vec(x['rating_text']),axis =1)\nindia_df_sub[\"city_vec\"] = india_df_sub.apply(lambda x : string_to_vec(x['city']),axis =1)\nindia_df_sub[\"locality_vec\"] = india_df_sub.apply(lambda x : string_to_vec(x['locality']),axis =1)\n","97b8ac1a":"india_df_sub[\"rating_color_vec\"] = india_df_sub.apply(lambda x : string_to_vec(x['rating_color_name']),axis =1)","e7c401b4":"from sklearn import preprocessing\n\ndef normaliz(col):\n    x = np.array(col).reshape(-1,1)\n    min_max_scaler = preprocessing.MinMaxScaler()\n    x_scaled = min_max_scaler.fit_transform(x)\n    return x_scaled","bd7fd979":"india_df_sub['avg_cost'] = normaliz(india_df_sub.average_cost_for_two)\nindia_df_sub['price_range_norm'] = normaliz(india_df_sub.price_range)\nindia_df_sub['agg_rate_norm'] = normaliz(india_df_sub.aggregate_rating)\nindia_df_sub['votes_norm'] = normaliz(india_df_sub.votes)\n","cc38a22f":"cols_cluster = ['has_online_delivery', 'has_table_booking', 'cuisines_vec', 'rating_vec', \n                'city_vec', 'locality_vec', 'avg_cost','rating_color_vec', 'price_range_norm', \n                'agg_rate_norm', 'votes_norm']","d5d4c181":"from sklearn.cluster import KMeans","f57212ca":"def vec_column(columns_ls):\n    ls = []\n    for col in columns_ls:\n        try :ls.append(col.tolist())\n        except : ls.append([col])    \n    \n    array_vec = np.hstack(ls).tolist()\n    \n    return array_vec","e00563c5":"india_df_sub['vec'] = india_df_sub.apply(lambda x: vec_column([x['has_online_delivery'],x['has_table_booking'],\n                                                             x['cuisines_vec'],x['rating_vec'],x['city_vec'],\n                                                             x['locality_vec'],x['avg_cost'],x['rating_color_vec'],\n                                                             x['price_range_norm'],x['agg_rate_norm'],x['votes_norm']])\n                                        ,axis =1)","03af207e":"master_ls = []\nfor i in india_df_sub['vec']:\n    master_ls.append(i)\n    \nX_df = pd.DataFrame(master_ls).fillna(0.0)\nX= X_df.as_matrix()","523b9623":"X_df.to_csv(\"cluster_train_data.csv\")","b1c13b35":"X = pd.read_csv(\"cluster_train_data.csv\").as_matrix()","5e207ddd":"from scipy.spatial.distance import cdist","d10485e1":"distortions = []\nK = range(1,10)\nfor k in K:\n    kmeanModel = KMeans(n_clusters=k)\n    kmeanModel.fit(X)\n    distortions.append(sum(np.min(cdist(X, kmeanModel.cluster_centers_, 'euclidean'), axis=1)) \/ X.shape[0])\n    \n#     cluster_labels = kmeanModel.labels_\n    \n#     pca = PCA(n_components=2)\n#     pca.fit(X)\n#     cluster_vis_df = pd.DataFrame(pca.transform(X),columns = ['X','Y'])\n#     cluster_vis_df['cluster'] = cluster_labels\n    \n#     facet = sns.lmplot(data=cluster_vis_df, x='X', y='Y', hue='cluster', \n#                    fit_reg=False, legend=True, legend_out=True)","ddd8ce8f":"df = pd.DataFrame([[i,distortions[i-1]] for i in K],columns =['num_clust','distortion'])\nax = sns.pointplot(x=\"num_clust\", y=\"distortion\",data=df)","d3f4078b":"kmeans_clust = KMeans(n_clusters=6).fit(X)\ncluster_labels = kmeans_clust.labels_","ada5f577":"india_df_sub['cluster'] = cluster_labels","55445366":"from sklearn.decomposition import PCA","4759744d":"pca = PCA(n_components=3)\npca.fit(X)\ncluster_vis_df = pd.DataFrame(pca.transform(X),columns = ['X','Y','Z'])\ncluster_vis_df['cluster'] = cluster_labels","d4146408":"from mpl_toolkits.mplot3d import Axes3D\nimport matplotlib.pyplot as plt\n# plot\nfig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\nax.scatter(cluster_vis_df['X'], cluster_vis_df['Y'], cluster_vis_df['Z'], c=cluster_labels, s=60)\nax.view_init(30, 185)\nplt.show()\n","1140d0fa":"india_df_sub.columns","ea3f1191":"master_df_loc = master_df[['res_id','location']]\nmaster_df_loc['lat'] = master_df_loc.apply(lambda x : float(x['location']['latitude']),axis=1)\nmaster_df_loc['lang'] = master_df_loc.apply(lambda x : float(x['location']['longitude']),axis=1)","39cbefcf":"india_df_sub_loc = pd.merge(india_df_sub,master_df_loc[['res_id','lat','lang']].drop_duplicates(),on=['res_id'])","b23e304d":"len(india_df_sub_loc)","bbda7060":"facet = sns.lmplot(data=india_df_sub_loc, x='lat', y='lang', hue='cluster', \n                   fit_reg=False, legend=True, legend_out=True)","9786d122":"## Clutser Profiling","d8cca0ae":"## Only India Data : Max records","6c7a41eb":"## Delhi NCR Region","22d94e31":"## Modifying cuisines ","df4fafd6":"## Data Import and Collation","09a7bddf":"## Clustering","22dec9e4":"## Univariate","a452c0b8":"## Modification","75686c49":"## Univariate cont.."}}