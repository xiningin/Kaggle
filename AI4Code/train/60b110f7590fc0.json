{"cell_type":{"c166d8c4":"code","411b7043":"code","c5528122":"code","e9d92408":"code","043465e0":"code","c1eb49ee":"code","c4cdb0f3":"code","696ff743":"code","62d8c406":"code","6c12de2c":"code","a02ce3bd":"code","f08bf37c":"code","52d05d46":"code","a79a8052":"code","702c8132":"code","5ba274f9":"code","4ded5952":"code","e61e738a":"code","919840e4":"code","94ec4ef0":"code","c5d9fc4a":"code","035a31a1":"code","e275f957":"code","c3ef1979":"code","f9ea2308":"markdown"},"source":{"c166d8c4":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","411b7043":"df_reviews = pd.read_json('..\/input\/IMDB_reviews.json', lines=True)","c5528122":"df_details = pd.read_json('..\/input\/IMDB_movie_details.json', lines=True)","e9d92408":"print('User reviews shape: ', df_reviews.shape)\nprint('Movie details shape: ', df_details.shape)","043465e0":"df_reviews.head()","c1eb49ee":"df_details.head()","c4cdb0f3":"print('Unique films in reviews dataset:', df_reviews['movie_id'].nunique())","696ff743":"reviews_meta = pd.DataFrame()\nreviews_meta['is_spoiler'] = df_reviews['is_spoiler']\nreviews_meta['has_word_spoiler'] = df_reviews['review_text'].apply(lambda text: 1 if 'SPOILER' in text.upper() else 0)","62d8c406":"pie1 = reviews_meta['is_spoiler'].value_counts().reset_index().sort_values(by='index')\npie2 = reviews_meta[reviews_meta['has_word_spoiler'] == 1]['is_spoiler'].value_counts().reset_index().sort_values(by='index')\n\nwith plt.style.context('seaborn-talk'):\n    fig = plt.figure(figsize=(16, 8))\n\n    ax1 = fig.add_subplot(1, 2, 1)\n    ax2 = fig.add_subplot(1, 2, 2)\n\n    ax1.pie(pie1['is_spoiler'])\n    ax1.set_title('All reviews')\n\n    ax2.pie(pie2['is_spoiler'])\n    ax2.set_title('Reviews containing the word \\'spoiler\\'')\n\n    plt.suptitle('Spoiler distribution within the reviews', fontsize=20)\n    fig.legend(labels=['Without spoilers', 'With spoilers'], loc='center')\n\n    plt.show()","6c12de2c":"reviews_meta['word_count'] = df_reviews['review_text'].apply(lambda text: len(text.split(' ')))","a02ce3bd":"with plt.style.context('seaborn-talk'):\n    plt.figure(figsize=(16, 8))\n    sns.distplot(reviews_meta[reviews_meta['is_spoiler'] == False]['word_count'], hist=False, label='Without spoilers')\n    sns.distplot(reviews_meta[reviews_meta['is_spoiler'] == True]['word_count'], hist=False, label='Containing spoilers')\n    plt.legend()\n    plt.xlim([-100, 1100])\n    plt.xlabel('Word Count')\n    plt.title('Distribution according to review length')\n    plt.show()","f08bf37c":"star_wars = df_reviews[df_reviews['movie_id'] == 'tt0080684']\nstar_wars.is_spoiler.value_counts()","52d05d46":"star_wars_meta = pd.DataFrame()\nstar_wars_meta['is_spoiler'] = star_wars['is_spoiler']\nstar_wars_meta['has_word_vader'] = star_wars['review_text'].apply(lambda text: 1 if 'VADER' in text.upper() else 0)\nstar_wars_meta['has_word_father'] = star_wars['review_text'].apply(lambda text: 1 if 'FATHER' in text.upper() else 0)\nstar_wars_meta['has_word_vader_father'] = star_wars_meta['has_word_vader'] & star_wars_meta['has_word_father']","a79a8052":"pie1 = star_wars_meta['is_spoiler'].value_counts().reset_index().sort_values(by='index')\npie2 = star_wars_meta[star_wars_meta['has_word_vader'] == 1]['is_spoiler'].value_counts().reset_index().sort_values(by='index')\npie3 = star_wars_meta[star_wars_meta['has_word_father'] == 1]['is_spoiler'].value_counts().reset_index().sort_values(by='index')\npie4 = star_wars_meta[star_wars_meta['has_word_vader_father'] == 1]['is_spoiler'].value_counts().reset_index().sort_values(by='index')\n\nwith plt.style.context('seaborn-talk'):\n    fig = plt.figure(figsize=(16, 16))\n\n    ax1 = fig.add_subplot(2, 2, 1)\n    ax2 = fig.add_subplot(2, 2, 2)\n    ax3 = fig.add_subplot(2, 2, 3)\n    ax4 = fig.add_subplot(2, 2, 4)\n\n    ax1.pie(pie1['is_spoiler'])\n    ax1.set_title('All reviews')\n\n    ax2.pie(pie2['is_spoiler'])\n    ax2.set_title('Reviews containing the word \\'Vader\\'')\n\n    ax3.pie(pie3['is_spoiler'])\n    ax3.set_title('Reviews containing the word \\'father\\'')\n\n    ax4.pie(pie4['is_spoiler'])\n    ax4.set_title('Reviews containing the words \\'Vader\\' and \\'father\\'')\n\n    plt.suptitle('Star Wars: Episode V - The Empire Strikes Back (1980)', fontsize=20)\n    fig.legend(labels=['Without spoilers', 'With spoilers'], loc='center')\n\n    plt.show()","702c8132":"overall_spoiler_ratio = df_reviews.is_spoiler.value_counts()[1] \/ (df_reviews.is_spoiler.value_counts()[0] + df_reviews.is_spoiler.value_counts()[1])\noverall_spoiler_ratio","5ba274f9":"movie_info = df_reviews.is_spoiler.eq(1).groupby(df_reviews['movie_id'])\nmovie_info = pd.concat([movie_info.size().rename('review_count'), movie_info.sum().astype(int).rename('spoiler_count'), (movie_info.sum() \/ movie_info.size()).rename('spoiler_rate')], axis=1).reset_index()","4ded5952":"rating_info = df_reviews.is_spoiler.eq(1).groupby(df_reviews['rating'])\nrating_info = pd.concat([rating_info.size().rename('review_count'), rating_info.sum().astype(int).rename('spoiler_count'), (rating_info.sum() \/ rating_info.size()).rename('spoiler_rate')], axis=1).reset_index()","e61e738a":"with plt.style.context('seaborn-talk'):\n    sns.lineplot(data=rating_info, x='rating', y='spoiler_rate')\n    plt.ylim(0.20, 0.35)\n    plt.axhline(y=overall_spoiler_ratio, color='black', ls='--', label = 'Overall spoiler ratio')\n    plt.title('Spoiler ratio according to rating given by user')\n    plt.xlabel('Rating')\n    plt.ylabel('Spoiler ratio')\n    plt.legend()\n    plt.show()","919840e4":"movie_info = pd.merge(df_details, movie_info, on='movie_id')","94ec4ef0":"def runtime_to_int(runtime):\n    parts = runtime.split(' ')\n    total_time = 0\n    for part in parts:\n        if 'h' in part:\n            total_time += int(part[:-1]) * 60\n        if 'min' in part:\n            total_time += int(part[:-3])\n    return total_time","c5d9fc4a":"def convert_release_date_to_year(release_date):\n    return int(release_date[:4])","035a31a1":"movie_info['runtime'] = movie_info['duration'].apply(runtime_to_int)\nmovie_info['year_release'] = movie_info['release_date'].apply(convert_release_date_to_year)","e275f957":"with plt.style.context('seaborn-talk'):\n    sns.lineplot(data=movie_info, x='year_release', y='spoiler_rate')\n    plt.axhline(y=overall_spoiler_ratio, color='black', ls='--', label = 'Overall spoiler ratio')\n    plt.title('Spoiler ratio according to movie release year')\n    plt.xlabel('Release Year')\n    plt.ylabel('Spoiler ratio')\n    plt.xticks(range(1920, 2030, 10))\n    plt.legend()\n    plt.show()","c3ef1979":"with plt.style.context('seaborn-talk'):\n    sns.lineplot(data=movie_info, x='runtime', y='spoiler_rate')\n    plt.axhline(y=overall_spoiler_ratio, color='black', ls='--', label = 'Overall spoiler ratio')\n    plt.title('Spoiler ratio according to movie runtime')\n    plt.xlabel('Runtime (minutes)')\n    plt.ylabel('Spoiler ratio')\n    plt.legend()\n    plt.show()","f9ea2308":"**Star Wars: Episode V - The Empire Strikes Back (1980)**"}}