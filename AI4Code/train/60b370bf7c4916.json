{"cell_type":{"56f80a05":"code","94c4d5e9":"code","9fd58b98":"code","195a6c7d":"code","b751d707":"code","52a21e4a":"code","0557779e":"code","89da506d":"code","0ea001e8":"code","abad08b1":"code","79270486":"code","0f3ca990":"code","7dcf5de4":"code","d1ff7861":"code","75f71828":"code","ad8e8e5e":"code","bb3109f5":"code","1c520aa1":"code","cd547591":"code","e6f04efb":"code","55a9ebde":"code","4bfedb5f":"code","18900019":"code","b8e8f4c9":"code","26ade484":"code","2d68b7e9":"code","a8d5902b":"code","6dd928cb":"markdown","49eb67db":"markdown","2a424291":"markdown","df25f3a4":"markdown","eb161bc4":"markdown","54e382c5":"markdown","e366e469":"markdown","bc2316e7":"markdown","155ab616":"markdown","cd8a7699":"markdown","1aff77b9":"markdown","76bcc017":"markdown","e7fdcc3e":"markdown","28abff01":"markdown","66117c2b":"markdown","6b104739":"markdown","4fdd3a60":"markdown"},"source":{"56f80a05":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","94c4d5e9":"df= pd.read_csv('\/kaggle\/input\/air-quality-data-set-from-uci-website\/AirQualityUCI.csv', sep = ';')\ndf.head()","9fd58b98":"df.columns","195a6c7d":"df.head()","b751d707":"df.drop(['Unnamed: 15', 'Unnamed: 16'], axis=1 , inplace=True)\ndf.head()","52a21e4a":"df.info()","0557779e":"df.shape","89da506d":"df.isna().sum()","0ea001e8":"df.tail(5)","abad08b1":"df = df.drop(df.index[9357:9471])","79270486":"df.tail(5)","0f3ca990":"df.info()","7dcf5de4":"A = ['CO(GT)' , 'C6H6(GT)' , 'T' , 'RH' , 'AH']\n                             \nfor i in A:\n    df[i] = df[i].str.replace(',','.')\n    df[i] = df[i].astype(float)","d1ff7861":"df.info()","75f71828":"df['Hour']=df['Time'].apply(lambda x: int(x.split('.')[0]))","ad8e8e5e":"df['Date']=pd.to_datetime(df['Date'], format='%d\/%m\/%Y')\ndf['Month']= df['Date'].dt.month  \ndf.head(5)","bb3109f5":"df.describe()","1c520aa1":"df_corr = df.corr()\ndf_corr","cd547591":"fig, ax = plt.subplots(figsize=(12,8 ))\nsns.heatmap(df_corr, cmap = \"YlGnBu\", annot=True)","e6f04efb":"for i in df.columns.tolist()[2:]:\n    sns.lmplot(x=i,y='RH',data=df,markers='.')","55a9ebde":"X = df.drop(['Date','Time','RH'],axis=1)\ny = df['RH']","4bfedb5f":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","18900019":"from sklearn.linear_model import LinearRegression\nmodel= LinearRegression()\nmodel.fit(X_train, y_train)","b8e8f4c9":"pd.DataFrame(model.coef_, X.columns, columns=['Coeficient'])","26ade484":"y_pred=model.predict(X_test)","2d68b7e9":"from sklearn import metrics\nMAE= metrics.mean_absolute_error(y_test, y_pred)\nMSE= metrics.mean_squared_error(y_test, y_pred)\nRMSE=np.sqrt(MSE)\n\npd.DataFrame([MAE, MSE, RMSE], index=['MAE', 'MSE', 'RMSE'], columns=['Metrics'])","a8d5902b":"df['RH'].mean()","6dd928cb":"# Importing the libraries","49eb67db":"We can see that some columns are not integer. We should change the string columns to an integer which we can use:","2a424291":"Now it looks better!","df25f3a4":"# Bulding a model (Multiple regression)","eb161bc4":"As we can read from the description: \n\n0 Date (DD\/MM\/YYYY)\n\n1 Time (HH.MM.SS)\n\n2 True hourly averaged concentration CO in mg\/m^3 (reference analyzer)\n\n3 PT08.S1 (tin oxide) hourly averaged sensor response (nominally CO targeted)\n\n4 True hourly averaged overall Non Metanic HydroCarbons concentration in microg\/m^3 (reference analyzer)\n\n5 True hourly averaged Benzene concentration in microg\/m^3 (reference analyzer)\n\n6 PT08.S2 (titania) hourly averaged sensor response (nominally NMHC targeted)\n\n7 True hourly averaged NOx concentration in ppb (reference analyzer)\n\n8 PT08.S3 (tungsten oxide) hourly averaged sensor response (nominally NOx targeted)\n\n9 True hourly averaged NO2 concentration in microg\/m^3 (reference analyzer)\n\n10 PT08.S4 (tungsten oxide) hourly averaged sensor response (nominally NO2 targeted)\n\n11 PT08.S5 (indium oxide) hourly averaged sensor response (nominally O3 targeted)\n\n12 Temperature in \u00c2\u00b0C\n\n13 Relative Humidity (%)\n\n14 AH Absolute Humidity ","54e382c5":"As we can see, there are 9357 valid rows of dataset and all others are null:","e366e469":"# Exploratory data analysis","bc2316e7":"# Cleaning the data","155ab616":"# Dealing with the missing data","cd8a7699":"# The dataset","1aff77b9":"This dataset contains the responses of a gas multisensor device deployed on the field in an Italian city. Hourly responses averages are recorded along with gas concentrations references from a certified analyzer.\n\nThe dataset contains 9358 instances of hourly averaged responses from an array of 5 metal oxide chemical sensors embedded in an Air Quality Chemical Multisensor Device. The device was located on the field in a significantly polluted area, at road level,within an Italian city. Data were recorded from March 2004 to February 2005 (one year)representing the longest freely available recordings of on field deployed air quality chemical sensor devices responses. Ground Truth hourly averaged concentrations for CO, Non Metanic Hydrocarbons, Benzene, Total Nitrogen Oxides (NOx) and Nitrogen Dioxide (NO2) and were provided by a co-located reference certified analyzer.","76bcc017":"In this dataset we want to build a model to predit the relative humidity (RH) based on the air quality factors givern to us. This is a typical regression model that can be done in many ways. We are going to do an EDA on the dataset and then make a regression model on the dataset.\nI have written this notebook by looking and getting help from this repository: https:\/\/github.com\/ishanag9\/air-quality-prediction\/blob\/master\/project.ipynb","e7fdcc3e":"Let's take a closer look at the columns:","28abff01":"Let's take a closer look at the null data:","66117c2b":"We should change the hour to an integer type:","6b104739":"We drop the Unnamed columns as they are null:","4fdd3a60":"We need to derive the month from the date:"}}