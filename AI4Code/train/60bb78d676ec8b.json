{"cell_type":{"042048b7":"code","31763cc0":"code","c4fc6def":"code","ffc33e9e":"code","39791c0e":"code","00d3f6b9":"code","b7f5a3b6":"code","8a7f4c7d":"code","160d9700":"code","f51eaac5":"code","673f0dbb":"code","b4e414f9":"code","3542b85c":"code","44caecd1":"code","7acf0af4":"code","6f9d6ec9":"code","e9bb869f":"code","a18b7f5b":"code","19c8b754":"code","6de1f4b2":"code","d9d35a5b":"code","2ab5f644":"code","2815bbe2":"code","b9017b4e":"code","c29f6404":"code","380e25c9":"code","203e105a":"code","8c0958e3":"code","302e19e6":"code","5687f7de":"code","becb2467":"code","66e50715":"code","0e8798f7":"code","b459c281":"code","12f456fe":"code","7b038209":"code","cd4a7dec":"code","d09c44bf":"code","5fc67b47":"code","fb1e7557":"code","2a361b90":"code","1284fa2f":"code","bf6ade49":"code","fd955679":"code","e78a0922":"code","396e635e":"code","38703918":"code","d47fba4f":"code","9e7b9996":"code","e4d288f6":"code","bc4ce59f":"code","ceaed72a":"code","1530befc":"code","c0f1571b":"code","49df136f":"code","a63ee46a":"code","3f72477b":"code","7558bce0":"code","f5b0e3cf":"code","ba23595a":"code","6ae2c871":"code","b377fd18":"code","002848d2":"code","7c63f569":"code","1802aaca":"code","f39d7185":"code","2ad487e4":"code","287dff6c":"code","7c02fe0f":"code","8580bd1c":"code","5eeaebef":"code","f08a8428":"code","a4ec3206":"code","800ce13f":"code","5403566a":"code","b632bd3c":"code","7fb13feb":"code","7b2d21e9":"code","7add96c6":"code","7b0fe487":"code","35bbfa25":"code","1941dccf":"code","56cab5d6":"code","6f8fc1ec":"markdown","1832b06d":"markdown","b2b0df1d":"markdown","375b82c9":"markdown","f019895d":"markdown","74ec96c6":"markdown","a8fe9cd0":"markdown","b636c52e":"markdown","4f24fba2":"markdown","f11df487":"markdown","a4cbd8b1":"markdown","25f4116f":"markdown","e45351a4":"markdown","b5773b79":"markdown","c5e0c6e4":"markdown","f9b7b4dc":"markdown","17ec75b1":"markdown","ab19cddc":"markdown","03df648e":"markdown","f790f9c4":"markdown","47a8d92f":"markdown","90261996":"markdown","73e7c66a":"markdown","5ad8f906":"markdown","8be17de5":"markdown","0b341dbf":"markdown","ce7f765e":"markdown","a914ea11":"markdown","95200e42":"markdown","a0656183":"markdown","07f64b7d":"markdown","d823b803":"markdown","c3243dea":"markdown","1d2f809b":"markdown","f85acd73":"markdown","4ede36ca":"markdown","6fff41c6":"markdown","0542d1ec":"markdown","43274302":"markdown","2b5b2adc":"markdown","c03022ee":"markdown","527160df":"markdown","8dda7191":"markdown","8549b965":"markdown","e2eefcee":"markdown","8d4b4b98":"markdown","a28f4e11":"markdown","8c883fc1":"markdown","d91ffbe4":"markdown","c5960fce":"markdown","b002363f":"markdown","7612b0d2":"markdown","2add7472":"markdown","2bd839a4":"markdown","2853faca":"markdown","8189883c":"markdown","d61b25ce":"markdown","84570408":"markdown","c30847c9":"markdown","93754a29":"markdown","a8d92c06":"markdown","2eb20918":"markdown","84f7afd1":"markdown","0952ef8c":"markdown","d4bc5f2e":"markdown","371b3f57":"markdown","bb45cbbf":"markdown","4ec164d0":"markdown","6b3eea65":"markdown","6b39c2de":"markdown","1b822335":"markdown","75ec0433":"markdown","156f263c":"markdown"},"source":{"042048b7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport os #paths to file\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport warnings# warning filter\n\n#ploting libraries\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set_palette('husl')\n\n#feature engineering\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.preprocessing import LabelEncoder\n\n#train test split\nfrom sklearn.model_selection import train_test_split\n\n\n#metrics\nfrom sklearn.metrics import mean_absolute_error as MAE\nfrom sklearn.metrics import mean_squared_error as MSE\nfrom sklearn.metrics import r2_score as R2\nfrom sklearn.model_selection  import cross_val_score as CVS\n\n\n#ML models\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.linear_model import Lasso\n\n\n#default theme and settings\nsns.set(context='notebook', style='darkgrid', palette='deep', font='sans-serif', font_scale=1, color_codes=False, rc=None)\npd.options.display.max_columns\n\n#warning hadle\nwarnings.filterwarnings(\"always\")\nwarnings.filterwarnings(\"ignore\")\n\n## Display all the columns of the dataframe\npd.pandas.set_option('display.max_columns',None)\n\n## Display all the rows of the dataframe\n#pd.pandas.set_option('display.max_rows',None)\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","31763cc0":"## loading the train dataset\ndataset = pd.read_csv('..\/input\/bigmart-sales-data\/Train.csv')\n\n\n## print shape of dataset with rows and columns\nprint(dataset.shape)","c4fc6def":"dataset.head()","ffc33e9e":"# check the columns\ndataset.columns","39791c0e":"# check the information about the dataset\ndataset.info()","00d3f6b9":"# Check the name of coloumns which contain string\ndataset.select_dtypes(include='object').columns","b7f5a3b6":"# Check the no. of coloumns which contain string\nlen(dataset.select_dtypes(include='object').columns)","8a7f4c7d":"# Check the name of coloumns which contain numerical value\ndataset.select_dtypes(include=['int64', 'float64']).columns\n","160d9700":"# Check the no. of coloumns which contain numerical value\nlen(dataset.select_dtypes(include=['int64', 'float64']).columns)","f51eaac5":"# statistical summary\ndataset.describe()","673f0dbb":"dataset.isnull().values.any()","b4e414f9":"dataset.isnull().values.sum()","3542b85c":"dataset.isnull().sum()","44caecd1":"# columns with null values\ndataset.columns[dataset.isnull().any()]","7acf0af4":"len(dataset.columns[dataset.isnull().any()])","6f9d6ec9":"# null values with heatmap\nplt.figure(figsize=(16,9))\nsns.heatmap(dataset.isnull())\nplt.show()","e9bb869f":"null_percent = dataset.isnull().sum() \/ dataset.shape[0] * 100\n\n# (missing values \/ total values) * 100\n\nnull_percent","a18b7f5b":"plt.figure(figsize=(8,5))\nsns.boxplot('Item_Weight',data=dataset)","19c8b754":"dataset['Item_Weight'] = dataset['Item_Weight'].fillna(dataset['Item_Weight'].mean())","6de1f4b2":"dataset['Outlet_Size'] = dataset['Outlet_Size'].fillna(dataset['Outlet_Size'].mode()[0])","d9d35a5b":"dataset.isnull().values.any()","2ab5f644":"len(dataset.columns[dataset.isnull().any()])","2815bbe2":"dataset['Item_Identifier'].value_counts()","b9017b4e":"dataset['Item_Fat_Content'].value_counts()","c29f6404":"dataset['Item_Fat_Content'].replace(['low fat','LF','reg'],['Low Fat','Low Fat','Regular'],inplace = True)","380e25c9":"dataset['Item_Fat_Content'].value_counts()","203e105a":"dataset['Item_Type'].value_counts()","8c0958e3":"dataset['Outlet_Identifier'].value_counts()","302e19e6":"dataset['Outlet_Size'].value_counts()","5687f7de":"dataset['Outlet_Location_Type'].value_counts()","becb2467":"dataset['Outlet_Type'].value_counts()","66e50715":"dataset['Years_Established'] = dataset['Outlet_Establishment_Year'].apply(lambda x: 2021 - x) \ndataset = dataset.drop(columns=['Outlet_Establishment_Year'])\ndataset.head()","0e8798f7":"# Check the name of coloumns which contain string\ndataset.select_dtypes(include='object').columns","b459c281":"plt.figure(figsize=(8,5))\nsns.countplot('Item_Fat_Content',data=dataset,palette='Set1')","12f456fe":"plt.figure(figsize=(24,8))\nsns.countplot('Item_Type',data=dataset,palette='twilight')","7b038209":"plt.figure(figsize=(8,5))\nsns.countplot('Outlet_Size',data=dataset,palette='Set2')","cd4a7dec":"plt.figure(figsize=(8,5))\nsns.countplot('Outlet_Location_Type',data=dataset,palette='ocean')","d09c44bf":"plt.figure(figsize=(8,5))\nsns.countplot('Outlet_Type',data=dataset,palette='spring')","5fc67b47":"# Check the name of coloumns which contain string\ndataset.select_dtypes(include='object').columns","fb1e7557":"plt.figure(figsize=(8,5))\nsns.barplot('Item_Fat_Content','Item_Outlet_Sales',data=dataset,palette='summer')","2a361b90":"plt.figure(figsize=(8,5))\nplt.scatter('Item_Visibility','Item_Outlet_Sales',data=dataset)","1284fa2f":"plt.figure(figsize=(10,8))\nsns.barplot(y='Item_Type',x='Item_Outlet_Sales',data=dataset,palette='spring')","bf6ade49":"plt.figure(figsize=(8,5))\nplt.scatter(y='Item_Outlet_Sales',x='Item_MRP',data=dataset)\nplt.xlabel('Item MRP')\nplt.ylabel('Item Outlet Sales')","fd955679":"plt.figure(figsize=(8,5))\nsns.barplot(x='Outlet_Size',y='Item_Outlet_Sales',data=dataset,palette='mako')","e78a0922":"plt.figure(figsize=(8,5))\nsns.barplot(x='Outlet_Location_Type',y='Item_Outlet_Sales',data=dataset,palette='autumn')","396e635e":"plt.figure(figsize=(25,5))\nsns.barplot('Item_Type','Item_Outlet_Sales',hue='Item_Fat_Content',data=dataset,palette='Set1')\nplt.legend()","38703918":"plt.figure(figsize=(10,5))\nsns.barplot('Outlet_Location_Type','Item_Outlet_Sales',hue='Outlet_Type',data=dataset,palette='mako')\nplt.legend()","d47fba4f":"# distplot of the target variable\n\nplt.figure(figsize=(16,9))\nbar = sns.distplot(dataset['Item_Outlet_Sales'])\nbar.legend([\"Skewness: {:.2f}\".format(dataset['Item_Outlet_Sales'].skew())])\nplt.show()","9e7b9996":"dataset_2 = dataset.drop(columns='Item_Outlet_Sales')","e4d288f6":"dataset_2.shape","bc4ce59f":"dataset_2.corrwith(dataset['Item_Outlet_Sales']).plot.bar(\n    figsize=(16,9), title='Correlated with SalePrice', grid=True\n)","ceaed72a":"# heatmap\nplt.figure(figsize=(9, 9))\nax = sns.heatmap(data=dataset.corr(), cmap='coolwarm', annot=True, linewidths=2)","1530befc":"#feature engineering\nfrom sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nvar_mod = ['Outlet_Identifier','Item_Type']\n\nfor i in var_mod:\n    dataset[i] = le.fit_transform(dataset[i])\n    ","c0f1571b":"dataset.head()","49df136f":"dataset = dataset.drop(columns=['Item_Identifier'])\ndataset.head()","a63ee46a":"#feature engineering\nfrom sklearn.preprocessing import OneHotEncoder","3f72477b":"dataset = pd.get_dummies(data=dataset, drop_first=True)\ndataset.shape","7558bce0":"dataset.head()","f5b0e3cf":"#dataset['Item_Visibility'] = np.log(dataset['Item_Visibility'])","ba23595a":"#dataset.head()","6ae2c871":"# independ variables \/ matrix of features\nx = dataset.drop(columns='Item_Outlet_Sales')","b377fd18":"# target variable \/ dependent variable\ny = dataset['Item_Outlet_Sales']","002848d2":"from sklearn.model_selection import train_test_split","7c63f569":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=0)","1802aaca":"x_train.shape","f39d7185":"y_train.shape","2ad487e4":"x_test.shape","287dff6c":"y_test.shape","7c02fe0f":"features= ['Item_Weight','Item_Fat_Content','Item_Visibility','Item_Type','Item_MRP','Outlet_Size','Outlet_Location_Type','Outlet_Type','Years_Established']","8580bd1c":"#metrics\nfrom sklearn.metrics import mean_absolute_error as MAE\nfrom sklearn.metrics import mean_squared_error as MSE\nfrom sklearn.metrics import r2_score as R2\nfrom sklearn.model_selection  import cross_val_score as CVS","5eeaebef":"#ML models\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.linear_model import Lasso\nfrom xgboost import XGBRFRegressor\nfrom sklearn.linear_model import Ridge","f08a8428":"def cross_val(model_name,model,x,y,cv):\n    \n    scores = CVS(model, x, y, cv=cv)\n    print(f'{model_name} Scores:')\n    for i in scores:\n        print(round(i,2))\n    print(f'Average {model_name} score: {round(scores.mean(),4)}')","a4ec3206":"#ML model\nfrom sklearn.linear_model import LinearRegression\n\n#model\nregressor_mlr = LinearRegression()\n\n#fit\nregressor_mlr.fit(x_train, y_train)\n\n#predict\ny_pred = regressor_mlr.predict(x_test)\n\n#score variables\nLR_MAE = round(MAE(y_test, y_pred),2)\nLR_MSE = round(MSE(y_test, y_pred),2)\nLR_R_2 = round(R2(y_test, y_pred),4)\nLR_CS  = round(CVS(regressor_mlr, x, y, cv=5).mean(),4)\n\nprint(f\" Mean Absolute Error: {LR_MAE}\\n\")\nprint(f\" Mean Squared Error: {LR_MSE}\\n\")\nprint(f\" R^2 Score: {LR_R_2}\\n\")\ncross_val(regressor_mlr,LinearRegression(),x,y,5)","800ce13f":"Linear_Regression=pd.DataFrame({'y_test':y_test,'prediction':y_pred})\nLinear_Regression.to_csv(\"Linear Regression.csv\")  ","5403566a":"#ML model\nfrom sklearn.ensemble import RandomForestRegressor\n\n#model\nregressor_rf = RandomForestRegressor(n_estimators=200,max_depth=5, min_samples_leaf=100,n_jobs=4,random_state=101)\n\n#fit\nregressor_rf.fit(x_train, y_train)\n\n#predict\ny_pred = regressor_rf.predict(x_test)\n\n#score variables\nRFR_MAE = round(MAE(y_test, y_pred),2)\nRFR_MSE = round(MSE(y_test, y_pred),2)\nRFR_R_2 = round(R2(y_test, y_pred),4)\nRFR_CS  = round(CVS(regressor_rf, x, y, cv=5).mean(),4)\n\n\n\nprint(f\" Mean Absolute Error: {RFR_MAE}\\n\")\nprint(f\" Mean Squared Error: {RFR_MSE}\\n\")\nprint(f\" R^2 Score: {RFR_R_2}\\n\")\ncross_val(regressor_rf,RandomForestRegressor(),x,y,5)","b632bd3c":"Random_Forest_Regressor=pd.DataFrame({'y_test':y_test,'prediction':y_pred})\nRandom_Forest_Regressor.to_csv(\"Random Forest Regressor.csv\")  ","7fb13feb":"#ML model\nfrom sklearn.linear_model import Lasso\n\n#model\nregressor_ls = Lasso(alpha = 0.05)\n#fit\nregressor_ls.fit(x_train,y_train)\n\n#predict\ny_pred = regressor_ls.predict(x_test)\n\n#score variables\nLS_MAE = round(MAE(y_test, y_pred),2)\nLS_MSE = round(MSE(y_test, y_pred),2)\nLS_R_2 = round(R2(y_test, y_pred),4)\nLS_CS  = round(CVS(regressor_ls, x, y, cv=5).mean(),4)\n\nprint(f\" Mean Absolute Error: {LS_MAE}\\n\")\nprint(f\" Mean Squared Error: {LS_MSE}\\n\")\nprint(f\" R^2 Score: {LS_R_2}\\n\")\ncross_val(regressor_ls,Lasso(alpha = 0.05),x,y,5)","7b2d21e9":"Lasso_Regressor=pd.DataFrame({'y_test':y_test,'prediction':y_pred})\nLasso_Regressor.to_csv(\"Lasso Regressor.csv\")    ","7add96c6":"#ML model\nfrom xgboost import XGBRFRegressor\n\n#model\nregressor_xgb = XGBRFRegressor()\n\n#fit\nregressor_xgb.fit(x_train, y_train)\n\n#predict\ny_pred = regressor_xgb.predict(x_test)\n\n#score variables\nXGB_MAE = round(MAE(y_test, y_pred),2)\nXGB_MSE = round(MSE(y_test, y_pred),2)\nXGB_R_2 = round(R2(y_test, y_pred),4)\nXGB_CS  = round(CVS(regressor_xgb, x, y, cv=5).mean(),4)\n\nprint(f\" Mean Absolute Error: {XGB_MAE}\\n\")\nprint(f\" Mean Squared Error: {XGB_MSE}\\n\")\nprint(f\" R^2 Score: {XGB_R_2}\\n\")\ncross_val(regressor_xgb,XGBRFRegressor(alpha = 0.05),x,y,5)","7b0fe487":"XGBoost_Regressor=pd.DataFrame({'y_test':y_test,'prediction':y_pred})\nXGBoost_Regressor.to_csv(\"XGBoost Regressor.csv\") ","35bbfa25":"#ML model\nfrom sklearn.linear_model import Ridge\n\n#model\nregressor_rd = Ridge(normalize=True)\n#fit\nregressor_rd.fit(x_train,y_train)\n\n#predict\ny_pred = regressor_ls.predict(x_test)\n\n#score variables\nRD_MAE = round(MAE(y_test, y_pred),2)\nRD_MSE = round(MSE(y_test, y_pred),2)\nRD_R_2 = round(R2(y_test, y_pred),4)\nRD_CS  = round(CVS(regressor_rd, x, y, cv=5).mean(),4)\n\nprint(f\" Mean Absolute Error: {RD_MAE}\\n\")\nprint(f\" Mean Squared Error: {RD_MSE}\\n\")\nprint(f\" R^2 Score: {RD_R_2}\\n\")\ncross_val(regressor_rd,Ridge(normalize=True),x,y,5)","1941dccf":"Ridge_Regressor=pd.DataFrame({'y_test':y_test,'prediction':y_pred})\nRidge_Regressor.to_csv(\"Ridge Regressor.csv\")  ","56cab5d6":"MAE= [LR_MAE,RFR_MAE,LS_MAE,XGB_MAE,RD_MAE]\nMSE= [LR_MSE,RFR_MSE,LS_MSE,XGB_MSE,RD_MSE]\nR_2= [LR_R_2,RFR_R_2,LS_R_2,XGB_R_2,RD_R_2]\nCross_score= [LR_CS,RFR_CS,LS_CS,XGB_CS,RD_CS]\n\nModels = pd.DataFrame({\n    'Models': [\"Linear Regression\",\"Random Forest Regressor\",\"Lasso Regressor\",\"XGBoost Regressor\",\"Ridge Regressor\"],\n    'MAE': MAE, 'MSE': MSE, 'R^2':R_2, 'Cross Validation Score':Cross_score})\nModels.sort_values(by='MAE', ascending=True)","6f8fc1ec":"## Importing the Librabies and Dataset","1832b06d":"## Cleaning the Data","b2b0df1d":"### 5) Outlet Size to Item Outlet Sales","375b82c9":"Observation: Low Fat and Regular both are contributing equally to the revenue generation","f019895d":"### 1) Item Fat Content","74ec96c6":"## 1) Multiple Linear Regressor","a8fe9cd0":"## Distplot","b636c52e":"1. Locality: Outlet in populated locality should generate more revenue\n\n2. Spending Capacity: Tier 1 should have more spending capacity than tier 2 and tier 3\n\n3. Product Selection: Tier 1 should prefer low fat content food as they tend to be more aware of their health\n\n4. Item Visiblity: More visible Item should have more revenue generating power\n\n5. Area: Stores which have early establishment could have higher outlet size\n\n6. MRP: Consumers prefer reasonable product or Branded products","4f24fba2":"## A] Univariate Analysis","f11df487":"# The Hypothesis","a4cbd8b1":"1. By applying Exploratory Data Analysis we will identify the relation between different attributes and evaluate meaningful information\n\n2. By applying different supervised machine learning algorithms we will predict the sales for test dataset","25f4116f":"### 1) Item Type by Item Fat Content to Item Outlet Sales","e45351a4":"## Removing Skewness","b5773b79":"## Label Encoding","c5e0c6e4":"Observation: Tier 2 & 3 have more revenue generation power although we have maximum number ot outlet in Tier 3 cities so it justify the number","f9b7b4dc":"# Part 4: Building the model","17ec75b1":"Observation: People bought more Fruits and Vegetables","ab19cddc":"### 5) Outlet Type","03df648e":"## B] Bivariate Analysis","f790f9c4":"### 2) Item Type","47a8d92f":"Skewness in variables is undesirable for predictive modeling. Some machine learning methods assume normally distributed data and a skewed variable can be transformed by taking its log, square root, or cube root so as to make its distribution as close to normal distribution as possible. In our data, variables Item_Visibility is highly skewed. So, we will treat skewness with the help of log transformation.","90261996":"## Dealing with missing data","73e7c66a":"Observation: Mostly we have equal revenue generation from Fat and Regular Food Items","5ad8f906":"## C] Multivariate Analysis","8be17de5":"Some of \u2018Low Fat\u2019 values mis-coded as \u2018low fat\u2019 and \u2018LF\u2019. Also, some of \u2018Regular\u2019 are mentioned as \u2018regular\u2019. We need to fix them","0b341dbf":"# Part 1: Data Preprocessing","ce7f765e":"The main objective is to find the sales per product for each store and evaluate meaningful insights. Using this model, BigMart will try to understand different attributes of the product and apply them to increase their overall sales","a914ea11":"![product-package-boxes-cart-with-shopping-bag-laptop-computer_38716-306.jpg](attachment:40fdf22a-6709-4540-aa8a-3dbc8abed299.jpg)","95200e42":"## 3) Lasso Regressor","a0656183":"*Skewness not taken into account as it was hindering the performance*","07f64b7d":"Observation: Items with higher MRP are sold maximum","d823b803":"## 5) Ridge Regressor","c3243dea":"Observation: Although Fruits and Vegetables unit sold are high, however revenue generated by Seafood is much higher, so we have to focus more on such products","1d2f809b":"### 1) Item Fat Content to Item Outlet Sales","f85acd73":"Observation: Maximum outlets in Tier 3 cities","4ede36ca":"# Part 3) Feature Enginering","6fff41c6":"## Splitting the dataset","0542d1ec":"This notebook analyzes customer behavior for that we have BigMarts Sales data collected in 2013 which is bifurcated in train (8523 records & 12 attributes) and test (5681 records & 11 attributes) data set, train data set has both independant and dependant variable(s) given below\n\n* Item_Identifier: Product ID\n* Item_Weight: Weight of Product\n* Item_Fat_Content: Fat content of Product- Low\/Regular\n* Item_Visibility: Parameter to know the visiblity\/reach of product\n* Item_Type: Category of Product\n* Item_MRP: Maximum Retail Price of the Product\n* Outlet_Identifier: Store ID\n* Outlet_Establishment_Year: The Year in which store is established\n* Outlet_Size: Areawise distribution of Stores- Low\/Medium\/High\n* Outlet_Location_Type: Type of city in which outlet is located\n* Outlet_Type: Type of outlet - Grocery store or supermarket\n* Item_Outlet_Sales: Sale price of product - The dependant variable to be predicted","43274302":"### 4) Item MRP to Item Outlet Sales","2b5b2adc":"**Box Plot suggest we dont have any outlier and hence we can change missing values with 'Mean'**","c03022ee":"*We will convert \"Outlet_Establishment_Year\" to Age of the Store to get more meaning from the data*","527160df":"Observation: We have more Medium Outlets","8dda7191":"## Data Exploration","8549b965":"Observation: Medium and High size outlet have maximum revenue generation power","e2eefcee":"## Correlation matrix","8d4b4b98":"# Conclusion","a28f4e11":"## One Hot Encoding","8c883fc1":"# Aim of the Project","d91ffbe4":"We need to analyse the dataset and come up with more insights and our main objective is to predict the Sales figure for the test dataset","c5960fce":"## 2) Random Forest Regressor","b002363f":"Observation: People bought more Low Fat Items","7612b0d2":"Since the Outlet_Size is a categorial variable we can change this missing values to \"Mode\"(Most Repeated Value)","2add7472":"# Introduction","2bd839a4":"1. XGBoost Regressor and Random Forest are best performing Models, we can use both to check on test data set and find out which perform better\n2. MRP has huge correlation with the Outlet Sales\n3. For better performance we need parameter tuning after selecting the suitable model","2853faca":"Some Defination:\n\na) R-Squared: R-squared is a statistical measure that represents the proportion of the variance for a dependent variable that's explained by an independent variable or variables in a regression model.\n\nIf the R2 of a model is 0.50, then approximately half of the observed variation can be explained by the model's inputs.\n\nb) MAE and MSE: MAE : The mean absolute error (MAE) is a measure of errors between paired observations expressing the same phenomenon. MSE : The mean squared error tells you how close a regression line is to a set of points. It does this by taking the distances from the points to the regression line (these distances are the \u201cerrors\u201d) and squaring them.\n\nc) RMSE: RMSE is a measure of how spread out these residuals are. In other words, it tells you how concentrated the data is around the line of best fit.","8189883c":"Hi Kaggler,\n\nWe will do some Explorations through the BigMart's sales data to understand their distribuitions and patterns and finally we will predict the sales price\n\nI have kept the kernal as basic as possible to understand the details clearly. \n\nLook for another interesting Kernels on [Kaggle](https:\/\/www.kaggle.com\/harshalnikose)\n\nPlease go through presentation uploaded on [GitHub](https:\/\/github.com\/HarshalNikose\/BigMart-Sales-Forecast.git)\n\nI'll appreciate your feedback and if you like this kernel, votes up!","d61b25ce":"# Welcome to my Kernal","84570408":"### 4) Outlet Location","c30847c9":"## Feature scaling","93754a29":"### 3) Outlet Size","a8d92c06":"### 2) Item Visiblity to Item Outlet Sales","2eb20918":"Observation: Here we have intresting ovservation, where the visiblity of Items is Zero, which suggest those items kept behind in shelf and amlost have no visiblity can also be sold. This show Consumer tend to search for their own products","84f7afd1":"![thank_you_inscription_05_hd_pictures_170903.jpg](attachment:15c5dfa0-94ca-4797-867b-d574ca8f8d3c.jpg)","0952ef8c":"### 3) Item Type to Item Outlet Sales","d4bc5f2e":"### 2) Outlet Location Type by Outlet Type to Item Outlet Sales","371b3f57":"## 4) XGBoost Regressor","bb45cbbf":"# Realizations","4ec164d0":"Observation: Here we have intresting ovservation, where the visiblity of Items is Zero, which suggest those items kept behind in shelf and almost have no visiblity can also be sold. This show Consumer tend to search for their own products","6b3eea65":"### 6) Outlet Location to Item Outlet Sales","6b39c2de":"# Problem Statment","1b822335":"Observation: Maximum supermarket are of Type 1","75ec0433":"# Approach","156f263c":"# Part 2: Exploratory Data Analysis"}}