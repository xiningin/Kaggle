{"cell_type":{"87fe2a02":"code","a3f215e4":"code","b1218970":"code","9f85bc5d":"code","3b2f4c00":"code","1eaa6fea":"code","367c20c5":"code","2879a634":"code","427d22b3":"code","cb378fba":"code","5b841b16":"code","93843e97":"code","aba21bf6":"code","ecf64091":"code","47f9a351":"code","4d81da9e":"markdown","04b61ad4":"markdown","cacba27c":"markdown","d7c0d632":"markdown","34e6369d":"markdown"},"source":{"87fe2a02":"# Importing Libraries\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nget_ipython().run_line_magic('matplotlib', 'inline')\n","a3f215e4":"# Importing the Dataset\nmtcars = house = pd.read_csv(\"..\/input\/mtcars.csv\")","b1218970":"# Converting the continuous variables in categorical ones\nmtcars\nmtcars['vs']=mtcars['vs'].astype('category')\nmtcars['am']=mtcars['am'].astype('category')\nmtcars['gear']=mtcars['gear'].astype('category')\nmtcars['carb']=mtcars['carb'].astype('category')\nmtcars['cyl']=mtcars['cyl'].astype('category')\nmtcars.info()\n","9f85bc5d":"\ng = sns.PairGrid(mtcars[[ 'mpg',  'disp', 'hp', 'drat', 'wt','qsec']])\ng.map_diag(plt.hist)\ng.map_offdiag(plt.scatter)\n","3b2f4c00":"sns.pairplot(mtcars, x_vars=['disp', 'hp', 'drat', 'wt'], y_vars=[\"mpg\"],\n             height=5, aspect=.8, kind=\"reg\");\n","1eaa6fea":"fig, (ax1, ax2, ax3,ax4,ax5) = plt.subplots(1,5,figsize=(20,7))\n\nfig.suptitle(\"Boxplot for Mtcars\", fontsize=35)\n\nsns.boxplot(x=\"gear\", y=\"mpg\", data=mtcars,ax=ax1)\nsns.boxplot(x=\"carb\", y=\"mpg\", data=mtcars,ax=ax2)\nsns.boxplot(x=\"vs\", y=\"mpg\", data=mtcars,ax=ax3)\nsns.boxplot(x=\"am\", y=\"mpg\", data=mtcars,ax=ax4)\nsns.boxplot(x=\"cyl\", y=\"mpg\", data=mtcars,ax=ax5)\n\n","367c20c5":"\n## Countplot for categorical variables\nfig, (ax1, ax2, ax3,ax4,ax5) = plt.subplots(1,5,figsize=(25,7))\n\nfig.suptitle(\"Countplot for Mtcars\", fontsize=35)\n\nsns.countplot(x=\"gear\", data=mtcars,ax=ax1)\nsns.countplot(x=\"cyl\", data=mtcars,ax=ax2)\nsns.countplot(x=\"carb\", data=mtcars,ax=ax3)\nsns.countplot(x=\"vs\", data=mtcars,ax=ax4)\nsns.countplot(x=\"am\", data=mtcars,ax=ax5)\n","2879a634":"## Correlation Matrix\ncorr = mtcars.corr()\ncorr.style.background_gradient()\ncorr.style.background_gradient().set_precision(2)\n\n","427d22b3":"## Declaring the variables\niv=mtcars[['cyl', 'disp', 'hp', 'drat', 'wt', 'qsec', 'vs', 'am','gear', 'carb']]\ndv=mtcars['mpg']\n","cb378fba":"## Creating the dummy variables \niv=pd.get_dummies(iv)\niv=iv.drop(['cyl_4', 'vs_0','am_0','gear_3','carb_1','carb_2','carb_3','carb_4','carb_6',\n           'carb_8','hp','wt'], axis=1)\n","5b841b16":"## Dividing the Dataset into Test and Train\nfrom sklearn.model_selection import train_test_split\niv_train,iv_test,dv_train,dv_test=train_test_split(iv,dv,test_size=1\/4,random_state=0)\n","93843e97":"## Implementing Linear Regression\nfrom sklearn.linear_model import LinearRegression\nregressor= LinearRegression()\nregressor.fit(iv_train,dv_train)\n\n","aba21bf6":"## Seeing the result of Linear Regression\nimport statsmodels.api as sm\nX2 = sm.add_constant(iv_train)\nest = sm.OLS(dv_train,X2)\nest2 = est.fit()\nprint(est2.summary())\n","ecf64091":"## Predictiions for TEST\ny_pred=regressor.predict(iv_test)\n","47f9a351":"## Seeing the Predictions\ny_pred","4d81da9e":"* The relation of MPG with various categorical variables is established. It shows that MPG is inversely related to number of cylinders and carb\n* Am and Vs are veru similar to each other. They might not add different inferences to the model \n>","04b61ad4":"**This is a basic example that shows the approach that shall be taken to solve Linear Regression Problems in Python. Useful boxplot and scatter plots have been provided to show the use of seaborn package**","cacba27c":"The correlation matrix is very useful in Linear Regression. We know that if there is correlation between the varibles then then beta values do not make sense. We must choose only one of the highly correlated variables.","d7c0d632":"The pandas function of creating the dummy variables is the most simplest one. Far more easier than sklearn. \n**Please note the dropping of columns to avoid dummy variable trap**","34e6369d":"Seeing the Pairwise Plot to determine the basic relationship among variables. Complememted with the correlation plot this becomes very useful"}}