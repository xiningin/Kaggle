{"cell_type":{"9a9e30f0":"code","8a4ea73b":"code","98ff42aa":"code","4734e510":"code","cb9d676f":"code","b7fea1bf":"code","ec68457e":"code","3ab88a97":"code","c1ade5cc":"code","279af813":"code","ec3ed32f":"code","b0f6fbe5":"code","d2b3ddfa":"code","e5514126":"code","2f15bd55":"code","28664c2c":"code","3930fa49":"code","48c43f56":"code","b8b03a87":"markdown","1c01f934":"markdown","2b0f3a53":"markdown","82dc23fe":"markdown","290c52f1":"markdown","8ac0f6ce":"markdown","a1b8e7f5":"markdown","a1ab66fb":"markdown","8ee1efc1":"markdown","2db47ffa":"markdown","33898fc0":"markdown"},"source":{"9a9e30f0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pylab import rcParams\nrcParams['figure.figsize']=(12,6)\nsns.set()\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.metrics import accuracy_score\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8a4ea73b":"data=pd.read_csv(\"\/kaggle\/input\/loan-default-prediction\/Default_Fin.csv\")\ndata.head()","98ff42aa":"data.shape","4734e510":"data.isnull().sum()","cb9d676f":"data.info()","b7fea1bf":"data.describe()","ec68457e":"data.boxplot(column=['Annual Salary'])\nplt.show","3ab88a97":"sns.heatmap(data.corr(),annot=True,cmap='RdYlGn')","c1ade5cc":"fig = plt.figure(figsize=(10,6))\n\nsns.kdeplot(data[data['Defaulted?']==1]['Bank Balance'])\nsns.kdeplot(data[data['Defaulted?']==0]['Bank Balance'])\n\nfig.legend(labels=['Defaulted', 'Not Defaulted'])\nplt.title('Bank Balance')\nplt.show()","279af813":"fig = plt.figure(figsize=(10,6))\n\nsns.kdeplot(data[data['Defaulted?']==1]['Annual Salary'])\nsns.kdeplot(data[data['Defaulted?']==0]['Annual Salary'])\n\nfig.legend(labels=['Defaulted', 'Not Defaulted'])\nplt.title('Annual Salary')\nplt.show()","ec3ed32f":"sns.set_style('whitegrid')\nsns.countplot(x='Defaulted?',data=data)","b0f6fbe5":"sns.set_style('whitegrid')\nsns.countplot(x='Employed',data=data)","d2b3ddfa":"from sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score","e5514126":"feature_cols = ['Employed', 'Bank Balance', 'Annual Salary']\n\n''' Normalize the distribution. '''\nscaler = MinMaxScaler()\ndata[feature_cols] = scaler.fit_transform(data[feature_cols])","2f15bd55":"X = data[feature_cols]\ny = data['Defaulted?']\n\nvalidation_size = 0.20\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=validation_size, random_state=4, stratify=y)","28664c2c":"model1=LogisticRegression(class_weight='balanced')\nmodel1.fit(X_train,y_train)\nmodel1.fit(X_test,y_test)\nPrediction=model1.predict(X_train)\nC=confusion_matrix(y_train,Prediction)\nC_R=classification_report(y_train,Prediction)\nprint(\"Test Metrics for train_data:\")\nprint(C)\nprint(C_R)\n","3930fa49":"Prediction= model1.predict(X_test)\nC_=confusion_matrix(y_test,Prediction)\nC_R_=classification_report(y_test,Prediction)\nprint(\"Test Metrics for test_data:\")\nprint(C_)\nprint(C_R_)","48c43f56":"model2=DecisionTreeClassifier(random_state=0)\nmodel2.fit(X_train,y_train)\nmodel2.fit(X_test,y_test)\nPrediction=model2.predict(X_train)\nC=confusion_matrix(y_train,Prediction)\nC_R=classification_report(y_train,Prediction)\nprint(\"Test Metrics for train_data:\")\nprint(C)\nprint(C_R)","b8b03a87":"## The ones mostly getting deafulted for loans have lesser annual salary.","1c01f934":"# **Training**","2b0f3a53":"> > ## We get the insight that the ones getting defaulted have higher bank balance.","82dc23fe":"The dataset has these datatypes-\n1. int\n2. float","290c52f1":"## We can see that there is a moderate level of correlation in between Bank Balance and the Default status, and high correlation among Annual Salary and Bank Balance.","8ac0f6ce":"# **2. DECISION TREE CLASSIFIER**","a1b8e7f5":"The dataset has 10000 rows and 5 columns.","a1ab66fb":"## The dataset has no missing values.","8ee1efc1":"## It can be seen that there is no outlier present in the data.","2db47ffa":"* The average Bank Balance of the people is around 10024.498524.\n* Mostly the people has an annual salary oof approximately 402203.782224.\n* 33% of them have experienced loan defaults.","33898fc0":"# **1.Logistic Regression**"}}