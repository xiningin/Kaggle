{"cell_type":{"260936ee":"code","90f70f52":"code","d5f713bb":"code","af94fbec":"code","b1ffaa51":"code","49a53c12":"code","c8e3b0e2":"code","c401eec0":"code","a1435b12":"code","6394c33c":"code","e3f51e82":"code","cfd07e50":"code","bb064328":"code","c0b2ad57":"code","2fce9638":"code","02d27ddf":"markdown","bc20ef58":"markdown","c9d5de82":"markdown","9a35adb1":"markdown","c73792b3":"markdown"},"source":{"260936ee":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport matplotlib.pyplot as plt\nimport librosa\nimport os\nos.chdir(\"\/kaggle\/input\/train\/audio\")\ngenel_yol=\"\/kaggle\/input\/train\/audio\/\"\nos.listdir()\n#Audio i\u00e7indeki seslere g\u00f6re klas\u00f6rler.","90f70f52":"import IPython.display as ipd\nipd.Audio(genel_yol+\"\/yes\/\"+\"df1d5024_nohash_3.wav\")","d5f713bb":"x, sr=librosa.load(genel_yol+\"\/yes\/\"+\"df1d5024_nohash_3.wav\")\nprint(x.shape,sr)","af94fbec":"import librosa.display\nplt.figure(figsize=(10,5))\nlibrosa.display.waveplot(x,sr=sr);","b1ffaa51":"zero_cross=librosa.feature.zero_crossing_rate(x)\nprint(\"Zero Crossing Rate: \",np.mean(zero_cross))","49a53c12":"spec_centroid=librosa.feature.spectral_centroid(x,sr=sr)[0]\nprint(np.mean(spec_centroid))","c8e3b0e2":"spec_rolloff=librosa.feature.spectral_rolloff(x,sr=sr)\nnp.mean(spec_rolloff)","c401eec0":"mfk=librosa.feature.mfcc(x,sr=sr)\nmfk.shape","a1435b12":"genel_yol=\"\/kaggle\/input\/train\/audio\/\"\nliste=[]\nturler=[]\nad\u0131m=0\nfor tur in os.listdir(genel_yol)[0:2]:#dog ve left\n    for ses in os.listdir(genel_yol+tur):\n        x,sr=librosa.load(genel_yol+tur+\"\/\"+ses,duration=30)\n        liste.append([np.mean(i) for i in librosa.feature.mfcc(x,sr=sr)])\n        liste[ad\u0131m].append(np.mean(librosa.feature.zero_crossing_rate(x)))\n        liste[ad\u0131m].append(np.mean(librosa.feature.spectral_centroid(x,sr=sr)))\n        liste[ad\u0131m].append(np.mean(librosa.feature.spectral_rolloff(x,sr=sr)))                \n        ad\u0131m+=1\n        turler.append(tur) #Ozelliklerini \u00e7\u0131kard\u0131\u011f\u0131m\u0131z sesin etiketini ayr\u0131 bir listeye ayn\u0131 s\u0131rada ekliyoruz.","6394c33c":"ozellikler=pd.DataFrame(np.array(liste),index=None)\nprint(ozellikler.shape)\na=[\"mfcc\"+str(i) for i in range(20)]\na.append(\"zero_crossing\")\na.append(\"spec_centroid\")\na.append(\"spec_rolloff\")\nozellikler.columns=a\nozellikler.head()","e3f51e82":"turler=pd.DataFrame(turler,columns={\"turler\"},index=None)\nturler.turler.unique()","cfd07e50":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder().fit(turler)\nturler_le=le.transform(turler)\nturler_le","bb064328":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test=train_test_split(ozellikler,turler_le, test_size=0.25,random_state=31)","c0b2ad57":"from sklearn.ensemble import RandomForestClassifier\nrandom=RandomForestClassifier().fit(X_train,y_train)\nrandom\n","2fce9638":"from sklearn.metrics import accuracy_score\ny_pred=random.predict(X_test)\naccuracy_score(y_test,y_pred)","02d27ddf":"**Spectral Centroid**","bc20ef58":"**Mel Frekans**","c9d5de82":"**Bir sesi oynatma**","9a35adb1":"**Zero Crossing Rate**","c73792b3":"**Spectral RollOff**"}}