{"cell_type":{"9d845e9e":"code","e69b0efd":"code","00bf5ab6":"code","89d9c745":"code","6f3a268d":"code","4a920643":"code","545e278a":"code","698724c1":"code","78c4c992":"code","c5b42abf":"code","6e8830ea":"code","c8b4b039":"code","8a181342":"code","fd85296e":"code","6a75ba9d":"code","99b2194f":"code","82303056":"code","32d58f9c":"code","6c23837c":"code","6fd5e831":"code","a507d9b8":"code","12792292":"code","3394c7ac":"code","cc30ba6a":"code","683f0399":"code","7c1fcd58":"code","631b79e1":"code","ea8fb127":"code","605fc419":"code","52be6cee":"code","543381f5":"code","b182d868":"code","3893eec6":"code","e06f5232":"code","29082e71":"code","71a0b266":"code","3015dc68":"code","7cb832a0":"code","d97ddba3":"code","79919648":"code","ae2091a5":"code","7e4ce2c0":"code","210b695d":"code","d3b9be99":"code","d1d809d6":"code","b9c2ce6e":"code","9d5af88b":"code","0502fa43":"code","c77c6d64":"code","e54d7f2c":"code","ca8ab251":"code","d3f2f909":"code","90f66693":"code","4368d2ce":"code","569a109f":"code","672e40f0":"code","d66bacd0":"code","7e8557a7":"code","8c59251d":"code","78c19cd3":"code","171b67f8":"code","2b30f144":"code","739381ce":"markdown","dd4d46d9":"markdown","3322dc05":"markdown","79720cf2":"markdown","21c4c53e":"markdown"},"source":{"9d845e9e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e69b0efd":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom datetime import date\n\nimport warnings\nwarnings.filterwarnings('ignore')","00bf5ab6":"path ='..\/input\/customer-personality-analysis\/marketing_campaign.csv'\ndataLoad = pd.read_csv(path, sep='\\t', index_col='ID')\ndataLoad.head()","89d9c745":"dataLoad.info()","6f3a268d":"dataLoad.isnull().sum()","4a920643":"data = dataLoad.copy()\ndataCust = data.dropna()\ndataCust.isnull().sum()","545e278a":"def get_age(birthyear):\n    return date.today().year-birthyear\n\ndataCust['Age'] = dataCust.Year_Birth.map(get_age)\ndataCust['Age'].describe()  ","698724c1":"dataCust.sort_values(by='Age', ascending=False).head()","78c4c992":"dataCust.drop([11004, 1150, 7829], inplace=True)\ndataCust['Age'].describe()","c5b42abf":"dataCust['Spending'] =dataCust.MntWines+dataCust.MntFruits+dataCust.MntMeatProducts+dataCust.MntFishProducts+dataCust.MntSweetProducts+dataCust.MntGoldProds\ndataCust.head()","6e8830ea":"dataCust['Time_with_company'] = pd.to_datetime(dataCust.Dt_Customer, dayfirst=True, format='%d-%m-%Y')\ndataCust.head()","c8b4b039":"dataCust['Time_with_company'] = pd.to_numeric(dataCust.Time_with_company.dt.date.apply(lambda z : (date.today()-z)).dt.days, \ndowncast= 'integer')\/30\ndataCust.head()","8a181342":"dataCust.Education.unique()","fd85296e":"dataCust.Marital_Status.unique()","6a75ba9d":"dataCust.Marital_Status = dataCust.Marital_Status.replace({'Together':'Partner', 'Married':'Partner', 'Divorced':'Single', 'Widow':'Single', 'Alone':'Single', 'Absurd':'Single', 'YOLO':'Single'})\ndataCust.head()","99b2194f":"dataCust['Children']=dataCust.Kidhome + dataCust.Teenhome\ndataCust['Has_Children'] = np.where(dataCust.Children > 0, 'Has Child', 'No child') \ndataCust.head()","82303056":"dataCust = dataCust.rename(columns={'MntWines':'Wines', 'MntFruits':'Fruits', 'MntMeatProducts':'Meat','MntFishProducts':'Fish', 'MntSweetProducts':'Sweets', 'MntGoldProds':'Gold'})\ndataCust.head()","32d58f9c":"dataCust = dataCust.rename(columns={'NumWebPurchases':'Web', \n                                   'NumCatalogPurchases': 'Catalogue',\n                                   'NumStorePurchases': 'Store', \n                                   'NumWebVisitsMonth' : 'WebVisit'})\ndataCust.head()","6c23837c":"dataCust.Web.value_counts()","6fd5e831":"outlierID = dataCust.loc[dataCust.Web > 20].index\ndataCust.drop(outlierID, inplace=True)\ndataCust.Web.value_counts()","a507d9b8":"dataCust.Catalogue.describe()","12792292":"dataCust.Catalogue.value_counts()","3394c7ac":"outlierId = dataCust.loc[dataCust.Catalogue > 20].index\ndataCust.drop(outlierId, inplace=True)\n","cc30ba6a":"dataCust.Catalogue.describe()","683f0399":"dataCust.Store.describe()","7c1fcd58":"dataCust.Store.value_counts()","631b79e1":"demographic_data = dataCust[['Education', 'Marital_Status', \n                             'Has_Children', 'Children', \n                             'Age', 'Income', 'Spending',\n                            'Time_with_company', 'Wines', 'Fruits', 'Sweets', 'Meat',\n                            'Web', 'Catalogue', 'Store', 'WebVisit']]\ndemographic_data.head()","ea8fb127":"ax = sns.countplot(data=demographic_data, x='Education', palette=('Set2'))\nax.set(xlabel=None, title='Education Level of Customer')","605fc419":"ax = sns.countplot(data= demographic_data, x='Marital_Status', palette='husl')\nax.set(xlabel=None, title='Marital Status of Customer')","52be6cee":"ax = sns.countplot(data=demographic_data, x='Has_Children', palette='flare')\nax.set(xlabel=None, title='Child Status of Customer')","543381f5":"ax = sns.histplot(data=demographic_data.Age)\nax.set(xlabel='Age', ylabel=None, title = 'Age of Customer')\nax.grid(axis='x')","b182d868":"demographic_data.Age.describe()","3893eec6":"fig, ax = plt.subplots(1, 2, figsize=(25, 8))\nsns.histplot(ax=ax[0], data=demographic_data.Income, color='midnightblue')\nsns.histplot(ax=ax[1], data=demographic_data.Spending, color='midnightblue')\n\nax[0].set_title('Income of Customer')\nax[0].set_xlabel('Income  (USD)')\n\nax[1].set_title('Spending of Customer')\nax[1].set_xlabel('Spending (USD)')","e06f5232":"demographic_data.Income.describe()","29082e71":"demographic_data.Spending.describe()","71a0b266":"ax = sns.histplot(data=demographic_data.Time_with_company, color='darkslateblue')\nax.set(title='Time with company',\n      xlabel = 'Months',\n      ylabel = None)","3015dc68":"fig, ax = plt.subplots(2, 2, figsize=(25, 15))\n\nsns.histplot(ax=ax[0, 0], data=demographic_data.Wines, color='darkorange')\nsns.histplot(ax=ax[0, 1], data=demographic_data.Meat, color='seagreen')\nsns.histplot(ax=ax[1, 0], data=demographic_data.Fruits, color='lightcoral')\nsns.histplot(ax=ax[1, 1], data=demographic_data.Sweets, color='mediumturquoise')\n\nfig.suptitle('Items Bought by Customer')","7cb832a0":"demographic_data.Wines.describe()","d97ddba3":"demographic_data.Meat.describe()","79919648":"demographic_data.Fruits.describe()","ae2091a5":"demographic_data.Sweets.describe()","7e4ce2c0":"from sklearn.preprocessing import StandardScaler, normalize\nfrom sklearn import metrics\nfrom sklearn.mixture import GaussianMixture","210b695d":"scaler = StandardScaler()\ntemp = demographic_data[['Income', 'Spending', 'Time_with_company']]\n\nX_std = scaler.fit_transform(temp)\nX = normalize(X_std, norm='l2')","d3b9be99":"gmm = GaussianMixture(n_components=4, covariance_type='spherical', random_state=0, max_iter=1000).fit(X)\nlabels = gmm.predict(X)\ntemp['Cluster'] = labels\ntemp.head()","d1d809d6":"temp = temp.replace({0: 'Leaky Buckets',\n                     1:'High Potential',\n                     2:'Need Attention',\n                     3:'Stars'})\ntemp.head()","b9c2ce6e":"demographic_data = demographic_data.merge(temp.Cluster, left_index=True, right_index=True)","9d5af88b":"pd.options.display.float_format='{:.0f}'.format\nsummary = demographic_data[['Income', 'Time_with_company', 'Spending', 'Cluster']]\n\nsummary.set_index('Cluster', inplace=True)\nsummary = summary.groupby('Cluster').describe().transpose()\nsummary","0502fa43":"ax = sns.countplot(data=demographic_data, y='Cluster', palette='muted')\nax.bar_label(container=ax.containers[0], padding=-35)\nax.set_title('Cluster Distribution')","c77c6d64":"ax = sns.scatterplot(x=demographic_data.Income, y=demographic_data.Spending, hue= demographic_data.Cluster, palette='muted')","e54d7f2c":"ax = sns.scatterplot(x=demographic_data.Time_with_company,\n                y=demographic_data.Spending, hue=demographic_data.Cluster,\n                palette='muted')","ca8ab251":"ax = sns.scatterplot(x=demographic_data.Time_with_company,\n                y=demographic_data.Income, hue=demographic_data.Cluster,\n                palette='muted')","d3f2f909":"fig, ax = plt.subplots(2, 2, figsize=(20, 10))\n\nsns.countplot(ax=ax[0, 0], data=demographic_data.loc[demographic_data.Cluster == 'Stars'], y='Education',\n             order=['PhD', \"Master\", \"Graduation\", \"2n Cycle\"], palette='Set2')\n\nsns.countplot(ax=ax[0, 1], data=demographic_data.loc[demographic_data.Cluster == 'High Potential'],\n             y='Education', order=['PhD', \"Master\", \"Graduation\", \"2n Cycle\"], palette='Set2')\n\nsns.countplot(ax=ax[1, 0], data=demographic_data.loc[demographic_data.Cluster == 'Need Attention'],\n             y='Education', order=['PhD', \"Master\", \"Graduation\", \"2n Cycle\"], palette='Set2')\n\nsns.countplot(ax=ax[1, 1], data=demographic_data.loc[demographic_data.Cluster == 'Leaky Buckets'],\n             y='Education', order=['PhD', \"Master\", \"Graduation\", \"2n Cycle\"], palette='Set2')\n\nax[0, 0].set_title('Stars')\nax[0, 1].set_title('High Potential')\nax[1, 0].set_title('Need Attention')\nax[1, 1].set_title('Leaky Buckets')","90f66693":"fig, ax = plt.subplots(2, 2, figsize=(25, 20))\n\nstars = demographic_data.loc[demographic_data.Cluster == 'Stars']\nhighPoten = demographic_data.loc[demographic_data.Cluster == 'High Potential']\nneedAtten = demographic_data.loc[demographic_data.Cluster == 'Need Attention']\nleakBuck = demographic_data.loc[demographic_data.Cluster == 'Leaky Buckets']\n\nsns.histplot(ax=ax[0, 0], data=stars.Web, label='Web purchase', color='skyblue')\nsns.histplot(ax=ax[0, 0], data=stars.Catalogue, label='Catalogue purchase', color='red')\nsns.histplot(ax=ax[0, 0], data=stars.Store, label='Store purchase', color='gold')\n\nsns.histplot(ax=ax[0, 1], data=highPoten.Web, label='Web purchase', color='skyblue')\nsns.histplot(ax=ax[0, 1], data=highPoten.Catalogue, label='Catalogue purchase', color='red')\nsns.histplot(ax=ax[0, 1], data=highPoten.Store, label='Store purchase', color='gold')\n\nsns.histplot(ax=ax[1, 0], data=needAtten.Web, label='Web purchase', color='skyblue')\nsns.histplot(ax=ax[1, 0], data=needAtten.Catalogue, label='Catalogue purchase', color='red')\nsns.histplot(ax=ax[1, 0], data=needAtten.Store, label='Store purchase', color='gold')\n\nsns.histplot(ax=ax[1, 1], data=leakBuck.Web, label='Web purchase', color='skyblue')\nsns.histplot(ax=ax[1, 1], data=leakBuck.Catalogue, label='Catalogue purchase', color='red')\nsns.histplot(ax=ax[1, 1], data=leakBuck.Store, label='Store purchase', color='gold')\n\n\nfig.suptitle('Customer Habit by Its Cluster')\n\nax[0, 0].set_title('Stars')\nax[0, 1].set_title('High Potential')\nax[1, 0].set_title('Need Attention')\nax[1, 1].set_title('Leaky Bucket')\n\nax[0, 0].legend()\nax[0, 1].legend()\nax[1, 0].legend()\nax[1, 1].legend()","4368d2ce":"ax = sns.barplot(x=demographic_data.Cluster, y = demographic_data.WebVisit)\n","569a109f":"fig, ax = plt.subplots(1, 2, figsize=(18, 9))\n\nsns.swarmplot(ax=ax[0], y=demographic_data.Spending, x=demographic_data.Has_Children)\nsns.swarmplot(ax=ax[1], y=demographic_data.Spending, x=demographic_data.Marital_Status)","672e40f0":"temp = demographic_data.loc[:, ['Wines', 'Meat', 'Fruits', 'Sweets', 'Cluster']]\ntemp = temp.groupby(by='Cluster').sum()\ntemp","d66bacd0":"ax=temp.transpose().plot(kind='barh', stacked=True, colormap='Set2')\n","7e8557a7":"ax = sns.scatterplot(y=demographic_data.Wines, x=demographic_data.Income, hue=demographic_data.Has_Children)","8c59251d":"demographic_data.loc[demographic_data.Has_Children == 'No child'].Wines.describe()","78c19cd3":"demographic_data.loc[demographic_data.Has_Children == 'Has Child'].Wines.describe()","171b67f8":"demographic_data.loc[demographic_data.Has_Children == 'No child'].Wines.sum()","2b30f144":"demographic_data.loc[demographic_data.Has_Children == 'Has Child'].Wines.sum()","739381ce":"## Analysis","dd4d46d9":"## Library Import","3322dc05":"## Creating Cluster\n\nIn this section I will cluster customer based of their:\n1. Income\n2. Time with company\n3. Spending\n    \nThe four cluster itself will consist of:\n\n1. **Star** --> Customer that have High Income, High Spending, and long time with company.\n2. **High Potential** --> Customer that have High Income, High Spending, and short time with company.\n3. **Needs Attention** --> Customer that have Low Income, Low Spending, and short time with company\n4. **Leaky Bucket** --> Customer that have Low Income, Low Spending and long time with company.","79720cf2":"## Business Question\n\n1. Who is our customer?\n2. How is their spending Habit?","21c4c53e":"# Personality and Habits of The Customer Analysis\n\nThis is my learning notebook about personality and habit of the customer. The main goal of this project is to know personality of the customer and their spending habit. Also, it is help me to gain more understanding about exploratory data analysis and clustering. All code in this project was inspired by kylethomson2, shout out to him and you can check his work on the link below.\n\nThe project itself start from generate business question to guide us. Then data preparation, we did some feature engineering and data cleaning. After that we start make cluster from our data to know our customer personality. After we know about our customer personality we can analyze their habits.\n\nsource : https:\/\/www.kaggle.com\/kylethomson2\/customer-personality-eda"}}