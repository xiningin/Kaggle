{"cell_type":{"322dcb15":"code","c77b0096":"code","57dfeba1":"code","07539b9b":"code","548f044e":"code","b9bd72c5":"code","ed2778a5":"code","c23956f9":"code","0104c75a":"code","f816299d":"code","a3930954":"code","7a92ede3":"code","c33d7a8b":"code","14573df4":"code","842348c5":"code","d5eaaf4f":"code","f8853d32":"code","074d5429":"code","b5224293":"code","6636297e":"code","50e20cf8":"code","a33123f0":"markdown"},"source":{"322dcb15":"# Importing Neccesary Libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics import confusion_matrix,plot_confusion_matrix","c77b0096":"#Importing dataset\ndata = pd.read_csv(\"..\/input\/gender\/gender_classification_v7.csv\")","57dfeba1":"data.head()","07539b9b":"data['gender'].value_counts()","548f044e":"data.info()","b9bd72c5":"# Co-relation matrix and the heatmap\nplt.subplots(figsize=(12,5))\ngender_correlation=data.corr()\nsns.heatmap(gender_correlation,annot=True,cmap='RdPu')\nplt.title('Correlation between the variables')\nplt.xticks(rotation=45)","ed2778a5":"sns.lineplot(data = data, x=\"distance_nose_to_lip_long\", y=\"lips_thin\")","c23956f9":"sns.lineplot(data = data, x = \"forehead_width_cm\", y = \"forehead_height_cm\")","0104c75a":"sns.lineplot(data = data, x = \"long_hair\", y = \"forehead_width_cm\")","f816299d":"males = data.query(\" gender == 'Male' \")\nmales.groupby('nose_wide')['nose_wide'].describe()","a3930954":"sns.histplot(data = males , x = 'nose_wide')","7a92ede3":"females = data.query(\" gender == 'Female' \")\nfemales.groupby('nose_wide')['nose_wide'].describe()","c33d7a8b":"sns.histplot(data = females , x = 'nose_wide')","14573df4":"x = data.drop('gender', axis=1)\ny = data['gender']","842348c5":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.3,random_state = 100)","d5eaaf4f":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score, plot_confusion_matrix","f8853d32":"knn = KNeighborsClassifier()\nfrom sklearn.model_selection import GridSearchCV\nk_range = list(range(1, 31))\nparam_grid = dict(n_neighbors=k_range)\n\n# defining parameter range\ngrid = GridSearchCV(knn, param_grid, cv=10, scoring='accuracy', return_train_score=False,verbose=1)\n\n# fitting the model for grid search\ngrid_search=grid.fit(x_train, y_train)","074d5429":"print(grid_search.best_params_)","b5224293":"accuracy = grid_search.best_score_ *100\nprint(\"Accuracy for our training dataset with tuning is : {:.2f}%\".format(accuracy))","6636297e":"knn = KNeighborsClassifier(n_neighbors=15)\nknn.fit(x, y)\n\ny_test_hat=knn.predict(x_test) \n\ntest_accuracy=accuracy_score(y_test,y_test_hat)*100\n\nprint(\"Accuracy for our testing dataset with tuning is : {:.2f}%\".format(test_accuracy) )","50e20cf8":"plot_confusion_matrix(grid,x_test, y_test,values_format='d' )","a33123f0":"***Exploratory Data Analysis***"}}