{"cell_type":{"b2738fac":"code","e14ef064":"code","9f40a57a":"code","683e19a4":"code","c57b1029":"code","d17b50a9":"code","8999e83c":"code","f6ead6cd":"code","0edcb29f":"markdown","7d8c49a4":"markdown","f68e5b49":"markdown","85380488":"markdown"},"source":{"b2738fac":"import pandas as pd\nimport warnings \nwarnings.filterwarnings('ignore')\n\ntrain = pd.read_csv('..\/input\/twitter-hate-speech\/train_E6oV3lV.csv')\nprint(\"Training Set:\"% train.columns, train.shape)\ntest = pd.read_csv('..\/input\/twitter-hate-speech\/test_tweets_anuFYb8.csv')\nprint(\"Test Set:\"% test.columns, test.shape)\n\nprint('Train_Set -----')\nprint(train.isnull().sum())\nprint('Test_set -----')\nprint(test.isnull().sum())\ntrain.head()","e14ef064":"import re\nfrom sklearn.utils import resample\n\ndef  clean_text(df, text_field):\n    df[text_field] = df[text_field].str.lower()\n    df[text_field] = df[text_field].apply(lambda elem: re.sub(r\"(@[A-Za-z0-9]+)|([^0-9A-Za-z \\t])|(\\w+:\\\/\\\/\\S+)|^rt|http.+?\", \"\", elem))  \n    return df\ntest_clean = clean_text(test, \"tweet\")\ntrain_clean = clean_text(train, \"tweet\")\n\ntrain_majority = train_clean[train_clean.label==0]\ntrain_minority = train_clean[train_clean.label==1]\ntrain_minority_upsampled = resample(train_minority, \n                                 replace=True,    \n                                 n_samples=len(train_majority),   \n                                 random_state=123)\ntrain_upsampled = pd.concat([train_minority_upsampled, train_majority])\ntrain_upsampled['label'].value_counts()","9f40a57a":"from wordcloud import WordCloud\nimport matplotlib.pyplot as plt\n\nfig, axs = plt.subplots(1,2 , figsize=(16,8))\ntext_pos = \" \".join(train_clean['tweet'][train.label == 0])\ntext_neg = \" \".join(train_clean['tweet'][train.label == 1])\ntrain_cloud_pos = WordCloud(collocations = False, background_color = 'white').generate(text_pos)\ntrain_cloud_neg = WordCloud(collocations = False, background_color = 'black').generate(text_neg)\naxs[0].imshow(train_cloud_pos, interpolation='bilinear')\naxs[0].axis('off')\naxs[0].set_title('Non-Hate Comments')\naxs[1].imshow(train_cloud_neg, interpolation='bilinear')\naxs[1].axis('off')\naxs[1].set_title('Hate Comments')\n\nplt.show()","683e19a4":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(16,8))\nsns.set_style('darkgrid')\nsns.histplot(data = train['label'], color='black', legend=True)\nsns.histplot(data = train_upsampled['label'], color = 'orange', legend=True)\nplt.legend(['Initial_Data', 'Resampled_Data'])\nplt.show()","c57b1029":"from wordcloud import WordCloud\n\nprint('--------------After Upsampling the Minority Class---------------')\n\nfig, axs = plt.subplots(1,2 , figsize=(16,8))\ntext_pos = \" \".join(train_upsampled['tweet'][train.label == 0])\ntext_neg = \" \".join(train_upsampled['tweet'][train.label == 1])\ntrain_cloud_pos = WordCloud(collocations = False, background_color = 'white').generate(text_pos)\ntrain_cloud_neg = WordCloud(collocations = False, background_color = 'black').generate(text_neg)\naxs[0].imshow(train_cloud_pos, interpolation='bilinear')\naxs[0].axis('off')\naxs[0].set_title('Non-Hate Comments')\naxs[1].imshow(train_cloud_neg, interpolation='bilinear')\naxs[1].axis('off')\naxs[1].set_title('Hate Comments')\n\nplt.show()","d17b50a9":"import xgboost as xgb\nimport numpy as np\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.feature_extraction.text import TfidfTransformer\nfrom sklearn.metrics import f1_score, accuracy_score\nfrom sklearn.model_selection import train_test_split, RepeatedStratifiedKFold, cross_val_score\n\n\npipeline_xgb = Pipeline([\n    ('vect', CountVectorizer()),\n    ('tfidf',  TfidfTransformer()),\n    ('nb', xgb.XGBClassifier(use_label =False)),])\n\nx_train, x_test, y_train, y_test = train_test_split(train_upsampled['tweet'],\n                                                    train_upsampled['label'],random_state = 0)\n\nmodel = pipeline_xgb.fit(x_train, y_train)\ny_predict = model.predict(x_test)\nprint('--'* 20)\nprint('F1_Score: ',f1_score(y_test, y_predict))\nprint('Accuracy_Score: ', accuracy_score(y_test, y_predict))\nprint('--'*20)\nprint('---RepeatedKFOLD---')\ncv = RepeatedStratifiedKFold(n_splits = 5, n_repeats = 2, random_state =1)\nscore2 = cross_val_score(pipeline_xgb, x_train, y_train, cv=cv, scoring='f1_micro', n_jobs=1)\nscore2 = np.mean(score2)\nprint('--'* 20)\nprint('RKFold_Score: ', score2)\nprint('--'* 20)","8999e83c":"from sklearn.metrics import confusion_matrix, precision_score, recall_score, f1_score, roc_auc_score, roc_curve, auc, precision_recall_curve\nprint('--- Axis1 = ref_val, Axis0 = pred_val ---')\n\nx_val, y_val = x_test, y_test\n\nyhat = model.predict_proba(x_val)\nypred = model.predict(x_val)\nprint('Confusion_Matrix: ')\nprint(confusion_matrix(y_val, ypred, labels = [1,0]).T)\nprint('Precsion_Score: ', precision_score(y_val, ypred, labels = [1,0]))\nprint('Recall_Score: ', recall_score(y_val, ypred, labels = [1,0]))\n\nprint('y_hat_shape: ',yhat.shape)\nyhat = yhat[:,1]\n\nns_probs = [0 for _ in range(len(y_val))]\nns_auc = roc_auc_score(y_val, ns_probs, labels = [1,0])\nlr_auc = roc_auc_score(y_val, yhat, labels = [1,0])\nprint()\nprint('random_classifier: ROC AUC=%.3f' % (ns_auc))\nprint('XGBclassifier: ROC AUC=%.3f' % (lr_auc))\n\nns_fpr, ns_tpr, _ = roc_curve(y_val, ns_probs)\nlr_fpr, lr_tpr, _ = roc_curve(y_val, yhat)\n\nplt.plot(ns_fpr, ns_tpr, linestyle='--', label='random_classifier')\nplt.plot(lr_fpr, lr_tpr, marker='.', label='XGBclassifier')\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.legend()\nplt.title('ROC_CURVE')\nplt.show()\n\nlr_precision, lr_recall, _ = precision_recall_curve(y_val, yhat)\nprint('auc-score: ',auc(lr_recall, lr_precision))\nprint('f1-score: ', f1_score(y_val, ypred, labels = [1,0]))\nno_skill = len(y_val[y_val==1]) \/ len(y_val)\nplt.plot([0, 1], [no_skill, no_skill], linestyle='--', label='random_classifier')\nplt.plot(lr_recall, lr_precision, marker='.', label='XGBclassifier')\nplt.xlabel('Recall')\nplt.ylabel('Precision')\nplt.legend()\nplt.title('Precision_Recall_Curve')\nplt.show()\n","f6ead6cd":"def predict(inp):\n    inp = pd.Series(inp)\n    yhat = ((np.ravel(model.predict(inp)).tolist()))\n    if yhat[-1] == 1:\n        print('Conc : Hate_Comment_Detected_\ud83d\ude14')\n    if yhat[-1] == 0:\n        print('Conc: Not_a_hate_comment_\ud83d\ude04')\n    \n\ninp = [' I hate humans and dogs !! they suck ', 'I love playing soccer ']\nfor i in inp:\n    print('Entered_Comment: ', i)\n    predict(i)\n    print('--'*30)\n","0edcb29f":"<img style=\"width:70px; height:70px; float:left;\" src=\"https:\/\/thumbs.gfycat.com\/ResponsibleUnfinishedAlpinegoat-size_restricted.gif\"><img style=\"width:70px; height:70px; float:right;\" src=\"https:\/\/thumbs.gfycat.com\/ResponsibleUnfinishedAlpinegoat-size_restricted.gif\"><h2 style=\"background-color:black; color:white; text-align:center;\"><b><i> Inference <\/i><\/b><h2>","7d8c49a4":"<img style=\"width:100%; height:auto;\" src=\"https:\/\/commun.it\/blog\/wp-content\/uploads\/2019\/06\/twitter-channels-1200x500.jpg\">\n<img style=\"width:70px; height:70px; float:left;\" src=\"https:\/\/cliply.co\/wp-content\/uploads\/2021\/09\/CLIPLY_372109260_TWITTER_LOGO_400.gif\"><img style=\"width:70px; height:70px; float:right;\" src=\"https:\/\/cliply.co\/wp-content\/uploads\/2021\/09\/CLIPLY_372109260_TWITTER_LOGO_400.gif\"><h1 style=\"background-color:black; color:white; text-align:center;\"><b>Twitter<\/b><i> Hate - Speech <\/i> <b>Detection<\/b>","f68e5b49":"<img style=\"width:70px; height:70px; float:left;\" src=\"https:\/\/thumbs.gfycat.com\/DisgustingSpiffyIguana-size_restricted.gif\"><img style=\"width:70px; height:70px; float:right;\" src=\"https:\/\/thumbs.gfycat.com\/DisgustingSpiffyIguana-size_restricted.gif\"><h2 style=\"background-color:black; color:white; text-align:center;\"><b><i>Data-Analysis & Cleaning<\/i><\/b><h2>","85380488":"<img style=\"width:70px; height:70px; float:left;\" src=\"https:\/\/www.pinclipart.com\/picdir\/big\/163-1639462_work-pc-sticker-pc-gif-transparent-clipart.png\"><img style=\"width:70px; height:70px; float:right;\" src=\"https:\/\/www.pinclipart.com\/picdir\/big\/163-1639462_work-pc-sticker-pc-gif-transparent-clipart.png\"><h2 style=\"background-color:black; color:white; text-align:center;\"><b><i>Model-Creation & Training<\/i><\/b><h2>"}}