{"cell_type":{"d4e801eb":"code","c8862294":"code","a8c64bba":"code","4cf48c68":"code","01dd10fb":"code","3200126c":"code","db2a62b2":"code","e675c4ad":"code","2c9897f2":"code","75eb7ee2":"code","2fb89900":"code","5fe622f4":"code","0c43f1eb":"markdown","41058c6a":"markdown","7273e9d3":"markdown","c8a64714":"markdown","eb24ccd4":"markdown","5c8246f8":"markdown","839c0497":"markdown","395bf8a7":"markdown","960699f9":"markdown","9858baf6":"markdown","8e36df33":"markdown","5cf59375":"markdown"},"source":{"d4e801eb":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nplt.style.use('fivethirtyeight')\n# Any results you write to the current directory are saved as output.\ntrain = pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-3\/train.csv')","c8862294":"train.head(5)\n#test = pd.read_csv(\"..\/input\/covid19-global-forecasting-week-3\/test.csv\")\ntrain = pd.read_csv(\"..\/input\/covid19-global-forecasting-week-3\/train.csv\")\n\nprint(\"Number of Country_Region -\", train['Country_Region'].nunique())\nprint(\"Dates from\", min(train['Date']), \"to day\", max(train['Date']), \"- total of\", train['Date'].nunique(), \"days\")\nprint(\"Countries with Province: \", train[train['Province_State'].isna()==False]['Country_Region'].unique())\n\ndisplay(train.head(5))","a8c64bba":"country_df = train[train.Country_Region=='China'].groupby('Date')['ConfirmedCases','Fatalities'].sum()\ncountry_df['day_count'] = list(range(1,len(country_df)+1))\nydata = country_df.ConfirmedCases\nxdata = country_df.day_count\ncountry_df['rate'] = (country_df.ConfirmedCases-country_df.ConfirmedCases.shift(1))\/country_df.ConfirmedCases\ncountry_df['increase'] = (country_df.ConfirmedCases-country_df.ConfirmedCases.shift(1))\n\nplt.plot(xdata, ydata, 'o')\nplt.title(\"China\")\nplt.ylabel(\"Population infected\")\nplt.xlabel(\"Days\")\nplt.show()","4cf48c68":"from scipy.optimize import curve_fit\nimport pylab\n\n\ndef sigmoid(x,c,a,b):\n     y = c*1 \/ (1 + np.exp(-a*(x-b)))\n     return y\n#country_df.ConfirmedCases\n#country_df.day_count\nxdata = np.array([1, 2, 3,4, 5, 6, 7])\nydata = np.array([0, 0, 13, 35, 75, 89, 91])\n\n#([low_a,low_b],[high_a,high_b])\n#low x --> low b\n#high y --> high c\n#a is the sigmoidal shape.\npopt, pcov = curve_fit(sigmoid, xdata, ydata, method='dogbox',bounds=([0.,0., 0.],[100,2, 10.]))\nprint(popt)\n\nx = np.linspace(-1, 10, 50)\ny = sigmoid(x, *popt)\n\npylab.plot(xdata, ydata, 'o', label='data')\npylab.plot(x,y, label='fit')\npylab.ylim(-0.05, 105)\npylab.legend(loc='best')\npylab.show()","01dd10fb":"from scipy.optimize import curve_fit\nimport pylab\n\n\ndef sigmoid(x,c,a,b):\n     y = c*1 \/ (1 + np.exp(-a*(x-b)))\n     return y\n#country_df.ConfirmedCases\n#country_df.day_count\n#xdata = np.array([1, 4, 6,8, 10, 12, 14])\n#ydata = np.array([0, 0, 1300, 3500, 7500, 8900, 9100])\nxdata = np.array(list(country_df.day_count)[::2])\nydata = np.array(list(country_df.ConfirmedCases)[::2])\n#([low_a,low_b],[high_a,high_b])\n#high x --> high b\n#high y --> high c\n#a is the sigmoidal shape.\npopulation=1.2*10**9\npopt, pcov = curve_fit(sigmoid, xdata, ydata, method='dogbox',bounds=([0.,0., 0.],[population,6, 100.]))\n\nprint('model start date:',country_df[country_df.day_count==1].index[0])\nprint('model start infection:',int(country_df[country_df.day_count==1].ConfirmedCases[0]))\nprint('model fitted max infection at:',int(popt[0]))\nprint('model sigmoidal coefficient is:',round(popt[1],2))\nprint('model curve stop steepening, start flattening by day:',int(popt[2]))\nprint('model curve flattens by day:',int(popt[2])*2)\nprint('which is date:',country_df[country_df.day_count==int(popt[2])*2].index[0])\ndisplay(country_df.head(3))\ndisplay(country_df.tail(3))\n\nx = np.linspace(-1, country_df.day_count.max(), 50)\ny = sigmoid(x, *popt)\npylab.plot(xdata, ydata, 'o', label='data')\npylab.plot(x,y, label='fit',alpha = 0.6)\npylab.ylim(-0.05, 100005)\npylab.legend(loc='best')\nplt.title('china')\nplt.xlabel('days from day 1')\nplt.ylabel('confirmed cases')\npylab.show()\n\n","3200126c":"from scipy.optimize import curve_fit\nimport pylab\nfrom datetime import timedelta\n\nus_df = train[train.Country_Region=='US'].groupby('Date')['ConfirmedCases','Fatalities'].sum()\nus_df = us_df[us_df.ConfirmedCases>=100]\nus_df['day_count'] = list(range(1,len(us_df)+1))\nus_df['increase'] = (us_df.ConfirmedCases-us_df.ConfirmedCases.shift(1))\nus_df['rate'] = (us_df.ConfirmedCases-us_df.ConfirmedCases.shift(1))\/us_df.ConfirmedCases\n\n\ndef sigmoid(x,c,a,b):\n     y = c*1 \/ (1 + np.exp(-a*(x-b)))\n     return y\n#us_df.ConfirmedCases\n#us_df.day_count\n#xdata = np.array([1, 4, 6,8, 10, 12, 14])\n#ydata = np.array([0, 0, 1300, 3500, 7500, 8900, 9100])\nxdata = np.array(list(us_df.day_count)[::2])\nydata = np.array(list(us_df.ConfirmedCases)[::2])\n#([low_a,low_b],[high_a,high_b])\n#high x --> high b\n#high y --> high c\n#a is the sigmoidal shape.\npopulation=1.2*10**9\npopt, pcov = curve_fit(sigmoid, xdata, ydata, method='dogbox',bounds=([0.,0., 0.],[population,6, 100.]))\n\nest_a = 750000\nest_b = 0.18\nest_c = 28\nx = np.linspace(-1, us_df.day_count.max()+50, 50)\ny = sigmoid(x,est_a,est_b,est_c)\npylab.plot(xdata, ydata, 'o', label='data')\npylab.plot(x,y, label='fit',alpha = 0.6)\npylab.ylim(-0.05, est_a*1.05)\npylab.xlim(-0.05, est_c*2.05)\npylab.legend(loc='best')\nplt.xlabel('days from day 1')\nplt.ylabel('confirmed cases')\nplt.title('us')\npylab.show()\n\n\nprint('model start date:',us_df[us_df.day_count==1].index[0])\nprint('model start infection:',int(us_df[us_df.day_count==1].ConfirmedCases[0]))\nprint('model fitted max infection at:',int(est_a))\nprint('model sigmoidal coefficient is:',round(est_b,2))\nprint('model curve stop steepening, start flattening by day:',int(est_c))\nprint('model curve flattens by day:',int(est_c)*2)\ndisplay(us_df.head(3))\ndisplay(us_df.tail(3))\n    ","db2a62b2":"from scipy.optimize import curve_fit\nimport pylab\nfrom datetime import timedelta\n\nitaly_df = train[train.Country_Region=='Italy'].groupby('Date')['ConfirmedCases','Fatalities'].sum()\nitaly_df = italy_df[italy_df.ConfirmedCases>=100]\nitaly_df['increase'] = (italy_df.ConfirmedCases-italy_df.ConfirmedCases.shift(1))\nitaly_df['rate'] = (italy_df.ConfirmedCases-italy_df.ConfirmedCases.shift(1))\/italy_df.ConfirmedCases\nitaly_df = italy_df[italy_df.ConfirmedCases>1000]\nitaly_df['day_count'] = list(range(1,len(italy_df)+1))\n\ndef sigmoid(x,c,a,b):\n     y = c*1 \/ (1 + np.exp(-a*(x-b)))\n     return y\n#italy_df.ConfirmedCases\n#italy_df.day_count\n#xdata = np.array([1, 4, 6,8, 10, 12, 14])\n#ydata = np.array([0, 0, 1300, 3500, 7500, 8900, 9100])\nxdata = np.array(list(italy_df.day_count)[::2])\nydata = np.array(list(italy_df.ConfirmedCases)[::2])\n#([low_a,low_b],[high_a,high_b])\n#high x --> high b\n#high y --> high c\n#a is the sigmoidal shape.\npopulation=1.2*10**9\npopt, pcov = curve_fit(sigmoid, xdata, ydata, method='dogbox',bounds=([0.,0., 0.],[population,6, 100.]))\n\nest_a = 210000\nest_b = 0.12\nest_c = 32\nx = np.linspace(-1, italy_df.day_count.max()+50, 50)\ny = sigmoid(x,est_a,est_b,est_c)\npylab.plot(xdata, ydata, 'o', label='data')\npylab.plot(x,y, label='fit',alpha = 0.6)\npylab.ylim(-0.05, est_a*1.05)\npylab.xlim(-0.05, est_c*2.05)\npylab.legend(loc='best')\nplt.xlabel('days from day 1')\nplt.ylabel('confirmed cases')\nplt.title('italy')\npylab.show()\n\n\nprint('model start date:',italy_df[italy_df.day_count==1].index[0])\nprint('model start infection:',int(italy_df[italy_df.day_count==1].ConfirmedCases[0]))\nprint('model fitted max infection at:',int(est_a))\nprint('model sigmoidal coefficient is:',round(est_b,2))\nprint('model curve stop steepening, start flattening by day:',int(est_c))\nprint('model curve flattens by day:',int(est_c)*2)\ndisplay(italy_df.head(3))\ndisplay(italy_df.tail(3))","e675c4ad":"from scipy.optimize import curve_fit\nimport pylab\nfrom datetime import timedelta\n\nworld_df = train.groupby('Date')['ConfirmedCases','Fatalities'].sum()\nworld_df = world_df[world_df.ConfirmedCases>=100]\nworld_df['increase'] = (world_df.ConfirmedCases-world_df.ConfirmedCases.shift(1))\nworld_df['rate'] = (world_df.ConfirmedCases-world_df.ConfirmedCases.shift(1))\/world_df.ConfirmedCases\nworld_df = world_df[world_df.ConfirmedCases>1000]\nworld_df['day_count'] = list(range(1,len(world_df)+1))\n\ndef sigmoid(x,c,a,b):\n     y = c \/ (1 + np.exp(-a*(x-b)))\n     return y\n#world_df.ConfirmedCases\n#world_df.day_count\n#xdata = np.array([1, 4, 6,8, 10, 12, 14])\n#ydata = np.array([0, 0, 1300, 3500, 7500, 8900, 9100])\nxdata = np.array(list(world_df.day_count)[::2])\nydata = np.array(list(world_df.ConfirmedCases)[::2])\n#([low_a,low_b],[high_a,high_b])\n#high x --> high b\n#high y --> high c\n#a is the sigmoidal shape.\npopulation=1.2*10**9\npopt, pcov = curve_fit(sigmoid, xdata, ydata, method='dogbox',bounds=([0.,0., 0.],[population,6, 100.]))\n\nest_a = 3400000\nest_b = 0.12\nest_c = 75\nx = np.linspace(-1, world_df.day_count.max()+150, 50)\ny = sigmoid(x,est_a,est_b,est_c)\npylab.plot(xdata, ydata, 'o', label='data')\npylab.plot(x,y, label='fit',alpha = 0.6)\npylab.ylim(-0.05, est_a*1.05)\npylab.xlim(-0.05, world_df.day_count.max()+100)\npylab.legend(loc='best')\nplt.xlabel('days from day 1')\nplt.ylabel('confirmed cases')\nplt.title('world')\npylab.show()\n\n\nprint('model start date:',world_df[world_df.day_count==1].index[0])\nprint('model start infection:',int(world_df[world_df.day_count==1].ConfirmedCases[0]))\nprint('model fitted max infection at:',int(est_a))\nprint('model sigmoidal coefficient is:',round(est_b,2))\nprint('model curve stop steepening, start flattening by day:',int(est_c))\ndisplay(world_df.head(3))\ndisplay(world_df.tail(3))","2c9897f2":"us_df = train[train.Country_Region=='US'].groupby('Date')['ConfirmedCases','Fatalities'].sum()\nus_df = us_df[us_df.ConfirmedCases>=100]\nus_df['day_count'] = list(range(1,len(us_df)+1))\nus_df['increase'] = (us_df.ConfirmedCases-us_df.ConfirmedCases.shift(1))\nus_df['rate'] = (us_df.ConfirmedCases-us_df.ConfirmedCases.shift(1))\/us_df.ConfirmedCases\n\nitaly_df = train[train.Country_Region=='Italy'].groupby('Date')['ConfirmedCases','Fatalities'].sum()\nitaly_df = italy_df[italy_df.ConfirmedCases>=100]\nitaly_df['day_count'] = list(range(1,len(italy_df)+1))\nitaly_df['increase'] = (italy_df.ConfirmedCases-italy_df.ConfirmedCases.shift(1))\nitaly_df['rate'] = (italy_df.ConfirmedCases-italy_df.ConfirmedCases.shift(1))\/italy_df.ConfirmedCases\n","75eb7ee2":"\n#print(country_df.head(5))\n#print(us_df.head(5))\n\nplt.figure(figsize=(24,8))\nx = country_df.day_count\ny = country_df.increase\nx_2 = us_df.day_count\ny_2 = us_df.increase\nx_3 = italy_df.day_count\ny_3 = italy_df.increase\nplt.subplot(1,2,1)\nplt.plot(x,y,label = 'china')\nplt.plot(x_2,y_2,label ='us')\nplt.plot(x_3,y_3,label = 'italy')\nplt.title('Daily Increase Total')\nplt.legend()\n\n\nx = country_df.day_count\ny = country_df.rate\nx_2 = us_df.day_count\ny_2 = us_df.rate\nx_3 = italy_df.day_count\ny_3 = italy_df.rate\nplt.subplot(1,2,2)\nplt.plot(x,y,label = 'china')\nplt.plot(x_2,y_2,label ='us')\nplt.plot(x_3,y_3,label = 'italy')\nplt.title('Daily Increase %')\nplt.legend()","2fb89900":"#Run only once\nprint('before eliminating province:',train.shape)\nhave_state = train[train['Province_State'].isna()==False]['Country_Region'].unique()\ntemp = train.iloc[[],:]\n\nfor i in have_state:\n    temp = pd.concat([temp,train[train.Country_Region==i].groupby(['Date','Country_Region'])['ConfirmedCases','Fatalities'].sum().reset_index()],sort=True)\n\ntrain = train[train['Province_State'].isna()==True]\ntrain = pd.concat([train,temp],sort=True)\nprint('after eliminating province:',train.shape)","5fe622f4":"import numpy as np\nthreshold = 50000\n\nprint('Number ofCountries in dataset:',len(train['Country_Region'].unique()))\nprint('Number of Countries with >',threshold,'confirmed cases:',len(train[train.ConfirmedCases>threshold]['Country_Region'].unique()))\nplt.figure(figsize=(10,8))\nax1 = plt.subplot(1,1,1)\nfor i in train[train.ConfirmedCases>threshold]['Country_Region'].unique():\n    y = train[train.Country_Region == i ].groupby(['Date','Country_Region'])['ConfirmedCases','Fatalities'].sum().reset_index().ConfirmedCases\n    x = train[train.Country_Region == i ].groupby(['Date','Country_Region'])['ConfirmedCases','Fatalities'].sum().reset_index().Date\n    plt.plot(x,y,label=i)\nplt.legend(loc='upper left')\nstart = ax1.get_xlim()[0]\nstop = ax1.get_xlim()[1]\n\nax1.set_xticks(list(np.linspace(start, stop, 10)))\nplt.xticks(rotation=90)\n#plt.set_xticks(range())","0c43f1eb":"## Italy,\n* The b coefficient is 32, which means that the model starts to flatten 32 days after 10th of March, and really significantly 64 after 10th of March. \n* The c coefficient is 210000, which is the predicted amount of infected people. Its on a much smaller scale than US. It could be because Italy shutdown the country earlier than US, significantly limiting the scale of spread, or it could be due to other reasons.\n* The a coefficient is 0.12 is smaller than US's 0.18, which means the sigmoid is even softer in US. This means that Italy will take even longer than US to fight Covid-10","41058c6a":"## World\n\nHere I fitted the world's data. Feel free to play around with the numbers.","7273e9d3":"Here is the ConfirmedCases for China, looks like you can fit a sigmoidal function onto it","c8a64714":"## China,\n**Example of fitting a sigmoid function using china's data, and we use the coefficients to explain the data**\n\n* The b coefficient is 18, which means that the model starts to flatten 18 days after 22nd Jan and really flattens significantly 36 days after 22nd Jan. \n* The c coefficient is 81336, which is the predicted amount of eventual maximum infected people\n* The a coefficient is 0.22. We shall use this to compare other countries on how well they are tackling Covid-19\n","eb24ccd4":"Hi guys, I am a guy interested in predicting (more like taking a good guess) **how the Covid-19 pandemic will evolve in countries**. I used a sigmoidal function to fit the historical data that is constantly updated from my source.\n\nI thought of a sigmoidal function because China's data resembled a sigmoidal shape. Therefore, I try to fit sigmoid functions onto countries that are still developing and yet formed a sigmoidal shape, hopefully it gives us a good sense on how the pandemic will play out in those countries.\n\nSince China has already stabilized (or at least that's what we're told). I will use the currently (as of 7th April) 2 worst-hit countries - Italy and US and compare their sigmoid coefficients with China's.","5c8246f8":"1. Eliminated province, to only look at countries total","839c0497":"Just some exploration on italy and us data","395bf8a7":"1. Hopefully the Rate of Increase slows down as more people gets infected & government intervention takes place","960699f9":"## US\n\n* The b coefficient is 28, which means that the model will start to flatten 28 days after 10th of March, and really flattens significantly 56 days after 10th of March. \n* The c coefficient is 750000, which is the predicted amount of eventual infected people\n* The a coefficient is 0.18 is smaller than China's 0.22, which means the sigmoid is softer in US. This means that US will take longer than China to fight Covid-10\n\n*This model is fitted by manually adjusting coefficients (not sure how to do an automatic fit yet because i can't fit it automatically with Pylab, it could be because there isn't enough data. But I hope to have some advice on this). I also chose 10-03-2020 to be starting day as it is the last day with sub-1000 cases. *","9858baf6":"1. Taking a look at countries with > 50000 Confirmed Cases.\n2. Breakouts in most countries happened 1 months + after Chinese breakout.","8e36df33":"In conclusion, it seems that US will have a more prolonged fight than China, and Italy will be even longer. Hopefully this reflects somewhat how Covid-19 will playout in these countries. Numbers aside, stay safe everyone!\n\n**Anyways, this is not a prediction, it is just having fun by taking a stab at guessing the future pandemic numbers with a simple function! I am just a newbie in this, I would certainly appreciate any pointers\/advice on how I can improve my skill! Cheers :)**\n\nbelow are just somemore data exploration.","5cf59375":"## Sigmoid function,\n\nHere is a snap of how I learnt to fit Sigmoid Function - **y = c\/(1+np.exp(-a*(x-b)))** and 3 coefficients [c, a, b]:\n    * c - the maximum value (eventual maximum infected people, the sigmoid scales to this value eventually)\n    * a - the sigmoidal shape (how the infection progress. The smaller, the softer the sigmoidal shape is)\n    * b - the point where sigmoid start to flatten from steepening (the midpoint of sigmoid, when the rate of increase start to slow down)"}}