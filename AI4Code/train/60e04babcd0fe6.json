{"cell_type":{"1438422c":"code","497b1450":"code","69ef4bd6":"code","c649e2af":"code","d685ca80":"code","703c03d7":"code","cf48131a":"code","312c59b5":"code","14697c45":"code","130b2e7e":"code","55d1837d":"code","c8d3ba56":"code","c6a2b783":"code","58229ec8":"code","e3279cfd":"code","3cd9be72":"code","856649b9":"code","f6e2b6ee":"code","95eab042":"code","bcd895d1":"code","e89bf199":"code","0fc0a36a":"markdown"},"source":{"1438422c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","497b1450":"df=pd.read_csv('\/kaggle\/input\/breast-cancer-wisconsin-data\/data.csv')\nprint(df)","69ef4bd6":"df.columns","c649e2af":"df.isnull().sum()","d685ca80":"df=df.drop(['Unnamed: 32'],axis=1)","703c03d7":"df","cf48131a":"import seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split","312c59b5":"sns.heatmap(df.corr())\n","14697c45":"df.corr()","130b2e7e":"df","55d1837d":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\nfor i in list(df.columns):\n    if(df[i].dtype=='object'):\n        df[i]=le.fit_transform(df[i])","c8d3ba56":"df","c6a2b783":"y=df['diagnosis']\nx=df.drop('diagnosis',axis=1)","58229ec8":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,random_state=0,test_size=0.2)","e3279cfd":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score\nlist_1=[]\nfor i in range(1,21):\n    knn=KNeighborsClassifier(n_neighbors=i)\n    knn.fit(x_train,y_train)\n    pred_s=knn.predict(x_test)\n    scores=accuracy_score(y_test,pred_s)\n    list_1.append(scores)  ","3cd9be72":"plt.scatter(range(1,21),list_1)","856649b9":"from sklearn.linear_model import LogisticRegression\nlr=LogisticRegression(max_iter=100000)\nlr.fit(x_train,y_train)\npred_1=lr.predict(x_test)\nscore_1=accuracy_score(pred_1,y_test)\n","f6e2b6ee":"score_1","95eab042":"from sklearn.ensemble import RandomForestClassifier\nrfc=RandomForestClassifier()\nrfc.fit(x_train,y_train)\npred_2=rfc.predict(x_test)\nscore_2=accuracy_score(y_test,pred_2)\n","bcd895d1":"score_2","e89bf199":"from sklearn.ensemble import GradientBoostingClassifier\ngbc=GradientBoostingClassifier()\ngbc.fit(x_train,y_train)\npred_3=gbc.predict(x_test)\nscore_3=accuracy_score(y_test,pred_3)","0fc0a36a":"spliting to test and train test for x and y"}}