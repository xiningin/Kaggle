{"cell_type":{"215a6c63":"code","d4081883":"code","a1abf046":"code","f26b0702":"code","12ac714a":"code","04c81e7e":"code","363d4afc":"code","7d25f63f":"code","872a0a9d":"code","c2b40ff7":"code","0d17cbf1":"code","3e3d7d12":"code","8e1a82fc":"code","ffcd9342":"code","5c65767e":"code","db601c55":"code","65c0b11c":"code","56d0fd84":"code","9c5d7ab9":"code","ea9b48ef":"code","f5369290":"code","e1d56823":"code","a380e176":"code","4d03319b":"code","c1c031c2":"code","9bb5c5df":"code","3a5cd9f8":"code","56db6a09":"code","b928bbc0":"code","0b5275b9":"code","17771437":"code","cdddc79f":"code","9b983e64":"code","1fc2b8c1":"code","b5e8f7a4":"code","a94ffccc":"code","2e89b632":"code","efadf1a6":"code","b472f1a7":"code","a97e518b":"code","974fa9b5":"code","f82eb245":"code","fbb5a996":"markdown","a998a57e":"markdown","4b66250e":"markdown","9fecb32f":"markdown","f56e4139":"markdown","9c3923a3":"markdown","3cd82309":"markdown","edc977ea":"markdown","8bb2b696":"markdown","ab8df897":"markdown","aeddd581":"markdown","d6d37fdb":"markdown","8ad9b377":"markdown","6bfe4e91":"markdown","215eced7":"markdown","c219a1de":"markdown","feb21c40":"markdown","95b55c32":"markdown","4f0a2eba":"markdown","52e13503":"markdown","86728428":"markdown","47d7599f":"markdown","e3cad103":"markdown","4f8d6983":"markdown","0815082a":"markdown","65852868":"markdown","0f5c4e9d":"markdown","3e44d7dd":"markdown","03e3800c":"markdown","411f7dfb":"markdown","43c447be":"markdown","ad4c61e3":"markdown","1628ca45":"markdown","ec023958":"markdown","cd0a4cf6":"markdown","586cc614":"markdown","6a3b1ad3":"markdown","6355ebf9":"markdown","3e6f1935":"markdown","04d3dccd":"markdown","bac8c635":"markdown","ef26b663":"markdown","3d4f5d45":"markdown","72a6a531":"markdown","0acafd2c":"markdown","b75702a8":"markdown","3b3f4855":"markdown","5e4258b7":"markdown","189db468":"markdown","58235a32":"markdown","053ce71e":"markdown","381b70bc":"markdown","0c9a12c2":"markdown","6455b9c7":"markdown","389668ff":"markdown","b7c938ed":"markdown","03a0d391":"markdown","1bef7cce":"markdown","fdbade62":"markdown","9cf0f56d":"markdown","447136d0":"markdown","ca6b0921":"markdown","b4f0be20":"markdown","d9215f5f":"markdown","0197d4d6":"markdown","ad5dccf7":"markdown","50264834":"markdown","e7f51973":"markdown","a1d8e440":"markdown","16e3eccf":"markdown","7d804ad2":"markdown","e83bb9ea":"markdown","2bb05b03":"markdown","bc4ea5e6":"markdown","37c0672c":"markdown","0564d883":"markdown","0ce6e7f3":"markdown","470ceba1":"markdown","f5342522":"markdown","d8836b13":"markdown","24d4e252":"markdown","f12ade88":"markdown","b4033abd":"markdown"},"source":{"215a6c63":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \nimport seaborn as sns               # Provides a high level interface for drawing attractive and informative statistical graphics\n%matplotlib inline\nsns.set()\nfrom subprocess import check_output\n\nimport warnings                                            # Ignore warning related to pandas_profiling\nwarnings.filterwarnings('ignore') \n\n\ndef annot_plot(ax,w,h):                                    # function to add data to plot\n    ax.spines['top'].set_visible(False)\n    ax.spines['right'].set_visible(False)\n    for p in ax.patches:\n        ax.annotate('{0:.1f}'.format(p.get_height()), (p.get_x()+w, p.get_height()+h))\nimport os\nprint(os.listdir(\"..\/input\"))\n\ndata_path = \"..\/input\/\"\nmatches_data = pd.read_csv(data_path+\"matches.csv\")\nmatches_data.head(5)","d4081883":"matches_data.shape                                                    # This will print the number of rows and comlumns of the Data Frame","a1abf046":"matches_data.columns                                            # This will print the names of all columns.","f26b0702":"matches_data.info()                                                   # This will give Index, Datatype and Memory information","12ac714a":"matches_data.describe()","04c81e7e":"matches_data.isnull().sum()","363d4afc":"matches_data.drop('umpire3', axis=1, inplace=True)  \nmatches_data.columns.unique()","7d25f63f":"#Replacing Rising Pune Supergiant with Rising Pune Supergiants\nmatches_data.replace( 'Rising Pune Supergiant', 'Rising Pune Supergiants',inplace = True)\nmatches_data.head(2)","872a0a9d":"matches_data['city'].fillna( matches_data['venue'].apply(lambda x: x[:5]),inplace = True)\nmatches_data[matches_data['city']== 'Dubai']","c2b40ff7":"matches_data[matches_data['winner'].isnull()]","0d17cbf1":"matches_data.replace( 'Bengaluru', 'Bangalore',inplace = True)\nmatches_data['city'].unique()","3e3d7d12":"\nmatches_data.columns","8e1a82fc":"# display the seasons\nmatches_data['season'].unique()  ","ffcd9342":"# display the team names in IPL\nmatches_data['team1'].unique() ","5c65767e":"#No. of matches held each season\n\nfig = plt.figure()\nax = fig.add_subplot(111)\nax=matches_data.groupby(\"season\")[\"id\"].count().plot(kind=\"line\",title=\"Matches per season\", marker='d',color=['blue'],figsize=(10,3)) \nplt.ylabel(\"No. of Matches\")\n\n\n","db601c55":"max_times_winner = matches_data.groupby('season')['winner'].value_counts()\n\ncount=1\nfig = plt.figure()\n\ngroups=max_times_winner.groupby('season')\nfor year,group in groups:\n    ax = fig.add_subplot(4,3,count)\n    ax.set_title(year)\n    ax=group[year].plot(kind=\"bar\",figsize=(10,15),width=0.8)\n    count=count+1\n    plt.xlabel('')\n    plt.yticks([])\n    plt.ylabel('Matches Won')\n    \n    totals = []\n    for i in ax.patches:\n        totals.append(i.get_height())\n    total = sum(totals)\n    for i in ax.patches:\n    # get_x pulls left or right; get_height pushes up or down\n        ax.text(i.get_x()+0.2, i.get_height()-1.5,s= i.get_height(),color=\"white\",fontweight='bold')\n    \n    \nplt.tight_layout()\nplt.show()\n\n","65c0b11c":"matches_played = matches_data['team1'].value_counts()+ matches_data['team2'].value_counts()\nmatches_played\n","56d0fd84":"matches_won = matches_data.groupby('winner').count()\nmatches_won[\"id\"]","9c5d7ab9":"matches_won = matches_data.groupby('winner').count()\nmatches_won\n\ntotal_matches = matches_data['team1'].value_counts()+ matches_data['team2'].value_counts()\ntotal_matches\n\nmatches_won['Total matches']=total_matches\nmatches_won[[\"Total matches\",\"result\"]].sort_values(by=[\"Total matches\"],ascending=False).plot.bar(stacked=True,figsize=(7,3))","ea9b48ef":"match_succes_rate = (matches_won[\"id\"]\/total_matches)*100\n#print(match_succes_rate)\n\ndata = match_succes_rate.sort_values(ascending = False)\nplt.figure(figsize=(7,3))\nax = sns.barplot(x = data.index, y = data, palette=\"Set2\");\nplt.ylabel('Succes rate of each team')\nplt.xticks(rotation=80)\nannot_plot(ax,0.08,1)\n","f5369290":"season_winner = matches_data.groupby('season')['season','winner'].tail(1)\nseason_winner.sort_values(by=\"season\",ascending=True)","e1d56823":"season_winner.groupby('winner').count().plot.bar(figsize=(5,3))","a380e176":"maximum_runs = matches_data.sort_values('win_by_runs', ascending = False)[:5].head(5)\nmaximum_runs[['season','winner','win_by_runs']]","4d03319b":"min_runs = matches_data[matches_data['win_by_runs'] == 1]\nmin_runs['winner'].value_counts()","c1c031c2":"plt.figure(figsize=(8,5))\n\nsns.swarmplot(y='win_by_runs',x='winner',data=matches_data)\nplt.tight_layout()\nplt.xticks(rotation=90)\nplt.title('Best Defending Teams')\nplt.show()","9bb5c5df":"max_wickets=matches_data[matches_data['win_by_wickets']==10]\nmax_wickets['winner'].value_counts()","3a5cd9f8":"matches_data[['season','winner','win_by_wickets']][matches_data['win_by_wickets'] ==1]","56db6a09":"plt.figure(figsize=(8,5))\nsns.swarmplot(y='win_by_wickets',x='winner',data=matches_data)\nplt.xticks(rotation=80)\nplt.title('Best Chasing Team')\nplt.show()","b928bbc0":"plt.figure(figsize=(5,3))\n\nax =matches_data['player_of_match'].value_counts()[:10].plot.bar()\nplt.title('Top 10 high performing Players')\nannot_plot(ax,0.08,1)","0b5275b9":"toss_won = matches_data['toss_winner'].value_counts()\ntoss_win_rate = (toss_won\/matches_played)*100\ndata = toss_win_rate.sort_values(ascending = False)\nplt.figure(figsize=(5,3))\nax = sns.barplot(x = data.index, y = data, palette=\"Set2\");\nplt.ylabel('Toss win rate of each team')\nplt.xticks(rotation=90)\nannot_plot(ax,0.08,1)\nplt.title('Toss winning success rate of each team')","17771437":"toss=matches_data['toss_decision'].value_counts()\nlabels=np.array(toss.index)\nsizes = toss.values\ncolors = ['gold', 'lightskyblue']\n\n# Plot\nplt.figure(figsize=(5,3))\nplt.pie(sizes, labels=labels, colors=colors,\n        autopct='%1.1f%%', shadow=True,startangle=90)\n\nplt.title('Toss Decision of all the matches')\nplt.axis('equal')\nplt.show()","cdddc79f":"plt.figure(figsize=(8,3))\nax =sns.countplot(x='season',hue='toss_decision',data=matches_data,palette=\"Set2\")\nplt.ylabel('Toss Decision frequency')\nplt.title('Toss Decision across seasons')\nannot_plot(ax,0.08,1)","9b983e64":"plt.figure(figsize=(5,3))\nsns.boxplot(x=\"toss_winner\", y=\"season\", hue = 'toss_decision', data=matches_data)\nplt.xlabel('toss_winner ')\nplt.xticks(rotation=90)\nplt.title('Toss decision by each team')","1fc2b8c1":"tosswin_win = matches_data['id'][matches_data['toss_winner'] == matches_data['winner']].count()\ntotal_matches=matches_data['id'].count()\nSuccess_rate = ((matches_data[matches_data['toss_winner'] == matches_data['winner']].count())\/(total_matches))*100\n\nprint(\"Number of matches in which Toss winner is the game winner is :\",tosswin_win, \"out of\",total_matches,\" ie.,\", Success_rate[\"id\"],\"%\" )\n","b5e8f7a4":"tosswin_winner = matches_data['toss_decision'][matches_data['toss_winner'] == matches_data['winner']].value_counts()\nlabels=np.array(tosswin_winner.index)\nsizes = tosswin_winner.values\ncolors = ['gold', 'lightskyblue']\n\nplt.figure(figsize=(5,3))\nplt.pie(sizes, labels=labels, colors=colors,\n        autopct='%1.1f%%', shadow=True,startangle=90)\n\nplt.title('Toss decision of toss winner to win the game')\nplt.axis('equal')\nplt.show()","a94ffccc":"plt.figure(figsize=(5,3))\n\nax=matches_data['city'].value_counts()[:10].plot.bar()\nplt.title('Top 10 Cities to hold match')\nplt.xticks(rotation=70)\nannot_plot(ax,0.08,1)","2e89b632":"a=matches_data.groupby(['winner','city']).size().reset_index(name='win_counts')\na=a.sort_values(\"win_counts\",ascending=False)\na.groupby(\"winner\").head(1)","efadf1a6":"#top 10 venue to hold max number of matches\nplt.figure(figsize=(5,3))\nvenue=matches_data.groupby('venue')[\"id\"].count()\nax =venue.sort_values(ascending=False).head(10).plot.bar(figsize=(5,3))\nplt.title('Top 10 venue to hold matches')\nplt.xticks(rotation=90)\nannot_plot(ax,0.08,1)","b472f1a7":"venue_suit_for =matches_data[matches_data['toss_winner'] == matches_data['winner']]\nsns.countplot(x='venue',hue='toss_decision',data=venue_suit_for)\nplt.xlabel('Venue ')\nplt.title('Venue is Best Suited for')\nplt.xticks(rotation=90)","a97e518b":"\nresult=matches_data['result'].value_counts().tolist()\nnames='Normal - '+str(result[0]), 'Tie - '+str(result[1]), 'No result - '+str(result[2]), \n\nfig, ax = plt.subplots(figsize=(3.5,3.5))  \n# Create a pieplot\nexplode = (0, 0.01, 0.01)\nax1,text=ax.pie(result,labeldistance=2,explode=explode,radius=0.1, startangle=180,colors=['skyblue','green','red'])\n#plt.show()\nax.axis('equal')\nax.set_title(\"Match Results\") \n\n# add a circle at the center\nmy_circle=plt.Circle( (0,0), 0.07, color='white')\np=plt.gcf()\np.gca().add_artist(my_circle)\nplt.legend(ax1, names,  bbox_to_anchor=(.9,.8), loc=2)\nplt.tight_layout()\nplt.show()","974fa9b5":"toss=matches_data['dl_applied'].value_counts()\nlabels=np.array(toss.index)\nsizes = toss.values\ncolors = ['gold', 'lightskyblue']\n\n# Plot\nplt.figure(figsize=(5,3))\nplt.pie(sizes, labels=labels, colors=colors,\n        autopct='%1.1f%%', shadow=True,startangle=90)\n\nplt.title('Dl applied of all the matches')\nplt.axis('equal')\nplt.show()","f82eb245":"plt.figure(figsize=(5,3))\nax=sns.countplot(matches_data.city[matches_data.dl_applied==1])\nplt.ylabel('Dl applied count City wise')\nplt.xticks(rotation=80)\n","fbb5a996":"Observing few rows and columns of data both from the starting and from the end\n","a998a57e":"<a id=section301><\/a>","4b66250e":"### 4.14 Best Chasing Team <a class=\"anchor\" id=\"section414\">","9fecb32f":"<a id=section201><\/a>","f56e4139":"### 2. Data Loading and Description <a class=\"anchor\" id=\"section2\">\n","9c3923a3":"### 4.19 How does Toss decision varied Season wise by each team ? <a class=\"anchor\" id=\"section419\">","3cd82309":"## 3. Data Profiling","edc977ea":"Observation: __Chennai Super Kings and Mumbai Indians__ won 3 seasons each","8bb2b696":"<a id=section5><\/a>","ab8df897":"__Royal Challangers Bangalore, Mumbai Indians__ and __Kolkata Knight Riders__ are the best Chasing teams.","aeddd581":"Rising Pune Supergiants is having 2 teams with different names (Rising Pune Supergiants and Rising Pune Supergiant)  replacing all values with same name Rising Pune Supergiants","d6d37fdb":"From the year __2014__ most of the teams are opting to __field__ after winning toss.","8ad9b377":"## Table of Contents\n\n1. [Problem Statement](#section1)<br>\n2. [Data Loading and Description](#section2)\n3. [Data Profiling](#section3)\n    - 3.1 [Understanding the Dataset](#section301)<br\/>\n    - 3.3 [Preprocessing](#section303)<br\/>\n4. [Questions](#section4)\n    - 4.1 [Number of matches held season wise](#section401)<br\/>\n    - 4.2 [Number of matches won by each team at each season ](#section402)<br\/>\n    - 4.3 [Total matches played by each team](#section403)<br\/>\n    - 4.4 [How many matches won by each team ?](#section404)<br\/>\n    - 4.5 [Comparison between Number of matches won by each team and total matches played](#section405)<br\/>\n    - 4.6 [Success Rate of each team?](#section406)<br\/>\n    - 4.7 [Each Season Winner](#section407)<br\/>\n    - 4.8 [Which team won maximum seasons ?](#section408)<br\/>\n    - 4.9 [Teams won by maximum runs](#section409)<br\/>\n    - 4.10 [Team won by marginal runs](#section410)<br\/>\n    - 4.11 [Best Defending Teams](#section411)<br\/>\n    - 4.12[Team won by maximum wickets](#section412)<br\/>\n    - 4.13 [Team won by minimum wickets](#section413)<br\/>\n    - 4.14 [Best Chasing Teams](#section414)<br\/>\n    - 4.15 [Top 10 high performing Players](#section415)<br\/>\n    - 4.16 [Toss winning success rate of each team](#section416)<br\/>\n    - 4.17 [Toss Decision across matches](#section417)<br\/>\n    - 4.18 [Toss Decision across seasons](#section418)<br\/>\n    - 4.19 [How does Toss decision varied Season wise by each team ?](#section419)<br\/>\n    - 4.20 [How toss winning affects the match winner](#section420)<br\/>\n    - 4.21 [Toss Decision  in which Toss winner is the game winner](#section421)<br\/>\n    - 4.22 [Top 10 Cities to hold match](#section422)<br\/>\n    - 4.23 [ In which city does each team has won more matches ?](#section423)<br\/>\n    - 4.24 [Top 10 Venues to hold match](#section424)<br\/>\n    - 4.25 [Identify if each Venue is Best Suited to opt for batting or fielding based on previous matches won on that venue?](#section425)<br\/>\n    - 4.26 [Match Results : Normal , tie and no result](#section426)<br\/>\n    - 4.27 [Cities with maximum DL Applied](#section427)<br\/>\n    - 4.28 [Hypothesis: ](#section428)<br\/>\n5. [Conclusions](#section5)<br\/>  \n","6bfe4e91":"### 4.25 Identify if each Venue is Best Suited to opt for batting or fielding based on previous matches won on that venue <a class=\"anchor\" id=\"section425\">","215eced7":"On studying Questionnaire 4.2, 4.6 and 4.8 we observed that Mumbai Indians and Chenni Super Kings are the teams who are more likely to win th IPL Season.","c219a1de":"### 4.7. Each Season Winner <a class=\"anchor\" id=\"section407\">","feb21c40":"__59.3%__ of the toss winning teams have opted for __Feilding__ while __40.7%__ have opted for __Batting__.","95b55c32":"### 1. Problem Statement  <a class=\"anchor\" id=\"section1\">","4f0a2eba":"Drop umpire3 column as it has 91% missing values","52e13503":"__Kolkata Knight Riders, Chennai Super Kings, Sunrisers Hyderabad__ had won the match with marginal wickets.","86728428":"### 5. Conclusion \n","47d7599f":"__Mumbai Indians, Royal Challangers Bangalore, Chennai Super kings and Sunrisers Hyderabad__ are best Defending teams.","e3cad103":"### 4.26 Match Results : Normal , tie and no result <a class=\"anchor\" id=\"section426\">","4f8d6983":"| Column Name   | Description                                               |\n| ------------- |:-------------                                            :| \n| ID   | Match ID                                        | \n| Season      | IPL Season Year                        |  \n| City        | City in which match held                                           | \n| Date          | Date on which match Held                                        |   \n| Team1           | Team1                                        |\n| Team2           | Team 2                                         |\n| Toss_winner         | Team who won the toss |\n| Toss_decision         | opted to field or bat|\n| Result        |  normal or tie or Dl applied                                     |\n| Winner        | Team who won the match                                            |\n| Win by Runs          | Team won by how many runs                                           |\n| Win by Wickets         | Team won by how many wickets                                              |\n| Player Of match        | Player who won man of the match                                          |\n| Venue          | Stadium where the match held                                           |\n| Umpire1         | Umpire1 name                                              |\n| Umpire2          | Umpire2 name                                           |\n| Umpire3         | Umpire3 name                                              |","0815082a":"### 4.20 How toss winning affects the match winner <a class=\"anchor\" id=\"section420\">","65852868":"#### Importing the Packages  and Dataset","0f5c4e9d":" ### 4.1 Number of matches held season wise  <a class=\"anchor\" id=\"section401\">","3e44d7dd":"### 4.5 Comparison between Number of matches won by each team and total matches played <a class=\"anchor\" id=\"section405\">","03e3800c":"### 4.3 Total matches played by each team  <a class=\"anchor\" id=\"section403\">","411f7dfb":"- The dataset consists of the information about IPL matches held from 2008 to 2018. \n- The dataset comprises of __696 observations of 18 columns__. Below is a table showing names of all the columns and their description.","43c447be":"### 4.2 Number of matches won by each team at each season <a class=\"anchor\" id=\"section402\">","ad4c61e3":"### 4.18 Toss Decision across seasons <a class=\"anchor\" id=\"section418\">","1628ca45":"__Deccan Chargers__ has the highest Toss winning success rate of __57.3%__ and __Rising Pune Supergaints__ has the least toss winning success rate of __43.3%__.","ec023958":"### 4.28 Hypothesis: Mumbai Indians and Chennai Super Kings likely to win more matches\n<a class=\"anchor\" id=\"section428\">","cd0a4cf6":"IPL matches data has __696 rows__ and __18 columns.__","586cc614":"### 4.16  Toss winning success rate of each team <a class=\"anchor\" id=\"section416\">","6a3b1ad3":"Observation : __Royal Challengers Bangalore__ is a best chasing team, had won the match many times with maximum wickets.","6355ebf9":"###  4.21 Toss Decision  in which Toss winner is the game winner<a class=\"anchor\" id=\"section421\">","3e6f1935":"In this python notebook, analysis of IPL matches from 2008 to 2018 is done using python packages like pandas, matplotlib and seaborn. This Exploratory Data Analysis will help us to find patterns in data, determining relationships in data. We will try to identify the team that has more chance to win the upcoming seasons by finding observations like success rate of each team, identify the team that has won maximum seasons, best defending and chasing team and analyse the toss decisions etc.","04d3dccd":"<a id=section3><\/a>","bac8c635":"__M Chinnaswamy Stadium__ had hold highest number of matches (__73__) followed by __Eden Gardens (70)__.","ef26b663":"Almost all the teams are preferring to OPT for __feilding__ from __2014__ onwards.","3d4f5d45":"### 4.11 Best Defending Teams <a class=\"anchor\" id=\"section411\">","72a6a531":"### 4. 23 In which city does each team has won more matches ?<a class=\"anchor\" id=\"section423\">","0acafd2c":"__63.9%__ of the toss winning teams had decided to __field__ first while __36.1%__ had decided to __Bat__ first and won the matches.","b75702a8":"<a id=section2><\/a>","3b3f4855":"Observation : More number of matches was held in __ Season 2013__ : 76 Matches","5e4258b7":"### 4.4 How many matches won by each team ?  <a class=\"anchor\" id=\"section404\">","189db468":"### 3.3 Preprocessing","58235a32":"#### Some Background Information\nThe Indian Premier League (IPL), is a professional Twenty20 cricket league in India contested during April and May of every year\nby teams representing Indian cities and some states from 2008 to 2018. The dataset that we use in this notebook is matches.csv\n\n![image.png](attachment:image.png)","053ce71e":"### 4.15 Top 10 high performing Players <a class=\"anchor\" id=\"section415\">","381b70bc":"The above table displays each season wise winner from 2008 to 2018","0c9a12c2":"- This dataset contains data about IPL matches  from season 2008 to 2018\n- Totally 13 teams has participated in IPL History and few teams like Pune Warriors,Kochi Tuskers Kerala,Rising Pune Supergiants, Gujarat Lions has been only in 2 seasons but the success rate of __Rising Pune Supergiants__ is good comparatively among the new teams (__From: Section 4.6__)\n- __Mumbai Indians, Royal Challangers Bangalore and Chennai Super kings__ are best Defending teams (__From: Section 4.11__) \n- __Royal Challangers Bangalore, Mumbai Indians__ and __Kolkata Knight Riders__ are the best Chasing teams (__From: Section 4.14__)\n- From the year\u00a02014\u00a0most of the teams are opting to\u00a0field\u00a0after winning toss and are also successful in winning the match. (__From: Section 4.18 and 4.19__)\n- Overall  __Chennai Super Kings__ and __Mumbai Indians__ have high success rate and these two teams are the most successful teams in the tournament with 3 season wins each (__From: Section 4.2 ,4.6 and 4.8__)\n- From the analysis, it was concluded that __Chennai Super Kings__ and __Mumbai Indians__  are more likely to win upcoming IPL seasons (__Collectively From: 4.5, 4.6, 4.8 and 4.11__)","6455b9c7":"### 3.1 Understanding the Dataset","389668ff":"### 4.9 Teams won by maximum runs   <a class=\"anchor\" id=\"section409\">","b7c938ed":"From the above output we can see that __city__ and __umpire3__ columns contains __maximum null values__. We will see how to deal with them.","03a0d391":"### 4.12 Team won by maximum wickets <a class=\"anchor\" id=\"section412\">","1bef7cce":"Observation :__Chennai Super Kings__ have highest winning success rate __(61.2%)__ , followed by Mumbai Indians __(57.3%)__.","fdbade62":"<a id=section302><\/a>","9cf0f56d":"__Kolkata, Bangalore and Delhi__ is more likely to have bad weather.","447136d0":"### Replace city Bengaluru to Bangalore","ca6b0921":"__CH Gayle__ has won Player of the match  __20__ times followed by __AB de Villers__ who had won __18__ times.","b4f0be20":"### 4.17 Toss Decision across matches <a class=\"anchor\" id=\"section417\">","d9215f5f":"__M Chinnaswamy stadium and Eden Gardens__ is best Suited for Feilding and __MA Chidambaram Stadium ,Chepauk__ is best suited for Batting.","0197d4d6":"__Mumbai__ had hold highest number of matches (__94__) followed by __Kolkata (70)__.","ad5dccf7":"### 4.27 Cities with maximum DL Applied <a class=\"anchor\" id=\"section427\">","50264834":"Observation: __Royal Challengers Bangalore__ has won by maximum runs most of the time, they are good defenders and __Mumbai Indians__ has won with highest run difference of __146__.","e7f51973":" __Mumbai Indians__ and __Kings XI Punjab__ defended the opposite team with marginal runs.","a1d8e440":"### 4.8 Which team won maximum seasons ?  <a class=\"anchor\" id=\"section408\">","16e3eccf":"### 4.24 Top 10 venue to hold matches <a class=\"anchor\" id=\"section424\">","7d804ad2":"### 4.22 Top 10 Cities to hold match <a class=\"anchor\" id=\"section422\">","e83bb9ea":"### Replacing Null values in CITY column from VENUE","2bb05b03":"Observation : __Mumbai Indians__ and __Chennai super kings__ has won maximum matches ","bc4ea5e6":"Teams had won more matches in their home grounds.","37c0672c":"### 4.13 Team won by minimum wickets <a class=\"anchor\" id=\"section413\">","0564d883":"### 4.10 Team won by marginal runs <a class=\"anchor\" id=\"section410\">","0ce6e7f3":"### 4. Questions <a class=\"anchor\" id=\"section4\">","470ceba1":"- Dealing with missing values<br\/>\n    - Replacing missing entries of __City__ from the Venue Column.\n    - Replacing __Rising Pune supergiant as Rising Pune supergiants __.\n    - Dropping the column __'Umpire3'__ as it has too many _null_ values.\n    - Replace city __Bengaluru to Bangalore__","f5342522":"As the matches had no result these columns would be left blank and no need to replace with any values.","d8836b13":"Observation: __Mumbai Indians, Chennai Super Kings__ has more wins against total number of matches played by each team and __Pune Warriors__ has least wins against total matches played by them.","24d4e252":"<a id=section411><\/a>","f12ade88":"### 4.6 Success Rate of each team <a class=\"anchor\" id=\"section406\">","b4033abd":"### Missing values of winner and player_of_match columns."}}