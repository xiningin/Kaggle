{"cell_type":{"db5a33fc":"code","b6ae25c1":"code","4653c163":"code","47433e11":"code","2f246a63":"code","51c385cb":"code","83853a72":"code","9006cd33":"code","447d3cff":"code","8027a4a5":"code","f7295a2c":"markdown","96a79fbc":"markdown","cdbcd024":"markdown","4087969a":"markdown","da3b7134":"markdown","2342fa43":"markdown","d119a68a":"markdown","3f7ab2ea":"markdown","f083a810":"markdown"},"source":{"db5a33fc":"import pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import r2_score\nfrom sklearn import metrics","b6ae25c1":"\ndataST      = pd.read_csv(\"\/kaggle\/input\/competitive-data-science-predict-future-sales\/sales_train.csv\")\nitemsData   = pd.read_csv(\"\/kaggle\/input\/competitive-data-science-predict-future-sales\/items.csv\")\ndataTest    = pd.read_csv(\"\/kaggle\/input\/competitive-data-science-predict-future-sales\/test.csv\")\nsubmission = pd.read_csv(\"\/kaggle\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv\")\n\nprint(\"dataST verisinin \u00f6zeti\")\nprint(\"------------------------------------------------------------\")\nprint(dataST.head(10) )\n\n","4653c163":"dataST = dataST.groupby(['date_block_num','item_id','shop_id'], as_index = False).agg({'item_cnt_day': 'sum', 'item_price': 'max'})\ndataST = dataST[dataST.item_price<40000]\ndataST = dataST[dataST.item_cnt_day<7500]\ndataST = dataST.rename(columns={'item_cnt_day':'item_cnt_month', 'item_price':'max_item_price'})\n\nprint(\"dataST verisinin  i\u015flenmi\u015f halinin \u00f6zeti\")\nprint(\"------------------------------------------------------------\")\nprint(dataST.head(10) )\n\n","47433e11":"itemsData=itemsData.drop(['item_name'],axis=1)\n\nallTrainData=pd.merge(dataST,itemsData)\n\nallTestData= pd.merge(dataTest,itemsData)\nallTestData=allTestData.drop([\"ID\"],axis=1)\nallTestData['date_block_num'] = 34\n\nprint(\"allTestData verisinin \u00f6zeti\")\nprint(\"------------------------------------------------------------\")\nprint(allTestData.head(10) )","2f246a63":"df1= allTrainData[ ['max_item_price','item_id','shop_id'] ]\n\nallTestData=pd.merge(df1, allTestData)\n\nprint(\"allTestData verisinin \u00f6zeti\")\nprint(\"------------------------------------------------------------\")\nprint(allTestData.head(10) )","51c385cb":"x_train, x_test, y_train, y_test = train_test_split(allTrainData.drop('item_cnt_month', axis=1), allTrainData.item_cnt_month, test_size=0.33, random_state=0)\n\nprint(\"x_train verisinin \u00f6zeti\")\nprint(\"------------------------------------------------------------\")\nprint(x_train.head(10) )\n\nprint(\"\\n\\ny_train verisinin \u00f6zeti\")\nprint(\"------------------------------------------------------------\")\nprint(y_train.head(10) )\n","83853a72":"reg_decT = DecisionTreeRegressor(random_state=0)\nreg_decT.fit(x_train, y_train)\ny_pred = reg_decT.predict(x_test)\n\nprint(\"R2 Score:\",r2_score(y_test,y_pred))\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))\nprint('Root Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred, squared=False))","9006cd33":"lin_reg = LinearRegression()\nlin_reg.fit(x_train,y_train)\ny_pred = lin_reg.predict(x_test)\n\nprint(\"R2 Score:\",r2_score(y_test,y_pred))\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))\nprint('Root Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred, squared=False))","447d3cff":"\nrf_reg = RandomForestRegressor(n_estimators=7,random_state=0)\nrf_reg.fit(x_train,y_train)\ny_pred = rf_reg.predict(x_test)\n\nprint(\"R2 Score:\",r2_score(y_test,y_pred))\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))\nprint('Root Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred, squared=False))\n","8027a4a5":"x=allTrainData.drop('item_cnt_month', axis=1)\ny=allTrainData.item_cnt_month\nrf_reg.fit(x,y)\ny_pred = rf_reg.predict(allTestData)\n\nprediction=pd.DataFrame(y_pred,columns=[\"item_cnt_month\"])\n\nsubmission=submission.drop(columns=['item_cnt_month'])\nsubmission=pd.concat([submission,prediction],axis=1)\nsubmission=submission.dropna()\nsubmission[['ID']]=submission[['ID']].astype(int)\nsubmission.to_csv('submission.csv', index=False)","f7295a2c":"SalesTrain verisi \u00fczerinde d\u00fczenlemelerin yap\u0131lmas\u0131","96a79fbc":"K\u00fct\u00fcphanelerin import edilmesi ve kolayl\u0131k olmas\u0131 i\u00e7in yap\u0131lan baz\u0131 isimlendirmeler","cdbcd024":"**Random Forest Regresyon Algoritmas\u0131**","4087969a":"CSV Dosyalar\u0131n\u0131n okunup dataframe lere d\u00f6n\u00fc\u015ft\u00fcr\u00fclmesi","da3b7134":"**Linear Regresyon Algoritmas\u0131**","2342fa43":"Test verisi ve Train verisine item kategorilerinin eklenmesi gibi baz\u0131 d\u00fczenlemeler","d119a68a":"**Decision Tree Regresyon Algoritmas\u0131**","3f7ab2ea":"Train verisinin algoritmalar\u0131 kar\u015f\u0131la\u015ft\u0131rmak i\u00e7in uygun \u015fekilde b\u00f6l\u00fcnmesi","f083a810":"R2 Score, Mean Absolute Error ve Root Mean Squared Error g\u00f6z \u00f6n\u00fcnde bulundurulunca en ba\u015far\u0131l\u0131 olan algoritman\u0131n Random Forest Regresyon Algoritmas\u0131 oldu\u011funa karar verdim. \nVerimin tamam\u0131yla tekrar randomForestRegressor objemi e\u011fitip, yar\u0131\u015fman\u0131n test verileri i\u00e7in sonu\u00e7lar\u0131 tahmin ediyorum"}}