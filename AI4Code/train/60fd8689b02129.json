{"cell_type":{"522fca45":"code","9fa78ec4":"code","8100f187":"code","93c19690":"code","2c56d098":"code","88f8a0a9":"code","c5bebffb":"code","fdc9cf00":"code","24e98156":"code","29db7ece":"code","31b75fd7":"code","97eda247":"code","9edd1516":"code","51e2694a":"code","4307b3a9":"code","664f4313":"code","0ecbab55":"code","2362eb8e":"code","0c1d9cec":"code","cf6af82b":"code","c71a1c80":"code","0743a459":"code","f90d2e4f":"code","ab1f2130":"code","651e7478":"code","fa80dc51":"code","95f0150e":"code","2b038160":"code","2b83bffb":"code","32ae95de":"code","96751136":"code","7c4fcc5e":"code","cf82121d":"code","08f62971":"code","96cbe0ce":"code","4fb50f06":"code","9476cc2e":"code","71694956":"code","f827119e":"code","f2bbe6fb":"code","e067aaee":"code","30f672e9":"code","e0fa13d6":"code","a4c75bdc":"code","bd413c7b":"code","b3e99609":"code","41633dbe":"code","446f33b0":"code","b6608580":"code","80ece2c8":"code","b687e944":"code","1b24e06d":"code","643de796":"code","30f88b80":"code","71c858ef":"code","4afca95b":"code","007caec2":"code","bd9a756e":"code","6c2f0f60":"markdown","a69b19d0":"markdown","0d9412cf":"markdown","f89b2045":"markdown","a21cf050":"markdown","74df7319":"markdown","323a94dd":"markdown","fd95965c":"markdown","8647551d":"markdown","455cf4e3":"markdown","2b9bf4ad":"markdown","9ad6f303":"markdown","aa2dfcb1":"markdown","6648a36e":"markdown","a17e768c":"markdown","1d75ad82":"markdown","bfd5ca3b":"markdown","e82a5772":"markdown","9abfc6cb":"markdown","b8782627":"markdown","0e4294d5":"markdown","3c50c182":"markdown","87e7e8c5":"markdown","01efd066":"markdown","b567fe29":"markdown","114bcf9c":"markdown","e0ce64b7":"markdown","e3d559a0":"markdown","3f882ec6":"markdown","fdd6a12b":"markdown","3e2fb9cd":"markdown","96f23f32":"markdown","81349519":"markdown","d4c7859f":"markdown","b2371b14":"markdown","a1da7fbd":"markdown","2503cf8a":"markdown","a3da0840":"markdown","dabb157e":"markdown","17339ec4":"markdown","ce5fec3b":"markdown","6213a39a":"markdown","adb23e24":"markdown","eea51ce3":"markdown","7d3aed05":"markdown","f7df4aed":"markdown","dad7bbd9":"markdown","87e3d019":"markdown","d2becc3f":"markdown","3528004e":"markdown","e74c6362":"markdown","2e4210c0":"markdown","ceb24b4f":"markdown","e71e07f0":"markdown","08245be7":"markdown","3bb6b9fd":"markdown","cd83a676":"markdown","ab3d5317":"markdown","797f869c":"markdown","9fc7cf86":"markdown","c528501f":"markdown","54bd938a":"markdown","bafa85f1":"markdown","47a43e5d":"markdown","3c0853a4":"markdown","9622761c":"markdown","a8daa972":"markdown","6d6104ae":"markdown","fd8c7571":"markdown","357af11c":"markdown","c8a49941":"markdown","651506d2":"markdown","1eace481":"markdown","4fac1b78":"markdown","8b43d2ff":"markdown","ca85615a":"markdown","3809df4d":"markdown","a9e3f386":"markdown","16562b63":"markdown"},"source":{"522fca45":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9fa78ec4":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore') ","8100f187":"dataset = pd.read_csv('\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv', encoding=\"windows-1252\")\ndataset.sample(10)","93c19690":"dataset.info()","2c56d098":"def bar_plot(variable):\n    \"\"\"\n        input: variable ex: \"Sex\"\n        output: bar plot & value count\n    \"\"\"\n    # get feature\n    var = dataset[variable]\n    # count number of categorical variable(value\/sample)\n    varValue = var.value_counts()\n    \n    # visualize\n    plt.figure(figsize = (9,3))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}:\\n{}\".format(variable,varValue))","88f8a0a9":"sns.set_style('darkgrid')\ncategorical_variables = ['gender', 'race\/ethnicity', 'parental level of education', 'lunch', 'test preparation course']\nfor c in categorical_variables:\n    bar_plot(c)","c5bebffb":"def plot_hist(variable):\n    plt.figure(figsize = (9,3))\n    plt.hist(dataset[variable], bins = 50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()","fdc9cf00":"numerical_variables = ['math score', 'reading score', 'writing score']\nfor n in numerical_variables:\n    plot_hist(n)","24e98156":"dataset[[\"gender\",\"math score\"]].groupby([\"gender\"], as_index = False).mean().sort_values(by=\"math score\",ascending = False)","29db7ece":"dataset[[\"gender\",\"reading score\"]].groupby([\"gender\"], as_index = False).mean().sort_values(by=\"reading score\",ascending = False)","31b75fd7":"dataset[[\"gender\",\"writing score\"]].groupby([\"gender\"], as_index = False).mean().sort_values(by=\"writing score\",ascending = False)","97eda247":"race_math = dataset[[\"gender\",\"math score\"]].groupby([\"gender\"], as_index = False).mean()\nrace_writing = dataset[[\"gender\",\"writing score\"]].groupby([\"gender\"], as_index = False).mean()\nrace_reading = dataset[[\"gender\",\"reading score\"]].groupby([\"gender\"], as_index = False).mean()\n\nplt.figure(figsize=(20,10))\nsns.set_theme(style=\"darkgrid\")\nplt.title('Math - Reading - Writing Scores according to Gender', fontweight='bold', size = 24)\n\nbarWidth = 0.25\n \nbars1 = race_math['math score']\nbars2 = race_writing['writing score']\nbars3 = race_reading['reading score']\n\n \nr1 = np.arange(len(bars1))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\nr4 = [x + barWidth for x in r3]\n \nplt.bar(r1, bars1, color='blue', width=barWidth, edgecolor='white', label='math score', yerr=0.3,ecolor=\"black\",capsize=10)\nplt.bar(r2, bars2, color='#557f2d', width=barWidth, edgecolor='white', label='writing score', yerr=0.5,ecolor=\"black\",capsize=10, alpha = .50)\nplt.bar(r3, bars3, color='red', width=barWidth, edgecolor='white', label='reading score', yerr=0.5,ecolor=\"black\",capsize=10, hatch = '-')\n\nmodelNames = race_math['gender']\n    \nplt.xlabel('Gender', fontweight='bold', size = 24)\nplt.ylabel('Scores', fontweight='bold', size = 24)\nplt.xticks([r + barWidth for r in range(len(bars1))], modelNames, rotation = 0, size = 24)\nplt.legend()\nplt.show()","9edd1516":"dataset[[\"race\/ethnicity\",\"math score\"]].groupby([\"race\/ethnicity\"], as_index = False).mean().sort_values(by=\"math score\",ascending = False)","51e2694a":"dataset[[\"race\/ethnicity\",\"reading score\"]].groupby([\"race\/ethnicity\"], as_index = False).mean().sort_values(by=\"reading score\",ascending = False)","4307b3a9":"dataset[[\"race\/ethnicity\",\"writing score\"]].groupby([\"race\/ethnicity\"], as_index = False).mean().sort_values(by=\"writing score\",ascending = False)","664f4313":"race_math = dataset[[\"race\/ethnicity\",\"math score\"]].groupby([\"race\/ethnicity\"], as_index = False).mean()\nrace_writing = dataset[[\"race\/ethnicity\",\"writing score\"]].groupby([\"race\/ethnicity\"], as_index = False).mean()\nrace_reading = dataset[[\"race\/ethnicity\",\"reading score\"]].groupby([\"race\/ethnicity\"], as_index = False).mean()\n\nplt.figure(figsize=(20,10))\nsns.set_theme(style=\"darkgrid\")\nplt.title('Math - Reading - Writing Scores according to Race\/Ethnicity', fontweight='bold', size = 24)\n\nbarWidth = 0.25\n \nbars1 = race_math['math score']\nbars2 = race_writing['writing score']\nbars3 = race_reading['reading score']\n \nr1 = np.arange(len(bars1))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\n \nplt.bar(r1, bars1, color='blue', width=barWidth, edgecolor='white', label='math score', yerr=0.5,ecolor=\"black\",capsize=10)\nplt.bar(r2, bars2, color='#557f2d', width=barWidth, edgecolor='white', label='writing score', yerr=0.5,ecolor=\"black\",capsize=10, alpha = .50)\nplt.bar(r3, bars3, color='red', width=barWidth, edgecolor='white', label='reading score', yerr=0.5,ecolor=\"black\",capsize=10, hatch = '-')\n \nmodelNames = race_math['race\/ethnicity']\n    \nplt.xlabel('Race\/ethnicity', fontweight='bold', size = 24)\nplt.ylabel('Scores', fontweight='bold', size = 24)\nplt.xticks([r + barWidth for r in range(len(bars1))], modelNames, rotation = 0, size = 24)\n \nplt.legend()\nplt.show()","0ecbab55":"dataset[[\"parental level of education\",\"math score\"]].groupby([\"parental level of education\"], as_index = False).mean().sort_values(by=\"math score\",ascending = False)","2362eb8e":"dataset[[\"parental level of education\",\"reading score\"]].groupby([\"parental level of education\"], as_index = False).mean().sort_values(by=\"reading score\",ascending = False)","0c1d9cec":"dataset[[\"parental level of education\",\"writing score\"]].groupby([\"parental level of education\"], as_index = False).mean().sort_values(by=\"writing score\",ascending = False)","cf6af82b":"race_math = dataset[[\"parental level of education\",\"math score\"]].groupby([\"parental level of education\"], as_index = False).mean()\nrace_writing = dataset[[\"parental level of education\",\"writing score\"]].groupby([\"parental level of education\"], as_index = False).mean()\nrace_reading = dataset[[\"parental level of education\",\"reading score\"]].groupby([\"parental level of education\"], as_index = False).mean()\n\nplt.figure(figsize=(20,10))\nplt.title('Math - Reading - Writing Scores according to Parental Level of Education', fontweight='bold', size = 24)\n\nbarWidth = 0.25\n \nbars1 = race_math['math score']\nbars2 = race_writing['writing score']\nbars3 = race_reading['reading score']\n \nr1 = np.arange(len(bars1))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\n \nplt.bar(r1, bars1, color='blue', width=barWidth, edgecolor='white', label='math score', yerr=0.5,ecolor=\"black\",capsize=10)\nplt.bar(r2, bars2, color='#557f2d', width=barWidth, edgecolor='white', label='writing score', yerr=0.5,ecolor=\"black\",capsize=10, alpha = .50)\nplt.bar(r3, bars3, color='red', width=barWidth, edgecolor='white', label='reading score', yerr=0.5,ecolor=\"black\",capsize=10, hatch = '-')\n \nmodelNames = race_math['parental level of education']\n    \nplt.xlabel('Parental Level of Education', fontweight='bold', size = 24)\nplt.ylabel('Scores', fontweight='bold', size = 24)\nplt.xticks([r + barWidth for r in range(len(bars1))], modelNames, rotation = 0, size = 15)\n \nplt.legend()\nplt.show()","c71a1c80":"dataset[[\"lunch\",\"math score\"]].groupby([\"lunch\"], as_index = False).mean().sort_values(by=\"math score\",ascending = False)","0743a459":"dataset[[\"lunch\",\"reading score\"]].groupby([\"lunch\"], as_index = False).mean().sort_values(by=\"reading score\",ascending = False)","f90d2e4f":"dataset[[\"lunch\",\"writing score\"]].groupby([\"lunch\"], as_index = False).mean().sort_values(by=\"writing score\",ascending = False)","ab1f2130":"race_math = dataset[[\"lunch\",\"math score\"]].groupby([\"lunch\"], as_index = False).mean()\nrace_writing = dataset[[\"lunch\",\"writing score\"]].groupby([\"lunch\"], as_index = False).mean()\nrace_reading = dataset[[\"lunch\",\"reading score\"]].groupby([\"lunch\"], as_index = False).mean()\n\nplt.figure(figsize=(20,10))\nplt.title('Math - Reading - Writing Scores according to Lunch', fontweight='bold', size = 24)\n\nbarWidth = 0.25\n \nbars1 = race_math['math score']\nbars2 = race_writing['writing score']\nbars3 = race_reading['reading score']\n \nr1 = np.arange(len(bars1))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\n \nplt.bar(r1, bars1, color='blue', width=barWidth, edgecolor='white', label='math score', yerr=0.5,ecolor=\"black\",capsize=10)\nplt.bar(r2, bars2, color='#557f2d', width=barWidth, edgecolor='white', label='writing score', yerr=0.5,ecolor=\"black\",capsize=10, alpha = .50)\nplt.bar(r3, bars3, color='red', width=barWidth, edgecolor='white', label='reading score', yerr=0.5,ecolor=\"black\",capsize=10, hatch = '-')\n \nmodelNames = race_math['lunch']\n    \nplt.xlabel('Lunch', fontweight='bold', size = 24)\nplt.ylabel('Scores', fontweight='bold', size = 24)\nplt.xticks([r + barWidth for r in range(len(bars1))], modelNames, rotation = 0, size = 24)\n \nplt.legend()\nplt.show()","651e7478":"dataset[[\"test preparation course\",\"math score\"]].groupby([\"test preparation course\"], as_index = False).mean().sort_values(by=\"math score\",ascending = False)","fa80dc51":"dataset[[\"test preparation course\",\"reading score\"]].groupby([\"test preparation course\"], as_index = False).mean().sort_values(by=\"reading score\",ascending = False)","95f0150e":"dataset[[\"test preparation course\",\"writing score\"]].groupby([\"test preparation course\"], as_index = False).mean().sort_values(by=\"writing score\",ascending = False)","2b038160":"race_math = dataset[[\"test preparation course\",\"math score\"]].groupby([\"test preparation course\"], as_index = False).mean()\nrace_writing = dataset[[\"test preparation course\",\"writing score\"]].groupby([\"test preparation course\"], as_index = False).mean()\nrace_reading = dataset[[\"test preparation course\",\"reading score\"]].groupby([\"test preparation course\"], as_index = False).mean()\n\nplt.figure(figsize=(20,10))\nplt.title('Math - Reading - Writing Scores according to Test Preparation Course', fontweight='bold', size = 24)\n\nbarWidth = 0.25\n \nbars1 = race_math['math score']\nbars2 = race_writing['writing score']\nbars3 = race_reading['reading score']\n \nr1 = np.arange(len(bars1))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\n \nplt.bar(r1, bars1, color='blue', width=barWidth, edgecolor='white', label='math score', yerr=0.5,ecolor=\"black\",capsize=10)\nplt.bar(r2, bars2, color='#557f2d', width=barWidth, edgecolor='white', label='writing score', yerr=0.5,ecolor=\"black\",capsize=10, alpha = .50)\nplt.bar(r3, bars3, color='red', width=barWidth, edgecolor='white', label='reading score', yerr=0.5,ecolor=\"black\",capsize=10, hatch = '-')\n \nmodelNames = race_math['test preparation course']\n    \nplt.xlabel('Test Preparation Course', fontweight='bold', size = 24)\nplt.ylabel('Scores', fontweight='bold', size = 24)\nplt.xticks([r + barWidth for r in range(len(bars1))], modelNames, rotation = 0, size = 24)\n \nplt.legend()\nplt.show()","2b83bffb":"#This code is retrieved from here: https:\/\/www.kaggle.com\/kanncaa1\/dataiteam-titanic-eda#Introduction\n\ndef detect_outliers(df,features):\n    outlier_indices = []\n    \n    for c in features:\n        # 1st quartile\n        Q1 = np.percentile(df[c],25)\n        # 3rd quartile\n        Q3 = np.percentile(df[c],75)\n        # IQR\n        IQR = Q3 - Q1\n        # Outlier step\n        outlier_step = IQR * 1.5\n        # detect outlier and their indeces\n        outlier_list_col = df[(df[c] < Q1 - outlier_step) | (df[c] > Q3 + outlier_step)].index\n        # store indeces\n        outlier_indices.extend(outlier_list_col)\n    \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i, v in outlier_indices.items() if v > 2)\n    \n    return multiple_outliers","32ae95de":"dataset.loc[detect_outliers(dataset,['math score', 'reading score', 'writing score'])]","96751136":"# drop outliers\n#train_df = train_df.drop(detect_outliers(train_df,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"]),axis = 0).reset_index(drop = True)","7c4fcc5e":"labels = dataset['race\/ethnicity'].value_counts().index\nsizes = dataset['race\/ethnicity'].value_counts().values\n\nplt.figure(figsize = (8,8))\nplt.pie(sizes, labels=labels, autopct='%1.1f%%')\nplt.title('Distribution of Students by Races',color = 'black',fontsize = 15)","cf82121d":"labels = dataset['gender'].value_counts().index\nsizes = dataset['gender'].value_counts().values\n\nplt.figure(figsize = (8,8))\nplt.pie(sizes, labels=labels, autopct='%1.1f%%')\nplt.title('Distribution of Students by Genders',color = 'black',fontsize = 15)\n","08f62971":"plt.figure(figsize=(20,15))\nsns.set_theme(style=\"darkgrid\")\nplt.subplot(2,3,1)\nsns.violinplot(x = 'gender', y = 'math score', data = dataset, palette=\"gist_ncar_r\")\nplt.subplot(2,3,2)\nsns.violinplot(x = 'gender', y = 'reading score', data = dataset, palette=\"gist_ncar_r\")\nplt.subplot(2,3,3)\nsns.violinplot(x = 'gender', y = 'writing score', data = dataset, palette=\"gist_ncar_r\")","96cbe0ce":"import seaborn as sns\nsns.set_theme(style=\"darkgrid\")\n\n\nplt.figure(figsize=(20,15))\n\nplt.subplot(2,3,1)\nsns.boxenplot(x=dataset['lunch'], y=dataset['math score'],\n              color=\"b\", \n              scale=\"linear\", data=dataset)\n\nplt.subplot(2,3,2)\nsns.boxenplot(x=dataset['lunch'], y=dataset['reading score'],\n              color=\"b\", \n              scale=\"linear\", data=dataset)\n\nplt.subplot(2,3,3)\nsns.boxenplot(x=dataset['lunch'], y=dataset['writing score'],\n              color=\"b\", \n              scale=\"linear\", data=dataset)\n\n\n","4fb50f06":"import seaborn as sns\nsns.set_theme(style=\"darkgrid\")\n\nplt.figure(figsize=(20,15))\n\nplt.subplot(2,3,1)\nsns.swarmplot(x=\"test preparation course\", y=\"math score\",hue=\"parental level of education\", data=dataset, palette=\"PRGn\")\n\nplt.subplot(2,3,2)\nsns.swarmplot(x=\"test preparation course\", y=\"reading score\",hue=\"parental level of education\", data=dataset, palette=\"PRGn\")\n\nplt.subplot(2,3,3)\nsns.swarmplot(x=\"test preparation course\", y=\"writing score\",hue=\"parental level of education\", data=dataset, palette=\"PRGn\")\n\nplt.show()","9476cc2e":"counts = dataset['parental level of education'].value_counts()\n\nplt.figure(figsize=(10,7))\nsns.barplot(x=counts.index, y=counts.values, palette=\"Set3\")\n\nplt.ylabel('Number of Degree')\nplt.xlabel('Degrees', style = 'normal', size = 24)\n\nplt.xticks(rotation = 45, size = 12)\nplt.yticks(rotation = 45, size = 12)\n\nplt.title('Distribution of Parental Level of Education',color = 'black',fontsize=15)\nplt.show()","71694956":"dataset['overall'] = (dataset['math score'] + dataset['reading score'] + dataset['writing score'])\/3","f827119e":"sns.set_theme(style=\"darkgrid\")\ng = sns.jointplot(x = dataset['math score'], y = dataset['overall'], kind = 'hex', size=7)\nplt.show()","f2bbe6fb":"sns.set_theme(style=\"darkgrid\")\ng = sns.jointplot(x = dataset['reading score'], y = dataset['overall'], kind=\"kde\", size=7)\nplt.show()","e067aaee":"sns.set_theme(style=\"darkgrid\")\ng = sns.jointplot(x = dataset['writing score'], y = dataset['overall'], kind=\"reg\", size=7)\nplt.show()","30f672e9":"dataset.corr()","e0fa13d6":"plt.figure(figsize=(10,6)) \nsns.heatmap(dataset.corr(), annot=True, cmap='Dark2_r', linewidths = .2)\nplt.show()","a4c75bdc":"plt.figure(figsize=(20, 10))\nsns.set_style('white')\nmask = np.triu(np.ones_like(dataset.corr(), dtype=np.bool))\nheatmap = sns.heatmap(dataset.corr(), mask=mask,annot=True, cmap='BrBG', linewidths = 2)\nheatmap.set_title('Triangle Correlation Heatmap', fontdict={'fontsize':30}, pad=16);","bd413c7b":"sns.set_theme(style=\"darkgrid\")\nsns.pairplot(dataset, hue=\"lunch\")","b3e99609":"sns.pairplot(dataset, hue=\"race\/ethnicity\")","41633dbe":"sns.pairplot(dataset, hue=\"test preparation course\")","446f33b0":"sns.set_theme(style=\"darkgrid\", palette=\"pastel\")\n\nplt.figure(figsize=(20,15))\n\nplt.subplot(2,2,1)\nsns.boxplot(x=\"gender\", y=\"overall\", hue=\"test preparation course\", data=dataset)\n\nplt.subplot(2,2,2)\nsns.boxplot(x=\"gender\", y=\"overall\", hue=\"parental level of education\", data=dataset)\n\nplt.subplot(2,2,3)\nsns.boxplot(x=\"gender\", y=\"overall\", hue=\"lunch\", data=dataset)\n\nplt.subplot(2,2,4)\nsns.boxplot(x=\"gender\", y=\"overall\", hue=\"race\/ethnicity\", data=dataset)\n\nsns.despine(offset=10, trim=True)\nplt.show()","b6608580":"# Use JointGrid directly to draw a custom plot\ng = sns.JointGrid(data=dataset, x=\"overall\", y=\"math score\", space=0, ratio=17)\ng.plot_joint(sns.scatterplot, color=\"g\", alpha=.6, legend=False)\ng.plot_marginals(sns.rugplot, height=1, color=\"g\", alpha=.6)","80ece2c8":"g = sns.JointGrid(data=dataset, x=\"overall\", y=\"reading score\", space=0, ratio=17)\ng.plot_joint(sns.scatterplot, color=\"r\", alpha=.6, legend=False)\ng.plot_marginals(sns.rugplot, height=1, color=\"r\", alpha=.6)","b687e944":"g = sns.JointGrid(data=dataset, x=\"overall\", y=\"writing score\", space=0, ratio=17)\ng.plot_joint(sns.scatterplot, color=\"b\", alpha=.6, legend=False)\ng.plot_marginals(sns.rugplot, height=1, color=\"b\", alpha=.6)","1b24e06d":"f, ax = plt.subplots(figsize=(6.5, 6.5))\nsns.despine(f, left=True, bottom=True)\nsns.set_theme(style=\"darkgrid\")\nsns.scatterplot(x=dataset['overall'], y=dataset['math score'],\n                hue=dataset['parental level of education'], \n                size=\"gender\",\n                palette=\"RdBu\",\n                hue_order=dataset['parental level of education'],\n                sizes=(1, 8), \n                linewidth=0,\n                data=dataset, ax=ax)","643de796":"f, ax = plt.subplots(figsize=(6.5, 6.5))\nsns.despine(f, left=True, bottom=True)\nsns.set_theme(style=\"darkgrid\")\nsns.scatterplot(x=dataset['overall'], y=dataset['writing score'],\n                hue=dataset['parental level of education'], \n                size=\"gender\",\n                palette=\"Dark2\",\n                hue_order=dataset['parental level of education'],\n                sizes=(1, 8), \n                linewidth=0,\n                data=dataset, ax=ax)","30f88b80":"f, ax = plt.subplots(figsize=(6.5, 6.5))\nsns.despine(f, left=True, bottom=True)\nsns.set_theme(style=\"darkgrid\")\nsns.scatterplot(x=dataset['overall'], y=dataset['reading score'],\n                hue=dataset['parental level of education'], \n                size=\"gender\",\n                palette=\"tab20\",\n                hue_order=dataset['parental level of education'],\n                sizes=(1, 8), \n                linewidth=0,\n                data=dataset, ax=ax)","71c858ef":"sns.set_theme(style=\"ticks\")\n\n\nsns.histplot(\n    dataset,\n    x=\"overall\", hue=\"lunch\",\n    multiple=\"stack\",\n    palette=\"light:m_r\",\n    edgecolor=\".3\",\n    linewidth=.5,\n    #log_scale=True,\n)\n","4afca95b":"sns.set_theme(style=\"ticks\")\n\n\nsns.histplot(\n    dataset,\n    x=\"overall\", hue=\"gender\",\n    multiple=\"stack\",\n    palette=\"light:m_r\",\n    edgecolor=\".3\",\n    linewidth=.5,\n    #log_scale=True,\n)\n","007caec2":"sns.set_theme(style=\"ticks\")\n\n\nsns.histplot(\n    dataset,\n    x=\"overall\", hue=\"race\/ethnicity\",\n    multiple=\"stack\",\n    palette=\"light:m_r\",\n    edgecolor=\".2\",\n    linewidth=.5,\n    #log_scale=True,\n)","bd9a756e":"###\n# Source for this code:\n# https:\/\/seaborn.pydata.org\/examples\/kde_ridgeplot.html\n###\n\nsns.set_theme(style=\"white\", rc={\"axes.facecolor\": (0, 0, 0, 0)})\n\n# Create the data\n\nx = dataset['overall']\ng = dataset['race\/ethnicity']\ndf = dataset\n\n# Initialize the FacetGrid object\npal = sns.cubehelix_palette(10, rot=-.25, light=.7)\ng = sns.FacetGrid(dataset, row=\"race\/ethnicity\", hue=\"race\/ethnicity\", aspect=15, height=.5, palette=pal)\n\n# Draw the densities in a few steps\ng.map(sns.kdeplot, \n      'overall',\n      bw_adjust=.5, clip_on=False,\n      fill=True, alpha=1, \n      linewidth=1.5)\n\n#g.map(sns.kdeplot, \"overall\", clip_on=False, color=\"w\", lw=2, bw_adjust=.5)\ng.map(plt.axhline, y=0, lw=2, clip_on=False)\n\n\n# Define and use a simple function to label the plot in axes coordinates\ndef label(x, color, label):\n    ax = plt.gca()\n    ax.text(0, .22, label, fontweight=\"bold\", color=color,\n            ha=\"left\", va=\"center\", transform=ax.transAxes)\n\n\ng.map(label, 'overall')\n\n# Set the subplots to overlap\ng.fig.subplots_adjust(hspace=-5)\n\n# Remove axes details that don't play well with overlap\ng.set_titles(\"\")\ng.set(yticks=[])\ng.despine(bottom=True, left=True)","6c2f0f60":"This chart shows the distribution of the Parental Level of Education.","a69b19d0":"<a id = \"13\"><\/a><br>\n# Visualization","0d9412cf":"<a id = \"6\"><\/a><br>\n# Basic Data Analysis\n\n## gender X\n* math score\n* reading score\n* writing score\n\n## race\/ethnicity X\n* math score\n* reading score\n* writing score\n\n## parental level of education\n* math score\n* reading score\n* writing score\n\n## lunch X\n* math score\n* reading score\n* writing score\n\n## test preparation course X\n* math score\n* reading score\n* writing score","f89b2045":"<a id = \"20\"><\/a><br>\n## Heatmap","a21cf050":"## I have been denied access to my account. That's why I'm sharing it again.","74df7319":"### Outline:\n\nrace\/ethnicity:\n\ngroup C    319\n\ngroup D    262\n\ngroup B    190\n\ngroup E    140\n\ngroup A     89\n\n**!!! When the scores are evaluated by race, the rankings do not change. 'group E' has the highest scores while 'group A' has the lowest scores. However, the number of samples should also be considered here. 'group A' has the least samples. 'group E' has the least sample after A. !!!**","323a94dd":"<a id = \"9\"><\/a><br>\n## parental level of education","fd95965c":"![Ekran%20G%C3%B6r%C3%BCnt%C3%BCs%C3%BC%20%28382%29.png](attachment:Ekran%20G%C3%B6r%C3%BCnt%C3%BCs%C3%BC%20%28382%29.png)","8647551d":"<a id = \"30\"><\/a><br>\n## Seaborn\n\nSeaborn is a statistical Python data visualization library based on the Matplotlib library. Seaborn offers users a high-level interface to make statistical visualizations.\n\n* A dataset-based API presented to examine the relationships between multiple variables in detail\n\n* Support for observing categorical variables and performing statistical operations on them\n\n* Supports multi-plot grids that enable to create complex visualizations\n\n* Univariate and bivariate visualizations for comparison between subsets\n\n* Wide color scale that makes visualization more understandable\n\n* Tools that adapt and visualize linear regression models for various types of independent and dependent variables\n\n* Functions that visualize matrices of data and use clustering algorithms to discover the structure in that matrix.\n\n* A function for displaying statistical time series data and uncertainties around the forecast with flexible prediction\n\n* High-level abstracti**ons for structuring charts that allow you to easily create complex visualizations","455cf4e3":"Content:\n1. [Exploratory Data Analysis - Explanation](#29)\n1. [Seaborn - Explanation](#30)\n1. [Importing the Necessary Libraries](#0)\n1. [Read Datas & Explanation of Features & Information About Datasets](#1)\n   * [Variable Description](#2)\n   * [Univariate Variable Analysis](#3)\n     * [Categorical Variables](#4)\n     * [Numerical Variables](#5)\n1. [Basic Data Analysis](#6)\n   * [gender](#7)\n   * [race\/ethnicity](#8)\n   * [parental level of education](#9)\n   * [lunch](#10)\n   * [test preparation score](#11)\n1. [Anomaly Detection](#12)\n1. [Visualization](#13)\n   * [Pie Plot](#14)\n   * [Violin Plot](#15)\n   * [Boxen Plot](#16)\n   * [Swarm Plot](#17)\n   * [Bar Plot](#18)\n   * [Joint Plot](#19)\n   * [Heatmap](#20)\n   * [Pair Plot](#21)\n   * [Box Plot](#22)\n   * [Scatter Plot](#23)\n     * [Scatter Plot with Marginal Ticks](#24)\n     * [Scatter Plot with Multiple Semantics](#25)\n   * [Stacked Histogram](#26)\n   * [Ridge Plot](#27)\n1. [Conclusion](#28)\n","2b9bf4ad":"Correlated features are seen in this Heat Map. We have already created the variable 'overall'. Increasing any value will increase 'overall' anyway. It can be deduced from the chart that there is a positive correlation between reading and writing.","9ad6f303":"A \"Histogram\" chart is used to show the distribution of data on an ongoing or specific time interval. Each bar \/ range in the histogram shows the value of the data in the pane. The sum of the values shown by all the bars is equal to the numerical value of the data used in the chart.\n\nHistograms help to predict where values are concentrated, their maximum and minimum points, breaks between data, and whether there are any unusual values. They are also useful in giving a general impression of the \"probability\" distribution.","aa2dfcb1":"In these plots, we got an image similar to Joint Plot. But differently, we can see the density through the lines formed parallel to the x and y axes.","6648a36e":"<a id = \"23\"><\/a><br>\n## Scatter Plot","a17e768c":"* gender \n* race\/ethnicity \n* parental level of education \n* lunch\n* test preparation score \n* math score \n* reading score \n* writing score ","1d75ad82":"<a id = \"16\"><\/a><br>\n## Boxen Plot","bfd5ca3b":"Box charts are an easy way to visually show the distribution of a quarter of the data.\n\nLines running parallel to the box are known as \"Whiskers\" and are used to indicate variation between data above or below a quarter. Extreme values are drawn with individual points in line with the lines sometimes called whiskers. Box-Whisker charts can be drawn horizontally or vertically.\n\nAlthough box plots look very primitive compared to Histograms and density lines, they have the advantage of taking up less space, which is useful when comparing many group or dataset distributions.","e82a5772":"<a id = \"25\"><\/a><br>\n### Scatter Plot with Multiple Semantics","9abfc6cb":"### Outline:\n\nparental level of education:\n\nsome college          226\n\nassociate's degree    222\n\nhigh school           196\n\nsome high school      179\n\nbachelor's degree     118\n\nmaster's degree        59\n\n**!!! When parental education levels are evaluated; It is seen that the average of students whose parents have completed a Master is the highest in all tests. The lowest averages are those whose parents have High school degree. However, here, too, it is necessary to consider the size of the sample set. While there are 59 samples in Master's Degree, there are 196 samples in the 'High School' set. !!!**","b8782627":"<a id = \"8\"><\/a><br>\n## race\/ethnicity","0e4294d5":"<a id = \"24\"><\/a><br>\n### Scatter Plot with Marginal Ticks","3c50c182":"Draw a plot of two variables with bivariate and univariate graphs.\n\nThis function provides a convenient interface to the JointGrid class, with several canned plot kinds. This is intended to be a fairly lightweight wrapper; if you need more flexibility, you should use JointGrid directly.\n\nSource: http:\/\/seaborn.pydata.org\/generated\/seaborn.jointplot.html","87e7e8c5":"This graphic shows the distribution of samples according to their gender.","01efd066":"### Outlines\n\n* In the 'math score', there is an accumulation in the range of 60-80.\n* There is no congestion in reading score like math. It can be said that the grade of the majority varies between 75-80.\n* The distribution in the 'writing score' feature is like in reading score.","b567fe29":"This graphic shows the distribution of samples according to their race\/ethnicity.","114bcf9c":"<a id = \"28\"><\/a><br>\n# Conclusion\n\nI tried to make an Exploratory Data Analysis on this dataset and explain my inferences. Also, I tried to explain some Seaborn graphics. Examples can be expanded. All quotations are cited.\n\n* If you have questions, please comment them. I will try to explain if you don't understand.\n* If you liked this notebook, please let me know :)\n\nThank you for your time.","e0ce64b7":"A Violin Plot is used to visualize the distribution and probability density of the data. The thick black bar in the middle represents the interquartile range; The vertically extended thin black line represents 95% confidence intervals and the white point is the media.","e3d559a0":"<a id = \"19\"><\/a><br>\n## Joint Plot","3f882ec6":"These histograms show the distribution of students according to the value specified in the 'hue' parameter. The x-axis shows the overall score.","fdd6a12b":"<a id = \"3\"><\/a><br>\n## Univariate Variable Analysis\n\n*** Categorical Variables:** 'gender', 'race\/ethnicity', 'parental level of education', 'lunch', 'test preparation course'\n\n*** Numerical Variables:** 'math score', 'reading score', 'writing score'.","3e2fb9cd":"<a id = \"18\"><\/a><br>\n## Bar Plot","96f23f32":"<a id = \"26\"><\/a><br>\n## Stacked Histogram ","81349519":"### Outline:\n\n**!!! Except for the math score, females have higher averages. !!!**","d4c7859f":"<a id = \"12\"><\/a><br>\n# Anomaly Detection\n\nAnomaly is one that differs \/ deviates significantly from other observations in the same sample. An anomaly detection pattern produces two different results. The first is a categorical tag for whether the observation is abnormal or not; the second is a score or trust value. Score carries more information than the label. Because it also tells us how abnormal the observation is. The tag just tells you if it's abnormal. While labeling is more common in supervised methods, the score is more common in unsupervised and semisupervised methods.","b2371b14":"**Why did I create an 'overall' column?**\n\nI got the average of reading, writing and math scores to see the students' success in all tests in a single variable. In the following graphs, I will compare 'overall' to other scores.","a1da7fbd":"### Outline:\n\ntest preparation course:\n\nnone         642\n\ncompleted    358\n\n**!!! It seems that those who complete the test preparation course are more successful than those who do not. !!!**","2503cf8a":"These plots show the change of the Score according to the 'lunch' feature. In general, the 'standard' ones appear to have higher scores.","a3da0840":"<a id = \"1\"><\/a><br>\n# Read Datas & Explanation of Features & Information About Datasets","dabb157e":"### Outlines\n\n* Female: 518, Male: 482; Gender distribution can be said to be balanced.\n* We see that Ethnicity is not balanced. 'group C' predominates.\n* We see that the education level of the parents is not evenly distributed. We see that the parents with a Master's degree are in the minority, and the ones with Some College are in the majority.\n* In the 'lunch' feature, it can be said that the 'standard' doubles the other.\n* We see that 642 students did not take test preparation courses, 358 of them did.","17339ec4":"<a id = \"5\"><\/a><br>\n### Numerical Variables","ce5fec3b":"As expected, there is a linear relationship between the overall - math score. It is observed that the largest concentration is between 60-80.","6213a39a":"We have no NaN variable. So we do not have to handle missing values.","adb23e24":"***How effective is the test preparation course?***","eea51ce3":"***Which major factors contribute to test outcomes?***","7d3aed05":"In these graphs, the distribution of Scores according to the 'test preparation course' feature can be seen. At the same time, the education level of the students' families is also seen. We got an image similar to the one we got on Violin Plot. However, with the 'hue' parameter used in swarmplot, we made the plot 3-dimensional.","f7df4aed":"The Classic Bar Plot is useful for distinguishing between categories and showing numerical comparisons using horizontal or vertical columns. One axis of the chart shows the categories being compared, and the other axis shows a scale of values.\n\nBar plots differ from Histograms in that they do not show continuous and continuous improvements over a period of time. The discrete data of the Bar Plot are categorical data and therefore \"How many?\" gives an answer to the question.\n\nMajor mistake made in Bar Plot makes definitions problematic as there are too many columns.","dad7bbd9":"The Scatter Chart uses a collection of points placed using Cartesian coordinates to display the values of two variables. By displaying one variable on each axis, it can be determined whether there is a relationship or correlation between two variables.\n\nVarious types of correlation can be interpreted through the models displayed on the scatter plot. These can be listed as: positive (values increase together), negative (one value decreases as another increases), null (uncorrelated), linear, exponential, and U. The strength of correlation can be determined by how tight the points fit together on the chart. Points that go beyond the general set of points are called outliers.","87e3d019":"With these graphs, we see the distribution of the scores of men and women.\n\n* For the Math Score: Bloating is in almost the same location, but female show a line to under 20. It ends around 20 in male.\n* For Reading Score: There is an accumulation of 70-80 in females. In males, the notes are more evenly spread.\n* For Writing Score: It can be seen that the average of females is significantly higher than that of males.","d2becc3f":"<a id = \"10\"><\/a><br>\n## lunch","3528004e":"### I will be glad if you can give feedback.","e74c6362":"Plot pairwise relationships in a dataset.\n\nBy default, this function will create a grid of Axes such that each numeric variable in data will by shared across the y-axes across a single row and the x-axes across a single column. The diagonal plots are treated differently: a univariate distribution plot is drawn to show the marginal distribution of the data in each column.\n\nIt is also possible to show a subset of variables or plot different variables on the rows and columns.\n\nSource: https:\/\/seaborn.pydata.org\/generated\/seaborn.pairplot.html","2e4210c0":"Another kind of Joint Plot. The points where the lines are concentrated show that there are more students in that grade range. Between 60-80.","ceb24b4f":"<a id = \"15\"><\/a><br>\n## Violin Plot","e71e07f0":"Heat maps visualize data with color changes. When applied to the table format, its variables are placed in rows and columns. Coloring the boxes in the table is useful for examining multivariate crosstab data. Heat maps are good for showing more than one variable, revealing any patterns or showing if any variables are alike, and detecting whether there is any correlation between them.","08245be7":"# Exploratory Data Analysis and Visualization with Seaborn","3bb6b9fd":"**As an answer to the above question;**\n\nWe see that the orange dots with 'test preparation course' = 'completed' are higher on the graphs.","cd83a676":"### If you have questions please ask them on the comment section.","ab3d5317":"<a id = \"21\"><\/a><br>\n## Pair Plot","797f869c":"These graphs are difficult to interpret as there are five options for 'race \/ ethnicity'. There is no clear distinction between points. I think using two and a maximum of three categories for the Pair Plot will make it easier to interpret.","9fc7cf86":"<a id = \"2\"><\/a><br>\n## Variable Description","c528501f":"<a id = \"27\"><\/a><br>\n## Ridge Plot ","54bd938a":"<a id = \"0\"><\/a><br>\n# Importing the Necessary Libraries","bafa85f1":"### Outline:\n\nlunch:\n\nstandard        645\n\nfree\/reduced    355\n\n**!!! The 'standard' ones in the 'lunch' feature appear to be more successful than the 'free\/reduced' ones. It seems that the biggest difference is in the 'math score'. !!!**","47a43e5d":"The Boxen plot is very similar to box plot, except for the fact that it plots different quartile values. By plotting different quartile values, we are able to understand the shape of the distribution particularly in the head end and tail end.\n\nSource for this explanation: https:\/\/madhuramiah.medium.com\/some-interesting-visualizations-with-seaborn-python-ad207f50b844#:~:text=The%20Boxen%20plot%20is%20very,head%20end%20and%20tail%20end.","3c0853a4":"<a id = \"7\"><\/a><br>\n## gender","9622761c":"<a id = \"29\"><\/a><br>\n## Exploratory Data Analysis\n\nIn statistics, exploratory data analysis is an approach to analyzing data sets to summarize their main characteristics, often using statistical graphics and other data visualization methods. A statistical model can be used or not, but primarily EDA is for seeing what the data can tell us beyond the formal modeling or hypothesis testing task. Exploratory data analysis was promoted by John Tukey to encourage statisticians to explore the data, and possibly formulate hypotheses that could lead to new data collection and experiments. EDA is different from initial data analysis (IDA), which focuses more narrowly on checking assumptions required for model fitting and hypothesis testing, and handling missing values and making transformations of variables as needed. EDA encompasses IDA.\n\nSource: https:\/\/en.wikipedia.org\/wiki\/Exploratory_data_analysis","a8daa972":"<a id = \"4\"><\/a><br>\n### Categorical Variables","6d6104ae":"<a id = \"11\"><\/a><br>\n## test preparation course","fd8c7571":"In this notebook, I performed an EDA on the 'Students Performance in Exams' dataset. I visualized the data using the Seaborn library. Descriptions of the Seaborn graphics are located under the headings. My comments on the graphics and results are below the code snippet.","357af11c":"***What do these graphs show us?***\n\nFirst of all, we see a 4-dimensional graph. The color of the dots indicates the 'parental level of education', while their size indicates the gender. When the x and y axes are counted, it becomes a 4 dimensional graph.","c8a49941":"In this graph, as in the others, a linear increase is observed between 'overall' and any Score value. The distribution of students seems balanced between 50-85.","651506d2":"Seaborn swarmplot is probably similar to stripplot, only the points are adjusted so it won\u2019t get overlap to each other as it helps to represent the better representation of the distribution of values. A swarm plot can be drawn on its own, but it is also a good complement to a box, preferable because the associated names will be used to annotate the axes. This type of plot sometimes known as \u201cbeeswarm\u201d.\n\nSoruce for this text: https:\/\/www.geeksforgeeks.org\/swarmplot-using-seaborn-in-python\/","1eace481":"***What conclusion can be drawn from this graph?***\n\nAs we have reached in previous plots and reviews, students with 'lunch' = 'standard' generally do better than others.","4fac1b78":"<a id = \"22\"><\/a><br>\n## Box Plot","8b43d2ff":"<a id = \"17\"><\/a><br>\n## Swarm Plot","ca85615a":"<a id = \"14\"><\/a><br>\n## Pie Plot\n\nPie Charts help show proportions and percentages across categories by dividing a circle into proportional parts. Each arc length represents a proportion of each category, while the full circle represents the sum of all data equal to 100%. Pie charts are ideal for giving the reader a quick idea of the proportional distribution of the data.","3809df4d":"**As an answer to the above question;**\n\n*** For females:** 'test preparation course' = 'completed' and 'parental level of education' = 'master's degree' and 'lunch' = 'standard' and 'race \/ ethnicity' = 'group E' values can be shown as factors that increase success.\n\n*** For males:** 'test preparation course' = 'completed' and 'parental level of education' = 'master's degree' and 'lunch' = 'standard' and 'race \/ ethnicity' = 'group E' values can be shown as factors that increase success.\n\nSince all values are equal for males and females, they can be cited as factors that increase the success of any student.","a9e3f386":"If we were to work on a Machine Learning model, we would have to drop outliers. However, this notebook was written for visualization and EDA. Therefore, I will continue with outliers.","16562b63":"![Data_visualization_process_v1.png](attachment:Data_visualization_process_v1.png)"}}