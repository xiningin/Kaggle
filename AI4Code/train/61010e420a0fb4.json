{"cell_type":{"8e9f6fc7":"code","a8352a0c":"code","e0aac030":"code","18db99a8":"code","53dff29a":"code","72a670ba":"code","b566ee98":"code","3130674e":"code","88000d81":"code","79390833":"code","7b21206a":"markdown","e55a634c":"markdown","a7aec3c9":"markdown","320cf6da":"markdown","77c9afca":"markdown","aebbc1f5":"markdown","e4b423dc":"markdown","82508f1f":"markdown","79bd0004":"markdown","307516e9":"markdown","38f031e0":"markdown","1778efd3":"markdown","ccd399c3":"markdown","aaee92ad":"markdown","b21d1a62":"markdown"},"source":{"8e9f6fc7":"# imports \n\nimport pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport random\nimport sys\nimport warnings\nif not sys.warnoptions:\n    warnings.simplefilter(\"ignore\")","a8352a0c":"# data read\n\ndata_path = '..\/input\/ads-ctr-optimisation\/Ads_CTR_Optimisation.csv'\n\ndf = pd.read_csv(data_path)\ndf.head()","e0aac030":"df.shape","18db99a8":"#Thompson Sampling\n\nN = 10000 # 10.000 users\na = 10  # there are 10 ads type in total\n# Ni\u2070(n) -> the number of times '1' arrives so far\n# Ni\u00b9(n) -> the number of times '1' arrives so far\ntotal_reward = 0 # sum of rewards\nchosen_ads = []  # an empty list created for choosed ads\nones = [0] * a   # '1' as a reward from each ad\nzeros = [0] * a  # '0' as a reward from each ad\n\nfor n in range(1,N): # Outer loop that allows us to navigate rows\n    chosen_ad = 0 \n    max_beta = 0\n    for i in range(0,a): # Inner loop that allows us to navigate columns\n        random_beta = random.betavariate (ones[i] +1 , zeros[i] +1) # Creating random beta by giving \u03b1(alpha) and \u03b2 values\n        if random_beta > max_beta:\n            max_beta = random_beta # Max_beta is constantly updated, if a value greater than itself, it changes.\n            chosen_ad = i  # We add which ad we clicked for each line to the selected ads\n    chosen_ads.append(chosen_ad) # We add whichever ad we choose in each row to the selected ads list\n    reward = df.values[n,chosen_ad] # If n. chosed ad data in row=1, reward=1. otherwise 0\n    if reward == 1:\n        ones[chosen_ad] = ones[chosen_ad]+1 # When the reward is 1, increase the reward of the corresponding ad by 1.\n    else :\n        zeros[chosen_ad] = zeros[chosen_ad] + 1 # When the reward is 1, increase the value of the corresponding ad in the ones list by 1.\n    total_reward = total_reward + reward  # Add the reward resulting from the operation performed on each row of the dataset to the total reward.\n    \nprint('\\033[1m' + f'Total Reward: {total_reward}')  ","53dff29a":"# True Clicks of Ads\n\ntrue_clicks = []\nfor i in range(0,10):\n    true_clicks.append(sum(df.iloc[:,i:i+1].values))\n    \ntrue_clicks = [int(item) for item in true_clicks]\n    \ntrue_clicks_array = np.array(true_clicks)\ntrue_clicks_array = true_clicks_array.reshape(1,10)\n\ntrue_clicks_df = pd.DataFrame(data=true_clicks_array, columns=df.columns, index=['Total True Clicks'])\ntrue_clicks_df","72a670ba":"max_ad_click = true_clicks_df.values.max()\nmax_ad_click_name = true_clicks_df.idxmax(axis=1)[0]\n\nsum_of_clicks=0\nfor i in range(1,10):\n    sum_of_clicks = sum_of_clicks + true_clicks_df.values[0][i]\n    \nratio = max_ad_click\/sum_of_clicks\n\nprint(f'Sum of clicks                   : {sum_of_clicks}')\nprint(f'The name of the most clicked ad : {max_ad_click_name}')\nprint(f'The ratio of {max_ad_click_name} to all clicks : {ratio:.2f}\\n')","b566ee98":"# Let's show the number of clicks with a graph.\n\nplt.figure(figsize = (12,8), facecolor='#9DF08E')\nplt.bar(x=df.columns, height=true_clicks, color=sns.color_palette('bright'))\nplt.title('True Clicks on Ads\\n', fontsize=30, color='red')\nplt.xlabel('\\nAds', fontsize=20, color='black')\nplt.ylabel('Clicks\\n', fontsize=20, color='black')\nplt.xticks(horizontalalignment='center', fontsize='15', color='black')\nplt.yticks(fontsize='15', color='black')\nplt.tight_layout()\nplt.show()","3130674e":"# Chosens of Thompson Sampling\n\nnumber_of_chosens = []\nfor i in range(0,10):\n    number_of_chosens.append(chosen_ads.count(i))\n    \nnumber_of_chosens_arr = np.array(number_of_chosens)\nnumber_of_chosens_arr = number_of_chosens_arr.reshape(1,10)\n\nnumber_of_chosens_df = pd.DataFrame(data=number_of_chosens_arr, columns=df.columns, index=['Number of Chosens'])\nnumber_of_chosens_df","88000d81":"plt.figure(figsize = (12,8),facecolor='#9DF08E')\nplt.bar(x=df.columns, height=number_of_chosens, color=sns.color_palette('bright'))\nplt.title('Number of Choices\\n', fontsize=30, color='red')\nplt.xlabel('\\nAds', fontsize=20, color='black')\nplt.ylabel('Clicks\\n', fontsize=20, color='black')\nplt.xticks(horizontalalignment='center', fontsize='15', color='black')\nplt.yticks(np.arange(0,10001,2000),fontsize='15', color='black')\nplt.tight_layout()\nplt.show()","79390833":"# Let's remember the total reward again\nprint('\\033[1m' + f'Total Reward: {total_reward}')  ","7b21206a":"**There are many one armed bandits in front of you, as in the image below. And each machine has a different monetization rate, and you don't know it. Before starting the game, you were given an exploration time.**\n\n**What would you do?**","e55a634c":" <h1 style=\"background-color:#10DEFF\n;font-family:Comic Sans MS;font-size:250%;text-align:center;border-radius: 15px 50px;\"> Thank you for reading\ud83d\ude03 If you found it helpful, please upvote\ud83d\udc4d and write down positive or negative opinions\ud83d\udcac<\/h1><a id=note><\/a>","a7aec3c9":"**If we used random selection or UCB algorithms, it is very likely that the score would be around a thousand, so we got a good score with Thompson Sampling \u2714**","320cf6da":"**What is Sampling?**\n\nFor instance, 1 million shoes are produced daily in a factory, but we only select 100 of them to examine them, the process we do here is called Sampling.\n\n**What is Thompson Sampling?**\n\nIt was originally described by Thompson in 1933, and has been improved many times over the years. Thompson sampling,named after William R. Thompson, is a heuristic for choosing actions that addresses the exploration-exploitation dilemma in the multi-armed bandit problem. It consists of choosing the action that maximizes the expected reward with respect to a randomly drawn belief.\n\n\n**When is it used?**\n\nFor example you will publish ads on the internet about an airline company, you want to update your ad according to which ad is clicked more.\nIn this case you can use Thompson Sampling.\nFor example, we produce shoes in a factory, we can use this method when we find out how much of it is defective. Let's try to understand the concept of sampling better, \n\n**Relationship Between Thompson Sampling & Bayesian Inference**\n\nThompson sampling is a Bayesian inference, so what is Bayesian inference?\n> \u201cBriefly, Bayesian inference is a method of statistical inference in which Bayes' theorem is used to update the probability for a hypothesis as more evidence or information becomes available. Bayesian updating is particularly important in the \u2018dynamic\u2019 analysis of a sequence of data.\u201c\n\nOur keyword here is 'dynamic'. While working on this data, Thompson Sampling algorithm will update some values after analyzing each data row. Since it will be an analysis with continuous updating, Thompson Sampling is dynamic, which is why the Bayesian approach is applied in Thompson Sampling.\n\n**Why Beta Distribution for Thompson Sampling?**\n\n> As more data is collected the <a href=\"https:\/\/en.wikipedia.org\/wiki\/Beta_distribution\"> Beta distribution <\/a> moves from being a flat line to become an increasingly accurate model of the probability of the mean reward. By maintaining the values of '\u03b1' and '\u03b2' a Thompson sampling algorithm is able to describe the estimated mean reward and the level of confidence in this estimate.<\/p>\n\nWhen we give the values \u200b\u200bof \u03b1 and \u03b2 to the random.beta variate( ) function, for example, let's give these parameters to the function as \u03b1=2 and \u03b2=5. For our use in the Thompson Sampling algorithm, we will generate random points by random.betavariate( ) in the beta distribution where alpha is 2 beta 5 (i.e. the orange curve in the image below), and we will use these randomly generated points in the algorithm.\n\n\n![ts_beta distrubition graph.PNG](attachment:1eafddc1-dc09-463a-ad42-ef86c4a7e631.PNG)\n\n\n**Thompson Sampling Algorithm**\n\n***Step 1***:\n\nCalculate the following two numbers for each action.\n\n* Ni\u2070(n) : the number of times a '1' is received as a reward so far (\u03b1 value)\n \n* Ni\u00b9(n) : the number of times a '0' is received as a reward so far (\u03b2 value)\n                                                                           \n                                   \n***Step 2:***<p>Generate a random number for each ad in the<a href=\"https:\/\/en.wikipedia.org\/wiki\/Beta_distribution\"> beta distribution <\/a>given below. <\/p>\n\n\" \u03b8i(n) = \u03b2(Ni\u00b9(n) +1 , Ni\u2070(n) +1) \"  \n\n***Step 3:***\n\nChoose the ad with the highest beta value.\n\n\n\n**References:**\n\n* https:\/\/en.wikipedia.org\/wiki\/Bayesian_inference\n* https:\/\/en.wikipedia.org\/wiki\/Thompson_sampling\n* https:\/\/towardsdatascience.com\/thompson-sampling-using-conjugate-priors-e0a18348ea2d\n* https:\/\/www.udemy.com\/course\/makine-ogrenmesi\/\n\n***Written by Soner Kar                                                                                                                               \n04\/07\/2021***                                                                                            ","77c9afca":"<a id=\"1\"><\/a>\n<h1 style=\"background-color:yellow;font-family:newtimeroman;font-size:275%;text-align:center;border-radius: 15px 50px;\">CODING ON ADS DATA SET<\/h1>","aebbc1f5":"<a id=\"0\"><\/a>\n<h1 style=\"background-color:yellow;font-family:newtimeroman;font-size:275%;text-align:center;border-radius: 15px 50px;\">THOMPSON SAMPLING DESCRIPTION<\/h1>","e4b423dc":"**In such situations, Thompson Sampling comes to our rescue!**\n\n**But what is Thompson Sampling? Let's see together.**","82508f1f":"**Imagine yourself as an octopus in a casino. Like this:**\n\n![ts_figure1_resized.jpg](attachment:6a850b9a-6423-40a4-b897-93645e850e42.jpg)","79bd0004":"![ts_figure4.jpg](attachment:4060e507-612c-4eef-9c33-05825d4ad28c.jpg)","307516e9":"**As expected, Thompson Sampling focused on 'Ad 5'.**","38f031e0":"<a id=\"table\"><\/a>\n<h1 style=\"background-color:#35F237;font-family:newtimeroman;font-size:350%;text-align:center;border-radius: 15px 50px;\"> \ud83d\udcc8 THOMPSON SAMPLING  \ud83d\udcc8<\/h1>","1778efd3":"**There are 10.000 users and 10 ads type.**","ccd399c3":"**25% is quite high. This value is good for the Thompson Sampling algorithm to make choices.**","aaee92ad":"![Webp.net-compress-image.jpg](attachment:206b1e63-e299-44f0-8a4b-7fe4c797791c.jpg)","b21d1a62":"**This graph is drawn from the data in this dataset. It can be seen that users clicked on the 'Ad 5' advertisement the most. So the Thompson Sampling Algorithm should also give priority to the Ad 5 ad. Let's see what happens.**"}}