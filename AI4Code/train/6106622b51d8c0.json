{"cell_type":{"ec22ddfa":"code","7b0dbcb2":"code","35a62eb6":"code","4c0a2e47":"code","79c6313a":"code","09ed69d6":"code","88655fe2":"code","d10066d7":"code","71cb2f67":"code","bbf3c64f":"code","d2591a53":"code","7cae3c2e":"code","5cedeefb":"code","cc33e024":"code","a8831bfe":"code","fb52758c":"code","718ac138":"code","fa772f63":"code","8f08415b":"code","ce8c6c2d":"code","00b3a802":"code","d252e7c3":"code","b76adf17":"code","74839c6d":"code","c4236c49":"code","272bab85":"code","5e7c66f7":"code","2af100d3":"code","48a3d5c2":"code","19d41bd6":"code","911c2d9e":"code","c20c1381":"code","315b9a06":"code","e958f6fb":"code","886545ee":"code","835e5e67":"code","977f8a91":"code","457800b9":"code","f2a666de":"code","b5685d27":"code","7d32703a":"code","be84e96c":"code","90cf6de6":"code","28d3d32d":"code","a05055f3":"code","e49488d8":"code","c93001f3":"code","2d78ee5c":"code","a42a5336":"code","a78919e1":"code","54013251":"code","5d4805db":"code","ce807660":"code","94d51310":"code","d64c0596":"code","0de10c39":"markdown","17701340":"markdown","9af2be7e":"markdown","5a125d3e":"markdown","4beec681":"markdown","a9e30df4":"markdown","e6fcb19a":"markdown","89fa1d4e":"markdown","506d34c8":"markdown","dd7c7703":"markdown","087769b2":"markdown","fef30821":"markdown","320d4ee5":"markdown","ee03ad84":"markdown","77324961":"markdown"},"source":{"ec22ddfa":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","7b0dbcb2":"nome = 'Mario'\ncognome = 'Rossi'","35a62eb6":"def parametri(nome, cognome):\n    seed_alpha = 0\n    seed_emiss = 0\n    for c in nome:\n        seed_alpha += ord(c)\n    for c in cognome:\n        seed_emiss += ord(c)\n\n    alpha = round(0.2 + ((seed_alpha%20)\/100), 2)\n    emiss = round(0.7 + ((seed_emiss%20)\/100), 2)\n    \n    return alpha, emiss","4c0a2e47":"alpha, emiss = parametri(nome, cognome)\nprint('Albedo: ' + str(alpha))\nprint('Emissivit\u00e0: ' + str(emiss))","79c6313a":"So = 1367\nSave = So\/4\nsigma = 5.67e-8\nTp = 0 # definizione della variabile","09ed69d6":"# Tp = ","88655fe2":"print('Temperatura del pianeta: ' + str(Tp- 273.15) + '\u00b0C')","d10066d7":"emiss = np.linspace(0,1,101)","71cb2f67":"# Tp\n# Tp_C","bbf3c64f":"Tp","d2591a53":"plt.figure(figsize=(16,8));\nplt.plot(100*emiss, Tp_C);\n\nplt.xlabel('emissivita [%]');\nplt.ylabel('Tp [\u00b0C]');\n\nplt.xticks(np.arange(0, 101, 5));\nplt.yticks(np.arange(-20, 35, 5));\n\nplt.grid();","7cae3c2e":"temperatures = pd.read_csv('..\/input\/climate-change-earth-surface-temperature-data\/GlobalLandTemperaturesByCity.csv')","5cedeefb":"temperatures['dt'] = pd.to_datetime(temperatures['dt'])","cc33e024":"def country_city(nome, cognome, df):\n    seed = 0\n    for c in (nome+cognome):\n        seed += ord(c)\n\n    countries = ['Spain', 'Germany', 'France', 'Italy', 'Netherlands', 'United Kingdom']\n    country = countries[int(seed%len(countries))]\n    cities = df.loc[df.Country==country].City.unique()\n    city = cities[int(seed%len(cities))]\n    \n    return country, city","a8831bfe":"country, city = country_city(nome, cognome, temperatures)","fb52758c":"print(city + ', ' + country)","718ac138":"temperatures.shape","fa772f63":"data = temperatures.loc[temperatures.City == city]","8f08415b":"data.shape","ce8c6c2d":"data.head()","00b3a802":"data = data.set_index('dt')","d252e7c3":"temp = data.AverageTemperature","b76adf17":"temp","74839c6d":"plt.figure(figsize=(16,8));\nplt.plot(temp);\nplt.grid();\nplt.title('Temperatura media mensile di ' + city + ', ' + country);\nplt.xlabel('data [anni]');\nplt.ylabel('temperatura [\u00b0C]');\n#plt.savefig('temp.png', dpi=300);","c4236c49":"climate = temp.rolling(30*12).mean()","272bab85":"plt.figure(figsize=(16,8))\n#plt.plot(cagliari_temp, label='media mensile');\nplt.plot(climate, label='climate');\nplt.grid();\nplt.title('Temperatura media mensile di ' + city);\nplt.xlabel('data [anni]');\nplt.ylabel('temperatura [\u00b0C]');\nplt.legend();","5e7c66f7":"year = 2012\nyear_30 = year - 30","2af100d3":"temp_year = temp.loc[temp.index.year == year].values\ntemp_year_30 = temp.loc[temp.index.year == year_30].values","48a3d5c2":"print(temp_year)\nprint(temp_year_30)","19d41bd6":"plt.figure(figsize=(16,8))\nplt.plot(temp_year, label=year);\nplt.plot(temp_year_30, label=year_30);\nplt.grid();\nplt.title('Temperatura mensile di ' + city + ', ' + country);\nplt.xlabel('data [anni]');\nplt.ylabel('temperatura [\u00b0C]');\nplt.xticks(np.arange(12), ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])\nplt.legend();","911c2d9e":"#temp.groupby(temp.index.month).rolling(30).mean().head()","c20c1381":"climate_month = []\nfor i in range(1,13):\n    climate_month.append(temp.loc[temp.index.month == i].rolling(30).mean())","315b9a06":"len(climate_month)","e958f6fb":"climate_month[11]","886545ee":"climate_year = np.zeros(12)\nclimate_year_30 = np.zeros(12)","835e5e67":"for i in range(12):\n    climate_year[i] = climate_month[i].loc[climate_month[i].index.year == year].values\n    climate_year_30[i] = climate_month[i].loc[climate_month[i].index.year == year_30].values","977f8a91":"climate_year_30","457800b9":"plt.figure(figsize=(16,8))\nplt.plot(climate_year, label=year);\nplt.plot(climate_year_30, label=year_30);\nplt.grid();\nplt.title('Clima mensile di ' + city + ', ' + country);\nplt.xlabel('mese');\nplt.ylabel('temperatura [\u00b0C]');\nplt.xticks(np.arange(12), ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])\nplt.legend();","f2a666de":"print(city, country, (climate_year - climate_year_30).mean(), (climate_year - climate_year_30).max())","b5685d27":"import numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.basemap import Basemap","7d32703a":"PrimaryBiomes_names=['Humid',\n                     'Intermediate',\n                     'Semi-arid',\n                     'Desert']","be84e96c":"def correzione_clima(nome, cognome):\n    seed = 0\n    for c in (nome+cognome):\n        seed += ord(c)\n    gamma = 0.95 + ((seed%10)\/100)\n    \n    return gamma","90cf6de6":"gamma = correzione_clima(nome, cognome)\nprint('Coefficiente di correzione del clima al 2100: ' + str(gamma))","28d3d32d":"lat = np.load('..\/input\/clima-globale\/lat.npy')\nlon = np.load('..\/input\/clima-globale\/lon.npy')\nlsmask = np.load('..\/input\/clima-globale\/lsmask.npy')\nTclima2020 = np.load('..\/input\/clima-globale\/Tclima2020.npy')\nPclima2020 = np.load('..\/input\/clima-globale\/Pclima2020.npy')\nTclima2100 = np.load('..\/input\/clima-globale\/Tclima2100.npy')\nPclima2100 = np.load('..\/input\/clima-globale\/Pclima2100.npy')\nTclima2100 *= gamma\nPclima2100 *= gamma","a05055f3":"#Tclima = Tclima2020\n#Pclima = Pclima2020\nTclima = Tclima2100\nPclima = Pclima2100","e49488d8":"nlat = len(lat)\nnlon = len(lon)\nnlat_2 = int(nlat \/ 2)\n\n# calcola dal clima i campi che servono per individure i biomi\nP_annual = np.zeros([nlat,nlon])\nT_annual = np.zeros([nlat,nlon])\nT_summer = np.zeros([nlat,nlon])\n\nP_annual = np.sum(Pclima, axis=0)\nT_annual = np.mean(Tclima, axis=0)","c93001f3":"# calcola i biomi primari\nPrimaryBiomes = np.zeros([nlat,nlon])\nprint(PrimaryBiomes.shape)","2d78ee5c":"PrimaryBiomes[P_annual>=1.5] = 1\nPrimaryBiomes[(P_annual>=0.62)&(P_annual<1.5)] = 2\nPrimaryBiomes[(P_annual>=0.25)&(P_annual<0.62)] = 3\nPrimaryBiomes[P_annual<0.25] = 4","a42a5336":"plt.figure(figsize=(16, 8))\nm = Basemap(projection='cyl', resolution='c')\n#m = Basemap(projection='ortho', resolution='l', lat_0=39, lon_0=9)\n\n\nxx, yy = np.meshgrid(lon, lat);\n\nm.contourf(xx, yy, PrimaryBiomes, cmap=plt.cm.get_cmap('rainbow', 4), latlon=True);\n#plt.colorbar(np.arange(1,5), PrimaryBiomes_names);\ncbar = plt.colorbar();\ncbar.set_ticks(list())\n\nfor index, label in enumerate(PrimaryBiomes_names):\n    x = 1.5\n    y = (2 * index + 1) \/ 8\n    cbar.ax.text(x, y, label)\n\nm.drawlsmask(resolution='c', land_color='none', ocean_color='w', zorder=25);\nm.drawcoastlines(zorder=26);","a78919e1":"Area = np.zeros([nlat,nlon])\ndx = 360.\/nlon*60*1.852\nfor i in range(nlat):\n    a = np.cos(lat[i]*np.pi\/180.)*dx**2\n    Area[i,:] = a","54013251":"Area_land = Area*lsmask","5d4805db":"areas = np.zeros(4)\nfor i in range(4):\n    mask=(PrimaryBiomes==(i+1))\n    a=np.sum(Area_land[mask])\n    print(PrimaryBiomes_names[i]+' area km^2:',np.int(a))\n    areas[i] = np.int(a)","ce807660":"#areas_2020 = areas\nareas_2100 = areas","94d51310":"areas_delta = areas_2100 - areas_2020","d64c0596":"for i in range(4):\n    a = areas_delta[i]\n    print(PrimaryBiomes_names[i]+' area km^2:',np.int(a))","0de10c39":"## Inserire nome e cognome","17701340":"# Esercizio 3\n\n- Mappa della distribuzione dei biomi primari al 2020\n- Mappa della distribuzione dei biomi primari al 2100\n- Calcolo della variazione della superficie occupata dai biomi primari per lo scenario al 2100 rispetto al 2020","9af2be7e":"## Clima\n\nDefiniamo il clima: la media sui 30 anni","5a125d3e":"# Distillato di tecniche\n\nQuesto notebook \u00e8 una versione asciugata dei notebook gi\u00e0 visti nel corso. \nTornate alle versioni estese se qualche passaggio risulta poco chiaro.","4beec681":"# Esercizio 1\n\n- Calcolo della temperatura di equilibrio radiativo note emissivit\u00e0 ed albedo\n- Grafico della temperatura di equilibrio facendo variare l'emissivit\u00e0 tra 0 e 1","a9e30df4":"Modifichiamo l'indice per avere una serie di misure in funzione del tempo","e6fcb19a":"## Confronto tra le temperature mensili\n\nA distanza di 30 anni","89fa1d4e":"## Importazione delle librerie\n\nCome primo passo importiamo le librerie che abbiamo utilizzato","506d34c8":"# Esercizio 2 \n\n- Grafico del clima per una citt\u00e0\n- Grafico della variazione del clima mensile a distanza di 30 anni per una citt\u00e0","dd7c7703":"## Citt\u00e0 e stati\n\nSelezioniamo uno stato ed una citt\u00e0 per l'analisi","087769b2":"## Dati\n\nimportiamo il dataset GlobalLandTemperaturesByCity.csv e conserviamolo in una variabile","fef30821":"Converti la colonna dt in formato **datetime**","320d4ee5":"# Esercizio 4 (extra)\n\n- Mappa della distribuzione dei biomi secondari al 2020\n- Mappa della distribuzione dei biomi secondari al 2100\n- Calcolo della variazione della superficie occupata dai biomi secondari per lo scenario al 2100 rispetto al 2020","ee03ad84":"Variazione delle superfici occupate dai biomi","77324961":"**Calcolare superfici al 2020, e al 2100 e sottrarre (previsione al 2100 - stato al 2020) per ottenere la variazione**"}}