{"cell_type":{"cd40ab54":"code","1730fce0":"code","4db3c091":"code","63b22b91":"code","7d614d2b":"code","2e0bf822":"code","81d81454":"code","5cec19f2":"code","7ffbda14":"code","f7a39f92":"code","bed61133":"code","024c047d":"code","3c9697f5":"code","d427ba1f":"code","d49ea262":"code","a28493da":"code","c48df7f6":"code","91094642":"code","a00f1b60":"code","870f223e":"code","96a05cda":"code","f315d8aa":"code","6dd033ba":"code","af69e9d4":"code","23b3b11c":"code","4cc0fea7":"code","a3afa4b5":"code","85185bd7":"code","ec73ef76":"code","3f9505dd":"code","63db0778":"code","c3629545":"code","8d5f4ea3":"code","965af7f5":"code","faa69165":"code","5844c957":"code","3be2a44a":"code","b3ce62e1":"code","6864ee2c":"code","492ec668":"code","08d06802":"markdown","2d61cd34":"markdown","76a7bc6a":"markdown","0a8d4cdf":"markdown","c118129f":"markdown","93693129":"markdown","5aedf630":"markdown","654f87dd":"markdown","c4298f8c":"markdown","c6a54822":"markdown","a424b11e":"markdown","8aeefb47":"markdown"},"source":{"cd40ab54":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom datetime import datetime\nimport lightgbm as lgb\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\nsns.set_style('darkgrid')\n%matplotlib inline\n\n# Any results you write to the current directory are saved as output.","1730fce0":"train_df = pd.read_csv(\"..\/input\/train.csv\")\ntest_df = pd.read_csv(\"..\/input\/test.csv\")","4db3c091":"train_df.head()","63b22b91":"train_df.describe()","7d614d2b":"train_df.nunique()","2e0bf822":"%%time\ntrain_df[\"date\"] = pd.to_datetime(train_df.date)\ntrain_df[\"year\"] = train_df['date'].dt.year\ntrain_df[\"month\"] = train_df['date'].dt.month\ntrain_df[\"day\"] = train_df['date'].dt.day\ntrain_df[\"dayofweek\"] = train_df[\"date\"].dt.dayofweek\n#0 : Monday, 6: Sunday in dayofweek","81d81454":"%%time\ntest_df[\"date\"] = pd.to_datetime(test_df.date)\ntest_df[\"year\"] = test_df['date'].dt.year\ntest_df[\"month\"] = test_df['date'].dt.month\ntest_df[\"day\"] = test_df['date'].dt.day\ntest_df[\"dayofweek\"] = test_df[\"date\"].dt.dayofweek\n#0 : Monday, 6: Sunday in dayofweek","5cec19f2":"tmp_df = train_df.groupby([\"year\",\"month\",\"store\",\"item\"]).sum().reset_index()[[\"year\",\"month\",\"store\",\"item\",\"sales\"]]\n\nplt.figure(figsize=(20,12))\nsns.pointplot(data=tmp_df[(tmp_df.year == 2013) & (tmp_df.store == 1)], x=\"item\", y=\"sales\", hue=\"month\")","7ffbda14":"item_list = train_df.item.unique().tolist()\nsplit_item_list = [item_list[x:x+10] for x in range(0,len(item_list),10)]\nsplit_item_list","f7a39f92":"tmp_df = train_df[train_df.item.isin(split_item_list[2])].groupby([\"year\",\"month\",\"store\",\"item\"]).sum().reset_index()[[\"year\",\"month\",\"store\",\"item\",\"sales\"]]\nplt.figure(figsize=(16,6))\nsns.pointplot(data=tmp_df[(tmp_df.year == 2013) & (tmp_df.store == 1)], x=\"item\", y=\"sales\", hue=\"month\")","bed61133":"train_df[\"season\"] = train_df.month.map({1:\"Winter\", 2:\"Winter\", 3:\"Spring\", 4:\"Spring\",5:\"Spring\",6:\"Summer\",\n                                          7:\"Summer\", 8:\"Summer\", 9:\"Fall\", 10:\"Fall\", 11:\"Fall\", 12:\"Winter\"})\ntest_df[\"season\"] = test_df.month.map({1:\"Winter\", 2:\"Winter\", 3:\"Spring\", 4:\"Spring\",5:\"Spring\",6:\"Summer\",\n                                          7:\"Summer\", 8:\"Summer\", 9:\"Fall\", 10:\"Fall\", 11:\"Fall\", 12:\"Winter\"})","024c047d":"tmp_df = train_df[train_df.item.isin(split_item_list[0])].groupby([\"year\",\"season\",\"store\",\"item\"]).sum().reset_index()[[\"year\",\"season\",\"store\",\"item\",\"sales\"]]\nplt.figure(figsize=(12,6))\nsns.pointplot(data=tmp_df[(tmp_df.year == 2013) & (tmp_df.store == 1)], x=\"item\", y=\"sales\", hue=\"season\")","3c9697f5":"tmp_df = train_df[train_df.item.isin(split_item_list[1])].groupby([\"year\",\"season\",\"store\",\"item\"]).sum().reset_index()[[\"year\",\"season\",\"store\",\"item\",\"sales\"]]\nplt.figure(figsize=(12,6))\nsns.pointplot(data=tmp_df[(tmp_df.year == 2013) & (tmp_df.store == 1)], x=\"item\", y=\"sales\", hue=\"season\")","d427ba1f":"tmp_df = train_df[train_df.item.isin(split_item_list[2])].groupby([\"year\",\"season\",\"store\",\"item\"]).sum().reset_index()[[\"year\",\"season\",\"store\",\"item\",\"sales\"]]\nplt.figure(figsize=(12,6))\nsns.pointplot(data=tmp_df[(tmp_df.year == 2013) & (tmp_df.store == 1)], x=\"item\", y=\"sales\", hue=\"season\")","d49ea262":"tmp_df = train_df[train_df.item.isin(split_item_list[3])].groupby([\"year\",\"season\",\"store\",\"item\"]).sum().reset_index()[[\"year\",\"season\",\"store\",\"item\",\"sales\"]]\nplt.figure(figsize=(12,6))\nsns.pointplot(data=tmp_df[(tmp_df.year == 2013) & (tmp_df.store == 1)], x=\"item\", y=\"sales\", hue=\"season\")","a28493da":"tmp_df = train_df[train_df.item.isin(split_item_list[4])].groupby([\"year\",\"season\",\"store\",\"item\"]).sum().reset_index()[[\"year\",\"season\",\"store\",\"item\",\"sales\"]]\nplt.figure(figsize=(12,6))\nsns.pointplot(data=tmp_df[(tmp_df.year == 2013) & (tmp_df.store == 1)], x=\"item\", y=\"sales\", hue=\"season\")","c48df7f6":"sns.boxplot(data =train_df, x=\"dayofweek\", y='sales')","91094642":"\"\"\"train_df[\"is_weekend\"] = train_df.dayofweek.map({0:0, 1:0, 2:0, 3:0, 4:0, 5:1, 6:1})\ntest_df[\"is_weekend\"] = test_df.dayofweek.map({0:0, 1:0, 2:0, 3:0, 4:0, 5:1, 6:1})\"\"\"","a00f1b60":"train_df.head()","870f223e":"sales_by_year = train_df[[\"year\",\"item\",\"sales\"]].groupby([\"year\",\"item\"]).sum().reset_index().pivot(\"item\",\"year\",\"sales\").reset_index()\nsales_by_year","96a05cda":"abs((np.array(sales_by_year[2013])-np.array(sales_by_year[2017]))\/np.array(sales_by_year[2013]))\/4 * 100","f315d8aa":"increase_13_to_14 = abs((np.array(sales_by_year[2013])-np.array(sales_by_year[2014]))\/np.array(sales_by_year[2013])).mean()\nincrease_14_to_15 = abs((np.array(sales_by_year[2014])-np.array(sales_by_year[2015]))\/np.array(sales_by_year[2014])).mean()\nincrease_15_to_16 = abs((np.array(sales_by_year[2015])-np.array(sales_by_year[2016]))\/np.array(sales_by_year[2015])).mean()\nincrease_16_to_17 = abs((np.array(sales_by_year[2016])-np.array(sales_by_year[2017]))\/np.array(sales_by_year[2016])).mean()","6dd033ba":"print(\"13_to_14 : {}, 14_to_15 : {}\\n15_to_16 : {}, 16_to_17 : {}\".format(increase_13_to_14, increase_14_to_15, increase_15_to_16, increase_16_to_17))","af69e9d4":"train_df['increase'] = train_df.year.map({2013:1, 2014:1+increase_13_to_14, 2015:1+increase_14_to_15, 2016:1+increase_15_to_16, 2017:1+increase_16_to_17})\ntest_df['increase'] = 0.05","23b3b11c":"sales_by_StoreAndItem = train_df[[\"store\",\"item\",\"sales\"]].groupby([\"store\",\"item\"]).sum().reset_index().sort_values(by=\"sales\", ascending=False)","4cc0fea7":"sales_by_StoreAndItem[\"store_item_index\"] = pd.cut(train_df[[\"store\",\"item\",\"sales\"]].groupby([\"store\",\"item\"]).sum().reset_index().sort_values(by=\"sales\", ascending=False).sales,10, labels=range(1,11))","a3afa4b5":"train_df = pd.DataFrame.merge(train_df, sales_by_StoreAndItem.drop(\"sales\", axis=1).reset_index().drop(\"index\", axis=1) , on=[\"store\",\"item\"])\ntest_df = pd.DataFrame.merge(test_df,sales_by_StoreAndItem.drop(\"sales\", axis=1).reset_index().drop(\"index\", axis=1) , on=[\"store\",\"item\"])","85185bd7":"train_df[[\"store_item_index\"]].groupby(\"store_item_index\").size()","ec73ef76":"train_df = train_df.set_index(\"date\")\ntest_df = test_df.set_index(\"date\")","3f9505dd":"train_df[\"season\"] = train_df.season.map({\"Winter\":4, \"Spring\":1, \"Summer\":2, \"Fall\":3})\ntest_df[\"season\"] = test_df.season.map({\"Winter\":4, \"Spring\":1, \"Summer\":2, \"Fall\":3})","63db0778":"def smape(actual, target):\n    return 100 * np.mean(2 * np.abs(actual - target)\/(np.abs(actual) + np.abs(target)))","c3629545":"model = lgb.LGBMRegressor(n_jobs=-1, n_estimators=2000, max_depth=8, objective='regression_l1', random_state=123)","8d5f4ea3":"valid_df = train_df[(train_df.year == 2017) & (train_df.month.isin([10, 11, 12]))]","965af7f5":"%%time\ntrain_df_dropped = train_df.drop(valid_df.index, axis=0)","faa69165":"X = train_df_dropped.drop(\"sales\", axis=1)\ny= train_df_dropped['sales']\nvalid_X = valid_df.drop(\"sales\", axis=1)\nvalid_y = valid_df['sales']","5844c957":"model.fit(X, y, eval_set=[(valid_X, valid_y)], eval_metric=['mape', smape])","3be2a44a":"feature_importances = pd.DataFrame({'importance': model.feature_importances_, 'name': X.columns})\nsns.barplot( data=feature_importances.sort_values('importance', ascending=False), x='importance', y='name')","b3ce62e1":"pred = model.predict(valid_X)\nsmape(valid_y, pred)","6864ee2c":"test_df = test_df.drop(\"id\", axis=1)\npred = model.predict(test_df)","492ec668":"f = pd.DataFrame({'sales' : pred }, index=range(0,len(pred))).reset_index()\nf.columns = [\"id\", \"sales\"]\nf.to_csv(\"submission_demandForecasting.csv\", index=False)","08d06802":"\uacc4\uc808\ubcc0\uc218 \uc0dd\uc131. 4\uacc4\uc808 \uae30\uc900","2d61cd34":"\uc8fc\ub9d0\uc5d0 \ub354 \ub9ce\uc774 \ud314\ub9ac\ub294 \uacbd\ud5a5  \n\ud070 \ucc28\uc774\ub294 \uc5c6\uc5b4 \ubcf4\uc774\uc9c0\ub9cc \uadf8\ub798\ub3c4 \uc694\uc77c\ubcc4, \uc801\uc5b4\ub3c4 \uc8fc\ub9d0\uacfc \uc8fc\uc911\uac04\uc5d0\ub294 \uc5b4\ub290\uc815\ub3c4 \ucc28\uc774\uac00 \uc788\uc5b4\ubcf4\uc784  \n\uc8fc\ub9d0\uacfc \uc8fc\uc911\uc73c\ub85c \ub098\ub204\uc9c0 \uc54a\uace0 \uc694\uc77c \uadf8\ub300\ub85c \uc720\uc9c0\ud55c\ucc44\ub85c \ubaa8\ub378\uc5d0 \ub123\uc744\ub4ef  \nor \uc8fc\ub9d0,\uc8fc\uc911 \ub098\ub204\ub294 column\uc744 \ucd94\uac00\ud558\uc5ec \ub458 \ub2e4 \ub123\uc5b4\ubcf4\uace0 \uc131\ub2a5\uacfc variance importance\ucc28\uc774\ub97c \ubcfc \uc608\uc815 ","76a7bc6a":"\uc5f0\ud3c9\uade0 \ud310\ub9e4\ub7c9 \uc99d\uac00\uc728","0a8d4cdf":"store : \ub9e4\uc7a5 id  \nitem : \uc0c1\ud488 id  \nsales : \ud574\ub2f9 \ub0a0\uc9dc\uc5d0 \uc0c1\ud488\uc774 \ud314\ub9b0 \uac2f\uc218  \ndate : !!holyday effect\ub294 \uc5c6\uc74c","c118129f":"\uacc4\uc808\ubcc4 \ud310\ub9e4\ub7c9 \ud655\uc778","93693129":"\uc5f0\ub3c4\ubcc4 \ud310\ub9e4\ub7c9 \uc99d\uac00\uc728","5aedf630":"\ucd1d\ud310\ub9e4\ub7c9\uc744 10\uac1c\uc758 \uad6c\uac04\uc73c\ub85c \ub098\ub204\uc5b4 1~10\uc758 index \ubd80\uc5ec","654f87dd":"store, item\ubcc4 \ucd1d\ud310\ub9e4\ub7c9 \uc21c\uc704","c4298f8c":"\ubd04, \uac00\uc744\uc5d4 \uac70\uc758 \uac19\uc740 \ud310\ub9e4\ub7c9\uc744 \ubcf4\uc784. \uc5ec\ub984\uc5d0 \ud310\ub9e4\ub7c9\uc774 \ub9ce\uace0 \uaca8\uc6b8\uc5d0 \ud310\ub9e4\ub7c9\uc774 \uc801\uc74c","c6a54822":"1-store\uc758 2013\ub144 \uc6d4\ubcc4 item\ud310\ub9e4\ub7c9 \ucd94\uc774 \ud655\uc778. \uac70\uc758 \ubaa8\ub4e0 item\uc774 \ube44\uc2b7\ud55c \ud615\ud0dc\ub97c \ubcf4\uc784","a424b11e":"Test_df\uc758 increase\ub294 \uc784\uc758\ub85c \uc815\ud568","8aeefb47":"lightgbm\ubaa8\ub378\uc758 input\ubcc0\uc218\ub85c numeric type\uc744 \ub123\uc5b4\uc918\uc57c\ud558\uae30 \ub54c\ubb38\uc5d0 \uacc4\uc808\ubcc0\uc218\ub97c numeric type\uc73c\ub85c \ubcc0\ud658"}}