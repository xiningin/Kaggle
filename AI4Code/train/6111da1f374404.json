{"cell_type":{"faa0ab68":"code","07a96fe1":"code","287ab53b":"code","12b52702":"code","9826f7a4":"code","aa764a6f":"code","4676a19e":"code","26c5ff64":"code","762bf017":"code","84308ea7":"code","6ca21e8a":"code","f981bb9a":"code","02d61498":"code","19083b70":"code","22996c36":"code","2258314a":"code","4e85da9e":"code","54fd68db":"markdown","844c6b8d":"markdown","3f9662e2":"markdown","d0471662":"markdown","4aef070c":"markdown","624bfbb8":"markdown","672b8742":"markdown","b2b5f6db":"markdown","bbb4adf5":"markdown","fc2ef50f":"markdown","3afb77cd":"markdown","86963223":"markdown","db6fb183":"markdown","5a7fa02f":"markdown","10d7101b":"markdown","edff2195":"markdown","2afa827e":"markdown"},"source":{"faa0ab68":"from keras.models import Sequential\nfrom keras.layers import Convolution2D\nfrom keras.layers import MaxPooling2D\nfrom keras.layers import Flatten\nfrom keras.layers import Dense\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom matplotlib import pyplot as plt\nimport numpy as np\nfrom keras.preprocessing import image","07a96fe1":"classifier = Sequential()","287ab53b":"classifier.add(Convolution2D(32, (3, 3), input_shape=(64,64,3), activation='relu'))","12b52702":"classifier.add(MaxPooling2D(pool_size=(2,2)))","9826f7a4":"classifier.add(Convolution2D(32, (3, 3), activation='relu'))\nclassifier.add(MaxPooling2D(pool_size=(2,2)))","aa764a6f":"classifier.add(Flatten())","4676a19e":"classifier.add(Dense(128, activation='relu'))\nclassifier.add(Dense(1, activation='sigmoid'))","26c5ff64":"classifier.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])","762bf017":"train_datagen = ImageDataGenerator(\n        rescale=1.\/255,\n        shear_range=0.2,\n        zoom_range=0.2,\n        horizontal_flip=True)\n\ntest_datagen = ImageDataGenerator(rescale=1.\/255)\n\ntraining_set = train_datagen.flow_from_directory('..\/input\/pothole-images\/Archive\/training_set',\n                                                target_size=(64, 64),\n                                                batch_size=32,\n                                                class_mode='binary')\n\ntest_set = test_datagen.flow_from_directory('..\/input\/pothole-images\/Archive\/test_set',\n                                            target_size=(64, 64),\n                                            batch_size=32,\n                                            class_mode='binary')","84308ea7":"classifier.fit_generator(training_set,\n        steps_per_epoch=562,\n        epochs=25,\n        validation_data=test_set,\n        validation_steps=101)","6ca21e8a":"plt.plot(classifier.history.history['accuracy'])\nplt.plot(classifier.history.history['val_accuracy'])\nplt.title('Analysis of the model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(['Accuracy', 'Value Accuracy'], loc='upper right')\nplt.show()","f981bb9a":"def predictImg(imgpath):\n    predict_image = image.load_img(imgpath, target_size = (64,64))\n    predict_image = image.img_to_array(predict_image)\n    predict_image = np.expand_dims(predict_image, axis=0)\n    result = classifier.predict(predict_image)\n    return result.max()","02d61498":"predictImg('..\/input\/pothole-image-prediction\/prediction_data\/road1.jpeg')","19083b70":"predictImg('..\/input\/pothole-image-prediction\/prediction_data\/road2.jpg')","22996c36":"predictImg('..\/input\/pothole-image-prediction\/prediction_data\/road3.jpg')","2258314a":"predictImg('..\/input\/pothole-image-prediction\/prediction_data\/road4.jpeg')","4e85da9e":"predictImg('..\/input\/pothole-image-prediction\/prediction_data\/road5.jpg')","54fd68db":"#### 7. Training the model","844c6b8d":"Let's add another convolutional layer in order to improve the accuracy of the model. (With single convolutional layer, the accuracy was approx. 88%)","3f9662e2":"When fitting the data in the model, we will pass the training set with 562 `steps_per_epoch` (since we have 562 training images) and pass the test set as `validation_data` with 101 `validation_steps` (we have 101 test images)","d0471662":"### Note:\n**This is my first CNN, so if there is any improvements, please share it in the comments. I will learn and update my kernal. Thank you :)**","4aef070c":"Now, the model has been trained by the input image datasets. We can plot the accuracy and the value accuracy of the classifier model","624bfbb8":"Let's predict some images which is not seen by the model. The prediction images are loaded under the folder `pothole_image_prediction`. The type of the prediction images are:\n1. Pothole road\n2. Normal road\n3. Normal road\n4. Pothole road\n5. Pothole road\n\nBelow is a function which takes the image path as input and predict the image and return the value.\n**Note: 0 - Normal and 1 - Pothole**","672b8742":"![](https:\/\/miro.medium.com\/max\/3288\/1*uAeANQIOQPqWZnnuH-VEyw.jpeg)","b2b5f6db":"#### 6. Loading training and test set using Keras ImageDataGenerator","bbb4adf5":"2. Pooling - We will be adding the MaxPooling of pool size 2 x 2","fc2ef50f":"We will be adding two Neural layers of `relu` activation and `sigmoid` activation","3afb77cd":"#### 3. Adding Convolution and MaxPooling\nNow, we will be adding two layers in the NN model. \n1. Convolution2D - The input passed with this layer are: \n    * Dense\n    * shape\n    * input_shape -> The input image shape will be of 64 x 64 size. Since the input image is a color-image, we will be passing 3 as the third parameter(R,G,B)\n    * activation -> it is the activation function (relu) that will be used in the convolutional layer.","86963223":"#### 1. Loading the necessary libraries","db6fb183":"Convolutional Neural Network is an Deep Learning algorithm, which takes the image as an input and specify the weights and biases to various objects\/aspects in the image and that will be used to differentiate between images. The above image will summarize the process taken place in the CNN.\n\n1. The input image is sent into the CNN which will first convert it to the feature image.\n2. The feature image will undergo Pooling process.\n3. The pooled feature image data will be flatten into array\n4. The flatten data will be used to train the NN\n\nThis kernel will undergo the following steps:\n1. Loading the necessary libraries\n2. Initialize the Neural Network\n3. Adding Convolution and MaxPooling\n4. Flattening\n5. Creation of NN layers\n6. Loading training and test set using Keras ImageDataGenerator\n7. Training the model","5a7fa02f":"#### 4. Flattening\nThe final step of formatting the input data for training the NN is Flattening - converting the image data to a 1D format.","10d7101b":"#### 5. Creation of NN layers","edff2195":"#### 2. Initialize the Neural Network\nWe will now initialize the neural network using `Sequential` and this will be used to train the image dataset","2afa827e":"Binary crossentropy is used as a loss function since the classification is a binary (normal or pothole road)"}}