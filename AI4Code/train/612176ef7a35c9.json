{"cell_type":{"8557007a":"code","ea413d26":"code","b3a1322a":"code","d097149a":"code","060585f7":"code","375acb72":"code","8995084f":"code","3c153383":"code","eafa1121":"code","bc141d81":"code","e06cc627":"code","871da660":"code","984b6b9f":"code","ee743e86":"code","bf50bede":"markdown","b00c10d2":"markdown","a2898bac":"markdown","8bf9d690":"markdown","43138ade":"markdown","3bf5c77c":"markdown"},"source":{"8557007a":"import pandas as pd","ea413d26":"quora = pd.read_csv('..\/input\/quora-question\/quora_questions.csv')","b3a1322a":"quora.head()","d097149a":"from sklearn.feature_extraction.text import TfidfVectorizer","060585f7":"tfidf = TfidfVectorizer(max_df=0.95, min_df=2, stop_words='english')","375acb72":"dtm = tfidf.fit_transform(quora['Question'])","8995084f":"dtm","3c153383":"from sklearn.decomposition import NMF","eafa1121":"nmf_model = NMF(n_components=20,random_state=42)","bc141d81":"nmf_model.fit(dtm)","e06cc627":"for index,topic in enumerate(nmf_model.components_):\n    print(f'THE TOP 15 WORDS FOR TOPIC #{index}')\n    print([tfidf.get_feature_names()[i] for i in topic.argsort()[-15:]])\n    print('\\n')","871da660":"quora.head()","984b6b9f":"topic_results = nmf_model.transform(dtm)","ee743e86":"topic_results.argmax(axis=1)\n\nquora['Topic'] = topic_results.argmax(axis=1)\n\nquora.head(10)","bf50bede":"#### Print our the top 15 most common words for each of the 20 topics.","b00c10d2":"####  Add a new column to the original quora dataframe that labels each question into one of the 20 topic categories.","a2898bac":"#### Task: Import pandas and read in the quora_questions.csv file.","8bf9d690":"# Preprocessing\n\n#### Task: Use TF-IDF Vectorization to create a vectorized document term matrix. You may want to explore the max_df and min_df parameters.","43138ade":"# Topic Modeling ","3bf5c77c":"# Non-negative Matrix Factorization\n\n#### Using Scikit-Learn create an instance of NMF with 20 expected components. (Use random_state=42).."}}