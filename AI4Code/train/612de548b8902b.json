{"cell_type":{"f306d112":"code","56109984":"code","cbcfe29a":"code","350f6ea1":"code","b79ef578":"code","cf9c558f":"code","90c7e485":"code","aa7ad9c7":"code","b652190d":"code","e69206ec":"code","852097b8":"code","3f3a76d9":"code","7cd0ed1d":"code","75ad7667":"code","6a70560d":"code","6f1ce456":"markdown","8658a355":"markdown","234e07e3":"markdown"},"source":{"f306d112":"import pandas as pd\npd.options.display.max_columns = 100\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","56109984":"stage_one = pd.read_csv('..\/input\/gendered-pronoun-resolution\/test_stage_1.tsv', sep='\\t')\nstage_two = pd.read_csv('..\/input\/gendered-pronoun-resolution\/test_stage_2.tsv', sep='\\t')","cbcfe29a":"display(stage_one.head())\ndisplay(stage_two.head())","350f6ea1":"print(stage_one.Text.iloc[0])\n","b79ef578":"stng = stage_one.Text.iloc[0]\nprint(stng[191:204]) # The A-offset or where the Subject is\nprint(stng[207:211]) # The B-offset or where the object is\nprint(stng[274:278]) # The location of the pronoun","cf9c558f":"print(stage_two.Text.iloc[3])","90c7e485":"stage_one.shape","aa7ad9c7":"stage_one['length'] = pd.Series([len(x) for x in stage_one.Text], index=stage_one.index)\nstage_two['length'] = pd.Series([len(x) for x in stage_two.Text], index=stage_two.index)\n","b652190d":"print('Stage one data: ')\n\n\n\ndisplay(stage_one.describe())\ndisplay(stage_one.shape)\npronoun = stage_one.groupby(\"Pronoun\")\nprint('\\n\\npronoun data: ')\ndisplay(pronoun.describe())\n#display(pronoun.length)\n\nplt.figure(figsize=(20,7))\nsns.distplot(stage_one.length)\nplt.xlabel(\"Frequency\")\nplt.ylabel(\"length of of text\")\n\n\nplt.figure(figsize=(12,7))\npronoun.size().sort_values().plot.bar()\nplt.xticks(rotation=50)\nplt.xlabel(\"Pronoun\")\nplt.ylabel(\"Frequency of pronoun\")\nplt.show()","e69206ec":"print('Stage two data: ')\ndisplay(stage_two.describe())\ndisplay(stage_two.shape)\npronoun = stage_two.groupby(\"Pronoun\")\nprint('pronoun data: ')\ndisplay(pronoun.describe())\n\nplt.figure(figsize=(20,7))\nsns.distplot(stage_two.length, color='g')\nplt.xlabel(\"Frequency\")\nplt.ylabel(\"length of text\")\n\nplt.figure(figsize=(12,7))\npronoun.size().sort_values().plot.bar(color='g')\nplt.xticks(rotation=50)\nplt.xlabel(\"Pronoun\")\nplt.ylabel(\"Frequency of pronoun\")\nplt.show()","852097b8":"\nfrom os import path\nfrom PIL import Image\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator","3f3a76d9":"# Credit to DJ here, she had mentioned that pronouns can show as stop words (words that NLP tools will ignore as inconsequential)\n# This cell collects the recognized pronouns and adds them to a list\nnon_stop = set(pronoun.Pronoun.unique().index)\nprint(non_stop)\n\nnon_stop = STOPWORDS - non_stop","7cd0ed1d":"#?WordCloud\n#uncomment to see documentation for wordcloud, I had to reference this one alot","75ad7667":"text = \" \".join(sample for sample in stage_one.Text)\nprint(\"There are \", len(text),\" words in the combination of all strings from 'Text' column.\")\n\n\nwordcloud = WordCloud(stopwords=STOPWORDS,width=1200,\n    height=600).generate(text)\n\nplt.figure(figsize=(20,15))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.title('WordCloud without pronouns', fontsize=26)\nplt.axis(\"off\")\nplt.show()\n\n\n\nwordcloud = WordCloud(stopwords=non_stop,width=1200,\n    height=600).generate(text)\n\nplt.figure(figsize=(20,15))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.title('WordCloud with pronouns', fontsize=26)\nplt.axis(\"off\")\nplt.show()","6a70560d":"text = \" \".join(sample for sample in stage_two.Text)\nprint(\"There are \", len(text),\" words in the combination of all strings from 'Text' column.\")\nprint(\"this is 5x the number of words in the stage one dataset\")\nwordcloud = WordCloud(stopwords=STOPWORDS,width=1200,\n    height=600).generate(text)\n\nplt.figure(figsize=(20,15))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.title('WordCloud without pronouns', fontsize=26)\nplt.axis(\"off\")\nplt.show()\n\n\nwordcloud = WordCloud(stopwords=non_stop,width=1200,\n    height=600).generate(text)\n\nplt.figure(figsize=(20,15))\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.title('WordCloud with pronouns', fontsize=26)\nplt.axis(\"off\")\nplt.show()","6f1ce456":"Further consideration: It might be interesting to break down the text samples differently, for instance spliting the strings into two to four word chunks and looking for common chunks (words occuring frequently in the same sequence).","8658a355":"# Let's make some MF word clouds!\nFull discloser I have never made a word cloud before, this project seemed like a good time to give it a try.\nThe link below is what I used for reference material and also some copying of a few lines of code.\n\nhttps:\/\/www.datacamp.com\/community\/tutorials\/wordcloud-python\n\nI highly recommend that tutorial there are some gorgeos wordplots there which exceed the scope of this perticular notebook","234e07e3":"The following is my initial EDA for the Gendered Pronoun Resolution dataset from the similarly named competition. I'm presently working with a group to make a late attempt to see if we can find a better solution to the ones which were submitted. This kernal is meant as a starting point for my group and is far from a finished end product.\n\nVersion 2: removed pronouns from the stopwords list as they are relevent to this challenge. added the side effect of the word 'Hi' showing up and being counted frequently, which is not present in the prior version, you can see the impact side by side"}}