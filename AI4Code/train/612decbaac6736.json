{"cell_type":{"c31e45aa":"code","5e4bf792":"code","437b794c":"code","1ef0d587":"code","86e1fb8d":"code","3cf65383":"code","a5ba6623":"code","03ae9826":"code","d7cb63ee":"code","b68aa86c":"code","06f48134":"code","803ecf33":"code","66e84d7c":"code","bf07c9d6":"code","081142dd":"code","6ef99e9a":"code","997bcf04":"code","c7548433":"code","683fe293":"code","71ec2a25":"code","f7ac5ea6":"code","f401a5b7":"code","9498d1db":"code","8a1d03f6":"code","dc972d15":"code","e9edac07":"code","40c75b77":"code","8d52e155":"code","6f2885fe":"code","b6e25be9":"code","296c2bad":"markdown","4ace2372":"markdown","5f4f660e":"markdown","531e7491":"markdown","537be992":"markdown","a7cde91d":"markdown","f12c3341":"markdown","52818923":"markdown"},"source":{"c31e45aa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5e4bf792":"pd.options.display.max_columns =100","437b794c":"train = pd.read_csv('\/kaggle\/input\/sf-crime\/train.csv.zip',parse_dates=['Dates'])\n# train['year'] = train['Dates'].dt.year\n# train['month'] = train['Dates'].dt.month\n# train['day'] = train['Dates'].dt.day\n# train['hour'] = train['Dates'].dt.hour\ntrain.head()","1ef0d587":"# display(train['year'].unique(),train['month'].unique(),train['day'].unique(),train['hour'].unique())","86e1fb8d":"# display(test['year'].unique(),test['month'].unique(),test['day'].unique(),test['hour'].unique())","3cf65383":"test = pd.read_csv('\/kaggle\/input\/sf-crime\/test.csv.zip',parse_dates=['Dates'])\n# test['year'] = test['Dates'].dt.year\n# test['month'] = test['Dates'].dt.month\n# test['day'] = test['Dates'].dt.day\n# test['hour'] = test['Dates'].dt.hour\ntest.head()","a5ba6623":"display(train.shape,test.shape)","03ae9826":"train['Category'].unique() # Target Variable","d7cb63ee":"display(train['Resolution'].unique(), train['Resolution'].nunique()) # Only in train.csv","b68aa86c":"# display(train['Descript'].unique()[:50],train['Descript'].nunique()) # Only in train.csv","06f48134":"display(train.isnull().any(),test.isnull().any())","803ecf33":"alldata = pd.concat([train,test])\nalldata.head()","66e84d7c":"alldata2 = alldata.drop(['Category','Resolution','Descript','Dates','Id'],axis=1)\nalldata2.head()","bf07c9d6":"train['Category'].value_counts()","081142dd":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\n\nfor i in alldata2.columns[alldata2.dtypes==object]:\n    alldata2[i] = le.fit_transform(alldata2[i])","6ef99e9a":"alldata2.head()","997bcf04":"train2 = alldata2[:len(train)]\ntest2 = alldata2[len(train):]","c7548433":"from sklearn.model_selection import train_test_split\nx_train,x_valid,y_train,y_valid = train_test_split(train2,train['Category'],test_size=0.2,random_state=1,stratify=train['Category'])\ny_valid.value_counts()","683fe293":"%%time\nfrom sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier(random_state=0, max_depth=6, n_jobs=-1)\nrf.fit(x_train,y_train)","71ec2a25":"valid_result = rf.predict_proba(x_valid)","f7ac5ea6":"from sklearn.metrics import log_loss\nlog_loss(y_valid, valid_result)","f401a5b7":"%%time\nfrom sklearn.ensemble import RandomForestClassifier\nrf = RandomForestClassifier(random_state=0, max_depth=6, n_jobs=-1)\nrf.fit(train2,train['Category'])","9498d1db":"result = rf.predict_proba(test2)","8a1d03f6":"sub=pd.read_csv('\/kaggle\/input\/sf-crime\/sampleSubmission.csv.zip')\nsub.head()","dc972d15":"sub.shape #Id \uc81c\uc678","e9edac07":"len(result[0])","40c75b77":"result.shape","8d52e155":"#sub.iloc[\ud589,\uc5f4]\nsub.iloc[:,1:]","6f2885fe":"sub.iloc[:,1:] = result\nsub.head()","b6e25be9":"sub.to_csv('submission.csv',index=False)","296c2bad":"* \uc815\ub2f5\uac12\uc774 \uc5b4\ub5bb\uac8c \ubd84\ud3ec\ub418\uc5b4 \uc788\ub294\uc9c0 \ud655\uc778\ud558\ub294\uac83 \ub9e4\uc6b0 \uc911\uc694.","4ace2372":"* \uce7c\ub7fc 39\uac1c\uc5d0 \uc811\uadfc\ud574\uc11c \uac12 \ub123\uc5b4\uc900\ub2e4.","5f4f660e":"* random_state \uace0\uc815 \ud544\uc218.\n* stratify=train['Category'] : train\uc758 \ubaa9\uc801\ubcc0\uc218 \uac01\uac01\uc758 \ube44\uc728\ub300\ub85c \ubf51\uaca0\ub2e4\ub294 \uc758\ubbf8.","531e7491":"* No NA","537be992":"# Creating evaluation set","a7cde91d":"# \uc0cc\ud504\ub780\uc2dc\uc2a4\ucf54 \ubc94\uc8c4 \ubd84\ub958 \ub300\ud68c","f12c3341":"* \ub79c\ub364\ud3ec\ub808\uc2a4\ud2b8\ud558\uba74 \ub7a8 \ud130\uc838\uc11c \uc548\ub3cc\uc544\uac10.\n* max_depth = -1 \uc774 default. \uc9c0\uae08 \ub370\uc774\ud130\uc14b \ub9e4\uc6b0 \ubcf5\uc7a1. \ud558\ub098\uc758 \ub098\ubb34\uc5d0\uc11c \ub108\ubb34 \ub9ce\uc740 \ud559\uc2b5\uc744 \ud574\ubc84\ub9bc. \ub098\ubb34 \uae4a\uc774\ub97c \uc124\uc815\ud558\uc790.","52818923":"## Base Line"}}