{"cell_type":{"dfd44aca":"code","81a38b83":"code","47d362fa":"code","54b214e5":"code","d333cbf0":"code","8f3a1df1":"code","a0f59b7b":"code","f9229587":"code","4f8fa7a0":"code","1d4ac5e0":"code","12edf7e4":"code","e99c6098":"code","0c6b742a":"code","33f366f8":"code","775cd21e":"code","e48d4ca8":"code","6635a7ea":"code","4d0f4a92":"code","5d900497":"code","92d85466":"code","2cf67310":"code","596033d0":"code","ca80288d":"code","acc7fe08":"code","f735290d":"code","bd150e5e":"markdown","6ea32b7f":"markdown","0d9dfbcd":"markdown","38b49ef0":"markdown"},"source":{"dfd44aca":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline\n\n\nfrom fastai.vision import *\nfrom fastai.metrics import error_rate, fbeta\nimport pandas as pd\nimport numpy as np","81a38b83":"folder= 'working_dir'","47d362fa":"path = Path('..\/input')\norigin= Path('..')\ndest = origin\/folder\n\ndest.mkdir(parents=True, exist_ok=True)\n!cp -r ..\/input\/* {dest}\/\npath.ls()","54b214e5":"dest.ls()","d333cbf0":"path = Path('..\/input')","8f3a1df1":"bs=32\ntfms=ds_tfms=get_transforms(do_flip=False, max_rotate=0, max_zoom=1, max_lighting=0, max_warp=0)","a0f59b7b":"np.random.seed(42)\ndata = (ImageList.from_folder(path)\n        .split_by_rand_pct(0.2)\n        .label_from_folder()\n        .transform(tfms, size=128)\n        .databunch())","f9229587":"data.show_batch(rows=3, figsize=(9,7))","4f8fa7a0":"classes = data.classes\nprint(classes)","1d4ac5e0":"from fastai.vision.learner import create_cnn,models\nfrom fastai.vision import error_rate","12edf7e4":"learn = cnn_learner(data, models.resnet50, model_dir = '\/tmp\/models',  metrics=error_rate)","e99c6098":"learn.lr_find()","0c6b742a":"learn.recorder.plot()","33f366f8":"learn.fit_one_cycle(4, slice(1e-03,4e-3))\nlearn.save('plastics_save_1', return_path=True)","775cd21e":"learn.unfreeze()\nlearn.lr_find()","e48d4ca8":"learn.recorder.plot()","6635a7ea":"learn.fit_one_cycle(6, slice(1e-03,3e-4))\nlearn.save('plastics_save_2', return_path=True)","4d0f4a92":"learn.recorder.plot_losses()","5d900497":"interp = ClassificationInterpretation.from_learner(learn)","92d85466":"from sklearn.metrics import classification_report","2cf67310":"interp.plot_confusion_matrix()","596033d0":"interp.most_confused()","ca80288d":"interp.plot_top_losses(9)","acc7fe08":"learn.show_results(rows=3, figsize=(10,10))","f735290d":"learn.export('\/kaggle\/dest')","bd150e5e":"## Conclusion\nThis is a starter package for you. To go forward from here, click the blue \"Edit Notebook\" button at the top of the kernel. This will create a copy of the code and environment for you to edit. If you want to contribute to the dataset, please contact me.","6ea32b7f":"## Interpreting Results","0d9dfbcd":"## Exporting the model","38b49ef0":"## Introduction\nClick the blue \"Edit Notebook\" or \"Fork Notebook\" button at the top of this kernel to begin editing. Enjoy my dataset and code. <3"}}