{"cell_type":{"9b91a836":"code","e5329765":"code","ce0e3638":"code","465f149e":"code","629977fd":"code","51648c93":"code","f2871d5f":"code","2f6cd49a":"code","df7b0996":"code","31ac7132":"code","b49b9161":"code","7885f09c":"code","3ba7dcd8":"code","2c6084d0":"code","9c25d3e8":"code","298d6371":"code","81442211":"markdown"},"source":{"9b91a836":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # for visualization\nimport seaborn as sns # for visualization\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","e5329765":"data = pd.read_csv('..\/input\/2017.csv') # read the csv file","ce0e3638":"data.info() # To understand what kind of datatypes this dataset has","465f149e":"data.columns # To see the titles of our dataset","629977fd":"data.head() # To be able to have a quick view about the dataset. It is 5 by default, you can change it. For instance, data.head(10).","51648c93":"data.describe() # Numerical values of the dataset","f2871d5f":"data.corr() # Corrolation values between our data inputs.","2f6cd49a":"# Correlation Map\n\nf,ax = plt.subplots(figsize=(15, 15))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","df7b0996":"# Line Plot\n# kind: Type of your plot, color: Color of the values, alpha: Opacity of the values,\n# grid: Background grid, linewidth: Width of line, linestyle: Linestyle,\n# figsize: allows you to chage your plot's size\n\ndata.plot(kind = 'line', x='Happiness.Rank', y='Health..Life.Expectancy.', color = 'g', linewidth=1,alpha = 0.7, grid = True, linestyle = '-.', figsize=(20,5))\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('Happiness Rank')              # label = name of label\nplt.ylabel('Health-Life Expectancy')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","31ac7132":"data1 = data['Happiness.Rank']\ndata2 = data['Happiness.Score']\n\nplt.subplots(figsize=(15,10))\nplt.plot(data1,data2,label = 'Happiness Rank-Score')\nplt.legend()\nplt.xlabel('Happiness Rank')\nplt.ylabel('Happiness Score')\nplt.title('Happiness Report of The World')\nplt.show()","b49b9161":"# Scatter Plot \nplt.subplots(figsize=(20,10))\nplt.plot(data['Happiness.Rank'], data['Trust..Government.Corruption.'], color='r', label='Goverment Trust')\nplt.plot(data['Happiness.Rank'], data['Health..Life.Expectancy.'], color='b', label='Health Life Expectancy')\nplt.legend()\nplt.title('Goverment Trust-Health Life Expectancy')\nplt.xlabel('Happiness Rank')\nplt.show()","7885f09c":"data1 = data['Happiness.Rank']\ndata2 = data['Happiness.Score']\ndata3 = data['Trust..Government.Corruption.']\n\nplt.subplots(figsize=(10,5))\nplt.plot(data1,data2, label='Happiness score')\nplt.plot(data1,data3, label='Goverment Trust')\nplt.title('Goverment Trust and Happiness Score Connection')\nplt.legend()\nplt.xlabel('Happiness Rank')\nplt.show()","3ba7dcd8":"# Histogram\n# bins = number of bar in figure, rwidth = closeness of bars\ndata.Freedom.plot(kind = 'hist',bins = 25,figsize = (15,5), rwidth=0.9)\nplt.title('Freedom')\nplt.show()","2c6084d0":"# Bar Plot\nplt.subplots(figsize=(20,10))\nplt.bar(data['Country'][0:10], data['Economy..GDP.per.Capita.'][0:10],label='Economy Per Capita', color='r', width=0.5)\nplt.legend()\nplt.xlabel('Countries')\nplt.title('Economy In Countries')\nplt.show()","9c25d3e8":"# Bar Plot\nplt.subplots(figsize=(15,5))\nplt.bar(data['Country'][0:10], data['Generosity'][0:10], label='Generosity')\nplt.legend()\nplt.xlabel('Countries')\nplt.title('Generosity of The Countries')\nplt.show()","298d6371":"plt.subplot(3,1,1)\nplt.plot(data['Happiness.Rank'],data['Happiness.Score'],label = 'Happines Rank', color='orange')\nplt.title('Rank-Score-Economy-Life Graph')\nplt.grid()\nplt.legend()\nplt.subplot(3,1,2)\nplt.plot(data['Happiness.Rank'],data['Economy..GDP.per.Capita.'],label = 'Economy..GDP.per.Capita.',color = 'b')\nplt.grid()\nplt.legend()\nplt.subplot(3,1,3)\nplt.plot(data['Happiness.Rank'],data['Health..Life.Expectancy.'],label = 'Health..Life.Expectancy.',color = 'r')\nplt.grid()\nplt.legend()\nplt.show()","81442211":"With this code below, we can easily visualize our data. This is the one of the most useful visialization methods for data science."}}