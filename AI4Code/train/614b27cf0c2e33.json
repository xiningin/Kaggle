{"cell_type":{"2f344bf3":"code","f3b191e0":"code","5081147c":"code","5c65e466":"code","1544495b":"code","0e22654d":"code","f7cd5951":"code","0b4c95bc":"code","4aa2f1da":"code","d859b1b1":"code","c254477a":"code","beec7618":"code","daf47a7c":"code","d24db429":"markdown","38b03d90":"markdown","1f119586":"markdown"},"source":{"2f344bf3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f3b191e0":"#importing libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd","5081147c":"#importing dataset\nds = pd.read_csv('..\/input\/salary-data\/Salary_Data.csv')\nx = ds.iloc[:,:-1].values\ny = ds.iloc[:,-1].values","5c65e466":"#checking our dataset\nds.head(10)","1544495b":"#checking for missing values \nds.isnull().any()","0e22654d":"ds.info()","f7cd5951":"#splitting dataset into training and testing set\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 0) ","0b4c95bc":"#training the model\nfrom sklearn.linear_model import LinearRegression\nlr = LinearRegression()\nlr.fit(x_train, y_train)","4aa2f1da":"#predicting test set results\ny_pred = lr.predict(x_test)\nprint(y_pred)","d859b1b1":"#visualising training set results\nplt.scatter(x_train, y_train, c = 'red')\nplt.plot(x_train, lr.predict(x_train))\nplt.xlabel('number of years')\nplt.ylabel('salary')\nplt.title('visualising training set results')","c254477a":"#visualising test set results\nplt.scatter(x_test, y_test, c = 'red')\nplt.plot(x_train, lr.predict(x_train))\nplt.xlabel('number of years')\nplt.ylabel('salary')\nplt.title('visualising test set results')","beec7618":"#output\nprint(np.concatenate((y_pred.reshape(len(y_pred), 1), y_test.reshape(len(y_test), 1)), 1))","daf47a7c":"#accuracy of the model\nfrom sklearn.metrics import r2_score \nr2_score(y_test, lr.predict(x_test))","d24db429":"**Accuracy = 98.8%**","38b03d90":"No categorical data or missing data","1f119586":"**Simple Linear Regression (For Predicting Salaries based on number of years worked)**"}}