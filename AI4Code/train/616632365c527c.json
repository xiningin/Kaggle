{"cell_type":{"85a81c5d":"code","328ebac4":"code","cd20cdde":"code","696fa837":"code","041ca9ad":"code","4da23b48":"code","7ac3ac32":"code","e3a0f153":"code","4e6b0ade":"code","f036f262":"code","c3afb950":"code","09fd75aa":"code","8bcdae5b":"code","3a860a27":"code","c39c18b7":"code","b752e77c":"code","3ac84850":"code","414bab5f":"code","8125b513":"code","f5282653":"code","db2c9aec":"code","f87e16ca":"markdown","eebc9ef0":"markdown","74334ebd":"markdown","1db0d311":"markdown","4320bf88":"markdown"},"source":{"85a81c5d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","328ebac4":"import pandas as pd","cd20cdde":"train = pd.read_csv(\"\/kaggle\/input\/covid19-global-forecasting-week-3\/test.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/covid19-global-forecasting-week-3\/test.csv\")","696fa837":"train.head()","041ca9ad":"test.head()","4da23b48":"train.shape","7ac3ac32":"test.shape","e3a0f153":"train.info()","4e6b0ade":"train.isnull().sum()","f036f262":"test.isnull().sum()","c3afb950":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","09fd75aa":"sns.heatmap(train.isnull(),yticklabels=False, cbar=False, cmap='viridis')","8bcdae5b":"EMPTY_VAL = \"EMPTY_VAL\"\n\ndef fillState(state, country):\n    if state == EMPTY_VAL: return country\n    return state\n\ntrain['Province_State'].fillna(EMPTY_VAL, inplace=True)\ntrain['Province_State'] = train.loc[:, ['Province_State', 'Country_Region']].apply(lambda x : fillState(x['Province_State'], x['Country_Region']), axis=1)\ntest['Province_State'].fillna(EMPTY_VAL, inplace=True)\ntest['Province_State'] = test.loc[:, ['Province_State', 'Country_Region']].apply(lambda x : fillState(x['Province_State'], x['Country_Region']), axis=1)\ntest.head()","3a860a27":"train.corr()","c39c18b7":"sns.heatmap(train.corr(), annot=True, linewidths=2, cmap=\"YlGnBu\")","b752e77c":"plt.figure(figsize =(20,15))\nsns.set_style('whitegrid')\nplot = sns.countplot(train['Country_Region'])\nplot.set_xticklabels(plot.get_xticklabels(),rotation=90)","3ac84850":"train.groupby('Country_Region')['ForecastId'].mean().plot(kind = 'bar', figsize= (40,20), title= \"Countries with COVID-19 MAX\", color='red')","414bab5f":"unique = pd.DataFrame(train.groupby(['Country_Region', 'Province_State'],as_index=False).count())\nunique.head()","8125b513":"X = train.iloc[:,1:2]\nY = train.iloc[:,2]","f5282653":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.2, random_state=0)","db2c9aec":"sub=pd.read_csv('\/kaggle\/input\/covid19-global-forecasting-week-3\/submission.csv')\nsub.to_csv('submission.csv',index=False)","f87e16ca":"## EDA","eebc9ef0":"## Loading Data","74334ebd":"## Linear Regression","1db0d311":"## Missing Data","4320bf88":"## Submission"}}