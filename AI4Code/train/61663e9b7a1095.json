{"cell_type":{"8162de1a":"code","828e22a2":"code","3555eee5":"code","4895eefa":"code","abbc8c13":"code","2e71af71":"code","f5334ddb":"code","81e359f1":"code","13fdc87e":"code","f1fbc13e":"code","a953352d":"code","3489a979":"code","4012f614":"code","531a5e4c":"code","36ead33f":"code","909b8dd6":"code","f4e01ffe":"code","e4910cce":"code","6707a7ee":"code","2b48d518":"code","8d5ca4be":"code","cbf7feb2":"code","22b2ef17":"code","2b4a71e7":"code","e1fafe39":"code","43c1a75a":"code","d38757bb":"code","5fa0ac1b":"code","ecc355aa":"code","b5e83b42":"code","9bfe04b3":"code","22172427":"code","03cdb602":"code","42f574cc":"code","2382ee05":"code","b0281443":"code","a4ca6418":"code","41296316":"code","f2df1fdd":"code","c2c6b031":"code","1de17e41":"code","ce55ff7b":"code","9914951e":"code","7ef6300a":"code","96acf9ba":"code","c75bd8ea":"code","dfe2553f":"code","4006fefd":"code","eb6432da":"code","89af2c70":"markdown","e7240525":"markdown","5b85746b":"markdown","a588e7a4":"markdown","8841a30a":"markdown","3eca99d6":"markdown","64f25ee8":"markdown","5c989fcb":"markdown","5462c679":"markdown","57240603":"markdown","c3ba1640":"markdown","56e94080":"markdown","087a102e":"markdown","f4a1fe09":"markdown","be58a7b8":"markdown","8ca9bbd6":"markdown","9c985d61":"markdown","e6224297":"markdown","96ea1d54":"markdown","13ac105c":"markdown","84c59e35":"markdown","64322dd4":"markdown","2a90f17c":"markdown","e8e1b77e":"markdown"},"source":{"8162de1a":"# # This Python 3 environment comes with many helpful analytics libraries installed\n# # It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# # For example, here's several helpful packages to load\n\n# import numpy as np # linear algebra\n# import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# # Input data files are available in the read-only \"..\/input\/\" directory\n# # For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n# import os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n\n# # You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# # You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","828e22a2":"import pandas as pd\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns","3555eee5":"path = '\/kaggle\/input\/learnplatform-covid19-impact-on-digital-learning\/'","4895eefa":"districts_info = pd.read_csv(path+'districts_info.csv')\ndistricts_info.head()","abbc8c13":"products_info = pd.read_csv(path + 'products_info.csv')\nproducts_info.head()","2e71af71":"def load_dataframes(path):\n    dataframes = {}\n    engagement_data_list = os.listdir(path)\n    for file in engagement_data_list:\n        csv = pd.read_csv(path + file)\n        csv['district'] = [file.split('.')[0] for _ in range(len(csv))]\n        dataframes[file.split('.')[0]] = csv\n    return dataframes\ndata = load_dataframes(path + 'engagement_data\/')","f5334ddb":"plt.figure(figsize=(12,7))\nplt.title(\"Missing Districts Info Data\", {'fontsize': 20})\nsns.barplot(data = districts_info.isna().sum().reset_index(), y = 'index', x = 0)","81e359f1":"di_missing = districts_info.isna().sum()\ndi_total_rows = len(districts_info)\nfor col in di_missing.keys():\n    print(f\"The number of missing values in the {col} column is {di_missing[col]} which is {round(di_missing[col]*100\/di_total_rows,2)}%\")","13fdc87e":"plt.figure(figsize=(12,7))\nplt.title(\"Missing Products Info Data\", {'fontsize': 20})\nsns.barplot(data = products_info.isna().sum().reset_index(), y = 'index', x = 0)","f1fbc13e":"pi_missing = products_info.isna().sum()\npi_total_rows = len(products_info)\nfor col in pi_missing.keys():\n    print(f\"The number of missing values in the {col} column is {pi_missing[col]} which is {round(pi_missing[col]*100\/pi_total_rows,2)}%\")","a953352d":"total_rows = 0\nmissing = data[list(data.keys())[0]].isna().sum()\nfor key in data.keys():\n    total_rows += len(data[key])\n    if key != list(data.keys())[0]:\n        missing += data[key].isna().sum()\nplt.figure(figsize=(12,7))\nplt.title(\"Missing Enggagement Data\", {'fontsize': 20})\nsns.barplot(data = missing.reset_index(), y = 'index', x = 0)","3489a979":"print(\"The total number of rows in the dataset is\", total_rows)","4012f614":"for col in missing.keys():\n    print(f\"The number of missing values in the {col} column is {missing[col]} which is {round(missing[col]*100\/total_rows,2)}%\")","531a5e4c":"district = list(data.keys())[0]\nsample_df = data[district]","36ead33f":"sample_df[['pct_access','engagement_index']].describe()","909b8dd6":"def plot_hist(df:pd.DataFrame, column:str, color:str)->None:\n    plt.figure(figsize=(12, 7))\n    sns.displot(data=df, x=column, color=color, bins = 100, kde=True, height=7, aspect=2)\n    plt.title(f'Distribution of {column}', size=20, fontweight='bold')\n    plt.show()\n\ndef plot_count(df:pd.DataFrame, column:str) -> None:\n    plt.figure(figsize=(12, 7))\n    sns.countplot(data=df, x=column, orient = 'h')\n    plt.title(f'Distribution of {column}', size=20, fontweight='bold')\n    plt.show()\n\ndef plot_correlation(df:pd.DataFrame, title:str) -> None:\n    f = plt.figure(figsize=(19, 15))\n    plt.matshow(df.corr(), fignum=f.number)\n    plt.xticks(range(df.select_dtypes(['number']).shape[1]), df.select_dtypes(['number']).columns, fontsize=14, rotation=45)\n    plt.yticks(range(df.select_dtypes(['number']).shape[1]), df.select_dtypes(['number']).columns, fontsize=14)\n    cb = plt.colorbar()\n    cb.ax.tick_params(labelsize=14)\n    plt.title('Correlation Matrix', fontsize=16)","f4e01ffe":"plot_hist(sample_df[sample_df['pct_access'] <= sample_df['pct_access'].quantile(0.95)], 'pct_access', 'blue')","e4910cce":"plot_hist(sample_df[sample_df['engagement_index'] <= sample_df['engagement_index'].quantile(0.95)], 'engagement_index', 'blue')","6707a7ee":"super_df = pd.concat([data[key] for key in data])\nlen(super_df)","2b48d518":"def month(x):\n    m = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n    return m[int(x.split('-')[1])-1] \ndef day(x):\n    return int(x.split('-')[2]) \nsuper_df['month'] = super_df['time'].apply(month)\nsuper_df['day'] = super_df['time'].apply(day)","8d5ca4be":"super_df.head()","cbf7feb2":"super_df[['pct_access', 'engagement_index']].describe().round(2)","22b2ef17":"plot_hist(super_df[super_df['engagement_index'] <= super_df['engagement_index'].quantile(0.95)].sample(10000), 'engagement_index', 'blue')","2b4a71e7":"school_locale = districts_info[['district_id', 'locale']].groupby('locale').count().reset_index()\nschool_locale","e1fafe39":"fig = plt.figure(figsize=(12,7))\nax = fig.add_axes([0,0,1,1])\nax.axis('equal')\nlocale = list(school_locale['locale'])\nnum_schools = list(school_locale['district_id'])\nax.pie(num_schools, labels = locale,autopct='%1.2f%%')\nplt.title(\"Distribution of schools by locale\", {'fontsize':20})\nplt.show()","43c1a75a":"school_state = districts_info[['district_id', 'state']].groupby('state').count().reset_index()\nplt.figure(figsize=(12,7))\nplt.title(\"Distribution of schools by state\", {'fontsize':20})\nsns.barplot(y = school_state['state'], x = school_state['district_id'])","d38757bb":"companies_per_product = products_info[['Provider\/Company Name','Product Name']].groupby('Provider\/Company Name').count().sort_values('Product Name').tail(20).reset_index()\nplt.figure(figsize=(12,7))\nplt.title(\"Distribution of Products per Company\", {'fontsize':20})\nsns.barplot(y = companies_per_product['Provider\/Company Name'], x = companies_per_product['Product Name'])","5fa0ac1b":"s1 = set(super_df['lp_id'].dropna().apply(int))\ns2 = set(products_info['LP ID'].dropna())\nprint(\"Products that exist in the products_info but not in the engagement_data are\", s2.difference(s1))","ecc355aa":"lp, name = list(products_info['LP ID']), list(products_info['Product Name'])\nlp_to_name = {}\nfor i in range(len(lp)):\n    lp_to_name[int(lp[i])] = name[i]\nmost_popular_products = super_df[['lp_id','time']].groupby('lp_id').count().sort_values('time').tail(20).reset_index()\n\ndecoded_ids = []\nnumber_of_rows = []\nfor i in range(len(most_popular_products['lp_id'])):\n    if int(list(most_popular_products['lp_id'])[i]) in lp_to_name:\n        decoded_ids.append(lp_to_name[int(list(most_popular_products['lp_id'])[i])])\n        number_of_rows.append(list(most_popular_products['time'])[i])","b5e83b42":"plt.figure(figsize=(12,7))\nplt.title(\"Distribution of Data Points per Product\", {'fontsize':20})\nsns.barplot(y = decoded_ids, x = number_of_rows)","9bfe04b3":"percent_page_load = super_df.groupby('district').mean().sort_values('pct_access', ascending = False).head(10).reset_index()\n\nplt.figure(figsize=(12,7))\nplt.title(\"Districts with largest percentage of page loads\", {'fontsize':20})\nsns.barplot(x = percent_page_load['district'], y = percent_page_load['pct_access'])","22172427":"most_engaged = super_df.groupby('district').mean().sort_values('engagement_index', ascending = False).head(10).reset_index()\nplt.figure(figsize=(12,7))\nplt.title(\"Most Engaged districts\", {'fontsize':20})\nsns.barplot(x = most_engaged['district'], y = most_engaged['engagement_index'])","03cdb602":"percpl_day = super_df.groupby('time', sort = False).mean().reset_index()\nplt.title(\"Percentage of page loads per day\", {'fontsize':20})\nsns.lineplot(data=percpl_day, x=\"time\", y=\"pct_access\")","42f574cc":"eng_day = super_df.groupby('time', sort = False).mean().reset_index()\nplt.title(\"Percentage of page loads per day\", {'fontsize':20})\nsns.lineplot(data=eng_day, x=\"time\", y=\"engagement_index\")","2382ee05":"percpl_month = super_df.groupby('month', sort = False).mean().reset_index()\nplt.title(\"Percentage of page loads per month\", {'fontsize':20})\nsns.lineplot(data=percpl_month, x=\"month\", y=\"pct_access\")","b0281443":"eng_month = super_df.groupby('month', sort = False).mean().reset_index()\nplt.title(\"Engagement per month\", {'fontsize':20})\nsns.lineplot(data=eng_month, x=\"month\", y=\"engagement_index\")","a4ca6418":"sns.heatmap(super_df[['pct_access','engagement_index']].dropna().corr(), annot = True, cmap= 'coolwarm')","41296316":"eng_month = super_df.groupby('month', sort = False).mean().reset_index()\nplt.title(\"Engagement per month\", {'fontsize':20})\nsns.lineplot(data=eng_month, x=\"month\", y=\"engagement_index\")","f2df1fdd":"super_df.groupby('lp_id').mean().sort_values('engagement_index', ascending  = False).head(5)","c2c6b031":"l = super_df.groupby('lp_id').mean().sort_values('engagement_index', ascending  = False).head().reset_index()['lp_id']\nfor i in range(len(l)):\n    p1 = super_df[super_df['lp_id'] == l[i]].groupby('month', sort = False).mean().reset_index()\n    plt.title(\"Engagement with Most Popular Products\", {'fontsize' : 20} )\n    sns.lineplot(data=p1, x=\"month\", y=\"engagement_index\")","1de17e41":"eng = super_df[['district', 'engagement_index']].groupby('district').mean().reset_index()\neng['district'] = eng['district'].apply(int)\neng.columns = ['district_id', 'engagement_index']\n\ndistrict_engagement = pd.merge(districts_info.set_index('district_id'), eng.set_index('district_id'), on = 'district_id')\ndistrict_engagement","ce55ff7b":"plt.figure(figsize=(12,7))\nplt.title(\"Engagement By State\", {'fontsize':20})\nsns.barplot(data = district_engagement.groupby('state').mean().reset_index(), y = 'state', x = 'engagement_index')","9914951e":"plt.figure(figsize=(12,7))\nplt.title(\"Engagement By Locale\", {'fontsize':20})\nsns.barplot(data = district_engagement.groupby('locale').mean().reset_index(), y = 'locale', x = 'engagement_index')","7ef6300a":"plt.figure(figsize=(12,7))\nplt.title(\"Engagement By Demography: Percentage of Black\/Hispanic\", {'fontsize':20})\nsns.barplot(data = district_engagement.groupby('pct_black\/hispanic').mean().reset_index(), y = 'pct_black\/hispanic', x = 'engagement_index')","96acf9ba":"plt.figure(figsize=(12,7))\nplt.title(\"Engagement By Socio-Economic Status: Percentage of students with free\/reduced price lunch\", {'fontsize':20})\nsns.barplot(data = district_engagement.groupby('pct_free\/reduced').mean().reset_index(), y = 'pct_free\/reduced', x = 'engagement_index')","c75bd8ea":"plt.figure(figsize=(12,7))\nplt.title(\"Engagement By Socio-Economic Status: County Connections Ratio\", {'fontsize':20})\nsns.barplot(data = district_engagement.groupby('county_connections_ratio').mean().reset_index(), y = 'county_connections_ratio', x = 'engagement_index')","dfe2553f":"plt.figure(figsize=(12,7))\nplt.title(\"Engagement By Socio-Economic Status: Per Pupil Total Expenditure\", {'fontsize':20})\nsns.barplot(data = district_engagement.groupby('pp_total_raw').mean().reset_index(), y = 'pp_total_raw', x = 'engagement_index')","4006fefd":"cali1 = super_df[super_df['district'] == '7975'].groupby('month', sort = False).mean().reset_index()\ncali2 = super_df[super_df['district'] == '7164'].groupby('month', sort = False).mean().reset_index()\nplt.title(\"Monthly Engagement California\", {'fontsize':20})\nsns.lineplot(data=cali1, x=\"month\", y=\"engagement_index\")\nsns.lineplot(data=cali2, x=\"month\", y=\"engagement_index\")","eb6432da":"cali1 = super_df[super_df['district'] == '7975'].groupby('month', sort = False).mean().reset_index()\ncali2 = super_df[super_df['district'] == '7164'].groupby('month', sort = False).mean().reset_index()\nplt.title(\"Monthly Access of Educational Tools California\", {'fontsize':20})\nsns.lineplot(data=cali1, x=\"month\", y=\"pct_access\")\nsns.lineplot(data=cali2, x=\"month\", y=\"pct_access\")","89af2c70":"### Missing Data","e7240525":"## Merged DataFrame","5b85746b":"#### <i>Let's select districts 7975 and 7164 from California<\/i>","a588e7a4":"### Product information data\nThe product file `products_info.csv` includes information about the characteristics of the top 372 products with most users in 2020. The categories listed in this file are part of LearnPlatform's product taxonomy. Data were labeled by our team. Some products may not have labels due to being duplicate, lack of accurate url or other reasons.\n\n| Name | Description |\n| :--- | :----------- |\n| LP ID| The unique identifier of the product |\n| URL | Web Link to the specific product |\n| Product Name | Name of the specific product |\n| Provider\/Company Name | Name of the product provider |\n| Sector(s) | Sector of education where the product is used |\n| Primary Essential Function | The basic function of the product. There are two layers of labels here. Products are first labeled as one of these three categories: LC = Learning & Curriculum, CM = Classroom Management, and SDO = School & District Operations. Each of these categories have multiple sub-categories with which the products were labeled |\n\n","8841a30a":"# <span style = ' color:Blue; font-family: arial'>Answers to Challenge Questions <\/span>","3eca99d6":"##### <i>Here are the products with the largest average engagement index<\/i>","64f25ee8":"## Univariate analysis","5c989fcb":"## Plots","5462c679":"## Correlation","57240603":"## Imports","c3ba1640":"## Fetch Data","56e94080":"### What is the picture of digital connectivity and engagement in 2020?","087a102e":"### 4. Do certain state interventions, practices or policies (e.g., stimulus, reopening, eviction moratorium) correlate with the increase or decrease online engagement?","f4a1fe09":"The Engagement index kept increasing when the pandemic started. It started decresing in June and July, where most schools are out. It then kept increasing in September.","be58a7b8":"### District information data\n\nThe district file `districts_info.csv` includes information about the characteristics of school districts, including data from [NCES](https:\/\/nces.ed.gov\/) (2018-19), [FCC](https:\/\/www.fcc.gov\/) (Dec 2018), and [Edunomics Lab](https:\/\/edunomicslab.org\/). In this data set, we removed the identifiable information about the school districts. We also used an open source tool [ARX](https:\/\/arx.deidentifier.org\/) [(Prasser et al. 2020)](https:\/\/onlinelibrary.wiley.com\/doi\/full\/10.1002\/spe.2812) to transform several data fields and reduce the risks of re-identification. For data generalization purposes some data points are released with a range where the actual value falls under. Additionally, there are many missing data marked as 'NaN' indicating that the data was suppressed to maximize anonymization of the dataset. \n\n| Name | Description |\n| :--- | :----------- |\n| district_id | The unique identifier of the school district |\n| state | The state where the district resides in |\n| locale | NCES locale classification that categorizes U.S. territory into four types of areas: City, Suburban, Town, and Rural. See [Locale Boundaries User's Manual](https:\/\/eric.ed.gov\/?id=ED577162) for more information. |\n| pct_black\/hispanic | Percentage of students in the districts identified as Black or Hispanic based on 2018-19 NCES data |\n| pct_free\/reduced | Percentage of students in the districts eligible for free or reduced-price lunch based on 2018-19 NCES data |\n| county_connections_ratio | `ratio` (residential fixed high-speed connections over 200 kbps in at least one direction\/households) based on the county level data from FCC From 477 (December 2018 version). See [FCC data](https:\/\/www.fcc.gov\/form-477-county-data-internet-access-services) for more information. |\n| pp_total_raw | Per-pupil total expenditure (sum of local and federal expenditure) from Edunomics Lab's National Education Resource Database on Schools (NERD$) project. The expenditure data are school-by-school, and we use the median value to represent the expenditure of a given school district. |","8ca9bbd6":"### Engagement data\nThe engagement data are aggregated at school district level, and each file in the folder `engagement_data` represents data from one school district. The 4-digit file name represents `district_id` which can be used to link to district information in `district_info.csv`. The `lp_id` can be used to link to product information in `product_info.csv`.\n\n| Name | Description |\n| :--- | :----------- |\n| time | date in \"YYYY-MM-DD\" |\n| lp_id | The unique identifier of the product |\n| pct_access | Percentage of students in the district have at least one page-load event of a given product and on a given day |\n| engagement_index | Total page-load events per one thousand students of a given product and on a given day |\n","9c985d61":"## Visualization","e6224297":"### 2. How does student engagement with different types of education technology change over the course of the pandemic?","96ea1d54":"### 3. How does student engagement with online learning platforms relate to different geography? Demographic context (e.g., race\/ethnicity, ESL, learning disability)? Learning context? Socioeconomic status?","13ac105c":"### 1. What is the effect of the COVID-19 pandemic on online and distance learning, and how might this also evolve in the future?","84c59e35":"#### Missing Enggagement Data","64322dd4":"#### Missing Products Info Data","2a90f17c":"#### Missing Districts Info Data","e8e1b77e":"The State of California had announced the shutdown of schools on March 13"}}