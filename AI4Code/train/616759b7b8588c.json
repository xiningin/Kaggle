{"cell_type":{"a0559f0f":"code","955964f7":"code","8b4c0dd0":"code","a007b545":"code","99b6304b":"code","e974f648":"code","e88b5816":"code","018e9a71":"code","cfb49b9c":"code","9387f236":"code","e9f28249":"code","0a5dda9b":"code","94556027":"code","76c46731":"code","4a4ff0ad":"code","b9dadd3c":"code","e2d34907":"code","d9881ea4":"code","b65874fc":"code","7bdb0a69":"code","6935bf1a":"code","3bbb7cef":"code","b5d6dded":"code","758a0d63":"code","32997345":"code","00b628d7":"code","a2902526":"code","4db4f491":"code","958051bc":"code","99ee470d":"code","0feb7c07":"code","26f6f561":"code","1ed7f872":"code","812e94c4":"code","6d774021":"code","5a66e0d9":"code","72945e8c":"code","8d71990c":"code","fb3edce1":"code","4a2f7e4f":"code","2f4be2d6":"code","6d227574":"code","0148c3e1":"code","4a29ae64":"code","f5773565":"code","f02a2ca1":"code","6f1ad9c4":"code","e254f884":"code","4a18ee94":"code","90b0ffe9":"code","27c925d9":"markdown","4f05ee28":"markdown","b4789da8":"markdown","a72d4bb4":"markdown","71043966":"markdown","53d3e05f":"markdown","6cfe8bb8":"markdown","f881e7ca":"markdown","10892f41":"markdown"},"source":{"a0559f0f":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","955964f7":"#loading the dataset\nhotel_demand=pd.read_csv(\"..\/input\/hotel-booking-demand\/hotel_bookings.csv\")","8b4c0dd0":"hotel_demand.head()","a007b545":"hotel_demand.describe()","99b6304b":"hotel_demand.shape","e974f648":"hotel_demand.select_dtypes('object')","e88b5816":"hotel_demand.select_dtypes('object')","018e9a71":"import datetime\n#hotel_demand['reservation_status_date'] = hotel_demand['reservation_status_date'].apply(lambda x:datetime.datetime.strptime(x,'%d%b%Y'))\nhotel_demand['reservation_status_date']=pd.to_datetime(hotel_demand['reservation_status_date'], format='%Y-%m-%d')","cfb49b9c":"hotel_demand.select_dtypes('number')","9387f236":"hotel_demand.isna().sum()","e9f28249":"#missing=hotel_demand.isnull().sum()\nmiss_val=[(c, (hotel_demand[c].isnull().sum()\/len(hotel_demand))*100) for c in hotel_demand]\nmiss_val=pd.DataFrame(miss_val,columns=['Labels','percentage'])\nmiss_val=miss_val[miss_val.percentage>0]\ndisplay(miss_val.sort_values('percentage', ascending=False))\n\n","0a5dda9b":"#since 94% of the values from the column'company' are null, we will drop the column\n\nhotel_demand=hotel_demand.drop(['company'],1)\n\n","94556027":"hotel_demand.shape","76c46731":"#we will impute the missing values from \"agent\" column with mean value\nagent_mean=hotel_demand['agent'].mean()\nhotel_demand['agent']=hotel_demand['agent'].fillna(value=agent_mean)\n\nhotel_demand['agent'].isna().sum()","4a4ff0ad":"hotel_demand['country'].value_counts().head()","b9dadd3c":"# we will impute the missing country value with PRT\nhotel_demand['country']=hotel_demand['country'].fillna(value='PRT')\nhotel_demand['country'].isna().sum()","e2d34907":"#for null values of \"children\" column, we assume they do not have any children, we will replace null values with 0\nhotel_demand['children']=hotel_demand['children'].fillna(value=0)\n\nhotel_demand['children'].isna().sum()","d9881ea4":"#we will define the most frequent visualizations we use. Defining these functions help us use as & when required\n\ndef bar_plot(variable):\n    plt.figure(figsize=(10,8))\n    hotel_demand[variable].value_counts().plot(kind='bar',colormap='Blues_r')\n    plt.title(f'plotting the {variable}')\n    plt.show()\n\n#for calender variables we will define a count plot function\ndef count_plot(variable):\n    plt.figure(figsize=(10,8))\n    sns.countplot(hotel_demand[variable])\n    plt.title(variable)\n    plt.xticks(rotation=45)\n    plt.show()","b65874fc":"hd_corr=hotel_demand.corr()\nplt.figure(figsize=(10,8))\nsns.heatmap(hd_corr)","7bdb0a69":"col=hotel_demand.select_dtypes('object').columns\ncol","6935bf1a":"#lets analyse non-calender dataframe columns one by one\nfor i in col:\n    bar_plot(i)","3bbb7cef":"# as you see the country plot is very cluttered, we will reduce the clutter by grouping the values\nhotel_demand['country'].value_counts()","b5d6dded":"#we will bin the country which have less than 1000 bookings\n\n\n\ndef slots(x):\n    top_country=['PRT','GBR','FRA','ESP','DEU','ITA','IRL','BEL','BRA','NLD','USA','CHE','CN','AUT','SWE']\n    country_bin=['']\n    if x in top_country:\n        country_bin=x\n    else:\n        country_bin='Others'\n    return country_bin\n\nhotel_demand['country_bin']=hotel_demand.apply(lambda x:slots(x['country']),axis=1)\n\n\n\n#thers.tolist()\n\nhotel_demand['country_bin'].value_counts()","758a0d63":"hotel_demand=hotel_demand.drop(['country'],1)\n","32997345":"hotel_demand.head()","00b628d7":"#we will plot the country again\nbar_plot('country_bin')","a2902526":"##Now we will analyse each calender frame with count plot\nhotel_demand.head()","4db4f491":"hotel_demand.select_dtypes(exclude='object').columns","958051bc":"#selecting only calender dataframe\ncalenderdf=['arrival_date_year',\n       'arrival_date_week_number', 'arrival_date_day_of_month']\nfor i in calenderdf:\n    count_plot(i)","99ee470d":"#we will analyse the reservation date\ncount_plot('reservation_status_date')","0feb7c07":"# we see toomuch clutter, to analyse when were most number of bookings,let's dig deeper & understand\n\nhotel_demand['res_year']=hotel_demand.reservation_status_date.dt.strftime('%Y')\nhotel_demand['res_month']=hotel_demand.reservation_status_date.dt.strftime('%m')\nhotel_demand['res_day']=hotel_demand.reservation_status_date.dt.strftime('%d')","26f6f561":"#let's plot these\ncount_plot('res_year')","1ed7f872":"count_plot('res_month')","812e94c4":"count_plot('res_day')","6d774021":"#we will compare each year reservations with month\nhotel_demand.head()","5a66e0d9":"#f,ax=plt.subplots(1,2,figsize=(14,6))\nres_plot=hotel_demand.groupby(['res_year','res_month'])['res_day'].size().to_frame(name = 'Bookings').reset_index()","72945e8c":"type(res_plot)","8d71990c":"res_plot","fb3edce1":"sns.catplot('res_month','res_day',col='res_year',data=hotel_demand)\nplt.show()","4a2f7e4f":"sns.factorplot(x='res_month',y='Bookings',col='res_year',data=res_plot)\nplt.show()","2f4be2d6":"# We can also plot these with respect to hotels\nres_hotel_plot=hotel_demand.groupby(['hotel','res_year','res_month'])['res_day'].size().to_frame(name = 'Bookings').reset_index()","6d227574":"res_hotel_plot","0148c3e1":"sns.pairplot(res_hotel_plot, hue='hotel')","4a29ae64":"#Now lets analyse the cancellation trend\nhotel_demand.head()","f5773565":"count_plot('is_canceled')","f02a2ca1":"# We can also plot these with respect to hotels\ncance_plot=hotel_demand.groupby(['hotel','is_canceled','res_year', 'res_month'])['res_day'].size().to_frame(name = 'Bookings').reset_index()\ncance_plot.head(30)","6f1ad9c4":"sns.catplot(x='is_canceled',hue='res_year', col='hotel', data=hotel_demand, kind='count')\nplt.show()","e254f884":"plt.figure(figsize = (16,9))\nsns.set(style='darkgrid',)\n \n# Draw line plot of size and total_bill with parameters and hue \"day\"\nsns.lineplot(x = \"res_year\", y = \"Bookings\", data = cance_plot, hue = \"is_canceled\",\n            style = \"is_canceled\", palette = \"hot\", dashes = False, \n            markers = [\"o\", \"<\", \">\", \"^\"],  legend=\"brief\",)\n \nplt.title(\"Reservations & cancelations\", fontsize = 20)\nplt.xlabel(\"Booking Year\", fontsize = 15)\nplt.ylabel(\"Bookings\", fontsize = 15)\nplt.show()","4a18ee94":"hotel_demand.head()","90b0ffe9":"hotel_demand.columns","27c925d9":"#\"reservation_status_date\" shoudl be integer, we will convert the datatype\nimport datetime\n\nfrom datetime import datetime\n#hotel_demand[\"reservation_status_date\"]=pd.to_numeric(hotel_demand[\"reservation_status_date\"]).astype(np.int64)\nfor i in hotel_demand['reservation_status_date']:\n    hotel_demand['reservation_status_date']=datetime.date(i)\n","4f05ee28":"##### Observations:\n\n1. City hotel has more number of bookings than the resort hotel\n2. August month has seen more bookings followed by July where as December & January saw least number of bookings\n3. There were more transient customers and majority of the customers did not pay any deposit and were least number of refundable deposit payments\n4. Over 70,000 customers preferred 'A' type room followed by 'D'type with approx 28,000 bookings compared to other category\n5. Near to 49,000 bookings were from PRT followed by GBR with just 12000-13000 bookings.","b4789da8":"### Univariate Analysis","a72d4bb4":"##### Observations:\n\nAs we see, there were no reservations in 2014 and 2016 has most number of reservations, which is in line with our arrival_year data.\n\nWhere July month has most number of reservations where as first & third week sees the spike in the reservations.","71043966":"##### As you see, city hotel has more number of cancellations than the resort hotel. However cancellations at Resort Hotel looks more consistent.","53d3e05f":"### Hotel booking demand\n\n##### We will perform extensive exploratory data analysis on this dataset. This dataset contains hotel booking details of two hotel \"Resort hotel\" &  \"City Hotel\". it has the information such as arrival time, number of people, through which portal booking was done, whether the person is repested guest and many more , which we will explore in details in this analysis.\n\n##### Time Series Problem: Since this problem involves predicting the demand(we are not exploring modeling part) of the bookings. \n\n##### I will also try my hands on feature scaling techniques for time series problem(which i'm very new to).","6cfe8bb8":"##### Now we have understood the dataset & filled all the null values. we will start by analysing each calender dataframe since its a time series problem, these frames give us the forecast of the bookings accroding to the calender.","f881e7ca":"#### Observations:\n\n1. We have total of 119390 rows & 32 columns\n2. 20 columns have numerical data & rest 12 columns have categorical data\n3. Only 4 columns(children,country, agent & company) have null values and we will analyse & identify if the columns with null should be dropped or can be imputed with the nearest approx value.","10892f41":"I have used both catplot & factorplot to analyse the trend of the bookings against the particular year. As you see there few reservations in 2014 in october & November however rest of the year remains with zerp bookings.\nIn year 2015, reservations spike in the October month and goes down drastically in November & remains flat December.\nIn year 2016, similar  trend is observed with reservations increasing in october. Contrary, in year 2017 sees drastic dip resrevations in september and sees no reservations for next 3months.\n\nReasons for this trend is unknown, since we have only 3years data, might be able to comment only we had data of few more years."}}