{"cell_type":{"b6dc4119":"code","56c10418":"code","b4261085":"code","0ca8607b":"code","3565e812":"code","a073bcbb":"code","1361baff":"code","81ca2974":"code","bc90cef0":"code","edf8e85b":"code","31537025":"code","c0b8d4f2":"code","63cad6c3":"code","585a3ca1":"code","2dc56d6c":"code","3dac3e4a":"code","0a86141b":"code","1e047174":"code","caf3e308":"code","80ae96c0":"code","89e62de7":"code","3c7414e5":"code","4c55c7f0":"code","dbe7e8e8":"code","e01ccf02":"code","20d75657":"code","66a8af73":"code","cc6b1b02":"code","02397689":"code","bb322fb4":"code","e4f9c2f9":"markdown","dace48a4":"markdown","b579ec3c":"markdown","97b9590f":"markdown","6b0ff644":"markdown","e8939f02":"markdown","78652622":"markdown","7bbb8806":"markdown"},"source":{"b6dc4119":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","56c10418":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","b4261085":"data = pd.read_csv('..\/input\/online-shoppers-purchasing-intention-dataset\/online_shoppers_intention.csv')","0ca8607b":"data.head()","3565e812":"sns.heatmap(data.isnull(), cmap='bone')","a073bcbb":"data.info()","1361baff":"data.describe()","81ca2974":"plt.figure(figsize = (12,7))\nsns.heatmap(data.corr(), annot = True, cmap='coolwarm')\nplt.title('Data Correlation')","bc90cef0":"sns.countplot(x = data['Revenue'], palette='coolwarm')\nplt.title('Revenue')","edf8e85b":"sns.set_style('darkgrid')\nplt.figure(figsize = (20,10))\nplt.subplot(1,2,1)\nplt.title('Distribution of number of pages of this administrative type user visited ')\nsns.countplot( x = data['Administrative'])\n\n\nplt.subplot(1,2,2)\nplt.title('Distribution of number of pages of this administrative type user visited with Respect to Revenue')\nsns.countplot(x= 'Administrative', hue = 'Revenue', data = data, palette='coolwarm')\nplt.show()","31537025":"sns.histplot(data['Administrative_Duration'], bins = [0,100,200,300,400,500],color='Black')\nplt.title('This is the distribution of amount of time spent on Administrative pages.')\nplt.show()","c0b8d4f2":"plt.figure(figsize = (20,10))\nplt.subplot(1,2,1)\nplt.title('Distribution of number of pages of this informational type user visited ')\nsns.countplot( x = data['Informational'])\n\n\nplt.subplot(1,2,2)\nplt.title('Distribution of number of pages of this administrative type user visited with Respect to Revenue')\nsns.countplot(x= 'Informational', hue = 'Revenue', data = data, palette='coolwarm')\nplt.show()","63cad6c3":"sns.histplot(data['Informational_Duration'], bins = [0,100,200,300,400,500],color='Black')\nplt.title('This is the distribution of amount of time spent on Informational pages.')\nplt.show()","585a3ca1":"continous_clm = ['ProductRelated','ProductRelated_Duration', 'BounceRates', 'ExitRates' ,'PageValues' ]\nfor i in continous_clm:\n        plt.figure(figsize=(7,7))\n        sns.histplot(data[i], color='black')\n        plt.title('Distribution of {}'.format(i))\n        plt.show()","2dc56d6c":"plt.figure(figsize = (15,7))\nplt.subplot(1,2,1)\nplt.title('Distribution of people visited by months ')\nplt.pie(x = data['Month'].value_counts(),\n       labels = ['May', 'Nov', 'Mar', 'Dec', 'Oct', 'Sep', 'Aug', 'Jul', 'June', 'Feb'],\n       autopct='%.2f',\n       colors=['#ff9999','#66b3ff','#99ff99','#ffcc99'],\n       shadow = True,\n       explode = (0.1,0.1,0.1,0,0,0,0,0,0,0))\n\n\nplt.subplot(1,2,2)\nplt.title('Distribution of people visited by months with respect to Revenue')\nsns.countplot(x= 'Month', hue = 'Revenue', data = data, palette='Spectral_r')\nplt.show()","3dac3e4a":"plt.figure(figsize = (15,7))\nplt.subplot(1,2,1)\nplt.title('Distribution of people visited by Operating System ')\nsns.countplot(x = data['OperatingSystems'] , palette='hot')\n\nplt.subplot(1,2,2)\nplt.title('Distribution of people visited by Operating System with respect to Revenue')\nsns.countplot(x= 'OperatingSystems', hue = 'Revenue', data = data, palette='Spectral')\nplt.show()","0a86141b":"plt.figure(figsize = (15,7))\nplt.subplot(1,2,1)\nplt.title('Distribution of people visited by Browser')\nsns.countplot(x = data['Browser'] , palette='hot')\n\nplt.subplot(1,2,2)\nplt.title('Distribution of people visited by Browser with respect to Revenue')\nsns.countplot(x= 'Browser', hue = 'Revenue', data = data, palette='Spectral')\nplt.show()","1e047174":"plt.figure(figsize = (15,7))\nplt.subplot(1,2,1)\nplt.title('Distribution of people visited by Region')\nsns.countplot(x = data['Region'] , palette='hot')\n\nplt.subplot(1,2,2)\nplt.title('Distribution of people visited by Region with respect to Revenue')\nsns.countplot(x= 'Region', hue = 'Revenue', data = data, palette='Spectral')\nplt.show()","caf3e308":"plt.figure(figsize = (15,7))\nplt.subplot(1,2,1)\nplt.title('Distribution of people visited by Traffic Type')\nsns.countplot(x = data['TrafficType'] , palette='hot')\n\nplt.subplot(1,2,2)\nplt.title('Distribution of people visited by Trafffic Type with respect to Revenue')\nsns.countplot(x= 'TrafficType', hue = 'Revenue', data = data, palette='Spectral')\nplt.show()","80ae96c0":"plt.figure(figsize = (15,7))\nplt.subplot(1,2,1)\nplt.title('Visitor Types ')\nplt.pie(x = data['VisitorType'].value_counts(),\n       labels =['Returning_Visitor', 'New_Visitor', 'Other'] ,\n       autopct='%.2f',\n       colors=['#ff9999','#66b3ff','#99ff99'],\n       shadow = True,\n       explode = (0.1,0.1,0.1))\n\n\nplt.subplot(1,2,2)\nplt.title('Visitor Type with respect to Revenue')\nsns.countplot(x= 'VisitorType', hue = 'Revenue', data = data, palette='Spectral_r')\nplt.show()","89e62de7":"plt.figure(figsize = (7,7))\nplt.title('Weekend Vs Revenue')\nsns.countplot(x= 'Weekend', hue = 'Revenue', data = data, palette='Spectral_r')\nplt.show()","3c7414e5":"data['Revenue'] = data['Revenue'].astype(int)\ndata['Revenue'].value_counts()","4c55c7f0":"data['Weekend'] = data['Weekend'].astype(int)\ndata['Weekend'].value_counts()","dbe7e8e8":"data = pd.get_dummies(data = data, columns=['Month', 'VisitorType'], drop_first=True)\ndata.shape","e01ccf02":"from sklearn.model_selection import train_test_split\nfrom imblearn.over_sampling import RandomOverSampler\nx = data.drop(columns='Revenue')\ny = data['Revenue']\nos = RandomOverSampler()\nx_oversample,y_oversample = os.fit_resample(x,y)\nprint(x_oversample.shape)\nprint(y_oversample.shape)","20d75657":"from sklearn.model_selection import train_test_split\n\nx_train,x_test,y_train,y_test = train_test_split(x_oversample,y_oversample,test_size=0.30 , random_state=42)\nprint(x_train.shape)\nprint(y_train.shape)\nprint(x_test.shape)\nprint(y_test.shape)","66a8af73":"from sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier()\nrfc.fit(x_train,y_train)\ny_predict = rfc.predict(x_test)\ny_predict\nfrom sklearn.metrics import confusion_matrix\nconfusion_matrix(y_test,y_predict )","cc6b1b02":"score_rfc = rfc.score(x_test,y_test)\nscore_rfc","02397689":"from sklearn.neighbors import KNeighborsClassifier\nKNN = KNeighborsClassifier(n_neighbors=2)\nKNN.fit(x_train, y_train)\ny_predict_KNN = KNN.predict(x_test)\ny_predict_KNN\nfrom sklearn.metrics import confusion_matrix\nconfusion_matrix(y_test,y_predict_KNN )","bb322fb4":"score_KNN = KNN.score(x_test,y_test)\nscore_KNN","e4f9c2f9":"## Random Forest Classifier","dace48a4":"## No Null Values :)","b579ec3c":"## Data is ready.. now lets split it and perform oversampling on our data as our ratio of True:False is less for revenue.","97b9590f":"## Training Our Model","6b0ff644":"## One Hot Encoding with all Categorical Values","e8939f02":"### Random Forest Classifier is 95% Accurate. \n### Happy Learning :)","78652622":"## Exploratory Data Analysis","7bbb8806":"## K Nearest Neighbours"}}