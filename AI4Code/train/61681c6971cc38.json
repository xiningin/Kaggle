{"cell_type":{"d65e77ba":"code","cca98c0d":"code","9ad10771":"code","99c2c29e":"code","7597656b":"code","395e240f":"code","0de509b7":"code","d8dc225b":"code","b490bc56":"code","33ed34ff":"code","321ed838":"code","53b53b81":"code","7f43e24b":"code","ed38a24c":"code","5d589915":"code","fe5708f3":"code","985e5dfc":"code","e17a89d0":"markdown","6f150dc3":"markdown","1381fb6c":"markdown","742cd1e5":"markdown","3a10cd26":"markdown","4ec13bb8":"markdown","62cea121":"markdown","a86b996a":"markdown","d9ffc6f0":"markdown"},"source":{"d65e77ba":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport folium\nfrom folium import plugins\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","cca98c0d":"#loading the csv file\ndata=pd.read_csv('..\/input\/crime.csv',encoding='latin-1')","9ad10771":"#reading the data \ndata.head()","99c2c29e":"#Checking the datatypes of the features\ndata.info()","7597656b":"#creating a function to return to 10 frequent rows in a relative columns\ndef top10(x):\n    return data[x].value_counts().head(10)\n\n#lets check the top 10 offense_code_group\ntop10('OFFENSE_CODE_GROUP').plot.bar()","395e240f":"#lets look into the offense description and the frequency with respect to the offense group Motor Vehicle Accident Response\ndata['OFFENSE_DESCRIPTION'][data['OFFENSE_CODE_GROUP']== 'Motor Vehicle Accident Response'].value_counts().sort_values().plot.barh()","0de509b7":"#lets take a look in to Larceny and move on to the different features\ndata['OFFENSE_DESCRIPTION'][data['OFFENSE_CODE_GROUP']== 'Larceny'].value_counts().sort_values().plot.barh()","d8dc225b":"#lets check the missing values in the column\ndata.DISTRICT.isna().sum()\n","b490bc56":"#lets look at the top 10 frequent crimes enabled districts\ntop10('DISTRICT').plot.bar()","33ed34ff":"#lets see the kind of thefts that's most taken place in the top 3 disctricts\ndata['OFFENSE_CODE_GROUP'][data['DISTRICT']=='B2'].value_counts().head(10).plot.bar()","321ed838":"fig,a= plt.subplots(1,3,figsize=(20,6))\ni=0\ncolumn=['B2','C11','D4']\nfor col in column:\n    a[i].bar(data['OFFENSE_CODE_GROUP'][data['DISTRICT']==col].value_counts().head(10).index,\n          data['OFFENSE_CODE_GROUP'][data['DISTRICT']==col].value_counts().head(10).values)\n    plt.draw()\n    a[i].set_xticklabels(a[i].get_xticklabels(),rotation=30,ha='right')\n    a[i].set_xlabel(col)\n    a[i].set_ylabel('frequency')\n    i+=1\n   \nplt.show()","53b53b81":"#replacing the  null values with N in the shooting column \ndata['SHOOTING']=data['SHOOTING'].replace(np.nan,'N')","7f43e24b":"data['OFFENSE_DESCRIPTION'][data['SHOOTING']=='Y'].value_counts().head(10).sort_values().plot.barh()\n","ed38a24c":"data[['Lat','Long','STREET']].head()","5d589915":"#setting up the map for the boston co-ordinates\nmapping=folium.Map([42.262607, -71.121186],zoomstart=11)\nmapping","fe5708f3":"#now lets convert the latitudes and longitudes of streets in to a (n,2) matrix\nstreetMap= data[['Lat','Long']][data['SHOOTING']=='Y']\n#replacing the null values with zero\nstreetMap=streetMap.replace(np.nan,0)\n#converting the latitude and longitude to (n,2)matrix\nstreetMap= streetMap.values\n#now adding the heat signatures to the mapping\nmapping.add_child(plugins.HeatMap(streetMap,radius=15))\nmapping","985e5dfc":"#lets check the drug related crimes\nstreetMap=data[['Lat','Long']][data['OFFENSE_CODE_GROUP']=='Drug Violation']\n#replacing the null values with zero\nstreetMap=streetMap.replace(np.nan,0)\n#making the (n,2) matrix for [lat,long] values\nstreetMap=streetMap.values\n#injecting heat signature into the map\nmapping.add_child(plugins.HeatMap(streetMap,radius=10))","e17a89d0":"D-4 district is more prone to Larceny thefts","6f150dc3":"Now I would like to explore the frequency and the gravity of the columns \n1.  OFFENSE_CODE_GROUP\n2.  DISTRICT","1381fb6c":"heat map suggestes Dorchester Neighborhood has more shootings, checked the google search for the neighborhood and noticed two news highlights and both include shooting related incedents.","742cd1e5":"we can understand from the above that the most of the Motor Vehicle accidents led to the Property damages and the human injuries are comparitively less\n\n","3a10cd26":"The most frequently occured offense code group is Motor Vehicle Accident Response. Let us further investigate into that offense code group\n","4ec13bb8":"* let us now tap into the Geo-spatial data visualization","62cea121":"*  There are just 1774 missing values in the above column so we can ignore and perform the analysis as it would not effect much****","a86b996a":"The above visualization shows most of gunshooting acts fall under the Assault-Aggrevated-Battery and Murder,Non-negligient Manslaughter","d9ffc6f0":"we can notice that most of thefts of the personal properties were taken place in the buildings and the shops"}}