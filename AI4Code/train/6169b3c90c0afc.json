{"cell_type":{"3eefba3c":"code","a862116f":"code","1e6833fe":"code","8da34eea":"code","78843da4":"code","7764c076":"code","51bb1ddc":"code","11d8c947":"code","33bce981":"code","1152d598":"markdown","7230ac4a":"markdown"},"source":{"3eefba3c":"import sys\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom datetime import datetime\nfrom pytz import timezone\nprint('tic', datetime.now(timezone('Canada\/Pacific')).isoformat(timespec='minutes'))","a862116f":"train = pd.read_csv('..\/input\/jane-street-market-prediction\/train.csv')\n\n# just slimming down\n\n# remove rows we don't need\ntrain = train.loc[ train['weight']>0 ]\n\n# remove columns we don't need\ntrain = train[ ['resp', 'resp_1', 'resp_2', 'resp_3', 'resp_4', 'date', 'weight'] ]","1e6833fe":"targets = ['resp', 'resp_1', 'resp_2', 'resp_3', 'resp_4']\n\ndailyp = pd.DataFrame(index=train['date'].unique(), columns=targets)\ndailyp.index.name = 'date'\nplt.figure(figsize=(15, 30))\nfor ntarget, target in enumerate(targets):\n# assuming action=1 when target>0\n    df = train.loc[ train[target]>0 ].copy()\n    dailyp[target] = df.groupby('date', sort=False).apply(lambda x: (x['weight'] * x[target]).sum())\n    plt.subplot(5, 1, 1+ntarget)\n    plt.plot(dailyp.index, dailyp[target], '.r')\n    plt.axvline(85)\n    plt.grid(); plt.xlabel('date'); plt.ylabel('daily p'); plt.title(target)","8da34eea":"# sanity\npick = train.loc[ (train['date']==333) & (train['weight']>0) & (train['resp_3']>0) ]\nmanual = (pick['weight']*pick['resp_3']).sum()\nauto = dailyp.loc[333, 'resp_3']\nratio = (manual-auto)\/auto\nif ratio > .01:  # 1% tolerance\n    print('insane, not ok')\nelse:\n    print('sane, ok')\nmanual, auto, ratio","78843da4":"dailyp","7764c076":"plt.figure(figsize=(15, 30))\nfor ntarget, target in enumerate(targets):\n    plt.subplot(5, 1, 1+ntarget)\n    dailyp[f'{target}_quantile'] = pd.qcut(dailyp[target], 5, labels=False).astype(int)\n    sns.scatterplot(data=dailyp, x='date', y=target, hue=f'{target}_quantile', palette='tab10')\n    plt.axvline(85)\n    plt.grid()","51bb1ddc":"# sanity\nmanual = np.where(dailyp['resp_3'].sort_values()>=dailyp.loc[333, 'resp_3'])[0].min()  \/\/  (len(dailyp)\/5)\nmanual = int(manual)\nauto = dailyp.loc[333][['resp_3_quantile']].values\nnp.testing.assert_allclose(auto, manual)\nmanual, auto","11d8c947":"# further sanity\n# quantiles by definition should have flat histograms\nplt.hist(dailyp['resp_3_quantile'])","33bce981":"print('toc', datetime.now(timezone('Canada\/Pacific')).isoformat(timespec='minutes') )","1152d598":"# Context\nSome Kagglers are training without samples with ```date```<=85. There is indeed a marked aberration on day 85. This notebook displays the aberration, without advocating for those samples to be dismissed as outliers.\n\nCumulative plots of ```feature_*``` and number of trades per day are already given in the discussion, [Did Jane Street modify their trading model around day 85?](https:\/\/www.kaggle.com\/c\/jane-street-market-prediction\/discussion\/201930). Here I plot the daily $p_i$ against ```date```. As defined under the competition [evaluation tab](https:\/\/www.kaggle.com\/c\/jane-street-market-prediction\/overview\/evaluation) for each ```date``` i, we have\n\n$ p_i = \\sum_j (weight_{ij} * resp_{ij} * action_{ij}) $\n\n$ t = \\frac{\\sum p_i}{\\sqrt{\\sum p_i^2}} * \\sqrt{\\frac{250}{\\mid i \\mid}} $","7230ac4a":"# Quantiles\nNow break-down the red dots above into components. Same points, just richer info and richer colours."}}