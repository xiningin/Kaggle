{"cell_type":{"5aeb2bf6":"code","a41203aa":"code","4ca0ca50":"code","9a7f80be":"code","e6f53a13":"code","93cfec7c":"code","d20ce762":"code","d6790393":"code","38089967":"code","11c10e71":"code","7ac7aaed":"code","b8b1963a":"code","4ae77c33":"code","0804efac":"code","932803a1":"code","61567d56":"code","de4d5400":"code","9d5bfe1e":"code","4441e8eb":"code","79b91318":"code","90cafd39":"code","17ad437a":"code","3b02c363":"code","1a38d421":"code","6077f326":"code","8cd83aa0":"code","85293b9c":"code","f3822108":"code","22465915":"code","ff0a63f9":"code","eacf1458":"code","673eb32d":"code","ceb8b7e5":"code","2bb9c561":"code","4fda6028":"code","f03ce8f0":"code","daed6687":"code","d5baad81":"code","dd842004":"code","8c126ed0":"code","a4c24b96":"code","1a128add":"code","4564ae83":"code","0a0f7699":"code","2d905d26":"code","cfad0d85":"code","ead407ef":"code","d1cda4d7":"code","cadc559c":"code","236f534f":"code","ce0a84e6":"code","33223710":"code","6fb9db74":"code","ca348ad2":"code","ad6c5861":"code","9638dd80":"code","f1b442f8":"code","f10188e5":"code","0941305c":"code","5e37582b":"code","9a1ca6f1":"code","647defd3":"code","ee12450c":"code","8ed6f166":"code","e0109e3a":"code","04a14a96":"code","518f41e7":"code","43729cf1":"code","f5bc0458":"code","da7cdb5e":"code","eecff57f":"code","d3152b18":"code","64f07ece":"code","f5b6f2b2":"code","b15c8487":"code","7c709d80":"code","ade8cc55":"code","cb9940f5":"code","47f09eb5":"code","1f1a35a2":"markdown","77fda846":"markdown","f41474b5":"markdown","753b2861":"markdown","4d7f6bf0":"markdown","cdd156cb":"markdown","d87a87ac":"markdown","420f9463":"markdown","e471a5b1":"markdown","b8d09d51":"markdown","f37163f7":"markdown","69d96e5e":"markdown","7a21459a":"markdown","0a532b6c":"markdown","0923425b":"markdown","d381274c":"markdown","5df6af91":"markdown","5d8284be":"markdown","fdc3bf63":"markdown","5dafa1d5":"markdown","accd1377":"markdown","94985e5e":"markdown","a6eb6252":"markdown","dc7c8fee":"markdown","a551b1e6":"markdown","56a65650":"markdown","70bc3c6a":"markdown","b6fe1add":"markdown","e51998f4":"markdown","35558b94":"markdown","a0aaaf86":"markdown","7f29819f":"markdown","5bc37496":"markdown","0a81b7f5":"markdown","4e46cab3":"markdown","4c4959ad":"markdown","bddf870c":"markdown","a8c9e95b":"markdown","30cbc9a8":"markdown","740624f6":"markdown","9b10ab4b":"markdown","d44f3ce0":"markdown","48d7f912":"markdown","0c0e631e":"markdown","56af5dd6":"markdown","1f3088be":"markdown","dbba320b":"markdown","e0cca740":"markdown","d635c5f2":"markdown","5253d36e":"markdown","234bb819":"markdown","3c40fca8":"markdown","fefdac22":"markdown","2ccb6f76":"markdown","d06d1ea7":"markdown","74a4c5ac":"markdown","e3b37ac5":"markdown","2594bcb4":"markdown","808ef23f":"markdown","8660858c":"markdown","cad9a842":"markdown","07c94831":"markdown","a6fe4a01":"markdown","5cdc48ec":"markdown","f26d406a":"markdown","fad22bdf":"markdown","dbc92070":"markdown","13b226a9":"markdown","f78d1981":"markdown"},"source":{"5aeb2bf6":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n","a41203aa":"# figure set up\n%config InlineBackend.figure_format = 'svg'","4ca0ca50":"%%javascript\nIPython.OutputArea.prototype._should_scroll = function(lines){\n    return false;\n}","9a7f80be":"#read the data\ndf = pd.read_csv('..\/input\/KaggleV2-May-2016.csv')","e6f53a13":"# check the data\ndf.head()","93cfec7c":"# check structure of the data\ndf.info()","d20ce762":"# change columns name\n\nnew_col_name = ['patient_id', 'appointment_id','gender','schedule_day','appointment_day','age','neighborhood',\n               'scholarship','hypertension','diabetes','alcoholism','handicap',\n               'sms_received','no_show']\ndf.columns = new_col_name","d6790393":"# check again\ndf.head(2)","38089967":"# check missing value\ndf.isnull().sum()","11c10e71":"# change data type of some columns\ndf['patient_id'] = df['patient_id'].astype('int64')\ndf['schedule_day']= pd.to_datetime(df['schedule_day'])\ndf['appointment_day']= pd.to_datetime(df['appointment_day'])","7ac7aaed":"df.dtypes","b8b1963a":"# check summary statistics\ndf.describe()","4ae77c33":"# statistics for all columns\n# df.describe(include= 'all');","0804efac":"df[df['age']< 0]","932803a1":"# drop row with condition\ndf.drop(df[df['age'] < 0].index, inplace =True)","61567d56":"# create mask \nshowed_up = df['no_show'] == 'No'\nnot_showed_up = df['no_show'] == 'Yes'","de4d5400":"# age versus showed up or not\n\ndf.age[showed_up].hist(label = 'showed up', alpha = 0.5, bins = 40)\ndf.age[not_showed_up].hist(label = 'not showed up', alpha = 0.5, bins =40)\nplt.xlabel('Age')\nplt.ylabel('Count')\nplt.title('Age vs No Show Histogram')\nplt.legend();","9d5bfe1e":"# in no_show column No means patient showed up and yes means patient did not showed up\nreplacement = { 'No': 'Showed up', \n              'Yes': 'not showed up'}\ndf['no_show'].replace(replacement, inplace = True)","4441e8eb":"sns.boxplot(x ='no_show', y= 'age', data =df);\nplt.title('Age vs No Show Boxplot')\nplt.xlabel('No Show')\nplt.ylabel('Age');\n","79b91318":"df.groupby('no_show')['age'].mean()","90cafd39":"# more visulization","17ad437a":"age_noshow = pd.crosstab(index = df['age'],\n                        columns = df['no_show'], normalize = 'index')\nage_noshow.head()","3b02c363":"age_noshow.plot(kind = 'bar', stacked = True, figsize=(12,6), color = ['skyblue', 'red'], rot= 90);\nplt.xlabel('Age')\nplt.ylabel('Proportion')\nplt.title('Age vs NO Show proportion in Bar Diagram')\nplt.legend();","1a38d421":"from scipy.stats import ttest_ind","6077f326":"## make separate coulumn\nshowed_up = df[df.no_show == 'Showed up'].age\nnot_showed_up = df[df.no_show != 'Showed up'].age","8cd83aa0":"test = ttest_ind(showed_up, not_showed_up)","85293b9c":"print('p value for t test is: {:.5f}'.format(test.pvalue))","f3822108":"# original value \ntest.pvalue","22465915":"#replace label, just for make it clear\nreplacement_gender = { 'F': 'Female', \n              'M': 'Male'}\ndf['gender'].replace(replacement_gender, inplace = True)","ff0a63f9":"# plot of gender\nsns.countplot(df['gender']);\nplt.xlabel('Gender')\nplt.ylabel('Count')\nplt.title('Gender Bar Diagram');","eacf1458":"# table\ngender_noshow = pd.crosstab(index=df[\"gender\"],\n            columns=df[\"no_show\"])\ngender_noshow","673eb32d":"# total pateints\ndf.no_show.value_counts()","ceb8b7e5":"# plot \ngender_noshow.plot(kind='bar',stacked = True)\nplt.xlabel('Gender')\nplt.ylabel('Count')\nplt.title('Gender vs No Show Stacked Bar Diagram');\n","2bb9c561":"## if you want to see propotionally\npd.crosstab(index=df[\"gender\"], \n            columns=df[\"no_show\"], normalize = 'index')","4fda6028":"# plot of proportion data\npd.crosstab(index=df[\"gender\"], \n            columns=df[\"no_show\"], normalize = 'index').plot(kind='bar', \n                                     stacked = True);\nplt.xlabel('Gender')\nplt.ylabel('Proportion')\nplt.title('Gender vs No Show Bar Diagram')\nplt.legend(loc = 9);","f03ce8f0":"\ngender_noshow = pd.crosstab(index=df[\"gender\"],\n            columns=df[\"no_show\"])\ngender_noshow","daed6687":"\ndf.groupby('gender')['no_show'].value_counts().unstack()","d5baad81":"from scipy.stats import chi2_contingency","dd842004":"chi2, p, dof,ex = chi2_contingency(gender_noshow, correction=False)","8c126ed0":"print('chi-squared value is: {0:6.3f}'.format(chi2))","a4c24b96":"print('p value is: {0:6.3f}'.format(p))","1a128add":"column_plot = ['scholarship', \n               'hypertension',\n               'diabetes', \n               'alcoholism', \n               'handicap', \n               'sms_received']","4564ae83":"# count patient number in each group\nfig = plt.figure(figsize= (8,12))\nfor number, column in enumerate(column_plot):\n    axes = fig.add_subplot(3,2, number+1)\n    axes.set_xlabel(column.capitalize())\n    axes.set_title('Bar Diagram for ' + column.capitalize())\n    df[column].value_counts().plot(kind = 'bar', ax = axes, color = ['skyblue', 'orange'])\n    plt.ylabel('Count')\nplt.tight_layout()","0a0f7699":"# this plot for each group with patient who showed up and not showed up\n\ncolumn_plot = ['scholarship', \n               'hypertension',\n               'diabetes', \n               'alcoholism', \n               'handicap', \n               'sms_received']\n\nfig = plt.figure(figsize= (8,12))\nfor number, column in enumerate(column_plot):\n    axes = fig.add_subplot(3,2, number+1)\n    axes.set_title(column.capitalize() + ' vs No Show')\n    pd.crosstab(index = df[column], columns = df['no_show']).plot(kind = 'bar',\n                                                                           stacked = True, \n                                                                           ax = axes, \n                                                                          color = ['skyblue','orange'])\n    axes.set_xlabel(column.capitalize())\n    plt.ylabel('Count')\n    \nplt.tight_layout()","2d905d26":"# this plot is same as above one execpt it show proportion.\ncolumn_plot = ['scholarship', \n               'hypertension',\n               'diabetes', \n               'alcoholism', \n               'handicap', \n               'sms_received']\n\nfig = plt.figure(figsize= (8,12))\nfor number, column in enumerate(column_plot):\n    axes = fig.add_subplot(3,2, number+1)\n    axes.set_title(column.capitalize() + ' vs No Show')\n    pd.crosstab(index = df[column], columns = df['no_show'],normalize = 'index').plot(kind = 'bar',\n                                                                           stacked = True, \n                                                                           ax = axes, \n                                                                          color = ['skyblue','orange'])\n    \n    axes.set_xlabel(column.capitalize())\n    plt.ylabel('Proportion')\nplt.tight_layout() \nplt.legend(loc = 3);","cfad0d85":"chi_test =    ['scholarship', \n               'hypertension',\n               'diabetes', \n               'alcoholism', \n               'handicap', \n               'sms_received']\n\nfor column in (chi_test):\n    chi2, p, dof,ex = chi2_contingency(pd.crosstab(index=df[column], columns=df[\"no_show\"]), correction=False)\n    print ('chi-squared test- p value for {} is: {r:6.5f}'. format(column,r = p))\n\n    \n    ","ead407ef":"# make new column  \ndf['day'] = df.appointment_day.dt.weekday_name","d1cda4d7":"# plot number of appointment weekday\ndf['day'].value_counts().plot(kind = 'bar');\nplt.xlabel('Days')\nplt.ylabel('Count')\nplt.title('Number of Appointment');","cadc559c":"days = pd.crosstab(index = df['day'],\n           columns = df['no_show'])\ndays","236f534f":"days_p = pd.crosstab(index = df['day'],\n           columns = df['no_show'], normalize = 'index').plot(kind = 'bar', stacked = True)\n","ce0a84e6":"pd.crosstab(index = df['day'],\n           columns = df['no_show'], normalize = 'index')","33223710":"chi2, p, dof,ex = chi2_contingency(days, correction=False)","6fb9db74":"print ('p value is : {r:5.5f}'.format(r = p))","ca348ad2":"neighbor = pd.crosstab(index=df[\"neighborhood\"], \n            columns=df[\"no_show\"])\nneighbor_sort = neighbor.sort_values('Showed up', ascending= False)","ad6c5861":"neighbor_sort.plot(kind='bar',figsize = (12,6), fontsize = 6,\n                                     stacked = True)\n\nplt.xlabel('Neighborhood')\nplt.ylabel('Count')\nplt.title('Neighborhood vs No Show')\n\nplt.legend();","9638dd80":"# check the dataset\ndf.head()","f1b442f8":"## drop columns\ndf.drop(['patient_id', 'appointment_id','schedule_day',\n         'appointment_day','neighborhood'], axis = 1, inplace = True)","f10188e5":"df.head()","0941305c":"# copy data set\ndf_2 = df.copy()","5e37582b":"column_plot = ['gender', 'scholarship', \n               'hypertension',\n               'diabetes', \n               'alcoholism', \n               'handicap', \n               'sms_received',\n               'day',\n               'no_show']","9a1ca6f1":"# change columns to category type using for loop\nfor cl in column_plot:\n    df_2[cl] = df_2[cl].astype('category')","647defd3":"# can be done manually\n\n# df['gender'] = df['gender'].astype('category')\n# df['scholarship'] = df['scholarship'].astype('category')\n# df['hypertension'] = df['hypertension'].astype('category')\n# df['diabetes'] = df['diabetes'].astype('category')\n# df['alcoholism'] = df['alcoholism'].astype('category')\n# df['handicap'] = df['handicap'].astype('category')\n# df['sms_received'] = df['sms_received'].astype('category')\n# df['day'] = df['day'].astype('category')\n# df['no_show'] = df['no_show'].astype('category')\n\n\n","ee12450c":"import statsmodels.api as sm","8ed6f166":"log_model_1 = sm.formula.glm(\"no_show ~ age+gender+scholarship+hypertension+diabetes+alcoholism+handicap+sms_received+day\", \n                           family = sm.families.Binomial(), data = df_2).fit()","e0109e3a":"log_model_1.summary2()","04a14a96":"log_model_2 = sm.formula.glm(\"no_show ~ age+scholarship+hypertension+diabetes+alcoholism+sms_received+day\", \n                           family = sm.families.Binomial(), data = df_2).fit()","518f41e7":"log_model_2.summary2()","43729cf1":"df_3 = df.copy()","f5bc0458":"# 1 for showed up, and 0 for not showed up\ndf_3['no_show'] = df_3.no_show.map({'Showed up':1, 'not showed up':0})","da7cdb5e":"# create dummy variable and save this in df_1\ndf_4 = pd.get_dummies(df_3, columns = ['gender',  'handicap', 'day'], drop_first = True)","eecff57f":"df_4.head()","d3152b18":"# import required function form scikit-learn \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix, accuracy_score","64f07ece":"X_train, X_test, y_train, y_test = train_test_split(df_4.drop('no_show',axis=1), \n                                                    df_4['no_show'], test_size=0.30, \n                                                    random_state=101)","f5b6f2b2":"logit_model = LogisticRegression()\nlogit_model.fit(X_train,y_train);","b15c8487":"predictions = logit_model.predict(X_test)","7c709d80":"\nprint(classification_report(y_test,predictions));","ade8cc55":"confusion_matrix(y_test, predictions)","cb9940f5":"accuracy_score(y_test, predictions)","47f09eb5":"# percent of patient who show up and not show up from data\ndf.no_show.value_counts()\/df.no_show.value_counts().sum()","1f1a35a2":"There is other way you can make contingency table, mostly I use crosstab but using groupby and unstack is faster than crosstab.","77fda846":"## Data Wrangling","f41474b5":"Number of appointment differ across week. Some day like Wednesday and Tuesday make more appointment than other. Statistics given below to see exact number.","753b2861":"So there is one row that contain age less than $0$. So lets drop that row.","4d7f6bf0":"#### Predictions","cdd156cb":"I have make contingency table below using  crosstab function. crosstab is like table function in R and when you use normalize parameter that's like prop.table function in R.","d87a87ac":"Since p value is significant that means showing up in appointment day is dependent on which day the appointment is.","420f9463":"### Logistic Regression using scikit-learn","e471a5b1":"From above plot and below statistics, proportion of patient who showed up are higher in Wednesday and Thursday than Friday and Monday. The big difference in Saturday is due to less number of sample compared to others day.","b8d09d51":"p value is significant for scholarship, hypertension, diabetes, sms_received group.","f37163f7":"#### Build the model","69d96e5e":"Number of the patients count in each group. For example hypertension,<br>\n1 mean have hypertension and<br>\n0 mean does not have hypertension.","7a21459a":" Create dummy variable","0a532b6c":"Though it might not be appropriate for all case but in this case it is possible to visualize all age group.","0923425b":"#### chi-squared test","d381274c":"***","5df6af91":"#### Evaluation","5d8284be":"#### What are the relation of  No show with Scholarship, Hypertension, Diabetes, Alcohol, Handicap, and sms-received ?","fdc3bf63":"### Appointment day vs No Show","5dafa1d5":"Following code for not to scroll figure, figure will be fixed in place.","accd1377":"### import required python libraries","94985e5e":"Same project in **R**   [click here](https:\/\/www.kaggle.com\/yousuf28\/medical-appointment-no-show-in-r)","a6eb6252":"### Logistic Regression using statsmodel","dc7c8fee":"#### Is there any relation between Gender and No show?","a551b1e6":"From the box plot, the mean age is higher for those who showed up. Now let's see the exact value.","56a65650":"****","70bc3c6a":"********","b6fe1add":"change columns to category type","e51998f4":"### Scholarship, Hypertension, Diabetes, Alcohol, Handicap, sms-received vs No show","35558b94":"#### plot and statistics","a0aaaf86":"Model is not like as we expected because there is class imbalance in between showed up and not showed up group. <br>There are $80$ % patients who show up and $20$ % those who don't show up. <br>\nSo if I predict someone will show up based on data (without model) that is $80$ %.","7f29819f":"### Read table and cleaning the data","5bc37496":"### Neighbor vs No Show","0a81b7f5":"So there is not much difference between male and female.","4e46cab3":"If logistic regression part not work see this link.\n[alternate link for same  notebook](http:\/\/nbviewer.jupyter.org\/github\/Yousuf28\/udacity_data_analyst_nano_degree\/blob\/master\/part_02_investigate_dataset\/investigating_dataset_final.ipynb)","4c4959ad":"From the above plot now it seems that proportion of showed up patients are higher in the age range 60 to 80 than patient age under 40.","bddf870c":"So there is significant difference in age of patient those who showed up and those who did not show up.","a8c9e95b":"#### plot by looping","30cbc9a8":"#### plot and statistics","740624f6":"minimum age is $-1$ , so lets check all the value less than $0$","9b10ab4b":"#### Split the data","d44f3ce0":"Drop patient_id, appointment_id, schedule_day, neighborhood","48d7f912":"There is no missing value in data set. That's might not be case always.","0c0e631e":"So there are more female patient than male patient in dataset.","56af5dd6":"In the dataset description, it mention that in __no_show__ column **No** means patient showed up and **yes** means patient did not showed up.","1f3088be":"<h1><center>Investigating on <br> \n   Medical Appointment No Show Dataset<\/center><\/h1>","dbba320b":"####  Plot","e0cca740":"\n## Exploratory Analysis","d635c5f2":"If you want see same plot in **Tableau** <br> and want to see some **SAS** code \ngo to my GitHub page [GitHub](https:\/\/github.com\/Yousuf28\/udacity_data_analyst_nano_degree\/blob\/master\/README.md)","5253d36e":"Since there is confusion with no and yes with showed up or not, lets make it clear","234bb819":"#### t test","3c40fca8":"showed up and not showed up both group is higher for female than male because more patients in data set is female. So its better to see proportionally.","fefdac22":"### Age vs No Show","2ccb6f76":"***","d06d1ea7":"It is very hard to tell from this plot the difference in age of patient who showed up or did not showed up. So let's explore more.","74a4c5ac":"## Logistic Regression Model","e3b37ac5":"There are few neighborhood from where more than $4000$ appointment made. almost Half of all neighborhood make appointment less than $1000%. There are many neighborhood so it is hard to tell which neighborhood miss their appointment most.","2594bcb4":"<h1>Table of Contents<span class=\"tocSkip\"><\/span><\/h1>\n<div class=\"toc\"><ul class=\"toc-item\"><li><span><a href=\"#Data-Wrangling\" data-toc-modified-id=\"Data-Wrangling-1\"><span class=\"toc-item-num\">1&nbsp;&nbsp;<\/span>Data Wrangling<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#import-required-python-libraries\" data-toc-modified-id=\"import-required-python-libraries-1.1\"><span class=\"toc-item-num\">1.1&nbsp;&nbsp;<\/span>import required python libraries<\/a><\/span><\/li><li><span><a href=\"#Read-table-and-cleaning-the-data\" data-toc-modified-id=\"Read-table-and-cleaning-the-data-1.2\"><span class=\"toc-item-num\">1.2&nbsp;&nbsp;<\/span>Read table and cleaning the data<\/a><\/span><\/li><\/ul><\/li><li><span><a href=\"#Exploratory-Analysis\" data-toc-modified-id=\"Exploratory-Analysis-2\"><span class=\"toc-item-num\">2&nbsp;&nbsp;<\/span>Exploratory Analysis<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Age-vs-No-Show\" data-toc-modified-id=\"Age-vs-No-Show-2.1\"><span class=\"toc-item-num\">2.1&nbsp;&nbsp;<\/span>Age vs No Show<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Is-there-any-relation-between-Age-and-No-show?\" data-toc-modified-id=\"Is-there-any-relation-between-Age-and-No-show?-2.1.1\"><span class=\"toc-item-num\">2.1.1&nbsp;&nbsp;<\/span>Is there any relation between Age and No show?<\/a><\/span><\/li><li><span><a href=\"#plot-and-statistics\" data-toc-modified-id=\"plot-and-statistics-2.1.2\"><span class=\"toc-item-num\">2.1.2&nbsp;&nbsp;<\/span>plot and statistics<\/a><\/span><\/li><li><span><a href=\"#t-test\" data-toc-modified-id=\"t-test-2.1.3\"><span class=\"toc-item-num\">2.1.3&nbsp;&nbsp;<\/span>t test<\/a><\/span><\/li><\/ul><\/li><li><span><a href=\"#Gender-vs-No-Show\" data-toc-modified-id=\"Gender-vs-No-Show-2.2\"><span class=\"toc-item-num\">2.2&nbsp;&nbsp;<\/span>Gender vs No Show<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Is-there-any-relation-between-Gender-and-No-show?\" data-toc-modified-id=\"Is-there-any-relation-between-Gender-and-No-show?-2.2.1\"><span class=\"toc-item-num\">2.2.1&nbsp;&nbsp;<\/span>Is there any relation between Gender and No show?<\/a><\/span><\/li><li><span><a href=\"#plot-and-statistics\" data-toc-modified-id=\"plot-and-statistics-2.2.2\"><span class=\"toc-item-num\">2.2.2&nbsp;&nbsp;<\/span>plot and statistics<\/a><\/span><\/li><li><span><a href=\"#chi-squared-test\" data-toc-modified-id=\"chi-squared-test-2.2.3\"><span class=\"toc-item-num\">2.2.3&nbsp;&nbsp;<\/span>chi-squared test<\/a><\/span><\/li><\/ul><\/li><li><span><a href=\"#Scholarship,-Hypertension,-Diabetes,-Alcohol,-Handicap,-sms-received-vs-No-show\" data-toc-modified-id=\"Scholarship,-Hypertension,-Diabetes,-Alcohol,-Handicap,-sms-received-vs-No-show-2.3\"><span class=\"toc-item-num\">2.3&nbsp;&nbsp;<\/span>Scholarship, Hypertension, Diabetes, Alcohol, Handicap, sms-received vs No show<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#What-are-the-relation-of--No-show-with-Scholarship,-Hypertension,-Diabetes,-Alcohol,-Handicap,-and-sms-received-?\" data-toc-modified-id=\"What-are-the-relation-of--No-show-with-Scholarship,-Hypertension,-Diabetes,-Alcohol,-Handicap,-and-sms-received-?-2.3.1\"><span class=\"toc-item-num\">2.3.1&nbsp;&nbsp;<\/span>What are the relation of  No show with Scholarship, Hypertension, Diabetes, Alcohol, Handicap, and sms-received ?<\/a><\/span><\/li><li><span><a href=\"#plot-by-looping\" data-toc-modified-id=\"plot-by-looping-2.3.2\"><span class=\"toc-item-num\">2.3.2&nbsp;&nbsp;<\/span>plot by looping<\/a><\/span><\/li><li><span><a href=\"#chi-squared-test\" data-toc-modified-id=\"chi-squared-test-2.3.3\"><span class=\"toc-item-num\">2.3.3&nbsp;&nbsp;<\/span>chi-squared test<\/a><\/span><\/li><\/ul><\/li><li><span><a href=\"#Appointment-day-vs-No-Show\" data-toc-modified-id=\"Appointment-day-vs-No-Show-2.4\"><span class=\"toc-item-num\">2.4&nbsp;&nbsp;<\/span>Appointment day vs No Show<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#plot\" data-toc-modified-id=\"plot-2.4.1\"><span class=\"toc-item-num\">2.4.1&nbsp;&nbsp;<\/span>plot<\/a><\/span><\/li><li><span><a href=\"#chi-squared-test\" data-toc-modified-id=\"chi-squared-test-2.4.2\"><span class=\"toc-item-num\">2.4.2&nbsp;&nbsp;<\/span>chi-squared test<\/a><\/span><\/li><\/ul><\/li><li><span><a href=\"#Neighbor-vs-No-Show\" data-toc-modified-id=\"Neighbor-vs-No-Show-2.5\"><span class=\"toc-item-num\">2.5&nbsp;&nbsp;<\/span>Neighbor vs No Show<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Plot\" data-toc-modified-id=\"Plot-2.5.1\"><span class=\"toc-item-num\">2.5.1&nbsp;&nbsp;<\/span>Plot<\/a><\/span><\/li><\/ul><\/li><\/ul><\/li><li><span><a href=\"#Logistic-Regression-Model\" data-toc-modified-id=\"Logistic-Regression-Model-3\"><span class=\"toc-item-num\">3&nbsp;&nbsp;<\/span>Logistic Regression Model<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Logistics-Regression-using-statsmodel\" data-toc-modified-id=\"Logistics-Regression-using-statsmodel-3.1\"><span class=\"toc-item-num\">3.1&nbsp;&nbsp;<\/span>Logistics Regression using statsmodel<\/a><\/span><\/li><li><span><a href=\"#Logistic-Regression-using-scikit-learn\" data-toc-modified-id=\"Logistic-Regression-using-scikit-learn-3.2\"><span class=\"toc-item-num\">3.2&nbsp;&nbsp;<\/span>Logistic Regression using scikit-learn<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Split-the-data\" data-toc-modified-id=\"Split-the-data-3.2.1\"><span class=\"toc-item-num\">3.2.1&nbsp;&nbsp;<\/span>Split the data<\/a><\/span><\/li><li><span><a href=\"#Build-the-model\" data-toc-modified-id=\"Build-the-model-3.2.2\"><span class=\"toc-item-num\">3.2.2&nbsp;&nbsp;<\/span>Build the model<\/a><\/span><\/li><li><span><a href=\"#Predictions\" data-toc-modified-id=\"Predictions-3.2.3\"><span class=\"toc-item-num\">3.2.3&nbsp;&nbsp;<\/span>Predictions<\/a><\/span><\/li><li><span><a href=\"#Evaluation\" data-toc-modified-id=\"Evaluation-3.2.4\"><span class=\"toc-item-num\">3.2.4&nbsp;&nbsp;<\/span>Evaluation<\/a><\/span><\/li><\/ul><\/li><\/ul><\/li><li><span><a href=\"#Conclusions\" data-toc-modified-id=\"Conclusions-4\"><span class=\"toc-item-num\">4&nbsp;&nbsp;<\/span>Conclusions<\/a><\/span><\/li><\/ul><\/div>","808ef23f":"## Conclusions","8660858c":"#### Is there any relation between Age and No show?","cad9a842":"*****","07c94831":"#### chi-squared test","a6fe4a01":"#### chi-squared test","5cdc48ec":"#### plot","f26d406a":"### Gender vs No Show","fad22bdf":"From all the above plots,\nchance of being showed up is higher for those who<br>\nhave no scholarship, <br>\nhave hypertension, <br>\nhave diabetes, <br>\nand did not received sms (last one clearly strange)","dbc92070":"Drop handicap and gender and build a model again.","13b226a9":"If someone make appointment there is already $80$% chance that this patient will show up. <br>\neven though we saw some independent variable(predictors) like age, hypertension , diabetes, sms-received are significant predictor but our model fail to predict accuracy more than $80$% because of class imbalance.\nSo from this dataset it is very hard to tell that who is not going to show up.<br>\nThere are techniques (like under-sampling and over-sampling) available to solve class imbalance problem but that beyond this project outline.","f78d1981":"p value is more than 0.05, so gender difference is not significant."}}