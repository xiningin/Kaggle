{"cell_type":{"330e9dc9":"code","6272df48":"code","6c85a03d":"code","f772db33":"code","e7ee5bfc":"code","817ec46b":"code","b92bd493":"code","ce6b5395":"code","0ac5ccb2":"code","695efe52":"code","c59b6c67":"code","0148a509":"code","11f90ce9":"code","67d96530":"code","3a9e8ebb":"code","aba5333a":"code","6c383344":"code","769bd20d":"code","5322dd77":"code","7bd86417":"code","a5c1d356":"code","b5a1bd7c":"code","6374d393":"code","38fbb405":"code","c4801983":"code","fd0b8354":"code","53c33742":"code","3f6c79f1":"code","652ba3ef":"code","ecbf27ae":"code","d921f126":"code","a7171b80":"code","ac344dea":"code","4c24f570":"code","e158a281":"code","f3e980ba":"code","2079aba4":"code","91ef099f":"code","fc414b47":"code","17175d02":"code","9281f714":"code","8ab50747":"code","12b07363":"code","d34d9c6c":"code","89487516":"code","09bac881":"code","08096dc5":"code","7e1eedcf":"code","7c32f98f":"code","3d4dc58e":"code","0ce173ce":"code","e915e883":"code","ba167a15":"code","b4fdacc5":"code","5d8c71cc":"code","e7c8b120":"code","2da466e1":"code","ac6ba204":"code","05e90448":"code","4424f99d":"code","bd9df4f7":"code","b94355ec":"code","7b035a7d":"code","98f0cc7e":"code","1164fab0":"code","19ddea99":"code","e3b292f5":"code","c838a903":"code","947d35f4":"code","4927cfea":"code","ea336832":"code","a24630b3":"code","e06123b3":"code","2f082f08":"code","fb3f4228":"code","8617f738":"code","3ea9cb84":"code","7fd34bbc":"code","d6f3ff69":"code","5b9e83a1":"code","9d504736":"code","1c1bb76b":"code","88abfb21":"code","cd2bf6ae":"code","9db0536d":"code","57181478":"code","820f07af":"code","71dc4fc9":"markdown","8579ffd0":"markdown","3827a229":"markdown","161d7b20":"markdown","74276c40":"markdown","24f3c0c4":"markdown","301ab4cd":"markdown","d03ec803":"markdown","94d88de7":"markdown","0e9da1f9":"markdown","f4e82130":"markdown","045399ec":"markdown","94c24179":"markdown","c4d840eb":"markdown","98c4aacb":"markdown","cc6bfca8":"markdown","8c87364b":"markdown"},"source":{"330e9dc9":"# Import libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats.mstats import winsorize\nimport scipy.stats as stats\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline","6272df48":"life = pd.read_csv(r'..\/input\/Life Expectancy Data.csv')","6c85a03d":"# First 5 rows of the dataset\nlife.head()","f772db33":"life.size","e7ee5bfc":"life.shape","817ec46b":"life.columns","b92bd493":"life.isnull().sum()","ce6b5395":"country_list = life.Country.unique()\nfill_list = ['Country', 'Year', 'Status', 'Life expectancy ', 'Adult Mortality',\n       'infant deaths', 'Alcohol', 'percentage expenditure', 'Hepatitis B',\n       'Measles ', ' BMI ', 'under-five deaths ', 'Polio', 'Total expenditure',\n       'Diphtheria ', ' HIV\/AIDS', 'GDP', 'Population',\n       ' thinness  1-19 years', ' thinness 5-9 years',\n       'Income composition of resources', 'Schooling']","0ac5ccb2":"for country in country_list:\n    life.loc[life['Country'] == country,fill_list] = life.loc[life['Country'] == country,fill_list].interpolate()\nlife.dropna(inplace=True)","695efe52":"#Verifying for null-values after removing \nlife.isna().sum()","c59b6c67":"# Create a dictionary of columns\ncol_dict = {'Life expectancy ':1 , 'Adult Mortality':2 ,\n        'Alcohol':3 , 'percentage expenditure': 4, 'Hepatitis B': 5,\n       'Measles ' : 6, ' BMI ': 7, 'under-five deaths ' : 8, 'Polio' : 9, 'Total expenditure' :10,\n       'Diphtheria ':11, ' HIV\/AIDS':12, 'GDP':13, 'Population' :14,\n       ' thinness  1-19 years' :15, ' thinness 5-9 years' :16,\n       'Income composition of resources' : 17, 'Schooling' :18, 'infant deaths':19}","0148a509":"plt.figure(figsize=(20,30))\n\nfor variable,i in col_dict.items():\n                     plt.subplot(5,4,i)\n                     plt.boxplot(life[variable],whis=1.5)\n                     plt.title(variable)\n\nplt.show()","11f90ce9":"for variable in col_dict.keys():\n    q75, q25 = np.percentile(life[variable], [75 ,25])\n    iqr = q75 - q25\n    min_val = q25 - (iqr*1.5)\n    max_val = q75 + (iqr*1.5)\n    print(\"Number of outliers and percentage of it in {} : {} and {}\".format(variable,\n                                                                             len((np.where((life[variable] > max_val) | (life[variable] < min_val))[0])),\n                                                                             len((np.where((life[variable] > max_val) | (life[variable] < min_val))[0]))*100\/1987))","67d96530":"plt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Life_Expectancy = life['Life expectancy ']\nplt.boxplot(original_Life_Expectancy)\nplt.title(\"original_Life_Expectancy\")\n\nplt.subplot(1,2,2)\nwinsorized_Life_Expectancy = winsorize(life['Life expectancy '],(0.01,0))\nplt.boxplot(winsorized_Life_Expectancy)\nplt.title(\"winsorized_Life_Expectancy\")\n\nplt.show()","3a9e8ebb":"plt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Adult_Mortality = life['Adult Mortality']\nplt.boxplot(original_Adult_Mortality)\nplt.title(\"original_Adult_Mortality\")\n\nplt.subplot(1,2,2)\nwinsorized_Adult_Mortality = winsorize(life['Adult Mortality'],(0,0.03))\nplt.boxplot(winsorized_Adult_Mortality)\nplt.title(\"winsorized_Adult_Mortality\")\n\nplt.show()","aba5333a":"plt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Infant_Deaths = life['infant deaths']\nplt.boxplot(original_Infant_Deaths)\nplt.title(\"original_Infant_Deaths\")\n\nplt.subplot(1,2,2)\nwinsorized_Infant_Deaths = winsorize(life['infant deaths'],(0,0.10))\nplt.boxplot(winsorized_Infant_Deaths)\nplt.title(\"winsorized_Infant_Deaths\")\n\nplt.show()","6c383344":"plt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Alcohol = life['Alcohol']\nplt.boxplot(original_Alcohol)\nplt.title(\"original_Alcohol\")\n\nplt.subplot(1,2,2)\nwinsorized_Alcohol = winsorize(life['Alcohol'],(0,0.01))\nplt.boxplot(winsorized_Alcohol)\nplt.title(\"winsorized_Alcohol\")\n\nplt.show()","769bd20d":"plt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Percentage_Exp = life['percentage expenditure']\nplt.boxplot(original_Percentage_Exp)\nplt.title(\"original_Percentage_Exp\")\n\nplt.subplot(1,2,2)\nwinsorized_Percentage_Exp = winsorize(life['percentage expenditure'],(0,0.12))\nplt.boxplot(winsorized_Percentage_Exp)\nplt.title(\"winsorized_Percentage_Exp\")\n\nplt.show()\n","5322dd77":"plt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_HepatitisB = life['Hepatitis B']\nplt.boxplot(original_HepatitisB)\nplt.title(\"original_HepatitisB\")\n\nplt.subplot(1,2,2)\nwinsorized_HepatitisB = winsorize(life['Hepatitis B'],(0.11,0))\nplt.boxplot(winsorized_HepatitisB)\nplt.title(\"winsorized_HepatitisB\")\n\nplt.show()","7bd86417":"plt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Measles = life['Measles ']\nplt.boxplot(original_Measles)\nplt.title(\"original_Measles\")\n\nplt.subplot(1,2,2)\nwinsorized_Measles = winsorize(life['Measles '],(0,0.19))\nplt.boxplot(winsorized_Measles)\nplt.title(\"winsorized_Measles\")\n\nplt.show()","a5c1d356":"plt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Under_Five_Deaths = life['under-five deaths ']\nplt.boxplot(original_Under_Five_Deaths)\nplt.title(\"original_Under_Five_Deaths\")\n\nplt.subplot(1,2,2)\nwinsorized_Under_Five_Deaths = winsorize(life['under-five deaths '],(0,0.12))\nplt.boxplot(winsorized_Under_Five_Deaths)\nplt.title(\"winsorized_Under_Five_Deaths\")\n\nplt.show()","b5a1bd7c":"plt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Polio = life['Polio']\nplt.boxplot(original_Polio)\nplt.title(\"original_Polio\")\n\nplt.subplot(1,2,2)\nwinsorized_Polio = winsorize(life['Polio'],(0.09,0))\nplt.boxplot(winsorized_Polio)\nplt.title(\"winsorized_Polio\")\n\nplt.show()","6374d393":"plt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Tot_Exp = life['Total expenditure']\nplt.boxplot(original_Tot_Exp)\nplt.title(\"original_Tot_Exp\")\n\nplt.subplot(1,2,2)\nwinsorized_Tot_Exp = winsorize(life['Total expenditure'],(0,0.01))\nplt.boxplot(winsorized_Tot_Exp)\nplt.title(\"winsorized_Tot_Exp\")\n\nplt.show()","38fbb405":"plt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Diphtheria = life['Diphtheria ']\nplt.boxplot(original_Diphtheria)\nplt.title(\"original_Diphtheria\")\n\nplt.subplot(1,2,2)\nwinsorized_Diphtheria = winsorize(life['Diphtheria '],(0.10,0))\nplt.boxplot(winsorized_Diphtheria)\nplt.title(\"winsorized_Diphtheria\")\n\nplt.show()","c4801983":"plt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_HIV = life[' HIV\/AIDS']\nplt.boxplot(original_HIV)\nplt.title(\"original_HIV\")\n\nplt.subplot(1,2,2)\nwinsorized_HIV = winsorize(life[' HIV\/AIDS'],(0,0.16))\nplt.boxplot(winsorized_HIV)\nplt.title(\"winsorized_HIV\")\n\nplt.show()","fd0b8354":"plt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_GDP = life['GDP']\nplt.boxplot(original_GDP)\nplt.title(\"original_GDP\")\n\nplt.subplot(1,2,2)\nwinsorized_GDP = winsorize(life['GDP'],(0,0.13))\nplt.boxplot(winsorized_GDP)\nplt.title(\"winsorized_GDP\")\n\nplt.show()","53c33742":"plt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Population = life['Population']\nplt.boxplot(original_Population)\nplt.title(\"original_Population\")\n\nplt.subplot(1,2,2)\nwinsorized_Population = winsorize(life['Population'],(0,0.14))\nplt.boxplot(winsorized_Population)\nplt.title(\"winsorized_Population\")\n\nplt.show()","3f6c79f1":"plt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_thinness_1to19_years = life[' thinness  1-19 years']\nplt.boxplot(original_thinness_1to19_years)\nplt.title(\"original_thinness_1to19_years\")\n\nplt.subplot(1,2,2)\nwinsorized_thinness_1to19_years = winsorize(life[' thinness  1-19 years'],(0,0.04))\nplt.boxplot(winsorized_thinness_1to19_years)\nplt.title(\"winsorized_thinness_1to19_years\")\n\nplt.show()","652ba3ef":"plt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_thinness_5to9_years = life[' thinness 5-9 years']\nplt.boxplot(original_thinness_5to9_years)\nplt.title(\"original_thinness_5to9_years\")\n\nplt.subplot(1,2,2)\nwinsorized_thinness_5to9_years = winsorize(life[' thinness 5-9 years'],(0,0.04))\nplt.boxplot(winsorized_thinness_5to9_years)\nplt.title(\"winsorized_thinness_5to9_years\")\n\nplt.show()","ecbf27ae":"plt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Income_Comp_Of_Resources = life['Income composition of resources']\nplt.boxplot(original_Income_Comp_Of_Resources)\nplt.title(\"original_Income_Comp_Of_Resources\")\n\nplt.subplot(1,2,2)\nwinsorized_Income_Comp_Of_Resources = winsorize(life['Income composition of resources'],(0.05,0))\nplt.boxplot(winsorized_Income_Comp_Of_Resources)\nplt.title(\"winsorized_Income_Comp_Of_Resources\")\n\nplt.show()","d921f126":"plt.figure(figsize=(18,6))\n\nplt.subplot(1,2,1)\noriginal_Schooling = life['Schooling']\nplt.boxplot(original_Schooling)\nplt.title(\"original_Schooling\")\n\nplt.subplot(1,2,2)\nwinsorized_Schooling = winsorize(life['Schooling'],(0.02,0.01))\nplt.boxplot(winsorized_Schooling)\nplt.title(\"winsorized_Schooling\")\n\nplt.show()","a7171b80":"winsorized_list = [winsorized_Life_Expectancy,winsorized_Adult_Mortality,winsorized_Alcohol,winsorized_Measles,winsorized_Infant_Deaths,\n            winsorized_Percentage_Exp,winsorized_HepatitisB,winsorized_Under_Five_Deaths,winsorized_Polio,winsorized_Tot_Exp,winsorized_Diphtheria,winsorized_HIV,winsorized_GDP,winsorized_Population,winsorized_thinness_1to19_years,winsorized_thinness_5to9_years,winsorized_Income_Comp_Of_Resources,winsorized_Schooling]\n\nfor variable in winsorized_list:\n    q75, q25 = np.percentile(variable, [75 ,25])\n    iqr = q75 - q25\n\n    min_val = q25 - (iqr*1.5)\n    max_val = q75 + (iqr*1.5)\n    \n    print(\"Number of outliers after winsorization   : {} \".format(len(np.where((variable > max_val) | (variable < min_val))[0])))","ac344dea":"life['winsorized_Life_Expectancy'] = winsorized_Life_Expectancy\nlife['winsorized_Adult_Mortality'] = winsorized_Adult_Mortality\nlife['winsorized_Infant_Deaths'] = winsorized_Infant_Deaths\nlife['winsorized_Alcohol'] = winsorized_Alcohol\nlife['winsorized_Percentage_Exp'] = winsorized_Percentage_Exp\nlife['winsorized_HepatitisB'] = winsorized_HepatitisB\nlife['winsorized_Under_Five_Deaths'] = winsorized_Under_Five_Deaths\nlife['winsorized_Polio'] = winsorized_Polio\nlife['winsorized_Tot_Exp'] = winsorized_Tot_Exp\nlife['winsorized_Diphtheria'] = winsorized_Diphtheria\nlife['winsorized_HIV'] = winsorized_HIV\nlife['winsorized_GDP'] = winsorized_GDP\nlife['winsorized_Population'] = winsorized_Population\nlife['winsorized_thinness_1to19_years'] = winsorized_thinness_1to19_years\nlife['winsorized_thinness_5to9_years'] = winsorized_thinness_5to9_years\nlife['winsorized_Income_Comp_Of_Resources'] = winsorized_Income_Comp_Of_Resources\nlife['winsorized_Schooling'] = winsorized_Schooling\nlife['winsorized_Measles'] = winsorized_Measles","4c24f570":"life.head()","e158a281":"life.size","f3e980ba":"life.shape","2079aba4":"life.describe()","91ef099f":"\nall_col = ['Life expectancy ','winsorized_Life_Expectancy','Adult Mortality','winsorized_Adult_Mortality','infant deaths',\n         'winsorized_Infant_Deaths','Alcohol','winsorized_Alcohol','percentage expenditure','winsorized_Percentage_Exp','Hepatitis B',\n         'winsorized_HepatitisB','under-five deaths ','winsorized_Under_Five_Deaths','Polio','winsorized_Polio','Total expenditure',\n         'winsorized_Tot_Exp','Diphtheria ','winsorized_Diphtheria',' HIV\/AIDS','winsorized_HIV','GDP','winsorized_GDP',\n         'Population','winsorized_Population',' thinness  1-19 years','winsorized_thinness_1to19_years',' thinness 5-9 years',\n         'winsorized_thinness_5to9_years','Income composition of resources','winsorized_Income_Comp_Of_Resources',\n         'Schooling','winsorized_Schooling','Measles ','winsorized_Measles','GDP','winsorized_GDP']\n\nplt.figure(figsize=(15,75))\n\nfor i in range(len(all_col)):\n    plt.subplot(19,2,i+1)\n    plt.hist(life[all_col[i]])\n    plt.title(all_col[i])\n\nplt.show()\n","fc414b47":"life.describe(include= 'O')","17175d02":"plt.figure(figsize=(6,6))\nplt.bar(life.groupby('Status')['Status'].count().index,life.groupby('Status')['winsorized_Life_Expectancy'].mean())\nplt.xlabel(\"Status\",fontsize=12)\nplt.ylabel(\"Avg Life_Expectancy\",fontsize=12)\nplt.title(\"Life_Expectancy w.r.t Status\")\nplt.show()\n","9281f714":"le_country = life.groupby('Country')['winsorized_Life_Expectancy'].mean().sort_values(ascending=True)\nle_country.plot(kind='bar', figsize=(50,15), fontsize=25)\nplt.title(\"Life_Expectancy w.r.t Country\",fontsize=40)\nplt.xlabel(\"Country\",fontsize=35)\nplt.ylabel(\"Avg Life_Expectancy\",fontsize=35)\nplt.show()","8ab50747":"le_country = life.groupby('Country')['winsorized_GDP'].mean().sort_values(ascending=True)\nle_country.plot(kind='bar', figsize=(50,15), fontsize=25)\nplt.title(\"Average GDP w.r.t Country\",fontsize=40)\nplt.xlabel(\"Country\",fontsize=35)\nplt.ylabel(\"Avg GDP\",fontsize=35)\nplt.show()","12b07363":"le_country = life.groupby('Country')['winsorized_Adult_Mortality'].mean().sort_values(ascending=True)\nle_country.plot(kind='bar', figsize=(50,15), fontsize=25)\nplt.title(\"Adult_Mortality w.r.t Country\",fontsize=40)\nplt.xlabel(\"Country\",fontsize=35)\nplt.ylabel(\"Avg Adult Mortality\",fontsize=35)\nplt.show()","d34d9c6c":"le_country = life.groupby('Country')['winsorized_Alcohol'].mean().sort_values(ascending=True)\nle_country.plot(kind='bar', figsize=(50,15), fontsize=25)\nplt.title(\"Alcohol w.r.t Country\",fontsize=40)\nplt.xlabel(\"Country\",fontsize=35)\nplt.ylabel(\"Avg Alcohol Comsumption\",fontsize=35)\nplt.show()","89487516":"le_country = life.groupby('Country')['winsorized_Diphtheria'].mean().sort_values(ascending=True)\nle_country.plot(kind='bar', figsize=(50,15), fontsize=25)\nplt.title(\"Diphtheria w.r.t Country\",fontsize=40)\nplt.xlabel(\"Country\",fontsize=35)\nplt.ylabel(\"Avg Diphtheria\",fontsize=35)\nplt.show()","09bac881":"le_country = life.groupby('Country')['winsorized_HepatitisB'].mean().sort_values(ascending=True)\nle_country.plot(kind='bar', figsize=(50,15), fontsize=25)\nplt.title(\"HepatitisB w.r.t Country\",fontsize=40)\nplt.xlabel(\"Country\",fontsize=35)\nplt.ylabel(\"Avg HepatitisB\",fontsize=35)\nplt.show()","08096dc5":"le_country = life.groupby('Country')['winsorized_HIV'].mean().sort_values(ascending=True)\nle_country.plot(kind='bar', figsize=(50,15), fontsize=25)\nplt.title(\"HIV w.r.t Country\",fontsize=40)\nplt.xlabel(\"Country\",fontsize=35)\nplt.ylabel(\"Avg HIV cases\",fontsize=35)\nplt.show()","7e1eedcf":"le_country = life.groupby('Country')['winsorized_Income_Comp_Of_Resources'].mean().sort_values(ascending=True)\nle_country.plot(kind='bar', figsize=(50,15), fontsize=25)\nplt.title(\"Income Composition of Resources w.r.t Country\",fontsize=40)\nplt.xlabel(\"Country\",fontsize=35)\nplt.ylabel(\"Avg income composition of resourses\",fontsize=35)\nplt.show()","7c32f98f":"le_country = life.groupby('Country')['winsorized_Infant_Deaths'].mean().sort_values(ascending=True)\nle_country.plot(kind='bar', figsize=(50,15), fontsize=25)\nplt.title(\"Infant Deaths w.r.t Country\",fontsize=40)\nplt.xlabel(\"Country\",fontsize=35)\nplt.ylabel(\"Avg Infant Deaths\",fontsize=35)\nplt.show()","3d4dc58e":"le_country = life.groupby('Country')['winsorized_Measles'].mean().sort_values(ascending=True)\nle_country.plot(kind='bar', figsize=(50,15), fontsize=25)\nplt.title(\"Measles w.r.t Country\",fontsize=40)\nplt.xlabel(\"Country\",fontsize=35)\nplt.ylabel(\"Avg Measles cases\",fontsize=35)\nplt.show()","0ce173ce":"le_country = life.groupby('Country')['winsorized_Percentage_Exp'].mean().sort_values(ascending=True)\nle_country.plot(kind='bar', figsize=(50,15), fontsize=25)\nplt.title(\"Percentage Expenditure w.r.t Country\",fontsize=40)\nplt.xlabel(\"Country\",fontsize=35)\nplt.ylabel(\"Avg percentage expenditure\",fontsize=35)\nplt.show()","e915e883":"le_country = life.groupby('Country')['winsorized_Polio'].mean().sort_values(ascending=True)\nle_country.plot(kind='bar', figsize=(50,15), fontsize=25)\nplt.title(\"Polio w.r.t Country\",fontsize=40)\nplt.xlabel(\"Country\",fontsize=35)\nplt.ylabel(\"Avg Polio Cases\",fontsize=35)\nplt.show()","ba167a15":"le_country = life.groupby('Country')['winsorized_Population'].mean().sort_values(ascending=True)\nle_country.plot(kind='bar', figsize=(50,15), fontsize=25)\nplt.title(\"Population w.r.t Country\",fontsize=40)\nplt.xlabel(\"Country\",fontsize=35)\nplt.ylabel(\"Avg Population\",fontsize=35)\nplt.show()","b4fdacc5":"le_country = life.groupby('Country')['winsorized_Schooling'].mean().sort_values(ascending=True)\nle_country.plot(kind='bar', figsize=(50,15), fontsize=25)\nplt.title(\"Schooling w.r.t Country\",fontsize=40)\nplt.xlabel(\"Country\",fontsize=35)\nplt.ylabel(\"Avg Schooling\",fontsize=35)\nplt.show()","5d8c71cc":"le_country = life.groupby('Country')['winsorized_thinness_1to19_years'].mean().sort_values(ascending=True)\nle_country.plot(kind='bar', figsize=(50,15), fontsize=25)\nplt.title(\" Thinness 1to19 years w.r.t Country\",fontsize=40)\nplt.xlabel(\"Country\",fontsize=35)\nplt.ylabel(\"Avg Thinness 1 to 19 Years\",fontsize=35)\nplt.show()","e7c8b120":"le_country = life.groupby('Country')['winsorized_thinness_5to9_years'].mean().sort_values(ascending=True)\nle_country.plot(kind='bar', figsize=(50,15), fontsize=25)\nplt.title(\"Thinness 5 to 9 years w.r.t Country\",fontsize=40)\nplt.xlabel(\"Country\",fontsize=35)\nplt.ylabel(\"Avg thinness 5 to 9 years \",fontsize=35)\nplt.show()","2da466e1":"le_country = life.groupby('Country')['winsorized_Tot_Exp'].mean().sort_values(ascending=True)\nle_country.plot(kind='bar', figsize=(50,15), fontsize=25)\nplt.title(\" Total Expenditure w.r.t Country\",fontsize=40)\nplt.xlabel(\"Country\",fontsize=35)\nplt.ylabel(\"Avg Total Expenditure\",fontsize=35)\nplt.show()","ac6ba204":"le_country = life.groupby('Country')['winsorized_Under_Five_Deaths'].mean().sort_values(ascending=True)\nle_country.plot(kind='bar', figsize=(50,15), fontsize=25)\nplt.title(\" Under five Deaths w.r.t Country\",fontsize=40)\nplt.xlabel(\"Country\",fontsize=35)\nplt.ylabel(\"Avg under 5 deaths\",fontsize=35)\nplt.show()","05e90448":"plt.figure(figsize=(7,5))\nplt.bar(life.groupby('Year')['Year'].count().index,life.groupby('Year')['winsorized_Life_Expectancy'].mean(),color='green',alpha=0.65)\nplt.xlabel(\"Year\",fontsize=12)\nplt.ylabel(\"Avg Life_Expectancy\",fontsize=12)\nplt.title(\"Life_Expectancy w.r.t Year\")\nplt.show()","4424f99d":"corr= life.corr()\nsns.heatmap(corr)","bd9df4f7":"plt.figure(figsize=(18,40))\n\nplt.subplot(6,3,1)\nplt.scatter(life[\"winsorized_Life_Expectancy\"], life[\"winsorized_Adult_Mortality\"])\nplt.title(\"LifeExpectancy vs AdultMortality\")\n\nplt.subplot(6,3,2)\nplt.scatter(life[\"winsorized_Life_Expectancy\"], life[\"winsorized_Infant_Deaths\"])\nplt.title(\"LifeExpectancy vs Infant_Deaths\")\n\nplt.subplot(6,3,3)\nplt.scatter(life[\"winsorized_Life_Expectancy\"], life[\"winsorized_Alcohol\"])\nplt.title(\"LifeExpectancy vs Alcohol\")\n\nplt.subplot(6,3,4)\nplt.scatter(life[\"winsorized_Life_Expectancy\"], life[\"winsorized_Percentage_Exp\"])\nplt.title(\"LifeExpectancy vs Percentage_Exp\")\n\nplt.subplot(6,3,5)\nplt.scatter(life[\"winsorized_Life_Expectancy\"], life[\"winsorized_HepatitisB\"])\nplt.title(\"LifeExpectancy vs HepatitisB\")\n\nplt.subplot(6,3,6)\nplt.scatter(life[\"winsorized_Life_Expectancy\"], life[\"winsorized_Under_Five_Deaths\"])\nplt.title(\"LifeExpectancy vs Under_Five_Deaths\")\n\nplt.subplot(6,3,7)\nplt.scatter(life[\"winsorized_Life_Expectancy\"], life[\"winsorized_Polio\"])\nplt.title(\"LifeExpectancy vs Polio\")\n\nplt.subplot(6,3,8)\nplt.scatter(life[\"winsorized_Life_Expectancy\"], life[\"winsorized_Tot_Exp\"])\nplt.title(\"LifeExpectancy vs Tot_Exp\")\n\nplt.subplot(6,3,9)\nplt.scatter(life[\"winsorized_Life_Expectancy\"], life[\"winsorized_Diphtheria\"])\nplt.title(\"LifeExpectancy vs Diphtheria\")\n\nplt.subplot(6,3,10)\nplt.scatter(life[\"winsorized_Life_Expectancy\"], life[\"winsorized_HIV\"])\nplt.title(\"LifeExpectancy vs HIV\")\n\nplt.subplot(6,3,11)\nplt.scatter(life[\"winsorized_Life_Expectancy\"], life[\"winsorized_GDP\"])\nplt.title(\"LifeExpectancy vs GDP\")\n\nplt.subplot(6,3,12)\nplt.scatter(life[\"winsorized_Life_Expectancy\"], life[\"winsorized_Population\"])\nplt.title(\"LifeExpectancy vs Population\")\n\nplt.subplot(6,3,13)\nplt.scatter(life[\"winsorized_Life_Expectancy\"], life[\"winsorized_thinness_1to19_years\"])\nplt.title(\"LifeExpectancy vs thinness_1to19_years\")\n\nplt.subplot(6,3,14)\nplt.scatter(life[\"winsorized_Life_Expectancy\"], life[\"winsorized_thinness_5to9_years\"])\nplt.title(\"LifeExpectancy vs thinness_5to9_years\")\n\nplt.subplot(6,3,15)\nplt.scatter(life[\"winsorized_Life_Expectancy\"], life[\"winsorized_Income_Comp_Of_Resources\"])\nplt.title(\"LifeExpectancy vs Income_Comp_Of_Resources\")\n\nplt.subplot(6,3,16)\nplt.scatter(life[\"winsorized_Life_Expectancy\"], life[\"winsorized_Schooling\"])\nplt.title(\"LifeExpectancy vs Schooling\")\n\n\nplt.show()","b94355ec":"round(life[['Status','Life expectancy ']].groupby(['Status']).mean(),2)","7b035a7d":"stats.ttest_ind(life.loc[life['Status']=='Developed','Life expectancy '],life.loc[life['Status']=='Developing','Life expectancy '])","98f0cc7e":"life.columns","1164fab0":"life.shape","19ddea99":"life.head()","e3b292f5":"new_life=pd.DataFrame(data=life,columns=['Country', 'Year','Status',' BMI ',\n       'winsorized_Life_Expectancy', 'winsorized_Adult_Mortality',\n       'winsorized_Infant_Deaths', 'winsorized_Alcohol',\n       'winsorized_Percentage_Exp', 'winsorized_HepatitisB',\n       'winsorized_Under_Five_Deaths', 'winsorized_Polio',\n       'winsorized_Tot_Exp', 'winsorized_Diphtheria', 'winsorized_HIV',\n       'winsorized_GDP', 'winsorized_Population',\n       'winsorized_thinness_1to19_years', 'winsorized_thinness_5to9_years',\n       'winsorized_Income_Comp_Of_Resources', 'winsorized_Schooling',\n       'winsorized_Measles'])","c838a903":"new_life.shape","947d35f4":"new_life.head()","4927cfea":"new_life.rename(columns={\n    'winsorized_Life_Expectancy':'Life_Expectancy', 'winsorized_Adult_Mortality':'Adult_Mortality',\n       'winsorized_Infant_Deaths':'Infant_Deaths', 'winsorized_Alcohol':'Alcohol',\n       'winsorized_Percentage_Exp':'Percentage_Expenditure', 'winsorized_HepatitisB':'HepatitisB',\n       'winsorized_Under_Five_Deaths':'Under_Five_Deaths', 'winsorized_Polio':'Polio',\n       'winsorized_Tot_Exp':'Total_Expenditure', 'winsorized_Diphtheria':'Diphtheria', 'winsorized_HIV':'HIV',\n       'winsorized_GDP':'GDP', 'winsorized_Population':'Population',\n       'winsorized_thinness_1to19_years':'thinness_1to19_years', 'winsorized_thinness_5to9_years':'thinness_5to9_years',\n       'winsorized_Income_Comp_Of_Resources':'Income_Comp_Of_Resources', 'winsorized_Schooling':'Schooling',\n       'winsorized_Measles':'Measles'\n},inplace=True)","ea336832":"new_life.head()","a24630b3":"new_life.columns","e06123b3":"dummies=pd.get_dummies(new_life.Status)\ndummies","2f082f08":"merged=pd.concat([new_life,dummies],axis='columns')\nmerged","fb3f4228":"final=merged.drop(['Status','Developed'],axis='columns')\nfinal","8617f738":"final.columns","3ea9cb84":"X=final.drop(['Life_Expectancy','Country'],axis='columns')\nY=pd.DataFrame(data=final,columns=['Life_Expectancy'])","7fd34bbc":"X.head()","d6f3ff69":"Y.head()","5b9e83a1":"from sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state= 42)","9d504736":"print(X_train.shape)\nprint(Y_train.shape)\nprint(X_test.shape)\nprint(Y_test.shape)","1c1bb76b":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score, mean_squared_error, mean_absolute_error","88abfb21":"model = LinearRegression(fit_intercept=True, normalize=True).fit(X_train, Y_train)\npredictions= model.predict(X_test)\nlen(predictions)","cd2bf6ae":"model.score(X_train, Y_train)","9db0536d":"r2_score(predictions, Y_test)","57181478":"mean_squared_error(predictions, Y_test)","820f07af":"mean_absolute_error(predictions, Y_test)","71dc4fc9":"**DETECTING OUTLIERS **","8579ffd0":"**Now again calculating Number of outliers after winsorization**","3827a229":"****Splitting the data set for separating input and  output variables****","161d7b20":"# **MODELING**","74276c40":"**Adding winsorized variables to our dataframe**","24f3c0c4":"#         REGRESSION MODEL FOR PREDICTING LIFE EXPECTANCY","301ab4cd":"Our goal in this project is to predict the life expectancy. So, the target variable is Life_Expectancy. First we start with data cleaning by detecting and removing null-values and treating outliers. Then we move to Data Exploration and Modeling.","d03ec803":"**Description of the dataset**","94d88de7":"**Load the dataset**","0e9da1f9":"**checking for Null values in each column**","f4e82130":"**Using Interpolate function to remove the Null values**","045399ec":"**calculating Number of outliers and thier percentages**","94c24179":"**Removing the outliers using winsorization **","c4d840eb":"**using BOXPLOTS to identify the outliers**","98c4aacb":"# Data Cleaning","cc6bfca8":"# Exploratory Data analysis","8c87364b":"Splitting the data set for training and testing"}}