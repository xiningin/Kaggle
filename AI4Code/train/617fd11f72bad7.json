{"cell_type":{"7b4b35db":"code","513dd3d4":"code","1381b463":"code","b4459956":"code","bcb8ba83":"code","7149b819":"code","ba312380":"code","670daeba":"code","60074ba8":"code","7f87cd21":"code","1f94315c":"code","f0dce867":"code","f86bd735":"code","1cba10b0":"code","d92d2625":"code","412396e6":"code","bb4d0670":"code","9bf468c9":"code","d5606c92":"code","b385cd91":"code","e14d1d05":"code","fe647630":"code","8e2d69f3":"code","c6d06fd4":"code","732a782d":"markdown","e3cf9886":"markdown","5aeb53b1":"markdown","17197e5d":"markdown","cadbbc8d":"markdown","5dda4d37":"markdown","fed3964f":"markdown","4cc43c06":"markdown","32b749a2":"markdown","d17e9330":"markdown","8d6563bf":"markdown","223168fd":"markdown","62f7f552":"markdown","1d88916e":"markdown","11264dd7":"markdown"},"source":{"7b4b35db":"import matplotlib.pyplot as plt  \nimport matplotlib.image as mpimg  \n#fig = plt.figure(figsize=(5.5,3),dpi=300)\n\nplt.rcParams['figure.figsize'] = (15, 8)\nmap_pic = mpimg.imread('\/kaggle\/input\/french-house-price-prediction\/Map-real estate.PNG')\nplt.axis('off')\nplt.title('Map - Chosen 10 Cities')\nplt.imshow(map_pic)\nplt.show()","513dd3d4":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib import cm\nimport seaborn as sns\nimport datetime as dt","1381b463":"df = pd.read_csv('\/kaggle\/input\/french-house-price-prediction\/clean_10cities.csv')\ndf","b4459956":"df_Maison = df.loc[df[\"House_Type\"] == \"Maison\"]\ndf_Maison","bcb8ba83":"jet= plt.get_cmap('jet')\ncolors = iter(jet(np.linspace(0,1,12)))\n \ndef correlation_plot(df,variables, n_rows, n_cols):\n    fig = plt.figure(figsize=(24,27))\n    #fig = plt.figure(figsize=(14,9))\n    for i, var in enumerate(variables):\n        ax = fig.add_subplot(n_rows,n_cols,i+1)\n        asset = df.loc[:,var]\n        ax.scatter(df[\"Price\"], asset, c = next(colors))\n        ax.set_xlabel(\"Price\")\n        ax.set_ylabel(\"{}\".format(var))\n        ax.set_title(var +\" vs Price\")\n    fig.tight_layout() \n    plt.show()\n        \n# Take the name of the last 6 columns of the SPY_data which are the model features\nvariables = df_Maison[['Number_of_Rooms','House_Inside_Area','Population','Population_Density(km2)','Altitude_min(m)',\n                'Avg_Temperature','Number_of_Schools','Number_of_Hospital','Region_Area(km2)','Precipitation',\n                'Avg_Monthly_Salary','Avg_Age']] \n \ncorrelation_plot(df_Maison,variables,4,3)","7149b819":"features = df_Maison.columns[-12:]\ndf_Maison.corr(method='pearson')['Price'].loc[features]","ba312380":"features = df_Maison.columns[-12:]\ndf.corr(method='kendall')['Price'].loc[features]","670daeba":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error, r2_score","60074ba8":"X_NRooms=np.array(df_Maison['Number_of_Rooms']).reshape(-1,1)\nX_InsideArea=np.array(df_Maison['House_Inside_Area']).reshape(-1,1)\nX_PopDensity=np.array(df_Maison['Population_Density(km2)']).reshape(-1,1)\nX_Region_Area=np.array(df_Maison['Region_Area(km2)']).reshape(-1,1)\n#X_AvgSalary=np.array(df_Maison['Avg_Monthly_Salary']).reshape(-1,1)\n#X_AvgAge=np.array(df_Maison['Avg_Age']).reshape(-1,1)\nnew_y=np.array(df_Maison['Price']).reshape(-1,1)\n#new_X=np.concatenate((X_NRooms,X_InsideArea,X_PopDensity, X_Region_Area, X_AvgSalary, X_AvgAge),axis=1)\nnew_X=np.concatenate((X_NRooms,X_InsideArea,X_PopDensity, X_Region_Area),axis=1)\n\n\nX_train_new, X_test_new, y_train_new, y_test_new = train_test_split(new_X, new_y, test_size=0.25, random_state=15)\n\nregr_Price_new = LinearRegression().fit(X_train_new,y_train_new)\n\nregr_Price_pred_new = regr_Price_new.predict(X_test_new)\n\n# The mean squared error\nprint('sqrt(Mean squared error): %.2f'\n      % np.sqrt(mean_squared_error(y_test_new, regr_Price_pred_new)))\n\n# The coefficient of determination: 1 is perfect prediction\nprint('Coefficient of determination: %.2f'\n      % r2_score(y_test_new, regr_Price_pred_new))","7f87cd21":"test = pd.read_csv('\/kaggle\/input\/french-house-price-prediction\/TestData.csv').dropna(axis=0)\n","1f94315c":"test_Maison = test.loc[test[\"House_Type \"] == \"Maison\"]","f0dce867":"X_NRooms=np.array(test_Maison['Number_of_Rooms']).reshape(-1,1)\nX_InsideArea=np.array(test_Maison['House_Inside_Area']).reshape(-1,1)\nX_PopDensity=np.array(test_Maison['Population_Density(km2)']).reshape(-1,1)\nX_Region_Area=np.array(test_Maison['Region_Area(km2)']).reshape(-1,1)\n#X_AvgSalary=np.array(test_Maison['Avg_Monthly_Salary']).reshape(-1,1)\n#X_AvgAge=np.array(test_Maison['Avg_Age']).reshape(-1,1)\ntest_y=np.array(test_Maison['Price']).reshape(-1,1)\ntest_X=np.concatenate((X_NRooms,X_InsideArea,X_PopDensity,X_Region_Area),axis=1)","f86bd735":"regr_Price_pred_test=regr_Price_new.predict(test_X) ","1cba10b0":"print('sqrt(Mean squared error): %.2f'\n      % np.sqrt(mean_squared_error(test_y, regr_Price_pred_test)))\nprint('Coefficient of determination: %.2f'\n      % r2_score(test_y, regr_Price_pred_test))","d92d2625":"df_Appartement = df.loc[df['House_Type'] =='Appartement']\ndf_Appartement","412396e6":"jet= plt.get_cmap('jet')\ncolors = iter(jet(np.linspace(0,1,12)))\n \ndef correlation_plot(df,variables, n_rows, n_cols):\n    fig = plt.figure(figsize=(24,27))\n    #fig = plt.figure(figsize=(14,9))\n    for i, var in enumerate(variables):\n        ax = fig.add_subplot(n_rows,n_cols,i+1)\n        asset = df.loc[:,var]\n        ax.scatter(df[\"Price\"], asset, c = next(colors))\n        ax.set_xlabel(\"Price\")\n        ax.set_ylabel(\"{}\".format(var))\n        ax.set_title(var +\" vs Price\")\n    fig.tight_layout() \n    plt.show()\n        \n# Take the name of the last 6 columns of the SPY_data which are the model features\nvariables = df_Appartement[['Number_of_Rooms','House_Inside_Area','Population','Population_Density(km2)','Altitude_min(m)',\n                'Avg_Temperature','Number_of_Schools','Number_of_Hospital','Region_Area(km2)','Precipitation',\n                'Avg_Monthly_Salary','Avg_Age']] \n \ncorrelation_plot(df_Appartement,variables,4,3)","bb4d0670":"features = df_Appartement.columns[-12:]\ndf_Appartement.corr(method='pearson')['Price'].loc[features]","9bf468c9":"features = df_Appartement.columns[-12:]\ndf_Appartement.corr(method='kendall')['Price'].loc[features]","d5606c92":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error, r2_score","b385cd91":"X_NRooms=np.array(df_Appartement['Number_of_Rooms']).reshape(-1,1)\nX_InsideArea=np.array(df_Appartement['House_Inside_Area']).reshape(-1,1)\nX_Pop=np.array(df_Appartement['Population']).reshape(-1,1)\nX_PopDensity=np.array(df_Appartement['Population_Density(km2)']).reshape(-1,1)\nX_NSchools=np.array(df_Appartement['Number_of_Schools']).reshape(-1,1)\nX_NHospital=np.array(df_Appartement['Number_of_Hospital']).reshape(-1,1)\nX_RegionArea=np.array(df_Appartement['Region_Area(km2)']).reshape(-1,1)\n#X_AvgSalary=np.array(df_Appartement['Avg_Monthly_Salary']).reshape(-1,1)\n\nnew_y=np.array(df_Appartement['Price']).reshape(-1,1)\nnew_X=np.concatenate((X_NRooms,X_InsideArea,X_Pop,X_PopDensity,X_NSchools,X_NHospital,X_RegionArea),axis=1)\n\n\n\nX_train_new, X_test_new, y_train_new, y_test_new = train_test_split(new_X, new_y, test_size=0.25, random_state=15)\n\nregr_Price_new = LinearRegression().fit(X_train_new,y_train_new)\n\nregr_Price_pred_new = regr_Price_new.predict(X_test_new)\n\n# The mean squared error\nprint('sqrt(Mean squared error): %.2f'\n      % np.sqrt(mean_squared_error(y_test_new, regr_Price_pred_new)))\n\n# The coefficient of determination: 1 is perfect prediction\nprint('Coefficient of determination: %.2f'\n      % r2_score(y_test_new, regr_Price_pred_new))","e14d1d05":"test_Apartment = test.loc[test[\"House_Type \"] == \"Appartement\"]","fe647630":"X_NRooms=np.array(test_Apartment['Number_of_Rooms']).reshape(-1,1)\nX_InsideArea=np.array(test_Apartment['House_Inside_Area']).reshape(-1,1)\nX_Pop=np.array(test_Apartment['Population']).reshape(-1,1)\nX_PopDensity=np.array(test_Apartment['Population_Density(km2)']).reshape(-1,1)\nX_NSchools=np.array(test_Apartment['Number_of_Schools']).reshape(-1,1)\nX_NHospital=np.array(test_Apartment['Number_of_Hospital']).reshape(-1,1)\nX_RegionArea=np.array(test_Apartment['Region_Area(km2)']).reshape(-1,1)\n#X_AvgSalary=np.array(test_Apartment['Avg_Monthly_Salary']).reshape(-1,1)\n\ntest_y=np.array(test_Apartment['Price']).reshape(-1,1)\ntest_X=np.concatenate((X_NRooms,X_InsideArea,X_Pop,X_PopDensity,X_NSchools,X_NHospital,X_RegionArea),axis=1)","8e2d69f3":"regr_Price_pred_test = regr_Price_new.predict(test_X) ","c6d06fd4":"print('sqrt(Mean squared error): %.2f'\n      % np.sqrt(mean_squared_error(test_y, regr_Price_pred_test)))\nprint('Coefficient of determination: %.2f'\n      % r2_score(test_y, regr_Price_pred_test))","732a782d":"## Multiple-Linear prediction model \nWe use Multiple-Linear model to make the prediction with input of the 5 following relevant features to \"Price\", as respectively `x` and `y` values.\n\n#### x values: \n`Number_of_Rooms`  \n`House_Inside_Area`  \n`Population_Density(km2)`  \n`Region_Area(km2)`  \n\n#### y values:  \n`Price`","e3cf9886":"## Multiple-Linear prediction model \nWe use Multiple-Linear model to make the prediction with input of the 8 following relevant features to \"Price\", as respectively `x` and `y` values.\n\n#### x values:\n`Number_of_Rooms`  \n`House_Inside_Area`  \n`Population`  \n`Population_Density(km2)`  \n`Number_of_Schools`   \n`Number_of_Hospital`  \n`Region_Area(km2)`   \n\n#### y values:  \n`Price`","5aeb53b1":"\n\n\n## -------------------------------------------------------------------------------------------------------------------------------\n\n## Sub-dataset 1: df_Appartement\n","17197e5d":"# Test Data","cadbbc8d":"## Correlation study via Pearson & Kendall Tau Method\n\nFrom the graph above and correlation computation below, most of our factors have a low correlation, this doesn't mean they are bad or useless but it means they are dependant of themselves. However, for our training model, we decided to use factors that have a correlation `>= 0.1` and `<=-0.1`, in other to predict with higher relevancy.","5dda4d37":"## General Steps\nStep1: Split dataset into 2 seperation by House Type\n\n### Sub-dataset 1: df_Maison\nStep2: Correlation study via charts and Pearson & Kendall Tau Method  \nStep3: Multiple-Linear Regression model  \nStep4: Test prediction accuracy \n\n### Sub-dataset 2: df_Appartement  \nStep2: Correlation study via charts and Pearson & Kendall Tau Method  \nStep3: Multiple-Linear Regression model  \nStep4: Test prediction accuracy ","fed3964f":"# Test Data","4cc43c06":"### Conclusion\nThe relevant features influencing price of French house vary from house types, some of them are common, others are unique depending on the each certain house type as below.\n\n#### Features relevant to ` Maison` Price:\n`Number_of_Rooms`, `House_Inside_Area`, `Population_Density(km2)`, `Region_Area(km2)`\n\n#### Features relevant to ` Appartement` Price:\n`Number_of_Rooms`, `House_Inside_Area`, `Population`,` Population_Density(km2)`, `Number_of_Schools`,  \n`Number_of_Hospital`, `Region_Area(km2)`\n\n\nThese models can be applied to predict the price of an appartment or house in France, also because our dataset comprises of big, medium and small cities in france, it's still able to give a balanced prediction when tested on any other dataset.\n\nFurthermore, the final prediction accuracy strongly rely on the data richness, size, segmentation and other factors of data source impacting the model prediction performance, so not all french house price prediction with different data source selection are turn out the same values. This is the fact we need to understand.","32b749a2":"## Split dataset into 2 seperation by House Type\nIn order to have a better prediction, we decided to split our training dataset into 2 sub-datasets for both houses (Maison) and apartments,they are `df_Maison`, `df_Appartement`.\n\n\n## Sub-dataset 1: df_Maison","d17e9330":"## Correlation study via Pearson & Kendall Tau Method\n\nFrom the graph above and correlation computation below, most of our factors have a low correlation, this doesn't mean they are bad or useless but it means they are dependant of themselves. However, for our training model, we decided to use factors that have a correlation `>= 0.1` and `<=-0.1`, in other to predict with higher relevancy.","8d6563bf":"### Correlation study via charts\nThe correlation bewteen `Price`of Maison dataset and the `12 features` mentioned above are each analyzed and labeled in diverse color in data visualizaion form with the help pf jet map. \n\nAs we can see in from the charts below, the most relevant feature could be `House_Inside_Area`, However, the more accurate judgement are necesary for further prediction. Therefore, the Correlation study methods `Pearson` & `Kendall Tau` are refered to identify the most related features to `Price`.","223168fd":"## French Real Estate Price Prediction\n\nTeam: Huimin, Wuqian, Amy and Tosin\n\nOur project with topic of 'Real Estate in France' is about creating a model that can predict the price of a house or an appartment in any French city by using Multiple-Linear Regression Model. \n\nThe training dataset derived from \"https:\/\/limmo-dvf.com\/prix-immobilier\" provides us with necessary but limited variables for machine learning training model. Hence we refered to some external dataset from other sources as below for sufficient factors analysis.   \nAfter data collection, data cleansing and data integration, the final dataset contains 19 columns across 10 cities, including last 12 features to analyze their relationship with `Price`. Although these 12 features are able to influence French house price, the most relevant ones strongly impacting `Price` are not clear enough. A major step in this model creation is to select the right variables that affects the price of an appartment or a house. \n\n\n#### 10 Cities:\n`Big Cities(more than 100k people)`: Angers, Nancy, Rouen  \n`Medium Cities(10k people)`: Beausoleil, Libourne,Cachan,Montauban  \n`Small Cities(1k people)`: Huez, Avallon, Loches","62f7f552":"### Correlation study via charts\nThe correlation bewteen `Price`of Maison dataset and the `12 features` mentioned above are each analyzed and labeled in diverse color in data visualizaion form with the help of jet map. \n\nAs we can see in from the charts below, the most relevant feature could be `House_Inside_Area`, However, the more accurate judgement are necesary for further prediction. Therefore, the Correlation study methods `Pearson` & `Kendall Tau` are refered to identify the most related features to `Price`.","1d88916e":"### Result\n\nThe goodness of fit is `between (0.1 to 1)` and our coefficient of determination is `0.47`, this shows that 47% of our dataset fits properly into this regression model.","11264dd7":"#### Columns:\n`Identifiant`:identification number for each house  \n`City`: city\n`Post_Code`: post code for the city  \n`Address`: specific house address in the city  \n`Sales_Date`: date the house was sold  \n`House_Type`: house type (maison, appartement)  \n`Price`: price of specific house   \n`Number of rooms`: room number inside the house  \n`House Inside Area`:inside area of the house  \n`Population`: population of the city   \n`Population_Density(km2)`:population density of the city  \n`Altitude_min(m)`: minimum altitude of the city  \n`Avg_Temperature`: annual average temperature of the city  \n`Number_of_Schools`: number of schools in the city  \n`Number_of_Hospital`: number of hospitals in the city  \n`Region_Area(km2)`: area of the city  \n`Precipitation`: annual average precipitation of the city  \n`Avg_Monthly_Salary`: monthly average salary in the city  \n`Avg_Age`: average age of the citizens\n\n####  12 Factors for analysis:\n`Number of rooms`,`House Inside Area`, `Population`,`Population_Density(km2)`, `Altitude_min(m)`,`Avg_Temperature`,  \n`Number_of_Schools`, `Number_of_Hospital`,`Region_Area(km2)`, `Precipitation`, `Avg_Monthly_Salary`,`Avg_Age`\n\n#### External sources:\nhttps:\/\/www.journaldesfemmes.fr\/maman\/ecole\/montauban\/ville-82121  \nhttps:\/\/ugeo.urbistat.com\/AdminStat\/en\/fr\/search?q=montauban  \nhttp:\/\/www.journaldunet.com\/business\/salaire\/angers\/ville-49007  \nhttps:\/\/demarchesadministratives.fr\/hopital\/huez-38750  \nhttps:\/\/en.climate-data.org\/search\/?q=Montauban"}}