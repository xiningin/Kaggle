{"cell_type":{"528dc1a6":"code","4a0f9149":"code","5e793569":"code","51fe3e05":"code","d3bc78ed":"code","8f9bbc71":"code","fbfce248":"code","66e01abb":"markdown","a870055c":"markdown","e7f767a1":"markdown","c66b4a90":"markdown","b658bc39":"markdown"},"source":{"528dc1a6":"import numpy as np\nimport pandas as pd\nfrom scipy.io.wavfile import read\nfrom IPython.display import Audio\nimport math\nimport random","4a0f9149":"# Load the note data, these are the notes that make up each chord. They're not used here, they're just for reference.\ntriads = pd.read_csv(\"\/kaggle\/input\/piano-triads-wavset\/triads.csv\")\ntriads.head()","5e793569":"# Make a dataframe of all the chords in each major and minor key\nkeys = pd.DataFrame([\n    ['C_maj','D_min','E_min','F_maj','G_maj','A_min','Bb_min'],\n    ['Cs_maj','Eb_min','F_min','Fs_maj','Gs_maj','Bb_min','C_min'],\n    ['D_maj','E_min','Fs_min','G_maj','A_maj','B_min','Cs_min'],\n    ['Eb_maj','F_min','G_min','Gs_maj','Bb_maj','C_min','D_min'],\n    ['E_maj','Fs_min','Gs_min','A_maj','C_maj','Cs_min','Eb_min'],\n    ['F_maj','G_min','A_min','Bb_maj','Cs_maj','D_min','E_min'],\n    ['Fs_maj','Gs_min','Bb_min','C_maj','D_maj','Eb_min','F_min'],\n    ['G_maj','A_min','C_min','Cs_maj','Eb_maj','E_min','Fs_min'],\n    ['Gs_maj','Bb_min','Cs_min','D_maj','E_maj','F_min','G_min'],\n    ['A_maj','B_min','D_min','Eb_maj','F_maj','Fs_min','Gs_min'],\n    ['Bb_maj','C_min','Eb_min','E_maj','Fs_maj','G_min','A_min'],\n    ['B_maj','Cs_min','E_min','F_maj','G_maj','Gs_min','Bb_min'],    \n    ['C_min','D_dim','Eb_maj','F_min','G_min','Gs_maj','Bb_maj'],\n    ['Cs_min','Eb_dim','E_maj','Fs_min','Gs_min','A_maj','B_maj'],\n    ['D_min','E_dim','F_maj','G_min','A_min','Bb_maj','C_maj'],\n    ['Ds_min','F_dim','Fs_maj','Gs_min','Bb_min','C_maj','Cs_maj'],\n    ['E_min','Fs_dim','G_maj','A_min','B_min','Cs_maj','D_maj'],\n    ['F_min','G_dim','Gs_maj','Bb_min','C_min','D_maj','Ds_maj'],\n    ['Fs_min','Gs_dim','A_maj','B_min','Cs_min','Ds_maj','E_maj'],\n    ['G_min','A_dim','Bb_maj','C_min','D_min','E_maj','F_maj'],\n    ['Gs_min','Bb_dim','C_maj','Cs_min','Ds_min','F_maj','Fs_maj'],\n    ['A_min','B_dim','Cs_maj','D_min','E_min','Fs_maj','G_maj'],\n    ['Bb_min','C_dim','D_maj','Ds_min','F_min','G_maj','Gs_maj'],\n    ['B_min','Cs_dim','Ds_maj','E_min','Fs_min','Gs_maj','A_maj']    \n])\n\n# Take a look at the chord\/key data\nkeys.head(12)","51fe3e05":"# This function randomly chooses the chords from a given key\ndef get_chords(key, num_chords, octave):\n    all_chords = keys.loc[keys[0] == key]\n    chords = []\n    \n    # Iterate through the key\/chord array\n    for i in range(0,num_chords):\n        \n        # Pick a random chord from the list\n        chord_index = random.randint(0,6)\n        \n        # Pick a random inversion\n        inversion = random.randint(0,1)\n        \n        # Add it to the array\n        chords.append(all_chords[chord_index].values[0] + \"_\" + str(octave) + \"_\" + str(inversion))\n        \n    return chords","d3bc78ed":"verse = []\n\n# Generate 4 random chords in the key of C Major at the fifth octave for the verse\nverse_iterations = 2\nverse_chords = get_chords('C_maj', 4, 5)\nprint (\"Verse chords: \" + str(verse_chords))\n\n# Iterate over the verse wavs and concat them to make a verse\nfor c in range(0,len(verse_chords)):\n    sample_rate, wav = read(\"..\/input\/piano-triads-wavset\/piano_triads\/\" + verse_chords[c] + \".wav\")\n    verse = np.concatenate((verse, wav), axis=0)\n\n# Repeat the pattern 'verse_iterations' times\nfor i in range(1, verse_iterations):\n    verse = np.concatenate((verse, verse), axis=0)\n    \nAudio(verse, rate=sample_rate)","8f9bbc71":"chorus = []\n\n# Generate 3 random chords in the key of C minor at the fourth octave for the chorus\nchorus_iterations = 2\nchorus_chords = get_chords('C_min', 3, 4)\nprint (\"Chorus chords: \" + str(chorus_chords))\n\n# Iterate over the chorus wavs and concat them to make a chorus\nfor c in range(0,len(chorus_chords)):\n    sample_rate, wav = read(\"..\/input\/piano-triads-wavset\/piano_triads\/\" + chorus_chords[c] + \".wav\")\n    chorus = np.concatenate((chorus, wav), axis=0)\n\n# Repeat the pattern 'chorus_iterations' times\nfor i in range(1, chorus_iterations):\n    chorus = np.concatenate((chorus, chorus), axis=0)\n\nAudio(chorus, rate=sample_rate)","fbfce248":"song = np.concatenate((verse, verse, chorus, verse), axis=0)\n\n# Display a player\nAudio(song, rate=sample_rate)","66e01abb":"- We get 24 seconds of audio because each wav is seconds long .. there are four wavs in the verse and we repeat it twice.\n- 3 x 4 x 2","a870055c":"### Make a verse","e7f767a1":"### Put the song together\n- String together the parts to make a complete song.","c66b4a90":"## Chord progression maker\n\n- This notebook uses my Piano Triads dataset. -> https:\/\/www.kaggle.com\/davidbroberts\/piano-triads-wavset \n- My idea here is to create a list of chords that belong in each key and auto-generate progressions for playback, then string together wavs to make a song.\n- The chords were recorded as whole notes at 120 BPM.\n- Right now, it's random driven, but I think it needs an AI component to create style or genre based progressions.\n- Of course it would be easier done with MIDI, but I thought it might be cool to train a CNN on the wavs and predict some 'feelings' into the mix.\n- The other notebook I made on this dataset ( https:\/\/www.kaggle.com\/davidbroberts\/piano-triads-wavset2 ), shows how to load and play chords, and display the notes on a piano keyboard.","b658bc39":"### Make a chorus"}}