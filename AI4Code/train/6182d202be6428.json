{"cell_type":{"6a01fd75":"code","052e5eb7":"code","8e7f05d2":"code","2b7eecd9":"code","bf0358db":"code","95fa464e":"code","5fb81d8b":"code","b52229be":"code","2ba93990":"code","2d3d6ea3":"code","56c375b9":"code","55b469f4":"code","40c03e2f":"code","2812f9cf":"code","79aa95ce":"code","36b2812c":"code","7c95c071":"code","a97538e2":"code","64a0d533":"code","7863a784":"code","9299fb96":"code","b9428199":"code","f8584749":"code","d0e68381":"code","ec359edd":"code","39f97a8b":"code","4bd2912f":"code","1bc91213":"code","d8940077":"code","2115b551":"code","170cca51":"code","0657daa6":"code","a00f9931":"code","736bac01":"code","10ad9bde":"code","c3195a06":"markdown","a906649c":"markdown","6e0b6961":"markdown","b0cd9912":"markdown","ef41c76b":"markdown","9beb4276":"markdown","c3ef9a78":"markdown","90b923f0":"markdown","3ebaa68f":"markdown","295abe0f":"markdown","ab14daa6":"markdown","6401300e":"markdown","de4f964a":"markdown","eeda809c":"markdown","8b1d029e":"markdown","6d7ef5dd":"markdown","86db1b81":"markdown","2e6dd781":"markdown","051e3c3a":"markdown"},"source":{"6a01fd75":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","052e5eb7":"#bottle datasini okuyoruz\ndata = pd.read_csv('\/kaggle\/input\/calcofi\/bottle.csv')\ndata=pd.DataFrame(data)","8e7f05d2":"data.head()","2b7eecd9":"#tuzluluk ve sicaklik iliskisi inceleneceginden bu iki veriyi ayri bir degiskene atiyoruz\nsalt_degree=data[['Salnty', 'T_degC']]","bf0358db":"salt_degree.head()","95fa464e":"#iki ozellik arasindaki bagintiyi gozlemlemek icin scatter grafige dokuyoruz\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nplt.figure(figsize=(13, 9))\nplt.scatter(salt_degree[\"Salnty\"], salt_degree[\"T_degC\"],s=65)\nplt.xlabel('Slnty',fontsize=25)\nplt.ylabel('Temp',fontsize=25)\nplt.title('slnty-Temp',fontsize=25)\nplt.show()","5fb81d8b":"#datayi incelemeyi hizlandirmak ve daha anlamli halde gorebilmek icin 750 veriyi aliyoruz\nnew_salt_degree = salt_degree[:][:750]\nlen(new_salt_degree)\n","b52229be":"#datamiz icindeki Nan degerleri tespit edip temizliyoruz\nnew_salt_degree[\"Salnty\"].isna().value_counts()\nnew_salt_degree[\"T_degC\"].isna().value_counts()\nnew_salt_degree = new_salt_degree.dropna(axis=0, how=\"any\")\n","2ba93990":"#datamiz icindeki tekrar eden degerleri siliyoruz\nnew_salt_degree = new_salt_degree.drop_duplicates(subset = [\"Salnty\", \"T_degC\"])\nlen(new_salt_degree)","2d3d6ea3":"#717 veriyi tekrar scatter ile gozlemliyoruz \nplt.figure(figsize=(12, 12))\nplt.scatter(new_salt_degree[\"Salnty\"], new_salt_degree[\"T_degC\"],s=65)\nplt.xlabel('Slnty',fontsize=25)\nplt.ylabel('Temp',fontsize=25)\nplt.title('Slnty-Temp',fontsize=25)\nplt.show()","56c375b9":"from sklearn.linear_model import LinearRegression ","55b469f4":"# Tmp ve Slt adli iki degiskende kolon degerlerini tutuyoruz\nSlt = new_salt_degree.iloc[:, 0:1].values  \nTmp = new_salt_degree.iloc[:, -1].values  ","40c03e2f":"#regresyon modelimizde girilen tuz degerine gore sicaklik degeri aliyoruz\nlin_reg=LinearRegression()\nlin_reg.fit(Slt,Tmp)","2812f9cf":"Slt","79aa95ce":"Tmp","36b2812c":"#scatter grafiginde lineer degisimi gosteriyoruz\nsns.set(font_scale=2)\nplt.figure(figsize=(15, 15))\nplt.scatter(Slt,Tmp,s=65)\nplt.plot(Slt,lin_reg.predict(Slt), color='red', linewidth='6')\nplt.xlabel('Slt',fontsize=25)\nplt.ylabel('Tmp',fontsize=25)\nplt.title('salt degerlerine gore temp tahmin gosterimi',fontsize=25)\nplt.show()","7c95c071":"#tuz degerine gore tahmini hava sicakligi tahmini yaptiriyoruz\ndegree_lin = lin_reg.predict([[33]])\ndegree_lin","a97538e2":"#r_square ile tahminlerimizin dogruluk degerini tespit ediyoruz\nfrom sklearn.metrics import mean_squared_error,r2_score\nTmp_head_lin=lin_reg.predict(Slt)\nprint(\"Linear Regression R_Square Score: \" ,r2_score(Tmp,Tmp_head_lin))\ndegerlendirme={}\ndegerlendirme[\"Linear Regression R_Square Score:\"]=r2_score(Tmp,Tmp_head_lin)","64a0d533":"m_lin_reg = LinearRegression()\nm_lin_reg = m_lin_reg.fit(Slt,Tmp)\nm_lin_reg.intercept_       # constant b0\nm_lin_reg.coef_         \n","7863a784":"#scatter grafiginde m-lineer degisimi gosteriyoruz\nimport operator\nplt.scatter(Slt, Tmp, s=65)\nsort_axis = operator.itemgetter(0)\nsorted_zip = sorted(zip(Slt, Tmp), key=sort_axis)\nX_test, y_pred = zip(*sorted_zip)\nplt.plot(Slt, Tmp, color='g')\nplt.show()","9299fb96":"from sklearn.preprocessing import PolynomialFeatures ","b9428199":"pol = PolynomialFeatures(degree = 3) \nSlt_pol = pol.fit_transform(Slt) \npol.fit(Slt_pol, Tmp) \nlin_reg2 = LinearRegression() \nlin_reg2.fit(Slt_pol, Tmp)","f8584749":"#tuz degerine gore  hava sicakligi tahmini yaptiriyoruz\nPredict_Tmp_pol = lin_reg2.predict(pol.fit_transform([[33]])) \nPredict_Tmp_pol","d0e68381":"##r_square ile tahminlerimizin dogruluk degerini tespit ediyoruz\nTmp_head_pol=lin_reg2.predict(Slt_pol)\nprint(\"Polynomial Regression R_Square Score: \" ,r2_score(Tmp,Tmp_head_pol))\ndegerlendirme[\"Polynomial Regression R_Square Score:\"]=r2_score(Tmp,Tmp_head_pol)","ec359edd":"sns.set(font_scale=1.6)\nplt.figure(figsize=(13, 9))\nx_grid = np.arange(min(Slt), max(Slt), 0.1)\nx_grid = x_grid.reshape(-1,1)\nplt.scatter(Slt,Tmp,s=65)\nplt.plot(x_grid,lin_reg2.predict(pol.fit_transform(x_grid)) , color='red', linewidth = '6')\nplt.xlabel('Slt',fontsize=25)\nplt.ylabel('Temp',fontsize=25)\nplt.title('salt degerlerine gore temp tahmin gosterimi',fontsize=25)\nplt.show()","39f97a8b":"from sklearn.tree import DecisionTreeRegressor\n\nSlt_ = new_salt_degree.iloc[:,0].values.reshape(-1, 1)\nTmp_ = new_salt_degree.iloc[:,1].values.reshape(-1, 1)\ndt_reg = DecisionTreeRegressor()      \ndt_reg.fit(Slt_,Tmp_)","4bd2912f":"dt_reg.predict([[33]])","1bc91213":"Tmp_head=dt_reg.predict(Slt_)","d8940077":"plt.scatter(Slt_,Tmp_, color=\"red\")                         \nplt.plot(Slt_,Tmp_head,color=\"green\")\nplt.xlabel(\"Slnty\")\nplt.ylabel(\"Tmp\")\nplt.title(\"Decision Tree Model\")\nplt.show()","2115b551":"##r_square ile tahminlerimizin dogruluk degerini tespit ediyoruz\nTmp_head_dt=dt_reg.predict(Slt_)\nprint(\"Decision Tree Regression R_Square Score: \" ,r2_score(Tmp,Tmp_head_dt))\ndegerlendirme[\"Decision Tree Regression R_Square Score:\"]=r2_score(Tmp,Tmp_head_dt)","170cca51":"from sklearn.ensemble import RandomForestRegressor\nrf_reg=RandomForestRegressor(n_estimators=100,random_state=42)\nrf_reg.fit(Slt_,Tmp_)\nrf_reg.predict([[33]])\n","0657daa6":"Tmp_head=rf_reg.predict(Slt_)","a00f9931":"plt.scatter(Slt_,Tmp_,color=\"red\")\nplt.plot(Slt_,Tmp_head,color=\"green\")\nplt.xlabel(\"Slnty\")\nplt.ylabel(\"Tmp\")\nplt.title(\"Random Forest Model\")\nplt.show()","736bac01":"##r_square ile tahminlerimizin dogruluk degerini tespit ediyoruz\nTmp_head_rf=rf_reg.predict(Slt_)\nprint(\"Random Forest Regression R_Square Score: \" ,r2_score(Tmp,Tmp_head_rf))\ndegerlendirme[\"Random Forest Regression R_Square Score:\"]=r2_score(Tmp,Tmp_head_rf)","10ad9bde":"degerlendirme","c3195a06":"##################################","a906649c":"#################################","6e0b6961":"2. Multiple Linear Regression modeli uygulamasi","b0cd9912":"############################################","ef41c76b":"Su tuzlulu\u011fu ile su s\u0131cakl\u0131\u011f\u0131 aras\u0131nda bir ili\u015fki var m\u0131? Tuzluluk derecesine g\u00f6re su s\u0131cakl\u0131\u011f\u0131n\u0131 tahmin edebilir misiniz?","9beb4276":"#############################################","c3ef9a78":"Kaliforniya Kooperatif Okyanus Bal\u0131k\u00e7\u0131l\u0131k Ara\u015ft\u0131rmalar\u0131 (CalCOFI), Kaliforniya Bal\u0131k ve Yaban Hayat\u0131 B\u00f6l\u00fcm\u00fc, NOAA Bal\u0131k\u00e7\u0131l\u0131k Servisi ve Scripps O\u015finografi Enstit\u00fcs\u00fc'n\u00fcn e\u015fsiz bir ortakl\u0131\u011f\u0131d\u0131r. Organizasyon 1949'da Kaliforniya'daki sardalya n\u00fcfusunun \u00e7\u00f6k\u00fc\u015f\u00fcn\u00fcn ekolojik y\u00f6nlerini incelemek i\u00e7in kuruldu. Bug\u00fcn odak noktam\u0131z Kaliforniya sahillerindeki deniz \u00e7evresi, ya\u015fam kaynaklar\u0131n\u0131n y\u00f6netimi ve El Nino ve iklim de\u011fi\u015fikli\u011fi g\u00f6stergelerinin izlenmesine y\u00f6nelmi\u015ftir. CalCOFI, g\u00fcney ve orta Kaliforniya'da \u00fc\u00e7 ayda bir geziler d\u00fczenleyerek istasyon ve devam etmekte olan bir dizi hidrografik ve biyolojik veri toplar. 500 m'ye kadar derinliklerde toplanan veriler \u015funlar\u0131 i\u00e7erir: s\u0131cakl\u0131k, tuzluluk, oksijen, fosfat, silikat, nitrat ve nitrit, klorofil, transmissometre, PAR, C14 birincil \u00fcretkenli\u011fi, fitoplankton biyolojik \u00e7e\u015fitlili\u011fi, zooplankton biyok\u00fctlesi ve zooplankton biyolojik \u00e7e\u015fitlili\u011fi.","90b923f0":"##################################","3ebaa68f":"5-Random Forest modeli uygulamasi","295abe0f":"########################################","ab14daa6":"############################################","6401300e":"#######################","de4f964a":"1. Lineer regrasyon modeli uygulamasi\n","eeda809c":"########################","8b1d029e":"3. Polynomial Regression modeli uygulamasi","6d7ef5dd":"#########################################","86db1b81":"########################################","2e6dd781":"4.Decision Tree modeli uygulamasi","051e3c3a":"SONUC OLARAK:"}}