{"cell_type":{"da810bd5":"code","56fab610":"code","462c19d6":"code","74d75772":"code","128b2d5c":"code","66b7c8fe":"code","2818875f":"code","8e452e2e":"code","c6bea5a0":"code","7dd3fe00":"code","39aa4844":"code","8a06a248":"markdown","08ea4bf9":"markdown","01a4f0d1":"markdown","ef669f9a":"markdown","66a9f24c":"markdown","04e9f4d4":"markdown","2da01cf1":"markdown","a957de0d":"markdown","4ebba1c2":"markdown","8e2ded6d":"markdown","2ea9d33b":"markdown"},"source":{"da810bd5":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom datetime import date","56fab610":"!pip -q install mplfinance\nimport mplfinance as mpf","462c19d6":"train = pd.read_csv(\"..\/input\/g-research-crypto-forecasting\/train.csv\")\nasset_details = pd.read_csv(\"..\/input\/g-research-crypto-forecasting\/asset_details.csv\")\n\nmapping = dict(asset_details[['Asset_ID', 'Asset_Name']].values)\ntrain[\"Asset name\"] = train[\"Asset_ID\"].map(mapping)","74d75772":"bitcoin = train.query(\"Asset_ID == 1\").reset_index(drop = True)\nbitcoin['timestamp'] = pd.to_datetime(bitcoin['timestamp'], unit='s')\nbitcoin = bitcoin.set_index('timestamp')","128b2d5c":"bitcoin","66b7c8fe":"wednesday_morning = bitcoin.loc['2021-04-14 05:45:00':'2021-04-14 07:00:00']","2818875f":"mpf.plot(wednesday_morning, # the dataframe containing the OHLC (Open, High, Low and Close) data\n         type='candle', # use candlesticks \n         volume=True, # also show the volume\n         mav=(3,6,9), # use three different moving averages\n         figratio=(3,1), # set the ratio of the figure\n         style='yahoo',  # choose the yahoo style\n         title='Bitcoin on Wednesday morning');","8e452e2e":"!pip -q install yfinance\nimport yfinance as yf","c6bea5a0":"# obtain the Bitcoin ticker in USD\nbitCoinUSD = yf.Ticker(\"BTC-USD\")\n# save the historical market data to a dataframe\nbitCoinUSD_values = bitCoinUSD.history(start=\"2021-09-21\")\n\n# now plot. For plotting styles see: https:\/\/github.com\/matplotlib\/mplfinance\/blob\/master\/examples\/styles.ipynb\nmpf.plot(bitCoinUSD_values,type='candle',volume=True,figratio=(3,1),style='yahoo', title='Bitcoin (USD) from: 21 September 2021');","7dd3fe00":"october_16 = bitcoin.loc['2019-10-16 06:00:00':'2019-10-16 18:30:00']\nmpf.plot(october_16, # the dataframe containing the OHLC (Open, High, Low and Close) data\n         type='candle', # use candlesticks \n         volume=True, # also show the volume\n         mav=(3,6,9), # use three different moving averages\n         figratio=(3,1), # set the ratio of the figure\n         style='yahoo',  # choose the yahoo style\n         title='2019-10-16: Bitcoin Price Falls Under $8K');","39aa4844":"october_23 = bitcoin.loc['2019-10-23 10:30:00':'2019-10-23 17:00:00']\nmpf.plot(october_23, # the dataframe containing the OHLC (Open, High, Low and Close) data\n         type='candle', # use candlesticks \n         volume=True, # also show the volume\n         mav=(3,6,9), # use three different moving averages\n         figratio=(3,1), # set the ratio of the figure\n         style='yahoo',  # choose the yahoo style\n         title='2019-10-23: Bitcoin Price Crashed');","8a06a248":"where\n\n* `timestamp` - A timestamp for the minute covered by the row.\n* `Asset_ID` - An ID code for the cryptoasset.\n* `Count` - The number of trades that took place this minute (sometimes simply called trades, or T)\n* `Open` - The USD price at the beginning of the minute.\n* `High` - The highest USD price during the minute.\n* `Low` - The lowest USD price during the minute.\n* `Close` - The USD price at the end of the minute.\n* `Volume` - The number of cryptoasset units traded during the minute.\n* `VWAP` - The volume weighted average price for the minute.\n* `Target` - 15 minute residualized returns. \n \n### Example: Plotting the morning of Wednesday the 14th of April 2021\nWe shall select data from 05:45 a.m. until 07:00 a.m. on Wednesday the 14th of April 2021","08ea4bf9":"### We shall take a look at Bitcoin","01a4f0d1":"### How are the daily markets at the moment? \nLet us take a quick look at how things are going at the moment using the *Yahoo! Finance market data downloader*, [yfinance](https:\/\/github.com\/ranaroussi\/yfinance), to get the daily data","ef669f9a":"Install the `mplfinance` package","66a9f24c":"take a quick look at our dataframe","04e9f4d4":"now produce our plot","2da01cf1":"### Links\n* [mplfinance](https:\/\/github.com\/matplotlib\/mplfinance) on GitHub\n\n### Related notebooks\n* [Probabilistic forecasting using GluonTS: Bitcoin](https:\/\/www.kaggle.com\/carlmcbrideellis\/probabilistic-forecasting-using-gluonts-bitcoin) - rather than providing a single point prediction, also provides a probability distribution as the outcome.\n* [LSTM time series + stock price prediction = FAIL](https:\/\/www.kaggle.com\/carlmcbrideellis\/lstm-time-series-stock-price-prediction-fail) - even though  LSTM (Long short-term memory) artificial neural networks are great, if the data is a random walk, then predictions will fail.\n* [Time series: A simple moving average (MA) model](https:\/\/www.kaggle.com\/carlmcbrideellis\/time-series-a-simple-moving-average-ma-model) - calculate the simple rolling average, which is the mean of the last *n* values, one of the simplest time series models. (Uses `statsmodels.tsa.arima.model`)\n* [Time series decomposition: Naive example](https:\/\/www.kaggle.com\/carlmcbrideellis\/time-series-decomposition-naive-example) - decomposing a time series into three components; the overall trend, the seasonal component, and finally a noise, or residual, term. (Uses `seasonal_decompose` from `statsmodels.tsa.seasonal`)\n* [S&P 500 daily returns: Normal and Cauchy fits](https:\/\/www.kaggle.com\/carlmcbrideellis\/s-p-500-daily-returns-normal-and-cauchy-fits)\n* [Interrupted time series analysis: Causal Impact](https:\/\/www.kaggle.com\/carlmcbrideellis\/interrupted-time-series-analysis-causal-impact)\n* [Causal Forests Double ML example using EconML](https:\/\/www.kaggle.com\/carlmcbrideellis\/causal-forests-double-ml-example-using-econml)","a957de0d":"read in the data provided with the kaggle [G-Research Crypto Forecasting](https:\/\/www.kaggle.com\/c\/g-research-crypto-forecasting) competition","4ebba1c2":"### Plotting financial OHLCV ticker data with the matplotlib [mplfinance](https:\/\/github.com\/matplotlib\/mplfinance) package\n`mplfinance` provides matplotlib utilities for the visualization, and visual analysis, of financial data.\nHere we shall plot a [candlestick chart](https:\/\/en.wikipedia.org\/wiki\/Candlestick_chart), along with volumes (V), and different moving averages. The colour of the candlestick indicates the trend of the OHLC (Open, High, Low and Close) data:\n\n![](https:\/\/raw.githubusercontent.com\/Carl-McBride-Ellis\/images_for_kaggle\/main\/candlestick_image_small.png)","8e2ded6d":"### [\"3 Likely Reasons Why Bitcoin Price Crashed \u2014 And What\u2019s Next for BTC?\"](https:\/\/cointelegraph.com\/news\/3-likely-reasons-why-bitcoin-price-crashed-and-whats-next-for-btc)","2ea9d33b":"The tickers for the cryptocurrencies pertinent to this competition are:\n\n| cryptocurrency | Ticker |\n| --- | --- |\n| Bitcoin Cash     | `BCH-USD` |\n| Binance Coin     | `BNB-USD` |\n| Bitcoin          | `BTC-USD` |\n| EOS.IO           | `EOS-USD` |\n| Ethereum Classic | `ETC-USD` |\n| Ethereum         | `ETH-USD` |\n| Litecoin         | `LTC-USD` |\n| Monero           | `XMR-USD` |\n| TRON             | `TRX-USD` |\n| Stellar          | `XLM-USD` |\n| Cardano          | `ADA-USD` |\n| IOTA             | `MIOTA-USD` |\n| Maker            | `MKR-USD` |\n| Dogecoin         | `DOGE-USD` |\n\n\n### [What happened on 2019-10-16 and 2019-10-23?](https:\/\/www.kaggle.com\/c\/g-research-crypto-forecasting\/discussion\/285836)\nTaking a look at the dates raised by [Lucas Morin](https:\/\/www.kaggle.com\/lucasmorin), along with the links by [Alirio Ar\u00e9valo](https:\/\/www.kaggle.com\/frogeater):\n\n### [\"Bitcoin Price Falls Under $8K With \u2018Ugly\u2019 Scenarios on All Timeframes\"](https:\/\/cointelegraph.com\/news\/bitcoin-price-falls-under-8k-with-ugly-scenarios-on-all-timeframes)"}}