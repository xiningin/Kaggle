{"cell_type":{"ff4b125b":"code","ec61a474":"code","9e178fee":"code","4e71136b":"code","008b280e":"code","39f6b0bd":"code","f90276ac":"code","595e1289":"code","dc327551":"code","b006e2e6":"code","9917bac3":"code","6d57c378":"code","f4e84990":"code","b492552e":"code","c35f7d3a":"code","107b9e2c":"code","5ca114ee":"code","40773dfc":"code","fe792e36":"code","6ff67dd3":"code","98aca295":"code","80564c00":"code","9ee2e8ce":"markdown","d6bf360c":"markdown","44d4f2e1":"markdown","2e0cfe6c":"markdown","81807b90":"markdown","60c73681":"markdown","9f42c394":"markdown","8f706482":"markdown","985af202":"markdown","90658e98":"markdown","f83aaf9d":"markdown","b2779164":"markdown","33ce1862":"markdown","2bf5cc77":"markdown","95644a89":"markdown","9669d613":"markdown","40220664":"markdown","bf6f9e74":"markdown","4d294c98":"markdown","098a1898":"markdown","a04bd8eb":"markdown","9a7f2992":"markdown","75ae6682":"markdown","5254a02e":"markdown","3f1c0145":"markdown","28a2e8d0":"markdown","83f7667d":"markdown","b65c1cc4":"markdown"},"source":{"ff4b125b":"#Pandas and Numpy\nimport numpy as np \nimport pandas as pd \nfrom pandas_profiling import ProfileReport\n\n#Plotly Libraries\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nfrom plotly.subplots import make_subplots\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\n#Matplotlib, Seaborn\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n#We close the warnings\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n","ec61a474":"#Read the csv data as pandas dataframe...\ndata = pd.read_csv(r\"..\/input\/latest-covid19-india-statewise-data\/Latest Covid-19 India Status.csv\")\nprint(\"data shape contains {} rows and {} columns, together: {}\".format(data.shape[0],data.shape[1],data.shape))\ndata.head()","9e178fee":"data.isnull().sum()","4e71136b":"data.describe()","008b280e":"data.dtypes","39f6b0bd":"df_death=data.iloc[:,7:8]\nprint(df_death.shape)\ng=sns.distplot(df_death, color=\"r\",  label=\"Death Ratio\")\ng.legend()\nplt.show()","f90276ac":"df_Total_Cases=data.iloc[:,1:2]\nprint(df_Total_Cases.shape)\ng=sns.distplot(df_Total_Cases, color=\"r\",  label=\"Total Cases\")\ng.legend()\nplt.show()","595e1289":"df_Active=data.iloc[:,2:3]\nprint(df_Active.shape)\ng=sns.distplot(df_Active, color=\"r\",  label=\"Active\")\ng.legend()\nplt.show()","dc327551":"df_Discharged=data.iloc[:,3:4]\nprint(df_Discharged.shape)\ng=sns.distplot(df_Discharged, color=\"r\",  label=\"Discharged\")\ng.legend()\nplt.show()","b006e2e6":"df_Deaths=data.iloc[:,4:5]\nprint(df_Deaths.shape)\ng=sns.distplot(df_Deaths, color=\"r\",  label=\"Deaths\")\ng.legend()\nplt.show()","9917bac3":"df_Active_Ratio=data.iloc[:,5:6]\nprint(df_Active_Ratio.shape)\ng=sns.distplot(df_Active_Ratio, color=\"r\",  label=\"Active_Ratio\")\ng.legend()\nplt.show()","6d57c378":"df_Discharge=data.iloc[:,6:7]\nprint(df_Discharge.shape)\ng=sns.distplot(df_Discharge, color=\"r\",  label=\"Discharge_Ratio\")\ng.legend()\nplt.show()","f4e84990":"korelasyon=data.corr()\nmatrix = np.triu(data.corr())\nfigure, axis=plt.subplots(figsize=(10,8))\nsns.heatmap(korelasyon, annot=True,mask=matrix,cmap=\"rocket\")","b492552e":"df = px.data.tips()\nfig = px.sunburst(data, path=['State\/UTs'], values='Death Ratio (%)',color='Active Ratio (%)',color_continuous_scale='Jet',height=800, width=1100)\nfig.show()","c35f7d3a":"fig = px.scatter_matrix(data,\n    dimensions=[\"Total Cases\",\"Death Ratio (%)\", \"Active Ratio (%)\", \"Discharge Ratio (%)\",\"Deaths\", \"Active\",\"Discharged\"],\n    color='State\/UTs')\nfig.show()","107b9e2c":"sns.pairplot(data, hue=\"Death Ratio (%)\")","5ca114ee":"fig = px.histogram(data, x='State\/UTs',y=\"Deaths\")\nfig.update_xaxes(categoryorder='total descending')\nfig.show()","40773dfc":"fig = px.histogram(data, x='State\/UTs',y=\"Active\")\nfig.update_xaxes(categoryorder='total descending')\nfig.show()","fe792e36":"fig = px.histogram(data, x='State\/UTs',y=\"Discharged\")\nfig.update_xaxes(categoryorder='total descending')\nfig.show()\n","6ff67dd3":"fig = px.histogram(data, x='State\/UTs',y=\"Discharge Ratio (%)\")\nfig.update_xaxes(categoryorder='total descending')\nfig.show()","98aca295":"dataframe = data.iloc[:,1:]\nfig = ff.create_scatterplotmatrix(dataframe, diag='box', index='Death Ratio (%)',colormap='Jet',colormap_type='cat',\n                                  height=1000, width=1400)\nfig.show()\n\n","80564c00":"#OpenCV for the image reading\nimport cv2\n#wordcloud lib \nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\ntext = str(list(data['State\/UTs'])).replace(',', '').replace('[', '').replace(\"'\", '').replace(']', '')\nplt.rcParams['figure.figsize'] = (12, 12)\npath=r\"..\/input\/indianflags\/indian_sm.png\"\nim = cv2.imread(path)\nim=cv2.cvtColor(im, cv2.COLOR_BGR2RGB)\nmask = np.array(im)\nwordcloud_por = WordCloud(background_color=\"white\", max_words=1000, mask=mask).generate(text)\nimage_colors = ImageColorGenerator(mask)\nplt.figure(figsize=[8,6])\nplt.imshow(wordcloud_por.recolor(color_func=image_colors), interpolation=\"bilinear\")\nplt.axis(\"off\")","9ee2e8ce":"****$\\color{orange}{\\text{Feature 6: Active Ratio }}$****","d6bf360c":"#### Word Cloud in the Style of Indian Flag","44d4f2e1":"## $\\color{Pink}{\\text{Chapter 2. Feature Deep Dive}}$ <a class=\"anchor\" id=\"chapter2\"><\/a>","2e0cfe6c":"### Death Ratio & Active Ratio over States\n\nPie chart of Death Ratio (%) distrubition over State\/UTs by stating the active ratio as color bar.","81807b90":"* We have one categorical feature. The rest is  float and integer.\n* Bir kategorik \u00f6zelli\u011fimiz var. Gerisi kayan nokta ve tam say\u0131d\u0131r.\n* \u0939\u092e\u093e\u0930\u0947 \u092a\u093e\u0938 \u090f\u0915 \u0938\u094d\u092a\u0937\u094d\u091f \u0935\u093f\u0936\u0947\u0937\u0924\u093e \u0939\u0948\u0964 \u092c\u093e\u0915\u0940 \u092b\u094d\u0932\u094b\u091f \u0914\u0930 \u092a\u0942\u0930\u094d\u0923\u093e\u0902\u0915 \u0939\u0948\u0964","60c73681":"****$\\color{orange}{\\text{Feature 5: Deaths}}$****","9f42c394":"### Correlation Matrix","8f706482":"# ****$\\color{orange}{\\text{Learn EDA in English, Turkish and Hindu: Lastest INDIA Covid-19 Status EDA & Deep Dive!}}$****\n## ****$\\color{pink}{\\text{Introduction}}$****\n\n\n![indian_sm.png](attachment:3995b546-df12-4a44-b665-cfa968558fc2.png)","985af202":"****$\\color{orange}{\\text{Feature 3: Active}}$****","90658e98":"## $\\color{Pink}{\\text{Chapter 1. Reading the Data}}$ <a class=\"anchor\" id=\"chapter1\"><\/a>\n\n#### $\\color{purple}{\\text{English: }}$\n\nWe will import the libraries by using import command. Basically, we will read the comma separated values (csv) input with pandas library. After that we will manupulate and investigate the data with the help of pandas library. We will use SEABORN and PLOTLY libraries for visualization and exploratory data anaylysis. Plotly provides online graphing, analytics, and statistics tools for individuals and collaboration, as well as scientific graphing libraries for Python, R, MATLAB, Perl, Julia, Arduino, and REST. Seaborn is a library in Python predominantly used for making statistical graphics. Seaborn is a data visualization library built on top of matplotlib and closely integrated with pandas data structures in Python. Visualization is the central part of Seaborn which helps in exploration and understanding of data.\n\n#### $\\color{purple}{\\text{Turkish: }}$\n\nPython import komutunu kullanarak k\u00fct\u00fcphaneleri import edece\u011fiz. Temel olarak, pandas library ile virg\u00fclle ayr\u0131lm\u0131\u015f de\u011ferler (csv) giri\u015fini okuyaca\u011f\u0131z. Bundan sonra verileri pandas k\u00fct\u00fcphanesinin yard\u0131m\u0131yla manuple edip inceleyece\u011fiz.Veri g\u00f6rselle\u015ftirme ve ke\u015fifsel veri analizi i\u00e7in SEABORN ve PLOTLY kitapl\u0131klar\u0131n\u0131 kullanaca\u011f\u0131z. Plotly, bireyler ve i\u015fbirli\u011fi i\u00e7in \u00e7evrimi\u00e7i grafik, analitik ve istatistik ara\u00e7lar\u0131n\u0131n yan\u0131 s\u0131ra Python, R, MATLAB, Perl, Julia, Arduino ve REST i\u00e7in bilimsel grafik kitapl\u0131klar\u0131 sa\u011flar.\n\n#### $\\color{purple}{\\text{Hindi: }}$\n\n\u0939\u092e \u0906\u092f\u093e\u0924 \u0915\u092e\u093e\u0902\u0921 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u092a\u0941\u0938\u094d\u0924\u0915\u093e\u0932\u092f\u094b\u0902 \u0915\u094b \u0906\u092f\u093e\u0924 \u0915\u0930\u0947\u0902\u0917\u0947\u0964 \u092e\u0942\u0932 \u0930\u0942\u092a \u0938\u0947, \u0939\u092e \u092a\u093e\u0902\u0921\u093e \u092a\u0941\u0938\u094d\u0924\u0915\u093e\u0932\u092f \u0915\u0947 \u0938\u093e\u0925 \u0905\u0932\u094d\u092a\u0935\u093f\u0930\u093e\u092e \u0938\u0947 \u0905\u0932\u0917 \u092e\u0942\u0932\u094d\u092f\u094b\u0902 (\u0938\u0940\u090f\u0938\u0935\u0940) \u0907\u0928\u092a\u0941\u091f \u0915\u094b \u092a\u0922\u093c\u0947\u0902\u0917\u0947\u0964 \u0909\u0938\u0915\u0947 \u092c\u093e\u0926 \u0939\u092e \u092a\u093e\u0902\u0921\u093e \u0932\u093e\u0907\u092c\u094d\u0930\u0947\u0930\u0940 \u0915\u0940 \u092e\u0926\u0926 \u0938\u0947 \u0921\u0947\u091f\u093e \u092e\u0947\u0902 \u0939\u0947\u0930\u092b\u0947\u0930 \u0914\u0930 \u091c\u093e\u0902\u091a \u0915\u0930\u0947\u0902\u0917\u0947\u0964 \u0939\u092e \u0935\u093f\u091c\u093c\u0941\u0905\u0932\u093e\u0907\u091c\u093c\u0947\u0936\u0928 \u0914\u0930 \u0916\u094b\u091c\u092a\u0942\u0930\u094d\u0923 \u0921\u0947\u091f\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0947 \u0932\u093f\u090f SEABORN \u0914\u0930 PLOTLY \u092a\u0941\u0938\u094d\u0924\u0915\u093e\u0932\u092f\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902\u0917\u0947\u0964 \u092a\u094d\u0932\u0949\u091f\u0932\u0940 \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u092f\u094b\u0902 \u0914\u0930 \u0938\u0939\u092f\u094b\u0917 \u0915\u0947 \u0932\u093f\u090f \u0911\u0928\u0932\u093e\u0907\u0928 \u0930\u0947\u0916\u093e\u0902\u0915\u0928, \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0914\u0930 \u0938\u093e\u0902\u0916\u094d\u092f\u093f\u0915\u0940 \u0909\u092a\u0915\u0930\u0923 \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0924\u093e \u0939\u0948, \u0938\u093e\u0925 \u0939\u0940 \u0938\u093e\u0925 \u092a\u093e\u092f\u0925\u0928, \u0906\u0930, \u092e\u0948\u091f\u0932\u0948\u092c, \u092a\u0930\u094d\u0932, \u091c\u0942\u0932\u093f\u092f\u093e, \u0905\u0930\u0941\u0921\u093f\u0928\u094b \u0914\u0930 \u0906\u0930\u0908\u090f\u0938\u091f\u0940 \u0915\u0947 \u0932\u093f\u090f \u0935\u0948\u091c\u094d\u091e\u093e\u0928\u093f\u0915 \u0930\u0947\u0916\u093e\u0902\u0915\u0928 \u092a\u0941\u0938\u094d\u0924\u0915\u093e\u0932\u092f \u092d\u0940 \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0924\u093e \u0939\u0948\u0964 \u0938\u0940\u092c\u0949\u0930\u094d\u0928 \u092a\u093e\u092f\u0925\u0928 \u092e\u0947\u0902 \u090f\u0915 \u092a\u0941\u0938\u094d\u0924\u0915\u093e\u0932\u092f \u0939\u0948 \u091c\u093f\u0938\u0915\u093e \u092e\u0941\u0916\u094d\u092f \u0930\u0942\u092a \u0938\u0947 \u0938\u093e\u0902\u0916\u094d\u092f\u093f\u0915\u0940\u092f \u0917\u094d\u0930\u093e\u092b\u093f\u0915\u094d\u0938 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 \u0938\u0940\u092c\u0949\u0930\u094d\u0928 \u090f\u0915 \u0921\u0947\u091f\u093e \u0935\u093f\u091c\u093c\u0941\u0905\u0932\u093e\u0907\u091c\u093c\u0947\u0936\u0928 \u0932\u093e\u0907\u092c\u094d\u0930\u0947\u0930\u0940 \u0939\u0948 \u091c\u093f\u0938\u0947 \u092e\u0948\u091f\u092a\u094d\u0932\u094b\u091f\u0932\u093f\u092c \u0915\u0947 \u0936\u0940\u0930\u094d\u0937 \u092a\u0930 \u092c\u0928\u093e\u092f\u093e \u0917\u092f\u093e \u0939\u0948 \u0914\u0930 \u0907\u0938\u0947 \u092a\u093e\u092f\u0925\u0928 \u092e\u0947\u0902 \u092a\u093e\u0902\u0921\u093e \u0921\u0947\u091f\u093e \u0938\u0902\u0930\u091a\u0928\u093e\u0913\u0902 \u0915\u0947 \u0938\u093e\u0925 \u0928\u093f\u0915\u091f\u0924\u093e \u0938\u0947 \u091c\u094b\u0921\u093c\u093e \u0917\u092f\u093e \u0939\u0948\u0964 \u0935\u093f\u091c\u093c\u0941\u0905\u0932\u093e\u0907\u091c\u093c\u0947\u0936\u0928 \u0938\u0940\u092c\u0949\u0930\u094d\u0928 \u0915\u093e \u092e\u0927\u094d\u092f \u092d\u093e\u0917 \u0939\u0948 \u091c\u094b \u0921\u0947\u091f\u093e \u0915\u0940 \u0916\u094b\u091c \u0914\u0930 \u0938\u092e\u091d \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0924\u093e \u0939\u0948\u0964","f83aaf9d":"\n\n## $\\color{Pink}{\\text{Table of Contents}}$\n\n* [Chapter 1. Reading the Data](#chapter1)     \n* [Chapter 2. Feature Deep Dive](#chapter2)\n* [Chapter 3. EDA](#chapter3)\n\n\n\n\n\n ##### ****$\\color{Black}{\\text{If You like my work, Please upvote!}}$****\n\n ##### ****$\\color{Black}{\\text{\u0905\u0917\u0930 \u0906\u092a\u0915\u094b \u092e\u0947\u0930\u093e \u0915\u093e\u092e \u092a\u0938\u0902\u0926 \u0906\u092f\u093e \u0939\u094b \u0924\u094b \u0915\u0943\u092a\u092f\u093e \u0907\u0938 \u0928\u094b\u091f\u092c\u0941\u0915 \u0915\u094b \u0905\u092a\u0935\u094b\u091f \u0915\u0930\u0947\u0902\u0964}}$****\n\n ##### ****$\\color{Black}{\\text{E\u011fer \u00e7al\u0131\u015fmam\u0131 be\u011fendiyseniz, oy verebilirsiniz!}}$****\n","b2779164":"****$\\color{orange}{\\text{Feature 2: Total Cases}}$****","33ce1862":"* Checking the null or NA values in data frame should be one of the first step. Luckly, we do not have any.\n\n* Veri i\u00e7indeki null veya NA de\u011ferlerinin kontrol edilmesi ilk ad\u0131mlardan biri olmal\u0131d\u0131r. Neyse ki, bizde yok.\n\n* \u0921\u0947\u091f\u093e \u092b\u094d\u0930\u0947\u092e \u092e\u0947\u0902 \u0936\u0942\u0928\u094d\u092f \u092f\u093e \u090f\u0928\u090f \u092e\u093e\u0928\u094b\u0902 \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0930\u0928\u093e \u092a\u0939\u0932\u0947 \u091a\u0930\u0923 \u092e\u0947\u0902 \u0938\u0947 \u090f\u0915 \u0939\u094b\u0928\u093e \u091a\u093e\u0939\u093f\u090f\u0964 \u0938\u094c\u092d\u093e\u0917\u094d\u092f \u0938\u0947, \u0939\u092e\u093e\u0930\u0947 \u092a\u093e\u0938 \u0915\u094b\u0908 \u0928\u0939\u0940\u0902 \u0939\u0948\u0964","2bf5cc77":"#### $\\color{purple}{\\text{English: }}$\n\nWe will deep dive into the data set of lastest indian covid-19 numbers. This data contains the total case number, death number, death ratio, active number, active ratio, discharged number and discharged number over 36 different Indian states. The data set consist of 36 rows and 8 features. It is not enough to do analytics or Machine Learning on it. However, it is a good example for exploratory data analysis (EDA). I will go step by step in my on way to explore the data. We will use the main libraries in the notebook such as numpy for algebraic operations, pandas for dataframe operations, matplotlib for base ploting and more importantly seaborn and plotly  for EDA. \n\n#### $\\color{purple}{\\text{Turkish: }}$\n\nHindistanda son d\u00f6nemde meydana gelen covid-19 say\u0131lar\u0131n\u0131n olu\u015fturdu\u011fu veri setine derinlemesine dalaca\u011f\u0131z. Bu veriler, 36 farkl\u0131 Hindistan eyaletinde toplam vaka say\u0131s\u0131, \u00f6l\u00fcm say\u0131s\u0131, \u00f6l\u00fcm oran\u0131, aktif say\u0131, aktif oran, taburcu say\u0131s\u0131 ve taburcu edilen say\u0131y\u0131 i\u00e7erir. Veri seti 36 sat\u0131r ve 8 \u00f6zellikten olu\u015fmaktad\u0131r. \u00dczerinde analitik veya Machine Learning yapmak yeterli de\u011fildir. Ancak, ke\u015fifsel veri analizi (EDA) i\u00e7in iyi bir \u00f6rnektir. Verileri ke\u015ffetme yolunda ad\u0131m ad\u0131m gidece\u011fim. Cebirsel i\u015flemler i\u00e7in numpy, dataframe i\u015flemleri i\u00e7in pandalar, base ploting i\u00e7in matplotlib ve daha da \u00f6nemlisi EDA i\u00e7in seaborn ve plotly gibi defterdeki ana k\u00fct\u00fcphaneleri kullanaca\u011f\u0131z.\n\n\n#### $\\color{purple}{\\text{Hindi: }}$\n\n\u0939\u092e \u092d\u093e\u0930\u0924\u0940\u092f \u0915\u094b\u0935\u093f\u0921 -19 \u0928\u0902\u092c\u0930\u094b\u0902 \u0915\u0947 \u0921\u0947\u091f\u093e \u0938\u0947\u091f \u092e\u0947\u0902 \u0917\u0939\u0930\u093e\u0908 \u0938\u0947 \u0909\u0924\u0930\u0947\u0902\u0917\u0947\u0964 \u0907\u0938 \u0921\u0947\u091f\u093e \u092e\u0947\u0902 36 \u0935\u093f\u092d\u093f\u0928\u094d\u0928 \u092d\u093e\u0930\u0924\u0940\u092f \u0930\u093e\u091c\u094d\u092f\u094b\u0902 \u092e\u0947\u0902 \u0915\u0941\u0932 \u0915\u0947\u0938 \u0938\u0902\u0916\u094d\u092f\u093e, \u092e\u0943\u0924\u094d\u092f\u0941 \u0938\u0902\u0916\u094d\u092f\u093e, \u092e\u0943\u0924\u094d\u092f\u0941 \u0905\u0928\u0941\u092a\u093e\u0924, \u0938\u0915\u094d\u0930\u093f\u092f \u0938\u0902\u0916\u094d\u092f\u093e, \u0938\u0915\u094d\u0930\u093f\u092f \u0905\u0928\u0941\u092a\u093e\u0924, \u0921\u093f\u0938\u094d\u091a\u093e\u0930\u094d\u091c \u0938\u0902\u0916\u094d\u092f\u093e \u0914\u0930 \u0921\u093f\u0938\u094d\u091a\u093e\u0930\u094d\u091c \u0938\u0902\u0916\u094d\u092f\u093e \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0964 \u0921\u0947\u091f\u093e \u0938\u0947\u091f \u092e\u0947\u0902 36 \u092a\u0902\u0915\u094d\u0924\u093f\u092f\u093e\u0901 \u0914\u0930 8 \u0938\u0941\u0935\u093f\u0927\u093e\u090f\u0901 \u0939\u094b\u0924\u0940 \u0939\u0948\u0902\u0964 \u0907\u0938 \u092a\u0930 \u090f\u0928\u093e\u0932\u093f\u091f\u093f\u0915\u094d\u0938 \u092f\u093e \u092e\u0936\u0940\u0928 \u0932\u0930\u094d\u0928\u093f\u0902\u0917 \u0915\u0930\u0928\u093e \u0939\u0940 \u0915\u093e\u092b\u0940 \u0928\u0939\u0940\u0902 \u0939\u0948\u0964 \u0939\u093e\u0932\u093e\u0901\u0915\u093f, \u092f\u0939 \u0916\u094b\u091c\u092a\u0942\u0930\u094d\u0923 \u0921\u0947\u091f\u093e \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 (EDA) \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u0905\u091a\u094d\u091b\u093e \u0909\u0926\u093e\u0939\u0930\u0923 \u0939\u0948\u0964 \u092e\u0948\u0902 \u0921\u0947\u091f\u093e \u0915\u093e \u092a\u0924\u093e \u0932\u0917\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u092a\u0928\u0947 \u0930\u093e\u0938\u094d\u0924\u0947 \u092a\u0930 \u0915\u0926\u092e \u0938\u0947 \u0915\u0926\u092e \u092e\u093f\u0932\u093e\u0915\u0930 \u091a\u0932\u0942\u0902\u0917\u093e\u0964 \u0939\u092e \u0928\u094b\u091f\u092c\u0941\u0915 \u092e\u0947\u0902 \u092e\u0941\u0916\u094d\u092f \u092a\u0941\u0938\u094d\u0924\u0915\u093e\u0932\u092f\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902\u0917\u0947 \u091c\u0948\u0938\u0947 \u092c\u0940\u091c\u0917\u0923\u093f\u0924\u0940\u092f \u0938\u0902\u091a\u093e\u0932\u0928 \u0915\u0947 \u0932\u093f\u090f numpy, \u0921\u0947\u091f\u093e\u092b\u094d\u0930\u0947\u092e \u0938\u0902\u091a\u093e\u0932\u0928 \u0915\u0947 \u0932\u093f\u090f \u092a\u093e\u0902\u0921\u093e, \u092c\u0947\u0938 \u092a\u094d\u0932\u0949\u091f\u093f\u0902\u0917 \u0915\u0947 \u0932\u093f\u090f matplotlib \u0914\u0930 \u0905\u0927\u093f\u0915 \u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923 \u0930\u0942\u092a \u0938\u0947 \u0938\u092e\u0941\u0926\u094d\u0930\u0940 \u0914\u0930 \u0908\u0921\u0940\u090f \u0915\u0947 \u0932\u093f\u090f \u092a\u094d\u0932\u0949\u091f\u0932\u0940\u0964\n","95644a89":"### Number of Discharged over States","9669d613":"#### a. w\/ Plotly","40220664":"#### b. \/w Seaborn","bf6f9e74":"Eng:\n\n* Mizoram has the highest active ratio whereas its death ratio is not high yet. As expected, Mizoram has the lowest discharced ratio! ( But this is we expected as they totally negative corrolated.\n* Kerala has the highest active covid case numbers and it's 8th rank in total cases.\n* Maharashtra is the top State that has highest total cases.\n\nTR:\n* Mizoram en y\u00fcksek aktif orana sahipken \u00f6l\u00fcm oran\u0131 hen\u00fcz y\u00fcksek de\u011fil. Beklendi\u011fi gibi, Mizoram en d\u00fc\u015f\u00fck de\u015farj oran\u0131na sahip! ( Ancak bu, tamamen olumsuz bir \u015fekilde do\u011fruland\u0131\u011f\u0131ndan bekledi\u011fimizdir.\n* Kerala en y\u00fcksek aktif covid vaka say\u0131lar\u0131na sahip ve toplam vakalarda 8. s\u0131rada.\n* Maharashtra, toplam vaka say\u0131s\u0131 en y\u00fcksek olan eyalettir.\n\nHindi:\n\n* \u092e\u093f\u091c\u094b\u0930\u092e \u092e\u0947\u0902 \u0938\u092c\u0938\u0947 \u0905\u0927\u093f\u0915 \u0938\u0915\u094d\u0930\u093f\u092f \u0905\u0928\u0941\u092a\u093e\u0924 \u0939\u0948 \u091c\u092c\u0915\u093f \u0907\u0938\u0915\u093e \u092e\u0943\u0924\u094d\u092f\u0941 \u0905\u0928\u0941\u092a\u093e\u0924 \u0905\u092d\u0940 \u0905\u0927\u093f\u0915 \u0928\u0939\u0940\u0902 \u0939\u0948\u0964 \u091c\u0948\u0938\u093e \u0915\u093f \u0905\u092a\u0947\u0915\u094d\u0937\u093f\u0924 \u0925\u093e, \u092e\u093f\u091c\u094b\u0930\u092e \u092e\u0947\u0902 \u0921\u093f\u0938\u094d\u091a\u093e\u0930\u094d\u091c \u0915\u093e \u0905\u0928\u0941\u092a\u093e\u0924 \u0938\u092c\u0938\u0947 \u0915\u092e \u0939\u0948! (\u0932\u0947\u0915\u093f\u0928 \u0939\u092e \u092f\u0939 \u0909\u092e\u094d\u092e\u0940\u0926 \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902 \u0915\u094d\u092f\u094b\u0902\u0915\u093f \u0935\u0947 \u092a\u0942\u0930\u0940 \u0924\u0930\u0939 \u0938\u0947 \u0928\u0915\u093e\u0930\u093e\u0924\u094d\u092e\u0915 \u0939\u0948\u0902\u0964\n* \u0915\u0947\u0930\u0932 \u092e\u0947\u0902 \u0938\u092c\u0938\u0947 \u0905\u0927\u093f\u0915 \u0938\u0915\u094d\u0930\u093f\u092f \u0915\u094b\u0935\u093f\u0921 \u092e\u093e\u092e\u0932\u0947 \u0939\u0948\u0902 \u0914\u0930 \u0915\u0941\u0932 \u092e\u093e\u092e\u0932\u094b\u0902 \u092e\u0947\u0902 \u092f\u0939 8 \u0935\u0947\u0902 \u0938\u094d\u0925\u093e\u0928 \u092a\u0930 \u0939\u0948\u0964\n* \u092e\u0939\u093e\u0930\u093e\u0937\u094d\u091f\u094d\u0930 \u0936\u0940\u0930\u094d\u0937 \u0930\u093e\u091c\u094d\u092f \u0939\u0948 \u091c\u093f\u0938\u092e\u0947\u0902 \u0915\u0941\u0932 \u092e\u093e\u092e\u0932\u0947 \u0938\u092c\u0938\u0947 \u0905\u0927\u093f\u0915 \u0939\u0948\u0902\u0964\n","4d294c98":"# Conclusion\n\n* ENG: Seaborn and Plotly are good resources for data visualization and analysis. More, Plotly has interactive graphs which may help to go deeper in the analysis.\n* TR: Seaborn ve Plotly, veri g\u00f6rselle\u015ftirme ve analizi i\u00e7in iyi kaynaklard\u0131r. Dahas\u0131, Plotly, analizde daha derine inmeye yard\u0131mc\u0131 olabilecek etkile\u015fimli grafiklere sahiptir.\n* Hindi: \u0938\u0940\u092c\u0949\u0930\u094d\u0928 \u0914\u0930 \u092a\u094d\u0932\u0949\u091f\u0932\u0940 \u0921\u0947\u091f\u093e \u0935\u093f\u091c\u093c\u0941\u0905\u0932\u093e\u0907\u091c\u093c\u0947\u0936\u0928 \u0914\u0930 \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u0915\u0947 \u0932\u093f\u090f \u0905\u091a\u094d\u091b\u0947 \u0938\u0902\u0938\u093e\u0927\u0928 \u0939\u0948\u0902\u0964 \u0907\u0938\u0915\u0947 \u0905\u0932\u093e\u0935\u093e, \u092a\u094d\u0932\u0949\u091f\u0932\u0940 \u092e\u0947\u0902 \u0907\u0902\u091f\u0930\u0947\u0915\u094d\u091f\u093f\u0935 \u0917\u094d\u0930\u093e\u092b \u0939\u0948\u0902 \u091c\u094b \u0935\u093f\u0936\u094d\u0932\u0947\u0937\u0923 \u092e\u0947\u0902 \u0917\u0939\u0930\u093e\u0908 \u0924\u0915 \u091c\u093e\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964","098a1898":"### Number of Active Covid over States","a04bd8eb":"### Total Cases over States ","9a7f2992":"****$\\color{orange}{\\text{Feature 7: Discharge Ratio (%) }}$****","75ae6682":"## $\\color{Pink}{\\text{Chapter 3. EDA}}$ <a class=\"anchor\" id=\"chapter3\"><\/a>","5254a02e":"#### Scatter Matrix Plot with Diagonal Box Plot","3f1c0145":"****$\\color{orange}{\\text{Feature 1: Death Ratio}}$****","28a2e8d0":"### Discharge Ratio over States","83f7667d":"### Scatter Matrix Plot with Seaborn and Plotly","b65c1cc4":"****$\\color{orange}{\\text{Feature 4: Discharged}}$****"}}