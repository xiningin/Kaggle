{"cell_type":{"ae92db0b":"code","7912d8c6":"code","3ac71fd3":"code","ebffc87b":"code","c97586e8":"code","bcaeb89a":"code","aff3ba33":"code","fb28f02b":"code","f10ecf6f":"code","bc366054":"code","13c26665":"code","368a024a":"code","d5f32f1d":"markdown","21e258f5":"markdown","a547cd7b":"markdown","fda48581":"markdown","313a8620":"markdown","9b5bb96d":"markdown","29902152":"markdown","e0e9b5af":"markdown","7b433929":"markdown","36cb9f5e":"markdown"},"source":{"ae92db0b":"pip install lazypredict","7912d8c6":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nimport lazypredict\nfrom lazypredict.Supervised import LazyClassifier","3ac71fd3":"conda update --force-reinstall pandas","ebffc87b":"data = pd.read_csv('..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv')\n\ndata.head(3)","c97586e8":"data.info(show_counts=True)","bcaeb89a":"data.quality.unique()","aff3ba33":"data.loc[data.quality >= 7, 'quality'] = 1\n# after set 7+ quality to 1, we should also add one extra condition to ignore all 1 values, since there is no original quality = 1 values in the dataset\n# it needs to avoid issue when all values in quality column set to 0\ndata.loc[(data.quality < 7) & (data.quality != 1), 'quality'] = 0","fb28f02b":"plt.title('Quality distribution')\nsns.countplot(x='quality', data=data);","f10ecf6f":"x = data.drop('quality', axis=1)\ny = data.quality\n\nx_train, x_test, y_train, y_test = train_test_split(\n    x, y,\n    test_size=.2,\n    random_state=4,\n    stratify=y\n)","bc366054":"model = LazyClassifier(verbose=0, ignore_warnings=True, custom_metric=None)\nmodels, predictions = model.fit(x_train, x_test, y_train, y_test)","13c26665":"print(models)","368a024a":"models['model'] = models.index\n\nmodels.groupby(['model', 'F1 Score'], as_index=False)['model', 'F1 Score'].mean().sort_values('F1 Score', ascending=False).head()","d5f32f1d":"Thanks for watching!\n\nIf you have any questions or suggestions feel free to write 'em down below!","21e258f5":"# Results","a547cd7b":"In case you have **ImportError** when load dataframe run this cell.","fda48581":"Since **models** variable is dataframe we are able to easily sort results and get **TOP 5** models according to best *F1 Score*. Don't forget that we work with **imbalanced data**!","313a8620":"Here is my notebook to introduce to you **lazypredict** module!\n\nAlthough documentation on this module is poor, it's easy and good start to look at your task.\n\nLink to this module you can find [here](https:\/\/lazypredict.readthedocs.io\/en\/latest\/).","9b5bb96d":"# Simple EDA","29902152":"As it was mentioned in dataset discription, I'd like to set quality value which is equal or more than 7 to *1* as good. And if quality of wine is less than 7 we will set to *0* as bad.","e0e9b5af":"That's good that we have no missing values.","7b433929":"# Import libs","36cb9f5e":"# Train models"}}