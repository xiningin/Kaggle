{"cell_type":{"fd120920":"code","bd7061f9":"code","53bad166":"code","d35ad136":"code","d88fff11":"code","b44c4d6e":"code","385f59b8":"code","095ebb78":"code","dbb00133":"code","134e2573":"code","ff9c0b99":"code","d4a47a9a":"code","919342fb":"code","4fcf99a6":"code","4ee30c28":"code","f4855c9d":"code","9ff250bb":"code","2846c789":"code","56378ef0":"code","71937a0b":"code","9b43821e":"code","e6eaab92":"code","77fd4534":"code","acabf510":"code","86870456":"code","8baa2ad7":"code","ae83f06a":"markdown","b86e9aa1":"markdown","cd657955":"markdown","73f81155":"markdown","27004ebe":"markdown","4355bbb7":"markdown","44591740":"markdown","1e0d3984":"markdown"},"source":{"fd120920":"# Import neccessary libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","bd7061f9":"# Import the datasets\nhourInt = pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/hourlyIntensities_merged.csv\")\nhourCal = pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/hourlyCalories_merged.csv\")\nhourSte = pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/hourlySteps_merged.csv\")\ndailyAct = pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailyActivity_merged.csv\")\ndailyCal = pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailyCalories_merged.csv\")\ndailyInt = pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailyIntensities_merged.csv\")\ndailySte = pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/dailySteps_merged.csv\")\nheartrate = pd.read_csv(\"..\/input\/fitbit\/Fitabase Data 4.12.16-5.12.16\/heartrate_seconds_merged.csv\")","53bad166":"# Convert date columns of datasets to consistent date time format\ndailyAct['ActivityDate'] = pd.to_datetime(dailyAct['ActivityDate'])\ndailyCal['ActivityDay'] = pd.to_datetime(dailyCal['ActivityDay'])\ndailyInt['ActivityDay'] = pd.to_datetime(dailyInt['ActivityDay'])\ndailySte['ActivityDay'] = pd.to_datetime(dailySte['ActivityDay'])\nheartrate['Time'] = pd.to_datetime(heartrate['Time'])\nhourInt['ActivityHour'] = pd.to_datetime(hourInt['ActivityHour'])\nhourCal['ActivityHour'] = pd.to_datetime(hourCal['ActivityHour'])\nhourSte['ActivityHour'] = pd.to_datetime(hourSte['ActivityHour'])","d35ad136":"# Remove Null values in Id columns\ndailyAct.dropna(subset = ['Id'])\ndailyCal.dropna(subset = ['Id'])\ndailyInt.dropna(subset = ['Id'])\ndailySte.dropna(subset = ['Id'])\nheartrate.dropna(subset = ['Id'])\nhourInt.dropna(subset = ['Id'])\nhourCal.dropna(subset = ['Id'])\nhourSte.dropna(subset = ['Id'])","d88fff11":"# Define a function to calculate the percentage of difference for an entire column of all Id\ndef cal_func(uniqueId, col_math):\n    k = []\n    result = []\n    for i in uniqueId:\n        for j in range(col_math.loc[i].nunique() - 1):\n            if col_math.loc[i][j] != 0:\n                x = (col_math.loc[i][j+1] - col_math.loc[i][j]) \/ col_math.loc[i][j] * 100\n            else: x = 0    \n            k.append(x)\n        result.append(float(format(np.mean(k), '.2f')))\n    return result","b44c4d6e":"# Define a function to calculate the percentage of difference for each specific Id\ndef cal_func_indi(Id, col_math):\n    result = []\n    for j in range(col_math.loc[Id].nunique() - 1):\n        if col_math.loc[Id][j] != 0:\n            x = (col_math.loc[Id][j+1] - col_math.loc[Id][j]) \/ col_math.loc[Id][j] * 100\n        else: x = 0    \n        result.append(float(format(x, '.2f')))\n    return result","385f59b8":"heartrate['Time'] = pd.to_datetime(heartrate['Time'])\nheartrate.insert(1, column = 'Date', value = heartrate['Time'].dt.date)\n# Group by Id and Date\ngr_hr = heartrate.groupby(['Id','Date'])","095ebb78":"# Find the increasing of max value of users\ngr_hr_max = cal_func(pd.unique(heartrate['Id']), gr_hr['Value'].max())\nprint(gr_hr_max)","dbb00133":"plt.bar(range(len(gr_hr_max)), gr_hr_max)\nplt.title('Increasing in maximum heart rate of users')\nplt.xlabel('Numbers of users')\nplt.ylabel('Percentage')","134e2573":"# Find the increasing in average heart rate of users\ngr_hr_mean = cal_func(pd.unique(heartrate['Id']), gr_hr['Value'].mean())\nprint(gr_hr_mean)","ff9c0b99":"plt.bar(range(len(gr_hr_mean)), gr_hr_mean)\nplt.title('Increasing in average heart rate of users')\nplt.xlabel('Numbers of users')\nplt.ylabel('Percentage')","d4a47a9a":"# Remove 0 value of total step column because it's not correct that users weren't walking at all a day.\na = []\nfor i in range(940):\n    if dailySte['StepTotal'].loc[i] == 0:\n        a.append(i)\ndailySte.drop(a, inplace = True)\n# Group by Id\ngr_ds = dailySte.groupby(['Id', 'ActivityDay'])","919342fb":"# Calculate max steps of each ID\ngr_ds_max = cal_func(pd.unique(dailySte['Id']), gr_ds['StepTotal'].sum())\nprint(gr_ds_max)","4fcf99a6":"plt.bar(range(len(gr_ds_max)), gr_ds_max)\nplt.title('Increasing in total steps of users')\nplt.xlabel('Numbers of users')\nplt.ylabel('Percentage')","4ee30c28":"gr_int = dailyInt.groupby(['Id', 'ActivityDay'])","f4855c9d":"# Define dataframe for each activity levels by minute and distance\ngr_int_seden_min = []\ngr_int_light_min = []\ngr_int_fair_min = []\ngr_int_active_min = []\ngr_int_light_dis = []\ngr_int_fair_dis = []\ngr_int_active_dis = []\nunique_id_int = pd.unique(dailyInt['Id'])","9ff250bb":"# Calculate each value\ngr_int_seden_min = cal_func(unique_id_int, gr_int['SedentaryMinutes'].sum())\ngr_int_light_min = cal_func(unique_id_int, gr_int['LightlyActiveMinutes'].sum())\ngr_int_fair_min = cal_func(unique_id_int, gr_int['FairlyActiveMinutes'].sum())\ngr_int_active_min = cal_func(unique_id_int, gr_int['VeryActiveMinutes'].sum())\ngr_int_light_dis = cal_func(unique_id_int, gr_int['LightActiveDistance'].sum())\ngr_int_fair_dis = cal_func(unique_id_int, gr_int['ModeratelyActiveDistance'].sum())\ngr_int_active_dis = cal_func(unique_id_int, gr_int['VeryActiveDistance'].sum())","2846c789":"plt.subplot(1,2,1)\nplt.bar(range(len(gr_int_seden_min)), gr_int_seden_min)\nplt.title('Increasing in sedentary min')\nplt.xlabel('Numbers of users')\nplt.ylabel('Percentage')\n\nplt.subplot(1,2,2)\nplt.bar(range(len(gr_int_light_min)), gr_int_light_min)\nplt.title('Increasing in lightly active min')\nplt.xlabel('Numbers of users')","56378ef0":"plt.subplot(1,2,1)\nplt.bar(range(len(gr_int_fair_min)), gr_int_fair_min)\nplt.title('Increasing in fair active min')\nplt.xlabel('Numbers of users')\nplt.ylabel('Percentage')\n\nplt.subplot(1,2,2)\nplt.bar(range(len(gr_int_active_min)), gr_int_active_min)\nplt.title('Increasing in very active min')\nplt.xlabel('Numbers of users')","71937a0b":"plt.subplot(1,2,1)\nplt.bar(range(len(gr_int_light_dis)), gr_int_light_dis)\nplt.title('Increasing in light active distance')\nplt.xlabel('Numbers of users')\nplt.ylabel('Percentage')\n\nplt.subplot(1,2,2)\nplt.bar(range(len(gr_int_fair_dis)), gr_int_fair_dis)\nplt.title('Increasing in fair active distance')\nplt.xlabel('Numbers of users')","9b43821e":"plt.bar(range(len(gr_int_active_dis)), gr_int_active_dis)\nplt.title('Increasing in very active distance')\nplt.xlabel('Numbers of users')\nplt.ylabel('Percentage')","e6eaab92":"hourCal.insert(1,'Date', hourCal['ActivityHour'].dt.date)\nhourCal.insert(2,'Time', hourCal['ActivityHour'].dt.time)\ngr_hc = hourCal.groupby(['Id', 'Date'])","77fd4534":"# Percentage of increasing average calories everyday\ngr_hc_mean_percent = cal_func(pd.unique(hourCal['Id']), gr_hc['Calories'].mean())\nprint(gr_hc_mean_percent)","acabf510":"plt.bar(range(len(gr_hc_mean_percent)), gr_hc_mean_percent)\nplt.title('Percentage of difference of average calories burnt')\nplt.xlabel('Number of users')\nplt.ylabel('Percentage')","86870456":"# Percentage of difference of total calories day by day of each Id\ngr_hc_sum_percent = cal_func(pd.unique(hourCal['Id']), gr_hc['Calories'].sum())\nprint(gr_hc_sum_percent)","8baa2ad7":"plt.bar(range(len(gr_hc_sum_percent)), gr_hc_sum_percent)\nplt.title('Percentage of difference of total calories burnt')\nplt.xlabel('Numbers of users')\nplt.ylabel('Percentage')","ae83f06a":"- Analyze the hourly calo dataset","b86e9aa1":"- Analyze the daily intensity dataset. I calculated the mean, max and progress percentage of each activity level of each Id.","cd657955":"# PREPARE\n\n## Data Organisation\n- There were 18 csv files containing tracking data of different activities of users when they were wearing smart wearable devices. \n- Many dataset have different numbers of unique id.\n- There were daily, hourly and minute data of activities.\n\n## Data Credibility\n- Datasets were collected by the fitbit devices then no bias in the data\n- The datasets were collected automatically without revealing personal identities. Users might accept the consent of using their data for analysing and improving the products. Data was open to public and not sold for profit. Privacy of users were complied. Data ethics were","73f81155":"- Analyze the daily step dataset. I calculate the max, mean and standard deviation of total steps each Id","27004ebe":"- Analyze the heart rate dataset. I found the increasing in the max heart rate of users from the first day they used devices. The progress of max heart rate possibly in exercise presented the effectiveness of practise and encouraged users to work out more. Numbers belows showed in percentage.","4355bbb7":"# PROCESS\n\n## Check Data For Errors","44591740":"# INTRODUCTION\n- This project is the case study of the google data analytics certificate.\n- Data used in this case study was open public data in Kaggle.\n\n# ASK\n\n## Business task\n- Gain insights into how people used their smart wearable devices\n- Using these insights to apply to one selected Bellabeat product\n\n## Key Stakeholders\n- Primary stakeholders:  Ur\u0161ka Sr\u0161en, Bellabeat\u2019s cofounder and Chief Creative Officer, and Sando Mur, Mathematician and Bellabeat\u2019s cofounder and key member of the Bellabeat executive team\n- Secondary stakeholders: Bellabeat marketing analytics team","1e0d3984":"# ANALYSE\n\n- How did people use these devices to track there sleeps through hourly sleeps, minute sleep and sleep day?\n- How did people track there activities through daily activity?\n- How did people use these to measure their calories burning through daily calories, hourly calories?\n- How did people use these to track their intensive work out through daily intensities, hourly intensities?\n- How did people use these devices to track their numbers of steps through daily steps, hourly steps?\n- How did people track their heart rate and weight through heart rate and weight log info?"}}