{"cell_type":{"b7bdc44d":"code","107da879":"code","029bf164":"code","504ffc30":"code","bb65e52c":"code","a9698c5b":"code","51397939":"code","a218e501":"code","b8a1af10":"code","c13fb226":"code","1f149064":"code","23d6273d":"code","299a433a":"code","72954765":"code","7391dbe8":"code","cd31f0df":"code","67db1edd":"code","bfbab79c":"code","35e2421f":"code","9f7caa36":"markdown","48ec4c7f":"markdown","592c9e83":"markdown","ea8cdd5a":"markdown","94a5c1ee":"markdown","496b5117":"markdown","12f35bdb":"markdown","d6ebc209":"markdown","fc9a21d6":"markdown","2ab0b3c1":"markdown","edc7a592":"markdown","8e2d2dd5":"markdown","4610b7b3":"markdown","979bd858":"markdown"},"source":{"b7bdc44d":"# Install keras tuner\n!pip install -U keras-tuner","107da879":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport tensorflow as tf\nfrom tensorflow import keras\n\nfrom kerastuner import RandomSearch\nfrom kerastuner.engine.hyperparameters import HyperParameters","029bf164":"# Load Fashion MNIST Dataset\n\nmnist = keras.datasets.fashion_mnist\n(train_images, train_labels), (test_images, test_labels) =mnist.load_data()","504ffc30":"train_images = train_images\/255\ntest_images = test_images\/255","bb65e52c":"plt.imshow(train_images[0])","a9698c5b":"train_images.shape, test_images.shape","51397939":"train_images = train_images.reshape(train_images.shape[0], 28,28,1)\ntest_images = test_images.reshape(test_images.shape[0], 28,28,1)","a218e501":"train_images.shape, test_images.shape","b8a1af10":"def build_model(hp):\n    model = keras.Sequential([\n        keras.layers.Conv2D(hp.Int('Conv1_filter', min_value=32, max_value=256, step=32), #To tune the number of filters (argument \"step\" is the step size)\n                        hp.Choice('Conv1_filtersize', values=[3,5]),  #To tune shape of filter\n                       activation='relu',\n                       input_shape=(28,28,1)),\n        \n        keras.layers.Conv2D(hp.Int('Conv2_filter', min_value=32, max_value=512, step=32),\n                        hp.Choice('Conv2_filtersize', values=[3,5]),\n                       activation='relu'),\n        \n        keras.layers.Dropout(hp.Choice('Dropout_1', values=[0.0, 0.10,0.20, 0.30, 0.40])),  #To tune the level of dropout\n\n        keras.layers.MaxPooling2D(2,2), \n    \n        keras.layers.Flatten(),\n        keras.layers.Dense(hp.Int('Dense1', min_value=128, max_value=512, step=32),\n                          activation='relu'),\n        keras.layers.Dropout(hp.Choice('Dropout_1', values=[0.0, 0.10,0.20, 0.30, 0.40])),\n        \n        keras.layers.Dense(10, activation='softmax')\n    ])\n    \n    model.compile(optimizer=keras.optimizers.Adam(hp.Choice('learning_rate', values=[1e-2, 1e-3])),  #To tune the learning rate\n                 loss='sparse_categorical_crossentropy',\n                 metrics= ['accuracy'])\n    \n    return model","c13fb226":"# Initialize RandomSearch\ntuner_search = RandomSearch(build_model,    #callable that takes hyperparameters and returns a Model instance\n                            objective='val_accuracy',   #String. Name of model metric to minimize or maximize\n                            max_trials=5,   #Total number of trials\n                            directory='output')   #To save checkpoints","1f149064":"tuner_search.search(train_images, train_labels, epochs=3, validation_split=0.15)","23d6273d":"tuner_search.search_space_summary()","299a433a":"model = tuner_search.get_best_models(num_models=1)[0]  #Models are available in the form of list","72954765":"model.summary()","7391dbe8":"model.fit(train_images, train_labels, epochs=10, validation_split=0.15, initial_epoch=3)","cd31f0df":"prediction = model.predict(test_images)\nprediction = np.argmax(prediction, axis=1)","67db1edd":"prediction","bfbab79c":"from sklearn.metrics import accuracy_score","35e2421f":"accuracy_score(test_labels, prediction)","9f7caa36":"### Select the best parameter for your model using \"get_best_models\"","48ec4c7f":"### Import Required Libraries","592c9e83":"### Reshape Training and Test images into 3-dimension (28,28,1)","ea8cdd5a":"## It's Your Turn Now :)\n## Upvote if you like this Notebook ","94a5c1ee":"### Prediction on Test images","496b5117":"Now the best model with the optimum value of various parameters can be selected to achieve higher accuracy value.","12f35bdb":"## Key Requirements:\n* tensorflow 2.0 or above \n* Installed keras tuner","d6ebc209":"Fashion-MNIST is a dataset of Zalando's article images\u2014consisting of a training set of 60,000 examples and a test set of 10,000 examples. Each example is a 28x28 grayscale image, associated with a label from 10 classes. It is available in keras api. Each training and test example is assigned to one of the following labels:\n*  0 T-shirt\/top\n*  1 Trouser\n*  2 Pullover\n*  3 Dress\n*  4 Coat\n*  5 Sandal\n*  6 Shirt\n*  7 Sneaker\n*  8 Bag\n*  9 Ankle boot","fc9a21d6":"### Normalizing images","2ab0b3c1":"### Let's plot an image from training set","edc7a592":"### Let's check the model accuracy on test images","8e2d2dd5":"## Let's Define a function to tune the deep neural network","4610b7b3":"## Fine Tuning--Keras Tuner\nWhile building a deep neural network the common problems we generally face are:   \n\n\n*   How many filters should be in each layer of a deep neural network ?\n*   What should be the filter size (3*3 or 5*5 or ...) ?\n*   Selection of Optimizer\n*   Selection of Learning rate \n*   How to tune Dropout level (0.1 or 0.2 or ...) ?","979bd858":"### Train the model for more number of epochs so that it can learn more"}}