{"cell_type":{"9e3ed391":"code","374119eb":"code","aa258cff":"code","85583aeb":"code","7590753e":"code","5ab901ed":"code","38fa19fa":"code","3dd2d3ab":"code","94b5256a":"code","39754440":"code","22ebe8e4":"code","3ffc783a":"code","a59b0677":"code","b41398c8":"code","3c1a97c1":"code","8589ee33":"code","437927be":"code","931bf00a":"code","c209f005":"code","140c5942":"markdown","ebddbd6a":"markdown","c8122edf":"markdown","ce885c11":"markdown","5ef6718f":"markdown","164e7467":"markdown","611874c8":"markdown","e2f1cd82":"markdown","86a934da":"markdown","64502ba8":"markdown","35e96a2f":"markdown","a4a25d78":"markdown","c24122e0":"markdown","fd503363":"markdown","f22ae9b9":"markdown","56d19cae":"markdown","c68f0fce":"markdown","bb13691a":"markdown","4e12d5b9":"markdown","c5d7ca7b":"markdown","570fc31b":"markdown","99400848":"markdown","0bb214ca":"markdown","bd1be264":"markdown"},"source":{"9e3ed391":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline \nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n\nfrom sklearn.model_selection import train_test_split\ndef split(df,label):\n    X_tr, X_te, Y_tr, Y_te = train_test_split(df, label, test_size=0.25, random_state=42)\n    return X_tr, X_te, Y_tr, Y_te\n\n\ndef correlation(dataset, cor):\n    df = dataset.copy()\n    col_corr = set()  # For storing unique value\n    corr_matrix = dataset.corr()\n    for i in range(len(corr_matrix.columns)):\n        for j in range(i):\n            if abs(corr_matrix.iloc[i, j]) > cor: # absolute values to handle positive and negative correlations\n                colname = corr_matrix.columns[i]  \n                col_corr.add(colname)\n    df.drop(col_corr,axis = 1,inplace = True)\n    return df\n\n\nfrom sklearn import svm\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nimport xgboost as xgb\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn import metrics\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import KFold, cross_val_score\n\nclassifiers = ['LinearSVM', 'RadialSVM', \n               'Logistic',  'RandomForest', \n               'AdaBoost',  'DecisionTree', \n               'KNeighbors','GradientBoosting']\n\nmodels = [svm.SVC(kernel='linear'),\n          svm.SVC(kernel='rbf'),\n          LogisticRegression(max_iter = 1000),\n          RandomForestClassifier(n_estimators=200, random_state=0),\n          AdaBoostClassifier(random_state = 0),\n          DecisionTreeClassifier(random_state=0),\n          KNeighborsClassifier(),\n          GradientBoostingClassifier(random_state=0)]\n\n\ndef acc_score(df,label):\n    Score = pd.DataFrame({\"Classifier\":classifiers})\n    j = 0\n    acc = []\n    X_train,X_test,Y_train,Y_test = split(df,label)\n    for i in models:\n        model = i\n        model.fit(X_train,Y_train)\n        predictions = model.predict(X_test)\n        acc.append(accuracy_score(Y_test,predictions))\n        j = j+1     \n    Score[\"Accuracy\"] = acc\n    Score.sort_values(by=\"Accuracy\", ascending=False,inplace = True)\n    Score.reset_index(drop=True, inplace=True)\n    return Score\n\n\ndef acc_score_cor(df,label,cor_list):\n    Score = pd.DataFrame({\"Classifier\":classifiers})\n    for k in range(len(cor_list)):\n        df2 = correlation(df, cor_list[k])\n        X_train,X_test,Y_train,Y_test = split(df2,label)\n        j = 0\n        acc = []\n        for i in models:\n            model = i\n            model.fit(X_train,Y_train)\n            predictions = model.predict(X_test)\n            acc.append(accuracy_score(Y_test,predictions))\n            j = j+1  \n        feat = str(cor_list[k])\n        Score[feat] = acc\n    return Score\n\n        \ndef plot2(df,l1,l2,p1,p2,c = \"b\"):\n    feat = df.columns.tolist()\n    feat = feat[1:]\n    plt.figure(figsize = (16, 18))\n    for j in range(0,df.shape[0]):\n        value = []\n        k = 0\n        for i in range(1,len(df.columns.tolist())):\n            value.append(df.iloc[j][i])\n        plt.subplot(4, 4,j+1)\n        ax = sns.pointplot(x=feat, y=value,color = c )\n        plt.text(p1,p2,df.iloc[j][0])\n        plt.xticks(rotation=90)\n        ax.set(ylim=(l1,l2))\n        k = k+1\n        \n\ndef highlight_max(data, color='aquamarine'):\n    attr = 'background-color: {}'.format(color)\n    if data.ndim == 1:  \n        is_max = data == data.max()\n        return [attr if v else '' for v in is_max]\n    else: \n        is_max = data == data.max().max()\n        return pd.DataFrame(np.where(is_max, attr, ''),\n                            index=data.index, columns=data.columns)","374119eb":"data_bc = pd.read_csv(\"..\/input\/breast-cancer-wisconsin-data\/data.csv\")\nlabel_bc = data_bc[\"diagnosis\"]\nlabel_bc = np.where(label_bc == 'M',1,0)\ndata_bc.drop([\"id\",\"diagnosis\",\"Unnamed: 32\"],axis = 1,inplace = True)\n\nprint(\"Breast Cancer dataset:\\n\",data_bc.shape[0],\"Records\\n\",data_bc.shape[1],\"Features\")","aa258cff":"display(data_bc.head())\nprint(\"All the features in this dataset have continuous values\")","85583aeb":"plt.figure(figsize=(18,18))\ncor1 = data_bc.corr()\nsns.heatmap(cor1, annot=True, cmap=\"viridis\",annot_kws={\"size\":8})\nplt.show()","7590753e":"score1 = acc_score(data_bc,label_bc)\nscore1","5ab901ed":"corrate_bc = [0.6,0.7,0.8,0.9,0.95,0.99]\nclassifiers = score1[\"Classifier\"].tolist()\nscore_bc = acc_score_cor(data_bc,label_bc,corrate_bc)\nscore_bc.style.apply(highlight_max, subset = score_bc.columns[1:], axis=None)","38fa19fa":"plot2(score_bc,0.85,1,2.4,0.86,c = \"gold\")","3dd2d3ab":"data_pd = pd.read_csv(\"..\/input\/parkinson-disease-detection\/Parkinsson disease.csv\")\nlabel_pd = data_pd[\"status\"]\ndata_pd.drop([\"status\",\"name\"],axis = 1,inplace = True)\n\nprint(\"Parkinson's disease dataset:\\n\",data_pd.shape[0],\"Records\\n\",data_pd.shape[1],\"Features\")","94b5256a":"display(data_pd.head())\nprint(\"All the features in this dataset have continuous values\")","39754440":"plt.figure(figsize=(18,18))\ncor3 = data_pd.corr()\nsns.heatmap(cor3, annot=True, cmap=\"seismic\",annot_kws={\"size\":8})\nplt.show()","22ebe8e4":"score3 = acc_score(data_pd,label_pd)\nscore3","3ffc783a":"corrate_pd = [0.5,0.6,0.7,0.8,0.9,0.95]\nclassifiers = score3[\"Classifier\"].tolist()\nscore_pd = acc_score_cor(data_pd,label_pd,corrate_pd)\nscore_pd.style.apply(highlight_max, subset = score_pd.columns[1:], axis=None)","a59b0677":"plot2(score_pd,0.75,1,2.5,0.765,c = \"orange\")","b41398c8":"data_pcos = pd.read_csv(\"..\/input\/pcos-dataset\/PCOS_data.csv\")\nlabel_pcos = data_pcos[\"PCOS (Y\/N)\"]\ndata_pcos.drop([\"Sl. No\",\"Patient File No.\",\"PCOS (Y\/N)\",\"Unnamed: 44\",\"II    beta-HCG(mIU\/mL)\",\"AMH(ng\/mL)\"],axis = 1,inplace = True)\ndata_pcos[\"Marraige Status (Yrs)\"].fillna(data_pcos['Marraige Status (Yrs)'].describe().loc[['50%']][0], inplace = True) \ndata_pcos[\"Fast food (Y\/N)\"].fillna(1, inplace = True) \n\nprint(\"PCOS dataset:\\n\",data_pcos.shape[0],\"Records\\n\",data_pcos.shape[1],\"Features\")","3c1a97c1":"display(data_pcos.head())\nprint(\"The features in this dataset have both discrete and continuous values\")","8589ee33":"plt.figure(figsize=(18,18))\ncor4 = data_pcos.corr()\nsns.heatmap(cor4, annot=True, cmap=\"YlOrBr\",annot_kws={\"size\":8})\nplt.show()","437927be":"score4 = acc_score(data_pcos,label_pcos)\nscore4","931bf00a":"corrate_pcos = [0.4,0.5,0.6,0.8,0.9,0.95]\nclassifiers = score4[\"Classifier\"].tolist()\nscore_pcos = acc_score_cor(data_pcos,label_pcos,corrate_pcos)\nscore_pcos.style.apply(highlight_max, subset = score_pcos.columns[1:], axis=None)","c209f005":"plot2(score_pcos,0.60,1,2.5,0.975,c = \"limegreen\")","140c5942":"## Feature Selection\n#### Feature selection is the process of reducing the number of input variables when developing a predictive model. It is desirable to reduce the number of input variables to both reduce the computational cost of modeling and, in some cases, to improve the performance of the model.","ebddbd6a":"#### Best Accuracy with all features : RandomForest Classifier - 0.972\n#### Best Accuracy after applying with correlation() : LinearSVM - for = (0.9,0.99) - 0.972  and DecisionTree Classifier - for = (0.9) - 0.972\n#### Here we see no improvement.","c8122edf":"________\n# PCOS\n________","ce885c11":"### 4. Visualization","5ef6718f":"#### Best Accuracy with all features : RandomForest Classifier - 0.889\n#### Best Accuracy after applying with correlation() : DecisionTree Classifier - for = (0.9) - 0.904\n#### Here we can see an improvement of ~1.5%.","164e7467":"#### Best Accuracy with all features : DecisionTree Classifier - 0.918\n#### Best Accuracy after applying with correlation() : RandomForest Classifier - for = (0.9) - 0.938\n#### Here we can see an improvement of 2%.","611874c8":"### 1. Looking at dataset","e2f1cd82":"__________\n","86a934da":"#### From looking at these results we can see that there is a possibility of slight improvement in the accuracy after removing features that are correlated.\n#### Link to other feature selection methods:\n##### [Genetic Algorithm](https:\/\/www.kaggle.com\/tanmayunhale\/genetic-algorithm-for-feature-selection)\n##### [Variance Threshold](https:\/\/www.kaggle.com\/tanmayunhale\/feature-selection-variance-threshold)\n##### [F-score](https:\/\/www.kaggle.com\/tanmayunhale\/feature-selection-f-score)","64502ba8":"### 4. Visualization","35e96a2f":"### 1. Looking at dataset","a4a25d78":"________\n### Function Description\n\n#### 1. split():\nSplits the dataset into training and test set.\n\n#### 2. correlation():\nReturns the dataframe after dropping features with greater correlation than the given value.\n\n#### 3. acc_score():\nReturns accuracy for all the classifiers.\n\n#### 4. acc_score_cor():\nReturns accuracy for all the classifiers after dropping features for the respective correlation value.\n\n#### 5. plot2():\nFor plotting the results.\n_____\n### The following 3 datasets are used:\n1. Breast Cancer\n2. Parkinson's Disease\n3. PCOS\n______\n### Plan of action:\n* Looking at dataset (includes a little preprocessing)\n* Heatmap (Plotting the heatmap)\n* Checking Accuracy (comparing accuracies with the new dataset)\n* Visualization (Plotting the graphs)\n_______","c24122e0":"### 2. Heatmap","fd503363":"### 4. Visualization","f22ae9b9":"## Pearson Correlation\n_______\n#### Pearson's correlation coefficient is the test statistics that measures the statistical relationship, or association, between two continuous variables. It gives information about the magnitude of the association, or correlation, as well as the direction of the relationship.\n#### There are two types of correlations. Positive Correlation: means that if feature A increases then feature B also increases or if feature A decreases then feature B also decreases. Both features move in tandem and they have a linear relationship. Negative Correlation: means that if feature A increases then feature B decreases and vice versa.\n\n![](https:\/\/www.researchgate.net\/profile\/Ivan-Nikolov\/publication\/345362331\/figure\/fig11\/AS:954798429978645@1604653093872\/Correlation-matrix-of-the-used-metrics-together-with-the-dependent-variable-For-easier.ppm)\n\n#### We will be choosing our features after calculations based on correlation matrix.\n#### If 2 or more independent features are highly correlated then they can be considered as duplicate features and can be dropped. When independent variables are highly correlated, change in one variable would cause change to another and so the model results fluctuate significantly. The model results will be unstable and vary a lot given a small change in the data or model. Both positive and negative correlations are taken into consideration.  \n     \n_______","56d19cae":"________\n# Parkinson's Disease\n___________","c68f0fce":"### Importing required libraries","bb13691a":"### 3. Checking Accuracy","4e12d5b9":"### 3. Checking Accuracy","c5d7ca7b":"### 2. Heatmap","570fc31b":"### 3. Checking Accuracy","99400848":"### 2. Heatmap","0bb214ca":"__________\n# Breast Cancer\n_________________","bd1be264":"### 1. Looking at dataset"}}