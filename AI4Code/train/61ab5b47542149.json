{"cell_type":{"5e9aa2f0":"code","9a3064d7":"code","1cee3d8a":"code","3cd2907f":"code","b2705c69":"code","f6a81023":"code","d50a1514":"code","44fa6f52":"code","1432cd7d":"code","64116290":"code","4672074f":"code","33f7c18f":"code","e8563e4a":"code","7ba322ef":"code","e27e110d":"code","c83cd08a":"code","bd47762e":"code","87a8b858":"code","486675fd":"code","9f9441c9":"code","c85300b2":"code","4b8ae7b7":"code","1150f793":"code","9eca46fa":"code","bf8e4d1c":"code","1555c896":"code","5d92c17a":"code","885b0bee":"code","40d945b9":"code","1b4ee739":"code","b5da9efd":"code","25ba74a6":"code","b373e584":"code","31f42490":"code","3b422bb6":"code","a3520ba7":"code","e3a31174":"code","8029ce59":"code","cf34ac08":"code","d1b8d805":"code","6d97e97e":"code","7fe762d7":"code","c52b3181":"code","b0a5db15":"code","1f50e473":"code","94bd40c8":"code","7ec33c72":"code","e8400cc1":"code","a0796d73":"code","653bbf69":"code","373f18c5":"code","5b795049":"code","775a0adf":"code","3f744d5c":"code","bc9e3244":"code","b4d291ed":"code","fa320f1f":"code","c2e7b3ff":"code","515ff82e":"markdown","f4308851":"markdown"},"source":{"5e9aa2f0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\nimport seaborn as sns\nsns.set()     \n\n\nimport os\nprint(os.listdir(\"..\/input\"))","9a3064d7":"raw_data = pd.read_csv('..\/input\/1.04. Real-life example.csv')\nraw_data.head()","1cee3d8a":"raw_data.describe(include='all')","3cd2907f":"data = raw_data.drop(['Model'],axis=1)\ndata.describe(include='all')","b2705c69":"data.isnull().sum()","f6a81023":"data_no_mv = data.dropna(axis=0)","d50a1514":"data_no_mv.describe(include='all')","44fa6f52":"sns.distplot(data_no_mv['Price'])","1432cd7d":"q = data_no_mv['Price'].quantile(0.99)\ndata_1 = data_no_mv[data_no_mv['Price']<q]\ndata_1.describe(include='all')","64116290":"sns.distplot(data_1['Price'])","4672074f":"sns.distplot(data_no_mv['Mileage'])","33f7c18f":"q = data_1['Mileage'].quantile(0.99)\ndata_2 = data_1[data_1['Mileage']<q]","e8563e4a":"sns.distplot(data_2['Mileage'])","7ba322ef":"sns.distplot(data_no_mv['EngineV'])","e27e110d":"data_3 = data_2[data_2['EngineV']<6.5]","c83cd08a":"sns.distplot(data_3['EngineV'])","bd47762e":"sns.distplot(data_no_mv['Year'])","87a8b858":"q = data_3['Year'].quantile(0.01)\ndata_4 = data_3[data_3['Year']>q]","486675fd":"sns.distplot(data_4['Year'])","9f9441c9":"data_cleaned = data_4.reset_index(drop=True)","c85300b2":"data_cleaned.describe(include='all')","4b8ae7b7":"f, (ax1, ax2, ax3) = plt.subplots(1, 3, sharey=True, figsize =(15,3))\nax1.scatter(data_cleaned['Year'], data_cleaned['Price'])\nax1.set_title('Price and Year')\nax2.scatter(data_cleaned['EngineV'],data_cleaned['Price'])\nax2.set_title('Price and EngineV')\nax3.scatter(data_cleaned['Mileage'],data_cleaned['Price'])\nax3.set_title('Price and Mileage')\n\nplt.show()","1150f793":"sns.distplot(data_cleaned['Price'])","9eca46fa":"log_price = np.log(data_cleaned['Price'])\ndata_cleaned['log_price'] = log_price\ndata_cleaned","bf8e4d1c":"f, (ax1, ax2, ax3) = plt.subplots(1, 3, sharey=True, figsize =(15,3))\nax1.scatter(data_cleaned['Year'], data_cleaned['log_price'])\nax1.set_title('Log Price and Year')\nax2.scatter(data_cleaned['EngineV'],data_cleaned['log_price'])\nax2.set_title('Log Price and EngineV')\nax3.scatter(data_cleaned['Mileage'],data_cleaned['log_price'])\nax3.set_title('Log Price and Mileage')\n\nplt.show()","1555c896":"data_cleaned = data_cleaned.drop(['Price'],axis=1)","5d92c17a":"data_cleaned.columns.values","885b0bee":"from statsmodels.stats.outliers_influence import variance_inflation_factor\nvariables = data_cleaned[['Mileage','Year','EngineV']]\nvif = pd.DataFrame()\nvif[\"VIF\"] = [variance_inflation_factor(variables.values, i) for i in range(variables.shape[1])]\nvif[\"features\"] = variables.columns","40d945b9":"vif","1b4ee739":"data_no_multicollinearity = data_cleaned.drop(['Year'],axis =1)","b5da9efd":"data_with_dummies = pd.get_dummies(data_no_multicollinearity, drop_first=True)","25ba74a6":"data_with_dummies.head()","b373e584":"data_with_dummies.columns.values","31f42490":"cols = ['log_price', 'Mileage', 'EngineV', 'Brand_BMW',\n       'Brand_Mercedes-Benz', 'Brand_Mitsubishi', 'Brand_Renault',\n       'Brand_Toyota', 'Brand_Volkswagen', 'Body_hatch', 'Body_other',\n       'Body_sedan', 'Body_vagon', 'Body_van', 'Engine Type_Gas',\n       'Engine Type_Other', 'Engine Type_Petrol', 'Registration_yes']","3b422bb6":"data_preprocessed = data_with_dummies[cols]\ndata_preprocessed.head()","a3520ba7":"targets = data_preprocessed['log_price']\ninputs = data_preprocessed.drop(['log_price'],axis=1)","e3a31174":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaler.fit(inputs)","8029ce59":"inputs_scaled = scaler.transform(inputs)","cf34ac08":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(inputs_scaled, targets, test_size=0.2, random_state=365)","d1b8d805":"reg = LinearRegression()\nreg.fit(x_train,y_train)","6d97e97e":"y_hat = reg.predict(x_train)","7fe762d7":"plt.scatter(y_train, y_hat)\nplt.xlabel('targets (y_train)', size=18)\nplt.ylabel('Predictions (y_hat)', size=18)\nplt.xlim(6,13)\nplt.xlim(6,13)\nplt.show()","c52b3181":"sns.distplot(y_train - y_hat)\nplt.title(\"Residuals PDF\", size=10)","b0a5db15":"reg.score(x_train, y_train)","1f50e473":"reg.intercept_","94bd40c8":"reg.coef_","7ec33c72":"reg_summary = pd.DataFrame(inputs.columns.values, columns=['Features'])\nreg_summary['weights'] = reg.coef_\nreg_summary","e8400cc1":"data_cleaned['Brand'].unique()","a0796d73":"y_hat_test = reg.predict(x_test)","653bbf69":"plt.scatter(y_test, y_hat_test)\nplt.xlabel('Targets (y_test)', size=18)\nplt.ylabel('Predictions (y_hat_test)', size=18)\nplt.xlim(6,13)\nplt.xlim(6,13)\nplt.show()","373f18c5":"df_pf = pd.DataFrame(np.exp(y_hat_test), columns=['Prediction'])\ndf_pf.head()","5b795049":"df_pf['Target'] = np.exp(y_test)\ndf_pf","775a0adf":"y_test = y_test.reset_index(drop=True)\ny_test.head()","3f744d5c":"df_pf['Target'] = np.exp(y_test)\ndf_pf","bc9e3244":"df_pf['Residual'] = df_pf['Target'] - df_pf['Prediction']","b4d291ed":"df_pf['Difference%'] = np.absolute(df_pf['Residual']\/df_pf['Target']*100)\ndf_pf","fa320f1f":"df_pf.describe()","c2e7b3ff":"pd.options.display.max_rows = 999\npd.set_option('display.float_format', lambda x: '%.2f' % x)\ndf_pf.sort_values(by=['Difference%'])","515ff82e":"## Train Test Split ##","f4308851":"## Testing ##"}}