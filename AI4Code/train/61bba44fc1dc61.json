{"cell_type":{"d95a6bd4":"code","d119b297":"code","408a91d7":"code","f3beec3c":"code","162cd5a0":"code","481c00d2":"code","cdb8d8e3":"code","1cca749b":"code","7ee7241e":"code","e604ddd7":"code","3e042cf3":"code","49df5765":"code","ed36b68c":"code","ecca0a88":"code","ef3a9610":"code","6f0132be":"code","4f20c448":"code","1490eddd":"code","d03fbfd5":"code","4efcfeac":"code","259651ca":"code","d0ea3b17":"code","532c7ba0":"code","c72d518a":"code","a7793eb7":"code","7d200088":"code","0b8d609c":"markdown","eab8d591":"markdown","332ac983":"markdown","7d873de0":"markdown","e980d9ff":"markdown","a749e746":"markdown","e7cc2bdf":"markdown","4d1e6217":"markdown","b28a41ee":"markdown","866e1c88":"markdown","435c9167":"markdown","8c5f2c0d":"markdown","ade58140":"markdown","ac867920":"markdown","ee7f7716":"markdown","d2631aff":"markdown","f6cdf888":"markdown","309c1279":"markdown","82c56268":"markdown","a209c2fa":"markdown","c0083590":"markdown","755b5618":"markdown","c5af9298":"markdown","51ff6adb":"markdown","ec4036a9":"markdown"},"source":{"d95a6bd4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d119b297":"import seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set()","408a91d7":"df = pd.read_csv('\/kaggle\/input\/hotel-booking-demand\/hotel_bookings.csv')","f3beec3c":"df.isnull().sum()","162cd5a0":"df['country'] = df['country'].replace(np.nan,'UNK')\ndf['company'] = df['company'].replace(np.nan,0)\ndf['agent'] = df['agent'].replace(np.nan,0)\ndf['children']= df['children'].replace(np.nan,0)","481c00d2":"def perc_canceled_bookings(feature,dataframe=df,xticks_rotation=0,show_dataframe=False,plot=True,sort_v=False,ascend=True,top=10):\n    dataframe['x'] = 'a'\n    dataframe['y'] = 'b'\n    no_of_canceled_bookings = dataframe.loc[dataframe['is_canceled'] == 1].groupby(feature).count()['x'].reset_index()\n    no_of_total_bookings = dataframe.groupby(feature).count()['y'].reset_index()\n    new_df = pd.merge(no_of_canceled_bookings,no_of_total_bookings,how='outer')\n    new_df['x'] = new_df['x'].replace(np.nan,0)\n    new_df['perc_canceled_bookings'] = new_df['x'] \/ new_df['y']\n    if sort_v :\n        new_df = new_df.sort_values('perc_canceled_bookings',ascending=ascend).reset_index(drop=True)\n        new_df = new_df.head(top)\n    del dataframe['x']\n    del dataframe['y']\n    new_df.columns = [feature,'total_canceled_bookings','total_bookings','perc_canceled_bookings']\n    sns.set()\n    if plot:\n        fig , axi = plt.subplots(1,2,figsize=(12,4))\n        sns.barplot(x=new_df[feature],y=new_df['perc_canceled_bookings'],ax=axi[0])\n        sns.barplot(x=new_df[feature],y=new_df['total_bookings'],ax=axi[1])\n        axi[0].tick_params(axis='x',rotation=xticks_rotation)\n        axi[1].tick_params(axis='x',rotation=xticks_rotation)\n\n        plt.tight_layout()\n\n\n    if show_dataframe:\n        \n        return new_df","cdb8d8e3":"perc_canceled_bookings('hotel')","1cca749b":"perc_canceled_bookings('meal')","7ee7241e":"perc_canceled_bookings('market_segment',xticks_rotation=90)","e604ddd7":"perc_canceled_bookings('deposit_type')","3e042cf3":"perc_canceled_bookings('customer_type')","49df5765":"df['is_room_same'] = np.where(df['assigned_room_type']==df['reserved_room_type'],1,0)\ndef perc(feature,xticks_rotation=0,dataframe=False,plot=True,sort_v=False,ascend=True,top=10):\n    df['x'] = 'a'\n    df['y'] = 'b'\n    no_of_canceled_bookings = df.loc[df['is_canceled'] == 1].groupby([feature,'is_room_same']).count()['x'].reset_index()\n    no_of_total_bookings = df.groupby([feature,'is_room_same']).count()['y'].reset_index()\n    new_df = pd.merge(no_of_canceled_bookings,no_of_total_bookings)\n    new_df['perc_canceled_bookings'] = new_df['x'] \/ new_df['y']\n    if sort_v :\n        new_df = new_df.sort_values('perc_canceled_bookings',ascending=ascend).reset_index(drop=True)\n        new_df = new_df.head(top)\n    del df['x']\n    del df['y']\n    new_df.columns = [feature,'is_room_same','total_canceled_bookings','total_bookings','perc_canceled_bookings']\n    sns.set()\n    if plot:\n        fig , axi = plt.subplots(1,2,figsize=(12,4))\n        sns.barplot(x=new_df[feature],y=new_df['perc_canceled_bookings'],hue=new_df['is_room_same'],ax=axi[0])\n        sns.barplot(x=new_df[feature],y=new_df['total_bookings'],hue=new_df['is_room_same'],ax=axi[1])\n        axi[0].tick_params(axis='x',rotation=xticks_rotation)\n        axi[1].tick_params(axis='x',rotation=xticks_rotation)\n\n        plt.tight_layout()\n\n\n    if dataframe:\n        \n        return new_df","ed36b68c":"perc('reserved_room_type')","ecca0a88":"perc_canceled_bookings('booking_changes')","ef3a9610":"perc_canceled_bookings('required_car_parking_spaces')","6f0132be":"perc_canceled_bookings('babies')","4f20c448":"perc_canceled_bookings('children')","1490eddd":"perc_canceled_bookings('total_of_special_requests')","d03fbfd5":"perc_canceled_bookings('adults')","4efcfeac":"perc_canceled_bookings('arrival_date_month',xticks_rotation=90)","259651ca":"perc_canceled_bookings('is_repeated_guest')","d0ea3b17":"perc_canceled_bookings('distribution_channel')","532c7ba0":"features = ['company']\nfig, axi = plt.subplots(1,2,figsize=(8,4))\n\nfor feature in features:\n    \n    df1 = df.groupby(feature).count()['hotel'].reset_index().sort_values('hotel',ascending=False).reset_index(drop=True)\n    df1.head()\n    df2 = df.groupby([feature,'is_canceled']).count()['hotel'].reset_index().sort_values('hotel',ascending=False).reset_index(drop=True)\n    df1.columns=[feature,'total_bookings']\n    df2 = df2[df2['is_canceled']==1]\n    del df2['is_canceled']\n    df2.columns = [feature,'total_canceled_bookings']\n    df3 = pd.merge(df1,df2,how='outer')\n    df3 = df3.fillna(0)\n    df3['perc_canceled_bookings'] = df3['total_canceled_bookings'] \/ df3['total_bookings']\n    df3 = df3.sort_values('total_bookings',ascending=False).head(10)\n    sns.barplot(data=df3,x=feature,y='total_bookings',ax=axi[0])\n    sns.barplot(data=df3,x=feature,y='perc_canceled_bookings',ax=axi[1])\n    \n    axi[0].tick_params(axis='x',rotation=90)\n    axi[1].tick_params(axis='x',rotation=90)\n\n    plt.tight_layout()\n\n    ","c72d518a":"features = ['country']\nfig, axi = plt.subplots(1,2,figsize=(8,4))\n\nfor feature in features:\n    \n    df1 = df.groupby(feature).count()['hotel'].reset_index().sort_values('hotel',ascending=False).reset_index(drop=True)\n    df1.head()\n    df2 = df.groupby([feature,'is_canceled']).count()['hotel'].reset_index().sort_values('hotel',ascending=False).reset_index(drop=True)\n    df1.columns=[feature,'total_bookings']\n    df2 = df2[df2['is_canceled']==1]\n    del df2['is_canceled']\n    df2.columns = [feature,'total_canceled_bookings']\n    df3 = pd.merge(df1,df2,how='outer')\n    df3 = df3.fillna(0)\n    df3['perc_canceled_bookings'] = df3['total_canceled_bookings'] \/ df3['total_bookings']\n    df3 = df3.sort_values('total_bookings',ascending=False).head(10)\n    sns.barplot(data=df3,x=feature,y='total_bookings',ax=axi[0])\n    sns.barplot(data=df3,x=feature,y='perc_canceled_bookings',ax=axi[1])\n    \n    axi[0].tick_params(axis='x',rotation=90)\n    axi[1].tick_params(axis='x',rotation=90)\n\n    plt.tight_layout()\n\n    ","a7793eb7":"features = ['agent']\nfig, axi = plt.subplots(1,2,figsize=(8,4))\n\nfor feature in features:\n    \n    df1 = df.groupby(feature).count()['hotel'].reset_index().sort_values('hotel',ascending=False).reset_index(drop=True)\n    df1.head()\n    df2 = df.groupby([feature,'is_canceled']).count()['hotel'].reset_index().sort_values('hotel',ascending=False).reset_index(drop=True)\n    df1.columns=[feature,'total_bookings']\n    df2 = df2[df2['is_canceled']==1]\n    del df2['is_canceled']\n    df2.columns = [feature,'total_canceled_bookings']\n    df3 = pd.merge(df1,df2,how='outer')\n    df3 = df3.fillna(0)\n    df3['perc_canceled_bookings'] = df3['total_canceled_bookings'] \/ df3['total_bookings']\n    df3 = df3.sort_values('total_bookings',ascending=False).head(10)\n    sns.barplot(data=df3,x=feature,y='total_bookings',ax=axi[0])\n    sns.barplot(data=df3,x=feature,y='perc_canceled_bookings',ax=axi[1])\n    \n    axi[0].tick_params(axis='x',rotation=90)\n    axi[1].tick_params(axis='x',rotation=90)\n\n    plt.tight_layout()\n\n    ","7d200088":"month_order = ['January', 'February', 'March', 'April', 'May', 'June',\n              'July', 'August', 'September', 'October', 'November', 'December']\n\nfig, axi = plt.subplots(2,1,figsize=(12,10))\nsns.pointplot(data=df,x='arrival_date_month',y='adr',hue='hotel',order=month_order,ax=axi[1])\nsns.pointplot(data=df,x='arrival_date_month',y='is_canceled',hue='hotel',order=month_order,ax=axi[0])\n\naxi[0].tick_params(axis='x',rotation=90)\naxi[1].tick_params(axis='x',rotation=90)\n\nplt.tight_layout()","0b8d609c":"* Bookings of guests with 0 special request are highest and their chances of being canceled are also highest.\n","eab8d591":"* Bookings with Non Refundable deposit type are most likely to be canceled.\n* Least number of booking are with refundable deposit type and they are least likely to be canceled.","332ac983":"Most of the bookings are for 0 to 4 adults so:\n* Bookings for couples are most likely to be canceled.\n* Most of the bookings are for couples.","7d873de0":"In the list of top 10 countries with maximum number of bookings:\n\n* PRT(Portugal) has the maximum number of bookings and maximum likelyhood of cancellations.\n* DEU(Germany) has the least percentage of canceled bookings.","e980d9ff":"# Handling Missing Values\n\n### We are going to impute the missing values:\n\n* For the missing Country code we will impute 'UNK' as in unknown country.\n* For the missing company value we will impute 0 because guest must have made the reservation at the counter.\n* For the missing agent value we will impute 0 because guest must have made the reservation at the counter.\n* For the missing children value we will impute 0 because most of the vlues in this column are 0.","a749e746":"Undefined market segment's booking are only 2 so if neglect them:\n* Complementry bookings are the least likely to be canceled, which makes sense.\n* Direct bookings are the second least likely to be canceled.\n* Groups bookings are most likely to be canceled.\n","e7cc2bdf":"If we neglect the undefined distribution channel:\n* TA\/TO channel has the highest number of bookings and the highest percentage of canceled bookings.\n* Direct bookings are least likely to be canceled.","4d1e6217":"* Number of bookings are highest in august.\n* Percentage of reservation cancellation is highest for june.","b28a41ee":"In the list of top 10 agents with maximum number of bookings:\n* Agent 9 has the maximum number of bookings and second highest percentage of canceled bookings.\n* Agent 1 has the highest percentage of canceled bookings.\n* Agent 28 has the least number of bookings and least percentage of canceled bookings.","866e1c88":"* Repeated guest are less likely to cancel their reservation.","435c9167":"In the list of top 10 companies with maximum number of bookings:\n\n* Maximum number of bookings are done by guests on the reception(without using any company).\n* company 154 has the least percentage of canceled reservations.\n* But company 67 has the maximum percentage of canceled reservations.","8c5f2c0d":"* Guests without any babies are more likely to cancel their reservations.","ade58140":"* The least number of bookings are for FB(Breakfast + Lunch + Dinner) but they have the highest chance of being canceled.","ac867920":"* Average daily rate is least on january for both city hotel and resort hotel.\n* Average daily rate is higher for city hotels than resort hotel except for the months july and august.","ee7f7716":"There are only 2 reservations with 16 booking changes, so if we look past that:\n* Reservations with no booking changes are more likely to be canceled.\n* Most of the bookings are with no booking changes.","d2631aff":"## What are the top 10 companies with maximum number of bookings and their percentage of cancelation?","f6cdf888":"* a guest is more likely to book a city hotel because number of bookings for city hotel is much higher than resort hotel\n* city hotel booking is more likely to be canceled.","309c1279":"In next version we will create a model.","82c56268":"## What are the top 10 agents with maximum number of bookings and their percentage of cancelation?","a209c2fa":"* Guests with no required parking space are most likely to cancel their reservation.\n* So if guest requires a parking space, their resevation is very less likely to be canceled.","c0083590":"There is only one booking with 10 children so if we neglect that:\n* Guests with 2 children are more likely to cancel their reservation.","755b5618":"* Group has the least number of bookings but they are least likely to be cancelled.\n* Transient has the maximum number of bookings and they are most likely to be canceled.","c5af9298":"## What are the top 10 countries with maximum number of bookings and their percentage of cancelation?","51ff6adb":"# **EDA**\nHere we will explore every feature one by one:","ec4036a9":"Reservatios for L and P rooms are very few so if don't consider them then: \n* Most of the reservatios are for room A and percentage of cancelation is also higher for room A when the assigned room type and reserved room type are same.\n* So stangely if the reserved room type is same as the assigned room type then chances of booking getting canceled are higher."}}