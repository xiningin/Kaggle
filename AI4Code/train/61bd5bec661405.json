{"cell_type":{"06a056e6":"code","f7b28d6f":"code","719e1b49":"code","dbaaf839":"code","567eedd5":"code","01dff46a":"code","9c7c5d88":"code","f5c0e692":"code","44d0e7a5":"code","b258f8a9":"code","815c298b":"code","7f930f9b":"markdown","2ae0281b":"markdown","ccb260fa":"markdown","a41c288b":"markdown"},"source":{"06a056e6":"import numpy as np # linear algebra\n\n# load tensorflow-datasets as tfds\nimport tensorflow_datasets as tfds\n\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras.preprocessing.text import Tokenizer\nfrom tensorflow.keras.preprocessing.sequence import pad_sequences","f7b28d6f":"imdb, info = tfds.load(\"imdb_reviews\", with_info=True, as_supervised=True)","719e1b49":"train_data, test_data = imdb['train'], imdb['test']\n\ntraining_sentences = []\ntraining_labels = []\n\ntesting_sentences = []\ntesting_labels = []","dbaaf839":"for s,l in train_data:\n\ttraining_sentences.append(str(s.numpy()))\n\ttraining_labels.append(l.numpy())\n\nfor s,l in test_data:\n\ttesting_sentences.append(str(s.numpy()))\n\ttesting_labels.append(l.numpy())","567eedd5":"training_labels_final = np.array(training_labels)\ntesting_labels_final = np.array(testing_labels)","01dff46a":"# setting parameter values\nvocab_size = 10000\nembedding_dim = 16\nmax_length = 120\ntrunc_type = 'post'\noov_tok = \"<OOV>\"","9c7c5d88":"tokenizer = Tokenizer(num_words = vocab_size, oov_token = oov_tok)\ntokenizer.fit_on_texts(training_sentences)\nword_index = tokenizer.word_index\nsequences = tokenizer.texts_to_sequences(training_sentences)\npadded = pad_sequences(sequences, maxlen=max_length, truncating=trunc_type)\n\ntesting_sequences = tokenizer.texts_to_sequences(testing_sentences)\ntesting_padded = pad_sequences(testing_sequences, maxlen=max_length)","f5c0e692":"# Define Neural Network\n\nmodel = tf.keras.Sequential([\n\ttf.keras.layers.Embedding(vocab_size, embedding_dim, input_length=max_length),\n\ttf.keras.layers.Flatten(),\n\ttf.keras.layers.Dense(6, activation='relu'),\n\ttf.keras.layers.Dense(1, activation='sigmoid')\n])","44d0e7a5":"model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\nmodel.summary()","b258f8a9":"# Training model\nnum_epochs = 10\nmodel.fit(padded,\n          training_labels_final,\n          epochs = num_epochs,\n          validation_data = (testing_padded, testing_labels_final))","815c298b":"sentence = [\"I really think this is amazing. honest.\"]\nsequences = tokenizer.texts_to_sequences(sentence)\npadded = pad_sequences(sequences, maxlen=max_length, truncating=trunc_type)\nprint(model.predict(padded))","7f930f9b":"# IMDB Movie Sentiment Classification for beginners","2ae0281b":"# Load Dataset from tensorflow_datasets","ccb260fa":"## Split data into train and test","a41c288b":"# Import required packages."}}