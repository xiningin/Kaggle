{"cell_type":{"53927903":"code","497b91a7":"code","38fee018":"code","7be21f4d":"code","04b37f99":"code","e8b73b58":"code","586e2828":"code","e39dd25e":"code","19313c5c":"code","c1abb164":"code","a2a95052":"code","6e5f0f43":"code","d404589d":"code","4dc8ea79":"code","08eab3cd":"code","3b47d060":"code","d28830a9":"markdown","de661b9e":"markdown","30dd3209":"markdown","f910dfff":"markdown","c1907eab":"markdown","76eb43d0":"markdown","c897fabf":"markdown","89f2d754":"markdown","987cae0c":"markdown","48e68592":"markdown","3f948f27":"markdown","d0ed7e04":"markdown","77692d85":"markdown","3289ae5e":"markdown","56886f59":"markdown","698ca7da":"markdown"},"source":{"53927903":"import numpy as np \nimport pandas as pd \n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom catboost import CatBoostClassifier","497b91a7":"train_data = pd.read_csv(\"..\/input\/train.csv\")\ntest_data = pd.read_csv(\"..\/input\/test.csv\")","38fee018":"train_data.head()","7be21f4d":"test_data.head()","04b37f99":"print(\"******** TRAIN ********\")\nprint(train_data.info())\nprint(\"******** TEST ********\")\nprint(test_data.info())","e8b73b58":"train_data.drop(axis=1,columns=([\"PassengerId\",\"Cabin\",\"Name\"]),inplace=True)\n\nsubmission_passengers = test_data.PassengerId\n\ntest_data.drop(axis=1,columns=([\"PassengerId\",\"Cabin\",\"Name\"]),inplace=True)","586e2828":"plt.figure(figsize=(10,5))\nplt.title(\"Embarked CountPlot\")\nsns.countplot(data=train_data, x=\"Embarked\")\nplt.show()","e39dd25e":"train_data.Embarked.fillna(value=\"S\",inplace=True)","19313c5c":"train_data.fillna(value=-10,inplace=True)\ntest_data.fillna(value=-10,inplace=True)","c1abb164":"print(\"******** TRAIN ********\")\nprint(train_data.info())\nprint(\"******** TEST ********\")\nprint(test_data.info())","a2a95052":"train_y = train_data.Survived\n\ntrain_data.drop(axis=1,columns=([\"Survived\"]),inplace=True)\n\ntrain_x = train_data\ntest_x = test_data","6e5f0f43":"cat_model = CatBoostClassifier(cat_features=[0,1,3,4,5,7])","d404589d":"cat_model.fit(train_x,train_y)","4dc8ea79":"predictions = cat_model.predict(test_x)","08eab3cd":"my_submission = pd.DataFrame({'PassengerId': submission_passengers ,'Survived': (predictions.astype(\"Int64\")) })","3b47d060":"my_submission.to_csv(\"my_first_sub.csv\",index=False)","d28830a9":"As we see above, \"S\" is most common value. I will use it to fill my null rows.","de661b9e":"Loading the datasets","30dd3209":"Importing the required libraries.","f910dfff":"# Introduction\n## in this notebook, I will implement CatBoost to predict if a passenger of Titanic survived or not. ","c1907eab":"Lastly, I need to save my predictions in format that is acceptable for the competition","76eb43d0":"To finish, I do export my submission file. :)","c897fabf":"Then I continue by training my model","89f2d754":"And I will continue by finding the best way for filling small amounts of null values.\n\nOn train.csv there are only 2 null rows on \"Embarked\" column.\nTo fill this one, I will use most commonly used option from 3 different string objects. [ \"S\" , \"C\" , \"Q\" ]\n\nRest of null rows are on numerical Columns.\nTo fill them, I will use some random but unused value. (e.g. -10)","987cae0c":"## Splitting\n\nNow I can split features and labels for my future model.","48e68592":"## **EDA** \non both datasets","3f948f27":"# Conclusion\n\nCatBoost made my life so much easier with the \"cat_features\" Because I didn't have to deal with any Labelling, which is cool :)\n\n\n## Thanks for reading and Best Regards, Efe.","d0ed7e04":"When looking above, I see that most of the rows of the column \"Cabin\" is null. Also, \"PassengerID\" and \"Name\" is not going to be super useful.\n\nSo, I decided to drop that columns on both datasets completely.\n\n** I will only save the PassengerId of test_data for my future submission. **","77692d85":"Our Dataset has no more null value now.","3289ae5e":"Now I can fill everything left with a random negative numerical value.","56886f59":"## The CatBoost Model\n\ncat_features should be equal to index values of columns that aren't float type.\n\nlearning_rate was optional so I made it 0.3 for fun :)","698ca7da":"Then predicting"}}