{"cell_type":{"05e5d9cb":"code","87914952":"code","90295b2b":"code","320fa49d":"code","44eccc15":"code","ae91ab1d":"code","8626657f":"code","bc2aa35a":"code","36e4d673":"code","55245e0e":"code","0510dca2":"code","1df7b201":"code","35f86f45":"code","b2efff91":"code","490676c6":"code","a871459f":"code","1b94b5d8":"code","e9bee2db":"code","00dff1ef":"code","c98cb859":"code","c3f3e7fa":"code","7078ffd5":"code","15b406d8":"code","bf05a02e":"code","0c22b052":"code","d9d033f2":"code","cfe2dd05":"code","98b47054":"code","dfc56890":"code","e817d683":"code","9c8b7673":"code","9c558f9c":"code","fe211698":"code","3ddae168":"code","2118172b":"code","b727a526":"code","6e5d4d79":"code","2c21d5d1":"code","0210c211":"code","b21e0cba":"code","eebd6be3":"code","5baf3270":"code","4ae6f2fb":"code","41ab7c81":"code","69749d0d":"code","77e82cd8":"markdown","8587b6fc":"markdown","9ab52950":"markdown","662c2210":"markdown","d9acba77":"markdown","7604cedb":"markdown","477cff5c":"markdown","75ea53db":"markdown","dd5e3a7f":"markdown","d39ceb65":"markdown","986a3a16":"markdown","9e718ea6":"markdown","f9c6f0ec":"markdown","78a5f80c":"markdown","eeafd0ed":"markdown","8b94f848":"markdown","a3dc87dc":"markdown","26377534":"markdown","3fd512ce":"markdown","1252dfda":"markdown","db75fa59":"markdown","80dfd623":"markdown","65999a40":"markdown","e89018da":"markdown","8e2f3eb5":"markdown","44da2773":"markdown"},"source":{"05e5d9cb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","87914952":"import datetime \nimport requests\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt","90295b2b":"mpl.rcParams['figure.figsize']=(10,8)\nmpl.rcParams['axes.grid']=False","320fa49d":"coindesk='https:\/\/api.coindesk.com\/v1\/bpi\/historical\/close.json?'","44eccc15":"start=datetime.date(2017,1,1)\nend=datetime.date(2020,11,20)","ae91ab1d":"url=f'{coindesk}start={start:%Y-%m-%d}&end={end:%Y-%m-%d}'\n\nresult=requests.get(url)\nresult","8626657f":"type(result)","bc2aa35a":"print(result.content)","36e4d673":"df=pd.read_json(result.content).iloc[:,:]\ndf.head()","55245e0e":"df=df.iloc[:-2,:1]\ndf.index.name='date'\ndf.index=pd.to_datetime(df.index)\ndf.head()","0510dca2":"type(df.index)","1df7b201":"df.shape","35f86f45":"df.plot()","b2efff91":"df.head(35)","490676c6":"df.tail(5)","a871459f":"df.resample('Q').mean() #It takes only the quarter data of the year by averaging","1b94b5d8":"df.resample('Q').mean().plot()","e9bee2db":"df.resample('M').mean()","00dff1ef":"df.resample('M').mean().plot()","c98cb859":"df[:5]","c3f3e7fa":"df[:5].diff()","7078ffd5":"df[:5].diff(2)","15b406d8":"pd.concat([df['bpi'],df['bpi'].diff(2),df['bpi'].diff()],axis=1).plot()","bf05a02e":"df[:5]","0c22b052":"df[:5].shift()","d9d033f2":"df[:5].shift(2)","cfe2dd05":"df[:5].tshift(2)","98b47054":"df[:5]-df[:5].shift()","dfc56890":"df.tshift(365).plot()","e817d683":"df.rolling(window=10).mean().plot()","9c8b7673":"df.resample('W').mean().rolling(window=10).mean().head(20)","9c558f9c":"df.resample('W').mean().rolling(window=10).mean().plot()","fe211698":"df.rolling(window=50).mean().plot()","3ddae168":"df.rolling(window=50,win_type='gaussian').sum(std=10).plot()","2118172b":"df.ewm(span=50).mean().plot()","b727a526":"rolling_window_100=df.rolling(window=100).mean()\newm_50 =df.ewm(span=50).mean()\npd.concat([df,rolling_window_100,ewm_50],axis=1).plot()","6e5d4d79":"df.groupby(df.index.dayofweek).mean()","2c21d5d1":"df.groupby(df.index.dayofweek).mean().plot()","0210c211":"df.groupby(df.index.month).mean()","b21e0cba":"df.groupby(df.index.days_in_month).mean()","eebd6be3":"df.groupby(df.index.year).mean()","5baf3270":"df[:5].cumsum()","4ae6f2fb":"df[:5].pct_change(2)","41ab7c81":"df[:5].expanding().sum()","69749d0d":"df[:5].expanding().mean()","77e82cd8":"**It captures the pattern well but leaving the small details in the pattern**","8587b6fc":"**It shifts the data one record down**","9ab52950":"# Bitcoin data from coindesk api","662c2210":"# Resampling","d9acba77":"# cumsum() - Cumulative sum","7604cedb":"**D for Calender Day B for Business Day W Weekly M Monthly Q Quarterly A Year end H for Hours T for Minutes S for secinds**","477cff5c":"**It gives the same result as diff()**","75ea53db":"**ewm is exponential moving average, the main purpose of ewm we give more weightage to recent values rather than historical values**","dd5e3a7f":"**percentage change to find the growth from the previous values**","d39ceb65":"**It takes the difference of data from the previous data**","986a3a16":"# expanding()","9e718ea6":"**Month resampling**","f9c6f0ec":"# pct_change()","78a5f80c":"**It has the similar pattern to the present year data**","eeafd0ed":"# Exponential moving average","8b94f848":"**Start and end date**","a3dc87dc":"**This plot is better than the previous in capturing the small details**","26377534":"# shift() function","3fd512ce":"# Group by","1252dfda":"**The below two plots give the stationary data, so that will be easier to model**","db75fa59":"**We can see that the data is daily data**","80dfd623":"# rolling() method","65999a40":"**The data is of json type**","e89018da":"**For to check weekend sale.\nTo compare different month sales**","8e2f3eb5":"# diff() function","44da2773":"**We take only the date and bpi field**"}}