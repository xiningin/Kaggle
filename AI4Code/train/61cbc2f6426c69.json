{"cell_type":{"64823e94":"code","3e3ae303":"code","877fc939":"code","621f38d6":"code","03d88253":"code","779649a3":"code","a4bb48e0":"code","54a737ed":"code","bcde8343":"code","3f2f58e9":"code","ffaaf4f6":"code","566bdc1f":"code","5be57061":"code","10e903e3":"code","94d58d59":"code","3037dec6":"code","fcc79eb7":"code","6dc21fbe":"code","2e2f835c":"code","ceee2390":"code","182be26e":"code","1130d894":"code","cb613fcc":"code","e794d932":"code","49505462":"code","b75721bb":"code","dbfd21bc":"code","147ac2cf":"code","d6ecddf3":"code","cfa31e78":"code","04fd300e":"code","91af4ff4":"code","29619176":"code","eab8763a":"code","b32ec59f":"code","bd69a2c9":"code","27fdfbae":"code","1cf8576a":"code","e3a013ce":"code","e9ed9c8e":"code","dd5ba5a1":"code","d204c28c":"code","34e4de75":"code","1952c607":"code","f94c9525":"code","71b3d94f":"code","125dd06e":"code","d8c08d66":"code","8f27a9cd":"code","94546b0a":"markdown","86f9f1ba":"markdown","0a0a5c84":"markdown","c35e9701":"markdown","4f3da86f":"markdown","69ebd911":"markdown","a49d9e10":"markdown","a864f652":"markdown","e5639c1c":"markdown","efc41c10":"markdown","083ff861":"markdown","727b1f31":"markdown","bc2b6f3a":"markdown","581f7bbb":"markdown","f3a84be4":"markdown","5c0c2f2e":"markdown","512db915":"markdown","d1a21995":"markdown","40de66ca":"markdown","538bf242":"markdown","20903a32":"markdown","36b50f6f":"markdown","d668bd0e":"markdown","52b2fff7":"markdown","53f067da":"markdown","3ed3246d":"markdown","d448fb23":"markdown","c193a8b9":"markdown","bb499c6e":"markdown","1456ef72":"markdown","bec4aaef":"markdown","0a5a90b6":"markdown","45660b77":"markdown","024c39f3":"markdown","0af9dcff":"markdown"},"source":{"64823e94":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom plotly.offline import iplot\nfrom sklearn.metrics import classification_report\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import f1_score\nfrom sklearn.metrics import confusion_matrix\nfrom keras.utils.np_utils import to_categorical\nfrom sklearn.utils import class_weight\n\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import optimizers, losses, datasets\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.utils import shuffle\nfrom sklearn.metrics import confusion_matrix, accuracy_score\ntf.__version__\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","3e3ae303":"df = pd.read_csv(\"..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv\")","877fc939":"df.head()","621f38d6":"df.shape","03d88253":"df.info()","779649a3":"df.describe().T","a4bb48e0":"df.isna().sum()","54a737ed":"df.corr()","bcde8343":"corr = df.corr()\nax = plt.subplots(figsize=(20,10)) \nax = sns.heatmap(corr, \n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values, annot=True);","3f2f58e9":"df[\"DEATH_EVENT\"].value_counts()","ffaaf4f6":"plt.style.use(\"classic\")\nfig, ax = plt.subplots(figsize=(8,6))\nsns.countplot(df[\"DEATH_EVENT\"]);","566bdc1f":"fig_data = ['anaemia', 'diabetes', 'high_blood_pressure','sex', 'smoking']\nq = 1\nplt.figure(figsize=(16,12))\n# Plot a grid with count plots of all categorical variables\nfor j in fig_data:\n    plt.subplot(2,3,q)\n    ax = sns.countplot(df[j], hue=df.DEATH_EVENT)\n    plt.xlabel(j)\n    q += 1\nplt.show()","5be57061":"plt.figure(figsize=(18,5))\nsns.violinplot(x=\"DEATH_EVENT\", y=\"age\", data=df)\nplt.title('DEATH_EVENT- AGE')\nplt.show()","10e903e3":"plt.figure(figsize=(18,5))\nsns.violinplot(x=\"DEATH_EVENT\", y=\"serum_creatinine\", data=df)\nplt.title('DEATH_EVENT- serum_creatinine')\nplt.show()","94d58d59":"plt.figure(figsize=(18,5))\nsns.violinplot(x=\"DEATH_EVENT\", y=\"time\", data=df)\nplt.title('DEATH_EVENT- TIME')\nplt.show()","3037dec6":"df[\"age\"].value_counts()","fcc79eb7":"plt.style.use(\"classic\")\nfig, ax = plt.subplots(figsize=(8,6))\nsns.distplot(df[\"age\"], color=\"b\");\nplt.show()","6dc21fbe":"fig=ff.create_distplot([df['serum_sodium'].values],['serum_sodium'])\nfig.update_layout(title_text='serum_sodium Distribution plot')\nfig.show()","2e2f835c":"df[\"high_blood_pressure\"].value_counts()","ceee2390":"plt.style.use(\"seaborn\")\nfig, ax = plt.subplots(figsize=(8,6))\ncolors = [\"yellow\", \"red\"]\nplt.pie(df[\"high_blood_pressure\"].value_counts(), labels=[\"Normal Blood Pressure\", \"High Blood Pressure\"],\n        explode = (0.1,0), shadow=True, colors=colors);","182be26e":"plt.style.use(\"classic\")\nfig, ax = plt.subplots(figsize=(8,6))\nsns.countplot(df[\"diabetes\"], palette=[\"skyblue\", \"deepskyblue\"]);","1130d894":"plt.style.use(\"classic\")\nfig, ax = plt.subplots(figsize=(8,6))\nsns.countplot(df[\"anaemia\"], palette=[\"olivedrab\",\"darkolivegreen\"]);","cb613fcc":"plt.style.use(\"classic\")\nfig, ax = plt.subplots(figsize=(8,6))\nsns.countplot(df[\"sex\"], palette=[\"pink\", \"skyblue\"],);","e794d932":"plt.style.use(\"seaborn\")\nfig, ax = plt.subplots(figsize=(8,6))\ncolors = [\"mediumorchid\", \"darkorchid\"]\nplt.pie(df[\"smoking\"].value_counts(), labels=[\"Non-Smoker\", \"Smoker\"],\n        explode = (0.05,0), shadow=True, colors=colors);","49505462":"sns.catplot(x=\"DEATH_EVENT\", y=\"creatinine_phosphokinase\", hue=\"sex\", kind=\"swarm\", data=df)\nplt.show()","b75721bb":"male = df[df[\"sex\"]==1]\nfemale = df[df[\"sex\"]==0]\n\n\nlabels = ['Male - Survived','Male - Not Survived', \"Female -  Survived\", \"Female - Not Survived\"]\nvalues = [len(male[df[\"DEATH_EVENT\"]==0]),len(male[df[\"DEATH_EVENT\"]==1]),\n          len(female[df[\"DEATH_EVENT\"]==0]),len(female[df[\"DEATH_EVENT\"]==1])]\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4)])\nfig.update_layout(title_text=\"Analysis on Survival - Gender\")\nfig.show()","dbfd21bc":"yes_diabetes=df[df['diabetes']==1]\nno_diabetes=df[df['diabetes']==0]\n\ndia_deaths=yes_diabetes[df['DEATH_EVENT']==1]\ndia_live=yes_diabetes[df['DEATH_EVENT']==0]\nno_dia_deaths=no_diabetes[df['DEATH_EVENT']==1]\nno_dia_live=no_diabetes[df['DEATH_EVENT']==0]\nlabels=['died having diabetes','survived having diabetes','died not having diabetes','survived not having diabetes']\nvalues=[len(dia_deaths),len(dia_live),len(no_dia_deaths),len(no_dia_live)]\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4)])\nfig.update_layout(title_text='testing')\nfig.show()","147ac2cf":"df.head()","d6ecddf3":"fig=plt.figure(figsize=(20,10))\nsns.boxplot(data=df[\"creatinine_phosphokinase\"])\nplt.show()","cfa31e78":"fig=plt.figure(figsize=(20,10))\nsns.boxplot(data=df[\"platelets\"])\nplt.show()","04fd300e":"fig=plt.figure(figsize=(20,10))\nsns.boxplot(data=df[\"serum_sodium\"])\nplt.show()","91af4ff4":"fig=plt.figure(figsize=(20,10))\nsns.boxplot(data=df[\"serum_creatinine\"])\nplt.show()","29619176":"df","eab8763a":"y=df[\"DEATH_EVENT\"]\nX=df.drop([\"DEATH_EVENT\"],axis=1)","b32ec59f":"X.shape","bd69a2c9":"y.shape","27fdfbae":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0);","1cf8576a":"scaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","e3a013ce":"X_train, y_train = shuffle(X_train, y_train)","e9ed9c8e":"model = keras.models.Sequential()\nmodel.add(keras.layers.Dense(64, input_shape=(12,), activation = 'tanh'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(32, activation = 'tanh'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(16, activation = 'tanh'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(1,  activation = 'sigmoid'))\nmodel.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nmodel.fit(X_train, y_train, batch_size = 32, epochs = 100)\n\ny_pred = model.predict(X_test)\ny_pred = np.round(y_pred)\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\nprint(\"test accuracy:\", accuracy_score(y_test, y_pred))","dd5ba5a1":"model = keras.models.Sequential()\nmodel.add(keras.layers.Dense(64, input_shape=(12,), activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(32, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(16, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(1,  activation = 'sigmoid'))\nmodel.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nmodel.fit(X_train, y_train, batch_size = 32, epochs = 100)\ny_pred = model.predict(X_test)\ny_pred = np.round(y_pred)\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\nprint(\"test accuracy:\", accuracy_score(y_test, y_pred))","d204c28c":"model = keras.models.Sequential()\nmodel.add(keras.layers.Dense(128, input_shape=(12,), activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(64, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(32, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(16, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(1,  activation = 'sigmoid'))\nmodel.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nmodel.fit(X_train, y_train, batch_size = 32, epochs = 100)\n\ny_pred = model.predict(X_test)\ny_pred = np.round(y_pred)\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\nprint(\"test accuracy:\", accuracy_score(y_test, y_pred))","34e4de75":"model = keras.models.Sequential()\nmodel.add(keras.layers.Dense(64, input_shape=(12,), activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(32, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(16, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(1,  activation = 'sigmoid'))\nmodel.compile(optimizer = 'sgd', loss = 'binary_crossentropy', metrics = ['accuracy'])\nmodel.fit(X_train, y_train, batch_size = 32, epochs = 100)\n\ny_pred = model.predict(X_test)\ny_pred = np.round(y_pred)\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\nprint(\"test accuracy:\", accuracy_score(y_test, y_pred))","1952c607":"model = keras.models.Sequential()\nmodel.add(keras.layers.Dense(64, input_shape=(12,), activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(32, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(16, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(1,  activation = 'sigmoid'))\nmodel.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nmodel.fit(X_train, y_train, batch_size = 32, epochs = 200)\n\ny_pred = model.predict(X_test)\ny_pred = np.round(y_pred)\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\nprint(\"test accuracy:\", accuracy_score(y_test, y_pred))","f94c9525":"model = keras.models.Sequential()\nmodel.add(keras.layers.Dense(64, input_shape=(12,), activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(32, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(16, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(1,  activation = 'sigmoid'))\nmodel.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nmodel.fit(X_train, y_train, batch_size = 16, epochs = 100)\n\ny_pred = model.predict(X_test)\ny_pred = np.round(y_pred)\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\nprint(\"test accuracy:\", accuracy_score(y_test, y_pred))","71b3d94f":"y=y.values","125dd06e":"X=X.values","d8c08d66":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","8f27a9cd":"model = keras.models.Sequential()\nmodel.add(keras.layers.Dense(64, input_shape=(12,), activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(32, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(16, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(1,  activation = 'sigmoid'))\nmodel.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nmodel.fit(X_train, y_train, batch_size = 32, epochs = 100)\n\ny_pred = model.predict(X_test)\ny_pred = np.round(y_pred)\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\nprint(\"test accuracy:\", accuracy_score(y_test, y_pred))","94546b0a":"Veri setindeki g\u00f6zlemlerden \u00e7o\u011funlu\u011funun diyabet hastas\u0131 olmad\u0131\u011f\u0131n\u0131 g\u00f6rebiliriz.","86f9f1ba":"DEATH_EVENT - serum_creatinine violent plotunu inceledi\u011fimizde DEATH_EVENT = 0 durumunda yo\u011fun olarak 0-2 aral\u0131\u011f\u0131nda,DEATH_EVENT = 1 durumunda da yo\u011funlu\u011fun ayn\u0131 aral\u0131kta ancak daha dengeli oldu\u011funu s\u00f6yleyebiliriz.","0a0a5c84":"Veri setindeki g\u00f6zlemlerden \u00e7o\u011funlu\u011funun normal kan bas\u0131nc\u0131na sahip oldu\u011funu g\u00f6rebiliriz.","c35e9701":"Hedef de\u011fi\u015fkenin da\u011f\u0131l\u0131m\u0131n\u0131 inceleyelim.","4f3da86f":"serum_sodium \u00f6zniteli\u011finde genellikle 130-140 aras\u0131nda de\u011fer ald\u0131\u011f\u0131n\u0131, ayk\u0131r\u0131 verinin ise az oldu\u011fu g\u00f6zlemlenmektedir.","69ebd911":"Hedef de\u011fi\u015fkenin da\u011f\u0131l\u0131m\u0131n\u0131 inceledi\u011fimizde \u00f6l\u00fcm olmayan g\u00f6zlemlerin fazlal\u0131kta oldu\u011funu s\u00f6yleyebilriz","a49d9e10":"Normalizasyonumuzu yapal\u0131m.","a864f652":"Veri \u00e7er\u00e7evesinde hangi \u00f6znitelikte ka\u00e7 adet eksik de\u011fer oldu\u011funu g\u00f6zlemleyelim.","e5639c1c":"Grafi\u011fi inceledi\u011fimizde; 40 95 aral\u0131\u011f\u0131nda de\u011fer ald\u0131\u011f\u0131n\u0131 ve 60 civar\u0131 de\u011ferlerin yo\u011funlukta oldu\u011funu s\u00f6yleyebiliriz.","efc41c10":"# Derin \u00d6\u011frenme","083ff861":"### Hedef de\u011fi\u015fkenimizi ay\u0131ral\u0131m.","727b1f31":"Veri \u00e7er\u00e7evesinin ka\u00e7 \u00f6znitelik ve ka\u00e7 g\u00f6zlemden olu\u015ftu\u011funu g\u00f6r\u00fcnt\u00fcleyelim.","bc2b6f3a":"Grafi\u011fi inceledi\u011fimizde;\n* Erkek g\u00f6zlemlerden hayatta kalanlar\u0131n oran\u0131n\u0131n %44.1 oldu\u011funu,\n* Kad\u0131n g\u00f6zlemlerden hayatta kalanlar\u0131n oran\u0131n\u0131n %23.7 oldu\u011funu,\n* Erkek g\u00f6zlemlerden hayat\u0131n\u0131 kaybedenlerin oran\u0131n\u0131n %20.7 oldu\u011funu,\n* Kad\u0131n g\u00f6zlemlerden hayat\u0131n\u0131 kaybedenlerin oran\u0131n\u0131n %11.4 oldu\u011funu s\u00f6yleyebiliriz.","581f7bbb":"platelets \u00f6zniteli\u011finde genellikle 200000-300000 aras\u0131nda de\u011fer ald\u0131\u011f\u0131n\u0131, ayk\u0131r\u0131 verinin ise az oldu\u011fu g\u00f6zlemlenmektedir.","f3a84be4":"Grafi\u011fi inceledi\u011fimizde serum_sodium \u00f6zniteli\u011finin 113-148 aras\u0131nda de\u011ferler ald\u0131\u011f\u0131n\u0131 ve 136 ya e\u015fit olan de\u011ferlerin en fazla oldu\u011funu s\u00f6yleyebiliriz.","5c0c2f2e":"Veri setimizde eksik de\u011fer bulunmamaktad\u0131r. Eksik veri doldurma i\u015flemi yapmam\u0131za gerek kalmad\u0131.","512db915":"Grafi\u011fi inceledi\u011fimizde;\n* Diyabet hastas\u0131 g\u00f6zlemlerden hayatta kalanlar\u0131n oran\u0131n\u0131n %28.4 oldu\u011funu,\n* Diyabet hastas\u0131 olmayan g\u00f6zlemlerden hayatta kalanlar\u0131n oran\u0131n\u0131n %39.5 oldu\u011funu,\n* Diyabet hastas\u0131 g\u00f6zlemlerden hayat\u0131n\u0131 kaybedenlerin oran\u0131n\u0131n %13.4 oldu\u011funu,\n* Diyabet hastas\u0131 olmayan g\u00f6zlemlerden hayat\u0131n\u0131 kaybedenlerin oran\u0131n\u0131n %18.7 oldu\u011funu s\u00f6yleyebiliriz.","d1a21995":"serum_creatinine \u00f6zniteli\u011finde genellikle 0-2 aras\u0131nda de\u011fer ald\u0131\u011f\u0131n\u0131, ayk\u0131r\u0131 verinin ise az oldu\u011fu g\u00f6zlemlenmektedir.","40de66ca":"grafi\u011fi inceledi\u011fimizde; creatinine_phosphokinase = 0 olan daha \u00e7ok g\u00f6zlemin oldu\u011funu, bu g\u00f6zlemlerin \u00e7o\u011funlu\u011funun 0-1000 aral\u0131\u011f\u0131nda yo\u011funla\u015ft\u0131\u011f\u0131n\u0131 ve cinsiyetin normal da\u011f\u0131ld\u0131\u011f\u0131n\u0131 s\u00f6yleyebiliriz.","538bf242":"Veri \u00e7er\u00e7evesindeki say\u0131sal de\u011fi\u015fkenler i\u00e7in temel istatistik de\u011ferlerini g\u00f6r\u00fcnt\u00fcleyelim.","20903a32":"Veri setindeki g\u00f6zlemlerden \u00e7o\u011funlu\u011funun cinsiyetinin erkek oldu\u011funu g\u00f6rebiliriz.","36b50f6f":"DEATH_EVENT - AGE violent plotunu inceledi\u011fimizde iki grafi\u011finde birbirine benzedi\u011fini ve 50-70 aral\u0131\u011f\u0131nda yo\u011funluk oldu\u011funu s\u00f6yleyebiliriz","d668bd0e":"creatinine_phosphokinase \u00f6zniteli\u011finde genellikle 0-1000 aras\u0131nda de\u011fer ald\u0131\u011f\u0131n\u0131, ayk\u0131r\u0131 verinin ise az oldu\u011fu g\u00f6zlemlenmektedir.","52b2fff7":"Korelasyon katsay\u0131lar\u0131n\u0131 daha iyi okuyabilmek i\u00e7in \u0131s\u0131 haritas\u0131 \u00e7izdirelim.","53f067da":"Veri \u00e7er\u00e7evesinin ilk 5 g\u00f6zlemini g\u00f6r\u00fcnt\u00fcleyelim.","3ed3246d":"Say\u0131sal de\u011fi\u015fkenler aras\u0131nda korelasyon olup olmad\u0131\u011f\u0131n\u0131 g\u00f6stermek i\u00e7in korelasyon matrisi \u00e7izdirelim. Korelasyon katsay\u0131lar\u0131 hakk\u0131nda fikir y\u00fcr\u00fctelim.","d448fb23":"Grafikleri inceledi\u011fimizde;\n\n* Anemi'ye sahip g\u00f6zlemlerde \u00f6l\u00fcm oran\u0131n\u0131n y\u00fcksek oldu\u011funu, \n* Diyabet'e sahip olanlar\u0131n oran\u0131nda g\u00f6zle g\u00f6r\u00fcl\u00fcr bir fark olmad\u0131\u011f\u0131n\u0131, \n* Y\u00fcksek kan bas\u0131nc\u0131na sahip olanlar\u0131n \u00f6l\u00fcm oran\u0131n\u0131n daha y\u00fcksek oldu\u011funu, \n* Cinsiyetin \u00f6l\u00fcm oran\u0131na g\u00f6zle g\u00f6r\u00fcl\u00fcr bi etkisinin olmad\u0131\u011f\u0131n\u0131,\n* Sigara kullananlarda kullanmayanlara g\u00f6re \u00f6l\u00fcm oran\u0131nda g\u00f6zle g\u00f6r\u00fcl\u00fcr bir fark olmad\u0131\u011f\u0131n\u0131 s\u00f6yleyebiliriz.","c193a8b9":"Veri setindeki g\u00f6zlemlerden \u00e7o\u011funlu\u011funun anemi olmad\u0131\u011f\u0131n\u0131 g\u00f6rebiliriz.","bb499c6e":"Veri setindeki g\u00f6zlemlerden \u00e7o\u011funlu\u011funun sigara kullanmad\u0131\u011f\u0131n\u0131 g\u00f6rebiliriz.","1456ef72":"Veri \u00e7er\u00e7evemizi bulundu\u011fumuz dizinden y\u00fckleyelim ve bir veri \u00e7er\u00e7evesi haline getirerek df de\u011fi\u015fkenine atayal\u0131m","bec4aaef":"Verimizi shuffle ediyoruz.","0a5a90b6":"En g\u00fc\u00e7l\u00fc pozitif ili\u015fki sex ile smoking \u00f6znitelikleri aras\u0131ndad\u0131r. En g\u00fc\u00e7l\u00fc negatif ili\u015fki ise time ile DEATH_EVENT \u00f6znitelikleri aras\u0131ndad\u0131r","45660b77":"Age \u00f6zniteli\u011fini inceleyelim.","024c39f3":"DEATH_EVENT - time violent plotunu inceledi\u011fimizde iki durum i\u00e7in olu\u015fturulan grafiklerin birbirinden \u00e7ok farkl\u0131 oldu\u011funu g\u00f6rebiliriz. DEATH_EVENT = 0 durumunda yo\u011funlu\u011fun 250-200 ve 70-120 aral\u0131klar\u0131nda oldu\u011funu, DEATH_EVENT = 1 durumunda ise yo\u011funlu\u011fun 0-100 aral\u0131\u011f\u0131nda oldu\u011funu s\u00f6yleyebiliriz.","0af9dcff":"train-test olarak ay\u0131ral\u0131m. Verilerin %20 sini test i\u00e7in ay\u0131r\u0131yoruz"}}