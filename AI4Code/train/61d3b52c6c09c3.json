{"cell_type":{"fd5c1747":"code","e1f38336":"code","3013ddd0":"code","5a82fe09":"code","12a3bdf7":"code","1952ca35":"code","ea73263f":"code","eac6e159":"code","63dc2e33":"code","581a7526":"code","d133fed6":"code","950c97a3":"code","120d628b":"code","6d3b740a":"code","1d8c02cc":"code","b26c44f5":"code","0d22ca35":"markdown","84a1b83c":"markdown","4d2c4a56":"markdown","14000e74":"markdown","d04c31c9":"markdown","39f6ff64":"markdown","a35bc385":"markdown","01c68370":"markdown"},"source":{"fd5c1747":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e1f38336":"import tensorflow as tf\nimport pandas as pd\nimport numpy as np\nfrom tensorflow.keras.models import Sequential","3013ddd0":"train = pd.read_csv('\/kaggle\/input\/digit-recognizer\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/digit-recognizer\/test.csv')","5a82fe09":"train.shape, test.shape","12a3bdf7":"train.head()","1952ca35":"x_train = train.iloc[:,1:]","ea73263f":"x_train.head()","eac6e159":"y_train = train.iloc[:,0]","63dc2e33":"y_train.head()","581a7526":"x_train = x_train \/ 255.0\ntest = test \/ 255.0","d133fed6":"#reshape\n\nx_train= x_train.values.reshape(-1,28,28,1)\ntest=test.values.reshape(-1,28,28,1)","950c97a3":"model = tf.keras.models.Sequential([\n    tf.keras.layers.Flatten(input_shape =(28,28,1)),\n    tf.keras.layers.Dense(128, activation = 'relu'),\n     tf.keras.layers.Dense(64, activation = 'relu'),\n    tf.keras.layers.Dropout(0.2),\n    tf.keras.layers.Dense(10, activation = 'softmax')\n])","120d628b":"model.compile(optimizer='adam', loss = 'sparse_categorical_crossentropy', metrics= ['accuracy'])","6d3b740a":"r = model.fit(x_train, y_train, epochs=20)","1d8c02cc":"results=model.predict(test)","b26c44f5":"results = np.argmax(results, axis =1)","0d22ca35":"### View dimnsion","84a1b83c":"## Train model","4d2c4a56":"## build simple ANN","14000e74":"## Load data","d04c31c9":"## Compile the model","39f6ff64":"#### Check data","a35bc385":"### Filter training data and separate label","01c68370":"### Normalize data"}}