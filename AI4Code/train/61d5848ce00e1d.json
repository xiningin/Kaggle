{"cell_type":{"54f7a972":"code","b61b3e3a":"code","713a9bee":"code","8891634d":"code","ee9fb208":"code","a1981238":"code","d1ba2a50":"code","8ba0cd7c":"code","98711e6d":"code","1c614cf0":"code","3edbf99d":"code","bf7ac297":"code","58dca24e":"code","89b469e6":"code","34559d6e":"code","0a0d49ad":"code","cebdb91d":"markdown","08decf73":"markdown","2d81ba73":"markdown","3cae5bda":"markdown"},"source":{"54f7a972":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import (accuracy_score)\n\nfrom sklearn.model_selection import (\n                                    GridSearchCV,\n                                    StratifiedKFold,\n                                     train_test_split\n                                    )\n\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport gc\n\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport gc\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b61b3e3a":"train = pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/digit-recognizer\/test.csv\")\nsubmission = pd.read_csv('\/kaggle\/input\/digit-recognizer\/sample_submission.csv')","713a9bee":"X = train.drop(['label'], 1).values\ny = train['label'].values","8891634d":"some_digit = X[11]\nsome_digit_image = some_digit.reshape(28, 28)\n\nplt.imshow(some_digit_image, cmap=matplotlib.cm.binary, interpolation=\"nearest\")\nplt.show()","ee9fb208":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, Y_train, Y_test = train_test_split(X, \n                                                    y, \n                                                    test_size=0.1,\n                                                    random_state=42)\n\nskf = StratifiedKFold(n_splits=5, random_state=42) ","a1981238":"knn_clf = KNeighborsClassifier(n_jobs=-1)\n\nknn_params = {\n             'n_neighbors': np.arange(1, 8, 1),\n             'weights' : ['distance', 'uniform']\n             }\n\nx_train, x_test, y_train, y_test = train_test_split(X_train, \n                                                    Y_train, \n                                                    test_size=0.3,\n                                                    random_state=42)\n\ngrid_search = GridSearchCV(knn_clf, param_grid=knn_params, cv=skf)\ngrid_search.fit(x_train, y_train)\nprint('Best score: {}'.format(grid_search.best_score_))\nprint('Best parameters: {}'.format(grid_search.best_params_))","d1ba2a50":"knn_clf = KNeighborsClassifier(weights='distance', n_neighbors=4, n_jobs=-1)","8ba0cd7c":"for i in range(0, 10, 3):\n    print(i)\n    y_train = (y_train == i)\n    y_test = (y_test == i)\n\n    knn_clf.fit(x_train, y_train)\n    knn_pred = knn_clf.predict(x_test)\n    print(accuracy_score(y_test, knn_pred))","98711e6d":"knn_clf.fit(X_train, Y_train)","1c614cf0":"knn_pred = knn_clf.predict(X_test)","3edbf99d":"accuracy_score(Y_test, knn_pred)","bf7ac297":"targets = train.label\ndata    = train.drop(columns='label')","58dca24e":"knn_clf.fit(data, targets)","89b469e6":"def write_to_submission_file(predictions, ID, out_file='Submission.csv', columns=['ImageId', 'label']):\n    predicted_df = pd.DataFrame(np.array([ID, predictions]).T, columns=columns)\n    predicted_df.to_csv(out_file, index=False)","34559d6e":"predictions = knn_clf.predict(test)","0a0d49ad":"write_to_submission_file(pd.Series(predictions), pd.Series(range(1,28001),name = \"ImageId\"))","cebdb91d":"# Training","08decf73":"# Data upload","2d81ba73":"# Visualization","3cae5bda":"# Load data"}}