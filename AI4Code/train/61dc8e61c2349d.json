{"cell_type":{"99022a12":"code","6af51539":"code","05e3098f":"code","058c1259":"code","6c27f0e8":"code","c98f6b8a":"code","5cb05374":"code","11362680":"code","e5bea13c":"code","b2ecb575":"code","b0125ddd":"code","cca62408":"code","5986e569":"code","fde3db78":"code","6e65b309":"code","6bed4072":"code","9b18e229":"code","39efbdb0":"code","a593f0d5":"code","ac5617b1":"code","be18ab95":"code","6b1dd601":"code","16c07304":"code","79e31b66":"code","ca8c7796":"code","aa5467fe":"code","41bb8ef0":"code","8ff50e74":"code","0b726df2":"code","81865b98":"code","98bf016d":"code","a3eb983c":"code","7caf2615":"code","5ed23e67":"code","db54ccee":"code","9ea6b18d":"code","5f8c12aa":"code","ba8244aa":"code","32b27bf8":"code","3be0b037":"code","72e00b03":"code","6021d4ef":"code","a6105f56":"code","1a9f3cb1":"markdown","5b5e5d8c":"markdown","68ed0409":"markdown","ae9380de":"markdown","0ac05afe":"markdown","63c61b1d":"markdown","42b8eae1":"markdown","1d118403":"markdown","77bdb85b":"markdown","e4f22811":"markdown","3c1a48a2":"markdown","9b6767e6":"markdown","fe95b91f":"markdown","245555bc":"markdown","cd826515":"markdown","e2cec6e9":"markdown","796a8dfb":"markdown","7131b548":"markdown","a9cbbc70":"markdown","907c2a5a":"markdown","74701ceb":"markdown","d700d32d":"markdown","3da5d2bd":"markdown","dd5798ff":"markdown","7ee5e1e5":"markdown","02ad01e6":"markdown","e1d22380":"markdown","11b26a32":"markdown","d46d8774":"markdown","b70b894e":"markdown","a5d605ec":"markdown","23353105":"markdown","a258a13c":"markdown","8207a220":"markdown","661c73f6":"markdown","0cfdeb27":"markdown","48f6a55c":"markdown"},"source":{"99022a12":"%reset -f\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nfrom sklearn.cluster import KMeans\nfrom sklearn.mixture import GaussianMixture\nfrom sklearn.manifold import TSNE\nimport re  #regular expression\nfrom sklearn.preprocessing import StandardScaler\nfrom pandas.plotting import andrews_curves\nfrom mpl_toolkits.mplot3d import Axes3D","6af51539":"from IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"","05e3098f":"pd.options.display.max_rows = 1000\npd.options.display.max_columns = 1000","058c1259":"%matplotlib inline","6c27f0e8":"customer = pd.read_csv(\"\/kaggle\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv\")\ncustomer.shape\ncustomer.head()","c98f6b8a":"new_columns = {x : re.sub('[^A-Za-z]+','',x) for x in customer.columns.values}\nnew_columns\ncustomer.rename(columns = new_columns,inplace=True)\ncustomer.rename(columns = {\"AnnualIncomek\": \"AnnualIncome\"},inplace=True)","5cb05374":"customer[\"Gender\"].value_counts()\ncustomer[\"GenderCode\"] = customer[\"Gender\"].map({\"Female\" : 0, \"Male\" : 1})","11362680":"customer.drop(columns=[\"CustomerID\",\"Gender\"], inplace=True)","e5bea13c":"customer.head()","b2ecb575":"customer.info()","b0125ddd":"customer.describe()","cca62408":"values = customer[\"GenderCode\"].value_counts()\nax = sns.countplot(customer[\"GenderCode\"])\nfor i, p in enumerate(ax.patches):\n    height = p.get_height()\n    ax.text(p.get_x()+p.get_width()\/2., height + 0.1, values[i],ha=\"center\")","5986e569":"andrews_curves(customer, \"GenderCode\")","fde3db78":"fig = plt.figure(figsize=(15,5))\nax=plt.subplot(1,3,1)\nsns.boxplot(data=customer, x=\"GenderCode\",y=\"Age\")\nax=plt.subplot(1,3,2)\nsns.boxplot(data=customer, x=\"GenderCode\",y=\"AnnualIncome\")\nax=plt.subplot(1,3,3)\nsns.boxplot(data=customer, x=\"GenderCode\",y=\"SpendingScore\")\n","6e65b309":"fig = plt.figure(figsize=(15,5))\nax=plt.subplot(1,3,1)\nsns.stripplot(data=customer, x=\"GenderCode\",y=\"Age\")\nax=plt.subplot(1,3,2)\nsns.stripplot(data=customer, x=\"GenderCode\",y=\"AnnualIncome\")\nax=plt.subplot(1,3,3)\nsns.stripplot(data=customer, x=\"GenderCode\",y=\"SpendingScore\")","6bed4072":"fig = plt.figure(figsize=(15,5))\nax=plt.subplot(1,3,1)\nsns.swarmplot(data=customer, x=\"GenderCode\",y=\"Age\")\nax=plt.subplot(1,3,2)\nsns.swarmplot(data=customer, x=\"GenderCode\",y=\"AnnualIncome\")\nax=plt.subplot(1,3,3)\nsns.swarmplot(data=customer, x=\"GenderCode\",y=\"SpendingScore\")","9b18e229":"fig = plt.figure(figsize=(15,5))\nax=plt.subplot(1,3,1)\nsns.distplot(customer.Age, rug=True)\nax=plt.subplot(1,3,2)\nsns.distplot(customer.AnnualIncome, rug=True)\nax=plt.subplot(1,3,3)\nsns.distplot(customer.SpendingScore, rug=True)","39efbdb0":"sns.pairplot(customer, vars=[\"Age\",\"AnnualIncome\",\"SpendingScore\"], diag_kind=\"kde\"\n             , kind=\"reg\", hue=\"GenderCode\", markers=[\"o\",\"D\"],palette=\"husl\")","a593f0d5":"fig = plt.figure(figsize=(15,5))\nax=plt.subplot(1,3,1)\nsns.scatterplot(data=customer, x=\"Age\",y=\"AnnualIncome\")\nax=plt.subplot(1,3,2)\nsns.scatterplot(data=customer, x=\"Age\",y=\"SpendingScore\")\nax=plt.subplot(1,3,3)\nsns.scatterplot(data=customer, x=\"AnnualIncome\",y=\"SpendingScore\")","ac5617b1":"fig = plt.figure(figsize=(15,5))\nax=plt.subplot(1,3,1)\nsns.regplot(data=customer, x=\"Age\",y=\"AnnualIncome\")\nax=plt.subplot(1,3,2)\nsns.regplot(data=customer, x=\"Age\",y=\"SpendingScore\")\nax=plt.subplot(1,3,3)\nsns.regplot(data=customer, x=\"AnnualIncome\",y=\"SpendingScore\")","be18ab95":"px.scatter(customer.sort_values(by=\"Age\"),\n          x = \"AnnualIncome\",\n          y = \"SpendingScore\",\n          #size = \"GenderCode\",\n          range_x=[0,140],\n          range_y=[0,100] ,\n          animation_frame = \"Age\", \n          animation_group = \"GenderCode\", \n          color = \"GenderCode\" \n          )","6b1dd601":"fig = plt.figure(figsize=(10,5))\nax = plt.axes(projection='3d')\nax.scatter3D(customer['Age'], customer['AnnualIncome'], customer['SpendingScore']\n             , c=customer['GenderCode'], cmap='RdBu');\nax.set_xlabel('Age')\nax.set_ylabel('AnnualIncome')\nax.set_zlabel('SpendingScore')","16c07304":"fig = plt.figure(figsize=(10,5))\nax = plt.axes(projection='3d')\nax.plot(customer['Age'], customer['AnnualIncome'], customer['SpendingScore']);\nax.set_xlabel('Age')\nax.set_ylabel('AnnualIncome')\nax.set_zlabel('SpendingScore')","79e31b66":"ss= StandardScaler()\nss.fit(customer)\nX = ss.transform(customer)\nX.shape","ca8c7796":"sse = []\nfor k in range(1,10):\n    km = KMeans(n_clusters = k)\n    km.fit(X)\n    sse.append(km.inertia_)\nplt.plot(range(1,10), sse, marker='*')","aa5467fe":"bic = []\naic = []\nfor i in range(8):\n    gm = GaussianMixture(\n                     n_components = i+1,\n                     n_init = 10,\n                     max_iter = 100)\n    gm.fit(X)\n    bic.append(gm.bic(X))\n    aic.append(gm.aic(X))\n\nfig = plt.figure()\nplt.plot([1,2,3,4,5,6,7,8], aic)\nplt.plot([1,2,3,4,5,6,7,8], bic)\nplt.show()","41bb8ef0":"kmeans_bad = KMeans(n_clusters=2,\n                    n_init =10,\n                    max_iter = 800)\nkmeans_bad.fit(X)\n\ncentroids=kmeans_bad.cluster_centers_\n\nfig = plt.figure()\nplt.scatter(X[:, 1], X[:, 2],\n            c=kmeans_bad.labels_,\n            s=2)\nplt.scatter(centroids[:, 1], centroids[:, 2],\n            marker='x',\n            s=100,               # marker size\n            linewidths=150,      # linewidth of marker edges\n            color='red'\n            )\nplt.show()","8ff50e74":"gm = GaussianMixture(\n                     n_components = 2,\n                     n_init = 10,\n                     max_iter = 100)\ngm.fit(X)\n#gm.means_\n#gm.converged_\n#gm.n_iter_\n#gm.predict(X)\n#gm.weights_\n#np.unique(gm.predict(X), return_counts = True)[1]\/len(X)\n#gm.sample()\nfig = plt.figure()\n\nplt.scatter(X[:, 1], X[:, 2],\n            c=gm.predict(X),\n            s=5)\nplt.scatter(gm.means_[:, 1], gm.means_[:, 2],\n            marker='v',\n            s=10,               # marker size\n            linewidths=5,      # linewidth of marker edges\n            color='red'\n            )\nplt.show()\n","0b726df2":"gm = GaussianMixture(\n                     n_components = 2,\n                     n_init = 10,\n                     max_iter = 100)\ngm.fit(X)\n\ntsne = TSNE(n_components = 2)\ntsne_out = tsne.fit_transform(X)\nplt.scatter(tsne_out[:, 0], tsne_out[:, 1],\n            marker='x',\n            s=50,              # marker size\n            linewidths=5,      # linewidth of marker edges\n            c=gm.predict(X)   # Colour as per gmm\n            )","81865b98":"densities = gm.score_samples(X)\ndensities\n\ndensity_threshold = np.percentile(densities,5)\ndensity_threshold\n\nanomalies = X[densities < density_threshold]\nanomalies\nanomalies.shape\n\n\n\nfig = plt.figure()\nplt.scatter(X[:, 1], X[:, 2], c = gm.predict(X))\nplt.scatter(anomalies[:, 0], anomalies[:, 1],\n            marker='x',\n            s=50,               # marker size\n            linewidths=5,      # linewidth of marker edges\n            color='red'\n            )\n","98bf016d":"unanomalies = X[densities >= density_threshold]\nunanomalies.shape   \n\ndf_anomalies = pd.DataFrame(anomalies[:,[1,2]], columns=['salary','spendingscore'])\ndf_anomalies['type'] = 'anomalous'   # Create a IIIrd constant column\ndf_normal = pd.DataFrame(unanomalies[:,[1,2]], columns=['salary','spendingscore'])\ndf_normal['type'] = 'unanomalous'    # Create a IIIrd constant column\n\n","a3eb983c":"df_anomalies.head()\ndf_normal.head()","7caf2615":"\n# 7.3 Let us see density plots\nsns.distplot(df_anomalies['salary'], color='orange')\nsns.distplot(df_normal['salary'], color='blue')\n","5ed23e67":"sns.distplot(df_anomalies['spendingscore'], color='orange')\nsns.distplot(df_normal['spendingscore'], color='blue')","db54ccee":"\ndf = pd.concat([df_anomalies,df_normal])\ndf_anomalies.shape\ndf_normal.shape\ndf.shape\n","9ea6b18d":"sns.boxplot(x = df['type'], y = df['salary'])","5f8c12aa":"sns.boxplot(x = df['type'], y = df['spendingscore'])","ba8244aa":"customer_NoGender = customer.copy() #Deep Copy\ncustomer_NoGender.drop(columns=[\"GenderCode\"], inplace = True)\n#customer.head()\ncustomer_NoGender.head()","32b27bf8":"ss= StandardScaler()\nss.fit(customer_NoGender)\nX = ss.transform(customer_NoGender)","3be0b037":"bic = []\naic = []\nfor i in range(8):\n    gm = GaussianMixture(\n                     n_components = i+1,\n                     n_init = 10,\n                     max_iter = 100)\n    gm.fit(X)\n    bic.append(gm.bic(X))\n    aic.append(gm.aic(X))\n\nfig = plt.figure()\nplt.plot([1,2,3,4,5,6,7,8], aic)\nplt.plot([1,2,3,4,5,6,7,8], bic)\nplt.show()","72e00b03":"gm = GaussianMixture(\n                     n_components = 5,\n                     n_init = 10,\n                     max_iter = 100)\ngm.fit(X)\n#gm.means_\n#gm.converged_\n#gm.n_iter_\n#gm.predict(X)\n#gm.weights_\n#np.unique(gm.predict(X), return_counts = True)[1]\/len(X)\n#gm.sample()\nfig = plt.figure()\n\nplt.scatter(X[:, 1], X[:, 2],\n            c=gm.predict(X),\n            s=5)\nplt.scatter(gm.means_[:, 1], gm.means_[:, 2],\n            marker='v',\n            s=10,               # marker size\n            linewidths=5,      # linewidth of marker edges\n            color='red'\n            )","6021d4ef":"gm = GaussianMixture(\n                     n_components = 5,\n                     n_init = 10,\n                     max_iter = 100)\ngm.fit(X)","a6105f56":"tsne = TSNE(n_components = 2)\ntsne_out = tsne.fit_transform(X)\nplt.scatter(tsne_out[:, 0], tsne_out[:, 1],\n            marker='x',\n            s=50,              # marker size\n            linewidths=5,      # linewidth of marker edges\n            c=gm.predict(X)   # Colour as per gmm\n            )","1a9f3cb1":"<u> Distribution Plots <\/u>","5b5e5d8c":"<u>Read the datset<\/u>","68ed0409":"Clustering Visualization using Gaussian Mixture Algorithm","ae9380de":"<u> Scatter Plots <\/u>","0ac05afe":"Scree plot using Gaussian Mixture Algorithm","63c61b1d":"<b>Some other visualization plots to analyse<\/b>","42b8eae1":"<u>Strip Plot<\/u>","1d118403":"Annual income starts from 15K \\\\$ to max of 137K \\\\$. <br\/>\nSpending score starts from 1 to max upto 99 <br>\nMean and Median are almost same for both Annual Income and Spending Score","77bdb85b":"Scree plot using K-Means Algorithm","e4f22811":"<u> Regression Plots <\/u>","3c1a48a2":"TSNE Visualization for 5 Clusters (without Gender field)","9b6767e6":"<u>Clustering visualization using K-Means Algorithm<\/u>","fe95b91f":"Verify whether any column has null value","245555bc":"<u>Andrew Curve :<\/u> Gender Code 0 and 1 both mixed up in the dataset","cd826515":"### Created By : Ezhilarasan Kannaiyan\nTo analyse the Mall Customer Segmentation Dataset and perform clustering using **Gaussian Mixture Model**","e2cec6e9":"I just want to see the clustering without Gender columns <br>\n\n<u>Clustering without Gender field<\/u>","796a8dfb":"<u>Import appropriate python libraries<\/u>","7131b548":"<u>Create Gender column as numerical categorical type<\/u> ","a9cbbc70":"<u>Count plot to see the Gender count<\/u>","907c2a5a":"**Some 3D graphs**","74701ceb":"<u>Remove Special characters in Column names <\/u>","d700d32d":"<u>Animation Graph <\/u>","3da5d2bd":"From all the above plots,we could see the data is distributed well in the given data set.<br\/>","dd5798ff":"<u> Pair Plots <\/u>","7ee5e1e5":"<u>Swarm Plot<\/u>","02ad01e6":"Based on the box plots, Good Annual income and Spending scores in both Male & Female ","e1d22380":"Anamalies","11b26a32":"Without Gender field, Scree plot shows that we will have 5 clusters","d46d8774":"Drop CustomerID and old Gender column","b70b894e":"<u>Scaling of the dataset<\/u>","a5d605ec":"Analyse statistical data","23353105":"TSNE Visualization using Gaussian Mixture Algorithm","a258a13c":"<u> Box plot of all columns with respect to Gender<\/u>","8207a220":"<hr\/>\nNow we will see clustering information","661c73f6":"**End:**\n\n1. With Gender Column (2 clusters)\n2. Without Gender Column (5 clusters)\n","0cfdeb27":"Based on Scree plot using Gaussian Mixture Algorithm, we could finalize 2 cluster groups","48f6a55c":"<u>Settings for Display & Running Mode<\/u>"}}