{"cell_type":{"6c260b8f":"code","b26c368a":"code","9c60f3b6":"code","4d32448b":"markdown","c6c931d4":"markdown","7a09bf6d":"markdown","ea93a855":"markdown","4bb06143":"markdown","505647f4":"markdown","db65d52e":"markdown"},"source":{"6c260b8f":"import pandas as pd\nimport numpy as np\nimport statistics as st\nimport scipy.stats as stats","b26c368a":"alpha=0.05\nn_blocks=2\nn_rows=6\nlist_blocks=[]\nfor i in range(1,n_blocks+1):\n    for j in range(1,int(n_rows\/n_blocks)+1):\n        list_blocks.append('Block{}'.format(i))\ndic={'A':[13,14,12,16,18,17],'B':[21,19,17,14,11,14],'C':[18,15,15,15,13,8]}\nn_groups=len(dic)\ndata=pd.DataFrame(dic,index=list_blocks)\ndata","9c60f3b6":"columns=data.columns\nsample_mean=[]\nfor i in range(n_blocks):\n    for j in range(n_groups):\n        sample_mean.append(np.mean(data[columns[j]].loc['Block{}'.format(i+1)]))\ncol_mean=[]\nfor k in range(len(data.columns)):\n    col_mean.append(np.mean(data.loc[:,data.columns[k]]))\nblock_mean=[]\nfor i in range(n_blocks):\n    block_mean.append(np.mean(np.mean(data.loc['Block{}'.format(i+1),:])))\nlist_total=sample_mean+col_mean+block_mean\nover_mean=np.mean(list_total)\nSSB=0\nfor k in range(n_blocks):\n    SSB=SSB+(block_mean[k]-over_mean)**2\nSSB=SSB*(n_rows\/n_blocks*len(data.columns))\nSSC=0\nfor k in range(len(data.columns)):\n    SSC=SSC+(col_mean[k]-over_mean)**2\nSSC=SSC*len(data)\ndf_columns=n_groups-1\nblock_m=[]\nfor k in range(len(block_mean)):\n    for i in range(int(n_rows\/n_blocks)):\n        block_m.append(block_mean[k])\ncolumn_m=[]\nfor k in range(n_blocks):\n    for i in range(len(col_mean)):\n        column_m.append(col_mean[i])\nSSI=0\nfor i in range(len(sample_mean)):\n    SSI=SSI+(sample_mean[i]-block_m[i]-column_m[i]+over_mean)**2\nSSI=SSI*(n_rows\/n_blocks)\nSST=0\nfor i in range(len(data)):\n    for j in range(len(data.columns)):\n        SST=SST+(data.iloc[i,j]-over_mean)**2\nSSE=SST-SSB-SSC-SSI\ndf_error=n_blocks*len(col_mean)*((n_rows\/n_blocks)-1)\nF=(SSC\/df_columns)\/(SSE\/df_error)\nF_critical=stats.f.ppf(1-alpha,dfn=df_columns,dfd=df_error)\nif F<F_critical:\n    print('Result: Fail to reject Ho')\nelse:\n    print('Result: Reject Ho')","4d32448b":"## Block 1 means \"warm\", block 2 means \"cold\"","c6c931d4":"## H1: at least 1 sample comes from a different population","7a09bf6d":"# ANOVA TWO FACTOR - WITH REPLICATION - ANALYSIS OF VARIANCE","ea93a855":"## Calculations:","4bb06143":"## Ho: all samples come from same population","505647f4":"## Input variables:","db65d52e":"## Hypotheses:"}}