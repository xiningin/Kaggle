{"cell_type":{"0f466ef4":"code","73e0476a":"code","593bbb01":"code","ff83b9aa":"code","0653a670":"code","c0a35ae4":"code","4aefa071":"code","0c9eee73":"code","4de1792f":"code","d32e3e92":"code","05c35a4a":"code","3e82f2ac":"code","730fb970":"code","9f0e6b5f":"code","a98d43dc":"code","4c567812":"code","2fabd83b":"code","bd4163dd":"code","44ba97e6":"code","e44bc920":"code","b635d243":"code","a84f18a7":"code","679c3ca5":"code","1add541f":"code","caf6bad5":"code","f6482780":"code","82c7131b":"code","2765b241":"code","692b1aeb":"code","2d91ebea":"code","9a32b456":"code","6f8c342e":"code","726265f9":"markdown","9f7b8f68":"markdown","82d2260b":"markdown","3644c688":"markdown","3bc5157b":"markdown","4726069e":"markdown","346f6c44":"markdown","ba86240c":"markdown","c2a93a25":"markdown","5464b32b":"markdown","dcf49a74":"markdown","97b69e71":"markdown","327132e2":"markdown","f2b09d1f":"markdown","9d51dde7":"markdown","960794c1":"markdown","5ccac127":"markdown","2e6e319f":"markdown","69009360":"markdown","14157d24":"markdown"},"source":{"0f466ef4":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","73e0476a":"from datetime import datetime\nfrom os import scandir\n\ndef convert_date(timestamp):\n    d = datetime.utcfromtimestamp(timestamp)\n    formated_date = d.strftime('%d %b %Y')\n    return formated_date\n\ndef get_files():\n    dir_entries = scandir('my_directory\/')\n    for entry in dir_entries:\n        if entry.is_file():\n            info = entry.stat()\n            print(f'{entry.name}\\t Last Modified: {convert_date(info.st_mtime)}')\n","593bbb01":"with open('data.txt', 'r') as f:\n    data = f.read()","ff83b9aa":"import pandas as pd\n\ndf_csv=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf_csv.head(2)","0653a670":"from pandas import read_excel\n# find your sheet name at the bottom left of your excel file and assign \n# it to my_sheet \nmy_sheet = 'Sheet1' # change it to your sheet name\nfile_name = 'products_and_categories.xlsx' # change it to the name of your excel file\ndf = read_excel(file_name, sheet_name = my_sheet)\nprint(df.head()) # shows headers with top 5 rows","c0a35ae4":"import sqlite3 \n  \n# connecting to the database  \nconnection = sqlite3.connect(\"myTable.db\") ","4aefa071":"import matplotlib.pyplot as plt\nimport cv2 \n  \n# Save image in set directory \n# Read RGB image \nimg = cv2.imread('..\/input\/alaska2-image-steganalysis\/Cover\/00001.jpg')\n# Output img \nplt.imshow(img)\nplt.show()","0c9eee73":"import matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n\nimg=mpimg.imread('..\/input\/alaska2-image-steganalysis\/Cover\/00001.jpg') # read\n# To plot the image\nimgplot = plt.imshow(img)","4de1792f":"from PIL import Image\nimage = Image.open(\"..\/input\/alaska2-image-steganalysis\/Cover\/00001.jpg\")\n#image.show()\nplt.imshow(image)","d32e3e92":"# There are two ways to load the data from the PANDA dataset:\n# Option 1: Load images using openslide\nimport openslide\n# Option 2: Load images using skimage (requires that tifffile is installed)\nimport skimage.io\nimport random\nimport seaborn as sns\nimport cv2\n\n# General packages\nimport pandas as pd\nimport numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport PIL\nimport os","05c35a4a":"BASE_PATH = '..\/input\/prostate-cancer-grade-assessment'\n\n# image and mask directories\ndata_dir = f'{BASE_PATH}\/train_images'\nmask_dir = f'{BASE_PATH}\/train_label_masks'\n\n\n# Location of training labels\ntrain = pd.read_csv(f'{BASE_PATH}\/train.csv').set_index('image_id')\ntest = pd.read_csv(f'{BASE_PATH}\/test.csv')","3e82f2ac":"def display_images(slides): \n    f, ax = plt.subplots(5,3, figsize=(18,22))\n    for i, slide in enumerate(slides):\n        image = openslide.OpenSlide(os.path.join(data_dir, f'{slide}.tiff'))\n        spacing = 1 \/ (float(image.properties['tiff.XResolution']) \/ 10000)\n        patch = image.read_region((1780,1950), 0, (256, 256))\n        ax[i\/\/3, i%3].imshow(patch) \n        image.close()       \n        ax[i\/\/3, i%3].axis('off')\n        \n        image_id = slide\n        data_provider = train.loc[slide, 'data_provider']\n        isup_grade = train.loc[slide, 'isup_grade']\n        gleason_score = train.loc[slide, 'gleason_score']\n        ax[i\/\/3, i%3].set_title(f\"ID: {image_id}\\nSource: {data_provider} ISUP: {isup_grade} Gleason: {gleason_score}\")\n\n    plt.show() \n    \nimages = [\n    '07a7ef0ba3bb0d6564a73f4f3e1c2293',\n    '037504061b9fba71ef6e24c48c6df44d',\n    '035b1edd3d1aeeffc77ce5d248a01a53',\n    '059cbf902c5e42972587c8d17d49efed',\n    '06a0cbd8fd6320ef1aa6f19342af2e68',\n    '06eda4a6faca84e84a781fee2d5f47e1',\n    '0a4b7a7499ed55c71033cefb0765e93d',\n    '0838c82917cd9af681df249264d2769c',\n    '046b35ae95374bfb48cdca8d7c83233f',\n    '074c3e01525681a275a42282cd21cbde',\n    '05abe25c883d508ecc15b6e857e59f32',\n    '05f4e9415af9fdabc19109c980daf5ad',\n    '060121a06476ef401d8a21d6567dee6d',\n    '068b0e3be4c35ea983f77accf8351cc8',\n    '08f055372c7b8a7e1df97c6586542ac8'\n]\n\ndisplay_images(images)","730fb970":"import scipy.io\nmat = scipy.io.loadmat('..\/input\/trends-assessment-prediction\/fMRI_test\/10003.mat')","9f0e6b5f":"import numpy as np\nimport h5py\nf = h5py.File('..\/input\/trends-assessment-prediction\/fMRI_test\/10003.mat','r')\ndata = f.get('data\/variable1')\ndata = np.array(data)","a98d43dc":"from mat4py import loadmat\n\ndata = loadmat('datafile.mat')","4c567812":"import matlab.engine\neng = matlab.engine.start_matlab()\ncontent = eng.load(\"example.mat\", nargout=1)","2fabd83b":"!pip install librosa","bd4163dd":"import librosa\ny, sr = librosa.load('..\/input\/birdsong-recognition\/train_audio\/aldfly\/XC134874.mp3')","44ba97e6":"from playsound import playsound\nplaysound('..\/input\/birdsong-recognition\/train_audio\/aldfly\/XC134874.mp3')","e44bc920":"from pydub import AudioSegment\nfrom pydub.playback import play\n\nsong = AudioSegment.from_wav(\"sound.wav\")\nplay(song)","b635d243":"from Tkinter import *\nimport tkSnack\n\nroot = Tk()\ntkSnack.initializeSnack(root)\n\nsnd = tkSnack.Sound()\nsnd.read('sound.wav')\nsnd.play(blocking=1)","a84f18a7":"# pdf to text\nfrom pdfminer.pdfinterp import PDFResourceManager, PDFPageInterpreter\nfrom pdfminer.converter import TextConverter\nfrom pdfminer.layout import LAParams\nfrom pdfminer.pdfpage import PDFPage\nfrom cStringIO import StringIO\n\ndef convert_pdf_to_txt(path):\n    rsrcmgr = PDFResourceManager()\n    retstr = StringIO()\n    codec = 'utf-8'\n    laparams = LAParams()\n    device = TextConverter(rsrcmgr, retstr, codec=codec, laparams=laparams)\n    fp = file(path, 'rb')\n    interpreter = PDFPageInterpreter(rsrcmgr, device)\n    password = \"\"\n    maxpages = 0\n    caching = True\n    pagenos=set()\n    for page in PDFPage.get_pages(fp, pagenos, maxpages=maxpages, password=password,caching=caching, check_extractable=True):\n        interpreter.process_page(page)\n    fp.close()\n    device.close()\n    str = retstr.getvalue()\n    retstr.close()\n    return str","679c3ca5":"import urllib2\nfrom bs4 import BeautifulSoup\n\n# Fetch the html file\nresponse = urllib2.urlopen('http:\/\/tutorialspoint.com\/python\/python_overview.htm')\nhtml_doc = response.read()\n\n# Parse the html file\nsoup = BeautifulSoup(html_doc, 'html.parser')\n\n# Format the parsed html file\nstrhtm = soup.prettify()\n\n# Print the first few characters\nprint (strhtm[:225])","1add541f":"import codecs\nf=codecs.open(\"test.html\", 'r')\nprint f.read()","caf6bad5":"with open(\"test.html\", \"r\", encoding='utf-8') as f:\n    text= f.read()","f6482780":"import urllib\n\npage = urllib.request.urlopen(\"\/path\/\").read()\nprint(page)","82c7131b":"from IPython.display import HTML\nHTML(filename='myhtml.html')","2765b241":"import nibabel as nib\nimport numpy as np\n\n# Get nibabel image object\nimg = nib.load(\"..\/input\/trends-assessment-prediction\/fMRI_mask.nii\")\n\n# Get data from nibabel image object (returns numpy memmap object)\nimg_data = img.get_data()\n\n# Convert to numpy ndarray (dtype: uint16)\nimg_data_arr = np.asarray(img_data)","692b1aeb":"import json \n  \n# Opening JSON file \nf = open('data.json',) \n  \n# returns JSON object as  \n# a dictionary \ndata = json.load(f) \n  \n# Iterating through the json \n# list \nfor i in data['emp_details']: \n    print(i) \n  \n# Closing file \nf.close() ","2d91ebea":"import pylab\nimport imageio\nfilename = '\/tmp\/file.mp4'\nvid = imageio.get_reader(filename,  'ffmpeg')\nnums = [10, 287]\nfor num in nums:\n    image = vid.get_data(num)\n    fig = pylab.figure()\n    fig.suptitle('image #{}'.format(num), fontsize=20)\n    pylab.imshow(image)\npylab.show()","9a32b456":"import skvideo.io  \nvideodata = skvideo.io.vread(\"video_file_name\")  \nprint(videodata.shape)","6f8c342e":"# this code snippet is taken from: https:\/\/www.kaggle.com\/robikscube\/kaggle-deepfake-detection-introduction#Can-you-detect-the-deepfake?\nimport cv2 as cv\nimport os\nimport matplotlib.pylab as plt\ntrain_dir = '\/kaggle\/input\/deepfake-detection-challenge\/train_sample_videos\/'\nfig, ax = plt.subplots(1,1, figsize=(15, 15))\ntrain_video_files = [train_dir + x for x in os.listdir(train_dir)]\n# video_file = train_video_files[30]\nvideo_file = '..\/input\/deepfake-detection-challenge\/train_sample_videos\/agdkmztvby.mp4'\ncap = cv.VideoCapture(video_file)\nsuccess, image = cap.read()\nimage = cv.cvtColor(image, cv.COLOR_BGR2RGB)\ncap.release()   \nax.imshow(image)\nax.xaxis.set_visible(False)\nax.yaxis.set_visible(False)\nax.title.set_text(f\"FRAME 0: {video_file.split('\/')[-1]}\")\nplt.grid(False)","726265f9":"# 4. sqlite File (.db)","9f7b8f68":"# 9. pdf files:","82d2260b":"# 12. json File:","3644c688":"# 8. mp3 File: ","3bc5157b":"## If you want to know when the files were last modified:","4726069e":"# 2. csv File:","346f6c44":"# 3. xlsx File: ","ba86240c":"# 5. image Files (jpeg, jpg, png, etc..):","c2a93a25":"# 10. html File:","5464b32b":"# 6.tiff File: ","dcf49a74":"Having MATLAB 2014b or newer installed, the [MATLAB engine for Python](https:\/\/www.mathworks.com\/help\/matlab\/matlab-engine-for-python.html) could be used:","97b69e71":"# 11. nii File:","327132e2":"# 7. mat File: ","f2b09d1f":"# 13. mp4 File:","9d51dde7":"# If you find this notebook helpful please upvote\n\nAlso, If there is any other kind of file that can be openned using python, please let me know.","960794c1":"# Read all the files available in this kernel:","5ccac127":"# 1. txt File:","2e6e319f":"this piece of code is taken from https:\/\/www.kaggle.com\/rohitsingh9990\/panda-eda-better-visualization-simple-baseline\/notebook","69009360":"![](https:\/\/www.freecodecamp.org\/news\/content\/images\/2020\/05\/Python-File-Handling-1.png)","14157d24":"![](https:\/\/data-flair.training\/blogs\/wp-content\/uploads\/sites\/2\/2018\/02\/File-Handling-In-python-01.jpg)"}}