{"cell_type":{"c2fa7006":"code","68d1bf86":"code","08969092":"code","06cf51c3":"code","a9f15dfa":"code","75f9737f":"code","61edf00a":"code","8581ba95":"code","fe41c5ac":"code","eb4cef44":"code","88b50898":"code","32b03ae6":"code","8b175cd7":"code","fd29f889":"code","62865b8a":"code","7110d46f":"markdown","e296473b":"markdown","64c4e6ed":"markdown","60869a4b":"markdown","342e6bb9":"markdown","8e01fc58":"markdown","6add2ddc":"markdown","fe7124de":"markdown","e6efb7f4":"markdown","39d96c46":"markdown","ca6b8e53":"markdown","4a2b5766":"markdown","25d8106e":"markdown","09737296":"markdown"},"source":{"c2fa7006":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns  \nfrom wordcloud import WordCloud\nsns.set(color_codes = True)","68d1bf86":"missing_values = ['NaN', 'Free'] #set the NaN values \ndf = pd.read_csv('..\/input\/windows-store\/msft.csv', na_values = missing_values) #considering free as NaN\ndf","08969092":"df.describe()","06cf51c3":"df.info()","a9f15dfa":"df.Date = pd.to_datetime(df.Date) #changed it from object \ndf.drop(index=5321, inplace = True) # dropped the row\n# as this row has almost all NaN values\ndf.fillna(value = 0, inplace = True) # now only the NaNs are left in the price col \n# so 1st we made them 0 from NaN\ndf['Price'] = df['Price'].replace(['\u20b9',',','<'], '', regex=True) #Now we removed the symbols used in price col \n# now the dataframe is ready to go ","75f9737f":"df_rate = df[['Price', 'No of people Rated']]  # selecting dataframe \ndf_rate = df_rate.apply(pd.to_numeric)    # prices were ojects \n# So making them numeric\ndf_rate = df_rate.sort_values('Price', ascending = False); # sorting by price \nfig = plt.gcf();\nfig.set_size_inches(15,7);\nsns.swarmplot(x= 'Price', y='No of people Rated', data = df_rate).set_title('Prdocut distribution across the price'); #plotted\nplt.xticks(rotation=90);","61edf00a":"\ntatal_rated = df[['No of people Rated', 'Category']].groupby('Category').sum()\n# grouped by category\nfig =plt.gcf();\nfig.set_size_inches(15,7);\nsns.barplot(x=tatal_rated.index, y='No of people Rated', data= tatal_rated); #plot\nplt.xticks(rotation=90);","8581ba95":"# which product has got the highest average rating \ndf_mean_rating = df[['Rating', 'Category']].groupby('Category').mean()\n# grouped by categories \ndf_mean_rating = df_mean_rating.sort_values('Rating', ascending = False)\n# sorted the values \nfig =plt.gcf();\nfig.set_size_inches(10,7);\nplt.bar(df_mean_rating.index, 'Rating', \n        data= df_mean_rating, color ='#00ed14');\n# plotted using color green\nplt.xticks(rotation=90);","fe41c5ac":"# most rated rating \ntotal_rating = df.groupby('Rating').sum()\nfig=plt.gcf();\nfig.set_size_inches(20,7);\nsns.barplot(x=total_rating.index, y='No of people Rated', data=total_rating );\nplt.xlabel('Rating');\nplt.ylabel('No of people Rated');","eb4cef44":"# total rating in each year so far \nyears = df[['Date', 'No of people Rated']].groupby(df['Date'].dt.year).sum()\n# grouped by dates \nfig=plt.gcf();\nfig.set_size_inches(15,7);\nsns.barplot(x=years.index,y='No of people Rated', data=years);\n# plotted \nplt.xlabel('Date');\nplt.ylabel('No of people Rated');","88b50898":"# which category has how many products \ncat_total = df.groupby('Category').count()\ncat_total = cat_total.sort_values('Name', ascending = False)\n# sorted \nfig=plt.gcf();\nfig.set_size_inches(15,7);\nsns.barplot(x=cat_total.index,y='Name', data=cat_total);\nplt.xticks(rotation=80);\n# rotated the names along the x axis \nplt.xlabel('Category Name');\nplt.ylabel('Total Itmes');\n# gave labels ","32b03ae6":"# best free apps in category \nmy_color= [\"#fa4a05\", \"#00ed14\", \"#f7f420\", \"#21abeb\"]\ndef best(n): # defining the function\n    free_product = df[df.Price == 0.0]   # data of only the free products \n    best_free_prodcut = free_product[free_product.Rating == 5.0] #only those who have got 5.0 rating \n    best_free = best_free_prodcut[best_free_prodcut.Category == n ]   #select the category \n    constant = best_free['No of people Rated'].median() + best_free['No of people Rated'].std()  # selected the constant \n# here we used a statistical measure \n# we have taken the sum of median and standard deviation to find only the top products \n# but it is unnecessary as we are selecting only the top 4\n    best = best_free[best_free['No of people Rated'] > constant ]  # so we have selected the toppers of the category \n    top =best.sort_values(by = 'No of people Rated', ascending = False)\n#sorted them according to the total no of ratings \n    top_ =top.head(4)\n#selected only the top 4 \n    fig=plt.gcf();\n    fig.set_size_inches(7,4);\n    x = sns.barplot(x=top_.Name, y='No of people Rated', data=top_ , \n                    palette = my_color).set_title(n); #plotted with the four colors \n# given title \n    plt.xticks(rotation =80);\n    plt.xlabel('Top 4 Free Apps');  #given labels x aixs \n    plt.ylabel('No of people Rated'); #given labels y axis \n    return x\n# returning the plot ","8b175cd7":"best('News and Weather');","fd29f889":"best('Books');","62865b8a":"wordCloud = WordCloud(background_color='white',max_font_size = 50).generate(' '.join(df.Category))\nplt.figure(figsize=(10,6))\nplt.axis('off')\nplt.imshow(wordCloud)\nplt.show()","7110d46f":"> Info ","e296473b":"# Import Section ","64c4e6ed":"# Total products across the category\n\nThis looks pretty similar to a previous plot which shows how many people rated each product ","60869a4b":"## News and Weather","342e6bb9":"# Top 4 free products in each category \n\nHere we selected top 4 products to color them with the four Microsoft colors","8e01fc58":"# Prdocut distribution :\n\nIn which price we have got more products? ","6add2ddc":"# No of people rated in each rating \n\nSo here you can see that most of the people has rated 4.0.\n* Means there is place for emprovement \n\nVery few people has rated less than 3.0 which is a good achievement ","fe7124de":"# How many people rated each product :\n\nTotal no of people rated each product \n* So here you can see that people loved the Music products much \n* And then there is Books","e6efb7f4":"# Average rating of each product : \n\nHere we have considered the mean as the median of various prodcut is kind of same...\n\nSelected the color Green as it is one the those four Microsoft logo colors ","39d96c46":">  Cleaning the data ","ca6b8e53":"# Rating across the years : \n\nWe have summed up the no of people rated each year... \n* Here we can see the total no of people rated each year is increasing \n* But after the year 2016 it started decreasing \n* And its minimum and the year 2020, maybe due to the covid out break\n\n**But you should look after this seriously**","4a2b5766":"## Books","25d8106e":"# **Word cloud**","09737296":"> Describing \n"}}