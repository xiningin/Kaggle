{"cell_type":{"7f0992b9":"code","d538480c":"code","9f7f3c48":"code","1f8bcd68":"code","ee7c76ea":"code","f592c7d4":"code","8a9a4d97":"code","e57c1b4e":"code","5a1fe078":"code","b9cee93f":"code","6d4b0708":"code","7b9d5248":"code","be67ceff":"code","cecde4f5":"code","63d297b1":"code","98a24c91":"code","1a138f89":"code","d79f6950":"code","87400017":"code","5dce9b3b":"code","a6fd4caf":"code","3e3e90f1":"code","51a5b75a":"code","85fa391e":"code","f63ed113":"code","26611870":"code","3e092992":"code","cb730607":"code","2e7cd095":"code","e088c961":"markdown","0b8cdd5e":"markdown","eaa52b27":"markdown","abb04623":"markdown","b91768eb":"markdown","f230f80a":"markdown","18dd5e58":"markdown","fce2e3bf":"markdown","454cef97":"markdown","eae42bc4":"markdown","0cea5f77":"markdown","ef431232":"markdown","ff1d9ef0":"markdown","1cf74471":"markdown","90b066b7":"markdown","10922374":"markdown"},"source":{"7f0992b9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n#for visualization","d538480c":"df = pd.read_csv('\/kaggle\/input\/haberman\/haberman.csv')","9f7f3c48":"df.head()\n#top-most values of the dataset","1f8bcd68":"df.shape\n#our dataset have 306 rows and 4 columns","ee7c76ea":"df.columns\n#columns of the dataset","f592c7d4":"df['status'].value_counts()","8a9a4d97":"df.describe()","e57c1b4e":"df.info()","5a1fe078":"sns.set_style(\"darkgrid\");\nsns.FacetGrid(df, hue='status', size=6).map(plt.scatter, \"year\", \"nodes\").add_legend();\nplt.show();","b9cee93f":"sns.set_style('darkgrid');\nsns.FacetGrid(df, hue='status' , size=6).map(plt.scatter, 'nodes', 'age').add_legend();\nplt.show()","6d4b0708":"sns.FacetGrid(df, hue='status', size=5).map(sns.distplot,\"year\").add_legend()\nplt.show()\n#points are overlapping as we can see","7b9d5248":"sns.FacetGrid(df, hue='status', size=5).map(sns.distplot, 'age').add_legend()\nplt.show()","be67ceff":"sns.FacetGrid(df, hue='status', size=5).map(sns.distplot, \"nodes\").add_legend()\nplt.show()","cecde4f5":"sns.boxplot(x='status', y='year', data=df)\nplt.show()","63d297b1":"sns.boxplot(x='status', y='age', data=df)\nplt.show()","98a24c91":"sns.boxplot(x='status', y='nodes', data=df)\nplt.show()","1a138f89":"#people most people who survived have zero positive axillary nodes","d79f6950":"sns.violinplot(x='status' , y='nodes', data=df, size=8)\nplt.show()","87400017":"sns.violinplot(x='status', y='age', data=df, size=8)\nplt.show()","5dce9b3b":"sns.violinplot(x='status', y='year', data=df, size=8)\nplt.show()","a6fd4caf":"import plotly.express as px\nfig = px.scatter_3d(df, x='age', y='nodes', z='year', color='status')\nfig.show()","3e3e90f1":"#pdf cdf of year\ncounts, bin_edges = np.histogram(df['year'], bins=30 , density=True)\npdf = counts\/sum(counts)\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:], pdf)\nplt.plot(bin_edges[1:], cdf)\nplt.legend()\n\ncounts, bin_edges = np.histogram(df['year'], bins=30, density=True)\npdf = counts\/(sum(counts))\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:], pdf)\nplt.plot(bin_edges[1:], cdf)\n\nplt.xlabel('Year')\nplt.grid()\nplt.show()","51a5b75a":"#pdf cdf of positive_axillary_nodes\n\ncounts,bin_edges = np.histogram(df['nodes'],bins = 30, density = True)\npdf = counts\/(sum(counts))\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf)\nplt.plot(bin_edges[1:],cdf)\nplt.legend()\n\ncounts,bin_edges = np.histogram(df['nodes'],bins = 30, density = True)\npdf = counts\/(sum(counts))\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf)\nplt.plot(bin_edges[1:],cdf)\n\nplt.xlabel('positive_axillary_nodes')\nplt.grid()\n\nplt.show()","85fa391e":"#pdf cdf of Age\n\ncounts,bin_edges = np.histogram(df['age'],bins = 30, density = True)\npdf = counts\/(sum(counts))\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf)\nplt.plot(bin_edges[1:],cdf)\nplt.legend()\n\ncounts,bin_edges = np.histogram(df['age'],bins = 30, density = True)\npdf = counts\/(sum(counts))\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf)\nplt.plot(bin_edges[1:],cdf)\n\nplt.xlabel('Age')\nplt.grid()\n\nplt.show()","f63ed113":"# pairwise scatter plot: Pair-Plot\n\nplt.close();\nsns.set_style(\"darkgrid\");\nsns.pairplot(df, hue='status', size=3)\nplt.show()","26611870":"survived_patients = df[df['status']==1]\nnot_survived = df[df['status']==2]\n","3e092992":"print(np.mean(survived_patients))","cb730607":"print(np.mean(not_survived))","2e7cd095":"sns.jointplot(x='age', y='nodes', data=df, kind='kde', heights=6)\nplt.show()","e088c961":"**Pair-plot**","0b8cdd5e":"PDF and CDF\n","eaa52b27":"Final Conclusion\nThose having more than 3 positive_axillary_nodes they have not survived more than 5 years\nThose having less than 3 positive_axillary_nodes they have survived more than 5 years after the operation\nPositive_axillary_nodes is a useful feature to identify the survival_status of cancer patients\nAge and Year of operation have overlapping curves so we can't classify patients for their survival_status using age","abb04623":"**Histogram**","b91768eb":"**Observations**\n* Positive_axillary_nodes is a useful feature to identify the survival_status of cancer patients\n* Age and Year of operation have overlapping curves so we can't have a suitable observation that can classify survival_status","f230f80a":"**Box plot and Whiskers**","18dd5e58":"**#observations**\n* Only 225 patients survived 5 years or longer\n* And 81 the patient died within 5 year","fce2e3bf":"**3D scatter plot with Plotly Express**\n\n[https:\/\/plot.ly\/python\/3d-scatter-plots\/](http:\/\/)","454cef97":"**Observation**\n\n* Mean age of patients who survived more than 5 years is 52 years and who didn't survive is 54 years\n* Those having more than 3 positive_axillary_nodes they have not survived more than 5 years\n* Those having less than 3 positive_axillary_nodes they have survived more than 5 years after the operation","eae42bc4":"we have two classes \n1 = the patient survived 5 years or longer \n2 = the patient died within 5 year","0cea5f77":"with large number of positive axillary nodes survival status decreases  ","ef431232":"**Violin plots**","ff1d9ef0":"#pdf cdf of positive_axillary_nodes","1cf74471":"**#mean: average**","90b066b7":"well the features are overlapping and we can't clearly make out anything but...\n* patients with age less than 35 and greater than 30  survived more than 5 years after operation\n* patients with age less than 83 and greater than 78 have survived not more than 5 years after operation\n* patients from age 35 to 78 we can't say anything as point are almost overlapping.","10922374":"before doing anything read the description....\n\n\nHaberman data set for cancer survival\nHaverman data set is the result of the research conducted between 1958 and 1970 to examine the patient will survived for less than 5 years or grater than equal to five years after operation. The study was held at the University of Chicago's Billings Hospital.\n\n**Content**\nIt contains the three features and two classes\nall columns are numerical data\n\nNumber of Instances: 306\nNumber of Attributes: 4 (including the class attribute)\nAttribute Information:\nAge of patient at time of operation (numerical)\nPatients year of operation (year - 1900, numerical)\nNumber of positive axillary nodes detected (numerical)\nSurvival status (class attribute) 1 = the patient survived 5 years or longer \n2 = the patient died within 5 year\nMissing Attribute Values: None"}}