{"cell_type":{"19dab263":"code","418af4fd":"code","02d4b50d":"code","866f8cee":"code","a8c4ebdb":"code","f3a652f4":"code","bc81b743":"code","214353fc":"code","605e306e":"code","0385eafe":"code","098f9e0a":"code","762b9049":"code","2459328c":"code","5133f568":"code","b3cc80bf":"code","ffb87195":"markdown","39d1ee81":"markdown","9fe8fc73":"markdown","182cfe48":"markdown","b5aed158":"markdown","ee9eb942":"markdown"},"source":{"19dab263":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","418af4fd":"df = pd.read_csv('\/kaggle\/input\/corona-virus-report\/covid_19_clean_complete.csv')","02d4b50d":"df","866f8cee":"df_country = df.groupby(['Country\/Region'], as_index = False)\n\n\nmean_recovered = df_country.aggregate({'Recovered': 'max'})['Recovered'].mean()\nmean_deaths = df_country.aggregate({'Deaths': 'max'})['Deaths'].mean()\nmean_confirmed = df_country.aggregate({'Confirmed': 'max'})['Confirmed'].mean()\n\n\nvalues_recovered = df_country.aggregate({'Recovered': 'max'})\nvalues_confirmed = df_country.aggregate({'Confirmed': 'max'})\nvalues_deaths = df_country.aggregate({'Deaths': 'max'})\n\n\ndf_recovered_mta = values_recovered.query('Recovered > @mean_recovered') # mta - more than average\ndf_deaths_mta = values_deaths.query('Deaths > @mean_deaths')\ndf_confirmed_mta = values_confirmed.query('Confirmed > @mean_confirmed')","a8c4ebdb":"fig, ax = plt.subplots(figsize=(12, 7), subplot_kw=dict(aspect=\"equal\"), dpi= 80)\n\ndata = df_recovered_mta['Recovered']\ncategories = df_recovered_mta['Country\/Region']\nexplode = list(np.zeros(len(data)))\nlisted = list(sorted(data))[-3:]\nexplode[list(data).index(listed[0])] = 0.1\nexplode[list(data).index(listed[1])] = 0.05\nexplode[list(data).index(listed[2])] = 0.1\n\ndef func(pct, allvals):\n    absolute = int(pct\/100.*np.sum(allvals))\n    return \"{:.1f}% ({:d})\".format(pct, absolute)\n\nwedges, texts, autotexts = ax.pie(data, \n                                  autopct=lambda pct: func(pct, data),\n                                  textprops=dict(color=\"w\"), \n                                  colors=plt.cm.tab20b.colors,\n                                 startangle=140,\n                                 explode = explode)\n\n# Decoration\nax.legend(wedges, categories, title=\"Countries\/Regions\", loc=\"center left\", bbox_to_anchor=(1, 0, 0.5, 1))\nplt.setp(autotexts, size=10, weight=700)\nax.set_title(\"Pie Diagram of Recoveries by CoronaVirus\")\nplt.show()","f3a652f4":"fig, ax = plt.subplots(figsize=(12, 7), subplot_kw=dict(aspect=\"equal\"), dpi= 80)\n\ndata = df_deaths_mta['Deaths']\ncategories = df_deaths_mta['Country\/Region']\nexplode = list(np.zeros(len(data)))\nlisted = list(sorted(data))[-3:]\nexplode[list(data).index(listed[0])] = 0.1\nexplode[list(data).index(listed[1])] = 0.05\nexplode[list(data).index(listed[2])] = 0.1\n\n\ndef func(pct, allvals):\n    absolute = int(pct\/100.*np.sum(allvals))\n    return \"{:.1f}% ({:d})\".format(pct, absolute)\n\nwedges, texts, autotexts = ax.pie(data, \n                                  autopct=lambda pct: func(pct, data),\n                                  textprops=dict(color=\"w\"), \n                                  colors=plt.cm.Dark2.colors,\n                                 startangle=140,\n                                 explode = explode)\n\n# Decoration\nax.legend(wedges, categories, title=\"Countries\/Regions\", loc=\"center left\", bbox_to_anchor=(1, 0, 0.5, 1))\nplt.setp(autotexts, size=10, weight=700)\nax.set_title(\"Pie Diagram of Death by CoronaVirus\")\nplt.show()","bc81b743":"fig, ax = plt.subplots(figsize=(12, 7), subplot_kw=dict(aspect=\"equal\"), dpi= 80)\n\ndata = df_confirmed_mta['Confirmed']\ncategories = df_confirmed_mta['Country\/Region']\nexplode = list(np.zeros(len(data)))\nlisted = list(sorted(data))[-3:]\nexplode[list(data).index(listed[0])] = 0.2\nexplode[list(data).index(listed[1])] = 0.1\nexplode[list(data).index(listed[2])] = 0.1\n\ndef func(pct, allvals):\n    absolute = int(pct\/100.*np.sum(allvals))\n    return \"{:.1f}% ({:d})\".format(pct, absolute)\n\nwedges, texts, autotexts = ax.pie(data, \n                                  autopct=lambda pct: func(pct, data),\n                                  textprops=dict(color=\"w\"), \n                                  colors=plt.cm.tab20b.colors,\n                                 startangle=210,\n                                 explode = explode)\n\n# Decoration\nax.legend(wedges, categories, title=\"Countries\/Regions\", loc=\"center left\", bbox_to_anchor=(1, 0, 0.5, 1))\nplt.setp(autotexts, size=10, weight=700)\nax.set_title(\"Pie Diagram of Confirmed Disease by CoronaVirus\")\nplt.show()","214353fc":"def defining_raise(array):\n    some_list = []\n    for i in range(len(array)):\n        if i == 0:\n            some_list.append(array[0])\n        else:\n            some_list.append(array[i] - array[i-1])\n    return some_list\n\n\nlist_of_countries = ['China','Italy','US', 'Germany', 'Spain', 'United Kingdom']\nlist_of_cases = ['Recovered', 'Deaths', 'Confirmed']","605e306e":"def defining_values(list_of_countries):\n    for i in list_of_countries:\n        df_of_country = df[df['Country\/Region'] == '{}'.format(i)]\n        for i in list_of_cases:\n            array_values = df_of_country.groupby(['Country\/Region','Date'], as_index = False)['{0}'.format(i)]\\\n            .sum()['{0}'.format(i)].sort_values().values\n            yield array_values\n        \ngen = defining_values(list_of_countries)\nchina_recovered, china_deaths, china_confirmed = next(gen), next(gen), next(gen)\nitaly_recovered, italy_deaths, italy_confirmed = next(gen), next(gen), next(gen)\nus_recovered, us_deaths, us_confirmed = next(gen), next(gen), next(gen)\ngermany_recovered, germany_deaths, germany_confirmed = next(gen), next(gen), next(gen)\nspain_recovered, spain_deaths, spain_confirmed = next(gen), next(gen), next(gen)\nuk_recovered, uk_deaths, uk_confirmed = next(gen), next(gen), next(gen)\n\n\nchina_recovered_raise, china_deaths_raise, china_confirmed_raise = defining_raise(china_recovered), defining_raise(china_deaths), defining_raise(china_confirmed)\nitaly_recovered_raise, italy_deaths_raise, italy_confirmed_raise = defining_raise(italy_recovered), defining_raise(italy_deaths), defining_raise(italy_confirmed)\nus_recovered_raise, us_deaths_raise, us_confirmed_raise = defining_raise(us_recovered), defining_raise(us_deaths), defining_raise(us_confirmed)\ngermany_recovered_raise, germany_deaths_raise, germany_confirmed_raise = defining_raise(germany_recovered), defining_raise(germany_deaths), defining_raise(germany_confirmed)\nspain_recovered_raise, spain_deaths_raise, spain_confirmed_raise = defining_raise(spain_recovered), defining_raise(spain_deaths), defining_raise(spain_confirmed)\nuk_recovered_raise, uk_deaths_raise, uk_confirmed_raise = defining_raise(uk_recovered), defining_raise(uk_deaths), defining_raise(uk_confirmed)","0385eafe":"\n\n########################################################## CHINA ##########################################################\n\n\nplt.style.use('bmh')\nplt.figure(figsize = (16,8))\nplt.plot(china_recovered_raise, 'c', marker = 'd', linestyle = ':')\nplt.xlabel('Days passed from 22 January', fontsize =25)\nplt.ylabel('Recovered #', fontsize = 25)\nplt.title('China Recovery Cases', fontsize = 30)\nplt.show()\n\n#### #### #### Recovery #### #### ####\n\nplt.style.use('bmh')\nplt.figure(figsize = (16,8))\nplt.plot(china_deaths_raise, 'c', marker = 'd', linestyle = ':')\nplt.xlabel('Days passed from 22 January', fontsize =25)\nplt.ylabel('Deaths #', fontsize = 25)\nplt.title('China Death Cases', fontsize = 30)\nplt.show()\n\n#### #### #### Deaths #### #### ####\n\nplt.style.use('bmh')\nplt.figure(figsize = (16,8))\nplt.plot(china_confirmed_raise, 'c', marker = 'd', linestyle = ':')\nplt.xlabel('Days passed from 22 January', fontsize =25)\nplt.ylabel('Confirmed #', fontsize = 25)\nplt.title('China Confirmed Cases', fontsize = 30)\nplt.show()\n\n#### #### #### Confirmed #### #### ####","098f9e0a":"\n\n########################################################## Italy ##########################################################\n\n\nplt.style.use('bmh')\nplt.figure(figsize = (16,8))\nplt.plot(italy_recovered_raise, 'c', marker = 'd', linestyle = ':')\nplt.xlabel('Days passed from 22 January', fontsize =25)\nplt.ylabel('Recovered #', fontsize = 25)\nplt.title('Italy Recovery Raise Cases', fontsize = 30)\nplt.show()\n\n#### #### #### Recovery #### #### ####\n\nplt.style.use('bmh')\nplt.figure(figsize = (16,8))\nplt.plot(italy_deaths_raise, 'c', marker = 'd', linestyle = ':')\nplt.xlabel('Days passed from 22 January', fontsize =25)\nplt.ylabel('Deaths #', fontsize = 25)\nplt.title('Italy Death Raise Cases', fontsize = 30)\nplt.show()\n\n#### #### #### Deaths #### #### ####\n\nplt.style.use('bmh')\nplt.figure(figsize = (16,8))\nplt.plot(italy_confirmed_raise, 'c', marker = 'd', linestyle = ':')\nplt.xlabel('Days passed from 22 January', fontsize =25)\nplt.ylabel('Confirmed #', fontsize = 25)\nplt.title('Italy Confirmed Raise Cases', fontsize = 30)\nplt.show()\n\n#### #### #### Confirmed #### #### ####","762b9049":"\n\n########################################################## US ##########################################################\n\n\nplt.style.use('bmh')\nplt.figure(figsize = (16,8))\nplt.plot(us_recovered_raise, 'c', marker = 'd', linestyle = ':')\nplt.xlabel('Days passed from 22 January', fontsize =25)\nplt.ylabel('Recovered #', fontsize = 25)\nplt.title('United States Recovery Raise Cases', fontsize = 30)\nplt.show()\n\n#### #### #### Recovery #### #### ####\n\nplt.style.use('bmh')\nplt.figure(figsize = (16,8))\nplt.plot(us_deaths_raise, 'c', marker = 'd', linestyle = ':')\nplt.xlabel('Days passed from 22 January', fontsize =25)\nplt.ylabel('Deaths #', fontsize = 25)\nplt.title('United States Death Raise Cases', fontsize = 30)\nplt.show()\n\n#### #### #### Deaths #### #### ####\n\nplt.style.use('bmh')\nplt.figure(figsize = (16,8))\nplt.plot(us_confirmed_raise, 'c', marker = 'd', linestyle = ':')\nplt.xlabel('Days passed from 22 January', fontsize =25)\nplt.ylabel('Confirmed #', fontsize = 25)\nplt.title('United States Confirmed Raise Cases', fontsize = 30)\nplt.show()\n\n#### #### #### Confirmed #### #### ####","2459328c":"\n\n######################################################## GERMANY #########################################################\n\n\nplt.style.use('bmh')\nplt.figure(figsize = (16,8))\nplt.plot(germany_recovered_raise, 'c', marker = 'd', linestyle = ':')\nplt.xlabel('Days passed from 22 January', fontsize =25)\nplt.ylabel('Recovered #', fontsize = 25)\nplt.title('Germany Recovery Raise Cases', fontsize = 30)\nplt.show()\n\n#### #### #### Recovery #### #### ####\n\nplt.style.use('bmh')\nplt.figure(figsize = (16,8))\nplt.plot(germany_deaths_raise, 'c', marker = 'd', linestyle = ':')\nplt.xlabel('Days passed from 22 January', fontsize =25)\nplt.ylabel('Deaths #', fontsize = 25)\nplt.title('Germany Death Raise Cases', fontsize = 30)\nplt.show()\n\n#### #### #### Deaths #### #### ####\n\nplt.style.use('bmh')\nplt.figure(figsize = (16,8))\nplt.plot(germany_confirmed_raise, 'c', marker = 'd', linestyle = ':')\nplt.xlabel('Days passed from 22 January', fontsize =25)\nplt.ylabel('Confirmed #', fontsize = 25)\nplt.title('Germany Confirmed Raise Cases', fontsize = 30)\nplt.show()\n\n#### #### #### Confirmed #### #### ####","5133f568":"\n\n######################################################## SPAIN #########################################################\n\n\nplt.style.use('bmh')\nplt.figure(figsize = (16,8))\nplt.plot(spain_recovered_raise, 'c', marker = 'd', linestyle = ':')\nplt.xlabel('Days passed from 22 January', fontsize =25)\nplt.ylabel('Recovered #', fontsize = 25)\nplt.title('Spain Recovery Raise Cases', fontsize = 30)\nplt.show()\n\n#### #### #### Recovery #### #### ####\n\nplt.style.use('bmh')\nplt.figure(figsize = (16,8))\nplt.plot(spain_deaths_raise, 'c', marker = 'd', linestyle = ':')\nplt.xlabel('Days passed from 22 January', fontsize =25)\nplt.ylabel('Deaths #', fontsize = 25)\nplt.title('Spain Death Raise Cases', fontsize = 30)\nplt.show()\n\n#### #### #### Deaths #### #### ####\n\nplt.style.use('bmh')\nplt.figure(figsize = (16,8))\nplt.plot(spain_confirmed_raise, 'c', marker = 'd', linestyle = ':')\nplt.xlabel('Days passed from 22 January', fontsize =25)\nplt.ylabel('Confirmed #', fontsize = 25)\nplt.title('Spain Confirmed Raise Cases', fontsize = 30)\nplt.show()\n\n#### #### #### Confirmed #### #### ####","b3cc80bf":"\n\n######################################################## UK #########################################################\n\n\nplt.style.use('bmh')\nplt.figure(figsize = (16,8))\nplt.plot(uk_recovered_raise, 'c', marker = 'd', linestyle = ':')\nplt.xlabel('Days passed from 22 January', fontsize =25)\nplt.ylabel('Recovered #', fontsize = 25)\nplt.title('United Kingdom Recovery Raise Cases', fontsize = 30)\nplt.show()\n\n#### #### #### Recovery #### #### ####\n\nplt.style.use('bmh')\nplt.figure(figsize = (16,8))\nplt.plot(uk_deaths_raise, 'c', marker = 'd', linestyle = ':')\nplt.xlabel('Days passed from 22 January', fontsize =25)\nplt.ylabel('Deaths #', fontsize = 25)\nplt.title('United Kingdom Death Raise Cases', fontsize = 30)\nplt.show()\n\n#### #### #### Deaths #### #### ####\n\nplt.style.use('bmh')\nplt.figure(figsize = (16,8))\nplt.plot(uk_confirmed_raise, 'c', marker = 'd', linestyle = ':')\nplt.xlabel('Days passed from 22 January', fontsize =25)\nplt.ylabel('Confirmed #', fontsize = 25)\nplt.title('United Kingdom Confirmed Raise Cases', fontsize = 30)\nplt.show()\n\n#### #### #### Confirmed #### #### ####","ffb87195":"Use generator to assign each case for each country","39d1ee81":"Use Pie Diagram and with \"explode\" define top 3 for each case","9fe8fc73":"Need to take values of each case that are more than average","182cfe48":"Top 3 Recoveries:\n\n1) US 2) Germany 3) Spain\n\nTop 3 Deaths:\n\n1) US 2) United Kingdom 3) Italy\n\nTop 3 Confirmed:\n\n1) US 2) Spain 3) Italy","b5aed158":"Make a function for defining raise. List the countries and cases","ee9eb942":"Import libraries and assign dataframe"}}