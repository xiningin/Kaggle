{"cell_type":{"98490e4b":"code","80acda1a":"code","64a24588":"code","05b39a37":"code","c83582ad":"code","10b5831f":"code","f74dc43b":"code","6111dc03":"code","fffae6fe":"code","7451e887":"code","fcf04842":"code","de8f7ae2":"code","e72547e5":"code","d5644647":"code","616ac80f":"code","659eb89f":"code","baff697e":"code","59ed95d4":"code","0531b26b":"code","bfa7f30b":"code","da61ae20":"code","86397e1d":"code","87cc3684":"code","218117e5":"code","904fa5bd":"code","50769d94":"code","2bab1156":"code","a829da39":"code","54e726bf":"markdown","1b401ecc":"markdown"},"source":{"98490e4b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","80acda1a":"df = pd.read_csv(\"..\/input\/CreditCardUsage.csv\")","64a24588":"df.head(5)","05b39a37":"df.columns","c83582ad":"df.describe().T","10b5831f":"df.info()","f74dc43b":"df.isna().sum()","6111dc03":"df[\"MINIMUM_PAYMENTS\"].median()","fffae6fe":"df[\"MINIMUM_PAYMENTS\"].fillna(df[\"MINIMUM_PAYMENTS\"].median(),inplace=True)","7451e887":"df[\"CREDIT_LIMIT\"].median()","fcf04842":"df[\"CREDIT_LIMIT\"].fillna(df[\"CREDIT_LIMIT\"].median(),inplace=True)","de8f7ae2":"df.duplicated().sum()","e72547e5":"df.drop(columns={'CUST_ID'}, inplace = True)\ndf.columns","d5644647":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n","616ac80f":"plt.figure(figsize=(8,5))\nplt.title(\"Balance distribution\",fontsize=16)\nplt.xlabel (\"Balance\",fontsize=14)\nplt.grid(True)\nplt.hist(df[\"BALANCE\"],color='blue',edgecolor='k')\nplt.show()","659eb89f":"plt.figure(figsize=(10,7))\nplt.ylabel(\"Balance\",fontsize=18)\nplt.xlabel(\"Purchase Frequency\",fontsize=18)\nplt.scatter(x=df[\"PURCHASES_FREQUENCY\"],y=df[\"BALANCE\"])","baff697e":"sns.boxplot(x=df[\"CREDIT_LIMIT\"],y=df[\"BALANCE\"])","59ed95d4":"sns.lineplot(x=df[\"CREDIT_LIMIT\"],y=df[\"BALANCE\"])","0531b26b":"df.corr()[\"BALANCE\"]","bfa7f30b":"sns.heatmap(df.corr())","da61ae20":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaled_df = scaler.fit_transform(df)\ndf_scaled = pd.DataFrame(scaled_df,columns=df.columns)\ndf_scaled.head()","86397e1d":"from sklearn.cluster import KMeans\nimport pylab as pl\nimport random\nimport matplotlib.pyplot as plt","87cc3684":"k_means = KMeans(init = \"k-means++\", n_clusters = 8, n_init = 12)","218117e5":"k_means.fit(scaled_df)","904fa5bd":"k_means_labels = k_means.labels_\nk_means_labels","50769d94":"k_means_cluster_centers = k_means.cluster_centers_\nk_means_cluster_centers","2bab1156":"k_values = range(1, 20)\nkmeans = [KMeans(n_clusters=i) for i in k_values]\nkmeans\nscore = [kmeans[i].fit(scaled_df).score(scaled_df) for i in range(len(kmeans))]\nscore\npl.plot(k_values,score)\npl.xlabel('No. of Clusters')\npl.ylabel('Score')\npl.title('Elbow Curve')\npl.show()","a829da39":"k_values = range(1, 20)\nkmeans = [KMeans(n_clusters=i) for i in k_values]\nkmeans\nscore = [kmeans[i].fit(scaled_df).inertia_ for i in range(len(kmeans))]\nscore\npl.plot(k_values,score)\nplt.vlines(x=7,ymin=0,ymax=160000,linestyles='-')\npl.xlabel('Number of Clusters')\npl.ylabel('Sum of within sum square')\npl.title('Elbow Curve')\npl.show()","54e726bf":"K-Means","1b401ecc":"**We can conclude that k value of 7 will be optimal for this dataset.**"}}