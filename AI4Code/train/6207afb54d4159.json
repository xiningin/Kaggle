{"cell_type":{"4e7d1804":"code","d504f7f7":"code","f3bfbc4a":"code","c65689d9":"code","394ea9c5":"code","995f8779":"code","30783bc7":"code","d7f65e5b":"code","94e07f89":"code","3e533795":"code","d72cdd99":"code","0715c276":"code","25e360c2":"code","ea3221e7":"code","252d7512":"code","f4e3d340":"code","e6b3b8e1":"code","57ee19bf":"code","21de8f16":"code","319c6053":"markdown","feb0fdcf":"markdown","1a105642":"markdown","32f558e1":"markdown","6bad0049":"markdown","41ef452b":"markdown","58b30afa":"markdown","460909e3":"markdown","6581a4cc":"markdown","e8c0a1c0":"markdown","82bf7937":"markdown","3809718c":"markdown","46861553":"markdown","8443e22c":"markdown","bd08e3ff":"markdown"},"source":{"4e7d1804":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d504f7f7":"# Ulkopuolisten koodikirjastojen tuonti\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px","f3bfbc4a":"def helper(df, value):\n    data = pd.pivot_table(df, values=value, index=df.index, columns='loc_id')\n    columns = {1 :'VallikallioKeha1', 2: 'Pirkkolavt3', 3: 'SuutarilaKeha3', 4: 'Kaivokselavt3'}\n    data.columns = columns.values()\n    return data\n\n# df = helper(data, 'pm10')\n\n# df.to_csv('paavaylapm10.csv')\n\ncolor_map = ['#379f9b', '#f18931', '#006431', '#bd3429', '#814494', '#d82e8a', '#74aa50', '#006aa7']\n\n# color_discrete_sequence = px.colors.qualitative.D3\n\ndef plotter(data):\n    fig, ax = plt.subplots(figsize=(18,10))\n    ax.plot(data)\n    ax.grid()\n    return fig, ax\n\ndef plotlyplot_line(df1, color='variable'):\n\n    df1 = df1.melt(ignore_index=False)\n\n    fig = px.line(df1, x=df1.index, y=\"value\", color=color, width=1000, height=700, \n                  template='ggplot2', color_discrete_sequence=color_map)\n\n    fig.update_layout(legend=dict(\n        orientation=\"h\",\n        yanchor=\"bottom\",\n        y=-0.3,\n        xanchor=\"right\",\n        x=0.95\n    ))\n    return fig\n\ndef plotlyplot_bar(df1):\n\n    df1 = df1.melt(ignore_index=False)\n\n    fig = px.bar(df1, x=df1.index, y=\"value\", color=\"variable\", barmode = 'group', width=1000, height=700, \n                  template='ggplot2', color_discrete_sequence = color_map)\n\n    fig.update_layout(legend=dict(\n        orientation=\"h\",\n        yanchor=\"bottom\",\n        y=-0.3,\n        xanchor=\"right\",\n        x=0.95\n    ))\n    return fig\n\n\ndef parseUltimateExcel(excelPath):\n    import datetime\n    dfRef = pd.read_excel(excelPath, header = 0)\n    dfRef['Date & Time'].replace({'24:00': '00:00'}, inplace=True, regex=True)\n    dfRef = dfRef.set_index(dfRef['Date & Time']).drop('Date & Time', axis = 1)\n    dfRef.index = pd.to_datetime(dfRef.index, format=\"%d\/%m\/%Y %H:%M\")\n    dfRef = dfRef.apply(pd.to_numeric, errors='coerce')\n    dfRef.loc[dfRef.index.time == datetime.time(0, 0)] = dfRef.loc[dfRef.index.time == datetime.time(0, 0)].shift(periods = 1,\n                                                                                                          freq = 'D')\n    \n    return dfRef","c65689d9":"filepath = '..\/input\/paavaylano2\/paavaylano2.csv'\n\ndata = pd.read_csv(filepath, index_col=0, header=0, parse_dates=True)\n\ndata","394ea9c5":"data.describe()","995f8779":"data_hour = data.resample('H', label='right').mean() # Alkuper\u00e4iset minuuttiarvot tuntikeskiarvoiksi\n\ndata_daily = data.resample('D', label='left').mean() # Alkuper\u00e4iset minuuttiarvot vuorokausikeskiarvoiksi\n\n","30783bc7":"plotlyplot_line(data_hour)","d7f65e5b":"# Otetaan pois tuntikeskiarvot, jonka laskemisessa on ollut v\u00e4hemm\u00e4nn kuin 45 minuuttiarvoa:\ndata_count_requirement = 45 # vaadittava m\u00e4\u00e4r\u00e4 arvoja, ett\u00e4 voidaan laskea keskiarvo\ndata_hourly_count = data.resample('H', label='right').count() # Lasketaan validit minuuttiarvot joka tunnilta\ndata_hour[data_hourly_count < data_count_requirement] = np.nan # Muutetaan tunnit jossa ehto t\u00e4yttyy NaN arvoksi","94e07f89":"# Vuorokausijakauma\n\ndata_diurnal = data.groupby(data.index.time).mean()\n\nplotlyplot_line(data_diurnal)\n","3e533795":"# Vuorokausijakauma vain arkip\u00e4iv\u00e4t\n\ndata_diurnal_workweek = data[data.index.weekday.isin([0,1,2,3,4])]\n\ndata_diurnal_workweek = data_diurnal_workweek.groupby(data_diurnal_workweek.index.time).mean()\n\n\nplotlyplot_line(data_diurnal_workweek)","d72cdd99":"# Vuorokausijakauma vain viikonloput\n\ndata_diurnal_weekend = data[data.index.weekday.isin([5,6])]\n\ndata_diurnal_weekend = data_diurnal_weekend.groupby(data_diurnal_weekend.index.time).mean()\n\n\nplotlyplot_line(data_diurnal_weekend)","0715c276":"# Viikkojakauma\n\ndata_weekly = data.groupby([ data.index.weekday, data.index.time]).mean()\ndata_weekly = data_weekly.reset_index()\n\nfig = plotlyplot_line(data_weekly[data.columns])\n\nfig.update_layout(\n    xaxis = dict(\n        tickmode = 'array',\n        tickvals = [0*1440, 1*1440, 2*1440, 3*1440, 4*1440, 5*1440, 6*1440],\n        ticktext = ['Maanantai', 'Tiistai', 'Keskiviikko', 'Torstai', 'Perjantai', 'Lauantai', 'Sunnuntai']))\n# data_weekly","25e360c2":"# Toiseksi suurin tuntiarvo kuukausittain\n\ndata_2largest = data_hour.resample('M', label='right').apply(lambda x: x.sort_values(ascending=False)[1])\ndata_2largest.index = data_2largest.index.strftime('%Y-%m')\n\n\nplotlyplot_bar(data_2largest)","ea3221e7":"# Vuosi 2020\n\ndata2020 = data.loc['2020-01-01 00:01:00':, :]\n\ndata2020 = data[data.index.year == 2020]\n\n# data_no_hour_8 = data.copy()\n# data_no_hour_8[data_no_hour_8.index.hour == 8] = np.nan\n\n\ndata2020.head()","252d7512":"# Viimeiset 100 arvoa\n\ndataLast100 = data.iloc[-100:, :]\n\ndataLast100 = data.tail(100)\n\ndataLast100","f4e3d340":"filepath_co = '..\/input\/paavaylaco\/paavaylaco.csv'\n\ndata_co = None # Lue CO-data t\u00e4h\u00e4n muuttujaan k\u00e4ytt\u00e4en yll\u00e4 olevaa tiedostopolkua\n\ndata_co","e6b3b8e1":"data_co_hour = None # laske t\u00e4h\u00e4n CO-data tuntikeskiarvoina ja plottaa se kuvaajaan\n\n# plotlyplot_line(data_co_hour)","57ee19bf":"data_co_diurnal = None # CO-datan vuorokausivaihtelu ja kuvaaja","21de8f16":"data_co_monthly = None # Laske ja plottaa CO-datan kuukausikeskiarvot","319c6053":"\n* Nyky\u00e4\u00e4n teen raportteihin kaikki graafit sek\u00e4 osan kartoista kokonaan Pythonilla\n* Olen testaillut dashboard-applikaatioa reaaliaikasten tulosten esittelyyn\n* Olen alustavasti testaillut koneoppimisalgoritmej\u00e4 sensoritulosten kalibrointiin sek\u00e4 tulosten liputtamiseen\n","feb0fdcf":"# Esittelij\u00e4n kokemus aiheesta\n* Aloittalut Pythoni k\u00e4yt\u00f6n vuonna 2017\n* Toistaiseksi viel\u00e4 itseoppinut (En suosittele, kannattaa k\u00e4yd\u00e4 joku peruskurssi)\n* Opiskelu alkoi tarpeesta saada automatisoitua datan haku rajapinnasta 6 eri sensorilta:\n\n![image.png](attachment:image.png)\n","1a105642":"# Datan k\u00e4sittely sek\u00e4 graafien ja karttojen piirto Python-ty\u00f6kaluilla\n\nMiten datan k\u00e4sittely\u00e4 ja raportointia voi tehostaa Python-ohjelmointikielest\u00e4 l\u00f6ytyvill\u00e4 ty\u00f6kaluilla ja tietoa mist\u00e4 n\u00e4iden ty\u00f6kalujen oppimisen voisi aloittaa. Ty\u00f6kalut ovat hy\u00f6dyllisi\u00e4 varsinkin Excel- ja QGIS-tehok\u00e4ytt\u00e4jille. Innoikkaimmat voivat jo aloittaa Pythonin perusteiden opettelun Helsingin yliopiston j\u00e4rjestem\u00e4ll\u00e4 verkkokurssilla osoitteessa https:\/\/ohjelmointi-21.mooc.fi\/.","32f558e1":"# Python?\nPython on 1990-luvulla luotu dynaaminen ohjelmointikieli (nimi on saanut alkunsa Monty Pythonista), jonka luomisen perustana on ollut koodin helppo luettavuus. Python sopii hyvin aloittelijalle mutta on samalla tehokas ty\u00f6kalu \"oikeaan\" k\u00e4ytt\u00f6\u00f6n.\n\nMiksi opetella uusi ty\u00f6kalu, kun Excel ja QGIS on jo keksitty?\n* Datam\u00e4\u00e4r\u00e4t on jo niin isoja, ett\u00e4 Excel alkaa hidastumaan tai datan k\u00e4sittely on hyvin aikaa viev\u00e4\u00e4 (Excel, QGIS)\n* Isojen datam\u00e4\u00e4rien yhdistelyss\u00e4 ja py\u00f6rittelyss\u00e4 ei tule (niin helposti) virheit\u00e4, kun niit\u00e4 ei tarvitse k\u00e4sin kohdistaa\n* Excelin graafity\u00f6kalut eiv\u00e4t riit\u00e4 (kolmas muuttuja hajontakuvaan, Polar-kuvaajat, paljon samanlaisia kuvaajia mutta eri datal\u00e4hde, kuvaajiin haluaa automaattisesti korostaa jotain tietty\u00e4 asiaa efektein tai tekstill\u00e4, kuvaajien interaktiivisuus)\n* Haluaa interaktiivisia karttoja\n* Toiston v\u00e4hent\u00e4minen, esim. kerran tehty visualisointi tai datan k\u00e4sittelytoimenpide on paljon helpompi uudelleen k\u00e4ytt\u00e4\u00e4 toisessa kohteessa\n* Karttatasojen k\u00e4sittelyty\u00f6kalut eiv\u00e4t riit\u00e4 QGIS\n* Datal\u00e4hde ei ole \"perinteinen\" esim. Rajapinnat tai data on jaettu moniin eri tiedostoihin.\n* Haluaa soveltaa tek\u00f6\u00e4lyalgoritmeja k\u00e4yt\u00e4nn\u00f6ss\u00e4.\n* Haluaa automatisoida toistuvia rutiiniteht\u00e4vi\u00e4.","6bad0049":"Kuten yll\u00e4olevista esimerkeist\u00e4 n\u00e4kyy, saa parhaassa tapauksessa hyvin pienell\u00e4 vaivalla suurestakin datam\u00e4\u00e4r\u00e4st\u00e4 muutamalla koodirivill\u00e4 aikaan julkaisukelpoisia kuvaajia ja datan saa hyvin pitk\u00e4lle esik\u00e4sitelty\u00e4.\n\n","41ef452b":"# Datan keskiarvoistaminen","58b30afa":"# Sis\u00e4lt\u00f6:\n* Pythonist\u00e4 yleisesti\n* Esittelij\u00e4 kokemus aiheesta\n* Milloin Pythonia kannattaa harkita\n* Pythonin k\u00e4ytt\u00f6 datatieteiss\u00e4\n* Pythonin hyv\u00e4t ja huonot puolet\n* Workflow Pythonilla\/esimerkkej\u00e4\n* Mist\u00e4 l\u00f6ytyy lis\u00e4tietoa","460909e3":"Python itsess\u00e4\u00e4n sis\u00e4lt\u00e4\u00e4 paljon koodikirjastoja\/ty\u00f6kaluja ohjelmointiin mutta data-analyysiin ja graafien piirt\u00e4miseen tarvitaan ulkopuolisia koodikirjastoja. Perus Python ty\u00f6kaluilla ei pitk\u00e4lle p\u00e4\u00e4se.\n\nT\u00e4rkeimm\u00e4t ulkopuoliset koodikirjastot\/ty\u00f6kalut datatieteiss\u00e4 ovat:\n* Numpy, ty\u00f6kaluja datan k\u00e4sittelyyn\n* Pandas, data k\u00e4sitell\u00e4\u00e4n Excel -taulukon kaltaisissa DataFrame -objekteissa.\n* GeoPandas, Pandas -kirjaston paikkatietoversio\n* Matplotlib, graafien piirt\u00e4miseen\n* Seaborn, Matplotlib -kirjastoon p\u00e4\u00e4lle rakennettu ty\u00f6kalu, jolla saa v\u00e4hemm\u00e4ll\u00e4 vaivalla monimutkaisempia Matplotlib -graafeja\n* Plotly, interaktiivisiin graafeihin ja karttoihin\n\n\nNumpy k\u00e4sittelee dataa yksi tai moniulottoisina matriiseina, Pandas rakentuu sen p\u00e4\u00e4lle ja muotoilee ihmissilm\u00e4lle luettavampaan muotoon DataFrame -muotoon, jonka p\u00e4\u00e4lle edelleen GeoPandas tekee GeoDataFramen, jossa on mukana geometria sarake","6581a4cc":"# Datan k\u00e4sittely","e8c0a1c0":"# Datan lukeminen\n\nDatana on p\u00e4\u00e4v\u00e4yl\u00e4sensorien NO2-tulokset aikav\u00e4lill\u00e4 1.4.2019 - 7.12.2020. Data luetaan pandas-kirjaston luomaan Dataframe-muotoon, joka k\u00e4yt\u00e4nn\u00f6ss\u00e4 vastaava kuin Excelin sivu.","82bf7937":"\n## Jupyter notebook\nJupyter on selaimessa toimiva interaktiivinen ty\u00f6kalu Pythonin k\u00e4ytt\u00f6\u00f6n. Jupyteriss\u00e4 voi olla koodi ja tekstisoluja ja jokaisen koodisolun vai ajaa erikseen. Jupyter notebook on n\u00e4pp\u00e4r\u00e4 ty\u00f6v\u00e4line datan tutkimiseen ja graafien\/karttojen piirt\u00e4miseen. T\u00e4m\u00e4 teksti on kirjoitettu tekstisoluun ja solua kaksoisklikkaamassa p\u00e4\u00e4see solua muokkaamaan\n\nJupyter notebookkia p\u00e4\u00e4see kuka tahansa, joka omistaa gmail-tilin k\u00e4ytt\u00e4m\u00e4\u00e4n osoitteessa kaggle.com. Kaggle on Googlen omistama tek\u00f6\u00e4lyn kehitt\u00e4miseen luotu sivusto, josta l\u00f6ytyy paljon opiskelumateriaalia ja sinne voi ladata my\u00f6s omia tiedostoja. \n\nToinen paikka, jossa Jupyter notebookkia p\u00e4\u00e4see k\u00e4ytt\u00e4m\u00e4\u00e4n on my\u00f6s Googlen omistama Colab-palvelu, joka on my\u00f6s ilmainen. \n","3809718c":"# Harjoitus:","46861553":"# Datan valitseminen","8443e22c":"# Python k\u00e4yt\u00f6n etuja ja haittoja\n\n\nPythonin etuja vastaaviin data-analyysi ty\u00f6kaluihin (R ja Matlab):\n*   Python on yleisesti katsottu olevan helppo kieli aloittelijan oppia\n*   T\u00e4ysin ilmainen\n*   Python on noussut suosituimmaksi kieleksi teko\u00e4lyn k\u00e4yt\u00e4nn\u00f6n sovelluksiin, jonka vuoksi, joka kehitt\u00e4\u00e4 kielt\u00e4 edelleen tehokkaammaksi data-analyysi ty\u00f6kaluksi\n\n\nHaasteita ohjelmointikielen k\u00e4yt\u00f6ss\u00e4 data-analyysiss\u00e4:\n* Vaikka Python olisikin helpoin yll\u00e4 olevista ohjelmointikielist\u00e4, on siin\u00e4kin, kuten muissakin kieliss\u00e4 se ensimm\u00e4inen iso kynnys eli t\u00e4ytyy opetellla ensin ohjelmointikielen perusteet ja sen j\u00e4lkeen k\u00e4ytettyjen koodikirjastojen k\u00e4yt\u00f6n perusteet.\n* T\u00e4rkein taito on opettelussa tai k\u00e4yt\u00f6ss\u00e4 on googlen k\u00e4ytt\u00f6\n* Vaatii k\u00e4rsiv\u00e4llisyytt\u00e4 kaikenlaisten yhteensopivuus ongelmien ratkaisemiseksi (ei yleens\u00e4 ongelma perus data-analyysiss\u00e4)\n* L\u00e4hesk\u00e4\u00e4n kaikkeen ei ole juuri sopivaa valmista funktiota\/ty\u00f6kalua vaan halutun asian tekemiseksi joutuu rakentamaan itse ty\u00f6kalun olemassa olevista ty\u00f6kaluista.\n* Hankalinta on yleens\u00e4 saada aikaleimadata siihen muotoon, ett\u00e4 Python osaa tulkita sen aikaleimamuotoiseksi dataksi varsinkin jos aikaleima ei ole koko ajan t\u00e4ysin samassa formaatissa mutta t\u00e4m\u00e4 on yht\u00e4 lailla ongelma kaikessa data-analysoinnissa\n\n\n\n","bd08e3ff":"# Apufunktioita graafien piirt\u00e4miseen"}}