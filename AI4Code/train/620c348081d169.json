{"cell_type":{"2f9b7461":"code","988ae91f":"code","af539f0f":"code","b82ea835":"code","5c705a5c":"code","bbc8d4c0":"code","69920b34":"code","d248c405":"code","cfcd8ae3":"code","1714a4b6":"code","5ecfb631":"code","e1cad6e6":"code","df51b6be":"markdown","b58d1029":"markdown","12455a21":"markdown","14e8746b":"markdown","5696bff8":"markdown","cf24b0d5":"markdown","670692c3":"markdown","1ad390cf":"markdown","0670d5bf":"markdown","9f966083":"markdown","4543b020":"markdown","3b0280b8":"markdown","8e77a6eb":"markdown"},"source":{"2f9b7461":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nfrom sklearn.ensemble import ExtraTreesRegressor\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import train_test_split\n\nimport os\nprint(os.listdir(\"..\/input\"))","988ae91f":"data = pd.read_csv('..\/input\/oasis_longitudinal.csv')\ndata = data.fillna(method='ffill')","af539f0f":"data.head(5)","b82ea835":"print('data shape: ', data.shape)","5c705a5c":"print('DATA COLUMNS: \\n', [col for col in data])\n\nprint('\\nM\/F: Gender',\n     '\\nAge: Age',\n     '\\nEDUC: Education Level',\n     '\\nSES: Socioeconomic Status',\n     '\\nMMSE: Mini Mental State Exam',\n     '\\nCDR: Clinical Dementia Rating',\n     '\\neTIV: Estimated Total Intracranial Volume',\n     '\\nnWBV: Normalize Whole Brain Volume',\n     '\\nASF: Atlas Scaling Factor')","bbc8d4c0":"features = [\"M\/F\",\"Age\",\"EDUC\",\"SES\",\"MMSE\",\"eTIV\",\"nWBV\",\"ASF\"]\nx_data = pd.get_dummies(data[features])\ny_data = data['CDR']","69920b34":"plot_data = data[features + ['CDR']]","d248c405":"plot_data.head(5)","cfcd8ae3":"plt.figure(figsize=(10,8))\n\nsns.heatmap(plot_data.corr(), annot=True, linewidth=.2)","1714a4b6":"x_train, x_test, y_train, y_test = train_test_split(x_data, y_data, test_size=.2, random_state=0)","5ecfb631":"print('X_TRAIN SHAPE: ', x_train.shape)\nprint('X_TEST SHAPE: ', x_test.shape)\nprint('Y_TRAIN SHAPE: ', y_train.shape)\nprint('Y_TEST SHAPE: ', y_test.shape)","e1cad6e6":"etr = ExtraTreesRegressor(random_state=4, n_estimators=100, max_features='sqrt')\n\netr.fit(x_train, y_train)\n\npred = etr.predict(x_test)\n\nprint('Mean Absolute Error: ', round(mean_absolute_error(y_test, pred), 5))\nprint('Score: ', round(etr.score(x_test, y_test), 2) * 100, '%')","df51b6be":"Split data into training and testing sets for both x and y.","b58d1029":"Create data to use for plots.","12455a21":"Create our model. We will use the ExtraTreesRegressor from scikit-learn. We will then print out the mean absolute error and the score of the model.","14e8746b":"Read CSV file.","5696bff8":"Show a correlation between features with a heatmap.","cf24b0d5":"Extract features we want to use, then use one-hot-encoding to replace categorical features with numbers.","670692c3":"Print shape of the data.","1ad390cf":"Show data head.","0670d5bf":"Print shapes of new training and testing sets.","9f966083":"Print out the names of the columsn in the data and then print out what they stand for.","4543b020":"Imports","3b0280b8":"Show head.","8e77a6eb":"Thank you!"}}