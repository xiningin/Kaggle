{"cell_type":{"a37a160d":"code","ac4bed62":"code","62d2eb22":"code","e88a189b":"code","8772a52a":"code","021fba0e":"code","dcfb98bc":"code","ec93aae4":"code","7eaae9d4":"code","9dac1477":"code","dd92aa31":"code","5d48e778":"code","f89ebb4a":"code","735454de":"code","76802696":"code","cc543a86":"code","000f4c29":"code","962cb72a":"code","3c82911a":"code","dd6812f9":"code","5575455e":"code","e89fcb63":"code","b6956b34":"code","9536f151":"code","9c615b5e":"code","fbf7f3bd":"code","346b1ad3":"markdown"},"source":{"a37a160d":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","ac4bed62":"# Read your Data\ndf=pd.read_csv('..\/input\/iris\/Iris.csv')\ndf.head()","62d2eb22":"df.info()","e88a189b":"#Statistic descriptive of Data\ndf.describe()","8772a52a":"df.shape","021fba0e":"df.isnull().sum() # no missing value","dcfb98bc":"#Check Outliers\nplt.boxplot(df[['SepalWidthCm']])","ec93aae4":"df=df.drop(df[df['SepalWidthCm']>4].index)","7eaae9d4":"df=df.drop(df[df['SepalWidthCm']<2.25].index)","9dac1477":"df=df[['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']]","dd92aa31":"#Descriptive analysis\nplt.figure(figsize=(12,5))\nplt.scatter(df['SepalLengthCm'],df['SepalWidthCm'], df['PetalLengthCm'],df['PetalWidthCm'])","5d48e778":"#Use Elbow Method to check the numbers of clusters\n\nfrom sklearn.cluster import KMeans\n\nsum_of_sq_dist ={}\nfor k in range(1,15):\n    km =KMeans(n_clusters=k, init ='k-means++', max_iter =100)\n    km = km.fit(df)\n    sum_of_sq_dist[k]=km.inertia_\n    \n#plot the graph for the sum of square distance values and Number of Clusters\nsns.pointplot(x = list(sum_of_sq_dist.keys()), y = list(sum_of_sq_dist.values()))\nplt.xlabel('Number of Clusters(K)')\nplt.ylabel('Sum of Square Distances')\nplt.title('Elbow Method For Optimal')\nplt.show()","f89ebb4a":"#The best numbers is 3\nkm=KMeans(n_clusters=3)\nkm","735454de":"#Make the prediction\ny_predicted=km.fit_predict(df[['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']])","76802696":"y_predicted","cc543a86":"df['clusters']=y_predicted","000f4c29":"df.head()","962cb72a":"plt.figure(figsize=(12,5))\ndf1=df[df.clusters==0]\ndf2=df[df.clusters==1]\ndf3=df[df.clusters==2]\n\nplt.scatter(df1.SepalLengthCm,df1['PetalLengthCm'],color='green')\nplt.scatter(df2.SepalLengthCm,df2['PetalLengthCm'],color='black')\nplt.scatter(df3.SepalLengthCm,df3['PetalLengthCm'],color='red')\nplt.xlabel('SepalLengthCm')\nplt.ylabel('PetalLengthCm')\nplt.legend()","3c82911a":"#Bring Data on the same Scale\nfrom sklearn.preprocessing import StandardScaler\nscaleobj =StandardScaler()\nScaled_Data =scaleobj.fit(df.drop('clusters',axis=1))","dd6812f9":"scaled_features=scaleobj.transform(df.drop('clusters',axis=1))","5575455e":"#Transform it back to dataframe\ndf=pd.DataFrame(scaled_features,columns=df.columns[:-1])\ndf.head()","e89fcb63":"km=KMeans(n_clusters=3)\nkm","b6956b34":"y_predicted =km.fit_predict(df[['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']])\ny_predicted","9536f151":"df['clusters']=y_predicted","9c615b5e":"#Check the centroid\nkm.cluster_centers_","fbf7f3bd":"plt.figure(figsize=(12,3))\ndf1=df[df.clusters==0]\ndf2=df[df.clusters==1]\ndf3=df[df.clusters==2]\n\nplt.scatter(df1.SepalLengthCm,df1['PetalLengthCm'],color='green')\nplt.scatter(df2.SepalLengthCm,df2['PetalLengthCm'],color='red')\nplt.scatter(df3.SepalLengthCm,df3['PetalLengthCm'],color='black')\nplt.scatter(km.cluster_centers_[:,0],km.cluster_centers_[:,1],color='purple',marker='*',label='centroid')\n\nplt.xlabel('SepalLengthCm')\nplt.ylabel('PetalLengthCm')\nplt.legend()","346b1ad3":"# Classification problem with K-Means"}}