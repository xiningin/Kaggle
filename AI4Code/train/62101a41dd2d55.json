{"cell_type":{"e0b2786f":"code","875a1d6c":"code","d07d4921":"code","b29f3846":"code","05229abb":"code","004be1f4":"code","a2f3fb19":"code","97ae1ccf":"code","5d68dd9e":"code","849f309c":"code","0f804b00":"code","c2c3f742":"code","53665f84":"code","e5cdd348":"code","08c3fdbd":"code","38b0971e":"code","194c0e5e":"code","7c1afb48":"code","5b16975b":"code","e8f3bbd4":"code","f4c9becf":"code","f9c11ecd":"code","93582a4c":"code","b4b7391f":"code","c9442fce":"code","dbd63bd2":"code","2ea8ed43":"code","c5a09e78":"code","f0a240d8":"code","35b0f216":"code","f7951518":"code","c88fcd60":"code","00ff57aa":"code","67a19ec7":"code","eaa1e0ed":"code","7bb3a6d7":"code","7f7f262e":"code","bf8ed64d":"code","2be2a785":"code","94c88a32":"code","c2616e11":"code","8e68174a":"code","242d9932":"code","4f5c0dac":"code","184007b4":"code","78e98e07":"code","20f3efe7":"code","51b95315":"code","3a64337e":"code","738f8892":"code","7ab4012c":"code","d950849e":"code","1aea3c04":"code","10d712a2":"code","31281ec8":"code","2eac3cb4":"code","81533aca":"code","bfc5f29f":"code","4c2a3a1f":"code","a503e9ab":"code","2ae6cedf":"code","afa51b97":"code","d3055b4c":"code","e195840c":"code","775d0376":"code","13fb61fd":"code","e06788b5":"code","1e100739":"code","8e95d257":"code","c26ca9c6":"code","6dc3559f":"code","ad51d384":"code","91aeda28":"code","4d85d797":"code","7fea11c3":"code","229b1b03":"code","5632d9d7":"code","e0ef5749":"markdown","3fc0f97e":"markdown","36bf8a45":"markdown","4d7210f2":"markdown","87db063f":"markdown","3640d7e2":"markdown","67ac9c4a":"markdown","4065a6cb":"markdown","e5326947":"markdown","47a7876b":"markdown","2a941f8d":"markdown","e89b93a8":"markdown","78e98fc5":"markdown","7ea4dd00":"markdown","a6421b34":"markdown","302fb006":"markdown","d2ad0da7":"markdown","89af5877":"markdown","00b9837c":"markdown","5fcdaf55":"markdown","22af2f4d":"markdown","85d84ee4":"markdown","424ec272":"markdown","45634751":"markdown","dc5a7a49":"markdown","28359356":"markdown","dbe646de":"markdown","c994993a":"markdown","ed5cbfec":"markdown","4ffd601d":"markdown","41f61c76":"markdown","90207b3d":"markdown","8d021ece":"markdown","51a190dd":"markdown","77aa3bb3":"markdown","8700e05d":"markdown","490eef16":"markdown","3f0b4946":"markdown","ec13936f":"markdown","c8090cdb":"markdown","fc2ec0dd":"markdown","ee0a673d":"markdown","18f9c129":"markdown","6e6d689e":"markdown","deab0e45":"markdown","b2eec60b":"markdown","8f7f1329":"markdown","473706ea":"markdown","9710f94f":"markdown","efb29ed9":"markdown","7685d89a":"markdown","0fe32010":"markdown"},"source":{"e0b2786f":"# The following is a series of setup and data cleaning\/pre-processing\n!pip install pywaffle wordcloud","875a1d6c":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\nfrom PIL import Image\nfrom pywaffle import Waffle\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n\nimport math\nimport os\n\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","d07d4921":"df = pd.read_csv('\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')\n\ndf.head()","b29f3846":"# Get total row count\ndf.shape[0]","05229abb":"# Dropping the column descriptive row\ndf = df.drop(df.index[0])\n\n# Adding a count column equal to 1 for all rows. This will be useful for later visualizations\ndf['count'] = 1\n\ndf.head()","004be1f4":"# Replacing some long strings with smaller representations\ndf.replace({\"Iran, Islamic Republic of...\" : \"Iran\",\n            \"United States of America\" : \"USA\",\n            \"United Kingdom of Great Britain and Northern Ireland\" : \"UK\",\n            \"Republic of Korea\" : \"Korea\",\n            \"United Arab Emirates\": \"UAE\",\n            \"No formal education past high school\" : \"High school\",\n            \"Some college\/university study without earning a bachelor\u2019s degree\" : \"College\/university without degree\"},\n           inplace=True)","a2f3fb19":"# Renaming single anwser questions\ndf.rename({'Time from Start to Finish (seconds)': 'Time to Complete',\n           'Q1': 'Age Range',\n           'Q2': 'Gender',\n           'Q3': 'Country',\n           'Q4': 'Education',\n           'Q5': 'Role Title',\n           'Q6': 'Years of Programming',\n           'Q8': 'First Language Recommendation',\n           'Q11': 'Computing Platform',\n           'Q13': 'Times Used TPU',\n           'Q15': 'Years of Machine Learning',\n           'Q20': 'Company Size',\n           'Q21': 'Data Science Employees',\n           'Q22': 'Machine Learning Incorporation',\n           'Q24': 'Compensation Range',\n           'Q25': 'Money Spent on Machine Learning',\n           'Q30': 'Big Data Product',\n           'Q32': 'Business Intelligence Tool',\n           'Q38': 'Tool to Analyze Data',\n          },\n          axis='columns', inplace=True)","97ae1ccf":"# Creating a new column, Salary, being an approximate continuous number of the yearly compensation provided in ranges\ncompensation = df['Compensation Range'].str.replace(r'(?:(?!\\d|\\-).)*', '').str.split('-')\ndf['Salary'] = compensation.apply(lambda x: (int(x[0]) + int(x[-1]))\/ 2 if not isinstance(x, float) else x).astype(float)\n\n# Creating a new column, Age, being an approximate continuous number of the age provided in ranges\nage = df['Age Range'].str.replace(r'(?:(?!\\d|\\-).)*', '').str.split('-')\ndf['Age'] = age.apply(lambda x: (int(x[0]) + int(x[-1]))\/ 2 if not isinstance(x, float) else x).astype(int)","5d68dd9e":"# Converting time to complete column to int\ndf = df.astype({\"Time to Complete\": int})","849f309c":"# Removing all responses that took less than 30 seconds or more than 12 hours\ndf = df[ (30 <= df[\"Time to Complete\"]) & (df[\"Time to Complete\"] <= 12*60*60) ]","0f804b00":"# Checking the number of rows after these removals\ndf.shape[0]","c2c3f742":"# Most answered questions\ndf.isna().sum().sort_values().head(20)","53665f84":"def replace_multi_anwser_question(question_num, new_anwsers_list, use_prefix=True):\n    if use_prefix:\n        prefix = \"Use \"\n    else:\n        prefix = \"\"\n    for i, anwser in enumerate(new_anwsers_list):\n        if 'Other' in anwser:\n            df.rename({f'Q{question_num}_OTHER': f'{prefix}{anwser}'}, axis='columns', inplace=True)\n            df[f'{prefix}{anwser}'] = (df[f'{prefix}{anwser}'].notnull()).astype('int')\n            print(f\"Replaced Q{question_num}_OTHER with '{prefix}{anwser}' int column!\")\n        else:\n            df.rename({f'Q{question_num}_Part_{i+1}': f'{prefix}{anwser}'}, axis='columns', inplace=True)\n            df[f'{prefix}{anwser}'] = (df[f'{prefix}{anwser}'].notnull()).astype('int')\n            print(f\"Replaced Q{question_num}_Part_{i+1} with '{prefix}{anwser}' int column!\")","e5cdd348":"languages = ['Python', 'R', 'SQL', 'C', 'C++', 'Java', 'Javascript', 'Julia', 'Swift',\n             'Bash', 'MATLAB', 'None Language', 'Other Language']\nreplace_multi_anwser_question('7', languages)","08c3fdbd":"viz_libs = ['Matplotlib', 'Seaborn', 'Plotly \/ Plotly Express', 'Ggplot \/ ggplot2', 'Shiny',\n            'D3 js', 'Altair', 'Bokeh', 'Geoplotlib', 'Leaflet \/ Folium',\n            'None Viz Library', 'Other Viz Library']\nreplace_multi_anwser_question('14', viz_libs)","38b0971e":"ML_frameworks = ['Scikit-learn', 'TensorFlow', 'Keras', 'PyTorch', 'Fast.ai', 'MXNet', 'Xgboost',\n                 'LightGBM', 'CatBoost', 'Prophet', 'H2O 3', 'Caret', 'Tidymodels', 'JAX',\n                 'None ML Framework', 'Other ML Framework']\nreplace_multi_anwser_question('16', ML_frameworks)","194c0e5e":"big_data_products = ['MySQL', 'PostgreSQL', 'SQLite', 'Oracle Database', 'MongoDB', 'Snowflake',\n                     'IBM Db2', 'Microsoft SQL Server', 'Microsoft Access', 'Microsoft Azure Data Lake Storage',\n                     'Amazon Redshift', 'Amazon Athena', 'Amazon DynamoDB', 'Google Cloud BigQuery', 'Google Cloud SQL',\n                     'Google Cloud Firestore', 'None Big Data Products', 'Other Big Data Products']\nreplace_multi_anwser_question('29_A', ML_frameworks)","7c1afb48":"BI_products = ['Amazon QuickSight', 'Microsoft Power BI', 'Google Data Studio', 'Looker',\n               'Tableau', 'Salesforce', 'Einstein Analytics', 'Qlik', 'Domo', 'TIBCO Spotfire',\n               'Alteryx', 'Sisense', 'SAP Analytics Cloud', 'None BI Products', 'Other BI Products']\nreplace_multi_anwser_question('31_A', BI_products)","5b16975b":"sharing_platforms = ['Plotly Dash', 'Streamlit', 'NBViewer', 'GitHub', 'Personal blog',\n                     'Kaggle', 'Colab', 'Shiny', 'None Sharing Platforms', 'Other Sharing Platforms']\nreplace_multi_anwser_question('36', sharing_platforms)","e8f3bbd4":"courses_platforms = ['Coursera', 'edX', 'Kaggle Learn Courses', 'DataCamp', 'Fast.ai', 'Udacity',\n                     'Udemy', 'LinkedIn Learning', 'Cloud-certification programs (direct from AWS, Azure, GCP, or similar)',\n                     'University Courses (resulting in a university degree)', 'None Courses Platforms', 'Other Courses Platforms']\nreplace_multi_anwser_question('37', courses_platforms)","f4c9becf":"favorite_medias = ['Twitter (data science influencers)', 'Email newsletters (Data Elixir, O\\'Reilly Data & AI, etc)',\n                   'Reddit (r\/machinelearning, etc)', 'Kaggle (notebooks, forums, etc)',\n                   'Course Forums (forums.fast.ai, Coursera forums, etc)',\n                   'YouTube (Kaggle YouTube, Cloud AI Adventures, etc)',\n                   'Podcasts (Chai Time Data Science, O\u2019Reilly Data Show, etc)',\n                   'Blogs (Towards Data Science, Analytics Vidhya, etc)',\n                   'Journal Publications (peer-reviewed journals, conference proceedings, etc)',\n                   'Slack Communities (ods.ai, kagglenoobs, etc)', 'None Favorite Medias', 'Other Favorite Medias']\nreplace_multi_anwser_question('39', favorite_medias)","f9c11ecd":"tasks_at_work = ['Analyze and understand data to influence product or business decisions',\n                 'Build and\/or run the data infrastructure that my business uses for storing, analyzing, and operationalizing data',\n                 'Build prototypes to explore applying machine learning to new areas',\n                 'Build and\/or run a machine learning service that operationally improves my product or workflows',\n                 'Experimentation and iteration to improve existing ML models',\n                 'Do research that advances the state of the art of machine learning',\n                 'None of these activities are an important part of my role at work',\n                 'Other tasks at work']\nreplace_multi_anwser_question('23', tasks_at_work, use_prefix=False)","93582a4c":"# Converting several columns to categorical with order\neducation_level_order = ['High school', 'College\/university without degree', 'Professional degree',\n                         'Bachelor\u2019s degree', 'Master\u2019s degree', 'Doctoral degree']\ncat_dtype = pd.api.types.CategoricalDtype(categories=education_level_order, ordered=True)\ndf.Education = df.Education.astype(cat_dtype)","b4b7391f":"years_programming_order = ['I have never written code', '< 1 years', '1-2 years',\n                         '3-5 years', '5-10 years', '10-20 years', '20+ years']\ncat_dtype = pd.api.types.CategoricalDtype(categories=years_programming_order, ordered=True)\ndf['Years of Programming'] = df['Years of Programming'].astype(cat_dtype)","c9442fce":"age_range_order = ['18-21', '22-24', '25-29','30-34','35-39', '40-44', '45-49', '50-54','55-59','60-69', '70+']\ncat_dtype = pd.api.types.CategoricalDtype(categories=age_range_order, ordered=True)\ndf['Age Range'] = df['Age Range'].astype(cat_dtype)","dbd63bd2":"years_machine_learning_order = ['I do not use machine learning methods', 'Under 1 year', '1-2 years','2-3 years',\n                                '3-4 years', '4-5 years', '5-10 years', '10-20 years', '20 or more years']\ncat_dtype = pd.api.types.CategoricalDtype(categories=years_machine_learning_order, ordered=True)\ndf['Years of Machine Learning'] = df['Years of Machine Learning'].astype(cat_dtype)","2ea8ed43":"company_size_order = ['0-49 employees', '50-249 employees', '250-999 employees', '1000-9,999 employees', '10,000 or more employees']\ncat_dtype = pd.api.types.CategoricalDtype(categories=company_size_order, ordered=True)\ndf['Company Size'] = df['Company Size'].astype(cat_dtype)","c5a09e78":"data_science_employees_order = ['0', '1-2', '3-4', '5-9', '10-14', '15-19', '20+']\ncat_dtype = pd.api.types.CategoricalDtype(categories=data_science_employees_order, ordered=True)\ndf['Data Science Employees'] = df['Data Science Employees'].astype(cat_dtype)","f0a240d8":"df","35b0f216":"fig = px.bar(x=df.groupby('Age Range').size().index, y=df.groupby('Age Range').size().values,\n             title=\"<b>Age Distribution of the Survey Respondents<\/b>\",)\nfig.update_layout(showlegend=False,\n                  title_font_size=20,\n                  yaxis={'title': \"Number of Respondents\",\n                         \"showgrid\":False, \"zeroline\":False,\n                         \"fixedrange\": True},\n                  xaxis={\"title\":\"Age Range\",\n                         \"fixedrange\": True},\n                  plot_bgcolor='#fff')\nfig.update_traces(hovertemplate = \"Age Range: %{x}<br>Respondents: %{y}\")\nfig.add_shape(go.layout.Shape(type=\"rect\", xref=\"paper\", yref=\"paper\",\n                              x0=0.002, x1=3\/11 - 0.001, y0=0, y1=1,\n                              fillcolor=\"green\", opacity=0.5, layer=\"below\",\n                              line={\"width\":3, \"color\":\"DarkGreen\"}))\nfig.add_annotation(\n    x=3\/11, y=0.95,\n    ax=200, ay=10,\n    xref=\"paper\", yref=\"paper\", axref=\"x\", ayref=\"y\",\n    text=f\"<b>{sum(df.groupby('Age Range').size().values[:3]) \/ sum(df.groupby('Age Range').size().values) * 100:0.2f}%<\/b> of all respondents<br> are aged <b>18-29<\/b>\",\n    showarrow=True,\n    font={\n        \"family\":\"Courier New, monospace\",\n        \"size\":16,\n        \"color\":\"#ffffff\"\n        },\n    align=\"center\",\n    arrowhead=2, arrowsize=1, arrowwidth=2, arrowcolor=\"#636363\",\n    bordercolor=\"#c7c7c7\", borderwidth=2, borderpad=4,\n    bgcolor=\"#ff7f0e\", opacity=0.7\n    )\nfig.show()","f7951518":"gender_size = df.groupby('Gender').size().sort_values(ascending=False)\n\nfig = px.bar(x=gender_size.index, y=gender_size.values,\n             color=gender_size.index,\n             title=\"<b>Gender Distribution of the Survey Respondents<\/b>\",\n             text=[str(x*100)[:str(x*100).find(\".\") + 3] + \"%\" for x in gender_size.apply(lambda x: x \/ gender_size.sum()).values]\n            )\nfig.update_traces(hovertemplate = \"<b>%{x}<\/b><br>Respondents: %{y}<extra><\/extra>\")\nfig.update_layout(showlegend=False,\n                  title_font_size=20,\n                  yaxis={'title': \"Number of Respondents\", \"gridcolor\": \"rgb(235,235,235)\",\n                         \"zeroline\":True, \"zerolinecolor\":\"lightgrey\"},\n                  xaxis={\"title\":\"Gender\"},\n                  plot_bgcolor='#fff'\n                 )\n\nfig.show()","c88fcd60":"role_title_size = df.groupby('Role Title').size().sort_values(ascending=False)\n\nfig = px.bar(x=role_title_size.index, y=role_title_size.values,\n             color=role_title_size.values,\n             color_continuous_scale=px.colors.sequential.Blues,\n             title=\"<b>Role Title Distribution of the Survey Respondents<\/b>\",\n             text=[str(x*100)[:str(x*100).find(\".\") + 2] + \"%\" for x in role_title_size.apply(lambda x: x \/ role_title_size.sum()).values]\n            )\nfig.update_traces(hovertemplate = \"<b>%{x}<\/b><br>Respondents: %{y}\")\nfig.update_layout(showlegend=False,\n                  title_font_size=20,\n                  yaxis={\"title\": \"Number of Respondents\", \"gridcolor\": \"rgb(235,235,235)\",\n                         \"zeroline\":True, \"zerolinecolor\":\"lightgrey\"},\n                  xaxis={\"title\":\"Role Title\"},\n                  plot_bgcolor=\"#fff\",\n                  coloraxis={\"showscale\":False}\n                 )\n\nfig.show()","00ff57aa":"countries = df.groupby('Country').size()\ncountries = countries.to_frame()\ncountries.columns = ['Respondents']\ncountries.index.names = ['Country']\ncountries.reset_index(level=0, inplace=True)\ncountries['log(Respondents)'] = np.log(countries['Respondents'])\n\nfig = px.choropleth(countries,\n                    locations=\"Country\",\n                    color=\"log(Respondents)\",\n                    locationmode = 'country names',\n                    hover_data=['Respondents'],\n                    color_continuous_scale='ylgn',\n                    title = '<b>Country Distribution of the Survey Respondents<\/b>',\n                    #hovertemplate=\"%{Country}\"\n                   )\n\nscale_vals = [50, 100, 200, 400, 800, 1600, 3200]\n\nfig.update_layout(title_font_size=20,\n                  margin={\"r\":20, \"l\":30},\n                  coloraxis={#\"showscale\":False,\n                            \"colorbar\":dict(title=\"Number of Respondents\",\n                                            #range=[np.log(50), np.log(6400)],\n                                            titleside=\"top\",\n                                            tickmode=\"array\",\n                                            tickvals=np.log(scale_vals),\n                                            ticktext=scale_vals,\n                                            ticks=\"outside\"\n                                        )}\n                 )\n\nfig.show()","67a19ec7":"!wget https:\/\/cdn4.iconfinder.com\/data\/icons\/small-n-flat\/24\/globe-512.png","eaa1e0ed":"d = dict(((k, v) for k, v in zip(countries[countries.Country != \"Other\"].Country, countries[countries.Country != \"Other\"].Respondents)))\n\nglobe_mask = np.array(Image.open(\"globe-512.png\"))\nglobe_mask[globe_mask == 0] = 255\n\nimage_colors = ImageColorGenerator(globe_mask)\n\nwc_globe = WordCloud(prefer_horizontal=0.75,\n                     background_color=\"white\", \n                     mode=\"RGBA\",\n                     mask=globe_mask)\n\nwc_globe.generate_from_frequencies(d)\n\nwc_globe.recolor(color_func = image_colors)\n\n\n\nglobe_img = Image.fromarray(wc_globe.to_array())\nglobe_mask_img = Image.fromarray(globe_mask)\nnew_img = Image.blend(globe_img, \n                      globe_mask_img, \n                      0.3)\n\nplt.figure(figsize=(10,10))\nplt.imshow(new_img, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","7bb3a6d7":"trace = go.Pie(labels=countries.Country,\n               values=countries.Respondents, \n               title=\"<b>Country Distribution<\/b>\",\n               title_font_size=16,\n               hovertemplate=\"<b>%{label}<\/b><br>Respondents: %{value}<br><i>%{percent}<\/i>\",\n               #hoverinfo='percent+value+label', \n               textinfo='percent',\n               textposition='inside',\n               hole=0.6,\n               showlegend=True,\n               marker=dict(colors=plt.cm.viridis_r(np.linspace(0, 1, 28)),\n                           line=dict(color='#000000',\n                                     width=2),\n                          ),\n               name=\"\"\n              )\nfig=go.Figure(data=[trace])\nfig.update_layout(legend={\"title\":\"<b>Country<\/b><br>\"})\nfig.show()","7f7f262e":"education_size = df.groupby('Education').size()#.sort_values(ascending=False)\n\nfig = px.bar(x=education_size.index, y=education_size.values,\n             color=education_size.index,\n             color_discrete_sequence=px.colors.qualitative.Set3,\n             title=\"<b>Education Distribution of the Survey Respondents<\/b>\",\n             text=[str(x*100)[:str(x*100).find(\".\") + 2] + \"%\" for x in education_size.apply(lambda x: x \/ education_size.sum()).values]\n            )\nfig.update_traces(hovertemplate = \"<b>%{x}<\/b><br>Respondents: %{y}<extra><\/extra>\")\nfig.update_layout(showlegend=False,\n                  title_font_size=20,\n                  yaxis={\"title\": \"Number of Respondents\",\n                         \"zeroline\":False, \"showgrid\":False,\n                         \"fixedrange\": True},\n                  xaxis={\"title\":\"Highest Level of Formal Education\",\n                         \"tickmode\":\"array\", \"tickvals\": [0,1,2,3,4,5],\n                         \"ticktext\":[\"High school\", \"College\/university<br>without degree\", \"Professional degree\",\n                                     \"Bachelor\u2019s degree\", \"Master\u2019s degree\", \"Doctoral degree\"],\n                         \"fixedrange\": True},\n                  plot_bgcolor=\"#fff\",\n                  margin={\"r\":20, \"l\":30},\n                 )\n\nfig.add_shape(go.layout.Shape(type=\"rect\", xref=\"paper\", yref=\"paper\",\n                              x0=3\/6, x1=5\/6, y0=0, y1=1,\n                              fillcolor=\"green\", opacity=0.5, layer=\"below\",\n                              line={\"width\":3, \"color\":\"DarkGreen\"}))\nfig.add_annotation(\n    x=3\/6, y=0.95,\n    ax=-170, ay=20,\n    xref=\"paper\", yref=\"paper\", axref=\"x\", ayref=\"y\",\n    text=f\"<b>{sum(df.groupby('Education').size().values[3:5]) \/ sum(df.groupby('Education').size().values) * 100:0.2f}%<\/b> of all respondents<br>hold a <b>Bachelor's<\/b> or<br><b>Master's<\/b> degree\",\n    showarrow=True,\n    font={\n        \"family\":\"Courier New, monospace\",\n        \"size\":16,\n        \"color\":\"#ffffff\"\n        },\n    align=\"center\",\n    arrowhead=2, arrowsize=1, arrowwidth=2, arrowcolor=\"#636363\",\n    bordercolor=\"#c7c7c7\", borderwidth=2, borderpad=4,\n    bgcolor=\"#ff7f0e\", opacity=0.7\n    )\n\nfig.show()","bf8ed64d":"model_kaggler = df.groupby(['Age Range', 'Gender', 'Role Title', 'Education']).size().sort_values(ascending=False).head(20)\n\nheaderColor = 'royalblue'\nrowEvenColor = 'lavender'\nrowOddColor = 'white'\n\nfig = go.Figure(data=[go.Table(\n  columnwidth = [0.5,1,1.25,1.75,2,2],\n  header=dict(\n    values=[\"<b>Rank<\/b>\"] + [\"<b>\" + x + \"<\/b>\" for x in model_kaggler.index.names] + [\"<b>Respondents Count<\/b>\"],\n    line_color='darkslategray',\n    fill_color=headerColor,\n    align='center',\n    font=dict(color='white', size=12)\n  ),\n  cells=dict(\n    values=np.array([np.array((\"<i>\" + str(i+1) + \"<\/i>\",) + x + (\"<b>\" + str(y) + \"<\/b>\", )) for i, (x, y) in enumerate(zip(model_kaggler.index, model_kaggler.values))]).T,\n    line_color='darkslategray',\n    # 2-D list of colors for alternating rows\n    fill_color = [[rowOddColor,rowEvenColor]*10],\n    align = 'center',\n    font = dict(color = 'darkslategray', size = 11)\n    ))\n])\n\nfig.update_layout(\n    title={\"text\": \"<b>Top 20 Model Kagglers<\/b>\",\n           \"x\": 0.5,\n           \"xanchor\":\"center\",\n           \"font_size\": 22},\n    margin={\"r\":20, \"l\":20})\n\nfig.show()","2be2a785":"df_men = df[df.Gender == \"Man\"]\ndf_women = df[df.Gender == \"Woman\"]\ndf_men_women = pd.concat([df_men, df_women])","94c88a32":"fig = plt.figure(\n    FigureClass=Waffle,\n    plots={\n        '111': {\n            'values': [df_men.shape[0] \/\/ 100, df_women.shape[0] \/\/ 100],\n            'labels': [\"{1} {0}\".format(n[2], n[1]) for n in [[0, df_men.shape[0], 'Men'], [0, df_women.shape[0], 'Women']]],\n            'legend': {'loc': 'lower left', 'bbox_to_anchor': (0.3, -0.18, 0.6, -0.18), 'fontsize': 18,\n                       \"ncol\":2, \"borderaxespad\":0.},\n            #'title': {'label': '# Hangouts Type', 'loc': 'center', 'fontsize':20},\n            'icons': ['male', 'female'], # child, heart, user-friends, male, female, user, user-ninja\n            'font_size' : 35,\n        },\n    },\n    rows=8,\n    colors=['#439CEF', '#FE62A6'], #3E88EF\n    figsize=(14, 8),\n    dpi = 240,\n)","c2616e11":"countries_gender = df.groupby(['Country', 'Gender']).size()\ncountries_gender = countries_gender.to_frame()\ncountries_gender.columns = ['Respondents']\ncountries_gender.reset_index(level=0, inplace=True)\ncountries_gender.reset_index(level=0, inplace=True)\ncountries_gender = countries_gender[countries_gender.Gender != 'Prefer not to say']\ncountries_gender = countries_gender[countries_gender.Gender != 'Prefer to self-describe']\ncountries_gender = countries_gender[countries_gender.Gender != 'Nonbinary']","8e68174a":"# Bar chart with color breakdown in each bar\n\nfig = px.bar(countries_gender, x=\"Country\", y=\"Respondents\", color='Gender',\n            title=\"<b>Respondents Gender Breakdown by Country<\/b>\")\n\nfig.update_layout(\n    title_font_size=20,\n    xaxis={'categoryorder':'total descending'},\n    yaxis={\"gridcolor\": \"rgb(235,235,235)\", \"zeroline\":True, \"zerolinecolor\":\"lightgrey\"},\n    plot_bgcolor=\"#fff\"\n)\n\nfig.show()","242d9932":"sum_per_country = countries_gender.groupby('Country').sum()\ncountries_gender['% of Respondents'] = countries_gender.apply(lambda row: row.Respondents \/ sum_per_country.at[row.Country, \"Respondents\"], axis = 1)\ncountries_woman = countries_gender[countries_gender.Gender == \"Woman\"]\nsorted_countries_by_woman_percentage = countries_woman.sort_values(\"% of Respondents\", ascending=False).Country.to_list()","4f5c0dac":"# Bar chart with color breakdown in each bar\n\nfig = px.bar(countries_gender, x=\"Country\", y=\"% of Respondents\", color='Gender', hover_data=['Respondents'],\n            title=\"<b>Respondents Gender Distribution by Country<\/b>\")\n\nfig.update_layout(title_font_size=20,\n                  xaxis={\"categoryorder\":\"array\", \"categoryarray\":sorted_countries_by_woman_percentage},\n                  yaxis={\"tickformat\":\".1%\", \"range\":[0,1]},\n                  plot_bgcolor=\"#fff\"\n)\nfig.add_annotation(x=0, y=1 - countries_woman['% of Respondents'].mean(), xref=\"paper\",\n                   text=f\"Global Average = {str((countries_woman['% of Respondents'].mean()) * 100)[:4]}%\",\n                   showarrow=False,\n                   xanchor=\"left\",\n                   yanchor=\"bottom\",\n                   bgcolor=\"#ffffff\",\n                   opacity=0.9,\n                   font={\"color\":\"Green\", \"size\":14}\n                  )\nfig.add_shape(type='line',\n              x0=-0.5, y0=1 - countries_woman['% of Respondents'].mean(),\n              x1=countries_woman.shape[0] - 0.5, y1=1 - countries_woman['% of Respondents'].mean(),\n              line={\"color\":'white', \"width\":5},\n              opacity=0.9,\n              xref='x', yref='y'\n             )\n\nfig.add_shape(type='line',\n              x0=-0.5, y0=1 - countries_woman['% of Respondents'].mean(),\n              x1=countries_woman.shape[0] - 0.5, y1=1 - countries_woman['% of Respondents'].mean(),\n              line={\"color\":'Green', \"width\":3},\n              xref='x', yref='y'\n             )\nfig.show()","184007b4":"def plot_gender_distribution(by, sort_by_mean=True, legend_x=0.99, legend_orientation=\"h\"):\n    role_gender = pd.concat([df_men.groupby(by).size().rename(\"Men\"),\n                             df_women.groupby(by).size().rename(\"Women\")],\n                            axis=1)\n    role_gender = role_gender.iloc[:, :].apply(lambda x: x \/ x.sum())\n    \n    if sort_by_mean:\n        xaxis_dict = {\"categoryorder\":\"array\", \"categoryarray\": list((df_women.groupby(by).size() + df_men.groupby(by).size()).sort_values(ascending=False).index)}\n    else:\n        xaxis_dict = {}\n    \n    fig = px.bar(role_gender, barmode=\"group\",\n                title=f\"<b>Distribution of Each Gender by {by}<\/b>\")\n    fig.update_traces(hovertemplate = \"<b>%{fullData.name}<\/b><br>\" + by + \": %{x}<br>% Respondents: %{y}<extra><\/extra>\")\n    fig.update_layout(title_font_size=20,\n                      yaxis={\"title\":\"% of Respondents\", \"tickformat\":\".1%\", \"gridcolor\": \"rgb(235,235,235)\",\n                             \"zeroline\":True, \"zerolinecolor\":\"lightgrey\"},\n                      xaxis = xaxis_dict,\n                      legend={\"yanchor\":\"top\", \"y\":0.97, \"xanchor\":\"right\", \"x\":legend_x, \"title\":\"\", \"orientation\":legend_orientation},\n                      plot_bgcolor=\"#fff\")\n    fig.update_traces(marker_line_color='rgb(55,55,55)',\n                      marker_line_width=1.5, opacity=0.9)\n    fig.show()","78e98e07":"plot_gender_distribution(by=\"Age Range\", sort_by_mean=False)","20f3efe7":"plot_gender_distribution(by=\"Role Title\")","51b95315":"plot_gender_distribution(by=\"Years of Programming\", sort_by_mean=False)","3a64337e":"plot_gender_distribution(by=\"Education\", sort_by_mean=False, legend_orientation=\"v\")","738f8892":"fig = go.Figure()\nfig.add_trace(go.Box(y=df_men[df_men['Role Title'] != \"Student\"].Salary, name=\"Men\", boxmean=True))\nfig.add_trace(go.Box(y=df_women[df_women['Role Title'] != \"Student\"].Salary, name=\"Women\", boxmean=True))\nfig.update_layout(title=\"<b>Yearly Compensation: Men VS Women<\/b>\",\n                  title_font_size=20,\n                  yaxis={\"title\":\"Yearly Compensation (approximate $USD)\",\n                         \"range\":[0,150000], \"tickprefix\":\"$\",\n                         \"gridcolor\": \"rgb(235,235,235)\", \"zeroline\":True, \"zerolinecolor\":\"lightgrey\"},\n                  xaxis={\"title\":\"Gender\"},\n                  showlegend=False,\n                  autosize=False, width=600, height=600,\n                  plot_bgcolor=\"#fff\"\n                 )\nfig.show()","7ab4012c":"def plot_gender_salary_by(by, to_drop=None, sort_by_mean=True, show_bar_plot=True, show_ratio_plot=True, legend_x=0.99):\n    # Initializing dfs\n    salary_women = pd.pivot_table(df_women, values=['Salary'], columns=[by], aggfunc='mean', fill_value=0).T\n    salary_women.columns = salary_women.columns.str.replace('Salary', 'Women')\n    salary_men = pd.pivot_table(df_men, values=['Salary'], columns=[by], aggfunc='mean', fill_value=0).T\n    salary_men.columns = salary_men.columns.str.replace('Salary', 'Men')\n    \n    salary_all = pd.pivot_table(df_men_women, values=['Salary'], columns=[by], aggfunc='mean', fill_value=0).T\n    salary_all.columns = salary_all.columns.str.replace('Salary', 'All')\n    salary_gender = pd.concat([salary_men, salary_women, salary_all], axis=1)\n    if sort_by_mean:\n        salary_gender.sort_values(['All'], ascending=False, inplace=True)\n    all_column = salary_gender['All']\n    salary_gender.drop('All', axis=1, inplace=True)\n    if to_drop is not None:\n        salary_gender.drop(to_drop, axis=0, inplace=True)\n    \n    # Bar Plot\n    if show_bar_plot:\n        fig = px.bar(salary_gender, barmode=\"group\")\n        fig.update_traces(marker_line_color='rgb(55,55,55)',\n                          marker_line_width=1.5, opacity=0.8,\n                          hovertemplate=None)\n        fig.add_trace(go.Scatter(x=salary_gender.index,y=all_column, line={\"color\":\"Green\"}, marker_symbol=\"square\", opacity=0.7, mode='lines+markers', name=\"Average Salary\"))\n        fig.update_layout(margin={\"r\":20, \"l\":30},\n                          plot_bgcolor=\"#fff\",\n                          bargap=0.5,\n                          hovermode=\"x\",\n                          xaxis={\"range\":[-1,salary_gender.shape[0]]},\n                          yaxis={\"title\": \"Yearly Compensation (approximate $USD)\", \"range\":[0, max(salary_gender.Men.max(), salary_gender.Women.max()) * 1.05],\n                                 \"tickprefix\":\"$\",\n                                 \"gridcolor\": \"rgb(235,235,235)\", \"zeroline\":True, \"zerolinecolor\":\"lightgrey\"},\n                          legend={\"yanchor\":\"top\", \"y\":0.97, \"xanchor\":\"right\", \"x\":legend_x, \"title\":\"\",\n                                  \"bordercolor\":\"Black\", \"borderwidth\":2, \"bgcolor\": 'rgba(255,255,255,0.5)'},\n                          title=f\"<b>Compensation Breakdown by {by} and Gender<\/b>\", title_font_size=20\n                         )\n        fig.show()\n    \n    # Ratio Scatter Plot\n    if show_ratio_plot:\n        salary_gender['ratio'] = salary_gender['Men'] \/ salary_gender['Women']\n        salary_gender.sort_values(['ratio'], ascending=False, inplace=True)\n        salary_gender['color'] = salary_gender.apply(lambda row: \"Men earn more\" if row.ratio > 1 else \"Women earn more\", axis=1)\n\n        fig = px.scatter(salary_gender, y='ratio', size='ratio', color='color')\n        fig.add_shape(type='line',\n                      x0=0, y0=1,\n                      x1=salary_gender.shape[0] - 1, y1=1,\n                      line={\"color\":'Green', \"width\":1},\n                      xref='x', yref='y'\n                     )\n        fig.add_annotation(x=0, y=1,\n                           text=\"ratio = 1\",\n                           showarrow=False,\n                           xanchor=\"left\",\n                           yanchor=\"bottom\",\n                           font={\"color\":\"Green\", \"size\":14}\n                          )\n        fig.update_layout(margin={\"r\":20, \"l\":30, \"pad\":50},\n                          xaxis={\"gridcolor\": \"rgb(235,235,235)\"},\n                         yaxis={\"title\":\"Compensation Ratio (Men\/Women)\",\n                         \"gridcolor\": \"rgb(235,235,235)\", \"zeroline\":True, \"zerolinecolor\":\"lightgrey\"},\n                         hovermode=\"x\",\n                          plot_bgcolor=\"#fff\",\n                         legend={\"yanchor\":\"top\", \"y\":0.97, \"xanchor\":\"right\", \"x\":0.99, \"title\":\"\", \"bordercolor\":\"Black\", \"borderwidth\":1, \"bgcolor\": 'rgba(255,255,255,0.5)'},\n                         title=f\"<b>Compensation by Gender Ratio Breakdown by {by}<\/b>\", title_font_size=20)\n        fig.update_traces(marker_line_color='rgb(75,75,75)',\n                          marker_line_width=1.5, opacity=0.9,\n                         hovertemplate=None)\n        fig.show()","d950849e":"plot_gender_salary_by(\"Country\", show_ratio_plot=False)","1aea3c04":"plot_gender_salary_by(\"Country\", show_bar_plot=False)","10d712a2":"plot_gender_salary_by(\"Role Title\", show_ratio_plot=False)","31281ec8":"plot_gender_salary_by(\"Role Title\", show_bar_plot=False)","2eac3cb4":"df_women[df_women[\"Role Title\"] == \"DBA\/Database Engineer\"].Country.value_counts()","81533aca":"df_men[df_men[\"Role Title\"] == \"DBA\/Database Engineer\"].Country.value_counts()","bfc5f29f":"plot_gender_salary_by(\"Education\", show_ratio_plot=False, sort_by_mean=False, legend_x=0.25)","4c2a3a1f":"plot_gender_salary_by(\"Education\", show_bar_plot=False, sort_by_mean=False)","a503e9ab":"def gender_role_title_table(by, value, subplot_titles=(\"\",\"\")):\n    women_category = df_women[df_women[by] == value]['Role Title'].value_counts()\n    men_category = df_men[df_men[by] == value]['Role Title'].value_counts()\n\n    fig = make_subplots(\n        rows=1, cols=2,\n        specs=[[{\"type\": \"table\"}, {\"type\": \"table\"}]],\n        subplot_titles=subplot_titles)\n\n    headerColor = 'royalblue'\n    rowEvenColor = 'lavender'\n    rowOddColor = 'white'\n\n    fig.add_trace(go.Table(\n                  header=dict(\n                    values=[\"<b>Role Title<\/b>\", \"<b>Respondents Count<\/b>\"],\n                    line_color='darkslategray',\n                    fill_color=headerColor,\n                    align='center',\n                    font=dict(color='white', size=12)\n                  ),\n                  cells=dict(\n                    values=np.array([list(women_category.index) + [\"<b>Total<\/b>\"], [\"<b>\" + str(x) + \"<\/b>\" for x in women_category.values] + [\"<b>\" + str(women_category.values.sum()) + \"<\/b>\"]]),\n                    line_color='darkslategray',\n                    # 2-D list of colors for alternating rows\n                    fill_color = [[rowOddColor,rowEvenColor]*10],\n                    align = 'center',\n                    font = dict(color = 'darkslategray', size = 11)\n                    )),\n                 row=1, col=1)\n\n    fig.add_trace(go.Table(\n                  header=dict(\n                    values=[\"<b>Role Title<\/b>\", \"<b>Respondents Count<\/b>\"],\n                    line_color='darkslategray',\n                    fill_color=headerColor,\n                    align='center',\n                    font=dict(color='white', size=12)\n                  ),\n                  cells=dict(\n                    values=np.array([list(men_category.index) + [\"<b>Total<\/b>\"], [\"<b>\" + str(x) + \"<\/b>\" for x in men_category.values] + [\"<b>\" + str(men_category.values.sum()) + \"<\/b>\"]]),\n                    line_color='darkslategray',\n                    # 2-D list of colors for alternating rows\n                    fill_color = [[rowOddColor,rowEvenColor]*10],\n                    align = 'center',\n                    font = dict(color = 'darkslategray', size = 11)\n                    )),\n                 row=1, col=2)\n\n    fig.update_layout(margin={\"b\":0, \"t\":40, \"r\":50, \"l\":50})\n\n    fig.show()","2ae6cedf":"def role_title_table(by, value, subplot_titles=(\"\",)):\n    men_women_category = df_men_women[df_men_women[by] == value]['Role Title'].value_counts()\n\n    fig = make_subplots(\n        rows=1, cols=1,\n        specs=[[{\"type\": \"table\"}]],\n        subplot_titles=subplot_titles)\n\n    headerColor = 'royalblue'\n    rowEvenColor = 'lavender'\n    rowOddColor = 'white'\n\n    fig.add_trace(go.Table(\n                  header=dict(\n                    values=[\"<b>Role Title<\/b>\", \"<b>Respondents Count<\/b>\"],\n                    line_color='darkslategray',\n                    fill_color=headerColor,\n                    align='center',\n                    font=dict(color='white', size=12)\n                  ),\n                  cells=dict(\n                    values=np.array([list(men_women_category.index), [\"<b>\" + str(x) + \"<\/b>\" for x in men_women_category.values]]),\n                    line_color='darkslategray',\n                    # 2-D list of colors for alternating rows\n                    fill_color = [[rowOddColor,rowEvenColor]*10],\n                    align = 'center',\n                    font = dict(color = 'darkslategray', size = 11)\n                    )),\n                 row=1, col=1)\n\n    fig.update_layout(margin={\"b\":0, \"t\":40, \"r\":150, \"l\":150})\n\n    fig.show()","afa51b97":"gender_role_title_table(\"Education\", \"High school\", subplot_titles=(f\"<b>Women with a<br>High School Diploma<\/b>\", f\"<b>Men with a<br>High School Diploma<\/b>\"))","d3055b4c":"plot_gender_salary_by(\"Company Size\", sort_by_mean=False, legend_x=0.25)","e195840c":"plot_gender_salary_by(\"Years of Programming\", sort_by_mean=False, show_ratio_plot=False, legend_x=0.25)","775d0376":"role_title_table(\"Years of Programming\", \"I have never written code\", subplot_titles=(f\"<b>Respondents Who Have Never Written Code<\/b>\",))","13fb61fd":"plot_gender_salary_by(\"Years of Machine Learning\", sort_by_mean=False, show_ratio_plot=False, legend_x=0.25)","e06788b5":"role_title_table(\"Years of Machine Learning\", \"I do not use machine learning methods\",\n                 subplot_titles=(f\"<b>Respondents Who Don't Use Machine Learning Methods<\/b>\", ))","1e100739":"plot_gender_salary_by(\"Data Science Employees\", sort_by_mean=False, show_ratio_plot=False, legend_x=0.25)","8e95d257":"def plot_gender_salary_by(by, to_drop=None, sort_by_mean=True, legend_x=0.99):\n    # Initializing dfs\n    salary_women = pd.pivot_table(df_women, values=['Salary'], columns=[by], aggfunc='mean', fill_value=0).T\n    salary_women.columns = salary_women.columns.str.replace('Salary', 'Women')\n    salary_men = pd.pivot_table(df_men, values=['Salary'], columns=[by], aggfunc='mean', fill_value=0).T\n    salary_men.columns = salary_men.columns.str.replace('Salary', 'Men')\n    \n    # Bar Plot\n    salary_all = pd.pivot_table(df_men_women, values=['Salary'], columns=[by], aggfunc='mean', fill_value=0).T\n    salary_all.columns = salary_all.columns.str.replace('Salary', 'All')\n    salary_gender = pd.concat([salary_men, salary_women, salary_all], axis=1)\n    if sort_by_mean:\n        salary_gender.sort_values(['All'], ascending=False, inplace=True)\n    all_column = salary_gender['All']\n    salary_gender.drop('All', axis=1, inplace=True)\n    if to_drop is not None:\n        salary_gender.drop(to_drop, axis=0, inplace=True)\n    fig = px.bar(salary_gender, barmode=\"group\")\n    fig.update_traces(marker_line_color='rgb(55,55,55)',\n                      marker_line_width=1.5, opacity=0.8,\n                      hovertemplate=None)\n    fig.add_trace(go.Scatter(x=salary_gender.index,y=all_column, line={\"color\":\"Green\"}, marker_symbol=\"square\", opacity=0.7, mode='lines+markers', name=\"Average Salary\"))\n    fig.update_layout(margin={\"r\":20, \"l\":30},\n                      plot_bgcolor=\"#fff\",\n                      bargap=0.5,\n                      hovermode=\"x\",\n                      xaxis={\"range\":[-1,salary_gender.shape[0]],\n                            \"tickmode\":\"array\", \"tickvals\": [0,1,2,3,4,5],\n                             \"ticktext\":['We have well established ML methods<br>(i.e., models in production for more than 2 years)',\n                                         'We recently started using ML methods<br>(i.e., models in production for less than 2 years)',\n                                         'We use ML methods for generating insights<br>(but do not put working models into production)',\n                                         'We are exploring ML methods (and may<br>one day put a model into production)',\n                                         'I do not know',\n                                         'No (we do not use ML methods)',\n                                         ]\n                            },\n                      yaxis={\"title\": \"Yearly Compensation (approximate $USD)\", \"range\":[0, max(salary_gender.Men.max(), salary_gender.Women.max()) * 1.05],\n                             \"tickprefix\":\"$\",\n                            \"gridcolor\": \"rgb(235,235,235)\", \"zeroline\":True, \"zerolinecolor\":\"lightgrey\"},\n                      legend={\"yanchor\":\"top\", \"y\":0.97, \"xanchor\":\"right\", \"x\":legend_x, \"title\":\"\", \"bordercolor\":\"Black\", \"borderwidth\":2, \"bgcolor\": 'rgba(255,255,255,0.5)'},\n                      title=f\"<b>Compensation Breakdown by {by}<br>and Gender<\/b>\", title_font_size=20)\n    fig.show()\n","c26ca9c6":"plot_gender_salary_by(\"Machine Learning Incorporation\")","6dc3559f":"fig = go.Figure()\nfig.add_trace(go.Box(y=df_men[df_men['Role Title'] != \"Student\"].Salary, name=\"Men\", boxmean=True))\nfig.add_trace(go.Box(y=df_women[df_women['Role Title'] != \"Student\"].Salary, name=\"Women\", boxmean=True))\nfig.update_layout(title=\"<b>Yearly Compensation: Men VS Women<\/b>\",\n                  title_font_size=20,\n                  yaxis={\"title\":\"Yearly Compensation (approximate $USD)\",\n                         \"range\":[0,150000], \"tickprefix\":\"$\",\n                         \"gridcolor\": \"rgb(235,235,235)\", \"zeroline\":True, \"zerolinecolor\":\"lightgrey\"},\n                  xaxis={\"title\":\"Gender\"},\n                  showlegend=False,\n                  autosize=False, width=600, height=650,\n                  plot_bgcolor=\"#fff\",\n                  \n                 )\n\n# 100K line\nfig.add_shape(type='line',\n              x0=-0.5, y0=100000,\n              x1=1.5, y1=100000,\n              line={\"color\":'grey', \"width\":2, \"dash\":\"dash\"},\n              xref='x', yref='y',\n              layer=\"above\"\n             )\n# Grey circle for men\nfig.add_shape(type='circle',\n              x0=-0.031, y0=97800,\n              x1=0.031, y1=102200,\n              line_color=\"grey\",\n              fillcolor=\"darkgrey\",\n              opacity=0.7,\n              name=\"H\"\n             )\nfig.add_trace(\n    go.Scatter(\n        x=[\"Men\"],\n        y=[100000], \n        fill=\"toself\",\n        mode='markers',\n        name='',\n        marker={\"color\":\"grey\"},\n        hovertemplate='<i>$100K salary for men<br>is a normal data point<\/i>',\n        hoverlabel={\"bgcolor\":\"#fff\"},\n        opacity=0\n    )\n)\n# Grey circle for women\nfig.add_shape(type='circle',\n              x0=1-0.031, y0=97800,\n              x1=1.031, y1=102200,\n              line_color=\"grey\",\n              fillcolor=\"darkgrey\",\n              opacity=0.7\n             )\nfig.add_trace(\n    go.Scatter(\n        x=[\"Women\"],\n        y=[100000], \n        fill=\"toself\",\n        mode='markers',\n        name='',\n        marker={\"color\":\"grey\"},\n        hovertemplate='<i>$100K salary for women<br>is an <b>outlier<\/b><\/i>',\n        hoverlabel={\"bgcolor\":\"#fff\"},\n        opacity=0\n    )\n)\n# Men mean line\nfig.add_shape(type='line',\n              x0=-0.24, y0=46125,\n              x1=0.74, y1=46125,\n              line={\"color\":'#6f7afa', \"width\":2, \"dash\":\"dot\"},\n              xref='x', yref='y'\n             )\nfig.add_annotation(x=0.5, y=46125,\n                   text=\"46,125$\",\n                   showarrow=False,\n                   xanchor=\"center\",\n                   yanchor=\"bottom\",\n                   font={\"color\":\"#6f7afa\", \"size\":14}\n                  )\n# Women mean line\nfig.add_shape(type='line',\n              x0=0.26, y0=32960,\n              x1=1.24, y1=32960,\n              line={\"color\":'#ee634d', \"width\":2, \"dash\":\"dot\"},\n              xref='x', yref='y'\n             )\nfig.add_annotation(x=0.5, y=32960,\n                   text=\"32,960$\",\n                   showarrow=False,\n                   xanchor=\"center\",\n                   yanchor=\"top\",\n                   font={\"color\":\"#ee634d\", \"size\":14}\n                  )\n# 40% Arrow\nfig.add_annotation(x= 0.38, y= 46125 - 2000,\n                   ax= 0.38, ay= 32960 + 2000,\n                   xref=\"x\", yref=\"y\",\n                   text=\"\",\n                   showarrow=True,\n                   axref = \"x\", ayref='y',\n                   arrowhead = 1, arrowwidth=2.5,\n                   arrowcolor='rgb(75,75,75)'\n                  )\nfig.add_annotation(x=0.51, y=(32960 + 46125) \/\/ 2,\n                   text=\"<b>40%<\/b>\",\n                   showarrow=False,\n                   xanchor=\"center\",\n                   yanchor=\"middle\",\n                   font={\"color\":\"rgb(75,75,75)\", \"size\":16}\n                  )\n\nfig.show()","ad51d384":"count_women = pd.pivot_table(df_women, values=['Salary'], columns=[\"Country\", \"Role Title\", \"Age Range\", \"Years of Programming\"], aggfunc='count', fill_value=0).T\ncount_men = pd.pivot_table(df_men, values=['Salary'], columns=[\"Country\", \"Role Title\", \"Age Range\", \"Years of Programming\"], aggfunc='count', fill_value=0).T\n\ncount_women.index = count_women.index.to_flat_index()\ncount_women.index = [\" \".join([str(y) for y in x]) for x in count_women.index]\ncount_men.index = count_men.index.to_flat_index()\ncount_men.index = [\" \".join([str(y) for y in x]) for x in count_men.index]\n\ncount_women.columns = count_women.columns.str.replace('Salary', 'num_women')\ncount_men.columns = count_men.columns.str.replace('Salary', 'num_men')\n\ncount_gender = pd.concat([count_women, count_men], axis=1)\n\nwomen_salary = pd.pivot_table(df_women, values=['Salary'], columns=[\"Country\", \"Role Title\", \"Age Range\", \"Years of Programming\"], aggfunc='mean', fill_value=np.nan).T\nmen_salary = pd.pivot_table(df_men, values=['Salary'], columns=[\"Country\", \"Role Title\", \"Age Range\", \"Years of Programming\"], aggfunc='mean', fill_value=np.nan).T\n\nwomen_salary.index = women_salary.index.to_flat_index()\nwomen_salary.index = [\" \".join([str(y) for y in x]) for x in women_salary.index]\nmen_salary.index = men_salary.index.to_flat_index()\nmen_salary.index = [\" \".join([str(y) for y in x]) for x in men_salary.index]\n\nwomen_salary.columns = women_salary.columns.str.replace('Salary', 'Women Salary')\nmen_salary.columns = men_salary.columns.str.replace('Salary', 'Men Salary')\n\ngender_salary = pd.concat([men_salary, women_salary], axis=1)\n\ngender_salary_count = pd.concat([gender_salary, count_gender], axis=1)\n\nprint(\"Initial Shape:\", gender_salary_count.shape[0])\n\ngender_salary_count.dropna(inplace=True)\n\nprint(\"Shape after removal of NaN:\", gender_salary_count.shape[0])\n\ngender_salary_count = gender_salary_count[(gender_salary_count.num_men > 1) & (gender_salary_count.num_women > 1)]\n\nprint(\"Shape after only keeping rows with atleast 2 occurences of both genders:\", gender_salary_count.shape[0])\n\nprint(gender_salary_count['Men Salary'].mean() \/ gender_salary_count['Women Salary'].mean())\n\ngender_salary_count.head()","91aeda28":"degree_vs_role = pd.pivot_table(df.loc[:, ['Education', 'Role Title']],\n                                index='Education', columns='Role Title', aggfunc='size', fill_value=0)\ndegree_vs_role.drop([\n    'Student',\n    'Currently not employed',\n    'Other'\n], axis=1, inplace=True)","4d85d797":"fig = px.line(degree_vs_role,\n             color_discrete_sequence=px.colors.qualitative.Set3,\n             title=\"<b>Role Title Popularity for each Education Level<\/b>\"\n            )\n\nfig.update_traces(hovertemplate = \"<b>%{fullData.name}<\/b><br>Education: %{x}<br>Respondents: %{y}<extra><\/extra>\")\nfig.update_layout(title_font_size=20,\n                  yaxis={\"title\": \"Number of Respondents\", \"gridcolor\": \"rgb(235,235,235)\",\n                         \"zeroline\":True, \"zerolinecolor\":\"lightgrey\"},\n                  xaxis={\"title\":\"Highest Level of Formal Education\"},\n                  plot_bgcolor=\"#fff\"\n                 )\n\nfig.show()","7fea11c3":"degree_vs_role_percentage = degree_vs_role.iloc[:, :].apply(lambda x: x \/ x.sum())","229b1b03":"fig = px.line(degree_vs_role_percentage,\n             color_discrete_sequence=px.colors.qualitative.Set3,\n             title=\"<b>Role Title Distribution with Respect to Education<\/b>\"\n            )\n\nfig.update_traces(hovertemplate = \"<b>%{fullData.name}<\/b><br>Education: %{x}<br>% Respondents: %{y}<extra><\/extra>\")\nfig.update_layout(title_font_size=20,\n                  yaxis={\"title\": \"% of Respondents Having this Role Title\", \"gridcolor\": \"rgb(235,235,235)\",\n                         \"zeroline\":True, \"zerolinecolor\":\"lightgrey\",\n                         \"tickformat\":\".1%\"},\n                  xaxis={\"title\":\"Highest Level of Formal Education\"},\n                  plot_bgcolor=\"#fff\"\n                 )\n\nfig.show()","5632d9d7":"def color(color, text):\n    s = '$\\color{' + str(color) + '}{' + str(text) + '}$'\n    return s\n\nfig = px.line(degree_vs_role_percentage.cumsum(),\n             color_discrete_sequence=px.colors.qualitative.Set3,\n             title=\"<b>Role Title Distribution with Respect to Education<\/b>\"\n            )\n\nfig.update_traces(hovertemplate = \"<b>%{fullData.name}<\/b><br>Education: %{x}<br>% Respondents: %{y}<extra><\/extra>\")\nfig.add_shape(type='line',\n              x0=4, y0=0,\n              x1=4, y1=1,\n              line={\"color\":'Green', \"width\":3, \"dash\":\"dot\"},\n              xref='x', yref='y',\n              layer=\"below\"\n             )\nfig.update_layout(title_font_size=20,\n                  yaxis={\"title\": \"% of Respondents Having this Role Title\", \"gridcolor\": \"rgb(235,235,235)\",\n                         \"zeroline\":True, \"zerolinecolor\":\"lightgrey\",\n                         \"tickformat\":\".1%\"},\n                  xaxis={\"title\":\"Highest Level of Formal Education\", \"showgrid\": False},\n                  plot_bgcolor=\"#fff\"\n                 )\n\nfig.show()","e0ef5749":"Besides students and other occupations, respondents who don't use machine learning methods work as **Software Engineers** most of the times, followed by **Data Analysts** and **Business Analysts**.\n\n*Apparently there are 22 Machine Learning Engineers that don't use machine learning methods... That's rather interesting! #noiseiseverywhere.*","3fc0f97e":"---\n\nThat's it for this notebook! I really hope that you've enjoyed the ride and it's been worth your precious time!\n\nDon't forget to support me with an up vote if you've learned something new going through this work!\n\nHappy data exploring everyone \ud83c\udf89","36bf8a45":"In this graph we can see the progression of yearly compensations with respect to the years of programming that a given respondent has. Respondents that never wrote code have an average of *\\$24.4K* yearly compensation. With some programming experience however, despite it taking a couple of years to kick off and show benefits, respondents tend to ear more, the more programming experience they have up their sleeves. For instance, respondents having 3-5 years of programming experience showed an average of *\\$34K* yearly compensation, whereas respondents that have been programming for more than 20 years, averaged a peak of *\\$88.1K* yearly compensation.\n \nOnce again, it seems like men tend to earn more than women in every single experience category, albeit having categories with more aggressive ratios.\n\n---\n\nLet's take a small detour and answer an interesting question before we go further: *What do respondents with no programming experience whatsoever work as?*","4d7210f2":"It is absolutely amazing to see such a big diversity when it comes to the countries in which the participants of this survey responded from! In fact, in the map above we are seeing **55 countries** light up! Everyone of those countries is home to at least 50 respondents of the survey, as this is the condition for a given country to be listed in the dataset!\n\nOn the other hand, we had lots of people participating in the survey from other countries that did not meet the 50 respondents criteria to be listed. These participants were grouped in a category called \"Other\". In fact **1332** participants are listed in the \"other\" category!\n\nLet's say in average, there were 25 participants from these anonymous countries, this would make up a total of 55 (the countries visualized above) + 53 (1332\/25) \u2248 108 countries!!\n\nThis makes up for an astonishing country participation in this survey!","87db063f":"Thought we were done here!? Not yet! My enthusiasm for exploring data was still kicking hours before the submission deadline, so I decided to answer a fun question that most of us either asked, are currently asking, or will definitely ask sometime in the future, and that is: What degree do I need to work as a data scientist? What degree do I need to work as a machine learning engineer? Do I need a doctoral degree to work as a research scientist?\n\nLet's find out \ud83d\ude0a","3640d7e2":"![20945496.jpg](attachment:20945496.jpg)\n<center>Photo <a href=\"http:\/\/www.freepik.com\">Designed by Freepik<\/a>.<\/center>","67ac9c4a":"---\n\n**\u26a0 Important Note:** Students in this dataset have NaN salaries, so their presence in the data won't affect any of the numbers calculated below. In other words, women's higher distribution in the student role title will not affect any of the averages shown below. *For more technical folks, pandas disregards NaN values instead of treating them as zeros*.\n\n---\n","4065a6cb":"As expected, the number of men responding to the survey greatly outweighs the number of women. Nearly *80%* of respondents are males, whereas around *20%* of them are females.\nThis reflects the **gender imbalance** in the data science and machine learning community, derived from the tech industry as a whole.","e5326947":"Here we can see a much more interpretable plot!\n\n**Master's degree** seem to reap the most benefit for most role titles. In fact, *95%* of **Business Analysts** and **Data Analysts** hold a Master's or a smaller degree. This number remain as high as *90.5%* for **Data Engineers** and *86%* and *83%* respectively for both **Machine Learning Engineers** and **Data Scientists**.\n\nA **Doctoral degree** however seem to only benefit people looking to work either as *Research scientists* or *statisticians*. Looking at the graph above, it looks like less than half of **Research Scientists** hold a master's or a lower degree, with this number falling down to *11.5%* when it comes to respondents with a bachelor's or lower degree.","47a7876b":"## Model Kaggler","2a941f8d":"# Gender Pay Gap - A Myth Or A Reality?","e89b93a8":"In the search of the country distribution of each gender, it is to be expected that a higher number of women participated in the survey from countries than had an overall bigger participation in the survey. For instance, *1253*, or *33.5%* of women respondents are from **India** and *465*, or *12.5%* of women respondents are from the **USA**.\n\nHowever, instead of absolute total numbers, what would be more interesting is the **distribution** of women and men by country. That is, which country has the highest percentage of women participation and which country has the highest percentage of men participation. For that, let's move to the next graph!","78e98fc5":"With a global average of **19.4%** women participation throughout all countries, let's take a look at countries from both sides of the balance.\n\n**Malaysia** leads the bunch here with a record *40%* women participation in the survey! It is closely followed by **Iran** and **Tunisia** with *36.3%* and *35.5%* women participation respectively.\n\nThe **UK**, the **UAE** and **South Africa** hit the exact average women participation.\n\nOn the other side of the spectrum, **Chile**, **Korea** and **Japan** secure the bottom 3 scores for women participation, scoring *8.6%*, *7.1%* and *6.8%* respectively.\n\nIt is also worth noting that not a single country had more women participate than men. Thus, this gender imbalance seems to be unanimously global, and not regional.\n\n---\n\nMoving forward, let's study each gender's distribution over various features, starting off with the age range distribution!","7ea4dd00":"This boxplot was indeed correct:\n* Whereas 50% of men have a yearly salary that is at most *\\$22.5K*, this number **drops** to *\\$8.8K* for women.\n* Whereas a *\\$100K* yearly salary is \"normal\", per se, for men (being a mere data point in the 4th, or top 25%, quantile for men), this same salary is considered an **outlier** for women.\n* Whereas the top 25% quantile of men earn anywhere between *\\$65K* and *\\$137.5K*, this range **drops** to become between *\\$44.5K* and *\\$95K* for the top 25% quantile of women.\n* Whereas in average men earn *\\$46.1K*, women in average earn *\\$33K*, making for an overall compensation ratio of **1.4x**.\n\nThe reasons for this saddening outcome are outside of the scope of this notebook. As for the solutions, there are a ton of them, and all of us can help in removing such an unhealthy disparity.\n1. **Transparency over pay**: Being open about how a given company calculates salaries based on roles and qualifications (only) is a crucial factor, not just in reducing potential gender pay gaps, but rather as a general means to give more power back to the employees and ensure a fair and healthy workplace for everyone. We as a community should normalize making promotions and pay rises transparent. One additional factor here is the generally higher rate of agreeableness in women. This leads to having men being more comfortable in salaries negotiations, which in turns lead to higher salaries for men. \n2. **Compassion towards maternity leave**: This really goes in both directions. First off, women suffer a lot from maternity leaves, both health and career wise. Quoting [zenefits](https:\/\/www.zenefits.com\/workest\/how-maternity-leave-works-the-employers-guide\/#:~:text=While%2070%25%20of%20women%20report,the%20birth%20of%20their%20child.), *\\\"While 70% of women report taking some time off after a birth, 16% report they take only 1 to 4 weeks; about half take at least 5 weeks of leave and 25% take nine weeks or longer. The remaining one-third of mothers don\u2019t take any time off, returning to work almost immediately after the birth of their child.\\\"*. Of course, should they have the option, women would take longer maternity leaves, but given the excessive stress of losing their jobs and the non-existent compassion in many companies around the world, they end up taking a huge hit on their health and career paths. Secondly, men should be encouraged to take paternity leaves, as they are fathers as women are mothers. This would balance the scale when it comes to parental leave for all employees, and would relieve a lot of stress from women taking care of their children by themselves.\n3. **Encourage remote working**: While Covid-19 has already contributed greatly towards moving in this direction, more efforts should be put into it. Benefiting from flexible hours would tremendously benefit women in their quest of balancing both household\/childcare responsibilities and a healthy career\/income. *If we, as data scientists don't encourage such a culture first, who will do it?*\n\n---\n\n*And if you're still somewhat unconvinced (like I was), thinking that only working with one variable at a time is not sufficient and that a multivariate study would lead to probably different results (for example, this means that one should study the difference between men and women when they are from the same country, have the same age and work the same job for example), well... you're wrong. You see, this kind of study would prove beneficial if men earned more than women in **most** of the cases, but not **all of them**. However, and as we've seen with countless visualizations, men are earning more than women in every single mentionable regard! The number of conditions in which women earn more than men can be counted on one hand, and one might even consider them **exceptions**. In all cases, and for you who won't be convinced unless you see hard numbers (kudos!), please feel free to expand the code block right underneath this one to check out a simple multivariate study I did, taking into account the country, the age range, the role title and the years of programming experience all at the same time, and yet the resulting gender compensation ratio came out at **1.33x**.*","a6421b34":"Visualizing the previous result was really shocking. Why is there such a big difference in salaries between men and women? Is it because of the country distribution, age distribution, role title distribution, etc.?\n\nIn this section of the notebook, we will be answering a plethora of questions that will focus on breaking down salaries for both genders by various features, such as the ones mentioned previously, in the quest of interpreting the above boxplot.\n\nSo, let's put our detective hats on and dive into the data \ud83d\udd75\ufe0f\u200d\u2640\ufe0f\ud83d\udd75\ufe0f\u200d\u2642\ufe0f.","302fb006":"Before jumping into the core questions of this adventure, let's take a moment to understand the distribution of the data we will be working with. Understanding the distribution of the participants in this survey will prove to be very beneficial when working our heads around various results later in the notebook.\n\nSo, let's answer the following questions:\n* What's the age distribution of the survey participants?\n* What's the gender distribution of the survey participants?\n* What role titles do the participants hold?\n* Where are the participants from?\n* What's the profile of a model Kaggle user?","d2ad0da7":"We can observe above a graph that plots the distribution of each gender by age group. This means that each bar in the graph represents a chunk, or a percentage, of its overall gender class (i.e, not from the overall population nor from the x axis population). For instance, the first 2 bars on the chart can be interpreted as follows: *16.6% of men are aged 18-21* and *20.7% of women are aged 18-21*. Keep this in mind while going through the rest of the graphs on this section!\n \nAnalyzing this graph, we can notice that the women's distribution is more skewed towards the right (younger ages), in contrast with the men's distribution that is more evenly distributed over older ages.\n\nThe men's demographic reflects their longer participation and involvement in the field throughout the past decades. Nevertheless, the women's demographic promises high hopes for a more gender-balanced future in the field of data science, as more and more young women are getting encouraged to partake in this amazing field!","89af5877":"Moving on to the yearly compensation broken down by the role title, **Product\/Project Managers** seem to earn the most, with an average of *\\$61K* yearly compensation! **Data Scientists** and **Data Engineers** are right next with *\\$54K* and *\\$49K* respectively, moving all the way down to **Data Analysts** scoring an average of *\/$28.8K* yearly compensation.\n\nShifting our focus to the difference of salaries between men and women, here it is unanimous! Every single role title seems to favor men when it comes to compensation. Let's further assert the degree of this favoritism in a *compensation ratio plot*.","00b9837c":"Participation from **high school students** is very minimal with *1.2%*. This goes to reflect the novelty of this field and its unmature integration in high schools.\n\n*3.6%* of respondents hold **professional degrees** whereas *5.6%* **don't hold any**. This ~10% of the population most probably are self-taught data scientists with reliance on online content and courses.\n\nA staggering figure however is that *more than three quarters* of respondents hold, or plan to hold within 2 years, a **Bachelor's or Master's degree**! This means that the majority of data scientists chose the university pathway in order to forge their skills in this field, and consequently work in it.\n\nFinally, *12%* of the respondents took the extra mile to complete a PhD program earning a **Doctoral degree**.","5fcdaf55":"# 1. Introduction: Who Answered The Survey? <a class=\"anchor\" id=\"head-1\"><\/a>","22af2f4d":"![7396.jpg](attachment:7396.jpg)\n<center>Photo <a href=\"http:\/\/www.freepik.com\">Designed by Freepik<\/a>.<\/center>","85d84ee4":"First, let's investigate the difference in the average yearly compensation between men and women by country, as this could be one of the most affecting factors, given that the gender distribution by country is fairly variable.\n\nIn the bar chart above, and following the average salary line, respondents from the **USA** and **Switzerland** seem to earn the most with an average of *\\$120k* yearly compensation. Respondents from **India** in contrast earn less than *15\\%* of this figure, averaging at a *\\$17.7K* yearly compensation. At the bottom, we have **Iran** and **Bangladesh** with average yearly compensations of *\\$5.5K* and *\\$4.5k* respectively.\n\nWith the average salary out of the way, it is clear that **in most countries, men earn more than women**. Let's quantify this difference and rank countries based on their difference in salaries between men and women.","424ec272":"Most respondents that have no programming experience are still **students** (*279*). After which there are *200* respondents that work **other jobs** and *158* are **currently not employed**. When it comes to data-related roles, **Business Analysts** are the most common respondents with *93* respondents having no prior coding experience, followed by **Data Analysts** with *89* respondents. These are roles that can be achieved without any kind of programming by using *Business Intelligence* tools such as *Tableau* and *Microsoft Power BI* to take care of all the data-related tasks!","45634751":"Here we can see the most popular role title for each education level!\n\n**Software Engineer** seems to be the most popular role title for holders of *High school*, *No degree*, *Professional degree* and *Bachelor's degree*.\n\n**Data Scientist** is a role that gains lots of popularity going from a *Professional degree* to a *Bachelor's degree*, and then gains extreme popularity and peaks out at the *Master's degree* level!\n\nAs Expected, **Research Scientist** is the most popular role title for *PhD holders*.","dc5a7a49":"![4023063.jpg](attachment:4023063.jpg)\n<center>Photo <a href=\"http:\/\/www.freepik.com\">Designed by Freepik<\/a>.<\/center>","28359356":"The above chart plots the compensation ratio between men and women for each country, that is: *Men_Yearly_Compensation \/ Women_Yearly_Compensation*. For instance, **Nepal** holds the highest ratio by far of *27x*, meaning that men respondents from Nepal earn a staggering **27 times more** than women respondents from Nepal do. **Sri Lanka** and **Ghana** are up next with ratios of *12.9x* and *10.1x* respectively. This ratio drops at *5.4x* for **Colombia** and continue its gradual fall until reaching *2.1x* for **Philippines**, making up for a total of **25 countries where Men earn more than 2 times of what Women earn in the same country**.\n\nThe **Netherlands**, **Malaysia**, **Switzerland**, **Viet Nam** and **Australia** are the countries approaching the most the **ratio 1**, meaning that men and women earn relatively the same amount in these countries.\n\nCountries such as **Portugal**, **Taiwan**, **Belarus**, **Greece**, **Iran** and **Nigeria** showed an unpopular trait, that is of a ratio below *0.9x*. Meaning that women respondents from these countries earn more than men respondents from the same countries. **Nigeria** is the country in which women earn the most, when compared to men in the same country, with a ratio of *0.42x*. The latter number can be interpreted as follows: Women earn *1\/0.42 = 2.38* times more than Men.\n\nI don't know about you, but things are starting to look kind of fishy for me.","dbe646de":"Now, moving to a more interesting graph, above we can see the distribution of each role title among the available education levels.\n\nLet's further enhance our visualization by plotting the cumulative sum of this graph next!","c994993a":"# 3. Men VS Women: A Deeper Dive Into The Pay Gap Theory <a class=\"anchor\" id=\"head-3\"><\/a>","ed5cbfec":"---\n\n**\u26a0 WARNING:** Keep in mind while going through this notebook that 19K+ kagglers responded to this survey. Despite it looking like a big number, no \"certain\" conclusion can be inferred from this data. That being said, this study will serve as a preliminary exploration of possible inferences that could be further studied on larger scale samples in order for them to be statistically more powerful and therefore asserted.\n\n---","4ffd601d":"### Data Cleaning and Pre-Processing","41f61c76":"As observed above, men earn more than women in every category of role title.\n\n**DBA\/Database Engineer** seems to be the most discriminating category with a ratio of *3.7x*. However, further investigation of the data shows that this is mostly due to the fact that men working as Database engineers mostly work in higher income countries (such as the USA), whereas women working as Database engineers mostly work in lower income countries (such as India).\n\nThat being said, other role titles have ratios ranging between *1.8x* and *1.2x*, with the exception of **Data Analyst**, **Product\/Project Manager** and **Data Engineer** that have ratios very close to 1.","90207b3d":"---\n\nFinally, it's time to move to the more interesting topic. Next, let's visualize the distribution of salaries, or yearly compensations, for both men and women and compare them \ud83d\udcb5.","8d021ece":"When it comes to education, both men and women seem to have a very similar distribution. A slight difference however still shows up.\n\nFrom the above graph, it seems that men sightly opt for shorter education periods, having a bigger representation in classes such as **High school** abd **Bachelor's degree**, whereas women tend to opt for longer education periods, having a bigger representation in classes such as **Master's degree** and **Doctoral degree**.","51a190dd":"# 2. Men and Women: The Representation <a class=\"anchor\" id=\"head-2\"><\/a>","77aa3bb3":"*~80%* of respondents are men, meaning **1 in 5 respondents is a women**!\n\n---\n\nNow that we have a general understanding of the participants in this survey, let's look into the various distributions of men and women along various features in this data. Will they share similar distributions despite an imbalanced distribution?\n\nDo men and women have the same age distribution? Do they work similar jobs? Do they come from the same countries? Let's answer all of these questions and more below!","8700e05d":"Starting off with the age distribution of the survey participants, we can observe a steady increase in the number of participants going up in age from 18 to 29, reaching its maximum value of *3871* respondents for the age group **25-29**. This is followed by a consistently downwards trend for older ages, reaching a low of *74* respondents aged **70+**.\n\nIt is clear that the survey participants profiles were dominated by younger people, in fact, **56%** of participants are aged between **18 and 29**. Those are people that are generally getting into university (18-21), finishing up their bachelors\/masters (22-24) and starting off their careers with their first jobs (25-29).\n\nGiven that Kaggle is [10 years of age](https:\/\/en.wikipedia.org\/wiki\/Kaggle#:~:text=Kaggle%20got%20its%20start%20in,Anthony%20Goldbloom%20and%20Jeremy%20Howard.), seeing such a marginal dominance of younger people really holds high hopes for the future of the platform!","490eef16":"---\nHold on for a second \ud83e\udd1a.\n\n\nDid you notice something?\n\nIt's almost as if we got acquainted with the idea that men earn more than women throughout this notebook, that it doesn't even shock us anymore. Going from a detailed breakdown of the gender compensation ratios by country in the first graphs of this section, to not even mentioning it in the last 2 graphs, it felt kind of \"normal\" or \"expected\" at the latter point.\n\nNo matter how we turn this around, **men earn more than women**. Either be it by country, by education level, by years of programming or machine learning experience, by role title, by company size, **you name it!** Every single breakdown of salaries by gender led to the same conclusion: **men earn more than women**. It was only with big numbers of sub-categories, such as in countries or years of machine learning experience, that under certain conditions, *sometimes*, women would earn more than men. It almost feels like willingly searching for an exception to find one.\n\nThe boxplot which we've ended the second section of this notebook with, was indeed a *valid one*. Every kind of analysis we undertook throughout this section showed traces of this boxplot, so let's visualize it one more time:","3f0b4946":"Here again, men seem to earn more than women in every single category. A downwards trend of the compensation ratio is experienced however when going up in the education levels, nevertheless, this ratio remains as big as *1.35x* even at doctoral levels.\n\nThat being said, one data point clearly stands out from the rest, and that's the compensation ratio for **High school** diploma holders, going as far as *23.5x*! Let's take a look at the tables below to further understand the reasons behind this outlier.","ec13936f":"From the graph above, we can clearly notice that the more data science employees a company has, the higher are the salaries of its employees! This consequently means that a company's revenue can be somewhat estimated by its number of data science employees.\n\nIt is also interesting to distinguish that the most considerable monetary gains for a given company occur when going from **0** to **1-2** data science employees, and from **15-19** to **20+** data science employees!","c8090cdb":"One other interesting relationship to study is the effect of the company size on the average salaries of its employees. Looking at the bar chart above, there is a clear positive correlation between the size of a company and the average salaries of its employees! Actually, the average yearly remuneration goes up from *\\$29.1K* for companies with 0-49 employees, all the way to *\\$61.5K* for companies with 10,000+ employees.\n\nShifting our focus to the compensation ratio plot below it, we can observe a higher rate of salary discrimination by gender in small sized companies (with 0-49 employees) with a compensation ratio of *1.8x*. All other company sizes seem to have an average compensation ratio of *1.28x*.","fc2ec0dd":"Given the previously visualized age distribution showing a high number of respondents aged between 18 and 24, it's not surprising to see that *more than one quarter* of the survey respondents are **students**! Following this mode class, *1\/8th* of the respondents are **data scientists** and *1\/10th* are **software engineers**. The rarest job titles among the survey respondents were **data engineers**, **statisticians** and **DBA\/database engineers**, representing *2.2%*, *1.5%* and *0.6%* of the survey respondents respectively.\n\nIt is also interesting to notice the 8.6% participation of currently not employed kagglers, who are probably trying to harness this platform's potential in order to increase their chances of landing a data job!","ee0a673d":"There's a clear difference here! With the average salary for men being **\\$46K**, this average falls down to **\\$33K** for women: **30% less** than men!\n\nCould all of this be explained by the above-observed distributions disparity?\n\nIt's time to dig deeper!","18f9c129":"If you go to any tech company right now to meet their tech department, you're about to open the door, and I stop you for a second and ask you: There are 20 employees behind this door, can you take a guess as to how many of them are women? You'd probably say 4 to 6, right? or even lower numbers. 4-6 is actually not a bad guess given that women hold only [26%](https:\/\/techjury.net\/blog\/women-in-technology-statistics\/#gref) of computing jobs, a figure that has been on the [decline](https:\/\/www.ncwit.org\/sites\/default\/files\/resources\/womenintech_facts_fullreport_05132016.pdf) for the past several years. The reasons for such an outcome are diverse and complexe, going from education (with only [18%](https:\/\/www.ncwit.org\/infographic\/3435) of undergraduate computer science degrees being held by women) to the [\"bro-culture\"](https:\/\/www.breathehr.com\/en-gb\/blog\/topic\/company-culture\/bro-culture-and-why-its-an-issue-for-startups) engraved in many tech companies.\n\nHowever, setting aside the gender distribution in the tech field, are men and women really that different? More interestingly, are there any differences when it comes to salaries and compensations?\n\nYou've surely heard of the famous [for every dollar a man makes](https:\/\/www.businessinsider.com\/gender-wage-pay-gap-charts-2017-3#major-cities-show-an-even-bigger-discrepancy-2) propaganda that has been going for several years now, but didn't really give it a second thought. In fact, and according to [Pew Research Center](https:\/\/www.pewsocialtrends.org\/2018\/01\/09\/women-in-stem-see-more-gender-disparities-at-work-especially-those-in-computer-jobs-majority-male-workplaces\/), *\\\"Women in STEM see more gender disparities at work, especially those in computer jobs, majority-male workplaces\\\"*, and that for computing fields, women earn 87% of what men earn. So, do all these reports and numbers hold true in the data science and machine learning community on Kaggle? Buckle up your seatbelts and get ready to dive into a data-driven adventure, empowered by the [2020 Kaggle Machine Learning & Data Science Survey](https:\/\/www.kaggle.com\/c\/kaggle-survey-2020) dataset in the quest of asserting the validity or invalidity of a gender pay gap within our beloved community.\n\n### **Table of Content:**\n\n1. [Introduction: Who Answered The Survey?](#head-1)\n2. [Men and Women: The Representation](#head-2)\n3. [Men VS Women: A Deeper Dive Into The Pay Gap Theory](#head-3)\n  \nAppendix:\n * [Bonus: What Degree do I Need to Work as ... ?](#head-4)","6e6d689e":"Combining together all of the previously explored respondents characteristics, let's build up a list of the top 20 model kagglers! In other words, what is the profile of a typical kaggler?\n\nBy far the most typical kaggler profile is **a young man, aged 18-21, who's still a student and planning to hold a Bachelor's degree within 2 years**. *1303*, or *~7%* of respondents share this profile! Following up is the exact same profile a couple of years later, **having 22-24 years old and pursuing a Master's degree**.\n\nThe first appearance of women replicates the first appearance of men in the table. That is in the *4th* place, with *396* **young women, aged 18-21, and studying to earn a Bachelor's degree within 2 years**.\n\nThe first occurence of non-students in the table is at position *5* and *7*, with **male data scientists holding a Master's degree, that are 25-29 and 30-34 years of age respectively**. \n\nAlso, note that I excluded from this table the Country, as all rows will be populated with Indian Kagglers, due to their extremely high participation rate in the survey!\n\n-------------------------------------------------------------\n\nDespite a much smaller representation, and with only 2 occurrences in the above table, women seem to follow a similar distribution to men given that these 2 occurrences are identical to the first 2 occurrences of men in the table. Is this similar distribution consistent throughout all the other features? Let's find out!","deab0e45":"Indian Kagglers leads the board here, with almost *one third* of respondents being from **India** ! That is *5704* Kagglers!\n\nIn the 2nd place, we have the **USA** with *2162* respondents making up *11.2%* of the respondents.\n\nAfter these two dominating countries, other countries' representation falls off on a smooth curve going from *671* respondents from **Brazil** all the way to *51* respondents from **Ghana**.","b2eec60b":"Similarly to the previous graph, here we can spot a positive correlation between the incorporation of machine learning methods in companies, and their employees earning higher salaries!\n\nThe most benefits by far are observed for companies that go from their first machine learning deployments (less than 2 years of exposure in this market) to deploying machine learning models in production for more than 2 years!","8f7f1329":"# Bonus: What Degree do I Need to Work as ... ? <a class=\"anchor\" id=\"head-4\"><\/a>","473706ea":"When it comes to the Education level, the average salary seems to go up from **High school** to **College\/University without degree** up to **Professional degree**, reaching *\\$38.1K* at the latter. It then experiences a slight drop for **Bachelor's degree** holders, but jumps right back up for folks sticking longer in universities earning **Master's** and **Doctoral** degrees, scoring an average of *\\$47K* and *\\$63.5K* yearly compensations respectively!","9710f94f":"Now, plotting the distribution of each gender by their role title, we can clearly observe the effect of the previous visualization here! Having a younger overall profile, **one third** of women are students, in contrast to only **one quarter** of men being students.\n\n**Software Engineer**, **Machine Learning Engineer** and **Product\/Project Manager** seem to be roles more appealing to men.\n\nWhereas **Data Analyst**, **Research Scientist** and **Statistician** seems to be more popular options for women.","efb29ed9":"Now, plotting the relationship between years of machine learning experience and salary, we can observe a very similar pattern to the one observed when plotting the relationship between years of programming experience and salary.\n\nRespondents who don't use machine learning methods have an average yearly compensation of *\\$38K*. As with the programming experience, it takes a couple of years of machine learning experience for it to kick off and start showing considerable gains in salaries, reaching an astonishing *\\$125K* yearly remuneration for respondents with more than 20 years of experience using machine learning methods!\n\nIt is also interesting to point out that a data scientist with 5-10 years of experience in machine learning earns more (*\\$93.7K*) than a data scientist with 20+ years of experience in programming as a whole (*\\$88.1K*). Thus, one can conclude that **machine learning experience is more valuable than programming experience**.\n\nOh and yeah, men earn more than women in all categories, except one tiny exception.\n\n---\n\nLet's take one more detour to answer a similar question to the one we asked previously: *What do respondents who don't use machine learning methods work as?*","7685d89a":"On the left we can see a table of all women respondents holding, or planning to hold a High school diploma within 2 years, and on the right we have the same table for men. The first thing to stand out is the much bigger number of men in this category. Only **13 women** participating in this survey chose High school as their education level, whereas **200 men** choose this option in the survey!\n\nFurther analyzing the numbers in the men's table, 2 main reasons arise:\n1. **Men are more likely to get into this field at younger ages**: This can be clearly observed with the 57 participants describing themselves as *students* while in high school, meaning that they are still undergoing studies in high school and are interested in data science at a young age. This can be attributed to a large number of factors, from which: *parents tend to encourage young men to undergo such career paths more than they do with young women*, and *young boys tend to play more video games on their laptops, grating them more exposure to the internet as a whole, which in turn facilitates their transition into such a field, should there be such a transition*.\n2. **Men are more likely to stop their education early on and start working as soon as possible**: This is distinctively showcased in the table above with the 143 *non-student* respondents that chose high school as their highest education level achieved. The majority of these respondents work in various sectors of this field, going from the most common role title of **Software Engineer** with 28 respondents, all the way to the **Product\/Project Manager** role title, which conventionally takes years of experience before reaching!","0fe32010":"The age distribution shows its mark once again here, with a more left-skewed distribution for women when it comes to the participants' programming experience. Meaning that women tend to have less programming experience than men do.\n\nMost respondents seem to have anywhere between 1 to 5 years of programming experience. Interestingly, **one third** of *men* have more than 5 years of programming experience, whereas this figure for *women* falls of to **one fifth**. "}}