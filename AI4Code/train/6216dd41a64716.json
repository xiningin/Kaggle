{"cell_type":{"f4c7544e":"code","1c0bb736":"code","1b44d4d8":"code","d16933d5":"code","61cab964":"code","ff6c7e35":"code","f8376e52":"markdown"},"source":{"f4c7544e":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)","1c0bb736":"s1 = pd.read_csv(\"..\/input\/tpsjuly2021bestsubmissions\/1_submission_pycaret.csv\")\ns2 = pd.read_csv(\"..\/input\/tpsjuly2021bestsubmissions\/2_submission_gam.csv\")\ns3 = pd.read_csv(\"..\/input\/tpsjuly2021bestsubmissions\/3_submission_catboost.csv\")\ns4 = pd.read_csv(\"..\/input\/tpsjuly2021bestsubmissions\/4_sumbission_autogluon.csv\")","1b44d4d8":"s = pd.concat([s1, s2, s3, s4]).groupby(level=0).mean()","d16933d5":"s['date_time'] = s4['date_time']","61cab964":"s = s[['date_time', 'target_carbon_monoxide', 'target_benzene', 'target_nitrogen_oxides']]","ff6c7e35":"s.to_csv('submission_average_weighted_blend.csv', index=False)","f8376e52":"UPVOTE if you like it!!\n\nIntuition: Group of high performing models tend to perform better than a single model.\n\nFuture works:\n1. Instead of average wieghts, we can consider different weights for each submissions.\n2. We can collect OOF for these models and use the OOFs values into an optimiser. Refer: https:\/\/www.kaggle.com\/gogo827jz\/optimise-blending-weights-with-bonus-0\/\n\nCredits:\n\n1. https:\/\/www.kaggle.com\/junhyeok99\/automl-pycaret\/notebook?select=sub_tps_2021_07_03_0940.csv\n2. https:\/\/www.kaggle.com\/paddykb\/tps-07-gam-baseline\/output\n3. https:\/\/www.kaggle.com\/maximkazantsev\/tps-07-21-eda-catboost\/output?select=submission.csv\n4. https:\/\/www.kaggle.com\/alessandrobenetti\/feature-engineering-automl-with-autogluon\/notebook?select=sumbission.csv"}}