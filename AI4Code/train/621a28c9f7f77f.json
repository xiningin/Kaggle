{"cell_type":{"26d14f92":"code","53118ca4":"code","4632f18d":"code","21677661":"code","55da06cf":"code","9735363b":"code","dc0a84aa":"code","3105e36e":"code","c4526ff9":"code","0d9fd576":"code","05397d62":"code","bdb9465a":"code","cef20bf8":"code","47b3643c":"code","68dd5454":"code","4097ad90":"code","9e2bcf42":"code","b6408445":"code","453c77f2":"code","190572ab":"code","44a4707b":"code","b6f1ae5d":"code","7bdfb593":"code","403538ad":"code","ec84854d":"code","83ee4758":"code","e850580a":"code","10d4563b":"code","a9a90cfe":"code","d88b97d7":"code","84f9f049":"code","325e1770":"code","b883b90f":"code","002eaebc":"code","86e2bfdb":"code","954f5e94":"code","3818532c":"code","b98527a6":"code","38c765e9":"code","20a63615":"code","2c3eb013":"code","5ca7ac91":"code","da28b636":"code","6d91bcc0":"code","26a0d040":"code","6756d64b":"code","ffeea277":"code","44a94cd8":"code","59c803f8":"code","e7f6ffa2":"code","3a7455f3":"code","00017803":"markdown","cc9dc715":"markdown","71bf7a3f":"markdown","aa446fc4":"markdown","154c521e":"markdown","67e7f7e6":"markdown","bbdbb2a8":"markdown","ce9a90a6":"markdown","6f67ca37":"markdown","63362162":"markdown","5d8f4e8f":"markdown","246de62e":"markdown","e5e4b5b5":"markdown","48bbc597":"markdown"},"source":{"26d14f92":"import pandas as pd\nimport pandas as pd\nimport numpy as np \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')\n","53118ca4":"df= pd.read_csv('..\/input\/delhi-weather-data\/testset.csv')\ndf.head()\n","4632f18d":"data = pd.DataFrame(list(df[' _tempm']), index=df['datetime_utc'], columns=['temp'])","21677661":"data","55da06cf":"df=data[:365]","9735363b":"df.shape","dc0a84aa":"df.isnull().sum()","3105e36e":"df=df.dropna(axis=0)","c4526ff9":"df.shape","0d9fd576":"df=df['temp'].values","05397d62":"df[:5]","bdb9465a":"df=df.reshape(-1,1)","cef20bf8":"plt.figure(figsize=(25, 7))\nplt.plot(df, linewidth=1)\n# plt.grid()\nplt.title(\"Time Series (temperature month wise for 1 year)\")\nplt.show()","47b3643c":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler(feature_range=(0, 1))\ndata_scaled = scaler.fit_transform(df)","68dd5454":"data_scaled[:5]","4097ad90":"data_scaled.shape","9e2bcf42":"steps= 20\ninp = []\nout = []\nfor i in range(len(data_scaled) - (steps)):\n    inp.append(data_scaled[i:i+steps])\n    out.append(data_scaled[i+steps])","b6408445":"out[:10]","453c77f2":"import numpy as np","190572ab":"inp= np.asanyarray(inp)\nout= np.asanyarray(out)","44a4707b":"len(df)*0.65","b6f1ae5d":"x_train = inp[:237,:,:]\nx_test = inp[237:,:,:]    \ny_train = out[:237]    \ny_test= out[237:]","7bdfb593":"inp.shape","403538ad":"x_train.shape","ec84854d":"x_test.shape","83ee4758":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom tensorflow.keras.layers import Dense,RepeatVector, LSTM, Dropout\nfrom tensorflow.keras.layers import Flatten, Conv1D, MaxPooling1D\nfrom tensorflow.keras.layers import Bidirectional, Dropout\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.utils import plot_model","e850580a":"model = Sequential()\nmodel.add(LSTM(50, return_sequences= True, input_shape= (20,1)))\nmodel.add(LSTM(50, return_sequences=True))\nmodel.add(LSTM(50))\nmodel.add(Dense(1))\nmodel.compile(loss = 'mean_squared_error', optimizer = 'adam')\nmodel = Sequential()\nmodel.add(LSTM(50, return_sequences= True, input_shape= (20,1)))\nmodel.add(LSTM(50, return_sequences=True))\nmodel.add(LSTM(50))\nmodel.add(Dense(1))\nmodel.compile(loss = 'mean_squared_error', optimizer = 'adam')\n\n\n\n\n\n","10d4563b":"model.fit(x_train,y_train,epochs=300, verbose=1, )","a9a90cfe":"# model.evaluate(x_test, y_test)","d88b97d7":"print(\"Predicted Value\",model.predict(x_train)[4][0])\nprint(\"Expected value\",y_train[4][0])","84f9f049":"predictions=model.predict(x_test)","325e1770":"print(\"Predicted Value\",predictions[2][0])\nprint(\"Expected Value\",y_test[2][0])","b883b90f":"predictions.shape","002eaebc":"y_test.shape","86e2bfdb":"pred_df=pd.DataFrame(predictions)","954f5e94":"pred_df['TrueValues']=y_test","3818532c":"pred_df_new = pred_df.rename(columns={ 0: 'Predictions'})","b98527a6":"pred_df_new","38c765e9":"plt.figure(figsize=(12,8))\nsns.lineplot(data= pred_df_new)\nplt.title(\"Predictions VS True Values on Testing Set\")","20a63615":"data_scaled.shape","2c3eb013":"x_input=data_scaled[:20]","5ca7ac91":"x_input.shape","da28b636":"# now reshaping the data\nx_input = x_input.reshape(1, -1)","6d91bcc0":"x_input.shape","26a0d040":"# x_input = x_input.reshape((1, 20,1))\n# yhat = model.predict(x_input, verbose=0)","6756d64b":"temp_input = list(x_input)\ntemp_input = temp_input[0].tolist()","ffeea277":"# demonstrate prediction for next 10 days\nfrom numpy import array\n\nlst_output=[]\nn_steps=20\ni=0\nwhile(i<30):\n    \n    if(len(temp_input)>20):\n        #print(temp_input)\n        x_input=np.array(temp_input[1:])\n        print(\"{} day input {}\".format(i,x_input))\n        x_input=x_input.reshape(1,-1)\n        x_input = x_input.reshape((1, n_steps, 1))\n        #print(x_input)\n        yhat = model.predict(x_input, verbose=0)\n        print(\"{} day output {}\".format(i,yhat))\n        temp_input.extend(yhat[0].tolist())\n        temp_input=temp_input[1:]\n        #print(temp_input)\n        lst_output.extend(yhat.tolist())\n        i=i+1\n    else:\n        x_input = x_input.reshape((1, n_steps,1))\n        yhat = model.predict(x_input, verbose=0)\n        print(yhat[0])\n        temp_input.extend(yhat[0].tolist())\n#         print(len(temp_input))\n        lst_output.extend(yhat.tolist())\n        i=i+1\n    \n\nprint(lst_output)","44a94cd8":"day_new = np.arange(1,363)\nday_pred = np.arange(363,393)","59c803f8":"plt.figure(figsize=(12,8))\nplt.plot(day_new,data_scaled)\nplt.plot(day_pred,lst_output)","e7f6ffa2":"data_scaled[:5]","3a7455f3":"df3 = data_scaled.tolist()\ndf3.extend(lst_output)\nplt.figure(figsize=(12,8))\nplt.plot(df3)\n","00017803":"### Weather Predictions for next 30 Days","cc9dc715":"Predictions on testing set","71bf7a3f":"reshape ","aa446fc4":"creatitng a  functions which returns the next 30 days prediction","154c521e":"#### In this project we are going to use weather dataset for time series forecasting and we are predicting future 30 days weather by using LSTM","67e7f7e6":"Time series analysis is a statistical method to analyse the past data within a given duration of time to forecast the future. It comprises of ordered sequence of data at equally spaced interval.To understand the time series data & the analysis let us consider an example. Consider an example of Airline Passenger data. It has the count of passenger over a period of time.\n\n","bbdbb2a8":"#### Scaling data ","ce9a90a6":"Predictions on training set","6f67ca37":"Now we are using only data for 365 days","63362162":"### Model Building","5d8f4e8f":"## Thanks You!!!!","246de62e":"### Predictions and Model evaluation","e5e4b5b5":"we are using last 10 days input for 1st day output","48bbc597":"## Weather forecasting using LSTM"}}