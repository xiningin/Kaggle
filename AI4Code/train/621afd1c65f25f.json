{"cell_type":{"bc7b6d8c":"code","49883e7c":"code","e484b711":"code","31ec2a9a":"code","05cdd2da":"code","d6ce6c38":"code","e8061e7a":"code","21020a4f":"code","63982fe3":"code","8c0b25e3":"code","614f59f5":"code","27d1050e":"code","ba4133ac":"code","40fe544e":"code","b74fd9df":"code","f84a9971":"code","ead131c0":"code","6c07fb51":"code","c1d5ec97":"code","7053a09f":"code","bceb8bd0":"code","e44fe78f":"code","aed11be6":"code","f651f8c4":"code","2f64dd44":"code","6118866c":"code","ef475084":"code","f1d8e9d7":"code","3d711993":"markdown","d284edd8":"markdown","e78b7036":"markdown","5c947bcd":"markdown","3f611527":"markdown","5996f9bb":"markdown","8ddc2c94":"markdown","19069963":"markdown","ad3a7cbb":"markdown","a8edb710":"markdown","bcacdc33":"markdown","2d18e1d8":"markdown"},"source":{"bc7b6d8c":"# Can create a tuple with mixed types\nt = (1,2,3)","49883e7c":"# Check len just like a list\ntype(t)","e484b711":"# Can also mix object types\nt = ('yeah',2)\n\n# Show\nl = ['aniket','gaikwad']\nl.sort()\nl","31ec2a9a":"# Use indexing just like we did in lists\nt[0]","05cdd2da":"# Slicing just like a list\nt[-1]","d6ce6c38":"# Use .index to enter a value and return the index\nt.index(89)","e8061e7a":"# Use .count to count the number of times a value appears\nt.count('yeah')","21020a4f":"t[0]= 'change'","63982fe3":"t.append('nope')","8c0b25e3":"x = set()","614f59f5":"# We add to sets with the add() method\nx.add(3)","27d1050e":"# Add a different element\nx.add(2)","ba4133ac":"x","40fe544e":"# Make a dictionary with {} and : to signify a key and a value\nmy_dict = {True:'value1','key2':'value2','key1':'valuedfvdfg','key1':'abc'}\nmy_dict","b74fd9df":"my_dict = {'key1':123,'key2':[12,23,33],'key3':['item0','item1','item2']}","f84a9971":"# Can call an index on that value\nmy_dict['key3'][0]","ead131c0":"#Check\nmy_dict['key1']","6c07fb51":"# Dictionary nested inside a dictionary nested in side a dictionary\nd = {'key1':{'nestkey':{'subnestkey':'value'}}}","c1d5ec97":"# Keep calling the keys\nd['key1']['nestkey']","7053a09f":"# Create a typical dictionary\nd = {'key1':1,'key2':2,'key3':3}","bceb8bd0":"# Method to return a list of all keys \nf=d.keys()\nlist(f)[0]","e44fe78f":"# Method to grab all values\ntype(d.values())","aed11be6":"# Method to return tuples of all items  (we'll learn about tuples soon)\nd.items()","f651f8c4":"thislist = [\"apple\", \"banana\", \"cherry\"]\nprint(thislist)","2f64dd44":" thislist = [\"apple\", \"banana\", \"cherry\"]\nprint(thislist[1])","6118866c":"thislist = [\"apple\", \"banana\", \"cherry\"]\nprint(thislist[-1])","ef475084":"thislist = [\"apple\", \"banana\", \"cherry\", \"orange\", \"kiwi\", \"melon\", \"mango\"]\nprint(thislist[2:5])","f1d8e9d7":"thislist = [\"apple\", \"banana\", \"cherry\"]\nthislist[1] = \"blackcurrant\"\nprint(thislist)","3d711993":"**LETS START WITH OUR FANTASTIC FOUR!!**\n* Tuples\n* Lists\n* Sets\n* Dict","d284edd8":"# THANK YOU FOR LEARNING!! STAY TUNED FOR MORE!","e78b7036":"**NESTED DICT**","5c947bcd":"**What errors do we get while using tuples?**","3f611527":"# TUPLES\n\nIn Python, tuples are similar to lists but they are immutable i.e. they cannot be changed. You would use the tuples to present data that shouldn't be changed, such as days of week or dates on a calendar.","5996f9bb":"**REMEMBER! YOU ARE DOING GREAT.JUST KEEP GOING....**","8ddc2c94":"# HELLO EVERYONE!! PYTHON IS EASY!!!! LET ME SHOW YOU!","19069963":"# DICTIONARIES\n\nWe have learned about \"Sequences\" in the previous session. Now, let's switch the gears and learn about \"mappings\" in Python. These dictionaries are nothing but hash tables in other programming languages.","ad3a7cbb":"# LISTS\n\nA list is a collection which is ordered and changeable. In Python lists are written with square brackets.","a8edb710":"**METHODS ON DICTIONARY**","bcacdc33":"**Immutability**\n\nRemember, we cannot change the elements of tuple!\n\nJust have a look at the errors below!","2d18e1d8":"# SETS\nSets are an unordered collection of unique elements which can be constructed using the set() function.\n\nLet's go ahead and create a set to see how it works."}}